{
    "title": "Arabian Nights Ch. 04",
    "pages": [
        "At first, we don't really know what to do. After weirdly deciding that we're going to \"date,\" we sit there awkwardly for a bit, laughing in that silly, nervous way two kids do when they admit they have crushes on each other. It feels so childish, so juvenile -- but at the same time, I'm all about it. I just don't know what to do next. The only question in my head is: \"Now what?\"\n\nIt's not like we act differently. Our flow remains the same for the rest of the night: we shower separately, get ready for bed separately, sleep in our separate beds. Nothing noticeably changes -- until the next morning, that is.\n\nI'm leaning against the counter, chugging some OJ out of the carton and checking up on social media when Zane shuffles into the kitchen, having clearly just rolled out of bed. His hair is a mess and he's only wearing his boxer briefs and his eyes are sleepier than usual. I chuckle when he wanders in, and he smiles at me sleepily.\n\n\"'Morning,\" I tell him.\n\n\"'Morning,\" he mumbles back, running his hand over his face.\n\nI laugh. \"Rough night?\" I tease.\n\n\"You have no idea,\" he says, and as he passes me, he leans in for a quick kiss on the lips. I'm stunned for a moment, and when Zane pulls back, he looks just as surprised as I feel. We stare at each other for a second, confused -- not by the kiss itself, but how strangely natural that felt. It was automatic and totally organic, like we've been doing it for years.\n\nAnd then, both of us burst out laughing at the same time. \"That was...\"\n\n\"Yeah,\" he says, shaking his head.\n\nThere's a pause before I snort again. \"Um. Anyway. Want some OJ?\" I offer him the carton.\n\nHe smirks and says, \"Thanks *babe*\" before grasping the carton and taking a swig.\n\nI roll my eyes. \"Don't.\"\n\nHe laughs after swallowing. \"Too much?\"\n\n\"It just sounds weird coming from your mouth,\" I tell him.\n\n\"You signed up for this, you know,\" he says with a grin, handing me back the orange juice before turning around to rummage the cabinets for cereal.\n\n\"I know,\" I say. As I take another sip of the OJ, my eyes are fixed on Zane's backside, eyeing his musculature, the dimples in his lower back, the way his underwear hugs each cheek of his (frankly) deliciously-fat ass. I guess I don't have to discreetly ogle him anymore now that things are out in the open. \n\n\"You have any plans tonight?\" he asks, going for the Raisin Bran. \n\n\"Might kill a man later,\" I joke, and Zane chuckles as he pours his cereal into a bowl, \"but I can probably reschedule.\"\n\n\"Reschedule, then,\" he says, looking back at me with a grin.\n\n\"I'll need a reason.\"\n\n\"I was thinking,\" he says, pausing at the fridge, \"that we could... y'know, go out tonight.\"\n\nI smirk slightly. \"Like on a date?\"\n\n\"Yeah, like on a date,\" he says, eyeing me over once before grabbing milk out of the fridge. \"I'm sure you could push back your murder plans a couple hours.\"\n\n\"For you? Sure,\" I say, and he smiles at me cheekily as he gets his breakfast ready. \"What do you wanna do?\"\n\nHe shrugs, shoveling a spoonful of cereal into his mouth. \"Was thinking something basic, like dinner and a movie.\" He swallows his bite before adding, \"To be honest, I just really want to go to Pho Saigon again.\"\n\nEven though it's breakfast, my mouth waters at the thought of Vietnamese food later on. \"That sounds so good right now.\"\n\n\"Right?\" he says, grinning. \"And it's right near that nice theater. The one with the reclining chairs.\"\n\nThat *is* a pretty nice place. They even serve alcohol there. \"I don't even know what's out, though,\" I say, trying to think of a movie preview that I've seen recently.\n\nZane just grins a bit. \"There's that Aladdin remake...\"\n\n\"Oh God no,\" I say with a laugh. A live-action version of Aladdin came out, and even though I'm undoubtedly curious as to how they revamped my favorite childhood movie of all time, I know it'll be bad. I just know it. Live-action remakes are never a good idea.\n\n\"It could be fun,\" he says with a laugh. \"And I know you're curious.\"\n\n\"I mean... Maybe a little.\"\n\n\"Good enough for me.\" He smiles and then comes over to me. I swallow thickly as he gets closer, and his eyes home in on my lips before he leans down and kisses me again -- this time, holding it for just a little longer. \"Mmm,\" he says when he pulls back, and I laugh, looking away shyly. I can feel him grinning at me, but all he says is that he'll be in the living room before exiting the kitchen and leaving me alone with a fluttering sensation in my chest.\n\n~ ~ ~\n\nIt's only a thirty-minute stroll to that area of town, so Zane and I decide to take advantage of the good weather and walk to Pho Saigon. Even though it's not *terribly* hot, part of me wishes I settled on wearing shorts instead of jeans. I spent a good ten minutes fussing over what to wear after I showered as if Zane was someone I was trying to impress. When I realized I didn't need to pull out all the stops for someone who's been invested in my life since we were infants, I felt instantly more relaxed and settled with jeans and a simple t-shirt -- and *still*, Zane smiled at the sight of me and said I looked good. It was so strange to accept such a simple compliment from him. I felt like I was glowing.\n\nTowards the beginning of the walk, I do something I usually do with someone I've dated for a while: I hold his hand. I reach over, and when I take Zane's hand in mine, he looks down, pauses, and then laughs. \"What the hell?\"\n\n\"What?\" I say with a little grin. \"I like holding hands. Get used to it.\"\n\n\"Fuck, you're gayer than I am,\" he teases, but he responds by shifting our hands so that our fingers lock together instead of just our palms. I smile gently to myself, appreciating how nicely we both fit into the spaces between our fingers. \"You know we're in public, right?\" he asks after a moment.\n\n\"Yeah.\"\n\n\"And you're cool with that?\"\n\nI bite my lip, looking around a bit as we walk down the sidewalk. \"I think so.\"\n\nHe chuckles softly. \"If you wanna let go, I won't be offended.\"\n\nBut I don't let go. I'm determined to hold his hand the entire trip to the restaurant, if just to test myself. I'm fully aware of people looking at us as we walk by. None of the looks are noticeably disapproving, though -- and even if they were, I'm sure my good feelings would make me barely cognizant of any negativity. I feel as giddy as I was with my first-ever girlfriend, but with an infinitely more special twist.\n\nWe don't separate our fingers until we get to the restaurant, and the hostess leads us to a two-person table before giving us menus and heading back to her podium. I sit back in my chair with a sigh, my eyes on Zane even as a waitress comes by to pour us waters. We're on a fucking date. A romantic date, our first one. How the hell did this happen?\n\n\"I told Baba that we made out,\" I say suddenly as we both scope out the menu.\n\nZane looks up at me with slightly wider eyes. \"You *did*?\" he asks, a mix of surprised and amused. \"When?\"\n\n\"After your surprise coke party,\" I mutter, and he blushes but laughs slightly.\n\n\"You didn't tell him about--?\"\n\n\"No, I didn't tell him about the fucking coke, dumbass,\" I murmur, shaking my head.\n\n\"Just making sure, sheesh,\" he says, biting back a smile. \"Well? What'd he say?\"\n\n\"'Finally'.\"\n\nZane blinks a bit, leaning in more for clarification. \"'Finally'?\"\n\n\"Yep. Apparently he and Rashida have had it in for us for a while now.\"\n\nZane seems to find that particularly funny, because he lets out a loud enough laugh to draw reproachable stares from the couple nearby. \"Nice to know we have their blessing,\" he says, shaking his head with a grin as his eyes go back to the menu.\n\nI look at him for a moment before asking a question. \"You haven't talked to Seth at all, right?\"\n\nZane looks up at me only with his eyes before shaking his head. \"Nope. Avoiding that shit like the plague for now.\"\n\nI wince a bit. \"Probably best,\" I murmur. Who knows how that man is doing?\n\nZane scoffs. \"I wonder what he'll say when he finds out you and me are...\" He trails off, smirking slightly. \"Well, *if* we get together.\"\n\nI laugh. \"Having doubts already?\"\n\n\"I'm giving you a chance, baby, don't worry,\" he says with a teasing wink. When I roll my eyes, Zane just chuckles to himself.\n\nDinner goes by nicely. It doesn't feel *too* different from any other time we've gone out together, but I do notice that everything has that slight romantic edge to it -- like I'm looking at him through a different lens. He looks handsomer, sexier, more carnally appealing. He seems more attentive, more playful. And his eyes? They're piercing. His eyes feel like they're seeing me, really seeing me.\n\nAnd then, when we get the check, something hits me. Usually it doesn't matter which one of us picks up the bill. Sometimes one of us handles the whole thing, and sometimes we split it if we have cash, but it never seems to matter either way. We don't even have running tabs on each other. Now, though, it seems strange. Do I be the gentleman and pay the bill? I can't even use that stupid fake-feminist \"Let the girl pay the bill\" excuse because Zane is no girl. So, who pays? Suddenly it's imperative that this question be answered. I completely flood myself with sudden anxiety. I don't know why my head is fucking with me like this right now, but the looming presence of the bill is stressing me out and reminding me how odd and sudden this all is.\n\nI decide to be vocal about it. \"This is so weird,\" I say aloud.\n\nZane looks up after he checks the price on the bill. \"What is?\"\n\n\"Us.\"\n\nHe raises an eyebrow, keeping his attention on me. \"Too weird for you?\"\n\n\"No, just... weird,\" I say, unsure what I'm actually trying to get at. I decide to pick his brain a bit. \"How you feelin'?\"\n\n\"You know me, dude,\" he says gently, smiling a little bit. \"I just like being with you.\"\n\nA feel a smile form on my lips, so natural and automatic, so responsive to Zane's energy. I feel the same way. I just like being with Zane, and that's all there is to it. \"Maybe we're still thinking about this too hard,\" I say. Correction: maybe *I'm* still thinking about this too hard. Relax, Khalid. It's just a check, and it's just Zane.\n\n\"Maybe,\" Zane says softly, licking his bottom lip. Then, after seeing me bug out for a moment, Zane offers a solution: \"Wanna get drunk and fool around?\"\n\nI grin a little wider, my groin tickling. Maybe that's all we need to be doing: having fun and getting physical. \"Hell yeah.\"\n\nWe decide to split the bill clean in half before wandering around downtown. On the way back towards the apartment, we come across a bar we've never been in. It's a bit stuffy, but it's not overly crowded like most bars are on a weekend, and we decide that this is a decent enough place to at least grab a few shots and be on our merry way. However, after our fourth shot of tequila, eight o'clock hits -- and apparently, it's karaoke night. \n\n\"Guess we came at a good night,\" Zane says with a slight grin when the KJ makes the announcement that karaoke will be up and running in fifteen minutes. He's leaning his back against the bar, facing the small stage situated across the room.\n\nI glance at him, swiveling in my chair to face him. \"You should sign up.\"\n\nHis head whips towards me. \"Are you crazy? No way.\"\n\n\"C'mon,\" I say with a grin, tugging on his shirt. \"You're good, man.\" Zane just rolls his eyes and scoffs, and I laugh. \"What?\" \n\nHe just smirks slightly to himself. \"You're being an ass.\"\n\n\"I'm being dead fucking serious,\" I tell him, putting my hand on his thigh. \"You've got a great voice. Plus... I need some embarrassing footage of you for blackmail purposes.\"\n\nThat gets a laugh out of him. \"Oh, so *that's* why you want me to sing in front of a bunch of fuckin' strangers.\"\n\n\"C'mon, pleeease?\" I say, leaning in a bit. I put my chin on his shoulder, trying my best to peer pressure him into it.\n\nHe tries to avoid looking at me. \"No, dude. I'm not good enough for that.\"\n\n\"First of all, you are, and second of all, it'd make me happy,\" I say, pulling that manipulative trick.\n\nHe rolls his eyes again. \"Since when do I care about that?\" he says with a grin.\n\n\"Come onnn,\" I groan, feeling drunk enough to keep pestering him. \"What'll make you say yes?\" I ask with a slightly sultry tone to my voice.\n\nZane peeks at me through the corner of his eye, smirking. \"If you suck my dick--\"\n\n\"Done,\" I say immediately, not even letting him finish his sentence.\n\nHe turns his face towards me a bit, searching my eyes, probably deciding whether or not I'm to be taken seriously. After a minute, he sighs, pushing me away before slapping the bar to get the bartender's attention. \"I'll need a few more shots,\" he says. \"Quickly.\" I just chuckle, my chest tingling with excitement.\n\nOnce we each have a few rounds of additional shots, Zane stands up and shakes off the nerves a bit, clearly feeling the alcohol hitting him. \"I don't even know what song to sing.\"\n\nI stand next to him, adjusting his shirt and patting his chest like I'm his boxing coach about to send him off into the ring. \"You know Sinatra well.\"\n\nHe makes a face. \"Sinatra's not appropriate for a bar, dude.\"\n\n\"Well I don't fuckin' know,\" I say with a laugh. \"Do something fun, then.\"\n\nBut Zane is already grinning, clearly settling on something in his head. \"I have an idea,\" he murmurs before kissing my cheek and then heading to the end of the bar where the KJ is set up. I sit down in my seat, eyeing Zane curiously and trying to listen in on their conversation. He first asks her if this is where people sign up for karaoke, and when she confirms, he smiles. \"Great! Do you have any Disney?\"\n\nShe looks surprised that someone would ask that question. \"Um... I do, actually.\"\n\n\"Sweet,\" Zane says with a grin. \"What songs specifically?\"\n\nShe almost laughs, giving Zane a look that's essentially asking if he's serious. \"Really?\" she asks. \"C'mon, man, no one's gonna wanna hear Disney.\"\n\n\"It'll be fun,\" he says, trying to be charming.\n\n\"I'm gonna have to say no to that one,\" she says.\n\n\"C'mon, please? It's for my boyfriend.\" Zane points to me, and when she looks in my direction, I smirk and give her a tiny wave, trying my best not to laugh. For a moment, she seems to soften and reconsider. Maybe she thinks it's sweet that this big dude wants to sing some Disney classics for his lover.\n\nBut in the end, she still shakes her head no. \"Sorry, big guy.\"\n\nZane looks at me, biting his lip for a moment. He seems to ponder something for a second -- and then, in an instant, he's leaning over the KJ's little booth and snatching her microphone from her table mic stand. He brings it to his lips and immediately starts singing a song my brain instantly recognizes as from Aladdin: \"Arabian niiights, like Arabian daaays, more often than not are hotter than hot in a lot of good waaays!\"\n\nI burst the fuck out laughing, watching the poor girl attempt to snag the mic out of his hands before he pulls away. But he's too quick for her. He sidesteps her attempts to stop him and moseys through the bar with the microphone cord dragging behind him, singing drunkenly at the top of his lungs while the KJ tails after him. \"Arabian niiights 'neath Arabian moons...\" \n\nI'm not the only one who finds this funny. A lot of women particularly are snickering or cheering him on, and a couple gruff-looking gentleman slam their pints down on the tables with glee -- but eventually (and all too quickly), Zane's fun is cut short. A hulking stranger (who, by his facial expression, clearly doesn't find this amusing) blocks Zane's way. Zane stops mid-song and laughs before playfully apologizing for his little stunt, turning around, and handing the KJ her mic. Still, even as the KJ gives him an irritated look, the bar erupts in cheers for Zane's brief but beautiful display of showmanship, and he has a wide grin on his face as he makes his way back to me.\n\nI laugh and clap for him as he gets closer. \"That was incred--\" But I'm cut off by Zane planting his lips firmly on mine, kissing me hard. I moan a bit, caught off-guard by how quickly I'm melting into this kiss.\n\nBefore I can really get into it, Zane pulls away, grinning at me slackly. \"I'm so fucking drunk,\" he says with a laugh, his arms on either side of me, pinning me to my seat against the bar.\n\nI chuckle softly. \"I can tell.\" He smirks, eyes flickering to my lips once before suggesting we still see Aladdin like originally planned. \"What?\" I ask. \"Why?\"\n\n\"Because I wanna make out with you in the back of a theater,\" he says, looking like he's resisting all urges to kiss me right now. \n\nI just grin. \"We could do that at home, dude.\"\n\nHe rolls his eyes before sighing, leaning in even closer so that he doesn't talk so loudly. \"Fine, I'll be honest,\" he says, his facial hair tickling my cheek as he murmurs in my ear. \"I wanna suck your cock in the back of a theater.\"\n\nWell, that gets my attention. I gulp, my body responding. Suddenly, I'm forgetting all about our previous agreement. The thought of my dick getting any sort of attention right now is completely filling my head. \"Isn't it too late?\" I ask.\n\n\"Check.\"\n\nI bite my lip, pulling my phone out and checking movie times at the nearby cinema. \"Last show's at... 9:45,\" I say.\n\n\"What time is it now?\"\n\n\"Almost 9:30.\"\n\n\"Perfect.\" He grabs my hand and tugs me out of my chair, smirking. \"C'mon, stud.\"\n\nGiggly and drunk, we quickly leave the bar and start heading towards the theater. We only just make it to the movie on time because we got sidetracked (aka, we hardcore made out in a dingy alleyway for three minutes) and then ended up walking in the wrong direction for a bit. By the time we pay for our tickets and head into the theater, the final preview is just ending. The two of us find a seat as far back as we can manage, smiling at the people we pass by: three or four separate couples, and two large families that have a set of kids each. No one's in the back row, though, so there's plenty of opportunity to do what's on Zane's mind. \n\nThe seats are great because you can both recline them and lift the armrests up. The row of seats can effectively become an elongated couch if we were with a dozen people. We don't go as far as lifting *all* of them, but we lift the armrest in between us so that we can be close. \n\nI've barely gotten myself comfortable when Zane leans over and kisses me deeply. I laugh against his lips but quickly find myself falling into motion, kissing him back fervently, our tongues taste-testing each other. With the alcohol in my system, I can only really focus on him: his lips, and his hand sliding down my front. Once his hand reaches my waist, he makes quick work of my jeans, opening them up and slipping a warm hand inside. I moan out hard enough to break the kiss, and both of us laugh quietly against each other.\n\n\"I've never done something like this,\" I admit, referring to the whole \"getting my dick sucked in public\" thing.\n\n\"I'll take good care of you,\" Zane says with a grin, kissing me firmly once before shifting his mouth down to my lap. My eyes open wide when I feel his soft, sure lips wrap around my growing cock. It doesn't take long for him to bring me to hardness. I hold my hand on the back of his neck as he bobs up and down in my lap, sucking me slowly and deeply. Even over the music in the movie, I can hear those soft, wet sucking noises pretty clearly, and the thrill of people being in the row in front of us is surprisingly strong.\n\nZane pulls off before reaching into my underwear to fish my balls out. Then, with one hand lightly stroking me, he kisses and laps at them. I groan softly, slouching a little more in my chair and gently squeezing the back of Zane's neck. He takes one ball into his mouth at a time, rolling them around with his tongue and causing my cock to throb. A thick drop of precum escapes the head of my dick and when Zane feels it drop against his thumb, he rubs it along the underside of my cock, getting another happy moan out of me.",
        "He glances up at me with a grin before kissing his way up the shaft and taking me right back into his mouth. He's working double-time now, stroking me in time with his head movements. He works every inch of my cock, his lips pursing at the tip every time he gets to the head and his fingers uncurling around my shaft when he hits the base. It's much louder now, his sucking noises. Any adult here listening hard enough would immediately think, \"Oh. Someone must be getting some sloppy fucking head.\" I think Zane's doing it on purpose. But *goddamn*, does it feel good.\n\nI feel my toes tensing in my shoes as my orgasm quickly builds, doing my damned best to stay somewhat quiet. Right on the edge of climax, I let out a small groan before suddenly, the volume of the movie diminishes during a quiet scene, and the lewd sounds of my best friend coaxing the cum out of me practically echo off the theater walls. I lose it right then and there. I gasp a little, tensing and thrusting my hips up into his mouth as I cum over, and over, and over. Maybe it's because I'm drunk, but my orgasm feels more drawn-out than usual. Zane slows down his motions, humming slightly and audibly gulping down my load. He pants for a moment, taking a breather even with half of my cock in his mouth before he wraps his lips firmly around my shaft and sucks me absolutely dry.\n\nWhen he pulls off, he inspects my semi as if making sure he didn't miss a drop before he tucks it back into my underwear for me and sits up straight with a smug grin on his face. I look over at him as I zip up my jeans, slightly amused.\n\n\"Proud of yourself or something?\" I ask with a grin.\n\n\"More like 'satisfied',\" he says with a laugh.\n\nI chuckle slightly, feeling a weird mix of embarrassed and totally thrilled. \"Want me to...?\" I gesture towards his crotch.\n\nHe shakes his head. \"Nah,\" he says, leaning over and putting his arm around me. \"Let's just watch the movie.\"\n\n\"You sure?\"\n\n\"Yeah. You can make it up to me later,\" he says with a little grin.\n\nWe set our focus to the movie screen, resting against each other lightly. I purposefully didn't have high expectations for this movie so that I wouldn't be disappointed, but there was a small part of me (the little kid in me, probably) that had prayed this would live up to the magic of the original. After all, how many large-scale American movies featuring Arabs are there? In a way, it's a big deal. But I'm annoyed that I still feel disappointed -- betrayed, even. I've said it once and I'll say it again: live-action remakes are never a good idea.\n\nI lean over towards Zane about thirty minutes into the film. \"This movie... is terrible,\" I mutter, and both of us chuckle quietly.\n\n\"It *is* pretty bad...\"\n\n\"Should we just leave?\" I ask, resolving myself to the fact that there's no saving this film.\n\nZane shrugs. \"We paid. Might as well finish it.\"\n\nBut Zane can't even do that. Not even ten minutes later, he ends up dozing off against my shoulder, and I smile slightly, kissing the top of his head and letting him sleep while I suffer through the rest of this movie. The movie may be a shitshow, but sitting here with Zane, slowly sobering up from several shots and an excellent blowjob, I feel fine.\n\nOnce the credits start rolling, I nudge Zane in the side with my elbow, and he jolts awake with a grunt, blinking and looking around. \"*Fuck*,\" he groans, laughing and looking at me. \"I fell asleep.\"\n\n\"I noticed.\"\n\n\"I'm sorry,\" he says, giving me a sleepy, apologetic look.\n\n\"Your loss,\" I say cheekily. \"You missed out on one of the shittiest movies I've ever seen.\"\n\nHe laughs. \"That bad?\"\n\nI shrug. Maybe it wasn't *that* bad, but it's a stain on my favorite childhood story. \"Bad enough,\" I say. I just pat his thigh, giving it a squeeze before standing up and stretching. \"C'mon, big boy. Let's get home.\"\n\nAll those shots have somewhat started to wear off by the time we get outside and order a Lyft. Honestly, I'm surprised I was able to pay attention to that whole movie without pulling a Zane and falling asleep. Zane still looks mildly dazed, and he just smiles at me whenever he sees me looking. I wonder if he's thinking what I'm thinking: about the fact that we just had a fucking date. Dinner and a movie, with a brief interlude at a karaoke bar. All in all, it was a pretty successful evening -- the type of evening I'd be more than happy to experience again.\n\nA sweet, vibrant older woman picks us up in front of the theater, shares boisterous conversation with the two of us, and then drops us off at our apartment complex. After thanking the lady profusely and wishing her all the best in the world, we both step out into the fresh night air. \n\nZane turns to me and smiles softly -- almost in a goofy sort of way. It makes me smirk. \"What?\" I ask.\n\n\"This is the part of the date where I invite you inside,\" he says with a grin.\n\nI laugh. \"Go ahead, then.\"\n\nHe clears his throat, standing up straighter and adjusting his shirt as if he were wearing a vest. \"Wanna come up for a nightcap?\"\n\nI snort. \"'A nightcap'? What are you, forty-seven?\"\n\n\"Oh relax,\" he says, chuckling. \"It's way classier than saying, 'Do you wanna come up and fuck me?'\" \n\nI blush. \"Do you want me to come up and fuck you?\"\n\nHe smiles slyly at me, staring in silence for a few moments before cocking his head towards the building. \"C'mon.\"\n\nHe leads the way up to our apartment, using his key to unlock the door. We both laugh as he struggles with the mechanism, his inebriation clearly affecting his precision. Finally, though, he unlocks the door, and we spill into our apartment with laughs in our throats and smiles on our faces -- until Zane pins me against the door. He presses his weight completely against me, sandwiching me between his firm body and the wood behind me. We kiss slowly, deeply, his hands sliding down my sides as mine work their way up and down his muscled backside. \n\nI put both hands on his ass and tug his hips into mine so that our bulges are grinding nicely against each other. Fuck, that feels nice. It's strange still, because I'm so used to the feel of a woman. But Zane is all man, with a substantial presence between his legs -- and I feel it through his shorts, nudging against mine.\n\nHe pulls back from my lips and smiles slightly. \"Hey, so... you're still down, right?\"\n\nFor sex? Hell fuckin' yeah. But I just nod.\n\n\"Cool. I'm gonna shower first and get ready,\" he says, dipping his fingers lightly into my pocket. Something about that feels incredibly erotic. \"Meet me in my bedroom.\"\n\nI lick my lips. \"Clothes or no clothes?\"\n\nHe arches one of his thick eyebrows before eyeing me up and down quickly. \"Briefs only,\" he says with a smirk, \"please and thank you.\" With that, he laughs and then gives me a peck on the lips before separating from me and heading straight for the bathroom.\n\nI stay leaning against the door for a moment, resting the back of my head against the wood and looking up at the ceiling. Are we really about to do this? Are we really about to fuck? I feel an odd warmth throughout my body, a tingling sort of excitement at the prospect of being with Zane, *really* being with him. I glance towards the couch and suddenly remember that day I came home to catch Zane's then-boyfriend giving it to him good. The memory causes my cock to twitch back to life with anticipatory excitement.\n\nI hear the shower running, quickly followed by Zane's muffled, crooning voice, and I smile slightly. Better get ready, myself. I head straight to Zane's room, leaving my shoes, socks, jeans, and t-shirt by the door. I secure my cock into the pouch of my briefs before climbing into his bed, sighing as I rest on his undone sheets with my hands behind my head.\n\nSince the bathroom is right on the other side of the wall, I listen in on Zane's singing, smiling gently to myself, thinking back fondly on his stunt at the bar. I love that he thought of singing something from Aladdin specifically for me. As hilarious as it was, it was also... touching.\n\nA few minutes later, I hear him turn the faucet before the water shuts off, and then everything goes quiet. Soon, the bathroom door opens and Zane appears in his bedroom doorway, smirking at the sight of me half-naked in his bed. \"Hey.\"\n\n\"Hey yourself,\" I say, eyeing him. He's only in a towel, and it's wrapped snugly around his waist but leaves nothing of his upper body to the imagination, a Greek god in all his glory. \"You gonna come over here or...?\"\n\nHe chuckles a bit before reaching down and undoing his towel, letting it just drop to the floor. Now I get to see the rest of him openly, and my eyes stay fixated on that masculine appendage hanging between his legs. He slowly walks over to the bed, and after lifting his knee onto the mattress, he starts climbing over me.\n\nI gulp a bit before he leans in and kisses me, humming softly against my lips before he disengages. \"I meant to tell you earlier,\" Zane says, \"but you're a really good kisser, bro.\"\n\nI laugh slightly. \"So are you.\"\n\n\"Well I know that,\" he says cockily (which only makes me laugh harder), \"but I'm surprised by you. Well... maybe not *that* surprised, but...\" He shrugs, smirking. \"Impressed, I guess.\"\n\n\"Thank you?\" I say, grinning.\n\n\"You're welcome.\" He kisses me again with a little hum. \"It's the tongue,\" he says decidedly, as if he wasn't sure before. \"You're good with your tongue. Not too much, not too little.\"\n\n\"Kyra used to call me 'Goldilocks'.\"\n\nZane snorts. \"She did not.\"\n\n\"Did too,\" I say with a grin, flicking my tongue around suggestively.\n\nHe laughs before lapping at my tongue and then murmuring, \"I bet you eat killer pussy.\"\n\nMy mouth instantly waters at the thought. I slide my hand between us, my fingers finding his cock and quickly wrapping themselves around his thickness. He grunts a bit, his cock pulsing to life as I give him a few tender strokes. \"I eat pretty good ass, too,\" I fire back.\n\nZane licks his lips a bit. \"Yeah? You gonna show me, stud?\"\n\nI grin a bit, looking down his body. \"I mean... Yeah. But I still owe you a blowjob.\"\n\nZane laughs. \"That you do.\"\n\nI push him back so he's still straddling me, knees on either side of my thighs. I lift myself up and stay seated in front of him, planting a kiss on his furry abdomen as I look up at him. He sighs softly. I feel his cock against my chest, semi-soft and heavy, and I wrap my fingers around it so that I can stroke it to life. Zane looks down at my hand intently, watching as his thick, uncut beast slowly pulses to hardness in my grip. \n\nI look down at his manhood, eye-to-eye with it. I gulp, feeling intimidated by it yet again. But I've already had one crack at it before. Now, it's about doing better than I did last time. I start with just using my tongue, slipping my tongue into his foreskin, which immediately gets him moaning. I slide it all around the head of his cock, inhaling the scent of him. He smells clean, faintly like that body wash he uses, which is reminiscent of cologne. But, in a weird way, I can also smell the heat of him. It draws me in, making me part my lips and wrap them around his shaft, taking him into my mouth.\n\nZane inhales audibly as I shift deeper, and I stroke the base of his shaft gently while I work back and forth. This'll take some serious practice, that's for sure. I don't understand how he manages to swallow my cock so easily. He's not *that* much bigger than I am, but I guess he's the one with experience. I'm just a novice trying guys out for the first time, and of course Zane has a huge dick. It's intimidating, for sure, but at the same time, just knowing Zane is handsomely hung almost feels like an honor. Now, whenever I look at him, I can't help but think, \"Damn. He really *is* all man.\"\n\nI try to take him into my throat, and I manage getting the head down before I gag and have to pull back. Zane chuckles slightly as I take a breath before trying another time. Again, I can only get the head in, but I manage to hold him for a touch longer before I have to pull back and cough into my fist.\n\nZane laughs again, taking hold of his cock. \"You don't have to do that, you know.\"\n\n\"I just wanted to try it,\" I tell him, glancing up at him.\n\n\"Well I appreciate that,\" he says, gripping his cock firmly before swinging it at my face. I flinch when it hits me hard across the cheek, laughing along with him.\n\n\"Fuck you,\" I say, slapping his dick away.\n\nZane grins. \"Fuck me?\" he asks, cocking an eyebrow, and before I know it, he pushes my shoulders down, pinning me to the bed. \n\n\"Yeah. Fuck you,\" I murmur.\n\n\"Mmm. Fuck me, then,\" he says with a smirk, sitting up in my lap briefly. I feel his thick ass pressing right against my groin, and he grinds slightly before he turns around, straddles my chest, and presents his ass to me. \"But first... hit me with that Goldilocks treatment.\"\n\nI laugh a bit, raising my hand and bringing it down right on his ass. He grunts a bit, and I feel my cock twitch in my briefs seeing how nicely his cheeks jiggle right in front of me. I'm an ass guy. I'd argue that most of my straight friends appreciate a good pair of tits over an ass, but not me. I'm all about the backside. And now that I'm faced with the athletic glory of my best friend, my now-boyfriend... This should be interesting.\n\nI run my hands over those cheeks, enjoying the fullness of them before I spread them apart. Fuck, that hole... I stare at it in slight amazement. It'd look like any other girl's hole save for the soft fur surrounding it. I reach in to stroke it with my thumb, fascinated by it. I thought I'd be grossed out, but no. Frankly, it's turning me on. All man, just like the rest of him.\n\n\"Scooch back a bit,\" I tell him, grabbing his hips. He shimmies back without complaint, just enough for me to lean forward and, without hesitation, drag my tongue across his hole. Zane lets out a half-laugh-half-moan, clutching onto my sides. He pushes back against my face a bit, and I hit him again with my tongue -- but I don't go crazy. I stick to what I know, and that's smooth, long strokes, teasing prods, and luscious kisses. He tastes clean here too, but there's something else incredibly *him* there, an indistinct flavor that I can only describe as Zane. It only makes me want to explore him more. So eventually, while spreading his cheeks, I slowly ease my tongue into him.\n\nZane moans out softly before I feel a strong hand cupping my bulge entirely. He rubs it back and forth a few times, and upon noticing that I'm as stiff as a board in there, he peels back my underwear, pulls my cock out, and leans over to take me into his mouth for the second time tonight. I moan against his ass, reaching around to grip his thighs and hold him against my face. I just use tongue, lips, and spit to work my magic.\n\nWhen he decides that I'm wet enough, he pulls off my cock with a sigh and starts to tug my briefs off my legs. I kick them off from my ankles, and he chuckles a bit, rolling off my chest and then collapsing on his back. He rests his head near my knees, grinning at me. \"Nice job, Goldilocks,\" he teases, reaching between his legs to rub his freshly-rimmed hole.\n\nI smirk, blushing. \"Shut up,\" I say, eyes on his fingers disappearing under his heavy balls.\n\n\"What'd Kyra say about your stroke game?\"\n\nI laugh. \"Rave reviews,\" I joke. \"Ten out of ten on Yelp.\"\n\nZane chuckles to himself before letting out a soft exhale through his nose as his finger works inward. Fuck, is he fingering himself right in front of me? God, he looks so sexy right now: lightly glistening muscles, thick cock draped against his light six-pack, thick muscled thighs parted with his hand in between. \"Guess you're worth another customer,\" he teases.\n\n\"Gee, thanks,\" I say with a laugh.\n\nHe just smiles and nudges my hip with his knuckles. \"C'mere.\"\n\nI bite my lip before sitting up and then shifting towards Zane, settling into the inviting space between his legs. I rub my hands on his knees, smiling down at him before running my palms down his thighs and then resting them on his hips. I push my groin right up against him, glancing down at how my cock slides against his balls and lies against his own piece. Sometimes I like doing this with a girl: resting my dick above her pussy so I can see how deep I'd get inside of her. But Zane's cock is a total distraction.\n\n\"You look lost in thought,\" Zane says.\n\n\"Huh?\" I look up at his face, laughing. \"Sorry. I'm good.\"\n\n\"You sure?\"\n\n\"One-hundred percent,\" I say with a genuine smile, leaning over him to kiss him on the lips. Then, I reach between us, grab my cock, and slide the head of it over his taint to get to his hole.\n\nZane stops me, breaking the kiss. \"Hold up, bro,\" he says with a chuckle, reaching behind him to open the drawer of his nightstand. He rummages in it briefly before pulling out what he was feeling around for: lube. \"Unfortunately, I don't have a pussy, so...\" He tosses the bottle towards me with a grin.\n\nI roll my eyes. \"That being said, I'm surprised you're not a gaping mess by now,\" I tease, applying some lube to my cock.\n\n\"Oh, fuck off,\" he says with a laugh. \"It's been a while since I've taken anything.\" I just smirk, squirting some lube on my fingers and rubbing it onto his hole. He hums softly, reaching between his legs to casually stroke his cock. I bite my lip when I push a finger into him, feeling how incredibly tight and warm he is. My cock twitches in anticipation of being buried there.\n\nOnce Zane is prepped, I get back into position, nudging my cock against his entrance. Then, with a gentle push, the head of my cock disappears into him. I'm the one who moans as I ease a little more of me into him. Zane doesn't make a sound -- he just grins at me, almost lazily stroking himself. \"Feel good or something?\" he teases.\n\n\"Shut up,\" I mutter, licking my lips. \"You're so fucking tight.\"\n\nHe laughs. \"Welcome to gay sex.\"\n\nA warm welcome, indeed. I keep a hold on his hips as I gently rut back and forth -- but when I see Zane doesn't exactly need a moment, I start fucking him harder. That's when he parts his lips and lets out a groaning exhale. He closes his eyes for a moment, licking his lips as I rut into him with more intention and give him longer strides. As my body repeatedly connects with his, I let my eyes trail down from his face to the bulging muscles of his stroking arm, to his pecs rocking lightly up and down, to his core tensing and flexing with each thrust, to the cock pulsing and wet in his firm grip. Seeing my cock sliding in and out of him is almost the surreal cherry on top of this beautiful sundae.\n\nHe feels so good inside. My cock has never felt hugged so tightly, and I never expected a man's ass to feel *so* different from a pussy. It's tighter but more open, somehow, the duality both confusing and intriguing me. The thing I like about this, though, is that Zane can't fake how he's feeling. I *know* he's feeling good because of that rock-hard limb between his legs that's making a steady mess of his fingers. It's exciting to witness, to be a part of -- and with Zane of all people.\n\nI've never felt so connected to him. Seems a very literal, physical connection has really pushed us into this relationship. At least, it has pushed *me*. I hope Zane feels the same way. I lean down and kiss between his pecs once before he suddenly reaches for my chin, grips it, and pulls me up for some deeply tender, tongue-sloppy kissing. We breathe heavily against each other as we slowly swap spit, the silence in the room only punctured by the smacks of our lips, our gentle moans, and the constant slap of skin on skin. It's perfect.\n\nI grunt against his lips after a while. \"I'm close.\"\n\n\"Don't cum yet,\" he mutters.\n\n\"What?\" Did he just tell me not to cum?\n\n\"Don't cum yet,\" he says again.\n\nI just laugh in a whiny sort of way. \"Oh, come on.\"",
        "\"I promise I won't make you wait long,\" he says with a grin before snaking an arm around me. Big as he is, he manages to somehow get me on my back in one smooth motion with him on top of me. I grunt a bit when my cock slips from his hole, it twitching to be buried again.\n\nBut Zane has other ideas. He kisses me once before working his way down my body slowly. I tense when I feel his hand gripping my cock, and I moan loudly when he engulfs me with his mouth yet again. Fuck, that's so hot, him sucking the taste of himself off my cock. He hums a bit, working me expertly deep as his other hand glides over my inner thigh. I sense his fingers teasing my balls gently, feeling them out for a moment before going lower. His fingertips stroke my taint, and that tickling sensation rewards him with fresh drops of precum into his mouth.\n\nHowever, Zane's fingers keep going lower -- right near my hole. I immediately slide back. \"Whoa whoa whoa,\" I say with a nervous laugh.\n\nHe grins up at me. \"What?\" he asks. \"A little ass play won't kill you.\"\n\nHe knows I'm totally virginal back there. I've never even had a tongue. I experimented with a finger when I was a kid, but I hated the sensation and never tried it again. \"I don't know, man,\" I say skeptically.\n\n\"If you really don't wanna, then I won't do anything,\" Zane says calmly, but there's such a fire in his eyes that I'm hesitant to flat-out deny him.\n\n\"I don't wanna say no, but...\"\n\nHe smiles slightly. \"Saying yes won't make you any less of a man, big boy,\" he teases.\n\nFucker. I kick him playfully, and he laughs. \"I don't know, Zane,\" I say, scratching my head. \"It's too weird.\"\n\n\"It's just you and me, babe,\" he says, giving my balls a little kiss. \"I can make you cum like never before, if you let me.\"\n\nCum like never before? What a way to entice me. I'm nervous, but at the same time, I know I'm in good hands. I'm in Zane's hands, after all. I just rest my head back on the bed and sigh. \"Fine.\"\n\nI feel Zane kissing around. He lifts my balls and drags his tongue across my taint, something that's always sure to keep my cock nice and stiff. But I feel my heart thudding harder and harder the closer he gets to my hole. Then, after lifting one of my legs and spreading them a bit, I feel his tongue against my most intimate place. My eyes instantly roll back. Holy fuck. I tense, feeling like I've been electrified -- and then again, when Zane laps at my pucker. I bite my lip hard, moaning with muffled pleasure as his tongue circles and prods at my hole over and over, being so tender and playful. Shit, that feels good.\n\nAnd then -- I feel his finger. He nudges against me with his fingertip, gently pushing as if to test whether or not I'd let him in. He seems to decide lube is a good option for this, and he grabs the bottle, squirting some into his fingers and applying it directly to my hole. Then he hands me the bottle. \"Do me a favor.\"\n\n\"What?\" I ask, taking it from him.\n\n\"Stroke yourself for me.\"\n\nI don't know why that makes me blush a bit, but it does. But if he insists... I squirt some of his lube right onto my cock and slowly work it in, coating every inch of me with the slick liquid.\n\n\"Just like that,\" he says, eyeing my pacing. \"And don't stop.\"\n\nI just nod a bit. I keep my slow pace, gently working from the base to the tip and keeping a firm grip on my shaft as my palm glides up and down. Zane rubs one of his fingers against my hole and then, assisted by the lube, pushes into me. I gasp a bit, immediately tensing up from the intrusion.\n\n\"Relax, baby,\" he says soothingly, kissing my inner thigh.\n\n\"Feels so fuckin' weird,\" I mutter.\n\n\"I know. But trust me. I've got you,\" he says. \"And don't stop stroking.\"\n\nFuck. I had paused my movements when his finger slipped in, so I continue working my hand up and down. Damn, what a strange sensation. But Zane's calming voice and tender work is making me relax a bit, and I gradually feel myself accepting one of his thick fingers. He very slowly rocks it back and forth, probably to stretch me out a bit.\n\nWhat I don't expect is his finger to curl, to find that sweet-spot that makes nearly every nerve in my body twitch. \"Fuck!\" I groan.\n\nI barely hear Zane chuckle. \"Keep stroking, stud,\" he says, nuzzling his softly-scratchy facial hair into my inner thigh, triggering my senses on all planes.\n\nI moan steadily now, my toes extending as he manipulates my prostate. This must be what it's all about for guys who take dick -- not necessarily the stretch, but the insistent pressing against the prostate. That magic button. Fuck, it feels so good. I feel my cock pulsing more and more in my hand, and I start to stroke faster.\n\n\"Don't speed up, Khalid,\" Zane says, and I whine a bit before keeping my pace. \"Nice and steady.\"\n\n\"But I'm so fucking close,\" I pant.\n\n\"Nice and steady,\" he repeats. I feel Zane's finger circling my spot, and my eyes roll back again. I keep them closed, sinking into the bed, high from these physical sensations: the steady stroke, the finger inside me, Zane's hot breath on my inner thigh. I'm going to cum so fucking hard. I can feel it.\n\n\"Zane--\"\n\n\"Shhh,\" he whispers, kissing my inner thigh. \"I know.\"\n\nI whimper more, starting to care less about how I sound in front of him. It feels too good to care. Every muscle is tensed and flexed right now, my free hand gripping the sheets in a tight fist. Gradually, I feel my orgasm building and building until the cum shoots through my cock at its slowest pace ever. It completely draws out that orgasm, heightening it beyond anything I've experienced on my own. I feel it -- that full-bodied climax. I feel it in my cock before it dissipates throughout my entire body, lightly electrifying me, vibrating me. And then, when my cock finally does erupt, I spill one of my thickest loads ever, despite cumming just a few hours ago. It oozes out slowly before shooting a couple hard shots up my torso.\n\nThings go blank for a few moments, and when I finally regain consciousness of my body, I realize Zane's finger has left me. I'm just lying there with a loose fist around my hard cock and a substantial load on my lower torso. I pant slowly, breathing in and out as deeply as possible before looking at Zane -- who's just smiling with a satisfied grin.\n\n\"Fucker,\" I mutter softly.\n\nHe laughs before crawling over me, sitting on my lap. \"Was it or was it not one of the best orgasms you've ever had?\" he asks, running his hand through my load.\n\n\"I'm not giving you that satisfaction,\" I say, feeling so drained, but in the best way.\n\n\"I'm taking that as a yes,\" he says before working my cum into his cock, using it as lube. He bites his tongue gently as he strokes himself over me, and I just lie back and enjoy the show. I watch his face as he brings himself to his own climax, watching him raise his eyebrows high and shut one of his eyes tightly. That's when I feel the first rope of hot cum on my body. I look down, watching Zane empty his nuts onto me, feeling (oddly enough) even more relaxed now.\n\nZane catches his breath before sighing through his nose, humming a contended noise. Then he lies down next to me, resting on his side and facing me. After a few moments of silence, he speaks up. \"How you feelin'?\"\n\n\"I don't wanna move,\" I say with a soft smile.\n\nHe laughs. \"Sleep here, then,\" he says, cuddling up against me, draping a strong arm over my body.\n\nI smile gently, closing my eyes. I don't think I've ever had a better date, or better sex. I've had some wild, incredibly steamy sex with Kyra before, that much is certain. But this? This was powerful. This has meaning behind it. Intention. I'm really feeling the love between us, this new expansion on our love, and I'm feeling it hard.\n\n\"Can you do me a favor?\" I ask.\n\n\"Hm?\" Zane asks, clearly just as tired.\n\n\"Sing to me.\"\n\nHe chuckles quietly. \"Seriously?\"\n\n\"Yeah.\"\n\n\"Why?\"\n\n\"Because I love hearing you sing.\"\n\nThere's a pause before he asks something else. \"You're really serious?\"\n\n\"Dead fucking serious.\"\n\nZane seems to debate it for a moment before, very softly, he starts murmuring another Frank Sinatra classic, \"The Way You Look Tonight.\" I smile, his voice soothing and directly in my ear, meant for me and me alone. I'm so thankful for this moment. Simple intimacy at its finest. I sigh happily, feeling myself being lulled to sleep by my best friend."
    ],
    "authorname": "ruetheben",
    "tags": [
        "gay romance",
        "romantic",
        "romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/arabian-nights-ch-04"
}