{
    "title": "In a Perfect World",
    "pages": [
        "I had no idea where this was going when I started it this morning. It's not erotic fiction and there really isn't even a story, although there just might be a point, even though it rambles a bit. It is at times tongue-in-cheek but the reader needs to decide when I'm 'pulling your chain' and when I'm being serious. From a male perspective, I guess the title, \"In A Perfect World\" is appropriate, although I'm not really sure what category it fits in. I went with 'Humor and Satire'.\n\nFor the women that choose to read it, an important caveat: at the end of the day, no matter how many baubles and flowers he gives you, no matter how much he tells you he loves your mother, no matter how many times he cooks you dinner or does the laundry, no matter how often he treats you to a romantic evening and no matter how many times he tells you that you are his 'best friend'---it's all bullshit. If he wanted a best friend---it'd be a guy. He wants to get laid; that's all he ever has wanted and ever will want. It's been that way for thousands of years. Stop reading women's magazines and just accept it. He just wants to fuck you.\n\nI've never really understood the typical male fascination with a woman's breasts. Personally, I've always found overly large breasts somewhat unattractive; implants border on disgusting. I dated a young woman once for a few months with large, natural breasts. I did enjoy fucking them on occasion, particularly when she lifted her head so that my stiff cock just penetrated her full lips on each stroke. She loved to eat cum and giggled when I shot a load on her face---and she became intensely aroused from having her tits fucked.\n\nI once asked a shrink about my lack of obsession with tits. He fired back a simple question: were you breast or bottle fed? Breast, I replied, for a full year. That's the answer, then, he said. You got all the titty sucking you needed as an infant. Men who were bottle-fed tend to grow up with a breast obsession.\n\nOkay, I asked, then why am I absolutely obsessed with a woman's ass? Latent homosexual tendencies?\n\nHardly, he observed. In nature, females of many species 'present' to a potential mate by showing their rear. In fact, it's not their ass per se they are displaying, it's their blood engorged labia and vulva---a clear biological indication that they are fertile and ready to conceive. Other mammals do it from the rear---every farm kid knows that. The human body was built to do it exactly that way. Our historical need to separate ourselves from the animal kingdom---among other things, such as religion---brought about the fashion of missionary sex, which is in fact quite unnatural. \n\nAnthropological study of primitive human cultures indicates a typical pattern. The fertile female displays or presents her posterior to the male. The additional blood flow of the hormonally aroused female causes the labia to puff out, exposing the entrance to the vagina. The male takes this as an invitation to penetrate her with his cock---and that's exactly what it is, an invitation, albeit a biologically stimulated one. The male approaches; they touch, fondle---what have you. All of this activity is simply intended to confirm for both of them that copulation is desired while further stimulating the biological factors which make it more feasible.\n\nAnyone who had ever ended up with a bruised pubic bone from rigorous face-to-face sex knows that 'doggie style' is far more comfortable. It also allows for deeper penetration which results in the sperm being deposited closer to the cervix, which in a perfect world opens to allow entrance---particularly if the female is suitably aroused and certainly if she enjoys an orgasm. Those spasms occur with one purpose---to draw the sperm inside the womb. \n\nThus, one has to assume, the stronger, more desirable male---the one with the most desirable biological traits---will be better endowed, in terms of size, hardness, staying power, or some combination of any and all three. Said male will have the best chance of 'opening up the channel,' so to speak---and thus the best chance of impregnating the desirable female. \n\nOne would also expect that the more experienced male---the one with more experience, sexually---would be less inclined to ejaculate prematurely, more adept at making the experience pleasurable for the female---thus getting invited back. Other females observing the coupling---or getting the details from tribal gossip---would be more interested in the particularly 'talented' male.\n\nSociologists and psychologists have really clouded the water in the last one hundred years, looking for all sorts of hidden meaning in an effort to make things more 'human' and thus more complicated than they need to be. Their efforts have completely confused both sexes and sadly, resulted in an increase in homosexual activity among females and males whose view and understanding of human sexuality is inadequate---or at best, distorted. In essence it is those humans that have essentially 'dropped out of the game.' \n\nI'm not saying that those factors are the sole cause of increased homosexuality but certainly they have had an impact. The whole feminist revolution hasn't helped normal male-female interaction---at least sexual interaction. Certainly some homosexuals of both sexes find themselves unable to compete, i.e., weaker males who are not found attractive by the opposite sex and unattractive females who find it almost impossible to find a suitable male to mate with.\n\nAgain, one has to assume that in the 'good old days' of an ancient, primitive culture, weaker males simply did not survive the hardships. Unattractive females without the support of a strong hunter/gatherer, left on their own to fend, simply perished. While it may sound cruel, we have to accept the fact that the mating of the strongest and most attractive of the species is what ensured its very survival.\n\nSo, in a perfect world...\n\nOne thing that screws up the perfect world is clothing. Men can't go around with their dicks hanging out for female inspection...well, except on the beach. Clothing makes it impossible for the female to demonstrate her readiness to conceive. Stupid women's magazines with inane articles about 'how to show him you are interested' don't help matters. Still, female fashion of the day is certainly intended to accent---'display'---the female posterior. It's latent and subconscious. It's like saying, 'I know you can't actually see my labia---but trust me, it's there, it's engorged and my vulva is open and ready for your cock.'\n\nThink back to the number of times a woman becomes interested in a man and finds every excuse to 'show her ass' so to speak. Again---forget the tits. In the good old days they were seldom covered and there was little male fascination with them. Baby formula hadn't been invented. Young women frequently turn their backs on a dance partner---if they have decided that the male in question is prime mating material. \n\nI can remember one time going to pick up my kids after my divorce; my ex climbed the stairs back to her new apartment just as I settled behind the wheel, swaying her posterior provocatively as she ascended. I wasn't sure if she was having second doubts about the divorce---or simply saying: 'see what you're missing.'\n\nThe first time I met my second wife---we've been married for over twenty years---she unconsciously presented. We had talked on the phone a number of times but never actually met. We still laugh about the fact that she decided to bend over to retrieve a file from a lower file drawer just as I entered her office. She was wearing these hounds-tooth pants. She still has an amazing ass---and the bending over stretched the fabric alluringly over her butt. I distinctly remember my dick twitching---and deciding that I was going to nail that hot little babe.\n\nShe knew she had a nice butt; I wasn't the first person who told her so. While she was not consciously 'sending the signal,' she was in fact unconsciously doing exactly that. From our phone conversations we had some interest in each other---although I doubt that either of us understood at that moment how strong that interest was or where it would ultimately lead. The perfect female posterior perfectly 'frames' her pussy; it's as if there is a road sign---an arrow pointing down---which says, 'insert here.'\n\nMy son often visits us with his girlfriend---who I have no doubt will soon be his wife. The four of us have fun together, play board games, cooking, drinking---whatever. I can't count the number of times that said stunning twenty-seven year old hottie excuses herself and changes into something 'more comfortable.' It's always some outfit that perfectly displays her exquisite young rear and said rear is conveniently pointed toward her love interest most of the time. It takes about fifteen minutes before the Scrabble game is over as my son indicates that, 'it was a long drive,' and he needs to turn in. Bullshit. She wants to fuck. Lucky guy. Also a breast fed baby.\n\nBefore I started writing this I was perusing some soft porn of Russian origin. The photography is impeccable and the young models are virtually flawless. This particular collection is far more about art than porn, with special attention to beautiful settings and artistic posing. From my perspective, the most erotic images are from the rear, showing the young eighteen year old beauties slightly bent from the waist with their delicious little butts thrust back. The most stimulating always include the young beauty peering back over her shoulder, her butt crease slightly open and her moist young pussy below. No dildos, finger-fucks, tattoos, or stupid, smutty 'show the pink' poses. Just the pinnacle of desirable young womanhood displaying her treasures...presenting.\n\nA number of years ago a buddy and I were flying military aircraft across the country and ended up staying in a west Texas city for a few days awaiting repairs on our aircraft. We rented a car and drove around, finding an all-nude diner. Out of curiosity we went in. To our surprise the girls were almost universally young and attractive. While there were certainly food sanitation issues, it was a very interesting experience. As our young waitress bent over the counter to give the kitchen our order, my buddy and I were spell bound as she thrust her pert young cheeks back and her sweet little cunt was in full view.\n\n\"That's what I'm talking about!\" he said with a leer. \"In a perfect world, when a guy sees a sweet young thing bent over like that, he'd just go over and mount her; there'd be a law requiring him to do so.\" I've had more than one erotic dream about such a world; sadly, the closest I ever came to it was Thailand many years ago. \n\nThree of us had ferried some aircraft over from Vietnam and were staying over waiting on the aircraft we were going to fly back. Thanks to maintenance delays and a monsoon, we got stuck in Thailand's major city for a couple of days. We ended up procuring some female companionship; the sex business in those days was legal, regulated and 'clean' over there. It was also absurdly inexpensive. Our driver and guide procured four quite attractive young women for us. We had rented a suite for something less than ten dollars a night in a four star hotel. The girls were sweet and friendly and spoke reasonable broken English. They figured out what we had in mind and were all naked within minutes of closing the business side of the deal.\n\nSo, within a few minutes, I'm looking around and the debauchery is in full swing. One little hottie is riding one of my buddies on the floor, two others are double teaming another guy and eying me wondering when I'm going to jump in and the fourth one is on her knees sucking off my other buddy. Her ass is up in the air and her cheeks are spread. Her little hairless pussy is glistening. Her ass is moving in slow circles. My cock is bone hard. I walk over to them; my friend getting his knob polished wordlessly indicates that he doesn't care. She looks back at my hard cock and nods. I'm balls deep in that tight little Asian cunt in a flash. \n\nShe's cute enough that I don't need to close my eyes and picture some girl from back home. She's either into it or a damned fine little actress; she's making all the appropriate noises. This isn't about love or marriage, it's just about fucking...servicing the alpha males. The alphas expect you to display and present; there aren't going to be any cocktails or long walks on the beach. Sweet thing, you're just going to get cock---and lots of it. We were in our early twenties, perpetually horny and deprived after too many months in a war zone. We ordered room service and fucked those sweet little Asian whores constantly for twenty-four hours and not once did we hear, 'not tonight, I have a headache.'\n\nI was not trying to impress this girl; I'll never see her again and if I suck in the fucking department she'll neither care nor let on. No dinner, no five dates with increasing activity and no long kissing sessions or sweet nothings in her ear. This is just primal shit. Mount the bitch and fuck her. It's all about me getting off and enjoying myself. No guilt, no touchy-feely bullshit. It's fucking prehistoric. She's receptive, I'm hard; she exists for one reason in the world---to make me feel good by getting me off. \n\nI almost ended up going to Thailand for a full tour; unfortunately I ended up back in Vietnam for a second tour but I did get back to Thailand a few times, if only for an overnight. Lots of guys actually stationed there had multiple, full time, live in babes who in addition to cooking and cleaning for them, fucked them on demand any time of the day or night. I'm not sure any marriage could have survived a tour of duty in Thailand.\n\nI also asked that shrink about where anal sex fits into the whole game. I received the typical answers: it's taboo, it's the ultimate 'surrender' of a woman's body, it's about domination, it's about the incredible---sometimes painful---sense of fullness on the part of the female, it's really hot and tight---all the usual.\n\nMy earliest experience with anal sex amounted to nothing more esoteric than teenaged birth control. Once the pill came along, I lost interest, finding pussy to be far more interesting. I did fool around with a girl a few years back who legitimately preferred it up the butt and I again acquired a taste for butt sex. My first wife and I did it that way one night in the back sat of our car. She was not on the pill and didn't have her diaphragm---and I didn't have a condom. We were both horny as hell. I enjoyed it immensely and she enjoyed it more than she would later admit. It became a regular part of our sex life. She'd had a couple of kids and bluntly, she was a lot tighter back there. My second wife and I have done it very occasionally, almost always after drinking. She doesn't love it but she loves how much it turns me on.\n\nI often wonder what I would do if something happened to my wife? I love her to death and she really is my closest friend. We do everything together. She travels---by air---too damned much. If something happened to her, I'm just not sure I'd have the patience to 'jump back in the game' and find another wife. I doubt that I could find one as perfect as my bride of the last twenty-some years. We're terribly set in our ways.\n\nA foreign mail order bride might be an answer. I'm financially secure; I could certainly afford it. Then again, there are so many horror stories about mail order brides and then of course there is a certain stigma in this society---for both participants. Ultimately she would end up becoming westernized and completely fucked up and I'd probably have to replace her just about the time I had her trained to my liking. Mexico is becoming crime ridden and politically unstable. Asian mail order brides have their own issues and end up being corrupted by our society.\n\nI haven't been to Thailand in decades but I suppose it would be worth a look although I've heard things have changed for the worse. I'd miss my friends and my kids; I'd miss the good old US of A. Still the idea of posting on eHarmony and then sorting my way through a series of plastically rearranged gold diggers makes me nauseous.\n\nWhy does it have to be so damn complicated? I don't need a maid, am an excellent cook and don't need taking care of. I'm not cruel or abusive and don't drink to excess or do drugs. I can offer an above average quality of life---but! If, God forbid, something should happen to my wife\u2014I'm positive I don't want another one! I'm not excited about getting into the modern dating scene and everything it involves. I'm just looking for a decent, regular and reasonably attractive piece of ass, preferably first thing in the morning and again before nodding off---with an occasional blowjob at lunch.\n\nYou don't have to like my friends and I don't even have to meet yours. Now sure, there's always the chance that we might actually develop a genuine affection, find out that we really enjoy each other's company outside of sex and then---who knows? Marriage wouldn't be out of the question, I suppose---but don't be surprised at the prenuptial agreement.\n\nStill, I was thinking you'd keep your own house---and job. Dinner out or a movie on occasion---why not. At the end of the day, all of that would be just window dressing. At my core I'm just prehistoric. I want a reasonably attractive female in close proximity who will present her luscious rump at regular intervals and not give me a ration of shit when I pull down her drawers and/or flip up her skirt and drill her cunt with a stiff dick. I know, I know, you'd like to cum too---no problem. I'm not that prehistoric. "
    ],
    "authorname": "Dinsmore",
    "tags": [
        "battle of the sexes",
        "relationship humor",
        "relationship satire"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/in-a-perfect-world"
}