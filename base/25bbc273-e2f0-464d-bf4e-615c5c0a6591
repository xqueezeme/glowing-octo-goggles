{
    "title": "Beyond the Pale",
    "pages": [
        "Put down those torches and pitchforks folks, I've seen the light!! \n\nLast month, I posted a Legends Day piece called \"Beyond a Shadow.\" That led all four of my regular readers to tell me that they expect happy endings. Fortunately, my buddy Rick, who is now going under the handle \"Blue Devil\" (something to do with basketball and the Research Triangle, not Satanism) had his usual brilliant idea. So I whipped up this little piece as an alternative. I'm curious about which ending you liked best.\n\nThis story follows the same general premise as the first one. However, it's a standalone piece. So, you don't need to read Beyond a Shadow, first. As is my habit, I've sprinkled in characters from my other stories. If you like the context, you might also want to read some of those. And, before you waste both of our times, I know that this belongs in Romance. But the first story was in Loving Wives. And, since there are a gazillion authors on this site, I put this one here to ensure that the people who read me can find it. I hope you enjoy - DT \n\n*\n\nIt was a miserable July night. The temperature hovered around eighty-five, and I'd sweated through my shirt. The badge pinned to that shirt said, \"County Sheriff.\" I'd been one for almost twenty years.\n\nI usually don't get called out at 3 AM. But tempers fray when the weather gets hot. And occasionally, one of our fine citizens will get the bright idea to drink too much and touch up the wife. \n\nTwo of my guys responded to the call. When they got there, the moron chose to add an extra ten years to his sentence, by taking a shot at them. That was when they called me.\n\nThe red and blue flashers lit up the neighborhood; if a collection of decrepit mobile homes could be called that. The gunman's dilapidated residence was mostly rust colored, with some of the siding coming off. There was no evidence of air conditioning, which might explain his attitude. \n\nWe were thinking about giving his pathetic little hotbox a lot of extra ventilation, just to flush the varmint out. But, killing innocent bystanders doesn't sit well with the constituency; and our nine-mils would have gone through his place, and a couple of the neighbors. \n\nPlus, the idiot's wife was in there, and, she hadn't given us convincing proof that we should take her out of the gene pool. Even if, culling her husband would have done humanity a favor. \n\nSo, we just sat there in the heat, listening to the katydid's and the sound of loud ranting inside. I suppose the dude regretted shooting at us. In fact, I imagine he was sorry he had even opened his third bottle of Jack. \n\nI sighed and said, \"We're gonna be here forever if I don't do something.\" \n\nI looked at both of my men and said, \"Do you guys care whether he shot at you?\" Both shook their heads \"no.\" So I took a deep breath and stood up. A shot went whistling over my head. \n\nI yelled, \"If you come out right now Melvin we are NOT going to charge you with shooting at us. If you take another shot, you are going to do hard time for a decade. If you hit me it's going to be life. So, which is it? You have ten seconds to decide.\"\n\nThere was a hesitation. Then the door of the trailer opened, and Melvin came out bleary eyed, unshaven and wearing a pitted-out wife beater. He was holding his hands up. I said, \"Smart move buddy.\" Then I grabbed him and handcuffed him. God! He stank!\n\nI handed him to the two patrol officers and they threw him, none too gently, into the back of their cruiser. I said wearily, \"You two get the wife's statement and then lodge him.\" They were on duty. I wasn't. \n\nI got into my cruiser and headed back down Wisconsin 121. It had been a bitch of a night and I wanted a couple more hours of rack time before the sun came up.\n\nGeographically, Wisconsin sits between the Great Western Prairie, the frozen Canadian north and the dynamic mixing-bowl of the Great Lakes. So, it can get some seriously wild weather. The entire State had been smothered in a long stretch of hot summer days and we natives knew what that meant. \n\nThere would be the devil to pay when the weather broke. \n\nMy luck being what it was, the devil decided that the bill was overdue. All of my senses told me that the storm was coming, vision, smell, touch, and hearing. The hot humid wind picked up. The fast-moving air was charged with electricity. I thought to myself, \"Great!!! Armageddon!\" \n\nThe trailer park was outside Perkinstown. So, my route took me through the heavily forested Plain State Natural Area. I had just gotten on the bridge over Chequamegon Waters when the storm, which had been nothing more than flickering lightning in the distance, arrived with a vengeance. \n\nThere is nothing like being caught on a bridge over dark water in the middle of a thunderstorm. It's terrifying. The first thing that happens are the wind gusts. Fortunately, my cruiser was built to police specs and it could take that kind of thing. But the wind still rocked it on its suspension.\n\nThen the first fat drops arrived. Their impact sounded like I was running through a massive swarm of Wisconsin June Bugs. I slowed to 20 miles an hour as I re-entered the forest and turned on the wipers. They didn't help. It was like I was driving through a car wash. \n\nI was getting worried. My wipers were on full. But, I couldn't see ten feet in front of me. Then the lightning started. It was a continuous sequence of forks, with strikes all around me in the forest. The noise of the thunder was calamitous. I couldn't drive any further. \n\nI've been a cop for three decades and I've faced a lot of scary situations. But sitting there alone, in THAT forest, was the worst I've ever experienced. The rain made it impossible to see and the constant flashes of lightning and deafening volleys of thunder lit up the area with a nightmare ambiance.\n\nAn atavistic feeling of dread crept over me. It probably hearkened back to the days when we lived in caves. We were the prey back then, not the hunters, and looming trees and impenetrable darkness hid a lot of terrifying things. I quickly found out just how truly prophetic that was.\n\n*****\n\nI loved a woman once, and I knew that she loved me. I'd met her while I was looking into her murder. \n\nHer murder? Well, that requires a little explanation.\n\nI was a bright-eyed and bushy tailed Sheriff's detective, married to an intelligent and beautiful woman. Janet was everything you'd ever want in a wife, until she got into politics. \n\nThey say that power corrupts. Well, my wife was a case study. She hopped on the slippery slope and never got off. I was in on the bust. She got witness protection. I got a divorce. \n\nAfter that, I vowed that I would never have anything to do with the treacherous creatures. \n\nThen I stumbled on Mavis. In truth, I nearly ran her over. It was certainly NOT your classic boy-meets-girl situation. I was driving through the Nicolet Forest in the middle of the night. The setting was eerily similar to my present state-of-affairs. Except it was only raining hard, not the Apocalypse. \n\nMavis thought the year was 1946. So, naturally I took her to have her head examined. The local Doc certified that her belfry was totally bat-free, and she DID seem to know things that would make the local historical society jealous. Plus, she dressed and acted the part. Of course, there was no way her story made sense. \n\nThat is, until I began digging into it. After a couple of weeks, I found out a bunch of interesting things. \n\nA woman named Mavis Pritchett had indeed disappeared in 1946. I subsequently learned that she had been murdered by one Felix Wynn. How did I know that? Well, Wynn confessed to the crime. He did it while he was dropping dead at age 95. Meeting the person who you thought you'd murdered seventy years ago, can do that to a fellow's heart. \n\nThe problem was that, while Wynn was in his nineties, Mavis was a stunningly beautiful raven haired blue eyed, fresh-faced twenty-five-year-old. That, only added to her mystique. \n\nHaving solved the murder, I was left with what to do with Mavis.\n\nLet me describe her. She is smart, spirited, genuinely funny, brave and deeply loving. She can cook like Julia Child and fuck you like Mata Hari on meth. The latter happened every evening of our life. So of course, I married her.\n\nOh yes, the child. Well you see, we kind-of conceived her early in our relationship. We were planning on getting married anyhow. So, the advent of little Ava was another blessing in a long line of wonderful things that happened to me. \n\nThen, I spent nine years living with a person who was so excruciatingly beautiful and accomplished, in everything that make females a superior species, that I thought my heart would burst with happiness. \n\nInstead, it broke. \n\nThere had always been the inconvenient fact that a person with Mavis's name was a 1946 murder victim. That couldn't possibly be MY Mavis. She was wrapped in delectable corporal flesh; and she was very much a part of the here and now. Hence, I filed all other options under the heading of, \"alternative explanation required.\" \n\nThat was until somebody dug up the long-buried body. I rushed home to find an empty house. \n\nWe utilized every investigative resource available. But, it was like Mavis had dropped off the face of the earth. Finally, I accepted the fact that she was gone forever. So, I held a memorial service for the body of a recently dug-up murder victim. Most people thought I was nuts. That is, except for four true friends, . \n\nThe grave is still there, on the hill right next to the house. It is overseen by a marble angel and a grieving husband. But, life is a march or die proposition and I was afraid to die. So, I marched. \n\nMy nine-year-old daughter saved me. It was the love and devotion that I poured into Ava's upbringing that kept me on the rails. \n\nAva makes me proud. At age twenty-one, she is the spitting image of her mother. A stunning young woman with a perfect body, honed by years of dance and a flawless face; which in Mavis's case was so beautiful, that it drove an unbalanced man to murder. \n\nMe? I'm still just a County Sheriff. I do my best. But people never see me smile. That is, unless they are with me on that lonely hill, when I am talking to my wife. They'd think I'd lost my mind if they heard me. But I sincerely believe I'm near her then.\n\n*****\n\nI was parked in the middle of the road, waiting for nature to get the end of the world out of its system. My flashers were advertising my presence. There were a series of violent ground strikes and then the sky above the trees lit up with ball lightning. \n\nWhat happened in the instant after that is a little hazy. I remember that the rain passed like somebody had pulled a curtain. And, I was looking down a rutted gravel road with a bright sunny sky over my head. That was deeply disturbing since the road was blacktop the last time I had seen it and the sky had been anything but tranquil.\n\nI started the cruiser, put it into gear and bumped my way down the road. It took me almost an hour to get to the end of the forest. That was confusing in-and-of-itself. Since by my reckoning it was no more than a mile until I got into open country. \n\nThe road was gravel until I got to Wisconsin 73, which was narrow concrete now, instead of a broad two-lane State Road. Where was I? \n\nI swiveled the laptop to call up the navigation program. But the browser wasn't hooked to the internet. There was also no sign of the monster storm, that had just passed over me. That was puzzling? So, I turned south and started down 73 in a bright Wisconsin morning. \n\nI felt like I had slept all night instead of spending most of it prying a drunken loser out of his squalid little home. My watch said it was 8:45. I didn't recall the lost time. But I must have fallen asleep during the storm. That was the only way I could explain the gap. \n\nThe fields were full of corn, and I could see farmers on antique Ford tractors. There were none of the big combines and other farm equipment that I was used to seeing. Several of the people stopped to gape at the cruiser as I drove past. It was like they had never seen a Crown Vic before. \n\nI got to Cadott and turned down State 27 headed for home. Everywhere I went people gawped at me. It was like I was driving a flying saucer. \n\nI got to the Hot Spot, parked and went in for my morning cup of Joe. As I sat down, everybody but the waitress rushed to the window. \n\nI looked around the diner. They must have remodeled the place. Because, it was laid out with stools along a counter and tables, not booths. It was like they were going for diner kitsch. \n\nThe waitress came over. She was new since the last time I'd been in. She said, \"What can I get you Sheriff?\" She'd noticed my uniform, badge and tool-belt; Glock 19, extra ammo pouch, pepper spray, handcuffs and Asp. \n\nI said. \"Coffee and eggs.\" She turned to a kid who was hanging around behind the counter and said, \"Get the Sheriff some coffee Dot.\" \n\nI thought, \"That's interesting the current owner's name is Dot, too.\" \n\nThe kid was very pretty and clearly smart. She was about 12, just starting to get a figure, and it promised to be a doozy. She, got a cup down from a stack and poured the coffee out of an elaborate antique coffeepot. It looked like the kind you see in the old cartoons. That 1940s vibe just kept getting stronger. \n\nThe little girl said, \"What's that car you're driving? It looks like a P-51?\" \n\nI'd never heard the stodgy old Crown Vic compared to a World War II fighter before. I said proudly, \"It's a Ford, a Crown Victoria Police Interceptor with the Apprehender package. It can do 150 miles an hour if I need it to.\" \n\nThe girl's eyes widened. She said excited, \"Can I ride in it?\" She was a feisty one indeed. She had also apparently never heard of child predators. \n\nI said, \"I'll take you for a ride if your mother approves. But you should never get in a car with strangers.\" \n\nShe turned to the waitress, who was obviously her mother, and bawled, \"MAAAAA!! can I ride in the Sheriff's car?\" \n\nThe waitress laid my eggs down in front of me and said exasperated, \"Stop bothering the man Dot. We need you here.\" Then she turned to me and said, \"That'll be two bits.\" \n\nIt took me a second to translate that into English. I said, \"Do you mean an entire breakfast is a quarter?\" \n\nShe said defensively, \"We charge more because the food's all fresh.\" \n\nAs I dug a quarter out of my pocket, I thought, \"They must be having some kind of promotion to advertise the new decor.\" The waitress looked at the quarter and said, \"Wait a minute, what's this?\"\n\nI said, \"It's a quarter.\" \n\nShe said, \"No it isn't. THIS is a quarter,\" and she held up one of those old-fashioned ones, before they started putting the State stuff on the back. \n\nI dug in my pocket and found an old one and said, \"Are you a collector of old coins?\" as I handed it to her.\n\nThe waitress said, \"What are you talking about? This one is from this year.\"\n\nHer quarter had 1946 embossed on the bottom underneath Washington's head!! \n\nI had a moment of vertigo. I sat back down on the stool and said, \"Wait a minute. What's the date?\"\n\nThe waitress looked at me like she thought that I was messing with her and said, \"It's July 29th.\" \n\nI said with growing unease, \"What year?\" \n\nShe thought I was joking. She laughed heartily and said, \"The last time I checked it was 1946. Isn't that right Dot?\" \n\nDot giggled and said mischievously, \"No I think it's 1846.\" \n\nThe reality of my situation was sinking in. This was the REAL Dot. I had last seen her a week ago. She was eighty-two years old!!\n\n*****\n\nI hastily ate and left. Maybe one of the lightning strikes had gotten me. Maybe I'd had an aneurysm and was lying unconscious in the middle of the forest. Maybe I'd really been transported back to the 1940s? Whatever the circumstances, I was clearly NOT in Kansas anymore. \n\nI should have been appalled. But, I'm a hard-headed practical man. The whys-and-wherefores of my situation were irrelevant to me. My only thought was that Mavis was still alive and I could save her!! \n\nI had memorized every detail of the case. The murder didn't occur until two days hence, on the 31st. Of course, I had a problem. In 1946, Mavis Pritchett was a total STRANGER. \n\nI would deal with that later. But, first I had to get rid of the cruiser. The last thing I needed was for people to ask me questions, and the cruiser attracted too much attention. More important, I needed money. I had plenty of 21st Century cash. But I would've been washing dishes back in the diner, if I hadn't dug up an old quarter. \n\nI could kill two birds with one stone by selling the Crown Vic.\n\nThere was a garage in Fall Creek, which had been in constant operation since the 1930s. The garage was there all right. It looked well-to-do, and it was selling cars. I chuckled gleefully, \"The owner ought to LOVE what I have to offer.\"\n\nI parked and opened the hood. Four men stirred from where they had been lounging to come over and stare. Then the guy who was clearly the owner came out. They all looked puzzled. \n\nI was counting on the uniform and gear to establish my bonafides. The owner was a rawboned guy, tall and gaunt, with grease-stained overalls. He walked up to me, not too friendly, and said, \"What can I do for you SHERIFF?\" It was clear than none of them liked cops. \n\nI said in my friendliest tones, \"I'm looking to sell this fine automobile. The Department doesn't need it anymore and I want somebody local to benefit from it. I'll throw in the shotguns and the special radio for the right price.\" \n\nThe owner looked skeptical. He said, \"What is this thing anyway?\"\n\nI said, without batting an eye, \"It's a Lamborghini.\" Even though the blue oval clearly said, \"Ford.\" \n\nI added persuasively, \"It's an experimental car. The government gave it to us. They made it out of spare parts from one of their fighter planes.\" Dot gave me THAT idea. \n\nA lounger said, \"How fast does it go Sheriff?\" \n\nI said, \"It'll do 150 at the top end. But you can drive it at 120 all day.\" They all gasped in wonder. Since most of their passenger airplanes cruised under 200 miles an hour that was unheard of speed. \n\nIt was obvious that the owner wanted it so badly that his teeth hurt. He said, \"What do you want for it?\" \n\nIt had initially cost fifty-six thousand. I knew that I had to scale that back to 1940s prices. I said, \"Five thousand.\" I could tell I might as well have asked for fifty million. \n\nThe owner shrugged eloquently and started to walk away. I hastily added, \"Okay, since you're local I'll let you have this fine automobile for two thousand cash, if you'll throw in that little beauty over there.\" I pointed at an immaculate blue 1940 Ford convertible. \n\nTwo thousand was a year's salary, back then. But, the guy's eyes lit up like he thought he was stealing the cruiser.\n\nWe rode down to the Fall Creek Bank. The owner spent the whole time playing with the shotguns racked in the front seat. I said irritably, \"If you blow a hole in the roof, you've bought it anyhow.\" \n\nHe said, \"What's that?\" He was pointing at the laptop between us. \n\nI said, \"It's an experimental radio that the government uses to monitor spies.\" In the 21st Century's world of electronic surveillance, that wasn't really an exaggeration. \n\nThe owner withdrew twenty, one-hundred-dollar bills and handed me the money. We rode back. He handed me the title and keys to the Ford. I handed him the keys and signed the title for the cruiser. I was hoping he didn't notice the year it was manufactured. \n\nThen we shook hands and I drove away. Phase one was complete.\n\n*****\n\nI needed a place to stay. So, I went back to the Hot Spot. Dot was standing at the counter polishing a soda glass. She said, \"What happened to your car?\" ",
        "I said, \"I traded it in for something a lot cooler.\" I was getting into that 1940s slang. Dot looked at the little roadster, which was sitting outside with its top down, and nodded approvingly.\n\nI said, \"Are there any boarding houses around here?\"\n\nShe said, \"Sure Sheriff. My mom runs one. Do you want me to show you?\" And she rushed around the counter, grabbed me by the hand and dragged me out the door. \n\nWe walked over to the next block. Dot never let go of my hand. Did I detect a crush?\n\nWe arrived in front of one of those big, solid, stone, two story colonials. You see them all over the affluent parts of Wisconsin., Dot dragged me in, without ceremony. \n\nHer mom had shed her waitress uniform and was standing there in a house dress, with her hair up in a bandana. She had obviously been cleaning. More importantly, she was a dead ringer for Eve Pederson, the Doc's wife. Dot would soon look like her mother, whose name was Barbara, and Eve looked like Dot. So, apparently Swedish beauty ran in the family.\n\nDot said breezily, \"The Sheriff needs a place to stay while he's in town.\"\n\nDot's mom, said, \"You can have a room and full board for five dollars a week. I know that sounds like a lot but I'm a good cook.\" \n\nI took out one of my hundreds. She looked at me like I had handed her a sack of gold doubloons. I said, \"That's five months in advance; in case I need it.\" \n\nI thought to myself, \"Man, I've got to break one of these hundreds.\"\n\n*****\n\nI had one more chore to do before I went to find Mavis. That was, to get a toothbrush and some 1940s clothes. There was a haberdashery on Main street. It was next to the hardware store and just two blocks from my new residence. So, I walked there. \n\nI have been in a lot of clothing stores. But, I have never been in one like that. \n\nThe clothes were in bins. There were none of the subtle marketing gimmicks, and the proprietor followed you around recommending things. It also had the board floor, musty smell and general appearance of a feed store, not a place with fine men's accessories.\n\nThe proprietor was an older man, very well dressed and genteel by rural Wisconsin standards. He was talking in a neighborly way to an early thirties guy with a lot of dark hair and one of those pencil slim Clark Gable mustaches above his lip. \n\nBoth men were much smaller than I was. But, I had noticed that about almost all the men I had met so far. They scoped out my outfit and the one guy stuck out his hand and said, \"Welcome to our town Sheriff. I'm William Morton, the town Doctor, and this is my friend Stanley Wilkes. Where're you from?\" \n\nI took his hand, shook it and said, \"My jurisdiction is a long way from here. I'm just in town to clear up the details of a murder case.\" \n\nSeriously??!! Well it was true. The jurisdiction was seventy years in the future and no murder was going to happen on my watch. \n\nI was aware of the irony. If I prevented the murder, then the Mavis I would meet seventy years later would be in her nineties. But, I firmly believed that I was here for some reason and the only one I could think of, was to prevent what was going to happen two days from now. \n\nI loved Mavis with every fiber of my being. So, I didn't want harm to come to her; no matter what the consequences were for me. \n\nI gave a rueful smile and said, \"My luggage got misplaced on the way here.\" Yeah sure! By about seven decades. \n\nI added chuckling, \"I can't wear this uniform all the time. So, I need some clothes to tide me over; just a couple of shirts and pants and other necessaries.\"\n\nThe Doc provided a running commentary as his buddy helped me. People didn't run to the doctor for every little thing back then. It was obvious that Doc had a lot of time on his hands.\n\nHe said, \"We have a nice little town. People are really friendly. We haven't had a Sheriff, since Orville Hickenlooper died, and we could sure use one. When you get your murder case resolved, you ought to think about settling down here. I know they could use you.\"\n\nI was thinking, \"If this isn't a dream I might take him up on his offer.\"\n\nThe total cost for three short-sleeved plaid shirts, a week's supply of boxers and two pairs of khaki pants was almost twenty-four bucks. I paid the man with one of my hundreds. He looked nonplussed. The Doc said kindly, \"Why don't I take you to our bank and we can break that for you.\" \n\nSo, he escorted me up the street to the bank. The main thing I noticed about the bank was the lack of electronics; no ATM's, no workstations, no screens in the teller's cages, just ledgers and cash drawers. The other thing was the small-town hominess. Everybody knew everybody else, and there was a lot of joshing. It was like a family restaurant. Not the sterile bank atmosphere I'm used to.\n\nI broke the first hundred and got a bunch of change for another. The Doc chattered all the way down and back about what a nice town this was. It really wasn't a whole lot different than it was in the next Century. There were a few missing buildings and more open lots and alleys. But the general shape of the place was completely familiar. \n\nThe haberdashery guy actually wrapped my purchases in paper and tied a string around them. I said \"thanks\" and was carrying them out the door, when I ran smack-dab into my destiny.\n\nMavis was rushing up the street. She had her eyes down and she looked a little upset. The door of the haberdashery opened directly onto the sidewalk and I didn't see her coming. So, I stepped out and we collided. \n\nI'm six-two. She's five-two. You can imagine who won THAT encounter. I grabbed her by both arms to keep her from falling into the street. Then I swung her back to face me. \n\nShe looked into my eyes and I could feel the energy crackle across seven decades. She, could too. She looked astonished, as well as horrified. \n\nI had the advantage. All Mavis saw was a big intimidating lawman in a Smokey the Bear hat; tools of the trade strapped to his waist. But, I had lived with her as my beloved wife and the mother of my child for almost ten years. \n\nStill, I couldn't exactly whip out the wedding album. It was far too early. I said formally, \"Pardon me Miss.\" \n\nShe just stood there staring at me mouth open, with those incredible china blue eyes registering a firestorm of emotion. I was getting emotional myself. I had loved her, and fate had snatched her away. But, I'm pragmatic enough to hold onto my cards. My only aim was to snatch her back.\n\nI said, trying to keep what I was feeling out of my voice, \"I know you from somewhere, don't I?\" \n\nI resisted the urge to throw her over my shoulder and head for the nearest Justice of the Peace. \n\nShe shook herself like a dog drying itself and said hesitantly, \"I don't believe so Sheriff.\"\n\nIt was obvious she thought that she knew me too. But, she ALSO felt it was prudent to keep her cards close to her delectable chest. \n\nJust as Mavis said that, a greasy little pretty-boy, complete with cupid-bow lips and a genuine Elvis hairdo, grabbed her by the arm and said, \"What are you doin' talking to this guy Mavis. You're my girl.\" \n\nThe condescension and possessiveness in his voice almost made me reach for my Asp. She said, \"Don't flip your wig. I was just jawin' with the Sheriff Jimmy.\" Okay, they would probably think that our 21st Century argot was outlandish too.\n\nHe said, \"Well you'd better get around to provin' it or I might find myself another girl.\" And he yanked her up the steps toward her apartment. She looked back longingly in my direction. \n\nAt that point the Doc came out. He watched the two of them enter the apartment. He said, That's Jimmy Rawlins. He's a no-good punk. But, his parents have money. She's a beautiful girl. I don't know what she's doing hanging around with him. I guess there's no accounting for taste.\"\n\nMavis respects strength in a man. So, she would gravitate toward anybody who appears decisive. Jimmy-boy was an arrogant little shit. So, I understood why she was with him. Of course, I planned to alter that arrangement.\n\nI was just getting into the car when the sound of Mavis moaning wafted out the wide-open windows of her apartment. Air conditioning was a rarity in the forties. So, of course they would have the windows open. \n\nI thought, \"Great!! Just what I needed to hear.\" \n\nI had nothing to say about it YET. Technically I wouldn't be born for another 27 years. But the sound of the love of my life making sexual music with another man just about killed me.\n\n*****\n\nDot rolled me out at 7:00 the next morning. I had slept like the dearly departed, in the cozy comfort of her mother's house. \n\nDot said, \"It's Tuesday and I'm off today. So, you can take me for a ride in your little car.\" I loved her chutzpah.\n\nI said, \"What does your mother think about that?\" \n\nDot laughed and said, \"She thinks you're great. Maybe you can be my OTHER daddy.\"\n\nI laughingly said, \"Out!! You already have one!!\" \n\nHer dad was an older Swedish man whose English was questionable. But who clearly doted on his daughter. I think all of that unconditional love was what made Dot so spirited.\n\nBreakfast was at the Hot Spot. It was one of the perks of being a lodger. Dot and I were just finishing up when Jimmy and Mavis walked in and sat at a nearby table.\n\nDot went over and joined them. She was excitedly telling Mavis about the day that we had planned. \n\nJimmy looked like he was channeling James Dean's character in, \"Rebel Without a Cause.\" But in his case, the impression was more like, \"Rebel Without a Clue.\" \n\nHe was wearing the uniform, of the 1940s punk; white t-shirt, with a pack of Lucky's rolled up in one sleeve, a pair of the old fashioned heavy blue jeans and motorcycle boots. His thick black hair was carefully styled into an oily waterfall over his forehead. The grease was slowly oozing down his nose. \n\nMavis loves children. I already knew that. She was a fantastic mom in another realm. She was animatedly talking to Dot, while she was longingly eying ME. She still looked confused. I didn't blame her. I was no better off than she was. \n\nDot was chattering about her day, when Fuckface decided that it was time to be an asshole. He grabbed Mavis and swung her around in her chair. He said angrily, \"Stop talking to that brat. You're supposed to be with me. I don't tolerate disrespect from my woman.\" \n\nMavis has a temper and Dickbreath had set her off. I thought, \"Oh-oh!\" She shook his hands off her, and stood up. She said with fury in her voice, \"Don't you DARE talk to me like that. If you can't be a gentleman, then maybe I'll go with Dot and the Sheriff.\" \n\nThen she walked over to where I was standing, took my arm and said, \"Can I ride with you two until Jimmy learns some manners.\" \n\nJimmy jumped to his feet and approached me threateningly. He was a little guy, perhaps five-six and maybe one-forty, like a banty rooster. He said, \"She's my girl so fuck-off, or I'll mess you up.\" He was talking to my chest. \n\nI had to laugh. That was unfortunate because it made him take a swing. I caught his fist in midair. It felt like a little girl's. Then I slowly twisted him to the floor, onto his knees. \n\nHe was struggling to get his fist out of my hand, while calling me names that I didn't want Dot to hear. Except my little friend was obviously enjoying every second of what was happening. \n\nMavis looked horrified and totally turned-on. \n\nI said, \"Mavis is a grown woman and a respected teacher in this community. She can do anything she wants and if she wants to ride up to Eau Claire with me and Dot she is welcome to do so.\"\n\nThen I added in a menacing tone of voice, \"I am going to let go of your hand now, and I would strongly advise you to NOT push this any further. Needless to say, we'll talk again, if you ever think about taking this out on Mavis.\" \n\nI gave his hand a violent twist, enough to cause him some pain. He yelped and then sat there on the floor clutching his wrist. The other patrons looked approvingly at me. Apparently, I wasn't the only person in town who thought that Dickface was a pain in the ass.\n\nThe three of us strolled out of the Hot Spot and got in my shiny blue Ford; Mavis in the front with me and Dot in the back leaning over the seat. Jimmy watched us from the diner steps. \n\nJimmy yelled, \"Take the slut. I don't want her whore ass anyhow.\"\n\nI almost got back out of the car. But Jimmy quickly ducked into the diner.\n\nI've been a cop a long time. I knew that we hadn't heard the last from him.\n\nTuesday July 30th was a beautiful sunny day in Wisconsin. So, the top was down. Now that it was just Mavis and me, our past love was beginning to work its mysterious magic. \n\nLong married couples, who manage to keep that special something, have a profound link that binds them at some deep subliminal level. Mavis and I had that kind of intense connection all our married life. \n\nNow, the future was influencing our present. Mavis had stopped staring at me. Instead she was doing the woman-thing where she kind-of melded herself into me. We were just lightly touching physically. But our hearts were beating together, and our minds were on the same wavelength. \n\nDot said from the back seat, \"I don't want to go to Eau Clair. It's too far away and you two are creeping me out.\" \n\nI said brightly, \"Then how about a picnic?\" I looked at Mavis. She was staring at me with a mixture of awe, lust and confusion. \n\nI got it. The feelings were so powerful that they had to come from somewhere. But, she couldn't figure out where. I had the advantage. I knew that her future was OUR past. \n\nWe picked up some delicious nibbles at the market. It was a little store, not a \"super\" market. Everything was astonishingly fresh. \n\nThen, I drove us a little way out of town to a spot overlooking the millpond. We had to cross a small creek to get there. I helped Mavis over the stones and Dot hopped across, agile as a little cat.\n\nWe spread a blanket on the edge of the bluff. It was where our house would be seven decades in the future. But right now, it was just a tranquil spot in the woods. \n\nI could tell that Mavis was getting the vibe. It was what I'd intended. She had loved her house and she had made it a happy home for almost a decade. \n\nShe kept looking at me puzzled. I should have enlightened her. But, what can you say? \"Hi, I'm your husband from seventy years in the future and we are sitting on the spot where our house will be. I know that sounds a little bizarre but it's true, trust me.\" \n\nShe would have run screaming to the authorities waving a \"Personal Protection Order.\" So, I just kept holding onto my cards, waiting for the universe to decide what to do with us. The one thing I KNEW, was that Mavis wasn't going to suffer any harm. \n\nShe was clearly happy to be with us. I watched her chattering about ducks with Dot. They were both looking at the Millpond. So, I was able to get away with giving her an avid look. It was painful being so near, and yet so far. God! I had missed her. \n\nThen she and Dot, still laughing and chatting started to walk up a little hill. It was where a small willow tree had just started to get its characteristic drooping branches. The two girls wanted a better view of the Millpond. I'd seen the same scenario hundreds of times. Except the little girl walking with Mavis was our daughter. I smiled fondly in recollection.\n\nThen it hit me!! She was about to stand on the place where I had buried her. I leapt to my feet and was about to yell \"Mavis!\" when they arrived. \n\nShe was holding Dot's hand. They turned to look out over the stream, which was full of wildfowl. Then abruptly and without a word, Mavis crumpled, like a balloon losing its air. \n\nI rushed to her. Dot was on her knees holding her hand and saying in an anguished tone of voice, \"Mavis, Mavis!\" I picked her up and carried her back down the hill. It was the first time I had held her since the day I had lost her. It was excruciating.\n\nMavis started to come around as soon as I removed her from the effects of the spot. She clutched me terrified. I could guess what had happened and I had no words. How do you tell somebody that they were standing on their own grave? \n\nI said, \"You'll be fine now Mavis. It must have been something you ate.\" Ludicrous, yes; but what else could I tell her?\n\nShe looked at me with huge eyes and said, \"I felt like I stepped into a void. I was falling into oblivion.\" \n\nI said soothingly, \"It was probably just low blood sugar. I've seen these things before. I'm a police officer, you know.\" Seriously???!!! I sounded more like a politician.\n\nWhat I said, must have satisfied her. I put her down. She was unsteady on her feet. She took my arm again and laughed lightly. She said, \"Sorry for scaring you two.\"\n\nDot chuckled and said, \"Thanks for the show. I've never seen anybody faint before.\" Dot was a spirited little minx, and I knew she wouldn't lose one iota of that spunk in the next seventies years.\n\nI said, \"Maybe I'd better get you home.\" Mavis nodded gratefully.\n\nWe picked up our stuff and retraced our steps to the car. Mavis and I had spent enough time together that all the walls were down now. So, it was an easy camaraderie, as we made our way back to Main Street.\n\nI dropped Dot off at the Hot Spot and continued on to Mavis's place. I saw Jimmy's face disappear from the window of her apartment as we rolled up. \n\nMavis got out and walked around to my side. It was obvious that she was having as hard a time parting company with me, as I was with her. But like I said, how do you open the conversation that we would eventually have to have? \n\nI said lamely, \"I hope I see you again.\"\n\nShe said eagerly, \"Oh yes Sheriff. I would really like that.\"\n\nI said worriedly, \"If Jimmy gives you any trouble I am just two blocks away. Over in Barbara Hansson's boarding house.\"\n\nShe smiled prettily and said, \"Don't worry about Jimmy, Sheriff. I can handle him. He loves me too much to bust my chops.\"\n\nThen she turned and walked slowly up the stairs. The well-remembered swaying of those round muscular buns reminded me of the endless nights of passion we'd shared. I knew she was too good for Jimmy. I also knew that he and I would meet again. \n\n*****\n\nI was handling this like any normal police operation. In some respects, it was. I was going to prevent a murder. So, I had to know every detail about the lay of the land. As a result, I spent the rest of the day and the next reconnoitering. \n\nI was well-aware of the fact that it would change a lot of things along the timeline if I stopped Mavis's murder. Maybe that was selfish on my part. Because there would be inevitable repercussions. But whatever happened in the 21st Century had already taken place on my timeline. So, there was no way it could \"UN-happen.\" \n\nIt was clear that the force that had brought me to the current point in time, which I assumed was the love that we felt for each other, was influencing Mavis's attitude toward me. If it wasn't, I was sure that she wouldn't have been so instantly attracted. After all, I had just met her, and she DID have a live-in boyfriend. \n\nThe boyfriend was going to be a problem. I didn't think Mavis loved him, as much as she needed a man in her life. That was one of her special traits. She wasn't happy, without a guy to devote herself to. And she was fiercely loyal to whoever the lucky man was. \n\nIn my not-so-humble opinion, Jimmy was a skell. In my years in the police, I had seen thousands just like him. He was a weak, delusional and self-involved little man whose main claim to fame was that he had some money and a dick. \n\nBut the real culprit, as I already knew, was Felix Wynn. The last time I had seen Wynn, he was lying stone-cold-dead in the old folk's home. I knew that he wouldn't look like the mummy that he had resembled back then. So, I wanted to scope him out.",
        "God! I was beginning to think of the 21st Century as, \"Back then!\" It was confusing keeping my timelines straight.\n\nAnyhow, I wanted to take the measure of Wynn, as a young man. But, I had to find him first and they wouldn't have the internet for another 50 years. So, I was stuck with old fashioned technology. \n\nIt was surprisingly effective. \n\nI walked down Main Street to the phone booth on the corner of Lincoln and Lafayette. There was a payphone inside. I hadn't seen one of those since I was a kid. I wasn't there to make a call. I wanted the phone book. It was amazingly thin. Of course, there were only a few thousand folks in the entire County in 1946, and most of them didn't have phones. \n\nI opened it and ran my fingers down the page to a Wynn, Felix R. He lived over on the west side of town by the tracks. That was probably because it was within easy walking distance to the High School.\n\nI knew from the 21st Century case files that Wynn had gone off the deep-end, while both he and Mavis were teaching there. Mavis is stunningly beautiful. She radiates an eroticism that would make any man crazy. But most guys obey the rules. Wynn didn't.\n\nWynn had been doing the kind of groping and fondling that we would call sexual harassment. But, the guys back in 1946 would call \"flirting.\" Either way Mavis didn't like it and she complained to the District. They ignored her. Until Wynn snapped one day and outright tried to fuck Mavis on her teacher's desk. \n\nMavis's cries for help attracted a crowd, and a couple of male teachers pulled Wynn off her. The whole thing was so unheard of and embarrassing to the District that they covered it up by firing both. Was that fair? They thought so, back then. \n\nThe result was that, a fellow who was clearly mentally disturbed was roaming around waiting for his next shot at the object of his obsession. That would culminate in Mavis's murder if I didn't do something. \n\nI cruised by Wynn's shack. It was made from weathered boards and it looked like it might be two rooms, shitter out back. It was still very hot. He was sitting on his porch in a wife-beater and a pair of pants held up by suspenders. I parked and walked up to him. He rose suspiciously.\n\nHe was bigger than Jimmy. But most people were, even back then. He looked to be maybe five-eight, and a hundred and eighty pounds. He obviously considered himself to be a lady's man, thick black hair slicked back from his forehead by a lot of what they called hair-tonic back then. It was mostly oil. \n\nWynn had the same pencil thin mustache as the Doc. Clark Gable was still an icon among movie leading men. He had little beady eyes next to a slightly too large nose and thin angry lips.\n\nI put on my most innocent tourist face and said, \"I'm lost Mister. Do you know where Fall Creek is?\" \n\nWynn looked me up and down. He was an arrogant son-of-a-bitch. But, I was a helpless tourist, so I averted my eyes like I was intimidated. \n\nWynn said, \"Get off my property, or I'll shoot you.\"\n\nI said, \"No need to be that way buddy. I'm just looking for directions.\" \n\nWynn rose and stalked into his piece-of-shit house. I knew he was going to come out with a shotgun. \n\nGod help me, I was tempted. I could just shoot him right-then-and-there and be done with it. I knew plenty of places to bury a body. But I wanted to play this out as close to what happened as possible. I just had to know.\n\nSo, I turned and scampered back to my car. Wynn fired a shot in the air, laughing. I started the Ford and drove hastily back onto the road and back to town. I had seen my adversary and understood him. Now it was just a matter of waiting for the cards to be dealt.\n\n*****\n\nIt was dusk, and I was watching from my car, which was parked, top-up, opposite Mavis's apartment. I was hunched down in the seat. I've been a cop a very long time and I can do stake-out surveillance with the best. \n\nNobody saw me. \n\nI hadn't seen Mavis since the picnic. But I had seen the dress. She came down the steps in the same outfit that she was wearing when I met her in the future. \n\nShe clearly had on her best clothes. It featured a short wool skirt, that showed off her fantastic legs, old-fashioned nylons, with a seam up the back, 3-inch heels and a nice white blouse. The entire ensemble was topped by a jaunty, short wool jacket that matched her skirt. \n\nThe weather told me that she was dressed in her only good outfit. It must have been in the 80s still, and the sun had set a while ago. Only a girl dressing to impress would wear something like that in this heat. \n\nShe stood under the streetlight in front of the Doc's clinic, waiting for the bus to Cadott. It ran up State 27 all the way to Cornell. \n\nThe bus pulled up. She got on board and it ground away. Turned right on 27 and headed slowly toward Cadott and Mavis's eventual fate. \n\nI shifted the Ford into gear and followed behind. \n\nThey dropped Mavis at the front of the Crescent. The place is still there in the next Century. It looks like an old barn, converted to a bar. The sign out front was about the only difference. It was lit by a single green shaded light bulb, not modern neon. \n\nMavis walked up the steps to the porch and entered. I parked and waited fifteen minutes. There was a big party going on. People were circulating, and a lot of them were drunk. I remembered that it was a welcome home for one of the locals. He'd just gotten back from World War II. \n\nMavis stood out in the midst of the joviality. She was slumped at a table looking depressed. Jimmy was sitting next to her, arm placed possessively along the back of her chair, smoking a Lucky, and bantering back and forth with all his friends. \n\nThey both had drinks in front of them. I knew what had been dropped into Mavis's drink. I'd read the autopsy results. The presence of chloral hydrate was part of the case file.\n\nGlancing around, I saw a couple of things. Wynn was sitting at the bar smoking and looking as jumpy as the proverbial cat. \n\nThe other was Mavis's face. She had two black eyes!! \n\nI had heard that people actually see red when they go off the deep-end. I had never experienced that phenomenon - until then!! My cop brain was screaming at me to calm down, since my mission was to prevent Mavis's murder. But the part of me who loved my wife was reaching for the Asp.\n\nThe Asp is eight inches of very special metal alloy. It can be carried in your pocket. It expands with a flick of the wrist into a two-foot-long fighting baton. The metal is formulated in a way that the tip of the baton is flexible. So, you can whip it at close to supersonic speeds. Consequently, the outcome of an Asp strike is like being shot.\n\nMy emotions were too riled. I had to get out of the place before I did something stupid. I stood, and bolted out the door. Once I reached the parking lot, I bent over and put my hands on my knees. I was taking deep breaths, trying to get my self-control back. \n\nAfter a while, my molten anger died down and I turned to go back inside. That was when I heard a mocking voice say, \"What's the matter, too chicken to fight me? Mavis disrespected me, and I beat her up and sold her whore ass to Felix Wynn. Now it's your turn.\"\n\nI looked up into the conceited, smirking face of Jimmy Rawlins. He was standing there, all misplaced cockiness. He also had about eight of his friends in a semi-circle behind him. The friends contributed to his erroneous feelings of self-assurance. \n\nI thought, \"Pennies from heaven!\" This fool had hit my wife and drugged her, and now I was going to present him with the bill!! The thought of this douchebag using his fists on Mavis's delicate flesh made me wild with rage. I said, trying to keep the eagerness out of my voice, \"All right boy, bring it on.\" \n\nThe moron actually jumped into a stance like the Marquess of Queensbury, fists up, left foot spaced in front of the right. \n\nI didn't have the time to prance around like Gentleman Jim. So, I said, disgusted, \"Seriously??!!\" and kicked him in the crotch. \n\nIt was thoughtful of Jimmy to spread his legs like that. It made the kick so much more effective. I put all my pent-up fury into it, and It lifted Jimmy a half foot off the ground. \n\nHe gave a loud strangled grunt and doubled over. That was convenient since it meant that I didn't have to raise my knee quite so far to slam his face down on it. I could hear facial bones snapping. Jimmy-boy wouldn't be as pretty, or as virile as he used to be. \n\nHe hit the ground. I bent over and grabbed his right hand, and jerked it away from his body. Then I ground my heel into it. He screamed in agony. The loud crunching of bones was music to my ears. That might seem a little over-the-top ruthless. But, that was the hand that had hit my wife. He wouldn't be using it on any other women. \n\nThis all took perhaps five seconds. I turned toward his friends, whipped out the Asp, deployed it with a flick of my wrist and said, \"Which one of you knuckleheads is next??!!\" \n\nThe biggest of them yelled, \"That ain't fair!!\" and plunged at me. I'm an expert with the Asp. You have to be, if you are in the police business. And, I was in a hurry to get back to Mavis. So, I kneecapped him with a single strike. I don't know how advanced orthopedic surgery was in the 1940s. But I was sure they could sew SOME of the ligaments back together.\n\nI turned waving the Asp and yelled, \"Anybody else??!!\" \n\nThe rats scattered. Jimmy was lying on the ground in a fetal position moaning loudly. He had shit himself. The other guy was crying like a little baby girl.\n\nI had been distracted for no-more-than twenty minutes. But when I got back I discovered to my absolute horror that Mavis wasn't sitting there anymore. Even worse Wynn wasn't there either. \n\nI have been in some tough situations; none worse than the day I lost Mavis. But that empty chair nearly killed me. I muttered under my breath, \"Not again!!\" and bolted to my car. \n\nThe only logical place was Wynn's house. I knew where he lived thanks to yesterday's visit. I didn't know how far in front of me he had gotten, but it didn't matter. I was going to arrive soon after the beginning of whatever festivities he had planned.\n\nWisconsin 27 was paved but it was still a very narrow road. My faithful 1940 Roadster had one of the classic Ford 239, flathead engines, so beloved to the hotrodders of the 1950s. I didn't know what Wynn was driving but I was pretty sure I was faster. \n\nI drove maybe 18 of the 20 miles between the Crescent and Wynn's place at seventy miles an hour. Those were 1940s roads in a 1940s car. Any faster and I would have been in the trees. \n\nI was almost to the town limits when the car started to quiver and wobble. I instinctively slowed. That was a wise decision because at that point the right front tire blew. \n\nI muttered under my breath, \"Damn-damn-damn-damn!!\" as I wrestled the car to the side of the road. \n\nSome people would have sat there pounding the steering wheel in frustration. But I was in panic mode and the adrenaline was flowing. \n\nI was still perhaps three quarters of a mile from the point where 27 intersects Main Street and then another mile back to Wynn's place. But yesterday's careful reconnaissance had paid off. I knew that 27 slanted into town. If I had been driving, I would have gone all the way to the intersection and then turned right, to come back out of town to the house.\n\nBut, on a direct line through the woods and across a freshly plowed field, I was only a quarter of a mile away. \n\nI hopped out of the car, and bolted off into the trees, running as fast as I could. I jumped Bridge Creek and found a path in the surrounding underbrush, which led to the open fields around the high school. \n\nIt was close to 11:00 PM but the moon was full, and it was a cloudless July night. As I pounded along I was thinking-through the timing. \n\nIt had been about an hour since I had last seen Mavis. It would take a little while for the drug to get her into a state where Wynn could whisk her out of the bar. Wynn wouldn't be in a hurry getting home because he didn't know that anybody was after him and he HAD all night. \n\nI figured that he might be less than fifteen minutes ahead of me. I was sprinting full-out as I crossed the farmer's field, homing in on Wynn's shack. I didn't have time to be subtle. \n\nThere was only one door and that was the front. Wynn might have been waiting behind it with a shotgun. But he didn't know I was coming. I also knew that he would be otherwise occupied. \n\nMy blood boiled. But I still took the time to slow down, creep up on the porch and silently open the door. I could hear murmuring. They were in the bedroom. \n\nI edged my way in that direction, Asp fully deployed. \n\nI heard Wynn say, self-satisfied, \"You're my woman now.\" Then there was a gasp and the sound of a sloppy kiss. That was followed by a loud bellow of pain and a slap. \n\nI knew Mavis had bitten his lip and he had hit her. She told me that during the investigation. She was also using some very unladylike language to describe Wynn's manhood. \n\nHer voice was cut off by a gargling noise. Wynn was leaning back as he strangled Mavis. I had just gotten to the foot of the bed.\n\nWynn's hairy ass was firmly lodged between my wife's widely spread legs. He was using his own legs to keep them spread. \n\nHis position was delightfully convenient because it gave me a lot of his personal real estate to target. There was the characteristic \"crack,\" as the tip of the Asp went supersonic. And, the first strike hit directly at the base of his nut sack. \n\nThe impact sounded like a 9-mil hitting a watermelon. I knew that Wynn wouldn't be having sex for the rest of his life. The prostate is directly under that area and I was sure I'd blown that up along with his balls. \n\nWynn shrieked and soared up in the air. He looked, for all the world, like a Marlin trying to break free from a fisherman's line. Wynn landed back down on Mavis, who went, \"Ooofff!!\" and began to writhe herself, trying to get her breath back.\n\nThe fucker was totally limp, as I grabbed his thick greasy hair and dragged him off my wife. I was going to tell him about all the creative things I was going to do to him. But I saw that I would be wasting my breath. Felix Wynn was deader than that proverbial door-nail. The pain must have been too intense. \n\nWell, I knew from the first time around that he had a bad ticker. \n\nAll I had to do now was get us out of there. I was certain that Wynn's death would be ruled \"natural causes.\" There was no conventional sign of foul play, and forensic science in 1946 would never guess that the purple mark on his balls was an Asp strike. \n\nSo, Wynn was dead, and Jimmy-boy would be in the hospital for a very long time. All-in-all a good day's work.\n\nI couldn't foresee any legal difficulty from Jimmy. This was rural Wisconsin in the 1940s, not the politically correct society of the 21st Century They'd never prosecute a guy for getting in a fight; especially if the fight had been instigated by the injured party and eight of his friends.\n\nI looked at Mavis. She was naked, writhing on the bed, still trying to get her breath back. Her body was as incredible as ever, even if it was smeared with Wynn's cum. \n\nI walked to the bed and sat on it. She flinched away. I imagined that the last thing she wanted was to be touched by a man. So, I said gently, \"You're safe now Mavis. Nobody will EVER harm you again. You're my wife and I promise you that I will protect you with my life.\" \n\nShe stopped writhing and started sobbing. It was pathetic. I said as humbly and respectfully as I could, \"Would it be alright if I held you; just to comfort you. I am not like that other fellow.\" \n\nShe nodded pitifully and sat up. Wordlessly, she threw her arms around my neck and sobbed on my shoulder. I held her and just repeated over-and-over, in my most calming tone of voice, \"It's all right my love. I'm here now and I will never leave you.\" \n\nShe finally stopped crying. I said, \"If you're able to walk, my car is just on the other side of the woods. If not, I'll carry you.\" She started to stand and collapsed back. \n\nI said, \"Can I help dress you?\"\n\nShe nodded again. She hadn't said a word at that point. I slipped her panties and dress up her long beautiful legs and over her ripe, round hips. She lay there unresponsive. \n\nI got her to sit up and tenderly helped her into her shirt, buttoning it past those succulent breasts. I did that without touching them. I slipped her jaunty little coat on her. Then I put everything else, pillbox hat, nylons, girdle, bra and shoes into a handy burlap bag. \n\nI picked up my wife and carried her out into the night. She had her right arm around my neck and her head resting on my shoulder. She was as light as a feather. I had forgotten how exquisite she was. \n\nThe walk through the fields and woods was exhilarating. I was holding her in my arms thinking, \"I might be dead somewhere in the 21st Century. But, it doesn't matter. I'm alive in this one, and she's in my arms.\" \n\nI was happy for the first time since that cataclysmic day in a future November; which was either a decade in the past; or seventy years in the future. God! It was confusing.\n\nI had already noticed one odd thing. In realigning the cosmos, our relative ages were preserved. Mavis was twenty-five in 1946, I was closer to fifty-two, in real-time. But I was back to the thirty-two-year-old version of myself in this reality, and believe me, I could tell the difference.\n\nAs far as I knew, I was now as dead as Mavis had been when I met her. Or maybe this was just the happy dream of somebody lying in a deep coma. It didn't matter one bit. I was with her in a vibrant post-war America and that was all I cared about. It was like the two of us had gotten a complete reset.\n\nI opened the passenger door of the Ford and put her in the seat. I closed the door and she immediately slumped to lie across the front. The fact that Mavis was still under the influence of the drug was a good thing. Perhaps she wouldn't remember much about what had happened. \n\nI jacked the car up and changed the tire. My shirt was soaked from changing the tire and I was exhausted. I couldn't take her back to the Hannson's house. So, I drove to the only other logical place; Mavis's apartment. I knew that Jimmy wouldn't be coming back there anymore.\n\n*****\n\nI awoke on a bright and sunny August 1st. I had fallen asleep in Mavis's only comfortable chair. I was still dressed in my short sleeve plaid shirt and khakis. \n\nI looked across the room and saw a solemn pair of eyes, studying me from the bed. She was sitting up, still wearing the clothes that she had worn the night before. She said suspiciously, \"Who are you?\"\n\nI said jocularly, \"Your knight in shining armor; at your service madam.\" \n\nMavis looked disgusted and said, \"No, who are you, really?\" This was going to take tact, and I needed a firebreak between last night and our future together. \n\nMavis was alive and breathing, not buried in an unmarked grave in the Nicolet. So, we had an entire lifetime in front of us. But the transition into that new lifetime had to be carefully managed. \n\nEven without last night's drugging and rape, I knew that the discussion was going to be earth-shattering for both of us. I simply couldn't bear losing her again.\n\nI hadn't had my morning coffee. So, I said lightly, \"I never do anything involving my brain until I've had my first cup of java. Let's walk down to the Hot Spot and we can talk there.\"\n\nShe said, \"I need to take a bath and wash all this off me.\" She gestured down her body. I knew what she was talking about.\n\nI said, \"I suppose I should too. Why don't we meet there in an hour?\"\n\nShe smiled for the first time and said, \"Breakfast is on you. You have a lot of explaining to do young man.\" Her indomitable spirit was back.",
        "One hour later I was sitting at a table in the Hot Spot. I had taken a bath, showers being a rarity in the 1940s, except in a barracks. I shaved and dressed in another one of my new shirts. I felt like a new man. \n\nI said to Dot, \"Can you bring two coffees over here,\" and sat down as far away from everybody else as I could get. \n\nMavis walked in a few minutes later. She was heartrendingly beautiful and obviously pissed. \n\nShe was in a light cashmere Betty and Veronica sweater with a pleated skirt, knee socks and a pair of saddle shoes. It showcased her slim, beautiful legs and her amazing rack. She had a little silk scarf tied jauntily around her neck.\n\nMavis plopped down across from me. Dot put a cup of coffee in front of her. Dot, being Dot, said cheekily, \"Did Jimmy give you those?\" Mavis's two shiners did nothing to mar her beauty. \n\nMavis laughed and said, \"No, I ran into a door, clumsy me.\"\n\nDot looked at me and said sincerely, \"I hope you evened the score Sheriff. Can you arrest him?\"\n\nI laughed heartily and said, \"I think he's in the hospital now, and nowhere near as pretty as he was yesterday. Accidents will happen, you know how it is.\" \n\nThat was also a test for Mavis. Prior to this, she had been living with and obviously fucking the guy. I wondered how she would react to her lover's \"accident.\"\n\nMavis got a beatific look, it was like she had suddenly realized there WAS a God, and said with considerable self-satisfaction, \"Good!!\"\n\nDot nodded emphatically and laughed. She had a couple of menus under her arm. She handed them to us, spun on her heel and walked away still chuckling. Jimmy clearly didn't have many friends. \n\nI glanced at the menu and then looked up into a pair of china blue eyes. They were busily boring into my brain. Mavis is a highly intelligent and very strong-minded woman. Last night, she had been beaten, drugged and raped. A lot of women would be destroyed; unable to cope. Mavis wanted answers. \n\nI looked at her flawless face, every feature perfectly proportioned and aligned under her mass of curly black hair; and the sense of relief washed over me. If I was dead than so-be-it. This was where I wanted to be. \n\nI said, \"You graduated from the Normal School in Eau Claire, and you taught English Lit at the high school, so you've probably read H. G. Welles, right?\"\n\nMavis looked astounded. She said outraged, \"How did you know THAT? Have you been prying into my personal life? I have rights you know!\" Beaten, raped and feisty. That was the Mavis I loved.\n\nI laughed and said, \"Relax, it's part of the story. But you are going to have to open your mind. You know Welles, \"The Time Machine?\" \n\nShe nodded her head in assent and said, \"I assigned it to my students.\"\n\nI said, \"Do you believe any of that could happen?\"\n\nShe laughed and said, \"That's silly! OF COURSE, it couldn't happen! Where are you going with this?\" \n\nI sensed that the discussion wasn't proceeding the way I wanted it to. Mavis was likely to walk out if I told her the real story. So, I laughed and said, \"I just wanted to find out how open minded you are.\" \n\nI knew how weak that sounded the minute I said it.\n\nShe said, grim as an Inquisitor, \"You called me your wife last night.\" \n\nI could see that I was not going to wiggle out of THAT. So, I said, \"Sorry, figure of speech; what I meant to say was my FUTURE wife.\" I grinned disarmingly and said, \"I would have added and mother-of-my-children, but I thought that was getting ahead of myself.\"\n\nShe grinned back seductively and said, \"Oh-ho!! Aren't YOU the bold one. What makes you think I'd even give you the time of day?\"\n\nI looked at her with serious eyes and said, \"You felt the attraction. Hell, even Jimmy saw it. I don't know what's come over me. But I can't see living my life without you.\" \n\nThat was way too far over the line, and there was too much sincerity in my words. Losing Mavis had been so awful that I couldn't even talk about it without emotion creeping into my voice. \n\nIt bothered Mavis a lot. I quickly shut up. Mavis said angrily, \"How could you say something like that? I don't even know you.\"\n\nI said jokingly, \"Maybe we WERE married in another life? Maybe THAT explains it?\" \n\nShe did that fidgeting thing that women do when their emotions get too riled up. I was counting on the love we had shared to move this to its inevitable destination, and that clearly wasn't going to happen.\n\nShe said with annoyance in her voice, \"I don't know who you are or why you are messing with me. But, YES, I have sensed that there has been something significant between us.\"\n\nShe was getting angrier by the second, as she said, \"I can't figure out what's causing it, and it bothers me. I remember most of what happened last night, including the unwilling sex, and I know that you saved me. But, unless you can explain what you just said; you need to shove off.\" \n\nAlright, it was down to the nut cutting. I tried my most convincing voice, \"Let's go somewhere private. You aren't going to believe what I have to tell you. But, I'm counting on the fact that you trusted me in the past, to help you to trust me now.\"\n\n*****\n\nWe walked into her little apartment. It was a cozy place. She had a living room with a couple of upholstered chairs, a table in front of the window, with a little lamp on it, and a floor lamp next to one chair. It was the chair that I had slept in last night. \n\nThere was a cheap, but clean, hooked-rug covering the painted wood floor. There were racks of books in a couple of bookcases. Mavis saw where I was looking and said self-effacingly, \"I like to read.\" I knew that because she had lived in the library when we were married. \n\nThere was a bed against the wall, neatly made. There was one other room and that was the bathroom. It looked like Mavis cooked on a hotplate.\n\nI sat in one chair. She sat in the other. I noticed how well-ordered everything was. There was no clutter, no pots in the little sink. Mavis had been a great homemaker and it was clear that neatness was a deep-seated part of her personality. \n\nShe was looking at me intently. The two bruises were disturbing but they didn't detract from her porcelain skin, or the natural shape and deep intelligence of her eyes. Her thick black eyebrows were arched. She was waiting for me to tell my story.\n\nOh well, as the Brits say; \"In for a penny, in for a pound.\" I said, \"Everything I am about to tell you is true. I have no way of proving it. But I want you to trust your feelings. They will help you see that I am being honest.\"\n\nI sighed and began, \"We were married for nine years. We were very much in love. We have a beautiful daughter named Ava. This is the only proof that I have that this happened.\" \n\nI fished in my pocket and pulled out my cell phone. It was turned off. I needed to preserve the battery for this very moment. \n\nI could see that Mavis was about to erupt. Then, she was distracted by the phone. She looked puzzled. She said, \"What's that?\" \n\nI said, \"It's my telephone. This is how we make phone calls in the Twenty-First Century.\" \n\nMavis let that pass. Then it hit her. She said astounded, \"Wait!!! Did you say Twenty-First Century??!!\" She looked incredulous. \n\nI said lightly, \"Close your mouth, or you'll catch flies.\" \n\nAs the phone booted-up, I said, \"I can't use it to make phone calls here. Because, it depends on other technologies to do that. But, it will confirm what I'm going to say.\" \n\nMavis looked unconvinced. Anybody would react that way if a total stranger showed up in their living room and spun an utterly preposterous tale like mine. \n\nI looked her in the eyes, willing her to believe what I was about to say. I said, \"I know that what I'm saying sounds nuts and I'm probably frightening you. But I think you can see that my phone is not from this era.\"\n\nShe nodded hesitantly. \n\nAt that point, the desktop of the phone came up. It showed a recent picture of Ava in her Badgers cheerleading uniform. She was heartstoppingly beautiful, the spitting image of her mother. \n\nMavis said dazed, \"Where did you get that picture of me?\" \n\nI said, \"It isn't you, it's our daughter Ava. She's twenty-one and until three days ago she was my sole memento of our life together.\"\n\nI said, \"I know that your history with men tells you that you would be a fool to trust me. But, let me assure you, our love was real, and this young woman is the product of it.\"\n\nMavis looked like she was suffering from sensory overload. That was understandable. Any normal person would react that way. I said pleading, \"I am staking my life and happiness on one throw of the dice, and I will do whatever it takes to help you believe that what I say is true.\"\n\nI added resignedly, \"But, we are past the event that brought us together. So, I will honor your decision if you choose to live your life without me. \n\nI looked at her trying to convey my sincerity. I said, \"I was a pretty good lawman in this town, in the future, and they have already offered me the Sheriff's position for the duration. If I'm stuck in the 1940s, I'm going to take them up on their offer.\" Then, I sat back and waited for her to react.\n\nMavis is a very strong minded and practical woman. When I first met her, she had eventually come to accept her new reality and she dealt with it bravely. Most people couldn't make the adjustment. \n\nI was counting on her agile mind to accept that we had loved each other in the future, even if my only proof was a picture, recorded on a piece of technology she would never understand. \n\nSo I sat there, with my raw feelings hanging out. The person I had built my life around was a total stranger. But we had loved each other once and it was clear in our interactions, that the magic was working across the decades.\n\nMavis was looking at me with her face screwed into a mask of concentration. \n\nI said as kindly and gently as I could, \"You just appeared out of nowhere one night. You thought it was today, August 1st, 1946. I was the Sheriff and I took care of you while we tried to find out who you were and where you had come from.\"\n\nMavis looked disbelieving. I hastily continued with, \"We investigated, and we eventually concluded that you had been murdered by Felix Wynn.\"\n\nMavis looked absolutely stunned. She knew I was talking about last night. I added mildly, \"We closed the case, even though the premise that you'd solved your own murder was crazy.\"\n\nMavis laughed. She said, \"That's the most ridiculous story I've ever heard.\"\n\nI rushed to finish. I said, \"By that time we were very much in love and we eventually married. We had conceived Ava before the wedding. But, the timing was immaterial. \n\nI could see that Mavis was getting fidgety again, so I pulled out my second-best card. I said, \"We led a happy life in our house. Do you know where that house was located?\"\n\nShe shook her head, \"no,\" mystified. She had no idea why I had even asked that question. I said with increasing confidence, \"It's where we had the picnic. I know you got the vibe. I could see it'\n\nFor the first time Mavis looked at me like she might be beginning to believe me. \n\nI said, \"After nine years of wedded bliss, they dug up a body. You disappeared, at the exact same instant; leaving me and Ava to cope.\" \n\nMavis was looking even more thoughtful. So, I played my hole card. I said, \"I'm a simple guy and a practical man. I wasn't sure that anything supernatural had happened. But I buried the body that they'd dug up, on my property.\"\n\nI added with grim emphasis, \"You were standing on your own grave when you fainted!\"\n\nMavis looked aghast. It was like, her perceptions in that instant, cemented her acceptance of the truth. The feeling overwhelmed her. \n\nSome women might cry. Some would freak out. Others would get angry. Mavis is wired differently. I discovered that the night she had the first inkling of her murder. \n\nShe might be smart and practical. But, Mavis is a deeply intuitive person. How she feels, and how she reacts, are the best indicators of truth for her. \n\nShe isn't wanton in any way. It's just that she trusts her profound instincts. In essence, Mavis listens to what her heart is telling her. Hence, it was almost inevitable that she would seek to verify what I had just told her by doing what she did next. \n\nMavis rose from the chair, in all her self-confident female glory. She was very sure of her own sexuality. She took me by the hand and guided me wordlessly to the bed. She pushed me to a sitting position. The look she gave me was smoldering. \n\nShe sat next to me and turned to face me, lips not six inches from mine. She said, breathing heavily, \"Let's try a little experiment to find out if the preposterous tale you just told me is true?\" Then, she threw one arm around my neck, grabbed the back of my head with the other, and we kissed for the first time in ten years.\n\nIt was like touching a live wire. A thunderbolt of emotion arced across time and obliterated all the dire regret and misery; and every hesitation. She drew her head back stunned by the sensation. Then her eyes clouded with lust and she dragged me backward on the bed. \n\nHer mouth opened wide in greeting. She was making frantic little moans as her tongue searched for mine. She started scrambling backward, without letting go of me, until she was lying back fully, completely on the bed. We were both clothed. \n\nI kissed her avidly, while I played with one of her gorgeous breasts. She moaned and thrashed. I grabbed and rolled one of her prominent nipples. It was sticking out like the Empire State Building over Midtown, even though it was covered by a 1940s bra. \n\nHer movements immediately became agitated. Then, she threw her had back, mouth wide open and began to hyperventilate loudly through her nose. This was followed by a moaning, kicking quivering orgasm that nearly knocked us both off the bed. \n\nI knew that Mavis was erotically sensitive. But I had NEVER seen an exhibition like THAT. She finally calmed down enough to open her eyes. Her beautiful chest was heaving like the Atlantic in a Nor'easter, and she was still panting like a bloodhound on a hot Georgia porch. \n\nI was staring at her wonderingly thinking, \"What a woman!!!\" \n\nShe murmured, \"What happened to me? I haven't had an orgasm like that in my life? Then she looked puzzled and said to herself, \"We didn't do anything but kiss.\"\n\nThen, she grinned and said seductively, \"It'll probably kill me. But you need to fuck me now.\"\n\nHer skirt, panties and sweater flew off like magic. I had seen her gorgeous body with its hard curves and its soft promontories many times over the years. But, revealing it is still like watching a gorgeous sunset. You may have seen it a million times. But you'll never see it enough.\n\nI assumed there would be some foreplay. I particularly wanted to fondle those round, full breasts. But, she rolled me on top of her as soon as we got back to grips. \n\nThen, she elevated her legs, grabbed my already rock-hard cock with obvious desperation and inserted it into a vat of boiling honey. \n\nShe shrieked in sensation. I looked toward the windows. They were thrown wide open to catch the refreshing morning breeze. And, Mavis was already getting so noisy that I was afraid that people walking down the street would think that I was up here killing her. \n\nIt was a conventional missionary fuck. Mavis had pulled her beautiful slim legs back so far that they were jammed against her arms. I thought to myself, \"Women! The flexible sex!\" And, she was enthusiastically meeting my every thrust as she grunted, \"Ungh, ungh, ahhh, ahhh.\" There was a lot of wet slapping noise and the smell of aroused woman was driving me nuts.\n\nAll of that was erotically motivating. But, the thing that made this so incredibly special was the fact that I was fucking HER. \n\nI had NOT asked to come back to this place. I had never imagined that this COULD happen. I had longed for Mavis for almost eleven long years. And now; call it fate, or call it the last thoughts of a dead man. But, as improbable as it may seem, I was making love to my dearly departed wife \n\nMavis wasn't having any of those kinds of abstract musings. Because, she had not experienced our life together. Instead, she was winding up to the-mother-of-all-orgasms. \n\nI could feel her little ring of muscles frantically pulse. Her body became rock hard, every inch clenched. She crushed me to her chest, her legs grabbed me in an iron grip, and she threw her head back, eyes wide and staring with nothing but the whites showing. \n\nThen she began to yell, \"Ahhhh Yesssss!!! Fuck me Erick. Give it to me. It's been so long!! I loooove you!!\" She let out one final shriek and collapsed boneless on the bed. \n\nMeanwhile, I was in the process of cumming in ways that cannot be described. Imagine how you would feel; if you had just climaxed with a woman who you had ached for, for almost eleven desperate years. \n\nI finally got some of my senses and a little bit of my breath back. My heart rate was finally under 200 and the goosebumps had disappeared. I looked down at her beloved face. She was lying limply underneath me barely breathing, little aftershocks were still rocking her. \n\nThen it hit me. Mavis had called me by my first name!! She didn't know my name, only \"Sheriff.\" \n\nShe was coming back to me slowly, making little yips and moans. Finally, she opened those glorious eyes and looked at me. It was like dawn over the Garden of Eden. Her marvelously deep and intelligent face transfixed me. There was devotion there.\n\nI couldn't even presume to guess the explanation for it. But, this had happened before.\n\nCall it psychic, call it religious, call it delusional; but the first time we had been together, fate had given Mavis a vision of her own death. Understandably, she was in a mindless state of panic when she fled to my bed. \n\nAfter I had calmed her down, we made love for the first time. \n\nI said wonderingly, \"You remembered.\"\n\nShe said, \"I don't recall many of the details. But I know I loved you with all my heart and that our marriage was one of joy and contentment. More important, I know that I will always love you.\" \n\nHer face darkened as she said, \"I was preparing a snack for Ava before picking her up at school. Then I felt dizzy and sick. It was like I was about to pass out. I remember an overwhelming feeling of regret. Then there was nothing but blackness.\"\n\nThat reminded her. She gasped loudly and said, \"My God, what will happen to Ava? Will I ever see her again?\" \n\nI tried the same explanation I had used on myself. I said, \"The future is our past. So, that's seventy years from now. When I left, our little girl was a strong and capable young woman.\" I also pointed out that Ava had an entire town behind her including the Doc and his wife and the Jensens. \n\nI finished with, \"She has a bright future whatever timeline she is in. Maybe we'll even live long enough to meet her. But, right now, let's just spend our life together.\"\n\nI took the Town up on his offer. I had been the Sheriff there for years. But that was seven decades in the future. Now, I had to provide for a wife and the child who was growing in her womb. Being the Sheriff seemed like a splendid way to do that. \n\nI knew that I was a visitor in Mavis's time, just as she had been in mine. I was also painfully aware of the fact that Mavis had vanished the moment we dug up her murdered body. \n\nIt was a classic paradox of being; she couldn't be both dead and alive at the same time. So, the earlier state would take precedence over the latter\n\nI was now in the same situation. I knew that I would disappear the moment I was born, which would be 27 years in the future. I didn't want to EVER leave Mavis. I wanted to die in her arms. But, my departure was foreordained. I couldn't be both a new-born and ready for retirement. So, my disappearance was inevitable. ",
        "But, I had a plan.\n\n*****\n\nIt was a gorgeous July day, and we were watching a pretty, brown-haired coed, eat an ice cream cone. America had survived Korea, Joe McCarthy, the Vietnam War, the Flower Power Revolution and Richard Nixon. \n\nIt was the Country's Bi-Centennial and a former Michigan football player was the President. Mavis and I were hanging around the Belleville American Music Festival. The locals called it BamFest. It's an annual event, and it features some pretty good blues. So, the college kids, from nearby Madison, come in herds. \n\nMavis was as gorgeous as ever, in her 56th year. The only thing the three babies had done for her figure, was increase her bust size. And, she still had those shapely legs and supple ass. But her glory was her stunning face, which remained wrinkle free.\n\nI nodded in the direction of an early twenties kid. He was making his way through the crowd. He looked tentative and uncomfortable, like he thought he didn't belong there. He was a good-looking lad, tall and muscular, obviously a farmer, not a college student. \n\nMavis squeezed my hand lovingly. Then she made a bee-line for him. She plucked at his arm and said flirtatiously, \"Could you please show me where the food trucks are.\" She put a lot of her legendary heat into the request. \n\nThe kid started to point, then he took a good look at the woman who was asking the question. Mavis was old enough to be his mom. But nobody's mom EVER looked like Mavis. \n\nThat gave the kid a better idea. He said eagerly, \"I'll take you.\" \n\nWhat the heck!! It was worth it for a fellow to go a bit out of his way, if he got to spend time with such a remarkable woman. As they walked off, Mavis turned back to me and gave me a big wink . \n\nIn the meantime, the girl finished her ice-cream cone and wandered off in the direction of the parking lot. She was clearly looking for her friends. \n\nAnd so, the kid didn't stumble into the girl. The girl didn't spill her ice-cream cone. There was no apology. There was no instant attraction. There were no dates, there was no marriage... And, I was never born. \n\nEPILOGUE\n\nAva Jensen stopped in at the Hot Spot. She was beginning a tour with the Joffrey next week, and this was her last day in town. It was rare for a 21 year old Wisconsin girl to succeed in the big-time world of professional dance. But she had worked hard to get there, and she believed in her own destiny.\n\nAva knew that she was adopted. the Jensens couldn't have kids. But they had nurtured and loved Ava like their own. And, Penny Jensen's wisdom and encouragement had created the beautiful, intelligent and highly accomplished woman that Ava was today. \n\nDot, the octogenarian who owned the Hot Spot, was sitting in the back booth. She was there, with a much older lady. That woman was somewhere in her nineties. But, the shadow of her rare beauty still lingered, like the ruins of a particularly exquisite and graceful classical temple. \n\nAva had the passing thought, \"I'll bet my birth mother looked like her.\" \n\nAva had come to the Jensens very early. She didn't remember her birth parents, or the circumstance that had brought her to the Jensens. But, sometimes she felt like she had lived two completely different childhoods. \n\nThe older woman was named Mavis. It was one of those antique, old-lady names. Mavis had been married to the former County Sheriff for seventy years.. He had just died. Their marriage had served as a beacon of hope, for people who still believed that lifelong romance was a possibility. \n\nMavis and her husband were very rich. The Sheriff had an uncanny ability to invest in unheard of businesses - who would then go on to become legendary corporations; like, IBM, McDonald's, Microsoft and Apple. It was almost as if he could see the future. \n\nNevertheless, even with all of their wealth, the Sheriff and Mavis had lived their entire life in this humble little town. They had raised their children there; and they had always treated Ava like she was one of their own brood. \n\nAva had been particularly special to Mavis. It was as if she was her surrogate great-grandchild. That was why Ava wasn't surprised when Mavis waved her over to the table. \n\nMavis said, \"Before you leave town child, there's something I need to tell you.\" The old woman was physically delicate. But, she still had commanding, china-blue eyes; that radiated an unconquerable spirit. \n\nMavis rose shakily from her seat, and her driver assisted her out to her car. Ava slid in beside her. The ride to the Sheriff's huge estate was silent. It seemed like Mavis was formulating her thoughts. \n\nThe estate took up the entire bluff outside of town. The house itself, was a replica of a classic Victorian mansion; even though, it was actually only thirty years old. The vast lawn was bright green and meticulously tended. There was the sound of a lawnmower somewhere under the hot July sun, and Ava could smell the newly cut grass.\n\nA little creek ran past the base of the house. There was an intricate iron bridge over it. But instead of going toward the house, the old woman turned and headed up an immaculately manicured path, made out of cedar chips. It led to a secluded grove on the top of a little hill, above the millpond. \n\nThe two women sat on the marble bench next to the Sheriff's grave. A giant willow-tree embraced the entire space with its characteristic limbs. The air was full of insect noises, birdsong and mild summer breezes. \n\nMavis looked in the direction of the monumental grave-marker. She got a soft and loving look on her face. The marker had both the Sheriff's and her name engraved on it. The only item left to be filled in was Mavis's date of death.\n\nThey sat there for a minute, Mavis was old and frail. Ava was sleek and vital, like a big cat. Mavis was at the end of her life. Ava was just entering her prime. Ava's face was exquisite, black hair and blue eyes. Her extraordinary body was honed by hours of rigorous dance training. Yet, there was something inestimably similar about the two of them. \n\nThe old lady turned toward Ava and fixed her with an earnest, almost pleading look. It was as if Mavis wanted to convey something that was profoundly important to her. Mavis said with deep sincerity,\"It was fate that brought the Sheriff and me together, and I know that destiny will reunite us. I pray for that every day of my life.\" \n\nShe sighed and said with heartfelt relief, \"It won't be very much longer.\" \n\nThen the old woman paused. She took both of Ava's slim beautiful hands in hers. Mavis's hands were spotted with age. She said, \"Fate is fickle and sometimes its twists and turns are hard to understand, or accept. But, you can't alter the way the cards are dealt. So, you have to play them the best you can. That was what your father and I did with you back then, and that's all that we expect from you now. We are very wealthy and we love you very much. So, you will be taken-care-of for the rest of your life. I just wanted you to know that before I passed on.\"\n\nAva gasped. She'd sensed it all along. There was no explaining why. But, Ava knew that the whole thing was true. And, she was overcome by the wonder of it all. "
    ],
    "authorname": "dtiverson",
    "tags": [
        "romance",
        "mystery",
        "beautiful wife",
        "justice"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/beyond-the-pale-1"
}