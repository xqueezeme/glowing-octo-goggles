{
    "title": "An Interview with Superman",
    "pages": [
        "He didn't look that weird when he walked into the room. Actually, he had a nice face with a pleasant smile, and it was clear that he worked out regularly. But there was no getting past the blue spandex suit, the red cape and, of course, the big S on his chest.\n\nFor at least the tenth time I silently cursed my editor for assigning me to write a story about a nut.\n\nShe'd called me into her office a couple of days ago. \"Have you heard about the guy who's running around the city in a Superman suit?\" she asked me.\n\n\"Nope,\" I replied. \"Sounds like a nut job to me.\"\n\n\"Could well be,\" she admitted, \"but the geniuses in the City section think there might be a story in it and they want us to get it. We've tracked him down and he's agreed to an interview. Guess who gets to do it,\" she said pointedly.\n\n\"Why do I always get the weirdos?\" I asked, lifting my eyes to the heavens, but I got the assignment anyway. Whoopee.\n\nAll that flashed through my mind as I rose to meet him. I could only hope it wouldn't be too bad. \"I'm Elle Finn,\" I said, rising to shake his hand.\n\n\"Alex Stevenson,\" he said, returning my handshake. \"Pleased to meet you.\"\n\nWe sat down and I pulled out my recorder. \"I'll be recording today's interview,\" I said. \"Is that okay?\"\n\n\"Sure,\" he said easily, \"no problem.\"\n\nI double-checked the microphone to be sure it was on. \"Okay, this is Elle Finn, reporter for The New York Times, interviewing Alex Stevenson, a.k.a. Superman. Mr. Stevenson, let's cut to the chase here: do you really believe you're the Man of Steel?\"\n\n\"I wish you'd call me Alex,\" he replied. \"It would make this a lot friendlier.\" He gave me that easy smile, and I nodded my agreement. \"Anyway, in answer to your question, no, I'm the farthest thing from a superhero.\"\n\n\"So why do you wear the suit?\" I prodded.\n\nHis face took on a serious aspect. \"I guess because I didn't want to be vulnerable any more.\"\n\nI tried not to react, but that wasn't what I was expecting. \"It sounds like someone must have hurt you pretty badly,\" I said carefully. \"Want to tell me about it?\"\n\nHe gave a little sigh. \"Okay,\" he said, and began to tell his story. <blockquote>The F train had that peculiar dank smell it gets some times in the summer, and I was glad when I finally reached my stop on Queen's Boulevard. But once I climbed the stairs into the merciless sun at street level, I almost wished I was back under ground. By the time I had walked to our apartment, I was dying to get inside and into the air conditioning.\n\nUsually, Glenda beat me home, but the apartment was dark and quiet when I unlocked the door. After I'd cooled off and changed into shorts and a t-shirt, I went out into the kitchen and began preparing dinner. When I heard the front door open, I called out, \"Hey, babe, I'm in the kitchen. It's so hot that I thought a salad might be nice for dinner. Is that okay with you?\"\n\nShe stuck her head around the doorframe. \"Before you do that, could you come out here and talk with me?\"\n\n\"Sure,\" I said, and washed my hands before walking into the combination living/dining room. Glenda was sitting on the couch with her arms folded and her legs pressed together as though it was freezing. When I saw the expression on her face, I asked, \"Is everything okay, babe?\"\n\nShe raised her head but she didn't look me in the eye as I plopped down in the arm chair. \"God,\" she said, \"this is harder than I thought.\"\n\nNow I was concerned. \"What is it, Glenda? What's happened?\"\n\nShe took a deep breath and then let it all out abruptly. \"I don't know any other way to do this, Alex, so I'll just say it straight out: I want a divorce.\"\n\n\"What?\" I asked stupidly. \"Is this a joke or something?\"\n\n\"No,\" she said quietly, \"I'm not joking. I'm going to file for divorce.\"\n\nI felt as though I had fallen into one of the bad novels I have to edit at work, except that the characters usually have witty comebacks. I had nothing. \"But why? We have a good marriage. I don't want a divorce -- I love you.\"\n\nShe shook her head impatiently, like I was a child slow to learn his lessons. \"No, it hasn't been good for a long time. I've felt it, even if you haven't.\" She shifted her position on the sofa and leaned forward as though she were trying to sell me something. \"It's nothing you did, Alex, it's just that we've grown apart. It's nobody's fault \u2013 these things just happen sometimes.\"\n\nI tried to protest but she held up her hand. \"Please don't,\" she said. \"There's nothing you can say to make me change my mind. I'm just going to pack a bag and then I'm leaving,\" she went on.\n\nI was still in a state of disbelief. \"Leaving? Where are you going? Can't we talk about this?\"\n\nShe shook her head sadly. \"I'm going to stay with a friend until we can get everything finalized here. Please just accept it. Neither one of us wants to say anything that will make this harder than it already is.\"\n\nWith that she disappeared into our bedroom, and as I stood there in shock, she reappeared in a remarkably brief time, rolling her suitcase behind her. It was as if she already had it packed and waiting.\n\n\"Please, Glenda, what about counseling? Can't we find somebody . . .\"\n\nShe brushed by me and opened the door. \"I'm sorry, Alex, there's nothing to talk about. It has to be this way.\" With that she rolled the bag over the threshold and pulled the door shut behind her, leaving me standing there in stunned silence.\n\nI slowly walked back to the sofa and collapsed on it. In the kind of novels I edit, the main character goes into a towering rage, or heads off to the nearest bar to get drunk, or leaves to try to get laid. I did none of those things. Instead I sat there in the growing darkness and tried to find answers to the questions swirling through my head. I simply could not comprehend what had happened, much less why.\n\nMy relationship with Glenda had not been remarkable. We'd gone to the same college and had been part of a group that hung out with each other all four years we'd been there. Most of the time none of us actually dated each other; it had been easier to do things as a group rather than pairing off. But during our senior year, Glenda began going with a guy who wasn't part of our group, so we didn't see her as much as in the past. I think she was hoping he'd pop the question, but he opted for grad school in California and they broke up at graduation.\n\nI'd been an English major and, like so many others, wanted to get into the publishing business after graduation. Therefore, like so many others, I moved to New York City and started job hunting. Five hundred resumes and forty interviews later, I was working as a waiter and living with five other friends in a two-bedroom apartment in a bad section of Brooklyn.\n\nThen I caught a break. It turned out my grandfather actually knew someone in the publishing industry, and when he found out about my dreams he called in a favor. The upshot was that I managed to land an internship at a real publishing company. The bad news was that the internship paid only the minimum wage, so I still had to wait tables at night after I got off from my day job. The good news was that I was now actually working in the industry to which I aspired and had the chance to learn what publishing was all about from the inside.\n\nI was now working two full jobs and earning one meager salary (including tips), but the wonderful thing about youth is that you have both the energy and the naivety to put up with such conditions for longer than anyone not in actual slavery.\n\nIt was on a Tuesday night when I wasn't scheduled to work at the restaurant that my roommates and I decided to head to a midtown Manhattan bar and waste some of our precious earnings on overpriced alcohol. As we were talking boisterously, I glanced up to see none other than Glenda Preston walk into the bar with two girlfriends. </blockquote>\n\nHe stopped his narrative suddenly. \"Can you leave her name out of this?\" he asked. \n\n\"Why?\" I asked curiously. \n\nHe looked at me a bit sheepishly. \"I guess I'm still trying to work my way through all this. Somehow, starting open warfare with her doesn't seem like it would help.\"\n\nI was surprised; it seemed my nut case had more depth than I'd suspected.\n\n\"Actually, that will make it easier on me,\" I told him. \"That way I won't have to track her down and get her side of the story. More to the point, this is supposed to be about Superman, not his ex-wife.\"\n\n\"Okay, good,\" he said, and resumed his story. <blockquote>When I spotted her, I almost knocked my roommate's beer bottle out of his hand as I rushed over to greet her. But as I neared her little covey, I pulled up short, suddenly hesitant. Would she be as eager to see me as I was to reconnect with her? But at that instant she glanced up, and when she spotted me she squealed, \"Alex!\" and rushed to embrace me. We hugged, then she drew back, looked at me carefully and kissed me on the mouth. I wasn't sure where that was coming from, but it felt wonderful so I really didn't care.\n\nShe put her arm around my waist and introduced me to her girlfriends. I, in turn, dragged them over to meet my roommates, thereby earning innumerable brownie points with them, since none of us was that comfortable trying to pick up girls.\n\nGlenda and I had a great time that evening; it was as if we were still back in college. Much later than I had originally intended, we finally had to call it a night, and after exchanging phone numbers she gave me another kiss, this one full of promise.\n\nWe began seeing each other every chance we could get. The only difference was that this time there was no group to distract us or buffer our interaction, and thus the relationship seemed to take off faster and burn hotter than I think either of us expected.\n\nOne of the realities of poverty-level living is how difficult it is to find a time and place to be alone together. My apartment was a disaster as a rendezvous: one or more of my roomies was always appearing out of nowhere, usually at a most inopportune time. Even when I planned ahead and \"reserved\" one of the two bedrooms for a few hours, someone was likely to walk in suddenly, oblivious to our desire for privacy.\n\nGlenda's place was a little better because there were only four roommates in total and all were girls who understood and observed the rules of social etiquette much more scrupulously. Nevertheless, their place was tiny and the interior walls were thin, so true privacy was nonexistent, especially when we were in the throes of passion. It was unnerving enough to hear giggles coming through the door; hearing a running commentary on our coupling was really too much.\n\nDespite all the obstructions our relationship continued to flourish and we began to talk about finding a place for just the two of us. But the realities of New York City real estate and entry-level salaries made that just another rose-colored pipe dream -- until fate stepped in once again.\n\nOut of nowhere there was a shake-up at the publishing company and a junior editor position became available. I guess I had made a good impression because the job was offered to me. It only paid about what I could earn in a good month as a waiter, but it came with employee benefits so I didn't hesitate to turn in my waiter's uniform and become a real book editor.\n\nNo sooner had we celebrated my good fortune than Glenda had a similar windfall. She had been temping at Denison and Lowser, one of the many big law firms in town, and when a paralegal job came open, they hired Glenda full time. She too was low man on the totem pole, but law firms pay better than publishing houses and her starting salary was higher than mine. \n\nMore importantly, when we added our take-home pay together we realized that we just might have enough to make our dream a reality. After a lengthy search we found a small apartment on the sixth floor of an old building out in Forest Hills. The only reason we could afford it was because the building was almost a mile from the nearest subway stop. We took it on the spot.\n\nAfter that we went shopping for used furniture, and on the day we moved in I got down on one knee and presented Glenda with the ring that a loan from my parents enabled me to purchase. From the look on Glenda's face you would have thought it was the Hope diamond. \n\nThe first few years of our marriage were good. Even though our funds were extremely limited, we found ways to enjoy the Big Apple and each other. Because we were so far from Brooklyn, I lost touch with my old roommates but I made new friends from among the other junior editors at the publishing house. Soon, a small group of us were hanging out over lunch or happy hour, and it felt a lot like my old gang back in college. \n\nGlenda stayed in touch with her roommates but didn't seem to make as many friends at the law firm, probably because they seemed pretty stuffy, at least as far as I could tell. But if her work wasn't a source of social opportunity, it was definitely rewarding from a career perspective. Glenda showed a real aptitude for legal matters, and her talent was recognized and rewarded. She began to be given more demanding assignments, which she relished, and after performing well she was promoted and assigned to a more senior partner in the firm. Inevitably this resulted in longer hours for her, but she welcomed the opportunity to show what she could do, and I was delighted for her.\n\nAnd that brought me back to tonight and Glenda's sudden, unfathomable departure. I went to the refrigerator, pulled out a six-pack of beer and returned to the sofa to try to figure out what had happened. I hadn't seen it coming. Sure we no longer had that I-can't-stand-to-be-away-from-you-for-a-minute feeling of first love, but nobody stays that way forever. Sure our jobs had been keeping us apart more of late, but wasn't that the price you had to pay to get ahead?\n\nWhat was driving me crazy was that we hadn't had any big fights, no clash of goals or values, nothing I could point to that might explain her decision. Okay, I admit that there'd been times when she was impatient with our standard of living, but I felt the same way. And anyway, weren't we on a path that would lead us to more of the things we wanted in due course? Glenda was already moving in that direction, and as soon as one of the senior citizens (as we called the older editors at my company) finally decided to retire, I'd be in line for a nice promotion too. So what was the problem?\n\nThe more I kept rehashing events and the longer I drank, the more chaotic my emotions became. I grew maudlin at the thought of my marriage dissolving. I loved Glenda, and it hurt like hell to learn she didn't love me anymore. What was I going to tell my parents? They loved Glenda too and could hardly wait for us to start having grandchildren. That thought made me angry: how could she be so impetuous and selfish? Didn't she realize how many people she was hurting, starting with me? That, of course, plunged me back into another round of depression at her inexplicable departure.\n\nWhen I reached for another beer and discovered that I'd just finished the last one, I staggered back to the bedroom and collapsed on our double bed without bothering to undress. \"Fuck it,\" I thought drunkenly. \"It doesn't matter anyway.\"\n\nThe trouble with beer is that it creates an undeniable demand for relief, one so strong that it managed to wake me in the early morning hours and force me to the bathroom. I barely made it, and relieving my bladder was so painful that I almost cried out loud. When I finally finished, I found that I was wide awake. My stomach felt like I'd been drinking battery acid, yet it also felt like I hadn't eaten in a day, which was, I realized, almost true.\n\nCursing, I yielded to the inevitable and got up, showered and shaved. Then I headed for the subway station, stopping at a little coffee shop to get some breakfast. There was only one other customer there at that hour. Similarly, when I got to the office I was the first person there.\n\nI tried to bury myself in work but I found my mind constantly drawn back to what had happened. Not knowing why she'd left kept eating at me, and I found myself growing increasingly angry as the time passed. Finally I convinced myself that I deserved some answers and I decided to act. \n\nGlenda and I never visited each other during working hours \u2013 our jobs were sacred, not to be disturbed. Today would be an exception. I knew when Glenda normally went to lunch and I carefully timed my trip to arrive just before she would go out. I even splurged on a cab to her office to make sure I wasn't late.\n\nWhen I entered the law offices of Denison and Lowser, I didn't recognize the receptionist, but since I'd met very few people there, that didn't surprise me. \"Hi,\" I said, \"I'm Alex Stevenson, Glenda Preston's husband. I'm here to take her to lunch.\"\n\nThe receptionist looked up at me with startled eyes. \"Um, okay, I'll just call her to let her know you're here.\"\n\n\"No, no,\" I said hastily. \"It's a surprise. I'll just go back to get her.\"\n\nShe looked at me doubtfully, but I strode confidently passed the desk to the entry door, and she dutifully buzzed me through. \n\nAs I walked through the aisles, I thought I saw a few curious stares, but I ignored them and marched straight back to Glenda's cubicle. She was chatting with another young woman, but when she saw me she stopped abruptly and her face went pale.\n\n\"What are you doing, Alex?\" she demanded. \"You can't be here -- I'm working.\"\n\n\"Well, I am here,\" I said combatively, \"and I intend to stay here until you tell me why you walked out on me last night.\"\n\n\"Keep your voice down,\" she hissed at me, her face turning bright red. \"I explained to you last night why I was leaving.\"\n\nI found myself growing more and more angry. \"You didn't explain anything, you just gave me a bunch of platitudes that meant nothing.\"\n\nShe glanced around, and I realized that we had drawn a small crowd. Others working in the area had clustered in a semicircle round her, as if to help her repel an attack. I began to feel very uncomfortable but I couldn't back down now.\n\nRealizing that she couldn't avoid a confrontation, Glenda seemed to embrace the opportunity. \"You want to know why I left you?\" she said, making no attempt to keep her voice lowered. \"Well, I'll tell you: I'm leaving you because you're a nobody. You're a weak little man who's content to hold on to your pitiful job in hopes that some day someone will die so you'll get a promotion. You're dull and uninteresting, and you've grown fat and sloppy. That's why I'm leaving you!\"\n\nI stood there in shock with my mouth open. I felt like I'd been slapped in the face. Who was this woman?\n\n\"But,\" I protested weakly, \"you never said anything before.\"\n\n\"Well I just did, loser,\" she snapped back at me. \"And you want to know something else? You suck in bed, and not in a good way!\"\n\n\"Oooh, good one!\" I heard someone in the crowd exclaim.\n\nI was stunned and my pride was wounded. \"Well, fuck you!\" I said vehemently.\n\nShe just laughed. \"'Fuck you?' You work for a publishing company and 'fuck you' is the best you can do? That's just pitiful!\"\n\n\"Ow! That had to hurt!\" came another voice from behind her, and the whole group burst into laughter.\n\nHumiliated, I glowered at her, then turned and stalked out as the laughter continued. When I went through the door into the reception area, the receptionist looked up in surprise. \"Aren't you going to lunch with Glenda?\" she asked. \n\n\"No,\" I said curtly.\n\n\"Oh,\" she said, and gave me a big smile. \"Well, have a nice day.\"\n\nMercifully, the elevator door opened at that moment and I rushed inside to make my escape.\n\nThere was no hope of my getting any work done, not after all that, so I called the office and told them something I'd eaten had disagreed with me. Then I caught the subway out to Queen's and went home. Changing into some jeans and a t-hirt, I went back downstairs and made the hike over to Flushing Meadows and the old World's Fair site. I found a place to sit near the Unisphere, and as I stared at the huge metal sculpture of the globe, I wondered what in the world had just happened to me.",
        "I'd never heard Glenda complain about any of the things she'd accused me of in her office today. Of course I was ambitious, but I was also intelligent enough to know opportunities didn't come along that frequently in the publishing business. What was so bad about being patient?\n\nAnd that crack about my sexual performance: that was a low blow -- literally. She'd never complained even once. Besides, I felt certain that she'd had frequent orgasms when we'd had sex. But if she hadn't been satisfied, I would have been happy to do more or try something different if only she'd said something. Nevertheless, I had to admit that her insult shook me at a fundamental level.\n\nI looked down at myself and noticed the incipient roll of fat developing around my waistline. Shit! I had let myself get sloppy. I used to keep myself in pretty good shape when I was in college, but the thickness around my middle was something I couldn't deny. Beer and bar food, I thought guiltily.\n\nI made a vow to myself on the spot: join a gym, skip the booze. After Glenda's scathing evaluation of me today, I had no illusions about getting her back \u2013 or wanting to, for that matter \u2013 but I could damned sure show her that I could have changed if she had only given me the chance. I pulled out my smartphone and found a gym not too far from my office. It wasn't cheap, but I figured that what I could save on beer would help make it manageable. \n\nI was back at work the next morning carrying my gym bag, and for the next two weeks I went for a workout every day after work. My muscles ached, but not nearly as much as my ego and, I admit it, my heart. Even though Glenda had turned into some kind of harpy, I couldn't just instantly fall out of love with the woman who'd been my wife only a short while ago.\n\nThe other junior editors had been after me to join them in their post-business-hours outings, but I'd been ducking them, making one excuse or another to beg off. I didn't want to tell them that I'd given up booze, I didn't want them to know I was now going to the gym every day, and most of all I didn't want to admit the reason why.\n\nBut of course I was foolish to think I could maintain the fa\u00e7ade for long. Sure enough, one afternoon I got a call from Candy at the front desk that I had a visitor. When I went out there, I saw a man whom I was sure I'd never met before. Nevertheless, he gave me a pleasant smile and asked, \"Alex Stevenson?\" \n\n\"Yes?\" I said curiously.\n\nHe reached under his arm and handed me an envelope. \"Mr. Stevenson, you have been served.\" With that he bowed to Candy, turned and walked away.\n\nCandy had already been through a few husbands so she knew exactly what had just happened. Even if she hadn't, the expression on my face would have been a dead giveaway. \"Oh, Alex, I'm so sorry,\" she said. \"I didn't know you and Glenda were having problems.\"\n\nI nodded at her words and turned to walk back to my desk, not trusting my voice to say anything. Of course I'd been expecting something like this, but the finality of the divorce petition still had a real impact on me.\n\nThe envelope was sitting unopened on my desk when the clock reached 5:00, and then my three best work friends were standing in front of me. \"Come on, Alex,\" Marie said, grabbing my arm. \"You're coming with us.\"\n\nI tried to protest, but the three of them wouldn't relent and I had no real will to resist. When we got to the bar, they all looked at each other when I ordered a club soda with lemon, but no one said anything. Finally, Jacob seized the bull by the horns. \"Okay, Alex, Candy told us about what happened earlier today. Come on and spill it: what happened with you and Glenda?\"\n\nAnd I did. I hadn't intended to air my dirty laundry in front of my friends, but it had been festering so long inside me that once I started it all came out, even the details of my humiliating encounter with Glenda in her office.\n\n\"That bitch,\" Tommy exclaimed, \"I bet she shacked up with Connor \u2013 ouch!\" He turned to Marie with an accusatory glare. \"What'd you kick me for?\"\n\nBut I ignored their little interplay and seized on what Tommy had been saying. \"'Shacked up with Connor'? Are you talking about Connor James at her law firm? What does he have to do with Glenda?\" I demanded.\n\n\"Well, after we saw him sucking face with her, it was pretty obvious \u2013 oww! Dammit, Marie, that really hurts!\"\n\n\"Don't you know when to keep your mouth shut?\" Marie hissed at Tommy, as he stood there rubbing his shin. Then she turned to me with an apologetic look on her face. \"I'm sorry, Alex. The three of us went out to dinner back in March, and afterwards we stopped at a bar and saw them together. The way the two of them were behaving it was pretty obvious what was going on.\"\n\nI did some quick mental calculations. \"No, that couldn't have been her. She was taking a night course back in March.\"\n\n\"Oh, yeah,\" Jacob chimed in, \"she was taking a night course, alright.\" Then he saw Marie's angry look and he quickly took a step back out of range of her foot.\n\n\"Don't either of you ever think before you speak?\" she asked in exasperation. She turned back to face me. \"Alex, that wasn't the only time. The two of them haven't exactly been discrete.\"\n\nNow I was angry as well as humiliated. \"You knew and you didn't tell me? What kind of friends are you, anyway?\"\n\nMarie took my hand. \"Come on, Alex, it's not that easy. We didn't know what was really going on and none of us wanted to spread rumors. Besides, they were so blatant about it, we thought maybe you knew and . . .\"\n\n\"You thought I knew and it was okay with me?\" I asked in amazement. \"I can't believe this!\" I started to head for the door, but Jacob grabbed my arm.\n\n\"Look, man, the truth is that if one of us had told you, you'd have denied it and started hating us instead. You know it's true: everybody shoots the messenger.\"\n\nIn my heart I knew he was right, but that didn't make me feel any better. It was bad enough being demeaned in front of Glenda's workmates; to be cuckolded in front of my friends felt like more than I could take. It was coup de grace, the ultimate wound.</blockquote>\n\nAlex looked up at me, embarrassed but defiant. \"Anyway, that's when I decided to start wearing the Superman suit.\"\n\nI'd been so engrossed in his story that I had to shake myself to snap out of my reverie. I'd been dumped before and it had hurt a lot, but Alex's experience must have been a lot more painful and humiliating.\n\nI snapped back into reporter mode. \"But I still don't understand, Alex. How did you make the leap from abandoned husband to wearing a Superman costume?\"\n\nHe resumed his story.\n\n<blockquote>I wasn't sure if I could bear to go back to work, but I forced myself to go to the gym the next morning because physical exertion seemed to be the only way I could take my mind off everything else. That morning, it didn't work: all I could think about was wanting to hide, to become invisible, or to turn into someone else. Finally I gave up in defeat and left.\n\nOn my way to the office I passed a bookstore. In the window was a display of books and posters about superheroes. I'd loved comic books and cartoons as a kid and had seen almost all of the comic book hero movies. Like every kid, I'd wished I could be a superhero. Now, in my despairing state of mind, those memories came back to me in full force. \n\nThen I remembered the previous Halloween when I'd gone to a costume party dressed as Batman. It was just a cheap mask and suit, but I'd felt good when I'd put it on and I'd enjoyed the party immensely. But now the superhero I envied was Superman because he couldn't be harmed. After all the pain and humiliations I'd suffered, the idea of being invulnerable seemed supremely desirable.\n\nI guess a whole lot of things came together in me all at once. My life was miserable and I wanted to be somebody different. I felt weak and helpless, and wanted to be somebody strong. More than anything, I felt vulnerable and I didn't want to be hurt any more.\n\nI know I probably sound crazy. And honestly, I really did know that wearing a Superman suit wouldn't make bullets bounce off of me. It's just that I wanted to feel like that for a little while, even if it wasn't real. I just felt so terrible that I felt I had to try something, no matter how nutty, to make myself feel better. Anyway, it just seemed like the right thing to do at the time, so I did it.</blockquote>\n\nWhen he fell silent, I decided I needed to change gears. \"Okay, so how did you get your costume?\"\n\nHe brightened up. \"Between my apartment and my subway stop there's a little tailoring shop. It's run by a wonderful old seamstress named Golda Mermelstein. Anyway, on my way home I stopped in and told her what I wanted. She listened to me silently while I described what I was looking for, then pulled out her tape and began to take my measurements as though what I'd asked for was an every-day occurrence. \"You should come back in a week,\" she said in her thick Yiddish accent. And that's how I got my costume,\" he concluded. \"She did an amazing job.\" \n\nHe stood up and turned around so I could admire Mrs. Mermelstein's handiwork, and I realized that my initial impression had been correct: Alex really was pretty fit. The stretchy material clung tightly to him, and I took a minute to admire the workmanship.\n\nHe coughed politely, and I realized I'd been staring too long. I quickly grabbed my pad and looked at the notes I'd prepared. \"Why don't you tell me about the first time you wore the suit?\" I asked.\n\nHe sat back down. \"The next Saturday was when I decided to wear it out for the first time. It was the scariest night of my life.\"\n\nHe grinned at me suddenly. \"It wasn't easy to get into it the first time, you know. I have a new sympathy for women who wear pantyhose. But anyway, it felt pretty good once I got it on, kind of like athletic wear. Besides, I told myself, it would take forever to get out of it again so I might as well go with it.\"\n\n<blockquote>As I walked to the subway, I noticed a number of people staring at me, but nobody said anything. I guess people in New York are used to seeing odd-looking people walking down the street. But I did notice that when I went down to wait on the subway platform, the people around me all edged away.\n\nThe same thing happened when I got in the subway car: nobody would sit near me or look at me. But after a while I noticed a little girl maybe six years old, riding with her mother. She was staring at me, and all of a sudden she came running over and asked, \"Are you Superman?\"\n\nI saw her mother start to panic and I didn't want to scare her so I kept my arms by my side and smiled at the little girl. \"No,\" I told her, \"I just like to dress up like Superman sometimes.\" Then, before her mother could grab her away from me, I asked, \"Do you like to play dress-up?\"\n\nThe little girl looked at me solemnly. \"Oh yes, but I like to dress up like a princess.\" With that, she raised her hands over her head and twirled like a ballerina. I smiled again and began to ask her about being a princess. Her mother watched me closely, but I could see some of the tension relax in her face. I also noticed some of the other passengers watching us, and I even caught a smile or two from them.\n\nThe little girl and I chatted until I reached my stop. I got up slowly, trying not to make any sudden moves. \"I have to go now.\" I gave her a little wave. \"Bye-bye, princess.\"\n\nShe waved back at me. \"Bye-bye, Superman.\"\n\nAs I stepped off onto the platform, the little girl's mother gave me a little smile and I nodded at her in acknowledgement. I felt really good.\n\nBut an even greater test lay ahead. I'd decided to see what it felt like being around a crowd of people, so I'd planned to go to a popular night spot and hang out. When I reached the door, I could see that the place was packed, and I hesitated. Then I thought to myself, \"Superman wouldn't be scared to go in there. He'd walk in like he owned the place.\" So I pushed open the door and entered.\n\nAs I walked toward the bar, I could hear the volume of noise drop as I went by knots of people. As soon as I passed them a sort of buzz filled the quiet, and I knew that people were wondering what to make of me. But the bartender was cool when he spotted me, and he calmly asked me for my order like this happened every night. My request for club soda and lime didn't even merit a raised eyebrow.\n\nAs I stood there sipping my drink, a guy standing next to me tapped me on the shoulder. \"So, like, are you in a movie or something?\" he asked.\n\n\"No,\" I told him, \"I just wanted to do this to try something different.\"\n\n\"Okay, cool,\" he said, and started to turn away. I felt relieved. I'm normally pretty introverted, but I decided that if I had come this far, I might as well push myself a little further.\n\n\"So are you a fan of the Superman movies?\" I asked him, and soon we were in a conversation about comic book hero movies. Other people around us started to join in and we had a great time debating the relative merits of various action heroes. Finally, a woman next to me pulled out her cellphone to take a picture of me, and when I saw the time I was surprised. I'd been having such a good time I hadn't realized how late it had gotten. I settled up with the bartender, leaving him a nice tip, and headed for the exit. As I reached the door, someone in the crowd shouted out, \"Good night, Superman,\" and a number of people joined in. I turned, waved and gave a flourish with my cape to the laughter and cheers from the crowd.\n\nNothing else happened on the subway back to Queens, but when I walked into my apartment I felt so good that I delayed taking off my Superman suit because the whole experience had been so positive. Later, after I'd gotten into bed, I realized that that was the first time I'd spent a whole evening without thinking about Glenda.\n\nAfter that, I began to wear the suit almost every weekend and a lot of weeknights too. Most people seemed to like it when they saw me in it, and I found that I really didn't feel so vulnerable any more. And it was a great conversation starter.</blockquote>\n\nAlex smiled at me, and I couldn't help smiling back. I guess I was glad for him, but I suspected that although his life in a superhero costume had started well, there might be a dark side. I'd just have to see.\n\n\"Okay, \" I said, \"I think that's enough of the interview for now. I'll want to get back together with you for a few more questions later, but we need to get over to the park for some photos.\"\n\nMy editor had made arrangements with one of our staff photographers to get some shots of Alex in his costume in Central Park. In the first place, there were some nice backdrops that would make for good photos. Also, Alex had let us know that he often went there, and we hoped we might get some shots of him interacting with people there.\n\nThe two of us piled into a cab, and the cabbie couldn't stop staring at Alex's costume. To my surprise, Alex began to engage him in conversation, and soon the two of them were discussing the merits of capes. \"My father used to wear a cape in the old country,\" the driver revealed, and Alex commented that they were surprisingly comfortable. I tried not to roll my eyes, but I have to admit I found it a bit charming when Alex made a point of shaking the cabbie's hand and wishing him well. The old fellow's response was equally warm, and I realized I'd just witnessed Alex make a new friend. Very interesting.\n\nI was going to suggest that we pose Alex on one of the arched bridges in the park, but the photographer wanted him to stand on a granite outcropping, which really looked dramatic. From the right angle you could even see the twin projections of the Dakota looming above the tree line in the distance.\n\nAlex was clearly enjoying himself, moving and posing as the photographer directed yet never looking unnatural or uncomfortable. \"He's really at home in that costume,\" I thought, and felt slightly envious of his carefree attitude.\n\nSuddenly, a childish voice hollered, \"Hey, Superman!\" and then I got to see Alex really enjoy himself. In an instant he hopped down off the boulder and went up to greet the band of half-a-dozen-or-so prepubescent boys, calling several of them by name. Soon they were sitting on the grass in a ring around Alex, listening to him tell a story about Superman that I was sure he'd made up. \n\nFinally, a maternal voice called from across the field, and all of the boys jumped up and ran off, laughing and waving at Alex. \"Sorry about that,\" he said as he returned to us. \"I've met those kids here before, so I couldn't just blow them off. Besides, I really like kids; I'd like to have a couple myself.\" Then his face momentarily lost its smile, and I knew he was thinking about his failed marriage. I couldn't help it: my heart went out to him. But he soon shrugged off the mood and his smile returned. \n\nI turned to talk to the photographer. \"Did you get everything you needed?\" I asked.\n\n\"Oh, yeah,\" she said enthusiastically, \"the poses on the rocks were great. And I got a lot of good shots while he was telling stories to those kids, too.\"\n\nThen she looked at me oddly and whispered. \"Is that guy for real?\"\n\nI shook my head. \"I wish I knew.\"\n\nI walked back over to his side. \"You were great with the kids, and it sounded like things went well in the bar that night you told me about. But don't people ever laugh at you or make jokes?\" I asked him.\n\n\"Oh, sure,\" he said casually, \"lots of times. But I just wave and smile at them, and they don't bother me.\" He looked at me shrewdly. \"I have a way of handling things like that. Whenever something unpleasant happens, I ask myself 'What would Superman do?' For example, if somebody started making fun of Superman, it wouldn't bother him at all. He'd know who he was and what he could do, and their remarks would bounce right off of him like bullets.\"\n\nI had my doubts. \"What if people don't want to talk to somebody who's wearing a costume? Don't you find that you put people off sometimes?\"\n\n\"I suppose so,\" he said thoughtfully, \"but if they don't want to deal with me that's fine. I'm not trying to impose myself on others, I'm just trying to get by like everybody else. I just do it in a different way.\"\n\nHe saw that I was skeptical, and suddenly he perked up. \"Hey, I've got an idea \u2013 are you doing anything tomorrow night?\"\n\nWhen I admitted that I had no plans, he got excited. \"Instead of another interview, why don't you come out with me? We'll go someplace and you can see what it's like for yourself.\"\n\nWhen I hesitated, he leaned across the table eagerly. \"Come on, it'll be fun. What have you got to lose?\"\n\nThis was starting to turn into more than I'd bargained for, but I knew what my editor would want me to do, and besides, his enthusiasm was infectious. \"Alright, I'll do it,\" I told him, and he looked genuinely pleased.\n\nBack at my apartment that night, I told Terri, my roommate, about my weird interview. She too thought he sounded like just another nut case. When I told her that I had accepted his invitation to tag along with him the next night, she just rolled her eyes. \"Come on, Elle,\" she said, \"can't you find a normal guy to go out with?\"\n\nI laughed, but her words stung a little. I'd had a few unfortunate encounters, and Terri knew I was gun-shy. Of course, Terri considered herself more like my guardian angel than an apartment-mate, but I appreciated her watching out for me.\n\nNot surprisingly, I was a little apprehensive the next night when my cab dropped me off at the bar where I was supposed to meet Alex. I had no idea what to expect and the fact that Alex was nowhere in sight didn't make me feel any better. \n\nBut suddenly I heard my named being called, and when I turned around, there was Alex in his Superman suit bounding down the sidewalk toward me. \"This is going to be fun,\" he said with a confident smile, and, taking my hand as though it was the most natural thing in the world, he led me inside.",
        "The moment we passed through the door, I heard the tone of the background noise change. People were pointing and talking, and I began to feel very self-conscious. But Alex plunged right into the crowd, taking me with him right up to the bar.\n\nThe bartender spotted Alex and called out in a loud voice, \"Superman is in the house.\" Immediately, the room was filled with cheers and applause, and the level of excitement seemed to increase. After checking with me, Alex ordered me a glass of white wine, and I was interested to see that he really did get a club soda for himself.\n\nOnce our drinks arrived, he took my hand and dragged me toward a large cluster of people on one side of the room. As we made our way, people kept reaching out to shake his hand or give him a high five. I got more than my fair share of curious glances, and I began to realize that being with Alex meant being in the circle of a minor celebrity. \n\nAlex dove into conversations the way a kid would jump into a swimming pool on a hot day. Instantly, he seemed to be in the midst of a discussion with virtually everyone within earshot, and I marveled at the ease with which he participated.\n\nAs I watched, several things struck me. First, although he had actively inserted himself into the conversation, he was careful not to dominate it. Instead, he kept asking others for their opinions, and when he appeared to disagree with them, he simply turned to someone else and asked them for their opinion. Second, he was unfailingly friendly, smiling at people and giving them positive feedback, making them feel good about themselves. Lastly, even though I was there only as a passive observer, he made it a point to keep me involved, and I couldn't help appreciating his sensitivity. The fact was that he was easy to be with.\n\nAnother thing I soon learned was that Alex never stayed still for long. He continued to circulate through the crowd, talking to new people as they entered his sphere of conversation and then moving on in a very natural way.\n\nI was surprised to find myself enjoying the evening. I'd expected to be a fly on the wall, observing and making mental notes for my article. Instead, I found myself talking to people much more than normal and having a good time doing so. I also found myself going through several more glasses of white wine, which probably helped to further lubricate the conversation.\n\nAt one point late in the evening, a rather attractive blonde woman pushed her way through the crowd towards us. She came up to Alex and, pointing at me, demanded in a strident voice, \"Is she your date?\" Alex turned to me with a smile on his face and asked, \"I don't know, Elle, are you my date?\" \n\nI blushed and quickly responded, \"No, I'm just a friend.\"\n\n\"Good,\" the blonde said, and then proceeded to brazenly fondle the front of Alex's trunks. \"So why don't you and I go back to my place and find out if you really are the man of steel?\" she asked suggestively.\n\nAlex blushed even redder than I had, and quickly brushed her hand away. \"Sorry, but I'm all tied up tonight.\"\n\nHer face reflected her disappointment, but she wasn't ready to give up. \"We could do that too, you know.\" When Alex shook his head again with a smile, she said, \"It's your loss, superhero,\" and stalked away on her stilettos with a petulant look on her face.\n\nAlex leaned over to speak quietly into my ear. \"It looks like the natives are starting to get a little restless,\" he said with a wry grin. \"Maybe it's time for us to call it a night.\"\n\nI'd been frozen by the little interlude and surprised to realize that the aggressive woman's approach had made me jealous, so I was glad when Alex took my hand and began leading me to the door. Then the very thing I'd been dreading occurred. A huge man, obviously drunk, stepped out of the crowd directly into our path. He stared at Alex and sneered as though Alex had offended him.\n\n\"So you're the sissy who thinks he's a superhero!\" he roared, and the crowd around us fell silent.\n\nAs I cowered behind Alex, I saw two other rough-looking men close ranks behind the giant, and I groped for my cellphone, wanting to be ready to call 911 if mayhem began. \n\nTo his credit, Alex didn't flinch. \"I'm the one wearing the Superman suit,\" he said evenly, \"but I'm far from being a superhero.\"\n\nThe big man squinted at him. \"If you're not a superhero, what the fuck are you wearing a Superman suit for?\" he demanded belligerently.\n\n\"Do you really want to know?\" Alex asked with a solemn look on his face, and I couldn't help but wonder what was going through his mind. Was he deliberately trying to provoke the big man? I was terrified.\n\n\"I wouldn't have asked you if I didn't want to know, smartass!\" the big man roared.\n\nAlex leaned toward him and said quietly. \"My wife cheated on me with another man. She ran off, broke my heart and humiliated me. I'm wearing the suit to protect me because I don't ever want to be hurt like that again.\"\n\nThe big man stared at Alex for a long minute, and then did the last thing I would ever have guessed: he threw his arms around Alex and hugged him! \"Shit, man, I know how you feel. My wife did the same thing to me.\" Then he released Alex, patted him on the shoulder and said, \"You take care of yourself, you hear?\" With that he stepped aside, opening our path to the door. Behind us, someone yelled out, \"Good night, Superman!\" and as others took up the cry, we left the building.\n\nOut on the sidewalk I began to shake. \"Oh my God, Alex, I thought he was going to kill you!\" I said in a trembling voice.\n\nAlex looked at me solemnly. \"I thought so too,\" he said. Then his smile returned and he said, \"Let's go grab a bite to eat.\"\n\nI let him lead me to an all-night diner, and after we'd ordered, I began to babble. \"What made you say that to that guy?\" I wanted to know. \"How did you know he'd react like that?\"\n\nAlex shook his head. \"I had no idea what he was going to do. I just decided that Superman wouldn't have tried to talk his way out of the situation, he'd tell the truth and see what happened.\"\n\n\"Yeah,\" I said, \"but Superman couldn't be hurt. That guy could have taken your head off.\"\n\nAlex smiled sadly. \"You're probably right, but I've been hurt already, so I figured, 'what difference would one more time make?'\"\n\nI took a bite of my sandwich to give me time to think. I was beginning to realize just how badly this man had been wounded, and just how much he relied on the nominal protection of his costume.\n\nI decided to change the topic. \"I was impressed by the way you were able to talk to all those people so easily. You should run for political office.\"\n\n\"No,\" he said immediately, \"I wouldn't have any interest in that. I'm just learning to enjoy being with people.\"\n\nI shook my head. \"How many of those people in the bar did you know?\" I asked curiously.\n\nHe smiled. \"None of them. The only guy I recognized was the bartender.\"\n\nThat was hard for me to believe. \"How did you learn to make conversation so easily with strangers?\" \n\nHe shook his head. \"It's funny, Elle. All my life I've been shy around people. Back in school I hung around with a crowd because I wasn't confident being on my own. In the group I could just react to what everyone else was saying.\"\n\nHis face lost the trace of smile around the corners of his mouth. \"It got a lot worse after Glenda left. I didn't want to see or be with anyone, I just wanted to dig a hole and crawl into it. But after I started wearing my Superman suit, it got a lot easier for me to go out by myself, meet new people and talk to them. I'd just think about how Superman would handle things and try to act the same way.\"\n\nThe image of Alex as shy and hesitant just didn't fit with the extrovert I'd witnessed only minutes before, so I pressed him on the topic. \"Maybe the suit helped you come out of your shell,\" I said, \"but that doesn't explain how you learned to talk with people like that.\"\n\n\"It's nothing special,\" he said. \"I really like people -- it's just that I've never felt comfortable around them. Now I do, and I want to know what they think and how they feel. I'm having a good time, and I want them to have one too.\"\n\nI didn't respond, but all I could thinks was, \"There's a lot more to this guy than I thought.\"\n\nAt that moment a woman came into the diner, and that made me think again about the confrontation with the predatory blonde. I asked Alex about the incident. \"Does that kind of thing happen often?\" I wanted to know.\n\nHe was clearly embarrassed. \"Yeah,\" he admitted, \"it's happened a few times.\"\n\n\"Did you go home with any of them?\" I demanded. \n\nHe wouldn't look at me. \"A couple of times, maybe.\"\n\n\"Well, how was it?\" I demanded before I could close my mouth. What was I thinking asking a question like that?\n\nBut before I could backtrack, he was already answering. \"The first time, I hadn't been with a woman since Glenda left, and I guess I was pretty, um . . . eager.\" He gave a little laugh. \"Afterwards, she accused me of being faster than a speeding bullet.\"\n\n\"But it got better after that,\" he went on guilelessly. \"I just kept reminding myself about the kind of control that Superman would have had, and the ladies liked me better. But pretty soon I got to the point where hooking up didn't seem that attractive to me.\" He looked at me with pain in his eyes. \"I guess I'm sort of old fashioned that way. All I really ever wanted was one woman, if she was the right one. I thought Glenda was, but I found out different.\"\n\nHe suddenly glanced up at the clock over the counter. \"Do you need to get home?\" he asked considerately, and when I looked at the time I was shocked at how late it had gotten. \n\nHe walked me out to the curb and flagged down a cab for me. I guess having a cape blowing in the wind comes in handy sometimes. As the cabbie gawked at him, Alex opened the door and helped me inside. \"Thank you, Elle,\" he said. \"I know this was just for your article, but I really enjoyed being with you tonight.\" Then he closed the door, and as the cab pulled away I looked back to see him standing there on the curb.\n\nThe cabbie turned around to look at me. \"Who was that guy?\" he asked curiously.\n\n\"I'm still not sure I know,\" I said.\n\nTerri was waiting up for me when I got home, and she wanted to know all about my evening. After I finished recounting the night's adventures, she asked what I thought about Alex. When I talked about how badly he'd been hurt, she looked at me closely. \"He may have had a hard time over his ex-wife, but he's not a lost kitten, Elle. You don't need to give him shelter and a bowl of milk, you know.\"\n\n\"I know,\" I said, but it was hard to stop thinking about him and all he'd been through.\n\nWhen I sat down to write my article about Alex, I found it extremely difficult to get started. On the one hand, recounting the experiences Alex had shared with me would be easy, and what I'd observed in the park and at the bar would definitely make for great copy. But I found myself struggling to capture what was really going on inside Alex. The one question every reader would want answered was why a seemingly normal guy would do such a seemingly irrational thing.\n\nI started over several times before coming up with a lede that I liked. \"Superhero with a broken heart\" seemed to capture the contradictions best for me, and once I'd gotten that down the rest seemed to flow easily. \n\nWhen I'd originally gotten the assignment, I was sure that it would all be a waste of time and my work would get killed. But after my wild day and night with Alex, and after spending another day struggling to describe what was really going on inside of him, I began to feel very protective of my article. I didn't want it to wind up on the spike, and I was really apprehensive when I finally turned it in to my editor.\n\nAn hour later she called me. \"Have you got any more?\" she asked brusquely.\n\n\"What do you mean?\" I asked irritatedly. \"It's already the right length.\" I'd carefully edited the article down to standard length for the City section. I consider myself a serious writer, and I've learned that if I don't edit my own work, somebody else will start hacking at it and ruin what I've done.\n\n\"It's not the right length for the Sunday Magazine,\" she said, and I gasped. An article in the Sunday Magazine can run much longer. More importantly, the pieces that appear there tend to get a lot of attention, and, unlike daily articles, they stay up on the online Times for the whole week. I was in shock \u2013 admittedly, a pleasant shock, but still . . .\n\nI went back to my computer and started pulling up all the material I'd cut. With the luxury of all those beautiful extra column inches, I quickly started revising what I had, changing it from a news item to a feature article. I kept my lede but let the story flow much more organically now that I was freed from inverted pyramid style.\n\nBy the end of the day I had it done and my editor was quite pleased. \"This is really good, Elle,\" she told me, \"and you've submitted it in time for this Sunday's edition.\" I felt like I'd hit a grand slam home run.\n\nThat evening I did something I shouldn't have: I called Alex and told him to check the Sunday Times Magazine this weekend. \"So it's not going to be in the daily news?\" he said uncertainly. \"Is that a good thing or a bad thing?\"\n\n\"Oh, it's definitely a good thing,\" I said. \"You'll see.\"\n\nAfter I hung up, though, I began to have second thoughts. What I'd turned in to my editor was a positive, honest, human interest story, and I thought it captured Alex pretty well. But that didn't mean that the finished product would turn out that way. What if some editor higher up decided to turn the story into a humor piece poking fun at Alex or, worse, holding him up to ridicule? I'd seen things like that happen before and the result could be pretty cruel. If that happened, he'd think I'd written it that way. The more I thought about it, the more I wished I hadn't called him.\n\nReporters are supposed to keep a distance from their subjects, to be dispassionate. If they don't, they lose their objectivity and then they aren't reporting any more. But, dammit, I found I couldn't help liking Alex, and if my article got turned into a slash-and-burn piece, I'd feel terrible. Plus, I admitted to myself, I'd likely never see the guy again. While that wasn't likely anyway, it would be nice to think it could be a possibility.\n\nI deliberately avoided taking an advance look at the magazine, but when my own copy of the Times hit my doorstep, I quickly pulled out the magazine section. There on the cover, staring back at me with smiling eyes and a steely expression on his face, was the picture of Alex standing on the boulder in Central Park. Below it was the headline: \"The Brokenhearted Superhero from Queens.\"\n\nOMG, my story had made the cover! I quickly flipped to the story -- under my byline! -- and began reading. No, I was relieved to see, they hadn't turned my article into a parody. In fact, the more I read, the more I realized they had used it almost exactly as I had written it! Not only that, but they'd used it all, my whole damned submission! What a rush!\n\nI sat there in my pajamas and felt great. Getting a cover story was a terrific coup, something a reporter like me could only dream of. Then another thought surprised me: I found myself wishing that Alex would read it and tell me he liked it. \"Where did that come from?\" I wondered.\n\nAfter Terri read the article, she just shook her head. \"You're doing it again, Elle. This guy is damaged -- I don't want to see you get hurt.\"\n\nI ignored her.\n\nI got lots of calls of congratulation on Monday, but I didn't hear from Alex. I knew that there was no particular reason why he should call, but I found myself becoming more and more apprehensive as the day went on. Perhaps he had had a different reaction to the article, I thought, or perhaps he had resented my efforts to give a balanced picture of him. Or maybe, I thought sadly, he just wasn't interested in talking to me again.\n\nI was deep in self-pity mode when my cellphone rang. It was Alex! \"Hey, Elle,\" he said, \"I'm sorry I didn't call you earlier, but things have been crazy around here. None of my friends at work can believe it's me. My Mom back in Illinois even called \u2013 I don't know how she found out about it. She's worried about me,\" he said with a laugh, \"she thinks I've lost my mind.\" He continued to ramble on as I tried to get a word in edgewise.\n\nFinally he paused to catch a breath, and I seized the opening. \"So,\" I said, \"what did you think about the article?\"\n\n\"Oh, it was . . .\" he said, and then he paused, and I heard him speak to someone else for a few seconds before he came back on the line. \"Listen, that was my boss, so I'm going to have to go. But before I do, I wanted to ask if you could have lunch with me on Wednesday? We can talk some more about it then.\"\n\n\"Um, sure, I guess,\" I said, trying not to sound eager.\n\n\"Great!\" he enthused, and gave me the name of a little place on 8th Avenue not too far from my office. \"See you on Wednesday at noon,\" he said, and then he was gone.\n\nAs I hung up the phone, I wished we had had longer to talk about the article, but it didn't sound like he was displeased with it. Anyway, I thought, at least he wants to see me again. As I turned back to my computer screen, I saw a little smile in the reflection.\n\nI got to the restaurant a few minutes early on Wednesday, but when I looked inside Alex was already there and he was wearing his Superman suit. I hadn't expected that. He was chatting animatedly with a man when I walked in, but when he spotted me he shook the man's hand like they were old friends and then came rushing over to me. He bent over and gave me a kiss on the cheek before leading me back to the table.\n\n\"Who was that man?\" I asked curiously.\n\n\"Oh, that was the restaurant owner. When he saw me come in wearing my suit, he came over and wanted to talk with me,\" Alex explained nonchalantly as though such things happened every day to him.\n\nThen his face took on a look of great animation. \"You won't believe everything that's been happening to me,\" he said, with the excitement of a little boy. \"I told you about my friends at work and how surprised they were to read about me. Well, they absolutely demanded that I wear the suit to work on Tuesday. I'd never even thought about doing that because I really want to be taken seriously in my job and I was afraid of what the reaction would be. But they kept insisting, and finally I decided 'what the heck.'\"\n\nHe paused as the waitress delivered our food, then quickly resumed his story in between bites. \"Anyway, when I went in Tuesday morning, my friends started going wild, and then my boss walked in. I was terrified, but she just looked at me for a minute. Then she sniffed and said, 'Alright, I guess you can wear that thing, but if it detracts from the work environment, you'll have to change.'\"\n\n\"I was blown away \u2013 I thought sure she'd have a fit about it. But the fact that she didn't freak out made me feel just that much more confident. So after lunch I took another big gamble: I did something I'd wanted to do for a while but hadn't dared before I wore the suit.\"\n\nHe leaned toward me across the table, and his enthusiasm was palpable. \"Every week, publishing houses get dozens of unsolicited manuscripts from wannabe writers. They just get tossed in the 'slushpile,' and most get ignored or sent an automatic 'thanks-but-no-thanks' letter,\" he explained. \"But I started looking through some of them just to see what they were like, and I found one that I thought was really good.\"\n\n\"First-time authors are usually pretty terrible; they use poor grammar and devise plots that are either trite or ridiculous. But this one was so much better, and I really thought it might have what it takes to be a good seller. I'd been afraid to take it to Mrs. Grissom, my boss, because junior editors just don't do that.\"",
        "He flashed that big grin at me. \"Anyway, on Tuesday I decided to act like Superman instead of like myself. So after lunch I went to her office and handed her the manuscript. After she told me to stop wasting her time, I said, \"Mrs. Grissom, just take this home and read the first couple of chapters. If I really have wasted your time, then you should fire me, because I obviously don't have the right talent for this job.'\"\n\nI tried not to show a reaction, but my guts clinched. What Alex was describing was the sort of thing I'd often dreamed about, because I'd always wanted to be a serious writer. I'd even written a novel, but I'd never tried to submit it anywhere because I knew it wasn't good enough. \n\nTo cover my envy, I said, \"You didn't really do that, did you, Alex? I know how much you like your work \u2013 you're taking a huge risk.\"\n\nHe gave me a wry grin. \"Maybe so, but I really believe in this, and I decided it was better to take a risk than always be afraid of failure.\"\n\n\"So what happened?\" I wanted to know. \n\n\"Nothing, yet,\" he said. \"Mrs. Grissom went out of town and won't be back till Friday.\"\n\n\"Omigod,\" I said, \"I'd be a nervous wreck waiting to find out what she thinks.\"\n\n\"That's why I wanted to have lunch with you today: so I'd have something more pleasant on my mind.\"\n\nI blushed in spite of myself. I knew it was just flattery, but it made me feel good anyway. And then he said something that made me feel even better.\n\n\"There's another reason I wanted to see you today. This Saturday, one of the big online booksellers is holding a fancy cocktail party for the publishing industry. All of us are supposed to go, and I'd really like you to come with me.\"\n\n\"You want me to be your date?\" I asked in surprise.\n\n\"Yeah, if you're not in a relationship and you'd like to come.\"\n\n\"No, I mean, no, I'm not in a relationship. What I mean is yes, I'd be glad to go with you,\" I stuttered.\n\n\"Great,\" he said, and handed me a copy of the invitation. \"Here are all the details. Why don't I meet you there in the lobby at 8:00?\"\n\nI nodded because I seemed to be having difficulty speaking. To cover my awkwardness, I glanced at my watch. \"Oh, wow, I need to get back to work.\"\n\nAlex nodded and began to crane his neck, looking for our waitress to bring our check. But instead, the owner saw him and came over to our table. \"It's not often we have a superhero dine with us,\" he smiled. \"Your lunch is on the house.\"\n\nAlex stood and thanked him warmly; then they embraced like men do and we headed for the door.\n\n\"That was amazing,\" I told Alex, \"I've never seen a restaurant comp a lunch tab like that before.\"\n\n\"You need to go out with superheroes more often,\" he said with a wink.\n\nAlex walked me back to my office, waving and nodding to strangers who spoke to him along the way. When we got to the building entrance he said, \"Thank you for the wonderful article, and thank you for having lunch with me.\" Then, before I could respond, he leaned over and gave me a little kiss on the lips. As I stood there in surprise, he turned to leave. \"Don't forget about Saturday night,\" he said with a smile, and then he was gone.\n\n\"What just happened?\" I asked myself as I slowly made my way back to my desk. The rest of the afternoon I had trouble focusing on my work.\n\nOn Saturday I couldn't believe how nervous I felt getting ready for the cocktail party. \"You're acting like you're getting ready for the senior prom,\" I scolded myself, but then I remembered that I hadn't actually gone to my senior prom because I didn't have a date.\n\nAnyway, I pulled out my best little black dress and the black ankle-straps with heels that were higher than I remembered. Checking myself out in the mirror, I wished for umpteenth time that I was a little bigger on top, but I felt like my legs looked pretty good, so I finally decided that I would do.\n\nTerri came in to give me a final check. She circled me silently, then stopped in front of me with an approving nod. \"Have a good time, sweetie, but take care of yourself,\" she said solemnly.\n\n\"Yes, Fairy Godmother,\" I said with a grin, \"I promise I'll be home before midnight.\"\n\nShe just shook her head, but I thought I saw a trace of a smile on her face.\n\nThe event was being held at the Waldorf-Astoria, and I splurged on a cab because I didn't want to get all sweaty in the subway. When I entered the lobby, I didn't spot Alex at first, but then a knot of people parted and there he was, resplendent in his Superman suit. I had just assumed that for an important event like this he would dress in a normal suit and tie or even a tuxedo, but I decided that if he was brave enough to go in costume, I could be brave enough to go with him.\n\nAs soon as he spotted me, he came rushing over. \"I've never seen you in a dress before. You look amazing!\" he said, and even though I knew he was just being nice, it still felt good to hear him say it.\n\nWe took the elevator to the Empire Room, which was already crowded with a throng of people busily eating, drinking and chatting. Nevertheless, an instant buzz went through the room when Alex and I walked in, and before he and I could find something to drink, we were surrounded by people asking questions and making conversation. \n\nIt was fascinating to see the way these supposedly sophisticated people reacted to Alex in his Superman costume, and once again I was impressed with how easily he dealt with perfect strangers. But it would have been nice if the two of us could have had a chance to spend some time by ourselves. I guess that's what happens when you're with a celebrity, and I had to remind myself that I was at least partially responsible for his notoriety.\n\nJust then, three people about our age came running over and began to chatter eagerly with Alex, teasing him about something that had happened at work. I held back so he could talk with his friends, but he grabbed me around the waist and gently pulled me to him.\n\n\"Hey, everybody,\" he said, \"this is Elle Finn, my date. She's also the reporter who wrote the story in The Times.\" He turned to me. \"These are the people I've been telling you about in my office. This is Jacob and Tommy and Marie,\" he told me, introducing them one by one.\n\nAs I shook hands with the two guys, I noticed that they both took the opportunity to check me out, which made me feel good. But when I shook hands with Marie, I thought I saw a hint of jealousy in her eyes. \"I bet she was hoping that Alex would ask her to go with him,\" I thought, and felt a little smug that I was the one on his arm.\n\nAfter a few more minutes of conversation, the three of them waltzed off to the hors d'oeuvres table to refresh their plates, and I seized the opportunity to pull Alex to one side. \"So what was all that about something big happening at your office,\" I asked.\n\n\"Oh, gosh, I almost forgot to tell you the big news. Mrs. Grissom called me into her office today, and I was sure she was going to give me the axe. But instead, she told me she loved the manuscript I gave her. She thinks it has real potential!\"\n\n\"That's wonderful, Alex!\" I said excitedly. \"I can't believe it \u2013 your gamble paid off.\"\n\n\"And that's not all,\" he went on, \"she told me she really admired my initiative and my willingness to take a risk. She said that was the kind of senior editor they need. So instead of getting fired, I got a promotion and a big raise!\"\n\n\"Oh, Alex, congratulations!\" I exclaimed, and threw my arms around him. He returned my embrace, and it felt really good until I suddenly felt him stiffen. \n\n\"What is it?\" I asked.\n\n\"It's Glenda, my ex,\" he said in a low voice. \"She's coming this way. And that's Connor James with her. He's the guy she was cheating with.\"\n\n\"Why are they here?\" I asked.\n\n\"I should have guessed she'd be here, but I didn't even think about it,\" he said. \"Her firm does a lot of legal work with the publishing industry.\"\n\nI turned to see a pretty blonde woman in an evening gown, accompanied by a man in a tuxedo. The scowl on her face made her look like she had eaten something sour. She didn't wait to reach us before she began speaking in an angry voice.\n\n\"I can't believe you would show up at an event like this wearing that stupid Halloween costume, Alex! You're making a complete fool of yourself.\"\n\nAlex folded his arms across his chest, and I could see the tension in his posture. \"Why are you so upset, Glenda? What do you care what I choose to wear?\"\n\n\"You look ridiculous in that padded suit, and it's embarrassing to me for you to be here looking like that with all these important people.\"\n\n\"It's too bad you're embarrassed, but I'll wear what I want to wear, whether you like it or not,\" Alex said, and then added, \"And for your information, the suit is not padded.\"\n\nReflexively, Glenda reached out and touched his bicep, then jerked her hand away in wide-eyed embarrassment when she realized what she had done. Clearly trying to change the subject, she glanced over at me.\n\n\"You haven't introduced me to your little companion for the evening,\" she said tartly.\n\n\"I beg your pardon,\" he said in a sarcastic tone of voice. \"Glenda Preston, allow me to introduce Elle Finn. She's the reporter for The New York Times who wrote the story about me in the Sunday magazine.\"\n\nShe looked at me with a sneer. \"How appropriate,\" she said, \"a junior editor at a publishing house and a reporter for a newspaper: two losers from two dying industries.\" Then, before either of us could react, she grabbed her date's arm and said loudly, \"Come on, Connor, let's get out of here.\"\n\nAlex started to stalk after her, but I grabbed his arm. \"Please don't make a scene, Alex,\" I begged. \"Who cares what she thinks?\"\n\nFor a second I thought he was going to pull away from me and go after her, but then his muscles relaxed. \"Okay, Elle, I'll let it go. It's just that she has a way of getting to me. I've hardly seen or spoken to her since she walked out, and I thought she couldn't upset me any more. Then, in less than two minutes she insults me and you, and there's nothing I can do about it.\"\n\nI didn't want to ask but I couldn't stop myself from voicing my fears. \"Do you still have feelings for her, Alex?\" I asked.\n\nHe was startled. \"Oh, God, no! It's not that at all. I guess what upsets me so much is that she was the one who screwed around, she was the one who lied and walked out on me, and I'm the one who feels bad. Then she suddenly appears tonight and acts as though everything is my fault. And there's nothing I can do about it.\"\n\nIt was clear that he was still hurt by what had happened, but I felt better that he wasn't still hung up on Glenda. I tried to divert his attention by talking about his work and my own. We stayed and circulated, me drinking champagne, him drinking soda water, and the two of us eating enough hors d'oeuvres to make a meal. We even went out on the floor and danced a little, and both of us began to feel better. Finally, Alex leaned over and told me, \"I'm ready to go if you are.\" When I nodded, he escorted me downstairs and we grabbed a waiting cab. \"I can afford one of these more often now,\" he said with a little smile.\n\nAs we rode down to my apartment, I thought about what had happened tonight. I really liked Alex and admired him in so many ways. At the same time, I realized that he'd been badly wounded by what Glenda had done. He'd told me that before, but tonight I got to see first-hand what a hold she still had on him. \"What a bitch!\" I thought angrily, and wished there were something I could do to help. I was beginning to feel very protective of this contradictory man who was both strong and weak at the same time. Perhaps because of that, or just because a little of the courage from his Superman suit was rubbing off on me, when we reached my place I asked him if he'd like to come up for a little while. He looked at me solemnly and said, \"Yes, very much so.\"\n\nAs I unlocked the door to my darkened apartment, I whispered, \"My roomie is probably asleep, so we'll have to be quiet.\" But when I reached for the light switch, his big hand covered mine to stop me. Then he swept me up in his arms like I weighed nothing. \"Which one is your bedroom?\" he asked, and all I could do was point. \n\nTruthfully, this was what I'd hoped for when I invited him in, but I hadn't expected him to read my mind so well nor to take charge so completely. But now I was glad he had done so.\n\nHe laid me on my bed gently, and then his mouth was on mine and his tongue was searching and teasing my own. I was startled to discover I was panting. In no time at all my clothes had disappeared, and I was glad for the semi-darkness. Then his costume came off, and I marveled at the musculature I could see in the dim light.\n\nNow he was beside me and his lips and fingers were everywhere, first caressing and soothing me, then building a sense of urgency that threatened to overwhelm me. My nipples are longer than average, and they're very sensitive. His fingers sought them out and began to rub and twist them gently, driving me wild. \n\nI certainly wasn't a virgin, but the sexual experiences I'd had to date had been pretty unsatisfying. So even though I had wanted this to happen, I was surprised at the intensity of the sensations and my emotions. I closed my eyes and let him do whatever he wanted, enjoying every second of it.\n\nSuddenly my eyes popped open when I realized he was kneeling between my legs and licking the insides of my thighs. Involuntarily, my hips lifted; then I was startled when his tongue ran over the lips of my vagina. None of my other lovers had done such a thing. Of course I'd touched myself with my fingers there many times, but the sensation of his tongue was so different and \u2013 oooh! -- so much better.\n\nI normally try not to make too much noise, but in spite of myself I groaned out loud as his probing mouth brought intense pleasure. I found myself raising my legs and wrapping them around his broad shoulders, using my heels on his back to lever myself up toward the lips and tongue that were driving me crazy. I heard myself moaning, \"Oh!, oh!, oh!, oh!\" as the inner tension kept building; then suddenly I cried out as the sensations reached an incredible peak, and I fell back on the bed. \"Omigod,\" I thought, \"it was never that intense when I touched myself. That must have been a real orgasm!\"\n\nAs I lay there with my eyes closed, my body luxuriating in the quivers still running through my vagina, I felt his fingers gently caressing me, and I was embarrassed by how wet I was. Then, to my surprise I felt the tension slowly beginning to build in me again. Just as I was about to say something, I felt his body shift, and now he was looming over me. His penis ran between the lips of my vagina, and when it rubbed across my clitoris, I shuddered and moaned at the sensation.\n\nThen he pulled back and his penis slipped inside me in a long, slow motion that filled me wonderfully. He lifted my legs and began to stroke in and out of me in a smooth, pulsing motion, and I heard myself start to whimper again. When his penis pressed inward, I felt exquisite pressure on my clitoris, and now there came a new sensation as the head rubbed against my inner walls. Once again his fingers found my nipples, and it felt as though an electric current was flowing between them and my vagina.\n\nThe build-up was slower this time, maybe because I'd already had one orgasm, but it continued to grow stronger and stronger, and my body began to rock and arch in time with his, stretching to intensify the sensations. \"Oh, please, don't stop, please, don't stop, don't stop,\" I began to chant, completely forgetting about my roommate and everything else. Then I was pulling at his back and thrusting my hips up at him, crying \"Now, now, please now!\" as the sensations overwhelmed me.\n\nI collapsed on the bed, shuddering as the spasms kept coursing through my vagina. Alex continued to drive himself into me faster and faster until he gave a loud groan and pushed himself as deep as he could, triggering yet another spasm in me. Then, after a few more thrusts he collapsed on me, and his weight felt good as we clung to each other.\n\nFinally, he rolled to one side. His big hand reached out to brush the hair out of my face, and there was a tender, questioning look on his face. \"Are you okay?\" he asked. \"Was that good?\"\n\nI was still in a daze and couldn't think clearly to choose my words well. All I could say was, \"It was super!\" He laughed, and when I realized what I'd said, I began laughing too. We clung to each other and eventually drifted off to sleep.\n\nWhen I awoke in the morning, I reached over for him, but his side of the bed was empty. Dismay swept over me at the thought that he had snuck out, but before I could begin to feel sorry for myself, he reappeared through the door, and I realized he must have had to use the bathroom. I felt relieved and happy as he crawled back under the sheet beside me and proceeded to fall asleep again.\n\nAfter a while I got up and took a quick shower before making some coffee and starting breakfast. I heard the shower running again and I figured he was up as well. Sure enough, he appeared shortly, giving me a grateful smile as he smelled the food.\n\nI had just fixed him a plate when my roommate's door opened and she appeared in her robe and slippers. \"Alex,\" I said, \"this is my roommate, Terri Feldman. Terri, this is Alex Stevenson.\" They shook hands, and after she poured herself a cup of coffee, she sat down and continued to stare at Alex so intently that he couldn't help but notice. \"I guess you're not used to seeing someone wearing a Superman costume,\" he said good-naturedly.\n\n\"No,\" she said, \"I'm not used to seeing my roomie bring home a man.\"\n\nAlex chuckled while I blushed in embarrassment. \n\nSunday was a rainy day, and since Terri had to go out, I asked Alex if he could stay for a while. He agreed and we spent the morning sitting on the couch, reading the Sunday paper. I began to feel warm and domestic. Warning signals were going off in my head, but I ignored them because I was enjoying myself so much.\n\nAfter a while Alex put down the paper and turned to me. \"So what's the deal with your roommate? She seems a lot older than you. Are you two related?\"\n\n\"No,\" I laughed, \"although she sometimes acts like my mother. She sort of adopted me at work, and when my old boyfriend kicked me out of his apartment, she invited me to move in with her. Terri's been watching out for me ever since.\"\n\nHe nodded. After another couple of minutes, he spoke up again. \"I just realized: you already know all about me,\" he said. \"How about letting me hear your story?\"\n\nI poured myself another cup of coffee and began. <blockquote>There's really not that much to tell. I was something of a tomboy growing up. In addition to not being attracted to feminine things, I was late to fill out, so the boys in high school pretty much ignored me. But that didn't bother me much because I'd developed an interest in writing. Instead of socializing I threw myself into working for the high school newspaper and the annual. \n\nBy the time I hit college, I had gotten my figure and some of the male undergrads started hitting on me. But I was pretty shy, thanks to my lack of experience, and most of the guys weren't patient enough to wait for me to get comfortable with them. Once again I wound up spending most of my spare time writing. In addition to the college paper, I tried writing the Great American Novel --unsuccessfully, I might add. Although I didn't date much, I did have one pretty intense romance, but the guy broke my heart during my senior year when he dumped me for someone else. \n\nWhen I got out of college, I managed to wangle a job at my hometown newspaper. While I was there I did some reporting that earned me a good reputation. So when I applied for a job at the Times, they must have liked what I'd done because I got the job. When my boyfriend at the time dumped me, Terri took me under her wing, and that's pretty much my story.</blockquote> Alex and I hung around my apartment all afternoon, and we wound up making love again. It was every bit as good as the first time.",
        "Finally he told me he had to get home in order to get ready for work on Monday. As he left, he gave me a little kiss and said, \"I'll call you.\" I hoped he meant it, but that was the same thing my last date had said, and I never heard from him again. I was really hoping Alex was sincere, especially since in a lot of ways this had been the best weekend of my life. I wasn't ready for this to be over.\n\nTerri came home a little later and gave me a careful look. \"Well, I'll give you this: he's definitely eye candy.\" When I didn't say anything, she looked at me intently. \"You've really got it bad, haven't you? I've never seen you act this way about a guy.\"\n\n\"He really is special,\" I admitted, \"but I still have lots of doubts. It's so weird: I'm happier than I've ever been, but at the same time I'm scared to death.\"\n\nShe just shook her head. \"If he hurts you, I'll put a contract out on him.\" I knew she was joking, but I really did appreciate her concern. She started down the hall, but then turned back. \"Oh, and next time, be sure to use an air freshener \u2013 this place stinks!\" I turned crimson.\n\nOn Monday evening when I got home, I had no sooner closed the door than my phone rang. It was Alex, and he was so excited I could hardly understand him. \"Elle, you won't believe what happened today! Some people from CBS called \u2013 I'm going to be on The Letterman Show tomorrow night!\"\n\nHe went on about how he'd been a big fan of David for years, and that he couldn't believe he was going to be a guest on his idol's show. \n\n\"Is your being on Letterman going to be a problem with Mrs. Grissom?\" I asked, but Alex assured me there would be no problem with the publishing house. \"As far as they're concerned, this is great publicity for them,\" he enthused.\n\nI promised him I would watch \u2013 as if I could have done anything else! \u2013 but after I'd hung up I began to have mixed feelings. On the one hand I was so pleased for Alex's sudden good fortune and so glad he'd wanted to call me to share the news. On the other hand, a nagging voice was asking if I liked the real Alex or just the man in the suit. Now that I thought about it, I realized I'd never seen him without it \u2013 except when we'd been in bed together. Then I suddenly began to wonder if the costume had become a crutch, something he needed to get through life. I tried to brush my doubts aside, but they wouldn't go away so easily. That's so like me to worry about good news.\n\nNeedless to say, Tuesday night Terri and I were ensconced in front of the tv in time for the Letterman Show. David's first guest was a pretty young pop singer in a very short skirt who performed her latest hit and then sat down on the couch for some banter with the host. Then, after a commercial break, David introduced the \"man everyone in New York is talking about, the City's latest hero: Superman!\"\n\nThe audience cheered as Alex came on, waving to the crowd, then shaking hands with David and the pop star. I found myself holding my breath, hoping Alex wouldn't do anything to make himself appear ridiculous, but I needn't have worried. Despite his hero-worship for Letterman, Alex proved relaxed and at ease in conversation. He told the story about why he began wearing the suit, and then went on to recount his confrontation with the biker in the bar. That story got an appreciative response from the audience. In response to several leading questions from David, Alex deftly made self-deprecating answers that brought laughter and a round of applause. I could tell that even Letterman was impressed.\n\nThe pop star, on the other hand, couldn't resist rubbing Alex's biceps and making suggestive comments about his being the \"man of steel.\" \"Show us your super strength,\" she persisted, even after Alex demurred. But after she begged for the third time, he winked at Letterman, then stood up, bent over and grabbed the shrieking young woman under her arms, easily whirling her around in a large circle and, in the process, revealing that she was wearing a thong. When he deftly deposited her back on the couch, she gasped out, \"Oh my god, that was awesome!!\" and the audience burst into more laughter and applause.\n\nNever one to miss a cue, Letterman shouted, \"Ladies and gentlemen: Superman!\" and the applause turned into an ovation. Alex turned and bowed to the singer, shook hands again with Letterman, and left the stage, waving as the audience continued to applaud.\n\nTerri turned to me in amazement. \"What a performance! Are you sure he's never been on tv before?\"\n\n\"I don't think so,\" I said, but I too was blown away with how well Alex's appearance had gone. I was beginning to be convinced the suit really was magic.\n\nThe next day at work I checked some of the blogs from the overnight critics and saw that Alex's appearance had drawn a raft of favorable comments. I tried to call him to congratulate him, but every time his line was busy, so I left him a voice mail.\n\nIt wasn't until that afternoon that he called back. \"I'm sorry not to get back to you sooner, Elle,\" he said, \"but my phone has been ringing off the hook all day. And listen to this: I had a call from the William Morris Agency. They want to represent me -- they think I have show business potential!\"\n\n\"Really? That's incredible, Alex,\" I said. \"What did you tell them?\"\n\n\"Well, I told them I wanted to think about it. It would mean I'd have to quit my job here. But the guy said he thought they could book me into a lot of shows and speaking engagements, and that could mean a lot of money. He even hinted that they might be able to work out something with Hollywood for a film deal!\"\n\nThat nagging voice I'd heard before was now shouting at me, but I tried not to let my fears come through in my voice. \"Oh, Alex, I'm so glad for you. It sounds like everything is really turning your way.\"\n\n\"I know,\" he said, \"but I don't want to rush into this and make a decision I'll come to regret.\" He gave a wry laugh. \"I already did that once with Glenda.\"\n\nI offered to help him any way I could, but then another call came in for him and he had to ring off. \"I'll talk to you tomorrow,\" he promised.\n\nWhen I went home that evening I felt oddly depressed. I was glad for the success coming Alex's way, but all I could see was him wearing that Superman suit for years to come. What kind of future could he and I have if he was headed out on the talk show circuit, or even worse, to Hollywood? I felt like he cared for me, but I saw myself becoming nothing more than a footnote in his story. \n\nThe hopeful side of me kept imploring me not to get ahead of myself, but the pessimist in me said that trouble was already here and piling up on my doorstep. Writing is one of the ways I relax, but that night I couldn't find it in myself even to do that. \n\nTerri poked her head in the door and demanded to know what was troubling me, and I broke down and tearfully told her my fears.\n\n\"If you ask me,\" Terri said, \"the real problem is that Glenda woman. She's his kryptonite: he can't stop wearing the suit because she still has the power to hurt him. You want me to put out a contract on her?\"\n\nI laughed and shooed her out of my room.\n\nTwo days later I was working on a routine assignment at my office when a colleague came over and caught my attention. \"Hey, Elle, aren't you the one dating Superman?\" \n\nWhen I blushed and admitted that we'd gone out together, he pointed to my computer and said, \"Well, take a look at Gawker today, because there's an article that mentions him.\"\n\nThe first time I checked the news and gossip blog, I didn't see the story because I was looking for a picture of Alex, but on second look I found it. Underneath the headline \"The Woman Who Broke Superman's Heart\" was a picture of a woman stalking angrily down the street trying to fend off the camera. I suddenly realized that it was Glenda Preston, Alex's ex-wife.\n\nAccording to the reporter, who was clearly sympathetic to Alex, \"Everyone in New York is asking who hurt Superman so badly.\" She then went on to reveal \"in a Gawker exclusive\" the whole story about how Glenda had been cheating on Alex with attorney Connor James for months before finally leaving Alex. There were enough juicy details to make it clear that someone in the know had ratted Glenda out.\n\nI immediately tried to call Alex but once again couldn't get through. He didn't call me that night either, which made me a little more apprehensive, and I decided not to bug him. Maybe it was my imagination, but I felt a distance growing between us, and the courage I'd begun to feel when I was with him seemed to dissipate.\n\nOne of the things we do regularly at the newspaper is to check to see what stories our competitors are running. Of course, we at the Times don't admit that we have any competition, but we check the other news media anyway, just in case. To make it worse, on this day I was checking out the  Daily News, which people at the Times don't even admit is a legitimate newspaper.\n\nNevertheless, when I scanned the New York section my eye was caught by a story under the headline, \"Superman's Ex Gets Axe.\" Sure enough, the story recounted in breathless terms how Glenda Preston had been relieved of her responsibilities at the law firm of Denison and Lowser, and that Connor James, whom the story dubbed \"her paramour,\" had also left under a cloud. A senior partner at Denison and Lowser was quoted as saying their behavior on company time had brought disrepute on the firm's good name \u2013 as if any law firm has a good name! But I remembered how she'd acted toward me at the cocktail party and was glad that there was some justice in the world after all.\n\nThis time when I called Alex I was surprised to get through to him. When I started to tell him about the article in the Daily News, he interrupted me. \"Oh, yes,\" he said, \"I've heard every word of it, because Glenda herself called to tell me about it. She roasted me up one side and down the other, accusing me of planting the story. Even when I pointed out details that I couldn't have known, she still refused to believe I wasn't behind it.\"\n\n\"So how do you feel about it,\" I asked.\n\n\"I guess I'm still processing it all,\" he said. \"Everything has happened so fast, and I'm not sure what to make of it.\" He paused like he was trying to make a decision. Finally, he went on, \"Elle, this week has been the craziest of my life, and there are some things I need to talk about with you. Could you possibly meet me Saturday afternoon at the Central Park Zoo?\" When I agreed, we set a time and then he rang off.\n\nAs I hung up, I felt encouraged that he wanted to talk with me about his life. But in a little while my doubts began to grow, and by that evening I needed to talk them over with Terri. She understood my concerns about Alex, and she even suggested more reasons that I should be extra cautious. \"I just don't want to see you get hurt,\" she said.\n\n\"The thing I want to know,\" I told her, \"is why he wants to meet me at the Zoo? What's up with that?\"\n\nShe was on it in a flash. \"It's the kids,\" she said. \"That place is always swarming with kids, and I bet he wants to do his Superman thing with them. Maybe he's even got some media lined up to film him in action.\"\n\nMy heart sank; it all made sense now. This was going to be the unveiling of his new career in show business. I hoped it would turn out the way he wanted, but I knew that it wasn't going to turn out for me at all. I wanted to be his girlfriend, not a prop in the Alex/Superman show. \n\nI hate to admit it but I shed a few tears that night after I went to bed.\n\nThe next afternoon I almost didn't go, but Terri insisted. \"Look, at least he had the decency to want to tell you to your face. Give him the courtesy of listening to his story, even if it may not be the one you want to hear. Who knows \u2013 it might be something completely different.\"\n\nI knew she was right, so I did my best to calm my fears and headed uptown to the Park. I caught the F train to 57th and 6th, then walked around The Pond and up the East Drive till I came to the entrance of the zoo. There was a cluster of children laughing and playing near the ticket booth, and I fully expected to see Alex entertaining them. But there was no sign of his red and blue costume anywhere.\n\nI bought a ticket and wandered up to the main entrance, but still couldn't spot him, so I found a shady place to wait. As I sat there thinking about all that happened, I idly noted a man in jeans and a t-shirt walking in my direction. When he stopped directly in front of me, I was startled. \"Alex,\" I squeaked in surprise, \"is that you?\" I hadn't even recognized him. \n\nI'd planned out a whole conversation in my mind, and now that he'd shown up in \"civvies\" I couldn't think what to say. As we ambled along toward the center of the zoo, I babbled, \"I don't think I've ever seen you when you weren't wearing the Superman costume.\"\n\n\"Are you disappointed?\" he asked, and his voice had an anxious note in it that surprised me.\n\n\"No, it's not that,\" I said. \"It's just that I expected to find you playing with the kids and being your alter ego.\"\n\n\"Actually, that's what I wanted to talk with you about,\" he said, as we came up to the sea lion pool. We paused at the railing to watch the playful creatures swimming and barking for a minute, then he led me over to a bench. He stayed silent so long that I couldn't take the suspense any more. \n\n\"So what's going on, Alex?\" I asked, trying not to sound too anxious. \"Why aren't you wearing the costume?\"\n\nHe turned to look at me, and I thought I spied apprehension in his eyes again.\n\n\"You know I started wearing the suit because of Glenda. I was devastated by her leaving and humiliated that she had made me into a cuckold. I know it was a crazy thing to do, but the thing is, the suit seemed to help. I didn't feel so vulnerable when I was wearing it, and that helped me get a little self-confidence back. I started working out and stopped drinking, and that was good too.\"\n\n\"Then came all that publicity, and things started happening really fast. I got a promotion at work when I took that manuscript to my boss, then I went on Letterman, and now I've got people who want me to go to Hollywood.\"\n\nHe reached down and took my hand. \"But the best thing that happened to me out of all this was meeting you,\" he said quietly. My breath caught in my throat and my hopes started to rise, but he dashed them with his next words.\n\n\"But now I've got a problem, and I'm afraid I'm going to disappoint you.\"\n\n\"I don't understand, Alex.\"\n\n\"The thing is, I started wearing that suit to protect me from humiliation. But now that everybody knows the real story, she's the one who's been humiliated. She can't hurt me anymore, and now she has to suffer the consequences of her actions. As a result, now I don't really feel the need to wear the suit anymore.\"\n\nI was encouraged to hear what he was saying, yet I couldn't help pointing out the implications. \"But Alex, if you stop wearing the suit it means passing up those opportunities that agent was talking about. You could be giving up real fame and fortune.\"\n\n\"Maybe,\" he said, \"but that's not who I am, not who I want to be. And that's what scares me.\" He stared into my eyes. \"Are you going to be disappointed if I give all that up? Would you still be interested in me if I'm not Superman anymore?\"\n\n\"Oh, Alex!\" I cried, and flung myself into his arms, kissing him wildly and crying at the same time. When I finally calmed down, he held me at arm's length and gave me that great smile. \"I guess that means you're okay with it.\" Behind us the seals started barking and clapping, and we both had to laugh.\n\nAs we began to head back to the subway, I tried to tell him how happy I was about his decision and how impressed I was with all the changes he'd made since Glenda walked out on him. \"Wearing the suit was kinda weird,\" I admitted, \"but it was what you needed to get you to where you are today, and I'm good with that.\"\n\nWhen we got to my apartment, Terri was waiting with her hands on her hips and a stern expression on her face. But when she saw the two of us together, she relaxed and smiled. \"So I guess things went okay after all,\" she said, and came over to give me a little hug. Then she turned to Alex. \"You better treat her right, Superman, or I'll be looking for you.\" But she said it with a pleased smile, and Alex leaned over, gave her a hug and promised her he would.\n\n\"Okay,\" Terri said, \"I've got to go meet some friends, and you two look like you could use a little privacy.\" As she reached the door, she turned back to look at me. \"Don't forget,\" she said, \"the air freshener is in the cupboard.\" With that she walked out, leaving me blushing.\n\nAlex came over to put his arms around me. \"She really does care about you, doesn't she?\" he said.\n\n\"Like I said, she's been more like my guardian angel than my roommate,\" I told him. \"She can be a little pushy sometimes, but it's nice to know she's got my back.\"\n\nAs the two young people retreated to Elle's bedroom, Terri walked along the sun-splashed sidewalk until she came to a little sidewalk cafe. Spotting her two friends waiting at a table, she waved and asked the waiter for a drink as she sat down.\n\n\"Well,\" one of the women said, \"don't keep us in suspense. Did it work out like you hoped?\"\n\n\"Yes!\" Terri exulted, pumping her fist in triumph. \"I finally got Alex out of that Superman costume and the two of them together. They're back at the apartment now, and judging by the way they were looking at each other, they're going to be together for a long time!\"\n\nThe other woman shook her head in admiration. \"I have to hand it to you, Terri: you've got the touch.\"\n\nTerri lowered her eyes with obvious false modesty. \"It was nothing,\" she said. \"Of course for a while I wasn't too sure about the boy. When I first saw him wearing that costume I thought he was a crazy man, a meshugener. But Elle was obviously entranced by him, and after I learned more about him I realized he was a good man who'd been badly hurt by the bitch he'd married. Even though they were divorced, it was obvious to me that she still had an evil influence over him. I figured that if I was going to get Elle and him together I'd have to do something to break that curse.\"\n\nThe second friend leaned forward. \"So how did you do it?\"\n\n\"Well,\" Terri went on, \"I did have a little help. My sister works at the same law firm as the bitch, and she gave me the inside scoop on what was going on there. All I had to do then was call a blogger I know at Gawker and give her the juicy stuff. When the story broke, that was all it took to expose the ex-wife and give her what she deserved. Once that happened, Alex was freed from her curse, just like I figured.\"\n\n\"Perfect!\" her friend exclaimed.\n\n\"You think that's good?\" Terri went on smugly. \"Wait till you hear what else I've done for Elle.\"\n\n\"Well\" the second woman said, \"come on. What have you done now?\"\n\nTerri reached into her voluminous handbag and pulled out a sheaf of papers.\n\n\"What is it?\" the first woman asked.\n\n\"It's a book contract for Elle!\" Terri said triumphantly. \"She's never believed she was good enough, but I knew better. So I took a copy of her manuscript, pretended to be her agent and sent it off to a publisher. Sure enough, they've offered her a contract.\"\n\nShe winked at the other ladies. \"Maybe it will turn out to be my wedding present to her!\"\n\nThe second woman shook her head in admiration and raised her glass. \"I nominate Terri Feldman for Yenta of the Year!\"\n\nThe three women laughed and drained their glasses. Terri looked at her friends and smiled. \"I don't know about that, but I do know one thing,\" she said. \"If you want to get something done, it doesn't take a costume or super powers. All you need is a little chutzpah.\" "
    ],
    "authorname": "FrancisMacomber",
    "tags": [
        "affair",
        "cheating wife",
        "unfaithful wife",
        "romance",
        "true love"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/an-interview-with-superman"
}