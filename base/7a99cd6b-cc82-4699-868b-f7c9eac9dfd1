{
    "title": "Sinful Beauty Ch. 03",
    "pages": [
        "Authors note: I would once again like to thank Privates1stClass for his helpful comments and expert editing.\n\nSinful Beauty Chapter Three\n\nBy Rachel Anne Wallace\n\nMy heart was beating furiously as we slowly approached my parents' home. It didn't look any different than the last time I saw it and I wondered why I would even think it should. Now, it seemed as if I had lived there many years ago, not mere months. I was a different person now\u2014I had tasted the sweet fruits of independence and of Benson's love. I studied the house as if it would tell me how the occupants would react to my presence there again. Could it tell me how they would react to the man who sat beside me who had helped make me who I was now? We pulled into the driveway as two figures in the window disappeared from view. I was home, yet wasn't.\n\nBenson shut the car engine off and looked at me, placing his hand on my arm, \"Ready?\"\n\nI smiled as I placed my hand on his, \"As ready as I'm ever going to be. I love you.\"\n\nBenson smiled, unbuckled his seat belt, walked around to my door, and opened it for me. I stepped out and immediately sought his hand. Feeling my hand within his gave me strength, and confidence, just as it always had. Now, our holding hands affirmed to me and to any other person who saw us we were a couple. There could be no other explanation for them to make. In my mind, it was meant to show that very thing\u2014we were a couple.\n\nWe had decided on the drive home we would stop at my parents' home first, then go to his parents' home after we had talked to my Mother, and Father briefly. It would give us an opportunity to gauge my parents' demeanor. I was looking forward to seeing his parents as it would be the first time we would be received as a couple by them. Our visit with Benson's parents would allow us a short respite before returning to share a meal with my parents after Tess and Alan arrived. Of course, I hoped the presence of Tess and Alan would dissipate some of the tension I was sure would be present.\n\nWe walked to the door, and it opened as my father appeared with a smile on his face. That alone helped the butterflies in my stomach settle down. I smiled and gave a cheery, \"Hello, Dad,\" and gave him a kiss on the cheek. I watched as he extended his hand to Benson with a smile\u2014I wondered how sincere his smile really was. A minister was capable of smiling even when it seemed the occasion was nothing to celebrate based upon my past experience.\n\n\"Thank you Benson, for bringing Janet home with you. It saved us a trip. Please come in.\"\n\n\"Thank you sir, Janet is good company. It made the trip home go faster than I think it would have otherwise,\" Benson replied with seeming ease.\n\nI was very pleased with the exchange, giving Benson a quick glance, noticing he appeared comfortable. One down, one to go, I reasoned as we walked into the living room where my mother was standing. She wasn't smiling, but she wasn't giving a scowl either\u2014her expression not telling me much as I approached her to give her a hug and kiss. Afterward, she looked at me as I stepped back and appraised me, finally saying, \"You look well, Janet.\"\n\nThen she looked at Benson, \"Thank you for getting Janet home safely.\"\n\n\"It was my pleasure, Mrs. Hall,\" Benson replied with a warm smile.\n\nAll in all, our first interactions suggested they were making an effort to make us feel welcome\u2014I began to feel a little more relaxed. We proceeded to sit down, the conversation turned to how we were doing at school and what our immediate plans were for our break. We explained we would have Thanksgiving dinner with Benson's parents the next day, then head back to campus to begin preparing for classes the a few days later.\n\nIt was then I realized they might expect me to spend the night in my old room. Now, I wished I had told them we were staying at Benson's parents' house that night. I hadn't mentioned that the last time I talked with my mother on the phone. My mother gave me a glance, but didn't say anything, though it was clear she had something on her mind.\n\nIt was then my father looked out the window announcing, \"Tess and Alan are here,\" as he got up from his chair and headed for the front door.\n\nMoments later, the door opened and friendly greetings were exchanged as the group headed towards the living room. Mother stood and walked to Tess for a hug. Then to Alan\u2014she offered a firm hug and smile. Alan appeared relaxed and after a few words to my mother walked to Benson to shake his hand. Tess and I shared a hug. Tess, then went to Benson, giving him a firm hug and warm greeting.\n\nMy mother was watching. She seemed a little surprised as Alan and Benson sat down and shared a few words together laughing amiably. We talked for a few more minutes before my mother announced dinner would be ready in about an hour, a cue Tess and I should help her start to get the table set and food placed onto serving platters and bowls in preparation for eating.\n\nI looked at Benson, then to my mother, \"Mom, Benson, and I need to see his parents for a few minutes to let them know we're here. We'll be back in about half an hour, unless you need me to come back sooner to help.\"\n\nShe looked at me as if she didn't comprehend what I had said. Then she replied, somewhat cautiously, after looking at my father. \"Janet, half an hour is fine. Tess and I will visit until you return. Give our best regards to Benson's family for your father and me.\"\n\nBenson and I walked down the road to his parents' home. Benson knocked on the door, then slowly opened the door himself as he called out, \"Hey! We're here.\"\n\nMrs. Thornton was just approaching the door, wearing a huge smile that lit her entire face. She and Benson shared a warm embrace, then Benson kissed her cheek, then placed his arm around her shoulders. She looked at me with a warm smile, \"Janet you look lovely. I'm so pleased you'll be spending some time with us. I've been looking forward to it ever since Benson told us of your plans.\"\n\nI smiled in return as she stepped to me and gave me a firm hug, \"Mrs. Thornton, thank you.\"\n\nJust then Benson's father came into the room and shook hands with Benson as they exchanged a few words. Then Mr. Thornton turned to me, a sparkle in his eye, \"Janet, you look wonderful. Quite the young lady. Benson has told us you are a very serious and gifted student.\"\n\nI stepped to Mr. Thornton, giving him a quick hug, \"I think Benson is exaggerating. I'm doing great in all of my classes, but Benson puts in a lot of time too. I guess we complement one another by making sure our studies are our first priority.\"\n\n\"Well, good for both of you. Knowing both of you are excelling at your studies is great news. I'm sure your parents are thrilled too. So, when will you be coming back? After dinner and a few hours for some conversation I suppose. I'm sure your parents and Tess will want to find out a bit more about your life on campus.\"\n\nI looked at Benson and shrugged my shoulders, \"Maybe six, or seven? By the way, my parents send their best regards.\"\n\n\"Please extend our best wishes as well.\" Mr. Thornton replied amiably.\n\n\"I think that sounds reasonable. Dad, we'll call you if it's later than seven.\"\n\n\"Good. Benson your room is ready to use with fresh linens. There are, clean towels, and washcloths for both of you in the bathroom. Janet, the guest room is yours if it suits you better,\" Mrs. Thornton offered as we took a step towards the door.\n\n\"Thanks, Mom. We'll see you later,\" Benson replied as he opened the front door.\n\nI took Benson's arm as we started down the walk. The snow and packed ice on the road was just enough to make my smooth soled shoes slip; we had learned that on the walk over.\n\nBenson's parents had always been kind to me and to Tess as we grew up. I wondered what they thought of my parents after all these years. They knew how hard my parents had tried to keep Benson and me apart. I had never heard them utter a single word which would suggest they disliked them. I couldn't say that about my parents in terms of how they felt about Benson's family\u2014it had never been cruel or harsh, but the negative tone was usually evident.\n\nOnce inside my parents' home we removed our coats, hung them in the foyer closet, and walked in to join the others in the living room. After a few minutes Tess and I left with mother to start setting the table and plate the food. I glanced at Benson with a smile thinking things were going well so far.\n\nWe were in the process of setting the table when my mother asked Tess if she had moved her things into her bedroom for the night. I saw the expression on Tess's face go almost white, then she glanced at me, then back to my mother.\n\n\"Mom, I thought you knew I'm not going to stay here tonight,\" Tess replied, her expression going tight lipped.\n\n\"What do you mean you're not staying here tonight? Where else would you stay?\" Mother asked incredulously while looking at her.\n\n\"Alan and I will go back to his apartment for the night.\"\n\nMy mother shot her a cool look, but said nothing for a few seconds. Then with a sigh of resignation she said, \"I guess I should have expected this.\"\n\nI wasn't expecting Tess to reply, electing to let the issue fade away. Tess gave me another glance, then she looked at my mother. \"Mom, I'm an adult now, not a little girl. Alan was ready to spend the night alone and I told him no. We sleep together every night at his apartment. Why do you think I would do something different today?\"\n\n\"You what! Never mind. I don't want to talk about this now,\" she replied irritably.\n\nWe finished setting the table in silence. I wondered now what I should do. Tell my mother I was planning on staying at Benson's parents' house rather than in my bedroom? I knew I was putting it off, but I preferred to deal with it after we had dinner. That way, the meal would be a little more comfortable to sit through. I looked around and saw the men weren't in sight and wondered if they had adjourned to my father's den.\n\nIt was about ten minutes later when the men appeared and approached the dinner table. All of them appeared to be in good spirits. Benson was such a gentleman, helping me into my seat before he sat down in his. Once he sat down next to me I placed my hand on his knee under the table and smiled at him. He leaned to me and whispered into my ear, telling me to behave myself. I could see my mother wasn't totally amused.\n\nIt was time to say grace and my stomach tensed, what was I going to do now? I decided I would bow my head and close my eyes, then not say anything. It seemed a good compromise. To my complete surprise my father looked at all of us.\n\n\"Rather than saying a traditional grace, I would like each of us to say what we are thankful for this Thanksgiving. It seems appropriate as all of us have faced our own trials and tribulations over these past few months. I'm also sure all of us have found something to be thankful for in some way\u2014I'll start off.\"\n\nThe look on my mother's face was one of bewilderment. It was obvious she had not expected this turn of events. I couldn't blame her\u2014I was speechless at this point. I gave Tess a glance and it looked as if she was as surprised as I was. In the past we had always, without fail, been given a lengthy grace before this meal.\n\nThen my father continued, \"I'm thankful for a loving wife and two wonderful daughters who have found someone they care enough about to share a Thanksgiving meal with our family.\"\n\nIt was my turn next as we went around the table. I found myself searching for words which were truthful, yet sensitive enough to avoid offending my parents. I finally decided to keep it short, \"I'm thankful I've done well enough this first semester at college to make the Dean's list and for roommates who are supportive.\"\n\nIn a way, my father had allowed me the freedom not to mention my relationship with Benson directly. Benson's presence at my side was evidence enough of my feelings for him. I wondered if that was why he had spoken of that in his remark. If so, something had changed in the way he viewed Benson and perhaps myself.\n\nI listened as Benson told us he was thankful for the opportunity to continue his education, and for the love and affection I had shown him. I noticed the small smile on my father's face, while that of my mother remained passive, showing no discernable emotion one way of the other\u2014my mother, always the more reserved of the two.\n\nAlan's comments were similar to Benson's, adding he was pleased to be included in this Thanksgiving celebration for the first time.\n\nThen, it was Tess's turn as she looked around the table. \"I'm thankful that for the first time in my life I feel at peace with myself. I know who I am, what I believe, and who I love.\"\n\nThere was silence after she spoke. I knew she had just spoken words describing my own feelings, but had been afraid to say. Her journey had been similar to my own, though in some respects more difficult. I had had Benson to support me over all the years, while she had not enjoyed the same advantage. Only her recent relationship with Alan had provided that same kind of support, and she had clung to him as if he were a life ring thrown to a drowning victim. I was so pleased it had worked out for both of them.\n\nMy mother squirmed in her seat, her chair making a small squeak against the oak flooring. She looked at us, her face turned a little softer, not smiling exactly, perhaps showing a hint of acceptance.\n\n\"I'm not sure what to be thankful for. In the past, I would have prayed and given thanks for the fine meal the Lord had provided. Today, it seems to be much more than about food or about faith. It seems to be about accepting change. I'm thankful for a patient, loving husband. I'm thankful for daughters who love me. But I see two young men sitting next to them who have given them the strength to love in ways I could not give them myself. So, I'm thankful for their presence here today.\"\n\nThe table was incredibly silent for long seconds. Then my mother grew a small smile, \"Come, let's eat before the food gets cold. I'm sorry I was so sappy. But I'm new at this. Benson, don't just sit there, pass the turkey please.\"\n\nI was pleased as I looked at Tess as she passed the plate of dinner rolls to Alan. She looked genuinely happy. My mother noticed too and her face grew a bright smile. The tension which had been present when we first sat down faded away. Replaced with questions about the future and comments about those little things Tess and I did as little girls that would embarrass us to the benefit of Alan and Benson. There was gentle laughter and the holding of hands beneath the table\u2014well, most of the time my hand was on Benson's, otherwise, it was on his knee rubbing gently.\n\nThe meal finished, we started to clear the table, Benson helping me after I told mother she should sit and relax as she had done all of the cooking. She accepted graciously, only offering advice on a few things, rather than acting as a stern drill instructor. Tess and I traded glances, each of us aware that there had been dramatic changes in our parents\u2014changes that remained unexplained, but welcome.\n\nIt was Tess who suggested we should get the family photo albums out and look through them with Alan and Benson. We were going through an album that held older photographs including many of our grandparents and aunts and uncles. It gave us an opportunity to engage Mom and Dad and I found I learned a great deal more than I had known before about my ancestors.\n\nMom and Dad retreated to their chairs while we finished the last few pages. It was then Tess found an envelope tucked between the pages that appeared to be a wedding invitation. I was showing Benson a photograph of Mom and Dad on their wedding day when Tess nudged my arm, \"Look at this.\"\n\nShe handed me a printed wedding invitation. I read it over, not noticing anything in particular\u2014the location, date, and name of the pastor of the wedding were all there. I was about to hand it back when Tess whispered, \"Look at the wedding date.\"\n\nI looked at it and didn't notice anything unusual. I was puzzled.\n\nTess said quietly into my ear, \"Janet, mother was almost five months pregnant with me.\"\n\nI looked at the date again, remembering Tess's birthdate, as I did the subtraction in my head. I gave a little gasp. It was then I looked at their wedding pictures again\u2014all showed mother from above the waist, the single photograph of them standing together was from behind a small table filled with flowers hiding mother from the waist down. It was confirmation enough of our suspicions. Tess and I just looked at one another knowing each of us understood.\n\nIt was a minute later when my father appeared and asked if he could talk with me. Benson and Alan were now sitting in the living room talking with my mother as I placed the photo albums back onto the shelf. I wondered what had transpired while Tess and I had talked quietly about what we had found for a few minutes. I gave a quick glance to Benson as I passed him, giving me a small smile that put me at ease.\n\nMy father led me into his den where I immediately saw two of my binders sitting on his desk. I had left them in a cardboard box at the back of my closet thinking they would be out of the way and of no interest to my parents. My father closed the door quietly as I moved to sit down in one of the chairs in front of his desk. I wasn't nervous\u2014I guess curious more than anything as he picked up one of the binders.\n\nHe smiled at me, \"Janet, I was looking for something a few months ago and found these notebooks in your closet. I took a quick look at them, noticed the titles of a few of the articles, and decided I should read some of what was in them. After I did, I was impressed. Though to tell you the truth, I was very upset at first. After a few days, I looked at them again and reread several of the articles they contained. Given what you and Benson had told me when we met on campus just after the semester began, I started putting two and two together. It set me to thinking about how it was I came into the ministry and realized I had never questioned my faith as you have done.\"\n\n\"Dad, I never meant for you to see these...I...\"\n\n\"Janet, that's quite alright. I understand why you wouldn't have wanted me to see them. But now that I have, I want you to know I think I understand what you may have been going through and how Benson served as a sounding board. While growing up, I accepted whatever I was taught in Sunday school\u2014I never questioned a thing. I certainly didn't appreciate the breadth of religious beliefs held by other people until I read what was contained in these notebooks.\"\n\n\"Dad, what are you trying to tell me?\"\n\n\"Only that I understand why you changed. Why it was Benson was there for you when your mother and I were not. I know Tess has changed too, only she had Alan to talk to. I suspect she has continued to go to worship to please us rather than disappoint us with what she really believes.\"\n\n\"So, does Tess know?\"\n\n\"Not yet, but she will. Your mother is still dealing with this in her own way. So, give her some breathing room. You know we love both of you. I wanted you to know.\"\n\n\"Thanks Dad. I never expected this to happen and it's been hard because I didn't want to disappoint you and mom. I just couldn't see a way to avoid it.\"\n\n\"Honey, there wasn't a way to avoid it. Your mother and I will have to adapt in our own way. Just give us some time. Come on, I'm sure your mother is growing impatient, we should rejoin the others.\"\n\nTo say I was relieved hardly described my feelings. I knew there was another shoe to drop, but Tess and Alan had already gone before us. If my parents had dealt with their sleeping together, they would deal with Benson and me. I felt a huge weight come off my shoulders as we left his den.",
        "Once we rejoined the others in the living room I sat down next to Benson and took his hand. As I half listened to the conversation around me I wondered how my father and mother had felt hiding the fact of her pregnancy all these years. How had they become so strong in their faith? It didn't make sense to me now that I had this set of facts.\n\nIt came to me none of us really know our parents. They had a life before having children, some of it revealed, and perhaps most of it not. As children we received the sanitized version of their life as children and as a couple prior to marriage. We weren't privy to the juicy details of their courtship and introduction to sex. No more than our children would be to our own after Benson and I were married. The thought Benson and I would marry didn't seem so far-fetched to me now. Indeed, it seemed the logical destination of our journey together.\n\nIt was nearing five o'clock and my mother was looking around in the freezer section of the refrigerator. She closed the door and looked at me perplexed.\n\n\"What's the matter Mom?\" I asked.\n\n\"I was sure there was a quart of French Vanilla ice cream in here. I thought we might have ice cream and pie in a while.\"\n\n\"Mrs. Thornton, I can run to the store and pick some up if it will help.\"\n\n\"Why thank you Benson. That would be nice. I'll get you some money.\"\n\n\"No, Mom. That won't be necessary as I think I'll go too. Benson and I will treat.\"\n\nBenson and I arrived at the grocery store ten minutes later. As we pulled into the parking lot there were a few more cars than I expected. But then, it was the day before Thanksgiving\u2014people would be doing their last minute shopping. Benson parked the car and we parted ways just after getting inside as Benson wanted to pick up some shaving supplies he had run out of.\n\nI was looking over the ice cream selection when I heard a voice behind me. I knew who it was and steeled myself for her sharp, snarky, follow-up.\n\n\"Janet, how nice to see you. Home to see your folks without Benson in the way I suppose.\"\n\nI turned with a practiced smile, \"Yes. I'm just picking something up for my mother.\"\n\n\"How nice. I suppose it worked out pretty well for you. After all, with Benson out of the picture, I'm sure they're very relieved and happy to have you home. I always knew you would dump him when you got the chance to find a real man.\"\n\nI felt my stomach churn. Of all the members of my father's congregation I would have to run into it had to be her. I had always played the obedient, Christian daughter of the Reverend, and not responded to her the way I really wanted to. I looked around and saw we were alone in the aisle.\n\n\"Mary, do you know Benson and I see one another every day? We're going to the same college. How is it you didn't know that? You mean an evil witch didn't tell you this time?\"\n\nI watched her face go sour. She wasn't expecting me to react so forcefully.\n\n\"I don't believe you. Your parents wouldn't allow it. I know how much they don't like him. They never have. I'm not buying your lies.\"\n\n\"I'm not only seeing him, I'm sleeping with him. Do you know how nice it feels to have a man keep you warm all night? How it feels to have him hold your breast in his hand as you fall asleep?\"\n\nI watched her face go pale\u2014she just stood there. I enjoyed the blank expression on her face and the lack of a caustic comeback.\n\nShe slowly composed herself. \"You...you're evil. You really want me to believe you're doing that with Benson? I know you're not, at least not with Benson. Now, you're simply a slut.\"\n\nI smiled and took a step towards her, \"Oh, it's more than just a little fondling. Do you have any idea how much pleasure a man gives you when he puts his penis into your vagina? It's the greatest pleasure you can imagine, and I get to enjoy it two or three times a week at least. I'll bet the only time you're made a man pant is as he's running away from you.\"\n\nI saw her set her jaw, then her eyes narrowed, as she hissed, \"You mean, fornicating, ungodly woman. You'll suffer in hell for your lies and sin.\"\n\n\"Janet, are you ready to go?\" Benson called out as he walked up the aisle behind Mary.\n\nShe turned her head abruptly to see who it was. Then, she looked at me with a hard glare but said nothing.\n\n\"Yes,\" as I opened the freezer door and pulled out a half gallon container of French Vanilla. Then I turned to Mary with a smile, \"See you in hell. We just won't be there for the same reasons.\"\n\nBenson and I walked to the checkout counter and he looked at me as we stood waiting, \"What was that all about?\"\n\n\"Just a friend from church checking to see if I was enjoying college life. I told her I was.\"\n\nHe placed his hand on my shoulder and whispered, \"What part of college?\"\n\nI pushed my butt gently against him, \"The part that includes you.\"\n\nWe enjoyed apple pie and ice cream after we arrived back and were relaxing when mother looked at Tess and me.\n\n\"Girls, lets go into the other room and talk for a few minutes.\"\n\nI glanced at Tess wondering what was going to happen now. I wondered if Mom was going to say she didn't like Tess and Alan staying in town together. She hadn't asked me about moving my things to my room for the night either. I felt myself tense a little in anticipation of a contentious conversation.\n\nWe sat down at the dining room table and mother looked at us with a smile. At least that offered a glimmer of hope she was simply going to be upset, not angry.\n\n\"Girls, your father, and I have been doing a lot of soul-searching since Janet left for college. I know you think we haven't been listening and there's some truth to that. What you don't know is we have been discussing your father's continuing as pastor at this church. In fact, as to whether he wants to remain in the ministry altogether.\"\n\nTess and I glanced at one another. I certainly didn't know any of this was going on and wondered how my leaving for college had triggered action on their part.\n\n\"Tess, we both feel we owe you an apology for what we made you do, rather than allowing you to make a decision for yourself. I'm afraid I overreacted, more so than your father, with your pregnancy. Both of us felt disgraced you had gotten pregnant by a member of the congregation. We took it as a personal rebuke of what we had taught you. We didn't want to face the fact you'd been caught up in a Moment of passion. Something both of us should have been able to appreciate for reasons you don't know anything about. In retrospect, that decision started us down a path of self-recrimination and guilt. It affected us in ways we hadn't expected and it spilled over onto Janet.\"\n\n\"Mom, you don't need to...\"\n\n\"Yes, Tess I do. Believe me I do. I have lived a lie for far too long. It's the kind of thing you try to push away and find you can't. It gnaws at you, it makes you question your motivations, and why you made the decisions you've made. I didn't want you to have to suffer the same fate by marrying someone who you would question someday actually loved you. I know it doesn't make complete sense to you and hope it never does.\"\n\nI glanced at Tess wondering if she had caught mother's Freudian slip. Her gaze told me she had. I guessed that was why she didn't want Tess to marry the father after she became pregnant. I felt sad for my mother realizing she had carried her burden all these years. That what we viewed as one thing, was actually something else entirely\u2014she had been trying to protect us.\n\n\"Mom, you know Janet and I love you. We understand you wanted us to be good Christian women.\"\n\nMy mother reached over, placing her hand on Tess's hand. \"I know honey. I know both of you do. But I was asking you to be something I myself hadn't been. I was using you to show others I was a good Christian woman\u2014when it became evident you weren't, I panicked. In fact, both of us did\u2014your father and myself. It was wrong and we've had to live with that reality ever since. We only made the situation worse afterward with other decisions we made.\"\n\nMother shifted her gaze to me. \"Janet, we pushed even harder on you. As if we hadn't already been hard enough on you. It was easy for us to blame Benson for behaviors we thought reflected on us as Christians. He was an easy target and we used him in an attempt to convince you and ourselves we were right\u2014that Benson represented what was wrong in the world--he and his family.\n\nI watched as she wiped a tear away.\n\n\"But you kept finding ways to maintain your friendship with Benson despite our best efforts. I could see he made you happy and despite that I worked even harder to drive him away from you. Now, I'm glad you had the perseverance and fortitude to follow your instincts and keep him in your life. I see how both of you have grown since you have been beyond our control at college. We couldn't ignore the fact both of you conspired secretly to remain together. We had to acknowledge it meant something incredibly important to both of you.\"\n\nMy mother paused while looking at me. I felt my eyes start to water as I realized she was apologizing for all they had done to keep to keep us apart. I knew this couldn't be easy for her, in fact, for either one of them. I wondered again what the conversation had been between my father, Alan and Benson.\n\nThen she continued. \"Janet, your father and I knew after the incident with Jake and Tim we were trusting Christian men to do what Benson could do better. We began to understand Benson would never intentionally harm you in any way. After all of the time the two of you spent alone together we should have known better. We should have trusted you as much as you trusted Benson. We thought your beauty was something that made you vulnerable to sin. You and Tess are beautiful women, but we attached greater risk to you because of Benson.\"\n\n\"Mom, you know Benson and I never lied to you or Dad. We never wanted to betray you, but we couldn't remain apart from one another. We just couldn't.\"\n\nMother looked at me and laughed lightly. \"Honey, you have proven that time and time again. It just took us a long time to realize the two you would never let us do that.\"\n\n\"Mom, you mean...\"\n\n\"Honey. Benson, and you have worn us down. We accept it and will support you as best we can. But, we have also made a decision that affects you and your ability to attend school in the future. Your father is thinking about leaving the ministry and starting another career. That means money may be tight, and we may not be able to pay for your final year of college. I'm sorry that's the case. But we promise to do the best we can to help you.\"\n\n\"That's okay Mom. I don't think it will derail anything. I should have enough money saved to finish even if you can't pay for anything. I'll be tight, but Benson and I have reviewed our resources and think we have enough.\"\n\nI saw the surprised expression on her face.\n\nThen Tess spoke up. \"Mom, you didn't really think Benson and Janet hadn't thought about the possibility the money wouldn't be there did you? They think of everything.\"\n\n\"What do you mean it may not make a difference? I don't understand. How could you possibly have enough to finish without our help?\" Mother responded in disbelief.\n\n\"Promise you won't get mad.\"\n\n\"Janet, I'm past that.\"\n\n\"I've saved more money than you're aware of. When Benson and I reviewed our finances we found if I moved in with him it would be cheaper than my living and eating in the dorm. In fact, to save money we already eat together on weekends. That will give us more than enough money to pay for everything ourselves if we work over the summers as we have always done.\"\n\nI watched as my mother grew an honest to goodness smile and reached over to cover my hand with her own. \"I should have known. You and Benson. You take care of one another, you always have, and I suspect always will.\"\n\n\"So, you're alright with that?\"\n\n\"Would it make a difference if I weren't?\"\n\n\"No. I guess it wouldn't,\" I said quietly.\n\n\"Okay, so Tess and Alan are going into town for the night. What are you and Benson planning to do? We haven't talked about it, but I expect the two of you two have.\"\n\nI could hardly believe what I was hearing. I glanced at Tess and she gave me a slight nod of her head.\n\n-\n\n\"I was going to stay with Benson at his parents' house tonight.\"\n\n\"Okay, but I want you to know both of you are welcome to stay here tonight and have breakfast with us in the morning. Tess, that goes for you and Alan too. Both bedrooms are open and clean.\"\n\n\"Mom, if both bedrooms are available and Alan and Tess stay here it means Benson and I would be in the same room.\"\n\nI didn't want to say the same bed. But, it was obvious that was what it meant.\n\n\"Is it different than if you were to stay at Benson's parents' house tonight?\"\n\nI swallowed hard before answering, \"No.\"\n\n\"I thought not. Your Father and I have to accept both of you are adults who don't necessarily share the same beliefs we do. Tess has already said she and Alan are sleeping together. So, if you and Benson are doing the same I don't think we should treat you differently. The decision is yours. It would be easier to have you stay here to help me make breakfast in the morning. But you and Benson do what you are most comfortable with.\"\n\nI looked at my mother wondering who swapped out my real parents for these impostors. I knew it was the wrong thing to think. Our parents had engaged in some very difficult discussions to get to this point. It was unfair not to appreciate the love for Tess and me it represented. There were real world ramifications for them if my father were to leave ministry. What would he do? What would they do? How would the community view them? This was no small change.\n\nTess and I took the hint as mother rose from the table. We walked back into the living room where the men were sitting watching a football game together. Sitting down next to Benson, I felt him take my hand in his. Feeling a sense of victory, I squeezed his hand gently, knowing that for the first time we were sharing affection openly in front of my parents. All of the mental anguish of the past erased in a matter of hours\u2014replaced with hope of a future together. My parents had accepted Benson\u2014it was as if they had performed a miracle on my behalf.\n\nBut, I also wondered what had transpired between Alan, Benson, and my father while in his den? I knew Benson wouldn't have taken my hand if he thought it would aggravate my father. I was dying to find out what had happened. I was surprised enough already with my conversations with my parents, what could my father have possibly told our boyfriends that would top this?\n\nIt was quarter of seven on the living room clock when Benson gave me a nudge, \"We should get going soon if we're going to spend the night at my parents. Either that, or I call them and let them know our plans have changed.\"\n\nI looked at my parents, \"I think we should spend some time with Benson's family tonight. We already have our bags in the car so it's easier if we stay the night when we drive over. Mom, I'll come over to help with breakfast at whatever time you want me to. We'll have breakfast with Benson's parents day after tomorrow before we leave to go back to campus. That way, we spend about the same amount of time with all of you. Is that okay?\"\n\nI saw my father nod in the affirmative and my mother replied it sounded reasonable, adding, \"Janet, we'll eat at about eight, so if you can you be here at say, seven thirty, that would be fine That should be enough time to get eggs, bacon, and toast ready with at least two of us cooking.\"\n\nTess spoke up with a laugh, \"Mom, you're asking a college student to get up by at least seven o'clock! That's something I want to see. I'll be here ahead of time just to witness it.\"\n\nI shot a glance at Tess. \"Tess, do you want to go out to watch birds with Benson and me sometime? We get up earlier than that on a regular basis. Just goes to show what you know,\" I teased back.\n\n\"Yeah, so you say, but I've never seen it.\"\n\n\"Okay, girls. I guess we'll see what happens in the morning. Benson, will you come over with Janet?\"\n\n\"I may as well or I won't hear the end of it. Then again, I want to see Tess that early in the morning. From what I've been told it's kind of like the pot calling the kettle black to see her up so early.\"\n\nTess made a face at him. I kidded her, \"That was really mature.\"\n\n\"Okay, you two, enough. We'll see everyone in the morning, mother chided with a smile.\n\n\"Mrs. Hall, I want you to know that was the best tasting apple pie I've ever had. I enjoyed the meal. Thank you.\"\n\n\"Why thank you Benson, that's very kind of you to say.\"\n\nMy mother's face was beaming as we retrieved our coats from the closet and wished everyone a good night. Once we were outside I took Benson's arm, \"That was a very nice compliment you gave my mother. Did you see her face?\"\n\n\"It was good pie and I wanted her to know it.\"\n\nBenson had never been one to give an empty compliment, even to me. I guess maybe it was why when you got one from him it made you feel so good. You knew it was genuine. We started towards his parents' house walking slowly.\n\n\"Benson, what did my father say to you and Alan while we started getting the food around?\"\n\n\"He told Alan and me he approves of our dating Tess and you. Then he said he was thinking of leaving the ministry and finding a job where he could use his experience to help guide people who are having personal problems in dealing with their religious beliefs and other problems. It sounds as if he has been...well...I'm not sure troubled is the right word\u2014perhaps reflective, after talking with us on campus. At least, that's the impression I got. I didn't want to get into much detail with Alan there, but he was looking at me when he said it.\"\n\nWe had arrived on the porch, knocked, and walked inside to find his parents sitting in the living room. We removed our coats and joined them. While engaged in conversation I couldn't help but feel elated after a while. As different as our families were growing up, I felt comfortable here remembering those few occasions when I had been inside to see Benson as we grew up. Of course, those visits were brief as my parents would not have been pleased with my behavior. It was almost eight-thirty when we elected to retreat upstairs to get our things around and prepare for bed.\n\nAs I walked up the stairs with Benson behind me I felt as if I were in a dream. Up until this morning I had never been upstairs in the Thornton residence. Now, I stood in the bathroom removing my makeup ready to take a shower. Benson was in the bedroom waiting for me as he had taken his shower earlier. He had walked back into the bedroom in only his briefs, his body on full display\u2014I was in my bra and panties when he walked in, and it occurred to me how far we had come together.\n\nFrom the first time I had stood this way in front of him at his apartment I felt somehow not as beautiful as I wanted to be for him. Benson had never fawned upon my physical beauty as other men had. Our relationship had always been more about what we shared together and how we felt. Now, it seemed as important to look good for him as our physical relationship seemed to enhance our attachment to each other. He had whispered to me the first time I stood naked in front of him how beautiful I looked and I had felt myself flush at his words.\n\nI removed my shower cap, dried off, and donned the oversized tee-shirt Benson had given me as a gift and a pair of cotton panties. Benson was sitting up in bed reading a magazine when I crawled up onto the bed with him. I reached over, took the magazine from his hand, placed it on the nightstand as I straddled his legs, and settled onto his lap facing him.\n\n\"I think maybe I could use some of your attention,\" I said softly, looking into his eyes.",
        "\"You have my attention, all of it,\" he smiled.\n\n\"I'm in your bed. Does that tell you something?\" I whispered seductively.\n\n\"Yes. It tells me I should have locked the door so no one can see what I'm going to do to you.\"\n\nI looked at him with a sexy smile, my anticipation exploding with possibilities as I pulled the bottom of the tee-shirt up to reveal my breasts. \"It wouldn't happen to involve these would it?\"\n\nHe smiled broadly and nodded his head.\n\nDuring my shower it occurred to me how much I had changed over the past few months. I was now a sexually active woman who found...that...well...I really liked it. Then I got excited thinking how strange it would be to have sex in Benson's bed. A place that up until a few minutes ago, I would never in my wildest dreams have thought about in this way. As the warm water ran over my body the thought generated a warm glow that continued to grow as I saw Benson laboring over me. Then, the allure of doing something sinful and naughtily attractive continued to grow until by the time I left the shower it had grown into a warm, tight feeling I couldn't ignore.\n\nNow, with just the hint of his erection inches away I was so ready\u2014then his lips kissed first my chest and neck, then one breast, then the other. I waited for his pursed lips to tug at my now erect nipples. My patience fully rewarded after a few minutes as his hands caressed me as I closed my eyes briefly.\n\nThe first tentative, wet touch of his tongue on my nipple sent a hot flash downward\u2014my vagina went hot with aching need. I closed my eyes as his tongue worked its magic as his hands brought my breast gently to his mouth as I arched my back to raise them upward. I heard myself give a soft, hardly audible moan, then I said breathlessly, \"I'm ready.\" Just then, my body gave a huge shiver of excitement, of desperate need.\n\n\"Janet, are you cold?\"\n\n\"No, honey, I just need you so badly. I really do.\"\n\nI moved off his lap after pulling my tee-shirt off over my head, and lay down on the bed next to him on the towel he had spread. I watched as he came to his knees and reached for the top of my panties. I lifted my pelvis up and felt them slide down to just above my knees, then settled onto my back and lifted my legs, feeling the panties as they slipped away. It wasn't as awkward as it had been the first few times we had accomplished the maneuver. Even placing a towel beneath me was automatic now. I thought to myself how quickly we had learned together. I reached for him as he loomed over me between my spread legs\u2014a position I would have found completely abhorrent at one time if I had thought about it.\n\nHow is it we could have gotten so good at this so quickly? I smiled to myself\u2014it had been as natural as anything else we had ever done together. I grasped hungrily for his condom clad cock, spreading my labia wide with the other hand while watching his face. I placed him at my opening, looking at him again, knowing I was smiling. I couldn't help but smile now\u2014I knew what pleasure awaited me with his entrance. I was not disappointed with his firm thrusting as he filled me with firm, round, warmth, then lay down on me gently. I accommodated myself to his weight, enjoying the feel of his bare skin against my own, my hands caressing his back and shoulders.\n\nThe minutes passed, each bringing with it exquisite pleasure as we sought each other inside and out. Sex was the greatest physical pleasure I had ever experienced and over these past few months my satisfaction had continued to grow. This act of sharing, like so many other things we had done together, had only gotten better with time. I smiled, I had gotten better with time, fully relaxed in his embrace, his arms beneath my shoulders as he rocked me gently with this thrusting. The bed made small, intimate noises I was sure it had never murmured before.\n\nI felt the pleasure build, my eyes closed tightly as he moved over me. I moved my body in concert with his, whispering to him what I needed. Then, the warm trickle of pleasure grew to a hot, strong flow that soon grew into a hot torrent that washed over me as I clutched at him in my passion. I felt him inside me as he finished close behind, having to move hard and rapidly within my soupy, wet, vagina to gain satisfaction of his own. Then, the two of us lay together breathing heavily until I felt him start to rise, leaving me thankful we had found love as he left me\u2014his cock glistening wet in the dim light of the room. Then, I went into his arms and closed my eyes as I ran my fingers through his chest hair as his chest rose and fell slowly in a rhythm that spoke of our intimacy.\n\nThen his voice, deep, soft, \"Are you alright? I hope you enjoyed it.\"\n\n\"I'm fine. You know I did.\" Then, I got up on my elbow and looked into his eyes, \"You won't ever tell anyone we did it in your bed will you?\"\n\n\"Janet Hall, you aren't feeling guilty are you?\"\n\n\"No, not exactly. I mean...well...the idea of our doing it in your bed...was...\"\n\n\"Was what?\" His grin growing wide.\n\n\"Maybe a little kinky in a way. I mean it appealed to me because it was in a place our parents wouldn't expect us to do it. At least my parents wouldn't. It was kind of a special thrill, naughty in a way. I guess you could say it was sinfully delicious.\"\n\nBenson, chuckled and pulled me close, \"Come on, it's time to go to sleep. I love you my sinful beauty.\"\n\nThe next morning I was up at ten to seven and went directly into the bathroom and washed up again, then walked into the bedroom to find Benson waiting to use the bathroom. I was dressed by the time he came back out and I watched as he dressed. We made the bed up together, then went downstairs where it was quiet\u2014no one else was up. We slipped out the door, walked down the street, the cold air completing the job of waking me before we got to the door and knocked. Tess and Alan were nowhere to be seen\u2014so much for Tess getting there ahead of me!\n\nMother was standing in the kitchen pulling eggs, milk, bacon, and sliced ham from the refrigerator. My mother was surprised when Benson offered to help prepare the meal. After getting over her initial shock, she set him to work frying the bacon and sliced ham. She looked at me with a smile, then whispered, \"I wish I could get your Dad to try his hand at helping with something like this.\"\n\nIt was about twenty minutes later when Tess and Alan walked in. Tess looked at me and shrugged her shoulders as if to say\u2014okay, I give up. I just smiled broadly as I handed her a plate and watched as she dished out a heaping helping of ham, scrambled eggs, and whole wheat toast. My Dad walked in just as the rest of us sat down and we all joined in pleasant conversation. I couldn't help but feel we were a family this morning for the first time\u2014a family that now included Alan and Benson.\n\nLater Benson and I walked into Dad's den after Dad asked us to talk with him before we left. We had decided we would spend our remaining time with Benson's family, stopping only briefly tomorrow morning before driving back to campus to say goodbye until we returned at winter break. We took a seat as he motioned for us to sit.\n\n\"I'm sure you both wonder why your mother and I have had such a change of heart regarding both of you. The short explanation is that it took a lot of soul searching and introspection before we understood we had been wrong. Benson, your words about the two basic facts of life left me without an answer. At first, I was upset with the idea that your words contravened the Bible and all that it represented in my life. But after a week, I began to understand you hadn't actually done that. However, I couldn't escape the fact religious faith isn't bound or always supported by facts. It requires you to accept some things on faith alone. There are no parallels in our everyday life\u2014virgin birth, the resurrection, and in the notions of heaven and hell. I had never thought of it in that way.\"\n\nBenson and I nodded our understanding. Dad continued, a serious expression conveying his earnestness.\n\n\"It was after I found your binders that I started reading them. Slowly, I realized I knew little about faith as practiced by other religions around the world, or even about Catholics or Methodists, in our own community. I knew only my own brand of Baptist theology. Then, I started thinking about all of the conversations I've had over the years with other pastors and how each of us had our own interpretations of some parts of Scripture. It was then I realized it amounted to our own opinions\u2014it was what we chose to believe or not to believe. We all read the same words and came away with something a little different. Benson, that's when your words came back to me.\"\n\n\"Reverend Hall, I didn't mean to attack your faith, only to explain how I came to my own.\"\n\nI watched as a smile crossed my father's face. \"I realized that later. No more than Janet had tried to cause me embarrassment. I had overreacted. My parents were strict Baptists\u2014that was all I ever knew growing up. We kept mostly to ourselves, socializing with members of our own church, and later, other pastors once I entered ministry. I paid little attention to anyone of another faith, except perhaps, to castigate those who didn't believe in God at all.\"\n\nHe looked at both of us, his face earnest.\n\n\"I was already starting to question how I had come into the ministry before both of you started community college. Our conversation on campus only hastened the process I had begun on my own. I'm telling you this so you don't blame yourselves for the decisions I'm making this late in my life. They have been difficult, but life doesn't always unfold the way you think it should.\"\n\n\"Frankly, seeing the behavior of members of the congregation and comparing it my own brought home to me I was no longer fit to preach the Word. I couldn't trust the men of my congregation to treat my own daughters with respect. But, it was also the gossip of the women that caused me pain. It was as if they didn't think it would get back to me. It usually did by way of your mother from one of her friends. I guess you could say that was the final straw.\"\n\nMy father laid out his reasons, and when finished he told us he was proud of us for being honest with him to the extent we could. He told us at first he was often upset with us for continuing to see one another against his wishes. Then he realized over time we were as honest with one another as we were with him. When we left the house that morning to return to Benson's parents' house it was clear my parents would support us in the future. We couldn't ever have asked for more.\n\nEpilogue\n\nI moved in with Benson starting the winter semester of our junior year. Both of us maintained a high grade point average and pushed each other to excel in our studies. We worked the next summer, returning to our jobs of the previous year and lived at Benson's parents' home after announcing our engagement at the end of our junior year of college.\n\nWe completed our senior year and married soon after graduation. I found a full time position with a private consulting firm working in historical preservation while Benson applied for graduate school. Benson worked as a seasonal employee for the state wildlife agency during the summer months and after he completed his Master's program he had made enough contacts to take advantage of new job opening. He applied for a position three months after graduation and took a full-time position as a biologist in their newly created non-game wildlife program.\n\nMy father and mother were not able to provide money for my education due to their own needs, but their support for us as a couple never wavered. Dad found a position as a grievance and family counselor for the regional health center and was pleased with his second career. Their participation church activities slowed and after a few years they decided they were spiritual, leaving organized religion behind.\n\nTess and Alan made us an aunt and uncle two times, both girls, over the next few years providing us with ample opportunity to appreciate the joys and tribulations of parenthood. It was after four years of marriage our first child was born, a girl, to join her two cousins. Our son came two years later and became not only the baby of the family, but the object of a great deal of attention from both sets of grandparents and his older cousins\u2014not that his older sister ignored him by any means.\n\nBenson and I continued to watch birds together and as our children grew they came to recognize their parents were a little different from most others. Our devotion to each other carried us through some rough times when dealing with conflicting career choices over the years. Promotions that would have required us to move our family farther away geographically were ultimately rejected after due consideration. We favored remaining close to our parents and family members thinking our patience would present other job opportunities in the future, which it did.\n\nOne thing remained constant\u2014the choices we made ensured we were always a couple united in love\u2014a sinfully beautiful love.\n\n \n"
    ],
    "authorname": "rawallace",
    "tags": [
        "boyfriend",
        "college",
        "love",
        "religion",
        "sex"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/sinful-beauty-ch-03"
}