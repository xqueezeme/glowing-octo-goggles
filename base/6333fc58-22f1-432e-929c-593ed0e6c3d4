{
    "title": "Adriana and the Buttapboo",
    "pages": [
        "It's been some time since I submitted a Mind Control story. I hope this one meets with your approval.\n\nI extend an apology to all admirers of Cyrus the Great and the Persian Empire.\n\nThe buttapboo is solely a creature of my imagination. \n\nI want to thank everyone who voted for Ricardo and Juliana, my submission to the 2018 National Nude Day contest, and congratulate the winners, DragonCobolt, SolarRay, and xelliebabex. \n\nAs always, all story characters engaged in sexual activity are eighteen years of age or older. \n\n* * * * *\n\nAs the discussion turned to the raids by the Slavic nomads on his vast empire Cyrus the Great looked to his Queen. She'd once ruled the small mountain kingdom bordering the Slavs, her knowledge of them far exceeded his own. Cyrus was pleased to see his advisors' rapt attention as they recorded her thoughts and prepared to follow her instructions, pleased they no longer looked to him to nod his approval, that they accepted her words as they did his, as royal commands. Finished, the monarchs dismissed their retinue and stepped onto the palace's garden.\n\nHer kingdom had caused him no offense and its conquest, as he knew it would, had been difficult, costly, and long. It had strategic value, its fortresses provided protection against the nomads, but she'd ruled her land ably; she hadn't needed his help to drive off the invaders. He knew of the whispers that he'd targeted her country not for its strategic value, but because of the portraits he'd seen of her, for she was a legendary beauty, and her poetry, the odes she wrote of her native land, that through them he'd fallen in love with her. \n\nWhen he led the final assault on the final fortress he had seen her in armor leading her soldiers in fierce defiance. Later, when they brought her to him, he ordered her chains removed, but it made no difference. In her eyes burned hatred and when she spoke she spat out the words with the same indomitable ferocity that she'd defended her homeland, her loathing for him, for Persia, for the fall of her beautiful country marking every syllable.\n\nIn the garden she signaled a servant, who brought her lute, and with adoration in her eyes said, \"My master, my love, my king. I have written a new song, about us. Would you like to hear it?\"\n\n\"Yes my darling.\"\n\nShe sang it to him in her clear soprano voice and he thought it her most beautiful yet. He knew long after his empire had fallen that her love songs and love poems would memorialize his name. In this he was right, for her songs are sung and poetry read to this day.\n\nWhen she was done they adjourned to their bed and made love deep into the night.\n\nAnd the next morning, as they breakfasted in the garden, he looked at her, saw the love and devotion burning in her eyes, and knew the high priest had been right, the plants were magic.\n\n* * * * *\n\nMy status as the most promising freshman in Humboldt State University's Biological Sciences Department was confirmed at the end of the year when I was offered the internship in Dr. Hainkel's lab. To an outsider it looked like grunt work. Heck, it was grunt work, monitoring others' experiments, compiling data, janitorial duties when needed, but it was grunt work with the best minds and best equipment in the world.\n\nThen one day Dr. Hainkel called me into his office, offered me a chair and a bottle of water -- something was up -- and said, \"I have an unusual assignment for you. Dr. Boatner has a PhD student working on her dissertation. She needs help identifying a plant.\"\n\nI can't say the prospect enthused me, but when Dr. Boatner, the formidable Dean of the Woman's Studies Department and President of the Faculty Senate, asked a favor, it wasn't a favor. You did it.\n\n\"What's the dissertation about?\"\n\nHe read me the title. It contained the words \"reconstructing,\" \"problematizing pedagogies,\" \"commodification,\" and \"privileging,\" some more than once. \n\nI said, \"What does that mean?\"\n\n\"I have no idea, you'll need to ask her. Her name is Naomi, she'll meet you in the student lounge at the Union in twenty minutes, she said she'd recognize you.\"\n\n* * * * *\n\nShe waved me over, said something to the two women sitting with her, introduced me to them, kissed one on the mouth -- more than a casual acquaintance -- and as they left asked me to sit down .\n\nShe was pretty in an understated way, rail thin, pale skin and round face, no make-up, hair short, black, and spiky.\n\nI introduced myself, said I was there to help, asked what her dissertation was about. \n\nShe talked for about fifteen minutes. I heard the words \"androcentric,\" benevolent sexism,\" \"kyriarchy,\" \"privilege,\" \"complementarianism,\" \"objectification,\" \"hegemony,\" \"internalized misogyny,\" \"intersectionality,\" \"patriarchy,\" and \"toxic masculinity,\" again some more than once. \n\nI was lost and when she was done I said, \"I'm sorry, I'm trying to be a botanist, I've been preoccupied learning our jargon. Can you throw me a bone here.\"\n\nShe laughed. We were going to get along just fine.\n\nIt turns out alchemists weren't just trying to manufacture gold. A few tried to identify and work with a plant mentioned in ancient Egyptian, Persian, and Greek texts whose aroma was said to be a love potion. While leaving their skills and personalities intact, it caused women to fall madly in love with whomever they were with when exposed to the plant. It was, according to the texts, used primarily by priests to initiate the ecstatic female acolytes who, serving in the temples of the pagan gods, produced some of the most impressive art, religious and secular, of their time.\n\nShe said, \"I need your help identifying the plant. I need to know if it, if not it's purported effect, was a myth,\" then handed me a flash drive. \"This contains a summary of what I know about it, plus the back-up material for which translations are available. Interested?\"\n\nI said, and meant, \"Yeah, sounds fascinating.\"\n\n* * * * *\n\nShe was smart, hard-working, and meticulous, her summary clear and thorough, the material well-organized. I regretted making fun of her and her jargon. Well, some.\n\nThe sources made it clear the Persians and Greeks imported the plant from Egypt, but where did the Egyptians get it? Did they grow it? Did they import it? I spent several frustrating days mining and re-mining the data, looking for a clue, but the Egyptian sources were completely mum on both questions, which led me to suspect it wasn't native to Egypt. If you grew it you would, as part of your marketing, brag about your skill, but the Egyptians never did. However, if you imported it you'd keep its origin a secret. You wouldn't want someone contacting your supplier and cutting out the middle-man. \n\nHaving made little progress I turned to the care and feeding of the plant, and quickly realized I should have started there. I was struck by the continuous trading in the plant. It was a plant, you should only need a few, after which you grow your own, which meant that the climates to which it was exported weren't conducive to its propagation. The material Naomi provided showed that the plant did best when grown in a specific dense rich soil, baskets of which were exported with it, in the shade, and with lots of water and sustained humidity, all of which pointed to it being tropical in origin. Thus, the likelihood was that it came from the headwaters of the Nile. If that was right I'd reduced the potential numbers of species from 375,000 to a few thousand.\n\nI had found several crude drawings of the plant's leaf. Not much to go on unless you have access to a computer loaded with comprehensive data base of plant information and the world's most advanced leaf matching software, which I did.\n\nWhen I was done I was 95% sure I had it. The buttapboo, which consisted of six sub-species, all of which were endangered due to habitat destruction, grew only on Lake Victoria's western shore. Then I found a detailed description of an insect that ate the plant's leaves, the chronicler having not previously seen anything like it. I cross-referenced the information with my candidate and bingo, I found a match, an insect, also endangered, that lived on the shores of Lake Victoria and ate only the buttapboo. It must have hitched a ride in the baskets of soil.\n\n* * * * *\n\nNaomi and I met in the student union -- every second women who walked by knew her -- where, computer open, I gave her a zip drive and reviewed my results. She paid close attention, asked probing questions, and when I was done, with genuine pleasure in her voice, said, \"You've done an amazing job, thank you.\"\n\n\"You're welcome. The way you laid out your material made it a lot easier. I tried to organize mine the same way. I included a step-by-step description of how I went about my research, including the steps that got me nowhere. Dr. Hainkel said methodology is important, you might need it in defending your thesis. If you have any questions call or text.\"\n\n\"Thanks, I will.\"\n\n\"Now if you don't mind, I have a few questions.\"\n\n\"Fire away.\"\n\n\"Well, and I put this on the zip drive, I couldn't find any evidence that buttapboo has psychoactive properties and the peoples native to the region make no use of it. If a plant has any medicinal benefit, or any use at all, pre-industrial locals almost always figure it out. It also has practically no smell. It seems like the last thing anyone would think had a magical aroma.\"\n\nShe said, \"That's interesting, and actually supports my thesis. Think about it, a bunch of patriarchal alchemists, based on a bunch of ancient texts, believed, or at least wanted to believe, that if you mix this plant with a batch of ingredients you could reduce a powerful intelligent women to a love struck girl. So the alchemists spent years trying to recreate the formula and mixing it with the plant. They ground it into perfume, used it as snuff, burned it as incense, fermented it, packed it in amulets, got nowhere, and still kept trying. If you're interested I'm happy to share my research on the subject, but the point isn't whether it worked, of course it didn't, the point is the effort men made to find it.\"\n\nI was curious. The next day at the union she gave me a zip drive.\n\n* * * * *\n\nI made a pot of coffee and opened the zip drive. By the time the sun rose -- I stayed up all night -- it was clear why the alchemists hadn't gotten it, although they should be forgiven for their oversight. The ancient texts contained varying lists of materials to be added to the buttapboo, but unless you understood the underlying chemistry of the differing ingredients, and you wouldn't have in the middle ages, you'd never have gotten it. You didn't mix this stuff with the mature plant, you used it to grow and then sustain the mature plant. It was fricking fertilizer.\n\n* * * * *\n\nTwo days later Dr. Hainkel called me into his office.\n\n\"Eric, Dr. Boatner called, she was prolix in her praise, said Naomi was very happy, that you went beyond the call of duty. I've got to agree with her, even I had to look up the buttapboo, I'd never hear of it. She even said you treated Naomi with respect, didn't make her usual comment about piggy males. She thanked you, and so do I. We've earned some serious brownie points.\"\n\n\"Glad I could help sir. The work turned out to be fascinating. There is something else I'd like to talk to you about. We've discussed me taking on a specific project. I'm thinking about a laboratory study of the buttapboo. There is almost no literature on it, it's endangered, and there are only six subspecies. It would be relatively easy to do a thorough investigation.\n\nI didn't need to say, for Dr. Hainkel would already be there, that working on an endangered species would be a coup for the department and the cost of acquiring representative samples of the buttapboo, which grew in the wild near several research stations, would be close to zero.\n\n\"Eric, why don't you do a proposal.\"\n\nSliding my open computer across his desk I said, \"I already have sir.\"\n\n* * * * *\n\nI was a senior, it was my final semester at Humboldt State, and wearing the uniform of a local nursery I'd borrowed from a friend I rolled a dolly with a large potted plant into the university's business school and asked for Adriana Guttierez's office. I was not concerned about being recognized. I'd pulled my cap tight over my face and, as you can imagine, the botany and business schools didn't mix. The secretary, trying to work amidst the omnipresent chaos on this day, half-paying attention, pressed a few buttons on her computer, determined where this visiting faculty member was to be housed, and provided the room number.\n\nIf someone had interviewed her that day she might have been able to provide a vague description of the delivery boy. If someone had interviewed her the following day, at best she could have recalled his height, race, and color of his uniform. By the following week she'd not remember the delivery.\n\nNot that I was overly worried about Adriana Guttierez questioning the plant's appearance. In a feature article in a recent San Francisco architectural magazine she'd talked about the health benefits of plants and the accompanying photographs of her law firm's office showed it was liberally decorated with greenery. She'd treat the buttapboo as a stroke of good fortune, not something to be investigated. Leaving the buttapboo under the window, I placed a note on her desk purportedly from the office's prior occupant, indicating he'd taken a position in Tokyo (which he had), that he hoped the office's next tenant liked plants, and providing cursory instructions for the buttapboo's care.\n\nAs a tropical plant the buttapboo matured quickly and over the last three years I'd raised thousands of them, some in the lab, most in the greenhouse I erected on the property I rented twenty miles from town. Their fecundity allowed me to study their properties in both their normal and enhanced conditions. The former had led to a series of published papers that, although my name was affixed last to the string of authors, had made me a department star. As to the enhanced buttapboo, a mature plant grown with a steady diet of the fertilizer would give off an odor for about fifteen minutes after additional fertilizer was added. A person exposed to low concentrations couldn't help but like whoever was around them when it happened, which explained why I was the first intern Serena Wilson, the battleaxe who'd been the department's administrator for decades, treated well. Higher concentrations? I'd slept with my fair share of my fellow students, but not so many as to draw attention, and far more than my fair share of the faculty, but they were diligent about keeping the secret.\n\nAnd, analyzing the data, I was confident I knew how to take the next step, absolute devotion. It would take weekly exposure over several months and there was no doubt as to the identity of the ideal test subject. Adriana Guttierez had been teaching a seminar at the school since my sophomore year. Her looks, and smarts, were favored topics of male students over a Friday night beer. In theory getting into her class would be difficult, hundreds of students applied for the ten spots, but Dr. Boatner had made a phone call.\n\n* * * * *\n\nAdriana Guttierez flew low over the coastal properties she was negotiating to buy, admiring, as she always did, their pristine beauty, then turned her airplane north towards Humboldt State. The parcels of contiguous property had separate owners and she'd employed several brokers, each saying it represented a different potential buyer. The owners were now bidding against each other, the price steadily drifting down, and while the figures had become acceptable, she knew she could get them lower. Inwardly smiling at herself, she could afford it, she was rich after all, but still, she'd grown up fatherless and dirt poor, it was best to be careful.\n\nKnowing the academic credential would impress the Silicone Valley egg-heads for whose business she was constantly competing with larger older law firms, she led a seminar on Intellectual Property Law at Humboldt State each spring semester. Several local universities had offered her the same opportunity, but she loved the land north of San Francisco and loved to fly; now she had a tax deductible reason to do both. It did cut into her billable hours, but there were only thirteen classes a year and her four associates, like her beautiful, smart, articulate, and tireless, were working late.\n\nShe made it a point to hire women like herself, wanting to spare them what she'd been through. Her first job had been at a prestigious old-line firm, which it turned out was far more interested in the fact she'd been the first Hispanic named Miss California than that she was the first Hispanic to graduate first in her class at Stanford Law School. She quickly decided she'd learn what she could, then leave and set up her own shop, but it happened faster than imagined. During her third year one of her firm's major clients had watched his lawyer -- gray hair, booming voice, $3,000.00 suit -- so badly flub the cross-examination of the plaintiff that the judge, who had been watching the jury, called the lawyers into his office and suggested the defendant might want to settle. Adriana, however, calmed everyone done, suggested they not be hasty, then eviscerated the plaintiff's expert, a man who, until then, could brag he'd never lost a case.\n\nTwo days later, over dinner, the client suggested Adriana open her own firm, promising and delivering more than enough work to keep her busy.\n\nA year later, when she took a patent infringement case on a contingency basis, she hired her first associate. The $235 million dollar verdict put her name in the papers, generated enough work to keep her and several associates busy, and made her wealthy. She purchased a 68th floor half-floor penthouse condominium overlooking the Golden Gate Bridge, bought this plane, loved her Jaguar, and would soon have the perfect place to get away from it all. \n\nAnd if opposing lawyers and their clients complained she didn't play fair, that during vital parts of their presentation jurors were distracted when Adriana crossed her long legs, or let her dress ride up above her knees, or brown eyes flashing, chewed on the earpiece of her glasses, or played with her long impossibly luxuriant light brown hair, what could be more tiresome than Silicon Valley billionaires and their $850.00 an hour attorneys whining about how unfair life was to them.\n\nShe guided her plane to a perfect landing and taxied to the hanger so the ground crew could prepare it for the return trip. The car the department sent to pick her up was waiting -- there was no shortage of male students volunteering for that duty -- and flashing her engaging smile gracefully slid her five foot ten inch, 33-24-35, 127 pounds into the SUV's front seat and, after an exchange of pleasantries with the driver, opened her computer and entered the password providing her access to the business school's computer.\n\nAfter noting, with pleasure, that a record number of students had applied for the seminar, she reviewed the ten students chosen by the school. They were, until the final name, Eric Workholder, Department of Biological Sciences, Minor in Botany, the usual: pre-law or business students at the top of their class. Thinking Mr. Workholder was in over his head, she accessed the university's data base. No questioning the kid's brain power: straight A's, probable class valedictorian, several published papers, and his laboratory internship appeared to be a big deal.\n\nIt would be interesting, she thought, to have a student with a different background. \n\n* * * * *\n\nThe semester's second class ended much like the first, male students hung in the classroom inventing reasons to talk to Ms. Guttierez, but one student had exhibited the most persistence. Good looking, talking mostly about himself, rich, destined for his father's law firm, he was used to getting what he wanted, especially from the ladies, and ignored her polite attempts to end the conversation. Finally she looked at her watch and said, \"Thank you Robert, but I've got to leave for the airport in a few minutes and Eric has been waiting patiently.\"",
        "As he left she said, \"How can I help you Eric?\"\n\n\"Ms. Guttierez, I've reviewed your syllabus and the assigned reading. I want to dig deeper into intellectual property in life forms. We've long hybridized plants, but CRISPR offers a tool that may allow us to engineer plants from the ground up. It's something we're starting to do in the lab and I'd like to know more about the legal end. I was wondering if you could suggest some source material. I've got no experience in the area and I'm having trouble separating the chaff from the wheat. I figured if you pointed out the wheat I could avoid some blind alleys.\"\n\nPleased to have a male student more interested in her course than her physique, she smiled and said, \"I'd be happy to. I'll get some material together. Why don't you come by my office next week, my office hour is the hour before class.\"\n\n* * * * *\n\nI got there early, which meant that while she was getting settled I could scan her office and say, \"Where did you get that plant?'\n\n\"It was in the office when I got here, left behind by the prior occupant with instructions for its care. I've followed them, but it seems to be suffering.\"\n\n\"May I take a look at it.\"\n\n\"Go ahead.\"\n\nExamining it I said, \"It's tropical, but other than that I'm not sure what it is. Do you mind if I take some pictures, they'll help me identify it,\" then pressed my fingers to the soil and said, \"It needs water. I have some in my bag, do you mind?\"\n\n\"No go ahead, it's good to have an expert on call.\"\n\nI did, adding water with a slight concentration of the fertilizer, and photographed the plant, then spent thirty minutes reviewing the material on intellectual property Ms. Guttierez had pulled together, our conversation becoming increasingly friendly and informal as the plant did its thing.\n\n* * * * *\n\nUsing the e-mail account the university provided faculty members, I scheduled office visits with Ms. Guttierez each of the following two weeks. During the first I showed her my research identifying the mystery plant; during the second, with her permission, I took a cutting from the plant so I could grow my own. Each time I brought water, in which the fertilizer was dissolved, for the plant. \n\nThen we'd sit and chat, she revealing details of her life normally too personal for the workplace until, with a frown, she'd indicate another student had scheduled a meeting.\n\n* * * * *\n\nThe buttapboo had its intended effect. Already hardwired to associate my presence with the plant's pleasant psychoactive effect, Adriana was disappointed when, as she was being driven to school the following week, she re-checked her Humboldt University e-mail account and saw that while several students had, I had not made appointment to see her. She couldn't recall a student she liked so much.\n\nAfter her first appointment, a business student who, if he didn't learn to ogle more subtly would find himself a defendant in a lawsuit some day, Adriana opened her computer and sent me a message. A flower had opened on the buttapboo. Would I like to see it after class? \n\n* * * * *\n\nReading a text book, I waited in the back of the classroom. Ms. Guttierez occasionally glanced at me, her eyes asking me to stay, but despite her several polite attempts to end the conversation the guys chatting her up wouldn't leave. When the driver arrived to take her to the airport she asked him to wait a moment, approached me, and said, \"I'm sorry Eric, I was looking forward to talking to you, but I've got to get in the air. Send me an e-mail, let me know what time is good for you next week, I'm dying to show you that flower.\"\n\nOn the way to the airport she checked her computer. Mid-terms were next week; the grade-grubbers had filled all her slots. Deciding she could fly up a little early, she sent me a message asking if I was available.\n\nOver the next week, deprived of the charge provided by the activated buttapboo, her brain further melded my presence with that delightful sensation. On Sunday, wanting to make sure I hadn't forgotten, she sent me an e-mail reminding me of our meeting, impulsively attaching a smiling face. \n\nWhen I opened her e-mail I knew it was time.\n\n* * * * * \n\nExperience had taught me that last week's flower would have already wilted, so when Ms. Guttierez opened her door and, in a disappointed tone said, \"It's gone, I was so looking forward to showing it to you,\" I was ready. I knelt, examined the plant, and said, \"It's okay, it's just hard to grow a tropical plant in an office, but I have something that might help. I've been experimenting with different fertilizers for the buttapboo, I think I've come up with something that works. I brought some. Do you mind if I try it?\"\n\n\"No, please go ahead.\"\n\nAfter I watered the plant with the more concentrated mix we sat and talked. I could smell the buttapboo's light aroma and as it infiltrated the room, and her brain, her breathing slowed and deepened. her eyes softened, and the conversation grew more personal. She mentioned the property she was negotiating to buy, her condominium, and then thinking she was talking to much about herself, holding a strand of hair with her fingers, leaned forward and said, \"Eric, I've been wondering, how are the plants you're growing from the cuttings doing?\"\n\n\"Very well. There in a greenhouse where I can mimic tropical conditions.\"\n\n\"I'd love to see them.\"\n\n\"I've been taking pictures, monitoring their progress, I have some on my computer.\"\n\nSaying, \"Please show me,\" she stood, walked around her desk and, her body grazing mine, looked at my computer and said, \"They're amazing. You really know what you're doing.\"\n\n\"If you'd like I'd be happy to come by each week and look after this guy.\" \n\nAdriana paused, for by now the buttapboo's scent filled the room and her mind was flooded with powerful unexpected thoughts and desires. She was turned on, very turned on, and wondering how she'd missed what an attractive sexy young man he was. Trying to regain her composure she walked back around her desk, then impulsively pulled her chair away from it, sat, crossing her long legs, knowing they were among her best features. And while most would have heard my offer as innocent, at the moment her thoughts weren't and conflating the two she feared that someone might misinterpret regular meetings between her and such a good-looking student. Licking her lips, blushing slightly, she said, \"I'm not sure if I should accept favors from a student, but we do want to keep the plant alive. Still, let's keep it to ourselves. I'll fly up a little early each week so it won't interfere with the office hour.\"\n\n* * * * *\n\nIt was Friday night and Adriana, sipping from her glass of wine, smiled amiably at the man sitting across from her, the most recent installment of her various girlfriends ongoing \"I know this guy you've got to meet\" saga. He was talking about himself, something brilliant he had done, finishing with just the right self-deprecatory joke. Laughing on cue Adriana wondered, could men be divided into two categories, men who talked obsessively about themselves and were smart and men who talked obsessively about themselves and were dumb? That seemed right. He was cute. Perhaps each category could have subcategories: good-looking and not good-looking.\n\nSeeing how fascinated she was by him, and why not, he was great, he was mystified when at her door she said she'd had a wonderful time, but had to get up early, there was a big project waiting, and kissed his cheek.\n\nShe crawled into bed, wondered what Eric was doing. Was he on a date; did he have a girl over? She thought about sending him an e-mail, just asking how he was doing, but no, that wouldn't be appropriate. Neither were the other thoughts bouncing around inside her head. What the fuck, she'd resisted the urge all week, it wasn't going away. She moved a finger between her legs. \n\nThe next morning, cup of coffee in hand, she called up the mid-terms on her computer. She read Eric's first, returning to it after reading the others, just to make sure it was as good as she remembered, found it was better. Next time she'd read his last, it would be fairer to the other students, she wouldn't constantly be comparing their work to his. She wondered how her pre-law and business students would react if they knew the botanist had outperformed them all. \n\nShe opened the university's e-mail account, sent him a short message commending his work, was pleased by his prompt, \"Thank you, looking forward to class tomorrow,\" response. \n\n* * * * *\n\nOn the flight up Adriana Guttierez repeated to herself, he was not her type. She liked them taller, bulkier, with dark hair and eyes. Eric was the All-American kid: green eyes, strawberry red her, a couple of inches shorter than her, and slender, albeit nicely muscled. He was nice, sweet, not full of himself, and very smart, but still, she had to get a hold of herself, he was a kid and this a passing crush.\n\n* * * * *\n\nI watered the buttapboo, checked the stem and leaves as Ms. Guttierez took several deep breaths and nostrils flaring, her eyes assessed me in ways she knew they shouldn't. Arching her back and neck she said, \"Eric, how are you're plants doing? I hope you brought pictures?\"\n\n\"I did. Do you want to see them?\"\n\nSaying, \"Very much,\" she stood and motioned me to her side of the desk, where we leaned over my computer, one of her hands pointing to the screen as she asked a question, the other resting on my lower back. When we were done she turned to face me, standing in my personal space, and said, \"Eric, they're amazing. As tall as mine and far more robust. The flowers are beautiful. You must have a magic touch.\"\n\n\"The greenhouse has a lot to do with it.\"\n\nShe said, \"You're being modest,\" then checked her clock and said, \"Unfortunately it's time for my next appointment, let's see if he's here yet,\" and walking me to the door, glanced down the hall. Her appointment had not arrived and closing her door far enough to block the view -- school policy forbade closed door meetings with students -- her eyes locked on mine, drifted down to my mouth, and she said, \"Eric one more thing if you don't mind, but I'm looking for a man's point of view. I'm considering cutting my hair, what do you think?\"\n\nRunning her silken hair between my fingers I said, \"Ms. Guttierez, it would look lovely either way. But if you're asking me, I prefer it long.\"\n\nShe touched my shoulder, thought about kissing my cheek, decided she couldn't go that far, and said, \"Thank you Eric, I appreciate that. Next week why don't I fly up a bit earlier so we have more time to talk, I enjoy getting together with you,\" then watched me hungrily as I walked down the hall and turned into the stairwell.\n\nHer next appointment, who'd been five minutes late, was sitting before her, jabbering. She was thinking about her associate, the one who complained that the ones who float your boat were never nice, and the nice ones never boat floaters. Maybe she could set her up with Eric, but no, school policy probably prohibited getting involved in a student's personal life.\n\nStill, did he have a girlfriend? He never mentioned one. That night she checked his Facebook page, didn't see one\n\n* * * * *\n\nThe following week, after watering the plant, we chatted, about my post-graduate plans, her plans for the property she'd just contracted to purchase, as her skin flushed, eyes dilated, and I picked up the rich smell of her arousal mixing with the buttapboo's lighter scent. As the time for her first appointment approached she moistened her lips, walked me to the door, again closing it enough so no one could see inside, and her hand on my shoulder said, \"Eric, are those new jeans? I was noticing how good you look them; they fit you perfectly.\"\n\n\"They are, thank you.\"\n\nThen knowing she shouldn't, she said, \"There's something else. I know this is none of my business, but are you seeing anyone?\"\n\n\"Not at the moment. Why do you ask?\"\n\nShe'd devised a cover story. \"I was thinking about a young lady I know, pretty and smart, whose having trouble with her boyfriend. I think they're about to break up, I thought you two might get along.\"\n\n* * * * *\n\nGuiding her airplane south, Adriana Guttierez chided herself. What the hell was she doing? What the hell was she thinking? She had a decade on him, he was a student, she needed to stop flirting with him. She jerked the hand that had crept between her legs back to the steering wheel where it belonged.\n\nLater that night she'd dab perfume behind an ear, put on some soft music, light a candle, turn off her lights, turn on her favorite vibrator, and on percale cotton sheets let the fantasy of him wash over her.\n\n* * * * *\n\nShe was having trouble focusing. As Eric watered her plant, as they sat and talked, she found herself undressing him in her mind. Even after he left, throughout the rest of her office hour, her mind would drift back to him. She even had trouble getting into the groove in the classroom; it's hard to concentrate when you're sex is doing a rhumba. Finally she'd positioned herself so two students blocked her view of him, for the sight of him ramped up the music playing between her legs.\n\n\"Next week, instead of a classroom session, I will meet with each of you for an hour to discuss your seminar papers -- your drafts are due by 5:00 P.M. tomorrow. We'll start at 8:00 A.M. I set the order of visits alphabetically. The schedule is tight and while I'll consider altering it for good reason, sleeping in is not good reason.\"\n\nIn the past she'd let the students set the schedule, but Eric Workholder was the last name on her list. In light of her recent reaction to him she'd decided it best to see him at the end of the day.\n\n* * * * *\n\nAdriana ended the penultimate interview ten minutes early, then visited the faculty bathroom to fix her make-up, refresh her perfume, and thinking, \"Should I or shouldn't I,\" compromised. She let her pinned-up hair down -- he said he liked it long -- but didn't undo an additional button of her blouse. Stepping back, she looked in the mirror. Her jacket, skirt, and heels were professional, but a little tighter, a little higher, a little nicer than usual. But why not? She'd spent the day sitting behind a desk, her students hadn't been able to see.\n\nWhen she got back to her office she smiled, pleased to see Eric waiting outside, and her eyes, taking their time, unconsciously rolled down his body as she said, \"Good afternoon Eric, it's nice to see you again.\" As he stood she started doing it again, returning her eyes to his only when he said, \"Good to see you too.\"\n\nShe gestured to her office, the door was cracked open, and said, \"Eric, you could have waited inside. It would have been more comfortable.\"\n\n\"Thank you Ms. Guttierez, but I knocked and no one answered. My mother taught me you don't go into someone's home, or office, without being invited.\"\n\nBefore turning to the paper Eric watered the buttapboo and shared his recent photographs of his plants. Leaning over his computer, her hand brushing his, she marveled, his were not only more robust and vibrant than hers, they were taller and featured several large flowers.\n\n\"They're beautiful Eric, you've done an amazing job. Speaking of which I was also very impressed by your draft. I've made some notes of things I want to talk to you about.\n\nThe session started fine. His paper had been the best in the class and they initially moved through it quickly, Adriana, as always, organized and concise, Eric polite and solicitous. However, as the plant's bouquet filled the room, as her breasts and sex swelled, Adriana had increasing trouble focusing. She recognized the absurdity of her position. She finally had a male student who didn't spend his time imagining her naked, and she was picturing him in her shower, or her bed. Pushing that delicious image out of her mind she tried to concentrate us on his work, but was giving out all kinds of signals, running a finger along the side of her pen, holding the emerald of her necklace between two fingers while rubbing her thumb on its smooth surface. She told herself to stop, but soon had a strand of her long hair between her fingers, stroking it, bringing it to her mouth as she leaned forward and listened to his question.\n\nTrying to get a hold of herself she sat up straight, but arching her back displayed her breasts to him, then wet her suddenly dry lips, answered his question, sucked her lower lip into her mouth as she tried to listen to his response. \n\nShe knew she shouldn't, but her breathing deepening, her pheromones mixing with the scent of the plant and her perfume, she stood, took her jacket off, lay it over the back of her chair, walked around the desk and placing a hand on his shoulder leaned forward, brushing him with her breast as she pointed to something on his computer screen. As she listened to his response she squeezed his shoulder then, instead of returning to her chair, and knowing how good her ass looked in this skirt, she bent forward to turn the other visitor's chair to face him, and sat. Only a couple feet of empty space now between them, she crossed her legs, softly rocking a foot in his direction. \n\nIt had become impossible to concentrate. Her swollen breasts tingled; her hard nipples sent electric bolts to her swollen sex each time she moved. Her clit, filled with blood, pulsated. In her mind Eric wasn't wearing that cute sweater that made his eyes look so good, he was naked and licking his sexy lips, no he was licking her lips.\n\nTrying to slow it down she leaned forward -- in preparation for the day she'd gotten a manicure -- touched his hand, felt a jolt in her sex, said, \"Excuse me, say that again,\" and heard enough of what he said to respond, \"That's an excellent point,\" as she sat back, sliding her hand on his, dragging her nail on his skin.\n\nEric admired her. Only an exceptional will and powerful intelligence could have kept going in these circumstances.\n\n\"Ms. Guttierez, are you okay?\"\n\n\"I'm fine Eric, just a long day.\"\n\n\"Well, our hour is about up and it'll be getting dark soon. I reckon you'd rather fly home in daylight.\"\n\n\"Of course, but we're not quite done.\"\n\n\"I appreciate that, but I think I have the gist. Why don't we do this. I already have your notes, why don't you give me your phone number. I'll call it and that way we'll have each others. After I review your notes I'll call with any questions.\"\n\nAgain knowing she shouldn't, she provided him her personal cell number, not her office number.\n\n\"One more thing ma'am. By now I've got more than enough plants growing from your cutting, I'm thinking I should return a couple to you.\"\n\n\"That's sweet, but there's a rule about faculty accepting gifts from students.\"\n\n\"It's up to you, but I'm thinking it's not a gift, I'm just returning something borrowed. I have a graduate school interview at Berkeley the day after our seminar papers are due. If you're interested let me know, I can deliver them to your office.\"\n\nTrying to control her voice, keep it from becoming a soft purr, she said, \"Let me check the rules and get back to you. And thank you for being so thoughtful about my flight time. I guess I lost track of the time, I enjoy talking to you so much. Would you mind waiting here until my driver appears.''\n\n\"Of course not.\"\n\nShe packed her things, put on her jacket, walked back around her desk, swung the door all but shut, stood before him, looked at his lips, they were so kissable, saw a small crease in his collar, took the excuse to reach up to straighten it for him, touching her body to his, her hands grazed his cheeks.\n\n\"Thank you, I didn't know it had turned up.\"\n\n\"You're welcome Eric.\"\n\nPlacing her open palm on his chest, she looked at him through hooded eyes. She was only part-time faculty and right now she didn't care about the rules. She was willing; she could call her driver, say she'd made other plans. ",
        "\"I've really enjoyed having you as a student Eric, I'm sorry to see the semester end.\"\n\nEric was deeply tempted -- she was beautiful, the smartest, most interesting person he'd ever known \u2014 but it was premature. Be patient he told himself, one more dose. He reached for her hand, held it in his, said, \"I've enjoyed it also, I've learned a lot from you, and please let me know about those plants.\"\n\nArching her back and neck, moving her body into him, she said, \"And please, make sure to call me if you have any questions, any time, if I can be of any help at all.\"\n\nOn the flight home she struggled to regain control of herself. She'd broadcast her availability, she'd been ready to fuck him in her office. Any other man would have thrown her across her desk. She was a little miffed -- men didn't say no to her -- but grateful for his self-control. Screwing a student in her office this late in the year, when plenty of faculty are working late, would have been insane. He was a special, extraordinary, admirable, adorable, sexy young man.\n\nAt home she checked the batteries on her favorite vibrator and dildo. Tonight she would take her time.\n\n* * * * *\n\nIt was noon, the papers were due at 5:00. She checked her phone again, still nothing from him. It made sense, her notes had been thorough, he was her strongest student, the one least likely to need help, the one least likely to offer an excuse for a late or defective paper, but still, she longed to talk to him. Then she recalled the plants, why hadn't she thought of them earlier? She started to call him, but his paper was due in a few hours, he might be furiously finishing it, so she sent a text: \"Hey Eric, is this a good time to talk?\"\n\nWhen he responded, \"Yes, I'd love to talk,\" she called him on Facetime; at the sight of him her nipples tingled, her sex swelled, her heart beat faster. Dropping a hand between her legs she said, Hey Eric, how's the paper going?\"\n\nGesturing to a computer sitting behind him, she'd been so focused on him she'd not initially noticed it, it was a dinosaur, she hadn't seen the model in years, he said, \"I was just formatting it to send to you. I hope you like it, I think it's pretty good. Is everything okay?\"\n\n\"Yes Eric. I'm sorry to bother you, I know you must be busy, but I was thinking about your offer of those plants. I've been rude, I should have called you earlier. Of course I'd love them, but I was thinking that instead of my office they'd be perfect in my condominium.\"\n\n\"No bother. Is tomorrow morning good for you? I'm scheduled for interviews at Berkeley. I could leave them with Morrow's Horticultural Services, they're friends of mine. They have the equipment necessary to deliver and set them up in a high rise. When we get off the phone text me your address. I'll let them know.\"\n\nThat was not what she had in mind, she wanted him to deliver them, but her mind addled by the fire between her legs, she was unable to come up with a Plan B and said, \"That's perfect.\" \n\nHurrying to her bedroom , stripping, she texted Eric her address, taking a perverse delight in doing so while naked, then turned on the vibrator sitting on her bed -- it'd been in constant use lately, she hadn't bothered putting it away -- and several minutes later, imagining her and Eric's entwined sweaty bodies on this bed, her gut exploded and she screamed, \"OH GOD ERIC, YES ERIC, YES ERIC, YESSSSSSSSSSSSSS ERIC ERIC ERIC ERIC.\"\n\n* * * * *\n\nAfter a long shower she returned to her computer. It was close to 2:00 P.M., the papers were due at 5:00. After spending several hours responding to work related e-mails she logged onto the university's site and watched the papers dribble in. A couple were a few minutes late, but close enough to the deadline to be acceptable. However, she saw nothing from Eric. She searched his name. It had been there for several hours. As he'd said, he'd been finishing it up.\n\nAfter her experience with the mid-terms, knowing it would be unfair to the other students to let Eric set the bar too high, she set his aside and worked late into the night, not only reading and grading papers, but preparing the detailed comments that were her real contribution to her students' education. When she got to Eric's she was tired and a bit jaded, and decided to save it for the morning. It would be a treat over a cup of green tea.\n\n* * * * *\n\nWearing a sort sexy gown, she primped in front of a mirror, then fixed a cup of tea and curled up in her favorite chair as she read Eric's paper. His draft had been superb, this was better. He'd not only incorporated her suggestions, but showed a true understanding of what she'd been getting at. He'd also made several changes of his own. It was good to see a student who truly cared about the material, who was not just chasing a grade.\n\nThen, although moving towards a conclusion, the paper ended mid-sentence. There was a missing page or two.\n\nShe re-checked her computer, the pages were not there, returned to her bedroom, put on a shirt, called Eric on Facetime.\n\nHe was in his greenhouse, surrounded by buttapboo plants. At the site of them, associative memories and desires flooded her body. It was like she could smell the plants, it was like she could smell him. \n\n\"Good morning Ms. Guttierez. Did something come up about the delivery today?\"\n\nFocusing, regaining her composure, she said, \"No, I'm fine, it's not about the delivery. It appears I didn't get all your paper. I have thirteen pages. How long was it?\"\n\nTaking a moment to recall, he said, \"Fifteen pages, but there wasn't much on the last page. It must be my computer, it can be persnickety,\" then checking his watch, said, \"I'll run back inside and re-send it.\"\n\nAdriana had seen his computer, she did not doubt him. Did she need the last two pages? It could be recitations of Mother Goose and he'd get, and deserve, an \"A.\" But her inventive mind had identified an opportunity here. After all, she certainly couldn't award a grade without a complete copy of the final paper in her file. \n\nShe said, \"Go ahead Eric, but also print a copy and bring it with you. That way if something happens I can get it from you while you're in town.\"\n\n* * * * *\n\nWhen Adriana Guttierez returned to her computer she saw that Eric had re-sent his paper, it was there, each and every page. She read it, re-read it, awarded it the \"A\" it deserved, finished typing her comments, then loaded the grades into he computer. The only thing left was to forward them to the university.\n\nThat was when her phone rang.\n\n\"Ms. Guttierez, it's the front desk. Morrow Horticultural is here. They have some plants to deliver, said you were expecting them.\"\n\n\"I am, send them up.\"\n\nThe gentlemen, polite and professional, moved the plants around the apartment several times -- being men they had no objection to lingering around this stunning woman -- before Adriana decided on the right spots. Using the water Eric provided them, they watered the plants, thanked Ms. Guttierez for her generous tip, and once downstairs texted Eric to let him know the delivery had been made.\n\nAs the buttapboos' potent scent spread through her condominium Adriana headed for her computer to forward the grades, when her phone rang. It was Eric, she put it on FaceTime and said, \"Hello,\" swallowing the word \"darling\" just before it came out, \"Eric.\"\n\n\"Hello Ms. Guttierez, I was calling to see if the plants arrived safely.\"\n\nShe turned her phone towards the buttapboos, then back to herself, and excitement in her voice said, \"They did, and they're lovely. How did you get so many blossoms, three flowers on one, four on the other? You're amazing, you must have magic hands.\"\n\n\"The greenhouse helped. Did you get the final two pages of my paper?\"\n\nWhen the idea had come to her, Adriana Guttierez wondered if she'd go through with it. But now, the air dense with the buttapboos' perfume, his face on the screen, the burn between her legs intense and powerful, the desire in her heart rich and deep, she sat and clicked her computer, forwarding the grades to the university. Eric was now a former student, fair game, and it would not really be a lie, more of an omission that she'd make it up to him a thousand times over. \n\n\"Eric, it'd be best if you brought them by. And with the semester over please call me Adriana.\"\n\n\"The interview ends about 3:00, so depending on traffic I can be there about 3:45.\"\n\nBreathing deeply she said, \"Good, use my guest parking space in the building. The parking entrance is on the Bay side. I'll text you the code for the garage and the spot's number.\"\n\n\"Thank you Adriana.\"\n\n\"No, thank you Eric for all the trouble you've gone to.\"\n\nShe hung up the phone. Her lawyer mind told her technically she hadn't lied, she hadn't told him she didn't receive the pages, she just asked him to bring them by. Yet her woman mind knew she'd been less than honest, but she'd never wanted a man like she wanted him.\n\n* * * * *\n\nAfter a vigorous hour in the building's world-class gym, after a long hot bubble bath -- that always made her feel sexy -- Adriana sat at her vanity, applied make-up, got just the right look, combed out her hair, she'd been letting it grow out, put on pearl earrings. \n\nThe question of what to wear had been nagging her. She'd thought about greeting him at the door in lingerie and stiletto heels, but that was way over the top. She considered a short leather skirt, but while that might be right for his leering classmates, it wasn't for Eric. No, something chic, elegant, inviting, but casual.\n\nTwenty minutes after she'd entered, she emerged from her walk-in closet wearing a pair of cropped black pants, red and white stripe running down the outside of her leg, and a black turtle neck sweater. It would show all her charms, but was not patently sexual. Shoes? With this look she decided she could get away with red open toed 4 \u00bd inch narrow heeled Gucci's. She'd be several inches taller than Eric, but she'd sensed no insecurity in him. She put them on, looked in the mirror, just right. \n\nTaking off the shoes she went to the kitchen, checked on the Vietnamese Chicken Salad she'd made before heading for the gym -- it was best when it sat for a couple of hours -- picked up the salt, tasted it, put the salt down, it was perfect. She set the table on her balcony, made a run though her bedroom to make sure she'd left nothing embarrassing out, then straightened up. When the man downstairs called and said she had a visitor she put her shoes back on. \n\n* * * * *\n\nShe opened the door, my god was she beautiful. Six plus feet in those heels, slender and small breasted, long straight light brown hair, and large brown eyes and a radiant smile framed by the full lips of her oval face. \n\n\"Eric, please come in, I really appreciate this. I know it's an imposition to ask you to come to my home.\" \n\nI could smell the buttapboos. The saturation rate was perfect.\n\n\"Not a burden. The building is lovely.\"\n\n\" Would you like a tour?\"\n\n* * * * *\n\nAdriana glowed in genuine pleasure as I complimented her condominium, it's design modern and angular, then stopped to gaze at the Golden Gate Bridge through the living room's ten foot floor-to-ceiling window.\n\n\"This is amazing Ms. Guttierez.\"\n\nWalking up to me from behind, thinking her bedroom had the same view, she lay a hand on my shoulder and said, \"Eric, it's Adriana. Now that you're no longer my student I'd like us to be friends. If you're not in a rush to get home I made Chicken Salad. I've been told it's quite good.\"\n\n\"No, there's no hurry; I'd love some.\"\n\n* * * * *\n\nShe removed the chicken salad from the refrigerator, filled the two turquoise feminine bowls she'd lined with lettuce, then pushing the hair back from her face said, \"Would you like some wine?\"\n\n\"Is it okay to drink with a teacher?\"\n\nLeaning forward, Adriana slid her hand across the kitchen's island, touched mine. \"I'm a former teacher, all rules are off.\"\n\nHolding the tip of her index finger between thumb and forefinger, I squeezed and said, \"In that case, I'd love some. What goes with chicken?\"\n\nShe said, \"I prefer a Chardonnay,\" and poured two glasses.\n\nWe ate on the balcony, the conversation lively, she as fascinated by the world I lived in, so different from hers, as I was by hers. \n\nWhen we were done Adriana, trying to read my body language, wanting me to stay, re-filled our wine glasses, came around the island, and standing directly in front of me said, \"There is one last thing about the class. I forwarded my notes about the final papers to all my students by e-mail, told anyone who was interested in discussing them that I'd meet with them. Would you like to review yours.\"\n\n\"Very much, the den looked cozy.\"\n\nShe was ready; it was time. I looked at her and Adriana's blood pressure spiked, for she knew that look, a look that made her heart flutter and lips tremble, the look of a guy who's about to kiss you for the first time, the perfect blend of sexy and adorable. I lowered my gaze, fixed my eyes on her lips, looked back up. Then, leaning forward, my eyes moving up and down her face, I paused, as if unsure of myself, then finished the journey to her waiting mouth.\n\nIt was a long lazy kiss. I moved my tongue on her lips. Adriana, eyes closed, touched it with her tongue, then retreated, inviting me into her mouth. There her tongue greeted mine with grace and certainty, as if long lost friends, as if it had been in her mouth a thousand times before and would be a million times again. She licked my lips, enjoying my taste and smell, earthy and intoxicating, unlike the other men she knew, who were always the same combination of cologne and mouthwash suggested by the most recently trendy web-site. She moaned, the sound interrupting the quiet buzz of her kitchen. I folded my fingers on her upper arm. \n\nWhen the kiss ended she opened her eyes and said, \"I've been wanting you to do that.\"\n\nI picked up the glasses of wine and said, \"I've been wanting to do it. Now please, I'd love to hear your thoughts on my paper.\"\n\nShe told me to take off my shoes, make myself comfortable, and I sat on her couch, my back resting on its arm, as she, keeping her shoes on, for she knew how men loved heels, leaned her back into me. I wrapped my arms around her and, tablet on her lap, we went over my paper. Her observations were, as they'd been all semester, incisive, often brilliant, and somehow we both managed to pay attention, ask questions, and listen to answers despite my dick, hard and hot, pressed to her back.\n\nWhen we were done she laid her tablet on the table next to the half-empty glasses of wine, turned, kissed me. Soft gentle pressure, nibbling on my lips, lingering tentative caresses of her tongue, and soon she leaned into me, her hands on my thighs, and said, \"I hope you don't think me the hussy, but there is something I've been dreaming of,\" as she unfastened my belt.\n\n* * * * *\n\nAdriana raised her head and checked the clock. They'd been asleep for two hours. She looked out the window to the sun descending over the ocean. It was magnificent, so was he. She'd never been fucked so forcefully or so well, never come so hard, never been this relaxed.\n\nI'd been drifting on the edge of sleep and when she moved I ran a hand down the side of her magnificent body, lifted my head, looked at the sunset, said, \"Wow.\"\n\nShe turned, pure elation on her face, kissed me, and said, \"I hope I didn't wake you, but it's something, isn't it my darling. You get an amazing view from up here, it's one of the reasons I bought this place.\"\n\nAs we watched the sun disappear over the horizon I moved to the head of the bed and Adriana, her body cuddled to mine, stroked my length. When it was gone she kissed my mouth and said, \"Darling I'm thirsty, I'm going to get some water. Do you want anything?\"\n\n\"Water sounds perfect.\"\n\nUpon her return she handed me a bottle, then, standing before the window, stretched her lissome body, putting on little show, before getting on the bed and, sitting on the back of her heels, knees spread, said, \"Eric, all semester I've had these thoughts about you, I tried to deny them, but they kept growing, getting stronger,\" then kissed my lips, bent over and, her mouth salivating with a desire that had been building for months, kissed the knobby head of my penis, said, \"Your going to get a blow-job you'll never forget.\"\n\nHer moist tongue slithered between her lips, lightly flicked the crown, then, taking its time, lovingly licked around my piss-hole in ever widening circles until she was dragging it around the circumference of the cock-head. With the crown wet she cupped my balls, said, \"God they're big, I can only imagine how much cum is in them,\" collected cunt juice on her fingers, smeared it on my shaft and kissed the head, smacking her lips on the warm meaty crown.\n\nThere was a thing other lovers had asked her to do. She'd read about it, thought about it, but in end always refused. Maybe she should have, she'd have gotten experience on dicks smaller than his, but no, she was glad she waited. She'd said no not only because she'd feared the discomfort, but because there should always be boundaries, even if arbitrary ones. Your lover should know there are things you will not do. But for him there were no boundaries; she'd do anything for him.\n\nShe said, \"Darling, lay on your back, I'm going to deep throat you. This will be my first time, so please be patient,\" worked up a load of spit in her mouth, let it ooze between her lips onto me, then, as she stroked my shaft, created another load, swishing this one around, letting it grow thick and heavy and slick. When she was ready she propped herself on an elbow, took a deep breath, forced her throat wide open with a yawn, and flattening her tongue on the floor of her mouth lowered her head. As I, gliding on her tongue, moved deeper into her mouth she, feeling the urge to gag, stopped three times, holding me in place as long as she could, accustomizing herself to the sensation before withdrawing.\n\nAnd then, on the fourth attempt, the head sat at the entrance to her throat. Nostrils flaring, breathing through her nose, filling her lungs with air, she pressed down and helped along by the thick heavy slick spit she'd manufactured, moved me into her throat with a nudge. She paused for several beats, getting used to the sensation, then used her tongue, pulled me deeper, stopped when her gag reflex reawakened, calmed it, then again extended her tongue, pulled it back, dragged me deeper.\n\nWhen her nose reached my pubic hair she, with a sense of accomplishment, massaged me with her throat muscles and forced her tongue from her mouth to lick my testicles. Toes curling, I said, \"I never..., never..., never felt anything like this.\" \n\nAfter swallowing several times -- the suction was divine -- she pulled her tongue back into her mouth and looked up, her brown eyes sparkling. I said, \"Ready?\" and rocked my hips a fraction of an inch, my dick shifting position in her throat. She swallowed, letting me know it was okay, and working together we picked up speed, me lengthening my thrusts, Adriana moving with me. She touched her neck, felt my cock bulldozing inside.\n\nSoon I was sliding in and out of her throat, and Adriana, moaning, \"Mmmmmm,\" into my cock-meat. Needing a break, she moved up until only the head was in her mouth, wrapped her hot supple soft lips on it, sucked hungrily, swirled her tongue. As pre-cum drooled from me Adriana licked it up, loving the musky flavor.\n\nShe'd never been so happy: she loved her home, her bed, the view, her work, the heavy dick in her mouth, this young man. She let me slip past her lips with an audible pop, sucked my balls into her mouth, felt them quiver and tighten. I muttered, \"My god,\" as she pushed them past her lips with her soft tongue and again swallowed me, working my dick with lips, tongue, and the muscles of her throat. Head back and breathing hard, I was passive as she pistoned her face on me, dragged her soft lips from tip to base, paused to lick my balls, then glided back up to the mushroomed head.",
        "I'd never had a blow job this good, never imagined a blow job this good.\n\nLetting me escape her mouth Adriana whipped her tongue on the ridge on the base of my crown, licked the piss-hole, captured white pearls of pre-cum, fuel to her runway libido.\n\nFrantic for my cum she took me back into her mouth. Her long hair swirled round her face and shoulders, sometimes obscuring, sometimes framing the action as her tongue continued its relentless assault. I tossed my head to the side, my eyes shut, my body stiffened, my balls retreated into my body, and I yelled, \"Yes.\" As I did Adriana thrust her face down, driving my cock-head into her throat just as a thick geyser of cum squirted into her stomach then, moving back up, caught the second explosion in her mouth, swirled it on her tongue, let a stream of white cream seep from the corner of her mouth and trickle down her chin. \n\n* * * * * \n\nEarly in the afternoon of the following day, realizing we hadn't eaten since yesterday's chicken salad, we got out of bed, shared what remained of the salad, and when we were done Adriana said, \"How about Charlie's for dinner?\"\n\nI'd heard of Charlie's; it was famous, expensive, and was supposed to be delicious.\n\n\"Sounds wonderful, but do I have the proper clothes?\"\n\n\"Don't worry, there's a men's shop around the corner, we'll get you fixed up.\n\nWe returned to the bed where, her head laying on my chest, her silken hair scattered over my body, she placed a phone call. I would learn that Charlie's was not the kind of place you called on a Saturday afternoon to make reservations for Saturday evening. I'd also learn that Adriana Guttierez was the kind of person who could call Charlie's on Saturday afternoon for a reservation that evening.\n\n* * * * *\n\nI was wearing a light blue suit and tie -- not my usual style -- and, at Adriana's suggestion, no underwear. Her knee length strapless white dress would be spectacular on the right woman, and Adriana was the right woman. After a superb meal we decided to share a slice of cheesecake topped with strawberries, then I excused myself for the men's room. I returned to two cups of coffee, cheesecake, and no Adriana. All evening we'd been interrupted by people she knew and I scanned the room, thinking she was visiting another table, but no luck. Figuring she was in the ladies' room I picked up a fork, then put it down, deciding to wait for her.\n\nI was reaching for my coffee when I felt the hand on my thigh. My first thought, what was she doing down there, was immediately supplanted by a second, that the first was a stupid question, there was no question what she was doing down there.\n\nA hand took hold of my zipper and, underwear not being an issue, deftly moved me into her mouth.\n\nI looked around. No one was looking at us. How had she gotten under the table without anyone seeing? \n\nSuch questions soon evaporated from my consciousness, for not only was I getting a secret blow job in public from the most beautiful woman I'd ever known, it was a masterful blow job from a woman in no hurry. Gluttonously, I picked up my fork, speared a bit of cheesecake.\n\nFor Adriana the experience was exquisite. The feeling of utter submission, kneeling unseen before her lover, servicing him invisibly, anonymously, and at the same time she felt completely in control, the master of events. The penis in her mouth was warm and delicious, delicate and soft on the surface, adamantine within. She cupped my balls, ringed the base of the shaft with thumb and forefinger, slipped a fingertip in my anus. I gasped and shuddered, my sphincter tightened, relaxed. Adrian felt her sex spasm. \n\nShe was the conductor of an orchestra, raising the pitch with her mouth, then tightening her grip on my penis and easing me down, before doing it again.\n\nShe was gloriously happy, except for that single shudder and gasp he'd made not a sound or motion and he'd kept his hands on the table, didn't reach for her head to hold her in place. Unlike other men he didn't need to be in control, but happily accepted her service the way she chose to deliver it. \n\nWas he picking at the cheesecake, as if impatiently waiting for her to return. Wondering how it would taste combined with the cum that would soon be in her mouth, she hoped not.\n\nShe imagined doing this forever, kneeling, sucking his cock, but knew she couldn't. The restaurant would have to close. \n\nTaking him deep in her mouth, she was relentless, implacable, and when the coda came she drank it all, felt its energy flow through her body. Loving this world of just him and his cock, she kept it in her mouth, sucked gently as it softened and shrank, sipped the last few drops of cum, then wiped it dry with a napkin, tucked it back into his pants, zipped him up.\n\nTaking off an emerald earing she whispered, \"Is anyone looking?\"\n\nI said, \"Can't be sure, but not that I can see.\"\n\nShe said, \"Well, does it really matter,\" and got up from under the table. Holding up her earing, she refastened it, smiled, pleased to see I'd taken only the tiniest nibble of our dessert.\n\n* * * * *\n\nAdriana lazily rolled over and looked at the clock. What was the last time she was still in bed at 1:00 P.M. on a Sunday? Had she ever stayed in bed until 1:00 P.M. on a Sunday?\n\n\"I'm getting hungry darling. Up to lunch?\"\n\nI said, \"Sounds great.\"\n\n\"Do you like sushi? There's a wonderful neighborhood place which delivers. We could eat in the hot tub. \"\n\nThirty minutes later the door buzzed. Adriana, who'd been monitoring the hot tub, put on a light robe and answered it while I tended to the buttapboos. \n\n* * * * *\n\nAdriana picked up the final roll, bit half of it off, fed me what remained, and said, \"How about a back rub? I have a wonderful massage table. I also have a friend who is a masseuse, she comes by once a week. Should I add you to her schedule?\"\n\n* * * * *\n\nAdmiring the sleek limber muscles, the result of my daily bicycle rides, Adriana draped a towel over my backside and said, \"I love your body Eric.\" Braless, wearing a light cotton white tank top through which her dark nipples were visible and matching yoga pants, Adriana dipped her fingers into the warm oil, spread it over her hands, and standing at the head of the table worked my shoulders and upper back then, putting her weight on her hands, moved down my back, leaning over me, dragging her breasts on my skin. The fabric absorbed the oil, becoming all but translucent.\n\nWhen she reached the base of my spine she stood, fingered a hard nipple through her top, and said, \"Did you enjoy that my love.\"\n\n\"It was wonderful.\"\n\nMoving to the foot of the table she said, \"I'm glad,\" and, her years of physical training evident in the strength of her arms and hands, worked her way up the back of my legs. She'd told herself she'd be good, give me a full massage, but when her oiled hands reached my thighs and slipped under the towel she said, \"You have a scrumptious butt,\" and felt her resolve weakening. She shifted her hands to the inside of my legs and by the time she reached the top her resolve was gone. She would not finish this massage, instead she stroked, cradled, and squeezed my balls with oiled hands until completely giving into temptation she wrapped a slick hand on my shaft and twisted it up my length.\n\nShe let go, walked to the side of the table, set aside the towel, said, \"Time to roll over my love,\" then dipped her fingers in the oil, took hold of my dick, and varying twists and pressures, slid alternating hands up it, sometimes using one hand on the shaft and coddling my balls with the other. She wasn't trying to bring me off, at least not yet. \n\nPre-cum was flowing freely from the head and saying, \"I love this dick,\" she bent at the waist, took the head into her mouth, sucked on it, loving the way it rubbed against the roof of her mouth. I caressed her long hair as she nursed on me, then let me slip from her mouth, pulled her white yoga pants over her hips, stepped out of it. Still wearing the top she moved onto the table, straddled my thighs, leaned down, kissed me, sat back up.\n\nThere had been something banging around the inside of her head all weekend. She knew it was premature, that it was too soon to say it, that I was not ready to say it, but certain someday I would, for she believed a love as perfect as hers could only generate love in return. She said, \"I love you Eric,\" then walked forward on her knees, held my dick flat to my stomach, slid her pussy on it, her labial lips splaying open on the shaft, then raised herself, placed the swollen head to the entrance to her sex, took half of me inside, eased back, took more of me inside, working my cock deeper and deeper. When all of me was inside she closed her eyes, squeezed her sex, and said, \"I've never felt this content, this complete. You're touching places inside me no one has ever known before.\"\n\nShe dropped her head back, her long hair grazing my balls, and palpitated her full round breasts, clearly visible through the oil soaked fabric, as we fucked in long smooth strokes. When I was all the way in she'd push down, pin me to the table, grind her sex on me, squeeze me with her tight muscled pussy. \n\n\"Oh, oh, oh Eric, so good.\"\n\nI planted the palm of my hand on her sex, rocked its heel on her clit.\n\n\"Oh, oh, oh Eric, yes, oh yes, so so so so good.\"\n\nWe fucked on and on and soon her hands fell away from her breasts -- her hard dark nipples were clearly outlined in the translucent fabric - as her body began to shake, then the well-developed muscles of her core, stomach, and butt tightened, squeezing my cock, and she started babbling, \"Ohmigod Eric, ohmigod, ohmigod, ohmigod, ohmigod, ohmigod Eric Eric Eric Eric,\" finishing her soliloquy with a pleasure-crazed. \"Eric, Eric, ohmigod Eric, Eric, oh yes, oh yes, yes, I\"M CCOMMMIIIIINNNNNNNNGGGGGGGGGG.\"\n\nI'd never seen anything like it. She came, came again, then again, and again, one orgasm following another like the cars of a freight train until her spent body could come take no more. Face flushed a deep read, cunt swollen and wet, she placed a hand on my chest and said, \"Eric please.\" I stopped thrusting, letting her orgasm wracked body calm and recover. After several long minutes she opened hazy eyes and said, \"That was amazing,\" pulled her top over her head, leaned forward to slide her oily breasts on my chest and said, \"Darling, that was amazing, never been that good. You're making me have all kind of naughty thoughts. I was wondering if you might like to fuck me in the ass, I'm a virgin back there.\"\n\n\"Are you sure?\"\n\nPicking up the bowl of oil she said, \"Absolutely,\" and poured in on the top of her butt. As it flowed down her backside and over my balls and thighs she rubbed it into her anus, then pushed a manicured finger inside, introducing the slick liquid to her tightest channel, did it several times, stroking my cock, still buried in her sex, through the thin wall separating rectum and vagina.\n\nFinally she moved forward, my dick sliding from her pussy, placed me at her rear entrance, said, \"Go ahead my love, fuck me.\"\n\nI pushed, heard her low groan, held still as she tilted her backside into me and said, \"More, more, push it inside.\" We pressed against each other, the pressure measured and deliberate, and accompanied by her, \"Unnh,\" the head popped inside. I held it there while she moved back to the vertical and hands on my chest, squeezed the muscles of her core, growing used to the feeling, whispered, \"Yes, oh yes, oh yes my darling,\" and lowered her body, filling her rectum with me, saying, \"Eric, you're gigantic, long and wide, impossibly thick, deeper, go deeper.\" As she did her stomach cramped and ass muscles convulsed and when I was all the way inside she said, \"It's amazing, its hurts some, but it's more like I feel stuffed, in a way I've never felt stuffed before. So different from having a cock in my pussy. I'm glad I saved it for you.\"\n\nContracting my stomach and butt muscles I jerked my cock inside her, the slightest of motions, did it again. She squeezed her core, relaxed her sphincter, and said, \"I'm ready. Eric, fuck my ass.\"\n\nI began moving inside her and Adriana moved with me, working her body on my cock. Her clit was hard and filled with blood, her swollen cunt leaked juice onto my chest, and when I slipped two fingers inside her she said, \"Oh yes,\" as we continued moving into each other. She took hold of her breasts, toyed with her nipples, felt my fingers in her pussy pressing against the dick in her ass, said, \"Oh yes, oh yes.\"\n\nWe fucked on, strong firm movements, and she could feel it, an orgasm building deep inside her, some animal primordial place she's only scratched the surface of.\n\n\"Oh god, oh god, oh god.\"\n\nThis was not my first experience with anal sex, but still I'd never known anything like this. The hot depths of her rectum were supernaturally tight, the pressure in my cock unearthly. My balls were boiling; I was going to come hard and soon. Twisting and turning my fingers I found her g-spot, dragged a finger across it. Adriana, tearing at her nipples and areolas, shuddered and said, \"That's it, ohmigod, that's it. Oh Eric, I love you, fuck me, never stop fucking me.\"\n\nHer pussy spasmed, her body went rigid, she clamped down on my cock. Fireworks went off in my balls, my dick swelled, hot spurts of liquid flooded her bowels. As I exploded Adriana screamed in orgasmic fury, and we were both shaking, our muscles tensing, convulsing, and when I emptied my balls into her a second time Adriana detonated, her body overcome by an orgasm whose violence overwhelmed her. Screaming my name she collapsed onto my chest\n\nI held her as she drifted in a happy place, a place where she could just be and savor the joy in her heart, the pleasure of her body, the contentment in her soul. The orgasm she'd just lived through had somehow been larger, more full bodied than the ones in her vagina. She was glad she'd saved her backside for him. \n\nEventually, back in this world, she nestled her body to mine, felt my cock shrink until it was no longer inside her. She missed it. She felt cum dripping from her anus. She turned her head, looked lazily into my eyes, and said, \"My master, my love, my king.\" \n\n* * * * *\n\nAdriana, as usual, woke first, and after setting the coffee maker in motion walked onto the front lawn. When we arrived last night I'd noted the apples were ripe and now she examined them, picked a perfect one, and turned back to the house. Built on the property she'd purchased north of San Francisco, it was not the mansion her friends and acquaintances were erecting up and down the coast, but modern and beautiful, comfortable and human-sized, it blended with the land around it. It was right for the two of them, their friends, and the children she'd hoped to have some day. \n\nTaking a bite of the apple she turned her attention to the gardens and greenhouses Eric had built on the property, thought about when she'd introduced him to friends and family. There had been the expected raised eyebrows and questions, he was a decade her junior, a graduate student, had no money, was not of her world or her class. Now, a year later, not all had been won over, but everyone had to admit they'd never known her happier.\n\nI rolled over, smelled the coffee. Eighteen months ago, when I began this experiment, I'd been in mad-scientist mode. I'd picked Adriana because she was the most accomplished, intelligent, and independent woman I knew of. If it worked on her, I figured it would work on anyone. But wanting to test my theory and research I'd proceeded without a real plan on what to do if it worked, simply assuming things would turn out okay.\n\nAnd now, a year later, she remained without peer, the most beautiful, accomplished, intelligent, and delightful woman I'd ever met. I'd never contemplated falling in love with a test subject, but I was madly, deeply, head-over-heels in love with Adriana Guttierez.\n\nI dug into my bag, found the small box I'd secreted at its bottom, steeled myself. Before I asked her I'd tell her the truth, I owed her that. Could the process be reversed? If she asked, I'd find a way.\n\nI pulled on my shorts, stuck the box in a pocket, and carrying two cups of coffee shouted, \"Good morning,\" from the porch and sat at the small table we kept there.\n\nAdriana, wearing sandals and a cropped white tee shirt, her dark nipples visible, her heavy thatch of dark pubic hair -- she accommodated me, I liked it natural and unshaven -- exposed, said, \"Good morning my love,\" and knowing I always fixed her coffee just the right way, smiled, handed me the apple, sat, and said, \"You were right, they're perfect.\" I took a bite as she picked up her coffee, smelled it, sipped, tested its heat, and said, \"Do you know what today is?\"\n\n\"Our one year anniversary.\"\n\n\"You remembered. I have something for you.\"\n\n\"I have a gift for you also, but first I need to tell you something.\"\n\nPicking up my serious tone Adriana's voice dropped in pitch. \"What is it my love?\"\n\n\"Remember the plant that was in your office at Humboldt State.\"\n\n\"Of course darling, the buttapboo, there are several in our condo now and you grow them in the greenhouses here. You're always publishing papers about them.\"\n\n\"Yes, the buttapboo. Adriana, despite the note you found the one in your office was not left by a prior occupant. I put it there the day before the semester began. Remember how I watered it for you. I'd raised it in such a way that when I mixed certain chemicals with the water the plant emitted what is essentially a love potion. It's a long story, going back to the pharaohs of Egypt and ending in modern science. I'll explain it to you in detail if you wish, but the plant caused you to fall in love with me.\"\n\nI was not prepared for the look that emerged on her face, the one she'd adopt when wrestling with a knotty legal problem, trying to make an array of disparate facts fit together. Then, seeing the concern on my face, she leaned forward, took my hand in hers and said, \"Y'know darling, I've wondered about that. The way I feel about you, the overwhelming intensity of my love for you. As a child, seeing my mother after my father abandoned us, I decided I'd never feel that way about a man. I didn't want to open up like that, make myself vulnerable, let another control my happiness. When I fell for you I wondered, had there always been a part of me capable of feeling that way or was there something in you that created that feeling in me. You say it is this plant.\"\n\n\"Yes, how do you feel about it.\" \n\nIt took her several seconds to understand my meaning, for it was foreign to what was in her heart, but when she got it she said, \"My love, are you worried I might be angry?\"\n\n\"Yes.\"\n\nHer smile beatific she said, \"No my darling, I've never been happier. Eric, I've dated Masters of the Universe, Titans of Industry, Silicon Valley jillionaries who compete with each other over the size of their yachts, but with none of them have I known a pleasure like the one I feel right now, sharing an apple with you under this lovely sky.\n\n\"You've never said an unkind work to me, done an unkind thing, put me down, felt a need to compete with me. You've supported me and my career unstintingly, and everyday you tell me I'm beautiful and smart and special. In you arms I feel complete. I don't know if I'd have had the wisdom or courage to understand that good-looking bright young man sitting in my seminar was the man I should be with. If it was the buttapboo, then the buttapboo was the best thing that ever happened to me.\" \n\nShe stopped, then said, \"I do have a question. Could have you done this to anyone?\"\n\n\"I think so, if it worked on you, it would have worked on anyone.\"\n\n\"Why did you choose me?\"\n\n\"Adriana, you're the most amazing woman I've ever known.\"\n\nShe said, \"Thank you my love,\" picked an envelope off the table, so nondescript I'd barely registered it when I sat down, handed it to me and said, \"This is for you.\"",
        "I opened it: \"I can't believe it, is this what I think it is, it's too generous.\"\n\n\"Yes darling, and no, it's not. We designed and built this place together. Of all the things I own it's what most feels like us. I want that to be true in law, as it is in my heart, I want you to have a half-interest. Now show me, what do you have for me?\"\n\nI pulled the box from my pocket, opened it. It was an antique, not ornate or expensive, but lovely in the simplicity of its design. I had not dipped into her money to buy it, setting aside a portion of each of my graduate student stipends.\n\n\"Will you marry me?\"\n\n* * * * *\n\nTen years later the Wall Street Journal carried a short announcement:\n\nAdriana Guttierez, Chief Executive Officer and General Counsel of AGEW, L.L.C., announced yesterday that for the ninth consecutive quarter the company exceeded both income and profit projections. Her husband, Eric Workholder, Director of Research, added that AGEW is expanding its Silicon Valley research facilities to accommodate its recent move into plant-based pharmaceuticals. "
    ],
    "authorname": "MaryAnderson",
    "tags": [
        "anal sex",
        "blow job",
        "deep throat",
        "college",
        "older woman",
        "professor",
        "teacher",
        "younger man",
        "hispanic",
        "public sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/adriana-and-the-buttapboo"
}