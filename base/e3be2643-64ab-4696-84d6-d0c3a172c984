{
    "title": "Final Breath",
    "pages": [
        "AUTHOR'S NOTE: This is my entry into the 2012 Halloween Erotic Story Contest. All characters engaged in sexual activity in my story are 18 years of age and older. Before reading I invite you to listen to the song \"Final Breath\" by Pelican, it's after this song that I got the title for my story, and the song plays a part in an important scene as you'll read below. You can Google it or find it on YouTube. You may like the song, you may hate it, but I hope you at least get a sense of why I had the thought that it would fit in well with a Halloween-themed story. I hope you enjoy the story, and please vote and/or leave comments, I would appreciate it very much. \n\n*\n\nSome of my football teammates often wondered how I could ever be friends with her. At least one of them even went to great lengths to convince me to change my mind and refuse her invitation to the Halloween party she was hosting with her friends.\n\nBut I am getting ahead of myself.\n\nThe \"her\" in this case is Erin Callaghan, a right proper Irish name if there ever was one. Even at 18 years old, as she was going into Halloween, she was a little thing, just about five feet tall and, if I were to guess, lucky to break ninety-five pounds soaking wet. I was also 18 at the time, but I was well over six feet tall, so when she was standing next to me, we looked like a mismatched set. Maybe she wasn't your prototypical cheerleader with the stunning body to match, but she was definitely attractive.\n\nOr, at least, I thought so.\n\nMy opinion was not shared by many at our high school, largely because she immersed herself so heavily into its goth scene.\n\nHer hair had been dyed jet black for at least a couple of years or so, maybe longer. She wore plenty of black makeup and nail polish, though not quite as much as some of her peers, and she sometimes applied white foundation on her cheeks to make her pale skin look even... well, more pale. Her jewelry choices were interesting, to say the least; many pieces were shaped like a funky-looking cross (she later taught me this design was known as an ankh, a symbol of life in ancient Egyptian times), and when she really dressed to fit the goth part her centrepiece was a thick black, metal-studded collar she wore around her neck. And then there was the black clothing... seriously, I don't think she currently owned any clothing that wasn't at least almost totally black.\n\nSo Erin looked different than most of her peers, and definitely different from the \"cool\" kids. And that meant she would never be thought of as pretty by the high school population at large. No, the harsh truth of it was that most kids, if they thought of her at all, considered her a freak.\n\nBut I considered her to be beautiful.\n\nAnd I had insight that few others had. Erin's family grew up next door to mine. I remembered what she originally looked like. Her hair was naturally blonde, and she wore it long for as long as I could remember; by the time she was eight or nine it had flowed all the way down to the small of her back. Her bright blue eyes sparkled with life. She had a smile that could charm the most heartless of men. With the little-boy innocence I had then, I thought she was very pretty.\n\nGirls in general didn't interest me then. But Erin did. She was my playmate when we were very young and we grew to be great friends. I took some grief from my grade school mates about having a girl as such a close friend, but it didn't bother me a bit. We did everything together as kids. Our parents would host joint parties every summer because our July birthdays were only two days apart. She even had her parents sign her up for co-ed softball and soccer teams just so we could play together, even though she didn't care too much about sports. In return I played house and tea party with her more times than I can count. Even though I often complained out loud about how girly such games were, the secret truth was I enjoyed them because it meant more time together with Erin.\n\nIt broke my heart when, during the summer before we were to start sixth grade, Erin and her family moved to another city, one that was at least an eight hour drive away by car, on account of her father getting a promotion at work. The last night together before her move, Erin and I did little except hold on to each other and cry on each other's shoulder. My parents were concerned and tried to tell me that we could still write to each other, but otherwise I would make other friends and life would be just fine. My ten-going-on-eleven year old mind didn't have that kind of perspective, so at the time it felt like my world was collapsing around me.\n\nBut my mother and father, as good parents so often are, were eventually proven right. The rest of my grade school experience was nothing special, but that all changed with my transition to high school. I met a lot of new people in my freshman and sophomore years due to the varsity sports teams I joined, and soon enough I developed some great friendships. My burgeoning athletic abilities, aided in part by a significant growth spurt, and, if I may be so bold as to say it, casual good looks made me very popular in my new surroundings. I had my fair share of attention from girls and went out on quite a few dates, but nothing seemed to click, and as I was about to start my junior year I found myself without a steady girlfriend. I would have liked one, for sure, but at that point I felt I had no reason to panic.\n\nSome people who didn't know me may have thought I was just a popular, dumb jock, but nothing could have been further from the truth. I was smart and worked hard in school to maintain a good average, just as my parents wished and demanded of me. That combined with my easy-going attitude allowed me to get along well with schoolmates of all kinds, the \"nerds\" and \"outcasts\" as well as the popular crowd.\n\nAs for Erin, we did write back and forth religiously for a while. Then one day the replies just stopped. She had seemingly dropped off the face of the earth, as far as I could tell. No more letters (we joked while writing them about how \"old-school\" we were being), no more e-mails, no more communication of any kind. Eventually I realized it had been several months since she last wrote to me. After thinking about it for a while, I supposed she had simply moved on with her life, so I figured I should do the same.\n\n*********\n\nSo imagine my surprise when Erin showed up next to my locker at the end of a school day, just barely a week into that new junior year. Of course, I didn't recognize her at first. If I knew I was going to see her again I would have expected an older, more developed version of my childhood blonde best friend, not the mousy, nervous little creature dressed in black and with medium-length, black, wiry hair that I saw out of the corner of my eye. I thought nothing of her standing there when I opened the door and stuffed the books I needed to bring home in my backpack.\n\nBut when I snapped the lock shut, she was still there. She had an earnest look of concentration on her face that kind of unnerved me at the time, like she was trying to probe the depths of my mind. And despite her off-putting appearance, there was something vaguely familiar about her. Instead of saying excuse me, brushing by her and carrying on with my life, my curiosity got the best of me.\n\nI turned to look at her and asked, \"Hi, is there something I can help you with?\"\n\nShe simply replied, \"I remember you.\"\n\n\"Really? Because... I'm pretty sure I've never met you before.\" I'm still not exactly sure why I lied to her then. I may not have completely recognized her by her looks alone, but that voice... I knew it anywhere. I guess I was just being too damn proud to admit it right away.\n\nErin sensed I was lying... or maybe she just guessed, I'm not sure. Either way the world-weary pose she struck was unchanged. \"Come on, Garrett. I know I must look a lot different now, but it's me, Erin.\"\n\n\"As in, Erin who used to be my best friend until she had to move away with her family? The Erin who had long blonde hair and loved to play with dolls?\"\n\n\"I can't remember the last time my hair was blonde or when I last played with dolls. But yes, it's me.\"\n\n\"Wow.\" It wasn't the smoothest response in the world, but at that moment, it was all I could think of to say.\n\nShe gave me a quick motion with her head, indicating she wanted me to walk with her and keep her company. I took only a few steps before Billy Jordan, a junior like me but already the football team's two-year starting middle linebacker (at the time I had to settle for being the number two wide receiver), passed by. The permanent smirk he wore on his face widened, and he called out, \"Hey Garrett, who's the freak?\"\n\nBefore I could respond, he laughed and kept walking. Erin had stopped, and her expression became even darker. \"That one of your friends?\" she asked, the wounds from Billy's words evident in her voice.\n\n\"He's just an acquaintance, Erin. He's on the football team with me...\"\n\nShe rolled her eyes. \"So you're one of 'those' now, huh?\"\n\n\"What? Hey, wait, let me explain...\"\n\n\"Don't bother, Garrett. I guess I'm not the only one that's changed. I'll see you around.\"\n\nWith that, Erin fled the scene. I was upset that I didn't get a proper chance to defend myself, but what bothered me more was her cynical attitude. It pained me to see her that way. It was worlds away from the Erin I used to know. I sighed, figuring that was the last straw. My childhood girlfriend would never again be a regular part of my life, and that was that.\n\nExcept it wasn't.\n\nTurns out this version of Erin had a special skill for surprising me. The very next day at the end of classes she was standing at my locker again and apologized to me for running off so hastily the day before. I smiled and forgave her, though it did little to outwardly improve her mood. There was no one to interrupt us this day, so we walked together, leaving the school and eventually wandering around a park in the centre of downtown. The walk was conducted mostly in silence, the couple attempts I made to start conversation failing miserably. I guessed she wasn't much for small talk anymore. Still, it felt good to be near her again. I snuck a few peeks at her and never noticed her looking back at me, so I couldn't read her expression and could only hope she felt the same way.\n\nI had a million questions I wanted to ask and was about to go with one when she abruptly stopped walking. I halted myself and followed her eyes. A tall, thin male was purposefully striding towards us. He wore dark sunglasses, black Doc Marten boots and a long dark trench coat. When he reached us I could see that he looked about our age. I guessed he was a fellow student, though at that exact time, even if under oath, I would not have been able to identify or remember him. He slipped an arm around Erin's waist, which caused a sudden, inexplicable stab of jealousy in my heart.\n\n\"Hey Erin,\" he said. \"I wondered where you were, we were all waiting for you at the coffee shop.\"\n\n\"Sorry Jackson. I lost track of time,\" she replied.\n\nJackson nodded his head towards me. \"Is this pretty boy giving you any trouble?\" I frowned but didn't say anything. But I was more than a little pleased when Erin snapped at him.\n\n\"He has a name, you know! He's Garrett. And he's harmless, by the way. I know him from before.\" She looked at me then, and I thought I caught just the smallest hint of a smile curling from her lips. \"We were friends as young kids.\"\n\nJackson frowned at me before turning his attention back to Erin. \"Well, you'll excuse me if I wait to judge for myself just how 'harmless' he is. Can we go now?\"\n\n\"Give me a minute,\" she answered.\n\nHe looked irritated but he did at least step back a few paces to give Erin and I a modicum of privacy. I didn't like the mistrustful look that he had but I held my tongue.\n\nIn a soft whisper that I almost didn't hear, she said, \"Garrett, we need to talk, just the two of us.\"\n\n\"Yes, I want that as well. I have so many questions, you know.\"\n\n\"I know. \"\n\nErin and I exchanged cellphone numbers and said our goodbyes. I watched her walk away with Jackson, he tried to put his arm around her again but she brushed him aside. It wasn't a completely unfriendly gesture, but it still made me smile to see how easily and casually she resisted him. Still, as I watched her walk away in her extravagantly puffed out black skirt, I couldn't help but wonder who this version of Erin was, and what had she done to the sunny little blonde I knew so well from my childhood days.\n\n**********\n\nShe called me later that night, and we agreed to meet on Saturday, at a coffee shop that she said she often frequented with her friends; presumably it was the same one she and Jackson went to earlier in the week. When I arrived I saw her sitting at one of the tables, looking lonely and impossibly small. My stomach churned. I was nervous about what we would talk about, and I was still confused and distressed over her radical change in personality. I didn't know how this could possibly be the same person I knew all those years ago.\n\nI called out to her to announce my presence and sat across from her. She was silent at first, only stirring some sugar into her coffee. The look on her face suggested she was trying to figure out where to start, and was struggling mightily with that decision.\n\nWhen she finally did decide on her conversation-opener, she dropped a bomb on me.\n\n\"Garrett? Do you think I'm a freak?\"\n\nIt felt like all the air was sucked right out of me. After a moment I tried lightening the mood with humour.\n\n\"Hey, Erin, whatever happened to 'Hi, how are ya?'\"\n\nHer expression didn't change. Her stare burned a hole through my forehead.\n\nSo much for that approach.\n\nI tried to re-compose myself and just said what was on my mind. \"Erin, I would never go so far as to call you a freak. But I am very confused and very concerned about you. You seem so depressed all the time. You left a few years ago as a blonde happy-go-lucky young girl, and you've returned as... well, other than being totally dressed in black, I'm not sure what you are now. Please don't be too upset with me, but I have to ask, as a friend... what the hell happened to you?\"\n\nShe reflected on my rambling speech for several moments, though it seemed like hours had passed. She started and stopped a few times. I was dying for her to just spit it out but I didn't want to push her. Finally she gave in to her frustrations and pounded on the table with a small clenched fist.\n\n\"I'm sorry Garrett,\" she said in a pained, quiet voice. \"I just can't do it. I thought I was ready to tell you what happened, to tell you everything, but I just can't. It still hurts too much.\"\n\nI swallowed back my disappointment and gnawing curiosity. \"OK, Erin. It's OK. I don't want to force you to do anything you're not ready for.\"\n\nShe unclenched her fist and took hold of my hand. The touch was very unexpected. Those huge, expressive blue eyes focused on mine as she spoke. \"I need you to promise me something, though. It's really important to me.\"\n\n\"What is it?\"\n\n\"I want to be friends with you again. But I'm not the same person I was as a little girl. All this... my appearance, my attitude and outlook on life, the world, everything... this is who I am now. One day, I hope I'll have the strength to tell you everything, but right now I need you to accept me as I am. And I need you to accept my friends. Treat us as real people and accept us for who we are. Please.\"\n\nI made sure my gaze on her didn't waver when I answered. \"I can only promise I will do my best. I hope that is enough. It may take some time, because everything about you is just so different from what I remember. I hope you can be patient with me. I'm sure I will make mistakes and say dumb things, not because I want to hurt you but because I don't know any better. And I know it's easy for me to say it, but please give me the chance to prove myself. You have my word that I will respect who you are, I promise. And that goes for your friends too, even if that guy from a couple days ago...\"\n\n\"Jackson?\"\n\n\"Yeah, him... even if he seems to have it out for me already.\"\n\n\"He'll be fine. I'll try to make sure he goes easy on you. And for you, I'll be patient. Even if your friends look down on me like that thug did the other day.\"\n\n\"Don't even worry about him, Erin. He's certainly not my friend.\"\n\nShe considered this, and nodded. \"OK. If you say so, then I trust you.\"\n\n**********\n\nSo began the second phase of our friendship.\n\nThis phase wasn't natural, free and easy like it was when we were little kids. This was work. Work and effort and misunderstandings and the odd argument thrown in for good measure.\n\nMy initiation into Erin's new life included meeting her friends. There was Melanie, or Mel for short. But she certainly wasn't short... easily six feet tall and built, as my grandfather used to so eloquently say, like a brick shithouse. She certainly intimidated nearly all the girls in school, and probably half the guys too, come to think of it. The other girl in Erin's closest circle of goth friends was Scarlett. Whether that was a nickname given to her because of her fondness for dying her hair a shockingly bright red, or whether it was her real name... to this day I'm not sure which is the case.\n\nAs for the guys in the group, besides Jackson, there was Alejandro, or Al; his family had moved here from the Dominican Republic when he was ten. Amazingly enough, by the time I met him he spoke perfect English with only a hint of a Spanish accent. Last but not least were Kory and Kris, and yes, with names like that, they could only be twin brothers. Seeing someone dressed in goth gear when you're not accustomed to it can be strange enough; my initial reaction at seeing the twin brothers dressed like that was that it was downright fucking creepy.\n\nIt took some time for me to warm up to Erin's friends, and vice-versa. They weren't bad kids but were naturally mistrustful of anyone outside their circle, because many of those people rarely tried to understand them and instead went for the cheap jokes and insults. A lot of time in my first encounters with them was spent staring at the ceiling or the floor, with absolutely nothing to say.\n\nAnd, of course, there was Jackson. He seemed especially hostile towards me in a passive-aggressive way. Nothing I ever did, whether for myself, Erin or someone else, ever seemed to be good enough in his opinion. He had no shortage of smart remarks and too often I was on the receiving end of his sharp tongue. His favourite term for me was 'pretty boy', and oh how I loathed him when he insulted me like that. I can't count how many times I wanted to kick his skinny ass, but because of Erin I resisted that particular temptation.\n\nI introduced Erin to my friends in order to return the favour as she had done for me. Like my early experiences with hers, the results were mixed. My best friends were all on the football team. There were my fellow wide receivers, Torrey, Brandon and Ricky, and Jamie, the starting running back. He was the self-appointed ringleader of our crew, and for me at least, the best friend a guy could have.\n\nUnfortunately, Erin was left with a terrible first impression of the guys when I introduced her to the group. Ricky, a really good guy but prone to occasionally making boneheaded comments, said something dumb about \"goth kids\"; I can't even remember what it was. In any case it was bad enough for Erin to tear him a new one and leave in a huff. I apologized on his behalf a number of times before she agreed to finally talk to him again; she was very reluctant to let it go. I guess I underestimated just how difficult it was for her to trust people she didn't know and how proudly she would fight and defend her and her friends' goth identities and lifestyle choices.",
        "Of all the guys it was Jamie that Erin showed the most friendliness towards. His laid-back, easy-going demeanour meant he took to Erin better than any of the others did, and she responded in kind. She started to feel a little more comfortable around the rest of the guys as our junior year progressed but there was still some way to go for her to make the kind of connection with them I hoped would happen.\n\nPredictably, all the difficulties we had in fitting in with the other's group of friends strained the relationship Erin and I had. There were times I accused her of not doing enough to vouch for me and help ease me into her group of friends. And there were times she accused me of not understanding her friends and not being willing enough to truly get to know them. She also claimed my friends and acquaintances had it out for her peer group, while I claimed she let a few jerks who really weren't my friends colour her impressions of the ones who were genuinely trying to understand and support Erin and I hanging out together.\n\nAll of these factors combined to make a potent brew, and it finally exploded into a huge blow-up argument in late June, just a few days after school let out for the summer. I said some things I still regret to this day. I cried myself to sleep that night, convinced I had tossed my friendship with Erin in the trash.\n\nThankfully, the bonds we had created were too strong to be ruined by one heated dispute. I called her the next day to apologize and we had a good talk over the phone. We continued to chat and rebuild our friendship over the next several days. Then before I knew it the calendar turned to a Saturday in mid-July. It was a very special day, my 18th birthday.\n\nI was going to a big party my buddies had planned for me on Sunday night, but on that Saturday my parents had organized a small gathering for me to celebrate my actual birthday. Erin dutifully attended this gathering; I was pretty sure she would but I didn't take it for granted, I was very happy to have her there. Besides her I also invited Jamie and Cindy, a pretty young cheerleader who was a little shy but very friendly and more accepting of people than her cheer mates tended to be.\n\nMy parents prepared a wonderful barbecue cookout; my dad was a legend on the grill but this time he outdid himself. I had a great time with the closest and most important people in my life as I became a man, at least in the eyes of the law.\n\nTwo days later I got to return the favour and be one of Erin's guests at her 18th birthday party. Her mother had a tough job making dinner for all the attendees but she insisted on doing it without any help, and I must say she came through like a champ. Erin was enjoying the attention and the company but she was rather quiet and contemplative all night. I thought that perhaps turning 18 was a bigger deal to her than it had seemed to be for me.\n\nAt the end of the night Erin and I got a chance to sit alone on the back porch and talk some more, to say some things that needed to be said.\n\n\"Just wanted to apologize again,\" I started. \"I said some terrible things the other day. I wish I could take them back.\"\n\n\"It's OK,\" Erin answered. \"I've already forgiven you, remember? And I said a lot of awful things too. I'm very sorry.\"\n\nI put an arm around her shoulder in a friendly gesture. \"We'll consider it even, then.\"\n\n\"Yes. Let's do that.\"\n\nWe sat in companionable silence for a while. I snuck a few quick glances at Erin, like I had done many times in the past.\n\nBut this time, everything was different. It was as if I was looking at her with brand new eyes. It took me a moment to realize what this new feeling was, but when I did it hit me with the force of the proverbial ton of bricks.\n\n'Erin is beautiful.'\n\nThat was the thought that kept ringing through my head, over and over. Somehow she developed into a sexy siren without me noticing. I'm not sure she even knew how beautiful she was, and that just made me covet her even more. I suddenly was having great difficulty trying to keep separate the pure intentions of the rational part of my mind and the lustful feelings in my libido.\n\nAfter all, it wasn't going to happen. No way. I was surely in the \"friend zone\" with Erin. And everyone, even inexperienced 18-year-olds like we were, knows that once you step into the \"friend zone\", any thoughts or possibilities of love, lust, or even casual sex go flying out the window.\n\nBut even the passing thought of the word sex set my brain into overdrive. Visions of Erin naked popped up in my head, followed quickly by images of the two of us pleasing each other in various sexual positions. I daydreamed about what it would be like to kiss her, what it would feel like to have her lips wrapped around my...\n\n\"Garrett? You still with us?\"\n\n\"Hmm?\" I was so wrapped up in my thoughts and sexual fantasies that I didn't hear Erin at all.\n\n\"I said, my friends are starting to really take to you.\"\n\n\"Seriously?\"\n\n\"Yes. They've told me that a couple times now. They're impressed with how you've stuck with this for so long. Most people in our school wouldn't have even tried, and the few who would probably would have given up by now. But not you. They respect you for that.\"\n\n\"Even Jackson?\"\n\nHer hemming and hawing gave away the answer. \"Not yet. He can be a difficult person to get to know. Loyalty, trust and respect are very big with him. He thinks you haven't earned that yet. I'll keep trying to break him down, but in the meantime you need to stay patient with him.\"\n\nNot much I could do except agree with her, though I did press my luck on one front. \"Do you think you can at least convince him to stop calling me pretty boy?\"\n\nShe shook her head in sympathy. \"Believe me, I hate that he calls you that just as much as you do. I'll keep telling him until he listens.\"\n\n\"Thanks. And I really am glad to hear your other friends like me. It means a lot, especially since I know how much it means to you.\"\n\n\"That's very sweet of you to say, Garrett. Your friends are nice too. I think I might even be ready to forgive Ricky.\"\n\nI shared a laugh with Erin. \"They'll be happy to hear that.\"\n\nWe gave each other a hug before she left. I hoped she wasn't able to feel my cock awakening from its slumber as her warm little body pressed into me.\n\n\"Good night, old man,\" Erin teased, as she often did about my being a whopping two days older than she was.\n\nI smiled at her sarcastic remark. \"Good night to you, young whippersnapper.\"\n\n**********\n\nThe real turning point came early in our senior year, during the week of Halloween, which fell on a Wednesday this year. The week also coincided with our high school's homecoming festivities. Our school had always held homecoming much later than any other in the area, though nobody could remember or adequately explain why.\n\nOne of the traditions of homecoming week was the Monday elections by the student body of a homecoming king and queen. A couple of weeks before, my friends and some other teammates congratulated me on being nominated by the homecoming committee, but I didn't give it too much thought. I didn't know who else was nominated but I had a pretty good idea, so I figured I was an outside bet at best to win the vote. Either way I wasn't going to let my ego be affected by the result, no matter what it was.\n\nIn fact, I didn't think about it at all until the Friday before homecoming week. Not until Erin approached me on that morning with a piece of paper in her outstretched hand and a dark scowl on her face.\n\n\"Do you know anything about this?!\" she asked in an unsteady, quivering voice.\n\nPuzzled, I took the sheet of paper and read it. It was a poster created by the homecoming committee listing all the nominees for king and queen. Besides my name there were the other usual suspects; popular kids, jocks, cheerleaders and the like. Except for two people.\n\nOne was Craig Crocker, one of the \"nerd\" group; a very intelligent kid but extremely socially awkward. The other was Erin.\n\nAlarm bells rang loudly in my head. Something definitely did not seem right.\n\n\"No, Erin, I don't know what is going on here.\"\n\nShe rolled her eyes at me. \"Geez, Gare, really? You'd think you'd notice since your name is on there too! And these damn things are plastered all over the place, it's not like you could miss them!\"\n\n\"I swear, I never noticed them. Someone told me I was nominated and that was all I needed to know. Besides, it really doesn't matter to me if I'm named or not so I had no reason to look for these posters or know how many of them there are.\"\n\nIt took a while before I was sure she decided to believe me. Still, she was obviously worried, and had every right to be. Someone was certainly up to no good. \n\n\"Gare, I don't know what to do!\" she continued. \"People have been asking me questions and looking at me funny all week! I never asked for this!\"\n\n\"I know a couple of people on the committee. I'll ask them what's up,\" I said. I put an arm around her shoulder in a friendly, supportive way. As she sometimes did when she was upset, Erin remained silent. I knew I wouldn't see her over the weekend because she had to help her mother out with a few things. I hoped she wouldn't worry herself sick.\n\nThat night I went out to a house party with some cheerleaders and a bunch of guys from the football team. I wasn't real enthused about going but I was bored and didn't want to stay at home on a Friday night. Plus this might have been the best chance I had to uncover the mystery Erin confronted me with in the morning.\n\nSure enough, the conversation turned to homecoming in general, and specifically about the chances for the various candidates to be selected as king or queen.\n\n\"Of course, Gare here has almost no shot, he's way too ugly!\" Brandon gleefully yelled. He always did love busting my chops.\n\n\"Much better chance than you, Brandon, your sorry ass didn't even get nominated!\" Jamie high-fived me for that remark. I loved showing that I could dish it out as well as take it.\n\n\"But Brandon still has a better chance than that fuckin' nerd, Craig!\" Dave Lewis said with a laugh. Dave was one of the starting cornerbacks on the team and was known to be terrible at keeping secrets. Interestingly enough, he was also on the homecoming committee.\n\n\"Yeah, what's with that anyway, Davey? Who nominated Craig in the first place?\" I tried to play it casual with my question. I desperately wanted to ask the same thing about Erin but didn't want to tip my hand too soon.\n\nDave furtively looked around to make sure that no one else besides Brandon, Jamie and I were listening before turning his attention back to us. \"OK guys, but listen, you can't tell anyone else about this, you swear?\" he whispered conspiratorially. We all nodded in agreement and allowed him to spill the beans.\n\n\"Some of us on the committee were talking one night and we thought it would be funny to include a couple of gag nominees. You know, kids that would never have a shot and would be the worst possible choices. So the girls picked that little freakazoid in black, Erin what's-her-name, and me and the guys picked that sorry-assed nerd Craig!\"\n\nBrandon and Jamie both shot me a small sideways glance to make sure I didn't react when Dave said Erin's name. Thankfully Dave didn't seem to notice. I was still cool on the outside but inside I was furious and just this close to grabbing Dave by the throat and beating the hell out of him.\n\n\"But here's the best part, guys!\" Dave could barely contain his glee while sharing the details of the plan. \"At the assembly on Monday we'll have them go on stage last. They think they're going to do their speech or whatever but a bunch of us are going to yell at them, boo, insult them, make them feel like shit, all sorts of stuff like that! We'll just humiliate the shit out of them, and it will be so funny when everyone else at school starts in on them too! I'm telling you, it'll be hilarious!\"\n\n\"Yeah, a real laugh-riot,\" Jamie said. He was a little too obvious with his sarcasm for me but I didn't have to worry. Once again, Dave was completely clueless.\n\nAt the end of the night the three of us met up with Torrey and Ricky and filled them in on what we heard.\n\n\"Man, that is messed up,\" Torrey said.\n\n\"Yeah, seriously messed up,\" Ricky concurred.\n\n\"What are you gonna do, Gare?\" Brandon asked.\n\nI shook my head. I had no idea. \"Don't know, guys. I need to think about it.\"\n\n\"Well, if you need our help just say the word,\" Jamie said, and the others immediately agreed.\n\n\"Thanks guys.\" I was very appreciative of their support. We gave each other man hugs to say good night and went our separate ways.\n\nThe wheels were turning in my mind as I sought the right way to help Erin out of her predicament. It occupied my thoughts for the entire weekend, to the point that I had to apologize a couple of times to my parents for appearing so distracted while they were speaking to me.\n\nLate Sunday night I finally landed on a plan that, while risky, had the best chance of getting Erin and Craig out of a difficult situation, while also achieving a couple of side objectives I had as well. With help from the guys I implemented the first phase of my plan. The rest of the morning was spent waiting for the noon-time assembly to take place so I could roll out phase two.\n\nEveryone gathered in the gymnasium for the assembly, and there was a buzz in the air as most of the students discussed who they thought would, or should, win the titles of homecoming king and queen. I had not seen Erin all day. I was concerned for her and wanted to know how she was holding up. I was relieved to see her enter the room but before I could speak to her Jackson was there to guide her to the back with the rest of their group, and the stern look on his face warned me away from them for now.\n\nSo I sat with my friends and waited for my appointed turn to speak. It just so happened I was the last one scheduled before the unfortunate Craig and Erin. The speeches of the others ranged from earnest yet plodding to ridiculously self-promoting and vain.\n\nThe student council president, who was emceeing the assembly, finally announced my name. \"Sit back and enjoy the show,\" I said to the guys. I made my way up to the stage, steeled myself against the podium and unleashed what I had to say to an unsuspecting audience.\n\n\"Good afternoon fellow students. I had some comments prepared for today, but I recently heard something very disturbing that has caused me to make some changes in my message to you. I learned that two of the candidates for king and queen nominated by the homecoming committee were never intended to be taken seriously. Instead, the goal was to bully and humiliate them. I find this to be deplorable, and the committee members should be ashamed of themselves for even thinking about treating their fellow students so poorly. I refuse to be associated with this election under these conditions, so I am withdrawing my name for consideration as homecoming king.\"\n\nFor a moment you could have heard a pin drop. Before the student body could recover from their collective shock, I gave a nod to Mr. Harvey, the school principal, who was sitting on stage observing the proceedings. He coolly and calmly stepped up to the microphone.\n\n\"Ladies and gentlemen,\" he intoned in a booming voice, \"I confirm what this young man has just told you. He disclosed this situation to me this morning and a number of other students corroborated his story. I spoke to members of the homecoming committee, and eventually they came clean with the truth, that they had planned to act in the exact manner as this young man has outlined.\n\n\"I do not like to do this, but the actions of these members of the committee leave me no choice. As such I have disbanded the homecoming committee. The student council, in consultation with the teacher liaisons and myself, will perform the rest of the duties for homecoming, including selecting an appropriate king and queen from a list of approved candidates. We will notify everyone tomorrow during the morning announcements who the successful candidates are. This means, unfortunately, that the traditional vote for these positions will be cancelled this year. This decision is final. Thank you ladies and gentlemen, this assembly is now over.\"\n\nThe gymnasium erupted in an almighty din. Some students, particularly those with the \"in\" crowds, were irate that their fun traditions were being cancelled, but most everyone else was just surprised at how quickly things had unraveled right before their eyes. Several stares were aimed in my direction, some angry, a very few admiring, but most were curious. I suddenly felt very exposed and on display, so I made a break for it amidst the noise and confusion and headed for my locker.\n\nI almost got there before I heard someone from behind yell, \"Hey!\" I turned around and saw Craig puffing for air as he ran to catch up to me. He stood there for the longest time, not knowing what to say, probably not quite believing that someone would stick up for him in this way.\n\nFinally he gingerly offered his hand to me and I shook it. \"Th-thanks,\" he stammered.\n\n\"Don't mention it,\" I replied. He then ran away from me, looking very much like he might throw up. 'Poor guy', I thought, and hoped that someday he could overcome his almost criminal shyness.\n\nI turned back towards my locker and stopped, momentarily startled. Erin was there, surrounded by most of her friends. She was smiling, and at the same time looked almost ready to cry. The others looked at me in appreciation.\n\n\"That was a great and brave thing you did, Garrett,\" Scarlett said. \"You should be proud of yourself.\"\n\n\"I don't know about that,\" I pleaded humbly.\n\n\"Oh, puh-LEEZE!\" The unmistakeable sound of Jackson's sarcastic voice echoed through the hallway. \"Don't tell me you're all falling for this crap!\"\n\n\"Jackson, don't,\" Erin softly said, but he ignored her and kept going.\n\n\"Pretty boy here is a glory hog! If he wanted to he would have found a way to stop this quietly but that wouldn't have given him the spotlight he craves! Isn't that right, pretty boy?\"\n\n\"No,\" I said in as calm a voice as I could manage. \"You're wrong. I wanted to help Erin and Craig, and embarrass the idiots who came up with this dumb idea in the first place. This was the best way to do it.\"\n\n\"Liar! Helping them was a lucky break, just incidental to what your selfish goals were! You couldn't care less...\"\n\n\"Jackson!! Shut up and stop this right now!!\" Erin angrily and loudly yelled at her friend. \"How many times do I have to tell you, Garrett's not like that! Grow up, already!\"\n\nHer words clearly wounded Jackson. He glowered and silently stormed off. Erin's friends looked at each other, perplexed and unsure what to do.\n\n\"Go ahead and catch up with him before he does something stupid,\" Erin told them. \"I'll join up with you later.\"\n\nAl, Kory and Kris left, but Scarlett and Mel remained. \"The guys will be fine,\" Mel said. \"Now, Erin, don't you have something you'd like to say to Garrett?\"\n\nThe two girls stepped back a few paces. Erin tentatively stepped forward. She held my hand and held my gaze with her bright blue eyes. A hint of a smile crossed her lips and her face brightened and sparkled with life. Time seemed to stand still for a moment.\n\n\"GARRETT!!\"\n\n'Dammit! Now what?!\" I thought angrily to myself. I looked over my shoulder towards the source of that voice.\n\nBilly Jordan.\n\nI groaned in exasperation. Whatever was going to happen between Erin and I, if anything, would have to wait. The moment had passed.\n\n\"Go on Erin. I'll talk to you later,\" I said, not knowing at the time I wouldn't get a chance to speak to her again until Halloween, two days from now.\n\nShe sighed and nodded. On her way past she, Scarlett and Mel all gave Billy a cold death stare. He didn't acknowledge their presence. Instead he marched directly in front of me and glared, apparently believing he could intimidate me.",
        "\"Think you're a cool guy, huh? Think you're this big hero saving your damsel in distress, are you? Well you're not, you're nothing but a goody-two-shoes, a traitor who turned his back on the people that count around here! Instead you cast your lot with the freaks! What the hell is your problem?!\"\n\nI knew instantly what a ridiculous speech that was. I was embarrassed to think that at one time I thought Billy was a cool guy. \"Awww,\" I mocked him, \"is poor little Billy sad because I ruined his fun little game? Poor baby!\" I laughed out loud, happily noting how I had wiped the smug look off that bastard's face.\n\nBilly got right in my face, close enough so I could see his slicked back hair and smell the cinnamon gum on his breath. \"Say something funny again, asshole! I dare you!\"\n\nThe sound of someone clearing his throat behind him broke Billy's concentration. He turned to see Jamie, followed closely behind by Ricky, Torrey and Brandon.\n\nBilly, ever the smooth one, recovered his composure. \"Good thing for you your little friends showed up just in time. But you'll get what's coming to you. All in good time. For now, remember this. You've made yourself an enemy today, and it will be the biggest mistake you've ever made. You've crossed the wrong motherfucker this time, Garrett!\" And with that, he walked away, pleased with himself after his show of bravado.\n\n\"Sorry that you might end up being caught up in all this,\" I apologized to my friends, \"but I have a feeling that the shit's soon going to hit the fan.\"\n\nI had a feeling that the price for doing the right thing was going to be high. I just hoped the payoff would be greater.\n\n**********\n\nIt all came to a head on Halloween day.\n\nThe day started with an early morning football practice. It was the last practice before we were to play our biggest rivalry game of the year on Friday so it was going to be an intense session. We started with a jog around the track to warm up. I fell in with Jamie, Torrey, Brandon and Ricky, as per usual. We were just starting to talk about our opponents for the next game and how badly we wanted to win, when I felt someone cuff me on the back of my head. I turned my head and saw Billy with a shit-eating grin on his face as he forced his way into our group to take his place next to me. Figures, I thought.\n\n\"Hey Gare!\" he said in the most fake greeting in the history of fake greetings.\n\n\"What do you want?!\" I yelled back. Meanwhile, for now my group of friends quietly gave me space to deal with Billy and stared straight ahead. It wasn't their deal so I didn't expect them to immediately step in. I told them after the Monday furore died down that it was only right that I try to handle any situations brought about from my actions. They agreed and offered to help if necessary, as good friends do for each other, but I didn't want them to feel obliged.\n\n\"You still going to that freak's Halloween party?\" Billy sneered.\n\n\"Maybe,\" I retorted, trying to play it cool. \"What's it to you?\"\n\n\"God, Gare, you're a loser! How about ditching that bitch and hanging out at my party instead? If you're lucky, I may even forgive you for that little stunt you pulled the other day and hook you up with a cheerleader so you can get yourself some tonight!\" \n\n\"How about you shut your face and mind your own damn business?!\"\n\n\"You've got a lot of nerve, talking to me like that!\" Billy snarled. \"You're gonna fucking regret it!\"\n\n\"Get out of here, Billy, seriously!\" Jamie piped up. Billy just smirked and accelerated to put distance between us.\n\n\"Asshole!\" Jamie muttered under his breath.\n\nTorrey looked at me and asked, \"You're not gonna let that guy mess with your head, are ya?\"\n\n\"Hell no!\" I exclaimed. \"I'm going to do what I had planned to do all along and go to Erin's party. If you think I'm going to change what I do just because that jackass says so, then you're crazy.\"\n\nThe head coach's shrill whistle blew and we all grabbed our helmets and formed a huddle around him at midfield. His Hawaiian shirt and sunglasses were his only concession to Halloween; his distaste for the holiday was well known. He didn't give us one of his famous motivational speeches this time; he was saving that for game day. After those speeches we felt like we could run through brick walls if Coach just said the word. But today he wanted us calm and focused so we could work on our game plan and the other fundamentals of the game we needed to successfully execute in order to win.\n\nWe did a great job working through our drills. Personally I was feeling good and the team as a whole was sharp, and it showed in our practice. We moved into position for our last drill. The quarterback would throw short out passes to the receivers while defensive players worked on form tackling; their part of the drill called for them to wrap up but not finish the tackle by bringing the player to the ground. The idea was to practice form, not hurt a teammate.\n\nThe first few cycles of this exercise passed by without incident. When my next turn came up, however, I heard Billy's voice pierce through the air. \"Out of the way, rookie! I got this!\"\n\nA chilly pause came over the proceedings. I could clearly see the looks of concern on my friends' faces. I could see Jamie mouthing, \"Don't do it!\" and shaking his head. The backup quarterback raised his palms up in the air as if to ask what was going on. Coach, as good as he was at both inspiring his players and the X's and O's of the game, sometimes had trouble sensing danger in situations like this.\n\n\"Well, come on then, we've done so well, boys, don't stop now! Keep it going!\" he barked.\n\nPride got the best of me. I saw the look of derision on Billy's face as he lined up across from me, ready to pounce at me like a caged lion, and I thought to myself 'I'll be damned if I let this asshole intimidate me!'\n\nI gave the quarterback the nod to go ahead. I ran my short route as he lofted the ball in my direction. It was a little high, I had to jump and stretch my body to reach it, but I was going to catch it in my fingertips just perfectly.\n\nCRACK!!\n\nI felt Billy's helmet bury into my ribs. The impact sent me flying through the air. I had just enough time to think to myself, \"Oh shit!\" before landing hard on the ground on my back with a sickening thud. I was vaguely aware of the guys standing over me, yelling back and forth and maybe threatening to fight. I couldn't really make out too much what was happening; I was too worried about trying to get my breath back.\n\nI never did find out where the damn ball went.\n\nFinally, blessed relief as air flowed into my lungs again. I gingerly sat up straight, testing my physical reaction to movement, and waited for the bout of dizziness to fade. The commotion from everyone surrounding me seemed to fade; good thing too because the noise was giving me a pounding headache. I heard Coach bark out \"Billy! Get the hell out of here! You're done for the day!\"\n\nJamie, Torrey, Brandon and Ricky all knelt down beside me. I could see the looks of concern on their faces, and Jamie spoke for all of them. \"Garrett! Holy shit, are you OK?\"\n\n\"Been better,\" I groaned.\n\nI was eventually able to stand up and watch the rest of the drill from the sideline. Coach asked if I was OK, and not wanting to appear that this experience bothered me too greatly, I nodded.\n\n\"Well, I still want to talk to you sometime before game time. I'll talk to Billy too but at a different time than you so there are no further blow-ups. I need to get both sides of the story and really get to the bottom of this. I don't want this distraction hanging over us before our biggest game of the year. In the meantime, if you start feeling worse, check in with the school nurse immediately, do you understand?\"\n\n\"Yes, Coach.\"\n\nHe then issued two blasts of his whistle, mercifully calling time on this practice.\n\n**********\n\nI shuffled over to my locker, still sore and bruised from Billy's assault, but otherwise none the worse for wear. With showering and having some time to walk it off I was starting to feel better. Plus my mood was brightened from my Halloween costume.\n\nAnd really, who wouldn't have a smile on their face after seeing me in my outfit? I was going as a medieval style court jester, complete with brightly coloured vest and three-pointed hat with bells at the end of each point. It drew laughs from all my friends, and I couldn't wait to see how everyone else reacted. Some of their costumes were pretty cool too, even if most of them went with the obvious and traditional vampires and zombies and such.\n\nAs I opened my locker door I saw Erin standing in her usual spot at the edge of my peripheral vision. She had made her way there and stood quietly without me noticing at first, as was her wont. Not for the first time, I wondered how in the hell she was able to sneak up on me like that all the time.\n\nI turned toward her and saw her curiously eyeing me up and down. She looked no different than usual, but on a day like today she and her friends fit in perfectly instead of sticking out like a sore thumb.\n\n\"You know you look ridiculous, right?\" she asked.\n\n\"What are you talking about?\" I asked right back, making sure to shake my head slightly so the bells would jingle.\n\nShe just rolled her eyes and shook her head. \"Garrett, if you wear this to my party tonight, I will personally kick your ass.\"\n\n\"Don't start something you can't finish, babe,\" I teased her, and she stuck her tongue out at me in response.\n\nI laughed over the witty repartee Erin and I were sharing. I got what I needed for my first classes and was about to say something else to her. That is, until Vanessa, the head cheerleader, girlfriend to the one and only Billy Jordan, and a notoriously shameless flirt, rudely stood between the two of us, even though it was obvious we were having a conversation.\n\n\"Hi there, Garrett,\" Vanessa said. I'm sure she thought her 18-going-on-19-year-old self was being seductive. I just thought she was being annoying.\n\n\"Uh, yeah, hey Vanessa. Can you give me a minute, I was just talking to... oh.\" I was going to say I was talking to Erin, but instead of hanging around she gave the cheerleader a disdainful look and pressed a piece of paper in my hand before walking away. \n\nVanessa's eyes shot daggers at the departing Erin. \"Bitch,\" she grumbled under her breath. But still loud enough for me to hear.\n\nI opened the paper and noted that it was the \"official\" invite to Erin's Halloween party. The type of little added touch she didn't need to do but wanted to do which made her so endearing. I nodded to myself and slipped the paper in my pocket. I was kind of enjoying letting Vanessa do a slow burn while she waited for me, but I guess I had to talk to her, even though it was the last thing I felt like doing.\n\n\"You know, Vanessa, if you want me to do something for you, at the very least you should never interrupt my friend and I when we are talking, or call her a bitch behind her back loudly enough for me to hear it,\" I lectured her. Not like it would do any good anyway. \"Oh, and please inform your boyfriend that I didn't appreciate his attempt to impale me on his helmet in practice this morning. All of that is very rude, you know.\"\n\n\"Whatever, Gare.\" As I expected, she completely brushed off what I said. \"Listen, let's talk about what's really important.\"\n\n\"And that would be?\"\n\n\"Billy's party, of course! You're going, right?\"\n\nI groaned inwardly. I really had no desire to get in any sort of argument with her about this, so I tried hedging my answer. \"Maybe, I'm not sure yet.\"\n\n\"Well, I think you should,\" she said, trying to turn on the charm, running a finger up and down my neck. \"Who knows? If you're lucky, one of my friends can make it worth your while.\"\n\nDid she just imply that she would whore one of her cheerleader teammates out to me as a reward for showing up to Billy's stupid party?! You stay classy, Vanessa.\n\n\"You know what? I think my schedule is going to be full tonight,\" I said.\n\n\"Don't be like that, Gare. I wouldn't want to have to make things difficult for you and your freaky little friend.\"\n\nThat was it. I slammed my locker door shut with a bang, making it known that, in no uncertain terms, this conversation was over.\n\n\"See you around, Vanessa,\" I said over my shoulder before booking it to my first class of the day.\n\nThankfully the rest of the school day passed without incident. It was fun to see all the costumes on display. They ran the whole gamut, from the aforementioned vampires and zombies, to sexy, slutty nurses, to cool superheroes, to ghosts and mummies that completely shielded the wearer's identity. The funniest was my crazy chemistry teacher, Mr. Dalla Costa, who fashioned a get-up made to look like he took an axe to his head.\n\nAs the final bell rang I was happy to see Jamie again. \"Hey Batman,\" I called out, for that's who he was today, wearing the full costume, including the mask, pointed hood and hard plastic breastplate with the famous logo in the centre.\n\n\"Hey, clown,\" he retorted.\n\n\"Uh, that's jester, dumb-ass.\"\n\n\"Whatever, clown!\" We cracked up in laughter.\n\n\"How are you feeling, Garrett? Not still in pain after practice?\" Jamie asked.\n\n\"Well I wasn't thinking about it until you mentioned it. Thanks for the reminder, buddy.\"\n\n\"I'm serious, man. Billy really lit you up.\"\n\n\"I'm fine. I'll need to stretch out a bit the next couple days to make sure I don't get too sore, but I'm OK, really.\"\n\n\"Alright, just checking up on you, man. You know I got your back.\"\n\n\"And I got yours.\"\n\nWe performed our secret handshake after that exchange. It's a guy thing.\n\n\"So I take it you're not going to Billy's party?\" Jamie asked, knowing full well my answer.\n\n\"Fuck no. How about you and Cindy?\"\n\nHe sighed. \"Probably. I really don't want to, and neither does she, but she's so worried about keeping up with appearances with the rest of the cheerleaders. She feels she needs to.\"\n\n\"And you're going to be the supportive boyfriend, I guess.\"\n\n\"Not boyfriend. Just friend.\"\n\n\"Shit, Jamie, I'm sorry dude.\" I was so wrapped up in my own problems that I forgot about Jamie and Cindy's issues. Jamie, who had turned 18 on New Year's Day, had been friendly with Cindy for quite a while, but it wasn't until her 18th birthday in August that they began secretly dating. You might reasonably wonder why they had to be secretive about their relationship. Well, the calendar may say it's the year 2012, but believe it or not there were elements among the school population that would be driven to anger at seeing Jamie, who is black, dating Cindy, who is white.\n\n\"Nah, man, it's all good. You've got enough on your plate without worrying about us. Anyway, I'm trying to convince her to go to this other party my cousin is hosting. We'll see.\"\n\n\"Good luck with that.\"\n\n\"Thanks man. So I'm guessing you're gonna hang out with Erin?\"\n\n\"Yeah, her and her friends.\"\n\n\"That's cool. You like her don't you?\"\n\n\"Well, we're friends, so yeah.\"\n\n\"That's not what I meant, Gare.\"\n\nI shook my head. \"Come on, man, it's not like that.\"\n\n\"Really? You sure? 'Cause your eyes light up whenever you talk about her. I'm not blind, man, I know the score.\"\n\nHe was right. Jamie and I were real tight, he was easily my best friend besides Erin, and we could read each other like a book. \"All right, all right,\" I relented, \"I do like her a lot. But she's not easy to read sometimes. I don't know if she likes me any more than just as a friend.\"\n\n\"Who knows, Gare? She could be madly in love with you, you big stud!\"\n\n\"Ha, OK Jamie, we both know you're the man, attracting the eye of a cheerleader and all that!\"\n\n\"Yeah, I know I'm good,\" he said, pretending to pop the collar of a shirt that his costume probably hid. \"But so are you. What you did on Monday to stand up for her and that other kid was really awesome. You have a set of big brass ones, my friend!\"\n\n\"Ah, it's nothing.\"\n\n\"Don't go all modest on me now!\"\n\n\"I just did what I thought was right. You'd do the same if you were in my shoes.\"\n\n\"I hope so. Gare?\"\n\n\"Yeah Jamie?\"\n\n\"If you and Erin do hook up, that's cool with me. I'm not big on the whole goth thing, but you know her well and if you're cool with her then so am I.\"\n\n\"Thanks man, you're a great friend and always will be. Good luck with you and Cindy, both in doing your own thing tonight and... you know... nudge nudge, wink wink!\"\n\nWe shared a little laugh before giving each other a big man hug.\n\n\"Man, get these bells outta my face!\" he yelled with a goofy grin.\n\nWe bid each other goodbye. I walked home to get ready for Erin's party, wondering if something really would happen. I knew what I wanted, and I wanted it badly, but I couldn't quite convince myself that it would or even could happen. No, I decided it was best to not get my hopes up. Just go, accept the situation for what it is and try to have some fun with it, and be done with Halloween for another year.\n\n**********\n\nI got to Erin's place at about 7:00 that evening, right on time according to official invitation she prepared. Remembering that she wanted this to be a \"come-as-you-are\" Halloween party (i.e. no costume), but mostly remembering her earlier \"threat\" to cause me physical harm, I ditched the jester outfit and went with a simple pair of black jeans and light gray shirt. I rang the doorbell and smiled when she answered. She went easy on the makeup and wore a black blouse, skirt and stockings, plus a lacy black veil that covered the top half of her face for good measure. She looked pure and fresh.\n\nWe went inside and gathered in the small living room with the rest of her friends. Scarlett was sitting on Kory's lap in one chair, but otherwise everyone had their own seat. As usual, they were all just chilling, happy to be in each other's company. Erin insisted I take the only empty spot left, one on the couch next to Al. She plopped herself down on the floor and sat between my legs.\n\nEveryone snacked on popcorn while Erin was deciding on which movie to load into the DVD player among the choices that were appropriately both Halloween and goth-themed. She eventually settled on The Crow. While the movie played I mostly listened to the conversation all around me, joining in where I could. Erin, as she usually did, included me in the flow of the discussion as much as possible. I loved that she was so thoughtful to do this for me.\n\nWith the obvious exception of Jackson, I knew Erin's friends were OK with me since she told me so on my 18th birthday. My challenge was to try and fit in and relate to them when I wasn't really one of them. I was not goth; I didn't look like them, I didn't think like them, I didn't fully share their interests.\n\nDespite all that, I enjoyed sharing time with them. There were no expectations or peer pressure to live up to. I felt more free to be myself, and they accepted who I was without reservation, and I tried to do the same for them.\n\nAnd, of course, being with them meant more time I could spend in Erin's company.\n\nWhich was both a blessing and a curse; a Halloween treat and trick, if you will. There was no doubt in my mind by now that I was physically attracted to her, and almost certainly falling in love with her as well. More and more often when I saw her I silently perved on her, which left me guilt-ridden and frustrated, because I never thought she would reciprocate my feelings for her. I convinced myself that if she knew I felt this way she would cut me out of her life forever\n\nThe movie finished playing, and there was a lull in the conversation. Jackson announced he was going outside for a smoke, and he asked me to join him.\n\n\"No, it's alright, you know I don't smoke,\" I replied.\n\n\"I know that. I wanted to talk to you for a minute.\"\n\n\"About what?\"\n\nHe just gave me that look of impatience that I had seen many times before. I didn't know where this was going, but I joined him anyway.",
        "Jackson shielded himself against the strengthening wind as the flame from his lighter leaped up to set fire to his cigarette. He took a long slow drag and exhaled a set of perfect smoke rings. I shifted nervously back and forth, my hands jammed deep into my pockets.\n\nHe set his eyes on mine. \"You know, pretty boy, she's going to do it tonight.\"\n\n\"Do what?\"\n\nHe laughed silently and shook his head. \"What the hell, pretty boy? I thought you were supposed to be this real smart guy. You really don't have a clue, do you?\"\n\n\"No, I don't. And I resent the tone your using...\"\n\nJackson impatiently waived my complaint away with his hand, his lit cigarette flashing upwards in a small arc of orange light. He shook his head and chuckled again. \"Erin's probably going to kill me if she finds out I'm telling you this, but yeah, I think she's going to tell you tonight.\"\n\n\"Tell me what?!\"\n\n\"That she's in love with you!\"\n\nI let that statement sink in for a minute. All this time, with my attraction to her growing... and not once did I entertain the possibility that she felt the same way about me. Was I really that blind?\n\n\"How do you know this?\" I asked.\n\nHe shrugged. \"Just a feeling I have. It's not like that's something she'd announce to the world, you know?\"\n\n\"But you and the others, you're all friends with her. Surely she'd tell someone.\"\n\n\"Maybe Scarlett and Mel, but not the guys. And especially not me. Anyway, it doesn't matter how I know what I know. That's not why I brought you out here.\"\n\n\"Then why did you?\"\n\nHe moved closer to me until the smell of the smoke nearly overwhelmed my nostrils, and he focused his intense gaze on me. \"I can't and won't tell you what to do. If you don't want to be with Erin, let her down gently. If you do want to be with her, then treat her like the goddess she is. But I'm warning you... don't hurt her.\"\n\n\"Dude... is that a threat?\"\n\n\"No. It's a promise.\"\n\n\"I think you'd better back off, Jackson.\"\n\n\"I think you'd better watch what you say to me with your smartass mouth, pretty boy!\"\n\nI was sick of the attitude, the condescension in his voice, everything about him. I snapped. I got right up in his face and yelled \"And what if I don't, huh?! Just what the fuck do you think you're going to do about it?!\"\n\nIt happened in a flash.\n\nOne second I was standing upright, the next thing I knew Jackson had tossed me over his hip and flipped me over like a ragdoll. For the second time that Halloween day, I landed hard on my back with a crashing thump. I looked up at the night sky, trying to re-focus my vision, not quite able to speak or breathe just yet.\n\nTo his credit, Jackson's anger seemed to have flowed out of him. He reached down with a hand to help me up, and I stretched and dusted myself off before the pain could really set itself in. He sensed the look of confusion on my face and simply said, \"Brown belt in judo.\"\n\n\"Impressive,\" I gasped out in reply.\n\n\"I needed to find some way to defend myself against bullies. Martial arts seemed the way to go.\"\n\n\"Well, for some reason I seem to be the target of everyone's aggression today.\"\n\n\"What do you mean?\"\n\nI related to Jackson how earlier today Billy had tried to tackle me into next week. He just shook his head and uttered another of his favourite insults. \"Fucking Neanderthal.\" He then cast a glance my way and continued, \"Unlike what just happened, that time clearly you were not at fault.\"\n\nI gave him a strange look and he just kept staring back at me. Then we both broke up into fits of laughter. Of all the things to change the nature of this relationship, I later thought to myself.\n\nI finally started to feel like myself again. I was sore as hell but thankful to survive two hard impacts fully intact, relatively speaking. I was ready to more calmly respond to Jackson's earlier statements.\n\n\"Look, Jackson, I'm no saint, but I have no intention of hurting Erin. I've known her for a long time and I think we have a special relationship. I won't lie, I've daydreamed about what it might be like to be more than friends with her, but I honestly had no idea she'd be interested in that, so I never made a move. And now you're telling me you think she's going to be the one to make a move on me tonight. This is a lot to take in all at once, you know?\"\n\nHe nodded, stared off in the distance for a moment, took a final, long drag from his smoke and dropped the butt to the ground, crushing it under his boot heel. When he responded, he inadvertently threw me for a loop by calling me by my proper name for the first time ever.\n\n\"I'm sorry, Garrett. I haven't been friendly towards you, and I probably come off like a real jerk. I was too proud to tell you the truth that I've known for a while. You're a stand-up guy. I know you're not like some of those other Neanderthals on your football team, and I feel pretty confident you'll treat Erin right. I guess I'm just... hell, I don't know...\"\n\n\"I appreciate you telling me that, Jackson. And I get it. You're her friend and you don't want to see her get hurt.\"\n\n\"It's more than that. I'm... shit man, I'm jealous of you.\"\n\n\"Really? Why?\"\n\nI thought I saw his eyes tear up, though it was now so dark I couldn't really tell, but the wavering quality of his voice was unmistakeable. \"I love her, man. Like, I'm deeply, madly, crazily in love with her.\"\n\n\"Oh! Shit!\" I exclaimed. I did not expect him to say that. \"Hey, I'll back off if I need to. I don't want to steal her away from you. I'm not going to be that guy...\"\n\n\"No. Don't turn her down just because of me. Hell, don't even let me enter into your thought process. It's not like that with her and me at all. I swear.\"\n\n\"Oh. OK. So you... you and her never...\" I stammered as I tried to ask the question that just kept getting lodged in my throat.\n\n\"No. I asked her out the day after her 18th birthday, and she turned me down. I never told her this, but it was the worst day I've ever experienced in my almost 19 years on this godforsaken planet. She just wants to be friends with me. It's better than not having her in my life at all, but to be so close to her yet have my love for her go unrequited, do you know what kind of special hell that is?\"\n\nI just shook my head no. I had no idea how to respond to that.\n\n\"Garrett, I'm not telling you this to weird you out or anything. I understand my place with Erin. I know that she and I can never be. It hurts like hell, but I'll deal with it. I will be her friend and support and help her when she needs it, but otherwise I won't interfere in her personal life, and if you two become a couple I won't screw it up for you. I just want you to understand how important she is to me. So if you do hurt her...\"\n\n\"You'll judo toss the shit out of me, right?\"\n\nA smile curled from his lips. \"Right, and don't you forget it!\"\n\nWe shared another laugh over that. Jackson was a complex guy but I think I was finally starting to understand him.\n\nWe both turned our heads at the same time at a sound from the house. The door opened and everyone that was inside, except for Erin, came out.\n\n\"Party's moving to my place,\" announced Scarlett. Then she turned her attention to me and gave me a love tap to the shoulder. \"But not for you, big boy. Erin wants to talk to you first.\"\n\nI swallowed hard as butterflies suddenly flew in formation in my gut. I saw the knowing, sad-eyed grin on Jackson's face. I thought he was going to warn me again, but instead he gave me a pat on the back and simply said, \"Good luck.\"\n\nThen he turned away and departed with everybody else.\n\nAs for me, I needed to take a few deep breaths to settle my racing heart.\n\n**********\n\nI found Erin sitting on the couch. Her head rested in her hands, and her elbows rested on her knees. Not for the first time, I thought she looked like a lost little girl, which, in some respects, I supposed she still was. She did give me one of her small crooked smiles as I sat next to her, so she wasn't completely lost in her little world. But she did look like she had something on her mind and was very unsure of how to proceed.\n\n\"Party break up early?\" I asked.\n\nShe shrugged, trying to act all nonchalant and not quite succeeding. \"They all wanted to go to Scarlett's house.\"\n\n\"But not you?\"\n\n\"I didn't feel like going. I just wanted to stay here with you. That's OK, right?\"\n\n\"Of course it is.\"\n\nShe scooted a little closer to me, held on to my hand and leaned her head on my shoulder. It felt nice. I was taking the approach that, whatever it was she was going to say or do, it was her that had to initiate it or else everything might be ruined. I also steeled myself to the possibility that what Erin needed to say wasn't exactly what Jackson, or anyone else, thought it would be. So I tried to wait patiently for the seemingly deafening silence to end, and for her to screw up the courage to begin.\n\n\"Garrett?\" Her voice was so soft and delicate.\n\n\"Yes, Erin?\" Well, here goes nothing, I thought.\n\n\"I have something I need to tell you.\"\n\n\"OK.\"\n\n\"I don't know how to say it though.\"\n\n\"Just start from the beginning. You don't have to worry, you can tell me anything. We're friends, remember?\"\n\n\"I don't know if I can this time, Garrett. I'm afraid.\"\n\n\"It's OK, Erin. Really. Don't be afraid. Whatever it is, we'll get through it together.\"\n\nAnother brief silence ensued.\n\n\"Garrett?\"\n\n\"Yeah?\"\n\n\"Maybe if I... show you?\"\n\nI leaned back to look at her better, and I raised one eyebrow in silent question. She returned her look to me but her blank expression did not change.\n\nIf I wasn't nervous before, I sure as hell was now.\n\nShe got up and flipped through some CDs before selecting one and loading it into the stereo system. She then turned to face me and take a couple of deep breaths to settle her growing nerves.\n\n\"This is going to sound weird...\" she started.\n\n\"I should be used to that around you, though. Shouldn't I?\" I retorted, hoping to keep the mood as light and fun as possible under the circumstances.\n\nAgain, that smallest hint of a smile, a look I had seen on her face quite a few times. \"I guess so.\" She lowered her head and extended a small, delicate hand before speaking again. \"But... uh, I was hoping... do you want to... um, slow-dance with me?\" \n\nNow I was intrigued. This was an unusual request from Erin. \"Really? Slow-dance?\"\n\n\"Yeah. I'm serious about this. Deadly serious, even.\"\n\n\"Since it's Halloween and all, right?\"\n\n\"Yeah.\"\n\n\"Hmmm. OK. Sure. I'd love to.\"\n\nI took her hand and we moved to the centre of the room. She pressed play on the stereo remote control, tossed it on an empty chair, and immediately melted into my arms.\n\nI had known for some time that Erin had very different and interesting tastes in music. Most of the time, I ended up liking her musical choices a lot. This instance was no different. The song rumbling through the speakers did have a slow tempo, but otherwise it sounded completely unlike any slow song I ever heard before.\n\nThe squalling, strangely-tuned guitars were gloomy, doom-filled, unrelenting. The bass and drums pounded a line that would have been in time with a lumbering Frankenstein. The vocals were buried so far under the sonic assault that I had a hard time deciphering them. The song was a crawling, slithering beast; it sounded like the ballad from Hell.\n\nIt was the perfect slow-dance song for a Halloween night. And I loved it.\n\nWhat I loved more was Erin's tight, petite frame pressed into mine. She kept her head buried into my shoulder and she had a tight grip around my waist. Even through our clothing, I could feel her nipples harden and dig into my chest. I could also feel her body vibrating against me just a little bit. It gave me a sense of how nervous she must have been. In her own unique way, she was putting her heart on the line for me and I'm pretty sure she had no idea how I'd respond.\n\nShe was an intoxicating combination of anxiety and arousal. Part of me loved the feeling of power that reared up inside me as a result of holding this vulnerable creature in my arms. I had to keep that in check, however, for fear of completely ruining everything. It felt like something momentous was going to happen tonight and I needed to quickly search my heart to confirm my feelings and be sure what I would do when that moment came.\n\nThe song came to an end, but Erin didn't let go. She looked up at me with her huge, expressive eyes, and I saw that her cheeks were tear-stained. \"Well?\" she asked.\n\n\"Never heard that song before. It was really good.\"\n\nThere was just a hint of exasperation and quiet desperation in her reply. \"That's not what I meant. It's a... love song.\"\n\nWhew. OK. So it really was happening...\n\n\"Oh. Sorry,\" I apologized. \"I couldn't really make out the words, it was kind of hard to understand what he was saying.\"\n\nShe thought for a moment before retreating to her bedroom. She came out holding a folded piece of paper and handed it to me. I took the paper, unfolded it and read the words on it in her own familiar handwriting.\n\nFinal Breath\n\nMy love is like a red, red rose\n\nThat's newly sprung in June\n\nMy love is like the melody\n\nThat's sweetly played in tune\n\nSo fair are you my dear\n\nSo deep in love am I\n\nAnd I will love thee still, my dear\n\n'til all the seas run dry\n\nUntil the rocks melt with the sun\n\nAnd I will love thee still my dear\n\nWhile the sands of life shall run\n\nAnd I will come again my love\n\nThough it were ten thousand miles\n\n'til the seas run dry...\n\nI was struck with the intensity and familiarity of these words. \"These words, are they not based on...\"\n\n\"... a poem by Robert Burns that we learned in last year's English class?\" she finished my thought for me. \"Yes, yes they are.\"\n\nThe moment of truth was at hand. I set the page on an end table, took a deep breath and looked at Erin. Her hands were clasped behind her back and her head was bowed low, making her look like she was throwing herself at the mercy of a judge, pleading for leniency.\n\n\"You played this song for me, and showed me the words... Erin, this is how you wanted to show me what you wanted to say to me, right?\"\n\nShe nodded, keeping her head bowed down.\n\n\"Erin, look at me.\"\n\nSlowly, she did as I asked.\n\n\"I want to hear you say it. Please?\"\n\nHer eyes met mine as I said that last word. I was hoping she could see the sincerity in my face and draw some strength from that.\n\n\"Garrett?\"\n\n\"Yes, Erin?\"\n\n\"I love you.\"\n\nFinally, it was out in the open, without a shadow of a doubt. But before I could respond, she spoke again, the words tumbling out of her mouth in a passionate whirlwind.\n\n\"Oh my god, you don't know how long I've wanted to tell you this! I've known you were the love of my life since we were kids! When I moved away with my family it was the worst day of my life! I thought I'd never see you again. But then we moved back and I thought maybe I'd have a second chance, and I... I... my god Garrett, I love you so much!! Please feel the same way... if you don't, I don't know what I'll do... I would be just...\"\n\nThe rest of her thoughts remained unsaid as she buried her head in her hands and sobbed. I had to think quickly. How sure was I that I wanted what I did? Was I just seeing an opportunity to take advantage of Erin with her crying and defenceless right in front of me, or did I REALLY want what my heart insisted I did with pure and noble intentions?\n\nThen I smiled, and a sense of calm descended on me. I knew what I had to do.\n\nI gently held Erin by the wrists and slowly pulled her arms down to her sides. I removed her veil, put my finger under her chin and softly lifted her head up so she could look at me. Her doe-like eyes were brimming with tears, but there was a tinge of hope in them that wasn't there before. It hit me once again just how beautiful she was. She was a real woman, very sexy and very desirable.\n\nAnd very much mine.\n\nI leaned down to kiss Erin for the first time. It was a soft kiss; our lips barely brushed against each other's, but it said so much. Our foreheads were touching as I smiled at her and caressed her cheek with my fingertips. I moved my hand to hold the back of her head to draw her in to me for another kiss.\n\nMagic.\n\nIt started just as soft as the first. It grew in desire, but not wildly so. We were still experimenting, exploring the feel and taste of each other. It was still easily the best kiss of my life.\n\nWe broke for air. The look on Erin's face was priceless. She was breathing heavily and grinning in warmth and excitement. If she felt anything like I did then her heart was also pounding a mile a minute.\n\nShe initiated the next kiss. I felt her lower body tense up slightly as she reached on her tiptoes to put her lips on mine. Those lips were lush and soft, and her scent was pure and sweet and all woman. I could feel my manhood respond to our intimate actions.\n\nErin grew bolder after my response to her expression of love for me. She gently yet confidently pushed me backwards until my legs touched the couch. I sat down and she immediately straddled me. She held my face in her hands and I let my arms rest where they were comfortable, on her firm little butt.\n\n\"I didn't hear you say it yet,\" Erin murmured, which momentarily brushed aside my thoughts about her butt or any other part of her anatomy.\n\n\"Pardon me?\"\n\n\"I said, I didn't hear you say it yet.\" This time I picked up her meaning. Despite the mild reproach she did not look unhappy. Far from it, in fact.\n\n\"That I love you? Because I do, you know. I love you, Erin.\"\n\nHer face lit up in happiness. God, she looked so beautiful, smiling like that. It was a sight I hadn't seen nearly enough since she came back in my life.\n\nWe kissed again. Her hands traveled down from my face to rest on my chest, while my hands were filled with her rear end; my touching and groping it caused Erin to moan softly in appreciation. Her lips parted and she hesitatingly stuck out her tongue. I gratefully met it with my own.\n\nErin and I spent the next several minutes like this. Kissing, duelling tongues, tasting each other, hands softly touching and caressing each other. Soft sighs, moans of happiness, panting, heavy breaths, sounds of lips smacking on lips. Heat and arousal radiating from our bodies. Full of tenderness and passion. It felt right, sweet, natural.\n\nShe slipped her hands under my shirt and ran them over my bare chest. The touch was electric; I felt my erection grow harder and longer in response. She took hold of the bottom of my shirt and pulled up. I raised my arms to make it easier for her to remove it. She pulled the garment over my head and tossed it behind her. A soft sigh escaped her lips, and her fingers softly brushed my chest and abs.\n\n\"I may not like football,\" she whispered into my ear, \"but I love what it's done to your body.\"\n\nI was certain my face was bright red from blushing. \"Thank you,\" I answered.\n\nShe pressed her hands a little harder into my sides. Unfortunately one of them pressed right into the spot where Billy hit me in practice. Even though her touch was gentle, it just hit the absolute wrong place, and I winced in pain. Concerned, she looked at my ribcage and surely saw the bruising there. She gasped loudly.\n\n\"My god! You poor thing. What happened?\"\n\n\"Football practice this morning. Billy stepped out of line and tried to act like a tough guy. Hit me helmet first right here.\"\n\n\"Fucking bastard,\" she spat out.\n\n\"Yeah. I'm fine though.\"\n\nErin tenderly kissed my bruise. It was a special sign of how much she loved me and was concerned for me. I'll never forget that she did that for me for as long as I live.\n\n\"You sure you're OK?\" she asked.\n\n\"Yes. Just don't kick me there and I'll be OK.\"\n\nThat made her smile, but there was sadness in her eyes. I think she was reflecting on how cruel some people could be for no good reason and the general unfairness of life. Or maybe that was just me projecting.",
        "\"Erin?\"\n\n\"Mmhmm?\"\n\n\"What are you thinking right now?\"\n\n\"How much I'd like to see you beat the shit out of Billy.\"\n\nI guess I wasn't projecting, after all.\n\n\"I want to give you something else to think about.\"\n\n\"Yeah?\"\n\nI engaged her in another kiss, one filled with love and desire and the promise of so much more.\n\nWith a satisfied sigh she breathed, \"I like that thought much better.\"\n\n\"I thought you would.\"\n\n\"Garrett?\"\n\n\"Yeah?\"\n\n\"I want to do... more with you.\"\n\n\"Yeah. I really want to do more with you too.\"\n\n\"Yeah. But...\"\n\n\"What?\"\n\n\"I'm nervous.\"\n\n\"Why?\"\n\n\"I've... never gone this far with anyone before.\"\n\nI gulped, a little worried about how Erin would respond to what I had to say. \"I can't lie to you, Erin. I'm not exactly experienced myself.\"\n\n\"Really? I thought for sure you would have... you know... because you're on the football team and cheerleaders and other girls were always around you and you're so popular and...\"\n\nI placed a finger on her lips to quiet her, and then shook my head. \"I've never gone this far with anyone else either. I swear.\"\n\nErin's eyes grew wide as what I had said sunk in. \"Oh god.\"\n\n\"Yeah.\"\n\n\"Garrett?\"\n\n\"Yes Erin?\"\n\n\"I just decided something.\"\n\n\"What's that?\"\n\nShe kissed me hard. Her face was flush with passion. \"I want you so much that I don't care about being nervous. I don't want to stop.\"\n\nI patted her ass lovingly. \"Good. I don't want to stop either. I was thinking...\"\n\n\"Yes?\"\n\n\"Maybe we could start with me seeing... more of you?\"\n\nErin eased herself off my lap. She smiled seductively but there was still a na\u00efve innocence to her as she disrobed. She unbuttoned her blouse, undid her skirt and let both pieces of clothing pool at her feet. My eyes widened and my breath caught in my throat as I beheld this gorgeous angel before me.\n\nThe colour of her lingerie was no surprise, but the lacy black bra and panties were accented with cute pink trim, embroidery and ribbons. The bra hid the swell of her breasts, which were better-than-average size for such a small woman. Her panties covered her most hallowed place just well enough... but, of course, too well for my current way of thinking. The contrast with her soft, creamy skin was obvious, but just the fact I could see so much more of that skin than I did before... well, let's just say my jeans were by now uncomfortably tight.\n\nI stood up to touch her again. She nuzzled her face into my hand. \"I like the pink,\" I said. \"It's a nice touch.\"\n\n\"I wanted to look pretty for you, Garrett.\"\n\n\"You look more than pretty, Erin. You look stunningly beautiful.\"\n\n\"I don't know about that.\"\n\n\"Well I do know. You're gorgeous. I won't hear you say otherwise.\"\n\nShe was full-out blushing now. \"Thank you. But you! You look so masculine, so strong and handsome. You're making me feel really warm all over.\"\n\nI watched in awe as she stroked her pussy through her panties. \"Especially down here,\" she purred.\n\nI let out a low growl and held her in close to me. \"God, you have no idea what you're doing to me right now!\"\n\nTo my surprise and delight, I felt one of her hands fondle my erect cock through my jeans. I gasped and my body buzzed with excitement at her soft touch.\n\n\"Actually,\" she breathed, \"I think I am starting to get a good idea.\"\n\nShe continued to massage my hard-on in slow, sensual circles. She closed her eyes and bit her lower lip, and at that moment, with her erotic actions and the subtle yet still noticeable increase in her confidence, I thought she couldn't look any sexier. I felt roughly a million times more turned on than ever before.\n\n\"Let me make love to you now, Gare.\"\n\nI nodded, certain Erin could see the desperate need on my face.\n\nShe took my hand and wordlessly led me to her bedroom. A thought suddenly occurred to me. Of all the damn times, I thought... but at the same time it did need to be addressed.\n\n\"Will your Mom be home soon? I'd hate for her to interrupt us.\"\n\n\"Oh. I guess I forgot to mention it. She's visiting my aunt for a couple days. She won't be back until Saturday.\" She paused. \"Your parents know you're staying out late, right?\"\n\nI smiled. \"Yeah, I asked them if I could stay overnight and sleep on your couch so I could help you clean up tomorrow morning before school. They seemed OK with that. I'm a gentleman, you know.\"\n\nShe giggled, a musical sound if I ever heard one.\n\n\"Garrett?\"\n\n\"Yes Erin?\"\n\n\"Can we not talk about our parents now?\"\n\n\"OK. Good idea.\"\n\n\"Good. I... want to try something now.\"\n\n\"OK.\"\n\nHer lips and fingertips gently brushed down my chest and stomach with a feathery touch. Her hands stopped at my jeans. She undid my belt buckle and the jeans button, and unzipped the fly. She grasped my jeans and boxers with both hands. She raised her eyebrows to me as if to ask for permission to take them off.\n\nYeah, as if I was really gonna say no.\n\nI gave her a slight nod, and in one fell swoop she pulled both garments down. I stepped out of them and sat on the edge of her bed. My cock was achingly hard and it stood up straight, begging for attention.\n\nErin stared at my hard-on in wonder. She dropped down to her knees and wrapped her delicate fingers around my cock. She studied it for a second and then started to stroke me, and it was all I could do to hold back from exploding right then and there.\n\n\"Oh god Erin!\" I cried out.\n\n\"Does that feel good?\"\n\n\"Hell yes!\"\n\n\"It's so big... I don't know how it will fit inside me,\" she whispered, and my cock twitched at the sound of that.\n\n\"We'll figure that out when the time comes. OK?\"\n\n\"OK. Garrett?\"\n\n\"Yeah?\"\n\n\"Am I doing this right?\"\n\n\"You're doing amazing,\" I said between short, excited breaths. \"If you want, though, I've heard that if you twist your wrist just like this, that it feels really good too.\" I showed her the motion I was talking about.\n\n\"Like this?\" she asked and mimicked my instructions.\n\n\"Oh yeah, that's... uhhhhhhh!\" I leaned my head back and groaned. The sensations Erin was giving me were amazing, almost unbearably so.\n\n\"I love how I'm making you feel so good,\" she said.\n\n\"Baby, you're incredible!\" I replied, trying to control myself and make the pleasure last longer.\n\nShe became even more focused on stroking my throbbing cock. It looked like she was mesmerized by the sight of it. She reached her head forward and gave the head of my cock a short, almost experimental, lick. She must have liked, or at least not been turned off, by what she found, for she then dragged her tongue along the sensitive underside from stem to tip.\n\nIt was all too much for me. \"Erin! FUCK! Gonna... cum!!\" I shouted.\n\nShe didn't stop her ministrations. It just took a few more strokes and then I exploded and, surely, yelled loud enough to wake the dead. The first volleys of my seed fired straight up in the air and landed with soft splats on my thighs. More of it shot out and hit her shoulder, while the rest of it flowed out and covered Erin's hand until she milked all she could out of me.\n\n\"Wow,\" she breathed. \"That was... intense.\"\n\nI felt too euphoric to speak coherently. I just nodded.\n\n\"Did you like that?\"\n\nAnother nod.\n\nShe giggled. \"I guess it's true when they say men turn dumb when they think with this head,\" she said as she pumped my softening cock once, before rapping her knuckles on my temple, \"instead of this head!\"\n\nBefore I could think of a good wisecrack in response she dashed off to the bathroom and grabbed a towel to clean the mess off our bodies.\n\n\"Erin?\"\n\n\"Yeah?\"\n\n\"It's my turn. I want to make you feel good now. I hope I can.\"\n\n\"You will. Anything you do to me feels good.\"\n\n\"Are you ready?\"\n\n\"I think so.\"\n\n\"You think so?\"\n\n\"Yeah. I want you to make love to me, so bad. I'm still nervous though. No man has ever seen me naked.\"\n\nI took her in my arms and kissed her deeply. \"I'm honoured to be your first.\"\n\n\"I hope you think I'm pretty enough for you.\"\n\nIt surprised me a little that the self-assurance she showed earlier seemed to fade, but it just made me more determined to build her back up.\n\n\"Of course you are. You're so amazing, so beautiful. More beautiful than any other woman in the world.\"\n\n\"Really? You mean that?\"\n\n\"Yes, absolutely. Because I know it in my heart. I love you, Erin. That's how I know.\"\n\n\"I... I love you too, Garrett.\"\n\nHer eyes welled up with tears. One of them rolled down her cheek. I kissed it away. I left a trail of kisses from her face down to her neck. I kissed, tasted and suckled at her earlobe and supple neck flesh; she happily sighed in response.\n\nMy hands traveled to her bra-covered breasts. I cupped and massaged the pert orbs. \"Can you take this off for me, baby?\" I asked sweetly.\n\nShe undid the catch in the back and removed the bra, revealing her breasts in all their glory. They were perfect round handfuls, topped with small, beige areolae and pink nipples, which were now aroused and proudly extended forward.\n\n\"Oh Erin! God, they look incredible,\" I whispered. I touched her bare breasts, feeling the wondrous firm globes, visually giving them the love and reverence they deserved. I captured a nipple in my mouth, licked and teased the hard nub with my tongue and gently scraped it with my teeth.\n\n\"Ohhhhh yes!\" Erin cried. Her legs grew weak from that touch alone. I caught her before she fell and sat her on my right thigh. I gasped at how hot her panty-covered mound felt on my leg. She was absolutely on fire down there.\n\nI continued licking, kissing, tasting and suckling on her breasts. Anything I could think of that I thought would feel good for her, I tried. Her moans of encouragement were frequent and spurred me on further. I got a little careless though, and I bit down on a nipple a little too hard.\n\n\"Oh god!\" she screamed.\n\n\"Sorry Erin! Did I hurt you? I'm so...\"\n\nThe fiery look in her eyes stopped me in my tracks. \"No! Do that again!\"\n\nNot the reaction I expected, but I wasn't about to argue. I bit and pulled at her other nub with my teeth, and she loudly squealed again. I kept up this treatment, eager to keep pleasing her. Her rapid, shallow breathing was hot in my ear. A soft sheen of sweat covered her pretty face, and she was now so turned on she was dry humping my leg and leaving a slick trail of wetness on my thigh. She smelled like sex and my hormones nearly raged out of control.\n\n\"Garrett?\" Her voice was high-pitched and dripping with need.\n\n\"Mmmm?\" I asked, my mouth currently filled with a perky breast.\n\n\"Please... more...\"\n\nShe couldn't articulate what she wanted, but I had an idea that played in my head; I knew what I wanted to do next.\n\n\"Can you stand up for me?\" I asked. She nodded, but didn't look too convinced that she was capable of such a simple action in her current state.\n\nI eased her off my leg and set her on her feet, holding her by the waist in case she fell. I climbed off her bed and moved in behind her.\n\n\"I'm going to take your panties off now,\" I spoke in a husky whisper.\n\n\"Yes... please, Garrett...\"\n\nI slid the thin lacy garment down her smooth legs. The panties were sopping wet. Her musk filled my nostrils again and my cock was stirring to life once more.\n\nErin had placed her hands on the mattress to support herself and, whether she intended to or not, she presented her ass to me. It was just as beautiful as the rest of her. I kissed and licked both cheeks. It was exhilarating to feel and taste her soft yet firm body in such an intimate area. That exhilaration drove me to take a chance.\n\nMy hand cupped her mound and I drew my middle finger across her pussy, slowly, from top to bottom.\n\n\"OhmigodYES!\" Erin squealed.\n\nExactly the response I was looking for.\n\nI tasted the plentiful wetness on my finger. It was way better than I had ever dreamed of, more addictive than any narcotic I could find on the street. I had to have my fill, and more.\n\n\"Lie down on your bed for me.\"\n\nWith unsteady legs she did as I asked. I gazed at her most private place. Her mound was puffy and glistening with arousal. It was topped by a trim, downy thatch of blonde hair, which caught me off guard for a moment. I'd known her for so long with black hair I'd nearly forgotten she was an actual blonde.\n\n\"Erin?\"\n\n\"Yeah?\"\n\n\"You're so beautiful down there.\"\n\n\"Thank you...\"\n\n\"I'm going to make you feel really good now.\"\n\n\" 'K. Hurry. Please.\"\n\nShe spread her legs wide to invite me in. I took hold of her under her thighs and dragged my tongue all across her pussy. Her lips parted open just enough to see her valley of pink. I tasted her love juices directly from the source. She was wriggling beneath me and cooing sounds of encouragement. I could tell she was enjoying what I was doing, how I was kissing, sucking and nibbling all over her pussy, but I hadn't quite found her real sweet spot, the area where, if touched, she would go off like a rocket. \n\nThen I did find it, though completely at random. \"Ohgod ohgod!\" she screamed.\n\n'Shit!' I thought to myself, 'if only I could remember how I did that!\" I resumed my quest yet again. Now, though, Erin was more aware of how her body would react what I was doing, and she leaned up on her elbows to get a better look and started directing me where to go.\n\n\"Oh Garrett, that's good... a little higher though... little higher...please lick me there...\"\n\nI could just make out the emergence of her clitoris poking out from its hood. Was that where she was directing me to? I gave that area a quick flick of my tongue.\n\n\"YES!\"\n\nI guess it was!\n\nI kept licking her pussy all over but I made sure to give her the area around her clit plenty of attention too. She was now really squirming all over and I had to strengthen my grip on her to try and keep her in place. Her squeals and cries were growing in volume and intensity. She was so tantalizingly close now. My tongue rapidly flicking across her button brought her that much closer.\n\n\"Fuck! Garrett... my god... so good!\"\n\n\"Ready to cum for me, Erin?\"\n\n\"Yes! Pleeeeeease!!\"\n\nI was hungry for her orgasm now, eager for her to feel the same ecstasy she gave me earlier. I fed ravenously, my wet tongue a blur across her sex. Her legs wrapped around my neck in a desperate effort to draw me in even closer.\n\nThen all at once Erin stiffened and her pussy contracted beneath me. She announced her orgasm with the loudest yet most adorable high pitched squeak I ever heard. She collapsed and fell limp on the bed as her climax gave way. Her body shuddered from the aftershocks and her chest rose quickly up and down with the deep breaths she was taking. A feeling of pride surged through me knowing that I could have that kind of effect on a woman.\n\nI crawled up and lay beside her on my uninjured side to watch her recover. She tried to talk a couple of times but couldn't form the words. Only on the third attempt could she manage that feat.\n\n\"Holy shit, Garrett! Wow. Scarlett told me she loves it whenever Kory goes down on her and that I would love it when someone did it for me, but my god I had no idea! You were amazing!\"\n\n\"Thanks, Erin. It was incredible watching you and listening to you cum.\"\n\nShe blushed brightly. \"You mean that little squeaky thing I did? God that's so embarrassing...\"\n\n\"Oh no. Don't you even think that. I loved it. I would do anything to hear you make that sound again and again.\"\n\n\"OK. As soon as I finish recovering, you just might get that chance.\"\n\nWe smiled and quietly enjoyed being naked with each other. Soft touches, caresses and kisses were all we needed for a while. But of course that didn't last. Our passion and desire re-ignited and our heated embraces only served to fan those flames.\n\n\"I'm ready, Gare. I want you inside me,\" she crooned between kisses.\n\nI was elated. And sporting a massive erection.\n\nThen one unbidden thought entered my mind which stopped me in my tracks. I buried my face in my hands.\n\n\"What's wrong?\" Erin asked.\n\nI forced myself to look at her. \"I'm sorry Erin, I never expected that we'd go this far tonight. I'm unprepared... I don't have any protection, and I...\"\n\nWith one look at her face any further words dissolved on my tongue. Instead of being upset, she gently smiled, placed a hand on my shoulder and tenderly kissed my cheek. She reached into a drawer of her night table and pulled out two items. She proudly presented them to me.\n\n\"Trick or treat!\" she sang. It was a three-pack of condoms and a small bottle of water-based lube.\n\nThe realization momentarily stunned me, but not for long. I hungrily tongue-kissed Erin and heard her whimper in my mouth.\n\n\"Thank you baby, this will definitely be an amazing treat!\" I said.\n\n\"They are Halloween gifts from Scarlett and Mel. You can thank them later.\"\n\n\"I will.\"\n\nI unwrapped one of the three small square packages and wrapped my manhood in latex. She applied some lube to both my cock and her pussy to add to her natural lubrication, just to make sure my entry into her would be as easy and painless as possible.\n\n\"You're sure you want to do this?\" I asked Erin.\n\n\"Yes, absolutely.\"\n\n\"How should we do this?\"\n\n\"Can... can I be on top?\"\n\n\"Of course. You're so cute when you're nervous, you know?\"\n\nShe blushed and stuck her tongue out at me, which made me laugh. I laid on my back and let her climb on top of me. We gazed at each other with love in our eyes as she positioned her pussy just above my hard cock. She closed those big blue eyes and sank lower. I watched the condom-covered head stretch her outer labia before penetrating her no-longer-virgin pussy.\n\nOh god. Words could not describe, could never describe, this feeling.\n\nSlowly and carefully, Erin eased herself further down my shaft. Half an inch here, quarter of an inch there. I was in no mood to rush her and was happy to let her control the pace. She stopped to rest, and to my amazement, nearly all of my cock was buried inside her.\n\n\"Wow,\" I whispered.\n\n\"Wow is right, Gare.\"\n\n\"Are you OK?\"\n\n\"Yes. It didn't hurt as much as I thought it would for my first time.\"\n\n\"Good, I'm glad.\"\n\nShe wriggled to adjust her position which sent short bursts of intense pleasure through me.\n\n\"Just trying to get used to you inside me,\" Erin whispered. \"You're so big. I feel so full.\"\n\n\"Does it feel good?\"\n\n\"Incredible! How does it feel for you, Gare?\"\n\n\"Amazing! You're so tight and hot, it's unbelievable. I just hope I can last long enough to make this night very special for you.\"\n\nErin leaned down, grasped my hands and laced our fingers together. Her angelic face hung just above mine; I rose up to kiss her.\n\n\"It's already special, because it's with you,\" she assured me.\n\n\"This is so much better than I even dreamed it would be, Erin, because it's with you.\" \n\n\"I never wanted my first to be with anyone else but you, Gare.\"\n\n\"I love you, Erin.\"\n\n\"I love you too, Garrett.\"\n\nIt was almost imperceptible at first, but I eventually felt her move up and down my erect penis. The friction from even these small movements was heavenly. Her soft moans and sighs clearly indicated she was feeling the same way. I continued to let her dictate the tempo; in the back of my mind I was still concerned with hurting her, but by this point it was more about ensuring her pleasure.\n\nShe soon more actively sought that pleasure, increasing her speed and depth until she was quickly bouncing up and down my cock. I held her by her slim hips to help guide her movements.\n\n\"Oh god... really fucking you... so good!\" she squealed.\n\nErin was the vision of sex. Eyes shut tight, strands of hair stuck to her sweaty forehead, firm breasts jiggling up and down, thighs tense and hard from exertion, whole body contorted in pleasure and ready for ultimate release. God she was so close now.\n\n\"Come on Erin, come for me baby!\" I gritted through my teeth.\n",
        "She let out another squeak and surrendered to another trembling orgasm. Her juices dripped down my latex-covered cock until I felt their warmth further down my groin. Her body slumped forward and I caught her in my arms and held her tight.\n\nAmazingly, I had not come while she did. I craved for my own release but I resolved to myself I would not push for it if she was not ready, willing or able to continue. She, however, had different ideas.\n\n\"Garrett?\"\n\n\"Yeah?\"\n\n\"You... didn't come yet?\"\n\n\"I waited for you. Ladies first and all that.\"\n\nShe thought for a moment before replying.\n\n\"I want you to come too.\"\n\n\"Don't feel like you have to do this for me. If you want to wait...\"\n\n\"Shhhh,\" she silenced me. Then she did the most amazing thing. She flexed her inner walls and contracted her pussy around my achingly hard cock. The pleasure was indescribable.\n\n\"It's your turn now, Gare,\" she purred.\n\n\"Oh god, Erin!\"\n\n\"Fuck me, Garrett. I know you want it. I want it too. Come for me baby! Fuck me!\"\n\nHer dirty talk lit a fiery animal instinct in me. I rose up and drove myself inside her mercilessly, without regard for anything except my pleasure, as was her command.\n\n\"Yes! That's it!\" she egged me on. \"Fuck me! Fuck your little goth princess!\"\n\nThat last, mind-blowing statement sent me over the edge. With a loud cry of \"ERIN!\", I arched my back and thrust inside her one last time. I surrendered to the tremendous orgasm that powered through my body, and surely the latex condom strained to hold strong against the thick strands of cum that fired out of my cock. I fell back on the bed, utterly spent, seeing stars and lost in a sweet daze of joy, holding on to my beloved Erin and never, ever wanting to let go.\n\n**********\n\nI wasn't sure how long it took me to recover. I looked at Erin. Her eyes were closed and she was smiling sweetly, looking like she didn't have a care in the world. Her arms were lovingly wrapped around my shoulders, as were her legs around my thighs. I didn't want to disturb this moment, but I had to, if only briefly.\n\nI attempted to get up, but Erin squeezed tighter and held me down with surprising strength. I tried once again and encountered similar resistance.\n\n\"Please, don't,\" she whispered.\n\n\"I need to get up, just for a second. I'll be right back, I swear.\"\n\n\"But... I don't want to let go.\" She put on her best little girl face, complete with puppy dog eyes and lower lip pushed out.\n\nDamn. How was I supposed to say no to that?\n\n\"OK. Ride me piggy-back style?\"\n\nErin's sweet smile widened again. I sat up and she maneuvered to hold on to me from behind. I carried her on my back as I properly disposed of the condom. We returned to her bed and, after some careful shifting, we naturally fell back into our previous position, one that I was sure would be a favourite of ours; I on the bottom with her on top and draped all over me.\n\n\"This is nice,\" she said.\n\n\"Very nice,\" I agreed.\n\nShe grew quiet, and it looked like she was contemplating something.\n\n\"Erin?\"\n\n\"Yeah?\"\n\n\"What are you thinking right now?\"\n\n\"I'm thinking that I'm ready.\"\n\n\"Ready? For what?\"\n\n\"To tell you what I couldn't back then, when I found you again. To tell you everything that happened to me.\"\n\nI wasn't sure I was ready for this. \"Erin, I want you to tell me, but are you sure this is the right time?\"\n\n\"Yes. It has to be now. I love you, Garrett, and I want to share everything I have, everything I am, with you, even the bad stuff. And if I don't say this now, I might lose my nerve and I might never tell you. I can't let that happen. Please?\" \n\nI nodded and gently kissed her nose. \"OK. I'm listening.\"\n\n\"OK. You remember how we wrote back and forth regularly for a while, then I just stopped?\"\n\n\"Yeah, I do.\"\n\n\"You can blame my dad for that.\" She sighed heavily before continuing. \"That promotion he got was the worst thing that could have happened for all of us. My dad was under a lot of pressure from that damned job, and he didn't handle it well. He started drinking. Social drinking at first, then it got worse and worse, until he became a full-out alcoholic. And he was an abusive alcoholic. He'd yell at Mom all the time. He even beat her and hurt her pretty bad a couple times. He started in on me, too. He didn't physically hurt me like he did Mom, but the verbal abuse was horrible. He called me stupid a lot and said I'd grow up a worthless whore.\n\n\"One night he caught me trying to go out and mail one of my letters to you. He had already downed one bottle of whisky and was working on a second. He said he'd be damned if he let me whore myself out to some guy. I tried telling him it was just an innocent letter to you, tried to make him remember you, but it was no use. He took a lighter and burned the letter in front of me, then he grabbed a hammer and smashed our laptop computer so I couldn't e-mail you either. I know I could have maybe e-mailed you from school or somewhere else, but I was so afraid of him. The fear took control of me and paralyzed me.\n\n\"No matter what we did, it wasn't good enough. Towards the end he wouldn't stop, the abuse got worse and worse. Can you imagine what that's like, being so afraid of someone that you can't live, that anything you do will result in you fearing for your life?\"\n\nI was absolutely stunned. I remembered her father; he seemed like a decent enough guy, perhaps a bit too strict but nothing outrageous. To hear about this monstrous behaviour he inflicted on Erin and her mother was beyond my ability to comprehend.\n\n\"So... what happened? How did you end up back here?\"\n\n\"He ran out of booze one night and went to the liquor store to get more,\" she said in a flat, emotionless voice that stood at stark contrast to the heartbreaking tale she told. \"He was shitfaced, in no condition to drive, and even with everything he did to her my Mom pleaded with him to stop, but he just slapped her and shoved her to the ground. He ran a red light a few blocks away and crashed his car into traffic. He nearly killed the driver of the other car. Last I heard he was convicted of DUI causing serious injury, or something like that, and is rotting away in jail somewhere.\n\n\"Mom came to her senses and got a divorce, it was pretty easy with all that had happened to us, to her. She didn't know anybody in that damned place and just wanted to get the hell out, and I didn't blame her. She moved us back here because it was all that we knew. And, well, you know the rest.\"\n\n\"Not quite all of it. I do have another question.\"\n\n\"OK.\"\n\n\"I'm curious... how did you... get into the whole goth thing?\"\n\n\"It's OK, I don't mind telling you. I was just starting high school when things were getting really bad at home. I didn't know anybody, had no one to trust, and felt that no one cared. Then I met Madison. I thought she was strange at first and I tried to push her away, but she kept at it. She told me that I looked so sad that she wanted to make it her personal mission to help me.\"\n\n\"I'm glad she did.\"\n\n\"Yeah, if it wasn't for her, I don't know what I would have done. The more I talked to her, the more I liked her, and the more I became interested in her goth lifestyle. I asked lots of questions, she answered them honestly, and I liked what I heard. I knew in my heart it was the right choice for me.\"\n\n\"Did you know there was a group of kids like you here?\"\n\n\"No. I got lucky. I told Madison that Mom and I were moving here, and she told me that she had a cousin here who would help me fit in. Scarlett is Madison's cousin. When I moved in here in the summer before junior year, I met Scarlett, she introduced me to everyone else and we all became friends.\"\n\n\"Hold on a second, Erin. You said you moved here in the summer, but I didn't know you were here until you showed up by my locker about a week into class.\"\n\n\"I know. That was the only time I regretted even for a little while becoming goth. As soon as we moved back here I wanted to run right to your house and hold you, but I was scared you'd reject me because I was so different. About a thousand times I wanted to see you, even if just to say hi, and a thousand times I chickened out.\"\n\n\"But on the thousand-and-first time, you mustered up the courage to do what your heart wanted.\"\n\n\"Yeah, and I fucked it up pretty bad after what that asshole Billy said.\"\n\n\"Well, nobody's perfect. And I lied about knowing you at first, so I almost fucked it up before you did. Besides, you made it right the next day.\"\n\n\"Only because you let me. You let me, and you made me whole again.\"\n\n\"You make me feel complete, too. Erin, I'm sorry you and your Mom had to go through all that shit with your father. I'm sorry that some kids at your old high school and some of the ones here are such idiots. I wish there was something I could do to take all the pain away from you.\"\n\nShe closed her eyes and softly, sweetly, kissed me. \"You've already done so much for me, Garrett. But if it's not too much to ask, there are two other things I need you to do, it would mean so much for me.\"\n\n\"Just name them. Anything at all.\"\n\n\"Keep being the good person that you are. And keep loving me. That's all I ask. Can you do that?\"\n\n\"For the first part, I'll try my best. As for the second, that will be easy. I love you, Erin, and I don't ever want to stop loving you.\"\n\n\"That goes double for me, Gare. I love you too, so, so much.\"\n\nWe kissed to cement our new-found yet deep love for each other. I felt honoured that she chose to open herself up, share her pain and bare her soul to me. I thought about the sequence of events, all the things that had to go right, the myriad number of coincidences, how everything had to pile up in just the right way, in order for Erin to come back into my life again and eventually become the love of my life. And on Halloween of all days. Sometimes the truth really is stranger than fiction.\n\nErin's heavy sigh broke my concentration. \"I wish we didn't have to go to school tomorrow.\"\n\nI was about to agree with her until the devious part of my mind started to turn. I looked at Erin and saw the sparkle in her eye and the mischievous grin on her face that almost certainly matched mine.\n\n\"What are you thinking about in that head of yours, Gare?\" she teased.\n\n\"I was thinking it might be fun to play a little hooky,\" I replied.\n\n\"Oooh,\" she whispered and kissed me. \"I like the way you think.\"\n\n\"I thought you might. I do have to go on Friday, because it's game day and Coach has a rule that if we don't show up to class on game day we don't play.\"\n\n\"That's OK. I know football is very important to you. I don't want to keep you from something you love.\"\n\n\"Thanks. But I think I have built up enough goodwill with Coach, my teachers and my parents to get away with taking tomorrow off.\"\n\n\"Well I'm glad that's settled, Gare.\"\n\n\"Me too, Erin.\"\n\nShe shifted her position slightly, and I felt her body brush up against my awakening shaft. \"Garrett?\" she quietly asked.\n\n\"Yes Erin?\"\n\n\"You're... hard again.\"\n\n\"Guilty as charged. In my defense, I am naked and I have a hot naked babe lying on top of me.\"\n\nShe giggled and kissed me full on the lips.\n\n\"Erin?\"\n\n\"Yes Garrett?\"\n\n\"What do you suppose we'll do all day tomorrow?\"\n\nShe smiled and wriggled her hot little body into mine, enticing and tempting me. \"More of what we did earlier tonight, I hope.\"\n\n\"Oh yes! But we only have two condoms left. And I know I'll want to do it with you much more than twice!\" I kissed her neck and earlobe after my words set in, and she happily sighed at my touch.\n\n\"I guess that means we'll have to get... creative. Because... Garrett?\"\n\n\"Yes Erin?\"\n\n\"We're not leaving my house at all tomorrow, and you're not going to put on any clothes so I can play with your glorious naked body all... day... long!\"\n\nShe punctuated her last sentence with kisses and licks to one of my own nipples. The wonderful sensations went straight to my ever-stiffening cock.\n\n\"If my goth princess will allow me to worship her beautiful naked body all day tomorrow,\" I panted, \"then she has a deal.\"\n\nShe left a trail of kisses down my chest and abs. For the second time that Halloween night, one of her soft hands closed around my cock.\n\n\"Deal. But I can't wait until tomorrow. I want you again right now.\"\n\nHer tongue flicked out and licked the head of my erect member, circling all around it. Then she wrapped her mouth around my cock and lovingly began to suck on it.\n\n\"Oh god, Erin!\" I groaned, writhing and clutching the sheets beneath me.\n\nI just happened to look at her alarm clock at that moment. It read 11:59pm. Only seconds to go until the calendar flipped to November 1st.\n\nWith my final breath of Halloween, I let Erin, my goth princess, take me once again to the heights of pleasure. "
    ],
    "authorname": "drteetho",
    "tags": [
        "first time",
        "first love",
        "goth",
        "high school",
        "homecoming",
        "halloween",
        "18-year-old",
        "pelican"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/final-breath-1"
}