{
    "title": "Falling Snow Ch. 03",
    "pages": [
        "There are few things in life more terrifying than a woman's wrath. Not the quick spark of anger found in the passion of the moment but the slow boiling furor of a woman invested in her anger. Tom knew this better than most and for all the wrong reasons. Mortal women didn't have shit on a succubus's wrath. Not that Shyira's anger was directed at him, per se, because it wasn't. It was that her anger had a presence all its own, a roaring bonfire of intensity. Just being in the same room as that passion meant getting singed by the heat. \n\nThe succubus standing in front of him was naked. This was not something that was unusual in the slightest. Shyira tended to view clothing as a hindrance and went without most of the time. If she had her way, Tom would go without as well. Today, Tom had no desire to get naked with Shyira, only a fool would look upon her as anything but a cornered predator looking for an avenue of attack. Her hip was cocked to the side in an irritated manner. Her tail, which could normally be seen lazily swaying in her wake, was stiff with the tension in the room. Anyone but Tom would have been terrified at the look she was shooting him. Even he considered his own confidence to be idiotic, bordering on insane.\n\n\"Why not?\" Shyira said, an edge to her voice.\n\n\"You honestly think it's necessary?\"\n\nIt seemed like they had been rehashing the same argument for weeks. Shyira wanted him to do something, Tom was dead set against it.\n\n\"Yes.\"\n\n\"I don't see why.\"\n\n\"There are many things lurking in the darkness, Master. You must be able to defend yourself.\"\n\n\"That's why I have you, I don't need combat lessons.\"\n\n\"I won't always be there to help you and besides, warlocks are supposed to be ruthless.\" She stomped her foot as she spoke, an incredibly cute gesture under different circumstances. \"How will you exterminate your enemies if you can't fight?\"\n\n\"E-Exterminate,\" he sputtered. \"Who said anything about that?\"\n\n\"Ruthlessness, strength, a determined will; these are the hallmarks of warlocks everywhere.\"\n\n\"Well not this one,\" he said.\n\nHe was getting ready for class as they spoke. He found himself zipping up his bag with a little more force than was strictly necessary.\n\n\"I know violence isn't in your nature. I'm not asking you to start killing people left and right. Bu-\"\n\n\"Good.\"\n\n\"But,\" she continued with more force, \"violence  is in the nature of other warlocks. Now that you've tapped into your powers it's only a matter of time until you bump into one.\"\n\n\"Why would they want to mess with me? I'm a nobody.\"\n\nShyira was quiet for a moment. \"Oh baby warlock, you have no idea how wrong that statement is.\"\n\n\"Ya, sure,\" he said dismissively.\n\nShyira smiled a sweet confident smile. \"You'll see soon enough.\"\n\nTom was tying his shoes and didn't catch her last statement.\n\n\"You're overacting, there's nobody coming after me. I'm just a student at a mediocre state college.\"\n\n\"Oh, is that all?\"\n\n\"Look, I've got to get to class.\" Tom grabbed his bag and started walking out of the door.\n\n\"Tom,\" she called after him.\n\n\"Talk later?\" He said, without looking back.\n\n\"Master,\" she said, \"at least think about it.\"\n\nShe could already hear him walking down the hallway towards the staircase. Shyira pondered the empty doorway her master had just departed through.\n\n\"Oh baby warlock, what am I going to do with you?\"\n\n****\n\n\"Someone fucking shoot me,\" Tom murmured.\n\nTom sat in a lecture hall, bored out of his mind. The same lecture hall used for his summoning lesson weeks before. Only now it was filled to the brim with students. He was trying unsuccessfully to daydream, his eyes having long since left the old, tweed coat wearing man in front of him.\n\nHe almost wished he was sitting in an economics class, listening to the monotone recitation of facts from someone competent at their job. At least then he would be learning something. Instead, he was treated to the nasally, overexcited voice of a man who had no business shaping young minds.\n\nThe seats of the lecture hall jutted out from the stage, like spokes on a wagon wheel. Tom's seat was positioned at the far end of the semi-circle of seats. It afforded him a perfect view of his peers in the seats in front and to the side of him. From his vantage point, it was clear that most of the students were as bored as Tom. The notable exceptions were the students hanging on the professor's every word. They had the glazed over look you only find on college campuses and cult compounds.\n\nTrue believers.\n\nFaced with another quarter of an hour of mind-numbing boredom, Tom went looking for something else to do. He fell back on an old hobby of his, people watching. It was Tom's view that college campuses represented some of the best people watching around. Nowhere else could you find such a tangled, diverse web of cultures and nationalities. Languages and social norms clashed and comingled, creating new and wonderful things in the process. It was like watching a volcano spew lava into the ocean waves\u2014a force of chaos and destruction creating something new and exciting right in front of his eyes.\n\nThe true believers aside, Tom saw a number of people all doing things related to the same central theme, boredom. A few were obviously having better luck at daydream than him, or they simply found the wall of the classroom incredibly interesting. The artists drew in the margins of their notebooks. A gaggle of foreign exchange students was, not so subtly, studying for a much harder class than this one. He saw the spray tanned popular girls eagerly tapping away at their phones, their minds already on tonight's social function. A perfect cross section of a run of the mill state college, he thought. \n\nIt was then that something interesting finally caught his eye.\n\nIn the back row, Tom caught sight of a flurry of unkempt brown hair framing a pair of thick glasses. The girl must have been looking in his direction because she caught his eye almost immediately. The look on her face said she knew exactly what he was doing and didn't appreciate it. Busted, Tom thought. He smiled awkwardly, trying to defuse the sudden tension that radiated from the girl. She only scolded in return. She looked at him before rising and walking out of the room. She had no backpack to be seen.\n\nWhy isn't the professor telling her off for walking out early?\n\nLooking back to the podium, Tom could see that the professor hadn't noticed her abrupt exit. Odd, he wasn't the type to allow a poor, innocent student escape today's sermon. If walking out was that easy he would have already left himself.\n\nLooking in the direction of the departed girl Tom managed to catch the eye of another girl. She was the polar opposite of her departed peer. Where the other girl's hair was tangled mess and fell to her shoulders, this girl's hair was short, held tight to head in a tomboy sort of way. It was also bright pink and a deep, blood red. Very few girls could pull that short of look off without coming off as masculine, even with her bright colored hair. She was one of them. \n\nShe had a runner's build. All tight muscle stretched over a thin frame. With a chest that was on the larger size for her body type, although she still didn't hold a candle to Shyira's ample bust. She was slouching in her seat. Her ass was almost hanging off the edge of the plastic chair and what an ass it was. Strong thighs helped frame what could only be described as the perfect bubble butt. Large and heart shaped, it was barely contained by the short skirt surrounding it.\n\nShe caught him looking. She gave him a small smile filled with a look Tom couldn't quite place. Reaching down, she hooked a finger on the edge of her skirt and began slowly drawing it up her powerful thighs. At the same time, she started to spread her legs in an inviting manner. She stopped right before Tom could get a good look at what lay beneath her skirt. It left him with only the suggestion of red material hidden in the shadows between her legs.\n\n\"Fuck me.\" Tom breathed.\n\nThe girls smile grew larger. She couldn't have heard that, Tom thought.\n\nIt said something about Tom that his first instinct at seeing the girl's smile was to look at the seat behind him, fully expecting to see someone better looking staring back at her. Except there was no one in the seat behind him. There was no one to either side of him either. He was the person she was staring at with such intensity.\n\nWith her hand now resting between her legs she closed her thighs, rubbing them together. A soft moan escaped her mouth. Her tongue circled her lips, wetting them. She reached up with her other hand and ran a finger down the length of her mouth, causing her lips to part. \n\nTom's breath quickened. She continued running her fingers down the length of her throat until her hand disappeared into her loose blouse. The whole time she never broke eye contact with him.\n\nTom was snapped out of his own little world as the professor dismissed the class. All around him students began to rise and collect their things. He lost sight of the girl as students shuffled out of the room. When he finally got another look at her chair, she was gone. Tom's eyes darted around the room looking for her. He caught a flash of her short skirt and long bare legs out of the corner of his eye. He made a beeline for the door she had just passed through.\n\nHe half ran out of the class.\n\nAs he passed through the doorway his vision was suddenly obscured by a sea of brown hair. He was so focused on looking for the her that he bumped straight into the girl from the back row. From this distance he got a much better look at her. She had a tangled mat of brown hair that framed thick black glasses. She was the type of girl that a guy like Biff would never give a second glance and yet Tom looked beyond the obvious. The extreme prescription of her glasses gave him a perfect look at her soft hazel eyes. She had the type of girl next door face that screamed cute, without jumping the line into hot. Her sweater and pants did a good job of covering her figure, but he still got the feeling she had the body to go with the face. In short, she was his type.\n\n\"Excuse me. I didn't see you there,\" Tom said, suddenly nervous. \n\n\"I know. I'd be careful if I were you, you might run into trouble,\" she said in a serious tone.\n\n\"Ya I'm sorry. I'll pay more attention to where I'm walking next time.\"\n\n\"That's not what I was talking about.\" The girl walked away without giving Tom a second glance.\n\n\"I'm Tom by the way,\" he yelled after her.\n\n\"I know,\" she called back.\n\nNow what the hell was that about? \n\nRemembering why he ran out of class in the first place, Tom swept his eyes over the crowd. He hoped to still catch sight of her brightly colored hair in the sea of students. His search turned up nothing. She was already long gone by now. Disappointed, he turned and headed home.\n\n****\n\nTom was lying in bed shirtless when Shyira walked in the room. He was playing video games, trying to unwind from an unexpectedly exciting morning. A slow smile formed on Shyira's face at the sight of Tom lying on her favorite piece of furniture.\n\nShe walked over to him while seductively swaying her hips. With every step, she put a little too much force onto her heel, causing her breasts to jiggle as she walked. She made sure to show off her long pale legs as she did. Her clothing vanished along with the glamour surrounding her demonic features. Pale horns jutted out of hair the color of soft snow. Vast leathery wings jutted out of her back. It was amazing how quickly he had grown used to the faint smell of brimstone that always accompanied Shyira's magic. She went from sorority princess to snow white demon in an instant.\n\nTom grew more aroused with every step she took. Shyira always had this effect on him. She could make him hard from across the room with only a look and a wink.\n\nWhen she was only a few feet from the bed she abruptly stopped. Her nostrils flared as her senses caught something in the air. \n\nHer eyes narrowed dangerously. In a moment, her entire posture changed. Tom could almost see the steel form as her muscles tensed. As fast as Tom could blink, Shyira went from Man's ultimate fantasy to the type of nightmarish predator songs of old used to be sung about. Not a word was spoken as she climbed on top of him and straddled his waist.\n\n\"Something interesting happened today.\" It was a statement, not a question.\n\n\"Y-Ya,\" Tom said nervously, \"there was a girl in one of my classes.\" Actually a pair of girls but something told Tom it was better not to mention that little detail.\n\nHer eyes ran down the length of his body. Yet her eyes seemed unfocused, like she was seeing more, something under the surface. He could almost hear the gears turning as she thought hard about something. Her eyes were glowing slightly, which was never a good sign. She seemed angry but her anger wasn't directed at him.\n\n\"You haven't fucked her yet.\"\n\nOh shit. She thinks I'm going to cheat on her.\n\n\"Shy, I would never-\"\n\nShe put a finger to his lips, stopping whatever he was about to say.\n\n\"Hush, baby warlock.\" An amused smiled played on lips, \"I'm your succubus, not your mortal girlfriend. I may get territorial but monogamy, as a concept, doesn't interest me. If you see a mortal girl you wish to ravish, tell me, I'll help.\"\n\n\"What then?\"\n\nThe cold anger bubbling under the surface, resurfaced as Shyira's eyes clouded over in thought. She seemed to be on the verge of answering his question and then thought better of it. Her eyes refocused on him after a moment. She ran her hands affectionately up and down his chest. Her demeanor softened as she leaned down and gave him a quick kiss on the lips.\n\nHer expression was as unreadable as ever as she looked down on him. She was dead still a moment before her hands shifted into claws and plunged into his upper chest. \n\nTom was greeted, not with pain, but with icy cold, like the first frost of winter covering the last flower of fall. He could feel the cold encircling his heart as his skin went numb. His muscles spasmed. The rest of his body broke into a cold sweat. In the space of a couple of heartbeats, Tom found himself on the harsh edge of life and death. His breathing was shallow, as if his very lungs were turning to ice. If Shyira wished it, he would plunge into the dark depths of that cold and never resurface.\n\nTom looked at Shyira in shock. She only stared back at him, her expression as calm and collected as ever.\n\nTom's gaze was drawn to Shyira's arms. A dark, inky substance flowed down her arms, just underneath the skin. It stood in stark contrast to the milky white complexion of her forearms. He could feel her magic radiating off the substance. It pulsed, as if it had a mind of its own and was eager to get to him.\n\nTom felt it, even through his numbed skin, when the substance reached his chest. It sank into the very fiber of his musculature. It was almost boiling in comparison to his frozen chest. His skin tingled where ever it touched, as it thawed his frozen skin. Tom found that he could breathe again. He could feel the warmth as the substance rose to the surface of his skin in the form of dark tattoos. They covered the entirety of his chest, from neck to the bottom of his ribcage. From what he could see they consisted of a dizzying array of runes, symbols and equations. He wasn't familiar with the languages present and doubted anyone outside Hell was either.\n\nShyira pulled her claws from his flesh with a sickening pop. Tom could smell the faintly metallic smell of his own blood.\n\nJust as quickly as she had climbed on top of him, she was gone. He felt her weight disappear as she got off of him. She was off the bed and walking back towards the door before Tom had time to register what had just happened.\n\nLooking down he could see that his skin was whole again. Small pinpricks of blood were the only indication of where her clawed fingers had dug into his chest.\n\n\"What the fuck?\" Tom said, exasperated.\n\n\"Hmm, nothing\" she said innocently. \"Don't you have class? You should get going before you're late, lazy bones.\" She flashed him a mischievous smile before walking out the room, as if nothing had happened.\n\nBefore his very eyes the black tattoos, marring his chest, began to fade. By the time they had stopped fading they were nearly indistinguishable from his normal skin tone.\n\nTom sat and stared at the empty doorway.\n\n\"Well,\" he said to the empty room, \"that can't be good.\"\n\n****\n\nTom stepped out of his apartment building a few minutes later to begin his walk to class.\n\nIt was a beautiful day. The harsh winds of winter had finally given way to calm seduction of a spring day. Everywhere Tom looked, life seemed to spring anew. The birds chirped, the flowers bloomed and the whole of campus seemed to be out and about. Couples lay sprawled on blankets in the common areas, laughing the day away. The various clubs were out in force looking for new members. Tom had to fight off a few people trying to hand him flyers. There was a youthful energy in the air, an uncertainty, like anything could happen. The weather was cool and calm. It was the very picture of a perfect spring day.\n\nThe heat would come soon, it always did. Spring and Fall were a welcome respite but they always passed in moment. It was the other two seasons that were the forces of nature that dominated the survival of humanity. It was winter that they barred their door against, huddled next to the fire to ward off winter's bite. It was summer they prayed to their deities for mercy from, desperate for enough rain and good weather to keep their crops from being scorched and burned underneath a summer's sky. \n\nBut not today. Today all seemed to be well in the mortal realm and none of this distracted Tom from what was consuming his thoughts.\n\nEvery time he thought he had Shyira figured out, she went and did something to throw him completely off balance again. Despite often referring to him as \"Master,\" Tom was hardly the one calling the shots. She seemed to be the one shaping the direction of his destiny. He wasn't sure what he thought about that.\n\nHe had no idea what the incident in bed was about but one thing was clear\u2014Shyira never did anything without a reason. She was up to something and Tom hadn't the slightest clue what it was.\n\nThe rest of Tom's walk was relatively uneventful, despite the familiar feeling of eyes watching him from a distance. Just like his time in the forest, he found pinpointing where the feeling was coming from almost impossible. There were to many people around him. Too many faces to search for recognition.\n\nTom's walk led him to the older parts of campus. Sleek buildings of steel gave way to the run-down masonry structures of decades past. Tom always got lost here. The layout of the streets made no logical sense. The whole area was a twisted mess that resembled more of a maze than a college campus. It made him wonder what the architects of the campus were thinking. \n\nAt last, Tom entered the particularly run down building where his lecture was being held. The building was a mess of peeling paint, grimy windows and the type of musty smell only found in older buildings. The state of repair of some of these buildings had always amazed him. He was spending a small fortune to be here, yet the university's facilities and educators left much to be desired.\n\nKind of like public school, he thought, only more expensive.\n\nHe was walking through a mostly deserted corridor when a door to his right opened. Hands shot out of the darkness and grabbed his arm in an iron grip. Tom found himself being pulled into a dimly lit bathroom. Before he had time to react the door was slammed behind him. He was shoved roughly against the opposite wall as a light switch was flipped on.",
        "\"There you are. I've been looking for you,\" said a feminine voice.\n\nLooking up, he was greeted by an unlikely sight. It was the athletic girl from class. Her long tight legs and perfect bubble butt were cocked in an arrogant, confident manner. She was gorgeous but something about her was setting off alarm bell in the part of his brain not controlled by his dick. Her bubble-gum pink and red hair stood in stark contrast to the predatory look she was giving Tom. He was suddenly aware of how isolated and alone he was.\n\n\"What do you want?\" He said hesitantly.\n\nShe said nothing. She only continued to stare at him.\n\n\"When I heard that Shyira had shacked up with a mortal, I couldn't believe it.\"\n\n\"Wait, what?\" Tom said, alarm in his voice. \n\n\"Why, you must be the first moral to survive a night with her in a thousand years.\"\n\nHis heart rate was increasing by the second. He was now very aware that she was standing between him and the door.\n\n\"You're a succubus.\" It was a statement, not a question.\n\nShe smiled. Her body shifted. Dark red wings erupted out of her back. A tail, as black as night, whipped out from under her skirt. Her skin took on a deep red complexion as a pair of horns snaked out of the top of her head. Standing before him was a terrifying manifestation of lust and sin and she only had eyes for him\n\n\"Yes mortal. You may call me Aresta.\"\n\nOf course she's a succubus, Tom thought. Why can't I ever attract a normal human girl?\n\n\"Look, no offense or anything. But I have more supernatural than I can handle at the moment. So why don't we jus-.\"\n\n\"You talk too much.\"\n\nAresta's tail lashed out and encircled his throat. She pinned him to the stall door, cutting off what he was about to say. The pressure applied to his throat was enough to be uncomfortable without cutting off his air way. He could breathe, for the moment, but if he tried to escape that could change at any time.\n\nShe looked him up and down, studying him intensely.\n\n\"So this is Shyira's new boy toy,\" she said thoughtfully.\n\nTom stared back. Even immobile against the stall door, he was pissed. He was tired of feeling like a piece of wood adrift at sea. He was always reacting, always going with the flow. At that moment, a long dormant seed began to sprout within him. \n\n\"A little on the scrawny side but cute in a geeky sort of way, I suppose. What is it she sees in you?\"\n\n\"Fuck you,\" he wheezed.\n\nHer fist shot out at lighting speed towards his head. Tom only saw a blur of motion as it passed his head. With an ear splitting crack, a clean hole appeared in the stall door just inches from his head.\n\n\"Mouthy aren't you?\" she looked at him with more interest, \"I just might need to taste you after all.\"\n\nShe reached down and undid his pants, releasing his cock with a practiced flick of her wrist. Her clawed hand encircled his manhood as she began to slide her hand up and down.\n\n\"You won't be mouthy when I get done with you.\" She moved closer, until her face was only inches from his own, \"when I'm done with you you'll be purring at my feet.\"\n\nAresta's actions were having an effect on him. His mind was clouding. His breathing was getting harder as the pleasure she was giving him increased. He was in real danger of being swallowed by that bliss if he wasn't careful. \n\nThink.\n\nAlthough pinned to the door by the neck, Tom's hands were still free. It was clear Aresta didn't consider him a big enough threat to restrain him further. Tom sincerely hoped he could prove her wrong. He reached into his pocket and pulled out a small crystal.\n\nThe crystal itself was relativity harmless, the result of his latest magic lesson. You stored small amounts of power within the crystal, which could then be brought out in the form of light. A useful enough example of the concept Shyira was trying to teach him. Although, she was less than amused when he taped it to the end of a yard stick and started quoting, \"The Lord of the Rings.\"\n\nNow he had a different idea in mind. He directed power into the small crystal. A trickle of power turned into a torrent has he filled the crystal to the point of bursting. Sweat beaded on his face. Tom's head pounded from the exertion. If he survived, he would have a hell of a headache later. At last the crystal could adsorb no more power. Tom closed his eyes, dropped the crystal to the ground and promptly stomped on it with his shoe.\n\nA flash of light filled the space like a second sun. Aresta stumbled back from Tom in confusion, already taking up a defensive pose. She was ready for an attack that wasn't coming.\n\nTom's hand flew to his now bare throat as he took in a large ragged breath.\n\nAresta's eyes narrowed, \"Neat trick, I guess we're going to do this the hard way after all.\"\n\nFire blossomed in her hand. It licked her skin without seemingly causing her any harm. For a moment, it was like she was holding a cauldron of fire in her palm. Then the fire snaked up her wrist until her whole arm was ablaze. There was no mistaking what she was now. Her eyes glowed a deep shade of blood red as an acidly sweet smile formed on her face.\n\n\"You could have died with a smile on your face,\" she said, \"Now I'm going to have some fun.\"\n\nTom gulped.\n\n\"Time to meet your maker, little mortal.\"\n\nNope.\n\nTom made a break for the door, pulling up his pants as he ran. He heard, more than he saw, the blast of fire streak towards him. He could feel the shimmering heat lick his backside through his clothes. He hit the door as the building sprinklers went off. The corridor was awash in people and filled with the sounds of surprise and confusion. His shoes squished in the water collecting on the cheap floors. He joined the flow of the students heading towards the exit. He couldn't get there fast enough for his liking.\n\nWhen he was finally clear of the crowd he ran. He didn't look back until his breath gave out and he was forced to stop. When he looked behind him, he could see the smoke rising from the building in the distance.\n\n****\n\nTom didn't go straight home. Instead, he took a zig zagging route through campus. The layout of campus made this an easy thing to do. In his mind this would help to throw off a tail. At least he hoped that's what it was doing.\n\nWhere was Shyira when he needed her?\n\nTom was putting his key in the lock to his apartment when he heard a voice behind him.\n\n\"Found you,\" Aresta said in a sing song voice. She was so close he could feel her breath on his neck.\n\nTom was spun around and thrown up against the wall. \n\nShe pinned his body to the wall with hers and this time she restrained his hands. Aresta crushed her lips to his in a kiss. The kiss was forceful, too forceful. Tom was sure his lips would be bruised in the morning. If he lived long enough to see morning, that is. She bit down on his lower lip, pulling it away from his mouth with her teeth. She stared into his eyes as she released it from her teeth. She licked his blood from her lips and shuddered.\n\n\"You do have a touch of power in that scrawny body of yours, don't you?\"\n\nAresta pulled him away from the wall and pushed him into the room. Tom stumbled before regaining his balance. He turned to look just as the succubus walked in the room, slamming the door behind her.\n\n\"Now where were we?\"\n\nHis confidence level had been increasing lately. He was hardly the take charge type but at the same time he was in no mood to do nothing. Tom gathered up every ounce of courage and unleashed his best round house punch. Amazingly enough it actually connected with the side of Aresta's jaw. It felt like punching a brick wall. Tom thought it felt great, like he was finally taking charge. Then he opened his eyes and looked at Aresta. She had hardly moved from the blow.\n\nShe stared at him in surprise before her eyes narrowed, \"You're going to wish you hadn't done that.\"\n\nOh shit.\n\nAresta reached out with a clawed hand and grabbed a hold of his shirt. Tom thought she was going to throw him again. Instead, his body was enveloped in a curtain of hot air as his clothes disintegrated around him. He felt the ash, left over from his clothes, as it fell off his body. She has scary control over her magic, Tom thought as he backed away. She managed to burn his clothes away without burning his skin\u2014much.\n\n\"Listen, I think we got off on the wrong foot here.\"\n\nAresta steady approached him.\n\n\"Speaking of which, if you try to run away again, I might decide you don't need yours anymore.\"\n\nTom shook with fear.\n\nShe backed him against the far wall. \"Fear is good; I can use fear but I also need you hard.\"\n\nShe leaned in and kissed him hard on the lips. At the same time, she blew into his mouth. Tom could feel the searing heat of her breath filling his lungs. A moment later he felt the aphrodisiac, lazed into her breath, flood his system. \n\nRegardless of his terror, he was rock hard now.\n\nAresta broke the kiss. Her own clothes burned away a moment later\u2014or it might have just been her glamour dispersing. The distinction wasn't important to him at the moment. His mind was focused on other things, like staying alive. They were both naked now. They faced each other, one pale and scrawny, the other crimson and tight. She threw him onto the bed and pinned his arms to his side as she climbed on top of him. She wasted no time with foreplay, choosing instead to mount him in a single stroke.\n\nTom gasped. Aresta purred.\n\n\"I can't tell you how much I'm going to enjoy taking Shyira's mortal away from her.\" She slowly rose off Tom's cock until only the head was still inside of her \"I'm going to look back on this moment for a millennium.\"\n\nAresta slammed her hips down on Tom's ragging erection. \n\n\"Oh fuck,\" he said.\n\nAresta forcefully bounced on his cock, hard and fast like someone might burst into the room at any moment to stop her. Tom sincerely hoped that's what would happen.\n\nAresta was so involved in fucking Tom that she failed to notice when the skin of his chest began to change. Faint glowing lines appeared on his skin before they solidified into the dark lines of tattoo ink. Cryptic runes, equations and words of a language unknown to Tom covered his upper chest.\n\nAresta noticed none of it. The symbols began to move and swirl around his chest, combining and uncombining in infinite ways.\n\nAs she continued, the tattoos on Tom chest shifted yet again. They flowed down his skin like ink running down paper. The ink pooled near his balls, waiting. The arcane symbols reappeared and danced over the skin of his balls and cock. The density of the symbols was so great that it made his pale skin look as black as night. They were constantly shifting, constantly moving. It was almost like they were eager and impatient for something to happen. As he got closer to coming, their movement increased to furious pace. \n\nWith one final downward motion Tom came. As cum flowed out of his cock something else flowed with it. Aresta's eyes snapped open as the inky blackness of the runes shot into her pussy. She was on her feet in an instant.\n\n\"That bitch!\" She screamed in inhuman fury. \"That fucking bitch, she planned this all along!\"\n\nShe raged around the room, throwing things. Then her eyes, filled with rage, landed on Tom.\n\n\"You knew about this didn't you? I'll fucking kill you, you bastard.\"\n\nAresta raised her clawed hand, ready to strike him down. Tom closed his eyes in terror. This is it, he thought, I'm going to die. He waited for the finishing blow that would end him, his hands thrown up in a defensive gesture.\n\nNothing happened.\n\nThe downward stroke of her claws that would end Tom's like never came. Tom tentatively opened his eyes and lowered his hands. He was greeted with the shocked and confused look on Aresta's face. Her clawed hand was held up in midair, shaking slightly, as if she was trying to force her way through an invisible wall.\n\n\"Expect. You. Can't.\" Said a feminine voice behind him.\n\nShyira was leaning against the door frame, a triumphant smile on her face.\n\n\"What the hell did you do?\" Aresta barked.\n\n\"Bound you to your new master.\" Shyira said mildly.\n\nAresta's eyes opened wide in shock before they narrowed dangerously. Her mouth formed a hard, angry line.\n\n\"You. Did. What?\" Her voice had taken on a deadly, hard edge.\n\n\"You heard me,\" Shyira's own voice had hardened in response. \"You brought this on yourself. Encroaching on my territory, trying to fuck my master without my knowledge. Did you really think you could get this close to him without my noticing it?\n\nThe two woman stared daggers at each other.\n\n\"I don't tolerate poaching,\" Shyira said.\n\nIt's like I'm not even in the room, Tom thought, and why are they talking about me like I'm a gazelle being hunted in the bush.\n\n\"You don't think this is a little overboard?\" Aresta asked.\n\n\"No.\"\n\n\"Come on, Shy,\" Aresta said. \"This isn't the first time we've sparred over a mortal.\"\n\nShyira shrugged, \"I need help with a little project and my talents are ill suited to dealing with this particular problem.\"\n\n\"So what, you thought of me?\"\n\n\"No. I wanted Rosie but I hear she's busy with a new master.\" She sighed, \"You'll do.\"\n\n\"Bitch,\" Aresta spat.\n\n\"Yes, but not yours.\"\n\nShyira's leathery wings opened wide as a single powerful flap sent her streaking across the room. She was so fast that Tom saw little more than flash of hair the color of snow and the rush of air moving through the room.\n\nAresta was ready for her. Rather than be tackled to the ground she reached up and grabbed a hold of Shyira's torso. She spun and let the momentum of Shyira's flight across the room carry them both into the wall. With a crash, a deep dent appeared in the wall.\n\nNeither of them noticed. Before they had even come to a stop they were on top of each other. It was hard for Tom to follow the fight due to the speed of the action, but he could tell it was ferocious. He caught flashes of claws and fangs, and always the inhuman screams of two women out for blood.\n\nFrost erupted along the floor and wall as Shyira tapped into her magic. Aresta followed suit as her very skin caught alight. Fire met ice as steam filled the room. The mist cloaked the room from Tom's gaze. He was left with only the snarls and cries of violence to go with the dark shadows of the combatants through the haze.\n\nTom sat there stunned.\n\nThe fight went on for several more minutes before it neared its conclusion. The level of violence he was hearing was diminishing by the second. It was clear something was going to happen and soon. The mist slowly lessened as the humidity level in the room dropped, leaving only condensation peppering the surfaces of the room. When he could finally see again, he was greeted with the two of them on the floor in a tangle. Shyira's head was buried in the crook of Aresta's neck and... Are they kissing?\n\nThat certainly raised an eyebrow from Tom. Although it really shouldn't have\u2014they were succubi after all.\n\nShyira and Aresta's sex was primal, like two forces of nature clashing. This was no gentle lovemaking. In fact, it was closer to fighting than anything else. They rolled around the room. Their tongues and tails were locked in an epic struggle for dominance of one over the other. A mortal would have been physically hurt engaging in such frenzied actions. \n\nTom got the feeling they were doing more than fucking. There was something elemental to the spectacle in front of him. As if two great forces of nature were warring for control.\n\nThey seemed to increase in intensity, as if barreling straight towards climax. Finally, Aresta threw her head back and let out a desperate, almost pleading, cry of pleasure. All the muscles in her body went limp as she collapsed on her back. Shyira got on top of the fallen succubus. She pressed her body to Aresta's, pinning her arms down in the process. She forced her lips to Aresta's for a long moment before rising to feet. Aresta made purring, content sounds. She was lost in her own little world of post-orgasmic bliss. Shyira stared at the succubus at her feet for several long seconds before a small smile crept onto her face. \n\nTom looked around the destroyed room. Dents and broken tiles could be found everywhere. Ash covered the floor and condensation stuck to every surface from the damp air. Shyira must have cast a spell to dampen the sound of the fighting. There was no way his neighbors wouldn't have heard them otherwise.\n\nTom looked back as Shyira, without so much as a backwards glance, turned away from Aresta and walked over him. With every step she put the heel of her foot down just a little harder than necessary, making her breasts jiggle as she walked. She had done the same thing that morning, but this time when she stopped in from of Tom, he could see only pleasure present on her face.\n\n\"We made a real mess of the room, didn't we?\" He said tentatively.\n\nShe gave him a look. \"Forget the room. I told you, you needed combat lessons, didn't I?\"\n\nTom winced. He had hoped she had forgotten their earlier conversation.\n\n\"Shy,\" he began.\n\n\"Don't you Shy me,\" she flicked her tail in irritation. \"What if I hadn't been here? What if you had gotten hurt?\"\n\nHe all of a sudden felt very foolish.\n\n\"I'm sorry.\"\n\nShe gave him a wary look. \"Will you agree to take combat lessons?\"\n\n\"Sure, Shy. Whatever you say.\"\n\nThat seemed to mollify her. She gave him the smallest of smiles, like she was still angry with him but was beginning to warm to the idea of forgiving him. Tom looked at the now-docile succubus lying on the floor.\n\n\"She calmed down pretty quick.\"\n\nShyira shrugged.\n\n\"We've come to an arrangement.\"\n\n\"You bound her to me?\" He asked. He had serious reservations about that. He couldn't handle the succubus he already had, much less a second one.\n\n\"Yes, but that wasn't the arrangement I was referring to.\"\n\n\"What then?\"\n\n\"I bound her to your will, I didn't make her submissive to me.\"\n\nTom raised an eyebrow at that.\n\n\"There is always hierarchy in Hell, Master. We needed to decide who was at the top of it.\"\n\nImages of their violent, primal sex flashed into Tom's mind. \n\n\"So earlier, you wer-\"\n\n\"Establishing the pecking order.\"\n\nShyira crawled over to him on the bed and gave him a small kiss on the lips.\n\n\"Do I need to be worried about her coming after me again?\" He asked.\n\nShyira considered the question thoughtfully. \"Not at the moment but I would make her submit to you sooner rather than later.\"\n\n\"She doesn't seem like the submissive type.\"\n\nShyira gave a soft chuckle.\n\n\"She's brash and strong willed but she's still a succubus.\"\n\nTom didn't understand what she was getting at.\n\nShyira leaned in to kiss Tom's hands, one at a time, as they rested in his lap. She kept her head near his waist, just inches from his cock. She made sure she looked up at him as she spoke.\n\n\"All succubi have a submissive streak for their master, it's in our nature. As long as we view you as worthy, we'll bend the knee when the time comes.\"\n\n\"And you think I'm capable of making her bend the 'knee',\" he said, making air quotes around the word.\n\n\"Oh, yes. I think she's going to be spending a lot of time on her knees around you.\"\n\nIt was always sexual innuendoes with Shyira but Tom wasn't feeling up to a conversational duel with her right now. He could feel the deep pit of nerves at the thought of having to survive another succubus's tests.\n\n\"You expect me to do this how exactly?\"\n\n\"That's for you to figure out.\" She giggled, \"consider it a fun little piece of homework.\""
    ],
    "authorname": "NightPorter",
    "tags": [
        "succubus",
        "demon",
        "university",
        "fire",
        "geek",
        "nerd",
        "warlock",
        "succubi",
        "wizard",
        "summoning"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/falling-snow-ch-03"
}