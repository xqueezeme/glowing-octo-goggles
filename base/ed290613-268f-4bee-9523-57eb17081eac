{
    "title": "Camp of Blessing Ch. 10",
    "pages": [
        "\"It was the biggest dick I have ever seen, Mother Superior! Must have been this big!\" Jeana exclaimed, while opening her arms wide to show at least two feet in size. Mother Grace simply sat on her chair, her hands clasped together over the desk. Her eyes saw through the guard in front of her, she was frozen, in shock. Jeana stopped talking containing her excitement. She had never seen Mother Grace like this. Her eyes were stagnated, was this fear?\n\n\"Are you sure it was the new student? This Kristanna had a... very huge... organ? Can you absolutely ensure you were not confused?\" Mother Grace asked with a serious and definitive tone. The nun knew that Jeana wasn't \"the sharpest tool in the shed\". If she mixed things up it wouldn't be the first time. But the guard nodded and confirmed her statement, retelling the story. \"It was her, Mother Grace. I am sure! I followed her to Sister Beth's room, she knocked and went inside. I was bored waiting so I opened a can of beer and sat in the dark. I know we can't have beer in the school but I have a girl who handles mail for me, she is the best. You know how hard it is... \" Jeana was going to continue rambling and going off on tangents, but Mother Grace didn't have the patience for this right now.\n\n\"I don't care about your smuggling activities, Jeana. Get to the point!\" Jeana stopped, realizing that she wasn't telling the story anymore. \"Right... so I was drinking my beer waiting for Kristanna to come out. 'Bout half an hour later the tiny redhead you let me punish the other night showed up... what was her name again?\" Mother Grace simply completed her reasoning, baffled that the guard couldn't recall the name. \"Rebecca.\" Jeana nodded eagerly as if she heard it the first time. \"Yeah!, that one. She knocked, and knocked and... knocked again, no one opened. Then she just burst in, door must've been unlocked I guess. And that's when I saw it. I mean, it was just for a couple seconds but I definitely saw it! Kristanna came to close the door, totally naked. Her eyes had a green glow. The dick was HUGE, her tits are also big! I wish we could play with her... Can we, Mother Superior?\"\n\nGrace let out a sigh, she ignored the request at this point, her mind running with things she hadn't given any importance in a long time. The nun was tense, Looking to the ground as if it wasn't there. She finally spoke with an ominous tone. \"Well, if what you told me is accurate, then I think we may have a bigger problem than I thought.\" Jeana nodded and smiled wickedly. \"Oh yeah, it is a very BIG problem!\" The nun rolled her eyes, realizing her unintended pun. She quickly grabbed Kristanna's file from her table, reading it once more in search for something she might have missed.\n\n\"Holy Father, please protect us and let me be wrong!\" Jeana tilted her head to the side slightly, confused. But she had no time to ask any obnoxious question as Mother Grace continued. \"Father Graham warned me about such creatures. He tried to teach me, to train me, but I wouldn't listen. I couldn't believe all those stories he told, my faith wasn't strong enough. But if you saw what you just described... it makes sense, what happened at the mines, everything!\" The nun smashed her fist on her desk in frustration.\n\nJeana simply stood there confused, waiting for some kind of order. But Grace seemed distressed, uncertain. This wasn't common for her, she was always so controlled. It wasn't long before Jeana though better to ask. \"What creatures are you talking about, Mother Superior? Shemales? 'Cause they are pretty common. In fact we used to have a street full of them back at my hood. I'd pass there at night and...\" Mother Grace let out a chuckle at the banality of the statement, interrupting the guard in the middle of what certainly would have been another absurd story. \"I wish it was just that, Jeana. But I was referring to something far more perverse. I need to check the Father's journals for confirmation. Come, we are going to the mines.\" The guard became suddenly alert, immediately recognizing the red flag. \"In the middle of the day, Mother Grace? But you told me to never do that.\" The nun began to gather her things regardless. \"I know what I told you, but this is an emergency. We will just have to be discrete.\"\n\nAbout twenty minutes and a lot of subterfuge later, Mother Grace and Jeana opened the secret door in the mine shaft. As they went in the dungeon Mother Grace saw for the first time the aftermath of what had happened to Rebecca. It was mostly clean at this point but the stains were still visible, denoting a big pool of dry cum surrounded by smaller ones. The realization of what this likely was sent a shiver up Mother Grace's spine. Could it be that such things really existed? Fumbling through her pockets in haste, Mother Grace grabbed an old iron key and opened the big metal door out of the dungeon and into another room. \n\nThe inside revealed an office much like her own back at the school main building. While the walls were of solid, polished rock, the furniture was very elegant. All wooden and clearly old, also likely very expensive. Another imposing chair that looked more like a throne was behind the main desk, shelves with books adorning three of the four walls. The Father's touch was as obvious here as in Grace's office, even after all those years. The nun went directly for an old chest under the desk, the dust on it made it clear that it had not been touched in ages. She fumbled through her pockets once more to find the key and open the locker on the chest. Reaching inside she pulled a bunch of books with leather covers. As they were placed on the desk, clouds of old dust went up. Their pages were yellow, but they were otherwise well conserved.\n\nSitting on the chair the nun began to flip through the pages. Jeana just watched all that from the door, looking extremely bored. About three books later Mother Grace sat back on the chair, her face expressed pure worry and fear. This was obvious even to Jeana, who felt the need to ask. \"You ok, Mother Grace? Did you find what you wanted?\" The nun seemed to be brought back to reality by Jeana's voice, looking at the tall guard. \"I did, Jeana. And it is worse than I thought.\" Jeana shrugged. \"I'm sure whatever it is we can deal with it. I mean, I've kicked the ass of some nasty people before, you know? You just aim me at the problem! I got this Mother Superior!\"\n\nMother Grace took a deep breath. \"As usual, you're wrong. We have to be discrete about this or it could mean the end of this school! I will have to think about how to approach this... I... I never really gave any credence to Father Graham's stories before. I thought they were excuses from a failed priest, trying to impress me... but if they are true...\" Jeana was beginning to feel afraid, seeing her boss in that state. She quietly asked. \"What are we dealing with here?\" The nun straitened her torso as she sat on the chair, looking at the book opened once more. \"According to this journal, Demons. More specific, succubi, the lust demons. These beings have impossible bodies with proportions that defy common sense. They exist for nothing but carnal pleasure, feeding on it. They have the genitals of both genders and powers that will corrupt even the strongest willed servant of the Lord. Kristanna must be one of them, somehow! But it doesn't make sense! Here it says these beings are so rare and old, how is she just a teenager? Why didn't we see it?\"\n\nJeana was grinding her gears trying to contribute to the discussion. \"Well.. maybe she is a baby demon?\" Mother Grace's reflex was to dismiss yet another simplistic statement from the guard. But something clicked in her mind. \"Wait... you might have a point! She was adopted, what if she is the daughter of a succubus?\" The nun went back to the book, flipping more pages back to the start. She read and paraphrased it to Jeana, but mostly she was talking to herself. Her finger ran over the lines in the book trying to make sense of the situation.\n\n\"Here, Father Graham wrote that demons come in many shapes and forms. But all of them escape hell only in spirit, possessing human bodies so that they can manifest their powers and affect our world.\" There was silence as Mother Grace kept following the writings. She then continued talking as she nodded, still looking down at the book. \"Later he also mentions that succubi are particularly dangerous, for they can do worse than send your soul to be beside the Lord. They can actually taint your soul, condemning you to an eternity in hell! I remember the stories Father Graham told me... years ago. He once told me that his own soul had been tainted by a succubus, which was the reason he retired and opened this school. He wanted to atone for his sins, try and cleanse his soul. But he could never do it. He died a tormented man... and I thought he was weak, I never believed him.\"\n\nThe nun stood up and began pacing around for a while, her mind going back to all the sermons and lessons from a distant past. She tried to push them away and switch her focus back to the book. \"It says here that someone possessed by a succubus should never be allowed to come near any women. As they aim to impregnate them with their evil seed. A child born from such act is called a Cambion... Cambion... but it doesn't say more about them here.\" The nun flipped a couple pages, read for a few seconds. \"Ah! Here, Cambion! They carry the demonic taint, a hybrid between human and a creature of hell but more corrupting than both. These demon spawns look mostly harmless and are almost impossible to detect until they reach puberty, when their demonic nature emerges. Succubi always seek to create Cambion, for their human half makes them impossible to exorcise and unbinds them from hell. Unlike demons, they have their own body. They can stay among us and torment humanity indefinitely.\"\n\nJeana didn't know what to think about these stories, but she understood it was serious because of how Mother Grace talked about it. Unsure of what to do the guard decided to break the tension. \"So... do you want me to go get Kristanna now or...?\" Grace kept searching the books for more details. Jeana's proposal made her stop her search and turn in urgency. \"Stay put for now, but follow her, see who she associates with. She is still a teenager and we can use that. If she was naked inside Sister Beth's room she has already gotten to her, and my poor Rebecca. Who knows how many girls this... this DEMON has corrupted in this school! We need to prepare and be careful, or she will doom us to hell!\" The nun pronounced the word \"demon\" with such emphasis and disgust that she almost spit on the security guard. Jeana did not show the tension and fear that Mother Grace displayed. She smiled clenching her fist in excitement. \"We are going to fight a demon! Cool!\"\n\n--------------------------\n\nTHREE DAYS LATER\n\nIt was early morning, the light barely visible in the sky. But Sister Beth was already awake. She now carefully closed the door of the chapel behind her. This was the former main chapel of the school, which was now mostly unused. Only Mother Grace came here for a private mass with the novices she mentored, every day without failure at six in the morning. What they didn't know was that for the past days, one hour before mass, Sister Beth sneaked in the chapel to leave them a little prize.\n\nAs it was common in such chapels, right by the entrance was a pillar of marble with a bowl at the top. It remained filled with holy water so that the novices could bless themselves upon entering. Sister Beth stood in front of the bowl and began to lift her habit, exposing her toned, perfect legs covered in a beautiful pantyhose. Tucked inside her left leg the majestic cock stretched the fabric, almost tearing it. Her balls were squeezed against her crotch, one of them actually escaped down her other leg. It took her a few seconds to pull the tight pantyhose down freeing her package.\n\nThe nun softly stroke her dick, watching as it became rock hard with the mere thought of what she was about to do, veins pulsating under the skin and precum dripping from the tip. The Sister stroke her dick vigorously, keeping the tip over the bowl of water. She thought of Valery and Rebecca, both bloated in cum. She recalled the scenes of her mighty angel Kristanna, ravaging their cum filled bodies. Sister Beth imagination was so vivid she could practically taste Kristanna's delicious nectar in her mouth. When she opened her eyes she realized that she actually had her own fingers in her mouth, and tasted her own precum. Sister Beth simply chuckled at her own daydream, the dark circles and corrupted veins evident around her glowing eyes. She had a moment of self reflection, amazed at how quickly she had learned to love her new life. It was almost as if there were few things worth living for now, beyond the ecstasy and pleasures Kristanna had brought upon her.\n\nEspecifically, Sister Beth had come to realize she had a weak spot for shaming, dominating and then ravaging girls with her cock. Oh how she enjoyed \"purifying\" Valery with her \"holy seed\". The only exception to her fetish being Kristanna, who Beth had a devout reverence for. The once sweet and dedicated nun was now completely deranged, eager to plunge her massive prick in as many holes as she could find. And the way she saw thing, this was all the Lord's work. She had been blessed with her \"purifying rod\" to bring holiness to as many as she could.\n\nWith countless scenes of delicious depravity running through her mind, Sister Beth quickly felt the orgasm approaching. While her cock oozed constant drops of precum in the water bowl, her cantaloupe sized testicles pulsed, grew and churned inside her dangling sack. She trembled in agonizing silence, knees wobbling, glowing eyes rolling back. But she couldn't cum here, the mess would be too great and that was not Kristanna's plan. Sister Beth bit her lower lip so hard to hold back her orgasm that she tasted a bit of her own warm blood. It took every fiber of her being to stop herself from covering the chapel entrance in jizz.\n\nCarefully, the sister stuffed her cock down her leg back into the pantyhouse, which instantly became wet. The nun adjusted her habit, fixed her outfit while taking a deep breath to try and normalize her composure. Her eyes went back to their regular color, allowing her to pass for the usual nun she had always been. She made sure all precum had seamlessly mixed to the water. With a malicious smile, Sister Beth walked out of the chapel and back towards her room. However, she actually entered the next door into the \"Secret Room\". The air was warm and thick, the smell of sex and cum evident. A heavy breathing and soft moans could be heard coming from the dark. Sister Beth closed the door and turned on the lamp, bringing some light on the situation. She couldn't hold back the wicked grim when she looked at Rebecca. The girl was naked, with the exception of the white novice veil persistently on her head. She was also completely tied up on the bed.\n\nRebecca lied with her belly up, upside down on the bed. Her arms tied with silver tape to the feet of the bed above her. Her legs were tied open to the corners of the bed at the opposite end. Resting between her legs the massive penis pointed straight at the ceiling, towering, throbbing constantly. Wrapped around its base was a ring of silver tape, squeezing tight as to block anything trying to pass through that bulging urethra. Inevitably, the tight band also limited the passage of blood, making the massive log Rebecca had for a dick stand semi-erect as well as look extremely vascular. Huge veins as thick as a finger bulged with blood under the skin. It was as if her dick wanted to grow even harder, but it ran out of fuel. At the tip, the glans was pulsating with a live red color. Sister Beth had mercilessly inserted the black dildo she owned almost entirely down into Rebecca's giant cock slit. An additional measure to keep the girl from cumming.\n\nResting comfortably in the bed between Rebecca's legs was a pair of beach ball sized testicles. So swollen and bloated they looked like they might explode. Even her balls had their own veins. Once in a while they churned and shifted inside the scrotum, almost visibly gaining weight. Rebecca was gagged with the same tape that bounded her. Her head partially hanging off of the edge of the bed, chest went up and down with the heavy breathing. Her eyebrows were elevated in her forehead, stuck in a constant frowning position. Her blue eyes looked tired, distant. Under the white novice veil on her forehead part of her copper-colored hair escaped. It was a mess, partially glued to the girl's face.\n\nEvery few seconds she rolled her eyes, her back arched and her entire body convulsed as if she had received an electrical shock. This lasted for a few seconds until she relaxed again, rested on the bed, breathing more rapidly. It was unclear if she was orgasming, or simply trying to escape. She seemed to be lost in some sort of trance. So much so that Rebecca didn't even acknowledge Sister Beth's arrival, stuck in her own universe of both pleasure and agony. The nun approached the bed and began to talk. \"There you are, my child. I am so happy you could contain yourself while I was gone. This cock of yours is such an abomination, a sin against all that is of the Lord. You know deep inside you are not supposed to use it, right? The more you resist it's temptations, the more you will keep your soul from being tainted. Do you understand?\"\n\nSister Beth removed the tape covering Rebecca's mouth. The novice just let out a guttural scream, followed by mostly incoherent words. \"C-cum! My cock, need to cum! Fucking... FUCK! Dick! CUM! PLEASE! Mmmpph...\" Sister Beth ignored the girl's mumbling as she shook her head in disappointment, talking over the animalistic moans and constant bable. \"Poor girl, still filled with sin. Maybe another day in confinement will make you realise the error of your ways? But don't worry, I brought you breakfast!\" The nun said with a surprisingly nurturing voice. She stood up over Rebecca's head and began to lift and remove her habit, freeing her rock hard prick, already drooling it's precum. Sister Beth took a second to pull Rebecca further towards the edge of the bead. The novice's head fell back forcing her to open her mouth, her neck in perfect alignment with her torso.\n\nWith precision Sister Beth placed the head of her cock in Rebecca's mouth. She moved it forward, the girth stretching the girl's jaw, then pushing past her throat and bulging her neck. Sister beth moaned as she felt her cock so tightly squeezed in Rebecca's chest, making its way down her esophagus. In a few seconds of persistent thruting Sister Beth was already fucking Rebecca's face, her melon-sized testicles swinging back and forth, smashing against Rebecca's forehead. Beth leaned forward and grabbed Rebecca's petite breasts, massaging them while her pelvis seemed to move like a separate part of her body with tireless thrusts. She saw Rebecca's colossal prick throbbing, wiggling as it seemed to want to cum but couldn't. The wet choking noises filled the room as precum and saliva cascaded over Rebecca's entire face.\n\nSmiling with satisfaction Sister Beth threw her head back, the black veil caressed her back as she closed her eyes and kept thrusting her hips. She could feel all the sexual energy emanating from Rebecca, and she drained it all. Still new to the sensations of feeding on sexual energy, the pleasure overwhelmed the nun. She opened her mouth sucking in all of that blue energy with all of her hunger. Her eyes opened wide, glowing brighter than ever, dark veins surrounding them. Sister Beth could not hold back this orgasm to save her life. The cum was almost forced out of her balls shooting straight into Rebecca's stomach in unprecedented quantities.",
        "As Sister Beth absorbed that energy, she felt her entire body tingling, her ass cheeks pulsed and grew, even her hips grew wider. If the nun wasn't so lost in the mind-melting pleasure she would also have noticed her thighs and breasts swelling larger. As Beth's perfect body became even more curvy and padded with delicious flesh, she pumped gallons of thick spunk inside Rebecca, whose belly was now visibly swollen. The orgasm continued endlessly, pushing pas a minute of pure bliss. When Sister beth finally looked down she saw the massive belly on Rebecca, as if she was nine months pregnant with twins. And underneath the girls hips the bed was drenched with her juices as well as cum that constantly leaked out of her asshole.\n\nSister Beth took a step back pulling her cock out. She saw Rebecca practically drowning as cum poured out of her mouth and nose, down to her eyes and forehead, drenching her novice veil. Beth took a good look at herself, noticing how her body had developed. While she was nowhere near Kristanna's curves, she was definitely much thicker than before. The nun grabbed her own ass and shook it, slapping the huge and firm flesh that she never had until now. She watched as waves ran through her ass cheeks and down her thick, toned thighs. \n\n\"Hmm this feels so good!\" the nun said to herself, elated with the satisfaction of feeding. She began to clean up her cock with towels and grab her clothings again while talking to Rebecca. \"Good girl, you ate all your breakfast! Now, I have to go run some errands, but I will be back to give you lunch. Maybe this time I'll use the other end, the way you like the most.\" As Sister Beth stood up Rebecca was still trying to beg. But she ended up just gurgling cum and coughing it out. Sister Beth roughly wiped the cum off of the novice's face and gagged her once more with the silver tape, leaving the room.\n\n---------------------------\n\nAisha, Valery and Kristanna attended their classes. It was a very different experience for them now, because everyone noticed the obvious changes to their bodies. Valery's tits were immense, her uniform barely fit anymore, working overtime to contain her chest. Her curves had become obviously emphasized all over. Aisha's ass almost tore through her clothes, all of that butt flesh tightly squeezed inside her pants, barely covered by her skirt. And Kristanna not only was taller, she somehow matched Aisha in ass size, but with much bigger tits and muscles. Even the teachers seemed embarrassed and avoided looking at them. \n\nThe three students tried to go about their days ignoring the attention they drew. Valery conducted herself much more differently now. She was shy and reserved. While she didn't take any bullying from her former \"friends\", she also didn't seem to get involved in any. Similarly to Kristanna, she just went through the motions. Aisha was more active, talking to other friends and hanging out with them in the intervals too. She was a natural extrovert, an independent mind who was friends with everyone.\n\nRegardless of their differences, all girls had one thing in common: their lust for sex was endless. They could barely think of anything else, simply waiting to fuck after dinner. In fact, for the past three days since what Kristanna called \"the cumsplosion\" in Sister Beth's room, they had skipped all meals knowing they would get fully fed with cum in the evening. Kristanna and Sister Beth sustained themselves from all the sexual energy they drained, all-the-while feeding the girls with their fertile spunk. The perfect circle.\n\nWhat they did in the secret room and in Sister Beth's room was far beyond just regular sex. It was more like a wild ritual of extreme depravity. Progressively, Kristanna learned the limits of her body and powers. And it wasn't just herself, but also how much more flexible and strong she had made all of her partners. She could push their bodies beyond human capabilities, with her massive dick and rivers of cum. All to satisfy her unquenchable lust. Getting used to these changes made her bolder each night. At this point she was certain she had impregnated all three of them, maybe even Sister Beth, if that was even possible. They would often fuck at the Secret room late into the night. Kristanna had developed an obsession for tight assholes, ravaging both Rebecca and Aisha first, before moving on to the others. The Sister favored Valery as a partner, obsessed with her purifying fetishes. She used the girls three holes and then her giant tits, often in creative and painful ways, which only made Valery cum harder. They would fuck until they had exhausted Aisha, Valery and Rebecca of all of their sexual energy. That left Beth and Kristanna still horny, so the two succubus would turn to each other. \n\nKristanna still wasn't sure what she had done differently with Sister Beth that had transformed her. The other girls, while extremely addicted to cum and sex, did not seem to have turned as the nun. They could not feed on sexual energy, nor their fluids corrupt anyone. When aroused, Valery displayed the inverted cross in her head, she seemed somehow more bound to Sister Beth than to Kristanna. The other two had the inverted pentagram, which they now recognized as Kristanna's seal. All of them were enthralled, completely charmed and addicted to the bodily fluids of both Sister Beth and Kristanna.\n\nIn the middle of the morning the class was interrupted as Sister Denise, the chief doctor, came to the door. She walked in the room in her entirely white habit, approached the current teacher and whispered something in her ears. They both nodded and the teacher spoke up. \"Kristanna Smith, could you please follow Sister Denise to the infirmary for a routine exam?\" Kristanna's heart raced, everyone looked at her. She could feel the judgemental looks of all girls, even heard a few whispers.Things like \"You got busted, enjoy!\" and \"Gotta get those 'roids in check.\" Kristanna stood up adjusting her tight uniform and walking to the door. She followed Sister Denise across the hallways towards the infirmary.\n\nAs she watched the tall and lean nun walking in front of her, Kristanna's mind raced with scenarios and possibilities. How was she going to justify her growth? If she was examined, what would the results be? She was clearly not ordinary. They went past a few guards into the more private medical facilities of the school. Here the hallways looked like a hospital from the second world war. That smell of cleaning products, the walls that were once white, but had turned slightly yellow from age. Sister Denise guided Kristanna to a big room full of curtains forming small booths. Inside their booth there was an old medical bed, with supports on the side to hold legs up. From the posters on the wall showing reproductive organs to the bed and overall equipment, this was clearly a gynecology clinic. Kristanna became even more worried, of course there would be a gynecologist stationed at a school only for girls! Back at home she had managed to avoid going to the gynecologist and fool the Smith's. Now her secret was gonna get found out for sure!\n\n\"Please take a seat on the bed, my dear.\" Said Sister Denise, with a very high pitched, soft voice. The white-dressed nun should be about 1,75 in height and seemed very thin. It was impossible to tell the color of her hair as it was neatly tucked under her white veil, but her complexion reminded Kristanna of Aisha, with a tanned, caramel colored skin. Her eyes were light brown, slightly long on the edges, giving her a somewhat asian look. This was contrasted by her full lips, which made her gorgeous even without make-up.\n\nThe redhead did not obey the command from the doctor, she knew that if she moved to sit on a bed that high she was going to show what was under her skirt. Instead she stood nervously, trying to think of a plan. Her thoughts were interrupted by Sister Denise calm but direct voice. \"I think we both know what I will ask you, so what about you just tell me what you have been taking and how do you get it into the school? I know it's not just you, I will talk to the others later.\" Kristanna saw no alternative but to try and play the victim, after all, she was still a teenage girl. \"Well... I'm not taking anything, it's just... my body is different.\"\n\nSister Denise internally rolled her eyes, she couldn't possibly believe that. But she remained professional, nodded and spoke calmly. \"Different how?\" Kristanna looked down at the floor, doing her best to maintain an uncomfortable and submissive body language. \"Well... I can't really tell you, I just have to show you or you won't believe me.\" The nun was happy to hear that Kristanna was willing to cooperate. She wanted to see where this was going. \"It's ok, my dear. Whatever it is I am sure I can help you figure it out.\" The redhead nodded nervously in response, she looked around the booth. This was actually a big room, but she couldn't really see beyond the light blue plastic curtains. Kristanna used her aura vision to make sure no one else was around. She asked as a formality. \"Are you sure we are alone here?\" Denise nodded, her curiosity officially peaked. \"Yes, my dear. It's just us this morning.\"\n\nKristanna began to unbutton the belt on her skirt. But before she would reveal anything she spoke. \"Can you turn around?\" Sister Denise complied, she knew it was important for girls to feel comfortable. Kristanna let her skirt fall to the ground, then she began to roll down her pantyhose, letting her balls and cock go free. The redhead took a deep breath, her heart was actually pounding with adrenaline. It was the first time she openly showed herself to anyone intentionally, without any \"build-up.\" \"You can look now, but please don't run.\" As Sister Denise turned to look her eyes widened in surprise, her jaw almost dropped to the floor. She was expecting something different, but not THAT. The massive cock was soft, and yet it almost hung down to Kristanna's knees. Her ballsack definitely did, resting between the girls thick, toned thighs.\n\n\"What... I don't... my God!\" The doctor stumbled with her words, her hand covering her own mouth. Kristanna trembled, she kept up her act staring at the floor. \"Like I said... I'm different.\" Sister Denise did all in her power to keep her composure. A second ago she had no clue such a size was even possible, her mind was running with medical questions and concerns, curiosity, shock, wonder. Everything mixing together. \"Ah... have you always had it?\" She asked. Kristanna nodded. \"Yes, but it was small until a couple years ago when it started growing, and now I have this. My entire body is changing rapidly.\" She didn't lie, the doctor didn't need to know the details. \"May I examine it... I mean, you?\"\n\nWith a nod the redhead hopped on the bed. She lied back and opened her legs wide, placing her shins on the two supporting arms on the side. Her sack rested comfortably on the bed and her cock on top of it. \"I... I have trouble controlling it. It might get hard... I'm so embarrassed.\" Sister Denise gulped as she took a good look at the sheer size of Kristanna's dick. She did her best to act professional and avoid shaming the student for her \"different\" body. Denise put on gloves and approached. The first thing she did was cup both cantaloupe sized testicles with her hands and lift them, looking underneath. She saw the beautiful pussy, with juicy lips and a huge clit on top, bigger than any she had ever seen. \"You have both genitals... how is this possible.\" The nun said, mostly to herself.\n\nThe doctor's reasoning was interrupted as Kristanna let out a moan, her balls churned in the doctor's hands and her dick throbbed, it was beginning to grow. The thick veins on it's side bulged as it began to raise. \"I'm sorry... you are touching it... hhmm.\" Kristanna cried, trying to sound clueless and innocent. Inside she knew exactly what she was doing, she wanted to fuck the brains out of that doctor and the thought was making her hard. But she had to be patient about it. The doctor watched the cock throbbing in front of her, amazed at the feeling of the heavy balls churning and twisting in the scrotum on her palms. For a moment she had the urge to just drop that scrotum and run, but she couldn't. What kind of professional would she be if she treated her patients like that? \"Can you... stop it from growing?\" She asked the redhead. Kristanna held the sides of the medical bed and shook her head. \"N-no... it's really sensitive... sorry!\"\n\nAs the cock grew harder, Sister Denise just observed. She wanted to know how functional her male organ was. But by the looks of it, \"functional\" was an understatement, this cock was on overdrive! When it reached full mast the skin peeled back and revealed the thick glans. From the cock slit a small blob of precum emerged. Something about that cock was so alluring, like a magnet. It pulled Sister Denise closer, she could barely help but look and smell it's musk. It was so strong, a vascular tower of flesh, throbbing wildly in front of her. Seeing how closely the doctor looked at her dick, Kristanna flexed her muscles. She knew that this would cause her precum to spurt out of the tip. And so it did, splashing the Sister's face.\n\nAt first the doctor was just surprised, almost jumping back as the warm precum hit her face. She cleaned some of what was on her lip with her hand, but as soon as she tasted it in her mouth she felt a shiver. It was the best thing she had ever tasted, period. Her body began to grow warmer and without realizing the doctor was licking precum off of her glove. She woke up from a trance as if she had missed the last few seconds. \"Ahh... how come this tastes... so good.\" Kristanna smiled wickedly but Denise couldn't see it, from this angle her face was blocked by her cock. All the doctor saw was this massive dick throbbing in front of her, and that delicious precum slowly oozing out the slit, beginning to slide down the side of the monster. She couldn't let it go to waste, so she grabbed the middle of the cock with both hands and licked the precum off of it. Rationally Denise couldn't believe what she was doing, but it was stronger than her, she couldn't help but want more of what she had just tasted. Her tongue nibbled and slurped all over the cock head, cleaning every drop of precum she could find.\n\nAfter a few seconds of licking Sister Denise finally found the strength to pull back, a shiver went up her spine making her entire body shake, heat rising down her crotch. Delirious, she tried to make sense of what had taken over her. \"Oh Lord... what is this? I just... I want... more of it.\" And with that she removed the rubber gloves and immediately dove back in, her mouth opened wide trying to wrap around the thick cock head. With her hands she pulled it towards herself to achieve a better angle to try and suck on it. The Sister's tongue flickered all over the glans in the hopes that more precum would ooze out of the slit she had just licked clean. And her desires were answered as blobs of precum were shot straight into her mouth. At that point Kristanna just leaned back, relaxed her spread legs and enjoyed the blowjob. She eventually removed her sweater and shirt, caressing her own hard nipples while being sucked by the hungry doctor. \n\nAll that Denise managed to fit in her mouth was the glans. When it pushed back against her throat she had gag reflexes and hesitated, having no experience in this kind of activity. While pleasing, for Kristanna this wasn't enough. \"Throat or nothing, Sister Denise.\" The redhead said with a menacing tone as her legs left the resting arms on the sides and wrapped around Denise's head, forcing her towards the cock. The doctor opened her eyes wide at the realization of what had happened. But it was too late, she felt the cock push past her throat and into her neck, it bulged with the obscene girth.\n\nDenise was pretty sure she should be in extreme pain now, but she wasn't. Somehow that massive prick was making its way down her esophagus and violating her body without actually killing her. Tears began to roll down Denise's cheeks, her eyes irritated with the violation of her gulet. She trembled, holding on to Kristanna's pelvis and trying to push up, but she couldn't match the strength of the redhead's legs. The student only relaxed the grip when she felt her cock poking the Sister's stomach. At that point Sister Denise had swallowed more than two thirds of cock.\n\nIn despair the sister pulled back as soon as she realized the pressure on the back of her head was gon. She managed to unclog her breathing tubes enough to take a big breath but before anything else could be done Kristanna pushed her back down with her legs. After some time of back and forth, the nun just gave in, figuring she had to do this until the redhead was satisfied. Her hands moved down to massage Kristanna's balls. Denise was surprised to feel them growing larger and heavier in her palm as she moved her torso up and down, throat fucking that cock with all of her upper body. Kristanna moaned, enjoying the tight grip on her cock. She cupped her own breasts and began to fill the milk flow out of her rock-hard nipples.\n\nIn just a few minutes the pleasure of orgasm took over Kristanna's brain, flooding her with sensations of ecstasy. She rolled her glowing eyes and arched her back on the bed, pushing Denise's head down against her crotch without mercy. As she came, her cunt splashed the nun's body with a massive amount of juices, drenching her white habit from the chest down. Sister Denise opened her eyes wide in surprise, her hands wrapped around her stomach as she felt the torrent fill her up so fast. It felt like her guts were being punched from the inside with each powerful jet of cum. In mere seconds the thick spunk was coming out the edges of the nun's mouth and through her nose, clogging up all of her breathing tubes. Kristanna convulsed in pleasure, her tits pointing outwards and showering the plastic curtains with milk. \n\nThe precum was nothing compared to the thick and delicious taste of cum. While she could barely breathe, the only thought in Sister Denise's mind was that she needed more of it, whatever the cost. Years of self-repression and discipline in her life as a nun all seemed like a complete waste if this was what she had been missing all along. As shame slowly vanished from her mind, she allowed herself to indulge. Denise slowly gave in to the sensations of the here and now. No judgement, no care for what God or others would think, just pleasure. Her otherwise pure body and mind overwhelmed by the sensations of the extreme. She felt dirty, violated and way past her body's limits, but she loved every second. The deprivation of oxygen only heightened Sister Denise's sensations as she bent over Kristanna's crotch and drank her load. Every nook and cranny of her insides flooded with thick cream, a sensation of fullness she could never imagine.\n\nPressure began to build up and push from the inside of Denise's swollen belly. Soon it could not be contained, and with haste the doctor began to pull her habit up revealing her flat ass. She then quickly lowered her panties down her thighs with barely enough time to get it out of the way as a torrent of cum to just shot out of her asshole. The sister spread her feet apart letting her body become a vehicle for conducting spunk. Both jaw and eyes opened wide in disbelief, Denise almost fainted as she became completely bloated. White cream shot out of her ass, each spurt increasing in power and reach. The yogurt splashed onto the plastic curtains, making the loud and distinct sound of thick fluid raining on plastic.\n\nThe next minute seemed to have lasted an eternity for both Kristanna and Sister Denise, but finally the orgasm came to a halt and the doctor pulled her torso back up. The cock lodged in her chest spilled out spunk as Denise felt dizzy and fell back on a pool of ever-leaking cum. She coughed and gurgled, tears in her eyes, thick cream coming out her mouth and nose as she tried to clean up her breathing tubes. Kristanna moaned in pleasure on the bed, relaxing and enjoying the afterglow. Her cock towering hard, throbbing. Her balls churned, working hard on more of her addictive juices. She sat up and watched the doctor lost in that sea of white, looking at her own drenched clothes. Sluggish and stunned Sister Denise pulled off her drenched habit and veil, revealing her beautiful locks of dark brown, curly hair that fell down just past her shoulders. The nun experienced a mix of confusion, awe and bliss as she felt her entire body heat up, random spasms hitting her.",
        "Sister Denise fell back, her muscles tensed. She felt like her entire being was on fire, her crotch burning with unprecedented lust. The nun grabbed her tits with both hands and felt the flesh bulge, inflating under her grip and almost escaping between her fingers. Her small bra came undone under the pressure of her growing tits. The small pair of B cups grew into over a handful of juicy breasts. She also felt her hips shift, bones changing and reshaping themselves, growing wider. She arched her back and felt the same swelling effect on her ass cheeks and thighs. While her mind tried to understand what was happening, something stirred in her lower belly, and a protrusion pushed out of it. The cock emerged out of the doctor's body in a sudden spurt. Right underneath it a pair of orange-sized testicles fell in a newly formed sack. Looking down past her swollen belly she could see the tip of the appendage. Sister Denise would have panicked, but her mind was melting with pure pleasure. Juices squirt out of her cunt as her body changed from the previously curveless, almost skeletal body she had, into a perfectly padded, juicy and thick bimbo body with a generous twelve inch cock.\n\n\"This is n-not... possible. You... you are not human!\" Sister Denise cried between moans and grunts, with the last corner of reason left in her pleasure-filled mind. Kristanna's lips shaped into an evil grin as she stood up, looking down at the transforming nun. \"No, I am better!\"\n\n-----------------------\n\nThe old hospital bed creaked as the metal joints were pushed to their limit. On top of it, lied Sister Denise, her caramel skin partially covered in cum all over her face and torso. Her new melon sized tits served as pillows, smashed on the mattress underneath her body. Padding her together with her cum filled belly. The nun's hands clenched to the sides of the bed, her face lying on it as she rolled her eyes in pleasure and moaned, drooling on the sheets. Underneath the bed her newly grown cock bounced and shook, dripping precum on the floor.\n\nStanding behind the sister was Kristanna. The towering redhead gripped firmly on Denise's fat, juicy ass cheeks that wobbled in front of her. Her eighteen inch cock was deeply buried in the woman's cunt. Gripped tightly all around, it almost turned her insides out when the redhead pulled her giant hips back, only to smashed them against the doctor's ass in less than a second, watching her huge cock vanish. As the prick gained territory inside the nun's womb and torso, the cum in her belly had nowhere to go, so it squirt out of her asshole onto Kristanna's shredded abdomen. The constant and accelerated rhythm of the student's thrusts were almost inhuman. Her toned legs shook wildly, muscles flexing. Her obscenely huge ass cheeks moved as if they had a life of their own, shaking and clapping against each other, the firm flesh moving with a slight delay due to inertia. The noises of their wet bodies slapping on each other mixed with the grunts and moans, echoed in the empty room. They fucked with abandon, holding nothing back.\n\nIn a sudden interruption, the curtains behind them opened. On the outside a scared, petite nun stared at the scene of her superior and mentor being ravaged on the hospital bed, surrounded by a pool of fluids. The girl didn't know what was more shocking in that scene; A powerful redhead amazon thrusting like a tireless machine, her basketball-sized testicles swinging in the sack between powerful thighs. Or Sister Denise's in her new bimbo body, which made her barely recognizable, moaning in pure ecstasy as she was pounded to oblivion. In the height of her pleasure, Kristanna had forgotten where she was and how easily she could be heard by others. But now it was too late, they were caught and she could only improvise.\n\n\"Dear Lord! S-Sister Denise! What are you doing!\" exclaimed the young nun, her hands on her chest in shock. Denise found a second to turn her head, bring her rolling eyes back and look at the young nurse. She laughed before she spoke with a lust filled, rough voice as her throat was sore and covered with jizz. \"Nurse Lilly! L-let her fuck you... it's amazing, ahhh fuck! MORE! Give me more cum!\" Denise then let out a grunt and a cum-laced burp, her eyes rolling back up and her tongue sticking out as she smiled in ecstasy.\n\nBefore Lilly could react, Kristanna's big hand was already grabbing her by the veil. It almost came off, revealing Lilly's black, shoulder length hair. The girl had a very pale complexion and stood at only about 1,60m (5'4\"). Her petite body had no chance against Kristanna's powerful arm as she shoved the girl's head towards Sister Denise's ass. Without hesitation she pushed Lilly's head between the round cheeks, trapping her face on Denise's asshole. As the cum poured out of Denise, Lilly inevitably drunk and smelled it. In the next few seconds that Kristanna held Lilly's face down, she saw the young nurse's tense body beginning to relax. She stopped struggling and began licking the cum, eventually slurping eagerly on it. A minute later Kristanna actually had to pull Lilly's head off of Denise's asshole against her will. The girl looked drunk, her face covered in dripping cum. THis was enough, she had lost it as all who came in contact with Kristanna's cum. The redhead tossed Lilly to the ground, she fell on her knees. \"You want more cum? Suck it out of your bosses cock. I have a womb to fuck.\"\n\nLilly crawled on the pool of fluids under the hospital bed, having only the thought of drinking more cum in her mind. She saw Denise's throbbing dick hanging free and grabbed it with both hands. Without hesitation she wrapped her lips around the appendage and began sucking. Meanwhile, Kristanna shoved her cock deep inside Sister Denise's pussy once more. The unique sensation of having her cock sucked while her cervix was violated and her womb stretched sent Denise over the edge in a matter of seconds. With a just a few thrusts from Kristanna the doctor convulsed on the hospital bed, her legs trembling without any strength as she dumped her first load inside Lilly's mouth. The nurse gulped on it eagerly, even though it was not as tasteful as Kristanna's cum, she could barely tell the difference. Kristanna laughed as she felt the spasms around her dick, she also noticed Sister Denise cunt drenching her crotch and balls with juices. That only motivated the redhead, her thrusts gained speed.\n\nIt was a matter of time until Kristanna could no longer hold back. Her testicles grew so full they looked like two beach-balls. Her scrotum barely contained them, bumping against her inner thighs as it swung. Climax hit the redhead like a lightning bolt coursing through her body. As she rolled her green, glowing eyes and threw her head back the explosion of fluids followed. Milk showered from her nipples over Sister Denise. Her cunt washed the floor and curtains behind her with consecutive geyser-like bursts of pussy juice. In unison with her cunt, Kristanna's cock flooded Denise's womb with her fertile seed. \"Arrrgh... not in my wooomb! I'm gonna get pregnant! I don't know what you are and I'm gonna bear your child!\" Denise cried between her gasps and grunts as her torso kept rising on the bed, pushed up by her growing belly. Despite protests, Denise reached another orgasm, she felt her dick swell and grow under the bed, her load making Lilly choke on cum.\n\nLost in her orgasm Kristanna saw the shadow of Lilly moving underneath the bed. The nurse knelt behind Kristanna and showered in her cunt juices. The redhead felt the delicate hands sinking on her massive ass. Lilly gaped her mouth open to catch as much squirting juice as she could. When Kristanna finally finished cumming she stumbled a couple steps back, breathing heavily. HEr leg bumped on Lilly's face. The redhead turned to look at the nurse who was completely drenched, licking the fluids from her own arms and hands in a sort of hypnotic state.\n\nIt wasn't long before Lilly felt the violent spasms all over her body and began contorting on the ground. Unlike Sister Denise, she didn't gain many extra curves. Her body remained relatively small, but the cock that emerged from her crotch was a wonder to behold. Standing hard at about fifteen inches, with almost scary veins under its skin. The ball sack underneath them was equally massive, each testicle the size of a cantaloupe. Lilly had a moment of reason, she looked down at her crotch in horror, then looked around and all over her body. \"Why... why am I doing this... what is happening?\" She whispered to herself. Then she began crawling out of the booth, towards the door to exit the infirmary. She couldn't be very fast, her entire body was numb and she felt weak.\n\nKristanna just stood watching as Lilly began to crawl away. She chuckled at the pathetic attempt. Before the girl could reach the door she heard the heavy wet steps of the towering redhead approaching from behind. Then a sudden pull to her hair as Kristanna clenched her fists on the ebon locks and started dragging Lilly back to the booth. Sister Denise rolled off of the hospital bed and fell onto the floor, her belly was so swollen she could barely move. She was a literal cum dumpster, having reflexes of nausea that made her spit out cum while her asshole and pussy poured out the thick substance all over the place. Both her digestive track and womb were overflowing with jizz. \"Your boss seem to be dealing with a bit of a cum issue. You on the other hand have a small body, like Rebecca. Your asshole must be so tight, I'd never let you escape.\"\n\nAs if she carried a bag of trash, Kristanna lifted Lilly and tossed her on the hospital bed, flipping her around so she had her ass up, like Denise before her. The redhead rubbed her dick against Lilly's butt crack a few times until she found the asshole, then mercilessly began to push her inhuman cock, forcing her way in despite the girl's protests. As the cock head went in Lilly was about to let out a loud scream, but Kristanna placed two fingers in the girl's open mouth and hooked it to the side like a fish, stopping her from screaming and completely dominating the girl. With her ass cheeks flexing powerfully and pressing together Kristanna pushed one more time and shoved several other inches of cock inside Lilly, who had a bulge with the exact shape of Kristanna's cock in her lower belly.\n\n\"Ahhh fuck! Even tighter than I thought! Hmmm this asshole is fucking delicious! FUCK!\" As Kristanna said that, she wrapped her hands around Lilly's waist. The girl was so small compared to the redhead amazon that her fingers almost touched around her torso. But as soon as she pulled Lilly back towards her crotch her waist got visibly wider, impaled by Kristanna's cock. Lilly rolled her eyes, her jaw dropped as she gasped, the air forced out of her lungs. Her mind barely making sense of how she was being used like a human condom. As Lilly tried to register the insertion that pushed her organs away, Kristanna began to move her back and forth, practically stroking herself using Lilly's body. The nurse was limp, she lied down on the bed and took it, the pain slowly turned into an exotic, yet intense pleasure. No wonder that being violated by such massive dick was an alien feeling to the nurse.\n\nKristanna began her thrusts, pulling Lilly's body as she pushed her hips forward. The expression on Kristanna's face was intense, she had her green-glowing eyes wide open, lizard pupils watching her dick move in and out of the tight asshole. The wicked smile on her lips gave her an obsessive look. Kristanna was more herself now than any other time, pounding a tight asshole mercilessly. As her desire escalated, she grabbed Lilly's wrists pulling her arms back. She then lifted her off of the table using both her arms and her impaling cock. The redhead flexed her knees, opened her legs wide and began to thrust forward and up, bouncing Lilly off of her lap and pulling her back by the wrists. Each powerful thrust impaling the girl's asshole, stirring her insides. Lilly was hanging from Kristanna's cock helplessly, her head feel forward, she gave up struggling. She watched her own huge prick fully hard as it bounced and swung in front of her. While being ravaged, Lilly came harder than she ever thought possible. Her muscles spasmed out of control, she let out agonizing grunts, drooling all over the obscene bulge that protruded from her abdomen. Her swinging cock painted the curtains white with powerful jets. It flung and shot cum in every direction as Kristanna didn't slow down even a bit.\n\nThe redhead continued to use Lilly's body until she reached another climax. With no surprise, Lilly's petite body could barely hold the immense amount of cum inside. The spunk shot up her ass all the way out of her mouth, adding a few more gallons of fluids to the mess in the room. Kristanna eventually placed the petite girl on the bed, panting and enjoying the afterglow. Lilly had such a swollen abdomen that she could almost harbor herself inside her own belly. Maybe her deliciously tight ass had made Kristanna cum harder this time, or maybe it was because Lilly was so small to begin with, that the load looked bigger inside her. Regardless, the nurse was half asleep, she had orgasmed about four times while being fucked and had her energy completely drained by the succubus. Kristanna looked at Sister Denise on the floor. She was now coming back to her senses as her body recovered and most of the cum poured out of her system, giving her some room to breathe and move accordingly. \"Are you l-leaving?\" The doctor asked Kristanna, shame was evident in her voice. The redhead nodded. \"Yeah. Gotta go back to class.\"\n\nSister Denise looked down at the floor, she struggled with what she was about to say, but she couldn't help herself. \"C-can I have some more... before you go?\" Kristanna smiled wickedly, she certainly had more loads in her, but she couldn't fuck all day at the infirmary. \"More of what?\" The redhead replied, teasing the pour sister a bit more. \"You... you know what...\" Sister Denise answered, but Kristanna wasn't giving in. \"If you don't say it, I don't know what you are talking about.\"\n\nThe doctor cleaned up her mouth with her wrist and mustered the energy to say it out loud, looking to the floor as she couldn't bare to look Kristanna in the eyes. \"Can I have some more of your c-cum, please?\" Kristanna nodded slowly, she grabbed the base of her semi-erect prick and stroke it softly, lifting it and then letting it fall over Sister Denise's face. The redhead slapped Denise with her cock a few times, the nun didn't protest, she just waited with her tongue out. Kristanna played with her a bit, smearing her dick all over the nun's face, slapping her harder and humiliating her. When she had enough fun, she ran her hand on the body of her cock, squeezing the thick urethra underneath, forcing the cum that was lodged in there to pour out on Denise's face. The sister opened her mouth and began to lap up every drop of cum, lick it off of the glans, suck it for more. She closed her eyes and savored it, like a junkie getting her fix. In a few seconds Kristanna pulled her dick out of the doctor's mouth. Denise tried to chase it and grab it back in a reflex, but contained herself once she realized what she was doing.\n\n\"If you want more of my cum, I can give it to you and to your little friend every night. But you are responsible for cleaning up, and you can't tell anyone about me.\" Sister Denise smiled brightly, but once again contained her enthusiasm, clearing her throat before she responded. \"Alright... deal.\" Kristanna looked around, realizing she was naked and her uniform drenched on the floor. \"One more thing, I need some new clothes so I can go back to my room.\" The doctor began to assist her with some hospital clothes, making sure she could go out of the infirmary without raising suspicion. Sister Denise even wrote a report stating that Kristanna had been examined and was in perfect health.\n\nDressed with hospital clothes and a lab coat, Kristanna stepped out of the room and walked on the empty hallways of the infirmary. But before she stepped out, a shadow emerged from one of the rooms and wrapped her arm around Kristanna's neck. The black arm locked perfectly around Kristanna's neck, giving her little chance to fight. Jeana was experienced at this, and escaping her grasp would be hard for the student. The redhead couldn't scream, she struggled, shook and attempted to pull the strong grip off of her. But before she could, she felt her vision fading, her body going numb. She stopped struggling and fel limp on Jeana's lap. The security guard held an empty syringe in her free hand, tapping on Kristanna's shoulder with a smile. \"Got ya!\""
    ],
    "authorname": "Kristanna",
    "tags": [
        "futanari",
        "cumflation",
        "excessive cum",
        "huge cock",
        "transformation",
        "nun",
        "corruption",
        "nonhuman",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/camp-of-blessing-ch-10"
}