{
    "title": "The Long Weekend",
    "pages": [
        "Author's Note: Hey everyone! This is my summer one shot. It's a nice change of pace to do something upbeat and funny. This is inspired by one of my favorite new artists The Weeknd, more specifically, his track \"Gone\". I highly suggest listening to it during the *ahem* steamy scenes. And please excuse my Russian. I am fascinated by the language, but I might be a little rusty with some parts. Happy Reading! ~N4M.\n\n********\n\n\"So what are you going to do?\" \n\nCharlie focused on the television screen, determined to evade the question that'd been haunting her for the past two days. She didn't want to discuss the particulars on the situation; all she wanted at the moment was to clear her mind, courtesy of the trashy reality show in front of her. \n\nKatia was not to be dissuaded. With a determined gleam in her green eyes she stomped over in front of the television, blocking Charlie's line of vision. \n\n\"Oi!\" Charlie exclaimed. \"Will you please move your giant ass?\"\n\n\"First off, my ass is nowhere near gigantic proportions. Secondly, I asked you a question: what the hell are going to do?\"\n\nCharlie sighed irritably. \"Kat, can we please not do this right now?\" She normally loved her spunky roommate with her indefatigable cheerfulness, but today she was clearly not in the mood to deal with Katia and her \"Pollyanna\" routine. \n\n\"Charlie!\" her roommate whined.\n\n\"Katia!\" Charlie shot back, with equal whine. \n\nKatia huffed loudly, her hands balled tightly. \n\nCharlie suppressed an irritated groan. The so-called intervention was going nowhere fast. \n\nAs if sensing Charlie wasn't going to budge on the issue, Katia moved from in front of the television before plopping soundly on the couch next to her roommate. Charlie could tell she was irritated. She sat on the couch, arms folded and silently fuming as she pretended to watch TV.\n\nCharlie knew better than to trust that scene; on the outside it appeared she was admitting defeat, but Charlie knew Katia was plotting several different ways for her to open up. Charlie could practically hear the \"BUTTING IN\" alarm going off in her roommate's head. \n\nShe played along, eyes glued to the screen as she waited patiently, counting down the moments. 3...2...1...\n\n\"You know you can't stay here like this all summer.\" \n\nCharlie grinned. Right on schedule, she thought. \n\n\"I'm not staying here like this all summer. I'm staying like this for now.\"\n\nKatia huffed again, her patience wearing thin. \n\n\"And stop huffing!\" Charlie exclaimed. \"You're making it hotter in here with your dragon breath.\"\n\nKatia shot her a murderous look before slapping her soundly on the shoulder. \"I do NOT have dragon breath. And stop being so pissy! Yes, it sucks that Brent dumped you, but you used up your cunt allowance two days ago so cut the attitude.\"\n\nCharlie winced; Kat was a very easygoing person who normally put up with Charlie's terrible behavior with the patience of a saint. But today she was clearly not in the mood for attitude and fuckery. Charlie knew she'd gone too far. \"Sorry Kat,\" she said sheepishly. \n\nKatia immediately softened, her bad mood disappearing as quickly as it surfaced. \"I'm sorry too. I know you're having a difficult time with this breakup. That's why I want you to get up off the damn couch.\" Her eyes were filled with genuine concern.\n\nCharlie shrugged. \"You know what's funny? I actually am fine with the breakup. Brent was terribly useless. I think what I'm upset about the most is missing out on our Atlantic City trip. What the fuck am I supposed to do for the next few days?\"\n\n\"You can come with me and Leslie and the girls.\" \n\n\"No fucking way,\" Charlie said with a snort. \"You know perfectly well I can't stand Leslie and her two minions. Besides, you guys already made concrete reservations. I can't impose on them.\" \n\nKatia and a few of her sorority sisters were going on a \"Gal Pal\" trip to Myrtle Beach. She initially invited Charlie, who flatly refused. A long weekend trapped with a bunch of giggly bitches in a hotel room was definitely not her idea of a good time. \n\nBesides, it'd had been easier to refuse when she was planning to go with Brent to Atlantic City. He was attending some writer's conference and invited her along. She wasn't looking forward to Brent abandoning her in a Jersey hotel room while he went to boring seminars but she figured the beach and boardwalk would be enough to occupy her time. \n\nWho could pass up a free vacation? But then she and Brent got into a huge fight last week and now she was stuck boyfriendless, best friendless, and apparently vacationless. \n\nIt was barely July and the summer was already sliding into Suckville. \"I know you're trying to be helpful, Kat but I'm going to be fine. Really.\" Just to emphasize her point she attempted to smile although it probably looked more like a painful grimace. \n\nKatia rolled her eyes. \"If you say so.\" She shot \n\nCharlie a wary look. \"Are you sure you're fine about Brent?\"\n\n\"Yes, I really am. We were only dating for two months, Kat. It wasn't like I was already picking out my wedding gown. I'm better off.\" \n\n\"I suppose. Now you're back in the saddle, just in time for a summer romance!\" \n\nCharlie rolled her eyes. \"Only you would get that excited over something so ridiculous.\" \n\nKat giggled. \"It is not ridiculous, it is romantic.\" \n\n\"I wouldn't exactly call fucking a stranger for a few weeks and then peacing out romantic.\" \n\n\"Well it doesn't have to be just a few weeks. Suppose you meet THE ONE and fall in love.\" \n\nCharlie rolled her dark brown eyes. \"Girl, Imma need boots to wade through all this bullshit you're talking. There's no such thing as THE ONE. And even such a thing existed, I'm sure as hell not gonna find it in this boring ass town.\" \n\nKatia shrugged. \"Yeah, you might be right. \n\nEveryone is gone for the summer, either on vacation or home until school starts. The downside of staying in a college town during the summer season.\" \n\n\"I even took time off from work, but I think Dale will give me a couple of shifts back.\" \n\n\"That's because it'll give him more time to ogle your ass while you shelve books,\" Katia said with a grin. \n\nDespite her grimace, she couldn't help but smile with her roommate. Charlie worked at an alternative book store for the summer break. It was pretty simple work and it gave her a lot of time to catch up on her reading. \n\nHer manager Dale was a decent guy but he had a painfully obvious crush on her. Normally he kept it in check but there were a few awkward encounters, the most recent one involving several bottles of wine at an impromptu employee barbecue, and an uncomfortable drunken grope-fest in an upstairs hallway. \n\nNeedless to say when Charlie stumbled into work the next morning still hungover and completely reeking of stale wine Dale pretended like things were normal and she was only happy to play along. Things eventually died down, but Katia still loved to tease her. \n\n\"Can we please not bring that up? I am in the middle of a pouting spell.\" Charlie slumped further into the couch cushions. \n\n\"Aww, there's no need to pout,\" Katia said sympathetically as she patted Charlie's head reassuringly. \"I said you could come to the beach with me.\" \n\n\"Katia, I'd love to but I can't. You know I'm saving up for my new camera; I don't really have the funds for an all-out vacation. Atlantic City with Brent was pretty much a free trip, that's why I was so keen on going.\" She sighed longingly, a pang of regret sharp in her chest as she thought about missing out on the boardwalk and beach. Dammit, this summer suck was really starting to get on her nerves. \n\n\"Well since you're not leaving, I guess it's a good time to tell you that you're going to have a temporary roommate.\" \n\nCharlie's cinnamon-colored gaze fixed pointedly on her friend. \"Say what?\" \n\nKatia flipped her dark hair over her shoulder. \n\n\"No worries; it's no one crazy. My brother just needed a place to crash. He's gonna be in town for the weekend.\" \n\nA single ebony eyebrow rose in surprise. \"Your brother? The mysterious hockey playing brother I've never met?\" \n\n\"That's the one,\" Katia said with a nod. \"Gavril. \n\nHe's back for something big event. He didn't really explain the situation. Gavril isn't big on explanations. He called a few days ago saying he was coming back and reminded me that technically since this place belongs to Papa, he was entitled to stay.\" \n\nCharlie nodded silently. She didn't want to inform her best friend that her brother sounded like a Grade-A douchenozzle. It definitely wasn't her place to point that out. \"So I take it he's staying in the spare room?\" \n\n\"Yeah,\" Katia replied. \"I am sorry Charlie. I only agreed to it because I thought you were leaving with Brent.\" \n\n\"It's not a problem Kat. Technically he's right; this is your Dad's house. I can't stop him from staying here. Besides, with work and stuff I'll be so busy that I probably won't see him.\" \n\nKatia nodded. \"Probably. He is a good guy though; a bit gruff but he's a teddy bear.\" \n\n\"Uh-huh. And when will this gruff teddy bear be making his appearance?\" \n\n\"Today. He didn't exactly say when.\" \n\n\"Ugh...Kat.\" She wasn't in the mood to deal with company. With Katia gone she was content to wallow in her lameness with ice cream and a marathon of zombie movies. But no, now she had to babysit a grumpy old man.\n\nShe knew very little about Katia's older brother. \n\nWhile she'd already met Katia's parents and her younger brother Kirill a few times before, Gavril always seemed to be absent from the picture. She wasn't sure what he did exactly, but he was always traveling. \n\nThe only thing she remembered about him was he went to Eastbrooke University, just like they did, and he lived in this very house. The Denisov family purchased the house years ago when Gavril was in undergrad. \n\nWhen Katia came to Eastbrooke she lived in the dorms, where she met Charlie. Sophomore year they moved into the house and by that time Gavril was gone. \n\nHad it been another time, she might have been enthusiastic to meet him; but given her current foul mood, entertaining another person was not very high on her to-do list. \n\n\"If it's a bother...\" Katia started. \n\n\"No, no. It's not a problem. I suppose it would be nice to have someone else in the house.\" \n\n\" Thanks again for being so cool with this. I know I kind of sprung it on you.\" \n\n\"Oh it's okay. You'll definitely owe me. I want a fabulous souvenir from the beach.\" \n\nKat laughed. \"It's a deal.\" She glanced up at the clock on the cable box. \"Well, I'd better get going. I have to pick up the girls. They're all at Blair's house.\" She rose from the couch with Charlie following suit, walking with her to the front door where Katia's bags were stacked. \n\n\"Alright well I'm off,\" she said. \n\nCharlie gave her a quick hug. \"Have fun babe. And if you can, pick up some hot lifeguard and fuck the tan off of him.\"\n\nThe girls smiled. \"I'll be sure to keep that in mind. And you...you stay out of trouble.\"\n\nCharlie shrugged. \"How much trouble could I possibly get into by myself in only a weekend?\" \n\nKatia smiled knowingly, her green eyes twinkling. \n\n\"Knowing you, I'm sure you'll find a way.\" She slung her purse and duffel bag over her shoulder and grabbed the handle of her pull suitcase. \n\n\"I'll see you Sunday.\" Charlie watched as her roommate lugged her stuff down their steps. Quickly she packed up her Ford Explorer. Before pulling away, she honked the horn twice and Charlie waved, watching as she headed down the street. \n\nAnd just like that, Charlie was officially alone.\n\nShutting the door, Charlie made sure it was locked before walking into the living room and settling back on the couch. She didn't know what to do with herself now that Katia was gone. Since meeting her freshman year, they both gravitated towards one another simply because of their outcast nature. \n\nKatia had only arrived from Russia two years prior. She was a beautiful girl, with inky black hair that fell in soft, lazy curls and wide green eyes that were always smiling. \n\nGuys approached her all the time, but she was painfully shy and quite awkward despite her bombshell looks. She was much more comfortable with her instruments; she was a gifted musical prodigy, excelling at almost everything her nimble fingers touched. Her favorite was the piano. She was studying music and musical theory and hoped to be a concert pianist one day. \n\nWhereas Katia was sweet and agreeable, Charlie was the loudmouth. When she arrived at Eastbrooke, she had the honor of being the only black girl on her floor. What made matters worse, at 5'11 she was taller than most of her blonde and petite counterparts. Charlie stuck out like a sore thumb, with her wild natural hair, dark chocolate skin, and boyish name.\n\nThe girls bonded over their love for cheesy zombie movies and popcorn mixed with M&Ms. They were completely opposite but they balanced each other out. She wasn't ashamed to admit that she was going to miss Katia. Charlie sighed loudly, lying down on the couch. There wasn't shit to do; \n\nShe could spend the weekend with her parents. But her father was currently vacationing with wife number two in Fiji and her mother was busy taking on the corporate world as a finance manager. \n\nEither way they were too wrapped up in their own petty lives to pay her much attention. \n\nCharlie glanced up at the clock. It was only 2 in the afternoon and she was already bored to tears. \n\nShe could feel herself starting to get crabby, and that wasn't good. With another loud sigh she settled back onto the brightly colored pillows on the couch. At least she could lose herself in mindless reality television to kill time before Katia's brother showed up. \n\nBefore she realized it, Charlie was fast asleep. \n\n********\n\nShe awoke with a start, a loud noise jarring her from her slumber. Charlie jerked up suddenly. It was pitch dark in the room, save for the cable box illuminating the current time in bright blue. \n\nIt was quarter to eleven. She peered around and quickly noticed the other light in the room was coming from her ringing cell phone. \n\nStretching languorously, Charlie reached over and grabbed her phone up. \"Hello?\" she rasped. \n\n\"Hey boo\" a breathy voice replied. \n\nStill a little disoriented, Charlie rose slowly. Stumbling blinding, she eventually reached the floor lamp near the television and turned it on, instantly feeling better once she could actually see. \n\n\"Charlie? Charlie are you still there?\" the voice practically yelled. \n\nCharlie rolled her eyes. \"Yes Mimi, I'm still here. What's up?\" \n\n\"Well damn, if you're gonna be all stank about it I'm just gonna hang up the phone.\" \n\n\"Yeah yeah yeah,\" Charlie said. \"What's up?\"\n\n\"Did I disturb you or something?\" Mimi asked. \n\n\"From what? From all the nothing that I'm doing?\"\n\nMimi chuckled. \"You're in rare form, I see. I just called to let you know a bunch of us are out at The Beanery for drinks and pool. I know you're home alone and figured you could use a night out.\" \n\nCharlie winced. Mimi worked with her at the bookstore. She was cool people, although the crowd she ran with wasn't Charlie's scene. They were denim cutoff sporting, scarf wearing, moustache tattooed ironically on their index finger hipsters. That shit annoyed the hell out of her. \n\nNormally she would have made an excuse not to go, but she was bored and desperate. Spending the evening listening to over-privileged suburbanites discussing the various pro-vegan organizations they followed on tumblr was honestly better than sitting at home pretending not to watch episodes of Jersey Shore. \n\n\"Are you guys already there?\"\n\n\"We just showed up. Take your time getting ready. It's still a little dead in here.\" \n\n\"Okay. I'll see you in forty-five.\" Charlie ended the call. Well at least she had something to do. She noticed she'd gotten a text message from Katia saying they finally made it to the beach. \n\nShe typed back a response as she walked towards her room. \n\nFifteen minutes later she was showered and nearly dressed. It was still a little humid out, so she left her curls un-straightened, putting a little mousse in for definition. She padded barefoot down the hall to the bathroom, clad only in her blue bra and skinny jeans. She brushed her teeth quickly and then applied her make-up, carefully putting a thick line of black kohl on each upper lid and then adding a touch of clear lip gloss. \n\nBack in her room she put on a tight v-neck tunic shirt, a lovely shade of green that reminded her of emeralds and showed off \"the girls\". She slipped her feet into shiny gold ballet flats. \n\nWhen she grabbed her gold wristlet purse, she realized Katia's brother hadn't arrived. Charlie picked up her phone and typed out a quick message to Katia, informing her that she was heading out and asked where her brother was. \n\nBy the time she sprayed on her perfume and slipped her cash and keys into her wristlet she had a reply from Katia. \"He got held up. Won't be there until late. No worries, he has a key. Just go out and enjoy yourself. Have fun with Hipster Shore.\" \n\nCharlie chuckled at Katia's dig. She knew she hated Mimi's pretentious friends. She slipped on a few rings and a handful of colorful bracelets and then headed out the door. It was a nice night out; a little humid but not completely unbearable. Charlie started off down the sidewalk, headed in the direction of the bar. \n\nLuckily for her The Beanery was only three blocks from her house. It was incredibly convenient to not have to worry about a designated driver. She never got drunk anyway; a nice buzz was good enough for her. Her street was pretty safe; nevertheless she was always prepared. \n\nShe walked with her keys between her fingers and there was mace in her wristlet. Some nights if she was feeling adventurous she would even walk with her taser. \n\nShe reached the bar quickly. After flashing her ID at the door, she stepped inside. The Beanery was fairly busy for a Wednesday night. When school was in session there was normally a line wrapped around the building and the queue up at the bar was a disaster. Tonight it was packed, but not enough to be annoying. \n\nCharlie sauntered up to the bar, quickly catching the attention of the male bartender. She ordered a Grolsch, which he slid down to her after popping the swing-cap. Charlie smiled and set down money for him before walking away. \n\nThe Beanery was a large bar, one of the largest in the town. The main room was long, sporting a bar that covered one wall of the place. Tables and chairs lined the opposite side of the bar as well as several flat screen televisions. Off to one side there was the pool room, with several pool tables, arcade games, and gambling machines. \n\nThere was another, smaller bar inside that room. Charlie wandered off to the pool room where she discovered Mimi and her friends holding court. \n\n\"Charlie, you're here!\" Mimi cried excitedly. Jumping up from her table, she bounded over to \n\nCharlie, wrapping her in a vice-like hug. \"I am SO GLAD to see you!\" \n\n\"I can definitely tell,\" Charlie said with a squeak. \"Mimi...can't breathe.\" \n\n\"Oh shit,\" Mimi said, releasing her immediately. \n\n\"Sorry.\" Charlie was always taken aback by her strength. At 5'3, Mimi made Charlie feel like a giant. She was a sassy redhead with a charming nature. They had worked together at the bookstore for nearly two years. They weren't extremely close, but Charlie always enjoyed her company. \n\nHer friends, on the other hand, were a different story. Charlie turned to the group of individuals staring at her, various gazes ranging from mild curiosity to complete indifference. Charlie plopped down in an empty chair. Well this is going to be a great night, she thought with a frown. \n\n\"Hey assholes, be nice and say hi to Charlie.\" Mimi joined them and picked up a glass that undoubtedly held Pabst, the drink of choice for ironic hipsters everywhere. Charlie couldn't help but smile. ",
        "\"Hey Charlie.\" She glanced in the direction of a lanky redhead. His beard was full and bright, his whole face shining under a fiery ginger aura. \n\n\"Hey Paul,\" Charlie replied. She was genuinely happy to see him. Paul was extremely chill. He also happened to be Mimi's boyfriend. They were so adorable; the petite loudmouth redhead with her 6'2 boyfriend whose hair was equally as red. Most people referred to them as the Super-Gingers whenever they were together. \n\nThe other two people at the table were Mimi's roommate and her boyfriend. Charlie didn't care for them. Agnes (or Jessica, if you went by birth certificates) was completely unbearable, from the granny clothes and fake glasses she wore, to the way she constantly seemed to preach at people rather than talk like a normal human being. Her boyfriend (Charlie couldn't bother to remember his name) was just as dull.\n\nCharlie had never seen met the rest of them and since they didn't bother to introduce themselves o or even acknowledge her existence she decided to ignore them right back. The only reason Charlie tolerated them was because Mimi and Paul were really cool.  \n\nShe took a generous swig of her beer. It was going to be a really long night. She wasn't planning on getting drunk, but given her situation that plan was out the window. When the server came round Charlie ordered two more beers and a shot of Jameson. Might as well go all the way with it, she thought. \n\nTwo hours later she was nice and toasty. The alcohol loosened her up considerably; she later learned that the two unknown girls that hadn't bothered to introduce themselves were a couple, Brock and Lydia. \n\nThey were still a little unfriendly, but managed to keep their cunt-like behavior to a minimum. The guy, she discovered, was called Linus. He wasn't too bad, a little cute in that scruffy \"I play in a shoegaze band\" kind of way. \n\nThe alcohol gave her that extra boost to flirt with him. They chatted easily while shooting pool. Charlie wasn't big on billiards but it gave her something to do besides sit at the table and listen to extremely mundane talk about subterranean mixtape releases. \n\nShe couldn't help but roll her eyes. 'Subterranean'? Really? Why couldn't they just say 'underground' like the rest of the world? \n\nAs she leaned over the table to take her shot, she felt Linus' hand graze her ass. Charlie whipped around, one dark eyebrow raised in surprise. \"Really?\" was all she said. \n\nLinus grinned sheepishly. \"Sorry. You can't just point that piece of beauty in my direction and not expect me to touch.\" \n\nCharlie rolled her eyes. She was drunk, but not THAT drunk. \"Sorry, playa. If that's what you're looking for, you can just keep it moving. It's not that kind of night.\" \n\nHe cast her an extreme puppy dog look. \"Aww, but you're so pretty. The only reason I showed up tonight was because Mimi said her hot friend \n\nCharlie was going to be there. You really think I wanted to hang out with Agnes' boring ass?\"\n\nCharlie had to laugh; Linus was bold as shit, but luckily he was also kind of cute too. He was about her height with sandy hair and dark chocolate eyes. \"Fair enough. You're lucky you're cute, otherwise I'd have to tell you about yourself.\" \n\n\"Oh yeah? Cute enough to take home?\" \n\n\"You're not that cute.\" His eagerness was kind of a turnoff. \"Speaking of home, I need to be leaving.\" She placed her pool cue on the rack and felt his hand on her shoulder. \n\n\"What's the rush? I can always give you a ride.\" \n\nSomehow she got the feeling he wasn't just talking about a car ride.\n\n\"Thanks, but I'll pass. I'm a little tipsy and I've got to get some sleep if I'm going to be functional for work tomorrow. It was nice meeting you.\" Charlie eased gently out of his grip and headed back to the table, where Mimi was engaged in a heated debate with Lydia. \n\n\"Hey homie, I'm gonna jet\" Charlie said. She ignored Lydia's eye-roll at her usage of 'homie'. \n\nStuck-up bitch, she thought.\n\n\"What? You're leaving?\" \n\n\"Yeah, I'm wiped out. Plus, I was gonna head into work and see if I could pick up a shift tomorrow now that I'm not going on vacation. I need some energy to deal with all that bullshit.\" \n\nMimi nodded. \"I hear you. Plus I can definitely see you getting rough with Linus in the near future, and not in the way he wants.\"\n\n\"Oh my god, what is with him? He's like one step away from humping my leg.\"\n\nThey chuckled. \"Yeah he's really into you\" Mimi said. \"When he found out you were newly single he almost had a heart attack.\"\n\n\"Yeah well he needs to put the cuckoo back in the clock.\"\n\n\"Don't worry boo. I'll keep him in check. Are you sure you don't want a ride home?\"\n\nCharlie shook her head. \"No, no I'll be fine. I have my pepper spray and all that good stuff. \"\n\n\"Okay, well text me or Paul when you get home.\" \n\n\"Will do.\" She kissed Mimi on the cheek and ruffled Paul's hair. \"I'll see you guys later.\"\n\nThe walk home was short and uneventful. Charlie knew she should have probably accepted the ride back to her house. \n\nA young woman walking the streets at this hour was a dangerous notion. But she would have taken an unknown assailant over Linus any day. He was cute, but his \"harmless\" flirting and awkward advances were just too much for her tonight. \n\nAlthough truthfully, had she been any more intoxicated she would have taken him up on his offer. Her breakup with Brent made her realize how much she missed sex. Scratch that: she missed GOOD SEX. Brent was fine, but he was boring as hell in the bedroom.  \n\nLooking back, she realized it was easier to put up with his lack of putting it down instead of speaking up. He was incredibly safe, preferring missionary over anything else. The phrase \"going down\" would make him run for cover but his prudish ass was more than willing to partake when she pleased him orally. \n\nJust another reason she was so thankful to be rid of him and his boring dick. \n\nCharlie shrugged off thoughts of Brent as she turned into the driveway of her house. There was a huge dark pickup truck parked on the street in front of the house, looking quite foreboding in the darkness of the late evening. With a shudder, she hurried up the porch steps, eager to be safely inside. \n\nThe house was dark and quiet as she unlocked the door. Stepping inside, she quickly locked and bolted the front door and sent a message to Mimi and Paul. The interior was just as dark, save for a small lamp in the living room that she and Katia always left on when they left. \n\nSlipping out of her flats, Charlie padded down the hallway and turned left into the laundry room. She peeled off her clothes and stuffed them into the giant hamper. Opening the dryer, she took out a gray v-neck sleep shirt and put it on. \n\nShe climbed the steps two at a time, her exhaustion getting the best of her. She was ready for bed. Charlie pushed open her bedroom door and stepped inside. It was pitch dark, but she knew her way around. She tripped over something that felt like a boot. Funny, I don't remember leaving my boots out, she thought. \n\nIgnoring that niggling feeling she walked over to her bed and was about to slip inside when she noticed that there was someone already in there. \n\nWhat. The. Hell? \n\nCharlie crept closer to her bed. Whoever it was, they were big. Taking a step back, Charlie blindly reached for some kind of weapon. Her hands finally found a plastic baseball bat. She shrugged. Well that would have to do. Raising her arms high, she brought the bat down hard on the human lump in her bed. \n\n\"Ow!\" the voice growled. \"What the fuck?\"\n\n\"The fuck is right! You picked the wrong house to rob, jackass.\" She continued to pepper the body with licks from the bat. The person scrambled to their feet, and from the illumination of the moon within the room Charlie could tell that her earlier assumption was right. \n\nHe (she could tell from the voice that it was a male) was one huge motherfucker. A small shiver of fear crept down her spine as the person inched closer. She would not go out like a bitch. She might be attacked and raped but his ass would be hurting too.  \n\nThe guy tried to dodge her blows, but she followed him, only hitting harder. When he finally reached for the bat, Charlie yelped and tossed it at him, making a dash for the hallway. \n\nThere was a much heavier bat downstairs by the front door. Let's see how her attacker could withstand Katia's Louisville Slugger. As she was leaving, she tripped over those damn boots and her shoulder hit the light switch, blinding them both. \n\nThe man cursed in a different language before shielding his eyes.\n\n\"Hey!\" The guy called. \"Will you just calm the fuck down?\" A giant hand reached out and gripped her shoulder, stilling her escape.\n\nIt was then Charlie noticed a tinge to his voice. Was that a Russian accent? Her stomach dropped as she turned to face him, his grip loosening. Whoa, she thought. He was BIG. Charlie, in all her 5'11 glory felt like a damn dwarf when looking at him. \n\nHe was easily about 6'6, with broad shoulders and thick arms. He was bare-chested, clad only in a pair of loose blue pajama bottoms. \"Oh my god. \n\nAre you Katia's brother?\"\n\nHe grunted. \"Yes,\" he rumbled. \"I am Gavril.\" \n\nCharlie's sigh of relief was quickly replaced with irritation. \"Why the hell are you in my room?\"\n\n\"I am sorry, it is a simple mistake. This used to be my room when I lived here. I had no idea it was yours now.\"\n\nHer look was incredulous. \"No idea? Didn't you see all the girly shit in the room before you invaded my space?\"\n\nGavril shrugged his massive shoulders. \"Like you I did not turn on the light. I really am sorry.\" \n\nCharlie conceded. The guy looked genuinely remorseful. \"I'm sorry too, for hitting you. You just scared the shit outta me. I'm a little tipsy and coming home to find a giant in my bed really wasn't how I saw my night ending.\" \n\nHe nodded sharply. \"I understand.\" His gaze traveled to her attire. \n\nCharlie felt a little self-conscious; she was practically naked in front of a stranger. The sleep shirt barely skimmed the tops of her thighs and was a little form-fitting. She knew her curves, more specifically her nipples were on display thanks to the cool air in her room. \n\nGavril cleared his throat. \"I really am sorry. I guess I'll head over to the guest room.\" Charlie stepped aside so he could pass. \"I'll, uh, see you tomorrow I suppose.\"\n\nShe nodded. \"Yeah. Goodnight.\" \n\nHe stepped out into the hallway before suddenly turning. \"Figured you might want this back,\" he said, handing her the bright orange plastic bat.\n\n\"Oh, uh, thanks\" she said, a hint of embarrassment in her voice. \"Sorry again.\" \n\n\"No problem. Goodnight.\" He turned and left, heading for the guest room down the hall. \n\nCharlie sighed. This shit was too ridiculous, especially for three in the morning. As she climbed into bed, the faint, unfamiliar scent of male cologne surrounded her. Great; now her sheets smelled like him. It wasn't too bad, because he smelled nice. It was just a sharp reminder of what she was missing. \n\nHer last thought as she drifted off to sleep...\"Damn, he was actually kind of cute.\"\n\n********\n\nGavril awoke the next morning feeling like an absolute heel. The bedroom debacle last night was entirely his fault. The nearly five hour drive put a strain on him. He wasn't used to long-distance roadtrips in the car, especially alone. When he arrived at his sister's house he quickly shed his clothing and headed straight for his old room. It was a simple mistake.\n\nHe knew his sister's roommate would still be there; Katia mentioned something about her vacation plans falling through. He didn't think their first encounter would be so violent. He grinned, thinking about how comical she looked, her dark hair fanning wildly about her face as she tried to dodge him. \n\nHe rose from the bed, padding down the hall to the bathroom. After she'd fallen asleep last night, he snuck back in and grabbed his bags from her room. He made sure not to disturb her, lest she start swinging that wretched bat again. As he brushed his teeth, he thought about the ridiculous events of the prior evening.\n\nShe caught him off guard and if he hadn't been so exhausted he probably would have put up a fight after the first couple of blows. He realized she was most likely intoxicated and startled. He knew with his size, he was an imposing figure. \n\nHe saw the shock on her face when she finally saw him in the light. And there was also a spark of something else; lust, perhaps? He wasn't sure. \n\nShe was pretty liquored up and that adrenaline rush heightened all her senses. \n\nHe had to admit, she was kind of sexy; that tiny sleep shirt did nothing but enhanced her curves. Gavril was impressed; he liked them tall and curvy. All that womanly goodness in a hazelnut-colored package...he couldn't help but be intrigued. \n\nGavril groaned; this was not the purpose of his visit. He was supposed to be here for sports, not girls. Eastbrooke's annual \"Terrific Tigers\" ceremony was Saturday. As a recipient of the award during his tenure as a Tiger, Gavril was encouraged to attend the ceremony and pass the baton, so to speak. \n\nThe award was given to a senior male and female athlete every year that showed exemplary heart and spirit in their particular sport. Gavril won the award for his amazing senior year on the Tigers hockey team. \n\nWith his cool head and grim determination, Gavril led the Eastbrook Tigers to a national championship, a feat which hadn't been repeated since he graduated. \n\nHe rolled his eyes. He wasn't looking forward to the banquet. He hated large crowds, and he hated kiss-asses even more. Those were reasons enough to never go to another Terrific Tigers ceremony ever. That part of his life was over and he had no intention to relive his \"glory days\". College was just an annoying necessity to get where he really wanted to be. \n\nSo he would endure a night of schmoozing and glad-handing if that meant he would establish some connections to further his career. But he put thoughts about the ceremony on hold, at least for the moment. He had a few days to relax. \n\nFirst things first, he planned to make breakfast. \n\nIt was going to be a peace offering for his sister's roommate. Katia never mentioned she was so good-looking. \n\n********\n\n\"Bacon...bacon...I smell bacon...\" Charlie mumbled sleepily. With a loud yawn, she opened her eyes. \n\nThe smell of food was absolutely tantalizing, especially since she couldn't even remember the last time she ate. As if on cue, her stomach grumbled loudly. She glanced at the clock on the nightstand next to her bed. It was nearly 11:30. \n\nShe hated sleeping in so late, especially on a weekday. \n\nHer mind flashed back to the night before and she winced. She beat the crap out of her best friend's brother. With a plastic bat. There were no words to describe the situation. The thought of facing him again proved to be a bit unnerving. \n\nWhat was she going to say? How would he react? Charlie scoffed; worrying was so not her style. She sat up and swung her feet onto the floor, into her bright green slippers. She was going to be brave, She was going to be fearless, she was going...to put on pants before going downstairs. \n\nCharlie slid into a pair of black shorts before shuffling out of her room. After making a quick pit stop in the hallway bathroom to brush her teeth, she headed down to the kitchen. The smell of the bacon was absolutely tantalizing. Charlie was a sucker for bacon and all its crispy deliciousness. Gavril scored some major brownie points. \n\n\"Hey,\" she husked as she entered the kitchen. \n\nGavril was at the stove, his hands moving quickly, shifting the contents in a frying pan. \n\nHe was still wearing his pajama bottoms and his torso was now covered by a black tank top. He was still huge, his bulky build making the kitchen seem small. \n\n\"Dobroe utro,\" he rumbled. \"I trust you slept well?\" \n\nShe shivered slightly at his accent. Living with Katia for so long had its benefits. She was able to pick up a few Russian phrases. \"Good morning to you as well,\" she said, returning his greeting. \"I slept like a rock. You?\"\n\nGavril shrugged. \"Not too bad. It's weird being back in this house.\" \n\n\"You don't visit Katia.\" It was more of a statement than a question, but he shook his head nonetheless. \n\n\"I try to see her on family holidays. My schedule does not permit me a lot of free time.\"\n\n\"Oh.\" They were quiet as an awkward silence settled into the room. Charlie sat on one of the high-backed stools in front of the island as Gavril turned his focus back to the stove. The silence grew as she studied his profile. \n\nHe wasn't classically handsome, but he was by no means a slouch in the looks department. His hair was dark, a deep brown almost-black color that reminded Charlie of Katia's pretty curls. His wavy hair was close-cropped on the sides, with rebellious tufts sticking every which way on top, resembling some sort of haphazard Mohawk. He sported a serious amount of scruff, but instead of looking haggard and patchy it added to his overall rugged appeal. \n\nAs if he could feel her studying him, he shifted his gaze to her. His eyes were a gorgeously soft hazel color. Charlie was intrigued; Katia never mentioned that her brother was so damn...handsome. \n\nShe'd met Mr. Denisov and Katia's younger brother Kirill but they all had similar features\u2014dark hair and green eyes. Gavril's eyes were noticeably different. They weren't as bright green, but they had a vibrant and arresting quality. \n\nCharlie saw his lips moving and finally blinked out of her stupor. \"I'm sorry, what?\" \n\nHis lips set in a line. \"I asked if you wanted some breakfast. I made it as a peace offering.\" \n\n\"Oh. Sure\" she said, feeling a little sheepish. \n\n\"Thanks.\"\n\nHe nodded. \"No problem.\" Gavril began opening cabinets, getting down plates and cups and taking out silverware from the drawer. \n\n\"Well you certainly know your way around,\" Charlie observed. \n\nHe chuckled softly. \"Of course. I did live here. I doubt it's changed much.\" \n\nShe felt like slapping herself. \"Oh. Right. Listen, about last night...I was intoxicated and a little wound up. I didn't mean to take it out on you.\" \n\n\"Bez problem (no problem), Charlie\" Gavril said as he set a plate in front of her. \"I was the asshole for not paying attention.\" \n\nCharlie eyed the plate in front of her with unabashed lust. Thick strips of maple bacon, fresh cut strawberries, and giant buttermilk pancakes. In short, food porn heaven. \"Wow\" she remarked. \n\nGavril grinned as he set his plate beside hers. He poured them both some orange juice before plopping down onto the stool next to hers. \"Eat, and then we'll talk.\"\n\nShe didn't need to be told twice. \"I apologize in advance. I'm gonna destroy this awesome breakfast. Don't be frightened; it's just me being a giant fatty.\" \n\nHe laughed earnestly as she drizzled syrup over her pancakes before taking a huge bite. His laughter died down once he heard the noise in her throat. It was a moan of pure pleasure that made him curious. He'd never seen someone respond so boldly to food. She was an interesting one, his little sister's best friend. \n\nCharlie slowed down, taking into account that she was acting like a starving refugee in front of a stranger. An attractive stranger to boot, she thought. \"I am so sorry you had to witness that.\"\n\nGavril laughed as he crunched into a piece of bacon. \"Don't be. I like a girl with a healthy appetite. I'm glad I finally got to meet you, Charlie. Katia talks about you all the time.\" \n\n\"Yeah? Well don't believe any of it\" he replied between gulps of orange juice. She decided she liked his accent. It was a little more pronounced than Katia's. The way he infused his Americanized accent with Russian phrases was quite charming too. ",
        "Charlie especially liked the way her name sounded when he said it. It made her tingle all over, but she chalked that up to the aftereffect from the delicious breakfast. \n\nHe chuckled again, and Charlie felt another tingle. \"You're funny. Katia said you'd be funny.\" \n\n\"Really? And what else did Katia say about me?\" \n\n\"Not much else\" Gavril answered, polishing off the last of his pancakes. \"She told me if I wanted to know more I'd have to ask you.\" \n\n\"That sounds exactly like something Katia would say. However, she didn't say why you were coming here.\"\n\n\"Trying to get rid of me already?\" She glanced in his direction, thinking he was offended but found a playful smile instead. \n\nCharlie grinned. \"If you didn't leave last night after I pummeled you, I think you'll be alright.\" \n\nGavril laughed heartily, a deep rumble that even \n\nCharlie's salty demeanor couldn't ignore. She chuckled too. \"Well if you must know, I'm back in town for the 'Terrific Tigers' awards banquet.\" \n\n\"Oh that's right. I forgot you played hockey here. So you were a 'Terrific Tiger' back in the day, eh?\" \n\n\"That's what they tell me. Past award winners are encouraged to come back, to show some sort of moral support. I've never felt the need to return.\"\n\n\"Not the 'school spirit' kind of guy?\"\n\nGavril shrugged. \"Something like that.\" He paused for a moment. Charlie instantly got the impression that he wanted to change the subject. \n\nShe wasn't surprised when he did, but she was taken aback by his next words. \n\n\"Charlie...that's an unusual name for a girl.\" \n\nShe scoffed. \"Says the man named Gavril.\" \n\nGavril bit into a piece of bacon, chewing thoughtfully. \"Well 'Gavril' is Russian for Gabriel. So that makes sense since I am Russian.\" \n\nCharlie bit the corner of her bottom lip, confused as to why his pronunciation of 'Russian' had her tingling. Get it together, she thought. \n\n\"Makes sense. My parents wanted a boy; they were so convinced that I was a boy they only thought of one name: Charlie. Not Charles, just Charlie. They were big fans of Charlie Parker.\" \n\n\"The jazz musician?\" \n\nThat surprised Charlie. \"Yeah? How did you...\"\n\nGavril shrugged easily. \"My father is a lover of American jazz music. He used to play jazz records all the time when we were younger. Charlie Parker, Chet Baker, Dizzy Gillespie, Miles Davis. And of course Billie Holiday.\"\n\n\"Wow. That's funny. My parents were huge fans of jazz too. That's how I got my name. Charlie Billie Horton.\" \n\nHe studied her for a moment, this peculiar young woman. \"What a coincidence,\" he finally said. \n\n\"Jazz was important in my home. My first crush was on Billie Holiday. I cried when my father told me she was dead.\" \n\n\"Aww!\" Charlie exclaimed.\n\n\"I was seven and completely crushed. My parents gave me a copy of 'Lady Sings the Blues' as a birthday gift. It is still one of my favorite movies.\" \n\n\"Lady in Satin is my go-to Billie Holiday album.\"\n\nHe grinned earnestly. \"I know how you feel. I love that album. It is my favorite.\"\n\nCharlie tried to imagine Gavril as a young boy living in Russia, completely infatuated with the ill-fated jazz singer. The concept was adorable and odd at the same time. \"Hmm. It's funny; Katia called you gruff. But you're anything but.\" \n\n\"Well maybe I am trying to get on your good side so you won't beat me up again.\" \n\nShe chuckled. \"I can't make that promise. I'm kind of a loose cannon.\" \n\nGavril smiled. \"I like what I've seen so far,\" he said. Somehow she got the feeling he wasn't just talking about their conversation. Her mind flashed back to her flimsy sleep shirt and she flushed. \n\nWas Katia's older brother really trying to flirt with her? \"Since you were so inquisitive, I have to ask you now. What are you doing here? Katia mentioned something about vacation plans falling through?\" \n\nIt was Charlie's turn to shrug. \"Something like that. My ex decided to be an asshole, so my vacation to Atlantic City went kaput.\"\n\n\"Mudak,\" was all he said. What a bastard. \n\n\"Yeah. Now I don't know what to do with myself.\" Charlie glanced up at the clock in the kitchen. \n\n\"Shit! I should probably head down to the bookstore and see if I can pick up a shift today.\" She slid off the barstool, grabbed her plate, and dropped it into the sink. \"Thanks for breakfast. I really appreciate it.\" \n\n\"No problem,\" he replied. Gavril rose to his feet. \"Which bookstore?\"\n\n\"Oh...The Attic.\" \n\n\"Okay. I think I remember where that is. I noticed you didn't have a car parked outside.\"\n\n\"Yeah,\" Charlie said, biting her lip again. \"It's in the shop right now. I had an unfortunate accident with a wayward deer.\" \n\nGavril smirked. \"Well I can give you a ride downtown.\"\n\n\"Oh you don't have to do that,\" she said quickly. \n\n\"I insist. I'm staying here for a week. I have a car. Let me be useful. Just think of me as your personal chauffeur.\" \n\nCharlie couldn't help the smile that spread on her face. \"Well since you put it like that, I guess I'll have to say yes.\"\n\nGavril decided that he liked her smile. It really brightened her face and made her eyes sparkle. \n\nThey were a lustrous copper color, shining like newly minted pennies. They stood out wonderfully against her beautiful skin, a hue reminiscent of smooth, creamy Nutella. \"Good. I have to run some errands while I'm in town. How about you get ready and we'll leave in thirty?\"\n\n\"Sounds good.\" She went to leave just as he went to move toward the sink with the rest of the dishes in his hands. \"Oops\" they both mumbled. \n\nThey tried to sidestep one another but only crashed again. Gavril raised his arms high and twisted to the side, allowing her entry. \n\nCharlie ducked under his arms and glided past, her breasts lightly brushing his chest. The contact sent a shock through both of them. She gasped softly and heard his own grunt of recognition. \n\nBefore she tried to figure out what the hell that was, she dashed quickly up the stairs. \n\n********\n\nThree hours later, Charlie was regretting her decision to \"drop in\". When Gavril dropped her off at The Attic, she discovered the store packed with people and a frantic Dale at the end of his rope. Liana, Charlie's co-worker and the main daytime bookseller was out sick with a terrible case of mono, leaving Dale alone. \n\nNormally it wouldn't be a big deal but today was unusually busy at The Attic, an alternative bookstore that boasted a wide array of \"other\" reading material, from comics, graphic novels, and manga to erotica. It was a fairly easy job and a cool place to work most days. However today was not looking like one of those nice days. \n\nWhen she stepped into the store and found Dale hard at work on the register, his coffee-colored eyes practically sparkled with relief. \"Bless you,\" was all he said. \n\nWith a large sigh, she walked to the back, stashed her purse in an empty locker, clocked in, threw her lanyard nametag around her neck, and joined him at the register. \n\nShe worked steadily bouncing between the register and shelving books while Dale ran the coffee bar/counter. It was almost four when Mimi showed up to start her evening shift. She breezed in, wearing dark purple Wayfarers that no doubt hid her hangover. \"Hey babe,\" she said, taking a sip of her signature soy mocha latte. \n\n\"Hey yourself,\" Charlie said as she finished ringing up a Thor comic book for a pimply-faced kid, who couldn't have been more than sixteen. \n\nShe gave him a look of death when she caught him staring at her chest. \"Take a picture if you're so intrigued,\" she snapped. \n\nThe kid smiled, revealing a mouth full of metallic braces. \"Holy shit, can I?\" he asked excitedly. \n\nCharlie stared at him incredulously before pointing to the door. \"Yeah, get out. Shoo.\" \n\nDejected, the kid stalked out. Mimi grinned. \"You are in rare form today.\" \n\n\"I am in no mood for that kind of foolishness.\" \n\n\"Aww come on. You would have made his life. That picture would have been prime wank material for at least two weeks. Now he'll be forced to scour the internet for chocolate boobies.\" \n\nCharlie smirked. \"You are so fucking ridiculous.\" \n\n\"And you are a nerd-tease. Working in this store, wearing those low-cut shirts, and teasing all these teenage boys.\" Mimi waggled her eyebrows suggestively. \n\n\"Shut up,\" Charlie said. She was laughing openly now. \n\n\"Poor Dale. I wonder how he's coping.\" \n\nCharlie rolled her eyes. \"Dale is just fine. We've been working quite well together. He's staying in his corner, and I'm in mine.\" \n\nMimi glanced around. \"Seems a little busy for a summer Thursday.\" \n\n\"It was worse earlier. The crowd's considerably less now.\" \n\n\"Well good thing I showed up when I did.\" \n\n\"For real. I wasn't even supposed to be here today.\" \n\nMimi perched her sunglasses atop her head. \"Yeah well that's what you get for trying to be employee of the month. No one told you to drag your happy ass here.\" \n\n\"Shut up\" Charlie said, a smile playing on her lips. \"What else was I supposed to do with my time?\" She looked up and realized a small queue had formed behind Mimi. \"Now will you kindly move your ass away from my counter? I have customers to help.\" \n\nMimi sauntered off in the direction of the 'Employees Only' section when Charlie called out to her. \"Your help would be greatly appreciated, lady! Seeing as how this is technically your shift.\" \n\n\"My shift isn't for another fifteen minutes. I think you can handle this,\" Mimi yelled back. \n\n\"Will you two PLEASE stop shouting across the store? It's bad for business!\" Dale called from the coffee counter. \"Charlie, stop worrying about Mimi and concentrate on getting that line down. Mimi, take your beer-soaked ass in the back, drink your latte, sober up, and be back out here to help Charlie in five minutes.\" \n\nCharlie glanced over at Dale, whose face was flushed with agitation. \"Sorry, boss\" she said sheepishly. She shot Mimi a dirty look. \n\nMimi stuck out her tongue. \"Uh-oh. Dad's mad.\" \n\nShe headed to the back room while Charlie turned her focus back to the line, which seemed to have grown since her little tiff with Mimi. Gritting her teeth, she set to her task. Five minutes later on the dot, Mimi returned. With both of them working seamlessly, they were able to get the line down. \n\nThe afternoon rush seemed to be at a lull. Charlie leaned over the counter, stretching out her back. She was a little sore from standing stiffly. Mimi stifled a yawn. \"Ugh, drinking was a bad idea last night. My tummy feels all rumbly.\"\n\n\"Yeah well that's you get. You could have left when I did.\"\n\n\"Well not all of us were trying to escape the clutches of Linus.\"\n\n\"Oh my god, don't remind me.\" \n\nMimi grinned. \"You know, he's texted me about seven or eight times since I woke up. I think he was trying to figure out if you were working today.\" \n\n\"Oh no,\" Charlie groaned. \"You did not tell him I was going to be here.\"\n\nShe brushed off the inquiry with a casual shrug of her shoulders but Charlie wasn't fooled. She watched as Mimi gathered her dark orange-reddish hair into a high ponytail. Mimi was going to drag out her response and Charlie was contemplating whether choking her out was enough to get her fired. \n\nMimi's aqua blue eyes were playful under her heavy fringe bangs. \"I may have mentioned you \n\nwere planning to make an appearance today.\" \n\n\"I should just cut you right now.\" \n\n\"Oh come on,\" Mimi said with a smile. \"Linus is completely harmless.\"\n\n\"Yeah, you sit there and think that. You weren't the one he was ogling.\"\n\n\"The lady doth protest too much. Why are you being so hard on him? It's not like you've got someone else in mind?\" She glanced at Charlie, who was trying not to meet her gaze. Mimi grinned. \"You skankbot. You DO have someone in mind! Well out with it. Give me all the juicy details.\"\n\nCharlie rolled her eyes and focused on stacking some papers. \"Girl, please. I am not even studying you right now.\" \n\n\"Ooh, he must be cute. Don't tell me you went back to Brent.\" \n\nThe look on Charlie's face was pure stank. \"You must be drunk.\"\n\nMimi chuckled. \"Okay so it's not Brent. Well who is it? He must either be really hot or a damn paper bag man if you're not trying to give up the goods.\"\n\n\"A 'paper bag man'?\"\n\n\"Yeah, you know...a guy so hideous you have to put a paper bag on his head just to fuck him.\"\n\nCharlie choked with laughter. \"Oh my god...that is so fucking ridiculous.\"\n\n\"Don't act like you've never seen a PBM in real life.\" They were quiet as more customers came up to the counter to check out. Charlie knew Mimi wasn't going to let it go. What the girl lacked in height, she more than made up for it by being a nosy ass bitch. \n\nMimi always had the scoop on everybody and while she was never intentionally malicious she was quite possibly one of the worst secret-keepers since Peter Pettigrew. \n\nWith another lull in traffic the girls were able to lean back and chill. Charlie knew she was going to start up again. It wasn't like she was lying; she really didn't have someone in mind. She just thought her best friend's brother was attractive. \n\nHe wasn't really her type. Charlie was a sucker for pretty boys: light-skinned dudes with smooth waves and cool attitudes. The kind of guys who wore blazers and scarves; who smoked Gauloises and talked about music and art. \n\nSomeone who could tell the difference between Monet and Manet. A guy who could hold his own in a conversation concerning the backlash against modern R&B and the progressive fusion of urban underground artists and indie music. \n\nCharlie was loathed to admit it, but she was pretty much a hipster, save for the ironic sense of entitlement and those shitty clothes the girls seemed to wear. Gavril was anything but. He looked...rough. He was massive; not muscular per se but you could definitely tell he was an athlete. \n\nWhile he surprised her with his knowledge of jazz, she thought he would prove to be a bit of a dunderhead. \n\nA fairly attractive dunderhead. With his dark looks and those intense hazel eyes, she was sure he had his fair share of female admirers. However she wasn't sure she was ready to be counted among them. He was nice enough though, and his accent was altogether pleasing. It was weird; she'd never been affected so much by someone's voice. \n\nKatia's light Russian lilt made her even more adorable. Gavril's accent was smooth and sensuous, running over her like warm honey. His deep voice wrapped thickly around the syllables and phrases and sent a heated shiver down her spine. Now that was the way a man should sound. \n\nBut still, she wasn't interested. No sir, not Charlie Horton. \n\n\"Is it Dale?\" Mimi suddenly asked. \n\nCharlie glanced over at her friend before erupting into a fit of giggles. \"Really? REALLY? No it's not. And will you stop asking? There is no one. I'm just not interested in Linus.\" \n\nMimi shrugged. \"Alright, alright. No need to shout it to the whole store.\" \n\nIt was another hour before the traffic in the store completely slowed to a standstill. Mimi was solo on the register while Charlie had organizing and shelving duty. Chris, another night worker had long relieved Dale from the coffee bar. \n\nCharlie was organizing a display of Walking Dead comics when she saw Gavril approaching, a pair of aviators shading his eyes. He was dressed simply, in a pair of light jeans, black boots, and a navy blue t-shirt. \n\n\"Privet,\" he rumbled. His smile was adorably crooked. \"How is work going?\" \n\n\"Oh fabulous,\" Charlie said. \"I immediately regret my decision to show up today.\"\n\nGavril chuckled as he pushed his sunglasses atop his head. \"Well don't worry. I have something that will cheer you up. Are you ready to go?\" \n\n\"Oh god, yes. I was ready to leave as soon as I got here. Just let me get my stuff.\" She finished stacking the comics and headed towards the counter, where Dale was busy chatting with Mimi. \n\n\"Hey Dale, I was wondering since it's slow if I can just go ahead and take off?\"\n\nDale smiled. \"Sure. You've already done more than you needed to. Thanks for helping out today, Charlie.\" \n\n\"No problem. I needed the money, you needed the help...everyone wins. Will you need me tomorrow?\"\n\n\"I don't think so. Today was most likely a fluke. I'll open, Mimi and Topher have the afternoon on lock, and Chris and Rona will close. You can come in Saturday if you want.\"\n\n\"Sounds good.\" \n\n\"Charlie?\" \n\nThree heads turned in Gavril's direction. \n\n\"Hey, I was just wrapping up things with the boss man here. I just gotta get my stuff and then we're good.\"\n\n\"Cool. No need to rush you or anything. I just have ice cream in the truck and it's hot as hell outside.\"\n\nCharlie grinned. The Russian just said the magic words. \"Ice cream?\" \n\n\"Yeah. When I was going through your fridge this morning, I noticed containers of ice cream. Since Katia's lactose intolerant I assumed they were yours. I bought some more for you.\" \n\n\"Oh, well that was really cool. Thanks, Gavril.\"\n\n\"It was my pleasure.\"\n\nA loud, exaggerated throat clearing made Charlie turn away. She shot another look of death Mimi's way. Mimi, who pretended that she didn't see THE LOOK waggled her eyebrows suggestively. \"I knew it,\" she mouthed silently. \n\nCharlie sighed. Might as well get it over with. \"Gavril this is Dale, my boss. The tiny redhead \n\nlacking couth and class is Mimi.\" \n\nGavril chuckled as Mimi stuck her tongue out at Charlie. \"Nice to meet you guys.\"\n\n\"The pleasure is most definitely all mine,\" Mimi cooed. \"Wow. You are certainly quite large. Why I bet you'll look like a giant next to lil ol' me.\" \n\nCharlie was flabbergasted. Where the hell did that terrible Southern accent come from? Mimi was so damn ridiculous sometimes. \"Well, let me get my stuff and let Scarlett O'Hara here get back to her party at Tara.\"\n\n\"Oh hush, Charlie. I'm just having a little fun with your new beau.\"\n\n\"What?\" Charlie yelped. She looked up and noticed \n\nDale had uttered the same short question. He looked stricken, like he swallowed a particularly sour candy. \n\n\"No, Gavril's not...He's Katia's brother. He's crashing at the house for the week. That's all.\" She shot a reassuring smile at Dale. \n\nGavril surveyed the scene with quiet curiosity. \n\nSo, the manager had a thing for Charlie. It was painfully obvious. The looks he was shooting her way were full of longing. He wasn't a bad-looking guy, if you went for that sort of thing. Gavril could smell his desire for the girl a mile away. \n\nIt was pathetic, pining over someone who clearly didn't think of you in that manner. But he wasn't going to judge the man.\n\nDale visibly relaxed. \"Oh. Makes sense. Well I guess we'll see you later this week Charlie.\" He surveyed Gavril, and cringed. He sure was a big guy. \"Nice to meet you,\" he mumbled. \n\n\"Likewise.\" Gavril maintained a polite demeanor. \n\n\"I'm gonna go get my shit,\" Charlie said absently, heading for the break room door. She wanted to duck out of that conversation ASAP. Mimi kept waggling her eyebrows at Gavril and Dale looked like he was about to cry. What the hell is with everyone, she thought. \n\n********\n\nCharlie plopped down on the couch, remote in hand. She was free for the next day and was looking to relax. Sinking back into the comfy Berber sofa, she channel surfed in silence. \n\nThe sound of Crystal Castles' \"Suffocation\" filled the room. Charlie slipped her phone out of the pocket of her yoga pants. It was Katia calling. \"Hey pumpkin,\" she said jovially. \n\nKatia giggled. \"Pumpkin? Someone must be in a really good mood. Let me guess. Just got off work, freshly showered, and sitting in those grey yoga pants I hate.\" \n\nCharlie laughed. \"Ding, ding, ding! How's the Gal Pal trip going?\"\n\n\"Well Blair's already drunk dialed Kiefer eight times already, Leslie's been banned from Margaritaville, and Dana's just being a grouchy bitch. It is awesome.\" ",
        "\"Sounds like it. No regrets?\" \n\n\"Not really. Just missing my main bitch. I hope you're behaving yourself.\"\n\n\"Oh, you know me.\"\n\n\"Mmm-hmm, that's why I said what I said. I hope you and big brother are getting along.\"\n\n\"So far so good. I haven't threatened to cut him yet, so he's safe.\"\n\n\"That's my girl. So what are you getting into tonight?\"\n\nCharlie chatted for a few more minutes with Katia, telling her about the night with the hipsters at the Beanery and Linus aka \"I Can't Help But Watch\". In the midst of her story she heard the telltale creak of the steps and Gavril's footsteps as he entered the living room. \n\nHer words stumbled for a bit when she noticed he was naked, save for a black towel around his waist. His hair was slick with water from the shower. His torso glistened, little droplets of water clinging delicately to the gorgeous thatch of dark hair on his chest. \n\nHe had the perfect amount of fur, his dusky nipples a stark contrast. The hair trailed down his chest, onto his muscular stomach, and tapered into a furry trail which continued past the towel slung low on his hips. \n\nShe took a minute to appreciate him; He was certainly built like a hockey player\u2014equal parts bulk and muscle. He wasn't a meathead with a thick neck and overly defined abs. He was big, solid, and burly. \n\nGavril Denisov was ALL man. \n\nCharlie didn't realize she was staring until she heard Katia calling to her over the phone. \n\n\"W-what?\" she stammered. \n\n\"I asked if Gavril was nearby.\" \n\n\"Oh, uh...\" Charlie glanced around. He apparently went to the laundry room down the hall. She could hear the slam of the washer and dryer doors. \n\n\"Hold on. I'll get him.\" \n\nCharlie scrambled from the couch and slipped down the hallway. \"Hey,\" she said loudly before peeking into the laundry room. \"Your sister's on the phone.\" Her gaze traveled to his, and she was a little disappointed he was already dressed, wearing black running shorts and a soft-looking green t-shirt. \n\n\"Spasibo,\" Gavril said in thanks, as she practically shoved the cellphone at him. Charlie contemplated waiting for him to finish, but it would be too awkward. With a small smile, she shuffled back towards the living room. \n\nShe heard bits from his end of the conversation, most of it in rapid Russian. She blocked out the sound of his sexy accented baritone and pretended to listen to anything else. \n\nGavril wished Katia a good time and ended the call. He needed to get off the phone quickly. Talking to his baby sister with his dick slowly swelling was just too weird. Yes, he was aroused. \n\nAnd the hazelnut beauty down the hall was to blame.\n\nHe saw the way she looked at him when he walked through the living room, heard the falter in her conversation as she tried not to stare. His lips curved in a wicked grin as he imagined her thought process. His thoughts were centered on the generous swell of her ass. \n\nGod Bless yoga pants. The material hugged her just right, the twin scoops of her derriere wiggled lovingly, enticing him, begging him to come and play. \n\nGavril imagined sliding his cock between those soft cheeks, feeling her pussy contract around him. \n\nDammit. This was NOT what he came here for. \"Get it together,\" he said aloud. Taking deep breaths, he walked towards the living room. \"Hey. Here's your phone.\" \n\n\"Thanks,\" Charlie said. \"I was thinking about ordering a pizza. Sound good?\" \n\nGavril nodded. \"Sure.\" \n\nCharlie placed the call, ordering an extra-large pepperoni with green peppers and provolone. They sat together, watching an episode of Family Guy while they waited. \n\n\"So...Katia is having a good time\" Gavril said. \n\nImmediately he felt like an ass, but figured his sister was a safe topic. \n\n\"Yeah, I guess\" Charlie replied, her eyes glued to the television. \"Her sorority sisters are giant twats, so that's rough. But Katia's so damn nice; you can't help but be in a good mood around her.\" \n\nHe let out a low chuckle. \"Yeah that's my baby sister, ever the peacemaker.\"\n\n\"Don't worry; I didn't give her the real details about our introduction.\" \n\n\"Didn't want her to know you pummeled her favorite older brother, huh?\"\n\nCharlie glanced at him long enough to roll her eyes. \"You big baby. It didn't even hurt. Besides, beating you wouldn't have been necessary if you hadn't tried to rob me.\" \n\n\"Ahh yes, I was concentrating so hard on the idea of robbing you that I fell asleep in the process.\" \n\nThey grinned. \"So you never really told me what you did today,\" Charlie said. \n\nGavril shrugged. \"Went for a jog, drove around. \n\nHung out with some friends. Did some photo work. Today was kind of low key.\"\n\n\"Photo work?\" Charlie was intrigued. \n\n\"Yeah. I'm a photographer.\"\n\n\"Really?\" \n\n\"Yeah. Mostly freelance, but I have worked with several newspapers and magazines. I suppose my official title is 'Photojournalist' but that always sounds so odd. I think of myself as just a regular journalist. I write articles as well.\"\n\n\"Wow,\" Charlie remarked. \"That's actually really \n\ncool. And kind of a coincidence.\"\n\n\"How so?\" \n\nThe sound of the doorbell interrupted their conversation. \"Pizza's here!\" she sang out. Charlie reached for her purse on the coffee table but Gavril stopped her. \n\n\"Let me get it. I insist.\"\n\n\"Oh...\" Charlie was kind of surprised. \"You don't have to do that.\" \n\n\"Yeah I do. I'm invading your space for a week. It's the least I can do.\"\n\n\"Well I could never pass up a free meal. Thanks, Gav.\" \n\nGavril raised a singular dark eyebrow at the shortening of his name but didn't say anything. He made for the door to pay the pizza guy. When he returned Charlie had plates and several bottles of beer. \n\n\"Pizza and beer? So you're that kind of girl?\" His grin was mischievous. \n\n\"Most definitely,\" Charlie said with a nod. \"I hate those fruity concoctions. They are nothing but a sugary, brightly colored hangover in a fancy glass. Give me beer, a gin and tonic, or a shot of whiskey any day.\"\n\nShe glanced up at Gavril, who studied her intently. The look on his face was one of pure admiration. \"You really are something else, Charlie\" he finally said. \n\n\"Oh, I know. You wanna watch a movie? I'm thinking something funny. I need a little comedy after this long ass day.\" \n\nGavril nodded. \"I can understand that.\" \n\nThey settled in, enjoying the pizza while watching The Hangover. Halfway through the movie and seven beers later Gavril heard himself asking \n\n\"Why is that a coincidence?\"\n\n\"Why is what a coincidence?\" She chuckled at the screen before turning to meet his gaze. \n\n\"Earlier when you found out I was a photographer you said it was a coincidence? Why?\"\n\n\"Oh.\" She giggled. \"I'm a photographer too. I'm majoring in advertising with a minor in photojournalism.\" \n\nGavril took a large swig of beer. \"Well now. That is a coincidence.\"\n\n\"Katia never mentioned that?\"\n\n\"No,\" he replied. \"We were never really home at the same time. I'm usually quite busy, running around on some assignment.\"\n\n\"Understandable. What's your specialty?\" she asked. \n\n\"I was an athlete, so I am interested in sports photography the most. I have a blog with my work, and I contribute pieces to ESPN.\" \n\nCharlie was impressed. \"That's really cool. I had no idea you were so...\"\n\n\"Smart?\" he supplied. He laughed loudly at her guilty expression. \"Don't worry about it, gorgeous. I get it all the time. People see my size and my looks, and they label me a dumb jock. It's fun to make them see that I'm actually capable of carrying on a conversation, despite my accent.\" \n\n\"I get that. I'm supposed to be this angry black girl all the time. For the most part I'm just snarky.\" She was still trying to wrap her mind around the fact that he called her gorgeous. Girl stop bugging, her brain chided. \n\n\"Snarky? No, I think you're sweet. However these nice words could be a side effect of my brain damage. Getting hit with a baseball bat will do that to you.\" \n\nShe chuckled. Setting her beer between her legs, Charlie swept her natural hair into a high ponytail, the thick curls reaching just to the nape of her neck. Gavril watched her, his eyes following her movements. Her hair looked incredibly soft; he was resisting the urge to reach out and finger one of the dark spirals. \n\nCharlie grabbed her beer and took a healthy sip before replying. \"Sweet? That's definitely not a word most people would use to describe me. And the more you talk about my beat down skills, I'm inclined to believe you secretly enjoyed getting beat up.\"\n\nGavril shrugged, playing it nonchalant. \"You could say that. But normally, I'm the one who does the spanking.\"\n\nHis words struck her deep, washing over her skin like scorching fire, leaving a trail of want in its wake before swiftly landing at the apex of her thighs. She bit her lip, trying to bring the focus back to him and not let her mind wander to fantasies involving the Russian and his sultry promises.\n\nWas Katia's brother really trying to put the moves on her? \n\n\"So you like to dominate, huh?\" \n\nGavril's full lips curved into a shrewd smile. \"I am always in control.\" \n\n\"Oh really?\" Charlie's copper gaze fixed him with a challenging look. \"And what happens when you meet a woman who defies you?\" \n\nGavril edged closer to her. Their legs were practically touching and he could feel the heat emanating from her body. She was wearing a fitted blue t-shirt. The collar of the shirt was a deep v-neck and allowed him a wondrous view of her bountiful cleavage. \n\nShe certainly was endowed. If he had to wager a guess, she was at least a D cup, maybe even a DD. \n\nA dirty mental image flashed in his mind, of sliding his hard cock between the fleshy valley of her breasts, her pink tongue daring out to lick the tip. \n\nHe groaned softly before replying. \"I may have to let her spank me,\" he said with a wink. \"If such a woman exists.\" Gavril settled back on his side of the couch, gripping his beer bottle firmly before taking another huge gulp. \n\nCharlie tried to process that little tidbit, but her mind was occupied with thoughts of a naked Gavril. It was an internal struggle that pitted her rational side against the 'I haven't had a good dicking since Obama's inauguration' opposition. \n\nTHAT'S YOUR BEST FRIEND'S BROTHER, her brain screamed. So what, she thought. What's the harm in a little mindless flirting? \n\nThere wasn't any harm. Gavril was hot, and she was bored. It was a perfect match. Charlie just had to make sure it didn't go any further. \n\nSo she chose to take the high road, ignoring his raunchy confession and shifted the conversation to a safer topic. \"So what are your plans for the weekend?\"\n\nGavril noticed her swift topic change and grinned. She was flustered. He wasn't going to call her out on it...not yet, anyway. \"Well besides the banquet I really didn't have much planned. Guess you are going to keep me entertained.\"\n\nShe snorted. \"Entertained? You're a grown ass man. Entertain yourself.\" Charlie drained the rest of her beer. \"Besides, I don't know if you've noticed, but I'm kind of boring.\"\n\n\"You are far from boring. A little peculiar, but it's interesting.\" \n\nCharlie grimaced. \"Uh...thanks, I guess.\"\n\n\"No it is a compliment. Most women I meet are so one-note. They're so busy talking about themselves they hardly leave room for me to get a word in. I think this is one of the first conversations I've had with a female that didn't make me want to dig out my own eyeballs with a dull spoon.\" \n\nShe laughed, despite the gross imagery. \"You have a lovely way with words. What a wonderful mental picture.\"\n\n\"Imagine how I feel.\" \n\n\"I'm not sure if I should be flattered. Guys act like it's such a revelation when they meet someone that can actually hold a conversation. We aren't some mythological beast, you know. Some of us are very bright.\"\n\n\"I know. That was a compliment.\"\n\n\"Oh was it?\" she opened her eyes wide, batting her lashes coquettishly. \"Why Mr. Denisov, thank you for your kind words. I know my feeble female mentality cannot possibly understand all those big words, but you speak in such a soothing manner my delicate sensibilities are reassured.\" \n\nGavril laughed heartily. \"You are a fucking trip. You know exactly what I meant. You are fun to talk to.\"\n\nCharlie smiled back at him. \"I know. I just hate that generic 'most girls' shit. Who are these neurotic headcases? I think that line is just a bullshit line guys use to justify treating girls like crap. Plus, most men aren't exactly wielders of the 'excellent communication skills' sword either.\" \n\n\"You have a point. But then again, I am not most men.\"\n\n\"I'll say. Have you always been so...gigantic?\"\n\n\"Yes. I was six-foot one when I was thirteen.\"\n\n\"Damn.\" \n\n\"You should talk,\" he said. \"You're pretty tall too.\"\n\n\"You noticed, huh?\"\n\n\"I might have picked up on it a couple of times.\" His hazel eyes gleamed. \"Luckily, I like my women tall.\"\n\nCharlie eyed him. \"Are you flirting with me?\"\n\n\"Oh, I am definitely flirting.\" \n\nHer laugh was incredulous. \"Dude, you are something else.\" \n\n\"I've always heard 'brutally honest' was the best way to describe it.\"\n\n\"Funny, I was going for shameless.\" \n\nGavril scooted closer. \"That could work too.\" \n\nCharlie could feel the flush rising in her cheeks. What the hell was he thinking? Exactly the same thing you are, her brain taunted. It was true; she thought he was sexy, but she wasn't trying to hook up with him on her sofa. \n\nBut there was always her bed.\n\nShaking her head, Charlie slid further down on the couch. \"Yeah...you're ridiculous.\"\n\nHis laugh rumbled deep in his chest. \"It's just a little harmless fun, Charlie. I like fucking with you.\"\n\nShe could have sworn he'd said 'fucking you' and she squirmed slightly. Not even two days and her body was already trying to run the show. Down girl, she warned silently. \"Well, I should probably be getting to bed.\"\n\n\"Do I make you nervous?\" Damn. Not only was he fine, the motherfucker was clearly psychic too. \n\nHe studied her silently, the look in his eyes still playful but she knew he was quite serious. \n\n\"I wouldn't say nervous.\"\n\n\"Flustered?\"\n\n\"Maybe.\"\n\n\"Hot and bothered?\" His smile was wicked now.\n\nCharlie dared to look at him. He was closer now; in fact he'd scooted so far over that she was practically pinned between his massive body and the arm of the couch. The distance between them was short enough that she could smell the clean scent of the soap from his earlier shower. \n\nShe had to admit; he was a smooth operator, however she was not the swooning type. The man was hot but he was trying to play like he was already crowned king of her pussy, and frankly, \n\nCharlie Horton was not that kind of girl. \n\nAt least not before dinner and drinks. \n\nWell he did pay for the pizza, her brain chimed in. \n\nFair enough. \n\n\"Hardly,\" she replied with a smirk. \"But it seems like YOU are.\" \n\nGavril shrugged his broad shoulders before easing up on her. He returned to his side of the sofa, a sly grin on his face. \"You're one tough little cookie, Ms. Horton.\" \n\nCharlie nodded. \"Too bad you'll never know how awesome my cookie really is.\" \n\nHis hazel eyes burned brightly at her words. \n\n\"Don't be so sure about that, malyutka.\" His voice was soft but firm. \n\nA sharp shiver of sheer pleasure rippled through her spine, shooting fiery sparks all the way down to her core, which she knew was already wet. \n\nTheir playful banter was having a serious effect on her poor pussy, the dull throbbing increasing tenfold. \n\nIt'd been so long. \n\nCharlie squeezed her knees together tightly, in an attempt to lessen the ache. Fuck, she needed to get laid. Apparently the Russian on the couch was only too willing to oblige. The gloves were off; they were officially flirting with one another. \n\nOh my god I am having dirty thoughts about Katia's brother, she thought silently. \n\nGavril was having too much fun. Initially he was joking with her, throwing out silly lines and seeing if she would bite. He never expected her to be just as snarky right back. She was feisty; he liked feisty. \n\nMore and more, he was beginning to fantasize about her: the way her lips folded around the mouth of her beer bottle...it was positively pornographic. When her pink tongue darted out to lick the remnants of beer from the lip of the bottle, he almost moaned aloud. Was he really getting jealous over an inanimate object? \n\nHe had to leave the room. Sitting here with her was only going to get them into trouble. And the trouble he had in mind involved her ankles near her ears and his cock buried deep inside her undoubtedly sweet snatch. \n\nYeah, he needed to get the hell away from his little sister's best friend. \n\n\"Bed sounds like a good idea. I have a meeting tomorrow morning.\" Gavril rose from the couch, gathering up the dirty plates. \n\nCharlie grabbed the empty bottles and the pizza boxes before following Gavril into the kitchen. \n\nAfter tossing the bottles and putting away the extra pizza she decided to head upstairs. She turned and slammed right into Gavril. \n\n\"Jesus!\" she exclaimed. Her hands instinctively reached out, her palms pressed against his chest. \n\nCharlie could feel his heart thumping wildly underneath her hand, every frantic 'thumpa-thumpa' pulsing in time to her own heartbeat. \n\nInstinctively Gavril's arms encircled her waist. \n\nHe couldn't help but notice that she seemed to fit rather effortlessly. Her height allowed him to search her eyes with ease. Her expression was curious but also hesitant. Gavril pounced upon her moment of indecisiveness, pressing a soft kiss to her forehead. \n\nCharlie felt his warmth drawing near, and shut her eyes. Her heart picked up speed, beating wildly in anticipation. She waited for his lips to meet hers and was otherwise shocked to feel them on her forehead instead. \n\n\"Goodnight, Charlie.\" He removed his hands from her ample hips. \"Sleep tight.\"\n\nGavril left the kitchen quickly, leaving Charlie positively puzzled. \n\nHe hit her with the fucking forehead kiss. \n\nThat motherfucker was SMOOTH.\n\n********\n\n\"No he did not bust out the forehead kiss!\" Mimi exclaimed. \n\nCharlie nodded. \"He really did.\"\n\n\"Damn. Now that's a smooth motherfucker.\" \n\n\"I know, right! That's exactly what I said!\"\n\nMimi shook her head. \"That's risky too, bringing out the big guns so early in the game. The forehead kiss has been known to melt even the coldest of panties. I admire his balls.\" \n\nShe was paused for a moment, and Charlie knew she was about to hit her with some ignorant shit. \n\n\"You know, I distinctly remember a certain someone saying yesterday that she wasn't interested in a certain Russian behemoth. It makes me wonder what could have possibly happened to make her change her mind.\"\n\nCharlie rolled her eyes. \"See this is why I don't tell you anything.\"\n\nMimi smirked. \"Well you can always call Katia. I'm sure she would LOVE to know that her older brother is trying to get all up in your goodies and you're not even stopping him.\"\n\n\"Well...he is fine.\" \n\n\"Oh hell yeah. I mean, if I wasn't happy with my ginger soulmate I'd climb his big ass and put my flag firmly on the top of that. He'd be wifed up, no doubt.\"\n\nCharlie exploded with laughter. Mimi could always be counted on to bring the extra. When Mimi called and suggested a lunch meet-up, Charlie was only too happy to oblige. She needed a little time away from Gavril. She wasn't ready to face him and she wasn't even trying to decipher the code behind that forehead kiss. \n\n\"So what are you gonna do?\" Mimi sipped her water and stared pointedly at Charlie.\n\nCharlie forked a cherry tomato from her grilled chicken salad and popped the juicy bit into her mouth. Chewing thoughtfully, she pondered Mimi's question for a moment before answering. \"Well...I'm \n\nnot sure.\"\n\n\"Well I think you should go for it.\"",
        "\"You think?\"\n\n\"Definitely,\" Mimi said with a nod. \"He's hot and clearly interested in you. You don't have to marry him, but you can definitely enjoy what's he's offering.\"\n\n\"I mean you make a valid point. But I wasn't really trying to get into something this summer with someone, especially with my roommate's brother.\"\n\nMimi's reddish eyebrow was cocked, the dreaded side-eye look evident in her aqua gaze. \n\n\"Charlie...that is some bullshit. Don't sit up there and act like you aren't feeling him. I'm sure Katia wouldn't mind, and even if she did, you don't have to tell her.\" \n\n\"That's another valid point.\" She sighed loudly, pushing her plate away. \"Alright...so maybe I kind of have a slight, tiny, insignificant crush on him.\"\n\n\"I'm gonna move right now, to avoid that lightning that's bound to strike from all the lying you're doing.\"\n\nCharlie rolled her eyes. \"Okay so I'm feeling him. So what? It's not like any good can from it.\"\n\n\"Other than some nasty 'hair pullin', toe curlin', sweat all my curls out' sex?\" Mimi shrugged. \"Yeah. Of course you're right.\"\n\nA small chuckled escaped as she pondered her predicament. It really wasn't that serious. She was single, Gavril was single (hopefully), and they were obviously feeling each other. And Mimi was right; no one had to know. She wasn't desperate, but it was the summertime and she was supposed to be enjoying herself. \n\n\"Hmm, you might be right\" she said, taking a sip of her sparkling water. \"I deserve some fun.\"\n\n\"There ya go! Speaking of fun, Topher's having a party tonight. He texted me this morning about it.\"\n\nTopher was one of the guys they worked with at The Attic. Charlie wasn't super tight with him, but he was a pretty decent guy. \"Really? I didn't get a text.\"\n\n\"I don't think he realized you were still here. \n\nEveryone thought you were going on vacay.\"\n\n\"Fair enough.\"\n\n\"You should come tonight. And you should bring Gavril.\"\n\n\"I'm not sure what's he's got planned, but I'll see if he's up for it.\"\n\nMimi winked. \"I'm sure he's up for something all right, it's just probably not a party.\"\n\nCharlie shot her a look. \"And that's enough of that, missy.\" She glanced at her watch. \"We should probably head out. You have work in twenty minutes and you still have to drop me back home.\" \n\nWith a large sigh she heaved herself from her chair. \"Ugh, I hate feeling like a goddamn invalid, being chauffeured around everywhere.\"\n\nMimi giggled as they stepped out of the small caf\u00e9. \"Well this time-out is the price you pay for hitting a deer.\"\n\n********\n\n\"Thanks for coming with me,\" Charlie said. \n\nGavril glanced at her. \"Thank you for inviting me. I would have sat there all night, watching Cartoon Network like a nerd.\" \n\n\"Oh hush, Gavril\" Mimi called from the front seat. \"I doubt you have any nerd tendencies at all.\"\n\nHis smile was demure. \"I am a huge Battlestar Galactica fan. But if that gets out, I will deny it to my grave.\"\n\nCharlie grinned. \"Your secret is safe with me.\" \n\nShe was glad she invited him. He looked like a lost child sitting on the couch alone, flipping through the channels. She enjoyed his company and though she was loathe to admit it, Charlie was excited about the possibility of being alone with him in a party setting. Especially if said party involved alcohol. \n\nShe didn't know where Topher lived, and because she assumed Gavril would be drinking, she opted to ride with Paul and Mimi, as Paul, who didn't drink, was permanent DD and would give them a ride to and from the party. \n\nGavril was grateful for the invite. His plans to hang out with old friends fell through and he was stuck inside the house during his vacation. It wouldn't have been so bad if Charlie hadn't avoided him for most of the morning and afternoon. When he left for his morning jog, she was still sleeping and didn't stir even after he returned and showered. He cooked breakfast, did some online work and finally left to meet with the head of the athletic division of the alumni association. \n\nWhen he got back she wasn't there. He was sorting through his camera equipment when she bounded in, muttered a quick hello and practically ran up the stairs. He entertained himself for the rest of the evening until she finally emerged, looking absolutely stunning in a multi-colored print dress. The summer dress was thin, the lightweight fabric clinging to her hips and flaring out quite nicely in a ruffled hem that stopped an inch or two above her knees. \n\nIt was a watercolor blend of dark blue, lavender, and royal green with just a touch of golden yellow. The colors were woven in intricate patterns and when she moved, it seemed as if the colors swirled too. \n\nShe paired it with a simple cardigan, a long gold necklace with an owl pendant, and simple smoky makeup. The effect was stunning. She looked very ladylike and becoming and when he glanced down at her feet and saw black motorcycle boots he couldn't help but grin. Charlie would be the kind of girl to wear a nice dress and boots together. \n\nTruth be told, he wasn't really looking forward to hanging out with a bunch of strangers. Gavril wasn't a social butterfly by any means, but he wasn't exactly a loner either. He saw tonight as an opportunity to get to know Charlie better. The thought of what they could get into made his heart jump with anticipation. \n\nFifteen minutes later they pulled up to a ranch style home. There were already several cars in the driveway so Paul parked on the street. As they emerged from the car, the sound of people talking and loud music could be heard. \n\nThankfully, the closest neighbors were about a mile away on either side. \n\n\"Are you ready?\" Charlie asked. \n\nGavril nodded. \"Yeah. Let's have some fun.\" She grabbed his arm and they fell in step together, her arms clutching his. He liked having her close. \n\nMimi studied them, her blue eyes twinkling but didn't say a word. Something was definitely going to happen with them tonight. \n\nThey walked up the gravel path to the house. As they stepped inside the sounds of Sleigh Bells \"Riot Rhythm\" ripped through the sound system. \n\nThere were plenty of people milling around, sipping from the standard red plastic party cups. It was a typical college party, but Gavril didn't mind; he was looking for a little mindless fun. \n\nCharlie turned to Gavril. \"Let's go get something to drink\" she shouted above the noise. Grabbing his hand, she walked down a hallway that hopefully led to the kitchen. \n\nThey hit pay dirt at the end of the hall, which opened up to a fairly large kitchen. There was a giant clear container filled with something that was no doubt jungle juice. \n\nShe filled two cups and handed him one. \"Down the hatch,\" she said, tipping the cup back. It was surprisingly pleasant, the punch and alcohol mixing just right to produce a sweet burn that was effective. Gavril winced. \n\n\"I'm not used to drinking such sweet shit.\"\n\n\"What, you graduated college and suddenly you're too good for jungle juice?\" she said playfully. \n\n\"I never liked the shit, even when I was in college. I prefer the alcohol without all the sugar.\" \n\n\"Oh poor baby, having to suffer through the cheerleader punch.\" \n\n\"Charlie! Hey! I'm so glad you could make it!\" \n\nCharlie glanced up as Topher stumbled into the kitchen. \n\n\"Hey Toph,\" she said with a grin. \"Glad you invited me. Oh wait...\" \n\nTopher chuckled as he refilled his cup with jungle juice. \"I'm sorry babe. I thought you were out of town. Change of plans?\"\n\nCharlie nodded. \"Something like that. Hey, this is Katia's brother Gavril. I hope you don't mind that I dragged him with me. He's crashing at the house for the week.\"\n\nTopher shook his head, his warm brown eyes shining from the alcohol. \"Nah, it's cool.\" He extended his hand in greeting for Gavril. \"Nice to meet you, my dude.\"\n\n\"Likewise.\" Gavril gripped the younger man's hand in a firm handshake. \n\n\"Nice accent,\" Topher remarked. \"Russian?\"\n\n\"Da,\" Gavril replied. \n\n\"Wait a sec, your last name isn't Denisov is it?\"\n\n\"Yes it is.\"\n\nTopher's eyes widened. \"Dude, you know my brother. Nick Raynor.\"\n\nGavril smiled. \"Nick is your brother? He's a good guy.\" He turned to Charlie, who was watching the interaction with curious eyes. \"Nick and I were on the hockey team together.\"\n\nCharlie shot Topher a look. \"Your brother was on the hockey team?\" \n\n\"What, a black guy can't play hockey? It can happen, you know.\" Topher and Gavril chuckled. \n\n\"Man, wait until I tell Nick I saw you. Matter of fact, he should be here soon. I take it you're in town for the Terrific Tigers banquet?\" \n\nGavril nodded. \"Unfortunately.\" \n\nTopher grinned, his dark skin shining under the bright lights in the kitchen. \"Nick said the same damn thing. You know he's trying to go pro.\"\n\n\"I heard something like that. Tell him I said good luck.\"\n\n\"Tell him yourself,\" Topher replied. Tipping his cup back, he drained the rest of the jungle juice. \"He just got here. Yo, Nick! Look who's here!\"\n\nCharlie's eyes widened as a carbon copy of Topher stepped into the kitchen. Nick Raynor was the epitome of tall, dark, and handsome. Like his brother he was a rich cocoa color. \n\nThey both had dark brown eyes and close-cropped black hair, but where Topher was tall and skinny, Nick sported some serious muscle. He was built like a typical hockey player. When he smiled at Gavril, Charlie nearly swooned. He was ridiculously good looking. \n\n\"Oh shit, look who it is!\" Nick exclaimed. He threw an arm around Gavril's shoulders before pounding fists. \"What's up Mishka? It's been a minute, man.\"\n\nGavril smiled at his former teammate. \"Hey grandpa. You're still hanging around these college kids?\"\n\n\"Well you know I always have to keep track of the talent on campus.\" Nick's gaze fell to Charlie, who was watching the men's interaction with amusement. \"Hey beautiful.\" \n\nCharlie burst out laughing while Topher shoved his brother playfully. \"Yo leave my girl alone, man.\" \n\n\"Oh word? That's how it is, little brother? Is this you?\" Nick reached out and tilted his brother's glasses. \n\nTopher adjusted his askew black frames. \"Nah. Charlie's just a friend. We work together at The Attic.\"\n\nNick smiled. \"Oh okay. Well hey, Ms. Charlie. I'm Nick and it's a pleasure to meet you.\"\n\n\"Likewise,\" Charlie said, her smile genuine. \n\n\"What did you just call Gavril? Mishka?\" \n\n\"It is Russian for 'bear'\" said Gavril. \n\n\"Right. We gave him the name back in the day. My man was a fucking beast on the ice. Had all our opponents all shook up.\"\n\n\"You were pretty nice yourself,\" Gavril remarked. \n\n\"True, true. But I wasn't captain like you. So where are you staying in town?\"\n\n\"At the old house,\" he replied. \"With Charlie.\"\n\nNick's brown eyes widened as he glanced from \n\nCharlie to Gavril. \"Oh...I see how it is. Say no more, brother. Well come with me. Since you're here you can partake in it too.\" Nick turned to the fridge and pulled out a large bottle from the freezer. \"I know you aren't satisfied drinking that cheerleader shit. No offense,\" he said to his brother. \n\n\"Fuck you, it gets the job done.\" Topher turned to Charlie. \"Refill?\" \n\n\"Please,\" she said, handing him her cup. Charlie watched as Nick set out four shot glasses on the black granite countertop. \"What the hell is that?\" she asked as he filled each shot glass with the clear liquid. \n\n\"This? This will put hair on your chest, sweetheart. Mishka here put me on to it, back when we were but young grasshoppers.\" Grinning, he held out a shot glass to Charlie. \"Pure Russian vodka,\" Nick said. \n\nGavril chuckled. \"Now this is what I'm talking about. None of that other dreck.\"\n\n\"Well excuse the hell out of me, Mishka\" Charlie said sarcastically. \"I'm sorry if my drinking choices are too pedantic for your palette.\" \n\nA knowing smirk crossed his grizzly features. \n\n\"You are so sexy when you're sarcastic,\" he replied jokingly. \n\nCharlie rolled her eyes, despite the smile beginning to form. \"Stop trying to flirt with me.\" She took her now-filled cup back from Topher. \n\nNick watched their small exchange with a knowing grin, but didn't say anything more than \"alright, let's do this.\" He handed a glass to Topher and Gavril before raising his own. \"Cheers!\" he said excitedly.\n\nEveryone clinked glasses, tapped them on the counter once and tipped them back simultaneously. Charlie felt the smooth burn of the vodka slide \n\ndown her throat and she sputtered slightly. \n\n\"Jesus!\" she exclaimed, her voice slightly hoarse. \"That was fucking strong.\" \n\n\"I'll say,\" Topher gasped out. He coughed before taking a huge gulp of jungle juice. Charlie did the same, finding that the sweetness of the juice alleviated some of the burn for her. \n\nGavril did the shot easily, banging down the glass. It felt fucking awesome. It'd been a while since he did shots. He felt as if he were right back in college. The vodka moved quickly through his system, spreading like wildfire in his veins. He growled lightly. \n\n\"Goddamn that was good!\" Nick said, beating his chest. \"Makes you feel like a man!\" \n\nCharlie rolled her eyes. \"Okay, that's enough for me. You two have fun in here, beating your chests and being cavemen.\" She turned to Topher. \"Let's go dance!\" \n\n\"Absolutely!\" He grabbed her hand and took off for the living room. \n\nAs Gavril lined up another round for Nick and himself, his friend turned an inquisitive eye his way. \"I see you, my dude.\" \n\n\"What are you talking about?\" he asked. \n\nNick sucked his teeth. \"Don't play dumb with me, Mishka. You're feeling her, aren't you?\"\n\n\"Her who?\" He handed one of the shots to Nick. \n\n\"Charlie.\"\n\n\"Oh. Is it that obvious?\"\n\nNick grinned. \"Motherfucker, are you serious? If Topher and I weren't here, you would've probably had her spread out all over this counter.\" \n\nGavril's mind went rampant with that image before he shot his friend a look. \"Maybe; I like her. She's cute and fun to be around. She's Katia's best friend though.\"\n\n\"Word? Seems like a tough spot to be in. But if she's cool with it, I'd say go for it. It's not like your sister has to know. She's single, you're single. Do the damn thing.\" \n\n\"I hear you, moi drug (my friend)\". Nick was right; it was time to act on what they were both obviously feeling. \n\n\"Alright. Let's toast to both of us getting it in tonight.\" Nick said with a wink. \n\nGavril winced at his crude expression but chuckled at him nonetheless. \"Let's do this.\" \n\nThey both downed the shots clean. \n\nHe didn't know how many shots he'd done, but by the time he and Nick emerged from the kitchen, it seemed like the house was even more crowded. They pushed through the throngs of people and by the time he reached the sitting room, he'd lost Nick. He spotted Mimi and Paul on a couch, talking to a group of people. Grabbing a beer from a large bucket in the corner he waved to them. \n\nMimi looked up from her conversation. \"Having a nice time?\" \n\n\"So far, it is not bad\" he said with a shrug. \n\n\"Have you seen Charlie?\" \n\n\"No,\" Mimi replied with a shake of her head. \"The last time I saw her was like twenty minutes ago. She was dancing with Topher. I think they mentioned something about playing a game.\" Mimi glanced behind him. \"Speak of the devil. Here they come.\" \n\nCharlie and Topher pranced into the room. Gavril immediately zeroed in on their clasped hands. What was that all about? \n\n\"Hey guys!\" she said brightly. Her light brown eyes were shiny and there was a slight flush under her creamy dark cheeks. She was more than likely a little buzzed. Her gaze fell to Gavril and she bit her lip. \"Hey Gav. Are you enjoying yourself?\" \n\n\"I'm good. You two seem cozy.\" \n\nCharlie stifled a giggle. \"Jealous, Mishka?\"\n\nGavril bit back a groan. There was something about the way Mishka rolled off her tongue that drove him a little crazy. Still, he was determined to play it cool. \"Intrigued, to be honest.\" \n\n\"Alright people, we're getting a game of Spin the Bottle going if anyone's interested!\" Topher drunkenly shouted to the room. \"Shut the fuck up!\" he said, amidst the groans. \n\n\"What, y'all too grown now? We're doing it down in the rec room. Single people only. We ain't trying to break up happy homes in this bitch tonight!\" \n\nMimi chuckled. \"Guess that leaves out me and Paul. But we'll come and hang out any way.\" \n\nThey got up and headed down with Topher. Charlie eyed Gavril. \"Are you coming?\" she asked. \n\nHe stepped to her, his body mere centimeters away. \"Why, you want me?\" he whispered, his voice a tantalizingly low rumble in her ear. \n\nCharlie could smell the fresh scent of his cologne mixed with the vodka he drank earlier. \n\nShe shivered as his words made her throb all over. With a grin, she traced a single finger along his jawline, feeling the surprisingly soft hairs of his beard. \n\n\"That's a loaded question, Russian. You sure you can handle the answer?\" \n\nGavril reached out, curling his arm around her waist, pulling her close. Charlie moaned softly when she felt something hard pressed against her. \n\n\"Mmm,\" he hummed quietly, his hardness grinding slowly into her. \"I think I can handle it just fine.\" There was a dark gleam in his hazel eyes and it spoke volumes, luring Charlie with promises of all the naughty things this man was capable of. \n\nMaybe it was the alcohol, but Charlie found herself thoroughly soaked from his words. She was throwing pretense out the window. Sorry Katia, \n\nbut I am SO gonna destroy your brother tonight. \n\n\"Let's go, Gav\" she husked. Sliding out of his grasp, she headed for the stairs with Gavril on her heels. \n\nWhen they got downstairs, there were a good number of people already there. Topher's drunk ass was trying to organize everyone into a boy-girl-boy-girl formation. Finally everyone who wanted to participate was seated and Topher produced an empty handle of whiskey to serve as the official bottle. \n\n\"Okay dudes here's the rules: Everyone takes a turn and spins the bottle. First round, you give the person a nice little peck. Second round, you add some tongue. Third round, you get two minutes in that closet behind me. Two minutes to do whatever you want. But please no questionable fluids on the floor. That's where I hide my Christmas presents.\" \n\nThere was a smattering of chuckles at his joke. Topher grinned. \"Everyone clear? Let's do this!\" Topher spun the bottle, and it landed on a cute little blonde girl. She hopped up, kissing him eagerly before stumbling drunkenly back to her place on the floor. \n\nAs it got closer to her turn, Charlie couldn't help the butterflies in her stomach. Gavril was sitting opposite of her. She knew it was just a silly game but a small part of her was hoping to get a little something from him. The forehead kiss wasn't enough. And if that shit he pulled upstairs was any indication, he was definitely willing to give a little more. \n\n\"Ay yo, snap out of it girl! It's your turn.\" Charlie looked up to see Topher grinning at her. \n\n\"Spin the bottle, Charlie.\" \n\nCharlie did as she was told. Round and round the bottle went until it finally landed. Oh fuck, she thought as the bottle stopped right in front of Dale. Of course. The circle let out a chuckle as she looked up at Dale, who was trying not to blush. As if shit wasn't already awkward between the two of them. \n\nIt wasn't that Dale was unattractive. He was extremely cute. With his golden brown skin, dark hair, and warm brown eyes the color of rich coffee, he was swoon-worthy. He was tall and gangly, with a nose that would have been hawkish on anyone else but suited him just fine. Dale was a great practical joker, a little awkward when drinking, but overall an absolute sweetheart. \n\nHe reminded Charlie of Dev Patel, the actor from Skins, except a lot less nerdy. There was just no spark between them, and for that Charlie always felt a little guilty. \n\nEveryone knew about Dale's crush on her. She tried to avoid it (if you didn't count that one time they made out a little after too much wine) in order to keep him from getting his hopes up, but of course fate had other plans. ",
        "With a sigh, she moved forward and planted a quick kiss on Dale. The group clapped loudly, making Dale grin. \n\nGavril watched the scene with interest. It was obvious that Charlie's manager had a serious crush on her. It must have made his night to get a kiss from her. Gavril sipped his beer, a smirk pressed on his lips. Let Dale have his little kiss; Gavril planned to get much more from his milaya later. \n\nThe excitement from Charlie and Dale died down and soon it was Gavril's turn. He gave the bottle a turn and it spun wildly before landing on a sultry brunette who ran her eyes up and down his body before shooting him a slow, sexy smile. Gavril smiled back and quickly kissed her. \n\nThe game moved into the second round shorty after. Charlie was enjoying herself until her turn, when the bottle landed on none other than Linus \"I Can't Help But Watch\". \n\nNow maybe she was a little tipsy, but she definitely didn't remember him being there when the game first started. She could hear Mimi's loud laughter ringing out in the room as Linus grinned triumphantly at her. \"Well hello Charlie. We meet again.\" \n\nCharlie shot him a look. \"Let's just get this over with, Linus.\" \n\nLinus' smile was a mile wide. \"Come on, babe. You know you're going to enjoy it.\"\n\n\"Hey, let's keep the shit-talking to a minimum\" Topher interjected. \"We don't want the natives to get restless.\" \n\n\"Sorry Toph,\" Linus said sheepishly. Charlie raised an eyebrow in his direction. Of fucking course Linus and Topher would know each other. They all ran in the hipster crowd. \n\n\"Alright remember. This round includes tongue. You have to kiss for a full minute,\" Topher added in, much to Charlie's annoyance. After shooting Topher a dirty look, she grabbed Linus' t-shirt and drew him close. \n\n\"Hey!\" he exclaimed. His shaggy hair fell softly into his eyes. \"I knew you were feeling me girl, but damn.\"\n\n\"Shut up,\" she snapped before pressing her lips to his. Linus' lips were warm, a little chapped, but not too bad. He was a bit too eager, practically forcing his tongue into her mouth. Charlie was glad when the minute was up. When Topher called time, she gently moved him away, wiping her mouth as if trying to remove traces from his kiss. \n\nLinus grinned at her. \"There's more where that came from girl,\" he said with a smirk. \n\n\"Thanks, but I'll pass\" she shot back. Charlie sipped from her cup, determined to wash the taste of Linus' desperate kiss out of her mouth. Her eyes traveled to Gavril, who watched her with amusement. Charlie was kind of hoping to at least get him at some point in the game. She wanted to use the bottle as an excuse to make a move on him. \n\nGavril's turn in the second round came up, and once again it landed on the brunette who made eyes at him before. \"Yeah, Amber!\" someone shouted. The girl grinned shyly. Amber crawled forward as Gavril moved closer to her. \"Hi again,\" she said with a smile. \n\n\"Privet\" Gavril replied. She leaned in eagerly, smashing her lips to his. He was caught off-guard but recovered quickly, getting into the kiss. \n\nCharlie watched as the brunette practically mauled Gavril's face. Irritation bubbled slowly in the pit of her stomach and she had a sudden urge to snatch the girl's hair. \n\nWhoa whoa whoa, Horton. Calm that down right now, she thought. Mercifully the kiss was over in a few and Charlie felt her body go back to normal. Gavril broke the kiss and Amber appeared dazed. \n\nShe rolled her eyes at the lovestruck look on the girl's face. Sorry sweetheart, she thought. You're gonna have to look for your own guy. This one is gonna be occupied tonight. \n\nSipping her drink, she giggled at her boldness. She supposed she could blame it on the alcohol, but she'd already planned to make her move on Gavril before they came to the party. \n\nBy the time the third round came up, most people were either too drunk or lost interest. Charlie shook her head. The attention span of the average college student was laughable. \n\nAfter a while everyone agreed to stop playing and enjoy the rest of the party. Charlie was chilling, chatting with a large group of people including Paul and Mimi. Gavril had disappeared earlier and Charlie hoped that Amber wasn't anywhere near him. Her mind kept focusing on the little brunette who was clearly starstruck over Gavril. \n\nExcusing herself from the group, she headed upstairs to refill her cup and to also look for a bathroom. The first floor wasn't as crowded as it was earlier, much to her relief. She was able to move through groups of people with ease.\n\nCharlie went upstairs, hoping there was a bathroom in a bedroom. The first door she came to was closed, but she barged in. \n\n\"Holy shit, I am so sorry!\" she yelped to the half-naked couple making out furiously on the bed. Charlie nearly laughed aloud as the girl tried to cover up her bra-clad breasts. \n\nIt was Amber from the Spin the Bottle game. Her heart sped up, trying to get a glance of the boy and sighed in relief when she realized it wasn't Gavril. In fact, he was as far from Gavril as possible. \"Dale?\" she questioned. \n\nDale grinned sheepishly from the bed. \"Uh, hey Charlie.\" \n\nCharlie didn't know whether to be relieved or highly amused. \"Well I'm gonna just head outta here. You two crazy kids have fun.\"\n\nShe closed the door behind her, chuckling to herself. Walking a few doors down, she rapped softly and entered the room when she heard silence. Charlie said a silent prayer of thanks when it turned out to be a bathroom. \n\nSetting her cup on the counter, she quickly relieved herself and washed her hands. She was just smoothing her hair down in the mirror when the door burst opened. \n\n\"Hey can't you fucking knock!\" she exclaimed. \"Oh it's you.\" \n\nGavril smiled. \"You were expecting someone else, milaya?\"\n\nCharlie shivered. She wasn't sure what he kept calling her, but just the way he said it her body was responding. \"I wasn't expecting anyone at all. Most normal people knock.\" \n\nHe laughed while stepping into the bathroom. Gavril shut the door, the click of the loud vibrating loudly in the small space. \"Sorry, Charlie; I knew you were in here.\"\n\n\"You were absolutely sure?\"\n\n\"Okay so maybe I was only guessing,\" Gavril said. \n\n\"But my guess was right. And I am glad for that.\"\n\n\"Oh yeah? And why is that?\"\n\n\"Because now I finally have you all to myself.\" He inched closer, and Charlie briefly glimpsed the hungry look in his eyes before he pulled her close. \n\nPressed against him, she could feel the tightly corded muscle of his thighs straining against the dark denim jeans. It took all her willpower not to grind her pussy into his leg. \n\nHe felt so fucking powerful, as if he could lift her with ease. The thought of her legs wrapped around his waist sent powerful throbbing pulses to her core, making her ache so badly she cried out. \n\nGavril heard her little groan. It made him unbelievably hard; he wasn't sure what it what about this particular girl, but there was something primal in his lust for her. \n\nMaybe it was her scent; it was deep and sensual. While most women wore floral in the summertime, Charlie smelled like danger: hot metal, sandalwood, and musk with just the barest hint of oranges. She was intoxicating. \n\nHe could feel her nipples pebbling through the flimsy fabric of her dress and was curious to their color. Were they cocoa like her, or dark-capped like sweet juicy blackberries? He hungered for this woman in his arms. His body begged to feel hers, and his tongue salivated for just a taste of her. She would be sweet. Indeed she would. \n\nCharlie could practically hear the thoughts in his head and they mirrored her own. It wasn't the alcohol at all. She was stone sober and horny as hell. \n\nOne smoldering look from the man and she was practically humping his leg, her poor pussy begging for the good time his hazel eyes promised to deliver. She licked her lips and watched his gaze follow her movement, his eyes grower wider at the flick of her pink tongue. \n\n\"Don't tease me, milaya\" he growled. He lowered his lips to her shoulder, brushing the fine skin. His grin was large when he heard her soft gasp. His lips trailed up, his tongue snaking out, marking a wet trail in the gentle curve of her neck.\n\nHer eyes rolled in pleasure. She felt like absolute putty in the man's hands and he hadn't even kissed her yet. Charlie knew she needed the upper hand. Reaching between them, she gently cupped his hardness before rubbing her palm against him. \n\nCharlie gasped when his hand tightened around the back of her neck as he gently bit her earlobe. \"I believe I said don't tease me,\" he managed to speak, the clipped Russian accent growing thicker. \"I will have to punish you for that.\"\n\nShe chuckled, giving him one final rub before sliding her hands back to his waist. \"Do it. I can take whatever you give me.\" \n\nGavril raised an eyebrow, shooting her a sharp look of lust. \"That is good to hear, malyutka. Because I plan to eat every inch of that pussy until you beg me to stop. And then, when I've had my fill I'm going to spread your legs wide and fuck you until you scream.\" He grinned at the need on her face, her libido ignited by his dirty words. \"That is the punishment for my bad little milaya.\" \n\nHer hips rocked against his, her pussy grinding sweetly against his thigh. The friction wasn't enough and she nearly cried out in frustration. But she wasn't going to let him see just how much his words affected her. \"Promises, promises Russian\" she said throatily. \n\nShe reached up, pressing her lips to his. Gavril groaned, her little act taking him by surprise. Charlie had the advantage; she teased him with her tongue, stroking his into submission. When she felt his hands cup her butt and lift her firmly off the ground, her gasp gave him control and he took over. \n\nGavril set her on the bathroom counter and wrapped her legs around his waist. He could feel the throb of her hungry pussy but decided that would have to wait. Right now he was busy with the heady taste of her tongue. She tasted like that damn sugary jungle juice and it was making his head swim. \n\nCharlie reached for his crotch, eager to feel what he had in store for her. She wanted to see what the Russian was packing, but Gavril gently moved her hands away. \"Not yet, krasivaya,\" he whispered, his breath warm against her skin. \n\nHe planned to enjoy her thoroughly, just not now in the tiny bathroom. He wanted ample time and no interruptions. His lips trailed her skin once more, kissing her cheeks before moving to her neck. His teeth nipped bluntly at her flesh and he grinned when he heard her soft mewl of pleasure. He was enjoying her little sounds; they were incredibly sexy. \n\nCharlie tugged gently on his hair, bringing his face back to hers. She shot him a slow smile. \n\n\"You have no idea what you're getting yourself into, Mishka\" she husked. She tilted his head, angling him so that his jaw was in perfect reaching distance. Her full lips brushed against the dark stubble on his jawline, enjoying the sensation from the soft hairs. \n\nHer tongue snaked out, licking a spot just below his ear. She grinned widely when she heard the deep rumble of pleasure spill from his lips. His hands tightened around her waist and she could tell he was struggling to maintain control. \n\nCharlie smirked. Good. \n\nWith another wicked grin she licked the same spot before tugging his ear gently. \"Seems like the Russian has a weak spot,\" she teased. When she bit down on his skin, Gavril slammed his hand against the wall, the force making a slight dent in the plaster.  \n\nLifting his head, he tugged her hair, tilting her face towards his. Charlie was gloating, her light eyes dancing as she shot him a triumphant smile. Gavril's eyes were predatory as he hungrily claimed her mouth again. He showed no mercy, his tongue dominating hers. \n\nHe didn't dare move his hands from her hair. He smelled the damp sweetness between her thighs and knew if his hands traveled down they would never leave. Gavril was so lost in the exquisite taste of her pouty lips; he barely heard the pounding on the bathroom door. \n\nIt was only when the person threatened to break the door down did he snap to attention. With an irritated groan he lifted his lips from her. \"Occupied!\" he shouted at the door. \n\n\"That's great,\" the voice yelled back. \"But the cops are here and they're shutting the party down. So you need to get the hell out of the bathroom.\" \n\nGavril glanced back at Charlie, who looked just as frustrated as he. With one last kiss, he gently lifted her from the counter. As he set her down, he made sure to adjust himself. \n\nBefore either one could say anything the door flew open to reveal Nick with an extra-wide grin. \n\n\"Well, this is a surprise\" he exclaimed with exaggerated shock. His gaze shifted to Gavril's look of frustration to Charlie's swollen lips and mussed hair. \"Busted.\"\n\n\"Oh shut up,\" Gavril said. \"We should probably get out of here if the cops are breaking shit up.\" \n\n\"Yeah. Topher's passed out in his room and it seems I'm the only responsible adult on the premises.\" Nick glanced at Charlie. \"Your tiny little friend with the bright hair? She's wasted off her ass and screaming for you.\"\n\n\"Thanks,\" Charlie said hoarsely. \"We should get going.\" \n\n\"I bet,\" Nick replied. He was still smiling at Gavril. \"Don't hurt him Charlie.\" \n\nShe laughed. \"I can't make any promises.\"\n\n********\n\nGavril waited patiently while she unlocked the front door. He stepped inside after her, watched as she laid her keys down on the table by the door. The car ride home was interesting. Mimi was completely drunk, singing loudly with the radio and laughing when Charlie told her about finding Dale and Amber together. \n\nCharlie was relatively quiet, aside from chuckling at Mimi every few minutes. He was sure the ride home felt like an eternity for her, because he was feeling the same way. He couldn't wait to get her back. He was positively giddy at the thought of tasting her. \n\nYes, he would do that first. Her pussy taunted him the whole way home, smelling so fucking delectable. The scent of her arousal was faint, but for Gavril, he was practically dizzy from it. \n\nShe padded to the kitchen, turning on the light. Her throat felt absolutely dry. She was still feeling a little bit of the jungle juice but for the most part she was sober. It was a good thing, too. From the look in the Russian's eyes, she was going to need her wits about her. \n\nCharlie reached into the fridge and grabbed a water bottle. She'd just taken a drink when she felt herself being grabbed from behind. \"Oh!\" she exclaimed in surprise. \"What the\u2014\"\n\n\"What did I tell you would happen once we got home, Charlie?\" Gavril whispered. His deep voice in her ear made her tremble. \n\n\"Gavril, I\u2014\"\n\nHe chuckled. \"What's wrong? You had all that mouth for me earlier. Are you scared now?\" \n\nCharlie scoffed as he lifted her up quickly before settling her on the island counter. \"Me? Scared? You obviously must be new. You don't frighten me, Russian.\" Her copper eyes met his hazel ones in a challenging stare. \n\nGavril was amused. \"But I do make you wet, don't I milaya?\" He settled himself between her legs, spreading them a little. \"I know I do. I can smell you right now.\" Closing his eyes, he inhaled deeply, taking all her beauty in. \"Mmm, you smell so good Charlie,\" he moaned. \"Let me taste you.\"\n\nShe had to hand it to him. He was smooth as hell. \n\nWordlessly, she shrugged out of her cardigan before slowly sliding her dress up mid-thigh. \n\nGavril leaned in, capturing her lips in a scorching kiss. One hand was perched on her thigh, while the other traveled up her smooth skin, pushing the delicate fabric of her dress aside. What he found there surprised him. \n\nThe smoothness of her mound excited him, her soaking sex bare save for a lovely thatch of curls which were incredibly soft to the touch. Gavril smiled against her luscious lips. \"You are not wearing any panties,\" he rumbled. \n\nCharlie shot him a wicked smile. \"Nope,\" she gleamed. Grabbing his hand, she guided his fingers, sighing softly as his digits trailed gently against her wetness. \"YA vsya mokraya\" she whispered before kissing him yet again. \n\nHe groaned at the sound of her husky voice whispering those dirty words to him. She was right; she was indeed all wet. \"You speak Russian\" he said with a grin. \n\n\"A little,\" she confessed. \"Just the naughty stuff. Never know when you may\u2014oh!\" her sentence cut off as he pushed a thick, callused finger into her tight hole. \"Fuck. Need it,\" she finished. Charlie bit back a gasp when the rough pad of his thumb brushed lightly over her sensitive little nub, the action making her legs quiver and her pussy clutch his finger even tighter. \n\nGavril's lips made a slow, winding path down her body, stopping to lick and suck her neck, kiss her collarbone, and nibble the sensitive valley between her abundant breasts. Charlie was going crazy; he hadn't even reached her navel and she was close to her first orgasm. \n\nHer breath caught in her throat when he added a second finger, his thumb still making slow circles around her clit. Before she realized what was going on, he removed his fingers altogether. \n\n\"What...\" Once again the sentence died on her lips when she saw him lift his fingers to his lips, shoving them into his mouth and sucking them. The gesture was obscene and so fucking erotic. Charlie watched as he savored her flavor, his eyes nearly rolling back from her taste. \n\nGavril was in heaven. She was so fucking delicious it was unbelievable. His cock was painfully hard, pushing against the rough denim fabric, begging to be released for a chance at that sweet brown kitty. But the little head would have to wait. Big Gavril had a taste of heaven, and his greedy ass wanted more. \n\nWithout thinking, he pushed her back gently onto the counter and spread her legs wide. \"Don't move,\" he growled, shoving the flouncy skirt of her dress to her waist. Through the dim light of the kitchen he was still able to make out the absolute perfectness that was her pretty, dark pussy. \n\nShe was incredibly built, from the thickness of her powerful thighs (all the better for her to clench him tightly while deep inside her), to even the adorable pudge of her not-flat-at-all tummy (a perfect place for his forehead to rest while his tongue worked its magic on her dewy folds. \n\nGavril bent lower, his butt coming into contact with one of the stools near the counter. Perfect, he thought to himself. As he sat down, he spread her legs even wider. With a lick of his lips, Gavril lowered his head and got to work. \n\nCharlie was wrought with anticipation, her body humming with tension. She felt his soft lips on her thighs before he took her by surprise and covered her button completely with his mouth. \n\n\"Oh. My...\" she gasped out, her hips rocking forward automatically. His name tumbled from her lips as the first orgasm hit her suddenly. She braced herself on her elbows and rode out her pleasure, her hips humping his face. \n\nGavril attempted to steady her, wrapping his free arm around her leg. \"Where do you think you're running to, milaya? I'm not through with you.\" With a prideful smirk, he pushed two fingers deep inside, enjoying the loud whimper she made. \n\nHe showed her no mercy, plunging his fingers in and out of her tight little hole with the quickness. Though he still held onto her legs, \n\nCharlie began to meet his fingers, fucking them in a nice speedy rhythm that left her breathless and incoherent. He watched her for a few seconds before lowering his head back to her sweet pussy, his mouth going straight for her clit. With his free hand, he spread her lips further and dove in, sucking and nibbling at the little bundle of nerves. ",
        "Charlie was near tears. It was all too much, the sensation of his fingers and his tongue making her feel like she was going to explode. She was crying out, calling his name, cursing him out, but begging him not to stop. The tingling heat was building slowly and the more he sucked greedily from her, the sharper the burn. Her whole body was on fire, and if she didn't come soon, she was liable to combust. \n\nWhen he vibrated his tongue against her clit, she finally fell over the edge. With a strangled whimper she came hard, flooding his mouth with her essence. Her taste made him groan and shivered at the tremors. He felt her orgasm around his fingers, and yet he still fucked her hard, his fingers never slowing their pace. \n\n\"Oh...I'm gonna...Ahh, shit I'm coming again. Oh my god!\" she bit out. Falling flat against the counter she bucked her hips as the third one hit her hard. She let out a small scream as her legs began to quake. Lifting his head, Gavril took in the sight of her, dress askew, breasts heaving, and her inner thighs completely covered in her juicy sweetness. \n\nHis fingers slowed down considerably, lazily moving in and out of her. Charlie's hips still jumped a little, her pussy humming from his ministrations. \n\nGavril was still desperate for more of her flavor. Bending his head once more, he licked the goodness coating her thighs, taking especially care around her still tingling pussy. She mewled softly with pleasure when he nuzzled her sweetly, his nose brushing against her clit, making her jump. \n\nHer hips began to move with his movements, jumping again when his tongue ran the length of her seam. Though he was tempted to slide his fingers back in, he kept his hands to himself, rubbing his aching hardness through his jeans. \n\n\"Gavril,\" she moaned. Her hands reached down, her fingers locking into his hair. \n\nHe knew she was spent, but he need just one more taste. Parting her slick pussy, he gave her one final kiss, dipping his tongue deep inside, fucking her gently. She came again, not as hard as the last one, but still as sweet. She clutched his hair tightly as she climaxed, her thighs coming together, squeezing him almost painfully. \n\nWith a soft chuckle, he parted them easily and sat up. He was grinning like a champ at his handiwork, the cocoa folds of her pussy were blushed a deep cherry color, her juices completely cleaned from her thighs. She lay on the counter, legs akimbo and utterly spent. He was silent; watching and waiting for her to speak. \n\n\"You proud of yourself?\" she asked breathlessly. \n\n\"Absolutely,\" he said with a nod. \"Your pussy is exquisite. The best I've ever tasted. I could enjoy your cream all night.\" \n\n\"Ohh,\" she moaned, her pussy quaking at his words. \"Fuck you,\" she cursed, a smile plastered on her face. \n\n\"Don't worry, we'll get to that soon enough\" he shot back. \n\n\"Soon as I get my legs back in working order,\" \n\nshe quipped. \"And don't think you've bested me, Russian. I still haven't shown you what I can do.\" \n\nGavril smiled. \"I can't wait.\" He rose to his feet, wincing slightly at his still rock-hard erection. Gingerly, he lifted her easily, scooping her into his arms. \n\nCharlie chuckled softly, rolling her light eyes through drowsy lids. \"Well aren't you chivalrous.\"\n\n\"Just trying to be a gentleman,\" he replied. \"I could not leave you on the counter. Although I would have come back later for a midnight snack.\" \n\nHe winked lewdly at her and she chuckled again. \n\n\"I don't think my poor pussy would have been up to it. She got quite the workout.\" Her arms wrapped around his neck as he slowly climbed the stairs, his strong arms supporting her back and butt. She was surprised at his strength; she wasn't exactly the lightest of women. \n\nCharlie glanced up, noticing the grin on his handsome face. \"She didn't have the right man working her over,\" he said as they reached the top floor and headed towards her room. \"That pussy is spectacular. She deserves to be sucked and fucked by someone with the proper knowledge.\" \n\n\"Mmm,\" Charlie moaned. \"Stop saying such nasty shit to me. It's making me all tingly.\"\n\nHis laugh was soft as he entered her room. \"Good. That's what I want.\" Gavril carefully walked over to her bed, setting her down gently. He turned on the lamp perched on the desk in the opposite corner of her room. Gavril peeled off her clothes, sliding her dress up her waist and over her head. He unzipped her motorcycle boots before tossing them into her open closet. When he unclipped her lacy black bra, her large breasts bounced free. \n\nHe stifled a moan; they were better than he could have imagined. Her areola were medium sized and slightly darker than her hazelnut skin. Her nipples were puffy and perfect, dotting her bountiful breasts like two ripe blackberries, ready for picking (or licking, or sucking). \n\nA string of curse words in rapid Russian tumbled from his lips. This girl was surpassing all the other women in his past for the \"Best I Ever Had\" award and he hadn't been inside her yet. He gazed longingly at her form, all her womanly curves and softness while his dick threatened to break through his zipper. She glanced up at him, her eyes intent and burning with lust. \n\nShe had something to prove to him. The Russian wasn't the only one who could put it down. As he predicted, his cocky ass finally got a taste of her cookie and he was hooked; now she was hungry for what he had. And if the large bulge in his pants was any indication, she would not be disappointed. \n\nCharlie sat up, his crotch at eye level. She heard his breath catch when she reached for him, undoing his pants and slowly sliding down his zipper. There was no buildup, no pretense when she pulled down his blue boxer briefs to reveal his hardness. \n\nShe licked her lips, the anticipation giving her a second wind. He was sizeable, not massive, but well-proportioned. Her eyes bulged slightly at his girth, the thickness making her wonder if she could take him all in. \n\nGavril was silent, watching her as she gazed at his cock in admiration. He knew he was impressive and her blank stare was an ego stroke. When her luscious lips covered just the purplish tip, he couldn't stop the rumble of pleasure. \n\nThat seemed to move her forward. Her tongue swirled around the spongy tip of his dick before dipping in to catch the pearls of pre-cum weeping from his slit, eliciting a low moan from the Russian. \n\nMoving from the tip, her tongue trailed long, wet licks down his shaft. She wanted to feel him in her mouth. In one fluid motion she swallowed him completely, the sensation catching him off guard. \n\n\"Fuck,\" he cried out. His hips automatically started to thrust and she grabbed them, stilling their motion. She controlled everything as she bobbed slowly, her hot mouth moving at a painful snail's pace on his dick. \n\nIt took all he had in him not to fuck her mouth. Her wet, warm cavern sucked him greedily. She would slide all the way to the base, the soft curls of dark hair at the base tickling her nose, before slowing bobbing up, her tongue swirling around his tip in wide, languid circles and then sliding back down his thick shaft. \n\nGavril balled his hands into fists. He was so tempted to wind his fingers through her silky curls and steer her where he wanted. But Charlie had other plans; she was determined to stay in control. He heard and felt her moan and he glanced down. She was using just her mouth, one hand gently cupping his sac, while the other found its way to her soaking sex. \n\nHe moaned at the sight of her, the sensation of her hands on his hardness, her slim dark fingers furiously working over her pussy. He could see her juices glistening on her inner thighs and his mouth watered for her sweetness yet again. The quiet little whimpers and other sexy sounds she made were bringing him close to the edge. \n\nAs if on their own volition, his hips began to jerk. He moved slowly at first, rocking up slightly to meet her mouth. This time, she urged him on. \"Mmm, you taste so good\" she husked. \n\n\"You like this dick, milaya?\" he grunted, his hips picking up their pace. \n\n\"Uh-huh,\" she whimpered, her mouth completely filled by him. \n\n\"Fuck,\" he cried. \"Let me fuck that sweet mouth, Charlie. I need to come.\" He was not above begging at this point. She was torturing him and she knew it. \n\nCharlie grinned. Slowly, she slid her lips from his cock while her fingers replaced them on his shaft. Her other hand was still strumming her clit and Gavril had to admire her hand-eye coordination. \"How badly do you want it, Russian?\" she smirked at him. \n\nGavril's eyes blazed hotly, the naked look of lust buried deep in his gaze. \"Badly, milaya,\" he said, his hips still thrusting. \"And mind you...teasing me at this point would be a mistake. I might have to punish that juicy little pussy of yours again.\"\n\nHer knee-jerk response was to bite down hard on her lip. \"Mmm, don't threaten me with a good time\" she moaned. \n\n\"Not a threat Charlie, but a promise. Prepare yourself, little vixen. You aren't getting any sleep tonight.\"\n\nHis words were working her over; her hand was flooded with her arousal, the creamy essence seeping through her fingers and soaking her sheets. She dipped her head but quickly raised her eyes to meet his. \"Fuck my mouth, Russian. Don't disappoint me.\" \n\nWith a low growl, Gavril wrapped his hands in her hair. He grabbed her head, holding it straight as his hips began to move faster, thrusting in and out of her wet and willing mouth. She gasped with pleasure, her fingers mashing her clit as her own hips began to rock. \n\n\"That's it baby,\" he cooed. \"Play with that tight pussy for me.\" His eyes rolled in the back of his head as he felt that familiar tightening in the pit of his stomach. \"Ohhh fuck, he groaned. Right as he was about to explode he stopped, pushing her away.  \n\n\"Noooo,\" she objected. \"I wanted to taste you.\" She pouted a little, her fingers slowing down considerably. \n\nGavril was still panting hard as he lifted his t-shirt up and over his head. He stepped out of his pants and shoes and kicked off his underwear. \n\n\"That will have to wait, milaya. I need to be inside you.\" His tone brooked no argument. \"Now,\" he growled. \n\nWith a deep shudder, she complied. Charlie reached into the nightstand and produced the shiny package and tossed it at him. Gavril ripped open, throwing the wrapper over his shoulder and sheathing himself quickly. \"Lie back,\" he commanded. \n\nCharlie eased onto the bed, her hands shaking in anticipation. She gasped when he spread her legs wide, his eyes zeroing in on her wet folds. He swirled two fingers inside her, scooping some of her flavor to his mouth before coating his dick. His hands moved back to her legs, gripping her ankles and spreading them apart. \n\nAnd then he moved quickly, thrusting hard and true, hitting deep inside. \"Ohhhh,\" she screamed, her back arching off the bed. His hips stilled for a moment while he enjoyed the sensation of her pussy gripping him tightly. She was so hot inside, and smooth like the finest silk. \n\nGavril slid out slowly before thrusting hard again, making both of them cry out. Charlie clutched at the sheets, desperate for him to pick up the pace. \"Gav, please\" she begged. \"Please fuck me.\"\n\nHe grinned down at the dark beauty before him, legs spread wide, breasts heaving, her face contorted in a beautiful mask of pleasure and pain. \"With pleasure,\" he cooed. \n\nCharlie's eyes rolled as his hips jerked, slow at first, and then picking up speed. She listened to him, his grunts and moans of pleasure. He was mumbling, his words moving rapidly from English to Russian. \n\n\"Ooh right there,\" she encouraged. Her hands automatically reached for her breasts, her deft fingers tweaking and rubbing her nipples. \"Oh fuck, Gav that feels so fucking good.\"\n\n\"You feel good, little vixen\" he shot back. \"Damn.\"\n\n\"You like that pussy?\" she teased. \n\n\"Mmm,\" was all he said before rolling his hips. His lips curved in a smile at her string of incoherent mumbles that followed. \n\nCharlie was about to hit her peak, but she was going to get him back. Sucking in a deep breath, she squeezed her pussy tighter, gripping his dick like a vice. \n\nGavril cursed loudly, his hands dropping from her ankles. Charlie seized her opportunity, wrapping her legs around his waist and meeting his thrust with her own hips rocking. \n\nHe crushed his lips to her, tongues swirling as her fucked her hard. His fingers sought out her clit and rubbed the little bud hard and she let out a guttural moan. \"Fuck, I'm gonna come,\" she cried. \"Oh god. Oh my god.\" \n\nHer soft lips, her tight pussy, it was all too much and he exploded right along with her. She wrapped her arms around his neck as she rode out her orgasm. Her teeth nipped his lips a little harder than she intended and he winced at the pain but moaned at the pleasure sensation that followed after. \n\nGavril's hips moved sluggishly as his cock still twitched inside her. Her breath was warm on his face as she kissed him softly, her tongue licking and caressing the tender spot where she bit him. \n\nCharlie could feel his heart thumping loudly against her breasts. Her eyelids were starting to droop. She wanted to say something sarcastic to lighten the mood, but exhaustion overtook her. \n\n\"Sleep, baby\" he whispered to her. Gavril went to move off her, but she protested. \n\n\"No,\" she said weakly, her arms coming over to stop him. \"Stay like this. I like this.\" \n\nHe chuckled. \"I'm too big for you, Charlie. Plus I have to get rid of the condom.\" Reluctantly he slid from her embrace. He stood on shaky legs and removed the condom, disposing of it in the trashcan near her desk. He moved back to the bed, sliding in next to her. \n\nCharlie immediately turned onto her stomach, cuddling up to his chest. She threw a leg between his and Gavril groaned when he felt her hot little pussy against his thigh.\n\nHe didn't think he could sleep with such a distraction, but soon enough he found himself drifting off, a huge smile on his lips. \n\n********\n\nShe was slightly hungover, her throat was dry, and the soreness in her body damn near made her cry out. Charlie slowly opened one eye before shutting it tightly. That sun was way too bright and it had no business beaming its ass into her room. \n\nWhat the hell did I do last night, she thought. She flung an arm over her eyes, shielding them from the light. She didn't dare look at the clock. All she wanted to do was stay in this exact spot until she felt human again. \n\nCharlie turned to see Gavril sleeping beside her and couldn't keep the big grin from forming. So last night wasn't a dream. She really had sex with her best friend's brother. \n\nAnd oh my god, the boy had skills. It'd been awhile since a dicking like that. He put it on her so hard, she damn near forgot her name. She was sore as shit, but didn't regret one minute of it. \n\nShe didn't think she could orgasm that many times. Charlie had a flash of early morning; she must have been dreaming and shifting around last night. Her pussy was pressed against his muscular thigh and started to hump him. The motion obviously woke him up because soon she felt two of those lovely, thick fingers of his press into her. Fully awake, he let her ride it out, coming twice before she fell back into sleep. \n\nCharlie felt a deep blush when she heard him sucking his fingers before wrapping his arm back around her waist. She'd never been with someone so enamored with her taste. She had a tendency to be overly aroused, the quantity intimidated most men. But Gavril seemed to love it. \n\n\"Good morning,\" he rumbled. His voice was gruff and scratchy from sleep. \n\n\"Hi,\" she said, surprised at how soft her voice was. \n\n\"Sleep well?\" \n\n\"Mmm-hmm. My throat feels a little dry and I ache all over, but overall it was good.\" \n\n\"You were good\" he said with a grin. \n\nCharlie smiled. \"So were you. I've never...I have never had sex that intense before.\" She turned towards him, propping her head on her elbow. \n\n\"Thank you.\"\n\n\"I should be thanking you, Charlie. You really are exquisite.\" I could definitely get addicted to her, he thought to himself. \n\nHis words brought a deep flush to her cheeks. \n\n\"You must be thirsty,\" he said. \"I'll go get us something to drink.\" He slid out from his side of the bed. Charlie admired his body in the daylight, the glorious chest hair, the thick bulkiness of his torso and his strong muscular arms. She bit her lip as her pussy voiced her pleasure too, throbbing intensely. Yeah she was thirsty all right. Thirsty for him. Down girl, she chided silently. \n\nCharlie eyes his half-hard cock bouncing on his thigh before he slid back on his boxer briefs. \n\n\"I'll be right back,\" he said with a grin. \"So you can ogle me some more.\" \n\nShe laughed as he left the room. With a wince, she rose from the bed. She noticed her walk was a little funny as she picked up his t-shirt and put it on. It was a little baggy, but she didn't mind. Charlie padded to the hallway bathroom and quickly washed her face and brushed her teeth. \n\nGavril was back when she returned to her room. He had two glasses of orange juice, a sandwich on a plate with a handful of raspberries, and a pint of chocolate chip cookie dough ice cream, her absolute favorite. \"Thought we could have brunch on your bed,\" he said as she sat down next to him. \n\nHe handed over her phone. \"It rang when I was downstairs. Katia. For some reason she didn't seem surprised that I answered.\" \n\n\"How's she doing?\" Charlie asked as she checked her messages. There were a few from Mimi, and a random text from her mother, which she promptly ignored. \n\n\"Like she's counting the hours until she returns tomorrow.\" He opened his mouth as she fed him raspberries. \n\n\"When are you leaving?\" she inquired, taking a huge gulp of orange juice. \n\n\"I am on vacation right now. I was planning to leave Monday, but I might be convinced to stay longer,\" he replied, shooting a knowing grin in her direction. \n\n\"Oh really?\" she was playing coy. \"What made you change your mind?\" \n\n\"Well there is this girl, and she has the best rack I've ever seen,\" he started. Charlie laughed and tossed a raspberry at him, which he caught in his mouth. \n\n\"You are so stupid,\" she said. \n\nThey sat and talked for another hour, eating and sharing about their lives. She discovered a lot about Katia's older brother. He was single (thank god), a workaholic, and very devoted to his family. He and his father were the first to come to America, when he was fifteen. \n\nHis father was a finance man, involved in mergers and acquisitions. Katia, Kirill, and their mother joined them later, but before that Gavril bounced between America and Moscow to see his mother and younger siblings. \n\nHis father was surprised when he majored in journalism at Eastbrooke but eventually came to accept it. Besides, his younger brother was the real whiz when it came to numbers. \n\nCharlie told him about growing up with her constantly philandering father and an emotionally distant mother. He fed her ice cream as they shared dating disasters, musical obsessions, and other silly things that made them laugh. It all culminated in another session of sex, where she straddled him, riding his willing cock to two more orgasms. Overall, it was a good start to her day. \n\nBy the time they emerged from her bedroom it was well into the afternoon. Gavril groaned. He'd forgotten all about that damn banquet. It was starting in a few hours and the last thing he wanted to do was schmooze with the Who's Who of the Eastbrooke Athletic Department. \n\nCharlie grumbled as she trudged, now freshly showered and fully dressed, downstairs. The last thing she wanted to do today was work but a promise was a promise. She headed into the kitchen and put the dirty dishes from her brunch into the dishwasher. ",
        "Her eyes automatically slid towards the island counter, hot memories of Gavril's head between her legs causing her to chew her lip in frustration. Reluctantly she got out a bottle of cleaner and a sponge. As she wiped down the counter, she grinned widely. No one will ever know, she thought to herself. \n\nShe was just putting away the cleaning supplies when Gavril entered the kitchen. He was dressed casually, in an Eastbrooke Tigers hockey t-shirt, khaki shorts, and black sneakers. \"Ready to go to work?\" he asked, jingling his keys in his pocket. \n\n\"No,\" she said as she shook her head. \n\nGavril laughed. \"Sorry you can't come with me tonight. It's just that it's invitation only, and I RSVP'd months ago...\"\n\n\"It's cool,\" she interrupted. Charlie wrapped her arms around his waist. \"It sounds boring as hell, anyway. Besides, you can make it up to me when you get back.\"\n\n\"Oh really?\" he inquired. His hands gripped her backside, two large handfuls of her round ass. \"What does the little vixen want?\" \n\n\"More ice cream\" she replied, her tone light and casual. \n\nHe grinned and leaned down to capture her lips, his tongue coaxing her lips open and sliding inside. He reveled at her taste as she nibbled him gently. \"Anything else?\" he asked breathlessly. \n\n\"Mhm,\" she mumbled. \"I want to finally taste you, since I didn't get my chance last night.\" \n\n\"Konechno, Of course\" he replied. \"You can have whatever you want.\"\n\nCharlie kissed him hard before pulling away, a large smile radiating in her copper-colored eyes. \n\n\"Excellent. Now let's get going. I want to get this work day over with.\"\n\n********\n\nThankfully Dale wasn't at work, so she and Mimi could discuss the party freely. The late afternoon/evening shift was always pretty easy. \n\nThere were a few customers but most were over by the coffee shop and that suited Charlie just fine. \n\nCharlie stacked and shelved inventory as Mimi pestered her for info on Gavril. \n\n\"So how was it?\"\n\n\"What is this 'it' you speak of?\" Charlie asked as she organized a shelf of manga. \n\nMimi rolled her eyes. \"Are you really going to make me beg for the details, Charlie?\" \n\n\"Okay fine,\" she said with a sigh. \"It was fucking awesome.\"\n\n\"I knew it!\" Mimi squealed, ignoring the dirty looks from a tattooed couple reading together in an oversized easy chair in the corner. \n\n\"Will you keep it down!\" Charlie scolded, a smile peeking out from the corner of her mouth. \n\n\"I knew it,\" Mimi whispered. \"He definitely looks like the kind of guy who will blow a girl's back out.\"\n\n\"He's talented, for sure.\" They headed back to the counter, organizing stuff on the way. \"I think I've officially changed my tune about him staying for the weekend.\"\n\n\"Where is zee Ruski now?\" Mimi inquired. \n\n\"He's at that damn sports banquet. He's supposed to be picking me up afterwards.\"\n\nMimi shot a cheesy grin her way. \"Going back home and getting it on, huh?\"\n\nCharlie feigned innocent. \"I can't help it that I have a big ol' Russian bear currently crashing at my house who is willing to give me sex on tap.\"\n\n\"You lucky bitch. Don't rub it in.\"\n\n\"Dude shut up. You have Paul aka the Best Damn Boyfriend Ever. Your ass isn't going anywhere.\"\n\nMimi smiled wistfully. \"I know. My Super Ginger is amazing. But still it's fun to fantasize. I haven't had a summer fling in God knows how long. I miss that feeling.\"\n\n\"I gotta say, I was a little skeptical about the whole 'summer fling' business but I'm definitely digging it.\"\n\n\"Good dick will always change your tune, man. That shit gives you a new perspective on everything.\"\n\n\"Amen, sister. I'm just gonna enjoy him while I can, you know...before Katia comes back and I have to explain to her that I know exactly where Gavril's birthmark is.\"\n\n\"And pray tell, where is said mark?\" \n\nCharlie smiled. \"Right underneath his gloriously sculpted ass. Left cheek, if I recall correctly.\"\n\nThe two girls shared a laugh. \"You dirty bitch,\" Mimi said in between giggles. \n\n\"I can live with that.\"\n\nWork flew by; the customers were fairly decent and there wasn't much to do besides gossip and shelve books. Topher stopped by to say hello and return Mimi's sweater she'd left at his house. He stayed while they discussed the party. Charlie told him about walking in on Dale and Amber and he laughed. \"That girl is gonna eat him alive, but I'm sure he'll enjoy it.\" \n\nHis gaze focused on Charlie. \"Speaking of eating,\" he said lasciviously. \"Did you finally get your '2 Minutes in Heaven' with Mishka?\" \n\n\"None of your damn business, Topher\" she said with a smile. \n\nHe laughed it off. \"Oh word, it's like that? Nah, I ain't gonna get into your business girl. But damn, the way ol' dude was sniffing at you, I know he put in work last night. I'll holla at you guys later. It's my day off and I'm not trying to be in here at all.\" He threw up his hand in a wave.\n\nCharlie snickered and turned to Mimi. \"So we've got like twenty minutes before closing. You wanna start wrapping shit up?\" \n\nMimi rang up last minute sales while Rona, the coffee shop worker cleaned up the little caf\u00e9. Charlie walked around straightening books on display and returning misplaced items to their proper place. She was in the back of the store, heading towards the front door to lock it when a familiar voice made her pick up her pace. She reached the checkout counter and came face to face with a devilishly handsome Gavril. \n\nWhen he dropped her off earlier, he was in casual clothes. Now he was smoking hot in a well-tailored black suit and a crisp white shirt with the top buttons carelessly undone. Charlie Horton was not the swooning type, but there was something about a good looking, rugged, rough-and-tumbled man cleaning up in a nice suit that made her want to fall to her knees and praise Jesus. \n\nHer throat felt dry and she swallowed audibly before licking her lips. \"Hey,\" she croaked. \n\nCharlie cleared her throat. \"You look good. How was the banquet?\"\n\nGavril shrugged, his eyes taking in every inch of her. He knew what his outfit was doing to her. \n\n\"Exactly how I knew it going to be: completely boring. I saw some of my old teammates, listened to terrible speeches, ate crappy food. Overall not too much of a time-waster.\"\n\n\"Cool. Well I'm ready to go when you are.\" She turned to Mimi, who smirked openly at her. \"Let's lock up. I don't want to leave you and Rona here alone.\" \n\nThey shut down the store, and Mimi locked the door. She was parked right out front. Mimi and Rona waved goodbye before getting into Mimi's Jeep. Charlie and Gavril walked to his truck. She'd just gotten into the passenger side when her phone buzzed in her pocket. \n\nIt was a text from Mimi: \"Dude...you better tear that shit up tonight. Goddamn that big ass man in that fine ass suit. DO WORK.\" \n\nCharlie burst out laughing, her fingers typing a quick reply. \"Of course. Night boo.\" \n\n\"Who was that?\" Gavril asked as he climbed into the truck. \n\n\"Oh, no one.\"\n\n********\n\n\"Fuck, Charlie that feels so good.\" Gavril jerked his hips as she took more of his hard cock inside her warm mouth. \n\nCharlie swirled her tongue around his tip. Her hand continued to stroke his shaft while her talented tongue moved to gently lap at his balls. \n\nShe couldn't hold back her excitement. She was finally going to taste him. After picking her up from work, he insisted on taking her out to dinner. She felt a little underdressed next to him, but he brushed off her words as nonsense. \n\n\"You look gorgeous\" he rumbled. She was just wearing jeans, lavender v-neck, and her motorcycle boots, but she appreciated the compliment nonetheless. The whole time at dinner she couldn't stop fantasizing about his dick. It was a little ridiculous; she was damn near ready to throw the food off the table and go after him. \n\nThey barely made it inside the house before she slammed him against the wall, eager to claim her prize. Gavril stepped aside as she took the reins, letting her undo his pants and take what she wanted. She treated his cock like a precious artifact, handling him gently, stroking him to life. When she deep-throated him completely, he moaned low. The girl was gifted, no doubt. \n\nHe watched as her mouth moved back to his shaft, \n\ncovering his cock once more. There weren't many women who could take all of him in, but Charlie Horton wasn't just any girl. Gavril was fascinated by her work; lips stretched wide, her saliva coating his cock. That little swirling trick she did with her tongue was going to be the death of him. \n\nTheir eyes met and she winked at him. \"Ready to come for me, Russian?\" she whispered throatily. \"Because I am so ready to taste you, baby.\"\n\nGavril growled. This woman was turning him into a little bitch, but oddly enough he didn't mind. \n\n\"You want it, \u043c\u0435\u0433\u0435\u0440\u0430,\" he grunted. His hips met with her motions, forcing more of his hardness into her mouth. \"Ohh, he moaned. \"Here it comes, beautiful. All for you.\" He came with a low moan, his hips twitching and thrusting as he released into her warm, waiting mouth. \n\nCharlie groaned in pleasure as she swallowed his essence. He was warm, sticky, and absolutely delicious. Even as he fell back against the wall, completely spent, she still continued to drink from him. She licked him clean, slurping and sucking him until he gently moved her away. \n\nShe sat back on her heels, a satisfied grin on her face. Using two fingers, she wiped her mouth, making sure she swallowed every last bit of him. \n\n\"Mmm,\" she remarked. \"You taste almost as good as chocolate chip cookie dough ice cream. That was well worth the wait.\" \n\nThe low growl of pleasure reverberating deep in his throat made her pussy quiver. \"Take off your pants,\" he said gruffly. \n\nShe complied, kicking off her pants and boots. \n\nGavril stepped out of his pants and removed his jacket. He unbuttoned his dress shirt slowly, following her eyes as she gazed at his chest. When he threw off his shirt, he pulled her close. His lips slanted over hers, the kiss taking her off guard for a moment but she gained her senses and pushed her tongue into his mouth. \n\nBefore she could continue, he moved her against the wall. \"Turn around,\" he commanded. \"Face the wall, Charlie.\"\n\nShe grinned up at him. \"Why? Am I in time out? Are you gonna spank me, Gav?\" Her copper gaze was playful. Her tongue snaked out, licking the seam of his lips and he shuddered. \n\n\"Spank you, eh? That could be arranged, milaya. But I want to eat you first.\" His hand snaked down between them, cupping her sex before giving it a soft tap. Charlie let out a low moan and her pussy bucked in his hand. He grinned, his hazel eyes ablaze with triumph. \"Turn around, Charlie.\"\n\nThis time she did as he ordered. He lifted her t-shirt above her head and off, tossing it to the side. Gavril kneeled down, his hands reaching for her purple boy-short panties. As he slid them down he grunted to her \"spread your legs, baby.\" \n\nCharlie stepped out of her panties, the cool air of the hallway making her already soaked pussy tingle. \n\n\"Mmm\" she heard him moan. \"Smells amazing as always.\" He dove in without pretense, his tongue attacking her pussy with fervor. Charlie cried out, her back arching with pleasure. Her hands were splayed against the wall, offering her support as Gavril showed her pussy no mercy.\n\nEnjoying her from behind was a new experience. His hands gripped her large ass cheeks, spreading them wide as his tongue delved deeper into her deliciously wet hole. He searched out her clit, sucking the little button until she cried out, her shaking legs indicating her first climax. \n\nGavril's tongue swiped back and forth, greedily lapping up her juices as they flowed freely. His fingers plunged deep inside her, hitting her g-spot while his other hand landed on her ass with sharp slaps. He looked up for a moment, enjoying the way her round ass jiggled and shook with each hit. His cock was slowly inflating as her cries and curses of pleasure filled the air. \n\nHe spanked her clit and she came again, this time begging for him to fuck her. \n\n\"I need to feel you inside me,\" she shuddered. \n\nHe smiled as he slid his fingers out of her pussy and into his mouth, licking them clean. His tongue ran a slow, torturous path from her clit to the back, taking extra care to swirl around the tight little rosette of her back hole. \n\nGavril reached into his pants pocket and pulled out a condom, sheathing himself quickly. \"Turn around and face me, little vixen\" he cooed. \n\nCharlie obeyed him, facing him as she unclipped her bra. He lowered his head to her nipples, alternating between the two as he licked and sucked. She gasped when he lifted her leg, grasping it tightly in his grip and slid into her, nice and slow. \n\n\"Fuck,\" they cried out simultaneously. Charlie brought his face to hers and she kissed him deep as he moved inside of her. His strokes were slow and deep and every nerve ending in her body was alive with pleasure. Her hips rolled to meet his languidly sensual thrusts. Her lips traced his neck, and she bit the sensitive spot below his ear. \n\nGavril cried out, his thrusts becoming harder now. He slid out of her, turning her back against the wall, and smacked her hard on the ass. \n\n\"Spread them,\" he growled. \n\nHis cock pushed in hard, sliding into her pussy with such force, she cried out. Charlie arched her back as his pale hand came around her throat, pulling her to him. She whimpered when she felt his other hand slide down to her clit, spanking and rubbing her little button into submission. \n\n\"You. Feel. So. Fucking. Good,\" he panted, punctuating each work with a hard thrust. His teeth bit gently into her cheek and she shuddered heavily. \n\n\"Ohh, fuck. Oh Gav. Jesus!\" she was babbling at this point, but she couldn't think. His fingers on her clit, his glorious cock pumping inside her, his hands at her throat, and his mouth whispering the naughtiest words imaginable...it was too much. \n\n\"I know you're close, Charlie. I can feel that pussy clenching. She feels so good, baby. You feel so good. You gonna come for me, beautiful? You gonna come all over this big dick?\"\n\n\"Ohh, yes. Oh god yes!\" she could feel the build-up, the honeyed release bubbling at the surface as he thrust harder. She closed her eyes and relished the sensation of his fingers mauling her clit, sparking out waves of happiness to her body. So close...\n\nGavril was about to burst. She was radiant in his hands, and her pussy felt like gold. His hips moved faster as he held her tighter to him, his fingers and cock picking up speed inside her. \n\n\"Come on krasotka,\" he panted. \"Come for Gavril. I wanna feel that sweet brown pussy cream all over my cock.\" He grinned as he felt his balls tighten. \"You ready baby? Almost there.\"\n\nCharlie's eyes rolled as she exploded into orgasm. She saw stars when Gavril's grip tightened slightly around her throat and he moaned his climax. His hand loosened from her neck and he stroked her back, his cock still throbbing deep inside her.\n\nCharlie pitched forward, her hands barely bracing the wall. She breathed deep in an attempt to catch her breath. She moaned weakly when he slid from her wetness. \n\nGavril was still shaking as he lifted her, carrying her through hall into the living room. \n\nHe set her gingerly on the couch as he disposed of the condom in the kitchen. When he returned, she was still on the couch, and she scooted over to make room for him. He plopped down. \"Damn, woman. Now that was a workout.\"\n\nShe glanced over at him, shooting him a weak smile as she pushed her sweaty curls back from her face. \"No doubt.\" \n\n********\n\nHer phone was ringing somewhere in the living room. Charlie groaned, irritation marring her features as she roused from sleep. Looking at the time on the cable box, she blanched. \"Shit,\" she muttered. When the hell did nine-thirty in the morning happen? It must have been between Gavril fucking her on the couch, to them passing out. She glanced at him fast asleep behind her, a hot pink fleece blanket covering them modestly. \n\nStill lying down, Charlie flung her arm out in search for her phone. Her hand clamped around the device which was under the sofa. She wasn't even sure how it got there. Her sleepiness evaporated when she saw the caller ID. Shit, it was Katia! She would be home in about an hour. \"Hello?\" she rasped as she pressed the 'ACCEPT' button. \n\n\"Hey there, lady\" Katia chirped. Charlie winced. It was way too early to be that cheerful, but that was Katia. \n\n\"Hey hon. How was the trip?\"\n\nShe could hear Katia sucking her teeth through the phone. \"Let's just say we have so much to talk about when I get home.\" \n\nCharlie turned her head, her gaze falling on her best friend's older brother who was currently snuggled up to her, his muscular arm thrown around her, gripping her waist tightly. She shook her head, trying not to think about Gavril's morning wood pressing firmly into her backside. \n\nOh yeah, they definitely had a lot to talk about. \"You don't say,\" she replied. \n\n\"Yep,\" Katia said. \"Well traffic is really heavy so I'm thinking we might make it back around noon. We can go out for lunch or something when I get home.\"\n\n\"Sounds good,\" Charlie tried to keep her voice light. \"I can't wait to see you.\"\n\nKatia giggled through the phone. \"Well I'm sure my brother's kept you quite busy.\"\n\n\"Y-yeah, we've had some fun,\" she said, biting back a moan when Gavril cock twitched. He was dangerously close to sliding right inside. \n\n\"Uh-huh. Well just make sure all your fun is cleaned up by the time I get back. I don't want to see any questionable bodily fluids on any surfaces, Missy.\"\n\nCharlie sputtered, her gasp coming out as a strangled cough. \"Wait, what?\"\n\nKatia was full on laughing now. \"You heard me. I told you this was a perfect opportunity for a summer romance, Charlie.\"\n\nShe had to grin. Her best friend, the matchmaker. \"You sneaky little bitch. You set this all up.\"\n\n\"I prefer to think of it as greasing the wheels of fate just a little. You guys have a lot in common. I knew you would hit it off.\" There was a slight pause in the conversation and Charlie heard a male voice in the background. \"Listen, babe I gotta go. We're heading through a tunnel and I might lose you.\"\n\n\"Hold up there, Little Miss Matchmaker. Who is that with the deep ass voice in the car? Unless one of those sorority bitches got a voice transplant, you've got some explaining to do.\"\n\nKatia giggled softly, and Charlie could tell that she leaned closer to the phone. \"I may have found a gentleman friend who escorted me around town and who also happens to go to Eastbrooke and needed a ride back to school. Being the kind soul that I am, after thoroughly checking out his background, I agreed to help the poor fellow out.\"\n\nCharlie smiled down the phone. \"That's my girl. I'll see you in a few hours. Have fun.\"\n\n\"You too. Tell my brother I said hello.\"\n\n\"I will. I'll try not to bruise him either, but I can't make any promises.\"\n\n\"Okay eww, Charlie. I don't want to know that.\"\n\n\"It's your fault, Matchmaker. You wanted this.\" They both laughed as Charlie ended the call. She tossed the phone on the coffee table and turned back to Gavril. She kissed him awake, whimpering when he clutched her tightly. \"Good morning, Gav\" she husked. \n\n\"Same to you krasotka,\" he rasped. He sat up slightly, his soft dark hair adorably askew atop his head, giving him a rather startled appearance. \"I take it that was my meddling sister.\"\n\n\"Yes. She told us to clean up and make sure there were no questionable fluids on any surface.\"\n\nGavril chuckled. \"She would.\"\n\n\"Did you know she set this all up?\"\n\nHe was thoughtful for a moment before he kissed her again. \"I had a feeling she was up to something when she called me earlier in the week to make sure I was actually attending the banquet. I'd planned to stay at a hotel, but she convinced me to stay here and keep her lonely roommate company.\" He smiled. \"That little trickster.\"",
        "Charlie nodded. \"Well we have the house to ourselves for another two and a half hours. What do you want to do?\" \n\nHis hazel eyes darkened as he notice her puckered nipple peeking out from under the fleece blanket. \n\n\"I can think of a few things,\" he rumbled. His cock was back to life and Charlie stifled a moan as he rubbed his hardness against her leg. \n\n\"Do you ever stop?\" she said with a laugh. \n\n\"Never.\" He grinned. \"Come on, krasotka Convince me to stay for another week or two.\"\n\n\"We didn't do enough convincing already this weekend?\" she inquired. \n\nHis hands threaded through her unruly curls as he kissed her deeply, his tongue tasting bitter and sweet all at once. \"I am a stubborn Russian,\" he rumbled. \"I need a lot of convincing.\"\n\n\"Well then,\" she replied. \"I'll be sure to convince you extra hard, Russian.\" Her hands reached between them, gripping his cock. She enjoyed his soft moan as he closed his eyes briefly. When he opened them, there was that familiar look of fiery, naked lust that made her pussy throb with anticipation. \n\n\"I'm counting on it, Krasotka\"\n\nCharlie grinned as he lowered his lips to hers again, claiming her tongue in a soul-searing kiss. \n\nThis was shaping up to be a good summer after all. What a difference the Weekend makes. \n\n********\n\nChapter 5 of \"Getting Over Edie\" is on the way! Thanks for being so patient!"
    ],
    "authorname": "nerd4music",
    "tags": [
        "interracial",
        "summer"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-long-weekend-12"
}