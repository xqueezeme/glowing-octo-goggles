{
    "title": "Black Friday",
    "pages": [
        "This was supposed to come out, you guessed it, Black Friday. But, apparently my recent illness not only affected my dexterity, it also affected my acuity. I wrote the whole thing with little punctuation, and it got rejected for poor grammar. I hope I got enough fixed that you can actually read it. Enjoy. \n\n................................................\n\nThe alarm went off at three in the morning. Why otherwise sane, intelligent women get up at such an ungodly hour, fight massive crowds, all just to get a 'bargain' is beyond my ability to comprehend.\n\nBut my wife loved it, and of course I loved my wife. So much so, that I got up with her, and cooked a massive breakfast while she got ready. \n\n\"Hey\" called out my stepdaughter Amy, stepping into the kitchen and grabbing a cup of coffee.\n\n\"Hi, baby,\" I said, as she kissed my cheek. \"Ready to conquer the masses?\"\n\n\"Ha!\" she cried. \"We have a plan. And I have on the right shoes this time.\"\n\nLast year an enormously obese woman stepped on her toes. They were bruised for weeks. As a joke, I bought her a pair of steel toed shoes. I was really surprised when she liked them enough to wear them.\n\n\"Morning Dad!,\" came a cheery voice, as my other stepdaughter Jane breezed in. I had the water heated and the lemon sliced, and soon she was sitting at the kitchen table with her Earl Grey, checking sales papers, reaffirming their route. I shook my head. If she could plan military campaigns as effectively, General Jane would rule the world.\n\n\"Uncle Frank!,\" my nieces Lori and Sandy came in next, kissed my cheek, poured coffee, and sat, looking over the plan Jane had set up. I made another pot of coffee.\n\nMy wife Debbie stumbled in, not quite awake despite the shower. She kissed me, demanded coffee, and took a seat. The other part of the group wasn't here yet, but since they were always late, and had been threatened with being left behind, I started plating breakfast. Eggs scrambled, if you wanted over easy you could cook them yourself. Bacon, sausage, and ham. Home fries, rice and gravy. And of course, two large pans of homemade biscuits. By the time I had finished serving, Amy's friend Jean and her mom Alice were sitting down, digging in without ceremony.\n\nThe last of the troop to arrive dashed in.\n\n\"Damn! Almost overslept, again. Did I miss breakfast?\"\n\nI laughed at my ex. She would be late for her own funeral. I handed her a sausage and egg on toast and a travel cup of coffee, grinning as she tried to eat and walk at the same time.\n\nI was left with a massive pile of dirty dishes and lipstick smears from the kisses. Why in the world makeup was necessary at that time in the morning was a mystery.\n\nI wiped my cheek while an enormous grin split my face. I was the luckiest man in the world.\n\nInstead of going back to bed I sat in my recliner, thinking about how I got here and how lucky I was, before I dozed off.\n\n...............................................\n\nI didn't always feel that way. eight years ago I considered life to be a miserable experience. \n\nMy wife had just left me. Not because she wanted to be with someone else, but because she just didn't want to be with me anymore. It wasn't totally unexpected, I knew something wasn't right, but never expected that. Seventeen years, shot to hell. \n\nI was never exactly what she wanted, but she seemed happy. It was her second marriage, Amy was five and her ex had just disappeared, so maybe she considered me a fall back. \n\nAmy was Amy, a sweet little girl without a mean thought in her mind. We were hesitant at first, I had no experience being a Dad, and she never really remembered her biological father, so we were on even footing. Pretty soon though, she was a true Daddy's girl. I coached her softball teams, cheered her at soccer, growled at her boyfriends when she was old enough to have them, and gave her away with tears in my eyes at her wedding. I think her mother was actually jealous at times.\n\nShe was a secretary, I worked in maintenance in the local factory. She studied at night and got her degree, something we were both proud of. I had an associates' degree in management, certificates in welding and plumbing, and was a licensed electrician. And to be an old guy, I was pretty decent around a computer. She still though her four year degree raised her slightly above me.\n\nWe saved, at my insistence, had 401 programs, she even had a profit sharing program at her job. On reflection, I really think she was just waiting to cash out. I didn't really fight it, just made sure it was an even split. I didn't want the house, so we sold it and split the money.\n\nShe went on a cruise, got a nice apartment and a new car, and lived the life of a comfortable divorcee.\n\nI went back to work, got promoted to maintenance manager, rented a small house and saved. It was just me.\n\nI didn't date, just had no interest. At forty six, I was so out of practice I didn't know where to start. I'd probably have died a lonely old man if I hadn't gotten cut at work and had to go to the emergency room.\n\nDebbie was my nurse. She dressed my wound, after the doctor put in ten stitches, giving me a sympathetic pat on the wrist. That probably would been it if she hadn't gotten stranded.\n\nIt was pouring rain, and being late October it was also cold. She was standing outside the door on her phone.\n\n\"Damn it!\" she said, starting to cry. I'm a sucker for a crying woman, couldn't help it. I took her arm gently. She looked around in surprise.\n\n\"Are you all right?\" I asked, as gently as possible.\n\nI think the sympathetic look pushed her over the edge.\n\n\"NO, I'm not all right. My piece of junk car just stopped running, leaving me without a way home and my daughter without a way to class. To top it off no bus runs near my house, and I don't have money for a cab. I don't even have an umbrella.\"\n\nShe looked borderline hysterical. I took both her hands, shocking her a bit, I think.\n\n\"Hush now. No man with any decency would leave a nice woman like you stranded. If you can put up with riding in an old truck with someone who isn't exactly the greatest conversationalist, I'd be honored to escort you home. Please. I couldn't rest tonight if you refused.\"\n\nI think that last part got her. She looked at me and actually giggled.\n\n\"I'd hate to come between a man and his rest. It isn't far, if you really don't mind.\"\n\n\"Please,\" I said, \"I'd be honored. Now you stay here in the dry while I pull around.\"\n\nHer eyes widened a little when I pulled up. I don't know why, I wasn't lying about the old truck. I just didn't tell her it was a '61 Studebaker, completely restored to showroom condition. My pride and joy, and my main hobby for the last year.\n\n\"My great uncle had one of these. Didn't look nearly as nice as yours,\" she said, after settling in.\n\n\"My latest project,\" I told her proudly. \"I usually restore something and get rid of it, but just can't seem to do it with this one.\"\n\nThis led to an interesting discussion about old cars and favorites we had owned in the past. All too soon we were at her apartment. She seemed reluctant to get out.\n\n\"Thank you so much,\" she said, about to open the door, \"and thanks for letting me ride in this cool truck.\"\n\nI looked at her and decided to be honest.\n\n\"Look Debbie, I'm probably going to suck at this because it's been so long since I've done it, but would you like to have dinner with me some evening? Provided of course you're not married or in a relationship. It's been a long time since I've been around anyone as nice as you, and I'd love to get to know you.\"\n\nShe was probably offended, given the stare she was giving me. I guess I made a mistake.\n\nSuddenly she started talking.\n\n\"I don't see a ring. Are you married?\"\n\nI shook my head.\n\n\"I was, for seventeen years. Haven't been for the last two. Amazingly, there was no cheating, no horrible fights. She just woke up one morning and decided she wanted to be single again. Refused counseling. Refused to talk about it. In the end she hinted that she was just bored. Took a long time to come to grips with that.\"\n\nHer eyes had widened.\n\n\"That seems even more painful than if she had cheated. My story is much more mundane. He wanted to stay married, and date regularly. When I objected, loudly, he disappeared. We haven't seen him in twelve years.\"\n\nShe shrugged.\n\n\"What was, was, for both of us. Come in, meet my daughter, have a cup of coffee. I'll give you my decision before the second cup. I even have homemade pound cake.\"\n\nShe introduced me to her daughter Jane. She was studying nursing, with an eye towards being a nurse practitioner when she was done. Carrying on the family tradition.\n\nThe apartment was small, but neat as a pin and had a really homey feel. She made a good cup of coffee and the cake was excellent. I told her so. She was so pleased she gave me two slices to take home, even happier when I didn't even pretend to object.\n\nJane was preoccupied, worried about school.\n\n\"I have a way home, I just need to get there.\"\n\nHer class started in forty five minutes.\n\n\"How do you feel about old trucks?\" I asked, while her mother smiled. \"If your mom will accompany me, I'll take you.\"\n\nShe must have really wanted to get to class, because she started gathering her things.\n\n\"I'm sure your truck is just lovely,\" she said, while Debbie grinned.\n\nShe was impressed, I could tell. Debbie didn't seem to mind in the least sitting close to me. I quietly said a prayer in praise of bench seats. I was disappointed when Jane got out and she moved over.\n\nI stopped in front of her apartment. She sat for a minute before reaching over and giving me a nice kiss on the cheek.\n\n\"Friday. Six o'clock. I really like seafood.\" And then she slid out of the seat and almost ran into her apartment.\n\nI grinned all the way home.\n\n.................................................\n\nI went into work the next day, more to avoid having my accident written up as lost time than anything else. I stayed until lunch, and then took the rest of the day off. It occurred to me we hadn't exchanged numbers, so I went by on the off chance she was there. She wasn't, but Jane was. She was outside, her head under the hood of a car.\n\n\"You don't strike me as a mechanic,\" I said.\n\nShe didn't hear me coming and jumped, banging her head. That sent her into a cussing fit. Then she realized who I was and went bright red.\n\n\"What do you want?\" she said with an accusing tone.\n\n\"I didn't get your mothers' phone number. We have a date Friday, I wanted to check and see if the restaurant I picked would be all right with her. Here. Ask her to call.\"\n\nI handed her my business card. It also had my private numbers on it. She looked it over.\n\n\"Maintenance manager, huh? Know anything about cars?\"\n\nI just grinned.\n\n\"Let me have a look.\"\n\nBy the time Debbie got off I had it fixed. A broken belt. They had killed the battery but I jumped it off, had Jane drive it around awhile to charge it up. It was also two quarts low on oil, and the air filter was filthy. I replaced it and topped the oil off. I taught Jane how to check oil and transmission fluid levels, lecturing her the whole time.\n\nShe was appreciative, even hugged me.\n\n\"Have your mother call,\" I admonished, as she got in to drive away.\n\n\"Yes sir!\" she said, grinning, \"and thank you.\"\n\nI grinned back. \"Scoot. Don't make her wait.\"\n\nI got a very nice call. She thanked me profusely, to the point of embarrassing me. Insisting she pay, she asked what the cost was.\n\n\"I'll let you in on a personality flaw. I love to barter. It gives me a lot of satisfaction to avoid paying cash and make a deal that makes both parties satisfied. Let's do that on your car.\"\n\nHer voice got very cold.\n\n\"What do you want to trade for?\"\n\nOh shit. She had the wrong idea. I paused, then thought I'd have some fun.\n\n\"Something intimate, something I hope you don't do for a lot of men.\"\n\nI heard her sharp intake of breath. Before she could explode, I laughed.\n\n\"Here's the deal. I haven't had a real home cooked meal in almost two years. That's my price. And nothing fancy, meatloaf or a nice casserole, something along those lines. Dessert would be an unexpected bonus. Does that sound acceptable?\"\n\nThere was silence, I thought she may have hung up.\n\n\"I make killer fried chicken. Garlic mashed potatoes, steamed broccoli good for sides?\"\n\n\"My mouth is already watering. Name the time.\"\n\nI could feel her smile.\n\n\"We'll decide Friday. How do you feel about chocolate pie?\"\n\n\"Hold on, I'm getting light headed. I haven't had a good chocolate pie in years.\"\n\n...............................................\n\nI looked at myself in the mirror. I had no illusions, knowing what I looked like. A little belly, probably fifteen pounds overweight. Still, I was in pretty good shape, being a hands on manager. I had scars all over both arms, from working with equipment and being pretty clumsy when I was young. \n\nI was bald and kept my head shaved. No facial hair. I had been generously described as having a rugged look. And I was terribly near sighted so I wore glasses. You wouldn't find me in a contest for Prince Charming lookalikes.\n\nStill, I made an effort. Suit, tie, polished shoes. I even drove my car, leaving the truck in the garage.\n\nI thought about her on the way over. She was no beauty queen. I was pretty sure she'd never see forty five again. She had the pear shape most women get with age. Maybe thirty pounds overweight, but it had settled well. \n\nStill, she was attractive, in an older soccer mom kind of way. And there was something about her smile that made me feel warm all over, and an inner beauty that shone through.\n\nShe opened the door, took one look at me, squeaked, and ran into her bedroom. I was standing at the door trying to decide whether to leave of not when Jane came out, smiling.\n\n\"Please, come in. You'll have to excuse my mother, she just realized she was under dressed for your night out. She'll be here in a minute. Sit. Can I get you anything? Water, soda, beer?\"\n\nI sat, uncomfortably. I had the feeling she was amused.\n\n\"No, but thanks. I haven't had a beer in almost ten years.\"\n\nShe looked at me oddly.\n\n\"Have a problem with alcohol?\"\n\nI flushed. \"Yes, I don't like the way it tastes. Other than that, no, no problem.\"\n\n\"Mom is gonna love that. Her last beau liked to indulge a bit too much. One of the many reasons they don't see each other any more.\"\n\nBefore it could get any more awkward Debbie came back out. She was wearing a burgundy dress, high neckline, two inches below the knee. I thought she looked sensational.\n\n\"You look very nice.\" I said, meaning every words. She colored while Jane giggled.\n\n\"I had to change\" she admitted, \"it's been a long time since I was out with a man in a suit.\"\n\nJane gushed, trying to ease the tension.\n\n\"I think you look very nice. You too, mom. You'll turn heads at the restaurant.\"\n\nI took it as a cue to go, so I offered Debbie my arm. She stopped when she got outside, looking for the truck. I grinned for the first time that night.\n\n\"Surely you didn't think I'd dress up in a suit and drive my old truck? Let me get the door.\"\n\nI had driven my little Lincoln, pearl gray with a darker gray leather interior. It was ten years old, but I kept it spotless.\n\nWe went to the most popular seafood place in town. Debbie seemed uncomfortable when she looked at the prices.\n\n\"We could go somewhere else...\"\n\nI shut her down.\n\n\"This place is where I wanted to take you. Do not worry about the cost, and if I think you're not ordering what you really want, I'll change it to the most expensive thing on the menu. Do you understand? I don't eat out often, so I tend to go for the better places. Now let's order.\"\n\nWe both ended up with seafood platters, mine large, hers small. We had to get a doggie bag because there was so much left over.\n\nI told her about my life, she told me about hers. Her ex left her saddled with debt she was just now getting out from under. She had lost her house, I could tell by the tone of her voice that had hurt her terribly. She had tears in her eyes when she described her flower beds and bird feeders.\n\nI talked about my wife leaving me for adventure and exciting times. She had not been careful with her money, and the expensive cruises she took every year came to a halt. I talked about my little house, about my hobbies of gardening and restoring old cars. I rented space in an old garage to work on them until they were far enough along to take them home.\n\nShe seemed shocked when I told her it was the first date I had been on in two years.\n\n\"Why?\" she asked, full of curiosity.\n\nI shrugged.\n\n\"Haven't wanted to. You're the first woman I've met in a long time that interested me.\"\n\nI think she smiled a little, thanking me for the honor.\n\nWe talked after I got her home, about everything and nothing, as we sipped coffee and I destroyed two pieces of cake. At eleven I got up to leave. She walked me to the door, and we shared a very nice kiss. No tongue wrestling, no groping or grinding, just a simple kiss. It still was the best thing I'd felt in ages.\n\nAfter maybe twenty seconds we both pulled back, a little embarrassed. She squeezed my hand.\n\n\"I usually serve dinner around six thirty. Wednesday good?\"\n\n\"For a home cooked meal I would make it good. Wednesday will be just fine. Should I bring anything?\"\n\n\"A good appetite. I hate to see food wasted.\"\n\nLooking around my little house when I got home, I noticed for the first time how empty it seemed. I was thinking of her as I drifted off.\n\n...............................................\n\nJane answered the door with her usual grin.\n\n\"She took today off, and has been cooking since three. You better appreciate this.\"\n\n\"Judging by the smell, I'm sure I will. What should I do with these?\"\n\nI hated the thought of showing up empty handed, so I had stopped and bought a bunch of flowers on the way over.\n\n\"Why, give them to Mom, of course. How long has it been since you wooed a woman?\"\n\nI thought the choice of the word 'woo' was charmingly oldfashioned.\n\n\"Probably since before you were born, and I wasn't really good at it then.\"\n\nHer grin got bigger.\n\n\"Don't worry about it. I'll give you a nudge now and then, to keep you on the right track. This is the happiest I've seen her in a long time.\"\n\nShe suddenly got serious.\n\n\"Don't hurt her, okay? Life hasn't been too kind to us in a long time.\"\n\nI was about to answered when Debbie came bustling out of the kitchen.\n\n\"Jane, who was at the...\"\n\nShe stopped when she saw me, and the flowers. I held them out.\n\n\"Hello, Debbie. I thought you might like these.\"\n\nHer hands actually shook a little as she took them. Seems it had been a long time since anyone had gotten her flowers. I made a note to plant some flowers next spring.\n\n\"These are lovely,\" she said, passing them to Jane. \"Honey,put these in some water, please. I have to get back to the kitchen. Supper in twenty.\"\n\nI think she surprised us all when she stood on tiptoe and kissed my cheek. Then she fled back into the kitchen.\n\nJane and I talked. She was twenty, just starting on her second year of school. She was focused on her goal.\n\n\"Luckily, it doesn't cost much at the community college level, but it will go up substantially when I transfer. I'm hoping to get a scholarship. It'll be really hard if I don't\"\n\nDebbie called us to the table before we could continue.\n\nThe food was excellent, as I expected. We talked about everyday things, our interests, our families. I told them about my older sisters, and their family, all girls in both instances. They had no close family locally, and didn't go see them often. I don't think it bothered them much. Before the night was over, we had a date for a movie Saturday. I hadn't gone to a movie in ten years.",
        "..............................................\n\nI let her pick, so naturally we went to see a sappy romantic piece. I didn't really mind, because she held my hand almost from the time we were seated. She had tears in her eyes at the end, sighed and leaned against me.\n\n\"I just love happily ever after, don't you?\"\n\nIf she'd said she wished it had turned into a slasher film halfway through and everybody got eaten by zombies, I would have still agreed. We went to a small Italian place she knew of and had pizza, boxing up the extra slices for Jane.\n\nShe asked me in.\n\n\"Jane's on a date, and I'm kind of nervous being alone. Do you mind?\"\n\nDuh.\n\nWe sat on the couch, sipping coffee, snuggling after a bit. She reached up and gave me a little kiss. I was right in the middle of giving her a big one when Jane got home. We had just enough time to separate. She took one look at our flushed faces and her mussed hair and giggled. She went into her room, telling us it would be easier for us to 'talk', but the fact she was there made us behave. Did get a nice goodbye kiss, and a date for the next Saturday. And supper on Wednesday.\n\nIt became a pattern, date on the weekend, supper on Wednesday. About every third time I took them out. Nothing fancy, a nice buffet restaurant or barbeque place. They seemed to enjoy being spoiled a bit.\n\nI really looked forward to seeing both of them. I missed family. In my mind things were sailing along quite smoothly. We were in our fifth month and hadn't gotten intimate yet, but we had come close. To me, it was long term. It hit me when I went to Sears to buy a new tool. I walked in the mall entrance on the opposite side, and passed one of those jewelry stores, and before I knew it I was looking at a display of engagement rings, wondering which style she would like.\n\nSteeling my resolve, I walked in, and before I knew what was happening, a young sales girl had talked me into a ring she said older women really liked. I bought it on the spot, after being assured if she said no or didn't like it I could return or exchange it. It was early March, and I thought I would surprise her, maybe have a June wedding. I read women really liked that.\n\nShe had gotten me to take her to church every Sunday. I wasn't much on organized religion, but she was serious about her faith. I have to say I actually enjoyed it, to the point of occasionally helping out at an odd fundraiser or remodel project. I even took to going to the mens' breakfast every other week.\n\nI was happy and I thought she was too.\n\n...............................................\n\nIt all fell apart the next Wednesday. We had just enjoyed a nice meal, and were enjoying dessert. I asked her what she'd like to do over the weekend.\n\nShe had an odd expression in her eye.\n\n\"I'm sorry, Frank, but I've already made other plans. One of the doctors at work wants me to go with him to some fundraiser at the Country Club, and I accepted.\"\n\nIt couldn't have hurt worse if she'd slapped me. The pound cake I had just enjoyed suddenly felt like it weighed a ton as heavily as it sat on my stomach.\n\nI know I stuttered when I spoke.\n\n\"Oh...Oh, all right then. Maybe another time.\"\n\nI made a few inane statements and left. Without a doubt I was hurt, but I hadn't said anything to make her think we owed each other fidelity. She hadn't made me any promises, and I hadn't asked. I guess I just assumed she felt the same for me as I did for her. Wasn't the first time I was wrong.\n\nSaturday I sat and brooded. I was mad at her, mad at myself, mad at the situation. Just plain mad. \n\nI've been told a time or two by about everyone who's ever known me I can be stubborn. She wanted a doctor? Fine. She could have him.\n\nI didn't go to church Sunday. Nor did I call or show up Wednesday. Thursday she called me, I took one look at the number and let it go to voicemail. Deleted the three messages on the home phone without listening to them.\n\nI didn't talk to her on Friday either. She called and left a message wondering how to dress for Saturday for our date. I waited until I knew she was at work to leave her a message that I had made plans for this weekend and didn't remember asking her out. Sorry if I led her to believe otherwise.\n\nI packed up my truck and went up to the mountains. Trout fishing always relaxed me, but this time I couldn't concentrate. I caught two fish in ten hours, both too small to keep. Ended up grilling a hot dog for supper. Sat watching my fire later, wondering how I could ever compete with a doctor. Sighing, I rolled into my sleeping bag, glad I had bought the double height air mattress. Surprisingly, I slept really well.\n\nMonday afternoon I was greeted by a furious Jane when I got home.\n\n\"Where the hell have you been? Mom has cried for most of the weekend, over you.\"\n\nI was still pretty pissed.\n\n\"Why don't you go back to your mom and ask her to get her doctor over to console her. Now, if you'll excuse me, I have things to do.\"\n\nShe ignored me, following right into my living room.\n\n\"This is what all this is about? You idiot. She didn't want to go. She wanted you to tell her not to, that you wanted her exclusively. She wanted to move you forward to something more permanent.\"\n\nI stopped her in the middle of her rant.\n\n\"Did she go out with the doctor?\"\n\nJane hesitated for a second.\n\n\"Yes she did. And if it makes any difference, she had a terrible time. She only wanted to make you a little jealous, dummy.\"\n\n\"Go back to her and tell her it worked. And tell her I'm too old, too dumb, and too set in my ways to play teenage games. All she had to do was ask, and I would have told her I wanted her all to myself. If it makes any difference, I was making long range plans. Together forever plans. But if she can pull stuff like this, what will she do down the road when things don't go exactly her way or if I make her angry over some little thing? I don't have that much of my life left, and be damned if I'll spend it like that.\"\n\nJane stood openmouthed during my little rant.\n\n\"Oh my God! You love her, don't you? News flash, idiot, I think she loves you more. Please Frank, talk to her. Get over this, and I'm sure she'll make you a very happy man. Promise me you won't go anywhere. I'm going home and tell her about our talk. Please, Frank, if you care for her at all, answer the phone when she calls. Please?\"\n\nI looked at her. She seemed so earnest.\n\n\"I don't have any plans for this afternoon or evening. I'll be available to answer the phone.\"\n\nShe jumped int my arms, kissed me, and flew out of the driveway.\n\nAn hour later I was mowing my grass. I had set my phone to vibrate to make sure I didn't miss a call. It never went off. Oh well. I guess Jane was mistaken. Maybe she didn't want to talk after all.\n\nI made a round and as I turned I saw her car come flying into my drive. She was going so fast she didn't get stopped until she was twenty feet into my grass. Looked like I had to do a little replanting.\n\nLuckily she put it in park, because she was out and moving pretty fast. I had time to turn off the mower and stand up before she jumped on me, causing us both to fall. She was crying pretty hard.\n\nI couldn't really understand what she was saying. \"Sorry,\" and \"forgive,\" came up a couple of times in her babbling. I shut her up the only way I could think of. I kissed her.\n\nTo say she kissed me back would be an understatement. I think she was trying to devour my face.\n\nI finally got her calmed down enough to let us get up and lead her to the porch swing. She was a true mess, hair disarrayed, lipstick smeared, loose grass all over her clothes. I wished I had thought to take a picture. Then again, I'm sure I looked a mess too. \n\nOnce I got her arranged, I started our conversation.\n\n\"So. Jane said you wanted to talk? About what?\"\n\nShe started crying again. This time I just let her cry it out. I may have cuddled her, a little. I really don't remember. Finally she settled.\n\n\"I need to apologize, Frank. What I did was childish, and looking back, downright stupid. I didn't want to go on that date. I wanted you to tell me not to, that I belonged to you. Looking back, I realize I did it all wrong. I should have told you he asked, but since I was seeing you I didn't want to answer until we talked. That would have given us both a way to state our feelings. Please, please, forgive me. I was afraid to say it before, but I love you.\"\n\nShe looked so pitiful and yet full of hope at the same time I couldn't stand it.\n\n\"Next time you even attempt to do something that stupid, I'll take you over my knee. You belong to me. Exclusively. Do you understand? And just so you know, I love you too.\"\n\nThat led to another round of crying and kissing. When she calmed down, she made me a solemn promise that if she came anywhere near being that stupid again, she'd supply the hairbrush.\n\nShe finally settled down, snuggled so tight she was almost on top of me. Timidly, she asked what was really on her mind.\n\n\"Honey, Jane hinted around you had something serious you had to say to me. Can you tell me what it was?\"\n\nI didn't answer. I got up and went to the truck and opened the passenger door.\n\n\"Get your butt in the truck, woman. I have something to show you.\"\n\nShe almost ran, scrambling into the truck. I didn't have to, but I buckled her seat belt and gave her a kiss.\n\nWe drove in silence for about twenty minutes, before I pulled into a drive and got out. I unlocked the gate and drove through.\n\nIt was a long, twisting drive, between thirteen stately old pecan trees. At one time there were fourteen, but one succumbed to a lightning strike. The drive ended in a huge yard. She could see a barn and several outbuilding a bit farther on, but no house. I opened the truck and handed her out.\n\n\"Where are we?\" \n\nHer eyes seemed to shine. I ignored her.\n\n\"Twelve acres\" I said, waving my arm around. \"Five wooded, three in pasture, the rest field and yard. The house used to stand right here before vandals burned it down. Still has the well and septic tank hooked up.\"\n\n\"Who owns it?\" She asked, hope shining in her eyes.\n\n\"We do. Or at least we will when we get married. I bought it a year ago, but couldn't see putting a house on it just for me. And I'm smart enough to let you pick the kind of house you want. But first...\" I got down on my knee, no mean feat for some one my age, opening the box I had put in my pocket, \"you have to say yes. Debbie Martin, will you marry me?\"\n\nShe went pale. I seriously thought she was going to faint, but she pulled herself together, screamed \"YES\" and launched herself at me, again. For someone our age, we were spending a lot of time rolling on the ground kissing.\n\n................................................\n\nShe held my hand all the way back to the house. She went into the bathroom and I heard her on the phone. Later I heard the shower start up. Just before she got in, she cracked open the door and called out.\n\n\"Honey, will you wash my back?\"\n\nI couldn't get into the bathroom fast enough.\n\nLike I said before, she wasn't a beauty queen. But she was beautiful to me. She managed to get me into the shower with her. We soaped each other, getting familiar physically until the water started getting cold.\n\nI don't know how long it had been for Debbie, but I hadn't been with a woman in two years. My ex was obsessed with her weight, and remained thin to the point of skinny all our married lives. Debbie was very well padded, soft, yielding, a delight to touch. And I touched a lot. \n\nWe made love, we didn't have sex. Words can't describe it, so I'm not even going to try.\n\nAs we cuddled, she started crying again. Boy, I hoped this wasn't going to be permanent. I may be a little slow, but I was smart enough to hold her, whispering words of love, until she cried it out.\n\n................................................\n\nShe didn't leave until the next morning. When my alarm went off I was alone. It was very disappointing. My smile would have illuminated a large city when I found her in the kitchen, wearing one of my tees, cooking breakfast.\n\n\"Morning, love\" was all she said, as she sat a plate in front of me. Of course the kiss she gave me said all I needed to hear.\n\nAs I ate she kept up a constant chatter. Nerves, I guess. Before I left she made me give her a house key.\n\n\"I need to shop. You don't keep much in the way of groceries around here. How can I feed you with a bare pantry?\"\n\nI think she went into shock when I asked her to wait so I could go with her.\n\n\"Okay honey. I called in, took two vacation days. You need to let me drive your truck today so I can move some of my stuff, all right? And this is important, I need to keep paying the rent on the apartment, Jane can't afford it. Do you mind?\"\n\nApparently she was moving in. I don't think I could have smiled any wider.\n\n\"No, I don't mind. I'll drive the Lincoln. Love you, babe. Gotta go, or I'll be late.\"\n\nThe goodbye kiss was so long I ended up being ten minutes late anyway.\n\n.................................................\n\nThat afternoon we went grocery shopping. Such a simple mundane thing, but it filled me with great joy. I was never a picky eater, so I went along with pretty much everything. The bill was over two hundred dollars. Apparently I was out of everything. She was fumbling with her debit card when I stopped her.\n\n\"Here\" I said giving her mine. \"We need to go down to the bank so I can add you to the account. Luckily, they're open on Saturday morning. We'll go then.\"\n\nDamn it, she started crying again. Over dinner she brought up closing her accounts and combining with me. She was surprised when I told her no.\n\n\"Not now, honey. Right now you need to focus on Jane and her education. And I don't want to pay her rent forever. When we go house shopping, make sure it's at least a three bedroom. And a plan where the master bedroom is on the opposite end of the house would be a good idea, give a little privacy to all of us.\"\n\nShe was crying again. Maybe I needed to stop talking.\n\nJane came charging in right after we had cleaned the kitchen. She grabbed me and gave me a quick kiss.\n\n\"Hi, Dad. Any supper left?\"\n\nShe said it like she had been saying it to me her whole life. It affected me greatly\n\n\"Maybe a little. You need to show up on time if you want it hot.\"\n\nAnd just like that, we were a family.\n\n................................................. \n\nIt was supposed to be a small, intimate marriage, but when the reverend announced it at the end of his service, it got away from us pretty fast. She had been a member since she had moved here, and nearly everyone loved her. The ladies of the church took over and towed us along. The church was filled to the rafters with our friends, my family, and most of the congregation.\n\nIt was a short reception, for us. We left while the party was in full swing, to catch the boat for our honeymoon. No sandy beaches and hot locations, we were going to Alaska. It was her choice. Her first honeymoon was a beach trip. So was mine. We wanted something fresh.\n\nWe enjoyed it, when we came out of our room. Even at our age, a honeymoon is still a honeymoon. \n\nWhen we got home we went house shopping. I had a friend who worked for a company building modular houses, and I was impressed with his. I suggested it to Debbie, and we weighed the pros and cons of modular versus stick built, and modular won.\n\nDebbie asked me what I most wanted in a house.\n\n\"To be able to live in it with you,\" was all the answer I had, and apparently all I needed to say. Soon she and Jane were visiting local dealers, comparing companies, until she found the one she wanted. Three bedrooms, seventeen hundred square feet. \n\nShe pulled me along to a model, and I was impressed. We started talking price, and I soon decided I didn't like the salesman. He was too busy telling us what we needed to listen to what we wanted. I politely asked for the sales manager.\n\n\"I'm going to save us a bunch of time. We want this model, in the colors my wife chooses. Tell me what your price is. If it's in line with your competitors, we'll start the paperwork. I am not tying up our land in the deal. I will probably put down at least sixty per cent. Give me a good price, a decent interest rate, and we'll have a deal. And[I pointed at another salesman]I want him to handle us from here on out.\"\n\nWith that kind of a down payment they were all over us. Deb and Jane picked the siding, shingle, and shutter color. She talked them into upgrading the master bath at no extra cost, including a large whirlpool bathtub.\n\n\"For our aching muscles\" she said. I looked at the tub, imagined us in it together, and had a good idea which muscle would be aching.\n\nShe seemed shocked when I told her no to a prenupt. She thought I would want one since we were using up most of my savings to get the house.\n\n\"Have you already forgotten our wedding vows?\"\n\nShe looked confused.\n\n\"Remember the part about 'all my worldly goods I thee endow'? I don't know about you, but I was serious.\"\n\nI was watching her pretty close. A good thing, or we would have ended up rolling around on the ground again. \n\n.................................................\n\nWe settled into married life pretty easily. Neither of us were demanding. We didn't fight for power or play games. If she was better at things, she took the lead, and I did the same. She took care of the house. I took care of the cars, the yard, all the outside things. Anything that fell between we shared.\n\nI gave up my rented space at the garage and fixed up one of the outbuildings as a workshop. I also kept the barn in good shape, never knowing when I might need it.\n\nThe lease on her old apartment ran out, and Jane moved in with us. It was a slight adjustment, but we knew it wouldn't be permanent.\n\nShe had graduated and was a registered nurse now. She needed to get a masters degree to realize her dream of being a nurse practitioner, if she could find the money. She was in line for a partial scholarship, but it would cover less than half. She considered taking a year off and working full time to save money, but the catch was if she did there was no guarantee the scholarship would still be there.\n\nI had bought a 1970 model Chevrolet pickup pretty cheap. I had rebuilt the engine, the body work was completed, all it needed was painting, something I couldn't do.\n\nI sat them down at the kitchen table on a Saturday morning. It was where we made most of our big decisions.\n\n\"I've thought about this a good bit. I put my fist daughter through college. I can't see slighting my second. Jane, this is for you.\"\n\nI gave her a check. Twenty eight thousand dollars.\n\n\"Where did this come from?\"\n\nHder voice was trembling while Debbie looked on in shock.\n\n\"I sold the Studebaker. I've got the Chevy, and it will be far more practical. It was time, and the money will be put to good use. Between this and the scholarship, you can focus on your studies. We'll keep gas in your car, make sure you have money for your needs. All you need to do is graduate. That, and we expect free health care.\"\n\nI said the last with a grin. I don't know who was more shocked, Jane or her mom. Then the tears started. After that came the hugs. Later came the loving from my wife.\n\n\"You didn't have to do that, you know.\" She whispered it into my ear as we lay resting.\n\n\"Yes I did. I never had any biological kids, and I always wanted a large family. For a long time I thought it would just be Amy. Then you gave me Jane. I never got to help raise her, this is the only way I could think of to catch up. I probably should have talked this over with you first, but you would have just tried to talk me out of it. She deserves this honey. Be happy for her.\"\n\nShe snuggled tighter.\n\n\"I am. I'm also happy for me. I don't know what I did to deserve you. I think all the suffering and hardship I endured before you was a test, to make me appreciate what you've given me. I made an oath to God and myself that I would always be worthy of your love.\"",
        "Tears were in my eyes now. I hugged her tighter.\n\n\"Hush now. I'm the one that got smiled on. Now go to sleep. There's a lot I want to get done tomorrow.\"\n\nHer hand went South.\n\n\"You're going to sleep in tomorrow, because I plan on keeping you up a little longer.\"\n\nWow. Twice in one night. We hadn't done that since six months after our honeymoon.\n\n...............................................\n\nI planted a garden, something I had always wanted to do. Beans, corn, tomatoes, cucumbers, squash. Debbie wasn't really interested until things were ready to harvest. Then she started realizing the possibilities, which led to her taking canning classes through the local extension office and shopping for a freezer. We had so much we gave some away, endearing us to the neighbors and family.\n\nIt seemed a waste to let our field lie idle, and I dragged Debbie along to a small acreage seminar. We were amazed at the possibilities.\n\nI found an old Ford 8N tractor that needed a little work and rebuilt it over the winter. We scrounged want ads and auctions until we had enough equipment, and that spring we broke ground. She wasn't as committed as I was, but she enjoyed driving the tractor.\n\nThen again, she had her own interests. She had one of the bedrooms finished without carpet, opting for a tiled floor. She made it into a sewing room. I teased her about her Woman Cave, but she was an excellent seamstress. Her specialty was quilts.\n\nThey weren't just quilts, they were works of art in fabric. Most were traditional patterns, but occasionally she did something that stood out. She belonged to a quilters guild, and regularly won at shows. I thought it was just fun until I found out she could get over three hundred dollars for some of her creations.\n\nIn fact, a quilt bonded my first daughter Amy to her. She had been at the wedding, and they got along. She had married. I didn't really like him that much, but he seemed to make her happy. I really like my grandson, though. He was named for me and his father. He was two years old and a bundle of energy. We got to keep him about once a month while they enjoyed adult time. I was a little worried about Debbie, but she adored little Frank, and he followed her around like a puppy.\n\nShe seemed nervous. Amy didn't know about the quilts, and she had made one for her, and one for the baby.\n\n\"Amy, can I show you something?\"\n\n\"Sure, Debbie. What has Dad grown this time?\"\n\nShe was laughing. I had gotten into growing exotic vegetables and fruits.\n\nShe was speechless when Debbie unrolled the first quilt. An Ohio Star pattern, bright colors standing out from a muted background. She laughed when she showed her the kid's quilt, sewn with Lego characters, one of little Frank's favorites. When she understood Debbie wanted to give them to her, she broke down and cried. They hugged and Debbie started crying. I took the baby outside to give them a moment.\n\nWhen we got back inside they had calmed down, and were in an animated discussion over quilts. Seems I had just been replaced as a companion for quilt shows. \n\nJane came in just then, and the conversation started all over again. I left the baby and went outside to work on something, I just wasn't sure what just yet. Jane found me in the barn.\n\n\"I like her\" she said. \"I wish I had met her when I was younger, I could have used a big sister quite a few times.\"\n\nShe didn't know it, but Amy had followed her to tell me goodbye.\n\nShe felt her hug her from behind.\n\n\"We'll just have make up for lost time then, all right little sis?\"\n\nI swear to God, if they started crying I was going out into the woods.\n\n................................................\n\nJane graduated. Almost top of the class. She had already lined up a position in a local office.\n\nWe planned a big celebration at the house. Her friends, my family. our friends. I caught Amy looking a little sad.\n\n\"What's up, punkin?\" I said, hugging her.\n\nShe sighed. \n\n\"I love this\" she said, waving her arms around at all the people gathered, \"I just wish Mom had an extended family to share things with.\"\n\n\"She still has friends and family. Surely she's not alone. I know she was dating that accountant, is he still around?\"\n\n\"No, they didn't last long. I don't think she wants a long term relationship. I think she's afraid she'll do to them what she did to you. You know it drives her crazy sometimes, trying to figure out what she was looking for. She spends a lot of time alone.\"\n\nI was surprised. Since I had Debbie, I hardly thought of her any more, just a snippet now and then from Amy. It was like that life belonged to someone else, or I had seen it on a tv show.\n\nI thought about it a lot. Talked it over with Debbie. We were having a Fourth of July cookout soon, so I took a chance.\n\nTo say she was surprised to see me at her door would not be overstating the obvious.\n\n\"Frank! Is something wrong? Is it Amy?\"\n\nShe looked great. Still skinny, still obsessed with her weight. She was a blond now. It looked good on her.\n\n\"Calm down, Kim. Nothing is wrong. Amy is just fine. I wanted to talk to you. May I come in?\"\n\nShe shook herself.\n\n\"Sorry. Please come in.\"\n\nShe gave me a cup of coffee. I noticed it was still terrible, she never did learn to make it right.\n\n\"I'm gonna come right out with it. Deb and I are having a cookout in three weeks, a Fourth of July celebration. Amy and most of my family will be there. We want you to come.\"\n\n\"Why?\"\n\n\"Because you're Amy's mother. Because most of my family still likes you. I don't like what you did to me, Kim. It broke my heart. But you never lied to me, you never slipped around, and when you made your decision you looked me in the eye when you told me. I can respect that. The past is the past. Deb and I, and yes I talked to her before I came here, want you to be part of the family again. I'm firmly committed to her, we can never be more than friends, and that's all I'm offering. Think about it.\"\n\nShe started crying. I think I'm going to go into business. Maybe do an instructional video. \"How To Make A Woman Cry, In Three Easy Lessons\". I'll make a fortune.\n\nWhen she stopped, she thanked me, said she'd be happy to attend, and kissed my cheek.\n\n\"I was a fool, Frank. Thank you.\"\n\n................................................\n\nShe came out with Amy and her family. She wanted to hang back, but Amy had her by the hand, pulling her along.\n\nMy oldest sister came up. She was retired now, had four grandchildren from her two daughters. They were scampering about with the other kids. She put her hands on her hips and looked her over. Kim looked like she wanted to run away.\n\n\"So, a blonde, huh? That would explain a lot. Give me a hug, you skinny bitch.\" She was always known for her, uh, colorful language.\n\n\"Mom!\" squealed Lori, \"the kids can hear you. I'm having a tough time now as it is. Chasity asked me yesterday what a dumbass was. Behave.\"\n\nJune just laughed and hugged Kim.\n\n\"Bring her over, I'll introduce her to her aunt. Then she'll know.\"\n\nAmy couldn't help it and started laughing. Soon half the family was giggling.\n\nThere was a moment of silence when Kim and Debbie crossed paths, but Debbie took her by the hand and led her over to a picnic table away from everyone. They talked for about fifteen minutes, and when they got up they hugged. You could almost hear everyone let out their breath.\n\n................................................\n\nSo now, instead of Amy having separate celebrations with me and her mother, she just drags Kim along and we have it just once. Debbie hadn't said much about her, but I came in one afternoon from my vegetable bed to see her, Kim, Amy, and Jane in her sewing room, tacking a quilt together, chattering comfortably. It felt so good seeing my family get along I went back out, so I didn't spoil the moment.\n\nI had two acres under cultivation. It doesn't sound like much, but it's a lot for one or two people to handle. Debbie complained a couple of times about the time it took away from her sewing, but when I handed her the eight thousand we had made over the course of the season, she never said another word. She turned around and surprised me with a deposit slip for forty five hundred, the years' total from her quilt sales. We paid the house off five years early.\n\n...............................................\n\nThe next year brought us a bad scare. I didn't feel particular keen, and went to see Jane in her office. She ran some tests and told me it would be a few days.\n\nShe called me, crying so bad I couldn't understand her. Finally one of the doctors took the phone.\n\n\"Frank, you need to come in. We've found something on the tests.\"\n\nLung cancer.\n\nTwo of the scariest words I had ever heard. I wondered where it came from, I had never smoked a day in my life. They think it might have been caused by some of the chemicals I was around when I was young. Luckily they caught it early.\n\nI went into the hospital with a chorus of crying females. Debbie, Amy, Jane, my sisters, even Kim.\n\nShe gripped my hand tightly.\n\n\"Don't you dare die, asshole. Debbie would never make it without you.\"\n\nOne week later I went home, missing a third of my right lung. Subsequent tests all came back negative. I felt smothered from female attention for a long time.\n\nIt took a year to recover fully. I thought I wouldn't get to work my vegetable patch, but the whole family pitched in and it was even bigger than before. In thanks, we took the money, eleven thousand, and took the whole family on vacation.\n\nWe all went to Florida for two weeks. Me, Debbie, Amy, her husband Jack, Jane and her new husband Mark. Plus Kim and her new husband Jeremy. He was really nervous when he first met the family, but gradually relaxed, and a good time was had by all.\n\n................................................\n\nI don't want you to get the wrong idea. If you put two people together for any length of time they're going to disagree on something. They were few and far between, but we fussed. Some were biggies. But we never went for a personal attack, and we always talked it out later.\n\nEvery once in a while she get wound up, point at a plaque on the wall, and say \"Because I'm the queen! That's why.\"\n\nUsually after that she would break up giggling, and the fuss would be over.\n\nThe plaque read: \"Queen Debbie 1, ruler of this doublewide and of all its' minions\".\n\nIt was a joke that started when a country singer had a hit, talking about his life and his loving wife, the queen of his doublewide. Amy heard it one day and broke up laughing.\n\n\"He's talking about you, Debbie. You are definitely the queen of this doublewide!\"\n\nHer birthday was the next week, and Amy had the plaque made as a gag gift. Debbie loved it so much she hung it prominently on the living room wall. We all agreed it was hilarious, and dead on.\n\n................................................\n\nI woke up to find little Frank, six now, tugging on my sleeve.\n\n\"Wake up, Pop. Time for breakfast.\"\n\nI got up, stumbling to the kitchen. Kirsten, my thirteen year old great niece, was mixing up pancake batter. Allie, eleven, another great niece, was breaking eggs into a bowl. Nine year old Amber was was setting the table, while six year old Julie was trying to help. Did I mention my family ran to girls? I was babysitting them all while moms and grandmoms shopped.\n\nThe older girls spent the night in Jane's old room. Julie and Frank slept on the inflatable air mattress in the sewing room. They were well rested and eager to start their day.\n\nI helped, and soon they were eating, chattering happily about what was going to happen after breakfast. \n\nIt was another family tradition that had started three years ago with Kirsten and Allie. I was babysitting them on weekend, and they were helping me pick up pecans for their moms and their friends. Remember the pecan trees? That year was tremendous, pecan literally carpeted the ground. I had the county extension agent out to look at them. He said they were most likely a variety called Stewarts, and were probably about fifty years old.\n\nWe picked up way too many. I gave some away at work, and one lady told me they were going for five dollars a pound in the stores. Kirsten was ten, and wanted to make some money to buy Christmas presents on her own, and something clicked in my head. The next week we picked up five bushels. We then inspected them, threw out the bad ones, took my vegetable scales and separated them into one pound bags. I put a little ad in the local papers, listing them for two fifty a pound. We had over a hundred pounds. I thought she might make twenty or thirty dollars. They sold out in three hours. She paid me back for the ad, and still had two hundred forty dollars. People were asking if we would have some available the next week.\n\nWe had a gimmick. We sold out of a miniature buckboard I had built. It was pulled by Jenny, my Jennie.\n\nJennie was a female donkey. That was the common term for them, so that's what I called her. I got her when a friend of mine called who helped an animal rescue group. He wanted to put her up in my barn for a few days while they found her a home. She had been taken form a farm where she and all the other animals were abused pretty badly. Some died. She could hardly walk when he delivered her, and snapped at anyone who tried to get close to her.\n\nI fixed the fence after a few days so she could get out in the sun. It took her two days before she came out of the stall. I would make sure she had water and some occasional feed, pasturage is actually all a donkey needs. The feed and an occasional apple and carrot were treats. It was three months before she stopped trying to bite me if I got too close, another six before she would take an apple from my hand. In a year she would charge the fence when I came out, braying for a treat. \n\nI started putting a halter and a lead on her. Soon she would follow me around in the yard and garden. My friend told me she had been trained to pull a wagon, so I built one her size, for fun. When I called, she would grab her harness off the pegs in the barn and bring it to me. I used her to bring in the veggies as I harvested. Had to watch her around the carrots, but otherwise she didn't bother anything.\n\nI knew she would be fine when little Frank was four, and he wandered into the pasture when I wasn't looking. He was intent on making friends with Jennie. I saw him, and was running as fast as a fat old man could, calling out to Jenny, trying to keep her calm. She sniffed him pretty good. Satisfied that he smelled enough like me to do her no harm, she picked him up by the collar of his shirt, calmly walked over and deposited him in front of me.\n\nThe look in her eye seemed to say \"I don't babysit!\" as she turned her back and ambled over to her feed stand. She really liked Kirsten, who made it a point to fuss over her and give her treats every time she came out. I let her drive the buckboard the first time I hitched Jenny up, holding a long lead, just in case. I didn't need it. I taught Kirsten how to hitch her up, and every time the kids were there at the same time, she had to hitch her up for a ride. She seemed the natural choice when the pecan business came up.\n\nJenny was just the start of our animal collection. The garden attracted rodents, so I got a couple of cats for the barn. Debbie immediately started feeding them and soon had petted them to the point they wanted to stay in the house, pretty much destroying their usefulness as mousers. My friend brought me a dog in need of rescue. It was a Great Pyrenee, a huge dog known for his faithfulness and guarding abilities. He came in handy, keeping varmits away from the chickens Debbie had to have, a breed that laid colored eggs, usually pastel blues and greens. The kids loved gathering eggs.\n\nNext he brought me a female llama, that I immediately named Dolly. I was a little afraid of the interaction between Dolly and Jenny, but they seemed to hit it off, to the point where they slept in the same stall. Dolly didn't like Pete the dog, though, spitting on him every time he got too close. He learned to keep his distance. I was researching packs. I wanted to make one and bring her into the pecan business, another gimmick.\n\nSoon it was a tradition, and people would wait for us every year. As the other kids got older, it became a group effort, with each child getting a cut, usually depending on age. But unless they helped, they didn't get to sell. It taught them some valuable life lessons.\n\nThis was a particularly good year. Seven hundred pounds, picked up over three weekends.\n\nAllie was good at math, so she handled the money. Kirsten got the order together, very few bought just one pound. Amber would bag it, and Julie and Frank took turns delivering them. That way everyone worked, according to their talents and age. Jenny just stood and looked bored.\n\nThey sold six hundred pounds in four hours. I left them alone, but kept a close eye on them. These are troubled times, after all. When they were done, they had fifteen hundred dollars.\n\nKirsten got five, Allie got four, June got three, and the two small ones got a hundred fifty apiece. They were all very pleased. Since most of it was ones and fives, it looked like quite a lot, especially to six year old eyes.\n\nOf course, seven hundred pounds was probably less than a fourth of the output of thirteen healthy pecan trees. Deb and I talked about it, and set three trees aside for family and sales, and donated the rest to our church. They would show up two successive Saturdays, usually at least twenty. We made a big thing of it, furnishing sandwiches and drinks, and helping. Usually the men picked up while the women graded, getting rid of the bad ones. Again, they would be weighed into one pound bags and sold, the proceeds going to whatever project that needed the most help. On good years it would be close to a ton, on bad less than a thousand, but it still was a good bit.\n\n...............................................\n\nThe girls finally dragged back in. They looked thoroughly worn out. Looking at the minivan and the SUV they had taken, I could tell they were stuffed to the gills.\n\nFlopping on whatever furniture was available, they kicked off shoes, loosened clothing, and sighed or moaned, depending on age and stamina.\n\nNobody pretended to cook. I ordered pizza. Amy moaned about how much money she had spent, and little Frank crawled up into her lap.\n\n\"You can have my money, Mommy,\" he said, showing her his bag. A hundred fifty looks like a lot when it's all ones. She hugged him.\n\n\"Thanks baby. But I'm all right. This is your money. You earned it. Next week we'll go Christmas shopping and I'll let you spend some of it. Okay?\"\n\n\"Okay,\" he said happily, squirming off her lap to get a slice of pizza.\n\nSoon they started leaving. Another round of kissing cheeks, and they were gone, leaving me, Debbie, and the kids, who wanted to pick up more pecans in the morning and sell them in the afternoon. Everyone was pretty much worn out so we went to bed fairly early.\n\n..............................................\n\nSomething didn't feel right. It took me a minute to realize I was in bed alone. I got up, surprised to find a crying Debbie in the living room, looking at pictures of Jane as a child. I immediately suspected the worst.\n\n\"What's wrong? Are you sick?\"\n\nShe looked up at me and smiled.\n\n\"Not at all. Jane told me a secret today. We're going to be grandparents again in seven months. She told us in the van. We almost turned around and came back home.\"\n\nI hugged her, hard. I was very happy.\n\n\"Then why are you crying?\"\n\n\"Because Jane told Amy she was really sorry she had a boy before her[yes, it was a boy]because she had always sworn her first boy would be named for you. She and Amy hugged and whispered, then announced that could never be enough Franks in the world, so her son would also be Frank. They decided since Amy's Frank was oldest, he would always be known as Big Frank, Jane's would be forever known to the family as Little Frank. How does that make you feel, honey?\"",
        "I had my own tears now. I guess I had been in an estrogen driven environment for way too long.\n\n\"Humbled, and proud. Now come to bed. You have to help wrangle the kids tomorrow.\"\n\nShe reached up and kissed me before she rose.\n\n\"All right, but you're handling Jenny. I know she doesn't like me.\"\n\nI didn't follow her immediately. I checked on the kids, all snuggled down. I checked the doors, walking out the back, listening to the sounds of the night. I looked at the full moon, thinking. Without a doubt, I was the luckiest man alive. I got my dream. Not money. Not power. Just a loving wife and a large family that cared about each other. I sighed, locking the back door. I needed to get to bed. Kids and pecans wait for no man.\n\n...............................................\n\nWell there it is, another harmless bit of fluff. I hope you liked it. Thank you for investing the time to read it. As always vote if you like, and comment if want. Happy Holidays.\n\nQ. "
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/black-friday-4"
}