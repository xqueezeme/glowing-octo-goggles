{
    "title": "Boxing Day",
    "pages": [
        "Author's Note 1: I'm not sure how my original idea of a super sexy fuck fest in Vegas turned into this love story, but it did and I like it. This is an immensely personal story for me for many reasons, and I hope that you enjoy it. The story switches POV by character - you can tell by the chapter. If you've read any of my other stores, you know that music plays a big part in what I write. Hope you find a song that you like.\n\nAuthor's note 2: For Godzilla, who hit me with a knockout punch I barely saw coming, and I can't get up to meet the count. The pass program is over. :-( \n\nAuthor's note 3: Don't forget to comment and vote. Keep in mind that I'm an artist, and I'm sensitive about my shit! Love, cg74\n\n*\n\nChapter One - Alicia - Wednesday Afternoon part 1\n\n\"Alicia, Get your head in the game! Watch for the left!\"\n\nI can hear Max, my trainer, from the corner of the ring. He's right. My head isn't in the game. Let me pay attention before I -\n\n\"ALICIA! Start the count Joe! 2, 3, 4...\" \n\nI can't believe I let that bitch Karen knock me down. I'll never hear the end of it. She's never beaten me before. Max is rushing over, helping me to my feet. \n\n\"You alright? What's going on with you? It's not like you to lose focus!\"\n\n\"I'm fine Max. Sorry I didn't knock her out.\"\n\n\"Don't apologize. You'll get her next time. Why don't you do about 20 minutes of bag work and call it a day. See you next week.\"\n\nI take off my head gear, get out of the ring, and move over to the bag. Time to take out some frustrations. \n\nSome girls get Barbie dolls, books, and tea sets. I got plenty of those.\n\nI also got a world class boxing education, thanks to my dad and his brothers. By the time I was eight I could probably judge prize fights. I watched old fights like it was homework - Hagler, Leonard, Tyson, Ali, Duran, and the true undefeated champion Ricardo \"El Finito\" Lopez. \n\nBoxing kept me out of trouble and the bullies off my back. I kept it up all through high school and college, and I still get in the gym once a week. \n\nNow it's a stress reliever. And boy do I have a lot of stress. It seems like everything in my life has just gone to shit all at once, and no matter what I do, no matter how hard I punch, it's just not getting better. \n\nI square my shoulders, get light on my feet. Time to beat out my frustrations. Where do I even start?\n\nMy Grandma died. My world, and now she's gone. Still can't believe I can't call her up and hear her voice or talk to her about Sunday dinner. \n\nleft jab, feint, right cross...\n\nPrince died. Words can't explain what he means to me. May U Live 2C The Dawn.\n\nleft jab, right hook, right jab...\n\nThere's an idiot in the White House. The less said about that the better.\n\nright jab, right cross, left hook...\n\nMy dog died in my arms. My snuggle pup has gone to the rainbow bridge. \n\nright jab, feint, straight right, feint, left uppercut...\n\nSigh....\n\nI'm a happy person. I usually wake up singing. I usually dance all the time. I have great friends and family. I love my job. I'm married to a great guy. My bills are paid on time and we're doing quite well financially. By any stretch of the imagination I have it pretty good. Why can't I break out of this funk? \n\nI hit the showers and take a look at myself in the mirror while I get dressed - not bad, I guess. Nice caramel skin, cute hair, big breasts. Curvy. Not too small, not too big. Just right, as my husband says. Thinking of him makes me smile. \n\nSaying my goodbyes to Max, I make my way to my husband Jacob's office. We're lucky that we work at the same university - he's a law professor on the tenure track, and I work in educational advancement. For 10 years now we've been trying to get through this thing called life, and I wouldn't trade it for the world. \n\nI remember the first day I saw him. I was hanging out with my sorority sisters at a party, doing what we do, and here comes this tall nerdy white guy from London with black rimmed glasses, bald head, and a goatee. We all thought he was lost and was looking for the other party with the white girls, but no, he was right where he wanted to be. \n\nNo one can accuse me of being shy, so I went right up to him and asked him to dance. I can get down on the dance floor, so I knew that the white boy couldn't keep up. Jokes on me, because he danced my black ass off the floor! After that dance, we talked all night. Not only did that accent drive me crazy but he was also smart and funny. We had so much in common despite our differences. \n\nWe were inseparable from that moment on. Our first real date was at a drive in - to this day I can't tell you what movie we saw, but I'm sure the folks at the drive in got a show. White boy has game. \n\nWe got married two years later. It was a little rough with me in grad school and him in law school, but we made it. He became an American citizen (immigrants - we get the job done!), and we've been living in Atlanta ever since. No kids yet, but we're having fun trying. I just started seriously using ovulation kits to track my fertile times a few months ago, and so far no baby. Jake is having fun with the ovulation kits - he keeps better track than I do, especially since I've been feeling so down lately. It just hasn't been that important. \n\nI gotta do something to get out of this funk. But I have no idea what I can do. Something has to give, and soon. \n\nChapter Two - Jacob - Wednesday Afternoon part 2\n\n\"Is he on a call Shirley?\" I can hear my wife outside my office, talking to my admin. \n\n\"No Alicia, go right in. Would you let him know I'm going home? I'll see you later.\"\n\nMy wife is here. Time to go home. 10 years and she makes me smile every time I see her face. I start gathering my things. I'm glad we work together, because she drives me home. Still haven't mastered the whole driving on the right thing. \n\n\"Hello darling. Did you knock Karen out yet again?\" \n\n\"Not tonight baby. She got me.\" Alicia stretches out on my office sofa. This was a revelation. I arch an eyebrow. \n\n\"Karen beat you? That's never happened before. What's wrong?\"\n\n\"I don't know Jake.\" She sighed deeply, her face looking forlorn. \"I don't know what's wrong with me. I can't focus. I can't snap out of this, whatever this is.\" \n\nI look outside to make sure Shirley is truly gone and lock the door. I lift up my wife's legs and sit at the end of the sofa. I take off her shoes and massage her feet. \n\n\"Alicia, I love you. We'll get through this. It's just a rough patch. The big heavyweight fight is this Saturday. Let's invite some friends over and have a fight party. We haven't done that in a while.\" \n\n\"Mmmmmm...I love you too. That sounds like a good idea. I guess. I'm just so blah about everything. I'm sorry baby. Wait...what are you doing?\"\n\nMy hands have moved up from her feet, up her calves, and approaching her thighs. \n\n\"You know what I'm doing love.\" \n\nI push her legs up and kiss my way up her thighs, first the left, then the right. I'm glad she's wearing a dress, because that makes it easier to get to that pretty pussy. I raise her hips to remove her panties. \n\n\"I love how you keep it nice and shaved for me baby. So good.\" \n\nHer moans sound like jazz as I blow on her clit and feel her tremble. I lick her clit now, little licks and kisses and nibbles that have her twitching on my sofa. \n\n\"Jake...oh my god baby....that feels so good!\" She didn't like getting her pussy eaten before she met me. Now she loves coming on my tongue. The beard burn from my goatee makes the tender insides of her thighs shiver all around me. I take two fingers and enter her pussy deep as I continue to lick her clit. She's grabbing my head now; fingernails digging in my skin. I know she's close. \n\n\"Baby please....Jake, please...I can't....please...\"\n\nI curl my fingers in her pussy, pounding her now. Her hips raise up to meet my thrusts. She's so beautiful like this, all wanton and wild and mine. I move my lips from her clit and kiss her deeply. She likes the way she tastes as much as I do. \n\n\"Let go baby...come for me. Tell me who makes you feel like this.\"\n\n'JAKE!\" She screams my name as she climaxes. I feel her explode all over my fingers, which I promptly remove from her pussy and stick in my mouth. Damn she tastes good. \n\nAnd that's when I have my epiphany. I know how to cheer her up and get her out of this funk. Alicia has had a fantasy in her head for a while. It's time to make that fantasy a reality. I kiss her again. \n\n\"Are you okay my love? Did I fuck you stupid?\" She always gets a little loopy after she comes really hard. It's the most incredible thing to watch my PHD- having wife reduced to single syllables. \n\n\"Sleepy. Can't. Drive. Love. You.\" \n\n\"Why don't you take a little nap. I've got a couple more emails to send out and we can go. Give me 30 minutes, okay?\"\n\n\"Okay Jake. Love You.\" She curls up and in minutes she's snoring softly. \n\nI sit back behind my desk. Time to send some emails, make some calls, and call in some favors.\n\nChapter Three - Alicia- Thursday Morning part 1\n\nLast night was incredible. I went to my husband's office, he dined on my pussy, brought me home, fed me, and put me to bed. He had a sly smile on his face the entire time and kept looking at his phone. He's up to something. Probably planning the fight party for this weekend. I love that he's trying to cheer me up. \n\nBut it's time for work. Time to make the donuts. Do people say that anymore? \n\n\"Jake, you're already up? I thought we had another hour or so to get ready\" I was still in my pj's in our room. He was in the kitchen, dressed, and almost out the door.\n\n\"Yes Darling. I have go in early - something came up. Don't worry about driving me. I'll take MARTA. Lunch together?\"\n\n\"Okay honey. I'll see you at lunch. Have a good day!\"\n\n\"Will do. Oh, there's something in the kitchen for you when you get breakfast. See you later! Love you!\" \n\nAnd with that, he was out the door. Definitely up to something. \n\nI head to the kitchen and that's when I find it. On the breakfast bar was a crystal vase with the most beautiful arrangement of pink tea roses, stargazer lilies, and rainbow sorbet roses - all of my favorites. Next to the roses was a note from Jacob: \n\nMy Dearest Alicia, I love you more than life. It pains me that you aren't as happy as you can be, and I am sorry it's taken me so long to fix it. That changes today. As of right now I am in charge of every part of our weekend. Your job has been informed that you will not be in until Tuesday-no need to call. No need to check your work phone or work laptop- in fact, leave them in our home office. You won't need them. All you have to do is trust that I will take care of you and enjoy yourself. Don't call or text me for clues or anything else- no spoilers. The first part of your weekend begins at 10 AM. Eat a good breakfast, work out, take a shower and dress casually. And when I say I'm in charge of the weekend, I mean every single part. Do not touch yourself or come until I say you can. Trust and enjoy my love. See you soon, J\n\nDamn! What is he up to, and why am I so horny? I can't help but smile. \n\nI eat a quick breakfast, run three miles on the treadmill, and take a long hot shower. I dress in leggings, my purple \"Starfish and Coffee\" t-shirt, and my favorite kicks. At 10 AM the doorbell rings, and I open it to find a smartly dressed young man. \n\n\"Mrs. Alicia Cambridge? I'm Michael, and I was sent by Mr. Jacob Cambridge. He said to tell you to trust and enjoy yourself. Are you ready to begin your adventure?\" \n\nAnd with that I'm lead to a black Escalade. I step inside to more roses, a glass of champagne, and Jill Scott singing about long walks. I close my eyes and relax. I have no idea where I'm going, but I'm going to trust and enjoy myself. \n\nMichael winds his way through the Atlanta traffic until we come to a stop at Turning Heads Salon and Spa in Midtown. Turning Heads is always busy -I've known the owner, Rebecca, for years, and her clientele is the who's who of Atlanta. The parking lot is empty. \n\n\"We're here Mrs. Cambridge. I'll be waiting when you're done. Have fun!\"\n\nI enter the salon, and I'm rendered speechless. \n\nAnything that's not service related is covered in roses. It's so beautiful. One of my favorite bands, The Foreign Exchange, is playing on the speakers. \n\n\"Alicia! Hey Girl!\" Rebecca is all smiles as she hugs me out of my shock. \n\n\"Rebecca, what's all this? Where is everyone? This place should be packed!\" \n\n\"Girl, when Jacob Cambridge calls and asks for a favor, I listen. It's the least I can do to thank him for his help with my son's legal troubles last year. You are the client Alicia. We are here for you today. Jake said to tell you to trust and enjoy yourself.\" \n\nTrust and Enjoy Yourself. That seems to be the theme of the day. \n\nFor the next three hours Rebecca and her staff treat me like royalty. I get a massage, body treatments, a facial, a mani/pedi, and my eyebrows done. Rebecca herself does my hair in soft waves that she pulls up into a ponytail. I feel like a million strips of gold pressed latinum! Jake has thought of everything because he left a change of clothes here at the salon. I change into a sleeveless pink maxidress and sandals. He didn't leave me any panties, so I guess I'm going without. He knows I like it that way. There's also a packed suitcase with my things - hiking gear and shoes, little black dress and heels, a few casual things, wisps of lingerie, makeup and toiletries. So we're going somewhere, but where?\n\n\"Rebecca, do you know what Jake is up to? The suspense is killing me!\"\n\n\"Yes I do, and no I'm not telling you. That man told you to trust and enjoy yourself, and that's what you need to do. It's time for the next part of your adventure. Have fun Alicia. Can't wait to hear all about it!\" \n\nMichael's waiting and opens the door to the Escalade, and soon enough we're back in Atlanta traffic. Jake and I are supposed to meet for lunch today, but who knows where? \n\nI realize that we're leaving Midtown and headed towards Chamblee and the private airport. What the hell? The Escalade pulls right onto the tarmac in front of a huge Gulfstream with a pink carpet leading up to the stairs to the jet door. \n\n\"This is where I leave you Mrs. Cambridge. I hope you have a great weekend. Trust and enjoy yourself!\" \n\n\"Thanks Michael.\" \n\nThe door of the Escalade opens and there stands Jake, looking handsome in jeans, a black polo, and loafers. \n\n\"Hello beautiful. Looks like you had a good time at Rebecca's.\"\n\n\"Hey baby, but what's going on? How? This is crazy!\" I sputter out questions that he silences with a kiss. \n\n\"What did the note say honey?\" \n\n\"You were in charge of the weekend.\"\n\n\"And what else did the note say?\"\n\n\"Trust you and enjoy myself.\"\n\n\"Right. So are you ready to go then?\"\n\nI guess that's the end of that. I watch as Kevin hands my bag to the grounds crew and I make my way up the pink carpet, hand in hand with my husband. \n\n\"Oh my goodness! Jake this is incredible!\" The plane was decorated in tones of beige and gold, with plush leather seating everywhere. I saw a closed room at the back of the plane which I can only assume is the bedroom and bath area. And of course, roses were everywhere. \n\n\"Hello Mr. and Mrs. Cambridge. We'll be taking off shortly. We're expecting a smooth flight, so please take your seats and buckle up. Once we're at cruising altitude you can move around as much as you like. Hope you enjoy the flight\". The captain shook our hands and went to the cockpit as we took our seats. \n\n\"Jake, please tell me where we're going. Can I get a hint?\" \n\nHe hands me a white envelope. \"This is where we're going.\" \n\nI open the envelope, and I'm sure that I squeaked. \n\n\"This has been sold out forever! How did you get tickets? Do you still have both of your kidneys?\" He just smiled. \n\nIn the envelope were two tickets. We're going to Vegas. \n\nMarvin Coleman and Gregor Rustov were heavyweights with undefeated records. Their fight has been two years in the making as they made their way through all the mandatory challengers to meet in the ring on Saturday. \n\nIf styles make fights, this one had the potential to be a classic. Rustov is all brawler with a strong chin and a wicked left hook. Coleman is a counter and body puncher with a quick jab and devastating uppercuts. \n\nAnd on top of all of that, they hate each other.\n\nColeman is a man that was in trouble before he got his life together with boxing. He's a \"speak quietly and carry a big punch\" kinda fighter. A family man and church deacon, he stays out of the spotlight until it's time for his next fight. \n\nRustov, however, is all glitz and glam and swagger. He's loud and brash and loves the celebrity that comes with being a big time fighter. He stays in trouble with the law and recently crashed his $100,000 Maserati. \n\nAt the televised contract signing for the fight, Rustov informed Coleman that he had just (his words) \"fed your sister all of my big Russian cock and now she loves borscht and meatballs instead of barbecue and collard greens.\" \n\nNeedless to say, that did not go over well with Coleman's camp, and the punches, chairs, and water bottles flew. The press ate it up, however, and the lead up to the fight has been all over the news for months. Tickets sold out in minutes. Anyone who is anyone wants to be ringside for the fight the media has dubbed 'The Reverend vs The Russian'. \n\nAs much as I love boxing, I've never been to Vegas for a big title fight - I've always watched them on TV or I couldn't get tickets. \n\nAnd now my husband has two ringside seats to the biggest fight of the year. I can't believe it! I've always wanted to go to a big fight and it looks like Jake is going to make this dream a reality. \n\nI was in such shock that I didn't realize that we were in the air until our flight attendant came by with sandwiches, fruit, and drinks. \n\n\"Jake, this is beyond anything I could ever imagine. Thank you.\"\n\n\"Don't thank me yet baby. There's much more ahead. Eat your food. You need your strength.\" \n\nI don't even know what could be better than this, but I can't wait to find out. \n\nTrust and enjoy yourself.\n\nChapter Four -Jacob- Thursday Afternoon Part 2\n\nShe has no idea what's coming. Her dream was to go to a big title fight, but this is going to be so much more. \n\nI had to call in favors and make promises to make this weekend happen for her. Rebecca was happy to close the salon once I explained what I needed. The florist moved heaven and earth to get every single rainbow sorbet and pink tea rose in the city. My cousin, the CEO of the largest financial services firm in London, let me use his jet in exchange for some pro bono work for his charity. The concierge company he referred me to took care of the Vegas accommodations and the pricey tickets. I didn't have to give up my kidney, but it was bloody close. \n\nI'd do it all again to see this look on her face. \n\nWe finished our lunch and retired to the back of the jet with the king sized bed, 4K TV, and Xbox One. My cousin loves his toys. Alicia saw the bed covered in rose petals and laughed. \n\n\"Jake, are there any roses left in Atlanta?\" \n\n\"Probably not. The florist will be a friend for life now.\" I took her in my arms and felt her melt into my touch. \n\n\"I really want you to have a good weekend honey. Are you tired?\"\n\n\"No, not tired. I can think of other things I want to do though. I mean, when will we get another chance to join the mile high club in such style?\" I felt her hands move to the button on my jeans. I move them away, pick her up, and lay her on the bed. I lay on top of her, kissing her over and over. \n\n\"What's up Jacob? Why won't you let me touch you?\" ",
        "\"Trust me and enjoy yourself baby. That's all you have to do.\"\n\nI put my phone on the bluetooth charger. Soon, the sounds of Ro James' 'Permission' float all over the room. \n\nI kiss her some more before I roll down her maxi dress and expose those beautiful caramel breasts with the juicy nipples. I take one nipple in my mouth and the other between my fingers, sucking and lightly biting as she squirms beneath me. I take her arms and hold them above me while I kiss her all over her chest. I bite her nipples harder and she almost comes off the bed she's so hot for it. Keeping her arms above her head with one hand, I lift her dress up with the other and feel her wet pussy.\n\n\"You want me to fuck you? You want all those people to hear me make you scream and moan and beg for my cock?\"\n\n\"I don't care Jake please please please just fuck me baby please please please....\" \n\nI take my fingers out of her pussy, slick with her juices, and move down to her pretty pink hole. I listen to her gasp. \n\n\"Will you give me that ass baby? Can I fuck you in that little hole?\" \n\nShe sat up on the bed, eyes looking at me with lust. She took off her dress and dropped it to the floor. The she kissed me -those full lips against mine had my cock hard and wanting to take off my clothes and sink my dick into her. I had this all planned out but I don't know if I'm going to make it before we get to Vegas. \n\nShe turned around and got on all fours, putting that big round brown ass in my face. She moved in time to the music, dancing with that ass all in my face. \n\n\"Don't turn around. Wiggle that ass for me.\" I slap her ass a little, just to make my point. \n\nI got off the bed and reach in my suitcase for our fun bag - all the toys that come with us when we travel. I pull out the lube and a butt plug. I go back to the bed and slowly put my lubed up index finger near her asshole. \n\n\"Relax Alicia. Let me in baby.\" I slowly enter her with my lubed finger, feeling her clench all around my finger all hot and tight. She didn't like her ass being playing with before she met me. Now her whimpers and moans and begging are driving me crazy, so I add a second finger, moving faster now, opening her wider. I know she wants it because she's backing that ass up on my fingers, begging for more. I slowly remove my fingers and replace them with the lubed plug. She loves pink so I got her a stainless steel plug with a pink jeweled base. Talk about a diamond in the rough. \n\n'Baby I'm so full....please fuck me please fuck me!\" I see a trickle of wetness run down her leg as she move her ass from side to side to side to side. I can smell her sex in the air; I'm sure that the flight crew can as well. Damn. \n\n\"Sit up baby. Sit on the edge of the bed in front of me.\" \n\nAs she turns I shed the rest of my clothes. I stand there in front of her - my thick cock is hard as a rock and leaking precum. She's not even looking in my face as she stares hungrily at it, like she's seeing it for the first time. She looks up at me, a look of question on her face. \n\n\"You know what to do. Enjoy yourself.\" \n\nChapter Four -Alicia- Thursday Night part 1\n\nI don't care if the flight crew hears me. I don't care if they think I'm the world's biggest slut. \n\nI. Do. Not. Care. \n\nI have to have that dick in my mouth, and I have to have it now. I look up at Jake, his face tight with anticipation. He wants me to enjoy myself, so I'm going to enjoy - long, slow, licks. \n\nTwo can play this game baby. \n\nI look in his eyes as I lick the tip round and round like an ice cream cone , then I suck down his shaft, taking in more and more. I drag my mouth back up to the top and I'm rewarded with a moan from his mouth and a hand in my hair. \n\n\"Alicia, baby girl...bloody hell....\"\n\nThe more turned on he gets the more pronounced his accent gets. By the time I'm done I'll have him talking like Brad Pitt in that Guy Ritchie movie. \n\nHe tries to grab my head so that he can get his cock down my throat, but I grab his hips to keep him from moving. He groans in frustration and need, but he keeps still. \n\nI'm enjoying myself. \n\nOver and over I lick him up and down, listening to him moan and curse and call my name. Eventually I relax my throat and take him to the root. My nose is tickled by his red pubes. I swallow, which makes my mouth tight around his dick. I gag a little and rock back on the bed, which makes the plug in my ass feel even bigger. My pussy gushes as I hum and moan on Jake's dick. \n\n\"Alicia, I gotta move baby. Let me fuck that mouth baby girl.\"\n\nI take my hand off his hips. \n\n\"Yessssssss Oh Fuck!\" \n\nAll Rebecca's work on my hair today is for naught because Jake takes a handful of my hair in his left hand and slams his cock down my throat. He's so gone I just let him fuck my face and take his pleasure. He's fucking my face so hard that my body rocks back and forth and that makes the plug move back and forth, which makes my pussy wetter and wetter and OMG...am I about to cum?\n\nJust when I think I can't take it anymore Jake takes his right hand and squeezes my nipple - hard. \n\nI see stars as my body explodes. \n\n\"I'm coming! Take it baby take it! CeCe!\" \n\nJake screams my nickname as he comes down my throat. I make sure not to miss a drop. He keeps thrusting over and over until he goes soft in my mouth. He lays on the bed as we spoon. When you swallow there's no wet spot. \n\n\"Damn. I love you Alicia. Just.....fuck. Wow.\" \n\n\"I love you too Jacob. I can't think right now.\"\n\nI can can feel his heart pounding against my back. We're both breathing hard. \n\nHe reaches up for the intercom to call the flight attendant. \"Hi Carla, how much longer to Vegas?\" \n\n\"We have two and a half more hours until we land Mr Cambridge. Do you need anything sir?\" \n\n\"Can you wake us an hour before landing? Mrs. Cambridge is exhausted,\" Jake says with a smile in his voice. I roll my eyes. \n\n\"Oh I'm sure she is Mr. Cambridge,\" says Carla. I can hear her laughter. \"Get some rest. I'll wake you when it's time.\"\n\n\"Thanks Carla.\" \n\nHe turns off the intercom and snuggles closer to me; I can hear how tired he is. He kisses my hair.\n\n\"We're going to have to tip her well Jake.\" My eyes are closing. \n\n\"Yeah, next time we'll let her watch.\"\n\nAnd with that, we rest. \n\nChapter Five -Jacob- Thursday Night part 2\n\nAt least Alicia has the decency to look embarrassed. I have no such shame. I love my wife, she loves me, I love her pussy, she loves my cock, and now everyone knows. I'm the Top of the Pops. \n\nWell, at least everyone on the flight crew knows. \n\n\"Thank you Mr. and Mrs. Cambridge. You two are welcome to fly with us anytime. Hopefully we'll be your flight crew on the way back to Atlanta.\" Carla and the captain were all smiles as we left the plane. \n\nI bet they're fucking. \n\n\"Jake, is that a Rolls? I can't believe it! This some true high roller shit!\" Alicia is all smiles as she shakes hand with the valet. \n\nI remember the night we met. She thought she could out dance me - bugger that! Not only was she beautiful, she was also smart, and she loved comic books and Star Trek. She's the perfect combination of nerd and diva, and she's all mine. \n\nOur first date was at a drive in. By the fifth date, when she made me drink pineapple juice for a week before we went out, I knew I loved her. \n\nWe made it through grad school and law school, through family who didn't think I should be with a Black woman, through being an interracial couple in the South, and here we are. \n\nSoon we're in the Rolls on our way to the private entrance at our home for the weekend, the MGM Grand SkyLofts. \n\n\"Jake! Oh My God! This is so crazy! Are you sure you didn't have to give up a kidney?\" \n\nWe were whisked up the private elevator to meet our personal butler, who checked us in, unpacked our clothes, and left us to enjoy our view of the strip. We had a two bedroom suite with every amenity possible. Alicia is spinning in the middle of the room like Cinderella at the ball. \n\n\"Jake, there's an infinity tub and a huge shower for two! I love this place.\" She gives me a hug and melts into my arms. \n\n\"This is only the start my love. I've got two days of fun planned for us.\" I grab her ass, knowing that the jeweled butt plug is still there. \n\n\"Um Baby? You planning on taking this out anytime soon?\"\n\n\"How about I take it out, we take a shower, I put it back in, you put on that black dress I like, we go to dinner, and you'll see the second part of my surprise? We've got an early day tomorrow.\"\n\n\"Sounds like a plan. baby. I'm trusting and enjoying myself.\"\n\n\"Good Girl.\"\n\nWe take a long shower, get dressed, and head down to Craftsteak for a delicious meal. Alicia's wearing that sexy as hell black mini dress and red bottoms that I love (and of course the pink jeweled plug), and I wear her favorite black cashmere v-neck, leather jacket, and dark pants. She's smiling and the champagne has her feeling a little loose, so I know she'll love the next part of our date.\n\n\"Jake this meal was amazing. I've never had a filet this good. I can't even imagine what's next.\" \n\n\"It's time to go my love. The next part of the adventure awaits.\" \n\nWe make our way out of the casino and into the waiting Rolls. I could get used to this. \n\nWe snuggle in the backseat of the Rolls as it makes it way towards I-15 and our next destination. I kiss her forehead as I slowly snake my hand down her dress to her nipples. Pulling on the nipple a little causes moans and gasps from Alicia. I lean her back a little and pull her dress down, exposing those big caramel breasts I can't stop touching. \n\n\"Jake....baby....um....\" Alicia casts a nervous glance at the black glass separating us from the driver. \n\n\"Trust and enjoy my love, trust and enjoy. Hello Trina. Hello Tasha. My lovelies.\" Alicia told me she named her breasts in high school on a dare from her mates and the names stuck. I love the twins.\n\nI take the left nipple (Trina) in my fingers while my teeth lightly tug on the right (Tasha). Her nipples are big and brown and they get hard under my touch. Alicia's trying to be quiet with her moans but desire is getting the better of her. I take my mouth from the right nipple to the left -it's always been the more sensitive-and she's raising up off the seat of the car as I get her more and more aroused. \n\n\"I'm going to cum in the backseat of this car! Don't stop Jake don't stop!\" Alicia is writihing on the backseat as I take Trina and Tasha in my fingers and squeeze and rub. \n\n\"Well, we can't have you coming in the back of the Rolls honey. Besides, I've got a gift for the twins.\" I reach in my pocket and pull out a black pouch. Alicia's eyes get wide as she sees what I'm holding. \n\n\"OOOOHHH! Those are new. I can't wait to see how they feel.\" She pushes her breasts together and rubs her nipples in anticipation. \n\n\"I love my kinky slut. Keep those nipples hard for me.\" I place one tweezer nipple clamp on Tasha and pull it tight. I do the same for Trina. There's a small vibrating weight holding the chain together, but Alicia doesn't know that. That's going to be fun later. I pull her dress back up over her breasts. Her eyes glaze over in a mixture of pain, lust, and pleasure. Damn my dick is getting hard. \n\n\"But Jake, I can't go out like this! Everyone can see the clamps!\"\n\n\"Where we're going, it won't matter.\" \n\nSuddenly the Rolls comes to a stop. We've arrived at our destination. \n\nChapter Six -Alicia- Thursday Night part 3\n\n\"The Palomino? The strip club Palomino?\" \n\n\"Remember what I said baby, just trust and enjoy. We're gonna have a ball.\"\n\nI'm not a prude, I've got clamped nipples right now. I love all things sex, but I've never been to a strip club before. What is Jake doing? \n\nFrank, our driver, comes around to open the car door. \"Mr. Cambridge, I've given your name to the door person. Everything is arranged. I'll be here when you're ready to leave.\" \n\n\"Thank you. Ready Alicia?\" \n\nWe get out of the car and head into the club. \n\nWhoa. This place is incredible. Walking in we see the stage with two beautiful women working the pole to a T-Pain song. The waitresses are beautiful as well and everyone was having a good time. \n\nI was expecting....well, I don't know what I was expecting, but this is cool. My nipples are throbbing with these clamps on, but it's a good throb. \n\nWe are escorted to a VIP area above the stage where an overpriced bottle of Jack Daniels is waiting with all the mixers we could want. We sit on a plush purple loveseat and watch the dancers and the scene below us. Soon the music changes, and wait...I can't believe it! \n\n\"Oh Em Gee Jake! Is that really 'Pour Some Sugar on Me'?\" \n\n\"Well, we are at a strip club. I guess it's a rite of passage.\" We laugh at the strip club staple and sing it to each other as we drink our Jack and Coke. \n\n\"Why are we here Jake? And why are they fully naked? I didn't think you could do that in Vegas and have alcohol.\" \n\nHe leans in close. I can feel his hot breath in my ear. His hand brushes my clamped nipples ever so slightly, making me shiver. \n\n\"The Palomino was grandfathered in. I want you to pick out the girl you like for a lap dance.\" \n\nHe wants me to pick out a girl for his lap dance? I give him a look. \n\n\"Trust and enjoy Alicia. Trust me, and pick out the girl you want me to enjoy.\" He brushes his hand over my nipples again and I think I jumped out of the chair. \n\n\"ahhhhhh! Jake!\" How long can I take this?\n\nThe music has changed again to that horrible song by FloRida that only sounds good in the stripclub. I drink more Jack as I take my time to scan the room. So many lovely women here; it's hard to choose. \n\nThen I see her. She's perfect. A little shorter than me, gigantic breasts that look real, nice ass, not skinny, pretty skin, long black hair, nice shoes. I catch her eye and she smiles at me. \n\n\"I want her Jake.\" I subtly nod in the direction of the pretty dancer that's caught my eye. \"Make it so Number One.\" Even in the strip club I'm a nerd. Jake laughs at me and salutes. \n\n\"Engage!\" He calls over a hostess and whispers in her ear. I take a gulp of my drink, gathering up my nerve as the whisky burns my throat. \n\n\"Mr. and Mrs. Cambridge? Come with me.\" We follow the hostess upstairs to private room. The room has a gray and blue bed with a red carpet and a mirror - not exactly the best decor. I give a dim look at the bed with it's foam mattress - I mean, how many germs are on that thing? \n\nThe hostess must have read my mind, because she reaches in a closet and pulls out a fresh pack of clean sheets to put on the bed. \"The rooms are cleaned after each client, and a fresh sheet is used each time.\" She gets the room ready and bids us a good time as she leaves. \n\nJake reaches over to kiss me. \"Are you nervous?\" \n\n\"I'm not nervous Jake. I'm kinda excited to watch you get a lap dance.\" We're sitting on the edge of the mattress waiting for our dancer to join us. \n\n\"Oh no baby doll. The dance is not for me. It's for you.\" \n\nI open my mouth to speak when she walks in the room. \n\n\"Oooohh! A couple. I like it when they're two of you.\" She walks over to us with a smile and a sway in her step. \"I'm Crystal, and I'm here to make you happy\". \n\nOf course her name is Crystal. She's wearing a black robe, a thong, heels, and nothing else. \n\n\"Hi Crystal, I'm Jake and this is my wife Alicia. You'll be dancing for her tonight.\" Jake brushes his hand across my chest again. I'm so horny I can't take it. I can feel my thighs getting wet. Crystal smiles at us. \n\n\"Crystal, do you mind if I play a song on my phone for you to dance for my wife? It's one of her favorites, and I think you'll like it.\" \n\n\"I don't mind at all Jake.\" Crystal is all eyes on me as I look at her just as intently. It's a good thing I can't touch her, because I want her nipple in my mouth. \n\n\"Found it! This is my wife's 'If I were a stripper' song.\" \n\nOh my goodness...this song makes me so horny. It makes my hips wiggle. I don't know if Marian Hill made Whisky just for me, but I love this shit. \n\nYou are my whisky......I'll make you mine.....I can just taste it......\n\n\"Alicia you have good taste. I like this song. Let me make you feel good.\" Crystal closes her eyes as she listens to the song and her hips start to move. Slowly she winds her body for me, hips going from left to right then right to left. A small hint of a smile is on her face as her hands touch her breasts, moaning from the sensation and making her nipples hard under her hands. \n\nMy own nipples are aching in the nipple clamps. I start moving my own hips to the music - this is my stripper song, after all. My hands are balled into fists. Can't touch Crystal. The song is still playing the background:\n\nAll of these shot boys think I'm divine.......But I don't want to waste it......\n\nI'd forgotten that Jake was next to me until I felt him scoot us both back on the bed. We're sitting back against the headboard while Crystal is at the foot of the bed dancing for us....no...Crystal is dancing for ME. \n\n\"You want her don't you? I know you want to touch her. I know you're wet. My beautiful slut.\" Jake is whispering in my ear as Crystal gets on her knees on the bed still touching herself, still dancing. She sits back on her heels and spreads her legs so I can see a peek of her pussy through her panties. I gasp. \n\n\"oh fuck....oh fuck....oh my damn.\" I don't know how much of this I can take. Crystal is still rolling her hips to the song. This is torture. Delicious torture. \n\nBartender tell me......What's in that cup....Yeah I gotta have it...........\n\nJake has his hand down the front of my dress and he pulls out the chain that's keeping my poor nipples attached to the clamps. There's a small weight at the bottom of the chain. There's a look that passes between him and Crystal. She smiles again and crawls on all fours to me. Jake grabs my left hand as Crystal straddles my thighs. She's grinding against me and all I can do is look at her tits swinging low and heavy in front of my face. I've got Jake's hand in a death grip now as she keeps grinding on me to the song. \n\nI know you won't burn when I drink my glass......I know how to drink it I learn pretty fast.....\n\n\"Well, what do we have here Alicia?\" She looks at my dress and sees the nipple clamps through the thin material. \"Do you mind if I take a closer look?\"\n\nI don't trust my voice right now, so I nod as Crystal lowers the straps on my dress to expose my clamped breasts. My nipples have gone cold they've been clamped so long, but I like it. Delicious torture. \n\n\"Mmmmmmm...Your nipples are so pretty like that. They look like caramel candy. My favorite candy. I wish I could taste, but I have something just as good. She takes the weight holding the nipple clamp chain in her hand as she leans over to whisper in my ear. \n\n\"Jake said you can cum. Trust and enjoy yourself Alicia.\" I look over at Jake and he nods. He's just as turned on as I am - I can see it in his eyes and in his tented pants.\n\nShe slowly turns the weight at the bottom of the chain, and my brain short circuits. \n\nThat's no weight. That's a vibrator. Ohdeargodinheaventhatsavibrator. \n\nI feel the sensation rolling up the chain to the clamps holding my nipples hostage and it's like an electric surge goes through me all the way to the plug in my ass. My back arches as my eyes go wide and look at Jake and come so hard that I forget to breathe and the world goes purple. \n\n\"OH FUCK OH PLEASE JAKE YES YES PLEASE AHHHHHHHHH!\" \n\nMy body is shaking. I can't stop it. I have no control of anything right now. I feel high and drunk all at the same time. \n\nCrystal slowly slides off my thighs as Jake pulls me close and turns off the vibrator. I melt into his arms. When I come hard like this I get really loopy, like my brain leaves my body. All I can do is suck my thumb, and for some reason Jake really likes it. He's smiling at me and kisses my forehead. The song is ending; I can hear the last lines as I come back to earth.",
        "Throw. It. Back. Sip. It. Slow.\n\n\"You're so beautiful right now. Let me get you together so we can go. Can you stand up?\" \n\nI can't really talk with my thumb in my mouth, so I nod as Jake takes the clamps off my nipples and I gasp as the blood comes rushing back to them, making it hurt so good. He throws his jacket over my shoulders as we grab our things and make our way to the door. Crystal is standing there with a huge smile on her face. \n\n\"This is the most fun I have ever had at the Palomino. I hope you come back soon. Thanks for the tip Jake.\" She kisses my cheek. \"Alicia, I hope I find a Jake one day. You're a lucky lady.\" \n\nFrank and the Rolls is waiting for us as we make our way out of the club and into the car.\n\n\"Here baby doll, drink this.\" Jake gives me some Gatorade. The fog in my head caused by that mind blowing orgasm is starting to lift but is quickly being replaced with extreme tiredness. I look at him with tears in my eyes. The jet lag is starting to kick in and being really tired always makes me cry. Not to mention I just came so hard I saw purple and sucked my thumb. I have to tell him how much I appreciate this. Appreciate him. Appreciate us. \n\n\"Jake I-\" He kisses me, again silencing my words with his mouth on mine. \n\n\"Did you enjoy yourself love?\" I nod. \n\n\"Do you trust me?\" \n\nI find my voice to answer that question. \"With my life Jake. I trust you with my life.\"\n\n\"Then that's all I need to know. I love you baby. Let's get back to the hotel, I'll wrap up your hair and we'll go to bed. We have a big day tomorrow.\"\n\n\"I don't know what can be bigger than today, except for the fight on Saturday.\" \n\n\"You leave it to me baby doll.\" \n\n\"Okay. I love you too.\" We make our way back to the MGM, and I'm boneless as Jake gets me ready for bed. I'm asleep before my head hits the pillow. \n\nChapter Seven-Jake-Friday Morning \n\n\"Jacob, do you know what a kidney specialist is called?\"\n\n\"Yeah, a nephrologist. Why?\"\n\n\"Because I think you're going to need one when we get back to Atlanta. No way you got all this done without giving up an organ. I'm convinced you're going to end up in a tub of ice. We are in Vegas you know. That shit happens.\"\n\n\"So if I did gave up my kidney, was it worth it?\"\n\n\"Hell yeah! You can live with one kidney, and I get to drive my dream car. Sounds like a win win to me. I mean, look at this car!\" Alicia rubs her hand over the steering wheel with a wide smile. \n\nMy wife and I are having this ridiculous conversation as she sits behind the wheel of a black on black BMW 640i convertible on the Las Vegas Strip. We're going on a day hike to Red Rock Canyon, and we're getting there in style. \n\nLast night was...WOW. I didn't know that Alicia would react the way she did. It was more than I ever hoped it could be. I will never forget the look on her face when Crystal turned on that vibrator and her eyes glazed over as she climaxed. She told me she saw purple, and I believe her. \n\nI woke up to my wife's mouth on my cock, making it really hard to remember that I'm not fucking her until Saturday. The sight and feel of her licking me like an ice cream cone then taking me deep into her mouth is truly the best part of waking up. Who needs coffee?\n\nI was seconds away from coming down her throat when the knock came for breakfast. Damn! \n\n\"Be there in a second!\" Alicia pauses takes her mouth off my dick long enough to alert room service. \n\n\"Okay Mr. Cambridge, come for me. I'm hungry and not for breakfast. Feed me Daddy...\"\n\nBloody Hell! She knows that daddy shit turns me on. She puts her index finger in her mouth, getting it really wet, and then she goes back down on my cock. She starts humming all around my dick, moving her mouth faster and faster and then....\n\nI feel her wet index finger brush across my arsehole. That's all it takes. \n\n\"ALICIA! BABY! AAAAAAHHHHH!\" \n\nI come undone in her mouth. Completely undone as I come down her throat. Fuck. Me. \n\nI get my wits about me quick enough to see my wife in a robe with a smile and a small little drop of come on the side of her mouth. She knows it's there, because she looks me in the eye, smiles, and licks it off. \n\n\"So yummy Daddy! Room service is here. Put on your robe.\" And with that, she's out to get the door. \n\nWe ate breakfast, took a shower, got our hiking gear ready, and now we're headed out to play in the sunshine. It's a beautiful day and I'm with my beautiful girl. Life can't get much better. \n\n\"Come on honey, let's see what this baby can do!\" Next thing I know, AC/DC's \"Back in Black\" is blasting through the speakers and my wife is suddenly the Black Danica Patrick. \n\nI guess it's time for me to trust her and enjoy myself. Hope she doesn't notice me checking my seatbelt.\n\nI really gotta learn how to drive on the right. \n\nChapter Eight-Alicia-Friday Afternoon Part 1\n\nThis has been the best day. Close to spectacular. \n\nI surprised Jake with a morning blow job and he in turn surprised me with my dream car and I've been driving it like I stole it. We drove to Red Rock Canyon for a morning hike - had to get it out of the way before it got too hot. We then took a mini road trip - up to Mount Charleston, the scenic route to Lake Mead, a stop in Henderson to eat the best burger ever at this place Jake saw on TV, and now we're on our way back to the hotel. I need a nap. \n\nWe stop in the private area where Frank is waiting with the Rolls. I guess my planned nap will have to wait. \n\n\"Good bye Bertha. I will miss you.\" I reluctantly get out of the BMW. \n\n\"Bertha? You named the car Bertha?\" Jake is looking at me and laughing as we get into the Rolls. \n\n\"Honey, my tits are named Trina and Tasha. You really think I didn't name the car?\"\n\n\"But CeCe, come on. Bertha?\"\n\n\"A car that badass needs a badass name. Are you really going to fuck with a chick named Bertha? Didn't think so. And besides, it's an alliteration thing. Bertha the Badass BMW. Where are we going?\" The Rolls has pulled out onto the Strip. \n\n\"We're going shopping! Can't go to Vegas without some retail therapy. Do you know what you're wearing tomorrow?\"\n\nI lean against Jake with a big sigh. \"You know, I haven't thought about it. You said to trust and enjoy, so that's what I've been doing. I can't believe I didn't think about my clothes for the biggest fight of the year! I mean my hair, makeup- hadn't thought about a thing. What am I gonna do?\" \n\nThis is very unlike me. I like to be cute and put together, and I really didn't think about it. I guess I have really turned this weekend over to Jake. And we're still in hiking boots! We're going shopping in hiking boots? The hell! \n\n\"See, that's my girl. I told you to trust me, and you have. I got this.\" Jake taps his chest twice like he's some kinda hard ass. I laugh. \n\n\"I'm not going to look like ....how do you say it in London? A gussied up tart?\" I was a little worried, with good reason. If it were up to Jake, I'd be dressed in white dental floss and not much else. He thinks my ass is a national treasure for everyone to see. \n\n\"Mr and Mrs Cambridge? We're here.\" The Rolls has stopped in front of the Forum Shoppes. \n\n\"Thanks Frank. We won't be long.\" Frank opens the door and as we get out, and Jake kisses my hand. \n\n\"I got this CeCe. Let's get some shoes.\" \n\nChapter Nine-Jake-Friday Afternoon Part 2\n\n\"Hello Mr. Cambridge, I'm Shannon, Welcome to Zanotti! Hello Mrs. Cambridge, we're all set for you. One pair of silver Super Harmony size 9.5 are waiting for you in our private fitting area. Right this way.\"\n\n\"Jake, you picked out my shoes? But how?\" Alicia looks at me like there's a third eye in the middle of my forehead and my name is Despero. \n\n\"I told you love, I got this! I know you better than you know yourself. That's just how much I love you Alicia!\" I gave her a kiss as the sales reps laugh. \n\nI also looked at her Pinterest page, but she doesn't need to know that. \n\n\"Just because you talk all kinds of shit with a sexy accent doesn't mean it's not still shit my dearest\". Alicia laughs as she kisses me back. \n\n\"I'll be here when you're done. Remember I have only one kidney now love. Don't go too crazy.\" She laughed and went to her fitting. \n\nI found a quiet corner and sipped on the water that the sales reps kindly brought me. I didn't even know I was asleep until I felt Alicia kiss my face. \n\n\"Worn out old man? Need a nap? I need a nap. This time change and our hike today is kicking my ass.\" \n\nI yawned and stood up. \"We've got one more stop and I promise a nap after we're done. Ready to go? Did you get several shoes?\" \n\n\"No, just this one pair. I want to see what else you have up your sleeve. Let's go get Frank.\" \n\nWe made our way to the Rolls and went to our next stop, the Canal Shops at the Venetian. \n\nAlicia smiles. \"Another mall? I'm not complaining not one bit, but another mall? The plot thickens.\" \n\nFrank lets us out and I drop Alicia off at Herve Leger. \n\n\"I'm going to pop over to Thomas Pink. A proper Englishman needs a proper English suit. I'll see you back here in 30?\" \n\n\"Okay Jake. I love you.\" \n\nI take my leave and make my way to Thomas Pink. I gave my measurements to the concierge service so they had everything ready when I got there. \n\n\"Mr Cambridge, you're going to be the best dressed man at the fight.\" Geoff, the tailor, gives an appraising eye to my Dobson pinstripe suit and waistcoat. \"Did you have an idea about your tie?\" \n\n\"Yes, my wife is wearing white and silver. So, something that compliments her?\" \n\n\"I have just the thing, wait here.\" Geoff rushes off. \n\nI give myself a look in the mirror - Alicia will like this. She has a suit fetish and I love to indulge her fetish. We've been almost late for work many a day because she wants to strip me out of my suit and do naughty things to me, and who am I to say no?\n\nI'm happy with what I see in the mirror. Even though I don't box like my wife, I put my time in at the gym. I'm fit but not overly so and I'm happy with that, and so is my wife. She likes me with a little meat on my bones. Tall, bald, and handsome is what she calls me, and I still manage to turn a few heads. The ladies like the bald head. \n\nThinking about Alicia half naked in the dressing room at Leger is making me think of a fantasy I've had for a long time. I put in a call to Frank to explain what I need and see if this can happen on the fly. \"No problem Mr. Cambridge. They'll be waiting there for you in 10 minutes.\" \n\nDamn I wish I could take Frank home with me. \n\n\"I brought three choices for you Mr. Cambridge, but I think the first tie is the best choice.\" Geoff held up the ties for me to choose from, snapping me out of my thoughts. \n\n\"You have great taste Geoff. The first tie is the best. Can you box all of this up?\" \n\n\"Sure thing Mr. Cambridge. I'll have it all pressed and sent to your hotel. Thanks for coming in to see us.\" \n\nI bid him goodbye and go back to Leger to check on Alicia's progress. I walk in and find her at the counter speaking with the sales staff. She sees me walk in and smiles. \n\n\"Ladies, this is my husband Jacob. Jake, I've been telling them about our weekend. They want to know if you have brothers or sisters -It's equal opportunity here!\" \n\n\"Hello ladies, I just have one cousin and he's taken by two. Sorry loves.\"\n\n\"Jake, that dress is perfect. I love it. They're going to alter it a little and have it delivered. Thank you so much.\" She thanks the sales staff and we walk out. \n\n\"Are we done here? Any more stops honey?\" It's been a long day, and we're both dragging a little, even though it's early by Vegas standards. \n\n\"Just one more stop CeCe, and then back to the hotel for a nap. I promise you'll enjoy it.\" \n\n\"Lead the way my love. Trust and enjoy.\" \n\nWe make our way to Agent Provocateur. Alicia's mouth falls open. \n\n\"But Jake! This is so expensive. I don't need this -\" \n\nHer protests are silenced by the store manager. \n\n\"Mr Cambridge? Hi, I'm Allison. Frank called ahead and we have everything set up for you in our special private dressing room. If you'll follow me please.\"\n\nI smile very innocently to my wife as she narrows her eyes at me. We make our way to the back of the store to a room that looks very much like the entrance to a storage closet. \n\n\"You have one hour Mr. Cambridge. Please enjoy.\" Allison leaves us and Alicia is understandably confused. She's looking at me like I'm Despero again, third eye and all. \n\n\"One hour?\"\n\n\"Follow me baby.\" I open the door. \n\nChapter Nine-Alicia-Friday Afternoon Part 3\n\n\"Jake, what the fresh hell is this?\" \n\nMy husband has me in a storage closet? Is that where we are? Wherever we are it's in a mall in the middle of Vegas and it looks like a bordello. Three bra and panty sets - one pink, one black, one sheer- are on padded hangers decorating the zebra striped wall. There's a red tufted Mulholland lounger on the opposite wall, resting on plush black carpet. It's a small room, dimly lit, with LED candles and fairy lights decorating the space. \n\nWhy is this in the middle of the mall? Okay, it's Vegas, but really? In the mall?\n\n\"Are we going to get arrested? Is this public sex? I'm too cute for jail honey.\" I'm kidding but I'm totally serious. Jake turns to check and make sure the door is locked. \n\n\"Do you see anyone else here? Want me to go get Alison? I saw her checking out your ass. I think she'd be agreeable. Besides, those bra and panty sets hanging on the wall are yours. She just made a nice commission.\" Jake pulls his shirt over his head, showing off his slightly furry body. . I reach out to touch him, making him shiver as I run my nails up and down his chest. Damn that man turns me on, and I can feel myself getting excited despite being nervous about someone walking in on us. \n\n\"Jake....\" I give him the side eye as he takes off his shoes and unbuttons his pants, his black boxer briefs just starting to show. I'm standing there looking at him like he's crazy, because he's gone mad. The perceived loss of his kidney has obviously affected his sanity. \n\n\"Remember that role play we did a few months ago? The one where you were an escort and we were at the mall trying on clothes and I came to help you in the dressing room? Remember how hot it was when I talked super dirty to you? Remember how hard we came? Remember we said that 'we might get caught' sex is kinda hot? Time to find out.\" \n\nYeah...that was kinda hot...in fantasy. But reality is a much different thing. The door is locked, and I trust him. Time to enjoy myself. I take a deep breath and let it out slowly. \n\nJake backs me up against the door. \"Come on Alicia, let's try it. We only have an hour, and we've used up 10 minutes already. Please baby?\" He kisses my neck and nibbles on my ear, driving me crazy.\n\nTime to play. What happens in Vegas......\n\nI push him back as he tries to kiss my mouth. \"Look Mr. Cambridge, I told you twice now. My name is Jasmine, not Alicia, or CeCe. And I'm not your girlfriend or your wife or baby. Kisses cost extra and you didn't pay.\" \n\nI think this is the biggest smile I've ever seen on Jake's face. I scowl at him as I try to stay in character. \n\n\"Thanks for the clothes and all, but you gotta pay for the extra shit.\" I suck on my teeth and roll my eyes. Jasmine gives no fucks unless she gets paid. \n\n\"Alright Jasmine, let's get to what I did pay for.\" Jake walks over to the lounger and lies down on with his head resting on the long pillow. \n\nHe pulls out his phone and the next thing I know Class Actress' 'Journal of Ardency' is playing softly in our little bordello. Why is he always playing music that makes me horny?\n\nThis game...of cruelty....hardly...becomes me.....\n\nHe's not even looking at me as he snaps his fingers twice and points at his cock. \n\n\"Get that body naked, that black ass on my face, and those lips on my big white cock. Make it quick and sexy, I don't have all day. As you've just told me, I didn't pay for the extra shit.\" He's stroking his dick, still in his briefs. \n\n\"As you wish, Mr. Cambridge\". I shrug out of my shoes, then take off my shirt. My nipples are hard as rocks and my breasts feel heavy. I take off my bra, then I turn my back to him as I take off my pants, bending over to put my ass in his face. \n\n\"Oh yeah. Get over here and suck my cock. Get it wet whore. No hands\"\n\nI get on my knees and pull his briefs down.I suck him fast and deep, making him moan quietly - we are in the mall. I can taste his precum and the sweat from our hike today as I suck him harder and harder. I relax my mouth and take him down as far as I can, keeping my mouth tight around my him as he raises up off the lounger. I don't want him to cum in my mouth, so I pull up and straddle him reverse cowgirl style as I put my ass in his face. \n\n\"Like what you see white boy? You like this black ass?\" . \n\nHe doesn't even answer, he just pulls my hips down and starts eating my pussy. I put my mouth back on his cock and all that can be heard are sucks and licks and gasps and moans. He puts two fingers in my pussy and starts working them in and out then he puts one of those fingers in my asshole. I gasp around his cock. I can't believe I didn't like this before we met. Jake loves fucking me in my ass, and I love to love it. \n\nThen he starts to eat my ass - damn! I almost lose it but I keep sucking his dick as his tongue works deeper and deeper in my ass. I thrust back on his face harder and harder as his tongue in my ass and his fingers in my pussy drive me to the brink. \n\n\"I'm gonna cum if you don't stop.\" \n\n\"Oh no, I'm coming deep in that ass. Hope you got that dick wet enough. Come ride this cock Jasmine.\" \n\nI get up off of Jake and he sits up at the edge of the lounger. I straddle him again and steady myself as I lower my ass on his cock. I go slow, holding my breath as I pause for the burn and then pushing down further. Soon all of Jake's thick cock is impaled in my ass. I let out a deep breath as I get comfortable. Damn this feels good. \n\n\"You good slut?\" Jake's lusty eyes are looking straight at me - he's not going to last long. I can tell. I'm going to last long either. I'm so hot I can feel it in my toes. \n\n\"I'm good white boy. Let's see what you got.\" \n\n\"Don't close your eyes. Look right at me. I want to see it when you come, and don't you dare tell me that's extra shit.\" \n\nThe music changes again. 'It' by Prince is playing. Perfect dick riding music. \n\nFeels so good, must be a crime........\n\nI wrap my legs around him as I move my hips back and forth, never taking my eyes off his. We're both covered in sweat as I bite my lip, trying not to moan loudly as I pick up the pace. He rubs my clit with his thumb while taking my nipples in his mouth again, making me cry out. He shakes his head slightly, reminding me to be quiet. \n\n\"Let me.\" Jake take his hands and moves my hips up and down his cock as he thrusts up into my ass over and over and over and over and damn it feels so good and I'm trying not to come but I'm losing control it feels so good so good so good ......\n\n\"I'm gonna come!\" I cry out and tighten my ass on his cock. Jake's eyes start to lose focus.\n\n\"Come with me. Look at me and come with me Jasmine. Fuck!\" \n\nHis hands hold my hips in place as blast after blast of hot come coats my insides. Feeling him come triggers my own and I come all over him, never once taking my brown eyes off his blue eyes. \n\nWe're both breathing hard, hearts beating a mile a minute. I lean in to kiss him, leaving us both breathless. \n\n\"I thought kisses cost extra.\" \n\n\"Consider this a gift.\" \n\n\"How much time do we have left?\"\n\nJake looks at his watch. \"We have seven minutes. Race ya!\" \n\nChapter Ten-Jake-Saturday Afternoon part 1\n\nThis. Is. The. Life. \n\nYesterday I took my wife Alicia to the mall and fucked her alter ego Jasmine in the ass. Good times. We made it back to the hotel and even though it was only 6 in the evening, we were exhausted. We barely had time to take off our clothes before falling into the bed for a well deserved nap. ",
        "We were up at 10, and decided to go out on the town - this was Vegas after all, and the clubs don't get started until midnight or later. \n\nWe took a quick shower together, got dressed casually - not trying to impress anyone but each other - and headed out to find food. Frank the driver took us to this 24 hour British pub. It wasn't home but it did enough to curb my homesickness - fish and chips with a side of mushy peas always do the trick. \n\nWe then headed out to a grown and sexy party well off the strip - no lines and no pretentiousness - just like we like it. We danced all night just like we used to do when we were in college. We did spring for a private table, so we kicked back with a couple beers between dances and just enjoyed being with each other. It was a great night. \n\nWe stumbled to the hotel around four in the morning and slept until noon today. The fight is tonight and we have to start getting ready early. \n\nWe ate a hearty brunch in our suite as all our purchases from yesterday were delivered and put away by the butler. Then the masseuses came and did their magic on our tired limbs. \n\nAnd now I find myself in an infinity tub for two with my wife. She's at one end, I'm at the other, and we're giving each other foot massages. Pete Belasco is playing in the background and I have a glass of champagne. \n\nLike I said, this is the life. My eyes are closed as my wife works her magic on my toes. \n\n\"Jake, Is there a reason you haven't put your wonderful penis in my wonderful pussy? I'm not complaining - lord knows I'm not, but Patty is feeling rather neglected.\" \n\nMy wife named her pussy Patty. Alliteration strikes again. \n\n\"Yes, there's a reason, and no, I'm not telling you. After tonight, Patty will be a happy girl. But riddle me this, Batman. You've named your tits Trina and Tasha. You named your pussy Patty. Why have you never named my cock? \n\n\"Oh honey. I named your cock the first time we had sex.\" Alicia laughs and takes a sip of her champagne. I raise an eyebrow in her direction. \n\n\"Really now? Why have I never heard this name, and what did you name him? I assume it starts with a C? Charlie the Cock? Or is it a D? Derek the Dick?\" \n\n\"Nope, no alliteration involved. In fact, the name I've given your cock has one syllable and is the best name ever.\" \n\nI sit up, intrigued. And so is my cock. He's half hard and interested. Alicia takes notice. \n\n\"And what is this best name ever?\" \n\nAlicia moves to sit next to me in the tub and starts giving me a hand job. She sucks on my nipple hard, making me gasp and moan. Precum starts leaking from my dick and she starts going faster. \n\n\"Come for me and I'll tell you what I named your cock. Come for me Daddy.\" \n\nDaddy again! Bloody hell! \n\nHer mouth goes back on my nipple as her hand keeps a steady rhythm on my cock. Her thumb is rubbing against the head as he strokes me. My eyes close tight, enjoying the sensations.\n\n\"You've been in control all weekend baby. Let me take control. Trust me and enjoy yourself .\" She licks my ear as she throws my words back at me. She squeezes me a little harder now, twisting her hand as she strokes my cock. \n\n\"Come. For. Me.\" \n\n\"Ah! Ah! Ah! Ahhhhhhh! Fuck!\" I erupt all over her hand and into the water. Now we gotta take another shower, but it was totally worth it. I'm breathing hard as I come back down from my high. \n\n\"Mine. Your cock is named Mine.\" \n\nChapter Eleven-Alicia-Saturday Afternoon part 2\n\nPUT YOUR PINKY RINGS UP TO THA MOON!\n\nIt's a party in at our suite in the MGM Grand! The fight is now a few hours away and we're getting ready. The suite has an awesome stereo system and the music is loud - Bruno Mars got that 24K Magic that sets the party off right! \n\nWe finally got out of the bathroom and our stylists, Trey and Kevin, are here to help us get ready. \n\nWho knew that we were the kind of people who had stylists? Jake has truly thought of everything. \n\nThe four of us are too busy dancing to get ready though. Trey and Kevin are two stepping and so are Jake and me. \n\n\"OOOH! I know the perfect song to play next!\" Kevin grabs his phone and heads over to the stereo system in the living room, with Jake on his heels to talk about music. \n\nI take a drink of water and sit on the sofa. \n\n\"Trey, why are you here with us? You do makeup and hair for celebrities. Jake has no hair, and I'm not a celebrity.\" \n\nTrey laughs and sits beside me on the sofa. \"When Aunt Rebecca called and explained what your husband had planned, there was no way we wouldn't get you ready. Her son Mike is not only my cousin but my best friend. He was best man when Kevin and I got married. Never gave me any shit about being gay and wouldn't let anyone in the family give me shit. When he got caught up in that mess last year and Jacob helped him, I was so grateful that he got this second chance to turn his life around. He's back in school and he's doing well. We're happy to help you. Now let us make you both more beautiful.\" \n\nI gave Trey a hug. \"Thank you Trey. Thank you so much.\" All of a sudden house music fills the room. Jake comes running back in with Kevin close behind and they're both smiling.\n\n\"CeCe, it's Kings of Tomorrow! I love this song -It's a classic! Dance with me Kevin!\" Now my husband and Kevin are doing a two step to 'Fall for You'. Trey and I are laughing so hard tears are falling down our faces. I get off the sofa and pull Trey to his feet. \n\n\"Trey, come on and dance with me before our husbands run off with each other and open a club somewhere in Ibiza.\" \n\nTwo hours later and Trey has worked his magic. Jake is in the other bedroom with Kevin, and we haven't seen each other since our danceathon. \n\n\"Trey, I don't think I looked this good on my wedding day. I can't believe it's me. I can't begin to thank you.\" \n\nAnd I do look amazing. I'm wearing a white and silver Herve Leger dress, the silver geometric stripes creating a caged look on my body. On my feet are the silver Zanotti super harmony gladiator sandals. The heel makes me three inches taller and my legs look longer in the short dress. \n\nTrey painted my toes and nails purple as a nod to my love of Prince. My lip color is purple as well, making my lips look full and luscious. And my hair -good gracious my hair - Trey has me looking like a goddess. My hair is in a sexy loose side chignon with soft curls and a swept bang. \n\nI'm going to a fight and I look like a knockout. \n\nThe door to the second bedroom opens and out steps my husband. He looks so damn good I'm almost knocked to my knees. He's wearing a suit! He knows what that does to me. Kevin trimmed his goatee and his head is all shiny. He's sexy and he knows it. \n\n\"Hello Beautiful. You look amazing. You smell amazing.\" I'm wearing Flower Bomb - his favorite scent. He's burying his face in my neck, trying to smell more of me. \n\n\"Hello handsome. I want to rip this suit off of you right now. And you're wearing Tom Ford cologne too? We might not make it to this fight.\" Desire has hit me so fast I'm unbuttoning his waistcoat before I know what my fingers are doing. \n\n\"Um -Hello! We're standing right here!\" Kevin brings us back to the room as he and Trey laugh at us. \n\n\"Sorry guys. It's your fault for making us look so good.\" I kiss both of them on the cheek and Jake gives them both a hug. \n\n\"So don't mess up our work! Go to the fight and have fun, then come back and get busy. Let us take a picture - gotta do it for the 'Gram!\" \n\nWe take pictures for everyone's Facebook and Instagram pages, then Trey and Kevin leave us in the suite. \n\n\"Are you ready to go Jake? The undercard should be starting in about an hour.\" \n\n\"Just about. One last thing. Follow me.\" He grabs my hand and leads me to the second bedroom where he got dressed. On the bed were two small gift bags, one pink and one purple. \n\n\"Open the pink one first.\" I open the pink bag and do my best to hold back tears. \"Jake you're going to make me mess up my makeup! They're beautiful!\" In the bag were a pair of diamond studs. \n\n\"Not as beautiful as you honey.\" He puts them in my ears and they look perfect. \n\n\"I can't wait to see what's in the purple bag.\" I open the bag and I can't help but laugh and shake my head. \"You got it. I can't believe you actually got it.\" \n\nIn the bag was the one sex toy I always wanted and would never buy for myself -the Lelo Lyla 2, a super fancy remote control egg. I've always had the fantasy of handing over the remote control to Jake and letting him drive me crazy. I never thought it would happen, but this weekend has proven that fantasies do come true. \n\n\"Sit on the edge of the bed Alicia.\" I sit and he gets on his knees and pulls my panties down to my ankles. He grabs the lube from the bedstand and lubes his fingers and the toy. He massages my pussy with his fingers and slowly inserts the egg deep inside me. \n\n\"You're going to wear this all night. I control your pleasure. The next time you come will be with my cock deep in your pussy. Understand?\" \n\n\"I understand...oooooooohhhh! FUCK!\" He hit the button on the remote control and the sensations from the egg vibrate all through my body. How am I not supposed to come with my body feeling like this? \n\nJake pulls my panties up. \"Ready to go baby?\" He places the remote in his suit pocket and is off to call Frank. I take a deep breath, grab my clutch, and meet him at the door. We make our way down the private elevator to the waiting Rolls.\n\nIt's gonna be a beautiful night. \n\nChapter Twelve-Jake-Saturday Night Part 1\n\nFight night is finally here. Frank has taken us to the private entrance of the arena. My cousin the CEO has rented a private suite for his clients and that's where we'll watch the undercard until it's time to make our way ringside for the final two fights. We don't know anyone in the suite, but my wife never meets a stranger. Knowing her, she'll have them ready to make a donation to our university before the night is over. \n\nWe enter the suite and I'm immediately impressed. It's smartly decorated with every kind of food and drink you can possibly want and several televisions scattered about to watch the fight. Most of these people aren't real fans, but I can tell Alicia is scouting out a good location to watch the undercard. We make our way to a quiet table away from the food but in view of a big TV so we can watch the fights. Soon enough, Alicia is engrossed in the fight, offering her commentary and scoring the fights on her own. She's in her element. \n\n\"Want something to eat honey?\" I ask her during a break in the action. \n\n\"Sure. I'll take a little something. I don't want to get anything on this dress. You know I'm clumsy. Love you.\" And with that, her head is turned back to the TV, watching the fight.\n\nI get us a small plate and some drinks and head back towards my wife, and I'm mildly surprised to see a man talking to her - a nice enough looking bloke. She always gets chatted up when we're out and I'm not a jealous man, so it doesn't bother me. I know where she sleeps at night. \n\nI may not be a jealous man, but I am a devious man. Time to play with my wife.\n\nI sit down our food and drinks and put my hand in my pocket to play with the remote control. I lean up against the wall - I can see her but she can't see me without turning away from the guy she's talking to, and she's a Southern Belle - can't be rude. This is gonna be fun. \n\nI start with a small sensation, just enough to get her attention. I watch her eyes go wide as the sensation vibrates her pussy. I know she's feeling it, because she starts rubbing her arm and she's gone from relaxed to sitting up straight in her chair. I stop the buzz and give her a little break as her eyes dart around looking for me. I move back so she can't see me, and she goes back to her conversation. \n\nTime to turn up the fun. I turn it on again, this time a staccato beat in her pussy. Cha Cha Cha. Cha Cha Cha. Oh, she's feeling it now. Her legs are starting to shake a bit, and I can see her squirming in her seat. The guy she's talking to is starting to look concerned - I wonder how she'd explain her predicament? Yeah, I'm fine, it's just that my evil ass husband has a remote control egg in my pussy! That makes me chuckle. \n\nLet me go and end her torture. I stop the remote, pick up the food and drinks and make my way back to where she's sitting. \n\n\"I'm back love. Everything okay?\" She gives me a look of lust and anger as the guy she's been talking to stands to shake my hand. \n\n\"Everything's great. Let me introduce you to......\" \n\nI can't help it, I shake his hand and turn on the remote control with my other hand. This time full blast - strongest setting. Now she's really squirming - her thighs are clenched together and she's given up trying to keep herself still. I pretend not to notice her as I talk with the other guy, who's not a bad chap. We exchange business cards and he leaves as I sit down next to her and turn off the remote. \n\nThe look I get from her would make a lesser man flinch, but not me. I smile sweetly as I offer her a drink and feed her some strawberries. \n\n\"How are you baby? Feeling good? Ready to head into the arena?\" \n\n\"I don't know if it's possible to love and hate you all at the same time, but I love and hate you right now for this damn egg!\" That look of pleasure and pain is on her face again. \n\nI can't help it, I laugh. Hard. She looks so beautiful when she's mad at me. I kiss her hand. \n\n\"I love you too sweetheart. Let's go get our seats.\" \n\nWe make our way ringside, right in front of the pay per view cameras. This fight was a sellout here in Vegas and a huge pay per view audience is watching around the world. We're sitting in the second row. To our left and right are celebrities and dignitaries. I grab Alicia's hand - we're both a little starstruck. \n\n\"These people aren't fans. You are. Enjoy yourself honey.\"\n\n\"Thank you Jake. This means so much. I love you. I'm sure you're going to buzz me all night, right? Drive me nuts?\" \n\n\"Only if you want me to. If you want to enjoy the fight, I can refrain. It's up to you.\" \n\n\"What have you said since we left Atlanta? Trust you and enjoy myself? I trust you to let me enjoy this fight and keep my pussy wet with that egg. Let's do this.\" \n\nI turn on the lowest setting again, loving the look on her face as her eyes get wide. \"You sure you can handle this?\" \n\n\"All I know is that you better get me back to that room and make love to me once this is over.\" \n\n\"That I can do. The fight is about to start.\" \n\nChapter Thirteen-Interlude\n\nAuthor's note: With apologies to that cable channel and those announcers...lol\n\nWelcome to BOH Sports! I'm your host, Lim Jampley with co-hosts Kax Mellerman and the champion Joy Rones.\n\nThe undercard is in the books and we're awaiting the boxer's entrances for our main event -- the anticipated grudge match between Gregor Rostov and Marvin Coleman. The undercard wasn't that exciting but this match will hopefully be full of fireworks. \n\nJoy, how do you see this fight shaping up tonight? These fighters really hate each other and the drama leading up to this fight has been intense. Will we see that in the ring?\n\nI really hope so Lim! Rostov and Coleman have the kind of skill and style to make for an explosive fight. It will either go the distance or we'll get a huge knockout. Either way, it's going to be a great night for fight fans around the world. \n\nOn social media the fight is trending all over the world, along with something that we've never seen before at BOH Sports - a person in the audience here at the arena is trending! Kax, can you shed some light?\n\nWell Lim, I'm not sure how much light I can shine, but what I can tell you is that #WhiteDress is trending, and it's focused on a beautiful woman in a white dress and the faces she's making that's being picked up by the cameras. She looks like she's....in ecstasy, for lack of a better term. \n\nAnd the man next to her has a big smile on his face, doesn't he Kax?\n\nYes Lim, I think the man next to her is making her make that face. Either way, I guess this happening in Vegas won't stay in Vegas. \n\nI think she'll be having a good fight night, no matter the outcome. \n\nI think you're right Joy. Well, it's time for the fighters to make their entrance! Let's get the introductions started! \n\n\n\nChapter Fourteen-Alicia-Saturday Night Part 2\n\nWhat a fight! What a night! \n\nColeman knocked out Rustov with a left hook to the body followed by a right uppercut in round 10! I thought for sure it'd go the distance, but Coleman was really upset about his sister I guess. Rostov went down like a bag of potatoes and didn't get up to meet the count. Now Marvin Coleman is the undisputed heavyweight champion of the world. There's bound to be a rematch. \n\nAnd to be surrounded by all these celebrities was crazy! It was truly a star studded night. I had a ball. \n\nJake, to his credit, didn't buzz me with the egg during the main event. The fight leading up to the main event was another story altogether. I missed entire rounds of the fight because of that damn remote control. It was again, delicious torture. I loved and hated every single minute of it. \n\nIt was crazy getting out of the arena, but we eventually made our way to our private exit and Frank was there waiting for us with bottles of water at the ready. With all the limos and VIP's we were sitting in traffic for a while. \n\n\"Jake, tonight was so much fun! I can't believe we have to go home tomorrow. Let's win the lottery and just be high rollers for the rest of our lives.\" I leaned against him and tucked my legs under. These shoes are beautiful but they're killing me. \n\nJake starts kissing my neck and nibbling on my ears. \"I'm already a winner, I have you.\" He hits that spot behind my ear that drives me insane and I feel myself getting horny...er. I can't wait to get back to our suite and make love to my husband all night long.\n\nHe must have noticed my arousal because he stopped his nibbles and I leaned into him, tired and excited all at the same time. It's late on the east coast but still early here, and everyone is out on the streets after the fight. The energy is incredible. \n\n\"We're here Mr. Cambridge.\" Frank has pulled up to the front of the casino and not at our private entrance to the suite. Jake is up to something. Again. I give him my best side eye. \n\n\"We haven't been to the casino since we got here. Can't go to Vegas and not gamble baby doll.\" \n\n\"But you said -\" \n\n\"Alicia. We're going to gamble, are you ready?\" The look he gives me brooks no arguments, so I keep my mouth shut as Frank opens the door and we get out. \n\nThe casino is super packed, so Jake holds me close as we make our way through the crowd to a roulette table with an empty seat. I take a seat on the stool; Jake stands behind me and leans into my ear.\n\n\"I'm going to give you four $50 chips - one for each setting on the egg. We're going to gamble until you win - bet however you like. Every time you lose I'm turning up the vibrator. Every time you lose it keeps you from getting my cock deep inside you. So you better win CeCe, and win quick.\"\n\nI am a terrible gambler. I won on a slot machine once in my entire life. \n\n\"Place your bets.\" The dealer spins the wheel and we place our bets. \n\nI place my first chip on black. The dealer drops the ball, and I watch with anticipation. \n\nIt bounces, once, twice, three times. \n\n\"Red 19!\" The dealer gathers the chips. I lost. The egg in my pussy starts to buzz. I squirm in my chair. Take a deep breath. Jake is back in my ear. \n\n\"One down, three to go. You want this cock don't you baby?\" I nod my head. I want him so bad so bad so bad. \n\n\"Place your bets!\" Time to go again. \n\nThis time I put my chip on red. Jake rubs his hand up and down my arms as I watch the ball bounce...and bounce...and bounce....",
        "\"Black!\" The dealer gathers the chips again. The vibration in my pussy gets more intense and I can't help the whimper that escapes from my lips. Jake is in my ear again. \n\n\"If you come like a slut in front of all these people I will be so unhappy Alicia. That will be worse than losing the bet. That means no cock for you for a long time. Maybe not even when we get back home. You don't want that do you?\" I shake my head. \n\n\"Then control yourself and WIN.\" I take another deep breath. I can do this. \n\nThe dealer calls for bets. This time I choose a number. I place the third chip on my favorite number - eleven black. The dealer spins and the ball bounces.\n\n\"Red 9!\" \n\nDammit! I lost again! The vibrator is going nuts in my pussy now at level three. If there weren't so many people in here I know they'd hear it. I stifle a moan by putting my thumb in my mouth. My thighs are shaking out of control. \n\nI can't take this. I can't. I gotta win. I take several deep breaths. \n\n\"Last chip Alicia. Make it count.\" \n\nI have to win. I kiss my last chip for good luck, and put it back on black. \n\nAlways bet on black. \n\nThe bets are placed.\n\nThe wheel spins. \n\nThe ball drops. \n\nI hold my breath. \n\n\"Black 10!\" The dealer winks at me. I breathe. I won. The incessant vibration in my pussy stops. \n\nI collect my winnings and give a tip to the dealer. I'm a mess. I'm so out of it I don't know if I can stand. Jake helps me to my feet and I sway in his arms. 'Good girl,\" he whispers. \"Let's go back to our room.\" \n\nWe make our way through the crowd to the elevators on the other side of the casino. Jake is by my side the entire time whispering sweet nothings and promises of what's to come when we make it to our room. I feel like I'm high - caught in that space between orgasm, pain and pleasure. I just walk where Jake steers me. Nothing exists except the need to come. I need to come. I need to come. I need - \n\n\"Alicia.\" We're standing at the elevator waiting with what seems like every person in Vegas. The doors open and we're the first people on. It's a glass elevator and we're pressed toward the back. Jake turns me so that I'm facing the glass. I look down at all the people in the casino as the elevator starts to move, stopping on every. damn. floor. Jake is behind me, whispering again so only I can hear him. \n\n\"See all those people looking? They want to fuck you, but you're mine CeCe. I'm going to fuck you into the mattress baby. Stay just like that.\"\n\nHe turns to face the elevator doors while I stay with my body pressed up against the glass. I keep taking deep breaths, trying to get myself together. The elevator finally stops on our floor. We make our way to the private suite area, show our room keys, and thank goodness - we're at the suite. \n\n\"After you baby.\" I walk in and I don't even try to stop the tears. \n\n\"Jake, this is absolutely incredible.\" \n\nThe lights are out but there's a soft purple glow from what has to be a few hundred LED tea lights scattered about the room, not to mention the light from the Strip. \n\nOn the floor a path is made with lights from the door to the bedroom. I can hear 'Adore' by Prince playing softly in the background. \n\nUntil the end of time, I'll be there for you....You own my heart and mind....I truly adore you...\n\nJake reaches behind me to the pins holding my chignon and pulls them free, causing my hair to tumble down around my shoulders. He kisses my forehead. Then I close my eyes as he places soft kisses on each, kissing away the tears. He kisses the tip of my nose. Then he kisses my lips, ever so softly. I lean into his kiss, so gentle, so good. He steps back, looking at me like he wants to devour me. I shiver. \n\n\"I've been wanting to do that all night. baby doll.\" I smile and kiss his neck. I grip his cock with my hand. I can feel him get hard in his suit. \n\n\"I've been wanting to do that all night Daddy.\" I know Daddy makes him hot, and at this point I'll do anything to get him inside of me. I feel like I'm on fire. \n\n\"You're a naughty girl. Let's go\". We follow the path of purple LED lights to the bedroom.\n\nJake kisses me again as he unzips my dress. I unbutton his waistcoat and loosen his tie. He throws his jacket on the chair in the corner, followed by the waistcoat and tie. I take care of the buttons on his shirt, while he takes his pants off, followed by his socks and shoes. \n\nSoon enough, Jake is standing there in his black boxer briefs and I'm standing there in the sheer bra and panty set and gladiator heels. The string from the egg is visible through the wet spot in my panties. My nipples are hard as rocks. \n\n\"On the bed Alicia. Let me finish unwrapping you.\" I lay back on the bed as he takes off his briefs, his movements smooth and deliberate. How can he be so calm when I'm wound up so tight? \n\nHe takes my left leg, unzips my shoe, and places it on the floor. Then the same for the right leg. He pushes my legs apart and lifts up my hips to pull my panties down to follow my shoes on the floor. He leans in between my things, smelling my pussy. \n\n\"You smell so hot for me. Remember, don't come until I'm inside you.\" He takes the string and gently pulls the egg out of me with a juicy plop. His mouth replaces the egg, as he licks and sucks and nibbles on my pussy. My clit is throbbing and I can't get enough of him tasting me like this. I lift up my hips to give him better access and he slides a pillow under my hips. He moans into my pussy as I wrap my legs around his head. \n\n\"Damn you taste so good.\" \n\n\"Jake...please..please...I need you. Please.\" The music changes again. More Prince. Insatiable. \n\nI'm insatiable and I just can't be stopped...evenifIwasntthirstyIwoulddrinkeverydrop....\n\nHe kisses up my thighs, my stomach. He kisses my nipples through the sheer bra, making me cry out. I've never been loud in bed but tonight I'm a screamer. He unhooks the bra, taking my nipple hard in his mouth and rolling the other nipple in his hand. He pushes my breasts together, taking both nipples in his mouth at the same time, biting them ever so hard. \n\nI dig my nails into his back and thrust up against him, trying to get him inside of me. \n\n\"Jake! I'm gonna come if you don't stop baby please!\" \n\n\"I love you Alicia.\" And finally, he slips that hard cock inside me. \n\nAnd with that, the world goes purple. \n\nChapter Fifteen-Jake-Saturday Night Part 3\n\nMy wife comes as soon as I enter her hot wet pussy. Curses and moans and my name come flying out of her mouth this time as she falls apart beneath me. She's sweaty and shaky and breathing hard with wild eyes after her climax. \n\nShe's Beautiful. But I'm not done. \n\nI rotate my hips and move. \n\nShe wraps her legs around me and meets me thrust for thrust for thrust. \n\n\"Jake you feel so good baby. I love you\" \n\n\"You too. give me that pussy baby.\" I lay my weight on her and take a nipple into my mouth. She screams. \n\n\"I'm coming Jake! BABY!\" Her pussy clenches all around me as she comes again. Her body shakes as she moans gibberish. I keep fucking her as she spams all around me. \n\n\"Jake, come baby fill up my pussy please baby I want it so bad!\" \n\nI throw her legs over my shoulders and fuck her hard and deep. She arches up her hips to give me better access. Her hands grab the headboard to give her leverage as she thrusts her hips into mine. I drive into her over and over and over. She's mine she's mine she's mine. Her moans and grunts make me crazy as I grab her thighs and pull her closer to me. I'm just as vocal as she is - every time I drive into her a moan escapes my lips.\n\nI can feel the tightness in my balls. I'm going to cum. \n\n\"Alicia, I'm coming baby!\" \n\n\"Come for me Jake!\" \n\n\"AAAAAAHHHHHHGGGGGGGHHHH!!\"\n\nI let out a roar as I empty myself into my wife. Burst after burst flows from my body as I keep thrusting into her until I collapse on top of her. I'm unwilling to leave her body, but I don't want to crush her, so I slowly pull out, missing her heat already. \n\nWe're both on our backs, breathing hard and sweaty. Her hand finds mine. \n\n\"Well, that just happened.\" Alicia laughs. \n\n\"Yeah, that was bloody incredible.\" She turns to face me and I turn to face her. We kiss long and slow, too tired to do much else. \n\n\"We gotta go home tomorrow.\" Alicia sighs deep. \n\n\"I hope you had a good time.\" I yawn, which makes Alicia yawn. \n\n\"Are you kidding honey? This was the best weekend ever. I'll never forget this. I just have one question.\" Alicia snuggles against me and throws her leg over mine. \n\n\"Why did you wait until today to make love to me?\" Her eyes are closing. So are mine. \n\n\"It was your most fertile day baby doll. I love you.\" \n\nAnd sleep claims us both. \n\nChapter Sixteen-Alicia-Sunday\n\n\"Frank, you are too kind.\" I kiss his cheek. I'm really going to miss him. \"If you are ever in Atlanta, I hope you will consider being our guest. We'll drive you all over the place!\" \n\nWe both share a chuckle. \n\n\"Just doing my job Mrs. Cambridge, but I admit you two have been the most fun I've had in a long time. Have a safe flight home.\" \n\nThe grounds crew are loading our bags from the back of the Rolls to the Gulfstream. Frank has dropped us off on the tarmac as we get ready to head back to Atlanta. \n\nBack to life, back to reality, just like the song. \n\n\"Alicia, I'll be along in a minute.\" I board the plane as Jake settles up with Frank. I hope he gives him an incredibly generous tip. \n\n\"Hello Mrs. Cambridge! It's nice to see you again! As soon as your husband boards we'll be airborne.\" Carla, the flight attendant from the first flight, is all smiles, no doubt remembering Jake and me from our flight out here. I smile at the memory myself. No plug in my ass today. \n\nI take my seat and the glass of water that Carla offers as Jake enters the plane. He takes his seat and we both put on our seatbelts. \n\n\"I wish we could take Frank home with us. That man gets things done.\" My husband takes his water from Carla as well.\n\n\"I hope you gave him a nice tip.\" \n\n\"Don't worry CeCe. Frank will remember the Cambridges with fondness in his heart.\"\n\n\"Good Afternoon Mr. & Mrs Cambridge. We'll be taking off shortly. We're expecting a smooth flight just like the first flight, and we'll have you back in Atlanta in no time.\" The captain shakes our hands and heads back into the cockpit. \n\nSoon enough, we're in the air. After a light lunch we head to the bed at the back of the plane. I kick off my shoes and so does Jake. I'm wearing a simple maxidress again with no panties. Jake is casual in shorts and a t-shirt. It's nice to lay here with him and cuddle. I feel warm, safe, and wanted. \n\n\"Jake, I can't begin to tell you how much I loved this weekend.\" I kiss his shoulder and rub my hands on his hairy arms. \n\n\"I just want you to be happy, and you weren't. I'd never seen you so down. I never want you to feel this way and we can't talk about it. And besides, we needed this break.\" \n\n\"You're right. It was just so much back to back. First grandma, then Prince, then our dog. I just shut down. I couldn't deal.\" I sigh. \"But grandma wouldn't want me to be sad. She'd be kicking my ass if she knew I was feeling this way. I can hear her now saying 'scratch your ass and get glad CeCe'!\" My eyes tear up. \"I just miss her so much Jake.\" \n\n\"I miss her too love. You know I was her favorite white boy.\" We chuckle. \"But you're right. She wouldn't want you to be sad. The best way to honor her is live your life and live it well. And I have every intention of making sure that happens.\" Jake kisses me. I love this man. \n\n'You know what? We should dance, and I know just the song. Hold on.\" \n\nJake gets off the bed and scrolls through his phone until he finds the song he wants. \"Aha! This is perfect.\" \n\nI laugh as Jake does his best Prince imitation as he wiggles his hips and sings 'Take Me With U'. \n\nI can't disguise the pounding of my heart...It beats so strong..It's in your eyes, what can I say....They turn me on....\n\nJake has jumped on the bed, singing one of my favorite Prince songs to me. He pulls me close and we sing the chorus together: \n\nI don't care where we go...I don't care what we do...I don't care pretty baby...Just take me with u.....\n\nI smile at my husband. We're going to be fine. Trust and enjoy. \n\nEpilogue-Jake-Eight months later\n\n\"Alicia, you ready?\" I'm so nervous. If I stand up I have to sit down. If I sit down I have to stand up. My legs won't keep still. \n\n\"Jake, calm down! The hospital will be there. We have plenty of time. Do you have everything?\" \n\nI do a quick check. I have the overnight bag, I have my wallet. I called the doctor to let her know we're on the way. I have the car seats in the car - I finally got my shit together and learned to drive on the right. Can't have the woman carrying my babies driving me all over the place. \n\n\"Yep, I have everything. You okay?\" \n\n\"Yes, your sons are ready to come out, and I'm ready for them to come out. Oooh!\" Alicia makes a face as a contraction hits. I help her to the car and minutes later we're on our way . \n\nAfter we got back from Vegas things got better. Alicia got back to her old self. She avenged her loss to Karen with a vicious knockout. Work is going well for both of us. Life is good. \n\nAnd we got pregnant. With twins. Frank sent us a baby shower gift. \n\nAnd now I'm on the way to the hospital. Life is amazing. \n\n\"You know baby. I'm going to miss your pregnant belly. Maybe I can knock you up again real soon.\" \n\nAlicia gives me a look that would melt steel. \"I tell you what Jacob Cambridge. You carry two gutfulls of human for nine months! The only way we're having another baby is if you have them. You want me to knock you up? Swell your feet? Give you a pregnant belly?\" \n\nI get pale. It wasn't a good idea to tease a pregnant lady. \n\n\"I'm sorry Alicia. I won't bring it up again.\" She's still beautiful when she's mad, even more so now that she's pregnant. I can't help but laugh, and soon enough so does she. \n\n\"I love you, you silly man. Let's go have some babies.\"\n\n\"I love you too baby girl. Let's go have some babies.\" \n\n\"Make it so number one, Make it so.\""
    ],
    "authorname": "chocolategirl74",
    "tags": [
        "black female",
        "las vegas",
        "white male",
        "boxing",
        "music",
        "interracial",
        "love",
        "remote control"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/boxing-day-2"
}