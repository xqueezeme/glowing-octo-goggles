{
    "title": "Hitting the Bottom Ch. 09",
    "pages": [
        "Author's note: \n\nAs always, thank you to my co-creator and editor, the Brit. \n\nIf you're new to this story - I'm so glad you're here! While you're welcome to join anytime, I'd heartily recommend starting at the beginning as this chapter is going to be hard to jump into. Also, this series is the 3rd in my loosely-related trilogy of stories; so if you want to experience it the way I had envisioned it, please start with Lucky Bastard, continue to Whiskey and Rye, and then come back to Hitting the Bottom. It's going to be worth your time, I promise! \n\nIn previous chapters: Dan, a cop, had attempted suicide after assaulting his ex-wife/sub, and ended up at the hospital, where he met Nurse Sandra. Their relationship grew gradually, until finally they became lovers. Dan was reluctant to dominate Sandra, but with his shrink's blessing they did start playing. It was all fun and games - until he forgot the condom in the heat of the moment, and Sandra got pregnant. \n\nIn this chapter: Dan faces his worst fears; finds himself loving having Sandra on top. \n\n~~~~~~~ \n\nFor the longest moment I cannot breathe; only stare at those two tiny pink stripes dumbly. My mind is blank; the shock of her words had just short-circuited it. \n\n\"Dan?\" \n\nSandra's hesitant voice pulls my eyes up to meet hers and her anxious expression kick-starts my stalled brain. I gulp, and then, finally, lean over to take her in my arms. There's a fine tremor in her stiff form as she buries her face in my chest while my hands tighten around her, holding her close. \n\n\"Shhh... come here baby... it's going to be all right. Shhh...\" \n\nShe must know - as well as I do - that's wishful thinking rather than any real promise, but Sandra doesn't challenge my words. Instead she clings to me, burrowing into the crook of my neck, as we hold onto each other like two survivors in a lifeboat, faced with nature's capricious forces. Never before have I faced first-hand just how overwhelming they can be. \n\nAfter a while Sandra relaxes a bit in my arms, heaves a shaky breath, and leans back to look at my eyes. \n\n\"You're not mad, then?\" \n\n\"What? No! Of course not.\" I look at her, bewildered. \"I mean, I don't really know how I feel. Shocked, I guess. But no, I'm not angry, baby.\" A shaky laugh escapes me. \"Not at you, anyways.\" \n\nShe nods and drops her eyes, but I need to see her. I tilt her face back up with my fingers. \n\n\"What about you, baby?\" \n\nShe swallows hard, then admits softly: \"I'm freaking out. Big time.\" \n\n\"You are?\" I search her pale face. She looks helpless, but tries to explain. \"I mean, I've always wanted babies, in theory, you know? But...\" She doesn't finish the thought, burying her face in her hands. I know what she left unsaid. But not right now, and not like this. \n\n\"Yeah, I know what you mean.\" I agree reluctantly. We both fall quiet, each preoccupied with our own thoughts. Mine keep going back to one nagging question, which I finally decide to broach, carefully. \n\n\"Thank you, by the way.\" \n\nShe looks up at me. \"What for?\" \n\nI shrug, stalling for time, feeling my stomach churning. We need to face this, and sooner, rather than later. Determined, though consciously keeping my voice light, I answer. \n\n\"For not taking the morning-after pill.\" \n\nHer eyes widen, and then drop. I can barely make out her mumbled reply: \"I did think about it.\" \n\nMy throat feels constricted. I clear it, and push my question out through the dryness. \"What made you decide not to, then?\" \n\nShe looks back up to meet my gaze head-on. \"I believed we were safe, timing-wise. And I didn't want to take such a strong drug if I didn't have to.\" She lowers her eyes to study her hands, squeezed between her thighs, as she sits on the side of the bed, rocking lightly with her nerves. \"I've a friend who'd taken it in the past. The side effects are... not trivial.\" \n\n\"Yes, so I've heard.\" I say, but then again, that doesn't quite answer my question. My real question, that is, which I'm not brave enough to voice in so many words... and yet, I need to know. \n\n\"Would you have taken it, if it weren't for the risk of those side effects?\" \n\nShe hesitates. \"Honestly? I don't know. I guess I really didn't want to make that decision right then; it was easy to rule out the pill because of the risks, and to hope I won't ever have to really think about it.\" She falls quiet, her cheeks colored with a faint blush. And then she meets my eyes. \"But I promise, Dan, that even if I did use the morning-after pill, I wouldn't have done it without talking to you first.\" \n\nMy stomach cramps again with uneasy, helpless gratitude. I'm appalled by my own fierce reaction to the idea of her considering termination. On every level - other than this overwhelming, visceral response - it's something I'd not only expect might happen, but would also support. I believe children should come to this world wanted and loved, to parents who receive them as the true gifts that they are; who would provide for their material and emotional needs. And yet - \n\nWe hold each other's gaze. I reach her fingers with mine and lace them together, and then bend down to kiss her white, cool knuckles, resolved to focus on the small positive I can find in the situation. \n\n\"Thank you for that, baby.\" \n\nShe nods mutely. We sit in awkward silence, until she asks tentatively: \"So, it sounds like you didn't want me to take that pill; does that mean you... want this?\" \n\n\"This?\" I repeat lightly, raising an eyebrow, and her blush deepens. I squeeze her hand, sobering. \"Look... having a baby right now - we both know the timing couldn't be worse. We've only known each other for a few weeks. We haven't even talked about long-term commitment. As for me - you know, I'm... kind of a mess right now. I'm just starting to sort myself out. And you - you still have another year in school to get your diploma. A baby certainly wasn't part of your plans, right?\" \n\nShe nods, her head hanging low, but in-between the streaks of blond I can see her cheeks had grown pale. I reach for her chin to gently turn her around to face me. \"And yet, here I am, inexplicably relieved that you didn't use the day-after contraceptive. Crazy, huh?\" \n\nShe looks at me, wide-eyed, as if unsure how to react. I lean back to wipe my hand over my face, into my short-cropped hair, the prickling sensation somehow providing an out to my bottled-up agitation. \"I mean, I'm not a hundred percent sure how I feel about this, either. All I'm saying is... for some reason, along with being kind of shocked and overwhelmed by the idea of a baby, it also makes me feel - well... hopeful.\" \n\nShe turns to look at me fully. \"Seriously?\" \n\n\"Yeah. Seriously. I didn't tell you at the time, but when I realized I forgot the condom... of course I pulled out immediately; but still... afterwards... the thought of you, pregnant with my baby - it was such a beautiful dream. I wanted it to last. I hated the thought of you... making sure it didn't happen.\" \n\nSandra falls quiet. She seems nervous, undecided, nibbling on her short, clean-cut nails. Finally she looks into my eyes and asks me straight: \n\n\"Does that mean you don't want me to have an abortion?\" \n\nHer words ring in the air between us, sharp and clear, out of place in the soft early-morning light. Her gaze is steady and unflinching; her clear-blue eyes looking straight into mine. \n\nI cannot hide from her. I won't. Trust and hope. \n\n\"Baby...\" I take a deep, fortifying breath. \"Sandra, I love you.\" She blinks in surprise, but I don't give her an opening to respond. \"I love you -\" I repeat, needing these words to be present between us, \"- and being a father, well, it's been on top of my wish list for so long, I forget anything else that was there before. So the short answer is - no, I don't want you to have an abortion. I know that means a 'forever'. And as sudden as this is, I promise you - I want it. I want you, and I want this baby, now and for the rest of our lives.\" \n\nHer mouth had fallen open, but again I continue, needing to get it all out before she can reply. \n\n\"But baby - this isn't something I could decide for you. It's your life. It's your body. Taking on the kind of risks that come with pregnancy and childbirth, the commitment of raising a child -\" I shake my head, squeezing her cold hands in mine. \"- that's got to be your choice, Sandra. And you'd have every right to say 'no', if you don't want it.\" \n\nI search her eyes, and my heart almost breaks at the look of anguished uncertainty behind a glossy sheen of tears. Her throat works repeatedly before she manages a squeaky whisper: \n\n\"Fifteen minutes ago, all I could think about is 'please let him be okay with this.' And now that I know you are, all I have in my head is - wh-what if I cannot do it? What if I'm not ready for that kind of commitment?\" \n\nI feel the pit of my stomach drop at her words. Fuck me. What did I expect? An \"I love you too\" and \"let's have a baby together\"?! I know she never wanted to get pregnant - she made that clear from the start; had insisted on condoms. Did I really think she'd be willing to have a baby now, with me, just because I wanted it? \n\nI try to think of something to say that would reassure her, but I know it's a futile effort. She isn't ready. She said so herself. Time. We both need time to think this through. \n\n\"Baby, I -\" I gulp, and then continue with more conviction than I actually feel. \"I meant what I said. It really is your choice. But - but you don't have to make it right now, do you? There's some time to figure things out, isn't there?\" \n\nHer furrowed brow seems to clear a bit at that. \"I guess so... I mean, I'm barely three weeks along - which means five, by the standard medical count from the first day of my last period - still, very early on. So, I guess - yes, there's some time to - to digest, to think before deciding anything. It's just...\" She stops, biting her lips, her cheeks milky-white again. \n\n\"It's just... what?\" \n\nShe shakes her head, unwilling to continue, not even looking at me - instead she leans forward over her knees, her head buried in her hands. I find myself slipping down to kneel in front of her on the small, fuzzy, purple carpet she keeps at the side of her bed. I close my fingers around her wrists, tugging them so that I can take her hands in mine, and make her look at me. Reluctantly, she does. \n\n\"Talk to me, baby. Please. Tell me what's in your head right now.\" \n\nHer chin quivers, and then I see the first tears sliding down her ashen cheeks. The sight slices at my gut. Fuck me. I've never seen her cry before, and haven't realized until this very moment just how hard her tears would hit me. Shit, shit, shit! \n\n\"Baby... come here.\" \n\nSandra clings to me, sobbing even harder as I wrap my arms around her. The position is a little awkward - with me still kneeling between her legs, hugging her torso, while she holds onto my neck and shoulders. But she finally lets go, allowing her anguish an out through her tears... I guess I'd just stay here for a while. \n\n\"Shh... Baby... Breathe... We'll figure it out, I promise...\" \n\nI try to reassure her in a low, quiet voice. She nods, probably responding more to my tone than anything else. I take it as a good sign - I was half-expecting her to tell me to shut up. Finally, after a while - I'm not sure how long, but long enough for my knees to start protesting - she starts to calm down, so I tighten my arms around her and murmur into her ear: \"Hold on tight, baby. I'm going to pick you up.\" \n\nShe doesn't answer, but her feet come up to link behind the small of my back, and I can feel her fingers close on my shoulders. I keep one hand around her back, and use the other to push up against the bed, and then walk, with her still in my arms, out to the living room. Sandra is not a tiny woman; carrying her takes real effort. But man, it feels good. Manly. I shake my head internally. Pathetic. Then immediately get annoyed at my own knee-jerk negativity. Stop. It's okay to feel good about being her man; It's a good thing. Don't belittle yourself. Trust and hope, Dan. \n\nI settle down carefully on the couch with her straddling my lap. Once seated, I keep quiet and simply breathe slowly in and out, exaggerating the exhales, and am relieved to see it does the trick - Sandra seems to mimic my pace and relax in my arms. I kiss her temple lightly and slowly stroke her back, trying to soothe her further. \n\n\"Baby, please... there's no rush. We've got some time; we'll figure it out.\" \n\nI mean the words to be reassuring, but instead feel Sandra's body stiffen, and then she leans back to look at me. \"Yes, but - it's not a ton of time, you know.\" \n\nTrying not to panic I draw a long, shaky breath. \"Okay, I think I need a crash course here. What is the timeline we're looking at?\" \n\nShe leans back so that our eyes meet. \"I - I'll need to check, but I think first prenatal checkup should be scheduled around 7 weeks gestation - I'll call my gynecologist's office a little later, when they open - but that's like two weeks from now.\" \n\n\"And we need a decision to be made by then?\" I ask, unable to keep the alarm out of my voice. \n\nSandra shakes her head, her face grim. \"No - not exactly. I mean, up until 14 weeks or so the procedure for termination is not very risky. And there's the option of later termination, too, before the fetus becomes viable - up until 24 weeks or so, I think. But -\" she chews hard on her lower lip, and looks like she's going to burst into tears again. \"- but at 7 weeks they do an ultrasound to make sure it's in the right place - inside the uterus - and that it's growing normally, and -\" now she's crying again, but she keeps talking through her tears. \"- and they check for a h-heartbeat.\" \n\nHer voice breaks on that last word, and she seems to fold into herself, crying once more, her forehead pressed against my chest. I can just barely make her next words through her shaking sobs. \n\n\"And I - I don't know if... if I'd be able to do it if -\" she shakes her head against my chest, her hands clinging hard to my back. \"- if it already had a beating heart.\" \n\nMy own pulse kicks erratically at her words. Just imagining that scenario... I squeeze her harder in my arms. \"Shh... okay. It's okay baby. So - let's take a week, okay? Let's take a week to think about it, to let this sink in, to talk about it... and then decide. Okay? Can we do that?\" \n\nI feel, rather than hear, her mumbled sniffled 'm'kay' against my neck. \n\nOkay. Trust and hope. I suck in a deep breath, and release it slowly. Then repeat. \n\nWhen she finally calms down, Sandra leans back to meet my eyes. Her face is flushed and bloated from crying, her eyes red-rimmed, her lips swollen... she looks more vulnerable than I'd ever seen her before. The need to protect her surges inside me, choking me in its intensity, and I move to embrace her again, but her hands on my chest stop me, pushing firmly to keep me in place. My head jerks back with surprise. \n\n\"Dan, I just need to know... I need to know you won't hate me if -\" \n\nHer voice trails off, but I hear the unsaid words loud and clear. 'If I decided to have an abortion'. I try swallowing, but my throat is dry as a desert. Can I promise her that? I want to reassure her, but I don't want to lie to her, either. When I finally manage to get my words out, it's not exactly the answer she was looking for, but the best I can do right now. \n\n\"Baby, I love you. I can't imagine not loving you. And I'd never hurt you - you know that, right? I'm - I'm going to take this up with Dr. Pappas, okay? Just to be on the safe side...\" Now I'm the one who loses his nerve mid-sentence. \n\nShe cups both my cheeks in her hands, looking at me a bit funnily. \n\n\"I know you won't hurt me, Dan. That's not what I meant - although if you feel you need to talk to Dr. Pappas about it then - yeah, you need to do that.\" \n\nShe halts and shifts uncomfortably in my lap. \"It's just - what you just said, about loving me, I'm... I'm scared that it's too good to be true. We're talking about making life-changing decisions, one way or the other, and I -\" she shakes her head, clearly frustrated. \"I don't know how we could possibly not screw this up.\" \n\nI take both her hands in mine and kiss each palm in turn before lowering them to rest between us, then admit ruefully - \"You know, I've had this mantra I've been using ever since... well, since then. Maybe you'd like to try it out... \" She raises her eyebrows questioningly. Looking into her eyes, feeling ridiculously brave as I lay my deepest secrets bare before her, I say it out loud. \n\n\"Trust and hope, baby. Trust and hope.\" \n\nShe smiles tentatively at me. \"Okay.\" \n\nJust like that. Her acceptance floors me; humbles me. But then, I've always known she was a better person than I could ever hope to be. I nod and swallow hard. \n\n\"Okay.\" \n\n* \n\nShe drags in a slow, shuddering breath. Then, slowly, her face seems to relax and then brighten, one light eyebrow arching up, tugging along the corner of her mouth into a knowing little smile. I watch the transformation, mesmerized, and almost miss her soft murmur. \n\n\"So, what you said before... was that just to get me to stop crying, or did you really mean it?\" \n\nI feel my own cheeks groove in response. I know what she's asking, but am not above making her squirm a little. \"Which part?\" \n\nHer confident facade melts, exposing the fragile hope underneath. \"Do you really love me, Dan?\" \n\nI nod solemnly. \"I do. Is that so hard to believe?\" \n\nShe leans close, so close that our noses almost touch; her eyes are fixed on mine, large and gleaming with her emotions. \n\n\"I love you, too.\" \n\nI feel her words warm my lips and then flow past, filling me with their sweetness, spreading heat down my chest to my belly, like a shot of brandy on a cold night, melting my insides. I gather her close, cup her warm cheeks in my hands, and kiss her. \n\nI mean to be gentle, but the moment our lips meet sparks flare between us, catching the heat, and we're both lost to the flames. She opens her mouth under my lips, her tongue inviting mine inside, and her hands pull me close. \n\nI can't get enough of her. I need to feel her skin against mine. I pull her clingy night shirt off of her in one urgent tug, discarding it uncaringly in my haste to fill my palms with her curves. Sandra's palms stroke up and down my sides, broadcasting her own need. Getting her panties off proves harder with her straddling my thighs, and I push her to stand in front of me, then hook my fingers in the elastic band at her hips. \n\nLooking up at her I catch a glimpse of her flushed face, partially hidden by soft blond curtains, and smile. Seeing her like this, turned on and impatient, it is all I can do not to tackle her to the floor. Instead, I force myself to slow down, take my time getting her panties off, enjoy the feel of her skin and the sound of her breath catching along the way. Yeah. That's more like it. \n\nFinally when the lace-trimmed white undies are pooled at her ankles, I brush my hand lightly along her inner thigh. She obeys my unspoken command and steps out of them, and her compliance sends a surge of need straight to my cock, which now strains uncomfortably against my boxers. Holding onto her hips I lean forward to place a soft kiss on the lower slope of her belly, just where it disappears beneath her blond pubic fuzz, and hear her sharp inhale. \n",
        "Our baby is in there, nestled inside her womb. \n\nThe thought is almost as overwhelming as it was a short while ago when I first learned of the fact, but now I push it resolutely to the back of my head. We said we won't think about it right now. Instead, I want this moment to be just about us; just Sandra and me, loving each other. I bend my head and kiss lower. \n\nHer hands grasp my shoulders and she spreads her legs wider, tilting her hips forward to give me better access. I use both my thumbs to part her folds and take a moment to feast my eyes before swiping my tongue all along her pink cleft, tasting her, and then fitting my mouth to her nether lips for a long, leisurely, intimate french kiss. \n\nHer scent and taste, her tangy sleekness, her smooth thighs, her fingers tugging at my hair and scraping my skull - sensations surround me, and I succumb to them. This is heaven. I bend even lower to let my tongue delve deeper, and my nose bumps her clit repeatedly. Her hands tighten in my hair as she grinds herself against my face, seeking a firmer touch. \n\n\"Harder, please...!\" Her voice is breathless. Horny. \n\nHer unexpected boldness excites me beyond belief. Suddenly there's nothing I want more than for her to take her pleasure from me, just like that. To tell me and show me exactly what she wants. To fucking make me give it to her. I slide down to sit on the floor, my shoulders against the front of the sofa, and tilt my head all the way back to meet her heavy-lidded eyes. \n\n\"Ride my face, baby. Show me what you need.\" \n\nShe gasps her surprise, but doesn't hesitate. Placing her shins firmly on the cushion on either side of my head she leans one hand on the back of the sofa, the other curling at my nape as she locks her eyes with mine, her swollen, pink pussy hovering mere inches from my face. \n\n\"Do it, baby. Ride me.\" I say, my voice too gruff to be recognizable. Whimpering, Sandra shifts forward, pressing herself hard against my open, waiting mouth. Almost immediately she starts grinding, rolling and tilting her hips until she finds that exact spot where my tongue, flattened and extended down towards my chin, rubs her clit just right... she pauses and shudders there, and I hear her faint 'oh fuck...' as she once more starts moving, now in tiny, controlled circles. My arms come up the backs of her thighs to support her, helping her to keep that exact position as she pleasures herself with glorious abandon, throwing her head back and moaning deeply. \n\nWhile I love eating pussy, I've never had a woman use me quite like that before. The thought makes me dizzy with desire, and the haziness is further enhanced by my limited breath. I take quick, erratic inhales whenever Sandra bucks or pauses momentarily, and try swallowing, though it's hard with the awkward angle my neck is tilted at. \n\nFleetingly I think, so this is what it feels like to get your face fucked; to struggle to breathe and to slobber all over yourself, not caring about a damn thing other than giving pleasure... Fuck, I get it now. Then all thought is gone when I hear Sandra's breathless plea: \"Please... fuck me with your tongue. I want to feel your tongue inside of me.\" \n\nPeeking up into her stormy blue eyes I stick my tongue out, and watch her lower herself onto it, taking it right into her sweet, tight hole, not stopping until her swollen lips press juicily against mine. My fingers tighten at her ass as I tongue-fuck her cunt, delving as deep as I can before retreating to lick just inside the spasming opening, then shaking my head hard from side to side, rubbing her clit purposefully with my nose. I can barely hear a thing over the wild beating of my own heart with her thighs pressing over my ears, but every few seconds a low, guttural moan or a high-pitched whine penetrate through, and I shudder with echoed pleasure. \n\nMy whole face is smeared with her sweet secretions. Her thick woman's scent is everywhere. Her movements become jerkier, less controlled, and then both her hands come to grab at the back of my head and she shifts back to rubbing her clit over my flat tongue once more, looking straight down into my eyes as she strains to reach her climax. \n\nShe hangs right there on the edge for a few precious moments, her clit throbbing, pulsating against my sensitive tongue... until finally she topples over, one hand shooting out to keep from falling as she shudders and heaves. She bucks against my face several times, until finally, when the last of her after-shakes subside, she collapses back onto her haunches, tearing her too-sensitive clit away from my mouth. She leans her head on her outstretched arms, too spent to do anything but breathe, huffing and puffing over my head. \n\nDespite my own acute need - and the growing discomfort in my neck and shoulders - I don't move. For one, I need a moment to digest what had just happened, probably as much as she does. I had just submitted to her. Let her top me. Let her use me like I was her freakin' fucktoy. And I absolutely loved every second of it. \n\nBut the other reason I am reluctant to move is simpler: my face is now cradled in between two hot, soft, sweaty breasts... hard to complain, even when my balls feel they're about to explode. I bring my hands up to her sides to fill them with those gorgeous globes, and slowly rub my cheeks in the deep, lush valley between them - getting some of her cream off my morning-whiskered cheeks in the process. \n\nI feel her breathless laughter bubbling inside before she leans back and it spills over me like sweet champagne: \"Shall I fetch you a towel?\" \n\nSmiling up at her I shake my head resolutely. \"Absolutely not, baby. I love each and every drop of your cum.\" To give further credence to my words I lick slowly between her breasts, lapping up the juice from her skin before taking one reddish-pink nipple into my mouth, swirling my tongue all around it, before letting it pop out only to do the same with its twin. \n\nSandra moans. \"Please, Dan...\" \n\nI chuckle, though having come down from the crazy high I was on a moment ago with Sandra riding my face, I am only too aware of the throbbing ache in my dick, still trapped inside my boxers, leaking profusely. \"I thought I just did?\" \n\nShe colors a bright pink, and I take pity on her. I tap her upper thighs and she takes the hint, moving back to stand on the floor, which brings her pussy to eye level once more. I am almost tempted to start all over again, but if nothing else, the painful stiffness in my neck reminds me I should probably move. Her hand floats before my face and I look up, see her smirk as she offers her help. I grab her forearm, and her fingers close securely around my wrist. Her grin widens, and she leans back and tugs me up, hard enough to make me bump into her, my swollen dick pressing into her soft belly through wet, stretched cotton. \n\nShe looks down, rubs herself slowly, maddeningly, against me, then leans back to meet my eyes, her smirk even wider. \n\n\"Anything I can help you with here, baby?\" \n\nI feel a growl rising from somewhere deep in my chest, and I reach around her to fill my palms with her fleshy ass cheeks, pressing her hard against me, spreading her nakedness obscenely from behind. I can feel her moist heat just millimeters from my fingertips, and my palms twitch, my nails pressing into her delicate skin. \n\n\"I need to be inside of you. Now.\" \n\nNodding, she pushes back from me. I drop my hands as, still holding my eyes, she starts walking backwards, slowly, her full breasts and hips swaying temptingly from side to side. Vixen. When I move to follow she reaches out to take my hand, winks, and then turns to lead us both into her bedroom. \n\nShe doesn't stop, but continues to climb up onto the bed, then flops over to her back, throws her arms above her head and spreads her legs wide. She lies there open, waiting, welcoming. The longing on her face takes my breath away. \n\n\"I'm all yours, Dan.\" \n\nIt's almost enough to tip me over the edge. Inhaling, I close my eyes briefly, reaching for that elusive thread of control... Fisting my hands as I grab onto it I exhale, and then consciously relax my muscles. Yes. I open my eyes to catch a glimpse of insecurity crossing her lovely face. Better hurry up there, officer. I watch her in unabashed adoration even before I expose the full extent of it by dropping my boxers, and am rewarded with a dazzling smile. God, she's gorgeous when she's horny. \n\nI crawl up right between her open thighs, not stopping until my body covers hers completely, my hands finding hers, lacing our fingers together above her head, my weight on my forearms, my dick's length pressing along her slit. Restraint tremors in my muscles that long to spring into action. Instead, I hold myself there, soaking up her warmth, her vulnerability, her need. \n\nHer eyes are wide open, letting me see every emotion behind them, holding nothing back. Her heartbeat flutters at the base of her throat. Her earlier sass and playfulness are gone, discarded like pretty, sparkly masks after a ball, revealing naked human beauty underneath. \n\n\"I love you, babygirl.\" \n\nShe melts. Her lips open and her knees spread wider, and I sink my cock into her, engulfing myself in her wet heat. I stay there, feeling her inner walls tighten exquisitely around me, fighting the all-consuming need to thrust by grinding slowly against her, while my lips and tongue mesh with hers for a wild, deep, demanding kiss. Sandra reciprocates with equal urgency, until finally we break for a much-needed breath, panting hard. Her eyes catch and hold mine. \n\n\"I love you, too.\" \n\nHer words send little firecrackers sizzling down my spine. Unable to resist any longer I start moving deep inside her, wanting to savor every sensation but unable to hold back my overwhelming need anymore. I bottom out with every stroke, and she arches up under me, moaning and then calling out in sweet agony whenever the swollen head of my dick bumps against her cervix. Her reaction fuels my own excitement and I fuck her harder, rejoicing in the way her fingers tighten between mine, her short nails biting into the back of my hand with each hard thrust - God, so deep... Fuck...! \n\nA sudden thought strikes me and I freeze, though the effort to do so leaves me visibly shaking. \n\n\"Sandra, baby, Is it... \" \n\n\"Safe?\" she asks breathlessly, and tries to smile, but her face is tight with her own need. \"Yes. It is. Absolutely. Don't stop, please!\" \n\n\"Thank God,\" I reply, surge deep into her once more, shuddering as her walls tighten and squeeze around me, then pull back only to thrust deeply again. And again. And again. \n\n\"Yes, yes, yes!\" she agrees enthusiastically, and I laugh out loud; and then all rational thought melts as I lose myself in her. \n\n* \n\n* \n\n* \n\nTuesday at Dr. Pappas, I wait impatiently for my appointment to start. With every day that passes I am more certain of what I want. I want Sandra, and I want our baby; I want us to be a family. \n\nWe haven't talked more about the decision looming on the horizon; not yet. We spent the rest of the weekend in bed, firmly focused on the present and keeping any thoughts of the future resolutely out of our minds. Then Monday came with a vengeance, Sandra's hectic work and school schedule making it even easier to avoid. Unspoken between us was the understanding that I needed to talk with Dr. Pappas and gain his perspective before we face the topic again. \n\nI am anxious. Shit, I'm downright scared. What if he says I can't do it? What if he says it's too big of a risk for me to become a father right now? Fuck, what if it's too big of a risk for me NOT to? If Sandra had an abortion, given my reaction to the idea... what if she did and I snapped again?! \n\nFeeling my throat constrict, hearing the rush of blood in my ears, I lean low over my knees, cup my hands over my mouth and nose, and focus solely on exhaling, making sure to empty my lungs all the way before drawing in my next shaky breath. \n\n\"Dan, you okay?\" \n\nFuck. My head shoots up to meet the good doctor's narrowed light-blue eyes, scrutinizing me over the rim of his small oval glasses. I was so deep inside my head I hadn't noticed the previous patient leaving the room, nor Dr. Pappas' soft-spoken invite to 'come in, please'. \n\nI realize I am panting, still bent over in my seat, although my eyes are locked with the shrink's. \n\n\"Anxiety?\" he asks matter-of-factly, and I curse under my breath before pushing up to stand before him. \n\n\"Yeah. Big time.\" I admit. Thankfully my heart rate had already slowed enough to stop the shaking, and my voice comes out almost normal. \n\nHe smiles, unfazed. \"Well, you've come to the right place then, Dan. Step into my office please.\" \n\n* \n\nWe sit down in our respective chairs, and Dr. Pappas walks over to fill a paper cup with water, then places it in front of me on the small coffee table. I reach for it and take a deep gulp, grimly satisfied with the steadiness of my hand as I do.  \n\nDr. Pappas takes his seat and waits another moment, possibly to see if I'd start talking on my own, but when I don't he clears his throat and takes the lead, as he usually does in our conversations. \n\n\"Want to tell me what just happened?\" \n\nI press my lips in annoyance, but nod. \"You saw what happened. I panicked. Again.\" \n\n\"Hmm. Yes, well, I thought you actually did very well out there.\" \n\n\"I - what?\" \n\n\"I saw you. Clearly you were agitated, but by no means out of control. You seemed to be doing one of those breathing techniques, right?\" \n\n\"I - yeah, I guess I was. But it wasn't a conscious decision... it just felt right to do it.\" \n\n\"That's great; we want it to become a second nature to you. And I'm glad to see it worked.\" \n\n\"I was so out of it I didn't hear you come out.\" \n\n\"True. For a very short spell. But you responded coherently when I spoke to you. You're sitting here having a calm and clear conversation with me not two minutes after the fact - whereas a few weeks ago you'd be bent over the toilet, trying to puke the anxiety out of your belly. I'd say you're doing remarkably well, Dan.\" \n\nI swallow hard. \"I - thanks. It didn't feel so good while I was at it, though.\" \n\nDr. Pappas chuckles. \"I'm sure it didn't. But it wasn't half as bad as it was before, right?\" \n\nI guess. \"Right.\" \n\n\"Good; remember that. It's important that you recognize your own embetterment. Now, how about you tell me what brought this little episode about?\" \n\nStudying my hands, I find myself mortified with embarrassment. I feel like a sixteen-year-old boy, about to tell his dad he'd just knocked up his girlfriend. I peek up and see him leaning back in his chair, his chin resting on his fingers. Ah yes. The silence-until-they-talk trick. How can it work every damned time for him?! With an annoyed grunt - aimed at both of us, really - I look straight in his eyes and blurt it out: \n\n\"Sandra's pregnant.\" \n\nThat gives him pause, I notice with a twisted little pang of victory. It takes my news a moment to sink in before he tilts his head lightly to the side and responds. \n\n\"Hmm. I see. Sandra's pregnant, and you're freaking out.\" He raises his eyebrows in question, though his voice states it as a fact. I nod. \"Well,\" he continues conversationally, \"I'd say that's a completely normal reaction.\" \n\nI bark my surprised laugh. \"Seriously? That's your professional view?\" \n\nAn answering smile tugs at his mouth. \"In fact, yes. It is.\" But then his look turns serious, his eyes intently focused on mine. \"You see, Dan, I would be very concerned if you were dancing with pure joy in my waiting room. Or if I found you in a state of blind rage. Or denial. Or indifference. But none of the above happened. You being scared, anxious - that means you grasp the magnitude of this reality, and that you recognize it's going to impact you, too, not just Sandra. So yeah, that's well within the range of normal reactions to this kind of news. In fact -\" \n\nHe stops, and to my astonishment I see a faint blush rise on the apples of his cheeks, peeking above his short-cropped grey beard. I just gape at him. \n\nShaking his head, clearly annoyed with himself, Dr. Pappas mumbles something incoherent before coming to some kind of resolution and meeting my eyes. \n\n\"I was going to say - in fact, that's just how I felt when my own wife got pregnant, some 40 years ago.\" \n\nI am stumped. Why would he tell me that? But then, I'm also curious. \"40 years ago? What were you, like, 20?\" \n\n\"Nineteen, yes. And she wasn't quite eighteen. It was a month after her graduation. We were going steady but not even thinking about marriage. It was... quite a shock. For both of us.\" His faraway look clears when he looks back at me. \"I'm sure you can relate to that feeling.\" \n\nI grin. \"Breaking the rules here with me, aren't you, doctor?\" \n\nHe shrugs, his cheeks still warm, but holds my eyes. \"Not quite breaking them, but maybe... pushing the limits a bit?\" His eyes twinkle at his own obvious choice of words, his face more open than I'd ever seen it, the invisible veil of professional detachment momentarily lifted. \"I really like you, Dan. And I'm rooting for you. Now don't worry, I'm not going to bore you with my life story; but I did feel like you could use that little piece of history as a... reminder, if you will.\" \n\n\"I - I'm not sure I follow, doc. A reminder of what?\" \n\nHe smiles. \"Of life being what happens while you're busy making other plans\" he quips Lennon's famous line. \"And for it being messy and scary most of the time, for most people. All I'm saying is, it's okay to freak out.\" he pauses, then prods further. \"How's Sandra feeling about this? Have you two decided what you're going to do yet?\" \n\n...and just like that, the shrink is back. Reluctantly I sit up straighter, allowing us both to slip back to our designated roles. It's probably for the best. \n\n\"No, nothing's decided. We're both quite... overwhelmed by it. We agreed to take a week to think before making any decisions. And I wanted to talk to you - Sandra agreed that was a good idea.\" \n\nHe smiles. \"I concur.\" and then his gaze sharpens once more. \"So, you freaking out - want to tell me what you're afraid of, exactly?\" \n\n\"I'm afraid I'd hurt them, one way or another.\" \n\n\"Them?\" \n\nI nod, swallowing hard. \"Sandra and - and the baby.\" \n\n\"How do you see yourself hurting them? What do you imagine could happen?\" he asks, and the soft-spoken words feel like a punch in my stomach. I gasp. \n\n\"I don't. I can't imagine hurting them. Not for a second. Never.\" \n\nHe quirks an eyebrow. \"Then, what are you afraid of?\" \n\nI drag in a shuddering breath. \"I'd never hurt them intentionally. But then -\" I shrug helplessly. \"I feel like I'd be damned if I did and damned if I didn't.\" \n\n\"Hmm. Explain that to me.\" \n\n\"Well if Sandra did decide to have the baby, I'm afraid I won't be able to be a father for him. That I'd somehow screw that up completely. And if she decided not to have it... it's just... devastating to think about it.\" \n\n\"Devastating is a strong word.\" he points out. \n\n\"I know.\" \n\n\"Hmm.\" he nods, considering me, then asks - \"is that how you felt when Naomi moved on? Devastated?\" \n\nHis blunt question strikes right at the core of my anxiety, stirring it up. I focus on puffing my exhales through pursed lips, and force myself to face my demons, right there in the cozy, tranquil room. \n\nIs that how I felt about Naomi moving on? Thinking back, I remember a numbing, all-consuming fear and an unwavering certainty that I had to change her decision; that if I didn't, everything would be over. I would be over. And I remember my rage, roaring inside my head at the incredibly cruel injustice of her slipping away from me just when I thought I got one final chance. I was furious. ",
        "\"No... not exactly.\" \n\n\"What was different about it, then?\" \n\nThe answer, when it comes to me, is crystal-clear, washing me with relief. I take the first full breath in what feels like forever; making the blood tingle in my veins with oxygen rush. \"I was so angry then. I felt wronged by the Fates. That's absolutely not how I feel when I think about Sandra getting an abortion.\" \n\n\"What do you feel then, when you think about it?\" He asks quietly. \n\nI need to blink a few times to ease the prickling behind my eyes. \"It's just - sad. So sad that it hurts. Physically.\" \n\n\"Hmm. I can see that. I can see your pain; I can hear it in your voice. Now I know this is difficult, but I'm going to ask you to stay with that feeling for a moment longer. Stay with your deep sorrow at the thought of Sandra getting an abortion. Be there in your mind. Let's say it just happened. Where would you be while she does it? At home? At the clinic with her?\" \n\n\"I'd go with her.\" I know that with a certainty. \"She can't be alone there... I'd go with her, but I don't think I'd be able to - to go into the room while... \" I choke and cough. Dr. Pappas nods. \n\n\"Okay. So imagine you're just outside the doctor's office, sitting in the waiting room, and you know what's going on in there, behind the closed door.\" \n\nIt's hard to breathe. I make myself count to three on every inhale and exhale like I'd sometimes do when I go jogging; it works. Dr. Pappas studies me mutely, letting me struggle through it without comment. When I meet his eyes, he continues. \n\n\"And then Sandra's coming out the door, and you know that's it's done. It's all over. What's going through your head right now?\" \n\nImagining it in my mind, I am overwhelmed with emotions - grief and helplessness, but also, surprisingly, a renewed surge of fear that almost knocks me over in its intensity. \"I need to know that Sandra's okay. That there were no complications...\" my belly drops as horrible images flash in my mind. Sandra's face growing pale, collapsing, bleeding... \n\nOnce more I find myself bent over my knees, practicing those damned exhales until the buzzing in my ears recedes, and I pull up slowly to meet Dr. Pappas's calm, yet intent, stare. \n\n\"So, what do you think you'd do just then?\" \n\nI shift in my seat uncomfortably. \"I... I'd probably fuss like a mother hen, and make a total fool of myself.\" \n\nDr. Pappas smiles. \"Yes, I can imagine you would.\" then, gently, he adds: \"Dan, I want you to remember this was just an exercise. Having you imagine this scenario doesn't make it any more real, or any more probable, than it was before. It is a possibility, but please remember that it hasn't really happened, at least not yet. Nothing's changed from the moment you told me she's pregnant, and has yet to decide what she's going to do about it. Okay?\" \n\nI swallow hard. \"Okay.\" then after a moment I ask - \"Why'd you ask me to do it?\" \n\nHe considers me thoughtfully before answering. \"Well, many times, I find it useful to have my patients play out their worst fears all the way through, in the safe environment of my clinic. You see, most of us try to shy away from our fears because thinking about them is... well, scary. Terrifying. But in my experience allowing ourselves to really follow them through in our minds makes them much more concrete - and therefore, manageable.\" \n\nI nod, though in truth I'm still not sure I understand. \"Okay.\" \n\nDr. Pappas gives me an encouraging little grin. \"I want to commend you for really allowing yourself to be there in that moment in your head, Dan. That was very courageous. And I'm honored that you trusted me enough to do it.\" \n\nI clean my throat. \"You've earned that trust, doc.\" \n\nHe dips his head in recognition. \"Thank you for that. And having seen and heard you just now, it seems obvious to me - and I hope that to you, too - that your fear of hurting Sandra if she got an abortion is unfounded. I don't think you'd hurt her, even if it does make you profoundly sad, and feeling deeply hurt yourself. Do you?\" \n\nI shake my head, a little dazed, but nonetheless reassured. \"No. I don't believe I'd hurt her.\" \n\n\"Good.\" he says with quiet satisfaction, and gets up to take my almost-empty water cup, refill it, and place it back in front of me. \"Do you need a break, or can you handle continuing this conversation, Dan? We still have some time left today, but I know this must have been tough.\" \n\nI drink the proffered water, welcoming the blessed, cool relief down my scratchy throat. Looking up at the clock I see there's still over twenty minutes left. Wow. \n\nI stand up. \"I just need a minute, I think. Is that okay?\" \n\n\"Sure; I'll step out to give you a bit of space, and will be back in a few, okay?\" \n\n\"Yeah, sure. Thanks.\" \n\nDr. Pappas leaves the room, the door clicking shut behind him, leaving me to look around me in wonder. Walking over to the window I squint my eyes against the glare coming in through the thin blinds. Peeking out from between them, the world outside seems strangely normal: people walking down the streets, cars driving by, unaware of the magic that just happened in the small, unassuming clinic on the second floor of a grey, boring office building. \n\nThere's a soft knock on the door, and then Dr. Pappas is back in the room, walking over to me, laying a fatherly hand on my shoulder. \n\n\"Ready to continue, Dan? \n\n\"Yes I am, doc.\" \n\nWe both take our seats, and the shrink dives right back into the conversation. I smile a little at that. I really like that about him; his no-nonsense, let's get to business approach. I find myself, not for the first time, thanking my lucky stars for having him as the psych consult back at the hospital when we first met. \n\n\"So, Dan, let's turn to the other fear you mentioned, about how you're concerned you'd 'screw up being a father' - how do you mean?\" \n\nAlright, I guess he's not going to go easy on me in the time that we have left today, either. I don't answer immediately. Instead I take a couple of sips from my refilled water cup, stalling. Finally I give it a try. \"I dunno... maybe - flipping out again sometime in the future over some stupid trigger. Getting violent with either Sandra or the baby. I can't risk that, doc. I just... I can't.\" \n\n\"What do you think could make you flip out on them? Again, try to imagine such a scenario.\" \n\n\"I -\" I start, but then trail off, searching my mind. Nothing comes up. \"I don't have one in my head. I just know it happened in the past, with a woman I loved. The risk is there, and I can't hope it away.\" \n\nDr. Pappas nods. \"Right. Let's revisit that, then. We talked a lot about your incident with Naomi; remember what the root cause of that was? Not the trigger, but the underlying fear that drove you to that act?\" \n\n\"Well, I... I guess I was afraid I'd never be a man again. That the last thread of hope for being the man I wanted to be, was just... cut.\" \n\n\"Right. It was an existential crisis, coming at the tail end of a long, downward-spiraling depression that started with your inability to have children with your wife, then made worse by your caving in to your father's demand for a divorce - so that you'd be free to produce offspring with someone else, though you hadn't actually done that. And finally he got ill and you basically had to watch him slowly die, without the two of you ever resolving those issues between you. And on his deathbed he gave you this ray of hope; said he approved of you getting back with Naomi - but then you discovered she had actually moved on with her own life.\" \n\nHe stops, waiting for my confirmation. At my stiff nod he continues. \"So, your hope to 'be a man' was threatened. You felt invalidated in the most fundamental of ways; in your mind, you were fighting for your life. Remember?\" \n\n\"In my sick mind, you mean.\" I state flatly. \n\nHe bows his head, conceding. \"In your then-sick mind, yes. But we've talked about that, too. Having had a mental episode doesn't make you crazy forever. It was an acute situation, but you're on your way to recovery. And the fact you suffered it doesn't mean you'll forever have this sword laid across your neck. If I believed that were the case, you'd be in a closed ward at a mental institute.\" \n\nHe steeples his fingers again, considering me as I struggle, as always, to accept his reassurances in that regard. After a moment, he adds lightly: \"In fact, I think having a baby could be very good for you.\" \n\n\"How come?\" I ask skeptically. \n\n\"Well, being a father would give you a new purpose in life, wouldn't it?\" \n\nI nod emphatically. \"Oh yeah.\" If I were to become a father... that would become my number one priority in life. Forever. I can feel myself getting pumped, energized, just thinking about it. Damn that's exciting! \n\nDr. Pappas looks at me mutely, letting the thought echo. After a while, he speaks again. \"Right. I believe becoming a father could help you heal, in that it could help you rebuild your sense of identity and self-worth. So let's talk about some of your other fears. What else scares you about having a child? \n\nI shrug, feeling an ironic little smile break the tension on my face. \"Well, the usual stuff, I guess. Not wanting to make my kid miserable - like my father made me.\" \n\nDr. Pappas grins back. \"Ah, yes. That is very familiar territory in this room.\" And then adds - \"and in your case, I've already learned some of the ways in which you feel your father had failed you. Let me ask you this, then: what were the good things you got from him? In what ways was he a good father to you? What did you learn from him about being a father that would help you be a good father to your own child?\" \n\nThe unexpectedness of his question jars me, as memories - good memories - spring to life in my head, so swiftly and intensely that they knock me over. I slump back in my seat, trying to sort them out in my head. \n\nMy father giving me piggyback rides. Teaching me how to ride a bicycle. Coaching my Soccer Little League team. Quizzing me before my high school finals. Buying me condoms the day after I introduced my first girlfriend, telling me it was my responsibility to keep her safe. Holding me tight by my mother's fresh grave, saying the words I needed to hear not to fall apart. Beaming with pride the day I finished the Academy. \n\n\"Dan?\" \n\nI open my eyes to re-focus on Dr. Pappas, who's leaning forward in his seat, looking at me closely. I rub both hands over my face, and am startled to find my cheeks wet. Fuck. Have I been crying? \n\nI clear my throat, pulling myself back to the present. \"I - what was the question again?\" \n\nHe repeats himself, his tone gentler than before, but still insistent: \"In what ways was your father good for you? From the look on your face it seems there were a few that come to mind?\" \n\nI shake my head, unable to meet his gaze. \"I feel like I've betrayed him, having told you so much about him, yet none of the good stuff.\" \n\nDr. Pappas' smiles apologetically at me. \"That would be my fault, not yours; I'd steered our conversations that way. Nevertheless, now is your opportunity to do him justice. Go ahead.\" \n\nNodding, I grapple with emotions that had been suppressed for far too long. I feel fresh tears sliding hotly down my cheeks, the unfamiliar sensation oddly comforting. Liberating. \"He loved me. He cared. He was involved in my life, had spent time with me. He showed me how to be a good man, how to stand up for my principals, how to live by my morals. He was proud of me...\" I stop, choking, and then continue with a grimace. \"Except for his obsession with my producing a son to carry on the family name. I think that one was the only real disappointment he had in me. But it was a huge one. It overshadowed everything else.\" \n\n\"Why do you think it was so important for him?\" Dr. Pappas issues an understated challenge. \n\n\"I don't 'think' it was important, I know it for a fact. He told me so, many times over.\" I answer, pissed. \n\n\"Okay. Why, then?\" \n\n\"Because if I didn't, the family would end there. There would be no continuation for it. All those generations before us... there would be nobody to carry on the name.\" \n\n\"So what?\" \n\n\"Excuse me?!\" \n\nDr. Pappas chuckles. What's so freakin' funny?! I feel my hackles rise, which only seems to deepen his amusement. \"I said, 'so what?'. Say there are never to be any sons to carry on the Moreno name. What does that mean? How does that negate the lives and contributions of those past generations?\" \n\nI stare at him blankly. \"I - I don't know. It doesn't. I - I haven't thought about it like that.\" \n\n\"Hmm.\" \n\nWe both fall silent; Dr. Pappas leaning back in his chair, me still reeling with thoughts, keeping my head down. 'So what' indeed? Suddenly the whole issue seems ridiculous in my mind. Why should it have been such a big deal for my father? Why allow it to define our relationship, be the only measure for my worth as a son to him? \n\nAfter a while Dr. Pappas speaks up. \"Let me suggest something, Dan. Now I don't know if this is true or not, but it is a possibility I would like for you to consider.\" \n\n\"Em, okay.\" \n\n\"You see, for many people, the idea of 'continuing the family name' isn't about the code of honor. Not really. Many times it seems that it's actually about facing their own mortality, coming to terms with it by finding a way to be part of something bigger. I want you to consider this could be how your father saw it: a way in which his memory would live on for generations to come. There is comfort in that thought. It makes a man's impending personal demise seem less... final.\" \n\n\"Okay...\" \n\nBut he continues without pause. \"Or, it could simply be something your father grew up with - like an axiom - something that he never questioned but had accepted to be true, and passed on as a truth to you. Either way my point is, it is your choice whether or not to subscribe to the same belief. Just like it is your choice whether or not to see yourself as a failure to him, because you have not continued his family name. Can you see that?\" \n\nI stare at him for a moment. This new perspective is so strange it feels like the floor under my feet had tilted so the whole world presents itself to me in a new angle. Finally, slowly, I nod. \"Yeah. I think I can.\" \n\n\"Good.\" Dr. Pappas smiles, and then looks up at the clock. \"I'm sorry to stop here, but my next patient is already waiting outside. Shall we continue on Friday?\" \n\nI get up to my feet, half-surprised to find myself steady. \"Yeah, sure. Looking forward to it.\" I walk to the door, and turn to look at him again. \"Thank you, doc. Today was... eye-opening.\" \n\n\"I try.\" he answers wryly, and smiles. \"You did really well today, Dan. Keep up the good work; I'll see you on Friday.\" \n\nWith another curt nod, I leave his room and close the door quietly behind me. \n\n* \n\n* \n\n* \n\nBetween the different handyman gigs that I manage to secure and my volunteering at the shelter, my schedule starts filling up. Still, I have some stretches of free time which I dedicate to online research, specifically on the topic of safe play during pregnancy. \n\nI know I'm getting ahead of myself; nothing's been decided yet. I know I may be setting myself up for a huge disappointment. A heartbreak. And yet I find myself googling away - thinking the NSA would have a field day intercepting my search terms, like \"making a pregnant sub squirt\" - reading up blogs, pouring over lifestyle community websites, clipping and pasting important tips and notes into an ever-growing file saved to my computer for easy access. \n\nMost of it relates to later stages of pregnancy, where the woman's growing belly makes it harder to get into or hold some positions. Overall, the general message seems to focus on using common sense: don't do impact play right on the belly. Make sure blood flow and airways are not obstructed, as that may cause stress to the baby. Pay extra-close attention to your sub's physical reactions and immediately stop your play with any sign of cramping, vaginal bleeding, hyperventilation, or fainting. Be sure to keep her well-hydrated, as dehydration may cause the onset of early labor. Remember hormonal changes may bring with them emotional changes; communicate more often, re-discuss your limits at close intervals, check in regularly within session. Plan for more frequent bathroom breaks. \n\nSome of these articles are accompanied by pictures; a few feature videos. One such image of a very pregnant subbie, bound to a St. Andrew's cross, her huge belly protruding, being made to cum by her Hitachi-wielding Dom, keeps playing in my head. I imagine Sandra just like that... face flushed and sweaty, curves exaggerated with pregnancy, nipples dark and large and dripping milk, vulva huge and swollen, clit peeking out, red and throbbing... pleading with me as I make her squirt over and over again... \n\nFuck. I am hard now, but jerking off holds surprising little appeal at the moment. I want to play tonight. I want to give her more, show her more... slowly, a plan starts to take shape in my head. \n\n* \n\n* \n\n* \n\nIt's just past 8pm, and we're snuggled on her sofa after dinner. She's lying on her side, her head in my lap facing away from me. I play absently with her hair and she rubs her cheek against my thigh in response, like a contented kitten. So sweet. I'm torn inside. On the one hand, I am burning to play; I have planned a special session for us that I know she'd love, and I can't wait to start. On the other hand, we haven't yet talked any more about her pregnancy and the decision that needs to be made. We said we'd give it a week, and half of that had already passed. Can I really ignore it for now? \n\nNo. Of course not. We can't have this unspoken HUGE issue hanging between us in session. I sigh deeply, and Sandra rolls over to her back, her eyes seeking and holding onto mine. \n\n\"You wanna talk?\" she asks, guessing at my mood, and I nod. \"Yeah.\" \n\n\"Okay... So, how was it with Dr. Pappas?\" \n\n\"Good. Very good. He said he was confident I wasn't going to hurt you. In fact, he showed me.\" \n\n\"Showed you? How?\" she's intrigued now, her eyes glinting up at me. \n\n\"Well...\" I'm embarrassed, but she looks at me insistently. I concede. \"He did this exercise with me where he had me play out the scenario of you...\" I choke the words out. \"of you getting an - an abortion. Like, really imagining it, how I'd be sitting there in the clinic waiting for you to come out, knowing you were having it done right then...\" Try as I might to keep my voice neutral, a shudder runs down my back as I re-live it - if not as vividly as this morning - in my head. \"He asked how I'd feel the moment you came out the door. What I'd think, what I'd say or do.\" \n\nShe looks at me apprehensively, but says nothing, just waiting for me to continue. I try to smile, needing to reassure her, and also to hide my unease at my own too-emotional response. \n\n\"What I felt while 'waiting' there for you was just... sorrow. Sadness. Grief.\" She just looks at me soberly, her eyes wide, waiting for me to continue. \"But when I imagined you walking through the door, all I could feel was fear - for you. I was afraid something was wrong and they didn't realize it. I imagined sitting you down and getting upset about them letting you up and about so quickly, wanting to have you stay for observation... it was a little ridiculous, to tell you the truth.\" \n\nHer tight nervousness softens into a smile, which then crumbles a moment later into a choked sob. \"That's - that's so sweet!\" And then she bursts up in tears. \n\nMy abdomen clenches painfully. Shit. I really hate seeing her cry. \"Shh... please don't cry baby... I didn't mean to make you cry. Shh...\" I lean down to gather her close in my arms, and she shakes her head against my chest. Inexplicably I think I hear a chuckle in there between her sobs. ",
        "\"I'm not crying! It's just those freakin' hormones...! I started sniffling over a terrible TV commercial this morning in the staff room. It's pathetic!\" \n\nShe looks up at me and I see her eyes - red-rimmed and smiling over her exasperated expression. I lean down to gently kiss her forehead. \"Poor babygirl... that must be really hard.\" I mean it, too. I'm suddenly very thankful for biology's absolute gender discrimination. There's no chance in hell I'd be able to handle being pregnant. I shudder at the thought. \n\nShe inhales sharply, her eyes locking with mine as I withdraw, and just like that the air between us crackles with awareness. \"Thank you\" she murmurs, her voice low. \"Thank you for not making fun of my crazy hormones. And thank you for wanting our baby. And thank you for not hating me, even in your imagination, for considering abortion.\" \n\nI swallow the lump in my dry throat. \"I could never hate you, baby. I told you that. I love you.\" \n\nHer smile wobbles. \"I love you too.\" a quick sniffle, and then - \"could we not talk about this any more tonight?\" \n\nI nod slowly. \"Sure. We've still got some time.\" I lean in to kiss her, and then ask carefully: \"You up for play tonight babygirl?\" \n\nHer eyes widen. \"Really?\" \n\n\"Only if you want to.\" \n\n\"I want to.\" she answers, softly but clearly. \n\nI smile. \"I want to, too. I've been doing some research... I think you're going to like what I've got planned for us tonight.\" \n\n\"Ooh, tell me, tell me!\" she's squirming in her excitement, propped on one hand now on the couch, facing me. I bend my head and take her face in both my hands for a deep, thorough kiss. \n\n\"Nope. You'd have to wait and see, babygirl\" \n\nShe sucks her breath, and blows it slowly, its damp heat tickling my chin. \n\n\"Yes, sir.\" \n\n* \n\n* \n\n* \n\nAuthor's note: \n\nDid you like this chapter? Tell me, please! VOTE, FAVORITE and COMMENT. Thank you!"
    ],
    "authorname": "small_town_girl",
    "tags": [
        "dominance",
        "submission",
        "mdom",
        "fsub",
        "switch",
        "face sitting",
        "pregnant",
        "romance"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/hitting-the-bottom-ch-09"
}