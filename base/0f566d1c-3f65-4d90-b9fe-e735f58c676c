{
    "title": "Necessary Distractions",
    "pages": [
        "Another day, another story pops into my head at the most inopportune moment possible. I swear my muse is conspiring against me. The last time I need a story idea is when I am in a meeting debating which feature to prioritise for our next sprint.\n\nNevertheless, here it is. I hope you like it. Please do consider dropping a vote and a comment on your way out. Tell me what you liked, and perhaps more importantly, what you didn't.\n\nA vote of thanks to my editor, Bramblethorn, and my beta readers, KatieTay and Vix_Giovanni. The end product has been greatly improved by their input.\n\n\"To live in hearts we leave behind<br >Is not to die.\"\n\n- Thomas Campbell\n\n<p align=\"center\">* *</p>\n\nPROLOGUE\n\nThe first thing Kylie saw when she opened her eyes was the dazzling curtain of neon light streaming in through her large windows onto the ceiling. It took a few seconds for her to adjust to her state of semi-wakefulness before she realised what had disturbed her sleep.\n\nHer left hand groped clumsily in the darkness at her bedside table. She knocked over a few things before eventually getting to her phone which would not stop ringing.\n\n\"Who the fuck thinks this is a good time to call me?\" she thought.\n\nSakura? Unlikely. She had made it clear they were no longer an item. Still, calling up at ungodly hours would be like her.\n\nMr Fukuhara? No. She wasn't late on any deadline that she was aware of.\n\nKylie put on her glasses and looked at the caller ID on her screen. It was not her needy on-again off-again girlfriend or her overly demanding creative director. It was an entirely unexpected name calling her from fourteen time zones away.\n\n\"Dad?\"\n\n\"Kylie,\" her father's voice was terse. \"It's about grandpa...\"\n\n<p align=\"center\">* *</p>\n\n\"I wouldn't order that.\"\n\nKylie was almost doubled over, vacillating between a croissant and a brownie, when she heard the voice behind her. A woman wearing a headscarf looked at the display case she had been studying intently.\n\n\"Trust me, the food here is barely a step above what they give the patients.\"\n\nThe lady behind the counter fixed her with a glare, clearly not amused.\n\n\"Are you really hungry?\" the stranger asked. \"I could help with that. Whatever you do, stay away from anything you're currently thinking of eating.\"\n\nThe cafeteria lady coughed loudly and then fixed her sights once more.\n\nKylie stood up and eyed the source of this information. She wore a bright pink headscarf over her more sombre black dress. Her skin had a heavy Middle Eastern tinge along with her pointed nose and dark lips. Two emerald eyes, framed by shaped eyebrows and veiled by bushy lashes, completed the picture.\n\n\"Come with me if you want to live,\" she said in a passable Schwarzenegger accent. \"Something edible awaits.\"\n\nKylie followed her. They went through the side entrance.\n\n\"I'm practically saving your life. That food is likelier to kill you than whatever you come in with.\"\n\n\"Does my saviour have a name?\"\n\n\"Fatima,\" she said, not stopping as she walked to the intersection of West 57th and 10th. \"Does the damsel formerly in distress also have a name?\"\n\n\"Kylie. Kylie Strand.\"\n\nThey stopped outside a small building with Caff\u00e9 Nero helpfully displayed above the entrance.\n\n\"When I was in London, this got me through the days and nights. No joke. Whenever I had an all-nighter, I would need to pop down for one of these. Or maybe twenty. When I found out they had finally opened one right here in Manhattan, I had to come.\"\n\nLondon. That explained the hint of her British accent.\n\nFatima ordered and paid for a macchiato and a tea, despite her companion's mild protests.\n\n\"You can pay me back by telling me why you look like you're about to drop dead.\"\n\n\"Oh so you noticed,\" came the sarcastic reply. \"I literally got off a Narita to JFK red-eye less than two hours ago.\"\n\nThe coffee was invigorating to Kylie's tired body. She took another sip and surveyed the woman across the table.\n\n\"My eyes are up here.\"\n\n\"Sorry, I didn't get any sleep on the flight.\"\n\n\"You didn't get any sleep while being locked in a tin can for thirteen hours where you don't have any room to stretch your legs. Shocker.\"\n\n\"You seem perky enough for the two of us. What is your secret?\"\n\n\"You're drinking it, hun.\"\n\n\"It is rather good,\" she declared. \"Do you usually trawl hospital cafeterias for coffee dates? Or are you a sales rep for Nero?\"\n\nFatima laughed and took a generous sip of her own matcha infused goodness. There was something disarmingly carefree about her new friend.\n\n\"Sadly, I can hazard a guess as to what made you take a sudden flight all the way from Tokyo to New York.\"\n\n\"My grandfather,\" said Kylie. \"He slipped and fell in the bathroom this morning. Hit his head hard against the granite tub.\"\n\n\"I'm so sorry to hear that.\"\n\n\"My parents got him to the hospital immediately, but the doctors are not hopeful. My father called me up to let me know I should take the first flight over if I wanted to say goodbye.\"\n\nFatima held her hand and squeezed her palm. Kylie took another sip of the liquid ambrosia in her hand and smiled back. Her phone began to ring.\n\n\"Shoot! I should get back to my folks.\"\n\nShe came close to spilling the coffee when she got up and wedged the phone between her ear and shoulder.\n\n\"I'm paying next time. No arguments.\"\n\nAnd she was gone.\n\n<p align=\"center\">* *</p>\n\n\"Any news on your grandfather?\"\n\n\"He's still hanging in there, the tough old bird.\"\n\nKylie and Fatima were enjoying another cup of coffee each the next day. This time, there were also a couple of cheesecake and tarts on the table.\n\n\"You must have been close to him to fly out here on such short notice.\"\n\n\"I was,\" Kylie affirmed. \"He had the most entertaining stories. Growing up, my best memories were on his lap while he told me some amazing story. To me, he was a combination of James Bond and Indiana Jones.\"\n\n\"Oh really?\"\n\n\"For sure. I mean, I'm sure there was a good amount of embellishment for my benefit. But still, he had an amazing life. He fought in Normandy. He fought in the early part of Vietnam. He became a reporter and travelled the world. He snuck under the Berlin Wall multiple times. Just to name a few of his stories.\"\n\n\"Sounds like an eventful life.\"\n\n\"Damn straight. He survived two wars, four coups, four dictatorships and God knows how many near misses in active war zones only to finally meet his end from a fall in the bathroom. He'd laugh till he died if he could right now.\"\n\nKylie paused to stem the flood of memories. By the fireplace at his cabin in the Adirondacks. On the deck of his boathouse in Sheepshead Bay, looking out at the sea. J Henry Strand, or Grandpa as she had known him, had always been such a larger than life figure to her. To see him reduced to a small old man with tubes running in and out of his body and attached to a beeping machine was a shocking incongruence her brain had not quite adjusted to.\n\n<p align=\"center\">* *</p>\n\n\"Still hanging in there. Grandpa defies the doctors for the third day.\"\n\n\"Are you sure there isn't any hope?\" asked Fatima, trying the breadsticks for a change.\n\n\"The nice doctors in white coats don't think so. I think Grandpa just wants to organise one more family reunion before he goes. My aunts and their families have flown in from Florida, Minnesota, even as far as Canada. I met my cousin in person for the first time since his wedding five years ago.\"\n\n\"There's always a silver lining. Our imam says that sunlight wouldn't be as pretty if there wasn't night when we miss it.\"\n\nKylie wore a Black Sabbath tee. Her long black hair came down past her shoulders in unruly curls and melded into the fabric. She adjusted the plastic-rimmed glasses up the bridge of her nose.\n\n\"You could see a lot more of your family if you stayed on this side of the Pacific.\"\n\n\"I wish I could,\" Kylie sighed. \"Maybe I will some day. But not now. Not when I am just starting to make a name for myself.\"\n\n\"What do you do in Japan?\"\n\n\"Let me show you,\" she said and took out a writing pad and a pencil from her backpack. She put them down and carefully scanned their fellow patrons. \"Pick someone. Any one.\"\n\nFatima looked around before settling on a woman with a jaunty beret angling across the top of her head and covering her left ear. The excessive amount of makeup went with the dazzling sequins along her neckline.\n\n\"Her,\" she whispered at her friend, who was already scribbling away. She tried to peer over the top of Kylie's pad, only to be admonished.\n\n\"No peeking.\"\n\nA few minutes of furious pencil on paper later, Kylie seemed satisfied. She pushed the pad across the table with a contended smirk.\n\n\"The likeness is uncanny.\" This was clearly not taking into account the large eyes, the stylized face. Not to mention what appeared to be a military uniform and a massive gun slung across her back.\n\n\"First Lieutenant Rhea Stavros of the Seventeenth Royal Galactic Regiment sent to fight against the invading Brasken army on the far side of Arcturus. She swears like a sailor and takes zero prisoners.\"\n\n\"That was going to be my first guess.\"\n\n\"Look at the face, though. The core of it is her,\" she said, pointing to the unwitting subject of her art. \"Then I added a few extra touches.\"\n\nMuch the same way Michelangelo added a few extra touches to a block of marble.\n\n\"I'm impressed,\" said Fatima, taking a long sip of her brew of choice.\n\n\"I started off making the artwork for graphic novel adaptations of comics and fantasy series. It was fun for a while, but I could hardly do anything original. I spent most of my time here bringing other's works to life. Then one day, I got a call from one of the biggest anime studios in Tokyo. Apparently, someone had seen my stuff and wondered if I could make some original manga for them. I was in Tokyo within the month and have been there ever since.\"\n\n\"So you're a full time manga artist?\"\n\n\"I usually prefer mangaka, but yes. I have so much more freedom to put whatever storyline I want onto the page. Half of what I put out would be censored in America, or at least given an absurd adult rating.\"\n\n\"I promise not to nark you out... and I'm totally keeping that,\" said Fatima in a conspiratorial tone, quickly putting the drawing into her purse. \"We must save Lieutenant Stavros from her greatest adversary -- prudes.\"\n\n\"All this while, you've let me talk about myself. What about you? What do you do?\"\n\n\"Nothing nearly as interesting as a mangaka in Tokyo, let me assure you.\"\n\n\"Well, it must be something interesting if it keeps you in such high spirits every day.\"\n\nFatima paused to finish the last of her coffee. It was merely a lull before another one was ordered.\n\n\"I used to work for a mid sized investments management firm in London, Hastings and Sellers. They got acquired by BlackRock, and they transferred me back here, to the mother ship. I'm an Investment Portfolio Manager in their big, ugly skyscraper in Midtown.\"\n\n\"Whoa! Whoa! Back up. Do you realise I have no idea what any of those words mean. What is an Investment Portfolio Manager?\"\n\n\"Something long and deathly boring.\"\n\n\"Come on,\" Kylie said, holding her palm and strumming her fingers against her friend's hand. \"I want to know.\"\n\n\"Let me put this in a way you will understand,\" Fatima said, a new cup of espresso appearing before her. \"If our conversation was in a story, and the reader somehow got interested in my character, they'd be bored to sleep by the time I finished my job description.\"\n\n\"That would be a shame, since you are such a delight.\"\n\n<p align=\"center\">* *</p>\n\n\"This is Grandpa in Lyon. The American troops had just liberated it from the Germans.\"\n\nFatima stared at the grainy black and white Polaroid on Kylie's tablet.\n\n\"This is him at the live broadcast when the whole country learned that mankind had taken a giant leap on the moon.\"\n\nJ Henry Strand was certainly a looker in his day. Barely in the frame, but he clearly outshone the rest of the assembled dignitaries.\n\nKylie swiped through multiple pictures on her phone. There were pictures from all over the world with the same man.\n\n\"There's a story behind each picture. Something Grandpa told me. One day, I'll make all of them into an illustrated book of short stories.\"\n\n\"I'll buy a first edition. He sounds like a fascinating man.\"\n\n\"He was... I mean still is, for the time being,\" Kylie said while cutting a small slice from her cheesecake. \"I spent a fortune digitising these prints so that people would not forget him.\"\n\nFatima held her hand and smiled.\n\n\"He's the one who encouraged me to follow my dreams, no matter how many eyebrows I raised. I mean, ultraviolent and hypersexual manga? It's not what most good parents would want to see their daughters get into. Not Grandpa though, who got me in touch with some of his publishing contacts. When I told him I was going to Japan, he was heartbroken, but wished me all the best anyway.\"\n\nFatima was still admiring the pictures when Kylie spoke up again.\n\n\"This coffee is really addictive. Now I almost can't function without it.\"\n\n\"My work is done,\" said Fatima, with an exaggerated flourish.\n\nTrue to her word, Kylie downed prodigious amounts of coffee in each gulp.\n\n\"Grandma's been by his side all this time. She's eighty-nine herself and recently had a knee replacement. Try telling her to go home and rest.\"\n\n\"Are you serious?\"\n\n\"People talk about growing old together,\" said Kylie wistfully. \"My grandparents did it.\"\n\n\"My parents too. All this time, they haven't left each other's side.\"\n\n\"Where are they?\"\n\n\"At the mosque. They spend more time praying there than they spend at home.\"\n\n\"All this time, I've just been talking about myself and why I'm here. I never asked you why you're here.\"\n\n\"I need to go,\" Fatima said suddenly, letting go of her hand. \"I remembered I need to be somewhere.\"\n\nIn a moment she was gone, her coffee still hot and giving off steam. Disguising her obvious avoidance was not her strong suit.\n\n<p align=\"center\">* *</p>\n\nFatima was nowhere to be seen the next day. Kylie checked out the cafe multiple times before staking out the waiting room. In the meantime, even more of her extended family made an appearance. Apparently, J Henry would not be denied one final family reunion.\n\n\"I haven't seen you in forever.\"\n\nHer eternally cheerful cousin was on hand. Stuart, his wife and their three children who were currently running riot all over the waiting room.\n\n\"They remind me of us around their age,\" he said. \"Oh to have the energy to run around carefree for all the time in the world.\"\n\n\"I miss it too,\" Kylie admitted. \"You sucked at it though. Literally the worst at hide and seek ever.\"\n\n\"That's only because I thought we were a team and shared all my super secret hiding places with you. To my utter dismay, the very next year, I find you have betrayed me and all my secrets to Uncle Blake's kid... what's her name?\"\n\n\"Caroline,\" she said. \"She's a doctor now in San Francisco. Paediatrician, I think.\"\n\n\"Yes, Caroline and her sloppy pigtails which would fall to pieces at the slightest touch.\"\n\n\"Not the slightest touch, Stu,\" Kylie reminded. \"You used to pull them until they came undone and she would get mad and chase you all around the estate with a spatula in hand.\"\n\n\"Yeah, they were fun times. What happened to the estate? Does anyone still live there?\"\n\n\"We had our last annual family reunion there fifteen years ago and hardly anyone showed up. I think that was a sign that the big place was too expensive to maintain. Dad and Uncle Howard sold it to some property developer and split the proceeds with all of their siblings.\"\n\n\"That's just the house. What about the gardens?\"\n\n\"A golf course now. Quite a high end one if you believe the internet.\"\n\n\"No fair,\" Stuart said. \"We ran around raising hell in that house for two weeks every year and then chased each other through those hedges until we couldn't walk any more. Now some rich stranger gets to play golf there?\"\n\n\"Well,\" said Kylie. \"That's what happens when we can't take care of the place any longer.\"\n\n\"But, that place was our childhood, Kylie.\"\n\n\"I know,\" she said and put an arm around his shoulder. They were rudely interrupted by a trio of kids arriving and nearly colliding with her.\n\n\"Aunt Kylie, Aunt Kylie, can you give us one of your comics? We loved the last one you shared.\"\n\n\"Of course, sweetheart,\" she said and tried her best to grasp all three of them in the same hug.\n\nSatisfied they had succeeded, the three sped off, almost knocking a janitor's cart over on the way. Kylie watched them as they turned the corner out of sight.\n\n\"Grandpa kept our annual reunion together. I still remember him carving five Thanksgiving turkeys the year of the storm. Hurricane Gloria was no match for our family's will. All of us, without exception, showed up. Because we are fucking Strands... or we were at least. We were Strands and Strands show up for each other.\"\n\n\"Everybody's so busy in their own work nowadays,\" Stuart said. \"I had just got out of a meeting with my business partners in Boston when I got the news about Grandpa and it took me four days just to make sure the others could cover my absence before I came.\"\n\n\"How is your business doing?\"\n\n\"Very well, thank you. Despite the recession, we manufactured and delivered the most auto parts in the whole of New England last year. If only...\"\n\nStuart stopped to sigh.\n\n\"I've always prided myself on staying ahead of the curve. I'm looking for a loan to help me diversify into EV parts and parts for self-driving vehicles. Not to mention expanding into the Midwest. It will require a lot of capital, but it's the next step we need to take. What I have right now puts food on the table, but might not in ten years.\"\n\n\"No banks helping out?\"\n\n\"Not in this economy anyway.\"\n\n\"Didn't Grandpa give you the first loan to get started?\"\n\n\"I tried returning the money with interest multiple times, but he was mortally offended by the mere suggestion of it.\"\n\n\"That's him in a nutshell for you,\" said Kylie. \"J Fucking Henry. Under his watch, we always kept up to date on one another and always saw each other on Thanksgiving. Now, it takes this for us to be in the same building once again. I'd say he planned it if I didn't know better.\"\n\nHer cousin rested his head on her shoulder.\n\n\"I miss him, Kylie,\" he whispered.\n\n\"Me too.\"\n\nA few minutes of silence passed between them when all the chaos of the hospital waiting room receded.\n\n\"I'd better see what the hellspawn are up to,\" Stuart said, getting up. \"I love them, but they can be a handful.\"\n\n\"Just wait until they are teenagers. Then they'll really drive you crazy.\"\n\n\"Please pick a wholesome family comic for them this time. If Claudia sees so much as a speck of blood or sex in it, she'll make sure I sleep in the garage.\"\n\n\"I'll try my best,\" said Kylie. She sighed and looked around. There were more familiar faces in the room than she had seen assembled at one place in years.\n\nBut there wasn't the one face she longed to see. The one face lovingly framed by a headscarf in the colour of the day.\n\n<p align=\"center\">* *</p>\n\nThe day rolled to the next and Fatima was still nowhere to be seen. It was at this time that Kylie wondered if she should have exchanged numbers. She replayed their last conversation and how her last question had clearly spooked her.\n\nEven more family had shown up in the interim. Each of them came with a barrage of memories.\n\nUncle Calvin, who had made enough quarters and nickels disappear behind her ear to rival the money vanishing feats of Bernie Madoff.\n\nAunt Bernadette, who brought no less than four husbands and potential husbands over the years to the annual gathering. Scandalous gossip followed her wherever she went. Not to mention she went through bottles of vodka like a hot knife through butter.",
        "Aunt Sandra, who they saw only between stints in rehab. She was the most attractive of all her siblings and could still turn heads in her sixties. She was permanently clean now. Fingers crossed.\n\nJoe, her third cousin, who was once an unstoppable ball of energy -- climbing every tree and rolling down every hill in sight. Evidently, he met and married a German woman, Johanna, during his time stationed at Ramstein Air Base. She had done what his parents had long given up on -- making him a responsible adult. Johanna looked heavily pregnant.\n\nThem and so many more. Her mind flipped through an album of memories. A highlight reel of her life rendered in vivid technicolour and all the people she had known and laughed with.\n\nShe sat at the cafe, the coffee having grown mildly tasteless without the company. Her sketchbook was filled with exaggerated versions of her family. Everyone she met became a piece of anime art captured on paper.\n\nShe wandered around the rest of the hospital. Doctors and nurses rushed from room to room. Some rooms had people with the patients, some with the patient all alone. None of them could match the number of people worried about J Henry Strand.\n\nMaybe she missed Fatima's smile and laugh -- a stark contrast to the morose reality of a hospital. Maybe it was something she said or did or a vibe she gave off unknowingly.\n\n\"Get a hold of yourself. You've known her all of three days and you're already worried over what she thinks of you.\"\n\nIf only she could listen to that rationalization.\n\n<p align=\"center\">* *</p>\n\nAnother day, another tense wait for her grandfather's passing. He had long ceded all his bodily functions to ventilators and bypass machines. Tubes ran in and out of his body. His pulse beeped steadily on the EKG but that was the only sound. His eyes remained closed and his expression remained calm, as if unaware of the maelstrom of worry coursing through all those around him.\n\n\"Hey, stranger.\"\n\nKylie looked up. A familiar headscarf-framed face looked back at her. Nerves were writ large on it.\n\n\"Here I was thinking you found a better coffee place.\"\n\n\"Never,\" said Fatima, visibly relieved. \"The coffee there is better than sex.\"\n\n\"I'm sorry if I was prying before-\" Kylie started, only to be dismissed by a wave of Fatima's hand.\n\n\"No, it was me. You were being polite, but I... didn't handle it well. What if I make it up to you with an extra caramel layered latte right now?\"\n\n\"Sounds like exactly what I need.\"\n\nKylie excused herself and within ten minutes, they were at their table of choice awaiting their overly pretentious coffee of choice. She looked on at Fatima anxiously before her look was returned with a smile.\n\n\"I'm okay. I really am. You don't have to worry about me running off.\"\n\n\"I have a confession to make,\" Fatima said quietly. \"I looked you up and it turns out you are one of the lead artists behind Salinger's Blade?\"\n\n\"There's a name I haven't heard in a long time,\" Kylie replied. \"I am. Rather I was.\"\n\n\"Why did you stop?\" whined Fatima. \"That is my brother's favourite anime. He begged me to try it and I got hooked as well.\"\n\n\"Always good to meet a fan.\"\n\n\"There hasn't been a new issue in almost three years now. You left it on a cliffhanger too.\"\n\n\"I've done other work since. Maybe some day I'll return to it.\"\n\n\"Please do,\" she beseeched. \"I still check Crunchyroll obsessively in the hopes of a new chapter. You have no idea how much it would mean to me if you could continue the story.\"\n\n\"You remind me of a teenage girl who once approached me on the subway. She cried and accused me of being a monster, all because the schoolboy character she had a crush on turned out to be the villain.\"\n\n\"People get attached to characters if they are done well. It's normal, natural even.\"\n\nShe took out a copy of the manga first edition.\n\n\"Khalid, my brother, special ordered it all the way from Japan. That was how much it means to him. Can you autograph it, please?\"\n\nKylie obligingly opened the blank last page of the issue.\n\n\"Your brother. Do you have a picture of him?\"\n\nFatima unlocked her phone and scrolled to a picture of them both. Khalid looked much younger than her, barely into his teens when the picture was taken.\n\n\"One moment,\" she said and started scribbling. Her friend waited patiently and partook in her brew.\n\n\"Khalid is much younger than me. About a decade and a half. I am less of an older sister and more of a fun third parent. So when he asks for manga from half the world away, I buy it for him.\"\n\nA few minutes went by. Kylie stole frequent glances at the picture on Fatima's screen. Finally, she finished and left an elaborate bit of calligraphy at the bottom.\n\n\"What do you think?\" she asked, handing over her impression of brother and sister on a page.\n\n\"He'll love it. I can't wait to show it to him.\"\n\n<p align=\"center\">* *</p>\n\nStuck at work today. Sorry, I can't make it.\n\nAt least this time she had a text message. Probably not the real reason why Fatima was away, but still something.\n\nKylie sat on the deck of her grandfather's boathouse in Sheepshead Bay. The deck at the back of the house went right to the water's edge. She had spent many afternoons of her childhood with her legs hanging off the edge, barely touching the water.\n\nWith the size and scale of the Strand relatives that had shown up, the hospital waiting room had proved to be woefully inadequate. Hence, the boathouse had to be hurriedly converted into a base camp along with several rooms at the Sofitel nearby. The Strands now awaited the inevitable demise of their patriarch in shifts at the hospital.\n\n\"Kylie?\"\n\nHer Aunt Gwen, technically J Henry's younger brother's daughter. She was well into her fifties, but it only showed on her face. Her body was statuesque, almost regal when she stood upright. Her bright sapphire eyes shone out of a mass of wrinkles. Tresses of silvery white hair came down to her shoulder.\n\n\"I haven't seen you since... I can't even remember the last time I saw you in person.\"\n\n\"Probably when Clinton was still getting blowjobs from his intern.\"\n\nA statement like that would have raised an eyebrow from anyone else. Not from Gwen though.\n\n\"I just came from the hospital,\" she said, her pack a day habit evident in her voice. \"I thought I was going to be too late, but Uncle Henry held out for me. He waited so I could say goodbye.\"\n\n\"Is he...?\"\n\n\"Still hanging in there.\"\n\nGwen reached into her designer handbag and pulled out an elegant cigarette case. She took one and held out the case for Kylie.\n\n\"Trust me, it's the best stuff.\"\n\nKylie obliged by taking one. She held it out while Gwen took out an even more ornate lighter and lit both of them.\n\n\"You're doing well for yourself.\"\n\n\"I am,\" affirmed Gwen. \"The magazine has the same number of page views as Vogue and the fashion brand is now a part of every major fashion week in the world. Paris, Milan, London... even New York this year. I'm even toying with the idea of getting into cosmetics.\"\n\n\"Well... if you're ever in Tokyo, give me a holler.\"\n\nKylie watched as she took a long drag of her cig and blew a thin stream of smoke out to sea. Her eyes followed the smoke gradually diffusing into thin air.\n\n\"Dad disowned me when I came out. Not Uncle Henry though.\"\n\nKylie nodded. The story was part of Strand family lore. Gwen coming out and admitting to being in love with a woman. Percy Strand not taking the news well at all. J Henry reading his own brother the riot act in front of all the assembled family members for his homophobia. It was the only time in recorded history that J Henry showed his Irish temper in front of his family.\n\n\"He didn't just accept me,\" Gwen went on. \"He walked me down the aisle and played the piano at my wedding. I'd give up the company I've built over the last thirty years just to hear Uncle Henry play the piano one more time.\"\n\n\"I was barely a toddler at the time and was kept far away from the fireworks,\" said Kylie. \"Dad filled me in on the details when I was old enough to understand.\"\n\n\"How is Annie doing?\"\n\n\"Hell if I know,\" shrugged Gwen. \"We split two years ago. She's a professor of Classical Literature in Geneva these days.\"\n\n\"You split?\" Kylie asked, her jaw hanging open.\n\n\"Yeah. Because of the sex.\"\n\n\"Sex?\"\n\n\"We were barely having it any more. I'm at work surrounded by glamorous fashion models wearing next to nothing all day. It takes all my self control not to jump them, but when I get back home, I have to lie next to my wife while she does the crossword? I didn't stand up to my Dad only to have my lady parts shrivel up like a prune later. I have needs too, you know.\"\n\nGwen made the most scandalous statements in the same monotone as a newsreader reporting traffic. She took out her phone and scrolled to a picture of herself with a stunning bombshell barely into her twenties.\n\n\"Margot. Icelandic father, French mother. She found us through a modelling agency. One look at her and I knew she was the one. I invited her to my apartment in the 16th arrondissement, and the rest as they say, is history. Her face is on every third billboard in Europe now and the likes of Dior, Versace and Gucci are falling over each other for her attention. I also have a pretty grad student who's doing her business major at the Sorbonne. I gave her an apartment she could never have afforded and she lets me stop by her new apartment once in a while.\"\n\nSlack jaw. Eyes the diameter of dinner plates. Gwen had that effect on the uninitiated.\n\n\"Oh don't be a prude like the rest of them,\" she said playfully, offering Kylie a fresh cigarette. \"You think rich, old men are the only ones entitled to trophy wives and mistresses?\"\n\n\"This is all just... I mean, wow...\"\n\nA few more unintelligible strings of syllables came out of Kylie before she took a deep pull on her latest cigarette to calm her nerves and collect herself.\n\n\"Speaking of relationships with women... I see you are still firmly in the closet.\"\n\n\"Gwen!!\" she gasped, instinctively looking around to see if anyone had joined them on the deck.\n\n\"Don't worry. It's just us gay lesbian homosexuals out here,\" Gwen laughed. \"Am I still the only one who knows?\"\n\n\"It's just something I don't advertise about myself,\" said Kylie, lowering her voice. \"I asked you way back because I needed help understanding it.\"\n\n\"I'm glad you did, but there is only so much I can help you without turning this into an Incest story on Literotica.\"\n\nAgain, tone of a bored newsreader, content of the most salacious kind.\n\n\"I mean, I do have relationships. Some longer than others.\"\n\nTaking another quick look around, Kylie scrolled to a picture on her phone of her and a Japanese woman wearing matching black fedoras.\n\n\"Her name is Sakura. Sakura Kurosawa. She works for FromSoftware, a major video game development company in Japan. We worked on adapting one of my manga for a game a few years ago.\"\n\n\"Go on. Don't skimp on the details now.\"\n\nIt was actually a relief to have someone to talk to about this.\n\n\"I don't know what her deal is. One day she's bringing me breakfast in bed, the next we're fighting tooth and nail in public over some imaginary grievance she has with me. In a few days, we patch things up and then it's only a matter of time until the cycle repeats.\"\n\n\"Sounds like a real drama queen.\"\n\n\"She likes attention. I mean, I love her and we get along well, in between fights, but God is she a lot of work.\"\n\n\"What does she want from you?\"\n\n\"Some grand public gesture usually. Holding her hand in public. Letting her kiss me at work. Coming out to our friends who consist mostly of people I work with.\"\n\n\"I almost see her point,\" Gwen mused, blowing a ring of smoke from her lips. \"But it's not up to her whether you come out or not. She can't make that decision for you.\"\n\n\"Exactly,\" said Kylie, louder than she had intended. \"Once you're out, you're out. There's no putting that genie back in the bottle. Every time someone meets you or Googles you or even talks about you, this is the first thing in their minds. I don't want to be defined by a label.\"\n\n\"Even if that label is something I fought for my whole life?\"\n\n\"I'm sorry... I didn't mean it like that.\"\n\n\"I'm kidding,\" laughed Gwen. \"It's not the eighties any longer. You can come out as publicly as you want now and it barely raises an eyebrow. I marched, protested and picketed half my life so you can smash as many pussies as you want, and you choose to deny yourself that. I'll never understand you millennials.\"\n\nKylie looked down until she felt a bony finger on her chin. She looked up to see her dear Aunt almost at her face, a broad smile across her wrinkles.\n\n\"You'll figure it out, kiddo. I'm sure of it.\"\n\nShe smiled and planted a kiss on Kylie's forehead.\n\n\"I wish you would stop by Paris some time. I'd love to show you my new condo. You can see the Eiffel Tower, the Seine and the entire Champs-\u00c9lys\u00e9es in the same view from my balcony.\"\n\n\"All this from the same woman who solemnly swore she would never go further east than 14th street.\"\n\nThere was a shared chuckle.\n\n\"Of course, I could never have seen that view if not for Uncle Henry. After my asshole Dad told me I was going to Hell, Uncle Henry came over and told me how brave I was. I was in a dark place and he helped me past it, bit by bit. Him and Aunt Fran gave me a place to stay after I was told not to come home ever again. He was more of a father to me than my actual father could ever hope to be.\"\n\n\"And yet he lies on the verge of death while Percy Strand lives on.\"\n\n\"Percy Strand lives all by himself in a retirement community in Winston-Salem. He will die a bitter, lonely old man and no one will even know for a few weeks until the smell bothers them. Uncle Henry will die surrounded by his family who love him and will mourn his passing. There is a difference.\"\n\nKylie took a deep breath and processed what she had just heard. Her aunt rummaged inside her cavernous handbag for a few minutes until she found two tiny bottles of wine.\n\n\"Here,\" she said, handing one over. \"Let's make a toast.\"\n\nKylie took the miniature bottle and held it up to the dull red sunset over the horizon.\n\n\"To J Fucking Henry,\" they yelled in unison and drained their bottles in one gulp.\n\nGwen thought to ask about the four times Kylie's phone buzzed to let her know she had a text and why she made the strenuous effort to ignore them, but chose not to.\n\n<p align=\"center\">* *</p>\n\n\"You're getting really good at this game of hide and seek.\"\n\n\"If it's any consolation, I really had a lot to do at work.\"\n\n\"I'll decide if it's any consolation when we meet.\"\n\n\"Tell me where you are and I'll pick you up.\"\n\nKylie said the address of the boathouse into the speaker and ended the call. It was calming to hear the self-assuredness in Fatima's voice. It was a distinct contrast to her own brand of neurotic over-analysing of everything she said.\n\nMaybe Gwen was right. Maybe she should embrace the way she felt.\n\nDon't be mental. It will bring the unforgiving glare of a spotlight and so much more attention than you can handle.\n\nKylie sighed, acknowledging the truth in what the little voice said. But she missed her new friend. She missed the way she moved strands of hair and tucked them behind her ear. She missed the glint in her eyes when she laughed. She missed the way she could talk to her for the first time and yet feel like they had known each other for years.\n\nShe wrestled with her thoughts for a few more minutes before she got another call.\n\n\"Come outside.\"\n\nShe looked out the front gate to see a rider on a bike waiting. Curiously, she approached, noticing the rider wearing a black leather jacket atop a Ducati.\n\n\"Impressed?\" Fatima asked, lifting the visor of her helmet.\n\n\"My mother warned me once not to get onto the back of a motorcycle.\"\n\n\"I won't tell her if you won't,\" she replied, lowering her tone to a conspiratorial whisper. \"Your act of rebellion will be our little secret.\"\n\n\"Seriously though,\" grinned Kylie. \"You look like a bad guy's henchman in an action movie.\"\n\n\"Funny you say that. I just chased Tom Cruise around Brooklyn on my way here.\"\n\n\"No way,\" Kylie grinned. \"Those guys survive like ten seconds of any chase scene before meeting their inevitable, yet spectacularly creative, deaths.\"\n\n\"A moment of silence for all the motorcycle borne assailants who have met their ends in action movies over the years.\"\n\nThey barely got through the moment without giggling. Kylie got behind Fatima and held onto the rear end of her seat.\n\n\"And now... we fly.\"\n\n<p align=\"center\">* *</p>\n\nThe bike came to a screeching halt. Kylie had a death grip on the back of her seat with one hand, the other similarly wound around Fatima.\n\n\"Cutting. Off. Circulation.\"\n\n\"You deserve it,\" said Kylie with a playful punch to her arm.\n\nFatima lifted her visor and led the way out of the parking garage to the apartment lobby. Her companion trailed behind, smoothing out her shirt. The receptionist and the doorman waved in recognition as they entered an elevator.\n\n\"It has been years since I've been on Columbus Avenue. It's changed a lot from what I remember.\"\n\nFatima took off her helmet and tucked it under her arm. She shook her head and threw her hair back with a shrug. They had barely gone up a few floors when she became aware of the stare Kylie had fixed on her. It was almost as if the intensity was somehow magnified through her glasses.\n\n\"It's not polite to stare.\"\n\n\"Sorry. It's just the first time I've seen your hair loose.\"\n\n\"You didn't seriously expect me to wear a headscarf under my helmet.\"\n\nFatima's raven black hair was silky smooth. Not even the most expensive salon in Hollywood could give hair her natural lustre.\n\n\"May I?\"\n\nKylie reached out and ran her fingers through the hair. It ran through her fingers almost like fluid. She moved her fingers along the length of her hair, revelling in the velvety feel before finally clutching a fistful in her hand.\n\nFatima's eyes jerked open in shock until she found herself mere inches away from Kylie. So close she could make out each irregular fleck and see her own reflection in her eyes. So close she could feel her hot breath on her face. So close she could see her lips tremble, trying desperately to suppress the words trying to burst forth.\n\n... And then she waited while the elevator rose. Waited with her hair firmly in another's hand. Kylie second-guessed herself. This was so unlike her, yet this was something she wanted to do... she needed to do... and yet all the voices of self-doubt reared their heads in unison to mock her valiant effort.\n\nOh fuck! Did I misread the whole thing? Maybe she invited me up here to talk more about manga? Fuck! Fuck! Am I trying to kiss a straight woman?\n\n\"Fucking finally,\" Fatima whispered, quelling her doubts. \"Don't lose your nerve now.\"\n\nJust as Kylie leaned forwards, they were interrupted by a musical ding. To their mutual horror, the metal doors slid open showing an elderly woman with a broad smile.\n\n\"Mrs Ohanian,\" said Fatima, hurriedly separating herself from Kylie. \"Nice to see you walking on your own again.\"\n\n\"Fatima, sweetie,\" she said. \"How are you doing?\"\n\n\"As well as I can.\"\n\n\"All of us are praying for Khalid. I was at the Armenian Church at the corner of West 77th for my niece's wedding last week and I made sure each of my grandchildren lit a candle for him.\"\n\n\"Thank you, Mrs Ohanian. I appreciate it.\"\n\n\"Such a good boy. He helped carry my groceries up to my apartment a few times.\"\n\nThey went up in relative silence until the elevator dinged again to inform them that Mrs Ohanian had reached her destination.\n\n\"One more thing, Fatima, dear,\" she said. \"My eyesight is not nearly as bad as everyone thinks it is. So, I am extremely sorry for interrupting whatever you and your lovely lady friend were doing. Please continue once I'm out.\"",
        "A literal crimson flush swept through Fatima. She almost radiated heat.\n\n\"And you,\" said the old woman turning to Kylie. \"Fatima's been through a lot, so you had better make her feel good.\"\n\nNow it was Kylie's turn to be mortified as the old woman left after a final wink to them both.\n\nThe elevator doors closed and neither of them said anything to each other. The only sound in the elevator was the low volume monotone rendition of Fur Elise on the speaker.\n\n\"That was... I mean..\"\n\n\"Hey it's New York,\" shrugged Fatima. \"People can get away with being weird.\"\n\n\"You haven't seen weird until a middle aged man with facial hair sits next to you on the subway dressed like an anime high school girl,\" quipped Kylie. \"All the way down to highlights, real pigtails and make up.\"\n\n\"I'll see your pigtail guy and raise you the homeless man who has declared his corner of Stuyvesant Park as a sovereign nation. He has a flag, some colourful currency and even a passport stamp if you want it.\"\n\nFinally, the elevator stopped at Fatima's floor. They stepped out and walked to her apartment. She opened the door and led the way in.\n\nHer apartment was a simple, inoffensive affair with two bedrooms, a kitchen and dining area which expanded into a living room and culminated in a balcony. Thirty seven stories up, the Museum of Natural History and Central Park could both be seen, along with the rest of the Upper West Side.\n\n\"Casa de Fatima,\" said the host with a flourish.\n\nKylie looked at the light blue walls covered with various pictures. Some had Fatima. Some had her family. She saw one of her astride her bike overlooking a chasm.\n\n\"Working my way up the Andes,\" came the helpful context. \"All the way from Chile to Bolivia. My bike has also seen the beautiful desert floors of Arizona and Utah.\"\n\nShe helpfully pointed out the relevant pictures.\n\n\"Well travelled, I see.\"\n\n\"Not as well as I would like, but getting there.\"\n\nKylie's gaze wandered to a picture of a much younger Fatima flanked by her parents. All three were in front of a bodega.\n\n\"My Dad opened that bodega almost thirty years ago. He's Iranian and my mother is from Yemen. I had to learn both Farsi and Arabic as a matter of principle.\"\n\nShe turned her attention from the wall to see Fatima holding out a couple of issues of Salinger's Blade and a pen.\n\n\"A few more autographs?\"\n\n\"Fatima,\" said Kylie, drawing herself to her full height. \"Did you honestly bring me all the way here on your death cycle, make me endure that horrible elevator music and that far too open-minded elderly resident of your building just to sign some manga?\"\n\nFatima smiled and put the copies down. In an instant, she bridged the gap between them and pinned Kylie to the wall, almost dislodging one of her pictures in the process. Her hand grasped Kylie's wrist and pinned it above her head as she tried to writhe and squirm away from her.\n\n\"No, I did not. What are you going to do about it?\"\n\n\"I had-\"\n\nHer sass was cut off by Fatima's lips crashing into hers and her mouth being invaded by her tongue. She tasted sweet -- of fresh fruits and honey and so much coffee. She tried taking the upper hand before realising there was just no way. Fatima was relentless, driving her tongue all over Kylie's mouth.\n\nShe pulled back for some air before diving in again. Not as aggressive now. This time was like the second helping of that dessert you really like. It was soft, slow, taking the time to savour the smell, the taste, the intimacy. Kylie also responded in kind. She closed her eyes and gave herself over to the stirrings of pleasure.\n\n\"Tell me, Kylie,\" she said, her fingers playing with the neckline of her lover's dress. \"What would you like to do?\"\n\n\"Let go of my hands and I'll show you.\"\n\n\"You don't seem to realise this is my domain. I am the boss now,\" Fatima chided.\n\nShe leaned in for another kiss. Their lips were as close as possible without touching when she pulled back. Kylie grunted and tried in vain to break out. Both her wrists were held by a single hand from Fatima on the wall over her head.\n\n\"Tell me,\" she repeated slowly, making the effort to enunciate each syllable. \"What do you want?\"\n\n\"I want... to... kiss you again.\"\n\n\"Good. You're catching on.\"\n\nFatima leaned in for the briefest peck before pulling back again.\n\n\"I want to kiss you for longer.\"\n\n\"All this demanding. You don't seem to grasp the concept of my domain, Casa de Fatima, yet. Did you ask me what I want?\"\n\n\"I'm sorry,\" swallowed Kylie. \"What do you want, Fatima?\"\n\n\"There. That wasn't so hard now, was it? Try that again, with a bit more effort this time.\"\n\n\"What do you want?\"\n\n\"I want to see you naked.\"\n\nFatima released her wrist and took several steps back. She settled on one of the living room chairs and looked straight at her prey.\n\n\"Slowly,\" she said. \"Don't rush it.\"\n\nKylie held the end of her Nirvana tee.\n\n\"Alexa, play some Nirvana, in honour of that soon to be discarded shirt.\"\n\nKurt Cobain's voice filled the room like a gentle background sound. Kylie slowly peeled off the tee and folded it on the coffee table. Her jeans shortly joined her shirt, leaving her only in her underwear.\n\n\"Keep going,\" said Fatima, her chin resting on her palms.\n\nKylie hesitated for the briefest moment. Her mind involuntarily flashed back to the first time Sakura had seen her nude. She recalled the disinterested look on her face, seemingly more into whatever was on her phone. This was after begging forever to go on a date. It felt like buyer's remorse -- only a person instead of a dress that does not fit.\n\n\"Hey, look at me,\" said Fatima, snapping her out of her reverie. \"Remember that this is Casa de Fatima. My word is law within these walls and I declare that you look beautiful.\"\n\nIt was almost as if she could read minds.\n\nKylie nodded in agreement and undid the straps of her bra. They slid off her arms. Her immediate instinct was to cross her arms over her breasts so that Fatima could not see how small and inadequate they were.\n\n\"Now why would you do that?\" said Fatima, getting up from her chair. \"Didn't I say you were beautiful?\"\n\nWith some trepidation, she let her hands hang by her side. Her breasts were barely a couple of handfuls of flesh each, but plump and firm. Each mound was topped by a pink nipple, which were both currently hard.\n\n\"Now come closer. Let me see that body up close.\"\n\nShe obliged, now standing easily within Fatima's reach. Fatima ran her eyes appraisingly over her lover. An alabaster white complexion on a slender frame. A hint of curves around her ass. The rest of her was toned and shapely. A face framed by high cheekbones and blue eyes and topped by a cascade of black curls. Her glasses gave her a nerdy air.\n\nFatima sauntered behind her and came to a stop. Her eyes were arrested by Kylie's back.\n\n\"Yuki Murakami. Google the name. She's one of the hottest tattoo artists in Tokyo. That artwork back there is one of her finest.\"\n\nIt looked the part. A winged angel dressed in armour and wielding a greatsword against a dragon. The edges of the wings segued into tribal patterns that went past her shoulders. Fatima leaned over to study the look on the angel's face below the helmet.\n\n\"Just so you know, I drew that before Yuki took her implements to my back to recreate it.\"\n\n\"Let's see if we can make her smile, shall we?\" said Fatima, rubbing her hands gleefully.\n\nShe drew Kylie into a deep kiss. Her hand went around her neck and the other around her waist as she bent her back on her knees and sank deeper. They fell onto her bed, Kylie on her back and Fatima on top, their kiss unbroken.\n\nFatima kissed both her cheeks and down her neck. Her fingers found Kylie's nipples and tweaked them gently. She was rewarded by a sharp squeal. Smiling, she kissed her way down to her breasts and took them alternately in her mouth. She clamped her lips around each nipple and lashed it with her tongue while the other was caught in her free hand.\n\nKylie grabbed a fistful of bedsheets in each hand and arched her back upwards. Fatima continued alternating between each nipple, her free hand surreptitiously slipping down to her now-sopping pussy.\n\n\"You're dripping and I'm thirsty. Funny how things work out,\" she whispered. Two of her fingers were now inside her lover to the second knuckle. She pulled back and pushed in slowly once again.\n\nKylie's eyes were clenched shut and her nerves taut to the point of breaking when she felt the rough layer of tastebuds rub against her engorged clit for the first time.\n\nAfter that... oblivion.\n\n<p align=\"center\">* *</p>\n\nKylie squinted. Something was wrong with the sunlight. Even in someone else's bedroom, the sunlight is not supposed to be blue. She rolled onto her side and opened her eyes a sliver to see a stained glass pane which had been hidden by the curtain last night. Sunlight streamed in through the swirled mosaic of colours, illuminating the room like a kaleidoscope.\n\nShe lifted the mass of tousled hair off her face and sat up, wrapping the blanket around herself. Shafts of red and green light shone across the walls. Her clothes were still neatly folded on the coffee table. Fatima's clothes, in comparison, were haphazardly strewn on the floor.\n\nFatima was a few feet from the bed. Her prayer mat was rolled out towards the rising sun and she sat on her knees with her hands in front of her face. Her eyes remained closed with perfect concentration as she recited under her breath.\n\nKylie shook off the last of the sleep. She went to grab her clothes and make a trip to the washroom. By the time she came back, her host was putting away her prayer mat.\n\n\"Good morning,\" Kylie said with a broad smile.\n\n\"Good morning to you too,\" she said, pulling her in for a deep kiss.\n\n\"Your glass pane is beautiful.\"\n\n\"Thanks. I get to make my sunrise as colourful as I want,\" Fatima said. \"I have some coffee if you want a cup. Not nearly as good as what we've been having, but not bad.\"\n\n\"Grandpa's still with us,\" said Kylie, scrolling through her messages. \"No worse than he was since he arrived at the hospital. Dad and Uncle Howard just checked with the doctors.\"\n\nFatima set both cups to brew. Kylie shut her phone and looked up nervously.\n\n\"I-I... wasn't bad or anything, right? It's just that... it's been a while.\"\n\n\"Oh you poor dear,\" cooed Fatima, kissing her on the lips. \"Your ex did a real number on your self-worth, didn't she?\"\n\nKylie felt the sting of what she had just said as well. Sakura was always demanding of her in public and disinterested in private.\n\n\"You were divine. Do you really think I would have gone back for seconds otherwise? Let alone the number of times I actually did return to you?\"\n\nShe almost laughed at the absurdity of it. In her thirties, with a woman she had barely known for a week and it was butterflies of her senior prom all over again.\n\n\"I know coffee is usually our thing, but how about I take you out for brunch today?\"\n\n\"Do you have a place in mind?\"\n\n\"I have exactly the right place in mind.\"\n\nShe grabbed her leather jacket off the back of the dining chair and slid it on in one fluid motion.\n\n<p align=\"center\">* *</p>\n\n\"Next time, we're taking an Uber,\" declared Kylie. \"There is no way I am getting onto this thing again. Not with you riding it like Mad Max.\"\n\n\"Welcome to Ocean City, New Jersey.\"\n\nThey strolled along the boardwalk. The breeze wafted in the smell of the ocean. It looked like a town of the last century with the single and duplex houses, the store fronts and strip malls. Kids rode their bicycles down the road separating the boardwalk from the town. A mass of seagulls circled high above them. The ocean was a brilliant blue and sparkled along the path to the sun. Several yachts and catamarans dotted the water all the way to the horizon.\n\n\"Take a look.\"\n\nFatima pointed at a bodega on the main street. There were stacks of fresh fruits outside. It looked familiar from somewhere.\n\n\"Is that your parents' shop?\"\n\nThe picture at Fatima's apartment had her standing in front of that very shop with her parents. The place had grown since the photo, expanding to take the adjacent space as well, but it was unmistakable.\n\n\"Dad still stacks the groceries on most mornings. He has six employees he can pass it off to, but not him. Laying out the fruits of the day is how he started his enterprise thirty years ago and he'll be damned if some kid thinks he can take that from him.\"\n\n\"Where is your house?\"\n\n\"Same building, second floor. It was a bit tight, but enough for us,\" she said. \"This place where we're taking a stroll, it's my childhood. I rode my bicycle on this boardwalk before I traded up to a Ducati. I kissed Jenny DeLuca on that pier. I kissed her brother, Kenny, on that same pier a few years later. Not that either found out about the other.\"\n\n\"Jenny and Kenny?\"\n\n\"The DeLucas are not the most creative people, but they do own a great restaurant.\"\n\nFatima led them to the far end of the boardwalk where DeLuca's was embedded into the wall in an old calligraphic font.\n\n\"Trust me, it is worth coming all the way out of the city for this. The pizza here, out of this world. Not to mention any of the pasta. As for the seafood, it's as fresh as it gets. Dad used to bring me here every time there was something to celebrate -- usually with one of their sundaes.\"\n\nThe inside of the diner could best be described as retro. The paint had faded from parts of the wall and was peeling from the ceiling. The plush red seats and the slightly rickety table added to the ambience.\n\n\"Don't be fooled,\" said Fatima. \"They purposely keep the place this way. Tourists can't resist eating in the seventies.\"\n\n\"I remember coming here for a summer vacation once.\"\n\n\"My whole childhood was your summer vacation. People in the city pay so much to go to a beach and I could see the ocean from my window any time I wanted.\"\n\n\"Fatima! Oh my God. I haven't seen you in ages.\"\n\n\"Hi, Mrs DeLuca. Good to see you too.\"\n\nThe stocky woman came over and embraced Fatima. She had a pad and a pen and took down the items Fatima ordered for herself and for Kylie.\n\n\"She seems nice.\"\n\nThey sat opposite each other. Kylie clasped their fingers together and kissed the back of her lover's palm.\n\n\"Will you be stopping by your place?\"\n\n\"Not likely.\"\n\nThe change in her expression was immediate and noticeable. The smile disappeared and her tone went flat.\n\n\"I went to London after high school. I stayed with my cousin, did my major and then got into London School of Economics. There was a man in my building who lived alone. He was away for a few weeks at a time, but he still kept the place. We ran into each other a lot, until he finally asked me out for coffee... at Caff\u00e9 Nero.\"\n\nKylie held her hand tightly. She could tell it was difficult for her to say this.\n\n\"I was twenty four and he was almost fifty. I seemed to be the only one who did not see a problem with this. My parents were up in arms, having already planned to set me up with the son of a mutual acquaintance. Not only that, but the idea of me with the lily white Scotsman George McCluskey was also poorly received. Marrying outside my community generally is.\"\n\n\"You married this man?\"\n\n\"I was young and stupid. It's not a crime,\" Fatima said. \"Anyway, we didn't get to the altar.\"\n\n\"What happened?\"\n\n\"I was looking for something when I found another phone in his apartment. The picture on the screen was of George, a woman his age who I assumed was his wife, and his three children.\"\n\n\"Fuck!\"\n\n\"Suddenly his frequent trips to Glasgow made sense. I had easily bought his story about them being related to his business. Too easily as it turned out.\"\n\n\"What happened when you confronted him?\"\n\n\"I didn't.\"\n\n\"You didn't?\"\n\nKylie looked at her with open-mouthed amazement.\n\n\"I couldn't, okay,\" Fatima said bitterly. \"I didn't know how. I was just twenty four and he was a grown man. Whenever he looked at me, I felt like a confused kid. It went on for several months until I got a call one day... from his wife.\"\n\nThere was an audible gasp.\n\n\"She tore into me. It was rough and ugly. I guess it was easier to blame me than it was to blame the father of her children. George hurriedly apologized, told me he still loved me, but could not leave his wife, and he was gone. All those silly dreams I had with him were all gone.\"\n\nFatima paused to let out a long sigh. It took effort to say these things. Almost having to extract words physically from the very nadir of her being.\n\n\"If only that was the end of it. Mrs McCluskey, still convinced the affair was all my fault, took to social media and posted story after story about me. She found me online and made sure everyone I had ever put on my Facebook friend list knew what kind of person I really was. All my friends, family and even my co-workers saw hundreds of posts referring to me as a homewrecker. She was convinced I wanted George to leave his family and move in with me.\"\n\n\"I'm so sorry that happened to you.\"\n\n\"My parents saw it. Their friends saw it. Ocean City isn't a big place. People who came to the shop asked them about it. Their extended families looked at them differently. They blamed me for all of it. They still do. I was disinvited to Eid and Nowruz. I was generally discouraged from coming to the Ozair family home.\"\n\nShe was on the verge of tears by now. A few drops appeared at the corner of her eye which she quickly dabbed away with a napkin.\n\n\"I took a year's sabbatical and went everywhere I wanted. I rode my bike through places where few think of going. I climbed Kilimanjaro, K2 and the Eiger Glacier. I took a hang glider and jumped off Jungfrau. I got high with street artists in Mexico City and separatists in Barcelona.\"\n\nShe paused for a bit to gather her words.\n\n\"I moved back here and hunkered down, praying for the storm to blow over. It became a routine -- work all week and ride down to Ocean City for a meal or two during the weekend. Khalid was thrilled to see me. It took time, but slowly, my relationship with my parents started mending itself. They would call me on most days and even let Khalid spend time at my apartment. That stained glass pane was his idea.\"\n\nKylie nodded, listening in rapt attention. This was a Fatima she had not seen. Before this there had been smiles, laughter, bad jokes and sizzling sex. Not now. This was where the laughter stopped.\n\n\"Then...\" Fatima said and paused. Evidently the next part was harder, a further rock bottom. A few moments of excruciating silence later, she burst into tears.\n\nKylie immediately sat beside her and wiped the tears away with the napkin. Fatima gave in. The facade of cheer she had built and shown for the past few days crumbled. She buried her face in Kylie's shoulder and wept.\n\nThey held each other tightly.\n\n\"The food is coming.\"\n\nFatima quickly composed herself and wiped the last of her tears away just as Mrs DeLuca put two plates down on the table and gave them her trademark toothy smile.\n\n\"You girls dig in. I'll get the desserts once you're done.\"\n\n\"Thanks, Mrs DeLuca.\"\n\nFor the rest of the world, Fatima wore a facade. For this woman she had met in a hospital cafeteria a week ago, she had decided she could let it down and be vulnerable.\n\n<p align=\"center\">* *</p>\n\n\"Thanks for seeing me all the way to my apartment yesterday. I had dredged up some really bad memories and I didn't want to be alone.\"\n\n\"You're welcome,\" said Kylie. They were at their usual booth with two cups of espresso between them.\n\n\"It's Grandpa's anniversary today. No one gave him a chance in hell of making it this far, but he has. Still on life support and ventilators, but will not go until he completes seventy years with his wife.\"\n\n\"Did you have anything planned?\"",
        "\"No,\" Kylie admitted sadly. \"I had talked to a few cousins in the past but they all agreed it would be too hectic. Many of them doubted whether they would be able to come. Maybe on their seventy-fifth.\"\n\n\"They're all here, aren't they?\"\n\n\"They are, but all of them wish they didn't have to be. It's hard to keep a large family together in this day and age.\"\n\nThey took a sip of their coffee each and Kylie looked lost in contemplation.\n\n\"So...\" began Fatima tentatively. \"We've woken up together and you've had lunch at the place I grew up. Maybe you can come over for dinner tonight?\"\n\n\"I would very much like that.\"\n\nFatima instinctively reached over to kiss her, but Kylie turned her face away at the last moment. A moment of understanding passed between their eyes.\n\n\"Sorry...\"\n\n\"Don't be. We can do a lot more of that in your apartment if you want,\" said Kylie. \"Just not in public.\"\n\n<p align=\"center\">* *</p>\n\n\"Smells delicious.\"\n\nFatima flicked and swirled the saucepan. Shallots, leeks, grilled onions, mushrooms and generous amounts of fennel and artichokes jumped off her pan and back in again. She looked at Kylie, perched on the kitchen counter with a glass in hand.\n\n\"Just you wait till I add the Calvados.\"\n\nTrue to her word, she opened a bottle and added some.\n\n\"Alexa, dim the lights.\"\n\nShe procured a lighter and lit her pan. Blue flames danced atop the mixture. Effortlessly, she flicked and moved her pan over and over again until she was satisfied. She divided the contents into two plates. Kylie helped her plate the main course from the oven.\n\n\"Are you sure you don't work in a Michelin starred place?\"\n\n\"I wish,\" she said. \"That is the dream, though. One day when I finally get the courage to quit my job and start my own restaurant.\"\n\nThey dug into the assorted platter.\n\n\"I've been thinking,\" Kylie said between mouthfuls. \"Maybe I could resume work on Salinger's Blade. The time gap has helped stir some ideas to life.\"\n\n\"Don't tease me. Are you serious?\"\n\n\"Why wouldn't I be?\"\n\n\"Where does she go now?\" Fatima asked with breathless excitement. \"Is Ryu really dead?\"\n\n\"You'll find out when I decide. I'll send you an advance copy,\" said Kylie. \"The dinner is an excellent bribe.\"\n\nThe rest of the dinner continued with less exciting topics. Both the entr\u00e9e and the main disappeared without a trace.\n\n\"Is there dessert?\"\n\n\"There can be,\" said Fatima, almost devouring the other woman with her eyes. It left little to the imagination regarding what that dessert might be.\n\nKylie took the hint and did her routine of slow undress. Only this time she could see Fatima's slender legs on the table and one of her hands hard at work. She unlaced her shoes one at a time and placed them away. Her dress unzipped at the back and fell into a satin puddle at her feet.\n\n\"Take your time,\" Fatima's voice was a throaty groan. Her fingers and thumb furiously rubbed away.\n\nKylie undid the button of her jeans and leaned back against the wall. The smouldering look riveted on her made her feel special. Made her feel wanted. She pulled the two ends of her jeans apart slowly, watching as the zipper slid to the bottom. She put her thumbs into her waistband and moved her jeans down. Decadently. All the while, her eyes remained locked on the lusty gaze coming from the table.\n\n\"Mmm... Come here.\"\n\nIn only her underwear and glasses, Kylie walked over to the table. Fatima ripped her own dress off hurriedly before spreading her ankles on the table. Her open lips glistened invitingly.\n\n\"Do you need an invitation?\"\n\nKylie wrapped her arms around Fatima's muscular thighs. Her pussy was neatly shaved, leaving only a thin strip from her lower abdomen to the apex of her clit. She stuck her tongue out and tentatively prodded the pearl of flesh. Rewarded by a low moan, she traced her outer lips all the way down and then up again in an excruciatingly slow circuit.\n\nEach move was deliberate, each time she threatened to hover slightly longer on the clit, only to plant a quick peck and continue downwards. She looked up over the edge of her glasses to see Fatima leaning back on her chair with her eyes closed. Her breasts were exposed, large pendulous mounds of flesh topped by a dark nipple each. One of her hands was busy tweaking and pulling on her nipple while the other held her hood apart so her clit protruded outwards, almost begging to be loved.\n\nKylie kissed her soft inner thighs. She pressed her lips together and blew a thin stream of air over her sensitive clit. Her tongue reached out and traced different movements on it. Top to bottom. Side to side. Clockwise. Counter-clockwise. Figures of eight. An agonisingly slow spiral where she crept closer and closer to her target without actual contact.\n\n\"Just fucking do it already.\"\n\nThe command was met with two fingers making their entry into her sopping folds. There was no hesitation as both fingers went in all the way to the knuckle. Kylie twisted and spread her fingers, straining against her fleshy walls.\n\n\"Oh.. oh right there.\"\n\nShe drew her fingers out until only the tip remained and plunged them back to their full depth just as her lips finally made contact with the clit begging for attention. The simultaneous assault drew a guttural moan from Fatima, quickly followed by a series of sharp squeals which came close to cracking her stained glass.\n\nFingers and tongue switched places. Kylie's tongue explored the depths of her opening which the pads of her fingers grazed the clit above.\n\nFatima felt currents of pleasure blossoming outwards from her clit. Her vision went hazy and a sheen of sweat was plastered across her forehead. She held Kylie's head in place and wrapped her legs around it. It was as if a firecracker had gone off in the pit of her stomach. What started as a stirring slowly turned into a desperate yearning. An animal desire to have this woman touch her with her fingers and her tongue. She dipped into her own wetness and smeared it around her nipple.\n\n\"Here,\" she gasped, offering the now wet nipple out to her. The mangaka did not need to be told twice, rising and claiming the bud into her mouth, savouring on the same tangy sweetness she had been enjoying straight from the source. Fatima went to the well once again and coated her other nipple with cunt juices. She held Kylie's hair and guided her lips to it.\n\nFatima wound the long hair around her palm, pulling ever so slightly on her scalp. She reached into the seemingly inexhaustible store between her legs, painting a target on different parts of herself. Sometimes her nipples, her navel, her lips and Kylie's tongue chased her fingers, licking off every drop.\n\nKylie was sitting on the table now. Her legs wrapped around Fatima's torso and their lips in a torrid sloppy kiss. Fatima could taste herself on her lover's tongue. She placed her hands under Kylie's ass and lifted her off the table. Her hands were already around her back where she unhooked her bra and discarded it. Without breaking their kiss, she carried her quarry over to the bed and laid her out on her back. She took a step back and admired her handiwork. Kylie looked so vulnerable, lying supine on her bed with only her glasses and panties on.\n\nShe lay on top of Kylie, skin to skin, face to face. Their lips melding into one another and their eyes inches apart. Fatima reached into her bedside drawer and groped blindly for a few moments before finding what she was looking for. She sat up and showed off her silver bullet vibe, licking it while suggestively wagging her eyebrows at Kylie.\n\n\"Give me a sec to catch my breath.\"\n\nHer entreaty went in vain. Fatima grabbed her panties and stripped them off her legs in record speed. A low hum came from her hand as she lowered the device to Kylie's cunt. She nestled it against her sensitive clit and watched as her hood vibrated.\n\n\"Oh... Ooooh. It's too much.\"\n\nSuddenly the vibe was gone, replaced by a hungry tongue. The tongue whipped across the sensitive button several times. Her lower lips were inflamed with desire when the silver devil made a reappearance, wreaking havoc on her clit once more.\n\nKylie squealed in protest and Fatima only turned up the vibrations in response. Her clit fairly danced on the metal instrument now. The ripples spread through her. Undeterred, Fatima amped up the vibrations to a higher level.\n\nThis time the effect was immediate. Like a lightning bolt of pleasure had hit her and sent her entire nervous system into overdrive. She writhed to try and escape, but Fatima was stronger. She straddled Kylie and pinned her legs in place.\n\n\"You're at my mercy now.\"\n\nShe emphasized the point by placing the vibe at Kylie's hard nipple and turning it to its highest setting. Kylie looked on fearfully as her breast rippled like jelly. The vibe switched to her other nipple with similar effect. Fatima went back and forth multiple times before returning the vibe to her engorged clit and feasting on the nipples instead.\n\n\"Oh God! I'm close.\"\n\n\"Don't you dare,\" she ordered, latching onto her other nipple and pinching it hard to make her point. She turned the vibe down and just held it against her lover's clit for now.\n\n\"Do you trust me?\"\n\nKylie nodded. Fatima went to her walk-in closet and retrieved a roll of bondage tape. She tore out a large strip and passed it over Kylie's left wrist multiple times before doing the same to her left and finally sticking the two ends of tape together above her headboard.\n\n\"Comfortable?\"\n\nKylie could roll and move her wrists, but little else. The tape did not stick to her skin, but rendered her arms useless above her head. Satisfied by what she had achieved, Fatima went and got an eye mask. She gently took off Kylie's glasses and placed them on the table. She kissed her on the forehead and each cheek before claiming her lips.\n\n\"You have beautiful eyes. Did anyone tell you that?\"\n\n\"I'm basically blind now even if you don't use the mask.\"\n\n\"Where's the fun in that?\"\n\nThe blurry shapes were replaced by a complete darkness. Kylie felt the weight shift off her legs. Obviously, Fatima had gotten off the bed. The seconds of anticipation turned to minutes before she heard a sound. To her horror, it sounded like a low mechanical whirr. The sound came closer, becoming louder before finally it was right in front of her face.\n\n\"It's a pity you can't see what this is.\"\n\nThe pity was short lived before Kylie felt an unfamiliar shape pressing into her opening. It was about the size of the largest dildo she had bought discreetly, but that wasn't all. It was shaped to have a curved end, like a hook. The vibrations emanated from the unknown device and woke up all her senses at once.\n\nThe more the device was inserted into her, the realization dawned that the entire surface could rotate in bands, alternately in opposite directions. The device remained deep inside her even as she felt fingers tugging and pulling on her nipples. They were soon replaced by teeth, stretching each nipple to their full length.\n\n\"Can I cum now?\"\n\n\"Not yet, you impatient twat. Can't you see I'm busy?\" came the sharp reply. \"My bad. Of course you can't.\"\n\nKylie screamed when the teeth were replaced by a stinging pain. It lasted only for a second as a clamp was placed around her left nipple, swiftly followed by her right. The edge of the pain was gone, leaving only the pressure pushing on her nubs from both sides.\n\n\"If only you could see yourself now.\"\n\nAll three centres of Kylie's erogenous zones were on fire. Sensations coursed through her entire body, burning her nerves raw. The device buried inside her was slowly withdrawn, leaving an aching void.\n\n\"No, please,\" she blurted out.\n\n\"So inconsiderate,\" Fatima tutted. \"I have a plan for what I want to do and you want to rush me along. Did you forget what I said the last time you were here? Casa de Fatima is my domain and my word is law once you enter through my door.\"\n\n\"I'm sorry.\"\n\n\"But I am nothing if not giving... tell me, Kylie. What do you want?\"\n\nThe voice was close to her ear now. She could feel her hot breath and her tongue on her earlobe.\n\n\"I want to cum.\"\n\n\"How badly?\"\n\n\"Very badly.\"\n\n\"Do better,\" came the reply with an open palm smack to her pussy for emphasis. \"Tell me how badly.\"\n\n\"I want to cum as bad as a man crossing the desert wants water. As badly as people want to forget the last season of Game of Thrones happened. As badly as Stormtroopers need to revise their aiming and firing training manuals.\"\n\nFatima laughed uproariously.\n\n\"Very good. Now I have to let you cum. Give me a moment.\"\n\nAll at once, Kylie felt Fatima's weight on her hips. The aforementioned void was filled by a large smooth dildo. She felt a gentle rocking motion, pushing half of it into her and sliding out. The speed and frequency slowly grew.\n\nIt took a few minutes but the silicone cock now plunged in and out like a piston. Each time it went down to her innermost depth before pulling all the way out. Over and over again in fencing like thrusts.\n\nKylie tried to push her hips upwards on each downward thrust to heighten the pleasure. It was too much. It was all too much.\n\n\"Please can I cum now? Please!\"\n\n\"Now!\"\n\nOne word. Three letters. That was all it took.\n\nThe floodgates were opened. The precipice was jumped off. The restraint was shattered into a million pieces.\n\nKylie floated above the clouds, only vaguely aware of time and where she was. The orgasm was otherworldly and she had earned it. The tsunami had crashed on her shore. All of her was a quivering pile of flesh just about held together.\n\nShe felt the eye mask removed and then the tape joining her wrists being cut. Soon, an equally sweaty and worn out woman joined her. They just lay there, skin to skin, smile to smile. Their mutual exertions evident in their laboured panting. A tangle of flesh and limbs where it was not quite clear where one ended and the other began.\n\n\"Hold me, Kylie,\" came a whimper, completely at odds with the dominant tone of a few minutes prior. \"Hold me and don't let go. Please.\"\n\nCurrently being in Casa de Fatima, Kylie saw no alternative but to comply.\n\n<p align=\"center\">* *</p>\n\n\"I'll see you in a bit, Dad.\"\n\nFatima waited while Kylie finished talking to her father before returning to her.\n\n\"Grandpa's taken a turn for the better. He's not conscious yet, but can breathe on his own.\"\n\n\"That's incredible news,\" said Fatima. \"Does that mean he'll live?\"\n\n\"The doctors are cautiously optimistic at this stage. They still want to keep him in the ICU to monitor him.\"\n\nThey walked through the narrow corridor.\n\n\"I like your hair,\" said Fatima.\n\n\"Thank you,\" said Kylie. Gwen had dragged her and the rest of her female cousins to an upscale salon. Much to her chagrin, Kylie resolutely refused to let them cut so much as a single strand, choosing instead blue and green highlights covering the last six inches of her hair.\n\nThe spectre of the old man dying had given way to a full fledged family reunion. As if J Fucking Henry had planned it all along.\n\n\"Come with me,\" said Fatima, holding her hand and leading her to the elevator.\n\nThey walked to another wing of Mount Sinai West. The familiar rush of doctors and nurses was omnipresent. Fatima walked to a room and placed her hands on the glass pane.\n\n\"Ms Ozair,\" said a nearby nurse. \"I didn't know you were coming.\"\n\n\"Has there been any change?\" she asked, more out of hope than expectation.\n\nThe nurse merely shook her head sadly. Fatima held Kylie's hand tighter.\n\n\"Can I see him?\"\n\nThe nurse opened the door and let Fatima in. She walked in and looked at the person on the bed for a few long moments. Kylie could see the patient tag on the chart near the door -- Khalid Ozair.\n\n\"Your brother?\"\n\nShe nodded, exerting an immense pressure not to fall apart. It took a few minutes before she came out and held her hand again. They made their way back to the waiting room and sat together.\n\n\"All my family and friends treated me like a leper when I came back from London. Not Khalid though. He was always genuinely happy to see me. He never treated me any differently.\"\n\nKylie rubbed her back in slow circles.\n\n\"Khalid is so smart. He skipped two grades in school and got an MIT admit. He was into machine learning and artificial intelligence before we even heard of them. He took part in Math and Cyber Olympiads from when he was seven. Even when my reputation was its worst, he always showed me something he was working on with the excitement only he could muster.\"\n\nFatima looked broken. She wiped a few stray tears off her face.\n\n\"He is such a nerd. He never had fun. No Spring break. No prom. Not even any sleepovers. Ever. He preferred to stay in his room and study for whatever upcoming test he had or work on his newest project in case he did not have any tests. The thought of having fun didn't even occur to him. The closest he came to going out was staying over at my place for a few days at a time. My parents also liked the idea. They were even getting closer to forgiving the whole McCluskey business.\"\n\n\"Whatever happened... it's not your fault.\"\n\n\"It is,\" she said bitterly, doing a poor job of suppressing a sob. \"I had made up my mind to give him at least one night of fun before he went off to college. Despite all his objections and protesting, I dragged him kicking and screaming to it.\"\n\n\"To what?\"\n\n\"A friend of a friend is a major movie distributor. He was holding a special screening for Avengers Endgame a week before its actual release. Not a public screening, but only for his close circle of friends. I find good investment opportunities for him from time to time, so I scored an invite and a plus one. Most of all, I wanted to surprise Khalid.\"\n\nKylie held her head against her shoulder. The bitter sobbing was strangely in place with where they were.\n\n\"Let it out.\"\n\n\"We were on our way back from his place in Ithaca. I was driving the rental car and he was in the back. I remember he thanked me for taking him and told me how much he was going to brag about it to his friends.\"\n\nKylie steeled herself preparing for the worst.\n\n\"There was a drunk driver in a SUV. That's all I remember. I woke up in the hospital with a concussion and a few broken ribs, but Khalid... he hasn't woken up since.\"\n\n\"I'm so sorry that happened,\" said Kylie.\n\nShe paused as Fatima let a few tears out onto her shoulder.\n\n\"That movie came out last April. Has he been in a coma all this time?\"\n\n\"Yes,\" choked out Fatima. \"Three hundred thirty seven days. Not that I've been counting.\"\n\nKylie put her hand over her mouth to stifle a gasp. She put an arm around Fatima and drew her closer.\n\n\"He was going to do great things, Kylie. The next Google or Facebook. I took that away from him.\"\n\n\"It's not your fault. It was an accident.\"\n\n\"An accident -- in a time and at a place he would not have been had it not been for me. It is my fault. It has to be. How can anyone say it's not my fault?\"\n\nKylie drew her closer as she clung onto her arms. It had been a long time coming. The words that were bottled up with no outlet. Finally, she had given them voice.\n\n\"He's just sixteen. Just a kid. How can a merciful God let this happen to him?\" she wailed softly. \"It should have been me. I was the one who wanted to go. I was driving. He's innocent. He came only because I begged him to.\"\n\nThe rest of her words were drowned in sobs. Kylie held her tight, almost willing the grief out of her so she could share it.\n\n\"My parents visit Khalid as often as they can. Mom texts me beforehand so I'm not here. I'm never here at the same time they are so I don't run into them. So they can't look me in the eye and console me, knowing they blame me deep inside for what happened. All the work I have done to mend my relationship with them has turned to ash. I'll never be able to face them ever again.\"",
        "\"That's terrible,\" said Kylie. Her intermittent absences from the hospital made sense now. A brutal, painful sense.\n\n\"You shouldn't be alone at a time like this. You should be with family.\"\n\n\"I only wish I could be,\" Fatima said, wiping the remainder of her tears on her headscarf. \"But I'm not alone.\"\n\nKylie smiled and gently massaged her scalp.\n\n\"Thank you for listening. Thank you for being there for me. I needed you.\"\n\n\"Can we do dinner again? We don't need to repeat what we did the last time, but let's not rule it out entirely either.\"\n\nFatima looked at her, wetness shimmering in her large green irises. Kylie said it again.\n\n\"You shouldn't be alone.\"\n\n<p align=\"center\">* *</p>\n\n\"What's on today's menu?\" asked Kylie, putting down her glass.\n\n\"Today we have lamb and salmon and a whole lot of unpronounceable French veggies and sauces to add to them.\"\n\nFor once, Kylie had not worn a nineties band on her clothes. It was a svelte red designer dress her Aunt Gwen had basically forced her into. Her shoulders and the top fifth of her back was exposed, showing off the angel's face and the tip of her wings.\n\n\"Before you start. There's something I've been meaning to say.\"\n\n\"Go on,\" Fatima said, checking the ingredients laid out on the kitchen counter.\n\n\"What I said earlier... I think you should go meet your parents.\"\n\nFatima looked up. Kylie almost regretted saying it, but she steadfastly stood her ground.\n\n\"It's a hard time for your family, but it's in this hard time that you need each other the most,\" she went on. \"Your brother is in a coma. Your parents are grieving. You are grieving. You need each other the most right now.\"\n\n\"Thanks for the advice,\" said Fatima. \"But we're not ready yet. Maybe some day in the future. But not now. Not today.\"\n\nKylie was not usually confrontational. A fact that Sakura took advantage of far too often. This time, however, she had an unshakeable conviction and was prepared to see it through, no matter how ugly it got.\n\n\"It has to be now. Every second you grieve separately hurts you even more.\"\n\n\"Look, I appreciate what you're trying to do here. Really I do. I just don't think you understand everything that is going on between me and them.\"\n\n\"Tell me what I don't understand.\"\n\nFatima put the chopping knife down and sighed. She stepped in front of the counter with her hands crossed in front of her chest. Her face wore a look of incredulous disbelief and her tone was icy when she opened her lips.\n\n\"Insurance doesn't pay all of the costs. My parents can't hope to pay the rest. You'd think they'd come to their daughter who has a seven figure job on Wall Street, but did they? No. Instead they appealed to the imam at our mosque. He has made it a point that everyone from the community who comes to the mosque pray for Khalid and contribute what they can. Everyone... from the poorest to the richest are chipping in. One of them, an oil executive from Qatar, has pledged to pay whatever it takes until Khalid is well.\"\n\nShe fixed her glare on Kylie and spoke again.\n\n\"Does it matter that I can pay for it all? Does it matter that I would do so in a heartbeat? Does it matter that doing so might make me feel the tiniest bit less shitty about myself? No. They can be as polite as they want about it, but they know and I know the real reason. My money is tainted, like every other thing associated with me. It is tainted because I was the one who put Khalid in the hospital in the first place.\"\n\nKylie remained rooted to the spot. Her brain was struggling to process the new information. Fatima came over and put her arm around her.\n\n\"I'm sorry you had to hear that,\" she said, kissing Kylie's bare shoulder. \"Now let me make it up to you.\"\n\n\"I'm sorry, Fatima, but that is not good enough.\"\n\n\"Excuse me,\" she replied, taken aback. \"Not good enough?\"\n\n\"Yes,\" said Kylie, more conviction in her voice than before. \"You have hidden from your parents long enough. They need you and you need them, even if you won't admit it. The first meeting will not be pleasant, but it's necessary to get it out of the way so you can deal with Khalid's situation together. Please, Fatima, be the bigger person. Tell them you still love them and you're sorry for what happened.\"\n\n\"Seriously, you want to do this? Now?\"\n\nKylie looked decidedly unfazed. Fatima stared her down for a few minutes, a scowl writ large on her face.\n\n\"Good enough. I am so sick of trying to be fucking good enough for everybody. I wasn't good enough for George to leave his wife. I wasn't good enough for my family and friends for them to treat me with any dignity after I broke up. Now I'm not even good enough for you? I've known you for two weeks and you already feel entitled to tell me what I am and am not good enough for?\"\n\nFor the first time, Kylie took a step back. Her lover's eyes were flashing fire and she pointed an accusing finger straight at her.\n\nProvidentially, Kylie's phone started ringing. Without breaking eye contact, she answered the call.\n\n\"Is that someone else letting me know how I am not good enough for them?\"\n\n\"No,\" said Kylie. \"It's my Dad.\"\n\nA moment of silence hung in the air between them as Fatima drank in the meaning of the call she had so disdainfully described.\n\n\"My grandmother just lost the only man she has loved in seventy years,\" she said quietly. It took a monumental amount of effort on her part not to burst into tears.\n\n\"If it's all the same with you, I'm going to go be with her now.\"\n\n<p align=\"center\">* *</p>\n\n\"How're you holding up?\"\n\nKylie looked up to see Gwen standing beside her. There were a few cracks in her mascara where a teardrop had slid down her face.\n\n\"I was just with Aunt Fran,\" she said. \"I mean... what do you even tell her? I held her and cried and she had to console me.\"\n\n\"Me too,\" Kylie admitted. \"This is so messed up. We're supposed to be comforting her, not the other way around.\"\n\n\"I wanted to tell you something in private...\" Gwen said, lowering her voice. \"Please take care of your Dad as well. He's trying to be strong for everyone, but I know my cousin. I know how close he was to his father. He'll try to hide it with his stoic demeanour, but it will be taking a toll on him as well.\"\n\nKylie nodded, glancing over to see her father talking to some people.\n\n\"Did Uncle Henry tell you about the time he was stationed in Egypt during the coup of 81?\"\n\n\"He might have,\" she said. \"Although if you believe the version he told me, he probably saved everyone.\"\n\n\"Probably not everyone, but there was a family in Cairo who were helping him with his story. They went from citizens to dissenters to traitors overnight. They would have been killed had they spent one more day in the city. Do you know what he did?\"\n\n\"Smuggled them out of the country?\"\n\n\"First in the back of a truck transporting dates, then in a car he had arranged and finally in a boat across the Suez Canal. He did not stop until they were in Israel. A few years later, he successfully got them asylum in the US.\"\n\n\"That certainly sounds like J Henry.\"\n\nGwen pointed to the end of the hallway where an elderly Jewish couple of Middle Eastern origin stood, flanked by their four grown children.\n\n\"J Fucking Henry,\" sighed Gwen. \"He touched more lives than any of us will ever know. He will be missed now that he's no more.\"\n\n\"He's playing God's piano now.\"\n\nGwen smiled and enveloped Kylie in a deep hug. They held each other tightly, neither willing to let go.\n\n\"Times like this...,\" she began. \"It really makes you count your blessings your last name is Strand. Can you imagine any of us going through this alone? We'd fall apart.\"\n\nStuart's wife and children were with Fran now. He waited outside the door, not wearing a broad smile for the first time that Kylie had seen.\n\n<p align=\"center\">* *</p>\n\nThe black Ducati sped past the relatively sparse traffic outside the city limits. Fatima wore no helmet. She had spent the best part of three hours getting sozzled at a West Village bar and ranting to bartenders and fellow patrons -- anyone who would listen.\n\nA maelstrom of thoughts roiled inside her. She replayed the conversation with Kylie over and over again in her mind. Why did Kylie have to touch a nerve? Why did she have to be so obstinate? Who was she to lecture her about whether she kept ties with her family?\n\nNo one. Absolutely no one.\n\nYet, the moment she sat on her bed and saw the message on her phone was indelibly seared into Fatima's memory. She replayed that moment over and over again vividly.\n\nThe bike picked up speed. Her hair billowed in the wind and streamed behind her. Her eyes narrowed to squints at the high speed, but she kept going. Past the Port Imperial terminal to Jersey.\n\nShe kept going until she felt drops of rain fall on her face. She parked on the shore and watched a ferry leave the pier. The ferry blared its horn, scattering birds and a few small boats from its path. Fatima screamed into the open water. She screamed. Again. She screamed to be heard, but her screams were lost in the unremitting blare of the horn.\n\nIt was no use.\n\nThe rain had picked up to moderate intensity now. A thin sleet of water washed over her face and splashed on the road. She turned around and got ready to head to her apartment.\n\nMaybe she would crash on her way back. It would certainly hurt less.\n\n<p align=\"center\">* *</p>\n\nThe sky was the colour of an old television set turned to a dead channel. An unseasonal shower raged over Manhattan, pounding the island with torrents of rain.\n\nFatima sat at her table and watched on with a glass in hand. Her parents would have disapproved, but what was the point anyway? She still prayed, more out of habit than anything else. None of it mattered. None of it would make a difference to Khalid in the hospital bed.\n\nShe swirled the glass, watching the ochre liquid reach the rim before pulling back. Again and again it came to the brink of spilling out before she tilted it in the opposite direction.\n\nA blackout had left her in darkness and only the occasional flash of lightning illuminated her apartment in brilliant white.\n\nShe heard a knock on her door. A persistent, relentless knock. Curiously, she put her glass down and opened the door to see a woman, doubled over with exhaustion and dripping wet from the rain.\n\n\"Kylie, what-\"\n\nKylie put her hand up to stop her even as she fought to catch her breath.\n\n\"Do you have any idea...\" she squeezed out between pants. \"... how hard it is to climb thirty seven flights of stairs?\"\n\n\"I'm sorry. I guess the generator might be knocked out temporarily.\"\n\nKylie stood upright, leaning against the door frame for support. It had taken her three days since their last meeting to find herself back at the same door.\n\nFatima was about to speak when she was cut off by Kylie's hand.\n\n\"Not now.\"\n\nBefore any words could come out of Fatima's lips, Kylie pressed her own lips to them and pushed her inside.\n\n<p align=\"center\">* *</p>\n\n\"Looks like the rain has stopped.\"\n\nFatima would just have to take Kylie's word for it. She was currently on her side, facing away from the balcony. Her head rested on her inner thigh. She looked down to see Kylie's head similarly nestled against the crook of her knee and her eyes gazing into the distance.\n\nAt some point in the previous few hours, they had moved off the bed to the carpet which was not nearly as forgiving as a thousand thread-count sheet. In reality, they were too wrapped up in the manoeuvring needed to kiss each other's pussy lips to care.\n\nAfter having simultaneously given and received more orgasms than either thought was possible, they lay there -- head to thighs, thighs to head, fingers intertwined and each of them drenched in a mixture of sweat and cum from both of them.\n\nKylie made the first effort to disentangle herself from the smorgasbord of limbs and lay beside Fatima. She smiled and tucked a sweaty lock of hair off her face and behind her ear. They sat up and leaned back against the side of the bed.\n\n\"Can I say I'm sorry now?\" Fatima asked, taking out a Juul from her bedside drawer.\n\n\"You don't need to.\"\n\n\"I do. I was completely out of line earlier.\"\n\n\"Your brother is in a coma. You haven't spoken to your parents in months,\" Kylie said, kissing the back of her palm. \"You are allowed to be completely out of line. That doesn't mean I'll quit you. I won't. I can't. I don't know how to.\"\n\n\"How are you holding up?\" Fatima asked. \"How is your family doing?\"\n\n\"Not well,\" admitted Kylie, taking a couple of hits of Fatima's Juul.\n\n\"What happened?\"\n\n\"Grandma passed away too,\" she said, trying hard to keep herself composed.\n\n\"I'm so sorry to hear that.\"\n\n\"We spent the whole day trying to comfort her. Only we were the ones who needed comforting. She didn't cry, didn't even show any grief, just consoled us. All throughout the day. That night she went to bed and passed away in her sleep. The prospect of waking up to a world with no J Henry was more than she could take.\"\n\nFatima listened in rapt attention.\n\n\"The whole time we tried to comfort her, she did not so much as shed a tear. Not one of us understood how much she was hurting. We were there with her, but she was all alone.\"\n\n\"That sounds horrible.\"\n\n\"No one should grieve alone,\" said Kylie. \"Not you, not me, not her. I lost two people who I love dearly in the space of one day, but I had people all around me I could talk to about it. My cousin, Joe, told me of how Grandma baked cookies for him when he came back drenched in sweat from playing stickball. My Aunt Gwen told me about the time they were there for her when no one else was. They don't really go away as long as we talk about them. It makes it hurt less.\"\n\nKylie leaned over and kissed her, tasting the whiskey and flavoured nicotine off her lips. Her hand found her bare back and traced a long lazy ellipse all the way from her neck to the base of her spine. Her tender ministrations elicited a low moan of pleasure.\n\n\"That's all I want for you, Fatima. That you don't grieve alone for your brother. Until it is your family, it will have to be me.\"\n\nFatima stifled a sob. She put a hand over her mouth and one grasped her chest.\n\n\"Will you tell me more about Khalid?\" said Kylie as they stared out into the distance outside her balcony.\n\n<p align=\"center\">* *</p>\n\nThe dull grey of the rain soaked evening gave way to night. Kylie and Stuart sat on the rooftop of the hotel where he was staying and surveyed the glittering metropolis unfurled in front of them as it eventually gave way to the sea.\n\n\"I still can't believe he's gone, Kylie. I know I was supposed to be ready for it, but still..\"\n\n\"You're wrong, Stu,\" said Kylie, \"He'll be missed, but he's not gone. He was more than flesh and bone -- he was the laughter at the family Thanksgiving dinner and the wise voice if you needed advice. Grandpa, Dad, Uncle, Friend -- there's too much of him to die with a slip in the bathroom\"\n\n\"He taught us the importance of the Strand family name.\"\n\n\"True,\" Kylie replied. \"The name is more than what you fill into an account opening form. It's a promise to show up for each other and to ride out any storm together.\"\n\n\"Damn straight,\" he agreed and they clinked their glasses of Scotch.\n\n\"I wish we could have given J Henry one last Thanksgiving family reunion.\"\n\n\"So many memories from those reunions.\"\n\n\"Remember the time Joe smuggled Grandpa's whiskey and cigars down the dumbwaiter all the way to the old basement. Joe, Mandy, Marie, Don, Caroline, you and me finished them off and just as we were about to leave the basement, we saw Grandpa at the door.\"\n\n\"Do you think he knew?\"\n\n\"Of course he knew, Stu,\" Kylie said. \"We reeked of booze and cigar smoke. He let us go anyway.\"\n\nStuart rested his head on her shoulder and put an arm around her to pull her close.\n\n\"I miss him so much, Kylie.\"\n\nShe ruffled his hair as she felt a few drops of wetness.\n\n\"After the funeral, you'll fly back to Tokyo, me back to Boston and everyone else to where they live. We'll only ever be together to mourn someone else.\"\n\n\"What if we could make it so that is not the case?\"\n\n\"I don't follow,\" her cousin replied quizzically.\n\n\"This year. Thanksgiving. One last Strand reunion. I know that it's not feasible to do it every year, but how about one last time. As a tribute to J Fucking Henry.\"\n\n\"Where?\" asked Stuart. \"The estate is no longer there and the gardens are a fucking golf course now.\"\n\n\"It was never about a building, Stu. That's where we stayed, but it was never about it. It was about our Dads opening up a bottle of bourbon on the porch as they watched the sunset. It was about you and Caroline taking your game of hide and seek too far every time. It was about Gwen scandalising us with adult magazines on the down low. It was about Grandpa carving the turkey at dinner. The building was never the reunion, Stu, we were. All of us made that gathering what it was.\"\n\n\"But then where would we have it?\"\n\n\"Gwen knows a guy who owns a chain of resorts all over the East Coast. Corporate retreats, destination weddings -- that sort of thing. He'd be willing to let us rent out an entire resort of his in Point Lookout for a song.\"\n\n\"Rent out an entire resort for two weeks? Are you serious?\"\n\n\"I don't see why not if enough people contribute.\"\n\nStuart looked out at the view in front of him. The distant sound of traffic and sirens had merged into a low background hum. Tiny red tail lights combined to a river of bright red snaking up Haring Street.\n\n\"Tell me more,\" he said.\n\n\"I haven't thought all of it out yet, but I want to be like how it used to be. Just one more time. I want your kids to play with Caroline's kids. I want us to talk and drink all night until the sun rises.\"\n\n\"I'd like that too,\" he admitted.\n\nThey sat in contemplative silence for a few minutes before Stuart spoke up again.\n\n\"Would you say it's too late to mess with Caroline's hair again?\"\n\n\"Remember she's a doctor now, so she can probably do a lot worse as payback.\"\n\n<p align=\"center\">* *</p>\n\n\"One large hazelnut and matcha cream latte.\"\n\n\"Make that two.\"\n\nFatima turned around to see Kylie sitting at the booth behind her. Her Van Halen tee shirt was almost too much to ignore.\n\n\"I'm going to pretend you're not wearing that.\"\n\n\"Fuck you. I liked them.\"\n\n\"Can I apologise properly now? I'm still ashamed about how I treated you that day.\"\n\n\"Not needed,\" Kylie shrugged off. \"I make it a point not to judge people by their worst moments. Besides, the coffee is an excellent bribe.\"\n\nFatima came over and put down both cups. Her headscarf colour of choice was jade green. A bright, lively green that brought out her eyes and contrasted with her black dress.\n\n\"As it turns out, I'll be sticking around a bit longer than expected. The funeral is planned for next week. Grandpa had already taken a two person plot. The headstone is going to be in marble.\"\n\nFatima held her hand and smiled.\n\n\"I called up a few people who had worked under Grandpa. They're now spread all over the country -- liberal news outlets and conservative news outlets. They can not agree on anything... except that Mr Strand was the best boss that they ever worked under. They plan to hold a memorial service where they talk about him. You will not believe how many of them are flying in on short notice to pay their respects.\"\n\n\"Can I come too? I didn't know your grandfather, but I would like to hear what they say.\"\n\n\"Of course you can.\"\n\nThey took a sip of their coffee each.\n\n\"I went home yesterday.\"\n\nKylie looked up.\n\n\"I took your advice and went home yesterday. I told my parents that we would no longer be avoiding each other at the hospital.\"\n\n\"How did it go?\"\n\n\"There was a lot of cursing and yelling -- both in Farsi and Arabic, but words were used for the first time in months.\"",
        "\"It will get worse before it gets better, but it will get better,\" said Kylie, grasping her hand.\n\nFatima nodded and grasped back.\n\n\"I'm not a religious person, but I will pray for Khalid. I will come back to Caff\u00e9 Nero every day until I have to leave for Tokyo, and even after I do, you can call me any time of the day or night. Your call is one I will never ignore.\"\n\n\"That would be an unreasonable imposition.\"\n\n\"Hey,\" said Kylie. \"We don't impose on the ones we love. We only share.\"\n\nFatima covered her mouth and let a single tear crawl down her face. Kylie waited for a few long moments before she spoke again, her voice choked with emotion.\n\n\"You said love.\"\n\nKylie craned her neck over the table and planted a soft peck on her cheek where a teardrop had stilled.\n\n\"Who are you and how did you come into my life?\"\n\n\"You saved me from deadly hospital cafeteria food once, or did you forget our meet-cute? Norah Ephron would have been proud.\"\n\n\"That day, Khalid's doctor had told me that he would never walk again. His spine was already damaged in the crash and had now atrophied to the point he would be paralysed from the waist down even if he woke up. I left the room, threw up and came down to the waiting room. Until that moment, all I wanted was for Khalid to wake up, but now if he did, I had to tell him that he would be in a wheelchair for the rest of his life.\"\n\nShe drank some coffee and took a brief pause to steady herself.\n\n\"In that moment, it dawned on me how alone I was. I made an instant decision that the first person I saw, I would help them and make them feel less alone. I needed the company, the distraction. A necessary distraction in helping someone else. I didn't know that I would be the one most in need of help.\"\n\nThey closed the gap slowly to the centre of the table and locked lips for a moment. A moment that went unnoticed by the scores of people around them too absorbed in their screen of choice, but a moment neither of them would forget.\n\n\"Thank you for choosing me.\"\n\n\"I've been thinking,\" said Fatima. \"If Khalid wakes up-\"\n\n\"Not if... when,\" interjected Kylie.\n\n\"... When Khalid wakes up. It will take a few months of physiotherapy and more surgeries before he is able to adjust to his new life and the wheelchair. After that, once he is settled and able to function on his own, I might leave New York.\"\n\n\"Really?\"\n\n\"There's too much here that has bad memories for me. I need a fresh start. Somewhere entirely new. It will take me a few more months after to transition all my portfolios to my replacement, but it would happen.\"\n\n\"Where do you want to go?\"\n\n\"I hear Tokyo's lovely all year.\"\n\n\"You want to move to Tokyo?\"\n\n\"Why not?\" she replied. \"I'm a kick-ass investment banker. The Japanese have money and that money needs to be invested too. BlackRock has offices in Tokyo. It wouldn't be very hard to convince my superiors to transfer me.\"\n\n\"Is that all that you're moving for?\" said Kylie coquettishly. \"A fresh start.\"\n\n\"And a certain manga artist... sorry mangaka.\"\n\nThey shared a chuckle.\n\n\"I promise not to lose my temper at you again.\"\n\n\"I don't want that. I don't just want the good parts of you -- I want all of you. The good, the bad and the sexy. I want to see you cook. I want to fight over what we watch on Netflix and who we dress up as for AnimeCon. I want to hold your hand through earthquakes. I want to go shopping in Ginza, swimming in Okinawa and skiing in Hokkaido with you. I want to make fun of Michael Bay movies. I want to explore avant-garde theatre productions and modern art galleries. I want all of you, not just the good.\"\n\n\"I wish I knew what I've done to deserve you in my life, but thank you.\"\n\n\"You saw a stranger in a hospital cafeteria and wanted to comfort them. The universe owed you a karmic debt for that.\"\n\nThey had some more coffee, unable to take their eyes off each other.\n\n\"You don't need to wait 'til you're in Tokyo. I am planning to be stateside around Thanksgiving for a family reunion. It'll be in Nassau County, but I'm sure my family wouldn't mind if I came down to the city for a day or two in between.\"\n\n\"You serious?\"\n\nKylie responded by leaning over the table again. Fatima closed her eyes and readied for a kiss, but at the last moment, Kylie moved her lips left and brought them to her ear.\n\n\"We'll need more bondage tape.\"\n\n<p align=\"center\">* *</p>\n\nEPILOGUE\n\n\"Am I speaking to Stuart Strand?\"\n\n\"Yes.\"\n\n\"Hi. My name is Fatima Ozair and I'm from BlackRock Investments. Did you see the mail we sent you earlier today?\"\n\n\"I did, though I didn't understand most of it.\"\n\n\"We saw your last three loan applications that were rejected. I did some checking up on your company, Mr Strand, and I have a proposal to make.\"\n\n\"Are you giving me a loan?\"\n\n\"We don't do loans, Mr Strand. I'm offering you something much better -- an investment.\"\n\n\"An investment?\"\n\n\"Yes. You give us a tiny slice of your company and we will give you all the money you need for expansion. The best part -- unlike a loan, you don't need to pay back an investment.\"\n\n\"This all seems too sudden. I need to think about it.\"\n\n\"I'll tell you what. Let me have some people in my team set up an exploratory meeting with you this week. You live in the Boston area, right?\"\n\n\"Right.\"\n\n\"You can show us your expansion plans in detail. Your five and ten year goals and we can definitely help you with them. No hidden secrets. No surprises. All above board. No need to commit to anything.\"\n\n\"I'd be happy to do that.\"\n\n\"If you still have any doubts, Google the last company I invested in -- Schwarzmann Pharmaceuticals. They hit their five year growth targets in six months. I'd be happy to do the same for you.\"\n\n\"Why did you pick me?\"\n\n\"Because I'm paid to know a good investment when I see it. Let's start with the meeting and then maybe a tour of your factory in Amherst. I have a good feeling you'll like what we have to say and we'll like what you have to show. I'll make all the red tape go away if you let me.\"\n\n\"Let's start with the meeting and take it from there.\"\n\n\"You got it, Mr Strand. I'll have my assistant contact you to set it up.\"\n\n\"Thank you so much for the opportunity.\"\n\n\"Not a problem. There is one more thing I need to tell you though. Something your cousin, Kylie, asked me to pass on.\"\n\n\"Kylie?\"\n\n\"She said that Strands still look out for each other. Because J Fucking Henry taught them well.\"\n\n<p align=\"center\">* *</p>"
    ],
    "authorname": "LaRascasse",
    "tags": [
        "bondage tape",
        "fatima",
        "kylie",
        "lesbian bdsm",
        "lesbian interracial",
        "lesbian romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/necessary-distractions"
}