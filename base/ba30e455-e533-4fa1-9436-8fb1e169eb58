{
    "title": "Efrain and Cory Ch. 23",
    "pages": [
        "Chapter 23 -- The Legend of Schrodinger's Queer\n\nI remembered waking up at some point that morning when Cory returned from the bathroom. He curled back up with me on the air mattress set in the middle of my bedroom and snuggled close, his hand creeping up my shirt. The way his fingers tickled through my chest hair put me in mind of a cat kneading its blanket as it dozed and I couldn't help grinning.\n\nI fell back asleep cuddled up to a 210 pound kitty.\n\nOnly to be rudely awakened by my kid sister jumping on the bed a few hours later.\n\n\"For fuck's sake, Zoe.\" I rolled over and pulled the blanket over my head. Cory mumbled a sleepy protest and burrowed into my chest. \"It's too early for this shit.\"\n\n\"'Rain!\" Zoe shook my shoulders. \"You gotta wake up!\"\n\n\"I don't gotta do shit.\"\n\n\"Mom's making breakfast.\"\n\n\"Not hungry.\"\n\n\"Vato, what's going on?\"\n\n\"Come on, you need to get up,\" she insisted.\n\n\"Don't care. Need sleep.\"\n\n\"He might be hungry.\" God, and now she was trying reason. Kid had to know it was way too fucking early to reason with me.\n\n\"We'll eat later.\"\n\n\"Mom's attempting quiche again,\" she said flatly.\n\nMy eyes flew open. \"Shit.\"\n\n\"And that's exactly what it's going to taste like,\" Zoe added.\n\n\"What's wrong with your mother's quiche?\" Cory asked groggily.\n\n\"Everything,\" she told him, but he'd already snuggled back up to me and gone back to sleep.\n\n\"Whose recipe is she using?\"\n\n\"Yours.\"\n\n\"That's what she said last time,\" I said, looking back over my shoulder at her.\n\nZoe nodded grimly. \"You know how she is.\"\n\nI rolled my eyes. \"How fucking hard is it to make a decent pie crust?\"\n\n\"I dunno,\" she shrugged. \"But, you know Mom can't be trusted with pie dough.\"\n\n\"Fuck.\"\n\n\"You're our only hope.\"\n\nI groaned again and stretched. \"Fine.\"\n\n\"Yes!\" she squealed and started bouncing on the mattress. It had squeaked at the indignity of my and Cory's combined weight last night, and now groaned in protest at her added pounds. \"Efrain's gonna cook for me!\"\n\nCory rolled over with a groan and dragged both hands over his face as I sat up and the covers bunched up at our waists. Had this been any other time, we'd be in just our underwear, and thus totally indecent by little sister standards. Last night, however, he and I had slept in pajama pants and lightweight t-shirts.\n\n\"Well that's disappointing,\" she said, frowning. \"He has all his clothes on.\"\n\n\"Do what now?\" I said.\n\n\"At least let me see him without his shirt on.\"\n\nShe bounced again, forcing us to huddle on the opposite side of the air mattress.\n\n\"You're too young to be that thirsty.\"\n\n\"Come on, at least the pecs,\" she giggled. \"I could bounce quarters off those things.\"\n\n\"What is she asking about?\" Cory said. How he managed to stay that asleep with my obnoxious sister jumping around was a mystery.\n\n\"I have no idea...\" I started to say, trailing off when she pantomimed lifting her shirt up.\n\n\"No, Zoe.\"\n\n\"I'll settle for a picture.\"\n\n\"Hell, no!\"\n\n\"But, 'Rain,\" she whined.\n\n\"God, you're fucking weird.\"\n\n\"Oh, come on. I'm sure he won't mind.\"\n\nI stared at her flatly, but it became obvious that it was having absolutely no effect on her as she tried to reach across me to poke at my boyfriend when she thought I wasn't looking. I slapped her fingers, and she pulled her hand back with a yelp. \"Mine,\" I growled. Zoe gave me her best innocent look (which still looked damningly cat-that-ate-the-canary, but, hey, at least she tried), and I caught her other hand sneaking over. I slapped that one away, too, only to see her first hand advancing again.\n\n\"Always thought you'd bring home one of those swishy, sparkly gay guys,\" she giggled, redoubling her efforts to reach past me. \"Who knew you had a taste for beefcake!\"\n\n\"Quit...\"\n\nShe reached out again and I slapped her hand.\n\n\"Trying...\"\n\nI slapped away the other.\n\n\"To touch...\"\n\nThen had to slap back the first.\n\n\"My...\"\n\nAnd then the other again.\n\n\"Boyfriend!\"\n\n\"Aw! Look at 'Rain gettin' all butthurt.\" The backs of her hands were pink, but she remained undeterred. \"You know, I'm only doing this 'cause it bugs you.\"\n\n\"Fucking brat,\" I growled and kept batting her hands back as she squealed and giggled.\n\nOut of nowhere, a pillow swung up behind my sister, hitting her in the back of the head about ten seconds before a second pillow slapped against my head. Cory, who had probably moved around while we were distracted, knelt at the foot of the bed, his hackles raised and a pillow in each hand. He was wide awake now and not happy about it.\n\n\"You assholes have 'til the count of five,\" he said, his eyes narrowed on us.\n\n\"For what?\" I asked.\n\n\"One.\"\n\n\"Oh, he's cute as fuck when he's mad,\" Zoe cooed.\n\n\"Two.\"\n\nI cut my eyes over to him briefly and found that I totally agreed with the observation. A host of dirty thoughts sprung up, but I decided those would have to wait when I caught her wide grin out of the corner of my eye.\n\n\"Three.\"\n\nHer body tensed up, as if to attack again, and I realized too late that Cory was no longer safely behind me.\n\n\"Four.\"\n\nShe watched me, as if for an opening, and I assessed the distance between my sister and my boyfriend, who still clutched the pillows at his sides.\n\n\"Five.\"\n\nZoe suddenly dove at Cory and I leapt to intercept her. Cory raised both arms, as if to swing at us, only to fall over as Zoe and I crashed in front of him. Zoe tried to scramble back, and I tried to scramble after her, but we soon found ourselves under fire from Cory's dual-wielded pillows.\n\nIn the chaos, we nearly missed the large pop that sounded from the side of the mattress. I didn't know the weight limit for the airbed, but even if we hadn't exceeded it, two large football players and a teenager bouncing on it was more than enough to cause a bust.\n\nAir whooshed out the side and the three of us quickly found ourselves deposited on the bedroom floor.\n\nZoe, Cory and I stared at each other.\n\n\"That was the good airbed, wasn't it?\" Zoe asked.\n\n\"I think so,\" I said.\n\n\"So, how much shit are you two in?\" Cory asked smugly.\n\n\"About as much as you are,\" she said.\n\n\"It is one-third your fault,\" I added.\n\n\"Fuck.\"\n\n\"I'm not sure one-third is fair,\" Juaquin commented dryly. We spun around to find the other four members of the household watching from the doorway. \"What do you think, Dad?\"\n\n\"Thirty percent?\" he suggested. \"Lena?\"\n\n\"Maybe a fourth,\" Mom answered.\n\n\"I'm not sure,\" Jennifer added. \"He was kinda provoked.\"\n\n\"Split Cory's share, then?\" Mom said.\n\n\"Not like we can hold him accountable,\" Dad said with a shrug.\n\n\"Can't really punish 'Rain anymore, either,\" Jennifer added.\n\n\"All on Zoe?\" Juaquin said, and they nodded.\n\n\"Hey!\"\n\n\"So, now that that's settled,\" Dad said brightly over Zoe's protests. \"Breakfast?\"\n\n\"Yeah...breakfast,\" Juaquin said.\n\n\"Breakfast sounds good,\" Jennifer agreed.\n\n\"Yes,\" my mother added with a sardonic lift of her eyebrow. \"I apparently have some pie crusts to fuck up.\"\n\n~*~*~*~\n\n\"And then the mattress pops, and the three of 'em are sitting on it like jackasses while it deflates.\" Juaquin laughed and kicked a small rock across the road. This had to be the fourth time he had told the story since that morning. He, Eric, and a couple relatives walked ahead of Zoe, Efrain, and me, as we led a group of cousins down to the park. The five of us had been tasked with getting them out of the house and out of everyone else's hair until dinner.\n\nWithin minutes of the first cracked egg, Efrain's extended family had started pouring in. The Rosses and Santoses joined us for breakfast. In the middle of eating, a couple more families had arrived to help demolish the quiche (after checking that Lena hadn't made it). And then even more had showed up as we cleared away the last of the dishes.\n\nThe odd thing about them, though, was that very few of the assorted aunts, uncles, and cousins looked like the Garzas. I mean, all three Garza children shared a strong resemblance with Bon and Lena, but very few family members looked like them even the slightest bit.\n\n\"This is an accumulated family,\" Bon explained to me later. \"You sometimes get stationed too far away to be with your real family, so you make one where you are.\"\n\nThe people crowding into the Garza home had been assembled over the last two-and-a-half decades as he made his way through various duty stations.\n\nOf course, it was this self-same accumulated family that was driving Lena insane. The babies could be fobbed off on the older relatives who just loved the things. The children were satisfied with raiding the storage tubs of old toys and watching cartoons in the family room. The adults had taken over the living room to socialize.\n\nHowever, this arrangement left a contingent of unoccupied teens and tweens to huff around and complain about their boredom. And since they tended to be bottomless pits, the huffing and complaining most often occurred in the kitchen, where dinner preparations were still underway.\n\nThus, a pissed off Lena.\n\nZoe suggested going to the park to play ball, and Eric and Juaquin leapt at the chance to get out of various cooking duties. Jamie and Harlie insisted that I go, dragging along Efrain in the process. A few other cousins were convinced to venture out into the cold, either because that's what the cool kids were doing or their cellphones had died, which brought our group into the double digits.\n\nEric carried one of Juaquin's old soccer balls under his arm, but we weren't exactly sure if we'd do anything more than kick it around. Zoe flitted about, rapidly texting on her phone, and was met at the park by one of her friends -- a cute girl with an Ouran High School Host Club messenger bag slung across her chest.\n\n\"Hey, Cory!\" Zoe grabbed her friend and steered her over to where I stood with Efrain. \"This is my bestie, Kate.\"\n\nKate looked between us, her mouth dropping open. I waved to her and her eyes got wide. \"That's your brother's friend?\" she whispered over her shoulder at Zoe. At least, I think she meant to whisper. I could still hear her, of course.\n\n\"Nice to meet you, Kate.\" I said to be polite, and her face turned red.\n\n\"It's been awhile, kiddo,\" Efrain said and reached out to ruffle her hair.\n\nKate stood there and stared at Efrain and me for several awkward moments, as if trying and failing to say something other than some nervous uhs and uhms. Zoe poked her friend, finally pulling her out of her stupor and into something worse.\n\n\"Can I watch you make out?\" she squeaked, then promptly slapped both hands over her face and whimpered. \"I said that out-loud, didn't I?\"\n\n\"You sure did,\" Zoe said and patted her on the back.\n\n\"How does she...\" Efrain started, but trailed off.\n\nZoe had the decency to look embarrassed. \"I forgot to hang up the phone last night.\"\n\n\"I don't get it,\" I said.\n\n\"I kinda heard the whole family drama thing,\" Kate clarified. She had uncovered her face, but instead used a very thorough examination of her shoes to keep from looking at Efrain and me. She fidgeted with the flap over her messenger bag, exposing the spines of some of her books. The lettering style looked familiar, but since I mostly read scanlations, I wasn't used to seeing manga titles in English, and it took me awhile to recognize the series.\n\n\"Dude, Junjou Romantica,\" I said. \"It's been forever since I could bring myself to read that.\"\n\n\"Huh? Oh yeah, that.\" Her eyes darted away just as quickly as they had looked up. \"It got a little repetitive. I've...uhm...been reading it just...for completion's sake.\"\n\nEfrain rolled his eyes.\n\nJust as I was about to tell him to go easy on her, Juaquin yelled for us.\n\n\"Yo! We doing this or not?\"\n\n\"Come on, Juaquin,\" Jamie whined as we came closer. \"Why can't we play football?\"\n\nHe pointed at Efrain and me. \"Because they'd have an unfair advantage.\"\n\n\"Homo team advantage,\" Eric chortled.\n\n\"Ohmigod, what are you? Like, twelve?\" Harlie said in the snarly snideness unique to girls her age (which, from my understanding, was pretty damn close to twelve).\n\nZoe snorted and continued on as if Eric hadn't just been burned by someone who probably still got choked up that Zayn Malik left One Direction. \"We'll play soccer since you totally don't have an unfair advantage, Juaquin.\"\n\n\"I have no idea what you're talking about,\" he said, belying his whole claim by bouncing the ball on his knees. Juaquin bounced the ball up higher and bounced it on his head a few times. I recalled that quite a few of the trophies and ribbons in the family room had soccer balls on them. And Juaquin was the only one wearing soccer uniforms in the pictures on the wall.\n\nI patted Zoe's shoulder. \"Don't worry, we got this.\" She gave me a confused look, and I explained. \"I was playing futbol before I even knew what football was.\"\n\nI sauntered over to steal the ball and start deflating some egos.\n\n~*~*~*~\n\nThanksgiving dinner was a pretty traditional meal with the usual fixings. Three turkeys (including a deep fried bird that one of the uncles brought over) and two hams. Pound after pound of mashed potatoes and casseroles. Dishes of brightly colored vegetables that would have been ignored on a Card family holiday table. Several pies sat back in the kitchen, but I think most of those came in with other guests.\n\nIt seemed nobody trusted Lena with pie dough.\n\nThe sheer size of the extended family necessitated the standard adults' and kids' tables. Efrain and I found ourselves once again sandwiched between cousins, on the younger end of the \"adult\" table. As much as we ate last night, plates were still piled pretty high. While it wasn't anything on par with the training I did during an average football practice, Efrain's brother still played tough and we both had to recharge.\n\nOur little group had divided up to make two teams, but once the bigger guys got serious about beating each other, the younger kids wisely sat on the sidelines to run out their cellphone batteries with marathon gaming and texting. I admit, Juaquin had earned his reputation as a forward, but he'd been away from the field too long to really put up a fight against me. We ran a pretty close game, but were tied when calls for dinner had arrived on the phones whose batteries had not been completely drained.\n\nI had offered Juaquin my hand in truce, but it seemed he shared his little brother's competitive streak.\n\n\"We're getting in a re-match after dinner,\" he suddenly declared from his side of the table.\n\nZoe giggled, laden fork poised inches from her mouth. \"Dad, did you know Cory's played full back since third grade?\"\n\n\"Had no idea,\" Bon answered almost dutifully.\n\n\"Yeah, Juaquin couldn't get past him!\" A few eyebrows shot up around the table.\n\n\"Didn't see you scoring any points,\" Juaquin said.\n\n\"Tying 0-0 hurts, huh?\" Efrain added.\n\n\"Dude, look at it this way,\" Eric clapped Juaquin on the shoulder, \"it's a good thing that the gay guy is better than you at ball handling.\"\n\nA few chuckles, some groans at the bad jokes, and the older adults went back to their own discussions.\n\n\"I'm not, though.\"\n\n\"Not, what?\" Eric asked.\n\n\"Here we go again,\" Efrain said in mock-annoyance.\n\n\"Not gay,\" I answered.\n\n\"But--\" Eric said, while gesturing at Efrain.\n\n\"And?\" I replied.\n\n\"But--\" Juaquin repeated, also pointing at my boyfriend.\n\n\"Come on,\" I taunted. \"You can figure it out.\"\n\nZoe sighed and rolled her eyes. \"He's bi, dumbass.\"\n\n\"He's banging my brother,\" Juaquin argued.\n\n\"Sounds pretty gay to me,\" Eric said.\n\n\"So, a person's orientation has nothing to do with self-identification, and is solely based on the gender of the person with which they are sleeping.\" I paused as if to give the idea consideration. \"Interesting theory, but it does present a problem. By this line of reasoning, one could not identify another's sexual orientation without first observing them in the act of mating. Thus, when describing the orientation of a person who has not been observed 'banging' one's sibling, one would have to describe them as both gay and straight at the same time. A kind of Schrodinger's Queer, if you will.\"\n\nEric and Juaquin looked at me dumbly. \"Huh?\"\n\n\"And if we were to take this theory one step further,\" I continued, pointing between the two men, \"the same could be said of you.\" I avoided looking over at Efrain, who sat with his hand in front of his mouth as if to keep from laughing, or I'd end up giggling before I could deliver the finishing blow. \"Sure, you say you're 'straight,' but how you identify means precisely jackshit without my own observations to confirm. And please don't take this the wrong way, but that's something I'd rather not have to watch because 1. Daddies are so not my thing, and 2. Well, \" I paused, as if weighing my words, then shrugged, \"at least Bon and Lena got it right the second time. It serves my purposes, then, to disregard your profuse claims of heterosexuality, assume that you are, in fact, gay as fuck, and then proceed to draw my own conclusions regarding the nature of your relationship with each other.\"\n\nI took a much-needed drink, noting with satisfaction that the entire table was silent, before looking back at Juaquin and Eric.\n\n\"I'm sure keeping your mouth open like that is a useful skill during your little Brokeback weekends,\" I said as I turned back to my dinner plate.\n\nTheir dropped jaws shut so fast their teeth clicked.\n\nI nonchalantly loaded turkey and cranberry relish on my fork. \"Hey, vato.\"\n\n\"Yeah,\" Efrain answered, matching my tone.\n\n\"You did the marinade, right?\"\n\n\"Brine,\" he corrected, squeezing my thigh under the table.\n\n\"Yeah, brine,\" I said.\n\nHe nodded at the amendment.\n\n\"Your work?\"\n\n\"Yep.\"\n\n\"Ah, I see.\"\n\nHe grunted in acknowledgment.\n\n\"It's good,\" I said.\n\n\"Thanks,\" he replied.\n\n\"De nada.\"\n\nAnd then we both resumed eating as if nothing out of the ordinary had occurred. This was, of course, Zoe's cue to lose her shit.\n\n\"Please tell me someone recorded that!\" she giggled then pretty much fell out of her chair laughing.\n\nBon snorted from his end of the table. \"You boys had that coming.\"\n\nThus began the legend of \"Schrodinger's Queer.\"\n\nAnd, yeah, someone recorded it.\n\n~*~*~*~\n\nI shifted around, trying to get comfortable enough to sleep, while I waited for Efrain to finish getting ready for bed.\n\nThe second air mattress, one of those fancy numbers that looked like it was on a box spring, supposedly wasn't as good as the one we popped this morning, but we never got to find out as someone had lost the pump. Since Juaquin and Jennifer were heading back that night, it just seemed easier to put us in the downstairs guestroom. We'd stripped off the old sheets, because who knows what they got up to last night, and remade the bed. The mattress was extra firm, and not as comfy as the now-busted airbed, but it was still more comfortable than my bed back at the dorms.\n\nAlthough, a lot of things were more comfortable than my bed back at the dorms.\n\nLike, say, concrete.\n\nThe door from the en suite bathroom cracked open and Efrain padded in.\n\n\"Hey, acho,\" he said quietly. \"Getting comfy?\"\n\n\"If only,\" I said, equally low. His family had already gone to bed, and we were the only ones up, not to mention that the guest room was on a different floor, but we whispered as if we'd still be overheard. I shifted around again. \"I hate sleeping in clothes.\"\n\n\"Then don't.\" As if to punctuate the statement, he pulled his t-shirt over his head and tossed it to the side.\n\n\"But, your parents...\" I trailed off when he hooked his thumbs into his pajama bottoms and eased them over his hips. They fell to his ankles and he stepped out of them, leaving only his dark blue boxer briefs.",
        "Efrain reached back for the knob and twisted the lock. \"Problem solved.\" This was the other upside of sleeping in the downstairs guest room. None of the Garza kids had locks on their doors.\n\nI hungrily watched him cross the room to stand at the foot of the bed. We had spent enough time kissing last night by the water, and even some time in the truck before we came in, but you couldn't exactly whip out your dick in ice-cold weather (well, you could, but I sure as fuck wasn't going to). And even if his parents had gone to sleep as soon as we tucked in, we had simply been too tired last night to do much of anything except cuddle before passing out.\n\nTonight was a different story.\n\nThe lamp on the nightstand provided just enough light to make out the obscene ridge of flesh under the fabric. Fingers trailed over the thickening length stretching toward his hip and my mouth went dry.\n\nI slid out from under the covers and knelt in front of him. When my mouth followed the path of his fingertips, lips teasing through cotton, his hand cupped the back of my head, and I took that as my cue to keep going. I drew down his waistband, letting his cock spring up, and slid his underwear down his legs. My lips closed over his head; his breath hissed between his teeth and his fingers pressed me forward.\n\nThis was my favorite part of sucking Efrain's dick, when I first got him on my tongue, the initial nibbles and licks, right before he began losing control and started fucking my face. I savored the moment, as much as I did his taste, looking up at him as I knew he'd be looking down at me. My lips and tongue stayed at the tip, teasing him just a little longer. I watched his eyes darken, and felt his hips buck forward in surprise when I slowly worked my mouth down his shaft.\n\n\"Damn, man,\" he said, half-whisper, half-pant. \"You're going to kill me.\"\n\nA small hum was all I gave him in response. I shifted my weight back and sat on my heels, readying myself for the imminent face-fuck.\n\nEfrain pulled back and bent down to kiss me. \"Think I'm going to let you have all the fun?\"\n\n\"Yes, actually,\" I whispered back.\n\nHe grinned and beckoned me back toward the bed. I stripped down to my trunks and found myself quickly stripped of even those before he maneuvered us onto the bed. His hands and mouth were everywhere at once, our cocks pinned between us.\n\n\"I don't think we'd get away with fucking in your parents' house,\" I said.\n\nHis teeth tugged at my earlobe. \"Stealth sex,\" he suggested.\n\n\"I won't be able to keep quiet with your dick in me.\"\n\n\"My fingers, then,\" he murmured into the crook of my neck before he bit. My skin tightened and my hips thrust forward. Efrain thrust back. \"Stealth frottage?\"\n\n\"I can work with stealth frottage,\" I panted. \"Although, it'll be messy.\"\n\n\"So?\"\n\n\"You really want to explain why we had to change the sheets?\"\n\n\"Point taken.\"\n\n\"Besides, I have a better idea.\"\n\nI switched directions, pointing my head toward the foot of the bed, and lined myself up with his dick. He groaned when I swallowed down nearly half of his cock in one go.\n\n\"Much better,\" he said before rolling over and dragging me on top. Efrain waited until I adjusted before gripping my shaft and guiding my head into his mouth. His tongue rolled against my glans, while his arm wrapped around my thigh to grab my ass. He stroked his free hand along my shaft, movements speeding up, grip tightening, as I whimpered around a mouthful of cock. He briefly pulled his mouth off me, and...\n\nOh fuck, he's sucking his fingers, isn't he?\n\nI redoubled my efforts on him as slick digits pressed into me, but I forgot about moving all together as his fingers sank into my ass. He flexed his hips up, thrusting between my lips, and I didn't know how long I'd last if he decided to fuck my face from underneath while doing everything else he was currently doing with his hands and mouth to make me go crazy. If I didn't shoot first, layering a face-fuck on top of his fingers stretching me open while his other hand jerked me off into his mouth would make it highly likely that I'd end up being louder than we had intended.\n\nOf course, there was nothing saying I couldn't fuck his face, too.\n\nI rolled my hips, a small experimental thrust forward into his mouth and hand, and back onto his fingers. His low growl of approval urged me on, so I did it again and again, settling into a pace that he matched with his own thrusts.\n\nI was right on the cusp of my climax, felt him building to the same point, so I wrapped my fingers around his shaft just as his fingertips shifted over my prostate. I came hard, pitiful little whimpers forced back down my throat as he continued thrusting into my mouth. His orgasm followed soon after, and I couldn't drink him down fast enough.\n\nI used the last of my energy reserves to slip off Efrain and move my head up to the pillows. Languid kisses swapped taste for taste, proof of mutual satiety, until my breathing and heart rate slowed enough to allow sleep. He turned off the lamp and we whispered our good nights. We shifted around a little until we found the most comfortable position on the hard mattress.\n\nAs I settled in to sleep, Efrain's lips brushed softly against my temple.\n\n\"I'm still going to bend your ass over the first available piece of furniture and fuck you silly the moment I get you home.\" "
    ],
    "authorname": "dayne",
    "tags": [
        "college",
        "athletes",
        "holiday",
        "interacial couple",
        "comedy",
        "blow job",
        "fingering"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/efrain-and-cory-ch-23"
}