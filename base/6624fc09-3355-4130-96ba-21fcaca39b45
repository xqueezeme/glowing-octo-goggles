{
    "title": "My Little Ventrue Pt. 02 Ch. 12",
    "pages": [
        "Author's Note: Second edit pass complete! Check out my bio for details.\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Julias~~\n\nThere were robes and ashes everywhere.\n\nJulias just stood there, eyes wide, and his gaze panned over the room of dead silence so profound, he could hear the rubbing of fabric from Beatrice as she stepped behind him. Damien \u2014 he presumed based on Beatrice's description \u2014 was kneeling, crying, and holding a unique robe to his chest. Daniel was standing over him, ready to execute him before the lake of ash-ridden robes.\n\nAntoinette looked like hell had chewed her up and discarded the bones.\n\nHe could see Natasha in the back of the lobby, hands tied behind her, and Jack, standing on his own despite a nasty gash across his torso. Thank god the kid was still alive.\n\n\"Julias,\" Jack said. His voice was labored, like he was running on fumes. \"Awesome. If you don't mind, could you... yeah.\" And then he collapsed like a sack of heavy sand. Even Beatrice winced when they all heard the loud crunch of what was probably the kid's nose.\n\n\"Mister Mire.\" The sheriff gave him a nod. \"If you don't mind, could you help Madame Vola?\"\n\nHe quirked a brow. This wasn't exactly what he was expecting to find. Though, looking at the remains of what was clearly a slaughter, he managed to piece together what happened. Or at least, that Lucas had lost and that Jack was still alive.\n\nHe walked past Damien, Beatrice still beside him, and kept his eye on the Bishop as he did so. The young vampire was pretty beat up himself, but the sheer noises of the destroyed Kindred was what shocked Julias to the bone. He'd never seen a Kindred look so broken.\n\n\"Natasha,\" he said once he reached her. He looked down at Jack, knelt down to roll him over, and grinned down at his childe. The kid was in torpor; he'd be fine once he got some blood in him. \n\n\"Julias,\" Natasha said. \"I guess you came t-to save Jack?\"\n\n\"Yeah, but I guess the sheriff handled it?\"\n\n\"Uh... no, n-not really. No it... it was Jack.\"\n\nHe raised his head back to Natasha, eyes wide. \"What?\"\n\n\"He, umm -- thank you... Miss D-Damor.\" Natasha gave Beatrice a thankful nod; the Nosferatu had stepped behind her to tear the binding off her wrists. \"I didn't get t-to see the fight between the group and Antoinette, downstairs, b-but Damien came out dragging the Prince, and we all thought-t-t-t... he had won. But... Jack was... c-controlling him. And used him to k-kill Lucas.\"\n\nHoly. Fucking. Shit. Julias just shook his head in utter disbelief. God damn it Jack, that's three elders now. What was it with Jack and Elders? Of all the problems a fledgling -- not even a neonate -- could have, killing off the city's Elders should not have been one of them.\n\nLaughing, Julias scooped the kid up into his arms, and shook his head some more.\n\n\"Um, sensitive info?\" Beatrice said.\n\n\"You came with Julias,\" Natasha said, and she smiled her little smile at Beatrice. \"I trust his j-judgment.\"\n\nShe may have thought differently when she found out Beatrice was a witch now. Natasha's words had Beatrice blinking in her own surprise though, which earned another chuckle from Julias. Everything was coming up better than he could have hoped for. Part of him was waiting for the hammer to drop, but fuck that, the hammer could wait, wherever it was.\n\nDamien, on the other hand, was a harsh contrast to the rest of them. The Mehket Sanctified, a bit small and lean looking man, hadn't moved from his spot. His cries and wails were starting to fade, but they were replaced with quiet sobs and a petrified pose. If Jack had dominated him and forced him to kill his sire, that was indeed something he could imagine breaking someone's mind.\n\nWhy hadn't the sheriff killed him yet?\n\n\"I uh... I asked the sheriff to spare him.\" Natasha started walking with him as Julias made his way to the front door of the lobby. \"I think... I d-don't think... he deserves to die. He was just... he....\" She turned the words around; Julias could see her struggle with thoughts through her eyes as she considered how to explain. \"He was....\" Whatever it was, she couldn't articulate it, and she eventually lowered her head and shrugged.\n\nHe nodded, but he couldn't understand. He had thought he knew Natasha, but he missed her sire being the sheriff, and he certainly didn't expect her to ask Daniel to spare their assailant, after what he did. The whole situation was making Julias feel like a fifth wheel.\n\n\"The fuck you letting him live for? He attacked, you guys won.\"\n\nGod damn it Beatrice, smooth as sand paper.\n\nNatasha frowned at his lover with a strange determination on her face Julias had never really seen before. \"Lucas manipulated him. He... he deserves a second chance! I saw it! I saw it in his....\"\n\nBeatrice put her hands up in surrender. \"Your choice, your funeral.\"\n\nThe group of them reached Damien and Daniel. The man was just sitting there, clearly with no intention of moving, and the sheriff looked ready to cut his head off if he tried anyway.\n\nThe Prince was still next to him. Christ, she was missing a leg, an arm, and a lot of her was torn up, split open, ripped and shredded with what looked like a million bullet wounds. But she was still alive; she'd heal once she got some fresh blood in her. A lot of blood in her.\n\n\"Mistress!\" a duet screeched.\n\nJulias almost dropped Jack at the sound of two girls screaming up into a high octave. Ashley and Julee, the Prince's two ghouls, came running out from the back stairway, and they fell to their knees by her body.\n\n\"She's still alive. Still alive!\"\n\n\"Mistress, oh god. We'll\u2014\"\n\nDaniel took a step toward them while putting his sword away in a smooth motion behind his back. \"Ashley. Julee. A moment, please.\" Adjusting his glasses, he looked to his childe. \"If you could take the Prince to her chambers, Vola? Ashley and Julee will guide you. Girls, you will have to feed her yourselves.\"\n\nDaniel and Natasha looked at each other for a little while, like some sort of opaque wall was blocking their view of each other. They glanced at each other's toes, then each other, then their toes again.\n\nThe barrier between Natasha and her sire was all too familiar to Julias. When was the last time Viktor had called him by his first name? Had he ever? It was a barrier he fought to make sure never rose between him and the unconscious kid in his arms.\n\n\"Julias?\" Natasha said.\n\n\"Go ahead. You can report to me tomorrow.\" He let his gaze linger on her, with some extra eye contact to get across his meaning. Let him deal with Maria, Natasha. No doubt the girl was smart enough to have put together Maria's involvement herself, and he didn't want his friend getting herself killed by saying something she shouldn't.\n\nNatasha lowered her head, and nodded. The little girl was only the same size as the Prince's two ballerina ghouls, but she scooped up the tall woman's battered and broken body without issue. Even a Mehket had some strength to them, and she used it to hold Antoinette to her. It was a strange sight indeed, how the small Natasha wasn't tall enough to stop Antoinette's hair from reaching the floor with how her head drooped, but it was more than telling that Daniel had asked her to help the Prince. The sheriff really trusted her.\n\nThen she turned, and left, with Ashley and Julee guiding her. They were panicked; they had never seen Antoinette injured like this, or injured at all, Julias was sure. But she'd be fine with a couple days rest and a lot of blood. More blood than the Prince's ghouls could provide themselves, but the sheriff could handle that.\n\nJulias frowned at the weeping man on his knees, and looked to Daniel. \"What about him?\" \n\nThe sheriff reached down and grabbed Damien's wrist. The young fool didn't fight him, didn't struggle, he just dragged like dead weight.\n\n\"We have cells more than capable of holding him. Madame Vola insists we spare him.\"\n\n\"Sheriff... we all know about Natasha.\"\n\nDaniel raised a brow at Julias, adjusted his glasses with his free hand, and looked past him to offer Beatrice the tiniest frown. The Nosferatu almost squeaked, and again stepped behind Julias to keep him between the two of them. He couldn't blame her.\n\n\"I was a fool to hope it... never mind. I will handle things here. Take care of your childe, Mister Mire.\" With just the faintest smile, he turned and walked off. Julias wasn't sure if he was seeing things; he had always assumed the sheriff's face was carved from stone.\n\nFrom the back, he just looked like a plain guy wearing a trench coat, dragging some punk kid by the hand across the floor. For just a moment, Julias swore he could see the weight of centuries on the man's shoulders, something that shined through his quiet demeanor.\n\nThen the sheriff stopped, and looked over his shoulder to him. He really was smiling. \"Mire? Your childe... thank him, for me.\"\n\nAnd then he walked off.\n\nJulias and Beatrice just blinked at each other, like someone had slapped them both with a hand buzzer.\n\n\"So, um... holy shit, right?\" she said.\n\n\"Yeah. Definitely, yeah. I uh, I'm going to take Jack back to my place.\"\n\nHe turned and walked out of the lobby. The last thing he wanted to do was try and explain the mess behind him to the authorities. Despite the gunfire he'd heard on the way, there wasn't a single police officer in sight though. Of course not, but who was to blame, Maria or something the Prince had done? He'd find out later.\n\n\"Beatrice.\"\n\n\"Yeah man?\"\n\n\"You, you um....\" It was just the two of them in the Elysium garden. No young Kindred fledglings or neonates were around, and the sound of gunfire had probably scared off nearby kine. The night sky was open, cool, and the silence was golden.\n\nIf it wasn't for the unconscious, cut open kid in his arms, it'd be a really romantic moment. But as least Kindred didn't make any noise when in torpor; Jack was as quiet as a corpse.\n\nJulias stepped out a little further into the Elysium garden, stared at the sky for few moments, and closed his his eyes. \"Thanks for coming with me, and... and I wanted you to know.... I wanted to tell you\u2014\"\n\nBut Beatrice took a step in closer to him, and reached out to put a clawed hand on his chest. \"You don't have to, Superman. The Prince spoiled it for me.\"\n\n\"... what? Spoiled?\"\n\n\"Total spoilers.\" She stepped around Jack, leaned up, and gave Julias the most girlish peck on the cheek he never thought her capable of. \"So we can bypass the awkward first time 'I love yous' and jump straight to the good stuff. I'll see you in a couple nights, k? Take care of the kid in the meantime.\" She winked, gave a wave with a little curl of her clawed fingers, and walked off by herself. One moment she was there, the next, her cloak of night hid her from his view.\n\nAnd he was dumbfounded. Spoiled? What? What had the Prince said to Beatrice?\n\nHe frowned down at the kid in his arms. \"Your girlfriend is too damn smart. And she ruined my moment.\"\n\nBut, as he left the garden and started down the street, with humans giving him a wide birth with confused looks on their faces, he smiled. Beatrice loved him too. She loved him. The damn psycho he loved so much loved him back.\n\nHis Nosferatu lover had never been in love, and for that he was jealous. It'd been a century of loneliness for him, and he wore it on his face despite his best efforts. She saw through it, called him out on it, and she was the first to do so.\n\nHe laughed. People were already looking at him like he was weird, carrying a boy in his arms, but now they openly stared at him as he called for an Invictus taxi with more laughter. Damn he was really looking forward to her next visit. \n\n~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nHe woke up with blood on his tongue. More than just on his tongue, it was in his mouth and going down his throat. Warm, fresh, and whatever sense of taste he'd developed from becoming a vampire ached for the taste of that blood. Hell, he could tell he was drinking it down as part of his waking reflex, no conscious effort necessary.\n\nMemories slammed into him like a truck. Antoinette! Damien. He looked around in a panic, expecting to see the chaos of the Prince's tower, but there was only a giant bed, curtained walls, and Julias.\n\n\"Julias! Christ I... yeah, I remember. You came, but... shit, is Antoinette alright?\"\n\n\"She'll be fine. Most Kindred would have died from that much damage, but she is an elder.\"\n\nHis sire was sitting next to him, his suit jacket undone, leaning forward with elbows on the bed, and his fingers netted together to brace his chin. There was a subtle smile there, a smile Jack rarely saw on his sire, a weird and kind of young looking one.\n\nBeside him was a kine Jack had never seen before, some man also in a suit.\n\n\"Uh, who's that?\"\n\n\"Just lunch for you. You were pretty beat up. That Damien sliced you open.\"\n\nJack chuckled, and winced with the pain of it. \"Heh, not nearly as bad as Viktor had.\"\n\n\"Viktor. Yeah, so that's three now, Jack. You've killed three elders.\"\n\n\"Um, the kine wi-\"\n\n\"I'll wipe his memory later, don't worry about him.\" Julias dismissed worry about the man beside with a simple flick of the wrist. The kine just nodded. Total drone mode. \"You killed Viktor and Tony with some quick thinking and a lot of luck. But Lucas? How did that happen?\"\n\nJack's smile faded, his head lowered, and he put his hand on the huge gash on his stomach. The wound was closed, but his clothes were still cut open, just like that time he woke up in Antoinette's office after Viktor.\n\n\"It was... Antoinette was fighting Damien and his mob, down in Ashley and Julee's bedroom. We were hiding in their bathroom. We could hear the slaughter....\" \n\nAnd just like that time when he'd awoken from a frenzy, on that rooftop alone with Mrs. Pavala's body, nausea flooded him. He pulled his knees up to his chest and hugged them to his body. Every time it came, he never saw it coming, but just a bad thought, a bad memory, and the nausea of murder ripped into his guts and made him want to vomit.\n\nJulias called it humanity, something Kindred lost with ages, but to Jack it was just ache. Screams, the sound of gunfire, and the sickening crunch of bones. Him and the two ghouls, they were hugging each other and hiding in the corner of that bathroom, listening to the mayhem.\n\nFlashes of memory hit him, and he hugged his knees closer. PTSD maybe, but to a Kindred, what was that? His family, Jessica stabbing him, Jack decapitating Mrs. Pavala, and worst of all, the way Viktor's face changed when Jack had defied him.\n\nWhere was all this coming from? He'd go days, weeks without thinking about this, and now it was hitting him in the gut. Again.\n\nIt sucked more because, for that split moment when Julias told him Antoinette was safe, he was so damn happy. And he still was. But now that the battle was over, and the beast inside him was calm, he did not like the black thoughts that crept up onto the edge of his consciousness. His eyes in Damien's eyes. His mind in his mind. His hands, Damien's sword, cutting through robes and Kindred. Seeing through Damien's eyes Lucas's head falling off of his neck.\n\nIt wasn't like in the movies, where a quick cut meant the head sat there on the neck before rolling off. And Lucas didn't stand there for a few seconds, like a headless chicken either. The man just fell apart, with Kindred blood splattering over the\u2014\n\n\"Hey, you ok?\" Julias said, and he put a hand on Jack's shoulder.\n\nJack shook his head, and hid his face in his knees. \"Just... remembering things.\" He shrugged. Don't dwell on it, Jack, don't worry about it, just... don't.\n\n\"Jack, come on.\" Julias reached out, took his wrist, and pried it away from his knee to force him to look at him. \"I know kid, I know. The beast in your guts keeps that shit down, but just a moment of vulnerability and it hits you so hard you want to puke.\"\n\nHe knew what it was like? Jack coughed on a half-sob. \"I have a hard time picturing you feeling like this, Julias.\"\n\nBut his sire rolled his eyes. \"Jack, I didn't have anyone when I was turned. Viktor didn't care about things as 'trite' as empathy. I lost my wife, and I lost my life, same as you. You don't think I hid in dark corners of the city and just cried for days? You don't think I accidentally killed a human or two in my youth?\"\n\nThe idea of Julias, tall, confident, and classic mobster, crying in a dark corner emo style was too much for Jack. He started laughing, but tried to hide it as best he could with his other hand. It was the sort of laughter that gently broke through quiet sobs, and turned them into more chuckles.\n\n\"Laugh it up,\" Julias said, but he chuckled too. \"But I'm not going to put you through what Viktor put me through. Talk to me, later tonight. Right now though, I need to know what happened.\"\n\n\"Ok, yeah.\" He lowered his knees, took a deep, unneeded breath, and thought back. \"The sounds eventually stopped, and I heard Damien and Antoinette arguing. He was going to kill her, and... and I ran out to stop it.\"\n\n\"Fucking hell, Jack. How many of Damien's friends were left?\"\n\n\"I don't know... fifteen? I didn't care, man. I just... I just had to save her,\" he said. Julias groaned with obvious frustration, but Jack could only shrug. \"So I stood over her broken body, and got in Damien's face. He slashed me, and then he....\"\n\n\"He what?\"\n\n\"He... he was cracked, Julias.\" Jack put his fingers on his chest, and pointed where the slash had ruined his suit jacket. \"I could see it when he slashed me, when he stabbed me, when he argued with me. He didn't want to be doing what he was doing. He had 'torn and unsure' written on his face. So I... broke him.\"\n\nJulias tilted his head to the side. \"You dominated him?\"\n\n\"Yeah. I saw the crack in his gaze, and I took it.\" Pride rose up in him, Ventrue pride that was well deserved, he felt. \"I grabbed his mind and controlled him and used his body to... kill the others.\" And the nausea returned. \"I saw it through his eyes, but I just focused on taking advantage of their surprise. It was... yeah, you saw the aftermath.\" Despite the sickness in his gut, he could feel the beast in him stand proud for his accomplishment, and he straightened his back up to mirror that. \"Then I tricked Lucas, made him think Damien had defeated Antoinette and was taking her unconscious body to him. I got him.\"\n\nHe lowered his head again, and choked on another half-sob half-chuckle. \"I... got him. He won't threaten her anymore. He....\"\n\nJulias nodded, but let out a long sigh to go with it. \"On one hand, I am both very impressed with you, and very sad that you had to go through that. Full dominating anyone is difficult, and a thousand times more difficult on a Kindred much older than you. And you had to kill... you even killed Lucas.\" Then, much to Jack's surprise, Julias frowned at him. \"On the other hand, that was a mistake.\"\n\n\"... eh?\"\n\n\"You killed an elder, but this time more than just the Prince knows about it. I know, the sheriff knows, Beatrice knows, Natasha knows, and the Bishop Damien.... Worst of all, if any of them tell Maria....\"\n\nShit. Shit shit he forgot about Maria. \"Oh fuck, fucking god I... oh no.\" He put his hands on his face and clawed at his cheeks. \"Even after Garry told us about those two! I... I had to save Antoinette! I had to, and... shit!\" He reached out, grabbed his sire's jacket, and started to shake the much larger man. \"If she finds out, she'll kill me! She'll do more than kill me!\"\n\nThere were no lack for stories among the other young Kindred who worked for the Invictus, and many of them spoke of what Maria did to her enemies. She had, apparently, the grandest mastery of the nightmare discipline of any Nosferatu in the city, including Jacob. She could make you live your worst nightmare, make you think it was real, make your brain tear itself apart.",
        "Now he was really panicking.\n\n\"Don't worry about it for now. No one's going to rat you out, except for maybe Damien if he gets the chance.\"\n\n\"You guys spared him? He cut off Antoinette's arm and leg! He... he....\"\n\nA flash of memory from the ball flashed in his brain. Epiphany hit him so hard, he blank stared at Julias with his jaw hanging.\n\nI only know one other Kindred who has that weird, unknown quantity. Unpredictable. Hard to guess. I like it!\n\nDamien. He meant Damien! No one had seen her heard of this vamp for fifty years, and the way his face looked when Jack stopped him, that man was beyond conflicted. And Jacob knew it.\n\n\"Jacob....\"\n\n\"Jacob?\"\n\n\"He knew about Damien. He... he....\" He could picture it so easily now, so easily that it was sickening. That old monster, manipulator, arranging events in the Danse Macabre, just to see... just to see what Damien would do? What would happen to him, maybe? The fuck was that guy's end game?\n\nJulias got up and started pacing, hand on a chin, other hand under his elbow, with that classic thinking look on his face. \"If he knew about Damien, then he probably was in communication with Lucas before their suicidal attack. They were friends before.\" And then he punched his palm like a classic courtroom drama. \"And he probably convinced him it was a good idea.\"\n\nHis sire stepped near the bed and leaned back against the wall with arms folded across his chest. \"That does sound like something Jacob would do. And now that Beatrice works for him, he\u2014\"\n\n\"What!?\"\n\n\"Yeah. You can trust her, but... yeah even without her, he'll have some way to piece this together, eventually. Maria and Jacob aren't enemies, but if Jacob sees a way to turn this info into something he can use, then\u2014\"\n\nJack put up his hands and called for a time out. \"Wait wait wait. Antoinette and the sheriff are alive, right? I like to think I'm on their good side. If Jacob moves against me, he'll be signing a death warrant.\"\n\n\"You think she'll fight for you, if it comes to that?\"\n\n\"I do.\"\n\nThe words were out before he even thought about it. Julias blinked at him, and Jack blinked at himself, but there it was, he just knew.\n\n\"... you love her, don't you? Not just kid stuff, but really?\"\n\n\"Yeah.\" He smiled again, and his mind drifted back to what he'd done just hours ago, himself standing between Antoinette and Damien. There had been no hesitation there either, once he realized she'd lost the fight. He just put himself there, between her and death.\n\nThen Julias got serious. He walked up to the side of the bed, reached down, and held out a hand to pluck Jack up onto his feet. \"Viktor was a very powerful elder, but I knew I would outmatch him if I survived the centuries. I'm good Jack, I am very good.\" Then he put an arm around the kid, and gave him a half-hug while walking him toward the bedroom door. \"And you'll outmatch me eventually too. I picked you for a reason, and you're proving it was the right choice.\"\n\n\"Arg, my ego, it's going to explode.\"\n\n\"Laugh all you want kid, but if you thought you had a bulls-eye painted on your back before, you're in for a surprise. I hope you're ready, because you're in the Danse Macabre deep now.\"\n\n~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\nHe woke up with a scream.\n\nThe twisting world of black, death cries, and blood flashed in front of his eyes with the torrent of awakening. He tried to jump, to run like a terrified rabbit, but the chains that held him snapped with enough force to nearly break his ankles.\n\n\"Ah... ah....\" He looked around. Wrists were bound to the wall behind him, as were his feet. The room was just a metal box, not unlike Tony's room they used to hold their Lancea et Sanctum objects. The only light source was one of the LED wall lights the Prince seemed so attached to. Was it because the light was white? Faux sunlight? It always was an interest to the dragons, he knew, to explore how to obtain what was lost to them in the embrace. The ability to see the sun was perhaps the most romantic fool's hope.\n\nThe twisting of his flesh brought his attention back. Skin and muscled bound over each other to close the wound in his literal heart, and it was a painful process. Healing from the stake that someone had just plucked from his chest. Better than dying a second time though.\n\nHe looked down at himself. His clothes were full of bullet holes. Had he been shot?\n\nRight, that's right. He'd been shot by his own followers before he killed them. Before Jack, riding his mind, killed them.\n\nBefore his body had been used to kill Lucas.\n\nThe reality of that fact sat on him with so much weight, he couldn't appreciate it. His sire was dead, and he had killed him. Jack, that tiny fledgling, had killed Lucas, but if Damien had been stronger and more secure in-mind, the Ventrue would never have gotten his hooks into his body.\n\nThey were disgusting memories, blurry images of his friends dying by his sword \u2014 not friends, he thought they were thugs. At the worst of the flashback, he saw his sword cutting off the head of his mentor so that it fell to the floor \u2014 mentor? He had never taught him anything, and Damien had spent fifty years alone.\n\n\"You look conflicted,\" the sheriff said.\n\nDamien gave a small grunt. \"... you spared me.\"\n\n\"Yeah, we did!\"\n\nNatasha. The girl's voice had found a volume Damien had not expected. She was no longer bound, and someone how given her some proper clothes, something quiet and boring of course.\n\n\"... then. Not now, then,\" he said. \n\nThis time it was the sheriff's turn to grunt, barely audible. \"Oh, during the purge. Was that a mistake?\"\n\n\"Of course it was.\" Fifty years, fifty fucking years he slunk around Dolareido like a weasel. For God, he had told himself. He was suffering for God.\n\nNow he was suffering for nothing and no one and it was all meaningless.\n\nHe raised his head and forced himself to look around. Natasha and the sheriff were standing next to each other, close enough that their similarities were all too obvious. They were in the room with him, and behind him was a simple metal door, closed. They wouldn't be able to get out unless they were let out, so one of the Prince's thralls must have been on the other side.\n\nThey treated him like he was dangerous. That made him smile a little, but it didn't last. All that work and now he was just a trapped rat with nothing left. Lovely.\n\n\"Perhaps. You did nearly kill Annie,\" the sheriff said.\n\nAnnie? Ugh. Even Natasha looked at Daniel with a quirked brow. To hear the cold and quiet sheriff use such a cute nickname was very odd.\n\n\"But I failed.\"\n\nDaniel stepped in closer, but his expression was as blank as always, with monotone eyes behind boring teacher glasses. \"Because you're too smart.\"\n\n\"... excuse me?\"\n\n\"I spared you because I saw that look in your eye, kid.\" Daniel raised a gloved hand and put a finger to his own temple. \"When everyone else was just mindlessly following orders, Lucas's orders, I saw your eyes. You were thinking, analyzing, trying to figure out what was going on, how, why, who, and where to go.\"\n\nDamien had never expected the sheriff capable of so many words. Had Damien been like that? The memory was a lifetime ago\n\nDaniel reached out and put that tapping finger against Damien's temple.\n\n\"And I knew you were worth sparing. The Prince does everything she can to encourage self-awareness in our kind, and when I saw you had those eyes....\" This time, Daniel poked him in the chest hard enough to nearly break bone. \"I saw the same look Natasha had. I embraced her only weeks before we started the... you know the rest.\"\n\nDamien wanted to vomit. This waxing about self-awareness was garbage... wasn't it? He looked back, and thought of his sire, standing in front of over a hundred Kindred and giving a rousing speech about God, being God's monsters, and serving in his grand plan. It had all made so much sense, without any real, concrete evidence to support it. And Damien could remember trying to push down that voice in his head that demanded he question it, and instead just accept it.\n\n\"You're a very powerful Mehket for your age, Damien.\" The sheriff reached into his trench coat and pulled out something wrapped in leather straps and old strings. With slow fingers, he unwrapped a small blade. An innocent looking thing, small, a knife you'd store in your sleeve. \"So I know you have the sight. Auspex.\" Daniel put the innocent blade into Damien's hand, and leaned in a little closer, close enough that Damien could see past the glasses and into the man's eyes. \"So see!\"\n\nBoth Natasha's and the Bishop's eyes went wide at the sound of the sheriff raising his voice. They didn't recognize it, so completely alien.\n\nDamien looked at the small blade between his fingers. He knew this blade; he'd seen the Bishops and the Archbishop with them, so long ago. Damien had never managed to get his hands on one. They carried them on their belts, and every newcomer had just assumed they were for protection, or decoration. \n\nBut the emotion that poured from that blade into his mind was not so innocent. For just a single moment, all he could see was the flash memory, blurry, a mirage of hazy faces and moving bodies. He recognized the church he used to go to after hours, after the sun had set, after the living had gone home and the dead came out to preach of their unholy mission.\n\nThen the vision changed. One of the Bishops, and the Archbishop Lucas, standing about with a Kindred between them. Someone tied up, someone with their hands and feet cut off, someone they were killing.\n\n\"The city is ours,\" Lucas said. \"It is mine. And all will bow to me.\" His voice sounded like one of those classic cartoon villains, complete with the blatant laughter with head raised to the sky.\n\nTime froze on that single moment. He didn't want it to, but the vision, the sight felt otherwise. His vision passed between each Bishop and the Archbishop, all looking at each other and the Kindred they were butchering. They were all laughing. Arrogance was on their skin like boils. Pride dripped from their teeth. Righteousness and delusion soaked into their bones.\n\nIt made him want to vomit from his dry, empty stomach.\n\nDamien dropped the blade. Again, the dead of silence was all that greeted him of the metal room, until the blade tinked against the floor. It might as well have been thunder.\n\nHe looked down at it, at the two other Mehket in the room, and then away. Everything was a joke, just one big fucking joke.\n\n\"Some will say Lucas only grew so desperate tonight because his half-century torpor damaged his mind.\" Daniel shook his head, picked up the small, once-innocent blade, and stared at Damien from only inches away. \"But we know different. Your sire was a monster long before then, and he slaughtered dozens of Kindred to spread his churches.\"\n\n\"I... he....\"\n\n\"He sired you for the same reason I spared you, Damien. You have potential.\" The sheriff poked him in the forehead, and eased his head back to keep it upright with his fingers. \"You have a brain. So tell me if I'm wasting my time, and should I just kill you?\"\n\n\"Longinus... was it all a lie?\" His faith, his beliefs, God, Longinus, the afterlife, damnation, was it all just Lucas and his plans for control?\n\nDaniel sighed, stepped back, and started wrapping the knife up before handing it to his childe. \"The Lancea et Sanctum are in many cities, and many are just as violent as Lucas. Many are not though, and some even preach of tolerance. And... you saw what Lucas did. His faith had some merit.\" The sheriff winced then. The sight of the Prince getting struck by a blast of lightning from the now-disintegrated blade had been nothing short of godly.\n\nEven the sheriff was admitting to the possibility of God then? But Lucas was just a zealot with typical aspirations of control? Damien coughed on the laughter trapped in his throat.\n\n\"God should have struck my sire down.\"\n\n\"Yeah, but they didn't. So I ask again, should I just end you? Do I need to kill you to protect Jack?\"\n\n\"The boy? ...no.\" Damien shook his head again, and let out a blatant sigh of exhaustion and defeat. \"I have only myself to blame for that, and....\" And the kid just took advantage of the crack his doubt had already put into his walls. \"... but all I have are my words.\"\n\n\"My childe seems to trust you, and I trust her judgment more than mine.\" Daniel sighed, shook his head, and stepped up to the door. A small knock-knock later, and it opened from the outside. \"I'm leaving you here for now. We'll be back later to discuss it.\"\n\n\"... ok.\"\n\nWhat else was there to say? They were letting him live. Or rather, Natasha was keeping him alive.\n\nHe tilted his head to the side when he looked at her, eyebrows furrowed with confusion. It didn't make any sense! He mouthed 'why' at her, and she returned his gaze with a timid smile.\n\n\"I saw your eyes when you k-kidnapped me, and... when we were alone in your alt-t-t-er room.\" She squirmed a little. Such a tiny thing, weak and pathetic, and...\n\nNo, not pathetic. Not weak. Lucas was still in his head, preaching about strength of faith, courage to follow orders. It made Damien squeeze his eyes shut to force the reflex down. Lucas was dead. Think for yourself.\n\nIf he wasn't chained up, he'd probably have fallen to his knees and starting weeping again.\n\n\"My eyes?\" he said at last.\n\n\"I could t-t-t-ell you didn't want to be d-doing... what you were doing. You... you have....\" She looked down, frowned, and stepped toward Damien. It was the first time he'd ever seen the girl look so certain. \"You have nice eyes.\"\n\nEyes. All in his eyes? The image of Jack's eyes hit him then, big, green, and ripe with humanity.\n\nDamien chuckled. He thought he'd crushed his own doe eyes long ago. Apparently not. He managed a nod then, smiled, and let his head droop.\n\n\"I'll see you tomorrow,\" she said, \"I want... t-to t-talk.\" She even giggled, a sound that had Damien's eyes wide even as they were still looking at the floor. \"I won't shoot you this time.\"\n\n\"... ok.\"\n\nThere was something peaceful about defeat. He couldn't really fight or struggle anymore, all he could do was accept it. He'd been wrong to listen to Lucas, and it had taken all this fucking insanity to make that finally click. Maybe... maybe he could start over.\n\nA second chance? Sounded like a miracle.\n\n~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~\n\n~~Natasha~~\n\nOne of the Prince's many thralls closed the door behind her. How many kine worked for her? How many was she capable of keeping seduced with her Daeva disciplines at once? It was scary just how strong she was.\n\nScarier was how just a couple hours ago, the Prince was a mess of flesh and ash and bone on the floor. Natasha shivered at the thought.\n\n\"... are you ok?\" Daniel said. He'd been looking at her, and only managed to ask once he looked away, hesitant to ask probably.\n\nThe two of them were down in the tunneled halls of the tower. It'd been a long, long time since she had ever seen these halls. She was impressed that the Prince had managed to update the lighting.\n\n\"I'm... ok, yeah. Ok.\" She hugged herself, nodded, and started walking. \"... sire.\"\n\n\"Yes?\" He didn't turn around to look at her, he just kept walking.\n\nBut before she could stop herself, she had reached out, grabbed his hand, and forced him to turn around and face her. She was frowning too, even glaring. She tried to tell herself to stop, but it wasn't working. Frustration was overriding her ability to think and calculate, but she didn't care.\n\n\"You... you... you idiot!\"\n\n\"... excuse me?\"\n\n\"Idiot! Y-you... you d-didn't... you shouldn't... you're not my master anymore. Why did you let Lucas... nearly... k-k-kill the Prince!\" Her other hand trembled, but she kept her grip on him with the other. His actions made no sense, and he had to answer for that!\n\nShe couldn't have been the reason. Daniel and her hadn't spoken in decades, not really. So why?\n\nHe looked at her, and the weight in his eyes struck her cold. Her hand fell away from his, and her eyes were trapped in his own. The sheriff removed the glasses too, as if he was trying to break her heart when he gazed at her. But, despite the sadness on his face, the lanky man offered her a small smile.\n\n\"Sorry. Sire and childe. You know the tale.\"\n\n\"That t-tale doesn't... it doesn't apply to us! I left... left the Ord-d-do Dracula when I was young. We haven't... we don't....\"\n\nThen, he turned around, and got down on a knee. Like some sort of knight, he reached out for her hand that she had let drop, and put it back into his.\n\n\"W-w-what are you-\"\n\n\"I am old, Natasha. Four decades of us separated is not long. I watched you grow from a distance, kept my eye on you, and let the years go by. You grew into into a very intelligent Kindred, extremely useful to the Invictus, and... someone the Prince and I want to keep around.\"\n\nThey had been watching her? Both Daniel and the Prince?\n\n\"B-b-b-b-but... you know why I left the Order.\" Because your ideologies were terrifying.\n\n\"... I do. The Ordo Dracul seeks to transcend our curse, to understand it, and that is a scary thing to consider to someone like you, who prefers hard facts, numbers, money.\" He chuckled.\n\nWho was this man holding her hand? He never chuckled before, not ever. He never even used to smile, like he was now.\n\n\"I remember the work you showed me... at... that nest.\" She motioned with her free hand to the tunnels behind her, where somewhere they had stashed away a Wyrm's Nest. \"It was supernatural!\"\n\n\"Kindred are supernatural.\"\n\n\"But\u2014\"\n\n\"You saw what Lucas did, Natasha. Do you still think we are nothing more than parasites, or a disease?\"\n\nShe frowned and lowered her head. Truth was a harsh mistress, and it had slapped her in the face when Lucas had somehow called upon something divine or magical to attack the Prince. The lightning strike was seared into her memory.\n\n\"I....\" Take a moment. Think it through. Be careful with what you're thinking, Natasha. \"I... I want t-to know... how he did that.\"\n\n\"He called upon\u2014\"\n\n\"No, no I mean... really understand.\"\n\nDaniel tilted his head to the side, got back up, and turned to put his back to the wall. His gaze was quiet again, but at least he kept his glasses off.\n\n\"The Coils of the Dragon, the Cruac of the Circle, the Miracles of the Sanctified. They do not easily fit into tidy boxes that you can file away, Natasha.\"\n\n\"That's fine! I... want to learn.\" She stepped toward her sire again, and offered her best 'I'm sorry' face. She knew how to look apologetic. Maria had encouraged that skill.\n\n\"You want to rejoin the Order?\"\n\n\"Yes!\"\n\n\"... what of Vivienne?\"\n\n\"I... she....\" With a sigh, Natasha joined her sire against the wall, hands behind her and one foot kicking at the floor. \"She... she's moved on.\"\n\n\"Like you did with me?\"\n\nThe parallel was definitely there, and it hurt. \"Maybe. She'll... she'll... either she'll rejoin the Invict-tus, or... she'll... I don't know.\"\n\n\"Well, with Lucas gone, there's no reason you can't speak to her.\" Sighing, Daniel looked down at the glasses in his hand, and mirrored his reflection in them. \"Don't do what I did, and just watch.\"\n\nEasier said than done. Natasha felt abandoned by Vivienne, betrayed even. But then, that was just perfect, wasn't it? She knew how her sire felt now at least, and after a few seconds, she smiled up at the lanky man beside her. If this relationship could be saved, then hers and Vivi's definitely could be.\n\n\"I'll give her a few days and see what she does. B-but I will talk to her.\"\n\n\"Good.\" Daniel returned her smile -- such a wonderful thing to see on his usually stone face -- and gestured back down the hall with a nod of his head. \"What do you plan to do about the Bishop?\"\n\n\"You're... letting me choose?\"",
        "\"Within reason.\"\n\n\"I... um....\" She netted her fingers together, twiddled them in front of her, and chewed on one of her fangs. Damien deserved a second chance, she was sure. There was much more to him than Lucas knew, than the others knew, and probably anyone else knew except her and Daniel. But that's how it always went; Mehket could see the truth behind the lies and the deception. That was what Mehket did. Mehket and secrets, moths and flame. \"I think we should release him.\"\n\n\"... you're serious?\"\n\n\"I am! You were right. And I'm right! He's... he deserves a second chance.\" Saying it out loud was much more cheesy than she could have imagined.\n\nBut it only made her sire chuckle. \"I understand, more than you know.\"\n\n~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~\n\n~~Beatrice~~\n\nBeatrice sat on the edge of one of the caves, deep inside the Circle's cavern of total metal awesomeness; she really liked it. Ghouls wandered around, keeping the colossal underground cavern clean, changing the candles that sat on skulls in wall grooves, and dusting off the bones that decorated the rock. She was smiling.\n\nBehind her, Jennifer was on her knees on the furs, and combing Beatrice's hair. Behind Jennifer were a couple of male ghouls, sleeping, naked, and smelling of sex. Jennifer had just finished a bout of fucking when Beatrice had come back, and had insisted on chatting.\n\nIt was the first time a girl had demanded chit chat, and she really didn't mind. Wow, how much had she changed? Soon she'd be wearing dresses -- oh shit she'd already done that just a few nights ago!\n\n\"So you didn't come back after the ball. Have a lovely night with Julias?\" Jennifer grinned a sly grin, and kept combing.\n\n\"Yeah, I did.\" The smile on Beatrice's face could not be hidden, especially not with her massive crocodile teeth. \n\nIt had been a few nights since the ball. Memories of Julias eating her out in the dark alley were the kind of memories she was hoping to make, especially after seeing those hungry eyes in her white knight during the ball.\n\nWhat she hadn't expected was the night of being pampered like a queen, with slaves doting on her, massaging and fingering her while she had her man's cock inside her ass. Christ, the thought of that array of fingers rubbing her all over her bits while Julias watched her cum on him was enough to nearly have her running back to him.\n\nBut the guy could use some time with his childe. He deserved that.\n\n\"No details for me?\" Jennifer leaned in closer, and wrapped one of her hands around Beatrice's stomach. Yet she kept combing her hair, and damn it, Beatrice found herself loving having someone else comb her hair; it was new.\n\n\"You're getting double penetration on a regular basis, slut. What details could possibly satisfy your curiosity?\"\n\n\"Aww.\" Jennifer pouted, but leaned back and resumed combing from a normal distance. \"It's not about me. Just the thought of that Mister Tall'n'Broadshoulders bringing you back to his mansion, you, Miss Scary'n'Sexy, is a real turn on.\"\n\nBeatrice rolled her eyes. Jennifer really was young, only ten years embraced, and it was starting to show. Beatrice knew it would normally irritate her, but not this time. What normally bothered her was proving to be fun when on the greener, happy side of the fence.\n\n\"He used his jedi mind tricks to get a couple to come home with us. Lots of sex ensued.\"\n\n\"Oh my, a Kindred pair sharing a kine pair?\" She leaned in even closer this time, and put her chin on Beatrice's shoulder. \"Were you perhaps doubly penetrated as well?\"\n\nBeatrice slowly turned her head away. There had been dicks, and fingers, and stuff. She didn't need to say it though!\n\n\"Delicious.\" Jennifer squeezed in a little tighter, and put her cheek against Beatrice's. \"Can I come next time?\"\n\nSo friendly, this Ventrue. That'd be two Ventrue getting into her pants, too. Maybe she put out some kind of air of vibe that attracted overly-confident Ventrue types?\n\n\"... I'll ask.\"\n\nHey, Jennifer was extremely hot. There'd be no harm in asking Julias, right? And Beatrice was getting kind of attached to her fellow witch. It was nice to have a proper girlfriend.\n\n\"I've never shared my bed with another Ventrue. Does he fight for the top position? That could be\u2014\"\n\nThey both stood up with a jolt. \n\nThey hadn't heard them coming, no one had. The ghouls were carrying on about their business, and all the other Kindred hiding out in the cave hadn't stopped whatever witch things they did. No one had given warning. But just like that, like stepping out of the air itself, the Prince and her dog of war were in the cave.\n\n\"H-how...\" Jennifer stood behind Beatrice, practically hiding, and kept a hand on Beatrice's side. She was trembling.\n\nBeatrice was trembling too. The sheriff was there, standing in the middle of the grand chamber. His hands were folded across his chest, and his trench coat looked as boring as ever. Hell, even the flat, monotone look the school-teacher sheriff gave everyone from behind his boring glasses was the definition of dull, but when his eyes met Beatrice's, she took a step back deeper into Jennifer's little cubby-hole.\n\nShe could feel the anger pour out of the beast inside the dull man, and it was more than enough to bury the whole of the Circle's cave. She could almost see the sheriff's inner beast, like a titanic, coiling snake of shadow and venom. The moment he decided to strike....\n\nAnd beside him was the Prince. Tall, beautiful, and just as pissed. At least she was wearing something more interesting, a lovely power suit with loose pants, and for just that split moment Beatrice was intrigued by it. But then Antoinette's wandering gaze found hers, and again the Nosferatu was paralyzed.\n\nIf Daniel was the serpent, ever still until ready to strike, Antoinette was the tiger. Quiet when she wanted to be, and more than willing to be loud when she wanted to be.\n\nOthello came out of his hole, and so too did Aaron. She had never spoken much with Aaron, a Gangrel pale-skinned fellow of average height and build. But he too, like Jennifer, blinked in dismay at the sight of the two suddenly in their home, and backed away.\n\nJacob was in the further end of the grand room, closer to the wall that held the largest array of bones in a grand decoration of patterns. He was just in his robe, like usual, and he'd been playing with a new pile of bones when the two dragons arrived.\n\n\"My Prince, sheriff, I'm humbled that you've both decided to visit!\" Jacob raised a hand through the air, like he was parting a crowd, and stepped forward toward them. \"What brings you to the Circle of the Crone's little hole in the earth?\"\n\nThe Prince walked forward to meet him. Othello was about to join Jacob, but one look from the sheriff made him back off.\n\n\"I nearly died,\" she said. Just a whisper, but the solid walls of the cavern made it echo in the dead silence.\n\n\"I'm sorry?\"\n\n\"I nearly died.\" She got even closer, until there was only two feet between the two titans. \"My ghouls could have died. Jack could have died!\"\n\n\"I'm not sure what\u2014\"\n\nThe sound of her fist colliding with Jacob's face was just a quiet thud, but the following silence was colossal. The ancient Nosferatu fell back in a spin onto his hands and knees. Even caught by surprise, he managed to land with cat-like grace, and he got up with a casual nonchalance before rubbing at where the Prince punched him.\n\n\"I take it your date with the Archbishop didn't go well?\"\n\nBeatrice winced. Antoinette was shaking, fists tight at her sides, and her body screamed ready-to-kill.\n\n\"Why would you do this? I thought\u2014\"\n\nJacob was the one to step in this time, and he laughed right in the Prince's face. \"I didn't do anything! I\u2014\"\n\n\"You goaded Lucas! You knew what he would do! You arranged this, you knew he would bring chaos to my door. You knew Kindred would die!\"\n\nTwo elders screaming at each other. The tension had Beatrice crouched down and ready to bolt like a scared animal. Hell, no use denying it, she was a scared animal.\n\nWhen Jacob punched Antoinette right back, everyone gasped. Only the sheriff didn't make a noise.\n\n\"How dare you,\" she said. \"I will\u2014\"\n\n\"You needed a wake up call, Prince.\" He used air quotes around her title, and snarled more rebuttals. \"When Tony and Viktor were vying for power and looking for ways to usurp you, what did you do? You waited, and came to me when you wanted a way to end them with minimal damage. Minimal damage!\" His voice was a scream, but it deteriorated into a laugh. \"You forget what Kindred are!\"\n\nThe two of them were throwing around secrets that could shatter the Danse Macabre if abused, but it was like neither of them cared anymore.\n\nAntoinette rubbed at her cheek where Jacob punched her, but she didn't strike back. Instead, she glared daggers into him. \"It does not have to be that way. It does not!\"\n\n\"Bullshit. You know it, I know it, and you need to accept that! You spent over a hundred years trying to raise Tony 'right' and all you managed was to create your typical scorned lover, with a good dose of obsession. How long did you try and convince Viktor to change!\" Jacob stepped in closer again, and he shoved the Prince back with both hands.\n\nThis wasn't the battle of wits Beatrice had always pictured elder Kindred engaged in when they fought. This was too familiar. This was no different than her arguing with Julias. And the sheriff was just letting it happen, but Beatrice could see the frown grow on him.\n\n\"Viktor was alone. Tony chose to be alone. But you, you had someone!\" The Prince caught Jacob's wrist, squeezed, and yanked him in until their faces were almost touching. \"You had someone you loved! You know it does not have to be this way!\"\n\n\"She's dead!\" Jacob yanked his hand free, and shoved her again. \"She's dead and you know why!\"\n\n\"And you know it was worth fighting for! We do not have to devolve into savage beasts!\" The Prince stood her ground, but lowered her head and looked to the side, toward Beatrice. Just a quick glance, just a small hint of knowing before looking back at Jacob. \"Do you think Minerva would\u2014\"\n\nJacob growled, a real growl, a growl that did not fit a human's mouth, and he punched the Prince again. This wasn't the same as the others, the frustrated jabs and the childish shoving, this was a real punch, with all a Nosferatu's strength put into it.\n\nAntoinette went flying. She spun out of control in the air and collided with the front wall of the cave over the entrance. Bits of ash trailed in the air from where she'd been flying, and when she finally came to a stop, Beatrice could see much of the Prince's face was destroyed by Jacob's punch. The rock had cracked where her body smashed into it.\n\nDaeva and Nosferatu were both very, very strong, but neither could take a punch like a Ventrue or Gangrel. Whoever got the first punch was liable to win the fight, and Jacob was the one who did.\n\nBut he didn't follow it up. It wasn't because of the sheriff, who just stood by and watched. Maybe Jacob didn't want to follow it up, and instead fumed and snarled from where he was. He tore off the bandage that covered his eyes to expose the empty voids of permanently seared, ruined flesh.\n\n\"Shut your fucking mouth. Fucking snake, do you have... how dare... you fucking....\"\n\nBeatrice brought both her hands up to her mouth as Jacob's speech fell apart. Minerva? She looked down at Jennifer and mouthed the name, but Jennifer just shrugged and mouthed 'I don't know.'\n\nThe Prince put a hand to the wall and forced herself up. Beatrice could only imagine the elder's stamina; it was only a few days ago she was barely in one piece. But the Prince shrugged off the damage, put a hand to her half-ruined jaw, and shifted bone into place. It regrew in moments.\n\nGod fucking damn she healed fast. The fuck happened to her in the tower that had her so near death before?\n\n\"Jacob.\" She walked toward him, confident in her stride despite Jacob's attack, and stopped before him. \"You may have your witches fooled, but I remember the days when we came here, the three of us. And now there is two of us. You,\" she said, and pointed a finger at him, \"I... I do not want to see you gone, as we saw with Viktor. We do not have to be enemies.\"\n\nJacob didn't seem interested in a nice chit chat anymore. He took another swing, but the Prince was ready this time, and she ducked under it with speed that had Beatrice's eyes sting trying to follow it. Daeva were faster. Antoinette got her hand around Jacob's throat, lifted him up, and choke slammed him into the stone earth hard enough Beatrice could feel the vibration.\n\n\"So you will listen!\" She slammed him down again, and Beatrice gasped at the sound of breaking bone when Jacob's skull cracked against the cave floor. \"You know there is only hard times in the Kindred's future, witch! You play your games and let us destroy each other, so only the strong survive, but your game makes us weaker! Soon there will only be a handful of us, strong, wise, and alone! What good is there in our second life if we are doomed to live it alone!\"\n\n\"Not everyone wants\u2014\"\n\nShe cracked his skull again.\n\n\"You deceive yourself as much as anyone else! I remember how you laughed, full of joy and spontaneity when Minerva was alive. I saw what it did to you when she died. And now, like a child, you want to spread misery! Your culling is a lie, and I will not have it. I will see you dead before I let you risk everything I have worked for, for everything I have earned.\"\n\nBeatrice got ready for the next hit. If the Prince really pushed it, she could probably punch straight through Jacob's skull and splatter his head; even Jacob couldn't survive that. But it never came. Antoinette gave a long sigh, let go of the Nosferatu in her hands, and stood up straight.\n\n\"I found someone, Jacob. Someone with whom I can lower my mask.\" She dusted herself off -- comical considering the situation -- and reached down to offer Jacob a hand. \"You think us all animals, concerned only with survival. I think differently. Minerva thought differently.\"\n\nJacob tried to swat the hand away, but Antoinette caught his wrist and held onto it.\n\n\"Enough with your Daeva poetic bullshit, girl. Minerva is dead, and your\u2014\"\n\nAntoinette yanked him to a stand with a hard grip and harsh glare. \"You do not fool me, old monster. If you could just let your misery go, you could move on.\" She got in closer, until they were almost touching noses. If Beatrice didn't know any better, she'd think Antoinette was going to kiss him. \"And, perhaps, you could find someone again.\"\n\nJacob lowered his head, looked away, and gave a small grunt. The dude looked ashamed, and even a little broken.\n\n\"But,\" she continued, \"if you try to test my worth with more of your games, I will not be merciful next time.\" She pulled away and started to walk off, but stopped after a few feet and looked over her shoulder at the old man. \"We do not agree on much, old monster, but....\"\n\n\"Yeah, I know. I remember our promise.\" He shrugged a little, and rubbed at the back of his head where a cracked skull was healing. \"Besides, I knew you'd come out on top.\"\n\nThe Prince gave him a mix of a smirk and a glare, and left through the cave's tunnel entrance with the sheriff behind her. No more words, no ceremony, she just walked out.\n\nReally? Is that what this was about? Jacob used to have a girl, dead now, and now he was sour about it? And what promise? \n\nBeatrice leaned forward to hop out of the wall cubby, but Jennifer grabbed her arm.\n\n\"Might want to\u2014\"\n\n\"Fuck mights and wannas.\" None of that shit. Done with that. She was in the Circle now, and part of the reason she was here was because of Jacob's words to her that they didn't beat around the bush.\n\nSo she walked up to him, stood in front of him, and reached over to grab his eye bandage from the floor. \"So, uh, Minerv\u2014\"\n\n\"Annie... she would say Nosferatu are such tragic creatures.\"\n\nAnnie. Beatrice could only imagine the ramifications of calling the elder by such a nickname to her face, if she said it. But the Prince and Jacob had a history she had no idea of, and a huge one, apparently.\n\nJacob didn't look her way, but held out a hand. Putting the bandage into his palm, Beatrice found herself sighing with the weight of it. Jacob put the bandage back on over his empty eyes; the metaphor of it hiding his beast and curse was grandiose and disgusting. Nosferatu's curse indeed.\n\n\"Triss. You seem to really like that Mire fellow.\"\n\n\"... I do.\"\n\nJacob gave her that crazy smile of his, but after a while, the insanity of it faded away, and she was left with a sad smile from a sad man. \"Enjoy it while you can, you know? It's worth it.\" He didn't wait to hear what she'd say back, but turned around and started to walk out of the cave.\n\nJennifer jumped down beside her, jaw dropped and eyes wide. \"Holy shit, right? I've never seen the master so... human.\"\n\n\"Me neither.\" Beatrice looked down at the claws of her hands, claws that, like all Nosferatu disfigurements, made Kindred wear their curse on the outside just as much as the inside.\n\nClaws that didn't bother Julias one bit, and that made her smile.\n\n~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\nTo be kept in her basement, pampered by her ghouls and her sheriff, was sickening.\n\nShe wanted to be above the earth, in her tower, controlling her corporations and undoing the damage that fool Lucas had caused. But Daniel would have none of it. It had only been a few nights, and she had already undone the damage to her form, but for some reason her companions felt she needed more. Perhaps her visit to Jacob's domain had scared her friend? When they had returned, he had forced her to bed and brought her her ghouls, and more blood on top of that as well.\n\nSo she sat within the luxury guest room of her tower's depths, and worked on managing her city as much as she could from her large tablet. The wonders of technology made her ancient mind spin sometimes, but unlike others, she made sure to bury herself in the power of it. Today, she sat upon a bed with her back to the wall, her legs folded out in front of her along the blankets, and a host of tasks to accomplish on her woefully limited tablet.\n\nAshley and Julee were laying on the colossal bed, wearing their nighties, snoring, and very much drained of blood. They would not awaken for many hours, but she did not want to let them out of her sight.\n\nShe put the tablet down and smiled at the two creatures. Her two ghouls were such beautiful little women, but no one ever guessed how much she also enjoyed talking with them. They were ditsy things, but she had cultivated intelligence within them, and that self-awareness she valued so much. They were her sounding board for many of her frustrations, and they often offered simple but elegant advice.\n\nAnd that idiot Bishop in her dungeon would have killed them, purely because his version of his beliefs of his archaic religion thought kine were to be kept separate from Kindred.\n\nIt took all her effort to not destroy the tablet in her hands. But Daniel had insisted. That fool man was being persuaded by his childe over his friend, but then, the thought of Natasha and Daniel sharing words quelled her anger. Maybe her old friend would start smiling again? If Madame Vola could bring that out of Daniel, then it was worth it.\n\nShe set the tablet down on her lap, and stared into the empty void of nothing. Her mind wandered to that night Daniel had saved Jack, and returned him with burns and a huge gash from Viktor's sword. Jacob had been there, and he had insulted her humanity by suggesting she could not care for a fledgling such as Jack.\n\nWhen was the last time someone cared for you, witch? The insult she had returned to the old Nosferatu rang clear, and dug at her own chest like old claws. She had struck a sore spot then, talking about Minerva, and she had done so again tonight. The old monster was never the same since then, and it hurt that she could not help him. ",
        "Jacob was smart, self aware, even wise, and she valued that. But....\n\nFootsteps. She raised her eyes to the door at the end of the room of marble and curtains, and the joy that flooded her threatened to drown her. Jack was there, dressed in the most casual clothing she had ever seen him set foot outside his apartment in, nothing but a simple t-shirt and jeans with socks, and she could smell blood on him. He must have just fed.\n\n\"....\" No words. She even opened her mouth to try, but it all just seemed inadequate. So they just smiled at each other, and she reached out for him to coax him toward her with a curling finger.\n\nWhile her lover was dressed casually, she was in her black kimono robe. It was a soft and elegant fabric, and just slightly see-through, just enough that it would be unbecoming to wear in public.\n\nJack's smile only grew, and he climbed up the bed to sit down beside her.\n\nAgain, no words. With a slow hand he reached out, and took her hand in his; no coaxing was necessary. The boy netted their fingers together, rubbed her knuckle with his thumb, pulled her hand up to his chest to hold it dear, all before he settled his head against her shoulder, hip to hip.\n\n\"You fed,\" she said. He still had a bit of the glow Kindred received fresh from a feast; then he must have fed only moments before coming.\n\n\"So did you.\" He motioned to the two snoring ghouls. \"And you regrew your arm and leg. That was... yeah.\" His fingers tightened around hers.\n\n\"Indeed. Thanks to you.\" She squeezed his hand in return.\n\nMore silence. For a moment, she thought perhaps some horrible, uncomfortable wall had risen between them because of the attack. She had enthralled nearly everyone in the room, and that included Jack. But when she looked down at the boy resting his head against her, his smile never wavered. He started to rub his cheek into her shoulder too, and he put a small kiss on the hand he held.\n\n\"Jack,\" she said. She could hear the weight of her voice, no matter how much she tried to lighten it. \"I... am sorry, for that night. For so many reasons, but... at its worst, I enthralled you.\" The way Jessica did when she stabbed you.\n\n\"Yeah. That was a shocker.\" He chuckled, and unlike her, there was no weight to his voice at all. \"For a minute there, I couldn't understand how you weren't being worshiped as a god by the whole world.\"\n\nShe groaned and looked away. \"Fake admiration.\"\n\n\"Yea.\" But the boy just smiled up at her, buried his face against her shoulder, and squeezed her hand all the harder. \"It definitely felt different than usual. Nothing like how I normally feel. Nothing like love.\"\n\nThe silence returned with a vengeance. For just a moment, she thought she would have to catch her breath, a reflex lost centuries ago and drawn up by the boy's words. When she looked back to him, then away, then back again, the boy had put his face back into her arm. He did not look up to meet her eyes, and did not even tremble, as he always did before. He only waited, and squeezed her hand with a tighter embrace.\n\nHe was confident with his words.\n\nShe lowered her head, and started to comb her hair with her other hand. The phrase was like puzzles on her tongue, and every arrangement she tried in her mind was a failure. Elegance, eloquence, artful inflections, dramatic prose, nothing worked. This damn fool boy had rendered her speechless.\n\n\"I....\" Her voice cracked. A quiet inhale, something like... a sob? Was she crying? No, but there was just the hint of that emotion, rusted and forgotten, starting to fill her chest. The beast in her gut, her vampire instinct, was sounding howls of warning and vulnerability. Push him away, put up the wall, forget this insanity.\n\nShe pushed past it.\n\n\"... my little Ventrue.\" She turned then, and Jack was forced to sit up straight when she removed her arm from his leaning.\n\nShe replaced it with her chest when she reached out, wrapped both her hands around him, and embraced him. He was perhaps a little unprepared, as her hug left him bent over in a weird arrangement, but she could not help herself. She had to hold him, squeeze him, bury him against her, feel his presence within her grasp. Her lips found the top of his head, and she kissed it. \n\n\"I love you too.\"\n\n\"... wow,\" he whispered, and he turned his knees about to face her. Her hug was returned, and when he looked up to meet her gaze, his green eyes swallowed her whole.\n\nAnother gasp from her, one she could not stop. Why were his eyes so powerful? They carried such emotion, such genuine openness and honesty, such brightness that it scared her. But they drew her in, and she was helpless but to kiss him.\n\nPart of her felt cheated. There was no dramatic conversation or argument, no huge unfolding of secrets or opinions, no emotional music played by cherubs. But, instead of such fantasy, something real and tangible and heavy with truth was in her arms, kissing her, making her feel. \n\nA tiny sob mixed with a sigh did escape her, and she did not care. Daeva were allowed a little lenience with emotional displays, she reasoned. She found her hands were trembling lightly, and with a moment to calm herself and settle her shaking fingers, she yet again squeezed Jack to her body with a constricting hug. Jack flailed a little, and she did not care, she simply had to hold him as close as possible, like a small child squeezing their favorite pillow to their chest.\n\nIt was an uncomfortable position for the two of them, trying to embrace in such an odd fashion on the bed. She chuckled at the silliness of it, let go of the boy, pulled her legs up beside her on the bed, and created lap for Jack. When she motioned to it, Jack's eyes lit up, and he turned to lay down upon his back with his head upon her lap.\n\n\"How'd you know?\" he said. He put his hands on his chest, and smiled up at her, beaming.\n\n\"Because you are a young man, and what young man does not yearn to rest his head on the lap of the woman he loves, oui?\" Oh Jack, you delightful little boy, now she was using the L word. It was the first time it had been used for an age.\n\nWith a pleasant sigh, she put one hand on Jack's chest to rest it there, and her other found his buzzed head and caressed along its curve. Such a tender position, her love laying down upon her bed, his head upon her lap, and her hands playing with his hair, caressing his ears and lightly dragging her fingernails along his scalp. The boy was melting under her touch, she could tell.\n\n\"I owe you for so much, little Ventrue. The last I saw before torpor took me, was you standing between myself and that vile Bishop.\"\n\n\"Damien, yeah. That guy... that guy was broken.\" He sighed into her touch, and nudged his cheek into her leg as he turned his head, facing her. \"I feel bad for him. I mean yeah, he deserved what I did to him, but... but he was broken before I dominated him, let alone after I made him kill the Archbishop.\" Jack coughed on the last few words, like he was trying to spit out poison.\n\n\"Do you wish for me to spare him?\"\n\n\"... you're letting me choose?\"\n\n\"He is no threat to me, my love.\" Ah, again, the L word. It made blood butterflies flutter inside her stomach; all the more, it made Jack smile. \"He sits in my prison until I decide what to do with him. Natasha and Daniel think there is potential in him, but after what I did, and now what you have done to him....\" She sighed, and continued to gently caress the boy's head. \"But as you said, he was broken before he attacked. They may be correct, and we should give him... a chance?\"\n\n\"I... um....\"\n\n\"Please be careful, Jack. If we were to go through all this hardship, only for some compassion to cost you your life, I would... please be careful.\"\n\nHe gave a nod, and nuzzled his cheek into her leg. \"I'll have to see him again, talk to him, before I can make a decision.\"\n\n\"That is good. For now then, I will keep him locked away.\" If you dare hurt her little Ventrue, Damien, she would not hesitate to use you to test every torture she had learned in her second life; half a millennium of undeath had taught her many tortures she had yet to try.\n\n\"But if Maria finds out I'm the reason Lucas is dead....\"\n\n\"I would not worry about Madame Turio, my Terry. I will deal with this in the next primogen meeting. If she does manage to find out that you are responsible for Lucas's death, she will know that only death awaits her if you suffer for it.\" She grinned then, and the hand upon Jack's chest picked up his chin and pointed his face up toward her. \"Do you remember what I said, the first night we were together?\"\n\n\"Um, mm... you said you would... kill anyone that threatens me.\"\n\n\"And do you think that claim has changed, especially now?\" She caressed his chin, and grinned down at him with her red eyes while her fingertip touched his lips. \"After you have nearly died to protect me? After we have... we....\" More blood butterflies fluttered, but she closed her eyes for a moment and forced them to calm. \"We love each other, and... I am sure you must realize what... what that means to me.\"\n\n\"I wasn't sure before, thought maybe I was just being a dumb lovesick kid.\" He talked, but as he did she ran her finger lightly along his lips. More smiles from him rewarded her play. \"Until... until I was standing over you, and I dominated Damien and... yeah.\"\n\nShe winced. \"That is the first time you have killed, is it not? I know you had an accident with a beastly frenzy your first night, and later you managed to kill Tony and Viktor. But to feel the death of someone with your hands is a different matter, even if you were inside someone else's mind for it.\" Her words were too vivid, she realized, when Jack winced after she said them. \"My apologies, I did not... that was rude of me.\" \n\nEverything their second life threw at them wore down on their humanity. That was what it meant to struggle against the beast, and that was the curse of the Kindred. And yet, while Jack had suffered enough to harden most, she saw no waning in his sincere nature.\n\n\"No no, you're right. But... no regrets though.\" He kissed her fingers, and blew a little air against them. \"And now I know what you meant when you said you'd do the same. Really get it and... I....\" He gave up on the words, reached up with a hand, took hers, and held it close to his heart. \"No regrets.\"\n\n\"None.\" This time it was her that raised his hand, and she kissed it before placing it back on his chest.\n\nJack's smile was so beautiful, it threatened shatter what composure she had left. She had no self-control left, so she leaned down to try and kiss him instead.\n\nThe position lead to a colossal failure. Her breasts were large enough and heavy enough that they had already been next to Jack's face, with her robe grazing his cheek. Bending over just trapped the poor boy underneath them, head between her breasts and lap.\n\n\"Oh, my apologies once again,\" she said, and she sat up again before smiling down at the young man.\n\nJack's smile had turned into something of a sneaky grin. He scooted over across her lap so his cheek was directly against her stomach, and the underside of the breast closer to his face rested against his cheekbone and nose. Only the thin layer of silk of her kimono robe separated her skin from his lips.\n\n\"Jack,\" she said, and a coy grin crept onto her lips, not too dissimilar to Jack's. \"Are you ruining this romantic, and emotional moment by rubbing your face into my breasts?\"\n\nIn the past, Jack would not have realized she was only playing with him. This Jack though, the new one on her lap with the mischievous grin, he nodded a yes and hid his face under her breast. Literally. He slid in closer, as close as the position allowed, and worked his nose about to create some slack in her robe. Then he pushed his face underneath her heavy breast, and nuzzled his nose against it.\n\nNow that she thought about it, she realized it was the first time Jack had ever truly made the first move. And she would be remiss if she did not reward him.\n\nShe blushed life for him. When he blinked at her, perhaps surprised that she was so easily persuaded, she took the hem of her robe at the chest, and pulled it down to hook it underneath the breast closest to his face.\n\nWhenever she exposed her body, Jack's face lit up with such excitement and awe that it always managed to make her insides warm. They had had sex many times now, many times, but all it took was one of her breasts left to hang outside of her robe to make the boy hypnotized, aroused, and nervous. His nervousness was considerably less now though, and she did not even need to tell him to blush life for her. He did it on his own.\n\nNow her breast rested against his lips and nose, with no fabric to stop him from giving her skin a kiss. And another. And another. He let out a quiet moan against her while he took his time covering the underside of her breast in petite, loving kisses.\n\n\"My little Ventrue, forever infatuated with breasts.\" She talked as if it were nothing but playfulness, but those kisses were making her skin grow more sensitive. And the loving position of it, just holding the boy's head in her lap and letting him kiss her, his absolute trust in her, was arousing her. Her nipple was growing harder, rising on swollen areola, and the boy had not even touched it yet.\n\n\"Sorry,\" he said between kisses, \"but I can't... just... it's so soft! And heavy!\" He leaned into her, pushed his face up a bit, and her breast overwhelmed his visage. When he pulled away, her breast slipped down from his face, and her nipple was now at the level of his mouth.\n\nThe warmth of her own laughter surprised her; the silly fool had seen her breast a hundred times, and yet he was still enraptured. She took his head into the nook of her left arm and helped prop his neck up to keep his lips level with her nipple. Her right hand reached up to her robe, and pulled it down across her chest to hook it underneath her other breast, so now both were laid bare. Then, she took one of his hands, and placed it upon her newly exposed skin.\n\n\"No matter their age,\" she said, voice a whisper now and filled with summoned sultriness, \"men love to be embraced and held to a woman's bosom.\"\n\nJack groaned with obvious agreement, and lightly wrapped his lips around her nipple. The sparks of pleasure were immediate, tingling waves of gentle sparks that spread out from her chest and down through her body. His other hand squeezed, softly, fondly, and ran its thumb over her other nipple in caressing circles.\n\nHis skills had grown considerably. Countless times she had let the boy devour her breasts, and with time, he was learning exactly what touch worked best on her. Both nipples were now engorged, sensitive, and his touch was just the perfect level of obsessed but gentle to coax more of those sparks of bliss from her body. His lips pulled at her nipple in a slow, soft tide of gentle suckling, and between suckles his tongue massaged the swelling flesh with caressing circles.\n\nShe still had one arm free. While the left held the boy's head just slightly propped so he could suckle upon her, her right slid down to find his waist. With smooth dexterity, she undid the button of his jeans, and unzipped them.\n\n\"If you could remove your pants, little Ventrue?\"\n\nThe boy nodded and reached down with both hands to slip both his pants and underwear free of his legs. As he did, she took his shirt at the collar and raised it up and over his head. He was left nude, and with a hungry sigh, she eased him back into the same position so he could resume suckling and massaging her body. \n\nShe did oh so love the lean shape of his form, small but defined. The fingers of her free hand found his chest, and her fingernails traced lines along his hard body down his stomach, across his abs, back and forth along his pelvis and apollo's belt, until finally her fingers eased around the base of his erect member.\n\n\"God....\" He broke away from her breast to let out a moan, and he gave his own sigh of bliss to mirror her own.\n\n\"I am surprised we have never enjoyed this position before, my love. I imagine it is much to your taste?\" She drifted her fingers down along his scrotum, teased the soft skin with her fingertips, and then brought them up the underside of his cock where its softest flesh was found. Then, she fondly wrapped her fingers about the base of him, and gave his hard member a slow, gentle stroke. The texture of his swollen shaft in her hands, that pleasant mixture of soft skin and hard girth, had her body craving his touch. She was growing wet with arousal already.\n\n\"I... it's... I thought it might have been a little pervy? You know? Mother son fetish stuff?\"\n\nShe laughed all the more. Oh Jack, how were you always so capable of making her smile?\n\n\"I offer my lap for you, my little Ventrue, because I wish to be where you place your head when you seek rest. I wish to hold you to my breasts because I want that place to be warm, soft, and inviting. I seek your touch upon my skin because it both comforts and excites me. And I seek to touch you, because nothing delights me more than your pleasure.\" To emphasize, she squeezed his cock harder, just enough to make him wince in surprise, before she started to lightly stroke the hard flesh in a soft rhythm. \n\n\"O-oh...,\" he said, stuttering on the realization.\n\nShe cradled his head back into her breast, and blew a bit of air into his face to draw his eyes. \"... could you... say it.\"\n\n\"Say what?\"\n\n\"... what any woman wishes to hear.\"\n\nJack blinked at her, removed his hand from her, and froze with bewilderment painted upon his face. But, after another moment, his eyes widened with realization, and that lovely smile of his joined it.\n\n\"I love you.\"\n\nThree simple words, so effective it was as if she had just been staked. Painful emotions that ached inside her, paralyzed her, blinded her with brightness, but she did not look away. She was embarrassed; they had reduced her to a lovesick puppy, only that was exactly what she wanted. Nothing else for now, nothing to think or worry about, just enjoy unearthed emotions she had left buried for so long.\n\n\"Thank you.\" With a few second's respite, she closed her eyes, sighed with euphoric release, and looked back down at the boy in her arms. \"Please, continue,\" she said, and she cradled his head back against her bosom. She started to stroke his length again as well. Romance was no reason to spoil the arousal they had both earned, after all.\n\nHe groaned into her skin, a quiet noise filled with vibrations that sent blissful sparks through her nipple, into her chest, and down through her body. She rewarded him with harder, faster strokes of his cock. Drops of precum started to form at the tip of his length, and with a fingertip, she spread it along his foreskin before peeling it down to expose his glans, ripe and swollen.\n\nThe poor boy was helpless under her touch. She knew just how to slide her fingers along the rim of the head of his cock to make his body tense and flex in need, how to make the pleasure spread through his length, and how to get his fluids to rise with the inevitable. Once she had him at the point where a few strokes would make him climax, she slid her hand down to his testicles, and cupped the softness in her palm while she gave the gentlest massage.\n\nJack trembled a little, the way he did when he was about to cum, but switching to caress his testicles let his fluids settle, and yet kept him on the edge. It was a familiar rhythm for them, but this time there was an emotional weight to it that made everything all the sweeter.\n\nShe was holding the man she loved in her arms, cradling him to her breasts, pleasuring him, and protecting him. He was hers, and not because she was his Prince, or his mistress, or his guardian, but because he loved her too.\n\nShe slipped her hand up onto his cock again, used her thumb to caress his glans and spread the moisture of his growing precum against the underside of it, while also stroking the inch of his length just below. Her technique was perfect, a constant but adoring caress of her thumb along the wetness of his glans while her palm worked up and down him a single inch, and her fingers gave tiny squeezes in between each beat of her loving rhythm.",
        "She was milking him.\n\n\"God,\" he finally managed to say. \"You're so... damn... good at that.\"\n\n\"Indeed.\" She got her voice low for him, husky, and drawn out in a whisper. \"Now, please bring me some lubricant. I would like to try something.\"\n\n\"Ok!\"\n\nAnd off he went. He rolled off of her and off the bed with a bounce in his step and naked butt wagging as he hopped over to the bathroom. She watched after him, and licked her lips a little at his bouncing; he had a great, tight little butt. \n\nAntoinette reached down and undid the belt of her robe, spread it wide, and got onto her knees and derriere. She reached for a pillow too, one of the large fluffy ones her ghouls kept, and laid it between her knees. When Jack returned, he hopped onto the bed in front of her, lubricant in hand, and only when he went to get back in her lap did he notice she had changed position.\n\n\"Here,\" she said, and reached out for the lubricant. He handed it over, perplexed. \"I want you to lay here. Place your legs around my hips, and your butt upon the pillow.\"\n\n\"I... oh... oh!\" His eyes lit up yet again, and looked up and down her body where she had opened her robe. His lips and tongue kept trying to form words, but nothing came out, and eventually the boy gave up. \n\nHe oriented his pelvis toward her and put his butt onto the pillow between her knees. Her hands took his hips and pulled him closer, close enough that his inner thighs rested on her hips, and his testicles were resting against her stomach. The position put his pelvis up at an angle on her lap, and his lower back rested on the pillow while the rest of him laid back against the bed.\n\nIt was a glorious position, with on her knees and butt, and Jack laying back with his butt on her lap. He was laid out before her like a board of meat she could not wait to dig into.\n\n\"I imagine this is also a position you have wanted to try, yes? My little Ventrue.\" One of her hands reached down between her breasts, took the boy's cock into her grip, and raised it from where it rested against his abs to place it into her cleavage. Her breasts were large enough that they rested against his pelvis on either side of his cock, and that was where the delight in the position was; all it took was a little lifting of his member toward her chest with her fingers, and it settled his length between her breasts.\n\n\"God yes, just... I mean... you know.\"\n\nAgain she giggled, a sound so unbecoming her age, but her love's utter inability to understand her desire to satisfy his fantasies was too precious. She had taken care of one fantasy tonight, and now she would take care of another.\n\nWhile one hand kept his cock raised and pressed along her sternum, the other turned the bottle of lubricant to his glans, and let it pour. Only when the thick liquid had coated his glans, his length, all the way down to his testicles, did she start move the bottle to pour the liquid onto her breasts. Jack opened his eyes so wide, she was sure he would hurt his face; his jaw dropped in pure awe once she had thoroughly soaked all of her chest.\n\nHis erection stood upright, but also collapsed upon his abs; she had to use a hand to guide it between her breasts, and hold it there. That was fine, it just made it all the more interesting when she used the other hand to massage the lubricant into both her breasts in playful, sweeping motions that lead between them. Her nipples had grown so sensitive from all this play, that every so often she stopped to take the time to massage them individually. Her fingers circled them slowly, tenderly, and buried their pointed, swollen tips in the viscous fluid. \n\nHer eyes never left Jack though. She drank in his enraptured expression with hunger, and delighted with each sigh of bliss she pulled from him. After a moment of trying to watch her, he reached out for another pillow to prop up his head, and then set his hands on her knees. Yes, little Ventrue, get comfortable and enjoy yourself.\n\nHer breasts and his member were both soaked now, so with one hand around his cock, she started to stroke his length with a tighter grip than before, and brought her fingers all the way up to his ripe glans to massage it with each stroke.\n\n\"Ah... fuck....\"\n\n\"Mmm, too tight? Perhaps this will be softer.\" She loosened her grip, and with her other hand, pressed one of her breasts against his member while keeping it against her sternum. His cock was buried in her breast, and she rubbed it against the wet and slick weight of it while she continued to stroke his length, from the base to the tip. With one hand pushing her breast against his shaft, and her other arm hooked around her other breast to hold his cock in place, she had quite thoroughly squashed it between them until it was completely hidden.\n\nJack was paralyzed. He could not tear his eyes away, or move, or do much more than let out the occasional whimper of bliss when she took the time to guide his cock into the side of one of her breasts, and stroked the ripe glans into her wet skin.\n\n\"I had been hoping my little lover would ask me to let him enjoy my breasts so, but such a request never came.\" She put her free hand against his hard stomach, so her breast was no longer pressed to his member, and traced her wet finger along the indentations of his abs. Her other hand, still wrapped around his cock and stroking it in a slow rhythm, guided Jack's glans onto her nipple.\n\n\"I... I just\u2014\"\n\n\"Do you not even realize that you saved my life, little Ventrue? I am more than pleased to indulge this fantasy of yours.\" She slid his cock across her breast and onto the other to again repeat rubbing his glans along her nipple. It was all a slippery display of pure sexuality, and she bathed in the opportunity to put herself on display for her little Ventrue. \"More than pleased.\"\n\n\"I....\" \n\nHis voice was mixed with layers of pants and quiet groans. He was so close to cumming, but each time he started started to involuntarily push his hips upward, or flex his cock in her hand, she eased her motions and grip until his pleasure settled.\n\nShe would not let him cum until she was satisfied.\n\n\"And I have told you I would love to indulge your fantasies before, yet you refuse to approach me with them.\" Again she slipped his cock between her breasts, and used her arms and hands to keep it buried there in the slick, wet, soft skin.\n\n\"But... but I....\"\n\nHe started to inch toward climax again, so she slipped her hand further down to find his testicles, and caressed them in a loving, circular motion, until she was sure he was no longer in danger of cumming. The frustration, mixed with his awestruck eyes and begging expression was beautiful.\n\n\"So then, I will have to convince you.\"\n\nShe pushed her breasts together around his cock with her arms, tightly and firmly, so to create a bed of cleavage that completely hid the boy's length. One arm wrapped them entirely, while the other only pushed one of her breasts against his cock so her hand was free to stroke, squeeze, and milk his soaked length. With her breasts pushed together so tightly, her hand did not have the room to work the whole length of his shaft, but with her fingers around around the bottom half of him, the top half of his cock was treated to the softness of her bosom.\n\nAnd she did not stop this time.\n\nThe poor Ventrue had been on the edge for so long, the orgasm must have been painful. There was a small wince on his face, but it was washed away within seconds by raised eyebrows and rolling eyes of bliss as he started to cum. He flexed his cock, causing it to slide against her cleavage, which made him wince again in that perfect amount of stimulation: painful but pure bliss.\n\nHis cum started to pool between her breasts, warm, sticky, thick. Jack was struggling to stay still, and he had to grip her knees tighter as she milked more of him. She could feel his cock pull against her hand with each spurt of his fluid, a flex of where his length connected to his pelvis, and each time the boy trembled against her.\n\nAnd there was his eyes. His green, open, pleasure-struck eyes that were gazing at her work. She drank them in and his overwhelmed expression. When she squeezed tighter and worked her hand up his length, his whole expression changed into that blissful state she craved. When she lowered her hand and squeezed her breasts around him tighter, his eyes locked onto how her bosom buried and overwhelmed his cock, while more of his cum filled her cleavage.\n\nEventually his cock stopped flexing in her hand, and the boy's eyes relaxed with the gentle glow of after-orgasm pleasure.\n\nThen she let go of his cock, placed both hands upon the sides of her breasts, and pushing them together. Without her hand to hold his length against her sternum, his cock slipped free and fell against his abs, but that did not stop her. With his cum coating every inch of the inside of her cleavage, she pushed her breasts down against his pelvis and cock. His cum overflowed, spilled down all sides of her breasts, soaked her fingers, and dripped down onto his abs as she rubbed her heavy breasts into his body.\n\nShe took special care to make sure she massaged her hard nipples, and spread the boy's cum around her areola. When his jaw dropped, she blew him a small kiss, and gave a subtle wink.\n\n\"You.... uh....\" He forced himself up onto his elbows, but his gaze never left her chest and the mess she was making across both their bodies. \"You... don't think it's gross? All... everywhere.\" With how he was gazing at the mess, he certainly did not find it gross.\n\n\"No, because it is yours.\" She sat up straight, and jutted her chest out just slightly, just enough to arch her back and show off her figure for her little Ventrue. Then, with bedroom eyes, she again started to massage her swollen, sensitive nipples with his cum. Such fake fluids left by a vampire would only last a little while before fading, but for now, she continued to play with herself.\n\nHis eyes, hypnotized by her play, had more than warmed her body with need, but lightly pinching her nipples and stroking the outer edges of her swollen areola was also sending sparks of pleasure into her chest and down into her thighs. She knew she was soaking wet with arousal, but the longer she drew out the build up, the better it would be.\n\nAt last she let go of herself, and set her hands down onto the boy's stomach to gently caress his abs, wet with lubricant and cum. \"Now please little Ventrue, share with me a fantasy.\" She licked her lips for him, slowly of course, and drifted a single finger up and down the underside of his cock.\n\n\"Fuck, I... um....\" Oh how he struggled, eyes closing and opening, body squirming. He was having trouble. What sort of fantasy could he have been dwelling on? \"Could you... um....\" The boy pulled away and sat up in front of her. \"Could you... turn around... get on your elbows and knees... and... not talk, or stop me?\"\n\nOh my. It was a domination fantasy. She brought a hand up to her chin and touched her lip with a knuckle in pondering. Now that she thought about it, she realized she had never truly given up control during sex in a long, long time. Never with Jack.\n\n\"... as you wish,\" she said, and she made sure to indulge the phrase with accented, sensual layers. A little roleplaying would be fun; even just the words were enough to make Jack's face light up.\n\nShe put aside the now-ruined and soaked pillow, gave Jack a rather sultry and inviting look, and then turned around for him. It was not a position she was used to, being on her knees and elbows. With her robe still on, most of her body was covered, but she pulled aside where the robe covered her lower half and let it dangle off the side of her torso to expose everything behind her.\n\nOn her elbows meant her back was slightly arched, and her ass was raised. So she could not help but play with Jack a bit, twist her hips a little to move her body side to side, and squeeze the muscles of her soaked pussy. Her dance earned a groan from the boy.\n\n\"You're wet,\" he said.\n\nShe almost said something, but his fantasy was her goal. Instead, she looked up over her shoulder at him, and offered some girlish, embarrassed eyes. She exaggerated for him, but the truth was there; she truly was soaked already and he had yet to touch her.\n\nThat changed when he slipped two fingers into her, and she let out a tiny squeak at the sudden penetration. Already, she trembled with rising, dancing sparks of pleasure along her thighs.\n\nShe could not see what he was doing, and that did make her a little nervous, something she had not felt in ages. What was he going to do, would he know what she liked? And yet, not knowing what he was going to do at all was making her excited. Her muscles squeezed down on his fingers, and with two digits inside her, it was enough to make some of her juices drip onto the blankets between her knees.\n\nIt would take very little to make her cum. Perhaps this would be proof enough for Jack to indulge in some breast play more often? The feel of his cock between her breasts, rubbing his cum into her nipples, it had all set her body on fire. She looked forward to doing it more.\n\nShe shivered when Jack put a thumb onto her clitoris, and started to lightly stroke it in gentle circles. As he did, he also started to softly press his fingers down against her g-spot in a slow, loving curl of the digits. Just the right tenderness and softness that her orgasm started to build, but could not be reached. She squeezed down on his fingers harder, even pushed her ass toward him, but he was in control, and it seemed he wanted slow.\n\nFor five minutes, he caressed and massaged her clit while milking her g-spot with his fingers in slow, deliberate motions that she could feel in her pelvis. She grabbed another pillow, put her head on it, and let out a low moan as the pleasure coursed through her. The boy's delightful caresses did not stop at just her g-spot, as he also pushed his fingers in to the knuckle, and pressed down against the deep spot within until she could feel it in her belly. It forced the pleasure tremors to spread outward from her cunt, up into her chest, down her quivering thighs, and into her curling toes.\n\nSo very close. So damn close she could taste the building orgasm tremors on her tongue, but the damn Ventrue refused to let her have it. She pushed her ass back toward him -- it was the only thing she could do -- but Jack did not give in. She even moaned, loudly at that, and squeezed her cunt on his fingers hard enough to hurt him, but still he did not give in.\n\nShe was a fool to let a Ventrue have power. He must have been bathing in the control she had given him! She had even started mewling, tiny whimpers started escaping, and her insides were boiling. Like a cat in heat, she put on a display, arched her back, and pushed her ass back toward him faster, but Jack just kept her on that edge for longer, and longer.\n\nJust when she was about to turn around and demand release, he started fingering her harder. Much harder. The thumb on her clit grew rough, and the two fingers scooping out her pussy started to move up and down with enough force to slap against her insides. The slap of fingers against the inside of her cunt and the mess of juices she was leaking made for a loud splashing sound.\n\nHer toes curled tight enough to hurt, and her whole body went rigid with the waves of bliss that pulsed outward from where Jack was pressing deep down inside her. He eased his touch on her clit where it had quickly grown painful, but his fingers in her depths did no such thing. They pushed harder, worked faster, and made more of her juices leak from her until it was trickling down her thighs and reaching her knees.\n\nHe stopped, and she thought she would have a moment to enjoy the waves of orgasm spreading through her, but Jack resumed only a second later. Apparently, he had no intentions of giving her that moment's rest.\n\nShe looked over her shoulder back at him with wide, surprised eyes, but Jack was too engrossed in fingering her to look at her. The boy's eyes were glued to her opened slit. He finally let her clitoris be, and put the soaked hand onto her leg, but the fingers inside her only went faster; she could feel them push down toward her belly hard enough that she could feel it against her abdominal muscles.\n\nWhen a body wave of muscle-contracting pleasure hit her, a tiny squirt of her juices escaped her. She did not normally squirt, but the boy had her whole body locked in orgasm and was hitting her insides hard enough to bruise. She was still on her elbows, and when she raised her shoulders so she could look down the valley of her body between her hanging breasts, she could see the juices she was leaking drip. Unconsciously, she inched away from Jack to try and escape the onslaught, but Jack's free hand reached out to hook her hip and trap her.\n\nAnd he continued. She squirted again, just a little, and this time she managed to keep her eyes open to see the tiny splash of clear juices hit the boy's knees. Muscles squeezed and her body shook with the forced pleasure that was quickly growing painful, but her trembling betrayed her. Another sharp clench of her cunt and again, another little splash of her juices. She was not able to keep her eyes open this time, and buried her face in the pillow she had started squeezing without knowing. The poor pillow had become nothing but shredded material.\n\nShe tried to crawl away one last time, but Jack's grip was absolute. Normally she would have the strength to pull away, easily at that, but her body was trembling with sparks of pleasure forcing their way down her thighs and into her toes. She could not find a second's respite to dislodge him! All she could do was remain on her elbows and knees, ass raised for her lover, while he fingered her. The sparks of bliss spread out from her center, filled her, made her eyes roll upward and her thighs quiver. Pleasure tore through her curves with reckless abandon, making her toes curl and her body tremble. Her breasts swayed beneath her, and her muscles milked at the fingers prying her open.\n\nWhen she squirted yet again, the amount was not so small. Her pussy squeezed like a vice, so hard that Jack was forced to stop for a moment while another splash of her juices hit him. Her eyes rolled upward, her usually quiet voice came out in squeaks, and her ass raised higher into the air on shaking legs and toes. Reduced to a shivering, whimpering thing, cumming so hard she could not speak even if she wanted to.\n\nFinally, Jack let go of her hip. She collapsed onto her side, hip to the bed and one half of her face resting on the pillow. Laying there, she could not stop quivering as orgasm waves worked up and down through her. They started from between her thighs, rose up through her chest, into her breasts, and up to the back of her neck to make her eyes roll, before coursing down through her to legs and into her toes.\n\nHer current state was very unbecoming a Prince, but trapped in orgasm aftershocks, she could not summon the will to care. She could only lay there and let the pleasure waves continue. \n\nHalf a minute later, she finally found the strength to lift her head, and look at Jack.\n\nJack had been watching, and the boy must have been waiting for it. The moment they made eye contact, Jack straddled her leg closest to the bed and hooked her other leg over his shoulder. He kept her leg there with one hand, while his other wrapped around his cock, and he guided it toward her opened, leaking pussy.\n\nHer orgasm had only just settled, and her cunt was still suffering spasms of pleasure that made her tremble each time. Perhaps that was what the boy wanted. There was a look of ravenous hunger on his face as he prodded the dripping lips of her cunt, and when she shivered or squirmed with more sparks of pleasure, he groaned with obvious rapture.",
        "She almost opened her mouth to tell him to stop, to let her rest, to let the spasms stop so she could take a moment to recover. Even if it was his fantasy, she was at her limit. But Jack eased his cock's head into her squeezing muscles, and slammed his hips forward.\n\nShe reached out with a hand to press against his chest, but her insides were beyond sensitive to his touch now. The feel of his hard girth opening her again and burying itself into her balls deep with no ceremony or gentleness blurred pleasure together. Orgasm coursed through her again, re-summoned by his aggression, and with each following thrust from the Ventrue, she found a squeak coming out of her, a noise she could not remember the last time she had made.\n\nIt was all a sopping wet mess of cum, juices, and noises now. Jack held the leg he had hooked over his shoulder with both hands, and used it to help drive himself forward into her, despite how she pressed her hand against his chest in silent begging. He ignored her, and continued to fuck her, hard. The look in his eyes was one of pure sexual need, and she found herself delighted -- if a little shocked - that he wanted to fuck her with such animal lust. But a moment later, her mind went blank and her eyes closed as pleasure again turned her into a trembling mess.\n\nSeveral thrusts later, she gushed all over Jack's cock. With her leg over his shoulder, and her on her side with Jack's knees on either side of her, the mess of her cum went down one of his legs and down her pelvis. Warm, wet, messy. She had lost all control and could only lay there while the small man straddling her other leg fucked her. He was so rough, her heavy breasts bounced up and down against her torso and along the bed, but he did not stop.\n\nIf it had been Jack's first orgasm, he would have cum sooner, she was sure. But she had drained him of his first before, so she laid there, squeaking with each thrust, cumming again and squirting again, for several more painful, blissful minutes. Vaguely, with what few thoughts she was able to muster, she was aware this was the sort of thing she often did to Julee, forcing her ghoul to cum herself into near unconsciousness.\n\nShe did not even realize when Jack had started to cum. Normally she would love to milk him of each drop, but she could barely control her position on the bed, and had no control over the powerful muscles spasms that had her trembling on his cock. He was gazing down at her, love and lust in his eyes, and perhaps a bit of surprise. He even kissed her ankle where it was resting against the side of his jaw.\n\nAntoinette, on the other hand, did everything she could to get her body to calm down. Her cunt was squeezing down on his cock in the random spasms of orgasm, and had grown sore from his rough treatment. She had never expected the small man to have such an aggressive side, let alone to use it on her.\n\nJack had slipped free of her at some point; she had not noticed. The orgasm aftershocks were still working through her, and she delighted in their waves. Jack was still straddling her leg with one of his knees in front of her stomach; she put her hand on it, and rested her head on the pillow she had destroyed while the ebb and tide of climax drifted up and down her body, and finally began to settle once again.\n\n\"Jack,\" she finally managed to say.\n\n\"... yes... my Prince?\"\n\nShe turned her head enough to look at him. He was caressing her raised leg with teasing fingertips, and the look on his face was one of utmost guilt. And a little mischievous joy. The rascal!\n\n\"Your fantasy... was to... force my orgasm so?\"\n\n\"Sorry! Sorry I... I just always... it's just always been a huge turn on, the idea of a woman cumming super hard, a lot, over and over. And then to cum inside her when she's down, trembling, defenseless, and stuff? That... I... yeah.\" He set her leg down, shifted over to sit on his knees beside her, and grinned like a thief who had gotten away with the treasure. \"... you soaked me too.\" The pride that beamed from him was cosmic.\n\nWith an inviting smile, she slowly reached for his throat, gently wrapped it with her fingers, and then yanked him down to slam him onto his back beside her. A chokeslam, she believed it was called. His eyes went wide with shock, but she loosened her grip and leaned over him to place kisses upon his lips.\n\nShe smiled down at him, and kissed him again. \"That was very daring of you. My legs still tremble.\"\n\nHe smiled up at her all the more, but with a healthy mixture of fear too. Good, she did not want him to get too daring after all.\n\n\"Are you mad?\"\n\n\"No. I do admit I prefer to be in control of my pleasure, and enjoy slower, more manageable climaxes.\" She kissed him again, and edged herself across the bed so her arm and leg were draped over his body. To hold him so while the final tingles of pleasure worked down her thighs was pleasing. \"But, I understand. I do the same to Ashley and Julee every so often, and delight in making them cum until they're exhausted, soaked, and begging for a moment's rest.\"\n\n\"So hot.\"\n\n\"Indeed. And, as you said... I soaked you.\" She reached down and ran her fingers up and down his now flaccid and relaxed member. It was hard to tell where the lubricant ended and the mess of juices began.\n\n\"So... so hot.\"\n\n\"Perhaps a small warning next time, little Ventrue? Such rough sex was a shock.\" She hugged the boy closer to her, and nudged her nose into his cheek. \"I am a soft creature, am I not?\" To emphasize, she pushed her wet breasts into his side and chest. They were more than large enough to overwhelm his small torso.\n\nHe shivered underneath her. \"So... soft....\"\n\n\"But I look forward to such a display of aggression in the future, my Jack, and will delight in indulging more fantasies. Though I do hope you realize I owe you for such uncouth behavior!\"\n\n\"You, uh... you do?\"\n\n\"Indeed. Tell me, little Ventrue, do you know the pleasure of a prostate massage?\"\n\n~~~~~~~~~~~~~~~~~\n\nThe two of them basked in the warmth of her hot tub, with the blush of life still going so they could enjoy the tingling of hot water on skin. Perhaps it was the most clich\u00e9 thing in the world, two lovers sharing a hot tub, but it was a luxury she felt earned. And it was the first time she had ever done such a thing with someone she loved.\n\nLoved. She smiled, raised a hand to touch her lip, and put her other hand onto the boy's chest. She loved him. He loved her. Just thinking it was making her giddy, young, and overwhelmed with a powerful ache to hold the boy closer.\n\nBut he could not get closer than he was. She was laying back on the slanted slope of the tub, and the small boy was between her legs, laying down and back against her with his head between her breasts, facing away. She did not raise her head though, instead she kept her eyes closed, smiled to herself at the feeling of the boy resting against her body, and roamed her hands upon his chest with caressing fingers.\n\nHe took one of her hands into his, netted their fingers, and kissed her knuckles.\n\n\"I love you,\" he said.\n\nButterflies in her stomach, that ache that demanded she hold him, warmth on her fingers even without the blush of life, it all mixed for a delirious need that made her feel like a little girl in her man's arms.\n\n\"I love you,\" she said, and she hugged him to her chest with a gentle squeeze of her free hand. Those three words may have seemed trite, perhaps even overdone to the modern couple, but to Antoinette, they were honest and powerful. Jack knew her well to not play with it, like Beatrice probably would with Julias.\n\n\"Hey, I heard you play the cello?\" he said.\n\n\"The cello, where did -- ah, one of my servants?\" She raised her head for a moment to look down at the head of the boy between her breasts, but the conversation held no danger to her anymore. If she could not talk about what she remembered of her past with her love, who could she? \"I did, decades ago. But... where I learned is a lost memory.\"\n\n\"Oh.\" He brought her hand up to his face and held it to his cheek. \"God I'm a jackass. I get mad because you never talk about your past, but... I remember you telling me now about fading memories. Yeah, sorry....\"\n\n\"Elders are often insecure about our lost memories, and I apologize for being distant about your questions.\" She drifted her hand higher, up along his sternum, his neck, and his ear, until her fingers came to rest upon his buzzed head, and she stroked the interesting texture lightly. \"But, ask, and I will try to answer what I can.\"\n\n\"Wow, ok! What music do you listen to most?\"\n\n\"Do not ask silly questions. I listen to the greats, as does any elder Kindred. Beethoven, Mozart, and Bach, but the fingers of Chopin are perhaps the most intriguing.\"\n\nThe boy laughed and turned halfway in her lap to look at her. \"I could introduce you to some metal music.\"\n\nOh no. \"You will have quite the time convincing me to listen to such loud, vulgar noise!\"\n\nWhen she raised her head again and opened her eyes, she found Jack had turned around completely. He put his hands onto both sides of the tub, and leaned over her so he could lay upon her and nudge his nose into hers. Then he kissed her, with his mouth just barely open and a grin on his lips.\n\n\"Mmm?\"\n\n\"That's all I wanted,\" he said. \"That's what was missing. A little banter, a little knowledge about you, a lot of touching.\" Then the boy kissed her again, and again, no encouragement from her needed.\n\n\"Even more touching?\"\n\n\"Yes! Yeah I... want to do more things.\"\n\n\"Oh,\" she said, and she put her hands onto his back. Quite the ruttish little man, her Jack was. Good. \"Now?\"\n\n\"No, no not right now. Right now I want to just... forget about tomorrow, forget about the Danse, forget about Damien and... forget about all that shit. Just want to lay here in heaven.\" He turned around again, and slid back down into a comfortable spot between her legs.\n\nShe sat up and wrapped her arms around the tiny thing between her knees, her breasts to the back of his shoulders. Her hands found his again, netted their fingers, and she hugged him tighter while keeping his hands in hers. She kissed the top of his head, his ear, and pressed her legs together to push his together as well. He was completely wrapped in her limbs.\n\n\"You know I will not let tomorrow hurt you, my little Ventrue.\" She rested her cheek against the top of his head and squeezed him a little more. That ache in her insides, painful, overwhelming, was only worsened the tighter she held the boy. And yet she could not bring herself to stop, she wanted more. \"I will be the soft place you can rest your head, Jack, and I will be the force that destroys those that threaten you.\"\n\nHe chuckled a little in her arms, but they were soft chuckles, and heavy. \"I'm very grateful, but it'd be great if we could go a while without Kindred killing Kindred.\" The young man turned his head enough to look up at her, and his eyes were also heavy, even sad. \"Is it like this for vampires everywhere?\"\n\n\"Often so. Usually the Invictus rule or the Lancea et Sanctum rule, as the First Estate and the Second Estate, and their rules are often stern, totalitarian, which leads to rebel violence. In most cities, Kindred often struggle to simply not kill each other.\" She turned her head to meet his gaze from above, and leaned in to nudge her nose to his. \"We dragons are rare, and dragon Princes are almost unheard of. It took the work of ages to give this city what little peace it has between Kindred.\"\n\n\"Wow. I got lucky.\" His silly smirk returned, and he pushed his nose back against hers. \"Really lucky.\"\n\n\"I am the truly fortunate one here, little Ventrue. Do you know how difficult it is for elder Kindred to find someone they can trust, let alone... love?\" That word ripped the confidence and control out of her like nothing else, but when Jack nudged their noses once again and gave her a quick kiss, he soothed her frightened soul. Even the beast inside her, ancient, patient, and never off its earned throne, was happy to share its seat with the little boy's beast.\n\nLike two purring cats, wrapped together in a yin-yang. \n\nHer mouth opened, but nothing came out. What could she say? It was a waste to even try, to even attempt to describe the lost treasure that she had found, that this boy had dug up for her. Every time she closed her eyes, it ached inside her, reduced her to nothing but a young girl, and she was forced to open her eyes and hug Jack closer to her body as if he were about to vanish.\n\nBut he didn't vanish, he just blinked up at her when she hugged him, and returned her kiss when she kissed him.\n\n\"Do you... think you could play the cello for me later?\" he said.\n\n\"Oh?\"\n\n\"Yeah, I'd really like to hear that.\" He nipped at her lip a little, something very playful compared to his usual nature, and nudged his nose up against her jaw before putting more kisses against her neck.\n\nSo long, so infuriatingly long since a man had put soft kisses on her neck of his own volition. She melted in moments.\n\n\"I will play you for, mon amour. My little Ventrue.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "blood",
        "vampire drama",
        "vampire",
        "vampire novella",
        "vampire romance",
        "vampire sex",
        "violence",
        "sex",
        "squirting",
        "supernatural romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-02-ch-12"
}