{
    "title": "WMD Ch. 03",
    "pages": [
        "(WMD = Winter Men's Dilemma; My own irreverent spin on the BBC mythology)\n\n*Editing magic performed by KJ24 and Shyqash, plus contributions by the regular gang of brigands and neer-do-wells*\n\n*This story is NOT TO BE TAKEN SERIOUSLY!*\n\n* Vlad ~ \"You actually expect me to believe my Father, Brothers and I have the genetic capability to addict every woman we have sex with to our schlongs? That's nuts!\"\n\nMom ~ \"As opposed to thinking the color, length and girth of a phallus makes any woman lose all sense of loyalty, morality and decorum so she can become a man's sex sleeve - whore - bitch - property? Yes, I do.\" *\n\n*This story is rather flippant regarding the entire concept of sexual assault. Those who have read my previous tales know this is not my attitude at all. For the sake of this genre, I had to grapple with the concept of 'forcing a woman makes them love that dick'*\n\n*Lastly, from the Great Ravine that is the source my creative output, this story has sort of crawled out on its own. I've been trying to work out the next chapters of my other extended storylines - and that effort goes on. But since I started this story before I ... 'ran into difficulties', I've decided to press forward with it when the urge is upon me.*\n\n*****\n\n{Rendezvous by night}\n\nIt was past 1 a.m. when I woke up. It took me a several seconds to recall that I was on Dominique Malik's sofa. It took me a few more seconds to realize I had been woken up by the sound of someone in the kitchen. I got up and stealthily snuck off in that direction. Riley was using the open refrigerator for light while she opened and put aside the various Tupperware containers. She had boldly projected her 'I don't do White guys' attitude. I wanted to test her misconceptions.\n\nShe had already put one with the ribs aside and was looking to see if there were anymore. She was still wearing her black halter top, but her jeans and pumps were gone. Instead, all she had on below the shirt was a red fishnet cheekini ~ basically it left her vulva covered by a very sexy mesh, her cheeks covered by a wide-open lattice and two strings linking the front and back patches. \n\nThe lattice made indentions in her plush posterior. Her love handles swelled around the upper band that held the whole garment together and when she bent over, I could see straight into her pussy from behind. My cock went from half-mat to full sails in an instant. I moved up behind her quietly, bent down and,\n\n\"It is the red one,\" I said softly.\n\nRiley jerked up against my body and almost knocked us both over. I wrapped an arm around her waist to keep my balance. Her tummy felt warm and giving under my touch. She tried to turn around. I didn't let her.\n\n\"Vlad,\" she gasped.\n\n\"You are searching for the other container with the ribs, right?\" I continued as if my rod wasn't pressing her ass cheeks apart.\n\n\"Ye - yes,\" she whispered.\n\n\"I'll get it for you,\" I offered. I bent her forward with slow, but irresistible force. She half-heartedly tried to wiggle past me, which only made my sexual arousal more obvious. Riley had to grasp the side of the refrigerator to keep from falling face-first into the food.\n\n\"Here you go,\" I handed her the ribs. She took it in her hand.\n\n\"I've got it,\" she said after a few heartbeats. \"You can move,\" she said a few seconds later.\n\n\"Okay,\" I chuckled. I stood up, but let my hands fall on her hips. \"I was getting a bit too comfortable.\"\n\n\"Oh,\" she remarked. When she stood up and looked over her shoulder, she was smiling. \"How old are you?\"\n\n\"Eighteen ... old enough,\" I hinted, \"and ready.\"\n\n\"I see you are,\" she teased me. She pushed back with her butt. That allowed her to shut the refrigerator door, plunging us back into darkness.\n\nWe separated. Riley stumbled around for a few seconds as her night vision returned.\n\n\"What are you looking for?\" I asked.\n\n\"A plate. I want to heat up some ribs. I'm hungry.\"\n\nI had seen the plates when Taliyah had been getting the setting for our dinner. I pulled down one and handed it to her.\n\n\"Thanks,\" she smiled. She worked her way over to the microwave. It was one of those 'over the oven' kinds. She opened the door. put in the plate and began trying to figure out the controls.\n\n\"Put a paper towel over them, or it will splatter all over the place,\" I advised. I also pulled down one sheet from the roll and came her way. Once more I pressed into her from behind while I worked.\n\nI had the plate covered before she figured out how to work the timer. This time I started out with my hands on her hips.\n\n\"Thanks, I've got it now,\" she looked over her shoulder. I moved my hand along the top of her panties, cupping the swell of her belly and squeezing it with my fingers. \"I said...,\" she murmured. I planted a kiss on her ear. When she turned her neck farther around, I kissed her lips.\n\nShe left her mouth slightly open so I scoped out her lips, teeth and tongue with my own. She didn't respond, but she didn't pull back either. I gingerly moved my fingers up her side. My right hand cupped her right breast from below and began to fondle it. My left pulled her billowing hair aside so I could work my oral skills unimpeded.\n\n\"Ooohhh,\" she moaned. \"I shouldn't be doing this.\"\n\n\"You are about to get fucked in his house,\" I stated firmly. \"Doesn't that turn you on?\" She moaned some more. I could feel her nipple harden under my touch. I moved my left hand back down to her panty line, drawing gentle circles upon her stomach going higher - and lower - with each circle.\n\n\"Dominique will kill me,\" she protested weakly. All the fear and frustration of the past few hours had eroded what self-control and self-respect she had, so she was so much putty in my hand - or so I told myself.\n\n\"Neither one of us can get in that much more trouble, now can we?\" I whispered in her ear. My left hand rubbed against her gusset.\n\n\"Noooo,\" she emitted to no real purpose. She began gyrating her fleshy hips, coaxing my iron to exceedingly painful hardness.\n\n\"Pull your panties down,\" I rasped. \"I want you here and now.\"\n\nShe fitted her thumbs into the side bands and wiggled them down her hips. I dipped my fingers into her snatch where she was already exceedingly creamy and wet. My right worked under her halter top and manipulated her breast flesh to flesh.\n\n\"I'm not a slut,\" she lamented.\n\n\"I bet you don't do White guys either,\" I taunted her. \"Now bend over.\"\n\n\"Why are you doing this to me?\" she whined even as she complied with my wishes. Riley even spread her legs apart and angled her hips so that her ass was thrust back. I pulled my left hand back to guide me between her labia. My cock slapped her cunt lips twice, then I shoved my member into her steamy cavern. My left hand grabbed her hips to give me traction. My right mauled her tit with greater vigor\n\nShe was loose, but no worse than Brandy was when we first had sex. I wasn't sure that initial session counted as love-making. I preferred the passion of our second bout much more. With Riley, I was fucking a woman who wanted to be fucked. I made two - three - four - slow intrusions, then slammed in as hard as I could. She gasped, then moaned like a wanton whore. The microwave chime sounded.\n\n\"Aaahh ... like that,\" she pleaded. I pulled out, then slammed in again. Soon her pussy was making these quaint squelching noises as I worked her over. The eighth or ninth time, I began to feel her vagina beguile extra sensations for my penis. Riley's back-thrusts picked up with their speed and energy. She was beating up my hips while I busted up her pussy. The microwave sounded off its warning once more that her food had been heated up. We didn't care.\n\n\"You like this?\" I panted in her ear.\n\n\"God yes!\" she exclaimed. \"Fuck me - fuck me,\" she insisted. I had to grip her shoulder with my left hand to keep pace with her efforts. Whatever resistance she had put up against Chine must have been half-hearted because this chick certainly loved raw and nasty sex. I could barely keep up.\n\n\"Fuck yeah - fuck yeah - fuck yeah,\" she grunted louder and quicker. \"Fuck ya - fuck yaaaaa,\" she screamed. She got her hand up to her mouth at the last second so there was still some hope that the whole house hadn't heard us. I moved my hand from her shoulder and grabbed a large handful of her coppery locks. I yanked her head back while I plunged in yet again. I was unrelenting and based on my performance earlier today, I was unlikely to get soft anytime soon.\n\n\"Red Wolf Bitch?\" I taunted her. I punctuated that by taking my right hand off her breast and slapping her ass hard enough to leave an imprint.\n\n\"Yes-yes-yes,\" she exhaled with glee. \"I'm your bitch.\"\n\n\"You like sex, don't you?\" I continued to tease her. I also rained down more spanks; left, right then back to the left. The sound of my cupped hand was a counterpoint to the sound of her sweaty, meaty behind impacting my crotch.\n\n\"Love - love it,\" she huff.\n\n\"Like it rough?\" \n\n\"Yeeessss,\" she exhaled. \n\n\"You were dressed to fuck Chine tonight, weren't you?\"\n\n\"Yeessss ... oh ... nooo,\" she gulped.\n\n\"Did you fuck him today?\"\n\n\"Nooo ... Noooo,\" she howled.\n\n\"I don't care,\" I chuckled. \"I'm fucking you now.\" What I did know was that I wasn't breaking Mom's rules about where my cock should and shouldn't go. \"Come here,\" I coaxed her up, making her take over more of the 'fucking' work.\n\nI went back to her breasts, pushing her halter top over her left breast as well. Riley bent forward, placing one hand on the stove while the other began feeling her labia and my cock as it drove into her. I could feel her fingernails scratching along my cock as it pistoned into her. Absent the spanking, I opted to squeeze her tightly-aroused nipples, plucking and twisting them.\n\n\"Ga-ga-ga,\" she choked. \"God yes-yes-yes - give it to me.\"\n\n\"Gladly,\" I ground out. She was pushing me to my limits. Fortunately for my ego, she was failing physically first. Her next orgasm was a deep, guttural series of grunts, punctuated by her tipping forward, her full weight falling on my arms.\n\n\"Ha ... ha ... ha,\" I puffed, struggling to regain control of my pulse and breathe. \"How did that feel, Riley?\"\n\nShe didn't respond for nearly a minute.\n\n\"What,\" she gulped, \"brought that on?\"\n\n\"Looking the way you do, with that body, you have to ask?\"\n\n\"Oh ... ah ...,\" she giggled. \"I was hoping to get that response tonight ... just not from a kid like you.\"\n\nI pulled my cock back until my glans was the only part left inside. My next intrusion was more sedate.\n\n\"Now what?\" she looked over her shoulder at me and gave a weary, sated smile.\n\n\"I believe you came her to eat something,\" I grinned. Riley looked up to the microwave then back to me. She rotated her big ass on my rod.\n\n\"Well, I can't eat unless you move,\" she gazed at me salaciously. I eased back enough for my cock to exit her snatch ... slowly, letting me drink in her lusty physique, her full-fluffy breasts and womanly curves. Her smile was positively lewd and shameless. Riley went to her knees, wrapped one hand around my cock while the other rested on my hip.\n\n\"Hey big boy,\" she addressed my juice-covered pecker. \"Where have you been?\" She finished up that little 'pep talk' by giving me the most promiscuous, slutty countenance I'd ever been confronted with. Her eyes were begging for my cock.\n\n\"What are you waiting for ... you cock-hungry slut,\" I stole Chine's words. Riley's smile grew, then she licked the base of my cockhead before sliding it along her lips. She had to twist her head sideways to accomplish that and still keep eye contact.\n\nHer extended tongue slid along the underside of my cock from tip to scrotum. She then began licking each testicle in turn, sucking them into her puffed up cheeks. \n\n\"Mu mich?\" she slurped. I thought she was asking me if I liked it. I put my hands on either side of her head and guided her back on task. Her free hand reached around and began feeling up my buttock, testing its firmness.\n\nRiley sucked on my nuts for a while longer. When I let out my first groan, her eyes lit up and she returned her attentions to my cock. This time, she opened her mouth wide and stuck my glans in. Her lips closed on it, then she moved her head back with a resounding 'pop'. I tried to maneuver her mouth back into action, which she willingly obliged.\n\nThis time she rolled her tongue along my length as it passed her lips. Riley murmured something so I relented on my hand pressure.\n\n\"Tasty,\" she purred. She licked her own juices before getting back to work pleasuring my nob. Riley knew her cock-sucking. My cockhead and about two inches of shaft went down her throat in one fluid gesture. She kept looking at me, judging my reactions to her actions.\n\nBobbing came next with the titillation of my penis rubbing against the back of her throat. At the same time, her tongue worked along the base and sides with great vigor. Next came the slurping, slorping and pre-gagging. She didn't relent, even when there was some resistance, taking more and more of me until her nose was buried in my pubs. At that moment we both knew I was being fucked by a more experienced woman than I'd ever had before.\n\nRiley moved her head back until her mouth made another 'pop' and my cock sprang free. A line of saliva and pre-cum stretched from my tip to her lips. She caught it up with a fingertip then licked said finger clean.\n\n\"Time for some ribs,\" she smiled up at me.\n\n\"Motherfucker,\" I mumbled, but I let her stand.\n\nMind you, she didn't bother putting her panties back on. She turned around, retrieved her plate from the microwave and took the first rib into her lips. She did a wonderful reenactment of her earlier oral techniques with me.\n\n\"I'm not done with you yet,\" I promised.\n\n\"I was hoping you would say that,\" she snickered.\n\n{Upstairs, at the same time}\n\nPssst ... pssst,\" Taliyah hissed at Mikhail. \"Wake up.\"\n\n\"I'm awake,\" he replied, though his eyes remained closed.\n\n\"I can't believe Vlad is cheating on Brandy.\"\n\n\"Brandy keeps telling him that she's Darius' girl. How long is he supposed to hang around waiting for her to decide?\" Mikhail questioned.\n\n\"I ... I warned her ... he had better not be fucking my Mother.\"\n\n\"Do you want me to go find out?\" he finally opened his eyes. Taliyah's head and shoulders were visible from his horizontal form as she looked from the bed. She was still dressed in her cheerleader's uniform.\n\n\"Don't be stupid,\" she spat. \"I'll go look.\"\n\n\"Yeah ... because that couldn't possibly turn out wrong,\" he chided her. \n\n\"Damn it. Stop making sense. I prefer you being an insensitive jerk.\"\n\n\"Default setting - gotchya,\" he laughed softly. A few moment's passed.\n\n\"I can't hear anything,\" Taliyah closed her eyes and strained her hearing. Mikhail rolled up into a sitting position then stood.\n\n\"I'll be right back.\"\n\n\"I'm coming with you,\" she slid off the bed as well. Mikhail took in the girl-becoming-a-woman before him. Taliyah Malik was taller than Brandy by a good three inches. Her skin was mocha with a dark birthmark under her right breast. Her eyes were dark, intelligent and sparkled when she was angry, as he could well attest. \n\nHer lips were full and very little acne scared her face. Her thick, kinky black hair was pulled back in a woven ponytail with beads on the last few inches. Her arms were firm and strong, as were her legs (she'd punched and kicked him with real force), her breasts were hemispherical and pert, with long thin nipples that poked through her clothes when she was aroused. Her stomach was soft to the touch, curvy yet tightly muscled beneath the surface. She was a true athlete.\n\nHer thighs and calves were muscular, as was her curvaceous ass which stuck out of its own accord and was sturdy to the touch. Mikhail knew. He'd played in depth with that ass just this afternoon ... and loved it. Her full, rich lips were upturned in her normal sneer.\n\n\"Where did your clothes go?\" she hissed. Mikhail was down to his boxers.\n\n\"I don't sleep in my clothes. It is uncomfortable. Besides, we've seen each other naked, so what's the big deal?\" he countered.\n\n\"It will be a really big deal if Momma finds you like this - in my room.\"\n\n\"I'll tell her you beat me up, took my clothes and made me sleep at the foot of your bed like a bad serf, or a good dog,\" he chuckled. She smacked his chest.\n\nTogether they went to her room door which had been left partially open when they fell asleep. Taliyah was still disappointed that she hadn't made more progress with the terribly annoying, yet definitely attractive youngest member of the Samsonov clan. He seemed immune to her status at school, or her mother's critical position in city government. He was the most exasperatingly independent man she'd ever met. She was also oddly drawn to his muscular frame, pale blonde hair and crystal blue eyes that reminded her of a raptor.\n\nTaliyah couldn't quite accept that she was also drawn to the man's brutality. There was a barely contained beast dwelling behind those crystal orbs ... and she wanted to see more of it. She wanted to test it and she wanted to make that challenge because she sure that was exactly how he would see it - a one on one fight for dominance.\n\nShe couldn't gain dominance in Darius' power structure. The whole cheer squad had been reduced to play toys for the football team. Being a girl meant she was a vagina and little more despite all her personal ambitions. Brandy barely cared, she was so far under Darius' spell. Mikhail was different though. She'd heard about how he treated Kaja; how Kaja was part of his team and was treated as if her ambitions mattered.\n\nIt wasn't until the car ride home [last chapter] that Taliyah realized that Kaja hadn't hooked up with Mikhail yet. At first, she had thought Kaja was showing stunning wisdom for not dating one of the three most hated White boys in school. The hunting lodge had changed all that. He'd abused her, fought with her and taken control over her and she'd made him pay for every step ... and it had been fun. He didn't belittle her efforts nor insinuate that his success was anything more than a temporary victory for either side.\n\nShe'd verified that in the stables when she'd wailed on him good. Even his scary/crazy mother had thought Mikhail need a good thrashing. How he had ended up in her bedroom when the lights went out was still a mystery. Mikhail hadn't once looked at her funny, or tried anything. After their earlier tussle on the floor and the resulting make-out session, he'd rolled over and gone straight to bed. She'd heard Vlad come in, their whispered conversation and then they were alone.\n\n\"I'll go first,\" he said.\n\n\"Why do you ...,\" she got out before he interrupted.\n\n\"If I'm seen, I'll be dismissed. If you are seen, there could be a long explanation you don't want to hear,\" he told her. \"I go first.\"\n\nThis time she didn't fight him on the point.\n\nAs they sneaked down the stairs, Taliyah could make out the noises were coming from the darkened kitchen. From the echoes, some serious screwing was going on. \n\n\"Red Wolf Bitch?\" they heard Vlad taunt her followed by the sound of a hand slapping an ass hard.\n\n\"Yes-yes-yes,\" she exhaled with glee. \"I'm your bitch.\"\n\n\"Bitch,\" Taniyah whispered. \"He's fucking Riley, that tramp.\" She was relieved it wasn't her mother ... it was the woman her dad had been cheating with now cheating with the man who was fucking Brandy silly ... which was confusing.\n\n\"We can go back now,\" Mikhail advised her. \"Nothing to shock us, or make us want to stop them.\"\n\n\"You like sex, don't you?\" Vlad continued to tease her. He was also raining down more spanks. The sound of his cupped hand was a counterpoint to the sounds of her sweaty, meaty behind impacting his crotch.",
        "\"Love - love it,\" Riley huff.\n\n\"What a slut,\" Taliyah seethed. \"I hope he fucks her so hard she can't go to work tomorrow. I hope it hurts.\"\n\n\"Like it rough?\" Vlad said.\n\n\"Of course she does, Bro,\" Mikhail said quietly. \"Listen to her howl.\"\n\n\"Yeeessss,\" Riley exhaled. \n\n\"You were dressed to fuck Chine tonight, weren't you?\" Vlad led her along.\n\n\"Yeessss ... oh ... nooo,\" she gulped.\n\n\"Whore,\" Taliyah hissed yet again.\n\n\"Did you fuck him today?\"\n\n\"I bet she did,\" Taliyah was getting steamed.\n\n\"Nooo ... Noooo,\" she howled.\n\n\"Lying cow,\" Taliyah grumbled.\n\n\"Let's go back upstairs,\" Mikhail gently tried to turn things around.\n\n\"I don't care,\" Vlad chuckled. \"I'm fucking you now. Come here,\" I coaxed her along ~ out of sight of the two on the stairs.\n\nReluctantly, Taliyah let herself be corralled and taken back to her room.\n\n\"Ga-ga-ga,\" Riley choked. \"God yes-yes-yes - give it to me.\"\n\nOnce inside, Taliyah began pacing angrily.\n\n\"He's fucking that sow,\" she grumbled. \"He's fucking her good and that shit belongs to Brandy, not that cheating whore.\"\n\n\"He's fucking her so she won't be a BBC whore anymore,\" Mikhail said casually. \"In the same way Brandy isn't Darius's pet bitch, Vlad is going to rip Riley apart and fix what ails her on the sexual front. Trust me. That is how it will work out.\"\n\n\"Trust you? You barely know anything about sex and women,\" she blasted him.\n\n\"Mom was a far bigger slut than anyone in this burgh and she knows all the tricks, lies and deceptions ... and she is confident that Vlad can get the job done.\"\n\n\"She's crazier than you are and that's saying something,\" she retorted.\n\nMikhail went back to the blanket and pillow he had on the floor, making ready to go back to sleep.\n\n\"That's what you are going to do?\" Taliyah sounded bitter.\n\n\"What I plan to do is shut you up, fuck you, curl your toes and make you scream out my name while I force you into climax after climax,\" he said as he lowered himself to the pillow.\n\n\"I won't let you,\" she snarled.\n\n\"'Letting' wasn't part of the program, remember? You'll do it because you want to put me in my place and you think you can.\"\n\n\"Not likely,\" she groused. \"You are never having sex with me again.\"\n\n\"That's okay. I'll have those precious memories to put me to sleep. The sweat pooling on your lower back, the muscles around your sphincter pulling back along my cock as I pulled out of you and then that sucking noise when I pushed back in. I owned your ass and that will never change.\"\n\n\"Son of a bitch,\" she snarled as she jumped on him. She was playing his game yet she was sure she could win it and shove her victory in his face. One of her knees hit the carpeted ground while the other drove painfully into his hip. Taliyah hauled back to slap his upraised left arm with her right. Her left hand landed on his right triceps, trying to keep him pinned down.\n\n'Smack', came the first blow. The second one, he caught by his wrist and held tight. She shifted to her left, only to have that one snatched too. Foolishly, Taliyah went for the head butt, learning rapidly Mikhail had a head as hard as stone.\n\n\"Ow,\" she gasped. She was so distracted she missed him rising up and kissing her on the lips. He tried again, so she tried to bite him.\n\nTaliyah kept struggling, but couldn't stop Mikhail from rolling them over so that he was on top. He paid for that advantage as he felt her stabbing her manicured fingernails into his right hand.\n\n\"Hrrrr...\" he grumbled. He didn't let go, though. He tried to kiss her again and got a bitten lip for his troubles.\n\n\"Next time I'll bite off your tongue,\" Taliyah promised. She was also keeping her voice low so that this fight would remain just between the two of them.\n\n\"I'm willing to test that promise,\" he gave his best wolfish grin. Mikhail pressed his groin into hers. Taliyah had her legs around him, her ankles pressing into his ass. She was also dry humping his steel pole.\n\n\"Get the hell off of me,\" she glowered.\n\n\"Make me,\" he chuckled. Taliyah thrashed about, tried to bring his capturing hands within bite range and endeavored to buck him off with up thrusts of her hips - all to no avail. What she did accomplish was to get both of them very horny. Their quandary was Taliyah couldn't get him off of her and Mikhail couldn't further manipulate her unless he let go of an arm.\n\nHe let go of her left arm. She immediately slapped him with it, but that allowed Mikhail to roll them back over to where the painful leverage caused her to let go of her leg-lock around his hips. Mikhail also had a free hand. He used it to land a resounding smack on her clad bottom. A slap-for-spank exchange erupted between the two with Taliyah getting more turned on by the second. She knew he was getting into it.\n\nShe changed things up first, grabbing him by the chin.\n\n\"I am NOT your bitch, Boy,\" she taunted him. Mikhail's counter-ploy was to grab hold of one scrumptious ass cheek and give it a good squeeze.\n\n\"Yes you are,\" he laughed.\n\n\"I'm on top,\" she snarled.\n\n\"This gives me better access to your tits,\" he kept chortling. \"I'm enjoying the view.\"\n\n\"I'm going to kill you,\" she seethed. Her hand dropped from his chin to his throat as she tried to throttle him. Mikhail's throat muscles flexed, giving her poor purchases. Mikhail took the opportunity to move his hand between the two cheeks and probe her anus through her shorts and panties.\n\n\"No you don't,\" she rumbled. \"We are not doing that again,\" but her insistence sounded a bit weak, even to her ears.\n\n\"What are you saying?\" he grew serious. \"That was the best sex I ever had.\"\n\n\"I hope you enjoy the memories. That hurt and I'm ... stop that,\" she protested. Mikhail had moved his questing hand from outside the clothing to inside. He had a finger probing her sphincter in a flash.\n\nTaliyah's hand went back to his jaw.\n\n\"I said stop that,\" she insisted at the same time she stopped trying to wiggle her ass away from the intrusion. Mik drew her higher up his body so that Taliyah's face was above his and her breasts were in his face. The real motive behind that action was revealed when he dipped his fingers further beneath her butt and penetrated her cunt with a finger.\n\n\"Oh, now you think you are going to get some of my pussy,\" she sneered. \"Ain't happening. You had your chance this afternoon.\"\n\n\"Afraid you'll like it? Afraid you'll like it as much as you loved me forcing you this afternoon?\" he teased her.\n\n\"Bitch ... I'll make you my Bitch, Mik. I don't need your dick,\" she countered.\n\n\"You know I like my Black Bitches quiet,\" he snorted. \"You talk ...\" Taliyah pressed her lips down on his, shoved her tongue between his teeth and waged war with his tongue before pulling back.\n\n\"You talk too much,\" she mocked him. Mikhail took his slick finger back to her puckered hole. This time he penetrated. Taliyah flinched, gasped then groaned.\n\n\"I hate you,\" she panted.\n\n\"I'm not particularly fond of you either,\" he grinned up at her.\n\n\"Liar,\" she huffed. \"You are getting off on my body. I know your brother does.\"\n\n\"Vlad's got good taste in women,\" he radiated masculine charm. \"I think mine is better.\"\n\n\"Damn right she is. This still doesn't mean I'm going to let you fuck me.\"\n\n\"You had better step up your game if you plan to stop me,\" he challenged her. Taliyah thrust down on his blood-filled tool and ground her vulva in. Mikhail could then switch up his hand so that his thumb was pressing into her bunghole and two fingers were pumping her twat. She was sticky-wet.\n\n\"Fuck you,\" she growled. She let go of his jaw, supported her weight with her free arm and propped her midsection up. That forced her shorts and panties down since Mikhail wouldn't release his finger-holds in her nether regions. Mikhail, sensing the change in her stratagem, let go of her right hand. Taliyah smirked down at him at the same time she shimmied out of her clothing. Mikhail quickly shed his boxers.\n\n\"Right pants pocket - condoms,\" he told her. Taliyah drew up short.\n\n\"When did you get them?\"\n\n\"Vlad gave them to me,\" he answered. \"I guess he keeps a supply around in case Brandy gets frisky.\" That was a carefully crafted lie. He knew they came from his mother. But telling Taliyah that would curtail his upcoming sexual romp.\n\n\"I'm on the pill.\"\n\n\"Do you trust it?\"\n\n\"Your sperms not that strong,\" she countered.\n\n\"I'll have to give you a double ...\" he got out.\n\n\"Shut up,\" she taunted him. \"You talk too much. I like my white boys doing something else with their tongues.\"\n\n\"That's date three material,\" he chuckled.\n\n\"I'm not going to give you the choice.\"\n\n\"You talk too much. Less lip - more action.\"\n\nShe settled down on him, his cock pressed against his lower stomach while she wriggled over the base.\n\n\"I'm not sure I want to fuck you now,\" her voice dripped with sarcasm. \"I don't do White boys.\" Mik shrugged. That flummoxed her, until he seized her lapse in caution to flip them back over, mounting her before she could push him off.\n\n\"Bastard,\" she grumbled. He still wasn't inside of her because his hands were too busy keeping her hands pinned over her head. That didn't stop him from humping her. When he went in for a kiss, she decided to get fierce instead of resisting. She chewed on his lower lip, twisted and wrestled with his tongue against his palate. They exchanged a soulful kiss that caused her to shiver from neck to tailbone.\n\nSlowly, Taliyah's right leg worked its way up his left side until her knee passed her waist. She was now wide open and ready for some serious screwing. Mikhail released one of her hands and was promptly slapped. His hand went between them so he could line up his penis for penetration.\n\n\"I don't think so,\" she teased him. \"This isn't going to happen.\"\n\nWith that declaration, Mikhail's cockhead rubbed up against her labia, teasing it from hood to perineum.\n\n\"Not my ass, you bastard,\" she glared.\n\n\"Fine, take off your shirt.\"\n\n\"Why should I do ... ah ... anything for you?\"\n\n\"Woman, is it going to kill you to show me your tits again?\" he complained.\n\n\"What is the magic word?\" she taunted him.\n\n\"You are a sexy bitch,\" he rumbled.\n\n\"I was looking for 'please', but that will do,\" she snorted. Mikhail let go of her other hand allowing Taliyah to take off her top and bra together.\n\n\"Damn, those are some sweet ta-tas,\" he remarked.\n\n\"These?\" she tantalized him by bringing her upper arms together, squeezing her bountiful mounds together and pushing them up.\n\n\"Yeah,\" Mikhail studied them.\n\n\"Get to licking,\" she demanded. Mikhail shot her a devilish look. He couldn't pump her and take in her boobies at the same time, so he had to slide down to take them both in. His suckling was ravenous, toothy and full of vigor. He not only lavished attention on her thick, dark brown nipples and areoles, he licked every inch of them, especially the bottom where she was salty with sweat. \n\nQuickly she was writhing beneath him. She released her breast augmentation to pull him in tighter by grabbing his ear and using it like a steering wheel. Her left hand went between them and began stroking his aching cock, giving it a brutal yank every time his teeth got too sharp against her tender flesh.\n\n\"Yeah ... wooo ... yeah ... nice. Rashaan won't do this for me,\" she cooed.\n\nMikhail took that insinuation of a comparison to smoothly transition his hand back to her flank, gripping and kneading her perfect, muscular buttock.\n\n\"Oooohhh ... ahahhh ... that's it ... yes ... this is ... so wrong. I ... hate you.\"\n\n\"Hate - love - fucking is fucking, woman,\" he answered. \"You are sensual,\" they maneuvered him into her molten, slippery folds, \"and I'm hot for you. That's enough for me.\"\n\n\"This isn't going ... to become a ... aaahhh ... habit,\" she chuffed.\n\n\"I don't think so,\" he rebounded. \"I kind of like this and I'm faster than you.\"\n\n\"Next time ... oh yeah ... I'll rip your nuts ... aaahhh ... off,\" she swore.\n\n\"I'll ...ugh ... take that under ... (grunt) ... advisement,\" he countered. \"You feeling fucking awesome ... I have to do this again.\"\n\n\"Nooo you won't,\" she groaned. Mikhail began to delve deep into her depths, swiveling his crotch to make sure his cock rubbed as much of her vagina as possible. The more he fucked into her, the more Taliyah rebounded. She'd also finally shut up. She was having the best sex of her short life. None of the gang-bangs and private sessions with Rashaan could compare. She didn't know how to handle this.\n\nSlowly the looks Brandy gave Vlad made haunting sense. If Vlad could fuck as well as his brother ... that would explain why she didn't want to give that White boy up. Taliyah feared she could get used to this. She already found Mikhail intriguing - strong, vicious and combative - fearless. He didn't give a fuck about what anyone thought. He wasn't even worried about what his brothers thought and did.\n\nShe really liked that - him not giving a shit - living up to his own expectations and those alone. Even his scary/spooky crazy mother didn't hold him back. Mikhail's rod was caressing, massaging - loving every inch of her vaginal love box. \n\n\"You are being awful quiet,\" he teased her.\n\n\"I thought you liked your Black bitches quiet, asshole,\" she shot back.\n\n\"I want to hear you scream,\" he laughed. Taliyah grabbed Mikhail's right shoulder and dug her fingernails in enough to cause him pain.\n\n\"How about you screaming, bastard?\" she huffed. She was getting close and she took some of her erotic tension out on his flesh. \"Fuck, fuck, fuck,\" she covered her mouth and gave Mikhail the squirming and climax he wanted. He barely lasted seconds beyond her, his body tensing up as he drove into her harder and harder before his balls unleashed his torrents of cum.\n\nFour - five - six times he erupted. They lay coupled together, both struggling for breathe, sweaty and exhausted.\n\n\"Get off me,\" she moaned. \"You are heavy.\"\n\nMikhail snaked an arm underneath her then rolled over so that her weight was now on him.\n\n\"Oh, you think you are being clever,\" she griped. \"I still hate you.\"\n\n\"I didn't fuck you to win you over. I fucked you because you are a cock-tease that I had to have. I could care less about your attitude,\" he zinged. She hit him on the chest. He laughed, so she hit him again. Finally Taliyah propped herself up, her elbows on his pectorals and her chin supported by her linked hands.\n\n\"Are you ever not a jerk?\"\n\n\"I aim for consistency,\" he chuckled.\n\n\"I don't know how I'm going to put up with you,\" she mused.\n\n\"I imagine you will be constantly kicking my ass when I piss you off. That works for my brothers,\" he told her.\n\n\"Are you one of those masochist - a freaky jerk?\"\n\n\"Not particularly. If you weren't so damn hot, I'd have dumped you by now.\"\n\n\"You are an infuriating ass,\" she sizzled. \"Am I just a fuck toy for you?\"\n\n\"I'm in your room in the middle of the night with your mother just down the hall ... yeah ... I'm so hard up for a screw that I'm putting up with all this fucked up shit,\" he remarked.\n\n\"A simple 'no' would suffice,\" she leaned in until they were nose to nose. Mikhail tilted his head slightly so he could lick her nose.\n\n\"Ewww ... now I have your slimy spit on my nose,\" she complained.\n\n\"You have another form of my bodily fluids in your cunt, Taliyah,\" he pointed out.\n\n\"You are about as romantic as a spit-cup [for chew tobacco]. Vlad gives a crap about Brandy. Why can't you give a damn about me?\"\n\n\"Taliyah,\" Mik hesitated. \"I'm sleeping on your God-damn floor. We are having sex on your God-damn floor and not your far more comfortable bed. If you are expecting sappy words, you are fucking the wrong Samsonov. You should have picked Alexander. He'd treat you like a lady.\"\n\n\"I would have, but he left,\" she lied. Alexander did nothing to engage her spirit and Mikhail resonated with her soul. Mikhail shrugged, rolled onto his side and let his penis slip out of her sex sleeve. She could feel some of his seed leaking out so she moved up, grabbed a Kleenex and cleaned herself off. She even took the precaution of hiding it beneath some other trash. There was no sense in having a fight with her Mother over her raping Mikhail on her bedroom floor.\n\nShe gathered up her panties and bra, putting them on while sitting on the edge of her bed. Mikhail took the break to retrieve his boxers. She wanted to lie down and try to order her thoughts about her Father - and Rashaan - and bitterly, about Mikhail. Mikhail took her by the hand and pulled her to his kneeling form.\n\n\"Lay down with me a bit,\" he demanded. She wanted to resist, except she was both physically and mentally tired.\n\nTaliyah settled in by Mikhail's side. She rested in the crux of his arm, her head using his shoulder as a pillow. As sleep took her, she worried about what her Mother would say when she found them this way. She nodded off deciding she didn't care. Brandy had stolen her bit of happiness so why couldn't she seize some of her own?\n\nDominique leaned her back against the wall next to Taliyah's door, controlling her own breathing and recalling much of what had passed between her daughter and her enemy/lover. Woken up by the same erotic noises made by that slut, Riley, fucking that Samsonov boy, Dominique had stepped out into the hall just in time to see Taliyah leading Mikhail back into her room. \n\nShe had listened to most of their exchange, twice coming to the verge of storming in, acting offended and throwing Mikhail out on his ear. Both times, Taliyah's feisty retorts caused her to pull up short and silently urge her daughter on, to dominate the son of Gayle Fonteneau and make him perform. Instead, she and Mikhail had given as good as they each got, coupled like they belonged together and matched each other sexually.\n\nNow her daughter was cuddling on the floor with the son of her family's nemesis, softly snoring her way to post-coital bliss. Dominique was wet between the thighs and had an itch she couldn't scratch. Had she not been so furious with Chinedu, she would have called him. Instead, she was alone ... and then the noise from downstairs picked up again.\n\n{Riley's Ass and Dominque's Pleasure}\n\nI had been working over Riley's labia and clitoris while she attempted to eat her plateful of ribs. She was huffing and puffing as she ripped through the last three.\n\n\"Let's go to the sofa,\" I said then licked her fingers clean.\n\n\"I suppose it wouldn't hurt to do it one more time - as long as Dominique doesn't find out.\" \n\nI led her to the sofa. She was expecting to recline on the furniture while I had other plans.\n\nI pushed her behind so that she fell over the arm rest. Riley giggled.\n\n\"You like my ass?\"\n\n\"There is a lot of you to like and I have something special in mind,\" I informed her. I knelt behind her, ran two fingers up her inner thigh and delved back into her sloppy cunt. I began kissing each butt cheek, working my way into her crack. With my left hand still working over her vaginal canal, I opened up her buttock with my right.\n\nRunning my tongue from her sweet secretions to her anus brought forth wanton moaning and hip gyrations. I went back and forth for several minutes until I sensed her on the cusp. I rapidly pumped my fingers into her cunt, pressing up with all my dexterity while driving my tongue into her rectum. She jumped, groaned loudly then flopped back down on the sofa.\n\n\"Huh-huh-huh-huh-huh,\" she labored on and on until her teeth clenched and she began grunting loudly. Her eruption caused her whole plump body to vibrate and quiver. I punctuated her latest outburst with a resounded pop to the ass. That spurred her on to greater vocalizations. I had her going for over a minute until she lay utterly helpless to my predations.\n\nI went back to her sphincter, drilling in one finger slowly to the second knuckle. When that became less constrained, I worked in a second. When I went for the third, she mumbled something I couldn't make out.",
        "\"What was that?\" I inquired.\n\n\"I don't do anal,\" she pleaded.\n\n\"Chinedu already told Dominique and me that he did ... and you liked it,\" I deceived her.\n\n\"He did?\" she hesitated then, \"Oh - okay,\" and she submitted to my advances. I had to wonder why she lied to me. Did she not like it, or had she thought I would think less of her because of it? I worked her over with my three fingers until her anus relaxed. Next, I took it easy with my cock, tested her physical frontiers with my cock and her emotional waters with my efforts.\n\n\"Hmmmm,\" I rumbled as I worked my full length in at a steady pace. As I pulled out, I saw Dominique looking at us from the foyer. She must have just come down the stairs. I drove my cock back into Riley's butt while keeping eye contact with Dominique. I was kind of curious why she wasn't ripping us both a new asshole.\n\n\"You want this dick, don't you?\" I asked.\n\n\"Yes,\" she gasped. \"Yes ... I'm a slut,\" she sobbed.\n\n\"Hey, at least you are honest,\" I allowed. \"And you are good at it too.\"\n\n\"Oh ... ummm ... thank you,\" she hiccupped. \n\n\"You're welcome,\" I pounded her butt for a minute, silent except for Riley's gasps, grunts and moans. It was positively glove-like by this time and every thrust drove her farther into her own sensual euphoria. Hey, she really liked dick.\n\n\"So, what do you think of Dominique?\" I surprised them both.\n\n\"I - huh - what?\" she tried to order her thoughts.\n\n\"Is she a good boss?\"\n\n\"Ya - yes,\" she panted.\n\n\"You find her sexy, don't you?\" I tossed out there. This was one of the lessons I was supposed to use on Brandy, except the recipient of the sexy was Taliyah.\n\n\"I ... a little ...\" she huffed. She was getting close so I slowed my pace.\n\n\"Have you ever brushed up against her ass - touched it?\"\n\n\"Once ... well, a few times.\"\n\n\"Nice,\" I stroked her tramp stamp. \"I bet is it luscious and warm to the touch. I bet she knows you do it, too.\"\n\n\"Really?\" she gulped.\n\n\"Oh yeah,\" I looked Dominique's way. \"She's got to be a sexual volcano. I bet she's got great, silky thighs too. I bet you'd like touching them.\"\n\n\"May - maybe ...\"\n\n\"I'd go down on her if I had half a chance - if she didn't despise me,\" I led her on. \"I bet she tastes like molasses.\" \n\n\"I don't know. I guess so ... I've done girls before ... I kind of liked it,\" she murmured.\n\n\"Good for you,\" I gave her a light spank. \"If you had to go down on Dominique to keep your job ... and if you promised to nut Chinedu the next time he propositioned you, would you?\"\n\n\"You mean eat her out?\" Riley looked over her shoulder. I gave her three quick pummelings to get her back on track.\n\n\"Yeah, tongues and fingers - really tear her up - to keep your job?\"\n\n\"Yes - yes,\" she moaned.\n\n\"Yes, you'll fuck her, or yes, pound your butthole harder?\" I teased her.\n\n\"Both!\" she hissed loudly. \"Tear me up!\"\n\n\"Wish granted,\" I murmured. I dug my fingertips into her ample thighs and pulled her into each thrust. Her tunnel spasms pushed me to the edge and I shot first. My scolding semen caused her to rattle off like a steam kettle.\n\n\"Fu-fuck,\" she ground out from deep in her diaphragm. I bet she expelled every bit of air from her lungs. She was spent and relatively helpless.\n\n\"Well Dominique,\" I addressed the darkness, \"do you want your apology?\"\n\n\"What?\" Riley mumbled. Dominique stepped out of the shadows fully into the room.\n\n\"What makes you think I'll participate in this farce - Vlad?\" she regarded me brazenly. I could have sworn she removed a hand from inside her robe as she entered the room.\n\n\"Dominique,\" Riley groaned. \"It wasn't me. He forced me.\"\n\n\"Yeah Girl, I saw how hard you were fighting him off,\" she glowered at her underling. \"I heard you telling him how you would tongue my snatch to keep your fucking job. How much more of a slut can you be?\"\n\n\"I'm sorry,\" she sobbed. \"I didn't know what I was saying.\"\n\n\"I'm tired of your 'sorry',\" Dominique spat. She stormed over to Riley, grabbed her by the hair and pulled her head up so they had eye contact. \"I want to know what you are going to do to make it up to me!\"\n\n\"I ... I ...\" she sniveled.\n\n\"Vlad, get over here,\" Dom commanded. \"Riley, clean him up. I don't want him going to sleep with a dirty cock.\"\n\n\"Whoa, don't I have a say in this?\" I protested.\n\n\"She's made a mess of my arm rest. God knows what mess you made in the kitchen. You had better do what I say, Boy - right now!\"\n\nWell, I knew what side of the family Taliyah got her fight from. Dominique was bristling and ferocious ... and raunchy.\n\nI stepped beside Riley's upraised head and presented her with my cock. Dominique didn't wait for her to reposition herself, instead grabbing her hair by the roots and guiding her mouth over my rod. Riley went straight for the suction with a healthy dose of tongue action.\n\n\"Mmmm - mmmm - mmmm - yummm,\" she muttered around my glans.\n\n\"Take it all, you whore,\" Dominique insisted. She pulled Riley's head toward my pelvis with her left hand while pushing me forward by the small of my back. Riley's gag-reflex proved to be virtually non-existent. I had the stimulation of my glans' edge rubbing against her throat as she swallowed my full length in one diligent effort. Saliva was drooling down her chin. By her efforts, my retiring rod found a new, though painful, life.\n\n\"Damn girl, you can choke down some snake,\" Dom gave grudging admiration. She pulled me all the way out so Riley could speak.\n\n\"Yes,\" she coughed up more spittle. \"I love cock.\" Dom shoved my cock back down her throat.\n\n\"You had better be staying away from Chine's 'black snake' from here on out,\" she insisted. Riley nodded, partially in lust and partially out of fear.\n\nI reached my left arm around and circled Dominique's waist. She arched an eyebrow my way. My hand then worked down toward her ass.\n\n\"Mind yourself ... Vlad,\" she cautioned me. I pressed her patience by patting her butt. She stopped looking at Riley and began staring me down. I refused to wilt, but I did deceive her momentarily by pulling my hand back.\n\nShe gave a sliver of a superior, smug smile, only to have it frozen by my undoing her robe tie. She tried to still me by her will alone. I wasn't intimidated by bitchy. I had a crazy mother to scare the crap out of me far more effectively - though I knew she loved me. Underneath her robe was a thigh-high, purple satin nightshirt that was tight around her healthy, rubenesque form.\n\nMom had given me the impression that coaxing a woman along could overcome initial frigidity. I pawed her bare, upper posterior without going for her cleft, or down to her thighs - keeping it sensual instead of overtly sexual. That kept Dominique from slamming a halt to my efforts. I was going with a game plan because I had no personal experience. Right on cue, Dominique took a deep breath and let the tension go from her shoulders.\n\nI put my hand on the small of her back to hold her in place as I leaned in for a kiss.\n\n\"I'm a married woman,\" she stated firmly. I kissed her anyway, a butterfly-light affair. Her lips twitched upwards at the corner. I kissed her again, a bit stronger. Riley's slurping made a sexy counterpart to our playful interactions. Kiss three had my tongue tantalizing her lips with no response. The next one had her tongue coming out to play and the fifth one was rich, intense and left her panting.\n\n\"You are delusional if you think we are having intercourse,\" she promised.\n\n\"We'll see about that,\" I looked down on her. She didn't stop me from another French kiss and couldn't stop herself from a moan when my other hand came to rest on her stomach.\n\n\"Watch those hands,\" she defied me. Our bodies moved so that we wedged Riley's head between my crotch and Dominique's torso. That caught both women's attention and allowed me to cup Dom's left breast from beneath. \"Careful now,\" she cautioned me again, but it turned out she was warning the wrong one. On her own initiative, Riley placed a hand on Dom's thigh and moved it up, under her nightshirt and began making a twisting motion.\n\nDominique huffed, shot a violent look to Riley without verbally stopping her. Seconds later, Riley withdrew her fingers. They were covered with fluid which she sucked off while still gobbling my cock.\n\n\"Mmmm ...\" Riley giggled.\n\nI gambled that I'd hit the 'tipping point'. My hand on the small of her back walked down, steering for her cleft. My first finger pushed right, my ring finger pushed left and my middle one went right down the middle.\n\n\"Mind that finger,\" she exhaled. I was. I didn't play with her anus, going right past it and into her vagina from behind. She was honey-thick and drenched. I leaned into her, covering my finger activity with more kissing, migrating from her lips to her neck. That allowed my three fingers to start gently penetrating her vulva and searching for her 'G-spot'.\n\n\"AH!\" she yipped when I found it. Her right arm grabbed hold of my left bicep with an iron grip.\n\nShe began huffing and puffing and shivered when I felt Riley's fingers launch a return invasion. She tried to wedge another finger in while working her clit with a thumb. Next thing I knew, Dominique pulled my mouth up for another tongue-twisting kiss hungry with need.\n\n\"Highly neglected?\" I whispered to her.\n\n\"Damn right,\" she grinned. Dom took her fingers out of Riley's hair, pushed the copper-headed girl's forehead away and grabbed my sloppy wet tool. She was squeezing and stroking in equal measure. We stayed that way with finger intrusions and a hand job going on all at once. Riley feebly pushed herself up and slid off the sofa's arm, falling back on wobbly feet.\n\nI took things a step further by working my hand off her breast, down beneath the hem of her shirt and pulling it up. Dominique gave off a deep growl as she struggle to keep up with my advances. She answered my quest by shifting out of her robe and letting me pull off her shirt over her head. Pushing her on to the sofa was a given. I followed her down, went to my knees and slid right into her vagina. She was tighter than Brandy or Riley, which aided my diligent and determined efforts.\n\n\"Don't make me regret this,\" she grumbled. I pushed her left leg up and to the side so I could get easy access to her cunny. That put my weight on my arms. I was glad I worked out because I really needed that stamina now. Dominique put her hands on my shoulders, linking her fingers behind my head. We kept the kisses rolling on and on while I ramped up my action.\n\nHer pussy made an incredibly humid, sloshing noise as I drove my cock home, pumping deep into her cunt. The harder I worked, the wetter she got and the more she moaned and hummed. I had to pace myself. It had been a long damn fucking day. I didn't have to wait too long, thankfully.\n\n\"Ooooohhhh ...\" she howled. Dominique's legs trembled, her big, droopy boobs bounced and her stomach jiggled.\n\n\"Damn b - Vlad, who taught you to screw?\"\n\n\"If you want more, turn around. My lower back is killing me,\" I leered at her. She weighed over the concession versus the promised reward.\n\n\"Don't get creative back there,\" she warned.\n\n\"Oh, that will come later,\" I pledged. She shot me an evil look as she turned around, her folded arms on the back of the sofa, her butt thrust out and her back bowed for easy access.\n\nI slid back in. I was having that old sensation again - the ridges and crevices of her vaginal canal and cervix. She emoted pleasure. Her eyes shut and her head came to rest on her arms as she thrust her big ass back my way. It rippled as I penetrated her cunt. There were slight dimples over the surface of that beautiful physical feature.\n\n\"Oh - ah - oh,\" she kept murmured. She was no longer trying to keep quiet, or the pretense of being a lady. I couldn't easily reach around and play with her sway tits as tired as I was so I had a sinister insight.\n\nI motioned to Riley, who was leaning against a chair to our side. She focused on me.\n\n'Suck her breast', I mouthed. Riley shook her head. I repeated my request. Again, she refused. 'Do it, or else,' I threatened aloud. Riley caved and came my way. She fell to her knees, tilted her head and cupped Dominique's right tit. The matron's eyes remained shut. She must have thought it was me. All that changed when Riley pushed her body forward so she could take Dominique's nipple into her mouth.\n\n\"What?\" Dominique jerked. \"Riley, what do you think ...\" she looked down at her underlining. Riley hesitated so I gave a stinging slap to the slut's ass. That got her back to suckling with a vengeance. \"Vlad, don't think this makes everything okay,\" Dom gazed over her shoulder at me.\n\n\"If you really don't like it, make her stop,\" I suggested. Dominique glared at me. Riley's tongue was that damn good.\n\nI went back to my piston strokes into her pussy. Within seconds, I felt Riley's fingers working over Dominique's nub and petting my cock and balls as they plunged in. The tightness of Dominique's vagina coupled with Riley's fingernails tantalizing my shaft drove me toward the edge.\n\n\"Grrrrr...\" I snarled. Seconds later I began pumping seed into Dominique's moist womb. It didn't take long to exhaust my cum supply, or my penis to grow soft. Today had been way more fucking than I was used to, or prepared for. As I thought earlier, this was way off 'The Plan'. My eruption didn't stop Riley from working over Dom's pussy or suckling on her tit. A quarter of a minute later, Dominique gave off a squelched squeal and vibrated erotically. \n\nI fell back on my ass, exhausted, worn out and utterly spent. Riley sat back on her haunches while Dominique rolled over on her left side so she could examine us both. I imagined she was looking for sign of conceited conquest. Neither Riley nor I exhibited that delusion. We had all given our all this evening.\n\n\"Riley, get your ass to bed. Vlad, we need to talk,\" Dominique commanded with bated breathe. Two orgasms after such a stressful night had pressed her to her limit as well.\n\n\"Hold on a sec,\" I intervened. \"Riley, get to lapping.\"\n\n\"What?\" both women voiced their disbelief.\n\n\"Riley, you still owe Dominque an apology,\" I reminded them both. Riley shot Dominique a fearful look. The Black woman felt the power she held over her underling.\n\nShe scooted forward and opened her legs.\n\n\"I'm waiting,\" she glared. Riley went onto all fours and crawled between those chocolate thighs. She went to licking my cum from Dominique's snatch with gusto. I started out getting behind Riley and playing with her ass. I tested her gooey bunghole with my thumb while two fingers wiggled around her pussy.\n\n\"Don't fuck the bitch,\" Dominique commanded. \"She's had enough pleasure for one night.\"\n\n\"That's hard to do,\" I let a fey light twinkle in my eyes. \"She likes soft loving and rough sex. It ain't easy not making her happy.\"\n\n\"Riley, you really are a slut,\" Dominique ran her hands through those coppery locks. Riley nodded her head.\n\nShe also began twisting her tongue into a point and stabbing deeper into her mistress's vagina. Dominique grabbed a second handful of hair and ground Riley's face all over her cunt.\n\n\"That's it, Bitch. That's it,\" Dominique groaned.\n\n\"Like the taste of my semen?\" I asked while I raked fingers down Riley's back from neck to tailbone.\n\n\"Num - num - num - num,\" she mumbled. \"I like it a lot.\"\n\n\"What about my pussy juices, Whore?\"\n\n\"Good. You are tasty,\" Riley smiled up at Dom, her face glistening with juices.\n\n\"What are you going to tell Chinedu the next time he comes on to you?\"\n\n\"You two taste a whole lot better,\" Riley gave a feeble grin.\n\n\"Spank this slut,\" Dominique glared at me. I complied with two sharp, stinging blows to each buttocks. Riley squealed - with pleasure.\n\n\"Vlad, I am going to need you to keep this bitch in line,\" Dom demanded.\n\n\"I'm Brandy's guy ... if she chooses to dump Darius,\" I qualified.\n\n\"That's not likely to happen,\" Dom shook her head. I gave Riley's labia one last spank then sidled up to Dominique. I sat on the sofa and leaned in for a kiss. It got steamy real fast. Dominique really had been neglected, both sexually and romantically. She left one hand on Riley's head while running another hand through my hair. Gently, she guided my lips to her right tit. I suckled like a pro. The matron of the Malik clan rolled her head back and gave a deep-diaphragm moan. I began to pinch, twirl and pluck at her left tit. \n\n\"Ah, ah, ah, ah - aaaahhhhhhh,\" she exhaled loudly. Undoubtedly the couple upstairs heard that. No one seemed to care.\n\n\"Enough,\" Dominique pushed Riley back on her thick haunches. \"You too, Boy.\" I stopped sucking on her nipples while starting to stroke her stomach from pubic mount to the base of her mammary. Dominique positively purred. \"Riley, go to bed. As I said, Vlad and I need to have a chat.\"\n\nRiley staggered to her feet, wove her way to the kitchen and scampered off to the guest room.\n\n\"What am I going to do with you?\" she tried to sound strict, but came across as hedonistic with two fingers twirling my hair.\n\n\"I'm Brandy's boyfriend. This was a one time thing,\" I shrugged. \"I'm not going to darken your doorway late some night.\"\n\n\"I'm glad we've got that straight ... and before you think you are really Brandy's boyfriend, you had better take care of Darius. That buck isn't the kind to share, or give in to a boy like you.\" She meant 'White'. I doubted a Black student would have had the gall to attempt to steal Brandy away.\n\n\"I'll figure something out,\" I grinned. She snorted, got up, gathered her things and went off to bed.\n\nIn the morning, Taliyah and Mikhail woke me up. I took a towel bath, ate some cereal and the three of us went to pick up Brandy on our way to school. After all, Brandy had a decision to make if we were going to be an item. I should have been looking at the big picture instead of my own personal desires. We got sloppy and would pay for it.\n\n{Fonteneau House in the morning}\n\nAndrea Blanchard woke up with the smell of coffee assaulting her nostrils. It took her a few muddled seconds to recall what had happened to her last night. She had been drinking and talking with Gayle Samsonov and Bebe, the stable hand. She'd loosened up, talked about music, college and fantasy beach vacations. Andrea loved the Gulf Coast beaches and had spent all of her college Spring Break at one resort or another.\n\n\"What ... what ... where am I?\" she sat up, rubbed her eyes and looked around. Her ocular orbs quickly latched onto Gayle's eyes.\n\n\"Good morning, Andrea,\" she pushed a steaming cup of coffee her way. \"We all drank a bit too much last night. You fell asleep on the sofa so my husband brought you to the guest room and I undressed you and put you in one of my husband's dress shirts. It is clean.\"\n\n\"Oh God, I'm so sorry. I'm not normally ...\" she babbled.\n\n\"Don't you worry about it,\" Gayle smiled warmly ~ motherly. \"I also took the liberty of going by your place earlier and picking out some clothes for you along with your toiletries. I hope you don't mind.\"\n\n\"You went into my house?\" Andrea paled. She couldn't remember how many liquor bottles haphazardly decorated the place.\n\n\"Yes. You need a maid. Anita and I will go over today and clean it up while you are at school.\"\n\n\"You don't need to do that,\" she squeaked.\n\n\"Oh, it won't be a problem. I'm having Mr. Cobb's son change all the locks anyway. Yours are old and you never know who might have had a key before you moved in.\"\n\n\"Ah ...\" Andrea was swept up by events. Her mind was a whirl. Why was Gayle doing this for her? Why had Alexander invited her over for dinner?\n\n\"Drink up,\" Gayle urged her. \"You can come by after school and get your new keys. That will give us an excuse to have a BBQ.\"\n\n\"You don't have to ...\" she blathered on.\n\n\"Of course we don't have to, Andrea. We want to. Consider us just being neighborly,\" Gayle comforted her. \"I'll leave you to get dressed. The bathroom is down on the left. Breakfast is in twenty-five minutes if you feel like taking a shower. Good morning now,\" and she made to leave.",
        "\"Thank you,\" Andrea managed weakly. Gayle shot her one more happy look then was gone.\n\nAndrea took in her circumstances. She was in an old-fashioned, four-poster, queen-sized bed. At the foot, clothes had been laid out and there was her travel back as well. She checked herself. She was in a nice, pressed her white dress shirt half buttoned up. Her bra was gone, but she still had on her panties on. She shivered at the thought of Gayle striping her down while she was passed out. What must the lady think of her?\n\nThere was nothing she could do about it now, she decided. A shower felt like a good idea as it would help her pull her thoughts together. The water was hot and the soap was lavender. Andrea used her own shampoo. She dried off with fluffy, white terry cloth towels and hot-footed it back to her room, dressed and made it downstairs in time to gather around the table for the morning meal.\n\n\"Is there anything I can do?\" she offered.\n\n\"Not today,\" Alexander grinned. \"Mikhail should have been here to help me, but he had a late night, so I kept it simple - bacon, cantaloupe, French toast and grits. I'm still not sure what a grit is, but Kamika swears by them.\"\n\n\"I think it is corn meal,\" Andrea offered.\n\n\"It is filling,\" Mr./Deputy Samsonov spoke. He had a very deep, serene voice. She couldn't recall hearing it before. Once more she was caught up in the family atmosphere as Gustavo and Isabo got ready for school, Gayle went over the schedules of the various staff and her husband, who nodded. This time Andrea pitched in and helped Consuela wash the breakfast dishes. She even got to further brush up her Spanish skills.\n\n\"Have a good day at school, you two,\" Gayle said to her son and guest. For the first time in over a year, Andrea didn't have to take a stiff shot of vodka to start off the school day. She still was apprehensive because she didn't believe the school dynamic had changed. There would still be the looks, the knowing gleams in their eyes, thinking about what they would be doing to her later. Instead of that gauntlet, Alexander met her when she pulled into her parking space and walked her to her class. They chatted about the day's assignment as if they were nothing more than student and teacher. It felt ... hopeful.\n\nUnfortunately, Alexander had forgotten one of his Mom's initial pieces of advice - stick close to your brothers. Walking to his home room he found Darius and seven other big Black characters waiting for him. A quick look over his shoulder revealed three more had been stalking him.\n\n\"Alexander, right?\" Darius grinned. \"I wish you were Vlad, but his time will come.\" He looked to his boys. \"Get him.\"\n\nDarius had a football game and couldn't risk police action so he left the beat down to ten of his 'friends'. Was this public? Yeah - so? This was Darius' school, the Principle was clueless and the coach and Vice-Principle were in his corner. What he hadn't counted on was the fury of Alexander. He put his boys in a world of pain and because of that, his beating was far worse than Darius had originally intended. As he lay on the ground, bloody, curled up and groaning, his attackers spit on him then made their way to their classes. No one had stepped forward to help Alex.\n\n{Acceleration}\n\nBrandy was still working through as many words as she could because she was afraid to tell me she hadn't decided a damn thing about the Vlad-Brandy-Darius triangle when we drove into the school parking lot. Mikhail was darkly amused while Taliyah was pissed with her friend. Sometime in the past sixteen hours, she had done a complete three-sixty on what was best for Brandy.\n\nIn my opinion, a long-running resentment of Darius had boiled to the surface. Darius had chosen Brandy, not her. Then, he had degraded her childhood friend, and the Cheer Squad, into property - cum dumpsters. Until the arrival of me and my brothers, voicing her discontent was worst then pointless. I was counterproductive to her precarious social status. Now ... now she had options.\n\n\"Trouble,\" Mikhail muttered to me. I had been distracted by Brandy's blubbering and excuses so I had missed the plethora of lookouts waiting for us. This was bad news. I had to get out so that Mikhail could exit the car too. Brandy was followed by Taliyah on the other side. I gave Alexander a quick call to warn him of the situation. It took him several rings to respond.\n\n\"Brother,\" he mumbled. \"Got my ass kicked outside of Ms. Blanchard's room. I think I'm ... busted up.\" He sounded really bad.\n\n\"We are on our way,\" I told him.\n\n\"Be careful. Darius is out to finish us off,\" he warned me through clenched teeth.\n\nI weighed my response. I decided to call Mom then 9-1-1. Mom gave me an odd directive, which made sense in retrospect.\n\nSo I began with, \"Brandy, you and Taliyah need to distance yourself from us. Darius had jumped Alexander so we can expect the same treatment,\" and they knew it was a command. \"Mikhail, let's go.\" By the reaction of our school mates, they either knew what was going on, or knew something unknown had gone wrong. It wasn't like the whole school was wired to hate us. They weren't. The important people did and that was all that mattered to most of them.\n\n\"Vlad?\" Brandy gulped.\n\n\"Vlad, I've got this,\" Taliyah said. \"Brandy, let's take a long walk around the parking lot while the men take care of business.\"\n\n\"Vlad?\" Brandy repeated. \"You don't have to do this. Go home.\"\n\n\"Alexander is inside. We can't leave him there and they know that. They are planning on it.\"\n\n\"Bye,\" she said in a small voice. Clearly she believed I was done for. Mikhail and I made a bee-line for Ms. Blanchard's room. Before we got inside, I had Mikhail surreptitiously give me his wallet. As we expected, Darius had put a wall of Black between us and our brother. We kept up our forward progress, took our beatings as we shoved our way through and kept our mouths shut. I imagine Darius was hoping for a grand melee where he could surround us and beat us up. Maybe he hoped we'd start whaling away.\n\nHe had no clue how cold and emotion-free the Samsonovs will could be. As violently inclined as Mikhail was, he loved us much, much more. Getting bogged down in a pointless brawl wouldn't do Alexander any good. We had to get to him before Darius' crowd came around for a second beating. When we got to him, Kaelyne and Victoria were kneeling beside him, dabbing his cuts with wet Kleenex. \n\n\"How bad do I look?\" Alexander tried to laugh. His sides were in too much pain. From experience with brutal wounds, I suspected that he had cracked, or broken ribs. He certainly had collected numerous bruises and cuts.\n\n\"Kaelyne -Vicky - you need to get out of here,\" I stated. \"They will be coming for anyone who hangs out with us next. I can't protect you right now.\"\n\n\"I'm not afraid anymore,\" Kaelyne protested. I had already decided that Vicky was somewhat unhinged. Kaelyne should have known better.\n\n\"You should be. They might very well rape you two. Darius is certain that he is bulletproof.\"\n\nI knelt beside my brother and deftly switched his wallet with Mikhail's. \n\nThat was our new tactic. Alexander had made inroads with Ms. Blanchard and Mom didn't want to toss her back to the wolves, so one of us had to stick close to her - had to pretend to be Alexander. I had to stay near Brandy so that left our youngest twin. Just as important, we were not to utter one threat, one promise of vengeance, or even an overt display that we had been deeply wounded.\n\nTo Mikhail and I, that meant justice was coming down the pipeline in a big way. Mom wasn't an 'eye for an eye' type of woman. You plucked out her eye, or the eye of someone she loved, she would cut off your damn head. Until that moment, Darius had been an obstacle to Mom's desires, just a player we had to remove to enact her greater plan. A healthy dose of humility was our goal.\n\nShe hadn't planned to destroy him. Alexander's beating changed that in her ... and us - his triplet brothers. In a way, we Samsonovs had been operating under the delusion that there were still some rules both sides had to cleave to. Darius had clarified that for us. Paraphrasing an old movie, he had sent one of us to the hospital, so we were sending someone(s) to the morgue.\n\nWe weren't going to murder anyone. That was an extreme that Mikhail and I wouldn't go for. In a way, what Mom wanted was much worse ~ she wanted to make an object lesson out of our chief tormentor. In our current dilemma, all we could do was stick by our sides until our parents and EMT's arrived. Mom and Dad made it first. Mom had waited in the parking lot for him because she didn't want to go into \"kill the first jackass who threatened her\" mode, she was that mad.\n\nDad was an island of calm. A few of Darius' hardest characters tried to harass him to no avail. He knew how to move through a crowd without overtly manhandling them. When they tried, those few were confronted with his in depth expertise and indomitable strength. The disrespect they showed Mom was even worse. How she managed not to murder anyone was a mystery to me.\n\nI should have known better. Every man who retarded their progress, or touched her, she took their picture as she gave them a cruel, heartless smile. The smart ones realized they had just pissed off a borderline psychotic. Most of them simply saw her as a bigoted old White chick.\n\nAround Alexander's body, Dad made the student body give them space. He didn't ask Alexander what had happened. At the moment he wasn't my Father. He was Senior Deputy Sheriff Nikolay Samsonov and the site of his son's beating was a crime scene. My paternal parent wasn't without sympathy. He was a believer in law and order. Being our Father meant he had a conflict of interest when seeking justice for us, so he waited for the closest deputy to arrive. \n\nThe EMT's arrived the same time our Principal did (no one had bothered to clue him on the incident earlier). He started to disperse the students. Dad stopped him. Some of these people were witnesses. Two other deputies arrived - neither one current enemies. Big Bob showed up as they rolled Alexander - now Mikhail - out. He had Dad escort mom to the hospital. The Sheriff would be by to take Mikhail's statement later.\n\nWe finally were dispersed to our 1st period, having missed homeroom. Mikhail and I detoured to Ms. Blanchard's class first. A few of the 'fellas' had stopped by to tell her about Alexander's demise. We came by to rectify any misconceptions. Nothing had changed. 'Alexander' would be showing up and escorting her home as planned.\n\n\"But you are not Alexander,\" she whined. \"He's been ... because of me.\"\n\n\"That doesn't matter,\" Mikhail rumbled. \"Alexander told them the shit stops here and that hasn't changed.\"\n\n\"They won't stop coming,\" she shook her head.\n\n\"Leave that to us,\" I assured her.\n\n\"Now there are only two of you,\" she reminded us.\n\nMikhail laughed.\n\n\"You've got it wrong. Now there are three of us and Mom is far more vicious than Alexander could ever be.\"\n\n\"They put her oldest boy in the hospital,\" I added. \"That was a mistake whose depth they can't even begin to comprehend. Trust us.\"\n\n\"Okay,\" she said in a fearful voice.\n\nGetting to our classes was eased by us being late. My teacher declared me 'tardy' despite my protestations that my brother had just been taken to the hospital. A few of my Black classmates snickered over that. 'Alexander' was given a 'pass' by his far more understanding teacher. That teacher was one of the 'haters', but Mikhail figured that hospitalizing one of us had gone way overboard in that man's eyes.\n\nThat wasn't the only sign that things had changed. Darius and his crowd were prepping for the next attack. The rest of the school ... they sensed something terrible was on the horizon. Our lack of response was a warning sign all its own. We weren't cringing, blustering, or glowering. Vicky said we were the 'eye of the storm' and wanted in on whatever vengeance we had planned.\n\nWe told her we didn't have one. At lunch, Taliyah was torn up at first because she thought that Darius and Rashaan had Alexander beaten up over her. They'd even taunted her about it between classes, warning that worse was in store for her and Brandy at lunch. Those two women had gotten a measure of revenge by changing the location of the Cheer Squads 'lunch meeting'/gangbang, then forgotten to inform the football team of the change of venue.\n\nDarius came looking shortly after the fact. The other eight members of the Cheer Squad looked perplexed. Had Brandy not humiliated him (by dissing his BBC), he might have not decided to assume the whole group was in on this policy of denial.\n\n\"Brandy, get your ass over here,\" Darius seethed.\n\n\"Taliyah, you had best correct yourself,\" Rashaan added. A few other players who pretended they were BF/GF with a cheerleader added to the commotion.\n\n\"No,\" I stood up and confronted him. He was looking for something more. 'Alexander' took up a position on the far side of the cheerleaders. People were clearing out the space between the football team and us.\n\n\"Brandy,\" Darius stressed his authority. She was wavering. Fortunately for us, Taliyah was not.\n\n\"Back off you Mother-fucker,\" she screamed. \n\n\"Taliyah?\" Rashaan mumbled.\n\n\"You really want to be on their side?\" Darius' eyes narrowed.\n\n\"I want to kick you and your fellow cowards' asses,\" she seethed. Darius shot Rashaan a mocking glance, shaming him. His 'woman' was getting mouthy.\n\n\"Taliyah,\" Rashaan asserted himself. \"You are asking for a world of trouble.\"\n\n\"What?\" she spat back. \"How many bruthas are you going to bring when you try to shut me up ... cause I know you aren't man enough to do it yourself.\"\n\n\"Bitch,\" he stepped forward. I tried to move to her - Darius interposed himself. Mikhail had three guys on his flank so any move he made would put him in a nest of trouble.\n\nRashaan grabbed her arm. My past twenty-four hours around that girl taught me that was a mistake. I didn't know if Rashaan was slower than Mikhail, or just caught off guard. Her slap resonated across the cafeteria. Before he could respond, she put a knee into his crotch, doubling him over. Multiply guys winced at the power of that nutting. Rashaan hissed like a punctured balloon and slowly slumped to the ground.\n\nDarius decided that was the indicator for the final showdown and settling of accounts. Kaelyne kicking a chair into his path was unexpected by both of us. Darius was far quicker on his feet than Rashaan. He was able to jump back before he could get clipped. The mob was so dependent on Darius for leadership that they froze up when his charge was truncated. Kaelyne had saved a whole lot of people a whole lot of pain.\n\n\"I'm done with you,\" Taliyah sneered. \"If you had wanted to be a real man, you would have fought Mikhail one on one, not like a pack of chicken shit jocks.\" There was another hush and a 'no she didn't'.\n\n\"Brandy, get the fuck over here,\" Darius glowered.\n\n\"I'm ... I'm with Taliyah,\" her voice wavered. \"What you did was wrong. I thought you would be more of a man about this.\"\n\n\"You'll pay for that,\" he promised.\n\n\"Shut up. You are done. Brandy is with me now,\" I challenged him. \"I once offered you the opportunity to settle this like a man. You declined and now the whole school sees you for what you really are - a big, Black narcissist who doesn't care about anyone, but yourself.\"\n\nThere was a third pause in the murmuring.\n\n\"I don't think the football team knows what a narcissist is?\" Kaelyne said in a low voice. Brandy let out a hysterical giggle.\n\n\"Samsonov!\" the coach bellowed from across the room.\n\n\"Which one of us?\" 'Alexander' shot back.\n\n\"Both of you,\" he growled.\n\n\"No,\" we said in unison. \n\n\"What?\" he blustered. We were screwed no matter what we did.\n\n\"I need them to move some things in my class,\" Ms. Blanchard spoke up from behind him. Alexander - the real Alexander - would have been so proud.\n\n\"Get some other boys,\" Coach spun on her. She began to wilt.\n\n\"Coach Thomas,\" a voice behind Ms. Blanchard emoted softly, \"you are getting on my last damn nerve.\"\n\n\"This ain't your school, Fonteneau,\" he turned on Mom.\n\n\"My boy says you were one of the people that beat him up. I'm here to let the Principal know. On a personal level, I'm suing you and the school for what happened.\"\n\n\"I didn't do nothing,\" he groused.\n\n\"Funny, the only one who claims to have witnessed my son's beating is my son,\" she purred like a Mamma Tiger stalking her prey. \"I may be a Samsonov now, but I still have all that Fonteneau fortune to fight that court battle with. One more mishap for my other two boys, I'm going to have the best law firm in Little Rock crawl so far up your rectum that they know what you are going to eat before you bite into it.\"\n\n\"I'm not afraid of you,\" he puffed himself up.\n\n\"Really? None of these cases will take place in Davis County, Tobias (the coach). The previous school principal assaulted me, I have three sworn complaints against the Kingston PD filed with the Arkansas State Police, and a lawsuit pending against this school and the school board. A change of jurisdiction is a given. I'll be dragging you down to Little Rock to settle this mess.\"\n\n\"You are lying,\" he gulped.\n\n\"Test me,\" Mom sizzled. I still couldn't see her over the crowd, but I knew those steely eyes were boring thru his soul. He might not have been guilty of beating up Alexander yet he was guilty of so much more that he was already rotten to the core. Everyone knew he had given his tacit approval for the beating of a student theoretically under his care.\n\nAs an educator, he was sworn to better the lives of his charges, not use them for his own aggrandizement. No matter how entitled he felt he was, he knew the outside world wouldn't see it that way. Worse, he knew, deep down, he could have done so much better for his students. Sportsmanship, grades and fraternity were all his to dispense. Instead ...\n\n\"Darius,\" Coach Thomas called out. \"You and I need to have a chat.\"\n\nDarius turned his back on me and walked over to the Coach. Undoubtedly they were going to have a planning session. Alexander's fall had turned out to be a mixed blessing. Now the Sheriff's department had their eye on the place. Big Bob himself was chatting with the Principal and was inviting the man over for dinner. Big Bob was getting involved. It would take a few weeks before it became 'race-based harassment.\n\n\"Vlad,\" Brandy hugged my left arm tightly. \"Prince, how bad is this going to be?\"\n\nThat was unlooked for by multiple people. Two linemen retrieved Rashaan before the team made their departure.\n\n\"Brandy, take care of the Cheer Squad. If the team gets their hands on them, there is going to be some serious suffering. I'll be okay,\" I smiled down at her.\n\nTaliyah gave me a thumbs-up before joining with Brandy. Mikhail told me later that she gave him a wink. After all, she knew that it was Alexander in the hospital, not her 'man' yet she had played her outrage so well. I'd almost been convinced. I was sure she'd made an impression on Rashaan ... and Darius. They rounded up the Cheer Squad and the arguments and accusations began. The majority of their squad-mates didn't mind being BBC cum-sluts. That Taliyah and Brandy had broken the spell was seemingly impossible for them to grasp.\n\nAs it turned out, with Taliyah giving Brandy some spine, Brandy was able to work her charismatic magic on the others to make them agree to a new program. Lunch 'workouts' were a thing of the past, as were after-scrimmage play times. From this point forward, the girls would be driving themselves to and from away-games - no more communal bus rides. To stress their point, Taliyah only had to point at Mikhail/Alexander's beating to show them how out of hand things had gotten.",
        "Darius' opening offensive had backfired in more than one way. I was sure he only saw this rebellion as a temporary thing he could soon correct. After all, he had blackmail material, his dominant mystique and his super-impressive BBC that would bring any woman to heel. His only concern was how much hell to put Brandy through before he disposed of her in one colossal gang-bang then dumping her mind-broken slut body on Big Bob's stoop. It was the 'asshole' thing to do.\n\nThe rest of the day was still torturous. I developed several bruises and scrapes. Darius was still going with his full-court press to wear us down to the point we lashed out ~ suddenly there would be dozens of witnesses to our infraction. To add to our problems, Kaelyne also became a target of their aggression. I was as surprised as anyone when I learned she had been sent to the Vice Principal's office.\n\nSome muttonhead had grabbed her tit in the hallway between classes. She stabbed him in the face with a metal mechanical pencil while screaming 'rape' at the top of her lungs. This was not the 'Bad Ole Days'. Big Bob was keeping his eyes on the place and Principal Jean-Georges wasn't that 'Fat Old Bastard'. The 'assailant' had six inches and a hundred pounds on Kaelyne so the idea that she randomly attacked him was ludicrous.\n\nFrom what I heard, Big Bob was in a downright arctic mood too. Only later did Mom tell me she'd shown him the video of that first night at the lake ... bukkake Brandy, Clarence getting some, and the general degradation handed out. Big Bob turned out to be NOTHING like my Dad. Mom had to hold him back from going all 'redneck' on Darius and his crew. What did she offer?\n\nRevenge ... at the hands of the Samsonov's. Dad could never find out. Big Bob was okay with that - bending the law to the point of breaking, covering up a crime and inventing evidence as needed to make sure that the crime would go unsolved - all those evils were absolved by the wickedness visited upon his daughter. Even then Mom had to promise an epic ass-whooping to keep him in line. 'How soon?' he had asked. Mom asked him if 'Alexander', Taliyah, Brandy and I could spend the night at his place Friday night after the game.\n\n\"No problem,\" he grinned savagely.\n\nThat afternoon we had to set some of Ms. Blanchard's students straight about how the wrong Samsonov had been beaten up and how Ms. Blanchard had a permanent escort to and from school for the foreseeable future. I had to admit, beating the crap out of the five of them felt good. Mikhail was positively euphoric. Big Bob had a reliable deputy hanging around the football team after school so that the Cheer Squad could go and come unmolested.\n\nFriday was more of the same - running the gauntlet between classes, dealing with collateral damage - Kaelyne was beaten up by some Black girls in the restroom - Vicky got more of the same when she tried to rescue her - and general crap at lunch. After lunch we were expecting a last, major push - some effort to remove us from the picture before the football game, leaving Brandy and Taliyah vulnerable far from home.\n\nIt didn't work out that way. As lunch ended, the Brothers Samsonov, Kaelyne, (Vicky simply cut class) and the cheerleaders were all requested in the Principal's office. From there we were handed off to my Mom's tender loving care. See, she'd rented two luxurious vans for the team to be taken to the game, but we had to leave early to pick them up. Darius had fucked with the wrong Samsonov alright. Mom was a freaking psychic, or a satanic prophet.\n\nThe game was the standard beat down. We won 30-14. Dad, currently off-duty, helped Mom shepherd the now horny cheerleaders off the field after the final play. I caught Darius glaring hate my way. He was counting on our inevitable defeat. What happened instead was indeed inevitable. Rattlesnakes that bit Mom, died. Killer whales turned away out of common courtesy shown to apex predators. Ten minutes alone in a room with my Mom had hardcore 'Lifers' calling their Mommas begging forgiveness ... and I was assured that Theo was even scarier.\n\nAfter the game, we drove all the cheerleaders home, deposited the vans at our house, then Brandy, Taliyah, Mikhail and us went over to Big Bob's house. The girls grew sleepy, so Taliyah called her mother and told her she was spending the night at Brandy's. She didn't mention us being there. It was okay. The girls and Big Bob nodded off soon enough. Ground up sleeping pills in their drinks will do that.\n\nAt nine o'clock, I woke up Big Bob from his recliner and suggested he go to bed. After he left, I erased the pre-recorded TiVo he'd unwittingly been watching, changed the clocks back to the real time - midnight - and then joined Mikhail on floor of Brandy's bedroom.\n\n\"Did you cut Big Bob's phone back on?\" he asked. With the scope of the disaster we had enacted, he was bound to be called in.\n\n\"Yeah. Alibi established,\" I yawned.\n\nMy post-combat adrenaline rush was still keeping me awake. Twenty-three minutes later, Big Bob knocked on the door before coming in.\n\n\"Daddy?\" Brandy rose up on her elbow and rubbed her eyes.\n\n\"Just checking up on you,\" he scanned the room. \"Taliyah - boys ...\"\n\n\"Is there a problem?\" Brandy pouted.\n\n\"It seems there was a big fight at school and some boys got really hurt,\" he shot Mikhail and I a curious look. \n\n\"Sorry we missed it,\" Mikhail snorted.\n\n\"Vladimir, step outside and talk to me a second,\" Big Bob motioned. I complied. It seemed prudent at the time. Once in the hall, he shut the door.\n\n\"This didn't have anything to do with you, or your brother, did it?\"\n\n\"What happened when?\" I tilted my head. Big Bob chuckled.\n\n\"Roughly nine o'clock tonight,\" he grinned.\n\n\"As I recall, I went downstairs for a soda around nine, saw you asleep in your chair and suggested you go to bed,\" I kept a straight face.\n\n\"I would have helped,\" he whispered.\n\n\"With what, Sir?\" I wondered. He looked at me steadily. Dad would have known something was up - seeking the truth was in his genetics. Big Bob ... was as a diligent public servant who wove the delicate balance between law & order versus what was best for the public welfare. He just nodded, gave another chuckle then left.\n\nOver breakfast the next morning, Big Bob gave us the 411 on what had happened. Between nine o'clock and nine-ten last night, Darius and six other football players had been drinking in the parking lot after the bus ride back to school when two (maybe three) armed and armored assailants ambushed them. The attackers had been wielding big sticks/staves and proceeded to beat the seven students into unconsciousness.\n\nDarius had gotten the worst of it. Both of his knees were shattered. He was already being transferred from Davis Memorial Hospital to the one attached to the University of Arkansas Sports Medicine program. Even with that, the doctor at the hospital worried that the young athlete would ever walk again, much less run. Any hope of a career in football was gone. Even if he made a full recovery, it would take years. By that time ... a college scholarship followed by some time in the NFL was a distant, impossible dream.\n\nMy brother and I were immediate suspects except we had three witnesses to say we were otherwise occupied. The key one was Sheriff Big Bob Carson's himself. He recalled the time as well as what was on TV when I woke him up.\n\nWho else could it have been? Darius and the rest of Davis High's football team had spent all last season and the start of this season building up a huge roster of teams who hated their guts. Enough to hurt them? Darius' buddies had sidelined a fair number of student-athletes in their time. It could be drug related too. Darius' big brother was a known local drug figure.\n\nA peculiar aspect of the crime was that the security cameras around the crime scene had been knocked out with an air rifle while we were all at the game out of town - I had no idea that Kaelyne was that good a shot. There was no video evidence of the crime and, unless you believed in a massive conspiracy, it pretty much cleared the Samsonov's (Dad had been with us at the game and 'Mikhail' had been in the hospital ~ where people unknown/Darius had put him).\n\nMom's alibi didn't start until she was seen by my Dad around 9:45 that night. She'd gone to visit 'Mikhail' at the hospital (he would be coming home this morning) then gone for a walk on the property. The Kingston PD had launched a raid on the house despite the crime not happening in their jurisdiction. They did illegally cross into county land, yet didn't find any incriminating evidence. Phineas Cobb III had taken care of that for her.\n\nA five person (me, Mikhail, Mom, Kaelyne and Mr. Cobb) conspiracy had given Darius far more retribution than he could have possibly considered. Mom had insisted that we destroy his legs, thus ending his most potent weapon in the BBC arsenal - his status as a sports star. His dominant shadow would no longer cast itself on the halls of our school.\n\nHad he not put Alexander in the hospital ...\n\nBut he did. Threatening my brother's life had cost him his future. The most insidious part of Mom's plan was that whatever the Black community of Kingston thought, they would never be sure it was the Samsonov's behind it. We had never verbally threatened anybody over what happened to 'Mikhail/Alexander'.\n\nTo believe we did it was to accept we had some sort of serious grievance. We did. Everyone knew we did yet they had denied the crime when it happened and were now trapped in that denial. In the investigation of the beating, the name 'Darius' had never come up. In fact, 'Mikhail/Alexander' hadn't named anyone, not even the coach. Mom had bluffed about that.\n\nPublically, if we had any issues to work out, it would have been with the coach and he was just fine - not a scratch on him.\n\nNone of that stopped the Kingston PD from stepping up the pressure on the Samsonovs. It didn't stop the Mayor from calling in the State Police to take over the investigation. We weren't sure on what grounds it was being requested. After all, her talk with me about Darius had happened under circumstances she definitely didn't want to make public. Dad wasn't part of either investigation. Big Bob being our alibi didn't automatically exclude him.\n\nThe outside investigators came by Bob's on Sunday to talk with him about it and he'd agreed on a concurrent investigation. The biggest question for the men (women actually) from Little Rock was why did anyone think it was 'Alexander' and I. What was our motive? Brandy had dumped Darius to be with me, so why would I want to punish him over that fact? Brandy hadn't been publically, or privately, threatened by him.\n\n'Alexander' and I? We Samsonov boys were good kids, making good grades with no recorded history of violence of any kind, neither in Arkansas, or Alaska. I hadn't liked Darius, but that hardly made me, or 'Alexander', unique. Most of the White student body hated his guts - after the fact. The showdown last Thursday? The only one who committed violence was the mayor's daughter on her former boyfriend ... who wasn't among those hospitalized.\n\nRashaan had been saved punishment because his teammates so shamed on the bus ride back to Davis H.S. he'd left early. Had he been wise, he would have thanked Taliyah for that accident of fate. On the plus side for that cocksucker, he was now the head of the football team as well as its star player.\n\nThe two showdowns in Ms. Blanchard's class? Those students would have to explain why it had happened, thus what they had been up to over the past few years. That was sexual assault, rape and blackmail and taking that wrap to avenge Darius wasn't in them. The beating up of the kids around Shaquille? Precisely what had those seven been up to jumping our basketball teammate anyway? \n\nThe carnage on the basketball court? That would imply one of the player confessing to stomping on Kaja. Both the team and the Assistant Coach were opposed to that exposure. No, it was the very erosion of trust that infected the BBC culture. Darius had gone from the Crown Prince to a 'what might have been' overnight. His former cronies felt zero loyalty to him anymore. Darius Pope had lost his luster. He was yesterday's news in the high school halls.\n\nAt this point in the inquiry had the Kingston elders admitted to the outsiders Darius was a scumbag, abusing women and men for his own selfish ends - a blackmailer and bully - the investigation might have gained traction. But they didn't. He was their flawless native son - utterly without fault. That led the investigation away from us. It turned out that other teams DID have a motive for hurting the football team in general, not just Darius. The coach had to admit to that - there was video evidence of his team's barbaric behavior.\n\nThe whole team were bastards on the field - half a dozen opposing coaches claimed as much and were vocally happy that such misfortune had befallen the evildoers of Davis High - karmic payback for their unsportsmanlike behavior. Did they know who the two (or three) 'agents of karma' had been? No idea. By that time, we had other worries. When the weekend was over it would be time to return to school - for all five of us.\n\n{Not like any other Monday}\n\nMonday, school life was adrift in the chaos left by Darius' abrupt departure. There was no clear successor, yet there were several contenders eager for the spot. None of them were White, but considering the school's racial makeup, it wasn't too surprising. There was also a sullen resentment against us, tempered by fear. It didn't take a first place winner at a school science fair for the students to figure out what had really happened.\n\nDarius had put Alexander/Mikhail in the hospital and now he and six of his closest confederates were in various states of serious disrepair. Everyone knew that Darius wasn't going to be carrying any footballs this season, or maybe ever again. He had crossed the unspoken line between harassment and serious damage. Sure, the Black student body had participated in those punches, pokes and slurs.\n\nPunishing 'Mikhail' had initially appeared to be justified ~ I had purloined Brandy and had gotten what I deserved for daring to dare. It had never occurred to anyone the meaner dogs in the fight weren't Darius Pope and his boys. Clearly, Darius had raised the level of 'acceptable' violence and they had blindly accepted his choice.\n\nMonday morning, Darius was no longer among them and the whole school society was experiencing 'continental drift'. Even teachers were uncertain what to make of us. Only Ms. Blanchard looked openly relieved that today was no longer more of the same. We found that out right before we had another school communion under the tutelage of Principal Dr. Pierre O'Rourke Jean-Georges.\n\nIt was another exposition of what was wrong with this world and how he could fix it. The African-American Male Stereotype (aka the Football Team) had begotten violence from the entrenched White Establishment (even though there were no suspects, white or black, charged in the incident) in a never-ending cycle of brutality and suffering. The world would soon see the advent of the Brown Man ending the tyranny of White European cultural imperialism; not thru conflict, but thru the colored people's inherent spiritual superiority. Huh?\n\n\"I think we po' White folk done been insulted,\" Vicky whispered to our small group. She had spunk. She was also Kaelyne's best friend, which would be of more importance later today.\n\n\"Why doesn't he rail against patriarchal tyranny?\" Kaelyne added.\n\n\"Because he's a man?\" I offered.\n\n\"Exactly,\" she hissed.\n\n\"If there is so much White tyranny going on,\" Alexander coughed, \"why am I in so much pain?\"\n\n\"Because you don't know how to dodge, you knucklehead,\" Mikhail smirked. Dr. Pierre let his imperious gaze fall upon us, so we quieted. The rest was more of the same. We were idiots for solving problems with our fists and dicks ... blah, blah, blah. What were we supposed to be? Men with pussies? The Student Body was left largely in the dark about our fates, though it did take him an hour to lead us there.\n\nShaquille was at our lunch table once more, as was his girlfriend, Monique, and our teammate Kaja. That was comforting in more ways than one. Whatever had happened, they weren't ashamed, or afraid, to be seen with us. They didn't ask, so we didn't have to lie. We talked about upcoming tests, basketball practice and perhaps doing something this weekend. It was almost as if we were living in the 'new' normal.\n\nA few cheerleaders slipped away from Brandy and Taliyah that day. It wasn't like the BBC had lost its magic. Addicts remained addicts, that cock was too good to pass up and once a girl had the taste ... they couldn't turn it down when offered. Mom's answer was a fuck-fest ... which was an idea we three boys balked at. That was when Mom had her first glimpse that Mikhail had a problem of the heart.\n\nOnly after she had pulled me aside for a chat/interrogation did she realize her own stupid mistake. Yes, Mom confessed to making an error in judgement. She'd realized that Taliyah was wild-spirited while not taking into consideration was exactly the type of woman my brother needed. That is what she said - 'needed'. That was so scary that I contemplated going behind Mom's back to warn Mikhail - almost.\n\nI had been a good boy Friday night and criminal goings on had kept us apart Saturday and Sunday, so by Monday, Brandy was about to bust a gut. Taliyah had her own bonfire burning behind her eyes, even while she exhibited more self-control. Kaelyne and Vicky staying after school, trying to weasel in a ride, was a bit unlooked for.\n\n\"I thought we could hang out together,\" Kaelyne beamed. Vicky was not-so secretly amused. I repeat; she and Kaelyne were BEST friends.\n\n\"NO!\" snapped Brandy. Everyone was looking at her. \"I mean, we really need to do some studying. Really bad ...\"\n\n\"I can help,\" Kaelyne refused to be dissuaded. \n\n\"Not with this, you can't,\" I muttered to myself. But I couldn't come up with a viable excuse to deny her, considering her rallying to our cause last week. \"Sure,\" I said in a louder voice. Brandy shot me a desperate visual appeal. \n\n\"Taliyah, are you and Brandy still planning to spend the night to help us with that project?\" Mikhail intervened.\n\n\"Well ... maybe,\" Taliyah smirked. \"Brandy?\"\n\n\"Hell yes,\" she glared at Kaelyne.\n\n\"Then we are all agreed,\" Kaelyne grinned. Off we went, packed in like sardines. Alexander had gone home with Ms. Blanchard. That still left us with Brandy, Taliyah, Kaja, Mikhail, Kaelyne, Vicky and me in a four person Shelby Mustang. \n\nI dropped Kaja off first, as always. The trip home was more suspenseful than eventful. Victoria was unashamedly upbeat while Kaelyne was terribly high-strung. How she could miss the romantic situation between Brandy and I was a mystery. Only after homework, when we were getting ready for our workout and Mom got home, did any of it make sense. Instead of appearing as the majesty she normally projected to outsiders, she sneaked up on us all. She really was the Wicked Witch of the Ozarks! She must have been standing there for five minutes before she made her presence known by noisily clearing her throat.\n\n\"Brandy,\" Mom stated with authority.\n\n\"Yes Ma'am,\" she meekly responded.\n\n\"It is good to see you today. You too, Ms. Malik. Kaelyne and Victoria, it is nice to see you coming over as well. I hope my sons are making you feel welcome.\"\n\n\"Hello,\" Victoria and Kaelyne chorused. Taliyah settled for a wave.\n\n\"Kaelyne,\" Mom nodded, \"why don't you come with me and get some drink for the company?\"\n\n\"Me?\"\n\n\"Unless you know of another girl in the county named Kaelyne?\" Mom mused.",
        "Brandy was relieved she wasn't the one being led away. She was still jittery.\n\n\"She doesn't look all that scary,\" Vicky said in a low voice.\n\n\"Wait until she threatens you with physical violence,\" Taliyah snorted.\n\n\"My Mom says she's psychotic. She cracked up years ago, along with her twin brother, Thomas, and they had to leave town,\" Victoria informed us.\n\n\"It is Theo,\" Alexander corrected her. \"Her brother is called Theo, and from what I've been told, it was Kingston that drove her out.\"\n\n\"What happened?\" she pressed.\n\n\"Their Uncle Theo put my Uncle Leon into a coma he hasn't woken up from,\" Taliyah grumbled. \"This whole family is nuts.\"\n\n\"You will pay for that,\" Mikhail leered.\n\n\"Hardly,\" she leered right back.\n\n\"Am I missing something?\" Vicky looked to Alexander.\n\n\"He's always picks on her and she always slaps him,\" Alexander shrugged. \"Make of that what you will.\"\n\n\"Don't you have some place you need to be, geek?\" Taliyah menaced Victoria.\n\n\"No. Homework is done and I don't normally eat dinner until eight,\" she answered blithely.\n\n\"Alexander, why don't you drive Vicky and Kaelyne home?\" Brandy asked.\n\n\"Because he's convalescing,\" Mikhail chortled.\n\n{Meanwhile, in the kitchen}\n\n\"So,\" Mom said, \"how long have you known you are a lesbian?\"\n\n\"Wha - what?\" Kaelyne stammered. \"I'm not ...\"\n\n\"Me and my family don't mind, Kaelyne,\" Mom smiled. \"We aren't going to 'out' you, or going to stop liking you. I asked a simple question and expect an honest answer. Homosexuality is fine; lying is a deadly sin.\"\n\n\"Ummm ... aahh ... a while.\"\n\n\"See, that wasn't so hard. You like Taliyah, don't you?\"\n\n\"I ... uh ... what makes ... I ...\"\n\n\"Kaelyne, I trust you implicitly and would never steer you wrong. If you want to get close to Taliyah, all you need to do is ask Vlad. He likes you and considers you a friend,\" Mom explained. \"He's not going to hold asking him against you.\"\n\n\"What about Mikhail? Aren't they ...\"\n\n\"Since you don't seem to have figured it out yet, let me tell you - Mikhail is difficult and not terribly helpful in matters of the heart,\" Gayle chucked. \"Vlad is the reasonable one, Taliyah likes him and he can use Brandy as a buffer.\"\n\n\"What about what Taliyah wants?\" Kaelyne protested.\n\n\"Do you care?\"\n\n\"Yes ... yes, I want her to be happy.\"\n\n\"Good for you. I'm glad you've befriended my boys. That's a very brave thing to do and I appreciate it.\"\n\n\"You are welcome.\"\n\n\"So, ask him,\" Mom finished getting out enough bottled water for the group of us.\n\n\"I don't want to put Vlad in a bind,\" Kaelyne protested.\n\n\"Listen Kaelyne, losers moan about what they should have done. Winners risk and, win or lose, don't regret trying,\" Mom lectured. \"Do you want to graduate and leave this burgh wondering what might have been?\"\n\n\"I ... what happens if ... it could be a disaster,\" Kaelyne mumbled.\n\n\"You may not have a better chance than right now. Pull Vlad aside and open up to him. I guarantee things won't be any worse.\"\n\n\"Okay. I'll think about it,\" Kaelyne moped.\n\n\"Fair enough,\" Mom shrugged. \"With all this estrogen in the air - I feel like getting naked.\"\n\n\"What?\" Kaelyne gasped. Yep, Dad was in for a busy night. They came back in silence. \n\n{Outside once more}\n\nThe rest of the workout went as planned. We finished with a wrestling bout between Mikhail and me. Taliyah and Brandy cheered me on so Vicky decided to speak up for my younger brother. I won two out of three falls after some serious effort only to have Alexander critique our efforts after the fact. Mom had come and gone. Kaelyne was pensive.\n\n\"Shower time,\" Mikhail groaned. \n\n\"Finally,\" Brandy sounded exasperated.\n\n\"Vlad, can I talk to you for a moment?\" Kaelyne mumbled. Brandy stomped her foot in frustration when I complied.\n\n\"Yes?\" I said after I'd pulled her aside.\n\n\"You and Brandy are ...\"\n\n\"What? Having sex?\" I suggested.\n\n\"In love,\" she looked down at her feet.\n\n\"Why would you want to know?\"\n\n\"No reason,\" she lied.\n\n\"We are into one another, not making wedding plans,\" I patted Kaelyne on the shoulder. \"It is sex. I'd like to think it is good sex. Is there a problem? Is his about us - you and me?\" She shook her head. \"I really like you,\" I continued, \"I don't want to think I've been leading you along.\"\n\n\"That's not it,\" she whispered.\n\n\"What is it then?\"\n\n\"I like Taliyah,\" she blurted out. The fear of humiliation in her eyes was palatable to me.\n\n\"Like as in you would like to spend time with her - like?\" I asked. She remained staring at me - terribly hopeless. \"Oh ... you really like her. Oh, okay. Do you want to me to ask her how she feels about you?\"\n\n\"I ... I don't know,\" she wailed. \"The school isn't exactly 'gay-friendly'.\"\n\n\"Do you believe that I'm your friend?\"\n\n\"Yes.\"\n\n\"Then don't worry. I've got this covered,\" I assured her. Kaelyne took a deep breath, slowly let it out then hugged me. I could feel Brandy's lust-fueled anger being sent Kaelyne's way. I gave my buddy a comforting pat on the back.\n\n\"Brandy, can I talk to you a moment?\" I said as I walked over to her. She was very uncertain and confused, so I kissed her. She burned me up with her full-body press in response.\n\n\"What is it?\" she worried.\n\n\"You make me so happy. I don't think I tell you that enough.\"\n\nI could feel Brandy's body relaxing against mine.\n\n\"Are you worried about me and Kaelyne?\" I prodded.\n\n\"No,\" she fibbed. The whole turmoil with Darius was a fresh, raw wound on her psyche.\n\n\"Good, because she's not interested in me at all. We are only friends - more like buddies,\" I confided in my girl.\n\n\"Ah ... okay,\" she hugged me. \"Is she interested in Alexander?\" Brandy probably didn't want Taliyah to have any problems with Mikhail.\n\n\"No, it is nothing like that. There is a little issue though.\"\n\n\"Yes?\" she leaned up and looked deep into my eyes.\n\n\"She is interested in Taliyah,\" I kissed her on the nose. Brandy blinked.\n\n\"As in 'girl-girl' interested in her?\" she pondered. \"Vlad - Prince, I don't think she's like that ... unless you want me to ask her to be,\" she conceded. I spanked her ass in retaliation.\n\n\"I'm not like that, Brandy. I'm not playing mind games with you. I want you to be happy. I think that you are a wonderful woman and Kaelyne is a wonderful friend. That is the end of that implication. I would like you to talk with her. Be open and honest - with her and yourself.\"\n\n\"So you don't want me to trick Taliyah into sleeping with her?\" she was back to being confused.\n\n\"That shouldn't be necessary,\" I kissed her again. \"I like you. I like Kaelyne. Kaelyne likes you and I want the four of us work it out so that no one ends up with a broken heart. I trust you to do what you think is best for you and to also know I'll back you in whatever you choose.\"\n\n\"Okay,\" she smiled back. \"I'll talk with her.\"\n\n\"I'll go take a shower then we can go up to the cabin. We'll take motorcycles this time. It is faster,\" I teased her.\n\n\"I'd rather take a shower with you,\" she wiggled her hips against me then, \"Does your mother want to see me now?\"\n\n\"Not anymore, Brandy. You and Darius are done so she's done with whatever she put you through to be with me. Now the only Samsonov you have to worry about pleasing is me.\"\n\n\"I like pleasing you,\" her look became sultry and alluring.\n\n\"Which is why I'm going to take a quick shower and be right back down,\" I patted her ass as I broke our mutual grapple.\n\nMikhail and Taliyah hadn't been all lovey-dovey, so he had a big head start. I left Vicky and Taliyah in an awkward staring match while Brandy contemplated a fear-stricken Kaelyn. I reminded myself that Brandy could be compassionate when she wanted to ... and if she hurt Kaelyne, I'd take it out on her ass. That wasn't much of a punishment, but it made me happy to think about.\n\n*****\n\nYes, dear reader. This is where this chapter ends. I'm a cliffhanging bastard and I know it. I pray nightly to the Muses to not let the flames of creativity die out. Pray with me, if you will."
    ],
    "authorname": "FinalStand",
    "tags": [
        "interracial",
        "mature",
        "high school",
        "cunnilingus",
        "anal",
        "rough",
        "bbw",
        "revenge",
        "blowjob",
        "ass-to-mouth"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/wmd-ch-03"
}