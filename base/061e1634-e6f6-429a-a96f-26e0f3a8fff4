{
    "title": "Curveball",
    "pages": [
        "\"Sorry. Do you mind if I squeeze in here?\" he asked.\n\n\"Oh, no,\" she replied scooting over to make room. \"I've never seen this many people at a Little League game before, have you?\"\n\n\"No. But this actually the first time I've watched one in years so I really don't have anything to compare it to,\" he told her.\n\n\"Is your son playing?\" she asked, sure he was old enough to have a son that age.\n\nThe man sort of raised his eyebrows then said, \"No. I...I was just driving by and decided to stop and watch. I used to love baseball. In fact, I pretty much lived for it until high school.\"\n\n\"Did you get tired of playing or something?\" she asked before hollering, \"Come on, Teddy! Strike him out!\"\n\n\"No, not really,\" he told her. \"I was a pitcher and my elbow started hurting my junior year, but the real reason was discovering how much more I liked girls than baseball.\"\n\nThe girl, or maybe young woman sitting next to him, laughed in an understanding way.\n\n\"Ah. I see. So girls were your downfall, huh?\" she said in a humorous way.\n\n\"It was...an equitable trade,\" the older man said with a faint smile. \"As much as I loved playing baseball, I found that I liked girls a whole lot more.\"\n\n\"And you couldn't do both?\" she asked still being very nice.\n\n\"I tend to be a bit obsessive about the things I like. Baseballs, girls, work, exercise. When I commit to something I kind of go hog wild.\"\n\n\"Strike three!\" the umpire called loudly.\n\n\"Atta boy, Teddy! Keep mowin' 'em down!\" she yelled.\n\nHe wasn't sure how old the girl next to him was, but he was very sure she couldn't possibly be the mother of a Little Leaguer. These boys (and two girls) looked be around 10 or 12 although he wasn't sure about that, either. Regardless, it seemed very unlikely she could have even a ten-year old child.\n\n\"I take it you know the pitcher,\" he said not wanting to ask if she could somehow be his mother.\n\n\"Yeah, that's my little brother, Teddy,\" she told him.\n\n\"He's got a smooth motion and a pretty good fastball,\" the man told her.\n\n\"I guess in at least one sense, my brother is like you used to be. He lives for baseball. In fact, it's about the only thing he enjoys these days.\"\n\nThe man squinted and looked at the boy on the mound and could tell he was fairly overweight as he once was, and he also was pretty sure the boy's teeth protruded the way his once had.\n\nHe noticed the girl was glaring at the kids on the other team's bench. They were chanting something, but he couldn't make out what they were saying. It sounded like 'huck, huck, huck,' or maybe 'yuck' but he couldn't quite understand.\n\n\"Kids can be so cruel,\" he heard her say. \"I can't understand why their coach let's them get away with that.\"\n\n\"What are they saying?\" he asked.\n\n\"They're making fun of my brother because of his teeth. They're calling him 'buck' for bucked teeth, and it kills me because he's so sensitive about it now,\" she said still glaring at the other team. \"There's no way we can afford braces, but if I could, I'd get them for him tomorrow.\"\n\n\"Then he and I have something else in common. My teeth were even worse when I was his age,\" he told her. \"I was nicknamed 'Bucky Beaver' from elementary school on and got razzed about it pretty much every day until the start of my senior year.\"\n\nShe turned and looked at him then said, \"Your teeth are perfect. You had to have had braces.\"\n\n\"I did. I wore them for two years,\" he told her. \"I was also um...pretty heavy...and I took a lot of ribbing for that, too. You know. Fatty, fatty, two by four and a whole lot worse.\"\n\nShe looked at him again then said, \"That's really hard to believe. I mean, you're well...you're a very nice-looking man who doesn't seem to have an ounce of fat anywhere.\"\n\n\"Oh, thanks,\" he said modestly. \"I owe a lot to my my parents, my orthodontist, and a wrestling coach who took a personal interest in me. I guess I owe the Navy the rest of the credit.\"\n\nHis comment about the Navy went right past her.\n\n\"I wish I knew what to do for Teddy,\" the girl said. \"It just breaks my heart to see him hurting like this. He's such a nice kid, but the teasing is relentless. This was the one place where he could come and forget about it, and now we're getting this...crap...here, too. It just makes me so...angry.\"\n\n\"I take it your parents aren't here?\" he asked.\n\n\"Um...no,\" she said quietly. \"They were both killed in a drunk-driving accident last year.\"\n\n\"I'm so sorry,\" the man said with utter sincerity. \"I really am.\"\n\n\"Thank you. I'm handling it okay now, but Teddy is still really struggling with it and then this...mess...gets piled on top of it. It's just so unfair, you know?\"\n\n\"Would you save my place?\" he asked politely.\n\n\"You gotta use the restroom already?\" she teased.\n\n\"I'll be right back,\" he said after smiling at her comment.\n\nLloyd Mullens was 43, and although that might seem ancient to a girl her age, he wasn't old enough to need to take Flo Max or anything like it. Still, it made him chuckle to think he was old enough for someone to even joke about it. She was obviously teasing, and that was fine, but more importantly she'd made him laugh, and he honestly couldn't remember the last time he had. \n\nThe girl wasn't model-beautiful, but she was very cute with a lean, lithe body and short, dark hair, with the brightest blue eyes he could ever remember seeing. Adding to her appeal she seemed like a genuinely pleasant person. If she was raising her little brother on her own she was also more than likely very responsible, as well. The fact that she could maintain a sense of humor through the tragedy of losing her parents on top of all that was one more huge plus in her favor.\n\nHe stood up then slowly walked around the back of the bleachers then made his way to the other side of the field. He opened the metal gate then walked right into the other team's dugout and stood next to their coach.\n\n\"Can I help you with something, buddy?\" the younger man said with a heavy dose of attitude when he saw Mullens standing next to him.\n\n\"Yes, you could. I'd like to ask you to tell your players not to pick on the other team's pitcher for something he can't help.\"\n\n\"If you don't get the hell out of my dugout on your own, you're going to need help getting out,\" the coach hissed.\n\nLloyd ignored the threat then said just as calmly, \"I'm asking you nicely, coach. It's okay to pick on something he can control, but his teeth aren't one of them. So please ask your kids to stop, okay?\"\n\nThe coach, who looked to be around 30 or so, and who was rather well built, turned toward the visitor who was a couple of inches taller and obviously quite a few years older than him, but at least equally well built if not more so. \n\nHe put his finger in Lloyd's chest and began pushing as he spat, \"Are you fucking hard of hearing, asshole?\"\n\n\"Please don't swear around these kids,\" Lloyd said quietly and calmly.\n\n\"And what are you gonna fucking do it about it, asshole? Huh? That little buck-toothed-fat fuck out there pitching for the other team needs to toughen up. It's snowflakes like you trying to coddle him that are chickifying this country I spent four years in the Army protecting\u2014something pissants like you wouldn't understand!\"\n\n\"The Army? I see. That explains a lot. I only spent a few years in the Navy so....\"\n\n\"Oh, okay. A fucking squid. That fits. Too afraid to join the real military, huh?\" the coach spat.\n\nTeddy's sister was watching intently, and along with everyone else, heard every word the coach said as it gradually grew quieter by the second. Her body tensed up when the coach pulled his finger back and went to jab Lloyd in the chest. \n\nAs he did he said, \"So squid boy\u2014take a hike!\"\n\n\"Um, I'm also asking you nicely not to touch me again, okay?\" Lloyd said with utter calm.\n\n\"You are one dumbass squid. Get lost, shit for brains!\" the coach said as he drew his hand back to jab Lloyd in the chest again.\n\nBefore she could figure out what was going on, the coach's hand went from Lloyd's chest down to his side, and his face was screwed up in sheer agony.\n\nIt looked like his hand was pinned against leg, but if it was she couldn't see how as Lloyd appeared to be standing there doing nothing. \n\nIn fact, the coach's wrist was indeed being held in place and bent back to the point where it was very close to breaking, and Lloyd was doing the holding. \n\nHe held it there and said very quietly, \"Don't cry out like a little girl or I'll break it. Nod if you understand.\"\n\nThe coach nodded 2-3 times quickly and kept quiet.\n\n\"Very good. Now tell your kids to stop calling him names. Please.\"\n\nThe coach had never been in that kind of pain before in his life, and although he wanted to say or do something else, all he did was grit his teeth and holler out, \"Okay. Knock off the comments about their pitcher.\"\n\nEvery eye in the dugout was now on them, but even the kids sitting right next to them couldn't tell what was going on or figure out why their coach looked like he was about to cry.\n\n\"Thank you,\" Lloyd said. \"And please don't let me hear you use profanity around these kids again, okay?\"\n\nHe waited until the coach nodded then said, \"Give me your word.\"\n\n\"Okay! Okay!\" he said as Lloyd increased the pressure ever so slightly.\n\n\"Well, that was easy,\" he said with a smile. \"Thank you for doing the right thing, and you have yourself a nice day\u2014coach.\"\n\nHe released the pressure, tipped his hat to the younger man, smiled, then walked away.\n\nAs Lloyd did so, the coach stood there massaging his wrist which was obviously still in pain as he stared at the man who'd just humiliated him in public although no one else really knew what had happened. The other side of the field erupted in applause as Lloyd made his way back to where he'd been sitting. He didn't acknowledge the clapping or even look at anyone as he took his seat.\n\n\"What in the world did you just do?\" the boy's sister asked, her eyes opened wide in disbelief.\n\n\"I politely asked him to stop the name calling, but he needed a little...persuasion,\" he told her calmly.\n\n\"That guy is the biggest....\" she leaned in close then said quietly, \"dick...in this entire league. No one can stand him. I don't know what you just did, but thank you.\"\n\n\"My pleasure,\" he replied. \"We all need a little help now then, right?\"\n\nNeither of them spoke for several minutes then Lloyd leaned over and said, \"You know, your brother is doing really well, but if he could throw a curveball, no one could touch him.\"\n\n\"And if bullfrogs had wings....\" she said with a smile. \"I don't know much about baseball and I certainly can't teach him anything like that. If I could, I'd be happy to show him how, but....\"\n\n\"I could have him throwing curve balls for strikes in half an hour,\" he told her. \n\nIt was obvious to her he wasn't bragging, he was just making a statement of fact.\n\n\"Would you...do that?\" she asked not sure if he was really serious.\n\n\"Sure. I'd be happy to,\" he told her.\n\n\"I know Teddy would love to learn how to throw a curveball. There's one other Little League pitcher who's a year older who can, and Teddy thinks he walks on water. If he could do that, too....\"\n\n\"It's not that hard. Really. I learned how in just a few minutes, and the next game I pitched, I threw a no-hitter.\" \n\nThat too, was just a statement of fact.\n\nLloyd smiled as he remembered one kid after another chopping at the first curve balls any of them had ever seen and striking out one after the other. Seventeen out the 18 opposing batters struck out while one lucky player had weakly grounded a ball to short. Since then a pitch count had been instituted, and no one Teddy's age could throw more than 75 in one day. It was still hypothetically possible to throw a complete game if the pitcher threw four or less balls to each batter during the six-inning game, but that was a very tough thing to do.\n\n\"I'd give anything to see my brother's face after something like that. He's such a sweet boy and he's smart, too. He does really well in school, but this bullying and teasing stuff is killing him there, and it's affecting him here now, too. So if you would do that for him, I'd be very grateful.\"\n\n\"I will. Just let me know when and where,\" Lloyd told her.\n\nShe sat there for a few seconds then looked back over at him and said, \"Listen. Um...well, since I don't know how else to pay you back for what you just did, we all...I mean, some of us parents or whatever....we go out for pizza after the game with the kids. You probably don't want to hang out with a bunch of kids or with me...but I'd be happy to buy you a slice.\"\n\nThe look on her face and the tone of her voice told him she was genuinely thankful, and Lloyd was touched by her kindness and generosity as well as her obvious level of maturity. He had nowhere to go and nothing to do and thought it might be kind of nice to be around other people for a change. After all, he'd stopped to watch as a way to try and begin reintegrating himself back into society so...why not?\n\n\"I like kids so that's not the issue,\" he told her. \n\nHe smiled at her then said, \"I'm just wondering if an attractive young woman your age wants to hang out with a guy who, you know, has to run to the restroom all the time.\"\n\nThe girl laughed loudly and apologized for her previous comment. \n\n\"I was totally kidding. You know that, right?\" she said.\n\n\"I was pretty sure,\" he told her. \"But I am getting up there in years so....\"\n\nThe girl laughed again then said, \"I'm Shelby, by the way. Shelby Claypool.\" \n\nShe offered him her hand so he shook it and replied, \"Lloyd Mullens.\"\n\n\"Nice to meet you, Lloyd,\" she said as she shook his hand firmly.\n\nShe was smiling happily then glanced down and saw a wedding ring. \n\n\"Oh, I um...I didn't know you were married. I wasn't, you know, flirting or asking you out or anything. I just wanted to....\"\n\nLloyd laughed politely then told her, \"I knew exactly what you meant, Shelby. Besides, no cute girl your age is gonna flirt or ask a guy my age out on a date so...no problem.\"\n\nShelby sighed loudly then said, \"It has nothing to do with age. The truth is I don't ask anyone out.\"\n\nShe paused for a moment then said, \"Or...get asked out for that matter. I'm not complaining, mind you. I just don't have time to date. It's hard enough just finding the time to get to Teddy's games let alone have any kind of meaningful relationship.\"\n\nShe smiled at him then said, \"Maybe someday, right?\"\n\n\"He's lucky to have a sister who cares about him so much,\" Lloyd told her.\n\n\"Yeah, I really do love that kid. I'd do anything to take away his pain,\" she said forlornly. \n\nNeither of them said much the rest of the game, but Lloyd found himself cheering for Teddy and his team and each time he struck a batter out, he and Shelby gave each other a high five. \n\nWhen it ended, the score was 4-1 with Teddy's team, the Lions, winning the game. The only run the other team scored was after a walk and then two errors in a row. Teddy only gave up two hits during the five innings he pitched and only walked two batters.\n\n\"I'll just wait here, okay?\" Lloyd said when Shelby went to collect her brother.\n\n\"Nice game, stud muffin!\" she said offering him a high five.\n\nHe returned it but didn't say anything. He did hug her back when she put her arm around him, and Lloyd heard someone call out, \"Look at the little mama's boy!\" \n\nShelby shot the kid a dirty look but didn't address the comment. Instead she told him she had someone she wanted him to meet.\n\n\"Who is it?\" he asked as she led toward a rather large man in a ball cap sitting in the bleachers.\n\n\"Teddy? This is my new friend, Mr. Mullens. Lloyd, this is my brother, Teddy.\"\n\nLloyd offered his hand and Teddy shook it but didn't look at him.\n\n\"Is he your boyfriend or something?\" the boy asked looking up as his sister.\n\n\"What? No! He's just a nice man who's going to go have pizza with us\u2014if that's okay,\" she said her arm around his shoulders.\n\n\"I guess,\" Teddy replied.\n\nShelby leaned down then said, \"Lloyd used to be a pitcher, and he wants to show you how to throw a curve.\"\n\nSuddenly the boy's eyes lit up, and he looked at the man now standing in front of him and said, \"For reals?\"\n\nLloyd smiled but didn't laugh as he said, \"Yep. For reals.\"\n\n\"Cool!\" Teddy said smiling for the first time revealing a set of protruding teeth that reminded Lloyd of his when he was that age. \n\nHis parents hadn't had much money, and he'd put up with an ungodly amount of teasing for as long as he could remember. And like Teddy, he'd been more than a few pounds overweight. And also just like the boy standing in front of him, Lloyd had been a decent pitcher and a very good student, his two redeeming graces. The connection he felt was both strong and immediate.\n\n\"So I guess I'll just follow you then?\" Lloyd suggested.\n\n\"Sounds good. I've got the little blue car right over there,\" she said pointing to a Ford Fiesta that looked like it might have been blue in the distant past.\n\n\"Okay. I'm in the black truck over there,\" he said pointing to a 2016 Toyota Tundra with a V8 engine and four-wheel drive he'd rarely driven until retiring from the Navy two months ago.\n\nTeddy looked over and saw the rig with tinted windows and the extended cab and said, \"That is so beast! Can I ride with Mr. Mullens, Shell? Please???\"\n\n\"It's okay with me,\" Lloyd said as he saw the boy forget about his teeth and smile happily again.\n\n\"Oh, I don't know,\" she said. \"I mean, I do know him, but I don't really....know him, know him.\"\n\n\"I understand. I wouldn't let my son ride with a stranger, either,\" Lloyd said as Teddy's smile disappeared. \"But...I could give you both a ride.\"\n\n\"Can we? Can we, Shell? His truck is so cool!\"\n\nShe looked over at her own car then said, \"I don't suppose anyone is going to try and steal that piece of junk.\"\n\nShe turned to Lloyd and said, \"Well, if you really don't mind...I guess we could do that.\"\n\nTeddy immediately hollered, \"Shotgun!\" causing the adults to laugh.\n\nLloyd opened the passenger doors then helped Shelby step up\u2014way up\u2014into the back but let Teddy pull himself into the front leather seats.\n\n\"Awesome!\" he said as he checked out the entire cab while Lloyd walked around.\n\n\"I've had it for almost two years now but don't even have 5,000 miles on it,\" he said as he started it up.\n\n\"Gee, I drive that much in 2-3 months,\" Shelby said. \n\n\"Do you just sit home all day and let your wife take care of you?\" she teased politely.\n\nShe was smiling happily as she said it so Lloyd smiled back. He didn't feel like explaining why that wasn't case.\n\n\"Naw. I just retired from the military and I was gone quite a bit,\" he told her instead. \"Now I'm just trying to figure out what I want to do when I grow up.\"\n\nShelby laughed politely while Teddy got even more excited.\n\n\"Cool! What were you in? Did you drive a tank or fly jets or anything?\" Teddy asked as he fastened his seat belt.\n\n\"No, nothing that cool,\" Lloyd told him. \"I was in the Navy and I was an enlisted guy so no jets. But I did ride on a lot of helicopters. Does that count?\"\n\n\"You did?\" the boy said no in awe of the man sitting next to him.\n\n\"Yes, I did. I even parachuted out of a few planes but never flew one.\"\n\nAs they pulled out of the parking lot Teddy asked, \"Have you every seen the movie Navy SEALS?\"\n\n\"I have,\" Lloyd told him. What he didn't say was that he'd been a Navy SEAL for 25 years and that the movie was hard to watch because it was so far from the truth in too many areas. It was great for anyone who didn't know how a SEAL team functioned, but it was too nothing but cheap entertainment for anyone who did.\n\n\"That movie was awesome! It was better than Predator or any Terminator movie or Top Gun or....\"\n\n\"Teddy's watched pretty much every action movie ever made\u2014several times,\" Shelby explained.",
        "\"Oh. My kind of guy,\" Lloyd said pulling Teddy's ball cap down over his eyes.\n\nHe laughed, pulled it back up, then continued listing movies he'd seen for a full minute before Shelby finally stopped him.\n\nHe took a breath then asked Lloyd, \"Who do you like better? Arnold Schwarzenegger, Jean-Claude Van Damme or Sylvester Stallone?\"\n\n\"I'm kind of a Jason Bourne fan myself,\" Lloyd told him.\n\n\"He's okay. I'm just old school, I guess,\" Teddy said seriously drawing a quiet chuckle from the adults.\n\n\"He can be very precocious at times,\" Shelby warned.\n\n\"What else do you like to do besides play baseball and watch action flicks?\" Lloyd asked.\n\n\"Flicks?\" Teddy asked having never heard the term.\n\n\"Movies,\" Lloyd explained. \"Your sister tells me you're pretty good in school.\"\n\n\"Oh. I guess,\" he said without excitement.\n\n\"How about video games?\" the older man asked hoping to restore the enthusiasm.\n\n\"I love video games, but my PS3 died,\" Teddy said. \"But Shelby's gonna get me a new one for my birthday, right, Shell?\"\n\nLloyd saw the look on her face when she answered.\n\n\"IF we have the money, remember?\" she told him. \n\n\"I know,\" he said with resignation.\n\nTeddy turned around and said, \"It's not a big deal.\"\n\nShelby put her hand on the back of his head and said, \"He's so understanding about that kind of thing.\"\n\n\"Can I get two slices of pizza today?\" he asked.\n\nLloyd saw her looking in her purse before she said, \"Um...sure. I'm not the least bit hungry so that's no problem.\"\n\nLloyd rightly assumed she had just enough for two slices and was putting her brother's wants ahead of her needs but didn't say anything.\n\n\"I'm starving!\" Teddy said.\n\n\"It's just up ahead on your right,\" Shelby said as the big red pizza sign came into view.\n\n\"What kind are you gonna get?\" he asked Lloyd.\n\n\"Oh...whatever. I'm not choosy,\" he told him. \"I'll have whatever you have.\"\n\n\"I like sausage and pepperoni,\" Teddy told him the excitement back in his voice. \"Oh, and I love Canadian bacon. And ground beef and....\"\n\nTeddy got very quiet then pointed at the rearview mirror and said, \"Hey, that's a Trident just like the Navy SEALs wear.\"\n\nLloyd had attached a Trident that had belonged to his best friend who'd been killed in Iraq back in 2004 to the man's dog tags he'd handed Lloyd as he held him in his arms while the man bled to death waiting for a medevac helicopter. When he retired, it was one of the things he didn't have packed up but carried with him. He'd hung them on the mirror and kept forgetting to remove them after he found a place to live.\n\n\"Oh, right. Yeah, it sure is,\" he said as he lifted the chain and handed it to Teddy.\n\n\"This is so cool! Shell, look!\" he said showing her the Trident.\n\n\"Wow. That is cool,\" she said.\n\n\"Are these your dog tags?\" he asked just as excitedly.\n\n\"Um, no. Those belonged to a friend of mine,\" he said.\n\n\"Doesn't he have to wear these?\" Teddy asked innocently.\n\n\"Um...not anymore, Teddy,\" Lloyd said again not wanting to talk about specifics.\n\nHe glanced back at Shelby who still hadn't put two and two together, but he could see she was working on it.\n\n\"Okay, buddy. Let Mr. Mullens have his dog tags back now, okay?\"\n\n\"Okay,\" he said dejectedly as he handed them back.\n\n\"Tell you what. I don't need mine anymore. How would you like to have them?\" Lloyd asked as he parked the Tundra.\n\n\"Serious?\" Teddy asked.\n\n\"Yep,\" he answered as he pulled off his cap and removed them. He'd worn them since he got out of boot camp over 25 years ago. He had a spare set, but it didn't really matter since he decided then and there he'd never wear them again. He'd loved the Navy and being a part of a SEAL team, but they were, for the most part, the reason he no longer had a wife, and it was high time to put the past behind him. Or at least try.\n\n\"Here you go,\" Lloyd said putting them in the boys hand.\n\n\"What do you say, Teddy?\" Shelby reminded him.\n\n\"Sorry. Thank you, Mr. Mullens! This is so cool! I can't wait to show Connor!\"\n\n\"His best friend,\" Shelby explained. \n\nWhen Lloyd came around to help her out she quietly said, \"His only friend, actually.\"\n\n\"Something else he and I have in common,\" Lloyd thought to himself as he opened Teddy's door. He'd had one and only one friend growing up\u2014the second most unattractive kid in school.\n\n\"You might have to parachute out of there,\" he told the boy.\n\n\"No problem!\" he said as he made a show of jumping to the ground as though he really was parachuting.\n\n\"Nice landing!\" Lloyd told him. \"Okay, let's go eat!\"\n\nA couple of other kids from his team were in line, and neither of them spoke to Teddy. One of the parents told him, \"Nice game, Teddy. You looked really good out there today.\"\n\n\"Thank you,\" he said quietly. \n\nThe man nodded at Lloyd then leaned over and said, \"I've wanted to do what you did to that punk coach for months. Whatever you did\u2014thank you.\"\n\nMullens nodded back and said, \"Oh. Um...sure thing.\"\n\nTeddy was ordering his two slices when Lloyd said, \"You know what? Let's just get a large, okay?\"\n\n\"Really?\" Teddy said with genuine surprise.\n\nShelby started to protest but Mullens placed the order before she could say anything. \n\nHe also paid for drinks and when Teddy ran to fill his cup, Shelby said, \"I can't afford to pay you for half a pizza, Lloyd.\"\n\n\"No one's asking you to,\" he told her politely. \"It's my treat.\"\n\n\"I thought I was repaying you for your kindness. Are you trying to bury me in even more debt? Because if you are, I already have enough to last for a lifetime,\" she told him.\n\n\"Nope. Not at all. I just wanted to do something nice for a little boy who reminds of myself.\"\n\nHe leaned down then said quietly, \"Then again, I had both of my parents so even though we were dirt poor it wasn't anywhere near the same as what he's dealing with.\"\n\n\"Do you have kids?\" she asked as they filled their cups.\n\n\"No. No kids,\" he told her.\n\n\"I'd like to have children someday. Of course it would be a whole lot easier if I could ever meet someone I could fall in love with first,\" she said with a pleasant smile. \"Maybe one day I'll win the lottery and not have to work two jobs.\"\n\n\"You're pretty amazing, Shelby,\" Lloyd told her sincerely.\n\n\"We do what we have to do, right?\" she said her smile not nearly so bright.\n\n\"Unfortunately, not everyone does,\" he told her. \"But from what I've seen you're a very pleasant exception to the rule.\"\n\n\"It's either this or the state takes my brother and puts him into foster care, and that is never going to happen,\" she told him.\n\n\"Over here, you guys!\" Teddy called out from the table he'd sat down at.\n\nLloyd asked Teddy about the video games he liked and before they got very far they heard, \"Large meat lovers pizza for Teddy.\"\n\n\"Can I go get it?\" he asked excitedly.\n\nLloyd looked at Shelby who nodded, and told him, \"Yeah, sure.\"\n\n\"I haven't seen him smile this many times since our parents were killed. I think he likes you,\" she told Mullens.\n\n\"The uh, the feeling is mutual,\" he told her. \n\nMullens had spent 15 of his 25 years on active duty deployed and four of his last five away from home. Since the death of his wife, all he'd wanted to do was work, and SEAL teams had no shortage of opportunities to deploy for months at a time. \n\nIt was ironic in a way because it was being gone so much that caused his late wife's depression, while it was the love he felt for his fellow team members that kept him volunteering for more and more assignments. He really did go 'whole hog' on pretty much everything. \n\nThe one exception had been his marriage, and when he'd been informed she'd taken her own life with an overdose of prescription pain killers, he'd never stopped blaming himself. He was in the middle of another lengthy deployment to Afghanistan when he got the word, and he'd hurriedly gone home for ten days to bury her, apologize to her parents who'd barely spoken to him, then returned to his team to finish out the deployment. \n\nLloyd Mullens felt almost estranged from society by the time he retired and knew if he didn't find a way to relearn his place in it, he might well end up like his wife. The Navy was no longer there to bury himself in, and he knew that no civilian job could even come close to what he'd had as a SEAL. So for now he was unemployed and floundering around trying to find himself in a world he barely recognized.\n\n\"Here you go!\" Teddy said as he slid the pan on the table. \"Go ahead, Shell. Ladies first!\"\n\n\"Why thank you, kind sir!\" she told him. She was actually famished, and just the smell made her salivate with anticipation of a first bite.\n\n\"Who says chivalry is dead, right?\" Lloyd said. He could see Teddy didn't understand so he explained the meaning of the word.\n\n\"I'd love to have a suit of armor!\" he said gleaning only something about knights from Lloyd's explanation.\n\n\"Okay, you grab a slice now, kiddo,\" Shelby told him once she had one on her plate.\n\nTeddy took a huge bite and as he chewed he asked, \"When can you teach me how to throw a curveball?\"\n\n\"Well, you should rest your arm for a couple of days, but after that we can give it a whirl.\"\n\n\"Ahhh! Do I have to wait?\" he asked, his mouth stuffed with pizza.\n\n\"Chew with your mouth closed, okay, buddy?\" Shelby asked politely.\n\nEven then Teddy made loud smacking sounds as he chewed, and Lloyd knew he took had to take a lot of flak for that, too.\n\n\"So what do you do now that you're retired from the Navy, Lloyd?\" Shelby asked.\n\n\"Um...a whole lot of nothing,\" he told her.\n\n\"Does your wife work?\" she asked. Again it was an honest, innocently-asked question.\n\n\"She um...she passed away a few years ago,\" he finally told her.\n\nShelby had just taken a small bite and stopped chewing. She nearly coughed the pizza in her mouth into a napkin before saying, \"I am so, so sorry. I...I didn't know.\"\n\n\"It's okay. You couldn't possibly have known,\" he told her. \n\n\"Life is so fragile,\" she said quietly as Teddy happily munched away picking off pieces of meat and eating them first.\n\n\"Yes, it is,\" Lloyd said in agreement.\n\n\"It's amazing how suddenly your whole world can be turned upside, you know?\" Shelby said.\n\nThinking about it was still too painful. Mullens had never once cried or even allowed himself to grieve. He'd even managed to mostly block out the guilt he knew would overwhelm him were he to ever let it get to him. He'd had the leadership traits seared into his brain from day one of BUDS training to became a Navy SEAL and the first principle was, \"Seek responsibility and take responsibility for your own actions and the actions of your men.\"\n\nHe knew he wasn't literally responsible for Katie's death. She'd taken the pills. And yet he knew she'd needed him there with her at home, and still he willingly chose to be away from her month after month, year after year. So no, he hadn't killed her, but he'd 'put the gun in her hands' as it were.\n\n\"Hey? You okay?\" Shelby asked.\n\n\"Sorry. I guess my mind was drifting.\"\n\n\"I asked you if you were going to eat.\" She smiled then said, \"Twice.\"\n\n\"Sorry. You see, I tend to get lost deep in thought rather easily,\" he told her. \n\nHe looked right at her then said with a straight face, \"That's not hard to do when you've got a mind as shallow as mine.\"\n\nShelby laughed immediately then said, \"I've never heard that one before.\"\n\n\"Oh, I'm full of one-liners,\" he told her.\n\nHe leaned over then said, \"That's not all I've been told I'm full of.\"\n\nShe jabbed him with her elbow as she laughed again then said, \"Get outta here!\"\n\n\"Are we leaving already?\" Teddy asked as he looked up, his mouth still stuffed with pizza causing another round of laughter.\n\nLloyd glanced at Shelby who just kept laughing before she said, \"I can't remember the last time I laughed this much or even laughed since...you know.\"\n\nShe smiled at Lloyd then said, \"We may just need to keep you around.\"\n\nHe smiled back and told her, \"I can think of worse things.\"\n\nThen he said with a straight face, \"Not many but I can think of a couple things worse than that.\"\n\nShelby feigned being hurt as she gasped and pulled her head back and gave him a look with wide eyes.\n\n\"Actually, I can't remember the last time I enjoyed myself this much, either,\" he told her sincerely.\n\n\"Yeah. It's really nice,\" she said before taking another bite.\n\nThey sat there and talked for nearly an hour before Lloyd took them back to the field.\n\n\"Looks like your chariot is still there in one piece,\" he quipped.\n\n\"Gee, lucky me,\" she quipped back.\n\n\"Shelby's car sounds like a machine gun,\" Teddy announced before making his version of machine-gun sounds.\n\n\"It's needs a new muffler,\" she said. \"Among other things.\"\n\n\"I'm pretty good with cars,\" Lloyd told her. \"I'd be happy to take a look at it for you.\"\n\n\"That's okay. I already owe you big time,\" she said with a smile. \"Thank you for offering, though.\"\n\n\"No. I'm serious,\" he told her. \"As you know, I have no job and time is the one thing I've got plenty of so I'd be happy to help out.\"\n\n\"Okay, but it's not like I have a spare car sitting around, and I need that hunk of junk to get to work,\" she told him as he parked next to the 'blue bomber'.\n\n\"What a coincidence,\" Lloyd said as he turned around to look at her. \"I just happen to have a vehicle you could use while I work on yours.\"\n\n\"Oh, no. I'm not taking this truck. This thing costs more than everything I own put together,\" she told him as they got out.\n\n\"No, I really do have a smaller car. It's a 2010 Toyota Corolla.\"\n\nHe paused then said, \"It was my wife's car, and I couldn't bring myself to sell it. It just sits in the garage, so you're more than welcome to use it.\"\n\n\"That's very kind of you, Lloyd, but I can't even afford to buy the muffler let alone the other stuff it needs, so....\"\n\n\"That's fine. I can do a lot of stuff that won't cost you a dime,\" he told her. \"It'll run better and you won't owe me anything.\"\n\n\"I...I don't know,\" she said. \"It's very kind of you, I just don't feel right about that.\"\n\n\"Look at this way,\" he told her. \"You'd be doing me a favor, too. I don't exactly have any friends here yet or even a sense of community, so you'd be helping me as much as I'd be helping you.\"\n\nShe opened Teddy's door and once he was inside she said, \"You're quite the enigma, Lloyd Mullens. I've been trying to figure you out since you put the human dick with feet in his place.\"\n\nLloyd smiled and that made Shelby chuckle.\n\n\"Are you sure you don't mind? Really?\" she asked with obvious concern.\n\n\"I am one-hundred percent certain I don't mind,\" he replied.\n\n\"I'm painfully aware this bucket of bolts needs a lot of work, and I do depend on it, so anything you could do would be very much appreciated,\" she finally told him.\n\n\"Then it's a done deal! Just follow me back to my place, and I'll give you the Corolla. I'll start working on your jalopy tomorrow morning.\"\n\nShelby stood there looking at him and felt a lump in her throat. She wanted to thank him but couldn't speak. When she felt herself tearing up she turned away hoping Lloyd hadn't seen.\n\n\"We all need a little help now and then,\" he told her again quietly. \n\nShe turned around and when she looked up at him a tear fell down her cheek. \n\nLloyd reached out and gently wiped it away before saying, \"You seem to have sprung a leak, lady. You should get that checked.\"\n\nShelby nearly choked as she laughed then said quietly enough so Teddy wouldn't hear her, \"Asshole!\"\n\n\"At your service,\" Lloyd said bowing slightly. \"Come on. Follow me and we'll get you all set up.\"\n\nIt was the middle of May and the weather was still cool and cloudy in the Seattle area or more specifically the area about 30 miles south of the city. It even started sprinkling on the drive to Lloyd's, and he couldn't help but Shelby didn't turn on her wipers. After she pulled into the driveway of his modest home in the small town of Sumner, Washington, he found out that's because they didn't work, either.\n\n\"As loud as the muffler is it won't hurt you. But those wipers are a safety hazard. I think I'll start with those unless I find something more serious first,\" he told her.\n\n\"It might be easier to just blow it up and start all over,\" she told him only partially joking.\n\n\"I need to pee really bad!\" Teddy said. He'd put away two 20-ounce diet Cokes and he was about to explode.\n\n\"Come on inside and you can use my bathroom,\" he told him. \n\nHe smiled at Shelby then told her, \"You, too, if you need to.\"\n\n\"Hah! I'm not the guy with the aging prostate!\" she teased. At yet she no sooner got inside than she confessed she was about to bust, too.\n\nHe tried not to laugh as he dropped Shelby off in the hallway bathroom and led Teddy to the master bedroom. \n\n\"Right back there in that corner, my friend,\" he told him pointing to it.\n\nHe went to his dresser to get the keys for the Corolla and hoped it would still start. He'd had it in storage up on blocks since he got back from the deployment when Katie died and now started it up once a week and drove it around the block maybe twice a month just to make sure it still ran since towing it to the Pacific Northwest . So unless the battery was dead he thought it would probably be okay.\n\nWhen he came back out he saw Shelby looking at what military folks called an 'I love me wall'. There were all kinds of plaques, certificates, and photos of Lloyd with each of the SEAL teams he'd served with and she'd been checking them out for several seconds.\n\n\"You didn't tell me you were a Navy SEAL,\" she said as he walked up behind her.\n\n\"In a previous life,\" he said.\n\n\"If Teddy sees this he's going to....\"\n\n\"See what?\" they heard the boy say.\n\n\"Cat's out of the bag now,\" Shelby warned Lloyd.\n\n\"Mr. Mullens was a Navy SEAL, buddy,\" she told him pointing at his wall.\n\n\"No way!\" he said as he looked up in awe at the pictures of Mullens in uniform.\n\n\"Is that gun real?\" he asked pointing to one of Mullens's pictures with four of his buddies in Iraq. One of them was his best friend who'd been killed two months later.\n\n\"It is,\" Lloyd said without fanfare.\n\n\"This is SO cool!\" the boy said ignoring the Bronze Star with 'V' for valor and the purple heart. Teddy was all about the photos and the guns.\n\n\"Do you have a gun like that now, Mr. Mullens?\" he asked his eyes bright with happiness.\n\n\"No. Nothing like that. That one belongs to the Navy,\" he told him. He did keep a 9m pistol for personal defense but that was it.\n\n\"Connor is never gonna believe this!\" he said as he kept looking.\n\nShelby had stopped looking at the wall and was looking at a photo on his desk.\n\n\"Is this your wife?\" she asked politely pointing to the picture of a beautiful woman with long, dark hair.\n\n\"Yes. That's Katie,\" he told her.\n\n\"She's beautiful,\" Shelby said admiringly. \"Again, I'm so sorry, Lloyd.\"\n\n\"Me, too,\" he told her before desperately wanting to change the subject.\n\n\"All right. I've got the keys to your new chariot so let's go see if we can fire it up, shall we?\"\n\n\"We're getting a new car?\" Teddy said just as excitedly pulling himself away from the photos.\n\n\"No, buddy. Mr. Mullens is lending this one to us for a day or two while he sees how bad our blue bomber is.\"\n\nWhen they stepped into the garage, Teddy was once again chattering away.\n\n\"This car is awesome!\" he said. \n\nIt was black and although it was seven years old, it still looked brand new. Like his Tundra it had very low miles on it as Katie had spent most of her time at home in bed the year she'd had it.\n\nLloyd opened the garage door, handed Shelby the keys, then said, \"Give it a go.\"\n\nIt started up immediately and ran so quietly it made her laugh.\n\n\"I forgot what a decent car is supposed to sound like!\" she said through the open window.\n\nShe turned it off and got out again. She stood there just looking at Lloyd the way she had earlier when, without warning, she threw her arms around him and hugged him. He was so surprised he kind of just patted her on the back as Teddy stood there smiling. ",
        "\"Is she crying again?\" he asked as though it wouldn't have been the first time.\n\n\"No, she's fine,\" Lloyd said not feeling any warm tears or her body shaking.\n\n\"Right?\" he said gently moving her back.\n\n\"Right,\" she said wiping away a single tear that was about to fall.\n\n\"Let me just go get our things and move them into the Toyota, okay?\"\n\n\"I'll go with,\" Lloyd said. \"Come on, slugger. Let's give your sister a hand.\"\n\nJust before she got ready to leave, Lloyd said, \"Let me send you a text message giving you permission to drive the car just in case you get pulled over, okay?\"\n\n\"Oh, geez. I didn't even think about that,\" Shelby said. She gave him her number and seconds later her phone buzzed.\n\n\"Another 'thank you' sounds so inadequate,\" she told him from inside the car.\n\n\"Just remember to pay it forward someday, okay?\" he said with a smile.\n\n\"Right! Because we all need a little help sometimes, huh?\" she said smiling back.\n\n\"Yes, indeed.\"\n\nHe bent down then said, \"I'll call your sister tomorrow, and we'll figure when to get together to learn how to throw that curve, okay?\"\n\n\"Cool!\" Teddy said.\n\nLloyd started to stand up when Teddy said, \"This has been the best day EVER!\"\n\nMullens winked at the boy, tapped on the car twice, then stood back as Shelby backed out.\n\n\"And an automatic transmission! No shifting in traffic. Hallelujah!\" she said before hollering, \"Woot, woot!\"\n\nMullens laughed then waved goodbye to them both and said to himself, \"It may not be the best day ever, but this has been the best one I've had in a very long time.\"\n\nHe didn't wait until morning to get started. He opened the hood and started looking around at the blue bomber as soon he changed clothes. After making mental notes about the major problems he saw, he drove it up on two yellow stands, blocked the rear wheels, then took a look underneath.\n\n\"You gotta be kidding me,\" he said. The oil pan was leaking, the transmission was leaking, the muffler really was shot, and the undercarriage was rusted out from stem to stern. He could look up into the cab of the car through one of the holes and two others were getting close.\n\nJust a rough estimate took him up to over $500 in parts alone and untold hours of work and that was the bare minimum needed to get it running right. It was pretty clear the blue bomber was DOA. He checked the Blue Book value on line and laughed when he saw it was worth a whopping $750 IF it was in 'Fair Condition' the next to worst category. Since it wasn't, it was probably worth a couple hundred bucks at most. It had close to 200,000 miles on it, so repair was clearly out of the question.\n\nMullens hadn't checked his bank balance since his final paycheck was deposited when he sold back 60 days of leave when he retired. Most of the money he'd saved had been put away since Katie died, and he often thought of it as 'blood money' as a way to beat himself up for what happened. Regardless, he had just over $52,000 in the bank and was already getting close to owning his Tundra outright. That left him with a mortgage payment plus the expenses everyone else had. What he had that most people didn't have was a pension for life.\n\nAs a retired Senior Chief or pay grade E-8, it wasn't a phenomenal amount of money but the $3,500 he received on the 1st of each month covered all of his bills and left a few hundred bucks for having fun, something he'd have to learn how to do again one step at a time. \n\nWhere money was concerned, he knew he could always find a a job to supplement his retired pay. In fact, like virtually all retired Navy SEALs, Mullens had had several contracting firms contact him to do security work or consulting. For now he didn't need or even want a job. What he needed were friends, friendship, and when he gave himself permission to feel, the warmth and love of a family that included two or three kids. Those were the things he truly craved. \n\nHe smiled when he thought, \"Maybe even a ready-made family. Like Shelby and Teddy.\"\n\nHe dismissed it as quickly as it came knowing she was somewhere between maybe 19 and 22 give or take, and he was 43 and not getting any younger. \n\nHe also knew he could still bury 95% of guys who worked out and 99.99% of all men of any age who didn't, but that wasn't the issue. Still, for his first attempt at readjusting to civilian life, this had turned out even better than he'd imagined; especially since he'd never even dreamed he'd meet someone let alone get acquainted with them. The fact that it had been a pretty girl made it ever better. Maybe it wasn't hopeless after all.\n\nHe waited until after 6pm the next day before he called and was surprised when he heard such a pleasant voice answer the phone.\n\n\"Is this that handsome Navy SEAL guy calling?\" Shelby said.\n\nLloyd laughed then told her, \"Handsome? No, you must have me confused with some of my former colleagues.\"\n\nHe'd been told he was a good-looking guy many times, but considered himself to maybe be a little above average and never a 'hottie'\u2014whatever that ever meant for men.\n\n\"No, I'm pretty sure I'm right,\" she said sweetly. \"So...what's the verdict?\"\n\n\"Well, I have good news and bad news,\" he told her. \"Which would you like first?\"\n\n\"Oh, wow. Well, let's get the bad news out of the way first.\"\n\nShelby winced as she waited.\n\n\"Your car is on its last legs,\" he told her. \"It could die on you at any time.\"\n\nShe held the phone out, looked at it, then replied.\n\n\"Um...duh!\" she told him playfully. \"I thought you said you had bad news. That's not even news let alone the bad kind.\"\n\nHe loved her candor and playful manner.\n\n\"True. Okay. Let me put it this way. You can drive it until it dies and that's it. At that point you'll have to buy another car.\"\n\nHe went on to explain why it was beyond repair leaving Shelby very quiet.\n\n\"Would you like the good news?\" he asked trying to sound upbeat.\n\n\"Sure,\" she said now sounding very deflated.\n\n\"I have a solution,\" he told her. There was no response so he decided to improvise on the spot.\n\n\"But first...have you guys had dinner yet?\" he asked.\n\n\"I was just boiling water to make some rice,\" she said. What she didn't tell him was that, along with some salt and pepper and one pat of butter was dinner. Oh, and they'd be drinking tap water again, too.\n\n\"I'm kind of hungry myself so how about we go out somewhere, and I'll share my grand scheme with you.\"\n\nShelby had exactly $3.12 left until payday which was still two days away.\n\n\"That sounds really nice, Lloyd, but we just went out for pizza, so we really need to stay in tonight,\" she told him. \n\nTeddy had heard Lloyd's voice and was now standing next to her.\n\n\"Is that Mr. Mullens?\" he asked.\n\n\"Yes,\" she said quietly.\n\nHaving heard Teddy's voice but not Shelby's reply, he said, \"Teddy. Is that you, my man?\"\n\n\"Hey, Mr. Mullens! When are you gonna teach me how to throw a curveball?\" he said his eyes wide with excitement.\n\n\"I was thinking about tomorrow, but I gotta talk to your sister first. I was kind of hoping to take you guys out to eat, but she sorta shot me down.\"\n\nHe knew that was 'dirty pool' as his late father used to say, but he really wanted to see them both and his only hope was for Teddy to do his part.\n\nHe smiled when he heard, \"Pleeeease, Shell?\"\n\nEven though she was trying to be quiet, this time he heard her say, \"We can't afford to eat out, buddy.\"\n\n\"No problem!\" Lloyd said knowing he was on speaker.\n\n\"I'll pick up a bucket of KFC and fixings and be there in half an hour.\"\n\n\"I love KFC!\" Teddy said animatedly.\n\n\"Mr. Mullens? Why are you trying to make me the bad guy?\" she said quietly after turning her back to her brother.\n\n\"Bad guy? No! I'm making you the hero!\" he told her cheerfully hoping to raise her spirits. \"I just need an address.\"\n\nShelby looked over her shoulder and saw the hopeful look on Teddy's face before turning back around and saying, \"Okay. Fine. But this has to be the last of this. He's already very attached to you and I...I can't afford to let him get too close to anyone who isn't going to be there for him.\"\n\n\"What about the curveball?\" Lloyd asked.\n\n\"Yes, of course. But this fast food thing and spending time together? We can't keep doing this,\" she said. \"And after you show him how to throw the curveball, we should probably try and wrap things up altogether, okay?\n\n\"I won't ask you to do fast food again,\" he told her ignoring the rest of what she said.\n\nThere was a pause then a sigh before she gave him their address.\n\n\"Great! I'll see you guys soon!\" He waited for a second then said, \"From now on I promise I'll only invite you to real restaurants.\"\n\nHe heard a loud 'grrrr!\" sound but knew she was smiling before she hung up.\n\n\"Can I have one more piece?\" Teddy asked after having devoured three plus a side of mashed potatoes and gravy in the first ten minutes since Lloyd arrived.\n\n\"I think that's enough for now,\" Shelby told him. \n\n\"Right! You've gotta save room for dessert,\" Lloyd said then waited for Shelby to give him the look.\n\nWhen she did, Teddy saw it and said almost sullenly, \"I know. I need to lose some weight.\"\n\nLloyd actually hurt for the boy as he suddenly felt ten years old again. \n\nHe pulled out his phone and said, \"Let me show you something, okay?\"\n\nTeddy stood up and looked over his shoulder as he scrolled through his iPhone's photos.\n\n\"Do you know who that is?\" Lloyd asked when he got to three very old pics of a kid who looked a lot like Teddy.\n\n\"No,\" he said feeling self-conscious again about his teeth and his weight.\n\n\"That's me when I was about your age,\" Lloyd told him.\n\nTeddy looked at him then back at the pics.\n\n\"Really? That was you?\"\n\n\"Yes, it was,\" he told him. \"So...I understand, okay?\"\n\nShelby was holding out her hand so he passed her the phone and in less than two seconds there were tears in her eyes again after she saw how much Lloyd once resembled her little brother.\n\n\"So don't sweat your weight, okay? It'll come off eventually. Yes, you'll have to do some work and cut down on the sweets a little, but you can do it. I did it, right?\"\n\n\"Yeah, but you were a Navy SEAL.\"\n\n\"What? Does the kid in those photos look like a SEAL to you?\" Lloyd said with a laugh as he referred to his old pics. \"Maybe a walrus or a whale, but that's no seal.\"\n\n\"Get it? Navy SEAL. Seal. 'Arrh, arrh', or whatever noise seals make,\" Mullens said trying to be funny. \n\nHe eventually got a smile then reached out and tickled Teddy's sides which brought on a hysterical shriek of laughter. \n\n\"So I think you can afford to have a cookie or two later.\"\n\nHe quickly looked at Shelby then said, \"If it's okay with the boss.\"\n\n\"I guess he could have one,\" she said not sure whether was about to smile or cry.\n\n\"Hey, buddy? Can I maybe talk to your sister alone for a few minutes?\" Lloyd asked once he calmed back down.\n\n\"Um...sure. I have to do some math homework anyway.\"\n\n\"Thanks, dude,\" Lloyd told him as he headed to his room.\n\n\"See, now I don't know whether to be mad at your or hug you,\" Shelby said out loud once Teddy was gone.\n\n\"Why? What'd I do now?\" he asked with a smile.\n\n\"You gave my brother hope.\"\n\n\"And that could that be a bad thing\u2014how?\" he asked.\n\n\"Because he'll think he can change the way he looks overnight, and when he realizes he can't....\"\n\n\"I just wanted him to know most things aren't permanent. That's all,\" Lloyd said hoping he'd helped and not made things worse.\n\n\"Either way, he has to deal with this for the foreseeable future, and I just don't want him to get hurt\u2014again. I swear one day I'll be able to afford braces. That's several years down the road, but it will happen,\" she said her eyes growing misty again.\n\n\"Forgive me for asking, but was there no money at all after your parents died? If I'm out of line just tell me,\" he said with real sincerity.\n\nShelby looked down at the little table then said, \"Both of our parents were alcoholics. My dad caused the accident that killed him and our mom and he also killed a five-year old boy and seriously injured his mom.\"\n\n\"Jesus. Shelby, I'm so sorry. You don't have to say any more if....\"\n\nShe kept right on going.\n\n\"His parents sued the estate.\"\n\nShe paused, laughed sarcastically then said, \"Estate. That's actually kind of funny. Anyway, after selling the home and taking the equity in it and getting cash for the value of the car, we had about $60,000. But the lawsuit took all but $10,000 the judge set in a trust for Teddy to use for food, clothing, and shelter. I drew on it until it was gone so...no, there's no money. Oh, they did have $10,000 in life insurance, but it cost more than that to bury them both. I'm at the point where I'm going to have to swallow my pride and sign us up for food stamps, something I swore I'd never do, but we do have to eat.\"\n\nShe looked up at him and said, \"So that's the rest of the story.\"\n\n\"Thank you for sharing that, Shelby. That...that took guts.\"\n\n\"As they say, 'It is what it is', right?\"\n\n\"Right. Um...let's talk about the good news then,\" Lloyd said sounding optimistic.\n\n\"I could use a little,\" she said with a forced smile.\n\n\"We'd be lucky to get $200 for you car,\" Lloyd began.\n\n\"When do we get to the 'good' part?\" Shelby asked but not in a snarky way.\n\n\"Here's the bottom line. I never drive the Corolla except to make sure it's still running. Never. I pay insurance on it since taking it out of storage but never drive it, and that makes no sense. I could sell it, but it's got sentimental value so I can't and I won't.\"\n\n\"I'm not following,\" Shelby said not sure where he was going.\n\n\"I was thinking that it would make perfect sense if...if you drove it.\"\n\n\"What? Me? You mean more than just today? Uh-uh. I can barely afford to buy gas. There is no way I could buy your car and....\"\n\n\"I'm not talking about selling it to you, Shelby,\" he said to her.\n\nShe was looking at his eyes as he spoke and she noticed there was something different about them. It was as though what he was saying was not only something he believed but something he needed her to believe, too.\n\n\"Then what are you talking about, Lloyd?\" she asked\n\n\"I want you to have it. You and Teddy. It's dependable, economical, and I'd feel a whole lot better if the two of you were riding in that car rather than the piece of junk sitting in my driveway. No offense,\" he finished saying with a smile.\n\n\"You know I can't do that. It's the sweetest, most generous thing ever, but...I just can't. You do understand, right?\"\n\nHe moved forward to the edge of his chair then said, \"I need to know that someone I care about is driving my wife's car, Shelby. And while you may think it's crazy, I already care about you and your little brother. A lot. The car you're driving him around in isn't safe. It's an accident waiting to happen. And even if it dies in a convenient place like a parking lot you'll still have to have it towed away and buy a new car. Or...a new, used car, as the case may be.\"\n\n\"Then I'll deal with that when it happens,\" she told him politely.\n\n\"Shelby? I don't want to upset you, but after losing your parents, if you had an accident and you survived and...Teddy didn't, you know you'd never forgive yourself. So please let me do this for you, okay?\"\n\nShe sat there looking at him not sure what else to say. Internally, she was torn. Here was an opportunity to protect her little brother, but in order to do it, she had to compromise her strongly-held values\u2014like not signing up for food stamps.\n\nAs she sat there Lloyd said, \"Look. Anyone can get in an accident. That's a risk we all take every time we get in a car or on a plane. Shoot, just waking up in the morning entails risk. But in my humble opinion, you're putting yourselves at an extra, unnecessary risk by riding around in a car that could fall apart at any time or anywhere. Like\u2014the freeway. This way, you reduce the risk to the level everyone else is at, and I'd feel good knowing Katie's car is helping someone I um...kind of like.\"\n\nShe gave him a strange look but didn't speak.\n\nHe looked right at her then said, \"And if something were to happen to either one of you and I could have done something to prevent it, I could never live with myself. So...please? Please take the car?\"\n\n\"I'll pay you back, Lloyd. I don't know how, but I will pay you back. I can put a few dollars a month aside for now and then later maybe....\"\n\n\"Sure. Okay. That sounds perfect,\" he said with a smile, feeling like a huge weight had been lifted off his shoulders knowing he'd never take a dime from her.\n\n\"I wish I had something more to offer you than saying 'thank you' yet again which seems wholly inadequate, but it's really all I've got,\" she told him. \n\n\"I...I can't even afford to make dinner for you. Not that it's your loss or anything.\"\n\nShe actually smiled after mentioning her cooking skills.\n\n\"Um...well, if you've decided not to be mad at me, maybe you could...I don't know...give me the hug you kind of hinted at?\" he said with another smile and raised eyebrows.\n\n\"Well, those are free,\" she said smiling back as she stood up.\n\nShe looked into his eyes as she opened her arms and said, \"Trite or not, thank you, Lloyd. From the bottom of my heart.\"\n\nAs he embraced her the world felt, for a moment at least, like it was the same place he'd remembered it to be once upon a time. A time when life was simple and he wasn't at war with a very real enemy or himself. A time when he was young and happy and....\n\n\"Hey! What are you guys doing?\" they heard Teddy say startling Shelby to death.\n\n\"Don't sneak up on me like that, buddy!\" she said pulling away from Lloyd like he was on fire.\n\n\"Do you like my sister?\" Teddy asked when Lloyd turned around to look at him.\n\n\"Oh. Um...well, I don't know. I mean, she's kind of nice.\"\n\nHe glanced at Shelby then said to Teddy, \"And she is a very attractive woman.\"\n\n\"Hah! Now that's funny!\" Shelby said reflexively even as she felt a warmth spread through her body. She couldn't remember the last time a man (or any guy of any age for that matter) had said anything like that to make her feel pretty. It wasn't a direct compliment, but it still felt very nice that someone was even just being polite.\n\n\"Yeah, she's not bad. For a girl!\" Teddy said smiling unashamedly at his sister.\n\n\"No, she's not,\" Lloyd agreed looking at Shelby as he said it.\n\n\"Okay, did you need something?\" Shelby asked Teddy, hoping to move on.\n\n\"I'm all done,\" he said.\n\n\"No way!\" she said. \"Bring me your assignment.\"\n\n\"Ah! Do I have to?\" he whined.\n\n\"Only if you want dessert,\" she said.\n\n\"Maybe I'll go back to my room and check my answers again,\" he said knowing he hadn't finished.\n\n\"Oh, good answer!\" she said saying it like people did on the TV show Family Feud no matter how idiotic the answer a family member gave to the host's question.\n\n\"He's a good kid, but if you don't check his work....\"\n\n\"Ah, yes. How well I remember,\" Lloyd admitted recalling his own propensity to avoid homework at all costs.\n\n\"So when did you want to get together at the ball field?\" she asked shifting the subject yet again.\n\n\"I didn't exactly get my full hug, but I'll let that slide for now,\" he said with a smile. \"I'm free 24/7 so what works for you?\"\n\n\"Is 7pm okay?\" she suggested.\n\n\"Yep. I'll see you there,\" he told her.\n\n\"Did you want to take a cookie with you?\" she asked pointing to the small bag with a half dozen chocolate chip cookies in it.\n\n\"Nah. I'm pretty full,\" he said still smiling.\n\nShe walked him to the door then thanked him again.\n\n\"I'm the one who owes you the thanks,\" he said being uncharacteristically serious.\n\n\"Me? How so?\" Shelby asked. \"All I've done is sponge and mooch and take.\"\n\n\"Because you and Teddy have made me feel alive again,\" he said quietly without explanation.\n\nShelby felt him staring into her soul as he looked at her with the saddest eyes she'd ever seen.",
        "\"Well, I'm glad because you've made me feel...hopeful...again, and I guess that's such a bad thing after all.\"\n\n\"Then I'm glad, too,\" he told her before leaning down and kissing her on the cheek.\n\nShe not only didn't flinch or pull away she turned to kiss his cheek, too. Then she looked down and said quietly, \"G'night, Lloyd.\"\n\n\"Goodnight...beautiful,\" he said.\n\n\"Stop!\" she said giving him a playful push.\n\nWhen he left she stood there smiling for quite a while and feeling like the life wasn't being sucked out of her for the first time in a very long while. And it had been almost as nice to be told she was attractive by a good-looking man. Well, indirectly anyway.\n\nAt the agreed-upon time, Lloyd was there waiting when the little black Corolla pulled in next to him.\n\nHe grabbed his glove and the three new baseballs he'd just bought and jumped out and ran over to open Shelby's door.\n\n\"Well, thank you!\" she said. \"I wasn't expecting that.\"\n\n\"You should,\" he told her as Teddy hopped out of the other side.\n\n\"I am so psyched!\" Teddy said as he clutched his glove.\n\n\"All right. Let's get this party started!\" Mullens said as he put his hand on Teddy's shoulder and walked him to the field.\n\nLloyd held the ball in his hands and said, \"Okay. First thing is the grip. See how the seams run like this?\"\n\n\"Uh-huh,\" Teddy said as he watched intently.\n\n\"Hold your middle finger and first finger close together like so and along this seam to create more spin. Now let me show you the motion and the release.\"\n\nLloyd showed Teddy the difference between the way a fastball was held and released and then a curveball.\n\n\"So it's kind of a down snap like a yo-yo,\" Teddy said as he tried imitating what Lloyd was doing.\n\n\"Yeah! That's a good analogy. Okay. I'll be the catcher and you toss me a few fastballs first to warm up your arm. Nice and easy, okay?\"\n\nHe let Teddy throw about 25 easy tosses then said, \"Now a little harder.\"\n\nTen more and Lloyd said, \"You ready?\"\n\n\"I'm ready!\" Teddy said excitedly.\n\n\"Don't worry about where the first few go, okay? My first ball went about 30 feet over my dad's head.\"\n\n\"Got it!\" Teddy said before winding up. \n\nHe held on a little too long and the ball slammed into the ground about 20 feet in front of Mullens. He caught it on one hop and said, \"Just the opposite of my first curve. Try and remember how that felt and let go just a little bit earlier.\"\n\nThe second ball was way high, but Mullens was able to jump and still catch it.\n\n\"Not bad. That's what we call 'bracketing'. You go way low then way high. Then a little low and a little high and all of a sudden you're throwing strikes.\"\n\nThe next pitch hit the plate, but both he and Teddy saw it break before it bit the dust.\n\n\"I did it! I threw a curveball. Shelby? Did you see it?\" he hollered.\n\n\"I sure did!\" she yelled back having no idea what he'd done. \n\nShe couldn't see any difference between it and any other pitch he'd thrown, but he was excited so she hollered, \"Good job, Teddy!\"\n\nIt took him a half dozen more tries, but just as Mullens had told him, he was throwing curveballs for strikes in no time. \n\n\"Now, the harder you throw and the more you snap your wrist, the sharper the ball breaks,\" he told him. \"Remember, you can change speeds, too. There's nothing like firing a fastball then coming back with a slow curve.\"\n\nThey played catch for a few more minutes before Lloyd said, \"That's enough for today. We don't want to tire your arm out for the weekend game, right?\"\n\nTeddy was chattering away non-stop as they walked over to Shelby.\n\n\"So...what'd you think?\" Lloyd asked her.\n\n\"I think...my brother is awesome and you are amazing!\" Shelby said happily as she reached out to give Teddy a hug.\n\n\"Where's mine?\" Lloyd said pretending to be hurt.\n\nShelby gave him a look that involved one eye being nearly closed then said, \"Okay. Fine. You can have a hug, too.\"\n\nShe was sitting on a bench when she hugged Teddy and was still sitting when she opened her arms to hug Mullens. Without warning, he pulled her to her feet, grabbed her, hugged her tight then swung her around causing her to squeal with delight as she kicked her feet and held on for dear life.\n\nLloyd's back was to Teddy when he set her down and he quietly said, \"I don't want this to end, Shelby.\"\n\n\"Lloyd. Be realistic. I have a ten-year old brother. He comes with the deal. You can't possibly....\"\n\n\"I wouldn't have it any other way,\" he told her, his arms still around her waist. \n\n\"I don't want him...or myself...to get hurt again,\" she said quietly.\n\n\"You won't,\" he told her. \"I won't hurt either of you, Shelby. Ever.\"\n\n\"Are you guys in love or something?\" Teddy said in that kid-like voice, squinting as he looked to see what they were doing.\n\nThe adults laughed then Teddy said, \"Cause if you are, aren't you supposed to kiss and stuff?\"\n\nLloyd tilted his head then said, \"He's right, you know.\"\n\n\"Oh, he is, is he?\" she said smiling up at him.\n\n\"Uh-huh. He is,\" Teddy informed his sister.\n\n\"Well, then maybe you should kiss me,\" she said her body tingling from head to toe as he leaned down and kissed her softly for the first time.\n\n\"Okay, okay. That's enough!\" Teddy called out almost immediately.\n\nBoth of them laughed again as they turned around now holding hands.\n\n\"Can we eat dinner now?\" Teddy asked causing them both to laugh again.\n\nShelby stopped smiling knowing they were down to their last few slices of bread at home. She'd decided she would sign up for SNAP benefits, the fancy term for food stamps, but for now, Old Mother Hubbard's cupboard was nearly bare.\n\n\"Um, sure, buddy. We'll head home and get something,\" she said not wanting Lloyd to know how desperate things were. Thankfully, the next day was payday and she could go to the grocery store again.\n\nHe sensed something was wrong so he said cheerfully, \"Hey. You guys need to come over to my place so I can make dinner for you.\"\n\nBefore Shelby could answer Teddy said, \"You can cook?\"\n\n\"Not really but I can microwave with the best of them,\" he said with a straight face. \"And I've got all kinds of TV dinners in the freezer. Some of them are even edible.\"\n\n\"I love TV dinners!\" Teddy said. \"Shell? Can we? Pl....\"\n\n\"Yes. Okay. We can go to Lloyd's house,\" she said cutting him off pretending she was being put out to do so.\n\n\"I guess we'll follow you,\" Shelby said as they got to their vehicles.\n\n\"I was born to lead,\" Lloyd said with a smile.\n\n\"Can I ride with Lloyd, Shell?\" Teddy asked.\n\n\"Um...sure. That sounds okay,\" she said with a happy smile.\n\n\"Yeah. We men need some guy time, right?\" Lloyd said to Teddy offering a high five.\n\n\"Right!\" Teddy said slapping hands before running around to his side.\n\n\"Lloyd? What's going on here?\" Shelby asked when her brother couldn't hear.\n\n\"I'm way out of practice, but I think it's called...a relationship,\" he told her. \"Or at least that's what I'd like it to be. But if you aren't into guys who have to pee all the time....\"\n\nThe concern drained from Shelby's face as she laughed loudly.\n\n\"You nut! Okay. Fine. I'll see you at your place.\"\n\nHer smile told him she at least wasn't completely opposed to the idea of a relationship, and he couldn't help but smile with satisfaction as he stepped up into the cab.\n\nHe and Teddy talked about the curve, baseball, his friend Connor, and then about being a Navy SEAL the whole way to Lloyd's place.\n\nThe evening flew by as the three of them talked and laughed and ate whatever Lloyd had in the freezer in the way of TV dinners. He had to admit they'd come a long way since he was kid. These were not only edible, they weren't half bad. \n\nTeddy devoured one and was still hungry, so Lloyd helped him polish off a second dinner before they sat down to relax.\n\n\"I don't have PS3 but I do have Xbox. Is it okay if Teddy plays it in my bedroom?\" Lloyd asked Shelby while the boy was in the bathroom washing up after dinner.\n\n\"Sure. He'd love that,\" she said. \"And maybe you can tell me what's going on between us because I'm still very confused.\"\n\nHe reached out and pulled her to him causing her to yelp happily then put her hand over her mouth. \n\n\"Shhh!\" she said mostly to herself as she put her arms around his broad shoulders.\n\n\"This is going on,\" he told her. \"You and me. Me and you. And...Teddy. It's no more complicated than that.\"\n\n\"It's just...it's just all happening so fast,\" she said as she looked into his eyes.\n\n\"We can take it slow,\" he told her. \"I've got all the time in the world.\"\n\n\"Slow? Um...you're not exactly a spring chicken, mister,\" she teased trying not to laugh.\n\n\"Well, I'd say you make up for whatever it is I'm not in that department,\" he told her.\n\n\"I have no idea what that means,\" she said with a bright, happy smile. \n\n\"It means....\"\n\nHe leaned down and kissed her again and heard her moan softly. The kiss lasted several seconds and was once again interrupted by a young voice.\n\n\"Again?\" Teddy said loud enough to startle his sister a second time.\n\n\"He's like a Ninja,\" Lloyd said. \"I didn't hear a thing.\"\n\n\"Yeah, I'm gonna have to tie a bell around his neck,\" Shelby said still smiling happily.\n\n\"Speaking of Ninjas, have you ever played Ninja Gaiden?\" Lloyd asked him.\n\n\"On Xbox?\" Teddy said almost too excited to speak. \"You have that?\"\n\n\"That's the one. Come on. Let's go play!\" Lloyd said. \n\nHe grabbed Shelby's hand and pulled her along, too, and a minute later they were taking turns playing the game on Lloyd's bed.\n\n\"This is the best day ever!\" Teddy said about another day with Lloyd as he pushed buttons furiously.\n\nThe adults stayed a few more minutes then Lloyd said, \"Do you mind if we take a break for a little while, buddy?\"\n\nTeddy didn't hear them or notice them laugh or even when they got up to leave. He was making the kinds of noises kids make when they're 'killing' everything they see in a video game.\n\n\"He's in heaven,\" Shelby said as they walked to the living room.\n\nLloyd stopped her and put his arms around her then said, \"Not to be too corny, but...so I am.\"\n\nHe kissed her again and when it ended she said, \"Corny is good. Corny works for me.\"\n\nFor the next two hours they talked and laughed and held hands and kissed more than a few times while Teddy did his best to defeat the Ninja warriors.\n\nThe TV was on in the background and at some point Shelby said, \"This is Memorial Day weekend.\"\n\n\"Oh, right. Yes, it is,\" Lloyd said trying not to think about the friends he'd lost in two wars over the last 14 or so years of his life.\n\n\"Did you have friends who, you know, didn't come home?\" she asked very respectfully.\n\n\"A few,\" he told her without emotion. \n\n\"Did the dog tags you gave to Teddy belong to one of them by chance?\" she asked pretty sure she knew the answer since they weren't his.\n\n\"Yes, they did,\" was all he said.\n\nShe snuggled up close and said, \"I can't even imagine.\"\n\n\"I'm glad,\" he told her. \"That's means we did our jobs well.\"\n\n\"You're the first person I've ever known who served in the military,\" she told him.\n\n\"Really?\" he asked having a hard time believing that.\n\n\"I mean, I know of people who served. I just don't know any of them personally,\" she explained. \n\n\"How am I doing as your um...first?\" he asked with a smile.\n\n\"Oh! That was cute,\" she told him trying not to laugh.\n\nShe smiled then said, \"Then again, so are you, in an 'old guy' kind of way.\"\n\n\"What? Old guy? I'll have you know I resemble that remark,\" he told her as he pulled her onto his lap.\n\nShe smiled as she lay there and as she looked up at him she said, \"Wow. You're the king of corn. And for the record, you're doing pretty wonderful here, sailor. You know, as my first.\"\n\nHe gently stroked her short hair then told her, \"Now that you're in my life, I'm feeling pretty wonderful myself.\"\n\nShe reached up and put her hand behind his head then pulled him to her and kissed him passionately. Several seconds later, and for the first time, she offered him her tongue. When he did the same thing in return, she moaned softly again as the kiss grew deeper and longer.\n\n\"You know Teddy's here, right?\" she said when it ended.\n\n\"I do,\" he told her. \"And he's having fun. Just like us.\"\n\n\"Not just like us,\" she said sweetly with a big smile.\n\n\"Come here,\" he said lifting up to kiss her.\n\nThis time the kissing grew very deep, and Shelby gently pulled one of his arms away and pushed his hand toward her breast. She was maybe a full B and always felt like her boobs were a metaphor for her overall looks\u2014'not bad'. She gasped when he cupped it then moaned when he squeezed it. She felt him growing hard as her back pushed into his crotch and moaned again as she wriggled against him.\n\n\"For the first time ever, I'm wishing my brother wasn't with me,\" she whispered.\n\n\"We have time,\" Lloyd said in a low, quiet voice.\n\n\"I really want you,\" she said her mouth right next to his ear.\n\nLloyd lowered his hand from her soft breast to the area between her legs and pushed against the denim material causing Shelby to gasp.\n\nHe undid the top two buttons of her jeans and slid his hand inside. There was a blanket behind Lloyd on top of the couch which Shelby pulled down to cover her as she undid two more buttons and pulled her pants down just enough to grant him access.\n\nShe bit her lip as his finger found her swollen nub and began circling it.\n\n\"Yesss!\" she said quietly, her eyes closed, her breathing long and slow.\n\nThe pressure increased then stopped as one of his fingers entered her briefly before returning to where it was making tiny, sweet little circles.\n\n\"Oh...God!\" she cried softly as Lloyd repeated the motion many times bringing her to the edge over and over.\n\nShe pressed his hand against her as she kissed him long and hard. This time he didn't stop or pull away until he felt her body go rigid. Lloyd continued pressing and circling as she stifled a scream.\n\n\"Ohhh...ssshit!!!\" she said ever-so quietly as her body shook and trembled thanks to her first orgasm in many weeks.\n\nAs she lay there trying to catch her breath he smiled at her when she finally opened her eyes.\n\n\"That was...amazing!\" she told him. \"So, so amazing! I wish I could repay the favor. I'm so far in debt to you it's scary.\"\n\n\"Payback time is coming,\" he assured her with a smile.\n\n\"Mmmm. I can't wait if it's anything like the downpayment,\" she cooed.\n\n\"Oh, it's a whole lot like that...and more,\" he told her.\n\n\"Uh-huh. I can feel how much...more it is. It's been jabbing me for a while now in...my back,\" she said trying not to laugh playing off the word 'payback'.\n\n\"Ah, yes. I believe you've charmed the snake,\" he told her.\n\nAs hard as she tried not to, Shelby burst out laughing.\n\n\"Was that the bedroom door?\" she said, frantically reaching for her pants as fast as she could.\n\nShe just got them pulled up then quickly turned sideways as though she was just casually watching TV on Lloyd's lap when Teddy came in.\n\n\"Do you guys wanna play?\" he asked hopefully.\n\n\"Yeah. Sure. I'll be right there, buddy,\" Lloyd said as Teddy looked at his sister laying on his lap.\n\n\"I swear,\" he said shaking his head as he went back to the bedroom.\n\nShelby waited until the door closed before she lost it.\n\n\"That was way too close!\" she said when she stopped laughing.\n\n\"I think we seriously need to get a room,\" Lloyd told her as she sat up then stood up and buttoned her pants.\n\n\"You go play with Teddy. I need to pee,\" Shelby said before she helped him stand then give him a very nice 'see you in a minute' kiss.\n\n\"They have medication for that,\" he said teasing her.\n\n\"Oh, you are so gonna get it, mister!\" she warned him.\n\n\"Hmmm. Is that a promise?\" he said with a smile hoping he might be 'getting it' someday soon.\n\n\"Maybe,\" she said coyly with a happy smile before disappearing into the bathroom.\n\nShelby heard the guys whooping and hollering in the bedroom as soon as she stepped into the hallway. She walked to the bedroom door then peeked in as she saw Teddy laying on Lloyd's back as they 'did battle'.\n\n\"You got me!\" Lloyd said as Teddy sliced on his guys.\n\n\"I told you I was good at this game!\" he said.\n\nShelby stood there and watched her brother having so much fun, and yet again felt like crying. He'd been through so much with the booze and the neglect and then the accident. And all the while he lived with the horrible things other kids said to about the way she looked.\n\n\"You did not just do that to me!\" Lloyd said loudly.\n\n\"Oh, yes I did!\" Teddy said even louder.\n\nShelby blinked a couple of times then walked in a said, \"I play the winner!\"\n\n\"That's gonna be me!\" Teddy said as he twisted and turned his controller.\n\n\"Ah, man!!!\" Lloyd said as his last life drained away.\n\nHe was still underneath Teddy as he handed Shelby the remote. \n\n\"This guy is too good for me. You give it a try, okay?\"\n\nShe climbed up and laid next to him then smiled when he turned his head toward her. He'd never looked 'old' to her but suddenly he didn't even look old-er. He just looked like a man she wouldn't mind spending the rest of her life with\u2014were he to ever ask.\n\n\"Okay. It's time somebody taught you a lesson in humility, Mr. Big Pants!\" Shelby said to her brother.\n\n\"Well, it isn't gonna be some girl!\" he said defiantly but in a voice that warmed Shelby's heart as she felt like laying here next to this wonderful man was the most natural thing ever.\n\nAfter Teddy destroyed Shelby in record time she said, \"I'm sorry, buddy, but we're gonna have to get ready to go home.\"\n\n\"Ahh! Do we have to?\" he said clutching the controller.\n\n\"I'm afraid so. I'm pretty sure Mr. Mullens is about ready to go crazy from all our nonsense.\"\n\nLloyd said quietly, \"Actually, he's thinking that saying goodbye is about the suckiest thing he can think of.\"\n\nShelby was on her tummy, too, and looking back at him.\n\n\"Yeah, it does sound pretty sucky, doesn't it?\"\n\n\"I gotta pee!\" Teddy said suddenly as he set the controller down and slid off the bed.\n\n\"He's worse than me,\" Lloyd said. He smiled then said, \"No...he's worse than you!\"\n\n\"Oh, really?\" Shelby said raising up.\n\n\"Oh, really,\" Lloyd replied as he pulled her on top of him before kissing her.\n\n\"Do you really have to go?\" he asked as he touched her cheek.\n\n\"We...we can't just shack up. Can we?\" she asked as her eyes danced with his.\n\n\"I do have a tent large enough for the three of us. We could...go camping in the back yard,\" he told her.\n\n\"Well, I do have the weekend off, and I get paid by direct deposit so I don't have to go to work in the morning,\" she said sweetly. \"And Teddy would love to camp out no matter where it is.\"\n\n\"My back yard is entirely fenced in and we could see the tent from my bedroom.\"\n\nShelby sat up and looked through the window. \n\n\"Why yes we can,\" she agreed.\n\n\"Since we could keep on eye on Teddy even if we're not physically in the tent with him the entire time....\"\n\n\"Are you saying we could maybe, you know, slip away for a little while?\"\n\n\"Uh-huh. Someplace soft and warm.\"\n\n\"Oh, I see. Is that because of your aging back?\" she said trying not to smile.\n\nHe flipped her over and she laughed loudly before he said, \"According to my plan, you would be the one on her back.\"\n\nShelby giggled then said, \"I think I might like being on my back...in your bed.\"\n\n\"Do you guys ever take a break?\" Teddy said causing Shelby to laugh uncontrollably.\n\n\"What's so funny?\" her brother asked.\n\n\"Your sister is just really excited about going camping,\" Lloyd said.\n\n\"Camping?\" Teddy repeated, his eyes growing wide.\n\n\"Yes. Camping,\" Shelby said looking over at him from underneath Lloyd. \"How would you like to sleep in a tent with us tonight?\"\n\n\"TV dinners, Xbox, and now camping? I love my life!\" he said as he bent backwards and held up his fists in triumph.",
        "Teddy was almost as excited to climb up into the attic with his new best friend to get the tent as he was to sleep in it. \n\nLloyd handed him the sleeping bags which Teddy then lowered to Shelby before Lloyd carried down the four-person tent he'd only used once. He and Katie had talked a lot about going camping, but each time he came home from somewhere the last thing he'd wanted to do was sleep outside. Consequently it had less 'miles' on it than the Corolla.\n\nLloyd fired up two lanterns and Teddy had the time of his life putting up the tent with a minimal amount of help from his mentor.\n\n\"Nice work!\" Lloyd told him once the front flap was folded back.\n\nTeddy was absolutely beaming from the praise and Shelby was as happy for him as he was for himself.\n\n\"Hey! I've got some marshmallows inside. How about we cut some sticks and make us a little fire in the fire pit and roast them?\"\n\n\"Just when I thought my life couldn't get any better,\" Teddy said cracking everyone up again.\n\nIt was nearly 10pm and well past Teddy's bedtime when Shelby said, \"Okay, buddy. Go use one of the new toothbrushes in the hallway bathroom then go pee and get ready for bed.\"\n\nThis time there was no argument as Teddy happily went back inside.\n\n\"And why do you have so many unused toothbrushes, Mr. I-never-date-anyone?\" Shelby teased.\n\n\"I can assure you it isn't for that,\" he told her. \"I've just kept collecting the free ones the Navy dentists gave me each time I went in.\"\n\n\"Uh-huh. Sure,\" Shelby teased before sitting on his lap.\n\n\"Scout's honor,\" he told her.\n\n\"I don't want a boy scout tonight,\" she whispered in his ear.\n\n\"Oh. Right. I nearly forgot about that,\" he said trying to keep a straight face.\n\nShe felt him again and said, \"Oh, you lie!\"\n\n\"Oh, you are so gonna get...laid!\" he whispered back causing Shelby to shriek with laughter again.\n\nOnce everyone was ready for bed Teddy asked, \"Can I sleep in between you guys?\"\n\nWithout hesitation Lloyd said, \"You better believe it.\"\n\nLloyd waited until everyone was set before saying, \"Okay. Lights out.\"\n\nOnce it was dark and quiet no one spoke for several seconds.\n\nThen Teddy said in an unusually quiet voice, \"Mr. Mullens? I still really like Connor, but you're my new best friend.\"\n\nLloyd rolled over onto his side toward Teddy and said, \"Yeah. Same here, buddy.\"\n\nHe put his arm around the boy and pulled him close and Teddy snuggled right up against him.\n\n\"Night, Shell. I love you,\" he said to his sister.\n\nShe didn't want him to know she was fighting back tears so she took a slow, deep breath to steady herself before saying, \"Goodnight, Teddy. I love you.\"\n\n\"Goodnight, Mr. Mullens,\" he said before adding, \"I love you.\"\n\n\"I love you, too, Teddy,\" Lloyd said fighting back tears of his own. \"And now that we're best friends, maybe you should call me Lloyd, okay?\"\n\n\"Cool!\" Teddy said before putting his arm around the big man's shoulders.\n\nHe was sound asleep in less than two minutes, but Lloyd just laid there taking it all in. It was as though he finally had the family he'd always wanted but had been to busy to make. He fought off several sharp stabs of guilt for having made so many huge mistakes with Katie knowing there was nothing he could do to change them. But he could and did vow then and there to never make them again.\n\nHe had no idea how much time passed before Shelby quietly asked, \"Are you awake?\"\n\n\"Yes,\" he said very quietly.\n\n\"This is really nice,\" she said.\n\n\"Yeah. It really is, isn't it?\" he agreed.\n\n\"I would love to go inside with you, but....\"\n\n\"No, this is fine,\" he told her truthfully. \n\n\"Are you sure?\" she asked reaching over Teddy for his hand.\n\nHe took and said, \"I'm sure.\"\n\n\"Goodnight, Lloyd,\" she said sweetly as she interlaced her fingers with his.\n\n\"Goodnight, beautiful,\" he told her. \n\nHe was as surprised as she was when he heard himself say, \"I love you, Shelby.\"\n\nShe ran her thumb over his knuckles then choking back tears again said, \"I love you, too, Lloyd.\"\n\nHe slowly raised up and without another word being spoken, leaned over Teddy and kissed her goodnight. \n\nIt took him a second to remember where he was when he woke up. He pressed a button on his watch and it said 05:32 as it was still set for 24-hour time.\n\n\"Gee, I slept in a whole 32 minutes,\" he said to himself as he unzipped his sleeping bag knowing there was no going back to sleep.\n\nHe quietly slipped out of the tent then went inside and started a pot of coffee before heading to the bathroom to brush his teeth and take a leak.\n\nAs he sat down with the cup of coffee he heard the door open and saw Shelby coming inside.\n\n\"I have to pee and not one word,\" she said with a smile.\n\n\"I'll get you a cup of coffee,\" Lloyd said standing back up.\n\nShe thanked him for it when she came back out then smiled before she stood on her toes and kissed him.\n\n\"Good morning,\" she said sweetly.\n\n\"Yes, it is,\" he told her.\n\nShe sat close to him as they sipped their coffee and when they were finished she said, \"Teddy is the world's soundest sleeper. There's no chance of him waking up on his own this early.\"\n\n\"Oh, really?\" Lloyd said. \"That's very interesting. And why may I ask are you telling me that?\"\n\nHe turned to look at her pretty, young face and tried not to smile.\n\n\"If I have to tell you then there was no reason for me to mention it,\" she said trying to sound tough.\n\n\"Tell me what?\" he said as he touched his forehead to hers.\n\n\"Well, I still owe you part of a hug and after last night, I at least owe you the same thing you gave me,\" she explained as though she were talking to a child.\n\n\"Ah, right. You did seem to enjoy that as I recall,\" he said now smiling happily.\n\n\"Oh, I did,\" she assured him. \"And you are gonna love the way I pay my debts.\" \n\nShe stood up and grabbed his hand and as they walked to the bedroom she told him, \"I am about to blow your mind.\"\n\nShe stopped at the foot of the bed then pushed him back. As he sat there with his legs dangling, she reached for his underwear then said, \"On second thought, I'm about to blow something else.\"\n\nBy the time Teddy stumbled into the house informing them he had to pee, they'd made love twice, showered together, and had breakfast.\n\n\"Do you want bacon and eggs or pancakes?\" Shelby asked cheerfully when he came out still bleary eyed.\n\n\"Can I have both?\" he asked, his hair a matted mess, causing another round of laughter.\n\nAs Shelby and Teddy got ready to leave after breakfast, she asked Lloyd, \"So now what?\"\n\n\"So now I want to see you again. Soon. And often,\" he told as he ran his hand up and down the back of her upper arms.\n\n\"Are you sure you really want to get involved with me? With us?\" she asked genuinely needing to know.\n\n\"I don't have college degrees and I'm not the most eloquent guy around, but the answer to your question is unequivocally yes. Or maybe\u2014I already am?\"\n\nHe smile then said, \"My question to you is are you sure you want to get involved with someone twice your age?\"\n\n\"I don't believe I've ever told you how old I am,\" she said. Her eyes were happy and bright and Lloyd loved seeing her this way.\n\n\"It won't matter to me as long as you're over 18. You are over 18, right?\" he said knowing she was.\n\n\"Yes. I'm over 18. In fact, I just turned 22.\"\n\nShe got very quiet and said, \"Another horrible thing Teddy's had to deal with was my parents referring to him as their 'mistake' or 'accident.' I did my best to protect him, but I moved out as soon as I graduated from high school. Maybe I was being a coward leaving my brother behind in the devil's den, but I just wanted to get away from the madness, you know?\"\n\n\"You've proved your love and your dedication to your brother many times over, Shelby. Don't beat yourself up for the things you might have done but didn't. Lord knows I've become quite an expert at that since Katie died.\"\n\n\"Can you tell me what you mean by that?\" she asked.\n\nFor the first time he poured his heart about the way he'd neglected his wife, her depression, his refusal to stay home, the endless prescriptions from various doctors, and then her suicide.\n\n\"Oh, my gosh, Lloyd. I had no idea,\" she said sympathetically.\n\n\"Nor would I have known you'd lost your parents or had such a difficult time growing up or that Teddy has been through so much. But that's life, you know? It can be the sweetest thing ever....\"\n\nHe smiled at her and touched her face when he said that, \"Or it can bring you to your knees and make you beg for mercy when it keeps coming at you relentlessly. There's no rhyme or reason why it does what it does. It just does its thing and rolls on. We either pick up the pieces or we fall apart. Katie couldn't handle what she must have felt was the universe's constant pummeling and she found her way out. You and I are still here slugging it out. And maybe, just maybe, the universe put us together to make life a little...sweeter...for all three of us.\"\n\n\"I'll take your brand of wisdom over a college degree any day,\" she told him sincerely. \n\nShe looked down for a moment then said, \"Lloyd? When you said, you know, 'I love you, Shelby', you were just being silly, right? You know, like at the end of The Waltons when they all said goodnight to each other.\"\n\n\"Yes, I was being silly in the sense that I was looking for an excuse to say it, but I wasn't being silly as far as how I feel about you, Shelby.\"\n\n\"This feels like I'm living in some kind of dream where my whole life just suddenly turned around and I can't even catch my breath let alone understand how or why it happened.\"\n\n\"Then don't think so much,\" he told her with a tender smile. \"Just let it happen. I'm just as surprised as you are. I had no idea I was gonna stop and watch a Little League game. I just wanted to blend in and feel like I was a part of society or something. And for once the universe did me a solid by sitting me down next to the most amazing woman I've ever met.\"\n\n\"If I don't leave now I'm gonna start crying and I don't want to have to explain why to Teddy,\" she said feeling overwhelmed with love and emotion for the first time in her life.\n\n\"Shelby? Before you go, will you do me a favor?\"\n\n\"Of course,\" she said barely able to speak.\n\n\"Let me take care of you. Please? You spend all your time and energy taking care of Teddy and it's amazing, but no one ever takes care of you. I want to be the guy who does that. So...will you let me?\" \n\nHis words were soft and tender and sincere and as Shelby listened to them and watched his eyes, months and years of sadness and anger and hurt all came pouring out. She laid her head on his shoulder and cried then sobbed then cried some more until she was shaking and trembling.\n\nThrough it all Lloyd just held her and stroked her hair. When the sobbing stopped and she was breathing almost normally again he said in a playful way, \"So was that a 'yes'?\"\n\nShe raised her head and looked at him not caring how she looked and said, \"I want to say something witty and be all tough but the truth is I'm giving everything I've got to give and I would love to be taken care of for a while.\"\n\nShe was so honest and sincere it nearly made Lloyd tear up, too.\n\n\"Nothing would make me happier,\" he told her. \"And, Shelby?\"\n\n\"Yes?\" she said very quietly.\n\n\"I do love you.\"\n\n\"I have to stop crying or I'm gonna get a migraine,\" she said.\n\n\"So...you don't want me to love you?\" he teased knowing what she meant.\n\n\"I hope you love me because...because I'm falling in love with you, Lloyd.\"\n\n\"Hey. I told you I would never hurt you or Teddy.\"\n\nHe raised her chin then asked, \"Do you believe me?\"\n\n\"Yes,\" she said quietly as he looked into her eyes.\n\n\"Okay. Then go home. Relax. Read a book. Watch TV. I'll come by later on and bring you back here,\" he said.\n\n\"And? she asked.\n\n\"And then I'll start taking care of you,\" he told her as though that would answer all her questions.\n\n\"What? We just...move in with you?\" she asked trying to understand.\n\n\"Pretty much,\" he told her with a smile. \"I mean, who else are we trying to impress? Family? Friends? Co-workers? Please. So why wait?\"\n\n\"But you don't really know anything about me. What if you hate my politics or what if I like to turn the toilet paper roll the opposite of the way you do? What if....\"\n\n\"I warned you I tend to go 'hog wild' on things,\" he reminded her in the kindest way. \"I'm a what-you-see-is-what-you-get kind of guy, Shelby. This is me 24/7 day in and day out. I'm a very simple man. I'm loyal to a fault and I'm...I'm falling in love with you, too, and I love that goofy kid in the bedroom laying Xbox. So turn the toilet paper however you want. Vote for whomever you want. I don't care about any of that.\"\n\n\"Can I have some time to think about it?\" she asked.\n\n\"Take all the time you need. But please let me see you in the meantime, okay?\"\n\n\"Okay. Deal,\" she said sweetly before kissing him. \"I should go grab that goofy kid brother of mine and take him home. Or...back to the apartment we live in. But I should probably wash my face first, huh?\"\n\nShelby spent the next day sitting at home just thinking and asking herself questions all day long.\n\nWas Lloyd really the one? Was he perhaps just a ready-made 'bank' to end her financial woes? She was sure age wasn't an issue with him even though she'd never dated anyone over 25 before. She also felt she could trust him and that he really had 'learned his lesson' from the way he'd neglected his wife. And yes, she really did feel like she was in love with him and she knew Teddy had the biggest case of 'hero worship' he'd ever experienced.\n\nSo what was bugging her so much? The only thing she could come up with was how fast it all happened. And yet she couldn't help but wonder if good things couldn't happen just as quickly as the bad. Her parents had been wiped off the face of the earth in seconds. Lloyd's wife had ended her life in minutes. Why couldn't love come along and make itself known in a short period of time?\n\nShe finally concluded that she hadn't accepted a marriage proposal by agreeing to move in, and although Teddy could be deeply hurt were Lloyd to turn out to be someone else, she decided to follow her instincts.\n\n\"Lloyd?\" she said when he answered the phone a few minutes later.\n\n\"Hey, Shelby. How are you?\" he asked with obvious enthusiasm.\n\n\"I'm great, actually. How are you?\"\n\n\"Missing you,\" he replied.\n\n\"Yeah, same here,\" she said sweetly. \"Listen. Is there still room in your house for two other people?\"\n\n\"Really? Are you serious?\" he said as he realized how much he was sounding like Teddy.\n\n\"Yes, I'm serious! I've been thinking about this all day, and although I do worry about Teddy, I'm...I'm trusting you,\" she told him in the kindest voice.\n\n\"I swear I won't let you down, Shelby. Not now. Not ever.\"\n\n\"And...I believe you, Lloyd.\"\n\nThere was a short pause before she told him, \"And I do love you.\"\n\n\"I love you, too, Shelby. When can I come over and help you move?\"\n\n\"Well, I know tomorrow is Memorial Day. Would that be too...inappropriate?\"\n\n\"Um...no. It would be...memorial. Epically memorial!\" he told her.\n\n\"Okay. Then I'll see you tomorrow morning.\"\n\n\"Yes, you will!\" he told her.\n\nShelby waited until Teddy got up that Monday morning to let him know they were moving.\n\n\"Where to?\" he asked. \"Will I still be able to see Connor at school?\"\n\n\"Yes, you'll still be able to see Connor, but school will be out in another week. Now, as to where we're going, how would like to live at...Lloyd's house?\"\n\nTeddy's sleepy eyes grew wide as saucers.\n\n\"Are you telling me the truth, Shell?\" he asked unable to believe what he'd just been told.\n\n\"I am. In fact, he's coming over here this morning to help us move so you need to eat some cereal then go start packing up.\"\n\n\"Yes!!!\" he said. \"Can I can go pack now?\"\n\nShelby smiled and said, \"Sure. Go ahead. We can get something to eat later.\"\n\nJust minutes later, in fact, Lloyd showed up and again literally swept Shelby off her feet as soon as he saw her.\n\n\"Put me down!\" she said after screaming happily.\n\nThe noise brought a now-fully-awake Teddy out to the living room who said, \"Guess where we're moving to, Lloyd?\"\n\nHe went over and scooped Teddy up and threw him over his shoulder like a sack of potatoes. The boy squealed with laughter as the man he looked up to spun him around several times as fast as he could.\n\n\"Am I gonna have my own room?\" Teddy asked once Lloyd set him down.\n\n\"You sure are,\" he told him.\n\n\"Cool! Can I have Xbox in my room?\"\n\nShelby gave him a look and he put his hands up and said, \"Okay. Okay. Just asking.\"\n\n\"We'll talk about it later, okay?\" Lloyd told him. \"For now, we need to get all your stuff ready to go. I picked up a bunch of boxes from the moving company so what do you say we all get crackin'?\"\n\nIn less than three hours, every single thing they owned was packed up or otherwise ready to do. It only took two trips in the Tundra to move it all, and by 6pm nearly everything had been put away.\n\nLloyd sprang for Subway sandwiches for lunch after making sure fast food was okay. Shelby had laughed and told him it was more than okay. She even said okay to pizza as they were too tired to go out, and no one wanted TV dinners again.\n\nTeddy explored every nook and cranny of the house and the garage and by 9pm he was exhausted and fell asleep in his new bed in minutes.\n\nAs Lloyd and Shelby checked in on him he said quietly to her, \"I'm so glad you guys are in my life.\"\n\nShe turned around and held him tight as she said, \"So am I. I don't know who I'm happier for: me or Teddy.\"\n\n\"All I can say is I feel...I feel whole again.\"\n\n\"Yeah. That's a great way to describe it. Our lives have been so...fractured. I...I was beginning to wonder if I'd ever find someone or even be happy again.\"\n\nHe pulled away and looked down into her pretty eyes and asked, \"Are you happy, Shelby?\"\n\n\"Yes. Very,\" she told him. \"Happy and content. I can't explain why, but this just feels so right, you know?\"\n\n\"I do. I'm sure most people would think we acted so fast we're being irrational, but we're not most people.\"\n\n\"No. No, we're not. Most people haven't been through what we've been through. But even more importantly, this feels right just because of who you are, Lloyd. Never in my wildest dreams did I imagine myself falling in love for someone, you know, so much older than me, but then again, I never imagined meeting anyone like you.\"\n\n\"No, I get it. I don't think I'd have been looking for anyone under, say...30 or so...just because...well, I'm not sure why. I just don't think I would have. But I am so incredibly thankful I decided to stop and watch a baseball game that day. If I hadn't....\"\n\n\"Don't say it,\" she said as she laid her head in the crook of his neck. \"I don't even want to think about that.\"\n\n\"Then we won't,\" he told her. \n\n\"How about we stop talking and maybe start...loving?\" she said with a smile as she looked back up at him.\n\n\"Hmmm. I think I could be talked into that,\" he told her before kissing her softly.\n\nShe closed her little brother's door then took her lover's hand and led him to their bedroom where they made love with abandonment as need and want and lust consumed them.\n\nAs she lay in his arms she knew she'd made the right decision for her and her brother. She couldn't know the future, but she was as confident as she'd ever been that this was real and that it would last.\n\nAs she lay there just thinking and dreaming, Lloyd asked something she'd also been thinking about lately.\n\n\"Do you want to have children, Shelby?\"\n\nShe raised up and smiled at him before saying, \"Yes. Very much. Do you?\"\n\n\"I do,\" he told her. \"I really, really do.\"\n\nHe smiled back then said, \"I guess in a way I already have one, huh?\"\n\n\"You do,\" she said sweetly. \"Are you really okay with that?\"",
        "\"Oh. I am absolutely thrilled with that. In fact, there are so many things I want to discuss with you, but they can wait. With one exception.\"\n\n\"What's that?\" she asked before laying her head back down on his thick, muscled chest.\n\n\"I'd like to get braces for Teddy as soon as possible. No later than right after the end of the school year.\"\n\n\"Lloyd, I can't ask you to spend that kind of money this soon. We have so many other things to....\"\n\n\"But none more important than Teddy,\" he told her in a way that nearly made her tear up.\n\n\"No. Nothing's more important than him,\" she agreed.\n\n\"I...I just want you to know I'm not with you for your money, Lloyd. I don't care what you have or don't have.\"\n\nShe looked back up at him and told him, \"I'm in love with you and you alone. Okay?\"\n\n\"Hey, if I had any inkling you didn't or that I was a...a bank account...I'd never have asked you. Besides, it's not like I've got a fortune anyway so if you did move in with me for my money, you're going to be very unhappy real fast.\"\n\nShe kissed him then said, \"I love that you're so generous. It just might take me a while to feel comfortable with letting you do nice things for us. So don't be upset with me if I need some time to adjust to being taken care of, okay?\"\n\n\"As I said before you can have all the time you need. For anything and everything. I'm just so glad you're here with me. Both of you.\"\n\n\"Yeah, I'm kind of happy about that, too,\" she told him. \"And the fact that you're as good in bed with me as you are with being good to my brother is another um...huge advantage.\"\n\nShe reached for him then said, \"Oh, my! Speaking of huge...what is this growing so big in my hand?\"\n\n\"I don't know but I think he likes you. A lot,\" Lloyd told her before rolling her over and making love to her again.\n\nJust before they fell asleep Shelby said, \"Tomorrow I have to go back to work and Teddy has to go to school.\"\n\n\"I'll need permission to pick him up, but I'd love to drop him off in the mornings,\" Lloyd said.\n\n\"That would help out so much,\" Shelby said appreciatively.\n\n\"Honey?\" he said using the term for the first time.\n\n\"Yes?\" she answered happily.\n\n\"I will never, ever try and tell you what to do. You can work, not work, or anything else, but I want you to know you can cut back on your hours if you want to.\"\n\n\"It would be nice to only have one job,\" she told him. \"If you're sure....\"\n\n\"I'm very sure. I'd love to have you home as much as possible, but that's being selfish, I know. So do whatever you think is best, okay?\"\n\nShe ran her hand over his chest and said with a happy smile, \"I think I hit the freaking jackpot.\"\n\n\"I know I did,\" he told her before hugging her close then rolling over to go to sleep.\n\nTeddy couldn't wait to ride to school in the 'Black Beast' and he'd called Connor to let him know to watch for him. When his best friend saw the huge, black Tundra pull up in the drop off area, he was standing there waiting and called out, \"Wow!!!\"\n\nLloyd waved to him and said, \"We'll have to have you come spend the night one of these days, Connor.\"\n\n\"Sure thing!\" he yelled back. \n\nThe window was down and Lloyd heard Connor ask, \"Is that your new dad?\"\n\nHis answer caused a lump to form in his throat.\n\n\"Well, not really. But last night I prayed that he would be so...it's just a matter of time.\"\n\nThat same day Shelby quit her second job and was now working a more normal 40 hours a week. Just enough to be able to be able to keep her healthcare benefits which unfortunately didn't include dental. \n\nThat evening she and Lloyd sat down and went over their finances and Shelby felt awful knowing the only thing could bring to the table was credit card debt. She was about $7,500 in debt on two cards, but Lloyd had a plan for paying that off in three months and paying for Teddy's braces.\n\nThe 'bad news' was he told her he'd have to go back to work at some point while the good news was he wouldn't need to so right away. With their combined incomes, Shelby would be hugely better off each month, and Lloyd would still come out slightly ahead even with paying for those two major items. After assuring her money didn't matter to him, either, and that it was there for them to use, Shelby did her best to let go of her guilt and in its place feelings of deep gratitude, love, and appreciation for this kind, caring, older man washed over her as she realized she really had 'hit the jackpot.'\n\nThat next weekend Connor spent the night, and the boys stayed out in the tent laughing and having fun in a way Shelby could never remember. Inside, she and her handsome boyfriend ate popcorn and watched movies and kissed like teenagers on the couch then made love like adults in their queen-sized bed after the boys fell asleep.\n\nOn Monday, Teddy got his teeth checked by an orthodontist who said he was the perfect age for braces and a week later he was wearing them. Shelby tried to insist he could have a tin grin for the next two years, but Lloyd won out and Teddy left with a set of clear braces that were only a few hundred dollars more.\n\nBy the 1st of July Lloyd had his resume done by a professional, and he started making some calls. He was pleasantly surprised to be offered two different, very well-paying jobs (both started at $80k) over the phone without even interviewing. He kept looking until he found something he thought would be perfect for his situation\u2014a security consultant who could work from home most of the time with a bare minimum of travel involved. It paid substantially less than the other jobs, but they required him to gone for weeks at a time\u2014much of it in Afghanistan, and that was something he would never do again. So by phone alone, Lloyd had a nearly perfect job that paid just under $50,000 a year with full benefits.\n\nThey were sitting outside while Teddy and Connor played in the back yard on the evening of 4th of July waiting for a local fireworks display to begin when Lloyd shared the good news about the job he wanted to take.\n\n\"What do you think, honey?\" he asked Shelby.\n\n\"I think it sounds perfect, sweetheart,\" she told him. She smiled then said, \"Just like you.\"\n\n\"Oh. Now who's the king of corn?\" he teased.\n\nShelby laughed then informed him, \"For your information, that would be the queen of corn.\"\n\nLloyd laughed too, then said, \"There's something else I wanted to ask you about.\"\n\n\"Sure. Ask away,\" she said having no idea what was coming next.\n\nHe took off his Navy Chiefs ball cap then pulled his chair around in front of hers.\n\n\"Shelby? You know I'm not a wordy guy and I'm not all that good with speeches.\"\n\n\"Then don't make one,\" she said sweetly. \"Just tell me what's on your mind.\"\n\nHer heart stopped when he pulled out a small, blue box and got down on one knee.\n\n\"I know I should have taken you to a fancy restaurant, but that's not who I am.\"\n\nShelby's hands were shaking and covering her wide-open mouth.\n\n\"I'm a simple man who doesn't need a lot. I have the two people I love the most right here with me and I want to spend the rest of my life with one of them and be a father to the other one. So...Shelby Claypool? I love you with all of my heart. Will you....\"\n\n\"Yes, yes, YES!!! Just put the damn ring on my finger!!!\" she squealed cutting his proposal short.\n\nLloyd laughed and did as he was told causing Shelby to shriek louder than she ever had in her life as she literally jumped his bones knocking him to the ground on his back before she started kissing on him.\n\nThe boys heard the scream and came running around the house to see what happened and by the time they got close to the happy couple Teddy said, \"Come on, Connor. It's nothing. They do this all the time.\"\n\nThe newly-engaged couple laughed loudly before Lloyd called the boys to come back.\n\n\"Your sister has some news to share with you, buddy,\" he told he boy who now smiled proudly knowing he would one day no longer have the teeth he'd been so ashamed of for so long.\n\n\"What news?\" he asked. \n\nHe saw his sister grinning from ear to ear and tried to guess. \n\n\"Am I getting a PS3?\" he asked excitedly.\n\nShe and Lloyd laughed again before she said, \"Close your eyes.\"\n\nShe stood up and held out her hand then said, \"Okay, open them.\"\n\nIt took him a second to figure out what she was showing him, but as soon as he understood, his face lit up like a Christmas tree.\n\n\"For reals?\" he said asking both of the adults.\n\n\"For reals,\" Shelby told him. \"We're going to be a real family, buddy.\"\n\n\"Speaking of which,\" Lloyd said. \"Come here for a minute, okay?\"\n\nTeddy came over while Connor stood there watching. \n\nLloyd pulled him down onto his lap and said, \"I haven't formally asked your sister yet, but something tells me I won't have to.\"\n\n\"Ask what?\" he said looking at both of them.\n\n\"Well, I was wondering if you would let me adopt you so I can officially become...your dad.\"\n\nThis time, Teddy got it immediately, and he didn't care who saw him as he put his arms around his 'dad's' neck and began to cry. Lloyd hugged him tightly until he cried it all out and could breathe again.\n\nTeddy sat up on Lloyd's lap and said, \"Can I call you Dad now?\"\n\nLloyd glanced at Shelby who'd been crying, too, and when she nodded Lloyd said, \"Nothing would make me happier...son.\"\n\nTeddy dried his tears with the sleeve of his shirt then asked very seriously, \"Do I have to call you 'mom', Shell?\"\n\n\"Oh, my gosh. I never even thought of that,\" she said. Her initial reaction was to blurt out, \"Don't you dare!\" but she was glad she hadn't.\n\n\"Hmmm. How would you feel about that, Teddy?\" she asked sweetly as she next to him and put her hand on his back.\n\n\"Well, you're a better mom than Mom was so...I wouldn't mind,\" he said innocently.\n\nShe looked at Lloyd and said, \"Legally, I think we need some help on this one. I'm not sure how all that would work.\"\n\nShe looked back at Teddy then said, \"But other than the legal part, nothing would make me happier than to be you mom so...if you want to call me Mom, I'd like that very much.\"\n\nTeddy put his chubby arms around both of their necks and said, \"I love you, Mom and Dad.\"\n\n\"We love you, too, son,\" Shelby and Lloyd both said.\n\n\"Can I go play now?\" he asked the way any normal ten-year old would.\n\n\"Sure. Of course,\" his mom said.\n\nAs they walked away, Teddy said to Connor, \"This is the best day of my life\u2014EVER!\"\n\n\"Mine, too,\" Shelby told her fiancee.\n\n\"Yeah. Same here,\" Lloyd told her.\n\nHaving no real family and only a handful of friends, Shelby had her only aunt serve as her maid of honor and her only two remaining friends serve as bridesmaids for the August wedding. Lloyd's mother, who fell in love with Shelby the first time she met her, along with a dozen of his closest former teammates who flew in, were there for Lloyd. All of them wore their uniforms and did a sword arch for the happy couple after they said 'I do'.\n\nOther than that, it was a simple ceremony done at the baseball field were they first met and where Lloyd had shown his future son how to throw a curveball.\n\nLloyd and Shelby brought their son back to the field the following year each week during baseball season, and then brought Teddy's little brother with them the year after that.\n\nBy then Teddy had his braces taken off and he had a perfect smile just like his dad, the man he looked up and admired more than any other. Able to buy better food, he'd also been able to lose most of the baby fat that had caused the rest of the vicious teasing.\n\nNo longer 'Teddy' Ted Mullens was considered a 'hottie' by the time he started high school, but thanks to the example set by his parents, he remained a quiet, humble guy eager to help anyone in need. \n\nThe year after his brother was born, Ted had a baby sister, and by the time he graduated from high school he'd lettered in three sports, kept up a 3.5GPA, and had dated quite a few very pretty girls.\n\nNo one was surprised when he told everyone he knew he decided to join the U.S. Navy and that he wanted to become a Navy SEAL just like his adoptive father. And anyone who knew Ted Mullens had no doubt that he would.\n\nThe proudest day of his parents' lives came the day retired Navy Senior Chief Lloyd Mullens flew his family to California where he wore his uniform for the first time since retiring. He did so because he would be pinning the coveted Trident on his son's chest as he too, joined the ranks of the military's most elite group of warriors.\n\nShelby Mullens wiped away many tears that day as she sat there in a beautiful dress as she watched her still-handsome husband and very handsome son standing there together in their white uniforms for the first time as Navy SEALs. \n\nAs she looked on, she smiled when she recalled the day that handsome older man asked if there was room to sit next to her, and the way he'd taught the boy who'd been her little brother to throw a curveball. That was the day her life had begun anew, and she couldn't possibly have happier or more proud as she sat there between her other two children who only knew that Ted was their big brother just as much as Lloyd and Shelby Mullens were their mother and father. "
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/curveball"
}