{
    "title": "The Pirate King Ch. 08",
    "pages": [
        "You didn't really think I'd make you wait three months, did you?\n\nOne more short chapter on the ship, then we're heading into *uncharted waters* for a bit. Who's ready for some new characters, new settings, new adventures? \n\nReleases are gonna be happening, donno when, keep checking in :)\n\nAlternate title: a parade of new shirts\n\nAs always, comments and feedback much appreciated. Peace and love to all of you :) \n\n****\n\nThree months. \n\nI woke with that thought in my body, on my skin, in my soul. It ached worse than any ache I had ever worn, hurt more than any strike I had ever taken, more immediate than any pain that I had ever existed with. I gasped, my soul emptying, my body wishing to flee in the face of this new sensation, and I think I might have died right then and there except for the Captain's head resting warm on my chest, his arm loose over my stomach.\n\nGods, the Captain. \n\nI rolled on my side and pulled him tight, bringing his body into the hollow of mine. I needed him to fill all the holes that were spreading through my soul; I was becoming nothing but holes, and I knew this feeling of completeness was not one I would find in my life for much longer. \n\nGods, I thought again, my soul falling into the sea, the chill of it sending needles through my entire body and the worst kind of aching, painful sorrow into my bones. The Captain.\n\nHe stirred in my arms and I pulled him tighter. \n\n\"Sailor,\" he murmured. At his voice everything in me died, I died again and was reborn at once, and I felt a sob begin to build in the back of my spine. I shut my eyes, trying to keep it in, not wanting to disturb this man, this beautiful, perfect man.\n\nI felt his hand touch my face. Then his lips traced against mine. Three months, I tasted on them, and the sob broke through and I began to cry.\n\nHe didn't say a word, just held me in his arms and laid kiss after kiss on my face and shoulders and chest, letting me know that he was there, that I was safe, that yes, three months would happen but it wasn't happening yet, that we still had time, that I still had him. \n\nIn time, the sobs had all left my body. I lay in his arms, feeling spent. \"I don't want to go,\" I whispered to him.\n\n\"Then don't.\" \n\nIt sounded so simple coming from his mouth. I almost gave into that, almost let myself believe that I could stay, that things would be alright, but even as I felt my body sink into that possibility my mind balked.\n\n\"You know I can't,\" I responded, and I felt him sigh. Even if we had already won every sailor on the ship, even if I already had all the information that I needed, there were still people that I needed to see. I buried my face in his hair and breathed deep. \"You could come with me,\" I tried, knowing that wasn't an option, had never been an option. Not so long as he had a ship that needed him, a crew that looked to him for guidance and protection. He would never leave them. Not even for me, and it was cruel of me to ask.\n\n\"Sailor...\" the Captain said, his voice careful and filled with the same bone crushing sorrow that whipped through my body.\n\n\"I know,\" I told him, so that he would not have to voice it. I pulled him as close as I could get, feeling his skin against mine, his breath skimming my chest. \"I know.\"\n\nWe laid there, entwined, together, but we weren't close enough. Not nearly close enough. My fingers tightened on his back, and I felt his breath hitch. \"My love,\" he whispered, and I knew he thought it too, needed it too, heard it in the way his voice was rough and broken and shot through with the same need that was drilling holes in my soul. \n\nI didn't answer, just dug my fingers into his back further. He kissed my shoulder, his breath shaky. \"Need you,\" I heard him whisper, his hands becoming desperate on my hips. I rolled into him and he gasped. His fingers fumbled against my skin and I pressed my lips against the top of his head, my breath hard, my need so strong I was dying yet again.\n\nThe next thing I knew he was lifting away from me. I half whimpered, half growled and pulled him back, unwilling to lose this part of me, the home that I had finally found. He let me collapse his body back down, his lips landing against my my neck. I moaned at the contact, feeling the intensity of his breath against my skin.\n\n\"My love,\" he said, trying to sound patient, but the desperation in his voice made every word a new edge to rub up against my delicate skin. \"The lube.\"\n\nI made a noise of frustration but didn't loosen my grip. Yes, I needed him, and yes, we needed the lube, but did he have to go?\n\nHe waited a moment for me to work through my thoughts, then lifted himself away again. This time I let him, although I voiced what I felt about it and I heard him make the same noises as he moved across the room.\n\nWhen he returned I had curled up into a ball, trying to preserve the warmth he had left, the feel of him on my skin, unafraid that he should see how vulnerable he had made me, needing him to see how vulnerable he had made me. How lost my soul was without him. \"Love,\" he murmured, placing his hand on my shoulder, and my body pressed into him without me having to tell it to. He rolled me onto my back and I hated losing that moment of warmth but then I saw him and it was alright, it was all okay, because he was there and he was perfect and three months but I wouldn't think of that, because I had him now and he kissed me and I kissed him back and tried to lose myself in him. \n\nHe crouched between my knees, his hands above my shoulders, his lips careful and harsh and not enough against mine and I needed him more, needed him closer still and I was so happy in that moment that we had slept without clothes as I felt his cock slip hard against mine. \n\n\"Sir,\" I started, but his hand was already where I needed it, and his fingers spent only the briefest moments inside of me, slick and not enough before he pull them out and I was empty, not enough not enough I wanted to cry but then he pressed inside of me and there was no warning, there was no preparation, and I cried out because there was pain but it was nothing, nothing compared to what I was carrying inside of me and I needed this, so when he gasped in realization and tried to pull out I wrapped my legs around his waist and slammed him all the way into my body, and he cried out with me.\n\nOur lips met as he pressed so deep inside of me, our soul pressing up against each other, and then he was moving and I loved him for it, loved him for the way it felt so good and hated the way it knew this would be the last but I wasn't thinking about that so I pulled his lips to mine and made his breath my own. He was frenzied, there was nothing controlled or careful or delicate and I would have it no other way, could feel his need for me in his thrusts, and I pushed my body to meet his, pressed him against me with my legs and feet and our breathing was one, our heartbeat was one, our movement was one. I could feel his desire pushing up against my soul, the holes weakening, and I thought about holding together, fighting to stay whole but what was the point of being something I wasn't and then it fell apart for him, broke apart in his arms, and he gasped and I watched his soul break for me, and we remade ourselves around each other there in that bed, bits of the sea within of him, bits of the sky in me and when he came I was coming too became I was him, and he was me, and we could not have been closer and would never, ever be apart. \n\nAt the end he leaned above me, panting, and I held him like the delicate thing I was, kissing the tears from his cheeks. Neither of us said a word, just staring into each other's eyes. Finally I reached up and traced his cheek.\n\n\"Fuck,\" he said, and I had to smile. My fingers found their way to his lips and he kissed the pads of my fingertips, causing me to shudder. He collapsed to the side of me, his hands coming to rest just below my ribs, on my shoulder, and I returned the closeness by wrapping my arms around his waist and chest. \n\nWe laid like that for eternity, for not nearly enough time at all, before the Captain sighed and said, \"We need to get you cleaned up.\" \n\nI tightened my grasp on him and he nodded into my neck, understanding everything I needed to say in just that gesture. It took a long time but he coaxed me from the bed, pulling me to his washroom and cleaning me with fresh water. I could have done it easily myself, but I didn't want to lose his touch and his hands were firm against my skin and so I let him wash my body, moving as he instructed until I was shivering in the cool breeze. I relished his touch, his closeness, the love I felt in every moment and I never wanted it to end. \n\nBut nothing lasts forever and soon I was clean, and so he dried my body and pushed me back into the room. We found my breeches, abandoned the night before after my fall. He helped me into them, never letting his fingers leave my skin, skimming kisses across my body and sending my soul into rapturous shivers. He dressed as well, then, finding his clothes in the pile he had left, and I never let my fingers lose their contact with his body even as his skin became less and less for me. \n\nI needed a new shirt for the second morning in a row. If life with the Captain was going to be a parade of new shirts, I could deal with that. I would deal with anything if it meant being with him, feeling his hands on my skin, his breath against mine. We crouched next to the pile, his fingers wrapped lightly around my wrist and we sorted through shirt after shirt, pretending our indecision had everything to do with poor selection and nothing to do with drawing out the process. In the end he chose a thin black shirt, pulling it over my shoulders and settling it carefully. He didn't look me in the face as he laced up the chest. I stopped him halfway, wanting him to still have skin to touch, to see, then pressed my hand to his cheek. \n\nHe looked up at me and his eyes, oh all the gods. He carried everything in those eyes, every pain and every promise and it's a wonder that he didn't break right then, didn't collapse beneath the things he held. I had pulled him close to me and opened my mouth to tell him something, although I'm no longer sure what it was, when there was a knock at the door. \n\nBoth of us froze. We weren't ready. We would never be ready. Then the Captain made a small noise and tried to pull away, but I had his wrist in my hand and pulled him back to me, pulled his body as close to mine as these frustrating clothes would allow. I placed his hand on my bare chest and smoothed back his hair, the motion bringing my fingers to rest on his chin. His eyes searched my face desperately, and I tried my best to smile, but I knew it didn't work so I just rested my forehead on his and closed my eyes and breathed. \n\nThe knock came again. I squeezed his hand, once, and then we stepped away from each other.\n\nThe separation was shocking. I saw the Captain stumble as he made his way to the door and turned my head so that I would not run to him, but removing him from my vision just hurt more and hand flew to my chest.\n\nThat was how Finn found us, when the Captain opened the door - the Captain leaning on the frame for support, me unable to even look at him, unable to look away, stuck in a painful in-between that had me rooted to my spot, hand clutched to my chest. \n\n\"Cap,\" Finn said with a nod. The Captain nodded back wearily. This morning had already taken so much from us. How were we to survive any more? \"Ghost,\" he greeted, more quietly, and I turned my head away further.\n\n\"We're close,\" he told the Captain. \"You're wanted up on deck.\" There was a pause as he took us in. \"I'm sorry,\" he finished, and then he let us be.\n\nI was with the Captain as soon as the door was closed, pressing him against the wood and kissing him so deep I was a part of him, but  three months  I tasted it in him as much as I tasted it in myself and I wanted to kiss it out of him but I knew it was pointless because it was there, it was a truth, and we were going to have to deal with it. So instead I pulled back and kissed him gently, softly, carefully and yes the three months were there but I was coming back, it was going to be okay, we were going to be okay because he had me and I had him. \n\nAnother knock sounded, trying to break us from our kiss, but I wasn't sure that he knew it was going to be okay yet and I didn't move, pressing quiet kisses to his nose and eyelids, then moving just far enough away to look at him. His eyes were closed tight, his brows furrowed in that way that had made me love him in the first place. I kissed each brow in turn, feeling them slowly relax behind me, grateful that whoever was at the door had the presence of mind not to knock again. \n\nWhen I looked at the Captain's face again he looked less tense. \"Okay?\" I asked quietly, and he nodded. I hooked my arm around his waist and pulled his body into mine. His head came to rest in my neck, and I felt him breathe in deep. I kissed him one last time on the top of his head before opening the door. \n\nCookie stood in the doorway, a bowl of steaming porridge in each hand. He looked me up and down, scowling at the way I held the Captain. I held him tighter and felt him sigh. \n\n\"Breakfast,\" Cookie said. \"Thought you musta been hungry. Made it up early.\" \n\nI disentangled my hands from the Captain's body and accepted the bowls, murmuring my thanks. As I took the bowls the Captain ducked under my arm and spun away, moving further into the room away from the door, unwilling to be so close to someone who was not me, not yet. \n\nI watched him, worried. I needed him to be okay. I needed him to get these men under control, so that when I came back...\n\n\"Boy.\" I snapped my attention back to Cookie. He cleared his throat, shuffling his feet as though he wasn't quite sure what to say. \"You come back soon, now.\"\n\nI frowned. \"Three months, Alan.\" I thought he knew that; had I forgotten to tell him?\n\n\"Aye, lad, aye.\" He stood there for another moment. \"The island.\" \n\nMy eyes were wandering back to the Captain, leaning on the desk, hair spilling over his face. I couldn't tell where he was inside his head.\n\nCookie reached out and patted my shoulder awkwardly. I jumped at the sudden contact. \"You enjoy it now.\" Then he was gone. \n\nI didn't have time to think about Cookie's words. I quickly made my way over to the Captain, pressing a bowl into his hand hand a kiss to his cheek. \"Eat,\" I told him quietly.\n\nHe put the bowl down. \"I'm not hungry.\" He wasn't looking at me. \"Besides, they need us on deck.\"\n\nI wasn't hungry either, but I had a feeling I would need the strength. And I wanted a few more moments with the Captain, alone. \"They will wait,\" I said quietly, and settled on the ground. He looked down at me and I patted the floor next to me. There was an internal struggle and then he was there with me, my arm looped around his chest as I spooned the porridge into my mouth.\n\nThe silence and mundanity of the moment did the trick. When I had finished my breakfast the Captain was relaxed, leaning into me, his body remembering our connectivity and negating the worry in his mind. How could he worry when he was with me, when he was me? We were one. They couldn't separate us, not really. He was the sky, and I was the sea - we were forever, and eternal, and three months was nothing, and it would hurt and we would hate it but in the end it was going to be okay. \n\nBut it was not the end yet. And to know it in your body is not the same as to know it in your mind. All the same, we both were much calmer after our breakfast. I helped him to stand, then smiled softly at him. He didn't smile back, instead pulling me down for a kiss that completed me and ripped me apart all in the same motion. \n\nHe sighed as he let my head lift away. \"Okay,\" he said, and I squeezed his hand. And we turned and opened the door, and headed up to the deck. \n\n***\n\nThe midafternoon sun felt good on my face, and I focused on that. Or the sea breeze just on the harsh side of soft, or the sounds of gulls swooping through the sails. All of these things were good. All of these things were better things to focus on than the fact that soon, so very soon, I would be leaving the Captain's side. \n\nI sighed, leaning into the arms that held me. The Captain hadn't let me go since we'd left his room, always keeping at least one hand on me at any time. We were linked, in more than just the physical sense, and I think that the crew could sense that. No one dared to mention our proximity, not even Wicky, although he had made a noise and the Captain's hand had tightened on me and I wondered how much longer than man would be alive. \n\nUp here, on the deck, my departure looming large in our minds, the Captain tightened his grasp around me again. I turned in his arms to face him, putting my back to the sea. The sea would understand, would forgive it for this man.\n\n\"Three months,\" I reminded him. He nodded, stubbornly looking out past my shoulder towards whatever island they were putting me down on. I still hadn't asked; I didn't care. It didn't matter. Land was land was land, and I would leave it soon after they dropped me off anyway. I had things to do. Crews to amass. Ships to find, the best ship, the only ship worthy of the man I held in my arms and lungs and soul. \n\n\"Land!\" the cry went up. The Captain's eyes hardened. Men began to gather around us, knowing that the time was coming. I let my arms tighten for just a moment before I relaxed. This was not the end. This was just a moment; it would pass like all the rest. \n\n\"Three months,\" I said again, softer, and the Captain rested his head against my shoulder and sighed. \n\n\"Ghost.\" I looked up over the Captain's head. Natch stood on the other side of the rail opening, Finn at one side and Thron at the other, near ten men at his back. I knew there were more, milling about in the crowd, men from training and from gods knew where else, gods knew why else, who would lend support if the time came. \n\nI was happy to see them, happy to know that I had men here if I needed them, but only because it meant the Captain would be safe. I readjusted my grip and pulled him closer in my arms. \n\n\"We can take another vote,\" Natch said. \"We did the numbers; you could stay.\"\n\n\"You'll do no such thing,\" snapped Wicky. He might have been able to keep his voice still at the sight of the Captain and I, but at such words he could no longer hold his tongue. He would still be sour from the rum port, sour and aching and a little nervous, perhaps. \n\nGood. He should be. \n\nNatch ignored him, keeping his eyes steady on me. Waiting for my call.\n\nAnd what was my call? I felt the Captain stir in my arms and wondered what he was thinking; I kissed the top of his head to buy time. To stay here, the Captain tucked under my chin, wrapped up in my body, my feet on the deck of a ship and the sea wind in my hair. Men around me who would follow me. That was a dream. \n\nWicky stood nearby, too close, his arms loosely crossed and his fingers itching for his knives. The reality would be a fight. We would win, but it would hurt. Besides, I had people to see, places to go. \n\n\"It has to be this way,\" I whispered into the Captain's head. I felt him sigh. I lifted my mouth and told Natch. \"Three months.\" \n\nI'd be back. \n\nNatch nodded. Wicky sneered. \n\nThe Captain reached up, suddenly, and grabbed a handful of my hair. He yanked me down painfully, bringing my ear to his lip. I saw Thron start forward in surprise and managed to hold out my hand, even in the waves of sensation the Captain had brought upon me; I didn't want any misunderstandings. He could not know that this was the Captain's show of affection, his way of proving that he cares. When the Captain's words slipped into my ear, it was all I could do to not drop to my knees before him, right there in front of everyone.",
        "\"This island,\" he whispered, \"It's good. Got a villiage, everything you need.\" He paused. When he continued his tone was filled with concern, and worry. \"But not on this side. Wicky insisted that we drop you off here, rather than over near the civilization. I only agreed because I trust you. You can take care of yourself.\" He kissed just below my ear when he said that, and I shivered. \"We're putting you off near a small house. There is a man who lives there, and he will shoot you if you try to approach. I know you can deal with being on the island by yourself, and you won't need to go to the house. Right? Promise me I made the right call.\" He pulled my head back and searched my eyes, intense. \n\nI smiled at him. \"How many times have I told you. I will never let anyone hurt me.\"\n\n\"Not even an island?\"\n\nI chuckled. \"You couldn't do it. What chance do you think an island stands?\"\n\nHe cupped his fingers under mine and pulled me into a kiss, and the world melted around us. I wrapped my arms around him and pulled his body close. In what felt like no time at all, or maybe forever, he pulled back. \"Promise me,\" he murmured. Commanded. \n\nAnd I promised. What choice did I have. \n\nWe all stood, the only noise the snapping of the sail, as the island loomed closer and closer. \n\nA man in a house who will shoot me, I thought. But there were many men in many houses who would shoot strangers, surely. Wishful thinking. The breeze caught my lips and I thought I almost tasted something I recognized, for the briefest moment, before it was gone. I shook my head. I watched a reef pass on starboard and thought it looked familiar, but didn't all reefs look the same? \n\n\"Shoot me with what?\" I asked.\n\n\"What?\" The Captain had obviously been thinking of other things.\n\n\"The man in the house. What will he shoot me with?\"\n\n\"A crossbow.\" He gave me a hard look. \"Don't go near him.\"\n\n\"I won't let him hurt me.\" I kissed him on the forehead; and wasn't that island behind us part of a larger atoll? No, couldn't be, we couldn't be there. \n\n\"That isn't what I said,\" I heard the Captain return.\n\nOr was it? I squinted. \"Where are we, exactly?\"\n\n\"Sails!\" The men bustled to their work, leaving us alone. The ship slowed as we approached the shore. \n\n\"New Spain.\" He frowned at me. \"Why?\"\n\nBut it was, I was sure of it, and the reef had been the same, and the taste on the wind... \"Not the country, dammit, the\" - I turned, pulling myself from the Captain's arms and rushing to the rail. I leaned on the rough wood, needing the stability as I scanned the shoreline and at the sight I felt a warmth grow within me that I hadn't felt in years. \"My love,\" I whispered, and I felt the Captain come up behind me, his arms wrapping around my waist, and his warmth was at my back and this warmth was at my front and I nearly collapsed but I began laughing instead. \n\nFate, I thought, and another laugh escaped my lungs, the familiar air mixing with the pressure that had been there all day. How the tricks of fate bring us the things we need. \n\n\"Love?\" The Captain was confused, and probably concerned. I tore my gaze from the white beaches and that stupid, lopsided hut jutting out over the sea and turned to him, beaming. \n\nDid you know? I wanted to ask, but of course he hadn't, how could have have? And he looked so confused, so lost, that I laughed again and brought his lips up to mine, wondering if my enthusiasm, the wonder at the sight of these familiar shores could spill over from me into the Captain's body.\n\nI thought about all the things this meant, all the joy it would bring me. All the joy I would still lose. Fate, I thought a little more sadly, but this was good, this was wonderful, because I had given myself a month to find transportation and to get here and here I was, and that meant less time away from the Captain, and I beamed down at him even as he frowned up at me. \n\n\"Can you do it in two?\" I asked.\n\nHe was searching my face, those dark eyes lost, those brows so tight and I realized how confusing this must be for him so I leaned down and kissed him again, hoping that I could show him that it was alright, that everything was okay. When I pulled away he was shaking his head, but his face was less drawn together.\n\n\"Two months,\" I said, all the things that were mixed up in my chest tripping over each other as we drew closer to my home, my family, the parts of me I hadn't been able to see since I'd been killed and thrown into hell. \"Now that we're here, I only need two. Can you do it?\"\n\n\"Yes,\" he said, \"of course.\"\n\nI smiled, smoothing back his hair. \"Good.\" I kissed him again, differently, deep and careless and with my whole body. It wasn't a kiss goodbye, because I would always be with him, would always be there, and what was the point of saying goodbye when I would be with him again so soon? But I still kissed him with passion, and love, and sorrow and pain and all the things that come with parting and when I broke away from him he gave a little gasp like he'd never breathed air before. \n\nI rested my head against his and he tightened his arms around me. A noise caught my attention, and I lifted my eyes to find Cookie. He cleared his throat again, awkwardly. \n\nEnjoy it, I remembered him saying. \"You knew,\" I laughed, and he shrugged. \n\n\"Aye.\" He was staring at the shoreline with a scowl that was doing nothing to hide the trepidation that was growing behind his eyes. \"But I thought we'd be on the other side. Not here.\" He made as if to spit and then froze. His fingers etched sigils and marks of power in the air. \n\nMy eyes shot back to the beach. Oh, I suddenly realized. These men were not protected. And to be here, to be exposed - \n\n\"Your men must not step foot on this beach,\" I told the Captain. He caught the sudden edge of worry in my tone and looked up. \"Truly, you shouldn't be here at all, not without the proper preparations.\" My eyes roved the ship - how long could they spend in this cove unnoticed?\n\n\"My love, I don't understand -\"\n\n\"Please.\" I snapped my eyes back down to his. \"Trust me. You need to go.\"\n\nHis eyes were all over my face, and I wished I had time to give him the answers he deserved. \"Okay,\" he nodded, and I felt his hands tighten. \"Okay.\" \n\nTension moved to the back of my mind. I would not be happy until he had left fully, but I knew he would do what he needed to. I knew he could take care of himself. I turned again to lean on the railing and look out onto the sandy shores, the forest just behind.\n\n\"Lad,\" Alan warned me, and I knew I didn't have much time, knew that I should leave so that these men could get to safety, but I didn't want to go. My home warmed my front; the Captain my back. No; my home warmed both sides of me, and I suddenly realized that I was about to lose one part of this, that I was so close to having it all and it hurt, it hurt so much more that this was the way it had to be. The love of my life, here with my home, my family. A part of my family. And then gone. \n\nFrustrated, wishing, I looked up the shore and saw a small girl sitting there, watched her watch the ship. Saw her stand and wave and knew she knew I was home. \n\nFairly, she'd probably been expecting me, but. Still. I had to go. I had to leave the Captain and return to this part of my life. But one day, I thought. One day soon. \n\n\"I can't keep her waiting, love.\" I turned to him and grasped him by the arms. \"But one day we'll come back, and you'll meet her, okay? I want nothing more than that.\"\n\nHe stared at my wide eyes. \"Meet who?\"\n\nI grinned, and knew it was a silly grin, a sloppy grin, knew it looked ridiculous in my muscles but couldn't keep it from splashing across my face regardless. \"My daughter.\" I kissed him again. \"I think you'll really like her.\" \n\n\"Your...\" he looked out at the shore, eyebrows scrunched up, face so confused. I waited to see what he would say. \"What the fuck?\" \n\nI let myself laugh, knowing that meant that we were okay and that everything would be alright. I pulled him in for one last kiss, but it had to be short because Alan was hissing, \"Lad,\" and of course he was right to keep the ship safe but how foolish was I to worry about this man, this man who tasted like the sky and I pulled away and smiled. \"Two months,\" I told him, and he smiled back. \n\n\"Two months.\" And I pretended that he sounded more confident than heartbroken as I traced his cheekbone down to his lip and pulled away.\n\n\"I love you,\" I heard him say, and turned back for one last smile as I climbed over the railing and cast myself into the sea.\n\n***\n\nThe Captain did not flinch at the sound of the body hitting the waves, although many men did. They crowded the rails, exclaiming and shocked, faces turned to watch the strange visitor swim for shore. \n\nThe Captain did not join them. He stood, eyes trained on the shore, heavy brows made heavier by the sudden information placed on his head. Then he sighed. \"Natch,\" he called. \n\nA small form detached himself from the rail somewhat unwillingly. At the sight of the beckoning hand, he made his way towards the Captain with obvious trepidation. \n\n\"Aye?\" He said the word like a flinch.\n\n\"Did you know the sailor had a kid?\"\n\nNatch's head snapped back to the figure swimming away from the ship. \"Shit.\" \n\n\"Yeah,\" the Captain sighed, \"me either.\" He frowned for a moment more, then shrugged. \"Well, time to get out of here. We haven't put down anchor, have we?\"\n\n\"Uh...\" Natch looked uncertain. \"We're really just going to leave him? Here?\"\n\n\"It's what he asked.\" The Captain smiled at the boy before him. \"Well, hop to it. Get the men moving.\"\n\nNatch blinked into the words. \"I. What? Me? Where's Wicky?\"\n\n\"Wicky,\" the Captain said carefully, cooly, without a care in the world, \"has been relieved of his duties until I know that I can trust him again.\"\n\n\"Oh,\" Natch replied quietly. He laid his eyes on the brunette man, flanked by two much, much larger men. \"Does he know that?\"\n\nThe Captain grinned. \"Nope.\" He looked down at the smaller man beside him. \"And it's your official first duty to let him know.\" \n\nHe left Natch standing there as he went to give his orders to the rest of the crew.\n\nThe blonde boy watched him go, eyes wide, mouth slightly open. Then his eyes slowly turned back to the first mate - former first mate - and his heavily armed entourage. Nervous fingers worked the hilt of the knife ever-present at his side. \n\n\"Fu - uh - uck,\" he voiced, and headed over to break the news."
    ],
    "authorname": "nakamook",
    "tags": [
        "gay romance",
        "pirates",
        "gay anal"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-08"
}