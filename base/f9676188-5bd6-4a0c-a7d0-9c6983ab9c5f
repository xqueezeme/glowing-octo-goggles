{
    "title": "There and Back Again Ch. 069-070",
    "pages": [
        "Chapter Sixty-Nine: Reconciling Differences \n\nI must have dozed myself, because I woke to a startled gasp as Blake sat up and practically leapt off my bed. His hair was all stuck up on one side of his head, his expression groggy but horrified. \n\n\"Blake? What's wrong, kiddo?\" \n\n\"My Lady, I'm so sorry, I took your bed, and-\" \n\n\"Blake. Calm down, okay? I told you to sleep on the bed. And I'm just Sierra, remember? There's no need to be afraid. No one is going to hurt you anymore. I swear it.\" I pulled him over to me, wrapping my arms around his frail shoulders and hugging him. He was stiff for just a moment, and then seemed to relax and return the hug. \n\n\"I'm just so afraid all the time.\" He buried his face in my shoulder and his hands gripped my shirt. \n\nI hugged him tighter. \"You don't have to be anymore.\" \n\n\"But the Arlessa...\" \n\n\"Listen.\" I pulled him to half sit in my lap, as he seemed to be comforted by the contact. \"I have some stuff to talk to you about. But I want you to know that the Arlessa will never lay a hand on you again. No one will, or they'll have to face me, and I'm not afraid of the Arlessa, okay?\" \n\nHe nodded, seemingly reassured. \n\n\"So. First things first. Do you read or write at all?\" \n\n\"Sort of, my L- Sierra. My ma tried to teach me sometimes, when she wasn't working. But we didn't have any books or things, so I'm not very good.\" \n\n\"Okay. Tell me, have you ever thought about what you'd do, if you could do anything? Not like being King - obviously that's impossible - but I mean, have you ever wanted to be a knight, or a scholar, or anything?\" \n\n\"I've never thought about it.\" He scrunched up his nose. \"I don't think I'd be a very good knight. I'm too little.\" \n\n\"Hmm. I have an opportunity for you. I'm going to tell you all about it, and then you can tell me if it sounds like something you'd like to do. You are allowed to say no, and I will not be upset with you. If you don't want to do this, I will find something else; you will not be sent back to the kitchens, okay?\" \n\nHe nodded. \n\n\"The King, you saw him today in the kitchen, right? Well, we're trying to get his throne back for him from a bad man who's trying to steal it. When we do, he's going to need people around him he can trust. He has offered to take you on as his personal servant. You'd be responsible for organising his clothes, helping him dress, getting him food from the kitchens, that sort of thing. You'd have your own room in the palace, you'd be fed and treated well. He would train you to do the job over the next few weeks, and then you'd go with us when we go to Denerim. He'd also be teaching you to read. \n\n\"What do you think?\" \n\nHis eyes were big. \"But I'd have to stay here for the next few weeks?\" \n\n\"Yes, but you'd be the King's servant, not the Arlessa's. You'd sleep in a bed nearby, in case the King needed something. And the Arlessa wouldn't dare to hit the King's personal servant. The King is a good man; he would protect you from her. And I'll check on you when I get back; the Arlessa would be in big trouble if I found out she hurt you.\" \n\n\"Why would the King want me? I'm nobody.\" \n\n\"That's not true, Blake. You've been treated like that, but no one is unimportant. You're a nice kid, and you'd be loyal to the King, right? You wouldn't betray him by telling his secrets or not doing a good job, right? You're exactly what he needs, because he can't trust everybody. But I think he could trust you, couldn't he?\" \n\nHe stood up, puffing out his tiny chest a little. \"Yes, my Lady. I'd never tell nobody anything about the King. I swear.\" \n\n\"See? That's the sort of man he needs around. Now, do you think you'd like that job? Or shall I figure out something else? It's entirely up to you.\" \n\nHe looked over at me. \"Will I be able to see you?\" \n\n\"Sometimes. You know that I travel with the Grey Wardens, and we're all really busy because of the Blight, right? But when I can, whenever we are back here, or later when we're in Denerim, I promise to come see you as often as I can.\" \n\n\"Okay.\" He looked about to cry. \"No one's ever been nice to me before, other than Ma. But I know I can't come with you and fight and stuff. If you think I can do it...\" \n\nI nodded. \"I wouldn't offer if I didn't.\" \n\nHe sighed. \"When do I go?\" \n\n\"How about after supper?\" \n\nI walked him down to Redcliffe Village, and bought him a few more things: some toys, an empty notebook, quill, and ink, and a storybook meant for children. I knew Theron would provide for him (or Eamon would, indirectly, by supporting Theron until he was back on the throne), but I wanted him to have some of his own things, too. \n\nWe had supper back at the castle; Eamon again looked like he was sucking on a lemon when I brought Blake with me, but he didn't say a word. After we ate, I introduced Theron to Blake. We had to stress several times that he was not to be calling Theron 'Your Majesty' until after the Landsmeet; it took a bit of doing. The two seemed to hit it off okay, and to my surprise, Theron had made some plans in case Blake took the job. He had arranged a small room near his, where Blake could sleep; he took the kid up there, and I helped him transfer his clothes and few meager possessions from my room to his. \n\nI was shocked and touched when Alistair came up, offering Blake an old, strange looking piece of rock; I looked again and realised it was a golem figurine. He told Blake it had helped him feel less lonely when he was a boy hiding from the Arlessa, and that he wanted Blake to have it. It was such a sweet gesture, I couldn't help but squeeze Alistair's hand thankfully. He smiled at me, sadly, and left again. \n\nOnce I was sure Blake was settled, I gave him a hug and went to find Aedan. They had done their last minute errands and were all ready to go for the morning; I hugged my brother, almost cried, and then ran off to bed before anyone could see me being so vulnerable. I slept poorly, but refused to get up to see them off; it would only have made the separation harder. I knew that Aedan carried a spare set of armour he'd taken from the Redcliffe armoury just in case I ended up popping back to Earth and then joining him somewhere in the Wilds. \n\nWhen I finally did get up, I put on my armour, and after eating a quick-but-large breakfast, went out to the training grounds and sparred with some of Wayne's knights. He was pleasantly surprised at my progress since I'd seen him last; I didn't win any sparring matches, but I didn't entirely humiliate myself, either. Tomas joined us, and I practiced against him for a while, but his skill was to the knight-trainees as theirs were to me; I didn't have a chance. \n\nBruised and sweaty, I decided to have a shower. I went up to my room, got together my things, and headed down into the basement. The sound of the water thundering through the foundation of the castle was deafening even from several rooms away; I finally came to the crack, wiggled my way through, and found myself in the little cavern. \n\nOnly, I wasn't alone. \n\nAlistair stood under the spray, head tilted back, face almost completely obscured by water; soap suds ran down his chest, past his manhood, and down his muscular legs. I stared, dumbstruck, as my libido started urgently demanding that I strip and start applying my hands, mouth, and anything else I could to that sculpted body. Suddenly embarrassed, I realised I was no better than Theron, staring like that, and I turned away. Face flaming, I stumbled out through the crack in the foundation, and leaned against the wall, breathing hard, trying to drive the images from my mind. \n\nProbably ten minutes later, Alistair slipped into the hallway, and gasped, startled to see me. \n\n\"Sierra?\" \n\nI couldn't stop the blush from recurring, no matter how hard I tried. His expression became knowing, and almost a little bit amused. \"Get a good look, then?\" \n\nI stepped around him, refusing to discuss what I'd just seen, intending to head into the shower room, thankful suddenly that it would be a cold shower. Before I could make it through the crack, he spoke. \n\n\"When you're done...could we talk?\" I nodded, not turning back. \"I'll meet you up on the battlements? Where we went before?\" \n\nI nodded again, and then practically ran into the shower room, desperate to escape. \n\nThe shower was heavenly, and cold, as desired; I felt really clean for the first time in ages. Baths and streams just don't compare to a high-pressure shower. I wrung out my hair, leaving it down to dry; after redressing, I hurried to my room to drop off my stuff before finding the strange door that lead up to the balcony on the roof of the keep, what Alistair called battlements. \n\nAlistair sat on the stone railing, looking out across the lake; he turned as he heard me approach, smiling at me. We both sank onto the floor, backs to the keep wall, side by side as we'd been the last time I'd been up there as well. \n\nI picked at my thumbnail, nervously, wondering what exactly he wanted to talk about. \n\nFinally he cleared his throat. \"I wanted to say thank you. I know you didn't only do it for me, but no one's ever stood up to Isolde for me before. Theron told me what you said.\" \n\nI flushed. \"No thanks necessary. I'd have done the same for anyone. No child deserves her. Thanks for giving Blake the golem, by the way. I think it might help, knowing he wasn't the only one to grow up abused by her.\" \n\n\"I'm glad. Poor kid. At least I was properly fed. I can't even imagine what they were thinking.\" He shuddered. \n\n\"I wouldn't say thinking is Isolde's strong suit.\" I smirked, and he chuckled. \"And I suspect that Eamon just lets her run the show, do whatever she wants, without paying any attention. It doesn't excuse him, as he should be paying attention, but I bet he had no idea who Blake even was or that he was being abused.\" \n\n\"I can't decide if that's better or worse.\" \n\n\"Me either. But I'm guessing that wasn't why you asked me to talk?\" \n\n\"No.\" He took a deep breath and let it out. \"I have a confession to make. I promise it was entirely accidental, but I overheard part of your conversation with Teagan yesterday. I wasn't trying to eavesdrop - you didn't close the door all the way, and I was walking by; I heard your voice and went looking, only to find you with Teagan. I left again right away, but I heard some things, first.\" \n\nI racked my brain, trying to think what we'd talked about. He'd offered me refuge at Rainesfere, should I wish to get away from Alistair, because...Ah. \"About you. Us.\" \n\nHis face was scarlet, and he nodded, but kept on despite his embarrassment. \"I heard you tell him that you believe I am disgusted by you.\" \n\nI nodded, unsure where he was going with it. He refused to meet my eyes. \n\n\"Mind telling me why you believe that?\" \n\n\"Because it's true?\" Being so close to him, especially after what I'd seen earlier, was becoming difficult. It was making me cranky and curt. Even I flinched at my harsh tone, but he didn't. \n\n\"Allow me to rephrase. What specifically did I do to make you believe that?\" His tone was polite, curious; not irritated by my attitude, for which I should have been thankful, and wasn't. It seems I want a fight. \n\nI sighed. \"You called me a monster, Alistair. You walked away. And your face...Maker, the expression on your face. I can see it still, in my mind. You made it quite clear I disgust you.\" \n\nI looked away; I didn't want to be discussing it. Not when now I knew I wanted him back, and yet couldn't have him. I scrunched my eyes shut, trying to banish the hurtful image. The silence stretched, and finally I risked a glance in his direction. He sat, perfectly still, looking forlorn. His eyes were glistening suspiciously, and his lower lip quivered just slightly; it was painful to watch. Almost painful enough to overwrite the image of his disgust. \n\nFinally he spoke. \"Sierra, I...Void take me, but I'm an idiot. Everything I do is just...\" He hopped to his feet and started to pace restlessly; I flinched, startled by the abruptness of the movement. It occurred to me, as my first reflex was to assume I'd be hurt, that I had been letting trust issues run my life for far too long. Unaware of my internal monologue, Alistair continued, \"I wasn't disgusted with you. Truly. I was hurt, thinking that you might have had ulterior motives for being with me, but I wasn't disgusted with you. I was disgusted with myself. For ever thinking I deserved something more, deserved to have someone love me just for me. In my head...of course you had ulterior motives, I should never have expected otherwise. I was disgusted with my own stupid naivety and optimism. And then you were gone, and when everyone found out what happened...\" \n\nHe sank back down beside me, looking exhausted. \"They all made me see what an imbecile I was, that you had no possible ulterior motive. That you'd avoided me for months to prevent me from falling for you. I didn't believe you, when you told me. But they said the exact same things, and it finally sunk in that I was wrong, totally wrong. I didn't realise how badly I'd screwed up until I saw you again. \n\n\"I never thought you were disgusting. Even those few hours where I truly believed you'd manipulated me...I was only disgusted with myself.\" He reached over and touched my cheek, gently stroking it. \"Never you.\" \n\nHe dropped his hand, and I immediately missed it; the warmth, the gentleness, the intimacy. I looked away, trying to pull myself together. I'd been trying to get over the mental image for a while, but now the urge was almost overwhelming. At the same time, my heart hurt; it was an echo of the pain I'd felt when he walked away, and I was too scared to let him back in again. \n\nI decided to tell him the entire truth. If I'd analysed it, I'd have realised that I was trying to push him away, but I didn't think about it that hard. The impulse hit, and I just started talking. \n\n\"You once asked me to tell you the other things I was keeping from you, from the game. Games.\" He nodded, I noticed in my peripheral vision. \"Do you still want to know?\" \n\nWhen he nodded again, I took a deep breath. \"The only things relevant to you are at the Landsmeet. So, I'm going to talk like it was me, as the Warden, with you at the Landsmeet, because that's how I see it, in my head.\" He nodded. \"So, assuming you were in a relationship with me, my character...Hmm. Backing up. My Warden, the one I usually played, was a Cousland. A female Cousland named Elyssa. Anyway, we'd go into the Landsmeet, and blah blah blah with Loghain. Anora would betray us. There'd be a vote, and it would go against Loghain. But of course, he wouldn't back down, so it would come down to single combat between him and me. \n\n\"When I defeated him, I had the option of executing him or recruiting him to the Wardens.\" I held up a hand to forestall the objection I knew was coming. \"We'll get to that. Usually I went with execution, and then I had four options. I could declare Anora to be the Queen. We'd stay Grey Wardens together and go on our merry way. Or I could coerce you into marrying her and ruling jointly, despite the fact that we were together. I could declare myself your Queen, entirely without asking you or discussing it with you first. Or I could make you King by yourself, at which point you immediately and publicly broke off our relationship because you'd need to marry a noblewoman who could give you heirs. \n\n\"If my character was an elf, dwarf, or mage, I wouldn't have the option to rule beside you, obviously.\" \n\nHis face was pale. \"None of those...are good options. Not that I'd probably have minded the getting married part, but I could see it being an awkward thing for you. And I don't relish leaving Anora on the throne, but I wouldn't want to marry her, and I wouldn't want to lose you.\" Alistair looked upset. I knew it was going to get worse, and I gulped despite the tingle of warmth at his admission he wouldn't mind marrying me. \n\nI nodded. \"And it's not like I wouldn't have understood your reasoning in breaking things off, but...it still hurt. And you did it entirely tactlessly, and in front of all of our companions.\" \n\n\"Yeah, that sounds like the sort of dumb thing I would do.\" I shot him a dirty look, and he flinched. \"Sorry. I am sorry. I'd like to say I'm not like that, but...\" \n\nI looked away, unable to meet his eye for the next part. \"The worse alternative was if I allowed Loghain to be conscripted. Of course, we didn't know about dying to defeat the Archdemon at the time, but Riordan made vague comments about us needing all the Grey Wardens we could get. And if I allowed it to happen...you got upset, obviously, and if I didn't change my mind, you left. Left the Wardens, abdicated your throne...left me. You refused to fight the Archdemon, and ended up a drunk in Kirkwall, living on charity from Teagan and trying hard to kill yourself with alcohol poisoning. You didn't even look back as you walked away, even if we loved each other.\" \n\n\"I just assumed you were betraying me,\" he stated. I nodded, sniffling. \"Like I did, here, only sooner. And for an even stupider reason.\" \n\nA tear dribbled down my cheek. I remembered the pain of that betrayal the first time I'd played it in game. It had hurt, even as I knew it was ridiculous to be so affected by a fictional character. I'd had to save the game and go cry, like I was now. But it was nothing next to knowing what it actually felt like, watching Alistair walk away from me. I turned away from Alistair, embarrassed to be seen so emotional over what he would assume was a stupid game. \n\nI should have known better; I felt his hand on my shoulder, his arm move around me, and before I knew what had happened I was sobbing into his shoulder as he held me close to him. He settled me in his lap, stroking my hair, not letting go, whispering apologies, and just let me cry. I soaked his shirt with my tears, and he didn't seem to notice, just kept holding me. I pressed my face into his shoulder, and felt a drop of water hit the back of my hand. I'd have thought it was one of my tears, if my face hadn't been buried at the time. \n\nI looked up, wondering if it was about to rain, only to see blue sky all around. One quick glance at his face, and I realised - it was Alistair's tear. I'd never seen him cry before; not in game, not in real life. But there were twin tracks running down his cheeks, and more drops fell as I watched. I put my arms around his neck and he pulled me close; the two of us sat there for probably an hour, crying together without words. \n\nWe must have fallen asleep; when I woke, it was close to sundown, based on the angle of the sun, and it was chilly on the balcony. My stomach rumbled, and I wondered if we'd missed supper entirely. I was still cradled in Alistair's arms; he had one hand buried in my hair, the other arm draped around me, his head back, snoring softly. \n\nI watched his face as he slept; he didn't look peaceful, exactly, but it was the most relaxed, least unhappy I'd seen him look since they had found me at Soldier's Peak. Sunlight glinted off his blond hair, making it look even lighter than normal; his mouth was slack, but the deep wrinkle in his forehead was gone. And we'd both slept without nightmares, which was unusual; lately, it'd seemed, we'd both been having frequent darkspawn-laden dreams, or at least I assumed it by how often he looked tired and haggard, and from my own recurrent nightmares. \n\nI regretted telling Alistair about the Landsmeet. Having time to think about it, I finally realised I'd intended to use it to hurt him, to push him away. His eyes opened, while I thought about it, and he smiled softly at me before seeming to realise where we were. Once he did, he gripped me tighter, if anything, preventing me from running away, which was exactly what I'd been thinking about. But when I looked deeply into his hazel eyes, I decided I didn't want to run away. I was sick of running, and I wasn't angry anymore. I hadn't been in a while, if I was honest. ",
        "Before I could change my mind, I reached behind him, carding my fingers through his soft hair, and then pulled him down to crush his lips against mine. He didn't hesitate to respond, tightening his grasp on my hair, pulling me tightly to him, groaning as I teased his lower lip with my tongue. It was a desperate kiss, somehow conveying need and want but also sorrow and loneliness and regret. I knew, for certain, that he regretted what he'd done, what he'd assumed, and without him saying it, I knew he'd never betray me again. I knew he loved me. And I think he knew that I forgave him, and that I loved him in return. \n\nAfter the first few desperate seconds, he pulled back a little, softening the kiss, nuzzling his nose against my cheek, his hands stroking my face and my hair. Our lips moved slowly against each other, our tongues darting out to touch but not wrestle each other. For what felt like an eternity, there was nothing but his soft breath on my face, his lips against my own, and his hands stirring warmth wherever they touched. \n\nWhen we pulled away, the look of adoration on his face took my breath away. It was sort of goofy, with a lopsided smile and sparkling eyes. In that moment, it completely replaced the mental image I'd been carrying for so long, that look of disgust on his face. I felt the fear, the anger, the hurt disappear, leaving behind contentment and love. I didn't think I'd ever forget what had happened, but I filed it into a mental category of 'lessons learned', and moved on. It was no longer important; only the future mattered. And my future was with him. \n\nHis smile slowly faded, to be replaced by a look of worry; not being party to the thoughts in my head, it was clear he was unsure of where we stood. I put my finger on his lips to prevent him from speaking, and pressed my forehead to his. \n\n\"I love you. I never stopped, really, it just hurt for a while. I was so angry. I think...no, I know I'm ready to move on now, if you are.\" \n\nHe nodded. \"I swear to you, I will never doubt you again.\" \n\nI interrupted. \"Yes, you will. And so will I. That's normal, I think. But if either of us have concerns, I want us both to agree to ask the other for clarification before we jump to conclusions. To agree never to assume the worst of each other. Can we do that?\" \n\n\"Absolutely. And Sierra...I will never leave you. Never again. I know you must be afraid, but I'm not that man anymore. I know, now, that I can't live without you. These last weeks have been horrible, contemplating a future without you. I would bet all the coin I have that if you asked that Alistair, the one drunk in Kirkwall, the only thing he had left was regret, knowing that he should never have walked away. Now that I already know that regret, I never will. I swear it.\" \n\nI pulled him down for another kiss, to stop him from talking, if nothing else. It was a \"you had me at hello\" sort of moment, and I wanted to savour it, not discuss it. With a sigh, I pulled away, however. \n\n\"There's one more thing you should know.\" \n\nHis expression was anxious. \"Oh?\" \n\n\"I told you before...at the end of the Blight - there's a second game. It covers the events happening in Kirkwall after the Blight.\" \n\n\"Right...?\" \n\n\"In that game...the player plays as someone else. Hawke - a Ferelden refugee whose mother was a noble in Kirkwall until she eloped with an apostate. Hawke ends up dealing with a lot of stuff happening in Kirkwall.\" He nodded understanding. I sighed. \"In the game, there were possible romances, again.\" \n\nHe grimaced, but then controlled his expression, looking at me calmly. \"Who?\" \n\n\"Anders.\" It was almost a whisper; I didn't want to admit it, but everything needed to be on the table if we were going to move on. \n\n\"Of course. It would have to be.\" He sighed. \"Do you...do you like him? I mean...\" \n\n\"No, no. Maker, no. It's...actually, it's a tragic romance. And he can be a total ass. I'm not Marian Hawke, nor even Solona, apparently. I have no interest. I just...I figured you needed to know. I know things about him. Like Zev, or Leli. If it ever comes up...I don't want that to come as a shock. No more secrets.\" \n\n\"I won't say I'm not jealous. I am. But I trust you. If you say it's not like that...\" \n\n\"It's not. I promise. Not even the slightest attraction. He was never my type.\" \n\n\"Oh? And what's your type, then?\" His expression was mischievous, and I grinned. \n\n\"Oh, you know, tall, dark, and handsome. Just what you'd expect.\" \n\nHe grabbed me, holding me to him and tickling my side relentlessly. \"You minx! You're...you're a bad person.\" \n\nI giggled maniacally, his devilish fingers making me squirm and gasp for air. \"Uncle! Uncle. I give.\" He stopped tickling, and I smiled up at his handsome face, careworn wrinkles already gone from his forehead. \"You. You're my type. Funny and gorgeous and strong and perfect. Even before I came here, it was you.\" \n\nI wiggled around in his lap until I could straddle him, wrapping my arms around his neck, feeling his hands on my back and one hip. I kissed him, trying to convey the desire, the total commitment I felt, and he returned the favour. I moaned into his mouth, his hands clenching into fists as I pressed myself closer. I teased at his lips, trying to get his tongue engaged, but he seemed to be avoiding it. \n\nFinally pulling away from the kiss, I looked down at him in confusion. \"I shall be most offended if that's the best you can do, you know.\" \n\nHe raised his eyebrows at me. \"'Shall'? Seriously? Now you sound like Morrigan.\" \n\nI grinned and stuck my tongue out at him, enjoying the way his eyes lingered on my mouth. \"Yeah yeah. Don't think I didn't notice you changing the subject.\" \n\nHis smile faded slightly, and he blushed. \"I thought...I just thought, perhaps we shouldn't be so...hasty. That maybe I could, I don't know...\" he trailed off, looking sheepish. \n\nI was both relieved and amused. \"Woo me? Is that what you were thinking?\" He nodded. \"I don't need to be wooed, Alistair. We've already done awkward and unsure. I've been alone and hurting for weeks, and I'm sure it's the same for you. I don't need to be wooed, I need to be loved. Please?\" \n\nHe studied my face, and then I felt his hands slide up my back to tangle in my hair as he dragged me to him for another kiss. He pressed his tongue against my lower lip and I opened to him; he immediately took advantage. It was exactly what I needed: the taste that was all Alistair, the feel of his hands pulling me closer, his hard body pressed up against mine. When he pulled back to start kissing down my jaw and then sucking on my ear, I gasped and trembled. \n\nHe finally stopped, pressing his forehead against mine while we both panted. \"We should continue this somewhere more private. If...I mean, if you're sure.\" \n\nI smiled at him, gazing into his hazel eyes. \"I'm sure.\" My stomach grumbled, and his followed. \"I'm hungry, though. I think we missed supper.\" \n\n\"And lunch. How's this - you head to my room, and I'll find us some food and join you there?\" \n\nI agreed, and then awkwardly scrambled out of his lap. He kissed me one more time, and then held the door for me to head inside from the ramparts. He headed down to the kitchen, and I wandered slowly towards his room. I ran into Blake, who was carrying a covered tray; I apologised for missing him at the meal. He assured me he was doing fine, that he was being taken care of, and that Isolde hadn't so much as looked at him. I ruffled his hair affectionately and he scurried off towards Theron's room with the tray. \n\nI slipped inside Alistair's room without being seen, and then stopped, unsure what to do from there and suddenly nervous. His room was virtually identical to mine, so I went over to sit in the armchair in front of the fireplace. Hearth. I'd been working on Fereldan terminology for things, but I wasn't always successful. \n\nAedan had tried, a couple of times while we'd walked, to explain to me the terms for various pieces of armour; I'd heard cuirasses and gambesons and pauldrons and a bunch of other strange words, and not even my gaming history helped me retain them. I knew gauntlets, but the rest were a mystery. To me, pants, chest piece, gloves and boots were good enough. It was like trying to stop saying 'Oh my God'. That one was going to get me in trouble one day. I'd added swears using the Maker or Andraste to my repertoire, but hadn't quite managed to fully phase out the Earth ones. \n\nIt also amazed me that straight up swears were used so rarely. I'd heard 'shit' a couple of times, but nobody seemed to drop the F-bomb. They used sodding instead, which never failed to make me giggle. I was looking forward to meeting Oghren, for that if nothing else. Alistair had called Morrigan a bitch in game, but I'd never heard it used other than referring to female dogs. \n\nI realised I was trying to distract myself from my nervousness, and laughed. It was such a stupid thing. I had no reason to be nervous; it wasn't our first time, and I wasn't doubting him anymore, so...I took a shaky breath and tried to relax. \n\nAlistair found me curled on the chair, staring intently at his drawing of myself looking miserable, holding the tiny Ironman figurine when he arrived. He had a similar tray to Blake's, only it was clearly piled high. He put it on the table, before approaching me and taking my hand. He drew me up from the chair, taking the figurine from my hands. \n\n\"I kept it. I don't even know what it is, but...\" He flushed, and I went up on tiptoes to kiss him gently. \n\n\"Would you like me to tell you?\" He nodded. \"It's called Iron Man. It's a guy wearing a suit made of metal, and it can fly. He is a superhero - he uses the powers of the suit to help people. Sort of. I just thought it was sort of like the other figurines you like. Like the golem. I saw it in a shop in the hospital and couldn't resist.\" \n\nHe kissed me softly, then rested his forehead against mine. \"When I found that in my bedroll, when I walked away from you that night, I felt like such a...\" \n\n\"It doesn't matter now.\" I kissed him briefly again. \"New beginning, right? No secrets.\" He nodded again, blushing when I waved the drawing I'd pulled out of his pack at him. \"Speaking of which, I didn't know you could draw.\" \n\n\"I didn't know that you knew I can draw.\" \n\n\"Wynne,\" I said as though that explained everything; he nodded, so maybe it did. \"I think it's about time we feed this one to the fire, don't you think?\" \n\nHe frowned. \"I keep it-\" \n\n\"To punish yourself with? I know.\" He nodded, so I continued, \"I don't think either of us need reminding, do we? This is the past. We're moving forward. Forgiven, right?\" \n\nHe studied my face for a moment, and I stood quietly, holding the drawing. Finally he nodded; together, we crouched in front of the hearth. We held each other's hands as we placed the drawing in the fire. It caught immediately, the dry parchment lighting up with a whoosh. He smiled hesitantly at me, and I returned the smile with a brilliant one of my own. \n\nStanding, he encouraged me to sit on the edge of the bed; leaving me there, he grabbed the tray and put it in the middle before sitting on the far side. \n\nHe pulled the linen off the tray to reveal fruit, cheese, some thin-sliced meats, and buns. We both tore into the food, too hungry for manners or for awkwardness. \n\n\"So how did you learn to draw?\" I asked around a mouthful of bread. \n\n\"At the monastery, there wasn't much to do outside of training and studying. We had lots of parchment - no one questioned us needing more - so it was easy to doodle and hide it in my study materials. I just had lots of chances to practice.\" \n\n\"Well, you're amazing. You have quite the eye for detail. Whenever I draw, I'm lucky if I can get my stick figures to look human.\" \n\nHe flushed and cleared his throat nervously, then changed the subject. \n\nWhen nothing remained on the tray but crumbs, I looked up to meet his eyes, only to find him staring at me in return, and immediately my embarrassment returned. \n\nHe got up, putting the tray back on the table, before digging through the drawers of his armoire. When he turned around, he held one of the tunics he wore for sleep. He fidgeted with the cloth, clearly having as much trouble as I was. \n\n\"I was thinking...it might be nice if we could pretend the last few weeks hadn't happened, if we could start over. I was thinking I should sort of, um, court you, the way nobles do it? But if you don't want that, I thought...maybe we could pretend it was our first night again? And just start from there?\" \n\nHe held out the tunic limply, looking vulnerable. I smiled, walking up and cupping his cheek with one hand, taking the tunic with the other. \"That sounds good.\" I stroked his cheek softly. \"You had less stubble, then.\" \n\n\"I had sort of planned things, then. Today was a surprise.\" He smiled, and I grinned in return. \"Do you want me to shave?\" \n\nI rasped my fingers over his stubble again; it was just long enough to look rugged, not long enough to be uncomfortably prickly. \"No. I like it.\" \n\nHi eyes darkened, and he pressed a kiss to my fingers. \"Go change, before I get other ideas.\" \n\nI slipped behind the little curtain, taking care of business and changing into his shirt. When I came out, he wore sleeping pants, like the first night in Denerim, and nothing else. It was getting dark, so he'd lit a candle; we didn't quite need it yet, but we would before long. I knew why, and I felt the same: I wanted to see him, all of him, not make love in the dark. \n\nHe walked over and effortlessly lifted me into his arms, moving to place me gently on the bed. I couldn't pry my gaze away from his gorgeous, serious face as he laid down beside me. Without a word, he kissed me, and I ran my fingers into his hair to hold him close. The kiss was passionate, but far less desperate than I'd expected. I sort of thought the first time after so long would be needy and sweaty and fast, but he seemed determined to go slow, to drag it out. \n\nAfter an eternity of kissing, I felt his hand on my stomach, rubbing gently, then wandering down to my hip. I let my own hands explore his bare chest, stroking and smoothing the skin over the rippling muscles I'd been appreciating in the shower room. He shivered when I brushed a finger over his nipple, so I did it again, triggering a groan. He released my lips to start kissing down my jawline, while his hand finally cupped my breast through the tunic. Now unable to reach much of his skin, I settled for clenching my hand in his short hair while I shuddered and arched into his fingers. He teased my nipple through the thin cloth, not providing enough stimulation to get any sort of relief, but dragging a gasp from me anyway. \n\nI had the sudden need to sit up and rid myself of the pesky tunic, wanting his hands on my skin, right-sodding-now, but he seemed to guess my intent; when I went to sit, Alistair held me down, and when I tried to push him away he simply gathered both of my wrists in one hand, holding them lazily above my head. It seemed like he wasn't making a true effort to keep me pinned, but to my dismay, when I struggled, I couldn't break free. Stupid warriors and their stupid strong hands. I cursed as he went back to licking my ear, and felt his breath as he chuckled. \n\n\"You could change your mind tomorrow. I'm not going to rush anything tonight, my love.\" \n\n\"What if I beg?\" \n\n\"Oh, I'd very much like to hear that, Sierra. Please, feel free.\" His voice was going to be my undoing, I was suddenly certain. The husky tone he took on when aroused was enough to make me want to scream. \n\nI resolved then and there not to beg, no matter what, but at least part of me was well aware that I'd break that resolve in a hot second if I thought it would work. When he gently nipped my neck and his hand returned to tease my nipple some more, I groaned and writhed, my hands clenching uselessly on empty air. \n\nFinally satisfied that I was completely frustrated, he leaned back and urged me to roll over without releasing my hands. In a haze of arousal and want, I complied, unable to express my confusion at the request but too dazed to resist. He laid alongside me, enough pressure on my back and hip that I couldn't get up, and finally released my hands. He stroked my hair, kissing the back of my neck and my shoulder, until finally rising up to swing his leg across and straddle my bare thighs. His hands gently brushed my shoulder blades, down to my lower back, and eventually I felt them tease at the hem of the tunic I wore. \n\nI held my breath as his nimble fingers slipped underneath, and he caressed my thighs softly before reversing his previous path underneath the fabric. He fondled my bottom for a few moments, making me squirm, and then, as his hands rose, so did the fabric of the shirt. I felt him shift, and then gasped as his lips pressed to one of my exposed butt cheeks. He repeated the process on the other side before questing further north with his hands. He followed his questing fingers with kisses, from my lower back, to both scapulae, to the nape of my neck, at which point the fabric of the tunic was bunched, denying further progress. \n\nI had hoped he would allow me to finally rid myself of the pesky garment, but instead he lifted it over my head and tangled it around my arms, then began massaging my back, shoulders, and butt. I didn't even realise how sore my muscles were, and he gently kneaded each knot with his strong fingers until I was completely relaxed. I was still aroused - mostly naked, with a semi-nude Adonis straddling my legs, I don't think I could have been anything else - but the need was less urgent, somehow less desperate than before. \n\nI could feel his hardness against my thigh, but he seemed content ignoring it for the moment. Once he had me entirely limp, he began kissing his way down my spine instead. I tried to lay still, I truly did, but when his tongue swiped against the sensitive skin between my shoulders, I moaned and arched up, pressing myself against his lips harder. I had no idea, before that moment, that my back was so sensitive, though I supposed it could have just been the anticipation. I had been entirely relaxed, but now I was completely tense for a different reason. \n\nHe slid one hand into my thick curls, tugging them out of his way to get at the back of my neck; it was accidental, I gathered from his whispered apologies, but his fingers tangled and pulled my hair as he did. Delicious sensations shot from my scalp all the way down my spine, and I shuddered in pleasure even as he caressed the area gently. I was shocked - having my hair yanked seemed like it shouldn't have been sexy - but it turned me on even more. As I mulled it over, still mewling and pressing up against his hard chest above me, I realised it was the same thing that made this whole situation so delicious - apparently I like it when Alistair takes control. I didn't know how far that would extend, and I certainly didn't think I was some sort of submissive, but my usually mild-mannered warrior overcoming his insecurities because he wanted me so much was, well, arousing. \n\nNow if I could just get him to stop teasing me and act on that desire! \n\nWhen he finally allowed me to roll over again, I managed to rid myself of his tunic as he repositioned himself straddling my thighs. I quirked an eyebrow at him, wondering what exactly he thought we were going to accomplish with his legs keeping mine trapped and pressed together; he ignored me and leaned down to kiss me instead. I wrapped my arms around his neck, pulling him down hard against me, hoping to encourage him with my ardor; he groaned and deepened the kiss further, but didn't seem to be making a move towards ridding himself of his pants. His erection was trapped between us, so close but so frustratingly far from where I wanted it. ",
        "I finally started begging when he kissed down my neck, past my collar bone, and began circling around one of my nipples, nipping and licking the flesh of my breast without touching the aching tip. He had to restrain my hands again as he switched and gave the other breast the same treatment; I'd determined to get relief by myself, if necessary, but he held me down. I struggled briefly, feeling his chuckle against my skin. \n\n\"So impatient, love! Maybe I need to give you another massage so you can relax.\" \n\nI knew if I had to live through another naked massage I'd spontaneously combust; my string of expletives at the suggestion made him laugh harder. \n\n\"Or not. I'm getting there, you know.\" \n\nHe lifted up so my legs weren't trapped; I had them apart, my arms reaching for him in a split second. He ignored me and lowered his head, taking a nipple into his mouth as his hand slid down my stomach to finally get where I needed it. His touch was light, but I swear between the foreplay, him biting my nipple, and his single questing finger between my nether lips, I had a small orgasm. It was unsatisfying, though, somehow, and I needed more. \n\nHe quirked an eyebrow at me while I shuddered, and I was too aroused even to blush. He settled onto his knees between my wide-spread thighs, and I hoped he'd finally get rid of the stupid pants; instead, he wiggled down further to lay staring at my hairless mound. \n\n\"You're so beautiful, Sierra.\" Alistair touched his tongue gently to my thigh, now liberally covered in my juices. \"Mm, and you taste good, too.\" \n\nEmbarrassed, I tried to pull away; he held my legs in place and stroked his tongue from my opening to my clit before sucking the hard pearl into his mouth and lashing it with his tongue. Bashfulness forgotten, I reached down to run my hands through his hair and pull his face closer. He kept worrying at my clit until I stiffened and shrieked, then proceeded to lap up the copious fluids pouring out of me as I came. \n\nThe orgasm was amazing, of course, but I still wasn't satisfied; I needed something in me, and I knew exactly what I wanted. Using my grip on his hair, I pulled until he laid on top of me. Somehow, without my noticing, he'd shucked his trousers, and it seemed his patience was finally at an end; he slid into me, groaning as he hilted inside me, and then kissed me savagely. I could taste myself on his lips, and it turned me on more. Mind you, finally filled with what I'd been missing for weeks, I wouldn't have cared if he were covered in gore, as long as he kept kissing me, kept sliding delightfully into me. \n\nHe thrust slowly, but it was enough; filled, clit being rubbed by his pubic bone each time he thrust, I gasped and shuddered and writhed and let him drive me over at his own pace. When we came together, it was so intense, my vision greyed out at the edges and tunneled down to one image: Alistair's gorgeous face, flush with exertion, contorted in ecstasy and possession, laying claim in the most primal way possible. \n\nChapter Seventy: Match-Making \n\nWhen I was finally able to think again, we were still joined, Alistair's face buried in my neck, his weight on his elbows to avoid crushing me. He attempted to roll off me, but I held on, wrapping my arms and legs around him. \n\n\"Stay. Just for a minute. Please?\" \n\n\"You can't even breathe down there.\" \n\n\"Can so, or I wouldn't be talking. I just...I like feeling your weight on me. It feels so safe.\" \n\n\"Yes, you're safely being crushed to death.\" His tone was half-joking, half-worried, but he stayed, holding himself above me with what seemed like superhuman effort. When I finally relaxed, he rolled onto his side, pulling me with him to cuddle up against him, legs intertwined. My hands were still shaking, my pulse pounding, and I breathed slowly, trying to calm down. \n\n\"That was...\" I couldn't think of a single word that would suffice. \n\n\"Intense? Profound? Impassioned?\" \n\n\"Nice. Putting that Chantry education to good use, I see.\" \n\nHe stroked my hair absent-mindedly. \"Well, yes. I might as well use it for something, I suppose.\" \n\nI giggled. \"I'm sure the Grand Cleric would be so proud right now.\" \n\n\"Especially if she could see us like this.\" He gestured down at our naked, entangled limbs. \n\n\"If she saw us like this, she'd no longer be a problem; she'd have a stroke and die.\" \n\nHe laughed. \"Have I told you I love you? Not just for,\" he gestured again, \"this, but because you're willing to wander down these ridiculous paths in my imagination with me.\" I felt him kiss my hair. \n\n\"So I'm guessing you've been talking to Zev some more? Taking charge like that...\" \n\n\"Too much? I'm sorry if I-\" \n\nI interrupted. \"No. It was wonderful. I like commanding Alistair. It just seems like something Zev would have encouraged.\" \n\n\"Not exactly. I mean, he never stops talking about sex, and he's certainly mentioned the utility of massage in love-making enough times, but...I guess I'd sort of been day dreaming about what I would do with you if I ever got the chance. Call it payback for that day, in Denerim, when you teased me for so long...\" \n\nI giggled. \"If that's all it takes to trigger something like this, I'm going to tease you more often, I think.\" \n\n\"Minx.\" \n\n\"Yeah, well, what can I say? You're irresistible. And funny. And gorgeous. And not bad in bed, overall.\" I sat up and leaned over him, running my eyes down his chiselled physique before settling on his member, again - or still - erect. \n\n\"Not bad?\" He sounded hurt. \n\nI grinned and winked. \"I think you could benefit from some practice.\" \n\n*** \n\nIn the morning, I woke to find Alistair watching me. I smiled and blushed, and he leaned over to kiss me softly. \n\n\"Good morning,\" I rasped, voice thick with sleep. \n\n\"Good morning, my love.\" He kissed me again, and I snuggled into the kiss dreamily. \n\n\"Any morning I get to do this,\" I began, punctuating each word with a kiss, \"is a good one.\" \n\nHe pulled me to lay with my head on his shoulder, my leg coming up to cross his naturally. \"You're going to have Duncan recruit Loghain, aren't you?\" He didn't sound angry, just curious. \n\nI took a deep breath, suddenly anxious. \"Yes.\" \n\n\"Why?\" \n\nI went up on my elbow so I could look down at him. \"Because someone is going to die to kill the Archdemon, and I don't want it to be you. Or Aedan.\" \n\n\"Joining the Wardens isn't meant to be a punishment. Loghain killed almost all of our order; why would you want to fight alongside him?\" His brow furrowed, but truly in confusion, not anger. \n\nI sighed. \"It isn't a punishment, Alistair, but it isn't a reward, either. The Wardens take everyone. Did Duncan ever tell you the circumstances of his conscription?\" He shook his head. \"He was recruited from the gallows. He killed a Grey Warden. Not on purpose, exactly - he was trying to rob the man, and got caught - but he did it, all the same. The Wardens take everyone, even those who murder Grey Wardens, if they can be useful. And Loghain could be useful. If nothing else, as one more body to put between you and the Archdemon in the pecking order.\" \n\n\"Do you know why he did it? Why he abandoned Cailan and the army?\" \n\n\"Not really. In game he just says he did what he thought was right. Honestly, I think his paranoia about Orlais drove him mad. And he believed Cailan was going to sell out to Celene. There were rumours he was going to put Anora aside and marry the Empress. Loghain was wrong, to do what he did...but I've come to realise he actually did believe he was doing what was best, misguided as he was.\" \n\nAlistair pulled me down to lay against his chest again. \"Okay.\" \n\n\"Okay?\" \n\n\"I can...I can live with that. Although I hold out hope he'll be killed in the battle.\" \n\nI laughed. \"Fair enough.\" \n\n\"Do you think Cai...Theron will allow it?\" \n\n\"I think Duncan can be persuasive when he needs to be.\" \n\nAlistair snorted, and we settled in to snuggle quietly, at least until my stomach started growling again. We'd eaten all the food Alistair had liberated from the kitchen, so reluctantly I crawled out of bed. \n\nAlistair ran interference while I scooted down the hallway in rumpled clothes to reach my own bedroom. I was thankful that all of us had been given rooms in the same guest wing. Eamon was the only one who I really didn't want to see me like that; things were already antagonistic enough between us. No one else would have been upset, but still, we wanted to control how we informed everyone of our renewed relationship; being caught wearing yesterday's clothes was not the way we planned it. \n\nI was tired, but thanks to my Grey Warden stamina, I'd be able to function. I was going to need one of those little potions for discomfort, though, and I didn't have Zev around to ask, so I had to find something somewhere else. I cleaned up quickly and donned my armour, deciding I'd see if I could steal one of Wayne's bottles, or if not, head down to the village and hope someone there sold them. And that no one saw me limping on the way there, especially Alistair. I liked what we did - especially when he made me ache - far too much to risk him getting nervous about hurting me. \n\nAfter snagging an apple, a hunk of bread, and a large slice of cheese from the main hall which was, thankfully, empty but for a handful of servants cleaning up, I found Wayne in the training yard, as usual. He grinned at me good-naturedly when I complained of being sore from sparring the day before. He gave me an interesting look, but didn't hesitate to rummage through a cabinet and hand me a vial filled with brownish-red liquid. I tipped it back, returning the empty vial, and felt the almost-immediate relief soak in. \n\n\"Forgive me, my Lady, but don't you have a mage travelling with you? A healer?\" \n\nI flushed. \"Well, yes, but I hate to bother her with such minor things...\" \n\nHe rolled his eyes. \"Who're you hiding from, deary?\" \n\n\"What?\" \n\n\"Healers, in my experience, are never 'bothered' by being asked to heal. So you're trying to hide your injuries, either from her or from someone she might tell. So, which is it?\" \n\nI hesitated. \"Both?\" \n\nHe laughed. \"I'm guessing I should stop prying and just give you instructions for how to make your own, hmm?\" \n\nI flushed again and nodded; he spent the next half hour teaching me how to dry and grind elfroot, and the half-hour after that teaching me how to recognise it. I almost asked him where he trained in herbalism, but managed to clamp my mouth shut before the question escaped. I thanked him profusely, giving the old scamp a kiss on the cheek; he chuckled and patted my shoulder as I left. I finally headed back inside to have a late second breakfast. Having to hide my Grey Warden appetite was getting annoying, and I ended up splitting my meals, hoping no one noticed that I kept eating twice. \n\nMost of my companions were in the main hall, either eating or digesting their breakfast; I sat down between Alistair and Tomas and grabbed myself a plate. I felt Alistair's hand brush my thigh, and struggled not to blush. Tomas gave me a strange look, but I just shrugged. It felt weird, being all together but without Aiden or Zevran, and I said as much; everyone agreed, Alistair even going so far as to admit that, at times, he missed the Antivan's jokes. \n\nTheron was there with Blake in tow, and the youngster enthusiastically regaled me with tales of his fabulous room - actually a small storage closet with a tiny window, cleaned out for the occasion - and of learning from Theron. He'd managed to help the king into his armour once, and was excited to try again later. I smiled indulgently, glad that it seemed the kid enjoyed his newfound profession. He'd apparently run into the Arlessa while on an errand, and I was pleased to hear that she ignored his existence entirely. Maybe she'll learn yet. \n\nTeagan arrived and invited me to visit the orphanage with him; I squeezed Alistair's hand surreptitiously before running off to change out of my armour and drop off the supplies I'd been given by Wayne. The Bann offered me his arm as we walked down into the village, and I took it with a laugh. \n\n\"What?\" \n\n\"Oh, nothing. It's just...there's not a lot of chivalry where I come from. Half of the women back there think it's a terrible offense if a man holds the door for them - they say it infringes on their autonomy or something. So I'm just not used to the way men are in Ferelden. It constantly surprises me.\" \n\n\"Does it bother you? Men holding doors or offering their arm?\" \n\n\"No, not at all. It's sweet. And makes me feel all girly, which is sort of weird, but nice.\" \n\nHe laughed. \"Girly? You don't usually feel girly?\" \n\n\"Before I came to Ferelden, I hadn't been in a skirt or dress in...years, anyway. A lot of years. And I was fat. I didn't feel girly, and certainly no one treated me that way. It just surprises me sometimes.\" \n\n\"Well, I hope you aren't offended, because every nobleman in Thedas is going to treat you like that - even the pigs like Vaughan Kendalls. The unmarried ones will flirt with you, even if they aren't actually interested, and-\" \n\n\"Like you?\" I interrupted. \n\nHe flushed, and then laughed. \"Caught me. Though I'm embarrassed at having been found out. As I was saying, the married ones will try to win your favour to marry you to their son.\" \n\n\"I still don't understand why.\" \n\n\"Because you're a beautiful woman?\" \n\n\"I wasn't fishing for compliments, you know. I mean, why me? I'm no one. Not even a Fereldan. Not a noble. None of them could marry me, even had I the desire.\" \n\n\"You wouldn't be the first woman elevated to nobility through marriage. Not to mention that after the Landsmeet you could be elevated on your own. If you even need to be - you are, after all, a Cousland.\" \n\nI blushed. \"Oh, you heard that, did you?\" \n\n\"You call Aedan 'brother' all the time.\" \n\n\"Oh. Um, yeah. Woops.\" \n\n\"Why are you ashamed of that?\" \n\n\"I'm not!\" I ran a hand through my hair. \"I just...I don't have proof. Aedan may accept me, but I'm not so na\u00efve to believe that anyone else will. I don't know the first thing about being a noble in Ferelden, except that apparently acting haughty is expected. I don't know the politics, and I wouldn't know where to start at running a household, never mind anything bigger than that.\" \n\n\"You might be surprised. The Landsmeet will believe what Theron tells them to, especially if Eamon and Aedan back him up. And you said you're a business woman, right?\" \n\n\"Consultant. I get brought in by large businesses that are failing, to see if there's anything to salvage. If I say no, they close down; if I say yes, I have a period of time and a budget to see what I can accomplish. Either way, I put myself out of a job and have to start again.\" \n\n\"And you don't think that would enable you to see to an Arling, for example? Analyse the business, the trades and farms and workers, fix what doesn't work, cut your losses when necessary...you'd probably be a better Bann than I am. My Seneschal has to do most of that for me. And Loghain probably doesn't even know what products his Teyrnir trades.\" \n\n\"Lumber,\" I muttered. \n\n\"See? You're already one step ahead.\" \n\n\"Why are you telling me this? It won't even matter.\" \n\n\"Look, consider yourself forewarned. Assuming you manage to stay here in Ferelden, I think it's safe to assume you'll end up with a title of some sort. Maybe as a Cousland, or maybe on your own, maybe through who you marry. But a title is almost a guarantee, for service to the Crown if nothing else.\" \n\n\"I don't want a title! And I'm not going to marry some Bann, or something.\" \n\n\"No, you won't. You'll marry a Prince.\" \n\nI stopped and turned, gaping at Teagan. \"Wait, what? What are you talking about?\" \n\n\"I saw you last night, going into Alistair's room. Mine's just down the hall, you know.\" \n\nI blushed, cheeks crimson. \"Oh?\" He nodded, a mischievous glint in his eye. \"Oh. Damn. Uh...listen, could you not, like, tell anyone? We will soon enough, but I think Aedan should get the chance to hear about it first.\" \n\n\"I'm pretty sure I was the first to hear about it, actually.\" \n\nIf I had thought my face was burning before, now it was a flaming inferno. \"Teagan!\" \n\n\"Sorry, my Lady. Couldn't resist.\" \n\n\"I'm so embarrassed.\" \n\n\"Trust me, it's fine. I'm thrilled for you both, actually. You'll be good for each other.\" \n\nI smiled gratefully. \"I hope so. But he's not a Prince.\" \n\n\"Yet.\" \n\nI rolled my eyes, and we walked the rest of the way to the orphanage in silence. \n\nWe spent another enjoyable morning playing with orphaned children. From the way they flocked to Teagan when we arrived, it was clear he spent time there often. It took a couple of enterprising girls all of thirty seconds to have him sitting cross-legged on a tatty blanket in the middle of the floor pretending to have a tea party, and I couldn't help but watch and laugh. A couple of the children I'd met before had actually found parents - usually childless couples living on a farm or some such - and been adopted; a few new orphans had moved in to take their places. I spent most of the morning trying to feed a one-year-old who wasn't fond of the nasty cereal stuff they were apparently supposed to eat; feeding the little ones took a lot of time for Bella and Kaitlyn, and I gladly freed them up for other things. Teagan gently mocked me for making train noises as I encouraged another spoonful down, not that any of them knew what a train was and why it would help. \n\nBella and Kaitlyn were wonderful with the children, and I was entirely pleased with my suggestion that they run the orphanage. The place was clean, cheerful, noisy, and full of youngsters who clearly felt no fear, only love. But aside from watching the children, I noticed Kaitlyn spent a fair bit of time watching Teagan when she thought no one was looking; Teagan, for his part, seemed to be pretending he didn't know, but from the slight flush, I could tell he was aware. Once I caught her looking, and she saw me noticing; I winked, and she flushed and bolted into the kitchen. \n\nRecalling a line from the epilogue in game, I followed her, picking up a dishtowel and drying dishes as she washed. \n\n\"So, Teagan's certainly a handsome man, isn't he?\" \n\nShe flushed a more crimson colour than before. \"Is he? I suppose...\" \n\n\"Oh, you hadn't noticed? Hmm. Likely story.\" I grinned. \n\n\"I know my place, my L-\" I gave her a dirty look, and she interrupted herself. \"Sierra. He's nobility. I'm a commoner.\" \n\n\"You might be surprised, Kaitlyn. Just today he was telling me that I wouldn't be the first woman to be elevated to nobility through marriage if I played my cards right...\" \n\nThe jealous look on her face was clear confirmation of her feelings, if nothing else was. \"Oh I'm sure, you'd have a chance.\" \n\n\"He didn't mean marriage to him, Kaitlyn. I'm spoken for, actually.\" \n\n\"I...oh! I'm sorry, I didn't mean...\" She trailed off, and I grinned at the relieved expression. \"I'm just a girl! He'd never look at me like that.\" \n\n\"I think he might, actually. You're beautiful, and resourceful, and doing a wonderful job here. He clearly loves coming here. I think you have a very good chance, actually.\" \n\n\"He's so wonderful with the children...I can just imagine him as a father. There aren't many men I could say that about.\" \n\n\"You can say that again. Anyway, just don't sell yourself short, okay? Give him a chance; he might surprise you.\" \n\n\"If you say so.\" \n\nI grinned, and she gave me a small smile in return. We went back into the playroom, to find Teagan crawling around with half-a-dozen kids climbing on or dangling from him, as he roared and pretended to be a monster. Kaitlyn and I burst out laughing as he finally collapsed, having been 'vanquished' by a bunch of toddlers. \n\nFinally disentangling himself, he and I bid the children goodbye, much to their dismay. Bella smiled as she settled the group down for a story; Kaitlyn walked us to the door. ",
        "Teagan turned to the young woman. \"Is there anything you need, Kaitlyn? I've taken responsibility for this orphanage. I want you to tell me if you have needs unmet.\" \n\nThere was a double-entendre there somewhere, I was sure of it; Teagan's mouth twitched as I covered a laugh with a fake cough. \n\n\"You've been more than generous, my Lord. We're fine.\" \n\nTeagan slightly winced at the title. \"Teagan, please. And please, just send someone up to the castle if you need anything, all right?\" \n\nShe smiled shyly and ducked her head; Teagan and I took our leave. We got partway up the hill before I had to either say something or explode. \n\n\"So...Kaitlyn seems nice.\" \n\n\"She is.\" Teagan glanced at me, and flushed slightly before looking away again. \n\n\"And I noticed she's not, er, married.\" He grunted, and I continued, \"Shame, that. I imagine someone will catch on soon enough and scoop her up.\" He clenched his jaw and refused to answer. I almost giggled. \"She sure is pretty.\" \n\n\"Is she?\" \n\nI chuckled. \"Um. Yeah, I'm almost jealous. She could have any man she wanted, don't you think?\" \n\nHe scowled and continued to avoid making eye contact. \"I suppose so.\" \n\n\"And now I know why you spend so much time at the orphanage.\" \n\n\"No! I mean, I do, but that's not...\" He glared at me. \"I go to see the children. That's all.\" \n\n\"Uh huh. And when some other, less clueless man waltzes in there and steals her out from under your nose, you won't be at all bothered by that?\" \n\nHe sighed. \"Look, you've made your point. I shall be very disappointed when she finds a beau and gets married. But there's nothing I can do about that.\" \n\n\"Oh, so all your spouting off about lacking a noble title not being an impediment was just smoke, then?\" \n\n\"What? No! This has nothing to do with her lack of a title.\" \n\n\"Then what?\" \n\n\"I'm old enough to be her father! She's young and beautiful, and deserves someone who can give her everything.\" His face was red, whether from anger or disappointment, I couldn't tell. I thought it might be time to stop teasing and offer some support. \n\n\"Teagan, who in this little village can offer her half of what you can? It's commendable that you're thinking of her happiness, but let's just lay it out a little. With some other lout from the village, she could, what? Continue to live in her little house, now even more crowded, and probably have to continue working just to help pay the bills. She would have to raise her own children among the orphans, and could probably barely afford to feed them. She might be able to marry someone her own age, but what would a man that young have to offer her? If he's lucky, he's got a job at the castle, being treated like dirt by Isolde. And all their children would have to inherit is an orphanage overrun with unwanted kids. \n\n\"I can't believe I even have to point this out. Let's compare what she would have with you, instead. You're a wealthy guy, if I'm not mistaken, and the Bann of Rainesfere. You're the current heir to the Arling of Redcliffe. Your children would inherit at minimum a title, and one of them could be Bann; or even Arl, if Eamon doesn't have more children. Your wife would only have to work if she wanted to, and could spend her time - not to mention significant coin - on whatever charities she chose. She would live in a castle or a manor, have servants and wet nurses, and be able to raise her children however she wanted. \n\n\"And yes, you're a bit older than her, but it's not like you're some senile old man. You're good-looking, well-meaning, and kind. You're experienced - at least, I assume you are - and that holds a certain appeal for a young uncertain woman. And I don't see you philandering, or abusing her, or ignoring her opinions or her needs, which is more than she could probably say about most of the men she's ever met. You're one of the good ones, Teagan, even if your sister-in-law is a hag. She'd be lucky to be with you, and she knows it.\" \n\nHis face, which had reddened further as I spoke, suddenly paled. \"You spoke to her about this?\" \n\nWe were at the castle gates, strolling past the training yard. I dropped my voice. \"Well, not exactly. I just mentioned that you were handsome. She agreed.\" I almost felt bad betraying her confidence. Almost. \"And she told me, in detail, how good you are with children. That's a very attractive trait, you know.\" \n\nHe sputtered. \"I don't...I can't...I'm going to my room now, for a...rest. Yes, that's what I need. Good day, my Lady.\" He ran away from me so fast, he almost left me spinning. I laughed as I watched him jog inside and disappear. I hoped fervently that I'd done some good, that I'd helped the two ridiculous love-birds together, not pushed them further apart. \n\nI went inside, planning to look for Alistair; I found Tomas, instead, in the library pouring over some maps. When he saw me, he called me in. \n\n\"Whatcha got there?\" \n\n\"Maps. Obviously. Southern Ferelden, and the Korcari Wilds, to be specific.\" \n\n\"Why?\" \n\n\"I'm trying to figure out a place where we can lay in wait for the darkspawn when they march on Denerim. Given the choice, I'd rather keep the battle away from the city.\" \n\n\"Good idea. Though...Tomas? How do you bring down a dragon?\" \n\n\"What do you mean?\" \n\n\"Well, they're sort of large. And mobile. Wings and such. How do you get the thing on the ground? All it would have to do is fly high enough to avoid being hit by arrows, and we'd have no chance to even fight it.\" \n\n\"Ah. Um, I have a few ideas about that, but none of the Warden lore that I'm aware of solves that particular problem. Mages would be helpful, obviously, as well as archers. We need to damage the wings. How was it brought down in your performance?\" \n\n\"Oh, did I not tell you that story? Riordan committed suicide by dragon. He leaped off the tallest tower onto the back of the Archdemon as it flew by, tried to kill it, failed, but instead succeeded at ruining one wing before falling to his death. The dragon landed on the roof of Fort Drakon, unable to fly, and we killed it there.\" \n\n\"That's not going to work very well in the open plain somewhere.\" \n\n\"Nope. Unless you plan to fling someone at the Archdemon with a catapult. That might work. If you could get the aim just right, anyway.\" I drifted off, the hilarious mental image of Oghren flying through the air with his axe out proving too distracting for me to continue. \n\nTomas sighed. \"You really are the perfect match for Alistair, aren't you?\" \n\nI gaped. \"Damn it, does everyone know?\" \n\n\"Well, I imagine Aedan, Zevran, and the recruits don't...\" \n\n\"Seriously?\" \n\n\"If you were trying to hide it, you should probably have kept the enormous smiles off your faces when sitting beside each other at breakfast.\" He chuckled at my glare. \"I figured it would happen. We all saw you softening towards him, even if you didn't.\" \n\n\"It's those damned puppy-dog eyes.\" I sighed. \"They get me every time.\" \n\n\"Are you sure it's what you want?\" \n\nI smiled. \"Yes. Absolutely. Are you okay with it?\" \n\nHis grin was wide. \"Because you'd stop if I said no?\" \n\n\"Uh, well...\" \n\n\"I'm happy for you, Sierra. The two of you...are like the children I never had. I want you both to be happy.\" \n\n\"You aren't worried we will fail to do our duty because we're trying to protect each other?\" \n\n\"You're supposed to protect each other. It's your duty just as much as ending the Blight. And you're both smart enough to realise that if you save the other instead of killing the Archdemon, neither of you will survive. You'll both do your duty. I have no concerns about that. Besides, it won't come down to either of you. Riordan or I will take the killing blow.\" \n\n\"What about...the other way?\" \n\n\"Morrigan's ritual?\" \n\nI nodded. \n\n\"Not unless both Riordan and I are dead before the battle. Neither of us wants to go on our Calling, given any other choice. I started having the dreams before the Blight; Riordan and I joined at the same time. He's in the same position. Avernus' potion might have given me a little bit of time, but not much. He wasn't sure it would work at all, given how long I've been a Warden. It isn't worth the risk of Urthemial reborn, since both of us will die shortly after anyway.\" \n\nI nodded reluctantly; it was what I expected. And I couldn't blame him - going into the Deep Roads to die didn't appeal to me either. I just wondered if I could keep Morrigan from abandoning ship the way she had done in the performance. \n\n\"Will you recruit Loghain?\" \n\nHe stared at me, shocked. \"I...had not thought about that. I suppose it might make some sense.\" \n\n\"I don't see Theron handling that well.\" \n\nHe appeared to think about it for a moment. \"You're right, of course, but I think I can perhaps talk him around, especially if I give him some time to prepare. He's changed, since Ostagar; I think he might, finally, listen to sense.\" \n\n\"And not choose to fight in the vanguard?\" \n\n\"Something like that. Your little diatribe would have helped in that regard, I'm sure.\" \n\nI blushed. \"I'd almost forgotten about that. Why does it feel like I spend half of my time, when I'm around him at least, lecturing him about being an idiot?\" \n\n\"We all do. I just wish I'd had more success with it before Ostagar.\" He sighed. \"I know Loghain's making use of the fact that I didn't refuse to allow Cailan to fight with us; what the Teyrn doesn't know is I spent hours arguing with him over it, trying to convince him to stay away. Cailan finally had to order me to accept it before that planning session with Loghain.\" \n\n\"But you think he'll be more reasonable now?\" \n\n\"Well, for starters, I told him that only a Warden can end a Blight.\" \n\n\"Ah, yeah that would help. And then, let me guess, you had to refuse to recruit him into the Grey Wardens.\" \n\n\"Sadly. He's still sulking over that one, I'm afraid.\" \n\nI sighed. \"Men are idiots. No offense.\" \n\nTomas just laughed."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-69-70"
}