{
    "title": "The Swim Team Ch. 11",
    "pages": [
        "Disclaimer\n\nThis is a work of fiction. Any resemblance to any person living or dead is purely coincidental.\n\nYou need to read chapters 1-10 to get background on the characters and story.\n\nAll fictional characters participating in any fictional sexual activity are 18 years of age or older.\n\nThis chapter features people having sexual intercourse in the presence of family members. If this offends you, skip this chapter.\n\nI have no editor, so all grammar errors are mine, and I apologize in advance.\n\nGroup, Orgy, Exhibitionist, Voyeur, MF, MFF, Oral, Incest Themes\n\nI woke the next morning to a warm body snuggled up to me, which was disorienting since I remember going to sleep alone after I put the girls to bed in Brenda's room. My right arm was tucked underneath her, and her strawberry-blond curls spilled over my shoulder and chest. Her left leg bent over my thigh and her left arm curved over my abdomen. She looked like she was cuddling her favorite teddy bear, and softly snored in her blissful sleep.\n\nI was wearing my sleep shorts and nothing else, and she filled out my Def Leppard shirt again. Laying there like that felt wonderful, and nothing could make me want to leave. Well, almost nothing. Nature decided to call at that moment, but I managed to hold her off for another fifteen minutes of watching Linda sleep before the insistence grew beyond my ability to ignore. I extracted myself from Linda's arms, remembering the last time I woke up with her in my bed. This time, I was not going to run her off to Brenda's room.\n\nAfter I finished my business in the bathroom, I brushed my teeth and performed a sink bath before turning to my room. To my bed. To my Linda. As I watched her from the doorway, my heart swelled seeing her in my bed, and I was filled with the desire to love her in every way. I couldn't though. Something nagged my brain as I tried to visualize myself making love to her.\n\nAfter Carrie and I left the first Greek Bash, we both wanted each other in the worst way, but we decided to wait until it was just us. No one else, no quick grope and thrust in the back of a car. We knew we loved each other, and we both wanted our first time together to be special. To be memorable. Our love is what tempered Carrie's wild passion. Now that I know more, I wondered if by tempering it, did our relationship dampen it. Would we still have had such a strong love if we had expanded our horizons? Or at least if I had? I needed to know what Linda wanted from what was forming between us.\n\nAnd I had to understand my own heart.\n\nI told Brenda that Dennis didn't let her seduce him because he viewed her as a daughter. Now here I was fully ready to make love to Dennis' daughter. Didn't that make me a hypocrite? Would it drive a permanent wedge between us? I'd just gotten my closest friends back in my life. I didn't want to end that again.\n\nBut there was Linda, looking adorable in my bed. I remembered the feeling of her lips on mine last night and the warmth of that kiss spread through my body. I wanted to feel that again. I wanted to feel her in my arms again. I never wanted to be apart from her, but how could I do this? How could I start a relationship with a girl two weeks older than my daughter, and the daughter of my oldest friends? I couldn't imagine they would support it.\n\n\"I know what you're thinking,\" Brenda said from behind me.\n\nI was so caught up in my thoughts I didn't hear her door open. She stood there in the bathroom with me. She was naked. Out of reflex I turned my head away.\n\n\"Come on dad,\" she chided me with a smile. \"After last night, you've seen everything there is to see.\n\n\"I suppose so,\" I didn't turn around, however. \"So, what am I thinking?\"\n\n\"That you can't be with her because of the Mitchells.\"\n\nDamn, it's spooky how smart that girl is.\n\n\"You think they won't approve of their daughter dating an older man,\" she continued.\n\n\"Well, that, and add that I'm their oldest friend.\"\n\n\"You're assuming they'll look at it like you've been.\"\n\n\"And?\"\n\n\"You forgot that they have always been more progressive in their views of sex than you.\"\n\nHer utter confidence in her response made me turn around to see her sitting on the commode. \"And how do you know this?\"\n\nShe shrugged. \"I've talked to them about it. Well, Mr. Mitchell mostly. At least until I tried to get him to have sex. Mrs. Mitchell wouldn't talk about it before this week. Since Tuesday, though, she's been quite chatty.\"\n\n\"When have you had time to talk to them about anything?\" Brenda had been busy with school and swim practice all week, so I couldn't figure out how she had the time.\n\n\"Uhm...well, I've kinda been texting them during the day. Mrs. Mitchell mostly.\"\n\n\"And what have you two been discussing?\"\n\n\"Mom. The diary. You. They're really looking forward to taking you out to dinner tonight, by the way.\"\n\nShit. I forgot. I couldn't see myself going out after last night. Thoughts of sex with Linda aside, I was still pretty tired otherwise. I slapped my forehead.\n\n\"You forgot?\"\n\n\"Yeah, well, I wasn't sure I wanted to go in the first place.\"\n\n\"You're going. You have to. If for no other reason than to talk about Linda. Now that you two are together, you have to tell them.\"\n\n\"We are not...well...we haven't....I don't....I don't know what we are.\"\n\n\"Dad, I saw that kiss on the patio. I was there last night. You know and she knows.\"\n\n\"How can she still want me? I was with all those other girls last night at the party. She hates those parties.\"\n\n\"No, she doesn't. She doesn't play. Doesn't mean she hates them. I told you...she likes to watch. Watching Karen blow you really turned her on.\" I remembered the look on Linda's face right before she started feasting on Brenda's pussy.\n\n\"Well, fine. But I wasn't just watching. She couldn't want to be with me after all that.\"\n\n\"Maybe you should ask her.\"\n\nAnother talk. I was getting exhausted thinking about the talks I had to have. The talks I have had so far, and all the drama that has been drowning me for the past two weeks.\n\n\"I will. Later. In the meantime, I'm going back to bed for some cuddling before I go back to sleep.\"\n\n\"Have fun.\" She reached for the toilet paper.\n\nAs I crawled back into the bed, I heard Brenda flush the toilet through the closed door. I chuckled as I spooned up to Linda's sleeping form, sliding my arms through hers and pulling her tight to my chest. She sighed and snuggled into my arms, never waking. I kissed her cheek and her jaw before closing my eyes. For that moment, all was right with the world.\n\n<p align=\"center\">#</p>\n\nI woke up with a weight on my chest. Opening my eyes, I saw Linda's eyes just inches from mine. Her chin was resting on her hands stacked on my chest. \"Good morning.\"\n\nMy smile must have reached around my head. \"Good morning, beautiful girl.\"\n\n\"You're not mad that I'm here are you?\" She must've remembered the last time she woke up in my bed like I did.\n\n\"No. I'll never be mad being near you.\"\n\nHer smile grew to match mine. \"Good. I plan on being near you a lot.\"\n\nI brought my hand up to stroke her back and felt bare skin. She had lost the concert shirt since I went back to sleep. That meant her naked breasts were pressing into my abdomen. My hands were jealous.\n\n\"I hope you don't mind. I wanted to feel your skin against mine.\"\n\n\"I don't mind at all.\" I let my hands slide down her smooth, soft yet strong back and felt the swell of her naked ass. I groaned as I cupped her cheeks in my hands.\n\nLinda moaned softly and closed her eyes, reveling in my touch. I could feel my cock respond and swell between us. The only thing slowing its progression was the thin layer of the fabric of my shorts separating us. I gripped her ass in both hands and pulled her up until my lips found hers in a tentative kiss. I could feel the heat of her core on my fingertips as I held her there. My small brain was ready to roll over and spend the rest of the day loving this girl, but my big brain won the debate.\n\n\"Linda,\" I said after our kiss, \"we need to talk about this.\"\n\n\"No,\" she whined. \"No more talking. I've been wanting to be with you for so long. Can't we just let it happen?\"\n\n\"I would love nothing more. But we have to deal with one thing. And it's a big thing.\"\n\nHer lower lip jutted out as her face drew into a pout. \"My parents.\"\n\n\"My friends. Yes,\" I paused for a moment, \"and last night.\"\n\nHer eyes flicked back up at mine as though looking for something. \"What about last night?\"\n\nI hadn't really given much thought to what I was going to say at this point. I didn't thing we would be having the discussion so soon. \"You know about how my wife and I met.\"\n\n\"Yeah. Mom and Dad used to fight about it sometimes.\"\n\nThis was news to me. \"What do you mean 'fight about it'?\"\n\n\"Dad always yelled at Mom about sex things. She'd yell back that she was trying to be more like Mrs. B for him. And they would argue about what that meant. I didn't know what they meant until this week when, you know, the party and the diary and all.\"\n\n\"Ah,\" I said. Taken out of context, it would seem confusing. \"Well, I had only ever dated one girl at a time, and I never had sex on the first date. I was never much of a 'playa,' do they still use that word? Playa?\"\n\nShe nodded.\n\n\"One woman man. That had always been me. I just found out that had not always been Carrie. It seems I am a bit out of touch with modern sensibilities about sex. Especially in view of the types of parties your team hosts. I think that Carrie would have probably been a part of your crowd.\"\n\n\"But they're not my crowd. That's why I was going to quit the team.\"\n\n\"I know. But that's not my point. I was trying to say that Brenda is a lot more like her mom than I thought. Look. I didn't plan on what happened last night at the party. I didn't have any plans on having sex or getting naked with anyone. It happened, however, and I don't regret it. But I don't want it to color what's happening between us.\" I held her face in my hands. \"I feel something special when I'm with you, and I think you feel it, too.\"\n\n\"Oh, I do. I really do.\" She leaned into a kiss.\n\n\"So,\" I said when I could breathe again, \"whatever happened last night stays last night. I don't have any expectations of going to all the swim team orgies in the future.\"\n\n\"Really?\"\n\n\"Really.\"\n\n\"But what if they invite you? They all want you. You know that, don't you?\"\n\n\"Some of them might have said words to that effect. But when I'm with someone, I want to only be with that someone.\"\n\nA smile crept across her face as her eyes lit up. \"Are you asking me to go steady?\"\n\n\"If I were 18 I would be.\" I laughed and she giggled. I got the feeling she wanted to say more, but was holding back. Then I swallowed my mirth. \"Look, Linda, there is one problem that we will have to face that's bigger than your parents, or the swim team or anything else, and it can never go away, and we can't avoid it.\"\n\nShe dropped her eyes and her shoulders. \"Don't say it...\"\n\n\"Denying it won't help. You know what I'm talking about.\"\n\n\"But we don't have to worry about it now. We can just enjoy ourselves and being together. To hell with what anyone else says.\"\n\n\"Until I'm too old? I'm 44.\"\n\n\"That's still young!\"\n\n\"It is now. But when you're 44, I'll be 70. You'll still be young, but I'll be on Medicare.\"\n\n\"That's more than 25 years away. We have a lot of living to do between now and then.\"\n\nHow I wished I had her optimism. \"Do you think you'll want a shriveled up old man in your bed when you're 44?\"\n\n\"No, I won't.\" She didn't hesitate in her answer and her voice was full of confidence. \"I'll want you in my bed. When I see you, I will always see you like this. Like the man who swept me off my feet. I could never see you as a shriveled up old man.\"\n\nMy heart swelled when she said that, and other parts swelled when she kissed me. Since the first time I kissed her, I had never felt the need to compare her kiss to Carrie. In fact, Carrie wasn't even anywhere in my mind. I was naked in my bed with a beautiful naked woman, and I felt no guilt about it. That realization made me smile into my kiss. Linda sensed my mood and pulled back.\n\n\"What's so funny?\"\n\n\"Nothing. Everything. I'm just happy.\" I said and kissed her a series of quick pecks on the lips. \"Happier than I can remember being in a long time.\"\n\n\"Me too.\" She kissed me in earnest, and I kissed her back. I felt her shift on the bed and her knees slipped over my thighs bringing her sex down over the tip of my shorts-covered erection. Her five-foot height made it difficult to perfectly line up our faces and our crotches without some contortion. She groaned into my mouth as she rocked her hips on me. I kept my hands cupping her ass cheeks as they flexed with her movements, and I marveled at the firmness of her muscle tone under the softness of her skin. I squeezed her cheeks as she started humping me.\n\nI wanted to be inside her. I wanted to finally feel her velvety touch sliding up and down my cock as I moved within her, touching her deepest recesses. I wanted to feel her pussy clamp down on my cock when she came. More than that, I wanted to feel her love as we came together. I warred with myself. It felt right, but it felt wrong at the same time. Something wasn't ready, and I knew what that was. I couldn't take Linda that way unless I had her parent's blessing, or barring that, at least their knowledge. I couldn't go behind their backs.\n\nI was about to stop us both from getting too worked up when my phone rang. Linda whined as she broke our kiss. \"Not now!\"\n\n\"Just give me a moment, Linda,\" I said as I reached for the phone. It was Dennis.\n\n\"It's your Dad,\" I said and put my finger over my mouth. Linda nodded and slid off me. I was so caught up watching her naked body move I almost forgot to answer the phone.\n\n\"Dennis,\" I said after sliding to answer. \"What's up?\"\n\n\"Just checking on you. Wanted to make sure we're still on for tonight. And to check on Linda. She didn't give you any trouble last night, did she?\"\n\nIf he only knew the trouble Linda and I had created, I thought with a chuckle. \"Everything's fine. I took the girls for pizza after the meet and then we all hung out with the swim team.\" I intentionally left out the part with the orgy. He didn't need to know that. \"In fact, the girls are both just now getting up. Do you want to talk to Linda?\"\n\n\"That's okay. Just tell her we need her home before we come get you. And that we love her. And it's almost noon. Why are they still in bed?\"\n\n\"Teenagers,\" I said by way of explanation. \"They probably stayed up all night flapping their lips.\" Linda clapped her hand over her mouth to stifle a laugh and slapped my shoulder. \"I'll pass on your message. Would it be okay if Brenda came over with Linda while we're out?\"\n\n\"Of course. She's always welcome here. See you around eight.\"\n\n\"See you then.\"\n\n<p align=\"center\">#</p>\n\nAfter the phone call killed the romantic mood, we got up and fixed brunch, which for me means breakfast at lunch, and the girls and I did the cleaning. Linda never once acted like she was a guest or that she shouldn't have to perform any chores. She just chipped in as though it was her house, too.\n\nThe girls got their things together and Brenda drove them to Linda's around 5 pm, giving me a few hours to get ready for dinner. Dennis never told me where they were taking me, but he did say dress nice. When they showed up, I was floored. Kelly looked stunning in a slinky sequined strapless gown that showed more leg than it covered, and Dennis was in a tailored suit only a half-step from a tuxedo. I was wearing one of the few suits I owned, and while I didn't look bad by comparison, I didn't look as nice.\n\n\"Hey, handsome,\" Kelly said before putting a lip-lock on me that no one would ever call platonic. \"You are looking yummy tonight.\"\n\n\"Me?\" I stepped back from her and made a show of looking her up and down. \"I'd just be an appetizer for your main course. You look ravishing.\"\n\n\"Stop hitting on my wife,\" Dennis said laughing as he slapped me on the back. \"At least for now. Wait until after dinner.\"\n\n\"Speaking of which,\" I said as we walked to their car, \"where are you taking me?\"\n\n\"You'll see,\" Kelly said with a smile in her eye.\n\nI did see. We pulled up to one of the nicest restaurants in town. It took six months to get a reservation at this place unless you were a high roller. The Landrys probably had a standing table, but even the mayor couldn't get ahead of the wait list. Dennis pulled up and we got out as a valet jumped in and drove off.\n\nThe maitre d' walked us past the line of people waiting for tables to the back of the restaurant. Waiters backed out of our way with a polite nod of acknowledgment, parting like the red sea. I never felt more like a celebrity than I did then, but I was at a loss to understand why we were getting such a royal treatment. Dennis was senior staff at his job, but he didn't make any real money. No more than I had made before I retired. Kelly, as gorgeous as she was, was a housewife. Yet we were getting deferential treatment reserved for A-list movie stars.\n\nThe reason for the treatment became clearer when we entered a private room. Diane was sitting alone at a table. Did Diane have this much pull? I had to re-evaluate my assessment of the young woman. Dennis pulled out a chair for Kelly opposite Diane, and he and I flanked her. Diane was in an off-the-shoulder purple gown the same color she had worn at the first party I attended with her, but this one was more sedate and classy. She also wore a matching choker.\n\nI couldn't be mad that she was there. I half-expected it. Whatever was happening between Dennis and Kelly seemed to ebb and flow with Diane's orbit. Given what happened Tuesday, I knew I would be seeing her again. I was surprised that Austin wasn't with her.\n\n\"Diane,\" I said once I was settled, \"good to see you again. You're looking lovely as always.\"\n\n\"Thank you, Barry, you smooth talker, you.\"\n\n\"If I didn't know better,\" I said after a few minutes of small talk and getting our drink order, \"I'd think this was a fix up.\"\n\nKelly actually laughed while sipping her drink, almost spraying the table. Dennis and Diane grinned a sly glance at each other and it became clear that something was up.\n\n\"Well, Bare,\" Dennis said, \"you're not too far off. But it's probably not what you're thinking. But we'll get to that in a moment. Let's just enjoy a nice meal and each other's company for now.\"\n\nAnd that's what we did. I hadn't really had a chance to actually have a conversation with Diane since we first met at the party. She was well versed in several topics from current events, to geopolitics, to economic policy. She also had a quick sense of humor and had us all laughing through dinner. Her degree was in public policy from Hallstead, but she took the role of High School swim coach as a favor to the district.\n\n\"When I attended the high school, I was captain of the swim team, and we won the district tournament all four years I attended. After that, the team almost fell apart. The coach retired after I left. As my teammates graduated, the new team wasn't as good, and the new coach was incompetent. The principal knew I graduated Hallstead and asked if I would consider coaching the team until they could find a permanent replacement. Since the political landscape was so stagnant at the time and I had no real career prospects, I took her up on the offer. I coached for three years until I found my current job.\"\n\n\"Well, you seem well-suited for it,\" I said.\n\n\"I love it. And I love getting to know the movers and shakers in our community.\"\n\n\"And you get to stay around the swim team,\" I offered.\n\n\"There is that,\" she said. Her eyes said more, however. \"But it's more than that. I get to help groom the next generation of strong independent women who will run the world.\"",
        "\"You realize that sounds like a monologue from a Bond villain, don't you? 'My minions will rule the world?'\"\n\nDiane laughed a polite chuckle. \"Not rule, no. But to influence it. To be able to have a seat at the table. To have their voices heard. That is my dream.\"\n\nCarrie had a similar dream when we were dating, but she put that aside when Brenda came along, and she never had the opportunity to work toward it after. We never had a chance to discuss what Brenda might want her career to be or how Carrie and I would help her.\n\n\"Which brings me to why I'm here,\" Diane said.\n\n\"Beg pardon?\"\n\n\"Barry, I've seen a lot of young women come through the school and go on to Hallstead. Many of them settle for small careers or drop out and become housewives. But a few of them have gone on to land high ranking jobs at fortune 500 companies or start their own businesses.\"\n\n\"I'm aware of the school's success record. It's the main reason I enrolled Brenda in the first place. I knew she would benefit from a higher academic rigor than public schools.\"\n\n\"Well, to be frank, Barry,\" Diane said, \"The school's getting the better end of the deal. Brenda is quite simply one of the most exceptional students to ever come through our halls. She has a singular drive and an innate leadership quality that affects everyone around her. The team this year is better than at any time in the school's history. And it's all because of your daughter.\"\n\nMy heart swelled with pride. It wasn't just a father's pride. Other people could see in Brenda what I see. Everyone at the table could see the gratification in my face. \"She is special, I know.\"\n\n\"That's why I wanted to talk to you. I think Brenda could benefit from a degree from Hallstead.\"\n\nGates slammed down in my head. Warning claxons rang and lights flashed. I felt my back stiffen and the smile left my face. \"Brenda has the chance to go to Stanford, Brown, or Yale. Hell, she could attend any of the finest schools in the country and succeed there. She's already been awarded general scholarships no matter where she goes and she's up for more. Her applications have already been sent to the Ivy League schools. She's aced her SAT and ACT. She has her pick of schools. Why would she choose Hallstead?\"\n\nDiane set her glass on the table and put her hands together, steepling her index fingers. She looked like she was about to argue a position before a congressional hearing. \"Hallstead was one of the finest all-girl schools in the country before they began admitting males after World War Two. Even going co-ed, they still rank among the best in the country. It has several programs that produce much sought-after graduates in the business and government sectors.\"\n\n\"I'm Sorry, Diane. I didn't mean to besmirch your alma mater. I'm sure Hallstead is a good school. But Brenda has her sights set higher.\"\n\n\"But I can guarantee her a full-ride four-year scholarship.\"\n\n\"She'll probably have that at most of the schools she applies to.\" I looked at Dennis and Kelly. \"And she and Linda have had plans for years to both attend college together. I know for a fact that Linda does not want to go to Hallstead.\"\n\n\"How would you know that?\" Kelly looked confused.\n\n\"She and I have discussed it.\" I turned back to Diane. \"Look, I know Austin has been trying to recruit her, too. I'll tell you this. Where she goes to school is her decision. I will not try to pressure her to go to Hallstead if she would prefer Brown or Yale. If she decides to go to Hallstead, I will of course support her. But it is her education and her decision.\"\n\nDiane looked like she wanted to say more, to press her position, but she must have sensed my growing tension and she relaxed, sat back, picked up her cocktail and made a toast. \"To Brenda. May she find her own path for her future.\"\n\nI got the distinct impression as she lifted the class to her lips that the issue was far from settled. To my mind it was. While Hallstead certainly had its share of academic accolades, it's Dean of students had no problem with Diane employing current students to sexually entertain the rich and powerful at lavish parties, and I suspect Diane was more interested in recruiting Brenda for her entertainment business rather than just for academics.\n\nAfter we finished our meal and enjoyed a last round of drinks, Diane leaned forward and steepled her hands under her chin. \"What do you say we continue this party back at my place?\"\n\nThe way Kelly and Dennis looked at each other, it was a forgone conclusion. Chances are that was the plan for the evening all along, the discussion about Brenda notwithstanding. I wouldn't have been surprised if the three of them hadn't gotten together at least once since Tuesday.\n\n\"Actually,\" I said as Dennis and Kelly started rising from their seats, \"as enticing as that sounds, I'm going to have to beg off.\"\n\nDiane looked at me like I had grown a third eye on my forehead. Dennis and Kelly mirrored the look. \"Excuse me?\"\n\n\"If we had done this two nights ago, I'd be there in a heartbeat, but something has happened, and I have to say no.\"\n\nI knew that Diane was not used to rejection, and the expressions that flashed across her face bore that out. I could see the insult hit her, followed by anger. Fortunately, she kept her tongue and didn't lash out. Kelly, on the other hand, didn't hold back.\n\n\"Now wait a minute, Barry. I've been looking forward to this evening all week.\"\n\n\"And here we are, having a grand time. I thoroughly enjoyed the evening and the company. Thank you.\"\n\n\"But...but..\"\n\n\"Barry,\" Dennis said in his most diplomatic voice, \"I think the ladies were expecting we would continue to 'enjoy each other's company' for a while longer yet. In a more intimate setting.\"\n\n\"I get that, Dennis. And believe me when I say I would love to go along with it. But something's happened, and I don't think I can in good conscience entertain myself that way.\"\n\n\"What are you talking about? What could have happened in four days?\"\n\nI had to tell them, but I didn't want to say anything in front of Diane. If Kelly reacted like I presumed she would it would be a difficult scene that Diane didn't need to see.\n\n\"Look, I have to tell you something, but not here. I can't discuss it here--not like this. We need to go home.\"\n\nDiane was watching me with a calculating eye. \"You're in love,\" she said after a moment. \"Aren't you?\"\n\nI blinked. How could she have divined that?\n\nAs she watched the shock spread across my face, a smile spread across hers. \"You are. You're in love.\" She chuckled. \"I don't blame you. Austin is a catch. But you don't have to worry about cheating on my pretty. She won't mind. She's probably entertaining herself for her fans online right now thinking about your cock.\"\n\nWhen she mentioned Austin, I relaxed. I could see how she made that connection, given how Austin and I were on Tuesday. I shook my head. \"It's not Austin.\"\n\n\"Oh, my God!\" Kelly's hand crept to her mouth as she stared at me, realization settling into her consciousness. Dennis looked at her with a furrowed brow as he tried to catch up.\n\n\"Seriously,\" I said. \"Can we just go home so we can discuss this?\" I made my way to the door not waiting to see if they followed me.\n\nI didn't look back until I was standing next to Dennis' car. Dennis and Kelly were still at the front door kissing Diane goodbye. The brunette looked daggers at me before turning toward her car. Dennis and Kelly marched up to me, splitting when they got to the car. Dennis chirped the locks and I climbed in the back seat after holding the door open for Kelly. As she sat down, she fixed a hard look on me and I couldn't tell what she was thinking.\n\n\"Okay,\" Dennis said as he pulled onto the highway, \"What's this all about?\"\n\n\"I am in love with someone, and I don't want to jeopardize it by having sex with anyone until I know what this is.\"\n\n\"Oh, you know full well what this is,\" Kelly said without looking back at me.\n\n\"What are you talking about?\" Dennis was still clueless.\n\n\"I tell you if I had known two weeks ago...\" Kelly stopped talking even as her mouth kept moving. The words failed her.\n\n\"I didn't know two weeks ago, Kelly. I didn't know for sure until last night.\"\n\n\"Last night?\" Kelly shrieked her question as she spun around in her seat. \"What happened last night?\"\n\n\"Nothing. Well, not nothing, but not what you might be thinking happened. Well, I don't think so, anyway. I doubt it.\"\n\n\"Barry, you're not making any sense.\"\n\n\"My whole fucking life isn't making sense right now, okay? Nothing has made sense to me for six years. Just when I think I am making progress toward sanity, this whole secret sex society explodes all over my life. I don't know what to do. I tried riding it out. I tried just going with it. But in all that has happened in the past two weeks, with all I've learned about my life, my wife, and myself, I'm more confused than ever. The only thing I do know is that when I'm around her, it makes the insanity sane. She calms me. She helps me see things more clearly.\"\n\n\"She's a child, Barry,\" Kelly said.\n\n\"She's wise beyond her years.\"\n\n\"Who the fuck are we talking about?\" Dennis' shout made Kelly jump.\n\nKelly looked at him like he was the village idiot. \"Your best friend is in love with our daughter.\"\n\nThe car screeched to a halt in the middle of the lane. The sound of the rubber on asphalt was drowned out by Dennis' Shout. \"WHAT THE EVER-LOVING FUCK?\"\n\nIt was a good thing traffic was light or someone would have driven up our tailpipe. He spun around, and if it weren't for the seatbelt and the fact that their car still had a bench front seat, he would have come at me.\n\n\"Dennis, wait a minute. Just calm down. We can discuss this rationally.\"\n\n\"You're fucking my baby girl and you want me to calm down?\"\n\n\"I've done no such thing. I told her we couldn't be together until we talked to you first.\"\n\n\"And what? We're supposed to just give you our blessing?\"\n\n\"I'm not so stupid as to think that will happen. At least not now. Look, I know this is a lot to take in.\"\n\n\"You don't say,\" Dennis said. \"And here I was feeling conflicted about turning Brenda down.\"\n\n\"Say what?\" Kelly turned to her husband. \"What did you just say?\"\n\nDennis rolled his eyes at himself. He pulled the car over to the shoulder after the second car blared its horn going around us. \"A couple of weeks ago, Brenda tried to seduce me. I turned her down.\"\n\nKelly was apoplectic. \"Oh, my God! What the hell?\"\n\n\"I take it you were as clueless about our children's sex lives as I have been.\" I didn't mean it to sound snarky.\n\nKelly's head whipped around to face me. \"You knew about this?\"\n\n\"I figured it out on Tuesday after you left. Brenda and I talked it out as well as the reason why she did it. Did she ever tell you why, Dennis?\"\n\n\"I'm guessing it wasn't just because she thought I was hot.\"\n\n\"She wanted to show Linda that guys our age would go for girls their age.\"\n\n\"Oh, hell. Who thinks otherwise?\"\n\n\"Up until recently, Linda.\"\n\nBoth of them stared straight ahead for an eternity of seconds. My heart was pounding in my ears waiting on someone to say something. The stillness was broken when Dennis slapped the steering wheel seven times in quick succession before Kelly put a calming hand on his arm. He put the car in drive and pulled out into the lane and we returned to their house without anyone saying anything. Brenda's car was still in the driveway, so I knew I had a ride home, but an anchor weighed down my stomach at the coming confrontation. How would they treat Linda? How would they react to Brenda? Had I lost my oldest friends forever? Had I lost Linda?\n\n<p align=\"center\">#</p>\n\nThe house was dark when Dennis opened the door. I don't know what we expected, I was too focused on the possible emotional carnage I was certain was coming, but a quiet house was a surprise. The girls usually would be into a movie, or dancing to loud music in the family room. The room was dark. Dennis and Kelly stepped into the shadowy room like explorers venturing into a newly discovered cave. I reached over and flipped on the light switch, making them jump half out of their skin.\n\n\"Sorry.\"\n\nThe light spilled into the room and illuminated a trail of clothing leading back to the bedrooms. When we approached the hallway, we could hear muffled music playing behind Linda's closed door. In my heart, I already knew what awaited us, but I don't know if Kelly or Dennis suspected it. He reached for the knob.\n\n\"Dennis, I wouldn't open that door if I were you,\" I said.\n\nDennis shot me a glare that killed any further protestations. With Kelly over his shoulder, he turned the knob and pushed the door open. Music spilled out, loud enough to cover the sound of the door opening, but along with the tunes came a series of soft feminine grunts and gasps and a familiar wet slapping sound. Dennis' eyes widened as though discovering the holy grail and Kelly gasped into her hand. I was the only one who couldn't see into the room and the only one who knew exactly what was happening. It was in my mind as clear as if I were in the room with them. Brenda and Linda were making love.\n\nDennis' slack face and Kelly's shocked one told me what I suspected. I reached in front of Dennis to grab the door and pull it closed, and out of the corner of my eye I saw two bodies in a sixty-nine on Linda's bed. I put my hand on Dennis' chest to turn him back toward the living room. Once Dennis and Kelly were seated, I grabbed three Stellas from their fridge. I could force one down for a good cause. I gave one to each of them as I sat across the coffee table. \"This isn't their first time doing that, by the way,\"\n\n\"I never thought...\" Dennis mumbled as he examined the lip of his beer.\n\n\"In all this time...\" Kelly spoke just above a whisper. Then she fixed her eyes on me. \"And you knew?\"\n\n\"Oh, no! I had no clue until Tuesday. None.\" I took a swing off my bottle. \"I had no idea about the sex club until Linda told us both Monday night. As far as I knew they were both virgins.\"\n\n\"Well, I wasn't that naive,\" Kelly scoffed. \"But I never thought the two of them... How long has this been going on?\"\n\n\"From what Brenda told me, a couple of years. I think they were fourteen the first time they experimented.\"\n\n\"Four years. And right under our noses.\"\n\n\"Well, this has to stop,\" Dennis announced.\n\n\"Dennis,\" Kelly said with an eye-roll, \"We couldn't stop it if we locked them in a nunnery. Besides, it's no different than what Carrie and I were doing all through school. I really shouldn't be surprised. When I returned to the church, I guess I just turned a blind eye.\"\n\n\"You and me both,\" I said. \"About the blind eye part,\" I added.\n\nDennis coughed. \"So, what do we do about it? Just let it go? Like it's no big deal?\"\n\n\"Is it really a big deal, Dennis?\" Kelly took a pull from her bottle. \"I mean think about how we were at their age. It's all about experimenting and finding themselves. Like it was for us.\"\n\n\"Well, speak for yourself,\" I chuckled. \"I never experimented much that way. I guess I lived a sheltered life.\"\n\n\"There's nothing wrong with that. Of the three of us, you're taking this revelation the best,\" Kelly said.\n\n\"Well, I guess having read Carrie's diary, and being introduced to Austin's and Diane's world, I've had two weeks to acclimate. And having discussed all this with Brenda was an eye-opening experience.\"\n\n\"Waitaminute,\" Dennis said. \"Are you saying we should talk with Linda like you talked with Brenda?\"\n\n\"It makes sense, babe,\" Kelly said for me. \"Neither one of us has really talked with her about it past the biblical birds and bees talk.\"\n\nI could tell Dennis was still uncomfortable with the idea that his daughter was having sex twenty-five feet from him. He kept readjusting his position on the couch. After what I saw last night, it didn't bother me. They would be doing it whether I knew about it or not. And there really wasn't anything wrong with it. They were both over eighteen and considered consenting adults. It would just take Dennis a bit longer to let go of his image of Linda as a little girl. I already knew better.\n\n\"But what about...I mean...\" His mouth was working, but he couldn't get his words out.\n\nAt that point, voices emerged from the hallway.\n\n\"...and that lotion! Man, I'm still tingling from it.\" It was Linda's voice. \"Where did you get it?\"\n\n\"Tina found it at that boutique on Main...\" Brenda stopped speaking when they entered the living room. They were both still glowing from their orgasms and still naked and shiny.\n\n\"Oh, no!\" Linda covered her face, turned, and ran back down the hallway. Brenda just stood there taking us all in.\n\n\"I didn't think you'd be back until much later,\" she said. \"I'm just getting a glass of water.\" She walked naked through the room as though it was as common an occurrence as if she were fully dressed, her breasts bounced with each step.\n\n\"Worked up a thirst, I guess.\" Kelly said with a wry grin.\n\n\"You could say that,\" Brenda said without missing a beat. She emerged from the kitchen with two tall glasses of ice water and started walking toward the hallway.\n\n\"Sit with us a bit, Brenda,\" Kelly said patting the cushion between us.\n\nMy eyebrow cocked up, but Dennis looked as though he was going to have a coronary. Brenda didn't flinch as she navigated between me and the coffee table, her buttocks jiggling as she side-stepped past me, bent over to put the glasses on the coasters, flashing a bit of juicy peach before taking her seat.\n\n\"You don't have one iota of modesty,\" Kelly said. \"Do you, dear?\"\n\n\"Well, you've all seen me naked over the years, so there's nothing you haven't seen before.\"\n\n\"True,\" Kelly said. \"But not many people, not to mention people your age, are so comfortable with their body to parade it around.\"\n\n\"I am comfortable with my body. And I'm comfortable here. This is like a second home to me, and I'm comfortable being naked at home, too. Isn't that right, Dad?\"\n\nI nodded. \"Seems so, if this morning was any indication.\"\n\nLinda came out of the hallway having put on a halter and shorts. She waited until I noticed her. \"Uhm...hi?\"\n\nDennis looked at her, his face slack, and his eyes unfocused. Kelly nodded to her. \"Have some water, dear. You must be thirsty. Brenda brought you a glass.\"\n\nI slid closer to the arm of the couch opening a spot for Linda's tiny frame to fit between me and Brenda. Linda looked at me, and I nodded back, patting the cushion. \"It's okay.\"\n\n\"So, here we all are,\" Kelly said taking the lead. It seems we all have a lot to discuss. My plans for the evening were derailed by a revelation that causes concern for me and Dennis. Then we come home to another revelation. I think we should begin in order of revelation, don't you, Barry?\"\n\n\"Fine.\"\n\n\"Dennis?\"\n\n\"Whatever.\"\n\n\"Brenda?\"\n\n\"I'm just here.\"\n\n\"Good.\" Kelly sighed as she gathered her thoughts. \"Barry. You first. What are your intentions with my daughter?\"\n\nI held back the initial reaction to Kelly's outrageous question, but Brenda couldn't hold hers in and she barked a laugh, quickly covering her mouth with her hand before taking a sip of water.\n\n\"Uhm...Well,\" I said. Linda was watching me with wide worried eyes. I took a risk and put my arm around her, rubbing her back. \"I have loved Linda since the day she was born. I have watched her grow and be a part of my family, a sister to my daughter, and like a daughter to me and Carrie, much the same way Brenda is like a daughter to you and Dennis. But in the past few years, I have come to see Linda as the beautiful person, the beautiful woman, she has grown into. She is smart, funny, and caring. She is special to me in ways I never thought I would experience again. I didn't realize it at first. I didn't realize it until this week, but I have fallen in love with her. I think I've been in love with her for some time, I just didn't admit it to myself. She has filled a hole in my soul that was left after Carrie died. My intention is to love her until the day I die.\"",
        "Linda's eyes were moist, and tears welled in the corners, threatening to run down her cheeks. Her lower lip began quivering, and I wanted to wrap my arms around her. I didn't, though, since I didn't know how Dennis and Kelly were going to react and I didn't want to provoke them.\n\n\"Linda,\" Kelly said, her voice catching in her throat, \"do you have anything to say for yourself?\"\n\n\"I love you,\" she said to me. My heart swelled and my eyes welled. I reached for her hand and squeezed it. She turned to her parents. \"I love him. I have loved him like a father for years, but then, Mrs. B died. I wept for her, but I also wept for him. He was so lost. But he kept his strength. He took care of Brenda. He was always there for her. And for me. He treated me like a person, not like a child. He talked to me and listened to what I had to say. He cared about what I thought. And he treated me like I mattered. None of the guys I've dated ever treated me like that. They always treated me like a plaything, or a prize to show off, or a trophy to be won. He's my hero. He's my knight. I will always love him, no matter what. Even after I die.\"\n\nBrenda was openly crying now, the tears dripping off her chin. Kelly's own tears streaked her mascara. Dennis' expression had shifted from blank to worry, the lines in his forehead turned into deep crevasses. After a moment of silence broken only by sniffles from the women, he sat forward.\n\n\"Linda, sweetheart, do you understand what you are saying?\"\n\n\"I do, Daddy. I love him. I know what that means.\"\n\n\"But he's much older than you. Older than me, even. Don't you understand what that means?\"\n\n\"We've already talked about that, Daddy, and I don't care. I'll be happy loving him for as long as we have together. That's all anyone can ask. That's all that matters.\"\n\nIf it was at all possible, I was falling even more in love with this young woman.\n\n\"Barry, what about you? Don't you worry what people will say? Everyone who knows you knows us, and they know Linda. What will they say?\"\n\n\"If they're honest with themselves, they'll say 'what a lucky son of a bitch,' cuz that's what I tell myself.\" I sat up reluctantly, since I had to remove my arm from around Linda to do so. \"Look, Dennis, I can't worry about what other people think. It's never been a driving force in my life before, so I see no reason to start now. All I know is I have fallen in love with two incredible women in my life, and that makes me the luckiest man on the planet. Especially since they both loved me back.\"\n\n\"Okay,\" Dennis said with a sigh. \"One more thing. Linda. You haven't gone steady for some time. Are you ready for the kind of relationship Barry wants? You remember his wife. They were faithful only to each other for as long as I knew them. Neither one had sex with anyone else the whole time they were married. Can you make that same pledge?\"\n\nI had to bite my tongue. Evidently, Kelly didn't tell him about the one time we were together. I shot a glance in her direction, but her gaze was fixed on Linda.\n\nBefore Linda could answer, I spoke up. \"Dennis, I have discovered a lot about Carrie in the past two weeks. And a lot about Brenda,\" I smiled at her, and she smiled back. \"But mostly about myself. I know Linda loves Brenda and Brenda loves Linda. I wouldn't expect them to give up each other just so she could be with me. What they have is special. Maybe more so than Carrie and Kelly were in college. As long as I know Linda loves me, I won't make any restrictions on her love.\"\n\nLinda threw her arms around me burying her face in my neck. \"I love you so much. I don't want anyone else but you.\" She turned around so she could sit in my lap and still keep me in her clutches. \"And Brenda.\"\n\nBrenda slid over and joined our hug. Her naked breasts pressed up against my chest, and I put my arm around her shoulders.\n\n\"I think we can share,\" I said as a smile ingrained in my face.\n\n\"But can Linda share, too?\" Kelly was looking at the three of us in our embrace. Her eyes were smoky, and her nipples popped in her blouse. \"Linda, would you be okay if Barry were with someone else?\"\n\n\"As long as I know he loves me, that's all that matters. I know I don't want any other man, but if Barry wants to party with someone else, and still be with me, I'm fine. As long as I get to watch.\" That was quite the admission to make to one's own mother. But then I remembered Linda watching her mother in my bed as she pleasured herself, and then last night, when Linda watched Karen blow me. It really ignited Linda's fire. Brenda was correct. Linda is quite the voyeur.\n\nDennis sat back. He looked at the group of us cuddling on his sofa, Brenda naked and Linda in only a pair of shorts and a halter and me fully dressed for dinner. I'm sure we made a peculiar image.\n\n\"Okay,\" Kelly said, \"that's one thing down. Now Brenda, before we discuss what we saw earlier, it has come to my attention that you tried to seduce my husband. Is this true?\"\n\nBrenda turned to face Kelly, the bravado she showed earlier waned, and she seemed uneasy. \"Yes. I did.\"\n\n\"And were you successful?\"\n\n\"No. He turned me down.\"\n\n\"Did that hurt your feelings?\"\n\n\"A little.\"\n\n\"Well, that is unfortunate. Do you know it's rude to try to seduce someone's husband?\"\n\n\"Well, I...I\"\n\n\"Especially without that person's permission.\" Kelly smiled. \"I know why he turned you down, dear. And it wasn't that you weren't hot enough or anything. He was just trying to protect his relationship with your father.\"\n\n\"I know that now. Daddy explained it to me.\"\n\n\"Well, good. Would you like another chance?\"\n\nBrenda's eyes bugged out of her head almost as much as Dennis'. \"Excuse me?\"\n\n\"Would you still like to fuck my husband?\"\n\n\"Uhm...I really...uh..\" Brenda looked at me and I shrugged. If she wanted to fuck Dennis, I wasn't in any position to judge, since I was prepared to make love to Linda. It did occur to me that Kelly could be setting her up for a tirade like the one she gave Diane on Tuesday, but the look on her face, the fire burning in her eyes told me she was serious. She wanted Brenda to fuck Dennis.\n\n\"Look, Brenda, let me make it easier for you. I had planned on fucking your dad tonight. I was going to fuck him half to death while Diane took care of Dennis. These revelations killed that plan, but it has made me even hornier than I was before. So, get that tight ass over there and have fun. Trust me, he won't turn you down again, especially now that he's seen your body in all its glory.\" She got up and passed Brenda who was following her directions. Kelly then sat right next to me and put her hand on Linda's knee. \"Honey, I'm about to test your resolve. I want to fuck Barry. Can you deal with that?\"\n\n\"Uhm, yeah. I guess so. If he wants to.\"\n\nWith that, Kelly started unbuttoning her blouse, revealing a laced bra that strained to contain her breasts.\n\n\"Linda,\" I said. \"It's not about me. I told you before, I'm happy just being with you. I don't need to be with anyone else.\"\n\nLinda's breathing deepened when Kelly lost her bra, freeing her breasts, and rubbing the strap marks from her swollen flesh. Linda's own nipples flared, especially when she looked over at Dennis, with Brenda on her knees between his legs fishing his cock out of his pants. \"It's okay.\" She tore her eyes away from Brenda and Dennis and looked at me. The same fire I saw in Kelly's eyes was burning even brighter in Linda's. \"I want to watch you.\"\n\nShe grabbed my face and slammed her lips to mine with a burning hunger. Her kiss tasted like cherry pie and I held her head to mine, determined to suckle every taste of her I could manage before passing out from lack of oxygen. Every kiss with Linda was new. Every touch exciting. Every sensation was like snuggling in a warm blanket that ignited every part of me. I was so immersed in the kiss I forgot about Kelly stripping right in front of me.\n\nLinda came up for air before I was ready, and my lips missed her before I opened my eyes. She looked at me like she wanted to devour me. \"I'll never get tired of kissing you.\"\n\n\"Nor I you.\" I kissed her again, drawing a harrumph from Kelly as she knelt on the couch next to me.\n\n\"Can I have a turn?\" Kelly's face was already next to mine and her fingers turned my chin in her direction.\n\nLinda smiled and pulled her head back as Kelly leaned in and touched her lips to mine. I don't know what I expected from the kiss. Kelly had been so forceful lately, at the party Tuesday, and now this evening, I could have expected some measure of assertiveness in her kiss. Her lips, however, were tentative, searching, and more than anything, pliant. It was the first time I had ever kissed her aside from the quick cheek peck in greeting, even though we had conceived a child together, and she had sucked and fucked me several times now.\n\nLinda slid back and sat in an adjacent chair where she had a good view of me and her mother on the couch and Brenda and her father in the other chair. She sat with one foot folded underneath her, the heel pressed against the seam of her shorts. Her eyes were focused on Kelly's lips as they traveled down my chest, kissing my skin as she opened each of my shirt buttons one by one. Her lips and tongue traced the lines of my pects, pausing to pay attention to my rigid nipples. Her fingers finished with my buttons and ran over my abs as she licked and nibbled my chest.\n\nA moan drew my attention away from Kelly to where Brenda was still servicing Dennis. His head was thrown back and his face locked in rapture. Brenda held his cock against his belly with her mouth, her lips pursed just below the ridge of his cockhead, and her full breasts flattened against his thigh. I could hear her kissing and suckling him with loud smacks as she teased him. That was the same maneuver that my mystery blow job queen gave me last night, and that idea made my cock swell in my pants.\n\nKelly's fingers had found their purpose again as she loosened my belt and the fastener of my slacks with the deftness of a playboy unhooking a bra strap. Her lips never left my flesh as she rubbed her face over my belly on her way to my crotch. Her hand surrounded my tumescence and fished the head from its trapped position under the elastic of my shorts. With a groan, she licked the thick vein as she stroked me.\n\n\"I have been wanting this all week,\" she said between slurps. She swirled her tongue around the head, lapping up the clear, sticky prepuce she squeezed out with her hand. She moaned as though it was the sweetest nectar as her hand traveled up and down its length.\n\nI glanced over at Linda. Her eyes were fixated on my cock going in and out of her mother's mouth while she ran her fingers over her lips, occasionally pausing to suck the tip into her mouth. Her other hand was balled into a fist and pressed against her mons as she rubbed herself on her heel. The flush in her cheeks told me how excited the scene made her.\n\n\"Stop, or I'll cum,\" Dennis said from the other chair. I swung my head over to see the two of them swapping positions. Brenda reclined in the EZ chair with her ass hanging over the edge of the cushion and her knees pressed against her shoulders. Dennis got to his knees and ran his hands over the backs of her thighs. From my position, I could see her pussy lips spread open, the slick pink flesh reflecting the lights on the copious fluid seeping from within. Her clit was fully emerged from its hood and if I were any closer, I'm certain I would have seen it throb. No porn star ever looked so wanton and so hot.\n\nDennis ran his tongue all around Brenda's nether regions, lapping up her leaking juices before drinking from the source. When he ran his tongue over her pussy, she gasped and whimpered. Her hands locked behind his head; her fingers threaded through his graying hair as she tried to pull his tongue deeper inside her.\n\n\"Yes, yes, yes. So goooooooood.\" She mumbled as he feasted.\n\nMy attention was pulled back to the lady in front of me when it felt like she was trying to suck my balls out through my dick. The head of my cock and about three inches of the shaft were behind her tight lips as she hollowed her cheeks, creating a massive amount of suction as she twisted her head. She made a ring with her thumb and index finger and held the base of my cock so tight it almost hurt. The effect made my cock feel even bigger and turn almost purple.\n\nKelly reversed her movement, and began a slow descent to the base, taking every inch on the way. When her nose nestled in my pubic hair, she started to bob her head, and I could feel her tongue dancing on my shaft. Linda was watching like a student taking notes. Her nipples tented her halter, and her shorts were darker at the crotch. I wanted her right then. I wanted to taste her. To feel her. To possess her.\n\nBefore I could, I needed to make sure Kelly got what she needed. I touched the side of her face. \"Kelly, I don't want to cum yet. Let me taste you.\"\n\nShe whimpered as she dislodged my cock from her throat, trailing a long line of spittle which she slurped back. Her eyes looked fire at me as she simply lay back on the floor at the foot of the couch and spread her legs. Her pussy was wet and waiting for me. I dropped to my knees and tongued her taint, teasing her rosebud before sucking her labia into my mouth.\n\n\"Damn!\" She clamped her hand to my head. \"You know just the spot!\"\n\nI flicked my tongue inside her dragging the tip over the pad of flesh just inside her vagina. \"Shit! Right there. Christ! I'm gonna cum already!\"\n\nHer hips began bucking under my mouth, and I had to grab her thighs to keep my tongue in position to ride out her orgasm. Her shrieks were followed by Brenda's as Dennis' tongue brought her off. Once Kelly's tremors eased, I sat back up on the couch as she caught her breath. In the chair, Brenda needed no such break as she pulled Dennis up and grabbed his cock, lining it up to spear her gaping hole.\n\nOnce he was seated and pressed in, all I could see from my angle was Dennis' ass wrapped up in Brenda's tanned legs as they churned together. Kelly was still on the floor, but she turned to watch Dennis and Brenda as I had. Linda was doing the same, but I reached out to her.\n\nWhen she saw my arms open for her, she rose from the chair and slipped out of her shorts and halter almost by magic. One second they were there, the next she was gloriously naked and sliding into my lap.\n\n\"I think it's our turn,\" I said, and kissed her neck.\n\n\"Please,\" she said. \"I've wanted this so long. But first, I need to taste you.\" She slid down until she was laying on the couch, her head in my lap. I remembered the night last week when she fell asleep in this position, and I brought her to orgasm by playing with her breasts. This was much better.\n\nMy cock had deflated somewhat since Kelly stopped blowing me, and it hung half-hard over my balls. Linda brought her face close and inhaled my scent, sniffing my cock up and down before sticking her tongue out. She caught my shaft just above my balls and flicked her tongue up making my shaft flip toward my belly, then she plastered the flat part of her tongue along my main vein.\n\nI Blinked.\n\nI recognized that maneuver. And just like last night, when her tongue reached the head, she pointed the tip and drilled it into the space below the crown.\n\nLinda was my blowjob queen!\n\nI watched her tease and please me, until she pulled back and looked me in the eye. She had an impish grin and winked at me before inhaling my cock in one motion all the way to the base. She was repeating the entire blowjob from last night.\n\nI could only watch and enjoy. Kelly had taken the chair Linda vacated and was watching her daughter please me with what could only be described as envy. Right then, I felt the entire planet should be green with envy. This was the best blowjob ever, made better because it was being given out of love.\n\nAs I felt the tingle in my balls grow, I stopped her. I didn't want to cum in her mouth or shoot it across her face. I wanted to cum inside her; to feel my love fill her core.\n\n\"Linda, come here,\" I said as I pulled myself from her mouth. \"I need to feel myself inside you.\"\n\n\"Yes,\" she hissed as she rose up. I slid over to give her room to straddle my hips and position herself over my rampant erection. Precum was oozing down the head like her juices were dripping from her lips. When she was in position, she reached down and held her lips open for me, and I dragged the head of my cock through her folds, smearing our combined lubricant all over both of us.\n\nThen it began. She allowed herself to drop a millimeter at a time. There was no misalignment. There was no bending my shaft in half. There was only the glorious joining of two souls into one body as my cock speared her pussy. Her heat cooked my cock as she descended. After a delicious eternity, I felt myself bottom out inside her, the searing heat of our union taking me on a journey out of my body.\n\nI ran my hands along her back as she sat there, my cock balls deep inside her. I flexed myself, and she whimpered as my cock swelled. I brought my hands forward until I could cup both of her magnificent breasts, marveling at their symmetry and perfect shape. She simply sat there, allowing my exploration, her eyes closed. My hands left her breasts and slid up her chest to cup her face. When I threaded my fingers through her hair, her eyes fluttered open and she took a deep breath.\n\n\"Hi,\" she said.\n\n\"Hi.\" I was confused.\n\n\"I never thought something like this was possible. You took me someplace wonderful. I never want to leave.\"\n\n\"It gets better, Sweetie.\"\n\n\"I don't see how.\"\n\nI rocked my hips and she gasped. Her eyes opened wide as she grasped my shoulders and rocked her hips as well.\n\n\"God!\" She started ticking her hips, not thrusting but rocking, forcing her clit to grind against my groin and my cock to stir her honeypot. If she hadn't had someone teach her this, she had a natural ability that rivaled Diane or Austin.\n\nA gasp from the other side of the room made us both look as Brenda had gotten up and was busy mounting Dennis reverse cowgirl. His cockhead was already buried inside her as she slid down his shaft. When he was fully inside her, she put her feet on the edge of the chair, leaned back and began fucking him in earnest. In that position, her auburn hair falling across her flushed face, her eyes lit with passion, I saw Carrie in her.\n\nKelly rose from her chair and went to them, settling between their legs, watching her husband fuck my daughter close up.\n\nBrenda looked at me and winked. \"That's her favorite position,\" Linda said as she rode me. \"She really gets off when someone licks her while she's doing that. Oh! It looks like mom is about to...yep.\"\n\nKelly's tongue began licking Dennis' shaft as it emerged from Brenda's sodden gash. When Brenda dropped back down, Kelly simply left her tongue to bathe whatever flesh was in front. Brenda's clit, then Dennis' cock, then Brenda's clit again.\n\nLinda stopped her grinding and got up from my lap. I was confused only for a second until she turned around and guided me back inside. She was mirroring Brenda's actions. Fucking me the same way Brenda was fucking Dennis. Two girls fucking each other's fathers at the same time. They looked at one another, their passion feeding off each other. Linda's fire stoked from watching her best friend fuck her father.\n\nI looked down to see my cock spearing Linda's pussy, her gash spread open around the shaft, coating it with her juices as she moved up and down. Her rosebud clinched tight above me. I licked my thumb and traced circles around the hole, making her squeal and shudder.\n\n\"No one's ever touched me there before,\" she said between gasps.\n\n\"If you don't like it...\"\n\n\"No. It's not that. I'm just not used to it.\" She groaned and ground her clit against me as her hole relaxed under my thumb. \"You can do it again if you want.\"",
        "I did just that. I felt a gush of juices and a clenching of her pussy around my cock when I did, which told me that she liked it. I wasn't going to take her anal cherry this time, but I filed it for future reference.\n\n\"Ahhhh!\" Brenda cried out. \"I'm gonna cum. Keep doing that. Oh, please. Right there. Right there.\" Her breathing sounded like she was running the marathon and her motions grew spastic as her orgasm overtook her. Kelly kept up her assault on Brenda's pussy as Dennis pounded her for all he was worth.\n\nBrenda's orgasm did two things. It triggered my nut, and it made Linda's pussy heat up even more. Linda started panting and bouncing on my lap as I reached around to cup her breasts to hold her up as cum rocketed out of me into her twitching pussy. Linda cried out as her orgasm gripped and transported her. She fell against me limp after the last spasm wracked her body.\n\nMy cock softened only slightly, just enough for the cum I shot into her to bubble out around me. I lay back, Linda reclining on top of me, both of us trying to catch our breath. Kelly rose from the floor and helped Brenda disengage from Dennis and the two of them relaxed on the sofa beside us. For several moments, the only sound was our labored breathing.\n\n\"Well,\" Dennis said from his chair, his limp, slimy cock shrinking in a puddle of his and Brenda's cum, \"That was certainly not how I expected the evening to go.\"\n\n<p align=\"center\">#</p>\n\nAs we cooled off, silence permeated the room. The ticking of the mantle clock reverberated throughout the house. Linda stayed astride me, her head laying back against my chest, my cock softening inside her, and my arms wrapped around her. No one dared speak. I focused on Linda, avoiding looking in Dennis' direction. His reaction in the car to my feelings for his daughter worried me, even though he watched as we made love, and he had sex with my daughter. I hadn't planned on my first time with Linda being in front of her parents, but the girls' activities while we were out started an avalanche that swept us all up and carried us to where we found ourselves.\n\nBrenda was the first one to break the silence. She slapped her thighs and stood up. \"Anyone else thirsty?\"\n\nLinda stirred in my lap as though she was disturbed from a slumber. \"Hmmm? Oh, yeah. I could use a Gator-aid.\" She turned to kiss my cheek. \"You want anything, love?\"\n\nThe smile slid across my face of its own accord. \"I think I have everything I'll ever need.\"\n\nThe girls made their way into the kitchen leaving us sitting in various stages of dress. Kelly was naked, Dennis had his pants around his ankles and his shirt unbuttoned but hanging off his arms. I was in pretty much the same state of dress. The heat of the sex had made me sweat, and the damp clothes were constricting and uncomfortable, but I did not want to get naked at this point. Dennis used a remote control to turn on the ceiling fan.\n\n\"That was...\" Kelly paused.\n\n\"Unexpected,\" Dennis said.\n\n\"Hot,\" I said at the same time.\n\n\"Yeah,\" Kelly said. \"But what does this mean? What kind of parents are we?\"\n\n\"Well, I don't know about you, but I've always had a problem denying Brenda what she wanted. As long as it was reasonable, she always found a way to get whatever it was.\"\n\n\"Linda could usually get me to go along with her as well,\" Kelly said. \"Dennis was always the stop gap. He was the 'no' vote typically.\"\n\nDennis looked aghast. \"Are you saying the girls are to blame for this?\"\n\n\"No. Not at all,\" I said. \"I'm saying they wanted this. If they didn't, we wouldn't have. I was not about to have sex in front of Brenda. Never in a million years. It wouldn't have occurred to me.\"\n\n\"Me either. In front of Linda, I mean,\" Kelly said.\n\n\"So, what you're saying is that we're bad parents,\" Dennis said as he rubbed his face with both palms.\n\n\"No, you're not!\" Brenda was standing behind the couch holding out a tray filled with water glasses. Linda was behind her sipping purple liquid from a plastic bottle. \"Just because you've raised daughters who enjoy sex as much as you clearly do doesn't mean you're bad parents.\" She passed the tray to Kelly who offered me a glass before taking one herself.\n\n\"Yeah,\" Linda added. \"You didn't force anything on us. You've taught us to love. That's what we're doing, and there's nothing wrong with that.\"\n\nDennis shook his head. \"But it's wrong for a parent and a child...it's...it's just wrong. Kelly, back me up here.\"\n\n\"Oh, no. I'm not going back into that 'right/wrong' closet again. I just got out of it after seven years,\" Kelly said. \"Besides, it's not like you had sex with your daughter. And Barry didn't have sex with his.\"\n\nLast night's party flashed in my mind. How I thought Brenda had given me that incredible blowjob, and I still didn't know who rode my cock at the end, but after this evening, I was certain it wasn't Linda. I cast my eyes over my glass at Brenda who was looking at me. She smiled, then her eyes traveled to my limp, sticky cock and her smile grew as her nostrils flared. I wasn't convinced Brenda shared Dennis' reservations, and I didn't know how I felt about that.\n\nDennis downed his beer before grabbing the glass of water. He looked at Linda, who was standing next to me, her hand on my shoulder as though she were sheltering me. Then he looked at Brenda and he sighed and shook his head. \"All of the sudden, I'm exhausted,\" he finally said. He looked like he wanted to say something else but stopped himself.\n\n\"You know, so am I,\" I said sitting forward to get up. \"I think Brenda and I will head home. There's a lot to process, and a good night sleep would be best.\"\n\nLinda looked stricken, but I couldn't sleep under the same rood with her right now. She would want to sleep with me, and as much as I'd love that, I don't think Dennis could handle it yet. Kelly's face was neutral, neither surprised nor disappointed. I think she was thinking along the same lines as I was. Clearly, she didn't have any problems with what we did. I just hoped that attitude remained in the light of day.\n\nWe dressed in silence. No one discussed the events, nor suggested any plans for the rest of the weekend. There was no awkwardness. Just nothing to say. Dennis and Kelly walked us to the door. Brenda just walked out, but I turned and gave Kelly a hug and a kiss on the cheek before clasping Dennis' hand. \"We'll talk tomorrow.\"\n\nHe drew a deep breath. \"Right.\"\n\nLinda was behind her parents, and the way they were standing, she couldn't get to me to say goodbye without pushing one of them out of the way.\n\nWhich is exactly what she did.\n\nShe wrapped her arms around me, and I, her. I kissed the top of her head as we hugged.\n\n\"I love you,\" she said.\n\n\"I love you, too.\" I saw Dennis' jaw clench, then relax. \"Tomorrow,\" I said before letting go of Linda. \"We'll all talk tomorrow.\"\n\nThe drive home was not as somber as the goodbye. Brenda almost bounced in her seat; her hands drumming a beat on her thighs in time with the music on the radio. \"God! That was incredible!\"\n\n\"Yes. It was. I certainly never imagined that happening in a million years.\"\n\n\"Did you enjoy it? Tell me you loved it.\"\n\n\"I enjoyed myself, yes.\"\n\n\"What part was your favorite?\"\n\n\"Brenda!\" I had also never in a million years imagined discussing with my daughter having a group sex session as though we were discussing a trip to an amusement park.\n\n\"What? I know you had to have a favorite. Mine was having Mrs. Mitchell eat me while riding Mr. Mitchell. Gee, it sounds weird calling them that now, doesn't it? I mean, after all that's happened, it seems too formal, don't you think? I mean after having him deep inside me while her tongue was flicking all over us. God that was so hot. Especially while watching you and Linda!\"\n\nShe was going a mile a minute, still riding the rush of energy she drew from the sex. Something else she got from her mother. Sex was like an amphetamine for Carrie, especially when she was fired up. I could see so much of Carrie in Brenda, particularly now.\n\n\"I told you she loved you. I knew you would be great together. I love it when I'm right. You know, I don't think I've ever seen her cum so hard before.\"\n\n\"I think a lot of that was watching you and her parents. I think you're right about her liking watching.\"\n\n\"Of course, she does. Who doesn't? I liked watching the two of you. Especially the look on your face when she was blowing you.\"\n\n\"Well, yeah. She used a technique that I hadn't experienced since your mother...\" I trailed off. I glanced at her out of the corner of my eye. She was highlighted by the passing streetlights, alternating her profile in shadow and light as I drove. I couldn't help noticing the shadows her nipples created through the fabric of her shirt. She turned her eyes forward on the road as we drove. \"Well, anyway, I didn't know it was that common. I do know, though, that your mom wrote about it in her diary.\"\n\n\"Uhm,\" she cleared her throat. \"Well, I might have taught her that technique. Or at least let her read about it.\"\n\n\"She's read Carrie's diary?\"\n\n\"Not all of it. I just read about that, and I tried it out on Tommy at one of the parties. It was a big hit. Linda asked me about it, so I showed her.\"\n\n\"You didn't show it to anyone else, did you?\"\n\n\"No, sir.\"\n\n\"And it was Linda who used that technique on me at the party last night?\"\n\n\"Uhm,\" she looked at me as though I caught her in a lie.\n\n\"Because if it was her, why would Karen be the one to finish me off? Why would everyone pretend it was Karen?\n\n\"Uhm...\" She grimaced. \"Well, Linda wanted to be the only one who got to be with you last night, so she called dibs. And since she was the winner at the swim meet, the team agreed. It wasn't easy, though. Karen and Bethany both wanted to be with you, but they agreed in the end.\"\n\n\"Except that Karen still got to blow me.\"\n\n\"Well, you named her, and Linda didn't want you to know it was her. Since she usually doesn't participate in these parties, except with me.\"\n\nIt followed a weird logic, so I accepted it. It did not explain the whole evening, however. If Linda called dibs at the party, and I knew that it wasn't her that fucked me, then who did? Before I could press further, we pulled up to our house. It was well after midnight and I was feeling the day's toll. Brenda was still riding her high and I got the feeling she wasn't ready to settle down yet. A feeling supported by her going to the kitchen and grabbing a soda from the fridge. If I drank caffeine this late, I'd be up for the rest of the night.\n\n\"You sure you want that now? Maybe water would be better.\"\n\n\"Nah. I'm thirsty for this.\" She popped the top and took a long pull from the can before moving to the couch.\n\n\"So, let's talk about how all that happened.\"\n\nHer eyes flicked at mine for a second before looking at her soda. \"What about it?\"\n\n\"Why did you come into the room bare naked? Were you trying to incite an orgy or something?\"\n\n\"Dad!\"\n\n\"Seriously. I know you're the instigator of your little sex club. Were you planning this all along?\"\n\n\"No. I wasn't.\"\n\n\"Then what? The last time you walked naked into a roomful of adults you were three years old.\"\n\n\"But we didn't know you were there when we walked in.\"\n\n\"I'll give you that, but when you saw that we were, why didn't you follow Linda's example and leave to put on clothes?\"\n\n\"You'd already seen me naked by then. And I figured you already knew why we were naked. So, what would be the point?\"\n\n\"Because, Brenda, people don't just go around each other naked all the time. Especially around family.\"\n\n\"So, this is because you're my dad? You're mad that I was naked around you? But this morning, we already saw each other naked, so what's the big deal?\"\n\nWhat indeed? I struggled to understand why I was chastising her. If I had a problem with what happened, why didn't I stop it when it happened? Why run the inquisition? Surely there was something else bothering me, and I needed to figure out what that was.\n\nI sighed and shook my head. \"I'm sorry. I'm just trying to understand. So much has happened in such a short time, I'm having a hard time dealing with it all.\"\n\n\"I get that.\"\n\n\"Do you? Do you know how big a deal it is for me to be in love again?\"\n\nShe looked away from me and started chewing her fingernail. When she looked back at me, her eyes were wet. \"I think I do.\"\n\n\"Look, Brenda. This, all of this, could change things forever. You're in your last year here. Next year you and Linda will be at college, and I'll be here. If Linda and I become a couple, that won't be easy on her or me. Or you, for that matter. And I have no idea what Kelly's transformation means for them.\"\n\n\"Well, Linda and I can go to school closer to home. There's Hallstead...\"\n\n\"Whoa. Hold up.\" I put my hands up and turned to face her directly. \"I'm sure Hallstead is a fine school, but you can do so much better.\"\n\n\"But I'd be close to you and Linda. And it's cheaper. I won't cost you a penny.\"\n\n\"Brenda, Diane pitched Hallstead at me at dinner tonight and...\"\n\n\"Wait. You had dinner with Coach West?\" Her eyes drew close and got darker.\n\n\"Dennis and Kelly set it up. I think they were planning on some playtime with the four of us. They didn't know about me and Linda yet.\" She relaxed a little, but a thought popped into my mind. I realized what was bothering me. \"But that was their plan. I think Diane's plan was to get me to have you enroll at Hallstead.\"\n\nShe furrowed her brow. \"Why would she care where I went to school?\"\n\n\"Well, let me put it this way. Whose idea was it to do the cam show with Austin to raise money for the season?\"\n\n\"Kiki's.\"\n\n\"Are you sure about that?\"\n\nBrenda was about to answer, then closed her mouth and tilted her head as she thought. \"Austin. It was Austin's.\"\n\n\"And whose pet is Austin?\"\n\nBrenda's eyes grew wide. \"That bitch! Of all the manipulative, conniving, deceitful, scheming...\"\n\n\"Calm down, sweetie. There's no need to get mad.\"\n\n\"But why? Why manipulate me like that?\"\n\n\"Well, look at yourself. You're a beautiful young woman. She's a person who knows how to capitalize on beautiful young women. She could make a fortune with you.\"\n\nBrenda blinked as her mind put the pieces in place. \"You mean she's a madame?\"\n\n\"Well, nothing so tawdry or clear cut. She has put herself in a position to offer 'services' to a select clientele willing and able to pay a premium. She's already recruited many former swim team members to work for her. That party I went to last weekend was one of her events. There were many young people there, all wearing those pendants, and they were entertaining some big wig muckety mucks, including the Dean of Hallstead.\"\n\n\"Wow.\" Her eyes flicked back and forth as she processed her thoughts. \"I never knew. I just thought we were having fun,\" she said, then her eyes darkened. \"I didn't know I was auditioning to be a whore.\"\n\n\"Stop right there. You're not a whore, and you will never be one. Not if I have anything to say about it.\"\n\n\"I was just wanting to have fun. Our parties...I never meant...it was always just about sex. We never made it about money.\" The words tumbled out of her mouth so fast she had to stop to catch her breath.\n\n\"Take it easy, sweetie,\" I said pulling her into a hug. I ran my hand up and down her back. \"No one is making you do anything you don't want to do.\"\n\n\"Well, I'm definitely not going to Hallstead now. Fuck Austin. And fuck Coach West.\"\n\n\"I did already,\" I said with a deadpan expression.\n\nWe both burst into laughter.\n\n<p align=\"center\">#</p>\n\nSunday morning saw me getting the lawnmower ready for what I hoped was the last cut of the year while Brenda made us breakfast. We talked about her studies, we discussed her volunteer work that she needed for her applications, and we talked about the rest of the swim season. We never mentioned sex. We never mentioned Austin or Diane, and we never mentioned Hallstead.\n\nAfter breakfast, Brenda had homework while I finished mowing and trimming the yard, ran the pool skimmer and cleaned the pool house to get it prepped for the winter. The pool is heated, and we do occasionally swim in it off season, but we don't run the pumps year-round. I was thinking it would be a good time to call the Mitchells to see how they were handling the party, and I thought I should call Dennis before I called Linda. I had to know he was okay with it. Just before lunch, I heard a car pull into the drive. I didn't have my phone with me, so if someone had announced they were coming, I didn't get the message.\n\nWhen I came around the house, Linda was getting out of the car as Dennis slammed his door. His face looked like he didn't get much sleep. Kelly looked a bit more energetic when she got out.\n\n\"Hey, guys. I was just about to call you.\"\n\n\"We called earlier,\" Kelly said. \"You didn't pick up.\"\n\n\"I was in the pool house. Come on in. Thirsty?\" No one made a move of greeting as they filed into the house. No hugs. No handshakes. No kisses.\n\nWe sat around the living room. I in my recliner, Dennis and Kelly on the sofa, and Linda on the love seat. Brenda was in her room, as far as I knew.\n\n\"Barry,\" Dennis started after a moment, \"we love you like a brother, you know that, don't you?\"\n\n\"I do.\" I had to wonder what was coming.\n\n\"We understand why you withdrew after Carrie died and we do not fault you for that. But we,\" a quick cut of Kelly's eyes gave him pause for a moment. \"That is to say, I worry that you haven't been in a relationship since then. And that maybe all this is a reaction to that.\"\n\nLinda sat in silence, her hands stacked between her knees, her eyes flicking between her father and me. She was hanging on his every word. Kelly sat with her knees crossed and she swung her foot to the beat of an unheard rhythm as she drummed her fingers on the padded cushion of the couch arm. She would glance at him, but then look at me; her eyes filled with sympathy.\n\nI sighed. \"You think I'm clinging to the first real emotion I've felt in six years.\"\n\n\"Well, not to put too fine a point on it, yes.\"\n\n\"That would mean that Linda was the first one to come around for me to fall for. That there haven't been any other women around for me to fall for.\"\n\n\"Well, no, Barry. It's not like that. I know you've been out with other women.\"\n\n\"Understand something, Dennis. I have been with other women. I was with Diane. I was with Austin. I was with Karen. I was with Tina. I was even with Kelly. I didn't fall in love with any of them. I fell in love with Linda, and it wasn't because we had sex, because last night was the first time we've had sex. I fell in love with Linda because she is a caring, intelligent, compassionate young woman who isn't interested in me just because of my dick, or my bank account.\" I felt the heat rising under my collar. I hated explaining myself or justifying my actions.\n\n\"And you don't think your age is going to be a problem?\"\n\n\"Oh, it's going to be a problem for some people. Just not us.\" I tried to keep a lid on my volume, since yelling wouldn't help anything, but Dennis was making me angry. I filled my lungs and counted to three before continuing. \"Dennis, I love you all. Actually, I love you even more now that I understand Carrie better. But I am in love with Linda. Nothing you say will change that, because nothing anyone says can change that. I will love her even if she decides that she doesn't love me.\"\n\nLinda covered her mouth with her hands as tears overflowed her eyelids. Kelly simply smiled. Dennis gave me a stern look, but then the corners of his mouth cracked. He nodded as the smile began to grow on his face. \"Well, then,\" he said, \"that's that.\"\n\n\"What? That's what?\"\n\nKelly and Dennis stood up and hugged each other as I wondered what the fuck was going on. They turned and took Linda by the hand and led her to me. \"We had a long talk with Linda last night to try to understand what she wanted for her life. She showed us the same side of her that you told us about. The side that we never paid attention to until now. She, Kelly, and I talked about the future, and the past. I understand better now what has happened to you, and more importantly, how much Linda has grown. She is a young woman who knows her mind and knows what she wants out of life. For reasons I can't fathom,\" Dennis said with a smile, \"she wants you.\" He presented her hand. \"You have our blessing to date our daughter.\"",
        "I flew out of the chair with my arms out and Linda was already in them before I was fully standing.\n\n\"If you hurt her,\" Dennis said, his stone facade back in place, \"you and I will have a problem.\"\n\n\"Oh, Dennis shut up.\" Kelly swatted his shoulder. \"You know he'll never hurt her. Of all the guys she's dated, this one has a track record we know all about and approve of.\" She reached over and hugged me. \"Just don't go thinking she's moving in with you, yet.\"\n\n\"No worries. We're not there yet.\"\n\n\"Well, alright then,\" Dennis said. \"You and Brenda come over for dinner tonight. Linda informed me that she wants to cook.\"\n\nI looked at Linda with my eyebrows up. Her arms remained clamped like a vise around my chest. \"I want to cook for the people I love most,\" she said. \"And you're at the top of the list.\"\n\nBrenda chose that moment to emerge from her room. Her face was strained, her brow furrowed.\n\n\"Sweetie, is something wrong?\"\n\n\"Just everything,\" she said. \"Everything is wrong.\"\n\n<p align=\"center\">#</p>\n\n\"I got this email. It came yesterday, but I only saw it now.\" Brenda handed me her phone and it was from the admissions office for Hallstead.\n\n\"On behalf of the Board of Trustees, the faculty, administration and staff of Hallstead University, we congratulate you on your acceptance to the incoming class of 2022.\" It went on to describe the orientation process and had links to complete the requisite financial aid forms. \"Why is this bad?\"\n\n\"Dad, we talked about this last night. I can't go there. I won't go there. I won't be one of coach West's whores.\"\n\n\"Now, hold on, Brenda,\" I said. \"This doesn't mean you have to go. It just means you've been accepted. You'll get other letters from other universities. You pick which one you'll actually attend.\"\n\n\"Wait,\" Dennis said before Brenda could respond; his eyes widened in confusion. \"What do you mean 'Coach West's whores?'\"\n\n\"She has former swim team members performing sex shows at her parties,\" Brenda said as though her mouth were full of the most vile-tasting swill.\n\nIt was like a shade raised on Dennis' face and he blinked at the light. \"You mean...when you were at that last party....those girls were...\"\n\n\"Not just the girls, from what I gather,\" I said. \"You remember the young men who escorted you out? Some of them were servicing the female party-goers.\"\n\n\"For money?\"\n\n\"I don't know for sure. At least for tuition to Hallstead, based on Diane's pitch last night. Of course, it's all supposition right now. I have no proof.\"\n\nKelly and Dennis shared a look that spoke volumes. Neither seemed to be aware of any of this, and I marveled at being the only one who had a clue for once.\n\n\"Barry, I had no idea. We were just looking to...uh...\" Kelly looked at the girls and bit her tongue, \"have some fun with her last night.\"\n\n\"That's why you shut her down so quick about the scholarship,\" Dennis said as he snapped his fingers. \"But why didn't she pitch Hallstead for Linda?\"\n\nI shrugged. \"She knows about the, ah, team's activities, probably from Austin or Karen, and they know Linda doesn't participate. She probably assumes she wouldn't be amendable to the deal.\n\n\"Damn straight,\" Linda said, breaking her silence. \"I had an argument with Bethany and Karen about the cam-site after the last party. There's no way I would participate in any sex-for-money situation. That's just gross.\"\n\n\"I'm proud of you, Baby Girl,\" Dennis said putting his arm around her.\n\n\"Well, that's that as far as I'm concerned.\" I squared my shoulders. \"There are several colleges out there that don't come with strings attached. You'll get your offers. Remember, it's still early in the year.\" Even as I said it, there was a nagging pull at my stomach that told me there was more to this than just an acceptance letter. Brenda's face told me that she shared my view.\n\n\"Tell you what,\" I said clapping my hands, \"since you guys are already here, how about we do dinner here? Linda knows her way around my kitchen, and if we don't have what she needs, the store is just down the street.\"\n\nDennis and Kelly looked at each other and shrugged. \"Why not? But Kelly was going shopping this afternoon.\"\n\n\"We still can,\" Kelly said. \"We'll just come back here when we're done. Linda can stay here while we shop. Do you mind, honey?\"\n\nLinda beamed a smile at me that made my heart swell. \"I think I can suffer through the afternoon.\"\n\nLinda walked her parents to the door leaving Brenda and I alone in the living room. Brenda turned to go back to her room, but I caught her by the elbow and fell in beside her. She was still rereading the letter. \"What is it? You still seem bothered. I told you, an acceptance letter doesn't mean you have to go. You'll get other letters from universities you applied to.\"\n\n\"Dad,\" she drew a long breath as she looked from the letter to me, \"I never applied to Hallstead.\"\n\n<p align=\"center\">#</p>\n\nWhen Linda inventoried the kitchen, she prepared a shopping list and sent me to the store. Mundane chores like grocery runs often afford the best times to reflect and consider the changeups and curve balls of life's challenges. I spent six years hiding from love while refusing to acknowledge that my own daughter had grown up into a wonderful reflection of her mother. I spent six years denying how much I needed someone in my life to love and to love me. I spent six years walling myself up with my pain and not sharing my feelings with anyone. That was my greatest crime, because it not only hurt me, it hurt the most important people in my life. It also prevented me from finding the joy in life. I vowed to change that. I vowed to find the fun in every day, as I had Friday and Saturday nights. As I wandered the aisles in the store, I saw items I had bought many times over the years, but this time, they stirred memories and feelings as I recalled my life with Carrie when we were just starting out. Now I was buying the items for my new love and my new life. I couldn't help smile. I'd never had such fun grocery shopping before.\n\nIt was a short grocery list and I returned in less than an hour to find no one in the house. It seems the siren song of sunlight reflecting off the pool drew my two mermaids to play in the waves. This was not unusual. I couldn't count the number of times I came home to see these two splashing each other in the water. What made this time memorable was that they were both skinny dipping. Neither were swimming laps or trying to get any kind of workout in. They were content to float on their backs, their breasts breaking the water as they used their arms to keep themselves afloat. The ripples of the water obscured their hips, hid their pubes, and distorted my view of their legs. Sunlight glinted off the barbells in Brenda's nipples, and I wondered again when she got them. Before Tuesday, I never noticed any distortion in her blouses indicating she was wearing the jewelry.\n\nI put the groceries away, my eyes constantly returning to the pool and the beautiful view therein. A splash let me know Linda had submerged, and a squeal announced that she had surfaced and dunked Brenda. A full-on water fight broke out as the two splashed and grappled with each other, squeals and giggles carrying over the water. My eyes couldn't help but be drawn to the jiggle of Linda's breasts as they wrestled, the sight causing an uncomfortable tightness in my pants and a longing in my heart.\n\nAfter putting away the groceries, I made my way poolside dropping my clothes as I went so that when I reached the edge of the pool, my growing erection was soaking up the sunlight. The girls didn't notice me at first, so wrapped up were they in their play. I took two steps back and launched myself into a cannonball, arcing through the air before splashing into the water next to them. I kicked out when my feet found bottom and surfaced to two irate women staring daggers at me.\n\n\"That wasn't funny, Dad,\" Brenda said with a scowl. \"You scared the bejesus out of me!\"\n\n\"Me, too,\" Linda said as she splashed me with two handfuls of water.\n\nI couldn't help but laugh until I felt about a hundred pounds suddenly settle on my shoulders as Linda wrapped her arms around my chest and tried her best to pull me under. She wasn't having much luck until Brenda joined in, diving under, wrapping her arms around my legs and shoving as hard as she could. Something brushed my erection as we wrestled, and I tried to ignore it. I had no choice but to grab hold of Linda and pull her under with me, but my hard-on was trapped between two bodies, and I couldn't tell who the other one was.\n\nI wrapped my arm around Linda and pulled her up with me as soon as I could get me feet under me, and I launched her into the air hurling her several feet into the deep end. Before Linda splashed down, Brenda hoisted herself onto my back and I felt the cold metal of the barbells dragging across my flesh as she tried to pull me under. I spread my stance and, with my opposite hand, grabbed her knee and pulled her around until I could get my arm under hers. She grappled with me as I lifted her clear of the water. Her arms wrapped around my neck and tried to get me in a reverse headlock, which pressed my face into her left breast, her engorged nipple poking my cheek. My body reacted to the contact and I felt myself stiffen as I grabbed her inner thigh to get leverage. She was taller than Linda and a bit stronger, so it took more effort to disengage her and fling her clear.\n\nThe splash she made when she hit the water had not calmed when I felt Linda grabbing me from below again. This time, she didn't attempt to climb up my back with the intention of dunking me. She stayed below the surface, her hand holding my ass as she brought her face to my swelling cock. I couldn't help groaning when she sucked me into her mouth.\n\nThe years of swimming had taught her amazing breath control, because even though she was completely submerged, she was able to pleasure my cock for several moments, which was all Brenda needed to regroup and attack me from behind again. Her legs wrapped around my waist, pinning my arms to my sides as she threw her weight back. Linda had a hold of my legs, so I couldn't compensate for the shift in weight, and I fell backwards. In the water, neither Brenda nor Linda let up their attack, both trying to hold me down and keep me from gaining my feet. On more than one occasion, a hand grabbed my cock, which served to distract me long enough that it took until my lungs hurt before I was able to muscle my way free.\n\nEven as I broke the surface sputtering and gasping, Brenda was still plastered to my back. The chlorinated water burned my eyes.\n\n\"Ha! We got you good!\" She laughed in triumph as she high-fived her friend. \"You went down twice. Finally!\"\n\n\"Yeah, well you cheated. Linda distracted me...\"\n\n\"All's fair in love and war, Dad.\" Her arms loosened and she slid down my back. \"And in this case, that's a two-fer.\"\n\n\"Yeah, I love you, too.\" I wiped the water from my face and brushed my wet hair back. \"Though you have a weird way of showing it trying to drown me and all.\"\n\n\"Ah, come on,\" Brenda said as she cleared the wet hair from her face. \"You enjoyed it.\"\n\n\"It seemed that way to me,\" Linda said with an impish grin.\n\n\"Well, it would.\"\n\nBrenda barked a laugh. \"He said 'wood'.\" Both girls broke down in laughter at their joke before Linda slid her hands up my chest.\n\n\"I enjoyed it,\" she said fixing me with a smoldering look. \"I want to do it some more.\" She pushed me backward until my foot hit the concrete steps forcing me to step up. She followed me until my erection was clear of the water, then she dropped to her knees and inhaled my cock before I could register her actions.\n\nI wanted to stop her. I wanted to caution her that it was inappropriate to do this in front of Brenda, even though just last night we had done much more. Words were beyond my ability at that particular moment, however. The only sensation I could process was the pressure of her lips around my shaft, the heat of her mouth around the head, and the moisture of her tongue along the main vein.\n\nA splash broke me out of my spell, and I looked up to see Brenda sitting on the side of the pool next to us, one leg still dangling in the water, the other bent at the knee with her heal against her buttocks. Her pussy was totally exposed, and her labia opened to reveal her moist pink flesh as her finger rubbed tight circles on her clit. Her eyes locked onto Linda's mouth stretched around my erection.\n\nMy knees weakened under Linda's ministrations, and I had to sit. She never lost contact with me as she adjusted her position, following me with her mouth glued to my cock. She moaned with my cock in her throat, causing her lips to vibrate around me, and making me moan in return. The pleasure made me want to close my eyes, but I couldn't look away from the sight of Brenda watching us while touching herself. The sheer brazen act was so wrong in my parochial mind that it fanned the flames of passion Linda was stoking. Brenda's left hand was flicking her clit while her other hand cupped the swell of her right breast, lifting it, squeezing it, dropping it, then repeating the action. Her nipples grew to almost a half-inch long, so the jewelry didn't rest on her areola. Her fingers finally grabbed the nipple and pulled it, making her sigh in satisfaction. I couldn't help that my mouth watered at the sight.\n\nLinda slurped my cock and pulled my attention back to her as she licked her way to my balls, pausing to bathe them both with her tongue before sucking them one at a time into her mouth while her hand moved up and down the length of my spit-covered shaft.\n\n\"Oh! Yes!\" I said with a long exhalation. I could feel my orgasm building and she was working it toward completion. The feeling built even more when I heard the wet sounds of Brenda's pussy as she played with it. Her fingers were now buried deep inside her as she ground the heel of her palm into her mons, her hand moving in rhythmic jerks on her pussy. I glanced up past her erect nipples to her face to see her looking at me with unbridled lust in her eyes. My cock reacted, swelling even more in Linda's jerking hand.\n\n\"I didn't plan on this, but I have to have this in me now,\" Linda said before spying her friend next to us. When her eyes saw Brenda's wide open, pink wet pussy, she whimpered. With no more words, she dove tongue first into my daughter's pussy, turning herself to present her own cunt to me.\n\n\"AH! Brenda screamed when Linda found her clit. She lay back on the deck, both hands now full of her tits as she panted and gasped.\n\nMy cock throbbed in the air; Linda having forsaken it for my daughter's pussy. Brenda saw it and looked at me. \"Fuck her, Daddy. Fuck her hard.\"\n\n\"Gawd yes!\" Linda gasped, her fingers still strumming Brenda's cunt. \"Please put it in me!\"\n\nI rose and moved behind the perfect globes of her ass. I dragged my engorged head through her folds, picking up her copious juices before lining up with her opening. I pressed forward, watching every inch sink into her core as I felt the moist heat surround me. Even though we had sex the night before, it was exquisite and new. We both groaned with pleasure at our coupling. When I bottomed out inside her, I remained there for several moments, just savoring the sensation of being buried inside a woman I loved. I could feel her muscles grip me as though trying to coax me even deeper. I squeezed her beautiful cheeks before grabbing her hips to pull myself out. When all that was left was the head, I pushed back in, marveling at the sensation that didn't seem like it would ever grow old. I repeated the languid pace, pushing and pulling in a measured stroke. I didn't want to cum too soon. When I bottomed out again, I twisted my hips to apply pressure on her clit, making her whimper.\n\n\"Give it to me,\" Linda said between slurps of Brenda's pussy. \"Harder.\"\n\nThe lady's wish was my command, and I pulled back and slammed forward as hard as I could. The slap of my hips against hers reverberated off the glass patio doors. She gasped with the force.\n\nSlap! Gasp!\n\nSlap! Gasp!\n\nSlap! Gasp!\n\nWith each thrust, I increased the pace until my hips were a blur, pistoning my cock into her. I watched the ripples of our motion jiggle the globes of her ass. The orgasm I had been trying to hold off started building fast, and it took every bit of concentration to keep from blowing too soon.\n\nLinda's gasps turned into cries as she neared her release.\n\n'That's it, Daddy,\" Brenda said, now actively rubbing herself off, since Linda had given herself over to the sensations I was giving her. \"Fuck her good,\" she was panting, obviously near her own orgasm. \"She's loving it. She's gonna cum so hard.\" Brenda groaned and shuddered. \"Yes. You want to cum on his big cock, don't you Linda? You want to cum on my daddy's big fat cock.\"\n\n\"Yes,\" Linda hissed as she started driving her hips back to match my stroke.\n\n\"You've been wanting that cock inside you for so long, haven't you? Now he's in you. This isn't that dildo we usually use. My Daddy is really fucking you like you've always wanted, isn't he?\"\n\nLinda just whimpered, but I felt her pussy clamp down on my shaft, making me groan in response.\n\n\"He's gonna cum in you, Linda. My Daddy's about to fill you up with his cum. Do you want it? Do you want my Daddy's cum inside you?\"\n\n\"God, yes! I want him to fill me up! Come in me! Come! In! ME!\" She cried out in a loud wail as her pussy seized my cock in a scorching death grip. I felt the wet heat of her cum dribble out of her and cover my scrotum, triggering my orgasm. I pulsed deep inside her, firing three, then four blasts that pulled from the very core of my being. My toes curled, my fingers tingled, and my eyes rolled back in my head as I pulsed in tremors, soaking her pussy in my seed.\n\nWhen the spasms eased, I stumbled back, gasping for breath, cum still dripping from my still-erect cock. Linda crawled fully onto the deck and flopped onto her back next to Brenda. Linda's thighs were splayed out, her pussy--flared, flushed, and full--was covered in my cum. Brenda immediately moved between Linda's thighs, and before my mind could register what I was seeing, buried her face in Linda's cunt, feasting on her cream pie.\n\nI watched my daughter devour mine and Linda's cum like she was drinking the nectar of the gods from the grail itself.\n\nMy daughter...\n\n...was drinking my cum.\n\nThe thought triggered something that never happened to me before. My balls seized, and my erection, having never subsided, suddenly spurted another jettison of cum. Sparkles filled my vision and I struggled to draw a breath. I had never had multiple orgasms before--I didn't know men could--and never cum having nothing touching my cock. Watching Brenda so thoroughly enjoying eating my cum from her friend's pussy triggered that in me. Three spurts of cum arced across the distance between us, landing on Linda's heaving breasts.\n\nLinda came again, either from my cumming on her, or from Brenda eating her with such fervor. After Linda came down from her orgasm, Brenda moved up and kissed her, sharing the remnants of my cum with her. She then licked up the second nut from Linda's breasts and snowballed Linda with that cum.\n\n\"Delicious!\" Brenda said with a cum-covered smile as she snuggled Linda, licking up any remaining traces of cum from their faces. \"You cum a lot.\"\n\n\"And you taste good, too,\" Linda said between gulping breaths.\n\nI dropped to the deck beside them, and they shifted until we were all cuddling together. \"Wow,\" I said once I could speak again, \"that was...\"\n\n\"Fantastic,\" Brenda finished my sentence.\n\n\"It was,\" Linda agreed. \"I could get used to this.\"\n\nA vision popped into my mind of the three of us years down the road. Maybe with someone else in Brenda's life, or maybe not. Either way it would be her choice as long as she was happy, and Linda and I would always be there. \"Is this how you want it to be? The three of us?\"",
        "\"I love both of you,\" Linda said with a deep breath. \"I can't imagine anything better.\"\n\nAnd neither could I."
    ],
    "authorname": "Arkfisting",
    "tags": [
        "group",
        "orgy",
        "voyeur",
        "mf",
        "mff",
        "oral",
        "incest themes"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-swim-team-ch-11"
}