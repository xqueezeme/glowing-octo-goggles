{
    "title": "Jerk",
    "pages": [
        "Tim picked up his coffee and headed toward the door of the shop, eager to get home. His guild had a big raid planned for the game tonight, and he didn't want to be late. He started when someone grabbed his arm as he walked past. He was even more surprised when he stopped and turned to see it was a hot girl.\n\n\"Timmy, right? You're good with computers, aren't you?\"\n\nShe knows my name? He thought. Kelly had run with the popular crowd in school, and he was surprised she even knew he existed. \"Yeah, I guess.\"\n\n\"This thing is totally frozen up and I can't get it to do anything,\" she said, gesturing at her laptop. \"I've got these warning boxes about a virus, but when I click on them, they don't do anything. See?\"\n\n\"Uh oh,\" he muttered as he looked down and saw the pop-up window. \"That's actually part of a nasty virus going around right now. Clicking it is probably what infected you.\"\n\n\"God. Can you fix it? Pretty please?\"\n\nFighting down a shiver from the incredibly sexy look she was giving him, he said, \"I can give it a try.\"\n\nSlipping his bag off his shoulder, he sat it down on the table and dug through it until he found the thumb drive he was looking for. It had several useful programs on it, including recently updated versions of powerful malware removal tools. Downloading as much porn as he did had its dangers, so he kept everything he needed close at hand for quick fixes.\n\n\"I'll need to restart it in safe mode first. It may take a few minutes to clean everything off, if this works.\"\n\n\"If you can fix it, you're a lifesaver.\"\n\nHe sat down and turned the laptop to face him. His eyes immediately homed in on her well-displayed cleavage, and it was all he could do to tear his gaze away and focus on the computer.\n\nAfter restarting the computer, he went to work with the programs. As he suspected, the computer was infected with a nasty virus he knew all too well, so he started the cleaning process.\n\nAbout ten minutes later, he restarted the computer and scanned it, the programs reporting a clean bill of health. \"There you go,\" he said as he pushed the computer back toward her.\n\nShe spun it around and breathed a sigh of relief. \"Oh my god. You totally saved my life.\"\n\n\"You're welcome.\"\n\nHe only realized he was staring at her with a silly grin on his face when she shifted nervously in her chair.\n\n\"So, I guess I'll see you around,\" he said as he stood up, feeling his ears burning.\n\nWay to go idiot. He chided himself for staring at her as he walked toward the door. When he looked up, he saw the last thing in the world he wanted to see &mdash; Jason.\n\nSince the fifth grade, Jason had been his ultimate nemesis. Though he exited as quickly as possible and turned the opposite direction he actually wanted to go to avoid a confrontation, it didn't help. A hand grabbed his shirt and jerked him up short.\n\n\"You hitting on my girlfriend, you fucking nerd?\"\n\n\"No. I...\"\n\nThat was as far as he got before the fist connected with his face. The next thing he remembered was sitting on the ground with his back against the building, vision blurred with tears, and sharp stabs of pain coming from his eye. Jason was standing over him, growling something, but he was too incoherent to make any of it out.\n\nOnce the thug walked away, Tim struggled to his feet and made his way back to his apartment, desperately wishing he was invisible all the way.\n\n****\n\nThe doorbell ringing forced him to open one eye &mdash; the one not covered by an icepack &mdash; and caused his head to throb even harder. He ignored it at first, hoping whoever it was would go away, but the bell just kept ringing.\n\nHe sat the icepack down on the table next to his second hand couch and looked out the peep hole. Only slightly surprised by who he saw outside, he opened the door.\n\n\"I am so sorry,\" Jason's mother said as soon as he opened the door.\n\nHe shrugged, not really knowing what to say. It was hardly the first time she'd come trying to smooth over something her son had done.\n\n\"Can I come in?\"\n\nOnce he stepped out of the way, she hurried into the apartment as if she didn't want to be seen. She sighed and said, \"Again, I'm sorry. I've tried talking to him, and punishing him, but... It won't happen again, I promise.\"\n\n\"Yeah, right,\" he grumbled, a little surprised by his own words. Anger at years of teasing and beatings swelled up in him and he spat out, \"I'm sick and tired of this.\"\n\n\"I know. I know. There has to be some way we can make this right.\"\n\nHe sat down hard on the couch. \"Until the next time.\"\n\n\"There won't be a... I know. I've said that before.\"\n\n\"Maybe he'll listen to the cops, then,\" he said while looking away.\n\nShe leaned down and grabbed his hand. \"No, please. We can figure something out. He's eighteen now, and it's all different.\"\n\nTim turned back and said, \"Not from where I'm sitting.\" His voice trailed off as it dawned on him that he was looking straight down her shirt. She was wearing a tight yellow tank top, and he certainly couldn't see any hint of a bra.\n\nHe knew he was caught when he snapped his gaze upward and saw her eyes flash with irritation. His face burned and he opened his mouth, but nothing came out.\n\nShe stood up, arching her eyebrows as he tried to think of something to say. Apologize. Change the subject. Anything. Then she bit her lower lip for a moment and grinned.\n\n\"I think I know how we can take care of this little problem.\" She reached out and stroked a finger over his cheek, causing his eyes to go wide. Her smile broadened, and she said, \"What if I were to help you let off a little steam?\"\n\n\"Wh... What do you mean?\"\n\nHer fingers glided lower, to his neck, and then to his chest. \"I could do a little something for you, to help you forget all about this.\"\n\nHis mind racing from her touch, his voice cracked when he responded, \"Like what?\"\n\n\"Oh, I don't know. I could jerk you off. I bet that would take your mind off things.\"\n\nHis shoulders slumped, as his fevered brain filled with porn plots had conjured up something much, much more.\n\nHis reaction must have worried her, because she immediately came back with, \"Uhm... Three times. One a day. Does that help?\"\n\nDashed hopes aside, he wasn't about to let the opportunity pass him by. He nodded.\n\n\"Good.\" She knelt down in front of him, wearing a sexy smile and reached for the button of his jeans.\n\nHeart thundering in his chest, he watched her pop open the button, and then pull down the zipper. She tugged on the denim, and he lifted his butt up off the couch to let her pull his jeans down. He couldn't take his eyes off her, and chills shot all through him as she bunched his pants around his ankles and reached for the waistband of his briefs.\n\nShe didn't waste any time, and tugged his underwear down to his knees, her other hand wrapping around his cock at the same time. Stunned and nervous, he was still mostly limp.\n\n\"You need to get hard for this to work, you know?\" she said in sultry tones, slowly stroking his flaccid manhood.\n\n\"Maybe if you show me your tits,\" he blurted out before he could think better of it.\n\nShe rolled her eyes and then said, \"Oh, what the hell.\" She released his cock, and in one quick motion, pulled her top over her head. As he'd surmised earlier, she wasn't wearing a bra. Her tits were a little pendulous, but big, and incredible. More importantly, they were real, and not images on a computer screen or magazine page.\n\nShe cupped them in her hands and gave them a jiggle. The sight was enough to overcome his nervousness, and blood rushed between his legs.\n\n\"There we are,\" she said as she wrapped her hand around his cock again. \"I guess you like these?\"\n\n\"They're awesome.\"\n\nShe chuckled and cupped his balls in her other hand, continuing to stroke his rapidly hardening cock. \"Now, let's help you forget all about what a jerk my son is.\"\n\nHe closed his eyes and groaned, wondering if it was a dream as she stroked his cock. Her hand felt incredibly soft &mdash; far different from his own, which he knew so well. She rotated her wrist every so often, adding a twisting motion to the strokes. All the while, she gently rolled and caressed his balls in her other hand.\n\nThe wicked itch built in the head of his cock in less than a minute, spreading down the shaft with every pump of her hand. He grunted and groaned, breathing heavily, trying desperately to keep his eyes open so he could drink in the sight. Her breasts jiggled from the motion of her hand, and when she wasn't looking at his cock, she was looking up into his eyes.\n\n\"Is that good?\"\n\n\"Yeah,\" he replied in a strained voice.\n\nHer hand pumped faster, and his groans kept pace. Though he tried to fight it, his balls tightened and he felt the intense itch in his cock go numb for a moment. With the next stroke of her hand, he grunted and came.\n\n\"Oh!\" she cried out in surprise as the first thick rope of cum spattered across her neck and chest. She pulled down on his pulsing shaft, and the next spurt landed on her breasts.\n\nGrunting and growling, he continued to pump out cum in hard spurts. Two, then three, then four more hard ejaculations decorated her breasts with sticky trails. A pair of weaker squirts landed on the floor in front of her, and finally, a last pulse dribbled cum down the swollen purple head and onto her hand.\n\nEyes closed and panting for breath, he heard her chuckle and say, \"Oh my. Have you been saving that for a while?\"\n\nA few inarticulate sounds were all he could manage for an answer. By the time he caught his breath and could open his eyes, she'd pulled several tissues from a box next to the couch. He watched in fascinated wonder as she wiped his cum from her body.\n\nShe picked up her shirt from the floor after sitting down the last balled-up tissue and stood. \"Now, you're going to forget all about what my son did, aren't you?\"\n\nHe answered with a weak nod, helpless against the grin spreading across his face.\n\n\"And, you're not going to say anything to anyone about this?\"\n\nHe shook his head. There was no way he was risking the other two handjobs she'd promised.\n\nShe pulled on her top, tugging at the material and pushing her breasts until it settled the way she wanted them. \"Same time tomorrow, and the next day?\"\n\n\"Yeah.\"\n\n\"Tomorrow, then.\"\n\nHe watched her walk to the door, where she turned and waved to him &mdash; still sitting half naked on his couch with a slowly softening cock &mdash; as if nothing unusual had happened. She opened the door just wide enough to slip out, and then she was gone.\n\n****\n\nA chill shot up Tim's spine when the doorbell rang, right on time. Heart beating fast, he answered it and didn't make the futile effort to wipe the grin off his face upon seeing her. Her top wasn't nearly as revealing, but she was wearing a skirt this time, showing off gorgeous legs.\n\nShe hurried inside as she had the day before, but gave a tug on his shirt as she passed. \"Why don't you go ahead and get out of those clothes?\"\n\nShe was all business as she sat down her purse on the table and pulled something out of it. She held up the package of moist wipes as he walked to the couch, unbuttoning his jeans.\n\n\"My boobs were sticking together by the time I got home yesterday. Come on now. Chop, chop.\"\n\nHe pushed down both jeans and underwear at the same time, and his already hard cock sprang free.\n\nShe brushed her fingertip over the head, causing it to throb and bounce. \"Looks like we won't have any trouble with that today, but I suppose you want to see these anyway?\"\n\n\"Yeah.\"\n\nOff came her blouse, and she gestured for him to sit down. She sank to her knees in front of the couch as he sat, and then scooted forward.\n\nHe'd been trying to screw up his courage since shortly after she left the day before, and it paid off when he asked, \"Can I touch them?\"\n\n\"Go ahead. You may as well,\" she answered as her hand wrapped around his cock.\n\nThe weight, warmth, and softness of her breast in his hand made him throb in her grasp, and she chuckled. Rather than starting to stroke him immediately, she caressed the hard organ instead. \"Mmm. You have a soft touch.\"\n\n\"I love your tits.\"\n\n\"I can tell.\" She stroked a finger over the head of his cock, and a clear drop of pre-cum welled up. While smoothing it into the swollen helmet, she said, \"You know, you have a nice cock.\"\n\n\"Really?\"\n\n\"Mmm hmm. It's a little bigger than average, and nice looking. Not all veiny and ugly like some of them are.\"\n\nHer grip tightened and she started to stroke, drawing out a groan from him as he continued to squeeze her breast and tease the nipple. \"Feels so good.\"\n\n\"Thank you. Can I ask you something?\"\n\nHe nodded.\n\n\"Are you a virgin?\"\n\nSomehow, he had enough blood in his body to fuel both his erection and a blush.\n\n\"I'll take that as a yes. That explains why you're so eager to see a woman my age. Anything would do for you, huh?\"\n\n\"No, you're hot.\"\n\nShe stroked a little faster. \"You know, I think you really mean that. So, these are the first boobs you've ever seen?\"\n\n\"Yeah.\"\n\n\"And I'm the first woman to ever touch your cock?\"\n\n\"Uh huh,\" his voice shuddered from her ministrations.\n\nShe moaned and shivered. \"I know I shouldn't be saying this, but that really turns me on.\" Her features turned stern and her hand froze in place. \"But don't get any ideas. A deal's a deal.\"\n\n\"Okay,\" he said in a rush, hoping to encourage her to start again quickly.\n\n\"Good. Tell me when you're about to come this time. I'm lucky I didn't get it in my hair last time the way you went off.\"\n\nWithout waiting for an answer, she started stroking again &mdash; fast. As little as he wanted to let go of her tit, he had to lean back and gasp as her talented hand worked him steadily toward an explosion.\n\nAs the initial rush of pleasure settled, he sat up again to feel her breast. A whim then pushed him to reach for the other. It was then that he realized she wasn't caressing his balls this time &mdash; and why.\n\nHe gasped and let it out as a grunt when he saw her hand up her skirt. She's playing with herself!\n\nThat pushed him over the edge. Despite having jerked off before going to bed, and again when he woke up from a dream about her, the sight of her touching herself was too much. He trembled and let out a long, quavering moan as her fast-pumping hand drew him to the edge.\n\n\"Gonna come,\" he growled.\n\nShe leaned forward, resting the tip of his cock directly against her breast. Two quick strokes later, a roar bubbled up from somewhere deep inside him along with his cream.\n\n\"Mmm hmm,\" she moaned as he spurted, decorating her tits with streamers of cum, though nowhere near as much as the day before. The last dribble pumped out when she rubbed the tip over her nipple, leaving the stiff bud sporting a dangling strand.\n\nTim collapsed into a heap as her soft hand uncurled from around his cock. He did manage to keep his eyes open so he could watch as she straightened over her knees, giving him a perfect view of her cum-spattered breasts. She grinned and let out a chuckle as he stared at her. Then, her smile turned mischievous.\n\nA lurch rippled through his body as she lifted her fingers to her lips and licked his cum off them. As soon as they were clean, she gathered up the dangling dollop from her nipple, and sucked it off her fingers too. His sensitive cock throbbed uncomfortably as he watched the show of her cleaning his cum from her breasts and moaning with every taste.\n\nHe finally let his eyes drift closed when she reached for the tissues.\n\n\"Not as much as yesterday. Have you been masturbating?\"\n\nShe had finished with the tissue when he opened his eyes upon hearing the question. Her breasts shimmered in the light from the wetness of the wipe she was stroking over them.\n\nStill a little weak and breathless, he nodded.\n\n\"You should save it for tomorrow,\" she suggested while she finished cleaning up.\n\nA few minutes later, she was dressed and out the door. Tim lay staring at the closed door in post-come lethargy for long minutes before he could summon up the energy to find his pants.\n\n****\n\nFit to burst from resisting the nearly overwhelming urge to jerk off, Tim was standing right next to the door when the bell rang the next day. He had the door open before the chime had even faded.\n\n\"Someone's eager,\" she said and laughed as he closed the door behind her.\n\nHot on her heels, he jerked down the shorts he'd chosen over pants and sat down before she could fish the wipes out of her purse.\n\n\"Last time. A deal's a deal,\" she said as she stood in front of him with her fingers hooked under the tail of her blouse.\n\nDoing his best to forget about that depressing fact for the moment, he nodded.\n\nFor the last time, she pulled off her top, revealing the incredible Milf tits that filled his dreams and daydreams. To his amazement, she didn't stop there, though.\n\nIn the process of unbuttoning her jeans and kicking off her shoes, she said, \"I had cum stains on my skirt yesterday.\"\n\nHis heart raced as the denim slid down, revealing a thong. Once she stepped out of her pants, her panties followed. His eyes fixated between her legs with laser focus from the moment the first curly hair appeared above the cloth. A thin triangle of hair pointed down at the smooth-shaven cleft between her legs. As she lifted one foot to step out of her panties, he caught just the slightest glimpse of the pink treasure within.\n\n\"We may as well get this out of the way so we can get down to business.\" She moved closer and lifted one foot to rest it on the cushion next to him.\n\nWith a real, live pussy inches away, he drank in every detail. Her pussy lips were bigger and a little more crinkly-looking than most of the girls in porn, but he didn't care in the least as he burned the sight into his memory. After a few seconds, something tickled his nostrils. The scent was musky &mdash; somehow a little off-putting and incredibly exciting at the same time.\n\nShe leaned over and grabbed his wrist, moving it in front of the object of his obsession. \"Well, go ahead. Do you know where my clit is?\"\n\nAll the porn he'd watched came in handy. He lifted a finger to the apex of her nether lips and pressed it against the little hump there.\n\n\"Hmm, I guess you do.\" Her guiding hand still holding his wrist, she twisted until his palm faced up. She bent two fingers down into his palm, leaving the pointer and middle finger extended. A pull pressed the digits against her folds, and then inside.\n\nShe was hot, wet, and velvety smooth inside. His cock throbbed, pumping out pre-cum as he reveled in the feeling of her pussy wrapped around his fingers. Long before he was ready, she pulled his fingers out, and then pushed his hand toward his mouth.\n\nPussy juice made the digits glisten before his eyes. The smell was much stronger, filling his lungs. Before he could even think about it, he parted his lips and sucked his fingers. The taste was tart and a little bitter &mdash; like nothing he'd ever tasted before. He felt light-headed and intoxicated as he savored his first taste of pussy, sucking every last drop from his fingers.\n\nHer foot dropped back to the floor, and her knees followed. Tim finally pulled his fingers from his mouth as she curled her fingers around his shaft.\n\n\"Remember. Tell me before this thing goes off,\" she warned.\n\n\"Okay.\"\n\nAlready sitting up, he saw her fingers slip between her legs from the first stroke of her hand. At first, she only teased with the tip of one finger, but shortly thereafter, two fingers flashed back and forth over her clit. She whimpered and squeezed his cock tighter, the skin sliding over the hard core and making him groan.\n\nIt all nearly overwhelmed him. She stroked his cock slowly, somehow coordinating that with her flashing fingers. Her tits jiggled even more than the last two times because of how fast she was playing with herself. The speed of the hand jacking him off steadily increased, until it was keeping pace with the one between her legs. He didn't want it to end, and fought the cum surging up for release with every ounce of his will.",
        "It was a losing battle.\n\nThe excitement and the pressure of all the cum he'd stored up by not getting himself off was too much. He gave in to the inevitable.\n\n\"Gonna come.\"\n\nShe barely had time to point his cock down before he erupted. He grunted loud and long as his semen blasted from the swollen tip with fire hose intensity. It felt more like peeing than coming as he sprayed her bouncing breasts. A second and third blast almost as powerful as the first followed, and he growled every time he pulsed, letting loose all the saved-up cum.\n\nA few weaker squirts followed, and then a long dribble that dripped from her knuckles as she stopped moving her hand and let him go.\n\n\"Didn't waste it in a sock this time, did you?\" she said, and then laughed while looking down at her cum-covered chest.\n\nIt was bittersweet to watch her clean up not only his cum, but her pussy-slick fingers by sucking them between her smiling lips. Fighting the lethargy of the most amazing orgasm of his life, he watched every moment until she finally sat down the last wet wipe and stood up.\n\nShe looked at her panties on the table for a moment, then closed her eyes and groaned. His brow furrowed when she didn't reach for her panties, but instead sat down on the opposite end of the couch. Then his eyes shot wide open when she bent one knee, tucking her foot between the cushion and the back of the couch. The other foot rested on the floor, spreading her legs and her pussy wide open for his eager eyes.\n\nThree fingers plunged into her pussy, while two more centered over her clit and circled.\n\nEvery ounce of weariness he'd felt evaporated in an instant as she masturbated in full view. She writhed on the cushions, her hair whipping as her head lashed back and forth from the pleasure she was giving herself. He could actually hear her fingers plunging in and out of her pussy, testifying to how wet it was.\n\nMoans, whimpers and squeals accompanied the ever quicker dance of her fingers. First her face, then her neck, and finally her chest flushed red. Her cries grew louder, until her body stiffened and a moan caught in her throat as a croak. Her mouth hung open. Her jaw trembled. Her toes curled.\n\nShe came with a loud wail and a full-body lurch that snapped her legs tight around her hands. After trembling for long seconds in beautiful agony, she gasped and went limp.\n\nIt was nothing like the sort of orgasms he'd seen women supposedly have in porn flicks. He'd just watched a woman truly come &mdash; lose complete control of her body in ecstasy &mdash; no more than a foot away, on the opposite end of his couch, in his tiny apartment. Her damp pussy lips twitched from the contraction of muscles deep inside her. She panted for breath, breasts heaving as she tried to fill starved lungs with air.\n\n\"I know I'm going to regret that, but I couldn't wait. Ohh, why does it turn me on so much knowing you're a virgin?\"\n\n\"That was... Wow.\"\n\nShe let out a weak chuckle and finally opened her eyes. Seeing him staring at her with something akin to worship, she rolled her eyes and shook her head.\n\nWhen she spun on the couch to put her feet on the floor, his heart sank. Even though he knew he'd be able to see, hear, smell, and taste these last three days in his mind's eye until his dying day, it was back to porn and jerking off as soon as she walked out the door.\n\nDetermined not to miss a moment, he watched her clean off her pussy and fingers with a wipe. Then she picked up her panties and straightened them until she was holding them by the waistband. She looked down at him and said, \"You know that if you ever tell anybody about this, I'll deny it. Your own mother would never believe you anyway.\"\n\n\"I won't say anything.\"\n\nShe looked at him for another second, then offered a crooked half-grin. Letting go of one side of her panties, she held them between two fingers and dropped them in his lap.\n\nA couple of minutes later she was dressed &mdash; sans panties &mdash; and out the door. Not long after that, he was pumping what little cum he had left into a sock while breathing deep of the faint womanly scent that clung to the lacy thong.\n\nThe black eye had been well worth it.\n\n****\n\nTim had chosen to walk out of the coffee shop just in time. He stayed close to the wall and tried to be invisible as Jason walked down the street toward the shop, bellowing with laughter at something one of his friends had said.\n\nA glance over his shoulder suggested that none of the group had noticed him, so he slowed. He couldn't help but think about the month before, and what had happened after the encounter in almost this exact spot. The memories flashed through his head and the corners of his mouth turned up into a faint smile.\n\n\"What are you looking at, you motherfucking nerd?\"\n\nHe knew better. He tried with all his might, even clenching his teeth and pinching his lips tightly together.\n\nHe couldn't help it.\n\nThe stifled chuckle at Jason's unknowingly appropriate insult shook his body, and on the bully came.\n\nOnce again nursing a black eye at home shortly thereafter, he answered the door to see Jason's mother standing with her hands on her hips.\n\n\"You know, I think you're doing this on purpose at this point.\"\n\nDespite her stern pose, she had a smile on her face as she swept past him and inside.\n\n****\n\nHope you enjoyed this little romp that fits my pen name well. Be sure to vote ( only once ) and comments are certainly appreciated. It's the votes, feedback, and favorite listings that keeps me coming back for more."
    ],
    "authorname": "RejectReality",
    "tags": [
        "handjob",
        "milf",
        "fingering",
        "tit cum",
        "big tits",
        "virgin",
        "younger guy",
        "geek",
        "nerd",
        "older woman"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/jerk"
}