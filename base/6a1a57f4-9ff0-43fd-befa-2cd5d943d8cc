{
    "title": "Jonathan Creed",
    "pages": [
        "(I promise I am working on a Celestial Matter's sequel. Still, I hope this one doesn't disappoint.)\n\n-NT\n\n\n\n\n\nChapter 1\n\n\n\n\n\nIt was always quiet in here.\n\nMaybe that's why I come every once in a while. I come when I need to clear my head, when I need to think. It was a familiar place, always the same. It was a place that seemed to be stuck in time. And in a city where everything is always moving and always changing, stability is something very precious indeed.\n\nI was sitting in a smooth mahogany pew in St. John's Church. It was an old church, the stain glass windows were slightly grimy, and the hymnals and the leaflets showed signs of wear. The deacon was lovingly replacing the candles on the altar and watering the flowers sitting on the banisters. He was an elderly man with balding grey hair and small glasses. He was hard of hearing, but was quick with a smile.\n\nHe always nodded when he saw me sitting in the pew. He never came and talked, maybe he sensed I didn't want to speak, or maybe he simply wanted to leave me to my reflections. I didn't know, but I always returned his nod with a smile.\n\nSt. John's was located on a little street in the heart of Queens New York. It wasn't my neighborhood, and I always looked a little out of place with my suit, tie and silver watch. But no one ever bothered me. It seemed even criminals respected a man who sat alone in a Church. I had come here so much now that no one ever seemed to even notice me anymore.\n\nI always sat in the same place, but I never prayed.\n\nI wasn't a believer.\n\nFaith in God was not what dragged me back to this wooden bench time and again. I came for the solitude, for the companionship of the old walls and the smell of old incense.\n\nIt was, in a way, an escape from the constant pace of my life, my job, and my worries.\n\nSitting nestled in my coat pocket was a little black wallet. Inside the fold of leather was an FBI badge and an ID card. They both declared me as Special Agent Jonathan Creed. I was an FBI Agent, and a successful one at that. But I hated the job. An agent doesn't have any friends but other agents. An Agent doesn't have any lover but the Bureau. Well, that last part wasn't true, many agents had families, but they were families who you couldn't discuss your day with, so I saw little point in pursuing that.\n\nI slowly rose from the pew, and nodded to the elderly lady who was weeping in the pew behind me. I quietly moved down the aisle, and out the old wooden double doors, into the cold bite of the New York City winter. I drew my coat around me, and hurried to my car. It was an unassuming black sedan. It was last year's model, an inconspicuous Ford. This year's Bureau model was a Chevy.\n\nThe sun hadn't come up yet, it was only 5:30 in the morning. But the city that never slept still had cars on her roads. Hence it took me close the forty minutes to get from the center of Queens to 26 Federal Plaza, where the district office was held. I parked up and walked through the glass doors. Paul, the large red haired man who guarded the entrance nodded at me as I swiped my clearance card.\n\n\"Mornin' John,\" he boomed in his warm gravelly voice.\n\nI gave my traditional greeting, \"How are you Paul my man,\" I said, forcing as much cheer into my voice as possible.\n\n\"Not bad, John, not bad. Could do with a little sunshine but probably in'nt gonna happen.\"\n\nI simply smiled again, \"Well, never give up hope Paul.\"\n\nPaul buzzed me through to the elevator and I got in.\n\nThe office was set up like most police stations. There was a center area of cubicles where all the new agents worked. The executive offices were built into the surrounding walls ... This center area was called the 'bullpen'. It was a chaotic place, where phones constantly rang, and agents had to dutifully answer.\n\nMost calls where bullshit.\n\nBut one in one hundred phone calls were legitimate tips, so all calls were answered, processed and recorded.\n\nI had never worked in the bullpen.\n\nSomething for which I was greatful.\n\nMy office was a little room along one of the walls. Plain letters on a simple wooden door stated, 'Special Agent Jonathan Creed'. My office was about as big as a walk in closet, with just enough room for a desk and a file cabinet.\n\nThe same file that I had left on my desk last night still sat there. The tab was marked UniCORP. I scooped the file off my desk and turned right around. I had to report on this today with the branch executive Agent.\n\nSpecial Agent Jones.\n\nI had spent two months on this case and I was finally ready to proceed to the next stage. All I needed was Jones's say so.\n\nSamuel Jones could be described as ... average. He had a face that one looked at, and then instantly forgot. He had short brown hair that was graying at the temples, brown eyes and a plain face. He always wore a gray suit with a gray tie and a white shirt. This wardrobe was accompanied with plain brown shoes and a brown belt. He was, in all respect of the word, forgettable.\n\nOnly on closer examination would one notice that behind his eyes blazed a sort of fire. He had a hot and uncontrollable determination that had allowed him to rise to his current office, and hold it, against all the backstabbing and closed door politics that happened all too often in the FBI.\n\nHe was sitting at his desk, calmly flipping through some other file.\n\nI poked my head in.\n\n\"Mr. Jones, we had a meeting scheduled for seven O'clock?\"\n\nHe looked up from his files. \"Ah yes, Jonathan, it slipped my mind.\" He said absently. He indicated a chair. \"Please, sit down.\"\n\nI lowered myself into the chair, and handed him my folder. He simply glanced at it, and set it back down.\n\n\"John, I've been reading these things all morning. How about you just tell me what's in it and I'll read it later.\"\n\nI cleared my throat. \"As you know sir I've been looking into some of the dealings done by UniCORP, and what I've found is a little disturbing. Not only do I suspect them of tax evasion ranging somewhere into the multimillions, but recent evidence leads me to suspect the company of developing illegal software.\"\n\nJones clasped his hands together. \"Illegal how?\"\n\nI cleared my throat. This is where things got bad. I had no proof, only speculation.\n\n\"Well, you see sir, last year they developed the Ragnok satellite system. The year before that they perfected the military grade P.A.T.H. OS which is now used in every tank, sub, and missile of American origin ... suffice it to say sir, these people are intelligent and wildly driven. But this year the only thing they have developed worthy of note is JumpTECH, which is some sort of automatic parachute landing technology. This tech already existed, they just took it and made it a little bit better.\"\n\nJones was now looking curiously. \"Your point?\"\n\nI once again cleared my throat, confident that I at least wouldn't be laughed out of his office. \"I suspect that JumpTECH was merely a cover for what they have really been producing. That the only way they could hide so many tax dollars from the IRS is if they were constructing something that technically wasn't on the market.\"\n\n\"Go on.\"\n\n\"Well sir, last year they hired one Dr. Elijah Brigs. This wouldn't be very incidental if he were a physicist, or an engineer or something that has any business working on JumpTECH. But Dr. Brigs is a neuroscientist, and let me be clear ... he is a very good neuroscientist. I pulled his file and apparently his was sacked from John Hopkins three years ago. The details in the file were not very specific, but they simply said, 'Breech of Scientific Code of Ethics.' Now that makes me wonder, why is a neuroscientist working for UniCORP when nothing they have produced even resembles brain work?\"\n\nI could see the wheels turning in Jones's head. He liked where this was going. He liked it a lot.\n\n\"I assume you have a plan Jonathan,\" he said.\n\nI smiled. \"Some of my underground contacts have said they are having what they call, a 'little garage sale' going on in one warehouse 5B off the docks.\n\nJones was smiling. I could already tell I'd sold him on my little sting.\n\nHe drew himself up. \"Special Agent Creed, I gather you like to do your own field work?\"\n\n\"Yes Sir.\"\n\n\"Good, I am then hereby authorizing 3.5 million dollars to be used to pick up an item from this little 'garage sale'. You will be given a Bureau alias that has not been compromised and you will infiltrate this little party and bring back hard evidence.\"\n\nI stood smiling. \"Thank you sir.\"\n\nJones tossed back a mug of what must be cold coffee. \"You've never been wrong before. Let's hope you can keep your no hitter career going.\"\n\nI rented a limo to take me to the warehouse. I needed to look like dropping a million dollars on a new computer would be second nature to me. I looked at my fake ID again. My name was Ike Hale. I was a Canadian billionaire who liked sports cars and made his money by managing hedge funds. In essence, my money appeared from nowhere, and was untraceable. But when it came to billionaire's I've found that everyone is happier not asking questions.\n\nI arrived at the warehouse at eleven at night. It was poorly lit outside but there were several cars parked outside. Several of them were Mercedes, even more were Ferrari, and of course, there was a whole drove of limos, coming in and out to pick up their clients. Most limos simply idled in the expansive parking area, the chauffeurs smoking cigars or reading newspapers while they waited.\n\nI told my chauffeur to wait here. He nodded, and pulled out a book of Sudoku he saved for just such an occasion.\n\nAt the front door, I was greeted by a scary looking Eastern European bouncer, who was checking invitations. The real Ike Hale had been invited to this little get together. But he had a lot of pressure being put on him by the Canadian government, and as an act of good faith they leaned on him until he gave up his invitation.\n\nI produced the little piece of expensive looking stationary, and was waved inside.\n\nIt was dark and dingy. Crowded around were about fifty or so incredibly rich individuals who were clearly uncomfortable with their surroundings, but were willing to risk it. When UniCORP said they have something of interest to sell, most felt they simply couldn't refuse.\n\nWe loitered inside the dark interior for about thirty minutes. About twenty of the individuals had already left, muttering under their breath things like, 'don't they know who I am', or 'a dirty warehouse ... really'.\n\nThere were only twenty nine people who had decided to stick it out and see if there was anything fruitful to come of their trip out here.\n\nFinally, after what seemed like an hour, a small wiry man in a dark suit and a red tie bounded out from the warehouse's back room.\n\nHe smiled genially to all the people gathered, most of whom, were frowning at him.\n\n\"Sorry for the wait everyone, we had a bit of a problem with some of the merchandise, but it is all settled now.\" He gazed out amongst us. \"Now, I bet you are all wondering why you are here exactly.\n\nEvery single person grumbled in what sounded like the affirmative.\n\n\"Well, we are going to have a little auction tonight, with technology that has stepped right out of the pages of fantasy ... unfortunately, we aren't going to tell you what it is. At least for the first item anyway.\" His smile grew to a smirk. \"The bidding starts at one million.\"\n\nThere was a small gasp from the crowd. As I expected, the incredibly rich buyers had walked out the second they had seen the less than ideal surroundings. The people left were as comfortable with million dollar mystery auctions.\n\nI raised my hand.\n\nThe little man acknowledged me with a nod. \"I have one million, do I hear a million five.\"\n\nA pudgy man that was already sweating through his suit raised his hand.\n\n\"Million and a half.\"\n\nI decided to raise it to all I had, and jump several stages. It would perhaps scare away other bidders.\n\nI raised my hand and stated, \"Three million five.\"\n\nThere was a small rumbling through the crowd, and the pudgy man shook his head.\n\nThe wiry little man smiled. \"Sold, for three million and five hundred thousand dollars.\"\n\nThe little man pulled out a little laptop from his brief case, and politely asked for the account number.\n\nI rattled off the FBI account, which would automatically put a bug in their system and allow us to trace the money.\n\nHe was positively beaming when he saw the purchase clear.\n\n\"Now it is time for you to see what you've bought.\"\n\nSlowly from the back room a bound goddess was lead out in front of me.\n\nShe had beautiful cascading red hair and sparkling green eyes. And she was bound with handcuffs and had duct tape over her mouth. There were tears flowing from her eyes.\n\nI could feel my stomach sinking.\n\nSomewhere from the back of the crowd someone shouted, \"This doesn't look like new software, it looks like a kidnapped super model!\"\n\nThe wiry man smiled again. \"Ah, but my friend, she is the technology. But allow me to demonstrate.\"\n\nHe turned to me produced a plastic wrapped cue tip. \"Please swab your mouth sir.\"\n\nI hesitated for a brief second then put the cue tip in my mouth and swished it around. I gingerly handed it back to him.\n\n\"Now please observe.\" He said.\n\nHe gently moved the girl's lock locks from the back of her neck, revealing her pale jaw line.\n\nHe placed the cue tip on the back of her neck.\n\n\"Just under her skin is a microchip that has been fused to her spinal cord. The chip sends special frequencies to her brain, and controls various actions and feelings in her mind and body. This unit's chip is currently inactive. A chip is activated when a sample of DNA is placed for about a minute on the back of her neck, long enough for her pours to absorb it and for it to touch the chip's sensor. As soon as that happens the chip activates and the sensor is permanently shut down, making it impossible for a new strain of DNA to be imputed into the chip.\"\n\nMy stomach turned. This girl had some sort of minicomputer attached to her spine, and I couldn't do anything but watch as she struggled weakly against her bonds, trying to avoid the cue tip that was touching her neck.\n\nI then heard a barely audible click.\n\nThe man smiled. \"We have a successful input ... she'll pass out soon as the chip begins to activate. Perhaps she'd like to speak before that happens.\" He ripped the masking tape off her mouth.\n\nShe was quivering. She seemed barely in control of herself. Tears fell freely from her beautiful eyes.\n\nShe sobbed, \"You can't do this to me. I'm a person ... I am a human being for God's sake ... I just want to go home ... I just want to ... just want ... please...\" The red headed girl closed her eyes, and slumped to the floor. A small gurgling noise was audible from her mouth. Unconsciousness had taken her mid sentence.\n\nThe wiry man motioned to someone, and the bouncer from the door scooped the girl into his arms, and brought her over to me. He set her down at my feet.\n\nHe smiled a toothless grin. \"Enjoy yur purchuse ser.\"\n\nThe entire time I was watching this ordeal I had been pressing the panic button. The panic button was a pen I had in my pocket. To activate it all I had to do was triple click it in under a two seconds.\n\nResponse time was usually five minutes.\n\nThe wiry man had already re-started the bidding. Except that now the rich buyers knew what they were paying for, the bidding had already reached eight million.\n\nThe FBI responded to the panic call in four minutes and twenty three seconds. They burst through the door in full swat gear, just as another girl was being led out from the backroom. The wealthy buyers all hit the deck, while the wiry man simply held up his hands. His face was a mask of pure hatred. The European bouncer made a run for it. He was shot in the back twice with automatic rounds.\n\nThe arrests all took place within seconds. Everyone was carted into FBI cars, and were spirited away into interrogation rooms, where they would all eventually be sprung by high powered lawyers.\n\nThe wiry man, however, was not so lucky. Apparently his name was Richard Dribble, and he was wanted in thirty states for backroom dealings and several accounts of insurance related arson. All the girls were immediately rushed off to the hospital, including the red head that had fallen unconscious.\n\n-------\n\nIt was all over now, and I was standing by the dock, looking at the nighttime ocean.\n\nAfter all the commotion and arrests had taken place, Jones himself appeared on the scene.\n\n\"You took a big chance calling us in. If the 'probable cause' angle doesn't clear in court then we are in a huge mess of legal trouble.\" He let that hang in the air for a second. Then he broke into a laugh. \"But I have never heard of 'probable cause' as good as human trafficking right in the middle of NYC.\"\n\nHe took note of my mood and his smile faded.\n\n\"You did good work today Jonathan. Don't forget that.\"\n\nHe walked away and disappeared into the throng of milling people and flashing blue and red lights.\n\nMy mind drifted back to the red headed girl, and how she had begged right in front of me. How she desperately screamed that she was a human being, and not a science project.\n\nI tried to picture the Church of St. John's in my mind. I tried to calm my raging emotions. But to no avail. The tranquility I found in its old walls was lost to me\n\nI felt dizzy.\n\nI threw up over the pier into the dark waters below.\n\n\n\n\n\n-------\n\nChapter 2\n\n\n\n\n\nI was sitting in my office with the lights off.\n\nI was doing my usual victory ritual. The ritual involved closing the blinds and telling my exploits to a bottle of scotch. It was four in the morning. I could hear people milling about the bullpen. They were making calls, getting calls and dealing with lawyers.\n\nAs expected, all the rich individuals were no longer sitting in our interrogation rooms. The little lawyer bees had already stormed in. They were ready with claims that their client had no idea what UniCORP was selling, and that they were all morally horrified at the idea of human slavery and simply wanted to go home and forget about it.\n\nThe DA said there was absolutely no way we could prove them wrong. In the end, all of them walked.\n\nI swiveled around on my chair in the dark office. Half my bottle of scotch was gone, and I was pouring myself another glass. I don't know why I like to get drunk when I close a case, maybe I'm an alcoholic.\n\nI peeked through the blinds to the street below.\n\nThe city always looked beautiful from my window. The night lights of town sparkled off the skyscrapers, and little headlights could be seen moving about the streets. The window was cold to the touch. No surprise. Snow blanketed the trees and sidewalks, and everything looked very peaceful.\n\nMan's city glowed like a gem in the night air. Its radiant peace was a sharp contrast to the shrill sound of voices busily going about Bureau business. Phones were ringing incessantly in the distance, angrily waiting to be answered.\n\nI would have to go out there again soon. I was lead agent on the winter's most exciting case. I would go out there into that throng of people, and stand under the obnoxious fluorescent lights, and tell them they were all doing a great job.\n\nI downed the last dregs of my drink, and grimaced.\n\nThere was a knock at the door.\n\n\"Come in,\" I said. Even I could tell my voice was slightly slurred.\n\nSpecial Agent Jim Brown opened the door.\n\nIf I called anyone at the Bureau my friend it would Jim. He was the only one who looked past my age, he was neither jealous of me, nor a rival of my position. He didn't look down his nose at me. He was my superior, and he was the only one who knew how I liked to unwind after a case.\n\n\"You drink too much of that stuff you know.\" He said in his naturally calm and smooth voice. Jim was the specialist at interrogation in the New York chapter of the Bureau. He had a mastery of words that made you feel like you could trust him.",
        "He had thinning blond hair and sharp blue eyes, and always reminded me of an aging movie star.\n\nI picked up the rest of the bottle, and stowed it in my desk, right next to a full bottle and an empty one I hadn't thrown out.\n\n\"I know.\" I replied somewhat sullenly.\n\nJim gave me a close once over. No doubt taking in my mussed up hair and loosened tie. He shook his head.\n\n\"John, if you weren't so good at what you do I wouldn't let you get away with half this stuff. But you do get results. So I put up with your little eccentric moments.\" He paused. \"Just don't let it get too out of hand.\"\n\nI nodded half heartedly at him.\n\nHis brow cleared. \"I just came in to let you know that we're sending a raiding party to UniCORP in Chicago. Our boys have warrants to ransack everything and anything. UniCORP will not survive this debacle. The team has standing orders to bring in Dr. Brigs and the CEO Ronald Turner for questioning. Because this happened on our turf our chapter gets to make the interviews. If all goes according to plan we should have them nabbed by breakfast.\"\n\n\"Good to hear.\" I said, trying to force as much enthusiasm into my voice as possible.\n\nJim simply eyed me again. I knew my strained reply was not lost on him. Without another word he turned around and left, closing the door behind him.\n\nI dimly listened to the phones ring for another hour.\n\n-------\n\nI sat in the dark for a time. Eventually things in the office settled down. All the immediate work and filing had been taken care of. All the agents with nothing to do stood around the coffee maker. I could hear them talking in a steady murmur.\n\nWe were all waiting for a call from Chicago.\n\nI turned on the small television that was perched on top of my filing cabinet. I flicked through late night T.V. I watched two hours of the previous day's news loop on CNN. I wondered what the reporters would say tomorrow. I wondered if there would be a story on my case. The pale glow of the T.V. eventually put me to sleep.\n\n-------\n\nI awoke with a start.\n\nI lifted my head from my desk. A string of drool followed my cheek up.\n\nMy phone was insistently trilling on my desk. Have I mentioned I hate phones? I wiped my mouth and picked it up. I managed to mumble something close to \"Hello?\"\n\nIt was Jones.\n\n\"Jonathan, get down here. Dr. Brigs has just been brought into custody from Chicago. He and Mr. Dribble are about to get the runaround from Special Agent Brown. We want you on the other side of the glass taking notes.\"\n\nI nodded, then realized he couldn't see me nodding, \"Yes sir, right away.\"\n\nJones sighed, \"Interrogation room C and D Jonathan, don't linger.\"\n\nHe hung up.\n\nI flung the phone back down into its cradle and frantically tamed my hair into something decent. I straightened my tie, and after wiping the last of the drool from my cheek I ran out the door of my office.\n\nThe interrogation rooms were in the basement. Each room had two parts. One was the room where the interrogation actually took place. The furniture in those rooms consisted of simple metal table bolted to the ground, and a similar metal chair also bolted to the ground. The room opposite to it was the important one. Almost everyone knew that the mirror in their interrogation room was one way. But few knew what was in the room behind the mirror.\n\nThe room usually contained a recording system, a coffee maker, a military grade 'Panther' tranquilizer dart gun, a first aid kit, and a panic button. It also contained some chairs far more comfortable than the metal ones in the interrogation room.\n\nIt was into one of these rooms that I entered.\n\nSpecial Agent Karen Smith occupied one of the chairs. She glanced over to me and nodded briskly to acknowledge me. Special Agent Smith was a thirty nine year old woman who ranked under me. She fell into the category of 'resentful of my age.'\n\nOn her head was a pair of headphones. She was staring intently out the glass into interrogation room C.\n\nI took a seat next to her, and put on an identical set of headphones. The headphones allowed us to hear what was going on inside what was otherwise, a sound proof room.\n\nDribble was sitting in the room alone. He was staring intently at the mirror. Most criminals did this. They felt as if they needed to let us know that they knew we were watching. It didn't matter to us one way or the other. It was even more annoying when they fixed their hair in the mirror.\n\nThe door to the interrogation swung open. Jim slowly walked in, his head intently buried into Dribble's file.\n\nJim casually sat down in the chair.\n\nHe glanced up at Dribble's wiry frame.\n\n\"You're in quite a bit of trouble you know.\"\n\nDribble simply nodded. It was always a sign. When they didn't ask for a lawyer one just knew fight had gone out of them.\n\n-------\n\nHalf an hour later Dribble was escorted off the premises into the custody of two NYPD officers. Who would take him to jail proper.\n\nI removed the head phones and rubbed my ears gently. Jim came into the observation room and sat down.\n\nJim looked at me to say something first.\n\nI took a breath. \"Pretty straightforward if you ask me.\"\n\nJim nodded, waiting for me to continue.\n\n\"I mean, he was strictly low class, no real information besides what was told to him. As he said he was contacted two weeks previously and asked if he would like to make half a mil. He agrees and he is taken to UniCORP in Chicago where some other low class nothing shows him what he's selling. He was probably mildly startled that the merchandise happened to be pretty girls, but the thought of half a mil was encouragement to keep his mouth shut.\n\nJim nodded. \"I figured. He's just a scrub. We only have to hope Dr. Brigs lends more help to the case. Our boys weren't able to find Mr. Turner, and by the looks of some of UniCORP's labs a lot of their research was moved before our boys got there.\"\n\nWe all stood up and left.\n\nWe walked across the hall to the Doctors interrogation room. Karen and I went into the observation room, while Jim entered the interrogation room.\n\nKaren and I donned on a new set of headphones and settled down for another long information drag.\n\nWe both watched as Jim sat down in front of Elijah Brigs. Elijah was a very pale man. In fact he almost looked like an albino. He had a bald head that looked shaved. He had an impressive hooked nose. His eyes were a very dark shade of black.\n\nThe most disturbing thing, however, was the big scary smile plastered on his face.\n\n\"Good Morning Agent...\" Brigs fished.\n\n\"Brown.\" Jim supplied.\n\n\"Brown,\" said Brigs. \"Agent Brown, perhaps you could do me the courtesy of letting me do all the talking. You'll get your answers faster, and then I'll get to leave.\"\n\nJim raised an eyebrow, \"I don't know how soon you'll be leaving Elijah.\"\n\nBrigs shivered. \"Your good, your voice is very soothing. But I assure you, I need no convincing to tell you quite a little tale.\"\n\nJim still looked skeptical, but waved his hand. \"Alright, talk.\"\n\nElijah smiled, \"I knew you would see it my way.\" He took a deep breath.\n\n\"I was hired by Ronald Turner personally about eleven months ago. My job ... was to create what I failed to do at John Hopkins ... which was effectively a mind altering chip. And I succeeded with financial help from UniCORP around November. After the initial structure of the chip was created and the method of attachment was perfected, I asked them what kind of mind altering program they wanted. Ronald said to start he wanted something he referred to as the 'ultimate fantasy program.' But that is just the general idea. If you want to look at it deeply, I created a flux program of unlimited proportions.\"\n\nAs I listened in on Dr. Elijah's rant, I could feel the color drain out of my face. My hands started to shake. My mind went to the red headed beauty in the warehouse. That poor girl ... has become ... that ... all because of me...\n\nI saw Karen shoot me a glance. She scowled. No doubt she thought that I was being young and easily shaken.\n\nDr. Brigs was similarly escorted out of the building by two NYPD officers. All the while he talked animatedly to them about how his lawyer would get him off on a plea of insanity. Dr. Brigs claimed to suffer from schizophrenia all the way to the elevator. \n\nI left the observation room before Jim could return. I used the second elevator to return to my office. I quickly walked past the bullpen and the humdrum of everyday life at the Bureau.\n\nI arrived at my office and shut the door.\n\nI was determined to finish my bottle of scotch, and make a damn good dent in the second one.\n\n\n\n\n\n-------\n\nChapter 3\n\n\n\n\n\nI could feel someone shaking me.\n\n\"Jonathan ... Jonathan ... wake up, you have got to wake up.\"\n\nThe shaking continued. Why couldn't everyone just leave me in peace?\n\nSuddenly I felt an icy splash.\n\nI started to cough.\n\nSomeone had just poured a glass of water on my head. I blearily cracked my eyes open. I was on the floor of my office, staring up at a little crack in the ceiling. I could see Jim's wispy blonde hair out of the corner of my eye.\n\nJim was holding an empty glass, and wore an expression of concern mixed with anger.\n\n\"Jonathan you little bastard you drank yourself into a goddamn stupor!\"\n\nI simply groaned in response. My head was pounding. I had never been this drunk before. I tried to sit up, and the dull throb behind my eyes broke into a splitting blinding pain. I dropped back down to the floor with a grunt.\n\nIn the back of my mind I realized my chair had tipped over.\n\n\"Is that broken glass Jonathan? Goddamn! This is a mess.\" Jim was fumbling around with something that looked like a CompVac. Which is a little box on a stick that is twice as effective as a broom or a regular vacuum.\n\nI tried to speak, but all I managed was a little gurgle.\n\n\"Some genius you are.\" Jim said sarcastically.\n\nI simply groaned again.\n\n\"Well come on, we've got to get you home somehow.\"\n\nI felt him grab my shirt. He tried to hoist me up by the fabric. After a small struggle he gave up and I slumped back onto the floor.\n\nI heard him sigh. \"Wait here, I've got to go get some help.\"\n\nMy mind was functioning enough to realize that that might be a problem. Several of my office enemies would jump at the chance to tell Director Jones about my little habit.\n\nMy fears, however, were quickly put to rest.\n\n\"Ho now! Had a little too much Irish courage have we John?\" Paul's loud good natured voice boomed somewhere above my head.\n\n\"You could say that again,\" Jim said. \"He's drunk enough to ground a bear.\"\n\nPaul laughed. \"Now let's say you get the feet, and I'll grab him under the arms, and we'll see if we can get him as far as the elevator.\"\n\nI felt their hands tugging at me, until they finally lifted me. They carried me like a lifeless log all the way to the elevator banks.\n\nIt was late again.\n\nMaybe 11:00 o'clock. A few people were still in the office. They glanced my way, but after a stern look from Jim they quickly glanced back.\n\nThe elevator dinged. We got in. The doors closed. They gently set me down on the elevator floor. I felt something pressed up against my lips. It was Paul. He was holding a water bottle to my mouth.\n\n\"Drink, it'll help clear your head.\"\n\nI obediently took a big gulp.\n\n\"Slowly now,\" Paul said. \"Drink too fast and you might lose your dinner.\"\n\nThe elevator binged again. The doors slide open to reveal an empty lobby. I was once again hoisted up and carried out the front door into the dark and bitterly cold parking lot.\n\n\"He can't drive like this,\" Jim said.\n\nI could hear the smile in Paul's voice when he spoke. \"No, but I've got that all figured out ... I called a taxi right after you buzzed down to me in the lobby Mr. Brown.\"\n\n\"He's barely conscious, how do we know the cabbie won't dump him in the middle of the road?\"\n\nPaul barked a laugh. \"Leave that to me.\"\n\nThe tax was already parked and waiting. I could see it was one of the new brown cabs. The ones you could call and charter. Yellow cabs were just too hard to phone in.\n\nThey gently set me down on the curb, where I maintained a position that somewhat resembled sitting. My head had stopped spinning, but my vision still left something to be desired.\n\nPaul motioned for the cab driver to roll his window down. The cabbie complied, and Paul leaned his bulky frame on the windowsill, and started talking to the cabbie.\n\n\"Could I see your license pal?\" Paul asked cheerfully. I couldn't see what was happening, but I assumed the cabbie complied.\n\n\"Now then, Mr. Vasquez, my friend Mr. Creed here has had a bit too much to drink and we'd like you to take him home.\"\n\nJim handed Paul a piece of paper. \"I got it off of his credentials,\" said Jim in a whisper.\n\nPaul took the paper.\n\n\"On this piece of paper is his address. I'm going to give you one hundred dollars for you to get our friend there and through his front door in one piece. He goes missing tomorrow and I'll be a might upset. I know your name and face, and I'm going to make things a touch uncomfortable for you ya hear.\" Paul's voice lost its friendly candor towards the end of his speech.\n\nI couldn't hear my unfortunate driver's response, but it must have been in the positive, as I was soon hoisted again, and thrown rather unceremoniously into the back seat. The pressure of my body on the seat made the automatic seat belt slide down and click into place.\n\n\"You all settled?\" My cabbie asked. He had a heavy Brooklyn accent.\n\nI nodded. He pressed the gas, and we turned off onto the main road, becoming one of the thousands on the roads of New York.\n\n-------\n\nI semiconsciously watched lights pass by my window.\n\n-------\n\nI could see the sun's first light from behind my eyelids. I opened my eyes, and blinked owlishly. Bright rays of sun were peaking in through my living room curtains, creating little slivers of sunbeams around my living room.\n\nI was sprawled on the couch of my living room. I was still fully dressed in my crumpled suit.\n\nI smelled like a bar.\n\nI pulled myself off the couch and began to drag myself up a flight of stairs to the guest bedroom on the second floor. I walked into the bathroom to the medicine cabinet I kept stocked with headache medicine. I kept a stash of the stuff down in this bathroom because I knew walking up another two flights of stairs hungover would kill me before I got there.\n\nShit\n\nI could already feel a knot in my back developing from sleeping on the sofa. I took out two tablets of R.E.C. from the medicine cabinet. It was new stuff that had bought out Alka-Seltzer a couple years ago.\n\nIt worked like magic.\n\nI dropped them into a glass of water and watched them fizz around.\n\nEven that slight sound made my head hurt.\n\nI made a promise to myself right then and there that I wouldn't go into work today. I couldn't take any more of that place. The high stress level was going to give me liver failure by the time I reached my thirties.\n\nAt my job I couldn't go thirty minutes without shooting someone, arresting a father in front of his children, or stealing a young girl's free will.\n\nWith that line of thinking I suddenly remembered why I had drunk what seemed like two quarts of scotch ... I banged my head on my mirror ... which hurt.\n\nAfter about an hour ... and a big gulp of that heavenly R.E.C. I managed to stagger down the stairs and prepare myself some breakfast.\n\nI was frying eggs when the phone rang.\n\nI grabbed it with my free hand, and flipped my eggs with the spatula in the other.\n\n\"Hello?\"\n\nIt was Jim.\n\n\"Hey Jonathan, make it home okay?\" He sounded mildly amused at the whole event now that it was over.\n\n\"Yeah Jim I'm fine, I owe you lunch or something for helping me out like that.\"\n\nI heard him laugh over the phone. \"I'll hold you to that.\"\n\nHis voice grew somber then.\n\n\"John, we've got those girls over here at the station. They've just come back from the hospital ... and well ... we think that they might need to go into witness protection. Apparently the tech that UniCORP placed in them is worth a pretty penny or two. They might try and get them back.\"\n\nMy breathing had gotten a little faster. \"Are they all alright?\" I asked.\n\nHe laughed, \"Yeah they're all fine. A little shaken but they'll be alright. We've got a red head that's a little antsy and a blonde that won't shut up, but that's pretty natural. Anyway, I know you had a rough night but we need your big brain to sort out this little problem. You are lead agent after all.\"\n\n\"Sure ... no problem,\" I muttered.\n\n\"See ya in thirty.\"\n\nI heard Jim click off the line. My stomach felt like it was in my feet ... maybe everything was fine. Maybe the chips were all a hoax or that one was a dude.\n\nMy eggs burned while I was lost in thought.\n\n\n\n\n\n-------\n\nChapter 4\n\n\n\n\n\nI reluctantly spooned my eggs into the trash can.\n\nLooks like I would be eating granola for breakfast. I grabbed a bar of the stuff from my pantry, and ran out the door. It was only after I saw my street side parking space empty, did I remember my car was still at the office.\n\nShit.\n\nI scrabbled through my pockets for my cell phone ... then realized I had left it on my kitchen counter, and ran back into the house.\n\nIt was five minutes until I found my phone, and another twenty until the taxi pulled up.\n\nNeedless to say, when I got in the taxi I was not in the best of moods.\n\n\"26 Federal Plaza,\" I said.\n\nCabbies always give me a weird look when I ask to go to the Bureau building. It was always a quick glance into the review mirror. I can always see the same question in their eyes.\n\nThey never say it out loud, but the intent is clear. Instead all he said was a quick alright, and then he hit the gas.\n\nThe famous morning rush in the Big Apple was over, but that didn't mean traffic was any less than unbearable.\n\nWhile sitting in the usual bumper to bumper gridlock, I decided to watch the people on the sidewalks and in the other cars. Most of them looked tired. Some were yelling into cell phones, others were looking over files balanced between their laps and the steering wheel. Some were bobbing their heads to music only they could hear. They all looked normal, some of them even looked happy.\n\nI sighed and leaned back into the polyester seat. I smelled the tobacco smoke of old cigarettes.\n\nThe cabbie must sneak smokes in-between fares.\n\nWatching the citizens of this marvelous city always filled me with the same melancholy. As a fed I never felt like I was one of them. To me they were always 'civilians' or 'the general public'.\n\nI was always an outsider.\n\nA ray of sun reflected off a glass skyscraper, and illuminated the white snow on the ground ... funny what you notice even in a black mood.\n\nAfter twenty more minutes of an introspective cab ride I finally arrived.\n\nI had completely forgotten that I would have to do a walk of shame past Paul. As I approached the door his grinning face was there to remind me. In fact, as he bit his lip, I had the distinct impression that he was trying to refrain from laughing...\n\n\"Mornin' John, I'm surprised you can even move this morning.\"\n\nI sucked it up, prepared to laugh it off.\n\n\"Ha ha, Paul, good morning to you to ... yes, yes you'd be surprised the miracles R.E.C. can work on poor drunkards like me.\"\n\nThe smile suddenly slipped off his face, and he took a deep breath.\n\n\"Now John, everyone gets one ... that's the rule ... but if I ever have to scrape you off the floor of your office again ... we are going to have to have words.\" Paul's full ruddy face had an expression of the utmost seriousness. I'd often forget that Paul's cheerful good nature belied a secret intensity.\n\nI nodded. I stuck out my hand and he grasped it firmly. His blue eyes looked straight into mine.\n\n\"I promise Paul.\"",
        "His smile was back almost immediately. I scanned my card and he waved me through. I heard him whistling a tune as I stepped inside the elevator.\n\nThe elevator closed.\n\nI was alone again.\n\nThe solitude reminded me of what I was about to face.\n\nThat elevator ride was the shortest of my life.\n\nAll too soon the door dinged again, and I stepped out into the familiar space. People looking pale and splotchy worked monotonously in the bullpen. Phones rang, faxes were made, and everything was the same.\n\nOr so I told myself.\n\nJim, who must have been eyeing the elevator waiting for me, quickly appeared in front of me.\n\n\"Jonathan,\" he cried, \"Good god, it took you over an hour to get here.\"\n\nI started to inform him about the bad traffic ... but he waved me off.\n\n\"Never mind, never mind ... the girls are late coming back in from the hospital anyway, and they've only just arrived.\" Jim took a big breath and checked his watch.\n\n\"Great Scott it's almost eleven thirty,\" he grabbed my arm and began tugging me back towards the elevators. \"Come on, I'll brief you while we walk, I've told them to hold the meeting until you arrive.\"\n\nHe punched in the basement.\n\nI stole a quick look at him. He looked tired, but determined. His blonde hair was a little messy and his suit didn't look ironed.\n\nStrange, Jim was usually immaculately dressed.\n\nThe door dinged open.\n\nThe basement contained the secret briefing rooms. This is where large scale undercover assignments are discussed. This is where people who were considered 'in danger' spent most of their stay at Federal Plaza. If the girls really where in trouble from UniCORP, then there was no safer place on the premises.\n\nAt least until we could get them into witness protection.\n\nJim immediately started bustling down the hallway. I had to jog slightly to catch up.\n\n\"They're being kept in room eight, I don't know if the Federal doctor has come in to talk to them yet.\" Jim said over his shoulder.\n\n\"Why the need for an Agency doctor, I thought these girls all got checked out at St. Marks?\"\n\nI drew level with Jim just in time to see him rolling his eyes.\n\n\"Because Jonathan ... we couldn't simply tell the local doctors about the chips. All they got down in the public hospital was a quick check to find any serious conditions. Now our man has to get a good look at the chips to see if we can get them off.\"\n\nI felt my cheeks flush. Usually I was the one who did the explaining.\n\n\"Right,\" I said.\n\nRoom eight was at the end of the hall. There was a security guard at the door, and we both had to flash our passes at him before he allowed us in.\n\nAll the rooms down here looked like classrooms. There were a couple plain desks that you might see in any university, all facing a podium and a dry erase board.\n\nAll in all, the last time I had been in this room it reminded me of a classroom at Harvard.\n\nIt was a bit different now.\n\nIt was more like stepping into a Playboy picture shoot.\n\nEvery single desk was occupied by a beautiful woman. They were of all shapes and sizes. I saw some girls that looked like they were picked up off a California beach, all the way down to Asian beauties kidnapped straight off the streets of Hong Kong.\n\nThey were all listening to a short fat balding man in a lab coat standing behind the podium. Jim and I tried to be as quiet as possible. We both leaned on the wall next to the door.\n\nNone of the girls had even looked our way.\n\nThe doctor seemed to be in the middle of his speech.\n\n\" ... the tracking devices, you'll be pleased to know, are not only removable, but will only require one easy surgery.\" He paused and gazed around the room, perhaps expecting to see some relieved faces. He saw none. All the girls looked exhausted ... he cleared his throat.\n\n\"Ah ... yes, however, with the actual neural processing units I'm afraid my news is not as good. They have been rather ... um ... deftly fused to your spinal cords. Removing them would result in the subject becoming a quadriplegic ... but ... fear not. My team and I are working on a special neutralizing agent. It will be absorbed through the pores like an intended DNA sample would have, except the solution should only have the affect of destroying the sensor instead of activating it. From what I can tell after studying of the chip, without an activated sensor, the chip is completely harmless.\"\n\nAt this there was a small audible sound of relief. A few of the girls broke down into tears, while others just quietly smiled to themselves.\n\n\"The solution is not quite ready, but I fully expect it to be functioning by tomorrow morning. In the meantime we will be setting up rooms 1-5 as field operating rooms to get those tracking modules out of your ankles ... and we um ... will be providing sterilized latex scarf's to wrap around your neck until tomorrow.\"\n\nThe doctor moved away from the podium. He took a brief look about the room, and shook his head. He turned and strode towards us.\n\n\"This is easily the most horrid thing I have ever seen.\" The doctor said.\n\n\"It's been hard on all of us, but I'll feel better once these women get their surgeries.\" Jim said.\n\nThe doctor turned to me. \"I haven't seen you around son, you new to the Bureau?\"\n\nJim coughed. \"Um, Dr. Thompson let me introduce you to Special Agent Creed. He was the lead Agent on this case, and did very fine work.\"\n\nDr. Thompson paled a little. I politely offered my hand. He grasped it, and we shook hands. His hand was cold and slimy.\n\n\"Sorry Agent Creed, you looked so young I just presumed ... my, you have aged remarkably well.\"\n\n\"Pleasure to meet you doctor, don't worry I get that all the time.\" I paused. \"I hope you're taking good care of all these girls I managed to rustle up.\"\n\nHe nodded vigorously. \"Yes, yes very good care. Apart from being morally objectionable, this technology is really revolutionary. It was fascinating to work with the FBI on this case ... well for the most part.\"\n\nJim looked at him. \"What's wrong doctor?\"\n\nThe little balding man hesitated. \"Well ... as I wrote in my report, there is one girl who had her neural processing unit ... well, um ... activated.\"\n\nJim nodded slowly. \"Yes, I read that. You had her separated from the group.\"\n\nThompson gestured toward the door. We both took the hint and made for the exit. All three of us left room eight and found ourselves back into the entrance hallway. The security guard nodded to us grimly.\n\nWe proceeded down the walkway.\n\n\"Well, we did a bit more than just quarantine her.\" Thompson said sheepishly.\n\n\"Oh?\" Jim said questioningly.\n\n\"Yes ... we um ... proceeded and removed her tracking chip, and we restrained her. She got a little violent at times. I had an understudy stay with her through the night and take notes on her psychological state of being.\"\n\n\"And?\"\n\nHe withdrew a small pad of notebook paper from his lab coat.\n\n\"He took rather throughout notes, see for yourselves.\"\n\nDr. Thompson handed Jim the notebook, and Jim's pale blue eyes began frantically scanning the pad.\n\nHis face became pinched. He proffered it to me, holding it with the tips of his pointer finger and thumb ... like it was a snake or something particularly nasty.\n\nI took the offered pad and glanced over the scribbling ... afraid of what I might see.\n\nI couldn't read a lot of it; the understudy's handwriting was atrocious. But one part distinctly stood out in my mind.\n\nIt read: \"She jumps against the restraints and begins to sob; she's been saying the same thing for the past hour now but she seems to be getting more and more distressed with every passing minute. She says; 'I have to find him, please, just let me find him, then maybe the headaches will stop ... please, I just want to find ... that's all I want.'\"\n\nDr. Thompson was speaking again, but it felt like he was speaking under water. His speech felt slow and distorted ... and very far away.\n\n\"We've kept her in room two since she arrived back from the hospital ... but, well, we had to leave the restraints on.\"\n\nJim and Thompson came to a stop. I almost walked right past them. We were already outside briefing room 2.\n\nJim swiped his pass into the key card on the door. It unlocked with a click. He swung the door open, and moved inside, with Dr. Thompson following closely.\n\nLike a man walking towards his own execution, I too stepped into the room.\n\n\n\n\n\n-------\n\nChapter 5\n\n\n\n\n\nShe was as beautiful as I remembered.\n\nJim was listening intently to Dr. Thompson read things off of a clipboard.\n\nBut that didn't matter. Their conversation was lost to me. My entire consciousness was focused on the red haired angel tied to the gurney positioned in the middle of the room.\n\nShe was sleeping quietly. Her stomach rose and fell in a calm rhythmic manner. Her eyelids would occasionally flutter, and her slim pale face looked slightly pinched, as if her dreams were not gentle ones.\n\nDried tears clung to her face. Her flowing long hair was frizzy and tangled. She wore a little gown that hospitals gave out. This one had little flowered patterns on them, and tied at the back.\n\nJim asked me a question ... I didn't hear it.\n\nI shook my head and looked at Jim.\n\n\"Sorry, what?\" I said.\n\nJim used his thumb to point over his shoulder at the sleeping girl.\n\n\"Sorry Jim, I was somewhere else, what did you say?\"\n\n\"The girl, John, the girl, Thompson says it's okay to wake her. I'd like you to talk to her; she's closer to your age.\"\n\nI looked at the sleeping girl. She looked young. Maybe even teenager young.\n\n\"How old is she anyway?\"\n\nJim took the clip board from Thompson.\n\n\"Her profile here says her name is Sarah Gale. She's nineteen years old and a resident of the United Kingdom.\"\n\n\"So we have a British teenager on our hands?\" I asked, trying desperately to keep the quiver out of my voice.\n\n\"Looks like.\"\n\nI swallowed hard. This would have to happen sometime, might as well be now.\n\n\"Wake her up Dr. Thompson.\" I said halfheartedly.\n\nThompson nodded.\n\nHe reached into his coat pocket, and pulled out a stick of Loxicodile. It was sort of like an old fashion glow stick. You bend it until you hear a crack. However, once cracked, a white gas pours out of either side, and when inhaled it could practically wake the dead. Policemen carry them in their belts these days to wake up drunks. They're called 'Jump Starters' on the streets.\n\nThompson walked cautiously over to the sleeping girl. He tenderly felt her pulse. Her chest continued to rise and fall; she was dead to the world.\n\nI personally thought waking her up with Loxicodile was a bit extreme.\n\n\"Why do we need a Jump Starter to wake her? Couldn't we just shake her or something?\" I asked.\n\nThompson shook his head.\n\n\"This girl isn't in an ordinary sleep. She passed out from over exertion.\"\n\nThompson cracked the stick, and little tendrils of smoke began to seep out. I suddenly felt very hyper and jittery simply from inhaling two feet away. I'd hate to feel a full dose of the stuff.\n\nSarah jerked awake. A small scream played at the corner of her lips, and her eyes were wild and unseeing.\n\nJim was looking at me expectantly.\n\nHe wanted me to comfort her ... It was standard procedure with trauma patients.\n\nI slowly maneuvered myself past Thompson and positioned myself next to Sarah, who was breathing erratically, with her eyes half open.\n\nBy law I wasn't allowed to touch her without her permission.\n\n\"Shhh, Sarah. Shh. It's alright. You're safe now. You're in the FBI building in New York. UniCORP has been caught. They won't ever do what they did to you again.\"\n\nThere was a pause. I noticed her breathing slowed to a more normal pace.\n\nSlowly she said. \"I know that voice.\"\n\nShe spoke with a British accent that I didn't notice in the warehouse. It sounded upper class, as if she was someone out of those old movies about Victorian age England.\n\nHer eyes opened fully, and she looked at me.\n\nThey were sparkling green. Like a field of grass during a bright spring day.\n\n\"It's you.\" She said weakly. Her lips played upwards into a slight smile.\n\n\"I'm glad you're here ... maybe the headaches will ... stop ... now...\" Her eyes gently closed. Her face settled into a peaceful expression of content.\n\nI nervously glanced over my shoulder at Thompson and Jim. They were both staring at me. Jim was the first to find his voice.\n\n\"Jonathan ... when you bought one of the girls ... you failed to mention that you bonded with one of them.\" Jim's voice was cold and icy. Very much like the voice he used during particularly troublesome interrogations.\n\nI wished I could sink into the floor.\n\n\"Well, I didn't know at the time ... what they ... were ... going to do.\" I finished lamely.\n\nJim was cradling his hands in his hands, while Dr. Thompson, who looked more interested than horrified, was furiously taking notes on his little pad. Finally Jim raised his head and looked at me.\n\nHe sighed. \"I have to tell Jones, Jonathan. You probably won't get into any trouble, but you'll probably be taken off the case. Great Scott! This is awful.\"\n\nSuddenly he burst out laughing.\n\nI didn't see what was so funny.\n\n\"I don't see how this is anything to laugh at Jim.\"\n\nJim was wiping tears from his eyes. \"Well Jon, I was just thinking about how you are going to deal with this. I've never met a person more awkward around girls than you.\" His voice was strained. I could tell he was dying to have another good chuckle.\n\n\"Thanks Jim.\" I said sarcastically. At least he wasn't looking at me like some monster.\n\nThe chuckle burst through. He was laughing again. This time is was harder than before.\n\n\"Jon, buddy, in all seriousness you do have a tendency to be a bit of a mope.\"\n\n\"Let's go inform Jones together. I'm worried about what you might say. I might have to defend myself.\"\n\nWe walked to the elevator bank, John still plagued with laughter.\n\n-------\n\nJones, unfortunately, was not amused.\n\n\"Agent Creed, you should have informed me immediately of your suspicions about the girl's ... what are we calling them?\"\n\n\"Neural Processing Units sir.\" Jim supplied.\n\nJones shook his head. \"Some scientist came up with that didn't they? ... Regardless. Agent Creed I'm taking you off the UniCORP case. In addition, you are going to apologize on behalf of the Bureau for what's happened to her. You're going to go back down there and talk this out with her. Tell her you're sorry for Christ's sakes and that it was just a mission that you had to play the part for. After that get out of here, I have to play PR with the media at four o'clock and we don't need you around here. Take the week off, you still have a month of vacation time stored.\"\n\nI nodded.\n\nJim and I both made to leave.\n\n\"Special Agent Brown, stay awhile, I have more to discuss with you.\"\n\nJim gave me a pat on the back.\n\n\"Good luck,\" he whispered in my ear.\n\nI walked out of Jones' office alone. They closed the door behind me. I trudged back to the elevators. Already trying to think of what I was going to tell Sarah Gale.\n\n-------\n\nOutside briefing room two sat Dr. Thompson.\n\nAs I approached, he looked up from his cell phone.\n\n\"Sorry Agent Creed, but I can't in good conscious let you talk with her until she wakes up. Her sleeping has finally regularized and she desperately needs it.\n\nHe pointed to a chair next to his.\n\n\"Make yourself comfortable.\"\n\nI sat down next to him, and leaned my head against the wall.\n\n-------\n\nI abruptly woke when someone poked me.\n\nDr. Thompson was standing over me pen in hand, ready to poke again should the need arise.\n\n\"She's awake John. We've untied the restraints and she's sitting upright eating some lunch. I think this might be the best time for you to talk to her.\"\n\nI nodded, and walked in without saying a word.\n\nShe looked much better than when I saw her last. Someone must have given her a comb, because her earlier tangles were brushed out. Her hair now was perfectly straight. It was a dark auburn color.\n\nShe was propped up by a couple pillows, still in her hospital gown. She had a tray balanced precariously on her lap, and was eating what looked like a giant salad.\n\nI immediately felt awkward...\n\nI decided to take a formal approach.\n\n\"Hello Ms. Gale, I'm sorry to interrupt you lunch. My name is Special Agent Jonathan Creed. I'm sorry we couldn't meet under better circumstances, I'm sure that what happened in the warehouse was a very traumatic experience for you.\"\n\nSarah raised one eyebrow. \"You work for the FBI? Why did you buy me?\" Her English accent was fully recognizable now ... very upper class.\n\nI cleared my throat. \"It was the mission Ma'am, I had to get them to accept our account number so we could trace them. I was also given orders to buy a sample of the merchandise ... the um ... merchandise just so happened to be you.\"\n\nShe sighed. \"My life is changed forever isn't it?\" She sounded defeated.\n\nI nodded slightly. \"We need to put you into witness protection, UniCORP may come after you.\"\n\nShe was shaking her head before I finished speaking. \"No, they don't want me. My chip thingy has been activated. They told me that it couldn't be switched off. They can't reuse it. I don't think they'll come for me.\"\n\n\"Then what do you mean? You are of course free to refuse being put into the protection service, but why? All the other girls have accepted it.\"\n\nShe set down her fork.\n\n\"You don't know what it feels like to have this thing in your head.\"\n\nI was confused. \"I know they said that you would feel certain things towards me, but I assure you, we will send you far away from me, you'll never have to...\"\n\n\"NO!\" She screamed. Her green eyes looked frightened. They were watering. It looked like she was about to cry.\n\n\"If you go away, the headaches will start again. The people who took me ... they said that if we tried to run away from our buyer we'd get terrible headaches ... the farther away we got ... the worse it would be.\"\n\nI was at a loss for words.\n\nI looked at her.\n\nShe was wringing her pale hands nervously.\n\nShe spoke. \"I don't know how to feel about you ... part of me hates you. You've changed my life ... I can never go back to being exactly me again.\" She took a deep breath. \"But I've got to have you close to me.\"\n\n\"We'll set you up with a safe house close to where I live.\"\n\n\"That won't work.\" She said.\n\n\"Why.\"\n\nHer voice had a quiver in it. \"Because I could feel the headaches when you were upstairs ... I can't be that far away ... I ... I ... have to live with you ... that's what they said...\"\n\nI started at her ... her entire body was shaking. I felt like I should rush forward and embrace her.\n\nBut I didn't.\n\nInstead I said, \"I'll see what I can do.\"\n\nI turned, and walked out of the room.\n\nBehind me, Sarah started sobbing.\n\n\n\n\n\n-------\n\nChapter 6\n\n\n\n\n\nJones wasn't speaking.\n\nI couldn't tell if the ability of speech had simply deserted him, or if he was thinking of something particularly scathing to say.\n\nSuffice it to say, he didn't take my news well.\n\n\"Let me get this straight Agent Creed. Not only did you activate this girl's brain chip ... thingy, but now you tell me that she has refused witness protection and is insisting on living with you?\"\n\nI wanted to disappear. \"That's about the size of it sir.\"\n\nJones exhaled ... slowly.\n\n\"Very well, Agent Creed. I am releasing Ms. Gale from custody, she may reside where ever she chooses. You needn't worry about bringing her to court to testify, we have at least ten other girls who want to see UniCORP go down in flames.\"\n\n\"Thank you sir,\" I said. This meeting had gone better than I expected.\n\nJones simply smiled.\n\n\"Oh don't thank me yet Creed, I'm also putting you on probation. You will answer tip line phone calls in the bullpen for a month for being careless ... as I understand, you came with such high qualifications you missed that little job. I think it only fair I not deny you the experience.\"",
        "I really hate the bullpen.\n\n\"Um, sir, am I being demoted?\"\n\nJones shook his head, still grinning. \"No Special Agent Creed, I'm just making you do some grunt work, so you'll maybe use that big brain of yours and think before landing yourself in this kind of trouble again.\n\nAh. So he's just being a bastard.\n\n\"Yes sir, I understand.\"\n\nJones nodded. \"Good.\"\n\nJones looked back down at a new file on his desk. It had just come out of the official packaging from Washington. Two days ago I would have asked to see it. I would have wanted the case. Now I just felt lucky to keep my job.\n\n\"Dismissed,\" Jones said without looking up.\n\nI walked from the room.\n\nI eyed the bullpen and the jingling phones on the way to my office ... it had suddenly taken on a new meaning.\n\nI slipped into my office.\n\nIt was still a bit disheveled from my episode so I started to tidy up.\n\nI'm a bit of a neat freak.\n\nWhen I was content that my office was sufficiently clean I sat down at my desk. I needed to tell Sarah Gale that she was free ... now all I had to do was convince her that living with me was not the solution to our mutual problem.\n\nI reached for the phone sitting on my desk, and rang down to the holding rooms.\n\nDr. Thompson answered.\n\n\"Hello.\"\n\nI cleared my throat. \"Um, hi, Doctor, how is she?\"\n\nI heard Thompson give a little chuckle. \"She's as antsy as a wild cat. Either that chip thing is stronger than I originally thought or you make quite a first impression.\"\n\nI groaned internally. This did not bode well for my 'you're free' speech.\n\n\"Send her up to my office Doctor, I need to talk with her.\"\n\n\"Alright son, she'll be up in five minutes.\"\n\nI gingerly replaced the phone on the receiver.\n\nTwelve minutes later I heard a knock on my office door.\n\n\"Come in.\" I called out.\n\nI poured myself some scotch to calm my nerves.\n\nSarah Gale entered my office.\n\nShe was a vision on two legs. Obviously UniCORP picked the best looking girls they could find. At five eight she stood quite tall for a woman. She had long shapely legs that were currently encased in form fitting jeans. She was wearing a pick blouse that accentuated her hourglass figure, and emphasized her C cup breasts. Her long shimmery auburn hair was pulled back in a pony tail. She gave me a half smile.\n\nI tried to swallow the knot that had formed in my throat.\n\nI gestured to a chair, \"Please, Ms. Gale sit down.\"\n\nShe gracefully sat down. \"Just Sarah, Agent Creed.\"\n\n\"Then I insist you call me Jonathan.\"\n\nShe nodded and said, \"You wanted to see me Jonathan?\"\n\nI took a healthy swig of my drink. \"Sarah, I've managed to get you discharged. You are a free woman once again, and can leave the premises whenever you desire.\"\n\nShe made a face. \"Um, wonderful ... so are you going to take me to your house then?\"\n\nI sighed. \"Sarah, please be reasonable.\"\n\nShe turned red, and made fists with her hands. \"NO. Now listen to me mister. I get the most terrible headaches when I can't see you, and when I can see you all I can think about is sex! So don't keep going on about how I'm not being reasonable because you're the one who did this to me and YOU have to face the consequences.\"\n\nHer anger was quickly giving way to tears. Suddenly she dropped to her knees and put her head on the ground.\n\n\"I'm sorry for yelling Master.\"\n\nMaster? That was a new one.\n\n\"Um, Sarah, get up,\" I said. She quickly rose and sat back down. Her face was crimson, this time from embarrassment.\n\n\"What was that Sarah?\"\n\nShe shifted and looked distinctly uncomfortable.\n\n\"It was nothing, don't worry about it,\" said the adorable British red head.\n\nI would not be denied. \"Sarah, you called me Master.\"\n\nShe shivered.\n\n\"I suppose I can't fight the urge forever, you'd know eventually.\"\n\n\"Know what Sarah?\"\n\n\"Each chip has a specific fantasy on it. One of the Doctors told each of us what our chips were designed for ... some girls got 'Perfect Housewife.' Others got, 'Model Daughter' while some got 'Nymphomaniac.' I and two other girls, got 'Sex Slave.'\"\n\nHer voice was shaking now.\n\nI gulped. \"You mean?\"\n\nShe nodded. \"I'm your sex slave.\"\n\n-------\n\nIn all my years of conversation, I have never had to respond to that statement before.\n\nI'm your sex slave.\n\nSarah was eyeing me nervously. I could see that her eyes were watering, as if she were about to break down and cry.\n\nI stood silently, and did the bravest and most forward thing that Jonathan Creed has ever done with a woman.\n\nI hugged her.\n\nShe felt soft and warm in my arms. Sarah was perfectly female, and perfectly vulnerable. She buried her face in my shoulder. Her long red hair tickled the nape of my neck. I felt moisture leak through my shirt. She let go of her tension, and was silently sobbing against my body.\n\nI slowly rocked us back and forth, as we stood there in the middle of my office, and whispered in her ear.\n\n\"It's all right, everything will be alright.\"\n\nShe cooed into my chest. She wrapped her arms around me and hugged me tightly.\n\nWe stood like that for a time.\n\n-------\n\nI lost track of the moment. An hour could have slipped by and I wouldn't have noticed. We simply stood there, lost in our own little world, floating in a private universe. I never felt more at peace than that moment ... it couldn't last though. My legs started to ache from standing in place.\n\nI slowly released Sarah from my grip, and reached around and disconnected her arms from my back.\n\nShe whimpered, and tried to grab me again.\n\n\"What's wrong with me,\" she asked in a soft voice. \"I can't seem to let you go ... I don't want to let you go ... I've never been like this with a man. I've never been so helpless ... so needy for his touch.\"\n\nI gently raised her chin so that her green eyes met mine.\n\n\"It's my fault Sarah. I did something terrible to you. I've taken your freedom ... and you are feeling things that you wouldn't normally feel. I'm sorry I activated that chip in your head ... if I could take it back and set you free, I would.\"\n\nSarah's eyes glanced away from mine. \"But you can't take it back.\"\n\n\"No.\"\n\nShe nodded slowly. \"Then, can you take me to your house then? Like I asked?\"\n\nI smiled at her.\n\n\"That much I can do.\"\n\n\n\n\n\n-------\n\nChapter 7\n\n\n\n\n\nThe moment had passed.\n\nShe had been eager enough to leave the building, but the second we stepped into my little black sedan things became awkward again ... by the time we hit lunch time traffic it was just plain uncomfortable.\n\nUnfortunately in bumper to bumper traffic I had nothing to do but to steal glances at my new teenage ward.\n\nSuffice it to say she looked ... on edge.\n\nShe was sitting up very straight in her seat, and her hands were clenched into fists on her lap. She was also breathing heavily.\n\nOdd.\n\nI couldn't think of anything to say ... so I turned the radio on. A smooth and slick news reporter voice started talking.\n\n\" ... President Mendez refused to give a statement as to if he would be running in the 2028 election ... how this will affect his popularity in the upcoming polls remains to be seen. In other news US multi-billion dollar corporation UniCORP has been officially seized by the FBI as of earlier this week. CEO and founder Ronald Turner was spotted boarding his private jet an hour before the FBI raid. He is currently suspected to be in hiding in Somalia. The company is suspected of tax fraud, and construction of illicit technology, though as to the nature of this technology, Director Henderson in Washington refused to comment ... I'm Sam Young, and this is Afternoon News.\"\n\nI quickly turned the radio off. I snuck another glance at Sarah. She had a numb expression on her face.\n\n\"Sarah...\" I began.\n\n\"Don't, Jonathan...\" She said, her voice breathy.\n\nI dropped it.\n\nI glanced out the window at the traffic. Everyone was out going to lunch. The streets were crowed, people were nearly shoulder to shoulder on the side walk. The snow was melting slightly, giving everything a slightly slushy feel. As if the entire world was wet melting...\n\nHonking erupted on a distant street, probably due to some angry cabbie, and immediately everyone else joined in.\n\nSo many people ... it sometimes makes me nauseous.\n\nSarah closed her eyes and leaned back into the headrest.\n\n\"Are we going to be there soon?\"\n\n\"About ten minutes.\"\n\nSarah smiled...\n\n\"Good,\" she said. She rubbed her legs together, and hugged her chest.\n\n\"Are you cold?\"\n\n\"No.\"\n\nWe drove on in silence, choosing to listen to the noise already in the world than add to it.\n\nThis was going to be an awkward relationship if neither of us were big talkers.\n\n\"Do you have any family that you might want to call?\"\n\nShe shook her head, \"They already asked me that at the hospital.\"\n\nI shrugged, while keeping my eyes on the traffic infested road. \"Sometimes people don't like to call from the hospital or the FBI building ... but then they're on their cells the minute they walk out the door.\"\n\nShe brushed a lock of red hair from her face.\n\n\"No ... no family to call.\"\n\nI simply kept driving.\n\nEventually we pulled through the bottle neck of the main roads, and traffic slowly disappeared after that.\n\nI owned a town house ... one of those skinny affairs that have about four stories, but only about two rooms on each floor. It cost me much more than an apartment would have, and it was farther away from the Bureau building ... but I liked my space, and my privacy.\n\nWe pulled up to my place and I parked in my reserved resident's street side parking.\n\nSarah simply stared at my house.\n\n\"Is that it,\" she asked. She was pointing towards my white five story town house...\n\n\"Yes.\"\n\nShe chuckled. \"You don't take very good care of your potted plants do you?\"\n\nI ignored her.\n\n\"Come on, let's get you inside ... I'm sure your hungry.\"\n\n-------\n\nWe walked through the threshold and I gave her a quick tour.\n\n\"On this floor is the kitchen and the living room. Second floor has a guest bedroom and my media room. Third floor is my study, and the fourth floor is the master bed room. Below the first floor is a basement. Complete with a big freezer and pool table.\"\n\nShe busied herself looking around, as if trying to get acquainted to a new home ... or, at least I hope she thought of it as a home ... and not as a prison cell.\n\nFinally she turned to me.\n\n\"This must cost a pretty pence for all this room in New York City.\"\n\nI nodded.\n\nShe continued. \"I didn't think cops made this much.\"\n\nI winced at being called a cop ... even though I had a great respect for them. I felt myself getting a bit angry, it was if she was trying to goad me.\n\n\"I am a FBI Agent, Sarah ... a good one to. I get paid a decent amount ... besides; when my parents died they left me a little nest egg ... so I'm not pressed for money.\"\n\nHer furrowed brow softened. \"I'm sorry about your parents ... and I'm sorry for being such a wanker ... but I'm kinda confused right now ... and I don't know how to behave.\"\n\nI smiled at her and took her hand. She trembled and closed her eyes ... but pretended not to notice.\n\n\"Just act like you're my roommate ... we'll get along fine until we can sort your problem out.\"\n\nShe cracked her eyes open and looked at me strangely.\n\n\"Like you're my roommate...?\" She said confused.\n\nI nodded. \"Yeah, we'll be more comfortable with each other that way...\"\n\nShe stuttered and winced, as if her head hurt. \"But the chip...\" she began.\n\n\"Shhh,\" I said softly. \"Let's try not to worry your chip ... I won't ever force you to act on what the chip does.\"\n\nShe screwed up her face again. \"It doesn't work like that John ... you can't just turn this bloody thing off ... those desires ... that need ... it's always in my head, telling me ... making me want to do ... to be your...\"\n\n\"Sarah!\" I said with some force. \"Snap out of it.\"\n\nShe blinked, as if exiting from a trance.\n\n\"I am going to show you up to your room. Do you have your suitcase?\"\n\nShe nodded, keeping her eyes on the floor. \"Yeah, the FBI got all my stuff from my apartment.\"\n\n\"Good, now follow me up the stairs.\"\n\nI showed her into the guest bedroom. It wasn't very big, as it competed for space with the media room on this floor, but it would have to do. The room was very white, and had dark blue curtains and a queen sized bed. The room had a connecting bathroom with a shower.\n\nI turned to Sarah, who was looking very confused ... If only this beautiful woman had chosen to be here of her own free will ... I would have been ecstatic to have her in my house.\n\n\"Will you be comfortable here?\"\n\nShe nodded slightly.\n\nI continued. \"Good, I want you to unpack and make yourself comfortable. When you're done I should have a bit of lunch ready.\"\n\nShe suddenly brightened up. \"Can I make lunch for you? Please?\"\n\nI shook my head sternly. \"No Sarah, unpack, get comfortable ... maybe take a shower. Don't come down stairs for at least forty minutes.\"\n\nHer eyes flicked down to the floor again.\n\n\"Yes sir.\"\n\n\"Good, I'll see you at lunch.\"\n\nShe nodded. She had started panting again ... I couldn't tell if she was about to cry again or if she was just out of breath ... so I beat a hasty retreat out of her new room. I closed the door behind me.\n\nI slowly made my way back down the stairs. The kitchen still smelled faintly of my failed attempt to cook eggs.\n\nDespite my mother's best efforts I was not the best chef in the world.\n\nI, however, had learned to work around my handicap. I reached into the freezer and pulled out two steaks. I set them out to thaw.\n\nI then went to the pantry and found a bottle of a special local steak marinade that a little mom and pop store sells just down the road.\n\nI was washing lettuce for a salad when I heard a moaning coming from upstairs. Almost as if she was in pain.\n\nThat girl must be so miserable with that chip in her head ... stuck with a wet blanket like me.\n\nI tried to ignore her misery and went back to preparing lunch.\n\nSarah Gale cannot live with me ... of this I was certain ... somehow someway we would beat this chip, and have her get on with life. We would talk over lunch ... I would get to know her and her me ... and she would see me as the miserable loner I am...\n\nAnd then she would distance herself from me...\n\nJust like everyone does.\n\n\n\n\n\n-------\n\nChapter 8\n\n\n\n\n\nWe picked at our food in silence.\n\nSarah kept her head down, and her eyes focused on her food. She was idly playing with her fork, and randomly scraping it across her plate. She did it in the way that people do when they're either extremely bored or extremely tired.\n\nShe had hardly touched her meal.\n\nThe afternoon had turned overcast, and it was dark in the kitchen, however, neither of us made a move to turn the lights on.\n\nI cleared my throat.\n\n\"So tell me about yourself Sarah,\" I said. I wanted something, anything, to make this girl feel comfortable.\n\nShe didn't look up from her food.\n\n\"No much to tell really,\" she said glumly.\n\nI stood up and took both our plates to the sick ... I began to wash them. Sarah quickly stood up.\n\n\"Can I wash those?\" She asked, with a strange pleading note to her voice.\n\n\"No, you sit Sarah ... I'd rather you tell me about yourself,\" I said. She made a sound of disappointed.\n\n\"Yes Mas...\" she coughed, \"Yes Jonathan.\" She took a deep breath ... and looked around the room skittishly.\n\nI sighed.\n\n\"You could start with what job you do, or perhaps where you go to school?\"\n\nShe started mumbling something at the table ... Her words were completely inaudible. I felt like a parent asking his teenage daughter how her day was.\n\nIt was tedious.\n\n\"Sarah, look at me and speak up, I can't hear you.\"\n\nSarah raised her head, causing red tresses to fall neatly around her face, haloing her pale perfection in a beautiful sea of auburn.\n\n\"I'm model,\" she said simply.\n\nI nodded, still busy scrubbing dishes.\n\n\"I can imagine that, I'm sure you know that you are a very beautiful girl.\"\n\nSarah surprised me by blushing a deep shade of pink ... in my experience pretty girls don't blush at being called beautiful ... especially not models ... they should be used to such comments.\n\n\"Thank you, Jonathan.\" She said softly. Her green eyes seemed to sparkle with sincerity ... perhaps we will get along after all.\n\nI racked my brain for more questions. I found myself wanting to know more about my alluring house guest.\n\n\"How do you like Britain ... do you live here in Manhattan or are you just visiting?\"\n\nSarah smiled slightly.\n\n\"I live here with you now Jonathan.\"\n\nMy belly did an unexpected flip flop.\n\n\"Well, yes, for now. But I mean before all this happened ... where did you live?\"\n\nSarah's smile slipped a little. She began playing with her hair, twirling one strand on her finger. It was extremely cute ... I was positive she was doing it unconsciously.\n\n\"I lived in an apartment with two other models near Crotona park ... we shared the rent ... and we all worked for the same agency.\"\n\nI nodded, \"But you were born and raised in England?\"\n\nShe looked away.\n\n\"Well, were you?\"\n\nShe stopped playing with her hair. \"Yes, I was born in London.\"\n\n\"Why'd you leave?\"\n\nShe suddenly looked at me as if I were an idiot. \"I got a job offer to be a model here.\"\n\nI waved my hand, dismissing her statement. \"Yes, yes I know that, but I mean you're nineteen. You should be in college.\"\n\nShe started tapping on my wooden kitchen table. \"I got into Oxford,\" she said.\n\nSo she was smart and pretty...\n\n\"Then why aren't you in Oxford right now?\"\n\nShe sighed ... acting like such a teenager.\n\n\"Because I could model here you wanker...\" her breath suddenly caught in her throat, \"Sorry for calling you names sir.\"\n\nThis girl seemed to suffer from mood swings.\n\nBut still, I could see how a young teenager could throw away prestigious college in order to be paid to wear clothes.\n\n\"How'd your parents feel about that?\"\n\nSarah groaned, \"None of your business.\"\n\nI guess I could respect that.\n\nI paused for a second trying to think of a way to bring up what she told me in her office. The term 'sex slave' made me distinctly uncomfortable ... but so far, except for one instance in my office, she didn't seem anything like what I imagined a 'sex slave' was.\n\nBefore I could talk she interrupted me.\n\n\"How old are you Jonathan?\" She was looking at me with distinct curiosity now. I shifted my weight to my other foot, and busied myself loading the dishwasher. My age was a bit of a sore spot for me. Society thought people my age should be in a fraternity, not working for the FBI.\n\n\"Twenty four,\" I said cautiously.\n\nShe looked at me with genuine surprise. \"I thought you were just well preserved. You act like you're in your mid-thirties.\"\n\nI gave a little laugh. \"No, I guess I'm just boring for my age.\"\n\nShe cocked her head. \"You work for the FBI ... you must have gone to college ... so, um ... when did you graduate?\n\nThis was the part people realized I was a freak.\n\n\"When I was twenty,\" I replied.\n\nShe nodded as if this was normal.\n\n\"From what college?\"\n\nI almost didn't say it.\n\n\"Harvard...\" Even to me my voice sounded dejected.\n\nSarah leaned back in my kitchen chair. It made a creaking noise as pressure was put on the back.\n\n\"So you're smart ... that fair to say?\"\n\nI nodded miserably.\n\nSarah looked at me as if she couldn't figure me out ... but what she didn't do was look at me as if I were an alien ... something that was completely different from her and could never be understood. Perhaps that's an exaggeration ... but people treat intelligent people differently. My least favorite phrase in the entire cosmos was...\n\n'Get John to do it, he's smart.'\n\nI eyed Sarah's teenage face for a second longer. All I saw was curiosity, and nothing else ... and it was wonderful.",
        "Tension drained from my body.\n\nI stopped pretending to clean a glass, and sat back down across from her. Sarah was smiling at me.\n\n\"I guess if I ever want to go back to school I should have you take my entrance exams for me.\"\n\nI grumbled. \"Very funny,\" I said.\n\nThe kitchen was dark now. It was only three o'clock, but it was as dark as night outside. Thunder all of a sudden echoed across the sky ... and raindrops started to splatter against the windows.\n\nMust be too hot for snow ... I thought to myself.\n\nI glanced across the table at my teenager. She was watching the rain.\n\nI raised an eyebrow. \"So are we done asking questions about me?\" I asked.\n\nShe nodded. \"Yeah, apparently you're just a super smart cop.\"\n\nShe must be feeling a little bit more comfortable with me if making fun of me was now allowed.\n\nThe rain was loud ... and periodically thunder would crack above.\n\n\"Would you like to play pool?\" I asked.\n\nSarah screwed up her face. \"I prefer snooker,\" she said.\n\nI sighed, \"Sorry,\" I said. \"No weird British pool here.\"\n\nShe very childishly stuck her tongue out at me.\n\nI tried to explain. \"What I really want is to go down into the basement. We won't hear the rain down there. We'll play a game till things quiet down.\"\n\nShe nodded, but made no move to get up.\n\nI stood, \"Come on, I'll even make us some hot chocolate ... I'll be right behind you. Simply go back to hallway next to the front door. The door on your left leads to stairs down to the basement. Light switch is at the top of the stairs.\"\n\nStrangely, the insolent little teen simply stood and went ... without saying a word.\n\nThree minutes later I wobbled down the basement steps carrying two cups of hot cocoa. It was quiet and warm down here due to the insulation.\n\nSarah was sitting on the side of the pool table, dangling her feet just above the floor...\n\nI handed her a steaming mug.\n\n\"Thank you,\" she said.\n\nI hopped up on the side of the pool table next to her, and took a sip of my hot chocolate. We both quietly listened to the dull hum of my hot water tank as we sat.\n\nSarah began to fidget, and she rubbed her legs together. She took a swig from her mug, and took a deep breath. Her face contorted again, and she squeezed her eyes shut.\n\nI gently put my hand on her back. \"Something wrong?\" I asked.\n\nSarah leaned back into my hand, increasing the connection between us. I could feel her bra through her blouse... \"You won't like the answer,\" she said softly.\n\nI groaned internally ... we both knew what she wanted to talk about ... except I had wanted to be the one to bring it up first.\n\nShe continued. \"We can't just ignore the chip Mr. super smart cop. It might make you comfortable pretending to my father or brother or whatever ... but it is constantly chattering in my head ... and I can't fight the urges forever. The headaches are too bad ... something in my mind will give.\" Sarah paused, and looked down at her legs, which she was now cutely swinging in midair.\n\nI quickly tried to think of a response. \"What is the ... the um ... chip telling you to do now?\"\n\nSarah paused for a second ... thinking. \"It's not so much that it tells me with words ... nor is it like it is some separate entity giving me suggestions. All it feels like is thinking of something that you know you wouldn't normally think or feel ... but then thinking it anyway.\"\n\nThat was confusing.\n\n\"Okay...\" I started. \"So what are you thinking now that you shouldn't be?\"\n\nSarah paused, and took in another deep breath. \"Well, right now I'm mad at myself for some reason ... because I'm sitting next to you. I feel as if I should be ... on my knees.\"\n\nI didn't like the way this was heading.\n\n\"So you're having 'sex slave thoughts, '\" I said.\n\nShe nodded miserably. \"It's so confusing,\" she said. \"I mean, it's like a battlefield in my head.\" She all of a sudden turned to me a looked me straight in the face. \"I'll have you know I've never been this pathetic in all my life!\" She shouted. \"I'm a hardcore feminist ... I feel sick with myself for feeling this way ... after all the things women have done for equality ... I get all excited about the prospect of making you lunch.\" Her mood suddenly switched again, and she collapsed into me. Her head rested heavily on my shoulder ... as if I were the only thing that held her up. \"And now that's not even the worst of it. I keep wanting you to hit me ... to call me degrading names ... to USE me for any sexual desire ... and all this time I have to eat lunch and discuss colleges and jobs with you and act like nothing is going on!\"\n\nHer earlier moaning from her bedroom made more sense now. \"You masturbated when I told you to clean up didn't you?\" I said.\n\nShe nodded against my shoulder. Her voice was quieter now, but somehow filled with even more passion. \"I rubbed myself like a horny bitch as soon as you left ... I've never cum so hard ... fuck it was great.\"\n\n\"Language, Sarah...\" I said, as if I were her father.\n\nI felt her stiffen next to me. \"Sorry sir.\" Suddenly she jerked away from my shoulder and looked up at me. \"I didn't mean to say that!\" She said. \"The little whiney slave Sarah said that before I could even THINK!\"\n\nThis was spiraling out of control.\n\nI reached out for her, \"Shh, Sarah, it will all be okay.\" I pulled her into our second embrace ever. She didn't cry this time ... instead she just sighed into my chest.\n\n\"Fuck me Master,\" She said.\n\nStartled, I pulled her away from me so I could see her face. Her green eyes were pools of lust ... and her cheeks were flushed. Her long mahogany hair was slightly disheveled, but that only made her sexier.\n\nQuickly, Sarah dropped to her knees, and looked up at me from the floor.\n\n\"Please, Master\" she said, \"please claim me.\"\n\n\n\n\n\n-------\n\nChapter 9\n\n\n\n\n\nIt was silent for a beat.\n\nThe dull hum of the water heater filled my ears. The warm stuffy feel of the basement pervaded my skin, and my legs were falling asleep from sitting awkwardly on my pool table.\n\nSarah Gale had just asked me to claim her. Whatever that truly menas.\n\nHalf a minute passed, and thousands of thoughts ricochet around inside my head. But one singular one came to the forefront.\n\nWhat she had just said turned me on ... and that worried me.\n\nAs a modern man I wasn't supposed to think of women as slaves or inferior things ... but the thought of having such ... control ... over a woman was ... intoxicating.\n\nNot to mention completely out of the question.\n\nAn entire minute ticked by. Sarah still kneeled in front of me. Her face held no emotion but that of complete supplication. She was panting slightly ... I could see her nipples tenting her pink blouse.\n\nI shook free of my disturbing thoughts, and found my voice.\n\n\"Sarah...\" I said. \"Sarah, get up. You're not thinking clearly ... Come on, I know it's still early but I'm sure we're both tired. Let's get you to bed.\" I watched Sarah's face slowly turn crimson.\n\nShe was on her feet so fast I couldn't see her move.\n\n\"What the FUCK have you done to ME?\" She screamed at the top of her voice.\n\nI was glad we were in the basement; otherwise the neighbors call the cops for a domestic dispute. Sarah seemed to go from embarrassment to anger rather quickly.\n\n\"Don't you think that for a second you should read anything into that little ... that little ... EPISODE!\" She yelled. Her hair was messy, and her eyes were livid, even though they were filled with moisture.\n\nI simply nodded dumbly.\n\nSarah took a deep breath. She still looked me suspiciously, as if daring me to comment on her 'little episode.' She kept her eyes on my face for a second ... then nodded.\n\n\"Good.\" She said. \"Obviously this is all your fault anyway for imprinting yourself on an honest to god 'MIND CONTROL' chip. But if you think for a second that that was the real me you smug bastard then you've got another thing coming. I in no way wanted to act like that...\" She stopped speaking mid sentence. \n\nHer eyes closed shut and her mouth turned down as if she were in pain. Her hands shot up and clutched her head ... She moaned so quietly I could barely hear her... \"My head...\" she hissed softly.\n\nI hopped off the table to help. I grabbed her head under her chin and tried to raise her face to mine.\n\n\"Are you okay Sarah?\" I asked.\n\nShe shook her head ... and winced. \"No ... can't think ... my head is killing me.\" Suddenly she jerked her head away from my hands. With a moan she collapsed onto her hands and knees, and threw up all over my basement floor. The putrid smell of sick filled the warm air of the underground room ... I slowly moved next to her, and knelt down. Sarah collapsed face down onto the floor next to her puddle ... coming dangerously close to getting her hair dirty.\n\nI put a hand on her and started to softly caress her back. I could feel her diaphragm shaking.\n\nQuietly she began to cry.\n\nTime passed ... and I did nothing but keep my hand calmly rested upon her back.\n\nEventually Sarah stopped sobbing. She was now taking even deep breaths and her eyes were closed.\n\nShe had fallen asleep.\n\nGently, so as not to wake her, I slowly eased her up into my arms. I carefully walked up the basement stairs and the first floor stairs. I awkwardly turned the door knob to the guest room with Sarah still sleeping quietly in my arms.\n\nI stole my way inside the now dark room and lowered her onto the bed. I contemplated taking her clothes off, but when I found they were free of vomit I decided that doing so would not help either of our causes. Instead of putting her under the covers I simply untucked the bed spread and wrapped her in it. She ended up looking like a baby in a bundle.\n\nHer young pale face looked untroubled in sleep. Her red hair fell back in a glorious mane on the bed. She breathed slowly and rhythmically.\n\nI silently eased my way out of the guestroom. Like a parent with a child I found myself wishing her good night as I eased the door closed.\n\nIt felt like the weight of the world was on my shoulders ... but I'm sure everyone has had that thought at some time. I staggered down the stairs to the first floor, and dragged myself into the kitchen. I felt so ... tired.\n\nSo very tired.\n\nI hadn't been sleeping well all this week. I had forgone rest in order to collect my facts on the UniCORP investigation ... and then there had been last night ... I don't think I've have ever been that drunk.\n\nI grabbed a dish towel from a drawer and put it in the sink, and started soaking it in hot water. Then I grabbed some disinfectant and a trash bag.\n\nI turned the sink off and grabbed the cloth.\n\nWith my cleaning supplies in hand I walked out of the kitchen and started my way back down the stairs to the basement.\n\nThe smell had gotten much worse in my absence.\n\nI could barely feel my feet as I trudged up the stairs to my bedroom. The disadvantage to my house is stairs. There are a lot of them ... I peeked into Sarah's room as I reached the first floor. It was dark and she was breathing normally.\n\nI felt ... odd.\n\nNormally I didn't like caring for anyone but myself. I put on a smile and a brave face for those at the office, but one of the reasons I liked being an officer of the law was the lack of people I had to deal with on a personal level.\n\nNot having many non FBI friends was hard ... but I've never been good with people. With the FBI I know where I stand. If I'm 'interacting' with someone it is either because we are brothers in arms, or I'm slapping handcuffs on them...\n\nBut when I looked on at Sarah Gale sleeping soundly in my home ... I felt strangely protective of her.\n\nI shook my head, and started walking up more stairs.\n\nI went past the door to my library and then up another flight.\n\nFinally I made it to my bedroom ... without even bothering to remove my clothes I flopped on my King sized bed.\n\nI awoke to the smell of bacon.\n\nFor a moment I thought I was thirteen years old again and my mother was cooking breakfast. My head filled with images of mom in her yellow apron busily frying eggs and cooking bacon, while humming a little tune.\n\nI saw my father sitting at the kitchen table, dressed for work and sipping coffee. The morning newspaper spread out before him.\n\nI opened my eyes half expecting to see the room of my childhood ... But it was not to be.\n\nI was staring at the ceiling of my adult house in New York City, and not that of the small home of my parents in Portland Maine.\n\nI closed my eyes and mentally focused on clearing my head. Thinking of my parents was too painful. I took a deep breath ... and got another whiff of breakfast.\n\nSarah Gale, British teenager and model did not strike me as an early riser, or someone who cooked breakfast.\n\nI quickly stripped out of yesterdays clothes and got in the shower. I tried to be quick about it but I found myself lingering. The hot water was welcome after two days worth of grime build up.\n\nFinally I exited the shower. I grabbed a towel amongst the steam and dried off, but left the towel in the bathroom.\n\nI walked into my bedroom in the nude ... only to find Sarah there ... with breakfast.\n\nShe looked up and saw me ... naked.\n\nHer eyes dilated immediately, and her breath caught ... I also noticed her knees go weak. After a split second of staring Sarah snapped her eyes shut.\n\n\"I'm so so so sorry Jonathan, but I heard the shower start and I thought that that would mean I could bring you some breakfast...\" she trailed off lamely.\n\nAfter I got over my initial shock I took everything in stride.\n\n\"No don't worry about it Sarah,\" I said. \"I'm just not used to having people in my house is all.\" She nodded, still with her eyes closed. I sighed. \"Here, just let me get dressed.\" I walked into my walk-in closet and threw on a pair of boxers and shorts, and a flannel white shirt. I emerged from the closet to see that Sarah hadn't moved, and still hadn't opened her eyes.\n\n\"It's okay now Sarah, I'm decent.\" She opened her eyes owlishly. Her eyes did a little up and down as she took in my attire.\n\nI might have just imagined the disappointment in her eyes.\n\n\"Thank you for making me breakfast in bed Sarah.\" I said politely.\n\nShe suddenly blinked rapidly, and refocused her eyes on me. She glanced at the tray with bacon and eggs on it. \"Oh, well ... I just ... I just thought that since you let me stay here and all with my little problem ... and how rude I was last night when I ... when I asked you... 'that' question.\" Sarah seemed like she was really struggling.\n\nI decided to help. \"It's alright Sarah, no hard feelings ... this breakfast looks great.\"\n\nSarah looked at the plate of food as if it confused her. \"I woke up on my own somehow ... right at seven. I sat in the bed fidgeting for a while ... and all I could think about was making you breakfast ... like it was my ... my duty or something. It was the most bizarre sensation.\" Sarah seemed to forget that she was talking out loud. She was in full confessional mode.\n\n\"So eventually it got so strong that I got up and did it ... and I felt wonderful the entire time I was cooking. Like I was serving...\" She trailed off.\n\nThen she suddenly glared at me. \"Listen don't read too much into this. I'm just grateful you let me stay here because of the headaches and stuff.\" I felt uncomfortable listening to her skirting the fact that the chip in her head made her desire her own slavery.\n\nI instead busied myself eating breakfast. It was the best I'd had since my mother had cooked for me all those years ago.\n\n\"This is great,\" I said.\n\nSarah suddenly lit up. \"Really? Oh, I'm so glad Master, I haven't cooked much before so I was nervous but...\" Sarah trailed off ... realizing too late that she had called me Master again.\n\n\"Sarah,\" I said. She looked up at me. \"I don't mind. I know this is hard for you. Just do whatever you have to.\" She nodded slowly.\n\n\"Thank ... thank you Jon. Don't worry about me ... making breakfast stifled the urges for the moment.\" Sarah's voice was breathy and soft. \"But do you think you could ... well, spank me?\"\n\nIn my experience people didn't 'ask' to be spanked.\n\n\"Sarah, are you serious?\" I asked.\n\nSarah sat down on the bed, and pulled her legs up to her chest. \"Please Jon, just do this for me ... I promise I won't bother you after this.\"\n\nThe horny side of my brain tried to rationalize.\n\nI had been feeling a bit like her parent yesterday. Perhaps spanking her for being so rude last night would be justifiable. Fathers spanked their daughters all the time without it becoming sexual ... it was just to maintain discipline and to keep a young emotional girl well grounded ... right?\n\nI felt like I was agreeing to my own execution ... except it was my conscience that was marching to the hangman's noose.\n\n\"Okay, I'll spank you.\"\n\n\n\n\n\n-------\n\nChapter 10\n\nSarah's mouth dropped open...\n\n\"You mean ... you're going to hit me?\" She asked timidly.\n\nInside me I felt something building ... a sort of tension ... something primeval ... like there was a raging beast inside me that knew no humanity and no society. All it knew was its will, and its desire to be obeyed.\n\n\"I said I would, and I meant it.\" My voice sounded cold to my ears ... clinical, detached, yet ruthlessly uncompromising. It was eerie to here this voice pass my lips.\n\nSarah noticed it too. She was looking at me nervously now, and she was hugging her knees even tighter. \"Umm ... Jon, listen, I didn't mean what I said ... I was just having another one of my little episodes, just forget I ever said anything okay.\"\n\nThe beast inside me disagreed.\n\nThe cold voice continued to speak through me. \"No Sarah. I said I would spank you for being so discourteous yesterday, and I mean to keep my word.\"\n\nSarah bit her bottom lip and shook her head. Her red hair fell in front of her eyes. She seemed almost scared of me. She was all suddenly conscious of the fact that in her current position I could see up the yellow sun dress she had selected for the morning. She quickly stood and straightened her dress and began to edge toward the door.\n\n\"Look Jon, this is all a great misunderstanding, I'll just leave you with your breakfast and...\"\n\nI interrupted her.\n\n\"Sarah, be silent, and come here.\" I intoned in my new found voice.\n\nSarah lowered her green eyes to the floor. A mental battle seemed to be taking place in her head. Suddenly, she demurely stepped away from the door and stood in front of me.\n\nI could smell her sex.\n\nI sat down heavily on the edge of the bed. \"Sarah, tell me you do not want me to spank you.\"\n\nI saw a spark of resilience flash in Sarah's eyes. She looked me full on in the face and practically spat, \"Don't flatter yourself ... lets be real shall we? If it weren't for this chip giving me migraines I wouldn't be anywhere near some Fed nerd like you. So just put any ideas out of your head.\"\n\nShe was a very good actress, the Jonathan of just yesterday would have been sufficiently cowed. But the animal inside me could smell her ... her own body was betraying her words.\n\n\"Take your underwear off...\" I said calmly.\n\nHer eyes popped with incredulity. \"Excuse me?\" She said ... her face darkened into a glower. She began to step away from me.\n\nI didn't move from the bed. \"Would you prefer I rip it?\" I said menacingly.\n\nSarah paused a minute ... she screwed up her eyes ... her hands started to shake.\n\nShe slowly pulled up her sundress so she could slide the panties down her perfect hips and thighs and past her delicious calves.\n\n\"Satisfied?\" She asked as she slowly stepped from the white garment.\n\nI shook my head. I wasn't in control of myself ... something else ... a different part of me I never knew existed was in control ... and it liked control.\n\n\"No I'm not,\" I said. \"I want you to pick them up, and put them to your nose.",
        "Sarah looked at me ... her eyes watering slightly. \"What kind of man are you?\"\n\nI answered curtly. \"One who gives orders ... and expects them to be obeyed.\"\n\nHer entire body was shaking with desire as she lifted her own wet panties to her face.\n\nI was enjoying her little show. \"What do you smell Sarah?\"\n\nSarah looked at me, silently begging me with her eyes ... She found no compassion in them.\n\n\"Sex,\" she whispered.\n\nI smiled slowly...\n\n\"Now tell me you still believe you don't want to be spanked...\"\n\nShe looked at me ... still defiant to the end... \"You don't know me,\" she simmered, \"You can't know what I 'believe'.\"\n\nI laughed... \"Now ask me how much I care about what you believe right now.\"\n\nShe tried to escape, but I grabbed her wrist. I effortlessly swung her up over my lap. She screamed at me to let her go, but I made easy work of her wiggling. I positioned her crotch over mine.\n\n\"Prepare yourself,\" I cautioned.\n\nSarah was straining herself to keep her crotch from touching my hardness through my pants. I allowed her no such rebellion, and pushed her down with my hand. I peeled up her dress and got my first close look at her naked flesh. The dual globes of her ass were smooth and pale, and simply ached for punishment.\n\n\"You're a demon,\" she screeched.\n\nI ignored her caterwauling.\n\nInstead, I was able to find a sort of inner peace. I laid my hand down, feeling her soft supple skin. I rubbed her slightly, enjoying my new found tranquility. The sensation felt like the eye of a great storm ... the silence that comes before a great hurricane ... a peace before the struggle ... and the inevitable surrender. I slowly lifted my hand, and delivered a single blow.\n\nThere was an audible 'crack.' My blow landed high on her right ass cheek.\n\nSarah cried out.\n\nMy heart began to race.\n\nI hit her again, this time on the other cheek. It left a bright warm red mark ... in the shape of my hand. Sarah was shaking ... her entire body was quivering.\n\nFive blows later, she began to groan in time with the swats. She began to lift her ass to meet my hand.\n\nI could smell fresh lubrication in the air. She was turned on ... she could deny it no longer. No one could mistake the beautiful pout of her pussy lips swelling in reaction to my punishing hand, the crevice between them glistening and seeping with sexual nectar.\n\nI hit her one last time, harder than my previous blows ... however, instead of immediately removing my hand, I ground it into her crotch ... rubbing her inflamed ass and her sopping pussy.\n\nSarah came on my hand.\n\nSarah wailed and writhed on my lap ... but I used my hands to keep her pinned and contained. She was mine ... and she went nowhere without my permission.\n\nShe started to cry over my lap.\n\nThe beast inside me paused.\n\nHer tears became more and more pronounced ... and the beast grew more uncomfortable ... slowly I felt it withdraw from my consciousness, back to whatever dark place it inhabited in my mind before it reared its ugly head.\n\nI suddenly felt disgusted with myself ... I threw the sexually used teenager onto the sheets and scrambled away from the bed.\n\nI put my head against the wall, and slammed on it with my fist. I was worse than scum ... I practically assaulted her ... I should report myself to the local station and be put away ... it would be the least I deserve. Despair seemed to close in ... my own self hatred felt magnified.\n\nA small voice from behind me freed me from my spiral of introspection... \"Thank you.\"\n\nI turned and looked at Sarah. Her cheeks were streaked with tears ... but she was looking at me with clear eyes for the first time. Her brow was free of any mental turmoil ... and her mouth was turned up in a slight smile.\n\nI was confused. \"But you were crying...?\"\n\nShe nodded. \"After ... I ... um ... peaked, I felt confused. I was confused for enjoying my own domination. I asked myself if being treated like that was all I was worth ... and if it made me happy...\" Her smile suddenly broke out into a huge grin. \"And I've never felt happier in all of my life ... then when your strong hands held me ... possessed me ... and made me serve your will. I never felt so complete ... or so filled with joy ... I need that in my life, like I need air to breath.\"\n\nI turned back to the wall. \"That is only the chip talking ... soon you're going to snap out of it, and shout at me for letting the beast out ... for being so cruel.\"\n\nI felt Sarah's arms encircle my waist from behind. \"No Master. When I was under your hand something broke inside of me. A barrier in my mind that couldn't accept what the chip had turned me into was torn asunder. That was the last vestiges of my old self ... and my old preconceptions. This chip isn't going anywhere; I'm stuck with it in my head for as long as I live.\"\n\nShe paused.\n\nShe put her cheek against my back and rubbed against me.\n\n\"The new me is a slave. Would I have been a slave if I had not gotten this chip? Probably not. But the new me enjoys being a slave ... or rather ... being your slave.\"\n\nSarah dropped onto her knees, and was now hugging my legs from behind. \"So I'll ask you again Master of my heart and commander of my soul. Will you allow me to submit to you ... will you claim me?\"\n\nI heard the echo of her voice the previous day resound in my head. It seemed like a lifetime ago ... a different conversation, between two very different people.\n\nI turned around. I looked down upon her bright forest green eyes staring longingly up at me. Her dress was rumpled from the spanking and dried tears still clung to her face ... but all I could see was pure feminine beauty, pliant, soft, and yielding. Her very expression screamed submission.\n\nI slowly reached down and cupped her all too beautiful face.\n\n\"It won't be as easy as that,\" I said.\n\n\"We'll figure it out as we go,\" she said softly. Her eyes never left mine.\n\n\"I just spanked you,\" I whined.\n\n\"I enjoyed it,\" she countered.\n\n\"We'll have to make rules to figure this relationship out,\" I insisted.\n\n\"I'll obey any command,\" she replied\n\nEmotion caught in my throat. \"We barely know each other...\" I rasped.\n\n\"I can't live without you,\" she whispered.\n\n\n\n\n\n-------\n\nChapter 11\n\nI was pacing the floor of my bedroom.\n\nThoughts were rushing around my head at a mile a minute. This situation was out of control. I was out of control ... we need boundaries ... maybe if we couldn't ignore it ... we could come up with something to deal with it.\n\nSarah was on the floor kneeling calmly with her hands in her lap. She had a small smile on her face and she followed me with her eyes as I wore down the carpet.\n\nI finally threw up my hands.\n\n\"I'm no good at this,\" I said.\n\nSarah simply looked warmly at me ... she seemed very content with her little patch of floor. Her happiness was driving me crazy.\n\nI glared at her. \"You know, you could help me come up with some rules ... rules that can satisfy the chip but keep things calm and under control.\"\n\nSarah's smile dropped a few notches. \"But Master, I don't want to do this 'just' enough to satisfy my chip. Why can't we just have no rules at all? Then you can do whatever you like with me ... and that would make me happy.\"\n\nI sighed heavily. \"Look chip or no chip why are you being so submissive?\"\n\nSarah cocked her head to the side and fixed me with her forest green eyes. \"Because that is what I want ... to be your submissive little pet.\"\n\nI shook my head. \"Fine. Be that as it may, we still need rules so that we can function and communicate with each other. I've noticed you've started to call me 'Master'. That is exactly the kind of stuff we need to be making rules for. What if we were around town and you called me Master?\"\n\nSarah rubbed her legs together... \"This is New York ... stranger things happen.\"\n\nThis was not going as planned. \"That is not the point, it draws attention ... people would know that you are ... that you are ... what you are.\"\n\nSarah rubbed her legs together again, this time faster. \"I know ... the idea is getting me all worked up ... public acknowledgement that I'm nothing more than your servant is making me drip.\"\n\nI already figured that out ... the smell was reaching me on the other side of the room ... and it was making it hard to think.\n\nI recently made the self discovery that I have a side that gets off on control ... and the sight of her kneeling at my feet was not helping.\n\nI finally decided to give ground. \"Look, Sarah. I'm the kind of guy that likes rules ... so help me out on this one ... I'm a Nerdy Fed like you said remember?\"\n\nA look of pure panic crossed Sarah's face.\n\nShe planted her nose into the carpet, like she was bowing to me ... as if I were her king.\n\n\"Master, I'm so sorry for calling you that ... there is no excuse ... please, please forgive me...\"\n\nI reached down and picked Sarah up off the floor. I cradled her in my arms. I sat down on the bed with her in my lap for the second time this morning.\n\n\"Sarah, don't even worry about that now ... it is in the past, forgotten and forgiven. But if you really want to make it up to me, you could help me think of some rules for our new ... um ... relationship.\"\n\nShe snuggled into my shoulder, and giggled. \"You're my Master, I'm your slave. That can be rule one.\"\n\nI rolled my eyes. \"Yes, I think we've got that part down. But I'm talking about rules about how to cope with 'Rule One' in everyday life.\"\n\nShe crossed her arms ... making her breasts press against her sundress. \"Like what?\"\n\nI thought for a second. \"Like when you are to call me Master, and when Jonathan is more appropriate ... um ... and stuff like that. This will help us satisfy the chip, and keep you from totally becoming a different person.\"\n\nShe had a puzzled look on her face. \"Become a different person?\"\n\nI nodded. \"Yes! Do you realize how different you've been acting since I spanked you and we started playing this Master and slave game. You were a total brat when you got here ... now you're ... now you're ... a completely different person ... I don't want you to lose yourself to the desires the chip gives you ... because that would just be letting UniCORP win.\"\n\nSarah sighed ... and seemed to suddenly be taking things a bit more seriously.\n\n\"Okay. Rule one. You are the Master and I am the slave.\"\n\nI nodded. \"Rule two, you are only to call me 'Master' when we are alone in my house. Alright?\"\n\nSarah made a face, \"Fine. Um ... how about ... I am required to serve you at all times?\"\n\nI raised an eyebrow. \"Sarah those aren't the kind of rules we need to be worrying about ... we need to think of safety rules ... like how about rule three should be, 'all play stops when you say a safe word.'\"\n\nSarah shook her head violently. \"Maybe in a Dominant and Submissive sort of relationship I would agree to having a safe word. But I'm not a sub, I'm your slave ... I will take whatever you can give me ... no abuse is too much.\"\n\nHow did she know the difference? Was there a difference? \"Um, Sarah, are you sure you know what you're talking about?\" I asked Sarah nodded. \"Yup, I don't know where I learned it ... or why I know it ... but I'm certain that because I'm your sex slave, and not just your submissive ... that a safe word is not needed. Nor do I want one was.\n\nI was flabbergasted. \"Sarah, that is far too much power to give me ... that could be dangerous for you. Not to mention publically frowned upon.\"\n\nSarah smiled warmly at me. \"No, I need to know this is real ... that I can't stop it by just saying a word.\"\n\nI was at a loss for words.\n\nSarah spoke again. \"Master, may I suggest more rules...?\"\n\nI nodded unenthusiastically.\n\n\"Rule Three, is that I must attend to your every sexual need without question. I must also wake you up every morning with a blowjob.\"\n\nI tried to say something ... but my willful slave was too busy making rules.\n\n\"Rule Four, is that I must always have my pussy readily available for access, as well as my breasts. I never want things to slow down again simply because you have to remove my underwear.\n\nI once again tried to speak.\n\n\"Rule Five, is that I must remain as beautiful as possible for you, and must keep my pussy bare and legs shaved.\"\n\nThis was getting out of hand.\n\n\"Rule Six, is...\"\n\n\"SLAVE, SILENCE.\" I bellowed.\n\nSarah's mouth froze midsentence ... she complied ... it was complete and instantaneous obedience ... almost like she really didn't have a choice but to obey.\n\n\"Slave, I will think of the remaining rules and inform you of them as they take shape. However, I will hold you to all the rules you have named.\"\n\nSarah nodded ... being very careful to not make a sound.\n\nThe smell of sex rose in the air. Shouting seemed to arouse my slave.\n\nI set her down. She kneeled immediately.\n\n\"Slave, don't you think it is a bit presumptuous to assume all those rules when we have not even had proper sex yet?\"\n\nSarah's mouth opened slightly ... then closed quickly. She settled for a single nod.\n\nI smiled. \"My thoughts precisely my pet.\" I was really getting into this Master thing. \"In fact, as punishment ... I shall not make use of you sexually. Instead, I am going to send you down stairs to make a pot of coffee.\"\n\nA look of outrage passed over Sarah's face. Ah so my bratty teenager was still in there.\n\n\"Do you have a problem slave?' Her face turned red ... but she shook her head.\n\n\"Good,\" I said. \"I will be in my study downstairs waiting for you.\"\n\nShe nodded. She stood to go downstairs.\n\n\"Sarah,\" I said. \"I believe you are in violation of rule four. Please take your bra off and throw it away.\"\n\nSarah's face turned even redder. But slowly she reached behind her back, and unhooked her bra. She then fished inside her dress, and pulled it out the white garment. She threw it in the trash can next to my bed.\n\n\"Good slave. See you in ten minutes.\"\n\nShe scampered out of the room. I could hear her padding lightly down the stairs in her bare feet. It aroused me to think that all she had on was a sundress.\n\nBut it would be even better if she was simply forced to be totally naked while in the house.\n\nI smiled to myself ... I think I just thought of rule six.\n\nI sighed and collapsed onto the bed. I don't think I will ever forget this morning ... the morning I acquired a slave ... and spanked a willing ... well, sort of willing girl.\n\nI chuckled to myself.\n\nI hefted myself out of bed with a groan. I was already drained and it was only 9:00 AM.\n\nI slowly made my way to a window. I needed to open one to filter out the room. I could hear the sounds of the city with the window open. A soft chilly breeze rolled in.\n\nI left the bedroom, and went down a floor to the study.\n\nMy study was my pride and joy. It was a room lined with mahogany shelves on each wall. All the shelves were filled with books that I inherited from my father ... who inherited them from his father. My library was worth quite a bit ... and it was filled with old books whose worth I couldn't even begin to imagine. The carpet was a deep burgundy and the ceiling was white. At the far side of the room from the door my dark lacquered wood desk sat. It had all my most important documents hidden inside a secret panel.\n\nThe final element was an old leather chair. It was a gift from my favorite professor at Harvard.\n\nGrant Casey was one of my inspirations, and on my graduation day he invited me to his house to have dinner with him and his wife. I skipped the traditional graduation parties and ate a quiet dinner there ... and it was one of the most profound evenings of my life.\n\n-------\n\nThat night he said something to me, while we were alone and his wife was in the kitchen taking a call.\n\nHe had said, \"Jon, out of all the students I've ever had, I've never had one that applied themselves so much. And I've never had anyone finish my course with a ninety nine average.\"\n\nI had smiled at him, and replied, \"I still think that my scenario was apt. If we simply had more time for the final I could've proved...\"\n\nProfessor Casey had raised his hand to cut me off. \"Jon that is not what I wanted to talk about.\"\n\nI had quieted ... when Professor Casey spoke ... I always listened.\n\n\"Jon, what I want to say is that you have perseverance. You adapt to any problem and any situation with ease. You have a dogged determination that is both uncanny for someone your age, and someone with your natural blessings. You're a fine boy Jonathan. That is why I am going to make you this offer.\"\n\nHe paused.\n\n\"My brother Harry, Jon, is in the FBI. The FBI is always looking for intelligent recruits ... ones that can adapt, and ones that are trustworthy and dependable.\" He had looked at me across the table with a gentle calmness. \"Jon, I've talked to Harry, and told him all about you. Suffice it to say he is interested. You've got a B.A in Law, and that would make you eligible ... if you were twenty three. Harry has pulled some strings with the admissions board ... and he wants you to appear before a private testing committee. They will administer a written and an oral test ... if you pass, they will let you join the FBI training Academy three years early.\"\n\nI was speechless ... Professor Casey ... he was my idol.\n\nHe had smiled slightly when he saw my astonished look. \"Do you want the job Jonathan?\"\n\nI nodded... \"Yes, thank you Professor, I can never tell you how much I owe you? But ... but why me? Why do you think I am worthy of such trust.\"\n\nProfessor Casey had looked very solemn at those words. His deep brown eyes gazed at me with the utmost sincerity. \"Because Jonathan ... I know you will do what you've always done ... persevere.\"\n\nProfessor Casey and his wife died in a car crash later that year...\n\n-------\n\nI suddenly lurched back to the present.\n\nI was fingering the chair, running my hand across the soft worn leather.\n\nOn the back of the chair, a metal tag was attached. On it was one word.\n\nPerseverance ... Professor Casey's motto.\n\nThat is exactly what I would do with Sarah. She needed me ... and I needed a change in my life. To long had I been stuck in a rut. My drinking was out of control ... and in the back of mind I knew I was depressed.\n\nI would persevere ... I had to, Sarah was counting on me.\n\nI looked at a picture sitting on my desk and smiled.\n\nGrant Casey was smiling back at me.\n\n\n\n\n\n-------\n\nChapter 12\n\n\n\nMemory lane is always a painful road to stroll down.\n\nI turned Professors Casey's picture down onto the desk. I didn't want to look at him ... I was a mess still ... the job he had offered me was eating away at my sanity little by little. What seemed like a blessing had become a curse.\n\nBut it wasn't his fault; he just wanted what was best for me.\n\nI heard a car alarm go off on the street below. It was quickly silenced.\n\nI opened a drawer, and fished out a piece of paper and a pen. I began to transcribe the 'rules' to the new relationship Sarah and I were embarking on.\n\nRule One: Master Creed owns Sarah the slave.\n\nRule Two: The title Master is only used when in the Master's house.\n\nRule Three: Slave must attend to every desire of the Master; the Master is to be awoken by a blowjob.\n\nRule Four: Slave is never to wear underwear, be it outside the house or not.\n\nRule Five: Slave must maintain her appearance.\n\nRule Six: Slave is to be naked at all times while in the Master's house.\n\nRule Seven: Slave is to tell no one of her relationship without express permission from Master.\n\nRule Eight: Failure to comply with the above rules will result in punishment at the discretion of the Master.\n\nI put my pen down and looked at my new and bizarre relationship rules. Suffice it to say I felt incredibly weird transcribing these barbaric tenants to paper.\n\nYet at the same time ... I felt electrified. Some of these rules were simply to keep our relationship secret and safe ... yet there was no denying that some of those rules were for no other purpose than my pleasure."
    ],
    "authorname": "Noble_Truth",
    "tags": [
        "bdsm",
        "fantasy",
        "slave",
        "police",
        "red head",
        "fbi",
        "futuristic",
        "science fiction"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/jonathan-creed"
}