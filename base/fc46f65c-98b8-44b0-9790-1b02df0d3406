{
    "title": "Transformations - Dr. De-Mona Ch. 03",
    "pages": [
        "Transformations: Dr. De-Mona Chapter 3\n\nComments welcome!\n\n--------------------------------------\n\nThough it would have been difficult to walk in the heels, Evelyn really wished she had worn them. Level 9 had tiled floors, but those were soon forgotten as they stepped through the triangular opening in the wall and into the cavern.\n\nThe floor was of rough stone and every few steps Evelyn stumbled on sharp rocks.\n\n\"I can carry you,\" Ciara whispered in the darkness.\n\n\"No, you can't,\" Evelyn scoffed.\n\n\"She can. She's immensely strong,\" Demonica said from somewhere ahead of them in the narrow passage.\n\nA coed stumbled and Demonica's hand appeared from the gloom, catching her and setting her back on her feet.\n\nThere was a red glow ahead and Evelyn gasped when the passage opened up and she found herself staring over a high cliff at molten lava far below. \"Jesus, that's not possible. This is New York, not Hawaii,\" Evelyn whispered.\n\n\"I think it's hell,\" Ciara whispered. She held Evelyn's hand tighter, as if she were afraid her love might fall over the edge.\n\nEvelyn smiled. \"It's okay. I won't fall, Ciara.\"\n\n\"Please let me take you back to Level 10. I don't like it here, Eve,\" Ciara pleaded.\n\nEvelyn started to answer, but she found Demonica standing directly in front of her.\n\n\"Go back? Now? When we're so close to the altar?\" Demonica asked.\n\n\"No, we're not turning back,\" Evelyn said. \"What altar?\"\n\n\"The altar of Satan, of course.\"\n\nCiara stared up at her. \"I thought we worshipped Morpheus.\"\n\nDemonica smirked. \"I'm afraid that's a bit hazy to me. I'm not sure Morpheus isn't Satan. I choose to worship both.\" She turned and continued along the edge of the cliff.\n\nCiara and Evelyn followed her into a chamber that overlooked the cliff. In the center of the room was a waist high altar that had been carved from the dark volcanic rock.\n\nThe coeds collapsed on the floor around it, the orgy beginning again.\n\n\"I love this setting. It's much more fitting, don't you think?\" Demonica asked.\n\n\"It's amazing. Did you build this room?\" Evelyn asked.\n\n\"No. The workers found it earlier today. It was created for us, by Morpheus, I believe.\" Demonica said. She pulled Kimiko close. \"My loyal slut. I have a gift for you.\"\n\nKimiko looked up at her with love.\n\nDemonica smiled and looked at Evelyn. \"If you want to know about White Witches, you should ask Kimiko here. She could tell you what it was like to have Sugar and another White Witch, Gwen Kincaid, tear her mind apart and rebuild it - that is after they bonded this latex to her skin permanently.\"\n\nEvelyn blanched. \"Why would they do that?!\"\n\n\"Why?\" Demonica echoed. \"Because they can, of course. She angered them. She tried to escape, and this is how they punished her. She can barely communicate.\"\n\n\"I... I don't believe that,\" Evelyn said. But, at the same time, she knew it had to be true. What else other than a White Witch could have done this to the woman?\n\nDemonica shrugged. \"But now I have powers, and I'm going to right a wrong.\" She bent Kimiko over the altar.\n\nThe girl moaned and stretched out her arms.\n\nDemonica pushed Kimiko's head forward. Then she retrieved a syringe from beside the altar.\n\nShe jammed it into the base of Kimiko's skull and injected her.\n\nKimiko wailed and Evelyn almost stumbled backward.\n\n\"Shh, pleasure is pain and pain is pleasure, my darling, remember?\" Demonica whispered as she slowly withdrew the needle.\n\nKimiko rolled onto her back and sat up on the altar.\n\n\"Relax. Focus on my eyes,\" Demonica said.\n\nKimiko's eyes were focusing and refocusing as she wobbled forward and back.\n\n\"What is your name?\" Demonica asked.\n\n\"Ki... Kimiko. I am... I am a Sub Slut, Whore Caste.\" She blinked and shook her head. Her voice was clearer and more distinct, the short, choppy sentences gone.\n\n\"Go on.\"\n\nKimiko smiled. \"I am the property of my Mistress, the Demon Goddess Demonica.\"\n\n\"Where are we?\"\n\n\"The cavern on Level 9, beneath Stallion's Adult Video.\" She leaned over and kissed Demonica's hand. \"I love you, Mistress.\"\n\n\"I love you too, pet.\"\n\nDemonica turned and walked among the tangle of coeds on the cavern floor.\n\nHands reached up, caressing her slick thigh boots, trying to pull her into the fray. \"Look at them, they already worship me.\"\n\nCiara twirled her long red hair on her finger. \"Right now, they're worshippin' anything with a cock or a pussy. They ain't thinkin' too straight.\"\n\nEvelyn saw a flash of anger in Demonica's eyes. She stepped in front of Ciara, shielding her from the gaze.\n\nDemonica's scowl softened. It turned to a smile. \"She's right to an extent. They are nothing but raw material - sexual thread that must be woven into a tapestry. The Church prefers to make them into something cheap and flimsy - no offense, Ciara.\"\n\nCiara smiled. \"None taken. I like being me. It beats who I was.\"\n\n\"No doubt,\" Demonica said. \"But I can think of better uses for some of them.\"\n\n\"Like what?\" Evelyn said.\n\nDemonica knelt beside two girls. She took their hands and pulled them to their feet. \"Come, my darlings.\" She led them to the altar and laid them on the stone.\n\nThey immediately embraced and began touching each other.\n\nDemonica went back to the group and retrieved three more girls.\n\nThe five of them began to laugh as they enjoyed one another on top of the altar.\n\n\"As you know, the Church sterilizes all their victims. They do love to spay and neuter their pets, our Church. But I've always believed that was a mistake. Take these five: healthy wombs, accommodating hips. With the right selective breeding, their offspring could be useful.\"\n\n\"Breeding? You're going to breed them?\" Evelyn asked.\n\n\"Oh, not in the way you think.\" Demonica leaned down and whispered in Kimiko's ear.\n\nThe imp laughed and walked out of the altar chamber.\n\nShe returned a moment later with a large bottle of green fluid.\n\nEvelyn recognized the depilatory that had been used on her earlier, but this bottle was much larger. She gasped as Kimiko began pouring it all over the coeds on the altar.\n\nTwo brunettes, a redhead, and two blondes were completely hairless within seconds.\n\nThey continued to lick and probe each other's bodies, completely oblivious to the fact their hair had fallen out, even their eyebrows had been removed.\n\n\"I chose them for their wide hips and healthy wombs, but also because of their similar facial features,\" Demonica said as Kimiko then doused the women in a clear liquid.\n\nDemonica stood in front of the altar with her fists on her hips. \"Now, girls, pay attention.\"\n\nThe women got in line, kneeling on the altar side by side. They looked up into Demonica's burning eyes and smiled as one.\n\n\"What is your name?\" Demonica asked.\n\nThey all said their names at the same time.\n\nDemonica shook her head and her eyes seemed to blaze brighter.\n\nThe women were silent.\n\n\"Again.\"\n\nThey all spoke at the same time. \"Chorus.\"\n\nEvelyn stepped toward the altar.\n\nCiara tried to pull her back, but Evelyn pulled away.\n\n\"What are you doing to them?\" Evelyn whispered.\n\n\"They were individuals. It was a waste. They only need one mind, one personality. I've linked them. They are the Chorus. My Chorus. My personal little breeding farm.\"\n\nEvelyn looked from one of the women to the next - even their breathing was becoming synchronized.\n\nTheir expressions were blank as they arrayed themselves on the altar on their backs, legs spread apart. Their ankles touched the ankles of the women to either side of them in the circle.\n\nThe formed a pentagram, their pussies pointing toward the center.\n\nDemonica leaned over the nearest, kissing her, kneading the woman's breasts with her clawed hands.\n\nThe lips of the other members of the Chorus opened as their eyes closed, as if they were each being kissed themselves. Their nipples grew hard and erect.\n\nKimiko climbed nimbly onto the altar, kneeling between the thighs of each girl in turn. First she injected syringes deep into the turgid nipples, and then she injected their abdomens. Finally, a series of injections into their vaginas.\n\nSoon they were all moaning as one as Kimiko finished her work and dropped from the altar.\n\nTheir bodies transformed quickly.\n\nThe breasts grew huge, far larger than Demonica's or even Sugar's.\n\nBut it was their pussies that transformed the most.\n\nThey were open wide and dripping with lubrication, the outer and inner lips swollen and gaping.\n\nThe clits grew and thickened, growing erect and hanging over the entrance to their vaginal canals like pink gargoyles.\n\n\"My God,\" Evelyn whispered.\n\n\"I am the only god here,\" Demonica chuckled. She drew Evelyn into her arms and kissed her.\n\nEvelyn melted in her embrace.\n\nHours ago, she had been alone, and now she was falling in love with a demoness. She had sex with her professor and complete strangers. She had fallen in love with a girl she did not know and been courted by a White Witch.\n\nShe had completely embraced bisexuality and been taken in every hole by men and women alike.\n\nShe felt herself lifted off the ground by Demonica's strong arms, the taste of her lips almost too sweet.\n\nWhat would Demonica do to her? Would she find herself the sixth point of the star on the altar, hairless and anonymous? All traces of her mind erased?\n\nShe felt like a doll in Demonica's arms.\n\nI will not add you to my Chorus, Evelyn. You don't need to be afraid of that.  Some personalities are too strong to be tossed aside. I have a plan for you. I will make you strong - stronger than a White Witch ever dreamed. Worship me, Evelyn, and I will make you a goddess. The words echoed in her mind, shouted telepathically from Demonica as she kissed her.\n\n***\n\nSugar lay on her back on the mattress she shared with Ray in the dilapidated trailer.\n\nInge Sorenson, her body now transformed into a tall, leggy blonde with gravity defying breasts snuggled between them.\n\nSugar and Ray had tried to take out their night's frustrations through sex with the freshly made Stripper Whore, but not even 'Swingin' Inge' as she had named herself could ease Sugar's troubled mind.\n\nThough, the former Astronomy professor did give it the old college try.\n\nSugar traced a long red nail over Inge's muscular backside.\n\nRay turned and looked into her eyes in the dark bedroom. \"She will be fine.\"\n\n\"Are you reading minds now too?\" Sugar whispered.\n\n\"I can always read your mind, Sugar. You fell in love with Evelyn. One thing I've learned over the past few months: you wear your heart on your sleeve, honey.\"\n\nSugar nodded.\n\n\"I wish I could be who you needed,\" Ray said. He reached out and moved a stray lock of red hair away from Sugar's eyes.\n\n\"Oh, Ray, don't say that. I love you. I will always love you.\" They were joined as Whoremaster and Whore, bound by Ray's cum for all eternity.\n\n\"Aww, I ain't jealous, Sugar. I just know there's something missing from you. You're like a jigsaw puzzle with a piece missing. I just want you to be happy.\"\n\n\"I can't feel her, Ray,\" Sugar whispered.\n\n\"Evelyn?\"\n\nSugar nodded. \"It's like she's being shielded from my mind.\"\n\n\"Demonica's doing?\"\n\nSugar's eyes flashed with anger. \"I could kill her, Ray.\"\n\n\"Hey, don't say that! You're the one who reminded me she belongs to us earlier today, remember?\"\n\nSugar shook her head. \"That Demonica is gone, Ray. Whatever that... thing in the subbasement is? It's not Demonica. It's pure evil...\"\n\n\"Sugar, we turn coeds into sex toys. She's no more evil than us,\" Ray said.\n\n\"No, Ray, there's something else here. Something... older. We're doing this to save the world, she's doing this for... I don't know, fun? She was playing with us in the lab like a cat plays with a mouse. Didn't you feel it?\"\n\n\"Yeah, yeah, I felt it.\" He rolled onto his back and Swingin' Inge stirred.\n\nThe Stripper Whore stood up and stretched.\n\nDespite Sugar's anxiety, the sight of over six feet of stripper rising toward the trailer ceiling was captivating.\n\nShe smiled down at them, peering over her big K cup breasts. Then she knelt gracefully between them.\n\nInge's right hand closed around as much of Ray's cock as she could manage with her long fingers, while three fingers of her other hand slid into Sugar's pussy. \"You two talk too much,\" Inge purred, her voice throaty and sultry, the result of another mod she had requested.\n\nSugar smiled and nodded, letting the whore try to relieve her tension once again before the sun came up.\n\n***\n\nEvelyn knelt in front of Demonica, her ruby red dress discarded.\n\nShe could feel Ciara's eyes boring into the back of her head - the air was thick with the Cheerleader Whore's worry.\n\nDemonica caressed Evelyn's hair. \"Give yourself to me, Evelyn. I will make you perfect.\"\n\n\"She's already perfect,\" Ciara said defiantly behind her.\n\n\"Are you, Evelyn? Would you change anything? That poor, simple creature is blinded by her love for you, but you know what you want, don't you?\"\n\nEvelyn nodded. She knew. \"I want to be like you,\" she whispered.\n\nDemonica chuckled. \"There is only one me. But I can make you a succubus with powers beyond anything you can imagine.\"\n\n\"Don't do it, Eve. She doesn't want what's best for you...\" Ciara said.\n\nDemonica tilted Evelyn's face up. \"She's right. I want what's best for me. I need a partner, a lover to help me do the Master's work. That can be you, Evelyn. Give me your soul, and I will make you mine forever.\"\n\nKimiko glared at Evelyn, her face a mask of jealousy and contempt.\n\n\"Don't mind her. She will learn her place,\" Demonica said, turning her gaze on Kimiko.\n\nThe gimp girl cowered.\n\nDemonica smiled toward Ciara. \"They both will. What will you have me do to sweet little Ciara?\"\n\n\"Nothing!\" Evelyn said, feeling suddenly protective. She lusted for Demonica, but her bond to Ciara was just as strong. \"Please, Mistress. I love her the way she is.\"\n\nDemonica chuckled. \"A sweet little cheerleader in love with a demoness? Very well, she can stay the way she is until you tire of her. Then I will show you how much fun it can be to twist her into something more fitting.\" She leaned down and kissed the top of Evelyn's head. \"But, for now? She must kneel and pledge herself to me as well.\"\n\nEvelyn turned and looked at Ciara. \"Come here, Ciara.\"\n\nCiara frowned. \"I don't want to.\"\n\nEvelyn held out her hand. \"You said you would go where I go. This is where I am going. I will not be a White Witch. If you won't follow, I need you to leave.\"\n\nCiara began to sob. \"I can't! I love you, Evelyn. Don't do this!\"\n\nEvelyn shook her head. \"Come here and worship our goddess with me.\"\n\nCiara hung her head and knelt by Evelyn.\n\nEvelyn took her hand. \"If you aren't sure, it's okay. Just leave me here.\"\n\n\"I can't. I'm your Inky Dinky Doo and you're my Giggle Mesh,\" Ciara whispered as her tears fell.\n\n\"What?\" Evelyn asked. She wiped the tears away.\n\n\"That's what Adam said. He told me to tell you that thing I said to you earlier, that thing I can't remember any more...\"\n\n\"The quote from Dante?\" Evelyn asked.\n\nCiara shrugged. \"I don't know. He told me to say it.\"\n\n\"Darling, who's Adam?\" Evelyn asked.\n\nThe Chorus spoke as one. \"The one who is to be. He brings balance by bending time. He is the Omega.\"\n\nDemonica spun around and stared down at the women on the altar. \"What does that mean? How do you know this?\" Her voice had an edge of panic.\n\n\"We are the Chorus. We are oracles. You created us, Demoness Demonica. The hell storm is coming.\"\n\n***\n\nJust before daylight, Sugar pulled herself out of Inge and Ray's embrace. The workers were already busy moving back and forth with their loads of dirt from the unfinished subterranean levels.\n\nThey shrank back from her as she approached, unwilling to meet her gaze.\n\nWas she evil? Was the respect the Worker Caste showed for her station within the new world order born of her position? Or were they simply terrified that she would harm them even more severely than they had already been harmed?\n\nOn impulse, she reached out and touched one of the giants' hands. He paused, looking down at her with a bewildered expression. He was clearly not used to being touched, not used to kindness.\n\nShe smiled at him, and he simply stared back.\n\nSugar looked away then and entered the elevator.\n\nThe giant lumbered away down the corridor toward the loading dock without looking back.\n\nThe elevator opened on Level 10 and she walked to the lab.\n\nShe knew there was something wrong when she opened the doors.\n\nThe Street Whores were giggling and playing - this part was normal.\n\nThe new truck driver, Ben was fucking a brunette Professional Caste on the steel floor.\n\nThere was no sign of Demonica, Kimiko, nor Evelyn.\n\nAnd there were far fewer Professional and Whore Caste in the room than there should have been.\n\nBen pulled out of the brunette and walked toward her, his new ten inch cock bobbing in front of him. \"Hey, lady! What the fuck?! You give these other assholes big dicks and all I get is ten inches?\"\n\nSugar looked around the room. \"Ron Jeremy is ten inches.\"\n\n\"Who the fuck is Ron Jeremy?\"\n\n\"Porn star. Be quiet now. Where is Evelyn?\"\n\n\"First we're going to talk about my di...\"\n\nSugar held up her finger and stopped Ben's heart - he was not completely transformed, nor would he be. Sugar could still control his mind.\n\nBen dropped to his knees.\n\n\"Be thankful you still have a dick. It isn't necessary for you to perform your job function. I could have made you sexless with a hole to piss through - most of those poor bastards building this place are like that. Giving you ten inches was a gift.\"\n\nBen's lips were turning blue, his heart completely seized in his chest. He pissed on the floor and drooled.\n\n\"Enough.\" Sugar waved her hand and he collapsed on the steel floor, gasping and wheezing, clutching his chest. He rolled into a ball.\n\n\"You... could have... killed me.\"\n\n\"I might still.\" She knelt over him. \"Now, once again, where is Evelyn?\"\n\n\"The freak show pulled out of here a few hours ago. They went up to the next level.\"\n\nSugar stood up and stepped over him. \"Question me again, and I'll make that little demonstration look like a party. You're ours now, whether that's for better or worse depends on you.\"\n\n***\n\nEvelyn and Ciara knelt side by side in front of Demonica. The demoness leaned back against the stone altar as her Chorus whispered and moaned.\n\nDemonica's confident air had returned.\n\nEvelyn still wasn't sure what the words they said actually meant, but Demonica had looked momentarily terrified.\n\nThere were chinks in the goddess's armor.\n\nAnd that only made Evelyn more drawn to her.\n\nDemonica's loin dress had two clasps that kept the sides closed.\n\nKimiko opened the clasps.\n\n\"Will you both worship me?\" Demonica asked as she ran her clawed left index finger over her full, dark lips.\n\n\"Yes,\" Evelyn answered. She loved Demonica, knew this as surely as she knew she loved Ciara.\n\nCiara looked longingly at Evelyn and then turned her eyes upward to stare at Demonica. \"I'm Whore Caste. We love everybody. So, I love you, even though you scare me. And I worship Morpheus, and Morpheus created you to be above me. So, yeah, I'll worship you. Because that's the way the world works now. But I don't like you. She can't see the cruelty in you, but I can...\"\n\nDemonica smirked. \"Careful, child.\"\n\n\"You're evil, but I'll worship you as long as Eve does. Just know this: if you hurt her? I'll kick your ass all over this cave.\"\n\nEvelyn stared at her in disbelief.\n\nHer speech would have been impressive, if not for the fact her voice sounded like Jennifer Tilly huffing helium.\n\nDemonica glared down at her.\n\nEvelyn felt her hands balling into fists, felt the muscles in the back of her legs tense to raise her explosively to her feet.",
        "Because she wouldn't let anyone hurt Ciara, goddess or not. This thought made Evelyn's blood run cold, and she shocked herself with how protective she had become.\n\nAnd, then Demonica laughed. \"Perhaps I'm wrong about this one, Evelyn. Maybe she is more than just a fuck toy.\" She looked down at Evelyn and licked her lips.\n\nThen she eased the front of her dress to the side.\n\nEvelyn almost cried out in shock.\n\nShe was inches away from the biggest penis she had ever seen.\n\n\"You... you're a man?\" Evelyn whispered.\n\n\"Golly,\" Ciara whispered, her eyes wide.\n\n\"No. I was a woman. Now I am more than that.\"\n\nThe cock was easily a foot long flaccid, hanging between her toned thighs.\n\nThe shape was no more normal than the size. The head was almost disk shaped. The piss slit was big enough to accommodate Evelyn's index finger.\n\nA steady drip of precum fell from the slit.\n\nEvelyn reached out and caressed the head, it was as wide as her palm.\n\nHer fingers were quickly coated with Demonica's lube and she licked them on impulse.\n\nHer body became warm, almost as if she had a fever. Her pussy was lubricating.\n\nBeside her, Ciara shrugged out of her cheerleader uniform. \"She can't take one that big, but I can, Mistress.\" She leaned forward and licked Demonica's thickening shaft.\n\nDemonica smiled. \"We'll see about that. Kimiko, use the sterilizer on Evelyn.\"\n\nEvelyn could barely hear her words. She leaned forward and put her tongue inside Demonica's piss slit. She jacked the cock with her small right hand, and the precum squirted into her mouth.\n\nShe felt hands on her back, forcing her onto all fours.\n\nDemonica knelt down, making it easier for Evelyn to continue sucking.\n\nEvelyn felt something probing at her pussy.\n\nCiara kissed her ear. \"It's okay. It doesn't hurt. It's just scary when it snaps, and then you feel really full.\"\n\nThe sterilizer slid deep inside her.\n\nIt reached the limit her body could take.\n\nSNAP!\n\nEvelyn cried out as the sterilizer surged forward, her womb opening for the invader that claimed it.\n\nIt felt like the sterilizer was trying to push into her throat!\n\nThen it was pulled out of her.\n\nShe cried out at the empty feeling.\n\nEvelyn consoled herself by redoubling her efforts on Demonica's huge cock head. She strained to get it into her mouth.\n\nDemonica laughed. \"You'll need surgery to accept that, I'm afraid.\"\n\nCiara's mouth was close to hers, tonguing the underside of Demonica's shaft.\n\nThen Ciara pushed her tongue into Evelyn's mouth. They kissed, sharing the tip of Demonica's cock as they did.\n\nEvelyn smiled at Ciara as the redhead pulled away.\n\nCiara wrapped both her small hands around Demonica's cock.\n\nIt was huge and hard - it had to be over sixteen inches and it was thicker than Ciara's wrist.\n\nCiara stopped jacking and stared past Evelyn. \"What transformation drugs are those? I don't recognize them.\"\n\n\"These are to prepare her body for the procedures to follow,\" Demonica said.\n\nEvelyn yelped as two needles pushed into her shoulder blades.\n\n\"Don't hurt her,\" Ciara whimpered.\n\n\"They're... not,\" Evelyn moaned.\n\nDemonica's claws curled in Ciara's red hair, pulling her lower.\n\nCiara licked and sucked the big balls.\n\nDemonica pushed her even lower and Evelyn heard Ciara gasp.\n\nEvelyn paused tonguing the head. \"What is it?\"\n\n\"A pussy! She has a pussy under her balls!\" Ciara's voice was full of wonder. The eroticism of making love to Demonica was overcoming her trepidation.\n\nEvelyn kissed her way down the shaft and balls.\n\nThe taste was unmistakable: girl lube. Her tongue found the tender folds of Demonica's pussy just behind her thick, semen heavy balls.\n\n\"I'm technically a Futanari. I have both male and female parts.\"\n\nEvelyn cried out as a needle slid into her left buttock. \"Is... that what you're doing to me? Making me into a Futanari?\"\n\nDemonica laughed low and pulled the two girls closer to her wet pussy. \"Do you want a nice, thick cock? Would that make you happy? To fuck me? Ciara?\"\n\n\"I... I want whatever... you want,\" Evelyn whispered as her tongue joined Ciara's deep within the demoness.\n\n\"That's the correct answer,\" Demonica giggled. \"Give yourself to me, Evelyn. Let me decide - I promise you will be pleased.\"\n\nEvelyn felt like she could die right here and now and be satisfied. She desperately wanted to belong to Demonica, body and soul. \"Mmm, yes... Mistress,\" Evelyn whispered.\n\n\"My lovely girl,\" Demonica sighed.\n\nEvelyn concentrated on servicing her Mistress even as the needles pierced her labia, her clit, even her asshole.\n\n***\n\nSugar was not surprised to find the lead Church agent and one of his men standing guard outside the cavern entrance on Level 9. She glared at them as she walked toward the opening.\n\nThe lead agent stepped forward. \"You can't, Mistress. I'm sorry.\"\n\n\"Stand aside.\"\n\n\"I can't do that, Mistress. I am under orders from Sister herself.\" He looked at the floor.\n\n\"I will hurt you if you don't stand aside, Agent,\" Sugar said. She wasn't sure she could actually take the agent hand to hand - she'd never had occasion to take one on.\n\n\"I know you will, Mistress. But I cannot let you pass.\" He nodded over his shoulder.\n\nThe agent with him drew his nine millimeter and pointed it at the floor.\n\nNeither man could look her in the eye - they didn't want to stop her, but they had no choice.\n\nThe Church was in control here. They were merely pawns.\n\n\"Would you shoot me?\" Sugar asked.\n\nThe lead agent shook his head. \"We wouldn't want to, Mistress. So, please don't make us...\"\n\nSugar sighed. \"Agent, the Cheerleader Whore, Ciara, is Whore Caste. Evelyn Morris is going to be Whore Caste. She took Whore Caste and Professional Caste acquisitions against the will of the Church. They are all in danger...\"\n\n\"You don't know that,\" the lead agent said.\n\n\"Of course I know that. So do you. Whatever Demonica is now? She is absolutely not Whore Caste. I'm sworn to protect my Caste.\"\n\n\"I can't let you pass. I'm sorry.\"\n\nThe look on his face said he would not shoot her. He would die before he let her pass, but he would not shoot her.\n\nThe other agent, however? He would shoot her.\n\nShe looked at the opening in the wall with its soft red glow from the Stygian lake of fire nearby.\n\n\"Mistress? Please?\" He begged.\n\nSugar sighed and turned away.\n\n***\n\nThe Chorus had climbed down from the altar, their bodies naked and dripping on the stone floor. They knelt around the outside of the altar facing it.\n\nDemonica had picked up Evelyn and placed her gently on her stomach on the altar.\n\nCiara had followed them onto the stone, watching Evelyn intently.\n\nThe shots had made Evelyn lethargic, her movements were slow and languid.\n\nCiara was terrified. The only thing that kept her from grabbing Evelyn and running was the look on Demonica's face as she maneuvered Evelyn onto the altar.\n\nIt wasn't love exactly - Ciara was convinced that Demonica and Kimiko were not capable of love.\n\nBut the look was at least one of lust. It was a look of desire. She wanted Evelyn, and in that way she hoped that Evelyn was safe.\n\nDemonica pulled Evelyn onto her hands and knees, her thighs spread wide.\n\nShe ran her hand down the small of Evelyn's back and trailed it down the cleft of her buttocks.\n\nEvelyn moaned as Demonica pushed one then two of her fingers deep inside Evelyn's pussy.\n\nEvelyn looked flushed to Ciara - her skin was taking on a subtle redness that Ciara found disturbing.\n\nHer breasts seemed to be drawing tighter against her body.\n\nSweat glistened on Evelyn's body, dripping down her sides and onto the stone.\n\n\"She has a fever,\" Demonica said. \"Come and feel.\"\n\nCiara reached out and touched Evelyn's side. She was hot to the touch.\n\nDemonica chuckled. \"She's burning for me, don't you think?\"\n\nCiara nodded as she continued to stroke Evelyn's side. Her love was quickly shedding weight, her thick curves becoming athletic and toned.\n\nCiara could feel her ribs, feel them expand and contract with each deep breath.\n\nDemonica stroked her big cock.\n\nCiara bit her lip - she knew the sterilizer had worked its magic on Evelyn, but the massive dick looked like it would rip her in two.\n\n\"It won't,\" Demonica breathed. \"But no one will ever be able to satisfy her again. Once I fuck her, she will belong to me. You'll be nothing but her occasional plaything.\" She smiled, gloating.\n\nCiara held her chin high. \"We'll see.\"\n\nDemonica pressed the disk shaped head of her enormous cock against Evelyn's pussy and shoved forward, impaling her.\n\n\"Oh, Eve,\" Ciara moaned.\n\nEvelyn arched her back and cried out in ecstasy, her pussy convulsing as she squirted past Demonica's cock and wet the stone altar.\n\nDemonica laughed and sneered at Ciara. \"Service us, whore. Show us what you're good for.\"\n\nShe spread her legs and began fucking Evelyn with abandon.\n\nEvelyn was spouting gibberish as the insanely huge Futa cock touched places deep inside her.\n\nCiara got onto her back and pulled herself under Demonica and Evelyn's thighs.\n\nShe began to lick and suck, working her way forward from Demonica's asshole, to her pussy, to her balls, to her cock, and finally to Evelyn's obscenely swollen clit. Then she would go back and start again.\n\nDemonica smiled as she fucked Evelyn hard. \"Close now. When I cum, the transformation will begin.\"\n\n\"F... Fuck me,\" Evelyn moaned.\n\nDemonica laughed and arched her back, driving the Futa cock deep inside Evelyn.\n\nCiara gasped as the underside of Demonica's cock began to throb and pulse as the cum flooded into Evelyn's depths.\n\n***\n\nEvelyn opened her eyes in Stygian darkness. She was lying on her back on what she at first thought was the stone altar, but this was a different altar, a different cave.\n\nDemonica and Ciara were gone.\n\nShe became aware of soft, moaning chanting from the floor beside her. A crowd in black robes knelt by this new altar backlit by smoldering red brasiers along the walls.\n\nSomeone had their arms around her.\n\nHer eyes slowly adjusted to the low light.\n\nA man held her. He was very tall and muscular, his hair and eyes dark.\n\n\"Are you the devil?\" Evelyn asked, instantly feeling ridiculous.\n\nHe laughed softly and held her closer. \"No... though I've often been accused of it. My name is Morpheus.\" He nuzzled her hair. \"And you are not supposed to be here.\"\n\n\"I'm not?\" Her body was sore, and she felt lightheaded.\n\n\"No. This was not the plan for you. I would like to think this was all your freewill, but I think there was some meddling in the events I set in motion.\"\n\n\"Who meddled?\" It felt nice being in his arms. She felt calm and warm.\n\nLoved.\n\nHis hand trailed down her abdomen... was her tummy smaller? Her muscles felt hard.\n\n\"Who meddled? Now, that is a question.\" He didn't seem disturbed in the slightest. Amused, perhaps, but not upset. \"Another god, I think. Someone who can bend time. And he bent it for you.\" He held his hand palm up. \"This was supposed to be you.\"\n\nA three dimensional image of a beautiful blonde appeared above his palm. The image smiled at her, the eyes blinked as if she was looking at a three dimensional video.\n\nIt took a moment for Evelyn to recognize some of her own features: the shape of the nose, the cherubic cheeks. But this woman's hair was long and platinum blonde. She was dressed from head to toe in a long, white latex dress. A pentagram amulet hung from a white choker around the image's neck and nestled between huge, firm breasts.\n\n\"White Witch,\" Evelyn whispered.\n\n\"Yes. Evelyn Kravezit...\"\n\nEvelyn almost laughed. \"Really? Kravezit?\"\n\n\"Don't laugh. I was naming you after Matt Helm's secretary: Lovey Kravezit.\"\n\n\"Who's Matt Helm?\"\n\nMorpheus looked at her and shook his head. \"Deano? All the movies?\" He sighed. \"I'm so old now, I lose track of what year it is. That's the downside of immortality. Decades pass like years, a lifetime ago feels like yesterday. Do you understand?\"\n\n\"Yes, I think so.\"\n\nHe dropped his hand back to her abdomen and the image of the Nordic goddess she was to be vanished.\n\nShe sighed as he reached lower, his fingers playing over her clit.\n\nHis hand hesitated. \"Do you want me to stop? You aren't being manipulated, Evelyn. I won't force anything on you.\"\n\n\"No,\" she said and smiled. \"I like it. This. All of this. I can't explain it, but... I feel free. Liberated.\"\n\nHe smiled and nodded. \"That's what I wanted, you know? Peace and love. Just sensual pleasure for everyone, forever.\" He looked far away. \"It got ruined, of course. Corrupted I suppose. In the end, it's my fault.\"\n\n\"Sugar says we're saving the world?\"\n\n\"Yes, I promise you, we are. That's the one thing I've never lost sight of. I will lie about other things, but never that.\" He kissed her cheek as he made gentle circles with his finger around her clit. \"You love her, don't you?\"\n\n\"Ciara? I... don't know. I just met her...\"\n\n\"No, not Ciara. Of course you love her. You will always love her. Street Whores, Cheerleader Whores, all of Whore Caste? They're not just lovable - they are love. My second most perfect creation...\"\n\n\"Third,\" a woman's voice said from the kneeling crowd around the altar.\n\n\"Don't be jealous, Lilith,\" Morpheus laughed.\n\nEvelyn strained to see the woman's face, but the room was too dark.\n\nMorpheus kissed Evelyn and eased her back. \"I know you love Ciara, and she loves you. No, I mean Demonica.\"\n\nEvelyn felt a thrill go through her at the mention of her name.\n\n\"For never was a story of more woe than this,\" Morpheus whispered.\n\n\"What?\" Evelyn whispered.\n\nHe smiled. \"Just a line of poetry I used to thrill my lovers with when I took them to my studio to show them my etchings. God, that was so long ago.\" He kissed her again as his fingers worked their magic. \"You are an enigma, Eve. Cherubic smile of an angel but the body of a devil. A good heart but a streak of evil.\"\n\n\"What are you talking about?\" The room was spinning.\n\n\"You are not what you were meant to be. I planned all of this down to the molecular level, but this... other god? He's playing the game backwards, changing the past as I try to manipulate the future. It's chaotic. Exhilarating.\" He smiled at her as his fingers finally penetrated her. \"So you, Eve Helstrom, are an enigma to me and I find that tantalizing. Yes, I approve of his changes.\"\n\nEvelyn moaned as her orgasm built inside her and gripped her body, sending her over the edge. \"Not... Eve Helstrom. Morris. Evelyn Morris.\"\n\nHe laughed and stroked her inner depths, feeling her muscles contract around his digits. \"No, Evelyn Morris was a cocoon. And two beings are going to emerge from it. Eve Helstrom, and someone else.\"\n\n\"Who?\" Evelyn moaned.\n\nHe smiled and kissed her. \"Evilyn Hellstorm,\" he whispered.\n\n***\n\nEvelyn awoke to Ciara's screams.\n\nThe rubber clad cheerleader had slid off the altar and was now cowering at its base.\n\n\"What's wrong?\" Evelyn asked. Her head felt like it was packed with cotton.\n\nShe sat up. For a moment, the room seemed bright as the sun, but then it grew dark as it had been before she had passed out.\n\nDemonica was grunting as she took one of the women now known only as the Chorus. The woman panted and moaned as Demonica fucked her doggy style on the stone floor.\n\n\"Fuck me!\" The woman screamed, and the rest of the Chorus echoed her words.\n\nThe rest of the Chorus lounged around them, and even in the dark, Evelyn could see their gaping, stretched pussies leaking cum onto the stone floor.\n\nDemonica had fucked them all.\n\nCiara was staring directly into Evelyn's eyes and trembling.\n\n\"Ciara, what is it?\"\n\n\"You... weren't you,\" the girl's green eyes were as big as saucers. \"I mean. You aren't you now, either. But... Oh, Eve, you really weren't you a minute ago!\"\n\n\"What are you...\" Evelyn looked down at her body.\n\nHer skin was pale, almost milky.\n\nHer breasts no longer hung down toward her navel, but now stood out proudly like two melons on her muscular chest. She stood up slowly and ran her hands up her tummy.\n\nIt was hard muscled and narrow. And, she was tall, probably six inches taller than she had been!\n\nShe reached up slowly and ran her fingers through her now short hair. \"I... this is different...\"\n\n\"It's platinum. You're really totes cute... now.\"\n\nEvelyn looked at her long, graceful fingers with their long ruby nails.\n\n\"Your eyes are blue,\" Ciara whispered. She got slowly to her feet, big chest heaving in the latex top. She reached out and gently touched Evelyn's hard abs. \"Are you still you?\"\n\nEvelyn smiled. \"Come here.\"\n\nCiara hesitated. \"You wanted to be like her. I don't want you to be like her, Eve.\"\n\nOn the floor, Demonica grunted as she drove her cock deep into the Chorus woman.\n\n\"I'm not,\" Evelyn whispered.\n\nCiara was trembling, big green eyes looking at the floor.\n\n\"I'm still your Eve,\" Evelyn said.\n\nCiara smiled and hugged her tight, burying her face in Evelyn's big breasts. \"It's just... I saw... you scared me.\"\n\n\"How?\" Evelyn soothed.\n\n\"You were...\" Ciara let go of her and stumbled back, her eyes wide.\n\n\"What?\" Evelyn asked. But she felt it. Something... changed.\n\nShe looked down at her hands. The milky white skin was gone, replaced by skin the color of fire. Her nails were longer and curved into talons. \"What's... happening?\"\n\nSomething moved on her back and she turned her head slowly to the right.\n\nA large membranous wing extended out of her back, just a few shades lighter in color than her skin. A long, onyx talon curled up from the midpoint of the huge bat wing. \"I... I have wings. I...\"\n\nCiara screamed as Evelyn raised her hands and felt the short horns extending up from just above her forehead.\n\nThe Chorus turned and looked at her, even the one being fucked, and said in unison, \"Behold the Hellstorm.\"\n\nEvelyn's eyes rolled back in her head and she fainted, falling on the floor, her wings wrapping around her.\n\n***\n\nSugar was so preoccupied worrying about what was going on with Evelyn on Level 9, she almost missed Dr. Mona Karnes stepping through the doors into Stallion's.\n\nSugar hung a red jelly dildo on the display rack and did a double take.\n\nThe pretty blonde was staring right at her.\n\nSugar smiled slowly. \"You came back?!\"\n\nRay was jolted from his porno magazine behind the counter. \"Holy shit.\"\n\nMona stared back and forth between the two of them. \"What happened to me in here yesterday?\"\n\nSugar held out her hands. \"Dr. Karnes, just relax.\"\n\n\"No! I...\" Her eyelids fluttered. \"N... No... don't.\"\n\n\"Don't be afraid, honey. I won't hurt you.\" Sugar took Mona's hands.\n\n\"I thought you put the whammy on her yesterday?\" Ray hissed from behind the register.\n\nSugar rolled her eyes. \"I did.\" She ran her fingers through Mona's golden locks. The doctor's eyes were far away. \"But, she fought through it, didn't you, cupcake?\"\n\n\"Missing... time,\" Mona moaned.\n\nSugar nodded. \"See this is the problem with brain fucking a genius - they turn things over and over in their heads. A scientist like the good doctor here? She can't deal with a blank spot in her memory. So, she came back to see what happened the first time.\"\n\n\"What are you going to do?\" Ray asked.\n\nSugar bit her lower lip. \"She masturbated thinking about me - she included her wife in the fantasy, but those little fingers were flying, weren't they?\"\n\n\"Yesss,\" Mona whispered.\n\n\"I'll bet Bobbie wouldn't mind if we played a little, would she?\"\n\nMona looked sleepily into Sugar's eyes. \"Yes... she would. I don't... cheat.\"\n\n\"Feisty, I like it!\" Sugar said. She slowly began unbuttoning Mona's blouse. \"Cute little titties. I mean, I spend most of my time with augmented girls. Ray, did you know Mona hasn't even seen a cock in real life?\"\n\n\"Sugar, Havana said hands off,\" Ray said, but Sugar could tell he was taking in Mona's curves.",
        "\"Did they? I thought they said not to transform her?\"\n\n\"Sugar...\"\n\n\"Hey, she came back of her own free will. Besides, I need a distraction.\" Mona's pink bra hooked in the front, and Sugar unclasped it, letting the cups fall free, revealing the doctor's smallish breasts with their dusky almost purple nipples. \"I'll bet these are sensitive, aren't they?\"\n\nMona nodded slowly.\n\nSugar's index fingers traced circles around the sensitive nips.\n\n\"No... Stop,\" Mona moaned, her eyes closed.\n\nSugar's right hand continued to caress Mona's breast, but her left hand moved up, fingers touching Mona's temple. \"Monogamy isn't natural,\" Sugar said.\n\nMona leaned her head forward.\n\n\"You love Butch, and that's beautiful and I want you to be together forever,\" Sugar said. And she meant that. But Sugar needed to free Mona, to expand her horizons. It was engrained in her psyche, this need to liberate, to pervert, to transform.\n\nSugar was wet, not only from the sight of the woman's breasts, but just from the prospect of creating something even more beautiful out of someone already breathtaking.\n\nLust was part of it - something selfish that needed and wanted, but there was a caring as well.\n\nShe didn't just want Mona, she wanted to help her. She wanted to make her happy.\n\n\"You and Butch are going to share so much. Look at me, Mona. You want me, don't you?\"\n\nMona stared sleepily up at her. \"Yes.\"\n\nSugar smiled. \"We're making a world where everyone is in love. It's what we were always supposed to be - lovers of one another. You're not cheating on Butch, Mona. If she was here? I would make love to you both.\"\n\n\"Really?\"\n\nSugar nodded. \"Yes.\" She leaned in close and whispered in Mona's ear. \"It would be just like your phone fantasy with Butch.\"\n\nMona blinked. \"You... read minds, don't you?\"\n\nSugar laughed. \"Yes. But don't be afraid. I only want to make you happy. I promise.\"\n\n\"I... believe you.\"\n\n\"I can look inside your deepest desires, Mona. I can see things even you can't.\"\n\nRay had left the register and was standing behind Mona. He reached around gently and undid Mona's gray slacks.\n\n\"Wha... no, not... him,\" Mona whispered as the slacks fell down her legs, leaving her standing only in her panties and flats.\n\n\"Because you're a lesbian?\" Sugar giggled.\n\n\"Don't like men.\"\n\n\"Ray's very gentle - he wasn't always. He was kind of a pervy dick before.\"\n\n\"Gee, thanks,\" Ray said.\n\nSugar shook her head. \"They do things to us. It changes us. Ray is a better man because of it. Haven't you ever been curious?\"\n\nRay's big hands rubbed up her tummy and sides.\n\n\"Curious? No,\" Mona whispered. \"Like... girls.\"\n\nSugar winked at Ray. \"You mean you never even wanted to touch a cock?\"\n\nMona turned red. \"N... No.\"\n\n\"Liar,\" Sugar said and laughed.\n\nMona whined as Ray gently pulled her pantied butt against him.\n\n\"You're lucky. Human's aren't equipped like Ray. The first cock you experience is going to be bigger than your arm.\"\n\nMona cried out. \"What? No!\"\n\n\"Mona? Trust me. Just trust me. You'll see,\" Sugar soothed. She gently turned Mona to face Ray.\n\nHe was naked, and his body bulged with muscles.\n\nShe looked like a doll in his embrace.\n\nHe smiled down at her.\n\nMona looked down slowly until she gazed in wonder at Ray's huge cock.\n\nIt was only half erect, but precum dripped slowly onto the floor from it.\n\n\"Go on,\" Sugar whispered in Mona's ear. \"If she was here, what would Butch do?\"\n\nMona was breathing hard. She reached out with both hands and grasped the thick shaft. \"Warm. It's so warm.\"\n\nSugar laughed. \"Much better than a rubber strapon, huh?\"\n\nMona nodded slowly as her hands tugged and jacked the hardening monster cock.\n\nRay ran his thick fingers through her hair. \"So pretty.\"\n\n\"Beautiful,\" Mona whispered.\n\nSugar stifled a laugh as Mona stared into the 'single eye' of Ray's python.\n\n\"Hey, don't make her bi. Leave her the way she is, Sugar,\" Ray said.\n\n\"I'm not. This is all her curiosity. She's experimenting,\" Sugar giggled. \"I'm just telling her it's okay.\"\n\nMona looked up into Ray's eyes. \"Does it feel good?\"\n\nRay smiled. \"Yeah, Doc, you're amazing.\"\n\nShe smiled and shifted her gaze back to the cock.\n\n\"Is she awake?\" Ray whispered.\n\nSugar shrugged. \"About half.\" She eased the silk panties down Mona's buttocks. \"She can't tell fantasy from reality in this state.\" She reached around and let her fingers slide down over Mona's clit.\n\nMona gasped. \"Wish... Butch was here.\"\n\nSugar kissed the back of Mona's neck. \"Me too.\"\n\n***\n\nEvelyn woke up cradled in Ciara's warm embrace. \"What happened?\"\n\n\"You fainted,\" Ciara said in her fuck bunny voice.\n\nMemory came flooding back. \"Jesus! I'm a monster!\"\n\n\"Don't be ridiculous,\" Demonica said as she arranged the Chorus back in their pentagram shape on the altar. They moaned in unison, rubbing their now identically massive breasts.\n\nTheir stomachs were swelling.\n\n\"She bred them,\" Ciara whispered. \"I think they're all pregnant.\"\n\n\"What am I, Ciara?\" Evelyn whispered. She sobbed against Ciara's neck.\n\n\"You asked her to make you like her, Eve. And I think you are something like her. She keeps calling you Evilyn Hellstorm, Princess of Hell. Whatever that means.\" She kissed the top of Evelyn's head. \"I still think you're beautiful - not just now when you are my Eve, but when you're... the other one, too.\"\n\nCiara was crying, and Evelyn kissed the tears away.\n\nSomething about the sight of Ciara crying made her feel braver. It wasn't right for Ciara to be taking care of her.\n\nShe had to take care of Ciara. Evelyn helped her to her feet.\n\nEvelyn stood up and looked down at her body. Her creamy complexion was back. \"Why do I keep changing like this?\"\n\n\"When you are unconscious, you take on the form you have now,\" Demonica said as she ran her talon across Evelyn's shoulder. \"A very pleasing shape. But this is just camouflage. You are Evilyn Hellstorm - we just see Eve Helstrom because you create the illusion with your mind. Think about what you truly look like and the illusion will fade away. Just try not to faint this time - your other form is much more beautiful.\"\n\nCiara smiled weakly up at her.\n\nEvelyn formed a picture in her mind: the sight of her crimson skin.\n\nAnd an instant later, Evilyn Hellstorm returned, her wings unfurling.\n\n\"I keep my own wings camouflaged, Evilyn. It's less distracting,\" Demonica said.\n\n\"You have wings?!\" Evelyn whispered.\n\nDemonica laughed and suddenly black, membranous bat wings unfurled from her back.\n\nCiara squeezed Evelyn's hand tight - whether it was from fear or to give Evelyn courage, she was unsure.\n\n\"Mirror,\" Demonica commanded.\n\nKimiko slunk forward with a hand mirror and held it up to Evelyn's face.\n\nHer eyebrows were more arched than before, but it was her eyes that commanded all her attention. They were baby blue with a vertical slit like a reptile.\n\nShe gasped and learned something else: her incisors were now a half inch longer than her other teeth.\n\nShe had fangs.\n\n\"You really are beautiful, Eve. Scary, but beautiful,\" Ciara said. She was trying to smile.\n\nEvelyn smiled back at her. She imagined the wings disappearing, and they folded, somehow, into her back, disappearing completely.\n\n\"I feel stronger,\" Evelyn said.\n\nDemonica shrugged as her own wings disappeared. \"You have the strength of a dozen men. You can move faster than the eye can see - and, of course, you can fly. You have the same mental powers as the White Witches. But your powers extend to the transformed - you can read their minds. Go on, try.\"\n\nEvelyn looked down at Ciara and concentrated.\n\n\"Be careful in there,\" Ciara grumbled.\n\nLove. Pure, unconditional love. And, fear, not of Evelyn or what she had become, but an almost paralyzing fear of Demonica.\n\nShe'll kill us, Eve. The thought came through loud and clear.\n\n\"No, she won't,\" Evelyn said out loud.\n\nShe felt Demonica's hand on her. On her back... but not on her back. It was...\n\nAnd, then she saw it curling around from the back of her waist. At first she thought it was some type of snake.\n\nBut the snake was attached to her own lower back.\n\nIt was long and segmented, the same color as the wings.\n\n\"Don't faint,\" Demonica laughed.\n\n\"Tail... I have a tail,\" Evelyn whispered. The end was bulbous and pulsating, almost like...\n\nAs soon as she thought it, the tail swung back behind her and then curled up between her legs.\n\nThe tip bent down, and it positioned itself against her clit.\n\nThe end of the tail was a cock.\n\nEvelyn gasped.\n\n\"I told you I wouldn't make you like me - I want you to be a complete woman. But I also want you to be able to reproduce.\"\n\nEvelyn stared down at the tail / cock as it pulsed and throbbed. \"Reproduce?\"\n\n\"When a man makes love to you, you will absorb his cum. If you then make love to a woman - fuck her with your new appendage? You will absorb her DNA. An egg will be released from your ovaries with a mixture of your DNA and the woman's. The man's cum will fertilize the egg.\"\n\n\"I'll be pregnant?\" Evelyn asked.\n\nDemonica laughed. \"Don't be ridiculous. I won't have pregnancy spoiling that perfect body - no, the egg will be held until you implant it in the next woman you fuck.\"\n\n\"One father, two mothers,\" Evelyn whispered.\n\nCiara reached out and gently stroked the stiff member.\n\nEvelyn bit her lip to keep from crying out.\n\n\"I knew you had a tail, but I didn't know it was a cock too,\" Ciara whispered. She got on her knees and suckled the 'head'.\n\n\"Oh, God!\" Evelyn moaned.\n\nCiara smiled up at her and slowly slid the thick cock into her throat.\n\nEvelyn wrapped her fingers in the girl's hair, trying to hold back from driving her length into Ciara's tummy. Jesus, she thought. How do men hold back?!\n\nDemonica laughed.\n\nShe read my mind, Evelyn thought.\n\nBut she didn't read Demonica's. Could she? Probably. But something made her stop. It felt like a violation, even though Demonica was doing it to her.\n\n\"Anytime you like, my darling. I will deny you nothing,\" Demonica said. She was staring down at Ciara as if she was an insect.\n\nEvelyn didn't have to read Demonica's mind to know the demoness despised Ciara.\n\nCiara looked up as she sucked Evelyn's cock. She smiled with a foot of demon cock in her throat.\n\n\"Could I impregnate her?\" Evelyn asked.\n\nCiara slid Evelyn's length from her mouth. \"I don't care. I wanna have your baby, Evelyn!\"\n\n\"Idiot,\" Demonica laughed.\n\nCiara scowled.\n\n\"But no. The whore is barren. Only good for fucking,\" Demonica growled.\n\nCiara balled up her hands into fists.\n\nNo, just ignore her, Evelyn whispered in Ciara's mind. I'll make it better.\n\nCiara's eyes lit up.\n\nEvelyn picked her up like she was a doll and pulled her into an embrace. Her 'cock' angled up and slid to the limit into Ciara's pussy.\n\nThe redhead squealed with delight.\n\nEvelyn could barely control herself. Ciara fit tight around her new member.\n\n\"I love you, Eve,\" Ciara moaned.\n\nEvelyn smiled down at her and began to rock her hips, each thrust embedding the demon cock deeper into Ciara.\n\n***\n\nMona was having the strangest dream. It was a fantasy. She was in the adult store, naked. The giant man was holding her in the air from behind. She just dangled there, legs spread, his thick cock rubbing back and forth across her pussy.\n\nShe watched, smiling as the thick cock appeared and disappeared, sliding across her naked pussy.\n\nThe redhead, Sugar, was standing in front of her.\n\nSugar was naked, her body perfect - beyond perfect. She was all curves and huge breasts with a supermodel's smile and eyes that seemed to look right through her.\n\nSugar knelt and opened her mouth, taking the huge cock down her throat.\n\nMona gasped. It wasn't humanly possible.\n\nSugar simply winked as the giant, Ray, groaned in Mona's ear.\n\nSugar slipped her mouth off Ray's veiny cock and kissed Mona's clit, sucking it hard and tickling it with her tongue.\n\nMona felt her eyes roll back in her head.\n\nThis fantasy was so real!\n\nShe wondered how she could be masturbating and cause these sensations in her clit? Because, as far as she knew, she was back in the motel room, alone.\n\nSugar smiled up at her. \"Relax. Don't tense up.\"\n\n\"I won't hurt you,\" Ray whispered in her ear.\n\n\"Wha... nuh... too big!\" Mona whispered.\n\nSugar grasped the thick root of Ray's cock in her hand and angled it upward.\n\nThe thick, purple head pressed against Mona's pussy.\n\n\"It'll ruin me,\" Mona groaned.\n\nSugar laughed. \"Don't be silly.\"\n\nMona strained to see as the head wedged between her pussy lips and then squeezed inside. \"God! Oh, God!\"\n\nSugar was giggling. \"Yes, he is, baby.\"\n\nRay grunted his own laughter and lowered the thin doctor onto the monster cock slowly.\n\nMona's eyes bugged out and she made a gurgling noise as inch after inch disappeared into her, stretching her in length as well as depth.\n\nSugar's full lips found Mona's clit again, and Mona came hard, impaled on the big cock.\n\nRay began to move slowly.\n\nMona screamed as her orgasm came again, even stronger this time. She was kicking with her legs, but she wasn't sure if she was trying to free herself or force it even deeper.\n\nSugar lifted her then, pulling her free from the huge cock.\n\n\"No... cum in me!\" Mona complained as Sugar lay her gently on the floor.\n\nSugar laughed. \"Not yet, Mona dear. One day, but not now. You'll have to be a goddess first.\"\n\nSugar jumped into Ray's arms and the giant laughed, his huge hands encircling her waist.\n\nHis cock slid into Sugar's pussy and Mona gasped as he went balls deep.\n\n\"Cum in me, Ray,\" Sugar laughed.\n\nHe groaned, deep and low.\n\nFrom her vantage point laying on her side, she could see his thick balls draw up tight. The thick root of his cock began to throb as he pumped cum deep inside the redhead.\n\nSugar kissed his face, her long arms wrapped around his neck.\n\nThick ropes of cum began to leak around Sugar's stuffed pussy.\n\nMona smiled as the pearlescent liquid pooled on the floor.\n\nShe crawled toward it.\n\nSugar laughed and pulled herself free from Ray's cock with a liquid pop. \"No, you don't. No Whoremaster cum for you yet, little doctor.\" She scooped her up and sat her on the counter as Ray went to the back of the store for a mop.\n\n\"Am I dreaming?\" Mona whispered.\n\n\"Sort of.\" Sugar unrolled a canvas beside her.\n\nInside was a set of syringes with needles of various lengths. The contents were multicolored. She picked up a syringe of red liquid and inserted it in a metal box about the size of a pack of playing cards.\n\n\"What's that?\" Mona asked.\n\n\"A gift. Are you afraid of needles?\"\n\n\"No.\"\n\n\"Good.\"\n\nRay began mopping up his spend from the floor. \"Sugar! Havana said no.\"\n\n\"Havana said don't transform her. Didn't say anything about not slutifying her.\" Sugar ran the box with the syringe over Mona's lower abdomen.\n\nIt was cold and Mona shivered.\n\n\"This shot is going to turn you into a total slut - hope you don't mind,\" Sugar said and then leaned in and French kissed Mona.\n\nMona kissed her back hard.\n\nShe squealed into Sugar's mouth as the needle slid deep inside her.\n\nSugar held her tight, letting the needle empty its contents deep inside her before automatically withdrawing.\n\nThey still kissed as Sugar laid the box aside.\n\n\"You're going to think about sex a lot from now on, Mona. Everything is going to make you want to fuck. Don't fight it, just go with it.\"\n\n\"I... this is the wildest dream I ever had...\"\n\nSugar laughed and held her. \"Now, let's see if you can stay away this time.\"\n\n***\n\nCocks are amazing! Evilyn thought.\n\nCiara had dropped onto all fours on the floor of the cavern as Evilyn - she no longer thought of herself as anyone other than 'Evilyn', Evelyn was a distant memory, and Eve was just Ciara's pet name for her - Evilyn was taking Ciara from behind.\n\nThis was power! She thought as she knelt behind Ciara and took the little slut deeper into lust than she had ever been. Evilyn knew this because she was deep in the redheaded cheerleader whore's mind. She was all love and animal lust, reduced to a sexual object by Evilyn's deep thrusts.\n\nAnd she loved knowing that Ciara was being pleased beyond anything she had ever known. The little whore belonged to her completely.\n\nEvilyn knew that this power was what defined Demonica. The object of her lust meant nothing to her. Their devotion to her was important, but they themselves meant nothing.\n\nBut Evilyn was different. Yes, she loved the power she had over Ciara, the way she could manipulate the beautiful creature to higher and higher levels of ecstasy.\n\nMore than that, though, was a growing love for Ciara.\n\nThe redhead screamed and convulsed, her pussy squeezing Evilyn's cock as Ciara orgasmed.\n\nEvilyn laughed and then gasped as her first 'male' orgasm caused her body to tense. Her 'cock' spasmed and pumped jizz deep inside Ciara.\n\nThey collapsed together on the stone floor, and Evilyn wrapped Ciara in her embrace.\n\nCiara rolled over and smiled up at her.\n\nEvilyn felt herself beginning to change, the horns disappearing from her head.\n\nCiara reached up and caressed her cheek. \"No. It's okay. Stay Evilyn. You're beautiful.\"\n\nEvilyn smiled and the camouflage disappeared. \"You're sure?\"\n\n\"Yeah,\" Ciara said and snuggled closer.\n\nEvilyn wrapped her wings around them both.\n\nShe looked up to see Demonica frowning down at them.\n\nEvilyn's wings reflexively wrapped closer around Ciara. She's mine. You will not hurt her, Evilyn projected.\n\nDemonica raised her left eyebrow. \"Hmm. As you wish. Cling to childish emotions for as long as you want.\"\n\nEvilyn kissed the top of Ciara's head and nuzzled her hair. \"I think I will.\"\n\nOne of the Chorus screamed on the platform above, and the others joined in a moment later.\n\nGreen liquid poured down over the side of the stone table.\n\nEvilyn started to stand up.\n\nCiara held her hand. \"I don't wanna see, okay?\"\n\nEvilyn nodded. \"Okay.\"\n\nEvilyn stood up.\n\nThe Chorus all had bellies distended past what would have been nine months of pregnancy.\n\nOne after another they cried out as their water broke, sending a gush of green liquid across the table.\n\nDemonica spread out her clawed hand over one of the pendulous stomachs. \"Push, whore.\"\n\nThey strained as one, sweat pouring from their foreheads as their vaginas opened.\n\nEvilyn swallowed as a something wet and copper colored began to emerge from the nearest woman's birth canal.\n\nIt was a head, broader than a baby's skull. It emerged as the woman pushed and screamed.\n\nEvilyn almost fell back as the head rushed out in a spray of green fluid. \"Not... right. That's... Oh, God.\"\n\nIt opened its mouth and screamed, showing a mouth full of long sharp teeth.\n\nThere were no eyes.\n\n\"Morpheus called them the Eyeless. Faithful servants,\" Demonica said beside her.\n\n\"Oh, Jesus, Demonica, what have you done?!\" Evilyn hissed.\n\nThe creature was folded, like some strange flesh and blood origami. As it was pushed out of the woman's vagina, its limbs began to unfold with powerful snaps.\n\nOnce unfolded, it was nearly six feet long. A long, thin, grayish penis and small testicles hung down between its glistening, emaciated legs.\n\nDemonica produced a gleaming silver cock ring with a hinge. She snapped it around the base of the creature's penis encircling the balls as well.\n\nThe flaccid penis began to engorge.\n\n\"They're impotent without a cock ring,\" Demonica laughed.\n\nThe creature dropped on its 'mother' and latched onto her left nipple.\n\nThe woman screamed in agony as the eyeless's needlelike teeth pierced her areola and began to suckle a mixture of blood and mother's milk.\n\nDemonica laughed and cooed as she stroked the creature's pulsating throat.",
        "The other Chorus were giving birth to their own 'offspring'.\n\nEvilyn just stared and shook her head.\n\n\"I'm going to have a full time job breeding these sluts and building my eyeless army,\" Demonica laughed.\n\nEvilyn looked at the remaining members of the Astronomy class. The orgy on the floor had stopped as they stared in horror at the monsters their classmates had birthed.\n\n\"What's going to happen to them?\" Evilyn whispered.\n\nDemonica smiled. \"I have need of many types of minions. With the proper application of Morpheus's formulae, they will all be suitable breeding stock.\"\n\n***\n\nBobbie Palmer opened the door to her apartment when someone rang the bell.\n\nThe woman on the other side was medium height with brown hair. She was wearing a very professional looking charcoal pantsuit.\n\n\"Can I help you?\" Bobbie asked.\n\nThe woman stared at her. \"You must be Bobbie Palmer? Dr. Mona Karnes's wife?\"\n\nBobbie looked down at the gold badge hanging on the woman's waistband. She went pale. \"Are you with the police? Has something happened to Mona?\"\n\n\"I'm Detective Patricia Kennedy with the NYPD - and, no, Dr. Karnes was fine the last time I talked to her.\"\n\n\"The last time you talked to her?\"\n\n\"Yes. She met with me to have coffee the day she left for upstate...\"\n\nBobbie rolled her eyes. \"She never told me anything about talking to the police. She's in danger, isn't she?\"\n\n\"I advised her not to go, if that's what you're asking? I thought she would be back by now?\"\n\nBobbie shook her head. \"No. She calls me every day, but... she doesn't sound like herself.\"\n\n\"How do you mean?\" Patricia asked.\n\n\"I... I don't know. It's like she's confused or something.\"\n\n\"Confused how?\"\n\nBobbie sighed. \"More... okay, this is embarrassing. More sexual than normal. Masturbating on the phone - it's just not like her to be that free. Mona would blush if you said the word 'sex'.\"\n\nPatricia bit her lower lip.\n\n\"What? Does that mean something to you?\"\n\n\"No, but there is a sexual aspect to the disappearances. It's a lead we're following.\"\n\n\"And you warned her about all this before she went upstate?\"\n\nPatricia nodded. \"I did, but Dr. Karnes is a very determined lady.\"\n\nBobbie shook her head. \"She told me she would be careful, and that she wouldn't take any chances.\"\n\n\"When she comes back? Could you please tell her to call me?\" Patricia asked.\n\n\"Yes.\"\n\nPatricia nodded and turned away. Then she paused. \"Miss Palmer, if Dr. Karnes was my partner? I would be very concerned about her.\"\n\n\"You're saying she's in danger?\"\n\n\"It's an ongoing investigation, Miss Palmer. So, I can't officially comment. But she's in danger. Very real danger.\"\n\n***\n\nMona had turned into a complete masturbation addict.\n\nAs she lay on the hotel bed with her legs spread feeding a dildo as thick as her wrist into her pussy, she wondered through her erotic haze exactly what had happened to her?\n\nThe whole world seemed fuzzy as the darkened motel room's air conditioner cooled the air that wafted over her naked, sweating body.\n\nShe wasn't even sure where the collection of dildos had come from - the porn store was the logical explanation, but she had no memory of going there.\n\nHad she even left the room today? She wasn't sure.\n\nShe took as much of the dildo as she could, feeling herself stretched to the limit. \"Big cock,\" she moaned.\n\nHis cock was bigger than this.\n\nShe blinked. His? That had been a fantasy: the giant at the porn store had a cock bigger than her arm and he had fucked...\n\nShe shook her head. No, that wasn't right. Why would she fantasize about a man, much less one endowed like a Clydesdale? She had never cared about male anatomy, never been attracted to any man.\n\nWhile she thought about this, she was subconsciously relaxing her pussy muscles so she could push more of the dildo inside her.\n\nHer cell rang.\n\nShe grabbed it with one hand off the nightstand while still working the dildo into her pussy. \"I was just thinking about you.\"\n\n\"Mona, are you okay?\" Bobbie asked.\n\n\"Mmm, yes. I'm playing with myself. I have a thick dildo shoved into my pussy. It's soooo big, Butch.\"\n\n\"Why didn't you tell me about talking to the detective, Mona?\"\n\nMona frowned. \"What?\"\n\n\"The detective, Mona. You talked to Detective Kennedy and she tried to tell you not to go to Ithaca. She told you it was dangerous.\"\n\n\"Oh, that? I think she was exaggerating. Butch, honey, something's happening to me...\"\n\n\"You lied to me, Mona! That's not okay. You're my wife, we're partners. You can't just lie to me like that.\"\n\n\"I'm... unnh... sorry, baby. None of that matters now. This... Butch, I'm changing. I want things now. Dark, twisted things. Naughty things.\" She giggled and rolled over, the thick dong still pushed deep inside her.\n\n\"Mona! Snap out of it! We need to talk.\"\n\nMona put the phone on speaker and rose onto her knees. She arched her back, and then reached back with her free hand and caressed her asshole. \"I want to do really, really dirty things, Butch.\"\n\n\"Mona! For fuck's sake, snap the fuck out of it. You're scaring me.\" She sighed. \"I'm coming up there.\"\n\nComing up? Mona thought. \"Yes!\" She laughed. \"Come up here, Butch! It'll be so much fun! I won't be a Wendy Whitebread with you anymore. I'll be your total slut...\"\n\n\"Mona! Where are you?\"\n\n\"In bed,\" she giggled.\n\n\"Fuck me. What motel are you in?\"\n\n\"Holiday Inn Express on the west side of Ithaca. Room 108.\"\n\n\"I'm coming up there. I should be there by 10:00 AM tomorrow morning. Mona, lock your door and do not leave that room. Do you understand?\"\n\nMona laughed. \"No problem. I'll keep the bed warm.\"\n\n\"Jesus. Get some sleep, okay?\"\n\n\"Right after I cum,\" Mona whispered as she pushed her index finger deep into her ass while she rode the dildo to orgasm.\n\n***\n\nEvilyn lay with her back against the stone wall of the cave. Ciara was lying in her arms, and Evilyn had her wings wrapped around them both.\n\nThey were, quite literally, in hell.\n\nAcross the chamber, Demonica was tireless as she injected and performed surgery on the rest of the coeds.\n\nThe effects were amazing and terrifying.\n\nA man with scales like a lizard crawled on all fours toward them. His eyes had slit pupils like Evilyn's.\n\nTwo cocks hung down from his scaled groin, like the twin penises of a snake.\n\nBehind him, his partner, a lizard-like woman was in labor with his offspring.\n\nHe eyed Ciara and smiled, a small forked tongue sliding out as he reached for Ciara's ankle with a clawed hand.\n\n\"Touch her and I will kill you,\" Evilyn whispered.\n\nHe opened his mouth and hissed at her.\n\nShe pointed at him with an onyx claw.\n\nA tendril of flame jetted out, stopping less than an inch from the lizard man's nose.\n\nHe whined and shrank back to his mate.\n\nEvilyn stared at her finger in disbelief as the flame died.\n\n\"I can shoot fire from my fingers,\" Evilyn whispered.\n\n\"You're the Hellstorm,\" Ciara mumbled and snuggled closer. \"You're warm.\" She went back to sleep.\n\nEvilyn smiled.\n\nShe had to get Ciara out of here. The cheerleader whore didn't belong in this nightmare. And Hellstorm or not, Evilyn didn't believe she was strong enough to protect Ciara from all this.\n\nSomething screamed near the altar - one of the coeds stood up, it's face now wrinkled and deformed like a bat's.\n\n\"Jesus,\" Evilyn whispered.\n\nDemonica turned and smiled at her.\n\n***\n\nMona awoke drenched in sweat in the cold room. She looked at her phone: 2:00 AM.\n\nAt some point, she had extracted the dildo from her pussy.\n\nShe was red and sore.\n\nShe smiled. But she was satisfied, for now.\n\nMona frowned in the darkness.\n\nIt had happened again!\n\nShe went to Stallion's and lost time!\n\nMona sat up, naked in the dark room. \"Jesus! What the fuck are they doing to me?\"\n\nThen she stood up and got dressed.\n\n***\n\nThe two Church Agents on duty at the cave entrance almost jumped out of their skins when the women emerged from the stygian depths.\n\nThe younger man almost drew his weapon before the older agent stopped him.\n\nThe smaller of the two women who stepped through the triangular entrance was a buxom, redheaded cheerleader with a mane of red hair and a blue latex SLUTZ uniform.\n\nThe other woman was even more breathtaking.\n\nShe was tall and dressed in a leather bikini and high heels. Her skin was milky white. She had a round face with ice blue eyes and short hair that was almost white.\n\n\"Where is Mistress Sugar Tits?\" The white haired woman asked.\n\n\"Up... upstairs,\" the older agent said. \"Who are you, Mistress?\"\n\n\"I'm not a mistress. My name is... Eve Helstrom.\"\n\nCiara yawned. \"I'm Ciara. Whore Caste, designation Cheerleader Whore.\"\n\nEve put a protective arm around Ciara. \"I'm taking her to Mistress Sugar Tits. Will you step aside?\"\n\n\"Of course,\" the older agent said. \"Mistress was looking for you earlier. She'll be relieved you're... okay.\"\n\nThey stepped aside and Eve led Ciara down the hall.\n\nCiara looked back at the two agents. \"You shouldn't be down here.\"\n\n\"We're guarding the entrance,\" the younger agent said.\n\nCiara shook her head. \"They don't need guarding. You're gonna be sorry you stayed down here.\"\n\n***\n\n\"They're not gonna like what you did to Dr. Karnes,\" Ray grumbled from behind the counter.\n\nSugar leaned on the other side of the checkout counter and shrugged, her big breasts swaying. \"Hey, she's irresistible. I'd like to see those nuns down in Havana stay hands off - she just demands to be touched and poked.\" She smiled. \"Which I think you can attest to?\"\n\nThe service door opened on the back wall, and Ray, who was facing that direction, looked shocked.\n\n\"What?\" Sugar asked as she turned.\n\nIt was Ciara, and beside her holding her hand was a completely transformed Evelyn.\n\n\"Evelyn?\" Sugar whispered as she walked across the store. She looked her over from head to toe.\n\n\"My old clothes don't fit anymore,\" the pale blonde said. \"Demonica seems to prefer bondage outfits, so a leather bikini was the tamest thing I could find.\"\n\n\"What... did she do to you?\" Sugar whispered. She ran her hands over Evelyn's shoulders, but did not actually touch her skin. She frowned. \"This... Evelyn, it hurts to look at you.\"\n\nShe looked away. \"I'm sorry, Sugar, I know you wanted me to be a White Witch...\"\n\n\"No, I mean it literally hurts to look at you. You're beautiful, but this isn't really you, is it? This is some kind of illusion from mind control.\"\n\nShe nodded. \"Don't be afraid.\"\n\nBut Sugar was afraid. This mind control was effecting her, and it shouldn't have been - only a mother superior or bishop could cloud her mind.\n\nEvelyn shouldn't have been able to.\n\n\"Demonica says this is my camouflage. It's so people won't be able to see what I truly am. This body is Eve Helstrom.\"\n\nSugar nodded slowly.\n\n\"But this one is Evilyn Hellstorm. Evilyn, with an 'I'.\"\n\nShe seemed to shimmer, like heat rising from pavement in the hot sun.\n\nEvilyn Hellstorm was very different from Eve Helstrom, and neither of them was her Evelyn.\n\nThe creature that stood in front of her was taller than Evelyn had been, her skin crimson, eyes the same brilliant blue as her milky skinned form.\n\nBut, in all other ways, she was a demoness.\n\nLeathery wings extended out from her back and shoulders, her fingernails were onyx tipped claws. Dark, short horns emerged from her hairline, and a reptilian tail waved in the air behind her.\n\nHer slit pupiled eyes filled with tears. \"Please don't be afraid, Sugar.\"\n\nSugar stood transfixed for a moment. Then she embraced the demon girl, pulling her close, her face nuzzling the supple neck. \"You're safe. That's all that matters.\"\n\n\"She's making monsters, Mistress,\" Ciara said.\n\nSugar took her hand. \"What do you mean?\"\n\n\"She's breeding... creatures,\" Evilyn said. \"Not like me. She's making brainless things with sharp teeth and claws.\"\n\n\"She's breeding? How...\"\n\n\"She's a Futanari, Mistress,\" Ciara said. \"Her and Kimiko have transformation drugs, but not like the Church's. These drugs make humans into monster breeding stock.\"\n\nEvilyn shook her head. \"She says she is doing Morpheus's will...\"\n\n\"Yeah, but sometimes she says she isn't sure if it's Morpheus or Satan,\" Ciara added. \"'Cause she worships both.\"\n\n\"Why is she breeding these monsters?\" Sugar asked.\n\nCiara and Evilyn both shook their heads.\n\n\"She isn't evil,\" Evilyn whispered.\n\n\"Yes, she is,\" Ciara said.\n\n\"Ciara, no, she isn't. I know her. I...\"\n\n\"You love her, yeah, I know - well, your girlfriend is the Antichrist and she's evil as sin.\" Ciara stared up into Evilyn's eyes and held her ground. \"You can't see it, because you're in love.\"\n\n\"I don't understand how she could have moved so far so fast, even with Morpheus's help - he isn't physically here to guide her,\" Sugar said.\n\n\"She has a book,\" Ciara said.\n\n\"What book?\"\n\n\"I saw Kimiko carrying it around, little weasel. I couldn't get a close look at it, but everytime they worked on a coed? They were consulting the book.\"\n\nEvilyn stared at her. \"Wait. Why were you paying this close attention to what was going on down there?\"\n\nSugar and Ciara looked at each other.\n\n\"You were spying! Did Sugar send you with me to spy on Demonica?!\" Evilyn asked.\n\n\"No,\" Sugar said. \"But... she's Whore Caste.\"\n\n\"I paid attention on account of I knew Mistress Sugar would want to know. But I went there with you because I love you and I want to protect you, Eve. I'm your Inky Dinky Doo, Gigglemesh.\"\n\nEvilyn shook her head. \"What the hell is that supposed to mean?\"\n\nRay shook his head. \"Not Gigglemesh, Gilgamesh - he's a hero from ancient Sumeria. His best friend was Enkidu.\"\n\nThe three women turned and looked at Ray.\n\n\"What? I'm sixty-five years old. You think I never read a book?\"\n\n***\n\nThe fog had rolled in as Mona drove toward Stallion's Adult Video from her motel.\n\nShe had spent some time in the motel room examining herself and the situation before she left. Her nipples and clit were constantly swollen with arousal, even her anus was twice as sensitive as it had been before. Mona had never been a sex addict, but now she was.\n\nShe felt like she was in a constant state of heat.\n\nShe also had a dull pain in her left side, lower abdomen.\n\nThere was a small bruise there.\n\nAnd she was convinced she had been injected with something.\n\nWas it some type of time-released sex hormone?\n\nThen there was the lost time.\n\nWhatever was happening, something had been done to her.\n\nThis time, she needed to know what.\n\nShe hated guns, but she really wished she had one with her.\n\nMona touched her cell phone. She didn't trust the local cops - they had done nothing to find her Aunt Melanie.\n\nBut she could call Patricia Kennedy. If nothing else, just to let her know where she was going and what she thought had been done to her.\n\nHer fingers hesitated over the screen.\n\nShe bit her lower lip.\n\nPatricia Kennedy was hours away, and whatever had been done to Mona? The worse that had happened to her was waking up in her motel room, dripping with lube, and masturbating.\n\nWhat would she tell Kennedy? That there was a secret cadre of sex wizards in an interstate sex store who were turning her into a total slut? Kennedy would laugh at her.\n\nShe peered through the misty darkness and headed toward Stallion's.\n\n***\n\n\"Death is coming!\" The Chorus screamed as one.\n\nDemonica stumbled back from the altar.\n\nThe hairless, naked, and very pregnant women wailed.\n\n\"What are you screaming about?\"\n\n\"Death comes! She is close!\"\n\n\"Death comes for whom? Speak!\"\n\n\"Death comes for you,\" they whispered.\n\nKimiko tugged at her arm.\n\nShe looked down.\n\nKimiko was pointing behind them.\n\nDemonica stared at the back wall of the chamber.\n\nEvilyn and Ciara were gone.\n\n***\n\n\"I'm going back,\" Evilyn said.\n\nSugar took her arm. \"No, you mustn't.\"\n\nCiara threw her arms around her. \"No! No, don't go! She's going to hurt you, Evilyn.\"\n\nEvilyn stroked Ciara's hair. \"I have to. I only came out here to bring you back to Mistress Sugar.\" She turned toward the White Witch. \"Demonica hates her. I want Ciara to stay here where she'll be safe.\"\n\nCiara looked up at her. \"None of us are safe! I won't leave you, Eve!\"\n\nSugar nodded. \"Ciara. Go stand with Ray.\"\n\n\"No,\" Ciara said, still looking up at Evilyn.\n\n\"What? Ciara, you're Whore Caste. You have to obey me,\" Sugar said gently.\n\n\"No. I won't. I'm not Whore Caste anymore. I am Ciara di Hellstorm, and I belong with my Mis... my girlfriend. Not my Mistress. My girlfriend.\" She looked at Sugar. \"I like you, you're nice. But I no longer owe allegiance to you or Ray or even the Church. I'm my own person - you might have made me, but now I get to choose. I don't even have to do Morpheus's will if I don't want to.\"\n\nEvilyn smiled at her.\n\n\"And, I don't have to do what you tell me either, Eve. You're stubborn and love blind. You leave me up here, and I'll just follow you downstairs. And I will 'cause I'm love blind too.\"\n\n***\n\nThe elevator door on level 9 closed.\n\nThere was a smear of blood leading from the hole in the wall to the elevator.\n\nThe Church Agents were gone.\n\n***\n\nMona parked in the darkened lot of Stallion's Adult Video.\n\nThe doors were locked, but the lights were on.\n\nShe knocked.\n\n***\n\n\"Dr. Mona Karnes is at the front door,\" Rita the Bimbot said as she opened the inner door.\n\n\"Fuck's sake,\" Ray grumbled.\n\n\"She's persistent, I'll give her that,\" Sugar said.\n\n\"Who?\" Evilyn asked. She effortlessly transitioned back into her Eve Helstrom form.\n\nThe Bimbot stared at Evilyn. \"Fuck. What fresh hell is this?\"\n\nEvilyn frowned.\n\n\"I mean seriously? You people are making demon sluts now? What the actual fuck?\" Rita said in her tinny, amplified voice.\n\n\"What do we do about Mona Karnes?\" Ray asked.\n\nA deep voice asked from the back of the store as the service door opened. \"My niece is here?!\"\n\nThey all turned and looked.\n\nDemonica stood in the doorway with Kimiko by her side. Demonica had dispensed with the loin dress at some point, and she stood naked with her Futanari cock hanging to her knees.\n\nRita's head cocked to the side. \"Fuck. I mean... God, you fuckers are twisted.\"\n\n\"Not now, Rita,\" Sugar said. She turned to Demonica. \"Mona can't see you like that.\"\n\nDemonica arched an eyebrow above her glowing left eye. \"Mona, is it? And how are you on a first name basis with my niece?\"\n\n\"Havana says she's a VIP,\" Sugar said. \"Destined for Professional Caste.\"\n\n\"I see,\" Demonica said.\n\n\"What are you doing in the cavern, Demonica?\" Sugar asked.\n\n\"A little of this, a little of that - didn't your nasty little Whore Caste spy tell you?\" She grinned at Ciara.\n\nEvilyn stepped in front of Ciara, shielding her from Demonica's gaze. \"I told Sugar. I wasn't aware it was supposed to be a secret.\"\n\n\"I have no secrets from you, my beloved Evilyn,\" Demonica said. \"Tell the Whore Caste whatever you like. I am doing Morpheus's will, Sugar. He doesn't trust that the castes can subdue mankind without my help.\"\n\nSugar was looking at the floor to Demonica's right.\n\nThere was a stain there.\n\n\"Is that blood?\"\n\nDemonica held up her right, clawed hand. Dark blood dripped from the talons. \"An unfortunate accident. The Church Agents on level 9 seemed intent on keeping me in the cavern. I had... other plans.\"\n\n\"Fuck,\" Ray hissed.\n\n\"Where are they?\" Sugar whispered.\n\n\"My pets require food,\" Demonica said.\n\n\"Um, excuse me, this is all... gross and stuff,\" Rita said. \"But what do I do about the blonde broad out front?\"\n\nSugar rolled her eyes. \"Demonica, she can't see you.\"\n\n\"Agreed. I will return to my lair.\" She turned away, then peered back over her shoulder at Evilyn. \"Are you coming, my love?\"\n\nEvilyn looked down at Ciara. \"Please stay here?\"",
        "Ciara shook her head. \"No. Where you go, I go.\"\n\nEvilyn sighed.\n\n\"Oh, stop fretting. I won't kill the little bitch,\" Demonica said as she walked away, her hips swiveling.\n\nEvilyn and Ciara followed her.\n\n\"Be careful,\" Sugar whispered.\n\n***\n\nThe weird girl in the robot outfit opened the door. \"Welcome to Stallion's Adult Video. Your final destination for smut, perversion, and the occasional succubus.\"\n\n\"What?\" Mona asked.\n\n\"Never mind. They're waiting on you inside.\" She opened the inner door and motioned Mona through.\n\nThe tall redhead and the giant were waiting inside with grave expressions.\n\n\"You... I know you both,\" Mona said.\n\nThe giant was talking on a cell phone.\n\nThe redhead walked to meet her at the door. \"It's going to be okay, Mona. I'm sorry you've been so upset. But... being constantly turned on is kind of nice, isn't it?\"\n\nMona shrank back as the big redhead smiled down at her.\n\n\"Who... are you people?\"\n\n\"Havana says go for initiation but hold back on final Ambrosia,\" the giant said.\n\n\"What is he talking about?\" Mona said.\n\n\"Shh. Everything is going to be fine,\" the redhead said. She touched Mona's forehead and Mona collapsed into her arms.\n\n***\n\nDemonica watched through the partially opened service door as Mona swooned.\n\nShe stared intently at her niece.\n\n\"They said, 'Death is coming',\" Kimiko whispered beside her.\n\n\"Yes. They did.\"\n\n\"Your death.\"\n\n\"Yes.\"\n\nKimiko kissed Demonica's hand. \"Shall I kill her?\"\n\n\"No. No, I don't think so. If we actively go against the Church, they will send that whore Marapova after us, if not an army of priests and nuns. No. We will wait and see. I'm not ready to accept the word of my Chorus as absolute truth.\"\n\n\"Everything all right?\" Evilyn asked from down the hall at the elevator.\n\n\"Yes, my dear. Everything is wonderful.\"\n\n***\n\n\"What if I told you the world was going to end?\" Sugar said. \"What if you knew everyone was going to die, every person in every country on earth was doomed? That, one day, perhaps soon, the earth would be devoid of all human life?\"\n\nMona was strapped naked to a reclining chair that reminded her of a dentist's chair. It was made of chrome and black faux leather. The straps were of steel, and they held her wrists and ankles immobile. \"Let me go!\"\n\n\"I can't. I would love to, but I need you to listen,\" Sugar said.\n\nThey were somewhere in a deep underground laboratory with high ceilings, and the walls smelled of fresh paint.\n\n\"Did you take my aunt? Melanie Karnes? She's missing. Did you take her?\"\n\nSugar walked around behind Mona. \"Yes. She's here at Stallion's.\"\n\n\"Bring her to me!\"\n\n\"I don't think that's a good idea,\" Sugar said as she stroked Mona's blonde hair.\n\nMona jerked her head away. \"Why not?\"\n\n\"Because she isn't the same as she was when you knew her.\"\n\n\"What did you do to her?!\"\n\n\"She's just different, that's all. You'll see her soon, I promise.\"\n\n\"Did you do to her what you're doing to me?\"\n\nSugar sighed. \"I... some yes. Can we go back to my question?\"\n\nMona strained against the bonds. \"Yeah, fine, you think it's the end of the world? Like Jim Jones and every other half-baked crackpot on earth.\"\n\nSugar laughed. \"No, nothing like them.\"\n\n\"You're part of some doomsday cult. I get it.\"\n\n\"It's true, doctor. The world is coming to an end. But we're doing something about it.\"\n\n\"Okay, I'll play. How is it going to end?\"\n\n\"I don't know.\"\n\nMona laughed. \"Then how do you know it's ending?\"\n\n\"I've seen things, doctor. Things that should be impossible. I should be impossible. A few months ago, I was a middle aged woman whose best years were behind her. Look at me now.\"\n\n\"Yay for plastic surgery, you psycho bitch.\"\n\n\"No, not plastic surgery.\" She leaned in close. \"This is real. The real me. Younger, taller, stronger. I can't get sick, I don't age - I will never die, doctor. I have an amplified libido that makes me crave sex constantly - something I think you understand, don't you?\"\n\n\"Some kind of aphrodisiac...\"\n\n\"No, I injected your left ovary with something called slutifier. It's a retrovirus that converted your ovary into a hormone factory pumping carefully balanced sex hormones into your blood stream. You are perpetually horny, doc. How does that make you feel?\"\n\n\"Violated!\" She jerked against the bonds. \"How do you keep making me forget?\"\n\n\"Another power given to me - I can manipulate your mind. I could rewrite your entire personality if I wanted.\"\n\nMona swallowed hard.\n\n\"No. I wouldn't, doctor. Not only have I been ordered not to, I don't want to.\" She caressed Mona's hair. \"Your mind is a masterpiece. You are far and away the smartest person I've ever touched with my powers. We need you, doctor.\"\n\n\"Need me for what? If you have science that can repurpose human organs through genetic manipulation...\"\n\nSugar smiled. \"We have so far to go. Our methods now feel cruel. We need someone like you to make our procedures painless, to perfect them, and to push the envelope. We're the human race 2.0, but with your help? We can be 3.0 or 100.0.\"\n\nMona stared at her for a moment. \"You are a fucking lunatic.\"\n\nSugar laughed and climbed onto the chair with her.\n\n\"Get off me.\"\n\n\"You don't mean that. You're about to burst with sexual tension - I can read your mind, remember?\"\n\n\"I don't want you.\"\n\n\"Not what you said yesterday.\"\n\nMona's eyes grew wide. \"No... that was...\"\n\n\"A dream? A fantasy? You know it wasn't.\"\n\nMona shook her head. \"You're making me want to do things. You're controlling me.\"\n\nSugar laughed. \"No, I'm not. I told you: your mind is too beautiful. I'm afraid to touch it beyond just a simple manipulation. If I hurt you? I'd never forgive myself.\"\n\nMona swallowed. Sugar was so close to her, even the smell of her hair was intoxicating.\n\n\"Pheromones,\" Sugar laughed.\n\n\"What?\"\n\n\"The smell of my hair? Pheromones. If you make love to a telepath? You have to be prepared for them to inspect your thoughts... and fantasies.\"\n\n\"Stop...\"\n\n\"Fantasies like how much it turns you on to be strapped down helpless to this chair, naked.\"\n\n\"No. You're twisting my...\"\n\nSugar put her finger on Mona's lips. \"Shh. Don't lie to me. It doesn't work.\"\n\nMona could taste Sugar's skin on her lips, and she wanted to kiss the digit.\n\nSugar smiled and gently pushed her finger between Mona's lips. \"Go on - just don't bite me. I won't hurt you, so don't hurt me, okay?\"\n\nMona felt drugged. She let Sugar's finger slide into her mouth.\n\nSugar smiled as she gently pushed her finger in and out, fucking Mona's mouth. Then she pulled the finger free.\n\nShe laid her head beside Mona's on the chair and together they looked at her finger. \"We're about sensuality, doctor. My caste wants to make people happy, especially Professional Caste like you're going to be. Imagine what it will be like? No more loneliness, just fantasy, fulfilled.\"\n\nShe lowered her finger gently and caressed Mona's clit.\n\nMona shuddered.\n\n\"You don't have to be afraid. We really are trying to save the world. We want you to join us.\" She did slow circles with her moist fingertip over Mona's clit.\n\n\"Butch. I want...\"\n\n\"Yes. You're going to be together. I promise you, doctor.\"\n\nMona leaned her head back and moaned as the warmth in her crotch spread to her whole body.\n\nA moment later, she screamed as she came in Sugar's arms.\n\n \n"
    ],
    "authorname": "wayneandanntriskelion",
    "tags": [
        "bizarre body modifications",
        "breed",
        "demon",
        "futanari",
        "group sex",
        "horror",
        "masturbation",
        "oral",
        "seduction"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/transformations-dr-de-mona-ch-03"
}