{
    "title": "Patty's Eyes Pt. 04",
    "pages": [
        "Patty's Eyes--Part 4: Patty and I make and fuck a supermodel\n\nEveryone having sex is at least 18. This is fiction and a continuation of the story \"Patties Eyes\". Warning: this is a self-edited long story with women exploring their sexuality in a variety of ways. Volunteers for story suggestions, editing, and/or grammar desired.\n\n***\n\nChapter 13 -- College\n\nPatty picked a college that was only about an hour away from home, a good nursing school. We help her move in and met her roommate. She was a foreign exchange student from Taiwan looking for a husband. Patty immediately told her I am not available, I am with her moms, they giggle.\n\nThe first day of school I got about fifty text messages. Twenty the next, a few the next, one the next, and then twice on the weekend. She got invited to parties and wanted to experience the college life. No sorority for her, she was there to get an RN in nursing and that meant hard work. Janet and Jackie instantly noticed the change in me long before I did. Letting the bird leave the nest is soon a topic of counseling. It is better this way. Right? Yes, it's the right thing for her. I must let her go, for her own good, I am too old.\n\nIt is four weeks later, a Friday that I get a call at lunch.\n\nPatty announces happily, \"I am coming home tonight. I have a friend I want you to meet.\"\n\nI can't speak, she found a guy already.\n\nI mumble, \"Ok,\" that is all I can say, I feel sick inside.\n\nPatty is excited, \"Thank you, daddy, see you tonight for dinner, 6:00.\"\n\nWell, that ruined my appetite for lunch. We have enough for dinner tonight, it's chicken and I have extra in the freezer. Even if he is a huge football player, we will have enough. I text the girls and they are happy that Patty is coming home. They ask how I am, I guess knowing how I will feel, I text back \"Fine.\" I wasn't.\n\nI get home and the girls are in a great mood. Glad someone is.\n\nJanet is giddy with happiness, \"Do you know anything about the guy? Have they had sex yet? Does he play sports? How big of a cock does he have?\"\n\nI smiled, wished I was dead, but say, \"I need to wash up and start dinner, they will be here soon.\"\n\nI am grilling chicken with a honey mustard sauce tonight, I will not start the chicken until they arrive. I also made a salad, deviled eggs, and the previous night I made some coleslaw. Warm up some mini croissants and we are ready. I hear the car pull up, I go outside to put the chicken on the grill.\n\nThey don't take long, I stay outside to ensure the chicken doesn't burn. I can hear the greetings inside taking place and Patty is loud, she is excited to show off her new friend. A few minutes and it's ready to turn the chicken over. Patty comes out to see me and jumps in my arms and gives me a mouth-watering kiss.\n\nPatty is overflowing with energy, \"Oh daddy, it's sooooooo good to see you. I missed you. Ready to meet my new friend?\"\n\nTrying to sound happy, \"Sure but let me get the chicken, dinner is ready. I have the dining room set up for your special guest.\"\n\nI went all out with the silver, china place settings, and linens. It really did look nice. I took a picture before everyone came and made a mess.\n\nPatty came in first dragging her new friend with her. Her new friend is a woman, bombshell, gorgeous, oh my, she makes Patty look ordinary. Patty introduces me to Meghan, a 6' 2\" skinny girl with at least D cup breasts. Light brown and blond hair tied back in a ponytail (my favorite) dimples, tiny nose, huge smile, bubble butt, and deep green eyes. She is strikingly beautiful. However, she is so shy she can't talk to me. She can't make eye contact with anyone but Patty, she looks at the floor.\n\nShe whispers into Patty's ear and Patty says, \"Meghan says hi. She is kind of shy.\"\n\nNo shit Patty. Meghan looks horrified that Patty said that.\n\nI walk up to Meghan, give her a big hug, and kiss on the forehead, \"Welcome to our home. I have prepared a splendid dinner for all of us tonight.\" I hold the hug a second longer than normal. I want her to know I mean it.\n\nI then help her get seated. I do the same for Patty, hug, kiss, and seat her. Janet and Jackie have already taken a seat. I take Meghan's drink order, I know everyone else's desire for chicken.\n\nPatty dominates dinner conversation, Meghan never mutters a word. She tells the story of how she saved a drunk homeless man that became her daddy. She even told the pigs in the blanket story and the bath story. I must have been beet red for most of the dinner. Janet and Jackie each have a funny story to tell about me. Meghan just looks at the storyteller and steals glances at me. Wow, she is one shy girl. It reminds me of Patty when I first saw her. Is that why she is here?\n\nPatty goes to the washroom and Meghan looks like she might die.\n\nI asked Meghan, \"What is your major?\"\n\nShe answers, \"Nursing.\"\n\nI ask again, \"Do you like school?\"\n\nShe answers, \"Yes.\"\n\nNew getting playful, \"Did you like dinner?\"\n\nShe smiles, \"Yes.\"\n\nYup, not much of a talker.\n\nI change my approach, \"What meal do you like to cook?\"\n\nA smile shows up, \"Apple pancakes.\"\n\nI get her talking now, \"Oh, I have never made those. How do you make them?\"\n\nThat did it, she is comfortable talking about cooking. She explains in detail how to make apple pancakes and then asks about my chicken, she liked it a lot. I gave her my ex-girlfriends recipe. I engage her by asking questions about making the apple pancakes.\n\nPatty came back and immediately Meghan is quiet again. Patty helps me with the dishes, Janet and Jackie get lots of yes and no answers while we are doing the dishes.\n\nWhen done Patty announces, \"Family Game Night.\"\n\nWow, we haven't done that in years. We play Candyland, \"Chutes and Ladders\", \"Go Fish\", Sorry, and Patty's favorite, Operation. What a dumb game, I have never won, not once. Meghan is sharp, she had never played these games as a kid, yet she picked them up almost immediately. True, their children's games but still.\n\nEveryone has fun and like usual I don't win a game, not once.\n\nMeghan innocently asks me, \"Why do you let Patty and me win?\"\n\nPatty looks astonished, I guess she didn't know.\n\nI explain with a smile, \"It was therapy for her. I generally won and she is competitive. She worked hard, memorized the rules, looked for advantages, and slowly she started to win more often until she eventually won all the time. She put in the effort and looked at things from all angels, I rewarded her for all that demanding work and determination. She enjoyed beating an adult tremendously, especially me.\"\n\nChanging subjects, \"Anyone for ice cream or milkshakes before I go to bed?\"\n\nPatty quickly answers, \"Meghan and I want milkshakes.\"\n\nJanet orders, \"Mint chip ice cream.\"\n\nJackie declines, \"Just a glass of water please.\"\n\nMeghan came to help me, she smiles at me and helps make the milkshakes. I need the extra hands to carry things, so it worked out perfect. We serve dessert in the living room. Janet and Jackie are at my sides leaning on me, Patty is leaning on Meghan, they must be close.\n\nPatty now tells the story about the cruise ship and baring all their goodies to the cruise ship as it passes by. Meghan is fire engine red as she blushes. Janet and Jackie, tell her how hot it was. They look at each other, then whip their shirts off, no bras.\n\nJackie explains, \"Even with just you here, I am glistening below and will need relief tonight. We are reformed lesbians.\"\n\nThey both take off their pants. Meghan is staring at them.\n\nJanet corrects her sister, \"We used to be lesbians that used men, now we prefer one man.\"\n\nThey both give me a kiss on the cheek.\n\nJackie offers, \"Want to verify how wet we are?\"\n\nPatty pushes Meghan up. She very slowly and tentatively walks forward and then down to her knees. She smiles and pushes a finger into Jackie. She is moving her arm and fingers. I can hear her fingers squishing. I reach over and do the same to Janet. Both girls are now moaning and breathing hard.\n\nMeghan leans forward and starts to use a tongue. I get on my knees and do the same to Janet. I reach a hand up and start to softly rub her clit. I am like a sewing machine, I am zig-zagging at lightning speed up and down her inner lips making her buck her hips and finally scream out her orgasm. Meghan had to stop, she is so shocked at the result. Janet goes rigid, stops breathing, eyes roll up.\n\nMeghan is scared, \"Is she ok?\"\n\nPatty giggled, \"No, she is in a perfect little world of pure bliss. The angels are singing, the birds are chirping, the sun feels warm. She is a LOT better than ok.\"\n\nJanet falls over limp, but her eyes open, she is breathing again, she has a smile on her face.\n\nShe softly whispers, \"Thank you, Jack. That is partially why we love him so much.\"\n\nMeghan and Jackie have lost the moment. Patty comes over to rekindle the moment. She pushes Meghan's head down to start again and Patty starts to sensually kiss Jackie although Meghan is too distracted to notice. Patty plays with Jackie's nipples. With two women on Jackie, it doesn't take her long to orgasm. It was a good orgasm, it just wasn't the same as Janet got.\n\nMeghan is confused, \"I thought I was good?\"\n\nJackie knowingly smiles, \"Girl, you are very talented, he is just ... better. Janet and I are still hot looking. He is average looking at best. Don't you think we could find better-looking men? Yet we would rather share him than have all of someone else. Why do you think we feel that way?\"\n\nMeghan is searching for an answer.\n\nPatty, \"That is a rhetorical question.\"\n\nI pick up Janet and take her towards the bedrooms.\n\nPatty quickly announces, \"Janet goes into Jackie's room tonight.\"\n\nI deposit Janet in Jackie's bed and she still has a huge smile on her face. Patty has Meghan's hand and takes Meghan into her room. I go back to my room. Alone.\n\nI think sadly, \"Well, at least Patty didn't bring home a guy. Is this better?\"\n\nI put on my boxers, turn off the lights, and get in bed. I fall asleep almost immediately, it was an emotional day. Ten minutes later Patty and Meghan are in my room and my lights are on. They both have smiles and sit on my bed.\n\nPatty starts to explain, \"I met Meghan at two parties. The men were all over me like flies, thrusting glasses of beer at me, while Meghan is sitting by herself. She is drop dead, gorgeous, wouldn't you agree dad?\"\n\nI agree, \"Yes baby, she is quite special. A true beauty if ever I saw one.\"\n\nPatty questions me, \"You know how many guys talked to her? None. It was at that moment that I realized I saw in her what you saw in me all those years ago at the restaurant. I grabbed her hand and pulled her from the party. We went to a bistro and talked till they threw us out. She is smart and cute but shy. She had one experience with a guy but it was horrible so she likes women now as you saw. I have been a very bad girl.\"\n\nNow aroused, I ask, \"Oh, do you need to be punished?\"\n\nPatty smiles, \"I will let Meghan decide my punishment.\"\n\nI ask shocked and surprised, \"What did you do that was so bad?\"\n\nPatty bluntly says, \"I lied to my friend. I told her I was bringing her home to have sex with my mommies. I brought her home so you could fix her. I want you to make love to her and pretend it is me.\"\n\nI chuckle, \"Well baby, your plan has a flaw. You know I will never make love to someone that doesn't want it. If she is here for your mommies and not me, I can't do squat. Sorry honey.\"\n\nPatty pleads with me, \"Please daddy, she needs a good fucking, just like my mommies get. I know they love it and if Meghan gives it a try, she will too. You are magic.\" \n\nI am now a bit uncomfortable with this conversation, \"Honey, I respect your desire to help your friend and I feel sorry for her. I really do. But I could NEVER do it against her will. Remember when you wanted to try light BDSM, I still had to give you a safe word just in case. Sex is for fun and love, it's not a tool to hurt people, so no, get out of my room.\"\n\nPatty is desperate, \"But daddy, for me, please. Just this one time. Isn't she good enough looking?\"\n\nI am now getting mad, \"Patty, Meghan is gorgeous, a true beauty. But no matter what you say, NO is NO so GET OUT OF MY ROOM!\"\n\nJanet and Jackie come into the doorway, \"What's going on in here, why is Jack mad? Patty?\"\n\nPatty is embarrassed, \"I tried to talk daddy into fucking Meghan. He refuses.\"\n\nJackie interrogates Patty, \"Does Meghan want to have sex?\"\n\nPatty pleads her case, \"No, but it's for her own good.\"\n\nJanet feels sorry, \"You know your dad, he is the sweetest, nicest man I have ever met, there is no way he would ever do that. Go to bed, you lose.\"\n\nPatty is desperate, \"Wait a minute. Meghan had sex one time with an old neighbor, a boy she liked a lot. He made her drink beer and then forced her to do things she didn't want to do. He all but raped her. He certainly didn't stop when she wanted him to.\n\n\"He was an animal and hurt her. He forced her to do a blowjob and then stuck his pecker into her unprotected. She was dry and it hurt a lot. I know how dad will react, he is too protective. Remember when he made us sit at the end of the dock, tied up, eyes closed, and naked?\"\n\nJanet fondly remembers, \"Yup, we were not allowed on the dock because of us being tied up it was dangerous, so we had to wait. Can you imagine having three naked tied up women, you are almost ready to play games with us, and all that was on his mind was our safety. Yes, that was touching.\"\n\nPatty is frustrated, \"That is what I was trying to show her, not all men are horrible, only a few are, and the good ones make it worth-while.\"\n\nPatty goes to Meghan and gives her a hug, \"I am sorry Meghan, I just thought my dad is so wonderful that you might want some.\"\n\nMeghan grins, \"Do I really get to select your punishment?\"\n\nPatty is smiling but defeated, \"Yes, why not.\"\n\nMeghan goes to Patty's room and came back with Patty's package of rope.\n\nShe hands the rope to me, \"Show me how you tied Patty up, please.\"\n\nJanet and Jackie smile and say goodnight, have fun. I proceed to strip Patty, then tie up her arms behind her back like I did back on the island. I gave her some tips on safety and hygiene. I don't want her hurting my baby girl.\n\nI ask Meghan, \"Do you want her walking around?\"\n\nMeghan gasps, \"Oh no.\"\n\nI put Patty's heels under her and move the calf to the back side of her thigh. I tie her legs to keep them in that position. I then spread Patty's legs wide giving us both full access.\n\nI want to empower Meghan, I start playfully, \"Ok Mistress, what would you like next?\"\n\nThat perks up her ears.\n\nMeghan is shocked, \"Me?\"\n\nShe is so shy, I offer her power, \"Yes you, Mistress. You are in charge. What do we do next?\"\n\nShe thought for a few heartbeats then spoke, \"Jack, take off your clothes.\"\n\nI slowly pushed my boxers down; my bulge is now a full erection. Meghan and Patty both smile.\n\nMeghan smiles, \"I want Patty up off the ground.\"\n\nI think for a moment.\n\nI pick up Patty, \"Follow me, Mistress.\" \n\nI go into Patty's room. She has a big overstuffed chair. I move it to the bed as I assume she wants to either play with her or make her watch. I then gently put Patty in the chair sitting in her restrained pose. I spread her legs. Her cunt is on full display.\n\nI report, \"Patty is now off the floor Mistress. What's next Mistress?\"\n\nMeghan thinks, \"What did Patty mean by making love to me?\"\n\nI want to be clear, thoughtful, and educational all at once, \"Please sit Mistress, this will take some time to explain.\"\n\nShe sits on the edge of the bed, I sit next to her but facing her. Her eyes are on me, she is eager to listen to my words of wisdom.\n\nI start explaining, \"Patty is mistaken, I can't make love to you because I don't love you. Yet. I can show you kind of what it is like though. To truly make love, you must know the person so good that it is as much a spiritual journey as a physical one.\n\n\"I can guess and try to simulate the experience but the first time you truly make love to a man, you will know the difference. The other kind of sex is purely physical, a quick and fun slamming of flesh ending in a nice orgasm. When I make love, you end up like Janet. I am guessing you never had anything like that, have you, Mistress?\"\n\nMeghan shyly answers, \"No, nothing even remotely like that.\"\n\nI am honest with her, \"I suspect Patty has set you up to have sex with me to try and help you. She may even feel it is her mission in life to help shy people break out of their shell. Did you know that is the only difference between you two right now?\"\n\nMeghan is amazed, \"No way, she is so pretty.\"\n\nI try to shed some light on this poor girl, \"Meghan, so are you. You just don't have that self-confidence, that inner swagger, where you know you are hot, that men drool for you, and you love it. That is where Patty is now. Did you know at one time she had super long bangs that went beyond her eyes so nobody could see those gorgeous eyes?\"\n\nMeghan is shocked, \"No way, why would she hide the best part of her body?\"\n\nI explain, \"She is different, and kids made fun of her. It wasn't until I looked at a bald child dying of cancer, look her in the eyes, and tell her how spectacular they were, that she realized it is true. That changed her forever. You too are spectacular, you just don't know it. Would Mistress like me to show her?\"\n\nMeghan is confused, \"Why would Patty, Janet, and Jackie share you if you are so good?\"\n\nI am confused as well, \"Mistress, I have no idea why they would let me have the honor of making love to you. Make no mistake about this, all three of them have authorized it and tomorrow at breakfast when I make pigs in the blanket,\" Patty smirks, \"We will get to the bottom of this. For now, want to have your world rocked?\"\n\nMeghan is shy but excited, \"Yes, please. This, I want.\"\n\nI instruct her, \"If you ever want me to stop, just say stop. You are in control, Mistress.\"\n\nShe smiles a million-dollar smile at me.\n\nPatty adds, \"Way to go girl.\"\n\nMeghan is annoyed at the interruption, \"Slave, do you have a ball gag?\"\n\nI snicker, \"I can do better.\"\n\nI stand up and have Meghan stand up. I slide her panties down, they are soaking wet, she steps out of them. I pick them up and stuff them in Patty's mouth.\n\nI smugly ask, \"Mistress pleased?\"\n\nMeghan is laughing at my use of her panties, \"Oh yes, very much so. You are a wicked man.\"\n\nJanet and Jackie are at the doorway.\n\nJackie lovingly smiles, \"Meghan, you have no idea. About two months ago we go on a vacation that was a sexual adventure for all three of us. We had the time of our lives but it was partly at Jack's expense. He had to share us with other men so we could experience some cool once in a lifetime stuff.\"\n\nJanet is beaming with pride, \"Oh my, what a trip that was. You know some but it was crazy fulfilling for us. Not so much for Jack. Patty's plan was to find a nice clean girl or two that were stunning and wanted to have sex with Jack. With your history, we didn't know if you would or not but we all knew to be around Jack would be a good experience for you so Jack was right, we are all OK with this. It is our thank you to him and in Jack's true style, he is helping someone else at the same time so you are perfect.\"\n\nMeghan is in awe, \"Thank you, I was kind of worried that you might hurt me tomorrow once you found out.\"\n\nJackie came up to me and Meghan and gave both of us kisses, \"Have fun. Jack, because you were so awesome at the island and didn't kill those boys, we are 100% ok with this and fully on board. Patty asked us a few days ago if it was OK.\"\n\nI have a tear in my eye.\n\nMeghan is now sad, \"Jack, what's wrong?\"\n\nMy heart is touched by such loving words, \"That's pretty amazing that a woman is that selfless to let me play with other women. Few women give their boyfriends permission to go fuck a stunningly beautiful college girl.\"",
        "Meghan starts laughing. I look at her.\n\nMeghan explains, \"I love how you look at that. What I saw was a woman that was so confident in her love for you that she gave you an 18-year-old fuck toy for the night. I just realized that I am that toy.\"\n\nWe both laugh at that. I pull her to me and kiss her like I mean it, I do. Mouths open, tongues play. I am in no rush to stop. I do the one finger bra pop move which impresses her. She pulls her bra away and we continue to make out. I use one hand to play with her nipples. They are instantly rock hard.\n\nShe reaches for my cock to hold it. She starts to stroke it.\n\nI explain the rules, \"Mistress, you don't have to please me, I am here 100% for your pleasure.\"\n\nMeghan instructs me, \"But I want you to blow a load, so we can go for a long time tonight.\"\n\nI assure her, \"I will hold out.\"\n\nMeghan is quizzical, \"But I want to see a man shoot his load. Oh, I know.\"\n\nShe pushes me onto my back, gets up, goes to Patty, reaches her hand into Patty's cunt and comes out with lots of liquid and strands still stretching from her snatch. She then uses that hand to massage my dick.\n\nMeghan points at Patty's tits, \"I have never seen a titty fuck before, have fun with her breasts.\"\n\nI comply, \"Yes Mistress.\"\n\nMeghan pulls out her panties from Patty's mouth, \"Patty, bend your head down and catch his cock in your mouth.\"\n\nPatty happily plays her part, \"Yes Mistress.\"\n\nMeghan stands behind Patty and pushes her breasts together.\n\nI pull close, stuff my cock inside the sweet spot of her breasts and push up. With so much lubrication I go straight up into Patty's mouth easily. I then start a jackhammer assault on her tits and mouth. Both girls are breathing hard. Patty uses suction and lots of tongue to get me off in less than five minutes. I pull back and Meghan keeps her hands on the boobs, pressing together. I shoot a large load that covers her hands, both breasts, Patty's mouth, cheek, chin, and forehead. Meghan pulls away from her hands and looks at the cum.\n\nPatty is excited, \"Mistress, I will clean you up.\"\n\nShe has the look of a rabbit dog, she is crazy for my cum. Meghan looks and then runs her tongue through it and tastes it. She has a look on her face like she is thinking. Then she has a huge smile.\n\nMeghan is surprised, \"Yummy!\"\n\nShe then licks off her hands and eyes Patty.\n\nPatty is annoyed and defiant, \"Don't you dare, this is my cum.\"\n\nAs Meghan is putting on a show, slowly licking my cum, Patty is screaming an unending line of obscenities at her friend who she now disowns and wishes she was never born. I leave the room and come back seconds later.\n\nMeghan looked at me with curiosity.\n\nI smiled, holding up two clothespins and say the word, \"Punishment.\"\n\nNow Patty is the nicest person in the world to Meghan. Meghan takes both and one by one opens the clothespins and then moves them to a nipple and releases, leaving Patty to scream in pain.\n\nPatty spat in pain, \"Oh fuck that hurts you bitch. On the way home, they will find your body in a ditch. Dammit, that hurts. Daddy, I hate you too.\" I shove the panties back in her mouth.\n\nMeghan is quite happy with herself, \"Mistress likes your style.\"\n\nNot one tear did Patty shed. She is enjoying this tremendously, she just couldn't say it.\n\nI push Meghan back on the bed, straighten her out and then get in position to eat her.\n\nI look up, \"Mistress, may I eat your pussy?\"\n\nMeghan is excited and anticipating the pleasure, \"Fuck yes!\"\n\nI use my hands to pull her folds a bit wider, I like better access. Slowly and methodically I start slurping her juices. She purrs like a cat. As I work around, every so often I nudge her clit. When in deep, I hum a song for a bit but then I stop. I give her the sewing machine treatment for a while (zig-zag lapping) and then I slow back down again. She is laboring to breathe but she isn't complaining. I fold out wide my tongue and start slurping from clit to rim to clit.\n\nBack to quick darting tongue movements which drives her insane but still not over the cliff. I take both hands off and move one behind and up her crack so it is rubbing her anus. I use my other hand to rub her clit gently. As I start to hum, I stick the one finger into her ass and the other squeezes her clit.\n\nShe goes silent, she stops breathing, stops purring, stops everything. She is frozen in time. Her body is moving, I can feel the convulsions rippling through her body for a few minutes. Her eyes are glazed over, she is rigid. Slowly, she starts to breathe. Then she relaxes. She is a bowl of pudding right now, no bones.\n\nPatty spits out the panties, \"You got her good daddy, thank you. She really needed that.\"\n\nI get out of bed, Patty has condoms on her dresser, unopened. I start to open.\n\nPatty instructs me, \"Dad, she is on the pill and hasn't had sex in years, you two are good.\"\n\nI am concerned, \"Patty, if she is going to be active, she still needs to use them to be safe from STD's. She might as well start getting used to them now.\"\n\nA very relaxed Meghan speaks, \"Not tonight Jack, tonight I want to feel it all.\"\n\nDejected that I could not make my point, \"Yes Mistress.\"\n\nI ask Meghan, \"Mistress, do you want me to continue or have you tired of your slave for the evening?\"\n\nPatty snorts.\n\nMeghan smiles, enjoying her power, \"Mistress is still unsure of men and needs another lesson. It pleases me for you to continue, please do so immediately.\" Dramatic pause here. \"But go SLOW!\"\n\nI obediently reply, \"Yes Mistress.\"\n\nI get into position; her legs are wide, and fluid is running down her legs. I apply a bit of pressure and start to penetrate the hole. Her eyes go wide. I slow down. Damn this girl is tight. Slowly, I inch in until pubic bones hit.\n\nIt takes a while, but I finally announce, \"All in.\"\n\nA stunned Meghan replies, \"I can't believe you fit it all in. Did it come out my ass? I swear it's poking my lungs. I can't describe it, I am so ... full. Stuffed. It feels good.\"\n\nI quickly pull out, she gasps \"Oh fuck that is good!\"\n\nI push back in again. It's still slow going but much faster this time. I pull out and her face contorts in joy. Back in again and this time faster. It takes about six more times before I can get a steady rhythm going. I am still very slow compared to my other partners, this is Meghan's speed. She is enjoying it so no need to change pace. Over 30 minutes go by before I increase the speed. Now she is making a big \"O\" with her face. She continues to look at me, she is ignoring Patty.\n\nTen minutes more and I speed up again. This is where I start to feel it and my timer has started. She is now grunting with each stroke. Now I mess with her and I speed up and then slow down. She can't match me, I am keeping her off balance, she is getting frustrated. After a few minutes of that, I speed up even more. I am now a piston, in and out like a machine, fast, hard, constant. She is grunting hard, near tears, and near a massive explosion. \n\nI move to my maximum speed and am slamming into her hard. She is straining to hold it together. She is sweating, breathing hard, she arches her back and this time lets out a primal scream of pleasure. She is grunting as the waves of her orgasm are slapping her body, my cock is in a vice. She is grunting for breath. Each breath is an exaggerated breath that she struggles for. Her eyes are open, and it looks like lightning struck her.\n\nShe laughs at the orgasm, daring it to continue which it does. She finally falls limp and that is when I explode into her womb. I am all the way in and my toes curl, my body froze, I am flying for a moment, and then I use every ounce of energy in my body to spurt seven ropes of cum into Megan's pussy.\n\nShe screams, \"Ohhhhhhhh shitttttttttttt, oh shit, oh fuck, fuck me that feels great. That is awesome, I feel every shot of sperm you shot into my depths.\"\n\nNow she is crying uncontrollably. I am exhausted, I can't hold her.\n\nI yell, \"Jackie! Janet! We need you!\"\n\nThey must have been at the door, they immediately come in and cuddle Meghan. They soothe her and hold her tight.\n\nMeghan has caught her breath and is euphoric, \"Thank you, I am ok now. That was intense. How are you people still alive? Can someone untie Patty?\"\n\nJanet smiles enjoying the game we are playing, \"Yes Mistress,\" then starts to untie Patty starting with the legs.\n\nOnce untied, Patty runs to me, jumps up on me, and holds me tight.\n\nPatty is crying tears of happiness, \"Thank you, daddy, she is my best friend and she needed that.\"\n\nShe then rolls over to Meghan and kisses her too.\n\nJackie is relieved, \"Now that you three are safe, we are going to bed now, see you in the morning.\n\nPatty gets up and has me move to the middle of her bed. Meghan moves to my inside and I put arms around her. Patty turns off the lights, lays down behind me, and wrapped me in her arms. We all fall asleep quickly.\n\nThe next day I wake up to Patty and Meghan screaming at each other and arguing in the kitchen. I put my boxers on and end up following Janet and Jackie into the kitchen.\n\nMeghan shouts, \"You are too fucking retarded to not know those are breasts.\"\n\nPatty is playfully shouting, \"Not everything is sexual, that is symbolism for my mommies.\"\n\nMeghan is not in a humorous mood, \"Those are breasts, dork.\"\n\nShe flashes Patty, \"Do these, look familiar?\"\n\nPatty won't have any of that, \"My two mommies love each other very much so it's like their part of each other, s y m b o l i s m, try reading a book someday.\"\n\nI playfully ask, \"Is the sausage my cock, or a mommy that turned golden brown from being out in the sun too long?\"\n\nMeghan is frustrated, \"This is stupid.\"\n\nShe grabbed a sausage and bit half of it off, then ate it.\n\nMeghan smiles, \"Hmmm, that is good sausage.\"\n\nBefore Patty could say anything else, I say, \"Patty, come here!\"\n\nShe does. I push her shoulders down. She fishes out my cock and starts a nice blowjob. Wow, she has improved. I look down at her.\n\nShe responds, \"Research, it's what we do in college.\"\n\nThen she continues sucking my cock.\n\nMeghan announces, \"I am almost done making cocks in tits.\"\n\nWe stare blankly at her.\n\nFrustrated, she says, \"Ok, she wins, pigs in the blankets.\"\n\nWe all smile. After getting a fantastic blowjob; we sit down to breakfast. This is a lot different than dinner last night. Meghan is engaging and part of the conversation. She acts as if she has been part of our family her entire life.\n\nPatty looks at me happily, \"Daddy, can you see it?\"\n\nI play along, \"Patty, I am not sure what you are referring to. Is it that look of a woman well fucked, the look of an amazingly attractive woman, or the woman with confidence that now lights up a room?\"\n\nPatty exclaims, \"Daddy, you nailed it!\"\n\nJanet agrees, \"Meghan, you are an amazingly beautiful woman with a million-dollar smile, but you were shy and didn't stand out. With that twinkle in your eye now, you put even Patty to shame.\"\n\nMeghan is unbelieving, \"No, I am the same girl as you saw yesterday.\"\n\nI correct her, \"Meghan, your wrong. Now that you have come out of your shell, you really are amazing. That smile is hard to look at it's so bright. I really like this version of you, never go back.\"\n\nMeghan laughs, \"You guys are funny, I haven't changed.\"\n\nI knowingly suggest, \"Patty, after breakfast we are going to the mall and do some shopping.\"\n\nPatty and Meghan, \"Oh goodie!\"\n\nJanet and Jackie look at me, \"I am going to make a point, we will be in public, don't worry. We will be home well before dinner. Meghan is making dinner.\"\n\nShe looks at me.\n\nI explain, \"What, you said you can cook. You wore this old man out, you are making dinner tonight.\"\n\nJanet and Jackie did the dishes. I take a shower, get dressed, then wait 45 minutes for Patty and Meghan to get ready.\n\nChapter 14 - Shopping\n\nWe go to the mall and as expected the guys can't keep their eyes off Meghan. We have coffee at an outdoor caf\u00e9 and every table near us is full and the other half is all empty. Meghan is blushing.\n\nPatty mutters selfishly, \"I could be naked, nobody would notice.\"\n\nMeghan chokes on her coffee. Every store we walk into the sales lady walk to Meghan first.\n\nAfter five of those, I ask, \"So, do you believe us yet?\"\n\nMeghan is still not convinced, \"Honestly, I am the same person.\"\n\nPatty is proud of Meghan, \"No, you are not. When someone believes in you, opens to you, and makes you feel special, you gain confidence. You gain an aura. It's how I beat cancer. You don't see it, it's a small difference. Others pick up on it. Yesterday at dinner every question to you was answered as yes or no. This morning you argued with me and you gave my family complete, well thought out answers. You have most definitely changed.\"\n\nSmugly, Patty orders her friend, \"I can prove it to you. Come with me.\"\n\nPatty takes us to a store. No, it was a modeling agency in the mall. They want $15.00 and for her to sign a contract. I can see the hunger in his eyes, he wants her to sign badly.\n\nI play the guys, \"Ok girls, let's go, there is another place a few miles east of here where we can do it for free.\"\n\nThe guy says, \"Well maybe this one time we don't need a fee and contract, let's see what you can do. You two stay here.\"\n\nI protectively demand, \"Look, buddy, this girl was raped once before, if you think I am letting her go anywhere alone, we are out of here.\"\n\nThe guy defensively says, \"Ok, we can work with this.\"\n\nWe go into a back room and she starts flashing him or me that smile she has. Patty makes faces which makes her laugh and they start flashing pictures like crazy. She tilts her head back, to the side, moves her arms, and they are flashing so many pictures it sounds like a fan. Two of them are shooting her. I think they are going to orgasm.\n\nMeghan is floating in a cloud, she is happy, \"Hey, this is fun, nothing to it.\"\n\nThey ask timidly, \"Can we get her into a bathing suit?\"\n\nI answer straight-faced, \"Do you want to be breathing tomorrow? I have seen her body, it is magnificent. Pristine even color, no tattoos, no moles, this girl is nearly perfect. Quickly, try to pick a dozen of the best pictures.\"\n\nThe guys are pretty good, they picked out a dozen super shots with no issue.\n\nAll I can say is, \"Oh my God she is beautiful.\"\n\nThe guy is excited and says, \"I can offer her a million-dollar contract for four years right now.\"\n\nI flatly tell him, \"That girl is going to be on a front cover of a magazine for the next ten years. You know it. Look at that smile. You send those photos to New York, you have them look at those pictures, then you call her in three days. She will give you her number. You call her before three days from now and she goes somewhere else. I don't want you bothering this girl. Do you understand me?\"\n\nThe dude says, \"Yes sir, we will not call her before Tuesday at 2:30 PM. We will have a suitable offer at that time.\"\n\nI graciously reply, \"Thank you, gentlemen, we look forward to your real offer.\"\n\nWe walk out and head straight to the car.\n\nPatty screams at me, she is pissed \"What's the matter with you? You turned down ONE MILLION DOLLARS!\"\n\nMeghan defends me, \"Your dad is right. Did you see those pictures? They are better than half the magazines on the shelves.\"\n\nI suggest, \"Meghan, when we get home, you go use Patty's computer and find yourself an agent. Then call your parents.\"\n\nMeghan sadly informs us, \"After the incident, I don't talk to my parents. The boy, that was actually my brother and they blame me.\"\n\nShe starts to cry.\n\nI hug her and offer an apology, \"Meghan, I am sorry, I didn't know. Skip the parents but still get an agent. He will know how to get you the maximum. Check the references.\"\n\nWe get home and around seven they come down and are prickling with happiness. Meghan sees me and runs to me and holds me in a big hug. She is crying again, all out bawling. She is trying to speak but nothing is making any sense.\n\nPatty proudly talks for her, \"We found out that because we didn't sign the papers and pay $15, we own the pictures, so we had them sent to several agents. We spent the afternoon on speaker talking to several. After they saw the pictures, they are really interested. We talked to references and quickly dismissed two. We don't know what she will make but dad, you are so damn smart.\n\n\"One million was way under what they expect. Two agents are flying here tomorrow and will meet her on campus to discuss her future. Had she signed that initial contract and paid them $15, they would have had her at $40,000 per year for four years.\"\n\nI am beaming with pride for Meghan, \"Meghan, I am glad for you. You're a great kid and I wish you well. This is your life and you will have to make the decisions, but if you want our support, I am sure any of us will go with you as moral support. I have every confidence in you that it isn't needed but if it makes you feel better, we are there for you.\"\n\nPatty simply demands, \"I am going with her, like it or not. She is my best friend.\"\n\nMeghan giggles, \"I am your only friend.\"\n\nPatty also giggles, \"Shhhh.\"\n\nI suggest to all, \"How about we go out for dinner, it's a bit late?\"\n\nMeghan isn't done yet, \"Not so fast Jack, I want you there too. You have given me sound advice so far, not going to stop listening now.\"\n\nI try to be realistic, \"Look, Meghan. I am a mechanic, I don't do contracts and deals, I am a simple man that works hard for a living. You're a smart girl and in the end, these are your decisions. I won't do that for you.\"\n\nMeghan pleads, \"Maybe not but I will be more confident with you there.\"\n\nPatty seals the deal, \"We will both be there for you.\"\n\nChapter 15 -- Dinner\n\nJackie takes Patty and Meghan's hands, \"Let's go get ready.\"\n\nJanet follows. I sit down and watch ESPN, it's going to be a while. Thirty minutes later they all come down in above the knee strapless floral sundresses. I instantly harden as none of them are wearing a bra. I know this because I can see four sets or brown areolas and each has a set of hardened nipples. Were they playing with each other? Ok, which restaurants are darker in the seating area?\n\nThey all get into my big Benz through my door. As they crawl in on their hands and knees I notice none of them are wearing panties and they are all recently shaved. Their all in with Jackie and Janet in the back, Meghan, and Patty in front of me. \n\nI take them to a fancy French restaurant a bit from home where hopefully nobody will know us. This is a place I would take dates because it is dark, they have candles on the table, little lights above, like an outdoor European caf\u00e9.\n\nThe young hostess twinkles when she sees me coming in but then she deflates a bit when Janet and Jackie take me by the arm, further deflates when Patty brushes off something on my shoulder and then looks sick when she sees Meghan holding Patty's hand. I had to chuckle to myself.\n\nWe have been seated away from the other people in one of the smaller rooms. No doubt a result of the way the girls look. Meghan helps with the descriptions, she has studied French and French cooking, she is in her element. We are all lost. I usually just order the special and hope for the best.\n\nThe waitress is a college girl, cute but nothing special. She did have a nice smile, one that everyone noticed immediately. They seem to think she is only smiling at me. I didn't see it the same way, so we have fun arguing about it. My theory was the invisible aliens.\n\nWhile discussing the aliens, I hear squishing sounds from Janet and Jackie. I stare at them like a parent that caught the three-year-old doing something bad. They both give me the innocent look.\n\nPatty is mad, \"Oh come on, the hostess can hear you two.\"\n\nWhile waiting for our orders Janet and Jackie go to the washroom. I am facing the washroom, they have their backs to it and I have Patty and Meghan on my sides, they can see Janet and Jackie come back to the table. On their way back, they looked both ways and pull up their dresses past their waist. All three of us get a spectacular view. The waitress then serves the rolls and salad.",
        "Patty and Meghan go to the washroom and came back. I am staring so Jackie and Janet turn around. Meghan lifts her dress up past her breasts. Not one to take second place, Patty takes her dress off and doesn't put it back on until she sits down. I am instantly rock hard.\n\nAfter soup, Meghan goes under the table, pulls my cock out and gives me a great blowjob. She made enough noise that the girls knew what she is doing. My face contorts with pleasure which makes them giggle. I blow as the waitress enters the room to serve dinner. She looks for Meghan, we all looked at my lap then back at her, she blushes and walks away quickly.\n\nThe meal is great. After dinner, we order coffee and some of their awesome bakery. Janet pulls her top down so the breasts are sticking out. She leaves them like that. Jackie quickly follows. Meghan and Patty are a bit nervous but they too matched by pulling their dresses down to reveal some spectacular tits.\n\nThe waitress comes back with our orders and Patty and Meghan quickly start to pull up the dress but realize Janet and Jackie didn't, so they don't. How cool. The waitress almost drops the tray when she notices the girls attire. The waitress is very distracted but does her job. She announces each dessert and what makes it special. Mine has a bowl of hot chocolate for dipping cake in.\n\nThe waitress asked, \"May I suggest...?\"\n\nI am clueless, so I say, \"Sure.\"\n\nShe uses her pointer finger and dips it in my chocolate then uses it to paint Patty's areola with the chocolate. She then smiles, bends over and licks the chocolate off with her tongue, then bites a bit and pulls back on her tit so it pulls out before releasing her nipple.\n\nShe says, \"Oh my, those are awesome.\" She then walks away with a smile on her face.\n\nMy chocolate never did touch my cake. They all want a turn and they get it. Jackie is last and saw too much, she orgasms when I pull on her nipple. The waitress comes back with the bill and discretely put her panties into my pocket. She then moves my hand under her dress to show me she is wet.\n\nI curl my fingers and turn them around while searching for her g-spot. I knew I found it when I feel her orgasm. It was a small one, she stays on her feet. All eyes go to her with a giggle. The waitress turns beet red.\n\nI left a $100 tip. The girls cover up and we leave. The ride home is noisy as they all talk about the night's mischief. It was a nice dinner with a great floor show. They all take their dresses off in the car. A few nosy people get quite the show on the way home. They exit the car naked, go inside still naked, and then nobody put clothes on that night.\n\nPatty takes my shorts, Meghan gets my shirt, Janet gets the underwear, and Jackie gets socks and shoes. They decided for me. We drink a bottle of wine and then Jackie and Janet go to bed, they are too horny from the evening and need some alone time. I go to my bed, Patty and Meghan go to Patty's room. I fall asleep.\n\nTwo hours later I am woken up. Patty and Meghan are in my room, still naked, and the smell of sex on them.\n\nPatty emotionally explains, \"For two hours yesterday, this bitch has me tied up while she has mind-blowing sex with you leaving me horny as fuck. I go all day with no relief. Dad, I need you in me and I want it, no I NEED it now. Hard and fast. Any position, any style as long as you fuck me hard and fast.\"\n\nI slowly get her up into the doggie position. I move my cock to her entrance and slowly plunge in. She is juicy, so I slip in easily. I have about five speeds for fucking, I go straight to number four and am slamming away into my daughter with sheer joy.\n\nMeghan's eyes grew wide as she sees how fast we go. I know Patty's body by now and I know how to use it. She knows my speed and quickly adjusts. After our night, it doesn't take long, and my toes are curling. Patty is overdue for her orgasm. She is breathing hard, but I bet she has had many orgasms this evening. As it turns out, she is waiting for me, she is trying hard to hold back, so we can orgasm at the same time.\n\nOn my first spurt, she releases her orgasm and collapses on the bed. Her ass is still in the air as I continued shooting my load into her. When I finish, she is still in the throes of her orgasm. I collapse next to Patty.\n\nMeghan is shocked, \"Oh my, that is so intense, and it was just ten minutes. I can't imagine Patty watching for almost two hours. That must have been torture, we need to do that again.\"\n\nShe turns off the lights, gets behind me, and wraps me in her arms as I wrap Patty in my arms. We quickly fall asleep.\n\nThe next morning, we all sleep in late. We grab fast food on the way to school. Patty and Meghan drive together and I follow. The school's library provided a conference room where we can talk. Each agent has two hours then we will further check references, finally Meghan will decide. I say almost nothing. \n\nMeghan asks the right questions and both agents seem nice and are willing to discuss successes and failures. We talk to several famous people about their experience. In the end, Meghan is torn, she likes them both. Patty has her look at the Pros and Cons of each and again even.\n\nI speak up, \"I noticed a common theme in both sets of clients. The first set mentioned he was worth every penny the second set never mentioned money. He seemed more interested in the long term and client happiness than on making money. There are times in life when the better paying contract isn't the best one for you. My guess is the second one is wiser in that area.\" They are both called in, Meghan thanked both, then signs a contract with the second.\n\nI get up to leave.\n\nMeghan looks sad, \"Aren't you going to stay and help?\"\n\nI explain \"Meghan, you now have an expert on this type of stuff. Take his advice but always know what you agree to. When your car needs fixing, come to me, when you need an operation, find the best surgeon, and when you need a modeling contract, listen to the best agent.\"\n\nI give her a big hug.\n\nI was brimming with pride in her, \"You are going to be just fine. Follow your heart and have fun. You are a beautiful woman, but most importantly, you are a wonderful person. If you never lose that, you will always be happy. I have work tomorrow and two beautiful women that are horny as hell waiting for me. I need to go.\"\n\nI kiss both girls' goodbye and leave them with the agent.\n\nThey point me in the direction of the bedroom as soon as I get home and we made love all night.\n\nChapter 16 - Ouch\n\nFour years later and Patty has just graduated and is working in the ER of a local hospital. She is near the top of her class and is very proud of her work. Meghan never did go back to school and has had a very successful modeling career and is doing just fine.\n\nWe seem to be her adopted family as we see her for the holidays. She normally has a boyfriend with her, but she still likes to see us. Patty and she stayed good friends but with her travel schedule, it was hard. She bought a place near the college so they could room together. \n\nOn the fourth of July, everything shuts down. Meghan is off in a foreign country working so it will be just the four of us this time. I go to work and finish up some paperwork. With nobody around, I get a lot done. On the way home I stop at the store to pick up charcoal, steaks, and a few other things for dinner tonight.\n\n+++++\n\nPatty's point of view:\n\nI am at work. The ER is always hoping, no time to think or worry about things. You lose track of time and suddenly, it's time to go home. Being a holiday during the day, it is easy although we were short-handed. Tonight, that will be a different thing. They have me on so a couple of others can come in tonight when it gets busy. We get a code red that a car was t-boned by a drunk and is in-route coming quick. We get the long list of injuries and vitals; this guy is a mess. When they bring him in, my heart stops, it is my dad.\n\nImmediately I start screaming and get hysterical, \"That's my dad!\"\n\nOne of the ER docs grabs me hard, gets in my face, \"We are short-handed, and you are the best dam ER nurse in this hospital. I need you to pull yourself together. You are his best chance to live or should I get Ryan?\"\n\nRyan is known for being the worst nurse. I composed myself and start barking out orders. I let the training take over. There is a time for crying and that will be later. My dad is a mess, in the ER our job is to stabilize and that we did. In this case, he needs surgery right away, so we do our part then send him on.\n\nSome doctor, don't remember which one, tells me to stay with my dad so I do. During surgery, I can't enter. I take out my phone and call Jackie, give her the news and she will be here quick, he is in serious condition. Next, I call Meghan and get voice mail. I have no idea what I said but I babbled hysterically until the message ended. I call Uncle Don and get his voice mail. I expected that he is on some small island with some old war buddies for the week.\n\nJanet and Jackie arrived about the same time the police do. They need some questions answered. Yes, he owns the car, no, he was not drinking, yes, he is insured, no, no people that hate him. They explain that some guy was drunk, didn't stop, and when dad turned on a green turn light, the drunk hits dad's car.\n\nJanet, Jackie, and I are a mess. The surgeon comes out and speaks directly to me. I then translate it to Janet and Jackie. Dad is \"stabilized\", some major injuries are no longer an issue which will help keep him alive, but the brain injury is a big deal.\n\nThis hospital doesn't have a surgical specialist with the type of experience needed so they are checking with other hospitals. Part of the problem is he can't be moved, he is deteriorating, and the prognosis is not good. To make it worse it looks like insurance won't pay because it's not typical surgery and his chances of survival are small.\n\nA young man walks up to us. He is wearing a Michael Jordan jersey, white shorts, and gym shoes. He is about my age. He has three phones in his hand and a blue tooth headset. A walking geek, weird. How do I know him?\n\nA confident Michael says to me, \"My name is Michael; Meghan's agent monitors her phone calls. He heard what happened. I am part of his group and live nearby. What do you need?\"\n\nI explain the situation, the type of surgeon we need, and time is running out. I can forward all medical records to anyone. I also explain the insurance issues and his inability to move.\n\nMichael move out of the area, he makes calls, seems to put someone on each task. Then he coordinates between the people using phone and text messages. This guy is a master at communications, he smiles at me as he continues and turns his back to me, so he can concentrate.\n\nAbout 20 minutes later Michael announces, \"I need you to send all medical records to this email address immediately. In four hours they are to start prepping your dad for surgery. In three hours have x-rays and vitals taken and post them in the OR. Go! I will fill in the rest when you are done.\"\n\nI first send all information via email. I then explain to the hospital what they need to do and when. They listen, organize, and plan to do exactly what I ask.\n\nMichael is calm and organized, \"We tracked down one of the top surgeons for this. He was suggested by two others. He is bringing his team with him. We will have a private jet waiting at the airport for them. A helicopter will bring them here. He told me to tell you not to worry. He is the best and he won't let your dad down.\n\n\"We are organizing a plane for Meghan. Someone is on the way to her and will wake her up. Within the hour she will be on a plane. We all know Meghan's story, I was authorized immediately to do whatever it takes to help. That's what I do. I have lunch on the way, you all need to eat and keep up your strength. I will continue to monitor and coordinate. I will be out of the way but know that I am near. I texted all of you so you can reach me if you can't see or hear me.\"\n\nAll I could do was hug him and cry. The nurse tells me dad is in intensive care. We go up there but can't go in. I know the nurse in charge, I want to see my dad. She gets me and takes me to where I can see him. Several nurses are going back and forth, they are busy.\n\nAnn is being supportive, \"You will be in the way, this is my best crew, let them do their work. If I was in the ER, you are working on my dad. Up here, they work on your dad. Ok?\"\n\nI hug her and go back to Jackie and Janet. From a nurse's station, I get the latest updates and forward them to the email address I have.\n\nMichael has already cleared the liability and other issues for a surgeon to operate in the hospital. I hear the helicopter land, see a bunch of people walk by, and then say they are taking dad. We move to a different area for the surgery. During the surgery, Michael forces us to eat again.\n\nFinally, after six hours of surgery, the surgeon came out with a smile.\n\nThe confident and happy surgeon says to us, \"You must be Patty, Janet, and Jackie. Patty, I told you I was the best. I told you not to worry. Because we got here so quickly, it was easy. They are putting us up in a nice motel and I will check on your dad tomorrow before I leave.\n\n\"I expect a full recovery. It will be a while but he will be fine. I want you three to go home and get some sleep. Nothing is going to happen until noon tomorrow. Be here at eleven and if all goes well you can see him at noon.\"\n\nAgain, my typical response is a hug and more crying.\n\nWe find Michael on the way out, \"If anything happens I will call you. I can't leave until the crisis is over. There is a car here to take you home and there will be another at your house at 10:30 AM tomorrow to bring you back tomorrow. Now beat it!\"\n\nWe go home, we all sleep in the same bed, nobody wants to be alone.\n\nThe next day at 10:30 AM, we walk out, and a car is there. It takes us to the hospital and Michael has food for us.\n\nA knowing Michael asks, \"I bet you didn't eat, did you?\"\n\nWe all shake our heads no. We ate what he had. After we finish, Meghan walks in. Her makeup is a mess. She runs at me, we hug, and we both cry.\n\nMeghan is clearly shaken and in tears, \"I came as soon as I found out. Michael has me up to date. We are waiting for the doctors.\"\n\nMeghan fills us in on her busy life, the boyfriend of the day, and all the things she had done recently. I know because we talk daily but Janet and Jackie have no idea she is such a celebrity.\n\nAt noon we are called into intensive care. Today is a lot less chaotic, a nurse is nearby, monitoring things. It is at that moment I realized I missed my shift and didn't call in. I start to get hysterical again. Meghan calms me down, Michael has already taken care of it. Dam her people are good. Dad is asleep, but I can hold his hand. Janet and Jackie hold the other one. We see a smile on his face and I turn all warm and fuzzy.\n\nI say to Meghan with tears in my eyes, \"You saved my dad's life. I can never repay you. With what your people did here, it will take us years to pay you back.\"\n\nMeghan is shocked, \"You are kidding me, right? Your worried about paying me back? You think there is any way the girl that had dinner with you that first time gets even that $40,000 modeling contract? No way. Your family made me.\n\n\"It was a girl in Los Angeles that finally figured out how I got that awesome look for those first photos, it was the look of a well-fucked woman she called it. Mix that with the new confidence you all gave me and that is what I am today.\"\n\nMeghan explains, partially in tears, \"Patty, I have over $60 million in the bank and investments. Who do you think is directly responsible for that? Your dad fucked me good, you all gave me the confidence I needed. The negotiating your dad did at the agency and to not sign that million-dollar deal blew my agent away.\n\n\"I don't know why you picked me out at that party, but I owe everything to that one act of kindness. My life is awesome. If it costs a few dollars to care for my extended family, it's nothing. I would spend every dime I own. I love you, your moms, and especially this man.\"\n\nNow she is crying. Dad spent three days in intensive care, then a week in a private patient room. We pretty much lived at the hospital. Day three later he wakes up and even though he can't speak, he made eye contact with each of us and winked. Mostly he slept. The dealership brought flowers, but I think it was mostly for us.\n\nMeghan canceled some work and rescheduled others. She is not leaving. I was given all the time I wanted. They knew my story of how I survived cancer at this hospital and how my dad helped. I would have quit if needed but they didn't want that.\n\nDays turned into weeks. Meghan and I are back at work. Jackie and Janet take care of dad when I wasn't around. He got better and eventually back to normal. After two months, he was back to work although he still wasn't 100%. That could take up to a year.\n\nChapter 17 -- Finally\n\nJacks point of view ...\n\nIt is July 4th, one year after the accident. They will not allow me to leave the house today. I wake up and I am practically wrapped in bubble wrap. How the hell did they do that? Meghan and Uncle Don are coming over since I am not allowed to leave the house. Every edge in the house has bubble wrap and hunting orange tape holding it in place. There are three chairs by the edge of the bed and they are filled with women I know.\n\nJanet is unhappy, \"Jack, this has gone on long enough. You need to make one of us an honest woman. One of us needs to be in charge for next time. Six years ago, you made promises and have not fulfilled them.\"\n\nTheir right, I need to do something, \"Ok, soon, I promise.\"\n\nPatty is on her way to the airport to pick up Meghan. Jackie and Janet take advantage of the situation. First, they take pictures of me. Then they help me escape the bubbles. They are in a playful mood today and I am OK with that. They both strip off their clothes and climb on the bed. Janet stands on the bed then lowered herself, so I can eat her snatch.\n\nJackie lowers herself on my cock, but to my surprise, I am going in her rectum. She doesn't do that often. She is tight. I use my hands to play with Janet's brown eye. I put two fingers in and try to stretch apart her brown eye.\n\nJackie is going at a nice rate, she is sweating and breathing hard. She is taking all of me inside of her, no cheating. I also noticed she is counting to twenty. At twenty she switches holes. Oh my, what a difference. She has never done that before. Obviously inspired by the island typewriter but with a new twist, solo.\n\nAfter another twenty, Janet and Jackie switch positions. I am now eating Jackie's pussy and pounding Janet's ass. This is cool, nothing I have even heard of before. These women are amazing, they obviously planned this, just for me. I start to get teary-eyed, not crying though.\n\nHappily, I say, \"I don't think I tell you two enough how much I love you. Always have, always will.\"\n\nJanet is still annoyed with me, \"If you really love us, marry Patty.\"\n\nDefensively I answer, \"I have been thinking about it. I kind of did promise her.\"\n\nJackie was not in a playful mood, \"Not kind of.\"\n\nI shoot my load into Janet, Jackie squirted me with her orgasm.\n\nI suggest, \"We need to take a shower, they will be here soon.\"\n\nWe all get up and walk to the shower. I stop at the toilet. They pull me into the shower. Janet sits on the floor and pulls me to her. She rests my cock on the lips of her mouth. I started to urinate. As her mouth fills, she used her lips to clamp down on my cock as she swallows. She releases her lips, mouth fills, and she swallows. After that, she redirects my stream to her face and chest.\n\nWhen I finish Jackie pushes me against the wall, gets on her knees and uses her hands to pull open my butt cheeks. She uses her tongue to rim me. Most unusual experience. She isn't done with me, she pushes her tongue inside my rectum and does a rim job from the inside. Now that is kinky for her.",
        "Janet turns the water on and adjusts to a warm shower. She pulls me to her and we make out for a while. I am passed to Jackie and we make out for a while. The two of them now scrub me head to foot making sure every part of me is clean. Jackie takes a razor and shaves me. Nobody has ever done that to me before.\n\nJackie explains to my surprised face, \"We have been practicing on uncle Don.\"\n\nThey dress me in a pair of boxers and then hunting orange shirt and pants. They can see me from the space station when it passes overhead.\n\nJanet smiles, \"Nobody is going to miss you today.\"\n\nI want to say, \"They didn't miss me last time\" but I say, \"They will, they will be blinded, this is so bright.\"\n\nThey smother me in sunscreen, something like SPF one million. I am taken outside and there is a big oversized folding chair for the beach and it has a huge umbrella. I am put in the chair then a dog collar is attached to my leg. A chain is locked to the collar on my leg and a stake in the ground. I can't reach the pool nor the grill. More pictures are taken. They must have worked on these ideas for weeks. A first aid kit and fire extinguisher round out the look for the area.\n\nMeghan and Patty join us in the backyard. I stand up and move to them but my chain prevents me from going far enough. All four women drop to the ground laughing hysterically. I cross my arms. They will come to me ... eventually. Meghan is the first to rush me. I have not seen her for about two months now. If anything, she is even better looking than before. Wealth agrees with her. She gives me a steamy kiss like always and a big hug. Patty is close behind and repeats the kiss and hug. She can barely not laugh at me.\n\nI explain the look, \"You moms had fun this morning.\"\n\nWe have breakfast, bagels, and a fruit salad. Meghan tells us about her travels. She continues to stay busy although she knows that her industry is short lived and in a few years her demand will start to decrease. She is set financially for life, her agent forced her to live on a budget and invest well.\n\nMeghan announces, \"I gave my agent a bonus today. If it wasn't for them, we would probably be standing next to a gravestone right now. You know, it's funny. I was leaning towards the other agent, he was a bit cheaper. It was Jack's advice that changed my mind and saved his own life.\n\n\"I still think back to you not wanting to pay the $15.00 and sign a contract. My life would be so different right now. Of course, Patty had to make friends with the biggest dork first. She was the hottest woman at the party and she talked to me of all people.\"\n\nShe continues in awe, \"I was floored when Patty offered me her dad and that her two moms approved. Of course, I didn't want her dad, my dad was partially responsible for my issues. She assured me hers was different. She was right, after spending dinner and playing those games, I realized how caring and generous he was. Now I sit here blinded by his shirt and slave to a man because he can't move 10 feet.\"\n\nEveryone giggles.\n\nPatty remembers fondly, \"I don't know if you heard him, but that night several times he called you the girl with a million-dollar smile. I swear it was harder to get him to bed than you though. He is so protective.\" \n\nJanet suddenly remembers, \"Speaking of games, I have one set up. Sorry, Jack, this is a girl's game, sharp points are involved. Too dangerous. Stand behind this line, throw one dart at the board, break a balloon and a tag inside the balloon has instructions. Follow the instructions.\"\n\nPatty is up first, she aims and hits a balloon.\n\nShe retrieves the tag, \"Fuck Jack 5 minutes in missionary. Oh, this type of game!\"\n\nI get up and pull off my pants and boxers. Patty strips on her way to me and lays down in the grass.\n\nJackie yells, \"Start!\"\n\nI might be able to get her off in 5 minutes. I slam into her hard and immediately start to go at my fastest and hardest speed. Patty responds quickly by moaning and breathing hard. She won't hold on, she will orgasm quickly. Three minutes in and sure enough, she orgasms. Time isn't up so I keep going. She is still enjoying her orgasm as I continue slamming into her.\n\nJackie smiles and says, \"Time.\"\n\nI stop.\n\nMeghan tosses a dart, hits a balloon and retrieves a tag.\n\nMeghan reads, \"Give Jack a two-minute blow job.\"\n\nMegan kneels in front of me.\n\nJackie yells, \"Start!\"\n\nTwo minutes won't get me off but it sure will be fun.\n\nJackie yells, \"Stop.\"\n\nJackie got a two-minute kiss. Patty got a five-minute kiss. Meghan got a five-minute doggie, an orgasm, and the jackpot of seven ropes of cum. Janet got five minutes in the ass. Jackie got two-minutes of missionary fucking. Patty got two-minutes up the ass. Janet got five minutes of Jack playing with her tits. Patty missed a balloon. Meghan got two-minutes of Jack playing with her tits. Janet got two-minutes of fucking in doggie position. Jackie hit the last balloon which was a five-minute blow job.\n\nIt was kind of fun for the variety. It was also unsatisfying in that I didn't cause many orgasms. Hmmmm.\n\nI made up my own rules, \"Time for prizes. Line up in front of me.\"\n\nThe girls line up.\n\nI instruct Patty, \"Patty, your first, lay down and spread your legs.\"\n\nI proceed to leisurely lick her to orgasm. I use my hands on her clit, hum, blow warm air in the hole, lick quick, lick slow, go deep, bite the edges lightly, slurping her juices. Sure enough, she can't stand it and orgasms hard. They roll her to the side so Meghan can get her reward. I do the same thing and the results are predictable, she orgasms as well. She too rolls out of the way.\n\nJackie is next. I pull her up a bit and use my tongue to stretch her inner lips open. My fingers go to her clit and I rub it good but not too good. I want her to last longer. I use quick sharp stabs of my tongue to stimulate her lips. Then I run my teeth along the inner lips followed by a flat tongue from clit to rim to clit. That was enough, she orgasms into oblivion.\n\nJanet is last and this time I am in slow motion. I tease her, she wants more. I go very fast hitting all parts of her hole and do the big around the world \"O\" followed by humming. She orgasms as well only she doesn't stop, it continues. I hold her tight and can feel the twitching of her body. When she wakes, she kisses me.\n\nI tease them, \"I would make lunch but that seems to be off limits for me, too dangerous.\"\n\nJackie laughs, \"Yes. Too many sharp objects in the kitchen and the grill is hot. Go sit in your chair, we will make lunch.\"\n\nThey must think this is funny, however, they are doing the work, why complain? Meghan comes over to me and sits on my lap. I play with her nipples.\n\nI am curious, I inquire, \"No boyfriend?\"\n\nMeghan is open and honest with me, \"I really don't have a boyfriend. After I started modeling they never could get that same look I had when in the mall that first time. It wasn't until they figured out it was that well-fucked look that I was missing. Since then they find guys that are good in bed or cute. None of them satisfy me like you did. They are fun, good enough for the shoots, but I can tell the difference.\" \n\nI complement Patty as well, \"Did you forget that Patty was making you laugh?\"\n\nMeghan is amazed at herself, \"Yes I did. We will add that as well. Thank you.\"\n\nI reply, \"I can't tell you how hot you were at that shoot. The way they were looking at you, they knew you were special. I have a question for you.\"\n\nShe gives me a quizzical look.\n\nI ask a simple yet deep question, \"Are you happy?\"\n\nMeghan is confused, \"Happy now?\"\n\nI continue, \"Are you happy at work? With traveling? Are you happy when you go to bed at night?\"\n\nMeghan is curious, \"You didn't ask if I was happy with my money?\"\n\nI smile, knowing I am imparting wisdom, \"Here is a secret for you. Money doesn't make you happy. Money only makes life easier. I was just as happy when I met Patty, Janet, Jackie, and we only had $20 in my pocket. We were going to Goodwill so I could get clothes for interviews. Those three made my life full, complete, I was happy. I was dirt poor as well so don't get me wrong, money has improved our life considerably, but it didn't make me any happier. I was already the luckiest guy in the world.\"\n\nMeghan provides a thoughtful answer, \"Professionally, I love my work, what I do, where I go, and how the business works. I truly love what I do. At night when I lay in bed next to some guy that tried to rock my world, I realize he failed.\"\n\nI feared that answer, \"Meghan, I am sorry then. Sorry I ever made love to you.\"\n\nMeghan gets defensive, \"Hell no, I am not sorry. It's not your fault I can't find a guy like you.\" I try a different approach, \"Maybe that is where you fail. Bill can't be Jack, only Jack can be Jack. Let Bill be Bill and see if he is a good Bill.\"\n\nMeghan smiles at me, \"Maybe I just need to settle for a bit of Jack and be happy.\"\n\nWe just entered a danger zone, \"Woah, you need to speak to three other women first, adding you will cut their times down and they may not like that.\"\n\nMeghan knowingly hints, \"What if they already said it was OK with them?\"\n\nI am honest with her, \"Just so you know, they rule my world. You don't need my permission. Whatever keeps them happy keeps me happy.\"\n\nMeghan asks, \"Do I make you happy?\"\n\nOh wow, be careful Jack, \"Meghan, to me, you are more than just a pretty face and great in bed. Like Jackie, Janet, and Patty, I like spending time with you and enjoy your company. Those three make me happier than any guy has a right to be and yes, you have that same effect on me.\"\n\nMeghan starts a new line of questioning, \"Are you attached to this house?\"\n\nI look at the stake and chain, smile, \"At the moment, I literally am attached to this house. Shackles on my leg, a chain, and a stake in the ground, so yes, I am attached to this house.\"\n\nMeghan laughs, \"What if we all lived in a different house?\"\n\nI dodge the question, \"If Janet, Jackie, and Patty say ok I am good. Remember, I almost died frozen in a park. I was homeless, jobless, and only $20 in my pocket. Three angels rescued me. I would live in a dirt house if those three were there. If you all want to play house somewhere, fine with me.\"\n\nMeghan is now looking inward and is scared, \"How do I know I won't ruin everything?\"\n\nI respond, \"How do you know unless you try. Might you make everything better? We do know that because of you I am still alive. To me, that's a pretty big thing. I like breathing and enjoying the company of four beautiful women.\"\n\nMeghan blushes, \"I didn't do that.\"\n\nI make her understand, \"Patty could not make a surgeon appear out of thin air. Janet and Jackie could not fly them in on a private jet. Your lifestyle saved my life. That gives you lots of clout around here. You saved the boy. Now they are childproofing everything, so I don't get hurt again.\"\n\nI pull on my chain as proof.\n\nMeghan is shy again, \"How do I ask them?\" I laugh knowing how easy this will be, \"Well, since their all behind the bush listening to us, I think you already did.\"\n\nJanet ran to Meghan and gives her a warm hug. Jackie is close behind. Patty came to sit on my lap.\n\nPatty wants the truth, \"Ok Meghan, spill the beans, what do you really want?\"\n\nMeghan shyly replies, \"I am still in that tiny house you and I lived in. I spend more time here than at home. I was thinking that maybe we buy or build something bigger for all of us. Something that allows for kids. Something that includes me.\"\n\nShe looks down, unsure of her request so she is trying to hide. Her shy side appearing again.\n\nJanet is exuberant, \"Grandkids?\"\n\nJackie is excited as well, \"Oh yes, grandkids!\"\n\nI smile, \"I guess they like the idea. I like this house because of the special assets.\"\n\nJackie looks confused, \"What's so special about this house?\"\n\nI answer with a big smile, \"Janet, Jackie, Patty, Meghan.\"\n\nWe have a late lunch. Between the games, the talking, and their inability to work together in the kitchen, we have a late lunch. The Margaritas are nice. Meghan brought me out a fancy cloth bag, it looked like the kind that would hold a bottle of Crown Royal, but the color is different. I am intrigued as is everyone else.\n\nMeghan knowingly explains, \"Per your request. Yellow first.\"\n\nNow the girls are really interested.\n\nI knowingly ask, \"Well at least someone bought me presents for my one-year anniversary. Did you all forget?\"\n\nThey all smirk at me.\n\nI smile at Patty, excitement in my eyes already, \"Patty, you first. Come a bit closer, I don't bite. I had Rachel pick up a trinket for you on her travels.\"\n\nI pick out a glass ball that can twist open. It's a bit larger than a baseball. It's all yellow on the bottom and gradually goes clear at the top. I hand it to her. Inside is a gorgeous wedding ring with blue sapphire stones amongst some diamonds with a large diamond in the center. It is way better than even I had expected.\n\nI quickly slip off the chair and to my knee, \"Patty, will you marry me?\"\n\nShe stands silent. She stares at me.\n\nPatty is in shock, \"What did you just say?\"\n\nLike a parent talking to a small child, \"Patty, ... will ... you ... marry ... me?\"\n\nShe is shocked, Janet and Jackie are holding their breath.\n\nI am guessing she is having second thoughts so I eek out, \"Okkkkkkk, I thought you ...\"\n\nPatty tackles me. She is crying like a baby.\n\nI tease her, \"I didn't hear an answer?\"\n\nPatty is crying hard with happiness, \"YES! YES! A million times YES!\"\n\nI assume Janet and Jackie started breathing again and they two rush me and try to hug me, but Patty is smothering me.\n\nI suggest, \"Show them the ring.\"\n\nThey all get up and look at the ring. The ball unscrews and she can see it better and holds on to it. While they are gazing at the stunning ring. I pull out two blue balls, tap Jackie and Janet on the shoulder, hand them each a ball, get down on my knee again.\n\nI then say proudly to both, \"Jackie, Janet, will you two be my pretend wives?\"\n\nThey handle it better, they both say yes and then they tackle me.\n\nTheir rings have Emeralds in them and are just as nice. They are crying and holding me. Meghan is sitting at the picnic table. She is happy for the girls, but I can see she is devastated, I had not asked her to get one for her. Everyone else saw it as well. I walk over to her and sit at her side. I give her a hug.\n\nI whispered into her ear, \"I know it's not much of a consolation gift, but I got you one of these.\"\n\nI had palmed the fourth ball and drop it into her hands. It is a pink ball.\n\nI got on my knee, \"Meghan, I don't know if you want this or not but if you do, would you like to be a pretend wife as well?\"\n\nI thought the other girls could cry but they have nothing on Meghan. She has one of those big booming sob cries and it instantly changes to sunshine and a smile that is wider than her face. She crushes me to death she is so happy. I can see the absolute surprise on her face.\n\nI explain while she is crying, \"When you told me, you ordered the three rings for me I called them up and asked for a fourth but to have it overnighted to me here at the house when it is done. I find it outside in the mailbox!\"\n\nI am sad and apologize to everyone, \"I am sorry I waited so long. Meghan has been helping me pick out a jeweler, stones, and the settings. She also had them make the balls. I thought they might make a nice keepsake.\n\nPatty smiles, \"I think now is the perfect time for our second game. We will be right back Jack.\"\n\nI am sitting on the picnic table and all four go inside and come out with a decorated brown shopping bag. This one has clowns and monkeys on it. Jack, we need you to sit on the ground, we can't have you falling. I get up and sit on the ground. This could be fun. Then they bring out a blindfold, now I am nervous. After all, I have done to them, how can I say no?\n\nThey put the blindfold on and then I think it is Meghan that pushes me down and starts to kiss me. This is pretty good. However, the next thing I feel is wrist restraints being put on my wrists and one on my leg. They pull the limbs tight and use steaks to lock me in position. I gave them token resistance, but they have been very good to me, how can I not trust them now?\n\nThey each start at a corner and delicately kiss my toes or fingers and then start kissing towards the center of my body. The light kissing is like tickles so I squirm but I can't move much. It's worse because of the blindfold, I can't see what they are doing or what is next. One starts kissing my face, one goes to my nipples, one goes to my balls, and one to my cock. I am on stimulation overload.\n\nPatty admits, \"We tried this last night with us four and it was awesome. Meghan came in yesterday, she was at a motel.\"\n\nMy dick twitches at that. They start switching up. The one kissing me moves to my nipples, nipples to balls, balls to cock, and cock to kissing. I expect they will swap a few times and they do. When Janet gets to my cock she tries hard to get me off. That is code for lasted one minute. Dam she is good.\n\nJackie recites the rules, \"We are going to play the female version of Russian roulette. One of us will fuck you cowgirl style. One of us will put a body part on your right hand, mouth, and left hand. You will make the body part ... happy. My phone will ding every five minutes. We will continue until you declare a winner.\"\n\nI wonder out loud, \"How do I declare a winner?\"\n\nJanet replies, \"You fill a pussy with cum.\"\n\nPatty adds, \"We will count our own orgasms, the one with the least gets to clean out the filthy cunt you defile with your spunk.\"\n\nThey all laugh. By just releasing, I will last a while. This should be interesting. I start with Patty on my cock. She is tighter than Jackie and Janet but not as tight as Meghan. She starts slow and then settles into an easy pace. She is grunting every time she goes down. Both hands get pussy to touch and my mouth gets pussy to eat. They are all so horny I get each one off. At five minutes they switch and now Meghan is on the pole. She takes longer to adjust but moves at a faster pace than Patty. Three more pussies to please and I get Patty off quite easily with my right hand.\n\nFive minutes and they switch between three more pussies. Last, of the four mouths, she is the fastest. Again, three more pussy pleasing points. As Patty gets back up again my hands and mouth now enjoy breasts and nipples. Three moans of pleasure. They all take a turn with both hands and mouth pleasuring nipples and breasts.\n\nThe next four rounds I do rim jobs and stick my fingers in their asses. This I don't enjoy at all. Some doesn't bother me but 20 minutes is far too long. The fourth one gives me a break by using her pussy. She orgasms. After that, it is now all pussy eating and pleasuring. The orgasms come much more frequent now and I am starting to hold back.\n\nI love eating pussy and being fucked. They could tell I was getting closer, so they take a dildo and shove it up into my ass. Again, this is NOT something I like but I have no choice and I have done far worse to them. I got no right to complain, I am a very lucky man. If this gives them pleasure, so be it. I have one fucking me and I am eating another, life really is good for me.\n\nI hold off for twenty minutes before I make Jackie the winner as I pump six ropes of thick baby batter into her pussy. All three take turns cleaning up the mess I leave in Jackie. They forgot to keep count of their orgasms.\n\nLike I said, life isn't bad. I still get to fuck one or two tonight.\n\nChapter 18 -- Epilogue\n\nJanet's point of view ...\n\nMeghan is near tears, \"Janet, is he ever going to come out of the baby room?\"\n\nJanet is near tears herself but answers, \"Let him be, this is hard on him.\"\n\nMeghan asks, \"You and Jackie seem to be handling this well.\"",
        "Janet is exhausted but answers even though the story hurts, \"Meghan, about 16 years ago we were told Patty was all but dead already. We were just enjoying every day we had with her. We had a miracle and she recovered. Jackie and I have thanked our lucky stars every day she was with us, that was 16 bonus years of life. When cancer came back it was something we had accepted 16 years ago. When Patty died last week, he wasn't prepared for it like we were.\"\n\nJanet shows hope in her smile, or is she pleading, \"I want you to spend more time with him. He has always been captivated by you. Sure, your pretty but it wasn't the way you look, it's who you are that he loves. He sees much deeper into a person, I think he can see their soul. Patty could as well and that is why she picked you to be friends.\"\n\nJanet knew the answer but still asked, \"Will you consider being Jack's wife and help Jack raise Paul and Jean? We will help you, I know you have one on the way but they will need a mother. At just 8 months old, they will call you mom soon. Hell, you are around so much they practically think of you as mom anyways.\"\n\nMeghan is shocked there was any doubt, \"You don't need to ask me. You could not stop me. I love Jack and those kids like my own. I loved Patty like a sister and you and Jackie as my mother. I told you long ago, I would do anything for Patty and Jack. I spent a quarter of my wealth trying to save her. I miss her so much.\"\n\nMegan starts to cry again. I hold her tight. I hear a baby crying, I look at Jackie and she instantly knows to get the baby.\n\nMeghan is crying, \"I am sorry I had to leave right after the funeral. At my age, I don't work much anymore and now I am getting lots of calls for maternity and baby ads. What I don't understand is why didn't Patty marry Jack? The wedding was all set, she knew she didn't have long but still could have gone through with it.\"\n\nJanet shows her understanding, \"Ah Meghan, that is easy. She wanted to die as his child, as the person she knew for years rather than as a wife that would be dead in weeks. She didn't want to ruin the experience for him or you. She wanted you to marry him and for neither of you to think of her death when thinking of marriage. She loved Jack more than anything, but you were almost on the same level.\n\n\"She was never jealous of you, just the opposite, she was thrilled at all your success in life. Not marrying Jack was her last gift to you.\"\n\nMeghan is a crying blob at my feet. Had I not cried so much the last week I would be next to her.\n\nThe doctors had said cancer could come back in 2 months or 20 years, you never can tell. Sometimes life isn't fair. I hear another child crying, I pick Meghan up, she walks as well as she can and we go to help with the babies. Soon another will be here, a life to replace the one we lost. Grandchildren are so much fun. I wish Patty was still with us to enjoy their life like we will."
    ],
    "authorname": "BigMadStork",
    "tags": [
        "photography",
        "games",
        "incest",
        "taboo"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/pattys-eyes-pt-04"
}