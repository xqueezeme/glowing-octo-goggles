{
    "title": "Preggo at the Party",
    "pages": [
        "My high school friend, Derrick, is a member of a frat, and has been trying to get me to attend a fraternity or sorority party with him for close to two years now. I'd planned to start studying for finals tonight, but I can't seem to manage to start. It's 1:45 AM, I can't sleep, and I'm bored as hell alone in my studio apartment: just about the only conditions under which I'd consider one of Derrick's parties. I text him about the sorority kegger he'd told me about a few days ago, wondering if he was still up and raging. He certainly was, and thrilled that I'd finally accepted one of his invitations. \n\nI grab an Uber and head over, getting to the sorority right around 2. I text Derrick when I get there, not wanting to walk in alone. He comes out, gives me a huge, sloppily-drunk hug, and leads me in. I'm pressured instantly, both by Derrick and by a host of other partygoers I've never seen before, to catch up to them drinking-wise. By this time of night and how long they've been at it, that's pretty much impossible, but I decide to binge a bit for the pure irresponsible fun of it. Twenty minutes in, I'm at three shots of 151 and two keg-stands. I can barely stand, things starting to spin nauseously around me: I haven't imbibed like this in well over a year, and maybe never in my life as quickly as this. I stumble outside, puking two steps into their backyard.\n\n\"Oh my god, are you okay?\" I hear from behind me. Feeling a great deal better with most of the liquor outside of my body again, I'm able to lift my head and turn to see a young lady approaching from a lawn chair a few yards to my right. She's got dark brown hair to her shoulders, wearing a sorority sweatshirt and tight jeggings. I can immediately tell that her hands in her sweatshirt pockets are pulling outward, trying to hide her condition. I've got a keen eye for such things, though, and clock her as pregnant in about two seconds.\n\n\"You're pregnant!\" I exclaim, definitely less inebriated now but tongue apparently still significantly loosened. I might just get out of the way right now that that \"keen eye\" I mentioned for spotting pregnancies is just one facet of my deep and passionate pregnant fetish. As soon as I make the declaration, I'm alerted to the danger of such predilections coming to light, which would certainly make this poor girl uncomfortable/disgusted/horrified/etc. I can harmlessly exercise my general (even non-sexual!) fascination with pregnancy by having a nice polite conversation with this person, but I will be doing my damnedest not to make things weird for her. I think I'm at least sober enough for that.\n\nShe laughs nervously, face reddened, removing her hands from her pockets to place them directly atop her protruding midsection. \"You got me!\" she says quietly. \"You are okay, though?\" \n\nI nod, blushing in turn. \"I'm okay...I'm so sorry, I didn't mean to blurt that out, I don't mean to be nosy or anything.\" I pop a piece of gum as she comes closer. \"What are you doing out here? I had to puke, you may have noticed. I'm Mark, by the way.\"\n\n\"Jenny.\" She smiles (very pretty!) and laughs. \"Yes, you made your intentions out here very clear. As for me, my sorority sisters finally got me out of my room for a party for the first time since I started showing. I couldn't handle the smell in there, though: I was about to puke myself. Too loud even with my door closed to get any sleep, so I decided to get some quiet, fresh air out here. Aaaaaaand you came and puked in my yard.\" She laughs softly, as do I.\n\n\"Yeah, sorry about that. Is there a hose around or something?\" She shakes her head. \"Well, we can at least move away from it.\" I gesture toward the lawn chairs she was enjoying before I intruded. \"Can we sit down?\"\n\nShe puts her hands on her hips, belly protruding even further, and groans under her breath. \"Yeah, I could get off my feet again.\" We sit next to each other, maybe two feet apart, angled perfectly to allow for eye contact but not require it. It's about 60 degrees out, a nice, clear late-April night. \"I've gotta say, I did not expect someone to choose the awkward pregnant girl over the party.\"\n\nI shake my head. \"A lot of boring people in there. A seriously pregnant sorority girl in the backyard at 2:30 in the morning? Very interesting. No one's been keeping you company out here?\"\n\nShe frowns. \"No, no. I kinda fade into the corner inside since I'm not in the middle of the partying, and I'm apparently pretty much forgotten out here. I might not normally be thrilled with my situation being referred to as 'interesting,' but I've got to say it's significantly better than 99% of folks being so awkward around a pregnant college student that they won't even make eye contact with me. And, as you so quickly discovered, I cannot hide my condition very well at this point. So...thank you for talking to me, I guess!\" She looks down, but not before I see the tears welling in her eyes.\n\n\"People are very, very stupid. And you're very, very brave. I cannot even imagine. Still in classes?\" She looks up, tears still on her cheeks, and smiles as she nods. I return the smile. \"So, how do you do it?\"\n\nShe thinks for a few moments, looking into the distance. \"Well, if you want to get to where I am, you first have to be willing to have sex irresponsibly. Which, last summer, I apparently was. I had the inciting sex with the father in this very house, too drunk to check whether he indeed put a condom on. So, yeah, he didn't. The prick. I knew him from about a hundred parties, never exchanged a sober word with him, always found him pretty obnoxious besides the few minutes before we hooked up, apparently. I haven't even told him I'm pregnant, and don't intend for him to ever know. Better to go it alone than to force an asshole to stay in your life for 18 years, I'm thinking.\"\n\nI nod thoughtfully. \"Tough calculation to have to consider.\"\n\nShe nods heavily. \"Yes. Yes it is. I have a decent job, though, and I'm lucky enough to have a bit of family money, so the financial aspect isn't such a huge deal. Very, very privileged on that. And that my parents have been shockingly cool about all this. I'll be staying with them after the semester ends, living with them for at least a few months once the baby comes. I'm about 7 months along now, will be about 8 for finals, then just a few weeks to prepare to give birth. And I'll complete my senior year in some fashion as soon as I conceivably can.\"\n\n\"It's incredible that you're finishing this year.\"\n\n\"Yeah, I just couldn't stand to fall too far behind. I fucked up and got knocked up, but I don't want that to derail my life any more than it absolutely has to. This semester, though, while I've been showing more and more and less and less able to hide the pregnancy, I've been second-guessing my decision just a bit. I feel like a non-person no one will talk to at the same time as the object of everyone's gossipy attention. It's super shitty, not gonna lie. Wish I could feel excited for the baby rather than constantly humiliated, but what are you gonna do? I've always wanted to be a mother, I was hoping to be one in the next few years anyway, and having just one more year of school to get through as a mom isn't so terrible. One semester, actually, if my advisor will sign-off on a few extra credits. So...yeah, it's all roses and chocolate.\"\n\nI feel terrible for her struggles and in awe of her strength. \"Goddamn. That sure is a lot. Let's get out of here. The fountain in the south quad is only like a three minute walk from here, right? Shall we?\" She smiles and nods as I stand to help her out of her chair. She takes my arm and we set off. Jenny and I are silent for the duration of our short walk: I imagine she is as taken with the stillness and quiet of the night as I am. We get to the pleasantly trickling fountain and take a seat on a park bench, no perceptible auditory or visual clue of another soul's presence in the world. It'd be pretty damn lovely even without a preggo chick sitting two inches to my left.\n\nOur comfortable silence is maintained for another five minutes or so before Jenny finally speaks. \"Warm night, easily-overheated pregnant body,\" she says quietly as she lifts her sweatshirt over her head. Underneath is a tight, black tank top that shows off impressive cleavage and clings beautifully to her substantial bump. She immediately hikes the tank up to just below her breasts, revealing an impressively smooth belly with just a hint of a developing outie belly button. It's about the size of a volleyball at this point in her pregnancy, and her hands massaging slowly all over her protuberance are not making me want to touch it any less.\n\n\"The baby just seems to need to breathe every once in a while,\" she says with a contented smile. Her hands move toward the top of the left side of her bump and she releases a soft \"Ooooh.\" She grabs my left hand and places it firmly on the spot. \"The baby's kicking, feel!\" Her excitement is contagious, especially as it's my first time feeling a baby move inside the womb. It feels like magic and a serious honor to have this experience firsthand. Any erotic fantasies I may be harboring disappear for the moment, and nature's miracles overwhelm me. I keep touching Jenny's belly for what must be an awkward amount of time for her, well after she's stopped guiding my hand with hers. Eventually, she's giggling.\n\n\"Sorry, Mark, I don't mean to laugh at you. It's just...you really like touching my bump, don't you?\" I feel my face redden. \"No, no, don't be embarrassed!\" she protests quickly. \"It's sweet, honestly. It's really nice to have someone excited about it. I think it's exciting, too. Can't keep my hands off the belly either.\" She motions with both hands towards the rest of her bump. \"Feel wherever you'd like; knock yourself out!\"\n\nObviously, I don't need to be told twice. Permission granted, my hands are off to the races, exploring every inch of her delightful midsection. It's firmest where the baby's hanging out, but surprisingly firm elsewhere as well. It's smooth and free of any blemish, with just a faint linea nigra and her modest outie to indicate the pregnancy (beyond the obvious swollen bump, of course). I press in hesitantly all over the place, rub gently, fiddle with her belly button. She remains relaxed, her increasingly leaned-back posture pushing her belly further out and allowing me even better access. \n\nI'm lost in reverie for her form and the privilege of touching a wonderful bump, an activity I've fantasized about innumerable times and is somehow even better than I could've hoped. I couldn't tell you how much time goes by, but Jenny never stops me. She seems to be thoroughly enjoying the massage. Having rubbed her belly at length, I eventually look down and notice my erection straining against the crotch of my jeans. I have no clue how long I've been visibly hard, and embarrassedly pull my shirt down in an attempt to conceal it. Jenny notices the lapse in the massage and glances down from her blissfully distracted state, smiling as she instantly discerns what I'm trying to obscure.\n\n\"Ohhhhhh...you REALLY like rubbing my belly, don't you, Mark?\" My face is beet red once again. \"I...I'm...I'm sorry, Jenny. I really didn't mean to make you uncomfortable...I'm a little drunk still, I think.\" She smirks knowingly, nods slowly. \"You're into pregnant girls, huh? This isn't something you're learning about yourself just now, is it?\" I feel myself somehow get even redder in the face, and I'm resigned to my fate. \"Uhhh...yeah. Yes, I like pregnant girls. I'm sorry, it's attractive to me. I've never had this kind of quality time with such an incredible belly, and I got a little too into it. We can just ignore this, I'll walk you home, I won't be creepy...\"\n\nShe interrupts my stumbling apologies and rationalizations. \"It is hot, Mark.\" Her right hand is on my thigh and her voice has gone seductively husky. The quad remains absolutely still, middle-of-the-night quiet. Not trying to get ahead of myself, but further (i.e., sexual...) fantasies might just be attainable in my current situation. Her left hand slowly and steadily rubs her bump as she continues. \"What do you like about pregnancy, Mark? All the extra curves? That it's kinda forbidden, taboo? The fact that it's visible, tangible evidence that I like to fuck? The complete loss of control over my body that comes with it?\"\n\nI have to concentrate very, very intensely in order not to shoot in my pants. My dick is painfully cramped within the tight confines of my jeans' crotch. Her right hand is creeping very slowly across my thigh towards my conspicuous bulge, her left hand down her smooth bump towards her crotch. \"I like all the curves,\" I finally manage to get out. She nods in agreement. \"Me too, Mark. Me too.\" One more look around to make sure we remain alone, and she decides it's safe to get brazen. She's at my zipper, it's down, and her hand quickly finds its way into my boxers, grabbing my painfully hard cock. She takes it out, beginning to stroke very slowly. I wind my left arm below her right, finding my way down into her jeggings and discovering a thrilling lack of underwear and pubic hair. Her pussy's soaking wet and very much ready for me.\n\nWe touch each other slowly and deliberately, a moan escaping from one or both of us every few seconds. Knowing I'm not going to last long at all and not wanting our climaxes to be too far from each other, I focus mainly on her clit, obviously swollen with maternal hormones and positively slick with vaginal fluids. Her back arches, belly visibly contracting as muscles all over her respond to my touch. It's as much as I can take, and I feel my cock starting to spasm. She leans over, my hand still down her pants, taking me in her mouth as I cum. She's managing to keep all but a tiny drop of my load in her mouth even through the loud moans that accompany her own orgasm. \n\nI remove my hand from her pants and grip her right tit under her tank top once I finally feel her vaginal muscles relax, then I lean over to lick the single bead of cum from her bottom lip as I kiss her deeply. She lets every muscle in her body relax, head hanging off the back of the bench and legs spread straight out. My grip on her breast is strong enough to squeeze plentiful milk from her nipple, my palm instantly sticky and dripping with it. Removing my hand from her shirt, I rub the milk over her bump until it shines. I lean over and start licking the fluid off. She's into it, apparently, as she shoves her left hand down her pants, right hand gently squeezing her left nipple. Enthusiastically rubbing as I lick, she's cumming just as I'm finishing cleaning the milk from her bump. I can feel the contractions of her abdominal muscles with my tongue, a sensation I will not soon forget. \n\nI'm hard again, my cock sticking straight out of my zipper. She stands, giving the quad another visual once-over. Still no one around, and her jeggings drop to the ground, followed in short order by her tank top. Completely naked now, she kneels on the bench facing backwards, wrists resting on the back and belly hanging down until it just brushes against the seat. This is obviously my cue, and I don't need any more encouragement than this silent presentation. I stand, drop my own pants, and get my dick in her astoundingly slick pussy. I fuck hard and fast as she maneuvers her right hand below her belly to rub her clit once more. We cum simultaneously within about two minutes, her moans getting louder and louder until she's just about screaming.\n\nShe crawls onto the grass once we've finished, laying completely nude on the cool surface, belly sticking up at least five inches higher than any other part of her. Dick tucked back into my jeans, I'm fully clothed. She doesn't seem to mind being at a disadvantage clothing-wise, though, gesturing me over to her and pointing wordlessly at her belly as she breathes heavily in her triple-climaxed exhaustion. I massage her for another ten minutes, soft moans continuously escaping her lips. \"Goddamn, Mark,\" she whispers, the first actual words uttered by either of us in maybe 25 minutes. I help her to her feet and back into her clothes, and we sit back down on the bench, thighs touching, her head resting on my shoulder.\n\n\"Do you live alone, Mark?\" she asks. \"I do,\" I reply. \"Not for the next few weeks,\" she tells me, not bothering to form it into a question. I'm again shocked at my luck as the reality of my situation settles in, and I require absolutely nothing in the way of convincing. \"There's no fucking way I'm going to pass my finals,\" I mutter, half to myself. She laughs as she grabs my hand and places it firmly back onto her belly. \"We'll study during your refractory periods,\" she says matter-of-factly, as if she's already figured it all out. \"Apart from that, you're just gonna have to stay inside me until I pop. I'm sorry for any inconvenience this may cause you.\" \n\nI have officially won the fucking lottery."
    ],
    "authorname": "gettinitdunn006",
    "tags": [
        "pregnant fetish",
        "pregnancy fetish",
        "pregnant belly",
        "belly",
        "pregnant",
        "pregnancy",
        "sorority",
        "college",
        "hardcore",
        "preggo"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/preggo-at-the-party"
}