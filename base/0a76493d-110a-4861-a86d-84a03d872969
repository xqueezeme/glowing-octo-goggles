{
    "title": "WMD Ch. 02",
    "pages": [
        "(WMD = Winter Men's Dilemma; My own irreverent spin on the BBC mythology)\n\n*Editing magic performed by KJ24 and Shyqash, plus contributions by the regular gang of brigands and neer-do-wells*\n\n*All the sexual participant in this story are eighteen, or older*\n\n*This story is NOT TO BE TAKEN SERIOUSLY!*\n\n* Vlad ~ \"You actually expect me to believe my Father, Brothers and I have the genetic capability to addict every woman we have sex with to our schlongs? That's nuts!\"\n\nMom ~ \"As opposed to thinking the color, length and girth of a phallus makes any woman lose all sense of loyalty, morality and decorum so she can become a man's sex sleeve - whore - bitch - property? Yes, I do.\" *\n\n*Right off the bat, be warned that I'm using the 'N' words - nigger, niggah, my niggah, plus homie, thug, coon, buck, spook, spade and whatever other crude racial slurs that come to mind. Due to reader feedback, I've attempted to tone things down this chapter. This story plays to both Black and White stereotypes. BBC stand for Big Black Cock, not the British Broadcasting system*\n\n*Lastly, this story is rather flippant with the entire concept of sexual assault. Those who have read my previous tales know this is not my attitude at all. For the sake of this genre, I had to grapple with the concept of forcing a woman and the idea 'making them love that dick'*\n\n*A Swing, a Miss and a Hit - that pretty much sums it up*\n\n(Retribution)\n\nSunday was a family outing to Big Bob's for Sunday football. This time, seven other Sheriff's Deputies (with their families) were there as well. Even the scumbag Deputy who had face-fucked Brandy Friday night was there with his wife and three year old daughter. He had this big ole shit-eating grin on his face when his eyes lit on Big Bob's pride and joy.\n\nIt didn't take Clarence Peterson - that was the mother-fucker's name - long to corner Brandy in a bathroom. The hunters, not realizing they were the hunted, was a running epidemic in this burgh. I made triple sure I didn't fall into any sort of complacency.\n\n\"Hey Brandy,\" he sneered at my 'supposed girlfriend' as she tried to stand up from the toilet seat. \"I need a little relief.\"\n\n\"I don't think...\" she mumbled.\n\n\"Bitch, I'm not asking you to think,\" he grabbed her hair. \"I want you ...\"\n\n\"What?\" I stepped into the room, closing the door behind us. \"Dummy, you want what?\"\n\n\"If you know what is good for you, you will walk the fuck out of here,\" he challenged me.\n\n\"Good idea,\" I snorted. \"Why don't I go out to the party, trick that pretty wife of yours into a dark room and face-fuck her? How does that sound, nigger?\" Yes, I was a White boy calling a Black cop 'nigger'. I had chosen my culturally bankrupt words carefully with the intent to incite. \n\nHe stormed my way ready to put me in my place. He was equipped with law enforcement level basic hand-to-hand training. I'd been play-fighting that for half my life. I couldn't openly bruise him. An arm bar fit the bill for keeping in place while I landed punch after punch into his crotch until he was halfway to his knees and crying for his Mamma.\n\n\"Now before you decide to turn this misunderstanding into an incident,\" I whispered my threat into his ear. \"You might want to consider Big Bob's new security system and how one of my Brothers is getting a record of what you just pulled (a lie).\" \n\n\"You came into another man's house and tried to rape his womenfolk,\" I cautioned him. \"How would you like it if someone treated your wife that way?\" I could see the complete lack of empathy on his part.\n\n\"From here on out, you don't touch Brandy,\" I continued. \n\n\"As far as I'm concerned, the way you treat any woman is your permission slip to do the same thing to your wife. We might even make you watch, you cock-less piece of shit. Keep it sheathed around anyone but your wife. Got it?\"\n\n\"Fuck off you bastard,\" he spat. Thank the Almighty for that BBC arrogance. \n\nI twisted his trapped arm up then planted two steel toed boot kicks into his already tenderized scrotum. He almost passed out from the pain.\n\n\"Vlad?\" Brandy worried.\n\n\"It is okay Brandy,\" I smiled at her. \"Go out and stand by your Daddy. I'll be with you soon enough.\"\n\nOut she went, leaving me with the asshat.\n\n\"Boy,\" he hissed through his agony. \"You are going to get ...\"\n\n\"Cool enough,\" I shrugged. I leveraged him over to the toilet and shoved his face into the commode. Had he not interrupted Brandy, she would have had time to flush.\n\nI let him thrash about a good deal before bringing his face out of the water. He immediately got combative so back in he went. It took four trips to the fetid pool for him to realize he was on the wrong end of police brutality.\n\n\"Just so we are clear, Clarence,\" I lectured him. \n\n\"All I want is some respect and fair treatment. You've crossed Big Bob, my Dad and now me,\" I reminded him. \"In my opinion we've almost balanced accounts. Act like a married man and like someone who swore an oath to serve and protect - EVERYONE. You cross the line again, you can bet we Samsonovs will find out about it.\"\n\n\"We will assume the incident is you serving notice that you've vacated the human race and you will be dealt with like the piece of trash you've become. We are not the fucking KKK, Butt-Monkey. I don't think any man is less than me until he proves it. You have a family - your dick stays at home. You have a daughter. Do you want her growing up happy only to get cornered in a bathroom by some asshole who thinks he has the right to violate her?\"\n\nI let him go and stood back.\n\n\"We are done unless you fuck up again. Make an issue of this and I'll make sure your wife is gobbling Big Bob's cock before Thanksgiving. Clean yourself up and enjoy the party, Clarence,\" I sneered. I left him there, kneeling on the floor before the porcelain altar.\n\nHe had hate in his eyes ... and he was scared too. Having broken both the law and the covenant of marriage, he'd painted himself into a corner. Things were going according to plan. Kick the BBCs in their masculinity. How we would defeat the sexual addiction angle was still a mystery to me.\n\nI was looking for both Brandy and Clarence's wife. Mom had gotten to the latter first and was already insinuating herself into the woman's confidence. She was a born con artist. I found Brandy alone by the pool, rather shaken up. She gave a slight jolt when I wrapped my arms around her from behind.\n\n\"Oh, it is you,\" she sighed with relief. \n\n\"You are my girlfriend, Brandy. You don't need to be afraid of me,\" I soothed her. 'That's right Brandy' was the message. 'You can have a boyfriend who fucks you silly yet doesn't treat you like crap and scares you.' Darius didn't have to be an abusive bastard. He chose to be. \n\nHe choose to make Brandy the pawn in his rage against Whites in general and Sheriff Carson in particular. 'Black Rage'? That was an excuse for lashing out at the weak, defenseless, innocent and uninformed. Worse, it was insulting - to Blacks. Why would Black people be less emotionally mature than any other human beings? Just saying the phrase made me feel racist. \n\nBy that reasoning, any person of any race could be excused for going nuts because their lives had been harsh enough. Funny; if a White man had spontaneous rage issues he would be committed to a mental health facility, or sent to prison, and then forced to take medicine and submit to therapy. \n\nChild abuse, torment, broken homes, poverty, drug abuse and persecution were all excuses used by serial killers too. I preferred to see Black people as people and accountable to that standard of civility I held myself to. In the same manner, they were worthy of all the respect I showed my Father as long as they didn't prove otherwise. The only person I could stop from being racist was me. The rest had to be held to their own standards - period - end of statement.\n\n\"Thanks Vlad,\" she pushed into me.\n\n\"You know,\" I rested my jaw on the top of her head. \"Standing by the pool reminds me that I've never seen you in a bikini.\" She gave me a weak elbow to the ribs.\n\n\"You've seen me naked,\" she teased me. She twisted enough so she could look up at my face. \"Have you forgotten that already?\"\n\n\"Not likely,\" I bent my body so that I could kiss the tip of her nose. That caught her off guard yet she quickly rewarded me with a butt wiggle. \"I take that back,\" I looked away. \"I've completely forgotten about it. Maybe you could show me what I've been missing sometime soon.\" I got another butt wiggle.\n\n\"You are impossible,\" she remarked loudly. \n\nIn unison we looked toward the grill in time to see Big Bob sending a satisfied smile our way.\n\n\"Parents,\" I protested to her softly. \"Can't I just hold you without your Daddy making a big deal about it?\" I had to head off her anger with her Dad from poisoning the gains I'd been making.\n\n\"Oh God, yes,\" she sighed. There was a long break in the conversation. \n\n\"Are you going to give me trouble about still seeing Darius?\" she questioned me. \n\n\"I'm not going to lie to you. I'm not happy about it,\" I hugged her tighter. \"But, I'm a man of my word and I said I wouldn't stand in your way. Don't ask me not to hate him.\"\n\n\"Why would you hate him?\" Brandy prodded me. I knew what she wanted.\n\n\"I'm going to dislike any man who touches you, Brandy,\" I nuzzled her hair. \"White, Black, Yellow, Brown, Green, or Purple - I don't care. I know I can make you happier than Darius can. I'm man enough to trust you to figure that out on your own.\" Another long pause. \n\nBig Bob was calling everyone over for their grilled meat of choice.\n\n\"What if he won't let me go?\" she posed.\n\n\"Then I'll kick his ass and beat the crap out of every goon he puts between us,\" I pledged. Brandy wanted a brutal competition as confirmation of her perceived self-worth.\n\nI took that sense of victory into Monday morning. I felt confident. I also had boarded up the proverbial windows and evacuated the low-lying areas because a hurricane was coming my way. There was no more confusion on Darius' part. I was the enemy he had to crush no matter what. My family would have to go down as well.\n\nIt wasn't the smart move, but it was really his only move because calling for a truce wasn't in him. A real man would have looked at the possible costs versus the intended gains. Instead, a mad delusion gripped the opposition - Darius didn't give a damn about any of his supporters. His BBC culture encouraged him to think of every woman as a token to be taken from any man.\n\nIt was insane for anyone to think they were safe from that toxin. What possible loyalties could have sprung from encouraging such insidious selfishness? It wasn't IF you would fuck a certain girl; it was WHEN. Was a girl with a guy? She wouldn't always be under his protection and then it was BBC time. Would the guy get pissed his girl was being boinked?\n\nSo? Girls were walking, talking sex orifices and that guy had just proved the girl who you thought was yours was really nothing but another cock-hungry slut. Very few women were truly respected anymore and those who thought they were safe had their heads hopelessly lost in the clouds. Wouldn't color save them? Why? \n\nThe community had already given Black men a pass on predatory behavior toward Whites, forgetting they were people too. Exercising their BBCs gave them all the White pussy, lips and ass they could want. 'Want' being the key word. Black girls were just as sexually enticing as White girls. The boys were already skilled at violating their victims, willing, or unwilling. \n\nThe same lies the BBCs told White girls work on Black girls too - because the truth they are nothing but hash-marks was too bitter a pill to swallow. Given his looks, natural talent and the thoughtless adoration of his community, Darius' blinding egotism was a given. The rest of the parasitical crowd had vested too much in their favored Son to restrain him now.\n\nThat attitude greatly simplified the Samsonov stratagem to under-cut his latest efforts before they even got off the ground. He had racked up four more blackmail victims Friday night. Mom was taking that leverage away once school was in session by taking the evidence to the parents of the students in question. Painful? Yes. \n\nIt was cauterizing the damage before Darius' crowd could turn it into a long festering wound. Our position was aided by the fact we didn't require the White families to do anything except to bring their kids into the loop. No active resistance was required - yet. All that was still coming. For me, it was another day in homeroom, talking with Kaelyne about her weekend.\n\n\"Hey Vlad,\" Brandy's greeting had a bit more 'oomph' this morning. Taliyah was in her normal, tag-along spot with that accustomed slight smirk on her face. She was behind the times.\n\n\"Hey yourself, Brandy,\" I smiled my 'GF's way. \"You look really nice today.\" Brandy had been a bit unsure about the state of our d\u00e9tente. Taliyah and Kaelyne were floored by my propriety.\n\n\"Thanks, Vlad,\" Brandy gave me a sultry twirl of her skirt before she sat down. She twisted to say something else, but my attention had already refocused on Kaelyne. I wasn't going to surrender my friendship with Kaelyne for Brandy. \n\n\"What where you saying about that female Peshmerga fighting against ISIS?\" I picked up our conversation.\n\nYep, petite Kaelyne was a gun-nut with a secret ambition to fight the patriarchal rapists of Mother Earth. She was enchanted by my tales of the Alaskan Wilderness and I found her ... well, kinda neat. Kaelyne kept stammering her response while looking over my shoulder at Brandy. I followed that path back.\n\n\"Brandy, is there a problem?\" I regarded her somewhat coldly.\n\n\"I wanted to talk to you about the Basketball team,\" she kept shooting intimidation Kaelyne's way. The basketball angle was to remind Kaelyne I was a jock. Cheerleaders and jocks ran in the same social circles. Jocks and geeks didn't.\n\nThe local twist on that quaint social custom was all the other athlete/jocks were Black, except for the token - 'Mamma paid my way onto the team' White boy ... and now the Samsonov triplets. We three had no illusions about being welcomed by the Black athletic establishment. No matter what Brandy chose to believe, cheerleaders of both races were little more than easily accessible fuck-toys.\n\nMy brothers had already razzed me about putting my dick into Brandy. None of us wanted anything to do with the rest of the cheerleader corps, though Mom insisted we consider the opportunity if it arose. That and give them the disinfectant treatment before penetrating any of their whore holes - and, due to the BBC preference to deep-throat and tea-bag their bitches, that included French kissing.\n\n\"I'll catch up with you at lunch,\" I suggested. We knew that was Darius-time. There was nothing like creating a scheduling conflict with the onset of the new week and our new relationship.\n\n\"The Squad (cheerleading squad) has a practice meeting at lunch,\" Brandy reminded me...that she and the girls were required as cock-sluts during lunch.\n\n\"How about we meet up at the end of lunch then?\" I offered.\n\n\"Okay,\" she turned her somewhat brittle smile to me. \"As co-Captain of the Cheer Squad, I need to coordinate activities with all the athletic teams.\" We had three school teams: football, basketball, and Track & Field. The third group didn't get Brandy's support.\n\n\"He's not likely to be selected team captain,\" Taliyah pointed out. That was unfair. Very likely true, but still bigoted and biased.\n\n\"I'm hoping it will be Kaja,\" I responded. \"She's a hell of threat plus she'd got a good head for the game.\"\n\n\"She's a girl,\" all three girls around me spouted. Ms. Alice Thomas, our homeroom teacher, called things to order. We got the regular announcements out of the way and one 'gem'. The School Board had hired a new 'interim' Principal. He was - surprise, surprise - Black (I was actually wrong about that - more later). This time, he was a Canadian Black man.\n\nThe morning was much the same as last week; more sneak attacks, slights and racial slurs. My brothers and I knew how the teachers would treat us. We had broken them down into three groups: the Racists (yeah, I know, Black people CAN'T be racists), the Cock-suckers (their BBC masters were pissed with us, so those teachers were pissed with us), and the Doomed (victims of blackmail forced to torment us).\n\nThe Doomed were the nicest. Their heart wasn't in their efforts to annoy us. All they did was make the minimally required dubious efforts to single us out for maltreatment. The first two groups came at us with some real hatred. Those 'educators' were openly disdainful. We didn't mind. Samsonovs respected authority until it stopped being fair and impartial.\n\nOn the way to lunch, Mikhail and I began our school counter-offensive. As two punks tailed him into a security camera blind spot, I cut off the lights so they could be highlighted by external illumination. Then the beat down began. We grappled them with one hand and landed body-blow after body-blow with the other. We'd split up and slipped back into the school crowd before anyone was the wiser.\n\n\"Vlad?\" Taliyah yanked on my arm in the hall during the 5th/6th period break. When I turned around, \"Vlad.\" She came close to me and pulled me into a door sill. \"Vlad...umm...why don't you go by the infirmary?\"\n\n\"What? Please don't think I like, or trust you, Taliyah. I see how you look at Brandy and that ain't love,\" I chided the Black cheerleader.\n\n\"I don't like you either, Vlad,\" she glared, \"but ... Brandy ... she pisses me off at times, but we've been close since seventh grade and ... go see for yourself.\" With that, she took off. To go, or not to go; that was the dilemma. Taliyah's actions were unusual and out of character for the player she thought she was. I went with the bizarre and the belief that even bad people can be humane.\n\nI found Brandy on the nurse's couch looking pretty damn miserable. She'd been crying and appeared distraught. The nurse was sitting in the corner, talking amiably on her cell phone.\n\n\"Brandy?\"\n\n\"What are you doing here?\" the nurse, Tasha Cooke, tried to block me.\n\nHad she been paying attention to her sole patient she might have been effective at that.\n\n\"Brandy, I'm just stopping by to say 'hey',\" I said as I hovered in front of her.\n\n\"Vlad,\" she sniffled. \"Nothing is wrong.\" Clear lie. \"I'll be okay.\"\n\n\"Now would you get out, boy?\" Nurse Cooke grabbed my left bicep.\n\n\"I'm her boyfriend,\" I shot a furious look Cooke's way. \"I'm going to call her Father and see what he says about Brandy and your treatment of her.\"\n\n\"Vlad, don't,\" Brandy grabbed my hand that was reaching for my phone.\n\n\"Boyfriend,\" Nurse Cooke snidely muttered under her breath.\n\n\"That's right,\" my voice took on a tiger's rumble. \"I'm the one here when she is in distress, not some cock-sucking loser who things he owns her.\" Our eyes clashed. \"Make sure you tell Darius I said that too,\" I taunted her.\n\n\"White boy, you don't know what's going on,\" Tasha taunted right back.\n\n\"Tasha Cooke - older sister of Nefrititi Cooke who was recently fired by my Mom for being niggardly,\" I fiercely grinned. \"Mother of three. Never married. It was relayed to me you are more of a bitch than your sister, so no man wants to hang around after he's done his business. What exactly don't I understand, Ms. Cooke?\" I wasn't calling her a 'bitch'. \n\nThat would have been bad. No, I was staying I had heard someone called her a 'bitch' and was relaying that information.\n\n\"Ah,\" she stuttered. \"Have you been stalking me?\"\n\n\"Nope,\" I shook my head. \"The 4-1-1 on you wasn't even difficult to obtain.\n\n\"Now give us some space before I start to think you don't like me,\" I added. She didn't like me. I didn't care. I wanted to talk to Brandy without this cunt standing over my shoulder. Tasha backed off, then mumbled something about going out for a smoke. With her gone, I hugged Brandy and kissed her on the top of her blonde head.",
        "\"I have to get to class,\" I told her. I kissed the top of her head again which resulted in Brandy pressing her head into my shoulder and her breasts against my torso. \"I'll catch up with you later.\" I separated from her. I wasn't going to rip her about letting Darius get away with whatever happened. That wasn't an argument I could win.\n\nTwenty minutes later the Samsonov triplets were sitting in the Vice Principal's office, listening to her bitching us out. She was going to roast our chestnuts on an open-fire, BBQ our ham hocks and exile us from school.\n\n\"For what?\" I inquired.\n\n\"You beat up two nice, young, upstanding African-American men,\" she growled.\n\n\"Evidence would be nice,\" I grinned.\n\n\"They saw you three bastards attacking them. That's all the proof I need,\" the VP glared. Somehow, she sensed a trap.\n\n\"So, these two unnamed guys claim the three of us beat them up...where? When?\" I kept at her.\n\n\"That doesn't matter, you little bastards. They made the complaint and I believe them. You are looking at a one week suspension and you are being booted off the basketball team,\" she turned viciously victorious. We three kept smiling.\n\n\"Wait, are you recording this conversation?\" she gasped. Three phones came up, we all hit 'upload' and showed her the screens. \"Give me those,\" she snapped. We handed her the phones - the 'burner' phones dedicated to this round. Mom was a prophetess for some Dark Pantheon - no doubt. \"How do you delete those files?\" she mumbled as she played with the buttons.\n\n\"That would require a password which I doubt any of us recall right now,\" Alexander informed her. The VP, Mrs. Janice Russell, looked ready to erupt. \"I will make it easy on you, Ms. Russell. Ms. Blanchard can verify I was with her from 12:35 to 1:10 when you summoned me here. Before that, all three of us were in the cafeteria. Your cameras will prove that.\"\n\n\"That means, B...,\" Mikhail snarled, \"The three of us couldn't have beat up anyone since before home room. That means those whiny, little natty-haired bastards lied to you on an official complaint.\"\n\n\"Yes, my brothers and I can't thank you and your 'boys' enough for getting overly-greedy,\" I added.\n\nVice Principal Russell's mouth gaped like that of a drowning fish.\n\n\"None of us are going to sweat about these false accusation,\" I smirked. \"We three are going to drop hints to everyone who counts you were super-nice to us and let us off with a 'stern warning'. I'm sure so very many of your fans will be pleased with you giving the three most hated White boys in school a pass.\"\n\n\"I did no such thing,\" she protested. I could see that creeping fear in her eyes.\n\n\"Well, unless you want to be brought before the State Board of Education, you are letting us walk,\" I pointed out. \n\n\"You have nothing,\" she shook her head.\n\n\"We have had several run-ins with you, we have you setting up our Mother by threatening Mikhail and we have you facilitating the Principal's attack,\" I reminded her.\n\n\"I did no such thing,\" she protested.\n\n\"Nice try. Either you are an idiot to not know what has been going on under your nose the past ten years as you handed female student after female student and concerned mother after concerned mother over to our former Principal, or you were in cahoots. Either way, you are toast,\" I countered.\n\n\"You can't tie me to that,\" she gobbled with some real concern.\n\n\"Like us, you are White, Ms. Russell,\" I snorted with amusement. \"The Black community will rally around that fat bastard. Who has your back? If you think it is the Coach, you clearly haven't noticed how he looks at the female student body.\" The 'Ms.' was on purpose; an indicator she wasn't being much of a wife in our eyes.\n\n\"Hell, they might even pin his extracurricular activities - you manipulating a man with a sexual addiction he had no control over - on you because you pretty much made him a victim too,\" Alexander piled it on. \"There goes any hope of a teaching job anywhere.\" \n\n\"Your husband will lose all his Black clients ... and most of the White ones too,\" Mikhail grinned like a shark.\n\n\"No...no, that wouldn't happen,\" she muttered.\n\n\"You are having a rather indiscreet affair with the Coach although you are a married woman. Basically, both of you are liars, deceivers and abuse your authority,\" I continued. \"If the Coach really wanted you, you'd be his wife by now ... but nah ... he's stringing you along.\"\n\n\"Yeah, that's loyalty for you,\" Alexander tagged in. \"Except you aren't loyal to your husband, so why would any man be loyal to you?\"\n\n\"Shut ... Shut Up!\" she screamed. \"Get out ...\" Out we went.\n\n\"We beat that because of one little lie,\" Mikhail chortled. \"One lie - had they stuck with the facts - stupid bastards.\" \n\nAs we headed down the main corridor, classes let out for sixth period. As we passed Darius and some of his hoodlums, we laughingly chorused, \n\n\"LOSER,\" at him in front of a whole crowd of students. Darius' face darkened with rage. We stumped him then by doing the unexpected - we ran for it.\n\nThe pattern for many basketball practices were set. The Ass Coach split up our alliance every chance he got - because we repudiated and ridiculed his style of coaching. It was hard for any of our group to score in individual scrimmages when our 'team mates' would never give us the ball. The guy whose jaw was broken by Mikhail was sidelined.\n\nEvery time one of the Black athletes popped Kaja, Mikhail tied a knot on a piece of cord and waved it in the direction of the offender. Curiosity finally got to one of the other guys.\n\n\"You practicing to be a Boy Scout?\" he scoffed.\n\n\"Nah. When I get angry, I tie a knot. When the time comes, I'll remember what each knot was for and untie it ... if you get my drift,\" Mikhail didn't even bother to look up.\n\n\"You think that makes you scary, needle-dick?\" he took a step toward my brother.\n\n\"I don't give a damn what you think,\" Mikhail said as he stood. \"What I do know is that, unlike you and your buddies, I possess a personal code of Honor. I'm worthy of respect because of that. In turn, I show respect to those who show they've earned it ... people like Kaja. Your sorry ass? ... You don't matter,\" Mikhail's temper was simmering.\n\n\"I'm not afraid of you,\" the Black player postured.\n\n\"That's your mistake,\" Mikhail chuckled. \"There is a world full of the graves of dumb-fucks who didn't know when to be afraid. By no means consider yourself unique.\"\n\n\"Yo, Raymond,\" Shaquille came over, \"didn't Mik here break up your cousin last week?\"\n\n\"He hasn't paid for that either,\" Raymond grumbled. We chuckled over that. Later, as we showered, we let Shaquille know Mikhail was never called 'Mik'. We avoided letting the rest of the team know because we knew they'd have been childish and annoying. \n\nKaja caught up with us as we made our way out to our motorbikes.\n\n\"Mikhail,\" she groused. \"I don't want you fighting my battles for me.\"\n\n\"Tough,\" Mikhail shrugged.\n\n\"Kaja, Mikhail isn't pissed because they are picking on a girl. He's pissed because they are picking on a friend,\" I clarified.\n\nNeither response was what she expected.\n\n\"Oh ... Hey, I found something else out when I went to talk to our coach,\" she brightened up slightly. She showed us a few pictures on her phone. Raymond was standing up, feeding his BBC down our Ass Coach's throat, while the White man was on his knees before him.\n\nShaquille appeared to be embarrassed. Kaja was expecting some level of outrage, disgust, or confusion. Sadly, she was giving us old news. This was SOP for the cult of the BBC.\n\n\"So, what are we going to do about this?\" Kaja inquired.\n\n\"Save it,\" I grinned. \"Our time will come.\"\n\n(WTF! And Killing Dreams)\n\n[Yes, this is a parody of another author who shall remain Name-X-less]\n\nTuesday, we didn't have home room, we had Assembly. As it turned out, we didn't have a first, or second period either. And for that privilege, we had the Black-dominated School Board to thank. Fate put we three troublemakers and Darius only a few feet apart on the front row. Someone had decided the Cheer Squad would look cute sitting on the floor in front of us.\n\nI had corralled Kaelyne and Victoria. Leona was up in the bleachers with her boyfriend. Kaja, Shaquille and Shaquille's GF, Monique, migrated our way as well. The Vice Principal did her thing then introduced our interim Principal. He was sternly erect and projected pride. That first impression worried me. I shouldn't have bothered. How to describe this train wreck?\n\nHe was a six foot tall, somewhat blocky-shaped, overweight and bespectacled Black man named Dr. Pierre O'Rourke Jean-Georges He had been born in Massachusetts, educated in the US and Canada and was here to heal the racial and social rifts in our community. Those sounded like lofty goals and I found myself wishing him luck. Then his rambling began. \n\nWhy would we, his students, care what colleges he'd attended? Most of us had never heard of any of them before. Did we care what sports his schools excelled in? No. They were not NCAA Division I schools, so their championships were rather meaningless to us. Lacrosse was different from Field Hockey how? Tennis? Crew? Equestrian? \n\nAbout fifteen sports in, it dawned on us he wasn't talking about sports he'd actually participated in ... unless there was some freaky Yankee custom that allowed men to play on female teams that is. The revelation of this information was mixed. A few, like Victoria, were enchanted by this unforeseen turn of events, other were confused and the majority were zoning out, or falling asleep. \n\nDid he notice he'd deviated from any sort of coherent message? \n\nNoooo ... he was just getting started. Thirty minutes into this pointless exposition of information that had no relevance for anyone still listening, even I was about to nod off. That's when he dropped 'The Bomb'. He abruptly jumped back to his earlier pledge to heal the rifts and unite the community.\n\n\"See,\" he slammed down his hand on the podium, waking the sleepers, \"I know about being White (huh?), I know about being Black (um ... okay?) and I know what it is like to be on the outside looking in.\" He was sounding pretty passionate. \"I am not a Black man, though some see me that way. No, I am a bi-racial man. I am a bisexual man.\" \n\n\"I know what it is like to face the patriarchal backlash fostered by ignorant and frightened Black and White American communities, trapped in their bigotry and race hatred.\"\n\nI caught Darius looking my way with suspicion. I gave him an exaggerated shrug and shook my head in the negative. This wasn't a Samsonov ploy.\n\n\"My Father was NOT a Black man. He was Haitian - a free Black man who defeated the White colonial slave masters,\" he espoused. \"My mother was a proud, White woman. She was Boston Irish and proud of her Irish legacy as they were oppressed by the British in the same way the Haitians were oppressed by the French. I was born into a world of hatred and misunderstanding.\" \n\n\"To the Black community, I had a White mother. To the White community, I had a Black father,\" he preached. How this evolved into him being a good principal wasn't obvious to us. Then something occurred to me. Here was a man who 'looked' very (dark) Black, who had a quite extensive education and who had undoubtedly written many published works. And this man loved pontificating his ideas to the masses. \n\nI was now betting when the School Board offered him the job, none of them had actually read any of his published articles. He was big on talking about the 'fight against racism'. That was as far as any of them read into his background. Like all good citizens of Kingston, racism only mean White racism. They weren't racist. Besides how could a Black man become famous fighting Black racism?\n\nAnd then came the 'bi-sexual' part of this calamity. Understand, my family's tolerant view of sexuality was not widely shared. Also understand that ass-fucking and face-fucking White boys didn't make a Black man gay, or even bi-sexual - just ask them.  \n\nThat's correct; there was no homosexuality on that side of the color divide. Rich White boys were all considered gays, closet-gays, or 'in denial'. Being a redneck gave you the extra options of being into bestiality and incest. Lesbianism is what White girls did to one another to excite their Black stud-muffins before the main course. Of course Black girls could contribute, but that was on the 'down low'.\n\n\"Now, I know Black men feel threatened by true sexuality. Victims of centuries of indoctrination by a hypocritical Christian religion and a repressive African male stereotype. White men are just as afraid of their desire for Black male companionship,\" he spouted. \"I want you to know, my White and Black brothers and sisters, you can be free.\"\n\n\"My parents opened that road for me at birth,\" he declared. \"They fought back against the White establishment and refused to have me circumcised. Yes, my cock is a proud ten inches of uncircumcised, bi-racial manhood.\" I was almost grateful that he got back to the regularly scheduled spewing forth of his own bigotry. \n\n\"In my long quest for sexual fulfillment, I found the perfect mate - a bi-racial, bi-sexual woman who appreciates my confidence and my embrace of liberal feminist principles,\" he smiled at his 'captive' audience. \"I am here to guide you all on that journey. Shed the shackles of the past and free your minds to the natural desires of brotherhood and toleration.\"\n\nHad he ended it there, he might have made a lasting point. He didn't, instead going on for another twenty minutes about 'being sexually liberated' and the freedom gained by embracing non-Judeo-Christian religious ideals. Way past the point of coherency, the good doctor slammed down his hand on the podium one last time and eagerly declared he was going to make us all better than we ever were before. \n\nAbruptly, he stopped talking. It took everyone a few seconds to realize he was awaiting his ovation. Not only had less than ten people paid attention throughout this whole affair, he was ranting at the wrong target audience. This crowd was 99% Christian with 80% being part of regular congregations that embraced homophobia with a passion. \n\nLiberalism wasn't about the difference between democrats and republicans. It was about turning all the racial dirty dealings in this town into openly accepted practices. That meant Black women could actually hang out with White men! Oh no! Feminism meant ... the bitches would unionize and make the playas pay for their treats. \n\n'Repressive African male stereotype' was the college educated way of saying Big Black Cockery. Expunging 'cock-slavery' was the last thing these Black men wanted. What saved us from a riot then and there was the plethora of $10 dollar words he'd used.\n\nMs. Blanchard and the Ass coach stood up and started clapping first. With varying degrees of reluctance, the rest of the faculty joined in. Maybe a third of the student body made some noise before the silence resumed. A highly flustered VP Russell quickly stepped up and dismissed the assembly to what little time remained of our second period classes. \n\nWe'd wasted 90 minutes listening to our new 'Academic Captain's' message. The scope of Principal Jean-Georges' failure meant our normal feud was put on the back burner as the real message was translated and digested by the brainer classmates, who then let it trickle down to the rest of the student body. Anti-Christian bias, endorsing homosexual behavior, female empowerment ... none of that was going to fly.\n\nDarius's majority considered themselves Christians by default, and the 'Samsonov' faction practiced our faith in private and with an on-line congregation back in Alaska. The locally strong, rural Christian foundation was a huge stumbling block. Had Jean-Georges not clearly been a wack-job, our small group might have supported his policies of sexual tolerance and female equality.\n\nNot only did we have no faith in his leadership, his declarations weren't educational - they were condescending. He was claiming to teach tolerance while being intolerant. Circumcision had what to do with any part of this? It was a widely accepted medical procedure. His long list of academic accomplishments included a PhD in Modern Spiritual Revisionism (whatever that was) from Ottawa. He was in no way, shape, or form an MD. \n\nMore controversy boiled up around his wife. She had missed his diatribe, but showed up at his office afterwards and several students had snapped pictures of her. The two main questions were A) what was that Nubian Queen doing with this mentally maladjusted martinet? And, B) how bloody expensive was her get-up - clothes, jewelry, footwear, make-up and hair style?\n\nVictoria's caption evoked its own firestorm - 'Guess who wears the strap-on in that family?' Kaja had to explain to my brothers and me what the problem was. See, in this pocket dimension, Black men fucked other people in the ass; they didn't get fucked - 'yes' to pitching; 'no' to catching. It hadn't occurred to the BBCs to think that way ... until Victoria kicked open the door.\n\nA woman bending a Black man over and pounding away at his butthole was right up there with Satanism in their book. It got better. Mikhail added fuel to the fire by circulating the text 'I bet she makes him do Ass-to-Mouth too'. He might as well dropped fire ants on the BBCs. The threat of some serious role-reversal was stirring them up.\n\nI thought they were worrying about nothing. Our new Principal had alienated everybody with his long-winded speech. He'd basically accused the student body, the faculty, and the community they all came from, of being brutish, backwoods bigots and announced he, and he alone, would be our Messiah. Truthful, or not, that wasn't the way to win minds and influence people.\n\nAfter lunch, the old tempo reasserted itself. The Blacks came after us, the teachers created their own set of mischief for us and we convinced Kaelyne and Victoria to spike the football teams Gatorade with a powerful diarrheic which had the unexpected side effect of Brandy and Taliyah waiting by Mom's Mustang when Kaja, Shaquille and the three Samsonovs exited basketball practice.\n\nWe had expected the Men's locker room to be smelling pretty foul by the time Ass Coach dismissed us and it was. The whole team decided to forgo showering due to the stench.\n\n\"Brandy, Taliyah,\" I greeted the two, \"What's going on?\" Brandy shot me the strangest look. She was obviously unhappy, but I couldn't tell why.\n\n\"Hi Vlad, Alex, Mikhail, Shaquille and Kaja,\" Taliyah greeted the group. \n\n\"Vlad, we were wondering if you could give us a ride home,\" Brandy requested. Where the girls' cars had been parked remained unclear. I looked over the crowd. Since it looked safe and the weather was fair, Shaquille would be walking home. We'd already promised to give Kaja a ride so things would be a bit tight with six.\n\n\"Sure,\" Mikhail spoke for us all. \"Alexander,\" he tossed my other brother the keys, \"you drive.\" What followed was a bit of emotional communication. Mikhail and I got in back. Brandy came next, aiming for my lap. Kaja and Taliyah collided over who would be on Mikhail's lap. Kaja was uncertain about her relationship with Mikhail so Taliyah ended up slipping past her. \n\nKaja found herself in the front seat. That wasn't too bad as Kaja was the first stop. Brandy wasted no time pressing her body against mine. Taliyah didn't know what to make of Mikhail offering her the front seat after we dropped Kaja off. She gave the Alexander the address and directions, but ...\n\n\"Why don't we go by you guys' place?\" Taliyah suggested before we were half way there.\n\n\"Because you are one of the fucking enemy?\" Mikhail mocked her. Taliyah looked offended.\n\n\"What makes you say that?\" she glared.",
        "\"You are a bitch in Darius' kennel, that's why,\" Mikhail snorted.\n\n\"It is not like that,\" Brandy spoke up. \"Taliyah and I are BFFs.\"\n\n\"That's hardly an endorsement,\" Mikhail countered.\n\n\"Chill, Mikhail,\" I tapped my brother. \"If Brandy vouches for her, she's good.\" This wasn't so much me trusting Brandy; it was exhibiting favoritism with zero cost to us. \"Besides, Taliyah did let me know that Brandy was in trouble yesterday.\"\n\n\"That's right,\" Taliyah looked over her shoulder and beamed malice in Mikhail's direction. She was buckled in so the maneuver was awkward.\n\n\"Fine ... whatever,\" Mikhail conceded the point. When Taliyah turned back around, he shot me a wink. Good Cop/Bad Cop - our tactics weren't even all that original. \n\nFYI, Alexander was the 'good cop', not me. I was Brandy's boyfriend, so my work was already cut out for me. Once we got to our place, Alexander made his move.\n\n\"I'm sorry,\" he sighed to Taliyah. \"Mikhail can be really hardheaded at time.\"\n\n\"I thought you twins - triplets would be more alike,\" Taliyah groused.\n\n\"Do you know many triplets?\" Alex teased her playfully. He was our 'nice guy'.\n\n\"I ... no,\" Taliyah frowned at him. Alex lifted her book bag off her shoulder and headed inside.\n\nTaliyah followed along. To prove this Battle of the Sexes was a contest, not a rout, Taliyah shot a big smile Brandy's way before racing to catch up with Alex.\n\n\"Nice house,\" Taliyah remarked as she passed from the entryway to the main hall.\n\n\"Alex,\" Anita, our downstairs maid greeted us in order. \"Ms. Malik (Taliyah), Mikhail, Ms. Carson (Brandy) and Vlad. Young men, your Mother says you must finish your homework and complete one hour of practice before having any fun.\" Anita was fitting comfortably into the role of task-mistress in Mom's absence.\n\nMost importantly, we knew better than to 'sass' her. Anita knew that one word of complaint from her would land us in hot water with Mom and Dad. I believed our parents' trust in her added to her enjoyment of her job. \n\n\"By your command,\" Alex said as he put his right fist over his heart.\n\n\"I thought she was your servant?\" Taliyah teased us.\n\n\"Ms. Malik, I'm the residence's downstairs maid which means I run the downstairs, except for the kitchens ~ that is Kamika's domain ~ greet guests and assign the children their chores. Consuela takes care of the top two floors. Ms. (Bebe) Marston takes care of the horses.\" \n\n\"These boys know they had better behave and pitch in when we ask them to,\" Anita concluded.\n\n\"Why gosh, Michael,\" Taliyah turned on my younger triplet with a passable House Niggah sugary voice, \"I thought you was the Massa of da planation.\"\n\n\"Hah,\" he refused to be baited. \"In Russia, we didn't have slaves, we had serfs, which was pretty much as bad. Russia didn't free them until 1861. Since I don't want Mom to reintroduce the practice with her own sons, we do as we are told. And the name is Mikhail. The English mispronounce it as Michael.\"\n\n\"I wouldn't mind making you my 'serf',\" she just wouldn't let go. She didn't know Mikhail. He was on her in a flash, pulled her up so that her belly rested on his right shoulder, and spanked her butt with his left.\n\n\"Ow!\" she yowled. \"Stop that.\"\n\n\"Mikhail, put that young lady down right now!\" Anita snapped. He put Taliyah down on her feet. She pulled away too fast, tripped over her own feet and went crashing down ... or would have if I hadn't caught her. Taliyah pushed off me and launched herself at the smirking Mikhail.\n\n\"Miss ...\" Anita started to referee. Taliyah went to slap Mikhail. He caught her right-handed slap by the wrist with his left hand. She tried to follow it up with a knee to his nuts. He blocked with his left leg. My angry triplet yanked Taliyah forward, raising her trapped right limb behind her back. \n\nTaliyah tried to get a punch in with her left with the same poor result. He had both her arms twisted behind her and the cheerleader's body pressed tightly to his.\n\n\"Let me go,\" Taliyah growled. That having no effect, she looked to Anita. \n\n\"Girl, I made him let you go once,\" she was less than sympathetic. \"You were the one who chose to attack him.\" \n\nMikhail chuckled, then went in for a kiss. Taliyah turned away, so he tried again. No such luck. She wasn't scared - Taliyah was furious.\n\n\"Vlad,\" Brandy squeezed my arm, \"do something.\" \n\nSince her tone was pleading, not demanding, I decided to act.\n\n\"Mikhail, let her go,\" I declared.\n\n\"No,\" he laughed at me.\n\n\"Two out of three falls?\" Alexander suggested a combative alternative.\n\n\"Fine,\" Mikhail allowed. He let Taliyah go while deftly dodging another nut-shot.\n\n\"Wrestling?\" I asked.\n\n\"Sambo,\" Mikhail grinned. Damn, I was the better wrestler while he was better at the Russian national marital art.\n\n\"After homework and practice,\" Anita reiterated the law. \n\n\"I want to go home,\" Taliyah sulked.\n\n\"Taliyah, we might as well do our homework first,\" Brandy put a comforting arm around Taliyah's shoulder. There was more than a plea for help with her schoolwork going on, that was for sure. The Black cheerleader was clearly conflicted.\n\n\"Fine ...\" Taliyah glared at Mikhail.\n\n\"Taliyah, I apologize,\" Mikhail offered out of the blue. \"I over-reacted and I shouldn't have laid a hand on you.\" Taliyah tested the power of that apology by slapping him. This time, my younger triplet took it.\n\nBy the way Taliyah shook her hand, she had figured out hitting my brother felt a lot like punching a wooden support beam. He smiled at her while he rubbed his jaw. Taliyah snarled, snatched up her dropped book bag then grabbed Brandy's hand and stormed off to the ... dining room ... by pure luck.\n\n\"Smooth Bro,\" Alexander chuckled.\n\n\"I hate to see her leave, but I love to watch her go,\" he bantered back. Taliyah's bestial shout let us all knew she had heard that. For the three of us, it was a clarification of our plans. Taliyah wanted the 'bad boy' Mikhail, not the calm, comforting 'good guy' Alexander. We were all good with that.\n\n(The After-School Special)\n\nEverything was as Mom predicted; Brandy was a randy minx, clearly hungry for my presence. She kept crossing her legs and sneaking peeks at me. Ten minutes before we finished, Mom came striding through the front door, diverted to the dining room to see if her boys were doing okay and stopped abruptly when she saw our two guests. She exhibited a rare bout of diplomacy ... oh, who am I kidding?\n\n\"Vlad, what is your skank and her buddy doing here?\" Mom inquired politely. Taliyah was taken aback while Brandy cringed.\n\n\"Brandy and I are going over the ten most significant changes brought about by the Magna Carta. Her BFF's name is Taliyah Malik. She's co-captain of the Cheer Squad.\"\n\n\"Oh, I know her name. She's nothing but another fuck-hole for Darius' crowd,\" Mom clucked. \"And Malik, your Daddy's birth surname was Baker, but he was such a useless piece of shit I am glad he stopped being an embarrassment to the English language and took on an Arabic name like the gutless coward that he is.\"\n\n\"What!\" Taliyah shot out of her chair so fast it crashed over.\n\n\"Cum-for-brains,\" Mom sneered. \"The door is right there (pointing out of sight to the front door). You are welcome to get out of my house the moment you can no longer handle the truth.\" None of us looked prepared to challenge Mom over that accusation.\n\n\"Vlad,\" Brandy whispered for some support. I shrugged then stood to face Mom.\n\n\"Mother, Brandy's my girl and I'd appreciate you not going all-out crazy on her best friend,\" I winked at my Mom. Normally, I'd never go against my maternal unit without a halberd, or a howitzer, because she was damn tough and mean as a hyena pack leader. Things weren't normal. \n\n\"Fine Vlad. I'm disappointed in your desire to crawl through the sewers, but a man's got to learn the harsh realities of cum dumpsters eventually. You might as well start with the high school's premiere examples.\" \n\n\"Bitch, you and I ...\" Taliyah started marching around the table. None of us did anything though Mom's face developed a certain level of gleeful anticipation.\n\nTaliyah clued in on the older woman's confidence and slowed down.\n\n\"Taliyah, my Mom can kick my ass,\" Alexander said. \"She will dispose of you in ten seconds flat.\"\n\n\"Is your whole family filled with assholes,\" she spun on him angrily.\n\n\"Nah, mainly its Mom and Mikhail,\" he noted calmly. \"Me, Vlad and Dad are pretty mild mannered in comparison.\" That answer didn't appear to mollify Taliyah much, nor was she inspired to take the attack to the mature woman who looked ready, willing, and able to put a beat-down on her.\n\n\"Whatever,\" Mom shrugged. \"Brandy, when you've finished your school work, come find me in my office on the second floor.\"\n\n\"We'll be leaving,\" Taliyah grumbled.\n\n\"Not if she ever wants to fuck any of my boys again, she won't,\" Mom laughed as she strode away.\n\nTaliyah's blistering retort died on her lips when she saw the look of near-panic on Brandy's face. Brandy had the look of a junkie dying for her next fix ... which made me feel sorry for her, damn it. Homework finished, the three boys headed out for some warming up before Mikhail and I had our bout. We had to get Bebe to referee because Alexander had 'someplace else' to be. \n\nBrandy headed up like one of the condemned, leaving Taliyah at loose ends. She got off on us being all hot and sweaty ~ it was September in Arkansas. She was even more thrilled to watch Mikhail kick the crap out of me in two Sambo matches. She vocally encouraged me yet her eyes were all over Mikhail. When he caught her at it, her response was particularly annoying to all of us.\n\n\"I don't do White guys,\" she snubbed her nose at my brother - all of us really. For me, it was back to 'The Plan' and that included some Brandy-time. Brandy had appeared behind Taliyah in the last minutes of our workout. She hung back nervously, her hair wet and her skin freshly scrubbed.\n\nMom was really working the 'sullied, dirty girl' angle on her. Alexander and I had already triple checked our mother for her own poisonous version of racism. Mikhail didn't really care. She assured us it was this town in particular, not Blacks in general, that drew her ire. That put things clearly back into her history here way before we were born.\n\n\"Hey Brandy,\" I gave her a toothy smile, \"did you just get here?\" Taliyah looked over her shoulder at her BFF.\n\n\"Ah, yes ... I was feeling a bit of the heat ... so I grabbed a shower,\" she lied. She'd been cleaned inside and out.\n\n\"Damn,\" I frowned. \"I wanted to spend some time with you. Do you want me to take you home now?\" Brandy blinked then blanched.\n\n\"NO ... I mean, I'm okay now,\" she reined in her fears.\n\n\"Do you want to go horseback riding?\" I suggested. Not happy.\n\n\"We could take them up to the hunting lodge?\" I added. Very happy. \"That would be a great workout.\" Oh, she was thinking of working out, alright.\n\n\"Yes, that would be great,\" she babbled. Now Taliyah was getting really freaked out.\n\n\"Brandy, I'd like to go home now,\" Taliyah broke our line of sight.\n\n\"Taliyah, please,\" Brandy begged desperately enough to worry her friend.\n\n\"Fine,\" Taliyah huffed. \"I've never been horseback riding before. It might be fun.\"\n\n\"I'll show you two the basics and pick out horses for you,\" Bebe delicately proposed. \n\n\"Vlad and I need to take a shower if we are going to ride with you,\" Mikhail mirthfully noted.\n\n\"I don't want to go anywhere with you,\" Taliyah griped.\n\n\"I feel the same damn way,\" Mikhail shook his head. \"The rule is never to send out a novice rider without a guide. Vlad will have to 'take care' of Brandy, so I'm stuck with you.\"\n\n\"Why can't Alex come instead,\" Taliyah questioned him.\n\n\"He has an afterschool project he is working on,\" he sighed. \"I'll let him know you asked about him.\" Taliyah looked stormy even while she relented for her friend's sake. Brandy wanted to help me bathe. I had to remind her that she and Taliyah needed some preliminary work with Bebe before we could head to the hunting lodge.\n\nI still hurried through my shower, as did Mikhail. Mom briefed us on our strategy. Mikhail could touch and taste, but his dick remained sheathed. I could tear of chunks off Brandy til my heart's content. The louder, the better and all designed to break Taliyah down. Mom wouldn't let Mikhail do the deed until she was 'cleaned up' in the same way Brandy had been.\n\nIt seemed a bit needlessly cruel ... for Brandy, Taliyah and Mikhail, but listening to our Mother seemed the prudent thing to do in this case. By the time me and my brother got to the stables, Brandy was ready to bust a gut. Bebe had already saddled up our mounts to ease our passage.\n\nThe second we hit the trail, I leaned over and exchanged saliva with Brandy. She was raring to go and I could smell her sex wafting toward me already. I made sure to kiss her during every turn where I had room enough to bring my mare beside hers. \n\nTaliyah had started out snickering. By the time we made it to the hunting lodge, she was anything but amused. Taliyah was still operating under the assumption Brandy was Darius' obedient little sperm receptacle, so Brandy's lust for me unsettled her.\n\n\"I've got this,\" Mikhail chortled as Brandy and I leapt off our mounts and ran inside.\n\nShe sprinted straight for the master bedroom, scene of our first frolic, like a woman with the Hounds of Hell at her heels. I raced to catch up. She jumped, spun in mid-air, and bounced on the mattress twice. She didn't need to urge me in shedding my clothes. She applauded my failure to have on any underwear.\n\n\"Please ... please, please I want you,\" she begged. She was on her back, her legs spread wide open and her arms were reaching out, ready to pull me in. In I went and off she went. I slammed a powerful penetration deep into her womb and Brandy orgasmed - loudly.\n\nShe clung to me as if I was a life preserver and she was being swept up in white-water rapids. Her breathe came in labored huffs. Previous experience had taught me to give her a chance to recover after a climax. I decided to try a trick my Mom had suspiciously suggested 'might be good for her'.\n\nI sucked on two of my fingers, getting them good and slick with my saliva. I snaked that hand between us until I found her pronounced clit. I few little plucks and it was a VERY HAPPY clit and Brandy went off again. I felt like a spectator to a one-woman sex show. Had her vaginal walls not been trying to my milk my prostate down through my urethra, I'd have thought she was faking it.\n\nShe sounded like ... ugh ... Mom when she in the midst of 'private time' with Dad. Not where I wanted my mind to be going right then. Brandy finally stopped trying to hug me to death and let herself gently fall back on the comforter. Her look said it all: ~ more. More was what I gave her.\n\nI was peripherally aware of Taliyah sneaking to our open door, watching for a few minutes then leaving. Brandy wasn't paying attention. Her focus was completely absorbed by me - my eyes, my tongue, my fingers and my cock rocking in and out of her vagina. \n\nMy glans caressed every inch, every fold and ridge of her vagina as if we were physiologically designed for one another. I could ravish her, tease her and go every speed in between and she loved it. I was having so much fun, and feeling I was doing such a masterful job, I lost track of her orgasms and didn't really snap out of my sex-frenzy until I ejaculated.\n\nI felt I had run a 5K and Brandy clearly looked like she'd shared every step.\n\n\"Don't ever leave me,\" she whimpered as I rolled off of her. She sluggishly pulled her body atop mine then repeated that declaration. There was no question in my mind she was stating a heartfelt desire far greater than a plea for companionship.\n\n\"Water,\" I gasped. \"And something sugary sweet ... besides you,\" I teased her. Brandy was super-pleased with herself and temporarily sated. She was so aglow with her happiness, she totally forgot we had company until we were both in the kitchen. The bar separated us from the den and dining room (an open concept) while offering a clear view of both rooms.\n\nThe television was on. Taliyah was in a leather recliner, rear to us, while Mikhail was slouched on the sofa, its side to us, with his long legs stretched out over a foot stool. Taliyah was twisted in her seat, looking around the head-rest.\n\n\"Umm-huh?\" Taliyah murmured. \n\nBrand had been cuddled up to me, her back against my front, both of us naked, when she recalled her friend.\n\n\"It is about time,\" the BFF frowned. \"Now that you are finally done, can we go?\"\n\n\"Are we finished?\" Brandy turned around in my arms so that she was looking into my eyes.\n\n\"Nope. I still want my sugary treat ... and desert,\" I emphasized that last part by reaching down and grabbing a double-handful of her scrumptious ass.\n\n\"Let me get you something to eat,\" she perked up. She tried to get away - twice - yet each time I pulled her back into a French kiss. The third time she was able to fend off my advances. First came the bottled water from the refrigerator. Next, she stood on her tippy-toes to look into the above-the-counter wooden cabinets.\n\nShe found several cans of peaches the first time out. She pulled one down, looked over her shoulder, shot me a wicked sultry look then retrieved two more rapidly. A drawer search revealed a manual can opener. Getting to the peaches became a whole new ordeal for Brandy as I was relentless in my hunger for a touch of her and more than one taste.\n\nThe third can found her squirming her butt against my achingly hard cock ~ she was really that hot looking. I reached around her, moving my hands down between her legs then lifted her up until my cock sprang free from the tight valley of her buttock.\n\n\"Ooohhh...\" she whimpered.\n\n\"Put it in,\" I rumbled into her ear. A little repositioning, rolling her hips forward and resting her palms on the counter allowed me to surf her channel from behind. This was a careful, easy screwing this time around. \n\nBrandy hooked her metatarsus behind my knees allowing me to support her weight with one hand while I soaked the other in saliva. The first went to her clit, making slow circles around its base. The left hand went to her right breast. I kneaded it like warm, fresh dough, running along the sweat trapped beneath each mammary before raking my fingernails up to her teat.\n\nShe screamed ... and I mean SCREAMED out her passion. Later Mikhail told me that utterance crushed any plans Taliyah had for cutting Brandy's and my intercourse short.\n\n\"Do it again,\" she yelled. I obliged. Brandy was gyrating and humping me all on her own.\n\nBefore she could boil over, I manipulated her body until I had her butt resting on the edge of the counter and the back of her knees resting on my arms. Brandy was proving to be exceptionally fit and limber. She ran her fingers through the back of my hair, true happiness radiating forth from her aura and intense pleasure originating from our fucking.\n\nThe open cans of peaches caught my eyes. I was seized with a brainstorm, or an unexplored food fetish. I picked up a can, slowly dripped the thick peach syrup onto her right breast then licked it up.\n\n\"Yes, yes, yes,\" she muttered. Her lips were next then her left teat.\n\nNeck, lips again and chin followed, all with near-similar results.\n\n\"Bro,\" Mihail chided me, \"take it to the bedroom.\" I heeded his advice. With one can of opened peaches and Brandy on my rod, we staggered back to bed. I didn't stagger because of Brandy's weight. It was her ferocious attentions that kept me unbalanced.\n\n\"Baby,\" Brandy purred. \"Let's give my poor pussy a break.\"\n\n\"Don't call me 'baby',\" I teased her right nipple with the cool can. \"Think of another pet name.\" She knew what I meant - I wouldn't accept any name she'd used with Darius. She bit her lower lip, using that erotic cuteness of the gesture to buy her some time and forgiveness.",
        "\"Prince?\" she hazarded.\n\n\"Prince Vlad?\" I arched an eyebrow. I didn't normally associate 'Brandy' with 'clever'. She nodded and repaid my smile with small kisses on my lips. I put the can aside before falling on the bed with her.\n\nI opted to give her 'poor pussy' a break, by rolling over on my back with Brandy on top, looking down. Brandy pumped her eyebrows, 'dismounted' then rubbed her belly over my soaked, sticky penis while she reached for the peaches. Instead of Peaches and Cream ... well, after some work on her part, it was Peaches and Cream. Clever girl indeed.\n\nAs we were relaxing, Brandy on her belly while I lavished attention on her fit, fleshy ass cheeks with kisses, licks and nips - no anal play - we began hearing noises from the front of the lodge. Taliyah was trying and failing to control her mewling noises.\n\n\"I wonder what they are doing?\" Brandy giggled. I knew what they weren't doing. No penetration. No kissing. The rules for the three of us were clear. We weren't going where another man dumped his semen until that stuff was flushed, or washed away. For some reason, Mom believed any prospective dates would put up with that level of humiliation.\n\nShe'd been right about Brandy, but we'd had Brandy's back to a wall with Darius sending her into our Bears' Den (we were Russian-Americans, so we were bears, not lions). There was no way Taliyah would put up with that. As it turned out, Mom was right. I was a novice when it came to women and their sexual desires.\n\n\"Prince ...\" Brandy grew hesitant.\n\n\"Yes Brandy?\" I decided I didn't want a pet name for her.\n\n\"I think I'm falling in love with you,\" she refused to look at me when she confessed that. Oh Hell NO! She was still Darius' sex sleeve. Time to twist the knife.\n\n\"You told me you are Darius' girl,\" I threw her words back at her. She buried her face in a pillow and started to sob. I would have been aghast except Mom, the presentimental witch that she was, had warned me about this feminine tactic to avoid responsibility.\n\n\"Stop that,\" I grew stormy-serious. \"You don't get to cry, Brandy. I keep showing you I care for you and I certainly want you. You are the one with another man.\"\n\n\"That's not fair,\" she turned her tear-streaked face my way. Yep, it was an act. \"You know that Darius and I are ... complicated.\"\n\nI sat up. Two could play this game. Besides, there was another girl I truly was interested in and by Brandy-logic, I was free to play the field. \n\n\"No,\" I shook my head in denial. \"It is not complicated. You want to fuck us both ...\"\n\n\"No Vlad,\" she protested. \"I only want to have sex with you ... it is just ... Darius has this hold over me.\"\n\n\"You are not asking for my help breaking free,\" I pointed out.\n\n\"Vlad,\" she reached out and stroked my bicep, \"You know it's ...\"\n\n\"Oh fuck yeah!\" Taliyah sang out. Apparently those internet tutorials on 'finger-play' and non-penetrative erogenous zones had paid some vital dividends for Mikhail. I had delivered fuck-all orgasms to Brandy already today, yet she suddenly looked jealous. I could deal with that. I slid off the bed to some urgent pouting on her part. She didn't have to wait long. \n\nI pulled her off the bed by her left hand and into my arms.\n\n\"Ow,\" she squeaked as I put a stinging, cupped hand to her bottom. She tried to maneuver away and the chase was on. If she tried to face me, I tickled her. When she tried to avoid me, her butt got a good spanking. She squeaked, squawked, giggled and yelped playfully as I hunted her down.\n\nBrandy proved shameless, nimble for such a full-figured dynamo and athletic. She went squealing down the hall, passed the kitchen into the den. When she vaulted the sofa like a pommel horse, she finally was able to put some distance between us. I could get over the sofa just not as fast as she could. She took the momentary reprieve to spin around and shake a scolding finger at me.\n\n\"Stop taking me for granted,\" she surprised me.\n\n\"What?\" it was my turn to squawk. \"I'm not taking advantage of you.\" Brandy looked up at our ten inch height differential defiantly. \"Fine, I'm not taking advantage of you this very second.\" She countered by poking her chin forward, putting her hands on her hips which caused her tantalizing succulent boobs to bounce.\n\n\"Brandy?\" Taliyah panted. We both finally looked over at the kitchen bar counter. Taliyah was on her back, her head tilted back so she was gazing at us upside down. Her shirt was rolled up, as was her bra. Mikhail had her legs pushed up with her ankles on his shoulders. He looked wickedly pleased with himself.\n\n\"Taliyah?\" Brandy returned the questioning tone. \"You hate Mikhail.\" Taliyah turned her head forward and to the side.\n\n\"I still hate his cracker-ass, but his tongue ... the bastard refuses to fuck me though,\" she complained. \"It isn't fair that I'm not getting what you clearly ARE getting.\" Mikhail was sticking to the rules so no tongue-fucking either.\n\n\"Taliyah, their Mamma doesn't let them have random sex,\" Brandy informed her. \"You need to talk with ... ah ... Mrs. Samsonov before you get any of the really good stuff.\" Mom was three ~ four miles away, yet I could still make out the reverberations of her maniacal merriment. Her wacky plan was working for no sane reason I could understand.\n\n\"No way,\" Taliyah grumbled. \"I'm not asking their Mamma for shit.\" Mikhail shrugged then let her legs fall to his sides abruptly.\n\n\"I can get tail elsewhere,\" he snorted.\n\n\"You fucker,\" Taliyah's grumbling turned to a snarl. \"At least help me clean up.\"\n\n\"Why should I? I'm not your boyfriend and from what I hear, he treats you like a whore too,\" he mocked her. Did I mention my brother could be a cruel, pompous ass? Alex was the nice guy of the three of us. I was glad I had Mikhail for this episode because I bet Alex would have gone off-program. \n\nAlex didn't need to start having feelings for a girl who'd feed him to Darius' crowds without a hint of regret.\n\n\"Vlad, do something?\" Brandy demanded with a pout for extra oomph.\n\n\"Like what?\" I countered. \"You are the ones who are cheating on your boyfriends and using us for your dirty-little-secret, sexual pleasures. We could be with girls that give a damn about us.\"\n\n\"Stop being such a bastard,\" Brandy slapped me in my left pectoral. She followed that attack up by rushing into my arms, wrapping her arms around my waist and holding me tight as she pressed her ear to my heart. What?\n\nI was beginning to wonder if I had been lucky never having a serious girlfriend before. For that matter, I was reconsidering whether my Father's blas\u00e9 attitude toward women might indeed be the right way to go.\n\n\"Frankly, Brandy ... I don't give a damn,\" I adopted my best Rhett Butler. \"I haven't had this,\" I squeezed her ass so strongly she had to rise up against me.\n\n\"I thought ... thought you would be different,\" Brandy was somewhat shocked by my raw, brutal demands. She meant she thought I'd be more like one of the spineless limp-dick White boy she'd grown up with. I fucking hated stereotypes.\n\n\"I am different. I don't have to dress you in a dozen men's semen to mark you as my own.\" \n\n\"I'll take you when I want, how I want and where I want ... unless you run away ... really, really fast.\" I spanked both cheeks at once. \"Wench - bedroom - NOW!\" Brandy gasped in pleasure, struggled free and beat her little wench-feet back to the bedroom. I strode after her like the Captain of my own World.\n\n\"Why can't you be more like him?\" Taliyah complained to Mikhail. He had other things on his mind. \"Hey ... stop that ... I'm not Brandy. I don't ... aaahhh ... take it up the ass ... I said ... aaahhh ... stop that.\"\n\n\"Bitch, the horse is outside. Make up your mind right now, or I'm going to make it up for you,\" he growled back.\n\n\"I'll bite your dick off, White Boy,\" she snarled in response. Since I didn't hear a door slamming, I assumed she chose to challenge Mikhail. I don't understand women. Back in the master bedroom once more, Brandy was trying to hide beneath the comforter.\n\n\"Vlad, can we talk for a ...\" she balked when I ripped the comforter out of her 'frightened' hands and off the bed on one mighty yank. \"Vlad!\" \n\nI was on her in a flash. I didn't go straight for the anal intercourse. First we wrestled around. She nipped and I kissed her and suckled hard enough on both nipples to give her hickies.\n\nShe didn't claw me, nut me, or hit me all that hard so I figured this was what my Mom had called 'aggressive foreplay'. What I did know was by the time I had rolled her onto her stomach, her butt was pressing and wiggling against my cock with persistent need.\n\n\"Lube,\" I exclaimed. She froze up, figuratively (she was slick with hot, sticky sweat), and waited for me to 'prep' her with one finger ~ she'd felt a lot tighter this time out ~ and only reinvigorated her urgent writhing once I'd returned to my dominant spot over her. Even with lube in her anus and a generous coating on my phallus, it was tough going.\n\nIn hindsight, I should have taken it easier on her, but I was inexperienced and Brandy was willing to scream into the pillow instead of telling me to slow down.\n\n\"Damn,\" I grunted. \"That's ... tight ...\"\n\n\"Yes,\" she whimpered.\n\n\"Does it hurt?\" I stupidly inquired.\n\n\"Yessss ...\" she whispered.\n\n\"Good,\" I growled. I pulled back until my glans dilated her sphincter, then slammed in hard and fast again. It hurt my cockhead, but I did it again and again anyway.\n\nI could make out her sobbing. While I was formulating a new plan, her thighs and ass began to quiver. The vibrations reverberated over her entire body and then she howled like a Lost Soul discovering Paradise. It was hardly something I could call a human noise. It was definitely jubilant. \n\n\"Ha ... ha ... harder,\" she wheezed. \"Fuck me ...\" and I started repeatedly pile-driving her butthole. The first time I had been using my hips. This outing I worked all my brawn and weight into my thrusts. Her vaginal secretions made a mess of the sheets, coated her thighs and my scrotum and made this oddly erotic squelching noise every time I bottomed out in her rectum.\n\nI kept going, despite all-over muscle cramps, both of us being drenched in sweat and finally Brandy losing her voice until I shot-gunned a full load of cum deep into her intestines (perhaps an exaggeration). Brandy lay there, motionless after I rolled off. After two, or three, minutes, she mumbled something.\n\n\"What?\" I rolled onto my side and petted her spine from the nape of her neck to the small of her a back. She mumbled something again. I kissed her behind the left ear, nibbled on the lobe then repeated my question.\n\n\"I really do love you,\" she moaned. Shit.\n\n\"Ah - ah- aha - yeah - bi - bitch - ah - ha - is that all you - ah - got White boy,\" Taliyah was getting progressively louder from the front area. I could hear the recliner creaking and imagined it rocking back and forth. This I had to see. Brandy was dead weight as I tried to drag her with me out of bed. I doubled back, swept her up into my arms bride-style and quick-footed it toward the noise.\n\nTaliyah's shoulders and head were evident over the back of the leather recliner. Her face was a mask of pleasurable pain, her eyes squeezed tightly shut and her muscles strained whenever she rocked back. Mikhail was behind her, rhythmically pushing her forward then letting her rock back. His countenance was one of intense concentration. They were both naked and working up a sheen of sweat. \n\nMy bet was on him trying to not be sadistic more than stopping himself from coming too soon. We Samsonov men had some incredible stamina to go with our bulky size.\n\n\"Mikhail, I knew you couldn't turn Taliyah away for long,\" Brandy heaved with amused exhaustion. Mikhail shook his head in the negative.\n\n\"How's that ass, Bro?\" I teased him. Brandy looked up at me uncertainly, then back to Taliyah. The Black girl's head hung in shame but that didn't stop her form giving back as good as she got.\n\n\"Taliyah!\" Brandy gasped. \"You gave up your ass ... your anal virginity to Mikhail? I thought you would never give it up?\"\n\n\"He held me down,\" she grunted. She was clearly lying about my Brother overwhelming her as well as her raunchy gratification. Against all reason, Brandy began licking my neck and rubbing her torso, ass and thigh against my chest and arms.\n\n\"Mikhail, take her to the sofa,\" I suggested. He looked up quizzically so I hefted Brandy high enough to cause her to 'meep'. I took Brandy to the sofa, placed her knees on the cushions and bent her chest on the back rest. Taking her by the hips with one hand, I pulled her rump back as I impaled her sphincter on my reanimated cock for one more ride.\n\nEight strokes in and Taliyah and Mikhail appeared beside us. Brandy was in pure bliss. Taliyah squinted at her, then slowly gave into her own rapture. I'd always considered anal sex to be painful for the 'catcher' and not something a person could get into. Then I made allowances for Brandy's individual kink. Now I had Taliyah giving her asshole up to my brother and going wild.\n\nI seriously began accepting my novice status and the sad reality: Mom must have been a highly proficient slut to be giving such good advice to her nearly virginal sons. Her awkward (for us) verbal lessons, so hard to believe at the time, were proving timely and terribly accurate. The last trick, she said, was to treat a woman like you owned her while not to treating her like some random orifice.\n\nWhen I picked up the pace on Brandy's tight bunghole, Mikhail matched me. What was ecstasy for Brandy turned out to be too much for the anal virgin Taliyah. She bit down on the sofa cushion in order to stifle her scream. Taliyah vibrated up against him as her climax rocked her in a series of savage tidal surges.\n\nBrandy soaked in Taliyah's fuck-stunned look while Mikhail's gaze was one of frank appraisal of my girl's physical sensuality. She didn't press back to meet my thrusts, instead presenting her ass for the best angle of attack. Brandy squeezed her anus, and rotated her hips to give me as much stimulation as I was giving her.\n\n\"Damn Vlad, your bitch has it going on,\" Mikhail laughed. Brandy shot me a quick look. Taliyah looked downright insulted by the comparison.\n\n\"Her name is Brandy - not bitch, Mik,\" I glared back, \"and your woman is looking unappreciated.\" Calling him Mik told my brother I thought he'd crossed the line. Brandy's response was immediate. \n\nShe arched her back up until her body was parallel to mine. Brandy kept up her gyrations allowing me to fondle her bodacious bosom while engaging her in a deep, soul-draining French exploration of the Lost Continent. The sexual act was a never-ending journey. Sensing she wanted to keep that pose for everyone's benefit, I slipped two finger from my right hand into our mouths.\n\nThose slick fingers went down to her clit and pinched that mighty nub between them. That really set her off. My left hand migrated from nipple to nipple, giving each areola a spirited slap. Her whines became orgasmic.\n\n\"Why won't you kiss me like that?\" Taliyah griped.\n\n\"Because I don't feel like picking some other guy's pubic hair out of your teeth,\" he mocked her. They started struggling, but Mikhail wouldn't let her turn around. He did make a concession to her amorous desires by planting kisses on her neck and ear. That mollified Taliyah somewhat, though she didn't stop trying to break free. One titanic exhalation brought Brandy crashing down from her latest climax.\n\nShe hung limply in my embrace while I cradled her in my arms.\n\n\"Take a look at your brother,\" Taliyah moaned. \"He knows how to treat a lover, you Neanderthal. You could learn something.\"\n\n\"I like my Black Bitches quiet,\" he teased. \"Why can't you learn that? Is it too complicated for you to understand?\"\n\nThat new bit of outraged allowed Taliyah to break free. As she spun around, Mikhail wisely (and stunningly) retreated.\n\n\"I ought 'a smack some color into you, Asshole,\" she glared.\n\n\"That's only fair,\" he raced behind the sweaty recliner. \"I sure pumped a whole lot of white into you.\"\n\n\"Rashaan is going to kill you when he finds out what you did to me,\" she screamed. That was her boyfriend, the starting quarterback of the football team.\n\n\"Unless you want to visit him in the hospital, he'd better bring help,\" Mikhail kept mocking her. \"I'm sure he'll love you giving up the hole you wouldn't give him.\"\n\n\"ARRRRRRRHHHH!!\" Taliyah screamed loud enough to give me and Brandy a start. \"You forced me and I'll let him know it.\"\n\n\"That's two people lying and two telling the truth, Taliyah,\" he generously insinuated the Brandy would back her friend over her fuck-buddy. \"Besides, this is redneck Davis County, not niggah-loving Kingston. The law is on my side.\"\n\nThat was one 'N-word' too many. Taliyah kept chasing Mikhail who kept taunting her. Playtime had to end. The Sun was starting to set outside. Brandy seemed fascinated with the exchange of barbs mainly because I doubted she'd ever seen a White man openly confront the Black-White divide so fearlessly. This wasn't rednecks throwing empty beer cans and insults from the back of a moving pick-up truck. \n\nMikhail was absolutely confident in his ability to withstand any retribution the Black high school power structure could throw his way. I was more worried about Dad and Mom - Dad wouldn't approve of our promiscuity - Mom had yet to bust up Taliyah to her satisfaction. How she'd handle Mikhail's butt-plugging solution was unknown to me. \n\nThe immediate problem: Mikhail couldn't resist sticking verbal barbs into Taliyah and Taliyah always rose to the bait. My solution was to have Brandy get Taliyah back to the master bedroom while I gathered up her clothes. As Mikhail handed me her bra - he'd thrown it across the room when stripping her,\n\n\"I didn't ham it up too much, did I?\" he winked.\n\n\"Nah. I think she thinks you are a complete and utter bastard,\" I replied in a low voice.\n\n\"Damn, I really wanted fuck her today. She's smells great and she's fierce - a real tiger,\" he kept smiling. Ah crap. Maybe he was smitten too. There was no way I could clue either Brandy, or Taliyah in on that. As fun as fucking Brandy was, as well as me enjoying being in her company, we had a golden opportunity here.\n\nTomorrow a vengeful Taliyah would unload on Rashaan. He'd want payback. Darius would stop him until he found out I'd banged Brandy all over the place as well. Then we'd let the avalanche take its course. Letting slip our Dad was going to come see us at basketball practice ~ Mom would talk him into that for us ~ would guarantee a fight during school hours.\n\nTomorrow was Thursday and Friday was an 'away' game so the football team couldn't get us after school then. That meant the team would be leaving school before the end of seventh period on Friday and there was no way they could wait to beat us up until next Monday. I had little doubt Darius would smell a set up. Convincing his minions of that would be the impossible part.\n\nIn the bedroom, Taliyah was giving me a rather peculiar look.\n\n\"Are you afraid I'll steal something?\" she sniped.\n\n\"What do you mean by that?\" I was puzzled.\n\n\"He's not like that,\" Brandy defended me ... from what, I wasn't sure.\n\n\"He's White, you're White and his family are a bunch of thieves anyway,\" she spat. Again ... huh?\n\n\"Brandy?\" I inquired. She gave me a confused look back. \"Okay, both of you should remember I'm from Bumfuck Alaska, before I came here I knew precisely four Black people and one of those was an infant ... and go from there.\"\n\n\"Oh,\" Brandy nodded. Clearly I was a simpleton. \"Taliyah thinks you don't trust her back here with only me because she's African-American and you believe she'll steal something.\"\n\nI laughed loud and hard, my restive cock bouncing along with me. Both girls appeared pissed at my reaction, so I felt I needed to explain.",
        "\"Taliyah, you are the second hottest girl in school. I'm back here because I like seeing you naked as well as in various forms of undress. You are smoking,\" I chuckled. \"It is nothing more complicated than that.\"\n\n\"Oh,\" said Taliyah. She was both embarrassed about missing the obvious as well as loving a helping handful of padding for her ego.\n\n\"Oh,\" pouted Brandy. \"Second?\"\n\n\"Yeah. I've got this thing for Amy Hutchinson,\" I nodded seriously. Amy was a nice, sweet-mannered girl. She was also a sophomore, a late bloomer and flat as a board.\n\n\"Oh!\" Brandy unleashed her faux-fury, ran up and slapped both my triceps. I was mesmerized by mammaries straining to break free of her frilly beige bra. Her beige panties were doing a good job of being transparent as well. She spun around like a ballerina and attempted a getaway. I was having none of that. \n\nI tackled her to the bed, press her chest down on the rumpled bed. She struggled sensually. I began nuzzling the back and left side of her neck. Then I began tickling her. She was helpless before my adroit fingers.\n\n\"Please,\" she begged. \"Please stop. I'm about to pee on myself.\"\n\n\"Fine,\" I withheld my torture, \"but you owe me a two minute make-out session at your front door when I drop you off.\"\n\n\"No,\" she declared. Butt thump. \"Never.\" Hip shimmy. \"Not happening,\" she giggled while rapidly rubbing her panties over my unprotected cock.\n\n\"Let her up, Vlad,\" Taliyah cooed softly as she ran a manicured hand from my right shoulder to my right buttock. She gave my butt a light pat to 'enforce' her command.\n\n\"God damn it,\" I grumbled as I rolled off Brandy. \n\nI stared up forlornly at the ceiling fan. Brandy 'harrumphed', shot Taliyah a poisonous glance then went to all-fours next to me.\n\n\"One minute is all you're going to get, Mister,\" she compromised. I leapt off the bed.\n\n\"Hurrah!\" I fist pumped. The rest of the redressing went off quickly enough. I stripped the bed, rounded up the sheets and hung the comforter on the back veranda to let it air-out. It smelled like pussy juice and sweat, after all. I would put fresh sheets on the bed later. On the trail, I took point since I was the most familiar with the path. Brandy followed then Taliyah with Mikhail taking up the rear.\n\nOnce we broke out into the bottom land, Taliyah moved up side by side with Brandy and began a sneaky conversation behind my back. According to my brother, they studied me a great deal while whispering. Occasionally, Taliyah shot vile looks back at him. He responded by sticking out his tongue and licking the tip of his nose. \n\nWe Samsonov men have long, strong, agile tongues. I wasn't sure what genetic malformation was behind that. Upon our return to the stables, Brandy and Taliyah made to leave, but Mikhail stopped them.\n\n\"First rule of horse-riding: tend to your mount before tending to yourself.\"\n\n\"Vlad,\" Brandy looked my way. She nibbled on her thumb. \"Is that a rule you follow ... tending to your 'mount' first?\"\n\n\"Only if I plan to ride her later,\" I winked to her. \"Then I know I'd better pet her, comb her flanks, feed and water her and make sure she is well refreshed before the next ride.\"\n\n\"Give it a rest!\" Mikhail scoffed. \"She's already fucking you silly. You don't have to sell it.\"\n\n\"Neanderthal,\" Taliyah sneered at him as she shoved past him and back to her mount. Brandy sashayed back into the stables as well. If I wasn't careful, I was going to be picking straw out of my underwear.\n\n\"Brandy - what the idiot said - you don't need to convince him,\" she teased her blonde friend. Taliyah and Mikhail waged a relentless skirmish resplendent with verbal barbs and rough, handless shoving. Before Brandy and I could get similarly distracted, her phone rang. A fearful flash of her eyes gave away the ID of the caller.\n\n\"Hey Darius,\" she sounded upbeat. \"What's up, Baby?\" Darius wasn't screaming, so I couldn't make out what he said. I went back to putting away our tack and bridles. \"I'm ...\" I mouthed 'tell the truth'. \"I'm at the Fonteneau House (Mom's family's last name) with Taliyah. Mr. Baxter wanted me to help Alexander and Vladimir with our first Civics project.\" Not a total lie.\n\n\"What? Isn't what you think ... of course, Baby ... hold on ...\" she handed the phone to Taliyah. \n\n\"Get us out of here,\" Taliyah preempted Darius - almost. \"We've been ... listen Darius ... no,\" she grew sulky, then, \"Don't be a Jerk!\" she spat. Brandy gasped. Mikhail looked impressed and I was torn between the two reactions.\n\n\"I'm not your property ... and I'm not your bitch either,\" Taliyah grew more belligerent. \"I don't give a fuck ... if Rashaan gives a fuck, he can ... fuck you,\" she blasted Darius before she killed the connection.\n\n\"Taliyah ...\" Brandy mumbled fearfully. The magnitude of her rebellion began dawning on the Black Cheerleading co-captain.\n\n\"Shit Taliyah, if you wanted to sit at our lunch table so bad, I could have told you a half dozen safer ways to do it,\" Mikhail chuckled. She backhanded my brother in the chest which only made him laugh harder. Six blows later, he raised his hands in surrender. \"Fine ... you can sit on Alexander's lap next time.\"\n\n\"Bastard,\" Taliyah muttered. Her phone rang. It was Rashaan. \"Hey Sugah, how's ... yeah ... with Vlad and his shithead brother Michael.\" Mikhail took the opening to grab a breast and squeeze it. \"Mother-fucker!\" she yowled. Mikhail was already running around the horse to escape her.\n\n\"What ... no ... he grabbed my tit ... what do you mean?\" she dove under the mare and kicked my rambunctious kinsman. \"Mikhail! No, the other one!\" she screamed because Mikhail was starting to wheeze he was laughing so hard. \"No, that's Vlad ... yes, the one with Brandy. Damn Rashaan, you are as dumb as a stump. The Mean ONE!\" she meant Mikhail.\n\n\"Triplets means three,\" she sounded exasperated. \"No, that's twins.\" Swing and a miss. \"I'll call you back. I'm making Vlad and Alex twins ... NO! They are not ... BOY!! I'll call you back.\" Mikhail was howling so loud he fell over on his side, gasping for air. She leapt on him, legs straddling his hips and began wailing on his head and shoulders.\n\n\"Shut up you ...\" Taliyah berated him.\n\n\"Excuse me,\" Mom's voice snuff out hilarity with all the force of a glacier dropping on a candle wick. Even Taliyah's fury was quelled.\n\n\"Ah ...\" Taliyah stammered, taking in their awkward situation.\n\n\"I heard it all ...\" Mom glared. \"Mikhail had it coming. Continue if you so desire.\" Four sets of eyes blinked in surprise.\n\n\"Mom!\" Mikhail protested. Taliyah tested these uncharted waters by smacking Mikhail's left arm - the one he was using to shield his head. Mom didn't protest, oh no.\n\n\"Bebe, let's get the horses taken care of,\" she called over her shoulder. Bebe had been hiding just out of sight. \"Dinner will be ready in thirty minutes, Vlad. Take your guests home and hurry back.\" Bebe and Mom took our places while Brandy and I retreated hand in hand. Taliyah stood up without moving away. Mikhail extended a hand up, expecting her to help him out. Why? I wasn't sure.\n\n\"You fell down. Get yourself back up,\" she mocked him. Mikhail chuckled, rolled onto his stomach then launched himself into a standing position. She was out the door and striding away when Mom spoke.\n\n\"Taliyah, if you want to fuck Mikhail, you'll have to stop being a whore to the football team - non-negotiable.\"\n\n\"I don't want to fuck your son, Mrs. Samsonov,\" Taliyah retorted as she spun around. \"I hate him.\" Mom's responding laughter was cavalier and of a remarkable caliber.\n\n\"We all hate the best men for us at some point and time,\" she chortled. \"You'll learn. All of us Samsonov women figure that out eventually.\" Taliyah was rendered speechless. \n\n\"Now Bebe, get me that curry comb,\" Mom truncated the conversation. We'd been dismissed and even the strangers knew it. \n\nBack in the house, \"I hate you,\" Taliyah reiterated.\n\n\"Thank God,\" Mikhail guffawed. \"I don't think I could survive you being affectionate.\" She swung and missed. The chase was on again, except this time they were both laughing.\n\n{Meanwhile, back at school}\n\nAlexander opened the door and walked into Ms. Blanchard's room. Five disinterested black faces and a nervous Ms. Blanchard looked his way.\n\n\"Whatchya doing here, Boy?\" the leader of the male class sneered.\n\n\"Ms. Blanchard,\" Alex handed her a note on official school stationary, \"I've been assigned to your Augmented Benchmark Examinations Retest Group.\"\n\nThe Augmented Benchmark Examinations (ABE) Retest Group was for second-year seniors with special circumstances [read: athletes] who had failed to pass the exam last year thus didn't graduate. If the school failed to pass a certain percentage of student-athletes, the Arkansas Department of Education would suspend all school athletic programs until the school's graduation rate exceeded 85% (of incoming freshmen).\n\nFor years the big fast bastard of an ex-principal had falsified records, but in 2008, Davis County took over the administration of the tests. After that, Davis County Consolidated High School had been barely limping along academically. Oh, our school had the best 10 year football record in Arkansas and two All-State Championships, but we'd been under academic warning for five of those years and for the past three years we'd been avoiding suspension by the skin of their teeth.\n\nHow had that Black Fucktard handled the issue? He handed out incentives. In this case, the incentive was Ms. Blanchard. Andrea Blanchard had been fired from her first teaching job out of college in just two months and she took the job here out of desperation. When she arrived, she was given the worst of the worst students both grade- and discipline-wise.\n\nThen the principal put the screws to her. She'd been dodging the BBC's for her first year. At the end of the spring semester, her English and Social Studies classes were scoring at the bottom of the rankings. She was given an (unpaid) special assignment. She had to help the team's star player (the QB that year) pass his ABE's, or she would be fired 'for cause'.\n\nThat would have ended her hopes of a teaching career. The jerk she was teaching had scored in the bottom ten percentile because he didn't give a shit because he thought he had a scholarship to some school in California. Now he needed summer school to graduate. Did he knuckle down and hit the books? Nah. He was smart enough to pass without much effort.\n\nWhat he did do was dial up the pressure on Ms. Blanchard. Bit by bit, she sold her soul to the super-star until she was a confirmed alcoholic and surrendered up her pussy (and a bit more) when he finally did pass the final exam. He went off to college out west and she got handed off to the next group of hideous under-achievers. Her abuse went on and on.\n\nHer retention was continuously based on her ability to motivate raising and repeat seniors to get off their asses and fill out the circles on a 'my IQ is at least 85' test. From the founder of this noxious fraternity, the BBC's developed an interesting ritual to confirm their dominant status. \n\nAnal and vaginal sex was forbidden on school grounds, during school hours. The 'students' settled for taking pictures of her sucking their cocks, their cum pooled up in her mouth and her masturbating. Every graduate was allowed to witness her having a gold star tattooed on her buttocks as a constant reminder of her degradation plus all her holes were fair game. How civilized was that?\n\nHad she not been half in the bottle most of the time, she might have been able to salvage some sort of academic career. Instead, she was coasting down toward a bitter end with her liver and sanity racing to see which one gave out first. Then Alexander Samsonov stepped into her life. He'd overheard two jocks joking about it when he first took Ms. Blanchard's English class the first day of classes.\n\nSince then he'd been slowly getting her to open up a tiny bit. She didn't know the full scope of what he knew about her fate, but my brother's sense of chivalry couldn't let this humiliation continue. His problem was how could he separate her from her tormentors? Neither the Principal nor the Vice-Principal would assign him the class. Not only were his grades far too high, those two knew the deal about Ms. Blanchard's servitude and disability.\n\nExit the Fat Bastard Cocksucker and enter the Nutty-nutjob, Dr. Pierre. One impassioned speech about how Alex wanted to enter one of the doc's alma maters and eldest Samsonov triplet had his new, after-hours class assignment. Classes met from 4:30 to 6:00 pm every Monday and Wednesday with a prep test from 4:15 to 5:15 pm on Fridays.\n\nThe schedule was built to work around sports training and game days ~ even away games. Alexander didn't meet the (low) requirements to be in the class, but then Dr. Pierre wasn't qualified to be an educator, so it all even out in the end.\n\n\"Oh,\" Ms. Blanchard subconsciously pouted. \"I wasn't aware you needed the help. You are ...\" she looked over the sea of hostile Black faces, \"welcome to ... join us,\" she petered out feebly.\n\n\"I will do my best to see all of us get through the ABE together,\" he smiled at her, then met the hateful glares of his fellow academic refugees. \"I want everyone to know the idiocy is going to stop ... right here, right now.\" \n\n\"What was that?\" Ms. Blanchard shook away some of her post/after-school vodka haze as she tried to remember what was going on.\n\n\"Nothing, Ms. Blanchard,\" he smiled at the educator. \"I'll just take a seat.\"\n\nMs. Blanchard returned to her lesson plan for the day and after a few minutes, the boys got boisterous. Alexander had a pre-planned response for that. He took out a blue racket ball from his backpack and a leather-bound addition of 'War and Peace' in its native Russian.\n\nThe moment Ms. Blanchard seemed truly distracted, with her back turned, he threw the ball at the farthest troublemaker. He let the guy know it was coming too. What happened next was the normal human reaction. The other four momentarily looked over to see if the fifth guy caught the ball. He did. Alex was being obvious about it. \n\nThat also meant only the ball-catcher saw Alex smash W&P into the back of the closest moron's head. He blasted his fellow student out of his chair. The book's follow-through placed it back into Alex's backpack before anyone else was the wiser. The victim crashed violently into the Black guy next to him and the both went to the floor.\n\n\"What's going on?\" Andrea asked when she turned around. She found two of her students on the floor (one cradling his cranium) one with a blue ball, two staring at Alexander with a 'wtf?' expression on their faces and an angelic Alexander staring at her.\n\n\"He hit Darnell with a book,\" Devonte (aka the ball guy) exclaimed.\n\n\"This book?\" Alexander motioned to the open ABE paperback book he had open in front of him, on the desk.\n\n\"No,\" he grumbled. \"The one you just hid.\"\n\n\"Mother-fucker,\" Tucker, (aka the Collateral Damage guy) pulled himself up. \"I'm going to kick your ...\" he threatened.\n\n\"My head,\" the target moaned. \"I think he dun broke ma head wide open.\"\n\n\"Everyone calm down,\" Andrea wavered.\n\n\"Of course, Ms. Blanchard,\" Alex remained civil. \"I must point out that Darnell appears to have been hit in the back of his skull. He must have been facing forward, listening to your lecture, so his attacker had to be someone behind him and that means it certainly wasn't me.\"\n\n\"Bitch,\" Tucker balled up his fists.\n\n\"Are you implying you want to view my testicles,\" Alexander mocked him.\n\n\"Please everyone sit down,\" Andrea pleaded.\n\n\"Your brothers aren't here to back you up,\" Jase (the other guy closest to him) menaced. His buddy, Lamar, stood as well.\n\n\"I said 'please sit down',\" Andrea turned shrill.\n\n\"Bitch,\" Jase turned on her. \"Sit your ass down!\" He emphasized that by driving his first and middle finger into her sternum. Threatening the teacher brought Alexander out of his chair. Until that point, he'd been in the wrong.\n\n\"Care to try that on me?\" Alexander challenged him.\n\nHe had four ... three actually (Darnell still hadn't gotten off the floor) buddies backing him up and they were all football players. Jase rose to the bait.\n\n\"Bitch,\" he did the finger poke on Alex, \"I told you - OW!\" he screamed as my brother grabbed his two fingers, twisted his palm upwards then bent the fingers down toward the back of his hand.\n\nThe others looked ready to rush in.\n\n\"Do it and I'll pop two of his fingers off and feed them to the next in line,\" Alexander growled. He bent the two fingers farther down forcing Jase to rise up on his toes.\n\n\"Stop it,\" he pleaded in general. Alex stopped trying to rip the digits off and the other students stopped advancing.\n\nHaving made his point, Alex released Jase's fingers and shoved him away.\n\n\"Am I the only one who needs this course?\" he stared down the Black kids. \"If you don't want to listen to Ms. Blanchard's lesson, you can always leave and drop the class.\"\n\n\"Mutha-,\" Jase whined as he nursed his bruised digits.\n\n\"I said, 'PLEASE SIT DOWN',\" Ms. Blanchard screamed. That got everyone's attention. \"Sit down,\" she panted. \"Now.\" For the moment, her students obeyed. That was it for the roughhousing that session. The next round of posturing and non-verbal threats came at the end of class. For a few seconds everyone was seized by a state of confusion.\n\n\"White boy,\" Lamar sneered. \"Time for you to go.\"\n\n\"I'm walking Ms. Blanchard to her car,\" Alex met him hate for hate. \"From this day forward, I'm always going to be walking her to her car when we are done here.\" Andrea paled, even trembling slightly.\n\n\"I ... ah ... Alexander, I'll be okay,\" she mumbled.\n\n\"Ms. Blanchard, that wasn't a request,\" my brother turned to her. \"I'm going to see you safely to your car every night until the end of the school year. Please gather your material so we can both head to our respective homes.\"\n\n\"Don't be hoggin the whore,\" Devonte chortled. Andrea deflated.\n\n\"I wasn't planning to touch your mother, Devonte. Thanks for warning,\" Alex taunted him right back.\n\nIt was still five on one ~ good odds, or so they thought.\n\n\"By the way, gentlemen,\" the Russian voice of reason spoke forth, \"if any of you don't pass the ABE this semester, my brothers and I are going to hunt you down and skin you alive. That should be your motivation for passing from here on out. Test me at your peril.\"\n\nThey mulled that over. There were ten (the seven who attacked Shaquille, the two in the darken hallway and the basketball teammate with the busted jaw) Black kids who had fought the Samsonov triplets and they were all in various states of recovery. Alexander's fear factor was backed up by the bloody facts.\n\n\"I'll catch up with you later, Ms. Blanchard,\" Devonte leered her way.\n\n\"No you won't,\" Alexander sighed in annoyance. \"That shit stops now and that isn't a request either. It is the damn law. Violate the law and you will get to see what passes for civil justice in Alaska.\" That was a complete and utter fabrication. No Samsonov had ever been found committing summary justice, much less been involved with vigilantes. He didn't feel the need to share that family fact with Andrea's abusers.\n\nThey filed out leaving Alex with a stunned Ms. Blanchard. This was the time normally spent on her knees giving hand- and blow-jobs. Instead, she was leaving unmolested. The big, Russian-American and his desires had her worried.\n\n\"Thank you,\" she hesitantly spoke as she locked up her classroom. \"I'm not sure what brought on this ...\"\n\n\"Don't worry about it, Ms. Blanchard. I would like to formally ask you to eat at my family's home tonight. My Mother would like to meet you,\" Alexander invited her out. She flushed, then shot him a worried glance. Was she changing one group of tormentors for another?",
        "\"I'll think about it,\" she edged away.\n\n\"Do you know where the Fonteneau House is?\"\n\n\"No ...\"\n\n\"I'll wait in the parking lot for fifteen minutes. If you decide to share a large family dinner with a lawman, a crazy woman and eleven other people ... well, you will be welcome.\"\n\n\"Eleven? Do you often invite people over for dinner?\" she lightened up.\n\n\"Well, it is my two brothers and I, Mom, Dad, Kamika the cook, Anita the Major Domo, Hector the groundskeeper and his wife plus Consuela the upstairs maid and her two kids and Bebe the stable hand. On their days off, or if the family is having a late dinner, Kamika and Anita have dinner with their families.\"\n\n\"Wow ... okay,\" she nodded. \"I guess one meal won't be so bad.\"\n\n\"Follow me,\" he gave her a tender smile as he went for his motorbike. For Andrea, it was the first true sense of humanity she'd felt in some time. She didn't' think her nightmare was over. If it was alleviate for one day though ... that was one day she hadn't dreamed she'd ever have again. \n\n(Madame Mayor)\n\nWith one arm around Brandy, I was grabbing my keychain when I realized she was looking up at me with her deep blue eyes.\n\n\"Yes?\"\n\n\"I don't know what's going on anymore,\" she seemed truly vexed.\n\n\"You are my first girlfriend,\" I shrugged. \"Don't look at me for answers.\"\n\n\"Seriously?\" she gulped.\n\n\"Yep. You are the first girl Mom's let me get close to. Trust me, she can kill intimacy faster than head lice,\" I joked. Gross perhaps ...\n\n\"Ick (the lice-thing) ... your Mother likes me?\" Brandy shifted gears.\n\n\"I honestly don't know,\" I shook my head. \"Mom's the super-genius / evil criminal mastermind in my family.\"\n\n\"You are pretty smart,\" she offered. I didn't respond. Mikhail and Taliyah transferred their squabble to the back seat. I held the door for Brandy, shut the door, then went around to my side. Once inside, I brought the car to life.\n\n\"Vlad?\" she prodded.\n\n\"I'm thinking ...\" I stated. We were out the gate and rolling toward the nice side of Kingston before I put words to thoughts. \"I didn't know what to think of you when you treated me like shit on the bottom your heel the first time we met,\" I brutally laid out my feelings. \"I pretty much hated you after that stunt you pulled that first Monday.\"\n\n\"I ... that's not fair ...\" Brandy interrupted.\n\n\"Shut up,\" I put a stop to the excuses. \"I don't want to hear your bullshit justifications anymore; now listen.\" I waited until she nodded. \"I don't like how Darius uses you, or the lies you tell yourself about the two of you being together - shut up and let me speak, Brandy,\" I growled. \n\n\"The first time I had sex with you, I wanted to shoot off and get it over with as quickly as possible. I felt you were hoping for the same thing ... when we started. Right, or wrong?\" \n\n\"I ... it wasn't like that,\" she lapsed into her lies.\n\n\"Okay. I've said my piece,\" I looked away. \"I will carry tons of weight for you, Brandy, but I won't carry your lies. If 'it wasn't like that', or 'I wouldn't understand' then 'I don't care what it's like' and 'I don't want to understand',\" I said.\n\nBrandy began to sniffle up. Taliyah and Mikhail had grown very quiet.\n\n\"Listen Vlad ...\" Taliyah rallied to her BFF's defense.\n\n\"Don't,\" Mikhail stated in a totally different tone. It was the Samsonov voice that had been freezing evil-doers in their place for centuries. \n\nIt was that utter authoritarian, calm and confident vibe that hinted at an impossible genetic memory of hundreds of loyal officers of tsars long since passed. Taliyah's protest sputtered out.\n\n\"Right this second, Brandy, do you think I care about you?\" I challenged her.\n\n\"I ... ah ... I don't know ...\" Brandy mumbled.\n\n\"Girl, don't be stupid,\" Taliyah switched sides.\n\n\"But Darius,\" Brandy twisted in her seat to look at Taliyah.\n\n\"But Darius - nothing. Neither man is going to let you keep the other one on the side, Brandy. Make your own damn decision for once,\" she insisted. \"Make up your mind, or Vlad is going to make it for you.\"\n\n\"Vlad ... Prince, can I have a little time to think about this?\" Brandy prevaricated.\n\n\"Call me before you leave for school tomorrow morning,\" I replied. I wasn't backing down. I firmly believed she was going to fail this test and I was okay with that. To a degree this remained my Mom's personal vendetta. \n\nI was willing to press my body and blood to her efforts, but I wanted a piece of my heart and life to remain my own. Brandy was feeling relieved. The police lights coming on behind us was an unwelcome diversion. It was one of Kingston's Finest. I readied my Driver's License, registration and insurance then let him rap on the widow before rolling it down.\n\n\"My, oh my, what do we have here?\" he sneered.\n\n\"What seems to be the problem, Officer?\" I replied. \"I'm driving two classmates home after doing homework together at my house.\" Every piece of equipment was working on Mom's car and I knew I hadn't been speeding, or weaving across the line.\n\n\"Ms. Carson,\" he addressed Brandy in a condescending manner. He even flashed his flashlight's light that shone from her face to her cleavage. Next the light danced over to Taliyah. \"Ms. Malik?\"\n\n\"Hello Bruce,\" she turned into the light. We, as the children of law enforcement, knew that unconcerned tone of voice.\n\n\"Taliyah, whose is your Dad?\" Mikhail asked her.\n\n\"My Mom is the Mayor,\" she rolled her eyes, \"you Neanderthal.\"\n\nWow ... we'd always heard the Mayor referred to as the Mayor, not Madame Mayor ... like we'd been taught to address a woman in that office.\n\n\"What's your Dad do?\" sort of spilled forth from my lips.\n\n\"He's a property manager,\" she mumbled.\n\n\"Okay, Mr. Samsonov. Step out of the car. I suspect you are under the influence,\" the cop - Officer Bruce - demanded. I got out cautiously and let him steer me to the trunk.\n\n\"So basically, your Dad dicks your Mom and manages her money?\" I heard Mikhail remark. It was a reach on his part. By the smack I heard, it was on the mark too. \n\n\"I'm not saying it isn't a good - oomph - dick - ow,\" Mikhail's laughter, \"only that - urgh - it probably isn't - 'missed me' - worth the price - ow.\"\n\n\"I hate you,\" Taliyah groused.\n\n\"You - wait,\" Bruce ordered me. He strode back to my door. \"Ms. Malik, are you okay.\"\n\n\"Yes Bruce; I'm beating up a White Boy. I couldn't be happier,\" she zinged back. Bruce didn't know what to make of that.\n\n\"Oh ... okay ...\" he mumbled. He was so fatally distracted, he didn't bother with the mock sobriety test. I got a stern warning, my paperwork back and off we went.\n\n\"Thanks Taliyah,\" I said as I rolled into the Malik U-shaped driveway in front of their Mac-Mansion. I was out of the door first, holding it open - the 2012 Shelby V8 Mustang is a two door ride. Mikhail looked content to let her climb over him.\n\n\"What for?\" she addressed me while glaring at my brother. I tapped him on the shoulder.\n\n\"Try to remember Mom wants her to hit you,\" I reminded him. \"Taliyah, thanks for not giving us any grief with Officer Bruce back there.\" Mikhail took my cue to get out first so she could exit the vehicle with minimal molestation.\n\n\"Don't mention it,\" she murmured. \"Really do NOT mention it.\" She reached to pull her book bag out, but Mikhail stole it from her. \"Hey!\"\n\n\"I'll walk you to the door (all of ten feet),\" Mikhail grinned.\n\n\"I don't want you to,\" she snipped and made a grab for it. My crazy brother danced away then dodged two of her lunges.\n\n\"That's why I'm doing it,\" he teased. The door to the Mac-Mansion opened. We had a Mom and a Dad ... and not in the best humors.\n\n\"Young man,\" the mature buxom, curvaceous Black woman demanded, \"what are you doing with my daughter?\" Officer Bruce must have called ahead.\n\n\"Samsonov,\" her Pa got into it, \"get away from her.\"\n\n\"No problem, sir,\" my brother extended the book bag out to his side. Taliyah kicked Mikhail in the shin after she snatched it from him. That action appeared elicit some level of personal satisfaction from both parents.\n\n\"Mom - Dad, I'm fine. I don't need your help,\" she growled as she stormed past them. Her dad was attempting to look menacing to us. \n\nIt might have worked twenty-five years ago when he was in far better shape. He still looked 'handsome' enough, but he'd gone soft.\n\n\"Taliyah, what are you doing with that Samsonov boy?\" her Mother grabbed her daughter's arm.\n\n\"Boy,\" her father made a move on Mikhail, \"you better have some answers.\"\n\n\"You played football, right sir?\" Mikhail smiled warmly.\n\n\"What ... huh ... yeah. I was half-back at Arkansas State,\" the moron let my brother seize the initiative. \"But that's not what I asked you.\"\n\n\"I can tell you played a great deal,\" Mikhail complemented the man. Mr. Malik puffed up. \n\n\"It's those droopy eyelids and vacant stare which are the results of too many concussions that gives you away, Sir,\" my brother skewered him. \"On the plus side, your eyesight appears to still be 20/10.\"\n\n\"Huh ... what? You little Beecher-Bitch,\" he got all macho on us. \n\nWho the hell was Beecher? [Reference the HBO series: Oz] \n\n\"Do you know who you are talking to?\" the man didn't like being made a fool of.\n\n\"Mom,\" Taliyah protested. \"Nothing is going on. I only went to their house because Brandy needed help with her homework. Mikhail is being an asshole - like he always is.\"\n\nMikhail was neither intimidated by our lofty company, nor finished.\n\n\"I know who you are. I saw you in the back of Theater #3 with that woman who was clearly not your wonderful wife here - her slurping your python while you laughed at all the White folks getting gakked in The Purge: Anarchy,\" he kept grinning.\n\n\"You are right, Mikhail. That was him. I couldn't recall where I'd recognize you from,\" I joined in. \"Mr. Baker ...\"\n\n\"It is Malik!\" the husband and wife barked.\n\n\"You've got to have some serious bull-sized testicles to cum that much - especially for a man your age. I swear I thought you were going to choke that chick out,\" I congratulated him. \"Mikhail? How many times was it?\"\n\n\"Shut up, Peckerwood!\" Mamma Malik shouted at me while blazing solar flares of death her husband's way.\n\n\"Times? I don't recall,\" my brother shrugged. \"We should ask her. I didn't catch her name but how many young, busty red-heads with 'Red Wolf Bitch' tramp stamps can there be in a township as big as Kingston?\"\n\n\"You fucked Riley!\" she turned her unbridled hate on her husband.\n\n\"Daddy!\" Taliyah joined in on the verbal beat-down. \n\n\"You screwed her at the Cineplex,\" Mamma spewed forth her outrage. \"You couldn't even pay for a room at the Foxtrot Inn (we now had the name of the local 'Cheater's Retreat) for you and your latest Bro-ho?\" \n\nYeah, it was fine for Darius to bang Brandy against her father's, the Sheriff's, wishes. I had little doubt the Mayor mocked Big Bob behind his back for his daughter being the constant center of the football team's gangbangs ... but now the BBC legacy had slithered back home to roost.\n\n\"Honey, it was a one-time thing,\" he pleaded. \"You know she's just ...\"\n\n\"A whore for Big Black Cock?\" I volunteered.\n\n\"Shut your yap,\" he turned and yelled at me. \n\nI bet the Malik family was happy there were these big, thick and tall property hedges on both sides of their rather expansive plot. \n\nThat would make this public display of dysfunctionality far less visually damning and slightly less audibly comprehendible. \n\n\"Don't you turn your back on me,\" Madame Mayor hollered. She yanked his arm back around with her left and double-slapped him with her right. She was clearly unhinged. \n\n\"Riley is Reggie Murdoch's mistress, you stupid sonofabitch! How in the fuck am I going to make it to the State House this year of you piss away his Goddamn patronage!\" Mr. Malik had enough of 'his' woman getting in his face. To any outsider, it was clear she wore the pants in their family and her love of some sort of political future for herself was running full-tilt over her love of his cockery. \n\nBy the twisted nature of this sexual piranha tank, ole Reggie was probably slipping some to Madame Mayor as well. It wasn't like the Mister was giving her much to feel loyal about. Mamma was winding up for another slap-fest when he grabbed her wrist, twisted it painfully and drew back a fist to punch her with.\n\n\"You are not going to go all-Omarosa on me,\" he bellowed.\n\nHis body jerked when he tried to land his punch. Mikhail had stepped up behind him and hooked his punching arm at the elbow with his own arm.\n\n\"Mr. Malik,\" I swear he sounded just like Dad right then, \"You don't want to do that.\"\n\n\"Get your hands off me, you Aryan Mother-fucker\" he turned on Mikhail. My brother backed off. He hadn't grabbed the man, just stopped him.\n\n\"Let go of me,\" Madame Mayor sounded off like a jungle cat. Mr. Malik was trying to stare-down my brother. I was already edging up. His gaze swung my way. \n\nShe took that moment to drag her fingernails along her husband's constraining wrist viscously enough to draw blood. Mr. Malik hauled off to hit her once more. Now that I was positioned to flank him, Mikhail switched up his response. Twin (and triplets) don't have telepathy. What we have are our inherent abilities, honed by instincts and interwoven through numerous series of shared experiences. \n\nI knew my brother's intent without devoting more than a heartbeat of attention. My brother swiftly maneuvered himself between the feuding couple by pushing the Mayor behind him so he could interposed his body into the path of Mr. Malik's blow. He could have blocked, but that would have entailed knocking the woman to the ground so he received the blow with his left shoulder. \n\nHis stumbling had as much to do with the weight of Mrs. Malik pulling him backward as the father's fist. It was the kind of blow we'd all learned to roll with some time ago. As it was, she almost spilled them both. Whatever Mr. Malik's intentions were for a follow-through never materialized. \n\nI wrapped my arms around him from behind, mid-abdomen, lifted him up and spun him away from my brother. Having bought space and placed both my body and Mikhail's between him and his wife and daughter, I released him; putting the man down gently. \n\nI didn't want to give him any scrapes, or bruises, to indicate I'd assaulted him. Yeah, we were saving the woman from domestic violence. That didn't make them 'not' our enemies.\n\n\"Son of a ...\" Mr. Malik crouched slightly. He was preparing to start wailing away which, given the events of the past fifteen seconds, was the height of foolishness.\n\nHe swung, I blocked then backed up. The Black bastard was probably used to fighting White pricks too small, too scared, or too drunk to fight back and mistook me for the same. Behind me, I heard Mikhail edging Mrs. Malik back.\n\n\"Daddy!\" Taliyah screamed.\n\n\"Stop this!\" - \"Let go of me!\" commanded the Mayor. \"Chinedu - stop damn you!\" He kept swinging. Taliyah rushed in, causing her father's next blow to falter. He spent a few crucial seconds readjusting.\n\n\"Damn you, Chine - stop beating up these two boys in front of Bob Carson's daughter!\" \n\nHis next attack came up short as Mrs. Mayor 'shoved' me aside so she could confronted her husband.\n\n\"Dom (Dominique was Mrs. Mayor Malik's given name), these shitheads are mocking us,\" he grumbled. Dominique turned her scrutiny in my direction. I kept my eyes on the guy who'd tried to hit me seconds earlier.\n\n\"Which one are you?\" she sizzled.\n\n\"Vladimir, Madame Mayor,\" I answered in a low, even tone.\n\n\"He's Vlad, Mom,\" Taliyah stated at the same time.\n\n\"Boy, are you giving me attitude?\" she gave me an evil stare.\n\n\"No, Mrs. Malik. I don't like you at all, but I respect your office and I'm not partial to any man hitting any woman for any reason,\" I spoke softly.\n\n\"Get you pasty-white asses off my stoop,\" Papa Malik raged.\n\n\"Sir, my Brother and I are not going anywhere until we are certain you aren't going commit bodily harm to either lady on this premises,\" Mikhail declared. \n\nHe came for me because I was closest. Chine shouldn't have shoved his wife first. Playtime was over. He lashed out with his left fist. I took the offered arm, twisted it as he swung past me then applied an arm bar and took him to the ground.\n\n\"Vlad!\" Brandy had finally gotten out of the car.\n\n\"Get off me, you mutha-fuckas.\" He had shed his polite, educated veneer.\n\n\"Get off my husband right ...\" Dominique began. I had let go and backed off before she was finished.\n\n\"Yes Ma'am,\" I complied. Chine scrambled to his feet, now truly furious. This time, psychology took over. The Mayor was primarily a creature of ambition (as Mom would explain later).\n\nShe weighed out who was in control ... and who wasn't. The BBC methodology was grounded in the superiority of Black physical mystique. Mikhail and I had pretty much shattered that for Mr. Malik. Had he been rational, and his wife more cock-hungry, things would have played out differently. \n\n\"Chine, calm down, you cretin,\" she seethed.\n\nThe crippling effect wasn't her words, it was her stance. Dominique stood behind me and to my left with her right hand resting on my left shoulder as she spoke. In the terminology of sexual politics, she was taking sanctuary from his Black thuggery behind my (temporary) White ascendancy ~ critically, the power that had just humiliated his masculine aura in front of his women (mother and daughter).\n\nMikhail further under-mined Mr. Malik's authority by moving to Taliyah's side in a warding manner and she was taking comfort in that protective gesture. 'That's right, Mr. Malik, I'm fucking your daughter too,' was how that gesture was read by him and it actually happened to be right this time.\n\n\"Get out of my ...\" Chinedu ranted.\n\n\"It is my house,\" Mamma Malik shut him down, \"and it is my career you are screwing up.\" The Samsonovs were already threatening her security due to her husband's blatant fooling around in a setting where so many people could have recognize him. Her reaction was to remind him know who had the balls in their relationship. \n\nHe must have sensed that growing shift in their 'imbalance' of power and that knowledge was probably what spurred him on to fuck Riley in the first place. He wouldn't let his wife rein in his BBC - no way, no how. Except she wasn't powerless, or as addicted to his sausage as he'd been relying on. \n\nHis options were slim ... attack me and get his ass handed to him (again), or storm off like a petulant child. There was no way he'd knuckle under - he was a leech living off his wife's fortune, a cheating womanizer and a jock who'd peaked in life at twenty-two. Ignoring his wonderful daughter, he had nothing to show for his squandered life.\n\n\"Boys, this is none of your God damn business. Get in your car and get the fuck away from my family,\" he made one last stab at domination.\n\n\"Sir, are you going to settle down to the point where we aren't worried about your wife and daughter?\" Mikhail hovered protectively around Taliyah. \n\nThis was NOT part of the Samsonov plan. We could take advantage of the situation and be the good guys doing it. Our declaration was 'we aren't leaving until your women think you'll stop being a raging asshole.'\n\n\"Chine, get inside the house,\" his wife commanded with a steely voice. \n\nI swear a vein on his temple throbbed. He was being 'tamed' and in front of two of his hated enemies ~ offspring of the hated Fonteneau Clan (Mom's people).\n\n\"Fuck you!\" he flipped off the group of us. \"I'm going out. I'll be back ... whenever.\" He chose the 'petulant child' conflict resolution retort.\n\nOh, he stomped past us barely giving me time to edge Dominque out of his way. Another indication of the family's true center of gravity came to the fore.\n\n\"Mom, do something,\" Taliyah complained. No, she wasn't asking her father to act like an adult, she was expecting her mother to fix things.",
        "\"Taliyah, stay here,\" Dominque told her daughter before she proceeded to follow her spouse. Mikhail held the daughter back by extending out his arms in an inverted 'V' from his sides so she couldn't slip around him. I took after the mother.\n\n\"Samsonov, what do you ...\" she got out. She was still chasing after her husband.\n\n\"Madam Mayor, you can slam the door in my face if you think you are fast enough,\" I cut her off. By the time I got the words out, we'd both passed over the threshold leading into their mansion. We caught up with him in the 'mud room' next to the attached garage.\n\n\"Mister,\" she threatened her spouse, \"you had better check yourself.\" He was grabbing a set of keys out of a wicker bowl, spun around with an angry retort dying on his lips when he saw me.\n\n\"You had better remember I'm the Master of this house, Dominque. You aren't going to be able to hide behind your 'Snowflake' for long,\" he tried to intimidate her. \"I'm going out. It is too white in here for me.\"\n\n\"You stay away from Riley,\" she countered. \"You may have done enough damage you pea-brained idiot.\" No love lost there anymore. He attempted physical intimidation. She held her ground. I stepped up until I was at her right shoulder. He didn't make the final step into her personal space. Dominique's face wasn't visible to me but I had no doubt she was smiling over his fearful hesitation.\n\n\"You of all people, cowering behind the Sons of Gayle Fonteneau,\" he chuckled bitterly. \"That's rich. You think I've been disagreeable up until now, wait to all your pals know who your daughter is seeing.\" That was extra rich because Dominque wasn't the one cowering, he was. \n\n\"She's your daughter...\"\n\n\"I know who she looks like and it ain't me,\" she blurted out before recalling I was standing right there. I could feel the incinerator's scorching hatred boiling off of Dominique. He gave us one last sneer, turned and went out the door into the garage. Not a word was exchanged by us until the electric whir of the automatic door closing extinguished the fading roar of the Chinedu's car's engine.\n\n\"Vladimir, is it?\" her icy tone ended our d\u00e9tente.\n\n\"Yes Madame Mayor ...\"\n\n\"If you discuss any of this, I will make your already difficult life in this town far more onerous than you can possibly imagine. Important people owe me favors,\" she stated.\n\n\"Your willingness to resort to corruption to get your way doesn't inspire me to believe you would respect any deal we could make, Madame Mayor,\" I countered. That made her turn around and look at me oddly.\n\n\"That was vaguely intelligent ... more intelligent than I would normally associate with someone of your age and educational level,\" she clarified. \n\n\"Don't tell Taliyah what was said here,\" she cautiously threatened.\n\n\"Whether I do, or don't, will have nothing to do with the threat of any power you think you have over me and my family,\" I shook my head.\n\n\"That's not a ...\" Dominque pressed.\n\n\"Tell me what?\" Taliyah asked rather abruptly. She, Mikhail and Brandy had been following us at a more cautious rate.\n\n\"Vladimir,\" the Mom's voice grew harsher.\n\n\"She doesn't want you to worry about your father's irrational state of mind,\" I could literally hear myself repeating something any of my law enforcement relatives would have said. \n\nLaw enforcement had to act with integrity - that didn't mean being honest 24/7. I wasn't a police officer ~ yet, if ever ~ but I felt obliged to cleave as close to such a code of conduct as I was able. Justice didn't include punishing Taliyah for something beyond her control. That didn't mean I couldn't hold the threat over her mother's head.\n\n\"Mrs. Malik, I'd like my brother to stay here while I drive Brandy home. I will come back straight away to make sure everything is alright if that is okay with you?\" I requested.\n\n\"Do I have a choice?\" she regarded me steadily.\n\n\"Of course, Madam Mayor. If you kick us out, Mikhail will sit across the street and wait for my return,\" I nodded. \"We can be annoyingly persistent too.\"\n\n\"Mikhail is it?\" she looked to my brother. \"Do you want something to drink?\"\n\n\"I would like to make sure Taliyah is squared away first, Mrs. Malik,\" he responded.\n\n\"I'm not your damn responsibility, you knuckle dragger,\" the daughter glared.\n\n\"Ah ... Taliyah, do you want me to hang around?\" Brandy offered.\n\n\"No,\" Taliyah snapped. \"I'm in this mess because of you. If ... forget about it.\"\n\n\"Come on Brandy. I'll take you home,\" I suggested. The departure was positively unremarkable in comparison to our journey there.\n\nBrandy was unlocking the door when I put a hand on her elbow and strongly turned her around. Frustration morphed into confusion and blossomed into happiness as I exacted my promised minute make-out session. Even a colossal distraction as big as the Mayor's family implosion wouldn't keep me from my Brandy-time.\n\nBig Bob 'caught' us at it. The door had been opened and the AC was exiting the front door.\n\n\"Hands above the belt-line, Mr. Samsonov,\" he grumbled in a friendly manner.\n\n\"Daddy,\" Brandy pouted to her Papa. \"He's behaving himself.\"\n\n\"Are you behaving yourself around my daughter?\" the Sheriff quizzed me.\n\n\"Sir, I'd rather go directly to the 500 hours of community service than answer that question ... Sir,\" I replied. Big Bob snorted. Brandy rolled her eyes, gave me one last peck then glided past her patriarch.\n\n\"I haven't see her that happy in a long time,\" Big Bob spoke softly. \"Whatever you are doing - be a gentleman about it.\"\n\n\"Ugh ... I'll do my best Sheriff Carson, but it's difficult,\" I groaned. Bob laughed at me and my 'agony'.\n\n\"Take care, Vlad,\" he gave one final nod before closing the door. I made a quick call to Mom to update her to our change in plans. Mikhail had beaten me to the punch. She understood I had to hand-off Brandy first - no harm / no foul. She asked me to hang out at Dominque's place for a while because she knew Mr. Malik was a devious, lying rat-bastard and believed he would sweet talk his daughter into letting him back into his wife's proximity.\n\nI mulled over handing her the Malik family secret. I trusted Mom. More to the point, I trusted her to respect my decision to want that tidbit handled with care. No cops harassed me on the return trip. I had taken a circuitous route to be on the safe side. The Police Chief might be the Mayor's ally, or he might be a BBC devotee and have a Brutha solidarity moment with Chinedu too.\n\nAccording to their methodology, once he gave her that cock, she'd forgive every other indiscretion. True or not, I was going to try and cock-block that maneuver. I didn't have a plan when I arrived. Something immediately presented itself to me in the form of a Candy Apple Red 2014 Jaguar F Type V8 S convertible.\n\nDaddy, or Sugar-Daddy was way generous to the tune of one hundred grand; that was for damn sure. The billow red mane topping that curvaceous frame was a clear indicator the shit was going to hit the fan at the Malik household. Chine was her BBC addiction, but the Mayor was her boss and political mentor.\n\nThe look she sent me was fearful over her general situation and one of only passing interest - a look I was becoming familiar with. She was yet another hot, sexy piece of filet mignon that didn't fuck White guys. Groan.\n\n\"Who are you?\" she was polite enough, possibly seeking to delay the upcoming confrontation.\n\n\"I'm Vladimir Samsonov, junior Prince of Evil and I'm here to talk with your boss ... she's expecting me,\" dispelled her protest that the Mayor was too busy for me.\n\n\"Riley Pasternak,\" she smiled. \"I don't recognize the accent,\" she added as I passed her. She let me ring the doorbell too.\n\nStatuesque and voluptuous; that is what I would call Riley. Burnished coppery hair, thick and glossy flowed in waves down to the middle of her back. Well defined brows of a slightly lighter but no less fiery color framed her oval face and enhanced her verdant eyes, pale freckled skin and flushed cheeks. \n\nThe makeup she chose didn't really enhance her features which said she didn't wear it that often and the scar above her brow confirmed that she was a tomboy. \n\nShe dressed to be seen, but also to move in whatever capacity needed. The push up black halter was a strong contrast to her pale skin and plumped up her already impressive cleavage. \n\nBelow it she wore almost too tight hip huggers that had her lush belly just barely spilling over the waistband. Right above said waistband on the back of her hip was a tattoo that read \"Red Wolf Bitch\" for the Arkansas State Mascot. A second one was teasingly just out of sight on the front of the other hip. \n\nDrawing away just a bit from the sexy outfit were all the hippie doodles on her pants. It looked as if she'd let a five year old color on them before she put them on, the neon colors seeming to jump off the denim. She completed the ensemble with cork wedges and a tiny red purse hanging by an equally tiny red string from her shoulder.\n\n\"I'm from Alaska,\" I let her know. The door flew open in seconds, revealing a tumultuous Dominque who slipped on a semi-civil mask when she saw me.\n\n\"Vlad, I thought you were going to stop by your place before coming back for your brother,\" she addressed me. \"Ms. Pasternak, get in here,\" she was more abrupt with her 'underling'.\n\nI stepped aside to let Riley pass. I hadn't been invited in. Dominque took my actions into account.\n\n\"Come in Vlad. Go find your brother. I'll talk to you later,\" she said.\n\n\"Well,\" I began once I stepped in, \"I think I'd be of more use sticking with you.\"\n\nDominque slammed the door behind me.\n\n\"I won't need you with me,\" she corrected me.\n\n\"I'm not staying to help you,\" I corrected her. \"I'm staying to make sure Ms. Pasternak doesn't come to some misfortune.\" The Mayor didn't seem pleased.\n\n\"What does he mean?\" Riley looked from her Boss to me. \n\n\"Go - Vlad,\" she commanded. I was a guest in her home. Barring extenuating circumstances, I was taught to behave.\n\n\"Well, nice to see you again, Ms. Pasternak,\" I regarded my fellow guest. Off I went, listening for sounds of my brother and Taliyah. I was almost out of sight ...\n\n\"Where have we met before?\" Riley worried.\n\n\"Go, Vlad,\" my hostess repeated. I kept going.\n\n\"The Cineplex two weeks ago,\" I said over my shoulder. \"The Purge: Anarchy.\"\n\n\"Oh God,\" she moaned. \"V ... Vlad is it ... please don't leave.\"\n\nI reversed course. Dominique could tell that ordering me about at this point was useless. The same instinct which had placed me between Chine and her was placing me between her and Riley.\n\n\"You fucked him,\" Madame Mayor fumed. \"Worse, you let him fuck you in a public place you ... simple-minded bimbo.\"\n\n\"Listen Mrs. Malik ... it ... I ... he was insistent,\" Riley back-pedaled into a wall.\n\n\"And you happened to forget he was my husband?\" Dominque seethed. I had to admit she looked rather volcanic, her butt, hips and boobs trembling with repressed energy as she got ready to erupt. I maneuvered so I flanked them both, ready to interpose myself if necessary.\n\n\"How many times, Riley?\" I posed the question. \"How many times did the two of you hook up?\"\n\n\"Four - five,\" she reconsidered her response. Dominique looked ready to explode. She mastered herself with a great effort of will.\n\n\"What is going to happen when your Grandfather, that racist Jew Bastard, finds out you are back to banging big black bucks - AGAIN?\" she threatened. Riley blanched. \"He threatened to disown you last time. This time, he'll do it, Princess. Then you will be nothing more than another in a long line of chunky Cocoa Puff's. No car, no apartment and damn, I'll make sure you don't have a job anymore.\"\n\n\"Reggie won't ...\" she protested desperately.\n\n\"Whore, you are only fun to be around because your fat ass is forbidden fruit. Senator Murdoch can get a dozen fresher Betties to haul his coal.\" I'd go to Mom to explain the jargon flying around. \"I know for a fact he likes them young.\"\n\n'Betty's' were White chicks. 'Hauling coal' meant taking black dick. Why couldn't people just say that instead of confusing everything with racial slurs? Riley's reaction showed she was playing into that fear ~ no fortune and no more choice selections of BBC's. \n\n\"Ummm ...\" Riley flickered her eyes my way.\n\n\"Chinedu already spilled all this secrets,\" Dominique lied. She'd spilled them in her rage, but these two women lying and cheating wasn't my primary concern; taking advantage of their wickedness was. \"He has his own reasons for keeping quiet.\" Riley glanced speculatively from me to Dominique.\n\n\"Ha,\" Madame Mayor snorted in derision. \"I don't do White boys.\" Oh, that deserved some hard fucking; screw the bitch. I was considering what derogatory idiocy was going to vomit forth from my mouth when Riley's phone rang. Absently she pulled it out of her purse. She paled when she saw the caller ID. Dom snatched it away then trembled.\n\nI took it out of her hands before she could make Riley eat the device.\n\n\"Both of you keep quiet,\" I demanded. I answered the phone.\n\n\"Baby-cakes, let's hook up tonight,\" Mr. Malik oozed his masculine charisma. \"I feel like stepping out and I want to see you on your knees worshipping my award-winning Arkansas Black Snake, you cock-hungry slut.\"\n\nHe was loud enough so that both women could hear. I pointed a warning finger in Riley's face.\n\n\"Sorry, Mr. Baker, but Riley can't come to the phone right now. She's choking down my Slavic salami, but ... after I finish with her and your wife, I'll send the tramp back your way ... if she can still walk.\"\n\n\"Wa - huh - wha - Who? Samsonov? - what did you just say?\" he blathered.\n\n\"I'm kind of busy right now, Sir,\" I taunted him. \"Hold on.\" I spanked Riley's flank. She gasped. \"That was the sound of me smacking your wife's luscious, sweet and highly neglected ass. I gotta go. Your women look famished for some fucking respect and attention. I'm sure you can find a glory hole to entertain yourself at. I'll talk to you in the morning. Bye,\" I signed off before he could reply.\n\nI cut off Riley's phone then pocketed it. They were both staring at me in utter shock. Dominique's full, plump lips first closed then she opened them to start laughing.\n\n\"Boy - Vlad, that was hilarious,\" she chortled.\n\n\"That was a freebie, Dominique,\" I grinned.\n\n\"There are two kinds of cheaters; the ones who convince themselves it will never happen to them, and the ones who believe everyone cheats. That allows them to both allow themselves to violate the essence of their relationships,\" I glibly stated, \"It also makes them want to utterly control their partners so they don't end up becoming cuckolds themselves.\"\n\n\"Mr. Samsonov ...\" Dominique studied me, \"you continue to show me you are much more dangerous than you appear.\" Taking into account my size, excellent physical shape, exhibited self-control and clear elucidation, I could only imagine I was 'dangerous' for a White guy ... what a tight-ass shrew.\n\n\"Flattery will get you nowhere, Mrs. Malik,\" I politely responded. \"I don't do older Black chicks ... or date used-up girls who only fuck Black guys. One of the three of us has to have some standards.\" They blinked ~ it was the whole 'da White boy thinks he can talk back to us?' bullshit. \n\n\"I'll go looking for Mikhail now. You two have fun sharing in your communal 'I've been dicked-over, bent over and forced to suck another woman's vaginal fluids off his dick' Chine-experiences. I pray neither one of you've done Ass-to-Mouth with him ... that would turn my stomach. Bye,\" I waved as I departed. Dominique grabbed my arm, her fingernails digging in.\n\n\"What makes you think you can insult me that way - in my own house?\" she lambasted me.\n\n\"It is the truth and we both know it,\" I shrugged. \"Somebody needs to start telling the truth around here, don't you think?\" \n\n\"Get your brother and get out,\" she snapped. \n\n\"Done deal,\" I answered. \"Riley ...\" The doorbell rang. From the look on everyone's faces, none of us were expecting a caller.\n\n\"Don't you move,\" Dom glared at me, \"and don't you do a damn thing,\" she balefully instructed Riley. Off she stormed.\n\n\"Gayle, what are you doing here?\" Dom greeted my Mom.\n\n\"I brought dinner for my boys, Dominique,\" she responded snidely. \"I expect them to be gentlemen and you to not give a damn about anyone but yourself.\"\n\n\"You've got some nerve showing up on my doorstep,\" Dom grumbled.\n\n\"Not really,\" Mom shouldered her way inside. \"I've gotten on with my life. I see you've done the same.\"\n\n\"Bitch,\" Dom sizzled yet didn't stop her.\n\n\"Kitchen?\" my maternal unit asked me. She was holding a wicker picnic basket and a large paper bag in one hand and a covered pot with a pail in the other. I pointed the way. She winked.\n\nBelatedly, Dominique slammed the door and stalked after Mom.\n\n\"What would ever possess you that I'd welcome you into my house,\" she spat. \"After what you did to Leon ...\"\n\n\"Had ... do you really want to rehash that right now considering neither one of us has forgotten, or forgiven a damn thing?\" Mom countered.\n\n\"Leon is still sucking his puree through a straw and pissing in a colostomy bag,\" Dominique simmered.\n\n\"Mom?\" I questioned.\n\n\"Oh, you haven't told your boys about what you and Theo did?\" Dominque taunted her. Mom wasn't perturbed in the least.\n\n\"Vlad, do you trust me?\" my Mother asked me.\n\n\"Sure. You can be unfathomable and crazy, but I don't think you've ever hurtfully deceive me.\"\n\n\"Boy, you had better check that naivet\u00e9,\" Mayor Malik warned me.\n\n\"Vlad, the last time Theo and I spent any time under the same roof was here, in Fonteneau,\" she used Kingston's old name. \"Leon Fox, Dominique's brother, and six other Black bulls decided to brutalize me - I was barely alive when I crawled my way back to the road where Mr. Cobb found me,\" she relayed in a pleasant tone.\n\n\"So you say,\" Dom interrupted. \"It was your word against them and those seven had iron-clad alibis. To you, all Black men looked alike.\"\n\n\"Think what you want. I identified all seven of them. You dad and the police chief wouldn't prosecute even though I know they were heard around town bragging about it ~ how they'd 'taught me a lesson'.\"\n\n\"Mom, what the hell is going on?\" I worried.\n\n\"Your Great-Aunt wouldn't accept that the police's investigation acquitted my brother and his friends ... Because it was Black officers accepting the words of seven Black men - one of them the newly-minted Mayor's son - over a scared, battered child's,\" Mom gave a feral grin.\n\n\"Yeah, you racist bitch,\" Dominique seethed.\n\n\"Theo believed me. Aunt Matilda and Theo both believed me and not your chick-shit police force cover-up,\" Mom kept smiling though there was not mirth behind it. \"Theo made damn sure the guilty paid.\"\n\n\"He damn near beat four grown men to death,\" Dom grumbled. \"One of them was my brother.\"\n\n\"Vlad, Theo took a fileting knife and a crowbar with him when he rode his bicycle out and hunted those scumbags down,\" Mom explained while staring at my host. \"He found four of them together. He put all four in the hospital.\"\n\n\"He ended up in the hospital as well,\" Mom added, \"if that makes you feel better.\"\n\n\"Is that why Uncle Theo ended up in military school?\" I inquired.\n\n\"He got off lucky,\" Dom bristled. \"Leon ... and Roscoe Sumner never left the damn hospital, Bitch.\" She turned on me. \"Rufus never did see out of his left eye again and Martin Cutler still has to walk with leg braces and a cane.\"\n\nUncle Theo and Mom ... that explained a great deal about her and her twin's relationship. I knew Mom had once broken into his military school/prison to see him. I also knew now that Mom hadn't lied to me ~ this vendetta was with this entire sick town, not blanket racism on her part. ",
        "Black individuals in this town had raped her and other Blacks had covered it up. Theo had avenged her and paid for that with five years of his freedom. Had the Kingston's Black police force simply pursued a proper course of justice, then those seven men would have gotten what the law allowed ~ and be out of jail by now.\n\nMaybe that would have helped Gayle Fonteneau's emotional wounds heal. That didn't happen though. That injustice explained why Mom had initially run away from Dad. She'd suffered at the hands of law enforcement and she carried that distrust and disgust with her into her first meeting with Dad. \n\nThat had to be some awkward emotional gymnastics on her part. \n\n\"Oh, come on now,\" Mom chortled. \"Leon is in a nice assisted-care living facility and Roscoe is in a coma just down the hall from him.\"\n\n\"What happened to Le ... your brother, Mrs. Malik?\" I asked.\n\n\"According to the reconstructive specialist in Austin he was hit 27 times with a crowbar - that's what happened,\" she spat at my Mother. \"Even now his face doesn't look right and he's one step above a vegetable.\"\n\n\"You took Aunt Matilda's hush money,\" Mom gloated. \"You all did.\"\n\n\"That doesn't mean your brother wasn't a psycho, racist bastard,\" Dom shot back.\n\n\"Bullshit, Dominique. Your Daddy made the town accept Aunt Mattie's deal because she was bringing in the Arkansas State Police (ASP) to investigate Theo's defense claims and that would have fried the whole lot of you,\" Mom ignored Dom's snit. Seeing my disbelief, she told me, \"Back in 1986, the ASP had its fair share of White racists.\" \n\n\"Had those seven not been guilty as sin ...\" she glared at the Mayor, \"maybe Theo wouldn't have gone Rambo on this burgh.\"\n\n\"Enough!\" I intervened. \"This is not helping us with the problem at hand. Right now, all Mikhail and I are worried about is whether Mr. Malik is going to come home tonight pissed off, drunk off his ass, or both.\"\n\n\"Why should you care?\" Madame Mayor turned my way. Mom started laughing which only made the woman angrier.\n\n\"Because unlike you, me and most of this town, my boys are decent individuals who actually give a crap about strangers, regardless of their melatonin levels,\" she snorted. She made eye contact with Mrs. Malik. \n\n\"Don't blame me,\" Mom chuckled. \"I would be much happier of your shiftless shit of a husband came back and beat the fuck out of you and your daughter. To me, that would be poetic justice for what your father let him get away with.\"\n\n\"No happening, Mom,\" I declared. \"Mikhail and I are eighteen now so you can't make us go home. If he's really a threat ...\"\n\n\"And you can't trust the police,\" Mom sneered at Dom. \"Your police force, Dominique.\"\n\n\"You are one twisted cock-whore,\" Dom riposted.\n\n\"Seven young men assaulted me,\" Mom snarled. \"Three weren't around when Theo caught up with the other four. \"Charles Baker was one of them. The other was Demetrius Quinterre. These days he is the Chief of Police.\"\n\n\"Charles Baker is Chinedu Malik now?\" I requested.\n\n\"Yeah,\" Mom beamed hostility Mamma Malik's way. \"The fall after 'it' happened, Charles went to Arkansas State on a football scholarship and changed his name to something more 'African'. If he thinks it made it so that Theo couldn't find him, he's sorely mistaken.\"\n\n\"Where is your crazy brother anyway?\"\n\n\"Which one?\" Mom snorted. \"I've got a few.\"\n\n\"Theo, you crazy cunt.\"\n\n\"He joined the US Army straight out of the academy. He ended up in Ranger School then the Green Beret,\" Mom updated her. \"Now he's a contract killer for God-knows who. You, the FBI and the US military all are curious about his whereabouts.\"\n\n\"That's ...\" Dominique looked at me. What can I say? I have an honest face. \"Do you believe that?\" she asked me.\n\n\"Madame Mayor, I've talked to the men from Fort Bragg who have come calling. How to put this ... Uncle Theo is exceedingly eccentric ~ beyond what Mom is.\" \n\nIn a normal situation, this would be when the concerned wife asked if her husband was in danger from my lunatic uncle. Not Mrs. Malik. Hell, a martyred husband killed by a violent racist would be a big boost to her career. It would also remove any chance of her hubby blowing up the situation with Riley, thus Riley's Sugar-Daddy. I could almost see the cold, calculating wheels turning behind her eyes.\n\n\"That's hardly encouraging. Fine ... Gayle, you can get out. Vlad, I'm going to make some phone calls. Why don't you see what your brother has gotten up to,\" the Mayor commanded. Mom shot me a wink when Mrs. Malik pulled out her phone.\n\n\"Bring home the pot and basket when you leave,\" she advised me. She took my arm and pulled me to the door. \n\n\"You have your toiletries and fresh clothes in the bag (the big, brown paper one she'd arrived with). Then, as she hugged me, she shoved something into my front, left pocket. That weekend with the Vegas hookers paid off - I recalled the crinkly sound condom wrappers make. \"For Mikhail,\" she whispered. He was being given her 'okay' to any sexual missteps that might happen if we weren't sent straight home. \n\nI imagined most teenage boys would be thrilled to have their mothers handing them some condoms and silently wishing them luck. Not me. This was some fucked-up shit Mikhail, Alexander and I had stepped into. Mom turned without further advice and went to Dad's black '2012 F-150' pick-up truck. I closed the door, then went looking for the ladies.\n\nDominique had taken Riley into the living room. The younger woman was sitting contritely on the sofa while the Mayor quietly brow-beat whomever was on the other end of that phone conversation. I spared them a look, knew I wasn't needed, or wanted, so I went for the stairs.\n\n\"Taliyah - Mikhail - Dinner's here,\" I called up. I remained at the bottom of the stairs until Mikhail showed himself.\n\n\"Was that Mom?\" he calmly inquired. \n\n\"Yeah. She's gone now,\" I gave a wry grin. \"It is safe you two to come down.\" A few seconds later, Taliyah appeared.\n\n\"What is it?\" she was referring to dinner.\n\n\"Whatever Kamika cooked for us,\" I replied. She shrugged, clearly upset with the past few minutes of her life. She still came down. She'd missed lunch unless you counted cum swallowed, then had cheerleader workouts, horse-riding and a sex-session with my brother. Mikhail was perpetually hungry as was the norm for growing boys our age and metabolisms.\n\nThe remarkable thing was her reaction to Mikhail and his blas\u00e9 attitude. He wasn't walking on eggshells, as Alexander would have, or being sympathetic, like me. Mikhail was being Mikhail ~ Taliyah's problems weren't his concern so he wasn't intruding. If she wanted some emotional input from him, she'd have to do the 'reaching out'.\n\nWe doled out portions. Taliyah started with three bowls (for the host of baby-back pork ribs) and plates for the potatoes, carrots and string beans. I motioned for two more. She mentally debated my request before complying. Kamika must have packed a family of eight. There was plenty to spare. \n\nAfter the meal was apportioned, I took two plates and a glass of Pomegranate Juice (Taliyah poured for her Mom) and a glass of lemonade for Riley. I juggled the lot as I traipsed into the living room. The conversation stopped when I appeared. I didn't engage either with eye contact, though I could tell Dominique resented me serving dinner to her guest. I retreated with the same grace I'd exhibited entering.\n\nThe two high-schoolers had attacked the ribs with gusto.\n\n\"Mmmm ... these are some damn fine ribs,\" Taliyah waved a freshly-cleaned bone my way. \"No wonder the men in your family are so damn huge.\" Right as the words tumbled out of her mouth, she shot Mikhail a dirty look, daring him to make a snide aside about the size of his cock. Mikhail didn't take the bait.\n\n\"Give Kamika a call around noon-time. She'll add a place-setting for you at the dinner table,\" he replied after vigorously sucking the meat off his fourth victim. That was the opposite of what she expected a man - a Black man - to say. She'd never had a possibly sexually suggestive chat with a White guy.\n\n\"The food's not so good I'd want to spend time with you,\" she poked him.\n\n\"I'm not hot to re-experience your she-devil bitchiness either, Taliyah,\" he teased her. \"I've got to accept that Brandy's going to keep putting a sappy smile on Vlad's face and that suggests they'll crawl out of bed long enough to get some food.\"\n\n\"We are NEVER going to have sex again,\" she wacked his hand with a fresh rib, leaving a saucy mark.\n\nMikhail licked the sweet substance off while keeping eye contact with the girl. She refused to back down from his provocation. My brother responded by tenderly poking her lips with a fresh rib. She kept her mouth closed yet couldn't keep the smile from her face. She countered by presented piece of meat in front of him. Mikhail caught the offering in his teeth and shook it hungrily.\n\nNow I felt like the one who should tell them to get a room. The two began making messes of each other's faces with sloppy feedings of one another before including me in the game. It was so engrossing, we three missed Mrs. Malik coming into the kitchen and catching us at play.\n\n\"Taliyah, what - are - you - doing?\" her mother clipped off each world.\n\n\"I'm keeping the White boys quiet,\" the daughter thought quickly on her feet.\n\n\"Oh, that's what you call it,\" Dominique's eyebrow arched. \"It looks more like your flirting with them both.\"\n\n\"What!\" Taliyah squalled. \"I hate Mikhail ... Vlad's okay. He treats Brandy like she matters, not the way Darius does. He treats her like a cum dumpster.\"\n\n\"I thought you wanted to be with Darius?\" Dom studied her daughter intently.\n\n\"Well ... I've changed my mind. His whole attitude ~ the 'I'm a football stud' is getting too pricey for my tastes,\" she clarified. \"Rashaan has his head so far up Darius' ass that's stopped being funny too.\"\n\n\"Taliyah, if you stop dating Rashaan, you won't be popular,\" mom protested.\n\n\"Listen to your mother,\" Mikhail agreed. \"Look how well hooking up with a football star worked out for her.\" Waves of furious emotions radiated from mom. Taliyah's reaction was far more direct.\n\n\"You bastard!\" Taliyah swore before she punched him in the upper arm. She was starting to cry. \n\nChine may have been a raging prick to Samsonov eyes, but he was Taliyah's Daddy.\n\n\"Fuck,\" he exaggerated. \"What makes you think ... ow,\" he recoiled as she began to rain blows down on his upper arm and chest. Tears started to stream down her face as she pummeled my brother who took his beating like a champ.\n\n\"You are such a ... a ...\" she stammered.\n\n\"Neanderthal?\" he volunteered. Two more blows were her response then her attacks lost strength and direction. Mikhail wrapped her up in his arms as she sobbed into the crux of his arm and chest.\n\n\"Feel free to hate me as much as you need to,\" he held her tight. \"I'm not that fond of you either.\" He kept her close for another minute. \n\n\"I'll take her upstairs,\" Mikhail told Dominique. He kept an arm around her shoulders to aid her direction and off they went. The Mayor looked my way.\n\n\"I don't know what's up with that,\" I shrugged. \"Mikhail really is a jerk most of the time. Heck, he's the biggest bastard of the three of us ~ the most like Mom's dark side, so I'm not sure what he's doing being nice to your daughter.\"\n\n\"If he does something to her,\" she threatened me. Her eyes went past me to Riley who had come to the open doorway. \"Don't you start thinking you can be leaving,\" she aimed her prodigies' way. \"I'm not done with you.\"\n\n\"Besides, he's still out there,\" I meant Mr. Malik. \"He's likely to do something irrational that both of you will regret.\"\n\n\"Why should you care? You are a Fonteneau,\" the Mayor grumbled in an accusatory voice.\n\n\"I'm not sure,\" I shrugged. \"I trust my Mom a lot more than I believe your version of events. From what I know of Uncle Theo, if he wasn't sure justice had been done, he'd have come back here already.\"\n\n\"The fact you are choosing to revisit this tragedy now makes me wonder when I'll see him again,\" I tacked on.\n\n\"Ah, could I have some more of those ribs?\" Riley extended her plate. She needed to finish her veggies. \n\n\"All that pork is going straight to those fat hips and big butt, Girl,\" the Mayor cruelly teased her.\n\nRiley was embarrassed. I stood up from the kitchen table, took Riley's plate, and filled it with the portions of meat Taliyah and Mikhail had left behind. That seemed to mollify her to the point she felt good enough to walk, with her plate, back to the living room.\n\n\"You shouldn't be nice to her,\" the Mayor cautioned me. \"She's just another whore for Black Cock. Another White girl freak beneath the sheets.\" \n\nThat the Mayor was likely one as well wasn't something I felt I should bring up at the moment. Instead of arguing, I began to clean up the kitchen, putting the leftovers in Tupperware containers, washing the plates and then the pot and food containers. All the while, Dominique watched me work.\n\n\"I thought you had domestic help,\" she said condescending tone. \n\n\"A) any kind of help is something new to us boys and Dad. B) Mom insists we all pitch in and help out. That means washing cookware and plates after meals, haul fertilizer and taking away yard debris and cleaning our rooms. We have chores.\"\n\n\"That defeats the purpose of having servants,\" she insisted.\n\n\"That house is huge, the 'help' could use the help, chores remind us we all need to work together and it teaches us not to take people for granted,\" I repeated my Mom's words from our first day in the house.\n\n\"Your clan used to be such snobs - looking down on all us Black folks.\"\n\n\"However the Fonteneau acted was before our time, Madam Mayor ...\"\n\n\"Call me Dominique, or Mrs. Malik in my home, Vladimir. You are Vladimir, right?\" she said.\n\n\"Yes Dominique, I'm Vlad, the middle one. Alexander is oldest, so he's the most mature, I'm the middle triplet, so I'm the best mix of Mom and Dad, and Mikhail is the youngest so he's always out to prove himself.\"\n\n\"Fascinating,\" she responded drolly. \"Stay out of the way while I deal with Riley. I'll get her squared away then deal with you and your brother.\" With that, she walked off to give Riley another huge piece of her mind, rage and frustration. As I was putting up the pot to dry, the doorbell rang. I heard Mamma Malik's heels click on the marble floors as she stormed over to the door.\n\n\"Demetrius, what are you doing here?\" I heard he say from the door.\n\n\"I heard you were having some problem with those Samsonov boys,\" he announced. \"I'm here to make sure everything is okay.\"\n\n\"You mean my worthless, cheating husband sent you over to make them leave,\" she groused.\n\n\"He might have indicated they were causing you problems,\" the Police Chief allowed. \"Let me pour those Cornfeds into their car and send them home.\"\n\n\"No,\" Dominique's voice cracked the whip of authority. \"He is out whoring and drinking and that means he ain't coming home tonight ~ end of story.\"\n\n\"I'll leave Oliver with a patrol car watching your place if that is the case,\" he tried to mollify her.\n\n\"On really,\" she mocked him. \"You, Chinedu and Oliver are all drinking buddies. You and your cronies aren't going to keep my husband's drunk ass from darkening my doorway. You let Chine know he's not welcome here tonight.\"\n\n\"Dom, you are being unreasonable,\" the cop leader cooed. I didn't have to imagine him touching her. The Kingston cops were far too touchy-feely with women.\n\n\"Don't you touch me, you poltroon,\" she blasted him. I wondered if he even knew what a poltroon was. He knew it was an insult though.\n\n\"Listen up, Dominique,\" his voice grew low and threatening. That was my cue.\n\n\"Madam Mayor, is everything okay?\" I stepped into the hallway. Demetrius' eyes latched onto me before turning his sneer the Mayor's way.\n\n\"Why, don't he look cozy,\" he accused Dominique.\n\n\"Buddy,\" I wasn't going to call him an 'officer', or 'Chief', \"Mom just enlightened me to what you and Chine did to her all those years ago. Statute of Limitations may have passed, but don't you think the Samsonov's consider justice to be done.\"\n\n\"I also know that any crime involving you and a Deputy's son automatically brings in the Arkansas State Police. Cross that portal and you cease being a concerned police officer and become a home invader,\" I channeled my father and all his kin going back a dozen generations.\n\n\"How about I arrest you for trespassing?\" he want for his 'bracelets' while his right hand rested on the butt of his piece.\n\n\"My house, Demetrius and I've invited him and his brother in. Believe me, Dem, if you don't hot-foot it off my property then my next call WILL be to the State Police reporting YOU for criminal trespass,\" she growled at the cop.\n\n\"So, you've become an Oreo?\" he mocked her. \"I can't wait to hear what the town council has to say about that.\"\n\n\"Consider they are the same crowd who invited Dr. Pierre O'Rourke Jean-Georges to be our Principle for the next ten months ...\" I began my counter-mock.\n\n\"Five years,\" the Mayor glowered at the Chief. \"The school board ~ which you are on, Demetrius ~ gave that freakazoid a five year contract.\"\n\n\"Holy Shit,\" I gasped. I thought he was a plague with a one year duration. There was going to be a whole high school experience with that nut at the helm.\n\n\"Madame Mayor, are you on the School Board?\"\n\n\"Not this year, Vladimir,\" she replied while continuously coruscated at the top cop. \"I resigned last Spring so I could concentrate on my campaign for the open State Senate seat.\n\n\"Good for you,\" I congratulated her. \"Chief Quinterre, you need to be going. Oh, and don't forget that Uncle Theo is still on the CIA's Ten Most Wanted and hasn't forgotten your name.\" He blanched.\n\n\"Boy,\" he shook a finger at me. Dominique had seen enough. \"You and I aren't ...\" She slowly closed the door in his face in mid threat.\n\n\"Your uncle is on the CIA's Ten Most Wanted List?\" she looked at me curiously.\n\n\"Not that I know of. I don't even think the CIA has such a thing. He is more of a contract killer who works overseas than a domestic terrorist,\" I shrugged. \"I don't think any of the people hunting Uncle Theo down plan to have him stand trial.\"\n\n\"Boy, your Mama has filled your head with all kind of crazy ideas,\" Dominique advised me. \n\n\"Fair enough,\" I allowed. I trusted Mom and Uncle Theo more than I trusted her and her ilk. Arguing the point was pain for no gain.\n\n\"I'll stay out of your way until you need me,\" I backed off. My first concern was Mikhail. I padded upstairs stealthily and followed the sounds of sobbing. Taliyah was in her four-poster bed, face down in a pillow; probably having the worse day of her young life. Mikhail was sitting on the floor near the foot of her bed, playing a game on his phone. I kept out of sight.\n\n\"Get out of my room,\" she mumbled.\n\n\"Make me,\" Mikhail didn't bother looking up from his diversion.\n\n\"I said 'get out',\" she repeated with a bit more energy.\n\n\"My ears work just fine ~ thanks for asking,\" he sounded bored.\n\n\"You are an asshole,\" she twisted her torso so she could look down at the top of his head. He didn't physically respond.\n\n\"Good to know.\"\n\n\"I called you an asshole,\" she repeated with more resentment.\n\n\"You aren't the first one to say that. I doubt you'll be the last,\" his apathy shown through.\n\n\"Get out,\" she simmered. \"Get out now!\" He stopped playing, swiveled his head until he had eye contact.\n\n\"I don't think so,\" he provoked her. \"You aren't nearly aggravated enough.\"\n\nShe yanked her pillow out from beneath her comforter and bopped him on the head with it. I couldn't see his face, but I knew he was giving her a mischievous smirk. She whaled away, getting onto her knees so she could put more 'oomph' into swings. First Mikhail raised up his left arm to defend himself. ",
        "When Taliyah went for the double-handed blows he rolled away, forcing her to get off the bed to pursue him. She launched herself upon his prone form, continuing to pillow-pummel him. He didn't laugh, or mock her. Instead, he let her exhaust herself both physically and emotionally.\n\n\"I hate you,\" she glowered down on him. She saddled his stomach, still in her cheerleader outfit with her chest heaving. I was starting to figure out this guy-girl thing because I knew it was time for to me go. The moan I heard rumbling deep in Taliyah's bosom was one of passion sealed with a kiss. Compared to the situation downstairs ... there I feared I would have to play referee to avoid hair-pulling, the foulest of language and the incidental blood-letting.\n\n {meanwhile at the Fonteneau house}\n\nAndrea felt awkward when things started out. Slowly the feeling of comfort seeped in around her. She, Bebe and Mr. Samsonov kept silent vigil over their delicious meals. Everyone else chatted away about their days, articles they'd read and things going on at the children's elementary school. She'd worried when she'd been placed beside Alexander ~ he seemed to know a great deal about his English teacher yet he'd pretty much ignored her once dinner was served.\n\nWatching him play 'big brother' to Consuela's offspring was somewhat endearing. Andrea was even able to brush up some of her Spanish comprehension as the three Hispanic adults, Mrs. Samsonov and the two youngsters switched back and forth between the languages. In a serious way, she was saddened when the meal ended.\n\n\"We all take our plates to the kitchen,\" Alexander finally spoke to her.\n\nShe'd been day-dreaming while she ate, so she'd missed the completion of dessert. \n\n\"Okay,\" she smiled. Kamika and Alexander took over the dishwashing duties with the help of Gustavo, Consuela's ten-year old son. The daughter, Isabo, was six, so too small to be of much help. Mr. Samsonov left with Anita to drive her home while Consuela, the Martinez's and Isabo retired to the den to watch Azteca Spanish-language television.\n\n\"Come with us,\" Mrs. Samsonov ~ Gayle directed. The woman had an imperious way about her. She and Bebe followed the Lady of the House to the den as well. She fixed them drinks. Andrea protested initially then gratefully accepted something in a tall glass called a Cape Codder = vodka and cranberry juice. She downed it a bit too fast so Gayle fixed her a second one before the three women migrated out to the back deck.\n\n\"Alexander thinks the world of you,\" Gayle told her out of the blue.\n\n\"Huh? Me? I had no idea. He's been a pleasant student,\" Andrea mumbled.\n\n\"Alexander is a nice, young man,\" Bebe spoke for the first time.\n\n\"Too true,\" Gayle chuckled. \"He's the most mild-mannered one of the bunch, like his Pappa. Vlad is a bit too clever and Mikhail is a bit too mean-spirited - like me.\"\n\n\"I haven't had problems with any of your sons, Mrs.\" Andrea sensed she'd messed up. \"Gayle.\" She had Vlad for both English and Social Studies and Mikhail and Alexander in the same English class. The upland air was sliding down the battered peaks of the Ozarks, putting an early chill in the air. Andrea found herself staring at an empty glass.\n\n\"Let me refresh that for you,\" Gayle smiled. The rest of the night was a blur."
    ],
    "authorname": "FinalStand",
    "tags": [
        "high school",
        "cheerleaders",
        "white man",
        "black woman",
        "white woman",
        "teacher",
        "anal sex",
        "police",
        "parody"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/wmd-ch-02"
}