{
    "title": "Arabian Nights Ch. 06 - Final",
    "pages": [
        "(Sorry for the extremely long wait, everyone. I hadn't intended on writing another chapter, so here's the real final one.)\n\n~ ~ ~\n\nZane looks oddly peaceful when he sleeps. He's so masculine during the day, but when he's dreaming, he looks so adorably boyish. I just want to squeeze his cheeks and kiss his face... but unfortunately for him, he has to wake up. We have a gym to hit.\n\nSitting at the edge of his bed, I grab his shoulder and shake him gently. \"Zaaane,\" I murmur. \"Wake up.\"\n\nHe groans and stirs awake slowly, blinking as he looks up at me through those attractive, half-lidded eyes of his. \"Huh?\"\n\n\"Wake up,\" I say, smirking. \"You must have not set your alarm again.\"\n\n\"Oh shit,\" he mutters, rubbing his eyes with his fists before hoisting himself up on one elbow. \"You're throwing me off my rhythm.\"\n\nI blink. \"Me?\"\n\n\"Yeah.\" He smiles a little. \"Ever since we started fucking my routine's been all outta whack.\"\n\nI roll my eyes. \"Don't blame me for you being forgetful,\" I say, pushing his forehead so he falls onto his back with a laugh.\n\n\"I'm not complaining,\" he says, scratching his exposed chest.\n\n\"Sounds like you are. Hurry up,\" I tell him. \"I wanna get to the gym before it gets busy.\"\n\nI start to stand up, but he stops me. \"Mmm, wait... Today's Friday, right?\" he asks, stretching his arms and yawning.\n\n\"Yeah?\"\n\n\"Don't move,\" he says. He rolls over to the opposite side of his bed and opens the drawer to his nightstand. After reaching blindly in, he pulls out a small, wrapped parcel and then hands it to me. \"For you.\"\n\nI take it cautiously, confused. \"For me?\"\n\n\"Yeah,\" he says with a sleepy smile. \"Happy one-month.\"\n\nI blink before swearing under my breath. It's our one-month? \"I'm an asshole.\"\n\nZane snorts. \"Why?\"\n\n\"I didn't even think of that!\" Frankly, celebrating any sort of anniversary was never even remotely a thought in my head until this moment.\n\nZane just laughs at me. \"Don't worry about it, bro. I don't care about that stuff.\"\n\nI hold up the gift that so plainly says otherwise, giving him a skeptical look. \"So what's this then?\"\n\nHe just shrugs. \"I just care about you,\" he says.\n\nHe says that so sweetly that I'm momentarily stunned, and I feel my face get hot. Still, I smile, looking down at the small package in my hand. I undo the wrapping to find a small box underneath the paper, and when I lift the lid, I gasp. \"No way.\"\n\n\"That's the one you liked, right?\" Zane asks.\n\n\"Yeah, I... I didn't even know you were paying attention,\" I say, amazed. Zane and I randomly passed a jewelry shop a week ago, and in the window was this thin gold necklace that I was immediately attracted to. I'm not a jewelry kind of guy, but I thought that its simple yet elegant design would fit my style perfectly. It was far too expensive for me to justify the purchase, though, so I guess Zane just... bought it for me. \"Zane...\"\n\n\"Try it on!\" he says excitedly.\n\nI set the box down and gently pull the necklace out of its case. I sit down on the edge of the bed and have him help me with the fastener in the back before I turn and show off my new bling. \"How's it look?\"\n\nZane smiles, satisfied. \"Fits your vibe real well,\" he says, reaching out to give it a gentle tug. \"You like it?\"\n\n\"I love it,\" I say. \"Zane, this is... this is really fucking sweet of you.\"\n\nHe laughs. \"Well I've never had a long-term boyfriend I could buy stupid stuff for, so... prepare for that.\"\n\nI smirk a bit, wondering what other gifts he's going to inevitably shower me with. Then, I sigh a little. \"I feel like I should have gotten you something.\"\n\nHe just shakes his head. \"Seriously, don't sweat it. I just wanted to get you something nice.\"\n\nSmiling, I lean in and press my lips against his, letting my affections be known before the kiss breaks with a luscious smacking noise. \"Thanks, babe,\" I say.\n\nHe beams at that pet name. It's something I shut down a few weeks ago because I thought it was a little weird to be referring to each other as \"babe,\" but... I don't know. Right now, it seems like the perfect thing to call him -- and he's clearly very appreciative of it.\n\n\"Hey, so now that it's been a month,\" Zane starts to say, \"I was thinking... Should we finally tell our families?\"\n\nI laugh a little. \"Yeah, I've been thinking about that too,\" I say. \"I think Baba's getting suspicious.\"\n\n\"You do?\"\n\nI nod. \"He noticed we're a little more... touchy with each other lately.\" Last time Baba mentioned something, I think I pulled it off by saying I had had a bit to drink, but he did look at us curiously for the rest of the night. \"And the longer we don't tell him, the more upset he'll be about not being included.\"\n\nZane smiles, knowing my father has a flair for the dramatic at times. \"Maybe we can do something tomorrow. Take 'em out for lunch, maybe. Just Baba G and my mother, though.\"\n\n\"Won't your father feel left out?\" I ask.\n\nZane just waves his hand. \"Mama can make up some excuse. Telling him will be more... difficult. One thing at a time.\"\n\nI can't blame him for thinking that. Seth has only recently started to somewhat get back to normal around his son. After Baba came out to Seth, Seth has been much more cautious and reserved, and though it's clear that he's trying, it's difficult to really tell what he's thinking, let alone anticipate his next move. It just requires patience, from all of us.\n\n\"Sounds good. I'll give Baba a call later,\" I say before giving Zane another kiss. \"Thank you for the necklace.\"\n\nHe smiles at me before a light bulb seems to go off in his head. \"Oh, wait. I also got another gift,\" he says.\n\n\"Seriously?\"\n\n\"It's kinda for both of us,\" he says. \"Check under the bed.\"\n\nI furrow my brow before doing as he asks. Under his bed is a single bag, and I scoop it up and bring it to the bed before opening it. It looks like fabric of some sort is inside. Clothing, maybe? I reach inside and pull it out and almost laugh when I see what it is: a brand new jockstrap.\n\n\"That ass deserves to be on display,\" Zane says to me with a grin.\n\n\"I can't stand you,\" I murmur, checking out the jock. It's incredibly soft, and stylish. It has a sporty, classic look without being too flashy: black with a single, thin, white strip along the strap. It's a streamlined design, so he clearly had me in mind when he bought it. Leave it to Zane to know how to pick out the right article of clothing.\n\n\"Put it on,\" he says in a low voice, licking his lips.\n\n\"Right now?\"\n\n\"Right now,\" he says with a nod.\n\nI sigh but relent. After all, he bought me two gifts. The least I could do is show off for him a little. I push down my pajama pants and step out of my underwear before slipping on the jockstrap for him. I let the straps slap against my skin and then I lift my shirt a bit so that his view is not obstructed as I give him a spin. \"What's the verdict?\" I ask.\n\n\"Fuck,\" Zane whispers, eyeing me as I let him look from all angles. I laugh when I see him rubbing himself over his blanket. \"What?\" he asks.\n\n\"This turning you on?\"\n\n\"Are you kidding?\" he asks, smirking. \"I don't want you wearing anything else from now on.\"\n\nI snort before checking myself out in the mirror. \"Huh,\" I say, pleased. \"I look pretty good.\"\n\n\"You look fuckin' amazing, babe,\" he says.\n\nGuess we're using \"babe\" more often now. I just smile, appreciating the way my bulge is accented and the way my ass is totally highlighted. Brings the attention to the right places. And, it's comfy as hell. \"Why'd you say it's for both of us?\" I ask. \"Is your gift getting to ogle me like a pervert?\"\n\nHe laughs. \"No. I got one for myself,\" he says.\n\nI spin around. \"Well put it on!\" I demand.\n\n\"It won't fit,\" he says. \"I'm rock hard.\"\n\nI laugh a little. \"Well, make it go down so you can get dressed and we can go to the gym. We're running late.\"\n\nBut Zane doesn't make a move to get out of bed. \"Help me,\" he says, reaching down to push the blanket down and expose his wood. He wags his dick at me playfully.\n\nI roll my eyes, trying not to smile so fondly at him. \"Will you get the fuck up if I do this?\"\n\n\"Yes sir,\" he says cheekily.\n\n\"Fine,\" I murmur, climbing onto the bed and getting in between his thick, muscular thighs. I move his hand out of the way and take over. I briefly look up at Zane as he puts his hands behind his head and smiles smugly down at me before I focus on the task at hand: sucking my guy off. I peel back the skin gently and then lap at the underside of his head, right where it's extra sensitive for him. That gets him moaning softly. I'm even rewarded with a drop of his sweet precum, and I lap it up eagerly before wrapping my lips fully around the first couple inches of his manhood. Zane sighs out through his nose, relaxing as I bob my head up and down slowly, working him.\n\nThere's an art to sucking dick, I've noticed. Or maybe it'd be better defined as a sport. It just takes practice, practice, practice. Zane is the only cock I've tried, and now I feel like I've gotten a pretty decent handle on what he likes: lots of tongue, teasing around the head and under the skin, cupping his balls, and making it as sloppy as possible. The wetter, the better. Practicing really made me get my jaw in shape too. Hell, I'm pretty sure my face is more chiseled now that I've been blowing my best friend for a month. It's a fuckin' work out, especially with a guy who's as girthy as Zane is.\n\nBut the real trick was learning how to deep throat. I'm still not the best at it. For whatever reason, Zane has no gag reflex, so he can take my cock to the hilt with ease. I've fucked his throat pretty good before and he's barely flinched. I still struggle with it, but each time, I like to push myself. I slide down deeper on his cock, my saliva dripping down his shaft as I ease him into my throat. My eyes start to water a bit as he fills my neck, and I hold as long as I can before I have to pull off for air.\n\n\"Fuck, dude,\" I say, panting and wiping my lips with the back of my hand.\n\nHe just chuckles. \"You're getting pretty good at that.\"\n\n\"Don't make fun,\" I murmur, stroking his cock up and down.\n\n\"I'm being serious,\" he says, and then he grins. \"Plus it's kinda cute seeing you get frustrated.\"\n\nI give him a death glare. \"Do you want me to make you cum or not?\"\n\n\"I'll shut up,\" Zane says quickly.\n\nHe lets me get back to work in peace, and I go back to giving him a slobbery blowjob. One hand keeps a firm grip on his balls while the other strokes him up and down in tempo with my head bobbing. I moan softly against him, slurping loudly as I move, letting his cock hit or lightly ease into my throat every time I sink down. I give him long strides, really making sure all of his cock is getting some form of attention.\n\n\"Fuck, Khalid,\" he murmurs, starting to squirm. \"I'm close.\"\n\nThat just makes me work harder. I want his orgasm to be nice and intense, so I ramp up the speed, my slurping noises getting even louder as I milk his cock faster. Zane's hand finds its way to my head, his fingers getting locked in my hair as he gets closer and closer until finally, he starts to cum. His hips twitch upwards, trying to get deeper into my mouth as he fills it with his load. Fuck, his cum is so thick. It coats my tongue, making me drool even more as I collect it all in my mouth. Normally, I'd just drink it all down, but I have a different idea this time...\n\nOnce Zane finishes, I pull off of his cock slowly and let it fall to his abs with a heavy slap. Then, I crawl up his body. He smiles at me, thinking I'm just going in for a normal kiss -- and he moans when I push my tongue forward and start to feed him his load. He practically growls, wrapping his arms around me and kissing me ferociously. Our tongues do battle, swapping spit and cum back and forth, getting hot and messy with it. Often, his load will spill during a transfer and we'll lick it up from each other's chins, not wanting to waste a single drop.\n\nI'm quite breathless when we're done kissing, but really satisfied -- and incredibly turned on. And Zane... He just looks at me like he's seeing me in a new light. \"What?\" I ask.\n\n\"That was fuckin' filthy,\" Zane says, grinning and looking pleased.\n\nI'm probably blushing because my face gets warm. \"As if you didn't like it.\"\n\n\"Oh, I fuckin' loved it,\" he says. \"Just didn't know you had that in you.\"\n\n\"What, you think I'm vanilla or something?\"\n\n\"Well...\" he starts to say, and then trails off. I sit up straight and give him an offended look and he just laughs. \"I mean, you're not exactly the most adventurous sexually,\" he says, casually scratching his chest.\n\n\"I can be adventurous,\" I say defensively, even though I know he has a point. Zane is probably way kinkier than me.\n\n\"Oh yeah? Since when?\" he teases.\n\n\"Fuck off,\" I murmur.\n\nHe just laughs and pulls me back to him. \"You know I like you the way you are. I don't need you to be super kinky or anything. But, that? What you did right there? That was a welcome surprise.\"\n\nI try not to smile. \"Yeah yeah,\" I mutter before looking at him. \"What sort of stuff kinky shit do you like, anyway?\"\n\nZane smirks. \"You really wanna go there?\"\n\n\"Yeah,\" I say, sitting back up again and stretching a little. \"I mean, we've talked about sex plenty and shared a couple crazy stories, but never, like, a list of turn-ons. And I'm your boyfriend now,\" I remind him. \"I should know.\"\n\nHe just stares at me before nodding. \"Alright. Well... I've dabbled in a lot of things. I'm a pretty firm believer in trying everything once.\"\n\n\"Sounds dangerous,\" I mutter.\n\n\"It can be,\" he says, looking amused. \"But there are some things I get really into. Love me some power play. And bondage, love bondage, but light.. Public sex is always fun. Breath play is hot. I've done some hot wax before and that was pretty erotic. Blindfolds, too. Leather can be pretty sexy. I can get into watersports in the right context. Oh, and I love being called 'daddy.'\"\n\nI stare at him for a moment before laughing. \"I could get into some of that, I guess.\"\n\n\"You don't have to do anything you don't wanna do,\" he says, reaching over and patting my cheek affectionately. \"I mean, there might be something you're really into that I'd hate.\"\n\nI snort. \"Yeah, I doubt that,\" I say, and Zane laughs before sliding off the bed and stretching. His cock has now gone fully soft, so he reaches into the bag and pulls on the second jockstrap -- a matching one. His bulges out much more than mine, and I find my mouth watering a little more. \"Fuck.\"\n\n\"Look okay?\" he asks as he tilts his ass towards me.\n\n\"I hate you,\" I mutter. Man, how does he look so perfect? He's the ideal male. It's so strange to feel both envious of and aroused by him.\n\nHe just laughs. \"C'mon, sexy,\" he says, pulling me up to my feet and kissing my lips. \"Let's hit the gym.\"\n\nWe both get dressed in similar get-ups: tight shirts, short shorts, sneakers with crew socks, and our jockstraps underneath. The only difference is that Zane's wearing a wife-beater, showing off his musculature a little more than I am. And of course, I'm showing off my new jewelry, courtesy of my boyfriend's kindness.\n\nBecause we ran late today, we're not the only early birds at the gym. Actually, it's surprisingly occupied, with four different people using the equipment: two girls, one guy, and a much older male doing cardio. Today's leg day, and we wanted to start with the leg press and curl machines like we usually do, but they're both being occupied. I frown a little at my routine being thrown off, but Zane just shrugs. \"Let's just start with squats then.\"\n\nWe head over to the other side of the room to use a barbell. \"You wanna go first?\" I ask.\n\n\"Nah, you go,\" he says, but he starts adding weights to the bar.\n\n\"Um... You sure?\" I ask, smirking.\n\n\"Just setting it up for you,\" he says with a smile. \"I know your weight.\"\n\n\"Is this the 'anticipating my needs' part of the boyfriend package?\" I ask.\n\nZane lets out a hearty laugh. \"You bet your sweet ass it is,\" he says. Once he finishes securing the appropriate amount of weight, he gets behind me to spot me. \"You're up,\" he says, giving my ass a quick slap. I swat his hand away before readying myself for a back squat. Just as I lift the bar and step into position, Zane murmurs, \"That guy keeps checking you out.\"\n\n\"Huh?\" I ask, annoyed that he wants to talk right now.\n\n\"That guy, at the leg press,\" he says.\n\nI barely even remember what he looks like. That's how little I paid attention to him. \"How do you know he's not looking at you?\" I ask before squatting down to start my reps.\n\n\"Because I made eye contact with him when I caught him staring, and then he looked away. It was definitely at you.\" He even gives my ass a quick squeeze when I stand back up.\n\n\"You're supposed to spot me, not fondle me,\" I mutter, squatting back down.\n\n\"I gotchu, babe,\" he says. He stays quiet for a few reps before asking another question. \"What do you think of him?\"\n\nI sigh heavily when I push back upright. \"What do you mean?\"\n\n\"I mean, what do you think of him?\" he repeats. \"Think he's hot?\"\n\nI end up resetting the bar, and turning to look at him as I catch my breath. I can't hold a conversation and squat simultaneously. \"What is this about?\"\n\nHe looks surprised. \"It's not about anything,\" he says, laughing. \"I just wanna know what kinds of guys you find attractive.\"\n\n\"I don't,\" I say simply.\n\n\"You don't look at other guys?\" he asks.\n\n\"No, dude,\" I tell him, almost laughing. \"Girls, sure, but guys? No.\"\n\n\"So you don't think that guy's attractive?\" he asks, pointing his thumb towards the guy at the leg press. Sure enough, he's looking this way, and when I catch his eye, he turns away.\n\n\"He's fine looking, I guess,\" I say. \"Doesn't mean I wanna fuck him.\" I'm a little annoyed that Zane's pestering me like this, but he's just smiling. \"What?\"\n\n\"You telling me you only have eyes for me?\" he asks with a grin.\n\nI roll my eyes and punch him in the chest. \"You're so annoying.\"\n\nHe just laughs and grabs my wrist before I pull away, reeling me in for a quick, very public kiss. I grunt slightly, and my instinct is to shut this down because I'm not the biggest fan of such public displays of affection, but fuck, it feels too good having him on my lips. It's a quick kiss, but enough to leave me a little flustered.\n\n\"You're still annoying,\" I murmur, my face hot.\n\nHe just grins happily. \"You're just so easy to mess with,\" he says before nudging me out of the way to start increasing the weight on the barbell.\n\n\"Do YOU look at other guys?\" I ask after a moment.\n\n\"Of course,\" he says. \"I'm gay.\"\n\nRight. Duh. That makes sense. But suddenly I'm getting flashbacks to his ex-fling, and the jealousy stirs up in me again. I clear my throat and put my hands in my pockets before admitting what I'm about to say. \"Remember Jason?\"\n\n\"What about him?\" Zane asks.\n\n\"And how he was jealous of me?\"\n\nZane snorts, securing one side with weights. \"Yeah, I remember,\" he says bitterly.\n\n\"Well... when you and him were dating... I, uh... That was the first time I got jealous of anyone before.\"\n\nZane turns to look at me now, seeming surprised by this information. He even looks at me up and down. \"What do you mean?\"\n\n\"Like, I was jealous of him, like... taking you away from me, or maybe you telling him things you wouldn't tell me or whatever. I don't know. I felt threatened.\" I start to feel awkward, but it's best to get it all out now than have it come up later. \"And I know it's stupid, I know, but in my head, me liking girls wasn't as big of a threat to us as you liking guys and...\" I rub my forehead. \"I sound so stupid.\"\n\nHe turns his body to face me fully now, stepping a little closer. \"You don't have to worry about other guys, Khalid,\" he says with a patient smile, \"just like I don't worry about you with girls. You trust me, don't you?\"",
        "I bite my lip but nod.\n\n\"And I trust you, 100%.\" He smiles a little wider, now. \"Thank you for telling me, though. I like knowing what's going on up there.\"\n\n\"It makes me sound like a teenage girl,\" I mutter, embarrassed by my jealous feelings.\n\n\"Makes you sound like a person,\" he says with a laugh.\n\n\"I just... I just like being your number one,\" I tell him.\n\nAgain, he leans in for a kiss, soft and sweet, just to express that affection. \"You're not going anywhere,\" he says softly, and I smile, relieved.\n\n~ ~ ~\n\nZane's been pacing in the kitchen for about three minutes now, looking worried. \"Maybe this isn't a good idea,\" he keeps saying.\n\nIt's like the situation with his father all over again. He's so back and forth with how he feels about telling our family another layer of truth. Today, we're supposed to meet Baba and Rashida for lunch to inform them about our new relationship. Yesterday, he seemed quite excited to tell them, but now that we're mere hours away from lunch, he's getting anxious.\n\n\"It was your idea,\" I remind him.\n\n\"You were thinking it, too,\" he says.\n\nI smile, amused. \"Sure, but you brought it up.\" I step forward and grab his arms to keep him still. \"Relax, Zane. It's just Baba and Rashida.\"\n\n\"But what if--?\"\n\n\"But nothing,\" I tell him. \"It'll be fine.\"\n\nHe just stares at me before looking between us and saying, \"Lemme suck you off.\"\n\n\"Huh?\" Suddenly, his hands reach for my pajama pants, and I push them away. \"Seriously?\"\n\n\"C'mon,\" he says, almost whining. \"That always calms me down.\"\n\nI snort. \"Are you for real?\"\n\n\"Yes,\" he says, looking dead serious. \"I'll be less nervous with your load in me.\"\n\nI try my best not to laugh but I fail. \"You're such a dork.\"\n\nHe just smiles and reaches for my pants again. \"C'mon. Please?\" He grabs the two drawstrings and tugs on them playfully. \"C'mooon.\"\n\nHe may be a huge dork, but a blowjob is a blowjob... I just put a hand on his shoulder and guide him to his knees. With a huge smile on his face, he undoes my pajama pants and eagerly pulls them down until my cock is exposed. It's still soft but hanging thickly, and he lifts it up a single finger to gingerly bring it to his mouth. As soon as his lips wrap around it, he's the one who moans. He puts his hands on my hips and swallows my soft cock fully, suckling on it. I sigh gently in response to his tongue, feeling my dick twitch to life. Slowly, it grows in Zane's mouth, getting excited for attention. The harder I get, the more Zane groans, like he's fine dining. It makes me smile a bit, and I run my fingers through his hair.\n\nHe pulls off for air and then lightly strokes me to full hardness, licking his lips. \"Beautiful,\" he murmurs before taking me back into his mouth. Now he starts bobbing his head, sucking hard but slowly, and that makes me grunt. I grip his hair a little more tightly, feeling my cock throb whenever he takes me deep.\n\nThen, I feel something vibrating. Zane pulls off before reaching into my pocket and pulling out my phone. He looks at the screen before tilting it towards me. \"It's Baba G,\" he says.\n\nUgh. I groan but take the phone, knowing he'll probably need a reminder as to when we're supposed to meet. I answer the call and bring the phone to my ear. \"Hey Baba.\"\n\n\"Hello, son,\" he says. \"Where are you?\"\n\nI furrow my brow. \"What do you mean?\"\n\n\"When are you coming?\" he asks.\n\nI get distracted momentarily because Zane decides to guide my cock back to his mouth. I grunt and try to push him off, but he grabs my hand and pins it behind me, gobbling up my cock. \"Um... Noon?\" I say, checking the time to make sure. \"We're meeting for lunch, aren't we?\"\n\n\"Oh. I thought you said brunch!\"\n\n\"What?\" I ask. Is he for real? \"Brunch isn't noon, Baba,\" I say, trying to wiggle out of Zane's grip. I keep grunting from the exertion and also the head he's giving me.\n\n\"I didn't say brunch.\"\n\nI'd slap my hand on my forehead if I could. \"Baba!\"\n\n\"Well, Rashida and I are here and waiting.\" Zane suddenly gets extra deep and I groan a bit, quickly tilting the phone away. \"Are you alright?\" he asks.\n\n\"Yeah, I just... You're just frustrating, is all,\" I say. \"I should have planned this with Rashida.\"\n\n\"You don't trust me?\"\n\n\"With plans?\" I ask. \"Never.\"\n\nThat seems to get a chuckle out of him. \"Well, come by soon.\"\n\n\"Alright. Bye, Baba.\"\n\n\"Bye, son,\" he says, hanging up.\n\nI set my phone on the counter and then use my other hand to grab Zane's hair. \"You're a dick,\" I tell him, holding him down on my cock as deep as he can get. He groans on me, letting go of my other hand so I can use it to thrust back and forth. If you want it so bad, then have it. Zane opens his mouth wider, the sounds of my dick pegging his throat now practically echoing throughout the kitchen. He reaches up my legs to grab at my ass and squeeze while pulling me deeper -- so I do so. I hold him as deep as I can, grinding my crotch against his face and giving him short, sharp thrusts.\n\nThen, after holding for a while, just when Zane starts to struggle a bit, I sharply pull out of his mouth. He gasps for air, face red and eyes watery. \"Fuck,\" he groans, looking up at me with a well-fucked, pleased sort of expression. \"That was hot.\"\n\n\"You're not done,\" I tell him, pointing to my cock.\n\nHe grunts, taking hold of it and rubbing my cockhead all along his face. \"Feed me, bro.\"\n\n\"Work for it, then,\" I say, and he gobbles me up again as if sucking for dear life. The way he manages to stroke with his hand and his lips so well is astounding. He glides so smoothly that it's incredible to watch -- and even more incredible to feel. His rapid speed and noisy sucking gets me close to orgasm quick, and I decide not to warn him. All of a sudden, I surprise him with a thick load spurting into his mouth. I know he tastes it when he makes a happy moan, gulping it all down as he blows me. Very gradually, as I come down from my high, he slows down. But I let him keep at it for a while, knowing he likes feeling it go soft in his mouth. He takes it slow, really massaging my cock to get every bit of cum I have. At one point, he massages the underside with his thumb and watches as a thick drop of cum starts oozing at the tip. Then, he sticks his tongue out and lets it drip onto it before swallowing it with a satisfied hum.\n\nHe keeps suckling me for another minute, bringing my cock down to a healthy semi before he finally pulls off and then stands up, looking pleased with himself.\n\n\"Still nervous?\" I ask.\n\n\"Nah, you fucked that right outta me,\" he says with a grin.\n\n\"Good.\" I smirk and then give him a quick kiss. \"Now get dressed. We're late.\"\n\n~ ~ ~\n\nOnce we get to the restaurant, we find that Baba and Rashida have chosen an outside table. It's quite a nice morning, so I'm not complaining. As soon as Baba sees us drawing nearer, he smiles and stands up to embrace me. I hug him tight before we kiss cheeks. \"So good to see you, son,\" he says as if we hadn't seen each other just two days ago.\n\n\"It's barely been forty-eight hours, Baba,\" I tease.\n\n\"Then you'd be dead if you had gone missing,\" he says, and I laugh. His new favorite thing is watching crime shows, even though it gets his blood pressure up. Then, his eyes flicker to my chest. \"What's this?\" he asks, tugging gently on my chain.\n\n\"Oh. Zane got it for me,\" I tell him. \"You like it?\"\n\n\"It's quite nice,\" he says, patting my chest approvingly before turning to Zane. \"Good taste, my boy,\" he says, opening his arms.\n\nZane laughs and bends down to hug Baba while I hug Rashida hello. Then, we all sit down at the table. Soon, the waiter comes by to take our drink orders, and Zane and I both decide to have mimosas, the same drinks Baba and Rashida have been nursing on in our absence. Why not? There's plenty to celebrate.\n\nWe make small talk for a bit. After the waiter returns with two more mimosas and takes our food order, I accuse Baba of flirting with him, to which he just smiles and shrugs playfully while sipping his drink. Then, we shift gears and catch up on Rashida's shop. Her business has been booming lately, and quite rapidly, which she's been very excited about. And then, of course, Zane asks how his father is doing, to which Rashida and Baba both shrug. He's been \"different,\" they both say -- much quieter and reclusive, in stark contrast to his normally boisterous personality. But Rashida just seems to think he's been doing a lot of self-reflection, and she's taking this change as a good thing rather than a bad thing. Both of them seem hopeful, at least, so that's got to count for something.\n\nThen, Zane clears his throat and side-eyes me. I almost laugh. Guess I'm the one who has to break the news. \"Well... Not to give more things for Seth to contemplate, but... We have some news.\"\n\n\"Oh?\" Baba asks, setting his drink down and looking at me curiously.\n\n\"Yeah. Um...\" I laugh again, but this time, out of nervousness. I'm not necessarily nervous about a negative reaction... I just know Baba's going to pester the fuck out of me now. \"Well, we wanted to tell you guys first that... Zane and I... We're together.\"\n\nRashida and Baba both glance at each other before looking back at us. \"Together?\" Rashida asks.\n\n\"Yeah, as in... dating.\" I clear my throat, shifting in my seat. \"We're a couple.\"\n\nThey just stare at us for a few moments, not saying anything. Hell, they even smile slightly, almost privately.\n\n\"Hello?\" I ask, looking back and forth between them both. \"Is no one going to say something?\"\n\n\"What do you want us to say, habibi?\" Baba says with a patient smile.\n\n\"I don't know,\" I say, glancing at Zane. \"That you're... surprised, or something?\"\n\n\"Well, that would be dishonest, wouldn't it?\" he says as he brings his mimosa back to his lips to sip -- and to hide his smile. Both Rashida and Zane even chuckle, so I feel like I'm left out of the joke.\n\n\"Are you kidding?\" I murmur. \"Can you at least pretend to be surprised?\"\n\nBaba chuckles before setting down his drink, waving me off. \"Fine, fine, we'll play along.\" He sits up straight, clears his throat, composes himself, and then looks at me with a very fake, wide-eyed expression. \"Ali! My sweet boy! I had no idea!\" He tops it off with a gasp as he brings his hands to his cheeks.\n\nI just slouch in my seat as Zane tries to stop laughing. \"You guys are the worst,\" I mutter.\n\n\"Oh lighten up, Khalid,\" Baba says. \"We support you, of course. But we've had our suspicions for a while.\"\n\n\"We have only been waiting for you to tell us,\" Rashida chimes in.\n\nThen Baba turns to Rashida, touching her arm. \"Remember that fat hobo woman, with the shifty eye?\" he asks.\n\nZane snorts, choking on his drink, and that actually gets a smile out of me. Baba is so blunt sometimes, but Rashida, who knows him well, doesn't ever take offense. She even seems to know exactly who he's referring to. \"The fortune teller, yes?\"\n\n\"Alleged fortune teller,\" he says. \"That stuff is all hooey.\"\n\nIt seems Zane is incredibly amused by Baba today, because he just keeps laughing. \"But she was right,\" Rashida says with a smile.\n\n\"That she was,\" he says.\n\n\"Right about what?\" I ask.\n\n\"She saw you two as children and said this was going to happen.\"\n\nI furrow my brow. \"Bullshit.\"\n\n\"It's true!\" he says.\n\n\"So, what, we were destined to be?\"\n\nBaba just smiles at me and shrugs. \"Or we could say... maybe you just found your way.\"\n\nI don't know what to make of all of this. I mean, Zane and I have always been incredibly close. It's just surprising to hear that some random stranger thought he and I would end up together. How could she even make that guess? Zane and I have always acted like brothers. Hell, we still do. That just comes with the length of our relationship. Zane even joked the other day by saying, \"Yeah, you're still like a brother to me. Just... one that I have sex with, now.\"\n\nI turn towards Zane, who's smiling a bit. Seems like all that nervousness from this morning has disappeared, and I smile back, reaching for his hand under the table. He flips his palm upwards and lets me hold on, giving me a gentle squeeze. Destined to be doesn't sound so bad...\n\n\"So... you two are having sex?\" Baba suddenly asks.\n\nMy head turns sharply towards him. \"Baba!\"\n\n\"What?\" he asks. \"Are you not?\"\n\n\"That's none of your business,\" I tell him.\n\n\"Hmm,\" he says, seemingly unconvinced by that. \"Are you being safe?\"\n\nI gulp. \"Being safe\" means \"using condoms,\" which we definitely are not, but we're both fully tested, so... \"Sure,\" I say.\n\nHe just stares at me long and hard before murmuring one word: \"Liar.\"\n\n\"Leave them alone, sahbi,\" Rashida says with a little giggle.\n\n\"What about you and YOUR boyfriend, hm?\" I fire back. Baba and his little pal Raul have been going strong for a while now. Surely they're getting busy.\n\nBaba just waves me off. \"None of your business,\" he says plainly.\n\nI blink. \"So my sex life is your business but not the other way around?\"\n\n\"You are my son,\" he says. \"All of you is my business.\"\n\nI sigh, exasperated. \"You're infuriating,\" I tell him, but I can't help but smile.\n\nHe just brings his mimosa back to his lips with a jolly smile. \"I love you, too.\"\n\n~ ~ ~\n\nI sniff the air a few times before turning my head towards the kitchen. \"I smell burning.\"\n\n\"Shut up,\" Zane says from the kitchen, and I chuckle.\n\n\"Don't fuck up my popcorn!\" I tell him, smirking as I settle back comfortably into the couch. I stretch my arms a bit.\n\n\"I won't, babe,\" he calls back. I close my eyes and just listen to him rummaging around in the kitchen. I can hear him grabbing salt and pepper and sprinkling it on our freshly made popcorn as he hums a little tune. Unsurprisingly, it's a Sinatra number. For whatever reason, I never get sick of hearing it, though. It's a strange little comfort to hear Zane sing, however lightly.\n\nThen, he comes waltzing back into the living room only wearing sweatpants. In the crook of his left arm is the bowl of popcorn, and in his hands are four ice-cold hard ciders. We've been meaning to sample a few different flavors, and today, we just want to stay in, watch movies, drink, and just be with each other. Totally chill. After such a hectic week at work for both of us, this is the kind of unwinding we look forward to most.\n\n\"Gimme that,\" I say, taking the bowl of popcorn and setting it in my lap.\n\n\"I thought I told you to take that shirt off,\" he says, setting the ciders down.\n\nI just smirk as I start digging into the popcorn. \"I'll get cold,\" I tell him. It's true. It's been a little chilly the past few days, so I'm in sweatpants and a cozy sweater to keep warm.\n\n\"Pussy,\" he murmurs, plopping down next to me as closely as possible. Our legs are right up against each other's.\n\n\"You just wanna see me naked all the time,\" I tell him, offering him some popcorn.\n\n\"And you just wanna deny my eyes the pleasure,\" he says cheekily, tossing a few pieces of popcorn into his mouth. I just laugh, shaking my head. \"Which cider you want?\"\n\n\"Um...\" I glance at the flavors before pointing to one. \"The peach one.\"\n\n\"Good choice,\" he says, popping the cap off expertly. He hands me my cider before choosing the classic apple variety for himself. We're both planning on sharing anyway, so we'll each get to taste each flavor. \"And now... What movie?\"\n\nZane sits back, casually putting one arm behind me on the back of the couch while the other holds onto the remote. \"Preferably something we don't have to pay too much attention to,\" I say, sampling more popcorn. \"My brain is fucking fried.\"\n\n\"I hear ya,\" he mutters, chuckling softly as we scroll through our options. \"Maybe comedy?\" he suggests. \"It'll be stupid, but could be fun.\"\n\n\"Hmm, maybe if it's an action comedy,\" I say.\n\n\"Yeah, true,\" he says, scrolling down to the action and adventure selection. \"Oh, God.\"\n\n\"What?\"\n\n\"Look what's on here,\" he says, scrolling over to highlight a particular movie. It's Aladdin, but the live action version.\n\nI burst out laughing. \"No.\"\n\n\"Didn't I fall asleep when we saw this?\" he asks.\n\n\"Yup. Left me to suffer through it alone.\"\n\nZane chuckles, draping his arm around me more. \"Least I gave you head.\"\n\nI grin a bit. \"That was really hot,\" I say, giving his thigh a little squeeze. \"We should do more shit like that.\"\n\n\"Yeah?\" Zane asks, a sly grin on his face. \"You wanna do more public shit with me?\"\n\n\"Just don't ask me to start calling you daddy,\" I murmur, and Zane bursts out laughing.\n\n\"We'll stick with 'big bro' then,\" he says with a grin.\n\nI'm about to retort when suddenly, there's a knock on the door. Both of our heads turn towards the front door before we look at each other, confused. \"Delivery?\" I ask.\n\nZane shrugs before standing up and setting the remote down. Then, he heads to the door, unlocks it, and opens it up -- only to find Seth standing in the doorway. \"Baba?\" he asks, sounding bewildered.\n\nI can see Seth half-smile from over Zane's shoulder. \"Hello, son.\"\n\n\"Wha... What are you doing here? Are you alright?\" I see Zane's head moving, which probably means he's checking his father for any noticeable injuries.\n\nBut Seth just tries to pass it off. \"Can't a father come see his son?\"\n\n\"Well, yeah, but...\" Zane scratches the back of his head. \"You never come here.\"\n\nSeth just nods, silent for a moment before he asks if he can come in.\n\n\"Um... Yeah, of course.\" Zane steps aside to make way for his father, and after he shuts the door, Zane gives me a look that plainly says \"What the hell is going on?\" before he addresses Seth again. \"Do you want anything? Water, or tea?\"\n\n\"No, no, this is a short visit,\" he says, looking nervous and clutching what looks to be a paper bag in his arm. Then, as he's looking around, he spots me on the couch and looks surprised. \"Oh! Khalid! Good, you're here.\"\n\nI have to hold my tongue and remind him that I live here, but I just smile. \"Hi, Seth.\"\n\nHe gives me a little smile but it seems strained somehow. Maybe that's not the right way to describe it... Awkward? Seth seems incredibly awkward, which is disconcerting, because he's usually a pillar of confidence.\n\n\"I wanted to talk to you,\" he says, now addressing his son.\n\n\"About?\"\n\n\"About... Well, your mother told me.\" Then, he points back and forth between me and Zane. \"About you two.\"\n\nOh, shit. Rashida told him? Zane looks at me with a slightly panicked expression, and I sit up, prepping myself for whatever might happen next. We had discussed at our lunch how we would tell Seth, but none of us seemed to really come to a consensus on how to best broach the subject with him. Maybe Rashida just saw a good opportunity and took it.\n\nSeth takes a deep breath and looks at Zane. \"I know I didn't respond well when you told me you were... well, are... that you are...\"\n\nZane waits for him to finish the sentence, but seems like he needs to do it for Seth. \"Gay?\"\n\n\"Yes,\" Seth says, looking flustered. \"I know I didn't respond well, but... I want to do better this time.\"\n\nZane blinks, clearly surprised. \"What do you mean?\"\n\n\"I mean, I want to be supportive,\" he says. \"I'm your father. And you're a good boy. You deserve a good father.\" Then, he takes the paper bag and holds it out to his son. \"A peace offering.\"\n\nZane hesitates before taking it. He reaches into the bag and pulls out a bottle of wine -- Seth's favorite brand of Chabli, in fact. I smile. None of us are huge fans of Seth's taste in wine, but this is a good sign. If Seth's gifting us his favorite drink, it really does mean something. I want to go up and make sure Zane's okay, but I don't want to disrupt their moment, so I stay seated and quiet.\n\n\"Baba,\" Zane says, his voice getting shaky.\n\n\"I'm sorry for what I said before,\" he says, and I'm surprised. He's never specifically apologized for what went down. The most he's ever said was that he was sorry, but it was a vague sentiment. \"I didn't... I didn't mean any of it. I love you. Both of you,\" he says, now looking at me. \"You know you're like a second son to me, Khalid.\"",
        "Shit, now I'm getting a little emotional. \"I know, Seth.\"\n\nHe nods, appreciating that I'm acknowledging him. Then he clears his throat, looking at Zane again. \"Well, I just came by to say... all that,\" he says, looking uncomfortable.\n\n\"Thank you, Baba,\" Zane says -- and then he leans in to hug his father. Seth looks unsure at first, but after a moment, he smiles and wraps his arms around his son, holding him tight. Fuck, I don't even remember the last time I saw them hug. My father has always been the affectionate one, not Seth. But this... This is so sweet that it's making my eyes well up.\n\nThey both pull back with a gentle, nervous laugh, both of them with teary eyes. Seth says his goodbye to Zane, and then waves to me before Zane sees him out. After his exit, Zane locks up again and then turns to me, holding the Chabli tight in one fist. \"Holy shit,\" he says, sniffling a little and laughing.\n\n\"C'mere, babe,\" I say, patting the couch. He comes right over, setting the wine down on the coffee table before sighing as he sits on the couch. I tilt my body towards him, reaching behind him to gently stroke his hair. \"You okay?\"\n\n\"Yeah,\" he says softly, staring at nothing. \"I just... did not expect that to happen.\"\n\n\"What are you feeling?\" I ask.\n\n\"Relief,\" he says, \"and just... Fuck, I'm just happy.\" I smile as a joyous expression starts to take over Zane's face. I haven't seen him look so elated in a long time. \"Yeah, I'm just... just really happy,\" he says, laughing. Clearly he can't find the words, but I understand.\n\nI glance at the wine bottle before deciding to add a little humor to the mix. \"Do you think the wine is poisoned though?\" I ask quietly. And Zane laughs, and laughs, and laughs. He falls into a full fit of laughter, so boyish and light in nature, and I just smile widely, happy that my guy is feeling so renewed. He deserves it. He deserves everything.\n\nWhen he wipes tears out of his eyes and regains composure, he looks at me and says, \"I love you.\"\n\nI chuckle. \"I love you too, big guy.\"\n\n\"You don't understand,\" he says, insistent. \"I'm so fucking in love with you, Khalid. Thank you for being my guy.\"\n\n\"I'm always gonna be your guy,\" I tell him. \"And you're always gonna be mine.\"\n\nHe just smiles softly at me, staring for several seconds before murmuring, \"C'mere.\" He doesn't move anything but his lips when he says that -- no gestures of any kind. But I understand exactly what he means. Smiling back, I slide over to him, swinging a leg over his lap so that I'm straddling him. Then, tilting my head down, I meet his lips with mine.\n\nHis arms slide around me as we start to kiss slowly, languidly, with tongue and moist breath. They're deeply sensual kisses -- not quite yet delving into sexual, \"hot and heavy\" territory. These are the kinds of kisses we can't get enough of, where we tell each other how much we mean to each other without words. Intimacy really is just another universal language.\n\nHis hands move down my back so that they can slip underneath my sweater and touch skin. I hum softly, my fingers curling in the hair on the back of his head as we deepen the kisses even more. Both of us start panting softly as we stiffen in our sweatpants. Guess it's time to forget about the popcorn, or the ciders, or... anything, really. It's time to take advantage of this newfound joy.\n\nZane hooks an arm under my ass, and then suddenly, he's picking me up as he gets to his feet. I gasp in surprise, clutching onto him with a laugh, but he carries me with ease. I always forget how strong he really is. \"You're not gonna drop me, are you?\" I ask.\n\n\"I got you,\" he says with a smile, holding me close to him as he makes his way out of the living room. He chooses his bedroom, nudging the door open with his foot and then gently setting me down on the bed. He kisses my lips once before hooking his fingers into the waistband of my sweatpants and then starting to tug. I lift my ass up a bit to make it easier for him, and the pants come off quickly.\n\nZane grins when he sees I'm wearing the jockstrap he bought me. I in turn glance down to see that he's tenting the hell out of his sweatpants. He doesn't seem to pay it any mind, though, getting between my legs and onto the bed with me. His lips once again find mine, but one of his hands reaches down and around, gripping my ass. I grunt, putting my arms around his neck as we kiss, spreading my leg out a little wider when I feel his fingers inching closer to my hole. Once he finally makes contact, I get chills all over, moaning softly against his lips. He just pets at my hole gently, making my toes curl. Fuck, I need proper attention.\n\nThankfully, he has the same thing in mind. He breaks the kiss and whispers, \"Turn over for me.\"\n\nI do so, turning onto my stomach and then getting on my hands and knees for him. I shift more towards the middle of his bed so that he can get on, too. I even slide my sweater up a little so that he has a totally unobstructed view of my ass.\n\n\"Fuck, you look so hot in a jock, dude,\" he says before giving my ass a slap. I grunt and recoil, but he grips my ass tightly before bending down behind me. Then, after spreading my cheeks apart, he dives right in with little to no hesitation. I swear under my breath, letting my head hang and my back arch as Zane eats me out hungrily. His tongue is relentless right off the bat, and I find myself gripping his sheets so tightly that my fingers are starting to hurt. And then, when his tongue starts darting in and out of me, I can't stay silent. I moan like a bitch in heat. I reach back to hold the back of his head and keep him against me, grinding right back against his face. He just grunts, lapping at and sucking on my hole like it's his last meal. There's a ferocity to his movements right now that's getting me so hot.\n\nI end up taking my sweater off as Zane rims me, starting to get overheated from the intense pleasure he's giving me. He even ups the level a bit by gripping my jock pouch and massaging it gently. Fuck, I'm probably leaking precum into the fabric now, my cock's throbbing so intensely. I'm so hard that it hurts being trapped by the pouch -- but once again, Zane seems to be attuned to my body and my thoughts, because he fishes my cock out of the pouch for me. He does me one better by pulling my goods back, dragging his tongue down, and taking the head of my cock into his mouth to suckle it briefly.\n\nThen, he pushes me playfully so that I land on my stomach. When I turn my head to look back at him, I watch as he drops his sweatpants to the floor, revealing that he wasn't wearing underwear. I gulp seeing his cock staring in my direction -- and Zane suddenly laughs. \"What's that look?\" he asks.\n\n\"Your cock is just so... intimidating,\" I tell him, rolling onto my back.\n\nHe grins, kneeling on the bed now. \"But you know him so well now,\" he says, giving his cock a few strokes. I just laugh, letting Zane pull my jockstrap off of me, leaving me in nothing but his necklace. He even brings the pouch to his face and inhales deeply as he jerks himself off with his free hand.\n\n\"Dude!\" I say, laughing a little but feeling a little embarrassed.\n\n\"I fuckin' love your scent,\" he says, taking another huff before tossing them to the end of the bed. Then he climbs over me, puts one strong hand around my neck, and leans down to kiss me passionately. I groan softly as he feeds me his tongue, and I taste myself on him. The flavors and the scents... They're only making me harder right now. Fuck, we're really amped up right now -- me especially when Zane starts squeezing the sides of my neck, lightly restricting bloodflow. My eyes roll back as I get a little lightheaded in the best way. It's enough where Zane is the one who's really controlling the tempo of the kisses. It's all his lips and tongue, and as I get into a blissed-out, delirious state, he just keeps feeding me spit.\n\nWith his free hand, he grabs our cocks and holds them together, stroking them in one grip briefly before moving both of his hands to mine. I inhale slowly as my senses start to return to me, moaning out as Zane starts to grind his cock against mine while pinning my hands above my head. We frot like we're fucking, kissing and panting as we gyrate, but it's made hotter by the fact that I feel so... at his mercy right now. His body's pinning my body, and my arms have been rendered useless by his hands.\n\n\"You're so fucking sexy,\" he murmurs against my lips.\n\nI just groan. \"Fuck me,\" I tell him.\n\nHe smirks against my mouth. \"Yeah, babe?\"\n\n\"C'mon,\" I beg, thrusting up against his cock a little harder.\n\nHe just grunts. \"Ask nicely.\"\n\nBastard. He just wants to tease me. Luckily for me, I notice his grip on my wrists slackens enough for me to make a move. Quickly, I essentially wrestle him out of this position and flip us over so that I'm on top. It catches him so off-guard that I find it quite easy to get him where I need him. I want to be in control, now.\n\nI push him onto his back and quickly straddle his chest. Zane looks wide-eyed for a second before he gets that deeply aroused look in his eyes, complimented by a half-grin. We smoothly transition to oral in this position as I slide forward, guiding my cock to his mouth. Zane gobbles me up as I thrust right into his throat and start to find a gentle stride. He grunts with each thrust, reaching down to stroke himself off with one hand and then find my hole with the other. I moan out when he manages to slip a finger in, and I rock back and forth, fucking myself on his middle finger with each backstroke and then plunging into his mouth with each forward stroke. It feels so hot dabbling in a little power play this way. Switching back and forth... I could get used to this.\n\nAfter a while, I can't wait much longer; I need to get fucked. My hole is practically begging for it. I pull sharply out of Zane's mouth and he gasps for air, strings of saliva connecting my cock to his lips. I hold my palm out under his chin and tell him to spit.\n\nHe catches his breath before he does so, giving me some spit to lube up his cock with. We've been doing so much anal play that I don't really need much besides a good amount of spit to get going -- especially when I'm this horny. I just open right up for him. Once his cock is slick with his spit and all the precum he's been dripping, I slide back, hover, and then slowly sink down on him. Both of us moan softly together as I feel Zane stretching me out.\n\n\"Fuuuck,\" he says slowly as he penetrates me further.\n\nI'm thinking the same thing. Honestly, this is my favorite way to get fucked. Something about this position just feels so fucking good in me. I'll be Zane's cowgirl any day of the week. Plus, now, I get to experiment a bit...\n\nAs I start to raise and lower myself on his cock, I reach my hand down to Zane's neck and then squeeze, just like he did for me. His eyes almost immediately roll back and he lets out a much louder moan, clearly into it. See, Zane? Told you I can be a little kinky. I almost laugh to myself as I think back on our conversation. He had a point... but that doesn't mean I'm not willing to try new things, especially if his pleasure is involved. I want to make him feel as good as possible. That's what best friends do for each other. That's what lovers do.\n\nI keep a firm grip on his neck as I gradually start to really work his cock. At first, I start off slow to really enjoy that initial stretch and feel his cock explore me deeply. Then, I go from gentle movements to slamming down harder into his lap and making the entire bed shake and bang against the wall. He arches his back, his moans breathy and shaky, and I bite my lip in concentration. Fuck, I'm so hard. Every time I buck down on him, my hard-on slaps loudly against his abs, splattering in a little pool of my precum. Shit, and he's hitting my spot just right. I don't want this to ever fucking stop. I could go on for--\n\n\"Stop, stop, stop,\" Zane cries, pulling my wrist away and quickly steadying my hips.\n\nI catch my breath, looking down at him. \"What?\"\n\n\"I almost came,\" he whispers, sounding more winded than me. He even blinks a few times to regain his vision.\n\n\"Don't you... want to?\" I ask, almost laughing.\n\n\"I mean, yeah, but... Fuck, this is the best I've ever felt,\" he says, smiling up at me. \"I don't want it to stop.\"\n\nWell... That, I'm okay with. \"Good, 'cause I barely got started,\" I say, reaching down to playfully pat his cheek.\n\nHe grins, his chest still heaving. \"You're gonna kill me,\" he murmurs.\n\n\"Only if you're weak,\" I tease.\n\nHe growls a little -- and then suddenly, we're wrestling a bit. Our hands get locked together as we try to overcome and pin the other. Even though Zane is without a doubt stronger, my position works in my favor, and as I lean my weight into it, I manage to get his hands pinned over his head. When he finally gives in, I fall forward a bit, my face hovering over his as we pant, mere inches away from his lips. Slowly, I start moving my hips since he's still inside of me. I give him extremely light kisses, almost pecks, just teasing him -- and it works, too, because he whimpers when I don't grant him a full-bodied kiss. Damn, I see why Zane loves switching up dynamics. It's fun having the power.\n\n\"C'mon, babe,\" he whines.\n\nI chuckle, just grinding deeper into him and then licking his lips with one quick swipe of my tongue.\n\nHe whines again. \"Please?\"\n\nWell, since he said \"please\"... I smile and give in, kissing him deeply to make up for the teasing. He moans in relief as our tongues do a slow dance. I just keep grinding my hips, working his cock slowly, enjoying the change of pace. Now our kisses are getting more playful, softer, and smiley. He even snags my bottom lip between his teeth and tugs gently, making us both laugh.\n\nBut I get distracted. My grip on his hands unknowingly slackens, and he manages to grab power much like I did earlier. He gets his arms around me and quickly rolls us over, putting me on my back with a grin. I grunt once I land, and I'm sure my face goes from \"I'm ready to keep wrestling\" to \"Oh fuck yes, fuck me, Zane\" within the second he starts pushing his hips into me. Right away, he's rutting into me good and proper. I feel a smile form on my face as my whole body jolts with each of his calculated thrusts, my moans punctured whenever his hips meet my ass. Over and over, our skin slaps loudly, his cock sounding so wet and vulgar and sexy as it slides back and forth in me.\n\nThen: \"Open your mouth.\"\n\nHe says it in such a demanding voice that my brain knows I have no choice. And he's fucking me so good right now that there's nothing I wouldn't do right now. I'd go into extremely kinky territory right now if it meant this would never end. I open my mouth obediently and automatically, and Zane spits down onto my tongue. Before I can even swallow, he leans down and kisses me hard and deep, his tongue coming to recollect.\n\nAs we kiss, Zane keeps expertly working his hips, but he constantly switches his tempo. Sometimes he'll jack-rabbit me before transitioning to slow, smooth, longer strides. Sometimes he'll just bury himself as deep as he can get and grind up and down. Everything he's doing is putting me on cloud nine. Fuck, I feel most alive when I'm bottoming for Zane. I actually get mad at myself sometimes for having ignored my own sexual potential. For years, I wrote assplay off as an option when I could have been cumming harder than I've ever gotten off in my whole life. Then again, I'm glad Zane was the one who showed me. It makes it all so much more special.\n\n\"I'm gonna cum, Khalid,\" he grunts.\n\nI just nod, panting, keeping him close and wrapping my legs around his waist. I watch his face as he speeds up his force and his thrusts, clenching his teeth before finally, with one more good thrust, he starts filling me up. He gasps out, his hips twitching with smaller, sharper thrusts as he cums -- and midway through his orgasm, his lips find mine again. He just moans against my mouth, sending vibrations through my lips during the kiss.\n\n\"Mmm, I fucking love you,\" he mutters, pushing even deeper than I thought he could go. My toes curl as my back arches and my fingers dig into Zane's back, and he groans into the nape of my neck as he finishes.\n\nThen, he starts unclenching his muscles, sighing with relief against my shoulder. I laugh softly, feeling warmer now that he's gifted me his load, and I sense him smiling as I stroke his hair. He kisses his way over to my lips, being gentle and sweet. Then, he kisses my chin. Then my collarbone. After he slowly pulls out of me, he starts kissing down my stomach, and I hold my cock up in anticipation for attention.\n\nHe just kisses down my shaft, though, going right to my balls. He gives them each a kiss before going even lower, his tongue darting across my taint. Then, after lifting my legs, I feel his tongue start lapping at my hole, and I cry out. I'm so sensitive from the fuck that I try to push his face away, digging my palm into his forehead.\n\nHe just chuckles. \"Too sensitive?\" he asks.\n\n\"Very,\" I say, laughing a bit.\n\nInstead, he brings his fingers to my hole and lightly strokes in circles, making me moan again. Fuck, I'm almost twitching from how that feels. \"I can tell,\" he says with a grin before easing a finger into me.\n\n\"Fuck!\" I grunt, my body trying to squirm away.\n\nHe just chuckles and lets me rest, pulling his finger out and instead wrapping a hand around my cock. He gives me a few lazy strokes before saying, \"How you wanna cum, babe?\"\n\nI smile a little before tapping his ass with my heel. \"I want my revenge,\" I say playfully.\n\nHe grins before turning around to get on his hands and forearms, showing off that glorious ass of his. \"All yours,\" he says, deepening the arch in his back enough so that his cheeks naturally part and his lightly furry hole is exposed to me. His cock hangs so heavily between his legs too, lightly swinging back and forth. Licking my lips, I sit up and then bend over, burying my face in. I don't use my hands at all. Just my tongue. As I lap at his hole, I'm treated to the sweet sounds of his moans. He just rests his forehead on the bed, hands behind his head as I french kiss his hole. Zane's pretty experienced as well, so in no time, I'm able to ease my tongue into him. That gets him moaning real good. I switch between lapping, kissing, sucking, tonguing, and spitting down on his hole, until it's practically winking at me whenever I pull away.\n\nI do this for a while, only breaking a few times to come up for air. But soon, Zane is nice and wet and soft for me, and I position myself behind him. I spit down on my cock, get it nice and slick, and then gently ease forward. Zane deepens the arch in his back, which allows me to watch his hole wrap around the head of my cock as I push in. I groan softly, my cock already hypersensitive from all of the play today, and this erotic visual isn't helping me keep my orgasm at bay. I just focus, driving my cock slowly home until my hips are nestled up against my boyfriend. Then, grabbing his hips, I start to fuck him.\n\nI start off slow and then very gradually increase the pace. I can tell Zane knows where I'm going with this, because he sits up on his hands now, looking back towards me as I get closer and closer to really plowing him. I even lean back a bit, making sure my hips are doing the brunt work as I drive my cock fully in. Zane loves the way I work a stride. Even when at a good speed, I can manage to pull out to half my cockhead without fully pulling out -- just enough to tease him before really driving it back down. He loves those long thrusts. That gets him singing.\n\nI slide my hands up to his shoulders and grip them as I rut into him. \"Fuuuck yeah, bro,\" he moans. \"Wear it out.\"\n\nI just grin, moving one hand to the top of his head and tugging on his hair. He groans even louder now as he bends his head back a little, letting me really use him. Fuck, we need to explore more. I'm enjoying myself too much. Zane has all these little turn ons that it'd be fun to see which ones really get me going, too... Maybe restraints could be fun. And we both agree on more public sex. But what about stuff neither of us have done? To think, there's so much out there for us to try, and we get to do it together. No judgments. All trust. That's what love's about, isn't it?",
        "I let go of his hair and then lean over to bite his shoulder, grinding deep in him. He quickly turns his head, and we're able to have our lips meet. I hold his face so that I can keep our lips locked in a tongue- and spit-filled kiss as I draw closer and closer to my orgasm. Fuck, I love you, Zane. I love you so fucking much.\n\nThe kiss breaks when I can no longer hold back my moans. I pant and groan, speeding my thrusts up as fast as I can before finally, I start to unload. \"That's it, baby,\" Zane says in a soft voice, moving his hips in a spiral grind, doing his part to really milk the cum out of me. I rest my forehead on his back as my cock pumps cum over and over and over until finally, it's spent.\n\nIt takes me a while to really catch my breath. I exerted the hell out of myself. Zane lowers himself to his stomach and lets me just collapse on top of him. He even reaches back to stroke my hair gently, and I kiss the back of his neck in appreciation. \"Why is this so comfortable?\" I ask.\n\nHe chuckles. \"Just rest for a bit,\" he says before sighing happily. \"That was, without a doubt, some of the hottest sex I've ever had.\"\n\nI laugh tiredly, kissing his neck again. \"Well, we were both in really good moods beforehand.\"\n\n\"Yeah, and now I'm in a REALLY good mood,\" he says, still stroking my hair. \"You're the best.\"\n\n\"I love you,\" I murmur.\n\n\"Mmm,\" he hums. \"Love you too.\" We both sigh together in relief. Now that we're sexually satisfied, I just want to sleep -- and Zane doesn't tell me to shift off of him, so I rest cozily on top of my favorite guy in the world, happy to be here with him in this moment, happy to know that there's so much to look forward to.\n\n~ The End ~"
    ],
    "authorname": "ruetheben",
    "tags": [
        "gay romance",
        "romance",
        "coming out",
        "bromance",
        "young",
        "love",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/arabian-nights-ch-06-final"
}