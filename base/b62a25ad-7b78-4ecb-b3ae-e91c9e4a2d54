{
    "title": "Ian and Wes Pt. 04",
    "pages": [
        "A note to readers: I want to thank everyone who's commented on the story so far! It means a lot to me to have your support. I admit I ended Chapter 3 very abruptly. I wasn't sure I'd be able to continue on with Ian and Wes's story, so I figured I should take advantage of the opportunity for a clean break. Turns out I'm not done with these two after all. I can't make any promises on frequency of uploads, but here's at least one more.\n\n***\n\nI recognized him the second I saw him.\n\nIan McNair.\n\nIt was pretty obvious he didn't recognize me though. Hah, can't even blame him for that one. I swear it took about two weeks for the guys on the football team to believe I was the same skinny kid with the wild black hair from freshman year.\n\nYeah, it's me.\n\nWes Houston.\n\nYes, I started working out. Yes, I upped my protein intake. Yes, your mom probably tried to slip me her number.\n\nI mean I could try to be humble about it but I don't really see the point.\n\nFor years, I worked hard to transform myself. Really fucking hard.\n\nAnd Really Fucking Hard is exactly what I was when I saw Ian after the years away.\n\nSee, Ian's a pretty boy with just a little bit of an edge. He's lean and compact, definitely not soft. He's built enough that you know he can handle himself athletically. And like he can take a good hard pounding without snapping in half, too.\n\nHe's one of the few people I didn't forget about after moving away years ago. I knew of him coming up through middle school, but mostly I remember him from freshman English class. He was really smart, always raising his hand. The tips of his hair were bleached almost white and he used way too much hair gel. He wore a white puka shell necklace.\n\n15-year-old me fucking loved it.\n\nHe was the first boy to make my cock stir. I wasn't even sure what was going on with me at the time, but he did something for me, alright.\n\nI remember one day that year I dropped my books all over the middle of the hallway. Everyone else just stepped over me while I tried to pick my stuff up. Acting like they could see right through me.\n\nNot Ian.\n\nIan stopped and helped me. He crouched down and handed me a few of my notebooks and smiled at me with those giant, clear blue eyes. They were the icy in color but somehow showed me nothing but absolute warmth. I hope I said \"thank you\" but honestly I can't remember much other than those eyes.\n\nAnd those were the eyes that were desperately avoiding mine as I stood before him at the store, just about three full years later.\n\nAw, he's nervous.\n\nIt was a serious challenge to keep myself in check while talking to Ian and his mom. That lady is a real trip. He looks just like her. Her eyes might actually be bluer than his.\n\nSpeaking of, at least I got him to look at me.\n\nHe definitely didn't recognize me.\n\nThe look on his face was priceless when I dropped his name. I walked away giving him something to think about.\n\nI'm sure he'd connect the dots soon enough.\n\nTruthfully, moving away was probably the best thing that could've happened to me. Sure, I missed out on some things, but I'm not gonna lie, it was pretty cool to transform myself into someone new every year. Little by little, I left the insecurity of my skinny years behind and created a new, better version of myself. The natural air of mystery that comes with being the new kid helped me build my confidence relatively quickly.\n\nThere's many things I learned along the way but probably the biggest one\u2014confidence is currency.\n\nI can't deny it, I liked the power. Especially as my muscles started to really grow and show, the respect just followed automatically. It was kind of absurd at first, but people starting treating me really differently. I got passed more phone numbers than I could event count.\n\nSeriously, one time I was with my mom at the fucking drug store and this 20-something pharmacy tech passed me her digits. I was 16 at the time.\n\nI didn't call all of them. I called a lot of them, but not all of them.\n\nI don't discriminate. After I had my homoerotic awakening thanks to one Ian McNair, my horizons broadened dramatically.\n\nIt helped that my parents have always worked so much. Having an empty house really helped me grow my sexual prowess.\n\nI've had my fair share of both men and women. Even a couple genderfluid, too\u2014now those ones are fun. There's something about a person that unapologetically owns who they are. I learned a lot from each of my bed partners.\n\nI never bottom though. Don't get me wrong, I'm well aware that the prostate is a real and powerful thing. I don't mind some friendly fingers, but I don't take dick. I don't think it's repulsive or anything, but I just know what I like.\n\nI like being in control. I like taking.\n\nBut when I looked in Ian's deep blue eyes that day in the store, I was instantly transported back. Back to being an insecure 15-year-old. Back to feeling invisible with my books sprawled across the floor and only Ian to help me.\n\nIf I'm honest, that feeling scared me.\n\nI worked too damn hard to build my current persona for it to all come crashing down over one pretty boy.\n\nI tried to brush it off, tried to get him out from under my skin.\n\nIt didn't help that he was fucking mesmerizing. He wore these tight shirts every day showing off his tight body. And those tight jeans showed off his tight ass.\n\nI swear, he had to know what he was doing.\n\nHe had to know that watching him run hard at soccer practice made me think about how I wanted to make him out of breath. I wanted to be the one to make him sweat. I wanted to be the one to run my fingers through his blond hair.\n\nIt got even worse for me when I asked around about him and heard that he was almost certainly gay.\n\nNot that that necessarily mattered... I've been blown by more than one \"straight\" boy before.\n\nBut I didn't just want a blowjob from Ian. I mean, yeah, I definitely wouldn't turn it down. But the way my stomach tied in knots just thinking about him... this was something different.\n\nI didn't trust myself to stay cool around him. Every time I thought I could go from my usual playbook for getting a date, Ian's eyes would meet mine and I'd be toast.\n\nSpeechless.\n\nFuck, I gotta get myself together.\n\nThis isn't me.\n\nI couldn't even get with anyone else\u2014I had it that bad for Ian. I politely declined every number offered to me since the school year started.\n\nSome girl would start chatting me up, clearly expressing interest, and I'd wish her arms would be a little more built like his. Jaw squared like his. Hair short and wavy like his.\n\nBulge in the pants like his.\n\nAss like his.\n\nIt did make me feel better that I clearly got Ian flustered too.\n\nMisery loves company.\n\nLuckily, Mrs. Smith in AP Bio put us both out of our misery and paired us up for a project. Honestly, I couldn't have planned it better myself.\n\nDamn, I could watch this kid blush all day.\n\nThe more time I spent with Ian, I realized that he really didn't know how perfect he is. It almost made me mad. Or maybe frustrated is a better way to put it. Like, I spent YEARS trying to figure out who I want to be and how I want to fit into the world, and here he is, effortlessly beautiful.\n\nYeah, I said it\u2014he's beautiful.\n\nHis blond hair... I don't even know what it is, but I can't get enough of his hair. No more frosted tips from freshman year. He styles it these days in a much more mature way... it really complements his features. It always looks so good, never a hair out of place. He must spend a lot of time on it.\n\nMy fingers itch to rake through it and mess it up.\n\nI want him to look like how he makes me feel\u2014unraveled.\n\nAnd somehow I got my opportunity.\n\nOof, this kid tested my control. He was hard enough to handle when he wasn't even trying. But at some point when he was at my house working on our cell model project, I could see the wheels turning. His eyes are so expressive, it's not even really fair. But at some point that day, he saw my weakness for him. And goddammit did he capitalize on it. He was taunting me. Testing me.\n\nEventually I couldn't take it anymore and I pounced on him in my room. The sight of his perfectly sculpted body spread out in my room, his eyes showing a window into his lust... He was ready for me, alright. And he wanted me to take it.\n\nEven better.\n\nI reached for him and didn't let go. I pulled his silky hair, I kissed every inch of him within my reach. I let loose every desire that had grown in me from the weeks of watching him from afar.\n\nIt must've been just as overwhelming a sensation for him. He came in his pants from just our making out and touching. With anyone else, that might've been a buzzkill. But with Ian, it made me even more riled up. This guy was so hot for me that he blew a load from minimal touching.\n\nIt was a huge fucking ego boost.\n\nImagine what it'd be like once I really had the chance to make him feel good.\n\nHe attacked my dick with enthusiasm. It was like he'd been stuck in the desert and my cock offered his only opportunity for hydration.\n\nWatching those pink lips open up around my cock was otherworldly. I was ready to bust pretty much the moment I felt his tongue on my shaft.\n\nFuck, I'm never like this.\n\nHow does he get me like this?\n\nHe was perfectly submissive for me. Those big blue eyes showed a mix of innocence and naughtiness. He was practically begging me to corrupt him.\n\nWhat the hell kind of man would I be if I didn't honor his request?\n\nI could tell he had limited experience (if any) in the sexual department, but honestly that made it hotter. I'm not usually into virgins\u2014it can get tedious to have to walk someone through the process of their first time. I rarely felt satisfied after a night with a virgin, even if I came. Mostly I just left feeling frustrated from holding back so much.\n\nBut with Ian, I didn't resent his virginity at all. If anything, I was proud of it. I was the lucky prick to get to have him in my bedroom. He didn't do this for just anyone. Just me.\n\nThat thought, plus the sight of his cheeks hollowed around my dick, made me shoot a big load down his throat.\n\nHe rested his head on my leg, letting me catch my breath and I realized that I didn't want him to be with anyone else. The thought of this possibly being just a casual hookup for him....\n\nIt pissed me off, but more than that, it scared me.\n\nHow many other times had I had someone on their knees in front of me and then just left, probably moving on to someone else quickly? I never really even thought about it. I was wrapped up in the fun-for-the-moment.\n\nIan's different. He's gentle. He's kind. He's absolutely hilarious. He's got that quiet, calm thing down. People at school think he's laid-back and completely unphased by most everything.\n\nSo I love riling him up. There's nothing better than seeing him get flustered and watching his cheeks get pink to match those sweet lips. And knowing that I'm the one that can get the unshakeable Ian McNair on edge.\n\nHe's special.\n\nFuck.\n\nYeah, I've gone soft. He's got me wrapped around his finger.\n\nAll he has to do is give me that look. When those deep blue eyes are staring at me, INTO me, the real me. Behind all the bullshit personas I've built over the years.\n\nI wanna be the man he thinks I am.\n\nMy parents noticed a change in me immediately after Ian and I got together\u2014that just tells you how obvious it was. I realize how lucky I am having such chill parents, but I was still very relieved by their pleasant reaction.\n\n\"So what're you up to lately, Lee?\" My dad asked one night as he came into my room and sat on my bed. He called me by the nickname my mom and he had created when I decided to start going by \"Wes\" instead of \"Wesley.\" My dad joked that I'd be neglecting the wrong syllable.\n\nAnd that dad joke never died.\n\nHe and my mom both worked a ton, well over full-time for each of them, but he always made an effort to check in with me. We were pretty close, all things considered.\n\nThe circles under his brown eyes were a little bit darker. The lines on the sides of his mouth were a little more obvious. I know all the moving in the last few years had worn him down. But he had a dream to build a great tech company, and he would do anything and everything in his power to make that happen and to change the world.\n\nI respected the hell out of that.\n\nMy mom was certainly no slouch either\u2014she was a kick ass nurse. And they're always hiring nurses no matter what city you live in, so she supported her partner through every move, never complaining. And my mom never seemed to resent him. Or didn't show it, anyway. They were partners in everything.\n\nI'd never say it to either one of them, but they set a hell of an example. I wanted something like that. Unshakeable support, trust, and love. But so far in my young life, I was realizing that ride-or-die people like that are hard to find.\n\n\"I met someone. It's pretty serious, actually,\" I said matter-of-factly. Over the years my parents had let my independence grow. We didn't have the typical parent-child relationship. They trusted, and expected, me to be my own man. And as long as I followed through on my responsibilities, they let me have a long lead. They'd loosened the reins even more (if it was possible) once I turned 18 that summer.\n\nMy dad's dark eyebrows raised, \"Well ok then! Let's hear it. Who's the lucky someone?\" I caught the lack of gender specificity. They were pretty progressive to begin with, but moving around the San Francisco bay area had really opened their minds to the LGBT+ scene. Plus, for the last few years, my dad had been working around people much closer to my age than his own.\n\n\"His name is Ian. Ian McNair. I knew him from before we left here. He's... He's great, Dad. You're gonna love him.\" I couldn't help the smile break out across my lips.\n\nHe smiled back at me, a bit of a glint in his eye, \"Lee, if he makes you look like that, I already do love him.\"\n\nWe chatted a bit more about football practice and how classes were going. My mom eventually popped her head in and my dad spread the good news about my budding romance.\n\n\"McNair.... Oh, what's her name.... Sandra! Sandra McNair's boy?\" My mom asked. I shrugged, unsure of his mom's name. \"Yeah, she works at the hospital. She's on a different floor, but I've met her a few times. She's a hoot!\"\n\nI chuckled, remembering Ian's embarrassment over her when I first saw them at the department store. \"Yeah, that's what I hear.\"\n\nMy mom's eyes softened, \"It's amazing how people can keep their spirit after going through so much.\" I must've looked confused. She continued, \"Her husband passed while the kids were still young. Car accident, I think I heard. I can't even imagine...\"\n\nI blinked, trying to take in what she was saying. I never heard about Ian's dad. Ian hadn't talked about him and I didn't think to ask. I tried to picture myself in his shoes. It's hard enough learning how to become a man in society... I couldn't imagine how much worse it'd be without a father.\n\nMy admiration for him grew.\n\nSeeing him at school after we'd started hanging out was something else. I felt like an addict that had experienced his first hit. Finally got a glimpse of what I'd been missing before.\n\nAnd I wanted more.\n\nIt was hard for me to stay away from him.\n\nSo I didn't.\n\nI decided to branch out a little and sit with his friends for lunch. They were cool enough guys. They clearly all knew what was going on with Ian and me. We were all just getting to know each other when Ian finally came up to us.\n\nThe look on his face told me that it was a great idea to NOT tell him I had been planning to sit with them. He looked like he'd seen a ghost. Eventually he calmed down, but I realized that getting Ian out of his comfort zone wouldn't be easy. He'd need pushed every step of the way.\n\nLuckily I'm a pretty strong guy\u2014and a pretty good pusher.\n\nWe were alone and I was asking him how he was feeling about me hanging with his friends when I saw it\u2014the look of absolute pity in his bright blue eyes.\n\nPart of me wanted to laugh, but the other half was pissed as hell. Here's this kid who's known the unbearable pain of losing a father, a kid who's spent his teen years with no one to get intimate with\u2014physically or emotionally.\n\nAnd he's feeling bad for me?\n\nMe?!\n\nThe fucking heart on this guy.\n\nSo I rolled up on him hard and gave him the biggest hickey of both of our lives.\n\nI wanted everyone in that entire school to know he's mine. Ian McNair, officially taken off the market. I don't give a shit if I had any competition or not, he's way too good for them all. And anyone who couldn't see that was either blind, dumb, or both.\n\nI finally got to taste his cum in the locker room showers later that afternoon.\n\nI'm still trying to think of how to repay Jared, Kevin, and Steve for their help with that one.\n\nIt sounds corny as hell, but every new experience with Ian really felt like it was my first time all over again. Or maybe not the first time, but more like the past was all a big practice round and now I was playing in the big leagues.\n\nLike, that first time having sex with Ian in the hotel room after Homecoming... Part of me really wishes that was my real first time. But the better, smarter part of me realizes that everything happens for a reason.\n\nThat whole night had been awesome. Dancing with my boyfriend at a high school dance was indescribable. We were unapologetically Out and having a blast. We were grinding to some pretty raunchy hip hop songs right next to the Homecoming King and Queen at one point. I don't know what came over me, but I got this rush through me like that whole event was super important. It felt like we owed it to every gay kid out there who wasn't included in the classic high school traditions to live up that night as best as we could. Like it was our job to carry the torch for future generations.\n\nLater on, when I explained what that moment meant to me, Ian told me it was a real convenient way to rationalize rubbing my dick on his ass in public.\n\nThat is also true.\n\nBut that night after the dance, the look on Ian's face as I slid my cock deep into his ass for the very first time.... The look of absolute trust in those baby blue eyes. The absolute pleasure that racked his body as he came with a scream. Those are things that I'll never forget.\n\nAll those meaningless partners before-- if nothing else, at least I acquired some skills to make my boyfriend feel good.\n\nBut Ian... he didn't even need the practice. The guy has a natural talent for taking dick. Swear to god, it's the absolute best sex of my life.\n\nAnd it just got better from there.\n\nSomehow he kept finding ways to surprise me.\n\nTowards the end of the fall semester I remember seeing Ian as I walked up to school. He was standing with our group as usual, but something electric was in the air. I couldn't say what, but he had a certain look about him. I met his eye as I approached and he ran his tongue over that juicy bottom lip. It was a warm enough day that he had on a gray t-shirt that hugged his lean and chiseled body and black jeans that showed off that flawless ass that haunted my dreams. His hair had grown the slightest bit longer these days and he used a little less product so it flopped over onto his forehead.\n\nMy fingers itched to touch it.\n\nThe look in his eye told me he knew exactly what I was thinking.\n\nHe looked like he was trying to get me in trouble.\n\nI reached the group and slid my hand into one of Ian's back pockets, feeling his supple ass. I knew he'd be wanting me to squeeze it (more likely, slap it) but I kept perfectly still.\n\nHe turned into the sexiest little brat when he didn't get his way.\n\n\"Hello there,\" he said softly, grazing his cheek across my shoulder.\n\n\"Good morning,\" I said quietly. I kissed him, heat building within me. His eyes were on fire when I pulled away. I leaned close to his ear, \"Something's gotten into you,\" I licked the edge of his ear, \"I like it,\" I whispered.",
        "He giggled and turned to look at me, \"Interesting choice of words....\"\n\nI just stared at him, trying to understand the meaning of his words. I knew there was something I was missing here, but just couldn't put my finger on it. \"Okay....\" My eyebrows scrunched together and I scratched my chin, determined to figure out his little secret.\n\nHe slipped his hands into my front pockets. I quickly lost my train of thought as I felt his fingertips inch closer to my groin.\n\nJust another inch or two towards center....\n\nThe bell rang. \"See you in Bio!\" He called out as he rushed away. I noticed he seemed to have a little extra pep in his step. My jeans felt heavier or tighter somehow. Must be the tent forming at my crotch from his little teasing game.\n\nHe was gonna drive me fucking crazy.\n\nI was halfway through my European History class when I felt my phone vibrate in my back pocket.\n\nIan: Did you solve the mystery yet?\n\nMe: No. You're killing me here.\n\nIan: LOL. Seriously? So much for situational awareness...\n\nI cursed him under my breath.\n\nIan: I was gonna spell it out for you but I've decided I wanna see your face when you get it.\n\nI couldn't even respond at that point. The curiosity was eating away at me, but I was at a complete loss.\n\nI beat him to AP Bio as usual. I sat in the seat next to his, a spot I'd occupied since we first officially got together near the beginning of the term. He walked in slowly, a self-satisfied smirk resting on his lips.\n\nI couldn't help but smile at the mischief in his eyes. I liked him like this. I reached over to pull out the chair to allow him to sit next to me.\n\nI turned to him, eyebrow raised. His cheeks flushed a cute pink.\n\nMrs. Smith started class before I had a chance to say anything. I sighed and turned my attention to the front of the room.\n\nTowards the end of class, I felt something nudge my elbow. Looking over, I saw Ian subtly passing me a handwritten note.\n\nCheck your pocket.\n\nI looked back at him confused and reached for my back pocket. Empty.\n\nI tried the other. Just my phone.\n\nIan rolled those beautiful eyes in exasperation and nodded his head towards my lap.\n\nFront pockets. Oh. Duh.\n\nI stealthily reached my left hand to my left front pocket and froze when I felt something. There was a piece of paper and something else. Something firm but soft and maybe the size of a roll of quarters but bigger at the end. Honestly, I have no idea how he fucking Houdini'd that in there without me noticing.\n\nI pulled the paper slowly from my pocket to avoid making noise.\n\nIt might be small, but last night it managed to hit the right spot. Kinda hoping something bigger and more real might be able to show me what I've been missing.... PS don't worry its clean.\n\nNo way. No fucking way.\n\nI reached into my pocket again. My eyes were looking at the front of the room but I wasn't seeing a goddamn thing. I rolled the somewhat cylindrical, somewhat curvy piece of silicone in my hand, still concealed in my jeans.\n\nI'd been walking around all morning with Ian's butt plug in my pocket.\n\nA plug that had made him cum less than 24 hours ago.\n\nMy brain exploded.\n\nOh fuck.\n\nI started to sweat. Is it hot in here?\n\nI'm sure my eyes were wild as I looked back to him. I mouthed to him, \"How?!\"\n\nHe smirked at me and fluttered his dark blond eyelashes mock-innocently.\n\nYeah right, this boy was definitely NOT innocent.\n\nIt took everything I had not to drag his ass out of there right in the middle of class. Once I noticed it (yeah, I know, I have no fucking clue how I didn't notice it before), it was all I could think about. I pictured his tight ass swallowing that plug. I imagined the bump of it brushing against his prostate.\n\nMy fingers itched to open him up manually. To show him that the silicone couldn't hold a candle to yours truly.\n\nLet me say now that I love that he's open to toys. I was pleasantly surprised to know he has quite a few that he's acquired over the years (thank god for online shopping!). But no toy-- NO toy-- could ever take the place of a real, hard dick.\n\nI'd take the opportunity to remind him of that simple fact every damn day if I have to.\n\nAnd you'd never once hear me complain.\n\nThe bell rang and I grabbed Ian's arm rougher than I intended.\n\n\"Hey where's the fire!?\" I heard him shout at me.\n\nI glared at him hotly and didn't respond.\n\nHis cheeks flushed pink and his eyes got wide as he followed me out of the classroom, through the hall, and over to my Jeep near the back of the student parking lot. Lunch period is barely 30 minutes so everyone stays on campus for it. There was no one else in sight. I knew that no one else would even be in the parking lot until closer to the end of the school day.\n\nI opened the back door of the Jeep and practically shoved him onto the seat. I pounced into the vehicle and slammed the door behind me. He laid down on the backseat, staring up at me with a mixture of lust, excitement, and just a hint of fear.\n\nPerfect.\n\nMy eyes tracked down his body, starting at his now-disheveled blond hair to his handsome face to his graceful but built body. Now that soccer was over and swimming season was picking up, his arms and back were getting much more definition. His upper body formed that perfect \"V\" that looks so hot on a guy.\n\nHis dick was also visibly hardening in his jeans. I was savoring every second of the view.\n\nDamn he was sexy.\n\nI snapped my eyes back up to meet his. \"Tell me, Ian. How big is my dick?\"\n\nHe blinked, clearly not expecting the question. He cleared his throat, \"Uh... um... I... Eig-Eight inches? I think?\"\n\nI smiled condescendingly, \"Mm... And... thick too, yeah?\" I swiped a lock of hair from his forehead, knowing exactly what that would do to him.\n\nHis blush deepened, \"Yeah. Yeah, it's real thick...\" He closed his eyes as I continued to run my fingers through his hair.\n\n\"Ah, ah. Eyes on me.\" I scolded lightly as I moved my hand to gently pat the side of his face. His eyes opened quickly and stared into mine.\n\nI shifted his legs so I was kneeling between his spread thighs, \"And this cock,\" I thrusted sharply into his clothed pelvis. He gasped loudly. I continued on, \"This cock serves you well, doesn't it?\"\n\n\"Oh fuck yeah, Wes! Fuck. Yes, your cock is so good to me!\"\n\nI love it when the dirty talk starts flowing from those sweet, innocent-looking lips.\n\n\"So tell me why you think this LITTLE, sad, tiny excuse for a toy,\" I pulled the silicone plug from my pocket and shoved it next to his face, making my point about its size. \"How could you EVER think this PUNY thing could EVER replace my cock in your hole?\" I thrust against hips once again, my erection clearing straining behind the fabric between us.\n\nIan bit his lip and the fire behind his eyes practically made them glow. \"It can't! I'm just... ah, I'm just so empty without your dick to fill me up!\"\n\nI unbuckled his pants quickly and pulled his jeans roughly down to his knees. I took his delicious dick into my mouth the moment it was free. He was dripping wet.\n\nI watched his face contort with pleasure as I licked up and down his shaft. His precum was so sweet. I'm not sure what the hell he eats but I might have to start taking notes for myself. I kept my eyes on his blissed-out face as I reached discreetly into the center console between the front seats of the Jeep. Inside, my fingers found what I was looking for.\n\nA travel-sized bottle of lube.\n\nYou know, for emergencies.\n\nOne look at Ian in his sex-crazed state and yeah, this was definitely an emergency.\n\nLuckily Ian was too blissed-out to notice what I was up to. I kept my mouth suctioned on his rock hard prick and squeezed some of the lube onto one of my fingers. I reached down to his asshole and began working the muscle open. It was kind of incredible how quickly he was catching on to relaxing his sphincter. I reached down again and applied more of the lube, getting my boy nice and wet.\n\n\"Fuck baby, I'm so close! Come on, fuck me please before I bust in your mouth! Please!\" He begged hoarsely.\n\nI increased the speed of my mouth and lashed the spot under the tip of his head with my tongue. I could tell he was just on the edge.\n\n\"Wes! Baby! Please! Fuck me!\"\n\nI slammed the now very well-lubricated plug deep into his tight ass.\n\nHe howled loudly as the cum burst from his cockhead. I swallowed his load and kept my mouth vacuumed on his dick, letting him ride the wave of his orgasm. I kept my position until his hips stopped bucking. After a couple extra courtesy licks to the tip of his cock, I let his deflating meat fall from my lips.\n\nHe shivered.\n\nI tapped lightly once, twice, at the base of the butt plug now placed securely between his luscious ass cheeks.\n\nHe jumped. So did his dick.\n\nI pulled his jeans and boxers back up over his hips while he caught his breath. He caught my eye as I zipped and buttoned him back into his clothes.\n\n\"You know I'm not gonna have a chance to take this out until the end of the day,\" he said solemnly.\n\nI winked at him, \"Call it divine inspiration.\"\n\nHe laughed heartily then sat up, reaching for my crotch.\n\nI quickly checked my watch and groaned, \"You know I hate to say this, but I think we're out of time for now.\" I knew he had a calculus test coming up that afternoon. I couldn't risk him being late for that.\n\nBut I'm also not above making him take the test with a plug shoved in his ass.\n\nThey say it's a line thin between good and evil.\n\nHe made a disappointed sound and looked over at me. I swear he was actually giving me puppy dog eyes, trying to convince me to let him suck my cock.\n\nI've said it before and I know I'll say it a thousand times\u2014I'm the luckiest son-of-a-bitch in the world.\n\nI kissed him hard and reached behind me to open the door. I had to get us moving or we'd never leave that backseat. \"Don't worry, I'm sure you can think of a way to repay me,\" I said softly as I helped him dismount the Jeep.\n\nHis eyelids fluttered as he stepped down onto the pavement. The plug must've adjusted slightly at the movement.\n\nI chuckled, \"Oh c'mon, McNair. You can handle that teeny tiny thing, can't you?\" I challenged as he walked back towards the school. Ian's steps were a bit slower, a bit more careful.\n\n\"Oh I can handle it alright,\" Ian said tightly. \"It's just the constant reminder of what I'd rather have in its place...\" He let out a soft sigh before waiving to our friend Kevin who was now coming into view.\n\nIan turned to me once again and lowered his voice as he placed his lips against my ear, \"Or have you forgotten how hungry my tight little ass is for your big cock?\" He ran his tongue quickly along the outside edge of my ear.\n\nAnd just like that, my blue balls were raging.\n\nWell that fucking backfired.\n\nI stopped dead in my tracks. The blood was flowing straight to my dick and I wasn't sure I'd be able to take another step. Ian jogged (or as close to a jog as he could manage with the plug tucked inside him) up to Kevin. Before going off to his next class he turned back to me with a smirk and ran a graceful hand through his silky blond hair, tugging visibly but subtly at the roots, reminding me of all the times it had been my hand pulling his hair in fits of ecstasy.\n\nA fresh drop of precum leaked from my dick. I was aching from all the teasing.\n\nI replayed the look of ecstasy on his face from the backseat as I worked myself quietly to orgasm in a bathroom stall.\n\nIan McNair was absolutely going to be the death of me.\n\n***\n\nA few weeks later, the holidays were coming up and I was trying to think of a good gift for Ian. This was a very new problem for me. I'm not sure I'd ever made it past the 5<sup>th</sup> date before... maybe not even the 4<sup>th</sup>...\n\nHe told me he didn't need anything and that whatever I wanted to get him would be fine. Yeah, not fucking helpful.\n\nEverything that came to mind was either cheesy or lame, or both.\n\nI immediately knew what one of my gifts to him would be. It certainly couldn't be the only gift (that would send the wrong message), but I knew I had to do it. It was honestly something I should've done for him right from the start. I was mentally kicking my own ass for that one.\n\nBut the main gift... now that was the hard part. I considered something sports-related, but that felt too easy. Like that's the type of gift your distant aunt gets you because that's the only thing about you that she can remember.\n\nI thought about maybe a trip somewhere, but that was a bit out of my price range. My parents would have gladly loaned me the money, but it was important to me to get Ian something without any help.\n\nIt was just a few days before winter break and I still hadn't found anything for Ian. I was mulling over a few options as I walked into the school's weight room, joining near the end of the swim team's conditioning session.\n\nNear the beginning of the season I'd asked the swim coach if it was ok for me to crash the occasional weight lighting session. He didn't mind and said I just had to promise to step in if I saw dangerously bad form from the team since I clearly had experience lifting heavy. Easy enough for me. The football team hadn't made the playoffs so I didn't have a mandatory workout schedule, but it was important to me to keep up my physique. And it was an added bonus that it meant I had extra time with Ian.\n\nHe was so busy that it was getting harder and harder for us to make time to see each other. His course load was truly insane this year, let alone the sports seasons. Ian still didn't know what he wanted to do for college, so he told me he wanted to perform well enough to keep as many options open as possible.\n\nI respected that, and I understood that, but it made it damn tough for us to find time to be alone.\n\nYeah, it was easy for me to say since I had already submitted an early decision application to a relatively prestigious private university with a kick-ass history program. I was still waiting to hear back at that point, but I had my back-up applications close to finished just in case my first choice didn't pan out. It certainly helped that I knew exactly what I wanted to study\u2014a double major in history and education. Applying early decision was pretty much a no-brainer.\n\nIan wasn't so lucky. His curse was being really good at a lot of different things\u2014but he wasn't great at any one thing in particular. I wished there was something I could do to help him make the choice, but he was determined to give his all in each subject then just see what he did best at or what he liked the most. It was a solid, methodical plan. But it was time-consuming as hell for him.\n\nI don't want to sound like an asshole, but up to this point, I'd been fucking on a pretty regular basis for the last couple years. With Ian's current schedule, it had been a while since our last encounter. I understand that there are more important things in life, but I gotta be honest, I wasn't particularly pleased with how things were drying up in that department. A guy's got needs.\n\nAnd the worst part was, I knew Ian was feeling those needs just as bad as I was. Phone sex and dick pics can only get you so far.\n\nWe were both increasingly sexually frustrated.\n\nSo I waltzed into the weight room that day with a bit of a chip on my shoulder, but overall relieved that I'd get to spend time with my boyfriend.\n\nIan was over at the squat rack spotting for one of his teammates, Brian. I didn't know Brian very well since Ian didn't hang out with him outside of swim team, but I got an odd vibe from him. He had a mousey-looking face and always seemed tense. Like the first time Ian introduced me to him, Brian acted like a damn caged squirrel or something. The guy wouldn't make eye contact with me and basically ran away after a quick exchange.\n\nIan didn't notice anything off, so I brushed him off as just a weird fucking dude. I'd be lying if I said I never noticed people acting unusually nervous around me.\n\nOnce Brian finished his set and re-racked the weight, Ian looked over and caught my eye as I started warming up near the bench press. He waved with a smile and I gotta be honest, it made my whole day just a little bit brighter.\n\nYeah, yeah, I'm a big softy for the guy.\n\nI watched him as he moved under the bar to begin his set at the squat rack. The globes of his ass strained the material of his shorts as he sent his hips back on the descent of the squat.\n\nHis shorts left little to the imagination. Damn, even if I didn't know what it felt like to sink my cock between his cheeks, I'd still be drooling from the way his ass looked.\n\nIt was firm and solid with just the right amount of jiggle. Perfectly round shape from years of working those glutes.\n\nI watched him closely as he came back up. My dick began to stir. I was hoping to catch Ian's gorgeous blue eyes in the mirror again when I saw something else.\n\nI wasn't the only one gawking at my boyfriend's amazing backside. Brian was watching with much more interest than casually spotting. His eyes were fixated on Ian's ass. He looked hungry.\n\nThe motherfucker actually licked his lips and moved closer to Ian. Brian met my eye in the mirror and moved his arms a half an inch closer to my boyfriend's body.\n\nNow, listen, I could try to bullshit you here and say that I'm normally not a very jealous guy or whatever, but that'd be a fucking lie. I'm a very competitive person (I'm an only child for christ's sake). I work hard for everything I have, so when I finally get whatever it is that I want, I expect to bask in the full glory of that thing completely undisturbed.\n\nAnd the same goes for my relationship.\n\nIan and I couldn't possibly be more Out at school. I've given him more visible hickeys than I can even count at this point. Everyone knows that we're together. Especially fucking Brian.\n\nIan is also hot. His body is amazing and his face is masculine with just the right touch of pretty-boy softness. He's got these all-American good looks with his piercing blue eyes and dark blond hair. Obviously I realize that other people can also see how sexy he is. I'm not foolish enough to think that no one else can lay eyes on him.\n\nBut fucking BRIAN wants to eye-fuck my boyfriend while I'm right there? This scraggly pencil-dick Brian?\n\nOk so, I haven't seen Brian's dick to verify its size for sure, but he just has that pencil-dick type of vibe, ok?\n\nHell no. There's no fucking way I'm gonna let this happen.\n\nIn that moment, I took Brian's actions as a straight-up challenge.\n\nWhen Ian finished his set, I wolf-whistled at him to get his attention. His chest was heaving from the effort when he looked over at me. I gestured for him to meet me at the bench press.\n\nHe strolled over, leaving Brian looking deserted. Once he got close enough, I slapped Ian's ass in a playful, sports-guy type of way, with just a hint of an unspoken \"but actually I'd like to bend you over and make you scream right here.\"\n\nIan's subtle shiver let me know that he'd definitely picked up on my hidden subtext.\n\nI couldn't help myself, I grinned smugly at Brian across the room. The glower he shot back at me let me know I'd struck a nerve.\n\nGood.\n\nMy little victory got me feeling hot.\n\nI laid back on the bench and looked up at Ian towering above me, spotting me. It wasn't lost on either of us that this position was very similar to the view when his cock is in my mouth. I spent a little more time than necessary getting adjusted. I tilted my head back and took a big sniff right near his balls.\n\nHis blue eyes widened and he placed his hand over mine on the bar. \"Feeling frisky today?\" He asked with an eyebrow raise.\n\nI winked at him and blew him a kiss, \"Always.\"\n\nHe rolled his eyes with a laugh, \"Down boy. Let's channel that energy into something productive.\" He smiled warmly at me and I began my reps.",
        "We moved together through the rest of the workout, spotting for each other when necessary. The guy looks amazing working up a sweat. He had a bead of sweat rolling down his neck that I wanted to lick up. He saw me looking quite a few times and I started to get the feeling that he didn't need to do quite so many hip hinge movements with his ass directly in front of me.\n\nFucking tease.\n\nI tossed my shirt off and rubbed my pecs and abs, pretending to work some soreness out of the muscle.\n\nI combed my fingers through the hair on my chest near my nipples and I heard his breath catch. Ian bit his lip as I worked my hands lower, massaging the muscles of my lower abs, inching closer to my waistband.\n\nDon't dish it out if you can't take it, McNair.\n\nThe weight room started to clear out as Ian and I did our post-workout stretches together.\n\n\"You said your parents are busy on Saturday, right?\" Ian asked casually as he grabbed his foot for a standing quad stretch.\n\n\"Yeah. Why, are you free? I thought you had that chem lab report to work on?\" I asked, recalling the assignment he'd been agonizing over for the last week. I pulled an arm overhead for a tricep stretch. I noticed his eyes drink in the view of my body.\n\nHe smiled at me and switched legs, \"I do, but I actually got kind of in the zone last night and got through way more of it than I was expecting. I should be able to finish up the last of it tonight. What do you think about Saturday for a gift exchange?\" His expression was expectant.\n\n\"Yeah, should work for me,\" I replied.\n\nWell, shit. Now I really need to figure out his gift.\n\nI was ripped from my thoughts when I heard him ask, \"Help me out with hamstrings?\" He laid back on the mat on the floor and started to lift one leg up. I laughed gruffly at the obvious trap, but still moved to kneel under his raised leg. I grabbed his ankle and moved my hips closer to his.\n\n\"Trying to tempt me with a public fornication charge, huh?\" I chuckled down at him at the suggestive position of our bodies.\n\nAs I pushed his leg closer to his face, Ian said lowly, \"You aren't the only one feeling frisky today.\" He thrust his hips up at me slightly.\n\nIf you didn't know any better, you might have taken that for a small adjustment in the stretch, but I sure as hell knew better.\n\nI grabbed his other ankle quickly and pushed both legs towards Ian's head. I was now nearly laying on top of him as he was folded in half. My pelvis was achingly close to his ass. Ian's eyes darkened and I swear a quiet moan escaped his full lips.\n\nI adjusted my grip to hold both ankles with one hand. I leaned back and smacked his ass firmly, the slap echoing around the now mostly-empty room. This time a slightly louder moan came from Ian.\n\nI leaned down close to his face, my head between his ankles. I planted a short but rough kiss on his mouth. \"Saturday. This ass is mine.\"\n\nIan gulped and nodded his head vigorously.\n\nI chuckled and moved away from him swiftly, extending a hand to help him up. He laughed with me, his cheeks getting that signature pink color once more.\n\n***\n\nWhen Ian knocked on my door Saturday evening, it took everything I had not to fuck him right there on the porch. Neighbors be damned.\n\nHis blond hair was perfectly tousled as usual and he wore a baby blue v-neck sweater that matched his eyes.\n\nI grabbed a handful of his sweater at his chest and pulled him inside roughly, slamming my mouth onto his. I wouldn't let his mouth separate from mine as we made our way up the stairs and into my bedroom. My tongue never let up. He was here, he was mine, and I knew he wanted me to take him.\n\nI threw him down onto my bed and finally came up for air. He was panting like crazy.\n\n\"Whatever's gotten into you, I like it. I really fucking like it,\" He said quickly, eyeing my body up and down.\n\n\"Well don't you know how to make a guy feel special?\" I grinned at him. I walked over to my desk and grabbed a small box wrapped with a silver bow on top. I extended it to him and he accepted the present with a shy smile. \"Let's see how you feel after you open this,\" I said cockily.\n\nHis fingers moved slowly, meticulously, untying the silver ribbon. I felt like I was gonna jump out of my skin with anticipation. I couldn't wait to see his reaction.\n\nThankfully, he finally got the ribbon off of the box. He glanced up at me one last time before gently gripping the lid and opening the present. Inside was a folded piece of paper. His eyebrows scrunched together in confusion as he began to unfold it.\n\nThe realization must have dawned on him as his eyes scanned down the words. He read aloud, \"Negative... Negative.... Negative.... Negative...\" He looked back up at me, \"That's a lot of negative results...\"\n\nI nodded.\n\n\"So does this mean...?\" He trailed off.\n\n\"We don't need anything to separate us anymore,\" I said slowly. \"Not unless you want\u2014\"\n\n\"I don't! No more condoms!\" He cut me off. His face was full of excitement and lust.\n\n\"Well ok then!\" I laughed as I crawled onto the bed, blanketing his body with my own. My knee slipped between his and I placed a trail of kisses along his jawline.\n\nHis excitement reminded me that I had delayed this far too long.\n\nI had to get something off my chest before we really got into it. Something that had been eating away at me since I journeyed down to the clinic the other day for the STD test. Something that needed to be said out loud.\n\nWhen my lips were on his ear, I whispered sincerely to him, \"Baby, I'm sorry. I should have done this sooner. I didn't want to put you at risk, but I wasn't sure what kind of answers I'd get... I mean, I always used a condom except for blowjobs and stuff, but you never know...\"\n\nThere it was. The awful truth.\n\nI had been too chicken shit to know my status. And my fear had put him, the person I love, at risk.\n\nHe shushed me, \"Shh, shh, it's ok. Its ok, Wes. I get it. Everybody has a past. Don't worry about it.\"\n\nI pulled my head away so I could get a good look into his eyes. They were full of love and understanding. In that moment, I wasn't sure I deserved it. I couldn't get the seemingly endless string of sexual partners out of my head. Without knowing it, by being with each of them, I'd jeopardized Ian's health. He trusted me completely and yet I didn't have the balls to get tested earlier. I was supposed to take care of him. The thought had been weighing in the back of my mind and it had been killing me. \"I know. It's just... I should've gotten tested before I touched you at all. Even oral's not totally\u2014\"\n\nIan's hands reached up and gripped the sides of my face, stopping my train of thought. He gave me a hard stare before speaking, \"Look. I appreciate it, but you don't need to put yourself through all this. I'm a big boy, I've been through sex ed. I knew the risks. We know I'm clean. You got tested, and now we know you're clean. End of story.\"\n\nHe ended his matter-of-fact statement with a matter-of-fact kiss that shut me the hell up.\n\n\"I love you. I love you so much,\" It was all I could say as I continued to plant kisses along his mouth. And neck. And collarbone.\n\nHe helped me remove his shirt as well as my own. He hugged me close and I relished the feeling of our bare chests pressing against one another. I reached up and tickled the base of his neck, making him laugh. I moved my body further south, unbuckling his pants.\n\nSoon we were both fully naked and I continued to apply kisses and licks to his body. I traced the ridges of his abs with my tongue, dipping into his navel briefly. I massaged his thighs, tickling closer to his groin. He thrust his hips towards my face, urging me silently to pay attention to his dick.\n\nI had other plans.\n\nI placed my hands near the back of his knees and forced his legs up towards his head, mimicking the position he had been in while stretching in the weight room the other day. He gasped at the quick movement. I kissed the cheeks that were now next to my face. I moved my face closer and closer to his backdoor.\n\nHe smelled like soap and the unmistakable scent of Ian McNair. He must've been freshly showered because he was clean as could be.\n\nI was almost disappointed since I love when he gets sweaty for me.\n\nMy tongue dove straight into his hole. I felt the tight circular muscle loosen just slightly as Ian began moaning.\n\n\"Oh fuck, you're really\u2014you're really doing that!\" He moaned in disbelief. \"Ah, damn that feels good!\"\n\nYeah, I knew he'd love this.\n\nI laved his rosebud with my tongue like my life depended on it. I pointed the muscle of my tongue and firmly penetrated his asshole with reckless abandon. His hips bucked off the bed and I folded my arms on the back of his legs, further bending him in half. Thankful that I'm strong enough to overpower his thrusts, I continued the assault on his ass. I lapped every centimeter I could reach, coaxing his tunnel to open for me with each lick.\n\nI let the drool flow from my mouth for lubrication as I added one finger, then two. Ian was nearly hysterical.\n\n\"OH, WES! FUCK! Yes, yes, baby that feels so fucking good! Yeah baby, yeah. Please give it to me. Oh GOD yes, fill me up!!\"\n\nMy hand reached for the lube beside my bed and began to prepare my cock. I placed one last kiss on his asshole before sitting up and positioning myself between his now lowered legs.\n\nI couldn't resist teasing him just a bit more though.\n\n\"Oh you want filled up, huh?\" I asked him. He nodded his head profusely. \"Why don't we find that little toy of yours then, huh?\" I taunted, referring to the small butt plug I'd placed in him before.\n\nIan looked devastated, \"NO! I need you! I need bigger. Please, Wes, baby, please give me your cock!\"\n\n\"Oh, you mean this cock?\" I rubbed my erection along his crack, feeling his slippery hole slide quickly past my now-slippery cockhead.\n\n\"Yes!! Please! YES! C'mon ple\u2014\"\n\nHe stopped mid-thought as I swiftly pushed just the tip of my dick into his tight ring.\n\nIt was fucking amazing. I slid my dick deeper into his hungry ass and it was like nothing I'd experienced before. With each new inch I was flooded with an overwhelming sensation of heat and stimulation. His ass was so goddamn tight, I couldn't even think straight.\n\nIt felt like I was discovering a symphony of new nerve endings on my dick that were previously numbed by the condom.\n\nWith every thrust, I was getting deeper and deeper inside of him. No more barriers. Nothing between us. Just me and Ian and the most perfect feeling of his body sheathing my own. It was a mind-blowingly perfect fit.\n\nEach stroke was me thanking him for giving me this gift. Each push of my hips was cementing our undeniable connection. Each moan from his lips was the confirmation that I was successfully worshipping my lover.\n\n\"OOH right there, oh right fucking there!\"\n\n\"Yeah, you feel this dick?? Filling you up?! Fucking claiming this ass?!\" I yelled roughly.\n\n\"YES! Claim me, Wes! Ungh, claim this ass!\" Ian had a hand wrapped around his own cock, stroking it quickly to match the speed of my thrusts.\n\nI reached up and grabbed a section of his hair firmly, \"You're MINE! You gonna take it, baby?\"\n\nHis body started to tense and I could tell he was dangerously close to the edge. I was seconds away from my own release, and it already felt like this would be one to remember. My balls were aching to pump into him.\n\n\"You gonna take my fucking load, Ian? You want my fucking cum inside you?!\" I was a complete animal now with a singular goal in mind.\n\n\"Fuck yes!! Cum inside me, baby. Cum inside my ass! Give it to me! AH FUCK--!\" Ian's shouting turned to a silent scream as the cum shot from his dick and painted his chin, then neck, then chest.\n\nIt was one of the biggest loads I'd ever seen from him.\n\nAnd it was all I needed to push me over the edge to my own orgasm. Cum gushed out of my dick and straight onto Ian's inner walls. I relentlessly pumped my hips over and over as the spurts continued for what felt like ages.\n\nFinally the spasms stopped and I rolled beside Ian, chest heaving to return breath to my lungs.\n\nAfter a few minutes of catching his own breath, Ian started, \"That was\u2014\"\n\n\"Fucking incredible,\" I finished for him. Even those words couldn't do it justice.\n\nThe feeling on my cock had been amazing, but the connection I felt to Ian was brought to a whole new level. I never expected that removing a thin piece of latex would have such an impact, but it absolutely changed everything.\n\nI'd never felt so close to anyone in my life.\n\nI reached down and grabbed his hand, rubbing his thumb with my own. I felt his lips on my cheek and heard him whisper, \"I love you.\"\n\nI turned to look at him and whispered back, \"And I love you.\"\n\nAfter we showered and returned to our clothes, I guided Ian back downstairs for the homemade lasagna that I'd had patiently warming in the oven. Even before Ian arrived, I knew there wasn't a chance in hell that we'd do anything but fuck immediately, so I was sure to make something that could sit and wait for us. I picked up a few cooking skills while fending for myself since my parents worked so much.\n\nI thought the lasagna was pretty damn good if I do say so myself, but it gave my caveman brain a hell of a pat on the back to watch Ian enjoy the food I'd made for him.\n\nIan brought some Christmas cookies that he'd made together with his mom and sister. He joked that he'd been forced into baking and decorating against his will, but I knew how important his family was to him. He'd do just about anything for them, even if he had to offer a smartass remark or two along the way. Ian had jokingly referred to himself as the \"man of the house\" a few times before, but it was obvious that he took that job seriously.\n\nI kissed him again as he attempted to explain why the reindeer-shaped cookie was missing half of its antlers. I placed another small gift box on the table and slid it towards him.\n\n\"Seriously?\" he exclaimed, \"You give me mind blowing sex, then make me a delicious meal, and now there's ANOTHER present? How the hell am I supposed to compete with this?\" Ian was laughing but he seemed genuinely surprised that I had another gift up my sleeve.\n\nI couldn't resist going for another kiss, \"C'mon you should know by now, baby. I play to win.\"\n\nHe smiled broadly as he unwrapped the present. He reached into the box and held up the thin brown braided leather cord. He stared at it for a moment without saying anything.\n\n\"It's a bracelet.\" I couldn't stand the silence, so I had to jump in. \"I know you don't usually wear one. It's stupid, but I remembered that you used to wear a necklace back in freshman year.\" I chuckled lightly, \"That's kinda where I got the idea.\" Ian still wasn't reacting. Oh shit. \"It's.... You don't have to wear it if you don't want to. I mean, it can be like a keepsake, or...\"\n\n\"I love it. Really. Thank you, Wes,\" He finally spoke, putting me out of my misery. His blue eyes were filled with emotion. My hands reached across to fasten the bracelet on his wrist. I stared down at it, noticing the look of the rich leather on his creamy skin. It looked really good. Like it was meant to be there. Like he was meant to wear it for me. For us.\n\nA new box appeared in the corner of my eye as Ian reached for the gift he brought for me. This one was larger. I arched an eyebrow at him and he gestured for me to open it. I opened it up and inside was a framed chart. I looked closer, down at the bottom was a single point that read \"Wesley Houston\"... above that was \"Frank Houston\" and next to that, \"Claudia Houston\"... I continued looking. It was a family tree. My family tree. Traced back to my father's relatives who arrived at Ellis Island.\n\n\"You've talked about finding my ancestry in Scotland.... So I thought you might want to see more about your own family. Your mom and dad had to help me, but it came together surprisingly well.\" His smile was warm.\n\nMy throat tightened, making it hard to speak. It was so comprehensive, it must've taken him forever to put this thing together. Hell, I'd even tried a few times myself but had given up when it got too tedious.\n\n\"This is... Ian. This is incredible. Thank you so much,\" I said before planting another kiss on his soft and sweet lips.\n\n***\n\nIan and I spent almost the entirety of the winter break together. It wasn't even just sex (although there was certainly a lot of that). I hung around with him and his mom and sister, and he was even able to spend a bit of time with my folks when they were home.\n\nHis schedule had been so crazy before that the winter break felt like this magical time when we could press pause on all the bullshit of real life and just focus on having fun together.\n\nWe worked out, played video games, watched movies. I couldn't have asked for a better way to spend the time.\n\nIan wore the bracelet I'd gotten him every single day. From the moment I'd placed it on his wrist, it started to take on a new meaning for me. It was like a physical representation of our bond.\n\nI could never really find the words to express it correctly to Ian, but I know he picked up on my reverence for the simple piece of jewelry. So it meant a lot to me that he wore it constantly.\n\nHe kept it on when we returned to school.\n\nOne day he told me that some guys in the weight room had been joking around, teasing him about it. Lucky for those guys, I hadn't been there that day to hear it myself.\n\n\"What do they care?\" I asked Ian about the encounter.\n\n\"I don't even know, that's the thing. It's so stupid. Brian was just like 'oh, look\u2014'\" He started to imitate the other boy's voice but I cut him off.\n\n\"Wait Brian? As in, Brian who's seriously got a thing for you, Brian?\" The same Brian who eye-fucked Ian right in front of my face?\n\n\"Jesus Christ, will stop with that? Brian is 100% straight, ok? I've known him for years. He's not into me like that,\" I could tell from his tone that Ian was irritated that I brought up the eye-fucking incident again. I'd told him before about the look I'd seen on Brian's face while he was spotting Ian during squats one day.\n\n\"Ian, come on. Seriously. He might be \"straight\" but do you know how many \"straight\" guys like to fuck other dudes? And he definitely wants to be into you like that,\" Ian rolled his eyes, refusing to listen to the truth in front of his face. I don't know what world he was living in with that, but it wasn't reality.\n\n\"Whatever. He's not into guys. Just trust me.\"\n\n\"Oh I do trust you. It's that fucker I don't trust,\" I growled back.\n\nIan's blue eyes narrowed at me. \"Really? What, now I'm some damsel in distress that needs protecting? I got along just fine before you, you do know that right?\"\n\nWell shit. This conversation took a turn.\n\nI took a deep breath before continuing, trying to relax my tone and de-escalate the situation, \"That's not what I meant, Ian. I'm just saying I don't like that guy. That's it.\" I put both palms up in front of my chest, indicating that I wasn't look for a fight.\n\n\"Whatever. I've got to go. Are you coming to the meet after school?\" He asked, already turning away.\n\nI reached out and placed a hand on his hip, leading him back closer to me. \"Of course. You know I'll be there for you.\" I kissed him softly and looked into his eyes, \"I love you.\"\n\nHis clear blue eyes softened back at me, \"I love you, too.\"\n\nI spent much of the afternoon rehashing the argument with Ian in my mind. I understood where he was coming from that, yes, I probably was a little too preoccupied with Brian. But again, I felt that he had challenged me directly and I just couldn't let that go.\n\nAlso, even if Brian was into Ian, he had his shot. Like Ian said, they've known each other for years. He had every opportunity to try to get with Ian for years and he didn't. Now that there's someone here that can actually see how fucking amazing Ian is, NOW Brian wants to show interest?",
        "Nah. Fuck that.\n\nIt was still on my mind as I walked into the natatorium to take my seat for the swim meet. As usual, I immediately turned my head to find Ian.\n\nHe was in the corner wearing his skimpy little speedo suit, talking in a secretive sort of way with someone. I couldn't tell who it was since the other guy was turned away from me and was wearing a swim cap. Those guys all tend to look the same.\n\nIan had his arm extended and the other person was doing something... doing something to his wrist. The other person leaned in closer to the side of Ian's face and tilted enough towards me that I saw him.\n\nIt was Brian.\n\nAnd I stood there, unable to do anything but watch as Brian unhooked the bracelet from Ian's wrist and tossed it casually into the corner behind Ian.\n\nI saw red.\n\nThe loud slam of a door echoed through the halls as I turned around.\n\nI didn't know where the hell my feet were taking me but I knew I was doing something I had never done before.\n\nI ran the fuck away."
    ],
    "authorname": "Gar28",
    "tags": [
        "dirty talk",
        "first love",
        "gay love",
        "gay romance",
        "high school"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/ian-and-wes-pt-04"
}