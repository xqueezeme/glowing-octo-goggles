{
    "title": "My Only Talent Ch. 50",
    "pages": [
        "Note: The descriptions and accounts in these stories are fictional and do not portray any actual people or events.\n\nAsa Weltschmerz had greased the skids for Nora's early release from the hospital, and to ensure a minimum of interactions with other physicians, lab tests and records. He did not think that the state's required newborn screening tests, while extensive, would reveal anything about the baby's nervous system or potential talent. The OB was okay with that, since he had agreed to do several home follow up visits and was also amazed at how uncomplicated and fast the birth was, and how fast Nora snapped back. Asa was sure to collect the umbilicus, and we had agreed that he should preserve it but not examine it until we all agreed on its future. He made sure no one at the hospital had anything else that DNA could be taken from, even to the extent of surreptitiously slipping out some bloody rags and sheets.\n\nLara drove us out in her Baby Beamer and I was surprised to see her take Mass Pike west and we ended up in Newton. She pulled into the driveway of a huge stucco house near Greenwood Street. She noticed me looking around nervously. \"My father insisted on renting this.\" she said. Before I could ask the follow up questions, the car was surrounded. Nora's parents, my mom and dad, my grandparents, and Lara's dad and Lillian Gush, now his fianc\u00e9, all cheered our arrival.\n\nThe house was a monthly rental big enough for a family reunion, courtesy of Lara's father. Nora and Randy were immediately spirited away by the women, including a nurse practitioner that was on call, and I joined the male contingent in the huge media room. I suppose all our discussions about carefully preparing the extended family for a tripartite marriage were now moot. There were handshakes and congratulations offered to me by the group for a few minutes, and then suddenly my grandmother joined the male group and suggested that she and I take a walk outside. Everyone else filtered away to the kitchen.\n\nI could tell from her tone of voice that she was in her matriarchal mode, and she didn't mince words. \"Robbie, as far as the family is concerned, Nora and Lara are both your wife and both are Randy's mother, no matter what kind of legal arrangement you eventually reach. When Lara has a baby, we will all feel the same way. No one will question it, discuss it, or argue with you about it. Nora's folks and Lara's folks all are on board to, and anybody outside the family can like it or lump it, but they have to shut up about it. We are all overjoyed to be grandparents and great grandparents. But you should know that happy state of affairs did not come to pass without 24 solid hours of fussin' and cussin' which ended last night, but it is a done deal now. Comprende?\"\n\n\"Of course, Grandma, but there is something you should know. It might have saved some of those arguments.\"\n\n\"What's that Robbie?\"\n\n\"We are already legally married. We did it a week ago, starting in a city hall Massachusetts and ending in three different courts in DC. It's a done deal, and we don't think anybody can successfully challenge it in court. Lara can explain the legal details.\"\n\nGrandma looked very thoughtful. \"Does Jay Kincaid's granddaddy know about this?\"\n\n\"Jay and Millie know all about it, so I assume Mr. Warner knows too. Why do you ask?\"\n\n\"Because he insists there is going to be a big wedding for you three at his ranch. Jay sent a woman named Ashley Armstrong to ask us for invitation lists and open dates.\"\n\n\"Well, we did discuss having a public ceremony later. After we had talked to the families, but...\"\n\n\"Say no more, Robbie, it's a done deal! We can all do to a big blowout wedding at the Warner Ranch whenever you want. But let's talk about our wonderful little Randy now.\"\n\nWhen Grandma and I got back into the house, she went to help prepare dinner, and my father took me aside. \"Robbie, am I crazy or is that little fucker already sending Suzie signals?\"\n\n\"Yep. For the last few weeks he was pinging and banging like crazy from in the womb. Asa says it is an exciting neurological development milestone marker. Nora can hear him even better than I can, and he can already sense other people's moods.\" I decided not to give him the details about what happened when he was near Rock and Veronica Tappert, or Rachel. But he needed to be prepared for Randy's accelerated and unusual adolescence. \"We are going to have to talk to him about his talents long before his eighteenth birthday. We may have to do something with him even before he can talk! I think home-schooling is probably a very good idea. We are going to have to carefully and thoroughly socialize him, like we used to with the working dog puppies, and have lots of family members that can keep a secret to interact with him.\"\n\nMy dad looked funny. \"No shit, Sherlock! It shouldn't be a problem, though, with three sets of grandparents ready to spoil him.\"\n\nNot another word was said about our marriage or further plans for the next month. Randy was cuddled, cooed to, and generally loved up on. Lara had to fully assert herself to get some time with Randy on the weekends when she came up from Wharton. Nora went back to her classes on campus, and everyone else competed to take care of Randy while she was gone. That little kid was being bathed in love and adulation. I hoped it would merely socialize him, not fuck him up.\n\n* * * * *\n\nAnna Azier was busily exploring Robbie Roberts and all his connections, and she was continually amazed by what she found. Even if she hadn't been digging into him, he would soon be fully investigated because of all his connections to the New Chunnel stuff. Anna didn't have clearance to know why that was such a big deal, but she could infer from what was and wasn't visible to her that it was surely a Bravo Foxtrot Delta. She found links to at least three unnamed and security masked entities connected to Pliskin, and dozens of links to VIPs in Texas and DC, and this little tech startup that just hired Roberts was on both the DARPA and DIA shadow watch lists. WTF?\n\nShe pulled up bios and pictures of all the women he was linked to. How did this guy get those women? She looked at every available picture of Roberts. He was earnest looking, trustworthy even, but not exactly a movie star. What did he have in person to person encounters that so transcended expectations? Did it work on men, too? No record of any gay entanglements, but lots of male friends. Why did all these straight guys befriend and trust him? How could she find out? Despite his fraternity membership, he had exceptionally good grades and did not drink at all, much less to excess. His frat also had the best grade point average on campus.\n\nMaybe she could interview some of these people who knew him, but how to disguise her real interest? Her curiously burned bright. It was at the same time one of her strengths and her major weakness. She even put together a daily schedule and a routine to track Roberts physically using his phone, traffic cams, and security cams. She backtracked the timeline visibly and found him coming out of a pediatric hospital. What did that mean? Records search. He is a new dad? Who is he married to? Records search. TWO wives? On the same date? She did a quick database query. He was the only person in Massachusetts that showed a legal marriage to two women. In fact, in the entire USA. The marriage date was almost three weeks ago, but the record just appeared yesterday. She looked in LEXIS/NEXUS and her other case law databases. The marriage had already been challenged and upheld in three different courts. How was that possible? The only possible challenge left was the US Supreme Court. Who in the world could do something like that? Nora and Lara were super smart, and super-hot, too. Anna would chase either of them herself. How did Roberts get together with them?\n\nCuriosity burning hotly, she put together, in her head only, a plan to meet Roberts in person. She had figured out how to do it and how to hide it all when her better judgment finally spoke to her. This was not a good idea. But what could she do? She decided she would approach Alexander Walton. She couldn't ask Pliskin directly, but maybe Walton would give her a hint. Maybe he wouldn't sack her on the spot like Pliskin probably would. Somehow, she had to know more.\n\n* * * * *\n\nI had hoped things would return to normal when all the grandparents departed, and we moved from the big rental house back into Nora's little apartment. Some things were normal. But Nora was still consumed with Randy, and not that interested making it with me or Lara. Asa had prepared me for some postnatal adjustments, but as the problem continued, Lara and I both got worried. Nora was totally focused on Randy.\n\nLara and I banged each other almost daily, but Lara was missing her times with Nora, too. We talked about how to seduce her again, separately, or jointly. We finally cornered her, in a \"we need to talk\" moments, one of the very few I have ever initiated.\n\nNora sniffled. \"I'm sorry. You know I love you both, but I am consumed with Randy. It's like we are directly connected all the time.\"\n\nLara touched her cheek. \"We all love him. How about we all cuddle together when you nurse him, and then see what happens if we stay together after we put him to bed.\"\n\nLucky for us, little Randy was a hard sleeper. Once you got him down, he slept for at least four hours. When he woke up, he was ravenous and loud as hell. We all enjoyed cuddling him, and we all felt connected. Nora seemed to warm up a bit, and I could feel Randy's contentment, too. Nora had been encouraging Lara to let Randy nurse with her too, and the little mammal worked her nipples hard. She giggled, and said it turned her on and made her content at the same time. It took about a week, but suddenly she was producing milk too. Once that started, Lara's Suzie (which I could now hear perfectly) was even louder in signaling desire for me and Nora.\n\nThey tried to keep Randy on a rotation to drain all four teats equally, and he certainly did his part. Asa and the OB doc were surprised at how quickly he was ascending the growth curve -- he started small but was rapidly reaching above average dimensions. Asa said the two diverse milk sources were great for him biologically and emotionally.\n\nOne night in his sixth week on earth, Randy had just topped off on teat number four, and I expected to hear his contentment Suzie, followed by his journey to dreamland. But suddenly a new symbol popped up in his table, like one I had already heard, and it was loud and unmistakable. Nora and I snapped to attention and looked at each other in surprise, but the astonished look on Lara's face brought us up short. Lara took a deep breath, and said \"Did Randy just say what I think he said?\"\n\nNora recovered her wits first. \"You heard Randy? What do you think he said?\"\n\nLara giggled. \"Do her, Mommy!\"\n\nNora giggled. \"Yep, that was it!\"\n\nThey both looked at me. I shrugged. \"Can I watch?\"\n\nAfter that, Nora and Lara were both insatiable, and I was highly inspired to please them both. Somehow, little Randy always slept soundly when his folks were off in nookie nookie land, which only reinforced our behavior. I have to hand it to the horny little fucker. He was doing his part to ensure domestic tranquility.\n\n* * * * *\n\nAnna Azier was surprised when Ambassador Pliskin scheduled a one-on-one meeting with him for an amazing two-hour slot. He usually didn't even stay in with POTUS for that long, and that made her nervous.\n\n\"I spoke with Alexander.\"\n\nUh oh, was she was in deep shit now?\n\n\"Give me a 45-minute summary of everything you have learned about Robbie Roberts so far. Connect the dots. Impress me.\"\n\nAnna's heart was in her throat. This was the Ambassador! She could not withhold anything, even the weird stuff about his daughter that might piss him off. She hoped that his previously expressed pep talks to analysts were what he truly felt. He would say that truth is not political, facts are not political, analysis is not political, but often decisions made are completely political. She had to believe it.\n\nShe started with the hard facts. Then the inferences and conclusions she had drawn, and what else she would like to follow up on. It only took half an hour. The Ambassador did not react when she finished, then stared at her silently for another full minute. Her heart was pounding in her chest.\n\nFinally, he spoke. \"In summary, he has a myriad of connections to interesting people, and even though you are sure he has some very unusual abilities, you don't know what they are?\" She nodded.\n\n\"If he took an important position in the intelligence apparatus, would you consider him a security risk?\"\n\nShe paused. In for a penny, in for a pound. \"He seems remarkably circumspect, but honest, and people trust him. Except for his aggressive and relatively promiscuous heterosexuality, he seems to be well under control of himself. I think he would be good at getting women to reveal things to him, and men to trust him. He has certainly kept many confidences, about your daughter, for instance. She pretty much fucked him over and he took it and didn't gossip about her. Of course, he had two other amazing women to console him.\"\n\nThe ambassador was pleased that Anna did not know about Suzanne's little punishment and catharsis session, so the security arrangements had held. If anyone was going to find a leak, Anna would have. He relaxed a bit.\n\n\"Do you consider him attractive?\"\n\nBoy this was getting personal she thought. \"I like women, sir, and he and I have similar tastes, I guess you would say, but if I had to pick a man to be with, he would certainly be a good choice.\"\n\nPliskin grinned. \"You would have lots of company. Given all that you know about him, would you trust him if you worked with him?\"\n\n\"Yes, sir, I would. More than most men, in fact\". Now she was even more curious.\n\n\"How do you feel about England, Anna?\"\n\n\"Never been there but I have studied their history with interest.\"\n\n\"You are now finished with the assignment to research Roberts. Everything you learned about him stays between us. You are going to be working in England for several years, liaising with Mr. Roberts on a very important initiative. Let's spend the rest of our meeting going over your duties. You will have a very abbreviated chain of command.\"\n\n* * * * *\n\nKhalan King had multiple summer 7 on 7 football teams to choose from, and he chose the one that would keep him closest to Austin. He was convinced that Chrissy and Joyce were the reason his hip fluidity had stayed so good even after recently putting on twenty pounds of muscle, thanks to the ESU strength and conditioning coach. They had a vastly different weight training routine than he had worked under in high school, one that tracked not just the maximum weight he could successfully lift in each exercise, but also the velocity at which he could move it. He also was learning all sorts of weird ballet moves and stretches. He was not only bulking up, but he was also more explosive and could change directions more quickly than ever before. The 7 on 7 contests gave him a chance to work against some of the best receivers around, and he was learning their tactics and moves in addition to getting stronger and quicker. He was also recognizing how offensive coaches schemed to get a receiver open, and how he could short circuit some of the pre-snap reads they relied on. In short, he was becoming the guy the receivers did not want to cover them, and that offensive coaches had to account for.\n\nRoger showed him some of his training routines designed to improve his distance in the javelin event, and for Khalan they meant he could reach up further and faster to contest a catch and gave his shoulders a greater range of motion. He already had a good vertical leap, and better hands than most defensive backs. He was really looking forward to football season.\n\nHe also looked forward to his weekend adventures. Team members teased him about not clubbing and partying with them and 'not getting any' of the 'hot groupie trim' that they were enjoying. Khalan just smiled confidently but said nothing. He knew he was getting some of the best a man could get, and he didn't have to get drunk or high to do it. Two hot women who knew him well and wanted to please him as much as he wanted to please them were much better for you than a parade of drunken coeds. He was beginning to understand that being with Roger just made Chrissy and Joyce even hotter for him. But the first time the football team had one of those pool party blowouts at the coach's house, all the guys noticed he was the only freshman that showed up with two smoking hot juniors, one short and one tall, that obviously adored him and had no use for anyone else. Roger had even suggested that Khalan take both the girls, as he intended to do the same at any of the few events the track guys had. All Khalan's teammates knew he worked harder at practice than any other freshman, and now they saw that he obviously was doing some great work on the weekends too. They all recognized that Khalan King was a player, in the best sense of the word.\n\nThe four \"Lakeway friends\" had developed a remarkably interesting routine on the weekends. Either Chrissy or Joyce would claim to be the 'sex queen' for that weekend, and the other three must then totally devote themselves to pleasing their queen, which involved honoring, without reservation, each one of her most intimate requests. Both girls apparently spent some time coming up with innovative weekend ideas, and both guys were happy to please.\n\nThis particular weekend, Joyce was the one making royal demands. She first related on ongoing fantasy, perhaps triggered by a story she read in the past or listening to Khalan praising his 7 on 7 football experience, of a woman who had seven eager male lovers, one for each day of the week. She directed that Khalan and Roger serve her serially, complete with rest periods and costume changes, to allow her to enjoy all seven in one weekend. Chrissy was to keep her warm between episodes, and perhaps help the guys to prepare for their successful service of Joyce.\n\nRoger and Khalan were up for it, literally and figuratively. What starts here changes the world, baby! Neither of them had seven different outfits, but in the spirit of pleasing Joyce, they got creative. They each had one suit, which had been worn on their recruiting visits and at one athletic banquet so far, plus jeans and lots of tee shirts and ESU jerseys. Khalan had a couple of logo shirts and 'gimme caps' from other schools that had offered him, and Roger had some cycling jerseys and shorts. They even borrowed some cologne from friends and changed their hair and accents to get in character.\n\nJoyce got into the spirit and psyched herself up between costume changes and found herself breathlessly anticipating the arrival of each new admirer. Roger made a convincingly brash and sexy Aussie, and Khalan could do a very believable hip hop rapper shtick. They alternated fetishes and favorite positions, too, perhaps in a coordinated way. One would be demanding and dominating, then the other seductive and patient. One would slap her butt and do her doggie style, then the other would face her and top her smoothly. The novelty was great for a while, but she soon discovered that what turned her on the most was recognizing that Khalan and Roger were devoted to being creative and making such efforts on her behalf, and that they were who they were, not some stranger. From the time Khalan started her off in his Sunday best, until Roger completed his act as her Saturday Night lover, she was swept away with emotion and could almost come just from the way they looked at her. Chrissy helped her bathe and cleanup in between sessions, and at several points positioned and restrained her so the boys could do her effectively. Life was good.",
        "* * * * *\n\nSuzanne Pliskin threw herself into her faculty work at GWU. With Steven Byers gone, she was in danger of falling back into her run, exercise, and sublimate routine that had developed after Mike was injured and before she met Robbie. But Mike was slowly coming back, and she couldn't help but respect his grit and determination. He regularly approached her for sex, perhaps at first just as part of his rehab routine, and she always did her best for him. Soon she wasn't just going through the motions but was really enjoying herself. She could never tease and dominate Mike like she sometime wanted, and he wasn't yet forcefully topping her with way she liked, but he was on a good trajectory.\n\nIn a few weeks, she was dressing up for him and challenging him to spank her and beginning to feel content. But she still thought about Judge Wally sometimes.\n\n* * * * *\n\nAfter all the grandparents left, we settled into a very pleasant routine. When Lara was here on the weekends, she hovered over little Randy and saw to his every need, and Nora got to catch up on school and sleep. When Lara was back in Pennsylvania during the week to do her schoolwork, Nora was pressed for time. One day, I was out doing my rowing workout and Nora was feeling a bit taxed until a helper rang the doorbell.\n\nRachel was dressed warmly and smiled beautifully. \"I realize you three are cocooning, and maybe exclusively focused on your child and your mates at a time like this, I just couldn't wait to see the baby!\"\n\nAs Nora was pressured to finish a paper, she welcomed Rachel in and turned Randy over to her. They both cooed happily. It only took about an hour, and the little scamp had Rachel's blouse open and was happily sucking on a nipple. Nora noticed the silence and looked in to discover both Randy and Rachel were quite pleased with each other.\n\nRachel tried to hide her guilty look. \"Somehow, I knew he wanted it!\" she pleaded. Nora smiled, and Rachel continued. \"And as I am sure you know; he is very good at this!\"\n\nRandy was a natural talent. In a week, Rachel was supplying his third variety of mother's milk, and was becoming dependent on Randy to drain her burgeoning supply, lest she become impacted and sore. The girls had to develop a schedule, complete with an app that Rachel wrote and installed on our phones, to keep all the titties in proper rotation and well drained. Randy certainly did his part to help, and Asa was amazed at his growth curve, which now was well outside the \"normal envelope\" as he put it.\n\nAsa sent me a document full of links from neuroscience publications on what routines to follow to best develop an infant's brain. I grew dizzy from reading all the papers, and Nora and Lara regularly quizzed me on what I had learned and how they could put it into practice. They spoke all the languages they both knew to him, planning to make him native speaker fluent in Italian, French, and German in addition to English, and Lara insisted on learning Polish from Nora with Randy listening and watching. Rachel contributed Hebrew and Mandarin, telling us the story of her grandparents who now lived in Shanghai. I guess he would have a very international home school education. I tried to speak my TexMex/Spanglish dialect in addition to my stumbling Italian and the King's English. But the key point in most of the stuff I read was to make him crawl over new territory as much possible, present him a constant variety of 3D landscapes to observe and mazes to crawl through to get rewards, and keep him away from display screens until he was a least 5.\n\nOh, and music. Lots of music, of all varieties, and not loud but soft. As far as I could tell, he liked it all. He smiled and cooed and made funny faces to everything we played for him, and soon began to crawl and move to the beat. Although we had vowed not to use TV or computers as a babysitter, I did build up some smart toys that would respond to his touching and exploration with beeps and boops and flashing lights. He was fascinated by them.\n\nThe NeuroSignal first round investment deal went through, and the initial tests with the two beta customers went well. Brujo's guys signed up for installations on all their ships and at all their facilities, and other logistics guys began to call to inquire about our service. I was getting asked to take meetings with potential acquirers, so I called the VC to talk about it.\n\n\"I am amazed, but it looks like we are being valued by these guys at 10X what we got for the A round.\" I was afraid he would sell it for a quick profit, and I would be out in the cold. I told him so.\n\nHe vehemently disagreed. \"10X is practically zero to us, Robbie. We go for a minimum of 40X before we exit, and good investments do a lot better than that. Think of 100X as a minimum for a deal like this. Always sound totally confident that they have no idea how incredibly valuable our tech and business model is and that you are contractually bound to not tell them. We don't want to sell out, but we might combine with another promising company if they have tech or distribution we can tap to grow faster. Think big or don't think at all!\"\n\n* * * * *\n\nJay Kincaid's political career was going better than she had ever dreamed, but Ashley Armstrong was working hard to make it go even better. Everything she saw was telling her that all the rivers were flowing in the right direction for Jay to break out of the pack. If she could increase the volume of flow quickly enough, it would be a flood no political opponent at any level could stop.\n\nThe Texas Legislature was about to take up redistricting, and the latest census figures meant there would be two additional Texas seats in the US House. Jay could win either new district in a landslide and given that those seats would be taken from other states with decreasing populations, the national news would cover the story like nobody's business. Jay would be the hottest interview in politics, moving from new guy on the block to potential young history maker.\n\nShe had to position him in a way that would turn heads all over the country and draw voters from all three sides of the ideological divide. Traditional liberals would like Jay's support for working middle class families, open discussion of all issues, and his refusal to badmouth his opponents, no matter how richly they deserved it. Ashley had trained up his innate positivity so he could say only positive things that nevertheless starkly highlighted his opponents negatives in the minds of his listening audience. Woke snowflakes would fawn over his support of sexual privacy and polyandry and his insistence on auditing and re-examining all the massive expenditures made for the military and intelligence apparatus. Ashley had taught him to be \"for\" all the rainbow and unicorn stuff they wanted, while still asking the tough questions and insisting on practical implementations. Traditional conservatives would like Jay's ranching background, his unwavering Second Amendment stance, and further insistence on auditing and re-examining all the social program spending and entitlements. Everyone in Texas would like Jay's looks, beautiful wife, oratorial style, and easy command of Spanish and English. Ashley knew it was a high-risk high-return strategy. They would either be catapulted to massive victories or be electrocuted on three different third rails of politics. She was ready to roll the dice, and so were Jay and Millie.\n\n* * * * *\n\nI was still in training to think big as the VC suggested, when I got a call from Brujo, to introduce me to the CEO of another startup he had invested in. These guys thought really big, and NeuroSignal fit perfectly into their plan. They had a strategy of doing total 'big data' for the shipping industry, and the bigger the fleet, the more benefits their service could provide. All aspects of the ships, their cargoes, destinations, tides, weather and sea conditions, commodity prices, emission limits, carbon offsets, political risks, and ten things I never heard of were combined in a giant dashboard and management system that prevented big mistakes and enabled optimum routes, bids, schedules, and economies of scale in purchasing everything needed to maintain and run the vessels. They needed cheaper and/or faster comm links to each ship and port facility and had planned budgets for many millions of dollars of satellite transponder time each month. Installing our systems could cut those bills in half and improve reliability too. But they didn't just want to license our stuff, they wanted to buy the company.\n\nIt took a month of back and forth between their guys and the VC, but he finally called me. \"Robbie, I have good news and bad news.\"\n\nIt felt like an old comedy routine. \"Give me the bad news first, I guess.\"\n\n\"You are going to be out of a job before your fall semester begins.\" That was bad news.\n\n\"What's the good news?\"\n\n\"You are going to end up with a boatload of options in the new company, and a part time consulting gig that pays more than your current salary. So, you can go back to Austin, go to school and still get paid while your options vest.\"\n\n\"Does all this meet your 100X goals?\"\n\n\"And more. Plus, you didn't tell me who this Brujo guy really was! He could be one of our biggest limited partners just by investing monthly dividends. It improved my standing with the senior partners immensely when they found out who your new investor represented. How did you meet him again?\"\n\n\"I met his wife at a party in Austin.\"\n\n\"Keep going to those parties, my friend. HR will be in touch with more paperwork. \"\n\nI thought things were decided, but a week later the VC called again. \"Robbie, we have to meet face to face next Monday morning in Palo Alto at 9 AM local time. Get a ticket and meet me there. Our attorneys say we may have big trouble, and all they will say is that the government is \"walking in\". I have never been in a deal where that happened, so I don't know what will happen next. \"\n\nI did, at least in theory, thanks to Professor Lillehammer's legal issues in engineering unit. The government was taking over some of our pending patent applications on national security grounds, and they would dictate the terms of who could license the patents and what they could be used for, and maybe decide they would remain classified as a secret for much longer than the normal term of a patent. You never knew when they might do it, and sometimes they did not tell you why. Years ago, they classified a patent a dentist had filed on a new kind of compound for a material that he wanted to use to make dental implants and airplane wings from. It turns out he had blundered onto a key and very secret concept that was used for making the radar absorbing coatings for 'stealth' aircraft, but that wasn't revealed until decades later. Rock Tappert and I had four patent applications in process, and there might be others Rock had submitted that I didn't know about.\n\nI hadn't told Nora and Lara about my upcoming unemployment until I got the final paperwork from HR, and they weren't thrilled about an impromptu trip to California, but they said they understood. Rachel would help with Randy in my absence, and I would get back as soon as possible. I bought a ticket with my NeuroSignal expense account, then used some of my Dad's frequent flyer miles to upgrade to first class. Hey, live a little, for tomorrow we are unemployed, right?\n\n* * * * *\n\nThe meeting was held in a conference room in an office building just across the road from the \"SLAC\" or Stanford Linear Accelerator, a National Laboratory and one of the earliest and most famous particle accelerators. My middle school buddy Ralph was fascinated by its history and all the 'cool physics stuff' that had happened there. Apparently officing near it conveyed some kind of 'tech cachet' upon a VC firm. Our VC had me, the partner on our board, a more senior partner there, and two guys from their law firm. Brujo came himself, with no attorney, but there was a bodyguard in the hallway. I was floored. The VC people all whispered to each other when he arrived. We met an hour early to plan, but since we didn't really know what was up, it was mostly a speculation session.\n\nA few minutes after 9, the receptionist announced that our guests were a few minutes late due to traffic, but on the way. When they finally walked in, it was like a little processional. First there were two guys in bespoke suits that I instantly typecast as lawyers. Our two lawyers obviously recognized them, too. One said, \"Hello Jerry\" but the other said, \"Oh Shit!\" An auspicious beginning.\n\nNext was a guy in his fifties in a Navy uniform: blue coat with gold shoulder badges with an anchor and two stars on them, and admiral of some stripe I assumed. He looked like a younger version of another admiral whose picture was often seen around the campus at ESU: Bobby Inman. There was another younger guy in a Navy uniform with less gold on it, a lower rank I assumed but certainly acting self-important enough. The last guy was a big surprise, but I recognized him: Steven Byers, in an Army officer's uniform, muted green with quite a few ribbons, and complete with sidearm. Everyone stared. Executive theatre!\n\n\"Jerry\" began the meeting. \"The government is walking in on this deal, gentlemen, based on two patent apps which have not yet been acted on, and won't be for some time. You can go ahead with your development plans for the logistics application, and we are prepared to give you an RFP for a similar system to be installed on Navy vessels. The value of that contract will far exceed your contemplated revenues for your existing deal. The size of the firm will have to increase markedly, as will its capital position. Only the existing investors may participate in future rounds, and the firm must remain a private company. Your current business plan is the only story the public will be told. There will be other aspects of the company and its operations that will not be made public, in fact they are classified top secret. \"\n\nOne of the VC lawyers decided to assert himself. Negotiation 101 in law school, I presumed. \"And if my clients don't agree with your plans?\"\n\n\"Jerry\" continued. \"The government will walk in on all your existing patents, not just the new ones, and tie them up in litigation until you finally relent, and then find another firm that will work with us to execute your existing business plan, and you will just get royalties, but not the contemplated profits.\"\n\nJerry huffed and puffed. \"And if we contest this and publicize your actions?\"\n\nSteven Byers took that one. \"Anyone who discloses this meeting, or any other aspect of this situation, will enjoy secure accommodations at Fort Leavenworth until the matter is no longer classified. My guess would be 20 years.\"\n\nThe well-dressed lawyer was getting wound up. \"We'll get our day in court!\"\n\nThe admiral smiled. Not a pleasant one. \"Yes. A FISA court, with neither spectators nor media, and I already know how they will rule.\"\n\nJerry filled the shocked silence. \"But, if we can all work together, you will get all the profits you contemplated, plus those from the new navy contract, and undoubtedly a lot more business, given the Navy's implied endorsement. And the participating investors may be given the opportunity to invest in other ventures that we take a similar interest in.\"\n\nThe VCs began to smile and nod, but my guy's senior partner asked the obvious question. \"What can you tell us about the other aspects of the business?\"\n\nThe admiral smiled now. \"Nothing. You have no need to know. Don't know myself, and never will know the details. The only people in this room who will eventually be read in are Major Byers, here, and your Mr. Roberts.\"\n\nThe VC's looked very puzzled. \"Why Roberts?\"\n\nThe admiral smiled. \"Because he must be retained as CEO of the firm. We will also require certain individuals to take positions within the company and others to have board seats.\"\n\n\"Why do you want Roberts in that role?\n\n\"Because he already knows some of the other important players and we know he can keep his mouth shut. Something you gentlemen have not demonstrated to our satisfaction. But you will in the future, I assure you.\"\n\nThe senior partner turned to Brujo. \"Do you agree with all this?\"\n\nBrujo looked every bit the part of the inscrutable Italian. \"Yes.\"\n\n\"Will your other investors also agree?\"\n\nBrujo smiled like Michael Corleone in the Godfather movies. \"I am confident they will heed my counsel.\"\n\nAfter that, it was just a few details about future meetings and contracts. The lawyers happily contemplated a lot of billable hours, and the VC's contemplated a great public story to tell current and future LPs and promised to be circumspect about the other aspects of the company. They were further chastened when the admiral said they would be monitored quite closely in the future to detect any hint of leaks about the special nature of this investment. With that, the meeting broke up early. The lawyers and VC's all went to lunch, and Steven Byers approached me as they left.\n\n\"Robbie, you should ride with us to the airport.\"\n\n* * * * *\n\nAnna Azier was in the midst of packing up all her office stuff this afternoon, and tonight she would do the same at her apartment near the Navy yard. She wouldn't be able to take in the baseball games in England, but she had already begun to learn about cricket. She also started researching the area around Folkestone, where she would be working, and soon found an article speculating about the building of another \"Chunnel\" to France. Apparently, there was much ado about money, with 'Brexit' at first considered a huge impediment to funding and building the thing. But there apparently was a lot of behind the scenes maneuvering and investment from funds outside Europe, and whispers of involvement of many governments. She knew from her job only that something big was up in England but was quite curious to learn what the public cover stories were going to be. She would get a briefing soon, and she also wondered how much they would tell her and how much of it would be true.\n\nShe found another article, in a civil engineering pub, that talked about a radical new way to construct the tunnel, based on lessons learned from the existing one. The new one would use prefab 'tunnel unit blocks' basically composite cylinders that could be assembled rather than cast in place, and the new tunnel would have four or more main tunnels instead of three, and each tunnel would be surrounded by a 'cable race' that carried out multiple functions -- data comm, power transmission, and even seismic sensing.\n\nJust before she packed everything up, one of her saved searches popped up something about Robbie Robert's startup getting a new investment from a European shipping firm and signing an agreement to install the company's hardware and software on all their vessels. This was just a mention in a blog, and the company had not issued the honeyed and breathless press release that usually accompanied such news. Curious.\n\n* * * * *\n\nI got the in the rent car with Steven Byers and the two navy officers. He wasted no words. \"We need you to travel to Folkstone for a briefing. I will be in touch to set it up.\"\n\n\"Is that where you are living now?\"\n\n\"Yes, and I have daily contact with Drummond McFadden and Oliver Hastings Harrison, and I sometimes see Summer on the weekends. I'll let OHH tell you the whole story, because I only know part of it, but it's a whopper!\"\n\nThe admiral took over the narration. \"OHH wasn't really cashiered, Roberts. That was the cover story. He's been playing the long game, and a much more important one than just being a Fleet Admiral. The \"New Chunnel\" is a cover story, too, and you and Major Byers will both help to guard the real story with your lives. You can only tell your wives the cover story, never the real story. You can't say anything at all to anyone else. But right now. I want you to tell us the story of how you ended up with two wives, and I understand it's perfectly legal?\"",
        "They hung on every word while we took the 101 to this giant building that Steven said used to be a blimp hanger. We sat in the car for an extra ten minutes while I finished the story, then the navy guys left and Steven drove me to SFO to catch my flight back to Logan.\n\nHe asked me one final question. \"Tell me the truth Roberts, are your two wives as hot as Suzanne?\"\n\nI answered without thinking about it. \"99% as hot, and 10X as trustworthy!\"\n\nHe smiled. \"Good trade!\"\n\n* * * * *\n\nBy the time I got back to Massachusetts from my California trip, I was sorely missed, and both Nora and Lara greeted me enthusiastically and demandingly. I did my best to live up to their welcome. Even though I was only gone for three days, Randy already looked bigger, and when I held him, I noticed a complex mix of signals like Nora used to send: lilting effervescent bubbles that popped and fizzed tantalizingly. His symbol table was certainly expanding. I wondered how well his developing Suzie receiver was working. When the three of us sat on the couch together while one of the girls nursed him, his Suzie sounded like a happy babbling kid. When he went to sleep, the signals got muted and different in tone, but they did not cease. I wondered what his dreams were like.\n\nIn addition to my news about NeuroSignal, Lara had some news of her own. She had been offered an internship with one of the judges in DC that had helped with our marriage plan, and she intended to start it as soon as she finished her program at Penn/Wharton. Her completion date dovetailed nicely with Nora finishing her MBA, and a discussion quickly ensued. Nora could get easily secure an internship or a high paying job in the DC area, but I would have one more year beyond that in Austin to finish my degree. Then what? I guess I would learn more on my trip back to Kent.\n\nBut for now, the drums were beating, and I was receiving some massive and manic Suzie signals from both Nora and Lara, and it was time to devote myself to them. Feel the rhythm of the heat. I was certainly much more sensitive to the signals from all around me since Randy had arrived, which was not entirely desirable. I could hear Lara, not just Nora, and that was good, and I could also hear Rachel's signals, and all the other women around me, not just the ones signaling for me. Previously, the women that were not interested in me sent no signals at all that I could detect. Now, I could also hear the women that actively disliked me, as they mentally cataloged the things they did not like. It was bruising to the ego to hear that my eyes were shifty or too close together, or that I wasn't tall enough, or muscular enough, or that my face was too plain.\n\nI was apparently more polarizing now that I was older and a father, in that the women that found me attractive seemed to find me more so, but many of the ones that previously just ignored me now seemed to actively dislike me. My first trip to Whole Foods after we got back buffeted me with new and discordant signals, such that I tried to shut them all out. I was not able to. One my second trip there, I detected several males signaling attraction, but even more regarding me an inferior competitor for the affections of the ladies in the store. Too much information.\n\nI found refuge in the arms of Nora and Lara, and Randy seemed to effectively shut out the signals of the rest of the world when I was home with him. He was like one of those white noise generators that shuts out disturbing sounds so you can sleep, functioning as a pleasant 'cone of Suzie silence' when I was at home. He was also a little erotic enzyme. He facilitated the chemical reactions between Nora and Lara and me, and made us all 'more randy', living up to his name. Like a catalyst, he was not consumed in the reaction, but facilitated it, and in fact he was growing every day.\n\nAt one point, Lara said she was worried that Nora and I would bond over Randy and begin to shut her out, but the opposite had obtained. I could hear Lara's signals perfectly again, and they harmonized beautifully with Nora's, making us all frantic with desire for each other. The more excited we got, the sounder and longer Randy slept, and the longer we could carry on, making for some of the most powerful orgasms I had ever experienced. The girl's climaxes resonated deeply within me, and reverberated, making me harder and giving me more endurance rather than triggering my own release. It was certainly serendipitous. It was a wonderful little sub universe that I wanted to live in all the time.\n\nAsa Weltschmerz had speculated that after Randy was born, I would not only hear signals from women other than Nora but be actively driven to carry out Mother Nature's prime directive and look for available females to 'make another baby' ASAP. He was anxious for me to knock up Lara to test his hypothesis that once she was pregnant, I would only hear her signals and not Nora's. Lara had told both Asa and me that having my baby was her major goal in life. We had just had a wonderful time in bed, and I had finished up deeply in Nora with Lara smiling at us both, when the conversation turned to exactly that.\n\nNora grinned and said, \"After Lara finishes her schooling and starts her internship in DC, things are going to change up a bit!\"\n\nI must have looked uncomprehending, so Lara took up the thread. \"Nora and I have it all sorted, Robbie. Once we get to DC, all your ejaculations will be confined to my happy little baby box until further notice.\"\n\nI felt the need to ask: \"Such further notice involving?\"\n\nLara giggled. \"My being pregnant, at which time you should direct all your final drives into Nora until she has another baby, too!\" I suppose I was not the only one mother nature was speaking to, and Lara continued. \"My lizard brain says get pregnant now, but I am being practical and planning ahead. But once I walk across that stage to graduate, I am going to crawl up on a rock somewhere and shake my tail at you. I will expect to be mounted and filled!\"\n\nDuty continues to call.\n\n* * * * *\n\nI had an extended conversation with Rock Tappert about the government walking in on the patents. He knew which one it was, and he expected it. He had three more improvements on it yet to file, and they were even more 'interesting', and he hoped the government would help shepherd them through and rope in some related IP to go with them. I asked him what was so sensitive and interesting?\n\n\"What do you know about symbol tables, Robbie?\"\n\nCareful, don't mention baby Randy and Suzie signals. \"Well, I sort of understand them in the context or encoding and decoding information, and Nyquist rates, and in a linguistic context. Is that what you mean`?\"\n\n\"Exactly, and those are simply different aspects of the same thing. For instance, it's easier to decode a coded message if you know how many symbols there are, right? Classic example is that English has twenty-six letters, do a frequency analysis, hypothesize some consonants and vowels, try an alphabet assignment, decode, etc. all that basic old 20<sup>th</sup> century cryptography stuff?\"\n\n\"Yes. I can see knowing the number of symbols in the table would make things easier.\"\n\n\"Certainly. But even if you don't, it can be understood eventually. Many linguists think that is the way babies learn language. Their little brains remember in toto all the words they have heard, and then constantly try to decode the new sounds and have them fit what they already know or have just observed. Each new word or syllable is a symbol in the table, and each new sentence is a message, and they try all the possible symbol assignments and meanings for what they have heard and try to fit them into the sentence or context. The AI people used to call it a 'proof by resolution' and it takes lots of computing power to do it. Quantum computers can do it faster if properly set up, but babies seem to be innately good at it. Some people think human brains can somehow inherently do multistate computing. Some people think the entire universe is effectively a neural network, too.\"\n\n\"But what is the 'national security' angle of these patents?\"\n\n\"You have probably heard people say that quantum computers are powerful enough to break any normal encryption, no matter how many bits in the key. But what if you didn't know how many symbols there were, or if the number or meaning of the symbols constantly changed, too fast for you to match anything. Then even if you had a super powerful computer, it could take so long, or not be done at all, that the message was effectively secure. Further, what if you didn't even know what part of a signal contained information, or your receiver could not tell which changes actually conveyed a message, or couldn't even detect the changes? What if the symbol table and where the information was constantly changed too?\"\n\nI began to see the Navy's point of view. The network we were building could rapidly carry all sorts of normal traffic, but also carry traffic that no one else would even know was there, much less be able to decode. I wonder what else they had in mind.\n\n* * * * *\n\nKhalan King had several more phone calls from the agent that Big Bones Jones had introduced him to, but he didn't return any of them. Chrissy and Joyce were regularly invited to more of Big Bones' parties, but they did not attend, despite their sorority sister's urgings. Khalan's dad Reginald King began to research and score sports agents more thoroughly than any of his buddies ever worked on their fantasy football team drafts. He was playing money ball for his son's real money, and he developed his own analytics, eventually centering around guaranteed contract dollars delivered per a recruit's pre-college recruiting 'star' ratings. Khalan had only been a three star with most services, and unrated by others. Reginald found he could separate and group agents by this measure. Some only got big money for five-star guys, but minimum UDFA contracts for three stars. But a few got big money for the five-stars but also good deals for the three-stars they took on, and those were the ones he focused on. A couple of them were also ESU alums.\n\nHe began to research them in depth. By the time fall football rolled around, he wanted to find some plausible ways to meet these agents socially. He knew they kept databases of college players and their contacts, and he wanted Khalan to be on their lists. If Khalan were to be named a starter after his first fall camp, he would get lots of attention. Preparation could then meet opportunity.\n\nHe also developed his social media skills in researching Chrissy and her sorority. His first impression was that she got posted about all the time by others, but seldom posted about herself. She mostly appeared in connection with her sorority, and always looked fantastic in the photos. She often appeared with another sorority sister named Joyce, and he saw Khalan and Roger in lots of her pictures. He also found the previous photos of her with Big Bones Jones, and that explained a lot. He began some in depth research into Big Bones. Forewarned is forearmed. <br >\n\n* * * * *\n\nI left for Folkestone on a Friday afternoon, in a military plane along with Steven Beyers and another guy I had never seen before. Nora said she understood the need for the trip, but with a clenched jaw. Luckily, Lara was going to be there over the weekend to help. This other guy turned out to be the one I needed to talk with, and the plane was a place we could speak securely. Steven Byers went to the front of the aircraft, out of earshot.\n\nThe new guy looked just like one of my introverted NeuroSignal postdocs, but he had a dominating intellectual presence like my brash cosmologist and ex middle school buddy Ralph. He didn't give me his name, and he said it would be better if we never met again.\n\n\"We need to get you up to speed on a few things so you can understand the briefing you will get in England. I've seen your courses and grades, but I need to quiz you a bit to so I can assess how much you only memorized and never really understood.\"\n\nHe then questioned me mercilessly on all my math, physics, and engineering work so far, and especially on statistics. I recalled my tutoring times with Ralph, Oiler, and Esmeralda vividly, and used their examples almost verbatim. He then asked my about why I took linguistics, and my intellectual relationship with Red Rock Tappert.\n\nI told him how it all seemed to tie together, and that I had read theories about the human brain and quantum entanglement, using some examples from Dr. Augie's talk at the seminar at the med school in Austin. When I finished, he stared at me for a full minute without speaking.\n\n\"You present a real conundrum, Roberts. You know enough to be dangerous, and I can infer the way your mind works, and that makes you doubly dangerous. You don't memorize anything. You must understand how something fits into what you already know to learn it. That makes learning new information more difficult, but also almost impossible to forget once you master it. It also gives you what we sometimes call a \"large working set\" to recognize connections and possibilities that others may overlook. Do you understand?\"\n\nI nodded. \"Are you saying that I am doing a continuous 'proof by resolution' on everything I try to take in? No wonder I get tired when I study.\"\n\nHe looked alarmed. \"Tell me some other people that you know personally that would really understand what we just talked about.\"\n\nI thought a minute, then mentioned Rock Tappert, my linguistics prof, Ralph, Dr. Augie, and Asa Weltschmerz. I studiously avoided Nora and Lara. He asked for more information about Ralph. He took notes on Ralph. Then he looked very suspicious.\n\n\"You make things difficult for me, Mister Roberts. You must know enough about what we are doing to manage things effectively, and to recognize what is sensitive and what cannot be discussed at all. You have to keep some things unsaid, but at the same time completely support all the cover stories we have devised. I cannot have you going off half-cocked, so I am going to have to tell you just about everything about this project. This increases your risk exponentially. You must never slip, even for a second. Can you keep it all in confidence?\"\n\n\"Ask Ambassador Pliskin.\"\n\n\"He already told me he thought you could be trusted. But his risk is different from mine. If you screw up, he will make you disappear. Unfortunately, he would do the same for me, and a lot of good people would be put at risk.\" He paused for a moment, then continued. \"Okay, Roberts. Listen up!\"\n\nIt took the whole flight. I was soon reeling from information overload. There were several layers of increasingly sensitive things to know about the \"New Chunnel\" and least least five layers of deception and cover around it. Oliver Hastings Harrison had not really been cashiered by the navy. He was now moving into an infinitely more powerful position than a mere Fleet Admiral. He had put together a host of intelligence agencies, navies, governments, and business interests, and Abelard Peters and his Pier Group were right in the middle of everything, with trillions of dollars in contracts. OHH being sacked was just a diversion and cover story. Even most of the partners in the project only knew their part of the story, not the whole picture.\n\nDrummond McFadden was brought into the whole thing just after I left England to go back to Austin, and he had been working feverishly on both the real designs and the cover stories ever since. All those multiple new tunnels had multiple new functions: housing supercooled detectors for submarines, neutrinos, and exotic particles I had never heard of, bases for conventional submarines and a fleet of AI UAVs, plus constructing what he called the next version of something called HAARP, and even a tunnel that dipped down near the planet's core to generate terawatts of power. Drummond turned out to be a perfect match for Summer Mawn, and they were the toast of the Walpole Society, both seducing and influencing key politicos and suppliers for the project and making connections at levels the navy couldn't reach.\n\nHe then launched into an extended discussion about quantum theory -- far beyond anything I had discussed with Ralph, Asa, or anyone else. Dr. Augie would be fascinated. He explained things step by step, tying it all to what I already knew, and making clear what nobody knew, and it all made sense to me. The implications were staggering, but the connections between the Chunnel project and NeuroSignal were now clear, and the navy would freak even more when they saw Rock Tappert's latest improvement patent applications. He ended up with a scary concept called quantum mischief, which I first thought might be an appropriate description for little Randy Robert's attitude, but it turns out to be much more than that. My anonymous instructor even knew all about my deal with Lara's dad and selling insurance to the Pier Group, as they were planning to use it to explain my frequent visits to Folkestone before I finished my undergraduate degree.\n\nOnce I finished, he said I would split time between DC and Folkestone. Nora's plan for me to get a big B school MBA would morph into an 'executive MBA program' carried out weekends and part time, and also serve as cover for some other activities. I would be expected to remain committed to working for NeuroSignal for a long time, at a very hefty and accelerating rate of pay. Lara would be happy about the requirement for me to be based in DC, and Nora would be happy to go back and forth to England to visit her folks.\n\nBy the time we arrived in England, I was already exhausted. I grabbed a few hours of sleep, and spent 18 hours on Saturday and Sunday in extensive meetings with Drummond and OHH, with meals brought in. I didn't even get to see Summer.\n\n* * * * *\n\nI suppose since this is the last episode of our little serial journey together, I should give you a brief recap of whatever I know about happened to the rest of that old gang of mine, so to speak.\n\nI saw online that Janet Arroz had made partner at a big accounting firm, and I sent her an ESU football memento from the game we attended together for her office wall and what I thought was a nice hand-written note saying I was sorry things did not end well between us but that I wished her the very best, and that she still had her spot in my all-time girlfriend hall of fame. I know the note and the gift was delivered to her firm, since I used Fedex, but she never replied. I never heard nor saw hide nor hair of her wild roommate Melanie Manchester again. She disappeared into the back alleys of Houston somewhere, but I hoped she was okay, and that her abusive stepfather was not. Lou Baby lost touch with her too.\n\nKevin K. Kretzman married Lou Baby, and he did go to Hollywood, stepping down a few pegs from movie magnate to take a very low paying production assistant's gig at his second cousin the producer's third-rate summer replacement half hour comedy show. His cousin was a mercenary son of bitch and he worked Kevin like a dog, but it eventually paid off. Those accounting and finance courses Kevin had taken as electives back at ESU got him assigned to production design and accounting, and soon he was the liaison between his cousin the tortured artist producer and all the accounting and business functions, handling 'all that numbers shit', and most importantly payroll and managing cash flow for every production. Kevin's ZZZ experience served him well, if almost by accident. Part of their pledge training involved learning the history of all the ZZZ chapters throughout time and all the famous ZZZ alums and the details of their lives and being able to instantly recall and recite such trivia even when just being awakened and hazed in the middle of the night or other times of stress and suffering terrible and humiliating punishments if a single detail was wrong.",
        "Those ZZZ brothers were real pussies compared to Kevin's cousin, so he committed the details of every production budget, contract, purchase order, shooting schedule, journal entry and cash flow forecast to memory. When a new contract was signed, Kevin went over every line for accounting issues, and bugged his father on numerous phone calls to explain every legal turn of phrase to him so he wouldn't get tripped up and embarrassed by anyone or anything. Before long, Kevin was the only person who really knew how the business side of things worked, and the only one his cousin trusted not to fuck him out of his money.\n\nMeanwhile, Kevin's Star Trek parody and the awful but well publicized \"White Trash/Black Bitch\" DVDs had both become cult classics. Orinda got a role in a national network sitcom called \"Chicago Fed\" about a federal reserve bank that became an instant hit with the 18 to 35 demo. I wonder why? She also set a record for per episode TV paychecks.\n\nKevin's cousin's production company pitched five series the next season, expecting to get only one sold. Against all odds, three got picked up. He let Kevin produce and direct the worst one, and it became a huge hit. His casting decisions included several hot new females and the series got picked up for two more seasons. Keven developed a reputation for having a real eye for picking sexy starlets, not pretty enough to be models or leading ladies, but hot as hell, and he later became known as the \"new Russ Meyer\" which Kevin considered a great compliment. Lou Baby was a surprisingly understanding wife and was once quoted as saying that Keven felt that he owed it to his audience to make sure the girls he cast were really hot.\n\nLou Baby became just as big a celebrity as Kevin, especially after she agreed to be on a reality show in the \"real housewives\" tradition, starring the wives of young Hollywood producers and directors, called \"Hollywood Up and Comers\". Lou was the brashest and most outspokenly sexual of all the wives, and she later told Kevin she just acted like she thought Suzanne would have. One scene went viral. Lou was seated at lunch with the wife of an old-line A list director, who remarked cattily that Kevin made \"lousy B movies for morons\". Lou Baby told her \"his movies make four times as much net profit as your husband's overacted and over-budgeted dinosaurs, our mistress is much better looking than yours, Kevin says she is a much better cocksucker, and I can tell you for a fact she eats pussy a lot better than yours does!\" The other wife's shocked expression was converted into an emoji that became immensely popular.\n\nAt the televised banquet where the show won several adult awards, Lou Baby and Kevin arrived with naked starlets on leashes like I had at the Halloween party, and their outrageous reputation was cemented. They were then interviewed by the ESU alum that was now the TMZ executive producer, and they told her that \"actually we did some wilder stuff with even hotter people when we were in college.\" A magazine article lauded Kevin as the most promising young director in Hollywood and went on to say that his original films were now considered in the same vein as George Lucas' student film called THX1138. I almost puked.\n\nJay Kincaid won his seat in the US house with 75% of the vote and became the new political wunderkind overnight. He then became the youngest Governor of Texas. As soon as he turns 35, he will be the leading candidate for US VP. His opponents have tried everything to bring him down, but all the publicity just makes him more popular with his voters.\n\nChrissy stayed under my radar for years, and then one day Lara mentioned that she had a new client, one of my ex-lovers that wanted help to create a legal foursome marriage. I was not surprised to hear about Joyce, and I thought Khalan, and Roger, were pretty good guys.\n\nThe amazing waterskiing Candy never got into med school, but she ended up married to one of those megachurch TV evangelists, and appeared on TV every Sunday, in dresses that certainly did not fully showcase her tan.\n\nBigun and Alley got married, and they run her dad's pawn shops, and have 8 kids, so far.\n\nTheo Cadwallader managed to turn his cushy Wall Street job into a huge scandal involving a Ponzi pyramid investment scam. He was convicted, but he had a bulletproof trust fund (thanks to his parent's retinue of Philadelphia lawyers) that couldn't be attached or invaded. So, he just tried to disappear from the headlines, something he achieved.\n\nJackson Pollack Jackson III married that former Chicksee Dix lead singer, and they had kids via a surrogate and egg donation from a friend, which was a good compromise with his parents to avoid being disowned. They also consulted Lara on structuring their marriage, prenups and estate, as she is now the leading \"Modern Family\" lawyer. The new bride told her that \"He really seems to prefer my butt!\"\n\nOne of the companies we had to deal with for a Chunnel cover story turned out to be run by a reclusive billionaire, and I discovered at a business dinner that his wife turned out to be Suzie Packard! She was still signaling for everyone in the room. At least she remembered me as \"one that got away\". Lara and Nora were deeply sorry they didn't attend that dinner with me and remain curious about her to this day.\n\nI saved talking about Suzanne Pliskin for last. She has a very prominent place in my all-time girlfriend hall of fame: the top one that I did not end up having children with; and the one that got away. I still dream about her sometimes -- penetrating her from behind and enthusiastically banging her head against that little wall mounted cushion in my dorm room, or being trapped with my head between those delicate, olive skinned, and super strong thighs, tasting that incredible sweet yet savory pussy. Two of the women that are the mothers of my children and that I sleep with every night are very understanding, since they occasionally have the same kind of dreams.\n\nSuzanne moved on from GWU to an endowed chair at Georgetown. She tried to avoid the spotlight, but her father's position as National Security Advisor to three presidents, including the current one, made that virtually impossible. Her husband Mike's new career made it even tougher, as after his incredible recovery he became one of the top motivational speakers in the country, in fact using the same speaker's bureau that booked my Dad to sales meetings, and collecting almost Clintonian fees, but without any quid pro quo or teenagers on private jets. There was one story in the Washington Post that Nora pointed out to me, hinting that there was a connection between Suzanne Pliskin and some judge who was on all the lists for future Supreme Court nominees.\n\nAlexander Walton was named DDCI and was then rumored to be about to replace a retiring Ambassador Pliskin as National Security Advisor. I owed the Ambassador a favor or two, and vice versa, and I also figured the Ambassador knew a lot more than he let on. He always did. Plus, I'm not sure he was really retiring, am I?\n\nWe eventually moved back to Texas for tax reasons, but the NeuroSignal pay was very good, and Nora and Lara both made more money than I did, so we had a place in Virginia and one in England. My dad then quit all consulting and public speaking and my Mom quit teaching to help us in caring for and homeschooling their growing crop of grandsons. I assumed all the boys would get some of my talent, if we could keep them off the booze and drugs until their antenna arrays formed, and we never had any girls, leading Asa to further develop his extra-chromosomal sperm theories. Asa wanted to try do some sort of IVF thing to make it more likely to produce a girl, but Lara and Nora both wanted to leave Mother Nature to her own means. The boys began to demonstrate some spooky abilities well before puberty, and we had to have 'the talk' with all of them about age 5 when they observed the dogs breeding, and we began to explain the birds and the bees, haploids, diploids, and adult relationships.\n\nMy final dating advice to the boys would have been the same with or without their talents and the ability to read Suzie signals.\n\n\"You will never fully understand women, but you can learn how to treat them in such a way as to minimize problems and maximize joy:\n\n(1) Never smoke, drink, or take any drugs. Women are much more intoxicating and will make you much happier for much longer.\n\n(2) Treat every woman as if she were beautiful. Look at her like you want to fuck her but act like such a gentleman that she knows you won't try it unless she gives you a sign. Take her interesting places and show her off like she was a trophy wife. Dance with her every chance you get.\n\n(3) Treat every woman as if she was super smart. The smart ones will recognize you are being classy, and the not so smart ones will still like being treated that way. Once you have completed (2) above, look her in the eye and engage in interesting conversation about her, but never about sex until she raises the subject. Always look interested but never leer.\n\n(4) Treat every woman as if she had as much or more power as the Queen of England. Be respectful. Never swear or otherwise offend her. Never embarrass her or play practical jokes on her.\n\n(5) If she does give you the sign that she wants you to seduce her, do it slow and gentle and makes sure she gets super wet before you do anything else.\n\n(6) Don't talk dirty to her until her legs are open and she is making a wet spot.\n\n(7) Make her come at least once before you do.\n\n(8) Make her come at least once after you do.\n\n(9) Cuddle her for at least an hour or until she goes to sleep.\n\n(10) Once you complete the above checklist three full times, you can ask her frankly and openly for anything sexual you want. She will do it for you gladly.\n\n(11) Never accept a blowjob without a swallow.\n\n(12) After she does that for you, tell her she can have anything she wants, and mean it.\"\n\nAll our boys had amazing talents, well beyond my capabilities. But then, that's a whole 'nother story ..."
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "oral",
        "anal",
        "fraternity",
        "sorority",
        "pregnancy",
        "milk maid",
        "threesome",
        "foursome"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-50"
}