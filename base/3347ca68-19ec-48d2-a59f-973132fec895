{
    "title": "Ole Betsy the Wingman",
    "pages": [
        "Authors note: This is a Summer Lovin' 2021 entry. Please read and vote for this (and all the stories.) Comments are appreciated too. And special thanks to Winsome Web for her proofreading and editing help.\n\n\"Hi Jack. Can we, Umm, borrow Ole Betsy?\" It was Julie from across the street, and Heidi from three houses down. And as usual, they were looking good. \n\nOle Betsy was a tractor. Technically, it wasn't really a tractor, it was a riding lawnmower. But that's just splitting hairs. If it had been just a little older and a little more expensive, it might be an antique. To me, it was just old. But I had a picture of my dad riding it when he was about ten years old with my grandfather standing next to him, and I had been about ten the first time I was allowed to ride it. Legend had it that she was named after a cow on the farm that my grandfather grew up on, and he used to joke that Ole Betsy the cow could go faster than Ole Betsy the tractor. And having inherited caretaker status for this heirloom (or was it junk?) Ole Betsy was now mine. \n\n\"Oh, sure. Anytime, let me get the keys to the shed.\" It was a hot summer's day. And I was now thoroughly thrilled at my decision to buy this house in a neighborhood of homes, all on three-quarter of an acre lots. Sure, the water bill was hell, but I remember seeing Julie for the first time the day I was moving in and thinking that just getting to look at her made it all worth it. \n\nI'm also reasonably handy, and especially in this day of watching \"how-to\" videos online, fixing things was even easier. And this mower ran flawlessly. Better than new, actually, because modern-day spare parts are simply made out of stronger and more durable plastic than the original parts, so it wasn't the guaranteed broken-down puddle of oil that it would have been under other circumstances. \n\nExcept for the shaking, that is. It was still sixty years old, it was still just a one-cylinder gas engine, and the sixty-year-old technology meant it probably shook just as much brand new as it did today. After a few minutes on this thing, your fingertips were numb. A few more minutes your toes. Then your ass. But it was free. It worked. It mowed the lawn, and every time I used it, it made me remember my dad. \n\n# # # # # \n\nI was happy to let Julie borrow the mower. She had borrowed it last week, and I knew just from the few minutes it took to explain the quirks of starting sixty-year-old technology, that she had an aptitude for this sort of thing. \n\nShe was a sexy tomboy type. Drop-dead gorgeous, even in her typical casual outfit of shorts, T-Shirts, and flip flops most days I saw her. I had to admit, I felt something strange in the pit of my stomach every time I saw her. She made it hard to breathe. Hard to think. Hard even to speak. But in a good way. \n\nIn this odd little enclave of a neighborhood, with affluent residents, she and I were outliers, me who mows my own lawn, and Julie, a single professional on a street full of trophy wives. And for the past year, she and I were interacting more and more, even if it was always under the guise of house-related chores. Julie was more skilled at keeping plants alive, whereas I mainly lifted heavy things for her. In reality, I did anything that led me to spend time around her. She did seem to like me, but I never felt I was viewed the way I wished I was viewed by her. And where the Stepford-wives like neighbors might have endlessly tried to fix her and I up together, there was that deal-breaker. Because (gasp) as I mentioned; I mow my own lawn. The Stepford's though, as I had nicknamed them, tended to also be easy on the eyes. \n\nI was glad that I hadn't thrown out the original steel seat it came with when I bought one of those obnoxious yellow plastic replacement seats. These were the large seats, that almost looked like one-quarter of a Sombrero, a Saddle style seat I think they called it. The vibrations from the steel seat were absolutely unbearable. With the plastic seat, at least I could finish mowing the lawn before all my fillings fell out. \n\nI remembered the week before, she did a nice job driving it, she knew just how to make sure it didn't stall, and she did a very nice job mowing her lawn. \n\nThat day, I had stuck around the barn cleaning up a bit, but also listening off in the distance, because I knew it occasionally wouldn't start very easily if you turned it off while the engine was hot. I did notice something odd at one point, and I peeked out to look. She was sitting still, in the seat parked next to her house, but stayed there, just parked, for about five minutes, in a strangely upright position. Then she turned off the engine, hopped off, and practically ran into her house, and didn't appear again for about twenty minutes. \n\nI made sure my phone ringer was on loud, in case she ended up calling me to tell me it had broken down. But I didn't want to be too obvious that I had been watching either. I went back to the cleaning up around the barn, and maybe twenty minutes later, I heard the engine start back up. \n\nI peeked out, and oddly, she was in a different outfit, still shorts and a T-shirt and the flip flops that showed off her sexy ankles and toes, but definitely different. She had a few final passes to do before she finished her lawn, then I heard her driving up. And driving right into the barn, perfectly centered left to right and front to back, and hopped off. \n\n\"That thing's got some shake to it, doesn't it? Now gimme that gas can, I'll fill it up and bring it back.\" \n\n\"Oh gosh, no don't worry about that,\" I tried to resist. Except she insisted and wouldn't take no for an answer. What a hot tomboy, I thought to myself. She was taking the gas can and would refill it, even though it was a five-gallon gas tank. For a brief moment, I thought it might be too heavy for her after she filled it up, then I remembered who I was talking to. \n\n# # # # # \n\nBack to the present, with Julie and Heidi at my front door, Julie said, \"I'm going to show Heidi how to use it too, if you don't mind? She needs a trim too. Her lawn. I mean her lawn needs a trim too.\" Julie stumbled over her words. \n\nHeidi laughed out loud. \"C'mon, it's not THAT thick. Just a little sculpting is all it needs.\" I pretended not to notice how much innuendo was contained in that comment. But it also made my little man-brain go into overdrive. If Julie was teasing Heidi about having a lot of pubic hair, did it mean Julie didn't? Could Julie be bald? My head was going to explode. \n\n\"Oh, no problem,\" I said as I got the keys and we all walked around the front of the house to the shed. \n\nI sat back, knowing the Julie knew exactly what to do. She showed Heidi the controls, told her all the tricks about getting it started, keeping it running, and they were off. \n\nI peeped out the window as I watched them drive off. Julie got off after backing the tractor out and driving down the driveway, and I saw her get off and Heidi got on. I couldn't hear what they were saying of course, but Heidi said something and they both laughed. \n\nI had also, of course, noticed their outfits when they first came up, but I tried to keep my jaw in place and not to stare. They were both were in yoga pants and tank tops, Julie in her usual flip flops, and Heidi in running shoes, both of them in baseball caps for a bit of shade. But Heidi's yoga pants were highlighting the outline of her vulva, a spectacular camel-toe. And Julie's were hugging the shape of her ass cheeks. It was only 10:30, but already hot. So for me at least, a man who thinks sweat is a little sexy, it was even sexier. \n\nI only had a partial view of the front of Heidi's house from where I was. I laughed at myself as I went into the house, ruffled through the hall closet for my binoculars, and went upstairs to the guest bathroom, stood carefully on the counter to get high enough to see Heidi's entire front yard, side, and part of the back. I of course turned off the lights and closed the doors, to make sure I couldn't be seen, watching the two beautiful women using my old riding lawnmower. \n\nThe one curious thing, was the flip-flopping drivers, always with lots of laughing as they traded spots. Finally, and this was just about the sexiest thing I had ever seen in my life, Heidi sat in Julie's lap, and they went down and back up, still laughing. I noticed that Heidi wasn't really in Julie's lap, exactly. Julie pushed herself to the very back of the seat and splayed her legs apart awkwardly to make room for Heidi, who was perched directly on the hump at the front of the seat. Knowing how that mower shook and vibrated, I couldn't imagine them enjoying the experience. But clearly, Heidi was very eagerly leaning forward, almost enthusiastically. Rocking back and forth a bit, even. \n\n\"Nah, it can't be,\" I concluded to myself. \"But what if?\" The little gears in my head were spinning, causing the hydraulic pumps in my loins to start spinning too. \"She's humping the chair. She's using it to make herself have an orgasm. And that's what Julie did when she went into her house last week!\" was the internal dialogue in my head. The practical and sensible part of me tried to be sensible and talk myself out of such a wild theory. The analytical part of me kept staring through the binoculars, and pointed out how the evidence seemed quite convincing. And another part of me was fully erect imagining. And now, Heidi was leaning forward, almost visibly humping the rise of the seat. Could I be right? I remembered years back, I had an unusual online chatting friendship with a 'biker-chick', and she had told me how sitting on the back of a biker's Harley Davidson would make her have an orgasm. Well, if that were the case, I could only imagine what Ole Betsy would have done to her, because Ole Betsy would make a Harley seem like sitting on a cloud. A cloud covered with pillows. A cloud, covered with pillows, while sitting in a Lexus. \n\nThey drove up behind Heidi's house. They got off, said something to one another, laughed some more, and went into Heidi's house through the back door. I couldn't figure out what was going on, and other than seeing a little movement through a window one time, nothing happened for about twenty minutes. And every time I said to myself that I was being ridiculous, I would also wait one more minute to see if something happened. Then ten \"one-more-minutes\" later, I saw the back door open again. \n\nOddly enough, both of them had changed clothes, just like Julie had the week before. What was going on? They were still in old yardwork clothes, this time shorts and T-shirts, doubtlessly one of Heidi's shorts that Julie was borrowing. But why had they changed? \n\nThe next thing that happened made me realize how smart they were. Heidi had something in her hand, and put it to her mouth. It was a small round inflatable pool float, donut-shaped. Why are they so smart, and why hadn't I thought of that? But more to the point, why had they changed clothes? \n\nThe pool float inflated, and this time Heidi sat on the seat, now cushioned by the floatie, and Julie sat on the back steps watching, as Heidi made short work of the rest of the lawn. \n\nAs Heidi wrapped up mowing, she threw the pool floatie off by the side of her house, then they headed back to my house. Instead of hopping on and sitting in Heidi's lap, which I secretly was hoping for, Julie just walked alongside the tractor, as Heidi drove toward my house. \n\nI practically tripped and fell on my face, but I did manage to get downstairs and come out my door just as they were driving up. This worked well, it made it seem like I wasn't some sort of pervert watching them with binoculars by standing on an upstairs bathroom counter. I laughed at myself. \n\nHeidi jumped off and said, \"You park it\" to Julie. Julie hopped on and eased the old tractor into the shed. \"How'd it go?\" \n\n\"Fantastic!\" They both said. \n\n\"No troubles?\" \n\n\"No, no, not at all. I mean, the vib... I mean the shaking just got to us,\" Heidi said. She was more outgoing and boisterous, but Julie was still my dream girl. \n\n\"Oh god, I know. I should have warned you; it'll make your fingertips tingle.\" \n\nI noticed a smirk on Heidi's face. \"Fingertips. Yeah\" she said with a laugh. \n\n\"Mine too,\" Julie was nodding. \"Everywhere tingles.\" \n\n\"We did have to take a little break. The seat really did get to us, we needed a cigarette afterwards.\" As a boy, with a dirty mind, I obviously wondered if she was being dirty, but I pretended not to notice. I also knew Julie at least, wouldn't smoke a cigarette in a million years. I was instead in my mind asking myself, is it wrong that I want to sniff the seat? \n\n\"Ok, well feel free to borrow any time. It's summer and rainy, this time of year you almost have to mow at least once a week. \" \n\n\"Thanks!\" Julie smiled her dazzling smile, as Heidi nodded. \n\n\"Also, help yourself to it even if I'm not home, but just you two.\" I happened to have two keys on the key ring that fit the padlock. I gave one to Julie. \n\n\"Ok. Actually, I think Jillian down the street is going to want to try this out too. Do you mind?\" Yet another of the reasons I had such a crush on Julie. She was always thinking of others. \n\n\"No, not at all. I just hope the lawn guy won't get mad at me!\" I joked. \n\n\"Oh, he'll be ok. He does the edging and pruning too, his job is safe. We're making it easier, in fact,\" Julie said. \n\n\"Yep. Especially with how you keep everything trimmed,\" Heidi joked. Another pubic hair reference? my imagination went wild. Julie shrugged, as I noticed she tended to do whenever Heidi said something outrageous. \n\nThey started walking home. I had turned to make sure the padlock had clicked, but I had also started walking behind them, without their knowing that I was in earshot. \n\n\"I'm still tingling!\" Heidi quipped to Julie. \n\n\"I told you!\" Julie said with emphasis. \n\n\"Round two?\" Julie nodded to Heidi's question. \n\nWhat were they talking about? And what was Round one? They kept walking away, and I went back to my window. I watched them reach Julie's front door, except I saw Heidi hold Julie's hand and squeeze as they walked in. The door clicked shut, and I knew I might be there for hours with the binoculars. This time around, it was about twenty minutes later. Heidi walked out, looked around to see if anyone was out, and turned around and kissed Julie on the lips. It wasn't a peck. They held hands, lingered a bit not wanting to let go, then Heidi turned around and left. \n\nI admit it. I went straight to my room and pumped my cock, imagining how they might have kissed if they hadn't been outside. \n\n# # # # # \n\nThe next day, I needed to mow my lawn. I had meant to do it the day before, but I had wisely chosen to let Heidi and Julie borrow it. And I had meant to do it earlier before the day got too hot, but it was about three in the afternoon now. \n\nI was only about two minutes into it, when I thought I heard yelling. Then I knew I heard yelling. It was Julie and Heidi, except this time Jillian was with them also. they were dressed in beautiful sundresses, all three of them holding glasses of wine. They were a little tipsy, laughing up a storm. \n\n\"Get off, we wanna drive the mower.\" Julie giggled. I was amazed at how Julie got along with everyone. Even with her career, she was also great friends, and found common ground with the women living lives of luxury in our neighborhood. \n\n\"Yeah, get off. Some of us want to get off too! I mean, get on,\" Jillian said. The other two women burst out laughing. \n\nI started to say, \"Really? while you're dressed so nicely?\" then I realized to just shut up. Why would I want to stop them? \"Sure!\" I smiled. \"I'll hold your drinks! Wow, you're going to be the best-dressed lawn guys the world has ever seen!\" \n\n\"Well, thank you!\" Julie said. \n\n\"I'm already tingling,\" Jillian said with a smirk. \n\n\"Just you wait,\" Julie joked, then continued. \"But actually, we should mow your lawn for you. We were interrupting,\" Julie said, again always thinking of others. I swear she had a halo around her, but maybe it was my imagination. \n\nJulie proceeded to show Jillian how to ride it. It was a shorter lesson than usual, since it was just how to ride it, not to start it, get it out of the garage, etc. Jillian was also a good listener. Julie started Ole Betsy up, and backed out, then took one pass down and up. \"Ready?\" she said to Jillian. \n\n\"Ready!\" Jillian climbed on, and made a bouncing motion as she sat on the seat. \"And they're off!\" she said. Julie and Heidi stood watching as Jillian made a lap. Jillian went down, then came back. \n\n\"How'd it go?\" Julie asked as Jillian came within earshot. \n\n\"I need another lap,\" Jillian said. She didn't even stop, and turned around for a second run. I wasn't standing right by Julie and Heidi, since they seemed to be having their own conversation, but we were all watching Jillian go back and forth. She came back, and said, \"No, no, not yet... Almost there!\" And she made one more lap. \n\n\"She'll really be tingling by the time she comes back,\" Julie said to Heidi, but loud enough to include me in the conversation. \n\n\"I don't know how you mow your whole lawn, Jack.\" \n\n\"Well, I am going to borrow your pool floatie idea. That was brilliant! The seat is kind of hard.\" \n\nJulie raised one eyebrow, and I knew in an instant that she noticed my slip-up, that I had inadvertently revealed that I had been watching. And it knows how to use it,\" she quipped. \n\n\"It's quite a massager, I have to say,\" Heidi said. \"Definitely leaves you happy.\" \n\nBy now, Jillian was about back. I thought she'd wait around, but she climbed off, took her glass of wine, said \"I'll be at the house.\" and made a beeline for Julie's house. \n\n\"I'm just a bit behind you,\" Heidi said as she got on the mower. Heidi however, seemed to be ever so slightly tipsier than Julie or Jillian, and she very obviously humped and ground her pelvis against the seat as she started moving off. Julie stayed by me. There was something about Julie, her quiet poise. This was where normally she'd have rolled her eyes at Heidi's outrageousness, but she avoided eye contact this time. I liked this woman more every single time I talked to her. \n\n\"You'll never get your lawn finished, with us interrupting you every time,\" she said. \n\n\"I'm having a blast watching you all. This beats mowing by a long shot. Besides, you're helping me mow,\" I said. But at the exact moment that I said that, Heidi misjudged her U-turn and mowed over about a quarter of the flower bed near the street. Then, she mowed diagonally across the nice symmetrical mow lines that had been established. We both died laughing, with Julie of course saying she'd help me fix it later. \n\n\"She may be mowing while intoxicated,\" I joked. \n\n\"We love that mower,\" Julie said. Then thoughtfully she said, \"You're a bit too observant though, Mister Jack. Too observant,\" she trailed off mysteriously. I wondered what she meant. In my imaginary world, I thought that maybe Julie knew, that I knew, that the three lovely women were having orgasms due to the intense vibrations of my riding lawnmower. \n\nHeidi came back, got off the mower, and stated flatly \"I'm going to the house. Gimme my drink.\" She turned and started walking to Julie's house. \n\n\"I'll catch up,\" Julie said. \"Let me finish that side of the lawn, Jack,\" and she pointed to the side that Heidi had partially wrecked. \n\nShe started off, and it took her about three back and forths to finish the side of the house they had been mowing. \n\nShe came back, her face flushed, and some delectable beads of sweat on her upper lip. \"Hold on a sec,\" I said, stopping her before she turned it off. \"Lemme show you something. Leave it in neutral.\" I was thinking to myself that maybe I was being too bold, but the moment had taken over. ",
        "Julie stayed in the seat, and I carefully reached over to the controls. \"When it's in neutral, you can also do this...\" I said, and I gradually inched up on the throttle, knowing that there was a varying crescendo of vibrations as the engine speed increased. \n\nI reached the RPMs where the type of vibrating changed. It had a different tempo, not quite as violent since the engine was spinning harder, but it was a different feel. And in one of the most wonderful moments of my life, with her left hand, Julie grabbed my forearm and held tight right as I got the motor to that speed, and somehow told me without words, 'don't move that throttle!' It was magical. Electric. I didn't want it to end. \n\nFinally, even though I couldn't hear anything over the noise, I saw her whole body tense up. And her grip on my forearm got much tighter. She inhaled deeply. I looked down at her forearm and saw goosebumps. For about fifteen seconds, she didn't move, I didn't move. \n\nFinally, she opened her eyes. Relaxed in the seat. And I let the mower return to an idle speed for a few seconds, then turned it off. \n\n\"Wow,\" she said, gazing deeply into my eyes. Her chest was red, her brow sweaty, and she was in a daze. \"Just Wow.\" she said. \"I was wondering when you figured out what we were doing. I mean, it's not like Heidi is subtle,\" she chuckled. At this moment, I was having a hard time reconciling that not only was Julie's pussy wet from the orgasm, it was also mixed with her sweat from this being a hot summer's day. I know women think men are weird, but I wanted to lick her sweaty pussy and sniff that lawnmower pan seat! \n\n\"Hey,\" she said. \"I've never forgotten that homeowner's association meeting years ago. I know you can keep a secret.\" I nodded, remembering how I had seen Julie accidentally knock over a glass of punch, but when the evil homeowner's association president strode over to chastise whoever spilled the drink, I said, \"Oh, I'm sorry. I'm so clumsy.\" Julie seemed so grateful over such a little thing, and that was the moment where we knew we would get along well. \n\n\"Ok. Listen carefully. Watch me go in the door. Then take the long way around the house so you don't walk past the front windows, then go into the garage side-door, it'll be unlocked. Then go into the house from the garage, that leads into the laundry room, and you'll want to stay there. The door will be cracked. \n\n\"Got it,\" I said, although I wasn't sure what I was getting. I realized Julie hadn't taken her wine glass with her. But there were a few sips left. I'd take it with me to her house. \n\n# # # # # \n\nI followed my instructions, and a few minutes later I was through the side door of the garage, and into the laundry room. Through the cracked laundry room door, my eyes almost popped out of my head. With the door cracked, I was looking out the laundry room door, which was immediately next to the kitchen, but the cracked door faced through an archway from the kitchen to the living room, putting me perhaps 20 feet from the Sofa. \n\nI didn't have the best angle to see, but Jillian was on all fours on the ottoman, which was partly blocked from my view, Heidi right behind her, naked, holding a big Magic Wand style vibrator on Jillian's clit, and gliding a penis-shaped vibrator in and out of Jillian's pussy. Julie was sitting on the edge of the couch, where she was looking in the direction of the laundry room where I was hiding. \"You girls keep going, I'm just going to watch for a bit.\" Except she opened her legs wide and rested her heels on the edge of the sofa, facing me, showing me her spectacular pussy. Then reaching down and slipping her middle finger into it. Then watching Heidi bringing Jillian to an orgasm. \n\nI was impressed, and as a lifelong learner, I was also studying and remembering what and how Heidi was doing to Jillian, so that I'd be a better lover. And what Heidi was doing, was making Jillian have an orgasm. She wasn't putting on a spectator show like a porn movie would do, she was simply and determinedly focused on making Jillian cum. \n\nBut sweet wonderful Julie, she was giving me a show, using her middle finger only to thrust in and out of her hairless pussy, at times looking at the girls, and once in a while looking straight at the cracked open laundry room door, knowing I was watching. \n\nHeidi was really good. Her hand holding the magic wand was the main orgasm-inducing tool, but the combined effect of the wand on her clit plus the vibrator in her pussy was pure genius. I needed to try that someday. I daydreamed it would be with Julie. \n\nAnd then it happened. Jillian was on all fours on the ottoman in the living room. And she tensed up and made these involuntary movements of her leg and torso and arms, and for fifteen, maybe thirty seconds, had an amazing orgasm. While it was happening, Heidi took the penis vibrator and popped it in her mouth to taste Jillian, and put the magic wand to her own clit. When Jillian finally came back down to earth, the girls all looked at one another and smiled. Julie was still showing me her pussy. \n\n\"Your turn Heidi!\" Julie said. \n\n\"No, sit over here,\" Julie said, and pulled the Ottoman right up against the cushion of the couch, making sure it was in my line of sight. I know Becky from Tom Sawyer wondered how Tom could be so noble. Well, I had to ask, how could Julie be so noble. Julie had successfully positioned Heidi where her parted legs were directly facing me. \n\nJulie guided Heidi into position, and told her to hold her knees up. I got a perfect view, even if it was a bit further away than I wished. Heidi wasn't bald, but she was groomed with very short pubic hair. \n\n\"I know what you like,\" Julie said with a smile, and for a moment I was sad that her head was going to block me from seeing Heidi's pussy, as she kneeled in from of the Ottoman to lick Heidi. Except Julie, magnificent Julie, made a point to arch her back a bit, to let me look at her ass and pussy from behind. Including an answer to the mystery I had puzzled over in my head many a time, what her tiny little hole back there might look like. It looked like a tight little thing, magnificently tiny. \n\n\"I'm getting the strap on\", Jillian said, and I saw her disappear off out of view. I had almost forgotten about her. But I watched, again in amazement, at Julie licking Heidi's pussy. \n\n\"Fingers too. \"I heard Heidi say, and I saw Julie reposition, keeping in mind I was a bit of a distance away, but I could see her elbow repositioning, so that clearly, Julie was still licking Heidi, but now was fingering her too. \n\nI was mesmerized, but paying attention and learning. Heidi was a groaner, making deep-sounding groans of pleasure. I noticed a switch in tempo as Julie found Heidi's spot. \n\nSuddenly, Jillian appeared in the kitchen, completely naked, wearing a strap-on. I was worried that she might see me, being so much closer than when they were by the couch. She opened the refrigerator door and pulled out a bottle of water. Then she turned to the cabinets, and got three glasses, and poured water for all three girls. She walked back to the living room, carrying two of the glasses, walking just feet away from the hiding spot Julie had set me up in. Luckily, she didn't see me or hear my heart pounding. Again, learning lessons, Jillian quietly placed the water glasses on the side table, without interrupting Julie and Heidi. \n\nTo my horror though, Jillian came back the way she had just walked, straight toward me. I thought to myself there was no way she hadn't seen me, but apparently, she hadn't. She opened a drawer and took something out, but she was leaning over the counter and at an angle behind the refrigerator, so I couldn't see. \n\nI looked back to Julie and Heidi, because Heidi's grunts were getting more intense. Then I couldn't help but notice, with panic, Jillian walking straight to the door and leaning up to the crack. She had a bottle of water, and was reaching through the crack in the door to hand it to me. With her other hand she made a \"shh\" motion, and whispered, \"Maybe this will help. But take your clothes off, would you?\" and she walked back to the Sofa. \n\nIn my distraction, I had missed when Heidi's orgasm had begun, but she was still in the throes of it as I looked past Jillian's tanned behind. Heidi curled her toes, writhed around, and was in a blissful daze for about fifteen or twenty seconds before regaining her composure, and eventually coming back to earth. \n\nJillian handed Julie the water that was in her hand, and picked up one of the other glasses and gave it to Heidi, who was shifting into a sideways lying down position. \n\nI was terrified. I was right near the door to the garage, I could just run, I thought to myself. But if Jillian was telling me to be naked, and Julie was the one who invited me in the first place, I guess it would all be OK. While they were sharing a moment of quiet chatter, I undressed as quietly as I could, worrying over every sound, the zipper, my knees making those crackling noises they made sometimes. And I almost bumped my head into the door as I leaned to drop my pants. But I managed to do it. I was totally naked. \n\nThe chatting came to an end with Jillian standing up, pointing at Julie, then at the armrest of the sofa. Julie seemed to know what Jillian meant, and she stood up and even though it would have made more sense to lean over the armrest facing the back of the sofa, meaning I would only see their backs, my beautiful Julie stood to the left side of the sofa to give me a sideways view, and leaned forward, her elbows resting on the edge of the armrest. \n\nQuickly, almost roughly, Jillian grabbed Julie behind the hips and given how wet Julie surely was, she thrust the strap on penis right into Julie and started fucking her. Jillian was fit and athletic, I was impressed with the power she was fucking Julie with. Heidi remained stretched out on the couch, except as circumstances dictated, Julie's face wasn't far from Heidi's. And they looked at one another and leaned their heads in for a beautiful kiss. \n\nJulie seemed to like what was happening too, I saw her pushing back into Jillian, matching Jillian's thrusting motions. \n\nJillian seemed as if she knew exactly what to do too. Obviously, they had done this before. Then, from her position on the couch within arm's reach of Julie, Heidi reached out and started rubbing Julie's clit as Jillian kept on fucking with the strap on. \n\n\"Yes... Yes!\" Julie was almost shouting as the tag teaming brought her to orgasm. As she came, she pulled herself away from the Strap on, and had to prop herself up, as her body spasmed, as she tightened and flexed her abdomen, seemingly unable to stay still. The other girls seemed to know to back off and wait. \n\n\"All Better?\" Heidi asked with a chuckle. \n\n\"God, yes,\" Julie said, as she reached for her glass of water for a sip. \n\n\"I guess we should be going, huh Heidi,\" Jillian said to Heidi. \"Julie, I wish I could just snap my fingers and there would be a naked man waiting for you. I know you like the strap on, but sometimes there's nothing like the real thing, is there?\" Julie was looking at Jillian, and they were sharing the inside joke, that Jillian had seen me. \"You single gals, you need some real dick sometimes, I have to say.\" \n\n\"Now? It's only 4:00, we have about an hour before people start coming home.\" By people, Heidi meant her husband and Jillian's. \n\n\"I got a text from Brad; he's coming home a bit early. We need time to get freshened up, I think.\" \n\n\"Oh. OK, I guess. I was getting awfully comfy you know.\" Heidi seemed to want to keep playing. \n\n\"We should run. Julie, you just relax here, drink a little more water.\" Heidi filled Julie's glass of water back up by pouring what was in hers into Julie's glass. \"Need anything from the kitchen? Or maybe a towel or something from the laundry room?\" she said mischievously. \n\n\"Let's go, Heidi,\" she said, and the two ladies picked their clothes up from the other side of the couch. I hadn't even noticed the clothes before. \"C'mon, we'd better hurry.\" \n\nHeidi started to walk toward the laundry room, when Jillian stopped her. \"No, let's go out the FRONT door this time. It's not like we're making a walk of shame, right?\" They laughed, got dressed somewhat quickly, and headed to the front door, with Jillian having to prod Heidi to hurry a time or two. \n\n\"Bye Julesie... See you tomorrow,\" Jillian said on her way out. \"Don't do anything I wouldn't do!\" \n\nJulie laughed and nodded. Jillian and Heidi left. \n\n\"So, what did you think?\" she called out. \n\nI wasn't sure what to do. It had been Heidi telling me to get naked, so Julie didn't necessarily know that I'd be naked. \"It was amazing! God, that was so hot!\" \n\n\"So you liked it?\" \n\n\"Of course, I liked it!\" I was glad that I had been in just shorts and a T-Shirt, I managed to silently put them on as she was talking. I debated staying naked, but thought I would try not to look too presumptuous. \n\n\"What did you like best?\" \n\n\"I liked how you made sure to show me their pussies.\" \n\n\"I thought you'd like that.\" \n\n\"But I especially liked when you made sure to show me yours. And your ass. You have no idea how I've imagined seeing you naked.\" \n\n\"I like being looked at,\" Julie said, shyly. I was still in the laundry room, and we were talking with me still hiding. I heard a noise, the faintest noise. It was coming from the garage behind me, the faintest sound, but it sounded like the door opening. I had a theory in my head. \n\nI came out of the laundry room. \"I guess I don't need to hide any more, right?\" I walked directly toward Julie who was sitting on the couch. I squatted on the floor a few feet away. \"But I was so far away. I hardly got to see.\" I brazenly stared at her pussy. \n\n\"So, when I opened my legs wide, you didn't get a good enough look?\" \n\n\"No, I could barely see, I was so soooo far away!\" I joked. \n\n\"Maybe this will help,\" Julie laid back against the back of the couch and raised her knees up to her shoulders and her legs wide, giving me a perfect view of her pussy. \n\n\"Oh yes. It would be even better if you raised up, and showed me that little ass too.\" \n\n\"Like this?\" Julie reached down around her sides, and with the four fingertips of each hand, pulled her ass cheeks wide apart to fully expose everything she had. \n\n\"Just like that.\" \n\n\"What else?\" Julie was almost interrogating. But I loved it. \n\n\"Watching your fingers going in and out, seeing you have your orgasm.\" \n\n\"I know you watched me on the tractor. Did you mean like that?\" Then after a pause, Julie began rapidly fucking herself with just her middle finger. \"Or Like this?\" \n\n\"Well... Both, but I did mean just like that...\" I trailed off, hypnotized. I was so close this time, I could hear the soft wet noises with each thrust of her fingertip into herself. \n\n\"Jack?\" \n\n\"Yes?\" \n\n\"Give me a little licking back here while I do this?\" She pointed at her asshole. \"That makes me get off like you wouldn't believe.\" \n\n\"God, I thought you'd never ask! But quit reading my mind, would you?\" \n\nI was below her slightly, and as I leaned in to tongue her asshole, my eyes were inches from her finger quickly and noisily in her pussy. And past her hand, I could look up and make eye contact with her. And from her multiple earlier orgasms and from the fucking she had gotten with the strap on, she was still delectably wet. \n\n\"Orgasm for me.\" \n\n\"God yes. I've never had so many orgasms in one day.\" \n\nIt was a dream come true. She had been out in the summer heat earlier, on my lawnmower, so she had a little salty sweat going on. She had had multiple orgasms, so her pussy was moist, but smelled even more of sex than normal. And the tip of my tongue was getting to lightly probe and lick her tight and tiny asshole. And she was having another orgasm, this one coming so rapidly since it was her own finger, and she knew exactly what to do. Again, I watched in amazement at the sight of her coming. \n\n\"God, that makes me cum. And I like it from behind too, you know?\" And with that, she hopped up, and went back to standing, sticking her ass out, and leaning against the armrest of the sofa. \"Fuck me, Jack. Fuck me and finish in me too.\" \n\nI got to my feet, gazing into Julie's eyes. And out of my peripheral vision, there they were, Heidi and Jillian in the laundry room, watching. Except the door was almost completely open. They weren't hiding at all. But Jillian's hand was reached down and into her dress. She was definitely fingering herself. After being dressed, then undressed in the laundry room, then dressed again, I finally yanked down and stepped out of my shorts and underwear for good. And I got behind Julie and glided my very hard self right into her. I had been hard for at least an hour, and I wasn't sure if I would be able to last long at all. \n\n\"Cum in me.\" It was almost said in a daze, part request, part order. \"I want you in me. I want your cum in me.\" \n\nI knew I'd be able to get hard again, so even thought I was a little embarrassed at being too turned on to hold out longer, I was relieved. \n\n\"Fill me. I want that in me. and I want cum in me. Fuck me Jack, fuck me.\" \n\nI proudly lasted a couple minutes. But it was too much. Fucking Julie after fantasizing about her for so long. Having watched a three-girl orgy. Knowing two beautiful women were watching. I couldn't hold back, and I exploded deep into Julie's bald pussy. Another blast. And another. I instantly felt the heat, the slipperiness, the delightful feeling of how instantly her pussy suddenly became a gloriously slippery hot mess. \n\nJulie was moaning. I didn't pull out though, instead basking in the afterglow of having fucked and cum inside Julie. At the same time, I knew cum was starting to leak, down Julie's inner thigh. And mine. It was messy, but I loved it. \n\nJulie turned her head and glanced over, noticing Jillian and Heidi for the first time. She chuckled. \"Come on over, you'll get a better look from here,\" she shouted with a grin. I was still reasonably hard inside Julie's pussy, from behind. The girls came over. \"So Jack...\" Julie said, pausing for dramatic effect. \"These girls are a little freaky. I'm guessing you wouldn't mind, if they got a little freaky? \n\nThey were both dressed, from having walked out the front door. \"With all those clothes on? You're saying they're freaky?\" \n\n\"OK, fine, I guess you should head home, Heidi and Jillian. He doesn't believe you're freaky\" Julie joked. \n\n\"I believe, I believe!\" I said earnestly, in response to Julie's kidding around. I started lightly thrusting into Julie again. \n\n\"We're both so messy, aren't we Jack?\" She turned and looked at me out of the corner of her eye. I imagined in my head, what if possibly, could it be, that she's thinking what she's hinting at?\" \n\n\"Very...\" I smiled. \"I love it.\" \n\n\"I love it too. But what if,\" she paused again. \"I mean, showers, they're so boring. I kinda feel like having a freaky girl lick me clean. How about you Jack? Wouldn't a freaky girl licking us both clean be nice?\" \n\nI couldn't believe my ears. My fully erect penis popped out, but as I pulled away it rubbed right between Julie's delectable ass cheeks as we separated. It was still slippery. Cum and our love juices all over my penis, some dripping down my balls and legs. I could guess that Julie was even messier. \n\nJulie took half a step back, and raised and rested her right leg on the arm of the sofa, opening herself up. \"Ladies?\" Julie gestured to Heidi and Jillian. Heidi made a beeline for me, and Jillian to Julie. In an instant, they were on their knees, licking away at the wet mess of Julie's and my sex. With a few quick broad strokes of her tongue, Heidi had gotten most of the drippage off of my inner thigh. And I saw Jillian's head going between Julie's legs, I could tell she was trying to lick up as much cum from Julie's inner thigh too. ",
        "Then I inhaled. Julie did too. Almost in unison, my cock was in Heidi's mouth and Julie's clit engulfed by Jillian. I probably wasn't going to cum again too quickly, but this was amazing. I had just fucked Julie, and Heidi was now sucking me off hungrily. \n\nHeidi pulled herself away from my cock and looked up. \"Lift your leg up.\" I did, and within milliseconds, Heidi was licking my balls too, getting whatever was left of our juices. It felt so good. Then she nuzzled even further, and I felt the coolness of the tip of her tongue. She was stealing a lick of my ass too. Two licks. OK, now she was passionately licking. And I was even harder now. I looked over at Julie, who had turned her head enough to be looking at me, and smiling. I looked down, Jillian was still licking her, kneeled in front of her. \n\n\"I think he likes it,\" Heidi looked up and at Julie. \n\n\"I think you're right. He's hard again!\" Julie replied. \"Which one of you ladies wants some of that dick first?\" \n\n\"Me, me, I call that dick!\" Jillian raised her hand, schoolgirl style. And in a heartbeat, she got to her feet, and climbed onto the ottoman on all fours. \n\nI glanced at Julie, and without saying a word, I knew that Julie knew that I was saying, \"Listen Julia, clearly you are the one that I've been infatuated with, and indeed, am falling in love with. However, in the context of this moment, with two other naked women, with Jillian in particular anxiously wanting me to penetrate her, I am looking to you for your blessing.\" And also in a split second, Julie's smile told me that she was saying back to me, \"Thank you for asking Jack, I do appreciate that. We do have a connection here. But get your damn dick inside Jillian. Pronto!\" \n\nJillian being on all fours on the ottoman the way she was, made her welcoming pussy the perfect height for me to enter her. And enter her I did. She was so different to Julie. I couldn't believe I was living this life, getting to compare pussies. But Jillian had a looser type of pussy to Julie, but warm and so very inviting. I slid right in. It's not that I preferred one or the other... just that I was incredibly happy. \n\nI turned my head, since Julie and Heidi were slightly behind me. Heidi had made her way behind Julie, and began licking her ass. There I was, fucking Jillian and watching Heidi licking Julie's ass. \n\n\"Hey, come over here so I can get a better look,\" I said to Julie and Heidi. Heidi leaned back to give Julie room to step almost over her, to go to the other side of the couch, which would give me a better viewing ankle. \"Julie, you know I like to watch. You and Heidi give me a sexy show.\" \n\nJulie did as I asked, but I didn't get a very long look, because like a panther, Heidi pounced into a kneeling position on the floor, and her tongue was licking Julie's asshole. I did get occasional glimpses, but mostly it was Heidi burying her face into Julie's delightful ass and passionately tonguing it. \n\n\"Oh my,\" I heard from Jillian. \"I think he likes watching that, girls.\" I didn't realize that in my distraction, I had simply started fucking Jillian harder and faster. Heidi kept on eating Julie's ass. And with such a sight to behold, plus my cock thrusting in and out of the second pussy that day, I was losing my composure quickly. \n\n\"Finish between my cheeks and on my back,\" Jillian said. \"That way you can watch Heidi lick my ass too.\" That was too much to bear. I couldn't hold out another moment and I pulled out my cock and pumped it, just a couple pumps, before I exploded. Heidi lowered her upper torso, so that her ass was sticking up in the air. I held my cock and aimed a blast at her tiny little asshole, which like the other ladies, was beautiful to see. Like her pussy, her asshole looked so ready and welcoming, I loved the variety. The first spurt fired and hit her asshole, then a little above. The next burst I lost my aim a little bit, splattered a bit on her right ass cheek and onto her back at a slight angle. The third I regained my aim, and it powerfully shot onto her back. There was a fourth, a fifth, but by now it was just feeling good, no more cum. \n\nI had momentarily forgotten about Heidi and Julie, when I heard Julie say to Heidi, \"Heidi! There's a present for you!\" Heidi's face had been buried between Julie's cheeks, so she didn't realize what happened. \"Look how messy poor Jillian is? Look at all that cum on her ass? \n\nI was thrilled at how freaky Heidi was. She climbed away from Julie, and got right behind Jillian and without the tiniest bit of hesitation, made a broad passionate lick between Jillian's cheeks, collecting up almost all the cum that was there. Heidi, sweet Heidi, who although I knew was beautiful, was not the proper looking person you would have thought. She went for a second, then a third lick right between Jillian's cheeks, methodically making sure she licked Jillian completely free of any cum between her cheeks. But before she tended to Jillian's ass cheeks and back, she hungrily and passionately licked Jillian's asshole and gave it a seductive flick with the tip of her tongue. I had to admit, I was a little jealous of Heidi. But something told me I'd get my turn too, sooner or later. \n\nJulie and I made eye contact, and she pointed at Heidi's bent over body, as she was still leaning forward to lick Jillian. With three naked women, and a chance to fuck Heidi too, you'd better believe I was still hard, and I got behind Heidi and slid my cock right into her. She was wet and welcoming, and it was amazing to feel a third pussy in a manner of a few minutes. \n\n\"Oh yeah, right there,\" Heidi rested her head on Jillian's ass for comfort, and enjoyed as I thrust in and out of her, staring down at her own version of a cute little hole staring back at me. Heidi was somewhere between Jillian and Julie. Again, I couldn't believe, my penis having been in three different women in the past half hour. I knew I could go for a while, with the excitement of it all, but knowing after cumming twice, I probably wouldn't cum again. \n\nHeidi and I developed a rhythm, and soon I was fucking the living daylights out of her. I was sweating, with each thrust a few drops would fly off of me onto Heidi's body. I wasn't sure where to go with this. Part of me wanted to go back and fuck Jillian then Julie again, to feel all those vaginas again from the inside. \n\nAnd just when I couldn't imagine things getting any better, Julie appeared out of nowhere. I hadn't even seen her get up. Until there she was, standing next to me, holding a tube of K-Y jelly in her left hand, and squeezing some onto her finger. Then she expertly twisted her wrist somehow, and with amazing precision, first smeared a dab of it on the opening to Heidi's ass, then again with amazing expertise, rotated her finger about a little, leading to her getting her finger all the way in up to the knuckles. \n\n\"Looks like you need a little more tightness?\" she gazed into my eyes. Then in the most amazing feeling I had every felt in my life, Julie's fingers reached down to my penis, pulled it out of Heidi's pussy, and guided it to Heidi's asshole. \n\n\"In..\" she whispered, and I eased in. There was so much lubrication, and even if it had only been a moment, Julie had gotten Heidi ready. First the head of my cock... then that awkward moment, where the thickest part of my cock was easing its way in. Then success, I was all the way in Heidi's ass, and she was already pushing back against me. I gazed into Julie's eyes, and again she read my mind. \"You'll get mine later, don't worry,\" she whispered and smiled. \n\n\"Fuck my ass!\" Heidi almost yelled. \n\n\"Fuck that ass!\" Julie said in agreement. \n\n\"Fuck the hell out of that ass!\" from behind me, Jillian speaking. \n\nJulie walked around behind me, then back to being next to Heidi. With her clean hand, the one that hadn't been in Heidi's ass, she reached up, and almost instantly found Heidi's clit. \"Oh god yes\" was all Heidi could manage. \n\nFor a heavenly minute or two, I was watching my cock sliding in and out of Heidi's asshole, when she suddenly started tightening up and squirming a bit. Then she froze, as the orgasm took over. \n\nI'll pretend I knew what to do, but it was Julie touching me on the stomach, telling me to stop fucking and keep still. I didn't move, but my dick was still in Heidi's ass. \n\nJulie was such a perfect host. In a Flash-Gordon fast move, she was to the kitchen and back with a dish towel. As my cock softened a bit, and in that delightful moment of sheer satisfaction, of pulling your dick out of a woman, Julie was right there. Clamping the towel on her as Heidi stood up. \n\n\"You're a doll,\" Heidi whispered to Julie. Julie kissed her on the lips. \"But he didn't cum yet. I think he needs more ass. Your ass.\" \n\nHeidi reached down to the K-Y jelly and screwed the cap off. \"You're so beautiful,\" she whispered to Julie. \"Lie down, face up,\" and she beckoned Julie to lie on her back on the Ottoman. This time, it was Heidi's slender fingers, applying K-Y to Julie's asshole. Just as Julie had done to Heidi, Heidi was now expertly applying K-Y to Julie's asshole, and slipping a finger in for a moment. She looked up at me, still with a fair bit of K-Y on her fingers, and she reached out and wrapped my penis in her fingers, smearing what was left on my cock. \n\nAnd for the second time that day, a woman's delicate fingers were holding me by the penis, and guiding it into another woman's ass. I'm not sure what I did to deserve all this, but I had no complaints. \n\nIn this case, I had to lower myself to a kneeling position. And like Heidi's ass, and with Heidi's fingertips holding me by the penis at the entrance, I was ready. \n\nLike her pussy, Julie's ass was an amazingly tight little thing. But I knew what to do. I didn't try jamming myself into her, but instead, made these micro-thrusts, that both spread the KY around a little more, but each little thrust went a little farther in. Heidi gave me a soft kiss on the forehead and whispered into my ear, \"You take good care of her.\" Then still whispering, but with a humorous change of her tone, \"Or I'll kill you!\" Then she looked at Jillian. \"Come shower with me, Jillian. And bring the strap-on!\" \n\nAs Jillian and Heidi walked off to the master bedroom, the head of my penis was in Julie's ass, just barely. I whispered to her, \"Push yourself onto me. I won't move,\" and I didn't. Getting to put your cock in an ass is a great honor and privilege, not to be taken lightly. I wanted Jillian to control the pace, since her Ass was definitely tighter and warranted more care. I stood firm, not pushing, but not budging backward either. And at her own pace and under her control, Julie pushed herself onto me, and thereby, her ass around my cock, and before long, I was in her all the way. \n\n\"Nice and easy,\" she partly turned and said to me softly. I somehow knew that. Just as Heidi's ass was all ready for it and wanted a good fucking, Julie's was different. She wanted the blend of sensuality with a little discomfort in her ass, but it wasn't time to start fucking. I continued to hold myself still, and Julie started rocking back and forth on my ass, keeping the thinnest part of my penis where it was being gripped by her tight sphincter. \n\nBut gradually, the rocks got bigger. Gradually it wasn't just small thrusts, they were larger thrusts. And soon Jillian with her rocking back and forth was fucking me with her ass. \n\nI stood there, gazing into Julie's eyes. She was magnificent. Don't get me wrong, getting to fuck three gorgeous women in a frenzied setting was my every fantasy come true, but the feeling of warmth I had as I looked at Julie, she was the one. \n\nExcept the one, the one I was officially smitten with, was still in a nasty mood. With my dick sliding in and out of her ass, her fingers on her clean hand made their way to her pussy, and she was doing that fingering thing again, rapid little strokes with just her middle finger. \"You came in my pussy. Now cum in my ass! My ass is ready. So fuck that ass and fill it with your cum\" she said. I started trying to cum, but it was going to be a little work. That possibly, it might even require a stroke of luck. \n\n\"Don't tell me you want to fuck Jillian's ass too?\" she joked. I did want Jillian's ass too, of course, but not right then. \"Tomorrow, for Jillian. Right now, cum in my ass, but tell me how you'll fuck Jillian too.\" \n\nI didn't want to sound too eager to fuck Jillian while I was getting to fuck the woman of my dreams. \"Come on... tell me. From behind? Facing her? How?\" Her fingering was getting wilder. I saw her face getting more flushed. She was getting closer. \n\nI still hesitated. \"Standing? In bed?\" Julie was continuing. You know I like watching you fuck almost as much as I like you fucking me, don't you?\" I had no Idea Julie was so naughty. But she was getting me to fuck her ass deeper and harder. \n\n\"You want to cum in her tight ass, don't you? You want to cum in Jillian's ass?\" \n\nI didn't respond. The dirty talk was making me almost reach the point of being able to cum again. Almost. \n\n\"Wait. You want all three of us, doggie style, don't you? Then you want to fuck Jillian's ass. Then pull your dick out and fuck Heidi's ass too. Don't you?\" \n\nI still wasn't responding. \n\n\"Then you want to take your dick out of Heidi's ass, and fuck mine again. Don't you? You fuck all three of our asses? \n\nIn spite of all this excitement, I had already cum two times. And even having the most perfect sexual adventure of my life, I realize I wasn't going to cum again. It was close, but it was going to take a miracle. Julie was even closer to an orgasm. it was amazing, getting to hear her finger making noises in her pussy. And to look down at my hard dick, gliding into her tiny little asshole. \n\n\"You need to fuck all three of our asses to make yourself cum again, don't you? You like fucking asses, don't you?\" Julie was fingering her pussy furiously. I think her dirty talk was turning her on more than it was me. And I was very turned on. \n\nAnd then it happened. Again. With my dick in her ass, she tensed up, inhaled deeply, and went away into her momentary blissful daze. It was amazing to see her labia and her entire vulva practically shouting out in ecstasy too, quivering, pulsating, then finally settling down. \n\nI reached over for the towel, and put it under Julie's ass, as she opened her eyes and looked into my eyes. \n\n\"You like fucking three girls, don't you? You fucked me. You fucked Jillian. You fucked Heidi. You fucked Heidi's ass. You fucked my ass. You like it, don't you?\" It was a combination of still talking dirty blended with post coital bliss. \"Tell me you liked it.\" \n\n\"I loved it. Loved, loved it,\" I said. \n\nThen, the beautiful tender moment was suddenly shattered with an uncharacteristically loud and not at all within her character bellow. \"Jilliaaaaaannnn!!!\" \n\nFrom the other room, an equally loud \"Whaaaaat?\" \n\n\"What are you doingggg?\" \n\n\"I just got done licking Heidi's pussyyyy!\" \n\n\"Well, come on out here. Jack's not going to cum again until he gets to fuck you up the butt toooooo!\" Jillian was still shouting. \n\n\"On my way!\" Jillian squealed excitedly. \n\n\"Oh my God, I think love you!\" I said, in the context of \"Wow, you called a girl over so I could fuck her ass too?\" although I really had been in love since the gas-can incident. No, actually, long before that. And there was no denying the chemistry between us. \n\nJulie being Julie, didn't over-react. She shifted, which lead to our bodies separating. And she was unscrewing the cap to the K-Y jelly. And squeezing some out and lubing up my cock, so I could fuck Jillian in the ass too. Two ticks of the clock later, Jillian had come out of the room and leaned over the front cushion of the couch, and Julie was leaning over, spreading K-Y jelly on her index finger. Then dabbing and spreading some on Jillian's asshole. Then squirting a little more out, and after tenderly circling and caressing, eased her finger into Jillian's ass, to prepare it to be fucked. By me! \n\nShe looked down at her slender finger, gently sliding in and out of Jillian's ass. For my benefit. Then she looked at me, and with perfect comedic timing raised just one eyebrow in the way only she could, said, \"You THINK?\" \n\nI knew.\n\n#####"
    ],
    "authorname": "jsmiam",
    "tags": [
        "summer",
        "anal",
        "oral",
        "group sex",
        "bi females",
        "sweat",
        "sundress",
        "yoga pants",
        "sports bra",
        "no underwear"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/ole-betsy-the-wingman"
}