{
    "title": "After the Fall Ch. 07",
    "pages": [
        "Fragile. To her dismay, Mariah realized that was the word she was looking for. Michael's insistent declaration of love left her feeling fragile. Her eyes burned and her head ached. She hated that she had broken down and cried, hated it even more that she had let Michael hold her while she did, and hated most of all that she was comforted in his arms.\n\nHe had known she didn't want to hear him talk about his ridiculous claim. She told him she didn't. His persistent romanticizing of their relationship was upsetting and dangerous. It was upsetting because it was preposterous. It was dangerous because she wanted to believe it. She didn't understand why she would want such a thing, but lying to herself about it would be pointless.\n\nThe messy emotional collateral was something she hadn't anticipated when she agreed to the terms of Michael's proposal. If she walked away from their agreement, it would end his obligation to carry through with the project for Ashland. She hoped he would continue with it even if she left, but she was far from confident of that. The project would make a critical difference for people in Ashland, one that would mean the difference between life and death for some people. She was committed to seeing it through.\n\nShe rubbed her temples and tried to compose herself. The relentless sexual stimulation Michael had inflicted all morning as payback for teasing him was not helping. It was probably why she was so on edge. Even if she hadn't been distracted, the ride back to the house was too short to sort through the conflict swirling in her mind. She pushed it to the back of her consciousness, along with her resentment toward Michael for subjecting her to it.\n\nWhen they parked in the garage, Ezra, Jack and Yvonne were still unloading the van they had taken to Sarah's house.\n\n\"Sarah's up in Ezra's room,\" Yvonne explained.\n\nMichael grabbed a box to carry and followed Ezra to the elevator. \"How did it go? Did you run into any trouble?\"\n\nEzra snorted. \"If you could call a couple of punks who slunk off as soon as they saw us trouble.\" He was still itching to get his hands on the men who had traumatized Sarah. For Sarah's sake, it was good the men had run off without a confrontation, but their quick retreat left Ezra frustrated.\n\nOut of the corner of his eye, Michael caught sight of Mariah picking up a box to carry. \"We'll get that, sweetheart.\"\n\n\"I can help.\"\n\n\"If you want to help, put that one down and choose something lighter.\" He smiled apologetically when he noticed her annoyance. \"I can't let you make me look like a wimp by comparison, babe. Jack would never let me live it down.\"\n\n\"Never,\" Jack agreed.\n\nMariah rolled her eyes and exchanged the box for a basket of fabric scraps. When they reached Ezra's quarters, Sarah was holding the door open. \"I'm sorry I have so much stuff,\" she apologized.\n\n\"It's not much at all,\" Ezra replied, unconcerned with the boxes piling up in his living room.\n\nWhen everyone else left to make another trip, Mariah stayed behind with Sarah. It wasn't as if Michael was going to let her contribute meaningfully to the moving effort, anyway.\n\n\"Sooooo...\" Mariah gestured to the boxes in Ezra's room.\n\nSarah fidgeted sheepishly. \"He said it would be okay.\"\n\n\"I bet he did.\"\n\n\"Don't say it like that! He offered to let me put my things here until my room was ready.\"\n\n\"Uh-huh. I hope he's not going to be too disappointed if Paula gets your room set up today.\"\n\n\"Do you think she will?\" Sarah didn't sound thrilled by the idea.\n\n\"Relax. Even if she does, that doesn't mean you have to lose your man-sized teddy bear.\"\n\n\"He did say I could stay with him until I was ready to sleep by myself.\"<br ><br >Mariah grinned. \"And even after that, I'm sure.\"\n\n\"You're awful, you know that?\"\n\n\"I've long suspected I might be. So, not to be indelicate, but are you going to make him sleep in a chair every night?\"\n\nSarah bit her lip. \"I want to ask him to sleep in the bed, but I don't know how to say it without sounding like I'm suggesting sex.\"\n\n\"I haven't known Ezra that long, but he doesn't strike me as a man who would make that kind of assumption. Just tell him you would feel safe with him sleeping in the bed. That doesn't sound like an invitation to me. Not under these circumstances, not when you're talking to someone like Ezra.\"\n\n\"As opposed to someone like Michael?\" Sarah giggled.\n\n\"Michael takes saying 'good morning' as an invitation.\"\n\n\"Yeah, 'cause you keep sleeping with him!\"\n\n\"Whatever. What do you want to do with the boxes? Should we unpack them?\"\n\n\"I'm going to wait and see what Ezra suggests.\"\n\n\"You won't have long to wait. I hear the elevator.\"\n\n\"I can't believe you have your own elevator.\"\n\n\"It's not my elevator. It's Michael's elevator.\"\n\n\"Oooooh,\" Sarah teased. \"Touchy!\"\n\nMichael, Ezra, Yvonne and Jack arrived with the last of Sarah's things and added them to the pile.\n\n\"Do you think we could get the security team together in about forty-five minutes for a meeting?\" Michael asked.\n\n\"Sure,' Ezra agreed. \"Yvonne, could you let Nate and Andy know? And see if Daniel's willing to cover the camera feeds while we meet?\"\n\nMichael turned to Sarah. \"You're welcome to come to the meeting if you want to, but don't feel like you have to. It's going to be about security, and a lot of it will be about Hawley's group. I don't know if that would be something you really want to hear about right now.\"\n\n\"I think I would rather stay here. I can figure out which things are in which boxes.\"\n\n\"Marcus made rigatoni in vodka sauce for lunch. I can bring some up for you while you guys figure out the box situation,\" Mariah volunteered.\n\n\"That sounds delicious!\"\n\n\"It is.\"\n\nOn their way to the kitchen, Michael asked, \"Is she moving in with him?\"\n\n\"Michael!\"\n\n\"What? We moved the boxes to his room instead of her room. It's a fair question.\"\n\n\"I'll tell you when we're somewhere private.\"\n\n\"Somewhere private? Is that an invitation to take you off to a dark corner?\"\n\nShe darted into the kitchen before he had a chance to try anything. The kitchen was empty.\n\n\"Ha! Marcus isn't here to save you!\"\n\nMarcus' voice came from the pantry. \"Did someone call me?\"\n\nMariah smirked at Michael. \"You were saying?\"\n\nMarcus was happy to dish up some pasta, along with some bread and salad. They used a couple of serving trays to carry it up to Ezra's quarters. Afterward, Michael took Mariah to the lounge in his wing. <br ><br >\"Marcus definitely isn't here to save you this time, Miss Smarty-pants. Take off your clothes.\"\n\n\"But we have a meeting in just a few minutes!\"\n\n\"We have a meeting in more than half an hour. I intend to spend that time on the couch with you naked over my lap. Do you need help taking your clothes off?\"\n\n\"No.\"\n\n\"Are you okay? Do you want to talk about it?\"\n\n\"No! I mean, I'm okay.\" The last thing she wanted was more talking. She began undressing.\n\nHe reclined on the sectional to watch. When she was naked, he guided her to sit sideways on his lap, then eased her back until she was laying with her shoulders on the seat beside him. He hooked her nearest leg over the arm of the sectional and left her other leg dangling. Exposed, she wrapped her arms over her stomach.\n\n\"Put your hands over your head and cross your wrists.\"\n\nHe waited until she complied.\n\n\"Good girl. Keep them just like that.\"\n\nHe spent most of the next half hour ignoring the old documentary that he turned on, while Mariah devoted herself to focusing as exclusively as possible to the narrator's drone about the search for the ruins of Carthage. She wasn't terribly successful. He started with light touches over her stomach, across her hips and down her thighs. Her breasts were next. He feathered his fingers up their slopes to her nipples, as If he were drawing the sensation upward to concentrate in the achingly swollen tips.\n\nThe combination of his harsh stimulation of her nipples that morning and his teasing throughout the day left them almost unbearably sensitive to light touches. It was a relief when his touch grew firmer. The pleasure was greater, but less tantalizing and easier to tolerate. Then she felt his other hand sliding along the inside of one thigh and then the other with the same light touches he had used on her breasts. She squirmed when he lightly stroked the outside of her pussy. His fingers tightened around her nipple and he gave her pussy a little smack that was so perfect she couldn't stifle a groan.\n\n\"Try to be still, sweetheart.\"\n\nWith one hand he began squeezing and massaging her breasts, first one and then the other. With his other hand, he spread her pussy. His index finger slid up and down over her clit until she began to pant.\n\n\"Are you doing okay?\"\n\nWhen she didn't answer, he stopped what he was doing. \"Answer me, kitten.\"\n\nShe turned her head to look at him. Her eyes were dark pools, the pupils dilated and unfocused.\n\n\"How do you feel?\"\n\nShe worried at her lower lip while she searched for the word.\n\n\"I feel floaty.\"\n\n\"Floaty?\"\n\nShe nodded, unwilling or unable to come up with a better word.\n\n\"Do you remember the rule if you start to feel disconnected again?\"\n\nShe nodded again.\n\n\"Out loud.\"\n\n\"Yes.\"\n\n\"No, tell me what it is.\"\n\nShe sighed. She was showing signs of regaining her focus, which was not what he wanted, but he had to make sure another incident like the one earlier in the day was not repeated.\n\n\"I'm supposed to tell you.\"\n\n\"You have to tell me.\"\n\n\"I have to tell you.\"\n\nHe rolled a nipple between his fingers. \"Good girl.\"\n\nHe dipped inside her entrance to slick his finger before he resumed his slow torment of her clit. The hood had drawn back as her clit swelled, and he was able to fully circle it as he traced round and round. Soon she was whimpering so plaintively that he offered a measure of mercy.\n\n\"Do you need my fingers inside you, baby?\"\n\nShe nodded. \"Please.\"\n\nWhen he slid one finger into her, her hips arched. When he pushed two fingers in, he could feel her legs tremble. She was much too close to coming for him to do more than slowly stroke in and out. He abandoned her breasts and clit so that she could concentrate on his fingers inside of her. Every time his fingers moved, she clamped down around them. He gradually increased the tempo until she was panting and moaning. Then he stopped.\n\nShe whined when he pulled his fingers from her pussy.\n\n\"I think that's all you can handle right now, sweetheart.\"\n\nHe helped her sit up, and then to stand. When he shifted to the edge of the seat, he realized how uncomfortably insistent his erection had become. He hadn't intended to indulge himself again until later, but he needed to take the edge off.\n\n\"Kitten?\"\n\n\"Hmmm?\"\n\n\"Come kneel down between my legs.\"\n\nShe glanced at him, half-hopeful, half-wary as she sank to her knees in front of him. He unfastened his pants, then freed his cock from his boxers. The relief was immediate.\n\n\"Do you want it, Mariah? It's up to you. You don't have to.\"\n\n\"Yes.\"\n\nHe was surprised. He had expected her to resist admitting it.\n\n\"Yes, what?\"\n\n\"Yes, I want to suck your cock.\" She looked up at him and added, \"Please.\"\n\nHe brushed her hair back from the side of her face and pulled her toward his groin. Her hand replaced his, wrapping around his shaft. She guided his tip back and forth over her lips, then licked it delicately. Mindful of the consequences of too much teasing, she quickly swirled her tongue and took the head of his cock in her mouth. She rubbed her tongue against the underside while she sucked. Soon she was sucking him deeper, her head bobbing as his cock slid in and out between her firmly pressed lips. He placed both hands on the back of her head and pulled her down slowly until the head of his cock bumped the back of her throat. He gently held her there as he pushed further.\n\nHe sank in fully and paused, feeling her throat constricting around his cock. Her throat kept squeezing his cock as she swallowed again and again until she had to back up to breathe. He caressed her cheek, and she let her eyes close as she leaned into his hand. When she was ready, she looked back up at him. He held her head in his hands and guided her mouth up and down his shaft. Before long he could feel the vibration of the greedy little noises she was making. Her tongue stopped sweeping from side to side as she grew more intent on the rhythm of sucking.\n\nHe could feel the tingling starting at the base of his cock. As his balls tightened, his need to thrust grew. He needed to fuck her mouth. He eased her head up and stood. She moved with him, shifting to an upright kneeling position. As she recaptured his cock in her mouth, he threaded his fingers through her hair. With her head cradled between his hands, he began thrusting into her mouth.\n\nThe speed of his thrusts grew until she couldn't keep sucking. There was little she could do besides keeping her lips pressed around his shaft. Being deprived of anything to do left her to focus on the feeling of him fucking her mouth: the feeling of his cock pushing into her mouth, sliding over her tongue, and bumping the back of her throat; the feeling of her power even as he took his pleasure from her. She squeezed her thighs together and shuddered.\n\nHe didn't try to hold back his orgasm. After the first spurt, he eased up enough that she could suck. His hips twitched forward in time to the rhythm of her suction. When it was over, he fell back against the arm of the sectional to arrange his pants and catch his breath. She looked disappointed, no doubt wanting to indulge her habit of gentle suckling afterward.\n\n\"Come here, sweetheart.\" He took her hand to help her stand, then drew her to him.\n\n\"I'm afraid the time has gotten away from me. We need to get downstairs to the meeting.\"\n\nHer eyes widened and she looked at the clock. They were already a minute late. She dressed hurriedly, despite Michael's assurances that she didn't need to rush.\n\n\"They're not going to start without us. I think you might want to freshen up first,\" he suggested, eyeing her tousled hair and thinking of her dripping wet pussy.\n\nHer cheeks flushed. She jogged off to her bathroom. A few minutes later, she was back, poised and collected. Despite her hurry, Michael pulled her close and kissed her. \"I love you, sweetheart.\" Before she could say anything, he headed for the elevator, with her in tow.\n\nThey were the last ones to arrive for the meeting. Once they got started, Mariah wasn't sure why she was there at all. They talked about \"lessons learned\" from the attempted kidnapping, but she really didn't have anything to add to the discussion. Michael asked for an inventory of the video cameras and microphones in storage so that they could evaluate placement of additional devices. Everyone agreed that suspicious activity immediately outside the walls of the compound would be addressed more proactively.\n\nJim Carruthers was still chilling in a holding room in the basement. Ezra planned to question him a final time after the meeting. After that, there didn't seem to be any reasonable alternative to releasing him. Once they let him go, Hawley would know they had been asking about Sarah and about the lake house. Even without the help of Quinland's agent, Hawley ought to be able to figure out Sarah hadn't escaped on her own.\n\nMariah finally spoke up. \"We could just persuade Carruthers not to tell them what he told us.\"\n\nEveryone laughed.\n\n\"I was being serious.\"\n\nEveryone looked uncomfortable, like she had said something tremendously stupid and nobody wanted to be the one to tell her.\n\n\"Sweetheart, I don't think we can trust him not to tell something just because we ask him to.\"\n\nMichael's patronizing tone grated on Mariah's nerves like nails on a chalkboard. She narrowed her eyes at him. \"I didn't say anything about making a request. I said persuade him.\"\n\n\"How would we do that?\" Ezra asked.\n\n\"I doubt you could. Let me try. I'm not a man and I'm not an authority figure. I can use his ego rather than working against it. I'll just convince him that it's in his best interest. It probably really is in his best interest.\"\n\nMichael started to object, but the look she gave him made him reconsider. He didn't want her anywhere near one of Hawley's goons, but he didn't need more arguments with her right now. She was probably already looking for an excuse to distance him. With adequate precautions, she would be perfectly safe talking to Carruthers.\n\nWhen Michael sat back in his chair, Ezra spoke. \"I'm skeptical, but I don't see what we have to lose as long as she doesn't give him any information.\"\n\n\"Unless there's something you want them to know,\" Mariah suggested.\n\n\"But anything we let them know, we have to assume Quinland will know, too,\" Nate pointed out.\n\nMichael nodded. \"I agree. Maybe we should be thinking about what we want Quinland to believe. This could be a unique opportunity. Unless there's more to discuss about Carruthers, let's turn our attention to Quinland's guy. Nate, what did you say Dave's real name is?\"\n\n\"Fred Lansing.\"\n\n\"Thanks. My initial assumption was that if Quinland's got a guy on his payroll here, it's about me rather than about Hawley or his group. I'm open to alternative explanations. Is there anything about Ashland that would interest Quinland?\"\n\nMichael's question was met by headshaking around the table. He continued. \"The only possible reason I can think of would be expansion of his geographic influence. But again, why Ashland? It's true that there's not another Elite property anywhere nearby, but there are lots of places Quinland doesn't have his hooks yet. Also, why now? I tend to think the answer to both questions is my father's recent death.\"\n\n\"That was my assumption,\" Ezra agreed. \"Quinland's ambitious and he's an opportunist. His interest may not be overtly hostile, although I don't rule out that possibility. He's probably trying to assess how he might use your father's death to gain some influence. He's a big believer in influence and puts a premium on information. I can't even guess at the resources he expended converting and building The Center, all to have control and influence over the relationships between Elites and the flow of information.\n\n\"As I've reported to you before, there's been partial substantiation of the rumors that Quinland has listening devices all over the place at The Center. The first rumors were about Forum Centralia, which I thought wasn't too surprising, since it's where you guys meet. I suppose there were bits to be gleaned from listening in on the sidebar conversations or breakout sessions.\n\n\"More recently, though, Sly Finnegan's head of security found a microphone in Finnegan's room at the lodging center. When he brought it up over beers one night a couple of conferences ago, some of the other guys were nodding. Nobody else volunteered information, but I walked away with the understanding that we're subject to eavesdropping anywhere we go in The Center. I don't even trust the Shopping Arcade. I assume that's the reason nobody but Finnegan's guy volunteered anything out loud. I especially don't trust The Pit, but I never have.\"\n\n\"I'm sorry to interrupt, but so I can follow what you're saying, could someone tell me who Sly Finnegan is and what The Pit is?\" Mariah asked.\n\nThe men around the table looked uncomfortable, but Yvonne was grinning ear to ear. \"Sly Finnegan is an Elite based out of southwest Wyoming. 'Sly' is just a nickname for Sylvester. He's one of the younger members of the Elites and is supposed to be pretty nice to work for. Now, The Pit...\" Yvonne broke off to glance around the table, clearly relishing everyone else's discomfort. \"The Pit is short for 'Passion Pit.' I assume people shortened it because Passion Pit is too embarrassing to say. My nickname for it is 'the Prostitute Palace.' It's where the well-connected male gets his rocks off.\"",
        "Jack laughed. \"Yvonne's just bitter because they don't cater to women.\"\n\n\"Damned right I am.\"\n\nMichael cleared his throat. \"So, back to Quinland. Why would he go through Hawley's gang to spy on us?\"\n\nEveryone was quiet until Andy spoke up. \"Maybe there wasn't any connection before now. Maybe Hawley's gang was just the only way to hide someone.\"\n\nEzra nodded. \"Yeah, that could be. It begs another question, though. How did Quinland know about Hawley's gang? There's no reason he should have any specific knowledge of Ashland. Michael, do you think your father ever mentioned Hawley's crew to any of the Elites?\"\n\n\"I really don't know. I'm not sure he was even very aware of Hawley's group. Even though my father was fanatical about knowing what was going on in town, he was really only interested in anything likely to be a threat to the compound. I think we should hold it open as a possibility, but also be alert to other ways Quinland may have been getting intel. Couriers are the obvious avenue, but their guild keeps a very tight leash on that sort of thing. I've never heard the slightest hint about any courier ever spying for anyone. I don't expect to come up with the answer today, but I'd like everyone to give it some thought.\"\n\nMariah spoke up again. \"What impression would you like for Quinland to have?\"\n\n\"I'd prefer him to see strength and stability. I don't want him to think he has an opportunity to gain a foothold.\"\n\n\"He probably knows how many security people you've hired from The Center, right?\"\n\n\"Definitely.\"\n\n\"What if you made him think you've got security people you've hired locally? You could get Amy, Daniel, Marcus and Seth to wear security uniforms and let Carruthers see them before he goes. If the number of security people he reports is higher than the number you've hired from The Center, Quinland's not going to know how many more people you might have hired.\"\n\nEzra turned to Mariah. \"You are as devious as you are sneaky, and I mean that as a compliment.\"\n\n\"Don't encourage her,\" Michael griped.\n\n\"You don't want to do it?\" Ezra asked.\n\n\"Of course I do.\"\n\n\"I was wondering,\" Andy started tentatively, \"is it better to try to spook Fred Lansing into leaving, or are we better off with him here because we at least know who he is?\"\n\nMichael considered the idea. \"That's a good question, I could probably figure out a way to get Quinland to recall him -- maybe report him to Quinland as if I thought he'd gone rogue or something -- but would that leave us any better off?\"\n\nNate shook his head. \"Better the devil you know.\"\n\n\"There's another factor you guys don't know about yet. I'm going to get everyone together for a meeting tomorrow and I was going to tell you then, but it's relevant to security planning. Mariah and I are working on a project that's going to dramatically affect all of us. We are going to build another wall outside the existing compound wall, and inside that wall, we are going to build some homes for people from town to move in. It will be the first stage in a process to establish a decent standard of living for people here.\n\n\"There's a whole lot more detail to go into, but that's the gist of it. I wanted to give you a chance to be thinking about that. One thing that I was already planning to do is hire additional security from The Center. Now, I'm not sure whether I would be able to trust new people from The Center. We might have to employ people from town.\"\n\nMariah studied the security team during the silence that fell after Michael's announcement. Nate was frowning. Jack looked pleasantly surprised. She couldn't tell what the rest of them were thinking.\n\nThe silence was becoming uncomfortable when Ezra finally spoke. \"I don't like the sound of relying on untrained civilians. What if we can find trained security from The Center we're confident we can trust?\"<br >\n\n\"If you can find them, that would be great. If not, I don't see another option.\"\n\n\"Either way, it sounds like a trip to The Center is going to be necessary pretty soon,\" Ezra said.\n\n\"Agreed. I'd been putting it off, but it needs to happen. There's a conference coming up, anyway.\" Michael glanced uneasily at Mariah. He had serious reservations about taking her to The Center. \"For today, let's focus on getting Carruthers out of here. Go ahead and work with Amy, Daniel, Marcus and Seth on making appearances in security uniforms. When you're done questioning him, just contact me and I'll bring Mariah down to sweet talk him.\"\n\nWhen the meeting broke up, Michael brought Mariah back to the lounge upstairs. He sat her across his lap and paused with the air of having something ominous to say.\n\nMariah frowned. \"What's wrong?\"\n\n\"About The Pit...\"<br >\n\nShe laughed, \"The Passion Pit? Who names these things?\"\n\nMichael didn't even smile.\n\n\"Sorry. I didn't mean to interrupt. What about The Pit?\"\n\n\"I just... I thought... I used to go there. Until recently.\"\n\n\"Okay.\" She waited for him to get to the point. When he didn't say anything else, she asked, \"But what were you going to say about The Pit?\"\n\n\"That was what I was going to say. I thought you might be upset.\"\n\n\"Oh! I'm sorry. I didn't understand where you were going with it. Why would I be upset? I didn't think you lived like a monk. It's nice to know I don't need to feel weird around any former lovers in the household.\" She paused. \"Or do I? Wait -- don't answer. I don't want to know. It's none of my business.\"\n\nMichael took her hand and kissed the palm. \"No former lovers in the household. I told you that it's you I've wanted for a very long time. There haven't been relationships. Maybe that's why I keep walking into landmines.\"\n\nMariah smiled. \"Blaming it on lack of training?\"\n\n\"Yep. Speaking of training, time to help you learn what happens to teases.\"\n\nHe unzipped the back of her dress and slipped it down her shoulders to fall around her waist. With a little fiddling, he had her bra unclasped and pulled it off. He squeezed and kneaded each breast in turn. He guided one nipple to his mouth, captured it between his teeth, and sucked firmly. He rubbed his thumb back and forth across her other nipple.\n\nMariah had not entirely calmed down from what he had done to her before the meeting. It felt like he was starting the race already halfway to the finish. Except, she reminded herself, he wasn't going to finish. Not until her spanking tonight. She worried she might be starting to look forward to the spanking. It was a disconcerting thought. It wasn't as if the spankings were truly painful, except for that last one. That one hurt more than she wanted to admit. But it wasn't pain that bothered her. It was the idea that she was being punished, and of course, the embarrassment.\n\nMichael let her nipple slip from his mouth. \"What are you thinking about?\"\n\n\"Nothing in particular.\"\n\n\"That makes thirty-nine spanks.\" He tweaked her nipple harshly.\n\n\"What? Why?\"\n\n\"Because you're lying. The only time you're any good at lying is when you've convinced yourself of your own story.\" He pinched her nipple, squeezing harder as he spoke. \"You might as well go ahead and tell me. I'm going to find out.\"\n\nMariah tensed and sucked in her breath as the pressure on her nipple increased. Then he began twisting it. \"Come on, kitten. Tell me what I want to know.\"\n\n\"I was just thinking about later.\"\n\nHe eased the pressure on her nipple. \"What about later?\"\n\n\"About the spanking.\"\n\n\"I like the sound of that.\" He tugged her nipple and released it. \"Were you looking forward to your spanking?\"\n\n\"No!\"\n\nHe pinched her other nipple and squeezed. \"No lying.\"\n\n\"I wasn't exactly. I just...\"\n\n\"You just what, sweetheart?\"\n\n\"I was thinking about the rest of it.\"\n\nHe eased the pressure on her nipple and fondled it gently.\n\n\"The rest of it? Does that mean when you get to come? Or when I fuck you afterwards?\"\n\nA shiver ran from the back of her neck all the way down her spine. She nodded.\n\n\"Out loud.\"\n\n\"Both.\"\n\n\"It's a package deal, you know. I'm going to make you come on my hand while you get your spanking. Then I'm going to fuck you. It all goes together.\"\n\nShe shuddered.\n\n\"Open your legs for me, kitten, nice and wide.\"\n\n\"Michael...\"\n\n\"Do it, sweetheart.\"\n\n\"But Ezra will be calling us soon.\"\n\n\"Forty.\"\n\nShe moved her farthest leg to the side. It wasn't far enough.\n\n\"I think you know that's not enough, but since you're being difficult, I want you to turn so you can lay back against my shoulder, and I want you to hook your leg over the arm of the couch. If I have to start counting, it's going to be more than one at a time.\"\n\nHe spent the remaining time alternating between stroking her clit and finger fucking her. She was panting lightly when Ezra radioed Michael.\n\n\"Okay. We'll be there in just a minute.\"\n\nWhen Mariah moved her leg, he lightly smacked the inside of her thigh. \"Stay still until I tell you, sweetheart.\"\n\nHe swirled his finger in her pussy, then tasted her from his finger. \"Okay, you can get up now.\"\n\nShe dressed herself as quickly as she could and was ready to leave, but Michael made no move to go anywhere.\n\n\"Aren't we going now?\"\n\n\"Yes, but before we do, I want to make sure we are very, very clear on what's going to happen when you talk to Carruthers. He is going to be restrained. Before you go in the room with him, I'll arrange a seat for you. You are not to get any closer to him than that seat. I'm trusting you to do this. If you get any closer to him than that seat, if you move the seat, or if you do anything to risk your safety, it's going to be a very long time before I trust you to do anything like that again. Understood?\"\n\n\"You think you're in a position to lecture me about trust?\"\n\nHe crossed his arms and leaned back, waiting.\n\n\"Understood.\"\n\nThey were both quiet on the way down to the basement. Michael got a golf cart to shorten the trip to the holding area. It was the first time Mariah had seen any of the basement except the garage and the adjoining mechanical shop.\n\n\"How big is this place?\"\n\n\"I don't know how many square feet it is, but it's quite a bit bigger than the house. It was already huge when my father bought it, and as soon as he bought it, he expanded it further. A lot of this basement is actually built inside of a cave. We could expand further into the cave if we wanted to.\"\n\n\"What are all the rooms we passed?\"\n\n\"Storage rooms. There's all sorts of stuff in them: household supplies, furniture, food, construction materials, tools, spare parts.\"\n\n\"What else is down here?\"\n\nThey pulled up outside the armory and Michael turned off the engine. \"We call that room over there the armory because it's our storage for weapons, ammo and gear. You know, in case of a zombie apocalypse. The garage door next to it is a wide hall that goes much further back into the caves. That's where the shooting range is. The first three rooms on the other side are the holding rooms. The next door goes to an office, and the doors after that are bathrooms and showers. Past the turn, there are more rooms, but they haven't been set up for anything specific. After all that, there's a long hall that goes to a room where we store things like fuel and batteries and anything incendiary.\"\n\nMichael took a deep breath. He wasn't looking forward to letting Mariah near Carruthers, even if he knew she would be safe.\n\n\"You ready to do this, babe?\"\n\nShe nodded. \"Ready.\"\n\nThey got out of the carts and walked over to Ezra. Amy, Daniel, Seth and Marcus were standing against the wall, looking ill at ease in borrowed uniforms. Mariah waved to them.\n\n\"Did you get anything useful out of him?\" Michael asked Ezra.\n\n\"Not much more than we already knew or suspected. He confirmed everything Lundgreen said. He only knows Fred Lansing as 'Dave.' He doesn't know how Hawley knows him and he doesn't know where Lansing came from, or even how he got there. He knows Hawley personally brought him back to the lake house, but that doesn't tell us whether he came by a courier route or if someone 'coptered him in. It does tell us that Hawley knew Lansing was coming, though. There must have been some communication in advance of his arrival, and I think that can only have come by way of a message sent by courier. That means Quinland must have known who Hawley is, or he wouldn't have known who to send the message to.\n\n\"Carruthers confirmed that Lansing assisted Hawley with the plan to nab Mariah. He provided the telescope, the walkie-talkies and a whole lot of advice. That means we should assume Quinland is aware of who Mariah is and that she has some connection to you.\"\n\nMichael's jaw tightened, but he didn't comment on it.\n\n\"Mariah's ready to see if she can convince Carruthers to keep his yap shut about our questions about Sarah. Is there anything else that needs to happen first? Has he seen the rest of the gang in uniform?\"\n\n\"He's seen Seth and Daniel. Their uniforms fit the best, so I had them bring me things while I was in there with him. I thought we'd just let him see Amy and Marcus on the way out, so he doesn't get a really good look at their uniforms. There's nothing else we need to do. We're ready for Mariah to give it a shot.\"\n\n\"Okay. Before she goes in there, I want him patted down again, ankle-cuffed to the bench, and both hands cuffed to the ring on the table. I also want to turn the one-way audio on and test it.\"\n\nEzra nodded. \"I'll take care of it right now.\"\n\nOn his way into the room, Ezra flipped a switch on the wall. A green light came on to indicate the audio was active. Ezra closed the door behind him, but Michael and Mariah could see what was going on through the one-way glass window. Ezra's voice was clearly audible as he gave Carruthers instructions. Once he patted Carruthers down, he cuffed him as Michael had requested. Carruthers was becoming agitated and seemed fearful of what the preparations might signify.\n\nCarruthers' anxiety ratcheted up another notch when Michael stalked in, glared at him, and pulled the chair back to a distance he felt was safe. Michael sat down in the chair and tested the distance by leaning forward and reaching toward Carruthers. Carruthers cowered back against the bench he was sitting on. Then, without saying a word, Michael left, shutting the door behind him with a bang.\n\n\"Okay, sweetheart. Remember, no further than the chair is now. We'll be right out here if you need anything.\"\n\nMariah nodded and forced a smile. She was suddenly nervous. The task had seemed easy enough, but now that such a big production had been made of it, she felt less sure of success. She took a deep breath, pushed down the doubts, and opened the door and slipped in, closing it behind her. She slid into the chair opposite Carruthers and smiled apologetically.\n\n\"I'm sorry about all that.\" She gestured to Carruthers' cuffs.\n\nCarruthers shrugged. \"What's going on?\"\n\n\"I asked to talk to you.\"\n\nCarruthers waited for her to continue, but she didn't. A couple of seconds later, he asked, \"Why do you want to talk to me?\"\n\nMariah smiled. \"Because there's something you can do that's good for you and good for me, but you need some information to do it. I want to give you that information.\" She paused, letting his curiosity get to work. \"They're about to let you go. When you get back, I think Brad Hawley's going to have a whole lot of questions for you. I imagine he'll want to know everything you were asked about here and all the information you gave.\"\n\nCarruthers winced. She had hit a nerve.\n\nShe continued. \"Now I understand you've got to tell him what he wants to know, at least for the most part. But I think Mr. Hawley's going to ask you a few questions that aren't in your interest to answer. In particular, I think he may ask you what you told us about Sarah and what you told us about the lake house. Now, ordinarily, you'd probably be better off just telling him the truth. But what you don't know is that Sarah was rescued from the lake house last night. So, it might not be a good idea to tell him you gave us any information about that. He'd probably be pretty mad\"\n\nCarruthers' eyes widened as he worked out the implications. He looked ill.\n\n\"I can tell you see what the problem is, but don't worry. There's a way out of it.\" Mariah smiled conspiratorially. \"You see, the other thing that you don't know is that when Sarah was rescued, they made it look like she got away on her own. They snuck out without anyone seeing them.\"\n\nMariah paused to let Carruthers' catch up. When she had his attention again, she continued. \"So, you see, there's absolutely no way for them to know for sure that she was rescued, unless you tell them that you gave us the information about where she was.\"\n\nCarruthers really looked alarmed now, so she gave him a few moments to collect himself before she went on. \"Now you may be wondering why they'd ask you about Sarah if there's no way for them to know we used your information to rescue her.\"\n\nIt was clear from the expression on his face that he hadn't gotten around to wondering that, but he was now. \"Why?\"\n\nMariah smiled. \"Because there's something else you don't know, but I'm going to tell you so they can't trick you. This morning, some of the compound's security team took Sarah to her house to get her stuff. There were a couple of guys there that Mr. Hawley had sent. They ran off, but they'll know Sarah was with someone from the compound because of the vehicle.\"\n\nCarruthers' face fell. \"Then they are going to know you guys rescued her!\"\n\nMariah shook her head. \"See, that's why I wanted to make sure you had all the information. They'll know Sara got help after she left the lake house. That's not really surprising. They know she's my friend. Naturally, she would come here for help. But for all they know, Sarah got lose by herself. Right?\"\n\nCarruthers nodded along.\n\n\"All you really have to do is just act surprised that Sarah is gone, and you won't get blamed for Sarah disappearing or for telling anyone about the setup out there at the lake house. Now, you may be wondering what I get out of this.\"\n\n\"Yeah, what's your angle?\"\n\n\"You know Mr. Hawley doesn't like me, right?\"\n\nCarruthers nodded. Hawley had been very clear on that point.\n\nMariah smiled, looking pleased with herself. \"Well, I don't like him very much, either. And you know what would bother him? If a girl escaped from his hideout all by herself. I bet he'd hate that, wouldn't he?\"\n\nCarruthers eyed her. \"Yeah, I imagine he would.\"\n\nShe grinned triumphantly. \"So, you see? You don't get in trouble, and I get the satisfaction of making Mr. Hawley mad because he thinks another girl made a fool of him.\"\n\nHe thought about it and nodded. \"Okay. I can see that. But what about them?\" Caruthers tilted his head toward the door.\n\n\"Oh, you mean why would they let me tell you all this?\"\n\n\"Yeah, what's in it for them?\"\n\n\"I don't think they care much one way or the other. But they said it's not a bad thing to keep Mr. Hawley in the dark about how much they know about his lake house.\"\n\nCarruthers nodded thoughtfully. It made sense to him.\n\n\"Okay!\" She stood to go. When she got to the door, she looked back at Carruthers and said brightly, \"See? Told you I was going to help.\"\n\nShe stepped out. When the door closed behind her, she let her breath out with a whoosh. Yvonne had joined Ezra and Michael just outside the holding room. They were all smiles and grins, but Mariah felt drained.\n\nMichael put his arm around her. \"Good job, sweetheart.\"\n\n\"That was quite a performance,\" Ezra said. \"I think it worked.\"\n\n\"Well, it actually is in his best interest to keep his mouth shut,\" Mariah pointed out.\n\nYvonne snorted. \"I don't think he was going to figure that out on his own.\"\n\nMariah winked. \"That's why a dumb girl had to help him out.\"\n\n\"Do you need anything else from us right now?\" Michael asked.",
        "Ezra shook his head. \"No. We're just going to get him secured in a jeep and drive him into town.\"\n\n\"Good riddance. I'll have my radio on if anything comes up.\"\n\nMichael and Mariah took the golf cart back to the main garage. When they got into the elevator, Mariah pushed the button for the second floor.\n\nHe pulled her back against his chest and wrapped an arm around her. \"What are we doing on the second floor?\"\n\n\"I don't know what you're doing, but I'm going to check on Sarah's room and then check on Sarah.\"\n\n\"Mind a little company?\"\n\n\"Since when does it matter if I do?\"\n\nHe didn't answer, but when the elevator door opened, he dropped his arm to let her go. She didn't know quite what to do. She looked back at him.\n\n\"I'll be upstairs.\"\n\nThe elevator door closed before she figured out how to respond. Trying to shrug off the feeling that she had been a jerk, she hurried down the hall to the room Sarah had picked out. Paula wasn't there, but she had obviously been busy. The room was fresh and clean. None of the furniture had been changed out yet, but Paula was probably waiting for Seth and Marcus to be able to help her.\n\nShe hurried down to the other end of the hall to Ezra's quarters to find Sarah. Sarah answered the door so quickly that Mariah wondered if she'd been waiting for a knock.\n\nShe frowned when she saw Mariah. \"What happened? Are you okay?\"\n\n\"Nothing happened. Nothing's wrong. I just came to see if you could use some help. Why? Is there something you're worried about?\"\n\n\"I wasn't worrying about anything. I just thought you looked upset.\"\n\n\"Oh, sorry. I'm probably just a little tired. So, did you and Ezra figure out anything about your stuff?\"\n\nSarah looked sheepish. \"He had some extra drawer space he offered to let me use, so I put my clothes away already.\" <br ><br >Mariah kept her expression neutral. \"What about the rest of your stuff?\"\n\n\"He said we could figure it out when he got back.\"\n\n\"Oh. Well, just so you know, it looks like Paula's got your room cleaned up. There's no bedroom furniture in it yet, but if you just need floorspace to stack anything, that's available.\"\n\n\"I tried to help her clean it. She let me sweep a bit, then chased me out.\"\n\n\"Sounds like Paula. Since you don't need help unpacking, do you want to finish the tour of the house?\"\n\n\"Ezra's planning to take me through the house when his shift ends.\"\n\nMariah firmly resisted the urge to smirk. \"Is there anything you need? Anything I can do to help? I feel like I've just left you stranded here.\"\n\n\"You worry too much. I'm fine. I've got everything I need. You're the one I'm worried about. You haven't even been giving me a hard time about Ezra.\"\n\nMariah shrugged. \"I didn't want you to take it the wrong way if I teased you.\"\n\n\"What do you mean? Why would I take it the wrong way? Do you think I'm moving too fast?\"\n\nMariah laughed. \"Too fast? You met him yesterday. I can't imagine what's taking you so long.\" She dodged Sarah's playful punch. \"See? That's taking it the wrong way!\"\n\nSarah stuck out her tongue. \"You're just jealous because my guy's a gentleman!\"\n\n\"Oh, so now you admit Ezra's your guy?\"\n\n\"I didn't mean it like that!\" Sarah protested.\n\n\"What other ways are there to mean it?\"\n\n\"Whatever. At least you're smiling now.\"\n\n\"It's hard not to smile. You know I love teasing you about it, but I'm not being critical in any way. I think Ezra is a great guy. You deserve a great guy. How fast or slow you guys approach things is nobody's business but your own. You're the only one who knows what feels right to you.\"\n\n\"Thanks. I'll admit I was feeling a little self-conscious. Not that anything serious has happened, but just self-conscious that I'm feeling this way about him so soon.\" She looked at Mariah skeptically. \"Wait a minute. This open-mindedness wouldn't have anything to do with how long it took you to get with Michael would it? And just how long did that take?\"\n\n\"Since when haven't I been open-minded? You act like I'm some sort of puritanical busybody.\"\n\n\"I just mean I've never seen you involved with anyone before. You've always been so secretive about it.\"\n\nMariah rolled her eyes. \"I just like to keep that part of my life separate from the rest. I don't want to have to deal with those relationships being entangled with the rest of my life.\"\n\n\"Damn, Mariah. That's cold.\"\n\n\"It's not like you're making it out to be. They weren't serious relationships, and it's not like there were a lot of them. I'm not a nun. Those men weren't priests. We enjoyed each other and left it at that. When it was over, it was over.\"\n\n\"But not Michael.\"\n\n\"Oh, he's managed to get tangled up in my life all right, but that doesn't make it a serious relationship. It just makes it messy.\"\n\nSarah shook her head. \"I'm not buying it that it's all one way. I think you're all tangled up in each other.\"<br ><br >\"That would be even messier.\"\n\n\"Life's messy.\"\n\nThey both jumped when they heard a knock. It was Ezra, knocking politely at his own door. After a quick hello, Mariah excused herself and wandered down the hall toward the elevator. Without the distraction of conversation, she lapsed back into moodiness. She still felt like a jerk for her snide remark to Michael, when for once, he had actually asked whether she wanted his company and given her an option. Not only that, he had just let her talk to Carruthers, even though he didn't want her in the same room with the guy. He had treated her like she had something valuable to contribute.\n\nShe needed to apologize, and she resented it. Her remark was at least partly the result of frustration that she wasn't getting time alone, which was his fault. That didn't make her feel any better about lashing out at him when he wasn't doing anything wrong. The truth was that she hadn't even been thinking about whether she wanted company. She had seen an opening to snipe at him and had taken it, probably because she was still upset that he dragged her out to the lake to try to make her talk about things she didn't want to talk about. She sighed and pushed the button for the third floor.\n\nWhen she opened the door to Michael's wing, Henry came running down the hall to meet her. He jumped up for his hug and kiss, and Mariah held onto him a little longer than he was used to. Back on all fours, the inquisitive tilt to his head made her laugh.\n\nShe ruffled the fur on his head. \"Everything's fine you big galoot. I just missed you is all.\"\n\nDuncan was on his way down the hall, too, darting into doorways, peeking out, then running along the wall to the next doorway. He wasn't the sneakiest cat in the world, but he did try. When Duncan got closer, he took a run at his target -- Henry's tail. Henry wagged his tail just as Duncan was pouncing. Startled, Duncan tried to turn around in mid-air, landed with an undignified plop, and ran off at break-neck speed down the hall.\n\nAs she passed the lounge, Mariah saw Michael. He was sitting in his favorite spot on the sectional, holding a book that he wasn't reading. He looked up at her as she passed, or rather, as she tried to pass. Instead of going to her room, she found herself turning at the doorway to deliver the apology that was due.\n\n\"I'm sorry I made that snotty remark.\"\n\n\"It's okay. Can you come sit with me for a minute?\"\n\nWhen she tried to sit beside him, he snared her and pulled her into his lap.\n\n\"You said sit with you, not on you.\"\n\nHe kissed her cheek. \"Yep, I was luring you in. I realize I need to let you have some time to yourself, sweetheart. I've been thinking about it, and I'm going to try to be more conscious of it.\"\n\nMariah was taken aback.\n\n\"Don't look so shocked, you little brat. If I were half the monster you make me out to be, you'd never leave your bedroom. Which, now that I think about it, isn't such a bad idea.\" He squeezed her ass and waggled his eyebrows at her.\n\nShe rolled her eyes. \"Now there's the Michael I know.\"\n\n\"You complain an awful lot for someone who enjoys getting tied to the bed. Or have you forgotten? I'd be happy to give you a reminder.\"\n\n\"One day, you're going to wake up tied to the bed.\"\n\n\"Promise?\"\n\n\"Not like that! Just tied to the bed.\"\n\n\"Silly me! You meant 'tied to the bed,' not 'tied to the bed.'\"\n\n\"Smartass.\"\n\nHe grinned. \"Thank you for noticing. If you really want to shut me up, though...\"\n\nMariah raised an eyebrow. \"That's an option?\"\n\nMichael swatted her. \"If you really want to shut me up, you could give me another kiss.\"\n\nShe kissed him.\n\n\"That's not even enough to shut me up for a full second. Do it right.\"\n\nGiving in to the temptation, she circled her arms around his neck and leaned into him. Her lips were soft against his, but her kiss was firm. She felt him shiver when she traced circles at the nape of his neck.\n\n\"See how quiet I was?\" he asked after the kiss ended.\n\n\"Not for long you weren't.\"\n\n\"It wasn't a very long kiss. Try another one.\"\n\nIt was impossible not to smile at his shameless angling. She nibbled at his lower lip, then teased the tip of her tongue along the seam of his lips. Her tongue darted away as soon as his lips parted. She began nibbling his upper lip instead, sneaking in quick flicks of her tongue. Her fingers trailed up the back of his neck through his hair. When Michael leaned in to try to capture her tongue, she moved just out of reach. The second time she pulled back, she felt his hand on the back of her head.\n\nHe pulled her down against his mouth for a deep kiss that left her stomach flip-flopping. When he released her, he was pleased to see her heightened color and widened pupils.\n\n\"Even though you're still being a tease, I'm going to take some spanks off your tally for two good kisses. That makes thirty-three.\"\n\n\"Are you levying spanks just so you can buy kisses?\"\n\nHe grinned. \"Well, I hadn't been, but it's not a bad idea. Thanks for mentioning it.\"\n\nShe changed the subject. \"I'd like to spend some time outside with Henry. Want to come?\" She was trying to make up for being rude earlier, but realized she wouldn't really mind if he did join them.\n\n\"Sure. I need to talk to you about Quinland and the other Elites, but we can talk outside after Henry's had a good romp. It would be a shame to waste the day.\"\n\n\"Okay. I just need to check on Julia and take care of Mister Barnaby and Quincy first.\"\n\n\"How do you take care of a cricket?\"\n\n\"Come see for yourself, but first I've got to get his stuff out of the fridge.\"\n\nShe darted off down the hallway to the kitchenette, with Henry galloping along behind her. Duncan's dignity was still wounded, so he followed at a distance. A few seconds later, she was back with a small covered bowl. Michael caught up with her at the door of her room.\n\nJulia was curled up on the bed. After a few chin rubs, she stood, stretched out her front paws, and yawned. Mariah handed Michael the bowl so she could pick Julia up for a quick cuddle. He peeked under the bowl's lid and found a few broad blades of grass, some cornmeal, some grain, a potato peel, a couple of carrot tops, a few pieces of apple core, some pieces of breadcrust, and a very tiny piece of meat.\n\n\"Is he going to eat all this?\"\n\n\"It's not all for Quincy, but he'll get a little bit of all of it. He needs a balanced diet. Besides, I don't know what he's in the mood for today.\"\n\n\"He has moods?\"<br ><br >\"Cricket moods.\"\n\n\"What's a cricket mood?\"\n\n\"I don't know. Like really having a hankering for a potato skin, or wishing it would rain, or being happy that it's dark, or wanting to chirp.\"\n\n\"I've never heard him chirp.\"\n\n\"He doesn't chirp very often. They do most of their chirping when it's warm. The air conditioning probably discourages it, but even at home, he chirped rarely. Crickets chirp by raising their outer wings so that they're almost vertical, and then sort of vibrating them sideways so they rub across each other. I think that might unbalance him because of his missing leg.\"\n\nJulia decided she'd had enough cuddles and jumped back onto the bed. Mariah took Quincy's terrarium down from the shelf and set it on the coffee table in her sitting area. Michael put the bowl down beside it, and she pulled out the grass blades. She ran them under the water in the sink and brought them back, carefully placing them next to Quincy. He edged a little closer to one and started to drink from a water droplet. When he finished, she took out his old food and replaced it with a little bit of everything from the dish.\n\n\"Surely crickets don't normally eat chicken.\"\n\n\"Wild crickets eat carrion. It could be anything -- dead bugs, a dead bird, literally anything.\"\n\n\"Is he going to eat it now?\" Michael asked.\n\n\"Probably not. When he was younger, he might have been all over it almost immediately, but he's old for a cricket.\"\n\n\"How old is he?\"\n\n\"I don't know exactly, but I've had him for about a month. They only live about ten weeks. He won't be with us much longer.\"\n\nHe was surprised that Mariah didn't sound sad about Quincy's imminent demise. She seemed pretty attached to him. \"I thought you'd had him for a long time.\"\n\n\"For him, it's been a long time. It's been most of his life.\"\n\nShe put Quincy's terrarium back on the shelf and took Mister Barnaby's cage down. Mister Barnaby poked his head out of his little wooden house and twitched his nose excitedly.\n\nMichael laughed. \"His whiskers are quivering!\"\n\n\"He loves mealtime. He'll come out in a minute and you can see him better.\"\n\nMariah took the food and water dishes to the bathroom to empty them and refilled the water dish. She filled Mister Barnaby's food dish with the remaining grain, bread, and produce scraps. As soon as the new food was placed in the cage, Mister Barnaby hurried over to inspect it. One of his back legs dragged behind him, and the other hind leg was weak. He was lucky to have survived the trap.\n\nMichael leaned forward to watch him eat. He was surprised at what an appealing little face Mr. Barnaby had, with liquid black eyes against grey-brown fur, an expressive pink nose above a white chin, and delicate ears that pricked inquisitively. Mr. Barnaby took a few bites of apple core, tasted the carrot, and then picked up the bread in his mouth and took it back to his little house. He reappeared a few seconds later and came back for a wheat kernel, which he also hauled off to his pantry.\n\nMariah surprised Michael -- and herself -- by brushing a quick kiss across his temple as she stood to take the covered dish back to the kitchenette.\n\nHe smiled up at her. \"What was that for? Not that I'm complaining.\"\n\n\"I just felt like it. You were being kind of cute.\"\n\nShe hurried off to the kitchenette to wash the dish and lid. It wasn't a good sign that she had casually kissed him without thinking about it. It wasn't sexual, and that was what worried her. It was affectionate.\n\nWhen she returned to her room, she was cool and collected, almost professional. Mister Barnaby was hiding in his house with his goodies, so she put his cage back on the shelf, avoiding eye contact with Michael as she did.\n\nShe called Henry. \"Wanna go out?\" Henry demonstrated how very much he did want to go out by running around the room and crashing his tail against various bits of furniture. Julia retreated to the relative safety of the center of the bed.\n\nHenry ran up and down the hall three times in the space of time it took Michael and Mariah to reach the elevator. Duncan watched Henry's tail suspiciously from the door of the kitchenette.\n\nOutside, they wandered toward the southwest corner of the lawn. Henry trotted around sniffing everything, but paying particular attention to the birdbath the foxes visited every night. Michael leaned back against the smooth, grey trunk of an elm and pulled Mariah over to stand with him, her back to his chest. Her shoulders were stiff with the formality she had adopted after the casual display of affection.\n\n\"What's wrong, sweetheart?\"\n\n\"Nothing's wrong. I'm just watching Henry.\"\n\n\"I mean, what are you upset about?\"\n\n\"I'm not upset.\"\n\nHe sighed. There was no point adding more spanks to her total for lying. That was supposed to be fun -- mostly.\n\nHe gathered her hair away from her neck and laid it over her shoulder. Using light pressure, he rubbed the muscles on either side of her spine. The tension in her neck began to ease almost immediately, and as it did, he gradually increased the pressure he was using. He could tell by the way her muscles repeatedly eased then tensed up again that she was fighting relaxation.\n\n\"Are you upset because you kissed me?\"\n\n\"No.\"\n\nShe shrugged off his hands, so he wrapped his arms around her waist.\n\n\"Help me understand why it's a big deal.\"\n\n\"It's not.\"\n\n\"It was a big deal to me. It made me smile.\"\n\nShe chewed her lip, considering what he'd said. The fact that making him smile made her feel better demonstrated the extent of the problem. Making Michael smile was not her concern. It shouldn't be.\n\n\"I'll make a deal with you, sweetheart.\" He kissed the back of her neck. \"If you let yourself relax for me, I won't try to make you talk about it. Okay?\"\n\nShe nodded quickly, eager to take the deal.\n\nHe raised his hands to her neck again and resumed his efforts. He could still feel a lot of resistance, but she wasn't consciously tensing like she had been. The curve of her back lost some of its rigidity and her shoulders dropped. He rubbed small circles from her hairline to the nape of her neck before he slid his hands to her shoulders and began kneading them. As her shoulders loosened, her breathing grew slower and deeper.\n\nShe didn't realize how relaxed she had become until she was startled by Henry's bark. He was arguing with a squirrel. The squirrel, confident in its perch on the side of a tree, was sassing him. Henry had his paws up on the trunk of the tree as though he thought he could climb it. When she called him, he looked over his shoulder with his best, \"But Mom!\" face. He came trotting back when she called again.\n\nMariah sat cross-legged and patted the grass in front of her. Henry ran the rest of the way to her and flopped over on his back, angling for a chest and belly rub. Michael sat down next to them and joined in, devoting himself to Henry's chest, while Mariah took his tummy.\n\n\"You're not spoiled or anything, are you, Henry?\" Michael asked.\n\nHenry thumped his tail on the grass.\n\n\"You did an amazing job talking to Carruthers, sweetheart. You're quite the actress.\"\n\n\"I don't know about that. I was afraid I might have overplayed the 'dumb girl' bit once or twice. The main thing is just to get him thinking about it, though. We have the advantage in that it truly does make sense for him to keep his mouth shut.\"\n\n\"We've done all we can. I think it will work.\"\n\nMariah nodded. \"I do, too. I'd just like to be more certain. With a guy like Carruthers, whichever voice he heard last is the most important one. Fortunately, he does seem to have an instinct for self-preservation.\"\n\nMichael scoffed. \"Where was self-preservation when he thought it was a good idea to kidnap you? Or wave a knife at Ezra?'\n\n\"I didn't say he was any good at it! You said earlier that you wanted to talk to me about Quinland and the others. What about?\"\n\nMichael shifted uncomfortably. \"I've had very mixed feelings about taking you to The Center in Bluffdale. Now, I think the scales have tilted firmly in favor of taking you. We have to assume that Lansing will pass your identity along to Quinland, so staying away won't keep him or the others from knowing who you are. After what I saw today, I think you could be very helpful to me in my investigations, if you want to help. I was leaning in favor of taking you anyway so you can get vaccinated.\"\n\n\"Vaccinated? I had my shots when I was a kid.\"\n",
        "\"Not those kinds of vaccinations. There is a very limited supply of a set of five vaccines that between them, are effective against most strains of both the pandemic viruses.\"\n\n\"What!\" Mariah's jaw dropped. Anger chased astonishment across her face. \"What do you mean there are vaccines? Why aren't they giving people the vaccines? Why haven't you done anything about this?\"\n\n\"I don't have the vaccines, Mariah. I can't make them vaccinate anyone. What I'm trying to do is investigate the claims that have been made about them. Supposedly, there is a very limited supply of the vaccines that were manufactured toward the end of The Fall. I don't have trouble believing that. I received those vaccines back then. The public didn't know anything about them. A member of the Elites owned the pharmaceutical company that was producing the vaccines. His circle, including my dad, got early access. The existence of the vaccines was a big secret. Full-scale availability was well over a year away, and quickly became impossible due to cascading infrastructure failures.\n\n\"I'm skeptical that someone with Quinland's resources hasn't found a way to get the vaccines back into production. Even if no more have been produced, I want to know what efforts have been made to try. For now, vaccines are given only to members of the Elites, their immediate families, significant others, and their household staff. You, whether you like it or not, are my significant other, and therefore eligible for the vaccines.\"\n\nMariah ignored the \"significant other\" comment. She had more important questions. \"What about Sarah?\"\n\n\"If things go in the direction they look like they're going with her and Ezra, she'll be eligible, too.\"\n\n\"You said she could be my assistant. Doesn't that make her staff?\"\n\n\"They only recognize staff that have been vetted through their organization, or staff already working for members at the time The Elites formed their organization.\"\n\n\"So, if she and Ezra don't get together, she doesn't get vaccinated.\"\n\n\"I'm afraid so.\"\n\n\"Then I'm not getting vaccinated, either.\"\n\n\"What good would that do Sarah? If you want to help people, you need to be alive to do it. Besides, the first time you go to The Center, you have to get a health check and get your vaccinations. There's no way around it if you want to go.\"\n\n\"It's not fair.\"\n\n\"I know.\"\n\nMariah ran her hand through Henry's fur. Michael wondered if she had lost interest in her other questions, and if this was going to be another example of something she refused to talk about.\n\nA little while later she asked, \"Why don't you want Quinland to know about me? Why would he even care?\"\n\n\"I don't have a specific reason. You heard Ezra earlier today. Quinland's opportunistic. I don't know what he's up to, but I don't trust him. If he's stirring up trouble here, I don't want him trying to use you to get to me.\"<br ><br >\"How would he do that?\"\n\n\"I don't know. His guy already assisted with one kidnapping attempt.\"\n\n\"That was Hawley's big idea,\" she objected.\n\n\"True, but my point is that he could use Hawley's group in the future for something similar. I don't think it's likely, but I'm considering the possibilities.\"\n\n\"You said you had mixed feelings about taking me. Was that because you didn't want Quinland to know about me?\"\n\n\"That was part of it. Another part -- a big part -- is that there are things at The Center that you are going to be very unhappy about, and you're not going to be free to express your displeasure the way you want to. When I first talked about taking you there, I knew there were things you wouldn't like about it, but the more I've thought about it, the more I've realized how bad some of these things are.\"<br ><br >\"What sort of things?\"\n\n\"I'm thinking mostly of the role women have. There are no female members of The Elites, or at least, they aren't considered full members. They can't attend meetings or vote. Only one person from each household can represent a family at a meeting. While my father was alive, that was usually him, although as time went on, I attended more and more meetings in his place. But a woman never attends to represent a household.\"\n\n\"Gee, what a shocker. A bunch of old rich men don't want to let the girls play in their sandbox.\"\n\n\"I didn't expect you to find that shocking. I haven't gotten to the shocking part. When you go to The Center, you will see that most of the Elites bring one or more women with them. The women are treated like sex slaves. As far as I know, they're not actual slaves and it's voluntary, but that's a fair representation of how they're treated. Elites tend to show them off like prize possessions. It's not unusual to see public fondling, public exposure, or more. It's kind of like what you might get if you gave some teenage boys some bondage porn and then asked them to construct their dream scenario. There's this weird formality that goes along with it.\"\n\nAfter a long moment, Mariah spoke. \"So that's where you got this whole sexual submission thing from.\"\n\n\"Huh? Oh, I see what you mean. No, at least not that I'm aware of. I've always had a tendency to be sexually dominant. Besides, I don't see what we do as being the same thing at all.\"\n\n\"What's the difference?\"\n\n\"The biggest difference is that I love you.\"\n\n\"Would you please stop with that?\"\n\n\"You asked me what the difference is. That's the biggest difference. I understand that I've thoroughly messed up. I'm still sorting through everything you said earlier, and I recognize some of the places I've gone wrong. But the fact that I messed up doesn't mean I don't love you.\n\n\"There's no way to explain the difference between what we do and what goes on at The Center without starting with the fact that I love you, so you're just going to have to put up with that for the sake of this discussion. What goes on at The Center isn't love, at least not for the most part. There were a couple of older members who've since passed away, who had girls -- \"girls\" is what they call them -- who they seemed to have affectionate relationships with. The girls were obedient, but I thought it seemed like there was affection in both directions. Sly Finnegan seems to have a relationship with his girl that is at least amiable.\n\n\"As far as I can tell, the Elites' 'girls' are not involved in any aspect of their Elites' lives other than sex and companionship. Their girls don't teach them about the proper care and feeding of crickets.\" Michael attempted a smile, but Mariah remained stone-faced. \"The girls don't get to play mind games with prisoners or plan construction projects. They don't talk freely with their Elites. They definitely don't wear normal clothes. When they get in trouble, they get a whole lot worse than a spanking that gets them aroused. None of them would dream of doing the tiniest fraction of the things you do to get in trouble.\"\n\nMariah snorted. \"So, I'm supposed to admire your benevolence because you don't keep me naked in chains and regularly beat me with a razor strop?\"\n\nMichael pinched the bridge of his nose. \"No, sweetheart. I'm not asking you to admire anything, and you know perfectly well that keeping you naked in chains and beating you with a razor strop is not something that is or has ever been on the table. What I am trying to explain, and what you are trying very hard not to understand, is that you are not like those girls, I am not like those Elites, and that our relationship is not anything like the relationship between the other Elites and their girls. Outside of the bedroom, I don't demand your obedience except for security matters. I didn't force your sexual submission, either. You agreed to give it. Admittedly, I bribed you for it with the promise of the construction project, and I'm not sorry I did, but you agreed of your own free will.\"\n\nMariah's temper flared. \"Of course I did! What was I supposed to do? That wasn't a real choice.\"\n\nHe was silent for a few moments, thinking about it. After a couple of false starts, he plunged in. \"I'm not sure I see it that way. I need to think about that some more, and I will. But even if it's wrong of me, I'm not willing to lose you. I'm just not. I'm sorry, Mariah, but if I can keep you with me by bribing you with a project to help Ashland, I will.\n\n\"We had a terrible week when we were basically estranged. The rest of the time, you've enjoyed sex. I did make a mistake this morning by teasing you too much and pushing you too far, but we agreed that you need to tell me if that happens in the future. That way it won't happen again.\"\n\n\"Hold on,\" Mariah interrupted. \"You can't just brush a whole week under the carpet like that.\"\n\n\"I'm not brushing it under the carpet. I behaved terribly. I am making a distinction between what happened then and what normally happens between us. We had sex two times during that week, and both times you playacted. I'm not blaming you for acting. I'm just saying that's not really what it's like for us. You agree those times were different, right?\"\n\n\"Yes.\"\n\n\"So, let's talk about the rest of the time. Do you enjoy it?\"\n\nMariah shrugged.\n\nMichael tamped down his impatience. \"Come here, kitten.\"\n\nHe leaned back against a tree and made a space for her between his legs. She sulked her way over, but sat where he indicated without a fuss. Henry followed her over and stretched out beside Michael's leg.\n\n\"I think it's time to get some things cleared up.\"\n\nHe nuzzled her neck and the sound of his voice so close to her ear nearly made her shiver. Then he kissed the top of her ear and she did shiver.\n\n\"I'm pretty sure you've already decided that our agreement requires the truth from you when it comes to sex. Haven't you?\"\n\n\"Yes.\"\n\n\"Do you like it when I fuck you?\"\n\n\"Michael, come on.\"\n\n\"Just answer my question.\"\n\nShe sighed. \"Yes.\"\n\n\"Do you like sucking my cock?\"\n\n\"You know I do. This is ridiculous.\"\n\n\"Do you like it when I\u2014\"\n\n\"What is the point of this? Do you just want me to say that I like sex? I like sex.\"\n\n\"That's not good enough, sweetheart. Do you like\u2014\"\n\n\"I like sex with you.\"\n\nShe felt the movement of his chest as he silently chuckled.\n\n\"It's not funny.\"\n\n\"It's a little bit funny.\"\n\n\"No, it's not.\" But it was. She tried not to laugh, but she just couldn't help it.\n\nHe wrapped his arms around her and kissed her cheek. \"Not funny at all, huh? \"\n\n\"No.\"\n\n\"Now, did the sex that you enjoyed involve being sexually submissive?\"\n\nShe plucked little blades of grass distractedly. \"I guess it depends on how you're looking at it. Under the terms of our agreement, I guess all sex qualifies as being sexually submissive.\"\n\n\"No, that's not what I mean. I mean, were there times during sex when your actions involved submitting to me? In other words, in the context of what we were doing right then and there, were there times when you let me take control from you?\"\n\n\"I know what it means. The part about letting you take control is the snag. How could I 'let' you take control when you already had control by way of our agreement?\"\n\n\"I think you're splitting hairs, sweetheart, especially since I haven't noticed you sticking all that closely to the rest of our agreement. What I'm really trying to get you to acknowledge is that while you were being sexually submissive to me, you enjoyed it.\"\n\nHis hands slid up her stomach as he spoke. When he reached her breasts, he held them cupped in his hands. He ran his thumbs back and forth across her nipples. The tingling ache as they stiffened was echoed between her legs.\n\n\"Stop trying to distract me.\"\n\nHe stopped, and she was left wondering why she had demanded it.\n\n\"I'm waiting, kitten. Do you enjoy sex while you're being sexually submissive to me?\"\n\n\"I enjoy it, but I don't like how it happened.\"\n\n\"I can understand that.\"\n\nHe tilted her head to the side and kissed the side of her neck.\n\n\"Okay. Now that we have that settled, let's get back to what I was telling you about The Center. If I take you there, it's very important for you to understand that what happens between you and me is nothing like what you'll see between Elites and their 'girls.'\"\n\n\"Why is it important?\"\n\n\"Because I don't want you to think that I see you the way the Elites see their girls. You're not going to like what you see. That's really putting it too mildly. You're going to be very angry about it. If I know you, the first thing you'll want to do is start a small rebellion, and you can't do that.\"<br ><br >\"Why can't I?\"\n\n\"You'd get kicked out for one thing, so it would be an awfully short rebellion. For another thing, you won't be able to help me figure out what's going on with the vaccines if you don't find a way to act the part. I'm convinced there is more going on with other technology, too. I think it's suspicious that with the resources Quinland and some of the others have at their disposal, no progress has been made in resurrecting power grids and creating fuel sources.\"\n\n\"What did you mean by acting the part? Do you expect me to act like one of those girls?\"\n\n\"It's not a matter of expecting you to do anything. It's up to you to decide. I can take you to get your checkup and vaccinations and bring you right back home. I'll still tell you about everything when I get back from the meeting, but you won't have an opportunity to observe anything for yourself. If you want to pretend to be like one of those girls, you can come to the meeting with me and listen.\"\n\n\"What do the girls act like?\"\n\n\"Sort of like sex pets. I don't mean they act like dogs or cats. They wear whatever their Elite wants them to wear, which usually isn't much. They wear collars and are frequently leashed. They don't speak unless they're spoken to. There's a lot of public groping that goes on, mostly by Elites who just like to show off.\"\n\n\"I think I get the picture.\"\n\n\"I expected you to be shocked.\"\n\n\"It's hardly shocking that a no-women-allowed bunch of entitled rich guys started acting like they were running Playboy Mansion, or maybe more like some sort of BDSM club. It's none of my business what consenting adults want to do, but these guys sound like real prizes. Are you sure these women are participating voluntarily?\"<br ><br >\"They seem to be. I'm not sure I'd be able to tell if they weren't. I can't really talk to them. Some won't speak to anyone but their Elite. Others will, but only to be flirtatious. It depends on the rules their Elite has set for them. A couple of times, an attempt at polite conversation was enough to cause the girl's Elite to offer me a chance to 'borrow' her. Another girl I talked to got in trouble for flirting, even though I was the one who spoke to her. I just don't even try to talk to them anymore.\"\n\n\"Maybe I could find out.\"\n\n\"If you do that, you'll jeopardize the effort to find out about the vaccines. I suspect they are all in those roles voluntarily. They have a far better standard of living than most people. Not everyone is crazy like you. Those girls may want to stay safe and comfortable.\"\n\nMariah snorted. \"Like pampered pets.\"\n\n\"Something like that, except they're not getting a free ride like my buddy here.\" Michael patted Henry's flank, startling him awake. \"Those girls work for their livings.\"\n\n\"And they're allowed to go to the meetings?\"\n\n\"It's a grey area. I mentioned a couple of older members who had girls long before The Elites formed. They always kept their girls with them. That's the way it had always been and nobody said anything about it. Their girls didn't even have to wear noise-canceling headphones to the meetings. Those two have been dead for a few years, and normally, girls don't go at all anymore. Exceptions have been made. When there's an exception, noise-canceling headphones are required.\"\n\n\"What sort of exceptions are there?\"\n\n\"There may be other exceptions I don't know about since it was my father who went to most of the meetings, but the two times I saw it happen were for the girl's training. The prevalent philosophy among The Elites is that when they're training a new girl, it's best to keep her with them around the clock to acclimatize her to being controlled at all times.\"\n\nShe glared at him over her shoulder. \"Is THAT why you never let me out of your sight?\"\n\nHe laughed. \"No, you suspicious little brat, it isn't. I like having you with me. Besides that, I do let you out of my sight. How do you think you manage to get yourself in so much trouble? Like getting kidnapped? Or roaming around the house when it was in lockdown while I was gone? Just what training do you think has been going on? You're about as trained as a feral cat.\"\n\n\"Maybe you're just not any good at it.\"\n\nHe pulled her back against his chest and tilted her chin all the way up. \"Is that a challenge?\"\n\nShe swallowed hard. Her natural impulse was to challenge him, but she stopped herself in time.\n\n\"Hmmm?\" He stroked her throat.\n\n\"Nice try, but I'm not biting.\"\n\n\"You're no fun.\"\n\nShe rolled her eyes. \"You're breaking my heart. About sitting in on the Elites' meeting, though -- if I have to wear noise-canceling headphones, what good would it do for me to be there?\"\n\n\"I'm sure the twins can rig something, maybe like an earring or ear cuff, that would feed a tiny little microphone out past the seal of the headphones.\"\n\nShe thought about it. \"What could I do to help, though, if I can't say anything?\"\n\n\"You seem to be pretty good at figuring people out. You certainly had Carruthers nailed. I looked through the bios you wrote out for people we might bring into the first phase of the project. You pay attention to things I don't. And what did Ezra call you? Devious and sneaky? I think the situation calls for both. It's up to you, though. I'm not going to pressure you to do it.\"\n\n\"I want to do it.\"\n\nHe hugged her. \"I was hoping you would, but also hoping you wouldn't.\"\n\n\"Well, which is it?\"\n\n\"It's both. Even though I don't think you'd be in any danger, I'd feel safer if you just got your vaccinations and went back home, but I do want your help and I will enjoy having you with me.\"\n\nHis hands slid up to cup her breasts again, and this time she didn't complain about it when he rubbed his thumbs across her nipples.\n\n\"When do they meet again?\"\n\n\"In about six weeks, but I'm thinking about making a trip before the next meeting.\"\n\n\"Why are you making two trips?\"\n\n\"I want to hire more security sooner rather than later.\"\n\n\"Are you going to take me?\"\n\n\"Yes, if you want to go. I think it would be a good idea. We can get your vaccinations over with and you can see what it's like when there aren't as many people there and there's not as much pressure. I'd like to be able to take care of it in a day without having to spend the night, but that will be cutting it close. There's no good reason to risk a nighttime flight in a helicopter, so if we want to get back the same day, we'll need to leave Bluffdale three hours before sunset.\"\n\n\"When are we going?\"\n\n\"I'm not sure. I was thinking in about a week.\"\n\n\"Who flies the helicopter?\"\n\nMichael gave her nipples a little pinch. \"If I answer that, you'll just ask another question, won't you?\"\n\n\"Probably.\"<br >\n\n\"Thought so. Someone from The Center flies out here and picks us up. We have a helicopter hidden at the airfield, but nobody at The Center knows that, and that's how I want to keep it. Only Ezra and Nate know about it, and they're the ones who know how to fly it.\"\n\nShe tried to figure out the logistics. \"If the pilot is flying from The Center, the helicopter won't get here until well after daylight, so it would be around noon before we got there. And if it's around sunset when the pilot brings us back, how would the pilot get back to The Center before dark?\"\n\n\"I'll see if they can't fly out the night before so we can leave at sunup. We need to get a guest bedroom set up anyway. When we get back, they can stay the night and fly out the next day. I think you'd better save the rest of your interrogation for later, though. It's getting close to dinner time and I thought you might like to eat downstairs since it's Sarah's first dinner here.\"",
        "\"Yes, I would. Thank you.\"\n\n&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;\n\nDinner was unusually well-attended because everyone wanted to meet Sarah. Marcus served a tasty ragout, saut\u00e9ed green beans picked by Seth that morning, and a hearty cornbread with the kind of crust that only comes from being baked in a cast iron skillet. For Mariah, he had made stewed vegetables in a thick, savory broth. When Marcus finally joined everyone for dinner, he was thoroughly pleased to see how enthusiastically everyone was scarfing the fruits of his labors.\n\nAfter the tensions of the attempted kidnapping and rescuing Sarah, everyone was ready to relax and laugh. When Sarah became flustered by being the center of attention, Ezra stepped in with jokes. Paula took advantage of having everyone in one place to conscript people into moving the last of the furniture into Sarah's new bedroom after dinner. Mariah was quiet during the meal, with her mind occupied by thoughts of the upcoming visits to The Center and what she would see there. Since Michael so rarely joined everyone for dinner, there was a general effort to engage him in the conversation. Michael returned the efforts with good humor and took a more active role in the conversation than he normally did.\n\nHenry, by popular demand, was dining with the group. As had become his habit, Marcus had prepared something appropriate for Henry when he cooked for everyone else. This evening, it was the meat and vegetables he'd used in the ragout, but without the onions or heavy spices. Henry polished off his meal in short order and disappeared. It wasn't hard to figure out where he had gone. The twins kept reaching under the table with pieces of cornbread in their hands. A dish of minced meat waited in the kitchen for Julia and Duncan, so nobody was left out.\n\nAfter such a pleasant meal, everyone seemed reluctant to leave the table. The conversation went on until Paula rousted her conscripts and led them off to furniture-moving duty. Mariah offered to help Sarah with whatever arrangements were needed, but Sarah quickly waved her off. Before Ezra and Sarah left, she took Mariah aside to explain that she and Ezra had decided not to move any of her things out of his quarters yet. Then she slapped at Mariah's arm for grinning about it.\n\nMarcus accepted Mariah and Michael's help busing the dishes from the dining room to the kitchen, but once the dishes were deposited, he turned over the kitties' dinner and chased the pair from his domain. They rode the elevator up in comfortable silence. Duncan smelled dinner nearly as soon as they entered Michael's wing. On the way down the hall, his attentions were torn between trying to sniff Henry's tail and trying to weave in and out of Mariah's legs. When they reached Mariah's room, Henry jumped on the bed, belched loudly, and laid on his back to sleep with his head lolling back, his back legs splayed to the sides, one front leg folded, and the other paw stuck straight up in the air. He was done for the night.\n\nThey left Henry to his slumber and the cats to their dinner, and played heads-up Texas Hold 'Em in the lounge. Michael was looking forward to getting Mariah to his bedroom, but there was no need to rush. It was nice to enjoy each other's company. It was also nice knowing that she was surely anticipating what was coming. He enjoyed watching her squirm. He was so interested in watching her squirm that it took a couple of rounds before he noticed something.\n\n\"Sweetheart, is it my imagination, or is your poker game suspiciously better than last time we played?\"\n\nThe corner of Mariah's mouth quirked, confirming his suspicion.\n\n\"You were hustling me!\"\n\nShe laughed. \"Hustling you? We've been betting on paperclips, and they're all your paperclips, anyway. Where's the hustle?\"\n\n\"That's what I want to know. What exactly were you up to?\"\n\nMariah shrugged. \"Maybe I was just having an off-night.\"\n\n\"And maybe I'm the King of England. Now 'fess up.\"\n\n\"Sorry, Your Majesty, but you'll have to be more specific.\"\n\n\"You really want to play games with me?\"\n\n\"I'm trying to. I raise you two of your own paperclips.\"\n\n\"I call.\"\n\nShe turned over her hole cards, adding two nines to the two sevens, nine, ten and jack on the table.\n\n\"If you had a full house, why did you only raise by two?\"\n\n\"So you would call me. If you folded, I wouldn't ever get to see your cards. Now let's see them.\"\n\n\"You just wanted to see how I play?\"\n\nMichael added a red five and red queen to the red ace, red three, red six, and two black eights on the table.\n\nMariah smiled. \"If you had a flush, why didn't you re-raise me?\"\n\n\"I'll tell you if you tell me why you were pretending to be lousy at poker.\"\n\nShe avoided the proposition. \"Was it because you thought I might have four of a kind?\"\n\n\"If you want to know, you'll have to answer my question.\"\n\n\"I wasn't pretending to be lousy at poker. The lousy plays were coincidental to my objective.\"\n\n\"Which was?\" he persisted.\n\n\"To see how you played.\"\n\n\"You're telling me that up until now, you've just been learning my style? That's an awfully long-term strategy over paperclips.\"\n\nShe nodded. \"It would be. Your turn. Why didn't you raise me?\"\n\n\"I thought you might have four of a kind.\"<br ><br >\"I knew it!\"\n\n\"Now that you know, how about giving me a real answer. I know you don't want my paperclips. You obviously don't care about winning the game. You were trying to figure out how I make decisions, weren't you?\"\n\n\"Yep.\"\n\n\"Hussy.\"\n\nShe smirked and made a show of raking the paperclips toward her side of the coffee table.\n\n\"Ezra's right. You're sneaky and devious. A thief, too.\"\n\n\"Because I steal your paperclips like taking candy from a baby?\"\n\n\"Because you've confessed to robbing Hawley's safe once a month for years.\"\n\nShe shrugged. \"I was helping him contribute to the medical fund.\"\n\n\"Okay, Robin Hood.\"\n\n\"What are you worried about? Afraid I'm going to steal your silverware?\"\n\n\"I don't know. Should I check your pockets?\"\n\n\"I wish I had pockets to check. My wardrobe was chosen by a lecherous man and consists entirely of pretty dresses with no pockets.\"\n\n\"Is that your way of asking me to check your bra and panties?\"\n\nShe flushed. \"No!\"\n\nHe could never understand how she could still blush after he'd seen and touched every inch of her body, but he enjoyed it.\n\n\"Really? First you suggest that you're stealing silverware, then you tell me it's not in your pockets. What am I supposed to think? Maybe you're hoping I'll ask you to take your clothes off.\"\n\nThe flush deepened in her cheeks and crept down her neck. \"I do not want you to ask me to take my clothes off,\" she said through gritted teeth.\n\nMichael grinned. \"That's too bad, because that's exactly what I'm going to do. Stand up and take your dress off, kitten.\"\n\nShe stood abruptly and began pulling her dress off as gracelessly as she could manage.\n\n\"Uh-uh. Stop what you're doing.\"\n\nShe dropped her dress back over her head. \"Make up your mind.\"\n\nHe stood. \"That's another spank. It brings you up to thirty-four. Since you want to be a brat about undressing, I'll do it for you. Come over here.\"\n\nShe came to where he stood, looking sulky. He tilted her chin up and smiled at her. \"It's no good pouting, sweetheart. I already know why you're agitated. You don't like it that you're looking forward to your spanking.\"\n\nShe frowned, but he kissed her before she could open her mouth to deny it. He eased out of the kiss and brushed his lips across her cheek to kiss the corner of her jaw. His breath stirred the little flyaway hairs above her ear. When he spoke, lips brushing her ear, goose bumps formed on her arms.\n\n\"I'm looking forward to your spanking, and everything that comes with it.\"\n\nHe nipped her earlobe and tugged lightly, letting it slide through his teeth. The shivery feeling on the back of her neck ran all the way down her spine. He caressed her neck and throat, his touch lingering on the faint trace of the mark he made the day before. With a fingertip, he traced her skin just above the neckline of her dress. The rise and fall of her chest quickened as his finger slid from the dip of her neckline to the top of her shoulder, skimming just beneath the fabric until he traced its edge back to the zipper. The zipper slid down smoothly, nearly to the small of her back. When he eased the dress off her shoulders, it slid down her body until it caught on her hips. She shifted her weight, and it fell to the floor.\n\nHis palm was warm on her back as he drew her closer for another kiss. A day of repeated stimulation left her acutely aware of the ache in her nipples as they pressed against his chest through the thin barrier of her bra, and the fluttery constriction of her pussy clamping down on nothing. He kissed her slowly and deeply, demanding everything and leaving her wondering how she could forget for even a second the breathless headiness he made her feel.\n\nThe more urgently his mouth moved against hers, the hungrier she became for his kiss. His hand slid from her back to her panty clad ass to pull her hips against his, making her moan against his mouth. He drew her tighter to him for a long moment before he broke away from the kiss. He took her by the hand and led her to his room. He stopped her a little ways inside the door.\n\n\"Take your bra off for me, sweetheart.\"\n\nInstead of watching, he went to his nightstand and opened the drawer. When he turned back around, he was holding the emerald green silk belt he used to tie her hands on her first night with him. Her bra was draped over the back of a chair. He smiled when her eyes went to the belt as he walked back to her. He draped one end of the belt over her breast and let the silk brush over its upper slope and across her hardened nipple. Her breath caught. He did the same to her other breast, watching her face as the smooth, cool fabric trailed over her skin and teased the sensitive nub. Then, he pulled a length of the belt taut between both hands and rubbed it back and forth across one nipple and then the other, back and forth until she felt like she couldn't stand it anymore.\n\n\"Give me your wrist.\"\n\nShe held her right wrist out, and he tied one end of the belt around it. He pulled the bedroom door to a forty-five-degree angle and led her to stand with her back against the edge of it. He raised her wrist high and laid the belt across the top of the door.\n\n\"Other wrist.\"\n\nWhen she gave him her left wrist, he raised it and tied it with the other end of the belt. He kissed her before he stepped back to look at her, with her hands tied high over her head, wearing only panties and kitten-heeled sandals. He stayed in her field of view as he undressed, knowing she liked to watch, even when she pretended she wasn't. This time, she didn't pretend. Every time he glanced up, her eyes were following every move. Once he was bare-chested, he caught her biting the corner of her lip and letting it slide through her teeth. He watched her as he unfastened his pants. Her eyes darted back and forth between his face and his hands. As soon as he freed his cock, it kept her full attention while he finished undressing.\n\n\"See something you like, kitten?\n\nHe squeezed his cock before he walked back to her, just enough to ease some of the ache. He ran his fingertip through the fluid beaded at the tip and held his finger to her lips. Her tongue slipped out quickly to lap at his fingertip. He stroked his shaft and collected another drop.\n\n\"Open for me, sweetheart.\"\n\nHe slipped his finger between her open lips and rubbed the pad of his finger over her tongue. Her lips closed around his finger and she began to suck it. The way her tongue rubbed his finger while she sucked made it impossible not to think about the way she sucked his cock. Although he had already satisfied that particular appetite of hers twice today, he suspected that she would happily indulge a third time if he let her. He slipped his finger from her lips and ran his hand down her body, sliding from her throat, down between her breasts, and over her stomach. He slipped his hand into the top of her panties to cup her pussy.\n\n\"You're soaking wet for me, Mariah. You always are. I think you love what I do to you.\"\n\nHe slid a finger between the lips of her pussy and stroked until she was angling her hips for greater contact. Then, he moved to her clit and began stroking it. Before long, she was whimpering as he brought her closer to the release she had been ready for since morning. He pulled his hand from her panties and smiled at her disappointed sigh. He painted her lips with his slick fingertip before he kissed her. He licked and sucked her taste from her lips and kissed her again, his tongue delving deep as he explored her mouth. She looked dazed when the kiss ended.\n\nHe caressed her face and tilted her chin up to make her look him in the eye.\n\n\"You know when I'm going to let you come, don't you?\"\n\n\"Yes.\"\n\n\"When is that?\"\n\n\"When you spank me.\"\n\n\"Mmhmm. Are you looking forward to your spanking?\"\n\nShe looked away and shifted her weight to one leg, then back again. He waited patiently until she gave in and answered his question.\n\n\"Sort of.\"\n\n\"Only sort of, huh?\" His smile made her shiver. \"I'll see what I can do about that.\"\n\nHe knelt in front of her and eased her panties down her legs. When she stepped out of them, he guided her legs so that she stood with her feet nearly shoulder-width apart. He teased the insides of her thighs, stroking them so lightly that it made her shiver. When he reached her pussy, he spread it and leaned in to kiss her clit. He lapped the length of her pussy and returned to her clit, alternately kissing and sucking it until she was panting. Each time she neared the edge of climax, he stopped and licked her lightly.\n\n\"Are you ready for your spanking?\"\n\nShe nodded.\n\n\"You can have it as soon as you ask.\"\n\nShe whined in frustration as he returned to tormenting her clit. After two more rounds of being brought to the brink of an orgasm, she'd had enough.\n\n\"May I please have my spanking?\"\n\n\"Of course you can, sweetheart. Do you remember how many spanks you're getting?\"\n\n\"Thirty-one?\".\n\n\"I think you know it's not thirty-one. It's thirty-four.\"\n\nAs they spoke, he helped her out of her sandals and rose to slide the belt off the top of the door. He left her wrists tied and used the belt between them to guide her to the bed. At the edge of the bed, he untied her hands and kissed the inside of each wrist after he freed it. He laid the belt aside on the bed.\n\n\"Get up on the bed on your hands and knees for me.\"\n\nWhen she was in position, he reached for the belt. It brought him close enough to her face that Mariah could lean sideways and rub her cheek against his shaft. He allowed it until she turned her head in what was surely an attempt to get her mouth on his cock. He stopped her.\n\n\"Not right now, kitten.\"\n\nHe tilted her chin up until she was looking at him. The light caught the shine of a wet arc across her cheek where she had rubbed against the tip of his cock. He held her chin in his hand as he trailed the silk belt down her spine. Her back arched slightly, following the trail of the fabric, followed by a shiver when the fabric brushed across her buttocks. He brought the belt back within her line of sight.\n\n\"I want you to pay close attention to what you feel during your spanking, so I'm going to tie this around your eyes, okay?\"\n\nShe looked from him to the belt, then back up to him before she nodded. He smoothed her hair back from the sides of her face and lowered the belt around her eyes. He tied it carefully, just tight enough to be snug.\n\nHer tongue ran across her lips, whether nervously or in anticipation, he couldn't tell.\n\n\"Is that comfortable?\"\n\n\"Yes.\"\n\n\"You have to tell me if it starts to hurt. Okay?\"\n\n\"Okay.\"\n\nHe ran his hand down her body, starting between her shoulder blades and following the curve of her back. He caressed her ass lightly before he kneaded each cheek in turn. She started slightly with each touch, expecting the spanking to begin. Instead, she felt the bed dip with his weight as he sat on the edge of it. He stroked the backs of her thighs, coming tantalizingly close to their joining without touching the sensitive flesh. His hands slid in tandem down over her calves, all the way to her ankles.\n\nHis weight on the bed shifted as he moved to kneel near her other side, toward the center of the bed. She could feel his body heat as he leaned over her to run his hands from her wrists up to her shoulders. He straightened to stroke her sides, lingering to caress the sides of her breasts and pausing to clasp the dip of her waist. She felt his hand below her chin next, sliding down her neck. She tilted her chin up and he stroked her throat. When she felt his hands on her breasts, she unconsciously leaned into his touch. He let them rest lightly in his hands, her hardened nipples pushing against his palms. Her back arched when he gently squeezed, his fingers sinking into the soft mounds. She missed the warmth of his hands when they left her breasts.\n\nShe gasped when he flicked her nipples. They were already so swollen and sensitive that the sensation bordered on pleasurable pain. A few flicks of his fingers back and forth across the tips of her nipples stiffened them further. She groaned when she felt his thumbs and forefingers close around them. He squeezed her nipples in gentle pulses, sending sparks of sensation through her stomach to her pussy. When he rolled her nipples back and forth, the sparks became a current. She dropped her head and whined softly, growing desperate for more. She felt his hand sliding down her stomach until he reached the top of her mound and stroked it softly.\n\n\"You're doing so well, baby. I just need you to move your knees a little further apart for me.\"\n\nShe moved one knee outward and then the other. The air felt cool between her legs.\n\nHe squeezed a buttock and kneaded firmly, then drew back and landed a thudding spank. Her breath caught. It didn't hurt, exactly. It was just a feeling of impact, a jolting force. He did the same on the other side. He flattened his hand for the next spanks, causing a sharper sting as he layered one over the other in quick succession on one buttock and then the other. The louder smack from his flattened hand was startling, and the sting made her squirm. It wasn't painful so much as it was uncomfortably intense. She had an instinctive urge to move away from the sting, but it didn't actually hurt.\n\nHe paused, and she felt her skin heating where he had spanked her. It left her skin sensitized, and his light touch made her shiver as he caressed her ass.\n\n\"That's my good girl. Now, I want you to lower yourself onto your elbows. You can stay like that, or you can fold your arms in front of you.\"\n\nShe lowered herself to her elbows and then folded her arms in front of her and rested her cheek on them. He spent another minute stroking her back, her ass, and the backs of her thighs. Her position left her ass high above her spread thighs, framing her pussy between them. He took a moment to enjoy the view as his fingers glided up and down the slick lips of her pussy. At their apex, he gently circled her clit until she was moaning and straining for more contact.\n\nThe next two spanks were firm thuds against the bottom of her cheeks. She felt the impact in her pussy even though he didn't strike it directly. She shifted, raising her ass for more. He obliged with two more firm spanks on each side before he switched to sharper spanks that stung and warmed her skin. The discovery that with her head down, she couldn't lean forward away from the spanks heightened her feeling of vulnerability. The heated skin where the spanks had landed was sensitive, and his light caresses made her shiver.",
        "She gasped when his finger slid into her, them moaned softly when he worked in a second finger. She tried to lean back against his fingers as they pumped in and out.\n\n\"You need my fingers in your pussy, don't you, kitten?\"\n\nShe mumbled something unintelligible. His fingers stopped.\n\n\"I couldn't hear that. You're going to have to tell me what you want or you're not going to get it.\"\n\nIrritation cut through the haze of her arousal, and she remained silent. She whined in disappointment when he withdrew his fingers, but still wouldn't ask him to continue. He shifted the spanking lower. His hand came down across the very bottom of her ass so that she could feel the thudding impact in her pussy. When she pushed back seeking more, he stopped and repositioned her.\n\n\"If you want harder spanks, you need to ask.\"\n\nHe reached beneath her stomach and slid his first two fingers on either side of her clit. He stroked up and down around it until she was panting.\n\n\"You're running out of spanks. Only six more to go.\"\n\nThe next spank was firm, directly over her pussy. As it landed, he squeezed her clit between his fingers. His hand came down three more times, jolting sensation through her.\n\n\"Only two left, sweetheart.\"\n\nHe changed the angle of his hand and the last two spanks landed directly on her pussy. His fingers moved maddeningly slowly over her clit, keeping her tantalizingly close to tipping over the edge into the orgasm she had needed all day. She needed something. She needed more.\n\n\"It's a shame you ran out of spanks.\"\n\nThe slow torture of her clit continued until she was whimpering and trying to back away.\n\n\"All you have to do is tell me what you need.\"\n\nDesire swamped her stubborn inhibition. \"I need more spanks. Please\"\n\n\"Good girl.\"\n\nHe spanked her firmly.\n\n\"Do you need something else, kitten?\"\n\n\"I need you to fuck me, please.\"\n\nHe bit back a groan. He squeezed his cock to relieve the urge to thrust into her.\n\n\"I'm going to fuck you. But remember what comes first?\"\n\n\"Spanking.\"\n\n\"Yes. What else?\"\n\nHe continued to spank her, and she closed her eyes, letting herself fall into the rhythm.\n\n\"You have to come for me before you get fucked.\"<br ><br >She heard him, but she was focused on each spank and the jolt of pleasure to her pussy. Each spank made her inner muscles clench, and it made her remember what she was missing.\n\n\"I need your fingers in my pussy, please.\"\n\n\"That's my girl.\"\n\nHe knelt between her legs and pushed both fingers into her pussy. Her moans sent a shudder through him. He needed so badly to drive into her heated depths, but he was determined to make her come for him while he spanked her.\n\nHe slid his fingers in and out while he continued spanking her with his other hand. Each time a spank landed, she tightened around his fingers. When her panting grew desperate, he slipped his fingers out and replaced them with his thumb. His fingers found her clit and he rubbed it, starting slowly and building speed quickly until she passed the point of no return. She shuddered through her climax as her body overloaded. Her inner muscles contracted so hard that the pleasure was almost painful. It went on in waves until it tapered off. She whimpered when her clit became too sensitive, and he eased off.\n\nHe guided his cock to her entrance and pushed in with a single deep stroke. Her inner walls were swollen, narrowing her channel, but so slick that he could easily push through the constriction. The stimulation set off a new wave of spasms that clutched at his cock. He waited until the clenching eased, then gripped her hips and slid back nearly to his tip. Her pussy grabbed at him as he retreated. He filled her again, thrusting in hard and setting off a smaller wave of spasms. This time, he didn't pause. He fucked her with long, steady strokes for as long as he could take it.\n\nWhen he got too close to the edge, he stopped thrusting. He pulled her hips back and leaned into her, pushing his cock in deep. He ground into her and she tightened around him reflexively. He shuddered.\n\n\"Do that again, kitten.\"\n\nShe clamped down like a soft, slick vice around him. Her clutching muscles eased, but when he lightly slapped her flank, she squeezed herself around his cock again. He luxuriated in the feeling of her pussy massaging his cock until he was ready to fuck her again. When he was ready, there was no turning back. He held her in place with his hands on her hips and thrust into her. He drove in faster and harder until he was pounding into her. The pressure at the base of his cock began to expand and he drove himself in deep, falling against her back as his orgasm powered through him. He barely managed to brace his arms to keep his full weight off her. His hips lurched with each spurt that jetted into her, each a separate pulse of pleasure.\n\nWhen it was over, he didn't want to move. His cock still tingled, sensitive to every movement. Her occasional twitches were as much as he could take. She sighed at the loss when he pulled out. He laid beside her and pulled her down to lay with him. The emerald belt still covered her eyes. He caressed her face, sliding his fingertip along the lower edge of the belt and brushing the backs of his fingers over her cheek. He kissed her gently before he untied the belt and tossed it over to his nightstand.\n\nShe turned to lay against his side, resting her cheek on his chest. He stroked her hair.\n\n\"Sleep well, sweetheart. We have a busy day tomorrow.\"\n\nHer only response was to nuzzle his chest and wiggle a little closer.\n\n____________________________________________________\n\nChapter 8 will include tangible progress on the construction project and a trip to The Center. I'm sorry Chapter 7 took longer than anticipated. Life intervened. \n\nThank you again for the feedback on previous chapters. I do respond to feedback, whether it's left in the comments section or sent as feedback through the site. For comments left hear, I usually post the response within a day or two, so if you're interested, check back. I take feedback into consideration for future chapters. Henry's outing in this chapter was in response to a reader's request.\n\nI appreciate the encouragement, which helps keep me wanting to write, and the criticism, which helps me get better at it. If this story doesn't rate a 5 for you, let me know what I can do to fix that next time. Even if it's just something that bugs you, I'd like to hear about it. \n\nI would really appreciate it if you vote for this story. It lets me know how the chapter is received. I compare the scores of chapters in this series to see if I'm going in the right direction. \n\nI appreciate you. Thanks for reading!"
    ],
    "authorname": "Enchantment_of_Nyx",
    "tags": [
        "dominant male",
        "edging",
        "post-apocalyptic",
        "reluctance",
        "spanking",
        "submission",
        "submissive female"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/after-the-fall-ch-07"
}