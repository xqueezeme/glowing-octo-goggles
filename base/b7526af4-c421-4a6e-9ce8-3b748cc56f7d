{
    "title": "My Last Will and Testicle",
    "pages": [
        "(Author's note: Go away! Read something else, for crying out loud! I don't even want to be writing this, so you can imagine how little I want you to be reading it. Particularly since I'm most probably dead by now, and where's the fun in that? So... do me a favor and just bugger off, why don't you?)\n\n***\n\nI, being of sound mind...\n\nHa! That's a laugh! Why start now?\n\n... and of a dyspeptic disposition...\n\nWell, when you've lived with me for as long as I have, you can't help noticing these little things. The problem is that what you pretend to be is - ta-da! - what you become. And by the time I realized that, it was too late to change. Next time around, I'll pretend to be... different. Anyway,\n\n... I do hereby revoke all my prior Wills and Codicils...\n\n... and all that other crap. I cannot think what possessed me to leave my meager goods and chattels (what the hell's a chattel, anyway? Do I have any?) to the worthless bunch of losers that I named in my last Will: my first wife, for God's sake? I must have been drunk, just like I was when I proposed to her.\n\n(Life Lesson Number One: Three things to avoid doing when drunk: driving a car, proposing marriage, and writing your Will. I've done all three, so I can speak from experience.)\n\nShe was a good lay, my first wife; I'll give her that. I remember the first time we had sex. Oh, you don't want to hear about it? Well, tough! It's your own fault: I told you to bugger off...\n\nShe said she was a virgin, but I've always had my doubts. I wasn't; but that was in another country; and besides, the wench is dead. (All right! Plagiarism is just one of my many sins.) Her parents had this beach cottage on the Outer Banks, you see, and in retrospect, I think it was the cottage I was in love with, rather than her. For some reason, I've always found beach cottages incredibly sexy, and this one came with a resident little hottie. What more could a red-blooded young me desire? Answer: absolutely nothing!\n\nWe'd spent a week there with her parents ('Let me introduce you to my folks!'): swimming, snorkeling, surfing, sailing - all the s's except sex - getting hornier by the day (me, at least) and trying to masturbate it all away every night (me again; I don't know about her, although I can guess). It wasn't working. Her parents made sure we were never alone together for very long - I guess they weren't quite ready to be grandparents - and by the end of the week she was as hungry for sex as I was... and I was ready! My balls were so tender I could scarcely walk.\n\nAnyway, at the end of our last day we all set off home: her parents in one car with all the luggage, and she and I in my old rattletrap, which was mostly held together with string and sealing wax (Whatever became of sealing wax?). We'd only gone about ten miles when she suddenly said:\n\n\"I think we're going to break down.\"\n\nThe car was running perfectly (well, at least it was running...), but I already knew that she didn't take kindly to being contradicted, so, 'respecting her intuition' (ha!), I asked:\n\n\"What do you think we should do?\"\n\n\"Turn around. Let's head back to the cottage.\"\n\n\"But your Dad locked it; we won't be able to get in.\"\n\n\"Before we left, I... er... accidentally taped over the lock on the back door, just in case we needed somewhere to sleep... in an emergency. Lucky, huh?\"\n\n\"Wow! Lucky accident! You must have known the car was going to break down.\"\n\n\"I could feel it in my... well, never mind where!\"\n\nSo that's where she kept her intuition! I'd never seen her 'well, never mind where', but I got the feeling that I just might before the night was over, so I put my foot down and we raced back to the cottage in the gathering dusk, reaching almost forty-five mph at one point.\n\n\"Come on! Let's swim by moonlight!\"\n\n\"But your folks took our swimsuits with them...\"\n\n\"I'm game if you are. Race you!\"\n\nShe ran down the sandy beach towards the rising full moon, tossing aside her baseball cap to let her pony-tail swing free, and shedding her T-shirt and bra as she ran. At the water's edge she paused briefly, stepped out of her jeans and slid her skimpy panties down over her tight little ass. She gazed out to sea, absent-mindedly scratching her butt before casually separating her ass cheeks. Then she turned her head, pony-tail swinging in the moonlight, and called to me:\n\n\"Come on! What are you doing?\"\n\n\"Admiring the moons.\"\n\n\"Very funny! Now, get your kit off and join me!\"\n\nWhat is it about naked girls standing in the moonlight at the edge of the ocean? Particularly when they ease their ass cheeks apart? All my life I've treasured this image, and others like it - some of them memories, some fantasies - and they never fail to arouse me. So, here's my first legacy:\n\nTo the individual girls and women (and once, in a moment of mindless inebriated passion, a most beautiful young man) who occupy them, I leave my mental gallery of favorite erotic images.\n\nThank you all, both fictional and... er, factional. You meant a lot to me; you still do, in fact, even if only in the movies of my mind.\n\nDon't laugh! These are among my most treasured possessions, and I bet you've got your own gallery, right?\n\nNow, where was I? That's right... standing on the beach in the moonlight, looking at the slim figure of a naked girl with wavelets breaking over her toes. As instructed, I doffed my kit, and together we walked down a moonbeam, hand in hand, into the surf.\n\n(Life Lesson Number Two: Swim naked by moonlight as often as you possibly can!)\n\nWe splashed our way out to reach the calmer water beyond the breakers, and then swam side-by-side over the roller-coaster waves as they rolled in to shore. My plan was to get just out of her depth, but not mine, so that she'd have to cling onto me. Clever, eh? And it worked! I had a firm foothold between wave crests, but each passing wave lifted me onto my tip-toes and the larger ones took me completely off the sandy bottom.\n\n\"I can't touch! Hold me up!\"\n\n\"Sure; don't panic... I've got you.\" (Oh, so masterful!)\n\nI put my hands round her slender waist and pulled her to me. In response, she put her arms around my neck, spread her legs, and... no, she didn't impale herself on my erect penis, as I'd hoped she would, but instead snuggled herself onto my hip. Still... better than nothing!\n\nShe pressed one thigh against my naked ass while the other trapped my hard prick against my belly. I felt her pussy hair rubbing on my hip. Neither of us said anything, but you know that saying about the 800-pound gorilla? Well...\n\nWave after wave went rolling by to throw itself in frustration against the shore, each one lifting us gently as it passed by in the darkness.\n\n\"Can I ask you a question?\"\n\nThen... right then, I should have realized: she was illogical, manipulative, controlling, and had scant regard for the English language! I should have simply waded back to shore, picked up my discarded clothes and high-tailed it out of there at forty-five mph, leaving her naked and stranded. It would have been the kindest thing to do.\n\nBut right then I was caught up in a sexual adventure that was eclipsing my wildest fantasies, and it was about to get even wilder. So instead, it took twelve years, two kids, a few affairs, endless rows, and God knows how much in lawyers' fees before our divorce was finally final. So, all I said was:\n\n\"You just did.\"\n\n\"No, silly... Another one, then.\"\n\n\"Go ahead.\"\n\n\"Do you ever... you know... pee while you're swimming?\n\n\"Not in a pool; that's gross. My Mom always used to say: 'No piddling in the paddling puddle!' But in a river or a lake... sure, if I need to. Why?\"\n\n\"I need to.\"\n\n\"Go ahead, then. I think the Atlantic can handle it. Anyway, why did you ask me? I'd never have known.\"\n\n\"I thought maybe you'd...\"\n\n\"What?\"\n\n\"Oh, God... Would you... like to feel me while I do it?\"\n\n\"What?... With my hand between your legs, you mean?\"\n\n\"You don't have to if you don't want to...\"\n\n\"I want to.\"\n\nAnd so I did. I reached down between her legs and cupped her furry pussy in my hand, the first time I'd ever touched her there. Almost immediately, I felt a warm tickle in the middle of my palm as she began to empty her bladder into the ocean. At the same time, she grabbed my head with both hands and kissed me fiercely, forcing her tongue deep into my mouth while pushing her naked breasts against my chest.\n\nShe'd always been an enthusiastic petting partner - on those rare occasions when we'd been able to snatch anything more than a quick kiss - but now she was showing me her true sexual self: voracious, demanding, self-centered, and - as I was soon to discover - almost insatiable. As I said, she was a good lay, which is to say she liked it now and again. Well... not now and again, but NOW! and AGAIN!... And AGAIN! and AGAIN! and AGAIN!\n\nWhich brings me to my second legacy:\n\nTo endow, in perpetuity, an Old Jokes Home, where all the old jokes - some of them on life support - can live out their declining years in peace, chuckling at one another, toothless but comfortable, longing to be visited once more by those who still love them.\n\nMy Old Jokes Home will include a Hall of Fame, of course, where the cream of the crop will be displayed for all time. You can hang your own favorites there if you like, next to mine:\n\n'They all laughed when I said I wanted to be a stand-up comedian. Well... They're not laughing now!'\n\nJokes? In a Will? You know, writing this thing is turning out to be a lot more fun than I expected. If you've made it this far, you may as well go on reading. I'll try to stop cursing you. Where was I? Oh, yes: getting peed on...\n\nAs the warm stream flowing through my fingers eventually diminished, she broke our kiss and gasped:\n\n\"Go on! Stick your finger in me! DO it!\"\n\n\"Like this, you mean?\"\n\n\"YES! Deeper! Now fuck me with it! Make me come!\"\n\nIt didn't take long. As wave after rolling wave lifted us together in the moonlight, she grabbed my rock-hard penis for extra leverage, dug her teeth into my neck, and bucked on the finger that I was holding deep in her warm vagina. Seconds later, my throbbing prick shot its load of semen into the Gulf Stream, to join that great American ejaculate that bathes Northern Europe with its warm fecundity. And almost simultaneously, she came with a scream that drowned out the sound of the surf breaking on the distant shore.\n\n\"You all right, Miss?\" came a shout out of the darkness, from some stranger enjoying his evening stroll along the beach.\n\n\"Mmm... Never better, thank you!\" she replied, holding my hand tightly to her cunt so that I couldn't withdraw my finger.\n\n\"Tide's rising!\" he warned.\n\n'It's just risen', I thought to myself.\n\n\"Thank you!\" I shouted into the darkness, mostly to let him know she wasn't alone.\n\n\"That was lovely,\" she said. \"Let's go to the cottage and see if there's anything to drink.\"\n\nWe walked naked up the beach, retrieved our sandy clothes, and snuck into the cottage by the back door. Her Dad had turned off the power so we lit a candle and stood looking at one another in the flickering light, watching the shadows dance across our naked bodies. To my surprise, I felt my prick begin to stiffen again as - for the first time - I gazed at her full breasts with their hard, protruding nipples; her flat pale belly above her triangle of dark curly pubic hair; and her long lovely legs. Had I really just had my hand in between them? Already it felt like a dream.\n\nShe found a corkscrew while I picked out a bottle of her father's wine: not one of his best - he'd notice that - but one that earlier in the week he'd called 'A na\u00efve domestic burgundy without any breeding, but I think you'll be amused by its presumption'. (Evidently I wasn't the only plagiarist around.) We raised our glasses, locked eyes, and toasted:\n\n\"To breakdowns!\"\n\n\"To breakdowns.\"\n\n\"Hmm... Not bad for a na\u00efve domestic burgundy,\" I said. \"Are you amused by its presumption?\"\n\nShe giggled, leant towards me, and put her cheek against mine:\n\n\"Would you like to have it in with me?\" she whispered in my ear. I was to learn that, when aroused, she had a repertoire of crude phrases that would make a sailor blush.\n\n\"You need to ask?\"\n\n\"Guess not; I can see you're almost ready again. Do you have a rubber?\"\n\n\"As it happens, I do.\"\n\n(Life Lesson Number Three: Be prepared!)\n\nWhich brings me to my next legacy...\n\nTo the corner drugstore from which I stole a packet of condoms seventy-odd years ago (being too embarrassed to pay for them), I leave $2 - no, make that $20, with inflation - to cover the debt. Seventy years late, maybe, but that's one less thing on my conscience. In fact - what the hell! - I leave $200 so that a new generation of mortally shy and self-conscious teenagers can shoplift condoms whenever they need them.\n\n\"How many do you have?\"\n\n\"How many? Five. Why?\"\n\n\"We'll keep two for the morning, which means you can fuck me three times tonight - okay? Let's do it on my parents' bed! I want to try everything! What d'you say?\"\n\nTo myself I said: 'This is a virgin? I don't think so!' But in my eagerness to fuck her, I buried the thought. In her parents' bedroom she pushed me back onto the bed and stood over me, holding the candle and looking down.\n\n\"Come on! Give me the guided tour. I've never seen a naked guy up close before. Show me what you've got.\"\n\n\"We could make it mutual, you know.\"\n\n\"How so?\"\n\n\"Put the candle on the nightstand and come down here. Now, kneel over me - no, the other way around; over my face. How's that?\"\n\n\"God, I feel so exposed! What can you see?\"\n\n\"Everything.\"\n\n\"Tell me!\"\n\n\"Well, your bush...\"\n\n\"Yes! Tell me about my bush!\"\n\n\"... is just inches from my face, and I bet if I stuck out my tongue I could lick your pretty pubic curls. Mmm, yes... I thought so! And look! There's your clitoris, just peeking out from between your labia.\"\n\n\"Oh, aren't we the technical one! What is this: Anatomy 101? That's my clit between my pussy lips to you. You can lick them too, if you like. And what am I looking at here?\"\n\n\"That's my erect penis, or my dickcockprick, to you.\"\n\n\"Hello, dickcockprick! How do you taste? Mmm... Salty!\"\n\n\"Oh, do that again!\"\n\n\"What... this?\"\n\n\"Christ-on-a-crutch! That feels good!\"\n\n\"It's so big! Does the whole thing go inside me? Dick and cock and prick?\"\n\n\"I sincerely hope so; the whole nine yards.\"\n\n\"In your dreams! Divided by fifty, maybe.\"\n\nShe was always quick with numbers, which hurt when it came to the divorce. My mind clicked into high gear: 'Let me see... six nines are something-or-other... or should that be nine sixes? And what was it I was trying to calculate again?' I'd have to work it out later.\n\n\"We'll see when the time comes.\"\n\n\"Bugger the time; just make sure that I come, okay? Now, tell me what else you're looking at while I suck on you again.\"\n\n\"Your pussy lips are pink and swollen and protruding from their outer sheath, like the petals of a flower bud glistening with dew-drops on a spring morning.\"\n\n\"Oh, poetic! Tell me more!\"\n\n\"And if I part your moist inner lips with my fingertip... like this, I bet I'll see the opening to your vagina... yes! There it is: that little dark tunnel that leads to heaven...\"\n\n\"... waiting patiently for your tongue to follow your finger - DO it!\"\n\nAs she plunged her mouth back down over my prick, she sat back on my face, leaving me little alternative but to slide my tongue as far as I could into her gaping cunt. I will never forget her smell: 'indescribable' sums it up pretty well, don't you think? Well, maybe not! Put it this way: since that day I've never been able to eat hummus without feeling that little prick at the end of my... er, prick that presages arousal. Not garlic hummus, of course. Nor any of those other new 'flavor enhanced' hummuses; just the plain, old, basic, earthy, infinitely sexy variety. This was my first taste, and I lapped it up like it was the Last Supper.\n\n\"Deeper, go deeper!\"\n\n\"Mmph... That's all the tongue I've got!\"\n\n\"Then pass me a rubber; I need your dickcockprick in me! How do I put this thing on you?\"\n\n\"Don't you remember Sex Ed. class? Unroll it... Imagine I'm a banana.\"\n\n\"But you're not yellow and bent; you're pink and straight. Will it still work?\"\n\n\"Shall I do it?\"\n\n\"Let's do it together. How's that? No... Stay lying on your back. I'm in charge here and we're doing this my way. Now, let's see how much of your nine yards I can take. And don't you dare come before I do, okay?\"\n\nShe turned around, straddling my hips, then closed her eyes and slowly sank onto my outstretched prick. No resistance. A faraway smile spread over her face as she slid all the way down on me: down, down, down until I felt her tight little ass touch my balls. Without difficulty, she took the whole nine yards. Then with one hand she began to pinch her nipples, while the other hand went in search of her clit.\n\nI watched entranced as this sex-hungry young lady writhed on my rod, working her way up first to one orgasm... and then to another, her full breasts swaying in the candlelight and her sweat-drenched body glistening as she bucked: eyes closed, head thrown back, completely focused on the symphony of feelings echoing through her body.\n\nAfter a while, to my surprise, she slumped forward on my chest and neatly rolled herself under me, her hands clasped to my butt to keep me buried deep inside her. She said:\n\n\"Okay, now you can fuck me! Go ahead... nail me to my parents' bed! Screw me just like Dad... like Dad screws my Mom, I mean. Work your long dickcockprick in and out of me! And make it good; I've come five times already. Knock me for six!\"\n\nSo - as requested - I knocked her for six, driving my rigid prick up between her open legs, again and again. And once more she sank her teeth into my neck, coming with the ferocity of a wild animal. Seconds later I ejaculated into her, grunting with passion and filling the first condom with my semen. Gasping for breath, we drifted together back to earth, each of us feeling the walls of her vagina milking my penis dry as it throbbed its dying heart out deep inside her body.\n\nRandom thoughts bounced around in my head, as they often do just after I've come. I remember thinking: 'Maybe I can become a porn star! But what on earth would I do on 'Take Your Daughter to Work Day'?'\n\nI'll spare you the details of the other four times, but at some point in that long and memorable night, as we finished off another bottle of na\u00efve domestic burgundy, I asked:\n\n\"Marry me?\"\n\n\"Okay,\" she said.\n\nBad mistake...\n\n***\n\nHey! I thought this was supposed to be a Will. It started out that way, at least, but somewhere I seem to have lost the plot. Maybe I should publish it instead? Nah!... Who'd want to read this?",
        "So, let's fast forward a few years after my first divorce, to my fourth legacy:\n\nTo my next wife, I leave what I have owed you for decades: a sincere apology.\n\nNot what you wanted from me, I know, but it's the best I can do under the circumstances. We should never have gotten married, honey, but you weren't to know that.\n\nLook, I know you wanted children... Hell! You talked of little else, both before and after we got married. And to begin with, I enjoyed trying and - predictably - failing to get you pregnant. Every month you discovered a new position, or a new diet, or a new homeopathic remedy to try out. You monitored your ovulation, you read your horoscope, you even hung yourself upside down after we'd had sex - the whole nine yards! (I seem to like that phrase, don't I?)\n\nBut that tenth yard - the missing piece of the puzzle that you never knew about (because I was too scared to tell you) - was that when my first marriage ended, I had a vasectomy. There - I've said it! I'm sorry, honey. I really cared for you until it all turned sour, but I'm sure that the twin boys you had with your second husband did you credit and brought you great joy. Are they both still in jail?\n\n***\n\nWhich brings me on to children... I suppose I should talk about children.\n\nThe terms 'child' and 'children' as used in this my Will include the two clueless ne'er-do-wells listed below and any other children of mine that are subsequently born...\n\nThat would be a miracle! Given the vasectomy an' all.\n\n... or legally adopted...\n\nDementia can do funny things to a person...\n\n... or proven by these new-fangled DNA methods to have been the result of fornicating my way through my early life, spreading my sperm around as widely as I possibly could.\n\nI used to imagine them - my sperms (before the vasectomy, I mean) - setting forth on their epic journeys up the Orinoco, racing to conquer brave new worlds and establish colonies in far-flung corners of that darkest continent.\n\nBut I digress... So, what else is new? Sometimes it feels like my whole life has been one long digression. What was it John Lennon said?\n\n\"Life is what happens to you while you're busy making other plans\".\n\nOh, how I miss him! Growing old would have been so much more fun if he'd been around to do it with.\n\nAnyway, where was I? Oh, yes - disposing of my children... if you know what I mean. There are only two (that I know of), both from my first marriage, and I'm not 100% sure of them, come to think of it. What father is?\n\nSo, legacy number five:\n\nTo my elder child, my dear misguided daughter, who first wanted to be a nun but then married - not Christ, but a priest, for God's sake! - I leave your mother's extensive collection of vibrators.\n\nI don't know how they ended up with me after the divorce, sweetie. She always kept them on a high shelf in her closet so that you and your brother wouldn't find them, and in her rush to get away from me, she must have forgotten they were there. Never mind... Her loss is your gain, and I can tell that you need them. That look of quiet desperation in your eyes gives you away, sweetheart. Doesn't he ever screw your brains out any more? Did he ever? Somehow, I doubt it (but thanks for all the grandchildren, by the way. How many are there now?).\n\nI know you'd never go in for an affair, so all that's left to you is either total abstinence (get real!) or masturbation... right? And, knowing you, I bet you feel compelled to fess up every Sunday. Am I right?\n\nHow does that go, anyway?\n\n\"Father, forgive me for I have sinned.\"\n\n(What, again?) \"Tell me about it, my child.\" (And please make it something different this week! I get so bored with the same old same old.)\n\n\"I was lying in bed with my husband, but he was asleep...\"\n\n(Oh, here we go again... This woman's a sex maniac!) \"Yes, my child?\"\n\n\"...and my hand found its way in between my legs.\"\n\n(Surprise, surprise!) \"Found its own way, my child?\"\n\n\"No, Father; you are right... I guided it there, down over my smooth belly and my hairy bush, seeking my swollen clitoris while my other hand was rubbing my big, brown nipples.\"\n\n(Jeez! Must you do this to me every sainted Sunday?) \"Way too much information, my child.\"\n\n\"I couldn't help myself, Father.\"\n\n(But that's precisely what you did!) \"Temptations such as these are sent to try us, my child. And at the end of the day, woe unto him... er... unto her who shall be found wanting.\"\n\n\"Tell me about it! At the end of every single day I find myself wanting... desperately!\"\n\n\"And your husband?\"\n\n\"I find him wanting, too. Completely! Hence the woe. Oh, I knew I should have become a nun! Then I'd be married to Christ, right?\"\n\n(Uh-oh! I don't like where this is headed...) \"In a sense... yes, my child.\"\n\n\"Then, would He fu...\"\n\n\"NO! my child. Not in that sense.\"\n\n\"Maybe He'd ea...\"\n\n\"NO! Not that either!\"\n\n\"Then what's the point? He'd be no better than my sorry husband!\"\n\nCome on, my dearest daughter! Do you really think God cares what you do with your clit? Or that every pleasure must be paid for with a double dose of guilt? Or - the worst possibility of all - have you become a guilt addict, my child? A guilt junkie. There's a lot of it about. Whoever might have taught you that, I wonder? Neither of your parents - that's for sure! I know whom I suspect, but you won't want to hear it from me... So, take your legacy, lock up your guilt (and your bedroom door) and enjoy, for God's sake, as best you can.\n\n(Life Lesson Number Four: Never, ever, let anyone else live your life for you (unless you really want to, of course)).\n\n***\n\nNow, I mustn't forget my son, although I often do, sometimes for weeks on end, I'm (mildly) ashamed to say.\n\nFrom the moment you were born, son, you were a complete stranger to me: an enigma, wrapped - not in swaddling clothes (whatever they are) - but in a conundrum. I always thought that fathers and sons were meant to share things: you know... jokes, confidences, baseball, crude male behavior; and later maybe alcohol, cars, and even occasional women. But all you and I ever shared was mutual disdain and antipathy. I know you'll be glad to see the back of me... No, don't protest! You never were any good at lying.\n\nSo, to you, my son, I leave... Period. I give you my death. May it set us both free at last.\n\nWhoa! Heavy! Sorry, but life's like that, sometimes.\n\n(Life Lesson Number Five: You can't win 'em all. But if you can meet with triumph and disaster, and treat those two imposters just the same, then you're doing a lot better than I ever did, and Rudyard Kipling would be proud of you!)\n\n***\n\nWe all have our own ways of getting from cradle to grave, don't we? Want to hear mine? That's legacy number seven:\n\nTo the twin stars that have guided my behavior for my entire life: Procrastination and Denial (It's not just a river in Egypt, you know). Together, you have led me faithfully through the twists and turns of this mortal coil, so in recognition of your gallant service, I leave you... what? I know! I leave you all the things I avoided doing; all the realities that I never acknowledged; all my sins of omission.\n\nI have certainly left undone those things that I ought to have done, but if you think any of them would have been better for the doing, then... you do them! Go ahead! Be my guest! Given the miserable success-rate of the things that I actually did in my life, the things I left undone were probably my greater gift to humanity. Go figure.\n\nWow! That's a load off my mind - the slate wiped clean. (Don't you just love the way old phrases refuse to die? When was the last time you - or anyone else for that matter - wrote anything on a slate, or wiped it clean? Maybe I should endow a Home for Old Phrases, too. Somehow, 'the delete key pressed' just doesn't cut the mustard, does it? And who cuts mustard, anyway? And why would they?)\n\n***\n\nNow, are you ready for my next legacy? No? What, then? Oh, you'd rather hear some more about my sex life? You astonish me! What do you think this is? Literotica or something? Oh, all right...\n\nAfter my second divorce, I gave up on marriage. As you'll see, there wasn't - still isn't! - a version of it that fitted the way I chose to live the rest of my life.\n\nIt was during that bless\u00e9d interlude after the advent of the Pill and before the spread of HIV (Related? Why would you think that?). Sex was cheap and plentiful, and at the heart of that magical period, there was Woodstock!\n\nRemember Woodstock? No? Me neither, but wasn't it great? In my head I can still hear Jimi Hendrix's guitar writhing in agony: the death rattle of a generation that had dared to hope for a better world.\n\nIt was my niece's idea that we go, I remember that much.\n\n\"Come on, Nunc! It'll be a blast! Wake up and smell the roses!\"\n\n\"I'm too busy dead-heading them to have any time to smell them. Besides, I'm too old.\"\n\n\"You're not old. You're barely even ripe yet! No sweat - I'll make all the arrangements. Pick you up Friday morning... 'kay?\" And she hung up, refusing - as usual - to take 'no' for an answer.\n\nI guess I should tell you a bit about my niece: the only human being I have ever truly loved, and that includes myself. (There were also a couple of dogs, but that's not quite the same, is it?) I had watched her being born nineteen years earlier, and that sort of creates a bond, you know? (Incidentally, my first wife had asked me to leave the country - or at least the state - when she had our two children. You think that might have been the problem between me and my son?)\n\nI wasn't gate-crashing my niece's birth, if that's what you're thinking. My sister had asked me to be there, because her no-good husband had walked out on her a few months into her pregnancy; and although I wasn't really into that sort of thing, family is family, so there I was - mask, gown, disposable bootees - feeling like a real dork, terrified I was going to pass out.\n\nIt's messy, childbirth! They don't tell you that. There's all this blood and piss and shit! It's no place for modesty, that's for sure. And it's hard work... for the mother, too! It's not called labor for nothing.\n\nAnd then amidst the blood, sweat and tears, suddenly there's this perfect new human being, looking rather startled: pale blue at first, but rapidly turning pink before your very eyes, coughing and spluttering, objecting violently to being wrenched from the nice warm uterus that it... sorry!... that she has called home for the last nine months. It's a wonder we ever get over it... being born, I mean. Maybe we don't.\n\nAnd then there's the mother: the center of attention until the moment of birth, and then, suddenly:\n\n'Where'd everyone go? Hey guys! I'm still here! Come on, let me see... please? Did I make that? Really? Wow! Isn't she just gorgeous?!'\n\nAnd she was. I fell in love with you in the delivery room, my dearest niece: pink, wrinkled and utterly beautiful. Oh, how I'll miss you when I'm gone! You won't believe this, but you made me into a better person, and in that moment I vowed to do my best to keep you safe from harm. As you squinted up at me, I'd swear I could see you thinking:\n\n'Hmm... you're not my Dad, but if you're the best that's on offer, then I guess you'll have to do.'\n\nTo tell you the truth, I'd been hoping she'd have twins, my sister - a boy and a girl - because I had names already picked out for them: Denise, for the girl. And for the boy? D'nephew, of course! (We'll send that one to the Old Jokes Home, that's for sure!)\n\n***\n\nFast forward nineteen years, to August 15<sup>th</sup>, 1969.\n\n\"Do you know where we're going, sweetheart?\"\n\n\"Upstate New York somewhere. I figure we'll just follow the crowd.\"\n\n(The month before, Neil Armstrong had walked on the moon, but the earth was still twenty-four satellites short of a GPS system.)\n\n\"How many people d'you think there'll be?\"\n\n\"Oh, a couple... and Julie said she'd try to make it. You remember Julie...\"\n\n\"Your friend with the big, beautiful...\"\n\n\"...eyes? Were you going to say 'eyes'?\"\n\n\"Them too!\"\n\n\"Yes, that's her, lucky bitch!\"\n\n\"Oh, good! I've always fancied Julie. So where are we staying?\"\n\n\"Staying? We're camping, like everyone else.\"\n\n\"But you know I can't sleep in a tent!\"\n\n\"Who's sleeping? Come on, Nunc. Get with the program here!\"\n\n\"What if it rains?\"\n\n\"Then we'll dance naked and won't need to shower! Not that we'll be able to, anyway... shower, that is.\"\n\n\"I'm not going to enjoy this...\"\n\nBut I did... hugely (as far as I can remember). It was impossible, even for a dyspeptic curmudgeon like myself, to avoid getting swept up in the tidal wave of humanity that assembled on that New York dairy farm, of all the unlikely places. It wasn't really about the music. That was just the glue that held us all together; the excuse for nearly half a million refugees from reality to throng together in the rain for four days. It was all about freedom; about liberation from... well, from everything! Perfectly captured by some wit on the wall of a stinking Porta-John: 'Do not adjust your mind! There is a fault with reality'.\n\nI felt I was looking through an open window into an alternate Universe: one where hatred, intolerance, hypocrisy, duplicity, willful ignorance, and all the other mean, nasty, ugly, human traits (as Arlo might have said) - all the faults with reality - had simply been washed away by the rain; a window onto the Garden of Eden, maybe. Amidst the mud and the piss and the shit, I felt born again. Messy, just like the first time.\n\nIt didn't last, of course, but to this day I don't know whether that's because it was all an illusion, brought on by too many mind-bending substances perhaps, or because in middle-age I lost my nerve... what little of that I had to begin with. Monday mornings keep coming around with relentless monotony, don't they? And eventually they wear you down.\n\nBut for four glorious days in August 1969, there were no Monday mornings. Well, actually there was one, because the festival got extended into the following week - we were all having such fun in the mud - but in our alternate Universe, that Monday became an honorary Sunday.\n\n***\n\nWe pitched our pup tent in the midst of a kaleidoscope of canvas, barbecued some hamburgers for dinner, broke open the case of wine I'd had the foresight to bring with me - I'd moved on from na\u00efve domestic burgundies by then - and made instant friends with some spacey neighbors:\n\n\"Hey, dude!... Wassup? How's it hanging?\"\n\n'Straight and true', I thought, but I wasn't about to tell him that!\n\nAfter dinner, she went looking for Julie (how did we even survive before cell phones?), while I cleared up, drank some more wine, listened to the distant music, and inhaled the general air of excitement, anticipation, and pot. At about 10.30 pm, during Ravi Shankar's set, it began to rain. I had just crawled into my sleeping bag when she returned:\n\n\"Nunc... I got lost! There must be a zillion people here; I couldn't get anywhere near the stage. It's amazing! \"\n\n\"Find Julie?\"\n\n\"No, but I found a guy who'd seen her. He said she was looking for somewhere to sleep.\"\n\n\"Shouldn't have too much trouble...\"\n\n\"Don't be snarky, now!\"\n\nShe sat in the door of the dark tent, silhouetted against the dim light outside; then stripped off her damp T-shirt and reached behind her back to unhook her bra. Over the years, I've watched countless women undress, but that moment when their breasts swing free never fails to delight me. And this was a girl I'd loved for nineteen precious years. She turned to reach for a T-shirt to sleep in and noticed me watching her.\n\nShe hesitated momentarily... To cover or not to cover? That is the question! Not, was the answer, she decided. Naked to the waist, she lay back beside me, undid her jeans, raised her hips, and with one fluid movement slid jeans and panties down to her ankles. Another moment of sheer delight.\n\nI think I may have whimpered right about then, because she turned her head and gently kissed me. We'd often kissed before - the way uncles and nieces do, you know? - but this kiss wasn't quite like that, was it? Her lips lingered ambiguously on mine, and was that the tip of her tongue I felt? For a moment, I thought she might squeeze her naked and beautiful self into my sleeping bag, which would have created a real dilemma for me, but instead she sat up, pulled her T-shirt on over her head and wriggled into her own sleeping bag beside me.\n\n\"G'night, g'nuncle.\"\n\n\"G'night, g'niece; sleep well.\"\n\nDilemma postponed. But a little later, in the darkness...\n\n\"Nunc... are you awake?\"\n\n\"I am now.\"\n\n\"Are you really as wicked as everyone says you are?\"\n\n\"Who's 'everyone'? No, never mind... Yes, probably.\"\n\n\"Oh, good.\"\n\n\"Good?\"\n\n\"Yes... Will you be wicked with me?\"\n\n\"What do you mean?\"\n\n\"Would you... you know... seduce me? Please?\"\n\n\"Absolutely not!\"\n\n\"Why not? Don't you fancy me?\"\n\n\"Honey, I absolutely adore you! I've loved you since the moment you were born.\"\n\n\"Well, then... Here I am. What are you waiting for? I'm not a virgin, if that's what's worrying you. The summer of love took care of that.\"\n\n\"But I made a promise never to touch you like that, you see...\"\n\n\"To Mom?\"\n\n\"No, to myself.\"\n\n\"Oh, bummer. They're the worst sort.\"\n\nSomeone had taught her well.\n\n(Life Lesson Number... whatever (Sorry, I've lost count): Be very, very, careful what you promise, particularly to yourself.)\n\n\"Then I guess I'll just have to...\"\n\n\"What?\"\n\n\"Never mind...\"\n\nI listened to the unmistakable cadence of her breathing beside me in the darkness: slower and deeper at first, then shallower and faster, leading up to a series of stifled gasps, followed by - Ahhhh! - that glorious moment of release and resolution that we all know so well.\n\n\"G'night, g'niece; sleep well.\"\n\n\"Mmm... I will, g'now.\"\n\nAnd then it was my turn...\n\nAs Mae West said:\n\n'Sex is like Bridge: if you don't have a good partner, you'd better have a good hand.'\n\nHall of Fame, you think?\n\n***\n\n\"Hey, Julie! You remember my wicked uncle. He was just saying yesterday how much he liked your big, beautiful... eyes.\"\n\n\"Of course I do! Every girl should have one. Hello again, wicked uncle!\"\n\n\"Hi Julie. Glad we met up at last. Did you find somewhere to sleep last night?\"\n\n\"Well, Joan Baez didn't quit until after two, despite being six months pregnant! And then the two guys who were letting me share wanted to mess around; and then their tent leaked... Anyway, you get the picture!\"\n\nSuddenly I saw the solution to my dilemma.\n\n\"You can share with us tonight if you like. That's okay isn't it, sweetheart? It'll be a bit cozy...\"\n\n\"Oh yes, Julie! Do, please! Nunc doesn't snore all the time... Only when he's asleep!\"",
        "\"We'll just have to keep him awake, then; won't we?\"\n\nJulie and I locked eyes and she smiled, her invitation as clear as crystal. The sun shone brightly for the rest of that day, even if only inside my head.\n\n***\n\n\"How wicked is your uncle, anyway?\"\n\n\"Why do you ask?\"\n\n\"Well, I don't want to have to tell my grandkids that I went to Woodstock but didn't get laid!\"\n\n\"What about last night?\"\n\n\"Those two potheads? They were so stoned they didn't know which end was up! And in the event, neither was.\"\n\n\"Well, then; maybe tonight's the night!\"\n\n\"But don't you want to keep him for yourself?\"\n\n\"I'd love to, Jules, but he won't have me. I've... er... asked him already. It's an honor thing, you see?\"\n\n\"No, not really, but if you're sure...\"\n\n\"If she's sure about what?\"\n\n\"Oh, hi Nunc! We were just discussing tonight's sleeping arrangements. Julie wants to find out how wicked you are.\"\n\n\"Well, I may be wicked, but I'm not quite as liberated as you two young ladies seem to be. I'm not sure I'm ready for an audience, sweetheart. Wouldn't you like to catch The Grateful Dead?\"\n\n\"But Nunc! It's raining toads! You can't expect me to go out in that! What if I promised to keep my eyes shut; how would that be?\"\n\n\"Can I trust you?\"\n\n\"We could always blindfold her, just to be sure...\"\n\n\"Groovy! Let's do it! Here, Jules... tie this on me. Oh, this'll be far out!\"\n\nThese days, she'd have said 'awesome!'; but this was then, and 'awesome!' hadn't been invented.\n\nI watched Julie tie a scarf around her eyes and then, to my astonishment, push her back onto her pillow and kiss her. There was nothing ambiguous about this kiss: it was a full frontal declaration of pent-up passion, the perfect expression of what I was feeling for her myself.\n\n\"Who did that? Jules? Is that you? Do it again - I need to be sure... Yes, you're not prickly like he is.\"\n\n\"Honey, I've wanted to do that to you ever since we were in seventh grade!\"\n\n\"So what kept you? D'you have a blindfold fetish or something?\"\n\n\"You mean you don't mind?\"\n\n\"So far, it's nothing but bliss. Is there more? I'm new to this.\"\n\n\"Me too, love. Let's see... How does this feel?\"\n\n\"Heavenly! Would you rub the other one too? But shouldn't we blindfold my uncle, before we go any further?\"\n\n\"Nah... Let him watch. Show him what he's missing.\"\n\n\"Undress me, then!\"\n\nNow, I don't know if you've ever lain in a small tent at night, with rain drumming on the canvas, the sound of Creedence Clearwater playing in the distance, and two half-naked girls - one of them blindfolded - wrapped in each other's arms beside you... but if you have, you'll know what I'm talking about. And if you haven't... well, I can recommend it!\n\nIn the half-light that was seeping into the tent, I watched Julie first slide her hand up under my niece's T-shirt, and then undo the zipper of her jeans and work a hand in between her legs. Impatient, my niece reprised her act of the previous night: lifting her hips, sliding her jeans and panties straight down to her ankles, and - tonight - opening herself to her friend's intimate touch.\n\nLying between us, Julie was fumbling to undo her own jeans, so - like the perfect gentleman I wasn't - I reached around her hips to lend a hand. With years of practice, I'd become quite adept at undressing women - particularly when they wanted me to - so it didn't take long before she was lying naked and lovely in the semi-darkness between us, big beautiful... eyes and all.\n\n\"My wicked uncle's gone very quiet. Is he still here?\"\n\n\"Uh-huh.\"\n\n\"Is he looking at us?\"\n\n\"Uh-huh.\"\n\n\"Both of us?\"\n\n\"Uh-huh.\"\n\n\"What's he doing?\"\n\n\"Umm... being wicked, of course.\"\n\n\"As wicked as you?\"\n\n\"Not yet, but give me time,\" I said, nuzzling the back of Julie's neck.\n\n\"Oh, Christ! I want to see!\"\n\n\"Well, you can't; it's private.\"\n\n\"What does it feel like, then?\"\n\n\"Whom are you asking?\" (I have always felt that grammar is important, even at moments like this.)\n\n\"'Whom'? Both of youm, of course! Go on... tell me what you're doing.\"\n\n\"He's lying behind me, cupping one of my big, beautiful breasts in his hand and rolling my hard nipple between his fingers, like this.\"\n\n\"Oh, yes! Do it to me!\"\n\n\"And I can feel something hard pushing against my naked ass that's just yearning to be liberated. I'll be right back... Don't go away!\"\n\n......\n\n\"Hey, what's going on? Why have you both gone quiet? You're kissing, aren't you? Does he do it better than me?\"\n\n\"You're right about him being prickly! But I don't know which of you I like more. Let me try you again... Mmm, your lips are much softer, and your tongue's smaller, and you taste sweet and lovely. He's rougher, but he sucks on my bottom lip, which I love, and he tastes of wine. Hmm... I think I'll take one of each.\"\n\n\"Like that taste of wine, do you, Julie? Here, try this......\"\n\n\"Oh! Good grief! No one has ever done that with me before!\"\n\n\"What did he do? What did he do?\"\n\n\"He took a mouthful of wine, kissed me, and let it slowly dribble into my mouth! I almost came on the spot. That was wicked!\"\n\n\"Do it to me! Do it to me!\"\n\n\"I'll have to get another mouthful from him first......Mmmm...\"\n\n\"Oh! Oh! Oh! God, that's so erotic! Do it again!\"\n\n\"There are other places you could put it, you know, Julie,\" I whispered to her.\n\n\"You mean, in her...?\"\n\n\"Here, I'll pass you another mouthful and you can choose where to deliver it. How's that?\"\n\n\"AHHH! Jeez, Jules! Was that you? But I bet it was his idea, right? That felt amazing! Drink it back out of me so I don't dribble on the sleeping bag... please? And would you lick me while you're down there?\"\n\n\"Honey, I thought you tasted good before, but you taste even better here! Spread your legs a little and raise your ass... Now I can really get at you! Your pussy is glorious: it's wet and open and swollen, and now it tastes of wine... Mmmm!\"\n\n\"Eat me! Drink me! Make a whole damned three-course meal out of me!\"\n\nI watched enthralled as Julie lapped at my niece's cunt, occasionally coming up for air before plunging back down with an enthusiasm that would have matched my own, had I been lying in her place. My darling niece - still blindfolded - lay naked beside me with her legs wide apart, a hand on each breast, rolling her own nipples between her fingertips.\n\n'Was I really keeping her from harm?' I wondered. 'Well, there are many worse things in life than a crashing orgasm', I thought, as I watched Julie wrap her arms around her hips, drive her tongue into her sweet vagina just as far as it would reach, and lift her gracefully up, up, up, and... Ahhh! Yes!... over the top.\n\n\"OH! Oh! oh!... Why have we never done that before? Come up here and kiss me, you lovely Julie person,\" she said, dreamily. \"I want to taste my pussy wine on your lips.\"\n\n***\n\nAnd then, a little later: \"Are you guys going to fuck now, or what?\"\n\n\"Oh, I hope so!\" Julie and I said in unison... and laughed, of course.\n\n\"Then go for it! And be good to each other, will you? For my sake?\"\n\n\"I hope you don't feel like a go-between, Julie,\"\n\n\"I hope I'll feel more like a come-between!\"\n\n\"Then fuck her for both of us, 'kay, Nunc?\"\n\nBetween kisses, I ran through the pre-flight checklist that I'd learned from experience could forestall a mess of anguish:\n\n\"Mmm... Virgin?\"\n\n\"Mmm... Hardly!\"\n\n\"Mmm... Condom?\"\n\n\"Mmm... Pill.\"\n\n\"Mmm... And vasectomy.\"\n\n\"Mmm... Belt and braces!\"\n\n\"Mmm... Position?\"\n\n\"Mmm... S'prise me!\"\n\n\"Mmm... Ready?\"\n\n\"Mmm... Steady...\"\n\n\"GO! Hey, Nunc! That's really sweet. You're just pretending to be wicked!\"\n\n\"Don't tell anyone, okay?\"\n\nIt was the first time in more than a decade that I'd fucked someone as young as Julie, and I'd forgotten how gloriously tight teenage cunts could be. To s'prise her, I rolled her onto her back next to my darling niece, lay on my side beside her, and semi-scissored my legs with hers (You know that lovely position? It's one of my favorites). My prick, which had already risen magnificently to the occasion (as - in those long-forgotten days - I knew it would), was now aimed straight at the open mouth of her vagina.\n\nShe reached down between her legs, took hold of my penis and rubbed it against her wet, swollen pussy lips. Then, unexpectedly, she turned her head away from me and gently kissed the naked girl lying next to her, still blindfolded. The simple, intimate act of inclusion just melted my heart. Feeling a sudden tsunami of passion for these two, wonderful people, I rocked my hips forward and drove my prick into Julie's welcoming cunt.\n\nWe gasped in unison... 'S'prise!'... at the breathtaking intensity of the feelings that erupted between us.\n\n\"Oh God! He's in you, isn't he? This is as good as watching! Mmmm... Go on kissing me while he fucks you...\"\n\nAs I said, I'd forgotten how tight teenage cunts could be, and the sensation of sliding into Julie that first time catapulted me almost to the point of no return. I hadn't felt a cunt like this since Rover was a pup... whenever that was.\n\n\"Don't move!\" I implored her, as the delicious waves of feeling washed right up to my doorstep.\n\n\"But I want to move,\" she moaned. \"You feel wonderful!\"\n\n\"You too, but just give me a moment - just a moment,\" I gasped. \"Then you can move.\"\n\n\"Is it good? Is he big? Does he stretch you?\"\n\n\"Yes, yes, and... God, yes!\"\n\n\"And how does she feel?\"\n\n\"You really want to know?\"\n\n\"Tell me!\"\n\n\"She feels like she's the real reason that sex was invented. I've always wondered about that.\"\n\n\"Oh, I like your Nuncle! He can fuck me any time he wants to.\"\n\nSlowly at first - both to pace myself and to seek out that ideal rhythm that's unique to each couple, and to each coupling - I began to slide in and out of Julie's delicious cunt. The temptation to throw caution to the winds and simply nail her to the sleeping bag was almost irresistible. And - like Oscar Wilde - I can resist everything except temptation.\n\nBut on this occasion I was fucking for two - well, for three, if you count Julie - so I fought the temptation manfully and, for once in my life, I won. I wanted this to last a long, long time, so instead of nailing her, I took her for a stroll along the edge of the cliff... metaphorically speaking, you understand.\n\nI've always loved cliff-top walks, but one false step and it's all over: you're slip-sliding your way to a premature petite mort. The trick is never to look down; keep your eyes fixed firmly on the distant horizon until that glorious moment when you can launch yourself over the edge on wings of ecstasy and soar with the mewling seagulls.\n\n\"What are you thinking about, Nunc?\"\n\n\"Seagulls.\"\n\n\"Me too!\" said Julie. \"I want this to last for a long, long time...\"\n\n***\n\nAnd it did, didn't it?... Forty-eight years and counting, although I don't think I can count much higher than this. Forty-nine, maybe; fifty would be nice. Wasn't there a sum I wanted to do once that had a fifty in it? I can't remember.\n\nSo, that brings me to my final legacies.\n\nThe bank accounts (both of them!) are joint, so that's not a problem. Not for me, anyway. You'll have to deal with the overdrafts. And you're on the title to the latest rattletrap, too; so that's taken care of.\n\nLuckily, I put the house in your names some years ago, if you remember. Well... it wasn't luck, was it? It was your suggestion! And although I made an awful fuss about it at the time, I now agree that it was the right thing to do. There! Bet you never thought I'd admit that, did you? Thank you for the $1.00 you paid me for it; I'm still trying to decide how to spend it.\n\nI know!\n\nI leave it... to you! Umm, let's see: that's fifty cents each! Don't spend it all at once.\n\nThe key to the wine cellar is in the... No, I think I'll let you find that for yourselves, if you haven't done so already. (I could have sworn I had another case of Chateau Lafite Rothschild, 1982...)\n\nFinally, the deed to that gold mine in South Africa that I never told you about? Or was it a diamond mine? Never mind; it makes no difference, because... it doesn't exist! Never did! Ha! Had you going there for a moment, didn't I? It's nice to think you'll both be cursing me when I'm gone... God, how I'm going to miss you both!\n\nTake good care of one another; I know you will, anyway. Love doesn't give you much choice in the matter, does it?\n\nLife Lesson Number Last: There's always time for one more Life Lesson, until...\n\nTHE END"
    ],
    "authorname": "Conversations",
    "tags": [
        "swimming",
        "peeing",
        "first time",
        "threesome",
        "ffm",
        "woodstock",
        "romance",
        "confession",
        "implied incest",
        "bisexuality"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/my-last-will-and-testicle"
}