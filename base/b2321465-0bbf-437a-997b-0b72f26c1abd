{
    "title": "Finding Home",
    "pages": [
        "Thursday\n\nAt precisely 0855, Andy DeGroat pulled his 2015 Toyota Tacoma into the administration building parking lot of Colton College. After six years in the USMC, being dressed in civilian clothes was still a novelty to him, but his grandfather, as he always did, reminded him that if he wore the same basic pant/shirt combination each day, he would still have a uniform of sorts.\n\n\"Andrew, Steve Jobs wore the same damn thing for years. That man had enough money to burn a wet mule. You'll be fine,\" the older man had lovingly explained. With his grandmother's sartorial help, he had settled on Bill's Khakis, and Red Wing boots. The gray and navy polo shirts, and button-down Oxfords came from his grandfather's Boston tailor: Sordillo's. His sweaters bore the ubiquitous horse and rider logo of Ralph Lauren. Grandma was not happy with the uniform approach, so she made sure the constituent parts were to her standards and liking. His workout gear and casual attire were left over from his time in the Corps. She was satisfied, but not thrilled with the image he would be conveying through his appearance around campus.\n\nTo be fair, it was hard for a 6'3\" Marine not to stand out. Add to that the angry scars running down his left arm and the left side of his neck, and he was bound to be a curiosity. The scars looked better every day, and Andy knew himself to be fortunate. Others of his brotherhood could not return to their former lives, for they had been translated to that eternal brotherhood of Marines who had fallen in battle. Still, he was a good-looking, 24-year-old combat veteran. No one was shooting at him here, and Uncle Sam was footing the bill for a top-notch education. He was fortunate, indeed.\n\nAs he strode through the building, he was conscious of being watched. This was not serious recognizance, but rather a curious gawking at the new guy. His grandparents had attended, and met one another, at this college: a small, academically rigorous institution in the northeast. The walls did indeed have ivy on them, and the place reeked of old school respectability. He made his way to the second floor, and at 0858, let the receptionist know he was here for his 0900 meeting with Dr. Gloria Adams. He was told the Provost was expecting him, and to please take a seat.\n\nAt 0902, the office door opened and Provost Adams welcomed him into her office. She was a striking woman -- quite tall, particularly so in her tasteful heels. Her pant suit was obviously tailored for her, and she wore the ensemble quite well. Diplomas from prestigious institutions dotted her walls, as well as photos with various VIP's. On the credenza behind her massive desk, there was a picture of a family of 5: The Provost, her husband, and three willowy blondes. There was also a recent wedding photo adding a sixth person to the mix. The Adams family was stunningly photogenic.\n\n\"Mr. DeGroat, welcome to Colton. Your grandfather tells me the past month has been a bit of whirlwind for you. I hope you'll find matriculating into college life easier than processing out of the Corps.\"\n\n\"Thank you, ma'am. My grandparents said to be sure to pass along their greeting,\" replied Andy.\n\n\"They are wonderful people. They've been faithful and successful ambassadors of this school for a long time. Your grandfather's time as chairman of the board of trustees is used as a model in higher education classes. I fear we'll not see his like again.\"\n\n\"Yes, ma'am,\" Andy replied sheepishly. He knew of Ralph Carlson's love for the alma mater, and knew he'd served on the board, but had never heard this side of the story. He'd have to ask him when he called them tonight.\n\n\"Andy, to be clear, we don't usually have incoming freshman into the Provost's office for a sit down. You obviously are not a typical incoming student, and with it being the beginning of the summer term, it worked out well for me to sit down with you. This first week in June is much less hectic than the beginning of either semester,\" she explained.\n\n\"My grandmother warned me I may get the red carpet,\" mused Andy.\n\n\"Well yes, as a legacy, you are a valued part of our college community. But there is another reason I've called you in,\" she paused. \"You're a mature young man. You've seen things most of us will never see in our privileged, sheltered lives. You have the physical scars to prove it. Given your unique stage of life, I have a favor to ask of you,\" the Provost looked at him as though she were appraising him in some way.\n\n\"Yes ma'am,\" Andy replied. \"I'll be glad to help if I can.\"\n\n\"Good. Your grandfather thought as much. Three years ago, we were set to demolish President's Hall. Two past US presidents lived there when they were students here at Colton, and the building needed structural improvements, as well as a bevy of other work done to bring it up to code. As I said, we were ready to tear it down. However, a donor agreed to underwrite the entire remodel, and so that work has already begun. The Commons Room in that building stands alone, it's connected by a breezeway to the larger structure. That renovation was done first as a kind of showpiece for donors. It was once the small chapel on campus, so it's a lovely space. Long story short, we have work being done at other dorms on campus, and I'm afraid all we can offer you is co-ed housing in the Common Room,\" said the Provost with all the fervor of a used car salesman. \"It's quite nice -- think the Gryffindor Common Room at Hogwarts.\"\n\n\"Ma'am, I've been living in Quonset Huts, or tents with other Marines. Bunking in the Commons Room is no problem.\"\n\n\"Thank you. And, to be clear, it is a co-educational space for the foreseeable future.\"\n\n\"Again, I'm used to 50 jarheads. How many other students are in the Common Room?\"\n\n\"You'll be one of three. The other two students are women,\" said the Dean. \"And, Lance Corporal Andrew DeGroat, one of those women is my daughter. Her name is Eden.\"\n\nAndy smiled. He knew there was a catch. There always was with higher-ups. Military, academy, business -- it was all the same. Shit ran downhill. SSDD.\n\n\"Roger Wilco that, ma'am.\" When the Dean looked puzzled at his response, he clarified, \"I hear you loud and clear Dr. Adams. And, just to be clear -- it's sergeant. I got promoted on my last tour in Iraq.\"\n\n\"Yes, well, congratulations Sergeant DeGroat. As I was saying, Eden and her roommate Sara both row crew here. They are good students, and good athletes. As the Provost, I'm glad we can put students in that space temporarily. However, as a mom, I don't like my daughter living in a place next door to all sorts of comings and goings. There's not even an RA or RD in the complex. This may sound matriarchal and sexist, but I would feel much better with a young man possessing your resume around to keep an eye on things.\"\n\n\"I understand, ma'am,\" replied Andy. \"Mine is a deterring presence.\"\n\n\"One last thing, Andy. Please don't let Eden know that I've done this -- intentionally. Her sisters went to other schools, and I was thrilled when she decided to come here. I don't want her thinking her mother is putting a decorated Marine in her building to look out for her -- though that's exactly what I'm doing.\"\n\nAndy smiled again. \"Need to know, ma'am. Roger that.\"\n\n\"Thank you. Marcie will walk you down the hall to get your parking pass and ID card. You'll also need a key fab for the door to the Commons. I'll be talking with you periodically just to see how you're settling in.\"\n\n\"Actually, ma'am -- there is one more thing.\"\n\n\"Yes?\" The Provost looked up from her desk. Her face was partly curious, partly annoyed at this glitch in the conversation.\n\n\"My grandparents sent me the alumni magazine and they forwarded emails as I was recovering, and I'm afraid I have some concerns about my time here,\" said Andy.\n\n\"Mr. DeGroat, your SAT scores were outstanding. I saw that your ASVAB scores were also quite high. I understand you turned down multiple offers to attend the Naval Academy. You may be a bit rusty academically, but I'm sure you'll do fine,\" she said soothingly.\n\n\"Well, no, actually, I'll do very well here academically, I can assure you,\" replied Andy.\n\n\"So, I don't understand your concern. You're a legacy. Your family is commemorated in the lawn outside the dining commons. You belong here,\" she stated matter of factly.\n\n\"As I said, in reading the university media, it seems you go out of your way to be inclusive to all 'identities.'\"\n\n\"Yes, we are quite proud of our inclusion program. We were a pioneer in safe spaces. Our LGBTQ+ program is considered the model within higher ed,\" she rattled off these accomplishments quite proudly.\n\n\"Well yes, but I wonder if your inclusion program includes a guy who identifies as I do,\" he said.\n\n\"I don't understand.\"\n\n\"I'm a veteran. I'm a heterosexual, white male who comes from a family of privilege. Some would say that's a lifetime of advantages. However, my sisters and I never asked for our parents to be murdered on 9/11, just like we never asked to be born into a wealthy family. We just were. There's nothing I can do about that. I can't make up for it or feel sorry for it. I joined the Marine Corps because I wanted to make the people who killed my parents pay for what they did. Pure and simple. It was not love of country, or any other form of patriotism. It was a grown man trying to get back at the people who took his parents from him when he was five.\"\n\n\"Andy, you and your sisters are victims -- yours is a tragic story. I'm sure this will be a safe space for you,\" she said. There was a fleeting look on her face that said much more than simple words of condolence. Andy caught a glimpse, but then it was gone. Whatever was behind that look was well-camouflaged, and would likely stay that way.\n\n\"That's just it. I know that technically we are victims; but identifying as a victim was not an option with the Judge. I'm not some sort of fragile victim. I don't want a 'safe space' because the world is not a safe fucking space - pardon my French, ma'am. People kill people out of sheer spite and hatred. That means our government spent a lot of money training people like me to stop them. That's what helps keep the world from going down the toilet, not inclusive language, or safe spaces. I hate violence, but I'm damn good at harnessing that beast when I need to. It's why I became a sniper. That lethal violence is precise. I came here to further my education, not to be judged for what I've done, or that I'm a toxic male, or whatever the hell else goes on in people's inclusive safe spaces. My sisters and I are not victims. We survive and we overcome. That's not a Marine Corps thing, that's a Judge Ralph Carlson, Colton class of 1968 thing. It was the man's damn mantra to us when we were growing up. I'm not sure, given the literature and media I've read in the past six months, that this place will let me be anything other than a victim. I will fight that, and let me assure you, I fight damn well.\"\n\nAndy had not once raised his voice. He has spoken, rather, in his NCO command voice. Not loud, just assertive. The ball was now in the Dean's court. There was a long, awkward pause before she finally spoke. When she finally did, she spoke quietly.\n\n\"Well, yes. I fear you may be right.\" She looked him in the eyes, \"So, why are you here? Or, maybe, where did you want to go to college?\"\n\n\"I'm here because of a deal I made with the Judge. He let me enlist in the Corps at 18. One six-year stint, then I enroll at Colton for one year. I talked him down to a trial semester, and he agreed given that I start in the summer term. I looked at Hillsdale and St. John's in Annapolis. They were my top choices. Really, anyplace with a great books curriculum was on the table.\"\n\n\"Andy; your family is a valuable part of our heritage. They are a part of the fabric of this place. In truth, there would not be a Colton if it were not for your grandfather. Can I make a deal with you? Please come and see me -- say once a week. Let's talk about your experiences. If we can't be a place where people who are committed to making their way in the world as it is feel welcome, then we may need to step back and reevaluate our approach. Can we make that deal?\" The Provost looked at him, not pleadingly, but with concern and empathy. There had been damned little of that in the Corps, so it did take him aback.\n\n\"Yes ma'am. That would be fine.\"\n\n\"And Andy, one more thing, please?\"\n\n\"Yes?\"\n\n\"When we're in here, just you and I, please call me Gloria.\"\n\n\"Yes Gloria, I believe I can do that.\"\n\nAndy found the Commons Room at President's Hall easily enough. He parked his Tacoma in the appropriate space and went to recon his new home. The work next door was going full speed ahead. He used his key fab, and entered through the double doors. True to the Dean's word, the space took his breath away. There were black-out curtains over the windows, so it was quite dark for 1000 in June. Even in the dark, it was magnificent. His sisters were huge Harry Potter fans, so he got his phone out to take a few pictures. As his eyes adjusted, and he looked around, he saw that the room consisted of two levels. The main level had a high, vaulted ceiling. There was, however, opposite the fireplace, a mezzanine level. He quietly walked up the stairs. It was there that he found the real living space: a bunk bed with full-size mattresses on each level, as well as a separate full-size bed that was currently unmade and unoccupied. Both were heavy, antique-looking pieces of furniture. There were three large, wooden wardrobes and three Carnegie library desks, with library book carts for each desk. He also noticed that the bunks were currently inhabited by his two new roommates, fast asleep.\n\nAndy realized that moving his stuff in right now would not be welcomed behavior by his roommates, so he decided to grab his shaving kit and head to the latrine. The drive hadn't been all that long, but he realized that he had been quite nervous about getting settled and his meeting with the Provost. He wasn't ripe, but neither was he fresh as a daisy. A quick shower and change into his PT gear would have him ready to unload his truck. Quietly, he went to his truck, retrieved his gear, and made his way into the bathroom.\n\nThe bathroom, like the rest of the Commons, was exquisite. White and black subway tiles covered the floors, and there were tile walls leading to two, large, half-walled shower stalls. This was obviously a carryover from an earlier era, and Andy quickly deduced that this presented a problem. If he were in the shower when one or both of his roommates came in, well, things would get very personal very fast. Time spent in a military hospital had removed any such misgivings for Andy, but he doubted his 20-year-old roommates shared that sentiment. \"We'll cross that bridge later,\" he thought. He sat down on the bench by the showers, took off his boots, and carefully removed his khaki pants and polo, folding them neatly. The sinks and mirrors were directly opposite the showers, so Andy could not help but see the catastrophic results of his time in the Corps on his body. Still, the scars were less angry than they had been, even a month ago. He used the cream his sisters and grandmother insisted upon for scars and didn't worry too much about it.\n\nAndy had no sooner gotten into the shower and turned the water on, when the door burst open. Two of the most beautiful women he had ever seen barged into the bathroom. He recognized Eden from the picture in her mother's office. The other girl, Sara, looked to be bi-racial. Both were close to 6 feet and dressed only in cotton tank tops and boy shorts.\n\n\"If you're name is not Andrew... Andrew something or other, you've got about 10 seconds to clear your perverted ass out of our room!\" shouted Eden angrily.\n\nAndy was slow and certain in his response to this challenge. \"Whoa. Yes, my name is Andrew something or other, but you can call me Andy. You must be Eden and Sara,\" he said as calmly as he could. \"I just got here, and I didn't want to wake you up moving my stuff in, so I figured I'd grab a quick shower and change my clothes 'till you woke up. I'm sorry if I woke you.\"\n\n\"Oh. So, Andy something or other, what is your last name?\"\n\n\"DeGroat.\"\n\n\"Are you related to Ralph and Helen Carlson?\" Eden asked tersely.\n\n\"Yes. They're my maternal grandparents.\"\n\n\"So, you're the big deal legacy that got stuck here as well?\"\n\n\"It would appear so, but this is a hell of a nice place to get stuck. And, the two of you are much prettier than my previous roommates,\" smiled Andy.\n\n\"Not to be rude, but what happened to you?\" Sara spoke up for the first time.\n\nAndy realized that his upper torso was easily visible to his new roommates. \"I was a Marine. IED in Iraq. Or, as we liked to say in the Corps, I got BTFU'd.\"\n\nWhen he noticed their blank looks, Andy explained, \"Blown the fuck up.\"\n\n\"That would explain your ink,\" Sara said, glancing at the globe and anchor tattooed on his right pec. \"Are you OK?\" she asked.\n\n\"I am, thank you. I was lucky. My sisters and grandmother tell me that if I follow their regimen with scar cream, it'll look less -- startling. Plus, it didn't mess with my tattoo,\" he said smiling.\n\nSatisfied with his bonafides, the tension in the room dissipated and the girls' mood got more playful and more inquisitive. Much, more playful.\n\n\"Well, Andy the Marine. If you need help with that cream, please let us know. We'd be glad to help our new roommate,\" said Eden with a rather wicked grin on her face.\n\n\"Umm hmm. Girl that is the truth,\" echoed Sara.\n\nAndy blushed. \"Yes. Well, if you will excuse me, I'll finish up here and get dressed so that we can be properly introduced, and I can bring my gear in.\"\n\n\"Oh no, Andy,\" said Sara quickly, \"we like the view just fine. We'll wait. We are roommates after all. You've seen us in our underwear, so it's only fair.\"\n\nAndy froze, suddenly feeling very naked.\n\n\"That's true, Andy,\" said Eden, \"fair is fair.\"\n\n\"Yes. Well, I seem to be the only one sans clothing. While you are -- I believe the term is scantily clad -- you're not in your altogether. So please, we can play peep show later,\" Andy said sounding much more like a USMC non-com than he intended to.\n\n\"Well, OK. But you can't blame sisters for wanting to check out the goods when the goods are quality,\" retorted Sara. \"But, for the record, we really do need to pee.\"\n\n\"Be my guest. I'm used to sharing a latrine with 50 other Marines, so I suppose I can handle two beautiful young women handling their morning necessities.\"\n\nTwo hours later, all of Andy's gear was moved in and stowed. This, however, did require the help of his lovely roommates. The girls had used the third wardrobe as overflow for their own space, and so there was some re-organization that had to happen before Andy could stow his clothing, as well as his Marine Corps Class A uniform. Ultimately, Eden made a phone call, and a fourth wardrobe was wheeled in by a crew of men who were obviously college maintenance. Thankfully, at this point both girls had completed their morning rituals and were fully clothed -- though Andy was sure his grandmother would contest that claim. Both wore yoga pants (panty lines not visible), as well as Colton Crew t-shirts. It was abundantly clear that both women had foregone any kind of undergarment this morning, and their young, firm breasts announced their presence with great authority in Andy's mind. He was glad to have put on a pair of compression shorts with his PT gear. His low-grade erection would be somewhat constrained by the lycra. Their attire was form fitting, which gave Andy a chance to discreetly (he hoped) check out his roommates. As he unpacked, they peppered him with questions about his background, and time in the military. He, in turn, got to know more about them.",
        "Sara Jones-Easley was indeed bi-racial. She had spent the first 15 years of her life as Sara Jones, raised by a single mom who had been a cheerleader/dancer for the New York Knicks. Sara came into the world because of a one-night fling between her mother and celebrated Golden State forward \"Easy\" Anthony Easley. Sara had been an all-state soccer player, but never considered playing the sport in college. She had been introduced to her father after he had divorced his first wife, and it was then that Sara learned she had 4 other half-siblings. Easy Easley enjoyed life on the road a bit too much for his wife (and the mother of 2 of Sara's half siblings) to tolerate long term. As part of the divorce proceedings, Easy was forced to disclose the child support payments he had been making to the 3 other women with whom he had children. From that point forward, she changed her name to Jones-Easley. Sara was 5'11 3/4\", with beautiful hazel eyes, a large bust, and an amazing heart-shaped backside. The muscular definition of her legs was apparent through her yoga pants, and Andy found himself having to look away, for fear the growing tension in his groin would give him away. The girl reeked of sexuality, and Andy quickly realized that if her mother were anything like Sara, Easy Easley had been drawn to her as a moth to a flame. The beautifully tempting Sara Jones-Easley was a pre-law major entering her junior year.\n\nEden Adams was a quarter of an inch taller than her roommate, and pretty much her physical opposite. She was fair complected, with her brunette hair being so light as to almost qualify as blonde. She had large, blue eyes, and while she was not as busty as her roommate, she was well-endowed. She had thinner limbs than Sara, though her ass was every bit as spectacular. Her father was a surgeon, and her mom the Provost at Colton. She bore a scar on her right ankle, an injury that had derailed her ballet career. Both her sisters were dancing ballet professionally, and only her injury had prevented her from pursuing the same path. Ballet being out of the picture, Eden was a pre-med major, hoping to follow in her father's surgical footsteps. He liked both his roommates, he soon discovered. Yes, they were both smoking hot, but they were also intelligent and kind. They treated him as an equal, not as an oddity. He felt an easy friendship developing, akin to -- but quite different from - the kind he had known in the Corps between comrades in arms.\n\nSeveral items caught their attention as he stowed his gear: first, Andy was a coffee snob. His electric kettle, grinder, pour over kit, and French press -- as well as several vacuum cannisters for his coffee -- elicited excitement from the two women. \"The coffee here sucks,\" observed Eden. \"Mom says she can't fix it, no matter how much I nag her about it. It will be good to have some real coffee for a change.\"\n\nThe second item that warranted attention was his record player and wooden crates of vinyl records. Jazz, bluegrass, the blues, and classical music were all well-represented. As they talked, Sara acquainted herself with his collection, commenting on various titles as the conversation went along.\n\nAndy's humidor drew curious questions from the girls. \"I know you can't smoke on campus, but my grandmother gave me the OK at the cabin. My grandparents were married in Colton's chapel, and spent their wedding night in a cabin about 10 minutes from here on the ocean. Grandpa bought the place as an anniversary gift, and we've spent family weekends there. The judge will also use it as a kind of legal retreat. If you'd like, we can go by there sometime.\" So, his roommates now knew his two vices: good coffee and tobacco.\n\nFinally, the small arsenal that Andy drew out of a large gear bag made their eyes grow wide. Apparently, neither woman had grown up with guns in the house, and Andy was glad that he had limited himself to two handguns and his sniper rifle. The rifle, he knew, would have to be stored at the Campus Security gun locker. His grandfather, always being one step ahead of the game, had done some deal making of his own. Andy could keep the two Sig Sauer M11 pistols in his room, provided they were stored in a biometric lock box. This was not college SOP, but the Judge was not afraid to throw his weight around for his family, a fact Andy now appreciated more than ever. \"Is there an indoor shooting range nearby?\" asked Andy.\n\n\"Yeah, there's one in town, but I've never been there,\" said Eden.\n\n\"Well, if you would like, I'd be glad to take you there to learn to handle and fire this sidearm,\" he offered.\n\n\"Really?\" asked a shocked Sara. \"I mean, hell yes! I'd love to learn to shoot. That would be bad ass.\"\n\n\"Well, what I'm really concerned about is that you learn the basics so that you're comfortable with me having them here. Teaching you to shoot is secondary to that goal.\"\n\n\"Not to sound like the Provost's daughter -- but does my mom know about this?\" queried Eden.\n\nAndy reached into his bookbag and pulled out a notarized form signed by the Provost, the President of the College, and the head of Campus Security, all agreeing to the terms Judge Carlson had negotiated for Andy. \"If she doesn't, somebody forged her signature.\"\n\n\"Then I'm a 'hell yes!' as well,\" beamed Eden. \"That really does sound bad ass.\"\n\nIt was not just the items that Andy had present that caught his roommates' attention. There were a number of seemingly common items that were absent. Sure, he had some t-shirts, but the majority of his wardrobe consisted of clothing that needed to be hung up. He did have a laptop, and a larger keyboard and monitor to accompany the laptop, but he did not have multiple screens, a gaming chair, or a gaming PC. There were a couple of boxes of books, but no gaming system (Xbox; PlayStation; or otherwise). There was no paraphernalia that suggested any kind of drug use; Andy DeGroat had a phone, but he was not constantly checking it. In the course of their conversations, both girls had already found and friended him on Instagram and Facebook, but that seemed to be the limit of his social media presence. He was, apparently, somewhat of a digital minimalist.\n\nAt that point, Andy's stomach began to growl. A quick check of his phone told him that it was now 1245. He'd eaten his breakfast at 0545 that morning, so it was past time to eat. \"OK, if you can give me 5 minutes, I'll grab a quick shower and we can head to the mess. What time does chow stop?\"\n\n\"Well, since I think mess and chow has to do with the Dining Commons, it closes at 1 PM. But, if you hadn't noticed, we're not exactly dressed to go out, and we will need more than 5 minutes to get ready. We were so preoccupied by our handsome roommate that we forgot our bras and our underwear,\" teased Eden.\n\n\"So, Andy the damn fine Marine, how about we all head to the showers? When we get done scrubbing you down, we'll head into town and get some food. There's a great lobster shack that does a killer lobster roll,\" said Sara.\n\n\"OK. Time to talk. I don't want to be the 24-year-old guy perving on my smoking hot 20-year-old roommates. The two of you have been like mares in heat since I got here. From talking to you, I can tell you're not the kind to screw anything that moves; you've got too much going for you, and too much on the line for that kind of stupidity. So, what gives? Why the quasi peepshow and the co-ed showers?\" asked Andy as patiently, and yet firmly as he knew how.\n\nThe girls looked at one another sheepishly and were silent for a time. Finally, Eden spoke, \"Andy, this place is really stressful. For starters, it's so damn PC that you can't hardly open your mouth. You can't even use \"he/she\" when you talk to or refer to someone. A friend of ours started talking to a guy, who got all pissy with her because she 'presumed to know his gender and sexual preference.' Then, it's a competitive academic environment. Classes are hard as hell, and we both aced our SAT's. As if that didn't suck enough, there's who we are. Everybody knows who Sara's dad is, so she's some kind of outcast because she's new money and bi-racial. I can't win no matter what: if I do well in class -- well I'm supposed to because my mom's the Provost. If I don't do well, then I just got in because my mom's the Provost. It's a fucking fishbowl. And, if all that weren't enough, there's our reputation on campus.\"\n\n\"I'm sure the two of you are quite intimidating,\" mused Andy.\n\n\"Is it that obvious?\" asked Sara.\n\n\"Look, you're both really smart. You're athletic, tall, and fine as hell,\" explained Andy. \"I've found that women can be quite petty about things like that, and guys would really like to ask you out -- or brag to their buddies that 'hell yeah, dude, I'd tap that ass' - so in the end they psych themselves out, and do nothing but gawk awkwardly at the two of you. You live on an island, which is exacerbated by living here at Hogwarts, away from everyone else. You can't win for losing.\"\n\n\"We just thought we could cut loose with you a bit. You are damn fine to look at, and some good orgasmic release would be just what the doctor ordered,\" added Sara. \"And while I second everything that Eden said about Colton, there's one more thing. You're a man, Andy, not a damn boy. You have real clothes, and books, and interests that don't have to do with porn or video games. Your truck is a stick shift, and you didn't have your grandma and your sisters here to unpack your shit and get you settled in. You would be surprised how rare that is here.\"\n\n\"Plus,\" added Eden, \"I know my mom put you here. That means you've been fully vetted by her. And I grew up hearing glowing stories about your grandfather.\"\n\n\"So what? We shower together, make sure everybody gets off and let off some steam?\" asked Andy.\n\n\"Well, that does sound kind of pervy, but yes. Would you be open to that, Andy?\" asked Eden shyly.\n\n\"Well, this is not the first time I've heard a female lament that she needed to let off some steam from being at a tightly wound, highly competitive university. OK, one word of warning, and then one word of explanation. I'm... hell, it's just that I'm kinda...\"\n\n\"Did your dick get blown up too?!?\" asked a wide-eyed Sara.\n\nAndy laughed, \"Sorry, no. I'm kinda -- well I'm kinda big -- down there.\"\n\n\"Like how big?\" asked Eden.\n\n\"Big enough that my high school girlfriend and I did not have sex on prom night. And, for the word of explanation: my best friend's girlfriend's -- now wife's, sister -- does that make sense?\" he chuckled. \"Her name is Praja Reju. Mike, my best friend, was dating, and is now married to her sister Priya. Anyway, Praja and I had sex, a lot of sex, the summer after I graduated from high school and before I left for basic. She was going into her junior year at Princeton, and she complained of the same thing: it was stressful as hell, and \"riding your big dick 'till I cum\" was a good way to relieve that stress,\" explained Andy. \"But there's one thing we need to agree on. This is the only deal-breaker for me. When this is going on, we're celibate otherwise. So, no blowing the cute guy in your chemistry class -- no hand jobs for the hottie in your constitutional history class. This way, you can focus on school and crew, and nobody has to worry about other stuff. But, it's gotta be this way. Agreed?\"\n\n\"Agreed,\" said both girls, grinning.\n\n\"Well, I guess we need to come clean as well,\" said Eden. \"Sara and I are... I mean we've never -- you know.\"\n\n\"She's trying to say that we're too damn tall and too damn driven to have gotten laid yet,\" interjected Sara.\n\nAndy laughed with his two roommates. \"That's OK. Praja's folks were traditional and strict. So, she taught me lots of ways to get each other off without actual penetration -- not that we didn't eventually do that as well. We can go slow if that's what you want. I'll head to the showers. Come in whenever you're ready.\"\n\nTwo minutes later, Andy stood in the shower languidly stroking his cock. \"Best to let them see what they're in for,\" he thought. He was strangely nervous. He had been dubbed \"a freak\" after showering at his prep school, and his high school girlfriend -- whom he thought the love of his life -- was absolutely terrified of his prodigious manhood. He steeled himself for a similar experience with his two roommates. \"It would make life here easier, I suppose,\" he thought to himself. \"Playing slap and tickle with Sara and Eden could get complicated.\"\n\nAfter a bit longer than he thought it would take, the two girls entered. Again, their beauty took his breath away. \"We dodged a bullet,\" said Eden. \"My mom popped in to see how you were settling in. She's never done that. We showed her your stuff, and told her you were in the shower jacking off while thinking of us naked,\" she joked.\n\n\"Finding the three of us getting each other off in the shower would not be the start to the summer we would want,\" laughed Sara. \"Damn, that was close.\"\n\n\"Does the door to the bathroom lock?\" queried Andy.\n\n\"You mean like this?\" said Sara, as she turned and locked the heavy oak door.\n\nThe two girls now walked over to the opening of the half-walled shower stall. Both were dressed in short, cotton robes, and carried their clothing in their hands. Slowly, they set their clothing on the teak benches outside the half walls and stepped into the opening. Their eyes had never left Andy's. On cue, they both looked down at his naked form. He had moved his hand from his cock, and simply stood before them.\n\n\"Damn,\" muttered Sara.\n\n\"Ohhh,\" sighed Eden. \"You were not lying -- at all.\"\n\nThey removed their robes, and it was Andy's turn to be awestruck.\n\nEden Adams had her long, light-brown hair pinned up. Her skin was pale, almost alabaster, and it served to accentuate the bright blue of her large eyes. Her long, graceful neck moved into wider shoulders than one would think possible on so willowy a creature. Her generous C- cup breasts were capped by puffy nipples, and he noted that the right nipple was an 'innie.' There was a smattering of freckles on her upper chest. She had visible abs, and he noted that there was muscular definition in her shoulders and arms. Her womanhood was crowned by a wispy, light brown bush. Her thighs, and calves were muscular and well-defined, and yet lean. She had the classic dancer's physique, but with a surprising amount of mass -- probably from a year's worth of rowing crew. Andy's mind eye quickly pictured those long, lovely legs wrapped around him as he made love to her, and wondered how much attention her nipple would need to come out from its hiding place.\n\nSara Jones-Easley was built like a brick shit house. Her light brown skin made a startling contrast alongside Eden's fair complexion. Sara's long, curly hair was also held up, but it was her generous -- no, huge -- breasts that got Andy's attention. She had very small areolae, but her nipples were long and, at the moment, clearly on display. \"Stacked and jacked,\" thought Andy to himself. She too had visible abs, and she had shaved her womanhood to a very pleasing two-inch strip. The glorious swell from her narrow waist to her hips was perhaps the most alluring thing about her. Long, thick, muscular legs completed the look of this young woman who oozed sexual energy. Andy's mind now envisioned pounding Sara from behind, the sight of her glorious ass jiggling, and heavy tits swinging with each thrust from his cock.\n\n\"Wow,\" gasped Andy. \"You're breathtaking. You're both absolutely beautiful. I mean, like, stunningly so. No wonder guys are intimidated by the two of you.\"\n\nBoth girls grinned as they walked towards him.\n\n\"Flattery, Andy DeGroat, will get you everywhere in this scenario,\" said Eden, smiling as she walked towards him.\n\n\"What's really beautiful is that cock of yours,\" said Sara, her voice suddenly husky and low. \"You could ruin a girl with that thing Andy. Has anyone told you that you're built like the actor who plays Wolverine?\"\n\nAndy had indeed heard that. He had regained some of the weight he lost when he was wounded. His fighting weight was 220 lbs., but he lost 40 lbs. when he was in hospital. He found he was feeling more like himself over the past couple of months, and it had been welcome news a month ago when he was told he could resume physical training. He was pleased when his lean muscle mass began to come back to him. He was almost back to his pre-injury weight.\n\nHe hugged the two girls simultaneously, Eden on his left and Sara on his right. He felt their stiff nipples against his chest as they pressed against him. Reaching around them, he gave both of their asses an exploratory feel. Damn. They were both hard as a rock, as was his cock upon making this discovery.\n\n\"How are you going to pleasure us?\" asked Sara.\n\nAndy turned to look at her and kissed her softly. He felt her gasp slightly as he did so. \"Slowly,\" said Andy. As he continued kissing her, he felt hands upon his cock. He was not sure whose they were, nor how many hands were employed. What he did know is that it felt glorious.\n\n\"Since we're still getting to know one another, why don't the two of you back up against me. I'll finger you, and you can continue the hand job. But, let me warn you, I'm pretty sure I'll go off soon,\" he said.\n\n\"Damn, we'd need two more girls to have enough hands for that cock,\" remarked Sara.\n\n\"Andy, I have man-hands,\" confessed Eden, \"and I can't get my hand all the way around you.\" She shivered involuntarily.\n\n\"Are you OK?\" Andy whispered, turning his face to hers.\n\n\"Yes, I just thought of that beautiful cock of yours splitting me open; of that monster ravaging my tight pussy. God, it makes me so wet! When are you going to make me a woman Andy?\" whispered Eden.\n\n\"You're already a woman -- a very beautiful woman. There's no rush to making love. We'll make your first time special.\"\n\n\"Baby, a cock like that would make you taking me in the back of your truck special,\" said Sara, obviously overhearing their pillow -- or shower -- talk. \"If your fingers are half as special as your dick, I'll be cumming soon as well.\"\n\nSlowly, both girls turned and put their glorious backsides against Andy's legs. Eden grabbed his dick with her right hand, and Sara with her left. Andy put his arms around both their waists, and moved his hand to their slick, molten centers. Simultaneously, he slid his middle fingers into the girls.\n\n\"Yessss,\" hissed both.\n\nAndy began his work slowly, both by intention and necessity. Both girls were tight, but they were almost gushing lubricant. Indeed, their nectar was flowing so freely that both his hands were soon slick with their juices. After a couple of minutes of slowly and tenderly fingering them, he changed tack. Curling up his middle finger, he found their G-spots, while flattening his hands out to meet their clits. Both responded by griding against his hand, desiring more contact and friction on their womanhood. As he gave himself to his work, he found his own mind being overcome with the pleasure they were giving him. Eden had flattened her hand out, and was running it lightly over the massive, purple head of his cock. Sara slightly increased her grip pressure and was jacking him up and down. Both girls were aggressively mauling their own breasts with their free hand, with Sara tweaking her nipple so hard Andy was afraid she might hurt herself.\n\n\"Baby, I'm so fucking close,\" hissed Eden.\n\nSara was no longer capable of words, and simply made a series of low, groaning noises -- which did nonetheless communicate that she was close as well. Andy felt her orgasm before he heard her begin to wail. Her tight quim began convulsing around his fingers so strongly it hurt. Her magnificent legs pulled together, and she shook involuntarily, before going almost limp. Andy quickly removed his hand from her pussy, and grasped her around the waist, helping to hold her up.",
        "Eden was much more vocal, and she was shocked when her pussy began to gush as she came. \"Oh, my Godddd,\" squealed the leggy brunette. As Andy removed his fingers, the squirting continued. She too shook involuntarily.\n\nAs Eden continued to gush, Andy felt his own orgasm coming. He blew wad upon wad of his seed into the air and onto the shower floor. He had, he was certain, never cum so much in his life. He had cum harder buried in Praja's glorious snatch, but never so much. It was as though the primal part of his brain wanted to prove to two prime females that he was alpha enough to impregnate them both. The effort left him seeing white spots. All three were breathing raggedly.\n\nEden held her cum-drenched hand up to her mouth and licked her hand clean.\n\n\"Damn girl, next time share some,\" griped Sara.\n\n\"Coach is always telling us to eat enough protein,\" joked Eden. \"I vote we make Andy our supplemental protein dispenser.\"\n\nAndy's angry, purple, 10-inch prick began to calm down. He felt himself slowly deflating, much to his relief and disappointment. It had been a while since he had been intimate with a woman, and he did not want to scare these girls off with another erection. At the same time, he wanted them to know that he was up to being used as their stress-relief sexual partner.\n\nHe turned and kissed Eden, then did the same with Sara. \"Thank you. As you could probably tell, I needed that.\"\n\n\"Lover, you can make me cum like that anytime you want,\" said Eden.\n\n\"Absolutely!\" declared Sara. \"But right now, I'm hungry. Let's finish up and get some food.\" She removed herself from Andy's embrace and grabbed her bottle of body wash. \"I need to get cleaned up and get some food in me for our next go. And -- if you're gonna make me cum like that every time, I know I need a nap.\"\n\n\"Well,\" Andy thought to himself, \"this will be an interesting summer term.\"\n\nHalf an hour later, the three roommates were loaded into Andy's truck. He had chosen a pair of khaki shorts, his earlier polo shirt, and a pair of L.L. Bean camp moccasins. The girls were wearing tank tops and modest shorts, along with their Birkenstock sandals. Both had their hair up, and both were absolutely glowing in post-orgasmic bliss.\n\nSara joined him in the front seat, navigating as they went along. His truck was a stick shift, so the girls had done rock/paper/scissors to determine who got to ride in the front. The loser would get that honor on the way back.\n\nNo longer were they off campus, then Eden began giggling in the back seat. Sara turned around, and Andy peered at her in the rear-view mirror. \"What gives, girl?\" asked Sara.\n\n\"Sara -- I had no idea how -- how, backed-up we were. I mean, I know we like to masturbate, and the sound of you getting yourself off is hot -- but damn! Andy, you have no idea how good I feel, how badly I needed to cum -- with a guy -- and not by myself. This is going to be a fucking awesome summer term!\" declared the ebullient brunette.\n\n\"So, what are your plans for us?\" asked Sara, turning back to Andy.\n\n\"Wait -- why do I have to have plans for you?\" asked Andy warily. \"I just got here, and I've got college calculous to navigate this summer. Why is it up to me to figure this out?\"\n\n\"Well, that's true,\" reasoned Sara. \"Are you open to us coming up with a schedule for you?\"\n\n\"What do you have in mind Sara?\" asked Eden.\n\n\"Well, after my pussy exploded, and my world went black, and my knees buckled,\" she giggled, \"I got to thinking how nice it would be to curl up next to Andy -- naked of course -- and go to sleep next to him. I've never really wanted to cuddle with a guy before, let alone sleep with him, largely because I value my sleep too much. But, with Andy, I want to sleep next to him -- as I'm sure you do as well E,\" explained Sara. \"And then, there's what Andy wants. Maybe he doesn't want an Amazonian Princess in his bed each night. Plus, I've heard stories about guys and their morning wood, and then I got to thinking about Andy screwing us in that shower and girl! That dick got my head in all kind of places. I'm scheming, planning on how to get as much Andy as I can. But, E, you know how you and I scare guys off, so that's why I want to know what Andy wants.\"\n\n\"Right now, Andy wants food,\" he joked. \"After we eat, I need to recon that gun range, and the VFW Hall. We can also run out to the cabin and I'll show you around.\"\n\n\"Alright, Andy the Marine -- what is recon and VFW hall?\" asked Eden sassily.\n\nAndy chuckled. \"Sorry. It may take me awhile to get over the military jargon. Recon is reconnoiter. VFW is Veterans of Foreign Wars. Usually, each town has a VFW Hall. There are meetings, and usually a bar. It's a great place to meet other veterans and shoot the shit. I know the dorms are dry, so my nightly glass of bourbon will have to come from somewhere else.\"\n\nJust then, the truck pulled into the Lobster Shack parking lot, and the three got out. Eden claimed his left arm, and Sara his right. Both kissed him on the cheek. \"Ladies aren't you afraid of making this kind of entrance?\" asked Andy. \"This is close enough to campus that word may get back to your mom. I'd hate to get booted out of our room when I'm just getting to like my new roommates.\"\n\n\"As I said, my mother vetted you thoroughly before she let you come within 100 yards of the Commons,\" said Eden. \"Now, she probably did not envision your fingers buried in our pussies 4 hours after you moved in, but she has you there for her purposes. In fact, I know she does. If word gets back to her, more's the better.\"\n\nAfter they were seated, the conversation continued, though in quiet voices. While it was close to 2 PM, and the place was near to empty, they knew they needed to be discreet. \"What class are the two of you taking this summer?\" asked Andy.\n\n\"We're not,\" explained Sara. \"Eden and I are two-time NCAA Women's 4's Crew Champions. Our coach wants us to get ready for next year, so we're here training.\"\n\n\"Where are your other teammates staying?\" asked Andy.\n\n\"They're in the Boathouse. However, there have been some issues in the past at the Boathouse, so mom was not too keen on us staying there this summer,\" said Eden. \"So, she promised us the Commons Room at President's. It's a great set up, especially with the balcony off the mezzanine and being the only dorm on the old part of campus. We really are pretty much alone there, so we can train, sleep, and now, have some fun with our favorite Marine. Though I suspect that when my mom realized how alone we are, she just happened to send you along, Andy.\"\n\n\"Nothing wrong with a deterring presence,\" he said.\n\n\"Nothing wrong with a damn fine man with a beautiful dick, either,\" said Sara. \"There is no kind of presence that will deter me from getting some of that.\"\n\nShortly, their food came. As they tucked in, Sara had an idea.\n\n\"What if we do this? We each get a night. We'll flip to see who gets the first night, and then we'll alternate. Whoever's turn it is gets the night, and the morning with Andy. We've got workouts in the morning, and then Andy has class, and will need to study. We'll go hands off -- you know just regular heterosexual hottie roommates -- until bedtime. If we all end up in the shower together, well then that can't be helped.\"\n\n\"At the risk of stating the obvious, I doubt the two of you want to lose your virginity with the other one in the room. I mean, I know you're close friends, but 20 years from now you may regret having a third party in the room for that event,\" said Andy.\n\n\"So, maybe when we're ready, there's a date night and we spend the night somewhere else. Or, maybe the third wheel sleeps on the sectional by the fireplace. Or -- maybe we build a love nest on the floor in front of the fireplace and you can deflower us there,\" said Eden grinning.\n\n\"How about if we go 1/1/1?\" suggested Andy. \"We'll rotate nights, and then all get one night in our own beds. You'll be training, and I'm knocking the rust off my math skills. We will all need to prioritize rest and recovery. If I read the two of you right, you really do want to kick ass and take names. Plus, 0500 comes early.\"\n\n\"Who the hell said anything about a 5 AM workout?\" demanded Sara. \"We row from 8-10 AM, and then we have an hour of lifting. We have the afternoon to recover and nap, and then our evenings to ourselves.\"\n\n\"Well,\" explained Andy. \"I'll be up at 0500 for PT -- sorry, to work out -- then at breakfast by 0700. My class starts at 0800 and runs until 1200 hours. I'll grab lunch and then a nap, and then study from 1400-1800 hours.\"\n\n\"OK, with the blackout curtains, we can make the place dark so that you can be in bed, with one of us by... wait, 2000 hours?\" said Eden. \"Then, at 0630, whoever's day it is can be with you in the shower then. You can get a workout, and then nice post-workout blowjob. I know I can't wait to ride you in the shower -- am I right, Sara?\"\n\n\"Damn girl,\" said Sara, fake fanning her face. \"We need to go now before I mount Andy on this table.\"\n\nAndy laughed. \"OK, when does your schedule start?\"\n\n\"Monday,\" replied both girls.\n\n\"So, figure out who gets tonight,\" said Andy.\n\n\"Really?\" exclaimed Eden loudly. \"Sorry\" she said lowering her voice. \"But really, you'd do this?\"\n\n\"Yes, really,\" said Andy. \"Look, I really do believe the stress release thing. Praja used to email me telling me how much it had helped her. She felt like a new woman after a night together. Plus, you might have noticed that you two are hot as hell, and I enjoyed myself immensely.\"\n\nAndy paid for their lunch, and Eden took the front seat, navigating him to the gun range, and the VFW Hall. Andy checked the hours at the Hall and noted that it was open Thursday -- Sunday evenings: 5 PM to 1 AM. He'd be back tonight to have a beer and a chaser, and noting a Walgreen's across the street, figured he'd need to buy some condoms just to be on the safe side. The recon work done; Andy pointed the truck out of town.\n\n\"Where are we going?\" asked Sara from the back seat.\n\n\"I thought I'd run you to the cabin. I told my grandparents I'd check the place out as soon as I got here -- though they were up here two weeks ago. It gets busy July and August, though as early as school starts now, more July.\"\n\nThe truck pulled off the road and came to a large gate with a keypad. Andy stopped, keyed in a number and the gate opened slowly. As the pulled along the drive, the 'cabin' came into view.\n\n\"You call this a cabin? Looks more like a second home,\" said Eden. \"Wait, I think I've been here. Some sort of college shindig with my parents.\"\n\nAndy laughed. \"Yeah, the original cabin is now the boat house. We use it for overflow sleeping. Grandma wanted a place to get away, just the 5 of us. She built it so that as we got families of our own, we could have space within the house. There's 4 bedrooms and 5 bathrooms in the place. It's actually just bedrooms with attached baths, a great room with a huge table, and a Tuscan kitchen. It's where we spend Thanksgiving and Christmas.\"\n\n\"Can we go in?\" asked Sara.\n\n\"Sure,\" said Andy. He walked over to a door and punched in another key code. \"Let me warn you, though -- my grandmother will be calling in about 5 minutes when we go in. Whenever anyone uses their keycode, she gets a notification.\"\n\nAndy showed them through the house. The side of the house that faced the ocean had floor to ceiling windows, and the view was breathtaking. Even Eden, who grew up seeing this part of the coast, was taken aback. He took them upstairs, and showed them his room, and the room that was designed to hold his future family. There was a queen sized low-platform bed that had an amazing view of the ocean, and a loft area with two bunk beds. A Stickley chair sat off to one side of the large sliding doors. A small balcony had a padded chaise lounge, and an Adirondack chair. The back of the room held the full bathroom.\n\n\"Andy, this is... it's just beautiful,\" exclaimed Eden.\n\n\"Thank you,\" said Andy. \"It's a ton of fun when we're all together. We can be in the same place, and yet not on top of one another. Since my older sister Jessica got married, I think I appreciate it more.\"\n\nJust then, Andy's phone went off. He grabbed it, smiling at the name on the screen. \"Hello grandma.\" As they talked, Andy motioned the girls downstairs. They looked in on his sister's rooms, and eventually exited the house.\n\n\"She wants me to look in on the boat house,\" he explained. \"There are some supplies that were supposed to be dropped off that she wants me to put inside.\"\n\nAs they walked across a well-manicured lawn towards the boat house, Sara pulled him aside. \"Can I have a second, E?\" she asked. Eden nodded and walked towards the boathouse.\n\n\"Are you OK?\" asked Andy. Sara's whole countenance had changed, and she looked wistful.\n\n\"Andy, my whole life it's just been me and my mom. My dad sends money, and I've seen him a couple of times. He came to the state championship game my senior year, and he came to the NCAA crew championships, but that's it. You, on the other hand, have a house that your grandmother built just for her family, so that you could be together. You are damn fortunate, you know that?\"\n\n\"I do. Believe me, I do. I know some other people who lost their parents in 9/11 and some of them have never recovered. We are fortunate. The Judge and grandma love us, and pulled us through as a family. I never take that for granted.\"\n\n\"In your room -- please make love to me for the first time in your room?\" she asked softly.\n\n\"Absolutely.\"\n\n\"This weekend?\"\n\n\"Are you sure?\"\n\n\"I've never been more certain of anything, Andy.\" She then kissed him slowly, and passionately. \"Come on, we need to catch up with E.\"\n\nThey found Eden waiting outside the boathouse. \"Everything OK?\" she asked Sara.\n\n\"It is. Andy is awesome, and the two of you are lucky to have two people who love you and are present for you. I didn't have that, and being around the two of you makes me realize how much I want that in my own life. I want my kids to know their dad, and to know that their mom and dad will kill people to keep them safe and love them,\" said Sara ruefully.\n\nEden walked over and hugged her roommate tightly. \"I'm sorry, Sara,\" she whispered. \"And, I love you -- like my third sister. Some guy will figure out what he's getting and how fortunate he is to have you.\"\n\nSara laughed, \"Well, he better be fine as hell, and brave and kind like Andy DeGroat, or he can leave his sorry ass home.\"\n\nAndy had wisely used this roommate time to put the aforementioned articles in the boat house. When he was done, he stuck his head out the door and asked them, \"Do you want to see the boat house?\"\n\nThere was a long ramp that led down from the lower-level to the edge of the ocean. With the tide out, the ramp was well short of the water, but when the tide came in, you could slide the boats easily into the ocean. There was a sailboat and a motorboat moored out on a dock, so the bottom level was currently empty. Andy led them up the internal stairs to the upper level. Again, the side facing the ocean had a stunning view, and there was a balcony off the side of the second level. There was a single king-size bed a few feet from the window, a setting area, a galley kitchen, and a full bath. It was rustic, and although it had been updated, it still had a mid-century charm to it.\n\n\"Does this bathroom work?\" asked Sara.\n\n\"Yes, it does. Please help yourself,\" said Andy.\n\nAfter Sara had gone into the bathroom, Andy opened the French Doors onto the deck and beckoned Eden out with him.\n\n\"Is she OK?\" he asked.\n\n\"Yes. Dammit, I just forget sometimes -- I mean she's so athletic, and smart, and funny that I forget what a shitty deal it was for her without a dad. Then, I feel bad for her, and I feel bad for taking my own parents for granted. I mean, I know my mom put you in our room to look out for us, but I also know she did it because she loves me -- and Sara. It just sucks.\"\n\n\"Well, the good news is that she has you, and your mom -- people who care for her - looking out for her. And, she now knows what she wants. Sometimes, it takes us awhile to figure out what we want, and then not settle for anything less. From what I've gathered so far, she's totally worth it.\"\n\nEden came and kissed him. \"You really are a good guy, Andy DeGroat. You're hot as hell, and I want to jump you right here and right now, but dammit if you're not a good guy.\"\n\nShe held him close and then whispered, \"I want you to take me here, in the boat house. Could we do that this weekend?\"\n\n\"If you're certain.\"\n\n\"Mmm,\" she said burying her head in her chest, \"I am absolutely certain.\" The kissing resumed, and soon Andy felt Eden's hand exploring the girth of his manhood. She broke off the kiss to whisper in his ear, \"Andy, your fingers in me got me so hot. I've never come like that. The way you looked at me, like I was beautiful and not Ginormica -- I loved it, and it got me so hot -- and so wet.\"\n\nAndy's phone rang again, completely killing off this rather intimate moment. It was his grandmother, checking in. After a brief conversation, he turned to Eden and Sara, who had rejoined them. \"We need to go. There's a delivery truck waiting for us at The Commons. The Judge thought the mattresses were not up to snuff, and the balcony needed some Adirondack chairs. We need to let them in.\"\n\nSara sat in front, and Andy reached over and took her hand as they drove. He checked in the mirror, and saw Eden smiling at him. Jealousy, an ugly and hideous thing that would have to be guarded against, was not an immediate problem. These two girls cared much for one another, and Andy vowed not to get in the middle of that no matter what.\n\n\"So how does this work again?\" asked Eden.\n\n\"It's a Chili Pad,\" explained Andy. \"You set the temperature you want to sleep at, and it controls the temp so that you get optimal sleep.\"\n\nThe three had returned to The Commons, let the delivery men in, and watched as a massive new flat screen tv was installed, three Caspar mattresses were put in their beds, the Adirondack chairs, two chaise lounges, a Solo Stove fire pit and stand put on the balcony, and the Chili Pads were all unloaded and put to rights.\n\n\"What if I don't know my optimal temp?\" said Sara.\n\n\"The manual gives you a starting temp based on age/gender/bodyweight -- plus your level of exertion. So, if I know one of you is going to ride me for a couple of hours, I'll set the temperature lower than normal,\" Andy said grinningly. \"And, if you're sleeping with someone, you'll want to set it lower as well.\"\n\n\"Based on all that shit you just said,\" remarked Sara, \"you need to set yours at zero. You'll need the cryogenic factor to help you recover when I'm done with you.\"\n\n\"Andy,\" said Eden, \"please thank your grandfather for us. This really is wonderful.\"\n\n\"I will. I'm sure they'll be up here in the next couple of weeks. We'll have dinner with them -- they're dying to meet you.\"\n\n\"So, we need you to be the one who does it,\" exclaimed Sara abruptly.\n\n\"Does what?\" Andy asked.\n\n\"Take two pieces of paper. Put an 'X' on one, put them in a hat, mix it up and we'll pick. The one with the 'X' gets you tonight,\" said Eden. \"Except, I want Sara to go first.\"\n\n\"Won't it be awkward for the loser?\" Andy asked. \"I mean, who wants to hear two people getting one another off when you're not one of the two people?\"\n\n\"Well, that's why I want Eden to go first -- but only if I can watch. The sound of her in the shower was so damn hot, I just about came again. I bet I could have if I hadn't just about passed out,\" Sara said.\n\n\"I have a better idea. After dinner, let's head to the cabin. We'll spend the night in the boathouse. The king-size bed will fit all three of us.\"\n\n\"Deal!\" exclaimed both women simultaneously.\n\n\"Wait! What time is it?\" asked Eden.",
        "\"1530,\" said Andy glancing at his watch.\n\n\"Sara, we need to go. NOW.\"\n\n\"Why?\"\n\n\"It's a 30-minute drive to the mall, to that store we need to visit if we're going to spend the night with our Andy. I think it closes at 6 PM. Andy, sweetie, can we meet you at the Dining Commons?\" asked Eden.\n\n\"Sure. I'll swing by the VFW and then I too have an errand to run before tonight,\" explained Andy. \"18:30 for dinner?\"\n\n\"Perfect,\" said Eden.\n\nShe walked over to him and kissed him deeply, \"We are so going to blow your mind tonight, and that fabulous cock. You may want to skip the VFW and take a nap. You'll need it.\"\n\nTurning to Sara, she said, \"Sara, come and kiss our man. He's going to make love to us tonight, and we will blow his mind.\"\n\nAndy quickly ran his errands, Walgreen's, the florist, and a few supplies from the main house had the boat house ready for his evening with the two women. He ran back to the Commons, packed an overnight bag, and drove the truck to the dining commons. He parked in the far parking lot, and began to walk across the lawn. He was so preoccupied with what the evening was going to hold, he missed the brass plaque welcoming him to the DeGroat Memorial Lawn. What he could not miss, however, was the 5-foot brass sculpture of his mother playing her cello as a college senior, or the second sculpture of his dad on the pitcher's mound. As his gait slowed, tears began to well up in his eyes. He walked further along the lawn bleary-eyed; but at the sight of the sculpture of his entire family during a trip to Disney World a couple of months before 9/11, Andy's entire body began to heave. He fell to his knees, and began sobbing -- uncontrollably and loudly.\n\nThe girls had made their run to a well-known women's lingerie store, and had chosen some tasteful, but alluring, attire for their night with Andy. They had also upgraded their pajama game, anticipating their subsequent nights in Andy's bed. Eden pushed the Volvo past the speed limit, and got to the parking lot in time to see Andy walk onto the lawn. It took the girls a moment to put their purchases in their overnight bags, and they were stunned to come across the kneeling figure of Andy DeGroat weeping in front of the sculpture of his entire family. The girls had walked past the statues numerous times, and thought nothing of the cute little boy wearing Mickey Mouse ears, surrounded by his parents and his two sisters. Andy, however, had never actually seen the sculptures. The loss, triggered by seeing the bronze sculptures for the first time, overwhelmed him.\n\nSara knelt by him and hugged him, \"Andy, baby talk to us. Are you OK?\" In the pit of her stomach, Sara knew what had happened. Andy had been marked by loss. That loss had both haunted and hunted him, and it finally caught him. The bronze statue of a young family at the \"happiest place on earth\" had shattered him. She wept with him, wracked with the knowledge that another human being had experienced a loss similar to hers.\n\nAndy did not even acknowledge their presence. He could not. He simply continued to sob uncontrollably.\n\nEden grabbed her phone and called her mom. She explained what was going on, and asked her to come ASAP, and please bring her dad along. Dr. Sean Adams would know what to do. He always did.\n\nSara continued to try to comfort Andy, and Eden gave the stink eye to anyone who paused to give this spectacle a look. \"Nothing to fucking see here. Move your sorry ass on,\" said Eden forcibly when passersby stopped to see what was going on. Ten minutes later, her mom and dad came walking quickly to the lawn.\n\n\"What do you know?\" asked the male Dr. Adams.\n\n\"Daddy, I have no idea. We pulled up after him, we saw him walking up, and then all of a sudden, we couldn't see him, but we could hear him. He's just been here and doesn't even act like anybody else is here. He won't stop crying,\" said Eden, as tears began to well in her eyes.\n\nSara, crying as well, looked up at Dr. Adams. \"You've got to help him. He's such a good dude. He's really smart, and funny, and kind. You've got to help him.\"\n\nGloria and Sean Adams exchanged a knowing look. Both had been worried about Eden's calloused attitude to life at Colton. She had done very well athletically and academically, and she and Sara quickly became BFF's. However, she had grown distant and aloof to just about everyone else. She had never been this calloused before, and this concerned them. Now, however, here she was crying about the well-being of a young man she met some 8 hours before.\n\nSean Adams knelt next to Andy and tried to talk to him. No response. He then tried an approach he had seen before with other traumatized veterans. Using a command voice, he addressed Andy, \"Sargent DeGroat, what is the meaning of this?\"\n\nAfter a few minutes, Andy spoke quietly, \"I'm sorry sir. I've never seen this before. That little boy is me, sir. That's my family -- or it was -- before they were murdered. I -- I wasn't ready to see this.\"\n\nDr. Adam's opened his bag, filled a syringe, and spoke softly to Andy. \"I see. Well, Sargent, let's do this. I'm going to give you a shot to help you. We'll then go get in our car and take you back to President's Hall. The shot will help you sleep, and we can talk more in the morning.\"\n\n\"Yes sir. Thank you, sir,\" replied Andy breathing heavily, his face soaked with tears.\n\n\"Good man. Hold very still, you'll feel a slight pinch.\"\n\nAndy felt nothing, and did not remember Dr. Adams helping him to his feet and walking him to his SUV. He did not remember the doctor helping him get undressed and into his bed. He did not hear the worried and tearful conversations between Sara, Eden, and the Dr's Adams.\n\n\"He'll be OK. He's had a great shock, and I suspect there's all kinds of horrible things he's seen as a soldier,\" said Sean Adams. \"At some point, our bodies won't let our minds keep those things out anymore.\"\n\n\"Will the girls be OK with him here?\" asked the female Dr. Adams.\n\n\"Oh yes. In fact, their presence will help him a great deal,\" said Sean, winking at the girls. \"Though we should probably call his grandparents, or at least one of his sisters.\"\n\nGloria dismissed herself to call the Judge, and Sean Adams hugged his daughter and her roommate.\n\n\"You two did well caring for him,\" he said. \"You both acted quickly. He must be some guy.\"\n\n\"Thank you, daddy,\" said Eden. He noted that the second part of his statement had been not so tactfully turned aside.\n\n\"What makes him so special?\" he asked.\n\n\"You mean aside from the fact that he's fine as hell, and bad ass?\" asked Sara.\n\nAll three laughed.\n\n\"Daddy, he's kind. He's not intimidated by us, and he talks to us, I mean really talks to us. He doesn't just act like he's listening, either. At lunch, he asked about Elise and Evie. He remembered their names! We went to lunch, and he took us to his family's cabin, and he's just a really, really, good guy. You'd like him. He opens doors for us, and insisted on paying for lunch. He has guns and smokes cigars and drinks bourbon and his truck is a stick shift. He has real clothes, and doesn't have an X-box or anything like that. He's not at all like the boys this place usually attracts,\" Eden's assessment of their new roommate spilled out of her rapid-fire.\n\nSean Adams could not help but grin at his obviously smitten daughter. \"OK. Well, let him sleep tonight. If he wakes up, or anything changes, call me. Sleep is the best thing for him right now. I suspect the Judge will be up here first thing in the morning, and we'll see what the plan will be going forward.\"\n\nJust then, Gloria Adams rejoined the conversation. \"The Judge sounded relieved. He said, 'It's about damn time Andrew broke down a bit,'\" she smiled. \"He'll be up tomorrow about noon, along with Andy's younger sister Ellen. Have you two eaten?\" she asked.\n\n\"No ma'am,\" said Sara.\n\n\"Well, since I know the three of you won't want to leave here, what do you say we order a pizza and watch something on that massive TV? Just make sure your dad doesn't raid Andy's humidor when he goes up to check on him,\" she offered, smiling.\n\nAfter the pizza had been consumed, and the four settled on one of the big sectional couches, Gloria looked on with amazement and envy as Eden snuggled in next to her dad, and Sara did the same on his other side. Eden had not done this in probably 6 years, and her father recognized the significance of the moment, giving appropriate fatherly affection to both girls. \"Well,\" she thought to herself, \"Thank you very much, Andy DeGroat. You may be helping us get our daughter back.\""
    ],
    "authorname": "BadWriter75",
    "tags": [
        "marine",
        "love story",
        "romance",
        "wound",
        "college"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/finding-home-6"
}