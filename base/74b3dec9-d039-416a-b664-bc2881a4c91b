{
    "title": "New Beginnings",
    "pages": [
        "NEW BEGINNINGS\n\nThis is my first erotic sex story. It's quite long, but I like to try and flesh out characters and relationships in my storytelling. Hope you like it. Constructive critique would be appreciated. This is a re-edit with some extra story and less errors.\n\nCHAPTER ONE - THE LOSS\n\nMy name is Andrew Johnson but everyone calls me AJ. Growing up I was a fairly normal guy. I lived in a nice house with a loving family and I didn't really have a care in the world. But when I was a 18 year old senior in high school all that changed forever. Up until that fateful July evening life was good, then it suddenly became bad ... very bad!\n\nI was at the hospital visiting my cousin Becky when I heard the news. We were watching a sitcom on TV when the program was interrupted by a breaking news bulletin. A massive explosion had ripped apart a downtown building and they showed pictures that looked like a warzone. The reporter live at the scene could hardly be heard over the sound of sirens and fire crews. Becky and I watched shocked at what we saw. I grabbed the TV remote and upped the volume ... I'll never forget the next words we heard. Suddenly my legs gave way and I started falling to the floor. Then everything went blank. \n\nI woke up lying on a hospital bed. Evidently I'd hit my head on the corner of a chair on the way to the floor and had blacked out. It took me a minute to realize where I was ... then the horror of what I'd heard on the TV came back to me. I leant over the side of the bed and vomited.\n\nThe explosion had been at the Pier 51 Warehouse building ... I had been there earlier that night. It was my grandparent's 50th wedding anniversary and the family had celebrated the occasion at the restaurant on the ground floor. I'd left early to bring a piece of cake to Becky who was laid up in hospital after her appendix was taken out. Our whole family was still at the restaurant when the explosion happened. I lost my parents, two younger sisters, my two uncles and aunts and five cousins along with my grandparents. My uncle Jackson and Aunt Rose were Becky's parents and two of the cousins were her sister and brother. Sixteen other people died including all the restaurant staff. The official report said it was a gas leak.\n\nThe first few days after it happened were a bit of a blur, I stayed at the hospital with Becky and they put us in a private two bedroom. We were initially sedated by the doctor to help us sleep and when we were awake we hugged one another and cried. Becky and I had always been close, growing up we always did things together, she was a bit of a tom-boy and wasn't into girly things. Shorts, baggy t- shirts and a baseball cap was where her fashion sense stopped. I liked just hanging out with her, she was probably my best friend. We could talk about anything and everything and were always there for one another. Right now we needed each other more than ever.\n\nNo family came to visit us in hospital because there was no one left, our entire extended family were now dead. A few friends came to see us but they didn't really know what to say. We were devastated and weren't up to talking much anyway. My father's accounting practice partner Michelle did come every day, she just sat with us and when we lost it she was there to give us a shoulder to cry on. Michelle was a close family friend and I knew she was hurting too but she tried to be strong for us. She had been out of town on the night of the explosion, if she had been home she would almost certainly have been at the restaurant that night. \n\nMichelle was 34 and had been with Dad's accounting practice for twelve years. He'd made her a full partner in the firm two years ago. Besides being articulate and intelligent she was a natural beauty with long blonde hair, blue eyes and a great figure. Her fashion sense was impeccable and she looked great in whatever she wore. Surprisingly she had never married and she never talked about her family. I think mom and dad knew something had happened in her dark past but it was a subject that the rest of us learnt to leave alone.\n\nI can't remember a time when Michele wasn't around for birthdays, thanksgiving, and Christmas with my family. She and my parents would often go away to business conferences together, and at least twice a year Mom and Michelle would have a girl's weekend at a spa. \n\nWhile in hospital Michelle became our rock, I don't know how we would have coped without her, and she did all the talking to doctors and police and made a statement to the media on our behalf. \n\nWe were discharged on the day of the funeral. Michelle had coordinated the service with the help of family friends. It was held at the town hall, the biggest venue in the city and it was standing room only as over two thousand people attended. There were no coffins by the stage as there were no bodies to bury, the fire had been so intense that nothing remained. Instead fifteen photos where set up on stands and they were surrounded by flowers. Lots of people got up to say nice things about the family and there was laughter and tears as stories were told. We stood by the door as everyone left an accepted their condolences then afterwards we sat together with Michele in the auditorium and cried looking at the pictures of the family.\n\nIt was quite late when we went to leave the hall. Suddenly it dawned on me that I didn't know where we were going to go. Becky and I hadn't even thought about what would happen now, especially where would we live. Thankfully Michelle had been thinking about it. She said that we would be staying with her for the time being, that was of course if Becky and I were OK with it. I nodded my head 'yes' and Becky got up and flung herself into Michelle's arms and burst into tears. \n\nCHAPTER TWO - CHANGES IN LOVE AND LIVE\n\nThe next few weeks were a bit of a blur, but we settled into a basic routine, as best we could. It was arranged for some schoolwork to be sent to the apartment and we spent most mornings trying to do some study. Mostly we just sat blankly looking at unopened textbooks. In the afternoon Michele made us go outside for some fresh air. Becky and I would go for a run. We both had slim figures and were good at sport ... I was on the track team and Becky played field hockey at school. We found exercise a good way to release some of the tension we felt. Most nights Becky would cook dinner and I'd help as much as I could. We found if we kept as busy as possible during the day we were reasonably OK. The hardest times were at night when we had plenty of time to think and dwell on what had happened. I was sleeping on the couch as Michelle's apartment only had one spare room. But every night about an hour after going to bed Becky would come into the lounge and get in beside me. She would quietly cry herself to sleep with her head on my chest and my arm around her. It was heart breaking to hear her sobbing but I was glad I could be there for her. Each morning I would wake her up before Michelle came out and she would slip down the hall and into her room.\n\nAfter a few more weeks Michelle said we needed to talk. She explained to us that over the next few months we would have to make a lot of decisions on the future. She had talked to the family's lawyer and he was ready to discuss what was in our parent's last will and testaments. She said there was also some decisions that had to be made on the running of the businesses our parents owned. We talked about things for a while and agreed that we would meet the lawyer sometime in the next week. \n\nJust as I thought we were done Michelle asked me how comfortable the couch was to sleep on. \n\n\"Ahh ... yeah it's fine.\" I replied and took a quick sideways glance at Becky who started biting her bottom lip ... something she only did when she got nervous.\n\n\"Can't be that comfortable with two people.\" Michelle raised her eyebrows and eye balled us.\n\nBecky and I looked at each other guiltily.\n\nI quickly explained that nothing was going on between us and it was just hard to get to sleep alone. Michelle said she understood, and she'd heard Becky crying. She told us that she'd stand in the hallway for a while at night to check that we were OK. To my surprise she then suggested that I sleep in the bedroom with Becky for the time being ... but we were only to sleep and nothing more. If hormones started to kick in then we had to promise to talk to her about it. We were both a bit surprised by Michelle's comment and reiterated that it was just a comfort thing at night and we hadn't even thought about doing anything else. But none the less she made us promise to talk about it if anything changed.\n\nThat night as I hopped into bed with Becky the light was still on and I caught a glimpse of her panties as her t shirt had pulled up at the back. I turned off the bedside light and she snuggled up against me. We were spooning and I put my arms around her as she drifted off to sleep. I'd never really thought of Becky in a sexual way before, don't get me wrong she's beautiful, but I've only ever thought of her as a friend. Michelle's earlier comment had caught me off guard and I found myself thinking about what she'd said. I loved Becky dearly and would do anything for her but did I want more? \n\nAs I lay there I thought about seeing her panties and I realised I had a semi erection that was pressing into Becky's back. I had woken up on previous mornings on the couch with an erection and was quite embarrassed but when Becky saw the tent in my shorts she had laughed it off as 'morning wood' and seemed to accept it as a normal guy thing. But this time it was different, and when she gently moved in her sleep and pushed back into me I felt my cock grow into a full boner. In reality I hadn't actually seen that much of her body before, she was very self-conscious, especially about her breast size and when we went swimming she would always wear a T Shirt over her bikini. She'd been a late developer in the breast department and it didn't help that most of her friends were quite well endowed. Shit, I hadn't really seen anything that night as she got into bed, but the little glimpse of her panties had set something off inside me. The last thing I wanted now was her suddenly waking up and feeling me hard up against her. The problem was the more I tried to calm down and make it shrink the harder I got. Finally I couldn't stand it anymore and I unwrapped my arms from around her and as gently as possible I slipped out of bed and headed quietly to the bathroom. It took me less than a minute to jerk off and my orgasm was intense. I waited for my breathing to come back to normal, then crept back to bed keeping a little distance between us I drifted off to sleep.\n\nOver the next month I started going to the bathroom and masturbating before getting into bed. It helped with the erections at night but didn't stop me thinking about Becky's body pressing against me. I found myself noticing and enjoying new things about her, the smell of apple shampoo in her hair, her warm breathe on my arm, and the cute little snorts she made in her sleep. I also started looking at Becky differently during the day. When we went jogging I started to notice how her breasts gently bounced with each stride. I don't know if it was my imagination, but they seemed to be getting bigger. When she stopped to stretch out I found myself sneaking glances at her perfect little butt as she bent over. She'd always been a touchy feely kind of person with me and in the past she would often grasp my hand when we talked. But it seemed that the physical contact between us was happening more often. She started holding my hand when we walked and gave me hugs for no real reason. I kept trying to tell myself it was just her way of coping with the loss of her family but it became more difficult for me not to think there was more to it.\n\nThe last thing I wanted was to jeopardize our friendship, I knew I needed to put a little bit more space between us before I did something I'd regret. I had a think and hatched a plan on how to do this without Becky realizing. I needed to talk to Michelle.\n\nBecause Becky and I were almost constantly together it wasn't easy to get time alone with Michelle. So I planned to wait until Becky was asleep and go and talk to Michelle in her bedroom. I managed to slip out of bed at about 11pm, I quickly put on a T shirt and snuck along the hallway to Michelle's room. The door was slightly open and the light was on. I knocked softly on the door and heard a sound from inside that sounded like 'yes'. I open the door and walked in ... and got the shock of my life. Michelle was lying on the bed naked with her legs up and she was holding a big red vibrator on her clit with one hand and was massaging her breasts with the other. Her eyes were shut and she was quietly moaning the words 'yes, yes'. I froze staring at her for a couple of seconds then just as I was about to turn and leave she opened her eyes and looked straight at me. Her mouth opened wide with shock as she grabbed the blanket to pull over her.\n\nI turned and almost sprinted through the door and down the hallway.\n\nI went into the lounge and sat on the couch my heart was going a million miles an hour and I was gasping for breath. I just sat there in the dark staring at the wall, my mind racing with questions ... What was I going to do now? How could I face Michelle again? Why the fuck didn't I leave the room straight away? Suddenly I felt a presence behind me. I turned to see Michelle standing in the doorway, she was wearing a thick toweling robe. I didn't really know what to say so I just turned around again. She came over and sat beside me. After an awkward silence that seemed to last an eternity, I finally I got up the courage to speak.\n\n\"I'm really sorry. I just wanted to talk. I knocked on the door and thought I heard you say 'yes'.\"\n\n\"I guess it was my fault for not shutting the door.\" She replied. \"But you gave me one hell of a fright standing there young man.\"\n\n\"I wasn't there long ... honestly.\"\n\n\"I suppose you're now going to say you didn't really see anything.\" She looked at me sideways.\n\n\"No such luck I'm afraid. But if it's any consolation I feel like shit.\" I replied weakly.\n\n\"I'm not that bad to look at am I?\" She grinned and nudged my shoulder.\n\n\"No ... I didn't ... I didn't mean that.\" I stuttered. I glanced over and added \"You've got the most beautiful body I've ever seen.\"\n\n\"Under any other circumstances I'd take that as a compliment. But right now let's not go there AJ.\"\n\n\"Sorry I'll just shut up now.\"\n\n\"Let's just pretend it didn't happen OK and not mention it again.\"\n\nYeah right, I thought. Fat chance I'll forget. \n\nShe took my hand in hers. \"What did you want to talk about?\"\n\nI took a deep breath and started talking. I don't think I've ever been that open to anyone before, not even to Becky or my parents. I told her about my growing feelings for Becky and how I didn't want to put pressure on her and mess up our friendship. I even mentioned my nightly session in the bathroom to help curb my desires. She smiled at that and told me to remember to shut the door. I ended up explaining my idea on how we could all get a little more space and privacy. She thought it was a good solution and said we should talk to Becky about it in the morning. I finally got to bed at about 1am.\n\nThe next day was Saturday and Becky and I moped around most of the morning while Michelle was organizing some paperwork with Ron Jacobs, our lawyer. They were old friends and he was happy to meet her informally on the weekend.\n\nAt noon we meet Michelle for lunch at the beach and ate Subway sitting in the shade of a big tree overlooking the water. After we'd finished Michelle drove us to her office and we sat in the conference room. It had now been over three months since the accident and we had to make some decisions. We had already read the wills and everything that belonged to my parents went to me and the same for Becky from her parents. We also inherited a half share in Granddad and Nan's estate and the same from Uncle Doug and Aunt Wendy. Then there were our Dad's businesses. All up when you added life insurances, savings and shares we were both now teenage millionaires.\n\nMichelle told us we needed to decide what we wanted to do with the family houses. We didn't have to decide right away but we had to start thinking about it. As we talked neither of us couldn't imagine living in our houses again, not without the family around. We decided we'd go and pick up the things we wanted to keep and then the houses could be sold.\n\nGranddad and Nan's place was in a community for older folk and again we just wanted to get a few things and then it could be sold too. Michelle mentioned that the manager had called and said they had a waiting list of people wanting to move into the community. They were confident they could get a buyer real soon. So a trip was planned to their apartment to collect a few mementos'. We'd then ask the manager if he would pack up the rest of their personal stuff and we'd collect it later.\n\nThe last place was Uncle Doug's and Aunt Wendy's. It was a three bedroom penthouse apartment in a modern development on the beachfront. This was my solution to our current rather cramped living arrangement. I made my sales pitch to Becky saying it was neutral ground for us and still close to work for Michelle. Also the apartment had an office we could use for study and three good size bedrooms and two full bathrooms. Plus there was a private roof terrace with a hot tub and a communal gym and pool on the ground floor.\n\nBecky looked a little disappointed when I mentioned three bedrooms but she could see the logic in moving there, especially when Michelle said it would be a good idea as the lease on her apartment was up in two months anyway. So it was decided we were moving.\n\nThe rest of the afternoon was spent looking over various documents and talking about the trusts that would be set up to manage our money and assets until we were twenty years old. In the meantime we would get monthly allowances.\n\nThe next week we spent time sorting out what we wanted to keep from our own houses. Emotionally it was really hard for Becky and me to go through the houses. I didn't take much from my room, as it was mostly junk I'd collected over the years. Becky felt the same so we both ended up just taking photos and little things that were special to our families.\n\nMichelle took time off work to help. She was packing things up in my parent's room one morning, when I found her sitting on the floor crying. She was holding a picture of Mom and Dad and the tears were running down her face. I sat down next to her and she wrapped her arms around me and cried on my shoulder. I knew she was close to Mom and Dad but this was the first time I'd seen her really let out her emotions since the accident. Sure, she'd cried with us at the hospital and the funeral but this was different her whole body was shaking as she wept. My shirt became soaked with tears. When she finally raised her head I could see she was emotionally drained. I helped her up, took her hand in mine and led her outside to the car. Quickly I went back inside locked up the house and drove us home. Michelle was clutching the photo of my parents all the way.\n\nWhen we got home I helped her into bed and pulled up the covers. I think she was asleep before I even left the room.\n\nSpeaking of sleeping, I was back on the couch at night. I hadn't really given Becky a reason why and thank goodness she didn't ask. We'd been working long hours packing up the houses and we hadn't spent a lot of private time together. It didn't change how I felt about her but the space made it easier to cope with.\n\nFinally the day arrived for us to shift into the new apartment. Michelle's place had come furnished so there was no big stuff to move. We'd decided to sell the furniture in the other houses as the new apartment was already decked out with everything we needed.",
        "We settled into a routine at the new place and Becky decided it was time for her to go back to school.\n\nI felt differently and made a decision to drop out. I figured I could take some night classes to get my diploma, it might take some time but who cares. I was never really good at school anyway and my grades had me just passing each year. I was more of a practical hammer and nails sort of person and I'd already worked for a small construction company during the last summer break and really enjoyed it. They'd offered me full time work in the future so I approached the boss and asked if I could start sooner. He said they had a big contract coming up next week and I could start then.\n\nUnfortunately my decision didn't go down well with Becky. She argued that it was only six more months before I graduated and tried to make me feel guilty about leaving the athletics program in the lurch. I said my mind was made up and it wasn't going to change. Becky mumbled something about not seeing much of me now anyway and stormed off to her room. Later that night I told her I could drop her off at school each morning, and we could still go jogging in the weekends. She told me not to bother, as she'd hate to put me out. She'd get the bus to school and would probably be too busy with hockey in the weekends to go jogging anyway. I knew it was pointless talking about it with her anymore that night so I left her sulking in her room and went to bed.\n\nThe next morning she was gone before I got up, so there was no chance to talk. I had to go and mow the lawns at my old house and do some maintenance before it went on the market so I'd be gone all day. I'd have to patch things up that night.\n\nI got back that evening just before five o'clock and Becky was sitting on the couch. I went over and sat in a chair opposite her. When she looked up I could tell she had been crying her eyes were red and puffy.\n\n\"Tell me what I've done wrong AJ, please ... whatever it is I'm sorry.\" she whimpered.\n\nI was stunned. \"Becky you haven't done anything wrong.\"\n\n\"Why are you pushing me away then ... I've done something I must have!\"\n\nHer lips were trembling and she looked so small and vulnerable. Her eyes welled up with tears. My heart melted. I knelt in front of her and took her hands in mine.\n\n\"You haven't done anything ... it's me.\"\n\n\"I don't want you to hate me, please don't hate me.\" She pleaded and the tears stated to flow.\n\nI pulled her towards me and hugged her. \"I could never hate you Becky, I love you.\"\n\nAs she cried I held her tightly. I had never loved anyone as much as I loved her at that moment.\n\nAs she calmed I let her go. Her hair was a mess, her eyes were red, her face was streaked with tears and mascara, but to me she was the most beautiful thing I'd ever seen. I took her hands in mine again.\n\n\"Becky, you've been my best friend for as long as I can remember and I've loved you for as long as I can remember... I can't imagine my life now without you, especially now after everything that's happened. But my feelings toward you have changed lately and I didn't know what to do ... I'm so sorry if I hurt you. But I don't just love you just as a friend anymore ... I'm falling hopelessly in love with you!\"\n\nShe closed her eyes and took a deep breath. When her eyes opened she smiled.\n\n\"It's about time!\" She managed to get out between sniffs.\n\n\"What?\" I didn't understand what she meant.\n\n\"I've been in love with you for years silly. I've waited so long for you to say that.\"\n\nIt was my time to break into a grin. \"So what do we do now?\"\n\n\"Kiss me you idiot!\" she said with a sniff and a giggle.\n\nWhen our lips met it was the best feeling in the world.\n\nI don't quite know how long we were sitting there kissing, but as far as I was concerned it would never be long enough. But all good things must come to an end and for us it was because of a noise from the other side of the room.\n\nWe looked over and Michelle was standing just inside the door looking at us. She was the first to speak.\n\n\"I'm going to change out of my work clothes, pour myself a large drink and then we're going to have that talk!\"\n\nTen minutes later we were sitting opposite each other on the couch.\n\nMichelle took a couple of sips from her wine glass and looked over at us.\n\n\"I'm not sure where to start with all this.\" she said a little nervously. \"This is uncharted territory for me you know. I haven't done the parent thing before so I'm going to need your help OK?\"\n\nWe both nodded.\n\n\"I can safely assume you two have talked and feel the same way about each other?\"\n\nWe nodded again.\n\n\"Please tell me that you have only kissed and nothing else has gone on!\"\n\n\"We only talked a little while ago. All we've done is kiss.\" I replied.\n\nBecky nodded in agreement. Michelle looked relieved.\n\n\"OK that's good. But, you're both young and full of hormones, and one thing usually leads to another and before you know it .... well I'm assuming that sex is going to come into your thoughts in the future!\"\n\n\"Maybe ... I mean at some stage ... I don't know?\" Becky replied nervously and looked at me as she started to bite her lip.\n\nI smiled back and squeezed her hand reassuringly.\n\n\"OK, but there are some things to consider.\" Michelle said.\n\n\"We are both old enough ... I mean legally.\" Becky added with a touch of defiance.\n\n\"You're cousin's Becky sweetheart, there are legal problems there.\"\n\n\"You already know we're actually not blood relations.\" I reminded her.\n\n\"AJ's right. My Mom was pregnant with me when Dad and she got back together.\"\n\nIt was true. Becky's Mom and Dad were high school sweethearts but they broke up when they went to college. Her Mom then met Becky's biological father and got pregnant. But when she told him about the pregnancy he freaked out and left. He ended up in the army and was killed in Iraq a couple of years later ... no one else in the family ever met him. Anyway, Becky's Mom and Dad were still in love and they got back together. They got married just before she was born. Her Dad officially adopted her and that was that. She didn't even know about it until she applied for a passport for a Costa Rica school trip.\n\nI knew Michelle knew the story. She'd come to know all the family secrets over the years.\n\n\"OK, I know that means it's technically legal\", Michelle replied. \"But it doesn't mean to say I'm going to let you two ... you know, all over our house.\" she added with a frustrated sigh.\"\n\n\"Michelle we've only just kissed, it's not like we're gonna jump into bed together tonight.\" I assured her.\n\n\"OK, maybe I'm overreacting. Like I said I'm new to this parenting thing. But you live under the same roof now and I have responsibilities as your guardian you know.\"\n\n\"I'm sorry, I understand where you're coming from.\" Becky said apologetically.\n\n\"You're probably right though.\" I interjected. \"Hormones are hormones and I know I've got plenty of them.\"\n\n\"Me too.\" Becky said with a wry smile.\n\n\"Make that three of us!\" Michelle added and smiled back.\n\n\"Say we just set some guidelines and then what happens in the future ... happens\" I offered.\n\n\"OK with me.\" Becky said agreeably.\n\n\"Alright then.\" Michelle took another sip of wine before continuing. \"First thing, Becky goes to the doctor and goes on the pill. I'm not going to let you ruin your future by having a child at 16 ... Secondly, if and when it happens, you keep it to this apartment ... agreed?\"\n\n\"Agreed.\" We said in tandem.\n\n\"And preferably in your bedrooms please.\"\n\nWe all smiled.\n\n\"Also, no sex on a school night.\"\n\n\"Wow, you're catching on to this parenting thing pretty quickly.\" Becky remarked.\n\n\"Thank you. I'll take that as a compliment.\" Laughed Michelle.\n\n\"Is that it?\" I asked.\n\n\"No, one more thing.\" She had a serious tone in her voice. \"You have to keep your relationship between us. Others won't necessarily agree so readily, especially since they think you're proper cousins. So no physical stuff in public. You can still hang out and enjoy yourselves, people are used to you being together anyway ... OK?\"\n\n\"Agreed.\" We both said again.\n\n\"Good. Now for goodness sake AJ fill up my wine glass please, I think I need to get drunk and forget this conversation!\"\n\nWe all laughed releasing some of the tension in the room. I grabbed the wine bottle from the counter and refilled the glass.\n\nBecky went over and gave Michelle a kiss on the cheek. \"Thanks, you make a good Mom.\" she said quietly.\n\nMichelle's eyes moistened up. \"That's probably the nicest thing anyone has ever said to me.\"\n\n\"Get used to it.\" I said smiling. \"We're family now.\"\n\n\"I think I need a group hug.\" she said as a tear rolled down her cheek.\n\nCHAPTER THREE - THE RIGHT TIME\n\nBecky and I were pretty much glued together from then on. We played it cool when we were in public and didn't even kiss goodbye when I dropped her off at school each morning. We hadn't made love yet and had decided we wouldn't until we were both emotionally ready. We were still dealing daily with the emotions of our family loss, especially Becky. She said she needed some time, and I was cool with that. That didn't stop us from cuddling up on the couch, and kissing. Michelle was gracious and didn't say too much, she would occasionally roll her eyes and shake her head if we carried on too much. We did made a point of sitting down with her after supper each night to talk or watch a movie.\n\nIt had been about seven months since the accident, and something still came up every day that made us think of our families. We would have our moments when the loss still seemed unbearable, especially when we'd had to go to the old houses for something, or it was a family birthday. The start of baseball season was really hard for me as dad and I used to talk about the teams and games all the time. Without Becky and Michelle around I don't know how I would have coped. \n\nI plunged myself into work, and Becky did the same at school. We wanted to make our families proud of what we were doing ... wanting to feel they were smiling down on us. It did get easier time was healing very slowly.\n\nOne Saturday afternoon Michelle gabbed my arm and asked me to join her on the roof terrace. She checked that Becky was still in the kitchen and then led me up the stairs.\n\n\"What's up? Why all the secrecy?\" I said once we were sitting down on a couple of sun loungers.\n\n\"She's ready.\" Michelle replied.\n\n\"Who? ... Ready for what?\"\n\n\"Do I have to spell it out for you AJ? For a smart guy sometimes you can be a little thick. Becky wants the two of you to take the next step in your relationship.\" explained Michelle.\n\n\"Oh ... so how do you know and I don't?\"\n\n\"We're girls, we talk! She's really nervous about it.\"\n\n\"OK, and but why are we up here talking about it?\" \n\n\"It's going to be one of the most memorable moments of her life AJ ... and I don't want you to muck it up.\"\n\n\"Well if I wasn't feeling a nervous about it before I sure am now.\"\n\nTaking my hand in hers she said \"I know you love her and would never hurt her, but when it comes to down to it most guys are fumbling around in the dark the first time.\"\n\n\"So what do you suggest? It's not like Drivers Ed ... I can't take lessons.\"\n\nMichelle laughed \"No, I guess not. But I would like to give you some advice, if that's O.K.\"\n\n\"Of course it's OK. I want it to be special for her too.\"\n\nMichelle told me to come to her room tonight and she'd explain some of the do's and don'ts of how to make love to a woman. \n\nWhen we back downstairs Becky was watching TV.\n\n\"What have you guys been up too?\"\n\n\"I was just telling AJ I could help him with some night classes.\" Michelle replied. Then she turned and gave me a wink as she went into the kitchen.\n\nLater that night I knocked gently on Michelle's door. Her room was on the opposite end of the apartment from Becky's and mine, so I suppose it was a good place to talk without being overheard. I was feeling a bit nervous as I'd never really talked about actual sex with anyone before, even with my parents. Michelle was sitting on the bed, she was wearing her toweling robe. \n\n\"I'm not going to bite AJ.\" She smiled and I relaxed a bit and smiled back.\n\nFor the next ten minutes we talked about what experience I already had with girls ... it wasn't much just a few dates where I didn't get much past first base. To be honest I had always enjoyed my time with Becky better than any date I'd been on. Michelle's attitude was relaxed and I found myself enjoying the conversation. She started talking about the need for foreplay. Which started way before any physical contact. Things like flowers, compliments and even opening a door can be called foreplay as it is setting the right mood and making a girl feel attractive and cared for. Then the room needed to be right, maybe some music and low light, romance was foreplay. Michelle smiled and said we had kissing down to an art form so that wasn't going to need work. \n\nShe went on to say that on the night we should undress each other slowly and I should tell Becky how beautiful she is ... as most woman hate some part of their bodies, so build her confidence by saying that she looks great. Then she got onto body contact and areas to touch, don't just go for the breasts or between the legs she said, and explained woman have a number of erogenous zones that make her feel good. The ear lobes, the neck, lower back, and even the feet. She told me to spend time exploring Becky's body and to ask what she likes and dislikes.\n\nI said I felt like I should be taking notes, in case I forget something. Michelle laughed and said I'd do just fine. You're a Johnson male you'll pick it up.\n\nI was taken aback by that comment and asked her what she meant.\n\nMichelle blushed and quickly said, \"Girl talk with your Mom.\"\n\nShe seemed a little flustered but got back on topic by asking if I knew about the clitoris, she said it was probably the most misunderstood and misused part of a woman in foreplay. She asked if I'd seen one. I said only in pictures.\n\nMichelle paused took a deep breath and looked like she was deciding something. \"OK bucko today's your lucky day. She stood up and removed her robe. She stood naked before me.\n\n\"Don't look so shocked, you have seen me nude before.\" She spread her arms out and turned in a circle before me. \"But take another good look and get it over with.\"\n\nShe was perfect. Her body was trim and fit. Her breasts were small but they looked amazing, and when she turned I saw the most beautiful butt cheeks. She stood facing me with her pussy right in my line of vision. It too was perfect from where I sat... she had a thin strip of pubic hair and the rest was bare.\n\n\"All right.\" She said, \"You too ... get it off, I'm not going to be the only one butt naked.\"\n\n\"You're kidding ... aren't you?\" I said in disbelief.\n\n\"Off AJ ... I'll feel less like a stripper and it'll seem more natural if we're the same.\"\n\nI stood and removed my T Shirt, it was obvious that I had already got an erection as my shorts tented out\n\n\"Shit, I'm sorry!\" I said as I blushed.\n\n\"Hey, I'd be disappointed if I didn't get some reaction.\" She smiled, \"But an erection is a natural thing to happen ... I'm OK with it.\"\n\nI took a deep breath dropped my shorts and quickly sat down with my hands in my lap.\n\nShe hopped back on the bed and sat back against a pillow on the headboard. Her legs opened up and I found myself staring at her now exposed pussy lips. The view did nothing to help stem my erection.\n\n\"Right, the clitoris.\" Michelle said as if she was giving a lecture. It's under this hood of skin at the top of my ...umm ... I'll just call it my pussy. That OK with you?\"\n\nI was sitting there staring at her and didn't respond.\n\n\"Earth to AJ are you reading me?\" she smiled and waved her hand in front of my face.\n\n\"Ah, yeah sorry. It's just ... you're beautiful.\" I said and smiled at her.\n\n\"Thank you AJ, but you know what. I know a young lady that's going to take your breath away when you see her. So come on and let me show you how to make her feel like she's in heaven.\"\n\nI looked up at her and smiled \"You have got to be the best guardian a guy's ever had.\"\n\n\"You better believe it Bucko.\"\n\nFor the next 15 minutes I was staring at her breasts and pussy as she explained how to gently arouse a women by touching, licking and nibbling parts of her body. As she touched herself my cock got even harder and I could feel pre cum leaking out. Suddenly she reached over and took my hand and placed it on her clit so I could feel what she was explaining. It took a couple of minutes and that was it for me, I shot my load. The first spurt shot out and splashed onto her stomach. The second hit the bed sheet. The rest shot into my hand as I tried to cover up.\n\n\"Oh, AJ ... I didn't expect that to happen ... I'm sorry. You should have said something.\"\n\n\"Surprise!\" I said sheepishly and gave a mock smile.\n\nMichelle smiled back. She pulled a tissue out of a box beside the bed and handed it to me. I was breathing hard and my face was flushed ...more from embarrassment than anything else.\n\n\"Well you're certainly not short of sperm!\" She exclaimed looking at her belly and the bed sheet. Then her eyes meet mine and she sighed. \"I really didn't expect it to go that far, it wasn't my intention. Shit I'm supposed to be looking after you, not leading you into the depths of depravity. I'm twice your age and I should have known better than to do that.\"\n\n\"Hey, it was educational.\" I quipped smiling.\n\nShe glanced down at my still stiff cock. \"Yeah, well please just put the monster away. This lecture is well and truly over even if that thing doesn't think so.\"\n\n\"It tends to have a mind of its own.\" I joked as I pulled on my shorts and tried to stuff my erection back in my pants.\n\nMichelle moved down and sat next to me, her legs dangling over the edge of the bed.\n\n\"Look I don't want to do anything that comes between Becky and you, and the last thing I wanted to do is embarrass you. I'm beginning to think this was a mistake. I'm sorry.\"\n\n\"I'll get over it, I may be scarred for years to come, but I'll get over it.\" I joked.\n\nShe smiled and patted my hand. \"Thanks, that's reassuring.\"\n\n\"Hey, don't beat yourself up, I do feel a lot more confident about things with Becky.\" I leant over and kissed her on the check. \"Thanks ... and I really mean that.\" I stood up and left her sitting on the bed with a smile on her face.\n\nA couple of days later I asked Becky if she wanted to go out to dinner on Saturday night. I told her that Michelle was going out with the girls from work so it would just be just the two of us.\n\n\"You mean a proper date?\" She asked.\n\n\"Yeah, a proper date. How about we go to the Blue Pelican.\"\n\n\"AJ, that place is really expensive. Besides you have to book in advance and I ...\"\n\n\"Already booked!\" I interrupted her. \n\nI continued in a posh British accent \"I will pick you up at your door at 7pm if that suits you Miss Rebecca. As for the price, I am a working man now, and I cannot think of a better way to spend my time or money than on a beautiful woman such as yourself.\"\n\nShe laughed \"I love you Andrew Johnson. It's a date.\"\n\nSaturday couldn't come soon enough. I'd worked all day and had stopped at a florist and picked up some orchids on the way home. Becky's favorite flower. When I got home Becky called out from Michelle's room and told me not to come in as she was getting ready. I put the flowers in a vase and had a shower. At 7 o'clock I tapped on Michelle's door and waited outside. When the door opened I couldn't believe my eyes. Becky looked absolutely amazing. Her dress was a sparkling silver and grey color. It hugged her curves and showed off her fantastic legs in high heels. Her makeup was flawless with silver eye shadow that made her grey eyes look so seductive. Even her hair looked different. She'd never looked as sexy.",
        "\"Well\" she said tentatively \"What do you think?\"\n\n\"You look absolutely gorgeous baby, wow!\"\n\n\"Thank you.\" Her face was radiant as she broke into a huge smile.\n\nShe noticed the flowers. \"Oh AJ, they're beautiful.\" She gave me a hug and we kissed.\n\nIn the car, Becky told me about her day. Michelle had lent her the dress and arranged for her to have a haircut at a local salon, then she'd had her first manicure. She held up her hands to show me.\n\n\"I can't bite them anymore if they look like this.\" she laughed.\n\nThe rest of her day had been spent practicing walking in high heels. Only a couple of falls she admitted.\n\nOur whole evening out was fantastic. We drove to the promenade and parked, then walked along the boardwalk to the Pelican. It was a busy night and there were a lot of people out walking and dining at the many restaurants we passed. We got a lot of looks, as we strolled arm in arm.\n\n\"Why's everyone looking at us?\" Becky said still feeling a little self-conscious. This was a big change from shorts and T shirts.\n\n\"Are you kidding?\" I replied \"They're looking at you babe, the guys can't take their eyes off you. You look so hot.\"\n\nShe leant into me and smiled, \"There's plenty of women looking too, and you're pretty hot yourself.\"\n\n\"I dunno, I reckon the women are looking at you too.\" I said nudging her shoulder playfully.\n\n\"You want me to pick one out for a threesome eh?\" she teased\n\n\"You're more than enough for me baby.\"\n\nShe hugged my arm and looked up into my eyes \"That was the right answer Mr.\"\n\nThe look on her face was the sexiest thing I had ever seen.\n\nBlue Pelican lived up to its reputation. The food was superb. Our table overlooked the ocean and I assume it was a great view ...I didn't really look past the beautiful girl sitting opposite me. On the way back we stopped and listened to a couple of street musicians playing a guitar and a sax on the boardwalk. It was a mellow kind of sound and a half dozen couples were dancing. Becky grabbed my hand and pulled me into the dance area and we slow danced to a couple of songs.\n\nJust as we were leaving we heard someone call out.\n\n\"Becky is that you?\"\n\nTurning around we saw a group of her friends looking at us. We had been dancing really close and Becky head was on my chest, I was hoping they didn't see that.\n\n\"Wow! Becky you look amazing!\" exclaimed her friend Sasha.\n\nThis was followed up with other comments from the other girls. Becky smiled and thanked them.\n\nSasha was the only one of the girls I'd really met before, she went to our school. I recognized the others from Becky's junior state field hockey team.\n\n\"Where have you been dressed like that?\" Sasha asked.\n\n\"The Blue Pelican!\" Becky replied excitedly holding Sasha's arm.\n\nThere was another flurry of comments from the girls.\n\n\"My lovely cousin wanted to take me somewhere special she said.\" linking her arm in mine.\n\nI wished she hadn't said that I was afraid they would think it was a date and that could be awkward.\n\n\"Well you're looking pretty hot girl.\" Sasha said and smiled.\n\nYour dancing was pretty hot too, what's this special occasion anyway?\" A tall red head named Kelly asked.\n\n\"Yeah, com'on spill the beans, you don't get dressed up and look like that every day.\" Sasha added excitedly.\n\n\"Becky just needed to get out of the house, we both did really, the last eight months has been pretty hard.\" I answered.\n\nThey all went quiet and looked a bit embarrassed.\n\nSasha took Becky's hand and gave it a squeeze. \"It's good to see you out and about again Becks, we've missed you not being around in the weekends. You too AJ.\" She said sincerely.\n\n\"Maybe we'll can catch up one weekend.\" Becky offered.\n\n\"That'd be nice\" Sasha replied and gave Becky a hug.\n\nThe others nodded their agreement, said goodbye and started to head off.\n\n\"We're going to need to be careful, you may have to dress down when we go out in public.\" I said trying to sound serious.\n\n\"Ha, I don't think you'd like me back in baggy jerseys and sweat pants.\"\n\n\"You'd look sexy wearing a garbage bag.\"\n\n\"You want me to try that on our next date?\" she said with a grin and a shrug.\n\n\"Oh, so you think they'll be a next date do you?\" I said trying to suppress a smile.\n\n\"There better be or you'll be in real trouble Mr.\"\n\nAs we went to leave she pulled on my arm to stop. \"Hey, have you got ten bucks I can borrow?\" she asked in a complete change of subject.\n\n\"Yeah, why?\" I reached for my wallet.\n\n\"Gimme!\" she said and snatched it out of my hand \"Thank you\".\n\nShe ran over to the musicians who were starting to pack up and dropped the money into the hat they had put out. \n\nI watched her start up a conversation with the sax player. Within ten seconds she had him laughing. I smiled. Becky always had a way of putting people at ease, like they were old friends. She glanced back at me, smiled and gave me a wave, then turned and carried on her conversation.\n\nSuddenly I heard someone call my name. I turned and saw Sasha running towards me. She stopped and took a second to catch her breath. She put her hand on my shoulder, raised up on tip toes and kissed me on the cheek.\n\n\"I'm so glad you've been there for Becky, she really loves you AJ.\" Then she smiled, turned and ran back towards her friends.\n\nI'd always liked Sasha, she'd visited us in hospital and had sat behind us at the funeral. Her hand was on Becky's shoulder in a comforting way for most of the service. I know it makes me kind of shallow but my opinion of her was helped by the fact that she was very good looking with long black hair that reached down to her waist. Her eyes were an emerald green color and they seemed to sparkle in the sunlight. Her skin was a deep tan color and flawless. I think her Mom was black and her Dad was Italian. She had a figure that was similar to Becky's but she didn't hide it behind T shirts and sweats. In the past I had even thought about asking Becky to try and set us up on a date. But I'd chickened out as I thought she was out of my league, and there always seemed to be guys chasing her anyway. I watched her jog away with her hair swinging from side to side. She had a cute butt too.\n\n\"What did Sasha want?\" Becky queried from behind me.\n\n\"Ahh ...what ...she's... she's just happy to see you doing well.\" I stuttered my skin flushed from embarrassment.\n\n\"You O.K?\" Becky queried looking at me strangely.\n\n\"Yeah, fine.\" I answered looking down at her. I smiled and realised I've already got a girl with a cute butt. I took her hand and gave it a squeeze as we started to walk back to the car.\n\nOn the trip home I could sense Becky getting a bit nervous, and she started to bite her lip. I looked over and told her I loved her. She smiled back and reached over and took my hand in hers. We were still holding hands as we entered the apartment. Becky noticed Michelle's bedroom light was on and her door was ajar. \n\n\"We better tell her we're home and say goodnight.\"\n\nI knocked on the door and knew to wait until I'd heard a clear \"Come in.\" When Michelle saw Becky she gasped and her eyes started to tear up.\n\n\"What's wrong?\" Becky said concerned as she sat on the bed.\n\n\"Nothing's wrong sweetheart ... it's just you ...\" Michelle reached over and they hugged \"You're all grown up.\" she said softly.\n\nAs I stood and watched their show of affection something lifted inside me. I don't quite know what it was, but I suddenly had an overwhelming feeling of contentment. I smiled as I thought ... this is my family now.\n\nFinally the girls broke their embrace and Michelle held Becky at arm's length ... she sighed and smiled.\n\n\"You look stunning, absolutely stunning.\"\n\nBecky stood and gave a twirl. She looked so happy. Michelle patted the bed beside her \"So ... how was your date?\"\n\nI reached over and gave Michelle a kiss on the cheek. \"That's my cue to leave.\" I said jokingly.\n\nBecky looked up and said rather anxiously \"Are you going to bed?\" Then she stuttered \"I mean ...wait up and give me a goodnight kiss won't you?\"\n\n\"Of course I will.\" I said smiling.\n\nMichelle looked at me and smiled raising her eyebrows in a knowing way.\n\nIt was ten minutes later that I heard a tap on my door and Becky came in. Light music played quietly and the bedside light had been softened by a scarf draped over the shade. I was standing in front of the bed.\n\n\"What's all this then?\" she said softly.\n\nI held out my hands and she walked over and took them in hers.\n\n\"I love you Becky, more than words can express. I'd like you to stay with me tonight, if that's OK with you?\"\n\nShe reached up and put her arms around my neck and we kissed. Our lips just touched as we gently teased each other, then our mouths opened and our tongues met, our kiss became more passionate. We parted for a second and looked at each other.\n\n\"I'll take that as a yes.\" I said.\n\n\"I was hoping you would.\" she replied.\n\nShe took a step back and turned around. \"Unzip me.\" She said softly.\n\nI reached for the zipper and very slowly pulled it down as I kissed the back of her neck and gently nibbled on her ear lobes. Her head arched back.\n\n\"Hmm, I like that!\" She whispered.\n\nHer dress fell to the floor between us and her hands reached back and she ran them through my hair. I turned her back toward me and continued kissing her neck. She raised her head and our lips and tongues met again. Her fingers slowly unbuttoned my shirt then she reached inside and lowered it off my shoulders until it joined her dress on the floor. Her hands rubbed over my chest and arms as we continued to kiss. I reached behind her back and released the clip on her bra. I did it so quickly that she giggled and asked if I'd been practicing. Taking another step back she let the bra fall away while covering her breasts with her hands. Then her arms slowly dropped to her sides. She looked up, her teeth were biting her bottom lip and she looked anxious.\n\n\"They're beautiful.\" I said. And they were ...not too big and not too small. They were perfect.\n\nShe smiled, reached out and placed my hands on the most exquisite pair of breasts I had ever seen. I lowered my head and kissed each breast it turn and sucked gently on the nipples as I rolled my tongue over them.\n\n\"That tickles!\" she giggled.\n\nI took my mouth off but she pushed it back with her hands on the back of my head.\n\n\"I didn't tell you to stop.\" she said playfully.\n\nAs I continued I could hear her breathing change as she began to softly moan. I placed my hands on her butt cheeks and lifted her up. Her legs wrapped around me and I moved toward the bed. Laying her on her back I started to kiss down her body, past her breasts, across her stomach and down her legs to her feet. I nibbled on her toes and she giggled again. Finally I reached up and took hold of her panties, I looked up at and our eyes meet ... she nodded for me to continue. Her butt raised up and I slid the lacy black material down her legs. There was a wet patch in the crotch and I could detect a faint musky smell coming from them. I tossed them on the bed and looked down at Becky's body. There was just a triangle of blonde hair above her pussy, the rest was bare and her outer lips glistened with her juices.\n\n\"Wow!\" I exclaimed. \"When did that happen?\"\n\n\"Do you like?\" she said smiling.\n\n\"Oh yeah!\" I replied.\n\n\"We waxed it earlier.\" she explained \"Just for you.\"\n\nI thought about her use of the word 'we'. But right now I didn't really care. I ran my eyes over her body.\n\n\"You are so beautiful baby.\" I said softly and leant forward and kissed her.\n\nMy hands were caressing her body and I gently rubbed my thumb up her pussy lips and brushed over her hooded clitoris. Becky's hips moved slightly and as she sucked in a breath. I continued to rub gently up and down, her juices lubricating her clit. Her hips continued to move slightly in tune with my thumb. Her eyes were shut and soft moans were coming from her open mouth. Her breathing became more ragged.\n\n\"Is that OK?\" I whispered in her ear.\n\n\"Don't you dare stop!\" was her quick reply between gasps.\n\nI increased the pressure of my thumb and at the same time gently started to insert a finger between her pussy lips.\n\n\"Oh yeah!\" she moaned.\n\nI angled my finger to rub against the top of her vagina, the G spot, according to Michelle. As I slid my finger in and out and continued to rub her clit her breathing changed again, she stopped panting and started to hold her breath and tense up. Her hands gripped the sheets as she sucked in a big breath.\n\n\"Ohh ...ohh ... ohh...yes!\" Her body started to spasm and her back came off the bed as she arched up. \"Ohhhh!\" she moaned as she continued to buck her hips up and down.\n\nFinally her hand moved over mine and pushed it away from her clit and she lay there gasping for breath. When she opened her eyes her lashes fluttered as she tried to calm her breathing. Every few breaths her body would still lightly spasm. I leant over and kissed her lips lightly and she kissed me back.\n\n\"Wow! That was incredible, I've never come like that before.\"\n\nShe rolled over and hugged me tightly. We lay there for a few minutes and I stoked her hair as she ran her fingers gently thru the hairs on my chest.\n\nI still had a huge erection and it was clearly pressing against her stomach thru my pants. Her hand moved down and brushed against it.\n\n\"It feels like somebody needs a little attention.\" Her voice was playful and I could sense her smiling. \"Let's take look.\" She added and moved down the bed. I undid my belt and zipper and lifted my hips as Becky tugged my pants and underwear off. She lay back down her head resting on my stomach. Brushing her hand against my now exposed and fully erect cock it twitched at her touch. She giggled and encircled it with her fingers and started to stroke up and down. I had been on the cusp of cumming for quite a while and I knew I wouldn't last long if she keep on playing with him.\n\n\"Hey, you better watch out, he squirts.\" I warned.\n\n\"Cool! I gotta see that!\" was her reply as she kept up the movement.\n\nHer head was so close I could feel her cool breathe on the tip of my cock.\n\n\"Careful!\" I warned again.\n\nInstead of pulling her head back I felt something wet and warm slide over the tip and run down my shaft. Her tongue. For someone who was new to this she was pretty good. It felt fantastic. Then just as suddenly as she had started she stopped. I was a bit disappointed until I felt a kiss from her moist lips. She slowly lowered her head and her mouth engulfed my first three inches. Her head bobbed up and down as she slowly sucked my now very sensitive cock. I couldn't hold out any longer and my body tensed up.\n\n\"I'm cumming Becky!\" I cried out quickly.\n\nHer head came away just in time as a stream of cum flew out, just missing her face it landed on my chest and stomach. Five or six other squirts followed before the rest flooded out onto her hand that was back pumping me up and down. I was breathing heavily as she glanced up.\n\n\"That was so cool!\" She exclaimed with a look of fascination on her face. \"Is there always that much?\"\n\n\"Pretty much.\" I replied between breaths.\n\n\"What does it taste like?\" She was looking at the sperm on her hand.\n\n\"I don't know ... I've never tasted it.\"\n\n\"Why not?\" She lifted her hand to her nose and smelled it. Then her tongue popped out and dipped into the sticky glob. She made a little noise with her lips like she was tasting a fine wine.\n\n\"Salty and kind of sweet, with a hint of vanilla.\" she mused as if giving a review to an audience. \"Not bad.\" Her tongue came out again and licked the rest of glob off her hand.\n\nI smiled and laughed at her antics, pulling her down toward me.\n\n\"Hang on!\" \n\nShe stopped me and reached across the bed to retrieve her panties, using them to wipe the rest of the cum from my body. \"They were already wet.\" she said smiling.\n\nWe snuggled together quietly holding one another. The contented silence was broken with Becky whispering.\n\n\"I hope he fits inside me ... he's a lot bigger than I thought.\"\n\nI knew I was only a little bit bigger than average size at about 7 inches but it was good for my ego to hear her say that. I propped up on my elbow and looked and her. She looked worried. I kissed her on the forehead.\n\n\"Of course he'll fit. We'll take things slowly.\" I assured her.\n\n\"Do you want to do it now?\" she asked and bit her bottom lip.\n\n\"Let's get some rest. There's no hurry baby.\"\n\n\"Thank you.\" she said softly.\n\n\"For what?\" I queried.\n\n\"For just being you.\" She replied and kissed me before snuggling back down with her head on my chest.\n\nWe drifted off to sleep.\n\nIn the morning I was woken by Becky sliding over me to get out of bed. I grabbed for her hand but she pulled it away.\n\n\"Toilet and teeth.\" she said heading for the bathroom.\n\n\"Nice butt!\" I remarked and she gave a wiggle before pushing the door behind her.\n\n\"Hey!\" I cried out in mock disappointment.\n\n\"Modesty.\" She replied through the crack in the door.\n\nFive minutes later she reappeared with her hair brushed and last night's make up gone. Rushing over she jumped on the bed and started to tickle me. I lifted her up and gently tossed her off as I jack knifed off the bed.\n\n\"Toilet and teeth.\" I said mocking her earlier comment. I walked toward the bathroom.\n\n\"Nice butt!\" I heard behind me.\n\nI smiled as I went inside and pushed the door almost closed.\n\n\"Hey! Guys don't have modesty.\" she joked.\n\nWhen I returned to the room Becky was lying in a mock seductive pose across the bed.\n\n\"Hey, big boy.\" her voice was husky and deep.\n\nI laughed out loud as I jumped in beside her and started raining kisses all over her body's ticklish areas. She squealed and writhed around under me. I stopped and kissed her deeply on the mouth.\n\nWhen I came up for air she looked me in the eye and softly said \"Make love to me AJ.\"\n\nI leant over and kissed her again but this time it was soft and tender. My hands slowly wandered over her body. I kissed her neck and shoulders on the way down to her breasts where I gently nibbled and twirled my tongue on her nipples. Reaching over to the bed side table I flicked the top open on a tube of lube and squeezed some onto my hand. I kissed her mouth again as my hand touched her pussy rubbing the lube over her entrance. Becky shut her eyes and gave a little moan as I started to slide my fingers up and down her pussy lips. She gasped in a quick breathe as I touched her clit, and her hips started to move slowly on the bed. After a short while I moved my legs inside hers and placed my rock hard cock at the entrance to her vagina. Her eyes opened and she gave a small nod. Slowly I rubbed my cock up and down her fleshy lips and then gently pushed the tip inside her. Her eyes were shut and her teeth were once again biting her bottom lip. I continued to ease my erection further in. I could feel her all warm and moist pressing tightly around my shaft. I kept going until I was fully in and then slowly pulled back until the head was just inside. Her hips moved upward as if in invitation to carry on. We slowly got into a rhythm of movement and as I increased my pace her hips followed. She opened her eyes and smiled.\n\n\"I really like that.\" She said and drew my head down with her hands and kissed me twirling her tongue inside my mouth.\n\nI increased my pace and was not as gentle, her breathing became quick gasps and she slipped a hand between us and rubbed her clit. I was getting close to cumming, and soon couldn't hold back any longer ... I shot deep inside her. She wrapped her legs around my body and held me tightly as I continued to ejaculate. Finally breathing heavily I collapsed forward being careful not to crush her. We kissed as our breathing and heart rates got back to normal. Becky broke our kiss and looked up at me, her eyes were wet from tears.",
        "\"Are you OK baby?\" I quickly asked concerned.\n\nHer reply was almost a whisper. \"I'm more than OK ... I love you so much.\"\n\n\"I love you to baby ... I thought I'd hurt you.\"\n\n\"Tears of joy, dummy.\" she smiled between light sobs.\n\nI wrapped my arms around her and held her tight never wanting to let her go. We stayed that way, wrapped in each other's arms for a long time, her head on my shoulder as I gently caressed her hair.\n\nIt was late-morning before we emerged from the bedroom. We'd showered together and had spent quite some time soaping each other up, especially the areas below our waists and above our legs! So much time in fact, we had both orgasmed from the attention. Michelle was in the kitchen and she had a bowl of batter ready to make pancakes.\n\n\"Good almost afternoon.\" she quipped looking at the wall clock. \n\nI just smiled back sheepishly.\n\n\"It is a good morning, isn't it?\" Becky chirped and went over and gave Michelle a huge hug.\n\nMichelle smiled at me over Becky's shoulder. She mouthed the words \"Well done.\"\n\nWe all pitched in and made brunch. Pancakes, bacon and fresh fruit salad. Washed down with orange juice and coffee. Eating took place on the roof terrace, with the sun shining down and the smell of the ocean in the breeze.\n\nIf anyone had told me eight months ago that I could be this happy again, I would never have believed them.\n\nCHAPTER FOUR - ONE YEAR ON\n\nThe rest of the year went quickly. Becky and I stayed within the rules and only slept in each other's rooms on Friday and Saturday nights, but during vacation the rules disappeared.\n\nWe sold the two houses and Becky's fathers business. I signed over Dad's business to Michelle. I wanted to just gift it to her but she said that wouldn't be right. After much haggling we agreed she would pay a percentage of the profits into my trust for the next five years. I got her back by giving her my Dads Mercedes for a birthday present. She's always liked it and it was just sitting in storage anyway.\n\nBecky had decided to take a year off and not go to university yet, she was taking a few classes at a community college.. My job was going OK and I was picking things up really quick. I was still classed as the rookie by some of the guys and they expected me to get their coffee and clean up after them. I got pissed off with them sometimes and let them know it. All the hard work had toned my body and I'd put on quite a bit of muscle so I was starting to stand up for myself.\n\nAs the first anniversary of the accident got nearer, the more we were thinking about our families. In the evenings we shared stories and talked about the good times we remembered. Sometimes we laughed and at other times we cried. There was going to be a memorial plaque unveiled at the site of the old building. The owners had sold the land to the city council and it had been cleared of debris and turned into a public park. They had planted 30 trees, one for each person who died. There was a seating area in the middle where the plaque was going to be and it was surrounded by grassy knolls and gardens.\n\nOn the day, we arrived 10 minutes early and were surprised to already see hundreds of people gathered around. A lady from the council took as up the front and showed us where to sit. We shook hands and exchanged hugs with some of the other victim's families who were already there. Two of the group had guitars and I remembered hearing someone say a song had been written especially for the day. Looking around I saw a number of people I knew in the crowd, including Becky's friend Sasha and Ted Wright my boss. Ted was standing with some of my work mates. I caught his eye and we nodded a greeting to each other.\n\nRight on time the city mayor got up and started things off. He said some nice things about honoring our families with the new park and then read out the names of those who died. He did this in alphabetical order and when he got to J there was a few gasps from the audience ... 15 times he said the surname Johnson. I could sense people looking in our direction as they realised the loss we had experienced.\n\nWhen it was time to unveil the plaque, they called Becky and a little girl called Katie to come up. Katie was one of the waiter's young daughters. It had been arranged beforehand that they would do the unveiling. Katie must have been about 10 years old and she looked very nervous. Becky took her hand and whispered something to her as they approached the front. They stood on either side of a big stone covered with a golden cloth. I saw the couple with the guitars get up and they started to play. Becky and Katie lifted the cloth and dropped it in front of the stone. The plaque was made of bronze and set into the rock. The names that the mayor has read out were all engraved into the bronze.\n\nAs the musicians played and sang Katie started to cry. Becky knelt down and put her arms around the little girl and hugged her tightly. Seeing them hug was a very emotional and a special moment. I don't think there was a dry eye in the whole park as people saw the reality of our loss.\n\nI don't remember much of the song but a line in the chorus said something about 'Memories floating on the breeze' and as they sang a warm light breeze did blow in from the sea. I shut my eyes and felt the presence of Mom, Dad and my sisters Emma and Gracie. It bought a smile to my face amid the tears.\n\nAfter the ceremony we stayed for over an hour and shook hands and received hugs from many people. Most of them I didn't know but they were sincere in offering their condolences. Sasha hung around with Becky and at one point when we were separated I noticed she was keeping people back to give Becky space. At one point she helped peel an over-zealous hugger away and as she looked up our eyes met. \"Thank you\" I mouthed and we smiled at each other. Sasha had also decided to take some classes at the local community college so they saw each other every day.\n\nWhen we got home from the service we were emotionally drained. No one said anything as we sat on the couch, Becky lay with her head on my lap and Michelle huddled alongside with her arm around my waist.\n\n\"I think we all need a vacation.\" Michelle finally broke the silence.\n\nBecky and I responded apathetically with just a shrug and a grunt.\n\n\"Come on you guys. It'll be good for us to get away and recharge the batteries\" Michelle said enthusiastically. \"What'ya say?\"\n\nShe poked me in the ribs and rubbed her hand through Becky's hair. \"Well ... is it just going to be me then eh?\"\n\n\"Where would we go?\" Becky asked as she turned to face Michelle.\n\n\"I know a really nice place up by Lake Carson. There are canoes for the lake and lots of good hiking trails.\"\n\n\"We're pretty busy at work.\" I said with little enthusiasm \"I don't know if I can get time off.\"\n\n\"Yes you can. I already asked Ted at the park today. He thought it would be a great idea. In fact he almost insisted that you go away ... 'He's getting grumpy so bring him back with a smile on his face' were his actual words.\"\n\nShe gave me a nudge.\n\n\"So you really don't have much choice Bucko.\"\n\n\"Alright ... you win.\" I said with a sigh. \"But If I'm to come back with a smile I expect to be waited on hand and foot for the whole week!\" I added looking at them with a straight face.\n\n\"You are so funny sometimes.\" Becky replied with more than a hint of sarcasm. She stood up and lightly punched my shoulder. \"You crack me up.\"\n\nShe helped Michelle up and they walked away arm in arm muttering comments like ... \"He's a real comedian\"...\"We should book him for The Comedy Club\"...\"Maybe he'll get his own sit com.\"\n\nI threw a pillow at them as they left the room.\n\nCHAPTER FIVE - HEALING THE PAST\n\nSo, vacation time it was. We decided to leave on a Sunday morning, giving us time to pack the day before.\n\nOn the Saturday morning Michelle asked me to get a suitcase down from on a high shelf in her closet. I found it was pushed right to the back and I couldn't quite reach. I called for Becky to give me a hand. She climbed onto my shoulders and when I stood up she grabbed the bag. On the way down a box was knocked off a lower shelf and the contents spilled onto the floor. We both knelt down and started to pick things up. A photo that had come out of an envelope caught my eye. It was a picture of my Mom, she was standing on a balcony in a bikini. I showed it to Becky.\n\n\"Wow. Aunty Louisa!\" She exclaimed. \"A bikini, what a babe. She had such a great figure.\"\n\nShe leaned over and took a closer look the picture.\n\n\"Hang on, that's not a bikini. That's her underwear.\"\n\nI took the photo back and looked closer.\n\n\"You do realize you're ogling your Mom in her underwear.\" Becky said.\n\nI looked up and she was smiling. I went to put it back in the envelope when I saw the top of the next photo. It was Moms head and Michelle was beside her. Curiosity got the better of me and I took it out. To my shock the full picture showed that they were sitting in bed with a sheet covering them only to the waist. They both were topless. Becky looked over my shoulder and her eyes widened. We looked at each other and then at the envelope. I reached in and took the other pictures out. The next one showed the two of them completely naked on the bed, smiling.\n\n\"What the hell!\" I was shocked and confused.\n\n\"Maybe just put them back.\" Becky said softly with her hand on my shoulder.\n\nI wasn't listening. I looked at the next one and this time my Mom was lying between Michelle's spread legs. Her tongue was clearly visible licking Michelle's pussy. \n\n\"Fuck\". I looked up at Becky in desperation, as though she might have an answer to what we saw.\n\n\"Put them away AJ.\" Becky almost whispered.\n\nI just sat there. Not knowing what to say or do. A shadow appeared in the doorway.\n\n\"Hey guys, you get lost or something?\" Michelle said jokingly.\n\nWe both looked up at her blankly.\n\n\"What's the matter, are you OK?\"\n\nI held up the envelope. She took it from my hand. It took a moment for her to realise what she was holding. Then she gasped and put her hand up to her mouth. Her eyes were wide in shock and realization.\n\n\"Were you and my Mom having an affair?\" I asked starring up at her.\n\nMichelle sat down on the floor in the doorway. She sighed. \"I wouldn't exactly call it an affair.\" she said quietly.\n\n\"Then what would you call it?\" I said abruptly.\n\n\"AJ, let me explain...\"\n\n\"Did my Dad know?\" I interrupted \"How could you do that to him.\" I added accusingly.\n\n\"Of course your Dad knew!\" she retorted. \"I would never do anything to hurt your father.\"\n\n\"What! So you're saying Dad approved?\" I said sarcastically.\n\n\"Who do you think took these pictures AJ?\" She held the envelope up.\n\nI was lost for words.\n\nMichelle put her hand on my leg. \"Please just let me explain.\"\n\nI just shrugged.\n\nSo Michelle talked and we listened. She told us about the bond that formed between them over the years and how Mom and Dad had shown her what real love was. She went right back to her past and explained how her father was a drunk and her mother was a crack addict. Her Dad had raped her when she was twelve and she'd left home at fourteen and had managed to finish high school while living in the garage of a boyfriend. Over the years she had gone from one abusive relationship to another. Somehow during that time she got an accounting degree, only by separating her college life from her home life. But she was fucked up emotionally for years before meeting my parents and my family. She told us about falling in love with my parents and them falling in love with her. When she'd finished talking we just sat and hugged. Her story had touched me deeply and the way she had described how she felt about Mom and Dad it seemed perfectly natural that they were lovers.\n\nWhen we finally got to bed that night. I held Becky and she wept thinking about the pain and suffering Michelle had gone through growing up.\n\nNothing much was said the next morning as we loaded up my 4 x 4 and got on the road. We all climbed in the front and for the first couple of hours Becky and Michelle sat quietly holding hands. As we got further away from the city we relaxed more and started playing 'I Spy'. By the time we got to the lake we were in holiday mood.\n\nThe Lake House, as it was called, sat right on the water's edge and the front balcony was actually over the water. We got out and stretched our legs and admired the fantastic view. The house was pretty isolated and it was very peaceful. We unpacked and went inside and soon discovered a problem. The downstairs bedroom door had a lock on it and a note saying, 'please keep out owner's storage'. That left just one bedroom upstairs. It was a big room and it had two beds. A big king size and a smaller queen. We decided not to get upset about it we would make do with what there was. It just probably meant that Becky and I would have to curb our night-time activities. We figured we could work something out during the day. The rest of the place was great with a big open space downstairs that housed a modern kitchen, a big wooden dining table and a couple of couches. There were views across the lake from big glass sliding doors that lead onto the balcony.\n\nThat night I fired up the barbecue and cooked chicken pieces wrapped in bacon and stuffed with feta and dried tomatoes. Becky made a green salad and we opened a bottle of wine. For the first time Michelle let Becky and I have a glass of wine with her. The vacation had begun.\n\nThe sleeping arrangements were Michelle in the smaller bed and Becky and I in the bigger one. Being quite tired after the drive we all dropped off to sleep quickly.\n\nThe next day was sunny and warm. A good time for a hike. Michelle suggested a trail she had been on before. We set off and after about two hours came to a small lake with a waterfall at one end. It was a peaceful spot and very pretty with trees all around. \n\nSitting on some rocks by the water we ate lunch and admired our surroundings. Afterwards Becky suggested a swim. Trouble was we didn't have swimsuits and we had no idea if other people would come along.\n\n\"Maybe we just keep our underwear on.\" Becky suggested. \"It'll take a while to dry after though.\"\n\n\"I'm not going in so I'll keep an eye out.\" Offered Michelle.\n\nWe looked around for a private spot to undress.\n\n\"Oh for goodness sake. Just strip and get in. It's not like I haven't seen you both naked before!\" She climbed up onto a large rock and sat down.\n\nWe stripped off and dived in. The water was cold but we swam around splashing each other and having fun.\n\n\"So Michelle's seen you naked before has she?\" Becky said as we stood shoulder deep in front of the waterfall. \"When?\"\n\n\"It just happened, no big deal.\" I shrugged.\n\n\"I thought we had no secrets AJ.\" She protested.\n\n\"Come on, it doesn't really matter babe.\" I reached out to her.\n\n\"If it doesn't matter why won't you tell me?\" She pushed away and looked at me.\n\nI glanced over at Michelle on the other side of the lake. Becky's eyes followed mine.\n\n\"Fine! Don't tell me then.\" She pouted and turned away.\n\n\"Hey, come here.\" I reached out and pulled her to me.\n\nShe struggled lightly in my arms.\n\n\"You're not jealous are you?\" I said in realization.\n\n\"What if I am!\" she retorted.\n\n\"Oh baby ... It's just embarrassing that's all.\"\n\n\"Yeah, well if you want embarrassing. She saw me naked when we went to a salon and I had my pubes waxed. All for you. Maybe I shouldn't have bothered.\" \n\nShe struggled to get out of my grip but I held her tight.\n\n\"Alright ...alright I tell you. But don't you tell Michelle I said anything. It was embarrassing for both of us OK?\"\n\n\"OK!\" she muttered stubbornly and stopped struggling.\n\nI told her about that night and she listened quietly until I finished.\n\n\"Ok, so maybe that was more embarrassing.\" She admitted \"Much more!\" she added light heartedly and turned around to face me. \"Much, much more.\"\n\n\"All right, had your fun now?\" I said.\n\nShe pressed up against me and we hugged.\n\nShe whispered in my ear. \"I'm sorry I got upset ...still friends?\"\n\n\"Let me think about it.\"\n\nBecky pulled back and looked at me. I was smiling. She smiled back, splashed me and took off across the water.\n\nWhen we got out Michelle was gone. I looked around and spotted her in a clearing a short distance away. I called out to let her know we were out. We dried off in the sun and got dressed. \n\nOn the way back Michelle was very quiet. I thought she must be tired from the walk. It was late afternoon when we reached the cabin. I offered to cook supper. After we ate Michelle said she was tired and was going to lie down and read for a while. Becky got a jigsaw out of the hall cupboard and tipped it out over the table. After a frustrating hour we had only managed to get the border done. We both gave up and decided to do more in the morning.\n\nWe tiptoed up the stairs so as not to wake Michelle. When we got into the bedroom the light was on but her bed was empty. We knew she wasn't in the bathroom because the door was open when we passed. Looking around I noticed the door to the balcony was slightly ajar. I walked over and peeked out. Michelle was curled up on an old wooden chair and she was crying. I motioned for Becky to come over and we went out. I knelt down in front of Michelle. Over the years I had learnt from my Mom and sisters you never ask a crying woman 'what's wrong'. Firstly, they may not want to talk about it, and second they may not know ... women sometimes just cry my mother had said. I did what I had been told to do ... I touched Michelle lightly on the shoulder and when she looked up I reached out my arms. She leant forward and I embraced her and she cried and cried. Becky sat down beside us and gently rubbed Michelle's back. My shoulder was soon dripping wet as I just held her tightly. Eventually she started to calm and her breathing returned to normal. She sat back and gave us a weak smile. We held hands for a while in silence until she finally spoke.\n\n\"I didn't think it would be this hard coming back here.\"\n\nShe saw our confused expressions.\n\n\"This is where I came with your Mom and Dad. It was up by the waterfall in that clearing where we told each other how we felt ... I guess everything is coming back ...\" she paused and took a deep breath. \"Sometimes I feel so alone, I miss them so much ... I miss their laughing ... the way they looked at each other ... the way they looked at me ... the touch of skin on skin cuddling up against a warm body.\" She looked up at me \"I'm sorry AJ you probably don't want to hear about this. I'm just feeling sorry for myself.\"\n\n\"It's OK.\" I said softy and squeezed her hand.\n\n\"I just feel like, I'll never experience that again. Falling asleep in the arms of someone who loves me.\"\n\nShe took another deep breath and touched my wet shirt.\n\n\"You must be freezing in that. Come on lets go inside.\"\n\nWe stood and Michelle gave us both a hug. \"I'm so lucky to have you two.\" she whispered.\n\nWhen we got inside Michelle, slipped out to the bathroom. Becky and I looked at on another.\n\n\"Are you thinking what I am?\" she asked biting her bottom lip.\n\n\"I think so, you OK?\" I looked at her for conformation.\n\nBecky nodded.\n\nWe got undressed and hopped into bed.\n\nWhen Michelle returned she was wearing a long silk night shirt. As she went past our bed I reached out and took her hand. She stopped and smiled. I pulled the edge of the sheet back.\n\n\"Join us for a while.\" I looked into her eyes and smiled.\n\nHer eyes widened in surprise \"Oh, AJ, Becky...I can't do that. That's not what I ...\"\n\n\"Just for a cuddle.\" I interrupted.\n\n\"I think we could all do with a cuddle.\" Becky said softly. \"Please.\" She reached out her hand.\n\nMichelle replied softly \"I love you guys, but I don't think ...\"\n\n\"Please, it'll make AJ and I feel better.\" Becky pleaded.",
        "\"Trying to use reverse psychology on me eh?\" she smiled.\n\n\"I really don't want to have to get out of bed and throw you in here ... but!\" I started to sit up.\n\nShe put up her hands in resignation \"All right, just for a while, just for a cuddle ... that would be nice.\"\n\nShe stepped around the bed to Becky's side and pulled the sheet up to get in. She saw we were naked and stopped.\n\n\"Skin against skin.\" Becky said looking up.\n\n\"Turn off the light.\" Michelle said quietly to me.\n\nI reached up behind and switched off the wall light. For a second everything went black then slowly the moon light silhouetted Michelle as she stood by the bed. We heard her sigh and then saw her lift the night shirt over her head and drop it to the floor.\n\n\"Move over Becky.\" She said in resignation.\n\nBecky shuffled over in my direction and let Michelle lie down, then suddenly Becky rocked back in the other direction and rolled on top of Michelle. They were face to face for a second and then Becky gave her a quick kiss on the lips and rolled off on to the far side.\n\n\"You're in the middle!\" she said playfully and shoved Michelle over in the bed.\n\nThe whole thing happened so quickly, and cleanly that I couldn't help laughing.\n\n\"You little minx.\" Michelle said accusingly and she turned toward Becky and started to tickle her.\n\nBecky shrieked and giggled as Michelle attacked her. Finally out of breath she managed to gasp \"Truce, truce!\"\n\nMichelle stopped and Becky immediately rolled back on top of her and started the tickle fight again. This time she had the upper hand as Michelle was pinned beneath her.\n\n\"Help!\" Michelle cried out as she tried to dislodge Becky.\n\nThey were both giggling and thrashing around.\n\n\"AJ, help!\" Michelle cried again.\n\nI reached out and pulled Becky off and she slid down beside me. Michelle turned on her side and attacked Becky's left side and I took the right. The two of us had Becky shrieking and thrashing around again.\n\n\"Had enough little Miss?\" Michelle said laughing.\n\n\"OK, truce, truce!\" Becky managed to say between her giggling fits.\n\nWe all stopped and Becky looked up at me \"No fair.\" She said panting \"You're supposed to protect me.\"\n\n\"You started it.\" I chided her playfully.\n\nWe lay silent for a minute catching our breath.\n\n\"Thank you.\" Michelle said quietly.\n\n\"For what?\" Becky asked.\n\n\"For being here, now with me.\" she explained softly.\n\nBecky turned toward her and they hugged. I cuddled up behind Becky and reached over the two of them and joined the hug.\n\n\"You know where all naked.\" Becky stated the obvious. \"I've never hugged two naked people before ... I think I like it.\"\n\n\"Me too.\" I said.\n\n\"Me three.\" Michelle chimed in.\n\nWe all laughed.\n\nWhen I woke the next morning Becky was cuddled up to me and she was making little noises with her mouth as she slept. Michelle was on Becky's other side and she was awake looking at us.\n\n\"Hey.\" I said smiling and yawning at the same time.\n\n\"Hey yourself.\" she quietly replied.\n\nWe lay there looking at each other. Suddenly Becky rolled over and as she did the sheet covering us slid down. Her head ended up on Michelle's left breast and her hand fell onto the right one as she cuddled up. She was still fast asleep. Michelle raised her hands up and shrugged at her predicament. We both smiled.\n\n\"She's so cute when she's asleep.\" Michelle whispered and started to stroke Becky's hair softly. \"You make a good couple AJ.\"\n\n\"Thanks.\" I replied and rolled onto my side facing them. I gently brushed Becky's hair out of her face and tucked it behind her ear.\n\nMichelle was staring at me.\n\n\"What?\" I said puzzled by her look.\n\n\"You remind me so much of your Dad sometimes.\"\n\nWe smiled at each other. And lay quietly for a while.\n\n\"I'm sorry we haven't been there for you, with the way you've been feeling.\" I said breaking the silence.\n\n\"Hey, I couldn't have made it without you two, you've been there for me in so many ways.\" she said sincerely and her hand reached over and touched my face.\n\nI placed my hand on top of hers. It was a tender and special moment as we looked at each other. Becky abruptly let out a rather loud snort and her head moved slightly placing her mouth on Michelle's nipple. In some form of instinctive reaction Becky started to suckle. Michelle looked at me in shock and then we both laughed. \n\nBecky's eyes opened as Michelle's chest shook from laughter. She looked up with blurry eyes and an innocent look on her face.\n\n\"Morning.\" she said yawning. \"Why are you laughing?\" she asked rubbing her eyes.\n\n\"It's nothing sweetheart.\" replied Michelle still smiling.\n\n\"What?\" Becky questioned again. \"Did I fart or something ... common tell me?\"\n\n\"You were suckling me in your sleep!\"\n\n\"Oh my God ... really! Becky said slightly shocked. Then with a mock innocent but naughty look on her face she added, \"You mean like this?\" Leaning over she placed her mouth over Michelle's breast and sucked the nipple again, only this time she was fully aware of what she was doing.\n\n\"Becky!\" Michelle protested.\n\nUnrelenting Becky continued to suck and nibble on the stiffening nub of skin.\n\nMichelle's hand which initially was trying to push Becky's head away started to stroke the tangle of messy blond hair on top of her. A small guttural moan escaped Michelle's mouth and she closed her eyes.\n\nI was so turned on by what I saw and heard that my cock was immediately at full mast and I started to stroke it.\n\nSuddenly Becky pulled away and announced, \"I gotta pee ... real bad!\" As she moved to get up her attention turned to me. \"There's one for you too AJ.\" She said raising her eyebrows and winking before rushing off to the bathroom, her slim little bum cheekily bouncing as she ran.\n\nI was so horny that I dived right in before Michelle could react. I licked nibbled and sucked gently on the ever-swelling mound of flesh, and soon her moans were louder as her hands pressed my head into her breast.\n\nBecky bounded back into the bed and returned her attention to the still taut and reddened nipple she had vacated.\n\n\"Oh God I need to touch myself\" Michelle exclaimed between gasps.\n\nShe tried to free her arms which were pinned beneath our bodies. It would have meant that one of us would have to stop and move to let her get her arm free ... that wasn't going to happen easily, so I instinctively lowered my own hand across her stomach and onto her pussy. I was amazed at the heat I felt radiating from inside her and she was very wet and aroused. I hesitated briefly not knowing what she wanted.\n\n\"Clit AJ ... hard and fast!\" came the quick answer to my dilemma.\n\nI did as I was told and within a couple of minutes she exploded in an enormous orgasm that threatened to throw us all onto the floor as her whole body bucked and twisted on the bed.\n\n\"Keep going AJ, don't stop!\" Michelle grunted between gasps\n\nNot one to disobey an order from a beautiful woman in the throes of passion, I doubled my effort and to my surprise I was joined by Becky who I could feel had plunged her fingers into the hot wet hole below my hand. Our joint effort was rewarded with another huge orgasm only minutes later ... and was followed by a third in quick succession.\n\n\"Stop, stop!\" She finally pleaded as her body continued to shudder in post orgasmic spasms.\n\nAs she regained control, Becky and I glanced at one another and I could see lust in her eyes.\n\nMichelle had opened her eyes and she recognised the pent-up passion in us. She smiled and managed to gasp out, \"Go for it!\"\n\nWe didn't need to be told twice and seconds later Becky had rolled across the bed and I was inside her pounding away like there was no tomorrow. With young horny lust at play we didn't last very long and as I felt her orgasm start I couldn't hold back, and my cock exploded sending rope after rope of cum deep into her pulsing pussy.\n\nWe collapsed side by side, my cock slowly shrinking inside her as our breathing returned to normal,\n\n\"Fuck!\"\n\nWe both quickly turned to Michelle who was looking at the ceiling and frowning.\n\n\"Fuck ... fuck ... fuck!\" she exclaimed again shaking her head.\n\nBoth Becky and I stared at her in surprise and shock.\n\nMichelle looked at us and saw our reaction.\n\n\"Sorry ... it's just I'm supposed to be the sensible adult in this relationship ... and look at me I'm behaving like ... like ... like a bitch in heat!\" she exclaimed and sighed loudly.\n\n\"It's OK\" I said quietly putting my hand on her shoulder.\n\n\"No AJ, it's not OK. I shouldn't have let this happen, I let my emotions get the better of me and now how the hell am I supposed to carry on being the adult, the one you're both supposed to look up to ..\"\n\n\"And now nothing\" I interrupted. \"If you think this is going to change how we feel about you, or respect you, then you don't know us as well as we thought. We love you Michelle and what just happened may not be normal, but shit let's face it we're still inventing what's normal for us.\"\n\n\"AJ's right, what just happened wasn't probably normal to most people, but it felt right to me. Being with you like this actually feels more normal than anything for us ... doesn't it?\" Becky implored and reached out to Michelle for a reassuring hug.\n\n\"Oh fuck! Maybe it does.\" Michelle sighed in resignation and drew Becky in for a hug. I joined in and wrapped my arms around them both.\n\nWe spent the next couple of hours lying in each other's arms talking about how we felt and what it meant for the future.\n\nThe rest of the week was special. There was a new bond between us that had us smiling a lot. I guess that's because we were really happy. The three of us shared a bed, sometimes all night and sometimes just for a few minutes cuddling. Michelle didn't want her and I to have intercourse, we all agreed that was going too far. But we did repeat what happened before with each of us bringing the other to orgasm through caressing and oral sex. It all seemed quite natural. We didn't start running around naked in front of each other during the day or anything like that, because that wouldn't have been ... normal.\n\nAll too soon our time was up. We planned our next vacation in the car on the way home.\n\nOver the next few months things at home were good. Michelle continued to hop into our bed sometimes and we got into hers sometimes. We'd also talk a lot while relaxing in each other's arms, and our relationship was really close. Michelle confirmed again she didn't want actual sex between the two of us and I knew that was the right thing too.\n\n\"I'm still trying to be the parent role around here ... however warped that might seem at times.\" she'd said. So that's how it remained and we all accepted it as our normal.\n\nI had quizzed Michelle about why she wasn't keen on going out with guys. It wasn't like they weren't hitting on her all the time, but she never reciprocated and would tell them that she was seeing someone. Her explanation to me was she had lost trust in forming a good positive relationship. Then she'd looked at me sincerely. \"I've only ever really been able to trust two men in my life, and they were both Johnson's.\" She'd smiled and added \"I'm OK with that especially since one is still in my life. I'm content AJ\".\n\nStill both Becky and I really wanted her to meet that special someone. We talked about maybe doing a little match making in the future. Who knows! \n\nCHAPTER SIX - HELPING A FRIEND\n\nOne night when I got back from work Becky was sitting on the couch with Sasha. It was obvious that something was up and Sasha had been crying. I knew her Mom was away looking after a sister who had some illness, so my immediate reaction was that she had passed away.\n\nI went into the kitchen to get a drink and Becky joined me.\n\n\"Is it OK with you if Sasha stays here for a bit? She's got problems at home with her stepdad.\"\n\n\"Oh, is that it. I thought it was her Aunt who might have ... you know.\" I shrugged.\n\n\"No, it's ... Well her stepdad is hitting on her and it's getting really uncomfortable at home.\" Becky revealed.\n\n\"You're kidding me right? He's actually hitting on her?\" I was incredulous. \"Has she told her Mom?\"\n\n\"I can't tell Mom, not at the moment.\" Sasha interrupted from the doorway. \"She's already stressed out with my Aunts illness. Mom and Aunt Rachael are twins so it's pretty hard and I just can't give her any more to worry about.\"\n\n\"This isn't the sort of thing you can keep quiet about Sasha. I mean he's your fucking stepdad!\" I replied.\n\n\"I know. But right now I need too. For Mom's sake.\"\n\n\"How far has it gone? I mean he hasn't actually ... you know ... got physical or anything has he?\" \n\n\"Yes and no ... I mean not really. He comes up behind me and puts his hand on my shoulder all the time and says how pretty I look and stuff. He's looking over my shoulder at my boobs. It's freaking me out.\"\n\n\"Come on, he's done more than that.\" Becky added \"He's come into the bathroom twice and looked at her in the shower ... he even felt her breast. Say's he didn't think she was in there and he was reaching for the tap.\"\n\n\"Fuck Sasha!\" I exclaimed \"That's pretty bad, you could get the cops involved.\"\n\n\"No! I can't, not now! Please AJ.\" She was getting upset again.\n\n\"OK, OK ... look you can stay here as long as you want.\" I said sincerely.\n\nSasha sighed and calmed \"Thanks ... but what about Michelle, she might ...\"\n\n\"Like I said before Michelle will be fine with it, trust me.\" Becky interrupted putting a reassuring hand on Sasha's back.\n\nI left them in the kitchen and headed for a shower. I had just finished when I heard Becky enter the bathroom. She opened the shower door and handed me a towel.\n\n\"Where's Sasha?\" I queried.\n\n\"She's calling her Mom to tell her she's staying here for a while. She's gonna say that we have a project to do together. You cool with her being here?\" She asked.\n\n\"It's fine with me as long as you can keep your hands of this body for a while.\" I smiled and stood facing her, presenting my naked body for her perusal.\n\n\"I think you'll have more problems keeping away from this.\" she wiggled her hips pulled up her blouse and lifted her bra.\n\nI reached out to grab her but she pulled away giggling and reset her clothes. I gave a mock show of disappointment.\n\n\"We will have to be careful though.\" I said seriously.\n\n\"I know. We'll work something out.\" She sat on the toilet seat. \"I couldn't not ask her to stay, she's got nowhere else to go. I'm her best friend.\"\n\n\"Hey its fine babe.\" I said reassuringly \"You did the right thing.\"\n\nBecky smiled, stood and gave me a kiss. \"I love you.\" She slapped my bum playfully and quickly left the room before I could retaliate.\n\nMichelle was home when I came back out and the three of them were talking in the living room. I offered to go get takeaway Chinese for supper and left them to it.\n\nBecky had a queen size bed so Sasha bunked down with her. But both her and my bedrooms shared a bathroom, jack and jill style. So I had to remember to shut my door. In the morning Michelle came in for a hug and a chat. We discussed whether to gently push Sasha into telling someone in authority about her stepdad, but in the end we decided to leave it for now.\n\nOn the second night Sasha stayed we had trouble. I had just come up from the gym and had collapsed on the living room floor. The last part of my workout involved five quick sprints up and down the six flights of stairs.\n\nThe girls were in their room and Michelle was watching TV while telling me I stank and needed to have a shower. The doorbell rang. We both looked at each other, the doorbell doesn't ring very often as we are on the top floor and the concierge downstairs usually buzzes us if we have visitors. We quickly played 'rock, paper, and scissors' to see who would get up. I covered her rock with my paper so she lucked out and headed for the door. \n\nWhen Michelle opened it there was a loud voice.\n\n\"Where is my daughter?\"\n\nI heard Michelle trying to reply but the voice got louder and I realised that whomever it was they were now inside.\n\n\"Where the fuck is my daughter, she needs to get her arse back home, before she upsets her mother!\"\n\nI quickly got up and moved to the entry hall. Michelle was standing in front of a middle aged man in a suit, he was about 5 foot 9 inches and probably weighed about 240 lbs, a fare bit of that weight being a beer gut. The guy I assumed was Bill Graham, Sasha's stepdad, he was in the process of trying to get around Michelle and into the hallway. He put his hand on Michelle's shoulder and tried to push her away. She fell back into the wall as he shoved her. I came up from the side and grabbed his outstretched arm and twisted it round throwing him of balance I then shoved him up against the wall and stood in front of him. \n\n\"You touch her again and you'll wake up in hospital!\" I spat out at him. I was pretty worked up and I shoved him back into the wall again to reinforce what I'd said.\n\n\"Get your fucking hands off me!\" he said angrily trying to break away.\n\nI grabbed him by the collar and faced him up. I had my other hand in a fist and was ready to swing away.\n\n\"Mr Graham, just calm down!\" Michelle had recovered and put a hand on my fist to stop me. \"AJ, back off please, let him go!\"\n\nI put my face inches from his \"You stay right where you are or I'll fucking...\"\n\n\"AJ! Please.\" Michelle interrupted.\n\nI let go of his collar and took a couple of steps back, my eyes not leaving his.\n\n\"Mr Graham, I want you to leave right now or I will call the police.\" Michelle said sternly.\n\n\"I'm not going anywhere without my daughter.\" he said trying to stare me down.\n\n\"Just go away Bill, please!\" Sasha voiced from the hallway behind us.\n\nBills eyes left mine and he looked past me to Sasha. He went to step forward but I put my hand forcefully on his cheat. \n\n\"One more step and you are going down!\" I said between gritted teeth.\n\nHe tried to push against my hand but I held firm and he must have realised I was stronger than I looked. His eyes meet mine again and I could see a slight fear in his. He took a step back and the fight had gone out of him for the moment.\n\n\"Sasha get your things you need come with me.\" he said looking across at her.\n\n\"No, I'm staying here, just go away.\" Sasha countered, her voice sounding firm but her breathing was loud.\n\n\"You heard her Mr Graham, Sasha is fine here and we are happy for her to stay\" Michelle said calmly.\n\n\"What are you trying to do to your mother, she's got enough on her plate without you taking off and making her worry more ... just get your things now!\" He stared at Sasha threateningly.\n\n\"Mom knows I'm here ... But don't worry I haven't told her you've been hitting on me!\" she replied sarcastically.\n\n\"You fucking little bitch, I haven't done anything to do ... get down to the car!\" His anger rising again at her accusation in front of us all.\n\n\"I'm sure the police would be happy to discuss your actions, let me get the phone and call them!\" Michelle retorted venomously.\n\n\"Get out Bill ... just get out! Sasha yelled.\n\nOnce again he tried to step past and he put his hand on Michelle and pushed. She fell backwards into Sasha and Becky and they grabbed her before she hit the floor. That was it for me. I shoved Bill hard in the chest and he stumbled backwards, I shoved him again and he backed up against the open door. A third push had him out the door where he fell to the floor. I looked down at him and there was definitely fear in his eyes now. I pushed the elevator call button and the doors opened. It was still on our floor. Grabbing him again by the collar I hauled him into the elevator.\n\nMichelle gasped from the apartment door. \"AJ! Don't do anything that...\"\n\n\"I'm just showing Mr Graham out.\" I interjected looking up at her.\n\nI pushed the ground floor button and the doors closed. I stood over him all the way down. He went to get up and speak but I looked down at him threating. \"Stay where you are and shut up!\"",
        "The doors opened in the lobby and I dragged him to his feet and pushed him out. Charlie the concierge was just coming out of the back room with a cup of coffee and a sandwich. He froze and looked at us.\n\n\"If this piece of shit tries to come back in here call the police!\" I barked out at Charlie as I pushed Bill towards the front door.\n\n\"You go near Sasha again and I will personally take you to the police and have you charged for sexually assaulting your daughter!\" I snapped at Bill. \"That's after I kick your fucking balls out through your mouth!\" I added harshly.\n\nWith a final push I shoved him outside where he fell into a handrail and stumbled onto the sidewalk. I watched him limp away to his car on the curb, fumble with his keys, get in and drive away.\n\nCharlie hadn't moved and was watching all this frozen in amazement.\n\n\"What the hell's going on AJ?\" He finally said looking at me bewildered. \"Who was he ... how did he get in?\"\n\n\"You're the fucking doorman Charlie! You tell me how he got in?\" I shot back.\n\n\"Um ... I must have been getting my supper... who was he anyway?\" Charlie said on the back foot due to my accusation.\n\n\"You've seen Sasha, Becky's friend?\"\n\nHe nodded \"Yeah, the black girl with the long hair. I meet her yesterday.\"\n\n\"That was her father.\"\n\n\"He's white!\" Charlie stated the obvious.\n\n\"He's her step-father.\" I said by way of explanation. \"He's been abusing her and I don't want him back here, OK?\"\n\n\"Yeah, of course. Sorry he got up there, he didn't ring the bell.\" Charlie said apologetically.\n\n\"No worries, man's got to eat and drink.\" I said calming down and smiled looking at the huge sandwich he was still holding\n\n\"My wife's Samoan and they like there men big.\" He said with a wry grin.\n\nThe counter phone rang and Charlie put his coffee down and picked it up. \"Concierge.\" He listened for a few seconds and then replied \"Yeah he's here, and yeah the guy still had his teeth when he left ... O.K ... He's on his way back up now.\" Obviously talking to Michelle he looked up and smiled as I headed for the elevator.\n\nWe didn't see Sasha's stepdad again and he didn't try to contact her over the next week, so all good. \n\nBecky and I managed to get the odd quickie in when we showered or pretended to shower, so things weren't too bad in that department. I missed her in bed at night though. Our times with Michelle grew fewer as well but in some ways that seemed to be a natural progression in our physical relationship. We all accepted that the sex was not a need but a very nice occasional date. \n\nMeanwhile Sasha certainly became friendlier and I noticed her looking at me differently. I just put it down to her being appreciative.\n\nIt was about two weeks later when I got a late night visit from Becky. She snuggled up against me and leant in for a kiss. Well, one thing lead to another and I reached second base, then third and soon I had scored a home run.\n\n\"Where's Sasha, asleep?\" I asked panting trying to get by breath back as we lay on our backs sweating.\n\n\"No she's reading in bed.\" Becky replied also with labored breathing.\n\n\"What! Com'on Becky you've been in here for over half an hour, she's going to wonder where you've been.\" I rolled onto my side facing her.\n\nBecky rolled to face me \"She knows exactly where I am.\" she replied playfully.\n\n\"What have you done? Or should I say what have you said?\" I stared at her and mock frowned.\n\n\"She asked and so I told her. She'd pretty much worked it out anyway. Evidently noise travels under the bathroom door ... and me squealing in the shower kind of let the cat out of the bag.\" she smiled and hugged me. \"So no more quickies.\"\n\n\"I hope you told her we are not blood relations ... and that I've got a huge penis.\" I added joking and tickling her.\n\n\"That would be yes and yes.\" she replied giggling.\n\n\"I was joking about the penis.\"\n\n\"I wasn't,\" she replied and gave him a little squeeze.\n\n\"You're not serious are you?\" I asked in slight disbelief. \"Come on, you haven't been talking about my bits and pieces have you?\"\n\n\"You bet! Once we girls start talking we want to know everything ... size, shape, and taste ... the whole enchilada.\" She giggled again.\n\nI groaned.\n\n\"I told her about our first time and how amazing it was, she's pretty impressed with you Mr.\"\n\n\"Well I suppose it'll make things easier around here.\" I sighed in acceptance. \"However don't reveal all my secrets, OK? ... Like my need to lick you all over.\" I pounced on her and started licking her tummy and breasts.\n\n\"Oh, gross!\" Becky tried to fight me off but ended up in a fit of giggles as I licked up under her chin. My bits and pieces were hard again so we used up another half hour!\n\nLife pretty well got back to normal in the house. I'd drop the girls off at college each morning and then head into work. Having someone else in the house actually helped us in the healing process, as we weren't as self-focused. We'd sit around at night and talk or watch movies with Michelle. Sasha was fitting in well and had told her Mom that she would be staying at our place for longer. She'd said Bill was out most evenings and as she liked having a friend her own age around. We put a roll away bed in Becky's room, but it wasn't very comfortable so most of the time they slept in the big bed together.\n\nIt got to a point where we were happy to have Sasha come into my room on Sunday morning. She'd sit on the bed and we'd play card games. Michelle would sometimes join us, no sex involved! Sunday brunch had also become a bit of a family tradition over the last year and Sasha was rostered on to cook once a month. We'd eat on the roof terrace and spend the rest of the day lounging around in the hot tub or at the pool.\n\nAbout three months went by before Sasha's Mom, Devon, came back for a visit. Her sister was still sick but doing a lot better. Devon, by the way, was drop dead gorgeous, and looked fantastic for someone in their late 30's. She must have been about 5 foot 6 and she had curves in all the right places. It was obvious where Sasha got her good looks from.\n\nMichelle took some time and explained to Devon why Sasha was with us. She broke down and cried, admitting to thinking something must have happened to drive Sasha out of home. She just didn't have the strength to deal with it while her sister was sick. Devon also confessed that her own relationship with Bill hadn't been good for a while and they had virtually decided to end things before she'd gone away anyway. Sasha hadn't been told as they didn't want to disrupt her school year. Devon was grateful that we'd been there for her little girl and was full of thanks that she'd had a safe place to stay. We assured her it was fine for Sasha to remain with us until the college year was over.\n\nDevon decided to clear all their stuff out of their old house and she would file for divorce. One afternoon we went over boxed up the rest of Sasha's gear and bought it over to our place. I also took a day off and helped Devon move all her personal stuff into storage. She stayed with us for the next week. The living arrangements were a bit tight but we managed with Devon and Sasha staying in Becky's room while Becky bunked in with Michelle.\n\nA meeting was organized with Ron Jacobs our lawyer and divorce papers were drawn up. Despite the unsettling circumstances of what was going on we had a good week together. Michelle and Devon spent a bit of time together while the girls were at school and they became friends enjoying each other's company.\n\nBy now the girls had started their last semester at community college and they spent more time studying in the evenings. We didn't go out much except to the movies on weekends and the weather still wasn't warm enough to go to the beach. My relationship with Becky was going great and I had never been happier. Feeling the loss of Mom, Dad and my sisters didn't go away, and I expected it never would, but when I did think of them it was remembering the good times. It was the same for Becky and Michelle and we would often laugh when we talked about memories over dinner. Sasha opened up about her Dad, who had died 10 years ago in a boating accident, and shared stories with us. Time was slowly healing the wounds for us all.\n\nCHAPTER SEVEN - MICHELLE'S SECRET\n\nTwice over the following month Michelle went away for weekends. It was great to see her getting out with friends and all of us noticed a change in her. We were used to seeing her consumed with work during the week and even working at home in the weekends. But now she seemed to have a change of focus and was more relaxed. We knew something was up, but when we questioned her about it her answers were a bit evasive, which got us a bit worried. Don't get me wrong, it was good to see her happy, but she'd never really kept secrets from us before and were naturally inquisitive. We even tried to tickle it out of her one night in bed but had to stop in case the noise traveled across the apartment to Sasha's room. Finally we decided she'd tell us when she was ready, so we mutually agreed to stop with the third degree and to just let her enjoy herself.\n\nOne night a few weeks later Michelle sat us down and said she had something to share.\n\n\"I'm seeing someone, and I think it's getting serious.\" She announced.\n\nBefore we could bombard her with questions she put her hand up to stop us.\n\n\"I can't tell you anymore at the moment O.K. We both want to get to know each other better and we have to sort through some issues, so we're going away for a week vacation, on a short cruise. We need to spend some time together to see if it's what we both want. So no questions right now O.K.\" She implored and gave us a stern look.\n\n\"All we want is for you to be happy.\" I said quietly as I stood up and embraced her. \"I hope things work out, just remember we love you and we're there for you no matter what.\"\n\nMichelle broke our embrace and looked over at the girls. \"Group hug!\" she said holding her arms out.\n\nThat night Becky and Sasha sat on my bed as we talked about this new development. We were all happy for Michelle and were content not to ask her for more info but that didn't stop us from trying to guess who her special person was. The girls were discussing various men who they had seen Michelle with, when I made a comment that shocked them.\n\n\"It won't be a man it'll be a woman.\" \n\n\"What! Why do you think that?\" Sasha looked at me stunned.\n\nI could see Becky thinking and she nodded her head in agreement with me. \"You're right. Of course it'll be a women. With what Michelle's been though before, and the things she's told us, it has to be. I don't think she could ever really have a relationship with a man again.\"\n\n\"A woman! Are you sure?\" Sasha asked. I could tell she was thinking about something and when we both nodded she gasped and looked at us wide eyed.\n\n\"Oh my God!\" she exclaimed.\n\n\"What's wrong?\" Becky asked confused.\n\n\"It's my Mom!\" she blurted out.\n\n\"What!\" Becky and I retorted together.\n\n\"Your Mom!\" Becky added incredulously.\n\n\"Mom rang me this afternoon and said she was going away for a week. I didn't put two and two together until now. My God, Mom and Michelle ...\" She became lost for words and just stared at us.\n\n\"You can't be sure, just because they are both going away, it doesn't mean ...\"\n\n\"Mom asked me about sea-sick pills, I took them last year when I went on a weekend sailing trip with Ashley and her family. It's a bit too much of a co-incidence that they are both going on a cruise don't you think?\"\n\n\"They did get on well when Devon stayed, and I remember they did talk about going to a spa sometime. I wonder if that's who Michelle's been with on her weekends away.\" Becky said adding fuel to the fire of speculation.\n\n\"We can't really be sure.\" I interjected \"But if it was your Mom how would you feel about that?\" I added looking at Sasha.\n\n\"I don't know ... I guess it would be OK ... but I didn't know Mom was into other women, as far as I know she's just been with Dad and Bill. But fuck, I suppose if she was going to be with another girl I'd be happy if it was Michelle ...it's just a shock that's all.\"\n\n\"That's if it is the two of them, which it may not be. We don't want to jump to conclusions.\" I cautioned.\n\n\"Do I ask Mom?\" Sasha said looking at us for an answer.\n\n\"Maybe we just wait until they are ready to tell us. Remember that's what the trip is for according to Michelle, to see if they have the same feelings for each other. I think we just wait. What do you think?\" I looked at Becky.\n\n\"Yeah, I think so too. Let's give them some time.\" Becky agreed.\n\nWe both looked at Sasha.\n\n\"O.K. we wait. But my Mom and Michelle in bed together ... doing ... you know!\" Sasha shrugged and then looking at us she giggled.\n\nThe following Friday I drove Michelle up to Harbor Cove where the cruise ship was docked. On the way we chatted but I could tell she was really nervous about the following week.\n\n\"Are you OK?\" I asked, \"Tell me if you want me to turn around and head for the hills.\" I smiled as I pulled into a parking space at the dock.\n\n\"Ha, thanks for the offer but I'm fine.\" She grinned back. \"There's just a lot to think about in where this might head.\"\n\n\"Hey, if you're worried about Sasha you don't have to be.\"\n\nMichelle looked over at me. \"And what makes you think I'm worried about Sasha?\"\n\nI didn't reply right away.\n\n\"AJ, look at me. What do you know?\"\n\nI looked over. \"It's Devon isn't it?\"\n\n\"Why would you say that?\" she said defensively.\n\n\"We weren't a 100% sure, it was just a possibility. It is her isn't it?\"\n\nMichelle sighed \"Yes it's Devon.\" She quietly replied. \"So you can see why there's more to think about than just us.\"\n\n\"It's OK ... really it is. To see you happy is all we want.\" I said sincerely.\n\n\"I really like her AJ, and I really want it to work ... but not if it affects my relationship with you and Becky, and the same goes for Devon and Sasha.\"\n\n\"Becky and I are cool with it and so is Sasha.\"\n\n\"Are you sure?\"\n\n\"Yeah. I'm not saying that it wasn't a shock when we thought about it, but the more we talked the more we liked the idea, honestly we are all OK with it.\"\n\n\"Thanks AJ, hearing you say that means a lot.\" Michelle leant over and kissed me on the cheek.\n\n\"More love than that.\" I said beckoning her in for a hug.\n\nShe smiled and we hugged for quite a long time. I could almost feel the relief in Michelle's embrace. Finally we parted and smiled at each other.\n\n\"I think you need to come inside with me, how about carrying my bags?\" she asked.\n\nWe entered the terminal and immediately I spotted Devon sitting with her back to us at a table in the small caf\u00e9. Michelle walked over and they greeted one another with a hug and a kiss. I waited until they sat before joining them at the table. Devon looked quite shocked to see me.\n\n\"AJ ... What are you doing here?\"\n\n\"Nice to see you too.\" I said sitting down.\n\n\"I'm sorry ... it's nice to see you, just a little unexpected that's all.\" she glanced at Michelle raising her eyebrows enquiringly.\n\n\"They guessed.\" Michelle answered.\n\n\"Sasha knows!\" Devon sounded concerned.\n\n\"She knows it's a possibility, but not for sure.\"\n\n\"Oh, I knew this would get complicated. What's she going to think ...?\"\n\n\"I know what she thinks.\" I interrupted \"I believe her words were 'Shit, I didn't know Mom was into other women but I suppose if she was going to be with another girl I'd be happy if it was Michelle.\"\n\n\"She really said that, those were her exact words? Please don't lie to me AJ!\" Devon looked at me nervously.\n\n\"Well, no ... she actually said fuck instead of shit, but I thought it was best not to let you know she swears.\" I said smiling. \"She's OK with if it's you two, she really loves you and Michelle and wants you to be happy. We all do.\"\n\n\"I don't know what to do now, do I call her? Do we go?\" Devon looked at us confused.\n\n\"You go on holiday and you enjoy yourself and what happens, is up to you two.\" I said putting my hand on Devon's shoulder.\n\n\"If you want I won't confirm anything with the girls. You can talk to them when you get back. But what you need to believe is Sasha is going to be OK about it, no matter what.\"\n\nMichelle took Devon's hand \"I'll go along with whatever you want to do. But it would be a shame to not use these tickets.\" She said holding them up and smiling.\n\n\"OK, we go. But I should call Sasha and let her know. It'll make me feel better.\" She confessed.\n\n\"I'll give Becky a call too.\" Michelle added.\n\n\"I'll leave you to it.\" I said standing. I bent down and kissed Michelle on the cheek and then followed suit with Devon. \"You both deserve to be happy.\"\n\nI walked away smiling.\n\nWhen I arrived home both girls started talking at once about their respective phone calls. I slowed them down and they revealed what had been said on the phone. I told them about what happened from my perspective. We all concluded that we were still surprised but hoped things would work out for them. \n\nCHAPTER EIGHT - SASHA MAKES THREE\n\nLater that night Sasha, Becky and I were sitting on my bed, they were studying text-books and I was reading a magazine. Sasha closed her book loudly and sighed.\n\n\"Do you realize my Mom and Michelle could be doing naughty things to each other right now ... it's so bizarre.\"\n\n\"I wonder how naughty they'll get.\" Becky added giggling.\n\n\"Let's not go there, I don't want to be thinking visual pictures of them.\" I said with a smile.\n\n\"Why? Is it a turn on for you baby?\" Becky mocked and patted my crotch.\n\n\"Becky! It's my Mom you're talking about!\" Sasha punched her gently on the arm.\n\n\"It's the whole girl on girl thing that turns him on ... it's a male thing they all like it. Am I right AJ?\" Becky continued to joke.\n\n\"I don't know, maybe you and Sash should get it on and I tell you if I like it.\" I joked back.\n\n\"Maybe we will!\" Becky countered smugly.\n\n\"Is that a dare?\" I said staring at her. \"Go on then I'm waiting.\" I baited.\n\n\"You wish baby.\" she smiled and giggled.\n\n\"Hello, I'm right here you know, listening to all this!\" Sasha said waving her hands at us.\n\n\"We've kissed before you know.\" Becky said still staring at me and ignoring Sasha.\n\n\"Becky!\" Sasha shoved her with both hands.\n\n\"You liked it!\" Becky said raising her eye eyebrows and looking at Sasha.\n\nSasha blushed and glanced quickly at me before burying her head in her hands.\n\n\"I thought we had no secrets.\" I said light heartedly trying to sound calm, while my mind raced off thinking about what Becky had just said. My cock found the whole thing quite appealing as well and was growing quickly. I grabbed a pillow and took a light swing at Becky before putting it in my lap to cover my bulge.\n\n\"It was just kissing and hugging ... and well maybe a little bit of touching.\"\n\n\"Becky!\" Sasha cried out and grabbed the pillow off my lap and took a big swing, hitting Becky in the head. \"How could you!\" she looked upset and started to get off the bed.\n\nBecky new she'd gone too far and grabbed Sasha hand to stop her leaving. \"I'm sorry Sash, I'm sorry I shouldn't have said that.\" she said sincerely.\n\n\"You can be a real...\"Sasha started.\n\n\"Bitch!\" Becky said interrupting \"I know, I am sorry ... forgive me?\"\n\nSasha sighed \"You're forgiven ... and you need to forget.\" She added looking at me over Becky's shoulder. She then happened to glance down and saw the bulge in my shorts.\n\n\"AJ! Are you turned on that much just talking about it?\" she said in disbelief.\n\n\"He's got a mind of his own.\" I said with a half-smile.\n\nBecky turned around and looked at me too. They both giggled.\n\nSasha was still staring at my pants when she said in a quiet voice. \"How big is he?\"\n\n\"What?\" I replied a bit shocked at her question.\n\n\"How big is it?\" she said still looking down.\n",
        "\"Ah, well I suppose he's kind of average.\" I replied giving Becky a 'what's going on' look.\n\nThere was a brief silence before Sasha looked up. \"Sorry, I didn't mean to ...\" She said quietly blushing. \"I should just go to bed.\"\n\nBecky put her arm around Sasha and looked at me. \"Sasha hasn't been with anyone before.\"\n\n\"Oh ... what, you mean never?\" I said in disbelief. \"But you've had boyfriends though. I just assumed that you, had done stuff. Didn't you go out with Jarod Brown? He gave the impression that you two had ...you know ... gone all the way.\"\n\n\"Well we didn't!\" Sasha said quickly.\n\n\"He said that to get back at Sasha because she said no to him. Jarod Brown is a fucking jerk just like all the other guys are at high school\". Becky said venomously.\n\n\"I know I have a reputation but none of its true. You go out with a guy a couple of times and the next thing you know you're supposed to have gone all the way. You can't say you didn't because then you get put in the bitch tease category, so you go along with it. As soon as you stop seeing him you go into the slut category. You can't win either way.\" Sasha explained.\n\n\"Shit, I am so glad I didn't go through that.\" Becky said.\n\n\"Yeah, you just didn't date at all, then you end up with the perfect guy.\" Sasha said frustrated.\n\n\"The perfect guy eh!\" I said and smiled.\n\nSasha blushed again.\n\n\"Don't let it go to your head.\" Becky chided messing my hair with her hand.\n\n\"I guess I want what Becky got. The perfect night to remember.\" Sasha explained and shrugged.\n\n\"You'll find someone Sash.\" I said.\n\n\"What about you?\" She said quietly and glanced up at me.\n\nI wasn't sure what to say and looked at Becky for help.\n\n\"We have talked about it.\" Becky stated.\n\n\"What you mean, no we haven't.\" I replied looking at her in disbelief.\n\n\"I meant Sasha and I have talked about it.\"\n\nI looked at them both and waited for them to explain.\n\n\"What do you think we talked when we made out?\" Becky grinned wickedly. \"You're not angry with me are you baby?\" she stroked the bulge in my pants playfully.\n\nI pulled her hand off and sat back against the bedhead. \"Oh no you don't. I'm not that easy. Explain yourselves ladies!\" I tried to look stern but don't think I pulled it off.\n\nThey looked at each other.\n\n\"You started it!\" Becky light heartedly accused Sasha.\n\n\"How do you figure that?\" she replied.\n\n\"You listened to us doing it and got all randy.\" Becky looked at me and added. \"Sasha here has been getting off listening to us at the bathroom door.\"\n\n\"Becky!\" Sasha blushed. She looked up at me embarrassed.\n\n\"I guess I just want to experience what Becky has with you ... she told me about your first time ... and then I heard you guys at night. You're not exactly quiet.\" Sasha said looking at Becky. \"Anyway I guess I'm jealous of what you two have ... I don't want to be but I am ... I was even thinking of moving in with Ashley rather than getting all upset about it. I didn't want anything to affect our friendship ... I told Becky how I was feeling ... and well one thing lead to another and we ...\"\n\nShe stopped and looked at Becky.\n\n\"We made out, and it was great.\" Becky took Sasha's hand and gave it a reassuring squeeze. Then she looked at me and took my hand. \"I was going to tell you about it, but I didn't know how you'd react.\"\n\nI squeezed her hand and smiled. \"Its fine baby, just make sure we talk, no secrets eh.\"\n\n\"OK ... well then I suppose I should confirm that we did talk about something else as well.\" She said tentatively.\n\nBecky took my hand and placed it in Sasha's. Then took my other hand in hers. We were holding hands in a circle. We sat in silence for a while looking at each other. We were all tense.\n\n\"Well?\" Becky finally said quietly looking at me. \"Every guys dream.\"\n\n\"Are you sure about this?\" I looked her in the eye.\n\nHer response was to lean forward and kiss me, then leant over to kiss Sasha. She then sat back and smiled. I smiled back at her and leant forward and kissed Sasha. \n\nThe next ten minutes was a blur as we passionately sucked, licked, and probed each other mouths with our tongues. When we finally broke away our breathing was heavy and labored. Taking both girls by the hand I gently pulled them up off the bed. We stood facing each other and I slowly began to undo the buttons on Sasha's blouse. Becky followed my lead and pulled her T shirt off and undid my shirt buttons. Sasha stood still as I lifted her blouse off. She had a light blue bra on and Becky reached behind and unclipped the hook. As the bra came away Sasha covered her breasts with her hands. She looked at us and smiled nervously.\n\n\"You're beautiful Sasha.\" I said quietly taking her hands away to admire her body.\n\nHer breasts were slightly larger than Becky's, her areola's and nipples were a copper brown color and looked amazing. My hands slowly caressed down her neck and shoulders to her breasts. As I brushed across her nipples they grew stiff before my eyes. Sasha gasped and her eyes closed. I drew her closer and felt her relax in my arms and I kissed her. She kissed me back her tongue twirling with mine. Becky removed Sasha's skirt and then removed the rest of her own clothes. I slowly maneuvered both girls back to the bed and we lay down... I kissed down Sasha's neck and onto her breasts, gently sucking on her nipples, then continued to move down between her legs. I pulled her panties down and looked at her pussy. Her dark brown lips were wet and glistening with arousal and her small clit was exposed and waiting. There was a dark patch of black hair above her pussy, the rest was shaved clean. I glanced up her body and saw Becky smiling back at me as she laid beside Sasha, fondling her breasts.\n\n\"You are going to really like this.\" she whispered in Sasha's ear as I lowered my head.\n\nTen minutes later Sasha was writhing and bucking wildly as I gave her a first oral orgasm. She definitely wasn't the quiet type and was very vocal when cumming.\n\n\"Whoa, and you thought I was noisy!\" Becky laughed as she smothered Sasha's mouth with her kisses.\n\nAs Sasha recovered her breath I moved over and took hold of Becky's legs, spreading them and lowering my head to her wet pussy lips. I still had the taste of Sasha on my tongue and as I licked up Becky's slit I compared the two. They were slightly different, Sasha having a more musky smell and taste. I was rock hard at the thought of being able to compare pussies, and I could feel pre cum dripping out of my cock, I thought I might even cum without being touched as he throbbed away against my underwear. Thank goodness it didn't take long for Becky to explode in orgasm, she was so turned on already. Her juices were leaking down towards her butt and I was about to lap them up when to my surprise Sasha's face appeared next to mine. I moved slightly back and looked at her, she was unsure of what to do so I placed my hand gently on the back of her head and guided her mouth into Becky's pussy.\n\nWatching Sasha's tongue licking up and down, I could tell I was going to cum if I didn't do something. Grabbing the end of my cock with my fingers I squeezed hard while crawling back onto the bed. Becky was panting hard and her eyes were shut as the last shutters of her climax passed through her body. I lay still on my back eyes shut until I felt my own potential climax subside. When I had regained control I looked up and both Becky and Sasha were staring back at me.\n\n\"Smart move baby.\" Becky said grinning. \"We're going to need him nice and hard for a little longer yet.\" she added moving down my body and removing my underwear. I then felt her tongue lick the head of my cock.\n\n\"Better go slow then.\" I replied as I felt my cock stiffen again.\n\nSasha was still staring at me, her face was wet from Becky's cum. As I reached up to get a kiss she suddenly disappeared, as Becky pulled her down the bed to toward my crotch. My disappointment was short lived as the next thing I felt was two tongues on my cock. They licked and sucked for a while and I heard Becky quietly explaining what I liked. There was actually a lot I liked and Becky gave Sasha a good lesson ... so good in fact I felt cum rising in my shaft.\n\n\"I'm gonna cum!\" I blurted out as my legs stiffened and my breathing became heavy.\n\n\"Whoa, baby!\" Becky cried out as my cock exploded. I felt at least seven streams of cum shoot out before the rest slid down my shaft.\n\n\"Gosh, is there always that much?\" Sasha queried in surprise.\n\n\"That's the most ever!\" Becky said excitedly. \"Come on, we're on clean up.\" She added and bent down to lick the cum from my stomach.\n\n\"You swallow it!\" Sasha exclaimed \"Doesn't it taste funny?\"\n\n\"Don't knock it till you've tried it.\" Becky replied as she licked her lips.\n\nSasha lent down and gingerly stuck out her tongue and licked up a glob off my cock.\n\n\"You're right it's not that bad.\" she said returning and licking up some more.\n\nAfter my clean up the girls scooted back up the bed and cuddled into me.\n\n\"We might have to wait a few minutes before he's ready again.\" Becky said, \"But not too long I hope.\" she grinned and started to stoke my cock gently.\n\nIt didn't take long for me to get hard again. Becky made sure I was well lubed up by sucking me for a couple of minutes then she asked Sasha if she was ready to go all the way. Sasha looked nervous as she sat beside me.\n\n\"It's up to you Sash.\" I said softly. \"But I would be very happy to make love to you if that's what you want.\"\n\nShe nodded and she whispered in reply \"That's what I want, not just to fuck, but to be made love to.\"\n\nI smiled and sat up. Her long black hair was covering part of her face and I tenderly brushed it behind her ear and stared into her beautiful emerald green eyes. She looked so cute and vulnerable sitting there. My hand caressed her check and I kissed her lightly on the lips, I knew that this was going to be special for her and I also knew it was going to be special for me ... as I suddenly realized how much I really cared for her.\n\nSo as Becky watched I slowly made love to her best friend, it was both tender and passionate as our bodies reacted to each other's touch, finally reaching a peak as we both climaxed together.\n\nAs we lay in each other's arms panting for breath, I saw Becky quietly crying as she looked at us. I reached out to her, my first thought being she regretted what had just happened.\n\n\"Babe are you OK?\" I whispered concerned.\n\nSeeing my look she smiled through the tears and took my hand. \"That was the most beautiful thing I've ever seen ...it was so beautiful baby ... I love you so much.\"\n\n\"I love you too.\" I said with relief and gently pulled her down beside me. Our lips meet in a tender kiss as I wrapped my arm around her and held her tight.\n\nThe three of us lay together in silence just enjoying the closeness. The girl's heads were on my chest facing each other they were holding hands with their fingers entwined. I kissed them on the top of their heads.\n\n\"I love you two so much.\" I said and knew that I really meant it.\n\nSasha glanced up at me. \"You love me?\" Her eyes welled up with tears.\n\n\"Of course he does, we both do.\" Becky replied for me. She looked up at me and smiled then leant over and kissed Sasha. \"I hope they are happy tears?\" she added with a smile.\n\nSasha smiled weakly and nodded. Eventually we all drifted off to sleep that way in each other's arms.\n\nThe following morning I woke and managed to slip out of bed without waking the girls, and I headed for the shower. When I returned they were still asleep but had somehow rolled together. There were black and white naked limbs and messy hair everywhere, it was such a beautiful site. It looked almost like a posed shot for a photographer. I quickly grabbed my camera from the desk and took a couple of pics to capture how lucky I was ... not that I really needed a picture to remind me.\n\nThe next few days were spent more in bed than out. Both Becky and Sasha seemed to have insatiable appetites for all things sexual. On Monday morning I could hardly walk at work and Bill asked if I wanted the day off, he thought I'd pulled a muscle or something and told me to go home to bed. I declined his offer as I was sure to get worse, not better in bed! \n\nAt the end of the week we piled into the Mercedes and drove to Harbor Cove to pick up Devon and Michelle. As the boat docked we waited on the wharf anxious to know what they had decided. When we finally saw them cross the gangplank it was obvious where their relationship stood. They were holding hands and both had huge smiles on their faces. On the trip back I don't think I got a word into the conversation as the four of them talked non-stop the whole way home. The only pause in the chatter came when Sasha told her Mom that we had made love. That little moment of silence seemed like a lifetime to me. Finally Devon spoke.\n\n\"I hope it was all you wanted it to be sweetheart.\" she said looking at Sasha.\n\n\"It was better I could have imagined.\" Sasha replied passionately.\n\n\"What about you Becky? How do you feel about it?\" Devon asked with concern.\n\n\"I'm OK. It was special that Sash could experience what I did the first time. I'm happy to share my beautiful man.\" She put her hand on my cheek tenderly and smiled.\n\n\"AJ, what about you? I know most guys would jump right into a situation like that, but I also know you're not like most guys ... you're what my generation calls a true gentleman. Are you feeling OK with things? I know the girls can be pretty persuasive at times.\" Devon put her hand on my shoulder and waited for my response.\n\nI put my hand on top of hers. \"I made my own decision and I'm as happy as the girls are. It all may seem a little messed up but hey, that's what our family is like.\"\n\nMichelle looked at the others in the car and sighed shaking her head. \"You're right there AJ.\" She said with a wry smile.\n\nCHAPTER NINE - BIGGER FAMILY NEEDS BIGGER SPACE\n\nDevon spent more time at our place over the next month and she became like one of the family. It was good to see her relationship with Sasha get back to normal after being apart for so long. Becky and my bedtime activities with Michelle stopped altogether naturally and we didn't even need to talk about it.\n\nSooner than later it was decided that Devon should move in permanently, her sister was recovering from her illness and doing well and Bill was still living in their old house. Devon started looking for a job in town and we moved her stuff from storage into the apartment.\n\nSo now it was four girls and me in the apartment. Everyone made the best of it but it was a bit cramped at times. We began to wonder if we should move somewhere bigger, but the location and amenities would be hard to beat anywhere else.\n\nAbout two weeks later I ran into Betty Jenkins who lived in apartment 604 on the floor beneath us. Betty told me she wanted to redecorate and as I was in the construction trade she asked if I could recommend someone to oversee the job. I immediately thought of Devon, she had some qualification in interior design and I knew she would have the skills for a job like that. She'd already been through our apartment and rearranged things, adding color with pillows and pictures and stuff. It looked a hundred times better. Betty and Devon met and she got the contract. Michelle offered to keep an eye on the budget side of things as this wasn't Devon's strong point. They spent their evenings planning and putting together a colour scheme and pricing things up. They both seemed to be in their element and we had to pull them away from tile samples and paint charts to come and eat supper most nights.\n\nThe girls birthdays were only a few weeks apart and I had gone out and bought them matching motor scooters as presents, something they both really wanted. They would zoom around town on them shopping and visiting friends. I refused to go for a ride with either of them as they seemed to know only one speed and a total disregard for most of the road laws. We nick named them 'the kinevil twins'. The only good thing was they wouldn't ride in the rain, which was probably good for them and other road users. \n\nDevon finished the apartment downstairs and one of the suppliers she dealt with was so impressed they offered her a full time job as a consultant. \n\nShortly after the apartment was finished, Betty stopped me in the lobby and told me she was going to be moving to Newport to be with her brother and sister-in-law who were older and needed care. I asked if she was selling the apartment and she said yes. My mind was racing and I told her I would be interested in buying it. When I told her why she thought it was a good idea. Betty knew I had inherited money and was serious about the purchase. I suggested we get three valuations to give her an expected sale price and then we negotiate from there. I also asked her to keep it our secret about who purchased the property. She agreed and seemed to like the idea of it being a secret. I think she read too many spy novels!\n\nI arranged for the purchase through our lawyer Ron Jacobs. Since the penthouse was in a family trust, I asked for the new apartment to be added to that. It would require Becky and Michelle's signatures but we could go ahead and get them later if it didn't take too long.\n\nAbout a week after the purchase I arranged for all the girls to go on a weekend spa retreat. I told them I was going to get the apartment carpets cleaned and that it would be easier if no one was around. Since we had discussed the cleaning on a previous occasion, they didn't suspect anything and agreed to go without any fuss. Plus they all knew they'd like getting pampered at the spa.\n\nOn Friday after work and within an hour of them leaving I had Ted my boss and his entire construction team in our apartment. I had offered the guys a bonus if we got the work got done on time and they were raring to go.\n\nI had met with all the other tenants in the building to warn them that there would be some noise over the weekend and a number of them had taken up my offer of providing a Saturday morning brunch out by the pool when the noise would be at its greatest. I employed a caterer for the whole weekend to cook the brunch and also provide food for the eight construction crew and the other sub-contractors that would be on site. No tradesman could turn down free food!\n\nBy Sunday afternoon the job was completed. Ted and I had planned the job well and all the pieces of the puzzle had happened on time without any hitches. The crew had a little celebration with a few drinks on the roof terrace and by six o'clock they were gone and I was left alone waiting for the girls to return. \n\nCharlie in the foyer had been asked to warn me when they arrived back. So I managed to greet them as the lift door opened on our floor. As they piled out of the lift I told them I had a surprise and they had to shut their eyes and follow me into the living room. They entered the apartment with a hand on the shoulder of the person in front as I led them though the foyer and got them seated in the living room. There was a smell of fresh paint and once they opened their eyes they started to try and guess what I had been up to.\n\nI stood in front of them and started my rehearsed speech.\n\n\"I think that the apartment has become too small for all of us and I believe it's time for some of you to move out.\" I said in a serious tone.\n\nThey looked at me as though I was some sort of dictator and they were not impressed.\n\n\"AJ, you can't be serious, this is home for all of us and you can't just decide who stays and goes!\" Becky said incredulously.\n\n\"She's right AJ, I don't think you can make that call by yourself.\" Michelle chimed in.\n\nI carried on as though I didn't hear them. \"I think that Michelle and Devon should move!\" I said my face still serious.",
        "Becky stood up \"AJ, I own this place too and ...\"\n\n\"Sit down Becky, I hadn't finished!\" I said abruptly.\n\nShe sat surprised at my tone and she didn't look happy.\n\n\"As I was saying, I think that Michelle and Devon should move...\" I paused and grinned \"Move into the new extension!\"\n\nThey all looked confused.\n\n\"If you would follow me ladies.\" I beckoned for them to follow me back into our entrance foyer.\n\nThe got up and followed. When they saw the foyer they all gasped in amazement. Instead of just seeing one set of stairs going up to the roof terrace, they saw a second set going down to the floor below.\n\n\"After you ladies.\" I indicated to the stairs.\n\nThey walked dumbfounded to the stairs and descended to the apartment below. The stairs went down to the inside foyer of the apartment 604. They gathered at the bottom and looked around. I joined them.\n\n\"I would like to suggest, that to give us all a little more privacy, Michelle and Devon move into this extension with their own living space, kitchen, bedroom and guest room. I think that it is decorated to their taste and it's not too far away from keeping an eye on party central upstairs!\" I looked at them and smiled. \"Well what do you think?\"\n\nThey all smiled back and then a barrage of accolades and questions were thrown at me.\n\n\"How did you do this?\"\n\n\"I love it!\"\n\n\"Do we own this?\"\n\n\"Where did the stairs come from?\"\n\n\"It's amazing!\"\n\nI spent some time answering their queries. I told them about the deal with Betty and Ron Jacobs help with the purchase. I explained how the team had done the work in just two days, and how we had craned the stairs up from the street and brought them in off the balcony. We'd renovated the guest bathroom so as to make room for the stairs and then the plumber and electrician and painters had worked late into the night to get it all done. By the time I was finished my explanation I think they were as exhausted as I was.\n\nMichelle and Devon loved the idea as did Becky and Sasha. Hugs and kisses were shared around and we ended up celebrating with trifle and ice cream that the caterers had left behind.\n\nAs we ate Becky and Sasha debated who would get Michelle's old room upstairs, it was by far the biggest and had a great ensuite and a huge walk in closet. Sasha had the most clothes and shoes but Becky was the older, by two weeks. They joked about it for a while trying to outdo each other with funny and outlandish reasons why they should be the one. We laughed as they got funnier.\n\nFinally Becky stopped and said, \"There seems to be only one way to settle this.\" and she looked at Sasha.\n\nI thought she was going to suggest an arm wrestle. But Sasha just nodded back at Becky.\n\n\"The room is yours AJ!\" Becky announced.\n\n\"I agree. You deserve it more that we do.\" Sasha confirmed.\n\nI looked at them both astonished.\n\n\"But there will be conditions\" Becky added quickly with a smile. \"Firstly you only get a small portion of the closet. You don't have many clothes anyway and we have heaps.\"\n\n\"Agreed.\" I said laughing.\n\n\"Secondly.\" Sasha joined in \"You must share the spa bath with us.\"\n\n\"It's big enough for three, so I agree with that.\" I said.\n\nDevon looked at us and shook her head sighing.\n\n\"Thirdly you must love us unconditionally until we are old and wrinkly.\" Becky made an attempt at an old wrinkly face, she only succeeded in looking cute.\n\n\"Agreed.\" I said again. \"I can do that until you're thirty and wrinkly.\" I added laughing again.\n\n\"Hey Bucko, we're over thirty!\" Michelle threw a pillow at me, closely followed by pillows from the other three.\n\nWe laughed and sat around enjoying each other's company for a while longer then drifted off to bed. The girls came into my room and even though I was tired from the weekends work I managed to stay awake for a very rewarding couple of hours that left a pile of sweaty bodies on the bed.\n\nCHAPTER 10 - THE FUTURE\n\nThe girls had finished their classes at community college and after a bit of discussion over the next few weeks both girls decided they weren't going carry on with study at the moment. They took a couple of months off and did nothing but go to the beach, work out and shop. I was pretty jealous about their beach trips, but their tanned and trim bodies were a nice thing to come home to. They also took cooking classes and some of our meals were now gourmet.\n\nAs Becky was now twenty she had to access her trust money and she and Sasha began planning to run a small cupcake business to keep them busy and out of trouble. Michelle pitched in with some sound accounting advice and they rented a space attached to a local caf\u00e9. They had a window frontage onto a busy street and with Devon's help I renovated the room giving them a real fun looking shop. After some impressive advertising in the local papers and flyers handed around, they opened for business. Everyone was surprised at the how well things went right from the start and they did a roaring trade, about half of customers were shoppers and half were people wanting the cupcakes delivered for kid's parties and office birthdays. They were very creative how they iced the cakes and even made personalized ones to order. It wasn't long before they had to hire a couple of assistants to help in the shop while they baked and iced. Both Becky and Sasha liked the work so much that in the evenings they seemed to come home with more energy than when they left. Which was good for our sex life!\n\nThe girls eventually decided not to go on to college at all, and they concentrated on developing their business. They branched out to become children's birthday party planners, offering a full service from food to entertainment. Within two years they had opened up in four other locations in the region and employed twenty staff. The girls won a number of entrepreneurial business awards which blew them away, as they said they were just having fun.\n\nI used some of my inherited capital and went into business with my old boss specializing in apartment renovations. We both wanted to be hands on with the work so we kept things relatively small employing only four guys on the team. Naturally Devon became our interior design consultant and Michelle's firm handled the books.\n\nMy relationship with the girls was unorthodox, we all knew that. I loved both of them with all my heart and would never have wanted to choose between them. We also knew that things like marriage were not possible in a legal sense, but our commitment to each other was just as strong as a marriage covenant.\n\nBoth Becky and Sasha became pregnant at twenty three and we had two beautiful children born only six weeks apart. Sasha gave birth to a little boy who we called Jack, which happened to be both Sasha's fathers and my dad's name. Becky had a girl who we named Rose, Becky's mother's name. Over the next few years two more little ones arrived this time Becky had a boy, Jackson, named after Becky's dad. Sasha had a cute little girl, Louisa. My Mom's name. We also now had two doting grandparents in Michelle and Devon who spoiled the kids as much as we would allow.\n\nAlthough our lives were busy, I was very happy. How could I not be, I had a loving family and my two dream girls never failed to make my night life sweaty and climatic. Even now after being together for more than twenty years, one of my greatest joys is to see them make out, bringing each other to heart pounding orgasms. I get hard just thinking about it. "
    ],
    "authorname": "silverfern",
    "tags": [
        "cousins",
        "first time teens",
        "older female",
        "mff",
        "romance"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/new-beginnings-34"
}