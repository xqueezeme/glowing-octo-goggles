{
    "title": "Can You Kiss Me Like This?",
    "pages": [
        "A kiss is just a kiss. . .NOT \n\nCall this a sequel to My Take on Writing a Female Orgasm or just a new 'How To' story; either way, I'm going to write about that old school yard rhyme K-I-S-S-I-N-G. How do you put feelings into a kiss? How do you make it more than just two wet tongues sliding in a warm cave of teeth and gums? \n\nStop and take a minute to look at your characters and their situations. . .then imagine yourself in the embrace of that individual whose lips are coming down to assault yours. \n\nAssault? \n\nYes, that's the word I used. It is an assault. It is supposed to be if done correctly. It is supposed to attack your senses and in this case since you aren't standing in front of your reader kissing them, you have to attack them with your words, though for some readers, they would be willing to trade up and take the real thing if you were offering it. \n\nKissing. \n\nA simple word for something that brings about so many changes in a person's body. A virgin kiss. A welcome home kiss. A hero kiss. A rapist's kiss. A kiss between mother and child, father and son. A kiss of desperation and longing. So many kisses and yet you have to portray them all differently. The question is how? \n\nI'm not here to tell you this is how to write a kiss. I'm just offering a source to come back to if you desire, or a starting point to consider. I'll give examples of kissing and you are free to interpret them in whatever way you desire. \n\nDo I draw you into the moment or was I flat in my description? I want to know what the character is feeling. I want to be assaulted by the lips of the person claiming my hero/heroine. \n\nVirgin Kiss\n\nEmily looked up to Tyler; she'd been dreaming of this moment since she was a little girl. She'd had a crush on the boy since Elementary School, now he was a man and he stood before her. His lips came closer to hers. They were the same lips that brought smiles to her face. Now as the distance that separated them was pushed away she had no more thoughts except one; the need to please him.\n\nTheir lips touched and she breathed in the scent of his cologne, his breath and his very being. Her heart skidded to a halt as the soft brush of his mouth against hers forced her knees to grow weak. Emily closed her eyes and her fingers slid up to grip his arms as she melted into him. She felt his tongue slip out and when it touched her lips, she gasped from the surprise, but she opened her mouth willingly. \n\nShe felt the spark of heat rush through her and her face flamed hot from the emotions that ran over her. Unsure of what to do, but loving the sensations that were quietly surfacing she tilted her head and timidly touched his tongue with hers. She was lost then as his fingers moved into her head and coaxed her to deepen the kiss and when she did, she was lost.\n\nWords like dreaming of and crush, let the reader know that this moment is one that Emily has wanted for quite some time. That sets the stage for the reader that this is a big move for this young woman, perhaps she's a teenager on her first date, in this case though for Lit. reasons she's eighteen and perhaps lived like a nun. *wink* \n\nHer heart skidded. This shows that she was taken back by the initial contact of skin on skin. She probably felt some tingles and perhaps a tilting of her world, because she was finally kissing the boy that had become a man. Words are your paints and you have to brush them onto the pages, but do you do it lightly or do you boldly stroke them? \n\nDesperate Times\n\nMarc grabbed Sophia and pulled her to him. Their eyes locked and held. They both had denied the attraction, but now as the clock ticked down the final seconds, they both knew that this was it for them. They had only this moment to show each other what they felt. His mouth crushed hers and without thinking of the future, their tongues collided with each other. \n\nHe pushed deeply into her mouth as she forced her tongue into his. They battled, both wanting to feast on what they had denied themselves. She clung to him as her head twisted to the right then the left. Each time she moved, she drove deeper inside his welcoming home. \n\nThe sound of the timer reached their ears and they separated. They stared at the swollen lips that they had denied tasting for so long. Their embrace tightened as their lips met one last time. \n\nThis couple died. Before they did though they shared a kiss that was full of weeks, months, maybe years of denial. They both wanted more, but something forced them to never act on it, until it was to late. When they became aware that the end was near the desperation in never knowing what could have been, broke through the barriers that were placed in front of them and they took the leap into each others arms. A kiss. . .simple and yet powerful. \n\nShowing the reader the power of a \"desperate\" kiss is important. You want them to feel the spark of heat that comes when these two strong minded individuals finally give into the basic instinct to connect with someone they are attracted to. Words such as: longing, denial, taste, swollen, bruised, can be used to show a kiss that is wanted, but for some reason was held off. Now the couple is hungry for it; they can't wait and they eventually give in.\n\nTeasing Kiss\n\nSylvia smirked as she slid up Gabe's body. She'd left all his clothes on while she crawled all over him. Now as she looked down on his smiling face she thought of what to do next. Her finger moved over his lips, tracing the shape. Keeping her blue eyes open she closed the distance between them and her tongue slipped out to take the path her finger had moments before caressed. She licked the upper lip of her spouse, then the lower, eventually she slid her tongue over the seam. \n\nGabe opened his mouth, begging her to come in and devour him. His body tingled in anticipation for more. His tongue came out and licked the taste of her on his skin. She jumped back and winked, not allowing him to kiss her. When he retreated she returned and this time she slipped her tongue over his teeth, enjoying the smooth pearls. Her teeth tugged on his lower lip, before she was to aroused to deny herself any longer. \"Kiss me,\" she told him. \n\nHe did.\n\nCan you see Sylvia straddling her lover and just staring down on him with this look of. . .\"Gottcha\" and a naughty wink? I can. I hope you can too. I see this woman who feels empowered, but as soon as she kisses him, tastes his mouth and plays with his lips, she can't hold back, she wants more and knows only he can give it to her. \n\nWhat happened next? Did he roll her onto her back and have his way with her? Did he rip his clothes off and dive immediately into her slick sex? Or. . .did he return the favor and tease her into submission? \n\nWords used here let the reader know that this woman was going to tease her lover and build up the tension. Sliding, crawling, tracing. . .slow movements on part of the character lets the reader know this is a tease that will slowly build up to something promising. Begging and anticipating lets you feel how much the recipient is wanting this to happen and how much they wish the other would hurry and end their suffering.\n\nTrue Love \n\nRebecca looked into the eyes of her husband. They had been through so much, now as he stood before her on a day that was similar to the one they shared fifty years ago, she felt herself being pulled back into the past. She loved this man and she could tell that he too loved her. They had been through so much and she longed for many years to come. Her fingers swept into his hair and when the Minister pronounced them husband and wife - again, she pressed her fingers into his scalp, beckoning him to meet her half way. \n\nAlan studied his wife and placed both his hands on her face. He cupped her beautiful features and lowered his lips to hers. They touched, merged together just as they did so long ago. This time when they kissed it was not the kiss of youths, but the kiss of two adults who had found themselves still very much in love. His fingers slid to her hair and held her to him. His tongue slid inside her mouth and hers slipped inside his. They stroked slowly, each renewing the hunger that they shared. Each danced a melody upon the other, both gliding and stroking, each one desiring to taste the other. \n\nWhen they separated their eyes held and everyone in the room was speechless as they took in the couple that had seen their children grow and become parents. The power of their kiss was felt by many and yet only the couple themselves sensed how much the other needed them. \n\nI hope you feel the strong bind that this couple has. They have renewed their marriage vows in front of friends and family, kids and grandkids and they are looking forward to experiencing many more years to come. I can sense theirs is a love that is strong and has stood the test of time. Theirs is dependable and sure. They have had ups and downs, but in the end their love conquered all, which is how love should be. \n\nTheir kiss is represented by time. It is seen with words that display a gentleness and a longing that both people share. Stroking, sliding, gliding. Words that are smooth and sure, just like their marriage. \n\nForced Kiss\n\nHis arm gripped hers in a vise like hold and he dragged her to the back of the alley. His eyes were dark, almost black as they feasted on her skin. With a forceful shove he pressed himself against her and forced her back into the hard brick wall. Jack Barns refused to let the spicy vixen scream. He pulled the gun from where he'd pushed it against her waist and pushed his tongue into her open mouth. She was going to scream, now she was forced to accept his invasion. \n\nHe plunged the thick muscle against hers and pulled her head to the side, giving him deeper access. He raped and bullied her mouth, bruising her lips and when she fought back, his teeth began their assault. He bit down on her lower lip and sucked on it, growling low as he rubbed his growing erection against her. His tongue licked at her, tasting the blood he'd forced from her. The cut now bleeding freely was ignored for the time being as he began to drive back into her sweet home. \n\nShe'd fight him. He liked it when they fought.\n\nI see this as a dark invasion behind a seedy bar. Perhaps the character was lured their by someone she knew or just someone approached her as she was about to walk into the establishment. Either way, she's being forced to accept this man's kiss and she doesn't want it. \n\nWords are there for us to use. We have to show the reader the characters thoughts and feelings. The words, drag, vise like hold, dark, feast, forceful all have strong meanings. They show dominance and the situation seems to be dangerous. This is revealed later with the words gun, scream, invasion. \n\nThe kiss is a demanding one. It says. . .I'm taking you, whether you like it or not. Fight me. . .I want you to. I can picture this woman struggling and her adrenaline is pumping through her veins. Will she win or will she lose her battle?\n\nJust because you see a kiss in your head doesn't mean the reader will. You need to let the reader see it too. A kiss is not just a kiss. It is so much more. If you are writing a story with no emotion, depth, or true colors then how can a reader see it? \n\nJill kissed her boyfriend Mike on the lips. It was nice. She wanted more. \n\nOr...\n\nJill's lips pressed firmly against Mike's. Their softness beckoned her for more and she knew she would need to feast from them often. \n\nI think if I were Jill, I'd be wanting to kiss the lips that belonged to Mike in the second example, not the first. How bland that sentence seems. It was nice? I mean doesn't beckoning for more let a reader know... that was some kiss? Feast from them often? Again, if it wasn't nice, would she be wanting to feast from them at all? \n\nChoose your words carefully and see what you get when your finished. Ask yourself, if I were reading this would I want to continue and see what comes next? Or would I want to pull out and drown myself from the lack of description in the words, a more painless death?\n\nSo remember there are a thousand meanings behind a kiss and it is your job as a writer to write them in there. "
    ],
    "authorname": "RedHairedandFriendly",
    "tags": [
        "writing a kiss",
        "examples of kissing",
        "guide to writing",
        "help in different kissing styles"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/can-you-kiss-me-like-this"
}