{
    "title": "Finding Uncle Billy",
    "pages": [
        "CHAPTER 1: THE VANISHED WARRIORS BALL \n\n1999, Sky Grey, Ohio \n\n\"Mom,\" the little girl said, lying in bed, \"did anyone in our family ever do anything great? I mean, I know I'm cousin to the Greys around here, but did a Finch ever do anything?\" \n\nBarb Finch looked at her daughter Trish, the love of her life, a miracle of existence. Dark hair, hazel eyes, thin, smart as a whip, athletic. If Trish didn't have a book in her hand, it was because it's hard to hold a book while carrying a lacrosse stick or tennis racket. She always had a skinned knee or elbow, always a bruise here or there. She could be absent from home for whole mornings or afternoons. Sky Grey was a town of free range parenting, of parents who wondered that there was any other kind. Most nights, Trish was tired. \n\nA name came to mind. She remembered seeing a picture of Billy Finch, in his army uniform before he went to war and didn't return. \n\n\"Oh, I don't know if you'd call him famous, or great, but your great uncle is in some history books,\" she said. \"Billy Finch, on your dad's side of the family. Your great-grandpa's big brother. You remember Great-grandpa Finch who died last year?\" \n\n\"What did he do?\" Trish asked. A relative in history books? \n\nHer mother looked at her. \"Billy? He fought in World War I. And he disappeared. He and his whole group. They call it the Lost Platoon. No one knows what happened to them. Forty or fifty guys, and he was their lieutenant. They probably all died.\" \n\n\"World War I?\" Trish asked. \"When was that?\" \n\nBarb hesitated. \"Long time ago,\" she said. \"Before Grandpa was your age.\" She didn't remember the years of World War I. \"Everybody who fought in that war has died now, I think. Or they'd be over a hundred, probably.\" She was mostly right about that. \n\n\"Uncle Billy?\" Trish asked, imagining derring-do in that war that was not much of a stage for heroics. \n\nHer mother kissed her cheek. \"Nobody knows what happened. Maybe you'll figure it out,\" she said. \"Now, SLEEP!\" \n\nTrish rolled over. She thought, Billy Finch and the Lost Platoon... \n\n* \n\n2008, Sky Grey, Ohio \n\nThe dance was a vestige of another time. A small group played dance songs from decades past, the mayor of Sky Grey said a few words. But its title was evocative, and for some time it represented something to the rural people of the area. John Glenn attended two as a senator; several governors from Ohio and Indiana came for the attention, even an ambassador from France once. \n\nThe Vanished Warriors Ball was held every decade near the Fourth of July, and for Sky Grey, it was quite a party. Several hundred attended every time, wearing the best they had. Tickets were expensive, although no one was ever turned away at the door. Most paid. After the bills were paid, any money went to a veterans charity. \n\nTables were arranged on the carpet from the main entrance to the dance floor. There were chandeliers, it was brightly lit, and drinks were served. This year a small, live band played, a disabled former Marine lieutenant fronting the group. \n\nAt eight, the memorial commenced. \n\n\"Good evening,\" the singer said, using crutches but smiling, \"I'm Josiah Langer, and I live in Sky Grey now. I was in the Marines. But I sing, so the Army guys put up with me.\" He nodded toward a table of soldiers also in uniform. \n\nPeople smiled and laughed politely. Langer then introduced the mayor of the town, who took the microphone to conduct a ceremony. Tricia Finch, about to begin her sophomore year at Ohio State, was manning the table at the door, taking tickets and collecting money, but she turned for the little ceremony she'd never seen. Her Aunt Sheila Grey spoke into the microphone. \n\n\"It's time we take our seats. Everyone, please,\" she asked gently, and the room became quiet. \n\n\"Thank you. Welcome to the Ninth Vanished Warriors Ball. We have a small ceremony that goes back to 1928 and the first Vanished Warriors'. We begin with the fourth verse of the Star Spangled Banner, which at that time was not the national anthem and the fourth was the verse sung before the Lost Platoon boarded the train to leave for World War I. Please rise.\" \n\nLanger stood forward and sang, to the accompaniment of his small group, the rarely heard fourth verse. The hall was not so large that he needed electronics, so for this song he did not use the amplifier. There was clapping then, and the mayor began. \n\n\"Thank you Mr. Langer. It is our custom to sit for this ceremony, so please be seated.\" All sat and watched Mayor Grey. \"These words are read at every Ball: Hear Ye All Present,\" she read loudly. It became quiet. There may have been five hundred there. \n\n\"We gather to remember the men of the Lost Platoon, feared lost since June 23, 1918, men from Sky Grey and other parts of western Ohio and eastern Indiana, and one from Missouri. They are not forgotten, and we still await their return. If anyone here present awaits the return of a family member, please rise and remain standing when I read his name.\" \n\nOne by one, she read the rank, full name and hometown of each member of the Lost Platoon. As she did, various people stood at their seats for a relative unmet by them, lost 90 years earlier. She read on as more and more people stood, the great-great nieces and nephews and distant cousins of boys killed at 19 so long ago. From lowest to highest rank, she read the names. At the mention of Sergeant Harvey Lancaster, the lone soldier from Missouri, a very, very old woman in a wheelchair was pushed forward a bit, onto the hard dance floor by a young woman of perhaps 25, who stood behind. \n\nThe mayor saw those two and smiled, and finally said, \"First Lieutenant William Finch, of Sky Grey, Ohio,\" and she saw Finches and Greys all over the room stand. \"I add myself to that number,\" Sheila Grey said. \n\nTrish turned at her table. \n\n\"You should stand, too,\" Mattie Morrison said, her coworker for the evening. \"You're a Finch. None of them ever met him, either.\" \n\nTrish stood at her table. \n\n\"Ladies and gentlemen, the living relatives of the Lost Platoon,\" The mayor said, and began to applaud. She was joined by all in a gentle ovation. \n\nThere were no direct descendants. None of the Lost Platoon had children. That fact impressed itself on Trish as she saw all those standing. \n\nFinally, the mayor read from her paper again, \"Sky Grey Platoon: We await your return. This will always be your home.\" At this gathering, no mothers cried, no brothers wept, no sisters wailed. She handed the microphone to a minister, who gave a prayer for their souls or their safe return, which no one had considered possible for fifty years or more. \n\nThe mayor said, \"Thank you. You may be seated. There is someone who would like to speak.\" \n\nThe mayor took the portable microphone and visited the Missouri women, and then called for quiet. \n\n\"Ladies, Gentlemen, your attention please.\" A spotlight pointed at the mayor and the two women. \n\n\"I'm with Clara Lancaster Jones, the sister of Sergeant Harvey Lancaster of Missouri. She would like to say a few words about her brother.\" The mayor turned the microphone over to the very old woman. \n\n\"I was five when Harvey was killed in 1918. I expect I am the oldest relative alive, here, but I want you to know that they were real people. I remember Harvey in his uniform, our parents so proud.\" She hesitated at the thought. \"I didn't know him well, he was 17 years older. Still, he was my brother. He didn't know where Sky Grey was, I remember him saying.\" She smiled. \"I'm here with my great-granddaughter Evelyn. We think it's wonderful what you are doing here, and we hope you continue it. Perhaps someday, we'll find out what happened to them.\" She handed the microphone back to the mayor. \n\nTrish had never seen such a commemoration. It was a sober and lovely night. A US senator stopped in. The lieutenant governor was there with his wife, daughter and son-in-law. The governor of Ohio sent his regrets. \n\nCHAPTER 2: NEVERENDING WAR \n\nFor a decade after the end of the Great War, mothers in western Ohio told their children about the local boys who went to Europe. \n\nThey sent their sons Over There, thanked the Army they were together, and hoped for a best that was not to be. From Europe came a few letters immediately after landing, some more over the next few months, but the last notes just said they were soon to move up. Then there was nothing. No letter came, nothing for months. The army declared them missing. Eventually they were presumed dead. Letters were sent to Senators and Congressmen, to the Army, to the President, but no one knew anything. The army sent an officer to find them, but the war was still raging and he found no sign of anyone. \n\n\"One day,\" parents and relatives said to their surviving children, \"God took them, and every one of them was carried to heaven by an angel. One second they were soldiers, and then they were saints.\" It was a great tragedy for the likes of Sky Grey or Eaton, Ohio, or Lynn or Muncie, Indiana. \n\nA door slammed once in 1924, and Mrs. Finch looked up, thinking it must be Billy. Mrs. Noe saw her son Douglass in the 1930s at the new Union Terminal train station in Cincinnati, from a distance, as he got on a train, but he never turned around and then he was gone. She cried for hours, convinced he was alive and just didn't come home for some reason. \n\nTom Canally saw his brother once walking along the street in Sky Grey in 1936. He ran up to him, pulled on his arm, but when he turned it wasn't him. Tom said, \"Sorry, I thought you were someone else.\" \n\nMother Lindstrom told her daughter, \"Every time the steps creak I look up and think it might be Ted, finally home. Remember how he always bounced on those steps?\" \n\nThat happened for decades. Finally, all who had hoped for their return were gone, too. They were just a legend. No old man wandered in fifty years later claiming to be the long lost Private Simkins or Sergeant Lancaster. No Billy Finch, no Allen Scranton. No Doug Noe. No one. \n\nThey stepped onto a troop transport train in early 1918, and no one from Sky Grey ever saw them again, alive or dead. \n\n* \n\n2010, Rochambeau, France \n\nThe screen door creaked open, its spring twinging. \n\n\"Mama, come quick, we found something!\" little Cheri, almost six, yelled from the backdoor, excited and smiling. Amie Durand took her hands out of the dishwater, dried them on a towel, and wondered what the children had gotten into. \n\n\"Come on, Mama, come on!\" Cheri insisted, pulling on her hand. They went outside on that brilliant, cool spring Saturday. Cheri pulled on her mother's hand until they were jogging to the base of the ridge, where it merged with the floor of the valley. The ground was always a little moist there. Around the point of the spur it became a swamp pond. \n\nJean was there, holding a small cylinder of metal, caked in mud and dirt. Seeing his mother approach, he held it out to her proudly. \n\n\"Look, Mama! Look what we found right here, just sticking out of the ground!\" \n\nAmie saw what he held and her heart stopped. She didn't want to frighten them, but she was frightened. \n\n\"Jean, don't move.\" Her voice had a commanding tone neither of the children had ever heard. \"Just hold it out and don't move. Let me have it, please,\" she said. \"Gently.\" \n\n\"What is it, Mama? Why are you...\" he said. Then he remembered all the times she or Uncle Jacques had warned them not to touch things they found on the ground. They had not said it for some time, so it hadn't mattered. \n\nAmie gently put her hands around the cylinder, which had two bands of iron or steel belted about the tube that looked to be brass. It was heavier than she expected. Jean pulled his hands back. \n\n\"Good,\" she said, not moving. \"Now listen to me. I want you to run to the house. Get your uncle. Hear me? GET YOUR UNCLE!\" \n\nJean and Cheri were scared, now. Their mother was scared, and they could feel her fear. Jean saw her perspiring, saw her trembling. \n\n\"GO! RUN!\" she said, standing there with her arms out, scared to pull her hands closer, or to accidentally shake or jostle the old bomb. \n\nThey ran. Uncle Jacques should be in the house or the front field. \n\nAmie slowly squatted, and gently, oh so gently, put the cylinder down on the ground. \n\nThe children heard the explosion, and Cheri screamed. \n\nCHAPTER 3: A GRADUATE SEMINAR IN HISTORY \n\n\"Patricia Finch?\" \n\n\"Here. Trish, please. I'm interested in the impact of war on small communities.\" \n\nThe professor made a notation. \n\n\"Arlington Jeffries?\" \n\n\"Here,\" said a tall guy in the corner. His hair is perfect, Trish thought. He probably spent more on those clothes than I did on my car. \"I'm studying the role of women in my life,\" Jeffries said. There was a groan from two of the three women in the room. \n\nDr. Simms raised an eyebrow and smiled. \"Sociology seminar is down the hall. Psychology is downstairs. Pickup Bar is down the street. Seriously, Mr. Jeffries?\" \n\n\"American fascist movements, Simms.\" \n\nTrish was startled by the rude tone of the reply. Dr. Simms was not smiling, and he looked for some seconds at the student. He didn't seem amused by Jeffries. Jeffries looked back at him. Was that insolence? \n\n\"Thank you, Mr. Jeffries.\" Simms's voice was harder, quieter, Trish thought. \n\nHe went on with the class list then, perhaps having measured Jeffries or tired of him. \n\nMost of the discussion was about the nature of history doctorates, their uses and limitations (several of the students appeared to be considering other programs), and the level of work necessary to finish successfully. \n\nJeffries spoke up almost as if his participation was a gift to everyone. \"I planned on reading the major historians and what they wrote on the Klan and the German-American Bund. My idea was to conduct a meta-synthesis of the best historians and critics.\" \n\nMeta-synthesis? Trish looked at Jeffries, wondering if he were serious. \n\nDr. Simms waited a moment, perhaps wondering who the \"major historians\" might be. \"Do you mean only Bund? Not the American Nazi Party founded by Rockwell later? There have been several other significant fascist groups and movements. The Black Legion. Business Plot. Silver Legion. Coughlin's followers. Recent groups that might be fascist like White Aryan Resistance, or left-wing groups that have similar structures. You need to show there is a lack of knowledge or study of your topic as well as your plan to investigate it before it will be approved. You need to identify a change or idea, perhaps an event, that has not been adequately investigated.\" \n\nJeffries seemed flustered, never having considered that Simms might expect more than that he read popular histories of American nazis. Trish thought she saw amusement in Simms's eyes, quickly veiled. She thought Jeffries had picked a subject out of thin air because he thought it would be easy or impressive to someone, and hadn't considered he was expected to defend his project every step of the way. Perhaps he was surprised Simms knew more than he about the subject. \n\n\"Racism precludes rigor,\" Jeffries said. \"You act as if there is a philosophy of intellectual depth. My thesis is that it is a shallow ideology based in their ignorance and lack of education.\" \n\n\"Why do you think it's based in lack of education or ignorance?\" Simms asked. \n\n\"The Nazis? Skinheads? You expect me to read tons and tons of that propaganda as if it's anything other than white supremacist caterwauling?\" \n\n\"You chose your topic,\" Simms said. He shook his head. \"Perhaps you underestimate the depths of intellectual thought among the fascists. It's not my field but I've seen references to Nietzsche, Schonerer, Riehl, Heidegger, Savitri Devi, and other writers, Darwin, Ploetz, and other scientists. American fascists are not in a bubble. I doubt the topic will be as superficial as you assume. And the meta-analysis of secondary readings is more suited to studies of effective educational techniques than history. We don't study just because we can. Of course, if you approach it another way, your Phd could be a study in intellectual history, but it would have to be carefully approached. I doubt you'll find much enthusiasm for a study of the studies of fascism. We use primary sources and reach our own conclusions. You should see your advisor, Dr. Marshall, I think?\" \n\n\"I will,\" Jeffries said, almost disgusted, accusingly. Trish wondered if it were possible for him to be humiliated. \n\n\"Dispassion is not difficult, one just need not care,\" Simms said. \"But approaching every subject, every statement, every event, with an open mind, associating with the vast experience of humanity, and treating each historical actor as a full human being... that's what makes an historian different. Historians take great advantage of hindsight. Our subject is the memory of humanity, and there's purpose in that.\" He stopped and shook his head. \n\n\"It is quite possible for a reporter or general to write a great history of a battle or event. What makes the historian's job important?\" he finished. \"We with degrees compete with every participant, every knowledgeable observer, everyone who wants to explain. We bring diligence, hindsight, knowledge, time, years of study, books, consideration of every possibility, and hopefully open mindedness.\" He looked directly at Jeffries. \"I don't believe in perfunctory history. We train people to write the major history, not just summarize it. It requires work and intelligence. It can take,\" he paused, \"a lifetime.\" \n\nJeffries said nothing, and Trish thought that he didn't want to defend laziness. \n\nShe smiled. She raised her hand. \n\n\"It's a seminar, Ms. Finch. You may speak without raising your hand, whenever appropriate. Yes?\" \n\n\"Of course, forgot, uh, some of what I'm interested in for my eventual dissertation is probably only available in France. How should I handle that?\" \n\nDr. Simms looked at her with sudden seriousness. \"History is really going to be your field? And you want to investigate something with many documents in another language and country?\" \n\nTrish answered yes to both. \n\n\"If you're serious, there's only one serious answer, and you already know it.\"He looked at her, and she realized he was saying she must study French, which she could already speak adequately but not like a native, and she'd have to go to France, if that was the only way to get the information. She had taken years of French in her high school and undergraduate years; perhaps she would add French to her schedule now to improve. It was not daunting to her; it was exciting. She looked at her teacher; he was not smiling but his eyes were twinkling. \n\nSimms saw her excitement at the prospect of language and geographical obstacles and wanted to smile. The room was quiet. He looked at them. \"You are going to be the experts in your fields, small as you may define them. That Phd means you have made every, EVERY, effort to understand it thoroughly. NOT that you understand those who have written about it. That you understand IT.\" \n\n\"Studying history doesn't save anyone's life,\" Dr. Simms said. \"But it can reveal its meaning.\" \n\nThe room was silent. Perhaps he was trying to discourage the charlatans, Trish thought and smiled. Simms saw her smile, and he wanted to smile also, but didn't. \n\n\"Okay, that's enough for tonight. Don't forget the reading for Thursday. I know it's a lot, but you're worth it. Ms. Finch, Mr. Seymour, you are my advisees so if you'd see me after class for a minute? Okay, see you all Thursday.\"Trish and Seymour nodded and stayed in their seats as the other ten filed out. Dr. Simms stood by the door, shaking hands with each student as he or she left. He was an interesting guy, Trish decided. \n\nHe started off talking to Seymour and arranged a bi-weekly meeting to discuss things. Seymour left then. ",
        "\"Ms. Finch, you went to Merciful Saviour in Sky Grey?\" Dr. Simms asked. \n\n\"Yes, graduated four... no, five years ago. I have a bachelor's and master's from Ohio State,\"she said. \n\nSimms smiled, sitting down across from his advisee. \"I used to teach at Saviour,\" he said. \"Right before you got there, probably. I still live in Sky Grey.\" \n\n\"I'm commuting from there to here, this semester anyway,\" Trish said. \n\n\"Your proposal said that you had compelling evidence that a member of the Lost Platoon survived. What is that evidence? Needless to say, the Lost Platoon is fairly famous\u2014the army officially declared them dead long ago but the bodies have never turned up. There's quite a bit of interest, even outside the country.\" \n\n\"I have contacted several of the families,\" Trish said, \"and my family is one. From what I can tell, about two months after the war ended, some families received a letter. Handwritten in pencil. They said the same thing, word for word, except for one, the one my family received. They start with the name of a platoon member, then: 'Your loved one died without suffering and with his fellow soldiers at 5:15 a.m. French local time on June 23, 1918. He is with his platoon, as is fitting. I will not leave any of them.' None of the letters was signed. Some of them thought it was a cruel hoax. Others wrote to congressmen, but nothing came of it.\" \n\nShe stopped. Simms was quiet and willing to wait. Trish went on. \"Our family's letter said, 'I am the lone survivor of my unit. I gave my word. Here, obedient to your word, they lie. Go tell their parents that I will never leave them while I live. I survived June 23, 1918. They did not.' No signature. His mother said it was his handwriting. Lt. Billy Finch's. My great-great uncle, I believe. No, one great, not two.\" \n\nSimms let the next pause lengthen, and said, \"It's very moving. You must realize the Simonides association in it. By now he must be long gone. Do you think he stayed with their graves?\" \n\n\"My great-grandfather said that Billy promised he would not leave a man behind, living or dead. He said he would stay with them, and he thought that's what he did. He wondered if he was crazy or hurt. The army presumed him dead after some time missing in action, with all the rest.\" \n\n\"You think it's worth a dissertation?\" Jonas inquired. \n\n\"As part of the larger story, I do. How Sky Grey handled the loss of so many, so suddenly. The Great War in small town America. But I'd like to find out what happened. And how. I think a lot of communities face tragedies in the sudden deaths of so many, especially so many of the young.\" \n\nJonas was quiet and nodding. \"Start thinking about a larger thesis, regarding the impact of the war on Sky Grey. I know there was a book about the loss of a large number of boys from a Mississippi town in the Civil War; that could give you help, perhaps. I don't know much about the Sullivans in World War II. We'll talk. About the Lost Platoon, I have no contacts with the army, but I have a friend who's a Marine general now, though a lawyer. He has contacts everywhere, especially in the Pentagon. I'll let him know what you're doing; he might have an idea. Doors open for him. Let me know what obstacles you run into.\" \n\nTrish felt relieved\u2014he seemed to like her project. She'd worried he'd find it laughable. She was on the phone to Ryan as soon as she was out the door. \n\nCHAPTER 4: LOVE AND CONFLICT \n\nRyan Armbruster was a year older than Tricia and hoped soon to finish medical school at the University of Cincinnati. He was not tall, not particularly handsome, not rich, not many other things. But he was kind in demeanor, well-read, smart, knew enough baseball to converse with Trish's dad, and loved her mother's cooking. He was witty in a wry, sly sort of way and her father sometimes hesitated before laughing uproariously at something he said. Ryan was smart and didn't force it on one. Sometimes an hour might pass after he said something, and someone contemplating would realize, THAT was really smart. \n\nAfter placidly dating Trish for almost a year of her graduate study with Dr. Simms, he became serious. Looking to his future, he knew he'd be pursuing residencies around the country; he didn't want all his experience to be in southern Ohio, his grades and recommendations were solid to very good, and he was sure he'd be moving elsewhere. Trish was pretty and calm and pleasant; she liked a ball game or a night watching the moon, equally. She was always reading this history or that memoir. With her Phd project about Sky Grey, she'd been absent more than he'd like, interviewing people, looking for connections in town and county records, trying to find the relatives of this farmer or those soldiers. But history is a malleable study, he thought, and would fit in with any flexibility his career might demand of a young couple. \n\nTHOSE SOLDIERS! She was obsessed with finding the relatives of the Lost Platoon, which to him was of little consequence. So another batch of kids were killed far away long ago. What did it matter now? All their grieving relatives were gone. Their loss, like all human losses, was mitigated by time. Absorbed by history, he thought. Ryan saw loss in his daily work; he'd been lectured and the other medical students had discussed the best ways to maintain sympathetic distance, even in the face of the worst tragedies. It was too late for those dead for four generations. \n\nHe shook his head at her earnestness. He humored her by driving with her to some place the other side of St. Louis, Missouri to find the distant relative of a sergeant in the \"LOST PLATOON.\"That had been a bust. Some old couple that hardly knew what she was talking about and only knew that they'd never met the guy (he died before they were born!) and some other older relative had talked about him going missing in World War I. It was just too long ago. His sister, his much younger sister, they had met. She was ancient, but still breathing. She talked of Harvey in his uniform, and Harvey's girlfriend who eventually married somebody and probably died in 1965 with a passel of grown kids. Trish ran around this little town talking to one guy after another and wasting a lot of time looking for Harvey Lancaster's girlfriend's children. \n\nHistory was a tenuous connection, Ryan concluded. His connection with Trish was much more solid. \n\nOn the long drive they'd discussed their plans and she said she was falling in love with him, that she was beginning to think of him as her husband. She said she didn't make significant decisions without thinking how they might affect him and his career. She said, \"I'll always talk to you before a big decision, now. I want us to work things out so we can be together.\" \n\nShe's serious and she understands, Ryan thought. He thought the same way for some time: she should avoid making commitments that might take them apart. He was looking at residencies just as her program was reaching the dissertation, so there was pressure on them both. Logically, he felt they must compromise. His schooling was costing so much, his ultimate reward would be so much the greater, that he knew she'd understand the practicality of his program carrying more weight than studying history; in particular, studying a town a century before. But once she had the degree, she could study history anywhere, so she'd be much more flexible. \n\nFlexible, he thought. She WAS flexible. \n\nThey'd finally had sex. Not pretend sex, half-sex, this sex or that sex: sex. Let's-have-fun-and-do-lots-of-things sex. He smiled remembering one evening and night. Trish had been grateful he'd put up with the trip and her running around, leaving him alone much of two days. Very grateful. \n\nHe concentrated on sex, and she was different with their mutual declarations of love. She was not just a willing but an enthusiastic lover. She talked during it, the whole thing. Her head was in his lap and then his was in hers; he was massaging her breasts or clit, and she would talk on about \"loving it\" or \"don't stop\" or \"keep doing it\" or \"do me this way\" and on and on. He slowly slid into her, she was on top and backwards, and he kept his hands on her hips. She wanted him to hold her hard down on him, his full length within her and without moving for many long seconds; then she swung around and raised herself up and down on him, smiling at him as he squeezed her breasts. Then she bent over on the bed, and he stood above to screw down into her, just his dick touching her until his hips met hers. She said, \"I feel all of you in me, and just you in me!\"He came and came at that, realizing she was something of a contortionist. \n\nShe'd not avoided sex because she was a prude; she avoided it until she was sure she loved. She was finally convinced he loved her. She knew what she was doing, she was sure. She'd waited until he expressed strong emotion for her, and until she felt it for him. It slowly dawned on Trish that she loved Ryan. It had seemed a very momentous thing to say she loved him. \n\nHe wasn't perfect, but he was kind, he was joining a caring profession, and she appreciated his patience. She liked being with him. Her parents remarked on it: a doctor of medicine married to a doctor of history. Or as he saw it, they'd be a real doctor and a liberal arts Phd. He'd be supporting lesser studies by simply marrying her, and it made him feel beneficent. He never put it that way, of course; he didn't want her to feel inferior in their relationship. \n\nRyan was thinking he would like to be married by the time he finished residency, and Trish was pretty, capable, and smart. \n\nIt's ironic how much time a man can spend with a woman and not notice her fundamental qualities. He knew she was obsessed with that small town, with how people did things a hundred years ago, about how they dealt with the loss of forty boys. He never realized she was getting to know those who were still alive, and through them she thought she knew the dead. He didn't understand why she thought it was important to know people so well. She didn't just want to know, and then know why: she wanted to feel. \n\nShe wanted to feel what they felt a hundred years ago: the good, the loss, the daily life. \n\n* \n\nAfter the Missouri trip, Ryan and she saw each other less as their programs demanded more time and effort. Trish's last classes were finishing, papers were being written, and dissertation was starting. She had lots to do. \n\nRyan was studying and working at his hospital, not sleeping much but earning praise and positive comment. He and she were together, not exactly living together; she still commuted from Sky Grey for her remnant classes, but most of her work was at the town now, and she could more easily make an appointment with her advisor in town than both of them travel to Cincinnati. But the Cincinnati and University of Cincinnati libraries had local papers she needed, so she was getting to town and could see Ryan then too, if he wasn't caught up at the hospital. She had a key to his room. \n\nThey had sex. As his program was winding down, she saw the confidence building in him, and decided to do something he would not forget. He came in one evening and found her wearing long black gloves, fishnet bodysuit, and on all fours in his living room. \n\n\"I hope you like what you see, and love what you are going to do,\" she said to him. She didn't turn to look at him. \n\nHer bottom was perfect, he thought, her pussy red and visible. \n\n\"I'm going to fuck your pussy,\" he said. His clothes were off, he was hard, and he ran his cock up her slit to her hole. \n\n\"First,\" she said, \"you're going to fuck my pussy FIRST.\" \n\nHe pushed into her then, and she thought she was appreciated. \n\n* \n\nThey lay together on the carpet, Trish's head on Ryan's right arm, as she tickled his chest with her fingrer. She kissed his cheek. \n\n\"You know,\" Ryan said, \"if you didn't have so many meetings with Simms, we could do this a lot more.\" \n\n\"You don't think we do it enough?\" she asked. They had sex once or twice a week, but not usually a marathon evening of oral and intercourse with multiple orgasms. They were young and in good shape, and sex was fun. She loved him, and he loved her, she said to herself. \n\n\"I'm getting to the end of my program, too,\" she said. \"I need to visit France, to find the Lost Platoon.\" \n\nHe was quiet. \"Are you sure? It's not like they won't stay lost. I mean, we see each other so little now as it is.\" \n\n\"Oh? What are you getting at?\" she asked, suddenly serious. \n\n\"No, nothing big,\" he said. \"I just don't see the point in hurrying to finish a history program. I mean, it's not like much changes a hundred years ago. I need a residency.\" \n\n\"Well,\" Trish said, \"you apply around. Give us some options. Just be aware I have to finish my program here. All the papers are here, my sources. Or in France. We should do what's best for us and find a way for both of us.\" \n\nRyan nodded, kissed the top of her head. \"I love you, Trish.\" \n\n\"I love you too, Ry,\" she said, slid down him, enjoyed swirling her tongue around the head of his soft dick, but she never felt him harden. She liked knowing she could give him so much pleasure. She learned a man could come without erection. There was not much semen this time, but it was a lot of fun for her. \n\nCHAPTER 5: TOGETHER OR NOT \n\nRyan was from Denver; he came to Ohio for medical school. He applied for residencies in Montana, Wyoming, Colorado, and a few other places, hoping eventually to work in the Rocky Mountain region. His parents and sister were there, and it had so much more to offer than southwest Ohio: mountains, national parks, culture (although he'd learned a curt lesson when he'd said that at one of Trish's family gatherings). He knew Denver and the Rockies; Trish knew southwest Ohio, and his experience was so much deeper, he thought. \n\nRyan was accepted at two hospitals, one in Salt Lake City, the other in Billings, Montana, and he quickly accepted the offer in Salt Lake City. It was perfect. Trish could come with him, maybe they would marry over that time. She could find time to get back to Ohio when she must, or finally to France. \n\nHe couldn't wait to tell Trish. \n\nHe carefully prepared a romantic dinner to tell her of the Salt Lake City offer, and his acceptance, but she surprised him. \n\n\"I've gotten two residency offers,\" he said. They were eating lasagna that he'd worked on for hours. Candles. Wine. Trish could see the effort. She wondered if he were ready to propose. \n\n\"Oh?\" she asked. \"Where?\" \n\n\"Salt Lake City and Billings, Montana,\" he said. \"l start this summer in Salt Lake City. I think you'll be able to finish here without too much delay.\" He was proud, she could see, and he wanted her to be happy. She looked at him. \"We could get married, find a place there, and you could come back. It might only put you back a semester.\" \n\n\"You already accepted?\" she said. \"You only applied out west?\" \n\n\"Yeah. I had the two offers, quickly, and I decided this was the better for us.\" \n\nTrish was silent. She'd thought he might ask her to marry him, but instead he'd given her a fait accompli. She spoke French fairly well now. Apparently her trip to France would not be a honeymoon. \n\nShe finished the meal. She said no to dessert. He wondered why she was suddenly cool, what had gone wrong. Finally, she looked him squarely in the eye. \n\n\"Ryan, I made a mistake. I understand you have a wonderful opportunity. You were wise to take it. But I am disappointed. I would not have taken a position in Tampa, or Cleveland, or anywhere without asking you if you thought we could still be happy or survive as a couple. You assumed I would turn my back on my life here, my plans, and much of my work. I understand you think your work is the more important. I don't mind working things out with you. But it had to be WITH you. I will not take a back seat in my marriage. Thank you for so much. I wish things were different.\" He saw tears sliding out and down. \n\n\"I loved that guy who waited patiently for me in Missouri. I could have loved him.\" \n\nSaying that, she looked at him. She realized that he had no idea what had gone wrong. She smiled sadly. She understood the Lost Platoon families better than he understood her. \"For the first time, Ryan, I think my profession is more important than yours.\" \n\nShe remembered what Dr. Simms had said at that first seminar and realized she believed him. \n\n* \n\nTrish came to know Dr. Simms very well, but she came to call his wife her friend despite their age difference. Emily arranged a flight for Trish to Washington D.C. to visit some archives of World War I, saving Trish a hassle and some money. Emily said, \"If I can arrange it, Kansas City has a marvelous World War I museum...\" Trish jumped on the proposal; the museum was renowned. Emily flew her to Kansas City and she spent two days at the museum and talking with one of its historians (who knew Dr. Simms). It was a marvelous experience, the site was beyond good. She learned about unit historians from him. \n\nJonas smiled when Trish knocked on his office door. \n\n\"You know you can always come right in, Miss Finch,\" he said, motioning to a chair. \n\n\"I hate to do that,\" she said, sitting down. \n\n\"So,\" he said, \"are you ready for your trip?\" It was almost two years since she'd started her Phd program. \n\n\"I think so. Emily's planning to fly me to New York, and from there I'm off for Paris. I have appointments with...\" but she interrupted herself. \n\n\"General Marx gets things done, doesn't he? I mean, people do things when he shows an interest or has a request,\" she said. \n\nJonas Simms was smiling. \"Indeed. I told you that doors open for him.\" \n\n\"He called me,\" she said, \"after I told you I was having trouble finding the Army records from that time. You know, written orders, maps from the day they disappeared. Stuff that's sometimes in a file someplace. I told him what I needed. \n\n\"He said, 'Let me look into it.'\" \n\nTrish was shaking her head, and Simms had an expression as if he knew what was coming. \n\n\"And?\" Jonas asked. \n\n\"Two days later, I got a call from some civilian historian who had the file for the Lost Platoon's activities in France. He said they'd been misplaced probably since the war and a reorganization thirty years ago made it harder to find them. He was apologizing! \n\n\"Anyway, he faxed the contents to the office here at school. But that's not all. The next day I got a call from a GERMAN army historian, and he said he was searching for information. Four days later he sent me an essay in English explaining about the German withdrawal near Rochambeau the morning of the Lost Platoon's attack. I now have maps in English with all sorts of military markings, maps in German with all sorts of markings and translations, and...\" \n\n\"You're pleasantly exasperated, I guess. Pretty typical Tom Marx stuff.\" \n\n\"I don't understand it, I can't pay for it, and nobody even asked for a cent,\" she said. \"And, can you take some time and explain a lot of what I'm seeing? I'll bring it all by tomorrow or whenever you're free,\" she said. \n\nSimms laughed. \"Come by the house, Emily will be home tomorrow night.\" \n\n\"I'll be there,\" Trish said as she left. She spent the evening gathering papers, writing down questions, and wondering who Tom Marx really was. \n\n\"Wow, just wow,\" Simms said upon seeing everything. \n\nSo began her crash course in understanding military maps. She and Simms huddled for days and evenings, locating places and figuring gps coordinates by associations of old maps and Google maps with an area northeast of Paris near a little town. For some reason, this company commander's map had marks in pencil on vulnerable paper, regardless, and Trish now had the faxed copies.There was also a hand drawn map of the platoon's position on a finger, with a swamp and trenches and certain landmarks included. A note in the corner said, Moreau Farm, June 15, 1918. Was it Uncle Billy's drawing, she wondered? She had faxes of orders to the company commander and several other papers. ",
        "They poured over the papers. After days, Trish and Dr. Simms identified the likely position of the platoon on modern topographic maps, as well as the farm owners. There were false leads; other searchers had identified the platoon's location on a farm north of Rochambeau: the Morneau farm. Jonas Simms was convinced they were in error, based on the family name, similar topography, and not actual maps from the period. Trish was prepared to investigate both locations, although much of the Morneau farm was now a housing development. \n\nDespite their close work, Trish worried about her relationship with her advisor. \n\nDr. Simms called other candidates by their first names, some of whom he barely knew, but for some reason not Trish. She wondered why that was until she spoke with Emily, at a backyard gathering he held every spring and fall for his students. Emily planned to fly Trish to New York in just a few days. \n\nTrish was helping Emily set up for the gathering. \"Why does Dr. Simms call the other candidates by their first names but not me? I think we know each other better than any of the others, but he's never used it.\" \n\nEmily was mixing a bowl of salad and stopped to smile at her. She looked directly at Trish. \"Because he likes you,\" she said. Trish registered surprise. \n\nEmily smiled and explained, \"He doesn't call you by your first name because you're doing business and he wants to keep the professional distance. With the others that he advises, he doesn't fear he'll become their best buddy or cross a professional line. With you, he feels friendship, but until you get your doctorate, he wants to keep it professional.\" Emily's eyes were wide and sincere. \n\nShe knew her husband a lot better than Trish had known Ryan. \n\n\"It's not a crush. He did the same thing with a guy a few years ago. The one he just wrote a review of his book,\" she said. \n\nTrish said, \"Oh, I thought he was just formal with women.\" \n\n\"Well, he notices women but he's pretty consistently professional. With you he wants to be sure you see him as your advisor, not a guy hitting on you or anything.\" Emily finished with the salad and pulled some vegetables out of the oven. \n\n\"I'm ready to go to Europe,\" Trish said. \"I'm kind of scared to look for the Lost Platoon. What if I find nothing, after all this?\" \n\n\"Your dissertation's almost ready?\" Emily asked. \n\n\"Yeah, except for the last draft and resolution of the Platoon's situation. It's a hole in the story. I've interviewed people of three generations. It was quite a crisis in 1919...A lot of people were just devastated around here,\" she said. \"They had no closure. Some wrote their congressmen, Senators, President Wilson.\" \n\nEmily shook her head. \"I hope you find them. It's not very likely, is it?\" \n\nTrish shook hers. \"I'm going to the last known position, look around there. The Germans say there's no record of an infantry attack on that date at that location, nor of taking time to bury a bunch of Americans\u2014the Germans were pulling back that day. There was a big artillery bombardment to protect their withdrawal. There's a swamp right there, so maybe they went into that and were machine gunned or something. Who knows?\" She seemed resigned to failure, if it should happen. \n\n\"You have a plan for being over there?\" Emily asked, knowing there was no way her husband would let Trish go to Europe without an itinerary. \n\n\"I have appointments with the mayor of the town, a nearby museum director, some old guys in a nursing home, and I think the local priest. Also some guy who wrote a book on World War I in that area. I read the book, he hardly mentioned the Lost Platoon except to say it's final location was in question. But I'll be busy. I also have some days to wander the woods, if I can find where the Platoon was.\" \n\n\"I hope it's worth your while,\" Emily said. \n\n\"I'll see what the locals think. Hopefully it will be the denouement.\" \n\nEmily smiled. \"Practicing your French again, huh?\" \n\n* \n\nSimms insisted on knowing everything about her trip, since she'd be flying alone. She promised to keep him updated. He was nervous about the trip, and didn't want her to notice. She was nervous, too. \n\nShe met with him at his house the night before she left. He said, \"I may, uh, contact you to check on things. I don't want you feeling abandoned. Sometimes history is a lonely subject, alone in the stacks, or climbing over hills and through cemeteries.\" Trish smiled at that and saw Emily nodding, as if to say, 'Told you so.' \n\nEmily flew Trish to LaGuardia privately, even letting her sit in the copilot seat for the flight. Trish found it exciting to sit on the right as the plane landed. \n\n\"Be sure to keep Jonas aware of everything,\" Emily said. \n\n\"I will,\" Trish promised, as she lugged her bag to find the Air France terminal. \n\nIt was the longest flight of her life, from LaGuardia to Paris. She had time to think, read, and wish things were different. Originally, she hoped Ryan would accompany her. She missed him, several months now. \n\nCHAPTER 6: TRAVEL IN TIME \n\nThe inn was run by an old woman who introduced herself in English as \"Audree, just Audree\" and proceeded to the routines of the inn. Breakfast at seven, not after 7:30, room cleanings, run of the house. It was at breakfast that they talked. But for her, the inn was empty. \n\n\"Why are you here, mademoiselle?\" she asked Trish, perhaps to test her French. \"Rochambeau is not a tourist attraction.\" \n\nEmily enjoyed using her French. \"I'm studying history. Something happened near here, to some American soldiers in World War I. I was hoping to find out what happened to them.\" \n\nAudree was nodding. She was perhaps 65, certainly not close to the World War I generation of a hundred years ago now, but old enough she may have spoken with them before they all passed. \n\n\"So much has happened since then,\" Audree said, sadly. \"We have... the Germans took all of... the First War is now almost forgotten around here. We were occupied in the Second. We had Jews, they are all gone now. We lost all our boys to work in German factories, a generation. We had... collaboration. Resistance. Maqui. The Second War haunts us. If you were here for that, there would be trouble. Feelings are still very hard between families of the Resistance and those of the collaborators. Some are both.\" \n\nTrish saw the emotion at lost lives, tragedy in lives changed by evil before Audree was even born. Many had remarked on the relationship of the First to the Second World War; here, the lines were probably even more indistinct. \n\n\"There is, to the east, a place where there were trenches, from the First War. The trenches are mostly gone, but some on the Moreau farm remain, or did when I was a child. We would run along them, but they were eroded and overgrown. I think that might be the place to start. Or maybe you'll see how hopeless it is.\" \n\nTrish nodded, as if admitting she was close to defeat, but really more determined. \n\n\"Thank you so much. I planned to visit the Moreau farm.\" \n\n\"Oui, the old man still lives, he is perhaps 99? Not of the generation you seek, but they are all gone,\" Audree said. \"He would have known them.\" \n\n\"Is he... lucid? Capable of remembering?\" asked Trish. \n\nAudree laughed. \"Capable? He will tell you everything and more. But he will answer the question in his head, perhaps not exactly the one you asked. And be careful: he pinches. It's out the dirt road to the east, on the north side of town, not the paved one on the south side of the village, that one turns south.\" \n\n\"I will. I have an appointment with your mayor... Monsieur Gadot? In a few minutes. Tomorrow I think I will go to the Moreau farm.\" The Moreau farm might be the site she wanted anyway; the last known position of the Lost Platoon was east a few \"clicks,\" as Dr. Simms said. \n\nTrish was pleased. Audree saw her hope. \"Just don't touch anything you don't understand. Bombs still come up from the ground every year. Especially on that farm. From the First.\" \n\n* \n\nShe walked to the mayor's office, because she didn't have the money to rent a car. She wore loose pants, a light shirt, a jacket, light hiking boots, a ball cap. It was June and would be warm. \n\nPerhaps the Moreau farm was their last location. It was east of the town, and about the right distance, according to Audree. She had copies of the orders to the platoon's company commander, the description of their last known position, the unit diary for the days before and after their disappearance, a report from a captain sent to investigate the unit's disappearance, and an old map with the platoon's location and the plan of attack for that morning, June 23, 1918. The pencil on the attack map was very faded, but Trish had it digitally enhanced, at some expense. Rochambeau was just two point five kilometers west. There was a trail or road marked nearby, communications trenches and the platoon's front line trench marked. She had the GPS coordinates entered into her phone. \n\nMonsieur Gadot was older than Audree, tall and thin. \"The First World War?\" the old guy asked. \"Yes. Moreau Farm.\" He mumbled something that Trish did not understand. \n\n\"Pardon?\" she asked. \"I didn't hear what you said.\" \n\n\"There is the ridge there. Some trench. No good for farming, overgrown with weed and scrub trees now. They said since the First War.\" \n\n\"Do you know anymore about it?\" Trish asked, but the man shook his head no. \n\n\"We played there, army and cowboys and Indians, growing up in the DeGaulle years. We called it Cr\u00eate Folle.\" Trish didn't understand at first, but then 'folle' came to her. Fool. Madman. \n\nMadman Ridge. \n\nHe directed her to the Moreau farm, said the road was bad and might destroy her car. \n\n\"I will walk, then,\" she said. \n\nThat first evening in Rochambeau, Dr. Simms called her. She was no longer surprised. \n\n\"I intend to visit the Moreau farm east of town tomorrow,\" she said. \n\n\"Good luck, Miss Finch. Let me know what you find, if anything. And, please, be careful.\" \n\n* \n\nBy the time she reached Moreau farm, Trish was perspiring. The day was hot in the sun, and the exertion made her thankful for the two water bottles she'd filled at the inn. There was a brick pylon where a dirt driveway intersected the road from the left. Trees lined the drive, but thinly, and crops were growing to left and right. At the end of the drive was a small farmhouse of white stucco, a barn, and a covered bin for silage, she guessed, Beyond were more fields, but to the northeast the ground rose rather distinctly. It was not terribly high, but it overlooked all of this land and would afford a good view were it not for the trees. The trees were not large; perhaps the soil was rocky, thin, or poor. The trees clung to a measly life. \n\nShe checked her copies of the maps while sitting under a tree beside the drive, checked her gps. Dr. Simms had taught her about contour lines and fingers and ridges and cliffs, and she'd identified saddles and spurs around Sky Grey and found them on maps and the old military maps of this area. She understood all of these things before he'd started with her, but he was right: the ground never looked the way the map seemed to describe. She understood the difference between contour lines and contours. \n\nBefore her was a ridge, actually a finger sloping from a hill some mile or so away. She assumed it was the platoon's last known position. It probably was. \n\nTrish reached the small house, thankful for the shade of the trees near the house. There was a porch that brought some relief from the sun then. She knocked on the wood screen door. \n\n\"Ha!You never saw us!Ha!\" she heard from behind and in French, startling her so she jumped. Two voices, from little people. She turned to face them but there was no one there. She looked about. \n\nBehind her, she heard a man say, \"You must look up.\" \n\nShe raised her eyes, and in the tree to the left she saw a thin arm stretched around the trunk and holding a branch in a small hand, and then a girl's head with a smile peeked around the tree. Nine, maybe? She saw movement to the right and noticed a boy, perhaps eleven, standing on a larger branch in another tree across the lane, smiling as if to say \"gotcha.\" \n\n\"It's their way of saying welcome,\" the man said as she turned. He was short, her age and height, with a day's growth of beard and dark hair and eyes. \n\n\"Hello,\" Trish said. \"I'm Trish Finch. I was told that a man lived here, and I was hoping I might talk to him.\" \n\n\"I live here, and I'm a man,\" he said. \"Jacques Moreau.\" He studied her closely, unusually. \n\n\"No... I mean yes, but I was told an older man might tell me about the history of the area.\" \n\n\"Come in, Miss Finch. I heard that right?\" he said, almost as if it meant something to him. \"My grandpa is inside in the back room. It is the only one air conditioned, we have it running constantly in the humidity; it helps him breathe. He must be the one you seek.\" \n\nHe held the door for her \n\n\"Yes, Finch, thank you.\" \n\n\"You are American?\" he asked, pointing to a chair in a small living room with a couch, coffee table, two chairs, a full case bookshelf, and assorted toys. \n\n\"Yes. I've never been to France. It's my first chance to speak French outside a classroom or one trip to Quebec years ago.\"She sat in the one chair, he took the near side of the couch about three feet away on the other side of an end table. \n\n\"Ah, I noticed how slowly you speak, but very well. You must have a talent. May I get you some water? Lemonade?\" \n\n\"Lemonade would be great. Thank you.\" \n\nHe left the room and she heard him in the kitchen. He opened the kitchen door and yelled something to the kids, and she heard the girl answer back something. He came back with lemonade with ice in a tall glass. \n\n\"So why do you visit us, Miss? \"He was looking directly at her, sipping his own lemonade but very serious. \n\n\"I'm a history student, working on a Phd. I'm studying the impact World War I had on my hometown. Near here, in 1918, was the last known position of an American platoon that never returned home. They died or something. June 23, 1918. It was quite a loss for such a small town as most of them were from. For all of western Ohio, really.\" \n\nHe was quite good-looking, she thought. His eyes were so direct and unwavering. She wondered if she seemed foolish to a man who worked the land, a more practical occupation than studying history. Who comes so far at such expense to find out what happened to some guys a hundred years ago? \n\nShe answered herself: Historians do. \n\n\"World War II was devastating to us in Rochambeau, you know. The resentments remain. There were many collaborators here, many acted out of fear, some were guerrillas or Maqui, one woman, who had her hair shaved in retribution, killed herself and they let her body hang...\" \n\nHe said nothing but steadily looked at her. \n\nShe was quiet, and finally he went on. \"But here, on this farm, we are famous.\" \n\nShe detected an ironic or sarcastic quality to his tone. \n\nHe continued,\"We set a record, four years ago. We are still fighting not World War Two but World War ONE. You see, in our fields, we have an old trench from World War I, three trenches actually. What's left of them. There was fighting here early and then late in the war. Yes, there were Americans here, but for all these people, the Germans and British and Americans, everyone who was here in that war, it's over. You see?\" \n\nShe did see but not what he was getting at. He seemed angry at the world, and he wanted her angry, too. \n\n\"For poilus and tommies and yanks it's all over. They were killed or injured or captured and the survivors, they went home.\" He was speaking with such emotion, she wanted to say, it was a hundred years ago! \n\n\"I didn't mean to upset you,\" she said, holding the cold wet glass to her cheek for some relief from the heat, wondering what was so unnerving to him, hoping her simple common gesture would bring him calm. \n\n\"No, no,\" he said almost in distress, as if he were having trouble making himself clear. \"You must understand, at Moreau Farm the war is still being waged. The Great War is not over.\" \n\nHe paused, obviously with more to say. There was a passion in him that demanded respect.. \n\n\"We have yet to defeat the Bosche. You see, the last casualty of World War I was here, on this farm.\" \n\nShe spoke up, hoping to calm him if she could. \"I thought the last action was to the east and north in 1918?\" \n\n\"No, you don't understand. No,\" he said, almost incoherently to Trish, \"The soldiers stopped fighting and went home. Their war was over. The politicians signed a paper: It is over, celebrate! But farm wives, they fight on, for them the war goes on now a hundred years. My sister Amie. The children's mother, almost four years gone now.\" He looked angry. \n\n\"She was the last killed in World War I.\" \n\n* \n\nOf course, Trish knew that bombs were regularly making their way to the surface at all the modern battlefields. The freeze-thaw cycle exposed them; farmers near a battlefield were cautioned to watch carefully where they plowed, to check for unexploded ordnance of any type. Duds could prove deadly a hundred years later. Hand grenades, landmines, artillery shells, bombs dropped from planes: all were deadly threats to generations to follow. Dr. Simms had warned her about poking around unmarked, unchecked, perhaps unremembered battlefields. The European governments even had a highly paid and highly trained unit to recover or dispose of unexploded ordnance whenever found. \n\nJacques left her alone then to check on the children, who a few minutes later followed him into the living room and sat beside him on the couch. \n\n\"Cheri, Jean, this is Miss Finch. She came here all the way from America.\" The children perhaps had calmed him. \n\n\"Hello, Miss Finch,\" they mumbled looking down, suddenly shy at the close encounter. \n\n\"Hello, Cheri, Jean. That was quite a fright you gave me outside,\" Trish said and smiled. \n\nThey had little smiles now, but said nothing for a few seconds. Then Cheri said something to Jean that Trish could not hear. Trish raised an eyebrow. \n\nJean said, \"She thinks you sound funny.\" \n\n\"I'm still learning French. I speak English at home,\" Trish replied. \n\n\"Oh,\" they nodded. \"Could you say something in English?\" Cheri asked. \n\nIn English, she said, \"When I get home, I will tell my parents I met two French children named Cheri and Jean.\" \n\nThey laughed, probably not understanding. Jacques hushed them and told them to play within sight of the house, and they ran off. \n\n\"I can tell you a lot about what happened here, but my grandfather is the one who knows the most. He even has some papers. Come with me, bring your lemonade, we'll let him stay in his air conditioning,\" he said, turning and leading the way through a dining room and then a passageway. \n\nHe knocked, opened a door, and Trish felt the welcome of cool, dry air as she entered a small room with a daybed and a rocking chair. An old man was rocking gently in the chair. \n\n\"Grandpa,\" Jacques said, \"this lady has come to visit us from America. From Sky Grey, Grandpa.\" \n\nShe'd not said Sky Grey, assuming they'd not know it. Jacques recognized her name. \n\nThe old man looked at her closely then. He had the mottled skin of great age and outside work, but his eyes were not dull. He could see, and Trish thought she saw memory there, intelligence. \n\n\"Her name is Miss Finch, Grandpa. Miss FINCH,\" he said, spelling it for the old man. \n\nSilence. Trish stepped forward. \n\n\"I'm Patricia Finch, from Sky Grey, Ohio, and I'm trying to find out what happened to the American platoon that was posted here in June, 1918. The platoon leader was my great-grandfather's brother.\" \n\nThe old guy, sitting in his rocker, held out his hand and Patricia shook it, but the guy did not let go. She thought he was thinking and wishing. Wishing? ",
        "\"I met your great-grandpa's brother once. I was a child.\" \n\nTrish almost stopped breathing. He did not want to let go. Nor did she, perhaps for another reason. She realized his mind was sharp. Other things were sharp, also. \n\n\"We were playing up on the ridge. The one we named for him, Madman Ridge. We didn't do that much because he was up there, our parents told us to stay away. He would watch us from up in a tree, or a hole in the ground, so many bombs went off around here there are still holes. We'd see him but he'd stay far away, unless we got too close to the lower part of the ridge. He chased us off, swinging a stick or throwing rocks.\" He laughed, or cackled.\" Anyway, one day the others all ran down the other side around the pond down there, more of a swamp really. That's the edge of our property. I went in this direction and suddenly he jumped me. I was ten? This would have been about 1927.\" \n\nShe finally extricated her hand and sat on the daybed. Jacques stood. \n\nNine years after the war? How'd he lived? Did he work? \n\n\"Did he hurt you?\" she asked. \n\n\"No, he saved me. He smelled. His clothes were just rags. He was very, very thin. You see, I was about to run into this stake sticking up out of the ground. It was hidden in the weeds and thorns, vines, but if I'd fallen on it...\" He shook his head. \"He pointed to it, walked me by it, holding both my arms, and once I was on this side of the slope he pointed to our house here and let me go. I ran away.\" \n\n\"A few years later I looked for the stake but it was gone. Maybe he was growing tomatoes,\" he said, and laughed thinly. \n\nHe had trouble getting his breath, this was exciting for him and hard, he must have been close to a hundred years old. \n\n\"Where'd he live? How'd he live?\" she asked. \n\nThe old guy looked at her and smiled. He liked being old. Since he got old, every woman he saw was pretty, and this American girl who just wanted to know about her kinsman was more than most. You're a flirt, Moreau, he thought to himself. He started to laugh but it started him coughing. He blamed the Americans for the state of his lungs, too. Marlboros, even though he quit in the 1970s. \n\nWhen he caught his breath, he smiled at Trish, and she thought, he's flirting! He's liking this attention. He feels more important because I want to know what he's kept locked up for decades. \n\n\"He would sneak down to our house in the dark, usually. Other houses toward Rochambeau. He'd go through garbage, sometimes someone would see him by the road and leave out a coat or used clothes, some apples or leftovers. He became very thin over the years; we'd not see him for weeks on end and then he'd turn up. Some guys saw him fishing a few times in the pond, but there's not much in there but some small stuff. A few times people saw smoke from farther up the hill, well beyond the ridge with the stakes.\" \n\nTrish was quiet, imagining him slowly wearing down, homeless, exposed to the elements, deranged or obsessed or something crazy. \n\n\"He never hurt anyone?\" she asked. \n\n\"No. There were rumors, but no one ever claimed he hurt them. A few were tackled or knocked down, but just on that one part of the ridge. Otherwise he'd just watch whoever was near. He'd even wave a few times, when people were far away.\" \n\nTrish was afraid to ask her last question. \"What happened to him?\" \n\nMr. Moreau smiled, sadly. \"It was harsh in these parts the one winter, maybe 31-32 or 30-31. I don't remember, but it's on the stone. We didn't see him at all that winter, and come spring some kids found him. Up in the rocks on the hill beyond the ridge he'd put up some pallets and wood and built a shelter of sorts. But he froze to death, they thought, though he may have starved. His hands and feet were frostbitten before death, so he may have died either way.\" \n\nTrish sat back, as if she'd reached an end of sorts. \n\n\"Where'd they put him?\" she asked. \n\nThe old man seemed to get a glimmer, as if he were suddenly enthusiastic. \n\n\"They found some papers with him. No diary, not like that, but wrapped in oilcloth and rubber sheet. In a rusty German ammunition box he must have found, not one of the wood ones. He'd gone to trouble to save it. The first paper printed in English block letters, PLEASE BURY ME ON THE LOWER RIDGE. WITH MY BOYS. It was signed, FINCH.\" \n\nQuiet again. Then he went on, without prompting. \"I know all this because they gave it all to my father. Our farm, after all, and if someone'd come looking we'd know as much as could be known. Would you like to see the papers? His effects, if you will.\" \n\nPatricia jumped up, her heart racing. \"Oh my God, yes! Do you know how much the original documents could help? For verification? Credibility? Yes, oh please.\" \n\nJacques, sitting beside her on the daybed, patted her hand and said, \"In that chest, Grandpa?\" \n\n\"Yes, you know the one. And bring me a lemonade and refresh our guest's.\" \n\n\"Yes, Grandpa, of course, Grandpa, anything you say, Grandpa,\" Jacques said and laughed. Trish heard him yelling then for the kids, checking on them. \n\nIt was silent in the room. \n\nTrish said, \"Did he leave other writings, Mr. Moreau?\" \n\nHe nodded. \"Yes, a little military stuff no one here could make sense of. Probably because we could translate the English to French but the jargon is not the same, so our veterans couldn't figure it. Probably not important. There was a long list of names, side by side; as if there should be a picture above it and each person identified. Then there's a page, well, here he comes now.\" \n\nJacques was carrying a small wooden chest. He unlocked it with a key, saying, \"I've wanted to know what was in here for all my life. At least you kept the key!\" \n\nHis grandfather harrumphed and smiled. \"There should be a small ammunition box. Get that out. And at the bottom, wrapped in cloth and tied with a rope, it'll be heavier.\" \n\nJacques found it, actually a World War I German metal box for ammunition. He opened it for his grandfather, who looked in. Then he reached in with both hands to the bottom of the chest and pulled out a large package that clinked as metal. \n\n\"Here, Miss Finch. It rightfully belongs to you, now,\" said the old man handing her the box. \n\nShe found yellowed papers, a wallet that had William Finch, USA on an American identity card; some money. There was a St. Christopher medal, army identity tags. Pictures! She found the papers, SKY GREY PLATOON in big letters, listing everyone in the platoon, by squad and team, as best she could figure. Not in column, but in rank side by side. Several pages, as if they should be adjoined sideways head to toe, and to the right a big rock and area he labeled Lafayette Woods. Perhaps Dr. Simms would know what to make of it. She saw the precise instructions for burial, very clear compared to the other things. There was also a note, as if wanting to explain to anyone back home why Billy Finch lived and everyone he was responsible for died. \n\n\"23 June 1918. At 0515 hours, I was at battalion briefing. Jack Johnsons? obliterated trench. Platoon went west. I know where each man is, as I look to the north. Their gravesite is a garden of knives.\" Added almost as an afterthought, was this statement: \"Took bayonets, danger to children.\" \n\nShe read it, did not understand some, understood too well others, and decided she'd like to talk to Dr. Simms or General Marx. \n\nJacques opened the roped package of cloth, and there were dozens of old, rusted bayonets. \n\n\"I am confused by this also. If I come back tomorrow in the morning, could you take me up on the ridge. To where he's buried? Where he says his men are?\" \n\nJacques said yes, looking happy she'd be back. \n\n\"Then I need to get back to Rochambeau. I have a phone call to make. I'll try to be here about 9 tomorrow, if that's okay?\" \n\nThe old man reached out his hand, and she grasped it. He put his other hand on top. \"I am glad you have come. It's time the issue be put to bed.\" \n\nTrish thought, is he flirting again? Did he know how those words translated? She looked in his eyes and decided he knew exactly what he was suggesting, without making it obvious. \n\nJacques said, \"Grandpa, you are a dirty old man.\" He laughed. \n\nGrandpa Moreau howled, but then developed a coughing fit that soon passed. His eyes were twinkling. \n\nJacques walked her to the door. \n\n\"I look forward to tomorrow. I haven't been up on the ridge in a year. We'll see what we find. I know where they buried your relative, though.\" \n\nTrish thanked him, looked at him a moment, and left, hesitating to look at those dark eyes again, but touching his arm. A strong arm. \n\nIt was mid-afternoon, and she'd missed lunch without a thought. She thought two kids were following her down the lane, but she couldn't see them in the trees nor on the ground. \n\nBack at her room, she studied the papers and her gps, her maps, and decided the spur of the hill was the last known location of the platoon. The pond or swamp was likely the one marked on the old war map, with the arrows pointing the direction of attack around it. \n\nShe had an email message that discouraged her. It was from the granddaughter of Clara Lancaster Jones. \n\n\"Sorry to inform you that Clara passed away yesterday of natural causes. She was so hoping for your success.\" \n\nShe called her parents that evening and told them about her search, that she hoped to learn something soon. She asked them to tell Dr. Simms, should he call. \n\n* \n\nA sober doctoral candidate trudged to the Moreau farmhouse at 9 a.m. the next morning. It was June 23, coincidentally, a warm day again. Jacques answered the door immediately. He was clean shaven, she noticed. \n\n\"Hello, Miss Finch. How are you today? It looks like we have a great day for a walk in the woods.\" \n\n\"We do. Jacques, are you ready to go or do you need to get the kids or what?\" she asked. \n\n\"The kids are with their father, at my request. He works when he feels like it, which is rarely, so he did not mind having his own children. My father is visiting his best friend, a lady, I have no knowledge what he could be doing, but I suspect. I have plenty of water for us, and some sandwiches if it gets to lunch or you just want to eat. Are you ready?\" \n\nTrish smiled. He wanted to be alone with her. \"Please, I'm ready, I have some water also, some granola bars, and my first name is Patricia. My friends call me Trish. No one calls me anything but Trish.\" \n\n\"It's good to know you have no enemies,\" he said, smiling and closing the door. They went around the house and followed a track through the crops. \n\n\"Did you learn anything about the papers, last night?\" he asked her as they reached the edge of the field twenty minutes later. He helped her up the rocks there, a pile probably removed from the fields over the years. \n\n\"I think so. I think the platoon's last known location was the ridge or spur here. GPS will confirm that in a few minutes, but it has to be so. My advisor and I went over the maps pretty thoroughly back home.\" \n\nThey climbed a gentle slope and then followed a small ravine for a hundred yards when Jacques stopped. They were among trees, but not old growth by any means. \n\n\"Did you recognize the trench? We've been in it for a hundred meters or so.\" \n\nShe was surprised. She'd thought it natural. \"No, I didn't. This is not a front line trench, is it?\" It was grassy, the bottom was not mud but seemed to drain. \n\n\"No. It was a trench to get to the big ones. It used to be filled with water much of the year, so I dug an outlet down there,\" he said and pointed to where they'd entered. \"It worked. Cut down on mosquitoes and kids even come here to see a trench from the war once in a bit.\" \n\n\"Is it safe to play here? I mean, those old bombs...\" she said. \n\nHe stopped and looked at her. \"The Germans were here, took this ridge early in the war. The British tried to take it back and did, finally. In 1918 an American unit was here. The Germans were just the other side of the valley.\" He pointed north. \n\nHe didn't go on, just stood there in the trench. \n\nHe finally said, \"My sister found Cheri and Jean digging up a Marten Hales Number 2 hand grenade, right over there at the base of the hill,\" he said, pointing down the slope near where they'd entered the trench. \"She took it from them, made them run to our house, and was putting it down when it went off. Not a huge bomb, but enough if one is not lucky. It had probably been there 96 years, working its way to the surface.\" He was quiet. Trish felt his anguish. \"They used radar then in the area, but who knows if that is thorough? No, it's not safe.\" \n\nThey continued walking up the increasingly shallow trench to the top of the ridge, or spur, really. The trench just ended among scrub trees and tangled undergrowth. There was no trench here, nothing but uneven dirt and rock and trees growing haphazardly, as if the ground were churned long ago. They walked further up the ridge, along its northern military crest, as Dr. Simms had explained to her. They picked their way around that mound and this pile, higher, toward a hill in the distance. \n\nTo the right was a huge depression, many yards across and several deep. Trees and bracken were thick, and water filled the bottom. \n\nThe ground levelled then but with a slight depression running the length of the ridge. Getting through the bracken was a problem still at times. Stickers and thorns took a toll, and even though in long sleeves and pants, both of them were pricked and scratched and had spots of blood on hands, arms, and legs. Trish stubbed her toe and stepped on some small rocks just below the ground cover, uncomfortable but no problem. It happened again a few yards on. \n\nFarther on was another large depression, this one with brackish water in the bottom. There were other small holes along the way. Artillery? Trish wondered and came to assume. \n\nAs they reached where the ridge/spur joined the hill, Jacques grabbed her hand and led her around a distinctive rock. On it was carved, barely discernible now, FINCH 1931. \n\n\"He's buried about five feet down right there, I've been told,\" he said, pointing under the base of the rock. \n\nShe stopped and looked. Dross, leaves, and detritus covered the spot. It was large enough, if they'd not encountered other rocks. \n\n\"I was told there was a large depression, a shell hole, so the digging was practically done. They just cleaned it out and then filled it in.\" \n\nShe ran her hand over the name on the rock. She took a picture with her phone, hoping the resolution would show the chiselled name. She leaned close to the rock. \"Where are your men, Uncle Billy?\" she whispered, hoping it was not noticed. \n\nJacques could not hear, but he saw her. He didn't ask, but she answered. \n\n\"Let's walk down the spur again.\" \n\nThey did. After about 50 metres they stopped and pulled the tangled weeds apart and looked at the ground. Standing on one of those protruding rocks, Trish pushed off and it moved, just a bit. Getting down on hands and knees, she cleared around the protrusion she'd stepped on, and Jacques looked on from above, ripping and pulling vines away. She dug around the projection and she realized it wasn't a rock. She recalled she'd stepped on several of these protrusions, stubbed her toe several times. She gave a cry. It was the muzzle of a rifle. \n\n\"What is it?\" Jacques said. \n\n\"They're here. Below our feet. The Lost Platoon.\" She spoke in English, not realizing, and then she translated for him. \n\nThe bayonets had been removed by Billy, perhaps after the incident with Mr. Moreau, but the muzzles remained, some above and some an inch or so below the surface. \n\nShe cried then, not a lady's sad cry, but the wailing cry of a mother who has lost a child and just found the body.She wailed for a father finding a son or daughter deceased, for all those mothers and fathers and wives and brothers and sisters who died without knowing what happened to their child or brother far away. First she was frantic, scraping with her fingertips at the dirt around the muzzles of the rifles, finding one, two, seven, more and more, and there they were lined up, prepared to attack: concussed and suffocated and dead. \n\nShe imagined them seated on the firestep, rifle butt on the bottom of the trench, bayonet sticking 16 inches beyond the rifle, perhaps ten or 14 inches above the soldier's helmeted head. She imagined them now as skeletons just below her feet. Their attack never left the trench because it collapsed, inhuming them. \n\nJacques held her, kneeling in the bracken, and she leaned against him. He realized the horror of this place he'd lived near his whole life. How awful, she thought. They've been here all along... \n\nAmericans, he thought. He stroked her hair until she was calm. \n\n* \n\nThey retraced their steps to his house, slowly, now early afternoon, holding hands, and she sometimes leaned against him. Then he put his arm around her. Trish was exhausted, as much by the emotional wrenching she'd felt as the mile or so they'd walked. They sat together on the couch, resting, not wanting to talk about bombs and wars, or so many dead men, or his sister, or wars long ago and still killing good people. It yanked at her; his sister died for a war quickly being lost to memory, leaving two little ones... \n\nThey kissed as if kissing would push thought away. His hand worked its way under her shirt; there was a need in her from so much emotion. She felt him through his pants, and he was hard, so hard. \"Have you a condom?\" she asked. \n\n\"Oui,\" he said. \n\nThey were against each other, kissing hard, painfully. He tore at her clothes and she his. He was hard and naked from the waist down, and she stood and let him pull her pants and panties down. He kissed her bottom and squeezed it with each hand. He had a condom and she saw him putting it on. \n\n\"Good, hurry, Jacques!\" she said, pulling him over from the couch. He thought that she was beautiful and sexy and she faced the wall as his cock sought what it hardened to seek, slid up and along her until it found her opening, and was in her because she was so wet. Soon she was groaning with his fullness. \"Yes, please, yes,\" she said, and things like it, loving the pure concentration on her sex, the filling and emptying and filling. \n\nShe turned and pulled him by hand to the couch, where she lay back and spread her legs wide. \n\nShe had never done this, not like this, not with someone she hardly knew, and for a moment she wondered at her willingness. She pushed her wonder aside. \n\nHe was filling her with his need to get every bit of him into her, her legs spread and his weight on her and his hands on her breasts. \"I am going to cum,\" he said. \n\nShe said, \"Do it. I want to feel it, so much... Jacques, Jacques,\" and she felt his swelling as the urgency built, his rapid thrusts more arduous, and spurts then, inside her, exhausting her and him, his groan of climax and her sigh of peace. They relaxed, and he held the base of his penis to hold the condom on as he withdrew, and she felt empty. They were together for sometime, half naked, as he softened, and still she loved the moment, the warmth, the touch of a man with her. It was as if she were alive again, no longer surrounded by so much young death. \n\nThey rested side by side, slumped on the couch. After some time, she spoke. \n\n\"It was wrong, Jacques. I don't know you. You don't know me. I don't know why...\" \n\nJacques smiled. \"You are beautiful, we are young, you have lived with this painful event for a long time. I do not have someone in my life. No woman.\" \n\nShe thought of Ryan. Always Ryan. \n\n\"It will not... Please, don't,\" she started and stopped, unsure what she wanted to say. \n\n\"I will tell no one. For me, it will be a great and secret joy,\" he said. He kissed the air. \"Perhaps when my grandpa asks me about today, I may wink at him. But I will never admit it. I did not expect it. Perhaps I hoped, though,\" he smiled. ",
        "She walked back to Rochambeau later that afternoon. She insisted Jacques let her go alone; she needed to think. She had not understood her emotions, nor the interplay of so many, so much, and so rampant. Perhaps her empathy for the families of the Lost Platoon affected her emotionally. \n\nShe didn't regret it, she was even glad for it, but she wanted that passion with her next lover or perhaps husband, not a man she hardly knew. Jacques was in the right place when all the sadness and loss of love overwhelmed her judgment. \n\nThe emptiness of this trip, without Ryan, added to the loss of the platoon so long ago. She wanted it to be her honeymoon; now Ryan was gone, and it was a trip to a graveyard. She was no dispassionate historian. \n\nShe smiled. Boy, did you get lucky, Jacques. She thought he'd agree. Perhaps I did, too, she thought. \n\n* \n\nCHAPTER 7: THE LOSS OF THE SKY GREY PLATOON \n\nIt was a cool day in early March, 1918, that 23-year-old Billy Finch stood before his platoon. It was the end of their final leave before transport to France, and the platoon was drawn up in the square beside the train station. Often the train didn't stop in Sky Grey, but today it had been arranged. \n\nThe crowd, mostly family of the young soldiers, was impressed:the uniforms were sharply pressed and clean, no Irish pennants flew, every boot gleamed. Billy Finch was a stickler. He was leading 42 men mostly of Sky Grey, Greenville, and Eaton into the Great War, and he was determined they would look, act, and fight like American soldiers should. Like Ohio and Indiana soldiers should. Like Sky Grey soldiers should. \n\nThe families were standing to the side, in an area marked for them. Billy, in front of the platoon, called it sharply to attention and with a slap, the platoon was stiff. He waited a moment, and announced to the platoon that he would speak to their loved ones. \n\n\"Parade, REST,\" Billie said in a tone he reserved for parade commands. His soldiers assumed that stiff but more relaxed position with hands clasped behind them. \n\nHe walked over to the families and spoke quietly. He went to each in the crowd. Each name he said, a man or woman stepped forward. He shook each hand and said, \"I will leave no one behind, as long as I live.\"It took a long time, longer perhaps than he had intended, but each father or sister or wife or mother had Billy Finch's promise that a beloved boy would not be left behind on the battlefield. It was not so remarkable a promise; many military leaders had made it in wars stretching back to Megiddo, but it was seldom possible to keep it. \n\nMany of the parents must have thought, My God, he's just a kid himself! He stood in front of his men then and called them back to attention. \n\n\"Atten, HUH!\" he yelled in that voice that made his mother smile. Billy, acting important. \n\nHe spoke to all, including his men. \"I paraphrase now the words of Colonel Stanton from last summer, July 4, 1917, as he stood before the grave of the Marquis de Lafayette: \n\n\"'We pledge our hearts and our honor in carrying the war to a successful conclusion.'\"Lt. Finch then looked solemnly at his men. \"As I told your families, I will not return without all of you.\" He looked at them seriously. A band played then, and a singer rendered a verse of the Star-Spangled Banner. \n\nIn little Sky Grey, many moms and dads checked mailboxes every day in the hopes of one last letter finally reaching them from New York, or after some weeks from Portsmouth or Le Havre in France. Finally it happened, and little Timmy Brown's postcard arrived from France and word quickly spread to the other 14 families of Sky Grey doughboys, and from them to the parents of boys from all the little towns in eastern Indiana and western Ohio now that telephone service connected the towns. Other letters arrived from various boys and were shared or mentioned or cherished. Billy Finch's mother received a long letter in May detailing the trip\u2014seasickness and cold waters and seeing Ireland in the distance, smells and tastes he'd never experienced before. \n\nHis last paragraph informed her they were moving up. She was not familiar with that phrase but she felt its ominous implication. It was 1918 and the war was four years old\u2014Billy was excited to be part of it. The Yanks were there, trained as well as Pershing could and eager. \n\n\"Billy!\" his mother cried out in her husband's arms. Dad cried too, in his way. Billy, please God, he thought. Please. \n\n* \n\nBilly proved to be a strict leader, careful in every detail, and his platoon sergeant raised his eyebrow the first time he'd been surprised by his confidence. The sergeant had been in the army most of a decade now and was 24, just a little older than his lieutenant and only a bit cynical about the merits of recent civilians in HIS army, and recent civilian lieutenants at that. He'd intended to ignore Billy Finch until such time as he'd trained him, molded him, perhaps broken him in to the real army. \n\nBut Billy was 23, only a year younger, and for some reason he was not impressed with his own ignorance of army ways, customs, techniques, methods, and life. He'd come gangbusters from officer candidates course, and Harvey Lancaster from God-knows-where Missouri had assumed him to be like the last lieutenant: shy, open-eyed, and willing to learn from Sergeant Lancaster's experience. \n\nLieutenant Finch was willing to learn, but it would be corrections for actions taken, a quiet explanation out of the view of the men, a cocked eyebrow at most. Soon a chary relationship was founded. Harvey had to admit he'd not had a platoon leader like this one. Finch insisted on routine from making a bunk to reloading a rifle or fitting a gas mask. He insisted not as a petulant boss but as a concerned, educated leader. Do it right. He demanded that all common combat equipment be worn according to regulations\u2014and he'd measure that the gas mask was slung over the left shoulder to the right hip as designated, grenades clipped as he directed, ammunition in pouches as ordered, etc. etc. etc. Finch made everything into the tiniest, numbered steps, whether it was extracting and donning a gas mask or throwing a Mills bomb. Helmets were worn straight with chin strap tense. A bayonet was not rusty, and the interior of the scabbard was clean. Rifles were carried at proper and uniform angles, and covered with a light film of oil. The platoon looked good. Lancaster raised an eyebrow approvingly. \n\nHe feared that Lt. Finch might prove a bursting bubble of competence in the barracks, in field practice, or on the ship, and a sudden failure on the battlefield, so he reserved final judgment. Uniformity, practice, recitation\u2014Finch tested his men constantly. Lancaster watched, carefully schooled his lieutenant in the proper relationship with his platoon sergeant, helped him, and stayed out of his way. \n\nSome new lieutenants were too close to their men\u2014some had played ball together, dated the same girls\u2014that sort of thing that preceded army life. It was hard to break those conceptions. He didn't know the lieutenant's background except that he came from the same small town as a lot of the men\u2014though he'd been to college, unlike them. However, there was no inkling of prior relationships. Lancaster observed. He thought the lieutenant too good to be true, as he wrote in a letter to his mother near St. Louis. \n\nPlaced on a lonely line, bordered by wetland on the west and scrub hill on the right, the Sky Grey platoon was put in an old German trench, eight feet deep along the crest of a small rise. They modified it for its new purpose; the platoon worked. Billy was no slouch. Fields of fire were identified, stakes placed to identify them and ranges. Lanes for attack were identified; Billy assumed they'd be taking it to the enemy who was rumored to be on the next rise. Indeed, some mornings and evenings they'd hear the clinking of pots and metal coming from the other side of the swamp. \n\nThe trench had a new firing step now, low down and accessing cutouts in the parapet toward the enemy, and prepared exits for the next American attack. The trench wall was shored where it seemed weak. Boards and logs were found and the sucking muck of the trench bottom was somewhat mitigated; prepared for an attack, every man would rest the butt of his bayoneted rifle on those logs or firestep. Behind it a small parapet rose perhaps three feet above the forward trench parapet, unusually so, but Billy thought it might protect them from the occasional shells that landed in that direction. He looked at everything from the enemy's perspective one dangerous day, and the trench was largely unnoticeable. \n\nThey had no barbwire. \"We're taking it to the enemy,\" the captain said. They weren't expecting the Germans to attack. \n\nThe swamp to the west curved around the bottom of their rise to their front for 70 meters before drying\u2014perhaps that kept the enemy at bay. But they were as ready as virgin soldiers could be. Every day, the lieutenant checked third squad so second and first got busy because he never checked just one. His men grumbled, but every man was working, every watch was checked, and every rule was obeyed. The men who had not known him decided they didn't like him much. Even some who knew him were tired of his fuss. \n\nOrders finally came for the long-awaited, long-expected attack. Preparations were made, supplies moved up for weeks. The enemy had no inkling, the secrecy was intact; the generals were sure. There was no doubt it would surprise them. None. \n\nThe platoon would leave the trench at the beginning of morning nautical twilight, angle about the swamp to the front, extend left to join with the rest of the company, and hopefully surprise the never-seen enemy unit on the far rise just as the dawn became light enough to see. \"Sergeant, at zero four forty-five have them aligned along the step. Quietly, no lights. The order says secrecy is paramount. The enemy should have no idea before we arrive in their faces. I'll get back around zero five fifteen from the final brief, notify of any changes, and we'll take off.\" \n\n\"Yes, sir,\" Lancaster said. \"Zero four forty-five hours.\" \n\nThe next morning, Billy headed to company headquarters at the farmhouse seven hundred meters to the rear. It was pitch dark at zero three thirty. He counted on Lancaster, because he could. This last minute meeting at company headquarters was a sign the captain was nervous. He wanted to know how Billy planned to get around the swamp to his front left. \n\nThe captain looked at him after the other platoon leaders were dismissed, and said, \"You will cross the Line of Departure at zero five thirty, Lieutenant. Five minutes ahead of the rest of the company, so you can angle around the swamp and then extend left along the base of the rise.\" \n\n\"Yes, sir, we've practiced it,\" Billy replied. \"Hook up with the rest of the company and proceed uphill as soon as the artillery lifts.\" \n\n\"Good luck,\" the captain said. \n\nA little after zero five hundred, Billy left the company headquarters dugout and knew surprise was compromised. As he negotiated the series of trenches that led to his platoon's; when he was still a quarter mile away, entering the communication trench, out of the silence he heard a tremendous boom such as he had never heard or imagined possible. A flash before him illuminated a wall of dirt rising, rising, and then in darkness it fell when finally its impetus was overcome by gravity. \n\nHe felt it in the air and earth that he leaned against for support, it went on for some seconds as tons of dirt fell back to earth, pummeling his helmet and shoulders, vibrating the crust, and then a regular staccato of shells exploding along his front and to his rear where the rest of the company was entrenched. A sickening feeling pervaded his gut as he was showered with mud from this shell and pebbles from that\u2014the enemy seemed to have their old trench line measured by every gun, but now shifted fire to a new target. He continued on, as time for the attack was upon them. The communication trench up the ridge petered out then, just where it came to the crest among the broken trees of the old wood. \n\nIt petered out. Oh my God, he thought. It didn't intersect, it petered out. He explored for a half an hour, tripping over some bayonets sticking out of the ground, when he realized he'd found them all along, and he measured the line in the greying dark, the brightening sky, stumbling, careful not to fall on this bayonet or that. Oh my God!His conscience tore at him. \n\nDuty done, Billy Finch's good, strong mind, his good, strong character, fractured in a strange way. He felt it snap, in his head. A searing pain rent his skull. They were his men. He'd made his promise. \n\nIt was the last anyone of the A.E.F. saw of the Sky Grey platoon. It was the last anyone of the A.E.F. saw of Billy Finch. \n\n* \n\n\"Sky Grey Platoon Lost?\" and \"Our Boys Gone?\" were headlines in the Cincinnati Post and the Cincinnati Times-Star dated July 7, 1918. They recounted the platoon's actions to June 23, when it failed to attack as ordered, and a few days later every man in it was declared missing in action. Every man, from Second Lieutenant Billy Finch to Private Joe Smucker of Ft. Wayne, Indiana, was feared lost. The official army report said that on June 23 at zero six hundred hours the platoon lost contact with the rest of its company and battalion. The battle swept on a mile to the north and east, and that was that. \n\nAn officer was detailed to investigate a few days later, but he couldn't even find their trench line with any accuracy. He decided the trench was obliterated in the shelling of that last battle, which it was. He had found it, unbeknownst to him. Among all the dead of modern warfare was added the lost platoon of Sky Grey\u2014missing, hopefully captured. As the lists were exchanged, that final hope that the platoon was in enemy hands was extinguished, and they became missing, presumed dead. \n\nIt was dusk, when the captain and two men arrived. Finch watched that captain from the last of the woods\u2014he called it Lafayette Woods\u2014and decided not to point out the line of bayonets along the edge of the low ridge. He avoided the man, who looked for the trench line to the front of the ridge, then traced behind it to the communication trench, and then along the back side. The captain even walked over the top once, stepping between the bayonets\u2014it would be dangerous here, he must have thought. But the officer didn't notice that it wasn't one bayonet sticking up but many, and in a line\u2014difficult to see among the other detritus of war littering the area, the ground uneven from its recent churning by the German artillery. He didn't realize it was the trench, caved in on itself. \n\nHis two men, both too old to be privates but nevertheless, he told to follow the edge of the swamp and look for signs. They carefully walked the route assigned to the platoon, to where it should have met up with the rest of the company, but saw no sign of them. They looked into the swamp pond but saw no one, no helmet, no canteen, no rifle, nothing human. After an hour's searching, hearing the big guns now miles north, the captain gave it up. \n\nHe had enough to write his report. The platoon was not at it's last known location.He failed to mention the trench was obliterated; his mission was to search for the platoon. \n\nA few months later, another attempt was made to find the platoon, but it relied on the first search and failed also. A squad was ordered to backtrack the attack route to the pond from their first objective, the German trench on the rise north east of the pond, and found nothing. Three soldiers went into the cold pond, which turned out to be only a few feet deep, but found no evidence. \n\nBilly noticed each attempt to find the platoon, shook his head at the short search of the second and the laziness of the first. \n\nHe thought he could name the soldier seated on a firing step below each bayonet. First squad would be here, he thought, with Corporal Canally there, and next him Smyth, Burgess, then Thomas... So on. Billy was fairly certain he could name each soldier based on squad position, all the way down the hundred plus yards that the platoon delineated. Perhaps one or two out of order, here or there. He could name them. It was routine. He was a stickler. \n\nBilly shook his head, squatting among the carnage. \n\nHe decided to write some things down. \n\n* \n\n\"Buried? All of them?\" he asked, incredulous. Was it possible they were interred? He knew of a French unit supposedly lost that way... \n\n\"I found at least fifteen muzzles before we stopped,\" Trish said. \"I'll of course go back tomorrow.\" \n\nDr. Simms, after perhaps a half minute wondering if it could be so, asked, \"You have a statement about what killed them? But you don't know what it means?\" \n\n\"Yes, sir, it's very brief. Shall I read it to you?\" she asked. \n\n\"Yes, of course. History is rarely so interesting as when a mystery is solved,\" Simms said from Ohio. \n\n\"Okay, here it is: '23 June 1918. At 0515 hours, I was at battalion briefing. Jack Johnsons? Platoon went west. I know where each man is, as I look to the north. There is a garden of knives.\" Added almost as an afterthought, was this statement: \"Took bayonets, danger to children.\" \n\nOh,among the things here are about three dozen old, rusted bayonets.\" \n\n\"Repeat that: did you say Jack Johnsons?\" he asked. \n\n\"Yes. Jack Johnson,\" she said. \"Like the boxer.\" It was not possible to study World War I in America and not come across mention of the famous black American champion. \n\nDr. Simms was silent, but there was something in his breathing that conveyed... excitement? Joy? It was as if he wanted to yell but he was holding it in. \n\n\"Dr. Simms?\" Silence still. He was thinking. Emily, his wife, said that sometimes when he was very excited (as when she'd announced she was pregnant) he'd become quiet because he wanted to control himself, and he was afraid he couldn't if he reacted quickly. \"Jonas?\" she said, using his first name for the first time and not noticing. \n\n\"You did it,\" he said. \"I really thought no one would, no one could, do it. You did it.\" \n\n\"What? What did I do? I mean, the remains, yeah, but...\" \n\n\"You've found the Sky Grey platoon. You found out how they died, why they were not found. Lt. Finch was not with them at the time and lived. But he saw it or heard it and figured it out. Just wow, Trish,\" he said, using her first name for the first time. \n\nTrish was glad that between the two of them they knew something. \n\n\"Okay, explain it now, buster, or I'm gonna call Marx and figure it out with him,\" she said, smiling and knowing Marx would be the first one Simms would call. \n\n\"I'm just so happy you succeeded,\" Simms said. \"Look at the note. Jack Johnson was the heavyweight boxer, but his name was slang for heavy German artillery shells in World War I. Lt. Finch found the whole trench caved in on itself. He found no trench. His men are still in it, doing whatever they were doing. 'Going west' was slang for dying, back during that war. Like 'buying the farm' or 'kicking the bucket' in other slang. \n\n\"From the garden of knives thing, and your explanation about Finch tackling Moreau to protect him from a stake... His men had their rifles pointed up and the attack buried them with their bayonets sticking out of the ground. It happened one other time, although I thought it was a hoax.\" \n\nTrish was thinking. \"Why didn't the French readers translate it and understand?\" \n\nDr. Simms replied, \"Perhaps they were not as knowledgeable of artillery. More likely the terms in English are slang and they weren't familiar. Jack Johnson? Going west?\" \n\nShe was thinking, yes, if the local translators didn't know the American or British slang terms, it could just confuse them. Suddenly a wave of exhaustion and weakness swept through Trish. She knew where they were and how they died. ",
        "\"I have to sit,\" she said, Jonas thought weakly. \n\nIt was quiet and Jonas wondered if he'd lost the connection, but then he remembered Trish Finch and her nature. He knew why he heard nothing from her. Empathy (real empathy, not imagination) in the face of devastation was not a hindrance, but neither was it the sole object. What mattered was how the historian handled it. \n\n\"I'm sorry, Jonas. I'm shaking,\" she said softly after a minute. \"They were right under my feet. I stepped on their rifles.\" \n\nJonas nodded. \"You actually touched them.\" He could feel her mood changing as she realized the magnitude of her success, and the magnitude of their loss. \n\n\"I may need some time, Jonas. I think of them there under those rifles, waiting for the attack they never made. It must have been one horrific moment. To this day, there, frozen in that horrible moment. Their names. Billy knew where each would be. I... \" \n\nDr. Simms was silent. \"Remember we talked about empathy, and that guy who transferred to sociology... What was his name? Jeffers? I was worried he'd try to date you. Do you remember what I said? \n\nShe thought, tore her mind away from the horror of her discovery, and tried to think of a seminar two years earlier. \n\n\"Yes, you said something like, history saves the meaning of our lives.\" \n\nTheir discussion was serious and distant, each hearing the phone buzz in the background. \n\nShe volunteered the next, \"You think we study history because the people matter, even after a hundred years.\" \n\n\"Yes. Every one. You see them as people, not names on a list, now. The years don't really matter. You've uncovered the demise of 43 men. You're the first to understand the very incident that ended their lives.\" \n\n\"If only their families had known...\" \n\nHe heard her breathing, but she didn't speak more. More time slipped by. \"They will now, late but resolved. It was a long time ago, Trish. But you know now that doesn't really matter.\" \n\n\"Yeah,\" he heard her say quietly. \"Uh, Jonas?\" \n\n\"Yeah?\" \n\n\"Is Emily there?\" \n\n\"Yes. Would you like to speak with her?\" \n\n\"Please.\" She heard him calling to Emily, perhaps explaining, and then Emily was on. They spoke for a long time. \n\n* \n\n\"Jonas! How are you? Emily? And how's our girl in Gaul?\" said Tom Marx. They spoke by telephone the day after Trish notified Jonas she'd found the platoon. \n\n\"Everyone's doing well, here, Tom. Emily's expecting, finally.\" \n\n\"Really? I'll buy some expensive cider and we'll share a drink next we're together.\" \n\n\"Yeah, Tom, reason I called. Trish's found out what happened, and she's pretty sure she's found the remains.\" He explained what Trish found. \n\nTom whistled when Jonas finished. \n\n\"My God. My God.\" Tom was actually speechless, even though a lawyer. Dr. Simms waited, knowing Tom's mind was always working on the next step. \n\n\"Jonas, what if we... \" and they talked for an hour about possibilities. \n\n\"May I tell Miss Finch what we want to do?\" Dr. Simms asked. \n\n\"By all means. With her, we could have wine.\" Marx laughed. \n\nImmediately upon hanging up, Simms dialed his student in Rochambeau, France. \n\n\"Bonjour?\" she said. \n\n\"Tr\u00e8s bien, merci, a vous? You're really getting into this French culture thing, aren't you, Miss Finch?\" Simms asked, with a smile. \n\n\"I am. Thank you.\" \n\n\"I spoke with General Marx. He thinks this is big news. If your French friends are amenable, he has an idea about the last resting place of the Lost Platoon. We'll need the support of the French government, but since it's an undeveloped area anyway, and the agreement of the families... \" He spoke to her then for a half an hour, explaining the idea, the practicality, the way it might happen as he understood it. \n\nTrish sat down as they talked. She'd controlled herself enough. It was overwhelming. She was working on a history degree, and this came of it. She'd have to talk to Jacques and his father. \n\nLate that evening, she sent an email to Evelyn Jones Bradley, west of St. Louis. \"I know Clara is passed, but I wanted you to know: we found the Lost Platoon.\" \n\nCHAPTER 8: MOM AND LOVE \n\n\"For the first time, Ryan, I think my profession is more important than yours.\" \n\nHe thought about that a lot, over most of a few years. History more important? It didn't make sense, but he knew she was reasonable in her own mind. He wanted to dismiss it as an academic prejudice, but it was so out of her character to be that. His mother eventually explained it to him. \n\nMrs. Armbruster watched her son. He was in his second year of residency in Salt Lake, but he'd lost something. His first joy at being in the Rockies again didn't seem to make him happy now. He was moody and quiet. He visited Denver over the Christmas holidays, but she wondered why. He loved seeing his sister and her family, but it was her family, not anything he'd built. They were actually two hours closer to Salt Lake City, but Ryan only visited there twice because she had a life with her husband and children. He had friends, and dated some, but nothing seemed serious but his mood. Mrs. Armbruster thought Ryan may have misunderstood something. \n\nHe'd broken up with Patricia, the Ohio girl she'd never met but for whom he'd had such high hopes. \n\nIt had been a year and a half of his residency. She thought that was long enough to mope. It was unlike him. She knew he had a capacity to care; it had led him to a career in medicine. But in all that talk about keeping distance from patient and avoiding entanglement, he'd confused something, she was sure. She wondered about Patricia Finch. \n\n\"Ryan, sit with me,\" she said. He knew she wanted to talk. He sat beside her on the couch. After a few seconds, she said, \"Tell me about Trish.\" \n\nHe looked away. \"There's nothing to say, Ma. I thought I was in love with her, but I don't think she loved me. She was fun and athletic and smart. I told you she was working on a Phd in history. We were starting to talk about getting married, but then she decided she didn't love me.\" \n\nMrs. Armbruster didn't think her son was a liar, but for some reason that answer sounded like a canard. She nodded and held his hand. \n\n\"Why'd you take the job at Salt Lake?\" she asked. \"I mean, you and she were still together yet you came west for residency.\" \n\n\"Yeah, I applied around out here. I wanted to be near the family, in the mountains. You know how it is out here. And with Salt Lake and Denver you have so many shows and sports. Skiing.\" \n\nHis mother listened. \"Out here? What did she want? Did you break up with her because you wanted to ski?\" She didn't believe that, and she wanted him to get angry instead of talking as if it were fate. She didn't believe in fate until people made it. \n\n\"No, that's silly. You want to know why we broke up? Is that what this is about?\" \n\nShe nodded. \"I do, but not just because I'm nosy. I remember how wonderfully you described her on the phone and when you came for visits. What happened?\" \n\nRyan looked nowhere. He looked somewhere out there. \n\n\"She was about to start her dissertation, the last step in her degree,\" he said, \"She was going to have to visit France, she was studying some boys who were sent to World War I from her hometown, Sky Grey. Did I mention that town? (His mother nodded.) She wanted to talk about arranging her trip, so we could be together, maybe get married. I told her I accepted the residency in Salt Lake City and...\" He felt his mother look suddenly at him, and stiffen. \n\nHis mother slapped his leg, probably as hard as she was able. He looked at her. \"Hey!\" It stung for some seconds. She was mad. \n\n\"She wanted to talk about arranging her big trip, maybe with you, and you told her you had already accepted the position out here?\" she asked. \n\n\"Yeah,\" Ryan said. \"So?\" \n\nShe got up and said, \"Just stay there and think for a minute. I'll be back.\" \n\nShe came back a few minutes later with a beer and a newspaper folded up. She handed the beer to him. Before she sat down, he started up again. \n\nHe defended himself, saying, \"She has to accept that my career is important. Lives matter. I'm a surgeon, mine has got to take precedence. Any girl I marry has to realize that. Even Dr. Patricia Finch.\" \n\nHis mother nodded. \"You think she was saying that if you got a call to come to a bleeding patient, she'd say, but we're having supper?\" she asked. \n\nHe smiled. \"No, nothing like that. But Salt Lake was an opportunity, a great one.\" \n\n\"Oh honey,\" his mother said. \n\n\"She said that I should not have made that decision without talking to her first, and then she broke up with me,\" he said. He felt like crying, but instead he leaned his head on her shoulder. \n\nMoms are great. \n\nHis mother smiled. \"She wasn't saying your career wasn't important. She was saying that her life had to be important to you, too.\" \n\nHe was quiet for a moment. She opened the Denver Times to the front page. \n\n\"Is this she?\" his mother said, pointing to a picture on a story below the fold about a new American cemetery being built on an old French battlefield. \"Lost Platoon To Rest in France,\" the headline read. Ryan looked carefully. It showed unseen exhumations being supervised by Dr. Patricia Finch of the American monuments commission. Trish looked beautiful and smart and capable. \n\nRyan nodded and read the article. He finished and put his head against her shoulder again. \n\n\"I told her my career was more important. That I save lives,\" he said. \n\nHis mother resisted the urge to hit his leg again. \"And what does she save?\" she said. She thought to herself, I sure would like to meet this girl. She was pretty, and her statements in the story were intelligent. \n\nHe was quiet, thinking. She saves their moment, he realized. \n\nRyan nodded with his cheek against her shoulder. \n\n\"Ma,\" he said quietly and slowly, \"when did I become arrogant?\" \n\nShe didn't answer directly. \"You get it from your father, honey.\" \n\n\"I like seeing sis and her kids, and you and dad, but it's not like it was,\" he said. \n\n\"The past is always with us, but it never comes back,\" she said. \"You had a great childhood, but it's over. Remembering is as good as it gets. Oh, and creating those memories for others, that's pretty great, too.\" \n\nRyan spoke. \"I was a fool.\" \n\n\"Again, your father,\" she said, and they smiled. \n\nIt was quiet for a few minutes. They heard his father pulling into the garage. Soon everyone would be coming over for supper. He thought, everyone but one. \n\n\"Is she involved with anyone?\" his mother asked. \n\nRyan shrugged. He avoided asking Jackson, not wanting to seem obsessed almost two years later. \"I don't know. She's pretty, she probably has a boyfriend. Maybe a husband.\" \n\n\"Can you find out?\" his mother asked. \n\n\"I can email Jackson. A friend of hers and mine in Ohio. I think I'll do that.\" He kissed his mother on the cheek and said, \"Thanks, Ma.\" \n\n\"What's for supper?\" his father asked, seeing them in the living room sitting side by side. \n\nRyan answered, \"Crow.\" \n\nMrs. Armbruster slapped his thigh again, much more lightly, and laughed. \n\nHis father smiled. \"Must be Tuesday.\" \n\n* \n\nRyan emailed Jackson. \n\n\"Ah, the idiot finally coming to his senses? Yeah, she has me, and that Simms guy, and now some Marine general who's a confirmed bachelor. Any one of us would go for her. I'll tell her you asked.\" \n\nRyan smiled at the joke. Dr. Simms's wife was Trish's friend, Ryan knew the general from Trish's talk and she was much too young for him (he hoped), and Jackson played the field for a different team. None of that really mattered. Ryan loved Trish, and just the idea made him feel better. \n\nIt mattered. Love was actually something. It may not save a life, but it gave it meaning. \n\nCHAPTER 9: THE AMERICAN CEMETERY AT LAFAYETTE DU BOIS \n\nAn American Army Band played marches as people arrived, strolling up the length of the spur. There was pavement, so a few old or infirm were pushed in wheelchairs. There were hundreds, perhaps a thousand, standing about the grass lawn of the lower ridge on the northeast side of the Moreau farm. Many were seated in white, folding chairs in ranks before a portable podium with a lectern. They included at least one representative of every family of a member of the Sky Grey platoon, paid for courtesy of a charity organized for the purpose by the Veterans of Foreign Wars. \n\nMany other family members paid their own way, using the opportunity to visit Europe. Some were interested in the history of World War I, some were French or American government officials. There were French people from Rochambeau, who'd wondered at the mystery of the ridge as children. Other Frenchmen were there out of simple interest or decency. An Ohio congressman made the trip, as well an Indiana senator. The mayor of Sky Grey and her family were there. A German government official was present, also, gregarious and introducing his family. An American platoon was drawn up in ranks to the left of the podium, currently at parade rest. A French honor guard faced the audience to the right. An American honor guard was at parade rest to the left. \n\nThere were flags. \n\nIt was breezy on Cr\u00eate Folle. The American flag, flying on a pole at the far end of the ridge, snapped noisily in the wind when the band was quiet. A French flag flew beside it. The larger trees were saved, trimmed, cleaned up. The bracken was cleared, vines and thorns removed or cut back. The uneven ground had been carefully smoothed, replenished, and sodded, but not levelled. Unlike most military cemeteries, the ground undulated from grave to grave, from squad to squad. To the right were two very large craters, fifty yards apart, and numerous smaller. All had drainage. \n\nThere was a small parking lot behind a copse at the southwest rise of the hill, hardly visible in the summer foliage; perhaps the only problem with the site was that it required a steady uphill walk. There were several American army officers. People straggled up from the parking lot until there were too many to be a straggle; most wore casual clothes, but not their worst. Women were in summer dresses, men in pullover shirts, a few in sport coats. The wind blew the dresses and a few hats had to be pinned on. \n\nFinally, the band played the French and American national anthems and people sat in chairs or stood about quietly. A French government official spoke first over a temporary loudspeaker system, of tragedy commitment leading to the close relationship of the American and French people. A retired US Army general and now head of the American Battlefield Monuments Commission spoke. \"We are so happy that all the families agreed to leave their loved one in situ,\" he said at one point. \"We think it is appropriate, in this extraordinary circumstance. Each remains was exhumed, ammunition and ordnance removed, and replaced but prone. Resting. When possible, identities were checked, based on the only known document and identity tags when present. Each remains was treated with the utmost respect.\" He paused. \n\nHe introduced the next speaker. \"Ladies and Gentlemen, the historian who finally and correctly discovered the ultimate resting place of the Lost Platoon of the American Expeditionary Force, Dr. Patricia Finch.\" \n\nTrish left the group she was sitting with\u2014Tom Marx in full dress uniform, Jonas and Emily Simms with an 18 month old child, Jacques Moreau, and his father, now 101 and very frail, her own father, mother, and surviving grandmother, the Moreau children Jean and Cheri with their father\u2014and stepped onto the platform. She stepped up to the microphone and did not refer to her notes. \n\nShe saw some she knew from her interviews. She nodded to Evelyn Bradley and made eye contact with one or two others. She looked out then on so many people, but one made her hesitate. She stared at the young man just behind the chairs in a suit. He was smiling. She was startled, but when he gave a little wave, she smiled and nodded. \n\nRyan. \n\nShe spoke in French, and translated each paragraph immediately into English, so her brief words took longer. \n\n\"Good morning. It was called the Lost Platoon of Sky Grey, the Lost Platoon of Ohio, the Lost American Platoon of the AEF or the Great War. After some time, no one called it by its actual designation,\" she started, smiling, \"which I admit is a mouthful. It was actually the Third Platoon, Company C, First Battalion, 156th Regiment, Second Brigade, Fortieth Division, United States Army, American Expeditionary Force. As you walk up the slope behind me, in just a few minutes, you'll notice that every man but one remains where he deceased.\" She hesitated a moment and went on. \"They rest where they were buried in a stupendous bombardment that boiled the land behind me, even under us, collapsing their trench and interring them as they sat on their firing step prepared to attack. You can see the shell holes of that great barrage. \n\n\"For them, combat was a few terrible seconds. These sons of western Ohio and eastern Indiana are still here, and always will be now. \n\n\"Their families were left wanting. They hoped for decades that somehow, someway, their platoon had survived, that someone had survived. Their moms looked up every time a doorbell rang for the next fifty years, hoping, hoping it was Andy or Paul or Charlie finally come home. I read one letter written in the 1950s by the sister of Andy Guardino, saying that she still thought, still hoped, he might walk in the back door some day, like he'd never left. She saw him as that 18-year-old kid brother who marched off to the tune of George M. Cohan. We know where Andy is now. He is under the 12th stone you will pass. They are all here. Together. \n\n\"My great uncle is the forty-third American soldier. He is buried just beyond the others, out of line, beside a rock now with a plaque identifying him, near the flagpole. He survived the bombardment that morning, but he wouldn't leave his men. I think their loss disturbed him. He lived out the last 13 years of his life on this little ridge, obsessed with a promise he made: to leave no man behind. He called this forest Lafayette Woods, and for those years he watched this ridge, watched the bayonets rust. When he saw kids playing here, he collected those bayonets and saved them; they were found with his body. He lived here begging for scraps, freezing in winter, until he could accompany them in death. He chose it. The people here called him the madman; children called this narrow spur Madman Ridge. Mr. Moreau, to my left, actually met him once, as a young boy, on this ridge.\" \n\nShe shook her head, smiling a sad smile. She avoided more maudlin statement. \n\n\"There is a famous epitaph recorded in Herodotus about the dedication of soldiers lost in battle far from home. It's read in most schools, in one curriculum or another. It translates, \n\n'Go tell the Spartans, Passerby, \n\nThat here, obedient to their word, we lie.'\" \n\nShe stopped and looked around and then back at the crowd. \n\n\"We are the passers-by for these our dead of the Great War. It's up to us to remember them, and tell.\" \n\nShe waited a long pause. Ryan had his hands behind him, looking straight at her. \n\n\"One last thing. Since the decision to maintain the combat graves of our soldiers, it was decided that next year, from June 23 and for each of the next 42 days, a different flag will be flown at the Tomb of the Unknown Soldier in Arlington National Cemetery, to be presented to a family member of each of our lost soldiers, no longer unknown, by rank from lowest to highest in ceremony. Further information will be sent you, so check your email when you see my name. \n\n\"Thank you all for coming. The entire area and whole farm have been searched by radar and sonar for unexploded ordnance; but use caution. As you passed up from the lot, you must have noticed the marker for Amie Moreau Durand, who died on that spot just six years ago from a hand grenade thrown in 1914. She saved her children in doing so; she was the granddaughter, wife, mother, and sister of the six Moreaus and Durands you see seated with us. Her brother Jacques called hers the last death of the Great War.\" She paused and looked at Ryan. ",
        "\"Let us hope so. \n\n\"We may venture among the graves now, but try to stay on the walkways. The cemetery gates will close at dusk, open at 8, every morning. There will be a caretaker on premises during normal working hours. Oh, and if any of you would like to talk to me, General Tompkins or other members of the monuments commission, or the Moreaus who have lived with our relatives so long, please feel free. I offer translation help if you need it.\" \n\nThere was polite applause. Trish pushed her hair away from her eyes, looking out at Ryan. She signalled him not to go away. She left the platform and went to her friends and family. \n\nThe crowd broke into groups and began moving up the slope, looking at their brochures and finding a relative long passed. \n\n\"May I have a moment?\" she said to Dr. Simms, Emily, and her family. \"There's someone here I need to see.\" They smiled of course and turned up the slope. The band began to play again. \n\nShe walked to Ryan then, and they were alone among the many. \n\n\"Nothing else to do, so you thought you'd pop over to France today?\" she said, smiling. \n\n\"Nope. Decided I wasn't a kid anymore and wanted to see if you'd believe it.\" \n\nHe looked at her eyes and then around. He waved his hand. \"Wow, Trish. Just... stupendous.\" \n\nTrish looked back at his eyes. Every moment seemed to inspire thought. She appreciated the gesture, but did it change anything? Two years later? \n\n\"It'll be like starting over. It may take a long time,\" Trish said. \"I still have work in Washington, and Ohio.\" \n\n\"Well, it turns out I have work there, too. And you're worth the time. I figured something out: just like there's history everywhere, there are people who need surgeons everywhere.\" \n\n\"I thought you wanted to be near your family.\" \n\nHe smiled and looked at her directly. \"Mom told me I was trying to recapture my childhood. I contacted your friend Jackson, and he said you were not married or engaged. Called me an idiot.\" He shook his head. \"Seems to be a lot of that.\" He shook his head with a smile and wondered how he'd survived without her eyes for two years. \n\nHe thought for a minute. \"My mom wants to meet you. Dad too. I think he already has a crush on you from a story in the paper. He said, 'You left this girl?' He acted astounded.\" \n\nTrish canted her head and looked at him, thinking there were worse things than being called a fool. She said, \"Decisions need to be made together.\" \n\nHe nodded. \"I look forward to the compromises.\" \n\nShe reached out her hand, took his. \"Walk with us. I'll introduce you around. Mom and Dad'll be surprised to see you again.\" \n\nBeyond the speaker's platform were the renovated resting places of the lost platoon. 42 uniform headstones, as were used in many American national cemeteries, were aligned with the military crest of the spur and each other, but not perfectly spaced. The stone of each man was with each man as First Lieutenant Billy Finch best listed him in 1918; he was a stickler. Only Sergeant Harvey Lancaster had to be sought; he was found with the Second Squad. \n\nBeyond the last headstones, to the right as they looked up the slope, Trish and her group headed. The Simms toddler toddled, slowing everyone. No one cared. General Marx walked silently, reading every name and word carved in the stones. The group straggled up the slope. \n\nRyan was moved by the seriousness, the solemnity. Family groups were gathered here and there, talking quietly. A few had old pictures to share. He held onto Trish's hand, knowing acceptance would take time, time he looked forward to spending with her. People stopped to speak with her, to introduce themselves, to give or get email addresses. \n\nHe discovered he was proud to be with her. \n\nTheir group finally gathered together at the large rock beyond the other graves. Trish looked around at them all, waiting for everyone to close up. \n\nTrish's mother and father were next to her, and her grandmother Finch. Her Aunt Sheila Grey was coming up with her husband and some cousins. The general stood behind, Dr. Simms and Emily with their child to one side. Embedded in the big rock was a plaque, identifying the final resting place of the Madman of LaFayette du Bois. Trish turned and put her hand on the rock, by the old carved name FINCH. \n\nLoud enough for everyone to hear, she said, \"Uncle Billy, we are here.\""
    ],
    "authorname": "Malraux",
    "tags": [
        "world war i",
        "disappearance",
        "growing up",
        "history",
        "small town",
        "lost platoon",
        "family",
        "straight sex",
        "phd",
        "generations"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/finding-uncle-billy"
}