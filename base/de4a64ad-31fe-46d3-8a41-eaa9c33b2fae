{
    "title": "Life after the Lottery Ch. 59",
    "pages": [
        "Sorry, it has taken a while to get this chapter out. Life got in the way, you know how that goes.\n\n*****\n\nMonday morning when I woke up, I knew Dawn was not in bed. It was one of those mornings that something woke me up very early. I looked out the window and could tell the sun was not up yet. I got out of bed and went into the bathroom to look for Dawn, but she wasn't there. I closed my eyes and took a deep breath, and waited. After that, I headed downstairs. I walked to the big windows that looked out on the pool and saw Dawn standing on the patio naked looking toward the rising sun. I walked out the door and up behind her.\n\n\"Hey.\"\n\n\"Sorry, I left you alone in bed,\" Dawn said without turning around.\n\n\"That's okay. What's going on?\"\n\n\"I don't know.\"\n\nI wrapped my arms around Dawn, and she placed her arms over mine and held them.\n\n\"Is something troubling you, honey?\"\n\n\"I'm having trouble focusing. I just wanted to clear my head.\"\n\n\"Why don't we get out the house for the morning,\" I told her.\n\n\"Sounds like a good idea.\"\n\n\"Come on, we can go for a drive before everyone gets up,\" I said.\n\nWe went back in and up to the bedroom. Dawn and I slipped on some shorts and a shirt before we went back downstairs.\n\n\"Let me leave the girls a note,\" I said.\n\nI wrote them a note and told them to tell Sherri and Brenda we would be back later.\n\n\"Come on, I'm driving,\" Dawn said.\n\nI followed her out to the garage, and we got in her Ferrari and pulled out of the garage. Dawn drove down the driveway and turned left at the end heading out into the country with the top down. We drove about 20 minutes before she pulled off the road into the woods where we had been several times. She slowly drove down the grassy lane until we were deep into the trees.\n\n\"I think this is one of your favorite places,\" I said.\n\n\"I like it when we come here, it reminds of the woods around the reservation, quiet and peaceful,\" Dawn said.\n\n\"Do you need some quiet time to clear your head?\" I asked.\n\n\"I just need to think.\"\n\n\"About what?\"\n\n\"Just about everything.\" Dawn turned to me. \"Nothing to worry about, I just need to put some things into perspective.\"\n\n\"Is this from visiting the reservation?\"\n\n\"Some. I am a little overwhelmed by everything that happened. Great-grandfather really made me realize how much I am able to do. It has left me a little disoriented.\"\n\n\"Can I ask you why he wants you to come back before winter?\"\n\n\"I'm not sure yet.\"\n\n\"Any ideas?\"\n\n\"A few, but I need to think about it.\"\n\nDawn opened her door and got out. I watched as she took off all of her clothes and started walking off. She looked perfect, and at home, walking through the tall grass naked.\n\n\"Can I come with you?\"\n\n\"Of course.\"\n\nI got out, and took my clothes off and walked to her. Dawn took my hand, and we just walked through all the trees for a while.\n\n\"This place is so pretty. I like the quiet and solitude,\" Dawn said.\n\n\"We have plenty of land you can walk around on.\"\n\n\"I know, but I have always liked this place since we found it.\"\n\n\"Amy told me you had come here with her and Samantha.\"\n\n\"I have.\"\n\n\"Amy brought me here the day we went out early in her new car.\"\n\n\"She told me. I like it when we come here and make love. No one around, just us,\" Dawn said.\n\n\"Is that what you want to do this morning?\"\n\n\"Yes.\"\n\nDawn kept leading me through the trees until we came to a small clearing with some green grass. She turned to me and wrapped her arms around me, and we started kissing for a long time. Dawn released her hold on me, and moved to the grass and lay back. I got down next to her, and leaned over and kissed her for a while.\n\n\"This is nice,\" Dawn said.\n\n\"Yes, it is.\"\n\nDawn and I kissed for a bit longer. Soon after that, she was sitting on my lap, and we were getting ready for one of our quiet, slow fucks. Dawn grabbed my cock, and worked it into her pussy and eased all the way down. I wrapped my arms around her waist and held her as she looked at me.\n\n\"I'm ready,\" Dawn said.\n\nShe placed her head on my shoulder, and the two of us got still and quiet. We took our time and soon our heartbeats and breathing were together. Dawn had her hand over my heart, and I was feeling all of her love energy slowly growing inside of me. With my hands on the small of her back, I was pushing all the deep love I had for her into her body and mind.\n\n\"Yes...\" Dawn moaned softly.\n\nTime passed, and we were both being consumed by our love for each other as we let our energy flow between us. I knew Dawn needed this, so I let her control everything. After a long time passed, Dawn began to push her sexual energy into me slowly. I returned what I had for her in an equal proportion as we slowly built. The air around us was warm, and I could feel a gentle morning breeze beginning to cool our skin.\n\n\"Emmmmmm...\" came from Dawn softly.\n\nWe slowly built our arousal and love until it was consuming both of us. I held Dawn a little tighter then I heard her begin to purr deep down inside. I began to feel the heat building in her pussy as she began to squeeze and release my cock. I knew we were both growing toward a massive orgasm. I held Dawn and concentrated. This was one of the times it almost felt like she was inside of me. Our energy continued to merge and grow.\n\n\"Ohhhhhhhhhhh...\" came from Dawn gently.\n\nSlowly we both reached a peak near exploding in a huge orgasm. I could feel Dawn's energy and knew she was holding us at this point. The feeling was becoming very intense as the heat in her pussy grew hotter and hotter. I just released all of myself into her and let her have it.\n\n\"Yes...\"\n\nI felt more lost in all of Dawn's energy than I had before. She was in control and getting what she wanted and needed.\n\nThere was a sudden change in our energy, and I felt or saw a flash of light.\n\n\"Now,\" Dawn said.\n\nI let go and suddenly began to come very hard. I was not expecting it, but all of my energy just seemed to explode.\n\n\"Ahhhhhh...\" came softly from Dawn and I felt her pussy muscles crush my cock.\n\nI held her tightly as I kept pumping cum into her. Dawn began to slowly tremble in my arms as I held her as close as I could.\n\n\"Ahhhhhh!!\" Dawn screamed and started jerking hard in my arms.\n\nI felt another burst of energy flow through me and could feel it rushing out through my cock and back into Dawn as we both jerked hard as we came.\n\n\"Ahhhhh!! Yes!!\"\n\nWe both were having a huge orgasm as I jerked and as Dawn jerked. I think we were both screaming for some time. Our orgasm was incredible.\n\n\"Emmmm,\" came from Dawn as she settled in my lap.\n\nI held her a few minutes until she turned her face up to mine. I kissed her for several minutes then she sat up.\n\n\"I needed that,\" she said.\n\n\"Honey, that was incredible.\"\n\n\"It was pretty good,\" she said leaning back some.\n\n\"I was more than pretty good. It was almost as good as when you took me on that journey.\"\n\n\"I don't know about that.\"\n\n\"Then you will have to take me there again so I can compare it,\" I said.\n\nDawn smiled and pulled me to her so we could kiss again. We sat this way for a while until Dawn got out of my lap and stood. I got up, and wrapped my arms around her and held her.\n\n\"Did that clear your mind?\" I asked.\n\n\"It helped,\" she said with a big smile.\n\nWe held hands and walked back to the car. Dawn opened the small trunk and got out a towel and cleaned off all the cum running down her legs. We put our clothes on, and Dawn tossed the towel back into the trunk and closed it.\n\n\"You drive, I'm spent,\" Dawn said.\n\nWe got in the car, and I adjusted the seat and the mirrors. I started the car, and we slowly drove back down the grass road. When we got back to the edge of the main road, we had to stop and wait because an old tractor was coming down the road pulling a load of hay. It passed, and I started to pull out.\n\n\"Stop!!\" Dawn screamed.\n\nI slammed on the breaks. I was half-way out into the road. Dawn opened her door and jumped out of the car.\n\n\"What are you doing?\" I asked.\n\nShe walked a few steps then I saw her bend over.\n\n\"James, look!\"\n\nI backed the car back off the road and then got out and walked to Dawn.\n\n\"Look,\" she said.\n\nLying on the ground was a For Sale sign partially covered in weeds.\n\n\"Do you think that is for this land?! Do you think it is for sale?!\" Dawn asked excitedly.\n\n\"I don't know?\"\n\n\"Oh, I would hate for someone to buy this land and build on it. If I get the phone number off the sign, can I call about it?\"\n\n\"Sure.\"\n\nDawn brushed away the weeds then got her phone and put the phone number in it. I wanted to laugh when Dawn covered the sign back up with more weeds. We got in the car and drove back toward the house.\n\n\"I wonder how much land it is?\" Dawn said.\n\n\"Call and find out.\"\n\nI drove back toward the house, and when we neared it, I kept driving until we got to the interstate. I pulled into a burger place and ordered us some lunch since we hadn't eaten breakfast. I pulled up to the window and got our order then pulled under a tree in some shade so we could eat.\n\n\"I forgot we hadn't eaten,\" Dawn said as she dug out her burger.\n\n\"Did you think this time was different?\" I asked.\n\n\"Yes, it was. It was more intense.\"\n\n\"Something. I just let go and became lost in your energy, honey.\"\n\nWe ate and talked for a while before we drove back to the house. I parked in front, and we went inside.\n\n\"There you two are,\" Amy said. She and Samantha were eating lunch in the kitchen.\n\n\"I left you a note,\" I said.\n\n\"I got it, we just wondered where you had gone.\"\n\n\"We went for a drive,\" I told Amy.\n\n\"Did you eat?\" She asked.\n\n\"Yes. We are going upstairs to clean up,\" Dawn told her.\n\nDawn and I went up to the bedroom and took a shower together. After that, I put on some pants and a shirt; Dawn just slipped on a short robe. We went back downstairs, and I went to the study.\n\n\"How are you two doing this morning?\" I asked Brenda and Sherri.\n\n\"Making hotel and flight reservations,\" Sherri said.\n\n\"Good. The sooner, the better.\"\n\n\"It looks like we will be gone most of October,\" Brenda said.\n\n\"Whatever you two need to do. I made a common calendar on the server so we can all update it with our plans. We need to start a hard plan for everything,\" I told them.\n\nI sat and showed them how to get into the calendar and also explained to them how to get into the email and other things while they were traveling. We spent the rest of the afternoon working on the calendar and plans.\n\n*****\n\nSherri and Brenda left about 4:30. I was still looking over the plans they had and adding my travel plans for the limo business.\n\n\"I called,\" Dawn said as she came up to me in the study.\n\n\"Called who?\" I asked.\n\n\"I called the number from the old sign on the land.\"\n\n\"Oh, and?\"\n\n\"It is a big piece of land.\"\n\n\"How big?\"\n\n\"He said it was over a thousand acres,\" Dawn told me.\n\n\"My god, that is huge, I am sure it is pricey,\" I replied.\n\nI looked back at the monitor of the computer.\n\n\"Five,\" Dawn said.\n\n\"What?\" I asked\n\n\"Five million.\"\n\n\"You are kidding, that can't be right!\"\n\n\"The man that owns it is over 70 years old, and he has owned the property forever. He just wants to sell it so he will have money to leave his kids and grandkids.\"\n\n\"Even that far out in the country, that is cheap,\" I told her.\n\n\"Can we buy it?\" Dawn asked.\n\n\"Why?\" I asked looking up at Dawn.\n\n\"It is just a beautiful place, maybe one day we could use it for something.\"\n\n\"Like what?\"\n\n\"I don't know. It would just be nice to preserve it. We can use it for something later.\"\n\n\"Okay, what are you thinking?\" I said to Dawn as I looked at her.\n\n\"I just thought that at some point down the road we could build something like a retreat on it.\"\n\n\"That would be an awfully big undertaking. I don't think we would ever get our money back out of it,\" I replied.\n\n\"Well, can we just buy the land, we can always sell it later, I'm sure for a profit.\"\n\n\"When did you tell him we would meet him?\" I said knowing what Dawn had probably done.\n\nDawn paused a minute.\n\n\"Wednesday, I thought you could load one of the four-wheelers on the trailer and drive around all of it.\"\n\n\"Okay.\"\n\nDawn hugged me then ran out of the study. We didn't need a piece of land that big, but it was a good price at $5,000 an acre, even to be so far out in the country. I was sure Dawn had some kind of dream for a retreat or someplace special that people could come, but it would take a lot to develop it. I finished my work and went out to the den.\n\nWhile we were eating dinner with the girls, Dawn brought it up.\n\n\"The man that owns the land owns a ton of land in the area, it has been in his family for generations,\" Dawn said.\n\n\"What land?\" Amy asked.\n\n\"You know the place we go to when we are out driving?\"\n\n\"Yes.\"\n\n\"The land is for sale. James and I went there this morning, and when we were leaving, I saw an old For Sale sign lying in the grass.\"\n\n\"It is pretty there.\"\n\n\"Yes, it is,\" Samantha added.\n\n\"Are you thinking about buying it?\" Amy asked.\n\n\"Maybe, it is a really big piece of property,\" Dawn said.\n\n\"How big?\" Samantha asked.\n\n\"It is over 1000 acres.\"\n\n\"Wow, how big is the land here?\"\n\n\"A little over 300 acres,\" I said.\n\n\"A 1000 acres would be huge,\" Samantha said. \"What would you use it for?\"\n\n\"I thought it would be nice just for us to preserve,\" Dawn said.\n\n\"Are you going to buy it?\" Amy asked.\n\n\"We are going to look at it Wednesday,\" I said.\n\n\"Can we come?\" Samantha asked.\n\n\"James, can we take two four-wheelers?\" Dawn asked.\n\n\"Sure.\"\n\nWe finished eating; Dawn didn't elaborate on her plans any with the girls.\n\n\"How much over 1000 acres?\" I asked Dawn later in the den.\n\n\"He just said it was over 1000 acres.\"\n\n\"Would does it cost?\" Samantha asked.\n\n\"Five million,\"I replied.\n\n\"Wow. That is a lot.\"\n\n\"It would only be $5,000 an acre,\" I told her. \"That is not a bad price.\"\n\n\"I wonder why he is selling it?\" Samantha asked.\n\n\"He may just need the money,\" Dawn replied.\n\nThe four of us watched TV until about 10:30, then went to bed.\n\n*****\n\nTuesday morning I was in my study with Sherri and Brenda, they were finishing up the work on the calendar. I started an email to Linda while they worked.\n\n'Hey,\n\nWe are having a party Labor Day weekend. Samantha and Amy don't know everything, but it is for them. We are going to have a ceremony with them. Sort of a wedding. It will start about midday Sunday, and anyone that wants to can stay until Monday.\n\nIt is something special for Amy and Samantha; we would like you and Rachel to come.\n\nSince it is so hot, it will be clothing not optional party Sunday.\n\nLet me know if you two can come. I hope you take that Monday off and stay.\n\nJames'\n\n\"James, Linda wants us to come to her office Thursday and maybe Friday so we can finalize the blueprints,\" Brenda said.\n\n\"Okay. That sounds good. I'm glad to see things moving.\"\n\n\"Do you want to come?\" Sherri asked.\n\n\"Nope, this is all yours. I would tell them that you want your offices finished by the time you get back. Also, look and make sure they have an office for security people.\"\n\n\"We'll do that. I'll get a copy of the blueprints for you.\"\n\n\"I need estimates for what you think you will spend between now and the end of the year,\" I told them.\n\n\"We have them,\" Brenda said.\n\nWe looked over the numbers and discussed them for a while.\n\n\"Everything looks good. What else do you two need to do now?\" I asked.\n\n\"We are still making calls looking for other suppliers. I think until they start building, we have most of it under control,\" Brenda said.\n\n\"Good. This will give you some time to work on some marketing ideas. Start working on some plans and ideas for a website.\"\n\n\"What do you want on a website?\" Sherri asked.\n\n\"Kick around some ideas for something elegant. Look over what other stores have.\"\n\n\"I think we should be looking at some of the high-end European stores then,\" Brenda said.\n\n\"Get some ideas and draw them up. I want it to be very elegant and tasteful, but we will showcase some of the more expensive items. Can you get some artwork from the vendors?\"\n\n\"I'm sure the two brothers in France will have some great photos. Since their stuff will be the more expensive items, we can use that.\"\n\n\"James, what would you think of a release of a phantom website showing some of the lingerie and swimwear shots?\" Sherri asked.\n\n\"What do you mean?\"\n\n\"I was just thinking about a nameless website that said Coming Soon. We could key the search words for this area.\"\n\n\"Run it by Linda. I know she has some ideas on all of the marketing.\"\n\n\"Okay. Can we go to lunch?\" Sherri asked.\n\n\"Sure. Take your time.\"\n\nIt was 11:30 and they left to go to lunch.\n\n\"Are they gone to lunch?\" Dawn asked when she came into the study later.\n\n\"Yes. We are making good progress.\"\n\n\"Kerri just called. She is on her way.\"\n\n\"Good, we can get that project going,\" I said.\n\nI went with Dawn to grab a sandwich with the girls. About noon, Kerri buzzed us from the gate. We let her in, Dawn went to the door to greet her.\n\n\"Come on in,\" she said as Kerri came into the house. \"Have you had lunch?\"\n\n\"Yes. I wanted to come by and show you some pictures of furniture I have found,\" Kerri said.\n\n\"Sit at the table, and we can look at them,\" Dawn told her.\n\nKerri sat at the table and opened up her portfolio, and got some pictures of furniture out. Dawn and I looked them over while Amy and Samantha looked.\n\n\"I like this double chaise lounge,\" I told her.\n\n\"A double was not easy to find. I brought some samples of material to recover it.\"\n\nShe got out some material, and we looked at it for a while and picked one. She showed us some pictures of different chairs, and we went over them. She had some pictures of some antique Victorian chairs with ornate woodcarvings. I picked two of them.\n\n\"I want to show you this antique one-arm chaise,\" Kerri said as she got a photo.\n\n\"Oh, I like that,\" Dawn said.\n\n\"I do too.\"\n\n\"It needs to reupholstered, but I thought you would like it.\"\n\n\"I think white satin or velvet would look good,\" Dawn said.\n\n\"I'll get some samples. Do you want the chair?\" Kerri asked.\n\n\"Yes, get it.\"\n\n\"Okay, now, I have brass beds for you to look at. Getting one in a Queen is not a problem. Is that big enough?\"\n\n\"Yes, that would be big enough,\" I told her.\n\nWe looked over a lot of pictures. I decided on one that was a mixture of white enamel and brass.\n\n\"I'll order that one then.\"\n\n\"Get a stiff mattress for it. I don't want anyone sinking down into it,\" I told her.\n\n\"Now, paint for the walls. Look at these samples. Do you want flat or semi-gloss?\"\n\n\"Flat.\"\n\nWe looked over the white paint samples. They all looked the same to me. I finally picked something called eggshell.\n\n\"When can I have people come remove the furniture that is in there now?\" Kerri asked.\n\n\"Next week,\" Dawn said. \"I'll let you know.\"\n\n\"As soon as we can get it out, I can have it painted. I think the bed will arrive in a week or so then we just need to have all the furniture recovered.\"\n\n\"How long?\" I asked.\n\n\"I think we will have everything done in a month, maybe six weeks.\"\n\n\"That will give me time to order all the new equipment I need,\" I said.\n\n\"It should be finished in time for your birthday then,\" Dawn said.\n\n\"When is his birthday?\" Samantha asked.\n\n\"October 20th,\" Dawn told them.\n\n\"We will have to have a big party!\" Samantha exclaimed.\n\n\"No, we won't!\" I told her.\n\n\"Ahhh.\"\n\n\"I'm sure we can come up with something else,\" Amy said with a big smile.\n\n\"No party!\" I said.\n\n\"Even a small one?\" Samantha asked.\n\n\"Just like you two had. Just us,\" I said.\n\nSamantha smiled and looked at Dawn.\n\n\"Oh, I think we can plan something like that then!\" Samantha said and giggled. I didn't trust her.",
        "\"We'll work on it,\" Dawn told her, and Samantha smiled again.\n\n\"I'm sure it will be ready by then,\" Kerri said.\n\n\"Anything else?\" I asked.\n\n\"That should cover it for now,\" Kerri said.\n\n\"Good, now we can talk,\" Dawn said.\n\nKerri looked up at Dawn.\n\n\"About what?\" She asked.\n\n\"You and your husband,\" Dawn said.\n\n\"Oh, Dawn, I...\"\n\n\"Oh, Kerri, we can talk about what you told me.\"\n\nKerri looked at Samantha and then at Amy.\n\n\"Don't worry about them,\" Dawn said. \"Now tell us about what you and your husband talked about.\"\n\n\"Well...he was home last week when I was going to come here. It had been a while since we had an entire week to ourselves.\"\n\n\"I hope you made good use of it.\"\n\n\"We did,\" Kerri said with a big smile.\n\n\"So what led up to you asking him about his ladies in other towns?\" Dawn asked.\n\n\"Well, we had been fucking for two days and having a lot of fun. While we were having sex again, I asked him if he was having sex with other women when he was out of town.\"\n\n\"I bet that surprised him!\" Dawn exclaimed.\n\n\"Oh, it did. I was on top of Stan, and he almost lost his erection!\" Kerri said laughing.\n\n\"What happened!\" Dawn exclaimed giggling.\n\n\"I looked at him and told him that I knew he probably was since he was gone all the time.\"\n\n\"What did he say?\"\n\n\"He tried to turn it around. He asked if I was seeing anyone on the side.\"\n\n\"What did you tell him, Kerri?\" Dawn asked.\n\n\"I told him that if he was getting some on the side, I should be able to do that too!\"\n\nKerri and Dawn laughed.\n\n\"What did he say?\"\n\n\"I just looked at him and kept riding him. We smiled at each other and ended up having a great fuck!\"\n\n\"Sounds like you are moving in the right direction,\" Dawn told her.\n\n\"Oh, it gets better. After that, we were lying in bed holding each other. He asked me if I was mad at him since he had been fooling around. I told him that if he was going to keep messing around, then he had to let me,\" Kerri said.\n\n\"I hope he said you could,\" I said to Kerri. She looked up at me and smiled.\n\n\"Oh, I had a little fun with him,\" Kerri replied.\n\n\"What did you do?\" Dawn asked.\n\n\"I got brave. I told him that I hadn't been fooling around with any men yet.\"\n\n\"But?\"\n\n\"I told him that I wouldn't do that to him unless he told me it was okay. Then I told him I had been fooling around with a woman.\"\n\n\"Kerri!\" Dawn exclaimed.\n\n\"That got him interested!\" Kerri said.\n\n\"I bet it did!\" Dawn exclaimed. \"What else did you tell him?\"\n\n\"I told him that one of my lady clients had made a pass at me several times, and the last time she did the two of us ended up in bed!\"\n\nKerri and the girls laughed.\n\n\"What did he say!\"\n\n\"He wanted me to tell him what it was like...in great detail. So, I did.\"\n\n\"What happened?\"\n\n\"We ended up fucking again! Like crazy!\"\n\n\"I'm sure it didn't stop there,\" I said.\n\n\"Oh, it didn't. We had a great fuck then he wanted to know who it was.\"\n\n\"Did you tell him?\" Dawn asked.\n\n\"Oh, no.\"\n\n\"Maybe you should have.\"\n\nKerri looked at Dawn for a moment.\n\n\"What?\" Dawn asked.\n\n\"I wanted to talk to you about something first,\" Kerri said.\n\n\"What?\"\n\n\"Well, you said you would help me,\" Kerri said.\n\n\"Sure! What do you want me to do?\"\n\n\"Well, I was wondering...\"\n\nSherri and Brenda came in, and Kerri stopped talking. I got up to go to them.\n\n\"What are you two going to be working on this afternoon?\" I asked.\n\n\"We were talking at lunch, and we are going to look over some websites like you were talking about,\" Brenda said.\n\n\"Great. Why don't you two take the rest of the day off and do that,\" I said.\n\n\"Okay,\" Sherri said and looked into the kitchen.\n\n\"We can go to my house,\" Brenda said.\n\nThey went to the study and got their computers and left. I went back to the kitchen.\n\n\"Let's go sit in the den,\" I told them.\n\nEveryone moved to the sofas in the den.\n\n\"What do you want me to do?\" Dawn asked.\n\n\"Stan is in Chicago again this week. He told me he would be home Friday night, but I saw his airline tickets when I was helping him pack. He will be back Thursday at noon. He wants to surprise me.\"\n\n\"Let me guess, you want to surprise him,\" Dawn said.\n\n\"I was thinking about something,\" Kerri said.\n\n\"What?\" Dawn asked.\n\n\"I thought maybe when he got home, he could catch us in bed.\"\n\n\"You and James?\" Dawn asked.\n\n\"No! You and me. I don't think he is ready to catch me with another man!\"\n\nThe girls laughed.\n\n\"I think we could arrange that,\" Dawn said.\n\n\"You would be okay with that? I mean, letting him see you and me making love?\" Kerri asked.\n\n\"Sure, if it will help you out,\" Dawn told her.\n\n\"Are you going to let him fuck Dawn?\" Samantha asked.\n\n\"Oh no! Not yet anyway!\" Kerri said giggling.\n\n\"Then what?\" Samantha wanted to know.\n\n\"Dawn, would you let him watch us?\" Kerri asked.\n\n\"Of course, but what do you have planned?\"\n\n\"I'm sure after he watches us he will want to have sex with us,\" Kerri said. \"But, I think I will hold out for a trade.\"\n\n\"Now you are learning!\" Dawn told her, and they laughed more.\n\n\"After he sees us together it will drive him crazy wanting to watch again and join in. I think I will then be in a good negotiating position, don't you?\" Kerri said smiling.\n\n\"Maybe to negotiate a deal for you?\" Dawn asked.\n\nKerri smiled at Dawn then looked at me.\n\n\"I think if my husband wants to have sex with your beautiful wife, I should get to have sex with you...I mean, if that is okay?\" Kerri said to me.\n\n\"I think that sounds reasonable,\" I said. \"But, I think if he is going to get to have sex with my wife, he should have to watch me do you first.\"\n\nKerri smiled at me.\n\n\"Oh, that would be mean,\" Kerri said. \"Once he sees Dawn naked, he may be agreeable to anything!\"\n\n\"I like the sound of that,\" Dawn replied.\n\n\"Make him watch you being fucked by James before he can have sex with Dawn!\" Samantha exclaimed.\n\n\"I think he needs to watch James fuck you for a very long time first,\" Amy said. All the girls giggled.\n\n\"What about us? We want to watch,\" Samantha said.\n\n\"I hadn't thought about that,\" Kerri said.\n\n\"Kerri, if your husband really wants to watch you with another woman, why not let him watch you with three,\" Dawn replied.\n\n\"Oh, I...\"\n\n\"You two could come for dinner after he catches the two us. You can let him know that you want James to fuck you first. Once you are here, the three of us could do you while he watches. If that doesn't make him agreeable to letting you have sex with James, I don't know what will,\" Dawn said. \n\n\"I don't know about that. I was just planning on him watching us again,\" Kerri said.\n\n\"I think if Sam and Amy add some enticement, he will go along with it,\" Dawn told her.\n\n\"What kind of enticement?\" Kerri asked.\n\n\"If your husband thinks he is going to have a chance of being with one of them, I'm sure he will agree to anything,\" Dawn said, and Amy and Samantha laughed.\n\n\"Oh,\" came from Kerri as she looked at Amy.\n\n\"Oh, come on Kerri, we can have some with him,\" Dawn said.\n\n\"I don't know,\" Kerri said. \"Are you two okay with that?\"\n\n\"Sure!\" Samantha and Amy exclaimed.\n\nDawn was sitting next to Kerri on the sofa. She reached over and started unbuttoning Kerri's top. We all watched until she got it open, and reached in and cupped one of Kerri's tits through her bra. Kerri smiled at Dawn as she played with her tit. Dawn stood up and took Kerri's hand.\n\n\"Come with me,\" Dawn said.\n\nKerri stood, and Dawn led her toward the stairs. The three of us followed her up the stairs and to the bedroom. Dawn was standing with Kerri taking her clothes off. Dawn got all of Kerri's clothes off then Kerri took Dawn's off. Once they were both naked, they got up in the middle of the bed, and Dawn laid on Kerri and started kissing her.\n\n\"I think you need to discover what it is like being with more than one woman,\" Dawn told her.\n\nKerri smiled at her and Dawn turned and smiled at Amy and Samantha. The two of them took all their clothes off and got on the bed with them. I sat down in a chair and watched. Dawn kissed her way down until she was between Kerri's legs and licking her pussy. Amy and Samantha got on each side and took turns kissing Kerri and sucking on her big nipples. I watched the three of them treat Kerri to something special until she came in a huge screaming orgasm. She collapsed and lay there panting for a few minutes.\n\n\"Oh, god that was good,\" Kerri got out breathlessly.\n\nDawn slowly kissed her way up Kerri's body and placed her mouth over hers for a minute. Dawn stopped kissing Kerri and smiled at her then she got up, and turned and straddled Kerri's mouth and lowered her pussy down. Kerri grabbed Dawn's hips, and pulled her down and started working on her pussy.\n\n\"Emmmm...\" came from Kerri as she tongued Dawn.\n\nSamantha and Amy went to work on Kerri's nipples again while she ate Dawn. Once Dawn was grinding her pussy into Kerri's mouth while she moaned, Samantha kissed her way down until she could spread Kerri's legs and then started licking and kissing her pussy.\n\n\"Emmmm!\" Came from Kerri.\n\n\"Keep going Kerri,\" Dawn told her.\n\nI watched Kerri squirm under Dawn as Samantha worked on her pussy. Dawn was slowly working her pussy on Kerri's mouth.\n\n\"Oh, yes...keep going Kerri!\" Dawn said.\n\nDawn ground her pussy down as I listened to Kerri moaning louder as she moved around on the bed.\n\n\"Ahhh!! Yes!!\" Came from Dawn.\n\n\"Emmmm!!\" Came from under her as Kerri thrust her pussy up into Samantha's mouth.\n\n\"Ahhhh!!\" Dawn screamed and started coming in Kerri's mouth. \"Oh...yes!!\"\n\n\"Emmmm!!\" Came from Kerri as she thrust her pussy up hard and started coming.\n\nI heard Dawn's pussy gush, then Kerri's.\n\n\"Emmmmm!!\" Came from both of them as they had a huge orgasm.\n\nDawn moved off of Kerri's mouth and lay next to her as Samantha kept going on her pussy.\n\n\"Ahhhh!!\" Kerri screamed and came again.\n\nSamantha sat up and rubbed Kerri's legs.\n\n\"Oh, my...\" came from Kerri.\n\n\"Wasn't that fun?\" Dawn asked her.\n\n\"Fuck, yes...\"\n\nKerri was lying there while Amy kept playing with her tits.\n\n\"You think your husband would enjoy watching that?\" Dawn asked.\n\n\"Well, I enjoyed it. I don't know if he will!\" Kerri said, and all of us laughed.\n\n\"I think if I am on top of him and Amy or Samantha straddles his mouth, he would have a good time,\" Dawn said.\n\n\"I don't think he deserves that!\" Kerri said giggling.\n\n\"I don't know. If he is nice enough to watch you being fucked by James for an hour, he might deserve it,\" Dawn said.\n\n\"An hour?\" Kerri said.\n\n\"At least,\" Dawn said and smiled.\n\n\"Oh, my,\" Kerri said looking at me.\n\n\"You want to practice?\" Dawn asked.\n\n\"You mean right now?\"\n\n\"Sure, why not.\"\n\n\"I guess,\" Kerri said.\n\n\"Honey,\" Dawn said.\n\nI got up and started taking my clothes off. My cock was already hard from watching. Once I had all my clothes off, I got on the bed and got between Kerri's legs as she watched me. I got up close to Kerri and reached down and placed my hands behind the small of her back and lifted her ass up off the bed.\n\n\"Oh!\" She squeaked.\n\nSamantha grabbed two pillows and slid them under Kerri's ass. I lowered her ass down onto the pillows as she looked up at me. Samantha grabbed my cock and worked the end between Kerri's dripping pussy lips. I held her hips and smiled at her, then leaned forward and began to push.\n\n\"Ahhhhhhhhhhh...\" came from Kerri in a long moan as I slid into her slowly. \"Oh, my god!\" Kerri exclaimed as I kept sliding into her.\n\nKerri was good and wet, so I kept pushing and easing my cock into her without stopping.\n\n\"Ohhhhhhh!!\" Kerri screamed as I kept pushing.\n\nShe was snug, but I wasn't hurting her as I slid all of my cock deep into her. I finally reached bottom.\n\n\"Ahh!! Fuck!!\" Kerri screamed.\n\nI pushed a little more.\n\n\"Ahh!!\"\n\nKerri looked at me and then smiled. I slowly slid my cock almost all the way out then started slowly sliding it into her again.\n\n\"Oh...my...god!!\" Kerri screamed.\n\nDawn grabbed Kerri's tits and began to squeeze her large puffy nipples as I kept sliding out and then back into Kerri. She was lying there with her mouth open as I began to work my cock into her.\n\n\"How is that, Kerri?\" Dawn asked.\n\n\"Wonderful!\"\n\nI kept sliding my cock in and out of her as she moaned.\n\n\"What do you think your husband will think as he watches my husband slid his huge cock into you?\" Dawn asked.\n\n\"I don't care!\" Kerri exclaimed, and her stomach arched up. \"Fuck!!\" She screamed and came in a gush. \"Oh, shit!\"\n\nKerri was enjoying my cock sliding in and out of her slowly, so I kept doing it.\n\n\"Oh, fuck, yes!!\"\n\nI was still holding her hips as I slid in and out. Each time I slid into her, I pushed in harder. After a while, I was pushing all the way into her until all of my cock was buried in her pussy. I was enjoying looking at her as I worked my cock. I liked her big puffy nipples that were now full of blood.\n\n\"I think your husband will be jealous,\" Dawn teased her as she squeezed Kerri's tits.\n\n\"I hope he is!\" Kerri said.\n\nI worked my cock in and out of her for about 15 more minutes until she came again in a huge orgasm.\n\n\"Fuck!!\" She screamed and jerked as I held her tight.\n\n\"I'm glad you are enjoying that,\" Dawn said.\n\nDawn sat up, and straddled Kerri's mouth and lowered her pussy down. Once Dawn was settled, she leaned forward, and I kissed her. I sped up some, and we listened to Kerri moaning as Dawn ground her pussy into Kerri's mouth again.\n\nDawn grabbed her tits and squeezed them as she watched my cock sliding in and out of her friend. Amy and Samantha took over on Kerri tits as they lay next to her and started sucking her big nipples.\n\n\"Emmmmm!!\" Came from Kerri.\n\nI worked my cock into her harder as Dawn pushed her pussy down hard. I kept going for about 15 minutes as Kerri moaned and wiggled. When she came again, Dawn came and squirted all over Samantha and Amy as they sucked on her tits.\n\n\"Oh, yes...\" Dawn said.\n\nDawn pushed up off of Kerri.\n\n\"Oh, god!! Oh, oh, oh!!\" Kerri was screaming.\n\n\"Someone swap with me,\" Dawn said.\n\nDawn got off of Kerri's mouth, and Samantha got up over her mouth. Samantha held herself up while I jammed my cock into Kerri for a few minutes.\n\n\"Ohhh!! Fuck!! I'm coming again!!\" Kerri screamed.\n\nWhen she started jerking hard, Samantha lowered her pussy down onto her mouth.\n\n\"Emm!! Emmmmmm!! Emm!!\"\n\nKerri jerked under Samantha as I sped up more and jammed my cock into her even harder. \n\nI was working my cock in her faster and harder as she moaned. Samantha leaned forward and moved her hands down and placed her fingers on each side of Kerri's pussy so she could feel my cock sliding in and out. Kerri's tits were bouncing around now that they were free. Samantha took her fingers and began to finger Kerri's clit hard.\n\n\"Emmmmmmm!!\" \n\nSamantha worked her pussy into Kerri's mouth as she fingered her clit. Kerri kept screaming under Samantha. I kept driving my cock into her as Samantha tortured her while Kerri had a mouthful of her pussy. Samantha kept going, and I kept going for about 20 minutes before Kerri began thrusting her hips up hard as her pussy squeezed my cock.\n\n\"Emmmmmmmmmmmmmmmmmmmmmmm!!\"\n\nKerri's pussy gushed several times as I kept driving my cock into her hard and fast. I watched as she started pushing up on Samantha with her hands. Samantha lifted her pussy off of Kerri's mouth.\n\n\"Oh...oh...oh...ohhh...\"\n\nKerri got quite.\n\n\"Up, Sam,\" Dawn said.\n\nSamantha got off Kerri's mouth.\n\n\"She's out,\" Dawn said.\n\nI looked at Kerri, and her eyes were closed. She had passed out. I kept thrusting my cock into her.\n\n\"James!\" Dawn yelled.\n\nI held her hips tight and drove my cock into her for another minute or two.\n\n\"Ahhhh!!\" I let out and started pumping cum into her pussy.\n\n\"James!\" Dawn yelled again.\n\nI finished pumping cum into Kerri and slid my cock out of her.\n\n\"I don't believe you,\" Dawn said.\n\n\"It's Amy's fault,\" I said. Amy looked at me and smiled.\n\nI sat back on the end of the bed.\n\n\"Let her sleep,\" I said.\n\n\"You're terrible,\" Dawn said.\n\n\"Yes, he is,\" Amy said and moved to me and leaned down and sucked my cock into her mouth.\n\n\"Amy, you turned him on to fucking unconscious women!\" Dawn said then she laughed.\n\nDawn felt Kerri's pulse and decide she was okay.\n\n\"You didn't get to finish,\" Dawn said to Samantha and pushed her back on the bed and got between her legs.\n\nAmy pushed me down across the end of the bed and kept sucking my cock as I watched Dawn going down on Samantha. Kerri was out cold and wasn't moving. Amy kept working on my cock until she had me hard again, then she straddled my cock and worked it into her pussy. She slid all the way down and began to work her pussy hard and fast on my cock.\n\n\"Oh, fuck, yes!!\" Came from Amy as she fucked me hard.\n\nI watched Amy for a while as she worked at getting herself off. While I watched her work and listened to her moaning, I could hear Samantha moaning as Dawn got her off.\n\n\"Oh, fuck!! Dawn!! Yes!!\" Samantha screamed and started thrusting her pussy up.\n\n\"Ahhhh!!\" Came from Amy as she worked faster. \"Yes!! Yes!!\" Amy screamed and came in a gush.\n\nDawn kept working on Samantha as her sister fucked my cock hard. I was worried Kerri would wake up and think we were all totally fucked up. Amy fucked me for a while until she was coming again.\n\n\"Yes!! Come in me!!\" Amy screamed.\n\nI shoved my cock up into her when she screamed again and shot cum into her.\n\n\"Ahhhhhhhhh!! Yes!!\"\n\nAmy fucked me until we were both spent. While Amy was lying on top of me, we listened to Samantha screaming for Dawn to stop. We could all hear each other breathing hard for several minutes.\n\n\"We have to wake her up,\" Dawn said as she sat up.\n\nAmy pushed up off of me and got off the bed and went to the bathroom. She came back with a towel and a bottle of cold water from the small fridge in the bathroom. Samantha and I got up, and we sat on the edge of the bed. Dawn opened the water, and placed the towel next to Kerri and poured it on her tits.\n\n\"Emmmmm...\" came from Kerri.\n\n\"Kerri, wake up!\" Dawn said.\n\n\"Ohhhh...what...oh, that's cold!\"\n\nKerri lifted her head up and looked.\n\n\"What are you doing?\" She asked.\n\n\"You passed out,\" Dawn said.\n\n\"Oh...wow...\"\n\nDawn took the towel and wiped up the water on Kerri.\n\n\"You two started coming, and you passed out,\" Dawn told her.\n\n\"Oh, my god. That was incredible. I have never passed out during sex.\"\n\n\"You have probably never had sex like that,\" Dawn said as she sat next to Kerri.\n\n\"No, I haven't. Emmm, wow...\"\n\nI pulled the pillows out from under her ass now that she was awake.\n\n\"If you make me pass out when my husband is watching, I'll never get to do it again.\"\n\n\"I'll make sure that doesn't happen,\" Dawn told her.\n\nDawn helped Kerri sit up.\n\n\"Emmm...what happened while I was out?\"\n\n\"We took pictures of you posted them on the internet,\" I told her.\n\n\"You probably did,\" Kerri said then laughed.\n\nWe all sat on the bed and talked and laughed for a while. \n\n\"Come with me so we can shower,\" Dawn said as she got off the bed.\n\nShe took Kerri's hand and led her to the bathroom.\n\n\"That was fun,\" Amy said.\n\n\"You two go get cleaned up,\" I told them\n\nThey left, and I went to the bathroom and joined Kerri and Dawn in the shower. After we had washed each other off, Kerri got down on her knees and sucked my cock into her mouth as the water ran over her, like she had done the last time. Dawn got out to dry off while Kerri sucked my cock. I watched Kerri as she worked her mouth on my cock for a few minutes, then she started trying to take it down her throat. She took her time, and after a while, she was getting a lot of my cock down her throat as she worked her mouth on it.\n\n\"Emmmmmm,\" I felt on my cock.",
        "Kerri went to work sliding her mouth up and down on my cock. I let her go for a long time before I filled her mouth full of cum. She slid her mouth off and stood.\n\n\"I'll get all of it down my throat one day,\" she said.\n\n\"What will your husband think when he sees you taking all of it down your throat?\" I asked her.\n\n\"I hope we get to find out.\"\n\nI kissed her then turned the water off.\n\nKerri hung out with us until dinner. She and the girls plotted all afternoon and had fun. I cooked dinner while they all talked and laughed. After we all ate, Kerri went home.\n\n\"I heard you four plotting,\" I said to them as we cleaned up.\n\n\"We are just going to have some fun,\" Dawn said.\n\n\"What else were you talking about?\"\n\n\"After our surprise, Kerri is going to ask him to take her to Chicago one week to meet his girlfriend there,\" Dawn said.\n\n\"That should be interesting,\" I said.\n\nWe all went to the den and found a movie to watch. When it went off at 10:30, Amy and Samantha had fallen asleep.\n\n\"I'll get Amy,\" Dawn said.\n\nWe got up, and got two sleepy girls up and headed up the stairs. Dawn took Amy into our room, and I took Samantha down to her room. I got her in bed then got in bed with her and turned off the lights.\n\n*****\n\nWednesday morning, I loaded the trailer with two four-wheelers and hooked it up to the Escalade. After lunch, we left Sherri and Brenda working, and we headed down the road.\n\n\"I have a question?\" I asked all of them. \"Have all of you been out here on your drives?\"\n\nI got yeses from all of them; I should have known.\n\nAbout 20 minutes later, we got to the dirt road. I pulled in, and Dawn called the man while I unloaded the four-wheelers.\n\n\"This really is a pretty place,\" Amy said.\n\n\"Yes, it is,\" I told her.\n\n\"James, how big is 1000 acres?\"\n\n\"Over forty-million square feet.\"\n\n\"Wow!\"\n\n\"If it were square, it would be over a mile on each side.\"\n\n\"Damn, that would be pretty secluded.\"\n\n\"That would be a small town,\" I kidded her.\n\n\"He said he would be here in about 15 minutes,\" Dawn told us.\n\n\"Dawn, did you know that the land would be over a mile on each side?\" Amy asked.\n\n\"I hadn't thought about it.\"\n\nAmy and Samantha started one of the four-wheelers and got on and went driving around while we waited. Dawn and I were talking when an old beat up rusty pickup truck with a noisy muffler pulled down the dirt road. A healthy looking old man got out and walked over to us.\n\n\"Mrs. Smith?\" He asked.\n\n\"That's me, Dawn, and this is my husband, James.\"\n\n\"Call me Earl.\"\n\n\"Nice meeting you Earl,\" I said.\n\n\"I have had this property up for sale for years, no one has been interested it in, they say it is too far out to put houses on,\" Earl said. \"Why do you want it?\"\n\n\"We have 300 acres back toward town that we live on, we would just like having a big place we can go to that is nice and quiet,\" Dawn said.\n\n\"Are you going to build a house on it?\"\n\n\"Not anytime soon, but maybe someday we may build a house or something on it if we buy it,\" I told him.\n\n\"I would hate to see all the trees cut down for houses, most of the land is covered in hardwood. There is a lake on the back.\"\n\n\"The trees are beautiful, they would stay. How big is the lake?\" Dawn asked.\n\n\"Probably about 50 acres, it is fed by a big stream that runs across the property. It has bass, catfish, and crappie in it.\"\n\n\"That sounds nice,\" Dawn said.\n\n\"I told your wife the price. I think it's a fair price. I need some money to give to my kids and all my grandkids, plus some money to put away to pay taxes on all the other land when I pass.\"\n\n\"The price sounded fair,\" I told him. \"Exactly how many acres is it?\" I asked.\n\n\"I have a copy of the deed map in the truck, let me get it.\"\n\nEarl walked back to the truck.\n\n\"This sounds so nice,\" Dawn said.\n\nAmy and Samantha had driven back to us. Earl walked back slowly carrying a piece of folded paper.\n\n\"Who are these two lovely young ladies?\" Earl asked.\n\n\"This is Amy and her sister Samantha,\" I said.\n\n\"Hello,\" they both said.\n\n\"Let me see how many acres this parcel is,\" Earl said as he unfolded the paper.\n\n\"How much land do you own here?\" I asked.\n\n\"Somewhere around 12,000 acres, been in my family for generations. I just want to make sure there is enough money to pay the tax man so that it doesn't have to be sold off. It used to be a huge plantation, until the war, now I just farm parts of it and lease parts of it to other farmers. This wooded parcel can't be farmed.\"\n\n\"That sounds like a lot of land,\" I told him.\n\n\"Here we go,\" Earl said as he got the map unfolded. \"This says 1843 acres,\" Earl said as he handed me the plot map.\n\nI almost choked as I looked at the map making sure he hadn't misread it. I took my time looking it over, the piece of property was huge. There were over 3000 feet of road frontage; it would make a small town. Dawn walked up and grabbed my arm as she looked at the map.\n\n\"Earl, you mind if we take the map and drive around and look?\" I asked.\n\n\"No problem, take your time. When you are finished come on down the road about 3 miles, I am the only house on the left.\"\n\n\"We will,\" I told him.\n\nEarl walked back to his truck and got in and turned it around and drove back down the dirt road.\n\n\"James?\" Dawn said.\n\n\"I don't believe this. I will have to have the lawyers check and make sure this correct,\" I told Dawn.\n\n\"Can we go check everything out?\" Amy asked.\n\nWe rode around for about 3 hours trying to follow the edge of the property from the map. When we came to the stream feeding the lake, we stopped.\n\n\"This is pretty,\" Samantha said.\n\n\"The spring is deep enough to swim in!\" Amy said excitedly as she looked.\n\n\"Yes, it is,\" I told her as I looked at the clear water.\n\nDawn got off from behind me. I looked, and she was taking her clothes off.\n\n\"We are going to buy this aren't we?\" Dawn asked.\n\n\"Yes, we are.\"\n\n\"Do you two mind if James fucks me for the first time on our land?\" Dawn asked.\n\n\"Go ahead,\" Samantha said with a laugh.\n\nDawn had me get off the four-wheeler, and she took my clothes off. I climbed back on the four-wheeler and Dawn got on in front of me. I fingered her pussy until she was good and wet. Dawn placed her legs over mine and slid up and worked my cock inside her.\n\n\"Emmmm, I like this. We have a nice big place that we can all come to have fun. Can we get a nice big tent and camp here on the weekends?\" Dawn asked.\n\n\"Does that sound good to you two?\" I asked.\n\n\"Yes!!\" They screamed.\n\n\"Oh yes!\" Came from Dawn as she leaned back and worked her pussy on my cock.\n\nI held Dawn's hips and helped her work her pussy up and down on my cock. Amy and Samantha came over. Amy leaned over and sucked on Dawn's nipple while Samantha fingered her clit.\n\n\"Oh shit!\" \n\nDawn was really getting turned on.\n\n\"Sam, lick her clit,\" Amy said.\n\nI watched Samantha lean forward and begin licking on Dawn's clit. Every few seconds she would lick my cock as it slipped in and out of Dawn.\n\n\"Oh my god, oh my god!!\" Dawn screamed.\n\nI worked Dawn's hips faster for a while. She was squeezing my cock with her pussy making me want to come.\n\n\"Oh fuck!!\"\n\nDawn started humping her hips; I felt her come, so I pumped her pussy full.\n\n\"Shit!!\"\n\nDawn started squirting, and Samantha sucked it up. Dawn jerked a few more times as Samantha licked her clit.\n\n\"You two stop!!\" Dawn screamed.\n\nAmy and Samantha stopped. Amy kissed Samantha for a minute as they tongued each other.\n\n\"Yes, I am going to like this place more now!\" Dawn said.\n\n\"We better go, it is getting late,\" I said.\n\nDawn and I got dressed, and we finished our tour and ended up back at the SUV. I got the four-wheelers loaded back onto the trailer and turned around and headed back to the road and turned right to find Earl's house. A few minutes later we found an old house on the left and turned in. Dawn and I got out and walked up to the door and knocked.\n\n\"Come on in!\"\n\nWe opened the old screen door.\n\n\"What did you think?\" Earl asked as we entered.\n\n\"It is a very nice place,\" Dawn said. \"Is your wife here?\"\n\n\"Helen passed several years ago, I just have the kids now. One son and his wife live down the road a piece, the other lives in town. My daughter lives over in the next county with her husband and kids.\"\n\n\"Well Earl, I think we are interested in buying the property,\" I said.\n\n\"Well finally.\"\n\n\"I need to have some people look at this deed and have them draw up any papers we need, so you don't have to do that. I can try and get that done before next week. Does that sound okay?\" I asked him.\n\n\"Sure thing.\"\n\n\"I'm going to give you a deposit so that you know I am serious, okay?\"\n\n\"You don't have to do that if we shake on it, it is good enough for me.\"\n\n\"That is good enough for me, Earl, but I want you to take this anyway.\"\n\nI wrote Earl a check for $500,000 and gave it to him.\n\n\"I appreciate it. I'll keep this until you come back.\"\n\n\"That's fine. Can I take this deed with me so the legal people can look it over?\"\n\n\"Sure, sure.\"\n\n\"Earl, do you know anything about setting up a trust for your kids?\" I asked.\n\n\"Not really. I just want to keep the tax man from taking all the money and land.\"\n\n\"Are you going to leave everything to your kids?\" I asked.\n\n\"Appears so.\"\n\n\"I know something about doing that, and my lawyers could do it right for you. If you put the money in the trust, it will save you a lot on taxes. Then when your kids take it out a little at a time, they only have to pay taxes on that. You can also put all your land in a trust and help keep the tax man from taking it,\" I told him.\n\n\"I don't know anything about that.\"\n\n\"I will talk to my lawyers and have them call you about doing it. I will pay for it if you want to do it right,\" I told him. \"I have a trust for my family.\"\n\n\"That would be generous, thank you.\"\n\n\"Earl, we'll call you as soon as everything is ready and come back and take care of everything, so you don't have to go into town.\"\n\nWe had no sooner gotten back on the road when Dawn got all excited.\n\n\"That is a big piece of land!\" Dawn said. \"Is that a good price?\"\n\n\"Well, that is about $2800 an acre, that is pretty damn good,\" I said.\n\n\"Do you think it is a good investment?\" Dawn asked.\n\n\"Yes, it is. You did good.\"\n\n\"What are you going to do with all that land, are you going to build another house on it?\" Samantha asked.\n\n\"No, we are not going through building another house,\" I replied.\n\n\"Then what?\"\n\n\"Maybe we can open a nudist colony,\" I said teasing Samantha.\n\n\"That would be fun!\"\n\nBy the time we got back to the house, it was almost 6:00. Brenda and Sherri had left for the day. While the girls went into the house, I unloaded the four-wheelers and put them away.\n\nWhen I went in, I checked the study. There was a note from Brenda saying that Linda had called them and wanted them to come and finalize the blueprints and talk about some marketing ideas. She said they wouldn't' be in Thursday or Friday and would see us Monday.\n\nDawn came in and said she and the girls were going to start dinner. I opened up my email to check. I saw a reply from Linda and opened it. She said she and Rachel wanted to come to the party and that they were taking that Monday off. She also wanted to know if they could come Friday after work and stay until Monday. I sent her an email back and told her, of course, they could spend the weekend. I also sent an email to one of our lawyers and told him I would be coming by so they could take care of the land purchase. I got busy looking over all the things that I was working on.\n\n\"Hey, dinner is ready,\" Dawn said as she came into the study.\n\n\"Okay. Linda and Rachel said they would come to the party and asked if they could come Friday after work and stay the weekend. I told her they could.\"\n\n\"That will be good for them to have a weekend off,\" Dawn replied.\n\nWhile we were eating dinner, Samantha and Amy kept asking what we had planned for the land.\n\n\"Nothing particular at this point,\" I told them.\n\n\"I can't wait until we can go camping on it,\" Samantha said.\n\n\"I liked that lake. I think it will be fun to swim in,\" Amy added.\n\nWe all talked as we ate. After we finished, Samantha helped me look at limo brochures for a while. After that, we all watched TV awhile then went to bed.\n\n*****\n\nThursday morning I woke up thinking Dawn was sucking my cock. When I looked down, it was Samantha.\n\n\"Good morning,\" I said.\n\n\"Good morning.\"\n\nSamantha went back to work sucking my cock. \n\nDawn came out of the shower running a towel through her wet hair as she watched Samantha.\n\n\"I have to go into town this morning and take that deed to the lawyers,\" I said.\n\n\"Okay. I'm not sure what time I will be back from Kerri's,\" Dawn replied.\n\n\"Just let him watch, that's all,\" I teased Dawn.\n\nShe winked at me then went back into the bathroom.\n\n\"You want to go into town with me?\" I asked Samantha.\n\n\"Emmm.\"\n\nSamantha kept going until she got me off and I filled her mouth full of cum.\n\n\"If you want to go with me, go get ready.\"\n\n\"What do you want me to wear?\"\n\n\"Just something nice.\"\n\nShe jumped up and left the bedroom. I got up and went to take a quick shower and shave. Dawn was sitting and working on her makeup.\n\n\"Stay out of trouble,\" I said as I shaved.\n\n\"I wouldn't get into any trouble.\"\n\n\"Yes, you would.\"\n\nDawn looked at me in the mirror and smiled.\n\n\"Maybe I can entice him some,\" Dawn said.\n\nAfter Dawn got dressed, we went down and started breakfast. Amy and Samantha finally came down. Samantha told her sister she was going into town with me. I looked at her, and she had on some nice pants and Dawn's see through sheer white silk top; unbuttoned enough to see most of her tits without a bra.\n\n\"Are you wearing Dawn's see through tops now?\"\n\n\"No, she got me one like hers.\"\n\n\"You are leaving me here alone?\" Amy said.\n\n\"I'll be back in a few hours,\" I said.\n\n\"I'm not leaving until about 10:00,\" Dawn told her.\n\n\"Take me with you,\" Amy said to Dawn.\n\n\"Not this time,\" Dawn told her smiling and winking.\n\n\"When I get back, I'll take you two to lunch,\" I told them.\n\nSamantha followed me to my Vette in the garage, and we got in.\n\n\"You are getting as bad as Dawn about wearing see through clothes. Make sure your top doesn't blow off,\" I told her while backing out.\n\nAs we drove to town with the top down, I would look over at Samantha's hair blowing. When we got into town and had to stop at all the lights, she got a lot of looks from other drivers.\n\nWe finally got to the lawyer's office and went inside. I walked to the receptionist and told her I was there to see Will. Samantha and I found a seat as some of the men in the lobby looked over Samantha.\n\n\"Hello, Dr. Smith,\" Will said coming out into the busy lobby.\n\n\"Hey, Will. I have something I need you to do. I am looking at this piece of property, and I need you to check on it for me.\"\n\nWill took the deed as he looked at Samantha's tits.\n\n\"We will need to have it surveyed, and that could take a week,\" Will told me.\n\n\"Take care of it for me and get all the paperwork ready as soon as you can. I told the man that owned it I would take care of all the paperwork so he wouldn't have to come into town.\"\n\n\"I can do that, but it still has to be notarized.\"\n\n\"I'm sure you wouldn't mind a drive out to the country, Will. I want you to talk to this man for me and explain a trust to him. He has a ton of land he wants to keep out of the hands of the tax people when he dies. I'll take care of the expenses,\" I told him.\n\nWill was one of the younger lawyers; he usually took care of paperwork for me.\n\n\"I'll get this started and call him.\"\n\n\"Thanks.\"\n\n\"I have that other paperwork for you,\" Will said.\n\n\"Okay, let's go into your office, and I will sign it,\" I said ushering him away from Samantha. \"Samantha, I'll be right back.\"\n\nI got Will to his office.\n\n\"Sorry, I didn't want you to mention the trust in front of her,\" I told him.\n\n\"Is that the Samantha on the trust?\"\n\n\"Yes. One is for her, one is for her sister.\"\n\nI sat down and signed all the paperwork. Will handed me the folded blue legal papers. \n\n\"Dr. Smith, may I ask who that young lady is?\"\n\n\"She is one of my wives.\"\n\n\"What?\"\n\n\"Dawn and I consider Samantha and her sister Amy as our wives now.\"\n\n\"Uhh, I don't understand.\"\n\n\"It' simple Will, we all live together now and are one family.\"\n\n\"That's not really legal, Dr. Smith.\"\n\n\"We know, but we are all a family now.\"\n\n\"Can I ask how old she is?\"\n\n\"Nineteen.\"\n\n\"Wow, she is pretty hot...and sexy.\"\n\n\"Yes, she is Will. Very hot and sexy.\"\n\nI took the papers and we walked back out to the lobby. One of the young clerks was flirting with Samantha, and she was letting him. Two other guys were standing nearby looking at her tits.\n\n\"Dr. Smith, I'll call you as soon as all this is ready. What is the selling price?\"\n\n\"Five million.\"\n\nSamantha and I left the office. \n\nI let Samantha drive my Vette back home. On the way, my cell phone rang. When I answered, it was my sister-in-law, Angie.\n\n\"What's up, Angie?\"\n\n\"I want to know if Amy could come visit us this weekend?\"\n\n\"You will have to ask her, but we have some friends coming over this weekend, what about next weekend?\"\n\n\"Okay.\"\n\n\"Does Brian want her to come and visit?\"\n\n\"Him and me.\"\n\n\"I will say something to her and have her call you, but, school is starting.\"\n\n\"Okay. Can she spend the night?\"\n\n\"Ask her. Angie, we are having a little celebration for Amy and her sister, Samantha, Labor Day weekend, would you and Brian like to come?\"\n\n\"What kind of celebration?\"\n\n\"Just a little party to celebrate the two of them going back to school.\"\n\n\"James, is her sister living with you two now also?\"\n\n\"Yes, we had her move in so she could go to school here, and Amy is going back to graduate school.\"\n\n\"Are you doing her too?\"\n\n\"We have some fun. Maybe you should come here, and I could send Amy and Samantha to stay with Brian.\"\n\nSamantha looked over at me and smiled.\n\n\"Maybe another time. Brian now likes to watch me with another woman.\"\n\n\"Oh? When did this start?\" I asked.\n\n\"Recently,\" Angie said.\n\n\"Good for you. How about him watching you with another man?\"\n\n\"We are getting there. He is still getting over you doing me.\"\n\n\"Do you want to come to the party?\"\n\n\"I guess we could.\"\n\n\"It may be clothing not optional.\"\n\n\"You mean everyone would be naked!\"\n\n\"Yes, and after the party, you may have a chance to meet some new people.\"\n\n\"You mean have sex with new people?\"\n\n\"If you want. I have a friend that I know would love to meet you. I might be able to arrange the two of us doing you at the same time, Angie.\"\n\n\"Oh, my god. I don't know about that.\"\n\n\"Talk to Brian about it, see if he wants to come. Maybe this will be your chance to let Brian watch you with other men.\"\n\n\"Are you inviting Deb and Pete?\" Angie asked.\n\n\"Pete is too much of a horn dog.\"\n\n\"I'll see.\"\n\n\"Just tell my brother there will be a lot of naked women here.\"\n\n\"Maybe.\"\n\n\"I'll have Amy call you.\"\n\n\"Okay, bye.\"\n\n\"That sounded interesting,\" Samantha said.\n\n\"It was. I'll have to see if your sister wants to spend the night with them.\"\n\n\"If she doesn't I will.\"\n\nWhen we got home, Dawn had left. I went to the study and called Earl to tell him the surveyors would be out, and that Will would be calling him. I spent some time talking to him about the benefits of putting everything in a trust.\n\n\"Are you two ready to go eat?\" I asked Amy and Samantha.\n\nWe all got in the Escalade and left. I drove into town to an Italian place, and we went in. The waiter got very distracted looking at Samantha's tits. We took our time and got back home about 1:30. We were sitting in the den when Dawn came in about 2:00. She walked over and sat with us.",
        "\"Did you have fun?\" Amy asked Dawn.\n\n\"Oh, we had a great time!\"\n\n\"What about her husband?\" Samantha asked.\n\n\"We made sure when he came into their bedroom Kerri was face down on my pussy. We knew he was coming in. I jumped and pulled a sheet up over me.\"\n\n\"What happened?\"\n\n\"Kerri turned and sat up and said, \"Hi, honey.\" \"\n\n\"What did he do?\"\n\n\"Stood and stared for a few minutes. Kerri told him she hoped he didn't mind what she was doing. Of course, he said he didn't! She asked him if he wanted to watch and he sat in a chair and Kerri went back to work. The two of us did each other for about an hour and a half.\"\n\n\"Did he have anything to say?\" I asked.\n\n\"Oh, yes. He even asked Kerri if she liked eating my pussy.\"\n\n\"What did she say?\"\n\n\"She told him that she enjoyed doing it very much and that I tasted wonderful. He kept trying to talk Kerri into letting him join us. She teased him and finally told him okay. He couldn't get out of his clothes fast enough!\" Dawn said and laughed. \"He crawled up on the bed and looked at my pussy. Kerri told him to go ahead.\"\n\n\"I thought you were going to be good,\" I said.\n\n\"Well, I pulled my legs up and spread them, and he got between them and placed his mouth on my pussy. You won't believe what Kerri did!\"\n\n\"What!\" Amy asked. Dawn laughed for a minute.\n\n\"After about a minute, Kerri told him she had changed her mind!\"\n\n\"Oh, that's mean,\" I said.\n\n\"He spent about 15 minutes trying to get her to change her mind, but she kept telling him my husband would have to say it was okay first. When I left, he was going down on Kerri hard.\"\n\nDawn and the girls laughed for a minute.\n\n\"What's next?\" I asked.\n\n\"I guess that will depend on how bad Stan wants to finish me!\"\n\n\"I'm guessing that will be pretty bad,\" I told Dawn. She came over and kissed me.\n\n\"She said she would call me tonight.\"\n\nIt was now a little after 3:00, and Amy and Samantha decided they wanted to go swimming. I went out to the patio to watch them playing in the water for a while.\n\n\"Honey, can you come inside?\" Dawn said from the door.\n\n\"Sure.\"\n\nI went back inside to see what Dawn wanted; she was sitting at the bar in the kitchen with her sketchbook.\n\n\"Look at this and tell me what you think?\" Dawn asked.\n\nI looked at her sketchbook, and she had drawn a couple of different ring designs.\n\n\"These are pretty,\" I told her.\n\n\"I went to our jeweler and told him what I wanted, and he helped me sketch these. I like this band here. It looks like four separate bands next to each other.\"\n\n\"I like that.\"\n\n\"Look at these two drawings, one has four diamonds in a row around the top of the band, the other has four diamonds in a square on top, which do you like?\"\n\n\"Dawn, the three of you have small fingers, how big are the diamonds going to be?\"\n\n\"He can get four smaller diamonds on there, or maybe a little bigger.\"\n\n\"I like the one with the four diamonds in a square on top.\"\n\n\"I do too,\" Dawn said.\n\nDawn opened a small box she had.\n\n\"See if this fits.\"\n\nShe had a man's wedding band. It was yellow gold in the center and had a white gold band on each side. There were four indentions in the yellow gold with a small diamond in each. I tried it on.\n\n\"It fits, and it is nice looking.\"\n\n\"If you like it, that is yours.\"\n\n\"I think it is perfect. How long will it take him to make three rings since we are doing this in a few weeks on Labor Day?\"\n\n\"He has the bands in yellow gold, and he said he could have the diamonds in a week. I just have to let him know what quality for the stones. He said whichever design we picked he could mount the diamonds in a few days after he gets them.\"\n\n\"He can have them before Labor Day?\"\n\n\"Yes, just tell me how much you want to spend so we can decide on the diamonds.\"\n\n\"Honey, tell him to get the best he can get.\"\n\n\"Okay, I will call him in a few minutes.\"\n\n\"You two come join us!!\" Samantha yelled as she came through the door dripping.\n\nI dropped my hand with the ring on it behind the bar and Dawn flipped the sketchbook closed.\n\n\"Give us a minute. You two want something to drink?\" Dawn said.\n\nSamantha looked at us for a minute.\n\n\"No, you two come on,\" Samantha said as she turned and went out the door.\n\n\"Give me those drawings right now. I am putting them and this ring in my safe in the computer room along with documents for the trust.\"\n\n\"Damnit!\" Dawn said as she tore the drawings out.\n\nDawn took her clothes off to go outside while I went to lock the items up. I took my clothes off coming back through the den and stopped in the kitchen and grabbed two bottles of water then went out to the pool.\n\n\"You two need to drink some water, you have been out here awhile,\" I told them when I walked up to the pool.\n\nAmy and Samantha swam to the side, and I handed them the water. I jumped in and joined them.\n\n\"You two have been out here awhile, don't get burned.\"\n\n\"We are okay,\" Samantha said while she sipped her water. \"What were you two doing?\"\n\nAmy and Samantha were looking at me.\n\n\"Something,\" I said.\n\n\"James,\" Amy said.\n\n\"Samantha, you are as bad as your sister. We were talking about the Labor Day party.\"\n\n\"Tell us about it then,\" Samantha said.\n\n\"You already know about it. Dawn was telling me about some decorations she wants to put up.\"\n\n\"You don't decorate for Labor Day,\" Amy said.\n\n\"If I tell you two, Dawn will kill me.\"\n\n\"What is she up to?\" Amy asked.\n\n\"Please don't say anything but she wants to decorate the gazebo to celebrate Samantha living here now and the two of you going back to school, but you can't say anything, alright.\"\n\n\"She is going back to school too,\" Samantha said.\n\n\"I am going to leave that up to you two, find some way to surprise her, but you can't let her find out,\" I said.\n\n\"Okay!\" Samantha said.\n\n\"What are you three talking about?\" Dawn said as she swam over to us.\n\n\"Nothing!\" Samantha said.\n\nDawn looked at the two of them and smiled. Amy and Samantha swam off behind the waterfall.\n\n\"What happened?\" Dawn asked.\n\n\"Samantha.\"\n\n\"What did she ask?\"\n\n\"I took care of it. By the way, we are decorating the gazebo to celebrate Samantha living here now and them going back to school for Labor Day.\"\n\n\"We are?\"\n\n\"Yes, we are. I had to think of something, and I told them that was what you were doing, and it is a secret.\"\n\n\"You're good.\"\n\n\"Thank you,\" I said.\n\n\"The only decorations I have are the ones left over from Sam and Olivia's wedding.\"\n\n\"Perfect. We can get some more.\"\n\n\"Let's go join the girls,\" Dawn said.\n\nWe swam behind the waterfall and found Amy sitting on the ledge and Samantha eating her pussy.\n\n\"Good idea,\" Dawn said as she climbed up on the ledge. \"James, come here please.\"\n\nAmy and Samantha watched as I got between Dawn's legs and started licking her pussy.\n\n\"You two go ahead!\" Dawn told them.\n\nThere were plenty of moans and groans for the next 15 minutes, Dawn and Amy both had a huge orgasm.\n\n\"Who is going to do me?\" Samantha asked.\n\n\"We will leave you two alone,\" Dawn said as she took Amy's hand and they left us alone.\n\n\"Oh goodie,\" Samantha said as she started to climb up on the ledge.\n\n\"Come her Samantha. I have another plan.\"\n\nI got Samantha to jump up and wrap her arms around my neck and her legs around my waist. She looked at me and smiled. I reached between her legs and placed my hard cock at her pussy, and she lowered herself down.\n\n\"We haven't done this recently,\" Samantha said.\n\n\"I know.\"\n\nSamantha and I had a good time for about half an hour; she really enjoyed being alone with me while we fucked in the pool. After we had come together, Samantha wrapped her arms around me tightly and laid her head next to mine while I held her.\n\n\"Did you like that?\" I asked.\n\n\"Yes, your hot cock slipping in and out of me in the cool water always feels wonderful.\"\n\nSamantha looked at me and smiled then kissed me.\n\n\"Ready to go in and have lunch?\"\n\n\"As soon as you tell me what you two were really doing.\"\n\n\"Samantha, I can't tell you, okay.\"\n\n\"Okay.\"\n\nWe got out of the pool and went inside. Amy and Dawn were making a salad since we hadn't eaten. Samantha went over and hugged Dawn.\n\n\"What is this for?\" Dawn asked.\n\n\"For letting me make love to your husband,\" Samantha said as she hugged her.\n\nDawn hugged Samantha then went back to the salad. A minute went by, and Dawn turned to Samantha sitting at the bar.\n\n\"Sam, will you help your sister finish, I need to go to the restroom.\"\n\nSamantha took over, and Dawn hurried down the hall. \n\n\"Amy, Angie called and wanted to know if you would like to spend the weekend with her and Brian,\" I said.\n\n\"Sure, when?\"\n\n\"Maybe next weekend before school starts.\"\n\n\"How is it going to work?\" Amy asked.\n\n\"Brian seems to now want to watch Angie with another woman.\"\n\n\"Good for him!\"\n\n\"I'm sure he wants to fuck you also.\"\n\nAmy and Samantha finished the salad; Dawn was gone too long.\n\n\"Everything ready?\" Dawn asked when she came back.\n\nShe didn't hide it well because we all knew she had been crying.\n\n\"We are ready.\"\n\nWe put all the food on the bar, and we sat down and started eating. Dawn was quiet for a while.\n\n\"I need to talk to you two,\" Dawn said as she stopped eating.\n\nAmy and Samantha stopped eating and looked at her.\n\n\"I'm not sure where to start. Samantha, we have talked about this some, but is this your new home, do you want to live here forever like you said?\"\n\n\"Yes, I do.\"\n\n\"We need to talk about something then. You and your sister have said you want to live here forever, if that is true, I want you two to change some of the things you say. We are a family now. It may be a different family, but you two understand what I am saying. Sam, you said a few minutes ago thank me for letting you make love to my husband.' I don't want you two to ever say anything like that again. James is my husband we have discussed that, but, he is more to you two than my husband. He is your husband now.\"\n\n\"We know that,\" Amy said.\n\n\"James can never legally be all of our husband, but I want you two to think of him as your husband too. I don't want either of you ever to say something like what Samantha said, everything has changed. I want you two to think of James differently now, okay.\"\n\n\"Okay,\" the two of them said.\n\n\"Let's finish eating, I didn't mean to upset everyone,\" Dawn told us.\n\n\"You didn't upset us. Thank you,\" Samantha added.\n\nAfter we finished eating, I went to the study to check my email to see who all was coming Labor Day. Dawn came in later.\n\n\"It looks like everyone is coming,\" I said. \"I also talked to Angie, I asked her and Brian to come.\"\n\n\"What did Angie want?\"\n\n\"She asked if Amy could spend the weekend with them.\"\n\n\"School is starting.\"\n\n\"She said Brian likes to watch her with another woman now.\"\n\n\"Oh, when did this happen?\"\n\n\"She said recently, but no other guys yet. I thought if they wanted to come to the party that maybe Angie would get chance if they want to stay.\"\n\n\"Did you tell her that?\"\n\n\"I did.\"\n\n\"I guess we are having a nude wedding on Labor Day. Do you think you could email everyone again and ask them to bring them a small wedding present? Do you think they would keep quiet?\"\n\n\"That would be nice. I'm sure they will.\"\n\n*****\n\nLater in the evening, I was cooking a late dinner because all of the girls had been drinking wine and were in the den talking and cutting up.\n\n\"James, you cook better than I ever will,\" Samantha said as she walked up next to me.\n\n\"Be careful, or I will send you to cooking school,\" I told her.\n\n\"No, you won't!\"\n\n\"Then you can help.\"\n\nSamantha was helping me cook while we heard Amy and Dawn laughing about Dawn's adventure.\n\n\"I think all of you have had too much to drink,\" I said.\n\n\"We are just happy.\"\n\n\"Are you ready for school in a few weeks?\"\n\n\"Yes. I'm ready to get started. I wish I could go with you to see the limos.\"\n\n\"I think you will be too busy.\"\n\n\"If I'm not, can I go?\"\n\n\"We'll see.\"\n\nThe two of us finished cooking and got Amy and Dawn to come and eat. We all ate and laughed. Dawn and I were cleaning up while the two of them were still laughing in the den.\n\n\"Hey, you two! I think you need some fresh air. Go and get the mail,\" Dawn told them.\n\nWe heard them go out the front door. \n\n\"How big is this party going to be?\" Dawn asked.\n\n\"It will be Sunday, then anyone that wants to stay until Monday can.\"\n\n\"I think you better talk to Brian before the two of them come.\"\n\n\"I'll call him.\"\n\nWe finished and walked back to the den about the time they came in with the mail.\n\n\"Dawn, you got another one of your packages from someplace in South America,\" Samantha said.\n\n\"Just drop it all on the table in the foyer with everything else, I'll go through it all later,\" Dawn told them.\n\nThey came to the den and sat with us.\n\n\"I think you two have had enough wine for the day,\" I said.\n\n\"So, what are the plans for Friday?\" Amy asked.\n\n\"Our broker and his wife are coming, and the Chief of Police is coming with his wife for dinner.\"\n\n\"Do they know other people are coming?\" Amy asked.\n\n\"I mentioned it.\"\n\n\"What about after dinner?\" Samantha asked.\n\n\"That will be up to what everyone wants to do. We will have to see,\" I said.\n\n\"I haven't met the Chief's wife,\" Dawn said.\n\n\"I met her once. She is very cute and outgoing,\" I said. \"That reminds me, call Joseph in the morning and see if he wants you to talk to his wife.\"\n\n\"I better call Bill and see if I need to talk to his wife too.\"\n\n\"If we do the Chief of Police, will that get us out of speeding tickets?\" Samantha said.\n\n\"No, and you better not get any,\" I told her, and she giggled.\n\nWe sat and discussed the upcoming evening. Dawn was talking to the girls about the other wives being new to women. They talked and made plans for a while. Samantha and Amy started running out of gas from all the wine they had.\n\n\"I'm ready for bed,\" Amy said.\n\n\"Me too,\" Samantha replied.\n\n\"Come with me,\" Amy told her sister.\n\nThe two of them got up and headed up the stairs.\n\n\"I hope everyone has a good time tomorrow,\" Dawn said.\n\n\"I think they will.\"\n\nA bit later, Dawn and I went upstairs and to bed.\n\n*****\n\nDawn and I got up early Friday morning. We went and got the girls up.\n\n\"Why so early?\" Samantha moaned.\n\n\"We have to clean the house up, and I have to go shopping,\" Dawn told her.\n\nDawn and I went down and started breakfast. The girls came down a few minutes later.\n\n\"Sam and Amy, everyone is coming Labor Day for a bar-b-cue and a little party for you two for going back to school,\" Dawn said.\n\n\"We know,\" Samantha said.\n\n\"I guess you probably do. We weren't sure everyone was going to get to come on short notice, so we hadn't said anything to you.\"\n\n\"Are Nancy and the twins coming to cater?\" Amy asked.\n\n\"She already had another party booked since we waited so long, so just the four of us are going to do all the cooking. We will have to start the day before. James will be smoking shoulders and ribs, and it will take all night.\"\n\n\"I'll help!\" Samantha jumped in.\n\n\"Okay. Everyone will be arriving about 10:00 on the Sunday before. This is a celebration party also for you two,\" I told them.\n\n\"We don't need a party,\" Amy said.\n\n\"Everyone wants to come see you two and congratulate you on going back to school,\" Dawn told them.\n\nWe got bullshit looks from both Samantha and Amy, but they went along with it. Samantha knew we were up to something.\n\n\"We need to get the house cleaned up today,\" Dawn told us. \"You two get your rooms cleaned up please.\"\n\nSamantha and Amy went to their rooms to clean them up.\n\n\"Do you think they know about the rings and things?\" Dawn asked.\n\n\"I don't think so. Will the rings be ready in time?\"\n\n\"Yes, they will. I'll pick them up the Friday before.\"\n\n\"Good. Do you need some help cooking or decorating?\"\n\n\"I may call Olivia and see if she would like to come over and help that Saturday.\"\n\n\"Tell her to bring Sam, he can stay up with me and help cook the meat if they want to stay overnight.\"\n\n\"I'll ask. You go clean up the basement, and I will start up here,\" Dawn said.\n\nAbout 10:30 we were all back in the kitchen.\n\n\"Are Linda and Rachel coming for Labor Day?\" Amy asked.\n\n\"They are planning on it.\"\n\n\"What did the lawyer say about the land?\" Dawn asked.\n\n\"He is working on it. It will have to be surveyed, that will take a week or so.\"\n\n\"You should have gone with us sis, there were some cute guys in the office,\" Samantha said.\n\n\"I better get to go next time!\"\n\nThings were quiet for a minute.\n\n\"You two...is that something you miss?\" Dawn asked.\n\n\"What?\" Samantha said.\n\n\"Being with other guys and dating.\"\n\n\"No, why?\" Amy asked.\n\n\"Sam?\"\n\n\"No.\"\n\n\"Are you two sure?\" Dawn asked.\n\n\"I have what I want, but I can still tease guys...can't I?\" Samantha asked.\n\n\"Of course, I just wanted to know if you missed it.\"\n\n\"Would it bother either of you if I went out with a guy, maybe from school?\" Amy asked.\n\n\"Of course, not,\" I said.\n\n\"It wouldn't mean anything, just for fun.\"\n\n\"Amy, Dawn has fun with other guys,\" I said.\n\n\"She doesn't pick any up and go out with them.\"\n\n\"Not that I know of...\"\n\n\"I'm being serious,\" Amy said. Dawn looked over at me.\n\n\"Amy, do you still want to see other guys your age?\" Dawn asked.\n\n\"That's not it...\"\n\n\"What then?\"\n\nAmy looked over at Samantha.\n\n\"I'm just worried that Sam is not ready to make a long-term commitment...she is so young,\" Amy said.\n\n\"I am not!\" Samantha protested.\n\n\"Yes, you are! Sis, you haven't had the opportunity to see what is out there.\"\n\n\"I know what is out there! Don't make decisions for me!\"\n\n\"Let's dial it down a bit,\" I said. \"This is something we should talk about.\"\n\n\"We don't need to talk about it,\" Samantha said bluntly and crossed her arms in a huff.\n\n\"But sis, you just said something about all the cute guys at the lawyer's office,\" Amy said.\n\n\"I can still flirt!\"\n\n\"Yes, you can,\" Dawn said. \"You two, you are both desirable women, men are attracted to you.\"\n\n\"We shouldn't be flirting now,\" Amy said.\n\n\"Why not?\" I asked.\n\n\"We just shouldn't now.\"\n\n\"Amy, Dawn flirts with men all the time,\" I told her.\n\n\"That's different.\"\n\n\"Oh?\" Came from Dawn. \"And why is that?\"\n\nAmy looked up and around.\n\n\"Amy, are you saying it is okay because I am old?\" Dawn asked.\n\n\"No! Not that.\"\n\n\"Then what?\"\n\n\"It's just...that...you two are...\"\n\n\"Married?\" Dawn asked.\n\n\"Amy!\" Samantha exclaimed.\n\nAmy just looked at Dawn.\n\n\"What did I just tell you two?\" Dawn said.\n\nAmy just stood there.\n\n\"Amy, I like it when Dawn flirts with other men, I always have. I like it when you and your sister flirt with other men. If I thought there was anything to any of you doing it, I would say something,\" I said.\n\n\"But, still...\"\n\n\"Amy, the reason I don't worry about Dawn flirting is not because we are married, it is because I love her and she loves me. I know I don't have to worry about it. Dawn is a beautiful woman and men are going to flirt with her...even if she is married...and old.\"\n\n\"Hey!\" Dawn yelled. Samatha snickered.\n\n\"I love you and your sister, you two know that. I also know that both of you love Dawn and me. If either of us felt that one of you were not in love with us, we would not be doing the things we are doing. We have been over all of this, so what's up?\" I asked.\n\n\"Sis is only 19-years-old. I'm worried she may change her mind later,\" Amy said.\n\n\"Don't speak for me!\"\n\n\"Sam, hang on,\" Dawn said.\n\n\"Are you worried she may change her mind, or are you worried you may change yours?\" I asked Amy.\n\nAmy stood there looking at us; then tears began to run down her cheeks.\n\n\"What's wrong Amy?\" Dawn asked as she moved next to her.\n\nAmy laid her head on Dawn's shoulder and began to sob. Dawn wrapped her arms around her and held her for a few minutes until the sobs slowed down.",
        "\"Amy, talk to us,\" Dawn told her.\n\nAmy sniffed her nose.\n\n\"I...I love both you so much...I just don't understand why, maybe.\"\n\n\"Why do you think?\" Dawn asked.\n\n\"It's just that I feel so close to both of you and I feel loved by both of you.\"\n\n\"And you don't understand that?\"\n\n\"I have never felt this way about anyone one else. No guys, or other women. I have never been in a serious relationship before...this feeling is new to me. And because of that, I'm afraid things will change.\"\n\n\"Honey, I love you, and James loves you. That will never change. We both feel very close to you and Sam. We are not going to leave you or stop loving you, ever,\" Dawn told her and kissed her on her cheek.\n\n\"But why?\"\n\n\"Amy, why do you need a reason for someone to love you?\" Dawn asked.\n\n\"Because of our father,\" Samantha mumbled.\n\n\"Is that it?\" I asked.\n\n\"I don't know...\"\n\n\"Samantha, how do you feel?\" I asked.\n\n\"I know we all started off with sex, but I love both of you, very much. I don't know why, I just do. I trust both of you, and I'm sure you love me,\" Samantha said.\n\n\"That is what I am worried about, she doesn't know why...and I'm not sure why I do, I just do,\" Amy added.\n\n\"Amy, sometimes you may not understand why you love someone. I think it is just something that is there, something that is hard to explain,\" I said.\n\n\"When James and I first met, we both felt something we couldn't explain. We didn't talk about it at first, but did eventually. I think love is more than an emotion, I think it is something much stronger. I think there is some unknown reason why two people love each other the way James and I do, and also the way we love you and your sister. You and I knew each other from work, and I always felt close to you, I don't know why. When you and I first made love, I knew there was something drawing me to you, but I didn't dare say anything to you.\"\n\n\"I know, I felt it too.\"\n\n\"What did you think it was?\" Dawn asked.\n\n\"I don't know. I just felt something there. For some reason, I trusted you completely...and I have never trusted anyone else like that except my mom and Sam.\"\n\n\"Was it more than just trust?\"\n\n\"Yes. After we made love and you held me that night while we slept, I just felt so incredibly close to you. I had never felt that with any other man or woman. I don't know why.\"\n\n\"I have never told James this, but that night while we were lying on the floor, I didn't sleep. I couldn't, I could feel your energy all night. You know that doesn't happen with just anyone, Amy,\" Dawn told her.\n\n\"Maybe I felt yours somehow.\"\n\n\"I think you are right. And when I met Sam, I felt the same energy coming from her. I trusted her completely like you trusted me,\" Dawn added. \"If I had not felt what I did from her, the things that happened would never have happened. When she went back home, it almost broke my heart. I didn't want her to leave,\" Dawn said.\n\n\"When you told me I could move in with you two, I almost exploded. I was so happy, but I didn't know why,\" Samantha said.\n\n\"I have found that when things are just right between two people, you know it. It is hard to explain,\" I said.\n\n\"How did you and Dawn know it was right?\" Samantha asked.\n\n\"That's a long story, but we just knew.\"\n\n\"I knew,\" Samantha said.\n\n\"What did you know?\" Dawn asked.\n\n\"I just knew that I felt very comfortable with both of you...I didn't know why. But now I know why, we have some kind of connection or bond. I know both of you love me and always will. I feel it,\" Samantha said.\n\n\"Amy, do you not feel like there is a connection between all of us?\" Dawn asked.\n\n\"I do...but I am still trying to understand it.\"\n\n\"Sis, you need to just trust what you feel. I do.\"\n\n\"Sam, I don't have the deep levels of feeling of other's feelings, or energy, like you do,\" Amy said.\n\n\"Not yet,\" Samantha said. \"But, you know it is right.\"\n\nEveryone stood quietly for a minute.\n\n\"Amy, do you not trust your feelings?\" Dawn asked her.\n\n\"I do...I guess.\"\n\n\"But, you are not sure?\"\n\n\"It's not that. I'm just afraid it will change.\"\n\nDawn pulled Amy to her again.\n\n\"It may. None of us know anything for sure. But, right now, and for the foreseeable future, we love you, and I know you love us,\" Dawn said. \"There is more out there in the universe than we will ever understand. I think there are powers and energies that just draw some people together. Look at Linda and James.,\" Dawn said.\n\n\"And you are okay with Linda and James?\" Amy asked.\n\n\"I am. It is beyond my control.\"\n\n\"You could have broken their bond,\" Amy said. \"You just decided not to.\"\n\n\"I don't think their bond could have been broken. My great-grandfather just wanted me to figure that out on my own,\" Dawn replied.\n\n\"But they were fading away?\" Samantha said.\n\n\"That was just an image. The energy would never fade away. I'm learning that there are many more things that I do not understand yet,\" Dawn said.\n\n\"Do you understand why we are so close to you?\" Samantha asked.\n\n\"We are all close to each other,\" Dawn corrected her. \"And, no, I don't understand why...yet.\"\n\n\"Do you think we ever will?\"\n\n\"Yes.\"\n\n\"Let me say something,\" I said. \"Dawn and I love both of you very much. We have already told you that we love you as our wives. No, it's not legal, but if that works for us, it is fine. I think at this time you both love us, Dawn and I both feel it and know it is true. We do have some type of bond we don't understand, but maybe we don't need to understand it or over think it. I would hope nothing ever becomes between any of us where that love would die, but a time may come that any one of us may decide that being in this relationship is no longer what they want. That goes for you Samantha, and you Amy, and even Dawn. None of us knows what the future holds. Even if that happens, I think all of us will always love each other, though we may not be together. Let's not worry about that until it happens. But Samantha and Amy, you are Dawn and mine's family. Neither of you will ever need to worry about not having the means to live a comfortable life, just like Dawn will never have that worry. Right now we have plenty of money to live well off of, but who knows, that may change one day. I hope none of the love any of us have is based on money.\"\n\n\"It's not, but that is your money,\" Samantha said.\n\n\"As of now, it is our money, and no argument,\" Dawn said.\n\n\"We are a family,\" I said. \"You two need to fully understand that.\"\n\n\"Amy, do you feel better?\" Dawn asked.\n\n\"I guess.\"\n\n\"And you two are free to flirt with any guys you want to flirt with,\" I said, and they smiled.\n\n\"Yes, you are!\" Dawn said. \"You two check the downstairs bedrooms for me.\"\n\nAmy and Samantha headed down the hall.\n\n\"I called Joseph and told him not to say anything about the trust in front of the girls,\" I told Dawn.\n\n\"When are you going to tell them about it?\"\n\n\"I'm thinking about waiting until Christmas.\"\n\n\"That's too long. I think it would make a nice wedding present for them,\" Dawn said. \"Why don't we do it then.\"\n\n\"Okay. They won't get the first checks until January.\"\n\n\"How much will they get a year?\" Dawn asked.\n\n\"I hope between $300,000 and $400,000.\"\n\n\"I think that will take care of their needs.\"\n\n\"They are going to argue with us about it,\" I said.\n\n\"Maybe not after we marry them.\"\n\n\"Are the rings going to be ready?\"\n\n\"Yes. I also have some other surprises for them.\"\n\n\"What time is everyone coming?\" Amy asked from the hall.\n\n\"About 7:00,\" I said.\n\n\"What are we doing for dinner?\"\n\n\"I thought we could grill steaks,\" I said.\n\n\"Good, because I don't want to cook,\" Dawn replied.\n\n\"We still need things to go with it.\"\n\n\"I'll take care of that,\" Dawn said.\n\n\"Well, if we are cooking outside that will give us a reason to be in the pool,\" Amy said.\n\n\"That will be yours and your sister's job. See if you can talk the ladies into skinny dipping,\" I told them.\n\n\"That won't be a problem. Just make sure you cook slowly,\" Amy said.\n\n\"I guess I better go to the store to get steaks and everything else,\" Dawn said.\n\n\"I need to go to the liquor store and get more wine,\" I said.\n\n\"Can you and your sister finish cleaning the house up while we are gone?\" Dawn asked.\n\n\"Sure.\"\n\n\"How long will you be at the store?\" I asked Dawn.\n\n\"Not more than a few hours.\"\n\n\"I'll just go with you then, and we can stop and get the wine.\"\n\nAbout 11:00, Dawn and I headed out. We drove to the store and spent a while getting everything we needed for tonight. By 1:00, we were stopping at the liquor store. We both went in to get wine. The owner was stocking the shelves when we walked in.\n\n\"Hey, you two! I haven't seen you in a while,\" he said.\n\nDawn walked up to him.\n\n\"If I remember right, the last time you saw me, you saw all of me,\" Dawn said.\n\nHe looked at her and smiled.\n\n\"Do you need more of that expensive champagne?\"\n\n\"Not this time. We just need to restock the wine,\" Dawn told him.\n\nHe grabbed two empty boxes and took them to the counter while Dawn and I picked out bottles of wine. We had filled the two boxes and were leaving around 1:30.\n\n\"See you two later,\" the owner said.\n\n\"You hope so!\" Dawn said teasing him.\n\nWe drove off and were heading back toward the house. Dawn got out her cell phone.\n\n\"Have you two eaten lunch yet?\" She said into the phone.\n\n\"Okay...what do you want?\"\n\n\"Okay.\"\n\nDawn hung up.\n\n\"Stop and get some Chinese,\" Dawn said.\n\nWe drove to the Chinese place, and went in and ordered. It took a while because of the lunch crowd. By 2:30, we were heading home. We pulled into the garage and carried the food in first, then went back and got the two boxes of wine. Samantha and Amy were sitting in the den. I picked up the food and walked toward the den.\n\n\"You two go get something to drink,\" I said.\n\nThey were both sitting on the sofa when they turned and looked at me. I looked back at them and saw that the TV was on. I looked at the TV and saw that they were watching something.\n\n\"What are you two watching?\"\n\n\"Why don't you tell us?\" Samantha said.\n\nI set the food on the table and looked up at the TV. It took me a moment to figure out what was on the screen. I suddenly realized it was a video of the nightclub in France where Dawn had kicked the two guys' asses.\n\n\"Where did you get that?\" I asked.\n\n\"I was putting the mail away, and there was an envelope on the table with a DVD in it,\" Samantha said. \"When I played it, we saw this. Would you two like to explain?\"\n\n\"Explain what?\" Dawn said walking up. She looked up at the TV. \"Oh.\"\n\n\"Yes, oh...\" Samantha said.\n\n\"I think you need to explain a few things to us,\" Amy said.\n\n\"We haven't seen it,\" Dawn said.\n\n\"Well have a seat, and we will watch it again while we eat lunch,\" Samantha replied.\n\nSamantha started the DVD again, and we all sat and watched the events at the nightclub in France. Once it was over the girls turned to us and just looked.\n\n\"Let's finish eating first,\" Dawn said.\n\n\"What happened there?\" Amy asked.\n\n\"A couple of guys started harassing me,\" Dawn said as she ate.\n\n\"We saw that. What did you do to them?\"\n\n\"I just took care of the problem.\"\n\n\"Dawn, you never told us you could do things like that!\"\n\n\"It never came up. It's not something I usually tell people about,\" Dawn said.\n\n\"What are you, a black belt in Karate or something?\" Samantha asked.\n\n\"Something like that. James taught me a few ways to take care of myself,\" Dawn said taking a bite.\n\n\"Take care of yourself! You beat the shit out of those two guys!\" Samantha exclaimed.\n\n\"James, if you taught her, can you do that too?\" Amy asked.\n\n\"I guess I better start at the beginning,\" I said as I ate.\n\nI explained to them how I had studied Martial Arts since I was a kid, and when I met Dawn in college, she would go to my tournaments.\n\n\"She got interested in it, and I taught her a lot. We both used to go to classes for a long time,\" I said.\n\n\"Are you black belts?\" Samantha asked.\n\n\"I have several,\" I said. \"And Dawn has several.\"\n\n\"Why did you never tell us?\" Amy said.\n\n\"It just didn't come up,\" I said.\n\n\"Is that why that guy at the range wants you to help him?\" Samantha asked.\n\n\"Yes. We have studied with Dan for a long time. He got me into a style that I taught Dawn. We used to help him teach self-defense classes to ladies.\"\n\n\"Why don't you still go to classes?\" Samantha asked.\n\n\"There is not much more we can learn. We used to just work out together,\" I told them.\n\n\"Why did you stop?\"\n\n\"We just got busy,\" Dawn said as she ate.\n\n\"It looked like you really hurt those two guys. James, why didn't you help her?\" Samantha asked.\n\n\"I didn't need to. She can take care of herself.\"\n\n\"It looked like it,\" Amy said. \"What did you do to them?\"\n\n\"I just made sure they wouldn't bother me anymore,\" Dawn said as she ate.\n\n\"I have a question?\" Samantha said.\n\n\"What?\" I asked.\n\n\"Can you teach me to be that good?\"\n\nDawn and I looked up at Samantha. She was serious.\n\n\"Why?\" I asked.\n\n\"So I can take care of myself if I have to.\"\n\n\"Sam, learning to be as good as I am would take a lot of time and a lot of dedication and practice. It took me about a year to be able to take care of myself. After that, I have studied and trained for over ten years,\" Dawn told her.\n\n\"I could do it,\" Samantha said.\n\n\"I have no doubt you could,\" I said.\n\n\"Will you teach me?\"\n\n\"I'll tell you what. You and Amy come to the class I am helping with in October, and we can go from there,\" I said.\n\n\"Why me?\" Amy said.\n\n\"Because you need to know how to take care of yourself,\" Dawn said.\n\n\"Do I have to wait until October?\" Samantha asked.\n\n\"After you start school and see if you have the time, we will talk,\" I said.\n\nWe finished eating while they watched the video again. Samantha kept asking questions until we finished eating.\n\n\"Did you two finish cleaning up?\" Dawn asked.\n\n\"Not yet, we got sidetracked,\" Amy said.\n\n\"Well, finish. We will clean up from lunch, then I need to start getting things ready for tonight,\" Dawn said.\n\nWe cleaned up from lunch while they went to finish.\n\n\"I should have known Sam would want to learn Martial Arts,\" Dawn said.\n\n\"She is a bit of a Tom Boy. We can teach them self-defense, but I think the first time Samantha gets banged up she will stop.\"\n\n\"Don't bet on it,\" Dawn said as she dropped the leftovers in the trash.\n\nWe worked on marinating the steaks and getting potatoes ready to bake. I put the white wine in the chiller and put the rest away. Dawn and I worked until about 4:00 getting everything ready for dinner.\n\n\"Check on the girls and see if we need to change the sheets in the bedrooms down here,\" Dawn said. \"I'll be back.\"\n\nShe headed up the stairs, and I went to find the girls in the big bedroom downstairs.\n\n\"Do we need to change the sheets on the beds down here?\" I asked.\n\n\"Yes, and we did that,\" Amy said as she took towels into the bathroom.\n\n\"Can you really teach me to do what Dawn did?\" Samantha asked.\n\n\"I can teach you to take care of yourself, but it would take you years to get to where Dawn is.\"\n\n\"That's okay. I'm not going anywhere.\"\n\n\"I don't guess you are.\"\n\n\"You are also supposed to be teaching me to shoot. When are you going to do that?\"\n\n\"Honey, I'll teach you anything you want to know.\"\n\n\"You better.\"\n\nThey went to work finishing the downstairs bedrooms while I helped. By 4:30, we were finished.\n\n\"Okay, now what?\" Samantha asked.\n\n\"Get cleaned up and ready for tonight.\"\n\n\"What are we wearing?\" Amy asked.\n\n\"Casual, I guess. Check with Dawn.\"\n\nAmy and Samantha headed up the stairs while I went to the kitchen to flip the steaks over in the marinate. After that, I headed up to the bedroom; Dawn was on the phone.\n\n\"Oh, I think you will have a good time, Pamela,\" she said.\n\nI sat down on the bed and listened.\n\n\"Don't worry about another couple being here...we will just see what happens.\"\n\n\"No, I was fine with him doing that. I hope you two can stay the weekend. Great! We will see you at 7:00.\"\n\nDawn hung up the phone.\n\n\"Pamela is ready to go,\" Dawn said. \"But, I'm not sure about Bill's wife.\"\n\n\"Did you talk to her?\"\n\n\"I talked to Bill first. He told me that his wife is ready to try it with another woman, but she is not sure about with another guy.\"\n\n\"She doesn't have to do that, she can just experiment with the ladies.\"\n\n\"I talked to Bill awhile and got him all worked up, then I talked to his wife, Sue.\"\n\n\"How did that go?\"\n\n\"Pretty well. I told her how much fun she would have with other women. She asked me about letting Bill watch, and I told her that was the best part.\"\n\n\"Do you think she will go through with it?\" I asked.\n\n\"I hope so. I asked her about letting you do her, and she said she wasn't sure if Bill was ready for that.\"\n\n\"Well, if Bill wants to do you, he has to let his wife have some fun, but that is up to them.\"\n\n\"I'll talk to her when she gets here,\" Dawn said.\n\n\"We finished changing all the sheets downstairs. Everything is ready,\" I said.\n\n\"I'm not,\" Dawn said and went to the bathroom.\n\n\"I told the girls to dress casual! Is that okay?!\" I yelled into the bathroom.\n\n\"Yes!\"\n\nWhile Dawn was showering, I went down and cleaned up the grill and straightened everything up outside. When I went back upstairs, Dawn was sitting in the chair in the bathroom running a comb through her hair.\n\n\"You need to start getting ready,\" she told me.\n\nI got undressed and showered. When I got out, Dawn was putting on her makeup as she sat in some very sexy red lingerie. I shaved and then went to put some clothes on.\n\n\"It's almost 6:00, go check on the girls,\" Dawn said coming out of the bathroom.\n\nI looked at the sexy thin and lacy red lingerie she had on. It was new, and the bra holding her larger tits up was see-through. I went to check on the girls.\n\nI found Amy sitting on the edge of her bed naked brushing her hair.\n\n\"Are you about ready?\"\n\n\"I have to put some clothes on,\" she said looking up at me. \"Or, not.\"\n\n\"Let's start with some clothes.\"\n\nI went down to Samantha's room, and she was pulling up some blue jeans over a thong.\n\n\"When you are dressed, I could use your help in the kitchen,\" I told her.\n\n\"Okay, I'll be down in a few minutes.\"\n\nI went down to the kitchen and worked on the steaks. I turned on the oven to get it ready to bake the potatoes then turned the other oven on for the baked beans. Samantha came down a few minutes later. I looked at her, and she had on a blue silk blouse with her tight blue jeans. It was unbuttoned enough to show off all of her ample cleavage.\n\n\"Come here,\" I told her.\n\nWhen she came to me, I ran my hand over her tits and felt her large nipples.\n\n\"No bra?\"\n\n\"Why, I'll just be coming out of it.\"\n\n\"Help me start the salad.\"\n\nWhile we were getting everything out for the salad, Dawn and Amy came down. I looked at Dawn when she came to the kitchen.\n\n\"Is that new?\" I asked.\n\nDawn had on a very sheer red silk blouse, similar to the white one she had. I could easily see her red lingerie under it.\n\n\"Yes, I found one like my white one in red,\" she said.\n\nI looked at Amy, and she had on a white top with her tight blue jeans. I could see her nipples poking through the material, so I knew she didn't have a bra on either.\n\n\"We'll finish the salad, go away,\" Dawn said.\n\nI left the kitchen, and went and got two bottles of red wine out and took them to the bar. I could hear all three of them talking and giggling in the kitchen. I opened the two bottles of wine then looked at my watch. It was ten till 7:00. I went to the intercom and opened the gate. I was getting out the wine glasses when I heard a car pull up out front. I went to the door.\n\n\"Hey, Joseph, and Pamela,\" I said as they got out the car.\n\nA moment later the back door opened, and Susie got out. The three of them walked to the door.",
        "\"Wow, this place looks great,\" Joseph said. \"You were still building when I saw it.\"\n\n\"We finally got it finished. Come on in.\"\n\nThey came in, and I walked them to the den.\n\n\"Oh, my, your house is wonderful,\" Pamela said.\n\n\"Hi, Pamela, hi, Susie,\" Dawn said. \"I like your hair, Pamela!\"\n\n\"Hi, Dawn. I got tired of it being long.\"\n\n\"It looks great.\"\n\n\"Dawn, how do you deal with all that beautiful long hair of yours?\"\n\n\"I just do.\"\n\nI was watching Joseph as he watched Amy and Samantha walk up with Dawn.\n\n\"Joseph, Pamela, Susie, this Amy and her sister Samantha,\" I said.\n\n\"Hi,\" the girls said.\n\n\"Hello,\" Joseph got out, as he looked them over.\n\n\"Come on, and I will show you around the house,\" Dawn said.\n\nJoseph and Pamela walked off with Dawn; Samantha and Amy went back to the kitchen. Susie was standing with me.\n\n\"I'm glad you got to come,\" I said to her.\n\n\"I wouldn't miss it,\" she said.\n\n\"How did it go with Pamela?\"\n\n\"I think I have made a convert out her,\" Susie said and giggled.\n\n\"Would you three like some wine before the tour?\" I asked.\n\nI got all of them some wine, and they disappeared with Dawn. I was getting worried because it was now 7:15 and Bill and his wife had not shown up. I went to check on the salad preparations.\n\n\"He's cute,\" Amy said.\n\n\"Is that his secretary?\" Samantha asked.\n\n\"Yes. Joseph has been doing her, and it sounds like she convinced Pamela to have some fun with her.\"\n\n\"Good. I'm sure we can teach her a few things,\" Samantha said.\n\n\"I'm sure you can.\"\n\nI heard a car pull up and went back to the front door. Bill and his wife were getting out of an unmarked black sedan.\n\n\"Hey, you two.\"\n\n\"Sorry we're late, something came up,\" Bill said.\n\n\"Well, you're here now. Come on in.\"\n\nThey came in, and I escorted them to the kitchen.\n\n\"Dawn is showing our friends around the house. Bill and Sue, this is Amy and her sister Samantha,\" I said.\n\n\"Hi.\"\n\n\"Hello,\" Bill and Sue said.\n\n\"Let me get you two some wine, and I will show you around the house.\"\n\nI got them each a glass of wine and started showing them the house. When we came up from the basement, Dawn and Joseph and his ladies were in the den talking.\n\n\"Bill and Sue, this is Joseph and his wife, Pamela. This is Susie, she is his assistant. Joseph is our stockbroker,\" I said.\n\nThey all introduced themselves to each other.\n\n\"I hope steaks are okay? I thought we could grill them outside while we all got to know each other.\"\n\n\"Dawn, is there anything I can help with?\" Pamela asked.\n\n\"I'm finishing the salad.\"\n\nPamela went to the kitchen with Dawn.\n\n\"I'm going outside to fire the grill up,\" I said.\n\n\"I want to see your pool,\" Sue said.\n\n\"I do too,\" Susie added.\n\nI went outside with Bill and Joseph. Amy and Samantha came with us and showed Susie and Sue around the pool.\n\n\"Joseph, Bill is the Police Chief, I don't know if you two have met before,\" I said as I opened up the grill.\n\n\"We haven't met,\" Bill said.\n\n\"And I hope we don't!\" Joseph said then laughed.\n\nThe three of us talked until I had the grill hot. I left them outside, and went in and made several trips to bring all the steaks out. On my last trip, Bill and Joseph were talking to all the girls. It took me a few minutes to get all the steaks on the grill.\n\n\"I'll go get the bottle of wine,\" Amy said, and she and Samantha went in the house.\n\nBill walked up to me while everyone else talked.\n\n\"James, how old are the redheads?\"\n\n\"Amy is 28, and Samantha just turned nineteen.\"\n\n\"And they live here with you and Dawn?\"\n\n\"They are both going to school. Bill, Dawn and I consider them our wives.\"\n\n\"What?\"\n\n\"Well, we can't adopt them, and we can't marry them, but we all love each other, and we consider them our wives now.\"\n\n\"How does that work?\"\n\n\"It works the way you are thinking about, Bill.\"\n\n\"James, I know you said something about...me having sex with your wife. Which one did you mean?\"\n\n\"Bill, my wives are free to do as they please. So, I guess it will be up to you to convince any of them to have sex with you,\" I teased him.\n\nI saw him turn and look at Susie and Pamela.\n\n\"What about the two of the ladies with your friend Joseph?\"\n\n\"I guess we will just have to see how things go. Is your wife ready for me to fuck her?\"\n\n\"What?\" He said turning back to me.\n\n\"Did you and your wife decide it was okay for her to have sex with another guy?\"\n\n\"Oh...I guess that will be up to her.\"\n\n\"Bill, it's up to you also. How are you feeling about it?\"\n\n\"She told me if I got to have fun, she should be able to also.\"\n\n\"That's true, but how do you feel about it?\" I asked.\n\n\"Okay, I guess. I can't wait to see her with another woman.\"\n\n\"Have you two talked about that?\"\n\n\"We have discussed it on and off for a while. I thought she was just teasing me, but she says she wants to try it.\"\n\n\"That's good. Did she say she would be okay with you watching?\" I asked.\n\n\"That's the point isn't it?\"\n\n\"Sure, but I want her to be okay with it.\"\n\n\"Is your wife, or wives, okay with it?\" Bill asked.\n\n\"Sure, but I'm not always around when they are having fun.\"\n\n\"What do you mean?\" Bill asked.\n\n\"My wives are free to do as they please, and that means if they want to be with another woman or man when I am not around, they can.\"\n\n\"Really?\"\n\n\"Why not? They are just having a good time, and I don't have a problem with that.\"\n\n\"Does that go for you too?\" He asked.\n\n\"What do you mean?\"\n\n\"Do you get to be with other women when your ladies are not around?\"\n\n\"Of course.\"\n\n\"Really?\"\n\n\"Bill, once you two are okay with sharing each other, you will discover you can have a lot of fun. As long as both of you understand it is just for fun and nothing else, you can have more fun.\"\n\n\"I see.\"\n\nAmy and Samantha had come back out with the wine and poured everyone another glass. Amy was now pouring Bill a fresh glass.\n\n\"Thank you,\" he told her.\n\n\"Amy, why don't you ask everyone how they like their steaks,\" I said.\n\n\"Okay,\" she said and walked off.\n\n\"She is hot,\" Bill said.\n\n\"Yes, she is.\"\n\nI went back to turning steaks.\n\n\"Do you want me to get you a glass of wine?\" Samantha said walking up and putting her arm around my waist.\n\n\"After I finish cooking.\"\n\nSue walked up with Amy, and they went inside with Bill.\n\n\"Dr. Smith, Pamela said she had a wonderful time when you were at the office,\" Susie said as she sipped her wine.\n\n\"Glad to hear that.\"\n\n\"I hope you get to treat me to a good time tonight.\"\n\n\"Oh, I'm sure we will get to that. I hope you three stay the weekend,\" I said.\n\n\"We can stay.\"\n\n\"Susie, you will have a very good time,\" Samantha said to her.\n\n\"You are going to have to explain to me how having three wives works, Dr. Smith.\"\n\n\"Susie, call me James, please.\"\n\n\"Come with me, and I will explain it to you,\" Samantha said, and she and Susie went inside.\n\nI was taking care of the steaks when Amy came out.\n\n\"Two well done, five medium, and two medium rare,\" she said.\n\n\"Okay, thanks.\"\n\n\"I can tell Bill's wife is still not sure about everything.\"\n\n\"Is she nervous?\"\n\n\"Yep.\"\n\n\"I guess we will have to ease her into it then.\"\n\n\"Need anything?\" Amy asked.\n\n\"The steaks will be ready in about 15 minutes.\"\n\n\"Okay, I'll tell Dawn.\"\n\nI worked on the steaks until they were all ready. I took them off the grill, and piled them on a large platter and took them inside. When I went in, everyone was in the dining room sitting around the big table. I heard them all talking and laughing.\n\n\"I have the steaks!\" I said.\n\nI walked around and passed them all out. The rest of the food was on the table.\n\nEveryone had loosened up some and was talking while we ate. We all took our time eating and talking until almost 9:00.\n\n\"That was a great dinner,\" Bill said.\n\n\"Yes, it was,\" Joseph added.\n\n\"I'm glad everyone enjoyed it. I hope all of you made plans to stay the night,\" I said.\n\n\"Sounds like a good idea,\" Bill replied.\n\n\"Dawn, let me help you clean everything up,\" Sue said.\n\nWe all got up and carried dishes to the kitchen. We left Sue, Dawn, and Pamela in the kitchen and the rest of us went to the den and sat down.\n\n\"James, how much land do you have?\" Bill asked.\n\n\"Three hundred acres.\"\n\n\"Wow, that should keep it private out here.\"\n\n\"It does. We don't have to worry about anyone showing up without us knowing about it.\"\n\n\"I love the pool and everything you have done outside,\" Susie said.\n\n\"Dawn designed most of the house and all of the landscaping.\"\n\n\"It all looks great. The waterfall on the pool really looks nice. I'm sure all of you enjoy that pool,\" Susie continued.\n\nI looked at her as she sat next to Amy on the other sofa. Amy winked at me.\n\n\"We are in it almost every day,\" I told her.\n\n\"I swim laps to stay in shape,\" Samantha said. \"It looks really great at night with all the lights on.\"\n\n\"Oh, can you show me?\" Susie asked.\n\n\"Sure,\" Samantha told her.\n\nThey got up and walked to the back windows. Samantha had the remote and was going through all of the light colors. While they stood there looking, the ladies in the kitchen walked over to look. They all finally went outside.\n\n\"I guess we better go see what they are looking at,\" Joseph said.\n\nWe all got up and went outside. Samantha was changing the colors of the lights on the waterfall.\n\n\"That looks great! Can we go swimming?\" Susie asked.\n\n\"Sure,\" Amy told her. \"The water will be nice and cool.\"\n\nSusie walked over to one of the chairs and started taking her clothes off as Bill and Joseph watched. Amy walked over to one of the other chairs, and unbuttoned her top and pulled it off, showing us all her huge tits. She and Susie were both naked about the same time, so they walked past us to the steps and down into the pool as we all watched. Susie had a cute little body.\n\n\"Let's join them,\" Dawn said, and she and Pamela walked over to some chairs and started taking their clothes off.\n\n\"Come on Sue,\" Samantha said to her.\n\nSue followed her to the chairs and watched as Samantha took her clothes off. Samantha stood and waited until Sue had all her clothes off. The three guys were standing and watching all the women in the pool shortly after.\n\n\"Let's join them,\" I said.\n\nI walked over to the table, and took my clothes off and got in the pool. Joseph and Bill were watching while they finished removing their clothes, then they began walking to the steps as I watched. They both had a huge hard-on as they walked down the stairs toward the girls. I made my way to Amy and Susie.\n\n\"Thanks, you two,\" I said.\n\n\"I had to get this party started, Pamela said you had a lot to offer,\" Susie said smiling at me.\n\n\"I hope you, and she had a good time last weekend.\"\n\n\"She is still hesitant, but seems eager to learn,\" Susie replied smiling.\n\n\"Good,\" Amy said. \"Let me show what's behind the waterfall.\"\n\nAmy and Susie swam away and under the waterfall. I looked up and saw Bill standing with his wife and Dawn. He kept looking at Dawn's tits as they stood and talked. I heard laughter and looked over at Joseph standing with his wife, and Samantha. I watched as Sue kept looking at her husband as he checked out Dawn. I made my way over to Dawn.\n\n\"Are you two having a good time so far?\" I asked.\n\n\"Oh, yes,\" Bill said, and his wife looked at him.\n\n\"Dawn, Bill told me that you two consider the other two as your wives?\" Sue asked.\n\n\"We do. We have all become very close, so now we all consider ourselves married to each other.\"\n\n\"How does that work?\" Sue asked.\n\n\"It works very well. I have no problem sharing James with them,\" Dawn said.\n\n\"That sounds...interesting,\" she said.\n\n\"It is. Sue, James also shares me with them.\"\n\n\"What do you mean?\"\n\n\"James not only has sex with all of us ladies, but we all have sex with each other. Sam and Amy are great lovers, and I enjoy them and making love to them too.\"\n\n\"I see. Is that how you got started with other women?\" Sue asked.\n\n\"Not exactly. It was just something I wanted to try one day, and James was fine with it. From there we have both expanded our sexual horizons,\" Dawn told her.\n\nSue looked at Dawn then looked at me.\n\n\"Sue, since you know about Bill being with some of the ladies he works with, how do you feel?\" Dawn said.\n\n\"Just one of the ladies he works with...and you,\" she replied.\n\n\"Sue, Bill told me that you two had discussed experimenting a little,\" I said. \"Is that something you are ready for?\"\n\n\"Well...I have always been curious about being with another woman.\"\n\n\"Are you ready for that?\" I asked. Sue looked over at Dawn and smiled.\n\n\"I think I definitely want to try,\" she said and smiled.\n\n\"Then I think that is something we will have to do tonight,\" Dawn told her.\n\n\"I'm looking forward to it,\" Bill said.\n\n\"I'm sure you are,\" Dawn said to him. \"But, Sue may not be ready for you to watch yet.\"\n\nBill looked at his wife.\n\n\"Oh, I guess he can watch,\" Sue said teasing her husband.\n\n\"Just let me know when you are ready,\" Dawn said.\n\n\"I'm ready when you are,\" she replied.\n\n\"Then come with me,\" Dawn told her and took her hand and headed toward the steps.\n\n\"I guess you better go with them,\" I said to Bill.\n\n\"Are you coming?\" He asked.\n\n\"I think Sue will feel better with a smaller crowd right now,\" I told him.\n\nBill turned and followed Dawn and Sue into the house.\n\nI walked over to Samantha. Joseph and Pamela were laughing. I wrapped my arm around Samantha.\n\n\"Are you two having a good time?\" I asked.\n\n\"Oh, yes. This is so much fun,\" Pamela said. \"It has been a while since I have been skinny dipping.\"\n\n\"I'm happy you are having a good time.\"\n\n\"Where did your wife go?\" Pamela asked.\n\n\"She went with Bill and his wife. Where did Susie get off to?\"\n\n\"I think Susie is getting off behind the waterfall,\" Samantha said, and Joseph laughed.\n\n\"Why don't we join them then,\" I said and started leading Samantha in that direction.\n\nOnce the four of us were behind the waterfall, we found Amy going down on Susie while she sat up on the ledge.\n\n\"There you are!\" Susie said as she pushed Amy's head into her pussy.\n\n\"Are you enjoying our little escape place?\" I asked her.\n\n\"Oh, yes! Amy is making sure I'm enjoying it.\"\n\n\"Pamela, why don't you sit next to Susie,\" I said.\n\nPamela climbed up and sat next to Susie. I took my hands and spread her legs apart and moved between them as she watched. I kissed my way up her thigh until I placed my mouth over her pussy.\n\n\"Emmmm...\"\n\nI slowly licked her pussy for a few minutes. I saw Samantha sit next to her then Joseph got between her legs and went to work on her pussy.\n\nI enjoyed listening to the three ladies moaning as I worked on Pamela's pussy. After about 15 minutes, Pamela was coming in a huge orgasm.\n\n\"Ahhhh..yes...that's it!\" She exclaimed as she came.\n\nI stopped, and stood and leaned into her and sucked on her nipple as she rubbed the back of my head. I listened to Susie getting off, then Samantha. After a minute, all of the ladies were laughing.\n\n\"Oh, my, this is great!\" Susie said.\n\n\"It is our special hide-a-way,\" Amy said.\n\n\"I'm sure it is. Amy, trade places with me,\" Susie said.\n\nWe watched as Susie slipped off the ledge and Amy got up on it. Susie wasted no time in going to work on Amy's pussy. I looked up, and Pamela was watching closely. I reached up, and grabbed her around her hips and lifted her up and pulled her to me and lowered her into the water. \n\n\"Emmmm, I like this,\" she said as I held her.\n\nPamela looked over at Joseph and smiled. He was still standing between Samantha's legs. She eased off the ledge, and I watched as she wrapped her legs around Joseph. He took her into his arms, and she slid down slowly and grabbed his cock worked it into her pussy and eased down.\n\n\"You three come with me, I want to show two you something,\" I said to Amy, Susie and Pamela.\n\nWe left while Samantha was riding Joseph. I took them into the house, and we grabbed some towels and dried off. We heard moaning coming from the big bedroom downstairs.\n\n\"Let's see what they are up to,\" I said and led them to the bedroom.\n\n\"I'm going to join them,\" Amy said and walked into the bedroom and sat on the bed.\n\nDawn was on top of Bill riding his cock while his wife sat on his mouth. We stood and watched for a while then I took Pamela and Susie and led them to the Tantra chair in the den.\n\n\"Susie, I think you will like this,\" I told her as I sat down in the middle of the chair with my cock sticking up.\n\nI reached for Susie and had her step over me. I pulled her pussy to my mouth and began licking and sucking on it until she was good and wet.\n\n\"I think you are ready,\" I told her.\n\nSusie straddled my hips and grabbed my cock. She held it up to her pussy lips and began to work it into her pussy. Once she got it started, she worked for a few minutes as she moaned until she was sitting on me with all of my cock inside of her.\n\n\"Oh, my! I do like this!\" She said.\n\nSusie smiled and began to work her pussy on my cock slowly as Pamela watched.\n\n\"Pamela, you were right, he does feel good.\"\n\n\"Pamela, step over me,\" I told her.\n\nShe looked for a minute, then straddled my chest as Susie worked. I grabbed Pamela's hips and pulled her to my mouth so I could lick her pussy.\n\n\"Oh...\"\n\nWhile Susie moaned as she rode my cock I went to work on Pamela's pussy. Pamela got into it and began to grind her pussy on my mouth as I tongued her for a while.\n\n\"Ahh! Oh, fuck!!\" We heard Susie scream then I felt her shake with a huge orgasm.\n\nI was looking up at Pamela as she looked down at me. I started sucking on her clit and kept going until she had a huge orgasm and gushed in my mouth.\n\n\"Oh, god! Yes!\" Pamela exclaimed. \"Shit, I have to sit, my legs are shaking,\" she said.\n\nI had her turn and sit on the end of the chair above my head. Susie looked up at her and smiled as she worked her pussy harder.\n\n\"Oh, my god!\" Came from Susie as she started fucking me harder.\n\nSusie kept crying out then came in another huge orgasm.\n\n\"Oh...damn that is good,\" Susie said. \"Your turn, Pamela.\"\n\nSusie slowly eased off my cock and moved up and sat on the end on the other side. Pamela got up and straddled my hips and lowered herself down and grabbed my cock. After a few minutes, she had all of it inside of her.\n\n\"Oh, I like it this way. This is even better,\" she said as she settled.\n\nSusie leaned forward and reached around Pamela and grabbed her tits and squeezed them as Pamela worked her pussy on my cock slowly. I watched the two of them for a while until Pamela started moaning.\n\n\"Ohhh...yes...yes...\"\n\nSusie started twisting Pamela's nipples.\n\n\"Oh! Yes!\"\n\nPamela started working her pussy harder on my cock.\n\n\"Oh, god!\" She screamed and came in a gush.\n\nPamela kept going hard. A few minutes later, she screamed.\n\n\"I'm coming again!!\"\n\nPamela shook and jerked then came in a huge orgasm.\n\n\"Ahhhhh!!\"\n\nPamela stopped and just sat on my cock.\n\n\"Oh, my. That was great.\"\n\n\"Keep going when you are ready,\" I told her.\n\nPamela smiled at me. She was sitting and catching her breath when Dawn walked up with Bill and Sue.\n\n\"You three having a good time?\" Dawn asked.\n\n\"Oh, yes,\" Pamela said.\n\n\"Good. Where is your husband?\"\n\n\"Don't know and don't care!\" Pamela said, and we all laughed.\n\nSusie got off the end of the chair and moved and stepped over me facing Pamela. Susie pushed Pamela back onto the slope of the chair and straddled her mouth and lowered her pussy down. Pamela grabbed her hips and pulled her into her mouth. Once Pamela started working on Susie's pussy I took my hand and began to finger Pamela's clit.\n\n\"Emmmm...\" came from Pamela.\n\nI slowly fingered her clit as she moaned and ate Susie. I heard Samantha and Joseph come in.\n\n\"You three look happy,\" Samantha said as she walked up.\n\n\"I think Pamela is getting into,\" I said."
    ],
    "authorname": "drmac100",
    "tags": [
        "lottery",
        "group sex",
        "james",
        "dawn",
        "samantha",
        "amy"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/life-after-the-lottery-ch-59"
}