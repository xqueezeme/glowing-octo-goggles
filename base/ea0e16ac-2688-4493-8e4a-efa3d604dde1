{
    "title": "Reflections on Ice Ch. 08",
    "pages": [
        "Hello all, and thank you for reading. Even though it may ruffle some feathers, I've got to add a disclaimer: For those of you who have enjoyed the story, and are looking forward to the conclusion, read on. If you so far haven't enjoyed it, hate the characters, and think they're stupid, then stop reading now. I guarantee you won't like the ending. I do, but I'm sort of biased.\n\nAs always, take care and happy reading. ;)\n\n****\n\nAfter she cried herself to sleep, Cassia woke sometime in the middle of the night, a loud voice echoing down the hall outside the room. She sat up, looking around her. The curtain was still open and the glow from outside illuminated most of the room. Cassia looked at the end of the bed, at the spot where Dylan had stood, and broken her heart.\n\nShe flopped back on the pillows, before scowling and rising to wrestle her way out of the damn bridesmaid dress. Then she walked to the bathroom, rinsed her mouth a couple of times and splashed some cold water on her face. After that, she got back into bed and stared out the window until her eyes burned.\n\nIn her mind, she relived the argument over and over, wondering where they'd gone wrong. She heard again the way Dylan had accused her of wanting to hook up with Alex. How he'd refused to listen to anything she said, and how he hadn't denied her doubts about their compatibility.\n\nShe rolled onto her back and stared at the ceiling, tears trickling out of her eyes, dripping into her hair.\n\nIt wasn't like she'd been kind though. She didn't even know what had made her snap back at him. It had all turned into a horrible mess.\n\nMaybe she'd been kidding herself, thinking there could ever be anything more than an act between them. She'd fooled herself for a couple weeks there, thinking they'd turned it into something real. It hadn't been real enough.\n\nThen again, the ache in her chest told her it had all been too real.\n\nIn the morning, she woke, feeling worse than before and reached for her phone. She wasn't about to slink out of the hotel in that stupid dress and those shoes. She called Kyle and hoped he wasn't working. He answered on the third ring.\n\n\"Hey, Cass. What's up?\"\n\n\"Where are you?\"\n\n\"At home, why? Where are you?\"\n\nCassia let out a breath. \"I need a ride, and some clothes. Can you come get me?\"\n\n\"What happened? I thought you went to the wedding with Dylan?\"\n\n\"I don't really want to get into on the phone. Can you come get me or not?\"\n\nThere was a pause and some rustling, like he was throwing back his bedsheets. \"Yeah, fine. I can come. Where are you?\"\n\nShe gave him the hotel name and address. \"I'm in room 436.\"\n\n\"OK. I'll get there as soon as I can.\"\n\n\"Thanks.\" She breathed a sigh of relief as she ended the call.\n\nIt felt like an eternity but Kyle's knock on the door came barely thirty minutes after they'd hung up. She'd just climbed out of the shower, and wrapped herself in one of the hotel robes before answering the door.\n\n\"Hey.\" He handed her a bundle of clothes.\n\n\"Thanks.\" She took it with a grateful smile. \"Give me a few minutes.\"\n\nShe went back into the bathroom to finish drying and getting dressed. When she walked out, Kyle was reclined on the bed, watching TV, remote control in his hand. He glanced at her before tossing the remote aside. He grabbed her dress shoes and she picked up the wrinkled dress, and they left.\n\nIn the car, Kyle kept quiet for a good ten minutes. \"Do you want to talk about it?\"\n\nCassia sighed and rubbed her eyes, striving to keep more tears at bay. \"I don't know.\"\n\n\"Did Dylan do something? Should I be heading to his place to fuck him up?\"\n\nAt that, Cassia laughed. \"No. That's all right.\" She let out a breath, her smile fading fast. \"This time, I think I fucked up. Bad.\"\n\nAfter a moment of silence, Kyle reached over and patted her leg. \"I'm sorry, Cass. Can I do anything?\"\n\nShe shook her head and then stared hard out the passenger window, willing herself to keep it together until she could get to the privacy of her own bedroom.\n\nKyle didn't say or ask anything else for the rest of the drive, or even the rest of the day. He knocked on her bedroom door around dinner time and that was when Cassia smelled something cooking.\n\nOur of sheer curiosity, she dragged her ass out of bed, wiped her tear-stained face and walked down the hall to the kitchen.\n\n\"You cooked?\"\n\n\"No. Tyler did.\" Kyle shifted out of the way, and Cassia smiled at Tyler, who looked up from his chopping.\n\n\"Hey, Cass.\" Tyler set the knife down and wiped his hands on a towel. \"How are you doing?\"\n\n\"I've been better.\" She leaned against the counter. \"You didn't have to cook.\"\n\n\"If I hadn't, you'd have gotten tomato soup and grilled cheese sandwiches.\"\n\nKyle scoffed as he turned to the fridge and poured Cassia a cup of juice.\n\n\"I like grilled cheese.\" Cassia took the drink with a smile.\n\n\"Told you.\" Kyle turned a triumphant smile on his boyfriend.\n\nTyler rolled his eyes and tossed the contents of his chopping board into the pot on the stove. \"It'll be another twenty minutes or so.\"\n\n\"Sounds good.\"\n\nCassia backed out of the kitchen, leaving them to it. A half hour later, they sat around her little table and ate a delicious meal of spaghetti and meatballs.\n\n\"That was really good, thank you, Tyler.\"\n\nHe grinned at her. \"I'm glad you liked it.\"\n\n\"I'm just glad you ate.\" Kyle shot her a pointed look. \"Have you eaten anything else today?\"\n\nShe returned his look. \"I didn't have much of an appetite.\"\n\nBoth younger men stared at her, clearly waiting for more of a response.\n\n\"I don't want to talk about it.\"\n\n\"Maybe you need to.\" Kyle lifted his glass to his lips. \"Maybe you need to get it all off your chest.\"\n\nShe shook her head. She wasn't a fool. She knew exactly what she'd done wrong. What she needed was a way to make Dylan forgive her but knew she couldn't even blame him if he never spoke to her again.\n\nKyle reached over and squeezed her shoulder. \"Are you sure you're OK?\"\n\nShe met his eyes, hers filling with tears. \"No.\" Her voice cracked and she sucked back a sob. \"No, I'm not OK. I messed up, big time, Kyle.\"\n\n\"We've all messed up from time-to-time.\"\n\nCassia looked over at Tyler, sniffling. \"You think?\"\n\nTyler nodded and pointed at Kyle. \"Look at how bad Kyle messes up. Like, all the time.\"\n\nKyle gaped at him. Tyler grinned back. \"And I forgive him every time.\"\n\nCassia laughed and covered her face in her hands. She drew in several stuttering breaths until she had control of herself again. \"Thanks, you guys.\"\n\nKyle stopped her from retreating to her room for a second. \"My offer to fuck him up still stands.\"\n\nCassia patted his hand on her shoulder. \"I know, and thanks. If I can manage to get him back, I want to keep him just as he is.\"\n\nKyle nodded and let her go.\n\nAlone in her room, Cassia sprawled in the middle of her bed, on her back, staring at the ceiling. The light of day faded and still, she stared at nothing.\n\nShe turned her head to one side and spotted the tickets Dylan had left on her dresser. He'd left her tickets for a few of the remaining homes games, and she'd been considering taking her mom to one, or seeing if Janis would be up for it. She had no way of knowing if Dylan would even see her there, or if he'd care. For all she knew, he could have the tickets canceled and she'd be denied entry to the arena, not that she'd blame him.\n\nFeeling lost, lonely and still a little hurt by everything he'd said to her in turn, Cassia rolled the other way, closed her eyes and counted sheep until she fell asleep.\n\n****\n\nSeveral days after the wedding, Cassia was at work when her phone started ringing. She pulled it out of her pocket, her other hand still holding the part she'd needed from the storage room. Janis' name and number flashed on the display and she answered.\n\n\"Hey, Janis. What's up?\"\n\n\"Are you at work?\"\n\n\"Yeah.\" Cassia continued to walk back to the Camry she'd been working on. Fernando was there, working just under the front end. She nudged him with a foot, handed over the part, and turned away. \"Why?\"\n\n\"When are you off?\"\n\n\"The usual time.\"\n\n\"You and I are going somewhere.\"\n\nCassia sighed and rubbed her cheek with one grubby hand. \"I don't feel like going anywhere tonight, Janis. Can I get a rain check?\"\n\n\"No, it's not tonight. It's... like, now.\"\n\n\"What?\"\n\n\"Can you get away early?\"\n\n\"Janis, what's going on?\"\n\n\"Come on, just go ask your dad. We need a spontaneous adventure.\"\n\n\"I'm not doing anything until you tell me what this is all about.\"\n\nJanis sighed. \"Don't you trust me?\"\n\n\"Of course I do. Now tell me why you want me to ditch work and leave with you.\"\n\n\"There's a thing we need to go to.\"\n\n\"A thing?\" Cassia frowned. \"What thing?\"\n\nJanis hesitated before answering and Cassia shook her head. \"If this is something to do with Dylan, the answer is no.\"\n\n\"You don't know what it is!\"\n\nCassia recalled now that there was a team event today, something to do with a charitable kid's organization. Dylan had mentioned it before the wedding, and it made sense it would be this week, as it was spring break. She also knew she didn't want to go.\n\n\"Janis, I didn't tell you about me and Dylan so you could conspire to get us back together.\"\n\n\"Don't you want to be with him?\"\n\nMore than anything. Cassia shook her head again, walking out the front doors to pace around the driveway. \"It's not that simple. I can't just show up at an event and expect to be able to fix everything, with a thousand people hanging around.\"\n\n\"There won't be a thousand people.\"\n\n\"Janis...\"\n\n\"Cassia, you told me yourself that you love him.\" Janis' voice was taking on a stubborn note. \"And that you wish you had handled things at the wedding better.\"\n\nThat was all true. She'd gone for dinner with Janis a few days after the incident and spilled her guts about everything. The arrangement, the way they'd connected and how Cassia had fallen hard for him. Janis had been sympathetic to it all, never once judging, or making fun of Cassia. It was why they were such good friends.\n\n\"You need to at least try to talk to him.\"\n\n\"I have tried. I called him.\"\n\n\"And he didn't answer. That doesn't count as trying.\"\n\n\"It means he didn't want to talk to me. Why would it suddenly be different if I showed up at the event later?\"\n\n\"He'll talk to you, Cass. Trust me.\"\n\nCassia stared across the street, seeing nothing but the hurt look on Dylan's face after they'd argued at the hotel. \"I don't know.\"\n\n\"You have to try.\"\n\nCassia didn't know about that. If she didn't try, she wouldn't find out for certain that he didn't want anything to do with her. She could pretend a little longer that he'd just been busy when she called, and hadn't actively ignored her.\n\nInstead, she heard herself agreeing to Janis' plan. Janis told her she'd come pick her up at her apartment in an hour. Cassia nodded and got off the phone before going to tell her dad she was taking off early.\n\nHe nodded and waved her off after securing her promise to come to Sunday dinner. She nodded and stripped her coveralls off. She grabbed her things from the office, clocked out, and hurried home.\n\nAs promised, Janis arrived an hour later, and they headed out in Janis' car.\n\n\"Have you talked to Carol since the wedding?\"\n\nCassia scowled and shook her head. \"No.\"\n\n\"Me either. I don't even think Olivia has. She's kind of disappeared.\"\n\n\"Maybe that's for the best.\" Cassia didn't want to say anything too rude about Carol, but she knew, after what had happened at the wedding, that she'd be fine if she never saw Carol again.\n\n\"I don't know what got into her.\"\n\n\"She was hurt, lonely and jealous.\"\n\n\"I guess. I've felt those things from time-to-time too, but I'd never hook up with a guy like Alex.\" Janis shuddered. \"I mean, ew!\"\n\nCassia laughed. \"You don't have to tell me that. I sometimes can't believe that I fell for that guy.\"\n\n\"Did you?\"\n\n\"What?\"\n\n\"Did you actually fall for Alex?\"\n\nCassia considered before answering. \"I don't know. I thought he was a great guy and we had a lot of fun together.\"\n\n\"But did you love him?\"\n\nThe word love only called one face to mind for Cassia, and it wasn't Alex. \"No. I liked him, but I never loved him.\"\n\n\"So Carol is welcome to him.\"\n\nCassia snorted. \"Yeah. She can have him.\"\n\nThey didn't say much for the rest of the drive. Janis told her the name of the location, and Cassia navigated while her friend drove through the less-than-familiar neighborhood, growing more and more nervous, the closer they got to the place.\n\nShe didn't even know what she'd say, beyond 'hello', and she didn't know if Dylan would even acknowledge her long enough to say anything more. She hoped so, but couldn't say she'd blame him if he walked away and never spoke to her again. But maybe she was being overly dramatic. They'd only been together for a few weeks. Sure, she'd fallen head over heels for him, but it wouldn't be a surprise if he didn't feel the same. She hoped, but she was a realist, after all.\n\n\"Is this it?\" Janis leaned forward, eyeing the building to their right, with the multitude of cars coming and going.\n\n\"Probably. Look at all the people.\"\n\nJanis nodded and looked for somewhere to park, while Cassia viewed the venue from her window. It was a neighborhood sports center, the kind with an ice arena, a basketball court, gym, and an outdoor football field, track, and tennis courts. There was a huge banner stretched across the main entrance, announcing the presence of the Dallas Stars, balloons all around.\n\nJanis parked the car, and they headed into the building. The crowds weren't huge, but the event was on until the evening, so perhaps more people would arrive after the dinner hour.\n\nCassia stopped just inside the lobby at her first sight of a player in a jersey. She recognized Paul Scott and wondered briefly if he'd remember meeting her. Then she saw another player, and another, her heart stopping each time until she realized none of them were Dylan. She was a wreck.\n\n\"I don't think I can do this, Janis.\"\n\nHer friend moved close to her side and linked their arms. \"Come on. I'm here.\"\n\nCassia shot her a look before nodding. They started to walk through the crowds.\n\nPast the entryway, they were directed towards the indoor arena, where several tables and booths were set up all over. Some for face painting, others with players seated at tables, signing autographs, and others serving snacks and drinks. Further in, there was a hockey skills training area and several carnival-type games, like ring toss and balloon popping.\n\n\"Holy cow.\"\n\nCassia turned at Janis' exclamation. \"What?\"\n\n\"Look at that. The back entrance is opened up too, and there's more outside.\"\n\nCassia nodded. It was an extensive set-up. She saw activities going on outside, and noticed as they got closer to the doors that there were several local youth activity groups helping as well, not just the Stars. People with name tags bustled around, handing out balloons, stickers and showing people where to go for certain activities.\n\n\"This is incredible.\" Janis squeezed her arm. \"I love seeing the communities get together for this sort of thing. The kids must be having a ball.\"\n\n\"Yeah.\" Cassia looked around, hearing nothing but raised voices and laughter all around. The kids she saw were all smiling and having fun, and she felt like a wet sock. \"I don't see Dylan.\"\n\n\"Well, he's got to be around here somewhere. Should we go check outside?\"\n\nCassia shrugged. \"I don't know.\"\n\nThen someone called her name and they both turned to look. Jake Brown came up to them, a wide grin on his face.\n\n\"Hey, Cass. Dylan didn't mention you were coming.\"\n\nCassia managed a smile. \"I wasn't sure if I could make it.\" It was clear that Dylan hadn't advertised their break-up. \"Jake, this is my friend, Janis. Janis, Jake Brown.\"\n\nThey shook hands. \"Nice to meet you, Janis.\"\n\n\"And you, Jake.\" Janis smiled at him. \"Are you a hockey player, too?\"\n\nCassia snorted with laughter. \"He's the captain of the team, Janis.\"\n\nJanis flushed but still smiled. \"I'm more of a football fan, myself.\"\n\nJake laughed. \"Not surprising. It's great that you were able to come.\"\n\n\"Yeah.\" Cassia swallowed, her gaze darting around the crowded venue. \"I don't see Dylan.\"\n\nJake twisted around, looking with her. \"Last I saw, he was with the kids at the skills corral.\"\n\n\"Corral?\" Janis laughed. \"Are they cattle?\"\n\n\"Sometimes it does feel like herding cattle, when it comes to kids.\" Jake turned back with a grin. Someone waved for Jake's attention from a nearby game booth, and he took a step in that direction. \"If I see Dylan, I'll tell him you're here.\"\n\nCassia nodded. \"Thanks. Good to see you, Jake.\"\n\n\"You too.\" He winked and hurried off to see to his duties.\n\n\"He's nice.\" Janis watched him go.\n\nCassia squeezed her arm. \"You're nearly married, girl.\"\n\n\"Doesn't mean I can't appreciate fine things.\" Janis tilted her head to one side. \"Like that backside. Damn.\"\n\nCassia burst out laughing and steered her friend away from the games and Jake Brown. \"Come on. The skills corral was back here.\"\n\nThey walked that way, the butterflies going mad inside Cassia's stomach. Then she saw him. He straightened, stick in hand, and watched a kid take a shot, the puck sailing into the net on the other end of the little space. Excited, the kid spin around and high-fived Dylan, who laughed and cheered him on.\n\nCassia froze, pulling Janis to a stop beside her. Janis looked at her, a frown knitting her forehead.\n\n\"Cassia?\"\n\n\"I can't do this.\"\n\n\"We're already here.\" Janis patted her hand and looked over at Dylan as he started talking to the next kid in line. \"Just go say 'hi.'\"\n\nCassia shook her head. \"This was a mistake. He's not going to want to talk to me.\"\n\n\"Of course he is. No man agrees to go along with a pretend dating scenario unless he likes the woman.\"\n\nCassia blinked and turned to her friend. \"What?\"\n\n\"Oh, come on, Cass.\" Janis was grinning. \"I know you think he did it just because he's a nice guy, which he is, a really great guy, actually. But there's no way he agreed out of the kindness of his heart.\"\n\nIt had never occurred to her that he'd gone along with her plan for any other reason than that. She shook her head. \"What?\"\n\nJanis laughed. \"I'm telling you, he's liked you from the start, and he'd never snub you if that's the case.\"\n\nCassia's mind spun at Janis' words. \"I don't know.\"\n\n\"I do.\" Janis let go of her arm and started walking closer to the skills area. Cassia gasped and hurried to catch her friend, but not before Janis lifted a hand in a wave. \"Hi, Dylan.\"\n\nDylan looked up, a grin on his face from the antics of the last kid he'd been helping, and spotted the two of them. His smile slipped when he saw Cassia and she felt her heart leap, lodging somewhere in her throat.\n\nThat's when she spotted Tristen, who'd been helping him, and Tristen lifted his hand in a friendly wave.\n\n\"Hey, Cass. What a surprise.\"\n\nJanis reached back and grabbed Cassia's hand, hauling her closer so they wouldn't be shouting across the last several yards.\n\n\"I'm Janis, Cassia's friend.\" Janis shook Tristen's hand. \"And you are?\"\n\n\"Tristen Sturgess.\" He grinned and reached over to pull Cassia close with one arm. Turning with her, he faced Dylan. \"Why didn't you tell me she was coming?\"\n\nDylan stared at Cassia, his smile still there, but no longer in his eyes. \"I didn't know.\"\n\nFor a second, no one spoke and Cassia could feel her cheeks going pink. She looked down, unable to meet Dylan's eyes any longer.\n\n\"Why don't you take a break, Dylan.\" Tristen dropped his arm from Cassia's shoulders. \"Go get a drink with Cassia. I think we were about to rotate stations soon anyway.\"\n\nDylan glanced at his teammate with a slight nod. Cassia looked at Janis, who nodded.",
        "\"Go on.\" Janis squeezed her hand. \"I'll hang out here until you're ready to go.\"\n\nCassia didn't say anything but let go of Janis' hand and followed as Dylan turned towards the main concourse. A few people stopped Dylan to get a picture or just to shake hands, but they were out by the concession stand in mere minutes.\n\n\"Would you like anything?\" Dylan gestured at the snacks and drinks.\n\nCassia shook her head. \"I'm fine, thanks.\"\n\nThey walked on, circling a corner and finding themselves in a quieter hallway, only a few people milling around. Dylan faced Cassia, his face revealing nothing of what he was thinking, and Cassia crossed her arms over her chest, feeling like she needed to protect herself. For a long minute, neither of them spoke.\n\n\"Looks like a successful event.\"\n\nDylan nodded and shoved his hands in his pockets. \"I think it is.\"\n\nAnother long silence stretched out. Cassia's skin prickled all over and she wanted to run away. This had been a mistake. She looked up at Dylan, then away, opening her mouth to say she was sorry for bothering him.\n\n\"I'm surprised to see you here.\"\n\nCassia's eyes swung back to his face. \"Yeah. Well, it was Janis' idea.\"\n\nDylan's brows drew together. \"Oh.\"\n\n\"I mean, I would have liked to have come anyway, but she suggested it earlier. I was at work, and she called, but I was able to finish up early. Then she came over and we looked the place up and all.\" Cassia knew she was rambling a bit but didn't know what else to say. She'd never had a problem talking to Dylan. Even when they'd been spewing angry things at each other in the hotel room, she'd never been as hesitant as now. \"And I thought it would be a good idea too, so here we are.\"\n\n\"Here you are.\" Dylan's expression didn't change.\n\nCassia stared at him, willing him to say something else, even if it was that he didn't want to see her, here or ever.\n\n\"Did you come to talk to me?\"\n\n\"I'd hoped to.\" She swallowed hard. \"You didn't return my calls.\"\n\nHe shrugged. \"You didn't leave any messages.\"\n\n\"I didn't know what to say.\"\n\n\"And now?\"\n\n\"Now...\" She sighed and looked away. \"Now, I'm thinking you didn't want to to talk to me after all.\"\n\n\"Why?\"\n\nShe shot him a look. \"Because you're not.\"\n\nDylan's face broke in a tiny smile and he looked down. \"I don't know what to say.\"\n\nCassia hated that she'd done that. From the very beginning, he'd always been able to talk to her. \"I'm sorry, Dylan.\"\n\nHis eyes came back to hers. \"For what?\"\n\nTears stung her eyes. \"For everything. I was a total jerk.\"\n\nHe didn't say anything, but his eyes widened a degree.\n\n\"Even if it was true at the time, I should never have said anything to Carol about us. That wasn't fair to you.\" She hugged herself tighter. \"No matter what the circumstances might have been, it would have been embarrassing all around if she'd something. And it was.\"\n\nStill, Dylan remained silent.\n\nCassia stared into his face, trying to figure out even a sliver of what he was feeling. \"And I definitely shouldn't have accused you of not wanting to be with me because of the whole college thing. It was stupid and I was letting what other people said about it get to me. I started to believe everyone when they said I'd missed out and that I wasn't good enough without a college degree or something.\"\n\nDylan's eyes narrowed at that and he shifted on his feet.\n\nCassia barreled on. Now that she'd started, she needed to lay it all out for him, and then she'd hear what he thought.\n\n\"You were never one of those people. You never made me feel inadequate, or that you thought something was missing. I loved that about you. You're a good person, Dylan, a great person, really, and when I let my doubts get the better of me, and I was so afraid of losing you, because...\" Her breath caught in her throat and it took her a second to push on. \"Because I fell in love with you.\"\n\nDylan's eyes widened. Yup. She'd shocked him with that one.\n\n\"After the way we started, with the fake dating and all, I didn't know, not for sure, if you'd really want to be with me, for real.\"\n\n\"Cassia-\"\n\n\"I'm not trying to force your hand, Dylan. I didn't come here expecting you to forgive me just like that.\" She snapped her fingers. \"I should never have said what I did at the hotel, and I shouldn't have said anything about you to Carol or Alex. I'm so sorry, Dylan.\"\n\nHer voice cracked on his name and she looked away. Dylan wasn't saying anything, and he made no move to reach for her. She'd done it, said everything she'd been thinking and feeling, and even if she hadn't been poetic about it, at least he knew now. And still, he remained silent. The moments dragged on and Cassia hugged her middle, as if she could keep herself from falling apart.\n\nIf she didn't get out of there fast, she was going to lose it and didn't really want to go through a crying fit in a public place. \"I should go.\"\n\nHe reached for her as she turned to walk away. \"Cassia, wait.\"\n\n\"Dylan, it's all right.\" She shrugged his hand off. \"I shouldn't have come here. You're busy, and I should leave you alone.\"\n\nHe opened his mouth, then closed it. She let herself have one more good, long look in those blue eyes she loved. But he said nothing, and that was enough for her.\n\n\"Good-bye, Dylan.\"\n\nShe walked away without looking back. If she did, she might just throw herself at his feet, begging for another chance. She had some pride left. If Dylan wanted to talk to her again, he had her number, knew where she lived and worked. Right now, she needed to get the hell out of there.\n\nShe rounded the corner, almost running into Tristen and Janis. \"Oh, hey. We're on our way out.\"\n\nJanis blinked. \"We are?\"\n\nCassia nodded and took a step towards the main doors.\n\n\"Hey, Cass. Hold up.\" Tristen's tone wasn't the usual teasing tone he had, which drew Cassia's attention, even as she fought to keep her emotions in check. \"Are you all right?\"\n\nHe was far more observant than she gave him credit for. She started to nod, and say she was all right, but she couldn't. She shook her head.\n\nTristen glanced over his shoulder in Dylan's direction, though his teammate wasn't in sight. \"Did you guys have a fight?\"\n\n\"I don't really want to talk about it, Tristen.\" Cassia tried to keep her tone light but she had a lump the size of Texas in her throat.\n\n\"Look, Dylan doesn't always say what he's thinking.\" Tristen waved a hand in the air. \"He's kind of an introvert, not like me.\"\n\nCassia almost smiled. \"You don't say.\"\n\nTristen's trademark grin returned. \"But he's a good guy. You should give him another chance.\"\n\n\"I'd give him all the chances he wanted.\" Cassia surprised herself with her confession. She sucked in a breath and glanced over his shoulder where Dylan had appeared around the corner. \"But that's not the problem.\"\n\nTristen's smile dimmed but he nodded, as if he understood something. \"Here.\" He pulled a felt pen out of his pocket, probably used for autographs. He grabbed her arm and started writing on the back of her hand. \"Don't tell him I gave you this.\"\n\nCassia stared at his bowed head as he scrawled on her hand. Was he seriously hitting on her right now? \"Are you kidding me?\"\n\nHe chuckled. \"It's not what you think.\" He dropped her hand and snapped the lid back on the felt. \"Trust me.\"\n\nShe shook her head and reached for Janis, not even bothering to look at her hand. She didn't know what that was all about. \"Sure, Tristen. Thanks.\" She shot one more look in Dylan's direction as he started to walk towards them, a scowl on his face. \"Bye.\" \n\nJanis went with her as Cassia pulled her to the doors. They hurried outside and across the parking lot to Janis' car. Once inside, Cassia put her head against the seat.\n\n\"What happened?\"\n\nCassia summarized and then lifted her hand to glare at Tristen's writing on her hand. \"I can't believe him.\"\n\nJanis let out a light laugh. \"Some guys just don't know when to give up.\"\n\n\"It's not his phone number.\"\n\n\"What?\"\n\nCassia turned her hand to Janis. \"It's an address.\"\n\n\"What? Whose?\"\n\nCassia didn't know how she knew. \"It's Dylan's.\"\n\n\"Why would he give you Dylan's address? Wouldn't you already have that?\"\n\n\"No.\" Cassia shook her head, her eyes glued to the address. \"We never went to his place.\"\n\n\"Why not?\"\n\n\"Never had a chance, I guess.\" She put her hand down and met her friend's bewildered look. \"Tristen is his roommate, or was. Dylan told me at the wedding that he'd told Tristen to move out.\"\n\nJanis' eyes widened in understanding. \"He's moved out and gave you the address for Dylan's place so you can go surprise him there.\"\n\n\"I guess.\" Cassia glanced at her hand. \"I don't know. Tristen doesn't strike me as the romantic gesture type.\"\n\nJanis smiled. \"I used to think that way about Matt.\"\n\nCassia nodded, recalling the early days of Janis and Matt's courtship. There had been a lot of pool playing, football games, and beer. But there had also been flowers, bubble baths and even poetry. Matt didn't show his softer side to the world at large, but Janis had told Cassia a lot about his romantic gestures over the years, including his proposal on a beach at sunset.\n\n\"Either Tristen is being a slimeball, giving me his address for a hook-up...\"\n\n\"Or he's trying to be a good friend, and get you two back together.\" Janis stuck her key in the ignition and started the engine. \"I only talked to him for a few minutes, but he didn't seem that slimy. Alex, on the other hand, he would be the jerk.\"\n\n\"Totally.\" Cassia laughed and looked at her hand.\n\n\"So where are we going?\"\n\nCassia glanced over to see her friend eyeing the address on her hand. \"Well, Dylan won't be done with the event for a few more hours at least.\" She couldn't believe she'd even consider seeing him at his place, uninvited.\n\nJanis looked surprised as well, but smiled instead of asking her about it. \"Dinner?\"\n\n\"Yeah, sure. Let's do that.\" Cassia nodded and buckled up before Janis pulled out of the parking lot. She could spend the next little while deciding if she wanted to accost Dylan at his apartment. She didn't know why Tristen would have given her Dylan's address unless he knew Dylan would be OK with it. Just because Dylan might be all right with it, didn't mean Cassia had the courage to face him again, not when he'd shut her out mere minutes before.\n\nWith a sigh, she turned her hand over and stared out the windshield. Janis started listing some restaurant and dinner options, and Cassia tried to focus on that instead of her renewed nerves.\n\n****\n\nAs Dylan walked up to Tristen, he didn't know if he'd hit him. When he'd seen his teammate holding Cassia's hand and writing something on it, it had been his primary urge. Then he'd seen the look Cassia gave Tristen and how she'd bolted after, and the immediate urge for violence faded. Tristen turned to him with that usual cocky grin on his face, and Dylan thought he might still do it.\n\n\"What was that?\"\n\n\"What?\" Tristen blinked, giving him an innocent look.\n\n\"That.\" Dylan pointed over Tristen's shoulder where Cassia and Janis were disappearing out the main doors. \"What did you say to her?\"\n\nTristen shrugged. \"Nothing, really. She looked upset so I asked what was wrong.\"\n\nDylan's eyes narrowed. \"And?\"\n\nTristen returned Dylan's look in full. \"You probably know better than me.\"\n\n\"What are you talking about?\"\n\n\"I don't know what happened between you two, but you've been a dick to everyone for over a week.\"\n\n\"Says who?\"\n\n\"Says me.\" Tristen rolled his eyes and turned away, heading for the concession.\n\nDylan scowled at his back, glanced at the main doors, and then followed Tristen. They both got a water and headed back for the arena, and their duties.\n\nDylan couldn't let it drop. \"So because you think Cassia and I broke up, you can ask her out?\"\n\n\"What?\" Tristen looked genuinely surprised at the suggestion. \"No. I may get around but I wouldn't do that.\"\n\n\"Then what did you write on her hand?\"\n\n\"Nothing.\" Dylan gave him a pointed look. Tristen sighed. \"An autograph. That's all.\"\n\nDylan wasn't sure if he believed him, but his friend was right. He was a bit of a player, on and off the ice, but he wasn't a total jerk.\n\nHe faced the crowd from the corner they'd stopped in, and wondered how many hours he had left. He'd been doing all right, choosing to focus on practice, games, and the event today, but the sight of Cassia had brought everything right back to the forefront of his mind. The last thing he'd expected was her showing up to apologize to him.\n\nAfter the wedding, he'd convinced himself that he'd messed up royally and she'd never speak to him again. She'd called twice, but hadn't left messages and he'd been too chicken to return the calls. He felt like the last several months hadn't even happened, that he was right back to where he'd started, with the crippling inability to say anything of meaning to a woman. Not just any woman, either. Cassia, who he'd always been able to talk to, joke with, and who he'd never been shy around.\n\nTristen hadn't been lying. He knew he'd been a bit of a bear around the guys, which had probably spurred on Tristen's exit from their apartment. Not that Dylan could complain about that. It was nice to not have to worry about tripping over a strange woman's underthings in the morning. It wasn't like Dylan could talk to anyone about his issues either. He'd considered confessing his problems to his mother or one of his sisters, if only to get their opinion, but he'd been too embarrassed.\n\n\"Come on.\" Tristen punched him in the arm. \"Let's head outside. I think we're supposed to be helping with the ball hockey games for the next shift.\"\n\nDylan nodded and followed his teammate through the crowd.\n\nIt was a warm day, cooling as the sun started to sink on the horizon. As it grew darker, the activities outside wrapped up and the team spent the rest of their time signing more autographs and taking pictures with the guests who remained at the athletic center.\n\nWhen at last it was only the organizers and players left, Dylan found himself sitting on one of the team benches, staring across the arena but seeing nothing. He kept replaying everything Cassia had said to him earlier, his mind catching on the most important thing. She loved him. And he'd been too much of an ass to say it back, to hold her, and say he didn't want to spend another moment without her.\n\n\"Hey, Sams.\"\n\nDylan looked up as Jake slid onto the bench beside him. \"Hey, Jake. What's up?\"\n\n\"Where's Cassia?\"\n\n\"What? Did you see her?\"\n\nJake blinked, surprised. \"Uh, yeah. A while ago, she was with a friend.\"\n\nDylan jerked his chin in a nod. That must have been before he'd seen her.\n\n\"What's wrong? Did you guys have a fight or something?\"\n\nDylan slanted him a look and Jake laughed.\n\n\"Hey, I know I'm no psychiatrist, but I can listen, if you wanted to talk about it.\"\n\n\"I really don't.\"\n\n\"Fine. Then you can listen. Whatever you did, you need to make it right.\"\n\nDylan glared at him. \"What makes you think it's something I did?\" Cassia had certainly seemed to think she was to blame, going by her heartfelt apology. But Dylan knew he wasn't innocent of all that had gone wrong.\n\n\"Whatever. Your fault, hers. You just need to figure it out.\"\n\n\"Why?\"\n\nJake gave him a considering look. \"Look, I've known you for a while now, and I know you don't have the best of luck with women.\"\n\nDylan snorted. \"No shit.\"\n\n\"Then you met Cassia, and against all the odds, you figured out a way to talk to her.\" Jake leaned forward, pressing his elbows on the boards. \"And she's great, Sams. Funny, gorgeous, a hockey fan, and a shark at the poker table.\"\n\nDylan had to laugh at that. The charity casino had been one of his favorite nights ever.\n\n\"If you don't give whatever this is between you another chance, you'll be kicking yourself forever.\"\n\n\"You're probably right.\"\n\nJake nodded, his expression sober. \"You should listen to your captain.\"\n\nDylan chuckled and nodded. \"Aye, captain.\"\n\nThey sat in silence for a little while longer. Then Tristen and few of the other guys came over and someone suggested they go for a late dinner. Dylan went along with them, but excused himself early.\n\nIt had been weeks since he'd had a good slice of pie. Cassia had said she was in love with him. Maybe a second chance wasn't too far-fetched, and if he'd been able to talk to her before, he'd find a way to do it again. After all, he was in love with her, too.\n\nAs he walked into the Lone Star Diner, he looked around but there was no sign of Cassia. His heart sank and he wondered if she'd been avoiding the diner and any chance of running into him.\n\n\"Hey, sugar.\" Sally spotted him and greeted him with a broad smile. \"What brings you in tonight?\"\n\nDylan smiled back and moved to take a seat at the counter. \"The usual, ma'am.\"\n\nSally poured him a cup of coffee and hurried off to get him a slice of pie. \"Chocolate cream, tonight.\"\n\nDylan's mouth started watering at the sight of the dark chocolate cream, topped with meringue. \"Thanks, Sally.\" He couldn't bring himself to eat it. He glanced around him, and back at Sally who had stayed near, putting some cutlery away under the counter. \n\n\"Has Cassia been in recently?\"\n\nSally's responding look was curious but she shook her head. \"Haven't seen Cass in a couple weeks now.\"\n\nDylan nodded, his mood sinking further. This was Cassia's favorite place. The only reason she wouldn't have been here in weeks was because of him. Maybe he'd been wrong about her willing to give things another shot.\n\nHe picked up the fork and poked at the pie.\n\n\"Is chocolate cream not your thing?\" Sally moved closer. \"I think I've got an apple pie in the chiller. I was saving it for tomorrow, but I could make an exception.\"\n\n\"Oh, no, I'm sure it's delicious.\" Dylan sighed and set the fork down. \"It's just not the same without Cassia.\" Nothing was.\n\nSally gave him a sympathetic smile and reached under the counter, coming up with a to-go box. She scooped the pie into it and folded the lid down. \"Here you go. Why don't you save it for when you see her?\"\n\n\"I don't know when I'll see her. If I'll see her.\" Dylan touched the box and looked up. \"I thought I'd see her here for sure.\"\n\n\"She doesn't live too far from here. Why don't you surprise her?\"\n\nDylan shook his head. The empty stool at the end of the counter had been enough of a sign. Maybe he'd find the courage another night. He reached into his pocket for money and stood up. \"Thanks anyway, Sally.\"\n\nSally nodded. \"Sure thing, sugar. Have a good night.\"\n\nDylan picked up his pie and left, the bell ringing over his head. Outside, he looked in the direction of Cassia's apartment but turned towards his truck.\n\nThe drive to his place seemed to take no time at all, his mind filled with thoughts of everything Cassia had said to him, and everything he should have said in return. Damnit, why had he let his old insecurities get the better of him?\n\nAt his building, he carried his pie in and up to his floor, staring at the keys in his hand as he walked down the hall to his door. He didn't look up and almost tripped over Cassia when he got to his apartment.\n\n\"Cassia!\"\n\nShe looked up at him, drawing her legs in and standing. \"Hi, Dylan.\"\n\nThey stared at each other, Dylan in shock, Cassia with a shy smile on her face.\n\nDylan looked down the hall, and back the other way, before turning back to Cassia. \"How did you get in here?\"\n\n\"Uh, actually, Tristen let me in, just a little while ago.\"\n\n\"Tristen?\" Dylan shook his head. \"I don't understand.\"\n\n\"Well, I was outside, waiting at the curb in Janis' car, and I kept buzzing your apartment, and ran into Tristen on my way back out after the last try. Someone had dropped him off out front, I guess.\"\n\nDylan figured he must have caught a ride with one of the other guys. He still couldn't wrap his head around the fact that Cassia was here, in front of him. \"You came here to see me?\"",
        "\"Who else?\"\n\nDylan stared at her, loving every freckle on her nose and fighting the urge to kiss every one of them, while they stood in the hall. He cleared his throat. \"Would you like to come in?\"\n\nShe nodded and stood aside so he could unlock the door. They walked in and Dylan led the way, turning on lights and showing her the kitchen and living room.\n\n\"This is a really nice place, Dylan.\"\n\nDylan shrugged as he put the pie in the fridge. It was the only place he'd lived in since coming to Dallas, and it served its purpose.\n\n\"Is this your family?\" She pointed at the pictures on the fireplace mantle.\n\nDylan came up to her side to look at the picture. \"Yeah. Mom, Dad, and my sisters, Zoe and Breanna.\"\n\n\"And you.\" She gave him a smile and shifted her finger to his face in the middle of the shot.\n\n\"That was taken right before I left for college.\"\n\n\"You look so young.\"\n\nDylan smiled and rubbed a hand through his hair. \"I guess so. Bit more grey now.\"\n\nCassia followed the movement of his hand and nodded. He met her gaze and realized how close together they were standing. God, she smelled so good. He'd noticed at the arena earlier but hadn't been sure if she'd want him to touch her or not.\n\n\"Why are you here?\"\n\nHer eyes dropped and she folded her hands in front of her. He saw her shoulders lift as she took a breath before meeting his gaze again. \"It occurred to me, after I said my piece at the arena, that you sometimes have trouble saying what's on your mind.\" A smile spread across her face as she spoke. \"And instead of giving you a minute to recover, I just ran away. That wasn't fair.\"\n\nDylan shrugged. \"It's OK.\"\n\n\"It's not. Not really.\" Cassia sighed and moved away, pacing around his living room. \"Dylan, over the past few months, I've got to know who you are, and you've told me things about yourself, including your issues with talking to women.\"\n\n\"I've never had trouble talking to you.\" So often, she'd been the one to remind him of that fact, and it felt a little odd to be the one pointing it out now.\n\nHer smile widened and she stopped in the center of the room. \"Exactly, and instead of giving you a few minutes to process what I'd said, I assumed you had nothing to say to me. So I bolted.\"\n\nHer words made him realize something. Was it possible that every other woman he'd struggled to connect with had assumed the same thing? That his lengthy silences meant he wasn't interested?\n\n\"So I told myself I needed to see you again, to find out if you had figured out what you wanted to say.\" She took a step towards him. \"Because I don't think anyone else has ever given you the same chance.\"\n\nDylan shook his head, smiling himself. \"You're probably right, but it's not all their fault. Uncomfortable silences don't make things easy.\"\n\n\"No. You're right about that.\"\n\nThey faced each other, smiling, and Dylan's chest started to loosen up. He moved a step closer to her.\n\n\"So you decided I had something to say and came here?\"\n\n\"Yeah.\" She nodded. \"Tristen gave me your address earlier.\" She let out a little laugh and lifted her hand to show him. \"I thought he was giving me his number and almost kicked him in the balls.\"\n\nDylan barked out a laugh. \"Me too. I wanted to punch him.\"\n\nHer eyes widened. \"You didn't, did you?\"\n\n\"No.\" Dylan took another few steps, closing the distance between them, and reached for her hand. He rubbed his thumb over the writing and could feel her trembling. \"Permanent ink. What a dumbass.\"\n\nCassia laughed. \"It's fine. I get worse on my hands daily at the garage. There'll be something there I can wash it off with.\"\n\nDylan squeezed her fingers and looked into her eyes. \"I'm sorry for ever making you think I was disappointed in you, or in what you do.\"\n\n\"Dylan-\"\n\n\"No, you said your piece, now let me.\" He smiled to take the edge off his words. \"It's why you're here, right?\"\n\nShe smiled and nodded, remaining silent. He pulled her closer, loving the way her cheeks colored. How novel, to be the one not blushing.\n\n\"I think you're amazing, I always have.\" He wrapped an arm around her waist and brushed her hair over her shoulder with his other hand. \"I told you ages ago that you intimidate me, and I meant it, and that has nothing to do with college or a ritzy address or your job.\"\n\nHer eyes dropped and he touched her chin until she looked up at him. \"You're smart, honest, kind and funny. None of that would be enhanced or diminished by a college education. That's just who you are and I've always known that.\"\n\nHer face broke out in the most incredible smile. \"Oh, Dylan. I'm so sorry for assuming you ever thought that. It was all my own doubts, not you. Not ever.\"\n\nHe couldn't hold off any longer. He kissed her. She pressed against his chest for a second, as if she wanted to say more, but he didn't let her go. He angled his head and took the kiss deeper, tasting her, and drinking in the little sound she made at the back of her throat. God, why had he gone so long without this?\n\nWhen she bowed against him, letting his hold tighten around her, he eased back, letting them both catch their breath.\n\n\"You're done apologizing.\"\n\nShe opened her mouth but he kissed her again. \"No more. It's my turn.\"\n\n\"Dylan, you have nothing to be sorry about.\"\n\nHe blew out a breath and touched his forehead to hers. \"Yes, I do. I should never have listened in to your conversation with Alex and Carol.\"\n\nHer head drew back, her brow creased in a frown. \"Dylan-\"\n\n\"I never meant to.\" He huffed out a laugh, feeling his ears turning pink. \"I saw you go in and thought I'd join you. I thought we could have a little fun in there.\"\n\n\"Oh God.\" She closed her eyes for a second. \"Instead, I found Alex and Carol going at it. And then you overheard everything after.\"\n\nDylan chuckled, because he could laugh about it now. \"I can't even imagine what that was like for you to find them.\"\n\nShe wrinkled her nose. \"It wasn't pleasant. I was worried for Carol and disgusted by Alex. And then I was just pissed at them both and only wanted to get to you.\"\n\nDylan groaned. \"And then I snapped at you and accused you of using me for the wedding. Cassia, I'm so sorry. That was such a boneheaded move.\"\n\n\"I can't blame you for that. It was how we got started, after all.\"\n\n\"But everything changed after your birthday, and we both know it.\" Dylan squeezed her around her middle. \"I wasn't pretending anymore, and I knew you weren't. I'm sorry I ever said you were.\"\n\n\"I know, Dylan.\" She kissed him and he let himself sink into it for several long moments.\n\n\"And I'm so sorry I walked out on you that night.\"\n\nShe let out a light laugh. \"OK, if I'm done apologizing, then so are you.\"\n\nHe shook his head and buried a hand in her hair, holding her head as he looked into her eyes. \"I mean it. I can't believe I did that. It was so rude, and I was so stupid. I mean, you were in that dress, and looked so fucking good.\"\n\nHer eyes popped open wide. \"Dylan. You just said the f-word.\"\n\nHe nodded. \"Because I mean it.\" He moved his head, putting his lips close to her ear, grinning when she shivered as his mouth brushed the skin there. \"You looked fucking delicious, Cassia.\"\n\nShe shuddered and tipped her head back, baring her throat to him. Dylan swallowed, unsure of what had made him say what he had, but who cared. He was hard as a rock and Cassia was so warm in his arms. And they had so much lost time to make up for.\n\nFor a while, Dylan held Cassia in his arms as he ran light kisses up and down her throat, teasing her with his tongue here and there. She jerked in his arms when he closed his lips around her ear lobe and sucked. Her fingers were in his hair, clenching tight and holding him there.\n\n\"Oh, man, that feels so good, Dylan.\"\n\nDylan smiled against her skin, pressed a kiss there and then pulled back so he could look into her eyes. \"You taste fucking good.\"\n\nShe started to laugh. \"I don't know if I can get used to you swearing so much, Dylan Samuels.\"\n\nHe laughed with her. \"Me either. I just want you to understand how easy it is for me to say anything to you.\"\n\nHer expression softened and she slid one hand to his cheek, holding her palm there. He turned his face, keeping his eyes on hers as he pressed a kiss to her wrist.\n\n\"Mmm. Anything?\" Her voice was husky.\n\nHe nodded. \"Anything. Such as... I love you, too.\"\n\nShe blinked, clearly not expecting that response. Then her eyes turned watery and she buried her face against his neck. He held her, stroking a hand over her hair, offering comfort even as his heart thundered in his chest. He'd never said those words to a woman before. Turning his face, he pressed his lips to her hair and whispered it again and again, until she lifted her head.\n\nTears lined her cheeks but she was smiling. \"I love you, Dylan. So much.\"\n\nHe let out a sigh. \"I know. You told me.\"\n\nHer cheeks turned pink but she didn't look away from his eyes. She pulled him close, kissing him once, twice, and a third time before pulling out of his arms.\n\n\"Hey, where you going?\"\n\nShe looked over her shoulder as she pulled her jacket off and her shirt, almost in one motion. Dylan gaped at her. She paused near the hall to the bedrooms, her hands on the waist of her pants. She undid the button and pushed them over her hips, leaving her standing there in her underwear, a stroke-inducing set of black lace panties and bra.\n\n\"Shit, Cassia.\" Dylan couldn't move his feet. He was afraid he might melt on the spot. But what a way to go. \"What are you trying to do to me?\"\n\nShe cocked her head to one side, her arms snaking behind her. The bra came off and Dylan's heart stopped for a full second.\n\nShe held the bra before her and dropped it to the floor with the rest of her clothes. \"I'm trying to get you in bed, Dylan Samuels. Do you have a problem with that?\"\n\nHe moved then, crossing the room and hauling her nearly naked body up against his chest, his mouth coming down on hers. \"Fuck, no.\"\n\nShe giggled, for a second only, before it turned to a groan as Dylan all but dragged her down the hall to his room. There, he pushed away and started to strip out of his own clothes. She sat on the bed, lifting one foot and then the other, tugging her socks off.\n\n\"Now, that.\" He pointed when she stopped moving, panties still in place.\n\nShe grinned, her eyes dancing. \"What happened to all your pretty words, Samuels?\"\n\n\"I dropped them in the front room with your clothes.\" Dylan yanked his pants and socks off and crawled over her, his knees on either side of her legs. \"I'm done talking.\"\n\nShe nodded, her expression turning hungry. Their hands collided as they reached for her panties. They were gone in another second and Dylan slid his hand up her thigh. The heat of her nearly had him seeing stars.\n\n\"Jesus, you're so hot.\" Dylan dragged his tongue up her neck and across her chin to her lips. \"And so wet.\"\n\nShe shuddered. \"I thought you were done talking.\"\n\nHe nipped her lower lip and she gasped. \"Just one more thing.\"\n\nThen he brought their mouths together, trapping her next gasp and loving the way her tongue slipped over and around his. Dylan moved his hand between her legs, swallowing every one of the hot little noises she made. She writhed against him, her fingers digging into his shoulders and he reveled in it. He wanted everything she could give him, and he'd take it, again and again.\n\nWhen he drew back so they could both catch their breath, Dylan had moved over her, every hard inch of his arousal pressing against her inner thigh. He could feel her there, so slick and hot, while his blood pounded through his veins, all sensation centralized in one spot.\n\nShe lifted her chin, pressing little nibbling kisses to his jaw and throat, one hand sliding through his hair, her nails scraping on his scalp. He shivered and thrust his hips, hitting her in exactly the right spot, so she jack-knifed off the bed with a cry.\n\n\"Dylan!\"\n\nHe looked down at her and did it again, giving her a wicked grin when she looked up at him, her eyes wide. Yes, he was surprising himself. He wasn't usually the take-charge guy, the one issuing orders or pinning the woman down in bed. But with Cassia, he was. He was the nice guy, who could pick her up when she'd had too much to drink, and the guy who could bring her to the brink and then tease her until her begging pleas filled the air.\n\n\"Please, Dylan. I need you.\"\n\nAnd he could deny her nothing. She was his everything, and he'd spend the rest of his waking hours making sure she knew.\n\nSo he brought them together, almost blacking out at the searing pleasure of sliding inside her body. She let out a cry and wrapped everything around him, arms holding his chest to hers and her legs drawing him deeper.\n\nHe huffed out a breath and let them both simply feel how good it felt. After a moment or two, some sense returned and he lifted his head, kissing her good and hard as he pulled his hips back, before thrusting again. Something about the angle was apparently good for her because in another few strokes, she tightened all around him, her nails scoring his shoulders. He had the fleeting thought that the guys might notice next time he saw them in the locker room, but she squeezed around him and all sensible thought fled.\n\nAll he knew then was heat, soft, gliding heat, and the wild, wonderful taste of her as she kissed him. She whimpered as he continued to move, her mouth open on his neck as he shifted over her, bracing himself on the bed and thrusting deeper, and harder. His breath caught and an immense wave of sensation tightened his spine. He groaned, dropping his head to her shoulder, and rode the wave.\n\nLater, Dylan thought he'd never be as comfortable and as sated as he was in that moment. Cassia was warm, her body soft under his arm and every inch of her smelled like paradise.\n\n\"What was the one more thing?\"\n\nHe opened his eyes to see her face turned to his on the pillow they shared. \"What?\"\n\nShe grinned, her hands stroking up and down his arm across her middle. \"Before, I said I thought you were done talking, and you said, 'just one more thing'.\"\n\nHe frowned as he tried to recall. \"I did?\"\n\nHer laugh had no business getting him all worked up again so soon, but it did. She rolled her entire body towards him and his eyes strolled across every bare inch of her. \"You really don't remember what you were going to say?\"\n\n\"No. I guess I had other things on my mind.\"\n\nHer mouth quirked, an adorable smile that he needed to kiss. So he did. It turned into another, and another until she was melting under him again. Not that he minded. He could handle it. He was in pretty good shape and he loved her, so he'd do it all, anything she wanted, as often as she wanted it.\n\n****\n\nCassia didn't care who knew it. She loved watching Dylan play hockey. She was going to attend every damn home game next season, no matter what. The thought only gave her a second's pause and then she was on her feet with everyone else as Dylan stole the puck in the neutral zone, and headed into the attack zone. He caught the Avalanche on a change, throwing everyone off, and zipped forward. Ice scraped, the goalie dropped a pad, his glove went up, but Dylan angled the shot over his other shoulder and the net shook with the goal.\n\n\"Yeah!\" Cassia screamed, clapping her hands and high-fiving the fans nearest her.\n\nBeside her, Janis rose as well, clapping in a more sedate manner, her brow furrowed. Cassia laughed at her friend's lost expression.\n\n\"Are you having fun?\" Cassia leaned close after some of the furor over Dylan's goal subsided.\n\nJanis shrugged and smiled at her. \"I know you are.\"\n\nCassia grinned, turning to seek Dylan on the bench. He was grinning from ear-to-ear, and she practically vibrated with the need to kiss him in congratulations. As a defenseman, he didn't score often, and tonight, when it mattered, it made it all that much sweeter.\n\nIt was the last game of the season, and even though the Stars had been out of the playoff race for a few weeks, she knew they wanted to go out with a bang. They'd been trailing the Avs through the last period, but now they were tied, thanks to Dylan's goal.\n\nIn the end, it went to a shootout, and Cassia was on her feet the whole time, her heart in her throat as each player took their shots. Tristen Sturgess was the hero, with the only goal in the entire shootout.\n\nThe crowd was jubilant, in spite of it being the end of the season. They cheered the team while they celebrated the win on the ice and then turned to the crowd, sticks raised in the air, as a final salute to their fans.\n\nCassia and Janis walked back to Janis' car, and Janis peppered Cassia with questions on the drive back to Cassia's neighborhood.\n\n\"I just don't get the rules.\" Janis sighed. \"It's so complicated.\"\n\nCassia laughed. \"You're smart, you can figure it out. With my help.\"\n\nJanis slanted a look at her. \"I suppose there'll be more games in the winter that you'll drag me to?\"\n\n\"Oh yeah.\" Cassia grinned, unable to contain her happiness. She didn't care, and she knew Janis was happy for her, even if she didn't relish the opportunity for more live hockey.\n\n\"Can you drop me off at the diner?\"\n\nJanis nodded as she turned the corner onto the main road. \"Sure. Is Dylan meeting you later?\"\n\n\"Yeah.\"\n\nA few minutes later, Janis parked along the curb out front of the Lone Star Diner. Cassia turned and gave her friend a hug.\n\n\"Thanks for coming tonight. It was fun.\"\n\n\"It was.\" Janis hugged her back. \"What are you doing next weekend?\"\n\n\"No plans so far. Why?\"\n\n\"Well, we decided to get married in Vegas, so you and Dylan should come.\"\n\nFor a second, Cassia thought she'd misheard. \"Did you say married?\"\n\nJanis grinned and nodded. \"I'm taking your advice. I still need a maid of honor, but you won't have to wear a dress.\"\n\n\"Oh my God.\" Cassia leaned close to hug her again. \"I can't believe it.\"\n\n\"Will you come?\"\n\n\"Yes, of course I will!\"\n\nJanis laughed and pushed her off. \"Awesome. I'll text you the details later.\"\n\nTwenty minutes later, she still couldn't believe it. The bell rang and she turned to see Dylan hurrying up to her. He bent to kiss her, and she murmured happy sounds as he did.\n\n\"Hey.\" He released her, his eyes sparkling. \"Did you enjoy the game?\"\n\n\"It was great. You were amazing.\"\n\nDylan grinned as he took his jacket off and slid onto the stool beside her. Sally appeared a second later with coffee and two slices of pie.\n\n\"Aw, did you wait for me?\" Dylan glanced at Cassia's plate as they picked up their forks.\n\n\"Yup.\" She clinked her fork against his. \"Cheers!\"\n\nWith a laugh, he dug in.\n\n\"Mmm. Good old sweet potato pie.\"\n\nDylan glanced over as she scraped the last bite off her plate and licked the fork clean. \"Is it your favorite?\"\n\n\"Hard to pick just one favorite.\" Cassia pushed the plate and fork away and reached for her coffee. \"But it would be up there, for sure.\"\n\nDylan nodded in agreement as he finished his.\n\n\"Oh, I have to tell you what Janis just told me. You won't believe it.\"\n\nDylan whistled in surprise when she finished explaining. \"That's exciting. Next weekend?\"\n\nCassia nodded. \"So you want to go?\"\n\n\"Sure. I don't have any plans.\" He let out a light laugh. \"Not now that the season's done.\"\n\n\"Aw.\" Cassia touched his hand. \"I'm sorry you didn't make it to the playoffs, Dylan. There's always next year.\"\n\nHe nodded. \"Yeah. We'll recover in the off-season and get together a game plan. It'll be great.\"\n\n\"There you go.\"\n\nCassia kept her hand on his and he turned his over to capture her fingers, which he brought to his lips for a sweet kiss.\n\n\"Have you got any other plans for the summer?\"\n\nCassia shook her head. \"No. What did you have in mind?\"\n\nHe shrugged, his ears turning pink and Cassia leaned close to peck his cheek. He turned that sexy crooked smile on her and she melted.",
        "\"I was thinking I'd love for you to meet my family, and see where I grew up.\"\n\nCassia's mind flashed back to that dinner with her friends, when they'd made all the suggestions about camping out and star-gazing in the Alberta countryside. \"I'd love that, Dylan.\"\n\n\"Yeah? Great. I'll check out the flights and we'll see what works best.\"\n\n\"I like it.\" Cassia kissed him. \"I actually had been thinking about making some changes this summer.\"\n\n\"What kind of changes?\" Dylan reached for the sugar and stirred some into his coffee.\n\n\"Work.\"\n\nDylan looked at her, waiting for her to elaborate. Cassia looked down, feeling nervous for some reason. She'd only just started to consider a change in her career, and wasn't sure what he would think.\n\n\"Well, I love what I do, but I've been wondering more and more if I think I'll really be happy being a mechanic for the rest of my life.\"\n\nDylan's brows drew together. \"This isn't anything to do with...\"\n\n\"No.\" Cassia touched his hand and shook her head. \"No, nothing like that. I've just been thinking and wondering, for myself. I can't imagine doing anything but working on cars, but what I really love, what I don't ever get to do, is rebuild cars.\"\n\nDylan's eyes widened. \"Really? That's what you're thinking?\"\n\n\"Yeah.\" Cassia grinned and started to explain. \"A customer brought in this banged up old Pontiac a couple weeks ago and when we told him what needed work, he basically said, fuck it, and how much would we give him for the parts.\"\n\n\"Wow. That bad?\"\n\nShe shrugged. \"To him, maybe, but this car, it's got great bones, Dylan. I started thinking right away about how I could fix this or that, what it would look like with the interior gutted and redone, and the improvements I could make to the engine. I mentioned it to Kyle one night, and he started talking about fabrics and what materials I could use, and how they'd go together.\"\n\n\"Kyle?\" Dylan blinked. \"He's into design?\"\n\n\"Yeah. That's the other thing. He finally told me why he'd left Austin.\" A frown drew her brows together as she recalled her brother's late night confession. \"Apparently the guys on the swim team were giving him a hard time about Tyler and all, so that was a big part of it.\"\n\n\"Idiots.\"\n\n\"Tell me about it.\" Cassia shook her head. \"But he said it was mostly that he didn't want to keep studying architecture and didn't know if he could do what he really wanted there.\"\n\n\"Which was?\"\n\n\"Design. Not clothing necessarily, but interior and all that. Some of his classes dealt with design and he was way more interested in that than the other aspects of architecture.\"\n\n\"So he could help you with interiors, and colors and all.\" Dylan started to nod. \"That's a great idea.\"\n\nCassia pressed against Dylan's side, wanting to hug him forever. He was so incredible, how he knew her thoughts before she even voiced them all. \"Exactly! I'll be the mechanic and he'll be the designer. It'll be fantastic. I already talked to Dad and he was willing to let me use a bay for now, so I wouldn't even have to rent another space.\"\n\n\"That's great, Cassia.\" He bent close and kissed her, his expression excited.\n\n\"Even Tyler is interested.\" Cassia leaned her cheek on Dylan's shoulder, so thrilled to be able to share this with Dylan. Three months ago, she'd have been talking to herself in the mirror. Now, she felt like she had a whole team on her side, for everything.\n\n\"Tyler?\"\n\n\"Yeah, he's finishing up his business degree. So he can totally help with that angle and everything.\"\n\n\"That's awesome. It seems like it's all meant to be.\"\n\nCassia looked up into his eyes. \"Do you think so?\"\n\n\"I really do.\" He kissed her again, lingering a little this time, kicking Cassia's heart rate into high with no effort. \"I think you should do it.\"\n\n\"I think I'm going to.\" She let out a laugh and squeezed his arm and sat back. \"It's terrifying, but exciting all at once.\"\n\n\"I know how you feel. It's how I felt after I was drafted, and before I started playing. Nerve-wracking.\" He turned a grin on her. \"But you'll do great, I know it.\"\n\nShe grinned back. \"I was thinking of brainstorming some more this week, really get into some details, but maybe I'll wait until after Vegas now.\"\n\nDylan nodded. \"Good idea. It's a lot to plan in a week. Plane, hotel. Where do you want to stay?\"\n\n\"I don't know. I've never been. Have you?\"\n\n\"Only once, when I turned twenty-one.\" He pulled his phone out and pulled up a list of hotels. \"There's the Luxor, Paris, the Bellagio...\"\n\nCassia looked over his shoulder. \"I don't really care. It's only for the weekend, and once Janis tells me where they're getting hitched, we'll pick whatever is closest.\"\n\n\"Sounds like a plan.\" Dylan tucked his phone away and gave her a look.\n\n\"What?\"\n\nHis eyes narrowed. \"You're not thinking of doing anything crazy while we're there, are you?\"\n\n\"Crazy?\" She laughed. \"Like what, getting married ourselves?\" At Dylan's shocked look she laughed harder. \"No, Dylan. We're nowhere near ready for that.\"\n\nDylan let out a breath. \"Jesus, I was talking about gambling.\" After another few seconds, he joined in her laughter. Yet another thing she loved about Dylan, that they could joke and laugh about something like that.\n\n\"You know what I should do, is get you to a poker table and be your arm candy one night while you wipe the table with the other players.\"\n\nShe laughed. \"Oh God, I don't know about that. It's one thing to get lucky at a charity casino with toy chips. Vegas is a whole other ball game.\"\n\n\"Ball game?\" Dylan arched his brows, making her laugh again.\n\n\"OK, a whole other hockey game?\" She shook her head along with Dylan. \"Yeah, doesn't roll off the tongue quite the same, does it?\"\n\nHe leaned close, putting his lips close to her ear, which she loved. \"I think we could both figure out better things to do with our tongues anyway.\"\n\nShe nodded and turned her head to kiss him. \"Your place or mine?\"\n\n\"Well, there are a few spots at my place that I've been wanting to test out.\"\n\nCassia laughed and jumped up. \"Let's go!\"\n\n\"God, I do love you, Cassia.\" He dropped a few bills on the counter and stood up.\n\n\"And I know you do.\"\n\nShe turned her face up for his kiss as they exited the diner. She wasn't sure how long they stood on the street corner, making out, or how many times he pulled the truck over so he could kiss her again and again on the way back to his place, but she was sure she loved every one of them."
    ],
    "authorname": "MugsyB",
    "tags": [
        "hockey",
        "hockey player",
        "hockey team",
        "hockey romance",
        "athlete",
        "sports drama",
        "sports romance",
        "romance novella"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/reflections-on-ice-ch-08"
}