{
    "title": "Carnal Knowledge Ch. 15-16",
    "pages": [
        "Author's Note: If you are looking for quick story to tickle your happy parts, this likely is not the one.\n\nDear Readers,\n\nI thank you for your continued support and encouragement for more of the story. If you hadn't kept commenting and emailing me, I probably would have given up.\n\nA few things:\n\n1) There is a reason that this story is in the noncon section. If this is not your thing, maybe a different story would better suit your taste. \n\n2) There's a lot more \"story\" in these two chapters. Some of the stuff with the supporting characters should be edited out no doubt, but it's free, it's mine, so... :)\n\n3) I will eventually get it all written to the end. I estimate there are about 4 chapters after this to finish the story. So no, don't look for an easy resolution just yet.\n\nOnce again, thank you for reading, voting, and commenting!\n\nMuch love,\n\nEmmeline \n\n***********************************\n\nChapter 15\n\nRockdale rode hard for Verity Hall, his mind a jumble of chaotic thoughts. Reason told him to stop for the night and set out again at dawn, for there was no way to make the trip before nightfall.\n\nWorry for his son lodged in his throat like a clump of bitter-tasting thorns. Could Miles Barlow, now Lord Atherton by some twist of fate, somehow be responsible for Nicholas being gone?\n\n\"It cannot be,\" he muttered.\n\nYoung Ned, the messenger from Verity Hall, had said Nicholas had been missing since the morning. He and Atherton had not had their confrontation until the afternoon. And even a miscreant like Miles wouldn't dare to bother one of Rockdale's children.\n\nWould he?\n\nYou should have been there. If you had been at home, then this would not have happened. \n\nThe words of self-reproach circled like vultures in his head. But even as he flayed himself for leaving his children once more, a part of him grieved for the loss of his sweet Eliza.\n\nShe was gone from his life forever. He growled and ruthlessly tried to shove the unwelcome feelings down, but emotion bubbled up from somewhere in his chest. It felt as though part of his heart had been brutally ripped away, leaving a bruised and bloody remnant.\n\n\"Damn it, damn it, damn it!\" The words burst from his mouth into the evening air. His horse flicked its ears.\n\nSo much loss in his life, so much pain. The clouds opened up above his head and rain began to fall, slow at first, then harder.\n\nWilliam grimly took little notice. Of course, it would be raining. He expected nothing less from fate. Perhaps it was exactly what he deserved to atone for his many sins.\n\nA ragged sob tried to force its way out of his mouth. \"Please, Lord, I know that I am not a righteous man, but please, I beg of you, let my son be safe from harm.\"\n\n***\n\nEliza stood before the window in the upstairs bedroom of Rockdale's townhouse. The shadows lengthened as twilight began to settle over the landscape.\n\n\"Sweet Nicholas,\" she whispered. \"What has happened to you?\"\n\nThough she had only been with the earl's children for a matter of months, the thought of harm coming to either one of them filled her with anxious worry. Though mischievous at times, Nicholas was at heart a sweet child, intelligent and loving. She couldn't imagine that he would run away. A lump settled hard in her chest as she pictured him out somewhere lost on the estate, afraid and alone.\n\nI should be there.  The thought kept repeating in her head like a litany.\n\nNo, she told herself firmly. You do not belong there.\n\nBlast it! She had fought so mightily to be free of Rockdale and his control, but at this moment she would have given almost anything to have his large comforting presence by her side. Eliza could not forget the stricken look on his face when they had been told Nicholas could not be found at Verity Hall.\n\nReleasing her hold on the curtain, she began to pace about fretfully. Of course, she must return home to her family in Lancashire. Any other option was madness.\n\nBut how would news of Nicholas reach her? She wouldn't know what had happened. It could be something as simple as the young boy had only fallen asleep somewhere on the grounds, or perhaps he had hidden away with his wooden soldiers under a bed.\n\nYou could write a letter, she reasoned.\n\nA bloody letter!\n\nShe threw up her hands in disgust and paced faster. A letter would take an age to be delivered, and then another must be written and returned to her. For all she knew, no one at Verity Hall would even take the time to pen a note to one such as her.\n\nA tap at the door caused her to whirl so abruptly, Eliza almost lost her footing.\n\nMrs. Crawley's head popped through the cracked doorway.\n\n\"I've got some nice stew for your supper, dearie. Will you come downstairs to dine?\"\n\nEliza attempted a wan smile. \"I'm sorry, Mrs. Crawley. My appetite seems to have deserted me.\"\n\n\"Nonsense,\" Mrs. Crawley pronounced, pushing the door open further. \"I had a feeling you were going to spout such nonsense, so I went ahead and made you a tray.\"\n\nSeeing Eliza wavering, she frowned and pointed at the small table and chair in the corner. \"Sit.\"\n\nEliza hesitated, but not wishing to be difficult, she finally nodded and sat.\n\nDespite her protestations, her mouth began to water as the steam from the bowl of stew Mrs. Crawley placed before her wafted before her nose.\n\n\"Here's some buttered bread and jam and some nice cheese as well,\" Mrs. Crawley said, arranging the items along with a mug of milk on the little table.\n\nA gust of laughter escaped from Eliza. \"Good heavens, this is enough for two people. Thank you, Mrs. Crawley.\"\n\nThe older lady stood over her. \"Well,\" she said. \"It is meant to be.\"\n\nEliza spooned up the stew, closing her eyes as the delicious broth rolled over her tongue. Her eyes flicked back open as she swallowed, peering up. \"Oh, are you sharing with me?\"\n\nMrs. Crawley clucked and folded her arms. \"Keep eating.\"\n\nEliza obediently spooned up another mouthful.\n\n\"I'm referring to the wee babe growing inside you, of course.\"\n\nEliza choked and dropped the spoon. Eyes tearing, she fumbled for her milk. Talking a long drink, she set the cup back down carefully and cleared her throat. \"I beg your pardon?\"\n\nMrs. Crawley sighed, but her eyes were kind as they regarded her steadily. \"Eliza, I know that I am only Lord Rockdale's housekeeper. But you are young, and your mother is not nearby. I cannot help but feel that you and I should have a talk, if you will allow it.\"\n\nEliza felt her eyes burn with sudden tears and her lips wobbled. She nodded jerkily.\n\nThe other woman smiled gently and perched on the side of the big bed nearby. \"This is a small household, and I couldn't help but notice you've dashed out of the dining room three times this past week when I served Lord Rockdale his morning kippers. You've hardly eaten a thing for breakfast all week, and then you've been ravenous the rest of the day.\"\n\nMrs. Crawley folded her hands primly. \"I can hardly think this should come as a shock to you? When was the last time you had your monthly courses?\"\n\nEmbarrassment, hot and fiery, crept up Eliza's face and neck. Oh, dear heavens. If only she could jump into the bed and pull the covers up over her head and hide. \"They didn't come when they were supposed to,\" she whispered. \"But I just thought...\"\n\nEliza cleared her throat and found herself unable to meet the housekeeper's gaze. \"His lordship...he said...he said he didn't think that w-w-would happen,\" she stammered lamely.\n\nA rude sound erupted from Mrs. Crawley. \"Men! Pah! They think with their wiggly bits and naught of the consequences.\"\n\nEliza's heart began to thud. Dear God, a child? \"Oh, Mrs. Crawley,\" she said miserably. \"What you must think of me?\"\n\n\"Eat, dearie,\" Mrs. Crawley urged until Eliza picked up her spoon once more. \"To be quite clear, I think you are a sweet, young lady with a kind, loving spirit.\"\n\n\"Lady?\" Eliza curled her lip with disdain and reached for a piece of bread. \"I'm naught but Rockdale's whore, I'm afraid.\" She sniffed as a tear rolled down her cheek.\n\n\"Oh, for goodness sake. You are not a whore! I ought to know, seeing that I was one myself.\"\n\nEliza froze mid-chew and swiveled her head around.\n\nMrs. Crawley airily waved a hand. \"I wasn't always old and wrinkled you know.\" She winked then sobered. \"Not pleasant business having to spread your legs over and over for a bit of coin in a bawdy house. That's what a whore does,\" she advised baldly.\n\nEliza managed to finally swallow her lump of bread and blinked at the blunt words.\n\n\"Shocked you, haven't I?\" Mrs. Crawley huffed lightly in amusement. \"I was desperate and young at that time in my life. My parents had taken sick and died, so I set out for London to make a new life for myself.\" She shook herself as though casting off bad memories. \"Dumb as a sack of rocks.\"\n\nClearing her throat, Eliza managed to ask, \"So how did you end up...in a place like that?\"\n\n\"Well,\" she replied. \"I was in a pub attempting, rather unsuccessfully, to convince the barkeep to hire me on as a serving girl. I was approached by a smartly dressed older lady who offered me the first kind word I'd heard since arriving in London. She bought me a pint and a bowl of broth and then listened quite sympathetically to my tale of woe. She even offered me a job, though it turns out her idea of a new upstairs girl was quite different than mine. Though... working there did allow me to meet Mr. Crawley,\" she allowed.\n\nSeeing Eliza's widened eyes, she hastened to add, \"He wasn't a patron, mind you! Least not he's ever told me.\" She chuckled. \"He was a footman for the old Earl of Rockdale. Now, that was a mean, rotten bastard if there ever was one!\"\n\nMrs. Crawley shook her head. \"The old codger was a regular visitor to the bawdy house, but I only had to bed him the one time, thank God.\" She shuddered. \"He found one of the other girls more to his liking. I think she enjoyed all the caning and whipping before he finally got his cock stiff, but I despised it. Almost screamed the roof off when he came after me with that cane, I did.\"\n\nWhen Mrs. Crawley pointed at the bowl, Eliza forced her jaw closed and resumed eating while listening.\n\n\"Oh, Mr. Crawley was so handsome in that smart blue and gold livery,\" she continued dreamily, looking off across the room. \"Caught me bathing in the kitchen one night, naked as the day I was born.\" she giggled, sounding more like a young girl. \"You'd have thought the poor man had never laid eyes on a woman's bare bosom before. Not a month later he took me away from that dreadful place and made me his wife. Never again did I have to worry about being hungry or hurt. He vowed to always keep me safe, and he has.\"\n\nHer misty eyes and contented smile made Eliza's heart ache. Wouldn't it be wonderful to be loved like that and love in return? To have a husband to lean on and support her... \n\n\"Look how I've prattled on and on,\" Mrs. Crawley said. \"I can tell Lord Rockdale cares for you, Eliza. You should tell him about the little one. He will take care of you both, I feel certain,\" she assured.\n\n\"I don't know what to do,\" Eliza murmured wretchedly, running a hand over her stomach. The food she had just eaten felt unsettled.\n\n\"Nothing has to be decided right this moment,\" Mrs. Crawley said. \"Let me help you into bed. A good night's sleep will clear your head. Good for the wee babe, too.\"\n\nA baby, dear Lord!\n\nEliza lurched to her feet. \"Pray excuse me, Mrs. Crawley,\" she said faintly. \"I believe I am going to be sick.\"\n\n***\n\nAtherton stared with glum intent down into the dregs of his snifter of brandy. Despite being welcomed into Sinclair's latest debauched gathering, he had little interest in the lewd goings-on around him.\n\nHe glanced up as the sofa protested with a squawk as a sizable presence sank down beside him.\n\n\"I say, Atherton, you're not even paying attention to the floor show. I'm surprised you don't have a ladybird under each arm.\" Sir Harold Cavendish winked at him lasciviously.\n\n\"I don't have the funds for whores these days. I'm lucky that Sinclair allows me to drink for free.\" Miles hunched his shoulders and took a sip of his drink, wishing the other man would find someone else to pester. Harry had never been a particular favorite of his. The older man had usually been more interested in hanging after Rockdale.\n\nAtherton grimaced at the thought of his former friend. \"Rockdale isn't with you tonight, is he?\"\n\nHarry scowled darkly. \"No, I haven't seen that ungrateful bastard lately.\"\n\n\"Why ungrateful\u2014\" Miles attempted to ask until a sharp female cry stole his attention. \n\nSinclair had his mistress Violet kneeling over a small wooden stool with her hands bound behind her back. Their host's usual self-satisfied smirk was missing, Miles noted, and instead the man wore a fierce glower of displeasure as he swung a wooden paddle in hard, repeated strikes against Violet's bare and cherry red, raised rump.\n\n\"Damn,\" Harry muttered, staring avidly while Sinclair continued to rain blows to over the girl's quivering cheeks.\n\nViolet cried out again, and Sinclair paused only long enough to gesture at one of his watching male servants. \n\n\"Gag her,\" he ordered tersely. \"And hand me my leather strap.\"\n\nViolet's answering wail was muffled as the servant stuffed a cloth in her mouth.\n\nAtherton let his gaze skitter away uncomfortably. Seeing a woman being brutalized had never been arousing for him.\n\n\"I heard Sinclair caught her fucking some young artist fellow. He was livid,\" Harry volunteered gleefully. \n\n\"Why? He lets other gents have her in his gatherings all the time.\"\n\nHarry snorted. \"But only with his permission, boy. Oh, bloody hell, he's whipping her right on the quim now!\"\n\n\"Ahem,\" Atherton said. \"Cavendish...you must tell me. Why is Rockdale an ungrateful bastard?\"\n\nHis question finally severed Harry's rapt attention to Sinclair's display.\n\n\"I provided him with an incredibly generous gift, and he allowed it to attack me!\" the other man explained indignantly. \"Can you fathom such a thing? I thought Rockdale and I were great chums!\"\n\nMiles scratched his head. \"You gave him a...dog? An ill-tempered goat?\"\n\n\"Ye gods, Atherton, are you daft? I gave him a woman! Well, I didn't give her to him exactly, but I provided the means to have her delivered right into his lap. Bloody charitable of me, too,\" he muttered. \"I was helping the girl provide for her family and repaying a debt to Rockdale at the same time.\"\n\n\"So, you arranged for a whore to be sent to Rockdale, but she viciously turned on you?\"\n\n\"Not a whore, a virgin,\" Harry said, nodding sagely. \n\nMiles opened his mouth to reply but drained the rest of his brandy instead. He set the glass down on a table. \"That does sound like quite the gift.\" He furrowed his brow, thinking. \"Is the girl you sent him a lovely blond with rather large...\"\n\n\"Tits?\" Harry supplied helpfully. \"Aye, that's her. An uncut jewel, she was! Too buxom for my taste, though.\" He wagged his eyebrows.\n\nMiles tried to ease further down the couch. Harry really was a rather revolting chap. Revolting, but he did have healthy funds, Miles reflected. And if he was sufficiently annoyed at Rockdale...\n\n\"I saw Rockdale enjoying the girl you sent him at his little house in London. It's a shame he wasn't more appreciative toward you for such a boon. Chits like her don't come along every day.\"\n\nHarry's eyes had drifted back to the center of the room where Sinclair had progressed to aggressively fucking Violet from behind, his hips ramming her bottom with an audible, repeated slap of flesh. \"Tis true,\" he grumbled. \"Thankless wretch. He could have at least insisted she pleasure me with her mouth. It would have been only fair!\"\n\nMiles grimaced, trying not to picture any part of Harry's naked anatomy in his mind. \"Ah, right you are. I say, Harry... Wouldn't you love the chance to knock that selfish arse down a peg or two?\"\n\nHarry shifted his glance back to Miles speculatively. \"Eager for a bit of revenge, are you? I heard things aren't going so well for you about town. Shame about losing Pelham's daughter off your hook. She's a tasty, young morsel with a well-padded dowry to boot.\"\n\n\"I have other prospects,\" Atherton returned curtly. \"But, retribution...yes. I am quite ready to show that arrogant son of a bitch he's not as untouchable as he might think.\"\n\nHarry's reply was forestalled by a commotion before them. Violet had somehow freed her hands and was struggling against Sinclair. The stool flipped over with a crash, and she scrabbled to her feet, jerking the cloth out of her mouth.\n\nSinclair advanced on her with a growled command. \"Get back on your knees.\"\n\n\"No,\" she said defiantly, standing her ground before him, though he towered over her smaller, naked body. \"I have had enough of being your pretty toy to whip and use!\"\n\nHis face twisted into an ugly sneer. \"Why do you think I allow you to live here? You know your place, Violet, so stop this nonsense at once. You had better have my cock stuffed in your hungry little mouth in the next thirty seconds, or I vow you will soon regret it.\"\n\nHe reached out to grab her arm, and she danced out of his reach.\n\n\"Regret is all I feel anymore,\" she snapped. \"You don't care what I like or what I want; you only want to parade me about in front of your perverted friends. I have had enough of being hurt.\" Her voice wavered on the last bit then gathered strength. \"Giovanni is right! I deserve to be loved and happy!\"\n\n\"Giovanni? That painter lad?\" Sinclair's mocking laughter rang out across the room. \"Do you think he really wants more from you than another chance to stick his cock in your cunt? Surely, even you are not that stupid.\"\n\nViolet's pale skin suffused with a flush of rosy pink, and with narrowed eyes she leaned over and very deliberately spat on Sinclair's shoes.\n\nThe murmuring crowd went still and silent, a few brave souls inching closer and jockeying for position.\n\nLord Sinclair's mouth contorted, and he gestured grandly at the enthralled throng circling them. \"I'm reminded suddenly why one should not acquire a whore from pig farmers, even sluts with tight, little arses.\" He sighed dramatically. \"They just don't have any couth about them no matter how you try and try to instill it.\"\n\nHis eyes glittered with malice as he shrugged. \"So be it, then. Go and be a poor man's whore instead of mine if that is what you wish. But don't bother taking anything with you.\" His eyes raked her nakedness with leering disdain. \"I'd say not even the clothing on your back...if you were wearing any.\"\n\nA few titters of uncertain laughter broke out from the guests.\n\nTo Miles' surprise, Violet simply smiled. One by one she peeled off the sparkling rings from her fingers and dropped them on the floor. The gold chains around her neck and waist followed.\n\n\"My father might have been a farmer of swine,\" she said sweetly. \"But you, Egbert, are a pig.\" She blew him a kiss before turning away, laughing. \"Oink, oink, darling.\"\n\nMiles and Harry froze. No one ever dared to call Sinclair his given name out loud.\n\n\"Get out!\" Sinclair roared. \"Get out all of you!\" He grabbed a decanter of liquor from a nearby table and threw it against the wall where it shattered, causing those nearby to jump away and squeal in dismay.\n\n\"Get out, get out!\" he shouted, shoving over a table with a loud crash.\n\nMiles and Harry jumped up to join the panicked crowd struggling to escape Sinclair's wrath. Both men were panting when they finally squeezed out the front doors of the manor house.\n\n\"'Twas like a night at the theater!\" Harry declared, mopping at his brow with a handkerchief. \"Excepting the fucking and the nakedness, of course.\" He frowned. \"I hope this doesn't mean Sinclair will cease holding his regular gatherings. Whatever will we do for entertainment?\"",
        "\"I have an idea,\" Miles said. \"What do you say we plan a little excitement for Rockdale?\"\n\n\"How much is it going to cost me?\" Harry asked suspiciously.\n\nMiles patted him on the shoulder. \"Trust me; it will be worth every penny.\"\n\n***\n\nThe servants of Verity Hall huddled miserably around the scarred kitchen table. The cook shuffled the room, almost absently filling steaming teacups before settling heavily into a chair.\n\n\"Heads will roll for this,\" Cook muttered.\n\nThe others shifted uncomfortably. Simpson, seated at the head of the table, stirred his cup with a continuous clinking without ever taking a sip.\n\n\"His lordship was like a man possessed,\" the maid named Sally offered timidly.\n\nAnd indeed he had been, John Willoughby reflected, sipping his own tea. Lord Rockdale had arrived home well after dark, soaked to the skin. The earl had insisted upon organizing new groups to search the grounds despite the cold, insistent rain.\n\nJohn, along with all the other able men of the estate, had mucked over the surrounding area in miserable conditions for well over two hours in the darkness. None had searched harder or called louder than his lordship. The earl's voice had been almost gone by the time he finally paused the search for the night after Willie, one of the stable lads, had likely broken his ankle on the loose rocks around the pond.\n\nIt had pierced John's heart to see the earl standing at the water's edge, looking out into the mist settling over its depth, knowing Rockdale was wondering if his son could possibly have fallen in and drowned. \n\nEven though John had discovered his employer was not the man he had once thought, and worse, it seemed he was a lecher who preyed on innocent girls in his household, still no father deserved to go through an ordeal like this night.\n\nThinking of the governess, his hands clenched. It continued to plague him, the thought of poor, frightened Eliza Lockhart being forced to surrender her maidenhood to such a rake. Did the earl continue to rape her, he wondered bleakly. How could John stand by and let such a horrible act continue?\n\n\"Let us go and and find our beds,\" Simpson said at last. \"I'm sure the young lad will be found perfectly hale in the morning and likely sorry to have given all of us such a scare.\"\n\nTo John's ears, it sounded like the butler was trying to convince himself of his own words. The house itself had been searched and re-searched. It seemed the young boy had simply vanished... Or else been taken off the estate.\n\nJohn winced, remembering how Rockdale had gone almost purely white in the face when Simpson had explained about George's mysterious escape from the stables.\n\nCould George have taken young Nicholas for revenge? John shook his head at the mere thought of such an evil thing. His eye flickered over Mrs. Biddleton, sitting in the corner apart from the others and uncharacteristically quiet.\n\nHe had heard it whispered from the other servants that she had been the one to set the fire and free George from the stables. John wondered if perhaps they were jumping to conclusions simply because she was George's aunt. Surely, the housekeeper wouldn't risk her position to go expressly against the lord's wishes.\n\nJohn let his tired mind wander again to Eliza. He felt a bit of surprise that she hadn't returned the same time as the earl. Mayhap this meant she and Rockdale had not been together during the time they had both been away from the estate. He sighed to himself, knowing it was likely folly to hope the young woman might ever be interested in him.\n\nA loud banging, seeming to come from the vicinity of the front doors, startled them all.\n\n\"Good heavens,\" Simpson said, lurching out of his chair. \"Is that someone knocking at this hour?\"\n\n\"Perhaps it's news of the young lord,\" John said, springing to his feet to follow the butler as he hurried out of the kitchen.\n\nThey were met by a damp and muddy Lord Rockdale quickly descending the main staircase. The butler flung the door open and was nearly bowled over by a flurry of sodden skirts. The young female shoved a limp mass of curls off her cheek and glared around at the small assembly until her gaze rested upon Rockdale.\n\nJohn realized with a jolt of shock that the female was Caroline Stanley, his lordship's cousin, and Lord and Lady Pelham's daughter.\n\nMiss Stanley flung off her dripping bonnet in a dramatic flourish that caught Simpson across the chest. The girl pointed a finger at Rockdale.\n\n\"I hope you are pleased because you have ruined my life!\"\n\nHer accusation rang out loudly in the entry hall, and she promptly burst into noisy tears.\n\nJohn was certain he had never seen Lord Rockdale look quite so poleaxed.\n\n\"Caroline!\" The earl finally roared. \"Stop that bawling this instant!\" He threw up his hands. \"What in bloody blazes are you doing standing in my foyer in the middle of the night?\"\n\nShe paused mid-sob, seeming shocked at his reaction.\n\n\"William!\" she gasped. \"Did you just curse at me?\"\n\nHis expression dark, Rockdale advanced on her, and John saw she had the good sense to back away. \"Yes,\" he said. \"And I may throttle you soon if you do not have a proper explanation as to why you are here. I hope you told your coachmen to wait outside because you are going right back to London! Where is your mother or your chaperone for God's sake?\"\n\n\"Stop yelling at me!\" she returned shrilly. \"You are not my father! You cannot tell me what to do!\"\n\n\"Yes, I bloody well can, you little idiot!\" Rockdale visibly tried to rein in his temper. \"You have no idea has happened here tonight. I have no time for your petty and frivolous concerns.\"\n\nShe spluttered indignation. \"My petty concerns! How dare you! I sent my coachman to the stables because I have no intention of leaving until you agree to fix what you have done!\"\n\n\"And, what, pray tell, have I done?\"\n\n\"Your meddling has turned Papa against Lord Atherton! My father refused to allow me to receive his calls, and earlier today I saw Atherton riding in the park with Lydia Pratt! She will be his viscountess now, and it should have been me!\" she wailed. \"I was supposed to be Lady Atherton!\"\n\nLighting fast, her hand darted out and cracked across Rockdale's face in a sudden slap.\n\nCaroline drew her hand back to her mouth, and John tensed as silence fell over the room for a couple moments.\n\n\"You silly twit. My son is missing.\" Rockdale's soft words dropped like rocks into the quiet room. \"I will not be forced to deal with you tonight. If you really think I have ruined your life by saving you from being shackled to a penniless, worthless piece of filth like Miles Barlow, you probably deserve to actually be with him.\" \n\nHe pointed at John. \"Much to my dismay, it is too late to send her back to London tonight. See to her.\"\n\nJohn frowned in surprise but clamped down on the protest that wanted to rip from his lips.\n\n\"But what about Lydia Pratt,\" Caroline whined. \"Will you let Atherton marry her?\"\n\nRockdale snorted. \"From what I've seen, I think they probably will make a fitting pair. Besides, he'll likely run through her small dowry in a fortnight. Good night, Caroline.\"\n\nThe earl turned and made his way back upstairs without another word.\n\nJohn turned to the softly weeping Miss Stanley and sighed inwardly.\n\nAt his gesture, a maid came forward to escort the young lady upstairs while he turned to go back outside to fetch her belongings. He discovered from the lone, young coachman that there weren't any to be found.\n\nThe impulsive girl had dashed away from her home, presumably without permission, without a maid or chaperone, and without even a stitch of extra clothing. He shook his head at such careless behavior. Her parents were going to be furious. Such thoughtless actions could compromise the young lady's reputation.\n\nUpon cursory inspection, he did spy a small drawstring bag inside the carriage and trudged back to the house with it in hand. For what felt like the thousandth time that evening, he struggled out of his wet greatcoat and hat. He wasn't normally a drinking gentleman, but John swore if he managed to make it back to his father's house in the village, he would break out their dusty bottle of Irish whisky to knock off the chill that had sank into his very bones.\n\nUnable to locate a maid, John ran a hand over his face in resignation and climbed the stairs, hoping to deliver Miss Stanley's purse and ascertain whether she was settled in for the night. Then, perhaps he could leave the estate and seek his own bed.\n\nHis gentle knock was answered by an equally weary maid. \n\n\"Can you give this purse to Miss Stanley?\" John inquired. \"Does she have everything she requires for the night?\"\n\nThe maid was forestalled from answering when Miss Stanley pulled the door open wide.\n\nThe earl's cousin was swathed neck to feet in an overlong ivory dressing gown, presumably borrowed from somewhere in the household. She looked very young with her pale curls cascading down and her face appearing freshly scrubbed.\n\nJohn immediately was discomfited by her dishabille and lowered his gaze to the floor. \"Excuse my intrusion, miss. I fetched your purse from the carriage and thought you might like to have it.\"\n\n\"Mr. Willoughby, please won't you come in a moment? I realize in my haste to confront my cousin I did not get to ask what has happened to Nicholas.\"\n\nReluctantly John let his eyes be drawn back to Miss Stanley's face. \"I cannot come into your room. 'Twould not be at all proper,\" he replied stiffly.\n\nCaroline huffed impatiently. \"Oh, for heaven's sake. I am completely covered and the maid is here. I refuse to address you through a doorway.\" She turned and walked to the fireplace, holding her hands out to the crackling flames.\n\nJohn's eyes narrowed at her haughty attitude but against his better judgment stepped inside the room. The lithe shape of her body was silhouetted through the thin material of her dressing gown as she stood near the fire, but he once again averted his eyes.\n\nCaroline plopped down into one of the chairs near the fire and gestured for him to do the same. \"Why is my young cousin missing? No one will tell me anything helpful.\" She glared over at the maid who hovered near the door as though longing to make an escape.\n\n\"In truth, there is not much to tell,\" John explained and went on to detail what they knew about young Lord Langley's disappearance.\n\n\"Poor thing,\" she whispered. \"I feel quite dreadful now for how I spoke to Cousin William earlier. I had no idea what had happened.\" \n\nCaroline waved an imperious hand toward the maid. \"Leave us,\" she ordered.\n\nJohn's eyes widened in alarm. \"Don't g\u2014\" He broke off as the door clicked shut behind the maid.\n\n\"You must think me quite the featherbrain to come here like this.\" She pinned him with a hard look as though daring him to answer.\n\nJohn tilted his head and smoothed the fabric of his trousers over his thighs before answering. \"I think you have acted impetuously, and one can only hope your actions will not negatively affect your reputation.\"\n\n\"Pish,\" she said, sniffing. \"I'm sick to death of my parents swaddling me so tightly I cannot breathe! Always making every decision for me. Never allowing me to feel in control of my own life! I want to experience things!\" She leaned forward. \"Don't you see? If I were a viscountess I could be someone of significance instead of merely Lord Pelham's daughter.\"\n\n\"Ah, but Miss Stanley, a title doesn't give you any guarantee of happiness. It merely places you under the authority of your husband. That is why Lord Rockdale is concerned that you would make a good match. Not just for the title, but someone who will treat you well.\"\n\n\"But shouldn't I be the one to decide?\" she demanded.\n\n\"You are yet young and innocent...\"\n\n\"That's because no one will allow me do anything!\"\n\n\"Gently bred young ladies need to be protected,\" he began.\n\n\"Lydia Pratt has been kissed, several times!\" She glared at him as though he were personally responsible for debauching the absent lady. \"She once let Jonathan Quimby take down her bodice and kiss her naked breasts! Who knows what else she has done! Perhaps this is why Atherton is pursuing her.\" She sniffed. \"I don't know anything useful. I've never even been kissed,\" she finished sadly.\n\nStunned and embarrassed to be slightly aroused by the young lady's unexpected graphic outburst, John shifted back into his chair. \"Your husband should be the one to introduce you to...to...ahem...that is to say; you should wait until you are married to be concerned with such matters.\" He winced inwardly, realizing how pompous he sounded even to his own ears. \"I should go. It's not--\"\n\nCaroline blew out a loud sigh. \"Not proper, yes, I know. Tell me, Mr. Willoughby, are you always such a stick in the mud?\"\n\nHe stiffened in disapproval before relaxing somewhat. \"Yes, I suppose I am.\"\n\nA smile lightened up her face as she giggled. \"Well, at least you are honest, sir.\"\n\n\"I would better describe myself as striving to be a true gentleman.\"\n\nShe scooted forward in her chair. \"Tell me, then, do true gentlemen ever do naughty things?\"\n\n\"If we do, we do not discuss such matters with young ladies,\" he returned coolly and moved to stand.\n\nShe stood as well, moving entirely too close for his comfort.\n\n\"Mr. Willoughby, I am so tired of my ignorance regarding men. My parents will never let me be alone with one not related to me, and I... I mean, who knows when I would have another chance at this... You and I are quite comfortable together, are we not?\"\n\n\"I beg your pardon?\" John blustered. \"We are barely acquainted!\"\n\nShe waved a hand in dismissal. \"I have already decided. You should kiss me now while I have a rare moment alone.\" She lifted her chin and closed her eyes. \"Well, please proceed.\"\n\nAghast, he backed away and frowned down at her. \"Miss Stanley, though I am not of your social standing that fact does not mean I am a man with whom you can trifle. I find your actions tonight unseemly to a shameful degree, and I will endeavor to strike this entire interlude from my memory since you are obviously overwrought.\"\n\n\"But, Mr. Willoughby... John, it is because you are so clearly a gentleman that I have decided it should be you.\" She dimpled and approached him once more, laying a hand on his sleeve that seemed to burn his skin clear through the fabric. \"I know you will not attempt to take advantage of me. All I want is one simple kiss. Nothing more.\" Her eyes lowered. \"Unless you find me me ugly and repulsive.\"\n\nAnger, unexpected and hot, bloomed into sudden life in his chest.  Really.  How dare she? The presumptuous little baggage apparently thought he was some sort of puppet she could command at will.\n\n\"You do not know me, and you are beyond foolish to take such liberties with your innocence,\" he grated out. \n\nShe bit her lip and looked down for a moment before slowly meeting his angry gaze, a single tear snared in her eyelashes. It slid slowly down her cheek. \n\nDear God, she was a manipulative little thing! Did she really think being the daughter of a lord gave her the power to order him to do anything?\n\n\"I know it's a bit mad to ask, I know it is! But...\" Her tongue darted out to lick her lips, and a light blush swept into her cheeks. \"Please, John.\" \n\n\"We are not intimate enough acquaintances for you to address me by my first name,\" he said brusquely. Seemingly of its own volition, his hand raised and hovered over the side of her face, almost but not quite touching her skin. His thumb lightly brushed the damp trail.\n\nShe shifted infinitesimally closer. \"I give you leave to call me Caroline.\" A smile ghosted over her lips. \"Does that make us intimate enough for you to allow me this one small indulgence?\"\n\n\"No, it doesn't.\" His fingers traced over the smooth line of her jaw. Her eyes drifted closed, and she swallowed hard.\n\n\"What...what would convince you we were...intimate enough?\" she asked, her voice barely audible.\n\nThe thinking part of his brain that had so valiantly been commanding him to escape at once from this preposterous, yet so dangerous, situation faded into dull clamor when she opened languorous, deep-green eyes and laid her fingertips tentatively on the lapel of his jacket.\n\n\"Nothing,\" he answered before bending his head and allowing his fingers to spread over her jaw. \"We are too far apart in station to be...intimate...in any fashion,\" he whispered against her mouth.\n\nJohn cursed himself for a fool of the worst sort and blamed his exhausted state as he closed the final distance and covered her lips with his own. Intending a gentle exploration, he leisurely slid his mouth over hers, learning the texture and plumpness of her lush mouth. \n\nShe sighed, a very female noise that went straight to his groin, and he tasted her breath, sweet and somehow so delicious. Her mouth moved against his, soft and innocent, returning his kiss.\n\nHe felt her sway slightly and John, fully meaning to break their embrace and step back, instead slid an arm around her waist to steady her, splaying his palm over her back, urging her closer.\n\n\"Open your mouth,\" he muttered, his hand sliding from her jaw into her hair. He felt her shiver as she complied. His tongue pushed past her parted lips to delve inside, sampling the heady taste of her mouth.\n\nJohn swallowed her low moan and tumbled into a heady swirl of sensation. His cock pulsed eagerly when her tongue tentatively touched his. He pulled her flush against him, breast to groin, devouring her open mouth as her arms snaked slowly around his neck.\n\nDamn him, she was so responsive. Male instinct flickered to life inside him like an open flame igniting in his gut, and he groaned in near despair.\n\nCaroline shifted in his embrace and sucked in a quick breath when the hand exploring the length of her back moved lower to mold over her little round arse.\n\n\"Shh,\" he crooned, directing her a couple steps backward, trapping her between his body and the paneled wall of the bedroom. \"I've got you, sweetheart.\"\n\nHer brow furrowed and her mouth opened as though to speak, but he swallowed her comment by once again plunging his tongue between her lips.\n\nJohn loosened the grip of his other hand on her hair and deliberately drifted down her chest to trace the firm mound of her breast. She gasped against his mouth when he jerked at the tied sash of her gown, loosening the fabric until he could impatiently push it aside. The ribbon sash slithered free, and the material gaped open, offering him tempting glimpses of her nakedness beneath.\n\nOh, Christ.  He released her mouth to run his hot gaze over the front of her exposed body. She was so beautiful, finely formed and unblemished. Her shape was delicate but unmistakably female with small, high breasts. Her skin flowed like poured cream and felt invitingly warm to his touch. He could feel the blood pounding a savage beat in his ears.\n\nHis hand had only just closed around one deliciously naked breast when she squeaked indignantly and jerked out of his embrace.\n\n\"Mr. Willoughby! You were supposed to give me one kiss!\" she hissed, breathing heavily, snatching up the sides of her gown and closing it tight.\n\nJohn paused a moment to compose his thoughts and the almost overwhelming urge to rip that damn gown completely off her. He smiled tightly. \"Have you now revoked the intimate degree of our acquaintance, Caroline?\"\n\n\"I only asked for a kiss,\" she whispered.\n\n\"Indeed. Are you sure that's all you need from me tonight?\"\n\n\"Of course, it is!\" she snapped, red tinting her cheeks as her gaze skirted away from him.\n\n\"There are other ways of kissing I could show you if you really wanted to... expand your knowledge,\" he said, with a hint of a challenge.\n\nEyes wide, she shook her head.\n\nJohn was abruptly ashamed of himself. He gathered what remained of his wits and lifted a brow while doing his best to appear unaffected. \"Let this be a lesson to you,\" he said severely. \"I would advise you in the future to be cautious in what liberties you invite with your person. Men will always take more than you are prepared to offer. Even... a gentleman.\"",
        "Her chest heaved, and his unruly cock throbbed at the sight of her hardened nipples poking against her dressing gown. A groan welled up when she licked over her mouth as though seeking another taste of him.\n\nShe lifted a hand to trace over her swollen lips. \"Is...is it always like that...John?\" she whispered.\n\n\"No,\" he answered shortly. He turned away and left quickly before he could do anything else to make a complete arse of himself. Bloody hell, was he no better than the earl?\n\n***\n\nRockdale restlessly prowled the halls and rooms of Verity Hall, hoping, praying, to somehow discover some clue of his son's whereabouts. He found himself outside the nursery, and after hesitating a moment, pushed the door open and stepped inside.\n\nNanny Goodson sat in her rocking chair by the low-burning fire, head bowed in sleep. He sighed, remembering the tears that had streaked down her face earlier when he had berated her strongly for his son's disappearance.\n\nHe rubbed at his face with a tired hand. Perhaps he shouldn't have been quite so vehement in his accusal. No one was ultimately more to blame than himself.\n\nMoving quietly, Rockdale continued inside until he reached his son's bedroom. He stood over Nicholas' empty bed, wanting to scream or punch the walls. Dear God! How could this have happened?\n\nHe stalked out of the room and into his daughter's, where his heart eased just a bit to see her huddled under the covers. She had been unusually silent and reserved earlier when he had questioned her and the nursery staff. \n\nDamn it. Why was it so hard for him to know what to say?\n\nHe ghosted a hand over her hair and turned away in frustration. He felt so bloody helpless!\n\nBeyond weary in both body and spirit, he moved to the window and stared out into the darkness. After what could have been five minutes or an hour, he sank down in a dark corner of the room, the floor cold and hard underneath him. He was still damp and dirty from his search of the grounds, but the discomfort barely penetrated his haze of misery.\n\nAt dawn he would send someone to the village to gather the men there, Rockdale decided. They could join the Verity Hall staff for a massive search of the estate, turning over every stone if necessary. Nicholas would be found. No other result was possible.\n\nSleep claimed him in restless, fitful dozes. Rockdale at first thought himself to be dreaming when his daughter stirred and climbed out of bed. \n\nAnna hunkered down and reached under her bed, and Rockdale started to call out to her. He didn't wish to startle her but neither did he want to witness his daughter using the chamber pot.\n\nPausing, he cocked his head in puzzlement when she pulled out a small basket. Peering hard in the dim light, he saw her open a drawer in the bedside table and took out what appeared to be an apple, a hunk of...bread, and, good Lord, was that a chicken leg?\n\nBaffled, he frowned, wondering if the servants were ensuring his children had enough to eat. Was Anna forced to hide food under her bed?\n\nHis daughter then shoved her bare feet into slippers and peered around the corner to the outer room where Nanny Goodson and a nursery maid presumably slumbered on. \n\nHis mouth fell agape when Anna proceeded to tiptoe out of her bedroom, basket in hand. He staggered to his feet quietly as possible and followed her as she continued out the nursery door and into the hallway.\n\n*************************************************\n\nChapter 16\n\nWhat the devil could she be up to?\n\nRockdale kept close to the wall, shadowing her in the darkness. His daughter carried no light or lantern, and her slippers were silent on the carpet-covered wooden floor. His heart began to beat faster as his brain began to churn into motion. \n\nShe was taking food to Nicholas. She had to be!\n\nAnna finally paused at the end of the hall in front of the door that led to the narrow set of stairs that led to the attic. She turned the door handle slowly and opened it.\n\n\"Is he in the attic then?\"\n\nAnna shrieked and spun around to face him. \"P-p-papa?\" she asked tremulously, her eyes wide with fear.\n\nA hundred emotions swamped him all at once. Relief, fear, anger, and many more he had no name for. \"Is your brother in the attic?\" he demanded. \"How could you have not told me?\"\n\nHer mouth flattened in a thin, mulish line. \"What do you care?\"\n\nHer uncharacteristically harsh words caused him to falter for a moment before collecting his wits. \"Annabelle Margaret Beatrice Grayson. I would advise you to not try my patience another instant.\"\n\nShe flinched and seemed to deflate. \"Very well,\" she muttered. Turning, she headed up the narrow flight of stairs that led to the house attic.\n\nRockdale followed closely behind her, cursing himself for not bringing a lantern along. They reached the top floor, and Anna paused, her face white and uncertain in the near darkness. The only light filtered down from the high windows near the roof.\n\nHe glanced around, making out the shapes of covered furniture and stacked objects cast-off from the main floors. It was both cold and dark up here. He couldn't imagine why a small boy would choose to hide himself in such a place.\n\nAnna made her way over to a far corner, and he followed, wondering where Nicholas could be. The maids were certain to have searched up here, he told himself. He had specifically requested every floor and room to be carefully inspected.\n\nPart of him wanted to call out, but he held himself back, wanting to see with his own eyes where the little devil had hidden.\n\nAmongst a line of stacked leather trunks stood a floor-length mirror in a towering intricately carved-wooden frame. He vaguely remembered it being in what had been his grandmother's room.\n\nAnna stood in front of the mirror for a moment, and then, with a glance back at him, she tilted the bottom of the swiveling mirror up and crawled over the base and into the space behind.\n\n\"I'll be damned,\" he muttered and hurried over. He tilted the mirror up further and looked inside. Nestled in the corner, in a nest of rugs and blankets, his son lay on his side sleeping. Weak light from a window above shone down upon him.\n\nHe glanced over at his daughter who shrugged. \"This is our secret hiding place,\" she explained in a solemn whisper. \"We found it exploring with our mother.\" Her eyes welled up with tears.\n\nNicholas stirred and sat up, rubbing at his eyes. \"Anna?\" he asked in a small voice.\n\nRelief flooded over him in a sudden flood that weakened his knees. \"Nicholas,\" he croaked, kneeling down. \"Thank God, you are all right.\"\n\nHis son jerked in surprise and scrabbled backward. \"You told!\" he accused his sister.\n\n\"She had no choice,\" Rockdale said flatly. He regarded the children where they huddled across from him. He opened his mouth and closed it again. Part of him wanted to scold and admonish them for behaving in such a careless fashion while the other part of him longed to scoop them into his arms and weep in relief of his terror.\n\n\"You were very brave to be up here in the dark by yourself,\" Rockdale said at last, bending his long legs into the small space. \"Were you not afraid?\"\n\nIt was hard to see Nicholas' face clearly, but Rockdale thought his son's lips quivered.\n\n\"It was very dark,\" Nicholas whispered.\n\n\"Cold, too.\" Rockdale rubbed his hands together. \"What happened to make you hide up here?\"\n\nHis son had no answer and only huddled closer to his sister.\n\nRockdale bit the inside of his cheek to keep from shouting. Why did he feel as though his children were looking at him like some sort of villain? Damnation, but he was exhausted.\n\n\"Very well,\" Rockdale said, keeping his voice as even as he could manage. \"Get up and let us go downstairs.\" He ignored the sniffling behind him, not uttering another word while he led the way back down the narrow steps and down the hallway.\n\nHe didn't pause until he stood before the door to his own bedchamber. Gesturing for the children to precede him inside, they faltered in the doorway.\n\n\"But Papa, these are your rooms,\" Anna said hesitantly. \"Shouldn't we go back to the nursery?\"\n\n\"No,\" he replied.\n\n\"Papa, are you going to whip us?\" Nicholas asked in a small, shaky voice.\n\n\"I don't know,\" he answered honestly. \"But not tonight. Let's go inside, shall we?\"\n\nHis valet peeked inside. \"My lord? Oh! You've found Lord Langley!\"\n\n\"Yes, please alert Simpson and the nursery. Have someone prepare a supper tray and retrieve my son some night attire.\"\n\nRockdale directed the children to sit near the fire while he built up the embers until it was crackling with warmth. He settled tiredly down beside them on the rug.\n\nThe tray arrived, and Rockdale held his questions while the three of them picked at the food in silence. Afterwards, he and Nicholas washed up and changed into their night clothing.\n\nRockdale sat down on his bed and drew the covers back. \"Why don't you two join me?\"\n\nHe didn't miss the uncertain look pass between the children, and it sent a shard of pain through his chest.\n\nThey climbed up on the bed beside him and without preamble, Anna blurted, \"We overheard Mrs. Biddleton and Mr. Simpson arguing in the kitchen.\"\n\nRockdale went very still. \"What were they arguing about?\"\n\n\"You,\" Nicholas said in a low voice. \"And...and Mama.\"\n\nDread pooled in his stomach, but he forced himself to ask. \"What did they say that upset you?\"\n\nNicholas pressed his lips together.\n\n\"It will be all right if you do not wish to say,\" Rockdale found himself saying gently.\n\nAnna wrapped her arms around herself. \"Mrs. Biddleton said that you killed Mama...that you might have well have br-br-broken her neck yourself.\" Great, fat tears welled up her in eyes, and both children began to weep.\n\nRockdale forced himself to breathe through the surge of rage that threatened to propel him off the bed and downstairs to pull the bloody woman from her bed and wrap his hands around her neck. God! Must he even defend himself to his own children?\n\n\"Anna. Nicholas,\" he said firmly. \"Look at me.\"\n\nTwo sets of teary eyes fixed on him.\n\n\"I would NEVER have harmed your mother. Never!\" he said vehemently. \"Never,\" he said again, his voice cracking.\n\nHe gathered his children close into his arms, holding them while they wept in pain and grief at the loss of a mother and wife, who for all her faults, had loved her children fiercely and without reserve. He had grieved Isabelle in his own way, not truly realizing the depth of the wound that could never really heal.\n\nAs he rocked his children in his arms for the first time in his life, he realized that no matter who had actually fathered them, they were his and his alone.\n\n\"Why would Mrs. Biddleton say such a horrible thing?\" Anna asked finally, wiping at her eyes.\n\n\"She is angry at me and looking to strike out,\" Rockdale said. \"I am very sorry that I did not realize sooner the depth of her bitterness.\"\n\nHe slid from the bed to retrieve a dampened cloth and returned to gently wipe away the tears from each of their faces.\n\n\"I never liked her,\" Nicholas offered when his father had finished. He sniffed. \"She's mean and shouty.\"\n\n\"Yes, she is rather so.\" Rockdale ran a hand over his son's rumpled hair. \n\n\"Papa, are we sleeping here with you?\" Nicholas asked, his eyes wide and uncertain.\n\n\"Yes,\" Rockdale said firmly. \"Let's get under the covers, shall we?\"\n\nDespite his exhaustion, Rockdale lay awake watching his children slide into slumber.\n\nNicholas roused slightly. \"I'm sorry I ran away, Papa,\" he whispered. \"I love you.\"\n\nWilliam shifted and cleared his throat. \"Go to sleep, Nicky. I\u2014I love you, too, both of you.\"\n\n***\n\nThe next afternoon, Rockdale called the entire estate staff into the grand foyer. He stood tall before the assembled group, his son and daughter on either side of him.\n\n\"I have gathered you together today to first thank you all for helping in the search for my son, Lord Langley. In light of that, my son has something he wishes to say to you.\"\n\nWith a visibly deep breath, the young boy stepped forward. \"I would like to apologize to everyone for causing you to worry about me and do extra work searching for me. I am especially sorry to Mr. Willie for the injury to his foot.\"\n\nWillie reddened to be singled out and bobbed his head in acknowledgement. \n\n\"I hope you all will forgive me for my actions even though I had a good reason\u2014\"\n\nRockdale cleared his throat. \"I think that will suffice, Nicholas.\"\n\nThere was a rumbling at the back of the assembly and heads turned as the staff turned to look.\n\n\"Miss Lockhart!\"\n\nRockdale blinked in disbelief at Nicholas' delighted squeal. His son launched himself forward and grasped the newcomer around the waist.\n\nBloody Christ. It was her. He took an unsteady breath and fought the urge to run and grab her as well.\n\nHis errant governess had fallen to her knees to hug his son in return, and after a moment she lifted her eyes and met his gaze. There was no smile for him, but his heart gladdened at the sight of her lovely face.\n\nWhy had she returned? William would have bet his entire fortune that Eliza would never choose to willingly set foot on his estate again. He shook his head, determining to puzzle it out later.\n\nAnna had plastered herself to Eliza's other side, and she stood, an arm wrapped around both children.\n\n\"Miss Lockhart,\" Rockdale acknowledged coolly. \"We are pleased you have decided to rejoin us at Verity Hall.\"\n\nEliza inclined her head, her demeanor equally as cool. \"Thank you, my lord.\"\n\nHe held up a hand to quell the murmuring among his staff. \"Your attention, please. I have another urgent matter to address.\"\n\nAt his gesture, the children moved back to his side. \n\n\"Martha Biddleton, step forward, if you will.\"\n\nThe housekeeper moved from the back of the assembly, the staff parting quickly. \"Yes, my lord?\"\n\nThe earl studied her silently down the length of his nose before finally speaking in a clear voice that carried throughout the room. \"You are no longer welcome in this house or on my estate. I am dismissing you from your position. You will receive no reference or character letter from me or anyone on my staff.\"\n\nThe housekeeper clutched at her chest. \"My lord! You cannot be serious!\"\n\n\"I have never been more serious. You have inflicted grievous injury to the well-being of my family, and this is an offense I will not forgive or condone.\"\n\nRockdale waved a hand. \"Simpson.\"\n\nThe butler darted forward. \"Yes, my lord?\"\n\n\"Take her keys, escort this woman to her former quarters, and allow her to gather her things. Personally see that she is off my property within the hour.\"\n\n\"Yes, my lord. With pleasure.\"\n\nMrs. Biddleton covered her face and began to weep. \"Oh, my lord, please. You can't mean these terrible things! I loved Lady Rockdale like my own daughter. What would she say to see me treated so poorly?\"\n\nRockdale took a step closer to her and said in a lower tone. \"It is only because my wife was inexplicably fond of you that I have refrained from turning you over to the constable for slander against a peer of the realm. Now, please remove yourself from my sight.\"\n\n***\n\nEliza watched in bemusement while Simpson marched Mrs. Biddleton out of the room in view of the entire incredulous staff. She glanced down as Nicholas sidled closer and slid his hand into hers. \n\nAnna stood by her father's side, their faces mirror images of stony regality. \"Good riddance,\" she said.\n\n\"Yes,\" Rockdale murmured, laying a hand on her shoulder. \"Good riddance, indeed.\"\n\n***\n\nLater, in the nursery with the children, Eliza's mind still reeled trying to make sense of all that had happened. It felt strangely surreal to be back in place as governess, as though the past two weeks had never happened.\n\nShe felt an enormous relief to see Nicholas safe and sound. Both children thankfully seemed none the worse for the ordeal. With a guilty look at Nanny Goodson, Anna had given Eliza the gist of what had transpired. The young girl would not divulge what exactly they had overheard Mrs. Biddleton say, but Eliza knew it must have been something truly apalling. Having experienced the extent of the woman's unpleasantness firsthand, she felt a great relief at the housekeeper being forcibly removed from the house.\n\nTo her surprise, Rockdale had disappeared after the meeting with the staff. She felt bewildered and rather... hurt by his lack of reaction at her return. But really, what had she expected?\n\nGod! She was such a fool to have come back here! Eliza covered her face with her hands, questioning her decision to tell the earl about the baby they had conceived together.\n\n\"Are you all right, Miss Lockhart?\"\n\nEliza uncovered her face and smiled down at Nicholas. \"Oh, yes. Just a bit tired from the trip back to Verity Hall.\"\n\nA light knock on the nursery door caused her heart to thump in heady expectation that quickly faded as the door swung open.\n\n\"Good afternoon, Mr. Willoughby,\" Eliza managed to say.\n\n\"Good afternoon,\" he replied, appearing surprised to see her on the floor with Nicholas, surrounded by a multitude of toy soldiers. \"I wondered if I might have a quick word with you, Miss Lockhart.\"\n\nEliza didn't miss the way Nanny Goodson eyed them with a raised eyebrow.\n\n\"Ah, well, I suppose so,\" Eliza said, rising to her feet.\n\n\"Miss Lockhart! Your skirts have knocked over the entire right flank!\"\n\n\"My apologies, General. Get the troops back in order, and I'll return shortly,\" Eliza said, laughing.\n\nMr. Willoughby moved back to allow her to step past him into the hallway. She smiled uncertainly as he joined her.\n\n\"You're very good with them,\" he observed. \"The children, I mean.\"\n\n\"Oh, er, thank you.\"\n\n\"I hadn't meant for this to feel so awkward.\" He took a deep breath and exhaled slowly. \"Let me just say it then. I have decided I must leave my position as Lord Rockdale's secretary.\"\n\nTaken aback, she began to speak, but he forestalled her with a raised hand.\n\n\"There are several reasons why I feel I must go,\" he said in a low tone.\n\n\"Mr. Willoughby,\" Eliza murmured, troubled by his words. \"I hope this isn't because of...\"\n\n\"Yes,\" he replied, \"in part. But that is not the only reason. I have been offered an opportunity to apprentice with a group of solicitors in London. And I wondered if perhaps you might wish...to come with me.\"\n\nEliza's mouth fell open. \"Come with you?\" she whispered. \"But...\"\n\nHe took an almost infinitesimal step closer. \"As my wife, of course.\"\n\n\"Mr. Willoughby! Are you proposing marriage?\" she asked, disbelieving her ears.\n\nHe grimaced. \"Yes, very badly, it would appear. Eliza, I realize you and I are recently acquainted with one another, but I cannot help but be convinced we would suit most favorably. I would offer you my upmost respect and never mistreat you, and...I would gladly have you just...as you are.\"\n\nEliza realized dimly that he was saying he would have her regardless of the current state of her maidenhood. She bit her lip, wondering if he would feel the same if he knew of the baby she carried.\n\n\"Miss Lockhart,\" he continued earnestly. \"Would you consider accepting my suit?\"\n\nShe stared into his handsome face and knew he would make a lovely husband to a lucky woman. But with a sad smile, she shook her head. \"Dear Mr. Willoughby, you are terribly kind to ask...\"\n\nHis eyes hardened, and unexpectedly, he seized Eliza's arm and dragged her further down the hallway to a greater distance from the partially open nursery door.\n\nShe squeaked, caught off guard. \"John!\"\n\nHe pointed a finger at her and released her arm. \"Pray, do not \"dear, Mr. Willoughby me,\" Eliza. I assure you there is nothing kind about my proposal, not a bit!\"\n\nDiscomfited by his vehemence, she bit her lip and frowned at him.\n\n\"Don't forget that I know what you have endured in this house from Lord Rockdale,\" he informed her in a low tone. \"I know.\"",
        "A hot blush burned up her neck. \"You are speaking out of turn, sir,\" she said coldly and started to turn away.\n\nHe laid a hand on her sleeve. \"Eliza, oh, damn it, I am making an absolute muck of this. Please, wait a moment.\"\n\nReluctantly, she paused. \"Very well. A moment only.\"\n\n\"This house is not a good place for you,\" he said urgently. \"You may despise me for saying this outright and rather vulgarly, but you deserve better than being forced to share your employer's bed. Eliza, don't you see? A decent man would never treat you this way. And if you are foolish enough to develop a tendre for him...\" He shook his head. \"They are false feelings you simply cannot trust. I beg you not to remain here. If you will not leave with me, then find some other way. Some other position. Please.\"\n\nHis fingers closed about her elbow as he leaned closer. \"Do not think me without passion simply because I choose to act with decorum. You would not be disappointed in the marriage bed with me...\"\n\nEliza jumped backward out of his grasp. \"For heaven's sake, John!\" She covered her burning cheeks and closed her eyes for a moment. \"This is one of the most mortifying conversations I have ever had. I seem to be having quite a lot of them lately,\" she muttered. \n\n\"Listen to me\u2014\"\n\nShe interrupted. \"No, it's my turn to talk now.\"\n\nA look of chagrin crossed his face as he crossed his arms across his chest.\n\n\"I appreciate your...candor.\" She cleared her throat and sighed, then forced herself to look him in the eye. \"I will take your advice to heart, but I cannot marry you. You will find the perfect wife for yourself, I feel certain.\"\n\nJohn heaved a sigh. \"We would make a good match...\"\n\n\"Perhaps before I came here, but I...am different now,\" she said slowly and backed away from him.\n\nHis mouth flattened into a hard line. \"I can be different.\"\n\nShe smiled, a little wistful. \"No, John, I don't think you can.\"\n\n\"He will hurt you! Don't you see that?\"\n\n\"I should go now,\" she replied gently before turning away to return to the nursery.\n\n***\n\nJohn's well-intentioned words stayed with her the remainder of the day. Uncertainty over her decision to return continued to besiege her thoughts. \n\nThe children tired early and were nearly asleep over their supper plates. She helped Nanny Goodson tuck them into bed, reading stories and singing the songs they liked.\n\nRestless and anxious over what the night may hold, Eliza made her way back to her bedchamber, deciding to send word downstairs she was tired and would take a supper tray in her room. Earlier, she had overheard the maids whispering that the earl's cousin Caroline Stanley had returned to Verity Hall, scandalously alone. \n\nRecalling the last time the earl's relatives had visited, she shuddered. The thought of attempting polite conversation over a formal dinner seemed more than she could bear tonight.\n\nShe entered her room, surprised to see the fire had already been brought back to life. It took her a moment or two to see the figure standing to the side of the fireplace, leaning on the mantelpiece.\n\nHer heart thudded hard before dropping into her stomach when he took a step forward.\n\n\"You came back,\" he stated without preamble, his expression unreadable.\n\n\"Yes.\" She didn't pretend to misunderstand his question and forced herself to remember to breathe. \"I\u2014\"\n\n\"It doesn't matter,\" Rockdale interrupted. \"And I don't care.\"\n\nNonplussed by his strange attitude, she faltered, suddenly certain he was going to send her away. Damn him for making her feel so conflicted. She both craved being near him and hated him for the emptiness she felt apart when they were apart. Part of her yearned to immediately tell him about the child they had conceived together, yet she was filled with trepidation over his reaction.\n\n\"William, I need to tell you...\"\n\n\"No,\" he said emphatically. \"No talking.\"\n\nHe stalked closer, and she realized he fairly vibrated with some suppressed emotion. It glittered hotly in his eyes.\n\n\"You came back of your own free will,\" he said in a low tone that caused the fine hairs on her arms and nape stand erect. \"That means you have agreed to my offer. No discussion. No debate.\"\n\nSay something, Eliza, she pleaded to herself. You should at least say something! But the words lodged thickly in her throat. \"William,\" she managed to whisper.\n\nHe was on her in what seemed like an instant, pinning her between his body and the door. His hand sank deep into her hair. \"I told you, not a bloody word,\" he growled.\n\nJust as quickly as he had seized her, he backed away. She thought she could see his hands shaking, and she licked her lips, breathing hard.\n\n\"Take your dress off.\"\n\nHer hands immediately went to the buttons down the front, somehow knowing if she didn't, he would rip it off. Her fingers fumbled at the fastenings. Already her body clamored for his touch, and she let her eyes drift closed a moment, battling between her mind and her treacherous desires. Was this to be her destiny? To forever jump at his every demand?\n\n\"All of it,\" he hissed. \"Get it all off.\"\n\nShe didn't even try for neat or orderly. The bodice and skirt were discarded to the floor, followed by her shoes, petticoats, corset, stockings, and finally her shift. Chest heaving, she stood naked before his intent stare.\n\nLifting her chin, she took a few steps closer to him then slowly lowered herself down her knees before him.\n\nHis eyes closed tightly, and she saw him shudder before he sank to his own knees.\n\n\"Dear God, Eliza...\" he breathed, opening his eyes and skimming a hand over the side of her face. \"I thought...\"\n\nHe grasped her hand and gently kissed each finger before pressing a kiss to the center of her palm. Rising to his feet, he used the hand he held to draw her to standing before him.\n\nWith one last kiss to the back of his hand, he released her. \"Go kneel on the bed,\" he said gently. \"Hands and knees.\"\n\nAt his words, she felt an answering pulse of arousal between her legs. She positioned herself on the bed as he had instructed, pressing her thighs together to assuage the ache.\n\n\"Face away from me, that's right, sweeting. Spread your legs apart so I can see all of you.\"\n\nShamelessly, she complied, quivering with anticipation when his warm hand slid over the curve of her bottom.\n\n\"Naughty girl, I see your petals glistening,\" he murmured, lightly caressing her sensitive flesh.\n\nShe sucked in a breath when he penetrated her with a broad finger and slowly thrust it in and back out.\n\n\"As gladdened as I am by your unexpected return, there is some savage part of me that aches to punish you. You made me think you couldn't stand to be with me another moment.\"\n\nShe moaned in reply and felt the sudden sting of his hand against the cheek of her bottom.\n\nHe forced a second finger inside of her and slapped the other cheek of her bottom. \"Why is your cunt so wet, Eliza?\" he growled. \"Is there something you need from me that you can't get in Lancashire? Is this why you decided to return to Verity Hall? Did you need one more hard fucking before you left me for certain?\"\n\n\"Why must you be so crude? That is not why came back!\" She shivered when he withdrew his fingers, and she heard the sounds of him undressing.\n\nHe moved to the side of the bed near her face, his hand fisting over his erect cock. \"I've heard they have cocks in Lancashire; I am certain of it.\"\n\nShe angled her head up to see his face. \"You think me some hussy only needing a hard cock to satisfy me?\"\n\nHe continued to stroke himself. \"Who knows what women want? I've never been adept at figuring this eternal mystery out. God knows, my own wife wasn't happy staying in my bed. Apparently all she needed was a suspicious bulge in a pair of trousers, and she was off and salivating.\"\n\n\"I am not like Isabelle!\"\n\n\"Are you sure? Perhaps you just haven't had sufficient opportunity to spread your...wings, so to speak.\"\n\nDrawing her knees up under herself, Eliza cocked her head and considered him. \"You truly are angry with me, aren't you? Did it hurt when I told you I wanted to go back home? You have to care about someone before they can hurt you, William.\"\n\nHe leaned closer and slid the head of his cock over her mouth. \"What really hurts me is that you aren't already sucking on my cock. Open your mouth.\"\n\nShe leaned away from him and lifted an eyebrow. \"I think you missed me.\"\n\nHe sniffed. \"It's been what\u2014a day? Hardly long enough to miss someone, I'd say.\"\n\n\"I missed you,\" she said softly. \"Is it so hard for you to admit?\"\n\n\"By gad, woman, you're talking me flaccid.\" He abruptly turned his back to her. \"What is it you want from me, Eliza? You want to hear that it felt like a knife stabbing into my chest every time I thought of not seeing your smile again? That my coat still carries your scent from that evening you sat in my lap out in the garden, and we named the constellations in the sky? How about the way my breath catches when I remember they way you mew like a kitten when my cock is deep inside you? Or when I think of some other man touching you\u2014\"\n\nEliza stood and laid a hand on his shoulder. \"William.\"\n\n\"I don't know how to maneuver through this...lunacy between us.\"\n\nShe pressed her cheek against his naked back. \"I'm confused, too. I never know how I'm supposed to feel when I'm with you.\"\n\n\"Why did you come back?\" he asked hoarsely. \"People always leave me, but they don't come back.\"\n\n\"I had to come back,\" she whispered.\n\n\"God help you, then,\" he said, face grim as he turned back around and stooped to scoop her off her feet and into his arms. Laying her gently back on the bed, he crawled over her on his hands and knees, caging her in with his arms and legs on the outside of hers.\n\nHis body hovered tantalizing close, his naked skin almost, but not quite, touching hers. \"It wasn't very smart of you to return,\" he said gruffly while staring down at her. \"You forced me to release you from our agreement, which I did, and the next thing I know, here you are again. One might get the strange notion that you want to be in this bed with me, Miss Lockhart. Perhaps even enough to risk the consequences...\" His head slowly lowered as he spoke until the last words were breathed against her mouth. \"What do you have to say for yourself, hmm?\"\n\nShe licked her lips and fought the urge to close the scant distance between them. \"I must be soft in the head.\"\n\n\"Be still my heart! Your honeyed words of longing and tenderness are almost more than I can stand.\"\n\n\"Is that what you want from me?\" she asked, reaching up to touch his cheek. \"Longing and tenderness?\"\n\nHe insinuated a knee in between her thighs. \"I'll settle for you spreading your legs.\"\n\n\"What if that's what I want from you?\" she pressed, resisting for a moment when he added a second knee between hers.\n\nHe pushed back on his haunches and paused. \"Then I will try to give you what you want,\" he said, pulling her knees wide. \"And you will give me what I want.\" With a slow smirk, he bent and flicked his tongue against her now exposed labia.\n\nShe hissed a moan when his tongue delved deeper inside her mons. \"Wait,\" she said through gritted teeth. \"I can't think when you do that!\"\n\nHis answer was to lap at her pearl, swirling around it in circles with his tongue.\n\nDesire arced through her like an arrow of tiny flames. She gasped and arched her hips off the bed before growling and thrusting both hands into his hair. \"Stop!\" she insisted.\n\nHis eyes were narrowed, but he finally lifted his head to meet her gaze.\n\n\"There will be no more bargaining, William. What happens between us in bed or otherwise will not be because one of us feels obligated. I don't want you to pretend to feel anything for me if you do not. Let us just be respectful and honest with one another.\"\n\nHer thoughts turned to the baby but was distracted when he quickly adjusted his position so that his cock pressed hard against the softness of her center, penetrating her slightly before she could gather her thoughts.\n\n\"You'll stay then?\" he asked, suddenly seeming urgent as he loomed over her once more, winding a hand into her hair.\n\n\"N-no bargains?\" she asked, voice quivering as the thickness of his cock sank another inch inside of her.\n\nHe bared his teeth in a facsimile of a grin and shoved himself the rest of the way into her body. \"No bargains,\" he agreed, sliding out and thrusting back inside.\n\nShe was startled when William captured her hands and bought them up near her head. \n\n\"Tell me you're going to stay,\" he ordered.\n\n\"I'll stay,\" she whispered. \"Only not as a mistress.\"\n\nHe made a noise in the back of his throat and glared down at her fiercely. \"Woman, I have my cock lodged inside you as far as I can shove it, and you think to tell me you will not be my mistress? Are you attempting to drive me to a state of complete derangement?\"\n\nHer eyes closed for a moment against his ire. \"I am not saying we cannot...\"\n\n\"Fuck,\" he supplied succinctly with a definite edge. \"I believe the word you're looking for is fuck.\"\n\nShe returned his glare, but her lower lip wobbled suddenly. \"I don't want to be your whore.\"\n\nHe dropped his forehead so that it pressed against hers. \"Never a whore,\" he murmured. \"Never that.\" Gently, he eased them over to their sides, drawing her leg up over his hip.\n\nFace to face, they regarded one another silently for a few moments, his hardness still embedded within her. He smoothed her hair back from her face, and she took a ragged breath, feeling like she would easily shatter into a million jagged pieces.\n\n\"It doesn't matter what we call it,\" William said at last. He reached for her hand and laced their fingers together. \"Only that we are together. You can be whatever you like, just let me be near you.\"\n\n\"Yes,\" she whispered and leaned closer to press her trembling mouth against his. \"Yes.\"\n\nHe began to move inside her while their kiss deepened, hands roaming over bare skin in a sensuous slide.\n\nShe shivered when his exploring lips suckled slowly down her neck to her breast. His thrusts shifted her backward as the heat of his mouth enveloped her nipple, his hand kneading and holding the mounded flesh in place.\n\nRestless, she shifted under him and threaded her fingers into his hair. \"William, I need you,\" she pleaded.\n\nHe rolled to his back, hauling her with him. \"Then take me, dove. I'm yours.\"\n\n***\n\nTheir ardor had finally been sated after she had ridden astride him like a woman possessed, shameless in her desire for him. After she had collapsed, he had only allowed her a brief respite before penetrating her once more, this time from behind. Her body felt slightly sore and languorously tired after their vigorous and thorough lovemaking.\n\nShe huffed a bit to herself for calling it lovemaking. There was no love between them, only...something. Something she wasn't ready to name, not yet. Perhaps not ever. She held no illusion that Rockdale would someday fall in love with her like a mythical hero in the books she had grown up reading. But like it or not, their fates were now forever intertwined.\n\nShe laid a gentle hand on her abdomen. Her brow wrinkled to think of the difficulties that lay ahead for her and her babe. The child would be born a bastard in a world where such a sin was not kindly looked upon. She sighed, knowing her mother would be so disappointed to see her daughter disgraced in such a fashion.\n\nBut what had been done could not be undone. Her life ahead seemed very uncertain and more than a bit frightening. Putting one's trust in a person who, by his own admission, was not a very good man, seemed a daunting and sobering prospect.\n\nWilliam mumbled something in his slumber and pulled her closer against his warm body. A slight smile drifted across her face, imaging his face when she told him about the baby. She hoped he would be pleased. With a sigh, she allowed herself to fully relax in his embrace and floated off to sleep.\n\nWhen she awoke some time later, the fire had burned down, leaving the room chilled. She crept from the bed and stoked the embers back to life, shivering a bit as she slipped her nightgown over her head.\n\nHer stomach rumbled, reminding her that she had gone to bed without any supper. A glance at the mantle clock told her that everyone would likely be abed at this late hour. No one would mind if she sneaked quickly downstairs for a bite or two, she reasoned.\n\nShe gravitated back toward the bed where William slept, his handsome face peaceful against the pillow. Softly, she stroked a hand over his dark hair. What a confusing man he was. When would she ever learn what went on in that head of his?\n\n\"Never, most likely,\" she muttered.\n\nQuickly pulling on a wrapper and slippers, she slipped out of her bedchamber, treading the quiet hallway to the stairs and continuing down. She hesitated at the second floor landing, hearing some sort of rustling or stirring nearby.\n\nCould it be the children out of bed and roaming the house at night? Eliza frowned and pondered. It was unlikely, but after a moment of thought, she decided she should investigate.\n\nShe made her way silently toward the dining room, eyes widening at hearing a muffled curse. A figure appeared around the corner, causing Eliza to stumble back a step in surprise.\n\n\"Mrs. Biddleton!\" Eliza exclaimed. \"What are you doing here?\"\n\nThe older lady's face appeared almost ghostly pale in the low light. She hefted the bulging cloth bag she carried higher upon her shoulder and lifted her chin.\n\n\"It's none of your affair!\" she growled. \"I'm only here to retrieve some of the items Lady Rockdale would want me to have.\"\n\n\"You're stealing them, you mean!\"\n\nMrs. Biddleton sneered at her. \"Getting fucked by the lord of the manor doesn't make you lady of the house, you stupid slut. Now, get out of my way.\"\n\n\"I'm seeing you straight to the door, and you will leave that bag of the earl's belongings right here,\" Eliza ordered, raising her voice in hopes someone would hear.\n\nA large hand slipped over her mouth as she was roughly jerked backward against a hard figure.\n\n\"Not so loud, hen,\" a man breathed into her ear. \"We don't want anyone to spoil our fun before we've had any, do we?\"\n\nImmediate recognition ignited a surge of fear and loathing that had her kicking and bucking violently against Rockdale's former footman, trying hard to sink her teeth into his hand. \n\nGeorge growled in warning, and there was a swift, hard blow to the side of her head that jerked her head viciously to the side.\n\nThe last thing she glimpsed were black spots dancing over Mrs. Biddleton's smirking face before the world went dark."
    ],
    "authorname": "Emmeline",
    "tags": [
        "england",
        "historical romance",
        "romance",
        "noncon",
        "blackmail",
        "historical"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/carnal-knowledge-ch-15-16"
}