{
    "title": "The Bra Salesman",
    "pages": [
        "Goddamn, I hate this. Another ridiculous argument with my girlfriend last night, and here I am in the lingerie section of a department store trying to find some cutesy undergarment to make amends. Don't even ask me what the argument was about, because it's been one long continuous problem about the same crap for the past two months. I keep telling myself that this phase will pass, but it doesn't seem to be getting any better. But I do really like her, so I'll go ahead and stand here in an aisle of frilly bras and see if I can find something that will turn our relationship around.\n\n\"Excuse me, do you work here?\" I hear the squeaky voice behind me ask. I roll my eyes and take a deep breath. I mean, Jesus Christ, just because I'm wearing a button-up shirt doesn't make me some fucking sales clerk. \n\nI sigh in exasperation and start turning around, \"Lady, do I LOOK like a...\" but I can't think of anything else to say once I catch sight of the most gorgeous woman I have ever seen in my life. She has blonde hair wrapped up in a short pony tail, deep green eyes peering out from behind a pair of thick glasses, thick lips, long legs, and dressed in jeans shorts and a blouse. \n\nBut honestly, I didn't notice any of this at first because my attention immediately gravitated to her enormous chest. I have never seen a pair of humongous tits shaped so perfectly. They weren't perfectly round like some overly-perky boob job jutting straight out of her torso. No, these were young, natural breasts with a slight sag in them that let you know they were completely real.\n\nThe woman looked at me expectantly and with some nervousness, \"You are a bra salesman, right?\" and she bit her bottom lip. She had some strands of hair that hung over one of her eyes, and I was mesmerized by... wait, she just asked me a question.\n\n\"I... uh... I...\" I stammered, \"Of course I am. A bra salesman. That's me, what I do. That's what I do, yes.\" Ugh, I was caught flatfooted and now I'm yammering like a six year old caught with his hand in the cookie jar. Get your head together.\n\n\"Good,\" and she gave a smile that could make a Nazi melt. Ok, I don't even know what that means, get a grip, dude. Focus. She seemed oblivious to my blunders and kept talking, \"I wasn't sure if anyone worked here who specialized in bras.\" \n\nWell, of course not. Obviously there's no such thing as a bra salesman. But I wasn't about to correct her. \"Well, you've found the right person. How can I help you, ma'am?\" I said with a smile that I hoped didn't look like a creepy leer since I was in fact leering at her amazing figure.\n\n\"I need some new bras and I was hoping you could help me. I'm not sure if these are the right size.\" She held up various bras and panties towards me. I had never seen so many garments that consisted of so little cloth, and most of what was there was lace that could easily be seen through. God, I would love to see her wearing one of those.\n\nI saw an actual employee of the store walk behind her with a short-sleeved color shirt emblazoned with the store logo and a name tag on his shirt. I immediately saw two other employees dressed exactly the same way. The fact that she somehow believed I worked there made me think she was not all that bright. I figured who knows, maybe I could actually get her to model something for me.\n\n\"Well,\" I stammered, \"why don't you put them on and then I will give you my professional opinion.\" The idea of seeing this busty goddess in nothing but sexy lingerie made my mouth salivate a little. I knew as soon as she saw some other employees, the jig would be up, but I figured it was worth a shot.\n\nShe beamed excitedly, \"That would be great!\" I had to hold my mouth closed so that I wouldn't look so shocked. I can't believe someone this gorgeous could be this dim.\n\nI looked around and found the dressing rooms. \"Absolutely, ma'am. Glad to be of service. If you step into the dressing room area, we can get started.\" I followed her to the dressing room, mesmerized by her perfect ass swaying in front of me. Watching her full, round hips shake as she walked was an amazing sight to see, let me tell you. Another woman carrying some dresses was just leaving the dressing area, and there were no other customers back here. \n\nI held the door to one of the rooms open for this beauty, which she seemed to appreciate. \"I'll be right back!\" She seemed so giddy as she closed the door behind her. I sat on a bench in the dressing room lobby waiting. As I heard her rustling and taking off her clothes, I ignored the feelings of guilt stirring inside me. Look, I'm not forcing her to do anything, and can you blame me? I'm getting the chance to see an unbelievably hot woman in lingerie, what's the harm, right? I'm going to get a nice, long look and that will be that. I know I have a girlfriend, but it's not like I'm married or anything.\n\nAfter a minute or two, I heard her say, \"Ok, I'm ready.\"\n\n\"Perfect, come on out and let's see how it looks.\" I rubbed my hands together in anticipation.\n\nBut there was an awkward silence. I don't know how many seconds passed, but it sure seemed like a lot, before she finally said, \"Out there? In public?\"\n\n\"It's just a dressing room, ma'am. And there's nobody here anyway.\"\n\nMore awkward silence and then she said, \"Could... could you come in here?\"\n\nHey, if she wants to give me a peep show in the room instead of the dressing room lobby, that's fine with me, I don't care where it happens. I just wanted to see her. \"Of course, ma'am.\" I opened the door and walked in.\n\nThe room was kind of small, but big enough for the two of us to fit comfortably without being directly on top of each other. Not that I would have minded being on top of her, you understand, I'm just saying it was roomy enough, that's all. Point is, I walk and see her standing there. And holy shit, was she standing there.\n\nShe still had her glasses on and was staring at me, I guess trying to read the expressions on my face. Which I hope she was really bad at, because every thought racing through my brain at that moment was about performing nasty and unnatural sexual acts on that tremendous body of hers, which I could now see included a nice, flat stomach and slim figure with wide hips. The red bra she was wearing was very low cut, composed mostly of see- through netting with a paisley swirl pattern sewn in and white-lace trim. \"So what do you think?\" she asked.\n\nWhat she was wearing reminded me of a bra I had seen on my girlfriend, and I suddenly felt horrible about what I was doing. I would like to say I thought about leaving the room before anything happened, but truth be told, I couldn't stop staring at her chest. Her tight bra was pushing the top of her immense breasts out over her bra, and the aureoles of her stunning nipples were peeking out from behind her bra. Wait, she asked me another question. Got to stay focused.\n\n\"Hrmm, I'm not sure\" Ok, so far she had no clue I didn't work there and that she was letting some random stranger ogle her nearly naked body. If she's still not on to me, then I thought I'd take a chance. \"Do you mind if I... feel the fabric?\" I threw out the suggestion, knowing that she would never agree to it. I mean, it would be fantastic if she would let me anywhere near those amazing breasts of hers, but come on, that wasn't going to happen.\n\n\"Well, of course you can! That's why I'm here! I need your professional help!\" She was so earnest in her gratitude that I almost felt awful about what I was doing. But that went away as soon as I reached out and put my hands on her chest. I acted like I was feeling the fabric of the bra, but I was squeezing those incredible tits of hers.\n\nI rubbed my fingers over every inch of those huge breasts of hers and pretended to examine the fit of the bra. I even put some fingers inside her bra as though I was testing how tight the fit was against her amazing chest. And she stood there the entire time with this appreciative smile on her face, grateful that I was being so meticulous in my examination. I would have pinched myself to make sure I wasn't dreaming, but my hands were already filled with huge mounds of flesh.\n\nAfter a few minutes, I finally told her, \"I'm not sure this is the right size for you. What size bra do you normally wear?\"\n\n\"I think I wear an F, but it's been years since I was measured so I don't really know.\" She half-grinned as though she were self-conscious about not knowing her size. \n\n\"Uh...,\" I stammered, sensing an opportunity, \"Would it help if I..., er... measured you?\" \n\nShe said, \"That would be SO great, thank you!\" I think she was about to say something else, but I was too busy grabbing the door knob and hustling out of the room.\n\nI walked out dumbfounded and found the nearest empty counter. I frantically looked around for a measuring tape, ducking behind the cash register so no actual employee would see me rummaging through their stuff. Luckily, I immediately found exactly what I needed, so I grabbed the measuring tape and trotted back over to the dressing room area. \n\nAs I closed the dressing room door behind me, I took a deep breath and said, \"Please put your hands over your head and let's get a measurement.\" She took her glasses off and smiled but didn't comply immediately, so I jumped in, \"It's ok, ma'am. Remember, I'm a professional. I have years of experience as a bra salesman, so there's not much that can surprise me.\" \n\nShe seemed relieved to hear that, so she put her hands over her head as I asked. I pulled the measuring tape around her and put my hands together in front of her impressive cleavage in order to get a reading, but of course I pressed my hands into her breasts as I did so. \n\nHoly shit, those titanic boobs of hers measure 48 inches. I imagined what it would be like to press my entire face into those gigantic jugs of hers and slide my tongue over every inch of her massive mammaries. Just the thought of squeezing and touching... Crap, my cock is getting stiff. Ok, don't get lost in thought. Stay in the moment. I tried to keep my best poker face on and act completely unsurprised. I think I even murmured in agreement as though I had somehow confirmed what I had already suspected as an experienced bra salesman.\n\n\"Are you able to get a good measurement?\" she said with a concerned look on her face, \"Or do you need me to take my bra off?\"\n\nAre you fucking kidding me? I can't believe she is actually volunteering to strip in front of me. But hey, who am I to stand in her way, right? \"Y'know, I think it would be helpful for you to take off your brassiere. Just to make sure our reading is accurate.\" \n\nIt was a struggle to keep my jaw from dropping off of my face and down to the floor as I watched her slowly reach around to her back and unclasp her bra. I thought about volunteering to help her, but I was too busy staring at her chest that was jiggling as she struggled with the clasps.\n\nAnd then time seemed to slow down. I marveled as I watched the most amazing breasts being released from their lacy bondage. I even think I heard music playing in the distance, like a choir of angels singing from the heavens. Ok, it was probably some muzak coming in through the speakers. What I'm saying is those huge bosoms were now naked and free, and I stared at her erect nipples as I watched those colossal tits bounce in appreciation for their liberation. I think I hear more music. \n\n\"Ok, ready when you are.\" She said appreciatively. Right, I still have a measurement to do. I tried to adjust my pants nonchalantly, so that my rock hard cock would have some place to go. I reached around her and pulled the measuring tape around her chest and over her hardened nipples. Of course, the reading was exactly the same, but I nodded as though this measurement seemed much more precise than previously.\n\nI could hear the hope in her voice as she said, \"So what cup size do you think I need?\"\n\n\"Hrmm,\" I said. \"I'm not really sure.\" Clearly she had no problem with me putting my hands on her chest, so I figured I'd keep going. \"I need to feel the shape of your breasts in order to determine the proper cup size.\" Oh god, that had to be one of the stupidest things I have ever said. And for me, that's saying something. \n\nShe nodded her approval, \"Do whatever you have to do!\" Shit, what I have to do is fuck your big-breasted brains out. But of course I didn't say that. I cannot believe she thought that any of this sounded like a good idea, but there was no way I wasn't going to grab those tender tits. So I cupped her breasts in my hands. \n\nLet me tell you, there are no words to describe the joy that was in my heart at that moment. Oh fuck my heart, my hands were what was full of bliss. The skin on the underside of her breasts was so velvety soft and so unbe-fucking-lievably smooth. \n\nShe didn't seem fazed at all, as though this was obviously how someone would measure a cup size. \"What do you think?\" She was so happy to let me fondle her chest. How could someone with such huge tits be so na\u00efve about letting strangers grab them? Hey, don't get me wrong, I'm not complaining.\n\nI gently squeezed her tits and bobbed my hands around so that her breasts would jiggle right in front of me. \"It's hard to say, can you turn around and put your arms over your head?\"\n\n\"Anything you need, I really appreciate your doing this!\" she said thankfully as she kept her arms over her head. With her back to me now, I reached around and began fondling her breasts. I couldn't believe she was letting me bury my fingers deep in those gigantic mounds of flesh, but she seemed perfectly at ease as I kneaded those wonderful boobs of hers. God, I am such an asshole. \n\n\"You say you're wearing an F now?\" I figured as long as I sounded inquisitive enogh, I could extend the conversation and she'd allow me to keep squeezing her tits. Shit, I hope she can't feel the huge boner I have less than an inch from her dazzling ass.\n\n\"That's right.\" I could see our reflection in the mirror on the wall with my hands covering her enormous boobs. She had this sweet, simpleton smile that was getting in the way of my enjoying taking advantage of her. \n\n\"How long have you been wearing an F?\" I am a horrible, horrible person.\n\n\"Well, in high school, I was wearing a DD. But my boobs kept growing, and a few years later is when I started wearing an F,\" she said proudly. Would you please stop smiling at me? I am not a nice person. I am squeezing your innocent, na\u00efve body for my own sick pleasure. My cock is throbbing in my pants from the desire to fuck your naked body. So please stop smiling, ok?\n\n\"Hrmm, that's interesting,\" I said thoughtfully. God, what is wrong with me? I need to go home to my girlfriend. But then I start rationalizing to myself about how this is not something that happens every day and one shouldn't live life with regrets. Like I'm some fucking Zen master. \"Can you turn around again, but this time put your hands behind you as far back as you can?\" I really, truly am an asshole. \n\n\"Sure!\" She did so, and now those luscious tits of hers were sticking out. I moved my hands all over those incredible boobs of hers. I tried to look professional as I stared at those luscious breasts and continued to squeeze them.\n\n\"Hrmm,\" I pondered. \"I think you actually need an FF.\" Does she really need an FF? How the fuck would I know? Of course I had no idea, but I had to make all this time seem worthwhile as though I discovered something important.\n\n\"Well that's good to know! Thank you so much!\" She was so excited that she bounced a little, just enough to make those enormous breasts of hers sway and shake.\n\n\"Glad to be of help.\" Then a thought occurred to me that was monumentally ridiculous. But clearly I was not dealing with a very bright person here, so I decided to see if she would take the bait. \"Now let's talk about your panties.\"\n\n\"My panties? What about them?\" She said with hesitation.\n\n\"Well, what do you normally buy? How do these feel?\" I was looking down at the red lace thong she was currently wearing. The netting allowed her pubic hairs to be somewhat visible, and I felt my cock straining against my pants. There is no way this is going to work.\n\n\"I usually buy mediums,\" she said with some confidence, \"which are a little tight, now that you mention it. But that's how they're supposed to be, right?\"\n\n\"Sometimes. But not always. Sometimes not. It depends.\" Oh fuck, what is wrong with me? Right, I'm awestruck by thought of measuring the pussy of a woman with enormous tits, that's what's wrong with me. Look her in the eye and sound like you know what the fuck you're talking about. \"It's important for them to be sized properly as well. How long has it been since you had your pussy sized?\"\n\nHer eyes grew wide with alarm. \"My pussy? I've NEVER had my pussy sized!\" Really? No shit?\n\nI made a look of surprise. \"You've NEVER been sized? Wow!\" I am an awful human being. I hate myself, or at least I should. It's hard to hate anyone when you're staring at a topless woman with huge knockers.\n\n\"No!\" she said shocked, \"I never knew I needed to have it sized. Can you do that too?\" Can I do that? Lady, are you out of your mind? I cannot believe she is going along with this.\n\n\"Of course, ma'am. I am happy to be of service.\" And I swear to God, I reached down and pressed my hand into her crotch and began feeling her pussy. It was heavenly soft, and if I'm not mistaken, a little damp. As I rubbed my hand back and forth over her thong, I kept my face frozen with the look of an expert or at least what I imagined an expert in bras and panties would look like, whatever that meant. As if I would know.\n\n\"So what do you think?\" she asks me. I think I'm in fucking heaven, that's what I think. But that's not what she meant, I know, I know. This was going to end horribly, she's going to realize what was going on and I was going to end up in prison. For a long, long time. \n\n\"I think,\" Jesus I can't believe I'm about to say this. How stupid am I? No one, but no one is this dimwitted, \"I think I need you to remove your underwear.\" This is it, surely she's not going to fall for this. You might as well add twenty years to my prison time. And that will be after she slaps unconscious and beats the living shit out of me.\n\nShe immediately pulled down her thong and let them fall to the floor. Now she was standing in front of me completely naked. \"What do you want me to do now?\"\n\n\"Just hold still,\" I said calmly. Holy crap, I am going to hell for this. I am going to spend a long time roasting in the hottest flames of hell for asking some stranger with a nice rack to take off her underwear and let me feel her pussy. \n\nBut as I put my hand into her crotch and began rubbing the outside of her clit, she smiled with the satisfaction that she was finally getting her pussy sized the way she should have done. I rubbed her a few times and then inserted two of my fingers into her twat. \n\nShe was still smiling, but she tensed a little. \"Ma'am, could you spread your legs apart? And try to relax.\" And I gave her the biggest, most reassuring smile I could, and she nodded at me. \"Just take a deep breath and remember, I'm a professional.\" She closed her eyes and breathed deeply, and I stared at her chest as her massive tits lifted and fell.\n\nAnd just like that, a sense of peace descended upon me, because I know in the pit of my tiny, dark heart that any time spent in prison or hell was now all completely and 100% worth it.\n\nI kept pushing my fingers in and out of her cunt, and I could feel her become wet. Her cheeks became flushed with embarrassment, \"I am so sorry,\" she said as if she were worrying about offending me.\n\n\"It's ok, this happens all the time. Just try to be still.\" I kept thrusting my fingers in and out of her a little more quickly now, and I could feel the inside of her vagina swelling with stimulation. She was starting to breathe faster and her mouth was open and gasping for air, which made her immense tits shudder. ",
        "And as I kept thrusting my fingers into her, I had more inspiration to go even further. \"I'm not sure I'm getting an accurate measurement this way, do you mind if I try something else?\" No fucking way is she going to agree to this.\n\nShe was still gasping for air, \"Sure, whatever you need to do.\"\n\nI took a big gulp that I hope to God she couldn't hear. \"Then please bend over at the waist so that I can determine how deep you are.\" Ok, THIS is it. I thought surely she would realize how ridiculous this entire venture was. This is when it would dawn on her that all of this was a complete hoax. \n\nBut goddamn it, when she obediently bent over and presented her dripping wet pussy towards me, I thanked every fucking star in the sky that ever made a wish come true. I looked in the mirror hanging on the wall and watched her breasts dangle beneath her. She was holding the chair to support herself and she had a huge grin on her face. And you sure as shit know I did too.\n\nI unzipped my pants and unleashed my engorged cock. I kept one hand on her buttock and I used the other to insert my dick into her cunt. She moaned with approval, and I started thrusting myself into her. My hands dug into her soft hips and I pulled her pelvis towards me and shoved my swollen cock into her repeatedly. \n\nBy now I was violently pounding myself into her harder and harder with so much force that her buttocks would shake every time the flesh of my pelvis slammed against her ass. She was grabbing the wall now and clenching her fingers. Her mouth was wide open, as though she were desperately trying to breathe. Her massive breasts were flailing randomly and shuddering with every impact of my body into hers.\n\nI could feel myself ready to cum, and I grasped her ass tightly and slammed it over my cock. I held her hips firmly in place so that she couldn't move as spurts of jism erupted from my cock into her sopping wet pussy. She groaned as her body shook from what appeared to be an orgasm of her own.\n\nWe both took a several breaths before I pulled my cock out of her pussy, now dripping with cum. Suddenly I began to panic that I had gone too far and I tried to think of how to explain what I did as part of some ludicrous method of sizing her pussy. All those thoughts of prison time came rushing back into me, now that my sex-crazed mind was becoming clear again. What the fuck do I do now?\n\nInstead, she looked at me with panic in her eyes. \"Sir, I am really, really sorry about this! I... I don't know what came over me, I... I didn't mean to... you know... orgasm.\" She whispered that last word as if it were some mysterious secret. Now she was just pleading with me, \"I am so embarrassed! Please don't be mad at me! Please!\"\n\nI couldn't believe it, I was the one who had tricked her into bending over and letting my fuck her cunt, and she was apologizing to me! But I brushed my disheveled hair off of my sweaty scalp and put on the most forgiving look I could manage. \"Ma'am, you have no need to apologize. I've been doing this a long time and this isn't the first time a woman.... you know... enjoyed herself during a measurement.\" \n\nShe had such a look of gratitude on her face, and I knew there were Nazis looking down on me from the afterworld commenting on what a terrible prick I am. But then she wrapped her arms around my neck and gave me a hug. I put my arms around her sweaty, naked body and enjoyed feeling her press those impossibly large tits into my chest.\n\nShe loosened her embrace, but still had her arms around me. I looked her in the eye and told her, \"Oh, and just so you know, you are a medium.\" \n\nShe laughed and gave me another big hug. \"Thank you for everything! You are the best bra salesman I've ever had!\" And I smiled. I'm the ONLY fucking bra salesman you've ever had. I may be the worst human being on the planet, but I am the only bra salesman you will ever meet.\n\nShe quickly put her own thong back on, and as she was buttoning up her shorts, she looked at me excitedly, \"In fact, I'm going to go tell your manager right now how wonderful you are!\" \n\n\"Oh,\" I laughed nervously, \"Nononono, you don't need to do that! This is all part of my job! I was happy to serve you!\"\n\n\"No, I insist!\" she said emphatically as she put her bra and blouse on. \"You were so thorough, and I want your boss to know what a wonderful employee you are.\"\n\nI tried to grab her arm, \"Please, ma'am, don't...\"\n\nShe put her finger to my mouth and pressed against my lips, \"Nuh-uh, no arguing! Thank you for being so terrific!\" And she spun on her heel and bolted out of the room.\n\nPart of me wanted to stand there and ogle her beautiful buttocks as she walked away, but I knew I had to get the fuck out there. So I ducked behind as many aisles of clothes as I could, trying to make my way to the exit. As I walked out the door to the parking lot, I looked over my shoulder and saw she had just found a manager and was trying to find me. \n\nI made it to my car and was pulling out of the parking lot when I realized that I never did buy my girlfriend a present. I needed to think of another store to go to and buy something to take home and show her how sorry I was. Except now, things were different. I wasn't sorry. I'm not interested in mending things with her anymore. I am a rotten human being who has no business being in a relationship with anyone. I need to have a talk with her tonight. \n\nBut before I do that, maybe I can convince her to wear that red-lace lingerie one more time. \n\nThe End\n\n***special thanks to LustyLeader for editing services"
    ],
    "authorname": "bobrobertson",
    "tags": [
        "busty",
        "lingerie",
        "mistaken identity",
        "bra",
        "panties",
        "tits",
        "boobs"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-bra-salesman"
}