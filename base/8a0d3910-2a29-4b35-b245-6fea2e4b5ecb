{
    "title": "Writing Smut for Profit",
    "pages": [
        "Writing Smut for Profit: \nIt's Not just an Adventure - It's a Job. \n\nWhoever told you that writing fiction for adult industry publication - for money - is supposed to be Artistic, Fun, or Easy -- LIED.\n\nWriting may look artistic, and creative writing certainly is artistic (that's why they call it Creative Writing,) but writing for a living - writing for publication in the adult industry with the intent to get paid on a regular basis - is NOT artistic - it's NOT always fun and it certainly is NOT easy. \n\nWriting for publication in the adult industry is WORK. Sure, some of it is fun, but the bulk of it is mind-bending, eye-straining work. Don't get me wrong, creativity is part of the job of writing for a living... But if you think us professional writers turn on \"the Creative Muse\" at 8 AM and shut her back off again at 5:30 PM then you are missing the point entirely. \n\n~ The Road to publication in the adult industry is paved with glamorous Half-Truths. ~\n\nHalf-Truth: \"If you write it - it will Sell.\"\n\nWhole truth:\"If you write it, and we are already looking for it - we'll Buy it.\"\n\nIf you have written a spectacular BDSM story and the Publisher is looking for a Lesbian story, they will pass over your wonderful BDSM for a Lesbian one with only half the quality of your BDSM, because Lesbian is what they have an opening for - not BDSM. \n\nAnd when they hang onto your stuff for months - or even years - at a time? Think of it this way: They're probably waiting for an opening that they have the perfect story for. \n\nHalf-Truth: \"Once you're in with a good Adult Novel or Magazine publisher - you're in for life!\"\n\nWhole truth:\"Once you're in with a good Adult Magazine publisher - you have only One Month to prove that you can Write On Demand.\" / \"Once you're in with a good Adult Book publisher - you have only One Year to prove that you can Write On Demand.\"\n\nWhile your name is still sitting on the `net (or the shelf,)- you have until the next publishing cycle to punch out another story equally as good. (One month for your average magazine and one year for a novel.) Only this time, the publisher is going to tell you what they want: \"Gimme the same story, different characters, same plot arc but move some stuff around - oh and this time, don't have them do this, the readers don't like it, have them do that instead.\" (Sigh.) \n\nLook at it this way: You don't have to guess what the publisher wants this time around. \n\nHalf-Truth: \"Once I'm in with a good publisher - I can write whatever I want...\"\n\nWhole truth:\"If you want to stay with that good publisher you better write, what they want, when they want it, in the way they want it.\"\n\nYou're going to tell the publisher that you will only write what YOU want to write? Do you really think any publishing house is going to hire a writer that won't do what they want them to do? Unless you are Susie Bright or Anne Rice: \"Game-Over, man. Game-Over.\"\n\nTime to go back to your desk, find a new pen name, punch out yet another novel - and go through the whole damn thing all over again to find another publisher. Only this time your new publishing house will call your old publishing house and ask what the problem was. Why aren't you with Them anymore? \n\nLet me repeat myself: Do you really think a publishing house is going to hire a writer that won't write what they want them to write? \n\nYou want to make money? Then you knuckle under and Work your butt off to deliver what the adult publisher is asking for. \n\nWriting for a living is about sitting at a desk, in an office, every day and WRITING whether or not you `feel like it'. Does this make you less artistic? Does this mean that you are not being creative? Does this make you a hack writer? \n\nForget all that stuff - it makes you EMPLOYED. \n\nWhat else would you call it? Authors telecommute their work - and progress - to their editors and get paid for it. The faster they write the faster they're paid. The better they conform to the publishing house's demands, the better they are paid. End story. \n\nWriting is NOT about creativity. It's about Money. A publisher is in the business of selling Books or Magazines - not displaying Art or promoting Literature. They are looking for what THEY want, WHEN they want it in the WAY they want it. Period. If you can sneak interesting, different and Creative writing in between their formulaic demands GREAT! They Love that! But in the mean time - the rest of your work had better conform to what they want. \n\nWhat if the Muse strikes and you get a terrific idea? Great! Write it between assignments and make the publisher PAY through the Nose to get it.\n\nHalf-Truth: \"I can make a fortune writing Sex stories...\"\n\nWhole truth:\"You can make a fortune writing sex stories - if you sell it to a top publishing house, and it ends up on the New York Times Bestseller list - in one of the top 5 positions.\"\n\nErotica is currently making a huge sweep in the eBook market. Authors for ePublishing Houses like New Concepts Publishing, Amber Quill, ExtasyBooks and Ellora's Cave are making rather tidy - and regular - royalties on their erotica novels, but not a fortune. \n\nThe Sex-story or Porn Letter on the other hand, is much faster and far easier to crank out at volume. It's also steadier work than erotica and it pays better per word count. ($25.00 to $150.00 per letter at 15,000 words max.) \n\nWhat? Did you think adult magazine Letters were written by Amateurs? Hell no! Those are professional writers. Trust me, A magazine editor will accept and pay more for a letter written by a professional writer than anything written by an amateur. In addition: the more expensive the magazine, the more they'll (probably) pay their writers.\n\nNote: The writing standards for Erotica Markets are higher than those asking for: Sex Stories. Translation: To write erotica, you have to use basic grammar, characterizations and a PLOT.\n\nDoes all this full-time writing sounds like too much work? Ask yourself a very important question: \n\n~ What is more crucial to your personal writing happiness? ~ \n\nYour Artistic Endeavors? \n\n- Then you are a \"Recreational writer\"; someone who writes for the sheer pleasure of doing something creative. You are an Artist. Your future consists of publishing one 'great work', with the possibility of publishing another 'great work' a few years (or more) later on down the road - and never with the same publishing house. \n\nMoney? \n\n- You are a \"Mercenary writer\" who will pump out what ever is asked for in a timely professional manner. You have all the traits of a professional Ghostwriter. Most ghostwriters make better money than most authors - because their books sell off the shelves every time. They're writing under someone else's already established and popular name. \n\nWhat? Did you really think those big-time authors that wrote 3-5 books a year, wrote them All By Themselves??? HELL NO! They have a staff and / or ghostwriters to support them - and that staff gets paid - and paid well. \n\nMaking Money - under Your Own Name? \n\n- That makes you an \"aspiring Author\". Then you certainly have your work cut out for you. This is what Anne Rice writing Adult fiction under the name: AN Roquelaure, and horror author Steven King have done. They worked their butts off writing for their publishers pumping out work after work, after work - all by themselves with no support, until they made a name big enough to dictate their demands to their publishers. And since they don't have a support staff - they don't have to share their profits either.\n\n\n~ How do I know all this? ~\n\nI actually write for a living. I was Associate editor of an adult entertainment magazine. This is where I learned all about writing articles on demand. Somebody had to write all that filler text - and make it interesting. \n\nCurrently I am the copywriter / publicist for one of the largest Internet corporations in the Adult Industry. I write what I'm told to write, when I'm told to write it about things that I'm told to write about, because I'm being paid to do just that. \n\nI'm a Mercenary. \n\n~ Advice to the Burgeoning Writer ~ \n\nWrite every spare moment you have and FINISH your story. \n\nAlways have at least two people read your stuff and check it for: \n\n- Readability: Can you tell exactly what's happening to who? And How? \n\n- Story-Drag: Is it Boring? Did your reader skim over any of your paragraphs to \"Get to the Good Stuff\"?\n\n- Effectiveness: Does it get you hot? \n\nHave at least two more people check your grammar and your sentence structure.\n\nRead the Submission Guidelines carefully. Send the editors `exactly' what they are looking for. `Close' is not good enough. If they are looking for `Romantica' then your story had better be sexually explicit and involve a couple falling in love. You have to have both the sex and the Romance to interest a `Romantica' publisher.\n\nBe willing to work with the editors on requested changes. Many editors try to be gentle with their comments to new authors and have been known to understate what they mean. That does not make their comment random or invalid! If an editor goes to the trouble of noting something about your story, take it very seriously. Remember - you are Writing to Sell and Publication Editors are looking for authors to fill their readers requests. They are there to make their publishing house look good by making YOU look good.\n\n~~~~~~~~~~~~~~~~\n\nMs. Hawke has been a professional writer since May 2001 writing and publishing numerous, Adult Industry related articles for her company. Ms. Hawke is also an published author of (recreational) fiction since 1980, and an Erotica author since 1996. She has two book published."
    ],
    "authorname": "MorganHawke",
    "tags": [
        "publishing house",
        "adult magazine",
        "adult industry",
        "writing sex",
        "support staff",
        "make fortune",
        "great work",
        "sex stories",
        "anne rice",
        "creative writing"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/writing-smut-for-profit"
}