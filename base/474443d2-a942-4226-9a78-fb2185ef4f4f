{
    "title": "Entertaining at Large Ch. 02",
    "pages": [
        "Most of the characters here are introduced in Entertaining at Home and the first chapter of this story. The more linear thinkers among you may want to check them first. As always, comments welcome and thanks to those who have.\n\n*****\n\nIn the end the decision was made for me. An apologetic Steve texted me about six on Friday evening saying they were going to be held up at work for a while \u2013 something about a rushed order for Germany \u2013 and would I let Mr J know they were going to be late. I texted back.\n\n'How late?'\n\n'8 at the l8est. We could meet him there.'\n\n'I'll take him and leave when you get there if it's not my scene.'\n\n':).'\n\nThe Crown was packed when we arrived. It looked like George might even have underestimated his top guess. The crowd seemed nearer two hundred to me. I had to push a passage for Mr J and myself to the bar. All the local engineers I had ever seen were there, as well as quite a few of their colleagues who had never been in before. They were distinguishable by the paper hats they were wearing: supermarket-crackers' finest design. They had obviously been there for some time, the flushed faces and shouted, off-duty banter were a dead give away. George's notice about booking your Xmas party had clearly paid off.\n\nThe big room had been filled with tables. I found myself wondering where they had been kept the rest of the week as I steered Mr J through a narrow passage between occupied chairs. There was an air of expectancy among the men. I could not but notice that I was being checked out big time. One man blocking our way elbowed his mate to get his attention and they both looked me up and down grinning. They jumped when I asked them to let us through, muttering apologies. They then made a big play of acting as our escorts, clearing a path much more efficiently than I had been able to do.\n\nWe eventually made the clearing in front of the bar. I smiled thanks to the two men. \n\n'Our pleasure. Got to keep the ladies happy, haven't we?'\n\nI had no idea what he was talking about, but I noticed a space at the bar and headed for it. The gap was made by an unoccupied bar stool. It had a \"reserved\" notice taped to it. I looked around for the VIP and spotted Tracy sitting on the adjacent seat.\n\n'Hi Tracy, remember me?'\n\n'Susan right? The stool's for your guest. George made me bloody sit here until he arrived.'\n\nShe was dressed porno-schoolgirl style. Her short tartan skirt was split at the thigh; she had obviously given up trying to hold it closed. I could see white cotton panties beneath it, as could the half-a-dozen bleary faced men who were staring at her unashamedly from the nearest table. Her tight white blouse was tied beneath her breasts; a loose tie was knotted at the collar. I noticed she had bleached her roots and tied her hair in two bunches.\n\n'This is Mr J. He's come down especially to see you. Mr J, this is Tracy. She's the star performer.'\n\n'A pleasure to meet you, Tracy. May I buy you a drink?'\n\n'Nice to see you too, Mr J. There's no need. Mine are on the house. George wanted your seat kept safe.'\n\n'Big crowd in.'\n\n'Never seen so many.'\n\nWe were shouting to make ourselves heard. I had one arm around her shoulder and the other resting on Mr J's. I felt him slip his hand round my waist. Cheeky devil.\n\n'Looking forward to going on?'\n\n'Too right. They're gagging for it. Might make enough for a holiday with my little lad.'\n\nShe grinned at me and jiggled her tits. It made me laugh. I heard Mr J join in.\n\nI looked around for service. There were three middle-aged women serving a steady stream of customers. I had never seen any of them in the pub before, but from watching them banter with the guys ordering drinks I guessed they were regular Friday night staff. One of them, another bottle-blonde with the biggest breasts I had ever seen, was pulling pints at breakneck speed whilst chatting to the guy who had ordered them. She glanced across at me and smiled. I smiled back. She mouthed \"Susan\". I nodded. She came over when she had finished her transaction and rested her weighty mammaries on her folded forearms as she leaned across the bar to talk.\n\n'Susan, right? You must be her guest. Pleasure to meet you. What are you having?'\n\nI had been impressed with the size of her tits. I thought for a moment Mr J was going to disappear, eyes first, into her cavernous cleavage. He looked across at me for guidance, so I ordered two pints of George's best. They arrived in seconds, along with another alcopop for Tracy. This woman knew her job. She waved a meaty hand as I fished in my bag for my purse.\n\n'First one is on the house. George wanted a word when you arrived. He's in the Ladies. Tracy, you keep Mr J entertained until Susan gets back.'\n\nWith that she was gone, back to the melee further down the bar, shouting for the next order. I turned back to Tracy.\n\n'My mum.'\n\nShe said matter-of-factly and applied herself to the new bottle as if the madness around her was normal. I had questions: what was George doing in the Ladies? What was so urgent that he needed me? But mostly where did her mum get bras big enough to encase those mountains? And I suppose a bit of my mind was wondering what her mum thought of her daughter stripping. I thought about asking Tracy, but the noise was overwhelming. I put a hand on her shoulder and mouthed \"I'm off to see George\" when she turned to me. I bobbed my head towards Mr J and she nodded. Mr J grinned at me and the two of them put their heads together. I took a gulp of my beer before plotting a mental route to the toilets and heading down it.\n\nThe noise lessened as I entered the corridor which held the toilets. As the Ladies' door closed behind me, it virtually disappeared, to be replaced with a woman's soft sobbing. It was coming from a stall at the far end of the cool, tiled room. I approached cautiously.\n\n'Hello. Need any help?'\n\n'Susan. Thank god you're here.'\n\nGeorge's head appeared around the edge of the door. He was flush-faced and clearly in some discomfort. I looked around the cubicle to see he was kneeling on the floor cradling a sobbing girl's ankle on his lap. I looked down into the beautiful face of a stunning redhead. Beautiful, that is, if you ignored the rivulets of mixed tears and mascara streaking her face.\n\n'This is Scarlett. That's her stage name anyway. She's slipped and twisted her ankle. Maybe broken it.'\n\nI had done some first aid at work. The ankle resting on George's meaty thighs looked like some of the photos from the training course. Almost certainly broken, I thought.\n\n'Go and see if the ambulance has arrived will you, love? Use the beer garden gate and bring them through that way, will you?'\n\nI did as I was told and opened the gate just as the blue lights of the approaching vehicle lit up the dark street. Two cheery, green-clad paramedics exited the vehicle and came up to me.\n\n'Hello, ducks. We're looking for a possible fracture.'\n\nThey followed me back to the toilet and immediately took charge. One of them helped a groaning George to his feet as his colleague fished in a bag for some pain relief. Scarlett's cries seemed to get louder now that help had arrived. George, hands in the small of his back as he stretched, nodded me over to the corner near the door.\n\n'Nice to see you changed your mind. You're looking good.'\n\nHis eyes were glued to my chest.\n\n'Eyes are up here, you old pervert. What the hell's going on?'\n\nWe were interrupted by the ambulance man who was obviously the senior. He quickly announced they were taking Scarlett to hospital and moments later she was wheeled past us, quieter now, but still crying. George leant down and whispered something to her, fishing some notes from his pocket and pushing them into the handbag on her knees.\n\n'I'll be down to see you later, sweetheart.'\n\nHe announced to her retreating back. We followed them out and closed doors and gates. With a jerk of his head George signed I was to follow him and after checking there was nothing left behind in the toilets we went through a side door marked \"Snug\" I had never noticed before. It was one of those old-fashioned back rooms all pubs used to have. The once comfy seats were now in a worse condition than those in the main bar. Cases of spirits were piled on most of them. George hoisted his bulky frame onto a bar stool which creaked alarmingly and nodded to me to sit down next to him. He tinged an old-fashioned, hotel reception-style bell and let out a sigh which seemed to start at his boots and end somewhere in his receding, unkempt hair. He looked old, I thought. \n\n'So. Got any plans for tonight? I need your help.'\n\n'My help.'\n\nI kept my tone neutral. George was not a man who inspired immediate trust. I knew I liked him enough to do what I could, but he was not someone to whom one gave a blank cheque. I waited for him to continue, but we were interrupted by the arrival of the busty barmaid carrying two pints.\n\n'Your friends have arrived, love. I've introduced them to Mr J. He's a bit of a character, isn't he? Our Tracy's in stitches.'\n\nGeorge interrupted her flow with a raised finger. I was speculating on what an OAP could possibly be doing in a crowded bar which would be so entertaining for a twenty-year-old.\n\n'Thanks Mandy darling. Give us a moment will you. I'll be through shortly.'\n\nFor a big woman - and she was a big woman, you don't get breasts like those on a diet - Mandy moved remarkably quietly. She had gone before I had time to thank her. I turned back to George and resumed my wait.\n\n'It's like this, Susan. I've got the biggest crowd in there this pub has ever seen. They've come for a good, old time, back street pub Xmas bash and so far they're getting one.'\n\nI nodded. For all the overcrowding the mood in the bar had been good natured and happy. We could hear laughter and shouts coming through from next door and cheers as someone dropped some glasses. George smiled. It was disconcerting.\n\n'They're a good bunch, most of them mates of my regulars. It could be the best night I've ever had here. I'm seriously concerned I might run out of ale.'\n\n'I'm not quite sure why you're telling me all this.'\n\nSomewhere in George's rambling there was a point. I needed him to get to it. He took a deep breath and locked his eyes on mine.\n\n'I need a replacement stripper. That silly tart Scarlett is obviously a no-show. I told the daft bint not to wear her platforms to the toilets...'\n\nHe shook his head.\n\n'My sister's girl. Nice lass, but not too well endowed in the brains department. I'm not going to try and scam you, Susan, it's a seller's market. I'll pay you whatever you ask.'\n\nI was expecting him to continue. He didn't. That just left me with my thoughts. Which were far from helpful. My pussy had moistened as soon as George made his proposal. I had been flattered by the attention I had received in the bar. Most of the men who had seen me must have assumed I was a stripper. Their stares and not-too-private comments made that clear. The thought of taking everything off in front of that bleary crowd was a turn on, I had to admit. \n\nOn the other hand, my stomach was tight and my butt clenched. I was nervous as hell. Could I do it? What if something went wrong? What if they didn't like me? That last, I told myself, was nonsense. That lot would cheer anything with tits and no knickers. I found myself smiling. My last concern was the lads. I definitely did not want to go back to being looked at as a bit of a tart who might be an easy lay. I told myself I wasn't being fair to them. But lads are lads as I knew too well from their own tales. I ought to play hard-to-get\n\n'I haven't got anything to wear. Or not wear if you know what I mean?'\n\nMy mouth never could follow instructions from my brain. George burst out laughing in loud guffaws. The chair beneath him creaked and I could see waves of fat undulating beneath his shirt. It took him a full minute and the rest of his pint for him to compose himself.\n\n'I told you before, there's loads of costumes here. Naughty Nurse, French maid, Miss Whiplash. Take your pick. You're a life saver. But if I were you I'd just take off what you've got on for the first set \u2013 sexy, but sophisticated, a bit of class \u2013 go dirty girl for the second strip. Knock their eyes out.'\n\n'Hold on George, I haven't said yes yet.'\n\nHe winked at me. For him, it was obvious a decision had been made And I was just playing him for more of a fee. I looked at what I had on. I had just pulled a skirt and blouse out of a drawer without thinking too much when I got the text from Steve. I had on a silky deep purple blouse and a beige skirt. It was on the short side \u2013 about two inches above the knee \u2013 but by no means a mini. The mauve stockings I had found matched my underwear. They might just do, I supposed. I thought of my performances for Mr J. I was confident that with the right music I could put on a show.\n\n'All right. I'll do it.'\n\n'Wey, hey.'\n\nGeorge was beside himself. We agreed a one hundred pound fee, not that I was thinking of the money and he went through the running order.\n\n'It's about eight now. I'll go out when we've finished here, tell a few jokes, get them warmed up, you know the sort of thing, announce the two acts. Then we'll get Tracy on. She's doing a schoolgirl thing for starters, you might have seen her out there.' \n\nI nodded.\n\n'Right one, she is. It'll take about five minutes for her to strip but a good fifteen to twenty minutes for her to get round with the jar. She loves it, parading naked around all those blokes. You just watch her.'\n\n'I'm really not sure about the jar thing. It's one thing standing on a stage, but walking around...'\n\nMy voice trailed off. My mouth was dry and I could feel my lips sticking together. I took a long swig from my pint.\n\n'Don't worry. You'll be fine. And on a night like tonight the tips will be mega. Anyway, after she's done I'll give them another ten minutes or so to get more beers in, go for a wank and what have you, then I'll announce you. You want a stage name, or is Susan OK?'\n\n'I like Suzette better. Bit more tarty.'\n\n'Suzette it is. Anyway, you do your thing, round with the jar. Few more jokes from me, bit of an intermission then same again. Second strip's usually a bit more raunchy.'\n\nHe started to ease himself off the stool again. I held up my hand to stop him.\n\n'Raunchy?'\n\n'Just watch Tracy. I'll get Mandy to bring down some costumes during the first half; there'll be no beer bought whilst you two are at it. You can change in here. You'll be fine.'\n\nHe smiled at me again and this time succeeded in heaving himself upright.\n\n'Your mates have got a table down the front - I arranged it with Steve \u2013 you can watch the first bit from there. Just step up onto the stage when I call you.'\n\nHe held the door for me and locked it behind us. We both went through to the main bar. If anything it was more crowded than before. All the blokes in there were red faced; it was almost as if the walls were sweating the heat was so intense. There were two pints on the end of the bar waiting for us. George handed me mine and then, with a wink, pushed his way towards the stage. I followed; George's bulk left a wide corridor.\n\nThe lads and Mr J we're delighted to see me. Mr J and Piotr both stood as I arrived and indicated an empty chair between them. Steve and Wot sort of half-waved; Luke pushed another full pint across to me. I was nervous and feeling a little sick as the full implications of what I had agreed to do hit me. Our table was right up against the stage. It was loaded with glasses, including two of those old pebble-glass pint posts with a handle. They were empty. I nodded and smiled round the group but was not taking in anything that was said to me. I found myself tugging at my skirt hem repeatedly in some sort of nervous reaction. George's patter brought me back to reality.\n\nHe started his spiel with a few minutes of banter with the audience. He singled out people he knew among the locals stinging them with catty one-liners or recalling incidents which had happened in the pub. They usually involved vomiting, or knee-tremblers, or both; and always took place in the beer garden. His jokes, the next bit, were truly awful. They were mostly about blondes with big tits, vicars and, of all things, travelling salesmen. They must have come out of a nineteen-fifties blue jokes book. But, credit where credit is due, the audience lapped them up. The jeers and groans grew louder as he went on, and on. Eventually, he held up a hand and called for quiet.\n\n'All right boys. We all know why we're here.'\n\nHe paused for effect.\n\n' The beer right?'\n\nThere were enthusiastic boos and a cry of \"get the strippers on\" which was warmly applauded by most of the men there.\n\n'OK, OK. I know when I'm beaten. Now gentlemen, we have a couple of real crackers for you this evening. I found the first one making a mess of her homework in the back bar when I turned up tonight. She tells me she wants to break into showbiz and asked if I could give her a hand. I told her if she gave me a hand she could break anything she wanted. So now please give a warm hand to your favourite and mine: Tracy.'\n\nHe stepped away from the stage pulling the chair he had been leaning against back with a flourish and Pink Floyd's \"The Wall\" boomed out of the speakers. I straightened in my chair. I wanted to watch Tracy's act to see if I could pick up any pointers. I don't know how she got to the stage, but suddenly there she was skipping girlishly around the edge of the platform. It was only about eighteen inches high and bathed in bright white light from spots in the ceiling above; the rest of the lights in the place seemed to have been dimmed. Tracy used the whole area.\n\nThe school outfit was augmented with a huge sticky lolly which she licked enthusiastically as she moved. The crowd whistled and cheered as she moved. Some of the men clapped along with the beat, others stamped their feet. The room was rocking. Tracy stopped licking and skipping after a minute or so; she walked to the front of the stage and leaned to deposit the sweet in one of the empty jugs. She fluttered her eyes at Mr J who blew her a kiss. They obviously had got on.\n\nThe nature of \"We Don't Want No Education...\" lent itself to an aggressive, jerky kind of dance. Tracy exploited the stomping rhythm to the full. She flung the hat into the crowd after one line and started tugging at the tie. It eventually came loose and she tossed it over to Mr J. There was definitely something going on there, I thought. She danced and stomped around for about thirty more seconds before starting to play with the knot at her belly.\n\nGive a girl her due, she knew what the men wanted and was prepared to give it to them. They wanted her naked and she proceeded to deliver in double-quick time. The shirt buttons were undone in almost an unzipping motion. She let it hang loose while she dealt with the skirt. It fell off her with the motions of her dancing one she had loosened the catch at her waist. She then flashed each corner of the crowd before discarding the shirt in an almost nonchalant shrug of her shoulders. She wasn't wearing a bra and the crowd exploded with renewed whistles and catcalls.\n\nHer boobs were large but not pendulous. She kneaded them like large balls of dough lifting one, then the other, to massage her nipples with her tongue. The men loved it. The noise notched up another few decibels. She was standing in her white briefs and matching knee-socks. She played with the panties a little, stretching the thin fabric over her pussy and rubbing herself vigorously while she did so. Her head was thrown back in mock ecstasy and her tongue flickered over her lips. The knickers came off in one smooth movement and she pranced around the stage spinning them from an upraised finger.",
        "There was laughter as she suddenly stopped in the centre of the stage looking down at her socks as if she had noticed them for the first time. She grinned and pulled the chair George had left behind him into the full glare of the lights. Sitting legs akimbo she rolled off the remaining garments as if getting ready to shower, oblivious of the hoots and whistles, but clearly aware that her pussy lips were gaping as she wriggled. The last task completed she stood, pranced to the centre of the stage and slowly raised her arms aloft as the track came to a close. The roar was deafening and continued well after the lights were turned up again.\n\nI was impressed. The performance had looked completely improvised but the timing was obviously impeccable. I looked round at the lads. They were all adjusting their clothing and exchanging appreciative grins as they did so. Mr J was on his feet clapping enthusiastically. His face was shining; he looked at least twenty years younger. The tightness returned to my stomach accompanied by the sharp tang of bile in my mouth. There was no way I could compete with that. It was going to be a complete fiasco. I had a desperate need for the toilets. I felt like I was going to throw up.\n\nI elbowed my way through the the sweating men who only had eyes for the stage. Tracy was jiggling her breasts and giving little bows as the cheering continued. I pushed through into the cool and the quiet of the toilets. After a couple of deep breaths, the need to vomit became overwhelming. I made the stall just in time. I breathed deeply after I finished retching, trying to dispel the cold shivers I always get when I throw up. I almost jumped out of my skin when a hard finger tapped me on my shoulder.\n\n'Here, wipe your mouth with this.'\n\nIt was Mandy, she was holding a tray. She handed me a towel and when I had finished a glass of water to rinse with. That was followed by an expertly poured cap of mouthwash and finally a small glass of vodka. I sat on the toilet still feeling a little lightheaded, but my breathing was back to normal. I looked up at Mandy. She was smiling and wordlessly asked my whether it was alright for her to smoke by waving an unlit cigarette. I nodded and she offered me the packet. I have never smoked, but that was the nearest I have ever come to starting. I made myself shake my head vigorously.\n\n'I was just like you. Brought my guts up every night when I started.'\n\n'You, you were a stripper too?'\n\n'How do you think I met George. About four nights a week for ten years until I had our Tracy and then this.'\n\nShe ran her hands over her plump body and let out a nostalgic sigh.\n\n'What you've got to remember is that you're in charge. You're the one with the knockers and the snatch. They want to see 'em? They'll get 'em on your terms. Just go along with the music.'\n\nShe reached down and squeezed my shoulders. I had another moment of panic. The music. I hadn't chosen the music. I stuttered my worries to Mandy.\n\n'Don't sweat it. George knows what he's doing. Been watching women take their clothes off for most of his life. Dirty git.'\n\nWe laughed together and despite myself, I had to admit I was suddenly feeling more confident.\n\n'What was in the vodka? It tasted sort of minty.'\n\n'That was the mouthwash you silly tart.'\n\nWe both laughed some more and I got to my feet, straightened my skirt and ran fingers through my hair. I shook my head and that got rid of the remains of my dizziness.\n\n'You look beautiful, you're more than that lot deserve. You get any more nerves, just look to the bar. We'll all be there egging you on.'\n\n'Thanks Mandy, you're a life saver.'\n\n'And don't worry about your clothes. Just drop them on the stage. I'll collect them and hang them in here for you. They'll be waiting when you've finished going round with the jar.'\n\nShe nodded towards a hanger holding Tracy's outfit. It was hooked over the side of the mirror by the sinks. I smiled. I had never considered the mechanics of getting dressed again until now. It was somehow reassuring as I walked through the door which Mandy held for me. I felt like a gladiator must have when entering the arena.\n\nThe bar was quieter. There was a general hubbub punctuated now and then by loud bursts of laughter as friends responded to someone telling jokes. There were nine or ten men still waiting for service, but most had got their drinks and were sitting at the tables talking animatedly. I noticed Tracy at the far side of the pub. She was still naked, posing for selfies with customers who dropped money into her jug. Most was coin but there were a fair few notes, I noticed. She smiled and waved as she saw me watching her. I waved back.\n\nGeorge was serving, but saw me standing there and indicated a full pint sitting on the bar near me. He held up five fingers and gave me a smile. It was nearly time for my debut. The butterflies fluttered back to my stomach so I took a large gulp of beer to drown the little sods.\n\nAt the table, the lads were standing round a seated Mr J. He was obviously telling them some story as they were all listening carefully before bursting into laughter. Piotr had to explain some subtler point to Wot. I put my glass down and sat at the empty chair nearest the edge of the stage. They all turned to me.\n\n'Where the bloody hell have you been all night?'\n\n'And where's ours?'\n\nI reached across the table for my bag and fished out some cash which I handed to Luke. \n\n'Still in the pumps mate, waiting for you to collect them. One of the girls had an accident. George wanted me to help. She's been taken to hospital. I just wanted to make sure she was OK.'\n\nThere were general expressions of concern. Mostly that a replacement had been found, the state of the patient was an afterthought to all but Piotr. The comments about Tracy came thick and fast. She was clearly a hit with the lads.\n\n'Where have you been hiding this one?'\n\nSteve nodded at Mr J who looked suitably immodest.\n\n'He's got the filthiest jokes I've ever heard. Says they're true stories. That Tracy was almost wetting herself.'\n\n'They're all true, I assure you. Except the one about the two nuns.'\n\nHe paused.\n\n'There were really three of them.'\n\nThey all burst out in familiar laughter. I joined in even though I had no idea what I they were talking about. The jollity was interrupted by George coughing into the microphone. My stomach ratcheted up another notch.\n\n'All right, all right. Settle down, you lot. You, Bert. Put young Tracy down. She's due back at the convent tomorrow and they'll be inspecting her arse for hand prints.'\n\nHe let the wits in the crowd have a few goes at ripostes before holding up his fat hand again.\n\n'Now, on a more serious note, I have some good news, some better news and some bloody fantastic news. The good news is we've run out of lager, your tastebuds will thank you later; the better news is that there's still plenty of beer. Delicious, locally-brewed and at a bargain price. Your chance to become instant connoisseurs. What more can you ask for?'\n\nFrom the barracking which ensued it would seem \"rather a lot\" best fitted the bill. George gave them a few seconds before resuming.\n\n'Now for the best news. Our next entertainer, a woman of spectacular looks and peculiar good manners, has been a regular here for some time. I've lost count of the number of occasions she has begged me, begged me on her hands and knees, to be allowed to perform on a Friday.'\n\nEven I found myself laughing.\n\n'Now I'm a reasonable man. A man who likes to help out where he can.'\n\nThere was little agreement from the floor.\n\n'So when she offered me cash, this evening, I had to say yes. She said she had never seen such a good-looking bunch of fellas gathered in one place. I did mention her eyesight problem, didn't I? So now, without further ado, I give you, making her international debut, the beautiful, Suzette!'\n\nThere was laughter and some desultory applause as George reached down a hand towards me. I grabbed it and it's a good job I did as, when I stood, my legs almost gave way. He hauled me up beside him and I became aware of music starting.\n\n'Don't worry, it's on a loop, you take your time, we'll finish it when you do.'\n\nHe squeezed my hand, kissed me on the cheek and was gone. \n\nThat was my \"oh shit\" moment. \n\nI was on my own; in the middle of a stage; lights so hot they were almost burning; in front of a crowd of half-drunk men who had already undressed me with their eyes and were impatient to see if reality matched their fantasy.\n\nTwo things saved me from theatrically fainting, or sprinting for the doors. First, I looked down at the lads. They all had expressions of surprise and something like delight. Wot was especially pleased. He had his fingers in his mouth and was letting out piercing whistles. Mr J gave me a thumbs up sign. The second saviour was the music. It was \"The Stripper\"; the full orchestral version. It took a moment or two for the realisation to seep through my panic, but once it did, it was the easiest thing in the world to start moving.\n\nThe music seemed to be divided into even, short phrases. I just fell in with it walking, I hope sedately, across the front of the stage, punctuating each section with a shake of my hips. I remember thinking I should download it for Mr J's bedroom shows. I was soon loving it.\n\nWhen I blew a kiss to Wot for his encouragement, it brought a cheer. So I did it again. Who wouldn't? I raised my hands above my head to shake my tits for the crowd and used their distraction to undo the buttons at the wrists of the blouse. The buttons at the front were next. I turned my back on them all to pull it from the waist of my skirt and spent a few moments shaking my shoulders with arms outstretched before turning to do the same thing facing them. The appreciation was evident and I felt a sudden dampness when I saw one of the men I knew to be from the engineering firm carelessly rubbing his groin as he watched me. This was working.\n\nI slid the blouse over one shoulder whilst scanning the crowd for evidence of more erections; there was plenty. Down at the front table the boys were wriggling to adjust themselves. I saw the same motion elsewhere in the room. Remembering my first performance at home, I was at least grateful none of them had their cocks on display. With the other shoulder exposed, I dropped the blouse to ear-splitting whistles. There were shouts of \"more\" from the back. I blew another kiss to them. I strolled back and forth at the front of the stage bending from the waist at each corner and in the middle to give them all a view of my cleavage. From the noise I'd say they liked it.\n\nThe skirt fell straight to the floor once the zipper was pulled ever so slowly down. I kicked it to the back of the stage. I was loving this; the noise from the men was coming in waves. It almost made my skin tingle as I strutted around in my underwear. My only worry was that the juices I could feel dampening my panties would start running down my leg. If this was stripping, then give me more of it.\n\nI drew the chair front and centre just as Tracy had done and sat down as decorously as I could manage. I was breathing heavily from both the exertion and the excitement. I took a break, crossing and uncrossing my legs, making sure that everyone got a good look at my privates as I did so. Unclipping the catches of the suspenders on my left leg, I felt the wetness when my arm accidentally brushed my swollen pussy. The material of my panties was now glistening in the harsh light. I shuddered slightly from this briefest of touches, so made great play of slowly rolling down the stocking. I took off my shoe and placed it in front of me before stretching the thin nylon hose and making it finally spring off. From the cheering you would have thought they had never seen it done before. I beamed down at them.\n\nThe first stocking I pulled across my breasts before stretching out a hand and dropping it to the floor. The second I just tossed off the stage. I saw Luke catch it as it fell towards the boys' table. Shoes back on I whipped off the suspender belt as I stood. It went towards the back of the stage to join my skirt. I realised I had no idea how long I had been on. I tried to get an idea from the music, but given the simple repetition of the classic number we could have been on the first playing or the third. \n\nThere was an almost palpable ramping up of the excitement, both in the audience and within me, as I walked around stroking my bra-covered breasts or shaking my shoulders to make them wobble. Looking down, I could spot one or two men whose tongues were actually hanging out. We were heading for the finale and none of us could wait.\n\nThe classic move of slipping one strap off my shoulder and then the other seemed appropriate for the classic sixties number. So that's what I did. I slid out my arms and raised them high. I could feel my breasts move more freely. I thought about turning my back to tease them some more, but decided instead to undo he clip and hold the cups of the loosened bra in place. I could hear Wot's whistles and some calls of \"off, off' from further back in the crowd. I gave a little nod and a grin towards where I thought the calls were coming from and threw my hands straight up, releasing the flimsy garment to fall behind me.\n\nI've always liked my breasts. They are a C-cup, perfectly symmetrical with nipples which point slightly upwards in the centre of tan areolae. They made a lot more fans that night. I made them dance as I moved. My arms were either held high, or folded with hands behind my head. Either way, every movement made them shake. They were now slick with sweat and they glistened in the light. Hell, I would have paid money to see them. The whistles and shouts almost drowned the music. I could tell I had a big smile on my face, I could feel the muscles starting to cramp.\n\nA few calls of \"more\" broke into the general tumult of noise after some time and the cry was gradually taken up by others. A few guys were stamping in time with the music, others banging on the tables or clapping. I lowered my hands to the sides of my panties and was left in no doubt as to what it was they wanted more of. I toyed with the elasticated waistband, teasing them mercilessly. I was stimulating myself with the feel of stretched lace over my swollen lips and was savouring the moment. I would slip on side down before pulling it back up, ease down the top until the top of my pussy was almost exposed before releasing the tension. The bit I enjoyed most was pulling them taut so I got full pressure on my clit. I was definitely going to need some private time when this was over.\n\nI eventually turned my back to them all as I sensed the track was reaching the end. With thumbs hooked on both sides of the knickers I slowly eased them down to my ankles, bending from he waist as I did so. Stepping out of them was harder than I expected, one side got tangled in my shoe and I was red-faced from the bending and slight embarrassment at my clumsiness when I eventually stood up and turned to give them the full Monty. \n\nThree things happened almost simultaneously. The music ended leaving just the deafening noise of the crowd; the lights came up in the room giving me a clear view of the watchers for the first time and my brain gave me the news that it had no idea what I was going to do next. I looked around. I was breathing heavily, I could feel my breasts rising and falling in time with the blood thudding in my ears. My grin was almost rictus, I opened and closed my mouth to relieve the stiffness and to get more air into my lungs. I saw Mandy clapping enthusiastically at the end of the bar. She gave me a thumbs up. But I was beginning to panic a little. The men had all pushed forward towards the stage as my performance had progressed and they were packed tight around the front tables. I could see no route through them.\n\nIt was Wot who came to my rescue. He picked up the empty jar from the table and dropped in a five pound note and a few coins before handing it to me. When I took it he offered his hand to help me down. I grabbed it gratefully. I was quickly surrounded by my friends. Steve hugged me and Luke patted me on the shoulder. I spotted My J at the back of the group clapping politely. Piotr and Wot were saying something to me but I could hear nothing over the noise. The lads all put their hands in their pockets and I felt the weight of pound coins dropping into the jug. Mr J leaned forward to stuff in a tenner.\n\nI looked around to see if there was a way clear for me. About five feet away, behind a gaggle of his ogling mates a guy was holding up a fiver, so I tentatively stepped towards him. I could feel at least two large hands on my arse \"helping\" guide my passage.\n\n'How about a photo?'\n\nThe man leaned to shout in my ear as he pushed the note into the glass. I must have made some sort of affirmation as he threw a strong arm around my shoulder gripping my arm tightly in a rough hand and adjusted our position as he stared at the phone he was holding up in his other hand. I grinned wearily and turned away after the flash. There were more hands on my bottom and another man was holding his phone in readiness as his mate released me. I shook the jar at him and he dropped in a handful of coins.\n\nAnd so it went. I was almost passed from one man to another around the bar. I was grateful to notice that Piotr was shadowing my progress, but a body guard was not really necessary. Most of the punters were respectful. Well respectful for a strip pub. The rules seemed to be that my bum was fair game but, as Tracy had said, they all kept their hands off my tits. I felt the odd thumb stroke the underside of a boob as I was gripped around the waist for yet another selfie, but that was all.\n\nThe men's reactions varied as I progressed. Some were crudely enthusiastic offering comments on my tits and arse which were almost poetic. A few quite blatantly said they'd like to \"give me one\" and one guy pushed a ten pound note into the jar and leaned in to tell me he'd written his name and phone number on it and would I call him for a private session. I shook my head and turned to check Piotr was still in attendance.\n\nOther guys were more polite. They would ask for a picture and usually drop a note into the jar. The ones who put in coins generally said \"thank you\" or \"that was great\" as they did so. They helped me gain confidence. Soon I was almost completely unaware that I was still naked among them. I remembered noticing Tracy's similar nonchalance earlier. I would comfortable squeeze up next to a man wanting a selfie, or push myself into the centre of a group without worrying. At one point Piotr took the jar from me and handed me an empty one. I watched as he passed the full glass over a few heads to a grinning George.\n\nThe last group were the terminally shy. They would almost try to get away as I approached them, or reach out to drop coins from a fully extended arm. None of this group would meet my eyes. I began to spot the ones who clearly wanted more and would ask them as quietly as their mates grinned at them if they fancied a picture. I started rewarding this group with a kiss on the cheek when the snap was completed.\n\nI have no idea how long the circumnavigation of the large room took. It seemed ages to me, but whenever I looked to the bar there still seemed to be a press of men seeking beers, so I guess it could not have been that long. Eventually though everyone who wanted a photo had one and I had hustled so much change from the rest that my wrist was aching from holding the second jar. As we neared the entrance to the corridor leading to the toilets I handed it to Piotr and headed for the Ladies. \n\nThere was a short queue of men snaking from the nearby Gents. They were all leaning against the wall swapping jokey comments as I passed. One reached out and slapped my bum. It stung and made me jump and let out a little shriek. I disguised the frisson of pleasure it gave me with a deep frown. If I was going to take up spanking it was not going to be in the queue to the bogs in the Crown and Anchor.",
        "I had never seen a queue for men's toilet and it was only when I made the sanctuary of the Ladies and leaned back against the door to take a deep breath that I realised why it was there. George had not been joking when he said blokes went to masturbate after the acts. I did not know whether to be flattered, or throw up again. My relaxed stomach told me it had better be the former and I found myself thinking about where all the spunk was going when they came. Glad I'm not the cleaner I told myself.\n\nIt was cool in the Ladies and I realised I was getting goosebumps on my arms as my sweat dried. I looked around for something to cover myself with and saw that, true to her word, Mandy had hung my clothes from the mirror where Tracy's had been earlier. I also became aware of a strange noise coming from the end cubicle. It sounded as if a small animal might have got trapped in there. Pulling on my blouse, I went to investigate.\n\nMy co-performer was being fucked against the open stall door. Both she and the skinny boy who was servicing her were letting out quiet grunts as they went about their business. That had been the noise I had heard. I froze, uncertain what the etiquette was in these situations. Tracy had her legs locked around the boy's waist, her arms thrown over his shoulders. She was still naked. Her eyes were closed, her head resting against his. His jeans, pants and belt were around his ankles and his pink, polyester polo shirt was stretched and wrinkled where his partner had grabbed the cheap material in her fists. I was fascinated, impressed with the power as he thrust himself into her despite her weight, but a little repelled by the angry red pimples on his buttocks. He was trying to lean his head down to suck a bouncing nipple at the same time. Tracy opened her eyes and spotted me watching.\n\n'Hi Susan. You want to pee? We'll be done in a minute.'\n\nTalk about cool. I just had to laugh.\n\n'No, you carry on. I can wait.'\n\n'Keep watching if you like. We don't mind, do we Barry?'\n\nShe bucked harder against him. I could not work out whether his grunt was affirmation, or just the expression of his extra effort. I stayed where I was touching myself below the cover of the silky blouse. I was horny before entering the room; had got hotter watching the copulating couple and was desperate for release when I slipped a finger between the swollen folds of my pussy.\n\n'Enjoy yourself? You looked great, the bit I saw.'\n\n'Thanks. I did.'\n\nThis was bizarre. She was speaking in short pants with her enjoyment of the boy's efforts, but the conversation was banal. I had found my clitoris and was massaging it. I could feel y whole body flooding with warmth and a certain weakness at the knees.\n\n'Barry and his mate were turned on too. Weren't you?'\n\nShe grabbed a handful of his hair which elicited another grunt.\n\n'They dragged me in here after you took your blouse off. Said they couldn't wait any longer.'\n\n'His mate?'\n\n'He went first. Probably in the bar now supping beer.'\n\n'He your boyfriend?'\n\nI remembered her saying when we first met how randy her stripping made him. I was finding it hard to form words as I watched, transfixed.\n\n'Oh no. He's out at the footie, some sort of cup game. Barry's just one of the crew.'\n\nI guess I should have been shocked. But Tracy was obviously completely happy with her sexuality so I just smiled at her.\n\nAny further conversation was knocked on the head by Barry's orgasm. It was an undramatic affair. His grunting and thrusting suddenly came in shorter bursts. Tracy closed her eyes again and let out a series of small oohs, and then they were done. Barry sort of leaned against her and the two slid down the door until Tracy's feet touched the floor. There they stayed for a few seconds, propped against each other and breathing heavily. I rapidly followed them letting out sharp cries as the awaited orgasm shook my body. Stars burst on the inside of my closed eyes. It took several moments for me to recover.\n\nBarry's condom-sheathed cock slipped out and he moved quickly to grab himself and remove it. He dropped it in the porcelain bowl as Tracy pushed against him to grab a handful of tissue with which she wiped herself. I slipped by her and plonked myself on the stall letting out a short groan as the my bladder emptied itself. Barry hoisted up his trousers and with another grunt was gone. He was never going to be conversationalist of the year. Tracy stayed looking down at me.\n\n'So. You enjoy yourself?'\n\n'Too right. I was a bit nervous at first. But, yeah. It was good.'\n\n'Gonna do it again?'\n\n'Don't know. Probably. It was a real turn on. But, you know...'\n\nI trailed off. The thrill had been massive. I couldn't wait to get out and do it again tonight. But part of it was the unexpectedness of it all. I had started the evening planning to drop off Mr J and then go home, not dropping my panties for a roomful of men.\n\n'You should. You're good at it. You could come and do gigs with me if you like. It's good money.'\n\n'Let's talk about it some other time. I'm a bit worried about this next bit. What does George mean by \"raunchy\"?'\n\nTracy laughed before reaching behind the door and pulling out an old towelling robe. She walked over to my clothes and tossed me my skirt.\n\n'Let's go and get ready. It's easy. I just get down off the stage, sit on a few knees, rub my tits in their faces, that sort of thing. They like a bit of banter.'\n\nShe was holding the door open. I was still struggling with my zip. Why was it harder to put the blooming thing on than take it off? I followed Tracy into the Snug. She locked the door behind us.\n\n'Keep George out. He's a bit of a peeping Tom.'\n\nShe laughed and walked over to one of the benches where someone, probably Mandy, had laid out a number of those suit protectors. You know the kind of thing, long zippered bags enclosing a hanger. Tracy opened up a couple of them.\n\n'French maid? Naughty Nurse. Shall I look in the rest?'\n\n'What are you wearing?'\n\n'Oh, I'm going for a punk thing.'\n\nShe nodded towards a pile of what looked like rags piled haphazardly on one of the chair. She held up a small T-shirt. It had a couple of rips in it which looked like they had been done by a razor blade. Someone had written \"Fuck You?\" In felt pen across the front. I liked the question mark.\n\n'I think I'll go with Naughty Nurse then. Give old George a treat.'\n\n'He does like it. Says it was the outfit my mum was wearing the first time he saw her.'\n\n'Your mum doesn't mind? You know, you stripping and everything?'\n\n'Nah. How could she? It's sort of the family business.'\n\nThis time Tracy's laugh had a sort-of nostalgic ring to it. She seemed lost in her own thoughts for a moment, then pulled herself back to the present and smiled at me.\n\n'Let's see if it fits.'\n\nShe pulled the clothes out of the bag and I took off my blouse and skirt. The outfit was all rubber. I detected a strong aroma of bicycle inner tubes when Tracy took me it out and powdered the inside. It consisted of a pair of pants and a tight crop top. These went under the shortest dress I had ever worn. When I got into it, it barely covered my bum. The crop top was already squeezing my boobs up to show plenty of cleavage. The dress pushed them some more. It was difficult to breathe.\n\n'Don't worry. It'll get more flexible when your body warms it.'\n\nShe threw me a little cotton cap and passed over a cheap imitation stethoscope. The outfit was all white, decorated with red crosses. They were roughly positioned over my tits and pussy, as well as on the front of the cap. The final touch was a pair of knee-high, platform boots. They were made of some sort of plastic and pinched my feet; they were about half-a-size too small. I hobbled around in them grimacing.\n\n'I'd get them off straight away if I were you. But they'll be OK to get you to the stage.'\n\nTracy was putting on her own outfit. She put on a black bra under the skin-tight shirt and struggled into a pair of thin short shorts which left nothing to the imagination. There were a couple of slits in the back of those too. She pulled on a battered pair of Doc Martens which she tied loosely and started applying black make up in slashes over her lips and eyes. After the application of what seemed to be most of a can of hairspray she was completely transformed into a cross between a street-fighter and some sort of vampire.\n\n'Like it?'\n\n'Not my style, but yes. You'd scare the shit out of me if I saw you coming towards me down a dark alley.'\n\n'That's definitely the look I was going for.'\n\nWe got through to the bar just as George was coming to the end of what sounded like a long and involved story about his recent inland revenue inspection. Tracy waved to him and I slipped behind the serving area and stood next to Mandy. I could feel the hem of the rubber dress touching the crease of my buttocks. I was not giving the crowd an early show by going and sitting with the lads.\n\n'...so she said to me: \"you call these tits and I'll call those taxes\".\n\nThere was loud laughter from the now mostly drunk customers. There was even louder applause when George announced that the joke marked the end of his set. The place was shaking when he announced it was time for Tracy to do her next strip. Mandy flicked some switches behind her and pressed a button on the sound system as her daughter bounced onto the stage. The sound of the Sex Pistols' \"Pretty Vacant\" was deafening. Tracy pogoed up and down for a few bars, head banging furiously before diving headfirst off the stage into the waiting arms of a gang of lads who had strategically positioned themselves there. The rest of the audience applauded and turned in their seats as she was carried around the tables. I noticed a couple of her helpers grabbing a quick feel as she squirmed in their arms, but she didn't seem to be complaining. \n\nOnce back on her feet Tracy leapt into the lap of a man at the table she was positioned next to. I could almost hear him groan as her arse hit his groin. She leaned back across the knees of the guy sitting next to him and wriggled around on the two of them. She was quickly up and moving to the next group where she straddled a middle aged bloke sitting back from the table and proceeded to rub her chest against his face. His glasses fell off in the process and Tracy leaned back and rubbed them against her groin before returning them clumsily to his face.\n\nShe circled the crowded pub in the next few minutes, rubbing her bum against a man here, shoving her tits in a few faces there. It seemed to be open season on her boobs and arse. Hands came from everywhere to touch and squeeze her. She danced away from each group laughing as she did so. At one table she took a mouthful of beer from one glass and spat out out into another. Not exactly sanitary but the guys didn't seem to mind.\n\nWhen Tracy got back to the front of the stage she arranged herself almost decorously across Mr J's lap. She formed her mouth into a taut \"o\" and looked down at his groin before smiling at him. I watched him blush; he was having the time of his life. She then reached across to take Wot and Steve's hands, dragging them towards her chest. I could see her speaking to them, but, of course, couldn't hear what she was saying.\n\nSuddenly shirt disappeared. The two men had slipped fingers inside the tears and ripped it off. Tracy gave a little shriek and threw her arms around the old man's neck. He buried his face in her cleavage. She eased herself up and patted his cock before kissing his cheek. As she was leaning over him Luke grabbed her shorts and they too were ripped off. Tracy hopped up onto the stage.\n\nWhat happened next surprised everyone. She reached down into her boot and, with everyone's attention on her boobs which were almost escaping from the skimpy black bra, she pulled out a clasp knife. It glittered under the bright lights as she eased out the short blade. In one sudden movement she cut through the bra at the mid-point between her breasts. The remnants hung loosely from her shoulders as she bounced up and down in time to the music. Eventually it fell off and she kicked it aggressively out into the crowd.\n\nI saw her beckoning to someone beneath her and strained to see what was going on. Piotr was climbing up onto the stage. He looked embarrassed and excited at the same time. I could see the envy in the faces of the men at the tables nearest to me. Tracy handed him the knife and whispered something in his ear. I saw him smile. The plump girl was stretching the side elastic of her panties taut and we all watched as Piotr slid the blade between her hip and the elastic and sharply cut it away. There were loud cheers from the crowd and Tracy spun round to let my Polish pal slit the material on the other side of her knickers.\n\nShe held out her hand and Piotr passed over the knife. She snapped it closed and returned it to her boot before rewarding him with a brief kiss and the destroyed remnants of her panties. She then stepped down off the stage and sauntered between the tables until she was alongside the bar.\n\n'That's how it's done, babes. See you in a few.'\n\nI watched her naked butt, flushed with hand prints, wiggle towards the Snug and turned to Mandy.\n\n'Put something on quick. If I don't go out now I'll get cold feet. That was amazing.'\n\nGeorge had picked up the microphone and looked to be readying himself to take the stage. I held up a flat palm to stop him before folding back the counter opening and stepping out. My feet ached inside the uncomfortable boots and it took a few steps for me to adjust again to tottering on platforms. A few bars of a track I did not recognise boomed out before suddenly quietening. George was not going to be denied.\n\n'Anyone with medical training in the house? I think I'm having a heart attack.'\n\nThere was laughter as the crowd became aware of my entrance; the music was up again and I moved as steadily as I could towards the stage. Already hands were reaching out and grabbing my arse. Someone slapped me quite hard. I would have looked back but I had to concentrate on my footwork. At the base of the stage I leant over Luke's shoulder and asked him to assist me onto the stageHe . He stood, offering a hand, and then shoved me unceremoniously up onto the platform with a strong hand on my bottom. I tottered under the lights like a stilt walker. The boots were definitely going to have to come off.\n\nI plonked myself down on the chair and splayed my legs. This was the raunchy part of the evening after all. I stroked my pussy over the plastic which covered it and stared out. There was a definite bleariness on the faces of most of the audience; George had obviously been selling a lot of beer. I tried to recognise the music I was supposed to be dancing to but failed. There was a definite gap in my music education which started about the time of my marriage. Still, I reasoned, this lot were not looking to hand out style points. I unzipped the boots and kicked them off. My feet felt immediate relief. Now I could concentrate on the rest of the act.\n\nTracy was right about the dress. It was definitely warming up and as a a consequence becoming more flexible. I leaned over the chair and felt the rubber mould my bottom. I stroked a hand over my mounds and finished with a slap. There was a satisfying crack as my hand hit the material and I felt a tingle in my pussy as the pain shot through me. I faced the front and smoothed my hands over the dress. I could feel that my nipples were already hard and the dress felt as if it was painted on.\n\nThe Crown and Anchor crowd were not subtle. Or particularly inventive. \"Get 'em off\", \"Show us your tits\" and \"More\" made up the majority of the shouts I could discern from against the background of cheering and piercing whistles. Wot had obviously started a trend. On the other hand, that definitely made them easy to please. I popped the top fastener on the dress and stepped down off the stage. I could feel myself getting excited as I looked down at the leering faces and felt sweaty hands stroking my lower back and arse. I pushed through the few standing men and snaked between the tables. I may as well start at the back, I reasoned.\n\nI started dipping my finger into beer glasses and sucking it suggestively as I squeezed past seated men. They seemed to like it and I noticed glasses were being repositioned at the edge of tables in front of me as eager blokes dropped hints as to a suggested route. I'm good at taking hints and I smiled down at them and stroked shoulders as I passed. \n\nThe more adventurous among the crowd, usually at the urging of their table-mates, had started slapping my butt. At first the shock and concomitant thrill made me jump. I soon found myself beginning to enjoy it. I would wiggle my rear at one group as I leaned over to stir a pint on another table. I have never had a proper spanking. Sometimes Dave would slap me during sex. Luke had tanned me more systematically during the gang bang and, afterwards, issued an open invitation to a proper session. The tingling in my pussy as each hand struck made me more and more convinced it was a date I was going to have to make.\n\nOne man pretended to faint after I ruffled his hair. I placed the end of the stethoscope against his chest. That became another excuse to lean over, presenting my bottom to anonymous hands behind me. The bolder customers were stroking my tits as I bent forward. My excitement was reaching a higher pitch.\n\n'Here darling, stick your listener on this.'\n\nA fat, perspiring man in his fifties had a meaty first around his cock which strained against the cotton of his cheap chinos. I pretended to look shocked, then smiled and leaned down. I rubbed the flat, plastic head up and down his shaft before standing abruptly.\n\n'Sorry buddy, it's dead. Let's see what we can do about it.'\n\nI was almost at the back of the room and decided now was the time to get more up close and personal. I straddled the man with some difficulty. First the dress was reluctant to give, I felt it pop up around my waist as I threw my leg over him; then there was his size. He really was verging on the obese and when I eventually sat astride him both my feet were off the ground. I bounced up and down on the soft cushion of his thighs for a few moments before struggling off him.\n\nI tried to emulate what I had seen Tracy do: sitting on laps and leaning back, or pushing my cleavage into lucky punters faces. After the first couple of attempts, though, I started getting frustrated with the dress. It was clinging to me like a glove and the nature of the material made it catch and pull against stubble and the less-sweaty faces. My tits were feeling a bit sore both from the friction and the pressure from grabbing hands.\n\nI looked down at the table of men nearest me. They were better dressed than the average and, by the look of them, less tipsy. They looked shyly up at me as I grinned at them but made no move to try and touch me. It was almost sweet. I gestured for the one nearest me to swivel in his seat so I could sit on his lap. I threw an arm round his shoulder and whispered to him as I sat.\n\n'Help me out of this dress will you?'\n\nI saw him gulp and felt his body tense against me. The erection which I had felt as soon as I settled on him seemed to get harder. I wriggled against it to encourage him. I leaned back slowly to stretch the material further and give him free access to the fasteners. I found myself looking up into the face of his neighbour who passed his arm across my back to offer support. I grinned.\n\n'Hello.'\n\n'Nice to meet you.'\n\nWe both laughed out loud at the surreal conversation. I could feel the clumsy fingers of his friend struggling to lever the poppers open. I pressed my bottom harder against the stiff cock beneath me to try and stretch the rubber and make it easier for him.",
        "'He's not very good at this is he? Why don't you give him a hand?'\n\n'Be delighted, but don't be too hard on him, he's led a sheltered life.'\n\nI felt my supporter's one hand stretch further around my back and grip the seam over my breasts. He lifted his other to meet it and ripped the first two buttons apart, pulling the dress open. My tits almost bounced out of the crop top with the release of the restrictive rubber layer and I took a deep breath. Having taken a note of his friend's technique the shy boy tore at the remaining catches which gave easily.\n\n'Thanks boys. You're a pair of life savers.'\n\nI leaned over and kissed both of them on their cheeks. The bolder one's palm caressed my boob whilst his mate rested a cool hand on the small of my back. I turned my head to address him while pushing my breasts harder into his friend's hands.\n\n'Spank me.'\n\nHe looked shocked and I smiled encouragement. He lifted his hand and gently brought it down on my buttocks. It was more of a stroke than a spank.\n\n'Harder.'\n\nHe tried again and there was perceptibly more force this time. My pussy twitched appreciatively and I eased myself reluctantly up from them. They looked a lot more confident than when I had arrived at their table. I peeled off the dress which made soft tearing noises. I felt the rubber pulling at the hairs on my arms. I dropped the limp and shapeless garment onto the men's laps and gestured with my head for them to return it to the bar.\n\nMy new liberation made movement easier and I threw myself about with enthusiasm. By the time I reached the stage I was tingling all over. I had self-inflicted stubble burn on the tops of my breasts which had been massaged thoroughly by dozens of hands. My bum was almost sore from the pummelling it had taken. I had writhed against more stiff cocks than ever before in my life. I was flushed and breathless as I looked down again at the friendly faces of my football buddies. Wot, Piotr and Mr J all made as if to stand: gentlemen to the last. I waved them to stay sitting and grabbed Luke as I made for the stage. He followed reluctantly.\n\n'I need a good spanking. I've been very, very naughty.'\n\nI tried to sound coquettish, but I admit that the volume I had to shout over the noise and the lustful look on my face made me sound more like a randy tart. I pushed a surprisingly shy Luke into the chair. He looked owlishly out at the jealous faces in front of us. I went behind him and struggled out of the top. I dropped the damp rubber onto the stage and raised my hands. I was shaking my tits more in liberation than to turn on the crowd. They didn't know that and the noise went up a notch. I circled Luke once or twice before facing him between his open legs and leaning forwards to rest my head on his shoulder. I started to ease down the shorts to noisy encouragement.\n\n'Spank me 'til I come.'\n\nI breathed the words more than spoke. I felt Luke's chest heave and his hands circle the orbs of my bottom. He squeezed them gently. I stood and allowed him to ease the shorts down the rest of the way before spinning to face the baying audience. I waved and smiled, one hand on Luke's shoulder to keep myself steady, then, with as much grace as I could muster, arranged myself across this lap. My boobs rested against his thigh as my hands touched the floor on one side of him and he adjusted his position to leave my arse pointing skywards.\n\nI grunted involuntarily as the first blow struck. There were cheers from the crowd. The pain, greater than anything I had felt thus far, seared through me and I squirmed. He rested his hand on my warming bottom before taking a second shot. The blows came faster and faster. I could feel Luke stiffen below me and I pushed myself down on his erection as he worked. I was now crying out with each slap and tears were running down my face. The pain was almost unbearable; the boys on the floor were crying out at each slap like the mob before the guillotine during the French Revolution.\n\nMy pussy was sopping. I could feel my lips were swollen as I writhed against Luke's firm thigh. There was a perceptible wet patch on his jeans. When he needed a rest himself he stroked my butt in regular circling motions and I felt him slip a surreptitious finger between the crease of my buttocks and down to my wet slip. He gave my clit the gentlest of flicks before pulling back. It was as if I had been electrocuted. Passion jolted through me like electricity and I bucked against his hand letting out an almost animalistic howl.\n\nThere was laughter from the crowd as Luke resumed his thrashing and I felt myself warming and tensing as my orgasm approached. I lost all awareness of the people only a few feet away from me as I lost all control. My vision blurred and my panting became erratic as I bounced around against Luke's hard legs simultaneously seeking relief from the pain and a culmination to my passion.\n\nI came with a scream and lay panting across his legs. I don't know how long I lay like that, probably only a few seconds, but it felt like an age. Slowly my breathing regained a regular rhythm and I became aware of the cheers, whistles and hoots from the audience. I reluctantly hauled myself to my feet and stood to acknowledge the appreciation. I had one hip resting against Luke's side and my arm was around his neck. I ducked to kiss him wearily on the mouth and pulled him to his feet as I straightened. I held his hand high as I let the acclamation wash over me.\n\nMy memory of the trip back to the Snug is hazy. I remember being patted on the back a lot as a path was cleared. But then all was quieter and I was slumped in a chair. Tracy was standing over me with a fresh pint in her hand. I took it and gulped it down hungrily. My body was bathed in sweat and I was starting to feel cold.\n\n'Fun, eh? You'd better get your kit back on before you catch your death.'\n\n'Thanks Tracy. That was brilliant.'\n\nI stood and started obediently putting on each item of clothing as Tracy passed them to me. Mandy appeared with a fresh pint as I was doing up the last buttons on my blouse. I hugged her after putting the drink down carefully on a nearby table.\n\n'Was that OK?'\n\n'OK? It was fucking fantastic. I'm going to have to mop the stage before I knock off. You squirted all over the place when you came.'\n\n'Sorry about that.'\n\n'As if.'\n\nWe laughed together. I was red faced, but obviously unashamed. The fat woman looked from one to the other of us with the appearance of pride.\n\n'I couldn't have done better myself.'\n\nWe sat together amiably enjoying the moment. Mandy told stories from her past. One of them was about a trip to London she made to make a soft-core video, but mostly they concerned fighting off randy bar men after she finished her act. Tracy drew some tutting from her mum as she spoke about fucking in toilets and back alleys on her memorable nights. I just babbled about what a good time I had had. All three of us were laughing appreciatively at each other's anecdotes. The moment was broken by a tap on the door and George's head appeared.\n\n'Everybody decent? There's someone to see you Tracy.'\n\nA spindly lad who could have been a Barry clone pushed past him and stood sheepishly in the doorway. Tracy shrieked and rushed at him almost flattening the poor lad against the wall as she leapt into his arms. She made quick introductions \u2013 it was Jason her boyfriend \u2013 before looking around for her coat which she pulled on moving back to the door. She grabbed the boy in a bear hug and kissed him hungrily.\n\n'Sorry to rush off like this. But I need a good seeing to.'\n\nJason coloured, his acne standing out like beacons against the flushed skin on his face.\n\n'Mr J's got my number. Give us a ring if you fancy doing some gigs together Suzette. See you tomorrow, mum. Same time next week George?'\n\nWe both smiled at the use of my stage name. I waved weakly at her retreating back. Jason grunted his goodbyes; he and Barry obviously spoke the same language. The three of us smiled at each other after they had gone. I felt like an indulgent aunt watching a favourite niece going on her first date. Completely inappropriate in the circumstances, but a sweet feeling nonetheless. George handed me an envelope which obviously contained notes.\n\n'Here's the cash I promised you. I put in a little extra. Scarlett's rung. She's back home. Sounded high as a kite. The buggers In there have almost drunk me dry. I've been up and down those cellar steps like a fly with no arse.'\n\n'Blue-arsed fly?'\n\n'Whatever. It's been the best night I've ever had and much of that is down to you. Everyone wants to know when you're coming back.'\n\nI let the implications of his statement lie in the air.\n\n'Anyway. Crowd's thinning out now. Why don't you come back to the bar for a nightcap. Your mates look like they're eager to get off.'\n\nHe left with as much of a bustle as his weight would allow. Mandy handed me my coat and bag and we followed him through to the bar. There was a polite round of applause as I appeared. The place was virtually empty now. A few of the tables were occupied and the drinkers there raised glasses as they smiled over at me. Steve, Piotr, Wot and Mr J were seated at the bar chatting animatedly with one of the barmaids. They grinned at me and gave a variety of thumbs up signs as I eased myself gingerly onto a vacant stool.\n\n'No Luke?'\n\n'He's in the gents, I think.'\n\n'Hand job.'\n\nEveryone within earshot laughed at Wot's explanation. From the sheepish look on Luke's face when he reappeared a few minutes later he had been accurate in his observation. We bantered gently with each other as the crowd thinned out further. The lads had decided to go on to a nightclub in town and made half-hearted attempts to persuade me to join them. I was adamant.\n\n'I'm going home. I only popped out to deliver Mr J and look what you lot got me into.'\n\nI thought I detected a conspiratorial glance between George and Steve and filed it for later interrogations possibly including torture. If I had been set up, at this point I really didn't mind. I was on cloud nine and feeling a combination of exhilaration and exhaustion. If they had fessed up then I would probably have thanked them. George placed a brandy in front of me and started going on again about the success of the evening and how much alcohol he had sold. He kept eyeing Mandy with lascivious looks. Looks which were returned in spades. I smiled to myself as I speculated on the type of bed which would take their combined weight.\n\nI yawned, a little theatrically perhaps, but I was beginning to feel tired. The excitement of the evening was beginning to catch up with me. I asked Mandy to call me a taxi.\n\n'Want to join me Mr J? Or are you going out on the town with this bunch of reprobates?'\n\n'I'll come with you, if you don't mind. It's way past my bedtime.'\n\nFive minutes later we were in the back of a cab heading homewards. Mr J was holding a heavy carrier bag loaded with my tips which George had kept safely behind the bar. He was looking tired too. Tired but happy.\n\n'So. Had a good time? It wasn't too much for you?\n\n'I had a marvellous time. Thank you so much for taking me.'\n\n'Lads not too much for you?'\n\n'They looked after me perfectly. They could not have been better companions.'\n\n'And Tracy? The two of you seemed to get on.'\n\n'We did. A sweet girl. Her parents must be very proud of her.'\n\n'I think they are in their way.'\n\nI scrutinised Mr J's face trying to work out whether he was winding me up. I too had found Tracy personable, helpful and easy to get on with. But sweet? No, definitely not. Mr J just smiled back at me.\n\n'What did the two of you find to talk about? You seemed to get on like a house on fire.'\n\n'Oh, this and that. But look, we're almost home.'\n\nHe indicated for the driver to pull up outside my house and paid him. He hauled himself out of the taxi still holding the bag of tips.\n\n'Shall I bring this in for you? Or do you want to get straight to bed?'\n\n'No bring it in. I just want to have a quick shower; you can count up my earnings if you don't mind.'\n\nWe went into the house and he immediately busied himself with the percolator. I tossed him the envelope from George and left him scooping handfuls of coins and notes out of the bag. I went upstairs and turned on the shower. Getting out of my clothes was but the work of a moment. But a moment was all I needed to bring flashbacks of the last time I had done so. As I enjoyed the feeling of the warm water against my skin my hands strayed inevitably to my pussy. The soap fell from my grip as I folded back the lips of my vagina and furiously frogged my clit. It only took me a couple of minutes to get myself off and I was panting heavily as I reached to turn the water off.\n\nI anointed myself with body lotion. I could see faint sore marks on my boobs and feel their counterparts on my bottom. It was all I could do to stop myself going straight to the bedroom for a vibrator. The sticky smoothness of the cream and the sensitivity of my boobs and clit were combining to spread a satisfied warmth all through my body. I put on a bathrobe and went back to Mr J.\n\nI found him at the table, the coffee bubbling to a climax behind him. He was surrounded by piles of coins and notes he had taken from a diminishing pile in front of him. I made to speak but he shushed me and passed a note scribbled on the back of a beer mat. I sat down and winced involuntarily; my bottom was still sensitive.\n\n'Hi Suzette,\n\n'I'm Matt. I was at the table where we helped you out of your dress. I'm best man for Trev \u2013 the boy with the nervous fingers. It's his stag night in a couple of weeks. We'd like to hire you and your friend as entertainment. Please call if you're interested. PS you were incredible. Thanks.'\n\nThere was a mobile number scrawled underneath. I tapped the mat against my teeth while I thought. I vaguely remembered the group: polite, clean, a little bit handsy but less so than the others. I suppose I was interested or I would have tossed the card. I smiled across at Mr J, he winked back, his lips silently moving as he calculated the sums in front of him.\n\n'Two hundred and thirty-two pounds and fifty-seven pence.'\n\nHe stood up and went to pour the coffees. I whistled.\n\n'Fifty seven pence. Which cheapskate gave me fifty-seven pence?'\n\nWas all I could think to say.\n\n'In the words of the old joke \"all of them\".'\n\nHe smiled. I frowned, not understanding the reference. Mr J started to explain in the slow patient tone of a teacher.\n\n'You know a girl tells her friend she's gone on he game. \"How much did you make?\" the friend asks. \"Five pounds and twenty-five pence,\" the girl says. \"Who gave you twenty-five pence? Asks the shocked friend...'\n\n'All of them.'\n\nWe chorused together and laughed; but not much.\n\n'An oldie but a goodie. I read your note, hope you don't mind. Are you going to do it?'\n\n'I might. I'm thinking about it.'\n\n'If I might make a suggestion?'\n\n'You may.'\n\nThere was something charming about my guest. Here we were, just back from the pub where he had seen me strip naked in front of a mob of strangers, but just chatting amiably over my takings as if we had been on a church outing. I smiled at him to continue. \n\n'I would do it, if I were you. You clearly enjoyed yourself tonight and I have no doubt at all that you, and young Tracy, would give the young man a night to remember.'\n\nHe was right, of course. The invitation was the icing on the cake of a memorable evening. Any lingering doubts I had about the effectiveness of my performance had been dispelled by the fan letter. The prospect of performing again before a small group of nervous friends was, well, exciting. I wriggled a little in my seat and winced at the painful reminder of Luke's spanking.\n\n'I'll speak to Tracy tomorrow if you'd leave her number.'\n\nDecision made. I knew I was going to do it. All I had to do was admit it to myself. I rubbed my backside.\n\n'Would you do me a favour, Mr J? Unless You're in a rush to get home to, you know?'\n\nIt was silly. But even after everything we had done together I was nervous about bringing up the subject of masturbation.\n\n'Anything.'\n\n'Would you take a look at my bottom. After Luke's ministrations, I'm a little sore.'\n\n'Stand up and put your hands on the table. I'd be delighted.'\n\nI did as I was told and felt cool air waft across my cheeks as Mr J whipped up the back of my robe in a swift movement. He arranged the folds above my waist to stop them falling back. The silence in the room was broken by his thoughtful hums as he leaned towards me.\n\n'Well. It is definitely very red. May I touch you? I'll be gentle.'\n\n'Of course.'\n\nI shivered as I felt soft fingers trace a line from just below my waist, over the globe of my left buttock and then down to a point inside my thigh a few inches below my pussy. When he moved to my right thigh and drew a finger upwards I took a sharp intake of breath as a knuckle grazed my pussy lips on the way back upwards.\n\n'That's the extent of the marks I can see. In width terms they stretch from here, to here.'\n\nHe gently touched the soft side of my bum just where it starts to swell over my hip and slowly trailed across, resting his hand briefly on the cleft between the cheeks. He cupped my right globe gently in a large hand.\n\n'It looks very red and there are a few blue bruise-like marks. I can see the shape of his hand in one or two places. It feels very warm. Would you like me to apply some more cream?'\n\n'Please.'\n\nThere was a catch in my breath as I spoke. When Mr J squirted on the cream I gasped and at his first touch I was panting. I pushed myself back against his hand which was moving in smooth, firm circles over my arse and down my thighs. I quivered as his hand slid up the inside of my thigh and massaged the cleft between the edge of my pussy and the curve of my bottom. I wriggled trying to manoeuvre him inside me which caused him to brush the outside of my now swollen slit. A groan escaped my lips.\n\n'Not hurting you am I?'\n\n'Just stick it in.'\n\nI was beyond hinting.\n\nOver the next few minutes Mr J proved, if proof was needed, that there's no substitute for experience. I jolted as his first finger entered me and continued to writhe as he gently but firmly pushed in and out. By the time he slid in a second finger I was tingling all over and my pussy felt like it was on fire. A twist of his wrist and he found my G-spot. I came almost instantaneously. The warmth spread out from my crutch, up to my belly and I could feel my thighs quivering. It quickly built and I collapsed across the table scattering the neatly arranged coins and notes. I listened as stray coins tinkled to the floor and some rolled around the kitchen.\n\nMr J gently removed his fingers and stroked my arse again, the lubricant now was my pussy juices. I could occasionally feel his stiffness as he brushed against me as he worked. I eased myself back up on shaking arms and then turned to face him. I looked at his flushed face and then down at the bulge in his jeans to confirm what I had been feeling. I tried to bring my panting under control before speaking.\n\n'Pass me my bag will you?'\n\nI reached inside and scrabbled around at the bottom of my junk until my fingers lighted upon the sealed condom I had been searching for.\n\n'Put this on and get to it, will you?'\n\nThe look of surprise on his face was a picture. His mouth fell open and his eyes widened. They seemed to almost double in size. I kept my eyes on his groin as I loosened the robe and, using it as a cushion, eased my bum up onto the table. One leg found the support of a padded chair and I lifted the other up to that it was sole-down on the table top. I was wide open to receive him and started to play with my clit as I waited for him. I could feel another explosion starting to build somewhere deep inside me as I slowly circled my forefinger around my swollen, throbbing clit.",
        "Mr J was all fingers and thumbs. If I had not been so aroused I may have laughed as I watched him struggle with the metal button of his waistband; then the stiff zipper and finally the tangle of clothing he created as his pushed pants and jeans down to his knees. His cock sprang to attention on its release. I pulled his shirt over his head and threw it aside before taking the condom from him; he looked at it as if he had never seen one before. I supposed it had been a long time and the new packaging was unfamiliar. I tore it open with my teeth and handed him the lubricated rubber. But it still took two of us to get him properly dressed.\n\nWe were a perfect match. I had eased myself to the edge of the table to deal with the condom. I grasped his erection and slipped him inside me without him having to bend or stretch to accommodate himself. I gasped as he entered me. He had little girth so slid in easily, I heard him grunt as his full length went home. His balls gently stroked my arse and I stretched my legs out further as his hips hit the inside of my thighs.\n\n'Hard as you can. Fuck me.'\n\nHis only reply was a grunt, but his assault was frenzied. For a full five minutes he went at me with a ferocity which belied his years. I still had my hand on my clit and stroked myself rapidly as his weight pushed my fingers down again and again. The kitchen was filled with the noise of flesh slapping against flesh as our thighs engaged. His balls beat a tattoo on my bottom. The squelching of pussy and condom lubricants made us both laugh breathlessly when he eventually fell against me. We were both panting with the exertions and enjoyed a brief kiss which we had to break in order to take on board more oxygen.\n\n'I haven't done this for years.'\n\nHe kissed me again and I returned the broad smile he was giving me. I slid my hands down his back; he was sweating almost as much as me.\n\n'It's like riding a bike. You never forget.'\n\nHe snorted and we both collapsed in giggles, him laying across my chest. I gasped as he slid out of me and I scrabbled around searching for him. I needed more.\n\nThe second round was more sedate. Mr J entered me gently and began easing his cock backwards and forwards with an easy slow rhythm. I pushed him in and out with a hand on his slim buttocks whilst working my clit with the other. He now had both hands on the table to support his weight. I don't know whether it was my panting or the increase in my clitoral stimulation which indicated to him I was close to another orgasm, but he picked up the pace and soon we were rutting like teenagers again.\n\nI fell back onto the table with him on top of me. Somehow in the confusion I managed to get both legs up so that my knees rested against his shoulders. The new position heightened my pleasure and I could feel my vaginal walls squeezing the hard cock as he worked. I smiled at the closed-eye look of determination on his face. He was biting his bottom lip like a schoolboy struggling over a particularly difficult maths problems. I moved both hands down to his butt cheeks and dug in my nails to help regulate his thrusts. We were both slick with perspiration and our ragged breaths seemed to be working in unison as we raced to a climax.\n\nInvoluntary cries and inarticulate oaths escaped me as my final orgasm built in my pussy and spread out through my body. I had a finger over his butt hole and I pressed and massaged the entrance. It was the sensation which pushed him over the edge; I felt his whole body stiffen and his prick engorge further inside me before it pumped out its load. With each spasm he groaned. My own cries matched his as fireworks went off in my brain; the response all over my body could have been their falling sparks. \n\nAfter the fourth mighty groan Mr J fell onto me and lay there panting. I let my head fall back against the table and felt the dead weight of Mr J on top of me. If it wasn't for his ragged breathing I may have been concerned for him. He lay completely still, his head against my shoulder; I felt his softening penis slip out of me. It stirred him to action and I felt his arm snake between our legs to take hold of the condom. He stood upright with a sigh.\n\n'Was that OK?'\n\nI struggled onto my elbows to look straight at him. I winced as I caught the edge of a fifty pence piece. I giggled to relieve the tension.\n\n'Good? It was great. Just what I needed. Under the sink.'\n\nHe had tied off the used condom and was looking for the bin. He shuffled over to it like a man in a sack race and after disposing of the prophylactic hoisted up his jeans before turning round.\n\n'I don't know how to thank you. I haven't, you know...'\n\nHe was blushing and suddenly looking his age. I hopped down from the table and embraced him. We held each other tight for a full minute before pulling back.\n\n'Why don't you go home and get some rest? You look like you need it. We'll talk tomorrow; I'm knackered.'\n\nHe looked relieved and, after he retrieved his shirt and put on his jacket we went to the door and kissed. I whispered in his ear as I opened the door, remembering our last parting.\n\n'First time I've fucked anyone without kissing them first too.'\n\nHe waggled his fingers in valediction as he stepped jauntily through the door.\n\n'Whatever next?'"
    ],
    "authorname": "Touch_type",
    "tags": [
        "striptease",
        "first time",
        "spanking",
        "dressing up",
        "young-old",
        "public",
        "group sex",
        "humour",
        "strippers",
        "exhibitionism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/entertaining-at-large-ch-02"
}