{
    "title": "A Game of HORSE Pt. 07",
    "pages": [
        "All characters in this story are 18 or older.\n\nChapter 15: Morning Delight\n\nBrandi woke up next to Ray, snoring peacefully as the sky over the ocean began to brighten. She was always an early riser and slipped out quietly so as not to disturb him. She showered and rubbed lotion into her soft skin, then put on makeup and tied her hair back in a pony tail. She dressed in a short, willowy sundress with nothing underneath and sat on the deck with a mug of coffee in the cool morning air, listening to the surf and thinking about recent events. She loved Peter, as always, and her new friends too. She worried, though, that she wasn't being attentive enough to Ray, and that he might resent how she shared herself with the others. He was her date, after all.\n\nWhen Brandi went back inside she found Ray sitting on the big, comfy sofa in the living room, scrolling on his phone. She sat down on the floor between his outstretched legs, looking up into his eyes, thinking about how much she adored him. He was funny and smart and good-looking, plus he really seemed to be interested in her, and not just for sex (although he really seemed to appreciate that, much to Brandi's satisfaction). Brandi wanted to make sure that he was comfortable with the way things were progressing.\n\n\"Ray,\" she said gently, placing her hand on his knee. \"I hope you're OK with everything that happened last night. I know it got kind of wild...\"\n\nRay looked down at her, mystified. \"Are you kidding?\" he responded. \"I loved it -- couldn't you tell?\"\n\n\"Well, yes,\" she said, \"but I want to make sure you were OK with me and Peter, and me and Elena, and all that stuff... you know, some guys might be jealous so I just wanted to put it all out there.\" Ray looked at her suspiciously, like she might be joking.\n\n\"I'm serious!\" she maintained, noticing his skepticism. \"I mean, it wouldn't be that unusual, right?\"\n\nRay shook his head, as if Brandi had no idea what she was talking about.\n\n\"Well,\" she said, feeling a need to explain, \"it would get me a little jealous if you were with Elena or Peter and especially with both of them.\"\n\nRay looked surprised. \"Really? You would be jealous?\"\n\n\"Uh-huh,\" she admitted. \"Actually, it even bothered me a tiny bit to share you with Elena last night. I mean, she's so pretty and sexy and what if you liked her more than me?\" She looked at Ray, hoping he understood. \"I don't know -- it's just how I feel. I guess I'm a little insecure.\"\n\n\"Wow!\" Ray said, looking down at Brandi. \"That never even occurred to me. You think I'd like her more? Are you crazy?\"\n\n\"Brandi,\" he continued, \"everyone knows Elena's hot, but you are, like, my ultimate fantasy girl. You're beautiful and smart and wildly sexy -- there's no way I could like her more. I swear!\n\n\"Really?\" Brandi responded, somewhat reassured. \"Fantasy girl?\"\n\n\"Uh-huh,\" Ray said, nodding energetically. \"And believe me, I loved every second of watching you with Peter and Elena last night. Every second!\"\n\nBrandi sighed in relief, a huge smile spreading over her face.\n\n\"Brandi -- watching you with Elena and Peter was mind-blowing. Really -- I love everything you do, baby, everything!\"\n\nRay paused, letting his message sink in, then spoke in a low voice, as if revealing a secret, \"if you want to fool around with other people... whoever... it's fine with me, OK? Actually, more than fine. I love it! As long as I get to watch. Or at least hear about it. And as long as I'm still your guy, OK?\"\n\nNow it was Brandi's turn to be surprised. Exactly what was Ray suggesting? \"You like watching me with other people?\" she asked cautiously. \"And hearing about me with other people?\"\n\nRay nodded, a naughty smile on his face. \"I do,\" he confessed. \"It's kind of weird, I know, but it totally turns me on.\"\n\nThey looked at each other, pondering Ray's confession.\n\n\"You... want to hear about other things I've done?\" Brandi asked, getting exciting about the possibilities.\n\n\"Oh, God! I would love that Brandi. That would get me crazy.\"\n\nBrandi giggled. \"What do you want to know exactly?\"\n\n\"Everything!\" he blurted out. Then, after thinking for a moment, he whispered, \"that wasn't the first time you took it up the ass last night, was it?\"\n\nBrandi giggled. She shook her head and looked Ray in the eye. \"No,\" she answered.\n\n\"I didn't think so,\" Ray responded, thinking. \"Was it Peter?\"\n\n\"Uh-huh,\" Brandi confirmed. \"He was my first.\"\n\n\"Did it hurt?\" Ray asked, concerned.\n\nBrandi shook her head. \"I practiced a lot. I was ready.\"\n\nRay chuckled. \"I'll bet. How many times have you done it with him?\"\n\nBrandi shrugged. \"Kind of a lot,\" she answered guiltily.\n\n\"Wow,\" Ray said. \"Anyone else?\"\n\nBrandi nodded. She saw a surprised look on Ray's face and explained, \"I'm kind of slutty. Are you OK with that?\"\n\n\"Wow,\" Ray said, smiling. \"More than OK. I fucking love it, baby! Who was it?\"\n\n\"My chemistry teacher,\" Brandi said, clenching her teeth and looking at Ray with wide eyes, as if to say, can you believe it?\n\nNow Ray was genuinely shocked. \"Your chemistry teacher? Seriously?\"\n\n\"I'm never going to lie to you, Ray. He has a huge cock! Way bigger than yours and Peters, and you guys are pretty big! It's amazing.\"\n\n\"Wowwww,\" Ray said incredulously. \"You are really something, baby.\"\n\nBrandi smiled. \"I guess I am!\" she chirped proudly. Beaming into each other's eyes, Brandi and Ray both thought how lucky they were to be together.\n\n\"Tell me more,\" Ray requested. \"Did you fuck anyone else?\"\n\n\"No, just you,\" Brandi said, giggling and biting her lip, \"but there have been kind of a lot of blow jobs.\"\n\n\"Tell me,\" he pleaded, almost sputtering with excitement. \"How many guys?\"\n\nBrandi laughed. She knew the exact number but she pretended to count out loud, using her fingers to keep track.\n\n\"Well,\" she began, \"Peter was the first... and the second. Then there was Gary in the school Auditorium --\"\n\n\"In the Auditorium?!\" Ray interrupted. \"Seriously?\"\n\n\"Uh-huh,\" Brandi replied nonchalantly. \"It was during Drama class,\" she explained, as if that made perfect sense. \"We were practicing a scene.\"\n\nRay laughed. \"For what, a porno movie?\"\n\n\"Shush!\" Brandi admonished as she laughed along with Ray. \"You're making me lose count.\"\n\nRay chuckled, shaking his head in amazement as Brandi went on, \"OK, so where was I? Peter, then Peter again, then Gary. That's the first three.\"\n\nRay nodded, trying to stay quiet so she would keep going.\n\n\"Then I gave Ernesto a handjob -- that doesn't count, I guess, cause it's not a blowjob, right?\" Ray nodded again, astounded at how candidly Brandi revealed her exploits. \"Then I sucked off Mr. Smith -- that's my Chemistry teacher -- that was in school too, in his office.\" She giggled and paused, waiting to see if Ray was going to comment. When he didn't she kept going, \"then there was Donny, then Peter again along with his friend DJ -- I did them both at the same time! That was fun,\" she said breathlessly, looking Ray in the eye.\n\n\"After that there was Peter a bunch more times, and Gary again, and the landscapers, and two of the guys in the class my mother teaches at the University.\"\n\nBrandi looked at Ray and noticed he was panting with excitement, his attention focused on her like a laser. She giggled, pleased that she could captivate him this way.\n\n\"Yeah, my Mom had a party for the class at our house,\" she explained. \"These two guys had a couple drinks so my Mom asked me to drive them home, and they invited me in, and then, well, you know...\"\n\nWow, Ray thought. He knew she was promiscuous but had no idea of the full extent of her sluttiness. It excited him beyond belief.\n\n\"Then I finally got around to giving Ernesto a genuine blowjob. That was funny,\" she said, as if replaying the scene in her mind. \"He was at a party with his girlfriend and we snuck into one of the bedrooms and I gave him a quickie. His girlfriend had no idea! Then there was Katie's boss, and one of the partners at my father's firm, and I think that's it.\"\n\n\"Oh -- and then there was you at the golf place, of course, and there may have been one or two others that slipped my mind. And that was it until last night!\" She smiled at him, not sure he would be accepting of her endeavors but feeling good that she had been completely honest.\n\n\"So that's like, thirteen guys?\" Brandi giggled, her eyes shining proudly.\n\nRay shook his head, thrilled at Brandi's resume and her casual attitude.\n\n\"Like I said, I'm kind of a slut,\" she added, shrugging her shoulders again. \"You still like me?\"\n\n\"No, Brandi,\" Ray said sternly, pausing a moment to let the words sink in. Brandi's heart fluttered for a moment until Ray clarified, \"I don't like you, Brandi. I think I love you!\"\n\nRay's words lit up Brandi's face, her smile spreading from cheek to cheek.\n\n\"Like I said, you're my dream girl, baby. My fantasy. I am completely wild about you,\" he gushed. \"Whatever you do is OK with me, as long as you tell me about it. OK baby?\"\n\nBrandi nodded, tears welling up in her eyes.\n\n\"Brandi,\" Ray said in a commanding tone, \"you're my girlfriend now, understand? It's official, and you can do whatever you want but always remember -- no matter whose cock your sucking, or who's fucking you, I'm your boyfriend. Right?\"\n\n\"YES!\" Brandi cried, tears streaming down her face. She rose up on her knees and hugged Ray around the waist, pressing her head against his chest. She held him for a minute, feeling his erection pressing against her breasts, then looked up at him with love in her eyes.\n\n\"I think we need to celebrate this moment,\" she said softly. She ran her hands up Ray's legs to his lap, taking his hardon in her hands and stroking him.\n\n\"You know what I'm going to do, don't you?\" she teased.\n\n\"Oh, yeah,\" Ray replied, \"you're going to blow me like the little slut you are, aren't you?\"\n\nBrandi licked her lips as she slid Ray's shorts and boxers down his legs, freeing his aching hardon. She looked up at him, urging him to continue.\n\n\"Oh, yeah, my little cocksucker. Suck my cock baby! Suck that load out of my balls and swallow it down!\"\n\nRay's words made Brandi tingle. She loved being called baby, and loved being called a cocksucker. She dropped her head into his lap and sucked him in, bobbing slowly, wanting to give a long, memorable blowjob to this boy she adored.\n\n\"I'll be your cocksucker whenever you want, sweetheart,\" she purred, looking up at him with love in her eyes. \"I'll do anything for you. Anything you want, baby, anytime.\"\n\nBrandi sucked him for a long time, using all of her tricks to excite him. She deep-throated his rod, sucked his balls, tickled his asshole with her fingers and looked up at him as she kissed his throbbing shaft. She talked dirty, telling him how much she loved sucking him off, how she craved his cock, loved swallowing his cum, how she loved telling him about what a slut she was and all the cocks she sucked, and who fucked her slutty little ass. When she felt him getting close she backed off, postponing his relief time and time again.\n\nAt some point they heard a bedroom door open as Peter and Elena joined them in the living room, Peter wearing boxers and Elena a short silk robe. They chuckled, not surprised to find Brandi on her knees sucking Ray's hard, dripping cock. They were happy that the party was picking up right where it left off last night.\n\nWithout lifting her head from Ray's shaft Brandi looked back at them and purred, letting Peter and Elena know how much she enjoyed her morning activity. Ray looked at them and smiled, shaking his head as if to say he couldn't believe how lucky he was.\n\n\"Hey, Peter,\" Ray moaned, \"there's nothing like getting a little piece of this in the morning, you know what I mean?\"\n\nBrandi moaned even louder when she heard Ray's words. She felt Peter's eyes on her ass and had a pretty good idea of what Ray was suggesting. She looked up at him questioningly, as if to say, are you thinking what I'm thinking? When Ray grinned, Brandi took action, shaking her ass at Peter while she blew her boyfriend.\n\n\"She has the most amazing mouth,\" Ray gushed at Peter and Elena, \"and her ass is pretty fine, too. Know what I mean?\"\n\nRay looked at Peter suggestively, raising his eyebrows as Brandi shook her buns for her audience. Leaving all subtlety behind, Brandi flipped the bottom of the sundress up onto her back, leaving her kneeling bare-assed on the floor as she tended to Ray's hardon and swayed her behind, reminding Peter of the tight grip of rear passage. She pulled off of Ray for a moment, a long strand of saliva stretching from the tip of his cock to her lower lip, and growled, \"the lube is on the nightstand in our bedroom.\"\n\nElena watched her friend dancing on her knees and ran to the bedroom. She quickly returned with the lube and drizzled it all over Brandi's swaying ass. \"Do it!\" she urged Peter, punching him playfully on the chest. \"She wants it! Fuck her up the ass!\"\n\nElena was thrilled at Brandi's impending double-pounding, She dropped to her knees and pulled Peter's boxers down, then covered his cock in lube and stroked it from base to tip.\n\n\"Do it!\" Elena demanded again, \"fuck her! Elena scampered over to the couch and sat next to Ray, watching Peter prepare to sodomize her friend. Elena's attention was momentarily captured when she looked down at Brandi sucking on Ray. Elena marveled at her technique and the sheer joy with which she sucked cock. Brandi was truly in her element with her lips wrapped around a stiff penis.\n\nPeter grabbed Brandi's waist with one hand and guided his cock to her rosebud with the other. Brandi stopped dancing for a moment and pulled off of Ray's boner to watch the action along with Elena and Ray. When she felt the head of Peter's slippery shaft gliding along the crack of her ass she groaned and spread her legs wider, then took Ray's erection back into her mouth as Peter began to press his tool into her tight anus.\n\nBrandi shuddered at the thought of taking two cocks at once. It was a dream for her, and now it was about to happen. She bobbed her head on Ray's pole and squealed with delight as Peter pushed.\n\nElena watched raptly. She pulled her feet up onto the couch, spreading her legs, and dropped a hand to her moistening pussy. Sitting next to Ray, she rubbed herself to the sexy sight of her friend on her knees, taking two hard cocks into her slutty body.\n\nIt didn't take long for Peter to work his entire length into Brandi's dark, slippery tunnel, and once he was balls-deep he paused for a moment, letting Brandi adjust to being stuffed full at both ends. Brandi moved her bottom and shuffled her knees, then Peter withdrew and began to pump his meat into her. Peter loved fucking Brandi up the ass. The grip of her rectum was smooth and tight, and it was thrilling to feel her squirm as he drilled into her. It was so naughty.\n\nRay was beyond himself. Not only did he get the pleasure of Brandi's warm, wet mouth on his raging cock, he also got to watch his girlfriend get ass-fucked. He got to enjoy his two greatest thrills all at once, with the added bonus of Elena playing with her pussy on the couch next to him.\n\nOnce he got into a steady rhythm, Peter watched Brandi's head on Ray's shaft and tried to mirror her. When Brandi took Ray deep Peter pressed forward also, shoving his full length inside her. When she pulled up and sucked Ray's cockhead in her mouth, swirling her tongue around it, Peter withdrew, leaving the head of his cock in the vicelike grip of her anal ring.\n\nBrandi noticed it immediately and took advantage of her ability to control Peter's motion. She deep-throated Ray's erection, causing Peter to bottom out in her rear, his hips pressed against her butt. She held Ray deep in her throat with Peter buried inside her, then drew back with excruciating slowness. Elena watched Peter's rod slowly appear from Brandi's asshole at the same deliberate pace Ray's shaft slid out of her mouth. It made her pussy even wetter.\n\nRay was in bliss, getting his cock sucked, watching Peter fuck Brandi's sexy ass, feeling Elena writhing on the couch next to him as she diddled herself. Elena slid two fingers inside her snatch and rubbed her clit, imagining it was her taking a cock in her mouth and one in her cunt, getting pounded in tandem by these two hot studs.\n\nBrandi sensed that the boys were getting close to orgasm and again took both cocks deep, thrilled by the feeling of more than a foot of hard cock lodged inside her. It was slut heaven, spit roasted before breakfast, getting ready to take two creamy loads of cum in her mouth and ass.\n\nBrandi pulled back on Ray's shaft, sucking the tip, her cheeks drawn in, swirling her tongue over the head, fisting the base with two hands to coax the cum from his balls. Peter dutifully pulled back, holding the tip of his shaft in Brandi's tight ass, fucking her with short strokes, feeling his pulsing cockhead slipping back and forth in the grip of her sphincter.\n\nIt was too much for the boys. Within seconds they were grunting and thrusting, their erections spurting jets of semen into Brandi's hungry body. Brandi moaned with pleasure, drinking down Ray's sperm and feeling Peter's spunk coating her insides.\n\nWhen Peter was done he fell back on the floor, leaning against an upholstered chair as Ray slumped back on the sofa, trying to catch his breath. The boys were spent but Brandi was insatiable. She scooted over on her knees between Elena's widespread legs and dipped her face in. She pushed Elena's hands away and replaced them with her mouth, licking the girl's slit and sliding two fingers deep inside her soaked pussy. Elena groaned in delight, placing her hands on Brandi's head and holding it tight. Brandi pumped her fingers in and out of Elena's snatch and took her clit between her lips, sucking and licking it while she finger-fucked her friend.\n\nElena's robe was open now and Brandi reached up to play with her hard nipples as she ate her pussy, one hand pumping inside her while the other twisted and pulled at her dark nubs, her tongue lapping up Elena's juices. Brandi felt Elena squirm and pant, and as her moans turned to wailing Brandi licked and sucked harder on her clit, sending her over the edge.\n\n\"Ohhh, FUCK... BRANDI!\" Elena screeched as orgasm sizzled through her lithe body. She squeezed Brandi's head tight, pressing it into her pussy as she quaked and quivered. Brandi had to fight for breath but she kept thrashing her tongue on Elena's clit, sending waves of pleasure through her.\n\nWhen Elena finally calmed down she flopped back on the couch, breathing heavily, her tan skin flushed bright red, an expression of pure love on her face as she looked down on her friend kneeling before her. She held out her arms for Brandi, beckoning her to rise up into her arms.\n\nFrom Brandi's point of view Elena was a vision of sensuality. Her wet pussy dripped in front of Brandi's face, stiff nipples poking upward, long black hair spilling over the couch cushion,. Brandi immediately climbed on top of her, pulling the sundress over her head and throwing it in Ray's lap as she brought her messy mouth to Elena's for a wet kiss. Elena loved Brandi's weight on her and the taste of sex on her lips. The two girls locked in a scorching embrace, their tongues twirling together, flavored with the taste of cum and pussy juice. Elena pulled Brandi tight, grinding into her from below, smooth skin and breasts pressed together, nipples against nipples.\n\nBrandi was in heaven making out with Elena, and when she felt Elena reach down to guide her erection toward her dripping slit she thought she might pass out from joy. Elena spread her legs wide and pulled Brandi between the puffy lips of her wet cunt, then wrapped her legs around her friend and pulled her deep inside.",
        "Ray and Peter watched ecstatically. Seeing the two girls fuck on the couch was the most exhilarating thing they had ever seen. Brandi was wild with excitement, feeling a pussy on her cock for the first time. She lost control of her mind and body, pumping into Elena like an animal, kissing her madly, grunting and gurgling with primal pleasure.\n\nBrandi lasted only a few minutes before she was shooting off, pumping powerful spurts of cum into her friend, grinding her pelvis against her, trying to thrust as deep as possible. Brandi's grinding and spurting sent Elena to another climax, and the two girls lay together on the couch, tightly gripping each other, shockwaves rippling through their bodies.\n\nEventually Brandi rolled off her friend, slumping back on the couch between Ray and Elena. They lay next to each other, sweat gleaming on their tan, lithe bodies, their chests rising and falling with every breath.\n\n* * * * *\n\nPeter watched from his perch on the floor, thinking about his exploits with Brandi, proud that he helped his confused, unhappy friend blossom into the joyful, loving, sexy creature she now was. Brandi's pent-up sexuality had been obvious to Peter and his sister Katie for a few years now. Every so often they would brainstorm ideas to release Brandi from her self-imposed confinement, but they never came up with the right approach until Katie took her job at the new company. Peter and Katie knew instantly that Brady would be a perfect test subject and that Brandi might finally awaken. They had no idea, though, that Brady was harboring such a wild, sexual demon inside his unremarkable self.\n\nPeter looked at Brandi now as she beamed with happiness between her two friends on the couch, and he knew that he and Katie had succeeded. They had helped his friend find happiness and fulfillment, not to mention an incredibly exciting future.\n\nBrandi looked back at Peter with love in her eyes, thinking how much he and Katie had done for her and how much she appreciated their efforts. Without them, she'd still be boring old Brady, probably sitting at home alone right now playing video games. She looked to Ray on her right and Elena on her left, thinking how wonderful, sexy and sensuous her new friends were.\n\nElena was lying back with her eyes closed, absentmindedly toying with her nipples, a contented smile on her face. Ray was looking at Brandi and Elena, their enticing breasts and lovely faces, and gently stroking himself. Ray was awestruck by their coupling, and watching it had gotten him aroused again. Brandi saw his member pulsing with renewed vigor and raised her eyebrows, as if to say, again?\n\nRay grinned. Brandi had never really gone soft after her climax, and when Elena opened her eyes she saw two energetic erections pointing up from the couch. She smiled as her hand drifted down from her nipples to her dripping pussy.\n\nRay and Brandi and Elena exchanged glances and came to an understanding. Peter saw it as well. Round two was about to begin.\n\nBrandi looked into Ray's eyes and rolled over on top of Elena, bringing her mouth to hers and placing her hands on her tits. Brandi maintained eye contact with her boyfriend as she played Elena's sexy body like a fine musical instrument. Brandi kissed Elena with her mouth wide open and slightly apart, giving Ray a perfect view of their tongues dueling out in the open, looking into his eyes as they made out. Brandi kissed her way down Elena's neck, gazing at Ray as she pursed her lips over Elena's smooth skin until she reached her nipples, taking each firm brown nub between her lips and sucking and pulling, and twisting them between her manicured fingers. Ray watched intently, staring into Brandi's eyes, knowing she was doing this to excite him.\n\nBrandi kissed her way back up to Elena's willing mouth, mashing her lips against hers, sucking her tongue, squeezing her nipples and grinding into Elena as she watched her boyfriend. It thrilled her to see the lust in his eyes. Brandi rose up, on her knees between Elena's thighs, and purred, \"watch me fuck her again.\"\n\nBrandi pushed Elena's legs apart as wide as they could go, eyeing Ray as she swiped the tip of her erection up and down Elena's slit. Brandi pushed forward, pressing her cock into Elena's cunt, making sure Ray had a clear view of their joining. \"Oh, YES!\" Brandi moaned as she slid inside her friend. \"YES!\" Once again, the pleasure of Elena's pussy sent Brandi into a frenzy, making her momentarily forget about Ray as she closed her eyes and brought her face to Elena's for a hungry kiss.\n\nRay was spellbound watching Brandi pump into Elena as the two kissed and played with each other's tits. He could have watched all day, but when Brandi opened her eyes and looked up at him he knew what she wanted.\n\nRay stood and moved behind Brandi, watching her shiny ass bouncing between Elena's outstretched thighs. When he grabbed her hips Brandi stopped momentarily, looking back at Ray and groaning, \"Oh, yes baby! Do it!\"\n\nRay placed the head of this cock at Brandi's asshole and pushed. Brandi moaned in pleasure as Ray's shaft entered into her, sliding in easily with the help of Peter's cum and the oil and the pounding from her earlier ass-fucking. She was wide open for her boyfriend.\n\nRay slid in balls-deep as Brandi pushed into Elena, marveling at the sensation of being simultaneously penetrated and engulfed, another first for her.\n\nIt took a few strokes to figure out a rhythm, but once they did Ray and Brandi were a blur of motion back and forth as Elena writhed from side to side, thrilled to be at the bottom of the pile with her sexy friend lying on top of her and pounding into her steaming cunt.\n\nBrandi was in ecstasy as the filling in a sandwich with a beautiful girl below and her hot, loving boyfriend above, fucking and getting fucked, her tits grinding into Elena's, kissing her soft mouth, Ray's big cock reaming her tight ass. It was beyond her wildest dreams.\n\nRay was delirious with joy, fucking his girlfriend, watching Brandi and Elena thrusting beneath him, grunting and groaning, feeling their three bodies moving together in a sensual dance, knowing that he would have wild sex with Brandi again and again in the future.\n\nElena was the first to come. Brandi's cock inside her and the combined weight on her clit sent her over the edge. It was too much for Ray also, the tight grip of Brandi's ass on his cock, the erotic sight of Brandi's naked body grinding into Elena, and the overall thrill of their illicit threesome. The word synergy blasted through his brain as he shot streams of cum deep in Brandi's rectum, adding to the load that Peter had deposited earlier.\n\nBrandi hollered with joy as she felt Elena's cunt gripping her cock and Ray's sperm shooting inside her, igniting her climax, gooey cream spurting from her cock into Elena's cunt for the second time that morning.\n\nWhen last droplets of sperm had been released and Elena's pulse began to slow, Ray flopped back onto the floor next to Peter and Brandi rolled off onto the couch next to Elena. The four were quiet for a while, contemplating the wild encounters that had already taken place, knowing they still had almost two full days to spend together.\n\nBrandi rose up, not bothering to put the sundress on, and looked at her three friends. \"Breakfast anyone?\" she offered, knowing they were going to need a lot of energy to get through the day."
    ],
    "authorname": "emelle78",
    "tags": [
        "pussy licking",
        "crossdressing",
        "anal sex",
        "crossdresser anal",
        "spit roast",
        "crossdresser group",
        "blowjob",
        "oral sex"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-game-of-horse-pt-07"
}