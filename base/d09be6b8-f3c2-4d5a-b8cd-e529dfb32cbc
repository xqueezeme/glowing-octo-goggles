{
    "title": "Chemistry Between Nerds and Sluts Ch. 08",
    "pages": [
        "Chapter VIII, Conclusion\n\nCole stirred in bed, awaking with light streaming in the closed window. He felt like he needed to pee but it was something else. He realized he was hard. He also felt pleasure and movement and came to the realization that he was being sucked on. All this flashed in his waking brain in a matter of seconds. 'Oh, god. What a way to wake up,' Cole thought. 'This is perfect.' He opened his eyes and looked down.\n\nStef had awakened several minutes earlier. She glanced at the clock by the bed and learned it was past noon. Not wanting to let the whole day at the lake slip away, she wanted to get up. She looked over at Cole but he was sleeping soundly still. He was on his back though which gave Stephanie a wickedly hot idea. She smiled to herself as she thought, 'I know he's never awoken to someone sucking his dick. I've never done it either but this could be fun.'\n\nShe slowly pulled back the covers not to disturb him. It took her a few seconds to move them with his arms in the way. Fortunately they had slept nude after they fucked so his cock was right there for her actions. Stephanie mused to herself, 'It looks soft and relaxed, and I wonder if it will even get hard with him asleep? He might have to wake up first?' She eased into a kneeling position beside him.\n\nSlowly she reached out her hand, tenderly picking up the five or six inch flaccid member. She loved the feel of a soft cock and wiggled it back and forth, watching the head flop around. She giggled to herself and thought, 'Oh, how cute it is.' She pulled the loose skin back from the head and used the fingers of her other hand to rub the underside as she held it. \n\nThe tender teasing didn't seem to do much, so she leaned over and licked the super soft, velvety head of Cole's cock. The taste was a little heady from the night's lovemaking but she didn't mind. She licked at the soft head making it wet with her saliva. She heard Cole moan and looked up. He still seemed to be asleep. He tried to move but she nervously held him flat, hoping he wouldn't wake. He stopped moving and seemed to settle again.\n\nStephanie smiled wickedly to herself. She wondered what he would think when he woke. 'He'll probably think me a complete slut when he wakes to find me with his dick in my mouth.' The thought didn't seem to scare her though but instead made her giggle softly.\n\nShe sucked the head of his still flaccid cock into her mouth. It felt so smooth and silky on her tongue. Her right hand held his shaft as her left decided to caress his balls. She jiggled the large egg shaped testicles in her hand, rolling them back and forth. Stef heard Cole moan softly. His cock was starting to harden, she could tell. For the next few minutes she sucked on the head with increased pressure and played with his balls. Her sucking seemed to draw blood into his shaft and the cockhead. She took his whole cock into her mouth and reveled as it stiffened inside. He grew to complete hardness as her right hand started to slide up and down the expanding shaft. \n\nStef stopped and looked at her work when she felt he was fully hard. His cockhead glistened with wetness. She smiled, pleased with her efforts and thoroughly enjoying herself. Her own pussy was beginning to pulse with desire. She had cum slightly from giving head before and this looked like it could be one of those times, especially if she helped it along with her hand. \n\nHer hands had kept moving on his shaft and balls. She returned to sucking his cock. Her tongue licked the sides of his cock, wetting even more of him. Then she came back up to the head and engulfed as much as she could. Pushing more she felt it nudge the back of her mouth and then slip into her throat. She pushed down until her nose tickled in his pubic hair. She held there, still pleased with herself for being able to deepthroat a cock. Several of her friends were amazed she could even do it. If they saw her take Cole's big cock they would have truly been amazed.\n\nStephanie felt him move and heard him moan. She backed off and remained still. He groaned but didn't move. She waited another few seconds then licked the saliva coated cock. Once more she took him into her throat. He groaned loudly and this time he moved his legs tying to turn. She backed off and tried to prevent that but this time she saw his expression change. His eyes opened as she sucked on the head and smiled at him. He looked down.\n\n\"I thought I was dreaming this, you wicked girl,\" Cole said, with a big smile.\n\nStef winked at him with his cockhead still in her smiling mouth. She backed off, \"You think I'm bad?\"\n\n\"How could I? It feels wonderful.\"\n\n\"I was hoping you wouldn't mind. It looked so soft and inviting. I couldn't resist.\"\n\n\"I'd love to wake up like this all the time,\" Cole stated.\n\n\"I'd be all for that,\" Stef said and engulfed the head again.\n\n\"Oh, you beautiful trickster,\" Cole proclaimed.\n\nStef set about applying her best blowjob skills. Soon she had him growling with the pleasure from her mouth. She could feel his balls tightening in her hand. She paused to just lick the head and the sides of the shaft, giving him time to cool down. Stephanie repeated this process two more times making him groan with the need for release. His balls were like rocks against his shaft. \n\n\"Please, Steffie! I can't take anymore,\" Cole moaned, with his head rocking back and forth on the pillow. \n\n\"I'm a real nasty slut, aren't I?\" Stef mused, smiling at him.\n\n\"You're a wicked pleasure tormentor, you are,\" Cole agreed, looking back down again.\n\nStef took him to the root in a smooth nearly singular move. She just had to pause a split second to adjust as his cock reentered her throat. Cole growled with his need to cum. Stef let him enjoy the pressure of her throat before backing off and going hard to work on him. Cole grunted and arched his back up trying to force more cock in her talented mouth. \n\n\"Oh, shit,\" he pleaded for release.\n\nStef was working now to bring him off. In seconds she got him there. His hands tenderly held her head to him as she sucked the cockhead hard and jerked him off rapidly in her mouth. She could feel his expanding cock seconds before the first burst coated the back of her mouth. She was prepared and took his successive blasts. Cole thrashed somewhat on the bed as his thoroughly teased cock let go his massively pent up seed. Stef stayed with him until his discharges slowed to a dribble and he slumped back to the bed. The load in her mouth was huge but she managed to hold it all. She tenderly sucked the rapidly deflating organ. \n\n\"Oh, geez, Steffie, please stop,\" Cole begged. His cock was now hyper-sensitive after all the teasing and his orgasm.\n\nStef did and leaned back a little. Cole looked down at her noticing her closed mouth. She opened it to show him what she had. His cum coated her tongue and filled her mouth. When she opened it some tried to leak from the corners of her mouth. She rapidly closed not to lose any. He watched as she swallowed his load with an exaggerated gulp and smile. She opened her mouth to show him that his spunk was now on its way to her tummy.\n\n\"You wicked witch,\" Cole exclaimed, but smiled at her.\n\n\"What?\" Stef asked, acting all innocent.\n\n\"You know what. First you wake me this way, then you tease me until I'm climbing the walls, then you show me my stuff before swallowing it,\" Cole explained.\n\n\"What part of that didn't you like?\" Stef asked, still playing the innocent.\n\n\"True, I loved it all,\" Cole agreed with a smile.\n\n\"I can't help myself,\" Stef said, curling up under his outstretched arm and kissing his cheek. \"I just love your dick.\"\n\n\"You do, huh?\"\n\n\"Definitely. I love playing with him.\"\n\n\"Well, he loves you too,\" Cole agreed. \"Can I return the favor?\"\n\n\"Oh, Cole, not till I shower, please,\" Stephanie said, kissing his cheek again. \n\n\"Okay.\"\n\n\"There'll be plenty of time for you to repay me today. Besides you don't need to worry about that. I get my kicks sometimes just doing it for you anyway,\" Stef concluded.\n\nStephanie snuggled against his warm side, her left arm across his chest. She loved lying with him like this. She felt truly happy. She started thinking about college and what lay ahead. Would he want to remain her man throughout college? Was it fair of her to limit him, knowing his experience was far less extensive than hers? \n\n\"Cole, you happy?\"\n\n\"Of course. Why?\"\n\n\"Well, I was just thinking about college. You're going to Illinois and me to Northwestern. We'll be somewhat far apart. Three hours I think by car. Will that matter to you? I mean we won't be able to get together too much. Do you think about that?\"\n\n\"I have,\" Cole said.\n\n\"What did you think?\"\n\n\"I think I'll miss you terribly,\" Cole claimed.\n\n\"Cole, what do you think about us?\"\n\n\"What do you mean?\"\n\n\"I mean how do you feel about us?\"\n\n\"Steffie, you're the best thing that's ever happened to me. I feel like the luckiest guy in the world every time we're together,\" Cole proclaimed.\n\n\"Would you still want us to remain together even with us going off to separate colleges?\"\n\n\"Sure, of course. Why wouldn't I?\"\n\n\"Well...I don't know. I was just thinking it might be hard for you. I mean not seeing each other for weeks maybe. I know a guy has needs and maybe you'll feel too confined. Locked into a relationship too soon before you have a chance to experience other...,\" Stef reasoned aloud. \n\n\"Stef, I'm happy, really. I'm not thinking about anything else.\"\n\n\"You sure? I mean you have really only been with me, except for that one time with Michelle. You don't feel you need to experience more women?\"\n\n\"No, I'm fine.\"\n\n\"But you should be allowed to taste other fruit. Maybe you'll find someone...\"\n\n\"Sweeter than you? Not possible! Stef, what do you want to hear? That I love you? I do, you know. I'm in love with you. I know it. I'm sure of it,\" Cole avowed.\n\n\"Oh, Cole...I love you too,\" Stephanie exclaimed and leaned over harder against his side to kiss him ardently on the lips. \n\nWhen she broke the kiss, they stared at each other lovingly. Stephanie glanced down his body and found his cock beginning to recover. The kissing was having an effect. Her hand stole down to caress his expanding cock. \n\n\"Maybe we could do something else if you're up for it?\" Stef said with a smile.\n\n\"Being near you always seems to have the same affect on me,\" Cole claimed.\n\nShe kissed his smiling mouth as her hand began to fondle his stiffening member. His fingers tweaked an already distended nipple, making her groan into their kiss. A few more moments of continuous action and Cole's dick felt rock hard again. Stef smiled at him as she shifted on the bed above him, settling her waist over his.  \n\n\"Okay, if I ride this big fella for a change?\" Stephanie asked.\n\n\"He'd like that,\" Cole agreed.\n\nStef held his cockhead in place as she shifted until he was pressed into her slot. Her own juices from the excitement of sucking his cock earlier enabled her to ease the first few inches into her without much resistance. A little more squirming and more penetrated her depths and opened her up with unbelievable fullness. \n\n\"Oh, baby. You feel so good inside me,\" Stef said, as she settled down completely on the long pole.\n\n\"You feel magnificent too,\" Cole exclaimed with a gasp.\n\nStef started moving slowly. She ground her pelvis into him and rocked her hips back and forth threatening to make sausage of his big cock in her tight viselike cunt.  His cock was buried deep inside her quivering pussy. \n\n\"Oh, shit! That feels so good,\" Cole growled.\n\n\"Ahh...my god, it does,\" Stef agreed, as she started to bounce on him. \n\nMark could hear the faint sound of squeaking bedsprings and voices from the room next door. He smiled to himself knowing Cole must be driving that big cock of his into Stephanie as he listened. The thought made his own cock stir. Michelle and he had fucked twice before going to bed. His cock was a bit sore from the last one which had taken a while for him to cum again. Michelle had sucked him off in the car ride up and two more loads dumped into her after that had worn him out. \n\nBut now his youthful cock was responding again and he turned to look over at Michelle. Her back was to him but the covers were down to her waist. As he leaned up on an arm, he could see her ample right breast. The morning light showed the paleness of her skin and the many freckles indicative of people with her reddish blonde hair. He leaned into her back and moved his arm over her to touch the soft pink nipple. He tweaked it tenderly to wake her gently.\n\nAfter a little while Michelle leaned backwards until she was flat. Mark gave her the room to do so. She didn't open her eyes but did groan at the continuous teasing of her stiffening nipple. Mark used the opportunity now to pull the covers from beneath her arms and down the rest of her body to her knees. Her reddish blonde strip of pubic hair shone brightly in the morning sun through the window. It was slightly matted from the previous night's lovemaking. \n\n'God, she is gorgeous,' Mark thought. 'I can't believe I'm lying here next to this exquisite being.'\n\nHis fingers traced down her flat tummy to her bellybutton. He teased round it before descending lower. His fingers stopped to caress the golden hairs. He played with them before moving lower to her closed pussy. Michelle didn't have large inner labia and her cunt closed up like a clam when not excited. Mark traced the fingernail of his forefinger along the two sides of her mons. He marveled at the feel before taking her right nipple between his teeth where his tongue could tease it. \n\n'This ought to wake her,' he thought, his finger now running the line of her gash.\n\nMichelle did stir and open her eyes. Mark stopped his tormenting of her now stiff right nipple to look up into her face. Her beautiful blue eyes were catching the light from the window.\n\nHe stared down at her, smiling, \"God, you're beautiful.\"\n\n\"That's a nice thing to hear upon waking,\" Michelle replied with a weary smile.\n\nMichelle glanced down at her exposed body, feeling a slight chill. Her wet and distended nipple told her what he had been up to. In fact, his right hand was still caressing the folds of her pussy. She also noticed his stiff cock as it pressed into her right hip.\n\n\"What're you after, big boy?\" Michelle queried with a smile.\n\n\"You, the lovely fair princess,\" Mark stated jokingly. \n\n\"What do you have in mind?\" Michelle asked, acting all innocent and captive.\n\n\"This,\" Mark said and he shifted up and over her. His cock left a snail trail of pre-cum across her upper thigh as he moved.\n\n\"Oh, do you aim to stick that big penis inside my tiny pussy, sir?\"\n\n\"I do indeed, woman. Now prepare to be taken,\" Mark demanded playfully.\n\nHe moved to spread her legs apart with his own but she made it easy for him by doing it herself. He pushed the wet head of his cock into her slit and rubbed it up and down. His cockhead spread her lips apart. She was a bit dry for immediate penetration but he eased in slowly just the same. He found her cunt entrance and pressed down. Once she opened a little, the still moistness of their evening's lovemaking allowed him to sink into her without causing her much discomfort. \n\n\"Oh, geez,\" Michelle moaned as Mark pressed his cock deeper inside. \"You feel like a battering ram.\"\n\n\"You feel incredibly tight, babe,\" Mark growled.\n\n\"Take it slow, Mark.\"\n\n\"Okay.\"\n\nHe could still hear the now louder noises from next door. So could Kendall as she woke with a sore backside. The thoughts of Kyle fucking her poor little asshole the previous night made her cringe with the memory. That had been one painful but then ultimately pleasureful experience. She wasn't in any hurry to try it again though. She wondered if the noise from above was Stef fulfilling her part of the agreed plan by taking it in the ass now too.  \n\nKendall got up to go to the bathroom. Kyle stirred as she got out of bed. He watched her cute ass walk into the master bath nearby. Kendall returned from the bathroom to find Kyle sitting up in bed. \n\n\"I see you're awake.\"\n\n\"Yeah...and enjoying the view,\" Kyle quipped as he stared at her cute naked body. \n\n\"You are, huh?\" Kay said with a smile.\n\n\"Definitely,\" Kyle replied.\n\n\"How about you get up and walk around so I can check you out,\" Kendall stated as she climbed back into bed smiling. \n\n\"Okay,\" Kyle said and swung out of bed. \n\nKendall watched his back as he walked towards the bathroom too. He was fairly tall and lean and Kay admired his tight butt as he walked. She soon heard the telling noise of his peeing in the toilet. When Kyle returned, she smiled and watched his flaccid cock sway as he walked back. \n\n\"See something you like?\" Kyle questioned with a smile, climbing back into the bed. \n\n\"Most definitely,\" Kendall responded, and then squealed as Kyle climbed on top of her.\n\n\"What might that be?\" Kyle teased as his cock dragged up her body from her pussy to between her tits. \n\nKendall looked at the very close penis as she answered, \"I think this.\" Her hand grabbed the hanging appendage and rubbed it against her nipple. \n\nKyle pulled back a little to kiss her. Kay's hand stayed on his dick as they passionately kissed. Kyle eventually broke the kiss but immediately sucked in one her firming nipples making Kendall moan aloud. 'Oh, that feels so good,' she thought. 'I'm going to get him hard so he can fuck me again.'\n\n'What a tasty little tidbit,' Kyle mused, as he sucked the distended bud. He moaned into her breast as her hand stroked his expanding cock. \n\nKendall trying to direct his stiff cock towards her waiting pussy and Kyle got the idea. He shifted just enough to align himself for penetration. Kay opened her labia with her free hand and positioned the cockhead at her entrance. She gasped aloud as he thrust forward burying the first few inches of his cock in her aroused, wet cunt. \n\n\"Oh, that's it, Kyle. Fuck me good. Fuck me hard,\" Kendall cried out.\n\nKyle knew that Kendall occasionally liked it rough. She enjoyed a good pounding and after last night's activities he probably had the stamina to give it to her. He plunged forward, sinking several more inches into her depths. \n\n\"Oh, so good. Oh, fuck. Do me, big boy. Fuck your tight little whore,\" Kay growled.\n\n\"Take this, bitch,\" Kyle announced before shoving forward hard. His cock drove to the root.\n\n\"Oh, shit,\" Kendall gasped aloud. \"Ahh...do it! Fuck me like your wanton whore,\" she shrieked. \n\nKyle started pounding into her. His cock pushed her tight pussy walls aside and ground deep into her womb. She could feel him hitting alternately her g-spot and her cervix as he alternated thrusts. One made her moan with pleasure and the other made her groan with discomfort, but both drove her crazy. Her long legs wrapped around his hips encouraging him to fuck her even harder which he did.\n\n\"Oh, god,\" Kay squealed. \"Do it, baby. Pound that pussy.\"\n\nThe bed was squeaking so badly now they could no longer hear the noises from the rooms above. If they had all known they might have been amused by the closeness of their pending orgasms.  \n\nStef was bouncing like crazy now. She had slowed down several times to almost a stop as they both had neared orgasm. Now, neither one could handle prolonging it any longer. They were riding a sexual frenzy that had to come to a crashing end. Cole watched Stef with her head back and her firm tits jiggling. She looked beautiful. Her pale skin was flushed red from the long exertion. Sweat glistened on her body as she rode him like a rodeo rider. Her legs ached from the constant up and down but it did not stop her from taking long strokes on the big cock. She would take him deep on each thrust and occasionally grind her sex against his. She rocked back and forth and rolled her hips to do marvelous things to his cock. ",
        "\"Oh, Steffie,\" Cole gasped. \"That feels so good.\"\n\n\"God, Cole. Your dick feels like it's in my stomach, it's so fuckin deep.\"  \n\n\"I'm going to cum soon, babe,\" Cole grunted.\n\n\"Give it to me, lover! Fill me up with your seed!\" Stef yelled.\n\nThey fucked hard for a few more moments before Cole stiffened and groaned loudly beneath her. Stef had already had several mini-orgasms and could feel a huge one simmering below the surface. She felt Cole's cock expand momentarily inside her and then felt the first scalding hot blast of his spewing cum. The pulsing and throbbing of his cock coupled with his gushing semen pushed her over the edge too. She screamed as her climax peaked.\n\n\"Ahh...Oh, so good...ahh...,\" Stef called out.\n\n\"Oh, fuck,\" Cole groaned as he pushed his discharging cock deep into her. If she were not on the pill his seed would have definitely made her pregnant as it coated the deep inner walls of her womb. He didn't care. He would have married her in a heartbeat. He was overcome by the feelings and the look of this beautifully magnificent creature that was his girlfriend. \n\nHow had he ever gotten this lucky? To think he had practically refused to help her. That he nearly refused to be her lab partner. That seemed like such a stupid idea now. He wondered how he had ever even contemplated it for a minute. The idea he could have lost this opportunity to be with Steffie - to make love to Steffie like he always wanted to, the Steffie of his wet dreams that he had jerked off thinking about all these years, the love of his life that he had known forever but had nearly refused to help - boggled his mind.   \n\nStef slumped down on top of him but kept her hips moving to prolong the pleasure for both of them. Cole's cock continued to paint her insides with a huge load of cum. Stef could feel it collecting deep inside her along with her own flowing juices. Their sweat mingled where their bodies touched. Blissful waves of pleasure coursed through each of them as the long held off orgasms crashed like waves upon the rocky shores. The two lovers moaned as the pleasure continued then began to wane. It was many moments before they finally lay still, panting and gasping for air. Both were content but no one more than Cole.\n\nMark's cock fucked Michelle with reckless abandon. He had gone slowly at first until her juices started to flow and eased his movements, but now he hammered into her. Michelle met his thrusts and even pushed back into him to take his cock all the way to the hilt. Her pussy was glowing like an ember with the lust coursing through her body. 'Oh, he's fucking me so well,' she spoke to herself only. 'He knows how to make me happy like no one before. Oh, god, that's it, Mark. Hit all my spots.'\n\nFor someone so new to fucking, Mark was quickly learning what made a woman happy. He was a considerate lover and endeavored to make sure Michelle felt as much pleasure as possible. He found that alternating the angle of his thrust gave her greater pleasure. Of course he also knew that contact with her clit drove her crazy. He would slide up and angle his cock into her from on top putting increased pressure on her clit. He thought he heard her mumbling to herself as he did. 'She likes that,' he reasoned. He did it for a while then dropped completely down the other way. This position drove him and her both nuts as his cock rubbed against something bumpy and rough inside.\n\n\"Ungh...,\" Michelle gasped. \"Oh, that's good. Soooo good.\"\n\n\"Ahhh...that feels incredible,\" Mark growled.\n\n\"You fuck me so good, baby,\" Michelle proclaimed.\n\n\"I love your body,\" Mark replied.\n\n\"Ahhh...,\" Michelle groaned again. She could feel her climax building to a huge crescendo. This was going to be a big one, she could tell. \"Oh, god, Mark. Make me cum, babe.\"\n\n\"I intend to,\" Mark stammered.\n\nMark picked up the pace and switched angles more frequently. He could tell it was having the desired effect on Michelle. Her hands gripped his sides and her legs wrapped around him and pulled him to her with incredible strength. It was like her body was trying to consume his by forcing him dick first into her cunt. They could no longer hear the bed squeaking from the next room because theirs was making too much noise and drowned out any other sounds. \n\n\"Oh, shit! I'm there...I'm cumming!\" Michelle shouted. \n\n\"Ungh...fuck,\" Mark gasped, feeling his own cum roiling in his balls. They were tight to his shaft like rocks beneath a steel rod. \n\n\"Ahhh...keep fucking meeee, pleaseee,\" Michelle slurred as her orgasm hit. \n\n\"Oh, damn,\" Mark protested as he felt her pussy clamp down on his cock like a wet, velvet vise.\n\n\"Cumming...,\" Michelle managed to say, as the sweet pulses of bliss radiated across her being and flash froze her brain like dry ice. \"Ungh...,\" any other words were constricted in her throat even as her mouth gaped open.\n\nMark tried to keep pumping but her clenching pussy was unbelievably strong. She held him like some evil mad woman hell bent on keeping his dick within. He managed to start moving again only when Michelle's orgasm slowed and her vagina relaxed. He pumped her for a few more moments starting to near his own release.\n\nMichelle came down from her incredible cum only to feel Mark starting to fuck her again. Her pussy still tingled from the last orgasm. She came up quickly with a better idea.\n\n\"Mark, come up here and fuck my tits,\" Michelle suggested.\n\n\"What?\" Mark groaned through lust clouded thoughts. \n\n\"Bring your cock up here and fuck my tits,\" Michelle repeated.\n\nMark had seen that once in an internet porn site and pulled his throbbing cock from her depths. He slid up her body using his arms for support. His wet cock glistened in the morning light. Michelle spit on her hand and rubbed it in the cleavage between her two melon sized globes. The pink nipples stared invitingly at Mark as he guided his cock between her major boobs. \n\nMichelle had only done this once before but knew to press her tit flesh around his cock from both sides. Mark's wet cock slid between her mounds like a sled between to moguls. Her tits nearly enveloped his whole cock. Mark had a decent sized cock but only the very head protruded through on the up thrust. Michelle tried to lick the reddish purple head as it appeared briefly each complete thrust. \n\n\"Oh, god. That feels so great,\" Mark growled, looking down at the hollow caused by Michelle pressing her tits together. \n\n\"You like it?\" Michelle queried.\n\n\"Like...I'm going to cum soon,\" Mark gasped.\n\n\"Do it, babe! Cum all over my tits,\" Michelle commanded. \"Cover them with your spunk.\"\n\n\"Oh, shit,\" Mark called out, overcome by her tits and her talk. \n\nThe sight of his beautiful redheaded girlfriend, with her pale lightly freckled skin, and her incredibly big firm tits wrapped around his throbbing cock, nearly drove him mad with lust. He couldn't believe this was actually happening to him. A guy that two months earlier was considered one of the geekiest brainiest nerds of the senior class. Here he was fucking the tits off one of the hottest girls in school and she was asking him to paint her tits with his cum. Could this possibly be reality or had he gone into some time warp and would wake up again soon as the nerd he once was. The answer would have to wait.\n\n\"Oh, fuck,\" Mark howled.\n\n\"Yes, baby! Cum for me,\" Michelle yelled. \n\nMark's cock erupted like a geyser. The first blast glanced off Michelle's chin and down her cheek to her ear and hair. The next one she managed to take right in the mouth. Mark watched through lust clouded eyes as the white seed coated her tongue. The third hit her upper lip and splattered like a water balloon around her mouth and cheeks. The next several pulses were weaker. The first one left a trail of white cum between her tits. He pulled from between her magnificent orbs and tried to paint each pink nipple in white. It worked but that was the end. He slumped forward on his weakening arms and his cock just happened to find the sucking mouth of one cute redhead. She drained his shaft of anything else. \n\nKendall and Kyle had been the last to start the morning's love making but the first to finish. Kyle had pounded hard into her until they both climaxed in a wild rush. He had pumped her full of his semen as she shuddered through her own incredible orgasm. The pain of her ass-fucking from the night before was long forgotten. Their panting eased now as they heard the squeaking beds from the rooms above finally go completely silent. \n\nKendall thought about the prom, the party, and now the time at the camp and smiled to herself. It had been an incredible prom so far and it wasn't over. They had another day to enjoy each other's company before they had to head back. \n\nShe looked over to Kyle who appeared to be falling asleep again. She stared at his features and smiled to herself. He was a handsome guy and a great lover. She hoped they would stay as they were now forever. Kyle was planning to work for his father after high school. Kendall was headed to Notre Dame. It worried her that being apart from him would test the strength of their commitment to each other. They had talked many times about their future together. Both wanted to eventually marry but Kendall wondered if he had doubts still. She had to admit too that the temptations of life away at school might be too much for her also. She vowed to be strong but knew in her heart of hearts that she wasn't totally committed. She worried as she watched his slow steady breathing and looked down at his flaccid moist cock. \n\nThey all rolled out of bed eventually. Stef and Cole were first, followed by Michelle and Mark, and soon after Kendall and Kyle. They made brunch and cleaned up the dishes. Kyle had spotted two fishing poles with seasonal badges and talked Mark into going with him in the canoe. Cole was reluctantly dragged into taking the girls shopping as they needed more food and drinks. Since it was his dad's SUV he was elected to go with them. He rationalized that life could be worse than escorting three beautiful women around. \n\nAs they shopped and Cole watched the girls, it struck him that Michelle had never tried to get together with him again. In fact he noticed that Michelle and Mark seemed much closer since the prom. He was glad because he meant what he said to Stef about being true to her. He didn't want anyone else, but that didn't stop normal male thoughts of Michelle's big tits from invading his psyche. Cole tried to convince himself it was normal guy stuff. But he even thought about Kendall's tight ass once in a while, which was crazy because Steffie's ass was near perfect. Was Stef right? Did he still want to sow some wild-oats? He tried to tell himself no. Definitely not!\n\nThe rest of the day was fun and relaxing. They played games and sunbathed on the deck. The girls all looked incredibly hot in their bikinis. Too bad the water of the lake was still too cold for swimming. They drank some of the booze they had and got mildly buzzed. Kyle and Mark caught three bass and they fried them up for dinner with potatoes and salad. There was lots of sex talk and innuendos the whole day. Several dirty jokes were told and there were laughs aplenty about the squeaking beds in the morning. By the time they retired for the night, everyone was mellow and tired. \n\nWhen Stef and Cole were ready for bed she curled up in his arms. They kissed ardently and she could feel his big youthful exuberance poking her in the belly. Her hand enclosed around the turgid member as they continued to kiss passionately. When they broke the kiss they looking into each other's eyes. The moon outside was full and the room basked in a dull glow of light. \n\n\"Cole, you having fun?\" Stef asked. \"You were such a good sport going food shopping and to the other stores with us.\" \n\n\"It was fun,\" Cole allowed. \n\n\"You happy then?\"\n\n\"Sure. I'm with you. Of course I'm happy,\" Cole elaborated. \n\n\"That's sweet,\" she stated. \"But you know I have something to tell you. Or maybe ask is the right way to say it.\"\n\n\"What's that?\"\n\n\"Well, it's a little embarrassing but Kendall wanted me to make a pact with her about something. I never gave her my complete commitment but I did hint I would try.\"\n\n\"Geez, what're you talking about?\"\n\n\"I'm talking about fucking but not in my front door. I'm talking about...\"\n\n\"You want to try anal sex?\" Cole asked with surprise.\n\n\"Well...that's what Kay and I talked about. You see neither of us had ever tried it. But last night Kendall let Kyle have her anal virginity.\"\n\n\"She did?\"\n\n\"Yeah, and what's more I told her last week I might consider giving my anal virginity up too this weekend.\"\n\n\"You serious?\"\n\n\"Do you want to try it? I must admit I'm scared. You're so big. Bigger than Kyle and she said it hurt like hell. I'm really scared but I wanted to make this weekend memorable for both of us forever. I thought, as she did, that giving you guys our first anal sex would be special. What do you think?\"\n\n\"I don't know. I'm flattered but the last thing I want to do is hurt you,\" Cole claimed.\n\n\"That's nice but I should be able to manage according to Peggy. She's done it lots and likes it.\"\n\n\"You're serious about this?\"\n\n\"Why? You don't want to?\" \n\n\"No, it's not that. I just think you might not really want to is all.\"\n\n\"I can take it if you want to. Do you?\"\n\n\"Well, sure. I'm game if you want to,\" Cole agreed.\n\n\"Oh, my god! I can't believe I'm agreeing to letting you try to stick that monster up my poor little ass,\" Stef fretted.\n\n\"We can forget...\"\n\n\"No! Let's do it,\" Stef stated.\n\n\"How do we start?\"\n\n\"Well, we need one of these,\" Stephanie said, extracting a condom from the nightstand drawer where she secretly hid it after Kay gave it to her. \n\n\"And this too,\" she added, grabbing some lube. \n\n\"Now what?\" Cole asked.\n\n\"Well, I see you're hard already but it might be best if we work up to this. Kay didn't get off with Kyle fucking her ass so how about I suck on you a while to get you primed. That way you won't last forever and really kill me?\"\n\n\"Aren't I supposed to get you prepared somehow?\"\n\n\"Yeah, you're supposed to work your finger in me first. Sounds gross, doesn't it?\"\n\n\"Not too bad with your sweet ass,\" Cole claimed jokingly.\n\n\"Okay, big boy. How about we 69? You can work on me while I have fun with your big soldier here,\" Stef said as she stroked his hard member. \n\n\"Works for me,\" Cole agreed.\n\nStef shifted around on top of Cole. Cole put some lube on the forefinger of his left hand as Stef settled her delicious looking pink pussy directly in front of his face. He looked above at the tiny winking hole that he had not really focused much attention on before, feeling it was off limits. Now it looked captivating and unbelievably tight. He couldn't at this point see any way his cock was going to fit inside her there without splitting her in two.  His thoughts were then diverted as Stef engulfed the head of his cock into her warm, wet mouth. \n\n\"Oh, sweet,\" Cole groaned as Stef applied suction to the head of his cock. \n\nHe leaned up, pushed the pillow tight behind his head and kissed around her sex. Cole took in her scent and it caused the sexual chemistry in his body to go into overload. He kissed and licked her labia. He used his right hand to part her lips in order to focus on her core. Cole trailed his tongue up through her lips, tasting the sweetness of her. 'Oh, my god. I could do this for hours if my tongue could hold out,' Cole thought. He probed deep into her cunt until his tongue ached from being forced out that far. \n\n'I love this cock,' Stephanie told herself. 'I could suck on this beautiful big meat stick forever.' She sucked him deeper into her mouth, pushing the spongy head into the entrance to her throat. This was not her favorite position to deepthroat. She much preferred having her head hanging off the edge of the bed or kneeling in front of him. The angle was just too tough in this position to make the transition into her throat but she tried. Stef swallowed hard and pushed. The big head filled her throat to capacity but did slide part way down. The groans Cole made into her pussy made her smile as best she could with her mouth jammed full of his cock.\n\nCole started sucking on Steffie's clit. He remembered what she said about Kendall not getting off from being fucked in the ass so he wanted to give her pleasure now. The moans he felt in his cock when he sucked her clit told him Stef loved it. 'Got to get her off,' Cole decided. He pushed a finger of his right hand into her cunt as he licked and sucked on her clit. His left hand had been idle with the lubed up forefinger. 'Let me apply this baby to her butthole and see what happens,' Cole mused. He teased the slick finger around the tight puckered hole, feeling the crinkled surface. It was so tight even the end of his finger met resistance as he tried to probe the little hole. \n\n'Oh, fuck,' Stef silently whispered, as she felt his finger teasing the entrance to her rear passage. \"Oh, god. He's going to do it. He's going to stick his finger in me there.'\n\nThe probing forefinger forced her sphincter muscle to part slightly allowing the end to wiggle inside to the first knuckle. The lube helped ease the passage. 'Oh, shit,' Stephanie growled mentally and had to pull back on his cock again to breathe. Cole continued to lick her clit and he added a second finger to her cunt. Stef could feel her pleasure mounting. The new sensation of something in her ass was a definite turn on. Her pleasure sensors were on overload. She moved the hand cupping and fondling Cole's balls to tweak her left nipple. She pulled and tortured the nub more but the pain and pleasure further ignited her passion. \n\n\"Oh, fuck, Cole!\" Stef shouted with her mouth now completely off his cock. Strings of saliva trailed from her mouth to his cockhead. She actually drooled a bit down onto his shaft by accident. Her mouth was agape from the many blissful pleasures she felt. She rushed headlong towards an orgasm that threatened to blow her mind. \n\nCole took his cue from her reactions and pushed the anal invading left finger in more. He twisted it around stretching the sphincter and teasing the sidewalls. He could hear Stephanie mumbling inaudibly. His right hand moved faster as his lips sucked her clit. \n\n\"Ungh...Ahhh...I'm cumming,\" Stef barked. \"Oh, shit! I'm cumming so good!\"\n\nA volcano of pleasure erupted in her brain. All her senses were magnified a hundred times as his fingers, lips, and tongue drove her wild. She had not stopped pulling and twisting her own nipple either. The sensation overload made her scream loud enough for the rest of the house to hear. \n\n\"Ahhh...Ohhh...baby, don't stop,\" Stephanie implored. \"Keep fucking meee...pleaseee.\"\n\nCole did and was rewarded by a flood of Steffie's juices to his face. More than he could remember ever getting from her before. His forefinger was as deep as it could go in her ass. His two right fingers seemed to pull waves of sweet nectar from her inner being right into his waiting mouth. Just as he felt her beginning to relax, he tried pushing a second finger into her butthole to stretch it further. \n\n\"Ahhh...fuck....!\" Steffie screamed as the second digit invaded her asshole and joined the first. \"Oh, god! You're killing meee...\"\n\nCole pulled away to say, \"Should I take it...\"\n\n\"No! Keep doing it,\" Stef shouted. \n\nCole moved his fingers in both of her holes simultaneously. Stef pushed her groin back into his face against the movement of his fingers. She tried to drive them deeper into her tunnels. She had been coming off the first orgasm but the added finger in her ass was pushing her to another swiftly. The second half of the multiple orgasms ripped through her like the fingers probing deep in her holes. Cole had to move his face back to give his hands room to work. He went back to flicking his tongue over her clit.",
        "\"Eeee...,\" Stef groaned, as the second orgasm took over her senses. \n\nCole kept up the action in her cunt and ass. His tongue ached as it stretched to make contact with her sensitive knob. Stephanie groaned constantly as her climax ran its course. The second orgasm was not as intense as her first but it seemed to stretch out for a long time. She rode it completely out until her pussy became super sensitive and she had to pull away from his maddeningly, teasing tongue. Cole got the hint and eased a finger at a time of each hand out of her pussy and rectum. Stef nearly collapsed on his cock. She just managed to roll to the side to avoid it. She was spent and he still hadn't fucked her ass or even gotten off. \n\nCole sat up to look at her. His face was soaked with her juices. Stef's eyes were closed and she seemed to be asleep. He looked at her sweet, perspiration covered face and smiled. He was proud of himself. He had given her a multiple orgasm and knocked her out cold. Cole pushed the damp hair back from her pretty face to see the expression on it. She looked totally sated. He wasn't sure she could continue as he stared at his fully engorged cock still stiff as a board.\n\nCole stroked Stef's face and eventually her eyes opened and she moaned before turning over. He noticed her normally pink left nipple was red and appeared more swollen than the right. He touched it lightly and she moaned. Cole leaned down and kissed her cheek, forehead, and then down to her lips. After several kisses to her lips she responded softly and kissed him back. \n\nIn several more moments but eventually Stephanie recovered enough to open her eyes and look at Cole. She leaned up on one elbow and smiled at his already smiling face. \n\n\"That was wonderful,\" Stef exclaimed.\n\n\"Really?\" Cole asked, but smiled still.\n\n\"Baby, it was awesome,\" Stef proclaimed.\n\n\"Even the ass part,\" Cole asked.   \n\n\"Even that. Actually, I liked it. It hurt a little at first but the double penetration was spectacular,\" Steffie explained as she eyed his erect cock.\n\n\"I'm glad you liked it,\" Cole stated.\n\n\"Yeah, it was fabulous but what about my poor baby. That big cock looks like it needs help.\"\n\n\"I'm okay,\" Cole tried to say, but Stef was already cutting him off.\n\n\"Let's go,\" Stef said, shifting around.\n\n\"Are you sure you're up for it?\" Cole questioned. \"I mean...\"\n\n\"I'm tired but I think I can take it,\" Stef allowed.\n\nStef positioned herself on the edge of the bed and Cole got up and moved behind her. He pulled the condom on, his first ever, and lubed it up. He then spread more on her still slightly puckered asshole. His finger pushed into the opening, finding less resistance than the first time he tried. He then leaned in and positioned the bulbous head of his cock against her pinkish red rosebud. There was no way it looked like it would fit. \n\n\"You sure about...\"\n\n\"I'm ready,\" Stef said, trying to relax like Peggy had told Kendall and her. \n\n\"Okay,\" Cole said and rubbed the head over the lube slick entrance.  \n\nHe pressed down a little with his cockhead nudged right up against her anal passage. The spongy head flattened somewhat and looked even less likely to gain entrance. The opening did give slightly but held there. Stef moaned and shifted to try and get her ass more in the air. Cole pressed forward more feeling the intense pressure to his cock as well. Stephanie's sphincter gave a little but still held the head out. \n\n\"Oh, fuck,\" Stef grunted. \n\n\"You okay?\" Cole wanted to know.\n\n\"I think so. Take it slow please.\"\n\n\"Okay.\"\n\nCole pushed again. This time the head stretched the opening allowing it to gain marginal entrance.\n\n\"Good god!\" Stef growled. \"Oh, shit!\" \n\n\"You okay...\"\n\n\"Stop asking me that,\" Stef snapped, obviously uncomfortable from the huge cock trying to stretch her rectum to an unnatural state. \n\nCole pushed again. The head popped inside. \n\n\"Fuck!\" Stef screamed. \"Oh, god! It hurts...ohhhh...it hurts!\"\n\n\"You want me...\"\n\n\"No, damn it! Give me a minute.\"\n\nCole didn't say anything nor did he move a muscle. Her rectum felt like it was vise-gripping his cockhead. It took a while but eventually Stef seemed to relax some. \n\n\"Okay...try some more,\" she said.\n\nCole was done saying anything, he just pushed forward drilling about an inch more inside her. Stef stiffened all over again and he gave her several minutes to recover. He then repeated the whole thing again. He gained about an inch with each thrust and rest. It took what seemed forever but eventually he had most of his cock buried in her rear hole. Stef was mumbling to herself constantly. Her back was sweaty even though the room was cool at night. Cole waited longer before pulling back. He reasoned it was time to start fucking her and didn't try to get all of himself in her. Stef felt him pull back until just the head was inside then pushed back in.\n\n\"Oh, geez,\" Stef groaned aloud. \n\nHer face was buried sideways in the bed sheets and her hands reached back to touch his legs. She tried to control the depth and speed of his thrusts that way but it actually did little. Cole pulled back and sank back down. This time even more disappeared inside her. His big dangling balls were slapping her between her ass and cunt.\n\n\"Oh, sweet mother,\" Stef moaned.\n\nCole couldn't see any way that Steffie could be enjoying this. Her face showed obvious pain. He would have stopped the second she asked him but she didn't. Instead when she relaxed a little she moaned for him to continue.\n\nSlowly Cole withdrew and pushed inside. Her rectum was so tight it felt incredible. Her muscles squeezed his cock like it was trying to break it off. He eventually managed to pick up speed without Stephanie complaining. He also buried every inch of his monster cock up her poop chute. His groin slapped against her ass on each inward thrust. He wasn't sure but he thought he felt Stef pushing back.\n\nCole kept going faster and harder without complaint from Stef. He could feel his balls beginning to churn now that he had a good rhythm going. The feeling to his cock was unbelievable. It was so tight, yet warm and soft at the same time. Stef surprised him by getting up on her elbows. He watched as she touched her own nipples. It gave him an idea and he reached around and fingered her pussy like he had seen in a porn movie once. Stef moaned her approval. He also realized she was pushing back on each of his inward thrusts now. \n\nHe fucked her ass as deeply as he could, burying his cock inside her anal cavity on each thrust. Now Stef's moans were definitely ones of pleasure. His fingers teased her clit and she pulled and twisted her own nipples as he fucked her ass. 'God, she's enjoying this now,' Cole realized. 'I wonder if I can get her to cum like this.'\n\nStef had her own thoughts going, 'Oh, my...this is wild. Oh, geez, it feels weird but good at the same time.'\n\nCole continued to fuck her until his balls churned with their need to release their pent up seed. Stef played with one of her nipples while Cole worked his cock in her ass and his fingers on her clit. She was meeting his thrusts and her climax was simmering right below the surface. Cole fucked her and his balls and hips slapped against her body. The sounds of sex filled the room with skin to skin contact and wet squishing noises. \n\n\"Mmmm,\" Stef moaned. \"Oh, god. I'm going to cum. Keep fucking me, Cole.\"\n\n\"Meee too,\" Cole groaned with pleasure. His cock expanded in her anal cavity as he pumped it back and forth.\n\n\"Oh, geez...Ahhh,\" Stephanie grunted.\n\n\"Ahhh,\" Cole bellowed as his sperm shot through the tube in his shaft and blasted into the condom.\n\nStef could feel the pulses and it pushed her over the edge too. \"Shittt...Ohhh, so good.\"\n\nEven with Stef's muscles clamping down on his cock in her ass, Cole was able to steadily piston into her tight butt. He fucked her until his energy drained along with the cum departing his body. Eventually, when they both were done cumming, he eased back slowly out of her ass. He could hear Stef suck in her breath as the big cock exited her rear tube. Cole glanced down and was amazed at her stretched and gaping asshole. It looked sore and red. His legs were weak and he fell across the bed next to her. Stef curled into a fetal position with her back to him. \n\n\"You okay?\" Cole asked, whispering in her ear. \n\n\"It hurt like hell at first,\" Stephanie said. \"But after a while it got so it felt good.\"\n\n\"I hope it didn't hurt you too bad. Your butt looks stretched.\"\n\n\"It's sore. I can tell you that,\" Stef proclaimed. \"Did you enjoy it anyway?\"\n\n\"Yes, it was wild and felt so tight.\"\n\n\"Good. At least we both got off.\"\n\nThey spooned together and drifted off to sleep.\n\nThe other couples had been less energetic. Michelle was feeling a little sore so she just sucked Mark off. They were asleep despite the noise from Cole and Stef's room. \n\nKendall and Kyle had fucked with her on top and Kyle had stuck a finger in her ass as she rode his cock. Her butt was still sore from the night before but it felt good to her anyway.  She rode his dick for a while, grinding down on it against her clit. Kyle had warned her twice he was going to cum and she stopped to give him time to relax. He was ready to burst again by the time she finally let go and rode him to completion. They both came nicely and drifted off to sleep as well. \n\nStef was the first awake. As she sat up in bed next to the still sleeping Cole, she felt the soreness still in her backside. She wasn't sure she would be doing anal again anytime soon. \n\nAs Stef looked at Cole and thought about the prom and the stay at the lake, she realized that unfortunately the long fun prom weekend was coming to an end. She also realized just how much she loved him. She hoped with all her heart that they could remain together all through college. Stephanie could see herself marrying her childhood playmate. Maybe she had loved him all along. She wasn't sure but she did know that she didn't want this to end. \n\nShe thought back on how it was just going to be studying together and a blowjob to seal the deal. Now that seemed such a distant memory. She thought of her past relationships and the sex. 'My, I had been such a slut. All I wanted was to fuck and suck with Chris and Jordan. Now I realize I need more than just sex. Sure the sex was great but so has it been with Cole. Better even because it's not just sex, it's romance. At least to me it's not just sex and I believe he feels the same way.'\n\nStephanie watched Cole breathing calmly. She thought about waking him with another blowjob but instead slipped out of bed to go make coffee. 'Let him sleep,' she decided.\n\nBy the time Stef had the coffee made and started on pancake batter, the rest were stirring. Cole woke and found her missing. He was the first down the stairs. He helped Stef finish the batter but they put it in the refrigerator till everyone was down. They took their coffee and went out of the large deck overlooking the lake. It was a beautiful sight and they sat on the long steps down and looked towards the sloping hill descending to the water's edge and the dock. \n\n\"How're you feeling, Steffie?\" Cole asked.\n\n\"Sore,\" Stef scolded him like it was all his big cock's fault, but she smiled too and sipped her hot steaming coffee.\n\n\"Sorry. I bet that's true.\"\n\n\"Yeah...It's okay though. I'll be all right,\" Stef stated. \"Cole, can I ask you something?\"\n\n\"Sure.\"\n\n\"Are you looking forward to going away to college?\"\n\n\"Yes...somewhat. I mean I wish we were going to the same school. That would make it perfect,\" Cole claimed drinking.\n\n\"That's nice. You'd like me to be going to Illinois?\"\n\n\"Yes, but Northwestern is a great school and I'm proud of you for getting in there.\"\n\n\"You are? Well, I'm proud of you for getting into Illinois for engineering too.\"\n\n\"I'll miss you terribly you know,\" Cole stated, sipping his coffee again.\n\n\"You'll miss the sex,\" Stef said. \"But we can see each other every...\"\n\n\"I'll miss much more than just the sex,\" Cole exclaimed, cutting her off.\n\n\"You will? Like what?\"\n\n\"You! Holding you, looking at you, and touching you,\" Cole answered.\n\n\"Me too!\" Stef agreed. \n\n\"We've come a long way,\" Cole added.\n\n\"We sure have. I was just thinking about that. How this was only supposed to be about a chemistry grade.\"\n\n\"Yeah, the hottest girl in school asks the chemistry nerd to help her study; and to think I nearly turned you down. What a geek move that would have been,\" Cole confirmed.\n\nStef laughed with him. \"Yeah, you'd have missed out on a lot, huh?\" Stef agreed.\n\n\"Unbelievable. Yes...I'd have missed out on a lot.\"\n\n\"A lot of good sex,\" Stef mused and sipped her coffee again.\n\n\"Definitely,\" Cole replied with a smile, \"but the worst part would have been not getting to know you better.\"\n\n\"Thanks, Cole. I'm glad...\"\n\n\"Steffie, it's more than that too,\" Cole said, suddenly looking at her seriously. \n\n\"What?\" Stef asked looking at him nervously.\n\n\"Steffie... I've...I've fallen in love with you. Actually, that's not right. I think I've always loved you but now I know for sure that I do,\" Cole proclaimed.\n\n\"Cole...you only feel that way because we've enjoyed all these great times together. Once you go away to college you'll meet someone...\"\n\n\"No, Stef! Don't say that. It's not true. I'll only want to be with you!\" Cole declared.\n\n\"Cole, you're going to want to meet other woman besides me. You'll want to...\"\n\n\"I won't. I love you, Steffie. But I was hoping you would love me...\"\n\n\"I do! Cole, I do!\" Stephanie exclaimed.\n\nShe put her coffee down quickly and nearly jumped in his lap before he could put his down too. Stef kissed him ardently and soon they were making out like mad. They were totally into each other and didn't see Michelle and Mark approaching with coffee mugs too. \n\n\"Get a room, you two,\" Michelle quipped.\n\n\"Yeah,\" Mark agreed laughing.\n\nStef rolled off Cole's lap even though she could feel the beginnings of his arousal poking her in the butt. They all laughed together as Stef resumed her seat next to Cole.\n\nStef noticed Mark and Michelle were holding hands. \"You two are quite chummy too so don't razz us,\" Stef indicated, nodding at their clasping hands.\n\n\"Yeah...I'm crazy about this guy,\" Michelle offered. She gave Mark a peck on the cheek. \n\n\"I'm nuts about her too,\" Mark stated, not to be outdone. He turned and kissed her on the lips.\n\n\"Looks like someone else could use a room,\" Cole said jokingly.\n\nThe scene was then interrupted once more by the remaining couple. Kendall was standing in the doorway with Kyle holding her shoulders from behind.\n\n\"Who made the pancake batter?\" Kay asked.\n\n\"I did,\" Stef replied.\n\n\"Want some?\" Kendall asked.\n\n\"Sure, I'll help.\"\n\n\"No need, we will,\" Mark and Michelle said, exiting the porch, leaving Cole and Stephanie alone again.\n\n\"Where were we?\" Stef asked with a smile.\n\n\"We were saying we loved each other,\" Cole reminded her but unnecessarily. \n\n\"Oh, yes,\" Stef said and took his hand.\n\nThey walked down to the dock and then along the shore. It was early in the year yet and most of the houses were unoccupied. They walked past several other docks and came to a rocky outcropping just off the beach. Cole helped Stef climb up on top and they worked their way over several rocks and around a couple big boulders. They found a secluded spot where they could not be seen from the beach. Only someone in a boat, which there wasn't any, could have seen them. They spotted a large flat rock they could sit on and just hang their feet into the water.\n\n\"Isn't this place wonderful?\" Stef professed.\n\n\"It's great but then again anywhere with you is great,\" Cole stated looking at her and smiling.\n\n\"Oh, what a romantic,\" Stef giggled. \"But I agree with the feeling.\"\n\nCole leaned over and kissed her. They kissed for long moments and teased each other with their tongues. Stef was only wearing a sweatshirt with nothing on underneath and sweatpants. Cole had on his swimsuit and a sweatshirt too. Cole leaned Stef back kissing her. Soon his hand was up under her sweatshirt, palming her soft warm breast. He could feel her heart beating and her nipple stiffened and poked into his hand. \n\n\"God, do I love you,\" Cole avowed, as he stared into Steffie's eyes. \n\n\"I love you too,\" Stef said smiling at his handsome face.\n\nIt was too rough to fuck on the rock but they 69'd and worked the other to a glorious orgasm, drenching each other's mouth with their expelled juices. They held each other until the tremors passed and the rock got just too uncomfortable to remain longer. They held hands as they made it back over the rocks and along the beach. \n\nThe pancakes had been done for a while and everyone else had eaten but them. Their pancakes were a little cold but they didn't mind. They winked at each other when the others asked where they had been and they just said along the shoreline. \n\nThey had time for one more boat ride before they had to leave. Kyle captained the boat as they made their way to a beach on the western side of the lake. They pulled the boat up on the beach a little and camped out on the shore for a little while. The girls sunbathed while the guys tossed a football around. It was a fairly warm day for the spring and they all enjoyed the chance to be outdoors. \n\nAll too soon it was time for them to leave. They piled back in the boat and headed back to the house.  Kendall worked with Kyle to secure the boat while the rest worked on cleaning the house and doing laundry. It was mid-afternoon by the time they were packed and ready to go. The three couples loaded back in the SUV for the trip back. \n\nMark and Michelle once again took the back seats. A half hour into the trip they went silent from the conversation with the other four. Stef glanced back like on the trip up only to see them at it again. They were kissing and she could tell by shoulder movements that hands were active too. She chuckled, nodded to Kendall and Kyle, and then turned to clue Cole in. \n\nThe rest of the ride was mostly conversation and caresses between just the individual couples. The group was basically tired and everyone looked ready for a nap when they got home. \n\nCole dropped Mark at Michelle's and Kyle at Kendall's house. They all said their goodbyes with hugs and kisses from the girls to everyone. The guys shook hands talking about what a good time it was. \n\nWhen Cole pulled in front of Stephanie's, he helped her carry her bag to the door.  They kissed and professed their love for each other again. They agreed to study chemistry together the following day after school. \n\nClasses were winding down now and soon they would graduate. Summer jobs would follow and then finally college in the fall. Stef looked forward to the coming college experience with mixed feelings. Somehow she wished Cole and her could remain together longer. She had to make sure he loved her for her and not just the fun and sex they had together. She was pretty sure he loved her as much as she did him but she also worried he might be tempted at college. \n\n'Well, whatever happens we'll work through it,' she told herself. 'I do love him.'    "
    ],
    "authorname": "BlewWater69",
    "tags": [
        "love",
        "anal"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/chemistry-between-nerds-and-sluts-ch-08"
}