{
    "title": "The Belladonna Sisters Ch. 07",
    "pages": [
        "The preparations for Bonnie and Charlotte's appearance on Cupcake Battle continued, growing ever more intense as the deadline aired. \n\nDan and I helped the girls prep as best we could. We tried to envision every possible scenario. Movies were a possible category, and we spent a week going through what we hoped was an exhaustive list. \n\n\"Okay, next movie,\" I announced, sipping from my wine glass and scanning the list. \"Here's a big one: The Godfather.\"\n\n\"Oh, fuck,\" Charlotte said. \"Please, nothing with a horse's head.\"\n\n\"Leave the gun,\" I said. \"Take the cannoli.\" \n\n\"What?\" Bonnie asked. \n\n\"That's a line from the movie,\" I explained. \n\n\"I can't fucking believe I've never thought of doing a cannoli cupcake before.\" She paused, jotting it down in her notebook. \n\n\"That was easy,\" I said, glancing at the list. \"Okay, next up is a tribute to the films of Nora Ephron. You know, Sleepless in Seattle, When Harry Met Sally.\"\n\n\"Fuck,\" Charlotte said. \"What's a signature Seattle thing? Maybe the whole 'sleepless' angle and we'd do a coffee cupcake? When Harry Met Sally is New York. Hmm.\"\n\nDan started laughing.\n\n\"What is it?\" I asked. \n\n\"I've got it,\" he announced. \"Just make the most exquisitely awesome cupcake you can summon and call it the 'I'll-Have-What-She's-Having Cupcake.' What do you think?\"\n\n\"Could work,\" Bonnie said.\n\nWe spent a few minutes working on Dan's idea. We finally settled on the idea of the Caffeinated Orgasm Cupcake. It would basically be the ultimate coffee cupcake, tying in Sleepless in Seattle with the famous line from When Harry Met Sally.\n\n\"Okay, what's next?\" Bonnie asked.\n\nI glanced at the list.\n\n\"Forrest Gump.\"\n\nBonnie frowned. \n\n\"Wow,\" she said. \"One of my favorite movies, but I'm drawing a blank. Some variation of a theme on an Alabama dessert, maybe?\"\n\n\"Shrimp cupcake,\" Dan offered jokingly.\n\n\"We'll hit the fifty states when we get through the movies,\" I said, rifling through my print-outs. \"I've got lists of regional desserts and specialties.\"\n\n\"This is the toughest thing I've ever done,\" Bonnie said. \n\n\"That's what makes it worth doing,\" I said. \"If it were easy, everyone would do it.\"\n\n\"Okay, that's another line from a movie,\" Charlotte noticed, thinking it over. \"Tom Hanks said it in A League of Their Own. Is that movie on our list? What if Geena Davis is the celebrity judge?\"\n\n\"There's no crying!\" Dan said, imitating the film's most famous line to absolute perfection. \"There's no crying in baseball!\"\n\n\"What the hell would we do with it if that came up?\" Charlotte wondered. \n\n\"Peach cobbler cupcake,\" I said at once. \n\n\"Peach cobbler?\" Charlotte asked.\n\n\"The team in the movie,\" I said. \"The Rockford Peaches.\"\n\nCharlotte shook her head and finished off her glass of wine.\n\n\"I'd never have thought of that,\" she said. \"This is incredibly stressful.\"\n\n\"We'll get through,\" I reassured her.\n\nBonnie smiled at me.\n\n\"What?\" I asked.\n\n\"I love the way you and Dan talk in terms of 'us' and 'we' about this,\" she said. \"The four of us are a team, aren't we?\"\n\n\"We're more,\" I told her. \"We're a family.\" \n\n***\n\nThe final days leading up the taping and the day itself were right around President's Day. There were thus no classes at school so it was easy for me to be there for the girls. Dan sacrificed a couple of vacation days but was happy to do so to attend the taping. \n\nOlivia stepped up to the plate, studying Bonnie's recipes so she could manage the store while the girls were taping the show in New York. Bonnie and Charlotte's mom Susan would also help Olivia out during the taping. \n\nThere was a moment I worried could be awkward. What had Bonnie and Charlotte told her mom about Dan and me? Had they mentioned us at all. \n\nAs it turned it out, her mom was a hippy-type who was open-minded and easygoing. I don't think she ever heard the details of what was going on at 221b, but she knew all about the polyamorous relationship Dan and I had with her daughters. Charlotte explained it to me.\n\n\"Trust me, she understands,\" she said. \"She's been married to our dad forever, but Uncle Dave has always been part of our life, not to mention Aunt Judie. There our parents' best friends, if you catch my drift.\"\n\n\"I do.\"\n\nSusan Belladonna was also, like her daughters, a hard-nosed entrepreneur. She ran an artisanal soap operation that raked in all sorts of cash. \n\nI met her when I walked into the shop after work three days before the show and there was Susan behind the counter with Charlotte explaining the register to her. \n\n\"Andrew!\" Charlotte exclaimed. \"Look! It's my mom!\"\n\nSusan was friendly and welcoming and I was relieved. She was also a big woman, exactly like her daughters, in her early fifties and still attractive.\"\n\nSusan gave me a hug and a big kiss on the cheek.\n\n\"So glad to meet half of my daughters' happiness,\" she said. \n\nDan and I drove up with the girls the next day. We piled into Bonnie's car and headed north. We were awash with anticipation, the New Jersey Turnpike passing by in a blur. The network put us up in a nice hotel overlooking Central Park. We navigated the tunnel into Manhattan and found the hotel. Parking in front, Bonnie handed a piece of paper to the valet. The next thing I knew the car was spirited away as doormen carted our bags up to our luxury suite.\n\nThey rooms were breathtaking. We had two bedrooms flanked by a huge sitting area in the middle with a view of Central Park. The bathroom was all polished marble with a massive shower.\n\n\"You've hit the big time,\" I observed.\n\n\"That all depends on tomorrow,\" Charlotte mused.\n\nThe next day the girls were mostly in the studios, filming all sorts of stuff in advance of the competition the following day. \n\nDan and I were on our own so we checked out the sights, had lunch at a famous falafel place, and returned to the hotel suite around three.\n\nThe scene which greeted us was not a happy one. \n\nCharlotte stood near the door to the bathroom, a grim look on her face. I heard Bonnie moaning, clearly in distress. \n\n\"What's wrong?\" I asked. \n\n\"Bonnie's sick,\" Charlotte said. \n\nLess than twenty hours before their nationally-televised competition which could vault their business into the stratosphere, the girls were in trouble. Poor Bonnie was on her knees in front of the toilet sick as a dog.\n\n***\n\nIt was long, rough night. \n\nWe'd hoped to all go out to dinner, but those plans were shot. All that mattered was Bonnie. \n\nDan and I sent Charlotte to bed around eleven \u2013 she needed her rest for the competition, after all \u2013 and took over caring for Bonnie. By that time, her stomach had emptied but she was coping with a fever. \n\nDan and I took turns watching over her. One of us was always at her bedside, the other sleeping on the couch in the common room of the suite.\n\nI took the first shift, wiping Bonnie's brow and holding her hand until past two. \n\nPast the limit of exhaustion, I called Dan in and let him take over. I flopped down on the couch and was asleep in thirty seconds. \n\nI got up at six and went into Bonnie's room. Dan was leaning over her smiling. \n\n\"How's she doing?\" I whispered groggily. \n\n\"The fever's broken,\" Dan said. \"She's sleeping good.\"\n\nBonnie looked peaceful, though her sheets were drenched. I felt her forehead and she was cool.\n\n\"She's going to be fine, bro,\" Dan whispered.\n\n\"She'll be ready to kick ass,\" I added. \n\n\"Damn straight.\"\n\nIt would be a challenge, I was sure. They'd be up against competitive, talented people in a few hours. At least Bonnie would be in the game, though, right alongside Charlotte. \n\nMy money was still on the Belladonna sisters.\n\n***\n\nThe girls had to be at the studios at nine for a noon taping of the show. We woke Bonnie at seven-thirty, giving her an hour to get ready before the car picked them up. She was shaky at first, sipping coffee and not saying much. \n\n\"How do you feel?\" I asked. \n\n\"Better,\" she said, taking another sip of coffee. \"Pretty good, actually. Let's have breakfast sent up.\"\n\nBonnie played it cautious, eating a whole wheat English muffin with butter washed down with another cup of coffee. It stayed down and she felt well as she headed off to the shower.\n\nDan and I accompanied the girls down to the lobby. They were dressed in jeans and their work t-shirts. Bonnie's hair was in a ponytail and Charlotte wore her customary braids. Each donned a bandana \u2013 Charlotte's was pink and Bonnie's purple, matching their shirts. They've never looked sexier. \n\nWe kissed them both and saw them into the limo sent by the network. Dan and I stood there on Fifth Avenue, watching the studio's limo spirit the girls away as the fashionably attired hurried by on their way to work.\n\n\"They're gonna kick fucking ass, bro,\" Dan said. \n\n\"Agreed,\" I said. \"Come on, let's order a breakfast feast. I feel like eggs, bacon, sausage, you name it. Network's paying.\"\n\n***\n\nI've never paid much attention to cooking-competition shows, but I'd been an avid watcher of Cupcake Battle since the girls had been invited on. In person, it's nothing like you think. Reams of action get edited down to fifty minutes of programming. A good portion of what makes the final cut is intros and extraneous content, too. \n\nThey ushered us into the studio with the rest of the audience. The kitchen, complete with its multiple work stations and the pantry, was in the spotlight at one end of the space. Above the stage hung the massive Cupcake Battle logo featuring a pair of jousting knights atop a pink-frosted cupcake. \n\nSurrounding the stage in a semi-circle was the audience arranged in a stadium-style seating pattern. There were a hundred or so people in attendance. Many were friends and family of the contestants. \n\nA skinny blonde lectured us about the rules for the audience. Unless we were specifically referenced by the host or the panel of judges, we were not to cheer or shout out. We were to remain as silent as possible, or we would be escorted out of the studio. No second chances, either. Scream out a single \"Go Belladonna Sisters!\" and we were gone.\n\nThe host came out next. Charlie Highbridge was a high-energy Englishman with a pompadour who came off on TV like an idiot. In person, he was the essence of professionalism and friendliness. He talked warmly with the audience and sought out the friends and relatives of the contestants, speaking with each of them.\n\n\"You're the boyfriends?\" he said to us, shaking our hands in turn. \"Lucky blokes. Which one's the scientist?\"\n\n\"That's me,\" I said. \"They told you about us?\"\n\n\"We'd a fine chat,\" he said. \n\nThe taping commenced, the panel of three judges introduced and taking their seats. Then came the contestants. Each entered and took their spots in one of the three kitchens stations. \n\nBonnie and Charlotte were in the middle kitchen, glancing at us and smiling. They were up against Cupcake Empire in Seattle, owned by a pair of likeable middle-aged gay guys. Gary and Craig had twenty year's baking experience, making them formidable opponents. \n\nBonnie and Charlotte also had to deal with the proprietors of Heartland Cupcakes in Omaha, Nebraska, a married couple named Paul and Palmyra. They were an odd pair. Paul was clean-cut with short blonde hair, blue eyes, and a small-town America vibe. Palmyra had bright pink hair and was covered in tattoos and piercings.\n\nI couldn't help but wonder how they'd met, or what their sex life was like. Paul looked like he should be leading a Bible study group and Palmyra would've been perfect as the lead singer for a Goth punk band.\n\nMy inclination was to guess they're kinky people thrown together by some odd circumstance. I could see a lot of bondage and feverish group sex. Just a guess but, then again, I have a filthy imagination. Good for them if it's true, by the way. \n\nThe Belladonna sisters would also face off against Carrie's Cupcakes from Nashville. It was another husband and wife team. He had a full beard and mustache and wore a cowboy hat. She was all bubbly and blonde with a round face and broad smile. I got the feeling they'd both moved to Nashville to break into country music but failed so they opened a cupcake shop instead. \n\n***\n\nRound one began, Highbridge addressing the competitors in a disdainful voice I knew was part of the act. \n\n\"Cupcake competitors,\" he addressed them with mock seriousness that strained one's patience. \"You have journeyed across our nation and arrive here, in New York City, eager to demonstrate your mastery of the cupcake. Are you ready?\"\n\nThe competitors affirmed their readiness and Highbridge gestured to the curtain off to the side of the kitchen studio. \n\n\"Beyond this curtain are our three mystery judges,\" he told the competitors. \"Are you ready to meet them?\"\n\nWithout waiting for a response, Highbridge gestured towards the curtain and it rose. \n\n\"I present to you, judge number one,\" he went on. \"Fernando Garibaldi, chef-owner of La Scalia, the gourmet Italian bistro drawing raves in Hell's Kitchen.\"\n\nNext up was Marcia O'Shaughnessy, a famous pastry chef from Boston. She was conventionally-attractive, tall and skinny with black hair and pretty features. \n\nThe third judge \u2013 here comes our random celebrity! \u2013 was on the cast of a BBC series set in Victorian times I hadn't seen . She played Lady Emilie Rousseau-Weston, a Frenchwoman married into a British noble family circa 1890. Lady Emilie apparently spends a lot of time on the show shaking up her husband's crusty Victorian ideals and so scandalizing his extended family. I vaguely recalled hearing something about a Lady Godiva-style escapade in the season finale. \n\nHer real name was Sophie something-or-other-French I didn't catch. She had dark auburn hair and a hauntingly-beautiful face. She was way too skinny for my tastes, though. \n\n\"Each judge,\" Highbridge continued. \"Has in his or her possessions an envelope. Within that envelope is their selected theme for tonight's competition. Each judge has brought a theme of their own choosing. Earlier, the candidates drew straws and each gets to pick which judge they want to face first. First place t0day g0es to Carrie's Cupcakes.\"\n\nThe host paused, turning towards the proprietors of Carrie's Cupcakes.\n\n\"Mike and Carrie,\" he asked with wild exaggeration, gesturing towards the judges. \"Who do you choose?\"\n\nCarrie stepped forward.\n\n\"We choose Judge O'Shaughnessy,\" she announced. \n\nThe host turned back towards O'Shaughnessy. \n\n\"Chef O'Shaughnessy,\" he asked. \"What is the theme you have selected?\"\n\n\"As you can tell by my name,\" O'Shaughnessy said, rising. \"I'm of Irish descent. Not just a little Irish, either, but Boston Irish all the way.\"\n\nI groaned inwardly. I'm one hundred percent Irish-American on both sides, but there's such a thing as overdoing it. \n\n\"It'll be March Sixteenth when this airs,\" she went on. \"Saint Patrick's Day is tomorrow. I challenge you, contestants to construct a cupcake in honor of this day honoring Irish culture and heritage.\"\n\nI practically jumped out of my chair. We'd brainstormed for this exact scenario! \n\n\"You have forty minutes!\" Highbridge announced. \"Beginning now.\"\n\n***\n\nBonnie and Charlotte presented their cupcakes last. The previous entries were all mediocre and haphazard. The Belladonna sisters, however, submitted a work of art.\n\n\"The cake is a Guinness and chocolate-flavored blend,\" Bonnie explained. \"It's topped with a whisky-infused cream and a chocolate-caramel harp seasoned with Irish sea salt.\"\n\n\"Why the harp?\" O'Shaughnessy asked. \n\n\"The harp is the visual center of the cupcake,\" Charlotte explained. \"As well as a traditional symbol of Ireland. The harp embodies the spirit of the Irish people perfectly. Despite all the tragedy and struggle the Irish have faced over the millennia, they remain a people of poetry and music. The harp, to me, represents the resiliency of the Irish.\"\n\nO'Shaughnessy nodded thoughtfully, smiling.\n\n\"Well said,\" she remarked. \n\nIn the final editing of the show, all that got in of Charlotte's speech was:\n\n\"The harp is the visual center of the cupcake as well as a traditional symbol of Ireland.\" \n\n***\n\nBonnie and Charlotte won the first round easily. The broadcast was edited to make it seem suspenseful, but in person it wasn't. All three judges had nothing but praise for the final product, straining to nit-pick a criticism.\n\n\"They've got this, bro,\" Dan whispered. \n\n\"I hope so,\" I said. \n\nCarrie's Cupcakes were eliminated after the first round. That left Cupcake Empire and Heartland Cupcakes standing in Bonnie and Charlotte's way. The second judge to go was Chef Garibaldi, chosen by Paul and Palmyra. \n\n\"Just as Chef O'Shaughnessy asked for a cupcake in honor of her Irish heritage,\" Garibaldi said. \"I want you to create a cupcake that honors the culinary history of Italy.\"\n\n\"National themes,\" I whispered. \"Based on the judge's heritage. Ireland, Italy. France is next. Got to be.\"\n\n\"They can do France, bro,\" Dan whispered back. \"We prepared for France.\" \n\nBonnie and Charlotte presented the judges a Cannoli Cupcake similar to what they already featured on their menu. Bonnie explained the cake part was an Ameritti, which meant it was flavored with Amaretto. This, Bonnie explained, was a traditional cake from Milan. \n\nAtop the cake was a beautiful beige mascarpone-based frosting flavored with more amaretto and also cinnamon and walnuts. \n\nIt looked pretty good to me, and the judges all seemed to like it, but Chef Garibaldi added some harsh remarks at the end.\n\n\"Although it is well-conceived and certainly very tasty,\" he said. \"I can't help but notice you've used alcohol as a flavoring two cupcakes in a row. I'd like to see you expand your horizons if you make it to the final round.\"\n\nBonnie and Charlotte survived the second round, Gary and Craig produced a biscotti cupcake which was a total disaster and got them sent back to Seattle. \n\nThe odd couple of Paul and Palmyra were all that stood between Bonnie and Charlotte and victory.\n\n\"We have only one judge left, one final round between yourselves and cupcake domination,\" the host announced. \"Judge Sophie.\"\n\n\"Contestants,\" Sophie began. \"As you know, I am from France. Provence, to be specific. But what you may not know is my mother was Dutch. Her birthday is next week. And so, in honor of my mama, I charge you with creating a cupcake inspired by her homeland.\"\n\n\"Holy shit,\" I whispered. \"The Netherlands?\"\n\n\"Did we prepare for the Netherlands?\" Dan wondered.\n\n\"I'm sure,\" I said. \"Wait a sec, let me think. Uh, they prepped for apple tarts with whipped cream. Easy to convert to cupcake form.\"\n\nWhen the host announced the start of the next cooking period, the two teams huddled up. Bonnie whispered something to Charlotte and she stood straight-up, eyes flashing as she struggled to contain her smile. I watched them as they sprang into action. Whatever Bonnie came up with, they were laser-focused on it. \n\nI watched them closely, trying to puzzle out what they were doing. The judges and the host watched, as well, commenting the entire time. They were baffled by Bonnie's making several colors of frosting. There was bright blue, dark blue, yellow, and even white. \n\n\"What the hell?\" Dan whispered.\n\nThe next second I recognized the colors and realized what Bonnie was up to. I knew at that moment they were unstoppable. \n\n\"Holy shit,\" I gasped.\n\n\"What is it, bro?\" asked Dan.\n\n\"They're gonna win, that's what! They've fucking got it.\"\n\nBonnie presented the cupcake sans cup, peeling away the wrapping. It was all blue and yellow swirls in the cake, topped with bright blue frosting decorated further with swirls of white and yellow and wavy chocolate trees rising vertically from atop it all. \n\n\"Judges,\" Bonnie said, addressing them. \"May I present to you the Vincent Van-Gogh-inspired Starry Night Cupcake. Enjoy.\"",
        "A murmur went through the crowd, people shaking their heads and smiling. The judges' jaws dropped.\n\n\"Oh, my,\" Judge Sophie said. \n\n\"You gotta be kidding me,\" Chef Garibaldi said, laughing. \n\n\"Told you,\" I whispered to Dan. \"They nailed it.\"\n\n\"Charlotte,\" Highbridge said. \"Can you explain the inspiration for this cupcake?\"\n\n\"Van Gogh was Dutch,\" Charlotte said. \"He was a painter of genius from the same nation which produced Vermeer and Rembrandt. He found his style, however, in the south of France and fell in love with the bright colors of Provence. This homage to his most well-known masterpiece honors a Dutch genius but also provides a nod to the beauty of the south of France. Your mother's Dutch heritage as well as the love she found from Provence is all represented herein in this cupcake.\"\n\nOnce more, what made it into the final show was less eloquent although more succinct:\n\n\"Van Gogh was Dutch.\"\n\n***\n\nBonnie and Charlotte won, of course. \n\nThe best Heartland Cupcakes could do was a New York Cheesecake Cupcake trying to tie-in the city's Dutch heritage. Paul and Palmyra never stood a chance. It was back home for another BDSM gangbang, I like to imagine. \n\nThe four of us decided to stay in New York that night and enjoy the town. The network suite was still ours and there was nothing further to stress over. The girls were anxious to get back to their store, but Dan and I convinced them to spend the night.\n\n\"Olivia says congratulations and she can handle things in the morning,\" I said, holding up my cell phone. \n\n\"She's already been managing for two days,\" Bonnie protested. \n\n\"And she can handle one more,\" I insisted. \"Give her two days off when you get back to make it up to her.\"\n\n\"I don't know,\" Bonnie said. I could tell she was relenting.\n\n\"We have a free suite on Fifth Avenue in New York City,\" I said gently. \"We've the rest of the day and you girls just won a shitload of money.\"\n\n\"One night,\" Dan added. \"Come on.\"\n\n\"All right, you've convinced me,\" Bonnie said at last. \n\n\"Yes!\" Charlotte agreed. \"What shall we do?\"\n\n\"Dinner, of course,\" I said. \"Then we'll see.\"\n\n\"Times Square!\" Charlotte blurted out.\n\n\"After dinner,\" I said. \"The first rule of eating in New York is to stay the hell away from Times Square or any other touristy area. We'll take a cab down to Greenwich Village and get something better to eat at half the price.\"\n\nSo that's what we did. We showered and dressed and made our way to the Village. I took in the energy of Manhattan as we strolled about. Our own city was big enough in its own right, but New York has a certain hectic glory which few places on Earth can match. \n\nThe girls looked incredible, as always, but they really outdid themselves that evening. Bonnie wore a sundress that was dark blue and purple along with a white wool jacket. Charlotte went with a pink V-neck sweater and a white-and-pink skirt that showed off her big ass. \n\nWe picked a little place right off Bleecker Street that specialized in traditional comfort food done with New York City flair and quality. It was famous for its macaroni and cheese. We ate early, just after five, and had the place to ourselves seeing how it was a weeknight and New Yorkers eat dinner late. \n\nWe enjoyed a leisurely stroll about the neighborhood afterwards, the girls spending a small fortune at a famous cheese shop around the corner from the restaurant. The folks there packed everything with dry ice for the trip home. \n\nAfterwards we found a cool basement bar that used to be a speakeasy during prohibition. They served excellent martinis and there was a jazz trio playing in the corner. We lingered, downing three rounds before piling into a cab for the ride back to the hotel. \n\n\"So what are you going to do with the money?\" Dan asked as the cab took us back up to midtown. \"Twenty thousand's a lot.\"\n\n\"Twenty-thousand before taxes,\" Charlotte corrected him. \"What we need to be doing is capitalizing on this opportunity. When the episode airs, we're going to be swamped. Naturally, all three cupcakes we made on the show are now part of the permanent menu. In the meantime, we have to send out press releases advertising our win. We might even be able to do a few interviews. We're going to stretch this to the max.\"\n\n***\n\nI poured us some wine when we got back to the suite. Dan dimmed the lights and we all stood by the big window in the main room looking down at the lights of the city below us. \n\n\"To the Belladonna sisters!\" I said, raising my glass. \"Queens of Manhattan, at least for tonight!\"\n\nWe all drank and stood close to one another. My arm was around Charlotte and Dan's around Bonnie's. We stood that way for a long time, sipping the wine. \n\nI don't know what anyone else was thinking about at that moment, but I contemplated my good fortune and the long road that led us all to that upscale suite. \n\nI drained the last of my glass and put it down. I turned to Charlotte and met her gaze. \n\n\"Finish your drink,\" I whispered.\n\nCharlotte drank down her wine and set the glass down. I reached out and cradled her face with my hand. I held her soft cheek and she leaned against it, closing her eyes and savoring my touch. She opened her eyes again and looked at me. \n\nWe kissed, long and languid. Our lips and tongues explored each other with utmost leisure coupled with unashamed lust. Barriers no longer existed between us, not for a long while. \n\nMaybe it was the release of stress with the conclusion of the contest. Maybe it was adrenaline released by the thrill of victory. It could've been the rising sense of comfort and affection we all felt towards one another.\n\nPerhaps it was all those factors combined. I don't know. What I felt at that moment was an overwhelming connection to everyone else in the room. Charlotte and I poured out our passions over one another and I was dimly aware of Bonnie and Dan doing the same. It could just as easily have been the other way around. \n\nI relished the way Charlotte felt pressed against me, so much woman and so many curvy expanses to explore. I enjoyed every expansive contour, from her huge boobs to the soft width of her shoulders to the wonderful heft of her enormous ass. \n\nWe all stumbled back to the couch, kissing and groping. I was crazy with lust and had been ever since that morning. \n\nWatching them compete on the show was a huge turn-on, seeing them in their element and displaying their considerable talent and creativity. It made me want them more than ever. \n\nOff went our clothes in a frenzy of unzipping, unbuttoning, and sliding out of garments. Pants were undone, bras unhooked, and socks tossed aside in a chaos of frantic groping. The four of us wound up naked and laying on the couch next to each other. I was all over Charlotte, my hands roaming over her expanses. We kissed maniacally, carried away with the moment. \n\nLying on our sides facing each other, Charlotte and I kissed happily. I grabbed a handful of her hair and squeezed, carried away in the passion of the moment. Her hand clasped hold of my penis and stroked me vigorously. She paused, taking her hand back and licking it.. She returned to jerking me off, her hand wet with spit and sliding easily over my cock.\n\n\"Oh, fuck,\" I sighed. \n\nI reached down and started fingering her pussy as we made out and she jerked me off. Charlotte whimpered and I kissed her neck. Next to us, Bonnie was on her back. Her legs were in the air as Dan ate her pussy. \n\nI fingered Charlotte harder, our tongues twirling as she let out a long moan. \n\n\"Fuck me, baby,\" she whispered. \"Right now. Just get on top and fuck me.\"\n\nHow could I deny a request like that? I eased Charlotte onto her back and kissed her mouth again. Sliding down, I sucked and nibbled each of her tits in turn. Then I slid my hands over her soft belly as I kissed my way down its length. \n\nI kissed the top of her pussy, settling in for some cunnilingus.\n\n\"Fuck me,\" Charlotte moaned. \"Just fuck me. I have to feel you in me.\"\n\n\"All in good time,\" I assured her. \n\nI leaned over the edge of the bed and plunged into her pussy. I started right away licking her clit and fingering her hard as Dan did the same to Bonnie. I wrapped my free hand around her thigh and pulled it tight. It was big and soft and perfect. \n\nCharlotte came in no time, right after her sister. Dan climbed on top of Bonnie and I did the same to Charlotte. \n\nCharlotte's eyes met mine and she smiled widely as I worked my cock inside her. We kissed, our tongues dancing as I buried my cock inside her.\n\n\"That's it,\" she moaned. \"Go on, fuck me good.\"\n\nI started off slow but Charlotte urged me on.\n\n\"Faster, baby,\" she moaned. \"Fuck me with all you got!\"\n\nOnce again, I wasn't about to deny such a request. I quickened my pace and she wrapped her thick legs around my waist. She wrapped her arms around my shoulders and we kissed as I fucked her. In between kisses she sighed and moaned.\n\n\"Oh, fuck!\" she cried. \"That's it! Fuck me good, baby!\"\n\nNext to us Bonnie was on all fours. Her massive rear end was thrust in the air as Dan fucked her asshole. She was screeching at the top of her lungs as Dan pummeled her relentlessly. She reached back one hand to rub her clit. \n\nThe combination of a finger on her clit and a cock in her ass sent her through the roof. Bonnie was screaming loud enough to be heard in Brooklyn. I imagined passers-by in the hallway pausing to listen to her. \n\n\"That's right!\" they would've heard. \"Fuck that ass! Fuck that ass! Fuck that ass! Oh, oh!\"\n\nI was fucking Charlotte by then like a man possessed. She was screaming nearly as loud as her sister as I nailed her with as much speed and power as I had. Throughout, I enjoyed her size and substance underneath me. Her big tits were smashed against my chest and her plump arms wrapped around my shoulders. \n\nOur mouths locked as I kept fucking her, our tongues twirling around each other desperately. I felt the first inklings of my coming orgasm. \n\nA few feet away, Bonnie was coming furiously. Her screeching ceased, replaced by an open-mouthed gasp that lasted for a good twenty seconds as Dan pounded her ass and she enjoyed what sounded like a mind-blowing orgasm.\n\nCharlotte and I kept fucking for another minute. She came again, screaming and crying as I pounded her pussy with every ounce of strength and enthusiasm I had. We almost came at the same time, but not quite. Her orgasm was subsiding as mine began. When it arrived, I froze and drove my cock deep inside her. It pulsed violently, every throb a moment of pure joy. I didn't pull out of her until the last, lingering spasm faded.\n\nCharlotte and I kissed, warm and tender in that special post-coital way. I pulled out of her and we watched Bonnie and Dan finish up. \n\nBonnie's big ass was still thrust in the air and Dan was fucking her hard. Her eyes were closed and she was groaning. Charlotte and I watched for several minutes, transfixed by them going at it. We'd seen it all before, of course, but it never grew old. \n\nDan's pace grew even quicker and he started to groan more. He froze suddenly, driving his cock deep inside Bonnie and grunting loudly. His cock was surely pulsing at that moment, his balls throbbing as they pumped cum in Bonnie's direction. \n\nBonnie and Dan collapsed next to us. We lay quietly, clutching against the girls contended.\n\n***\n\nEach of us slipped away in turn, visiting the restroom before returning to warm embraces on the couch. \n\nCharlotte was the last. She was gone a minute when we heard the sound of the shower starting. \n\n\"Guess she felt like cleaning up,\" I observed.\n\n\"That doesn't sound like a bad idea,\" Bonnie added. \"You guys should join us when you're ready.\"\n\nBonnie got up and sauntered off towards the bathroom, shaking her big ass at us as she left. \n\n\"This could be interesting,\" I said.\n\nDan and I waited a minute and then made our way towards the bathroom. My eyes were drawn to the shower and the two amazing BBW bodies within.\n\nThe lights were off in the rest of the bathroom, but recessed lights above the shower illuminated the scene like it was something on a stage. The four showerheads were all on, blasting the girls with steaming hot water. The glass doors of the shower were starting to fog over.\n\nBonnie and Charlotte stood with their backs to us. Their hair was wet, streams of water running down their soft shoulders and over the course of their smooth backs to trickle over the wide expanses of their hips and asses.\n\nThe girls teased us, swaying gently under the water. I was mesmerized by the alluring motion, the vision enhanced by the stark lighting and slick reflection of wet skin. My eyes went back and forth between them, admiring each butt in turn.\n\nI'll never tire of that pair of delightful rear ends. I love the way their hips flare out and then decide in broad, gently curves. The swaying and rocking amplified their softness and I longed to run my hands over them each in turn.\n\nI was half-hard already, reaching down and stroking myself up to a full erection in short order. Dan, I noticed, was also jerking off as he drank in the sight.\n\nBonnie was the first to turn around. She kept swaying, twin jets of water striking her shoulders and running down her huge breasts. She breathed in, tits heaving as she looked at Dan and I jerking off to the sight of her. \n\nBonnie opened her mouth, her tongue running along her lips. She flashed me a look and stuck her tongue out towards me, as though licking the air in my direction. Then she turned her gaze towards Dan and did the same, all the while her hands moving up and massaging her own breasts. It was incredibly hot.\n\nI was enjoying the tease, but the glass continued fogging. The blurriness beyond the glass actually enhanced the appeal of their swaying forms. Bonnie and Charlotte's wonderful womanly physiques became silhouetted, only the outlines of their bodies remaining. Soft curves danced for us beyond the veil of steam.\n\nI'd had enough. The blurry outline of wide butts, huge tits, and soft bellies was too much to resist any further. I savored the anticipation as long as I could, jerking off furiously by now. At last I stepped forward and slid aside the door to the shower.\n\nBonnie was closest to me and I approached her. Her eyes looked into mine, bright blue jewels drawing me into her. The hot water ran over me as I took her in my arms and pulled her against me. Her hand went right down to my erection and she jerked my off as we kissed deeply.\n\nI closed my eyes, lost in the intensity of the moment. Bonnie's luscious lips and sensuous tongue were all over my mouth, hot water streaming over my back as I gently pressed her against the back wall of the shower. Her enormous, dripping wet tits pressed against my chest and her big belly against my stomach. \n\nDan and Charlotte were enjoying themselves a few feet away, Charlotte letting out a happy moan as Dan nibbled on her neck. \n\n\"I've got to fuck you,\" I whispered in Bonnie's ear. \n\nThere was a pair of shelves in the shower for sitting. Bonnie maneuvered me onto one of them. I sat, leaning against the wall. She smiled, jerking me off for a moment and then reaching up to adjust the showerheads so that they streamed down in front of me. \n\nBonnie turned around and then backed up towards me. I reached up and placed a hand upon each ample ass cheek. I squeezed them gently, enjoying their size as Bonnie lowered herself on my cock. \n\nI groaned as my cock entered her pussy. There was slight resistance and Bonnie lifted herself off it before plunging back down. This time she buried it inside her all the way to my balls. We groaned in unison and she began bopping up and down on me.\n\nMy hands clutched her ass cheeks as she rode me, the water of the jets splashing down her back and into my chest. \n\n\"Holy fuck,\" I groaned.\n\nCharlotte, meanwhile, was on her knees before a standing Dan sucking his cock. Her hands were on his hips and her head bobbing up and down his shaft. Now and then she'd paused to lick the head of his dick or run her tongue along the sides. It was quite the show to watch, especially with her sister bouncing on my cock.\n\nI went on that way for a long time, Bonnie starting to groan wildly a few minutes later.\n\n\"Fuck, yes!\" she sighed. \"Oh, fuck!\"\n\nBonnie came a minute later, wailing and howling as I thrust up against her fat butt as hard as I could. Her sister, in the meantime, was bent over with her own gigantic ass thrust into the air as Dan began fucking her asshole. Charlotte was soon moaning frantically, bracing one hand against the wall of the shower and reaching down with the other to rub her clit. All the while Bonnie bounced and, boy, did it feel incredible. I was overwhelmed, enjoying the show between Charlotte and Dan almost as much as the feel of Bonnie's pussy. \n\nIt wasn't enough, though.\n\n\"Turn around, baby,\" I murmured. \"I want to feel you close against me.\"\n\nBonnie lifted herself off my cock, turning around. It would have been difficult for her to straddle me facing each other on the narrow shelf so I slid onto the floor. She lowered herself back on me and resumed her steady bouncing.\n\nPropped up against the wall, we sat facing one another as we fucked. The water streamed down between us, blasting us with heat and power. Her tits and belly were mashed against me, her big ass in my hands. \n\nThe feeling of envelopment I crave overtook me and I thrust upwards with wild abandon. I felt my orgasm looming and kissed Bonnie hard. \n\n\"That's it, baby,\" I moaned. \"That's it.\"\n\nSomewhere in the distance Charlotte was howling as she was swept away by the throes of her orgasm, Dan pounding her asshole with vigor. It was a nice accent to the extreme intensity of my approaching orgasm. \n\nI kissed Bonnie hard on the lips as the feeling in my cock rose to a peak. Finally, I exploded inside her, my cock pulsating violently. Each throb was another explosion of delightful release. \n\nI sat there even as the last spasms subsided, still inside Bonnie as Dan continued fucking Charlotte to our left. We held each other, not wanting to withdraw. For a moment, we'd become one.\n\n\"I love you,\" I whispered.\n\n\"I love you, too, prof,\" she said. \n\nWe kissed, long and hard and happy as the water streamed over our backs. Next to us, Dan froze in place and let out a long groan as he came inside Charlotte's ass. \n\nIt was a perfect moment. I couldn't have asked for anything more. \n\n***\n\nThis story has a happy ending. \n\nI told you in the beginning it was the story of how I met my wife, and it is. She's the love of my life, and so is her sister. As you might've guessed, Dan and I each married a Belladonna sister. \n\nTheir business succeeded beyond anyone's wildest dreams. After the airing of the show, the success of the shop really went through the roof. They franchised a few years later and Belladonna Sisters Cupcakes are now in four states. Olivia is a full partner now, the ice cream part of the business a huge source of revenue. \n\nMarried life has been good to us. Dan and I and our brides live in gorgeous brownstone townhouses next to one another in one of the tonier neighborhoods in our city, complete with off-street parking and tiny backyards. We see each other every day, of course, sharing meals and beds whenever we can. \n\nIt remains a tradition on any birthday for the two opposite-sex members of our quartet to fuck the shit out of the birthday boy or girl. We hold fast to this tradition, and will till the day we die.\n\nOlivia and her husband Rick remain our close friends. In the last year, we've slowly integrated them into our circle sexually. Rick was tentative at first, but the charms of Bonnie and Charlotte quickly converted him into an enthusiastic participant into our lifestyle. Needless to say, Dan and I have both enjoyed Olivia's unique charms of late and are pleased with current developments.",
        "Bonnie and Charlotte are happy. Bonnie gets to exercise her creativity in her test kitchen while Charlotte runs the business and marketing end of things. They bought the building across from 221b, the original Belladonna Sisters Cupcakes still thriving on the first floor. Above are the test kitchen and business offices for their growing empire.\n\nAs for 221b itself, we now own the building. A lesbian couple currently occupies our old home. I like to think the sexy adventures continue. \n\nDan's doing great, too, the third Professor Fogbottom book hitting the bookstores any time now. There's talk of a TV show, but Dan's agent wants him to back off on the requirement that the professor's daughter Penelope be a BBW. Dan's not backing down. \n\n\"This role could be a rare opportunity,\" he explained to his agent. \"A hot fat girl cast in the role could be an inspiration for so many!\"\n\nAs for me, I finished my doctorate. I'll return to teaching someday, probably community college. I've found my place for now as a stay-at-home dad. I'm actually good at it, to my infinite surprise. I take care of the two sets of blue-eyed twins me and Dan and the Belladonna sisters churned out within months of each other. \n\nFour girls, I kid you not, every one of them as headstrong and independent-minded as their moms. Their future is bright.\n\nI've no complaints. We all want for nothing material and we have our wonderful kids to cherish. \n\nI also get to fuck a BBW with an insatiable sex drive, too. Oh, and I also fuck her hot sister with an equally insatiable sex drive. Sometimes my best friend joins me in fucking my BBW wife, sometimes I join him in fucking his. At least once a year, both wives fuck me. \n\nThere's only one detail I haven't told you, and you might be wondering about it. Who did I marry, Charlotte or Bonnie?\n\nThe answer has been in front of you all along."
    ],
    "authorname": "Eosphorus",
    "tags": [
        "bbw",
        "big beautiful woman",
        "fat woman",
        "fat ass",
        "fat girl",
        "foursome",
        "bbw shower",
        "fat",
        "big women",
        "bbw group sex"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-belladonna-sisters-ch-07"
}