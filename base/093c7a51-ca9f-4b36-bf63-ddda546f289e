{
    "title": "The Twelve Zenati Pt. 04",
    "pages": [
        "Authors note: Hello everyone. Welcome to the new Twelve Tables series and the new family I have for you all to meet. I hope you come to know and like them as much as the families from the past series. Thank you once again to David and Kate for being my second set of eyes. Enjoy! ~ellie. \n\n12 Zenati Ch. 3\n\n\"Good morning. I have good, strong coffee. May I come up?\" Gideon asked into the house phone, having had the concierge call Vivienne's room for him.\n\n\"It had better be good coffee,\" she grumbled and hung up. Vivienne knew that refusing to talk to him wasn't an option if that was what he wanted. She had spent a restless night thinking about not only their argument last night but also their meeting and the enjoyable dinner they shared, before she had ruined it. Not that it was entirely her fault, but she had told him what she wanted and intended to do, instead of asking to get what she wanted by being contrite and reasoning with Gideon about encouraging Genesis to let her take the lead on Serena's case. She had handled the man all wrong, and just like any family man, he had used his power and authority to put her back in her place. It galled her to have to put up with being told how to treat a patient by someone who wasn't even a doctor, but she knew better than to fight the Table of any Family, even her own. Leighton had reminded her of that last night, in no uncertain terms.\n\nGideon grimaced and nodded at the concierge who handed him a key for the elevators. He felt his stomach lurch as he travelled up in the elevator and went to her door. He knocked on the door and waited nervously. If she was his curse breaker, he wasn't sure that he could redeem himself after last night and the call to Leighton. It wasn't like she was in any danger or hurt, so he doubted she was his curse breaker, despite what Dominic had said. Still, his belly ache had only grown worse this morning. His mind continued to argue with itself over the possibility that this strong, bossy, know-it-all woman could possibly be the one meant for him. She was gorgeous, he couldn't deny that, but she certainly wasn't the maternal homemaker-type wife he always thought he would have.\n\n\"Come in,\" Vivienne said opening the door and walking away from him, leaving him no choice but to follow her inside the suite.\n\n\"How are you feeling this morning?\" he asked in his usual cheerful voice, despite his growing nausea and unease.\n\n\"Great,\" she replied in a voice that said she was anything but great. \"The coffee?\" She turned to look at Gideon with the question.\n\n\"Latte made with skinny milk,\" he said and handed her a cup, hoping she would be impressed that he had bothered to find out how she liked her coffee.\n\n\"Thanks,\" she said as she took the cup from him. \"Why are you here Gideon? I think you made yourself perfectly clear last night.\"\n\n\"You're leaving?\" he asked, surprised by the sight of her luggage in the living area of the suite.\n\n\"I don't see the point of arguing with Leighton about staying after your call to him and the late night texts you sent me yesterday, do you?\" she asked.\n\n\"My text told you that Gen would like to talk to you this morning. He thinks that the prognosis might be flawed, based on some of the things the Pixie told him yesterday after you left. I thought you would be happy to see that she was looking so much better than she had been when you last saw her,\" Gideon said, genuinely confused now. \"You heard me tell Leighton that I thought we could work out the issues. Why would you think we want you to leave?\"\n\n\"You scolded me like a naughty child and sent me home to bed!\" she said, unable to keep the anger and hurt from her voice. \"Then you called my brother to scold me like a naughty child when I refused to be treated that way!\"\n\n\"I was trying to protect your reputation, by stopping you from going to the hospital after having a few glasses of wine with dinner!\" he argued back. \"You were being ridiculous, and nothing was going on at the hospital that couldn't have waited until this morning. It wasn't worth you marching in there and damaging your reputation by forcing yourself between Genesis and his Pixie. He never would have let you do that, regardless of what I said.\"\n\n\"It doesn't matter now; I'm going home,\" she countered and waved her hand at her luggage. \"You're lucky you came by so early, or I would have already been gone.\"\n\n\"I thought you wanted to help the Pixie. I don't understand how you can go from bargaining with me to make Gen listen to you to just giving up and running away,\" Gideon said in frustration. He felt physically ill now as his stomach twisted even more.\n\n\"You said yourself, I'm not needed. Once Olivia is able to be moved, Genesis will move her to a private hospital, and the specialists, myself included, won't be needed.\" She shrugged as if she didn't care even though it was perfectly obvious that she did. \"You, Gideon, made it quite clear that I was just convenient, rather than required, when Genesis asked me to consult on the case.\"\n\n\"What happened to the woman who was so determined to be part of the Pixie's recovery team last night?\" Gideon asked, perplexed about the complete change in Vivienne's desire to work with them.\n\n\"The one you scolded like a child, then got Leighton to take a turn?\" Vivienne challenged. \"I bet you couldn't wait to send me that photo, showing me how much progress Genesis had made without my help, and tell me that he thought my prognosis was flawed,\" she snapped, the hurt obvious in her voice now. \"You made your point. I am not needed, and there are far more experienced trauma specialists available if you need them. I'm sure Peter Donati would only be too happy to help.\" She looked at him with tears in her eyes despite the challenge in her words and voice. \"I am going home where I am respected and my skills and knowledge are valued!\" \n\nGideon stood frozen, his pulse throbbing in his ears, as he took in her face and the teary eyes. She dashed away an errant tear, and he felt a giant fist wrap around his heart and squeeze. \"Fuck! It was true,\" he thought to himself, and lifted a hand to his chest, pressing on it to try and ease what he knew wasn't a heart attack, but sure felt like one.\n\n\"Gideon?\" Vivienne sounded unsure of herself as she watched him. \"Gideon, what's wrong?\" She moved toward him, seeing him go suddenly still and the blood drain from his face. \n\n\"Don't go,\" he hissed through clenched teeth. \"I don't want you to go.\"\n\n\"Gideon? Talk to me, what's happening? Are you in pain?\" she asked again, seeing his hand clutched to his chest.\n\n\"I was trying to protect your reputation, not harm it.\" He ground out the words, trying to taking a breath through the pain in his chest. \"Gen doesn't know we argued last night, only Leighton. Meet with Genesis before deciding whether to stay or go, please,\" Gideon asked, almost begging her to reconsider leaving immediately as she had planned. \"What about the Vitali?\"\n\n\"Gideon, stop arguing with me and sit down. You look dreadful.\" Vivienne took his arm and led him to a couch, then sat beside him, taking his wrist in her hand to check his pulse, finding it strong but rapid.\n\n\"Stay, have breakfast with me, and then speak to Gen.\" He continued to push her. The pain in his chest eased slightly with her proximity and obvious concern for him. \"Please,\" he added as an afterthought. \"I just wanted to make sure that you didn't do anything you would regret last night, that's all. Please, trust me. I never wanted you to leave.\"\n\n\"It's okay, I believe you,\" she lied, with a soothing voice, as she tried to get him to calm down, but wondering if she should call an ambulance.\n\n\"So, you will stay and see Gen?\" Gideon asked, wondering how he could convince her to stay longer.\n\n\"I don't see the point, Gideon. He has obviously found a way to reach her and it's working. The picture you sent shows that,\" Vivienne said with a sigh. \n\n\"You said yourself that he wouldn't have made the initial breakthrough without you. Talk to him about what he found out about Olivia. Things may regress today. Remy died last night, and she watched them turn off the machines. Her sister is also due here today to identify her for her family. There is still so much the Pixie has to deal with, Genesis has to deal with. I don't think you leaving now is in anyone's best interests. Start today as a new day. No one knows about last night except your brother, who thinks I am an idiot at the best of times, and me,\" Gideon said and finally drew a deep enough breath to feel comfortable again. The pain in his chest began to ease as Vivienne continued to hold his wrist absently while she listened to his arguments. \"Stay, Gen and his Pixie need you. Stay because I want you here,\" he admitted. \"You are beautiful and challenging, and I want to get to know you better. Stay, Vivienne, for me, as well as Gen and the Pixie.\"\n\n\"What?\" she blinked at him. She had no illusions that she was a great beauty. Her devotion to her work and research usually kept most would-be suitors, keen for her family connections, at bay. She couldn't remember the last time she had a date with a nice normal guy, let alone a guy who looked and acted like Gideon Zenati. She began to worry that he had lost his mind during whatever episode he seemed to be having.\n\n\"You, Vivienne Papillo, are beautiful and fascinating, and I would like the opportunity to get to know you better,\" he grinned at her, finding that admitting his interest in her further eased the pain in his chest. \n\n\"Stop saying that!\" she said in a sudden burst of anger. \"I know who and what I am and beautiful is not one of those things. I am too tall, my hips and ass too wide, my breasts too small and my nose too long. I'm the smart, nerdy girl who had nothing better to do in high school and University than study. No one was lining up to date me. I know who I am and you can't flatter me with lies to get me to stay. So just stop!\" \n\nGideon was taken aback by the vehemence in her words. The woman had a severe complex if that was how she thought. He came to his feet and pulled her up beside him, turning to look into her eyes as he began to speak.\n\n\"You're not tall compared to me,\" he said softly and drew her closer by putting his hands on her hips. \"Your hips feel pretty perfect against mine, and I like your ass,\" he grinned as he said it but wasn't game enough to smooth his hands over it with the hostile look she was giving him. \"Your nose isn't too long,\" he continued as he leaned forward and kissed the tip before angling his head and brushing his lips over hers. \"You are fascinating and challenging and probably far more intelligent than I am, but you are also beautiful and drive me crazy trying to decide if I should argue with you or kiss you into submission.\" Still holding her to him by her hips as she gaped at him, open-mouthed and unmoving, he bent his head to kiss her again lightly. \"I don't lie or flatter needlessly, Vivienne. Come to breakfast with me and then we can go talk to Gen. I'm sure that you can get a later plane if you are determined to go, despite what I have said. I'll even fly you home myself if it comes to that,\" he offered.\n\n\"You can fly?\" she asked, surprised by this and dealing with the one part of all that he said that she could manage to focus on and dare to ask about.\n\n\"I'm a man of many talents,\" he grinned as he replied. \"Let me prove that to you.\"\n\n\"I don't know if I can take a back seat to Genesis. He's a reporter, not a doctor. How am I supposed to take his decisions about her treatment seriously?\" Vivienne sighed. \"If I stayed, I would probably just keep pissing him off instead of helping, like I want to,\" she admitted. \"Paolo Vitali has brought one of his own people in to work with the Vitali leaders. They don't want me dealing with their family business any more, either.\" She stepped out of his hold, putting distance between them, as she admitted that she believed that she wasn't wanted here by anyone any more.\n\n\"That's the Vitalis' loss. You can trust me. We want you here and need your expertise,\" Gideon said and took her hand. \"I'll mediate for you if you need it. Gen's a good guy though, and you can trust that he only has the Pixie's best interests at heart. He wants her to get better as quickly as possible, but he won't push her too hard either. He is the best man for the job, and isn't Gen a much better option to locking her up in an asylum or sending her to be imprisoned by the Battaglia for traditional psychological treatments?\"\n\n\"Genesis has a long hard road in front of him. It won't be easy to help her, such is the personality change Remington forced on her,\" Vivienne said thoughtfully, feeling safer now that she was back on professional ground. She was an expert on women who experienced trauma in relationships. It was true that she had rarely dealt with the extremes in the field, such as Olivia's case, but she wanted to, and she wanted to badly which had been why she had spoken to Gideon the way she had last night.\n\n\"Even more reason for you to stay. You can't tell me that there is anything more pressing or interesting for you back at home. The research and experience you could gain, even by being a firsthand observer, has got to be gold to a doctor in your speciality.\" Gideon continued to try and convince her to stay. \"I'll call Leighton and tell him we worked out our difference of opinion, if that helps.\"\n\n\"You're right. Nothing at home would be as interesting. The truth is that my uncles and cousins allow me to consult on the extreme traumas, but only consult, not carry out the treatments. Most of my expertise comes from less-extreme cases, as well as research and observations. I would really like to be involved if Genesis would let me, but I'm not sure that he will.\"\n\n\"I promise that, at the very least, he will let you observe, but I think he would like your advice, particularly as a sounding board for some of his ideas and assumptions. You just need to remember that he is in charge. If you can do that then it will all be plain sailing. If you need to criticise or question anything he does, don't do it in front of the Pixie. That was your only mistake yesterday. Last night was about me explaining that issue, not as well as I would have liked, but then I'm not the smart one here\" Gideon said in a conciliatory tone.\n\n\"Something tells me that's not true,\" she said and managed a small smile. \"Okay. Breakfast and a meeting with Genesis. If it doesn't work out, I can fly home this afternoon,\" she agreed. Knowing that this man found her attractive and wanted to get to know her better made the decision easier. She was flattered and a little amazed by that fact. She just hoped that she wasn't falling for a line he was using just to get her to agree to stay and see Genesis.\n\nGideon felt the pain twist inside him as she spoke of leaving again, but at least he had this morning to convince her to stay. Not just for Genesis and the Pixie, but for himself now.\n\n*****\n\nGenesis watched as Serena slept, grateful to have gotten a few hours himself in the reclining chair that Dominic had organised for him in the room with her. He had showered and relieved his own ache of arousal before Gideon left the hospital last night. He didn't want to leave Serena unattended at any time, and he wanted the circle of people around her to be tight. Only those he knew he could trust would be allowed near her now without his supervision. She would know Gideon and Noah well and, possibly Dominic, who seemed to have a vested interest in her since getting a reading on her past. Beyond that, perhaps Vivienne and the sweetly-efficient nurse who was now going to be a permanent fixture during Serena's waking hours. He had sent the nurse, Naomi, home to sleep with the request that she returned in the morning and an offer to hire her as a private nurse and caretaker once they left the hospital.\n\nAs he had guessed, she was already contracted to the family, and his uncle had pulled strings to get her employed temporarily at the hospital to help Genesis. She had been more than happy for Genesis to speak to his uncle about maintaining her services. He looked again at the plan he had sketched out in the small hours of the morning. There were several things that he needed to put in place and several family members that he needed to speak to, but it was doable. He was at an impasse, however, as to how much he could achieve until he met Serena's sister and discovered whether he would have to fight the Gambaro family for the right to care for Serena rather than let them take her home to be with her own family.\n\nNoah had arrived early to discuss his plan of action and had left again to get breakfast and a few other items that Genesis would need for the day. He checked his watch once again and then began to gently rouse Serena. When they left the hospital he would make her give up the name Serena and the last vestiges of Remington's hold over her. He hoped that seeing her sister today would help her accept her real identity again. \n\n\"Come on, sweet girl. It's time to start the day,\" he said, gently stroking her cheek. Her sea green eyes fluttered open, giving him a dazed and confused look for a moment as awareness of the past few days came to her.\n\n\"Good morning, Genesis,\" she said with a dry voice and a sad smile. \n\n\"Good morning,\" he said softly and offered her a sip of water to ease her throat. \"How do you feel this morning?\"\n\n\"I don't know yet,\" she shook her head as she replied. \"Fuzzy, achy, my throat is a little sore,\" she replied honestly, thinking about it as she spoke.\n\n\"That will pass,\" he said lightly. \"You slept very deeply. I am glad. Did you dream at all?\"\n\n\"No,\" she frowned as if trying to remember. \"I don't think I did.\"\n\n\"Good.\" He smiled and stroked her hair from her face. \"Do you need to use the bathroom?\" he asked.\n\n\"Yes, please, Genesis,\" she nodded, and looked at the cannula in her arm, realising that it wasn't connected to the drip.\n\n\"You did so well yesterday, and you slept so soundly that I had them disconnect it this morning. If you need pain relief, you can take a tablet instead of having it reconnected. If you manage with the lesser pain relief today, the doctors will remove the cannula from your arm,\" he explained. \"As long as you continue to eat and drink what I provide,\" he added cautiously. \"As long as you help me to look after you by doing as I ask, you will recover quickly. You are young and healthy and, once you show us that you can do as we ask, then we can leave the hospital and put this whole painful incident behind us.\"\n\n\"I would like that,\" she said quietly. Serena looked at the man who would love and protect her now that Remy was dead. She had to trust him and love him in return. There were no other alternatives for her. She reached up and wrapped her arms around his neck as he picked her up and placed her cheek against his chest as he held her close, carrying her to the bathroom. He had a loud, strong heart, and his touch was surprisingly gentle for a man of his stature. Learning to love this man would not be difficult, and she believed she already had some feelings for him. \n\nGenesis went through the same bathroom ritual of the day before. Undressing Serena and exploring her body as he bathed her before easing her ache. All the while his own grew within him. He dressed her in a fresh chemise of a deep bronze colour to highlight her pale skin and the bronze highlights in her hair, then helped her to brush and style her hair over her shoulder again. Never would he have believed that he would find so much pleasure in looking after a woman in this way, seeing to her every need and having her dependent solely on him, but he did. He would like her to be more independent and be able to think for herself in her self-care needs, but he had to admit that he liked the absolute control she gave him over her life. It was a powerful and heady feeling, and he had to constantly remind himself that this wasn't healthy for either of them. He needed her to cede control to him because she wanted to, not because she had no other choice. ",
        "Today she would get that choice. It would be her choice if, in the end, her sister tried to force the issue and make her leave and return to her family in Perth. If she chose to stay, he would get his father and uncles involved in negotiating with the family for her care. If she chose to leave. he wasn't sure what he would do, but he would give her the power to choose if she wanted it. He knew that the choice was an important part of her healing process. He also knew that there were some things he wouldn't compromise on, but he wasn't Remington Royce and he would not abuse the power and control she had given him already. \n\nNoah returned with a light breakfast of croissants, fresh fruit salad tubs, and small cups of yoghurt, with granola sprinkled on top. Genesis placed a cup of yoghurt and granola in front of Serena with a spoon, and watched her intently until she picked up the spoon and began to eat. He then turned his attention back to his brother and the bag that he had brought with him, absently picking up a ham and cheese croissant and biting into it.\n\nNoah rifled through the bag and came up with an iPod and some headphones and passed them to Genesis. He had downloaded a few different playlists that Serena could choose from. It was a good idea, and would allow them greater freedom to speak about Genesis' plans for her without worrying her, particularly since Genesis stubbornly refused to leave her bedside until he was sure of her bond to him. The fact that she hadn't eaten and had fought the hospital staff every time they tried to treat her injuries before he had taken control of the situation was concerning, but so was Genesis's obsession with her. \n\nNoah talked to his father about it and discovered there was more to this curse than he had thought. Not that he believed it per se, but he couldn't refute the evidence of it in front of him either. His father had reassured him that, once the bond between them became solid and unshakable, Genesis would revert back to his normal persona, although he would always remain overly protective of her. Noah couldn't imagine a woman ever affecting him like that. He'd been in love, or at least thought he had, but it was never obsessive like Genesis' feelings for this girl obviously were. He turned to look at Serena properly as Gideon explained to her about the headphones and how to use them. \n\nDressed in satin, with her hair brushed and styled, Noah could see the attraction she held for his brother. She was pretty, if not beautiful. She was petite with fine features. Her pale skin and golden hair gave her an ethereal beauty that almost made her look like the pixie Gideon called her. If he was honest, he and Genesis had always been interested in the same type of women, but he could also appreciate why his brother would go to such great lengths to be the hero and save this girl, even without a curse pushing him. It was who Genesis was, a champion for the weak and helpless. He pulled his gaze away and took a folder from his bag.\n\n\"Okay I've looked into it, but it won't stack up in court with her mental health being what it is. A child could argue it and win if you tried to get her to sign a power of attorney to you, so that you could make the decision for her. You need the sister on board. If she isn't, the only other way is to get Xavier, Dominic and Zio to go to her family and push your agenda,\" Noah said seriously. He took on the serious lawyer persona that he used with his clients, being careful not to use the Gambaro name, not knowing how Serena reacted to it, despite her listening to the music through the headphones now. \n\n\"Hell, most of the contracts that we use with the people who work for us wouldn't hold up in a court of law,\" Genesis huffed. \"Thanks for looking into it for me. I guess we wait and see what the sister is like. I doubt there would be any issue talking to the leaders. She's a second or third cousin, not someone positioned close to them.\"\n\n\"What time's the sister due in? Do you still want me to pick her up and give her a brief rundown of Serena's condition?\" Noah asked.\n\n\"Yeah, take her to brunch, or lunch if the plane is late, if she will let you,\" Genesis nodded. \"She's on a Jetstar flight that left Perth around six, so she should be here around eleven. If she wants to come straight to the hospital, fill her in as much as you can before she gets here. Otherwise, it might become more of a scene than anyone wants.\"\n\n\"Okay, so everything going according to your plan. What's the next move?\" Noah asked, leaning back in his chair.\n\n\"I'd like to take her home as soon as possible, but the wound is large and needs time. I think that I can make a case for moving her to the clinic at Fannie Bay, though,\" he said as he scratched his cheek. \"It's a small facility but well equipped, and Naomi has said that she will come with us to care for Serena's injuries.\"\n\n\"Sounds reasonable,\" Noah shrugged in agreement. They continued to talk about Genesis' plans to eventually take Serena out to the station where they wouldn't be disturbed by anything except the wildlife. While they spoke, Genesis absently pulled small bits from his croissant and fed them to Serena, who surprisingly didn't resist the food, given her reaction to the last time he tried to feed her any kind of bread. Her eyes remained on him at all times, despite the music she listened to and eating her breakfast. Noah could see the bond between them strengthening, even in just twelve hours, and he smiled. He hoped that this was Genesis's curse breaker and that his brother could finally settle down and be happy rather than traipsing all over the world reporting dangerous stories, not just because the Table asked it of him now, but because he found his One.\n\n\"Good morning,\" Gideon boomed cheerfully, walking into the room and holding Vivienne Papillo's hand, which she seemed to be trying, and failing, to extricate from his grip. \"How is our little Pixie this morning?\"\n\n\"Seems you woke up on the right side of the bed,\" Genesis chuckled. \"Hello, Vivienne, did you sleep well before this moron woke you up at some ungodly hour?\"\n\n\"I did, thank you, but I was already awake when he arrived with coffee,\" she laughed lightly, moving toward Serena with a smile. \n\n\"Hi, Vivienne. I'm Noah, the often-ignored middle brother,\" he stood and held out his hand to her, allowing her to finally take her hand from Gideon's. \n\n\"Middle-child syndrome,\" she nodded seriously. \"I feel your pain.\" She took his hand as he grinned at her.\n\n\"Can Serena take the headphones off so I can talk to her, please?\" she asked Genesis. \n\n\"Sure, in a minute. I'm glad you're here. I wanted to run some ideas past you and get your opinion later, if that's okay?\" Genesis asked in return.\n\n\"Of course, I'm here to help,\" she kept the smile plastered on her face as she thought about her plans to go home as well as her conversations with Gideon this morning. She hoped she could convince Genesis to let her be involved in the treatment because, without that, she had nothing to stay here for except a man she couldn't quite take seriously when he flattered her and kissed her the way he did. She wasn't one of those girls that men chased. She was a highly-respected doctor in her field of expertise amongst her own people. Here, with these people, in this family, she was nothing, and no amount of grandstanding would change that. She realised that she would have to earn their respect, not just demand it, and she hoped that a different approach might just do that-if she could stop herself from lashing out when she felt like she was being dismissed too easily.\n\n\"I take it Dom was right?\" Genesis turned his question to Gideon. \n\n\"Yeah thanks for the warning on that,\" Gideon scowled and rubbed at his chest, remembering the pain from earlier that morning. \"Once I saw the bird's broken wing for what it was, well, you know how it feels when you just want to fix it.\"\n\n\"You found a bird with a broken wing this morning?\" Vivienne asked. \n\n\"Yeah, but don't worry. I intend to look after it and make sure that it heals perfectly,\" Gideon said, his eyes softening with his voice as he looked at her. \n\n\"Shit! Seriously?\" Noah exploded, having finally understood what his brothers were saying. At a look from them both, he shut up and shook his head before taking a closer look at Vivienne. The two women destined to be his sisters-in-law couldn't have been more different, but the way his brothers hovered over them couldn't be more similar. \"Genesis was always the one bringing home injured animals and birds when we were little. Even a few stray kids followed him home from time to time,\" he chuckled. \"I'm just surprised that Gideon took the time to stop and help one who needed him,\" Noah said thoughtfully, trying to express how he felt and explain his outburst sufficiently to get past Vivienne's scrutiny of him.\n\n\"Happens to us all, I guess. Gen may be the youngest, but he's rubbed off on us since he's been back this time, being the Clark Kent-superhero reporter, out to save the world a few people at a time,\" Gideon chuckled. \"It will be you next, off trying to save some poor bird with a broken wing.\"\n\n\"Not likely. I'm more inclined to call wildlife rescue,\" Noah chuckled, waving away their prediction. \"I mean, the wildlife is fun to play with, but if I'd wanted to be a vet, I wouldn't have become a lawyer.\"\n\n*****\n\nNoah Zenati stood at the airport waiting with a small piece of cardboard displaying the name of Marcella Gambaro. He felt like a chauffeur as he stood looking awkward in his tailored grey suit amongst the dark-suited drivers who also held cards displaying names. He had a vague idea of what the woman would look like but didn't want to chance missing her in the crowd. When he saw her walk through the gates, he smiled. He needn't have worried. There was a strong family resemblance between the sisters, and she hadn't changed much from the photo he had found of her online, but he continued to hold the sign so that she would know who he was.\n\n\"Hi, I'm...\" Noah started to say when she cut him off.\n\n\"Thank God they sent me a driver,\" she said and handed him her carry-on luggage. \"I just know I would get lost or ripped off by a taxi. Lead the way and I'll follow. I don't have any other luggage to pick up,\" she spoke rapidly and began to walk as she indicated that he should lead on. Noah chuckled but decided not to say anything here in front of everyone and led the way out to the kerb.\n\n\"Would you like to wait here or walk with me to the car park?\" he asked looking down at her high heels, sceptical that she could walk very far in those.\n\n\"Car park? Isn't there an area where drivers are able to park while they pick up their passengers?\" she asked irritably, eager to get to the hospital and see the woman claiming to be her sister.\n\n\"Probably, but as I tried to say when you arrived, I'm Noah Zenati. My brother found your sister and is making sure that she has the best of everything she needs,\" he explained.\n\n\"Oh gosh, I'm so sorry.\" Marcella placed a hand to her cheek then quickly gathered herself, thrusting the same hand out toward him. \"Marcella Gambaro. I'm terribly sorry but with the name sign and the suit and...\" she floundered uncharacteristically.\n\n\"What's wrong with my suit?\" he asked with a chuckle and saw her blush. \"Look, you wait here, and I'll go get the car. Then we can talk about what's happening with Serena.\"\n\n\"Serena? My sister's name is Olivia,\" she frowned. \"I came all this way to see someone claiming to be Olivia Gambaro.\"\n\n\"I'll explain in the car. Wait here, I won't be long,\" he said reassuringly, kicking himself for mentioning her new name before he'd had a chance to explain all that had happened to her.\n\n\"Wait, I'll come with you. I'm sorry, I've given you the wrong impression. I'm not a princess, not really.\" She hurried after him as he slowed his stride. \n\n\"It's a fair walk.\" He looked meaningfully at her shoes.\n\n\"Don't worry about me, I'm so short that I have had heels permanently attached to my feet since I was a teenager,\" she laughed self-deprecatingly.\n\n\"Okay, if you insist,\" he nodded and began walking again. \"How was your flight?\"\n\n\"Long,\" she sighed. \"I know the reality is only three and a half hours, but I felt every one of the five hours that the time zone difference told me it was.\"\n\n\"You don't enjoy flying?\" Noah asked.\n\n\"Not unless I am going far, far away on vacation,\" she grinned.\n\n\"Have you travelled much?\" he asked, finding that he wanted to know more about this woman.\n\n\"Only in my dreams but I will, one day,\" she said with determination.\n\n\"Have you been to Darwin before? There's a lot to see or do in the Northern Territory. Are you staying long?\" he asked, continuing to make small talk as they made their way to his car.\n\n\"I haven't made any definite plans. It depends on Olivia's condition, I suppose. They didn't give much detail when I called to say I was coming,\" she said thoughtfully. \"I haven't packed for a long stay though. I thought a few days would be enough.\"\n\n\"Here we are,\" Noah indicated the car and pressed the fob to unlock it for her as he took her case to store it in the boot.\n\n\"That wasn't far,\" she chided him.\n\n\"Far enough on those heels, I think,\" he chuckled and slid into the car beside her. \"Look, there's no easy way to say this, but what happened to your sister was quite horrific by any one's standards. We think it's best you know what happened before you go to the hospital to see her,\" Noah said carefully as he manoeuvred out of the tight car park and onto the road back into town. \n\n\"If it is her.\" Marcella voiced her doubts.\n\n\"Why don't we get an early lunch, and we can talk about Olivia and what happened to her when she disappeared so completely that you believed she had died?\" he suggested.\n\n\"I'd rather just go straight to the hospital,\" Marcella said frostily. She'd buried the little sister she had loved once. She didn't want to get her hopes up only to have to bury Olivia again, metaphorically or otherwise.\n\n\"You will want to hear what I have to say, trust me,\" Noah said gently, noticing how rigid her posture had become.\n\n\"Well, you have me prisoner here, so I don't see that I have much choice,\" she sighed.\n\n\"You aren't a prisoner. I'm just asking for a few more minutes of your time and offering to feed you. You could be at the hospital for a while, and let's face it, hospital food leaves more than a little to be desired, even if you could find something you liked.\" He tried to make light of the situation. He didn't like that he would have to be the one to tell her that her sister had been to hell and was trying to find her way back, with Gideon's help. \"We could pick up something and take it back to the apartment that Genesis has arranged for you to use,\" he suggested as an alternative to a restaurant where they might be overheard if she reacted badly to the story.\n\n\"Fine, whatever gets me to the hospital quicker to see this woman,\" she snapped, her anxiousness coming out in bad manners for the second time since meeting this man. \n\nNoah made a call ordering lunch to be delivered and drove in silence directly to the apartment at Nightcliff, sensing that Marcella didn't want to talk, as she stared out of her window watching the scenery. Taking her bag from the boot, he led her up two flights and into a cosy apartment with a view of the bay. \n\n\"It's beautiful,\" Marcella said, stepping out onto the small balcony and looking out at the sparkling water with so many small sailing boats bobbing on its surface.\n\n\"We could eat on the balcony if you like,\" Noah suggested, grateful that she hadn't snapped at him again when they entered the apartment.\n\n\"No, it's fine at the table. I imagine it will get quite hot out there, sitting in the direct sunlight,\" Marcella said and came back inside, shutting the door and turning on the air conditioning. \"Do you mind if I have a quick look around while we wait for the food?\"\n\n\"There's not much to see, I'm afraid. It's small but it's cosy, and as you said, you have a great view,\" he agreed.\n\n\"That's great, I like cosy. I'll just hang up a few of my dresses so the wrinkles drop out a bit overnight.\" Marcella headed into the bedroom. \n\nWith almost perfect timing, the food arrived and Noah began setting out their lunch on the table, searching the kitchen for cutlery and glasses for their drinks.\n\n\"Why don't you tell me what you know of your sister's movements and why your family thought she was dead, and I'll take over from there?\" Noah encouraged as she came to join him, looking at the beautiful seafood salad he had ordered for them.\n\n\"Well, Olivia ran out of money fairly early on in her travels, and when she didn't come home we assumed they were doing some cash-in-hand work during the summer, wherever they stopped, and we lost track of her as she went further north into Papillo territory. The man who convinced her to leave with him filed a missing person report in Broome about a year or so ago, saying that she had sailed off after they argued and neither she nor the boat had been seen since. There was a cyclone close to the coast at the time, and several boats were destroyed. None of the debris that washed up could be identified distinctly as one boat or another, and Olivia was declared lost at sea,\" she said simply and succinctly, holding all her emotions at bay as she tried to hide the devastation that she had felt at the time.\n\n\"Except that she wasn't lost at sea, and from what little information we could gather about the man who filed the report, he left her for another woman. When that woman realised what a waste of space he was, he tried to go back to Olivia, but she was gone,\" Noah continued her story. \"The people who knew Olivia and this man in Broome said that he drank too much, gambled and beat his girlfriend before he moved out of the boat with another woman, and Olivia left the marina.\"\n\n\"Oh God, it must have been a terrible situation to make her leave alone,\" Marcella gasped. \"She left us for him. She was so in love, and I encouraged her to find her own path in the world and be happy.\"\n\n\"She made it as far as Darwin before the boat became too damaged to go any further, and she needed to work to get the money for repairs. She worked in a dive down on the docks, where she got a cheap berth on an old unused dock. Now the story gets a little sketchy here, and we aren't one hundred per cent sure how much is what your sister was told and how much was the truth, but she says that she witnessed the murder of a Suebi leader and was saved from being murdered herself by another Suebi leader named Remington Royce.\" He paused and let that information sink in while he took a bite of his salad.\n\n\"She was with the Suebi this whole time?\" Marcella asked, horrified at the idea of her sister dealing with the underground criminal network that the Suebi ran. \n\n\"Now, there are several versions of events here, but I am going with the information that we got from the priest who alerted my brother, Genesis, to the fact that the young woman about to marry Remington Royce was, in fact, your sister. Olivia had apparently come under the eye of Remington some weeks before, and he had been stalking her when they both witnessed the murder of his brother. Convinced that her life was in danger because the shooters had seen her, she went willingly with Remington to his home.\" Noah paused to take a deep breath and have a sip of his drink.\n\n\"You look nervous. It can't get much worse, can it?\" Marcella asked, her anxiety obvious in her question.\n\n\"Remington used the situation to systematically destroy every trace of her old life and give her a new one. He brainwashed her through the use of drugs, physical and mental torture and deprivation to believe she was Serena Seabrook, his perfect woman. When they became engaged, he pierced the diamond solitaire ring through her nipple,\" he said, not wanting to go into the rest of the damage found on Olivia's body that told of the long-term torture. \"When asked about Olivia Gambaro, she claims that she died, was murdered by bad men on the docks. She talks about Olivia disparagingly and always in the past tense. She will only answer to the name Serena Seabrook at the moment.\"",
        "\"My God!\" Marcella whispered and stared at Noah, stunned by the story he was telling her. \"We should go. I need to see her. I need to know it's really her.\" Marcella got to her feet, looking around for her bag.\n\n\"Please sit, I've not finished her story yet,\" Noah said, his voice full of emotion. \"You need to know it all before you see her. You will understand why when I finish, I promise.\"\n\n\"But...\" Marcella sank back into her chair, not believing that this story, possibly her sister's story, could get any worse. \"I just want to know for sure, see for myself, that it's her.\"\n\n\"She will be there whether we go now or in half an hour,\" Noah reassured her. \"Try and eat a little more while I finish the story.\" He took a bite of his own salad before speaking again. \"To give himself and those closest to him an airtight alibi, Remington planned his wedding to coincide with the attack on the Mothers of the Tables. What he hadn't counted on was that the rifts inside his own organisation had grown during the time that his obsession with making Olivia into his perfect woman kept him from his business dealings. The wedding was ambushed, and Remington was shot several times. They managed to get him to the hospital alive but his injuries were too severe, and he died last night. Olivia sustained injuries too and was rushed to the hospital and admitted under her assumed identity, Serena Seabrook.\" Noah glided over the details, giving her just what she needed to know.\n\n\"She was shot!\" Marcella gasped.\n\n\"The bullet grazed her side quite deeply but didn't hit any organs. The shooters were aiming for Remington and those men closest to him,\" Noah explained quickly.\n\n\"Oh, thank god,\" Marcella breathed. \"But she will be okay? The graze is deep but she will heal without any residual injuries, won't she?\"\n\n\"This is where my brother, and ultimately the rest of my family, come into the picture,\" he continued. \"One of the Suebi close to Remington, we believe a man called Kairos, approached a priest through the confessional and told him the tale of a girl called Olivia Gambaro who had been brainwashed and tortured and was lying in hospital at risk of being murdered. The priest was given a lot of detail about the woman and her time with Remington. The man told the priest to seek help from Genesis, because of his reputation as an investigative journalist for helping people in bad situations. Which he did, and having wanted to get information about Remington's organisation for a while, Genesis gave the story the benefit of the doubt.\" Noah paused to eat again as she digested the information.\n\n\"When Genesis got to the hospital with the priest, and forced his way past the bodyguard still protecting Olivia, or Serena as she is known now, she was in bad shape. She was confused and, it seemed, going through withdrawals of some type, maybe from the drugs Remington had her on. She wouldn't talk to anyone and fought the hospital staff, refusing to let anyone touch her. The doctors had to have her held down and knocked out to examine and repair her wound. She was refusing to eat or drink or even do the basics of self-care.\"\n\n\"This sounds like the plot to a thriller,\" Marcella shook her head. \"It's all so unbelievable.\"\n\n\"Genesis found a way to get through to her. He's taken on the role of a Master like Remington had been to her. They brought the man Kairos, whom she trusted, from where he is being kept in custody, to tell her that Remington wanted her to belong to Genesis if anything happened to him. Gen's managed to get her to eat and look after herself better, as well as let the doctors treat her without fighting them. She still won't respond to many other people, even when he is there and no one when he is not, though she will acknowledge Gideon and me because he has told her that she must. One of the Papillo doctors has also been working with her and can probably give you a better idea of her mental state than I can.\"\n\n\"So, your brother has essentially become her Master, and commands her to eat and drink and let the doctors treat her because she wouldn't do it without those commands?\" Marcella asked, to clarify the situation.\n\n\"Remington made her dependant on him for everything in her life, from the clothes she wore and the food she ate to who she was allowed to speak to, which was basically no one. He guarded her jealously and gave her no freedoms at all, not even freedom of thought. She can't seem to cope now without that guidance. Genesis plans to gently undo the conditioning that Remington put in place but, for now, he is the only person she will listen to about what she allowed to do.\" Noah tried his best to put Genesis's relationship with Serena in the best possible light. \n\n\"Can't he tell her that she is Olivia and that Serena is a fallacy?\" Marcella asked as Noah paused in the story again.\n\n\"Each time he tries, she refuses to acknowledge that Olivia is even alive. She continues to claim Olivia was killed by bad men with guns down on the docks,\" Noah sighed. \"She won't answer to Olivia. We hope that seeing you might shock her into admitting that she is Olivia or at least draw her out of the shell that Genesis has been trying to pry her out of for the last few days.\"\n\n\"Right,\" she let out a large breath. \"It's a lot to take in. Your brother seems to have taken on a lot, where Olivia is concerned. Why would he do that and not just leave it to the Papillo doctor or professionals I could source once I got her home?\"\n\n\"I don't suppose you believe in fate? That things happen for a reason?\" he asked cautiously.\n\n\"I grew up believing in Oracles and mind reading, so fate is not such a stretch for any member of a Table Family, I guess,\" she admitted with a shrug.\n\n\"We tend to be a bit of a superstitious bunch up here. A priest brought the story to Genesis and asked him to help. When he first saw her, he said she looked so fragile that he wanted not just to help but also protect her. He's got a reputation for championing the weak and vulnerable. Trust me, he has only her best interests at heart, and if anyone will go the extra mile to make sure she eventually recovers, it's Gen. He's made more of a difference with Serena in less than a day than the doctors had in the several days before he found out about her.\" Noah continued to ensure that Marcella understood that Genesis was possibly the only one who could truly help her sister at this point. \"He wants to make sure she gets better. That would mean not sending her home to Perth with you,\" he said, tentatively.\n\n\"I doubt that anyone would argue to have her sent home if he insisted,\" she said sadly. \"If it's the cost involved in getting her the treatment...\" she hedged. She had thought that if it were Olivia, she would be able to look after her herself. Her father certainly wouldn't forgive Olivia and welcome her back into the family. Staying here with people who wanted to help her would be much better for everyone, except maybe herself but she couldn't afford the cost of Olivia's treatment and living expenses on her own. She would have to go to Uncle Bernie or Oscar and plead her case.\n\n\"No,\" Noah said quickly. \"Genesis will do what needs to be done for Olivia. You don't have to worry about the costs involved. We're family remember, one huge international family. Genesis wants her to stay here. We were concerned that you would insist on taking her home or sending her to a facility where specialists can poke and prod her and make no difference.\"\n\n\"Honestly, if I hadn't heard the whole story before going to the hospital, I would have wanted to take her home, but I can see from what you're telling me that she needs more help than I could possibly give her myself.\" Marcella closed her eyes and shook her head. \"I've learned to fight the battles that I have a chance of winning and let others go. As much as I hate to admit it, I don't think I can give her what she needs right now, if what you say is true.\" Still, she needed to know if it was true, and she needed to decide what to tell her mother when she called tonight as promised.\n\n\"What about your parents? Won't they want her home?\" Noah asked, not understanding why her sister's care would be solely up to her.\n\n\"Papa is... well... he's a rigid man. He feels that Olivia turned her back on the Family, and he washed his hands of her and refuses to even acknowledge her existence now. Mama is worried and would be here if she could but... well... he's a rigid man,\" she sighed. \"He doesn't know I have come, but Mama called Zia and organised it, after Papa refused to acknowledge that Olivia could still be alive.\" She wasn't sure why she was so honest with this man, but she felt that she needed to be after he had taken the time to speak to her so honestly about what to expect at the hospital. \n\n\"I see,\" Noah said, even though he couldn't understand how a parent could just wash their hands of a child. \"Well, you can stay with us as long as you need. I can organise a car for you if you would prefer that to having to call me or a cab to get you to and from the hospital. You could do a little exploring as well, though I wouldn't advise driving too far on your own.\"\n\n\"Maybe we could just go to the hospital first, before I make any decisions. I know you all believe it's Olivia but this is all so hard to believe. The Olivia that I knew and loved would never go willingly with a Suebi,\" she shook her head, \"Let alone allow herself to be trained and treated as a submissive. It just doesn't seem likely that it's true. She was strong and vibrant and didn't let anything stand in her way.\"\n\n\"Sure, we can go now if you have eaten enough. Maybe we could put the leftovers in the fridge in case you are hungry when you get home?\" Noah suggested.\n\n*****\n\nGenesis was anxious. While Noah had said that he didn't believe there would be any issues, and that Marcella understood the delicate nature of her sister's condition, he still worried what seeing her would do to Serena. His hand rested on her leg, knowing that they were making their way up in the elevator. Gideon and Vivienne had returned to observe the meeting between the sisters and made idle chatter about their own siblings that Genesis barely heard. \n\nThe woman came into the room in front of Noah, who was close behind her. Genesis took in the familial similarities between the two women and felt Serena's leg stiffen under his hand, the only sign that she might recognise her sister. Serena's face remained calm and impassive as Marcella approached her.\n\n\"Hello, Serena,\" Marcella smiled and held out her hand. \"Noah told me how much we look alike, and I couldn't wait to meet you. I hope that you don't mind me coming to the hospital.\"\n\n\"Talk to her, she came a long way to meet you,\" Genesis said, frowning at Serena as she looked to him to tell her if she could speak or not.\n\n\"Hello,\" Serena said and looked away from Marcella again.\n\n\"Do you mind if I sit down?\" Marcella asked, aware of the role that she was playing, having worked out how best to approach this woman without scaring her or forcing her to admit who she was on the drive to the hospital. When the woman shook her head, she took the chair that Noah had pulled up for her. \"Thank you. Would you like to know why I came so far to meet you?\"\n\n\"I would like to know,\" Genesis said for Serena's benefit after she looked at him for guidance once again.\n\n\"Yes, please,\" Serena whispered, sounding unsure of herself.\n\n\"Well, I have a sister who disappeared, and each time I hear about a girl who looks like me, I have to go and meet them, just in case. You see, I miss her terribly and would give anything to see her and talk to her again. I loved her so much, and I encouraged her to go out and explore the world. But I was wrong, and I want to tell her I was wrong. Even if she never wanted to come home or see anyone else in our family ever again, I'd just want her to know that I love her and miss her so much,\" Marcella explained with tears sparkling in her eyes as she spoke. \"Do you have any sisters, Serena?\" she asked softly.\n\n\"No, I have no one, just Genesis,\" Serena answered quietly, refusing to look at Marcella.\n\n\"You are very lucky then. Genesis' brother Noah has been telling me that he is like a superhero,\" Marcella smiled. \"Every girl dreams of finding her own hero, a knight in shining armour to come and rescue her. When we were little, my sister and I watched a movie with two sisters who were witches, and they wished for a hero to come and rescue them. It was called Practical Magic. Have you ever seen that movie?\"\n\n\"I don't know,\" Serena shook her head slightly and frowned. \"I don't think so.\"\n\n\"Oh well, it doesn't matter. I'm sure that you could find it to watch on Netflix while you are recovering, if you're interested. Being stuck in the hospital can be so boring. I was in the hospital for a while last year, but I won't bore you with that,\" Marcella chatted idly, seeing if she could get any reaction from the woman in the bed. Olivia, or Serena as she preferred to be called, now said little and stared down at her fingers rather than engage with her on any level. At least she knew for sure that it was her sister, and she wished that she could talk to Genesis alone about everything he had done for her and would continue to do for her.\n\n\"I'm very tired now,\" Serena said quietly.\n\n\"Of course, you are. Thank you for letting me visit. I guess my search will continue. I was so hopeful.\" Marcella got to her feet and reached out to touch Serena's arm. She gasped as Serena flinched away from her touch. \"I'm sorry,\" Marcella stammered, her voice breaking. \"I just... I just wish I had my sister back,\" she said sadly and withdrew her hand. \"You look so much like her that I just...\" She shook her head and straightened her posture. \"I'm sorry, I shouldn't be here,\" she turned and fled the room.\n\n\"If you are so tired, then sleep,\" Genesis commanded Serena, showing his displeasure. \"Gideon, stay with Serena please. I need to apologise to that poor woman for her rudeness.\" He stood and left the room after Marcella and Noah, who had followed her and stopped her, taking her to the waiting room to calm down.\n\n\"Marcella,\" Genesis said gently, taking the seat beside her. \"I promise that I will do my best to get your sister back for you. She just can't process that she is your sister right now. I was hoping your appearance might jolt her back to reality, but I'm afraid that the brainwashing has almost totally erased Olivia from her persona. She believes Olivia is dead.\"\n\n\"Noah explained that to me, which is why I didn't confront her with who she is, but it just got too hard. Who would do that to another person? It's wrong, just... so wrong.\" Marcella broke down into sobs again. \"She wouldn't even let me touch her.\"\n\n\"She barely tolerates my touch or that of the doctors,\" Genesis lied. He knew that she craved his touch now, but only his touch. \n\n\"I just need some time to take it all in,\" she sighed. \"Can I come back tonight to talk to you about her and what you intend to do for her?\"\n\n\"Of course, whenever you feel up to it,\" Genesis agreed. \"She will get better,\" he said encouragingly. \"She's come a long way in the last twenty-four hours alone.\"\n\n\"I know. Thank you for all that you have done for her. I don't know how I can ever repay you,\" she shook her head and dashed her tears away. \"This isn't me. I rarely let my emotions get the better of me. I've given you the totally wrong impression,\" she said and straightened her posture. \"People who know me in Perth think that I am an intimidating mega-bitch and would laugh if they could see me now.\"\n\n\"I'm having trouble seeing you as any kind of bitch, let alone a mega one,\" Noah chuckled.\n\n\"Trust me, I earned that reputation, on purpose,\" she laughed lightly with him. \"I just need a little time to take it all in. This... the way Olivia is now... it's not what I was expecting. Olivia was always so headstrong and stubborn. That woman looks like her, but that isn't her, not really. That is Serena Seacrest or whatever she calls herself now.\"\n\n\"Seabrook, Serena Seabrook,\" Genesis corrected her without thinking about it. \"Marcella, I want to help your sister. I would like you to leave her with me and let me do what needs to be done. You don't have to repay me in any way. I want to do this for her. I want you to leave her here in Darwin with my family and me.\n\n\"Yes, Seabrook,\" Marcella nodded sadly. \"As I told Noah, I don't think anyone will fight you over making sure that she gets the help she needs. Least of all me,\" she sagged. \"I have limited resources; my father would rather ignore her existence and with everything that's happened, I don't want to burden Oscar or Bernardo with this, not while Nathaniel is still recovering, so,\" she spread her hands in front of her, \"I gratefully accept your generosity to both my sister and myself. Thank you for the apartment, I appreciate it very much. I will find a way to pay you back, though. It may take a while but, eventually.\"\n\n\"That's not necessary,\" Genesis said gently. \"But I am relieved you feel that way. Oscar is aware of what we are doing to help Olivia, and as long as you are happy with the measures I am taking, he will endorse our care of her, and you while you're here. I'd like to move her to a private clinic tomorrow, closer to the apartment that you're staying in and our home, now that you have agreed to leave her in my care. You can let me know if you have any concerns about that tonight when you return. I would ask that you didn't tell her of my family's relationship to your family just yet. She was brainwashed by the Suebi, and I'm unsure what her reaction might be to that information. Anything we can do for you while you are here, just ask and we will get you what you need. Noah will make sure that you have our direct numbers. Don't hesitate to use them.\"\n\n\"Thank you, Genesis. Once again, you've surprised me, and that's not easy to do,\" she laughed self-deprecatingly again then turned to Noah. \"I know you have wasted a good part of your day on me already, but would you mind taking me back to the apartment? I don't remember where it is or how to get there,\" she admitted.\n\n\"I'm at your service today.\" Noah stood and offered his hand. \n\n\"Move her if you think it is for the best. Especially if it will be easier for me to see her and make sure she is okay. I'll be back later tonight and better able to deal with what's happening here. I want you to know how much I appreciate what you're doing, even though I'm not sure I understand why you're doing it,\" she said, dubiously.\n\n\"It's hard to explain, but trust me when I say that I only want to help your sister recover from the hell she's been through,\" Genesis said seriously, standing with them and drawing her into an awkward embrace. \"Thank you, Marcella. I had dreaded losing her to someone who wouldn't understand what she needs right now.\" He released her suddenly and walked back towards the room in which Serena Seabrook lay. Marcella watched him go, stunned by the embrace as much as his words.\n\n\"You need to explain more about these superstitions your family have,\" Marcella said as she arched an eyebrow at Noah.\n\n*****\n\nVivienne stepped out of the hospital room as Genesis approached. She drew him to the side and looked around, seeing a few people in the corridor, and indicated that he should follow her to the next room which was empty.\n\n\"I saw it too,\" she said once they were inside and the door closed. \"I believe you could be right. She knows and remembers her identity before Remington brainwashed her. The problem is working out why she is refusing to admit it or even acknowledge her sister, who was surprisingly calm and gentle in the face of Serena's denials.\"\n\n\"I have a couple of theories,\" Genesis said and scratched his cheek, looking at the wall that separated the rooms as if he could see Serena through it. \"By all accounts, she was living a life of poverty with no friends and no support of any kind. It's not such an appealing life to want back,\" he grimaced as he explained. \"There's always a chance, however, that she was trying to make extra money and got involved with some of Remy's men, which was how he found her. She might be genuinely scared for her life. She has said since day one that Remy saved her and kept her safe. It may have been more real than we thought.\"",
        "\"In either scenario, the decisions that she made about her life led her to that place where she was vulnerable to a man like Remington. Maybe she wanted the type of relationship that we believe he forced on her, where she didn't have to take responsibility for any of the decisions in her life any more. It could be that she not only embraced what he did to her but requested it. She may have believed she deserved punishment. She could see you as filling that void now and want you to take the responsibility of her life choices from her, rather than need you due to brainwashing,\" Vivienne hypothesised. \"If she admits who she is and returns to Perth with her sister then she has to admit that she failed at what she set out to do with her life. That's a lot of shame and humiliation to carry home with you, especially if she turned her back on her family and disobeyed the people who loved her and would have looked after her,\" she said, still considering that she might have to return home to her own family having failed and been dismissed by both the Vitali and the Zenati.\n\n\"That would change how I approach her recovery significantly,\" Genesis mused, lifting his hand to scratch his cheek again.\n\n\"Not necessarily,\" Vivienne said as she considered what they were discussing from his angle. \"You always planned to get her to take back some independence. It would mean not just giving her the confidence to make a decision, but also accept responsibility for any and all outcomes from that decision. Like now, she decided to ignore her sister even though she seemed to remember her, and the consequence of doing that was upsetting you enough to leave her side, which rarely happens. She lay down and closed her eyes, just as you commanded when you left, but she cried silently. She didn't like the consequences of her actions when confronted by her sister. So, your initial ideas on dealing with her mental health may still be effective, if not more so, depending on which scenario we are looking at, or all of them, really.\"\n\n\"Yeah, I can see that. I want to think about it for a while and deal with what Serena just did without an audience, so she will talk more easily,\" Genesis said, thinking through Vivienne's analysis. \"Alright, do my brother a favour and spend the afternoon with him anywhere but here in this awful place. Now that I have Marcella's permission, I will make arrangements to move her tomorrow and get you an apartment in the same complex where she is staying, close to the clinic. I have a feeling she might need as much help as Serena to navigate this and whatever is going on with her father.\"\n\n\"You want me to stay in Darwin with you? After you move her?\" Vivienne was surprised and then remembered that Gideon said that Genesis knew nothing of their argument. \n\n\"Please,\" he nodded. \"You help me make sense of what I am thinking and feeling. Even if you only play the devil's advocate to my thoughts, like now. We don't have to agree on everything to work well together. Besides, I am pretty sure Gideon wants you around even more than I do. I don't think that I have ever seen him with a genuine crush on a woman before,\" he chuckled. \n\n\"Did he tell you to say that?\" she shook her head, still not believing that a man like Gideon Zenati could be serious about finding her attractive. Maybe he really did want to get to know her in a non-professional way.\n\n\"No, and if you can't see the way he looks at you and hangs off your every word for yourself then you are blind,\" he teased. \"We better go back before he sends out a search party for us. Once we Zenati men set our sights on a woman, it's pretty hard to deter us.\"\n\n\"Have you set your sights on Serena?\" she asked. \"It will be a hard road for you if you have.\"\n\n\"Not at all. It is Olivia that I want,\" he admitted. \"The young woman who got dragged into the darkest depths of hell and is fighting to find a way back. Even if she doesn't remember all of who she was yet, she is in there, and she survived it all. That woman is strong and beautiful and deserves to be saved from remaining the automaton that Remington made her.\"\n\nVivienne considered Genesis for a long moment but said nothing. Something in his words and actions told her that he meant everything he said. The more she found out about the Zenati men, the more they confused her, and as they walked back to Serena's room, her thoughts turned to Gideon. The relief at her appearance in the doorway and his genuine smile of happiness as he stood and moved to stand near her made her body tingle with delight. She'd never been the sole focus of a man's attention the way she was Gideon's, and it was both exciting and unsettling.\n\n\"Gen, we're going to take off for a little while, Text me anything you need me to do tonight,\" Gideon said, taking Vivienne's hand. \"Ready to go?\" he asked.\n\n\"Ready to stay,\" she said decisively, giving Genesis a small, grateful smile.\n\n\"We'll come back tonight. For now, we go,\" he chuckled and swept her out of the room before she had time to bid farewell to Genesis, let alone Serena. Even if she only meant stay for now, it was enough for him to be hopeful that she would stay for good. \n\n*****\n\nGenesis sat down in his usual seat beside her bed but refrained from touching her as she feigned sleep. He tried to word carefully what he had to say in his head before speaking. He needed to maintain the bond that he had begun to strengthen and what he was about to do could damage that if he wasn't careful in his approach. He saw her move slowly towards the side of the bed at which he sat, as if to trying to renew their physical bond, so he cleared his throat and began to speak.\n\n\"I know you are not asleep,\" he said in a stern voice, trying to keep the displeasure of the last time he spoke to her in her mind. \"Open your eyes. I wish to talk to you, and I want to know you are listening.\"\n\nWithout a word, Serena turned her head and opened her eyes to gaze at him. Tears formed almost immediately again, and she blinked, trying to wish them away. He was disappointed in her, and it hurt her, almost physically, to see his expression. She would much rather endure the physical punishments that Remy had given her than the look of disappointment on Genesis' face.\n\n\"Do you think that Remington would have given you to my care without telling me your story. Who you were and how you were living before he met you?\" he asked in a chillingly cold voice. \"I can order a DNA test to prove to everyone that Serena Seabrook is a name he gave you to hide you from those who might try to find you. Serena Seabrook is a lie; the identification you have carried is fake and illegal. If you cling to this name and identification, you will be perpetrating fraud and could be arrested. Do you understand?\"\n\n\"No, Remington said he made it legal,\" she whispered, horrified by what Genesis was saying. She wasn't Olivia anymore. Olivia and her sad, miserable existence were gone. The DNA test would show otherwise, she knew, but she couldn't be Olivia again. It would be too horrible to contemplate being that sad, lonely girl who struggled each and every day of her life.\n\n\"If you had married Remington then you would have become Olivia Royce, whose preferred name would have been Serena, but legally you would still have been Olivia unless it was changed by deed poll. Only then would you have erased the name 'Olivia Gambaro.' Even then, a DNA test would show who you really are,\" he explained. \"As the wedding was never completed, you are still legally Olivia Gambaro, and that woman you were so cruel to this afternoon was your sister, the one family member who desperately wanted to come to see if you really were alive after believing you were dead.\"\n\nTears welled in Serena's eyes once more, and she couldn't find the words to rebel against what he was saying. She didn't want to be Olivia. She didn't want to go back to that miserable existence where she had no one and nobody care for her-nothing. She didn't want her sister to drag her back home in disgrace and be married off to some socially-inept Table man who couldn't find a girlfriend on his own. She wanted to be the woman that a man like Remy loved and adored. She wanted Genesis to love and care for her as he had promised. She knew Olivia wasn't worthy of that love, only Serena was.\n\n\"Your sister will return tonight. She only wants the best for you, and as I am the best, she has agreed that I would be the better person to care for you, now that Remy is gone. She will not be taking you home to Perth nor will any other member of your family be visiting you. You will, however, acknowledge your sister and thank her for caring enough about you to come all this way to make sure that you are being cared for appropriately. Do I make myself clear?\" Genesis demanded.\n\n\"Olivia deserved to die. She was nothing, had nothing, could do nothing right. Remington saved me. I owe him everything. I am Serena Seabrook. Olivia is dead,\" she said sadly rather than argue with him that she didn't want to reclaim her name or her family. Despite the relief she felt that her sister had no intentions of trying to force her to return home and that Genesis would continue to care for her and keep her safe, she had no desire to acknowledge anything associated with Olivia Gambaro.\n\n\"You are wrong about that. It was Olivia that Remington met and fell in love with. It was Olivia that he intended to marry. Serena Seabrook was just a disguise he used to hide you from those that would harm you or try to take you from him. It was Olivia that he entrusted to my care, and it is Olivia that I will take from this hospital. Serena will die here along with her creator. Remy is gone forever, little one. You are mine now, and I will make sure that you are safe and cared for and loved. That is what you want isn't it, sweet girl?\"\n\n\"Yes, Genesis,\" she admitted, wondering why he would still want her if he knew her real identity and how miserably the awful Olivia had failed at her life.\n\n\"Then we start with ensuring that your sister knows this is what you want so she can tell your family that you will not be returning to them. You will stay with me where I can protect and care for you. We will leave all the lies and deceptions associated with Remington Royce here, at the hospital. I will move you to a better and more private clinic to recover from your injuries, where there is no chance anyone who means you harm will be able to find you, and you will learn what it means to truly be mine and make me happy,\" he instructed.\n\n\"Yes, Genesis,\" she sighed softly, not seeing any alternative but to admit she was who he said she was. Her choices, as always, were limited because, once again, life had surrounded her with little chance of surviving on her own.\n\n\"Good girl,\" he finally relented and put his hand over hers, needing the physicality of their touch as much as she did. \"You can trust me, little one. I will always make sure that you are safe and have all you need.\" He stopped short of saying love; it was too soon for both of them, even though he knew without a doubt that she was his soulmate, his curse breaker. Even though he would never admit that to his father or brothers. He leaned down to kiss her and found her lips soft and yielding to him. He savoured the taste of her and broke the kiss.\n\n\"You can tell your sister that you are not the same Olivia she remembers. That you have grown and changed through circumstance. Perhaps explaining that to her will help ease your concerns about meeting with her again,\" he suggested gently, the command of his voice softening as he gave her an alternative to accepting completely the past that came with her name. \"You are not the girl with multicoloured hair that worked as a bartender at a run-down dockside bar. Nor are you the girl who lived on a broken-down boat with no friends and nothing, as you say. You are now a woman who is adored and cared for by powerful men. You are mine now, sweet girl. You have nothing to fear from your past.\"\n\nSerena gazed at him, taking in the words. She knew then that he knew it all. All her failures and mistakes brought her to this point. He knew how dreadfully Olivia had messed up her life and still he wanted her, and would care for her and keep her safe. Remy had done this for her. He had wanted her to be looked after the way that he had always looked after her. It was his will that Genesis care for her, and she would accept his last wishes and trust that he knew best, even if she felt that she couldn't fully trust Genesis yet.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "brothers",
        "sisters",
        "curse",
        "family",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-04"
}