{
    "title": "Camming Down the Rabbit Hole Ch. 03",
    "pages": [
        "This story is part of a series, and I highly recommend reading from the beginning. I am not a great writer and have mild dyslexia, so I apologies if my spelling and grammar are not perfect (i'm also from the UK so there are plenty of non American spellings), hopefully it doesn't take away from the story. I spent most of the time writing this leaking into my pants, I hope this gets you off as much as it does me.\n\n-------------------------------------------------------\n\nSlowly stirring from my sleep, I stretched under the covers and a pleasant sensation spread across my torso, remembering what I was wearing when I went to bed I smiled at the caress of the fabric on my skin. It was a strangely comforting feeling, the pressure from the bra, panties and nightie felt like being held gently. Peeling off the duvet I stepped into the room and was greeted by the mess from the night before.\n\nThe lingerie I'd been wearing lay strewn on the floor, it was heavily soiled and would absolutely need to be cleaned, along with all the other things I had cum all over. I picked them up and stuffed them in the wash. Before going to the bathroom and catching my reflection in the mirror. If I couldn't get the neglig\u00e9e clean from last night I would definitely need to try adding some makeup as although this bra and panties were comfortable, they were no way as sexy and with the outside world starting to come out of lockdown it was only a matter of time before I'd find out if there was still a job for me, I was going to have to up my game.\n\nFor the rest of the day I Just relaxed and caught up with the TV shows and news. And sometime late in the afternoon the washing machine clicked as the load finished its drying cycle. I pulled out all the now clean items hoping that I could use them in time for tonight's show. But I was dismayed when the bra came out all crinkled, misshapen and worst of all a dull grey colour, the thong too had suffered a similar fate. I must have put it on the wrong temperature and they were now completely ruined. With no fallback set to put on, the only way I could redeem this is to make myself look better, that makeup would have to do.\n\nThe lipstick was easy enough, even the eyeliner and mascara, but the contouring and eye shading turned out to be way trickier than I ever imagined. I didn't look good at all, and realising I didn't have much time before the next show, I wiped it all off, and just went for some simple lipstick and blusher.\n\nCombined with the not exactly racy bra and panties I had on, the show was difficult to get into, I explained to everyone that I'd destroyed my favourite lingerie set and was inundated with recommendations for things to buy. And less than an hour later I had filled an online order for almost \u00a3100 worth of different items, as I was about to complete the checkout a special offer popped up for a Basque/corset and stocking set, the girl in the advert looked amazing, and it was so cheap. The added bonus that it would take me over the \u00a3100 and I would qualify for free shipping, so I added it in and paid the total. It was only when I got the confirmation email that I realised I should have paid for express delivery, it was going to be another week before they arrived.\n\nI tried to resume the show, but the room had gone a little quiet. I had worked myself up a bit looking at all the sexy clothes, and even if nobody was going to give me any tokens tonight I still needed to sort myself out. I searched for my favourite cam model and a short time later found her streaming. She was a gorgeous as ever, already teasing her wet pussy with a fairly large dildo, I wrapped my hand around my cock and began to idly stroke. As I watched her I became distracted by the thoughts of how she did her makeup? how did the things I bought compare to what she was wearing?\n\nDespite being horny I had somewhat gone off the idea. That girl looked so hot, her big eye lashes, plump lips, styled and dyed hair and the makeup all done to perfection, even the way she moved, how was I going to compete with that? I clicked back to my stream and saw how little I'd earnt that show, depressed I realised there was no point continuing.\n\nI made my apologies and closed down the chat, for the next 3 hours I watched one makeup tutorial on YouTube after another, practicing and cleaning with the limited selection I had, even plucking a few stray eyebrows, nothing to serious, but I needed every little bit of help I could get. Eventually looking back at me in the mirror was a much more feminine version of myself, I didn't look like a guy in drag, and would consider it almost passable, my lips were not quite full enough and my lashes even with mascara not long enough. But I had managed to style my hair that made it look a lot less boyish and it was certainly a step in the right direction.\n\nRealising it was now in the early hours, I decided to call it a night and went to bed. Woken by the sunlight pouring in through the curtains, I stretched once again enjoying the clothes I'dbeen wearing the previous day. However today, I needed to go to the shops to buy some food as I had nothing to eat for breakfast, the cupboards had been running on empty for days. Getting out of bed I stripped off the nightie, bra and panties, if felt slightly strange not to have their tightness on my skin. Pulling some boxers, jeans and a t-shirt out I threw them on and grabbed a mask before heading out.\n\nOn the street it felt very unusual to be out. I hadn't really left the flat in weeks, but the fresh air even through a mask felt nice. There weren't that many people around, I guess most of them were still staying home and I hardly passed anyone on the short walk to the local corner shop. As I approached, a guy coming out saw me and held the door open waiting for me to go in, I could only see his eyes over the mask and they moved up and down looking at me, before they wrinkled in what I could only presume was a smile, I said thankyou before clearing my throat, my voice had come out in the same that I'd been using on cam, so a little higher and softer than usual and he replied 'you're very welcome'.\n\nIt was a bit odd I thought, and as he walked through the door he looked back over his shoulder and raised his eyebrows. I guess he wasn't used to seeing that many people out? I picked up a basket and grabbed some essentials before taking them to the checkout. When I had been to this shop before the cashier had always been a friendly enough man, but today he seemed very chatty, we exchanged pleasantries which is unusual for London as most people keep themselves to themselves. I was a bit distracted by it all and handed over a \u00a320 note turning to leave, as I got to the door I was slightly startled by him shouting \"do you not want your change miss?\", realising I was due a few pounds back I walked back over before he gave me the coins.\n\nLeaving the shop it dawned on me he just called me miss, why had he done that? I was in my regular clothes. Talking of which, when carrying the two heavy bags it became all the more apparent that my nipple play over the last weeks had caused them to be a bit sore on the rough fabric of the t-shirt. I lamented the fact I'd taken the bra off as that probably would have helped, even the rest of my clothes felt a little less comfortable than I remembered.\n\nAs I arrived home I closed the door and placed the shopping down on the floor, removing my mask I noticed a pink stain on the inside of it, and suddenly it dawned on me I had not removed the makeup. Stepping into the bathroom and looking at myself in the mirror was a tomboy. I lifted the mask to my face and then I realised just how feminine I looked, the mascara and simple eye makeup I'd put on the previous night, combined with how my hair was now sitting really did make me look like a girl. I laughed to myself as my eyes scanned down at the very un girly clothes I had on. No wonder that guy holding the door open had given me a funny look as he left and the cashier calling me miss all made sense.\n\nIt was strangely reassuring that I had been able to pass when out, OK the mask had clearly helped as my face was mostly covered, but I dare say had I kept the bra and panties on, and worn some slightly tighter fitting clothes no one would have noticed. And as the t-shirt and jeans were not that comfortable anyway, so if I did dress a bit more femininely the added bonus would be that I could then practice a more female movement when I was out, even the voice, which would only help when it being on cam. Wearing the mask would mean no one would recognise me even if I did meet someone I knew (not that there was much chance). I couldn't have shows like I had last night, I'd never survive if I lost my job.\n\nGetting ready for tonight's show, I took even more care of my makeup and hair, and was actually looking forward to putting the bra and panties back on, they weirdly felt more comfortable, I guess knowing that my viewers would approve. There was some nail polish that I had been resisting putting on as I didn't want to have anything too hard to remove, but since I could go out and pretty much be anonymous I decided it couldn't hurt and if anything would help push my appearance to the next level.\n\nI applied it to my fingernails and toes, it was a matching shade to the crimson lipstick that I also had, so at least they would go together. Waiting for them to dry, I walked over to the big mirror to check myself out. I was very satisfied with my reflection, OK so this neglig\u00e9e wasn't as sexy as the ruined one, but with the extra effort I'd gone to it was a big improvement on last night. I struck a few poses, practiced walking up and down swaying my hips as best I could, even trying to adjust my voice to me soft and sultry. I was working myself up, and even though I wasn't hard, I had developed quite a wet patch on the front of my nickers.\n\nFeeling much more confident, the show goes really well, everybody compliments me on the makeup, despite the slightly less sexy outfit the tokens gradually come in. I take a great deal of pleasure teasing them, there are a few commands with tokens attached, and I gladly carry them out. A little spanking, plenty of cock flashing and bouncing, someone even tries to get me to twerk which my attempt is laughable. Given my previous shows there is no surprise when the requests come in for some light anal play. Like before I use my copious amounts of precum as lube and really relish the feeling of running my fingers around my hole, It is so easy to get carried away, and I find myself really getting into it, my moans are genuine even if I am trying to make them sound more feminine, it pushes me right to the edge, but remembering that I cannot ruin any more clothes before the new ones arrive I step up close to the camera, stroking my cock hard and fast, once again the sound of the pings is acting as a turn on, I can feel my balls tighten and seeing the girl version of myself on screen pushes me over the edge and I shot several big thick ropes of cum into my waiting hand.\n\nNot cumming the day before meant it was quite the load and as I clean up the cum from my hands and sit back on my chair, I feel a great sense of release and pride. Enjoying the post orgasm wave, the compliments pop up on screen. It is a strange sense of reward knowing you are pleasing other people, and even stranger to think some of them will have cum with me. The total for tonight was reasonable, way better than last night but still far short of where I needed to be, but progress is progress and I can always improve.\n\nThe next day I was woken by the doorbell ringing, climbing out of bed and realising that I was wearing the silk nightie and bra I rummaged for something I could quickly throw on. Pulling out an oversized t-shirt that someone had bought me in the wrong size, I put it on and the doorbell rang again more insistently, I wouldn't have time to dig out any trousers or shorts before the postman left so I ran to the door. Fortunately the long t-shirt covered just enough of me, and hid the lacy undergarments I had on. But I could tell by the look on the guys face it was showing more than it should. I blushed as he handed me two packages and cursed myself for all but flashing him.\n\nTaking the parcels inside the first one looked like a small book or DVD, it had no obvious markings on or notes from the sender. The second however, had a little note at the bottom of the delivery slip 'From Biggie, do not open until Friday's show, for all to see'. My curiosity piqued, the package wasn't too big, maybe the size of a small shoebox. It couldn't be shoes, as they wouldn't be big enough for my feet. It wasn't overly heavy, yet one side of the box had a distinct weight to it and I couldn't get any hints from giving it a shake. I put it to the side of my desk and returned my attention to the other package.\n\nOpening it, confirmed that it was a DVD. A fitness DVD to be exact, and inside there was a little note 'I've used this DVD myself, and found it supremely helpful not just from a fitness point of view, but it really boosted my flexibility, I hope it does for you too ;) - from a long standing admirer\". Well that was unusual to say the least, but with the way shows had been going recently, anything that could give me an edge and improve the number of tokens would be a bonus.\n\nWith all day to spend preparing for the show, I decided to give it a go and put the disc into the PlayStation. It opened straight into the menu with a picture of the host looking incredibly shapely in a tight fitting fitness outfit. I realised I didn't really have anything suitable to wear, I definitely couldn't do it wearing this baggy t-shirt with the bra and panties underneath. I stripped off and found some shorts and a regular t-shirt and hit the start button.\n\nThe introduction was long and a bit boring, but as she described the upcoming exercises, she emphasised that following these routines would build excellent core strength, really enhance your womanly curves and increase your all round flexibility. She promised that by the end of the DVD, if you followed all the steps, you would be left with enhanced shape and flexibility to match, dropping into the splits with ease as if to prove the point. And if I was honest, if I looked even half as good as she did, my earnings would go through the roof.\n\nThe first session was very basic, mainly warmup and stretches, but it didn't take long for the roughness of my top to irritate my nipples. I really did need to start taking better care of them, all the nipple play in my shows was making them constantly sore. I reached over to the last of my ex's bras, it was a very plain white padded item, and would be of no use for the show, but totally fine for this. It slipped on easily and with the t-shirt back on, it even gave the almost realistic impression that I had breasts. However it solved my chafing problem and I could return to the DVD.\n\n45 minutes later and I had worked up quite a sweat, it highlighted how inappropriate my clothing was for this task and as the session finished I resolved that I would probably need to buy something that would be more suitable. Walking to the bathroom and seeing my reflection, I had the appearance of a girl who'd just finished a gym session, a slight shine of sweat on my face, hairless arms and smooth legs. The bra really did accentuate a bust that wasn't there. And if I pinched the back of the t-shirt together pulling it in at the waist the silhouette was quite pleasing. Peeling off my clothes I jumped in the shower, the feeling of the warm water running over my hairless body was still a novelty, and it made everything tingle a little. Soaping up, I made sure I was cleaned everywhere even lingering on my hole a little, it really was a pleasant sensation and in no time I felt myself become hard. Catching myself, I realised I needed to save it for the show. I still had tonight's to do before I could open Biggies parcel, what was I going to find in there?\n\nStepping out of the shower and drying off, I styled my hair as best I could, and set to applying makeup. The base came much easier than it had in previous days, I was even able to blend in the eye shadow and blusher better. Although I had some time till the show, I added mascara and the bright red lipstick, pouting to myself in the mirror. I was getting much improved at this, it was taking less time and the results vastly enhanced over the previous attempts.\n\nThat evening I gave the show my all, with my new makeup looking great, and the confidence built from my trip out the day before, I tried really hard to extenuate my features, bending and pushing my ass out at every opportunity, exaggerating my girl voice. I had been horny since the shower and took real pleasure in teasing a stringing out my release, the tokens pinged in. Biggie made an appearance, but only to instruct me to not open the parcel until tomorrow, and try to save myself a bit. I still didn't have as many tokens as I wanted for tonight's show, but it was getting late and I just wanted to get myself off.\n\nLaying on my side with my leg raised, I once again pushed my cock down between my legs, using my precum to lubricate my fingers, I turned my attention to my ass. It really did feel incredible to circle it, and probe lightly. I didn't need to put my fingers inside, the sensations I received were enough to take me close to orgasm. Pinching and squeezing my nipples with my spare hand, my moaning was no longer an exaggeration, I loved this position and could feel that inevitable build of pressure inside my balls. I reached down and pulled my cock down further to make sure I didn't shoot on myself, I needed to look after my remaining clothes. The extra pressure on my dick as I pulled it down pushed me further and a single stroke was all it took for me to shoot stream after stream over the bedsheets. I whimpered and moaned as the pulses fired through my body, slowing coming down from my orgasmic height.\n\nI cleaned up a little and thanked my fans, tonight's total had been ok, still short of what I needed, but I was more than satisfied. Mainly as I had given myself an amazing climax, and actually really enjoyed the whole show. I felt so much more in control of it and pleased with my performance. But I needed to get myself to bed, and spend tomorrow prepping. If it was going to be like the previous time Biggie had commanded a show, I was not only in for a treat in so much as getting myself off, but the financial reward would be great too, and after the week I had, it was essential I boosted my earnings.\n\nI woke up in the morning nervous about what tonight's show would bring. The parcel still sitting on my desk only served to increase the anticipation, what was in it? What was I going to have to do? And more importantly would today be the payday I needed to bring up my tokens for this week? There was a lot riding on the contents of that package, and with my employment prospects not looking great I desperately needed to make it work.\n\nWith time to kill and lots of nervous energy to burn I switched on the PlayStation and started up the fitness DVD. Getting dressed like before with the plain padded bra and panties, with a t-shirt over the top, this session was much like the last, lots of yoga stretches, but the further on it went, there were rounds of squats, lunges, side leg raises and crunches. I was getting hot and sweaty, my hair was getting in my face, so I stripped off the t-shirt and pulled my hair up into a ponytail. Resuming the session I felt much more comfortable, the panties were snug and well-fitting and the tightness of the bra felt very supportive and it felt strangely pleasant with an occasional swish of my hair on my shoulders.\n\nThe session finished and I was out of breath and sweaty. My legs and buttocks burned from the exercises and I felt a satisfying rush of endorphins, at the very least the DVD was going to get me in shape a little and after months of languishing in my apartment during lockdown it would do me the world of good, maybe once the weather improved I could take up running again.",
        "In the afternoon I just tried to relax. I practiced a little more with the makeup, trying out a few different looks, I was really starting to get the hang of it, even if the selection I was working from was a bit limited. As time ticked on I became more and more nervous about the parcel, I distracted myself by doing the best job I could with my hair, perfecting the makeup and dressing in my bra panties and silky nightie, I was all set for my most important show to date.\n\nAs my viewers slowly trickled in, I received so many complements on my makeup, even for the not so special outfit, I guess all my efforts were paying off and I was starting to present myself well. Eventually my number on fan Biggie logged in, my stomach fluttered at the thought of finally finding out what was in the parcel and what was in store.\n\nHe asked me to open the package and show everyone the contents, inside there were 3 very nicely wrapped items and a small box. Opening the wrapping revealed a very lacey, silky soft set of white lingerie. I wasn't exactly sure what you would call it, but the top half was a very skimpy delicate bra with extra fabric below, there was no padding and it was clearly made for someone with very small breasts. The panties were in a matching lace, and quite wide over the hips and back, the strap then went underneath was split in two which I guessed would make it crotchless. The third item contained a pair of incredibly silky stockings with an attached suspender belt, all matching the bra and nickers.\n\nMy heart was pumping fast and hard, holding the items up to my body, the tokens pinged in. Biggie instructed me to go and get changed before I opened the remaining small box. I stood on slightly shaky legs and went to the bathroom, stripping out of my clothes being careful to not mess my hair or makeup.\n\nLooking at myself in the mirror as I stepped into the new lingerie, was a fascinating sight. I fastened the clasps on the bra and adjusted it into position, before stepping into the panties. The feeling of them sliding up my legs was exquisite, they must have been expensive I thought to myself. Settling them over my hips, and trying to tuck in my now semi hard member, I twisted to get a view of my back. The shape of the panties really enhanced my ass and smoothing them down I was really happy with how it looked.\n\nNext came the suspender belt and stockings, they were tricky to step into, and after almost losing my balance I had pulled them all the way up. Making some slight adjustments to the position, and fixing the straps so that they kept the right tension, I now looked down at myself and saw a very sexy pair of legs attached to my body. Looking at myself in the full length mirror if it wasn't for the very flat chest and very unfeminine bulge in my nickers I would make a very respectable girl. Twisting to pose, standing with my legs crossed slightly and a hand on my hip I smiled. I had nailed this, I looked great and I felt confident that Biggie would approve and hopefully everyone else too, it barely even registered that my half hard cock had begun to leak without me even touching it.\n\nI strode back into my bedroom, making extra effort to sway my hips and be as seductive as possible, I was met with rapturous praise, a flurry of tokens and a reasonably large one from Biggie. We chatted for a while about how it felt and looked, I'd almost forgotten about the remaining box until I was prompted.\n\nWith trembling hands I lifted it up and prized open the packet. Inside there was a small velvet bag, it felt heavier than it should for something this size, and it was hard. I pulled on the strings and my mouth dropped as I tipped it into my hand. There in my palm was a small, weighty, polished metal butt plug with a pink jewel on one end.\n\nI stammered, not knowing what to say. Passing it between my hands and examining it from all angles. I knew what it was, and where it should go, but I wasn't sure if I was prepared to go that far yet. It measured around three inches in length and the cone shaped tip maybe an inch across at the widest point before tapering down to a slim bar at the jewelled end.\n\nLooking back at the screen I could see a deluge of messages begging me to put it in. the highlighted comment from Biggie read 'I am positive you will enjoy this present, if put it in, I'll give you 500 tokens, if you play with it while it's in I'll give you 1000 and if you can cum with it, without touching yourself I'll give you 3000.\n\nI was gobsmacked, not only would that put my total way up there, it would mean with everyone else's contributions I'd make way more than my job today. And that didn't include all the other donations from anyone else. If I took this step would it be too far? As of today I had avoided going inside my ass, it felt like an unwritten boundary that I'd placed on myself. But on the other hand if I wanted to grow my cam viewers and generate a proper income from it, I would have to do this.\n\nSteeling myself, I said 'OK'. Pings of tokens came back as a response, with demands from everyone as to what I should do with it. It felt too cold in my hands and I would need to warm it up, someone said I should suck it and I automatically responded with a price. If I was going to do this, they were going to pay. My moderator set up some boundaries and token targets and in no time the first one was met. I brought to plug to my nose and smelt it, there was no odour, I brushed it against my lips and it felt so smooth and cold. I opened my mouth and slowly slid out my tongue to lick it. There was only a slight metallic taste which you would expect, and as I extended my tongue further I opened my mouth and slid it past my lips.\n\nIt felt heavy, weighty and solid, and gradually warmed up as I passed my tongue over it, swishing it around my mouth. On screen I played up to it as much as I could, sneaking out moans and smiling to the camera. Looking at myself it was quite the sight, from that angle you couldn't really make out the tent in my panties and it was only when I dropped a hand to my dick that I realised how much I had leaked. This was really getting me going and now I was wondering what it would feel against my hole.\n\nIt was time, I wanted to feel what it would be like, I was indescribably horny. Spurred on by the chat and the next target, I moved to the bed, bending over and giving everyone a view of my ass. Pulling my panties to one side and using my precum to coat the plug I bring it gingerly to my hole. I gasped as it made contact, despite my warming it still felt a little cold, but the lubrication and smooth metal feel amazing. It was only then that I realise the first target had been met and that I'd jumped the gun a little. Resolving to be more patient I resist the urge to carry on and continue circling my hole.\n\nThe feedback on screen, the constant pings of tokens and the sensations being elicited from my ass were divine. I start to beg the chat to donate more so I can reach my target, I really wanted to know what it would feel like inside if it felt this good on the outside. After only a few minutes a loud ring sounded out, someone had dropped a large number of tokens and it wasn't Biggie. It took me over the target and now I had to live up to my promise.\n\nI re-lubed the plug with my precum, circled my waiting hole a few times before finding the centre and applying some pressure, I could feel my ring give and the smooth metal tip start to enter. I was somewhat surprised that there was no discomfort, and I pushed a little harder. With maybe the first centimetre in, I started to feel more resistance and realised I was holding my breath and tensing up. Forcing myself to relax I released the air in my lungs, and it came out of my mouth as an elongated moan, without easing up on the plug every movement sent it a little deeper and further inside me.\n\nI glanced at the computer, there on screen lay a sexily dressed girl on her knees, with her hand pushing a small butt plug into her ass. It was so abstract I barely recognised it as myself, but the duality of seeing something so hot, and feeling the sensations made me quiver. My cock began to rise and jolt with every millimetre the plug slid it further. I must have made it to the widest part as is slid in with less force from my hand, and eventually pulled itself into my ass. As it did I felt the weight and coolness of it inside me pressing on something that caused my rock hard dick to jerk involuntarily. I moved my hand back to help hold me up, I was feeling lightheaded and the plug was pressing on something inside me that made everything tingle.\n\nI wasn't having an orgasm, but by cock was moving of its own accord. My ass seemed to be clenching and squeezing too, I couldn't help but groan as these sensations washed over me. My world seemed a little dull and quiet, all that existed was the feeling inside me and the desire to sway my hips and explore the movements it generated. I looked down between my legs, and hanging from my dick was a long line of clear pre cum, I reached my hand down to stroke myself before remembering Biggie's request and the reward that was attached to it.\n\nI managed to compose myself enough to turn and face the camera. I was a hot mess, and found it hard to focus through the pleasure that flowed through me with every movement. I had expected it to be painful, and while there was a moment of discomfort, right now, it felt sublime and I had never been so turned on.\n\nWith my ragged breathing somewhat under control I breathlessly asked what the chat would like me to do now, even if all I could think of was grabbing my dripping cock and stroking it hard. Tokens pinged in and I realised I still needed to put on a show, composing myself further I was able to stand up and show them how it fit, and how wet and hard it had made me.\n\nBiggie reiterated that all I had to do was cum without touching my dick and he would pay, a chorus of other viewers chimed the same. I had already a very good total, if they followed through this would be another personal best and would rectify the weeks slow takings.\n\nI thought back to the time I came with my prick stuffed between my legs, although really I was still touching it so that wouldn't count, I shifted nervously and a sudden jolt of pleasure emanated from the plug. 'Fuuuuuck that feels good' I moaned out and I once again circled my hips to try and repeat it. I couldn't quite get it but it lit the fire that I realised needed to be fanned to reach my goal.\n\nLaying back on the bed, on my side with my right leg raised, I reached down and placed my finger and thumb on the plug. Instantly my cock lurched as it moved inside me, 'ooooh yessss' I hissed as I applied more pressure and pushed it in a circular motion. There was no playing up to the camera this time, I was purely chasing the pleasure and this felt amazing.\n\nMaking sure the camera had a good view, I progressed into a rhythm of clockwise movements on the jewel of the plug, my left hand had pulled my bra down a little and I was furiously pulling and teasing my nipples. I could feel it building, that inevitable pressure from my balls, I could even see in the monitor that they had tightened up ready to release, but try as I might I couldn't seem to push myself over the edge. Both my hands working faster, desperate to reach a climax which wouldn't quite come.\n\nI was getting frustrated, I was so close 'I just want to cum' I moaned, I so wanted to grab my throbbing dick and finish myself off, but I had to stick to their request, I'd done so much I couldn't waste the opportunity now. I needed more stimulation and the only thing I could think of was to pull the plug out and push it back in. Grasping the jewel I tugged, groaning as I felt my ring expand, I pulled until I felt it slide out but before thrusting it back in.\n\nOnce again as it found its resting place I felt that spark of pleasure, I opened my mouth to speak but only a lust laden 'OOOooooohhhh' escaped. In no time my shaking hand grabbed the plug and pulled it out, shoving it back in to try and hit that mark. I was rewarded with another jolt and I wasted no time repeating the same movement.\n\nIn and out I pistoned the plug, each time I could feel it, that special tingle inside me taking me closer to my goal. The show no longer mattered, I was purely focussed on the pleasure and it was becoming overwhelming. My eyes had been closed and I peeled them open to take in the scene. I couldn't see the plug going in and out but I sure as hell could feel it, there was so much precum leaking from my rock hard cock that my lingerie was soaked as well as the bed sheets. Glancing at the computer I could see the yellow boxes in the chat as people had given me tokens, yet I hadn't heard anything over the constant stream of my moans with every breath and every thrust of the plug.\n\nI modified my movements and, as I pushed the plug in I circled it round, extending the spike of pleasure from within my ass. I could feel that point of no return approaching, my body getting tight, my ass thrusting back to meet the plug, the jolts of ecstasy running from my hardened nipples to my dick. Everything began to slow down and a white heat exploded deep inside me. With my eyes wide I saw my cock spasm and a huge jet of cum erupted from its head, followed by another and another. A wail of release echoed around my room as each shockwave centring from that sensitive spot inside my ass flowed out.\n\nThe wave of orgasms crashed over me, my hands unable to keep going, but ripples and aftershocks causing me to shudder and shake. For a moment everything went dark except for the pulses of pleasure causing through my body.\n\nOnce my consciousness resumed, I slowly took in what had happened. A massive chime rang out from the computer and I could see Biggie had followed through with his payment, along with so many other people. I just lay there in awe of what had happened, my body was still occasionally twitching, all the orgasms I've ever had didn't come close to that, I had never cum so much or so hard in all my life.\n\nThere was jizz everywhere, all over my stomach and chest, the bed and even a little on my face. Still flushed and very weak I managed to sit up, the plug in my ass suddenly making me squeal. I laughed covering my mouth, it was so unexpected, despite me knowing full well it was still in there. I thanked all my fans, blowing a kiss to the high tippers especially Biggie.\n\nI closed the chat but couldn't move, I was weak and drained, but there was no way I could go to bed like this. So I staggered over to the shower, the plug still occasionally nudging its prize with each step, trembles running up my spine each time. I made it into the shower and pealed off my soaked lingerie, I would have to take extra care of that when I cleaned it I thought as I stepped into the cascading hot water.\n\nSoaping my body and washing all the cum from me, I realised I was going to have to remove the plug, there was no way I could sleep with that in there. I reached round and pulled on it, gasping as it popped out. I smiled to myself, I had done it, with today's total contributing to the week I made a massive step to matching my regular salary and a huge sense of pride and relief came over me. I cleaned the plug and set it to the side while I finished up.\n\nPlacing my heavily soiled new lingerie in a bowl with some soapy water to soak overnight, I dressed myself back in that simple bra, panty and nightie set. I felt incredibly content, I had no need to wear these but they just made me feel so good. My cam girl persona had become so much of me and I didn't really mind. If camming for a living meant I got to orgasm like that every once in a while it was a price worth paying. Although in the back of my mind I was still aware that without my high rollers I would be way off the earnings I needed. I was far from secure, so I just needed to carry on and build my following further. With those thoughts I drifted off to sleep exhausted and thoroughly satisfied."
    ],
    "authorname": "Dani_does_Dallas",
    "tags": [
        "trans",
        "crossdressing",
        "crossdresser",
        "cam girl",
        "lingerie",
        "anal play",
        "hands free",
        "prostate",
        "anal orgams"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/camming-down-the-rabbit-hole-ch-03"
}