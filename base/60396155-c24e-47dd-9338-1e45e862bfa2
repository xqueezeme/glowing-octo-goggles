{
    "title": "What The Cat Dragged In Ch. 21",
    "pages": [
        "Hi Everyone!\n\nJust a few notes: This chapter is told almost exclusively from Victor's perspective. His descriptions of others tend to be a bit crude. Secondly, epigenetics is a very real science. I admit to stretching the limits a bit, but many people are studying how physiological and social experience affect the expression of genes. If you'd like to learn more, message me and I'll tell you how. :)\n\nOn we go! Thank you so much for your reviews, your questions, your passion, your votes and just for reading.\n\npsyche b\n\n21. The \"M\" Word\n\nThe cultured voice on the other end of the line made Creed's stomach turn.\n\n\"Xavier.\" There was more of an edge to the voice now. This was a fucking stupid idea. He knew it. His thumb moved to end the call when the frail's hand gripped the front of his shirt. She wouldn't make it to a hospital and he couldn't let her go without a fight.\n\n\"This is...\" He shifted his free hand to cover her exposed ear. \"This is Sabertooth.\"\n\nThere was silence at the other end of the line. He didn't bother to wait for a response.\n\n\"Can you treat a human in those fancy ass medical facilities of yours?\"\n\n\"Why?\" The tone was guarded. Maybe curious, maybe not. Right at that moment he didn't give a shit.\n\n\"Because I'm about a minute and a half away from your front gate, but you already knew that. I got a frail that ain't gonna make it to a hospital. You gonna help her or you gonna let her-\" He couldn't bring himself to say it. \"Are you gonna help her or not?\"\n\n\"Help her, or help you?\"\n\nThe car stopped and Creed looked out through the windshield and saw the ornate iron gates still firmly closed. At the end of the long well-lit drive there was some kind of activity though. Probably marshaling the troops.\n\n\"You know me, right?\" The frail made a pained little sound. He let out a soft, rumbling purr. \"You know the shit I do to people.\"\n\n\"You've never tried to hide it.\"\n\n\"And I been doing it a long fucking time. I know how to get what I need before I break 'em and afterward I ain't inclined to fix 'em. Now am I?\" Her fingers moved, gripping the fabric of his shirt and releasing it again. He stroked the back of her hand carefully. It was the only place he could see that wasn't bruised.\n\n\"There's a first time for everything.\"\n\n\"So I pick now to call ahead, to ask for help and to try and save a frail? Hell of a day I'm having. Better write it on your calendar.\"\n\n\"I'll send a medical team to collect her-\" \n\n\"I go in with her.\"\n\n\"That's not possible.\"\n\n\"Bullshit. You been fucking around in my head since we rolled up on the gate and I been letting you. You know I don't give a shit about you or your little freak show, or anything else you got goin' on in there. 'Sides, it ain't like I never been invited to dinner before.\"\n\nSilence on the line. At least the frail's breathing wasn't getting any worse. He tucked his coat around her. \"There will be conditions.\"\n\n\"I got conditions too.\"\n\n\"You'll walk in with the girl. Your driver stays outside.\"\n\nA narrow gate in the main one opened. Creed ended the call and got out carefully, making sure that the frail's head was cradled against his shoulder. Her hand gripped his shirt tighter again. \"Almost there, frail.\" He worked to keep his tone reassuring, even though he could see the procession coming down the long driveway. The fucking runt was in the lead, his claws out and ready. Cyclops was a close second. The hairy blue doctor was next, though at the moment he looked more ready to fight than treat anyone. He wondered absently where the weather witch was. Bitch was always getting in his way, he didn't see why now should be any different.\n\n\"You got a lot of balls coming here.\" The runt growled.\n\n\"Always did, but you remember all that shit, don't you Jimmy. Shouldn't you be in a cage kicking some redneck's ass for a few bucks?\"\n\n\"Better than beating little girls.\" There was a sneer on the runt's face. The stink of hatred and unease surrounded him in viscous waves. He ignored it.\n\nFucking prick was staring at his frail. Anger hit him like a punch to the gut and he held her tighter. The frail whimpered sharply. He looked down at her pained expression and forced himself to ease his grip. He thought he saw confusion flickering over his brother's features. The scent of the others registered the same confused undertones as they fanned out around him, closing in.\n\nCreed took a step forward, his fangs bared. A deadly growl vibrated the air around him. \"You stupid son of a bitch. You think I'd bring her here if-\"\n\n\"You've never done shit for anybody but yourself in your whole miserable life. Put her down and step back.\"\n\nCreed could see the tension coiled in his brother's muscles. \"What's the matter, Jimmy? So anxious to cut me that you're afraid of shredding her too?\"\n\n\"Goddamn it Victor-\"\n\n\"You wanna try and kill me, you'll have your chance. But I ain't puttin' her on the ground.\" He resisted the urge to hold her tighter. She moaned softly. The blue ape gestured and two assistants appeared with a stretcher. He didn't recognize either of them, but they stopped a few feet away. He walked forward slowly, his eyes darting from the runt to the others that surrounded him. He set the frail down carefully. She whimpered. Her eyelids started to flutter. Her head moved from side to side. His eyes were fixed on her face. If it wasn't for her scent, he probably wouldn't have recognized her. He moved some of the bloody hair from her forehead.\n\nThe ape moved closer and the frail got more agitated the closer he got. She opened her eyes slowly and scanned Creed's face, the stars, the trees and finally the blue furry face that was leaning in to her. \n\nA long moment passed before she started to scream and cough. He eyes opened as wide as the swelling allowed. \"Victor, no! Please! Don't let them take me!\" She entangled her fingers in his shirt and held on like it was the last thing she would ever do. \n\nThe two assistants -- one female, one male -- moved in and started pulling at her hands. He guessed whatever shit they were spouting was meant to be soothing, but it only upset her more.\n\nHe looked up at them. The murderous glare stopped them in their tracks. His voice came out in a deadly growl. \"Back the fuck off!\"\n\nHe looked down at the frail, his face close to hers, one hand supporting the back of her neck. \"Listen to me frail, you're safe. I ain't gonna leave you.\" He glanced at the ape and then back at the terrified girl. \"These are a bunch of self-righteous assholes, but they won't hurt you. You know I wouldn't bring you here otherwise.\"\n\nShe gave a terrified whimper, but her grip on his shirt started to relax. He brushed at her tears, then insinuated his thumb into her hand, breaking her weakened grip. He eased her head down and tucked her hand back inside his coat. He felt her starting to relax. He tucked the coat around her. Her body started to convulse.\n\n\"She's seizing!\" The ape shouted. \"Get her inside, get her vitals and make sure her airway is clear.\" He turned to Creed. \"Do you know her name?\" His voice was cold.\n\nHe growled. \"Course I know her fucking name. It's Kelly Demmer.\" \n\nThe ape started walking away and he started to follow, but Jimmy stepped in front of him.\n\n\"Where the fuck do you think you're goin'?\" The smaller feral growled.\n\n\"Get outta my way, Jimmy, or I swear I'll gut you.\" His claws lengthened, his muscles tensed, looking for blood in hopes of easing the pain that tore at him. He knew it wouldn't work, but it might be a distraction.\n\nThe runt's nose twitched. His eyes narrowed, but he didn't advance. \n\n\"Lose your nerve?\" Creed managed a sneer.\n\nThe two men started to circle each other.\n\n\"That's male blood.\"\n\nIt took Creed a minute to realize what Jimmy was talking about. Blood slicked the front of his shirt and pants. A good portion of it was splattered over his coat too, but that had gone with the frail. \"So? I had to rip through seven guys to get to her. In case you don't remember, that tends to leave a mess. Make your point, take your shot or get the fuck out of my way.\"\n\nThe runt advanced. \"You stupid son of bitch-\"\n\n\"Logan.\" Xavier's voice was as calm as ever. \n\nThe smaller feral growled in frustration, but stayed where he was. His eyes still locked on Creed's. \"You're not serious about letting him in here, are you?\"\n\n\"With conditions.\" His eyes were on Creed's face.\n\n\"I stay with her all the time, day, night, whatever. You stay the fuck out of her head unless she gives you permission. Anybody shows up looking for her, you never heard of her. As soon as she's able we both leave and go to a real hospital. You got anything to add?\" Creed's fingers flexed, his eyes were fixed on the door the frail was taken into.\n\n\"Not good enough.\" The runt's blades were still out, itching for a fight.\n\n\"Logan-\"\n\n\"NO! You don't know what he wants with that girl! You can't just hand her over and give him the run of the place too.\"\n\nCreed didn't hear most of the argument that followed. Jimmy started listing all the shit Creed had done to Xavier's X-Men. The old bastard started rambling about some kind of break and most of the little freaks being gone. The others were mostly on Jimmy's side, but Creed knew they'd follow wherever the old man sent them. Most of the time he figured it was fucking stupid. This time it was to his advantage, so he went with it.\n\n*~*~*~*~*~*\n\nIt was all going by too fast. One minute she was outside, the next she was inside in a cold, sterile room. People were talking to her. One, the blue doctor, was obviously a mutant. Even through all the pain and confusion she knew that much. She couldn't tell about the others, except they seemed intent on telling her she was 'safe'. \n\n\"Kelly, I'm Dr. Henry McCoy.\"\n\n\"Victor.\" The word came out in a slurred murmur.\n\n\"You're safe from him.\" One of the assistants said.\n\n\"He saved me. Twice.\" The effort of speaking drained what little energy she had, but she had to be sure they knew before it was impossible for her to tell them.\n\n\"Saved you?\" McCoy asked. \n\nThey were hooking her up to monitors. Alarms started to sound and someone put an oxygen mask on her face. She pushed it aside. \"Get him, please.\"\n\nMcCoy put the mask back in place. \"You need that. I'll let him see you when you're stable.\"\n\nShe moved the mask again. \"Now.\" She started to cough into the mask. She moved it again. \"Can't die alone.\"\n\nHe took her hand. \"I'm not going to let you die.\" \n\nEven in her weakened state, Kelly could read the sincerity in his eyes. \n\n*~*~*~*~*~*\n\nCreed had been stuck in some fucking conference room for the past four hours and thirty-seven minutes. It was all slick surfaces and comfortable chairs and he knew exactly how long he'd been there because he'd been staring at the clock the whole goddamn time. With every minute that ticked by, he was getting more and more certain that she wasn't going to make it. He didn't know how she'd even stayed conscious for as long as she did to start with. Every time he thought about walking out of there without her, it felt like someone was tightening a band around his chest, restricting air and blood and ratcheting up the guilty pain that had settled there.\n\nJimmy had been sitting there with him the whole time, though he was being an obedient boy and not starting any shit. After the waiting had gone on for five hours, he could feel the runt's eyes on him, staring.\n\nHe didn't turn his head. \"What?\"\n\n\"That a fashion statement?\"\n\nHe looked at Jimmy suspiciously. \"The fuck are you talking about?\"\n\nJimmy pointed at the side of his head. \"You get interrupted while you were shaving?\"\n\nCreed's hand went to the smooth, new flesh on the side of his head. \"'Scuse me. I didn't realize there'd be a photo shoot later.\"\n\nThe runt growled. \"I'm trying to ask you what happened you fucking asshole.\"\n\n\"You care all of a sudden? I'm touched.\"\n\nSmoldering anger ratcheted up again. \"I don't give a shit, but Chuck let you in here. Gotta be a reason.\"\n\nCreed studied his younger brother for a minute. \"Since you got your memory back, you remember Verdun?\"\n\nHe gave a derisive little snort. \"Wish I didn't.\"\n\nThe corner of Creed's mouth twitched into a little smile. \"Ain't my favorite thing to think about either. Anyway, sniper got you-\"\n\n\"Went in through my left eye,\" Jimmy said, his eyes were far away. \"I don't remember anything for the week after that.\"\n\nCreed nodded. \"And when you finally got your ass moving again, the whole back of your head was bald. The flesh and bone and brain and all that shit regenerated, that dumbass hair-do of yours had to grow back on its own.\"\n\n\"She shoot you?\"\n\nCreed looked at Jimmy sharply, but he saw the little smirk on his brother's face, he relaxed his grip on the arms of the chair. \"She's scrappy, but she's got shitty aim.\" He looked away. \"She's a protection job. The people after her shot me to get to her.\"\n\n\"Protection.\" Jimmy's eyes narrowed.\n\n\"Yeah. Some of us gotta earn a living.\"\n\n\"You don't do protection.\"\n\n\"And you would know because of all the quality time we've spent together in the last few decades.\" Creed looked away.\n\n\"Fair enough. From what I know, you've done protection twice. The first time was a short job and you were just itching to get your claws into something afterward. The second one pissed you off and you killed him yourself.\"\n\nCreed growled. \"Fat bastard talked non-stop.\" \n\n\"Never met a quiet girl.\"\n\nHe studied Jimmy's face. Creed could tell that his brother didn't believe a word of it, and he didn't give a shit. It was none of Jimmy's business. \"You never met her.\"\n\nIt looked like the smaller mutant was about say something, but the door opened. Both turned to see the blue doctor coming into the room. This time he was wearing scrubs and those half moon glasses that always gave the impression he was looking down at the person he was talking to. \n\nCreed got to his feet. \"Well?\"\n\n\"Well, she came through the surgery.\"\n\n\"What surgery?\" He was pissed off and worried and if someone had asked he wouldn't have been able to tell which one was stronger.\n\nThe ape took his glasses off. The blue bastard felt sorry for him, he could see it in his eyes. \"Sit down. Please.\"\n\nHe balled his fists. The pain of his claws digging into his palms would keep him focused. \"Fuck that. Just tell me.\"\n\n\"The beating she sustained ruptured her spleen. Her ribs were so severely broken a shard of the bone punctured her lung. I removed the spleen and repaired the lung. There weren't any other internal injuries, but she's severely weakened. There were several times I wasn't certain she was going to make it through the surgery.\"\n\n\"She's a fighter.\" Creed had to hear it. He had to remind himself.\n\nHe tried to force a smile. \"That she is. She has a closed head injury. Right now I'm managing the brain swelling with drugs and a medically induced coma. Hopefully, that will give her body time to rest and begin to recover too.\"\n\nCreed nodded. \"I'll make arrangements to get her transferred out of here.\" He took his phone off his belt.\n\n\"You can't.\" The ape spoke quickly.\n\nCreed's eyes narrowed. A growl rose in his chest. \"Why the fuck not? I don't wanna be here any more than you want me here. I sure as hell don't want her here-\"\n\n\"You can't because she won't survive the transfer.\" The doctor said quickly.\n\nThe words hit him harder than the bullet had. \"What?\" \n\n\"Her condition is extremely critical. Once she's strong enough, I'll help you arrange a transfer. Until then, she'll have round the clock care here.\"\n\n\"I'm not leaving.\"\n\n\"No one's asking you to. I'll take you to her.\" He started out the door. Creed stayed put. It had to be a trick, it was too easy.\n\n\"What the fuck are you trying to pull?\" \n\n\"What do you mean?\"\n\n\"You come in here talking to me like I'm a human being. You don't start interrogating me about what I did to put her in that condition to start with, or who she is to me.\"\n\nThe ape walked up to him, his thick muscles bunched with tension. \"You listen to me and you listen good. I despise you. The things you've done to innocent people make me sick just thinking about them. If she'd been unconscious the entire time I was with her I wouldn't let you within a hundred feet of her, no matter what Charles said.\" He took a step back. \"As it is, she was partially conscious until the surgery. All she did was ask for you. She said you saved her twice. Most of what she said was incoherent, but in her mental and physical state she didn't have the capacity to cover for you.\"\n\nThe image of the frail trying to cover for him twitched one corner of his mouth into a fleeting smile. \"She's a shitty liar anyway.\"\n\n\"I don't pretend to understand. If having you close helps her to recover then I'm willing to give it the chance. You won't be alone with her, and there will be someone in to check on her every fifteen minutes. Any other questions?\"\n\n\"Not at the moment.\"\n\n\"Follow me.\"\n\nCreed followed the doctor down a long hallway. They were already in the bowels of the mansion, but to Creed it felt like they were going further underground. The area they moved through looked less like a medical facility and more like a prison. Finally, they stopped in front of one small, gray room. He could hear the soft beeping of monitors coming from the open door. Inside, the frail lay on a hospital bed. There was a tube in her throat. IV lines tethered her left arm. A narrow tube snaked its way into her left nostril, presumably to deliver liquid nutrition. A nearly empty catheter collection bag was clipped to the underside of the bed close to her hip. Even under the sharp scent of medicine and disinfectant, he still knew it was his frail. She looked even smaller and more fragile than she usually did. \n\nHe took a step closer. The large wound on her head had been stitched and someone had taken time to wash the blood away from her face and her hair. The deep purple bruises stood out even more on her ivory skin. \n\nAnger threatened to blind him, but he forced himself to hold it at bay. He could go tearing out of there intent on finding and gutting Cavallo and Stan, but that would mean she was left alone with Xavier and his X freaks. He'd never get her back and he was going to be damned if he would live without her. Creed looked around the cell-like room. \n\nThe ape was walking out. Creed grasped his arm tightly. \"You ain't leavin' her here to die.\"\n\n\"She doesn't deserve that.\" He looked down at Creed's hand. Creed let go.\n\nCreed sat down in one of the orange plastic chairs in the room and got familiar with the sounds the monitors made.\n\n*~*~*~*~*~*\n\nFor two days, Creed sat in that chair and watched. The frail's chest rose and fell. The monitors traced out each heartbeat, and recorded each blood pressure reading. IV fluids dripped into her veins and the bag that collected her urine slowly filled as her body excreted them again. Every so often tears would trickle down the sides of her face. The first time, he'd asked if she was in pain, but nobody would give him a straight answer. Her scent was a stagnant mix of blood, injury, medicine and diffuse fear. Any two of those things would have effectively masked the scent of pain. After that first time, he just wiped her tears away. \n\nHis meals appeared at regular intervals. When Jimmy brought them, he brought a couple of beers along too. The meat was always overcooked and the seasoning was all wrong. He picked at it, and went back to staring at the frail.\n\nEvery fifteen minutes, someone came in to check on her. Every two hours, they shifted her position. Nobody said a goddamn word to him but the sure as hell managed to give him dirty looks every time they showed up.\n\nSnippets of conversations drifted in to him from time to time. \"He must have done it to her, no matter what she said.\" \"He just sits there, staring. Creeps me out every time I go in there.\" \"She's here now, he doesn't need to stay.\" Creed rolled all his anger at them into planning what he was going to do the Stan, Cavallo, and anyone else who got in his way.",
        "He'd called Conlon and sent him on to a motel to wait. He didn't bother with an explanation. Conlon had seen the state the frail was in. He didn't need to know any more than that. He knew he should call Joe, but he didn't know what to say.\n\nSometimes, the one-eyed asshole sat with him. Staring at him from behind those fucking sunglasses. Creed kept his eyes on the frail. Those times, under that clearly disgusted glare, thoughts of revenge did nothing for him. Instead he retreated into his memories of the way she smiled at him. The sweet vanilla sugar smell of her when she relaxed. The way her fingers moved through the hair on his chest when she was coming down from an orgasm. An orgasm he had given her. How soft her skin was. The way she fit against him when they slept. The longer he stared at her still form, the more sure he became that she'd never look at him like that again.\n\nJimmy's ass occupied the other orange chair most of the time. Usually, he was nothing more than a silent, staring presence. Finally, Creed couldn't take the silence any longer. He turned to the smaller feral and stared back. \"You got something to say?\"\n\n\"You stink.\"\n\n\"Well thank you very much for your input. Asshole.\" Creed turned his eyes back to the frail.\n\n\"You asked. When was the last time you took a shower?\"\n\n\"Don't know. Probably the evening before all this shit happened.\" The blood on his clothes had turned from smelling old to smelling rotten. \n\nThe runt got up. \"C'mon.\"\n\nCreed glared. \"I'm not leaving her.\"\n\n\"Next time they come in, McCoy'll be here to change the dressing and check her incision. That'll take some time. Instead of standing in the hall staring at me you can get cleaned up. Might consider getting some rest too.\"\n\n\"I've been napping.\" Creed looked away and gave a little shrug. \"Might shower though.\"\n\nJimmy nodded. \n\nWhen the ape and one of the nurses came in, the runt led him a little to a room a few doors down. This room was a cell. A narrow cot was against one wall. A toilet, sink and shower were at the end of the small room.\n\nCreed looked around the tiny, dank space and growled. \"You gonna lock me in too?\"\n\n\"Nope, but I'll wait.\" Jimmy lounged back on the cot, one foot on the floor, the knee raised in front of him.\n\nCreed rolled his eyes and started to strip out of his bloody clothes. \"Need to be reminded what a real man looks like, Runt?\"\n\n\"I sure as hell ain't gonna leave you alone. Towels and soap are in there.\" He nodded toward the end of the bed. \"Sweats should fit. They're clean at least.\"\n\nCreed turned on the water. \"You gonna tell me to wash behind my balls too?\"\n\n\"That what she does for you?\"\n\nCreed dug his claws into the palms of his hands, feeling the flesh separate and then knit together again. He ducked under the low shower bar. The spray hit him in the chest. He closed the curtain. He pissed with more pressure than the shower had, but at least the water was hot. He turned to face Jimmy. \"Told you, Runt, she's a job and that's all I'm gonna say. So, why aren't you trying to kill me?\"\n\nJimmy shrugged. \"You got me curious. I could ask you the same question.\"\n\nCreed shook his head. He worked soap into his uneven hair. \"This might come as a shock to you Jimmy, but there are whole weeks that go by when I don't think of you or Stryker or any of that shit.\" He ducked under the water and let it carry away the suds and sweat and tension. \n\n\"Especially recently.\" \n\nCreed shrugged. \"You said that, I didn't. One thing I am gonna say though, all the shit that's between us doesn't involve anybody else. You get bored or you get your curiosity satisfied you leave her out of it.\" \n\nJimmy growled. \"I'm not the same kind of asshole you are.\"\n\nCreed rolled his eyes. \"I forgot. You're a special kind of asshole.\" He turned off the water and started drying off with the rough towel. He stepped out with it wrapped around his waist. He pulled on the gray sweat pants without looking at them. The shirt had the Xavier's School logo and name emblazoned across the chest. \"Oh fuck no.\"\n\nJimmy shrugged. \"Wear it or don't, I don't care.\" \n\nCreed pulled the shirt over his head and walked back to the frail's room.\n\n*~*~*~*~*~*\n\nAnother day of short naps, bad food and silence ticked by. If he hadn't grown so damn accustomed to the sounds the monitors made he wouldn't have noticed any change at all. Her heart rate was not as steady as it had been. The tracings on the screen were more erratic too. He watched those glowing lines. He watched the frail's chest rise and fall. Every minute that passed made him more certain that he was losing her. Every breath he took made his chest hurt more.\n\nAll of it pissed him off, and there wasn't a goddamn thing he could do about any of it. He should have left her in the woods. Should have fucked her and tore her apart right there in the snow. He would never have given her a second thought. She would have just been another victim. \n\nMaybe he'd just leave. Go find Cavallo and Stan, make them both suffer and then keep right on going. She didn't need him. She sure as hell wouldn't want him after he fucked up so bad. She deserved better. Deserved normal.\n\nA little whimper from the bed drew his attention. At first he thought it was his imagination, but then she reached toward the tube in her throat. He got up quickly and stopped her hand. She held on to him awkwardly.\n\nHe looked at Jimmy. \"Get someone. Now!\" \n\nHer eyes were open. He could tell she was still drugged, but she was fighting it. He put the side rail on the bed down. Terror suffused the bloody scent around her. \"It's alright frail.\"\n\nShe whimpered and reached for the tube again. He stopped her.\n\n\"You need that for now.\" He looked at her eyes more closely. Her pupils were unevenly dilated. \"Told you I'd bring you someplace where they'd help you.\" He shifted his hand in hers. She held on tightly.\n\nThe ape rushed in. She shifted closer to Creed.\n\n\"When did she wake up?\"\n\n\"Minute or two ago.\" Creed kept his eyes on hers. She was calming and he could see that she was shaking the effects of the drug. \n\nThe ape looked in her eyes and then checked the IV pump. He made some kind of adjustment and her consciousness started to fade, but he could see her fighting it. \"Get some sleep frail. You get cranky when you don't sleep and that pisses me off.\" His voice was soft.\n\nThe fight went out of her and she went back under again. Creed set her hands down carefully, then glared at the ape.\n\nThe blue doctor opened his mouth, but Creed shook his head sharply.\n\n\"Not in here.\" Creed adjusted the side rail again. He walked out into the hall and waited for the others to follow. He kept his eyes on the frail. \"What the fuck was that?\"\n\n\"I don't know. From what I can see, all the equipment is functioning as it should. I've never seen anyone build up a tolerance for that drug so quickly.\" The ape seemed genuinely shaken.\n\nCreed looked at the still form in the bed and then back at the doctor. \"She is human, isn't she?\"\n\n\"I ran a basic DNA screen to make sure she was as part of her pre-surgery blood work. Why?\"\n\nCreed looked from Jimmy to the ape and back again. \"No reason.\" He started back into the frail's room. Jimmy stopped him.\n\n\"Bullshit. You wouldn't have brought it up if you didn't have a reason.\"\n\nHe growled. \"Get the fuck out of my way, Jimmy.\" \n\n\"She's severely weakened. If I have to keep raising the dose to keep her under, that could further compromise her condition.\" The ape said.\n\nCreed looked at him. He knew the statement was true. He stared at the frail, trying to decide how much he was willing to risk sharing. \"She took Hypnocyn once. Took her twice as long to fall asleep and she was awake a few hours before I figured she should be.\" Creed heard a pen scratching.\n\n\"What was the dose?\" The doctor asked.\n\n\"Don't know.\"\n\n\"Was it a tablet or a capsule?\"\n\n\"Light blue tablet.\"\n\n\"Is that all?\"\n\n\"For drugs, yeah.\"\n\n\"What else?\"\n\nHe turned. The ape's eyes were focused on the notes he was making. \"She said she hasn't scarred since she was a kid. Had her appendix out or some shit like that, but nothing after.\"\n\n\"I'm going to run a more sophisticated genetic profile. I'll let you know what I come up with.\"\n\nCreed nodded and walked back into the frail's room. Jimmy sat down in his usual spot and stared. \"I saw how you touched her. She's not a job.\" \n\nHe glanced over at Jimmy. \"Not every job's the same.\"\n\n*~*~*~*~*~*\n\nThe next day, Jimmy showed up with a bottle of whiskey and two glasses. The ape walked in a few minutes later.\n\n\"C'mon,\" Jimmy said.\n\n\"No. I don't wanna leave her alone.\"\n\n\"I'll be with her.\" McCoy said. \"I'll need an hour or so to do some tests. If you aren't back, I'll make sure that someone sits with her.\" Either the scents of medicine and antiseptic were dulling his senses, or some of the anger was leeching out of the ape's scent.\n\nCreed nodded and got up. He didn't necessarily care to spend time with Jimmy. He was pretty sure he knew what his brother was going to ask. He went for the whiskey and the promise of fresh air.\n\n\"So, your boss isn't afraid I'm gonna piss on the carpets or blow the place up?\"\n\nJimmy glared at him. \"You ever stop being a pain in the ass?\" \n\n\"Not usually.\"\n\nThey moved upward through the mansion. Jimmy stopped in a rear hallway and pulled on a jacket. Creed headed out the door onto a snowy stone patio. As soon as he was outside, he took a deep breath, clearing the stink of illness from his nose. Jimmy stood next to him and handed him a glass full of dark amber liquid. Creed drained half of it. It felt like swallowing fire.\n\n\"Goddamn, what is that, lighter fluid?\"\n\nJimmy glared. \"You've had worse.\"\n\n\"I know that, but it ain't usually my choice. You picked this shit out.\"\n\n\"Kickin' redneck ass don't pay like it used to. If you don't want it, give it back.\"\n\n\"Fuck that.\" He drained the rest of the glass and focused on the burn. \n\n\"Thought so.\" He offered the bottle and Creed filled his glass again. \n\n\"I know you wanna ask, and you know I ain't gonna tell you so you might as well not bother.\"\n\n\"I've never seen a woman reach out to you and I've sure as hell never seen you reach back without your claws. I could see you sitting there if she was a job, but not touching her like that.\" Jimmy was looking out across the wide lawn.\n\nFor some reason, hearing that description of such an intimate and private moment pissed Creed off. He turned toward Jimmy and threw the glass on the ground. The growl that erupted from his chest was laced with danger. \"What the fuck do you want from me?\" He advanced on the smaller feral, his claws extended. He heard the runt pop his claws too. \"You want ammo? You want something to tell the old man so that the next time we're on the opposite sides of something he has a good fucking threat? Maybe you think you can get some of your own back. Maybe you think you can take my mate from me like you think I took yours from you.\"\n\nJimmy lunged and Creed countered, knocking the other mutant onto his back. Jimmy slashed the back of Creed's calf, cutting down to the bone. He roared and planted his boot in the soft part of Jimmy's side. If it hadn't been for the adamantium, Jimmy's ribs would have been crushed. The runt rolled away and got to his feet.\n\n\"You did take something from me!\" The smaller feral roared.\n\n\"If you think that was my decision you're dumber than you look.\"\n\n\"You didn't stop it.\"\n\n\"Yeah, cause I was right in the loop during the planning process.\"\n\nJimmy's eyes narrowed. \"What do you mean?\"\n\n\"I mean Kayla was already with you by the time I heard about her. What the fuck was I supposed to do? Call you up? 'Hey Jimmy, I know you hate my fucking guts but guess what? That girl you've been living with and making plans with is working for Stryker. Just thought you'd like to know.' You'd've ignored it on principle and don't tell me you wouldn't.\"\n\nJimmy stared at him for a long moment, then retracted his claws. \"Suppose that's all you think you did.\"\n\nCreed shrugged. \"Kept your skinny ass alive. If you're pissed about that, that's your problem. Where the fuck is that bottle?\" He found it laying in a small heap of snow. He took the cap off and took several long swallows. \n\n\"Gimme some of that.\" Jimmy took it from him.\n\nCreed looked at the back of his leg. It was mostly healed already. Probably draw some looks when they got back inside.\n\n\"Mate?\" Jimmy cocked one eyebrow. Creed fucking hated it when the runt did that.\n\n\"Maybe you're too fucking domesticated to remember what it means, but I'm sure as hell not.\" Creed used his claws to slice through the torn and blood-soaked fabric around his calf. For a few minutes, there was silence.\n\n\"You love her?\" Jimmy asked.\n\n\"What? No!\" Creed walked to the other end of the patio. \"I don't know. What the fuck has that got to do with anything?\" \n\nJimmy suppressed a little laugh. \"Whatever you say.\" He took a long swallow and handed the bottle back to Creed. \"Who's after her?\"\n\nCreed looked at the smaller feral through narrowed eyes. \"Why're you askin'?\"\n\n\"Well shit, I don't know. You show up here out of the blue asking for help for a human girl that you didn't hurt in the first place. You tell me you had half your head blown off trying to keep her away from somebody. All of that makes me just a little curious.\"\n\nCreed took a generous swallow and handed the bottle back. \"This you who wants to know, or your boss?\"\n\nJimmy shrugged. \"Chuck has his own sources. He probably had his own version of the story the morning after you got here.\"\n\nCreed took a deep breath and started the story from the beginning. Jimmy stood there and listened. Even after Creed finished, Jimmy stood there silent for awhile.\n\n\"You're going after them, aren't you.\" Jimmy asked.\n\n\"Wouldn't you? C'mon, they're probably done with her by now.\" He headed back inside and tossed the bloody fabric into a small wastebasket by the door. \n\nJimmy followed him and the two ferals walked through the wood-paneled main entrance hall. Creed found himself wondering if the frail would like it. Her tastes tended to run toward the simple, though. The blue doctor was wearing a bright white lab coat when he approached them there.\n\n\"She's been moved back into the main medical unit,\" he said.\n\nSomething in the way the ape said it made Creed suspicious. \"Why?\"\n\n\"We need to talk about that.\" Creed could smell the tension around the doctor.\n\nThe three walked in silence back to the same conference room they'd taken him into when they arrived. Jimmy sat down in a corner. \n\n\"I told you Kelly has some brain swelling.\"\n\n\"Yeah.\" Creed knew it was going to be bad. He fought the urge to sit.\n\n\"She's too weak for surgery, so I've been trying to manage it with medication. Nothing I've tried thus far is working. The swelling is starting to compromise her vital functions.\"\n\n\"How long.\" Creed's voice was flat.\n\n\"It's difficult to tell. I've switched her to a different drug at a higher dosage; it's possible that it'll help. She's already fought harder than I would have thought in the beginning.\"\n\nThe corner of Creed's mouth twitched in a proud little smile. \"She don't look like much, but she's scrappier than a one-eyed alley cat.\"\n\nThe ape smiled a little. \"That she is. I finished the more detailed genetic profile as well.\"\n\n\"And?\"\n\n\"She has dormant mutant genes.\"\n\nCreed gave a derisive snort. \"Like a quarter of the human population.\"\n\n\"True, but one cluster of those genes isn't quite so dormant.\" He turned on a lighted panel. The images that resembled clouds of stars were laid out. \n\n\"What the fuck does that mean?\" Creed sat down.\n\n\"Genes, both human and mutant, are only potentials. Experience is needed to activate or deactivate them. Logan, your healing factor became active when you were in your early adolescence, correct?\"\n\n\"Yeah, so?\" \n\nCreed could smell confusion and incredulity.\n\nThe doctor looked at Victor. \"And yours?\"\n\n\"I don't know, six or seven. What's that got to do with anything?\"\n\n\"Is it safe to say that your early life was significantly different than Logan's?\"\n\nCreed could feel the rage surging through every cell in his body. His muscles tensed. \"That's none of your fucking business!\"\n\n\"I'm not asking to pry.\"\n\nCreed growled. \"Then what difference does it make?\" \n\n\"Only that if you endured more physical difficulties the gene cluster that controls your healing factor would have been bombarded with need signals. It would have become active sooner to keep you alive. I think that's what happened to the gene cluster Kelly has. I can see that she's suffered prolonged malnutrition, though it's abated fairly recently. What else can you tell me about her background?\"\n\n\"She's been through hell.\" It was as much as Creed was willing to say. When she woke up, if she wanted to, the frail could tell him herself.\n\nThe ape nodded and pointed to the three images. \"These are graphical representations of the gene cluster responsible for mutant healing factor. The bright spots are methyl molecules. They either attach to gene signaling it to turn on directly, or they act on the histones that wrap the molecule so that certain parts of the sequence become available or hidden depending upon the action. The image on the left is an ordinary human with a dormant mutant healing factor.\" It was mostly dark with a couple of bright spots scattered haphazardly across the field. \"On the right is Logan's. You can see the difference.\" Jimmy's looked like a nebulous image of a bright galaxy. \n\n\"And the frail?\"\n\n\"She falls right in between the two.\" He pointed to the third image. \"She heals at a normal rate, but I think the partial activity of those genes prevents her skin from scarring. I think it's also why she's so resistant to medications as well.\"\n\nCreed stared at the images. \"Well that's just terrific. I'm sure you'll win first prize at the science fair. What good is it going to do her?\"\n\nThe ape took a deep breath. \"I might have a way to fully activate the genes.\"\n\n\"Might?\"\n\n\"It's experimental.\"\n\nCreed shook his head. A growl erupted from his chest. \"Hasn't she been through enough? Now you want to turn her into some kind of fucking lab rat?\"\n\n\"Epigenetic therapies are in use for certain cancers-\"\n\n\"She hasn't got cancer!\"\n\n\"I've done everything I can do for her. Her body is either resisting it or she's simply too weak to bounce back. I can't promise this treatment will work, but it's the only thing I can offer.\"\n\nCreed started to pace. \"What if it does work? Will she be a mutant?\"\n\n\"I'll target the treatment to her healing factor genes, but I can't make any guarantees.\"\n\nIt was too much to think about and just trying to sort through it hurt. \"This gonna hurt her more? Because she's been through enough shit already.\" \n\n\"She won't feel anything. I'll prepare an IV solution and she'll receive it with the rest.\"\n\n\"How many times have you done this?\" He was avoiding it. Why were they asking him anyway? Didn't McCoy of all people know that he fucked everything up?\n\nFrom the look on his face, Creed knew it wasn't a question the ape wanted to answer. \"Five people have received similar treatments.\"\n\n\"And how many did it work for?\"\n\n\"One saw limited methylation. Their circumstances were far different from Kelly's though.\"\n\nCreed's eyes narrowed. \"Different how?\"\n\n\"All of those patients had completely dormant genes. For Kelly, it's still a long shot but it has a chance of succeeding enough to bring her out of this.\"\n\nCreed thought back to the first time they'd seen Stan on television. She'd been terrified and then the next night she'd wanted to go out alone just to prove he hadn't won. She'd probably view dying as a win for Stan and Cavallo. She'd fucking hate that. He nodded. \"Do it.\"",
        "*~*~*~*~*~*\n\nThe move to a new location at least provided a more comfortable chair. Almost as soon as he sat down with her, Creed found that he was everyone's favorite attraction. The large window that separated the frail's room from the rest of the space made Creed feel like they were sitting in a fishbowl. If there had been blinds, he would have closed them. \n\nThe weather witch was the first to show up. She just stood there, fucking staring. He stared back. She turned and left. Clearly the kids were back because the older, braver ones seemed to show up a couple at a time. They were always quickly chased out, but not before they'd had their look. The old man himself even rolled through a few times. After that, Creed felt like charging admission. \"See Kelly Demmer, half mutant, half human!\" Didn't take him long to realize the frail wasn't the biggest reason they showed up. \n\nIt was him.\n\nThey wanted to see the monster they'd heard stories about. The heartless bastard they'd grown to hate over years of conflict and battles. The fucking animal that had been invited into the clean, safe heart of their little slice of Westchester paradise. It pissed him off. He added it to the list and kept his eyes on the monitors. Each increasingly erratic and ineffectual heartbeat was traced out in vibrant orange. Blood pressure dropped more slowly, but even he could see that there was a steady decline.\n\nHe didn't need the monitors or the looks the caretakers gave him. He could smell her dying in slow inches. Every hour that ticked by he waited for some sign of improvement. A more rhythmic heartbeat. A deeper breath. Anything. Nothing came.\n\nNothing came for four days. The look on the ape's face told him that it never would.\n\n\"I don't think-\"\n\nHe stared at the pale body in the bed. \"Shut up. You don't have to tell me. I can smell it.\"\n\n\"If you want to go-\"\n\n\"I said shut the fuck up.\" He got up and stood next to her. Most of the swelling had gone from her face, but the bruising was still there. He stared at the tubes and wires and hated them even more now than he had before. \"Unhook all this shit.\"\n\n\"If I do that-\"\n\nThe deep growl was out before he could stop it. \"If you do it what? She'll die in ten minutes instead of thirty? You won't know the exact moment it happens? Unhook it all and leave me alone with her.\"\n\nThe ape nodded. It took five minutes to free her from all the tubes and wires. After that, Jimmy and the ape both left. The door was shut and a screen was moved in front of the outside of the window. When he was satisfied that he was alone, he wrapped the thin blanket around her and lifted the frail off of the bed. He sat down in the chair he'd spent the last four days in, her head resting against his shoulder. He forced a deep purr to rumble through his chest because he knew she liked it.\n\n\"I fucked it up, frail. We shoulda stayed in Chicago. Or Maine. Or anyplace I didn't have to trust some stranger with your safety. Even then, if I'd been paying attention it wouldn't have happened.\" He had no idea if the last part was true, but it felt true to him. Her breathing was getting shallower. He shifted his hand so that one finger rested against the pulse in her neck. It was weak and irregular. Each thready little flutter cut him deeper than Jimmy's blades had. None of his second-guessing would matter now. He'd have centuries alone to tear himself apart. \n\nHe rested his cheek against her forehead and felt the warmth draining from her skin. Her shallow breathing slowed until it stopped all together. Her pulse fluttered twice more under his finger, then that stopped too. \n\nHe closed his eyes and rested his head back against the wall. For a moment, he was numb. Then the pain of loss tore through his veins like a white-hot fire. It was worse than anything physical he'd ever suffered. It was even worse than the loss of Jimmy. He dug his claws into the upholstered arm of the chair, barely containing the roar that rose in his throat.\n\nCreed sat there for what seemed like hours, the weight of the frail in his lap, the pain of her loss ripping through him. When he trusted himself, he looked back down at her. The only way he could assure himself that she was dead was to look at her. He tilted her chin up and thought he noticed a lessening in the bruising around her eyes. \n\nImagination. Had to be.\n\nHer chest rose and fell weakly. \n\nThe misfiring of a brain that doesn't realize it's dead, he told himself. Seen it a million times.\n\nThen it happened again, only it was deeper and more sustained this time. He studied the bruises on her face again. Most of the ones that were still purple were taking on a greenish-yellow tinge.\n\nAnother, stronger breath. This one looked almost normal.\n\nIt was stupid. Probably a hallucination. But what if it wasn't? He touched the side of her neck and found her skin warmer, a pulse fluttered under his fingers. It was weak, but regular. With each little throb it seemed to grow stronger. \n\nAs he sat there transfixed it grew into a normal rhythm. So did her breathing. The scent of death receded and he thought he caught the scent of sweet vanilla. This was not a trick of his mind. He could imagine death and torment with a clarity that shocked most people, but to imagine life was beyond his capacity.\n\nThe bruises that had been nearly healed were gone. The ones that were still dark and angry were fading. The wound on her head was beginning to knit together.\n\nHe shook her shoulders carefully. \"Frail?\"\n\nHer eyes fluttered, but didn't open. \n\n\"Frail?\" He spoke louder and shook her shoulders again. \n\nThis time she opened her sea-glass eyes and focused on his face. \"Victor?\" Her voice was raspy. She reached up to stroke his cheek. He covered her hand with his. \"I thought I only dreamed that you came for me.\"\n\n\"Wasn't a dream frail.\" He held her tight. She snuggled against his chest, fitting as she always had. One hand covered her ear. He turned toward the door. \"McCoy! Jimmy!\""
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "human",
        "coma",
        "brothers",
        "x-men",
        "wolverine"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-21"
}