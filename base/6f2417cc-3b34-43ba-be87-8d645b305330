{
    "title": "Sacrifice Ch. 07",
    "pages": [
        "Black. \n\nFlowers weren't supposed to be black. Right?\n\nThey should be bright, and cheery. They should calm you, or make you happy\u2014or at the very least, content. Black flowers were just...wrong. The iris bobbed on its stalk as if nodding in agreement.\n\nAnd that wasn't the only thing wrong with this place, Calliope mused as she ran her fingers over the inky petals she had been eying. She glanced up from the flower and back to the sitting room door, beyond which Thelios and Lady Nagi were still engaged in a heated debate. Over what, she wasn't sure, though she could easily guess. \n\nShe'd come in to find them already at it, again, and at the sound of half-raised voices had opted to wait politely in the expansive entrance hall until they were done. \n\nShe looked back down at the flower and placed a hand over her stomach. Her frown deepened. She wondered when she'd begin to really show, and how long the pleats of her dress would hide it. She didn't care what Thelios said, she was most definitely beginning to show. It was still just a little bump, a slight swelling that one wouldn't notice if they weren't looking for it, but it was there. But when she'd asked, Thelios he'd said it was her imagination. Perhaps he simply didn't want to think about her all lumpy and blown up like a ripe pea pod. Either way she'd like to be done with this and back home before it became apparent. \n\nThe thought of the others knowing did not sit well with her. Not at all.\n\nCalliope pursed her lips thoughtfully as she adjusted the pleats of her dress. \n\nPerhaps he didn't see it because it was still so subtle, but maybe he just didn't want to. He wasn't angry with her, but he hadn't expressed any pleasure over the pregnancy either. In fact, he was rather silent on the subject, causing her to be so as well.\n\n\"How's old what's his name?\"\n\nShe blinked and looked up at the voice, and smiled thinly. \"Go listen for yourself.\"\n\n\"Thanks, but no thanks. I already heard enough to know to turn around and walk in the opposite direction. You know what they're on about?\" Demitri brushed past her and made himself comfortable on a nearby bench.\n\nShe shook her head. \"Same as before...no doubt.\"\n\nThey had been arguing for four nights consecutively over whether he should stay or go. He wanted to leave, but his sister seemed to think he was in some danger if he did. His other siblings seemed to agree, however none but Lady Nagi had braved coming into his rooms to tell him to his face. Calliope was fuzzy on the details, but the crux of the matter seemed to be that whatever power this Phineas fellow had stolen could be used against Thelios as well as the others, and they were all convinced there was safety in numbers. Thelios was not inclined to agree. But then he rarely was.\n\n\"I must admit...I don't want him to go.\" Calliope offered softly. \"I don't like the thought of being left here without him.\"\n\n\"I wouldn't worry about that. I'd just take you home myself if that were the case. Though I suspect we'll be leaving soon enough. I'm surprised they've kept him as long as they have.\"\n\nShe smiled a little more warmly, then sighed. \"You know I thought I'd feel much better once I'd told him about...my news...but I've had this awful sinking feeling that I just can't shake.\"\n\nDemitri shrugged. \"Makes sense. I've got my own idea that something is going on here that won't bode well for any of us. I don't know if it's because they lost track of Phineas or what...but good feelings have been hard to come by.\"\n\n\"Well that makes me feel much better.\"\n\n\"What do you want me to say?\"\n\n\"Something to make me feel better. Obviously.\"\n\n\"So, lie?\"\n\n\"Ok, fine, something to distract me then.\" She moved to sit next to him on the bench. \"Tell me a story.\"\n\nHe chuckled. \"Like a bed-time story?\"\n\nShe laughed. \"Yes Uncle Demitri, tell me a bed-time story.\"\n\nHe sobered and put his hands on his knees, scowling thoughtfully at the ground. \"Alright,\" he said after a moment, \"here's one. Once upon a time, there was a young slave, who didn't know her place. She was always chiding and bossing and making a nuisance of herself. One day she got herself knocked up...and then she was really intolerable.\"\n\nCalliope laughed and shoved his arm. \"Stop it. I'm not really that bad.\"\n\n\"Who said I was talking about you?\" He cocked a brow at her and looked perfectly serious, but the glint in his eye was telling.\n\nShe wrapped an arm around his. \"Fine. Be difficult, you awful man.\"\n\n\"Done and done.\"\n\nThe sat in a companionable silence for a while, enjoying the little shafts of sunlight which spotted the garden.\n\n\"Demitri?\"\n\n\"Hm?\"\n\n\"Do you ever think of having children?\"\n\n\"I have children. Had.\"\n\nShe stared at him. He looked levelly back. His sharp blue-grey eyes were cool and stoney.\n\n\"Oh. I'm...I'm sorry. Were...did they...\" she couldn't quite bring herself to finish the thought and turned away, embarrassed.\n\n\"I don't know.\"\n\n\"What happened?\" she dared a peek in his direction. He was looking straight ahead.\n\n\"War. I was from a small village. It was hit while I was off fighting elsewhere. It's likely they were taken as slaves.\"\n\nThe silence they returned to wasn't quite so comfortable.\n\n\"I don't know what to say.\" She whispered.\n\n\"Nothing to say.\"\n\nThere was another long silence which lasted until Lady Naga broke it by coming out of the sitting room with Thelios on her heels. They both wore dark expressions. \n\n\"Well there's a cheery lot\" Demitri muttered.\n\nShe allowed herself a silent chuckle, but kept the bulk of the smile from her face as the other two neared them. She didn't think they'd appreciate her amusement at their expense. They were both glowering, and where Thelios was intimidating enough, massive as always and stalking like a irate lion, Lady Nagi cut an even more daunting figure. \n\nCalliope had never seen her face so hard. Her movements were quick and sharp, causing the usually slow, hypnotic whisper of her long, serpentine body to turn into something more akin to the sound of a blade being suddenly drawn from its sheath. \n\n\"How goes it my lord?\" She asked mildly as he neared them. He glared. She smiled gently. \n\nHe looked like he meant to pass them by, then paused, allowing his sister to continue on ahead of him. \"Demitri, find out about transport. You might need a ship...\" Lady Nagi stopped and cast her own glare back toward her brother, \"if,\" he continued, emphasizing the if and dimming the lady's ire somewhat, \"we need it. Which we may, and on short notice. See what you can do.\"\n\nDemitri nodded soberly and rose. She caught his eye briefly and noted the told-you-so expression lingering there. She tilted her head in concession. She was hardly surprised. \n\nHer eyes flitted back to Thelios a half-second later and found his expression significantly less legible. She stood as well, positioning herself on the edges of his personal space. He no longer seemed immediately upset with her after the dancing incident, but his temper had been short in the days that followed, and she had been careful to step lightly around him.\n\nThere was also the matter of his not having, well, touched her since that night as well. She had attributed it to his lingering disappointment with her, and hoped that it too would eventually pass. He still expected her to share his bed as they slept, so she had decided that it couldn't be as bad as all that. \n\n\"Is there anything I might do to be of assistance?\" She offered, already knowing he wouldn't say yes.\n\n\"Not as of yet.\" His words were clipped and his glare unabated...and still, despite this, she felt an inexplicable desire to shift closer to him. She resisted the impulse, not forgetting they were in company, but she couldn't push it completely from her mind. \n\nIt was distracting enough that it took her a few moments to realize they were simply standing there watching each other in silence.\n\nDemitri coughed and excused himself, and she blinked, wondering how long she'd been staring. She cleared her own throat and stepped back with a curt bow of her head. \n\nWhen she caught Thelios's eye again she could see his gazed had gentled significantly. She might even admit that it seemed almost...warm. Her cheeks heated and she turned away, hoping she was giving the impression of hastening off to important business. Of course by the time she'd reached the haven of the bedroom she realized she had no reason to be there and, after a minute or two of puttering and consideration, returned to the main entrance hall of the suites. \n\nLuckily Thelios and Lady Nagi had moved on, though they were replaced by another, stranger figure.\n\nIt was a woman. A woman wearing a concealing white veil similar to what she had worn when she played for Penelope. The figure seemed to look around then paused when she saw Calliope and approached her. \n\nCalliope grinned when the woman lifted the corner of her veil and revealed it was Penelope herself hiding under the disguise. \"What's all this for?\" Calliope asked with a laugh, gesturing to the covering. \n\nPenelope shrugged. \"I didn't know who knew about the dance, so I thought it best not to give too much away by advertising our association. Didn't want to get you in too much trouble.\n\nCalliope looked down, recalling that she hadn't spoken much to Penelope since that night, and hadn't brought up the argument with Thelios. It didn't seem like appropriate information to be sharing with others. \n\n\"I suppose it was a wise precaution then.\" She offered, \"Though my master knows now, so I don't suppose the veil is necessary.\"\n\nPenelope pushed it back so that it fell down the back of her hair instead. \n\n\"You look like a priestess like that.\"\n\nShe laughed. \"Well if I can't make my way here, perhaps I'll be sold as a temple whore. I'll have the clothes at least. But to the point. I came to talk to you.\" \n\n\"About?\"\n\n\"You asked me to keep an ear out, yes?\"\n\nShe nodded.\n\n\"Well, I don't know if it's helpful, but I heard that some of the others are rather cross with your master. I overheard one of the slaves complaining to one of the girls in my...cohort, that his master was about ready to do something himself to spare the rest of them.\"\n\nCalliope frowned. \"Do something?\"\n\n\"Well he was talking in generalities, but the gist seemed to have been that they're worried that if your master leaves he'll cause problems for the others. Who knows how. The going opinion is that he'll put himself in danger,\" Penelope gave her a serious look, \"and you for that matter. Which is something to consider.\"\n\n\"I see.\" This wasn't really news. \"Anything else?\"\n\nShe shrugged. \"Not really. If you like you should come spend some time with me in our quarters, you might hear something else that's pertinent. After all you know your master's business better than I.\"\n\nIf only that were true, she thought sardonically. She nodded. \n\n\"Come, why don't we take a walk at least, you can tell me what your master thought of your dancing. I bet I was right, yes? He loved it?\" She led her out into the hallway and they worked their way back to her rooms, with Penelope chattering away and Calliope giving ambiguous answers. After all, he had never given an opinion on her dancing other than to express his anger and disappointment that she hadn't been honest with him about it. She was loathe to bring it up again by asking if he liked it. Her curiosity couldn't quite overcome her shame or her desire not to irritate her master any more than she already had.\n\nAs they made their way through the maze of corridors Calliope looked around them thoughtfully, realizing once more that the palace no longer overwhelmed her. She passed by its wonders almost blind to them...though two women she recognized as nymphs of a sort still made her breath catch in her throat when she sighted them. She wasn't sure she'd ever get used to them and their ethereal perfection. \n\nThe many household slaves barely even caught her notice. Kara had been right about that. When one paid attention it was rather interesting to see the differences in how they all moved and carried themselves. You could tell the regular slaves from the...specialty slaves. Or at least that's how she'd been coming to see them. Women like Penelope, who had some particular beauty or skill which made them more useful or entertaining, and therefore more valuable than others. The fact they knew their worth showed. It showed in the way they walked, regally and smoothly, and sometimes lightly, their chins up, their lips curled into a ghost of a smile, their eyes easily meeting those that dared meet theirs. \n\nUnless they belonged to a simple household slave, in which case they were ignored. This seemed to suite the poor creatures who kept their eyes to the floor, and who, in comparison, seemed to stoop and scurry as if half-expecting to be struck. They were the most mouse like around the inhuman masters and mistresses of the place, but, she noticed, were wary around the slaves of higher standing.\n\nSpeaking of which...\n\nThey paused to greet a number of 'specialty' slaves, women of Penelope's acquaintance, and Calliope was obliged to contribute to their joint exercise of contrived politeness. \n\nShe was quickly distracted, however, when she spotted Thelios's brother, the Host, lingering with what looked like a number of human men. Two of them looked like the sort of servants that had been sent to Thelios with messages and another appeared to be a regular household slave. That is if their manner of dress was indicative of anything.\n\nWhat was keeping her attention was the fact that he seemed to be watching them back, and as she flicked another glance out of the corner of her eye, she could swear he was looking specifically at her. She looked again and felt sure of it. There was an odd expression on his face, one which made her gut clench slightly.\n\n\"Penelope,\" she leaned in, whispering under her breath, \"am I daft or is he staring at me?\"\n\nPenelope waited a moment then gave a discreet glance of her own. \"Can't tell,\" she muttered, \"could be looking at anyone here.\"\n\nSomehow that wasn't convincing or comforting. \"Mm.\" Was all she said, still watching cautiously out of the corner of her eye. She watched as he smirked and made some comment to his men. Then he looked right at her, catching her gaze and causing her mind to freeze up.\n\n\"Calliope?\"\n\n\"Hm?\" She started slightly, turning to the sound of her name.\n\n\"Anahita was just asking a question...\" Penelope prompted.\n\nCalliope smiled apologetically at the slender, dark haired women across from her. \"My apologies, I was momentarily distracted. What was it you asked?\" \n\nThe look she got in return was somewhat disdainful, but Calliope chalked it up to being put out at having been ignored. Besides, it was a common enough look, and she was no longer bothered by it. She kept her own expression as sweet and guileless as she dared without it seeming forced...even if it was rather.\n\nThe woman's dainty chin lifted sharply, causing her strait, shoulder length hair to undulate like an inky, silk sheet. Calliope wondered if it was practiced movement, and then though of her own mass of incorrigible black curls and wondered how Anahita managed to keep her hair so incredibly smooth. Her only recourse was to simply force it into tight braids using a touch of oil and a good deal of practiced expertise. \n\n\"I was simply asking after your master. I noticed he has been missing in the evenings again. Has he taken ill? Or is he fighting with the other masters again? I noticed they seemed to be having terse words a few days ago...more than usual that is.\"\n\nCalliope tried to keep her face placid and mild as she regarded the woman. Internally she was watching her face, looking for some hint at what she might be driving at, who she might serve...oh god but she was becoming paranoid. \n\n\"I cannot say. It amused him to come, now I suppose it does not. His reasons are his own, and it is not my place to question them.\"\n\n\"I doubt you'd get much of an answer if you tried.\" A deep, male voice smoothed from behind her. \n\nShe started and turned to find the Host standing next to her. His startling nearness made her take a step back, a movement she tried to cover with a quick half bow. \"Forgive me my lord, you startled me.\" She husked. He, like the rest of Thelios's relations here, was rather large compared to the humans, and she was obliged to look up at him to meet his gaze. Of course he wasn't nearly so tall or broad as her master, so his size was less intimidating than it ought to have been.\n\nHe smiled, exposing wolfish teeth, not too unlike Thelios's, if not more subtly arrayed. She decided she didn't like the smile. It was too knowing. It seemed too personal...like something Thelios or Demitri would tease her with. She definitely didn't like it coming from him.\n\nHe continued, not bothering to acknowledge her apology. \"I'm sorry to hear we no longer amuse our dear brother. Though, if you were to grace us with a performance some night soon, that would certainly draw his interest. Don't you think?\"\n\nShe tipped her head in a conciliatory manner. \"I did not mean to say that he doesn't enjoy the entertainment offered, my lord.\" She hastened, \"I was simply expressing my lack of knowledge where my master's motivations and desires are concerned.\" \n\nHe looked amused by that. \"Oh, somehow I doubt that.\" The expression he wore was most definitely one to make her blush and she winced internally as she felt it begin to creep slowly up her throat. \"But won't you come and entertain us? My brother would not object to that at least, though he finds so much else to object to.\"\n\nShe cleared her throat softly. \"I am sorry my lord, but I have little to offer in that regard. For the rest, I cannot answer but for my own part; my master would indeed object to my performing. He has forbidden it.\" That ought to put that notion to rest, she thought hopefully. \n\nA strange look came over his face and the knowing quality in his smile seemed to intensify. \"Is that so? How strange. I must have been mistaken.\"\n\nThe nerves she had managed to suppress returned and it took every ounce of will to hold it in check. He didn't know. He couldn't...could he? \"Mistaken, my lord?\"\n\nHe looked pointedly at Penelope and she felt her stomach fall. \"It's nothing.\" He smiled more broadly and made a dismissive gesture. \"I know how hard it is to talk your master into anything, but do try...it will do him a world of good, I'm sure. If not, you might come anyway, without him.\" His gaze returned and raked over her.\n\n\"I would not be so bold, sir, to abuse my Lord's honor in that way.\" She clipped out as politely as she might. \"Nor my own,\" she added, \"with such flagrant disobedience.\"\n\nHe arched a brow and brushed a long red lock of hair from his brow, then smiled again. The motion drew her eyes to the long, curved horns sweeping back from his forehead, like a rams. \"And what of hidden disobedience?\" He challenged with a smirk.\n\nShe lifted her chin in response. \"They say, my Lord, that honor is a public currency. Private fault is just that: private\u2014kept between the concerned parties. And it must remain so...or else it is not what it is. Don't you think?\" She silently dared him to answer that, refusing to quail under his direct gaze.\n\nIt wasn't he who answered, however. Penelope laughed lightly, taking her by the arm again. \"Dear Calliope, such a heavy thought for so light a thing!\"\n\nThe tension broke somewhat as the Host turned a curious gaze on Penelope instead. \"What thing do you speak of?\"\n\n\"Why, honor, of course!\" She smiled brightly between the two of them. \n\nHe chuckled. \"I've heard it called many things, but not light.\"\n\nShe too chuckled, then rolled her eyes at Calliope. \"Don't look so stern.\" She chided, before turning her bright smile back on the Host. \"It is indeed light, my Lord. As light as air. For what is honor but a word, and what are words but a hot breeze between the lips.\"",
        "Another woman, no doubt seeing how amusing the Host found this, and not to be outdone, pipped up as well. \"That is it exactly! And to add besides, what have we women to do with honor,\" she pouted prettily, \"since we cannot fight for it as men do?\" Then added, looking slyly to the others, \"And since what little we are born with is such an easy thing to lose.\"\n\n\"Yes, a fruit so easily plucked.\" Quipped another.\n\nThey laughed. \"Or pricked. As it takes just a little nudge from the daintiest prick, and it is gone.\" Agreed Anahita, to their continued amusement.\n\n\"So you see, it is a light thing.\" Penelope finished with a pleased smile and airy gesture.\n\nThe Host chuckled and turned back to Calliope. \"Are you convinced?\"\n\nShe sighed mentally and gave him a mild smile. \"I suppose I must stand down before such a united front. I yield...\"\n\nHe opened his mouth to speak, and she quickly added, \"In theory at least, if not in practice.\"\n\nHis mouth twitched into a frown for a half-second before manufacturing another smile. \"Well...I suppose that is the best we can do...for now.\" He offered with a shrewd glance, then turned a warmer smile on the other ladies. \"Perhaps if you ladies continue your siege, you will yet break her down.\"\n\n\"We shall do our best, lord.\" Penelope chimed. He nodded to Penelope, and then Calliope with another, more gracious smile.\n\nShe couldn't find a voice to speak with, or words worth saying, so she merely bowed again and watched him go. He left behind him a sense of dread that hung over her shoulders, as heavy and stifling as a woolen rug. She hated how discomfited he'd made her feel.\n\n\"Really Calliope, you should be more careful.\" Chided Penelope. \"Your master may not be fond of him, but you won't help matters by being so stiff and awful.\"\n\nShe blinked. \"I was perfectly polite.\"\n\nPenelope rolled her eyes again. \"Well, your supposed good breeding did very little to hide your contempt.\"\n\n\"I'm not sure what you mean.\" She hedged, noting the sardonic look in Penelope's eye. She knew full well, obviously...but truth be told had no real desire to disguise it, even if it was in her best interests. The looks she received from the other women varied from person to person, ranging from amusement, to the very contempt Penelope spoke of. \n\n\"But perhaps I should take my leave of you as it is.\" Calliope didn't wait to be excused and gave them a brief half-bow. \"Good day to you all.\"\n\n**\n\n\"Good evening Master.\"\n\nCalliope was standing in the bedroom, lost in thought, when she heard the door open behind her. He entered silently, but she somehow knew who it was.\n\nHe returned her greeting with a grunt. \n\n\"I filled the bath if you like.\" \n\nAnother guttural sound of...not quite annoyance, but not pleasure either. \n\nShe ran a hand over her stomach. The movement was becoming something of a habit.\n\n\"Did you know Demitri had children?\" she murmured as a large shadow encroached on the edge of her vision.\n\n\"Yes.\" \n\n\"Oh.\" She turned toward the flash of silver-grey which appeared in the corner of her eye. She had to tilt her head back to look up into his eyes as he loomed over her. His gaze was directed, pointedly, at the placement of her hands over her belly. She felt a twinge, but left them where they were.\n\n\"Why do you ask?\"\n\n\"I don't know. He just told me about it. It...it's very sad. How many did he have?\"\n\n\"Three, I think. He doesn't like to talk about it. Unsurprisingly.\"\n\n\"Do...\" She trailed off, uncertain.\n\n\"What?\"\n\nShe shook her head. She was thinking nonsense. Being pregnant really was making her daft and sentimental.\n\nHe sighed. \"I hate it when you do that. Spit it out. What were you going to say?\"\n\n\"I honestly don't even know. I was speaking before the thought was fully formed. I'm just...fretting is all.\"\n\n\"About what?\"\n\n\"Everything...apparently.\" She muttered despondently. \n\nHe chuckled. \"Don't.\"\n\n\"Easier said than done.\"\n\n\"Consider it an order.\"\n\nShe half-rolled her eyes. \"Yes, Master. Your every wish is my command.\"\n\nHe smirked. \"Don't get smart.\"\n\n\"Why whatever do you mean, my Lord?\" \n\nShe let out a surprised yelp as he passed behind her to the bath, smacking her rear lightly as he did. \n\nShe turned in order to give him a put out glare, but he was facing away as he stepped into the bath. The glare would have been wasted, so she didn't bother.\n\nInstead she found herself watching him\u2014examining the broad expanse of his heavy shoulders, the long swathes of muscle along his back and sides...the way the faint wisps of steam were licking up around his thick calves as he stepped into the water. Her eyes followed where it collected along the thigh and the hard planes of his flexing...\n\nShe flushed and turned away, her hand instinctively brushing her neck, as if expecting to find similar droplets of steam there as well. \n\nWhen she glanced back he was seated with his elbows propped casually along the baths edge and had turned his head to look back at her. He wasn't grinning like a wolf, so she could only assume that he hadn't seen her staring. \n\nHe turned away. \"Join me.\" He commanded gruffly. Always so demanding. She suppressed her smile.\n\nShe arched a brow at the back of his head. \"I'm busy.\" She returned lightly.\n\nHe snorted. \"Doing what?\"\n\n\"Things. Things and...stuff.\" She knew he could hear the teasing smile in her voice. She certainly could. She reached up and unpinned the knot at the back of her head, uncoiling the braid and slowly tugging it loose through her fingers.\n\n\"Horseshit.\" He still didn't turn around, but he lifted a hand to wave her over. She obliged and sat on the wide ledge surrounding of the bath, still loosening her dark curls.\n\n\"You beckoned, Master?\"\n\nHe reached up, smirking again, and grasped the side of her thigh, leaving a wet splotch on her dress.\n\n\"At-ta-ta-ta...\" she winced and pushed his hand away. \"You'll get my clothes wet.\" \n\n\"Then take it off.\" \n\nIt was her turn to scoff. \"So that was the plan, was it?\" \n\nHe didn't smile, and she wasn't sure what to make of his serious expression. She shrugged and kept him in the corner of her eye. He watched her as she pulled away and untied her belt... only to refold her skirt at the waist to lift the hem to mid-thigh.\n\nShe noted that his face was still strangely impassive. \"It seems to me it would have been easier to just take it off.\" He rumbled.\n\n\"And let you get away with that? Hardly.\" She soften her rebuke by slipping in closer. She leaned against the back of his shoulder, bending one leg beneath her and letting her other foot dangle down into the water. He accepted the conciliatory prize and massaged the offered calf. She considered reciprocating but found she was presently too comfortable to consider moving. So she simply rested her arm and chin on his shoulder and enjoyed the moment as it was. Besides, he had made himself bigger again, so rubbing his shoulders seemed like far too much work at the moment.\n\nShe smirked a little. It seemed that he was getting a little larger each day...as if his frustration was linked to his size. It was, she considered, though not in that way. It was no doubt a conscious effort to display his growing impatience and encroaching ire to his brethren, and to do it through sheer intimidation. It amused her somewhat, even if she feared what the reaction of said brethren might eventually be.\n\nBut then his size did have other benefits. There was something inexplicably wonderful about being able to wrap herself around him completely and still not encompass him fully. She closed her eyes and smirked, even in his smallest form he was a proper giant in that respect. Currently, draped as she was over his shoulder, that fact was more than obvious. \n\nShe slid her foot along his thigh, tracing its thick length. As she did, a snippet of some half remembered poem tripped brokenly through her mind: I know the shape of his leg; this is his hand; his foot mercurial; his martial thigh...\n\nHer own leg, her foot, felt small and delicate pressed against him. \n\nShe opened her eyes again and found his eyes closed, allowing her to freely examine and admire the broad angles of his profile. At least until he sighed deeply, upsetting her perch.\n\n\"What's troubling you, my Lord?\" She asked softly, her eyes lingering on the heavy line of his jaw and the point of his tooth indented against his bottom lip.\n\n\"I'm bored. I hate sitting and waiting. I've been here too long as it is.\" She could tell by the edge in his voice that it was far more than boredom weighing on his mind. \n\nShe ran her fingernails up the back of his neck and felt him shudder slightly beneath her touch. She pressed her lips against his shoulder and smiled, if sadly.\n\n\"You're going, aren't you?\" It was barely a question.\n\nHis fingers tightened around her ankle. She looked down at it, wondering at how his hand dwarfed her. \"This upsets you.\" He wasn't going to deny it at least.\n\nShe hadn't thought she sounded upset, but maybe he just knew her well enough to tell. \"I can tolerate this place when you're here...\" She left the thought half finished, and saw him nod slightly.\n\n\"I'm afraid.\" She added after another silent moment.\n\n\"I have no intention of leaving you here.\"\n\nShe lifted her head at that, and searched his face with her eyes. \"When will we go then?\" \n\nHe tilted his head toward her and she could see the light in his red-gold eyes and the flicker of subdued fire. \"Soon.\" His hand slid up her calf, twisting to draw his finger tips across the backs of her knee. It was her turn to shiver. \n\nShe pressed her body more tightly to his. \"I want to go home.\"\n\n\"With me?\"\n\nShe frowned and pulled away enough to meet his eyes. \"You mean instead of with Demitri?\"\n\n\"I mean to clarify which home you mean.\" He eyed her with a side long stare. \"There is your father's home...\" It was his turn to leave his thoughts incomplete. She pulled away and straightened, cocking her head to the side and frowning deeply. \n\n\"I fear I don't understand your question, and if I do...I don't think I like it.\"\n\nHis cool expression faltered and he raised a brow. \"No?\"\n\n\"No.\"\n\nShe thought she saw his lip twitch.\n\nHe turned toward her, wrapping an arm around her waist and pulling her in closer. \"Calliope, I want to ask you something.\" She could feel the damp of his arm filtering through the cloth, but the look in his eyes made it hardly worth mentioning. Something was wrong.\n\nShe wet her lips and eyed him uncertainly. \"What is it?\" \n\nHe ground his jaw and looked away, expelling a harsh breath, then back into her eyes. \"If something were to happen\u2014\"\n\nIt was her turn to look away, \"\u2014Thelios, don't say such\u2014\"\n\n\"Listen.\" His voice was low, but insistent. His hand gripped her hip tightly, prompting her to turn back to him. She didn't want to hear what he had to say, but she held her tongue. He noted her compliance and continued. \"'If' does not mean 'when,' Calliope.\"\n\n\"I know.\" She offered softly when he seemed to require a response.\n\n\"It's perfectly reasonable to make contingencies.\" Again, he paused.\n\n\"I know.\"\n\n\"We need to discuss the possibility that something could happen to me.\"\n\nShe remained silent, even when he prompted her to speak by squeezing her hip again. \"Well?\" He finally asked.\n\n\"I don't want to talk about it...or discuss it, or...consider it.\" She swallowed hard to keep back the hot tears she knew were creating a lump in her throat. Thelios opened his mouth to argue and she help up a stalling finger. \"But...I will.\"\n\nHe looked at her a moment, thoughtfully. \"It isn't just you I'm trying to protect.\" He added in a low rumble.\n\nShe didn't know what to say to that. He hadn't really mention the child since she'd told him, even indirectly, and there was something about what he'd just said that sent a strange warmth through her limbs. \n\nProtect. He wanted to protect the child. And her, she thought with a faint smile. She blinked the moisture from her eyes and nodded. \"What was it you wanted to ask?\" \n\n\"If something were to happen,\" he paused to eye her and make sure she didn't interrupt, \"would your father take you under his protection?\"\n\nShe opened her mouth to answer, then closed it again. She honestly didn't know. She thought a moment then spoke her thoughts plainly, unsure of what else to say. \"I...don't know. My first thought was to say yes...but a second later, I wasn't as sure. If...\" she hated to voice the words, but pressed on, \"if I were a wife...and widowed, and with no father-in-law to claim me, then I do not doubt it. It would be his duty. But...I am not that, so I don't know where I stand.\"\n\n\"Even if I were a man?\" He pressed. She nodded. He made a displeased sound.\n\n\"I fear you being...what you are,\" she continued, \"would not help the situation. But to return as a pregnant slave, no matter who the master...well, I would be relying on affection alone to secure me a place in their home.\" She tipped her head thoughtfully. \"I think if my younger sister were married I might be able to go to her, and hope her husband's affection for her would over-ride whatever shame my presence could bring into his home.\"\n\nHe shook his head. \"Such idiocy.\" She arched a brow at him, and he returned her quizzical look with one of annoyance. His voice came out in a growl, \"Forced from your home, pressed into service, and under duress...whether it be duty or fear, and for their sakes...\" he paused to fume and shake his head again, \"And somehow you could bring shame to them? Idiocy.\" He made a sound not dissimilar to a snarl and glared at the dark, tiled wall across from him. \n\nHis expression was dour, and should have been unnerving, but she couldn't bring herself to be put off by it. Not in the least. That tingling warmth which was still lingering in her veins had bloomed and washed all else away. She leaned into him again, wrapping her arms tightly around his neck and attaching herself like a limpet to his side, and pressed her head back against his shoulder.\n\nShe felt him start when she gripped him, but he relaxed easily enough into her. A moment later she smiled as rough lips brushed lightly against her forehead. \"It's...it's not fear or duty which compels me, my Lord.\" She murmured softly against his shoulder.\n\n\"Wasn't it?\" He challenged, his voice as low as hers.\n\n\"It was. It hasn't been...for some time now.\" He said nothing. When she looked up, he was glaring at the wall again. She smiled sadly and took his face in her hand, turning it to face her. Her lips parted, to say something reassuring...but she forgot the words when her breath was stopped against his mouth. \n\nShe shivered and wrapped her arms that much tighter around him, pulling him closer until she was crushed against him. He did the same, threading fingers through her loose curls until they tightened at the nape of her neck. His mouth over hers was hard and hot...as always. And as always she melted happily into it.\n\nHow long since he'd kissed her this way? Since she'd felt like this? Days? It seemed an eternity. The joy she felt, the gratitude even, to have it back again...there weren't words to express it. \n\nShe found herself on her back with urgent fingers tugging her dress down her shoulders. The jasper tiles of the bath were cool against her already heated skin.\n\nHer own half-frantic fingers left him just long enough to find and release the pin holding the cloth together before reaching back for him. She gasped as her dress fell open and his mouth found her throat. \n\nCalliope tightened her grip around the straining, corded tendons of his neck and shuddered as her nails bit into skin. He returned the gesture with a growl, biting lightly into her shoulder and wringing another delighted shiver out of her, one that made her back arch against the huge chest pinning her to the floor. \n\nShe grinned at the ceiling and let her eyes flutter closed as his mouth moved lower and his hand higher between her thighs. They fell open at his touch, her hips lifting to induce him further. However, her coo of delight as his finger tips found and pressed between the the slick folds of her sex turned to a hiss of pain as his mouth found her hard, tender nipple a moment later. \n\nHis eyes shot up to hers, questioning. She rocked her hips against his hand encouraging him to keep going. \"It's ok,\" she whispered thickly, \"they're just....tender...\"\n\nHe pulled away and leaned back, bringing the hand that had been wound in her hair down over her shoulder to gently cup her other breast. Normally they didn't quite fill his large hands, yet even with his added size, they seemed fuller than normal...and he must have recognized this since he seemed to move his hands over her experimentally, testing their weight with his palm. His expression darkened and he began to pull back completely.\n\n\"No! Don't stop,\" she gasped, reaching for his hand to pull it back to her.\n\nHe chuckled. It was a dark, thick sound...and it made her tug that much harder at his wrist. \n\n\"I must.\" He rasped as he easily resisted her. She groaned in disappointment.\n\n\"Why on earth must you?\" she demanded, with a more than plaintive note hitching in her voice.\n\nHe returned her glare with a rueful smile. His hand slid up her thigh, making her buck hopefully, but it passed over her hip and smoothed with a firm touch over her stomach, stopping there as his smile turned to something else. She blushed at the insinuation. \n\n\"Do you find me so undesirable already?\" She asked with a trembling smile, attempting to keep the hurt and fear from her voice.\n\nThelios kept his hand where it was on her belly, his thumb caressing the soft skin, but lifted himself to sit next to her on the edge of the bath. He turned towards her and gripped his now evident erection with his other hand. He looked her over with a hot grin, a grin which widened when her eyes did. He was...rather large. Or larger, she should say. In fact she quailed a little at the sight, and wondered if it might not be a little bit more than she could handle just then. \n\nHe released his manhood and leaned in over her, eclipsing her with his massive bulk. He brushed his mouth lightly against hers. \"I think you can put that ridiculous thought out of your mind.\" She heard the smile in his voice and returned it.\n\nHe sat up again and turned serious. \"I wish you'd told me sooner.\" Her blush deepened and she nodded. She was still flush and breathing deeply, but his words cooled her ardor somewhat.\n\nCalliope nodded again. \"I know. I'm sorry. It was foolish of me to be so anxious about it.\"\n\nHe shook his head slightly. \"No, I don't begrudge you that...\" He flinched, almost imperceptibly, and turned his gaze away. She bit her lip and covered his hand with one of hers, leaning up on the other. \n\n\"What? What is it?\" She pressed.\n\nHe frowned. \"I'm not exactly gentle with you...the last time especially. I could have...\" his jaw tightened as his words fell off.\n\nHer own expression of concern melted and she smiled warmly at him, lifting her hand from his to lay it against his cheek. \"I'm fine. We're fine.\" She added.\n\n\"Perhaps. This time.\" He grumbled. \"I'd rather not take that chance again.\"\n\nHer stomach dropped. \"I'm...I think if we're careful...I've heard it's only in the last months that they advise against it...\" She flushed and looked down. \"We'll just be careful.\"\n\n\"What, are you so eager?\" He smirked. \n\n\"Aren't you?\" She whispered roughly, meeting his gaze. His smirk faded and the fire in his eyes flared. Perhaps he thought she would deny it. \"I've missed you. Missed this.\" She added. Her cheeks burned, but she refused to look away, even when his eyes darkened and seared into her.\n\nShe felt his hand leave her stomach and slide lower. She dared not breathe, nor break his gaze as his fingers found her slit once more and cupped her sex with a firm squeeze.",
        "There was a sudden knock at the door that caused them both to start. She laughed brokenly, both at the consistency of Demitri's poor timing and the expression on Thelios' face. It was clear he was thinking along the same lines as she.\n\n\"Damn it, Demitri! You had better be bleeding to death out there.\" He growled out.\n\nShe tried to stifle her laughter behind her hand. She ended up choking on it since his hand was still squeezing between her thighs.\n\nEven through the door the smile was evident in Demitri's voice.\n\n\"There's someone here for Calliope my Lord. Should I send her away?\"\n\nHe turned and arched a brow at her when she tried to wriggle out of his grip. He sighed and released her, allowing her to rise and collect her dress. \"I suppose not.\" He grumbled. She caught his baleful glare and tried not to smile. \n\n\"I'm sure it won't take long. And it might be important.\" \n\nHe answered with another glare and an unconvinced growl as he finally turned away and slipped back into the bath. \n\nShe paused in her adjustments, realizing the dress was half soaked and discarded it, looking about for something else to wear. She also found she had to take several calming breaths before she felt the flush was sufficiently out of her skin to present herself to others. The last thing she needed was a lot of smirking and knowing glances. She got that enough from Thelios.\n\nShe found Demitri gone and Penelope waiting in the next room... not veiled, but a little more covered up than usual.\n\n\"Penelope, what brings you here?\"\n\n\"I have news!\"\n\n\"News? About me or about you?\"\n\n\"Well me, of course. Don't you know? Everything is about me. This is my play, and I'm the title character!\" She flared her arms dramatically over her head and posed for a moment to be admired.\n\nCalliope chuckled. \"I suspect it'll be more comedy than tragedy.\"\n\nShe lowered her arms and nodded her agreement. \"Quite. Or so we can hope. I've not the look nor demeanor for those tragical heroines.\" She tipped her head and eyed Calliope. \"You might just be able to pull that off though.\"\n\n\"Fie on you.\" She chided gently. \"One would think you wished me ill.\"\n\n\"Don't blame me. It's those stern looks. You'd be prettier if you smiled more.\" She eyed her again then surprised Calliope by taking her face in her hands and tilting it as if to critique it.\n\nCalliope allowed it with a bemused smile. \"See that's better already. Your cheekbones are a bit high, which can make you look severe if you're not careful. But you've a lovely, full mouth. I could see men wanting to do terrible things to it.\" She grinned as Calliope made a disgusted sound and pulled away with a sardonic shake of her head. \"But not if you grimace like that all the time,\" she added, \"it makes you look absolutely terrifying.\"\n\nShe squinted at her again. \"You're a little pale, though not unfashionably so...though you might pluck your brow into a more curving arch, not so pointed. That would help soften your look. And brown eyes aren't very interesting, but you could try a little coal to make them more dramatic...and you have short lashes too. They're nice and black, but you could use horse-hair to--\"\n\n\"For pities sake, enough!\" Calliope laughed. \"This was the way I was taught, so this is the way I will continue.\" She added more mildly.\n\nPenelope looked unconvinced. \"Well, who taught you? Your mother? Or some crusty old nurse?\"\n\nCalliope shifted under her gaze. That was exactly right. \"More or less.\"\n\n\"She must have been a prude.\"\n\nCalliope's lip twitched. \"More or less.\" \n\n\"What was she trying to do, get you married off to some dull, ancient of high repute? No doubt one whose solemn reputation demanded only the most pious and restrained of wives,\" she intoned gravely, \"who,\" she added with a sly smile, \"must nonetheless whore herself for the sake of providing an heir...thanks to his equally dull and ancient member.\n\nCalliope was laughing despite herself by the time Penelope finished. \n\nShe sobered quickly with a cough, and did her best to change the subject.\"But you came with an announcement. What is your news then?\"\n\n\"Ah, yes. I have a buyer!\"\n\n\"A good one?\"\n\n\"Oh god yes! Our illustrious Host himself!\"\n\n\"You're jesting!\"\n\n\"No. What, you don't think I'm good enough?\"\n\n\"No...no...of course not. Nothing like that.\" She frowned, remembering the incident in the hall. Perhaps she'd been wrong after all. He must have been watching Penelope and not her. The rest was no doubt simply meant to irritate Thelios, as Lady Nagi had once warned her he or the others might try to do.\n\n\"Well, why do you frown then?\" \n\nCalliope blinked and let her frown melt back into a smile, and laughed, shaking her head to clear it. \"Oh, no...it's wonderful. Congratulations. I...I was just remembering when we were in the hall...he must have been looking at you, not me.\" \n\n\"Oh...well, perhaps.\" She brightened. \"Yes, indeed he must have! Or at least I was so very charming once he met me, he couldn't help himself.\" They smiled at one another a moment when Penelope seemed to remember something. \"Oh, I almost forgot. I brought you a present as well. You obviously can't be trusted to remember such things so I took it upon myself.\" Penelope shifted her tunic to reveal a purse hanging by her hip then retrieved from it what looked like a small ointment pot. \"It's popular enough, and won't be hard to replace. It's a cream made from the oil of some sort of nut. Out of Ethiopia I think.\" She opened it and held it up. \"It smell's nice too. Better than oil.\"\n\n\"It does.\" She agreed. \"What's it for?\"\n\n\"You're stomach of course, or anywhere else you like. You rub it over your skin. It's going to stretch out soon, and you don't want it to leave marks.\" She was about to continue when her eyes shot up and widened. \"Oh, my Lord, good day.\" She rushed instead, bowing.\n\nCalliope stiffened and turned. \"My Lord.\" She added, bowing her head, and noting the dark expression on his face. When she rose he looked between them and gestured to Penelope. Calliope immediately understood his expression and meaning. She knows? He was asking. She was having the same thought.\n\n\"I...My lord, forgive me, but I said nothing. I thought only Demitri knew,\" his brow shot up at that, \"and he deduced it himself, I swear.\" She added quickly.\n\nPenelope, catching on immediately pipped up as well. \"Lord, you must forgive me as well for being so indiscreet. And it is I and not Calliope who have been so. What she says is correct, she told me nothing, I discovered it on my own. I've seen it in enough women. But I've told no one else, you may be assured of that.\"\n\n\"Sounds like something terribly interesting. What did you discover, my dear?\"\n\nBoth their heads snapped to the sound of the voice. Calliope's so hard it made her neck ache. Calliope winced as much as the pain in her neck as at the sight of Lady Nagi, then Kara, passing through the door way. She glanced at Thelios and watched with a silent groan as his scowl deepened. \n\nKara looked between her and Penelope and smirked as she walked toward the two women. \"That she was the veiled dancer, of course. The musician too no doubt?\" She pointed, waving a finger between Calliope and Penelope. \"I knew it was you in the black, and seeing her here only confirms it.\" As Kara neared them she winked and mouthed what looked like \"and pregnant.\"\n\nCalliope's eyes went wide.\n\n\"That was her? That was you?\" Lady Nagi asked, looking delighted.\n\nCalliope sighed and closed her eyes in defeat. Thelios made a sound of obvious displeasure. \"A farce, my life is definitely a farce.\" She murmured under her breath. She heard Penelope's subdued chuckle beside her.\n\n\"I should have known it.\" Lady Nagi mused, ignoring both Calliope's discomfort and Thelios's annoyance. \"Considering the way you ran off, brother. It's no wonder of course,\" she let out a low chuckle, \"no doubt after a performance like that you couldn't wait to get her alone.\"\n\nCalliope dared to meet lady Nagi's amused stare, but couldn't handle it long. She turned her pained look on Kara instead. \"How on earth could you have known? About the dance.\" she added quickly, still uncertain about what the woman had mouthed at her.\n\nKara shrugged. \"I told you before, very few women here move like you do...or have your precise height and bearing...plus you left just before the dance. It was sort of obvious. Wonderful legs by the way.\"\n\n\"Aren't they though?\" Quipped Penelope agreeably. \"They definitely go all the way up.\"\n\nCalliope winced and cast an apologetic glance toward Thelios who had settled into his chair. He didn't seem to notice as his attention was on his sister who had taken her usual place on the couch next to him.\n\n\"And you? What are you glowering about this time?\" Lady Nagi asked him.\n\nHe cocked a brow and graced her with a wry smirk. \"Do I need a reason.\" She smirked back, then turned on Calliope, \"Why didn't you tell us? I can't imagine why you'd keep something like that a secret. Can you?\" She challenged Thelios, who stared silently back. \n\n\"No one was meant to know.\" Calliope offered softly.\n\n\"Yes, but why?\"\n\nShe wasn't sure how to answer that without openly admitting she'd disobeyed Thelios. It was bad enough that Demitri and Penelope already knew she had.\n\n\"You know how they are.\" He rumbled, saving her from answering. His eyes flicked to hers briefly and she hoped he saw her gratitude. \"What they don't know, can't hurt me.\" He added with another smirk.\n\nLady Nagi chuckled. \"Indeed. Speaking of whom, are you coming tonight? That's what I came by to ask. We're on our way there now.\" \n\n\"No.\"\n\n\"No?\"\n\n\"No.\"\n\nShe sighed. \"You haven't been for several nights now.\" She looked to Calliope, perhaps for support, but Calliope found herself suddenly rather preoccupied with adjusting the dress pin at her shoulder and smoothing the wrinkles from the material. \n\nLady Nagi rolled her eyes.\"So that's it...just no?\"\n\n\"That's it.\"\n\n\"Hmph. Fine. It might calm them down a bit though if you came. They're getting rather antsy.\"\n\nHe said nothing but gave lady Nagi what Calliope thought was a very pointed look before letting his eyes drift in her direction.\n\nCalliope straightened. \"Well,\" she began, in what she hoped was an air clearing voice, \"thank you very much for the gift Penelope, it was very kind of you to bring it to me.\"\n\nPenelope took the hint gracefully. \"Oh, my pleasure. But I really should be getting along.\" She turned to Thelios and his sister, \"My Lord, my Lady, good evening to you.\"\n\nThey both nodded and Penelope made a quick exit. Calliope thought it best to do the same. \"If you'll excuse me as well.\" She didn't wait for a reply but bowed and slipped away into the bedroom.\n\nShe busied herself draining the bath and removing the damp clothes she'd left on the stone steps. She also stepped out briefly to find one of the household slaves in order to procure a proper dinner since they once again wouldn't be leaving their rooms for the evening. When she returned to the bedroom he was already there lounging on one of the couches, a game of Senet sitting on the low table before him and another empty couch waiting on the other side.\n\nShe couldn't help but smile. They'd been playing it, and other games, to pass the evenings. She was relieved to see it again as it meant he wasn't unduly irritated with her just yet. She also noted that he seemed to be a much more manageable size now that they were alone for the night. \n\n\"I'm sorry. I had no idea I'd been found out. It was as much a surprise to me as to you.\"\n\nHe was already watching her. \"On which account?\"\n\n\"Both.\" There was another pause and she shifted uncomfortably as she sat across the table from him. \n\nHe simply nodded and reached for the counting sticks laying next to the board. Nothing more was said that did not pertain to the game before them, and she was happy to leave it thus. They were half way through the game when Demitri knocked and called out on the other side of the door, only opening it once he was sure all within were not indisposed.\n\nShe rose and took the tray he was carrying as he turned to fetch the other one. \n\n\"They left it in here.\" He explained as she unloaded her platter, arranging the smaller bowls and plates so that they wouldn't interfere with the game.\n\nDemitri did the same with his own, adding a few plates of fish to the mix. It was relatively familiar fare, and she easily recognized most of it, including the grilled octopus, a personal favorite. There were two other small bowls she didn't recognize, one a kind of dark mollusc, and the other she thought might be eel, but she couldn't tell. What ever it was it was half drowned in oil. She eyed it askance and opted to snatch up a chunk of the octopus instead. \n\nThelios was watching her, and she wondered what he was smirking at as he accepted a cup of wine from Demitri. Demitri then helped himself to the wine\u2014 as well as to her seat. She gave him a 'look', which he returned with a wink. However she was more than happy to settle in next to Thelios when he motioned for her to join him. \n\nThey ate in silence, though it was anything but uncomfortable and everyone seemed content to let it stand. Demitri made himself at home on her vacated couch while she and Thelios restarted their game between bites. \n\nShe lost and Demitri took over her part as she reclined with a sated sigh, stretching out along the couch and sliding her feet behind Thelios. He was leaning forward with his elbows on his knees but reached over to run an absent hand over her bent leg, never taking his eyes from the board. She watched as he threw a three and chuckled at his sound of annoyance. \n\nShe leaned in and stole his wine cup from where he'd left it on the table and rubbed her ankle against the small of his back. \n\nThey continued to play in relative silence. Thelios ignoring her save to steal, and steal back again his cup of wine. Though that was also the only time his free hand left off its distracted exploration of her calf and thigh.\n\nCalliope let her mind wander, fluctuating between ruminations on her and her master's present situation and dwelling on warming memories from earlier that evening ...and other evenings. The light caress of his fingers against the tender skin at the back of her knee and calf did little to discourage such thoughts. More than once she had to fight to keep the flush from her cheeks.\n\nThey were on to a third game when she felt his caress turn into a grip. It wasn't painful, or even obvious, but she noticed the change in pressure. \n\n\"What?\" she asked, examining the board when he made a sound of irritation. She couldn't see why. It looked as though he were winning.\n\n\"It doesn't make sense. This is all wrong.\"\n\n\"What is my lord?\" She asked looking curiously between him and the board.\n\nHe sat silently and they both watched him.\n\nHe grunted. \"Phineas. This just isn't him. It....\" he made another sound of frustration. \"What do you think Demitri?\"\n\nDemitri shrugged. \"I have to agree, based on what I know of him...but sometimes you think you know someone...\"\n\nHe shook his head. \"I've known him a long time. Since he was a child.\"\n\n\"I don't know what to say. I'm not arguing against him, but sometimes people surprise you. It would be nice if people wore their hearts on their sleeves, but they don't always. Rarely in fact. I knew a general, smart, capable, but he was still fooled by an officer of his...thought he was all goodness and love, we all did. We discovered he'd been conniving behind everyone's back, setting them against each other in order to advance his own career...but not before lives were ruined and innocent men put to the sword.\"\n\n\"Indeed, none of us three are prone to display our outward feelings...unless they do us some service.\" Calliope offered.\n\n\"I'm not saying he's perfect, or forthcoming about all and sundry...but he's just not power hungry. And if he wanted something of me, he could just ask. He knows that. Something is going on, and I'm not going to discover what it is by sitting here and waiting.\" \n\n\"Well, who did they hear it from? That he was the thief?\" Demitri pressed.\n\n\"The Gorgons, you know that.\" Thelios growled irritably.\n\n\"I don't suppose there's any way you can check that information for yourself then?\"\n\n\"Too dangerous. Callea has ways of protecting herself, I do not. Ironically I would have asked Phineas to go check for me since he was always so friendly with them.\"\n\n\"You don't think he might be controlled by something else, do you?\" Calliope asked toying with the cup of wine in her hands.\n\nHe gave her a sidelong glance. \"Honestly, the thought had crossed my mind. What makes you think that?\"\n\nShe shook her head and shrugged. \"I don't know my Lord. But I've never known you to be unreasonable about this sort of thing. If you think something is wrong, then something is probably wrong. If he's not capable of this sort of thing, then maybe it isn't really him, despite appearances to the contrary. Perhaps someone is pretending to be him, or manipulating him with magic.\"\n\n\"It's possible.\" Demitri mused. \"But then what do we do? If he's being controlled by someone, he is still dangerous...\"\n\nCalliope turned back to Thelios with the intention of adding her thoughts to that, but hesitated when she found him gazing at her with a strange expression on his face. He looked slowly back to Demitri. \"I'm not all that worried. His advantage is my advantage.\"\n\nShe frowned. \"The thing he stole?\"\n\n\"No, the water. We're on an island...that makes my brethren a little nervous and I bet they're wishing they'd chosen something a little more land-locked to hole up in.\"\n\n\"I don't understand.\" She leaned toward him, resting her arm on her bent knee. He paused a moment then let out an almost imperceptible sigh. \n\n\"Our mothers are both Nereid. Sisters. Making him both my cousin on that side and nephew...or great nephew I suppose, on the other. I can't say I know how it works exactly...I've never been all that interested in finding out, but it seems like our abilities, the abilities of our dams and sires, are drawn from the elements. Callea uses fire, it seems to be the core of her sorcery. Phineas...and I, water. In water neither of us have the advantage of power over the other...but my strength is more immediately available to me. He's more...a seer. He can use sorcery, can manipulate the element in ways I cannot...but his manipulations have little affect on me. Not, at least, the way it affects others. He can control the element in a limited way, but not against me. Not effectively at any rate.\"\n\n\"So your affinity to the element protects you then?\"\n\n\"Yes.\"\n\nShe nodded, satisfied. That, at least, was a comforting thought. If he wasn't worried then there was less reason for her to be. In fact he seemed more upset by the fact that his friend was implicated in a betrayal than that he could actually hurt him. He seemed calm enough, not made rash with anger or fear, so there was no reason to doubt him. \n\nDemitri let out a heavy breath. \"Well, it'll wait until morning I suppose. I'll meander a bit before I settle in for the night. One of the cyclops's girls has a loose tongue.\" He smirked. \"Maybe I'll find a way to loosen it all the more, eh?\"\n\nCalliope rolled her eyes and Thelios chuckled.\n\nDemitri sobered. \"Put it from your minds. Get some sleep...both of you. I don't want to be a pessimist, but I've got a feeling it's going to get ugly before long, and I don't doubt you'll need your strength.\"\n\nShe smiled tiredly and nodded. \"Good night, Uncle Demitri.\" \n\nThelios raised a brow at her and Demitri grinned. \"Good night, Cali-girl. Don't fret too much. I know you're wont to.\" He smiled warmly at her and she felt suddenly very grateful to have a man like him for a friend. \n\n\"Let me know what you hear Demitri.\" Thelios rumbled. \"And good hunting.\" He gave the man a final, smirking grin before he left.",
        "When the door closed, Calliope drew her legs back under her and knelt before her master on the couch. \"You shouldn't encourage him.\"\n\n\"Why not?' He still wore his grin, and her censure did nothing to abate it. Quite the opposite in fact.\n\n\"It's immoral.\" She belied the sentiment with her own poorly hidden grin. \n\n\"Is that so?\"\n\n\"Mmhm. You're a terrible influence.\" She leaned forward on the palms of her hands and tilted her chin up to meet his hand as he reached out to grasp it. He leaned in as well, his sun colored eyes burning into hers, and she found herself wetting her lips automatically, her eyes flicking to his mouth and back again.\n\n\"I had no idea you thought that about me. That I am a bad influence.\" \n\nShe resisted the urge to grin wider when his own eyes also flickered downward. \"Yes. You're a very, bad, man. You told me yourself once that you weren't a very nice person. Remember?\"\n\n\"I might recall something like that.\" He surprised her by releasing her and pulling away. But his smile took on a new heat as his eyes raked over her. He turned himself to face her fully, sitting so as to straddle the backless couch, and leaned back. \"Do you know what I think?\"\n\n\"What, my Lord?\"\n\n\"I think that behind every bad man there's a very bad woman.\"\n\nShe laughed. \"What, corrupted you? Not I?\"\n\n\"You.\" He sighed theatrically. \"I had so much potential, but you've ruined me.\"\n\nShe did grin at that...and slid a hand up one of his thighs, letting her fingers tease beneath the edge of his wrap. \"It can't have been me.\"\n\n\"I say it is you. And it just so happens that I'm always right.\" She watched his face carefully, but he showed no reaction to her exploring hand.\n\n\"Ah, but my Lord, it's not possible. You see I'll admit to having been in front of you, above you, and more often than not, beneath you...but never behind you. I haven't the right...parts, for such things.\"\n\nHe chuckled again, though his expression told her it was despite himself. She reveled in the victory. \n\n\"Do you know what else I think?\"\n\n\"What, Master?\"\n\n\"That you're a little overdressed for the occasion.\"\n\nHer own grin turned tremulous as she felt the heat of his gaze suffuse her skin. She found herself biting her lower lip as she pulled the pin from the shoulder of her dress and held the bunched cloth against her breast. \n\nIt wasn't as if she were unused to being nude before him, or unused to the dark, fiery expression slowly claiming his features, but still, she couldn't ignore the nervous fluttering in her stomach, nor the hot flush of anxious excitement crawling over her skin.\n\n\"What occasion is that my lord?\" She asked in a soft voice as she dropped the fabric and allowed it to pool loosely around her knees. Her eyes darted away from his and downward, catching for a moment the sight of her own already blushing breasts and the pebbled flesh gracing their tips. \n\nShe gazed up at him through her lowered lashes, fighting the sudden inclination to cover herself and escape those burning eyes.\n\nHe didn't answer, but reached for her. Yet, instead of pulling her into his arms or up to his lips as she expected him to, he turned her so that she was seated between his legs, her shoulders resting against his chest.\n\nShe relaxed into his embrace as his arms wrapped around her, and let out a contented hum of pleasure when she felt his lips brush against her ear and trail hotly down the length of her neck. \"Well,\" he began again, his voice a deep rumble that echoed beneath her skin, \"the occasion that I learn you how to be bad.\"\n\n\"Bad, or very bad?\" She whispered distractedly, her mind only barely keeping up with his words, and not at all able to come up with anything clever...though really, he sounded like he was having the same problem.\n\n\"Very, very bad.\"\n\n\"As bad as all that?\"\n\n\"Worse.\" It was more growl than word, and she swallowed hard.\n\n\"And h-how do you propose to do that?\" She stuttered breathlessly as he suckled lightly on the flesh of her throat. \n\n\"If you don't have the part...I'll just have to give it to you, won't I. And teach you through example. Do you think you can keep up with the lesson, sweet?\"\n\nShe let out a sound that was something like a laughing moan and pressed firmly against him. She could feel the part in question rubbing against her back.\n\nHis arms squeezed her once before loosening, letting his hands smooth over her sides and across the tops of her legs, his fingers curling in to grip the insides of her thighs, pulling them apart until they were pressed to his. The flush of her skin became a burn as her full focus was drawn to the sensation of cool air against the rapidly dampening folds of her sex and the pulsing throb within. \n\nHe didn't stop there but pulled her higher against his body, and shifted her legs so that they rested over his, dangling and stretched wide on either side of his spread thighs. \n\nShe squirmed as his teeth grazed her shoulder and reached up run her palm along his rough cheek. His hands left her and she felt the cloth between them pull away, leaving his smooth, hot length pressed against her back. His hands returned, this time capturing hers and pulling them up by the wrists to wrap around his neck. \n\nHer legs remained where he'd placed them, held apart by his own, leaving her unable to squeeze her thighs to satisfy the persistent throb at their apex. She ground her hips instead, half in frustration, half in encouragement, earnestly hoping he'd accept the invitation. \n\nShe let out a moaning sigh and gripped his neck as his hands moved down her arms and body, one pausing to cup the swell of her breast, and the other passing lower to cover the heat between her thighs. She pressed against him, but his fingers refused to do anything but tease her thighs and outer folds with the lightest of caresses. \n\nShe dropped a hand to press his more firmly to her, pushing his thick middle finger deeper with her own, and grinding her hips to slide him along her wet slit. She felt the vibration of his chuckle as he allowed her to use him to pleasure herself. But the allowance was short lived, and he caught up her hand, replacing it around his neck.\n\n\"Hang on. Don't let go.\" The whisper in her ear sent a shiver through her. \n\n\"I won't.\" She whispered back, tipping back her head and turning her mouth until it brushed against his jaw.\n\nHis hand returned, still teasing, but she was content for the moment to let it be, focusing instead on the sensation of his other hand gently fondling her breasts. They were still tender and she bit back a wince when his grip became firmer. She could feel his lips and breath, incongruously light against her neck and she tipped her head to give him access to her throat.\n\n\"Still tender?\" Another hot whisper, another shiver.\n\nShe couldn't bring herself to speak, but nodded breathlessly. He left off his caress, sliding his hand lower to rest over her stomach. She tensed, concerned that he might once again pull away. She needn't have worried however, as his other hand made up for the loss by finally squeezing her sex, pressing his fingers into the furrow and teasing her entrance with delicious pressure. They slid upward, pausing to firmly grip and roll her sensitive nub. \n\n\"Tender here as well?\" She could hear the wicked smile in his voice as she whimpered and bucked against him.\n\nShe opened her mouth to answer, but all that came out was a sharp cry of pleasure. It was almost too much, painful even, but she was loathe to stop him and would gleefully suffer worse. She bucked, hoping to impel him lower, closer to her center and that waiting, wanting emptiness. Despite her encouragement, he continued to pull cruelly on that captured pearl of flesh. \n\nShe groaned and grit her teeth. \"Please..\" she breathed.\n\n\"Please?\"\n\n\"Inside...\" She gasped, \"I-I want you inside...\"\n\nHe let out another of those chuckles of his...the kind that made her want to hit him and kiss him at the same time. \"Is that really what an bad girl would say?\"\n\n\"Yes, dammit!\" She panted, thrusting her hips up to him.\n\n\"Your going to be a difficult student aren't you.\" He rumbled against her shoulder. She bucked again in response. But to no avail. He continued to waver between light caresses of her thighs and outer-folds, and gripping and tugging her clit, but never gave her the satisfaction she craved.\n\nShe grit her teeth and dug her fingers into the back of his neck to keep from grabbing his hand and putting it exactly where she wanted it herself. \"Do something.\" she groaned. \"Stop teasing me!\"\n\n\"Do what?\"\n\n\"Oh for the love\u2014fuck me already. Fuck me...with your fingers, your cock...I don't care, just do something!\" Her words devolved into a frustrated whimper as her hips jerked once more under his fingers.\n\nHe made a terrifying, shudder inducing sound...one that made her insides clench with pure, desperate need. \"Much better.\" He growled. \n\nShe pushed up her hips, spreading herself as widely as she could, and this time was rewarded with first one, than two thick fingers pressed inside of her. He moved slowly inside her, drawing and stretching her flesh around him, pressing deeply and lingering there.\n\n\"Stop me if I'm too rough.\" His voice was harsh and tight.\n\nShe shook her head against his shoulder. \"I wouldn't stop you for the world.\" She moaned, earning her a low laugh. \n\n\"I won't stop...just...\" His breath hitched slightly as she clenched down around his fingers and dropped a hand down behind her and between them to wrap around his cock. \"I don't want to hurt you.\" He ground out as her hand squeezed him in sympathy with her body. \n\n\"Calliope...\" He warned, when she didn't respond, except to grip his cock more firmly. He began drawing his fingers from her. \n\n\"Alright! Fine,\" she panted, \"don't stop...I'll tell you...just don't stop.\"\n\nHe was laughing at her, she could feel it shudder through his chest. But his fingers didn't stop, so she decided he could laugh all he wanted. \n\nShe tried to reward his acquiescence by stroking him in return, but the angle was awkward with him trapped behind her, so she simply limited her own efforts to the occasional encouraging squeeze. Eventually even that became too much to keep up as he quickened the pace. \n\nAnd quickened still. She could feel herself building, and her breath came with difficulty.\n\nSomehow managed to remember herself and caution him as his thrusting fingers became rough and jarring...bordering on that wonderful-strange cusp of pleasure-pain where he'd brought her so often before.\n\n\"Careful...\" she gasped in warning, and sorry to have to do it. She could admit, to herself at least, that part of her took perverse delight in his rough handling of her body. Never really hurting her, not usually, but always a little too hard, a little too eager...demanding. It excited her.\n\nShe groaned in disappointment as his fingers left her once more. They came up to cup her chin, letting her feel her own wetness still on his fingers. And the scent of it...it only rouse her further. The fingers tipped her head back firmly and she twisted in his arms until his mouth found and roughly claimed hers. \"Good girl.\" He growled softly against her lips.\n\nShe let out a broken gasp of a laugh. Had he been testing her then? The bastard. \n\n\"I thought good wasn't what we were aiming for.\" She returned, still half panting with arousal as she did her best to taunt him back.\n\n\"True. Thank you for the reminder.\" He patted her cheek and grinned in a way which made her rather nervous.\n\nShe let out an indecorous squeal as he took her by the waist and rose, hauling her across the room in a few long strides, only to deposit her stomach first on the bed. She had barely pulled herself onto her knees when his hands found and gripped the backs of her thighs and pulled them toward him, spreading her wide. \n\nShe melted under his hands as they ran from her shoulders to her hips, encompassing and gripping her\u2014 the dip of her waist, the rounds of her breasts, the length of her arms, the curve of her hip and thigh\u2014filling his hands with her. Everywhere he touched tingled with excitement...as if her body had been clay, not brought to life until he'd traced its shape with those zealous fingers. \n\nHer wits left her entirely when she felt his tongue join his hands and burn a broad trail up between her thighs and through the smooth furrow of her sex. She pressed into him as one of his large hands clapped over the globe of her ass, kneading it firmly in time with his wonderful, piercing tongue.\n\nShe gasped and felt herself burn with excited embarrassment as first cool air and then a hot, wet mouth passed over the small, hidden star of her anus. Then passed again...and again. \n\nCalliope bit her lip and held her breath. It wasn't the first time she'd felt his tongue or fingers brush or press her there...but this time he seemed to linger. She bowed her head and thrust her hips up, trying to ignore the conflicting urges to pull away and push back, and instead encouraged him back to safer grounds. She failed, and instead of sliding back to satisfy the throbbing of her sex, he paused and replaced his tongue with the pads of his fingers.\n\nShe shifted nervously as he toyed with the tight little knot of flesh, noticing, after a nerve wracking moment, that his fingers were slicker than they should be. She was certainly wet enough herself, but this was a different sensation entirely. \n\n\"M-master?\" She stuttered out in a horse voice, casting a nervous glance over her shoulder. She regretted it when she saw the small, dark smile on his face as he knelt over her, and even more so when she spotted the unstopped vial on a little table near the head of the bed. It was probably her imagination, but she thought the scent of olive oil had joined with the scents of incense and arousal suspended in the air around them.\n\nShe started to sputter something, but he hushed her and ran a firm hand up her back, massaging her neck and shoulders in a way not unlike their first night together. The parallel did little to ease her fear.\n\nShe gasped as one thick digit pressed into her. The pain was minimal compared to the strangeness...and shame, of the act. \"Th-Thelios, please.\" She whimpered. \"Not...I...n\u2014\" She choked on the already incoherent words as he worked deeper into her.\n\n\"Relax.\" He suggested calmly. She shook her head vehemently. He was sliding now, back and forth within her, the oil easing his way. All she could focus on was the sensation of his moving in her. A particularly deep stroke made her gasp, and made her empty cunt clench.\n\n\"Can't...this\u2014this isn't right.\"\n\nHe paused his slow fucking of her ass, and she felt his body lean over hers. When he spoke his breath was hot against the nape of her neck. \"Why not?\"\n\n\"I-it's not done by...\" she whispered softly, then fell off in a groan, both from the sensation and from the sudden wave of understanding. It wasn't done by women of repute...good women...wives. It was done by whores...or by slaves. He made it so easy to forget what she really was. She felt a lump in her throat and squeezed shut her eyes.\n\n\"Well?\"\n\nShe nodded faintly. \"You-you're right Master.\" She choked out, then added in a hoarse whisper, \"I'll...try.\"\n\nHe said nothing more, but after another long pause was moving in her again. She offered no more resistance, only buried her burning face in her arms and squeezed the balled sheets into her hands. \n\nIt was difficult to obey, to relax. Or it was until his free hand slid along the underside of her body, toying with her breasts before moving back to cup her sex, squeezing and massaging the swollen flesh of her pussy and slowly pressing into her to curl his fingers deeper inside her. The next sound that came out of her mouth was most certainly not one of fear or pain.\n\nAnd indeed, despite the initial discomfort, she found herself rocking her hips against his two probing hands, doubly impaling herself on his fingers, giving in finally and allowing herself to chase after the gratification which had been eluding her. \n\nIt was strange and unfamiliar, this way to pleasure...but she couldn't deny the effect it was having on her. How could she when, despite her flushed, embarrassed cheeks, she was panting and thrusting against him with feverish need.\n\nIt wasn't long before all pain faded completely and she was too distracted by this new building to worry about anything else...but then one finger became two.\n\nShe grunted softly, though her hips never ceased their restless shifting as he stretched her wider. The pain returned, but this time there was something else there now as well, something strange and dark....and utterly erotic. She found herself pushing back against him with panting groans, wanting that strange something even deeper inside of her, forcing herself past the pain to follow it.\n\nBehind her, above her...all around her, she could feel him, could feel his own desire building. His breath was rough and harsh and his stroking fingers became that much more demanding. So close...she was so close...\n\nAnd then it was gone, all of it. She cried out at the loss, grinding her hips in the air, her mind focused on nothing but the overwhelming sense of gaping emptiness she felt. So full...she'd been so full...\n\nShe moaned in both pleasure and fear as she felt him press tighter to her, wrapping an arm around her waist as he ground his hips into her ass, letting the thick length of his cock slide between the globes of her now well oiled flesh. The mushroomed head was so hot and hard against her that, despite her trepidation, she found herself rocking her hips against him whenever it pressed against that small entrance.\n\nCalliope tried to relax, to accept it...but she couldn't. She tensed up and shut her eyes tight, waiting for the pain she knew was coming. \n\nShe gasped in surprise, her eyes flying open as he slid into her...and as the willing flesh of her incredibly wet cunt fluttered around his more than welcome length. Her moment of shock was tinged with no little relief as he slid slowly in and out of her sex...but there was perhaps a pang of disappointment as well. \n\nShe cast a glance over her shoulder at him, questioning...he seemed to have been waiting for it. His hand caught in her hair, pulling her face back toward him as he leaned in over her. She half swooned at the feel of him as the movement forced him deeper within her, and at the sensation of his teeth and fangs grazing the length of her neck...and the sharp tug of his fist in her hair. The moan that escaped her was rough and raw.\n\n\"Not tonight. But be assured, I will fuck this ass eventually.\" He promised her, digging his two fingers back into the tight, oiled flesh, filling her once more. So very full. She felt her insides clench, sending a warm, wet flood down his retreating cock. His dark laugh did nothing to stop the waves of heat and lightening running through her. \"You like that, do you?\" \n\nShe didn't answer. It was hardly necessary when, as always, the answer was so humiliatingly obvious. She was grateful he didn't require she say it aloud and merely continued to slide in and out of her body in a slow and unhurried way. \n\nHer climax came over her in slow waves, as if from some distance place, radiating in a kind of strange dark energy out from her center, to some distant point far outside of her body, pulling and stretching her along with it. She heard a low, deep sound from that same far off place\u2014 distant, indistinct words, spoken in a low voice, a voice which itself became a consuming caress, filling her and wrenching from her that exquisite agony until there was simply nothing left in her to take.\n\nCalliope could only hang on, half limp beneath him, marveling at the feeling. So full...she'd never have thought she could feel so...that he could fill her more than he already had...",
        "He pulled out and away from her, leaving her empty and trembling on her elbows and knees. She made no movement or sound, except a soft gasp as he returned, and without preamble slid back inside of her now hyper-sensitive flesh. Her eyes fluttered closed and she tried to breath deeply and calmly. He had to yet to find his own pleasure. They weren't done just yet.\n\nHe wrapped his arms around her and pulled her up-right and flush against his chest as he rocked back on his knees. She groaned as the weight of her body forced her as far down his shaft as she could take him and waited for him to grab her waist or hips and begin to piston into her as he had done so often in the past.\n\nBut he didn't. Instead he remained almost still as she listened to his harsh breathing, and felt his cock twitch and throb inside of her. He merely held her there, filling her, with his arm wrapped tightly around her. \n\n\"Thelios?\" She whispered, her voice a tremulous rasp. It wasn't that she didn't enjoy the embrace, or the feeling of him pulsing inside of her like that...but the longer he held her the more unusual the moment became, and the more uncertain she became.\n\n\"Mmm?\"\n\n\"Is something wrong?\"\n\nHis lips brushed her shoulder. \"Why would you think that?\"\n\n\"You....you're not moving.\" she gasped softly as he ground into her, his length pulsing inside her again.\n\n\"You don't enjoy this?\"\n\nShe inhaled with pleasure as his fingers found one of her nipples and tugged it gently. She shook her head. \"No...yes, I mean....I like it.\" She breathed, arching against his hand. \"Do you?\"\n\nHe made no answer except a humming sound of affirmation and pleasure. \n\n\"But, if you're so anxious to move...\" he offered after another moment, and shifted to extend his legs beneath them, \"by all means.\"\n\nCalliope was forced to find her balance as he released her and lay back, leaving her astride his hips with him still buried deeply inside of her. \n\nShe glanced over her shoulder. He had made himself comfortable with one arm crossed behind his head, and was gazing down appreciatively at her bottom as his other hand lightly traced the shape of it. There was a small smile playing at the corner of his mouth. She couldn't help but find a smile of her own.\n\n\"How's the view?\" She asked with a soft chuckle.\n\n\"Magnificent.\" He rumbled back, pulling his eyes back up to give her one of those soul melting looks of his. She looked away and leaned forward, simultaneously balancing herself with her hands on his thick thighs, and letting his length slide out of her until only an inch or two remained. She paused, then let it slide back in again. She grinned when she was rewarded with a moan of pleasure from the mountain beneath her. \"I love watching my cock disappear into you like that.\" He growled. She flushed and swallowed a moan. \n\nShe was happy to provide him with a repeat performance, working her body slowly up and down his shaft until she herself was near trembling with the desire to just ride him fast and hard until they were both spent and exhausted. She couldn't see his face, but she could hear his groans turn to growls and felt his fingers bite into the flesh of her hips and rear. \n\nYet still he let her move as she would. She wondered if he was enjoying the torture, or was simply still anxious about hurting her. In the end it didn't matter. He might have been able to control himself, but she certainly wasn't...\n\nShe sped her movements, rocking her hips with increasing urgency...gasping as the head of his cock began to batter against the entrance of her womb in that wonderful, almost painful...\n\nCalliope stopped with a gasp and a curse, her nails digging into his thighs, her hips shifting anxiously despite her attempts to still herself. Careful, she'd promised to be careful...they had to be...but how the hell was she supposed to do that?! She growled in frustration.\n\nThelios came to her rescue and pulled her back against him and turned to lean them both on their sides, never leaving her body. He lifted her leg up over his hip and held her tightly as he began to pump into her with quick, shallow strokes.\n\nShe was happy to have as much of him as she did...but she wanted more...wanted him deeper. She told him as much in a low and pitifully desperate groan. He didn't comply. Instead he nipped at her ear with his teeth. \n\n\"Touch yourself.\" He ground out, still grazing her ear and neck with his fangs. \"Touch your cunt for me. Now.\"\n\nThe words may have excited her, but the fierce snarl in his voice made her see red. Her fingers flew to the apex of her sex, and the moment she pressed against the hard nub of her clit the rest of her snapped as taut as a drum skin. And like that she was over the brink, gasping desperately for air as her sex spasmed wildly around him.\n\n\"Faster. Don't stop!\" He ordered roughly, his hands tightening around her hips. She whimpered and bucked, but managed to heed him. Desperately she crushed her fingers into her flesh, gasping and jerking as shock after shock of literally gut wrenching pulses were forced through her body. \n\nHe was moving faster in her, and deeper...her fingers could feel his thickness filling her each time he thrust back inside of her. Her limbs strained and shook. Her pulse pounded loudly in her ears, behind her eyes...throbbing to fill her panting mouth and swollen lips.\n\nHis hand came down hard over hers, suddenly, gripping her hard. His teeth dug into her shoulder as he thrust one last time, seating himself deep inside of her and grinding his hips as he pulsed, spending his seed with a long, low moan. \n\nThe sensation sent another, deeper wave of pleasure through her. She arched and let out her own sobbing cry as her body clenched and shuddered uncontrollably. Her hips jerked fitfully as tiny after-shocks rattled through her center, leaving her whimpering and breathless.\n\nCalliope shook and trembled in his arms for some time after, unable to find the will or energy to do anything else. He simply held her like that, cupping her body with his, until his own harsh breaths became slow and even once more. \n\nHe spoke, but she was too groggy to make sense of it. \"Hm?\" She wriggled slightly tilting her head back toward his, though he still remained out of view. He tucked his arm beneath her head as she lifted it to catch him in the corner of her eye.\n\n\"I asked if you were all right.\"\n\nShe smiled tiredly and nodded. \"Yes. Better than all right. Much better.\"\n\nHe returned the smiled and she felt the pad of his thumb swipe across her cheek. \"This is something I haven't seen in a little while. I'd be worried if I wasn't sure I hadn't hurt you.\" She frowned at his strange words and lifted her own fingers to her face. She understood when she felt the wetness there. She had no memory of crying and wondered when it had happened.\n\n\"How strange\" She murmured. \"I don't remember it at all.\"\n\n\"I didn't hurt you...did I?\" She smiled at the rare note of uncertainty ringing in his voice.\n\n\"No, you were right to think you hadn't. I'm fine.\" And she was. She tingled all over, and her muscles still twitched and pulsed now and then, but she lacked her usual heavy ache. She yawned and nestled in against him, making happy, if sleepy, sounds of approval when she felt him cover them both with sheets.\n\nHe made a satisfied sound of his own. \"Then sleep well my sweet, teary wench.\"\n\nShe laughed softly, feeling his own near-silent chuckle reverberating in his chest. \"And good night to you my handsome, fanged beast.\"\n\nHe nuzzled her with another, deeper chuckle. \"I like that.\" He growled softly against her hair.\n\n\"I thought you might.\" \n\nAs she began to drift he squeezed her tightly to him. He sighed contentedly.\"I...Good night, Calliope.\"\n\n\"You what?\" she murmured, wondering what he was going to say.\n\nHe kissed her shoulder. \"Nothing. Go to sleep...I command you.\" He added in a low drawl.\n\nCalliope smiled against his bicep. \"As you wish.\" She smirked, still wondering what he had begun to say...but too exhausted to do anything but comply. \n\n%%%\n\nCalliope had decided that she was determined to help. However, this was easier said than done.\n\nTo begin with, there wasn't a great deal she had to offer. She tried to be attentive and supportive in the few ways she was able. Certainly he was no more inclined to discuss what troubled him than he usually was, but she was pleased to listen and offer her thoughts in the rare moments he was. \n\nBut what she really wanted was to be truly useful to him. More....proactive, in her assistance. As far as she was aware, the only way for her to do that was by continuing to gather what information she could.\n\nAnd indeed, she had managed to glean what she could from both Penelope and Kara but in the end none of it added to what Thelios and Demitri already knew. It was a frustrating endeavor since her circle of acquaintances was rather small, and she had done little to make herself liked among the women of the place. She had no one to blame but herself, however. Her reserve, though it seemed to amuse Lady Nagi, endeared her to no one. And she had been quite content to follow her master's example when it came to the others...and now she was beginning to regret it.\n\nShe'd also noticed, with chagrin, that the male slaves and servants kept their distance completely. Not that this should be surprising to anyone, all things considered. It was unlikely anyone had forgotten the rather dramatic scene in the entrance hall when they had first arrived. \n\nStill...something was going on and she wanted to know what, especially as it affected her master. It might have been her imagination, but it seemed as if far too many conversations came to abrupt halts as she neared people in hallways and there were certainly nothing to warrant all those sly, sidelong glances she seemed to be getting from all corners either. If she was with Thelios, certainly. It was hard not to stare at a giant wearing nothing but a hip wrap and a fearsome scowl. \n\nBut then, she might just be becoming paranoid.\n\nShe was headed back to their rooms after trying, and failing, to find any new information from Penelope. The air seemed full of whispers and anxious glances, yet she could find nothing secure to pin the growing tension on, and nothing more on the movements of this Phineas character at all.\n\n\"Excuse me...\" She blinked at the clear, male voice which cut through her musings.\n\nShe turned at the sound to find a man, dressed in a simple white toga and a dark green cloak. The cloak looked well worn with travel, and was tossed casually over his shoulder. He was also holding a walking staff, which was unusual in a place like this, but other than that he seemed innocuous enough. He had a pleasant countenance topped with a mop of sandy blonde hair, and his expression was mild. He was watching her with a faint frown...or rather watching about an inch or two to the left of her. She glanced over her shoulder but there was nothing there.\n\n\"Yes?\" She continued to take in his appearance and noticed his eyes, still looking in the wrong direction, were the strangest shade of blue. So pale...almost...\n\n\"Oh, you're blind!\" \n\nShe clamped her hand over her mouth, aghast at her rudeness. \"Forgive me!\" She gasped. \"That was intolerably rude of me.\"\n\nHis face split into a warm smile and he laughed softly. His smile made him suddenly handsome and she felt herself smiling back. \"There is nothing to be sorry for my Lady...but if you're feeling penitent, perhaps you might assist me in recompense.\"\n\n\"Of course. I'd be glad to.\" \n\nHe lifted his hand and patted the arm of a statue next to him. \"I'm afraid I can't find my way around this infernal labyrinth.\" It was her turn to chuckle. She stepped forward, taking his hand from the statue and placing it on her own arm. He stiffened slightly at her touch, but relaxed quickly. He also got a strange look on his face...but that too passed. She must have startled him, and felt foolish for not warning him. He was blind after all.\n\n\"That, I fear, is the nature of this place.\" She offered gently as he fell into pace beside her after draping his staff across his back with a long strap. \"It has nothing to do with you. Hades knows I can't seem to keep these halls straight either.\"\n\n\"Perhaps I should find another guide then?\" \n\nShe smiled. She could tell from his tone he was jesting, but he wasn't totally wrong. \"Well, I'll do my best, and if that fails I'm sure I can find another slave who knows this place better than I.\"\n\n\"That's very good of you.\"\n\n\"Now, tell me, what is it you're looking for?\" She asked as she led him slowly into the corridor with her.\n\n\"A friend of mine. He is a giant of a man, distinctively gray in hue, with short horns, stubborn streak a league and a half wide...I think he's known by most here as the 'Shepherd'.\" He paused and chuckled again. \"I take it you know of whom I speak.\"\n\nShe glanced at him. \"How...how can you tell?\"\n\n\"We blind folk have other ways of seeing.\" He murmured enigmatically. Then he ruined the effect by grinning widely. \"And you tensed up a bit there. You seemed surprised.\"\n\n\"Ah.\" She had been.\n\n\"So?\"\n\n\"You're in luck, it appears. If I'm not mistaken the one you speak of is my own master.\"\n\nHe tipped his head toward her. \"Then you might be mistaken. He doesn't keep slaves. And has no woman that I know of...\" He sounded more curious than disbelieving.\n\n\"That's what they keep telling me.\" She murmured with a sigh. \"What is it you want with him, if I might ask?\"\n\nHe smiled pleasantly, falling into step with her. \"I'm delivering an important message. For his eyes only.\" He tilted his head toward her and tapped the side of his nose with a chuckle. She smiled back, though with less sincerity. He seemed pleasant...and harmless...yet there was something strange...\n\nShe frowned. \"It's lucky we ran into each other.\" she commented, watching his face. He tilted his head slightly toward her as if following the sound of her voice. \"Convenient.\"\n\n\"Indeed. I couldn't have been more fortunate. Tell me...is Demitri still around?\"\n\n\"Yes.\"\n\n\"Ah. Interesting.\"\n\n|\n\n|\"Why's that?\"\n\nHe shrugged. \"Like I said...your master...if he is that, isn't one to keep slaves or servants really. Demitri was the exception...I thought perhaps you were a replacement of some sort. Can't imagine why he'd need more than one. He was just fine without Demitri for that matter... not that the roughian isn't excellent company once you get him in the drink. Thelios too for that matter. \" He added, muttering absently to himself.\n\nA comment Demitri had once made about that echoed in her head...something about them not providing the same type of 'services'. She almost reiterated it out-loud but caught herself with a faint blush. It might be the sort of thing she'd repeat to Thelios or Demitri...or even Penelope for that matter...but not to a stranger. She made an noncommittal sound which might have been agreement, but said nothing more.\n\nHe chuckled. She raised a brow at him. \"Something amuses you?\"\n\n\"Oh? Hm. No...just a stray thought is all.\"\n\nShe still had a creeping feeling something wasn't quite right, but couldn't put her finger on it. But then it was an odd scenario, and Hades knew she'd been a jumpy paranoid wreck these last few days, and getting worse...perhaps it was just that. She decided to ignore it. For now.\n\nThey had walked a little ways in silence, when he gripped her arm, stilling her. She paused and watched in confusion as he stepped back, keeping them from entering the next corridor and effectively hiding them in a nearby shadow with his movement.\n\nGlancing down the hall she saw a small party pass by. It was headed by the cyclops and another whom she had seen at a distance at some of the dinners she had been party to. The second figure made her even more nervous than the cyclops did. That single, huge eye was unnerving, but this other one was tall and sinewy and covered in dark, greenish scales and his face elongated, his mouth full of sharp looking teeth. He looked caught between an oversized human and one of those giant lizards of the south...and had four arms. She had seen him before, but that didn't make him any less unnerving.\n\nShe shuddered and glanced away, only to notice the blind man was tugging at her arm and pressing his back to the wall so that a nearby statue was blocking him from their sight.\n\nIt came to her all at once and she recoiled as if struck.\"You're Phineas aren't you.\" She breathed. She glanced to the hall once more but the group had passed. \n\nHe gave a humorless chuckle and stepped forward from the wall. \"It took you a while. I thought you'd have figured it out when you noticed I was blind.\"\n\n\"Wh-why? I mean...no one told me you were blind.\"\n\nHe raised a brow and tilted his head at an odd angle. \"It's a rather noticeable feature. I have trouble believing no one mentioned it.\"\n\n\"I guess no one thought to bother mentioning it. I doubt anyone thought I'd need to know.\" She stiffened, remembering herself. Then gasped as his hand lashed out to grip her wrist tightly. She wondered if he wasn't just pretending to be blind. How could he have known they were coming and to hide after all?\n\nShe felt something strange...like an...icy burn on her wrist. It wasn't painful...but it was frightening and she was forced to swallow back a surge of terror. He shook his head. \"I wouldn't. It's not in your master's best interests. Believe me.\"\n\nShe hesitated, her jaw twitching as she considered calling out. Then again, if he was threatening her...she resisted the urge to wrap her arms around her stomach. She remained silent, but glared daggers at him. \n\nAs if reading her mind his other hand came down over belly. She started and tried to pull away, only to find his too-cold grip on her wrist was like iron. He didn't even flinch when she tugged and merely looked off to the side as if seeing something down the hall. Her eyes followed his, but saw nothing.\n\n\"I see.\" He murmured.\n\n\"I don't.\" She growled and tried again to pull away. He let her go this time, his hands falling loosely to his sides. She watched warily, but he seemed suddenly distracted.\n\n\"Does he know it's his?\"\n\nCalliope returned the frown he was giving her and set her jaw. \"I don't know what you're talking about.\"\n\n\"I'm going to take that as a yes.\" He muttered dryly, then sighed. \"This may complicate things. You will need to leave. It might not be safe here for you if they find out. Then again it won't be safe if they don't either I bet.\" He shook his head and grabbed her wrist again. \"Come, we must get to him as soon as possible. We mustn't delay.\" He tugged her toward the hall, but she resisted. \n\n\"What makes you think I'm going anywhere with you?\"\n\n\"If you have any interest in keeping Thelios and that child safe you'll take me to him.\"\n\n\"Are you threatening me?\"\n\nHe bowed his head and sighed heavily. \"No, my Lady...warning you. It's not me you need fear.\"\n\nShe watched his face carefully. He seemed suddenly tired. Or perhaps she simply hadn't noticed it before. She kept her voice low when she asked, \"How did you get here? I thought they were looking for you. Did you not steal something from the gorgons?\" She stopped when his face twisted into a pained grimace.\n\nHis voice was low and rough. \"No. I did not. Though there is no one to speak for me in any case. They...they're missing...I fear they may be dead.\" He turned his face away, but she caught the hard swallow and she felt a sympathetic lump in her own throat. \n\n\"My Lord and Lady Nagi will be upset to hear it.\" She offered softly after a long pause. \n\nHe turned toward her with a curious expression on his face. \"Lady Nagi?\"\n\n\"Um, his sister. The one with the dark skin and the serp\u2014\"\n\n\"Oh, you mean Lamia? The Snake, right? I'm surprised she's here, and glad of it...but then I suppose she might be at risk as well. It's hard to say with her kind. What a mess we find ourselves in.\" He shook his head again, as if to clear it. \"But please, we should hurry.\"",
        "She bit her lip and watched him carefully, hoping there was something written in his face which would provide surety for the actions she knew in her gut she was going to take. He was anxious looking and insistent, but that was as much as she could see. Her gut was telling her what he said was true...though she also knew there were different kinds of truths, including half-truths which were oft as good as lies. \n\nStill...\n\n\"How...how do you know he, my lord, is in danger?\" She took his arm again, leading him back down the hall and toward her master's rooms. She noted he looked more relieved than satisfied and decided to take that as a good sign. \n\n\"I can't be sure, at least...not positive. But I've seen things, disturbing things and he's at the center of it. I saw them when the scrolls went missing...or thereabouts. I assume it was at the same time because it was a day later when I was myself attacked and captured. Luckily I saw that coming as well and was able to arrange a daring and heroic escape for myself.\" He smiled wryly before continuing.\n\n\"I went the gorgons to see if they had seen anything and use their scrying pools since my own visions are often times ambiguous, only to discover that they were no longer there. And I fear...\" He sighed again, heavily. \"I...I didn't know where they were or what had been taken from them, or that I had been blamed for it until I was cornered on my way to find Thelios. After having dealt with all that, I needed someone familiar, someone I could trust.\"\n\nShe frowned. \"I really wish you'd stop using their names like that. Someone might overhear.\" Her rebuke was somewhat softened by the gentle tone his expression of pain evoked in her. It seemed sincere.\n\nThen again, seeming and being were two different things, she reminded herself. She musn't let him sway her too much.\n\nHe let out a mild snort. \"Too late for that.\" He muttered darkly. \"I'd bet good money the ones who have the scrolls and plan to use them already know his name. I do, and a moment ago you were sure I was the threat.\"\n\n\"I'm still not so sure you aren't.\" She murmured.\n\n\"Well, it's good of you to take me to him if that's the case. Foolish too I suppose.\"\n\nShe cast a look at him, remembering too late that her glare was useless. \"Not at all. I'm quite sure my master can handle you. He's been anxious to come after you, and he's not fool enough to do so if he didn't think he was more than capable of looking after himself. I'm merely shortening his trip.\"\n\nHis brow raised, but he said nothing to that. The walked in silence a moment before she prodded him to continue with his tale.\n\n\"Ah, well, after I was cornered and subsequently clued in to who was looking for me, I knew exactly where to come to find him.\"\n\n\"So, your vision showed you my master, and that was enough to conclude he was in danger?\"\n\n\"Well, that and nature of the magic being worked. I've had time to mull it over and come up with a few theories on what's been going on. One of the better theories involved your master specifically, and since he was featured heavily in my visions, I tend to favor it.\n\n\"His mother was blessed, you see..or cursed, depending on how you look at it, to have sons who would be greater than their father...or fathers. It's fairly common knowledge, and more than possible that whoever has the scroll knows this and wants to use it against his father in that way. There's simply no way he could be turned on his father except through magical impulsion, so if that were the goal, then this would seem the logical course of action. \n\n\"His father, in turn, has guardianship over a great many things of interest to a great many people; objects of power and great wealth that quite a few would love to get their hands on. Only they have to get past and through him to get to it, and he lets very few into his presence, let alone any he mistrusted...which is most people. Thelios doesn't really give a damn about power or wealth, everyone knows this, including his father. This makes him one of the few who can gain access to his stronghold without raising suspicion. He's a wily old worm that one, not much gets by him.\"\n\n\"That's quite the theory.\" she murmured, trying to sift through the unprecedented wealth of information, looking for inconsistencies...and finding none that she could discern. But then she didn't know any better. \"Though,\" she considered aloud, \"it explains why he would be sent to speak with his father and not one of the others. But...doesn't his father know about the curse, er, blessing? Wouldn't that make him wary?\"\n\nHe shrugged. \"Like I said, everyone who knows Thel\u2014your master, rather, knows that even if he could, he wouldn't bother. He's too much like his father.\"\n\n\"In what way?\" She pressed when he stopped, eager to hear more. It was rare that anyone was so forth coming with her, let alone about a subject which was as dear to her as her Master was.\n\n\"They're both content to just sit on their little hordes, play guardian, and be left well enough alone. That's not to say they're not both happy to expand when the opportunity arises, but they aren't either of them ambitious enough to put too much effort into it. They're more...possessive than acquisitive.\" He nodded thoughtfully, then chuckled. \"Yes. I'd say that's it. I've never tried to put it in words before, but that\u2014I think\u2014 is it.\" \n\nIt sounded accurate to her as well. She couldn't help but remember what Demitri had said about him to the man that had grabbed her all those months ago, or her master's reaction when he had foolishly attempted it again. The thought of Thelios' hand sliding over her stomach...the way he held her at night...she felt a hot flush run up her throat and cleared it as if it might also clear the heat from her skin.\n\nPhineas didn't offer anything more. \"So...this is enough for you to think that some one wants to use him in this way?\" She asked, persisting.\n\nHe nodded. \"It's only one of many ideas, but it isn't a bad one, if a bit vague. Besides, even if it's not the case, Thelios is the only one who would defend me in this group. That might cause problems for whoever is behind this, and that in itself endangers him. Though I still think this has something to do with his father. I saw something...it was unclear, but it definitely pointed in that direction.\"\n\n\"And you said he only let's my master visit him?\"\n\n\"Well, the dragon's are all welcome...the Favorites, they're called. For obvious reasons. I suspect it's because he understands their minds and motivations in a way he doesn't understand many of this other children. He has quite a few you see.\"\n\n\"But Thelios welcome as well as these favorites?\"\n\n\"Yes...\" He drawled uncertainly. He tipped his head at her and frowned slightly. He looked like he was going to say something but was cut short by her own sound of surprise.\n\nThey had turned into the last hall and Calliope stopped short, cursing under her breath. \"What is it?\" He asked, stiffening.\n\nBefore she could answer Penelope spotted her and waved, coming toward them. \"I was just waiting for you to return. That grouchy fellow told me you were out.\" Penelope cast a curious glance at the man next to her.\n\n\"I see. Is something the matter? Have you heard news?\" Penelope seemed to hesitate. \"It's fine, go on, this is a friend of Demitri's...who I presume is the grumpy one you mentioned.\" She nodded to him, stalling for a moment as her mind turned rapidly, \"This is Penelope. Penelope, this is Cassius.\"\n\nThey greeted each other politely. \n\n\"Well, is something the matter, Penelope?\"\n\n\"Ah, yes...well I overheard my new master speaking to one of his sisters. It seems...\" she cast another glance at the man on her arm, \"well, it seems they suspect the threat they had been concerned about might be on this very island. I'm, ah, sure your master will know soon if he doesn't know already...but I wanted to warn you.\" She smiled weakly. \"But I must be going, I don't want to start off on a bad foot with the new master after all, I wouldn't want him looking for me and unable to find me.\" She grinned a little more fully. \"And hopefully there is nothing to it after all, and things are just fine. Be well.\"\n\nCalliope smiled as convincingly as she could, but it felt tight on her face, as if her cheeks would crack from the effort. \"Yes. Indeed.\" She agreed. \"Let's hope so.\"\n\nShe nodded and left, excusing herself once more. Calliope only watched her for a moment before dragging her charge into their quarters. \n\n\"We haven't much time.\" He whispered. \"That girl, she recognized me.\"\n\nShe frowned. \"How can you know?\"\n\n\"Trust me. I do.\"\n\nShe nodded with a sigh. For some insane reason she believed him. \"I was afraid of that. She did seem a little out of sorts. Damn it, what am I doing?\" She set her jaw and looked grimly between the blind man on her arm and the door to the private rooms. It was now or never.\n\nShe half led, half pushed him into the sitting room, knowing that in the entrance hall he might be seen by another slave and she had no desire to compound their troubles any more than she already had. \n\nDemitri was there already. She would have been amused by the look of open shock on his face if the situation wasn't already so serious. Before she could explain to calm him, he was across the room, pulling her away from Phineas and shunting her behind him. \n\n\"Demitri, calm down...\" she managed, trying to pull him away, worried he might strike the man before she had a chance to explain.\n\n\"You don't know who this is.\" He warned.\n\nShe sighed. \"Yes, I do. I know exactly who it is. That's why I brought him here, so the master could question him once and for all....but I don't think he's the one Demitri.\"\n\nDemitri looked shocked again and glanced over at her disbelievingly. \"Wha-\"\n\nShe gripped his arm. \"Please Demitri, we must hurry. We were seen together and I fear he was recognized. Where is the master?\"\n\n\"With Lamia.\" He answered softly, still staring at her in confusion...then blinked, realizing his mistake, \"Ah, that is...\"\n\nShe smirked. \"It's ok, I'd heard that from others before. No one is very good at keeping secrets here it seems. Now that I think about it, I don't know why they even bother being so mysterious about it. Where are they?\"\n\nHe looked back at Phineas, then pulled away from her and stalked up to the man, who leaned away slightly as if sensing the larger man bearing down on him. Again she wondered if he was truly blind. \"What the hell have you gotten that rotten hide of yours into this time?\" He growled.\n\nSurprisingly Phineas seemed to relax a little. \"Demitri, it's good to hear your voice.\" He smiled wryly. \"I'm afraid I haven't determined the sort of trouble I'm in just yet, I was hoping you could tell me.\"\n\nDemitri sighed and shook his head. \"Nothing is ever easy with you is it.\" He pointed back to her, still looking at Phineas. \"You probably figured it already, but she's off limits. So try to contain yourself while I'm gone.\" And then he left.\n\nCalliope blinked. \"Well...that was easy.\" She murmured.\n\n\"We'll see. I suspect he was playing along until he has proper back up, namely Thelios and dear Lamia.\"\n\n\"Oh.\"\n\nThey must have been nearby, probably across the garden in Lady Nagi...or perhaps she should say, Lamia's quarters because it wasn't a minute before Demitri returned with the dangerous looking pair behind him.\n\nThelios immediately did the same thing Demitri had and placed himself between her and Phineas, glaring daggers at the much smaller and rather unassuming looking man. \"Explain yourself.\" He growled at him, quickly cutting off her own stuttering attempts to do just that. Apparently it wasn't her he cared to hear from.\n\nSo Phineas did. Just as he had to her, but with a good deal more hasty concision. Though when he got to the part about the Gorgons lady Nagi's sharp gasp made him pause. \"What do you mean missing?\" She demanded. \n\n\"Missing, gone...no sign of them.\" He enumerated darkly. There...there was no blood. I...I'm hoping they merely....I don't know...\" He swallowed hard and his face went a shade paler. \"I...I haven't seen either of them since Stheno...well, you know.\" He ran a hand through his sandy hair, tousling it roughly.\n\n\"What, since you left her?\" lady Nagi asked sharply, her eyes narrowing.\n\nHis pale skin flushed red. \"She sent me away.\" \n\n\"You didn't have to go...she loves you, you fool. She was just testing you.\"\n\nHe rolled his eyes. \"And I her, but you do not anger Stheno, no matter how well disposed she might be...I didn't think...\" He fell off again with a sigh.\n\n\"Enough.\" Thelios muttered gruffly. He turned away and took up his usual seat, rubbing his chin and frowning. Calliope decided to join him, standing at his shoulder as the rest fell silent. \"So, you're here now because the Gorgon's were missing and I was missing...what then?\"\n\n\"I'd been having visions...you know how they are when something is imminent, and I saw you, this place, your father...and snippets of all kinds of things I can't yet make sense out of.\" He waved, as if shooing the visions away. \"Eventually some men tried to capture me...I knew they would, and my visions led me here...though it took them long enough to do it. I noticed this one,\" he gestured to her, \"in the halls and that she had a familiar aura about her, so I stopped her to ask for help. Eventually she brought me here so, I'm led to believe, you could deal with me yourself.\"\n\n\"And here you are.\"\n\n\"Here I am.\"\n\n\"Now what?\"\n\nHe paused and shrugged. \"Well, I thought we could go to Thetis for a start, surely she will help.\" \n\nThelios snorted. \"That was the extent of your brilliant plan, was it?\"\n\n\"I already asked him.\" Murmured Lady Nagi. \"He doesn't think she'll be any more interested than my mother.\"\n\n\"Nonsense...she's a soft-heart if ever there was one.\"\n\nCalliope noted the dark expression on Thelios's face and laid a hand on his shoulder. He glanced at it and took a deep breath. \"She's selectively soft-hearted. She's still in mourning, and won't be seen, or so they say.\"\n\nPhineas shook his head. \"I told you to go see her ages ago. If anyone could console--\"\n\n\"I'm not interested in consoling anyone.\" He snapped. \"If she wants to waste away over the little prat then that's her business.\"\n\n\"She's your mother as--\"\n\n\"Phineas!\" It was lady Nagi who stopped him this time giving him a sharp look. \"The matter is closed. Let it be.\"\n\nCalliope frowned...his mother? Had he said Thetis? THE Thetis? One of the most powerful daughters of Nereus... and...and mother of Achilles? Did that mean...she couldn't help but stare at Thelios in wonder. He glanced at her again and seemed to shift under her gaze before ignoring it. \n\n\"Why not ask your mother, Phineas? These days she has more influence then mine.\"\n\nHe rolled his eyes. \"You know why.\"\n\n\"Enlighten me.\"\n\n\"Triton.\"\n\nThelios grunted in annoyance. \"Still? I thought you sorted that.\"\n\n\"Yes, by leaving. That's how I sorted that.\" He grumbled sardonically. \"You know there's no reasoning with that bastard. Not that I would waste my breath, the bigot. He does everything he can to keep me from her. He thinks of me as her great mistake. He's too good to be related to a 'mixed breed.'\" He paused and pursed his lips. \"I only hope he hasn't gotten wind that I'm back.\"\n\n\"That's a laugh,\" Lady Nagi mused. \"Considering how many human women his father's had. Human and ...other.\"\n\n\"Yes, well apparently it only counts with his mother, not his father. The truth is he just doesn't like me and I don't like him...unfortunately he's the more powerful of us two, so he gets to be right by way of might. Plus that bastard father of his and I don't exactly see eye to eye.\"\n\n\"You did start it.\" Lady Nagi murmured.\n\nPhineas' face darkened and his lip curled. \"Did I? You know what he did to Medusa...to her sisters...and to see him with my own mother...\"\n\nHer face softened and she looked suddenly exhausted. \"Yes. I know.\"\n\nThelios sighed heavily and rubbed his brow in obvious frustration. \"We don't have time for this. You're here, they will know this soon if they don't already...what do we do?\"\n\n\"Leave.\" Demitri grunted from where he was leaning against the closed door. \"I've got what we need set up, like you asked. I can slip these two out without too many problems.\n\n\"I agree. Leave.\" Stated Lady Nagi plainly. \"There's a chance they don't yet know he's here. If one of them is truly responsible then I don't doubt it's Callea. She's one of the few who could approach the gorgon's unharmed, and if it is her then I can think of at least three who, if they are not in her camp already, could likely be under her sway. That makes it too dangerous to stay here.\" She shook her head. \"But why haven't they moved if it is them? What is she waiting for?\"\n\nPhineas shook his head sadly. \"That is unclear to me as well. I fear Thelios is at the center of it, but why, or what they want with him...or why they bide their time...I just don't know.\" He frowned, thoughtfully.\n\n\"What if they simply aren't ready?\" Lady Nagi offered.\n\nPhineas blinked, then smiled. \"Ah, of course! Even if it is Callea, who, being a half-sister of the gorgon's would have the best luck getting the spells to work, one has to know how they work and how to perform them. She's no enchantress. This isn't the sort of spell she's used to, and controlling some lesser creature, even a human, is much simpler than one of us...\" he paused in his excited babbling and looked surprised, \"and maybe that's why they targeted me. Not to blame me, but to use me. I know how the spells work. The sisters taught me many of their magics. I don't know....I don't know how they could think they would...but it stands to reason whoever has them might know that...\" He trailed off and froze and his head tilted in a funny angle.\n\n\"Demitri,\" Thelios barked, stiffening under the hand Calliope had kept on his shoulder, \"go keep an eye out, warn us if anyone is coming.\"\n\nHe nodded and opened the door...then shut it casting a warning look back at them. \"Good timing.\" He muttered. \"I'll try to hold them off as long as I can.\" With that he was gone. Calliope looked in alarm at Phineas and Lady Nagi who looked equally alarmed. She then looked to Thelios whose jaw clenched and eyes hardened, but who gave no other outward sign of either panic or action.\n\nShe cursed softly and was the first to move, closing the space between her and Phineas, snatching up his wrist to pull him after her into the bedroom. He started to say something, but she stopped him with a sharp shushing hiss. She had to think, and think quickly. She didn't need him distracting her with unnecessary complaints or nonsense.\n\nShe looked quickly around the room, licking her drying lips. The bath!\n\n\"Quickly,\" she whispered, pulling him up the steps to the partially raised cistern. \"Watch your step.\"\n\n\"Thanks for the warning,\" he muttered sardonically, already stumbling as he felt his way over the marbled stone. He frowned. \"This is the bath.\"\n\n\"Yes. Get in.\" She took his elbow and guided him to the wide, sunken ledge that acted as a bench inside the bath itself. \"Lay down on the bench...here.\" She helped him arrange himself on the bench nearest the door, and therefore hidden from immediate sight. You'd have to be standing over him to see him. \n\nNow she just needed something to keep them from approaching the bath. Unfortunately only one thing came to mind. It wasn't fool-proof, but it might just be enough.\n\nShe leaned over and turned the tap, allowing the water to begin trickling down, filling the basin.\n\nHe raised his head at the sound. \"Um...\"\n\n\"Hush.\" He did, but she had to smile a little at the anxious look on his face. \"Don't worry,\" she whispered, \"it will take some time to fill. It is large enough for Thelios after all. Now don't make a sound.\" She warned.",
        "He seemed to relax slightly...but only slightly. But he needn't have worried, it was indeed a massive basin.\n\nShe stood and unpinned her dress at the shoulder, unwrapping the material as she moved across the room to the ante-chamber. She returned seconds later with a much smaller piece of almost translucent cloth in her hand, and wearing nothing except her almost ever present bracelet of amber and the silver serpent about her upper arm. \n\nShe reminded herself over and over again that he was blind as she neared the bath, and breathed slowly and deeply in order to calm her nerves and force the threat of a blush from her now very exposed skin. She glanced down at him as she sat directly between him and door. He seemed relatively calm...all things considered. Well...good then, she thought, and adjusted the cloth over her lap...letting it dangle between her legs. \n\nIt afforded her the minimum of decency by at least covering her sex, even if the entirety of her leg and hip were exposed for all to see. Not to mention the rest of her. Not that naked women were so shocking here...but she hoped that the unexpected sight of Her in the nude might give them pause...and if she were very lucky, give Thelios an excuse to make them leave. After all, he'd already made it clear he didn't like anyone touching or looking at her, so it would seem perfectly natural for him to overreact.\n\nShe looked down, still taking deep calming breaths, then tugged the material a little higher, letting it bunch in a way which obscured at least part of her stomach. She hadn't lost her waist, but there was a swell there that she would rather them not see. Just in case.\n\nShe heard voices outside...becoming combative from the sound of it. She took one last breath and steeled herself. She turned so that she was in partial profile and extended her exposed leg slightly, taking advantage of its length and making it appear that much longer. If she had one feature she knew was actually quite nice, it was her legs. A fact confirmed in recent memory. They had been skinny and coltish in her youth, but the length and shape and been complimented by her sisters and friends many times as her body matured. So, there was no reason to waste that fact if she intended to go through with this.\n\nAt the same time she raised her arms over her head, and began pulling the pins from her hair, unraveling the knotted braids, and letting the black curls fall around her shoulder. Thelios always seemed to like it like that. She rarely wore it down, except for him...but in that lay its great effect. If it had an effect, that is. \n\nWho knew how her gamble would unfold.\n\nShe gasped softly in natural surprise when the door flung open, pulling her from her immediate thoughts. She remembered herself enough to keep from starting or covering herself. \n\nShe schooled herself, stretching languidly with pins still in hand, and turned her eyes to the door, earnestly hoping there would be no one there but her master. She tried to keep her voice mild and fearless. \"If it please you my Lord, I've-\"\n\nShe cut herself off and blushed hotly as her gaze met that of the Host, who now stood before her, and only a few paces away. She did not have to feign embarrassment or fear, and froze instinctively, giving him a long eyeful before she wrapped her arms across her chest with another soft gasp. \n\nThere was a painfully long moment of silence while the two of them simply stared at each other. She in trepidation, he in obvious surprise...and, she thought, a good deal of curious heat once the surprise began to pass. This was not at all what he had expected to see, clearly, but now that he was here he didn't seem anxious to leave. Lady Nagi slid into the room behind him, then paused herself, rearing up a little on her snake part, her brows raising and her mouth twisting into a wicked grin.\n\nThere was another awkward pause in which Calliope listened to the thudding of her heart in her chest and felt poignantly the red throb of her blush as it seared her cheeks and throat.\n\nThelios finally appeared. \"Wha--\" His growl of irritation was cut off as he to spied her, and his face turned black. Her stomach dropped and she swallowed hard. \"Out!\" His bellow seemed to make the very air tremble, and she shivered with fear. The others seem no less affected, the Host starting with surprise, then hastily turning and exiting the room, hot on lady Nagi's heels. Or tail, rather.\n\nWhen they were gone he paced to the bed, snatched up a sheet, and prowled toward her with a growl in his throat and a dark look still plastered firmly on his face. She wasn't afraid, necessarily, but it wasn't an encouraging expression.\n\nShe hesitant to say anything, and sat frozen as he leaned in and wrapped the sheet firmly around her, glancing into the bath to see Phineas still laying there, just as frozen as she. He hesitated, still leaning over her, and reached behind her to turn off the tap. \n\nHe paused again as he pulled away, his lips brushing her ear. \"My clever girl.\" He whispered against her cheek, then pulled back and turned away, storming off toward the door. The rigid anger apparent in his body hadn't left, nor his threatening aura...so she couldn't help but wonder if she'd only imagined his softly spoken praise. \n\nWhen the door slammed shut behind him she let out the groan of fear and embarrassment she'd been suppressing and let her flushed face fall into her hands. \n\nShe was still sitting like that when the door opened again a few minutes later, though this time it was just Thelios. His face was still hard, but he didn't seem to radiate quite as much intensity as before. \n\n\"Come, get dressed.\" He beckoned to her as she looked up. \"We're leaving.\" He fetched Phineas from the bath as she rose to obey. She watched as he hefted the poor man out by his shoulders, and set him on his feet as if he were a child. He did look sort of child-like next to her master actually...but then most people did. Especially when he was as large as he currently was. She was looking forward to everything being back to normal, and him just being massive rather than literally gigantic all the time. \n\nWhen she came back, dressed this time, it was just her and the three men. Lady Nagi had gone, perhaps to cover their escape, she mused...or to prepare her own. She stationed herself next to Thelios, wanting, or perhaps needing, the sense of safety his presence usually lent her. Even when he made her nervous, she'd rather be next to him than anyone else\u2014or alone, for that matter.\n\nBut that was apparently not to be.\n\n\"Take her.\" He immediately handed her off to Demitri, taking her arm and pressing her forward. She opened her mouth to argue, but thought instantly better of it. She recovered her sense and willingly pressed next to Demitri as his guiding arm came around her waist. After all if she couldn't stay with Thelios, this would most certainly be her next choice. \n\n\"Where will you go?\" She desperately wanted him to come with them, afraid of what would happen if he confronted his brethren.\n\n\"I'll distract them.\" He must have seen her fear in her eyes. \"I'm just going to argue with them,\" he continued, looking directly at her, \"and tell them I'm going to leave. I won't mention you, and will go alone by sea when it's done...hopefully they'll come after me if they're going to so I can lead them away...\"\n\nShe wasn't comforted by that thought at all. \"Come after you?\" Her voice rose an octave or two. She felt Demitri's arm tighten around her, and Phineas' hand landed on her shoulder.\n\nPhineas spoke softly, as if fearful she might panic. \"Don't worry. Once he's at sea, there will be little they can do. At worst they will delay and distract him. I'll go as well, between the tw\u2014\"\n\n\"No.\" Thelios stated firmly, cutting him off. \"No.\" He straightened his shoulders, making him look all the more imposing, and all but impossible to contradict. And who would dare? She wondered with an uncomfortable mixture of consternation and pride. \n\n\"But--\" Phineas began... falling off when a slow shake of her master's head gave him pause.\n\n\"You go with them. If you get away cleanly, then you're welcome to come play, but until then...\" She watched them exchange looks, and felt the unspoken subtext deeply, even if she couldn't fathom its meaning.\n\nPhineas straightened as well and nodded, glancing at her out of the corner of his eye. All three men were standing in stiff silence, their faces dark and, unless she was mistaken, very determined. She felt as if something important had been decided and agreed upon without her, and unnervingly, that she was somehow at the center of it.\n\nShe turned to Demitri with a question in her eyes. He was already looking at her, but only nodded. \"Come on then. There's no time for messing about.\" She wanted to argue again, demand an answer for her unasked question...but something in his own eyes changed her mind. Or rather, changed her heart. If they were determined to do whatever it was, then she would be to. Or be determined at least to help in whatever way she could.\n\nShe nodded firmly, setting her jaw and expression to match theirs, commanding her heart to steel itself and her stomach to leave off its fearful quivering. Now was not the time to be wretched, it was time to act, and she was determined to acquit herself well, both for her own sake and her Lord's.\n\nShe shot Thelios a final look as they turned for the door, and felt a pang as she suppressed the urge to run back and throw her arms around him. \"Be careful.\" Was all she said. He nodded and watched them go. \n\nDemitri was good on his word and was surprisingly adept at slipping them through the halls and rooms without being seen. The nature of the halls and rooms shifted dramatically from the gilded, palatial luxury of the main rooms, to the less glamorous and far more functional spaces where the unattractive work of feeding and housing so many went on, to plain, stoney passages which reminded one that they were, for all that gilt and silk, under a mountain...in a cave. \n\nIt was only on the last leg that they encountered a problem.\n\nThey were slipping out some back passage\u2014 part of a system of caves which lead out of the underground palace and left them, she imagined, on the opposite side of the island from where they'd entered\u2014 when a painfully familiar voice called out to them. \n\nShe turned to see her least favorite person on the blessed green earth marching angrily toward them, his minions in tow. She recognized at least two from the incident with Thelios in the hall. From that day when they'd arrived and which felt as if it hd been ages ago, though it wasn't more than a few weeks.\n\nOddly she felt far more annoyance than fear at the sight of them. Truly, if it had been anyone else, she might have quailed. However, he inspired far different feelings in her, and whats more her usual irritation with this crude, foolhardy man was being quickly bolstered by the cruel smirk which appeared on his face as he neared them. The fact that his left arm was still in a sling and that he still bore the scratch from when she'd cut him only made it worse. It was hard not to despise him as an idiot. He inspired only derision.\n\nShe balled her hands on her hips and faced them fully, letting them come. \"Should I count this as lucky coincidence, or are you actually a vengeful harpy, haunting me for some past wrong.\" She spat sardonically.\n\n\"Hold your tongue woman, or I'll cut it from you.\" He snarled back. His vehemence, and the look on his face concerned her...it bespoke a confidence born of righteousness. \"You're harboring a traitor and you'll be punished. Believe you me.\" \n\nAh. There was that, wasn't there.\n\nShe had no time to respond as the group was already upon them. Demitri had stepped forward to defend her, though he wore no sword. She wondered how he intended to do it. She didn't have to wait long to find out. \n\nThe man was beginning to raise his sword arm, and was halfway through another obnoxious declaration when Demitri's fist planted itself squarely in his face. It had been so fast, and so brutally hard that no one had seen it coming until they were looking down at the man as he sprawled on his back before them. \n\nHe wasn't moving...no one moved. His fellows were gaping down at his still form, she was gaping at Demitri, and he was staring hard at the other men, as if daring them to take their leader's place. \n\nBut the shock passed, and one of the men lunged forward. Demitri seemed to catch him by the arm and turn into him, somehow disarming him and giving him a blow to the middle which bent him in half. A second man had his sword parried away a moment later, and Calliope blinked, jumping to action herself and snatching up the grounded man's sword. She leveled it in front of her, using it to hold two more at arms length and buy Demitri time by watching his back. The men hesitated, eying her warily, but didn't stop completely. She hoped silently that Demitri would be make quick work of the other men. She might be able to avoid getting hit with some grace, but she knew nothing of real sword play.\n\n\"That will be enough of that.\" Murmured a soft voice from behind them. She and all the rest turned as one, and gasped. Phineas was standing there, his eyes glowing with eerie white light. His hands, held palm up at his sides, seemed to glow with similar light. \"Calliope, Demitri, step behind me please.\"\n\nHis voice was so even, so soft, but she didn't think she'd ever moved so fast to obey a request or command in her life. \n\n\"Take her. Go.\" He said, just as softly. Demitri grabbed her by the arm and hauled her to the now visible cavern mouth and toward the almost Stygian darkness of the woods beyond. She tried to turn back to see what had happened, but Demitri's pull on her arm was insistent and she had to pay attention to keep from stumbling as she followed. In the end she saw and heard nothing.\n\nThey paused just at the edge of the woods and waited. A few moments later he appeared at the mouth of the tunnel. She pulled from Demitri's now much lighter grip and ran toward him. \"Are you all right? What happened?\"\n\nHe smiled thinly and accepted the arm she gave him when she arrived at his side. \"Fine. I'm fine. And nothing happened. Never underestimate the power of a good bluff.\"\n\nShe raised a brow at him, not quite willing to accept such an answer off hand. \n\n\"Where to now?\" He asked. She decided to bite her tongue and leave it be, it was perhaps better she didn't know. \n\n\"Come.\" She led him to Demitri and together they made their way to the shore. \n\nThe moon was high and bright, and washed the shore in her pale light, illuminating two small ships, not much different from those they'd arrived on. A small boat waited on the shore.\n\n\"Two ships?\" She asked, as they neared the water, hoping that this was not unexpected. \n\nTo her relief he nodded. \"Got us covered. One way or another.\" He explained, though somewhat enigmatically. Again...she'd probably rather not know, and decided it was wisdom not to press him further. \n\nThey were in the small boat, rowing toward the first of the two ships before anyone spoke again.\n\n\"Let's split up then.\" Phineas suggested, as if responding to some unheard comment, \"better odds.\" \n\nDemitri, unfazed, nodded. \"I'll go north. You two go south.\"\n\n\"Wait...we two?\" She interrupted, fighting a new surge of fear.\n\n\"He can protect you.\" Demitri explained.\n\nShe looked to Phineas who shrugged. \"I do have a better chance.\"\n\n\"And what about you? Who's going to protect you?\" She asked turning back to Demitri.\n\n\"I'm a big boy. I'll manage.\" Somehow she knew what that meant. Something in her chest tightened, crushing her from the inside.\n\nShe glared. \"You're lucky I'm pregnant.\"\n\nHe raised a brow. \"Why's that?\"\n\n\"I'd have some choice words for you if I wasn't.\" She raised a stalling hand when he looked like he was going to start wrangling with her. \"I'm not going to fight you on it, but don't think I don't know damn well that you're using yourself as bait. You're heading home aren't you...to draw them away.\"\n\nHis jaw clenched, but he sighed and nodded. She was grateful he didn't bother trying to deny it, but she couldn't help the distress and anger she felt at the confirmation.\n\nHer own jaw clenched. \"Damn it. Idiot.\" She cursed, not sure if it was directed at him or just at the world in general. She lurched forward, throwing her arms around his neck, swallowing back the urge to weep. \"Don't die.\" She whispered fiercely against his neck. He released the oars and wrapped an arm around her back, patting her tentatively.\n\n\"I don't intend to, girl.\"\n\nShe pulled away and angrily wiped an errant drop from her cheek. They continued in silence. When Demitri rose to catch the ladder thrown down for him, they exchanged brusque nods. She didn't trust her voice just then...perhaps he didn't either. It was hard to tell with him.\n\nPhineas said nothing as she took over the oars and sent them toward the second ship, praying to no one in particular that they were doing the right thing. An odd thought occurred to her as the little craft finally bumped the larger one and men above called and tossed out a ladder. \n\nMaybe there was someone she should actually be praying to. She leaned along the side of the boat and dipped a hand into the cool, lapping waters as Phineas climbed the ropes and was hauled up.\n\n\"Thetis,\" she whispered, \"Silver footed Goddess of the calm sea, Goddess of protection and refuge...protect your child, and this child of his.\" She placed her hand over her stomach, biting her lip, and watched the little waves flicker with moonlight, her chest sizing almost to the point of pain with a wave of fervent desire, of need. \n\nA voice called to her, and she looked up, half-startled, and felt like a fool. Who was there to hear her after all? If what Thelios has said was true, his mother had withdrawn herself from the world. They were on their own. \n\nWith a sigh she rose and gripped the rope ladder, its fibers damp and rough against the palms of her hands. She cast a last look behind her into the glittering waters. Still...\n\n\"I would give anything.\" She whispered, knowing she truly would.\n\n**\n\nCalliope watched the seas. It was pointless. She knew he was probably long gone, and in the opposite direction....but still, she couldn't seem to pull her eyes from it. Or from the other ship for that matter. It wasn't close, and slowly it moved farther away, but it was near enough that she could see the faint figures of men on deck. She wondered if any of the them were Demitri. By this time he would have hauled her below deck and made her sleep, grumbling about staring at the water like an empty headed halfwit. The thought made her smile. It also made her both glad and sorry he was on the other ship.\n\nShe liked that Phineas had left her alone to her own devices...but she missed Demitri, and it frightened her to be alone. And she was alone. Phineas had proven pleasant enough...but she had met him only hours ago. She reassured herself that Thelios and Demitri wouldn't have sent her off with him if they didn't think he was trustworthy. Something which had honestly surprised her. After all this, she thought they'd be more circumspect about trusting him, even if they were inclined to. That unexpected trust did nothing to erase her qualms, and nothing at all to sooth the fear she felt for their sakes. \n\nThen again perhaps they were not as trusting as they seemed and simply took the risk in order to get her out of their way. It wasn't as if she could help, and was more likely to just be a nuisance. Still...\n\nShe knew she was useless to him, but it was horrible not knowing where Thelios was or if he was safe...and that there was nothing she could do but wait. So she would, and so she did. Waiting and watching in the night. What else was there to do?",
        "The others on board ignored her for the most part, and let her stand and stare. She listened with only one ear to their movements behind her. \n\nAfter who knows how long, and when she could no longer see movement on the other ship, she decided it was perhaps time to give up her watch. The chill in the air worried her, if only for the baby's sake. And she was so tired.\n\nBut then something caught her attention. Something in the water, near the other ship. Or rather something about the waves...they seemed...oddly circular, as if emitting from a particular spot. She stared, leaning in and narrowing her eyes, hoping to make something out, and noticed the water seemed troubled...more than troubled. The spot she was watching seemed to burble and heave, sending out larger and larger rings.\n\nCalliope opened her mouth to call out, but found she had no voice, nor will to move.\n\nInstead she stared in horror and gripped the ship's rail as the strange bubbling exploded upward. Something tall and dark flew up out of the water. It shone in the moon light, massive and writhing, snake like, then came down just as quickly, smashing into the other ship. \n\nThe men around her were shouting...some in fear, some giving orders, but it was all a din of chaos in her ears and it whirled around her almost unnoticed.\n\nShe felt the scream in her throat as it lodged there, choking off her air, making her gasp just to breathe. Her legs wobbled and she gripped the rail harder, her nails biting into the smooth wood. \n\n\"Demitri...\" It came out as the faintest whisper. She couldn't find air, she couldn't breathe. And then it came, in a sudden rush, filling her lungs. \"Demitri!\" she cried out, her eyes already burning and already half blind with tears. \n\nHer next cry came out as a strangled gasp and she fell back from the ships edge as something even larger rose from the water before her, a broad, fringed head, with huge shining black eyes. She realized as it rose over the ship, its huge head casting a shadow over the deck, that the thing which had smashed the other ship must only be its tail.\n\nThe chaos on deck surged and she was knocked down as the men around her fled the sight...some below deck, some into the sea itself.\n\nShe lay there, staring up at it, unable to do anything else. It opened its mouth, revealing two rows of narrow teeth, each as long as a spear. Her stomach clenched and she managed a soft whimper of fear, but for that she remained silently frozen. She closed her eyes and waited.\n\n\"Shit!\" Her eyes blinked open and her head turned toward the source of the curse. \"That son of a bitch!\" It was Phineas. He was moving toward the rail, he began shouting something in a language she didn't recognize. He didn't seem afraid...but rather...furious. He pounded the deck several times with his foot, and she realized after a moment, the boards beneath her seemed to vibrate strangely and felt almost...warm. She pulled her hands from it, then scrambled to her feet.\n\nHe seemed to notice her then. \"Get back!\" He shouted again, waving an arm at her. His eyes glowed. She only managed to take a step or two away when the serpentine monster struck out toward them. She screamed and stumbled and Phineas whipped back to face the creature, raising his arms and crying out in that unfamiliar language once more. \n\nA massive wave rose up, crashing against the ship. Calliope grabbed the nearest solid thing and hung on for dear life as the water rushed over the deck. \n\nThrough the spray she could see Phineas still clinging to the rail, still shouting as another wave broke. It took her a moment to realize it, but they were moving away from the the other ship, far away and fast. They were moving away from the serpent creature as well. But it followed. \n\nShe frowned and squinted. Oh gods...it was following...and it was a second creature, there were two of them, Demitri was still in danger!\n\nShe cast about for a rope and when she found one, gripped it tight as she raised herself to her feet, and used it to pull herself a little closer to Phineas. She didn't get very far, but was close enough to see his face. Her stomach fell as the expression of fury and determination slowly slipped from his features and was replaced with shock. \n\nShe thought she heard him whisper, \"It's not his...\" But the rest was drowned out by the crash of another wave against the ship. This time he too stumbled back as a terrific crack rung out. She looked toward the sound just in time to see the top half of the mast break free and fly into the sea, propelled there by the serpent's whipping tail. \n\nShe cowered as the splinters of wood rained down on the deck, and cringed as another thunderous crack rung out to her left. The ship lurched, and she with it, causing the rope to be jarred from her hands. She slid across the tilting deck and slammed shoulder first into the rails, and this...this might have been fine if the ship hadn't lurched again, this time throwing her bodily into the air. \n\nFor a moment time stopped, and the world turned upside down...she was breathless, suspended...and then it all crashed down on her in a flood of frigid water and sharp pain. \n\nHer back arched and she would have cried out in pain if the water hadn't already swallowed her up. She grit her teeth and fought the shock of the icy water as her back and chest seized.\n\nFrantic, she twisted, struggling to find the surface. She broke it with a harsh gasp, only to be sucked back again by the turbulent waters.\n\nShe struggled, kicking futilely as the currents seemed to drag her under. Above her, around her, the sea roared...the beast roared, screamed, in fury or pain, she couldn't tell...but the air rung with its cries. \n\nShe broke once more, gasping a final breath before giving over to the silent deep. \n\nShe blinked, her eyes seeing little more than watery black as she searched for something, anything to hold on to. There was nothing but murky shapes looming in greater darkness. \n\nThe darkness seemed to move before her, as if alive, as if reaching out to consume her as she drifted deeper. \n\nThe darkness shifted again, dense and close...then peeled back to reveal a huge red light in front of her...two red lights...like beacons...like eyes. \n\nShe screamed, foolishly loosing her air. \n\nSomething caught around her waist...and then she was rushing to the surface. She sucked in painful gulps of air before looking confusedly for her savior, for the rope or arms that had pulled her from the water... \n\nThere were no arms. Rather, there were scaled fingers...and claws, as thick around as a strong man's arm, and they encompassed her waist. She stared in horror and confusion until a huge head rose from the deep beside her. It was not the head of the great serpent with its shining black eyes...but it was just as terrifying... perhaps more terrifying. \n\nShe felt suddenly numb, and started stupidly up at the thing in dread and wonder.\n\nIt was like nothing she'd ever seen, but she knew from tales and myths what it was. A dragon. The red lights really were its eyes, she realized as she watched the water cascade from the silver-grey scales of its massive head. It rose from the sea slowly, emerging silently from the dark sea like some primordial god.\n\nTwo great horns, gleaming like dark copper, rose from its head...and most terrifying of all were the rows of thick fangs lining the length of its long, powerful looking jaws. As it rose higher, she could see the long, heavy neck was covered in rough looking scales and the top and sides ridged with jagged spurs of bone and dangerous looking spines which, she imagined, no doubt ran the length of its body. \n\nTheir use was demonstrated for her almost immediately as the huge, black-eyed serpent reared from the water beside them with an unearthly scream of fury. It closed its mouth over the dragon's neck, only to find the flesh unyielding, and its mouth filled with the huge spikes. The dragon reared as well, its bellow of rage easily obscuring her own screams of terror. \n\nThe great beast twisted and dug the claws of its free hand into the serpent's sides, holding it still so that it could return the favor.\n\nThe crushing jaws came down hard on the much softer flesh of the serpents throat, making the thing scream and thrash violently, wrapping its long body around its adversary as if to crush it in its coils. She cowered, waiting to be crushed herself in the grip of the claws that still held her, or else be tossed once more into the sea.\n\nThe great silver head twisted and tore away from the snake, leaving a gaping hole from which gulped great clots of gore and blood, blood that stained the dragon's mouth and scales, then tinted the water around them. The dragon made another terrible sound and shook the creatures winding body as it continued to writhe in its final spasms, refusing to the last to release it desperate hold on the great silver beast. \n\nShe found herself pulled under again as they struggled, and finally thought to fight the grip that held her...but it released her on its own and she found herself propelled upward. Determined, she swam up and away, gasping gratefully as she reached the surface. \n\nShe was exhausted but free...and the water seemed strangely calm now and rolled beneath her, buoying her up, rather than crashing in waves over her head. \n\nShe trembled and gasped, her eyes searching the water around her for some sign of what had become of the two giants, terrified that any moment she would be crushed or drown beneath their thrashing weight. But there was nothing. Nothing but the outline of the broken ship being swallowed by the sea, and the cries of men in the darkness.\n\nThe titanic monster that had captured her was gone...as was the serpent...\n\nShe took a deep breath and ducked her head beneath the waves, squinting into the dark salt water. There...away, and below...a mass of darkness, long, though not serpentine, its body thickening in the middle, with powerful limbs...clawed she knew. It tapered to a thick tail which thrashed, appearing and disappearing in the shadows of the deep. It gripped something, something longer and thinner than itself, their bodies twisting violently together...and another, a third...\n\nCalliope shuddered and felt her lungs burn for want of air.\n\nShe pulled back, taking several more deep breathes. When she looked again, she could see nothing. As hard as she tried and as long as she gazed, all she saw was darkness. \n\nShe gave up, coming back for air, and rubbing and saltwater from her eyes. She nearly drowned herself with another scream of fright as she looked up to find the massive head of the silvery-grey beast hovering over her, maybe a dozen feet away. She would have drowned in the half-faint which followed if something beneath her hadn't kept her above the surface. A dazed glance to her side revealed the tips of claws and she guessed she was in its hand once more. \n\nIf she wasn't so completely exhausted, she might have thrown up out of sheer terror. Certainly a wave of hot, dizzying nausea came over her as she gaped up at the terrible sight.\n\nBut she didn't even have the energy to try begging for her life, even if it mattered, and certainly none at all to try to escape. She stared up at the monster with a numbing, dull certainty that it would be the last thing she ever saw.\n\nShe felt hot wetness on her checks which had nothing to do with sea water and wrapped her arms around her stomach, as if somehow that gesture could protect the precious thing within from its fate.\n\nThat thought gave her one final, if futile, burst of energy. \"Please...\" she whispered, then coughed to clear her raw throat. \"Please...let me go. Don't kill me...\" She called out, babbling stupidly. \"Please I...It'd do you no good to keep me, I'm not worth anything, and...I...I'm sure I don't taste very good...please just let me go, please!\" She fell silent, her jaw working to speak words her mind couldn't produce. It stared back silently.\n\nWhy was he staring at her? Why wasn't she already dead? What in all the circles of Hades was going on?!?\n\nThe claws closed around her and she whimpered and clenched her eyes shut. \n\nBut still, she was alive. Inexplicably still alive. Her eyes fluttered slowly open and she realized they were moving and had approached the ship...the remains of the ship. There was a figure...sitting cross legged on a floating bit of...something.\n\nShe squinted and realized it was Phineas. \n\nShe frowned when she saw that not only was he not frightened of the thing approaching him, he looked down right relieved. \n\nShe stared and gaped. He smiled. \"I thought it might have been Triton at first, and thought to control them and turn the things away...but it wasn't him. It was someone else. They were already being compelled and I couldn't compete with it without preparation. I'll be honest, it felt a lot like Callea...but there's no way to be sure. I was sure there was something 'Hecate' like about that magic though. Not that this is very helpful.\"\n\nShe frowned thinking he was speaking to her, and was not sure what to say since he said it all so casually, as if there wasn't a massive creature bobbing in front of him with a mouth full of crushing fangs and hands full of claws. That is until the creature spoke and she understood it was to him that Phineas had spoken, not her.\n\nIt also startled the life out of her. Not that any but her could hear her frightened squeak over the booming sound of its voice.\n\nIt didn't seem to be speaking loudly, but it was so giant a creature that every word was a thunderous growl. \"I guessed as much. Normally they would have scattered when I arrived, or when I told them to go. When they attacked instead....\" he snorted. \"They're simple creatures, but not that foolish.\" He seemed to stretch his long heck, rising higher out of the sea, creating little waves which lapped about the edge of the makeshift raft with even his slightest movements.\n\nShe blinked up at the beast in amazement, a new thought occurring to her. Hadn't Phineas said something about the \"Favorites\" being dragons? Perhaps this was simply another brother of Thelios...and a rather imposing one at that. \n\nThat was a rather happy thought actually. She dearly hoped it was so.\n\nThe beast finally released her, setting her down carefully next to Phineas on what seemed to be a remnant portion of the battered ship. She couldn't help but shudder as she spilled from his scaled fingers, watching as those glittering, sword length claws passed just inches from her skin.\n\n\"There are lands near here, to the east. Take her to shore and wait. There are more coming, I can hear them. I suspect in the mean time Callea is using this as cover to escape. If I return to find her gone I will have my answer.\"\n\nCalliope let out a deep sigh of relief. He was...he was helping them, he was on their side. Perhaps Thelios had gone for help. Thank heavens for that! \n\nPhineas nodded. \"I'll watch her, I know about where we are, so it shouldn't be hard to find safety.\"\n\nThe big head cocked. \"Good. And don't let anything happen to her or Callea and Triton will be the least of your worries.\" He added in a deep growl and with a terrifyingly descriptive flash of claws. The same claws that had previously been wrapped around her. The thought caused a second, much stronger shiver to run up her spine and left the rest of her trembling.\n\nPhineas only smiled tiredly. \"I know. I won't.\" \n\nCalliope frowned and looked between the looming monster and Phineas, feeling rather confused and more than a little uncomfortable. That feeling was exacerbated when the head tilted in her direction, looking down at her over his long scaled, snout. He still dripped water, and the scales shone like dark silver in the moon light.\n\nHe stared at her, long and hard, his fiery eyes pinning her to the spot, draining her of will and breath until she felt she would simply melt away beneath their weight. When he spoke it was in a low, almost soft rumble. Like distant thunder. \"And woman...don't lie. It doesn't become you. It never has.\" \n\nThose words...that stare...she sucked her breath in hard. He reared back slowly, his head tipping on an odd angle, as if eying her askance.\n\nShe gaped and watched as the massive, horned head turned away, casting a final glance in their direction, and as those red...glowing...eyes...disappeared...\n\nThe creature slipped into the darkness as the black waters closed over him, swallowing him and leaving no trace but the gentle lapping of disturbed waters over the edge of their makeshift raft.\n\nShe came back to herself as if suddenly shaken awake and her mind reeled. \"No!\" She gasped, looking in shock at Phineas. \n\nHe cocked a brow in her general direction. \"No, what?\"\n\nShe continued to gape and pointed at the place where the dragon had slipped back into the water. \"Th-th-that wasn't...\" she shook her head and scrambled to her knees, tipping her face over the edge of the staring into the water. Nothing stared back. \"It can't be.\" She whispered.\n\nShe felt a cautious hand grope for her shoulder, pulling her away from the edge. \"Calliope?\" She turned to him and looked into his frowning, milky blue eyes. \"Don't worry. He'll be alright. They really are only a distraction to him. They can't do any real damage, as I'm sure you must have seen. Not to him, not like that anyway. As long as he keeps to the seas he's in no real danger. Just like I said before.\"\n\n\"No danger.\" She repeated softly, looking away over the night black waters. \"He's Thelios, isn't he?\" Her voice sounded strange, even to her own ears. Distant.\n\n\"Ah.\" She looked back to him. There was understanding in his tone, \"You didn't know. Bit of a shock I guess.\" He added gesturing to the still waters. She nodded, forgetting he couldn't see the movement, and looked out around them, noticing that they were no longer floating among the wreckage or the clinging bodies strewn over it it...in fact they were moving away from it at a fairly quick pace.\n\n\"How are we moving?\" She wondered out loud.\n\n\"I'm moving us.\"\n\n\"Oh.\" She stared at the open waters. She was having trouble holding onto her thoughts. She was also feeling strangely numb again. Perhaps it was just the cold. She was soaked through.\n\n\"Calliope, are you going to be ok?\"\n\n\"I...I'm...I'm just cold, but I'll be fine.\" She finally answered, knowing full well that wasn't what he was asking. \n\nShe turned away, back toward the dark, empty waters.\n\n@@@@@\n\nDear Readers,\n\nI'm not sure if I've offered you anything that can make up for the long wait with this chapter, but I hope it was at least somewhat entertaining and satisfying for you. \n\nIt's an unfortunate fact that my work keeps me rather busy and unable to give this story the time or energy it needs, but nonetheless I figure something is better than nothing, and late better than never.\n\nThis was written for all of you who have waited so patiently and who have been so supportive. \n\nIt's also written for those who would like to string me up by my ears, but have yet remained to read more.\n\nWhile I have mixed feelings about the work, I can only hope that you, at least, are pleased with it, whichever camp you're from.\n\nYours very sincerely,\n\nUncle P. "
    ],
    "authorname": "pandarus",
    "tags": [
        "giant",
        "pregnancy",
        "slave",
        "fantasy",
        "monster",
        "ancient greece",
        "mythology",
        "magic",
        "anal",
        "dragon"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/sacrifice-ch-07"
}