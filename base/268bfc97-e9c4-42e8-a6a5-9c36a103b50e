{
    "title": "The Shack: An Implacable Man",
    "pages": [
        "This is one of the \"Tales from the Shack.\" It is in LW in order to keep the series together, but in the case of \"Needles & Delaney\" there is a very strong LW element to it anyway. This is the third in the \"Needles and Delaney\" series, and while it pretty much stands on its own, I strongly recommend reading \"An Angry Man\" and \"An Unreasonable Man\" if you hadn't already read them, I think they are lot more fun that way. Thanks to blackrandi, sbrooks103x, Bebop03 and stev2244 for the beta reads and editing. This would be unreadable without them. There are others who prefer not to be named; you know who you are and you know you are appreciated. \n\n The Shack: An Implacable Man \n\n\"Tacos.\"\n\nI looked over at Delaney. \"Tacos?\"\n\nShe nodded gravely. \"It's Tuesday. Taco Tuesday.\"\n\n\"Sh...\" I glanced down at the dollar bill-filled pouch on the console that served as our \"swear jar\" in the truck. \"The only taco place near here is Taco Grande.\"\n\nShe sat up straighter. \"Casa del Taco Grande! Best tacos in Virginia! Three Cheese Tacos, Chipotle Power Tacos, Cilantro Lime Tacos, Beefy Bean Tacos, Cheesy Bean Tacos! We ought to get the Big Taco Sampler so we can try them all. Twelve Amazing Tacos!\"\n\nI winced when she cheerfully quoted their tag line. \"Ramone makes better ones at his food truck. And that damn place is always full of stoners. I hear you can order a dime bag of weed right at the counter.\"\n\n\"I know, it's called the 'Happy-Happy Taco Special'.\" She grinned. \"Ramone is on the other side of the county. And you owe a dollar.\"\n\n\"For what?\"\n\n\"You said 'damn'.\"\n\n\"That's not a fucking swear word.\"\n\n\"Ha!\"\n\n\"Dammit.\"\n\n\"Three dollars!\" She lit up gleefully.\n\n\"I'll put in a dollar. Damn doesn't count.\" Sheree had made that call for us, saying we needed to at least manage to keep enough money to buy food and gas. Sheree had no idea what Delany was planning to use the money for, but she'd agreed to \"referee\" for us.\n\nSheree's birthday was six months away. At the rate we were filling the swear jar, I was beginning to think Delany was going to be able to buy her a new car.\n\nFrom the smirk on Delaney's face, I could see she'd gotten exactly what she'd wanted. She punctuated her victory with an irritating buzz from the circuit tester she was playing with. \n\n\"You're gonna run the damn batteries down.\"\n\nShe snickered and gave another short buzz with it before stuffing it in her pocket.\n\nShe'd come up with the idea of a \"swear jar,\" and I thought she'd lost her mind, but every time she cussed, she dutifully put in a quarter. She insisted my 'rate' was a dollar, since I was an adult. \n\nI couldn't bitch about it too much.\n\nHell, it was kind of my fault, anyway. I'd talked to a friend named Kurt who ran his own security services and training company down in Texas, figuring on making arrangements for Delaney to go down for a \"crash bang\" driving course in a few years as I'd promised her, and instead, he'd jumped on it immediately. An old team-mate of ours, Tony, who occasionally did work for him, was getting married and he'd talked Kurt and his wife Katie into watching over his new stepdaughter while the happy couple went on a honeymoon.\n\nDelaney got to go to Texas for three weeks for what amounted to an abbreviated bodyguard training course, mostly driving, with some shooting and first aid, along with a couple of other girls about her age. Kurt based it off the training they gave to teenage family members in high-risk situations. \n\nSheree and I had taken advantage of the situation ourselves; it wasn't really a honeymoon, but I'd taken her to Jamaica for a couple weeks. We got a little sunburned in some interesting places. \n\nWhen Delaney got off the plane in a black T-shirt with a cartoon drawing of a flipped over burning car with three stick figure girls dancing around it and the logo \"Camp Mayhem... Drive It Like You Stole It!\" she was practically skipping.\n\nShe'd fit in. \n\nAll the time we'd spent working on cars and driving them around the lot and the old quarry had really paid off. Probably for the first time in her life, she was the cool kid who could answer the questions every time. When they introduced the girls to the cars and told them to look them over, Delaney had promptly checked the tires, popped the hoods and climbed up to check fluid levels. She'd almost broken the evasion course record set by a professional driver. She helped me when I worked at the free clinic on Thursday evenings, so most of the first aid was pretty easy for her, too.\n\nMost of all, though, she'd made friends, real ones. Delaney called her Camp Mayhem classmates, Mackenzie and Tess, on a video call, every Thursday, to talk about whatever the hell it is that teenage girls talk about. They emailed back and forth, mostly pictures of cars, cats and guns. She'd even brought home a picture of the three of them sitting on the crumpled wreck of a car and hung it up in her room. \n\nShe'd also brought home the idea of a swear jar. Apparently, Kurt and Katie thought professional bodyguards and drivers should watch their language, so it was a tradition at the school. I was pretty impressed that she'd only had to pay in thirty dollars, until she admitted that she'd only had to pay a quarter each time.\n\nThat sounded a helluva lot more like her.\n\nWhen Delaney had put the swear jar out in the truck, she'd explained she wanted to use it to get Sheree something for her birthday, so I wasn't dead set against. It did seem to drain the cash out of my wallet regularly.\n\nI finally gave in. We both knew I would, since going to Ramone's would take another forty-five minutes. I pulled the rollback into the parking lot and got out, while Delaney jumped down and bounced alongside me to the front door. \n\nThe cashier, a pimple covered guy with long fried bleached-out hair sticking out in all directions from under his cap, stared at us dazedly for a long moment, trying to figure out why on earth anyone would come into a restaurant, then he shook his head and started.\n\n\"Welcome to... uh, welcome to...\"\n\nI sighed. \"Taco Grande. It's 'Welcome to Taco Grande,' and you are going to take our order.\"\n\n\"Hehe. Yeah, that. Dude.\"\n\nI rubbed the bridge of my nose. \"It's just a little early to be this baked, isn't it?\"\n\n\"Heh. Yeah...\" He grinned, then stopped as he tried dazedly to remember what we were talking about.\n\n\"Look, we'll take...\" I glanced down at Delaney who looked back at me hopefully. \"...a Big Taco Sampler and two large Cokes.\"\n\nHe punched at the register for a while, apparently randomly. I could see two guys in the back snickering, obviously just as stoned as he was. \"Uh... Two, uh, Big Sombrero combos, right?\"\n\n\"Jesus, look...\"\n\nI was cut off by the loud buzz of the circuit tester in Delaney's pocket. I looked down at her sharply. She looked back up at me in pretend alarm. \"Your ankle monitor is going off.\" She peered anxiously outside at the parking lot, then looked up at the stoner. \"We should really get this to go.\"\n\nHe stared at us both in shock for a moment, then spun and started grabbing handfuls of tacos off the warmer shelf and stuffing them in a bag. He shoved the bag at us with two large cups. \"That'll be... uh...\"\n\n\"Five bucks?\" offered Delaney helpfully.\n\n\"Yeah, uh, five bucks.\"\n\nDelaney giggled all the way out to the rollback. I watched her pull herself up into the cab. \"Did you enjoy that?\"\n\nShe rolled her eyes. \"We'd a been there all day. Besides...\" she peeked in the bag. \"He musta put thirty fucking tacos in here.\"\n\n\"You owe a quarter, Buttercup.\"\n\n\"Dammit.\"\n\nJust as we were pulling out, the Sheriff's black-and-gold Tahoe pulled in. Delaney frantically rolled her window down and waved at him wildly. \"Get the Big Taco Sampler, it's awesome!\"\n\nShe suddenly fell back into the cab, gasping for breath between fits of laughter. \"Look... look at the back...\"\n\nI could see three red, green and white clad figures sprinting frantically from the back of the store, the blonde mop on the last one bobbing comically.\n\n*****\n\nWe'd been back at the yard for almost an hour before the Sheriff pulled in, eying me laconically for a moment, then shook his head at a near-comatose Delaney laying across the top of the right side tool case on the rollback, a stack of taco wrappers on her chest. \n\nHe got out and walked over and glanced at her as she groaned. \"What's with her?\"\n\n\"Taco-induced paralysis.\"\n\n\"Is that fatal?\n\n\"Not usually. The antidote seems to be a candy bar.\" Delaney opened one eye to peer at me in the hope that I might produce an actual candy bar.\n\n\"Huh.\" He leaned on the truck. \"You two see anything weird at Taco Grande today?\"\n\n\"Like what?\"\n\n\"Like something that might cause me to find an abandoned flooded restaurant?\"\n\n\"Flooded? I didn't see anything like that.\"\n\n\"Water was pouring out of the men's bathroom. Seems somebody tried to flush a kilo of weed down the toilet.\" Delaney tried to stifle a giggle, but it got out. The Sheriff gave her a completely ineffective glare. It didn't help that she knew he had a soft spot for her.\n\nI shrugged. \"News to us. You'd think a taco joint would have a... sturdier toilet than that. With all those beans and everything.\"\n\n\"It'd probably have helped if they'd have taken it out of the plastic bags.\" \n\nDelaney giggled again and rolled on to her side, then squawked her circuit tester. I sighed. \"The idiot with the blond hair at the counter may have been under the mistaken impression that I had an ankle monitor on and that local law enforcement just might be looking for me.\"\n\n\"That's an oddly specific mistaken impression.\" He chuckled.\n\n\"It is, isn't it?\"\n\nDelaney pulled herself to a seated position with a tiny belch. \"I wasn't trying to get them in trouble.\"\n\nThe Sheriff tipped his hat back a bit. \"They aren't. I could roll up Mooky any time I wanted; it's just not worth the trouble.\"\n\n\"Mooky?\" Delaney brightened. \"Mooky\u203d\"\n\n\"Burton Murkowski Jr. aka, 'Mooky.' Has a little trailer grow house off Route 19 in a little clearing at the end of the spur back by Copper Creek. Small time pot grower, he likes to think of himself as the Robin Hood of weed. He doesn't cause any trouble, doesn't lace his shit with anything and doesn't sell to kids, so I just leave him alone.\"\n\nI understood, but Delaney stared at him puzzled. \"But if you know what he's doing and where he's growing stuff...\"\n\n\"I have more important things to spend resources on than a guy like Mooky. I get elected here to keep a peaceful community. If the State or the feds want to chase after him, that's their problem. He's pretty much harmless. Probably even does some good.\"\n\nDelaney looked doubtful; she knew my history with drugs and knew I stayed well away from them. The Sheriff caught the look. \"You know Friendship Village?\"\n\nShe nodded. \"The old folks home.\"\n\n\"They prefer 'retirement community.' There are a number of cancer patients out there. A lot of chronic pain. Some people swear by marijuana for that kind of stuff. Rumor has it that Mooky really believes in the healing power of weed and goes out there a lot, only takes token payments.\"\n\nI blinked. Maybe he wasn't a total loser. \"Really.\"\n\n\"Yeah. Let's just say if Mrs. Ramirez offers you a brownie, think twice before taking it.\"\n\n\"Good to know.\"\n\n\"So you're not arresting Mooky?\" Delaney raised one eyebrow comically.\n\n\"Nah, he's harmless. He'll probably hide out a couple days in his grow trailer waiting for the DEA to bust his door down, then go just back to work. His uncle owns Casa del Taco Grande, so he has a hard time getting fired.\"\n\nWe were still laughing when a stream of black SUVs poured into the yard with police lights. Half a dozen State police officers swarmed the yard, guns out, with a couple plainclothes agents directing them.\n\nI held my hands up cautiously. I was pretty sure that I hadn't done anything lately that warranted a shootout. Delaney followed my lead with a cautious sidelong glance that earned a nod from me. \n\nOne of the plainclothes guys walked straight to me, he barely gave a glance at the Sheriff. He looked like a stiff necked prick. \"Lester Dawes?\"\n\n\"That's me.\"\n\n\"You're wanted for questioning in the attempted murder of Mrs. Charlotte Morris.\" \n\n\"I fuckin' wish.\" I grimaced and squeezed my eyes shut for a second. \"Shit, you said 'attempted,' didn't you? Goddammit.\"\n\nTwo of the uniforms opened the trailer and I looked at the Sheriff. \"You see a search warrant?\"\n\n\"Not yet.\" He glared at the guy who'd addressed me. \"Mind telling what you're doing here and maybe showing a little fucking professional courtesy?\"\n\n\"Special Agent Stein, Virginia State Police. I have a 'Stop and Hold' for Lester Dawes. His ex-wife was shot four times in her home last night and we have reason to believe he was present.\"\n\nI raised an eyebrow at the Sheriff. He knew damn well where I'd been. Just like every Thursday night, I'd been at the free clinic with a dozen witnesses, including two of his deputies who'd brought in a vagrant for treatment. I shook my head, I really wanted to see what was going on, what Charlotte was accusing me of this fucking time. Maybe I could get her tossed in jail for a change.\n\nThe Sheriff went along with me. \"Well, Special Agent Stein, how about we walk over there for just a bit and have a discussion. Or do want me to call every deputy in the county over here right now, maybe get on CNN?\"\n\nStein scowled irritably then looked over at one of his men. \"Give me a second. Cuff them.\"\n\nDelaney's eyes narrowed and she tensed as one of the police stepped towards her. The Sheriff glanced between her and me. \"Wait a fucking minute. Do you have a 'Stop and Hold' on her, too?\"\n\n\"No, but...\"\n\n\"Jesus Christ, she's fourteen. You don't have a Stop and Hold for her, she doesn't appear to have done anything, and you're just going to roll her up? Fucking idiot. She stays with me and I'll get have Sheree come get her.\"\n\nFor a moment Stein looked like he was going to do it anyway and I braced myself, gauging the distance to Delaney as she tensed up. I wasn't sure what she was going to do, but I had a feeling everybody on the lot was going to get caught up in a real shitstorm in a few seconds. \n\nThe Sheriff pushed between Delaney and the approaching officer, holding up his hand mike. \"I mean it. This is about to end up all over the funny papers. He takes one more step, I'm putting out an emergency all-call and this turns into a three ring circus.\"\n\nStein glared at him. \"You should be helping me out here, not putting your job in jeopardy.\" \n\n\"My job? I'm doing my fucking job. I don't work for the State, I work for the people of this county, and they'd take a damn dim view of me letting some asshole cart off a minor with no cause.\" \n\nThe Agent must have finally decided the Sheriff was serious because he waved his officer back. From the seething hate in Delaney's eyes, I figured he'd just gotten lucky. We probably all had.\n\n*****\n\nI found myself secured in an interview room for the next few hours. Only the occasional deputy sticking his or her head in to check to see if I needed anything broke the monotony.\n\nAt least it was monotony until the Sheriff walked grimly in the room, letting the door swing shut behind him. \"We've got a problem\"\n\nBefore he could continue, Agent Stein slammed the door back open and stomped towards me and the Sheriff. \n\n\"Where the hell is the little bitch?\" His voice was odd, probably because of the bloody paper towels he was holding up to his nose.\n\n\"Where's who?\"\n\n\"You know who it is. Delaney Morris.\"\n\n\"No idea who that would be.\"\n\n\"The girl we picked up this morning with you. You know damn well who I'm talking about.\"\n\n'You mean my daughter? Delaney Dawes?\"\n\nHe paused, gauging me for a second. \"Okay. Delaney Dawes.\"\n\n\"Not a fucking clue. Last time I saw her some asshole State Criminal Investigation Division agent shithead\u2014that'd be you\u2014was hassling her, and the Sheriff here said he was going to call Sheree to come get her. I've been sitting here chained to a fucking table ever since.\" I looked at him. \"I'm guessing, from that fucking broken nose, you talked to her again.\"\n\nThe Sheriff put his hand on my shoulder. \"While I was trying to call Sheree, the agent here apparently thought he'd go and ask her some questions.\"\n\n\"Without me or Sheree there? Isn't that fucking illegal?\"\n\n\"I was going to ask her who to call if we couldn't reach this Sherry person.\" Agent Stein said it woodenly, just in case they were recording this; he knew nobody in the room remotely believed that line of shit.\n\n\"Sheree. And, let me guess. You're gonna claim she just attacked you for no reason?\"\n\nHe fell silent and the Sheriff stared at him. \"The recorder wasn't on in that interview room. Deputy Hyatt let him in to see her under the impression he needed to get contact information from her, but insisted on the interview room door being open since Delaney is a minor. Which is why Deputy Hyatt still has a job. At some point during the questioning, something went wrong and the agent here ended up with a broken nose and missing car keys.\"\n\nI laughed out loud. \"Let me guess. The agent's car is now missing.\"\n\nThe Sheriff suppressed a grin. \"We pulled the tracker data and it led to the Salvage yard, but we couldn't find it. The tracker data says it never left the yard.\"\n\nThe agent glared at me. \"The little bitch must have turned off the tracker somehow. We'll find her, we have a state wide APB out.\"\n\nI shook my head slowly. \"You really pissed her off, Dickhead. She was having a great day and you just had to go and fuck it all up. She's got a real bad temper. I wouldn't bother with the APB on your fucking car.\"\n\n\"That car is state property.\" His attempt to sound important was kind of ruined by the broken-nose nasal tone.\n\nI glanced over at the Sheriff. \"Did the salvage yard smell like gasoline when you went back to look for his car?\"\n\nHe nodded slowly. \"Yeah, real strong now that you mention it. I thought she might have spilled some putting gas in the car or something.\" \n\n\"She'd have been in a hurry, no time to drain the fluids or strip it like we're supposed to. We'll probably be fined for that.\" \n\nAgent Stein looked lost, but I could see the Sheriff catch on. He started to turn red, trying not to laugh. He closed his eyes. \"Fuck.\"\n\nI chuckled and looked over at the agent. \"Hope you didn't leave anything important in your car, Cupcake.\"\n\nStein was starting to look pissed. \"What the fuck are you talking about?\"\n\n\"Try looking in the car crusher, asshole.\"\n\nHis eyes shot open. \"That little bitch.\" \n\nI leaned towards him as far as the cuffs would let me. \"Call her that one more time, asshole. Call my daughter a bitch again. Do it. One. More. Fucking. Time.\"\n\nHe started to say something and thought better of it, pulling back and walking out.\n\nThe Sheriff looked at me. \"They've gotten a judge to sign off on transferring you, claiming the attack on your wife has some kind of jurisdictional precedence. They also say they found cocaine in your office trailer.\"\n\n\"The office trailer? First fucking good news I've had all day. Tell Sheree to get in touch with Tara and check the inside security cameras.\"\n\nHe kept an eye on the door. \"I don't like this.\"\n\n\"Me either.\" I thought for a second. \"I thought this was Charlotte playing games, but now I'm not sure. Can you have your deputies search me and take all my clothes, issue me a set?\"\n\n\"Good idea, that way they can't arrange to 'find' something on you later.\"\n\nI nodded. \"Delaney will probably head for Sheree, but she's not a fucking idiot, she sees a cop or anyone she doesn't know, she'll be a ghost.\" \n\n*****\n\nIt took four hours for them to complete the transfer to the larger jail and as soon as I arrived, I was processed in by a couple of Correctional Officers who did their job professionally and thoroughly. I was glad I wasn't carrying anything.",
        "The bigger C.O. stared at my arm. \"Somalia. Nigeria. Uganda. Kenya... shit.\"\n\n\"What's wrong?\" The brown haired C.O. looked from me to him.\n\n\"His tattoo. 'De Oppresso Liber.' With deployment bars under it.\" He eyed me warily. \"5th Group?\"\n\n\"Yeah. Medic. Thirteen years with Group, seventeen years under SOCOM.\"\n\n\"I did five years in Ranger Regiment. You're not going to make any trouble are you?\"\n\n\"I won't go looking for it.\"\n\nHe understood immediately. \"Shit.\"\n\nThe other C.O. still looked confused. \"What? He's a medic right?\"\n\n\"In Special Operations, that just means he knows how to sew you together after he fucks you up.\" He sighed. \"I'll get the word to the would-be hard cases to stay backed off if you promise not to start any shit yourself.\"\n\n\"I'll keep to myself. I just want to be left alone.\"\n\n*****\n\nI'd arrived just in time for lunch. I sat alone, eating a very forgettable beef stew, just warm enough to not fully congeal and a slice of bread. The orange \"safety spork\" probably tasted better.\n\nA couple of prisoners at a table not too far from mine slowly got up and headed my way. From the North County Wild Boys tattoos on their necks, I figured at least it wouldn't be a boring discussion.\n\nThe big NCWB gang member sat down across from me, the smaller one sat next to him. They both kept their hands open on the table. I just stared at them.\n\nThe smaller guy squared up. \"We ain't involved.\"\n\n\"Involved in what?\"\n\n\"Word's out you're worth ten grand dead.\"\n\n\"Sounds kinda low. Almost insulting.\"\n\n\"Yeah, that's what we thought. We're out. We wanted to make goddamn sure you to know that. We told the others to stay out of it, too. You kill more fuckin' people than Glock. Ten grand ain't near enough.\"\n\n\"Good to know.\"\n\nHe started like he was going to get up, then paused. \"We was supposed to be at the welding shop that day, but we got rolled up three days before.\"\n\n\"Lucky you.\"\n\n\"Yeah. We're takin' it as a sign. We're out of that business, all of it.\"\n\n\"Then I'm probably not interested in you.\"\n\nHe looked down at the table. \"If anybody tries for the ten, they're freelancers. Everybody got the word to stay away, but some people are just stupid.\"\n\nHe started to get up and I held my hand up. \"You wouldn't know who Manny was planning on selling the girl to, would you?\"\n\nHe shook his head. \"Manny didn't tell nobody shit. All I know is he was planning on taking her to Richmond.\"\n\n\"You find out, you let me know. It'd go a long fucking way to making sure I forget about you.\"\n\nThey walked back towards the table where they'd come from.\n\n*****\n\nIt was Sunday night before anyone decided to take a shot at the ten grand. I was eating alone again, when the smaller NCWB gang member caught my eye from across the room and glanced meaningfully at a couple of skinny meth-heads at another table. I gave a single nod.\n\nAfter I dropped my tray off, I casually headed over towards the corridor outside the jail laundry. It was the only place I'd seen with no cameras, and the lighting was pretty bad.\n\nI leaned against the wall and waited until they hurried around the corner after me. I hammered the bigger guy down before they had a chance to realize how bad they'd fucked up. I caught the smaller one and threw him against the wall, the back of his head ringing off the tile. A badly sharpened toothbrush handle clattered to the floor.\n\nI hefted him up the wall a bit. \"Problem with some people is that they have no survival instinct, no sense of self-preservation, ya know? I blame streetlights. All that light out there, some people have just forgotten why they should be afraid of the dark.\"\n\nHe started to say something, eyes rolling in panic, but I slammed my fist into his gut and dropped him to curl up on the floor gagging for air. I sighed. \"People with any sense, they'd ask themselves, 'why is everybody staying the fuck away from that guy?' After all, they'd think, there has to be a reason. But you two? No, you don't get it. No survival instinct. See?\"\n\nI glanced back down the hallway. \"The good news is that I think I can fix that. They say just one really traumatic experience can make you reassess your whole approach to life.\" \n\nHe cringed as I shook my head sadly and reached down to grab his collar. \"This is for your own good. Really.\"\n\n*****\n\nMonday morning was ant-climactic. Tara had pulled strings to get to the State Attorney General's office and their Internal Affairs Office chief to sit down with her first thing in the morning and go over some interesting video. Agent Stein had seen the outside cameras but hadn't considered that I might have in-wall internal cameras in the trailer, especially not ones that fed to cloud storage that Tara could get to without going into the cordoned off salvage yard. I'd put the cameras in when we moved to the cabin, mostly in case some of the local douchebags broke in to steal something. I wish I could claim foresight, but honestly, the shit was on sale. It worked well to catch Agent Stein in the act of planting the drugs.\n\nMy appearance before the judge lasted long enough for the State to drop hurriedly drop charges and offer an apology. Tara was stuck at the Internal Affairs office so that they could go through the process of transferring copies of the video to State IA with proper chain of custody for Stein's eventual prosecution. \n\nOn the bright side, I at least had a ride. The State had arranged for a taxi to get me back to the Sheriff's department.\n\nThe Sheriff was waiting at the station when I arrived.\n\nI nodded to him. \"Thanks for relaying that info to Tara and Sheree. Let's get this over with; I need to get out there and find Delaney.\"\n\n\"Yeah, about that.\" The Sheriff pushed open a door marked \"Patrol Officers Only.\"\n\nDelaney jumped up from a lounge chair. \"Finally!\"\n\nI glanced around, my old sleeping bag was laid out on a cot in one corner of the room, with Delaney's blanket and pillows from home. \"How long have you been here?\"\n\nShe grinned wickedly. \"Since about an hour after I busted that asshole's nose. He kept saying you weren't my real dad.\"\n\nThe Sheriff sighed. \"She came right in the vehicle bay door and hid in here. Found her after we transferred you. I didn't trust that the Agent, so we let them look all over the state. I couldn't even get in to see you to tell you.\"\n\n\"Since those blankets are from home, I guess Sheree knows, too?\"\n\n\"Sheree was already here with Delaney when we found her.\"\n\nDelaney smirked and pointed to the phone on the wall. \"I called her and told her what was going on.\"\n\nSheree walked into the lounge looking entirely too smug. \"Y'all about ready to leave? I got the truck outside, kinda taking up extra space and don' wanna get ticketed.\"\n\nI shook my head, chuckling and she stepped over for a kiss.\n\nThe Sheriff nodded at Delaney. \"Be a good idea to get you out of here. And take those damn poker cards. I think Deputy Hyatt owes you twenty candy bars by now.\"\n\n\"Twenty three, and she better not think she can cheat me on those.\"\n\n\"She won't forget.\" He looked over at me. \"I'll be right back, got your personal effects to give to you and I need you to sign for them.\" \n\nAs soon as he stepped out, Sheree looked up at me. \"Do ya' think this is about Delaney?\"\n\n\"I think so...\" I cut off as the Sheriff stepped in and handed me a stack of forms and a pen. He handed my bag of stuff to Sheree.\n\nI sat down and started in on the form.\n\nDelaney finished getting her stuff together and sat down across the table, looking at me eagerly. \"So how was it? Do you have any cool prison gang tats? Did you get to shank a child molester for a pack of smokes?\"\n\n\"I was only there for three days, and you know I don't smoke, Delaney.\" I looked up at Sheree standing next to me. \"Do you think it's too much fucking caffeine? I mean this can't be normal, can it?\"\n\nDelaney, almost bouncing in her chair, ignored my comment and Sheree's quiet laugh. \"C'mon, something cool had to happen.\"\n\nThe Sheriff shook his head slowly. \"Jesus, you two are weird.\" He sighed. \"Not my jail, not my problem, I'd have stuck your ass in solitary if they'd have kept you here. I'm not stupid. The C.O.s over there informed me that two prisoners were severely injured, consistent with being badly beaten by someone who really knew what they were doing. Both prisoners oddly insisted they'd tripped and fallen down the stairs.\"\n\n\"Oddly?\" Sheree raised one eyebrow.\n\nHe nodded. \"There are no stairs anywhere near where they were found. And they weren't capable of crawling, much less walking.\" \n\nSheree narrowed her eyes at me, but at least it was half-playfully. \"That'd make it a lot harder, wouldn't it?\"\n\nI shrugged. Delaney grinned. \"I knew it!\"\n\nThe Sheriff put his hat down on the table. \"Christ. I don't know if you're setting a bad example for her or she's a bad influence on you.\"\n\nSheree dropped her arm over my shoulders. \"He can't help it none. He's fallen in with a coupla uppity women.\"\n\nI reached over and gave her butt a squeeze. \"My favorite kind.\"\n\nShe bumped my shoulder with her hip. \"Don't you forget it.\"\n\nDelaney winced dramatically and screwed up her nose. \"Ewww. Get a room.\" \n\nSheree gave me a pensive look as we walked out to her truck. \"I saw a little brown car parked out front of the yard Saturday and Sunday. There was at least one guy in it, kept ducking down whenever someone drove by.\"\n\n\"You know what kind of car?\"\n\n\"Is rust a kind of car? It was a little two-door hatchback of some kind. Old, I mean I'm not sure if it was primer brown or just completely covered in rust. Prob'ly need a tetanus shot to drive it. I didn't want to get too close, I figured you'd want to have a talk with them.\"\n\n\"Doesn't sound like gang members.\"\n\nDelaney smirked. \"It could be that fucking asshole cop. I hear he lost a car.\"\n\n\"Yeah, we need to talk about that...\" I was trying to be serious, but when Delaney shot me her version of \"puppy eyes\" I sort of started snickering. It didn't help that Sheree promptly broke down laughing. I tried to regain the upper hand. \"You owe a quarter.\"\n\nSheree shook her head. \"I had to suspend y'alls swear jar thing. When I got to Delaney at the station, she told me what happened and, since she'd be payin' out her whole salary for the next twenty years if she held to it, I put it on hold. Just til this thing, whatever it is, is over.\" \n\nDelaney looked warmly at her. \n\n*****\n\nTiffany and Tara met us at the cabin just a few hours later.\n\n\"You need to be careful. Stein got tipped and disappeared. They didn't give me any details, but they seem to think he's headed out of the country.\" Tara shook her head slowly. \"I'm not sure I believe that. The 'stop and hold' on you wasn't valid. It was supposedly signed off on by Judge Knowlton, but he says he never issued it and says somebody hacked into the system, somehow. His clerks are all backing him up, but that system doesn't connect to the internet anywhere; it's practically impossible to hack into.\"\n\nI thought about that for a second, Sheree beat me to the question. \"How many years does Stein have as an agent?\"\n\nTara looked thoughtful. \"Seventeen years. That'd be an awful lot to risk throwing away.\" \n\nI sat up a bit. \"A judge and a special agent.\" I thought about the ten thousand that had been put on my head. \"And some others.\"\n\n\"That's a lot of influence.\" Tara looked over at Tiffany for a second. \"This might really be related to Mother's shooting.\" She looked back at me. \"She was shot in the back four times with a nine millimeter handgun and the study was searched.\"\n\nSheree put on a concerned face, obviously for the sake of Tara and Tiffany. \"Is she going to be okay?\"\n\nTiffany answered. \"She's not completely out of the woods yet, we need to worry about secondary infections, but the surgeries went well and she's more than holding her own.\"\n\n\"Christ. They probably didn't know they had to use silver bullets. Or garlic. Or silver bullets tipped with garlic... maybe a wooden stake...\"\n\n\"Stop that, Les.\" Sheree turned so only I could see her face and gave me a wink. She still managed to keep her tone serious.\n\n\"I couldda warned them, if they'd have asked.\" I sunk back into the chair and stared at the ceiling. I caught my breath. \"Has she said what the fuck is going on?\"\n\nTiffany twisted her mouth. \"She says she's just too weak to talk about it and can't remember anything, anyway.\"\n\n\"Bullshit.\"\n\nTara nodded her agreement with my assessment. \"She's hiding something. I looked over the study after the police pulled out, but I couldn't find anything. I can't open the safe and Mother says she can't remember the combination.\"\n\nDelaney, laying on the windowsill, tracing patterns on the glass, looked over suddenly. \"Unless she changed it after I left, I can open it. I can't tell you the numbers, but I can do the pattern.\"\n\n\"I thought she changed it after you opened it to get Dad's gun?\" Tara eyed Delaney.\n\n\"She did, but they worked so hard to ignore me all the time they forgot I was there. It was like being invisible.\" She stopped for a second. \"I was thinking of taking the money in the safe and running away, but running away hadn't worked out so well the first time. I needed to go somewhere I was wanted.\" She settled back onto the sill. \n\nTiffany chuckled softly. \"God, she hated that. She tries to hide it, but it still eats at her every day. She'd rather you joined the Manson family, or a cult or something.\"\n\nA look between anger and sadness flickered across Sheree's face. \"Lord forbid Delaney ends up with a family that loves her, huh?\"\n\n\"Yeah, I know.\" Tiffany looked at the floor. \"I don't know why she's that way. When we were little I know she really cared. Maybe it was the money.\" She looked helpless. \"I don't know.\"\n\nDelaney sat up, her face suddenly tight. \"I don't give a fuck. I know where I belong. I'm never going back.\" She hissed it furiously.\n\nTara held her hand out cautiously. \"We know. And you're right. Even if something happened to Dad, Sheree has guardianship. I set the papers up and made Mother agree to it.\" She looked over at Sheree. \"I hope you don't mind, but I just don't trust Mother anymore. You and Dad just have to sign them.\"\n\nSheree was beaming. \"We'll never have to use it, but of course I don't mind. She belongs here.\"\n\nDelaney looked like she was having trouble breathing but finally settled silently into a crooked smile. \n\nI nodded. \"You might have trouble if Charlotte contests it. She's on a lot of painkillers.\"\n\n\"If she does, the whole truth about Charles will come out. I'll make sure of it. She knows it.\" Tara's face was painted in anger.\n\n*****\n\nThe next morning, we met Tara at Charlotte's ridiculously oversized McMansion. \n\nDelaney and I had caught a glimpse of the car Sheree had described when Sheree dropped us at the yard to get my Mustang.\n\nThe little brown car turned out to be a 1973 Ford Pinto, and it was almost impossible to believe it was actually running. I had rusted hulks on the lot that looked like they were in better shape. We didn't get a chance to hunt it down because we'd promised to meet Tiffany and Tara at Charlotte's house, but we knew what to look for.\n\nTara let us in, grinning. \"Mother would have a fit if she knew you were here.\"\n\nI stepped in past her. \"You'd think she'd want people to figure out who the hell shot her in the back.\"\n\n\"She'd rather die than let you help her, Dad.\"\n\n\"Believe me, I'm not trying to help her, I'm just trying to protect Delaney.\"\n\nDelaney walked right into the study and slid open the panel that covered the wall safe.\n\nI glanced around, trying not to smile when I thought of the last time I'd been in the study. The day that Senator Charles Morris had decided to eat a bullet rather than go to prison for trying to murder his own daughter, though he didn't see her that way. \n\nIt'd made the world a slightly better, slightly cleaner, place.\n\nDelaney managed to open the safe on the first try, turning back to us with a smug smile.\n\nTara stepped over. \"Three thumb drives and a stack of paperwork.\"\n\nI started sorting the paper work while she fired up her laptop and started trying out the thumb drives.\n\n\"Bills. A couple overdue notices. A ledger for a 'C&M Consulting'.\" I began sorting it more carefully. \"Chuck's death must've really shaken her up. The overdue notices are all from just after that. Jesus, that's a lot of money. Just what does that pool service do for her?\" I was about to make a \"pool boy\" crack but stopped when I realized Delaney was listening intently. \n\nTara raised one eyebrow but stayed focused. \"The thumb drives are encrypted, I'll have to get the passkey from Mother. Any recent overdue bills?\"\n\n\"Looks like it's all caught up. Damn that woman spends a lot on spa treatments.\"\n\n\"Yeah, I remember her saying that a Senator's wife has to look the part.\"\n\n\"Look the part of what? High Queen Empress of the fucking Galaxy?\"\n\nDelaney snickered but just kept poking around the office.\n\nTara sat up and closed her laptop. \"People have different priorities.\"\n\n\"Charlotte's priority is always Charlotte.\"\n\nTara nodded. \"Yeah, it is. At least it has been since she met Charles.\"\n\n*****\n\n\"That fucking Pinto is behind us.\" \n\nDelaney kept looking forward, just shifting her eyes to glance in the mirror; the lessons she'd learned at \"Camp Mayhem\" had sunk in all the way to her bones. \"Do you think it's that Stein asshole?\"\n\n\"Not a fucking clue, but I'm done fucking around and waiting for someone else to do something. We're going to find out who it is. He's hanging back too far. When I round this corner, you slide over and take the rollback half a block down, stop, then put the disco lights on.\"\n\nShe released her seatbelt and braced herself, ready to slide along the bench seat and take my place. I waited until I was even with a large tree and popped the door. We'd done this dozens of times, picking up wrecks. I dropped out the door and Delaney, half-standing, shifted over, and took the wheel. She could barely reach the pedals, and could still drive better than most of the guys out there.\n\nI stepped behind the tree, pulled my 1911, and waited while Delaney took the rollback a precise half block, stopped and put the emergency lights on.\n\nFor a second I thought the Pinto had turned off, but it eventually crept up and came to a shuddering stop about 50 yards back from the truck. As I walked up, I could see the back of the driver's head as he nervously peered forward.\n\nI walked up and tapped on the window of the car with the butt of my gun. \n\nI expected a bit of shock, maybe a hasty apology or stammering excuse. Pretty much anything but what happened.\n\nMy ears nearly blew out with his high-pitched shriek, and the car screamed backwards with no warning at all. I barely danced back in time to keep from getting gutted by the mirror. The Pinto bounced over the curb backward into the ditch and flipped up, standing up on end, wheels spinning.\n\nI just stared at it for a minute as Delaney sprinted up beside me to look inside.\n\n\"Jesus, what did you do?\"\n\n\"Knocked on the window.\"\n\nShe cocked her head sideways and looked at the driver frantically clawing at his seatbelt. \"Mooky?\"\n\n*****\n\nMooky sat nervously between us, glancing back over his shoulder at the Pinto on the back of the rollback.\n\nI looked him over. \"What the fuck is going on, Mooky; why are you following us.\"\n\n\"I... I mean... I'm not following...\"\n\nDelaney punched his shoulder with her bony little fist. \"Cut the crap. It's been a rough week. He may just shoot you, but I fucking swear, I'll stab you in the nuts if you don't answer.\" She pulled a screwdriver out of the glove compartment and shook it in his face.\n\nHe looked at me, then finding no support, he slumped in misery, hands crossed protectively over his groin with one eye on Delaney. \"I'm just... trying to get my shit back.\"",
        "\"What shit?\" \n\nHe went silent until Delaney waved the screwdriver at him. \"Seed. I accidently gave you a half pound of prime seed.\"\n\n\"Gave?\"\n\n\"I freaked out and grabbed the wrong bag, stuffed the tacos into it and gave it to you. The shit was taped in the bottom. I was storing it in the cooler at work and was about to take it home.\"\n\nI shook my head. \"You're gonna have to buy more seed somewhere, Dumbass. We tossed that bag a week ago. We don't keep fast food bags in the truck.\"\n\nHe looked shattered. \"Where?\"\n\n\"Look, it's probably in a land fill by now. Where ever the trash pickup dumps stuff.\"\n\nFor a moment, I thought he was going to cry. \"I can't buy more. You can't buy this stuff at all. It wasn't just seed, it was G13 seed.\"\n\nDelaney gave a dramatic sigh. \"The stuff is bad for you anyway.\"\n\n\"I've been sparking up since I was twelve and it hasn't hurt me at all.\"\n\nDelaney stared at him in disbelief. \"Jesus. You actually think you're fucking normal?\"\n\nRather than let Delaney go down that pointless road, I asked a question I knew I was going to regret. \"What the fuck is G13?\" \n\n\"It's like, the best shit ever. The CIA developed it. It's pure magic. Lotsa people sell shit they say is G13, but this was really it. My cousin worked in a lab at the University of Mississippi, and she smuggled it out. I put new stuff in my trailer, even put on a better door. I wanted to protect it.\"\n\n\"Have her get more.\"\n\n\"She died, man. They said it was a car accident, but I don't know. CIA, you know?\"\n\nDelaney rolled her eyes. \"Paranoid much?\"\n\nHe looked over at her. \"You don't get it, this shit cures cancer. It really does, Janice heard them say so; that's why she got some seed out of there and gave it to me. A couple of suits came by asking if Janice had sent me anything, said they had a reward for it. I told them I didn't get anything.\"\n\n\"So you can save mankind?\" I chuckled.\n\n\"I was gonna grow it for seed, give a bunch of it out. That's the righteous thing to do. The suits out there just wanna make money.\"\n\nWe pulled into the Taco Grande parking lot and I shut the truck off. \"Can't help you, unless you want to dig through thousands of acres on one of those landfills.\"\n\nDelaney opened her door, suddenly stopped and looked at me past Mooky. \"What if we still had the bag?\"\n\nI shrugged. \"He could have it. I don't want anything to do with it.\"\n\nShe wrinkled her nose pensively. \"I think... we may still have it.\"\n\n\"What?\"\n\n\"I saved the last two tacos for Mrs. Edwards' basset hound.\"\n\n\"You hate Mrs. Edwards.\"\n\n\"Yeah... I saved two Cheesy Bean tacos.\"\n\nI thought about the effect of a Cheesy Bean taco on an aging basset hound's digestive system. \"You really hate Mrs. Edwards.\"\n\nShe nodded, hopped down and opened the right side tool box, pulling out a ragged bag. \"Eeewww, mice got the tacos.\"\n\n\"Which is why we don't keep food bags in the fucking trucks, Delaney.\"\n\nShe tore the bag apart until she found a neatly folded plastic package that had been taped into the bottom of the bag. \"The mice got into this a little too, just a little though.\" She pointed at a chewed-off corner. \n\nMooky stared at the bag in wonder. \"That's it, see the University of Mississippi sticker on it?\"\n\nI looked it over, just some laboratory standard batch information, and \"Strain G13\" in marker letters on the corner of the label. There was no University of Mississippi logo just \"Hackmann Pharmaceuticals\" neatly written at the top. Delaney studied it, sounding it out as best she could. \n\nShe looked at me quizzically and I shrugged. \"Big companies give research grants to universities all the time. It costs less than doing it themselves. An agriculture project like this takes space, and the university might be able to get permits to grow stuff a company couldn't.\" \n\n\"Weird.\"\n\nI pulled his Pinto off the rollback; other than a broken taillight it'd come through okay. Delaney watched him in amusement as he reverently taped up the corner of his precious cargo with some electrical tape from the toolbox.\n\nWhen he finally walked over to go to work, he had a definite spring in his step. Or maybe he just had to pee.\n\nDelaney watched him and giggled. I looked at her warily. \"No.\"\n\n\"No what?\"\n\n\"Just no.\"\n\n\"We can't keep him? Our very own drug dealer?\"\n\n\"Jesus, no. He ain't exactly Scarface. He'd hurt himself with a fucking water gun.\"\n\nShe snickered as we watched him walk in the front door, finally pulling it open after trying to push it first. \n\n*****\n\nWe stared at the single wide we'd just managed to get into the lot. It was the last thing we'd pulled off the abandoned property that the county had paid us to help clear. Six vehicles, four refrigerators and a water-heater tank that had all been dumped there. The mobile home had been left behind a couple of years earlier. It was in better shape than I expected it to be.\n\n\"What are we doing with this?\" Delaney looked over the trailer.\n\n\"Sell it. Its 30 years old, but somebody will probably want it if we deliver it. It's not in bad shape and it'll make somebody a decent little home. We don't have to charge a lot; we got it for free, so anything is a profit.\"\n\n\"That's kind of neat.\" Delaney had a different idea of what was 'neat' in a house, but obviously, the idea of a little house for someone who couldn't afford more than fit the bill.\n\nWe walked up into the office, and Delaney picked up her helmet and pulled it on. \"You want a Jalapeno dog?\"\n\n\"Maybe a ham roll this time. Shake it up a bit. I'll head over there in a couple of minutes, I just have to finish the quarterly report.\" I sat at the little desk in the office and started painfully tallying up numbers.\n\nShe snapped the chinstrap. \"I'm taking the alley behind the Sheriff's department.\"\n\n\"Stein may still be out there. I agree with Tara on him. He had to have serious incentive to try what he did.\"\n\nShe nodded. \"I won't take any chances.\"\n\nLess than twenty minutes later I was at the Sheriff's office, watching Sheree calm an alternatingly horrified and furious Delaney.\n\n\"That fucker destroyed my moped.\" I'd seen it on the way in, all that was left was a mangled red and white heap of metal, half-shoved under the fence around the department. Delaney had repeated herself a half dozen times, getting a little calmer as the adrenaline shakes started slowing down. The tears in her eyes were more from fury than fear, though.\n\nThe Sheriff came in and sat down at his desk. \"We already found the F150. It was stolen in Richmond last night, and one of my guys found it abandoned a couple miles out of town. I have guys out, but...\" He held his hands up.\n\nDelaney sucked in her lower lip for a second and blew out a long breath. \"The driver was a big muscle guy. It wasn't Stein. He was waiting in the auto parts store parking lot. Just...\" she slapped her hands together, \"like that.\"\n\n\"I have the video here.\" He pulled it up and we walked around to look over his shoulder.\n\nWe watched the grainy video. Delaney on her moped carefully riding along the fence, then the truck erupting onto the screen at full speed, catching the moped and raking it along the fence for a dozen yards. \n\nHe stared at the screen. \"That wasn't an accident. And it looks like the truck was sitting here for at least an hour and a half, waiting.\"\n\nSheree pulled Delaney in tight. \"How did you even...\"\n\nThe sheriff backed it up, ran it slowly and we watched Delaney kick free of her moped and roll under the front bumper of the truck, let it pass over her and throw herself under the damaged fence, dashing towards the camera.\n\nDelaney shivered. \"I don't even remember doing that.\" She looked over me with a weak smile. \"At least I didn't pee myself.\" She paused. \"I need to go to the bathroom.\"\n\nSheree went with her, refusing to relinquish her hold, even for a second.\n\nI looked at the Sheriff silently.\n\nHe grimaced. \"Fuck. I get it. You do what you have to do, but try to keep it out of my house as much as you can. Do you have any idea what the hell this is about?\"\n\n\"Not a goddam clue what started it, but it's obviously about Delaney.\" \n\nSheree, tight lipped and grim led Delaney back into the office. \"Les. I think you need to call Tiffany and tell her you have to have word with your ex-wife. This all started the same time she got shot.\"\n\nI couldn't argue with that. \n\n*****\n\nWe walked in past a pair of nurses checking the heart and oxygen monitors attached to Charlotte by tubes and wires. Charlotte took a slow breath and looked steadily at Sheree. \"I don't want her here.\"\n\nI shrugged. \"Want in one hand and shit in the other, see which fills up faster, Charli.\" I noticed Sheree give me a slightly jaundiced look, but there was a hint of a smile.\n\n\"What is she doing here, anyway?\"\n\nSheree gave her a patently fake smile. \"I'm just here to keep Les from givin' in to his baser reflexes. Like, maybe smotherin' you with a pillow.\"\n\nCharlotte looked over at me. \"I don't feel comfortable with her here. She used to be an exotic dancer, you know.\" She said it a bit triumphantly like it was supposed to shock me.\n\nI looked over at Sheree. \"An exotic dancer? Really?\"\n\nSheree shrugged. \"Don't know 'bout 'exotic,' I was born less'en 50 miles from here.\" She screwed her face up a bit. \"Not really much of a dancer either, really, but nobody seemed to mind as long as I got the 'girls' out.\"\n\nI nodded solemnly. \"Yeah, I can see that.\"\n\nCharlotte realized I already knew and stared at me hatefully. \"Strippers are whores; everybody knows that.\"\n\nSheree leaned forward with a saccharine smile. \"It'd probably be best if you jest stopped talkin' for a bit.\"\n\n\"Or what?\" Charlotte rolled her eyes. \n\n\"Or nothing, Honey. Just tryin' to help you out.\"\n\n\"Really?\"\n\n\"See, I was dancin' to pay off a court fine. I got myself in trouble smashing up the truck of a cheating asshole boyfriend. Spent three months in county lock-up, then had to pay a three thousand dollar fine. It was a brand new truck.\" Charlotte's face fell as she grasped Sheree wasn't hiding anything from me. Sheree noticed but drove on. \"That was a lot of money and the Judge don't have a sense of humor if you don't pay the fine. I had to do somethin'. But that's not important part fer you.\"\n\nCharlotte's patience was clearly running out. \"So what is important to me?\"\n\n\"Well, see, I was workin' there to pay the fine off, but most the girls was workin' there to pay their way through college.\" She paused and I noticed the same glitter in her eyes she usually had when she drew a straight flush in poker. \"Nursing students, mostly.\"\n\nCharlotte took just a second to soak that in then looked over at the two nurses who'd been working on the equipment. The older nurse was looking at her coldly with narrowed eyes while the younger redhead was openly glaring at her. \"Oh.\"\n\nThe older nurse straightened up. \"We'll just give you three some privacy.\" She nodded to Charlotte. \"I'm the day shift Nurse Supervisor. You can just call me 'Jasmine'.\" She reached out and touched Sheree's shoulder. \"Nice to see you again 'Candi.' Be sure to say 'hey' on your way out.\"\n\nI waited until they shut the door. \"You put an investigator on us? Not very fucking bright to put a private eye on me with everything Charles was involved in. Could have dragged you down on accident.\"\n\nCharlotte gave an exasperated breath. \"Just a computer background check on you and her. I did it after Delaney... chose to go live with you, before Charles' unexpected death. I just wanted to be sure she'd be okay... I wasn't expecting you to kill off half of North Carolina.\"\n\nI wasn't responding to that, not in a room full of electronics. I changed the subject. \"So what the fuck is going on? Somebody shoots you, I get rolled up by a crooked cop on a bad warrant who seems awful interested in Delaney. The judge is connected to Chucky's old law firm.\"\n\n\"I may have... inadvertently triggered something.\" She shifted uncomfortably.\n\n\"May have?\"\n\n\"You know Charles wasn't Delaney's father.\"\n\nA bad feeling soaked through me. \"So who was?\"\n\n\"I'm afraid I'm not certain.\"\n\n\"Jesus Christ, Charli. Is this one or two guys and uncertain timing? Or are we talking half the Virginia Bar Association and 'I don't have eyes in the back of my head' here?\"\n\nShe sat up primly. \"We were entertaining a great deal at that particular period in time.\"\n\nSheree raised one eyebrow at me and I could see her fighting the urge to ask Charlotte how she had the nerve to accuse anyone of being a whore.\n\n\"Fuck.\" I took a second to look out the window. \"So all real movers and shakers, guys that could help Chuck's fucking career, right? But it's been over 14 years, why would anybody do anything now?\" \n\nShe sat silent, looking out the window. \n\n\"Charli, what the Holy Hell did you do?\"\n\nShe pursed her lips. \"You have to understand. The election campaign very nearly bankrupted us. We spent a great deal and even had to borrow money.\"\n\n\"Charli.\"\n\n\"I may have let a few men know that I would appreciate some assistance in supporting their daughter.\" She said it quickly, spitting it out as if that would keep me from understanding it.\n\nCharlotte had never so much as offered a dime to help with Delaney. Not that'd I'd have taken it. We stared wordlessly at each other. \"Fuck. You were blackmailing lawyers and judges?\"\n\n\"Not blackmail, I was just looking for a little help re-establishing my financial security. I have to maintain some standard of living.\"\n\n\"That CM Consulting financial record, that was it, wasn't it? Your little game is going to get Delaney killed.\"\n\nThere was at least a small flicker of guilt over that. \"I didn't think anyone would be that aggressive. They're respectable men and I was careful not to ask for too much.\"\n\n\"Respectable? Like Chuck? That fucker tried to have Delaney killed for votes, and planned to whore Tara out at the firm, just like he did you.\" She winced at that and I hoped there really was a recording device so she could relive that later.\n\n\"That's not... relevant at the moment.\"\n\n\"Okay then let's talk about 'relevant.' Let's fucking forget about just how many guys you banged to give Chuck a fucking hand. Let's just narrow it down a bit from half the fucking population. How many of them could have influenced Judge Knowlton? Knowlton issued the warrant against me.\"\n\n\"I thought you said it was a bad warrant.\"\n\n\"He claims he didn't sign it, and that one of the court clerks must have forged it. Nobody can prove shit, but I'm not buying it.\"\n\nShe looked thoughtful. \"Just the senior partners, I suppose. Not Burns, he's gay. So Sharpton, Franks and the Calloways.\"\n\n\"The Calloways?\"\n\n\"Father and son. They're both partners.\"\n\n\"So which one...\" I trailed off as she gave me a stone face. \"Jesus. Both, right?\"\n\nShe nodded.\n\nSherry looked at her. \"Oh, Honey. Please tell me it wasn't at the same time.\" \n\n\"Of course not.\" \n\nCharlotte turned to me, away from Sheree. Over her back, I could see Sheree mouth the word \"Ho\" and roll her eyes.\n\n\"The older Calloway couldn't be her father though, it was only one time. He had prostate surgery shortly after that.\"\n\nWe left as soon as we could, Sheree dragging me out. I suspect she caught me eying the extra pillow.\n\n*****\n\nI'd just come out from rearranging the battery shed and nearly tripped over Delaney.\n\n\"I wonder what that's about?\" Delaney had stopped rolling a worn out tire to the tire stacks for a moment. If it had been any other teenager I'd ever met, it'd have been just an excuse to stop working, but Delaney worked as hard as possible just so she could get back to working on her car. The meticulous work of rebuilding the engine was almost weirdly fascinating to her. \n\nI followed her gaze. A black SUV was sitting just outside the closed gate, and a county Sheriff's car was pulled up behind it, the deputy, probably Hyatt, from her lack of height, was talking with the driver, but she didn't have a ticket book out. He handed her something and she looked over it, stepping back toward the rear of the vehicle as she did it. \n\nIt didn't look like a pleasant exchange, and we watched until the SUV drove away. The deputy turned like she was going to get back in her cruiser, but saw us and headed our way. I waved her over to the smaller gate on the sidewalk and we met her there.\n\nShe shot Delaney a smile, but turned serious as she turned to me. \"Sir.\"\n\n\"What can I do for you?\"\n\n\"I have reason to believe the man in the black SUV was taking pictures of Delaney, but the camera SD card was pulled out, so I didn't have proof. With everything that's happened, I thought you should know.\"\n\n\"Shit, even if you did there isn't much you could have done about it.\"\n\n\"He had a gun. He's licensed as a personal security guard. With everything that's happened, I thought you should know.\"\n\n\"Any idea who he is working for?\"\n\n\"He didn't seem like any kind of security guard I'd ever met. Had the whole hoody and baggy jeans thing going on, and I got the impression he's had a lot of run-ins with police. He seemed to find the whole thing kind of funny in a nasty way. The license said Gold Shield Security. I've never heard of them. But it ran okay when I checked it.\"\n\n\"Did you get his name?\"\n\n\"John Ellis. I ran him and he doesn't have any wants or felonies, but he has a string of misdemeanor battery and assault charges.\" \n\nDelaney stared at her steadily. \"Did you see him taking pictures of me?\"\n\nHyatt shook her head. \"I didn't, but the missing SD card is a pretty good indicator. Nothing I could hold him on, and it wouldn't stand up for probable cause. It was called in by Burton Merkowski. He drove past on a taco delivery to Friendship Village. They seem to eat a lot of tacos out there. He thought the guy was some kind of pervert.\"\n\n\"Mooky?\" Delaney half smiled. \"Delivering tacos to Friendship Village?\"\n\nHyatt smiled and shook her head. \"Mooky. Lord knows, he's a goofball, but he usually means well. They eat a lot of tacos out at the Village.\" From her expression, she knew damn good and well why they did. She confirmed it a second later. \"If Mrs. Ramirez offers you a brownie, you should probably decline it.\"\n\n\"So we've heard. Glad he called it in. And thanks for running the goon off.\" \n\nShe nodded. \"Be careful, I have a bad feeling about that guy.\"\n\nDelaney gave her a grin. \"You up for a few more rounds of poker?\"\n\nHyatt shook her head laughing. \"No way. I don't think you play fair.\"\n\n\"A fair is a place you buy corndogs and funnels cakes...\" Delaney paused. \"Oooh Funnel cakes...\"\n\n*****\n\nI could tell by her expression Delaney was thinking about the same thing I was. Maybe Mooky knew more. He was afraid of the cops. Probably afraid of us, too, but that would work in our favor.\n\n\"We should drop by and see Mooky, thank him for calling that in, you think?\"\n\nDelaney nodded. \"Maybe he saw something else.\" \n\nMooky's shift at Taco Grande had ended by the time we go there, so we decided to drop by his trailer. It was kind of on the way home, anyway, and Sheree was getting off a bit late.\n\nWe grabbed the piebald Mustang Cobra, my \"Sally,\" out of her garage for a change. It'd been a while and I needed to run her a bit. \n\nIt wasn't hard to find the spur that ran to his trailer, I was pretty sure I'd picked up a couple abandoned cars for the county there about six years before, long before Mooky was able to set up his grow house.\n\nA black car shot past us as we rounded a long wooded bend. It wasn't a good angle, but l I got a look at the two men in it. Tactical 501 shirts. They might as well have had a huge sign that said \"expensive corporate security.\" This sure as hell wasn't the hoody-and-baggy-pants goons. I caught just an impression of the driver's face, but his obvious annoyance was enough to tell me we might be about to run into a problem. ",
        "That was little more clear a fraction of a second later when we burst into a small clearing and saw the glow of flames at the end of Mooky's trailer.\n\n\"He's in there!\" Delaney pointed at Mooky's patchwork Pinto parked a yard or two from the trailer.\n\nI stomped Sally to a stop far enough to the side of the trailer to makes sure she wouldn't be scorched, jumped out and sprinted for the front door. I yanked on it, but the lock held. Mooky's special door to keep the thieves out of his grow house was going to get him killed.\n\nI started to turn toward Sally, but Delaney was already shoving the crowbar from Sally's trunk into my hands with a smug grin.\n\nI jammed the edge into the jamb right at the lock and heaved back on it until the door popped open. Mooky was right, it was a damn good door, but it was still mounted on a cut rate thirty year old single-wide. \n\nThe wave of heat from the flames consuming the end of the trailer was staggering, but I gritted my teeth and pushed in. \n\nRoiling black smoke filled the place, I dropped straight down into the clear space below the smoke, crawled in and found myself staring right at Mooky's skinny ass. As in his butt was less than a foot in front of my nose. I grabbed his belt and started dragging him backwards, searching for the door frame with my foot until a hand grabbed my ankle and began tugging on me. Delaney, half in and half out the doorway guided me back.\n\nWe tumbled in a heap down the cheap aluminum steps.\n\n\"Is he alive?\" Delaney, tears from the smoke tracking down her face, tried to shake Mooky awake. I sat up and reached over just as he gave a weak cough.\n\n\"Thank God.\" \n\nDelaney gave me a crooked grin. \"I knew you liked him! How can you not like somebody named 'Mooky'?\"\n\n\"Fuck no, I was just afraid I'd have to try to resuscitate him. Be like giving mouth to mouth to a fucking bong. End up coming to, in Cleveland, with no shoes, no shirt and 24 cents in bent pennies in my pocket.\"\n\n\"What'd the Sheriff say? 'That's oddly specific'?\" She snickered and we managed to sit him up. Half his hair was curled by the heat, he was lucky it hadn't caught fire. Angry, livid bruises were starting to form on the whole left side of his face. \n\nDelaney looked sharply back down the road. \"I think they're coming back.\"\n\nI listened and made out the distinctive sound of the Audi's engine getting louder. They must have reached the main road then decided to come back to finish the job and get rid of the witnesses. \n\n\"Shit.\" I looked around. A second later, the sound of a siren wailed up from the same direction. The distinctive pops of a handgun drifted up. I caught Delaney's eyes. \"We need to get him back behind Sally, this is about to turn into a fucking circus.\"\n\nJust as we reached the back of the Mustang, the Audi erupted from the trees and slid to a stop next to the Pinto. Before it was even completely still, a deputy's cruiser powered in, pulling sideways, blocking most of the road. Two men in suits were out of the Audi almost simultaneously, firing what looked to be Glocks at the police cruiser. A second later, shots started answering from near the front bumper of the cruiser. \n\n\"Fuck this.\" I stepped past Delaney and Mooky, reached under the dash and pulled out my .45. \"Stay down.\"\n\nDelaney flattened herself to look under the car. Not exactly what I intended, but I didn't have time to argue.\n\nI walked forward until I had a clear line of sight on both gunmen. Blinded by the blazing trailer, they couldn't see me. I was hoping the deputy would realize we were on the same side and not shoot me.\n\nThe driver spun as the first two rounds from the 1911 caught him in through the chest. The second shooter, too focused on the deputy, took too long to react, and the next double tap caught him easily. It was a little sloppy, the first round was center mass, but the second punched up through his collarbone into his neck. Neither one of those fuckers was getting back up.\n\nHoping the deputy was watching, I held the 1911 up and ejected the magazine, then locked slide back, sending the chambered round flying into the darkness. \"Clear\"\n\nA hand tapped weakly at the ground near the front tire. \n\n\"Shit.\" I sprinted for the fallen deputy, shoving the gun into my belt. \n\nDeputy Hyatt, all four foot ten inches of her was staring up at me, gasping in pain. \"Hit..twice. knee...and...and...\" She shook violently for a second. \"Arm.\"\n\n\"Delaney! Trauma kit! Now!\"\n\nShe must have already been on her way, she slid to a stop on her knees shoving the kit into my hands. \"Work fast. I'm getting Sally now.\"\n\n\"We need to call...\"\n\nDelaney grabbed my shoulder. \"I don't think we have time. Remember how you told me 'most' cars don't explode?\"\n\nThe way she said, \"most\" caught my attention. \"The Pinto?\"\n\n\"The Pinto. It's on fire.\"\n\n\"Fuck.\" With the cars packed in the way they were, the small clearing was about to become an inferno. The Pinto probably wouldn't actually explode, but in an area as small as this, it wouldn't really matter.\n\nI could hear Sally roar to life as I struggled to get Hyatt's vest off and get a look at the wound. She wasn't bleeding out, so at least that was a good sign. I took a quick look at her knee. Plenty of blood, looked like a tib fib injury, both bones in the lower leg had been smashed near the knee. Had to hurt like hell, but she had a little time. \n\nDelaney pulled up next to me, she had the passenger seat all the way back and laid down so I could just pull Hyatt in on top of me and slammed the door. She screamed as her leg bounced.\n\n\"Go!\"\n\nAs Sally tore past the cruiser, I heard a crunching sound, but the thump of the Pinto's gas tank immediately overwhelmed it as the whole clearing filled with flame.\n\n\"I'm sorry. God. I'm sorry.\" Delaney looked horrified. \n\n\"We made it.\" I managed to get the pressure dressing on her arm, then pulled a roll splint out and began to stabilize her knee.\n\n\"Your mirror. There wasn't enough room and the mirror on this side...\"\n\nI couldn't help it. I started laughing. \"I can get another. It's just a mirror, Princess. I'll trade that for third degree burns any day. \n\nShe started to slow. \"I can stop here if you want.\"\n\n\"Keep going, there's a propane tank by the trailer.\" \n\nI was still working on Hyatt, nearly another mile down the road when I saw the flames shoot up into the sky behind us. \"Sheriff better have his insurance paid up on that cruiser.\"\n\nDelaney suddenly slowed and began flashing the brights. \"We better get out really slow. They look pissed.\"\n\nEvery deputy available must have been standing at the road block, shotguns out. \n\nDelaney shut Sally off and stepped out slowly with her hands up. \"Hyatt's been shot. Needles is trying to help her. He's getting out now.\"\n\nI managed to get Hyatt on the ground, and two EMTs were at my side almost instantly. The one with the blonde crew cut looked her over rapidly as I described the injuries. \"This is pretty good work, you do this in a moving car?\" \n\n\"Didn't have a lot of choice. Done it in Humvees a few times, anyway. How the hell did you get here this fast?\"\n\n\"When the deputy called in 'shots fired,' the Sheriff gave an all call. He figured somebody was going down.\"\n\nDelaney had raced over to the Sheriff and was talking animatedly.\n\nWe started to load Hyatt up and Delaney raced over and leaned over her. \"You still owe me some candy bars. You're not getting out of it this way.\"\n\nHyatt blinked her eyes open and tried not to laugh. \"I'll pay up. I still think you cheated somehow.\"\n\nDelaney grinned. \"We didn't have electricity for four months when we first moved to the cabin, so we played poker every night.\"\n\nHyatt narrowed her eyes at me the best she could. \"You turned her into a card shark?\"\n\n\"What? I was teaching her math. It was homeschooling.\"\n\nHyatt was still chuckling weakly as we watched them load her up into the ambulance and head out.\n\nThe Sheriff walked up beside us. \"Delaney explained it. Two perps down, maybe Hyatt...\" He stared at me from under lowered brows. \"Maybe you. That's fine, they shot at one of my deputies, so they're bought and paid for. We'll fill in the details later. I'll need your gun though, to check ballistics.\" He looked up the road at the blazing clearing. \"It'll be morning before we can even recover the bodies.\"\n\nI nodded and handed it to him carefully. \"Am I gonna get it back?\"\n\n\"It's not gonna come up hot on a ballistics check, is it?\"\n\n\"Not this one.\" Car compactors are great for getting rid of evidence. Nobody wants to deal with a two ton steel origami wrapper that just might have something in it.\n\nHe looked upward for a moment, probably praying for patience, \"Fine. You'll probably get it back. Hell, I'm sure you have a half-dozen more anyway.\"\n\nI gave a non-committal gesture. Hell, I had another 1911 in the trunk, in a \"hide\" under the carpet, but I didn't plan to share that. \n\nHe leaned back. \"I do have one question. Where's Mooky?\"\n\nDelaney shrugged. \"In the trunk. What else was I supposed to do with him?\"\n\nWe walked around Sally and Delaney popped the truck. Mooky was snoring peacefully, drooling on my trunk liner.\n\nThe Sheriff raised an eyebrow at Delaney. \"You stuffed him in there by yourself?\"\n\nShe grinned. \"I lug wheels and tires around half the day. I kinda got his top half in and poured the rest of him in.\"\n\nI looked him over. \"We probably outta drop him at the hospital and get him checked out. I think he's okay, but he's got some smoke inhalation and maybe a light concussion.\"\n\nThe Sheriff sighed. \"I'll get an ambulance headed this way.\"\n\nDelaney twisted her mouth, eying Mooky. \"Be a pity to wake him up just to put him in an ambulance.\"\n\nI nodded. \"He does look peaceful, doesn't he? We can drop him off, I want to see how Hyatt is doing, anyway.\"\n\nDelaney closed the trunk. \n\nI fired up Sally and had Delaney call Sheree. \n\nAfter a few minutes of quiet conversation, Delaney hung up. \"Sheree says that gives her time to clean up before we use up all the hot water. She's glad we rescued Mooky and Hyatt. Especially since there's no way it was our fault this time.\" \n\nWhen we popped the trunk at the hospital, Mooky looked up at us bleary-eyed. \"Dude, I had, like a really bad nightmare.\" He pulled himself up to sitting and got out of the trunk. He was completely unsurprised by waking up in a trunk in the first place. \"Those two suits, they took my shit, and they like burned my place and...\"\n\nHe trailed off, staring up at the hospital sign, then touched the side of his face, wincing at the pain. \"Awwww, Nooooo. They burned my place didn't they?\"\n\nI held my hands up. \"It was all we could do to pull you out. It was too late for the trailer.\"\n\n\"One of them took my seed, too.\"\n\n\"I'm pretty sure it's gone this time. Your 'suits' got in a shoot-out with Deputy Hyatt outside our trailer, they ended up dead and the fire burned the whole area.\"\n\nHis face fell. \"Gone?\"\n\nI nodded. \"Gone.\"\n\nMooky looked down at his feet. \"This sucks man.\"\n\nDelaney glared at him. \"Hyatt got shot trying to stop those two. That's why we're here.\"\n\nHe rubbed his forehead and looked down with glassy eyes. \"Nobody's supposed to get hurt. It's just weed, man, not meth. This isn't like \"Breaking Bad\" or some shit.\" He looked up at the sign. \"Is she here? Can we see her?\"\n\nWe led him in and ran right into the Sheriff standing in the waiting area outside of surgery. There's an advantage to having lights and sirens when you want to get somewhere fast.\n\nHe gestured us over. \"Doc says she should be okay. No promises, you know how they are. He said you kept her from losing too much blood and it looks like nothing vital was hit. She won't be able to see anyone until tomorrow afternoon if everything goes well.\"\n\n\"She was doing pretty well when we loaded her into the ambulance, or I'd have ridden with her. She's tough; she should be okay.\" \n\nHe pulled out his notebook. \"I talked to her a little before she went in. The pain meds were working well enough for her to concentrate. From what I can put together, they wounded her when she did the initial traffic stop, shot her through the door when she started to get out. She blocked the road, started shooting back, so they took off back toward Mooky's place.\"\n\n\"That fits.\"\n\n\"Once there, they re-engaged and... the perps became shot. It'll probably take til morning for us to get in there to see what's left. Whatever was there, it's probably burned to ashes by now. The fire can't really go anywhere, and Chief Simmons isn't really interested in risking his people.\" He glanced at Mooky who was still trying to get his brain around the disaster. \"Which brings us to whatever the hell was going on in the first place.\"\n\nI sighed. \"Believe it or not, I think this is about a few ounces of marijuana seed.\"\n\n\"C'mon, Needles, nobody kills anyone over weed anymore.\"\n\nDelaney looked up at a glassy eyed Mooky. \"Just tell him the truth, Mooky. He's a good guy.\" She smirked. \"Besides, all the evidence is gone.\"\n\nMooky sighed and slid down the wall to sit on the floor.\n\nThe Sheriff eyed me. \"I'll get his story now, but I'm dropping by to get yours later tonight. I know it'll be late.\"\n\n\"One of your deputies got shot. There's no such thing as late when one of your people gets hurt. I'll let Sheree know.\"\n\n\"Damn right.\"\n\nAs we left the parking lot Delaney bit her lip. \"Do you really think this is over that package he had?\"\n\n\"I don't know. It fits. It doesn't make any sense. But it fits.\"\n\n\"How much could it have been worth?\"\n\n\"Not much, a few thousand bucks, tops. Sure as hell not enough to kill for. Unless...\" I stopped. The whole idea was ridiculous.\n\n\"Unless what?\"\n\n\"Unless somebody really believes what Mooky said about it curing cancer, but that's nuts.\"\n\nDelaney stared out the window. \"A class of new drivers started the week we left Texas. They sent two guys home because they tested positive for marijuana.\"\n\n\"They'll do that.\"\n\n\"Kurt told us why. He said it slows your reflexes and makes it harder to think clearly.\" She shuddered. \"I can't imagine wanting to make it harder to think or read or...\" she stopped, looking a little sick.\n\nI could see where she was going. Delaney already felt \"stupid' sometimes, because of her dyslexia, no matter how much Sheree and I supported her. She'd come a long way, but reading was still hard and always would be. \"Yeah, it's probably not something you'd want to use.\"\n\nShe nodded slowly, then forced a smile. \"I know I'm a pain in the ass, but at least you don't have to worry about that.\"\n\n\"Just wandering power-sanders.\"\n\nShe shrugged dramatically. \"So with all the shooting and the burning and shit, it's the sander that bothers you?\"\n\n\"I'm used to the 'shooting and burning and shit,' but I hate it when my tools aren't where they're supposed to be.\"\n\nDelaney rolled her eyes. \"Oh. My God. The end of the world. A misplaced power-sander.\"\n\nI shook my head sadly. \"It's a sad world when sanders get misplaced.\" She always left the sander exactly one foot in front of the shelf cubby it belonged in. Carefully oiled, cleaned up and with a new sanding pad in place if it needed one. It was one of those weird little \"us\" things that people have. She knew she could be \"bad\" and I would growl about it, but we both knew it was okay, that it was just how we were.\n\nWe both knew what it really meant, and I could see her settle comfortably. \n\nAs we reached the cabin and pulled up to the right of it, Delaney glanced over her shoulder. \"Damn, the Sheriff must have left just after we did.\"\n\nI glanced in the mirror and caught blue and white disco lights coming up fast behind us. I slammed Sally into park. \"Take the phone. Get into the woods and call the Sheriff.\"\n\nShe looked at me in shock. \"What?\"\n\n\"The Sheriff and his men use red, white, and blue lights. Not blue and white. That's a state cop thing.\"\n\n\"Shit. What are you...\"\n\n\"Go, dammit.\"\n\nShe flew out of the car and dashed around the cabin as I hit the trunk release and dropped out the door to the ground.\n\nI was planning on trying to get to the 1911 in my trunk, but bullets were already slamming into Sally's ass end. \n\nI didn't recognize the passenger, a bullet-headed man with a grey T-shirt, but as soon as I saw the driver I hoped Delaney was making good time.\n\nStein, looking like a frazzled racoon with his two black eyes, was shouting at his partner. \"Just put him the fuck down and get that little bitch!\"\n\nI was moving as fast as I could, but the guy had a clear shot at me and he seemed to have his shit together. I'd pretty much resigned myself to getting shot for the fourth time in my life when the overwhelming boom of a shotgun from the front window of the cabin shocked everything into silence.\n\nThe guy staggered back, red blossoming across most of his chest. A second deafening shot pitched him over backwards. The peculiar jingling of shattered glass raining to the ground was the only sound at all for a second.\n\nStein dropped into a crouch to take himself out of the line of fire and began quickly working his way around the car to get a shot at me. Asshole or not, he was well trained and losing his partner hadn't shaken his nerve at all.\n\nHe was just getting around the car, grinning, when something buzzed from the side of the cabin, cracking him across the face and falling to the ground. \n\nHe staggered back a couple steps, his nose spouting fresh blood. I dove for his partner's Kimber.\n\nDelaney crowed wildly from around the corner. \"Asshole!\"\n\nHe straightened up snarling. \"You little bitch!\"\n\nI rolled to my feet, thrust the muzzle of the Kimber against his temple and fired. He collapsed and I stared down at him. \"I fucking warned you about calling her that.\" Not that he could hear it.\n\nSheree stalked from the front of the cabin, shotgun cautiously leveled. \"Is that all of them?\"\n\n\"I think so.\" One glance at Stein's partner told me he was dead. \n\nDelaney crept around the corner of the cabin. \"Sorry. I know I was supposed to run, but the cell fell out of my pocket when I ran.\" She walked over and picked it up from the ground. \"So I kinda improvised.\"\n\nI shrugged. \"Well, I'm kinda glad you did. If you hadn't, I'd have had a real problem.\" \n\nSheree looked over Stein and his man suspiciously until she was convinced they were dead. \"I was finishing up my hair when I heard the shooting. Wasn't 'xactly planning on having a gunfight just now.\"\n\nDelaney gave a chirping laugh. \"I was gonna ask about that.\"\n\nSherree tugged her pink \"Virginia Beach is for Lovers\" t-shirt down a bit in a vain attempt to cover her red lace panties. \"Next time we do this, y'all call ahead and let me get into some coveralls, too, okay?\" She tried to sound surly, but her amusement still peaked through.\n\nI pretended to study her. \"I dunno, I kinda like it.\"\n\nDelaney gave a long dramatic sigh. \"God. Of course, you do. Eeewww.\" Then she broke down in a giggle. \n\nI watched Sheree carefully, trying not to be obvious. She seemed more composed than I would've expected.\n\n\"Somebody's coming.\" Delaney pointed to a pair of headlights coming up the road. \n\nWe looked at each other for a second, then Sheree hefted the 12 gauge and moved behind Stein's car. I stuck the Kimber in my belt and pulled the back-up 1911 out of the hide in Sally's trunk. Delaney picked up Stein's gun; she took a deep sigh and looked at me. \n\nI gave her a nod. \"Stay close to Sheree.\"\n\nThe Sheriff's Tahoe slowed to a crawl as he took in the scene. He stopped. Once I could see his face clearly in the light from the cabin, I put the 1911 on the hood of Stein's car.\n\nHe slid out, hand hovering over his sidearm. \"I'm sure there's one hell of an interesting story here, Needles.\"\n\n\"Stein.\"\n\n\"Shit. You guys okay?\"\n\n\"Car's shot up, but all of us are fine.\"",
        "\"Any more of them.?\"\n\n\"Just the two of them.\"\n\nHe keyed his mike and called it in, looking over the bodies.\n\nHe glanced over at Delaney. \"Aw hell, you're letting Little Miss Mayhem play with guns now?\"\n\nDelaney looked startled and hastily placed Stein's gun on Sally's hood. I cut in before she could say anything. \"That's Stein's piece. We weren't sure it was you coming up the road. Been a long fucking evening.\"\n\nHe nodded, pacing the scene and eyeballing angles. \"Leave it to you two to end up in two unrelated firefights in one damn evening.\"\n\nThe Sheriff looked over the shotgun pattern on Stein's man, then over at Sheree's shotgun. \"You okay?\"\n\nShe met his look with a steady stare. \"They went after my baby and my man. I'd do it again tomorrow. And the day after. As many times as it takes.\"\n\n\"Good call. We'll put that in your statement. Should stop any questions right there. Stein was an 'armed and dangerous,' so this should pretty much be a walkover. I'll have to collect your guns, though.\"\n\nI pulled the Kimber out and put it on the hood. \"Never fired mine, had to use one of theirs.\"\n\n\"Still have to check.\" He chuckled. \"Is this 1911 going to come up hot on a ballistics check?\"\n\n\"Shouldn't. It's practically brand new. I haven't shot hardly anyone with it yet.\"\n\n\"With all this shit going on, I don't really want to leave you unarmed. You need to borrow a piece?\"\n\n\"I've got another. And a spare shotgun.\"\n\n\"Jesus, Les, how many do you have?\"\n\n\"As many as I need.\"\n\nSheree put the shotgun on Sally's hood. \"If you two are going to stand around jawin', I'm gonna go on in an' get dressed.\" She looked at Delaney. \"You should probably go get cleaned up.\"\n\nWith that, the two of them marched into the cabin, Sheree acting for all the world as if being caught out in a T-shirt and underwear was perfectly respectable.\n\n\"You're a lucky man, Needles.\" \n\n\"Wouldn't trade them for anything.\"\n\n\"I talked to Mooky, and he can't lie for shit, so I know he told the truth when he said he had a run in with those two over a package his cousin sent. That means that shit earlier had nothing to do with you two.\"\n\n\"We were in the wrong place at the wrong time.\"\n\n\"Right place, right time or I'd have been out a deputy and Mooky'd have burned to death. But I have to ask what the hell were you doing there in the first place?\"\n\n\"We were going to thank Mooky for calling in the goon taking pictures of Delaney at the yard and ask if he'd seen anything else.\"\n\n\"I don't know if that's connected with Stein or a random perv. Could even just have been an amateur photographer with no sense.\" The Sheriff held his hands up helplessly.\n\n\"The way things have been running lately, I doubt it. Maybe a spotter for Stein.\"\n\nHe rubbed his chin. \"Be careful, there may be more out there. You sure this is connected with the attack on your ex-wife?\"\n\n\"The timing alone is pretty convincing...\" I paused, thinking. \"Stein's gun looks like a Smith and Wesson M&P 9; I heard a rumor that Charlotte was shot with a nine-millimeter. You might want to see if someone wants to check the ballistics on Stein's gun, here.\" \n\n\"He seemed awful interested in Delaney.\"\n\nI didn't want to share everything Charlotte had said; I was pretty sure she would try to throw me under the bus for what I'd done to protect Delaney at the first opportunity if she could get away with it. She had no proof, but it could still make my life difficult. \n\nI could make sure he had a clue just in case. \"He really seemed interested in just who Delaney's biological father might be.\" \n\n\"Not, I take it, the late, unlamented Senator?\" The Sheriff raised an eyebrow sardonically.\n\n\"Apparently not.\"\n\nHe rubbed his chin. \"I can write it so he comes off as an obsessed pervert using his office to try to kidnap a 14 year old girl. That shit happens, and the State will find it convenient to be quiet about the whole thing as long I don't make it blatant. Maybe insinuate that he ran across her when he was investigating the attack on your ex.\"\n\n\"Hell, that may be the truth, anyway. And if he was working for someone, for some other reason, they wouldn't know we're on to them.\"\n\n\"Yeah, that mysterious 'fake warrant' shit still bothers me.\"\n\n\"Me too...\" I saw a parade of lights headed up the road and the sound of distant sirens began drifting up towards us. \"Looks like your crew is here.\"\n\nDelaney stepped out of the front door. \"I'm pulling half a sheet of plywood out of the workshop and putting it up over the window until I can fix it.\" She headed over to the little outbuilding.\n\nThe Sheriff gave a slight smile and I watched approvingly. \"She's appointed herself caretaker of the cabin. She loves the fact that somebody built every piece by hand for their family. Any time a repair has to be made, she insists on doing it, and she tries to do it with hand tools.\"\n\nHe watched her more drag the half sheet out of the shed. \"I get the impression there wasn't a whole lot of 'give a damn' in her life until you an' Sheree walked into it.\" \n\n\"Charlotte treated her like a total failure, like she was too stupid to do anything right. Kind of isolated her.\"\n\n\"Yeah, I kinda picked up on that. Your ex struck me a stone cold bitch. You know, you keep a dog alone on a chain, he gets nasty with anyone who comes near. Needs to relearn that not everyone is an enemy.\" He glanced at the approaching lights. \"The deputies will take your statement.\" He stood up and called over to Delaney. \"You want a hand with that?\"\n\n***\n\nWe were late getting out of bed the next morning. We'd been up late filling out witness statements and watching crime scene techs. For all my concerns about Sheree having to pull the trigger on Stein's man, she slept soundly, cuddled up tight to me with a smile on her face. Of course, she'd declared it Movie Night, so she was sandwiched between me and Delaney on the couch, and maybe that made it easier.\n\nDelaney and I headed up to the salvage yard the next morning. The Sheriff was already waiting for us. Delaney waved to him and went on in to the trailer to do her schoolwork.\n\nHe offered me a cup of coffee from the Quickmart. \"Just giving you a head's up; the State is already shying away from investigating Stein. His office doesn't want to deal with the possibility of a wannabe child molester, so they're all for ignoring motivation and calling it self-defense. There's no ID on the other guy, nothing real anyway. Everything on him looks to be fake. We're running fingerprints. We get anything I'll let you know.\"\n\n\"That's not suspicious at all, is it?\"\n\n\"Could've been a pro.\"\n\n\"He moved well, like a cop or maybe military. He'd been shot at a few times, just had bad luck.\"\n\n\"Shotguns'll do that.\" He looked at me. \"How's Sheree dealing with it?\"\n\n\"Slept like a baby.\"\n\n\"Good to hear.\" He pulled out his notebook. \"Speaking of fake IDs, one wallet survived the fire at Mooky's. We'll need dental to ID either of them, but I suspect we won't get anything. The IDs in the wallet were well-done fakes. A Mississipi driver's license, but the number doesn't exist. A few cash cards loaded to the max. Nothing personal in the wallet, nothing that ties to anything useful. Vehicle was a rental in the same fake name. The coroner thinks the dental work on both corpses looks European. Different composites and filling materials than we use here.\"\n\n\"Pros going after Mooky. They looked like it.\"\n\n\"Doesn't make any sense does it?\"\n\n\"Unless whatever he got from his cousin was really valuable to someone.\"\n\n\"It's gone now, burned in the fire.\"\n\nI thought about it for a second. \"Make sure that anyone who asks knows that. \"\n\nHe nodded. \"Yeah, I made a point of it in the official reports. 'Package, unopened, contents unknown, destroyed in fire'.\"\n\n\"It might help.\"\n\n\"Can't hurt. Whatever Mooky thinks, this can't be about weed. Not with pros involved.\" He shook his head. \"And none of this links with Gold Shield Security as far as I can tell, so watch your back.\"\n\n\"We will, just watch yours, too.\"\n\n*****\n\nI dialed the phone and waited. \"K2 Executive Services. How may I assist you?\"\n\n\"This is Lester Dawes. I need to speak with Kurt or Katie.\"\n\n\"Hold one, please.\"\n\nA minute later another voice came on. \"Needles?\"\n\n\"Kim? I was trying to reach Kurt.\"\n\n\"Dad's out of the country, but you're on our short list if you need help.\"\n\n\"Just some information. I'm putting you on speaker phone on our end.\"\n\n\"Okay.\" \n\nAs soon as Delaney heard Kim's voice she sat upright. \"Hey, Kimmi!\"\n\n\"Thugbunny? How's my favorite crash test dummy?\"\n\n\"Miss me, don'cha?\"\n\n\"Let's see, the latest six week driver course just graduated and all together they managed to only roll half the number of cars in their entire course that you did in your first week.\"\n\n\"Chickenshits. No balls at all.\" Delaney's grin widened as she singsonged that last bit.\n\n\"That's kind of what Dad said. He said you have a standing job offer when you turn twenty-one.\"\n\nDelaney grinned maniacally. \"Think of all the paperwork you'll get to do!\"\n\n\"The insurance premiums will sure as hell go up.\" Kim paused for a second. \"Mackenzie asked if maybe there was a chance for another summer camp next year. Dad and Mom thought it sounded like fun. Driving, but some other stuff, too. Maybe four weeks if you're interested.\"\n\nDelaney stiffened like she'd been hit with a shock and stared at me, nodding frantically and silently pleading. I glanced at Sheree and got a smile. I gave a single nod to Delaney and she let out a loud whoop. \"Hell yeah!\"\n\nKim laughed. \"I figured. We'll let you know when and what to bring.\" \n\nAfter a few more minutes of banter, Kim finally asked me what I needed.\n\n\"Information on an outfit called Gold Shield Security. We crossed paths with one of their guys.\"\n\n\"Crossed paths?\"\n\n\"Fucker was watching Delaney.\"\n\n\"You catch him?\"\n\n\"No, the cops did. Had to let him go.\"\n\nShe paused and I could hear a keyboard clicking away. \"Small outfit, not in our league. Usually does VIP security for rap stars and celebs. Typical 'bigger is better' musclebound goons, not real talent. Rumor has it they provide 'extra services.' Leg-breaking, occasionally murder. Some of their members were implicated in a series of drive by shootings in that East Coast-West Coast rap feud. No convictions. Let me check contracts.\"\n\nA minute later she began running down a list of contracts they knew about. Pretty much a list of low level celebs with a bit of singing talent or some sex tapes. Until she got to one name.\n\n\"Wait. Go back one.\"\n\n\"Jason Bradley Calloway, Esquire. He does extreme sports. High altitude mountain boarding, rally racing, BASE jumping, motocross, ice climbing.\"\n\n\"Last I looked, he's a lawyer.\"\n\nShe tapped away for a second. \"That, too, but he doesn't spend much time at it from what I can see. He's kind of a rising star in extreme sports.\" \n\n\"Nice work if you can get it. You know where he lives?\"\n\nKim paused for a second. \"Look, I'll send you a standard target package on him, no charge. If he's stalking Delaney, there's a reason, and it's probably not a good one.\"\n\nSheree raised an eyebrow and mouthed \"Target package?\" at me.\n\n\"We'll take it.\"\n\n\"Standard protocols, send me an email with your PGP key.\"\n\nI started to ask what the hell she was talking about, but Delaney cut in. \"Can you just use the email and key we set up at 'summer camp'? I've only ever used it to email Tess and Mac anyway.\"\n\nKim paused. \"Yes. I still have it. Good idea. I'll send you a test message and send the package in a day or two.\"\n\nDelaney straightened up smugly. \"See? I paid attention.\"\n\n\"I wish our paying students tried half as hard as you do.\" Kim actually sounded like she meant it.\n\nDelaney suddenly blushed, and Sheree looked at her proudly. \n\n\"Sent.\"\n\nSheree signed Delaney onto the computer. Delaney's experiences with the NCWB had made her leery of her own gullibility. She refused to get on the computer unless one of us was there, afraid she'd fall into some kind of trap again. She popped her email open. \"Got it.\"\n\nWe finished the call and I looked at the email. \"Your email account is encrypted?\"\n\nDelaney shrugged. \"Katie had us do this. She said it'd be harder for a cyberstalker to go after us. She said girls our age need to careful.\" She looked up at the ceiling. \"Like I didn't know that already. Besides secure comms are always important.\"\n\nThat garnered another raised eyebrow from Sheree. It was pretty clear I needed to explain Kurt and Katie's business to her in more detail.\n\nDelaney took a while to spin down to go to bed; the prospect of another summer camp had her too excited.\n\nShe finally did, though, and Sheree and I sat on the couch watching the fire. I knew the question was coming.\n\n\"So, Kurt and Katie's school...\" She just let it hang there.\n\n\"It really is for bodyguards. VIP asset protection. Really high level stuff mostly. They also manage some private military contracts. Some armed combat forces and security service stuff.\"\n\nSheree looked at me suspiciously. \"That sounds like mercenaries.\"\n\n\"Mercenaries are illegal. The UN basically banned them back in the late 1980s.\"\n\n\"So what's the difference?\"\n\n\"The name mostly. Supposedly, there are other differences, but they aren't really clear. Kurt and Katie mostly do training.\" Mostly. The only time they'd asked for my help, they'd seemed to be on the right side of the law. At least that's what I'd assumed. I hadn't asked a lot of questions.\n\nSheree gave me a calculating look and shifted gears. \"Did Delaney really roll cars over down there?\"\n\n\"That's normal in a really good 'crash bang' course. The only way to really know what the limits are is to go all the way over a few times. It's the only way to get a real feel for it.\" I could see she was trying not to be upset. \"Kurt and Katie are real pros. The cars have safety harnesses and they have a crew and equipment right there, just in case. She was probably safer there than on a roller coaster.\" That was probably an exaggeration, but most roller coasters don't have crash medical teams standing by.\n\nShe sat silently for a second. \"That's why they always need more cars, isn't it?\"\n\n\"Yeah. The class is supposed to chew them up. If they don't roll them, they aren't trying hard enough.\"\n\n\"So Delaney rolled a lot of them. She's really fearless, isn't she? Too fearless.\" Sheree smiled softly at me. \"That's why you did it, so she'd know when she needs to put the brakes on.\"\n\nI nodded. \"There are limits for everybody. Physics doesn't give a shit if you're afraid or not. I'm hoping she sees that it isn't just about cars. Besides...\" I stopped for a second trying to figure out how to say it right.\n\nSheree beat me to it. \"She attracts trouble? I'm thinking Delaney could sit on the couch eating cookies and watching TV in her pajamas and there's a good chance it'd end up in a shootout. That's what yer thinkin' isn't it?\"\n\n\"It seems like it. I know it's not her fault. This is all on Charlotte, but Delaney is stuck in it up to the neck and we don't know how far or deep this goes.\"\n\nSheree was quiet for a moment. \"Why do you think they really want to do another 'summer camp'?\"\n\n\"I think Katie is looking at this as an investment. Kurt is probably just having a blast, but Katie is always looking ahead. Do this every year and the girls are young, so everything becomes reflex. Competent female bodyguards are always in demand at for high level work. A lot of female principles are uncomfortable with male bodyguards in certain circumstances. Even if they only manage to recruit one of the girls when they turn twenty-one, they'd have made their money back in a year or two.\"\n\n\"That's...\" Her voice trailed off.\n\n\"Mercenary? That's kind of what they do. But I'm sure they like the girls, too, so it isn't all about money. And she won't have to work for them if she doesn't want to.\"\n\nSheree sighed. \"It sounds crazy, but... it's Delaney.\" She suddenly giggled. \"We could go on another vacation. Rent another bungalow with a private beach and I'll buy another teeny-tiny bikini that I can just leave in the suitcase again, maybe?\"\n\n\"Are you seriously bribing me with promises of sex to make sure I'll let her go?\"\n\nSheree smiled up at me. \"Are ya interested in getting a down payment?\"\n\n*****\n\nSheree looked over the target package we'd received from Kim. It'd only taken two days for Kim to put it together. \"He's got a condo in Georgetown, but he's building a mansion up in the mountains in West Virginia not too far across the border from that Hardscrabble place. Bought himself nearly 10,000 acres. Pretty much two mountains and a valley between them. He told a reporter he's using the mountain roads to test his cars and motorcycles.\"\n\n\"An asshole with too much money and too much time on his hands.\"\n\n\"It's probably worse than that. The one mountain he's building on?\" Sheree scanned further down and brought up a news clipping. \"There was a hold out who didn't want to sell. After living there for almost 40 years, she somehow went over the edge of the mountainside road on a clear blue day.\"\n\n\"A sociopathic asshole with too much money and too much time?\" \n\nSheree nodded slowly. \"She has a whole list of 'coincidental' deaths here. Guys he had feuds with, a couple women who were claiming paternity suits...\" She looked up at me. \"Kinda like Charlotte. One was a ruled a suicide, the other was supposedly an accidental overdose.\"\n\n\"Looks like we have our guy.\"\n\nShe opened a map file that turned out to be some kind of overhead imagery, maybe from Google, but then again, knowing Kim, maybe not. \"Here's where he's building his new house, you have to go up this long mountainside road to get there.\" She traced the line of the road up. \"Everything from here on is his property. He's gated the roads to keep people out.\"\n\n\"Is he staying there?\"\n\n\"Not yet. But Kim included a picture of a Facebook post that says he's up on Saturdays with his 'guys' to practice racing the mountain roads. It's about a seven mile loop.\"\n\nShe brought the picture up and we looked it over. Big bad Jason Bradley Calloway, Esquire, and a half dozen muscle bound guys in black T-shirts. \"That's gotta be his security team. Probably more for show than anything else.\"\n\n\"If Kim is right about Gold Shield, they're for a lot more than that.\" She said it softly. \"You need to be careful.\"\n\nI looked over at Delaney. \"Careful is our middle name, isn't it.\" That just earned an eyeroll and a snicker.\n\n*****\n\nI went alone for two weeks; unlike the goon in the SUV, I actually had training in this shit and I had a good half dozen at least semi-functional cars to use from the yard.\n\nDuring the week, it was busy with work trucks and crew going in and out, but on Saturdays, it was pretty much just Calloway and his bodyguards visiting the mountain retreat. There were a couple random deliveries, but that was all. \n\nWhatever supercar he brought spent the day roaring up and down the roads at insane speeds. I figured him for a real adrenaline junky, since racing those kinds of roads at the speeds he was going was just short of suicide. Still, he might be almost as good as he seemed to think he was.\n\nAt the end of the second week, I had a plan. And Delaney made it better.\n\n*****\n\n\"Get the keys to the wrecker.\"\n\nDelaney's eyes sparkled. The wrecker was one of her favorite vehicles. It was a black Ford F550 with a Vulcan 812 Intruder II tow package, normally used for repo work. I didn't do repo work, but it was also damn good for snatching wrecks out of tight places. The pivot stinger could slide into places that seemed impossible and once the tire jaws clamped down, it was simple to lift and pull the car along.\n\nI'd bought it from Emmett Tuckett when he retired.\n\nEmmett Tuckett had been a hard-core hard-drinking cigar smoking repo man, and he'd bought the best equipment he could get. He'd had countless run-ins while repossessing cars all over the state. He'd been shot, stabbed, run over-eight fucking times-and bitten by dogs ranging from Pit Bulls to Rottweilers. He'd finally retired and sold me his truck after he'd had a \"particularly bad day.\"",
        "I still wasn't sure just what had happened. He wouldn't talk about it, but at the end of that \"particularly bad day,\" two heroin dealers were dead, four houses had burned to the ground and a mint condition 1969 Jaguar XK-E with 20 keys of heroin in the trunk was sitting in the bottom of a swimming pool. Emmett had two bullets lodged in his chest, a kitchen knife tip broken off in his shoulder blade, a broken leg from being run over by an orange 1974 Volkswagen Thing, and an infected Pomeranian bite.\n\nEmmett took a low ball-price on the wrecker from me and moved to Florida to be a babysitter for his grandchildren. He took his brand new girlfriend, a woman named Amelie who was just as quiet about how they met as he was. \n\nAnd their Pomeranian named \"Skittles.\"\n\n*****\n\n\"Slowly, work it forward just a bit more.\" \n\nDelaney followed the instructions carefully, edging the wrecker a bit more forward until I signaled for her to stop. She leaned out the window with a concerned look at our handiwork. \"Will we have room to get around it?\"\n\n\"Yeah, a couple feet to spare.\" I unhooked the canvas straps and threw them onto the back of the Ford F550, then slid up into the driver's seat as Delaney hopped back over to her seat, shoved it into gear and pushed on up the mountain road.\n\nDelaney peered down the mountainside out her window. \"You can almost see forever from up here.\"\n\n\"Maybe that's part of the problem. People like him get used to living on mountain tops. They start seeing everybody else as beneath them.\"\n\nShe nodded and sat silently until we reached the security gate. The wrecker nosed the gate open with little effort and surprisingly little noise; it was unlocked, unlike the one at the base of the mountain. I'd chained that one shut to discourage any accidental bystanders to this. A long looping circle drive through the grounds went right in front of the massive construction-site of what would obviously become a massive mansion.\n\nAcres of unfinished fountains, stone pathways, and other, less-recognizable, structures were everywhere. Six guys were sitting at a stone table, drinking and eating something. They watched us disinterestedly, and maybe with a little disdain. They were used to the occasional work or delivery truck. I was pretty sure Jason Calloway had never seen a repo truck before. From their lack of reaction, none of his goons was particularly interested in us. You get what you pay for sometimes.\n\n\"Wow.\" Delaney peered around. \"He must think he's Louis the Fourteenth.\"\n\n\"You're actually learning that stuff?\"\n\n\"There's a TV series about it.\"\n\nDelaney scanned the grounds wide-eyed, finally settling on a blue spacecraft of a car parked in the middle of it all. \"Oooh. That looks really fucking breakable.\"\n\n\"It does, doesn't it?\" Her grin mirrored my own as I backed the wrecker up to the car and popped the door open. \"Stay inside until I tell you. Seriously, if he sees you, he'll know.\"\n\nI dropped to the ground and began walking around the hypercar, inspecting it carefully until one of the men ran up to me. \"Get the fuck away from the car, asshole. Drop off whatever it is you're here to drop off and get moving.\"\n\n\"Hey, I'm just doing my job. Got an order from the owner, a Mr. Calloway, to pick this thing up. I don't want to damage it.\"\n\nHe stared at me for a minute then ran back to the group and started talking earnestly with a big blond guy who looked like he was trying to be cool. Jason Calloway walked over arrogantly, glaring at me. \"Hey, dipshit. I didn't tell anyone to pick my car up.\"\n\n\"Wait, I have a signed order here.\" I reached inside my jacket, pulling my 1911 out and leveling it at his head. \"Tell your little fuckbuddy to go get the rest of his Gold Shield friends and start running for the far side of your little palace grounds here, or I start putting some big fucking holes in you. Do it now. Three. Two...\" \n\nHe hesitated, then nodded to his guy and we watched while they scampered off. \"What the fuck are you doing?\"\n\n\"Just some insurance so we can talk. You really ought to hire some competent bodyguards.\" I waved my free hand and Delaney backed the wrecker up to the ass end of his car, sliding the stinger into position.\n\nCalloway grimaced at the sound of the jaws snapping into position. \"I will fucking ruin you. You really need to...\"\n\n\"Shut the fuck up. We haven't started anything yet. You do the right fucking thing and we'll hardly fuck up your little toy at all.\"\n\nHe looked at me in disbelief as the stinger raised, lifting the end of the car up. \"What do you want?\"\n\n\"Nothing, I'm just the driver of the tow truck, but I do have somebody who wants to talk with you.\" I signaled to Delaney to come out.\n\nHe looked at her, frozen. He obviously knew who she was, instantly, but I think he was hoping that we were some kind of illusion.\n\n\"Delaney, this is Jason Bradley Calloway, Esquire.\" \n\nDelaney looked up at me, pointedly ignoring him. \"What does 'esquire' mean, anyway?\"\n\nI shrugged. \"I'm not sure, remind me and we'll look it up. I think it's probably Latin or Greek for 'asshole.' Every 'esquire' I've ever met has been one. Or they've been lawyers, which is kinda the same thing most times.\" \n\nHe started to say something, but Delaney cut in. \"That figures. Is this what I think it is?\"\n\n\"A Bugatti Chiron. They're something like two or three million dollars apiece. Tops out at over two hundred sixty miles per hour.\"\n\n\"Looks like a spaceship from some cheesy afternoon sci-fi movie.\"\n\n\"Shit, I thought it looked cool until you said that, now I want to paint 'Mars Needs Women' on the side.\"\n\nShe nodded. \"Do ya think he's compensating for something? Jesus Christ, it's a three-million dollar, two hundred sixty mile an hour supercar. He must be fuckin' microscopic.\"\n\nI shrugged and looked at him. \"She's got a point.\"\n\nShe walked slowly around the car tapping it with a screwdriver, making Calloway wince with each sharp sound. \"What's this made of?\"\n\n\"Carbon fiber. Makes it hard to damage. It's supposed to have an incredible stiffness rating.\" \n\n\"See? Compensating.\" Delaney snickered at her own terrible Shrek imitation then walked to the back of the truck, pulled a safety chain and began dragging it under the car.\n\n\"What the fuck are you doing?\" His anger was starting to overcome his fear.\n\n\"What a coincidence, that's the same fucking question we have for you. Why are your 'bodyguards' trying to kill Delaney?\"\n\nHe paused, trying to decide whether to deny it. Delaney's dismissal of his prized car had him boiling, and arrogance won out. \"I'm not going to have some fucking retard getting any of the family money. It's mine and I plan to keep it that way. She's a mistake. I'm not dealing with a fucking paternity suit.\"\n\n\"I'm not interested in your fucking money, shithead.\" Delaney grimaced at him, half under the rear of the car. There was a harsh 'clank' as she slapped the hook into place on something. Calloway winced again. She rolled out and stood up, snagging the external lift control. \"I don't want anything to do with you or your money. You aren't shit to me. Needles is my dad.\" She looked at me softly for a second, then glared at him and punched the lift button, raising the back of the car higher until there was an odd grating sound from the front as the chin spoiler hit the gravel. \"Asshole.\"\n\nHe started at the sound but was wary enough of the gun in my hand to stay still.\n\nI waved him back. \"Here's the fucking deal. We'll drop your fucking rocket ship at the gate, you stay absolutely still until we do, or it goes on a goddamn sleigh ride behind the wrecker. You may not have noticed, but she just snapped a safety chain on, but she didn't put on the wheel straps. It'd be like a beer can behind a honeymoon car.\"\n\nDelaney studied the car for a moment. \"We really shouldn't be towing this backwards, it's bad for it, right?\"\n\n\"It's all-wheel drive; there's no good way to tow it without pulling it up on a rollback. If there's any damage, the asshole here can pay for it out of his fucking trust fund, or whatever.\"\n\nHe looked like he wanted to say something, but I waved him off. \"Shut it. Stein is dead, so don't expect any more help from him. And don't try to kill Charlotte again. I don't need the hassle of everyone assuming I did it.\"\n\nDelaney tilted her head at me. \"You have kinda earned that though.\" She looked over at Calloway. \"Really, he'd be my first suspect. He's got some serious anger issues when it comes to her.\"\n\nI sighed. \"Fair enough. But I don't wanna be fucking blamed if I didn't get to pull the trigger.\"\n\nCalloway looked back and forth between us, clearly lost, but I wasn't in the mood to explain it to him. Delaney hopped back in the cab with a final glare at him. \n\nI looked at him. \"This is the only warning you get. Leave us the fuck alone. You come after us now or ten years from now, you're done. If you come tearing down this mountain after us before I call you on your cell phone, you will die. You got it?\"\n\nHe gave a half-ass nod, eyes glittering with hate. \n\nI gritted my teeth. \"The only reason I'm warning you is because I'm trying to set a better example for the kid.\"\n\nDelaney leaned out the window, rolled her eyes and gave a snort of a laugh. Calloway's face reddened in rage.\n\nWell, fuck. I tried.\n\nOnce we started to pull away, I could hear the locked tires chirping as they stuttered across the pavement. He began to move until I revved the engine and gave his precious car a good jolt, while Delaney flipped him the bird out her window. He froze, watching as we reached the gate and Delaney hopped out and ran back to unhook the chain.\n\nShe climbed back in and looked at me. \"Done.\"\n\n\"You ready for this?\"\n\nShe nodded. \"I know his kind, they hovered around mother and... Chuck... all the time. They think they're the only ones who matter. It's him or me.\" I revved the engine, and hit the emergency release on the tire jaws, dropping the two-ton car to the ground.\n\nI could see Calloway and his posse sprinting for a black SUV on the other end of the compound as I ran through the gears. We really needed to reach our goal before they caught up.\n\nIt took longer than I thought, and I was beginning to wonder if we'd misjudged him when I heard the burbling roar of the supercar. The pause had been to let him get into his car and take the lead. He must have used the launch button, not a great option for the winding mountain road, but he had to be pissed beyond belief, with us humiliating him in front of his paid sycophants. In any case, he had mostly straight stretches until he reached us and that car's handling was absolutely top of the line, even at high speeds. Just what he planned to do when he caught up to us, I had no idea, his two-ton car could hardly force the wrecker off the road. He just might have had a plan, and I had no intention of finding out what it was.\n\nAs I started to slide around the boulder we'd pulled out into the road, I reached for the big yellow smiley face button on the dash. \n\nEmmett Tuckett hadn't just been a repo man. He'd been an ardent hater of what he'd always called \"Tree Huggers and Hippies.\" He'd modified his truck to \"Roll Coal,\" to inject extra diesel fuel to create massive clouds of dense black smoke when he passed a Prius or anything else he deemed a target. I'd never quite gotten around to taking it out, even though it was technically illegal.\n\nDelaney's hand slammed down on the button before I could reach it. I glanced at her. Her face was stark, her jaw set and she held the button down with grim white-knuckle finality. \"Fuck him.\"\n\nDark smoke boiled out of the stacks, billowing back up the road behind us as the rippling snarl of the Bugatti grew louder. The pitch-black flume crawled up the road, pushed by the slightest of mountain breezes. \n\nDelaney looked steadily down the road, I could she was counting under her breath. \"Three, two...\"\n\nThe clash of the collision behind us was odd: tremendously loud, but with none of the metallic clamor of a normal crash.\n\nThe Chiron spun past us, flying through the air like a massive blue frisbee. We both watched as it flew out over the valley.\n\nDelaney blinked once. \"Wow, That held together better than I thought it would.\"\n\nI slowed and we watched it until it slammed into the boulder-strewn valley floor 800 feet below.\n\n\"Yeah, I'm sure that will buff right the fuck out.\"\n\nDelaney blinked again and looked into the mirror on her side. \"Do you think his bodyguards will see...\" \n\nShe was cut off by the clamor of a second crash. The black SUV, far slower and far less aerodynamic, tumbled down the mountainside, flying apart like one of those weird self-destructive sculptures.\n\n\"Nope.\" \n\nWe drove another thirty minutes while Delaney just stared straight forward. \n\n\"You okay?\"\n\nShe nodded once, taking a deep breath. \"Him or me. I've been lucky, real lucky. You've been there for me, but someday it'll be just me...\" She choked a little and I could see her eyes welling with tears, but she fought it down. \"I could pretend, but I think... maybe, this is just the way my life is going to be.\" Delaney gave me a wan smile. \"You know that don't you? That's why you sent me down to Texas.\"\n\nThere was no point in lying about it. \"I think it will be this way for a while at least.\"\n\nShe nodded. \"Yeah, I saw his face when you told him to stop trying to kill mother.\"\n\n\"He had no fucking clue. And he didn't know what I was talking about when I mentioned Stein, either.\"\n\nDelaney let a long breath out. \"Shit.\"\n\n*****\n\nSheree sighed as we finished our tale. 'So there's more?\"\n\nI nodded. \"I'm pretty sure Junior wasn't involved in the attack on Charlotte.\"\n\nTara sat back. I'd had Delaney call her to meet us at the cabin. She looked thoughtful. \"Burns is gay, so he's out. Franks has been the subject of twelve paternity suits in the last eighteen years. He's in one now. He'd sleep with a crocodile if it held still long enough.\"\n\nI rolled my eyes. \"Yeah, he slept with Charli; a crocodile would be a step up.\"\n\nTara tried to give me a sour look, but she was pretty used to my attitude about Charlotte at this point. \"So did you.\"\n\nDelaney snickered. \n\n\"Behave, Les.\" Sheree gave me a half-ass glare but spoiled it with a slight smile.\n\n\"I'm reformed. I traded way up.\"\n\nDelaney nodded in agreement, and even Tara had to shrug. Sheree's smile blossomed further.\n\nTara shook her head in amusement and continued. \"Either way, this is nothing new for Franks, he'd just add it to the stack. He probably paid up, because he did the math and it wasn't worth arguing about. Whatever you think of... Charlotte, she thought it through and kept the money low enough to make it easier to pay than argue. I guess we know why Calloway went after Delaney, but honestly, to these guys, this is barely pocket change.\"\n\n\"It isn't Sharpton.\" Sheree leaned forward. \"He's on the same high-end health insurance program as everyone in the firm.\"\n\n\"What does that mean?\" Tara asked the same thing I was thinking.\n\n\"I asked some of my friends. A lot of my best friends are nurses.\" She said it fondly. \"Sharpton had a vasectomy after his fourth son was born, a long time ago.\"\n\nTara sorted through a stack of paperwork and pulled a page out. \"Nice to know everyone is following the HIPPA act. Still, that's probably why he never paid. He knows Delaney can't be his.\"\n\n\"That's all of them then. Calloway, Franks, and Sharpton. I tried not to sound as annoyed as I was. \n\nTara nodded looking over her papers. \"There were... a number of others... but none with enough influence on the judge.\"\n\n\"Except...\" Sheree looked up. \"There's another Calloway.\"\n\n\"Why would he even be involved? He can't be her father, even Charlotte said that. She didn't even ask him for money.\"\n\n\"I don't know. But he's the only one left, right?\"\n\nDelaney huffed, frustrated. \"Why is anyone doing this? Nobody actually knows shit. Junior tried to kill me just because there was a chance I might get some of his money. But he didn't really know anything.\"\n\n\"You said Calloway junior owns\u2014owned\u2014that whole mountain and the valley. Do you think anyone knows about the wreck?\" Sheree stared out the window thoughtfully.\n\n\"We can check. Why?\"\n\n\"Because Delaney's right. Nobody really knows 'shit.' I'd think it's about time we fixed that.\"\n\n*****\n\n\"Here it is; it's a rush job, but it's accurate.\" \n\nSheree took the package from 'Jasmine,' then slid it over to Tara without looking away from her friend. \"I owe you one.\"\n\nThe serious looking nurse shook her head. \"We both know who owes who, Sheree. I'll never be able to really pay you back.\"\n\nSheree looked down at the table. \"You don't owe me anything, Sarah. I just tried to do the right thing.\"\n\nThere was a wordless exchange between them, something dark and heavy. Delaney caught it and looked at me. I shook my head at her. I didn't keep secrets from Sheree, and Sheree didn't keep them from me, but this obviously wasn't just her secret to keep. I knew she'd tell me if I needed to know.\n\nTara ignored the whole exchange as she looked over the papers. Lawyers probably get real good at not seeing things. \"Couldn't use it in court, but we don't need it to. I'm going to Tiffany's, and we're going to have a serious talk with Mother about this. She's staying with Tiffany until she can get around on her own. Probably won't be very long, Tiffany isn't exactly happy with her. Can you give me a day or two?\"\n\n\"Junior is dead, Stein and his men are dead. We probably have a few days. I've put some 1-inch boiler plate inside the wrecker doors, seat backs and floor boards, just in case anyone tries to get clever.\" \n\nWe'd gotten what we needed when we visited the crash site. No bystanders or police had seen it, so we just had to pick through the wreckage. The Chiron really had held together better than anyone could have expected, at least the frame had, but Calloway hadn't held together very well, at all. \n\nI figured out his plan to stop us, though; he had a bright shiny Steyr AUG submachine gun with two full magazines of black-tipped M995 armor piercing rounds. He wasn't planning on forcing us off the road, he was simply going to riddle us. There were more of the AUGs in the torn metal of the SUV. All new, and, I suspected, all bought with the intention of killing Delaney.\n\nWe'd quietly left the wreck. It was entirely invisible from the road, so I figured we'd have time.\n\n*****\n\nWe stepped out of the brass and teak elevator and just strode past the extremely efficient looking secretary to the ridiculously expensive office. We ignored her protests and she followed us on in, berating us in as professional a manner as possible. The room was enormous and lined with bookcases full of leather-bound law volumes. It was dominated by a massive teak desk. The man at the desk waved his nearly panicked secretary back. \n\n\"Everything is okay, Maureen. I've been expecting them. Please close the door and see that we are not disturbed.\"\n\nThe old man stared at me with grim humor. \"Good afternoon, Mister Dawes. I did tell Mr. Stein and his partner not to underestimate you. They didn't understand, of course. They've seen too many movies; they think Special Forces is just about being tough.\"\n\nI nodded. \"I do seem to remember a helluva lot of physical training.\"\n\n\"But that's not what really works, is it? Willpower, of course, but adaptability and brainpower is where most of the cuts get made in the selection process.\"\n\nDelaney crossed her arms impatiently. \"Why the fuck are you trying to kill me?\"\n\nHe looked at her disapprovingly; clearly, attempted murder didn't warrant rudeness and poor language. \"Darwin, Miss Dawes. Darwin. I'd think Mister Dawes would understand; it's about natural selection. Survival of the fittest. I don't need you dragging my son down in some dramatic court battle over paternity. Whether you're his unintended offspring or not. He's fit, he's smart, and I intend for him to reach great heights. You simply aren't worthy of my name.\" ",
        "\"I never wanted your name, asshole. I never wanted anything from you. I never fucking heard of you until this.\" \n\n\"That's immaterial, Miss Dawes, the potential was there. It would be tabloid fodder. It would make a mockery of what I've built here, of what I intend for Jason to achieve.\"\n\nI saw the corner of Delaney's mouth twitch upward. I chuckled, and Delaney shook her head trying not to laugh. \"So it was all for nothing.\"\n\nHe stared at us, puzzled, until I pulled the sheaf of papers out of my back pocket and tossed it in front of him.\n\n\"What is this?\"\n\n\"A DNA test. You can buy the kits at any corner drug store these days. We had to do this one a little more... unconventionally.\" I'd had to scrape bits of Jason Bradley Calloway off of the remains of his car.\n\n\"And...?\"\n\nDelaney rolled her eyes. \"Jesus. Even I can understand that test. It says I'm not related to Junior and that means I can't be related to you.\" She shuddered \"Thank God. That'd be fucking awful.\" She stopped suddenly. \"This is like that bird movie!\"\n\n\"Bird movie?\" I had no idea what the hell she was talking about.\n\n\"Yeah.\" She nodded. \"The one with the trench coat guy, the creepy guy, and that old fat guy...\"\n\n\"The Maltese Falcon?\"\n\nShe squinted thoughtfully. \"That sounds right. I'm like that bird statue everyone was after. All that shit happened, people died and nobody even bothered to check if it was real.\"\n\nObviously irritated, the old man picked up the papers and looked at them carefully. \"If this is accurate, then I have no further interest in you.\" He sat back, apparently convinced he had dismissed us. \n\nI looked at Delaney. \"You think we should tell him?\"\n\n\"Oh yeah, I want to see his face.\" \n\nI looked at the old man. \"You haven't heard from your son in a few days, have you?\"\n\n\"That's not unusual, he's his own man. He travels a great deal for his racing and other sports.\"\n\n\"Junior won't be continuing your Legacy or anything else. He appears to have had a fatal accident.\" He stiffened up abruptly, face darkening, but I cut him off before he could speak. \"It seems he was concerned over Delaney's potential, but it was more centered on whether or not she was going to get some of your money than your Legacy. Delaney figured out that it was either him or her, and that just didn't end well for him. Darwin, you understand. Survival of the fittest.\"\n\nHe studied Delaney for a moment, and from her bitter-proud expression, he knew I'd spoken the truth. I could see the shock etched on his, suddenly, much older face. \"I...\" He couldn't complete whatever he wanted to say.\n\n\"You can send somebody else after us, of course. Hire better people, make it interesting for us. But we'll be ready for them, and I promise you won't survive it, next time. I will burn everything you've ever built to the ground.\" I pulled a thumb drive out of my pocket and tossed it on his desk.\" And you might want to look at that before you make any decisions. Signed affidavits from a number of people regarding the way the men of your firm behave. Tara was more than a little put out by the plans you assholes made for her. There's even a couple videos on there. I'd appreciate if you would look at those in private after we leave. I don't want to expose my daughter to that shit.\" \n\nCharlotte hadn't wanted to, but Tara and Tiffany were coldly relentless. With her help, and the passkey to her thumb drives, they found four more women and two young men, then convinced them that their only real hope for protection was to work with us. One of the men had managed to video one of the parties. \n\nThe shock had turned Calloway pale, but he was a hard old man and he rallied quickly. \"That would child's play to defeat in court.\"\n\nI chuckled. \"Probably. I'm not a fucking lawyer, but you're probably right. Hell, I'll even take your word for it. So it won't be in court. It'll be in public. You'd make all the late-night talk shows. The firm you built, your name, would be just punchlines in off-color jokes. You'd be a laughingstock. A sad dirty little joke.\" \n\nHe studied me grimly. He knew I'd found his weakness.\n\n\"It's a failsafe. Anything happens to any of us, or to anyone who helped us, it goes to a thousand different news outlets. You couldn't suppress them all. So I'd suggest spending the money searching to see if Junior left any little bastards laying around that you could turn into your heir. He'd have slept with a snake if the snake had low enough standards, so there's a chance there are a few little Calloways slithering around.\"\n\nThat seemed to catch his interest. I had no doubt chasing some possible heir sounded like a much better choice than reaching his hand into the badger's den again. From everything Tara had said, he hadn't even really liked Junior; he just wanted that Legacy that was so godawful important to him.\n\nAs we headed out, I hoped that Jason Bradley Calloway, Esquire, hadn't fathered any living spawn.\n\nDelaney looked down at her feet as we walked back towards Sally. She seemed more than a little down, so I elbowed her. \"So you're the Maltese Falcon?\"\n\nA smile quirked the corner of her mouth. \"Yeah, I guess I am, aren't I? We ought to watch that again; tonight is Movie Night, you know.\"\n\n\"You know what the makes you?\"\n\nShe looked up a touch puzzled. \"What?\"\n\n\"The stuff dreams are made of, kid. The stuff dreams are made of.\" My terrible Bogie impression didn't bother her at all, she shot me a grin. \n\nShe couldn't quite shake the foot dragging mood. \"What the hell is wrong with me, anyway? Everybody keeps trying to kill me.\"\n\n\"The bigger question is what the hell is wrong with me?\"\n\n\"Why?\"\n\n\"I'm the only father you've had that hasn't tried to kill you. Yet.\"\n\n\"Yet?\"\n\n\"Just keep leaving that power sander out on the bench instead of putting it back, Thugbunny. See what happens.\"\n\n*****\n\nThree weeks later\n\nThe Sheriff was sitting on the stairs to the office when we pulled in. \"You guys seem awful relaxed all of a sudden. By an odd coincidence, there was a report that a carload of Gold Shield Security boys and their employer managed to fall off a cliff somehow in West Virginia. Looks like it happened a few weeks ago.\"\n\n\"Good to hear. Sounds like they shoulda been more careful.\"\n\nHe nodded. \"They friends of Stein?\"\n\n\"Actually, no. They were all doing their own thing.\"\n\nHe sighed. \"Jesus, you guys attract trouble.\"\n\nDelaney looked indignant. \"That whole Mooky thing wasn't about us.\" She popped open the right side toolbox on the roll back and began pulling out tools.\n\n\"And yet you still managed to step in it. Which brings me to the point of the visit. We had a visit by a couple of corporate security types. We got a lot of State Department pressure to let them have whatever they wanted. Big European pharmaceutical company.\"\n\n\"Hackmann?\"\n\n\"Sounds right. Germans, I think. They weren't particularly friendly. They didn't seem to give a damn about the two dead guys, but they sure as hell wanted to look that car over.\" \n\n\"Wouldn't do them much good.\"\n\n\"No, but I told them that one of the bodies had the remains of a package melted into their clothing. The security guys didn't seem unhappy that it had burned up after I explained that it tested positive for marijuana.\" He got up with a sigh. \"None of that shit makes sense. None of it. Two people dead, Hyatt's going to be on convalescent leave for six months. Over marijuana.\"\n\nI shrugged. \"Doesn't make any sense to me either.\"\n\nHe started to walk to his Tahoe. \"I'll get your guns back to you in a couple days.\" He paused looking back. \"The coroner's report on the two dead guys is a little vague on just who shot them, if you read it wrong, it almost sounds like Hyatt put them down. I'd rather not have these pharmaceutical guys interested in you. Our damn morgue isn't big enough.\"\n\n\"I appreciate it. Hyatt deserves some kind of commendation. She chased them after they hit her and she still tried to take them down.\"\n\nHe nodded. \"I was kind of thinking that.\" He climbed into his Tahoe. \"You two stay out of trouble.\"\n\nDelaney watched him pull out of the yard, then put the last breaker-bar to the side and looked into the tool case with dismay. \"Ugh. Dried mouse shit.\"\n\n\"Serves you right, you left the tacos in there, you clean it up.\"\n\n\"Blech.\" Delaney wrinkled her nose in disgust and started to reach in with the whisk broom. \"Huh. Look at that.\"\n\nI peered over her shoulder and we stood there silently for a moment. \"You know... it is Tuesday.\"\n\nShe looked up at me with a grin. \"Twelve Amazing Tacos!\"\n\n*****\n\nMooky looked up from the register as we walked in. He managed to turn even paler and stiffened up.\n\n\"Welcome to Taco Grande. May I take your order?\"\n\nI looked at him for a long moment. His hair had been cut down to almost a crew cut and the bruises covering the left half of his face were edged with dull yellow, slowly healing. A muscle twitched in his jaw. I nodded. \"Yeah, we'll take a Big Taco Sampler and two large Cokes.\"\n\n\"Yes, sir.\" He tapped on his register. \"That will be eleven dollars and 92 cents, please.\"\n\nI fished out twelve bucks and watched while he carefully made change and handed it back to me with the receipt. \n\nHe turned with the slow care of someone sporting more than a few aches and pains, carefully counted the twelve tacos into a bag for us, then slid the bag across the counter to us with two cups. \"Will that be all, sir?\"\n\nI looked at Delaney and nodded to her then looked up at him. \"No. One more thing.\"\n\nDelaney slid her envelope across the counter to him. \"It's all we could find. This spilled out in the tool box after the mice chewed it open.\"\n\nHe looked at it in amazement and I picked up where Delaney had left off. \"It's only about half an ounce of seed, you're not going to get rich anytime soon off of it, but it's something.\" \n\nHis lower lip trembled a little. \"They burned my place. All of it. You saw it.\"\n\nDelaney elbowed me. I sighed. \"I've got a used trailer for sale, I'll drop it right where your old one was next Saturday.\"\n\n\"I don't have any money...\"\n\nI held up the change in my hand. \"This looks like enough.\" He just stared at me in amazement. \"It's probably all bullshit, you know. There's no way it cures cancer. I doubt if it's any different than any of the other shit people are smoking. But somebody was willing to kill over it, so, just in case, I'd like to think somebody out there besides Hackmann Pharmaceuticals was growing some. Just make sure you give away some of the seed, get it out there.\"\n\nHe nodded, slowly and uncertainly as we picked up our bag and walked out.\n\nDelaney glanced back at Mooky through the window. \"You really think he'll do anything with it?\"\n\n\"I think so. Hell, he may be the best choice. He doesn't really want to be rich or powerful, he just wants to grow some good weed. He'll grow it and give a bunch out. Anybody else would try to get rich selling it to a big company.\"\n\nShe wrinkled her nose. \"Kinda hard to picture him as a hero.\"\n\nI chuckled. \"Imagine his statue in front of the CDC. 'Mooky, Hero and Healer'.\"\n\n\"I hope they have the Taco Grande hat on the statue.\"\n\n\"I can't fuckin' imagine it without.\"\n\nDelaney snickered. \"You owe a dollar.\"\n\n\"Dammit.\"\n\n Post Production Notes: \n\n This series is about as much fun to write as anyone could expect. Thanks again to everyone; editors and beta readers. I really appreciate the support and encouragement I get from the readers here, and I don't say that lightly at all, it's just beyond belief. \n\n I have to mention The Missus again, she's always a part of these, and never more so than with Needles and Delaney. We work on the threads of the story together. She's always happy to hop out of the car with me to go look at a tow truck or whatever is necessary to try to make the story work. "
    ],
    "authorname": "Todd172",
    "tags": [
        "needles",
        "delaney",
        "the shack",
        "angry man",
        "salvage",
        "ncwb",
        "medic",
        "anger",
        "sheree"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-shack-an-implacable-man"
}