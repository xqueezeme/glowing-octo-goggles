{
    "title": "Nightmare Master Pt. 01",
    "pages": [
        "Author's Note: This story was hijacked by the characters and the end result felt like writing an episode of Happy Tree Friends. It gets really dark... but it's strangely happy about that fact. There's also a little build up, but it's an obvious kind. It's in two parts, which will be posted close together, and there's content warnings :)\n\nOverall, it's both a Master/slave and Sadist/masochist romance. This part has things like noncon, heavy pain play, emotional masochism, bondage, clamps, and anal sex. I hope you enjoy and have fun!\n\nNynaeve\n\nMy two best friends were named Tuesday Holter and Jezebel Grady, but no one knew them by that anymore. Tuesday was Two and Jezebel was called Pet, instead. Even better, they hadn't chosen those names for themselves.\n\nThe guys who fitted them with the shining, gorgeous collars around their throats did.\n\n\"I'm so jealous sometimes. Flatline played out your rape fantasies, Two, and Ash enslaved Pet.\" I knew a lot of vanilla people who would shudder over some of the stories the two of them had, but whenever we drank wine together during the day, I always made them tell me more stories. \"It's so dreamy, like Beauty and the Beast retold times two and different and with more of the whole forced captivity thing. It's so perfect and sexy.\"\n\nTwo laughed over her glass of wine. On some afternoons that were planned out, both of their Doms let them drink during the day with me before Sulfur's opened. Arguably, Two's Dom was a lot more lenient with strictures than Pet's Master. Ivory was far more cruel in his games with Two, but Ash was far more the controlling owner for Pet, which was a good thing, actually, because Pet had shittier self control than even I did. It always made me happy to talk with both of them, too, because their relationships were both strange in different ways, but they both worked in those different ways, too. \"I think you're one of two people I know that would think Flatline's nailing my tits to a board is romantic.\" She paused, then grinned into her wine. \"I'm the other one, though. It totally was, especially with the crying and begging him to stop.\"\n\n\"And he never does!\" It was this mix of hot and scary and thrilling and... It was so dreamy. It made me starry eyed every single time.\n\nPet laughed. \"You're both crazy masos.\"\n\n\"Oh, you're one to talk.\" I wagged my finger at her. \"Yours is just as bad in one way.\"\n\nTwo shoved Pet's shoulder, both of their cheeks red from the wine we'd been drinking. Some days, we indulged a little more than others and that day was definitely one of them. \"Yeah, let's not forget that Ash feeds you from a cock toy so that you associate blowing him with food. Also, didn't you initially get his attention by walking through his door high on hard drugs and he just couldn't resist taking control of something like that?\"\n\n\"Okay, look, conditioning and slavery is a different sphere than the pain you're both describing.\" But Pet had this wicked little grin on her face. We all knew the truth. Outside of her home and Sulfur's, she was Jezebel, the law school genius who turned out to be wildly fierce in the career path she loved. Outside, she was in that logic flow and she hid her submissive side, but when she met up with her Master, Ash, for something like lunch or when she got home from her classes, she was Pet, the slave.\n\nThese conversations were ones I looked forward to having all the time. I'd have them every day if I could. \"Oh, you can't pretend like Ash doesn't hurt you sometimes.\"\n\nPet's smile turned into that kind that came from romantic thoughts. \"Yeah, but it's like a strap, not nails or sewing my pussy closed. And he always pets me and tells me how pretty I look with my marks and how much of a good girl I'm being.\"\n\n\"That's just as dreamy, too, though.\" They both just... I don't know. It was different, but it was a kind of different I loved. I got to play sometimes at Sulfur's, but I didn't have a Master or even a really steady Dom. I sometimes got to play with Pet and Ash when they wanted a third and sometimes when I came to Sulfur's at nights, Ash would always smile at me and set me up with someone for a good time.\n\nTwo giggled. \"I don't know that I could do the extent of Master and slave relationship that Pet has, honestly. I love the thrill ride and terror games, but slavery really is a different sphere.\"\n\nPet rested her head on Two's shoulder. \"I admire that, though. I have to be told I'm a good girl at every turn. You're pretty awesome. You just have some kind of security and can get up from hard pain and just know the game lines. Lily and Deirdre have that, too. They just get done and walk away and that's that. I'm clinging to Ash's ankles for, like, hours and snuggling in a cage so he'll pet me more. And if I don't, then I just, you know, cry. It's really pathetic and needy, actually.\"\n\n\"Yeah, but it's cool for him, you know? For me, once it's over, it's over and usually Flatline and I just watch a movie and shit talk each other or something. It takes a special person to be like you and never leave the mindset. When Ivy and I first started dating, I had problems with thoughts of being told where to sleep when I might want to have a bed to myself or something. It made me worried I'd hurt his feelings when he was so awesome about everything already.\" She looked at me. \"What about you, Evey? Which one do you like better? I know you haven't gotten serious about it, but I also know you definitely have fantasies and you've played with Doms and Masters. What's your thing?\"\n\nI grinned, just drunk enough to make a confession that scared me. \"All of it! The perfect ideal would be your pain play and terror thing and Pet's slavery.\" I leaned back and closed my eyes, laughing. \"Forced absolute slavery to a sadist would be the best. Could you imagine how awful? Just think if you combined your kidnap fantasy, Two, with your slave collar, Pet, and you fight your captor so that your new Master has to break you and he loves breaking you, so much that it's all the more terrifying, and you try and stop it, but you're just so submissive in nature as it is and he's so good with the cane that you're bleeding and whimpering and blindfolded and scared when he makes you do really depraved things that you don't want to do at first...\"\n\nPet was choking on laughter. \"You're even worse than both of us or Lily. You look like you just saw a kitten.\"\n\nI opened my eyes and grinned. \"Oh, I got way more that's fueled from way too many times watching Torture Galaxy videos. I'm just trying to not be crude.\"\n\n\"So this is what book clubs actually talk about.\"\n\nI turned around, startled, and then blushed furiously when I saw Ivory and Ash. Ivy - or Flatline - was grinning, while Ash was at least trying to be nice and hide it. \"How long have you both been standing there?\"\n\n\"Oh, long enough.\" Ash covered his mouth at the sound of Ivy's dry tone. \"Why is it always you little cute ones? You can't just wear adorable pigtails like that and have Pokemon stuffed animals in your apartment window to seem like an angel and not warn a motherfucker that all this shit is beneath the surface.\"\n\n\"These are my rabbit ears and they taunt big, bad wolves or at least, they do in my head. Also, this isn't fair because I would never say any of this if I wasn't drinking too much wine.\"\n\nAsh lifted his eyebrow. \"Well, that's your own fault, love. Also, you got my Pet drunk.\"\n\nPet giggled, cheeks flushed red, and I grinned. \"So. Dreamy.\"\n\nTwo laughed, then stood to hug Ivory. Those little displays were always something that interested me as well. There was a large difference between the two couples when they had those small little innocuous moments. If you saw Two and Ivory hug like they did, they could have been anyone. They played terror and rape games, hardcore pain games too, but he rarely used his domination dynamic in their day to day lives. He stroked her hair in a gentle cradle like any engaged man might hold his future wife.\n\nPet, on the other hand, was always Ash's slave before she was anything else. Her slender eternity collar was discreet, but it never came off. He chose everything from how she dressed to what she ate and she loved it. So when he went to her, he crooked a finger through the O-ring of her collar, gently pulling her to his embrace, and once he had her there, he pressed his thumb between her lips so that she obediently sucked, her eyes falling closed while he stroked her hair back and whispered in her ear.\n\nThey were both something surreal, something that made me grin happily with the thought that I got to be in both of their weddings when they happened. Both of them were dynamically intense in their own ways and, if you asked either of them, they couldn't have dealt with the other one's form of intensity. Pet had zero interest in the full on torture games that Two adored and Two didn't want to be fully controlled.\n\nThe two of them together always gave me the darkest ideas, though. I liked to imagine both of their dynamics in one terrible, awful whirlwind. Like I'd told them a little bit of, I loved the fantasies of being forced to torture slavery by a terrible demon of a master, one I'd both adore and fear. Whenever I fantasized, I got off the hardest thinking of things I hated, like the cane. The whipping sting of one of those was horrible, nightmarish, and I dreamed of being forced to take it and being coated in its marks. It made me a little sad sometimes, because I knew that a lot of the Doms I played with far preferred to be given submission willingly. They were romantics who thought of their playtimes as gifts from their playmates and I loved to make people happy. Sometimes, I worried that I wasn't good at what they wanted though, that I might leave them dissatisfied if I struggled, but that it might be too obvious how I wanted to struggle. I had learned to do my best to hide those thoughts because I didn't want to turn them off and knew that kind of thing wouldn't be what they were into.\n\nBut by myself and all alone, I dreamed of a twisted, evil blend of force and broken slavery, of shivering terror and begging my Master to stop while he never showed me mercy. I dreamed of wearing what he told me to in the hopes to please him, even while I would cower at his side like a frightened little rabbit.\n\nThank God for Sulfur's and my friends. Without a place that was as off the beaten path as I was, I might have driven myself to madness wondering what the fuck was wrong with me that I had these awful fantasies. Who orgasmed the hardest while daydreaming about things they didn't like? Why did I wake up in the night the most aroused off nightmares and only partially aroused from erotic dreams?\n\n\"Evey?\" I opened my eyes to look at Ash and he smiled gently. \"Would you like to stay the night? You seem like you could use some company.\"\n\nI sat up, forgetting my self shame. Spending the night at a fetish club like Sulfur's and getting to sleep in the back with all kinds of padded leather toys and fun things to have nightmares about? I mean, who would say no to that? \"Yes, please, sir! Can I sleep under the bed in the big cage?\"\n\n\"Well, you could, but I was thinking that maybe you could sleep in the bed with Pet and I...\"\n\nPet's eyes snapped open and we met stares. She still nursed his thumb in a sensual display and her eyes were glazed with eager subspace. Usually, Pet slept in her cage, except for a few times every week when Ash wanted her closer to cuddle and love. \"Yes, please,\" I answered for both of us, so that she grinned. \"You're right, that's better.\"\n\nAsh laughed and kissed Pet's hair while I felt like a puppy that should be wagging its tail. Ivory rolled his eyes, holding Tuesday with an arm around her shoulder. \"God save me from masos and submissives. And you.\" He pointed to me so that I grinned. \"God help whatever Master ends up with your demon happy ass. It's taken me ages to realize it, but you're worse than even Two is, by all accounts.\"\n\nIf I was that puppy, my tail would wag all the harder. \"I beg your pardon! I'm an angelic little kitten and I only have a slight amount of brattiness.\" Ivory glanced down at Two and I couldn't see her face, but I could see his wink and grin, which clued me in. \"No, no, wait! I didn't mean it! I didn't mean the lie! It was joking!\" I jumped up from the bar chair, heart jumping to my throat with all the stories I had from Two of how mean Ivory was. He wasn't a Master, no, but my God, the man was cruel.\n\nHe was laughing when he caught me, a dark kind of evil laughter, and he curled a hand around my throat so that I yelped in terror when my breath was cut short. And every single time I was hurt or endangered or threatened, I couldn't stop two things from happening. One was a soft cry of cursed, twisted need, a sound that always made me blush. It was awful because, you see, I wasn't into Ivory. He was Tuesday's and she was my friend and it was humiliating how sexual that sound was, when I didn't want it to be that way. The second thing was how I went still.\n\nWaiting for pain or pleasure, force or coercion. Whatever he wanted to give me. Every time. It never failed and I could never stop it. I looked up at Tuesday, shivering, and she winked in a sympathetic gaze that soothed me quite a bit. It even managed to make me smile.\n\nUntil Ivory tightened his hand farther and I choked, gasping, whimpering. \"Imagine if she wasn't here to comfort you and you didn't know me at all.\" I closed my eyes and shuddered, heart racing because I could absolutely imagine it. I had spent a great deal of hours imagining that exact thing, that it would just be me alone in a dungeon with a stranger, terrified and surrounded by all kinds of torture toys waiting to make me suffer every nightmare I could ever have.\n\nMy vision swam a little bit, enough to break my forced surrender spell just a little. I raised my hand to his wrist in panic with the lack of oxygen, but then felt another choking rise of panic at the thought of daring to touch Ivory Lavrov. A soft mewl escaped me, so pathetic in volume that it was all the more humiliating. \"Helpless little fuck,\" he growled above me. I closed my eyes because I didn't have enough left to make sound anymore and was a little glad for it, since I felt reasonably sure that whatever sound I would have made would be slutty and close to orgasm for someone I wasn't even into.\n\nHe laughed cruelly when he released me and it took a full few seconds for me to think straight again, when I was trapped in quaking, forced submission still. When it did, I shuddered and went to Tuesday, wrapping my arms around her so that she pet my hair, laughing gently over me to talk to her Sir. \"That was very mean of you, I'll have you know.\"\n\nThere was a grin in his voice. \"Well, lucky for me, my future wife wants to marry me because I'm mean.\"\n\nI had to giggle a little, but it was soft in the manner of a subdued puppy. I kept my head bowed and my eyes down, eventually curling up beside Pet.\n\nOf course, I probably should have guessed where the night might lead after Ash asked me to stay, when I'd been drinking. Actually, if I was smart, I would have gone home that night instead of, I don't know, staying around where I could reveal more inner, dark fantasies to a well connected and established BDSM Master and fetish club owner.\n\n----\n\nAfter Ivy and Two left, Ash didn't give me a chance to pull back from that dark place I had so easily fallen into. I wanted to hate myself for how easy it was sometimes, for how badly I wanted to please and serve and be hurt and used and tortured with things I didn't like.\n\nBut Ash was always a kind side of a Master, even if he was stern and commanding. \"Such pretty kittens. Be good while I dress you both in chastity and you can stay back here and drink more if you like.\"\n\nI grinned up at him. \"Really?\"\n\n\"Really, really.\" He touched Pet's nose and she grinned, cuddling me closer in her happiness. \"Take a break. You earned it after that semester.\"\n\nPet stared at me in excitement and we waited for him to fix the chastity harnesses - I wasn't his slave, but he didn't trust me around Pet, which was totally fair. Look, it's not my fault he trained his slave into an oral goddess - before he went out to tend to Sulfur's. And then we made our bad ideas worse. \"Whiskey?\" I asked, grinning.\n\nAnd it was rare that Pet got to abuse a substance or two anymore, so naturally her eyes glittered with mischief. \"Whiskey! Let's get blitzed.\"\n\nI really should have gone home. God, it's the kind of thing that makes you want to bang your head against a wall when you look back on it. So, just so it's clear, you are very easy for an experienced Master to interrogate especially if you keep drinking. I still don't remember exactly what I said for all of it. I mean I know what some of the aftermath suggested I confessed to and I definitely know what I said of my darkest, evil fantasies. I just don't actually remember the exact words for a lot of it still.\n\nBut, no, yeah, I definitely know what it was that I confessed to because I'd been quiet about the reality of how dark my desires ran. Oh, Ash already knew that I had low inhibitions and he didn't let me play with people he didn't know very well because he said I didn't know when to stop and it scared him. He had played with Pet and I, had fucked me on a few occasions while I ate Pet out and they kissed over me. We had played a lot and I didn't have moral constraints when it came to domination sex. I let the hedonism have its sway in that regard.\n\nBut Ash also knew that I had never really directly discussed my fantasies. I spoke of other people's and how hot they could be, but I carefully kept my own to myself even though I so badly wanted to tell someone, anyone, and have them understand. But I couldn't tell, you see, for the reason I do remember trying to explain to Ash, when he came back after the night was over to find us drunk as hell. \"I can't tell, Ash. I can't, see, because if I tell someone, then it's like giving them permission. I don't want to give permission because I want to be forced so bad and I want it to hurt and I want to hate it and be broken. So I can't tell anyone. And all the Doms are great, but I have to give my submission to them and I'm not making any sense, am I? Please don't think I'm fucked up.\"\n\nAnd I do remember his smile where I lay beside him while Pet held him cuddled in her arms in a happily drunk sleep. \"Evey, look around you. Where does it look like you are that you think I would judge you for any of this?\"\n\nI glanced around and had to laugh. Ash's room and where he lived was in the back of Sulfur's. He had a huge door to the side of us that led to his private dungeon, Pet's dungeon, and all you had to do was walk down a hallway to reach the main room of Sulfur's. Even better, his bedroom was this dungeon style playground. He had a monster bondage bed that was padded beneath us and there were chains at each of the posters. Beneath it was this huge, wrought iron cage and above us was a suspension hook with rope. It was a dream place. \"In heaven!\" I answered happily. He laughed and I closed my eyes. \"One day, my prince will come.\"\n\n\"Oh?\" Ash was smiling and if I could think straight, I might have noticed that something was in that smile. \"And what's he like? Is he a Master or a Dom?\"\n\n\"He's a Master!\" I answered easily, blinking through vision that was starting to swim worse and worse. That was where the memories started to get fuzzier.\n\n\"I see. Is he experienced or does he figure things out with you?\"\n\n\"He's experienced! Because he has to know what he's doing to break me all the worse and to force me to his rape fantasies again and again and again...\" Around there is where it started to black in and out, but I'm pretty sure it went something like that.",
        "\"But of course he is. I take it he's mean and harsh and an extreme sadist, too?\"\n\nI do remember seeing something in his eyes there that made even drunk me tilt my head before I forgot about it and just recklessly kept going. \"Yes! As bad as Ivory or worse. He loves making me bleed and forcing me to take crazy kinds of pain. He loves the cane too and when he realizes I hate anal so bad, he turns awful, sir, and he keeps me in really humiliating forms of bondage.\"\n\nAsh was laughing, I remember. \"And how real do you want your forced enslavement to be?\"\n\n\"As absolutely real as possible. As close as I can get to the worst forms of terror, even darker than you and Pet or Ivy and Two. The darkest and worst.\" I remember my head falling back with a wave of the alcohol hitting me harder.\n\nAsh stroked my hair and I remember hearing Pet over me too, but I couldn't remember how long that was from the last pieces of conversation I could recall. There was a fade somewhere in there, but I do remember Pet being on the other side of me so that I was in between them by that point. And I do know I was still fucking talking like a suicidal little maso, still confessing, and you want to know who else was to blame? Pet. That's who. Pet was at least a little bit at fault in all this.\n\nBecause I definitely remember one part from her. \"Oh, oh, oh, does he make you cry every day, too?\"\n\n\"Every day! So he can lick my tears and tell me how cute I look when I cry.\"\n\nAsh laughed. \"Evey... This isn't easy for me, by the way. You're throwing me in an extremely gray area. Actually, you know what, it's not even gray.\"\n\n\"What do you mean?\"\n\nHe stroked my hair and I remember an image of him staring down at me, his eyes twinkling. \"It means it's hard to replicate something like Ivory did and even he knows that was questionable territory. I have your psych eval, though.\"\n\nI'd been the one to get that done with a kink friendly therapist, so I could play twisted mental games and keep check. \"Yup! I'm actually quite sane and down to earth, believe it or not. Despite what everyone thinks when they hear some of my proclivities, I can pull out of games when they're over.\"\n\nAnd that's where it ends. I remember Ash mentioning something to the effect of my having proven my sanity's resilience with games I'd played in Sulfur's, remember Pet saying something back to him, but that's all I got. I just know that I still kept motherfucking talking. But one last word to the wise. Be careful what dark fantasies you wish for out loud when you have really good friends... who just so happen to be really well connected in the kink world.\n\n----\n\nSeth\n\nIt started with a text from Ivory Lavrov. You should come to Sulfur's tonight.\n\nThat was it, but it made me smile. You should come to Sulfur's tonight. And he had chosen a clever night, too, the bastard, a night where he knew I'd be open to suggestion.\n\nI had helped Ivory and Ash start the night clubs out of our college dream of having a safe place to indulge in extreme kinks. This was back when we all became friends through light dungeon parties and got along so well because we all thought that those dungeon parties were fun... but that we wanted something a little more. Back in a college apartment, Ivy rediscovered his brother and we'd dreamed and come up with some of the rules we'd set, a circle of hellraisers trying to be safe about it and figuring out how, people from different parts of life who had one unifying factor, our love of hard kink.\n\nI stared down at the back of my left hand, where my wedding ring used to be, thinking it through. I went out to eat with Ivy every week or so, met up with Ash sometimes, but I hadn't been to a dungeon or to Sulfur's in a year to the day.\n\nIt was the same amount of time it'd been since I'd been married to my last slave. We'd been together for three years and we'd tried to make things work for another two after that before calling it quits because you just didn't give up on something that intense very easily. Before that, there'd been two others, slaves too. After a certain amount of trying, though, it made me stop and think, \"Maybe it's me. Maybe that's what's wrong.\" So it'd been a year.\n\nIt was a lot easier to think that way when the truth was that I just wasn't a nice person and I especially wasn't a kind Master. Hell, there were some accusations that still made me flinch. It was Ivory and Ash who helped the most, actually. Ivory was the one who rolled his eyes at my emo moments. \"How many masos have you met? Because however many it is, it's not all of them. Look, you just haven't met the right one yet. Take it from someone who gets it.\"\n\nAnd then it was Ash who snorted at my \"Maybe I'm not what I thought I was\" moments. Those \"Maybe I'm not a Master at all. Maybe I'm just abu-\" And he'd never let me finish the sentence. He'd cut me off right there. \"You keep talking and I'll beat the shit out of you.\" And honestly, that'd been enough to make me fall quiet. Ash was smaller and slighter than Ivory or I was, but I felt like he was the kind of cold eyed dog I maybe didn't want to tangle with when I was feeling low.\n\nBut after a year... I stared across my home office at the wrought iron cage I'd kept. The truth was my house was just littered with clues at the demons I liked to dance with. Sure, it had started with a dungeon, my fantasy land, but then it'd overflowed when I just couldn't keep it contained. A paddle in a drawer in the sitting room, a riding crop in my office, that kind of thing until you finally started getting a little bigger, just a little, and then the ball kept going and ended with a cage here and there instead of a small toy. It probably made it all the more terrible that I was slightly romantic at heart in some ways, when mine was a twisted kind of romance. I hadn't gotten rid of all of those clues because I just couldn't. They were special, something I couldn't have a relationship without, even if I tried. I remember back in college trying to date this vanilla girl and feeling awkward the entire fucking time. I'd try to keep some of the blacker thoughts to myself and knew I failed when she stared at me with this gaze of speculation and rebellion.\n\nThe dungeon where it all started was a few doors down from me and it was one that held some pretty fantastic memories, one that my slaves hated. What was worse about the kinky people who were attracted to me was that, by nature, they were the type of person who couldn't help but touch a hot stove when they knew it'd hurt them. From what I could tell, I was someone they thoroughly enjoyed the thought of... and never enjoyed the reality of. It was terrible too, getting to see the adoration and thrill turn slowly, but surely, to nothing but fear.\n\nEven worse was how much I liked the fear and couldn't resist wanting more of it, by the hell of my own nature. It was impossible enough to find someone who enjoyed the reality of total power exchange, was the type of thing that was a hard turn off for most. And it usually took a special kind of nurturing, careful Master to make it work well and I had that. I actually did, believe it or not.\n\nThe problem was with the other traits I had. Those traits that wanted a slave to love... and one who would fight me, one I could force. Jesus Christ, sometimes it felt like I was a special kind of fucked up. It was like someone had taken a turn dial on both the aspects of control freak mastery and extreme, violent sadism and cranked both of them up to the highest settings to make me a unique brand of an intolerable asshole. Hell, even I hated being inside of my own fucking head sometimes.\n\nI stared at the cage and had to smile. Fucking Ivory. I'd ended up over at his house a couple weeks ago and started drinking, only to get started on the subject of her. The last one. The one who'd really driven the point home. \"You're fucking evil sometimes, Seth. Like... I know you say that to everyone to warn them, but you need to say it a few more times.\" I spun my desk chair in a circle with the memories, then glanced down at my phone when it lit up again.\n\nI'll take you to see Lamb of God in concert next month, if you come out and play a game tonight, Smaug the dragon. It's twisted and everything.\n\nThe memories answered one more time, when I got up a little bit of excitement at the thought of what Ivory would call a twisted game. I can't handle that when I want to make you happy so bad.\n\nWhat the hell. It was just going to Sulfur's and it wasn't like that was the kind of place people went to when they were interested in relationships. I mean, sure, some of them were, but most wanted a hardcore playtime.\n\nMy whip hand twitched. It'd been a year. Take it from me that it's a long ass time to go without holding a whip or cane or other fun little terror toy, especially when I had a room full of my favorites two doors down. And yet, there were still all the voices from the past in my head. Holy hell, they said you were terrible, but you really are.\n\nIvory messaged me again. You know what, fuck you. I know you're reading these. I'm picking you up and you're coming to Sulfur's, you goddamned antisocial jackass.\n\nI grinned. Well, at least I had good friends. It struck me as poetic sometimes that I got along so well with the Lavrov brothers. Ivory was the perfect sadist and Ash was the perfect master. They were two sides of an intensity. And then there was me, trying and failing to blend both intensities together. A Master could only wear the crown his slave adorned him with and ruled with respect. A Sadist was a tyrant who took what he wanted and ruled with fear.\n\nHow'd you blend those two extremes when part of them didn't want to be blended? How did you go about that when part of being a Sadist was that you didn't want to talk and wanted to force? I still didn't know.\n\nBloody hell, it's just going to Sulfur's to hang out. What's the worst that's going to happen?\n\nThe worst that could happen turned out to be Ivory and Asher Lavrov. At first, I was even just going to dress casually for it, too. A lot of people who went to Sulfur's loved the dress up thing and who wouldn't? Any night you went there, you were guaranteed to see all kinds of latex, leather, fluffy cat ears, and everything in between. For me, I wasn't intending to try overly much. Hell, I wasn't even sure I was ready to try this at all, but the atmosphere would be nice. Still, though. I studied the harsh, wrought iron cage across my office, thinking of the memories.\n\nI really did want to make some new ones. On second thought... I changed my mind on the outfit and wore one of my day suits instead, fixing the Roissy cufflinks with a sense of old affection and nostalgia. The rise of inspired playfulness made me consider a few other playful antics, ones I might have the means for. What can I say? Old dogs, old tricks, and all that.\n\n----\n\nNynaeve\n\n\"How do I look?\" I spun in a circle in the back of Sulfur's and Pet laughed.\n\n\"Perfect!\"\n\nAsh had already gone out and was ruling his fetish bar like a king, or at least I liked to think of him that way. It felt romantic and terrifying to think of him as some kind of ruler, even though the description would make him roll his eyes with my maso dramatism. \"Thank you guys for the earrings and the pretty collar charm. It's so perfect!\"\n\nPet grinned. \"Ash is the one to actually thank for that. Well, Ash and Ivy's jewelry store.\"\n\n\"Wait a minute. They came from Ivory's jewelry store? But I can't take that because-\"\n\n\"Hush.\" I turned around to Ash's voice and he smiled at the sight of me, his eyes lingering on the collar charm. \"They fit you well. Besides, maybe it will stop someone like you from getting all emo with those bullshit thoughts of not being a real submissive because your kinks are off.\"\n\nI blushed, but grinned too. They had gotten me two sets of earrings and a collar charm that went with my favorite play collar. One set of earrings was for the top piercings and they were little Roissy circles with tiny diamonds in them. Even better, the second set were handcuffs that hung beneath those, with matching tiny diamonds.\n\nThe collar charm was easily my favorite though. It was a little bit of a strange design, one I didn't know. Ash said it was a symbol from the early days of Sulfur's, back when it was just him, Ivy, and a circle of their friends fantasizing about a place to safely indulge in heavy kinks. It was a strange pendant with a wolf's head engraving, small roses surrounding it in a circular design. I touched the pendant and Ash smiled. \"Thank you.\"\n\n\"You're welcome. Come here.\" I went to his hands, like an idiot lamb to its slaughter even then, and tilted my head when he gestured for me to turn around, holding a lock up for the back of the collar, something that made me pause. Ash often gave me play collars for my nights at Sulfur's, due to the whole being scared of me picking up an inexperienced Dom thing. The thing was, though, that he had never locked any of those collars.\n\n\"Should I be scared?\" I asked him.\n\nHe smiled. \"Let's call it a different collar for the start of what's hopefully a wonderful summer.\"\n\nI grinned, even if it didn't exactly answer my question. \"Cheers to that!\" And I turned around for him to fix the lock, facing Pet, and it was Pet's expression that gave a little more away. Something in it gave me this feeling of... not quite fear. Even then, it wasn't quite fear. It was more a sense of anxiety, perhaps, or wariness. I looked down at my strange little shirt and skirt outfit, and that was something else that Ash and Pet had gotten. It wasn't exactly even fetish clothing. It was just this cute, short flowing skirt with this halter top that tied around the neck, a leather strip tight beneath my tits to make them stand out more. And no shoes, either, but that wasn't all that strange, being a barefoot little submissive. My cuffs were the only heavy gear, as they were more like leather arm guards with straps up the sides to tie them together.\n\nI finally looked up at Ash. \"Am I in a game?\"\n\nHe tousled my hair affectionately, having snapped the lock shut. \"No. Games can be left.\"\n\nI tugged at my collar and that's when the thrills of fear and adrenaline started tingling up my wrists, through my abdomen. \"What do I do now?\"\n\n\"For right now, you just do the same thing you usually do. You trust me, Evey?\"\n\nI laughed at that because I honestly thought I'd trust Pet's Master through a lot. Ash was cold and even, and his rules and expectations were always crystal clear. He kept every promise he made, good and bad, and he'd shown me this wild world. \"Yeah, I trust you with my life, Ash.\"\n\n\"Okay. Then, no matter how bad it gets, I'm here and I'm not going anywhere.\" Now, that was terrifying. I nodded at him slowly so that he smiled and nudged me towards the door. \"Just keep that in mind and go hang out for right now.\"\n\nPet had this grin on her face and I wondered how much of whatever this was had her in on it. The dramatic air of theatrics had Ash's name all over it, but Pet wasn't innocent either. See, the truth was that the more of Pet it had in whatever it was, the more awful it was likely to be. Ash was amoral sometimes, but he was ever the Master, ever careful, even if he was exacting. Pet, on the other hand, knew what a bottom could take and knew my secrets and how bad they were. I felt like she was the one to watch for.\n\nI made my way through the Sulfur's hallway and out into the main room, wondering what I might be watching for. Ash said to just hang out, but there had to be something I was waiting for, there had to. Letting me know that much without letting me know what was up and then being given a warning felt like being told, \"Somewhere hidden in this building is a big red button. Don't press it.\"\n\nObviously, now I had to find it and press it. I jumped at the sound of a whip crack and grinned at the reaction. Whips were common enough in Sulfur's, but the feel of whatever game I was in made me more antsy, more afraid, more jumpy. I turned to watch the whip scene for a moment and had to sigh happily when it was Ezra and his Toy. Toy loved the whip and Ezra was so good with them. It always felt like delightful romance to get to see them together, the way they never talked during their scenes. And they never, ever did. They didn't have to. All he had to do was caress the whip up her back a certain way and she was so used to him and his pain that she just knew what each different touch meant.\n\nSo. Dreamy. I smiled all the more when he scraped his nails up her marked back and she moaned in pain, then continued on to the bar. It almost felt like encroaching on sex to stay and watch their whip scenes too long. I waved to Vincent, the bartender, and then wondered who all was in on whatever this was. What was I part of? What was I looking for? I paced up the stairs to the balcony, wondering if I was playing tonight at all. For a moment, I just looked over the side at some of the scenes below me, holding the railing and watching the whip scene from a distance, thinking through how scared I should be for that night.\n\nThe more I thought about it, the more I realized that maybe I should be really terrified after that night when drinking. My blood raced a little more when I considered it, when I placed it together with where I was and what company I had started to keep in life. Maybe I had made a bad decision or two. Maybe I had a lot of pain waiting to come to me. I shifted on my toes, touching the collar, thinking of going to Ash and asking how I got it taken off. Eventually, though, I turned and leaned against the railing, merely toying with the charm at my throat, torn between wanting to breathlessly laugh and wanting to run far, far away. I had a curious sensation of being a carefully, lovingly adorned little plaything for some dark, twisted, Story of O inspired purpose. Although, part of that sensation probably had a lot to do with the symbols in my pretty earrings. There was something really twisted about it, something that made me feel tense with the strangest blend of terror and excitement I'd ever had in my life.\n\nI turned back to go to the stairs again, only to stop. Because I was pretty sure I found it, the big red button. Him.\n\n----\n\nFor a disconnected moment, I thought it was Ash because the fitted demon mask was exactly like the kind Ash wore, only this one was jet black with silver features. He wore a black suit, a black shirt under it, and a silver tie that matched the features of the mask so the effect was surreal and dramatic. Even his hair was a jet black in color and what was more was how this man was far too big to be Asher Lavrov. He was more among the size of giants like Ivory. While I watched, his right hand twitched while his eyes were fixed on the charm at my throat.\n\nI matched him, I realized in a sense numbness. I was dressed down in black and silver too, like him. And then, on the heels of that thought was the idea that he was darker than me in his features. I had always thought my brown eyes dark, but his struck me as coal black. My hair had only the faintest senses of chocolate in the locks, but his was stark behind the mask. Instead of my warm brown highlights, his looked as if it should have been highlighted with cold, dark blue.\n\nDarker than me. I backed away from him, shivering in fear at that thought. I was supposed to be the worst little maso I knew. I hadn't met a sadist to make me want to tap yet and I always begged for more, always. I was bad and I cooed happily over the most twisted dynamics, over evil rape fantasies, over wicked things and horror scenes. I liked Nick Scratch in Chilling Adventures of Sabrina, not Harvey.\n\nDarker than me. His eyes lifted from the charm on my collar and they glittered when he met my gaze, like shards of black ice behind his mask. All it took was one look and the terror sank in all the harder. I had dreamed and dreamed of someone as dark as me. I was the demon little plaything whose pain tolerance always outlived a sadist's guilt.",
        "His eyes made me absolutely sure I had finally met a bigger demon. He raised his hand and beckoned, lips curving under the mask that ended above his mouth.\n\nI couldn't stop the response, even if I knew better. I knew better than to resist, to pull away, to show the fear. That was the worst you could do when it enticed big, bad wolves to turn meaner. You were supposed to curl up, trembling, on your knees like a good victim, supposed to bow your head and wait for the wolf to slake his thirsts on your body in whatever dark way he wished. I didn't do that. Where someone like Ivory or Ash did make me be smart and go still, this man was the first one I'd met who pulled the other reaction from me. I backed away from him, so afraid, and shook my head.\n\nHis eyes flashed in the mask and the expression of excitement in them made me choke on more fear. He took a step forward so that I gasped and pranced backwards again, but he only grinned evilly and tugged out a chair at one of the tables he drew near. I forced myself to stay still and watch while he undid his suit jacket and settled it around the chair. His eyes still held mine, still eager with a darkness that terrified me, but then he lowered them to his sleeve to roll up the shirt there. While I watched, he fixed the fabric to hold up his forearm for me to see the tattoo there.\n\nRoses framing a wolf. He beckoned one more time.\n\nAnd if you aren't supposed to show fear like I did, you definitely aren't supposed to run like I did then.\n\nBad Evey. You are actually trying to get away, aren't you?\n\nFor the first time, I thought that maybe I was, actually.\n\nEven so, part of me wondered. I ran to the back dungeon rooms, the ones you were supposed to log in to use. They usually required a key to work and I went through the back hallways in a terrified rush, thinking of what I knew of the rooms back here. It was a Friday so they'd be monitored with a DM acting as Ash's guard wolf. I was still getting to know the DMs actually, which seemed weird to other friends I told about Sulfur's, as if they thought I should know everything there. I mostly stayed around Pet and my friends, though.\n\nWith friends like these, who needed enemies? I passed doors, thinking, wondering what I was even planning, if I was even planning anything. The real answer was that I wasn't, that I didn't have any real concrete ideas in mind, but my thoughts were going a mile a minute and then I had the thought that this was what the real kind of terror felt like and I had always wondered what it would be like to have it as close to real as possible.\n\nBack storage room. The thought interrupted the rest, finally breaking through. I ran to it, thinking that Ash had been back here earlier in the day for some of the changeouts. He had a tendency to want to switch his decorations every now and again and if I was lucky... I felt relief when it was open and shut it behind me, hoping Ash wouldn't get angry at me later. It wasn't exactly a safe place to be, especially if you left the light off like I did and had to feel your way through the room. I went to the back corner where I knew there was a padded bed with a cage underneath, much like a smaller version of Ash's monstrosity, and crawled underneath it, curling up in the back of it. It made me laugh at myself, in a moment of hysterical fear, that I would do a stereotypically maso thing and find the most comfort and safety in the claustrophobic back of a cage. And, oh no, why had I chosen to leave the light off like an idiot? It'd seemed like such a smart idea at the time, too, to keep myself hidden, but now the dark just seemed oppressive. It hid him as well as me and my eyes weren't adjusting fast enough. I tried to watch to where I knew the door was, but my view was blocked. Was it just me or did everything seem like a black shadow with a demon mask if you stared at it long enough? Jesus, I couldn't think. My heart was hammering too loud in my ears for me to hear and I had to work to keep my breathing quiet, when all I wanted was to sniffle pathetically. It felt laughable to be worried about something as light as my breathing when I had the sound of my heart to worry about instead, when it was just... so... fucking... loud...\n\nI crawled to the side of the cage, to the door, trying to get another view, carefully making sure my leather arm restraints didn't brush the side of the bars with all the buckles on the sides of them. And I'd played a lot of games at Sulfur's, a lot of them, and a lot of them had been twisted, that was true. But this man was different. All I'd had to do was look into his eyes.\n\nIf he caught me, something bad was going to happen. Something really bad. Sparks of sadism had been like glittering gems in his eyes when he'd seen that collar charm. I didn't know what it meant, but I knew it meant something to him, enough that he had it in ink and it was something that Ash knew about too. I knew that something scared me even more than Ivory Lavrov had. It didn't help that I had the kind of dark fantasies most people only saw in their nightmares either, because it meant I had a lot of creativity to imagine the worst possible outcome. I had evil thoughts of being a kind of slave gift to an old friend. Ash's words only heightened the sense of terror. \"Games can be left.\"\n\nIt was the kind of fear fueled head trip that made me wonder if the collar around my throat was going to be coming off at the end of the night. I crawled partially out of the side door of the cage, hiding behind a sharp edged wooden sawhorse - shudder - like a frightened puppy.\n\nThe hand in my hair made me shriek from the heightened state of fear I had alone. I remembered hating how I always went still in surrender whenever Doms hurt me and then realized that there was an option that was worse, that I should have appreciated that side of me a little more. Because when he grabbed me, I couldn't keep from doing the opposite. I threw my weight against his hold, yelping when the action caused pain in my hair, and he laughed above me, an evil sound of cruel amusement that made me all the more terrified for whatever was coming. I realized that, for the first time in all my dark games, I was actually shaking from the fear alone. Even if pain hadn't been given to me yet, for the first time, I was in the zone of those nightmares I got off on so hard.\n\nI was terrified. I thrashed in his grip, but it was beyond pathetic. The fear only translated to useless flailing and he was a controlled force behind me, easily shoving me to my hands and knees. What was more was how big he was. He was over two of me, easily, and it was the kind of size that came with an obvious form of power. When his arm brushed around me, the musculature there was taut with excited violence and I shouted again, wondering if anyone could even hear me back here with all the soundproof work that Sulfur's had.\n\nHe didn't move to stop my struggling either, as if it amused him. Instead, he stroked his hand up one of my tits, over the fabric, using his fingers to pinch the already hard nipple there. And that was when the tears started to flow. I moaned and whimpered beneath him, genuinely shocked at the feel of wetness on my cheeks, wondering at its nature. His voice was just as cruel as his touch when he spoke, shushing me in condescension first. \"Just let it happen, there's a good little rape bunny.\"\n\n\"Please... please, I don't even know you.\"\n\nHe licked up my cheek, tasting the thick, hot drops there, and his breath shook with dark energy when he did, so much so that it made me cry all the harder. Because it made it pretty damn clear that any begging or struggle I gave him wouldn't stop him. He liked it. \"Then let's introduce ourselves. I'm Master.\" I moaned in fear when he pressed my ass back to the front of his suit pants, forcing me to feel the hard length there. Shudders of pure dread ran down my spine in lightning quick tendrils, but even that wouldn't have been so bad.\n\nNo, what was bad was what he did next. He shoved me forward and I knew it was coming, I knew there was nothing I could do about it, nothing that would make this stop. But it still didn't help brace me for the way he lifted me, kneeling, and even if I couldn't see his actions, they were terrifying. He was in absolute control, so much so that even the sadistic excitement was under his command, and I was a panicked little toy. I was beyond easy for him to bring under his will, beyond easy for him to manipulate even if I did still pathetically try to pull away from his touch.\n\n\"And if I'm Master, then you're Honey.\" He made it all too humiliatingly clear why that was me when he easily shifted a hand under my skirt and his touch was with a swift, purposeful grace that didn't so much as give me a second of thought. If I had been pathetic before, I burst into helpless, choked tears then.\n\nI tried to explain it to my vanilla friends sometimes, how my pussy would turn drenched off of fear, even if I wasn't thinking about sex at all. It could have been fear from anything, too, could have been the terror of getting stitches and knowing the pain that would happen in something as boring as a doctor's office. They thought I was crazy, but it was just a reaction that happened, one I didn't have a damn bit of control over.\n\nHis fingers glided over my slit, parting the lips there so easily that I went still in misery, and then bowed my head in broken humiliation when he thrust those fingers inside of me, his breath ragged in intense, dark pleasure at my ear. \"Slave names are earned after all,\" he purred behind me, \"and you most definitely earned yours.\"\n\n\"Please don't hurt me,\" I whimpered. \"Please.\"\n\n\"Please don't hurt me,\" he mimicked it with such cold heartlessness that I moaned. \"Shut up. A little fear slut like you needs the pain as a reminder anyway. Come here.\"\n\nHe pulled away and I felt a little in a state of shock for a moment, a sense of numbness, when he withdrew from my pussy and cleaned his fingertips quickly in my hair. But then he grabbed my cuffs and I came to enough to yelp, realizing that I didn't want him to use those restraints on the buckles. That was bad. I jerked away from him and this time I managed to find enough in me to shove out at him, turning around in the dark to do it, so that he gasped when I struck him... and then laughed eagerly. \"You little maso bitch, come here then. I like it rough, too.\"\n\nIt was just another form of humiliation, trying to fight him. He shoved me back against the sawhorse, and if I had any sanity left I would have realized how careful he was being. All I knew then was how fast he moved, though, how forceful he was when he straddled me, and how his cock was even harder from my fighting him. He used his knees to press into my torso painfully, enough that it left me winded, and then he got hold of the first wrist. And after that, the second wrist was easy for him. I wasn't sure how long I even managed to struggle against him, but I did know that I didn't give him any kind of a challenge and I did know that the fear and desperation seemed to make the moment last for a fucking eternity.\n\n\"You fucking flirt.\" I choked and shuddered when he used one of the buckle connections on a cuff to hook to the back of my collar, painfully wrenching my hand back behind my neck in the process. The other cuff he cleverly locked to the first cuff, ensuring I couldn't get my hands to the makeshift hooks he used and wouldn't get myself free. \"Bad little Honey.\" He shoved me forward, back on my knees, and I fell off balance, pitching too far forward so that he grabbed my hair in a hard hold to keep me from hurting myself. He used his feet to kick my knees apart, so that I was forced with my ass up, even while I was still struggling my cuffs, trying to find any way at all to get myself free, only to find myself more helpless than before.\n\n\"Please!\" I finally resorted to the begging when it sank in that I wasn't getting free. \"Please, don't, please!\" But I only broke into crying again when I heard the sound of his belt buckle, then of it being pulled from the loops.\n\nI started shaking, actually shaking, with the thought of what he might do to me, what kind of pain he'd give because I could take a lot, yeah, but it was the unknown factor of being with a stranger and in no man's land. He shushed me again and this time, he stroked one of his shoes up my back so that it was a cruel form of being pet. It made me both calmer... and horrified that I took that kind of comfort in such a degrading form of touch. \"Breathe like a good bunny. It's easier for little playthings to know they need their pain and you do know you need it, don't you, Honey? Say it out loud to comfort yourself. I'll even be a kind Master and give you the words. Say, 'I'm a slutty maso who deserves to be punished'.\"\n\nI sniffled and, horrifically, felt my mouth open, heard the words even if I didn't remember deciding to say them. I don't think I did decide, to be honest. But no one - and I mean no one I had ever played with, ever, not even Ash - had made me feel like he did. No one had made me feel so endangered and helpless and frantic. No one had made me feel this dark and degraded. \"I'm a slutty maso who deserves to be punished,\" I whispered.\n\nAnd it felt true. His words proved prophetic too, because it did help to say it, to bow to everything that he was going to do, a fact that made me cry all the harder in hopelessness. It helped a little to understand that I had almost fucking orgasmed off of his rough fingers thrusting inside of me just once and that I was a bad, fucking flirt who deserved his belt and his rape. And it was awful how much it helped.\n\nI moaned when the first strike happened, sinking into the pain like it was a lifeline, but I couldn't keep from begging either, because it felt like a relief to do it. \"Please don't. Please stop.\" But the pleas were softly done into the floor and I didn't dare cringe away, didn't dare move from where he'd placed me in the same way I hadn't dared to touch Ivory's hand. The next belt stripe was lower on my thighs where it would hurt a little more. The next was dead center of my ass cheeks...\n\nThe worst thing about it, about him and his belt, was how every stripe was masterfully placed, evenly timed, and not a single one of them was any harder or lighter than another. It wasn't the pain that broke me in the end. It was that fact, the feeling of being under the total control and power of someone who was absolutely untouchable in that power. He seemed to see just fine when I was a frightened rabbit in a dark room and couldn't focus enough on him. When he couldn't see how the marks looked to know how hard he was belting me, he paused periodically instead and stroked his palm down my ass and thighs, feeling the heat of the stripes, and it seemed to work just as well as a gauge for him as seeing it would have.\n\n\"Please, stop. Please, sir. Master...\" I said that last word as a breathless choke of surrender, crying around it, trembling. Because it felt true and that made me feel broken.\n\nI don't know how long it lasted. All I knew was it was never more than I could bear, didn't even come close to the harder pain play games I had been part of, but it was somehow worse than all of those. Because of that last word and how it gave him more power for me to call him that and mean it. In my mind, I deserved every stripe from him. There was no one like the demon that had cuffed me, absolutely no one. He was force and power and I was a lost little rabbit, dripping honey for him to name me after like a foul little slut. He was the big bad wolf and I was just food to eat.\n\nHe was an all encompassing Master and I was just a maso slut so filthy that the demon could have his way. He didn't even bother to command. He just took and had so much control that it made it crystal clear I wouldn't orgasm if he didn't want me to, and if he did want to make me cum, he was going to do that, too, no matter how hard I protested and struggled against it.\n\nI was pretty sure I'd never be the same when he dropped the belt by my head, and I had quit thinking about how long this game was going to last by then, too. By that point, I just waited, hoping that eventually the collar around my throat with his awful tattoo on the charm might be unlocked one day, because by that point I was trapped in the thought that it wasn't coming off. Ash's words from before made me feel like I had finally done it, had finally made one bad decision too many and this was the cumulative punishment. It did make me shift when I heard him undo his suit pants, the faint rattle of his zipper. He knelt behind me, repeating that one terribly sadistic phrase. \"Just let it happen.\"\n\nJust let it happen. Because there was nothing I could do about it. I swallowed when he lifted me by the cuffs chained to my collar, shifting uncomfortably with the position, feeling a useless rise of panic at the thought that I'd just fall if he let me go and there wasn't anything I could do about that either.\n\nHe positioned his cock against my slit and I shivered, then gasped at the sensation of the hard, huge head of him stroking against the inside of me. I couldn't stop another shudder when it sank in that he was... Jesus, he was big, but that wasn't what actually got to me. It was how fucking hard he was off of my crying and begging. He stroked down the back of my thigh with his free hand and then groaned when he pressed inside of me, a groan that turned into a hiss of ecstasy when I couldn't stop one last struggle from how his size hurt me.\n\nIt caused him to laugh darkly above me and then I yelped in shock when he thrust in response to that struggling, an abrupt impalement that hurt in the best kind of raw way, the pain enough to send me close to orgasm. \"God, look at you, you little maso flirting fucktoy. Come here.\" I opened and closed my palms in fists just to feel like I was doing something, anything, but he manipulated me just as easily as he had with every other motion, pulling me back against him and then lifting himself in swift, harsh motions to fuck me open. I moaned in fear when he turned my face, when he licked at my tears eagerly, in predatory excitement. He gave me a few more strokes before he paused to nuzzle me while I pant in soft, frantic breaths of desperate surrender, and his moan was eager, pleased, so much so that it gave me a leaping sensation of having behaved like a good, well used little toy. \"The taste is almost as good as blood, Honey.\"\n\n\"Please, can I have a different name?\" That one made me feel a sense of deep humiliation and broken submission.\n\nHe laughed because he knew and I hated him for that. \"Why, when that one just fits you so well?\" He reiterated it with his fingers on my clit and I yelped, harsh pleasure forced through me at a touch that slid through so much cum it made me ache.\n\n\"No! Please!\"\n\nMy begging cries ran together while he laughed behind me with how I couldn't stop myself from bucking against his fingers. And God help me, but I tried. So hard, I tried to not do it, but as controlled and perfect as he'd been giving me pain, he was just as controlled and perfect with this. His fingers worked in quick, even, masterful strokes over my clit. He had a rhythmic motion, too, where he pet me in circles and then pinched in a hard, rough touch so that I was built up and then forced to wait for more, built higher and then forced. That small pinch of pain only made me more sensitive to the next round, so that I started to thrash, and even then I tried to get away from him, though it was a pathetic effort. I tried to pull away from where his cock held me captive and he gasped, then growled eagerly. \"You really are a flirty little fear slut, aren't you, baby? You're making my dick hard every time you fight me, like a fucked up little rape bunny.\"",
        "Our sounds became tangled in each other when that was the thing that threw me over the edge of torture into agonizing, shameful bliss. Mine turned into shocked cries and shrieks of release, while his became wild little growls of delight with how I unwillingly squeezed him in orgasmic spasms. \"That's the spirit we like,\" he hissed in my ear, and the sound was so menacing that it made me cry out all over again, so that he chuckled wickedly.\n\nAnd then wrenched my head back with a hand in my hair in a control hold, sinking his teeth into my shoulder while he rode out his own animal orgasm, hard jerks of his cock inside me until he finally snarled and held me on his lap, his hands holding me still with periodic, violent spasms that were in sync with the way his cock pulsed.\n\nI sniffled, feeling numb, dazed, and he made a purring sound behind me when he finally pulled back from his lock on my shoulder. He stroked the little spot of lingering soreness and pain, as if satisfied at having marked me, and the motion was so carnally possessive, so feral that it made me shiver in fear all over again. His voice was sated when he spoke, latent violence roiling through it like a cat that had its fill of blood and was merely waiting until he was hungry again. \"Poor little rape bunny. That was awful and mean, wasn't it?\" I shuddered and he laughed. Even when he was done, he was cruel, playfully taunting at the pain he gave just because he could, because he felt like it, because I was weaker and he had the ultimate form of masterful control. His sadism was all the more clear when he lowered his voice in soft menace, his displeasure swiftly clear. \"I expect an answer when I ask a question.\"\n\nEven worse, there was more of that terrible eagerness in his voice, which made it all the more clear that he might have gotten off and he might have hurt me, but his sadism was a demon as evil as his mask suggested it was, and it was ready to play again. All it needed was an excuse. I shivered. \"Yes, sir, that was mean.\" My voice shook.\n\nThe low threat was controlled and gone as easily as it had risen for him when he answered, and he shushed me again. \"Poor, scared little rabbit.\" His lips were almost gentle at my temple and his tongue was almost soft against my cheek. \"It's all over now.\" His hand circled my collar and I whimpered in terror so that he laughed, but he only held me, only delicately toyed with the charm. \"It was so much fun for me, but not at all for a little rape bunny, was it?\" I moaned and it wasn't entirely a moan of fear, either. \"You struggled so prettily and your tears tasted so good that I think I'll keep you for a little longer. Let's keep this pretty collar on for a while, when that charm fits so well on your throat.\" I couldn't keep from sobbing miserably at that, but he only laughed again, and his hold around me tightened, while he nuzzled me. He was a monster, a demon, the worst, even worse than the stories of Ivy and Ash. He shushed me again, pressing his fingers to my lips, and I wasn't even sure where I ended and he began anymore. I shuddered again at that thought.\n\nIn the darkness, his mask glittered when I turned and his eyes were hard to even see. He pressed the forehead of the mask to my forehead and I hesitated, then pressed my lips to his jawline curiously, as if I could pretend I knew him. He lifted his hand, but it wasn't to hold me the way a boyfriend might hold his girl. It was to grasp me by my hair in another control hold and I whimpered. After what he'd done, I finally went still the way I usually did. \"Fucking flirt,\" he whispered softly.\n\nNo kisses, but he held me tighter than any lover I'd ever had. No sweet little lines, but his eyes burned with intensity after our fucked up game that wasn't a game. No loving caresses, but the threat and viciousness in his touch was more powerful than any caress ever could have been. No Prince Charming in his eyes, but the possession of the evil dragon burned all the hotter for it.\n\nWhen he finally stood up, he paused for a moment to stand over me, as if it gave him pleasure to see me bowed and numb after his sinful use. And I didn't have it in me to deny him that. I just quivered in a state of emotional masochism and subjection, thinking that I had never felt this totally controlled or submissive with any other playmate. It was his heady mixture of force, cruelty, and careful mastery. I don't know how he blended some of these ideas together, only knew that he did, and the result made me shiver when he pat my head because even that was some strange concoction of disdainful degradation and soothing control. \"Such a pretty little Honey. Next time, we'll get to know each other better with my cock up your ass. And, little rabbit, you shouldn't go into rooms you're not supposed to. It's not safe and we'd hate for something to happen to you.\" With that, he let something soft fall into my lap, and he was gone, more laughter echoing behind me, a phantom in my night, a demon quick with his torture and gone as easily, a wolf that fed and disappeared into mist.\n\nI stared down at what had fallen into my lap and shuddered when I held it up to see it better in the darkness. It was a single red rose, like those that circled his wolf insignia, and it was enough to make me stand up too fast, so that my knees shook with the aftershocks of the adrenaline ride that had rocked my world. The hot rush of fear and heat and intensity left me shuddery and I had to work to think through a mental daze, making my way to the door, unsure of what my intentions were. I felt hollowed and empty, in a way that was more exquisite than anything I'd ever felt in my life. A DM saw me walk out of the storage room and froze and I couldn't even think straight enough to remember his name, but he knew mine. \"Evey? Are you okay?\"\n\nIt was Ash's voice who answered behind him, so that I had the vague impression that my demon Master may have left, but not before he'd fetched a friend. \"I've got it.\" I held onto my rose, still trembling, and the DM stood back, tilting his head curiously. Ash met my eyes, his expression carefully controlled, and I shuddered to the thought that I might have found someone who had a brand of control even more dangerous than Ash's iciness. His lips quirked a little, in concern or something else I couldn't tell. \"How'd it go?\" I staggered the rest of the way into his arms and collapsed with my head against his shoulder, shaking all over, my neck sore from where a demon had bitten me and left his mark of possession, my tiny collar charm in the hollow of my throat, attached to a collar that wasn't discreet at fucking all. Ash tilted my head to meet my gaze. \"Evey?\"\n\n\"That. Was. It was...\" I trailed off, holding to him while his concern seemed to deepen.\n\n\"It was what?\"\n\n\"Amazing,\" I finally moaned. \"That was the most amazing thing I've ever experienced in my life, Ash! Who is he? What does he look like? What kind of hobbies does he have? Ash, tell me, tell me! Please, what's he like? Does he like cookies? Does he likes gifts?\"\n\nHe stared at me, blinking for a long moment before he finally answered softly. \"He didn't take your collar off.\"\n\n\"He said he was keeping me a little longer! Was that part of it? Was I supposed to be a summer slave present to a friend, like something from a Gor story? What did you do? Was it all just a game?\" I felt frantic and frayed and so damned wild now that he was gone. That evil demon, that terrible wolf, the big red button I shouldn't have pressed.\n\nAsh hesitated. \"It was actually supposed to be a game after I messed with your head, but he was supposed to take the collar off. I didn't keep one of the keys because he doesn't change things like that...\"\n\nI squealed and Ash blinked again, as if unsure what to make of any of it. \"He really is keeping me! You're being serious! He's like a demon and he's locking me in my collar tower and keeping me for a while so he can use me like a rape bunny, like a maso slut and he named me, Ash, and it was so. Fucking. Dreamy!\"\n\nHe watched me and cut me off eventually, which was to say, \"I think I just mixed fire with kerosene and it can't be a good thing.\"\n\n\"Are you kidding, it's wonderful!\" And I couldn't stop raving.\n\nHe only spoke one more time and that was to softly say, \"Evey, you're staying here for the summer with whatever this is.\"\n\n\"And I get to stay at Sulfur's with you and Pet? It's like Christmas in summer, Ash! This is the best year of my life and when do I get to see him again? Wait, don't tell me because what if he doesn't want me to know? I'd be a bad Honey bunny and that's where the names came from and surprises are the best things ever anyway! He was so mean, Ash, so mean and he's awful and it's wonderful and he's an even worse demon than I am, he's so terrible, like, so terrible!\"\n\nHe let me wear myself out, watching with a sense of bemusement that I didn't think straight enough to recognize until I managed to calm myself down through the realization that my nightmares really were coming true.\n\n----\n\nSeth\n\nI stared down at the demon mask, blinking in a faint sense of surprise at the direction I had found myself taking. More than a little shocking, it was something that astonished me.\n\nLack of control was not, in any regard, my thing. If I had a plan for the night, I did not change it. Oh, I left myself open for a certain amount of variable deviation of that plan, but a full on left turn? No. Hell no. Fuck no. I hated that.\n\nExcept for this one time, when I didn't? There wasn't even a mild sense of irritation at having some of my control taken from me. I considered the demon mask in a sense of amazement, stroking my thumb over one of the fangs above the mouth, the gargoyle visage and snarl a theatrical piece of fun that I had designed when Ash, Ivy, Christopher, and I had been coming up with ways and silent signifiers to play darker games with some kind of safety hold on it. I hadn't seen that wolf symbol since those days, but the mask was something I loved to keep. Apparently, Ash had kept his own too, using it to love on his little slave and it was true that the demon had started out as a dark signal, but it had been paired with the kind of caring theatrics that went with romance for us.\n\nIt had felt like romance then, but what did that make her, now, after all these years? Fuck me, I had to admit that it had been her who numbed me to my loss of control, her who had soothed my own demons into outright taking her for more than just a game. If I'd been in a gray area before, I'd for damn certain bypassed that.\n\nAnd I didn't even care.\n\nI know it wasn't any excuse, but... her. I had played so many games before, but there was something different about her. Whenever I had chased her down, then grabbed her in the storage room, then gotten darker... and darker, the game and atmosphere with her was something just goddamned different. It was this sense of kinky compatibility that fed into the awful things I said and did. I'd started dark and it'd been like a downward spiral that just kept going.\n\nI hesitate to say it, because it sounds crazy, but for the first time in my life, my dual nature didn't feel like an internal war. Other scenes before had come with this stressful sense of being on a balance beam. Before, it had felt like I was using the Master side to get to indulge the Sadist and using the Sadist side to give the Master wounds to soothe.\n\nNot with her. With her, it felt like the Sadist only fed and enhanced the Master. It felt like hurting her only made the Master's kissing and licking her tears all the sweeter in a sense of even contrast, a perfect blend of yin and yang, a darkest dance of extremes.\n\nI didn't understand, but I craved to learn more about that balance from her. Sadist and Master. Torturer and caretaker. Tyrant and king. Rule by terror and rule by devotion.\n\nDemon and angel. That's how I thought of the twin sides at any rate, in my romantic daydreams.\n\nI looked up at the sound of footsteps in my office doorway, meeting Ivory's eyes. \"Ash is keeping her at Sulfur's.\" He tilted his head. \"You totally intended to go along with his game, didn't you? Evey got to you, yeah?\"\n\nI had to smile sheepishly, guilty as charged. \"I've never deviated from what I meant to do. It felt too dangerous with some games.\" I leaned back in my desk chair, frowning. \"It still feels dangerous, but...\"\n\nHe laughed. \"But her? Yeah, so said a lot of sadists, but I for fucking sure don't have room to judge. And we knew she was trouble anyway. Just... Fuck, just be careful, okay? She knows the lines between fantasy and reality so it's not that. It's just that... er.\"\n\nI frowned. \"She not okay?\" I had been certain, but the Master in me became rather insecure. The Sadist loved to leave a tearful, sobbing submissive shamed and humiliated on the floor, empty and abused and used. But the Master chafed to the thought that he hadn't gotten his fill of aftercare and cuddling. I wished I had her slavery for real, so I could leave her shaking and crying, bleeding in the humiliation cage... and then go back and reassure both of us all I liked during the night, so I could kiss those tears and lick them clean before I lapped her still drenched pussy and delighted in the mixture of tastes, the salt of her tears and the sultry delight of cum all in one while I purred over how sweet she was.\n\nIvy laughed, though, and it made me tilt my head. If I'd left her in the bad kind of pain, he wouldn't be laughing. \"Er. No, she's fucking great. Like, really great, Seth. Do you get what I'm trying to say?\" He ran a hand through his hair when I shook my head, curious. And then he finally just said it. \"She's a fucking crazy maso and she's in love with you. I'm telling you to be careful with her heart because this one is something else.\"\n\nI froze in my stroking the demon mask, stunned for a moment, and then couldn't keep from a bashful smile. \"Really, really?\" I'd had every indicator that she was having a rocked out, not so good, maso fueled head trip, but... \"She liked me?\"\n\nIvory snorted and held out his phone. \"Here. Ash told me to show you this so you'd get the warning he's giving you.\"\n\nHe pressed play on a recording and I blinked in pleased delight, leaning forward to the sound of a gorgeous little bunny, the thought of her bringing an uncontrolled smile to my face. Such a sensually enticing, delectable little wolf's prey she was. And her voice! Oh, even over a recording it was excited, easy to read, her heart on her sleeve. She had that quality a lot of slave's had of being all on the surface and easily controlled. \"It was the greatest thing ever and he's so dreamy and he's a friend of Ash's, isn't he? Pet, he was mean, like so mean! He was pure evil and you always talk about Ash wearing the demon mask and how much you love it and this was so beyond perfect!\"\n\nOh. Shit, this was why Ash was afraid. She was a lovely little bundle of trouble who would never call it too much and would let me have my dark way with her. I couldn't keep from the excitement to that thought either, couldn't keep from feeling a twisted pleasure that my demon had his victim to feed on and she wouldn't stop his worst pains. I felt like I should be a dragon with a tiny little rabbit caged by my tail wrapped around it. I imagined her using her cute little paws to push at the massive coil, finding herself effectively held prisoner until I desired to torture her again. And when I wanted that, I would lift her up by her ears, so that she squeaked in terror, and I would rope my tail in layers like Dante's Minotaur to indicate which level of hell she would suffer next, for my amusement instead of her sin.\n\nOf course, in between rounds I'd stroke her fluffy bunny ears with my dragon's claws and keep her warm by lighting a cozy fire with my flame breath. It was an amusing little picture, one that aroused me and disturbed me with how attached my fantasies were to her. It had been one game, one, when I had been hesitant to even try playing again. I didn't know her, didn't even know her hobbies. Did she like to read? What music did she like? What kinds of movies? I didn't know a thing about her.\n\nExcept... I knew how her tears tasted. I knew how her voice turned surrendered and pathetic when she begged me to stop, to have mercy on her. I knew how her pussy squeezed my cock harder every time she struggled against me and didn't think she even realized that it happened. I knew how her shoulders shook in her fear in such a sexually enticing way and I knew how she flirtatiously begged me to stop hurting her when the belt whipped her ass in strikes too soft for a pain player like her.\n\nI knew that I craved to know more. I wanted to know how she looked when I got into the real torture, drawing her blood and piercing bars through her nipples, ones I could hang hellish weights from while she shuddered in torment and pain. I knew that she inspired lurid, awful fantasies for how I was going to make her scream when I raped her asshole open... and how I'd lap her tears again. Even better was how she started to cry more with how I licked her tears, instinctively sensing my excitement and turning all the more afraid in her perfect maso hell.\n\nSadist. Master. I stared up at Ivy. \"I really am sorry that I deviated. I'm sure he doesn't like that more than I do.\n\n\"But, Ivy.\" I hesitated, then just admitted it to myself and out loud. \"I want to play more with this one.\"\n\nHe shrugged. \"Okay, then. Just remember that she doesn't have the experiences that you do and doesn't know what kinds you have had.\"\n\nI looked back down at the demon mask, smiling, even if I didn't answer him. Because I thought he was somewhat wrong, you see. Oh, she wouldn't know my past experiences, but she had to know something about them from the feel and emotional charge alone, just like I could do a little guesswork about her experiences. I thought of the way she'd shivered in surrender under the belt, of the way she'd gotten more afraid when I reacted with twisted excitement. And I could guess a few key things, like the fact that she knew a thing or two about sadists. She knew the sting of the belt. She knew pain and fear and she could play in their dark territories.\n\nNynaeve. That was her real name, though she went by Evey. I remember Ash telling me her name, smiling his secret smile when he wouldn't fully tell me the game he had in mind. I had tilted my head and asked him if she tugged her braid, unable to keep from the reference, but it had made me aware of the age difference between myself and my playmate, too. She was named after a character in a book that had come out when I was in middle school.\n\nHe didn't give me a picture, though, nothing else to go off of. He just said I'd know when I saw my little headfuck partner and I would be pleased. And he'd been right. Everything about her had been perfect. Her dark hair and dark eyes were every bit my type and she had these tits that were gorgeous and full under that slutty little party girl shirt along with an ass so enticingly shaped that it made me think of all the punishment I could give it. But the collar charm was what really got my attention.\n\nBack in the day, Ivy, Ash, and I had been part of a circle that tried to come up with creative ways to play edge games that were on that ledge of too extreme. It'd started with some masochistic friends of ours and no one had the dark side of fantasies like a masochist. See, a sadist could come up with ideas but we had things like our guilt and incredulity to temper our desires. A masochist didn't have either, something we discovered fairly early on. We ran into a lot of gifted playmates who wanted that dark side thrill, on the edge of too much and too hard, and we'd gotten creative with things like rape play games.",
        "The collar charm was a vestige of one of those little creative signals, one of my own ideas actually. It happened when a play friend of mine had brought up her darkest rape fantasies, when we'd been experimenting with twisted mind games already. And she'd brought up how she wished there was some way to make it work with a stranger and it hit me that, well, maybe there was. Of course, I wouldn't get to be the violent Dom in her nightmares, but I knew another violent Dom, too. Ivory. I came up with a collar charm that let him know who his playmate was for the night and the good times rolled, so to speak. Of course, this was after a lot of talking with each other and the result had been so goddamn fun and demented in the best way that I'd gotten that charm tattooed on me.\n\nEvey had been marked with my charm, that evil one, the one that went with the kind of games that usually meant the person I played them with could only ever be a playmate and never a slave of mine. There were some fantasies that didn't go with those long term enslavement ideals for most. They were just games.\n\nWhy didn't they just feel like games with her? Why did they feel different? Why did seeing my mark on her throat feel like something even more twisted than those experimental days?\n\nWhy was I having fantasies of taking her against her will and making her my slave, of conditioning her until she associated my pain with my love and begged me to hurt her, even if she hated it?\n\nSadist, Master.\n\nMasochist... Slave?\n\n----\n\nNynaeve\n\nAsh would kill you.\n\nI stared down at the lighter, holding it under a twisted paper clip curiously. I was in the back of Sulfur's, hiding in the guest area, and I was doing something questionable, really questionable, but I had curiosities. A friend of mine named Devi had a brand and since the night of the man I thought of as a demon wolf, I was having increasingly violent, dark fantasies. Oh, I'd always had strange fantasies. I had a twisted relationship with the cane, for instance, with the slice of it across my ass and down my thighs, with the way it felt like it cut the flesh with every track mark left. I loved the way it sang through the air, the way my blood just raced in wild anticipation with the thought of what would be left on me, of the pain I was going to receive. I loved the thought of all the Doms who had steadied me with a hand on my lower back when I shouted and cried and cringed away, loved the memory of how they'd reacted. Some of them would coo in condescending encouragement. Some would patiently pat my ass and slowly raise me back into a position for more punishment to happen.\n\nBut I had been going down some dark video forays at nights, in Ash's guest room. I had started to look up things like tit torture and God, I'd masturbated so freaking hard to one video where a man used huge tweezer style clamps on a girl's nipples. He'd attached weight lifting sized weights to those and then used something like a small drill to pierce through the girl's nipples while her eyes glazed over and she couldn't stop the laughing smile from spreading across her face when she looked up at him. I'd turned obsessed with that smile because... I got it. Sometimes it hurt so bad that you couldn't help but laugh in a little madness, but that insanity was what made it such good fun. Of course, the way the Dom had smiled back at her made me melt with thoughts of romantic, terrible torture, of fantasy nightmares that always ended with a rose being dropped into my lap and a glowing sigil of a wolf's head marking me as someone to punish.\n\nI stared at the heated paper clip, holding the lighter for a while, and I couldn't stop the curiosity. What would it be like to have that symbol seared into my skin? I set the lighter to the side and then took a deep breath, building my courage in a rush before I pressed the heated paperclip to my thigh.\n\nI moaned to the sear of pain, except in the fantasy I wasn't sitting in Ash's back room anymore and I closed my eyes to fall into where I did want to be, which was under him. The demon wolf. The man with the red rose. I held the paperclip still, even if it wasn't really doing anything anymore, and stroked my clit, imagining I was in a dark, cruel dungeon, the kind from those tit torture videos. They weren't at all like the domination dungeons, either. Those had things like tables and spanking benches, things I recognized. The other dungeons, though, had far more evil setups and there wasn't a thing in them that was made to look pretty. Instead, there was a lot of uncomfortable metal bars and wooden torture setups, iron posts and huge suspension hooks, drills and needles of all sizes. I imagined being tied down, whimpering in terror with an inflatable gag, while he pressed a heated, glowing brand of that terrible wolf symbol into me. And I didn't know what that symbol meant exactly, but I could guess a few ideas. What would it be like, to have it permanently given to me, to sob with the hellish metal pressed to my flesh, so that the man with the red rose stared down at me and smiled with black sadism like the Dom in the torture video-\n\nI orgasmed with a soft cry, growling while I quit rubbing my clit and fingered myself to every bit of bliss I could milk from my body, whining at the end with a soft, laughing, breathless gasp.\n\n\"Wow. That, somehow, might actually be the most mentally stable form of self mutilation I've ever seen in my life... and one of the more dangerous.\"\n\nI yelped, looking around to meet Ash's wry stare in the doorway. \"I'm sorry! Please don't tear my Sulfur's membership, please, Ash, I'm really sorry and I swear I was just thinking of Devi and-\"\n\nHe held up a hand and his face was so calm that it made me calmer. \"Oh, I can guess the kinds of things you were thinking of. You are many things, but depressed is far from any of them. I won't tear it, Evey, but it's not safe for you to do it to yourself and I mean it when I say don't do it again. No offense or anything, I just don't trust you to know when the clamps need to come off, for instance. You'd set a timer on your phone and when it went off to tell you to remove them, you'd press snooze on the alarm like you were saying 'just five more minutes' when getting the fuck out of bed. Jesus, I was glad when Lily fell into my lap back in the day because she was terrifying and you're somehow fucking worse.\"\n\nI lay back on the bed, accepting the humiliation that I would have to go to him and ask for pain when I started getting antsy. \"I'm really glad I found you guys, too, you know. Nothing made sense before I finally met Pet and she showed me this place. I did all these things and hid them from boyfriends and stuff like that. I started with a lot of piss play, actually, but then you guys showed me pain and it was the best thing ever, Ash, the actual best. Every trip is like getting to ride a roller coaster, only better because there's no lines like they have at Disney World!\" He smiled gently and let me just go on, because he was Ash, and he was untouchable, ever the Master, always calm and controlled and cold and even. That was Ash. I used to have dreams about him, when I first started playing with him and Pet after I realized that she didn't mind people fantasizing about her Master, but I quickly realized that Ash might have been a total power exchange Master... but he wasn't too hard on the sadistic side and I dreamed of sadists. Still, he was perfect for these raving moments because he just let me have them and he did understand, even if he wasn't on that kink wave. \"It's so awful sometimes and the more awful it is, the more amazing it is! I don't always get it because I don't understand, sometimes, how I can love things the more I hate them, but it's better when I hate them. Like the cane. It's so bad, so bad, and the stripes sting the worst. But I wish I could play with someone who would make me bleed from their cane tracks.\"\n\nHe leaned against the doorway. \"I'm glad to hear it because you might get your wish.\"\n\nMy heart stuttered to the thought, to the pure terror it gave me to imagine being struck so bad it drew my blood and bruised me. I had videos of that kind of torture that I loved too. Most of the domination videos made the marks look pretty, red lines of stark impact that stood out, but weren't overly garish. But I had a few saved that gave me delicious nightmares. I'd wake up with my heart thundering from dreams that made me shudder in fear, even while I had to masturbate from how horny they made me. \"Wait, what?\" It was that wonderful line. I wanted it... but I didn't. I wished I could stay away... but I just goddamned couldn't.\n\nAsh stroked his thumb across his bottom lip, studying me. \"It was probably a mistake to think of your body as your own to mark, when someone like him left a collar on you.\" My pulse seemed to jump to my ears, where it sounded like a tribal war drum from some exotic place. Oh, no.\n\n\"But.\" My voice quavered with as much terror as it had held excitement to the thought. Every time. Being a masochist was such a strange thing. I got horny off nightmares and sometimes hated it. I wanted things that I hated and didn't want them, too. \"But would he care? I don't know the rules yet! Is he a Dom or a Master?\"\n\nAnd, better question, what did this make me? Besides his little rape bunny named Honey, that is. Ash's smile widened. \"It's something of a known fact that the lives of little slaves aren't very fair. I'm sure I can't tell you what he has in mind, but I can promise that he'll make it pretty damn clear if you've broken the rules.\"\n\n\"Ash.\" I looked down at the offensive mark on my thigh, staring at it with a new kind of dread. \"You said it was supposed to be a one night game, right?\"\n\nHe laughed, low in his throat. \"Yes. Until he decided he liked you. Poor little Evey. You always said you wished for a sadist that wouldn't stop when you begged and always hated how you looked so cute when you realized Doms showed you too much mercy sometimes. I think you'll find him a little bit of a different caliber than what you know so far.\" His voice was flat, intending to scare, to make the darkest game all the worse for me, and it worked. I was terrified. And I loved it. But then Ash softened his voice. \"Evey, look at me for a moment.\" I met his eyes and dreaded what he was going to ask, mentally begged him to not break the spell by asking if I was okay. I was in the potential fantasy of being forced into dark pain slavery to someone who was pure evil and I might never get another chance at something like it.\n\nWhatever he read on my face made him smile. \"Just making sure. Come and find me in three hours.\"\n\n\"But what for?\"\n\nHe lifted an eyebrow. \"I'm going to do you a favor. Start practicing less questions.\"\n\nI had a bad feeling that meant I was something of a little captive bunny and that my new friend was more of a Master than a Dom. I stared down at the tiny little burn mark, so small it wouldn't scar, but it was suddenly way too visible for my comfort. Oh, this might be bad. I had never had a Master before, but I knew some things. For instance, I knew that little masos like me didn't just get punished when they broke the rules.\n\nThey got tortured because punishment felt too good.\n\n\u2014\u2014\u2014\u2014\n\nWhen I went to Ash, my sense of dread only increased because I figured out what he wanted me to find him for. It was so he could dress me for that night and he had the outfit already chosen for me. Like the last one, the one wasn't actually overly fetishy.\n\nThe halter top had straps that formed a pentagram, as well as a strap that went beneath my tits, cupping them, and the matching bottom part was another neat little skirt. I shivered at what that might mean and then swallowed when he fixed me with cuffs, having a curious sensation of being a little slave girl made ready for an evil Master. Naturally, another slaver had to make me ready and I would be shivering, crying in fear for what would happen. Maybe I lived in a fantasy world and my Master looked like a gargoyle, as cruel in his features as he was in his games. It made me shudder to think of that, even while some part of me wanted to prance in a cute cage with the thought of being a helpless bunny captive, a little chew toy that whimpered when it was hurt.\n\nIt had been days since our last game and I'd discovered something terrible about my masochism. Now that I'd discovered it in such an extreme amount, I couldn't put the lid back on that box. It was too good of a release and outlet in my life and I had already been starting to need it, to burn to have a little punishment therapy every now and again. The rush and release satisfied some very dark part of me. It was a fact of life that people, all people, had some forms of guilt, even if that guilt was only part of their psyche. When someone accidentally got too drunk or something stupid of that nature, they could wake up with a form of anxiety at having been that way, at having lost that control. Pain was becoming my release from that, from stress, from fears. It was an adrenaline rush, a terror ride, and an expiation all in one. Sometimes it scared me, the thought of needing those things I hated.\n\nI didn't realize it until after Ash finished dressing me, but those thoughts were apparently something of a submissive meditation for me. It was something else that I knew about, had heard of, where slaves would reflect on their submission for their Master and put themselves in the headspace to please that Master. I had a moment when Ash fixed the locks on the cuffs to think that this seemed something along those lines, for me.\n\nAnd then it stopped when, as a last touch, Ash fixed my collar so that it was just so... and settled a pair of rabbit ears on top of my head, something that made me shiver.\n\nRape bunny. Oh, no. Ash kissed my cheek and I whimpered, in hellish heaven. \"Go on.\"\n\n\"One second.\" I ran and got a twisted little toy I had crocheted, a bunny rabbit pin cushion.\n\nAsh stared at it when I went past him, out into Sulfur's, and he shook his head with dry amusement. \"Sometimes, I lay awake at night and wonder what the dreams of a maso must be like. And then I think that if we could perfect VR interrogation, we should have masochists program the simulations because it's truly a terrifying thought. God save us from demons like you, Evey.\"\n\nI grinned and it gave me a little courage, being called that, enough for me to stand a little straighter with my crafted bunny pin cushion. I had only given him one eye and used yarn to make an X over the other one, like a patchwork doll. But the courage didn't last long. I stared around Sulfur's main floor and skirted to the side, looking for a demon mask, then wondered if that's what he'd be wearing again. It made me feel like a girl in pirate adventure story, trying to not get the attention of a ghost or a skeleton creature that would mean bad things. I ducked under the stairs and peaked around them, looking up to try to find him before he found me. He was so big that he couldn't be that hard to find, even if I didn't know his face all that well, right?\n\nI froze when I saw him, when he walked through the front door. He had this way of walking that was so dreamy, at least to me. Every step was measured and purposeful, his head was always raised, and he had this Master's X factor. Ash had it, too, that self possessed security. Of course, this man had another factor about him, one that I associated with some of the sadists I played with. It was this strange mix of cruel playfulness, something that manifested in little actions, like right then, when he toyed with a set of dungeon keys, flicking them to make them clink against each other. I hid further behind the stairs, shivering, wondering why I wasn't going to him like a good bunny. Every other playmate I'd had, I had been able to bow, even if I didn't want to. All they had to do was look at me and I'd cower to please them, a good little submissive. But with him, I couldn't seem to stop myself from hiding, from making it so much worse.\n\nMaybe he hadn't seen me. I ducked under the stairs and curled closer beneath them, making myself as tiny as possible, brushing one of my rabbit ears on the staircase.\n\nThe tap on the stairs made me close my eyes and shiver. Oh, no. I looked up through the slats and flinched beneath his gaze. His eyes were vibrant with his amusement and he wore a different demon mask this time. This one was red with curving horns above his head and it curled over the top of his mouth with fangs, but otherwise ended there in a similar fashion as the last one, so that I could still see the cruel smile he had. He held out the keys he had for one of the back, private dungeons and gestured silently.\n\nI shook my head fearfully, hesitated, and then fit the small patchwork rabbit pin cushion through the stair slats in offering. He lifted an eyebrow and his smile widened in a way that didn't comfort me. And then it got worse.\n\nHe dropped his duffel bag on the stairs and unzipped it, watching me with sparks of sadistic intent in his gaze. It was enough to make me shiver again while he tugged out something that looked like a kit, almost like a strange tackle box. My eyes went wide when he lifted a piercing needle.\n\nI nearly wet myself when he stabbed the bunny's torso and it was enough to make me yelp, make me sprint from behind the stairs to try to run away like a stupid rabbit. The wolf was much larger with a much longer stride and he was laughing when he caught me in a flash. Hell, I didn't even make it away from the stairs before he did. He caged me against his chest easily, while I shivered in fright and stared down at his suit cuffs, realizing he was wearing the Roissy cufflinks again. And this time he had a matching ring on his left middle finger, something that made me shiver all the harder with the thought that it was a complete fantasy. I started the mental slide to a dark, twisted place where I was a tricked little rabbit and I was never getting free again. \"No. Please, no.\"\n\nHe shushed me, a soft little coo sound. \"Don't be scared. I just want to torture and rape you a little bit. It will be fun, Honey, the kind of thing you like.\" He laughed at me when I moaned. \"Besides, you've been a naughty little slave girl and need a nice lesson in who owns this body and who gets to mark it.\" His thumb brushed up my cute little skirt, finding the mark there so that I shivered. \"Poor little rape bunny. Did I leave you without some pain for too long?\" Christo. He held me secured and captured with an arm in a lock around my chest, raising his other hand from my thigh so that he could curl it around my throat. His voice turned lower with dark threat and evil pleasure. \"I can fix that for you. And once I do, I'm going to make you burn for pain. I'm going to condition you to beg for it, make you think of cane tracks as kisses and paddle licks as loving caresses. I'll make it so you thank me while you're crying, pretty girl. I think that's only fair, that you be made to come to me for torture when I'm so kind to give you what you crave.\"\n\nI was already crying a little... and loving it. He scared me to my darkest sides with a terrible blend of total control and wild cruelty. He both held me safe and terrorized me with his threats. It was a strange feeding circle for me, that his threats gave him more to comfort me with under his control, but his safe control gave him more to terrorize me with when I knew he wasn't lying with those threats. It was the worst possible combination, one that blew my mind with how consuming it was. I shifted in his arms and he lifted the hand at my throat to turn my face with a finger at my jaw. I whined when he flicked his tongue across my cheek, unable to keep from arching back in his arms in fear fueled arousal with the thought of his tasting my tears. The action made me brush my ass against his cock and I whined again to the feel of how hard he was, then closed my eyes with how his breath shook from how horny he was getting off feeling me shake. \"Please don't do that, sir. Please don't.\"",
        "The low growl he gave me made me feel a kind of terrible elation. See, as a masochist I wanted to struggle my torment. I wanted to hate it. The problem with that was that as a submissive, I wanted to bow to it to better please my Dom, but struggling him did please him and it was horribly wonderful. \"How adorable. But I think I will. Give me your hands like a good girl.\"\n\nI sniffled and struggled a little. \"No. No, please.\"\n\nBut he only laughed happily with my protesting and held up a chain with easy hooks at the end. It was humiliatingly simple for him to grasp a hand where he held me pinned. I shifted pathetically so that he tightened his hold and he turned a cuff to chain it, then threaded the slender chain through the O-ring of the other cuff, threaded it still through the O-ring of the collar. In the end, I shifted on my toes with my wrists up to my throat, on his leash. \"Come on. Besides, you know you deserve this.\"\n\nI moaned in fear and was forced to his side when he tugged me along, first taking me back to the stairs, where I watched when he gently tugged the needle from the patchwork bunny and placed the latter in his duffel bag. That first one he placed in a sharps container that was also from his duffel and I choked. \"You have a sh-sharps container of y-your own.\"\n\nHe zipped the bag up and slung it over his shoulder before he touched my nose, winking behind his mask. \"But of course. If I'm being kind enough to use something small like needles, then I prefer to use a lot of them. But you'll learn all this about Master.\"\n\nI sniffled, then skipped along at his side when he used his chain leash to tug me, pausing to struggle only a few times, and each time was met with a harsh tug that made me choke a little. And standing outside the private dungeon - the one with a table in it, I knew - with a Master whose idea of kindness was the needles for play piercing made me finally think that I really was a maso who'd finally met my torture match.\n\nAnd maybe I should have been more careful with what I wished for.\n\n\u2014\u2014\u2014\u2014\n\nI shifted in the bondage he'd placed me in, shivering. I'd played a few games before and experienced a few different types of bondage, too. A lot of the Doms I played with didn't even use it sometimes, when they wanted to make a submissive hold still for punishment on her own and that was difficult to do at times. Of course, others figured out that bondage only aroused their playmate and used it for a type of reward to go with the sex, making the orgasm ride all the more intense.\n\nHe didn't fit either of those and he'd had to move the ceiling bars to strange positions. Of course, while he worked, he kept me gagged and tethered, on my knees in a corner, making me wait in fear while I watched. His bondage wasn't comfy and it wasn't anything that cared at all whether or not I was holding still of my own free will. But, of course, he didn't care about what I did of my own free will. The thought made me whimper and shiver when he caught me with a hand in my hair and dragged me up to the table. His touch was brutal when he released the chain, quickly tugging off my halter and skirt, then lifting me easily, forcing me on my hands and knees, bent over a bar that he chained to the table to ensure it would be still. He fixed me so that the bar was at my waist, cuffing my ankles wide apart first, then cuffing my wrists to the back of my collar so that I was forced helpless.\n\nNot that he was done. It only got more strict from there. He used an inflatable anal toy to fill me up while I whimpered around the gag, but of course that only made him chuckle while he made sure it would stay put with a type of harness. That part separated into something like cords that went around my thighs, one that covered over the anal toy so that it would be held, but my pussy was left exposed for however he might like to torture it. He continued on the waist part of the harness, tethering me down to the bar with both that and with the bands around my thighs, so strict that I wasn't moving. I shifted as best I could, silently wishing he would say something, anything, but he just worked in a calm ritual.\n\nI think that was the worst part of it, how much it obviously soothed him to do it when something terrible was going to happen to me. At the end, he trailed a fingertip up the instep of my foot so that I twitched and then he circled around to my front, watching me. It felt like a relief when he finally spoke. \"There we are. Let's take this gag off so you can beg a little better.\"\n\nI worked my jaw when he undid the bit gag, feeling in a state of shocked numbness that my nightmares were happening. He studied my eyes from behind his mask, while I watched him warily from my awkward position. I finally broke first and sniffled. \"I'm scared.\"\n\nHis smile widened. \"Good. Let's comfort you with some rules before we get started.\" I whimpered when he reached to the duffel bag at his feet, crouched as he was to hold my eyes. He lifted three sets - dear fucking God, who owned three of those monstrosities - of clover clamps. Huge ones. \"First, that's my collar charm at your throat. You don't get to do things like brand yourself, no matter how much of a little maso slut you feel like being at night.\" He lifted me with a hand in my hair, so that I squeaked in pain from how he twisted his hand to make it hurt worse, but then I moaned in dread when he fitted one of the awful clamps to my nipples. And I tried to brace myself for it, I did, but they were clover clamps.\n\nI sucked air through chattering teeth when it fell closed, the wave of pain so intense that it was momentarily nauseating. It wasn't that it was intolerable, exactly, because clamps had a factor of \"getting used to it\", if you will. The initial bite and taking them off were the bad parts. Once they were on, they hurt when tugged, but it wasn't quite as awful.\n\nThat one part, though, was stunning, at least to me. I choked when he fitted the other clamp, so that his voice turned menacing. \"Breathe. There's a good rape bunny.\"\n\nMy vision blurred and my mind turned numb with the floating sensation that was subspace. \"Yes, Master.\"\n\nHe stroked my hair, letting me fall back to the table. \"Good girl.\" I moaned with the thought that his saying those words were the only reprieve and reward I would get. Pleasing him wasn't easy, was more of a trial, especially knowing that pleasure didn't come with doing it. It was something I had to do for the sake of it and that made it so much worse... and better for my inner submissive. \"But, of course, rules aren't easy on their own. Little slaves need routines and some kind of structure and I wasn't a very fair Master to start off with, so we'll work to clarify together. For instance, slaves have a special kind of kiss for their Master.\"\n\nI'll give you a hint. It was immediately clear that slaves didn't get to kiss their Master like equals would kiss, especially not sex slaves. I pressed my lips to his cock when he manipulated my head and nuzzled him like a loving little plaything, scared and flying so high in hellish submission. Somehow, with him, it didn't feel like I was fighting my masochism with my submission either. It felt like being forced to bow and being held down so strictly only made me tremble all the more with a darker kind of subspace... but one that was all the more consuming for how it came about. I didn't think, only felt the clamps when I shifted, wincing with how the silver brushed the table beneath me. His suit fabric felt soft, too, and that was a delight with all the harsh sensation around me. He laughed above me. \"There we are. How sweet you can be, little bunny. Let's see how long you stay that way before you fight me again, like a fucking flirt.\" I shuddered in dread at that because I didn't think it'd be very long at all.\n\nIt felt like a loss when he pulled away again and I missed that greeting touch of his. It was the one kind touch he'd given me so far. Well... Save for when he stood over me at the end of the last one and dropped a red rose onto my lap. I shifted in my strict bondage when he stroked a hand through my hair. \"You'll find rather quickly that I'm not a kind Master to have. Pain is another part of the routine you can get used to.\" I was right. I was so right. It wasn't long at all before I fought, or tried to in the most pathetic effort. I found out where those other two clover clamp sets went when he paced behind me and stroked a hand up my pussy. \"So drenched, little rabbit, but that's okay. It's exciting for me, too.\" His laugh was dark over me and I screeched when he set one clamp at a time. He used one set of clamps to connect the right inner labia to the left outer one, then did the opposite with the second set of clamps, while I twisted my hands uselessly in my cuffs, squeaking like a mouse.\n\n\"No, please! Please, it hurts!\"\n\nI could watch him between my legs where they were spread and his lips curved upwards with my pleading. Instead of any reprieve, he brutally jerked the chains in tandem, watching at whatever obscene visual the lips of my sex must have made with how he pulled wide and apart, causing more and more pain with every tug. It only got more humiliating from there, too, when he met my gaze, that smile so lurid and twisted while he tortured, using both hands to pull me out and apart all over again, tugging each chain in a grotesque sync of a motion. It only served to reiterate how tightly I was bound down, so that I gasped and whimpered, writhing in pain, tears streaking my cheeks and he was just getting fucking started.\n\nHe was evil, the worst, and I pant when he stopped, shuddering, then yelped when he slapped his palm between my legs to jostle the clamp chains viciously. The after rush of the pain stunned me and that turned out to be a mercy when he got his next toy of choice.\n\nIt was a common enough aspect of sadists that they sometimes used a primer for their playmate. Most often, this could start as something like a flogging or a paddling, but the idea was that it worked best with an all over kind of toy, one that wasn't as heavy as they were going to end up. They wanted to start with something that would bring the blood to the surface, so that they could use something like a cane for longer on skin that had already been heated and braced, rather than be forced to stop when the sharp, abrupt shock was too much.\n\nHis wasn't a flogger or a paddle. Although... maybe in some demon's world, it was a kind of flogger. It was more like a lot of thin bamboo reeds tied together at the end, like miniature canes forming the worst flogger in the history of a masochist's life. And I had no doubt that, for him, that was the primer, just a warm up to what he was going to do.\n\nI breathed when he started, one blow at a time. It helped to be forced down against that table, to stare at it and pant through each slash. It stung a hell of a lot worse than any flogger, that was for sure, but it actually wasn't nearly as bad as I would have expected. My inner masochist cheered me up with those soft meditations I had learned. One more, another, another, good little rape bunny, you can take it, you've taken worse. It was an undisciplined little meditation, true, but it always worked in the past, always. Every blow felt like a victory with a toy that looked so evil. I broke and squealed when he went lower on my thighs, then yelped louder when he jerked the chains between my legs in response. \"Please, don't! Please, it hurts!\"\n\nHe only slashed it harder on the other thigh so that I choked on a sob. \"Hush. This doesn't end until I'm done with you and there's nothing you can do about that fact. Take what you're given.\"\n\nI couldn't stop from crying at that, though it wasn't because of the truth of what he said. It was because those words sent arousal straight to my clit, like lightning sizzling through my abdomen, so hard that it made my sex feel heavy, so bad that it made the inside of me throb in hot, torturous need. I pant, then cried out in a broken, begging sound when he continued, one blow after another. And the other terrible part about it? Once again, it was the fact that he was so fucking controlled. Every last strike was absolutely deliberate, coldly calculated, and followed through with expert skill. My internal monologue broke and I dissolved into begging instead, but the crushing part about that, too?\n\nI liked it more that way. I wanted him to force me, wanted him to be as cruel and terrible as that demon mask. \"Please, what if you b-break me?\"\n\n\"What if I do? You're mine to break.\" Fucking Jesus, I liked that, too. I was only getting hotter with the more he hurt me and it did hurt. He gave me five more slices of the sticks before he finally set it to the side, while I watched him between my legs again and would always be glad I did. As I played with him, I would learn little antics and quirks he had.\n\nLike what he did then. He stared down at whatever my ass and thighs looked like with a satisfied smile of pleasure. One more time, he tugged the chains between my legs, his eyes sparking with arousal at the image of my lips being spread and stretched out. But then, when he stopped that, I moaned with the next action.\n\nIt was soft as could be, the way he delicately scraped his nails up the redness and marks that he'd left. It was stunning actually, how soft it felt in contrast with his words and how mean he was, but there was definitely something in it for him. Those hot sparks turned into something gentler for a brief moment while he trailed his nails up and down, and the way it felt so sensitive made me gasp with arousal. The pain was still there, but when he did that, it was something more ticklish, something... Fuck me, but it felt like my Master's form of sweet and sensual. It only got better when he lowered his face and kissed those marks, lightly scratching in the way a cat would knead its claws.\n\nWhen he pulled away, he met my gaze and his smile was something that would make me go weak in the knees, if I wasn't already so damned weak from fear and pain. \"Now that you're warmed up.\" For the next thing of his choice, he got a set of keys from his duffel bag in front of me and went to a side, private armoire.\n\nIt was a telling moment, that I might not have seen him around Sulfur's in the time I'd been there, but that he quite clearly had a great deal of history with the place and with Ash, that he had a locked cabinet of his own. I moaned when he delicately lifted a cane from it, one of the most evil sticks of fiberglass I'd ever seen in my life. It was long and thin, made for torture, and he trailed his hand up it in a slow, loving caress. I sniffled. \"Oh, no.\" It was more a moan of dread than it was a plea.\n\nHe lifted me by my hair again and kissed my cheek, taking a moment to lick up a few of the tears there in that pervasive way he had. It was another of those gestures that filled me with some awful blend of horror and adoration, the way he loved my tears and so gently, delicately lapped at them when he did. \"Oh, but yes.\" He took one more moment to release the clover clamps, watching me with careful amusement when the blood rushed back to my nipples, as if he was drinking in every reaction of pain I gave him. \"Now, here's another reminder for you, little bunny slave. It helps for little maso sluts to admit they deserve it out loud, remember? I'll be kind again and give you the words. Say, 'I'm a filthy pain whore who deserves to be caned and raped'.\"\n\nI felt this desolate sense of miserable submission, a hellish feeling that made the words pathetic and begging. \"I'm a filthy pain whore who deserves to be caned and raped, M-master.\" And I added that last word because it soothed me to have the reminder that there was nothing I could do to stop him. The result was the darkest mental slave space I'd ever been to. I had had some deep subspace moments before, where my pleasure ceased to matter and only my Sir's did. But nothing came close to the all consuming space I soared to when I called him that, tied down and wishing I could escape, but so secure that it was never going to happen and I was trapped until he was satisfied. It was one thing to willingly reach the space of giving up my own needs to serve someone else.\n\nBeing forced to suffer to satisfy him, with no hope, no safewords, and no mercy? There wasn't anything like it. I closed my eyes, taking every last second to breathe, listening to his footsteps with a growing sense of fear. It felt like the moment when a roller coaster car slowly, so fucking slowly, crawls up the tracks to that first drop. His hand braced against my back and he took a moment to amuse himself with tugging the clamp chains between my legs, so that I whimpered and shook with the sharp torture.\n\nAnd then he drew back and the strip of fiberglass in his hand cut the air before it connected across my ass. My eyes snapped open at the same time my mouth did, but I didn't even make a sound with the shock of it. I just stayed in a silent howl and since I couldn't find my way back to the meditation, he gave me one. \"That's it. Take what you're given.\" He cut another stripe and that time I did yelp, like a wounded puppy, panting. \"Be as loud as you like, poor little rabbit. No one can hear you except for me.\" He was awful! He was as terrible as his demon mask and his cane was the worst thing ever. I shouted with the next stripe, twisting violently to try to rip free of the cuffs that held my wrists tethered at my neck. Each one was like being painted with a line of fire. No one had ever come close to that harsh with cane tracks, no one! Another slice and my teeth chattered a little bit when his perfect timing didn't allow me long enough to fully process how bad it hurt, tears falling down my face in a mess. \"Aww, how pretty you can cry, little bunny.\" Once upon a time, I had hated how cute I looked when crying because it made every Dom stop when I looked so pathetic while being hurt. He didn't stop. He striped me harder. \"Show me a little more.\"\n\n\"Please...\" It came out almost incoherent. \"Please, it hurts. Please stop. Please.\"\n\n\"We've been over this, little rabbit.\" I choked on the next stripe, hating him when his voice was so calm and stable while I was in hell at his whim. \"I'll stop when I'm done and there's nothing you can do about that, is there?\"\n\nOh, God, it was torture. It was exquisite agony. \"No, Master.\" The word felt soul deep, the thought of him as that a fact that was seared into my blood.\n\nI tried to watch him between my legs, through a haze of pain. There came a moment for a lot of people when they were chasing orgasm, where they couldn't see straight and couldn't think straight anymore. For me, that moment was good, but there was nothing like the vision blur of torture and his torture was the most beautiful kind I'd ever been given. Still, though, I managed to focus enough to notice something else that made me feel owned beyond reprieve. It was the way he stared at the marks he was leaving. He still held one hand at my lower back and I watched him draw back the cane again, marveling over how gorgeous he looked as my tormentor in that suit of his. Part of me wanted to look away, but the darker part couldn't look away and, in that atmosphere, the second one easily won. I watched every second, the way his hand held firm the entire swing through, the way his eyes never wavered and he struck me with a kind of precise intent. It was horrifying when I felt a faint tickle on the so sensitive lines of hell across my ass, a tickle that made me shake.\n\nI was bleeding. I'd only had a couple of occasions where someone drew my blood like that. The worst time was with a whip and it had been when a Dom was figuring out whips on my all too willing body. That had been the time that started to make Ash scared of who I played with because I couldn't say when to stop and that Dom hadn't meant to strike me so hard. He'd been horrified when he saw the streak of red on my flesh, wrung out with guilt and his ego flayed from a second of lost control. I'd stared down at it with a blinking fascination, unable to stop from touching my blood and tasting it, turning horny off of the thought.",
        "There wasn't any guilt in Master's eyes. His even expression made it perfectly clear that every motion was still controlled and still deliberate. He paused to tug the chains of the clover clamps again, taking a moment to pull them, stretching the lips of my pussy painfully, and some sense of brokenness sank in. Pain on top of more pain. He squeezed the bulb of the inflatable toy in my ass and I heard a dark, sexual moan, only realizing it was me making that sound after the fact. I floated higher than high, so that even when I blinked in that moment, it was a motion that fascinated me when it didn't have pain with it.\n\nMaster met my gaze and his smile was sinful, his demon's mask earned. \"Four more,\" he purred.\n\nI breathed out, stunned into a sense of timelessness, screaming with the next stripe. He was making me bleed more, too, I knew, and I watched his face to see how much he enjoyed that fact. Another stripe made me tremble and I was down to two.\n\nHe paused there, though, and lowered his free hand between my legs. I watched with a low moan when I realized why, when cum dripped from my cunt onto his fingertips. \"Look at how much you like this. I'm learning a lot about you tonight, little rape bunny. It almost makes me want to fuck your drenched little pussy again, but I promised you a hard ass fucking instead.\"\n\nI couldn't even think straight enough to remember that I hated anal. That sensation of pure, fiery need in me was already so intense that the anticipation of his thick cock up my ass was only more kerosene on the fires of hell. Because my arousal was every bit as hot as my asscheeks felt. I watched him lick the cum from his fingers, watched him smile wickedly at me, then squealed with the next bloody stripe. One more. Just one.\n\nHe made it count, swinging hard, so that I shrieked. And then he got even worse. \"Just a few more, maybe? Since you like it so much that you're dripping, yeah?\" I sobbed while he laughed and he did it because he was fucking evil. He struck the cane and ripped even the little bit of hope he'd given me back on another whim while I cried in misery, then struck it again because he could.\n\n\"I hate you,\" I whimpered.\n\n\"Aww, I know. That was terrible of me and so cruel, too, wasn't it, Honey bunny?\"\n\nI didn't trust him even when he sat the cane to the side. \"It was torture!\"\n\n\"I know.\" I gasped when he trailed his nails up my ass again, then blinked and shivered when he bent forward, his tongue brushing up my ass.\n\nBut I moaned, and I mean loud, when it sank in that he was laving up some of the blood. \"You're evil!\"\n\nHis laugh was breathless and I shrieked when he lapped up my drenched slit. The abrupt shock of how horny I actually was being brought to my attention through the pain was so intense that I didn't even care about the added pain of his removing the clover clamps. He laughed breathlessly against my pussy with the sounds I gave him. \"God help us both that you like that fact, Honey. Come here. We're almost done. Just a little more suffering for me.\"\n\nI twisted frantically when he released the inflated toy in my ass, shuddering. \"No, no! Please, please, I can't take that, too. I can't, I really can't!\"\n\n\"You can take what I say you can. God, you're such a fucking flirt. It's going to hurt even more too, with how hard you're making me with your struggling and begging.\" Oh God, oh God, oh God... I pant against the table when he finished undoing the harness and took out the toy and he wasn't kind enough to add more lubricant to make it easier. I was panting when he quickly undid the bar I was bent over so he could remove it from beneath me, using the pedal adjustment for the table to lower me down for him to fuck and use. It felt like an eternity before he finally pressed his cock head to my tighter hole, while my eyes went wide, and I couldn't even tell if it felt so long because I burned to have him or because I dreaded it more. It was a strange thing that there was already so much pain that I actually didn't hate the sensation as much as I usually did, too. I just felt more and more of an emotion that could only be called \"frantic\".\n\n\"Oh, my God. Oh, my God.\" I gasped it out, repeated it over and over, then clawed my hands when he pressed a cane welt. \"No, please, oh, it, I, hurts, so bad...\" The words were a meaningless string, one that excited him. He growled above me in his reply and shoved his cock particularly deep in my asshole so that I shouted. \"No, stop, please, please!\" He wrenched another cane welt and I squealed. \"No, stop it!\"\n\n\"Does it hurt?\"\n\nI shuddered, a full body reaction that caused me to squeeze on his cock. His voice was low, animal, and so fucking horny. \"Yes, it hurts so bad! I hate anal, I hate it!\"\n\nHis laugh was eager. \"Do you want me to stop?\" I choked in ecstasy with the question because even asking it made him harder inside of me. His thrusts, even then, were controlled but they were so violent.\n\n\"Yes, I want you to stop, please, it hurts! Please, I don't want you to anymore, please, please!\"\n\nHe moaned above me, a sound that was almost drunk with sheer heat, and it was enough to set me off. I had never been able to cum from anal, but I jarred forward with an endless cry of twisted bliss from how much I'd pleased him by begging. I squeezed on him so hard that it hurt me to feel it and he hissed above me, his pace turning wild, so rough it felt like being turned inside out. I was shaking, unsure of the sounds I was even making anymore, and so freaking beyond sanity that I wasn't sure I'd ever want sex with anyone else after him.\n\n\"Oh, my God... Oh, my God...\" I was whispering it when I could think straight again, in a shaking voice filled with awe and wonder. He was still pounding inside of me, his pace brutal, and I loved it, I fucking loved it. It wasn't even like I could have orgasmed so soon after that intensity, either, but it felt like being a used little slut and it was amazing.\n\nI shuddered when he finally, and it took forever before it happened, growled above me, going still while he pulsed his release inside of my ass. His body jarred in those same jerks from before while he finished, the only thing he did that seemed out of his control, and then he finally went still with a last, low sigh.\n\nIt felt like an age before he finally moved above me, before he gently undid my cuffs. \"Honey?\"\n\nI whimpered at the degrading name, wishing he'd use me all over again. \"Yes, Master?\"\n\nHe stroked my hair and there was a smile in his voice. \"One more rule you should get used to. The only time you're allowed to cum from now on is with something in your ass.\"\n\nThe thought made me moan all over again, made me thrilled to the depths of my being that it wasn't a choice. If he said I wasn't allowed to cum, it was pretty fucking clear by then that I wasn't going to. He had that much control, that he wouldn't let me disobey him. He was that good with his sadism, that it didn't matter if I willingly bowed to him. He could just as easily make me bow and preferred to do so anyway.\n\nThat was the moment that I realized I was in love with someone I didn't completely know. I was so fucking in love. He was terrible, a nightmare, the worst. He had moaned so loud when making me tell him how much I wanted him to stop, by making me call what he was doing rape.\n\nHe was fucking beautiful.\n\n\u2014\u2014\u2014\u2014\n\nSeth\n\nNo one thinks to warn a dragon about the dangers of a little bunny. Why would they? Bunnies were so small, so frightened, so sweet, and dragons were always the ones you had to watch for. They were big and mean, with armored scales, and they breathed fire and when they coveted, they took by jealous force.\n\nWhy would anyone ever warn the big, bad dragon of how cute bunnies were when they chattered up to talk to their monster captor? And why would the dragon ever think to be wary of that moment when they held a little bunny caged by their coiled tail? No dragon would ever think their rabbit would even want to talk with them, let alone how downright sweet they would be. And the way they tapped the pads of their cute little paws together in thought? There wasn't any harm in that.\n\nAnd there definitely wasn't any harm in stroking their soft fur and delighting in how cuddly they were. It was the kind of thing that made a dragon snuggle close to his little torture toy, so close that he'd never notice when an arrow went right through the single unguarded part he would have. His heart.\n\nEven when I left the collar on that first time, I still had thoughts of a game in mind. It was threatening and dark and the kind of thing that would make her wonder what was real and what wasn't, but it wasn't the kind of thing that I intended to end in my home dungeon, exactly. When I told Ivory I wanted this one, I had meant as a play slave. My thinking had been that she would tire of me and my overbearing bullshit like most did, but her sunny, strange disposition would be something to pull me back in after divorcing my slave. So, even then, I might have fantasized over having her total slavery, in the way that any sadist might, but it wasn't in that game.\n\nAfter the second time, it hit me that I wanted her. For real, I wanted her. Somehow, someway, I wanted her slavery and I'd get it no matter what I had to do to persuade her for it. At first, I thought about doing what anyone should do with that kind of relationship, which was talking about it. But I held off when I let her up from her bondage, since it wasn't the right timing.\n\nI ended up holding off entirely for a different reason, though.\n\nShe staggered when I helped her up, staring up at me with this look that concerned me for a moment. Evey had one hell of a pain tolerance and it'd taken some careful watching to the way she reacted to pain. Even then, I'd been erring on the side of caution. I walked an extreme line, but only with years of practice from watching every last nuance, from knowing what to look for. The unconscious muscle spasms, for instance.\n\nI held her close, the Sadist in me sleeping so that the Master could have his fill of care. \"Nice and easy.\" I licked up her cheek, tasting her tears again, and couldn't keep from a slight purr of a sound. First, her blood... and then cum for dessert after that. And more little maso tears. Jesus, I wanted to drink gallons of those tears of hers, how hedonistic they were in her thrill ride chase through hell to find bliss. \"Look at me, Honey.\"\n\nShe obeyed, her eyes lifting back to my face where they'd fallen to stare at my chest. She whimpered slightly, then her eyes widened. \"I... Oh, my God, you're so bad.\"\n\nI loved hearing her say things like that, too. She didn't say it like any of the past ones did. She said it with something closer to reverence, something that stroked my ego, not that it needed any more encouragement. \"So they tell me, little rabbit.\"\n\n\"Can I kn-kneel? P-please? Can I kiss you l-like you showed me?\"\n\nStill, though, it gave me concern that she was stuttering like that, that she was shivering. It wasn't that it scared me exactly. It was more so that it was actually a new reaction for me and I don't even mean the actions themselves or anything. I had seen things like the shivering before at the end of a harder scene. I just hadn't seen it the way she did it, specifically. \"Of course you can, little slave bunny.\"\n\nShe moaned at that and I had to grasp her collar to help her kneel when she almost fell at my knees. She moaned again when the action made her sit on her still bleeding cane tracks and the sound was arousing enough to make my inner Sadist stir, when he should have been sated for a time after a hell of a scene like that. I stroked her hair, loving the way she pressed her lips to my crotch, even if I couldn't quite get hard again yet. She whimpered, giving me kiss after kiss, still with that strange sense of shuddering, of breathless eagerness to please me. I tilted my head and watched her until she looked up at me and she was happily crying, my emotional little maso slave. \"You're so bad.\"\n\nAnd that's when it sank in, what was different. She stared up at me with awe, fear... and total adoration, a kind that made me blink in stunned shock. I had been adored before, but it was a different kind I learned to recognize, a kind borne of a submissive's sense of need for the security that came from that factor that made a Master a Master. It was this form of infatuation from having someone safe to bow to... until, of course, it became clear that I wasn't safe to bow to. Oh, I had control in spades usually, but it was how I used the control that made me dangerous.\n\nHer adoration? It wasn't like that. It was something closer to zeal and reverence, like someone looking up at a god. I couldn't stop from a shy grin. \"Oh, yeah?\"\n\n\"Yes! Like, crazy bad. That was absolute agony. It hurts so freaking bad.\"\n\nI felt like I could wag my dragon's tail. It was nothing at all like the way other people had said it, when their love turned to terror and it wasn't fun anymore. I touched her nose, staring down into her eyes. They were so dark, like mine, but hers were warm with chocolate tones. \"Maybe the lingering pain will stop a little pain whore like you from hurting yourself again. Bad little bunny. A slave's body isn't her own anymore.\"\n\nShe lifted, shaking still, but now I knew better. It was with excited relief, some strange concoction of having survived and being winded over it. \"It's Master's.\" She whispered it, in wonder, and I smiled mildly in approval.\n\n\"It is.\"\n\n\"That's you.\" She said it as if it was the most obvious thing in the world and I had that sensation of a submissive gifting me a crown again, making me a ruler. I nodded, thinking things through, and that was when I knew I couldn't talk with her.\n\nI couldn't ask her for her slavery, not with the way she looked at me after what I'd done. Not when she stared up at me, kneeling on bloody cane tracks, with this starry, stricken gaze, like I was the most beautiful thing she'd ever gotten to kneel to. With her, I was learning, the Sadist and the Master could exist together. Because, with her, some things had to be given and some things I had to take.\n\nWith the way she looked up at me, it seemed like the most obvious thing in the world that what I wanted was something that required a mix of both, and it had to be done right for her. Even if we only knew each other as Master and Honey, even if I still didn't know all the other details, I knew that about her. She was easily the most gifted masochist I'd ever met, something dangerous, and I had to make it good. It felt whole and right that her kind of gift had to be earned with careful consideration and prowess because once I had it, I could nurture that gift into something truly evil.\n\nOne way or another, I'd make it so fucking dark and bring the worst nightmares to life so well that she'd never want to leave my side. But first, of course, I had to figure out other things in life, things like what kind of pastimes my little slave would want for her free time. I stopped her kissing my cock by grasping her collar's O-ring, tugging her along beside me thoughtfully. I only realized how comfortable it felt to take control of her like that after I sat down and realized what I was doing, how she was crawling frantically to match my pace. It was the kind of thing that had once made me flinch with those thoughtless actions, how harsh they were. It was also the kind of thing that ensured I gave up on vanilla relationship attempts really goddamn early in life.\n\nExcept, with her... She stared up at me with adoring excitement, crawling along so eagerly that I didn't even have a chance to flinch over it. Her eyes lit up when I sat in a chair to the side and drew her between my knees, settling her there. \"Place your hands on my knees, keep them there, and don't shift on your tracks to try to soothe the pain.\" Her eyes darkened with lust and I smiled when she obeyed. \"Good girl. Let it sink in like a good little torture bunny. But I had a question.\" She looked up from where her hand stroked my knee and I smiled. \"I tried asking Ash, but he couldn't give me the answers. Do you ever braid your hair and, if so, do you pull the braid when you're angry?\"\n\nHer eyes lit up and she hopped on her knees, carefully not brushing her ass to soothe the fire still there, suffering as she was commanded. \"You know the books!\" She glanced at her hands. \"If I promise to not rub the pain, can I use my hands to talk?\"\n\n\"No.\" I said it shortly, control settling into my harder edges in a way that soothed me. \"Exercise self discipline and leave them where I said.\"\n\nHer eyes darkened with arousal again, so that I felt all the more soothed with the fact that she liked me... for me. \"Yes, Master.\" She breathed it and then kissed my thigh adoringly. \"And I have not ever tried to wear my hair in a braid like that,\" she said with a giggle. Her hands twitched as if it was actual torture for her to hold them still. \"It's long enough to, though.\"\n\nI stroked her long, dark hair, the warm undertones a stark contrast to my own. \"It is. It's the right color too, pretty bunny.\"\n\n\"What other books do you like? Did you like the ending of that series?\"\n\nI snorted. \"I felt like the only way we were ever getting the ending of that series was when another author took over.\"\n\nShe giggled happily. \"Speaking of that, I love any and every book in the Cosmere. You don't even understand. It's crazy. I have a word count in the millions of an investment in that universe.\"\n\n\"Oh? I haven't read any of his others, actually. I've mostly kept to the older authors. The Belgariad, Shannara, the epics.\"\n\nShe squealed and I felt a sense of deep ease and pleasure, of comfort at being able to talk about something like this with her. This was someone who liked me, who was okay with how awful I was, and she wasn't cowering in fear with these outside conversations. She had that golden, rare mental resilience that was as valuable as her masochism for me. \"You have to! They're so good, like crazy good. And they're all feel good stories, too! All of them! And there's one that's so romantic. Dalinar is secretly my book world husband even if he doesn't know it. He's so dreamy and oh my gosh, the magic systems are a blast!\" She talked on and on, while I smiled and asked soft questions.\n\nAnd so the little bunny found a dragon's weakness, though she had no idea that she had found it. She talked eagerly and my more quiet nature enjoyed how hyper she was, how happy. Of course, I enjoyed the sensation of stroking my little future slave, petting her hair, delighting to how soft it was. She nuzzled my knees and my arms where I held her, staring up at me with no less adoration even if she wasn't still in my crafted nightmare.\n\nEventually, she started to wear down and I held up a rose when her sentences became more spaced, tugging it from its box in my duffel bag. Her eyes went wide at the sight of it. \"Open your mouth.\"\n\nHer obedience was without hesitation, both fearful and worshipful. She stared at the rose with trepidation until I let her see the thornless stem closer, and then I smiled and placed it on her tongue carefully, between her teeth so that she held it there. \n\nAfter that, she was silent in my arms, holding her rose ever so gingerly. I closed my eyes and pet her while she cuddled closer and now that she wasn't thinking of more to say, she was feeling the effects of such an adrenaline rush, which was the idea. I hadn't gotten my fill of aftercare the last time, which had been on purpose with the type of game Ash and I had initially agreed on. But I fully intended to have it this time. I wanted her adrenaline crash to myself, where I could cuddle her and stroke her.\n\nI was so far lost in her that I didn't even realize what time it was or how long I'd been holding her, after she went still and sleepy on my knee and I curled over her, stroking a thumb over her forehead while I considered the amorality of my intentions. Because my thoughts were how I was holding my slave and she would be my slave one way or another. It might be tricky with my friendship with Ash and Ivory, but she was mine and didn't know it yet.",
        "The nature of the thoughts were extreme enough that the sound of the dungeon door opening made me possessive, so much so that I lifted my cheek from her head and almost snarled in anger at whoever opened the goddamn door when I was caring for her. But of course, the sight of Ash made me realize.\n\nI'd been holding her all night while she cuddled in happy masochistic contentment. Huh. That was new. I waved at Ash and nodded to him while the disturbance made her look around. She gave me such a pathetic look that I took the rose from her mouth so she could talk again. \"You're so terrifying,\" she whispered, except it was with the voice of stricken romance. \"And cruel and awful.\" When she sighed, it made me smile with how blissed it sounded. \"I don't want you to leave.\"\n\nIt made me feel like I was walking on the moon, like I was floating. \"If it's any consolation, I don't want to, either, little bunny.\" I hesitated and then cheered both of us up. \"But I can give you something to think about for next time, Honey. Remember that sharps container?\" She shuddered, eyes turning to terror while she watched me and it did, actually, make me feel quite a damn bit better to see it when I meant for it. I stroked a finger over one of her nipples. \"Let's just say I plan on having a lot of fun with these tits. Since the clamps seemed to bother you so much, I'll be a kind Master and screw barbells through your nipples to hang torture weights from.\"\n\nShe stared up at me in a strange cross between horror and that doe eyed look. \"You're. So. Evil. You're a monster and oh, no, you mean it...\"\n\nI smiled. \"Follow up question. How would you feel about a change of scenery? Like, say, a weekend together in my dungeon. Just you, me, and all the pain you can handle in between having your holes fucked.\"\n\nShe froze and then her eyes lit up and she squealed. \"Oh, that would be the worst thing ever!\"\n\nWhich, I was learning, translated to, \"I would love to\". Such an odd little bunny I had picked up. Not that I was complaining. It was rather nice to have someone kissing at my knees when it was time for me to leave, as opposed to shivering in fearful relief.\n\n\u2014\u2014\u2014\u2014\n\nNynaeve\n\nSomething was up again. I didn't know what exactly, but Ash found me the next day where I was curled up in his spare bed. I was just sitting there, shifting on my cane tracks, enjoying every press and abrasive motion, even while I wore one of my light fabric dresses to try to make it chafe less. But I just couldn't resist chafing it either! Master was so terrible, so evil, and I loved him. It took gall to be that dark and he had it in spades. Like... it went against the grain to want to hurt someone like that. Doms and sadists usually did it with the end game of some kind of pleasure in mind. He just enjoyed the pain and didn't give a shit about pretense.\n\nBecause he was so dreamy. The man with the roses. It only got better with everything I learned about him, like how much pain he could give and how calm and subdued his voice was when he was speaking with me. He had let me obsess with a faint smile on his face, listening attentively despite my geeky fan raging. His questions had a soft quality that said he enjoyed hearing about it, even if he kept his calm as well, softly petting me and controlling me and my far more undisciplined nature, even while he sternly demanded I kept my hands on his knees.\n\nSo. Freaking. Sexy. So dark. I shifted on my cane tracks and tried to not think about it because he'd reiterated his rule that I was a little anal slut slave and not allowed to cum without a cock or toy in my ass. Jesus, I hated anal, except... Oh, it made me as excited as it made me horrified, to be forced to take what I hated if I wanted to cum.\n\nAsh stared back at me in the doorway while I waited for him to talk and I had been kind of expecting something like this after Master's proposal to spend a weekend in his dungeon, so it wasn't that exactly that made it clear something was up again. It was the way he watched me thoughtfully for a moment, sizing me up. \"Evey.\"\n\nIt's Honey or rape bunny. The thought was all the more twisted for how intrusive it was, for how I didn't mean to think it. It would have been one thing for me to be having it as part of my romantics. Because I knew how crazy those were and I knew how to contain those. I obsessed, true, and I played in the dark landscape of happy insanity, but I could pull back from it after enough playtime, too. This wasn't like that, though. It was a thought that scared me for how out of my strange form of mental control it was. \"Yes, sir?\"\n\nHe tilted his head at the honorific I gave him and he wasn't a stranger to those from submissives who took their pleasure from calling him that. I mean, why not, when he was such a safe Master for them to do that with? So long as they didn't get carried away now that he was attached and in love with Pet, he never minded and she didn't either. But I think he heard that other factor in my voice, something else that had changed since the man in the mask, the Master of my nightmares. \"Come here.\"\n\n\"Um. I'd rather not, please.\" I was about 96% sure that I knew the reason why he wanted me to go to him.\n\nHe lifted an eyebrow in amusement. \"Evey, however bad you thought it was, I've seen those games before. It was usually on guys, sure, but I don't judge, so come here.\"\n\nYeah, see, he wanted to see the cane tracks. I'd spent the morning, at first, carefully not looking at them when I showered, almost a little too scared with how hard he had gone. But then I'd paced and worked up the courage because I did want to see how bad he was again.\n\n\"Woooooooow.\" I'd mouthed out the word when I looked in the mirror, staring at my ass and thighs in shock. It was kind of a known thing that the marks darkened by the morning and oh, they had darkened. I'd taken picture after picture of what all I'd suffered, posing in different ways excitedly. It felt like getting a new piercing or having new hair dye to pose with and I'd spread my legs in different ways, so I could show off my pussy and some of the marks up the backs of my legs. I'd gotten on my hands and knees and bent forward, hesitantly pressing a deep welt so that I shivered in sweetest pain. I'd never had marks as gorgeous as his. They were so perfectly spaced, with a twisted kind of care, as if he'd been making a hellish artwork.\n\nStill, though, I had to make myself stand up and go to Ash. \"I took pictures for him. A whole gallery of them.\"\n\n\"Oh?\"\n\nI braced against the wall, helping him tug off my cute pink sundress over my head, hiding my face in my arm. He was silent behind me and I moaned when he stroked a finger up a few of the low marks. \"So evenly spaced for being so deep. This one trailed blood. Here.\" He pressed where I remembered one of the blood trails and I closed my eyes, in that mental space where I floated. \"And this one, here.\" His fingers were gentle, careful to not hurt me, while I remembered Master's tongue lapping up the wounds, licking blood like an animal, growling over his victim.\n\n\"It was so amazing,\" I whispered. \"Sometimes I hate myself for liking things like this, but it was the best, Ash.\"\n\nHe kissed the back of my head and fixed my sundress back, gently again, and I turned around and watched him when he was done. \"And you want to go to him the next time?\"\n\nI thought about that, about being sent to my Master so he could stay in his own territory, which is how I thought of his own dungeon. I liked to think of him as a wolf in its cozy, evil home, with bones and hunting toys made from - gulp - little wayward bunnies. It just seemed like a submissive, logical thought, that he'd far prefer to have me there. The thought of leaving Sulfur's had never been such a thrill for me, but the thought of leaving to go to him, as terrible as he was, made me burn. It felt like walking into hell willingly. I wondered what he'd do, wondered what dark game he intended. He'd have a lot more freedom with me in his home, for instance, in a place I didn't know. The thought made me shudder in terror and it was the kind of thing I shouldn't do. \"Yes! Yes, I want to.\"\n\nAsh answered with an exasperated little laugh. \"Alright, then. Come Friday, I take you and then pick you up Sunday afternoon.\"\n\n\"That's four days away! That's forever! Oh, and what would I wear!\"\n\nAsh crossed his arms. \"What he tells me to dress you in, little slave girl.\"\n\n\"Oh, yeah, I don't have to worry about that anymore. Wow, that's really awesome, that he just decides what he likes like that, you know? It's so nice to not have to worry about it for a change and to just know that it's what he likes because he chose it in the first place. Takes away a lot of insecurities.\"\n\nAsh's voice was dry. \"I'm sure he'll give you plenty of new insecurities to worry about instead.\"\n\nI giggled. He would give me insecurities like how much pain I could take, for instance, but it gave me an idea talking about it. I hesitated, then finally, quietly asked. \"Ash, most sadists really like their marks. Well, a lot of Doms too, but I know the sadists a little better. I was wondering because I know he's a friend of yours but if I sent you the pictures, would you... um... maybe it's silly.\"\n\nHe smiled gently. \"It's not silly. Yeah, I will.\"\n\nI grinned, blushing like a pet player over a new set of realistic, expensive kitten ears. \"Thank you so much! Hang on, I have to get my rabbit ears and take better pictures to send you!\" Ash watched while I ran to the extra closet to play dress up, getting black ears to match my darkened marks. I didn't know what part of the game was involved in my being kept at a distance from my Master, didn't know what mystery and romance lay in not knowing his name and not having a direct way to talk with him, but I really liked it and didn't want to break the rules.\n\nSo I sent the perfected pictures to Ash, staying in the boundaries, in the mystery. I know a lot of people who would think that crazy and they would be right, actually. I was flirting dark games with someone whose name I didn't know, whose face I hadn't even seen in its entirety. I didn't know much about him.\n\nBut there was this delicious romance in finding out in this slow way and I didn't want to insist on breaking it. The truth was I was infatuated with how he made me feel, as if I was a kept little slave for his awful abuse when he desired, something to be kept at a distance until he decided whether or not he preferred more of his plaything to abuse. And then he'd take as he willed.\n\nAnd I liked that thought. The denial of his company made every little gesture something terribly, almost painfully, exciting, a thrill to shock as opposed to a moment to ever be expected. I loved the unexpected. I loved the lack of control. When I pressed my cane tracks even later that night, it seemed an all too clear fact that I had found the man who could undo me, the person who finally might be able to break me. And I adored him for it. It was a dangerous game for my heart, yeah, but it was the kind of game I would never have a chance to play again, not like that.\n\nSo I took a leap and hoped that the most terrible sadist I'd ever played with might have a shred of mercy in some regard.\n\nI didn't have to wait as long as I thought to be reassured, believe it or not, but I think even if he had made me wait, I would have recklessly followed him anyway, chasing him excitedly.\n\n\u2014\u2014\u2014\u2014\n\nIt happened the next night, actually. And it was that night when I learned something about my Master and I'm not sure if this holds true for a lot of those that have darker tastes or not. I hadn't gotten to do a lot of dating in the kink world, you see. I had been able to do a lot of playing, yeah, but not much in the deeper end of things. But, for him and his darkness, I learned that exactly as harsh as he made me suffer was as bloody \"romantic\" as he could be.\n\nI was behaving that night. Actually, Pet and I both were behaving, if you could believe that, and Ash hadn't even locked me in chastity with her that night. We were curled up together on Ash's dungeon bed, reading in the back of Sulfur's. It was during business hours and everything. I was proud of us, actually, when we could have been out in the scenes, having fun.\n\nWe were just reading innocently instead, while Pet painted her nails the shade of pink she had asked Ash permission to use and Ash always got this soft, adoring look when his slave asked for small things like that. Even with that, it was mostly normal behavior. See, I can be good. \"Here's a fanfiction where Sauron and Saruman dominate and whip Galadriel in an alternate universe where Sauron gets the ring back.\"\n\n\"Could you imagine how dark that would be? It'd be terrible. Here's one with an extended scene of Vader interrogating Leia with a torture droid. Heheh, they keep bringing up the fact that he doesn't know she's his daughter. Hey, when are we getting our grades back from classes?\"\n\n\"One second, let me look.\" Pet went to the same law school I did. Actually, it was she who persuaded me to try the LSATs with her and it turned out I was actually really good at the practice tests online. It wasn't even difficult to switch a few classes in the last of my major to go on to law school, either. The difference between us was that she was on to be a business lawyer, where I was on for patent law. As far as classes went, we both spent a lot of time in business law, though, which was awesome when we could get in a lot of classes together.\n\nI froze from looking it up while Pet painted her nails when there was a knock on the door. No one we knew would knock on that door, you see. The only other person regularly in and out was Ash and he for damn sure didn't knock. He was Master in every regard. Even my guest stay places remained open as per his diction and my submissive nature was all too happy to fall under those small commands, was grateful to him for giving them and making me feel structured.\n\nPet stared at the door with me, lifting her nail polish. She'd sooner maim herself than mar the shade of pink her Master loved most. \"Who knocks on doors?\" She whispered it to me.\n\n\"Right?\" I answered in just as soft and frightened of a voice. \"It's like something out of a horror movie. Everyone knows you just text.\"\n\n\"You go answer it. You're the maso slut, you know? If you get raped, you'll like it.\"\n\n\"That's the worst logic I've ever heard! If you like it when an assailant is raping you, then it usually only makes them worse and that's how you die when you throw them into a rage. Haven't you taken, like, Psychology 101? I do have self preservation, you know.\" But I jumped up to get the door.\n\nPet stared up at me speculatively. \"Do you, though? I saw those cane stripe pictures. You'd let him do really bad things to you.\"\n\nI shuddered at that thought because it was true and finally opened the door, blinking. My heart stuttered and then started back in double time at the sight of the red rose. A piece of paper with the number 3 lay on the ground beside it and there was a dress folded neatly in place. I rested my head against the door for a moment, taking in the fact that this was the most playfully dramatic invitation I'd ever had in my life. It was like a fairy tale, the worst fairy tale ever. I turned to look at Pet, who laughed. \"That look on your face says it was for you.\" I held up the rose and she grinned, then held up the dress so she nodded along. \"Dark and mysterious. Wow, Evey, it's your dream come true.\"\n\n\"That doesn't look like the kind of dress to play in.\"\n\n\"Thank God for that. Your ass is a mess, no offense. Like, it's really grotesque.\"\n\n\"Really dreamy, you mean...\" I corrected breathlessly. I tugged on the dress he'd left and adjusted my hair to fix my rabbit ears, taking joy in the fact that the dress matched my ears. It was a short sun dress... or it was shaped like a sun dress anyway, except for the black color with the shimmering silver design down the straps and across the chest in a wavy pattern. There were no shoes and I took that to mean that he liked a barefoot little slave since Ash hadn't had me wear them the past few times. I stared down at the heavy fabric on the dress and then realized something that made me squeal.\n\nI turned in a ballet circle and the fabric flared out and up to show off my cane tracks. Pet burst out laughing at the sight. \"God, you're weird in all the best ways. Go have fun.\"\n\n\"But what about you?\"\n\nShe thumbed her phone, biting her lip in a way that meant she was thinking of sex. \"Master wants to feed me...\"\n\n\"Gone.\" I waved goodbye, laughing at the horny look on Pet's face. The way her Master fed her was with a modified cock toy, so that the chalky liquid she ate for food simulated cum when she swallowed from the toy. I'd walked in on Ash feeding Pet one time and never forgotten it. He'd held her in his bed, cradling her back against his chest, and thrust the cock toy in and out of her mouth, fucking it nice and deep while her lips were swollen from the abuse. His eyes had been closed, his head rested against her temple, his breathing deep so that he could better inhale the scent of her arousal, and he'd looked like he was in his own private heaven. While I'd watched, he had mouthed, \"That's it, just take it,\" and Pet had moaned hungrily.\n\nI'd masturbated so freaking hard and now I tried to leave them alone when he was feeling soft like that. It was bad enough I was encroaching on their day to day life for the summer. I didn't want to get in their way either, so if the timing for my own little foray just so happened to line up to give them a moment, it made me twice as happy...\n\nDo you know, it was only at that point that I realized I was never encroaching because Ash would have taken her to their dungeon if he cared? And I only realized it because of the man with the red rose, when it seemed immediately obvious to me where my Master might be leading me, how he would find his privacy even in this place and have it if that's what he wanted, and how he seemed like a private person. The number written on the folded paper only made that all the more clear.\n\nI waved goodbye to Pet, who was laying in her Master's dungeon bed, stroking her thighs happily beneath where I knew her chastity belt to be under her jeans. She looked almost catlike and so very beautiful, a slave turned into a dream. The image only served to heighten some sense of fantasy, some strange ethereal sensation fueled by the fact that I was in a fetish club, that I was having a... foray? I didn't know quite what was real from what was game anymore, but I liked that fact. I padded along the hallway and made my way down another hallway instead, the one to the dungeons. There was a moment where I felt like both Lakme's Flower Duet and Korn's Coming Undone should be playing in the background at the same time.\n\nThe number three. It was the number of the medical dungeon setup. I shuddered and opened the door when it was left unlocked. My heart raced in my chest and I stared at him, scared and loving it, eager and dreading whatever this was.\n\nHis lips curved up behind the mask while I let the door fall shut behind me and he followed the pattern from before, lifting his hand and gesturing me to him. I couldn't keep from grinning in the fear it gave me, realizing that I'd come to associate that gesture with running and trying to get away, with pain and terror. I had to make myself take a step, toying my choker, and then another. His eyes watched where I nervously fingered the charm on my collar and I giggled, then stepped into his reach, waiting for whatever bad thing he was going to do.\n\nThe answer for that night was no bad thing at all... sort of. I mean, overall, it was a bad thing for me, though.\n\nAt first, he merely pressed on my shoulders and I was more than ready to fall to my knees in front of him. The motion was so seamless that it made him smile above me. \"Be polite and give Master a kiss.\"",
        "Oh, God, and that. Those pervasive little rituals. I kissed his cock through his designer jeans and he had foregone the suit that night, not that he needed it. He wore a leather jacket with matching leather gloves instead and I nuzzled his hand when he stroked me. \"Good evening.\"\n\nIt was breathless and he laughed. \"Good evening back. Come here, little bunny. Did you have fun modeling and being a tease?\"\n\nI lifted up how he manipulated me, thrilling to the small sparks of pain when he used a hand in my hair to control me. \"Yes, Master. I'm sorry I was a tease.\"\n\n\"No, you're not.\" I giggled and lay on the table the way he settled me, then moaned when he lifted the heavier fabric of the dress, baring my ass. \"Then again, you shouldn't be, I suppose.\"\n\n\"Oh, please...\" I whimpered to the way he stroked up the back of my thigh. He tugged the rolling chair to my side and took off his leather gloves, watching me through the same demon's mask he'd worn while caning me. I kept my head tilted to the side so I could see him, fascinated in a twisted way with how he looked at the tracks.\n\nIt wasn't anything like the way Pet's eyes went wide with horrified dread or the way Ash studied it to see how my \"date\" had gone. Master's eyes were dark with something that could be mistaken for lust, except I'd seen his lust and what caused it. This was darker, deeper. He caressed the lowest line, tracing it, and the mannerisms were more satisfied and adoring than they were lustful. \"How sexy. Did you like them?\"\n\n\"I loved them.\" I whispered back to him and closed my eyes, feeling like I was falling through a never ending mental abyss. Was this how slavery felt like for Pet? I wasn't sure, but if it was, then I never wanted to leave it.\n\n\"I think my favorite picture was with that black sheer thong.\" His hand disappeared from stroking me and then I yelped when he spanked a mark. Hard. But that dissolved into another moan when he went back to stroking.\n\nHis spanking again made me shiver because it was nothing like other times I'd had it happen. It was with the intent to hurt, rather than the intent to be erotic. I loved the way he didn't try to entice with pretty images. He went the other way, the way of horror, and went for twisted torture images. \"Thank you,\" I gasped, then moaned when he spanked another mark before stroking me again, his fingers trailing across the welts. It only got better, too, when he slapped again, then leaned forward and licked up one of the lines before he pulled back again.\n\n\"It made me realize a problem with my next scene with you, the first one in my dungeon.\" A shiver ran down my spine at the reminder because I knew it was going to be awful. The first scene in his dungeon. God, what would ever make me agree to go to him and his own domain for an entire weekend? \"What I have in mind isn't going to leave many marks like these, pretty bunny.\" He spanked three times rapidly, so that my skin started to burn. \"But since you liked them so much, we'll have to see what we can do to fix that.\"\n\nOh God, I'd only enticed him to give me more pain. I shuddered when he leaned forward and kissed the marks again, laving his tongue up over them, massaging his hands over my ass in a circle while he did. And then it sank in that maybe I hadn't actually done anything because he seemed to love the marks enough on his own. So maybe I'd always had that extra pain waiting. \"I'm going to make you scream,\" he whispered. \"And there's not going to be anyone around to hear a thing, even if they could. There's no one at my place besides me and no one who will save you, little rabbit.\" I cried out when he stroked his fingers between my legs, gently massaging up my slit to feel how drenched I was. \"Ah, you like that thought. Naughty little maso.\" He slapped both hands down on my ass cheeks brutally and I felt like I could melt. He was so freaking mean... And it was the best thing ever. He soothed back over the pain he was flaring with soft strokes over the marks and I felt dizzy, with the blend of softness and of cruelty in how he made the tracks flare all over again.\n\nBecause his spanking did feel soft to me by that point, even then. And that's what made it sink in that this was his version of romance, when he was being light enough that I wouldn't protest him in terror, when I wasn't crying. It sank in that he wasn't going to fuck me that night... because I wasn't begging him to stop or telling him no and that was how I got cock from him.\n\nAnd then it sank in that I was already getting used to that fact. I shivered under his palm when he slapped, lovingly twisting a cane line to make me shudder and whimper. This was his romance. This was his version of needing to see me because he missed me, his version of a date.\n\nI started to get truly terrified for Friday."
    ],
    "authorname": "Payne_Hall",
    "tags": [],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/nightmare-master-pt-01"
}