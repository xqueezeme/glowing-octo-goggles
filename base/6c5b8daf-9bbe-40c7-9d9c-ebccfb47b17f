{
    "title": "Rock and Water Ch. 05",
    "pages": [
        "My apologies for the long delay between chapters!! This one was a struggle for me, as I felt it was time to show some cracks in the new relationship. I truly hope you like it and as always, I love your support and comments! Once again I can't express enough gratitude to FA_JF for her keen eye and kind words. \n\n*** \n\nI spend my Sunday at the paint store, looking at swatches until my eyes become blurry. It's hard to focus when my body keeps reminding me of my time with Patrick last night. My shoulders are tight, but the biggest distraction is an ache from my pussy, partially from being a bit bruised by our aggressive fucking, and partially due to an insufferable longing to be filled by him again.\n\nAfter spending most of their Sunday at the science museum, Patrick took Luka for pizza and video games. While Luka is distracted by a video game, Patrick uses the opportunity to call me. He whispers in to the phone other ideas he has for the rope, some of which make me question his sanity and my dexterity. I make a mental note to include more stretching in to my workouts.\n\nWe make a plan to get together on Tuesday evening after he's done with work. He wants to come to my place again so we can talk a little more about the cabinets for the kitchen. I'm a little worried about the boundaries between work and play, but keep my concerns to myself. He has plans tonight to have dinner and watch a game with some friends, so we say our goodbyes until we see each other tomorrow morning at the gym.\n\n***\n\nWhen I arrive at the gym the next morning, I don't readily see Patrick so I get started with my warm up. When I'm done, I walk over to the weights and see him on his back doing bench presses. The same female personal trainer from the other day is standing next to the bench chatting at him with a big smile on her face. I stop to look at her more closely, feeling some insecurity trickle in as I look at her young, tight body and sun-streaked blonde hair. She appears to be in her mid-twenties. She looks up at me with recognition and her smile drops, then as if deciding I was of no consequence, turns back to Patrick and squats down to whisper something in his ears. Whatever she said causes him to stop his presses, sit up and laugh.\n\nMy heart flutters a little. Part of me wants to walk right over, introduce myself with feigned confidence, pretending that they've never fucked; which at this point I'm relatively confident they have. Instead, I find myself turning around and walking to the cardio room. I feel like a coward. For all of my confidence about being an independent, professional woman, I know I'm acting childish; but, after seeing online how many men my age preferred younger woman, it's hard not to take it to heart.\n\nTwenty minutes after I start on the elliptical machine, Patrick walks in and sees me. Cocking his head with a slightly confused look, he walks over and remarks that I've broken my routine of using weights before cardio. I blurt out the first excuse I can. \"I'm, um, feeling a bit stiff today and thought it best to get my blood flowing a bit before I did any lifting.\"\n\nHe looks concerned. \"Perhaps a massage tomorrow night might work out some of those kinks.\" His look of concern is quickly replaced with a more devious smile as he adds, \"...and once those are out we'll add a few more.\"\n\nI flush, but inwardly, I'm feeling badly about not being honest with him. I pause the machine and reply, \"That sounds wonderful. How about if we barter the massage for a meal? Is there anything you don't like or are sensitive too?\"\n\n\"I like it all! Meat, veggies, dairy, gluten.... It's all good.\"\n\n\"Wow, you're a rarity in this town!\" I laugh. Having a dinner party anymore for my friends has turned in to a recipe for creative cooking with all the limitations usually placed on my menu.\n\nI'm just about to restart the elliptical when he leans in closely, his eyes shining. \"Tomorrow night when I arrive, be wearing a short sundress. Nothing else.\" With those words, he gives me a peck on the cheek and a quick slap to my ass which causes me to look around in a panic until I realize the only others in here at the moment are two runners on treadmills facing in the other direction, oblivious with their ear buds in. As he did the other day, he picks the treadmill directly in front of me and starts his run, leaving me to stare at his hard body for the next twenty minutes.\n\nOnce I'm done with my cardio, I go back to the weight room to finish my workout. I'm still bothered that I'd been too insecure to approach Patrick and the trainer earlier, and wonder if my imagination is getting the best of me. Unfortunately those feelings are only bolstered when I see her behind me through the mirror's reflection, glaring at me as I do my lunges. She has sadness in her eyes, a frown on her lips, and an expression I just can't read. At this point I know I'm not imagining anything, but I just don't know what to do about it. Feeling uncomfortable, I gather my belongings and leave the gym.\n\nI spend the day pouring over, and eventually checking out home remodeling books from the library. I pretty much know what I'm looking for as far as counters, sink, and backsplash go, but I'm still uncertain about the cabinets and the floors. Throughout the day, the events of this morning in the gym continue to resonate in my mind as much as I've tried to push them out. Still feeling uneasy that evening, I decide to text him goodnight instead of calling as we usually do.\n\nDespite my text, as soon as I lay down my phone rings and it's him. \"Hey beautiful, what happened to you at the gym today? You left without saying goodbye.\"\n\nI know I should tell him what's on my mind, but all I can get out is, \"I, uh....wasn't feeling well.\" Again I can't seem to admit the truth, and guilt begins to swell inside of me.\n\n\"What's wrong sweetheart?\"\n\n\"I'm fine...just tired.\" I bite my lower lip to keep from saying more.\n\n\"Ok, I won't keep you then. Get a good night's sleep... I plan to keep you up late tomorrow night.\"\n\nFor the first time all evening I smile and relax a little. Maybe I can entice him into a little phone fun. \"Mmmmm.... Can I get a little sample tonight?\"\n\nHe laughs. \"Aren't you the horny little one? The answer is no. You need your rest. Go to sleep. No toys, no fingers.... Just sleep.\"\n\nI blush, because that's just where my mind was going. I tease, \"Fine... I'll go to sleep all naked and alone in this big empty bed.\"\n\nPatrick lets out a little growl. \"Don't you worry sweetheart; we're going to put that bed to good use tomorrow night....\" He's quiet for a moment, then adds, \"don't push yourself too hard at the gym tomorrow.\"\n\nWhat sounds like a simple request appears loaded with intention. I can't help myself but ask, \"why not, Patrick?\" My voice almost a whisper.\n\nHis only response is, \"It's time for your first spanking.\"\n\nThose words alone reach deep in to the recesses of my psyche and a myriad of feelings explode within me; primarily lust, but also fear and anxiety. Overriding the last two though, I also feel cherished. He knows this is what I crave from him, what I need. Every venture into my submission to Patrick has been so carefully weighed by him. He's pushed me and challenged me at every turn, but never more than I could reasonably accomplish. The only time I'd ever considered safe wording was when my emotions felt too raw and exposed. If he feels I'm ready for this, then I trust him with all of my heart. I also know that by accepting whatever he gives me, I'm giving back to him so much more. \n\nHe'd previously mentioned that spanking was not necessarily punishment, and I appreciate that my first will not be from any transgression on my part. I suspect that he has planned it that way too. What I experience tomorrow night will be purely from the pleasure we both derive from the experience, without any other events tainting it.\n\nI realize I have not responded to him. \"I'm sorry Patrick, I...uh, got lost in my thoughts. I promise to take it easy tomorrow.\"\n\n\"Good girl. If you can, take a long bath or sauna tomorrow. I want you all better before I lay you over my lap tomorrow night.\" He knows he's only adding flame to the fire that's beginning to ignite inside of me.\n\nWe say our goodnights, and as I lay in bed with my hands clenched at my sides to keep from touching myself, images of Patrick's strong hand coming down over my soft ass cheeks resonates in my head.\n\nIt's going to be a long night.\n\n***\n\nAn early morning meeting with Pete on Tuesday to look over some materials keeps me from the gym until mid-day. I'm halfway done with my workout when once again I sense I'm being watched. Turning my head quickly I find the same young, blonde trainer openly glaring at me. She's talking to another female gym member her age who is also looking straight at me. The trainer smirks before turning to the other woman and resuming their conversation.\n\nNow I just feel pissed off. Whether she and Patrick had a fling or not, I don't deserve to feel intimidated at my own gym. Unfortunately, another thought creeps through my mind. What if they had more than a one-night stand? What if Patrick downplayed what happened between them and I'm in the middle of some break up which may only be temporary. I know my mind may be getting carried away, but all of my fears that things are be too good to be true with Patrick start to cascade in my brain and just like yesterday, I leave the gym before completing my workout.\n\nI meet Johanna for a late lunch and fill her in on all the juicy details. My anger and frustration from earlier ebb as I'm reminded how incredible my time with Patrick has been so far. She's definitely into hearing about the rope and my public venture wearing the harness under my shirt. I don't discuss my concerns about the trainer at the gym. Once again, I wonder if I'm blowing it out of proportion. I stop at the farmer's market on the way home picking up some ingredients for a salad, some fresh wild caught pacific salmon, and a loaf of bread. \n\nPatrick and Guinness show up around 7:15, just as I'm about to put the fish on the grill. Before the door has barely closed, he's lifting my dress to see if I'm bare underneath, which I am. He smiles. My compliance, whether large or small, seems to please him equally. Putting down his bags, he pulls me in to a long, warm kiss while his hands gently caress my hips and ass. My arms drape over his shoulders, and I go on tiptoes to intensify the kiss. His response is to crush his lips on mine as our tongues begin to dance in a way that sends sparks down my spine.\n\nWe pull apart, and the impassioned look burning in his ice-blue eyes erases any anxiety or insecurity that I've been feeling. \n\n\"How are you feeling today\" He asks. \"All better?'\n\nI hate that my dishonesty has carried on to this evening. Taking a deep shaky breath, I resolve to admit my petty jealousy. I pull myself away to stand back a little. His comforting hold is the last thing I deserve while I admit that I've lied for the past two days. \"I'm fine. I just...I haven't been altogether honest with you. Yesterday when I got to the gym I had planned on lifting some weights. When I walked over to get started, I saw you...at the bench, um, talking to the trainer.\"\n\nHe looks momentarily confused as he tries to recall that morning. \"Do you mean Kym?'\n\nI can't quite meet his eyes. For some reason, hearing her name makes it feel even more real. \"I guess so. I don't know her name.\"\n\nHe's silent for a moment and I look back up at him. He still has a baffled look on his face. \"I don't understand. Why didn't you come over?\"\n\nMy face flushes a little as I answer. \"Well, it just looked like you two were having a private conversation, or sharing some kind of joke. It just seemed like a bad idea to interrupt, and she's....\" I can't finish my words.\n\n\"She's what?\" He asks, his demeanor looking more serious.\n\n\"She's just so young....and fit...and pretty, and all I could think of....\" I cut myself off as I feel myself getting tense and defensive.\n\nHe waits for me to finish, his face unreadable.\n\n\"All I could think of was that the two of you fucked. You did, didn't you? During your whoring days?\" Without meaning to, my last words come out with a hint of anger and sarcasm. I know it's unfair but in the moment I just don't care. Images of the two of them fucking jumble in my head along with the looks of disregard and disdain she's launched at me over the past two days.\n\nPatrick steps backwards as a wave of shock and hurt pass through his eyes. He looks as if he's about to speak, then closes his mouth, his lips forming a grim line. Walking past me to the couch, he sits down, resting his elbows above his knees and rubs his hands over his face a few times before resting his chin on his clenched hands.\n\nHis face expressionless, he takes a deep breath. The tension radiating from his is making me uneasy. \"Come. Sit.\"\n\nI feel my body tighten and stay where I am by the door. \"We're not in the bedroom. I'm fine where I am.\" I'm not sure where my anger is coming from, but I'm realizing I've been holding it in for the past two days. \"You can't just expect me to do your bidding all the time. I'm not going to be some kind of slave for you. It's not who I am, or who I'll ever be.\" I can't believe I'm saying these hurtful things to him, but I can't seem to stop myself. \"Perhaps Kym would like to fill that role\"\n\nBefore I know it he's on his feet with his fists clenched at his sides, but stays where he is. Eyes blazing, he spits out, \"Goddamn it Corrine, what the FUCK is this about?\" He pauses as he glares at me, his breath fast and shallow. \"I'm not ordering you to do shit right now, let alone looking for some kind of slave. We've talked about that. I just want you to come over here, sit down, and tell me WHAT THE HELL IS GOING ON.\"\n\nThe anger in his eyes and in his words scares me frozen. I know he's right; he's never even used the word slave let alone ask for total obedience. It was unfair of me to throw that in his face, let alone bring up his \"whoring days\" which he'd shared with me at a time of full disclosure. I know this, but I'm too stunned by his reaction to say anything. I can feel tears budding in the corners of my eyes, my body trembling as I fear that I've crossed the line and fucked everything up.\n\nAt the sight of my panic, his demeanor immediately changes. Rubbing his eyes with his thumb and forefinger, he whispers, \"Shit,\" then walks over to me, enveloping me in his arms. I initially stiffen before I let myself relax into his embrace. In as much as I know my accusations may have been unfounded, his quick anger has thrown me. This is a side of him I haven't seen before, but if I'm honest with myself, my insecurities and sarcasm are a first for him too.\n\n\"Please, Corrine... Please come to the couch and talk to me.\" I look up in to his eyes and see my own fear and panic mirrored in them. I quietly nod. He guides me over to the couch, sits himself down before pulling me onto his lap. Resting my head on his chest, we hold each other in silence and process what has just passed between us. \n\nHis words are now calm and carefully worded. \"Corrine, I'm so sorry I snapped at you... I'm sorry for my anger, but I panicked. I'm not making an excuse, there is no excuse, but as soon as I realized you were holding back from me it just felt so....so familiar. Like how it was with Maureen. I just can't go there anymore. The only thing I've asked from you is total honesty. Could you start at the beginning and please help me to understand where all of this is coming from?\"\n\nFollowing his example, I resolve to be calm, open and honest about what's been happening at the gym, and why I've held it back from him. If he's disappointed with me in the end, so be it. \"It wasn't just seeing the two of you talking, and laughing, the other day; it's been the way she's been looking at me ever since. Believe me, please, I know I'm not being paranoid. She genuinely seems to dislike me and the only reason I can think of is that there's still something going on between the two of you.\"\n\nAgain, he seems genuinely confused. Keeping his voice slow and even, he implores, \"I don't understand how you could think that. I feel like I've been pretty straight forward with you about all of this. I'm not interested in fucking around. I don't date more than one person at a time.\" He pauses to make sure I'm looking straight into his eyes. \"Most of all, I thought it was completely obvious how much I want you... How much I want us.\" The hurt in his eyes devastates me.\n\nRelief and embarrassment course through me with a rush. \"Oh, Patrick... I am so sorry for not talking to you right away about this. I just...I just felt so out of her league when I saw her with you. I can't understand why she's looking at me with such venom. Please tell me, is she the trainer you were...with?\"\n\nWithout hesitation he admits, \"Yes, she is, but that was months ago and it was one time. We're just friends.\" He shakes his head a little. \"I'll tell you everything. I'd had a few personal training sessions with her, when one day she invited me out to hear her band play. We both got pretty drunk afterwards and were being pretty flirty with each other, but before we hooked up I was clear with her that I wasn't looking to date anyone. She said she was cool with that and felt the same.\"\n\nI take this all in, but I still have a nagging feeling that there's more. \"Has she asked you out again since then?\"\n\nSlowly, he nods. \"In the weeks after we hooked up, she invited me a few more times to come watch her play, but I always said no. Honestly, I was concerned that she may have some feelings for me, so the last time she asked I gently remind her that I wasn't looking to date, and once again she said that was fine by her.\" He pauses as if remembering something. \"I don't know.... She did offer that we could just, um... 'hook up' once in a while, but I told her it wasn't going to happen. Since then, she's been nothing but friendly with me.\"\n\nI smile at his naivety and shake my head a little. \"Take it from me... I don't think she's over you.\"\n\nHe gives me a big squeeze. \"Ok, we'll figure this out. She seems like a pretty down to earth girl. Maybe if I introduce the two of you she'll back off. If not, we'll talk to the manager. I don't like the idea that she's making you uncomfortable.\"\n\nI'm doubtful that meeting her will help in any way, and I'm not so sure of how \"down to earth\" she is, but I'm grateful to have everything out in the open. \"I really feel like an ass. I'm so sorry for not being open with you. I'm sorry for bringing up your, um...promiscuous months after your divorce, especially when you were so honest with me about them. You're right though; both of our marriages struggled with poor communication, and I can't believe how quickly I was willing to let that happen again.\"\n\nPatrick lifts and turns me so that I'm straddling his lap facing him. He gently cups my face with one hand, looking at me with such intensity my skin burns. \"Please Corrine. If there's ever anything that is upsetting you, concerning you... or especially if it's hurting you...please let me know so we can fix it together. Just knowing you've been in distress about this for the past two days while I've been oblivious created chasm between us that had the potential to snowball. Your honesty tonight has fixed that, but this isn't something I want to risk happening again. Promise you'll talk to me next time.\"\n\nResting my head on his shoulders, I let out a deep and contented sigh. \"I'll try my best. The past two days have sucked.\"\n\nHe chuckles, and gives my bottom a quick but stinging slap. \"Damn straight you will. Next time I discover you're holding back from me will lead to punishment; spanking or otherwise.\"",
        "I spring up and look at him, considering what \"otherwise\" might mean. He only gives me a knowing grin.\n\nI lean in and gently press my lips against his; one of his hands snakes in to my hair and keeps my mouth on his. Our lips continue to just barely touch, before he lets out a quiet guttural moan and his lips open to mine. My tongue traces his soft lips, venturing in slowly to touch with his. So far he's allowed me to control the pace, but in an instant his grip tightens as he pulls my head back revealing the soft skin of my neck to him. With his hand he slowly pushes the strap to my dress off my shoulder. His tongue runs the length of my neck before his lips and teeth clamp down on me with shocking intensity on my shoulder, sending a current of heat and pain through me. His hold on me tightens as he sucks and bites on the flesh; his teeth imprinting on my shoulder. When he's done, his tongue soothes the ravaged skin.\n\nLifting his head, he brings his lips to mine and we continue our kiss with a fevered passion. Eventually we part, and we both look down at the mark he's left with quiet intensity. At first I'm conflicted, until I realize that it was carefully placed just under where the strap of my dress falls. It should be no trouble to conceal it until it disappears, and as my concern ebbs it's replaced with that knowledge that this mark is for both of us; a symbol that I belong to him.\n\nThe house is quiet except for our ragged breaths. My mind is empty except for being here in this moment with him. I gaze at him; his rough beauty makes me ache. Looking into my eyes, Patrick has a satisfied and sexy grin on his face. \"Ok sweetheart, where's that meal I've been promised? We'll need some nourishment before we get started tonight....\"\n\nIt takes me a moment to realize he's talking, and that I still have dinner to cook. \"Oh shit!\" I gasp, \"the fish!\" He helps me off his lap and we walk hand in hand to the kitchen. As I'm preparing the fish to take outside, he takes samples of stained wood out of a bag, along with a few sketched out ideas for the cabinets. I can't believe how much work he's already done, considering he's still finishing another job. I briefly check them out, but respectfully ask if I can look them over tomorrow afternoon on my own.\n\nHe looks disappointed, and I feel bad. \"Patrick, I know this seems strange to you, but it's really important to me that we keep our, uh...dating, separate from this project.\" I notice he flinches a little at the word 'dating', but it feels too soon to me to call it a relationship. \"I've seen best friends at odds with each other over jobs and money, and I just don't want to risk it. I promise I'll look them over tomorrow and call if I have any questions.\"\n\nHe sighs. \"I get that. I do...but, it's not uncommon for me to start going over sketches with clients before finishing up my last job. Deciding on materials and plans before we start will eliminate any dead time that I could be working. I also need to be with you while you're looking at them, to explain why I'm making certain suggestions or recommendations. It's a very fluid process that requires a lot of back and forth.\"\n\nHe pauses to rub his beard a little, then suggests a compromise. \"How about we skip it tonight, but look at the plans over breakfast?\" \n\nI appreciate his ability to bend, and agree that seems like a good way to go. Heading out to the backyard, he checks out my garden and water feature while I grill up the fish. We eat in the backyard as the evening sky dims and the air cools. Lighting a fire in my clay chiminea, we roast marshmallows and make dark chocolate s'mores. It's a messy process that leaves our hands sticky with chocolate and marshmallow which we eagerly suck from each other's fingers. The conversation has been light and easy, which is a relief after the start to our evening.\n\nDishes are forgotten as he guides me back in to the house and straight up to the bedroom. He closes the door, and in an instant he's on his knees in front of me, slowly and deliberately pushing the hem of my dress over my hips until my pussy is inches from his face. Leaning forward, he rests his forehead on my lower abdomen and deeply inhales my scent. He stays there for a few minutes, his hands on my hips, quietly breathing without a word. Despite his silence, I can feel a change come over him; a shift in the energy of the room.\n\nA change goes through me too. I feel myself letting go; letting go of my jealousy, my insecurity, and mostly my fear. I know he is going to challenge me tonight. My lies and distrust shook him, and more than ever he needs me to open myself to him; to give him every part of myself; mind, body, and soul.\n\nSo lost in my thoughts, I jump a little when he finally speaks. \"Corrine, tonight there will be no toys, no restraints; just my body and yours.\" He stands and looks down in to my eyes; his eyes blazing with heat. \"There will be my requests, and your submission to them. \" He slowly and gently backs me in to the wall, looking down at me with barely contained hunger. \"You will be spanked, fucked, and probably embarrassed and frustrated before the night is over.\"\n\nI stumble as my heart starts to thunder in my chest in response to his words. He catches me just before I feel my back make contact with the wall and his body press against mine. He roughly pulls my dress up over my shoulders, tossing it on the floor behind him; leaving me naked before him. He leans down, greedily sucking my right breast deep in to his mouth. I can't quite get my bearings; a current of panic sets in with his sudden assault and I move my hands to his chest, pushing against him.\n\nBreast still in mouth, he looks up at me with a mix of passion and tenderness that completely subdues my anxiety. I slowly relax my hands and drop them to my sides. As soon as I do, he releases his lips from my breast and gently takes my wrists in his hands, pulling them over my head, securing them in his right hand. This causes my breasts to lift higher on my chest, their firm nipples contract and point invitingly out in front of me.\n\nWith renewed vigor, Patrick cups my left breast tightly in his free hand before sucking the nipple deep inside the warm confines of his mouth. The suction he creates borders on painful, before he releases it and begins to kiss and lick the sensitive, erect nipple. Alternating between nipple and the surrounding pale skin, his mouth and teeth devour my breasts. He switches between each breast in this manner, gradually increasing the intensity until he's sucking and biting the flesh with such force that my legs almost go out on me. The pain radiating from my chest sends currents of pleasure to both my brain and my pussy. I feel consumed.\n\nHe abruptly stops and straightens up, still holding my hands above my head. My breasts are aching and stinging from his rough treatment. We both look down, and I'm shocked to see both breasts are wet and blotched with red welts; teeth marks are scattered across the skin. The sight alone almost makes me come. His dark and dilated eyes scrutinize my ravaged breasts with raw, unbridled possession. My body is his tonight; to give me pain, pleasure, or leave me wanting. \n\nI'm panting and squirming; my pussy begins to pulse as it swells; juices leak down my inner thighs. His cock is straining against the seam of his jeans, but he makes no move to allow me to service him. Instead, he pulls me away from the wall, backing up until he's sitting on the edge of my bed. Picking me up, he sets me down on his lap facing him, my knees on the bed and my thighs straddling his hips. My naked wet cunt is in contact with the rough fabric of his jeans, soaking them.\n\n\"Would you like to come, Corrine?\"\n\n\"Yes... yes, please Sir,\" I say breathlessly. He hadn't requested that I call him Sir tonight, and he looks genuinely pleased.\n\n\"If I remember from the other night, you had wanted to grind that needy little cunt of yours on my shorts.\" I feel my face turn crimson remembering my shameless attempt to get myself off. \"This is your invitation to do so, but I've got my eye on the clock over there. For each minute it takes you to come, you'll get ten spanks. One minute will be ten spanks, two minutes will be twenty.\" He pauses before adding with a sly smile, \"I'll prorate anything in between...\"\n\nMy head shoots up and I give him a not so subtle glare at the injustice of his proposal. I've told him how hard it can be for me to come sometimes, no matter how hard I try. He raises an eyebrow and states, \"the alternative, if you don't try, will be fifty spanks.\" I do the math in my head, and although I've cooled off a little, I'm relatively confident I can make myself come in less than five minutes. That is, if I don't let myself overthink what I'm actually doing, which is often my downfall.\n\nI gasp as I feel his hands behind me, squeezing my ass cheeks firmly while pulling me in to him. My pussy grinds against his jeans covered cock and we both let out lustful moans. Immediately my passion spikes again. I reach my own arms around his back and cling to his shirt as I begin to move against him.\n\nHe chastises me. \"Slow down, Corrine... Not just yet.\" I look up at him, panting; doing my best to hold still when all I want is that delicious friction against my aching pussy. He reaches behind him, extracting my arms. \"Lace your fingers behind your head, then begin.\"\n\nI do as he says, and in doing so realize that not only does it cause my breasts to thrust lewdly upwards, but it also forces me to exclusively use my hips to grind against his cock, without the benefit of my arms to pull myself into him. He lies down on his back, propping himself up on his elbows. He looks up at me with both amusement and unapologetic lust waiting for the show to begin.\n\nSlowly I begin to thrust my hips back and forth over the seam of Patrick's jeans. I see him close his eyes for a moment as his breath escapes him, before they open again, dark with passion. They briefly flicker to my bedside clock before returning to me. His gaze drifts from my eyes, to my chest, then to my pussy where they linger.\n\n\"Keep them open,\" he orders as my eyes clench tightly while I find my rhythm. In a stand of defiance I open them and stare down on him, rocking my hips back and forth over his entrapped cock. Our eyes lock on to each other in a battle of wills. My pussy lips spread wetness over his jeans, soaking them. The smell of my juices and lust hang in the air around us. Every nerve in my body is screaming to come, and a mindless pursuit of pure pleasure takes hold of me. I lose all inhibition as I grind myself against him wantonly. I can feel my swollen clit dragging across the rough material in that almost painful way that I crave. In less than a minute I reach the edge I've been searching for and feel the beginning of an incredible orgasm overtake me when he speaks and I fall backwards off the crest of the wave and back to reality.\n\n\"That's ten spanks so far, beautiful....\" He gives me a wicked smile. It's clear he's timed his interruption perfectly to break my concentration. \"Look at what a good little slut you are working your wet cunt over me. Perhaps I should bring a mirror over so you can watch yourself humping me like a bitch in heat.\" His words are harsh and ugly, but the emotions on his face convey other feelings altogether. Lust, desire, and affection are battling with each other in his eyes, while his words are carefully chosen to embarrass me; which they do. They penetrate me and a wave of heat almost chokes the air out of me. My pussy gushes and I cry out as I begin my quest again.\n\nI try to find my rhythm, but can't quite reach it. As soon as I get close, he begins to goad me again with crude and graphic descriptions of what I'm doing. \"Such a dirty little slut, masturbating your cunt against my jeans...\" He's getting into my head and I grit my teeth as I glare down at him. He only smiles back at me. \"I bet you're holding back so you'll get as many spanks as that sweet ass craves.\" Finally he adds, \"...and by the way, you're up to thirty now.\"\n\n\"AGGHHH!!!\" I let out an exasperated scream as I truly do begin to hump his cock in short, rapid bursts. My pussy and clit feel like they're on fire as the pain transforms in to dire pleasure, and this time as I reach that elusive peak I crash my pussy into him with such force that tears start to pour from my eyes as I cry out my release. As soon as I do, Patrick pulls me down on top of him, his arms encase me in a tight hold but it's as if I'm not in control of my limbs as I continue to shudder and kick out with my legs.\n\nMy orgasm continues to pulse through my body and I'm just shy of hyperventilating. The feeling is both exquisite and a bit frightening. I can't quite seem to get my bearings and a little panic sets in. Quickly he rolls us over until he's laying his full body weight on top of me. The pressure of his body on mine makes me feel secure, and only then do I start to calm down.\n\nPatrick looks down at me, gently stroking my sweat and tear soaked hair out of my face. He's talking but I can't quite register yet what he's saying. In time though, his words become clearer. \"....are amazing. That was beautiful sweetheart.\" Leaning down, he plants gentle kisses on my cheeks, forehead and lips. \"I thought my heart was going to explode watching you, Corrine.\"\n\nI take a deep breath and let it out. His words of praise and adoration wash over me and I feel a warm glow resonating inside. My body is relaxed, calm, and sated. I look up at him and smile. \"So now I'm a 'dirty little slut', am I?\"\n\nHe laughs. \"Well it worked didn't it?\" He's right, it did. I'm not sure how he knew just what to say, what would tip me over the edge, but he did. \"You were a vision up there; completely out of control.\" It's only then that I realize how in control he remained. After my grinding against his cock for so long, I can't believe he hasn't shed his pants and fucked me yet. I attempt to extract my legs from under his, so I can spread them in offering to him but he still has me pinned down.\n\n\"Where do you think you're going?\" He asks with amusement, but his expression is anything but light. He pulls my wrists over my head, locking them down with one hand. \"I believe there's still the matter of your spanking... As I see it, it took you around three and a half minutes to come, so you're looking at thirty-five spanks.\"\n\nI close my eyes and unconsciously release a quiet groan as I remember the sting left behind by the two spanks he gave me last week, and those were over my shorts. My heart begins to race as fear mingles with arousal. My body is still tremoring as it comes down from my intense orgasm, but new wetness is seeping from my sensitive and swollen pussy.\n\nPatrick leans down to briefly bite my lower lip, before crashing his lips on to mine. Our kiss is wet, passionate and unrestrained; reminding me of teenage lust. But we're not teenagers, and there is so much more that is happening between us besides lust. The depth of intimacy and trust developing is unlike anything I've ever experienced with any man before.\n\nSlowly he pulls back, lifting his weight off of me leaving me cold and exposed, despite the warm temperature of the room. The full weight of his body on mine had pacified me, and I giggle a little because it reminds me of Griffin's \"Thundershirt\".\n\nHe looks startled by my levity, along with a little amused. \"Care to share what's got you so cheerful all of a sudden?\"\n\n\"Um... Do you know what a Thundershirt is?\" He shakes his head. \"Griffin hates fireworks and thunder; they totally freak him out and he's miserable for days. \"His Thundershirt is like a snug sweater that I put on him; the compression seems to help calm him down.\" He looks intrigued, but a little confused. \"After I came... I was oddly distressed; I felt so out of control. You laid down on me and everything just stopped.\" I suddenly realize how important this is. I look up at him seriously, wanting him to know how much this means to me. \"Somehow you...you knew just what I needed. I felt calm and in my head again; I felt taken care of.\" \n\nPatrick gently uses the back of his knuckles to stoke my cheek. His eyes are bright and warm, and his expression so filled with emotion that I can't tear my eyes away from them. \"That's how you make me feel every time we're together.\" He leans down to gently kiss my cheek, before embracing me in a hug.\n\nIn this moment I know, with sudden clarity, that I am in love with him.\n\nHe slowly releases me, sitting up and straddling my hips. His eyes focus on my red and ravaged breasts. His breathing quickens; his previously soft expression intensifies as his lust takes hold. He licks his dry lips before he speaks. \"I hope you understand where this is coming from... Your breasts look so fucking hot right now.\" \n\nI prop myself up on my elbows and look down on them. Small purple bruises are scattered over the flesh; impressions of his teeth are just barely visible near my right nipple. In a rush I feel powerful and proud that I gave myself to him; to bite and suck and mark as his. \"Yes,\" I answer, \"they are.\"\n\nA second of relief passes over his expression, before he lifts his head a little higher and looks down at me with a gleam in his icy blue eyes. \"Do you think they could take some more?\"\n\nMy eyes widen as my heart once again races. I don't know how to answer with words, but my nipples involuntarily contract to hard nubs, my pussy clenches, and my aching clit begins to pulse with need.\n\nHis eyes locked on mine, he explains. \"It's time for your spanking; then your fucking... I'm going to spank your ass, tits, and cunt tonight; in that order. Then I'm going to fuck your cunt, but I'm going to finish in your throat.\" He pauses, takes a deep breath, then asks, \"Can you do this for me?\"\n\nSomething between a gasp and a groan escapes my throat. My body already feels like it's been through battle; but all I can think about is giving him more. I may not be ready yet to share my love for him in words, but I can show him by giving him my trust. Looking in to his eyes, I silently nod.\n\n\"No, Corrine\" he slowly shakes his head. \"I need to hear you say it. This is too important for there to be any misconceptions.\"\n\nFeeling brazen, I begin to beg. \"Please... Please spank my ass, my...cunt, and my tits. Fuck my cunt. Come deep in my throat. I want to feel you. I want to taste you. I want you to use my body like a fucktoy that only belongs to you.\" As I speak I see him sharply intake his breath and see his expression change from awe, to calm determination, then to something else that fills my heart with pure joy.\n\n\"You look so eager to please me baby, and it is so fucking sweet. I know you want to give me your all, but please don't let that keep you from safe wording if you if it gets to be too much. Your hands will be free while my cock is fucking your throat... if you need to me to stop hit me, pinch me, slap the bed; whatever you need to do... short of biting, of course, \" he says with a slight smile.\n\nAgain, I eagerly nod. This time adding, \"I will! I promise!\" I'm so excited to get started, I jump up on all fours to present my ass to him; giving it a little wiggle. After years of fantasizing, I can't believe I'm going to get my first spanking that I didn't have to give myself!\n\n\"That's a beautiful sight Corrine... I think I'll let you stay there for a bit.\" He gets up and walks around the bed so I can see him. Kneeling down to look me in the eyes, he orders, \"don't move... I'll be back.\" Walking away he leaves my field of vision, then I hear him leave the room. I strain my ears to listen. I can't hear much, but then I hear a sound I know all too well; the jingle of leashes, the barks of excited dogs, then the front door closing. Fuck.\n\nWhat feels like hours later, which I know to only be twelve minutes because I've been watching my bedside clock tick them off excruciatingly slow, I hear the front door once again open and close, followed by the sound of expectant and eager dogs getting their bedtime treats. A few minutes later Patrick returns; I hear his footsteps stop at the door's entrance.",
        "I can feel his eyes burning in to me. My body heats up as I picture the view he sees before him. My ass cheeks are round, but a little soft. My thighs, although strong, have begun to show the occasional pinch or pucker due to cellulite. My red and sensitive breasts are hanging from my chest; their only movement caused by my shallow breaths.\n\nBriefly I fantasize what it would have been like to meet Patrick when we were younger, when my body was firm and forgiving. I vanquish that thought as quickly as it came. I know in my heart that I was not ready for him then; for his level of honesty and candidness.\n\nI hear him walk up to the bed, then feel the bed shift as he crawls up behind me. My body is alive and tremoring in anticipation of his touch. Heat is radiating from his body to mine as I feel his still clothed hips push against my bare ass cheeks. His hands possessively run down my back, over my hips, and down the sides of my legs then back up again. My skin warms with his touch, and I feel my body and mind relaxing.\n\nHis caresses on my back begin to work deeper into the tissue, and I feel each calloused finger as they cover every inch of my skin. Backing up enough to expose my ass once again, he continues his rubdown over my cheeks and thighs, gaining intensity until he is kneading the pliant flesh roughly, but oh so erotically.\n\nMy skin is tingling and alive; my mind cleared of everything except the sensation of his hands on me. Gently, without words, he pulls me up until I'm sitting next to him. At some point, perhaps after walking the dogs, he's removed his shirt and I look greedily at his hard, lean muscles that taper down to his jeans.\n\nHis eyes burn in to me in question. \"Why am I spanking you tonight Corrine? Am I punishing you?\"\n\nI know he is asking because of earlier. He wants to make sure I know that our angry words and this spanking are not connected in any way.\n\n\"No, this is not about punishment, Sir. It's about pleasure; yours and mine. It's about erotic pain; about giving my body and mind over to you, and trusting you to know how far you can take me. I do, Patrick. I do trust you.\"\n\nHe takes a deep breath, smiles briefly, then composes himself before he abruptly orders me to lay down over his lap with my chest and head resting on the bed. \"Keep your hands next to or under your head.\"\n\nHis hands begin to knead the flesh of my cheeks again. As I lay there, my senses are in overdrive. The smell of sex and sweat already permeate the room, and the feel of his hard cock under my belly causes my pussy to clench in anticipation of fucking him. I wriggle myself over his lap to try and tease his cock a little, but he's having none of that. His left leg swings up and over my thighs, trapping them tightly against him.\n\n\"Ok....\" he calmly but carefully spells out, \"there will be twenty spanks to your ass, ten to your tits, and five to your cunt.\"\n\nI've read enough erotica to know that before he spanks me in earnest, that I can anticipate some warm up ones first. I'm caught off guard then, when the first smack crashes down on to my left cheek causing me to scream \"shit!\" and grab my comforter to keep from reaching backwards. With the same intensity the next spank comes down on my right cheek. Despite being prepared I still grunt as my nails dig in to the silk of my bedding. I can't believe how hard he's hitting me! It's as if he's not holding back at all. Again, the spanks keep coming. The next three come quickly in succession, all to my right cheek, then the same to my left. After those he begins to rub and knead the flesh again. A burning sting radiates from the surface of my ass cheeks, and I know they must be a decent shade of pink already. His already hard cock shifts and twitches under the confines of his jeans.\n\nI feel his hands lift from my ass cheeks once again; the anticipation of his next spanks causing me to quietly whimper. His left hand comes down again, just as hard as before; this time to the apex of my thighs, just above my exposed pussy. I've found that spot with my own paddle before; it's a sweet spot that causes my pussy to overflow with juices that are now leaking on to his jeans. Two or three more there before he begins to alternate between each cheek, harder than before. Tears well in my eyes as I feel his strength and the power he has over me. The smacks keep raining down until I've lost count. I want to take this for him; I just don't know how longer that I can.\n\nJust when the word \"yellow\" starts to float through my thoughts, the spanking stops and once again he is rubbing and caressing my abused ass. My cheeks are not only burning on the surface, but a deep ache now radiates through the flesh and deep in to my core. I'm openly bawling my eyes out, and I can't seem to release my clenched fingers from the bedding. My crying feels cathartic, and my whole being begins to feel a peace wash over me. As my whimpers transform from pain to unfulfilled passion, I feel him spread my legs apart and begin to slide two fingers up and down my gushing slit.\n\nBriefly the fingers leave my wetness, and I hear him suck them deep in to his mouth, letting out a deep and gravelly groan as he does. When they return, there's three of them and they continue to tease the entrance to my pussy until it's all I can do to keep myself from pushing back and impaling myself.\n\n\"Oh soon, my little greedy one. Very soon.\" He lifts me from his lap and stands me on shaky limbs. Supporting me with his strong hands on my hips, he orders me to kneel before him as he remains seated on the bed.\n\nCupping my face in his hand, he guides my eyes to his. \"Are you ok? Can you go on?\"\n\n\"Yes, Sir. I'm good. It's so....so good. Please don't stop.\" In this moment I mean it with all of my being.\n\n\"Lock your fingers behind your head and keep them there.\" I do as he asks, and feel my breasts lift and offer themselves to him.\n\nHe begins with caresses and gentle squeezes to the already bruised flesh. He's being more ginger than before, but it rekindles the ache left behind from his previous abuse. I look down to watch as he plays with my breasts and nipples. He doesn't seem to mind that I'm watching, which makes me more brazen looking back and forth between his face and my breasts; the images dueling for my attention. As I look down, his large powerful hands cover and completely envelop my breasts. When I look up, his expression is tight with concentration and unbridled passion.\n\nSuddenly, lost as I am in wonder at his enraptured expression, I realize my breasts are cool as they are now exposed to the air once again. Just as I look down I see his right hand swing, then strike, the side of my right breast with just enough force to create a biting sting but not much more. Our eyes briefly meet, and by the slight smile on his lips I know he's being a little easy on me. He then smacks my left breast with the same constrained intensity. The sting left behind is exquisite, and I squeeze my legs together in an attempt to relieve the aching need between them.\n\nTogether we both watch each strike with fascination. Once again, he alternates between the breasts, but he takes more time in between each spank to watch the effects. With each smack my smaller, b-cup breasts jiggle back and forth like a bowl of gelatin. For the first four spanks to each one, he's clearly avoided my tortured nipples, but for the last two, he shifts his hand just enough so that the nipple feels the full brunt of the blow. The pain to my nipples is exquisite and I feel a charge shoot straight to my pussy and almost push me over into an orgasm, but not quite.\n\nQuickly lifting me until I'm standing between his legs, he lavishes my breasts and nipples gently with his tongue, causing me to groan and push my pussy hard against his cock. Patrick lets out a tortured moan, before brusquely standing and picking me up in one motion, only to deposit me on the bed with my feet dangling to the floor. This time he kneels before me, using his hands to spread and stretch my thighs apart as far as I can hold them.\n\nHe uses his fingers to spread my puffy outer lips to expose my wet, swollen pussy lips. Leaning in, he lightly brushes his tongue against my clit causing me to buck hard enough that he has to restrain my thighs with his strong hands. With broad, firm strokes he begins to lick my cunt; between the outer and inner lips and then deep inside my hole until I feel my juices flowing out on to his tongue. His skilled tongue leaves no flesh untouched, from the ring of my asshole and perineum up to the hood of my clit. With his lips he sucks my entire clit in to his mouth applying a rhythmic pressure that makes it grow longer and swell. My body helplessly thrashes below him.\n\nHe pulls back and smiles. \"Look at that fat clit of yours, Corrine; sticking out so proudly almost like a small penis.\" My face flushes at his crude and graphic description, but his words make me whimper even more. \"It's going to be hard to avoid when I'm spanking your pretty little cunt.\"\n\nBefore I can even take in his last words, his right and swings down and makes a wet smacking sound as his four fingers contact my pussy lips, the tips just barely stinging against my exposed clit. His other hand is just above my pussy, covering my pubis; keeping me pushed into the mattress. This time I truly shout out, I can't help it. The pain and sting hasn't faded as the next three spanks against my swollen and raw pussy lips fall with exacting accuracy. My tears return and I try to squeeze my legs together to ease the stinging ache between them. Of course his hands are on my thighs in a second; keeping them far apart.\n\n\"One more.... One more and we're all done. I'm so proud of you. I'm not going to hold you down for this last one. You're going to stay still and take it.\"\n\nWith trembling lips, my voice is surprisingly calm. \"Yes, Sir.\"\n\nThis time, the whole of his hand swings down and as his palm makes contact with my pussy lips, his fingers land directly and firmly on my clit. \"AAAUUUGGGHHHH!!!!\" I scream with all I have got left, but I keep my legs open and my bottom against the bed. Pain and pleasure surge from my clit to my brain and back again. I need more, I need to be filled. My pussy feels so empty and needy that I'm ready to stuff myself with my own fingers if he doesn't fuck me soon.\n\nPatrick quickly sheds his jeans and boxers. He stands before me naked; his long, thick cock is arching deliciously upwards. The crown is a deep purplish-red and pre-cum is freely oozing down its side. Still lying on my back with my legs spread lewdly, I begin to beg. \"Please Sir, fuck my wet cunt...fuck my hole.\" In one stride Patrick steps forward and impales me on his impossibly hard cock, groaning loudly through gritted teeth as he does. Air escapes my chest as I let out an anguished grunt. The force pushes me back on the bed, only to have him grab me by hips, fingers digging into my abused ass cheeks, and pull me back onto him. \n\nHe starts with a lazy, slow pace; pulling all the way out before plunging back in balls-deep, then grinding his pelvis against me. Despite my copious wetness, my pussy feels stretched and filled to the hilt; each stroke drags along the walls of my hole, hugging his cock like a tight fist. His face is a portrait of pure rapture; mouth parted, eyes closed. My body shudders with pleasure. It feels as if mini-earthquakes are firing off throughout me. Pressure begins to build in the core of my pelvis, growing and expanding until even my scalp and fingertips are aching with desperation for release.\n\nHis eyes open; first to watch his cock glide in and out of my wet pussy, then to travel up my body until they reach mine. His look conveys nothing less than total ownership and mastery. In this moment, I am his fucktoy and I couldn't be happier.\n\nWe both let out moans as he pulls his cock out of my cunt. Licking my lips in anticipation of sucking him deep inside, I'm startled when he picks me up and flips me over the side of the bed, belly down. My bare feet barely make contact with my hardwood floors when I feel him move between them, spreading my thighs wide with his strong hands until my toes are barely touching the floor. Once again my pussy, and now my ass, are totally exposed to him.\n\nI feel three fingers begin to run up and down my wet slit a few times before plunging in and fucking me roughly. Juices seep from my pussy, drenching his fingers and hand. He pulls them out and begins to spread the wetness up between the crack of my ass, swirling his fingers around my tight ring before dipping back in to the wetness.\n\nThe next time his fingers travel to my asshole, he slides one finger in, briefly moving its full length in and out of the impossibly tight hole before adding a second. The ache from my battered ass flares once again as his fingers begin to earnestly fuck me. I strain to meet his hand with each thrust, letting out uncontrolled gasps and pants as I do. My orgasm is rapidly building; if I just grind my clit into the bedding a little harder I know I'll spiral out of control.\n\n\"More?\" He asks, as breathless as I am.\n\nI can barely form words, but I answer, my voice laced with hunger. \"Yes, Sir! Please...more!\n\nHe pulls out the two fingers slowly, only to add a third and drives them back in just as he rams his cock HARD back in to my pussy. Fucking me in rapid, hard strokes I can hear him behind me emitting a string of lewd and nasty word mixed with those of praise and adoration. \"...cunt is so fucking tight...sucking my cock in so deep; not letting go.\" A pause, and then, \"you are so fucking hot and sweet....YOU ARE MINE!\" His fingers continue to scissor in and out of my stretched asshole, drilling me into my bed along with his cock. As my clit smashes against the mattress one final time, I explode and cry out as lights crash through my head and waves of pleasure surge over and over through my body. I buck against him until I can't even tell if I'm trying to have him fuck me harder or if I'm trying to throw him off of me. He continues to fuck my ass and cunt at a slower pace, milking the last of my orgasm out of me until I lay still.\n\nHe pulls his fingers and cock out of me, leaning down to briefly suck the flesh of my right ass cheek in to his mouth before he rises. \"On your knees. Now.\"\n\nI'm so desperately hungry for his cock I practically fall of the bed and to his feet, rising on to my knees just as he grabs the back of my head with one hand, his fingers tight in my hair. His other hand is around his wet cock; my juices lubricating the velvety skin as his fist pumps up and down its hard length. In one motion his hand in my hair tilts my head back, causing my lower jaw to drop open; his other hand guides his cock straight in to my mouth, pushing against my throat. The tastes of my cunt and his pre-cum mingle and fill every one of my senses. He smells of sweat, salt, and his own private musky, male scent that imprinted on me the first time I smelled it and will never leave me.\n\nOur eyes are locked on each other as he encourages me without words to take him deep down my throat. Pulling back a little, allowing me to take a deep breath and swallow, he presses forward again and I mentally brace myself to relax my throat and let him pass. I will my throat to relax, to not gag against him, but with each push I gag hard; thick and copious drool begins to form in the back of my throat, leaking out of the corners of my mouth and down my chin. Each time my throat chokes or gags on his cock I can feel it squeezing down the crown, causing him to shudder and moan with both passion and agony. Finally my mind empties and my throat opens as his cock slips past that last tight hole and rests deep inside of me. His balls nestle against my chin and my nose is smothered by his pubic hair.\n\nWe stay locked this way. My airway is completely obstructed by his cock, but instead of panic I feel deep and encompassing trust in him. He stares at me in wonder, completely swallowed by me. Just as my eyes begin to moisten and a tear forms in the corner of one eye, he pulls out enough for me to take two big breaths before he plunges deep inside of me again. We continue this pattern for what feels like minutes, but his control wanes and the amount of time his cock stays trapped in my throat becomes less and less and his pace picks up and he truly begins to fuck my mouth hard.\n\n\"Oh sweetheart you are such a good little cocksucker. Your wet hot mouth and throat were made for my cock and I plan to use it again and again.\" Both hands tight in my hair, he pulls my head back and forth in rapid strokes over his cock now, his balls crashing into my chin. Imperceptible, lewd sounds unleash from my mouth as he fucks it for his own pleasure. I lay may tongue flat in my mouth so it's surface caresses his cock with each stroke, causing him to only go faster and harder. My lips crash against my own teeth, almost drawing blood.\n\nHis cock suddenly stiffens and swells even more before he cries out in a deep and gut-wrenching growl just as I feel the first blast of his thick, salty come spray deep against the back of my throat. He's stopped pumping as he continues to come long and hard in my mouth. Spurt after spurt of his come continues to fill my mouth; dripping down the back of my throat. There is so much that it's coming faster than I can swallow; it begins to seep out of my mouth, down my chin and along his cock and balls. He's panting breathlessly and I can see his knees begin to give as he pulls himself backwards and out of my mouth. I swallow the come still in my mouth, then use my tongue to lick my lips clean. Running his fingers over my chin, he collects the semen deposited there and brings his fingers to my mouth, which I readily clean too.\n\nCrawling on to the bed and grabbing me with him, in a last burst of energy he hauls us up to the center of the bed where we collapse side by side. He is lying wasted next to me, legs open and body completely weakened by his powerful orgasm. He lays there quietly, with his eyes closed but a look of pure peace on his face. \n\nAlthough I know he takes pleasure in my aftercare, I feel it's my turn to look after him. The first thing I notice is his cock still covered in come and saliva. I rise, just enough to scoot myself backwards until my face is level with his cock. I touch his thigh to make sure he knows my intention, and he lets out a soft groan. Taking that as approval, I slip my hand under his soft cock and lift it to my mouth. I know his cock will be extra sensitive, so I take care not to overstimulate him but to just thoroughly use my tongue to lick his cock clean, before gently lifting it to serve his balls as well. Soft moans emit from him as I do, but he does not move to stop me.\n\nWhen I'm finished, I move back up until I'm on my side facing him as he lies on his back. I snuggle close and feel his arm embrace me tightly behind my back, pulling me closer. Absentmindedly I run my hands through the soft hairs of chest and watch him. Slowly he turns his head and his eyes crack open. A smile forms on his face. \"You look happy,\" he says sleepily. \"Are you good? Do you need anything?\"\n\nI almost laugh because I think we both know he's barely capable of lifting his head in this moment let alone taking care of me. I assure him I'm fine; more than fine. Encouraging him to move up and under the covers, I briefly go to use the bathroom before returning to snuggle against him once more. I think about the way he dominated me tonight. No toys, no restraints, just his will over mine. My body is marked, swollen and bruised, but my heart is as full of love as it's ever been. I fall asleep with my head on his chest, lulled by the sound of his beating heart.\n\n***\n\nI wake in the morning to the smell of coffee and an empty bed. Putting on my silk robe and heading downstairs I see Patrick's made himself at home in my kitchen. On the table waiting for me is yogurt topped with fresh fruit and granola. I smile as I also see that he's meticulously laid out the blueprints and wood samples right next to my food. The house is quiet but I know he's still here judging by his shoes left by my front door. I pour myself some coffee and look out the back window. There he is barefoot in the grass, jeans only, throwing a ball for the dogs in the backyard. He lets out a laugh as Guinness literally grabs the ball out of Griffin's mouth then runs circles around him.",
        "He sees me through the window and throws me an easy smile. In that moment I know I could wake up to this every morning and never tire of it. We still have a lot to learn about each other, and other cracks will show themselves as they did last night. With resolve I thought long buried, I'm determined to face every obstacle head on."
    ],
    "authorname": "jhollander",
    "tags": [
        "mdom",
        "fsub",
        "bdsm novella",
        "spanking",
        "bdsm drama",
        "drama"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/rock-and-water-ch-05"
}