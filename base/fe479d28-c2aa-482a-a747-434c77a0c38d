{
    "title": "Dominant Ass Eating",
    "pages": [
        "Paige is a girl I've known for a while - a friend of a friend, that I used to see at social gatherings but never really exchanged more than a few words with her. I have always been extremely attracted to her, as she does happen to be a pretty, blue-eyed brunette that also always has a very cool vibe around her. The kind of girl that responds to (literally) casting calls of \"hot Coachella chick\" and is a lock to get the part. I've always wanted to spend a little exclusive time with her, but never really had the opportunity to get her one-on-one. Well, I finally got her one-on-one, and damn... It turned out pretty fucking great!\n\nHanging out on the fringes of a party hosted by a mutual friend, it was the first time we'd ever really talked to each other by ourselves, and it was cool to find out we had a lot of common interests. We hung out for a good half hour, just talking music, books, tv, movies, everything, and I was really enjoying her company. She was funny and sharp, and yes, unbelievably hot when she got passionate about a topic. As our chemistry continued to develop, our conversation got a bit flirtier. I remember specifically thinking at a certain point, \"Uh oh, I think this is going somewhere...\" I started to get confident. Maybe a little too confident.\n\nWe were talking about some app that empowered users to tell secrets to strangers, and laughing about what we'd throw out there into the void. After a brief lull that almost became an awkward silence, she handed me an opening... \"So\" she gave me a sultry smile, \"what's your kinkiest secret?\"\n\nI love these frank discussions, and I knew I had to give her a good shock, and test the waters to see how interested she really was tonight. Now or never!\n\n\"Oh, that's easy,\" I leaned in and whispered into her ear, \"I've been fantasizing about making out with your butthole all night...\"\n\nQuick note: I have to say that even though I HAVE gotten more forward over the years in my approach, I don't usually go overboard unless I'm reasonably confident that it will be met positively or at least with good humor. I was sensing a fun chemistry with Paige all night, so I risked the embarrassment...\n\nBetween her sharp intake of breath, the jerking motion of her head, and the perfect, cartoonish \"O\" before she tried to cover it up with both hands, spilling half of her drink in the process, it was all I could do to keep a straight face and not burst into laughter. But this was serious stuff!\n\n\"What the fuck did you just say to me?\" Paige's face was bright red, but she had an enormous smile that she couldn't cover up, even if she wanted to. Yes, I remember thinking, I am in! Before I could respond, she recovered her composure, and bit her finger as she looked me in the eye and smiled, \"And you look so innocent...\"\n\nThrough a smirk, I whispered again, \"Nah, that's just an act.\"\n\nPaige looked me up and down, as if seeing me for the first time. I could feel her mental re-appraisals in her stare. \"I want you to say what you just said to me again. No whisper this time. Just say it to me.\"\n\nHmmm. Now I wasn't sure if she was going to call me out and try to embarrass me in front of our friends, or if she really was feeling the vibe. I took a deep breath, locked eyes with her, and said in a regular voice with a straight face, \"I've been fantasizing about making out with your butthole, Paige. All night.\"\n\nPaige nodded, and held my eyes while she took a drink; thankfully, nobody heard us. I could tell she was nervous, but playing it cool. Still trying to figure out what was going on. \"So wait. Have you been fantasizing about it all night, or do you want to make out with my butthole all night? Because that's a long fucking time...\"\n\nNow I laugh. \"Both. Definitely both. And you've got a lot of mouth on you!\"\n\n\"I have a lot of mouth! Who the fuck says what you just said to me?\"\n\n\"Wait, are you mad about it? I was just being honest.\"\n\nShe pauses for a second. \"No, I'm not mad about it. I just don't know what to do with that information.\"\n\n\"I know what I'd do...\"\n\nShe cuts me off, \"Yeah, Jack, now I know what you'd like to do. And you're loving this, aren't you? Making me squirm.\"\n\n\"I'd rather make you squirm in other ways...\"\n\nNow Paige laughs, and the awkwardness is gone, \"Stop it! Seriously, stop it! Is this really how you flirt?\"\n\n\"No, if I was flirting, you'd know it.\"\n\n\"It'd be MORE obvious and inappropriate?\"\n\n\"No, you'd be sitting on my face by now.\"\n\nTo her credit, she rolled her eyes at that. \"Haha, when did you become Mr. Sex Stud?\"\n\n\"You were the one that brought up secret kinks. I'm just driving down your road.\"\n\n\"What makes you think my road involves you...\" she goes into a stage whisper, \"...eating my ass?\" Paige can't keep the smirk off her face as she looks up at me and self-consciously brushes a strand of hair from her eyes.\n\n\"Maybe you didn't know where the road was heading, but that's part of the fun. I think this is a detour we should definitely take...\" I smiled, looking into her eyes. I noticed her breathing was getting more shallow, more excited. Like she was preparing for action.\n\nPaige let out a deep breath, \"Damn...\" She looks around to see if any of our friends are watching, then moves in close to whisper in my ear, \"Fuck. You know where I live. Give me a 20 minute head start, then come to my place...\" I feel her hand cupping my crotch for a second before she breaks off and walks away. She turns around and points at me, \"All night, Jack. All night.\" Then I watch as she makes her way around the party saying her goodbyes. I immediately put down my drink since I definitely want to be as sober as possible for the rest of the evening, and start making the rounds myself. Holy shit. I couldn't believe that worked, and this was going to happen.\n\n*****\n\nI got to her place which was about 10 minutes away, but before I left the car, I caught a glimpse of a black tie I had forgotten in the backseat. Noticing that tie, I also noticed a small rope, pretty much thick twine that I used to tie the trunk down when I had something big in it. I remember thinking for a second, \"Something tells me I might want to bring those,\" and almost subconsciously picked the tie and rope up (only for kink purposes - I'm not a psychopath!), put them in my pocket and walked up to her apartment building door. \n\nI've been there one other time almost a year back for a party, but hadn't dreamt I'd ever be waiting outside, about to do what I was about to do (helpful explication: eating the beautiful ass of that party's hostess)! I buzzed her room. \"Yeah?\" Her voice was soft and sweet, and I could tell a little anxious. Good - that meant she hadn't changed her mind!\n\n\"It's me.\" I tried to keep my voice under control, but I'll admit, my heart was beating like a hammer.\n\n\"Get up here.\" The door buzzed, and I walked inside and up to the second floor. When I got to her door, it was already cracked open. Taking a deep breath, I pressed forward and moved inside.\n\nHer living room was lit up with candles, casting a soft, hazy light. She was a few feet away, arms at her side and looking at me. And she was fucking stunning... Same multicolored minidress from the party, but she added white thigh-high stockings to the look that made me CRAZY. And red pumps, just to complete the sex-kitten look that she wore so well, with her long dark hair, piercing eyes, and sexy tattoos.\n\n\"Hey again...\" she smirked as she watched me take her in.\n\n\"Hey. You look beautiful.\" I happened to glance past her for a second, and noticed to my surprise on her coffee table she appeared to have a few toys laid out beside a glass of wine: vibrator and a small glass butt plug! I shook my head in a daze, and she must've noticed the subtle movement and the direction of my glance because she grinned and closed the gap between us with a click, click, click of her steps. And there she was, in my arms and we just started going at it! My hands moved up and down her body, and in a few seconds, I was reaching behind her, pulling up her skirt, and exploring with my hands the area that I was planning to get a much better look at very soon...\n\nAfter a few minutes of making out in the candlelight, I pause for a second, lean into her ear, and whisper, \"I want to taste your ass now...\" I felt her entire body melt into mine as I said that and she moaned while pressing into me. I kissed and bit her neck lightly as she continued to groan with lust, completely giving herself over to me. It was perfect, and I could already feel the chemistry of the evening and how it would play out...\n\nI grabbed her lithe, grinding body firmly and held her close. Still kissing her neck, I reached one hand up to press gently against her neck while I let my other hand explore her body, moving from her ass to her inner thighs, up to her pussy, then up to each breast in turn while I gripped her jaw to tilt her head up and look into my eyes. Then I slowly walked behind her, one hand still on her neck, the other continuing a sensual journey around her erogenous zones. Her head was still tilted up, her mouth open as I stuck a finger in for her to suck on, and I whispered into her ear, \"Now close your eyes...\" I pulled my finger out as she just smiled, closed her eyes, and continued groaning as my other hand reached between her legs, up her skirt, and down her panties. She was soaking wet already - this is gonna be a long, awesome night! I played with her pussy for a few seconds before bringing my finger to my mouth to taste her juices. I made an exaggerated smacking sound as I sucked her flavor off of my finger so she could hear what I was doing. Then I reached into my pocket...\n\nThere was something about Paige - I'm not always this aggressive and controlling, but damn, something about how she responded to my touch made me completely lose my mind and sexually take over her body. She definitely felt the same vibe as me, because she was physically melting against me, non-verbally letting me know that she was all mine, and I could take control.\n\n\"Keep your eyes closed...\" I pulled my tie out from my pocket, and using it as a blindfold, wrapped it around her head, then moved to tie her hands behind her back with my rope. Paige was breathing heavily at this point, and when I cinched the rope around her wrists I could feel her body tense with anticipation. Fuck, this was going to be good. I reached down between her legs, and I could again feel her excitement as she gasped at my exploring fingers. I moved her forward to the couch as I kept my hands and body pressed against her. I peeled her skirt up to expose her gorgeous booty, outlined by a bright red thong that I was pleasantly surprised to see. Her white stockings contrast to her red thong and high heels made me think of Christmas for a second - fuck yes, this was the perfect Christmas present for me! I hope she was thinking the same thing...\n\nIt wasn't long before I had her on the couch, up on her knees, ass arched high in the air, and my hands spreading her ass wide, fingers pulling the thread of her thong out to the side, fully exposing her anus, in all it's ruby red, smooth, round glory. So fucking gorgeous. I took a mental picture and smiled in the knowledge of what I was about to do with this unbelievably sexy girl...\n\n\"Look at that asshole. You know what would make that asshole perfect?\"\n\nShe sighed in anticipation. \"What?\"\n\n\"My tongue going deep inside it...\" And without any other warning or foreplay, I spread her butt cheeks even wider and pushed my tongue hard up inside her asshole. Her head lifted up as she gasped loudly and clenched her ass, and I could feel her anus pinch my tongue slightly then very gradually relax as I left my tongue as deep as I could in her butthole. \n\nAfter several seconds, I pulled my tongue out and spanked her right ass cheek. \"You like that?\"\n\n\"Oh fuck yes.\"\n\n\"You like having my tongue up your ass?\"\n\n\"God it feels so good...\"\n\nI gripped her butt cheeks and spread them firmly apart, positioning my fingers around her anus to maximize the gaping. Paige was still a little tense, so probably without realizing, she was still clenching her pretty little starfish enough not to let it completely relax and really open up. I remember thinking to myself, \"no problem... we've got all the time in the world...\" I released my grip to let her cheeks clap together, then immediately spread them wider, \"Yeah? Then what do you want?\"\n\n\"I want your tongue in my ass...\"\n\n\"Like this?\" I shove my tongue back in her asshole as she squeals and arches her back. Her head was tilted back again, and I reached up and grabbed a fistful of her dark hair and pulled as I inserted my tongue even deeper in her butt.\n\n\"Ahhhh...\" she gasped. I released my grip on her hair, then pushed her upper body back down, all while my tongue was still fully extended up her ass. I pull out, then grip each ass cheek with my hands and spread her wide again, very slowly, watching her anus as it opens, a very small opening at first, and spread more and more to a slightly larger hole. There we go: now she gets it! Her first lesson in anal training... I am transfixed, staring at her asshole and how I'm opening it up, and she is frozen to the sensation. I slide my thumb along the slit of her pussy and confirm that she is VERY excited by this. Fuck, now we're getting somewhere! Finally, I can't wait any longer; I lean forward and just start fucking her ass with my tongue. Slow and gentle at first, but as I increase my speed, she is obviously turned on by my rougher thrusts, so I start going faster and harder and harder and harder, until I'm just slamming my face into her ass with my stiff tongue digging deep inside her butthole with each thrust. The slapping noise of my face against her ass flesh is driving both of us crazy, especially Paige.\n\n\"Oh... god...\" Paige's voice is shaking and she's literally whimpering with each push of my tongue.\n\nI spare a second to talk. \"Fuck you love this, don't you? You're my fucking slut tonight, alright?\"\n\n\"Okay... mmph...mmmmph,\" she grunted as she continued to take my tongue deep in her ass. What a fucking turn-on. I am honestly never more happy than when I have a hot girl's asshole in my mouth. I was a very happy man that night...\n\nThe room was completely quiet for a moment that accentuated the incredibly sexy sounds that soon filled the air - her heavy, then quick, then deep and rhythmic breathing, accompanying the smacking, sucking, wet sounds of me eating her ass completely and thoroughly. I'm perfectly tuned into the noises we are making together, and I can tell by how wet Paige is that she is even more turned on if that was even possible! At some point, after a particularly deep thrust of my tongue inside her anal canal, I remember holding my tongue deep up her asshole, nose breathing in deep in the crack of her ass, and opening my eyes wide to look up past her butt cheeks and tattoos on her back and seeing her head tilted up, catching a glimpse of a smile, and thinking \"Fucking unbelievable. I am up Paige's ass right now...\" I was relishing the moment; stopping to smell the rosebud, so to speak. \n\nFinally, I release my pressure and pull my face from her delicious butt. \"Stand up,\" I command, and she obediently gets off her knees (I notice her legs are still shaking a little) and stands straight up. I untie her hands.\n\n\"How did you like that?\"\n\n\"I loved that, Sir.\" Ah. I see. She's setting the terms of this encounter tonight, and making it official - Paige wants me to dominate her while devouring her ass, and I couldn't think of anything I'd rather be doing.\n\n\"Of course you did. But you still have your clothes on... Take them off.\" I moved behind her to unzip her dress, but she did the rest as seductively as possible, pulling it down and stepping out, then removing her sexy lace red bra, showing me two incredible tits and a few tattoos I didn't know she had... Finally, she confidently turned her back to me, and bent over as she slowly pulled down her panties and kicked them off to the side. She moved back into a standing position where she spread her asscheeks wide before slapping them together for me. Quite a performance, and I couldn't help but smile. Of course, my dick was already rock hard at this point, but I couldn't let that get in the way.\n\nI stepped to the corner of her room where she has a chair and computer desk set up. Grabbing the chair, I pull it back to Paige with a bang so she knows it's there. \"Straddle the chair.\" She gets it immediately, and after a little blind fumbling to find the chair, soon has her ass perched along the front of it while she faces the back of the seat. As she's waiting, Paige smiles widely and her blindfold comes down a bit. I move quickly to readjust the blindfold, and then firmly take her wrists around the chair back to tie them together again behind the seat, in front of her. Then more for aesthetics than functionality, I use her panties to tie one ankle to the leg of the chair, and her bra to tie the other ankle. She giggles, and I spank her. As she gasps, I lightly trace my finger all the way up from her pussy, up her ass crack, then further along the arch of her back. She sighs and relaxes. \"Keep your back arched, like this. No matter what I do, I want your ass out like this.\"\n\n\"Okay...\" I spank her again, and she flinches, but keeps her ass pushed back.\n\nI sit down behind her, positioning my face right in front of her beautiful tight ass. \"You are my plaything. Do you trust me?\"\n\n\"Yes, Sir.\"\n\n\"Good. Now I want you to gape your asshole for me.\"\n\n\"Okay. Like this?\" Her asshole is literally an inch from my eyes as I get in close, and I see her anus clench, then open a tiny bit.\n\n\"Not bad, but I'm going to help you this time.\" Of course I couldn't help myself, I pressed my tongue lightly against her slightly gaping hole to get a good feel, then I slide my tongue hard up her butt, deep, she moans, then deeper as I feel her anal muscles relaxing a little bit around the thrust of my tongue.\n\n\"Aaaahhhhhhhhhh, fuuuuuuuuuck that's deeeeeeep. Your tongue feels so deep in my ass, Jack. God I love that... Sir.\"\n\nI pull out then drag my tongue along the length of her pussy and taste her wetness, smiling to myself. \"I know you do, baby. Now try to sit still...\" I spread her cheeks wide again, pushing them up and out, and watch her asshole open a bit just before I re-insert my tongue and circle it along the inside of her rim, firmly and slowly. Paige moans a bit, and I can feel her anticipation. After a few more traces along the perfect 'O' of her anus, I slide my tongue deep and strong inside. She gasps, and I keep going. In and out, in and out, in and out, I'm keeping my tongue hard and stiff, and listening to her whimpers of approval.\n\n\"Mmmmm, yes, more, keep going, keep going. Please, please, please...\"\n\n\"Is this the kind of making out you had in mind?\"\n\n\"It is now, Sir. Please, keep going.\"\n\n\"I will do what I want. And right now I want to really make out with your butthole like I promised.\"\n\n\"Ohhhh god...\"\n\n\"Do you want that?\"\n\n\"Yes, Sir. Please make out with my butthole.\"\n\n\"Do you think I keep my promises?\"\n\n\"Yes, Sir. Of course, Sir.\" There was no trace of irony or faux-seriousness in her voice, only earnestness and desire. Gone was the snarky girl I had been talking to at the party - here was only submission and lust. I liked this side of her...\n\nThis whole time I was watching her little asshole twitching with desire, and her subtly raising her ass towards my face. I spanked her three times, sharp and hard, on each cheek. She yelped in surprise and delight.\n\n\"I said don't move! Are you such a horny slut that you can't keep trying to shove your ass in my face?\"\n\n\"I'm sorry, Sir. I just want it sooooo bad...\"\n\n\"You're a bad girl, then.\"",
        "\"Yes, I am, Sir.\"\n\n\"Thank you for being honest. Now gape your fucking asshole while I make out with it.\"\n\nI immediately seal my lips around her anus and make mouthing, deep kissing motions over it as my tongue darts and slides and probes and explores. The deepest, longest french kiss imaginable, and I'm giving it to her butthole! I'm sucking and moaning and licking; predictably, after only a few seconds, Paige can't help herself, and begins a long slow grind against my mouth. I grab her hips like I would grab the back of her head if we were kissing to control the motion and hold her close. Both of us are moaning with desire as my lips massage her asshole while my tongue easily slides in and swirls around, tasting deep inside her anal canal and teasing all of the nerve endings spread throughout her sweet little starfruit. We are \"making out\" like this for what seems like forever in the best way possible, but I finally break away with both of us panting for breath. \n\nBut I'm not done yet.\n\nI move to the coffee table, grab the buttplug and return to kneel behind Paige. She's still breathing heavily, but laughs in nervous anticipation. Before she can totally tell what's going on, I slide it slowly up her ass. \n\n\"Good girl.\" I admire the site and honestly praise her composure. She barely even flinched! I lightly trace my hands and fingertips along her asscheeks, pussy, then along her thighs and back up her back. Paige tenses for a bit then sits still as she waits for whatever's next. I smile as I stand up and look down at this hot woman, tied to a chair, begging to be my fucktoy, breathing hard as I move to her front and without a word, grab the back of her head as I slide my dick into her gasping mouth.\n\n\"Mnnmmm, mmmmmnnnnnn,\" she murmurs as my dick glides in, now slightly gagging her towards the back of her throat. I start pumping, going slowly, and a little deeper with each thrust as her throat adjusts, and soon I am face fucking her hard as her breathing becomes ragged and gasping. And she is moaning and humming on my dick the entire time, totally getting off on submitting to my desires.\n\nAs I'm thrusting into her mouth, I reach behind her to play with her butt plug, sliding it in and out of her asshole in time with her sucking. We get a good rhythm going and she is enthusiastically taking my dick deep for several minutes before her gag reflex forces her to cough and take a break. That's fine with me: without a word, I move back behind her, pull the butt plug out of her ass and suck on it like the delicious lolipop it is. I push it back in, pull it out, suck on it; push it in, pull it out, suck on it. Finally, I set it aside, and force Paige to stand up, still tied to the chair by her ankles and hands, so her legs are straight and in a spread stance, but she is bent forward. I kneel behind her as I can hear her still trying to catch her breath in nervous, excited gasps, and of course, I spread her ass cheeks hard to open her anus, then sloooooowly slide my tongue inside her warm butthole. And this time, I mean slowly. I release my grip from her asscheeks and her cheeks bounce against my face, then I move my hands to her hips to fully control the motion as I insert my tongue centimeter by centimeter into her rectum, finally pulling her hips back towards my face as I reach full extension with my tongue, and my open mouth is pressed as firmly as possible against the rim of her anus. She's letting out a low, wordless moan through the entire thrust. And I hold my tongue inside of her. It's hard for me to breathe, with my nose pressed in her asscrack, but I just hold my tongue up her butthole, while I feel the aching stretch of my mouth muscles, and the transition from clenching to complete relaxation of her anal ring and deeper... \n\n\"Oh my god. You are tongue deep in my asshole... That's soooooo amazing. I can't believe you're tongue deep... You are sooooo good at this.\" Her legs are starting to shake a bit again, probably from the combination of pleasure and strain of the position. But she is zoned out, just in bliss from the feeling, and I can feel her wetness and heat on my chin. Finally, I start to wiggle my extended tongue up and down, then around in a circle, still as far into her anal cavity as I can possibly reach, and just as slowly, I begin withdrawing my tongue. Now I can feel her anus pinch my tongue as if she's asking me to stay. Before I completely remove my tongue, I slowly push it back up her butt, again, as far as it can go. I can hear the smile on Paige's face as she whispers, \"Yes...\" then slowly out, slowly in, out, in, out, in, out, in, now picking up some speed, out, in, out, in, out, in, picking up more speed, out, in, out, in, out, in, her ass cheeks are slapping against my face and now I'm fucking her ass hard with my tongue, out, in, out, in, out, in, out, in, then with a long, hard suck on her asshole, I pull my tongue out with a hot, wet sound, and watch her gaping, glistening anus slowly close as Paige's cries of lust calm down and she begins sliding her ass up and down in the air, looking for my face to rub against, as she's murmuring, \"Oh god, oh god, yes yes yes yes yes, oh god, yes...\" \n\nLooking at my work, I smile, and finally lean forward to give her something to grind against. She slides her asscrack up and down my face, lazily at first, then with more purpose, while I let her do the work and occasionally stick out my tongue to taste her sweet butthole, and on long grinds, the heavy wetness of her pussy juices. I keep my face between her butt cheeks while she rubs herself against my mouth, and untie her legs from the chair. This gives her legs more freedom of movement, and she repositions her feet and together we easily grind her off to a hard, shuddering orgasm. But as she's coming down from this one, I keep my face in her ass and continue licking, kissing, and sucking until she's worked up again. She starts grinding faster and faster once more.\n\n\"Are you gonna cum again?\"\n\n\"Oh yes, Sir, yes I'm gonna cum right now...\"\n\n\"Beg me.\"\n\n\"Please, Sir. Please can I cum?\"\n\nI pull out and spank her several times on each cheek while I command, \"Not. <smack> Fucking. <smack> Yet. <smack>\" Then I kiss and lick up and down the crack of her ass, down to her thighs, then back up. Her pussy is soooo fucking wet right now. I can't help but smile. Paige is thrusting her ass and pussy back at me, trying to find purchase. I move to the front of the chair and untie her hands. I take off her blindfold and she has an enormous Cheshire cat smile as she looks hard at me, shaking her head, but then closes her eyes to plead, \"Please. Please make me cum again with your tongue. I want it so bad.\"\n\nI smile. \"Please, what?\"\n\nPaige opens her eyes again, smiles, and returns to form. \"Please, Sir. Please eat me until I cum again.\"\n\n\"Where do you want my tongue?\"\n\n\"Everywhere, Sir.\"\n\n\"In your asshole?\"\n\n\"Of course, Sir.\"\n\n\"In your pussy?\"\n\n\"Yes, please, Sir.\"\n\nAs much as I'm loving this, I can't take it anymore. I move her to the couch, push her down so she's leaning over the back with her ass up doggystyle towards me. I kneel down, and again marvel at her perfect, tight body, and that gorgeous, round ass pointed right at my face. Let's do this. Without another word, I spread her asscheeks wide, take a long lick from her clit to her asshole, take another one, then another. Then I start dipping my tongue deep into her pussy, then into her now slightly gaping asshole, thrust, thrust, switch, thrust, thrust, switch, back and forth, back and forth.\n\n\"Oh fuck, I love that. Tongue fuck my pussy and ass, just like that...\"\n\nI'm so into it by now, deep into the rhythm, that I don't even bother disciplining her for giving me an instruction. Just a light slap on her cheek and I continue tonguing her out, pussy and butthole. I pull my tongue up as I'm pulling out on several of the thrusts to get a nice popping sound that really turns me on, and finally I press my mouth firmly against her pussy as I suck and slurp and lap at her clit as she's in the throes of another orgasmic crescendo.\n\n\"Oh, oh oh ohohohohohoh, uh uh uh uhhhhhh,\" Paige is pushing back on my mouth grinding her pussy up and down against me. I give a long, slurping suck, then quickly pull back.\n\n\"Not yet, babe.\" I smack her ass, as she gasps and moans in lust and frustration. I reposition myself by pushing her upper body down so she's no longer leaning against the back of the couch, instead on her hands and knees lengthwise, and I stand over her back, then kneel, facing her ass, so that my lower body is pinning her upper body down, and her ass is still kneeling straight up into my face. Perfect for deep thrusting.\n\n\"Spread your ass.\"\n\nPaige just moans and her hands are there, spreading. I reach one hand underneath her body so I can play with her pussy while I do the rest of my work, and spread her wider with my other hand. Her asshole is gaping again nicely at this point, and there is practically no resistance at all as I go tongue deep once again into her asshole from above. Literally, the entire length of my tongue is up this hot chick's ass, once again - in my mind, for a split second I remember thinking again how amazing this experience was, and how sexy it was that I was doing this with fucking Paige! Then I fucked her ass long and hard with my tongue while I rubbed her clit and fingered her to another soaking orgasm. She might have mumbled something about permission to cum, but I didn't bother responding, and she just came while her body shook and convulsed. I've gotta admit - it was a really nice orgasm... As she was recuperating from that momentary loss of control, I slid off her back then moved off the couch and positioned her on the edge so I could kneel down between her legs and drink her pussy juices from the source. I noticed Paige was practically paralyzed with the sensations, still kneeling where I moved her like a doll and barely moving, so I took it easy and let her relax against my face and finally my body as I stood up and wrapped her from behind in my arms, kissing her neck and back, and squeezing her amazing tits that didn't get nearly enough attention. Soon we were face to face, kissing gently and deeply, tangled together on the couch. She felt so soft and smooth, and smelled so sweet...\n\nBut then she surprised me. \"I can't believe that, Jack. That was sooooooo fucking sexy. I've never cum like that before...Thank you.\"\n\n\"That was awesome, Paige. I love how you taste.\"\n\n\"Mmmmm, I just want to do something for you, make you feel like you made me feel.\"\n\n\"Believe me, that was as good for me as it was for you.\"\n\n\"Fine, but give me something else to remember you by. I want you to fuck me hard, and cum in my mouth...\"\n\n\"You do?\" My dick was immediately at attention.\n\n\"Yesssss.\"\n\n\"Ask nicely.\"\n\nPaige locked my eyes with hers, smiled fiendishly and said in her best, pleading voice, \"Pleeeeeease, Sir, fuck me hard and cum in my mouth.\"\n\nWell she asked me so nicely... I grabbed her hips and rolled her onto her stomach, then pulled her to her knees as I positioned myself behind her. I spread her gorgeous ass cheeks again, and being me, couldn't help but lean my face forward to slide my tongue in and out of her slightly gaped anus a few times as she gasped. I forced myself to pull back, then slapped my cock against her shiny, wet asshole, making a hot \"pop\" sound with each slap.\n\n\"Is this what you want? You want my dick now?\"\n\n\"Yeah...\"\n\nI pushed her lower back down, emphasizing the arch of her back and lewdly pointing her ass up at me as I slowly inserted my dick into her soaking pussy. Feeling the warmth of her pussy engulfing my cock as I pounded her over and over and over again. I fucked her from behind for a long time, then had her ride me cowgirl style as I played with her nipples, sucked her tits, and leaned up to kiss her as she bounced. Finally, I had her on the floor, leaning on the couch and fucked her doggystyle again. Just as I was about to cum I pulled out.\n\n\"Come here,\" I reached over, grabbed her by the back of the head, and had her take my dick in her mouth. She grunted at first, but quickly recovered, using her hand on my shaft and sucking with passion. After only a few more minutes I pulled out.\n\n\"Stick out your tongue.\" Paige opened her mouth and looked up at me expectantly. That sight was so hot; I easily came right into her open mouth, and she eagerly ate it all, and sucked my dick until she coaxed every last drop out.\n\nI was totally spent, and we both got up and collapsed on the couch. I looked at her coffee table and the unused vibrator and laughed, \"Guess we'll save that for next time.\"\n\nPaige followed my eyes and laughed, too, \"Who needs toys when I have your tongue, baby.\"\n\nWe curled together on the couch for awhile, just breathing, and Paige occassionally smiling and laughing to herself.\n\n\"What's so funny?\"\n\n\"Not funny. I'm just so happy. That was incredible. Seriously, Jack, that was just like, the best.\"\n\n\"You are so fucking hot, Paige. I love that you feel that way.\"\n\n\"Are you kidding me? I could do that every day. Every single day. Why haven't we hooked up before tonight?\"\n\nI laugh, \"That's all on you, babe. You could've had me at any moment.\"\n\nShe smiles, \"Wish I would've known that. But to be fair, I didn't know you had THAT in you.\"\n\n\"Hahaha. Fair enough. But now you know...\"\n\n\"Yeah. Now I know.\"\n\nWe talk for a bit and embrace before I have to go. As I gather my things and get ready to leave, Paige grabs my arm, and looks into my face, earnestly, \"Come over again soon, OK?\"\n\nWith a little smirk, I can't resist.\n\n\"Ask nicely...\""
    ],
    "authorname": "JackTheRimmer",
    "tags": [
        "rimming",
        "worship",
        "licking",
        "eating",
        "dom",
        "rimjob",
        "analingus",
        "ass",
        "ass eating",
        "ass licking"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/dominant-ass-eating"
}