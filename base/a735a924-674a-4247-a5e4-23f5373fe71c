{
    "title": "The Big C",
    "pages": [
        "Hi and thanks for selecting my story. \n\nIt's one I started eighteen months ago but after creating the premise I couldn't work out where I wanted to take it. I put it on the back burner and went on with another. Re reading it a couple of weeks ago, the last line came to me. With the end point set the rest fell into place.\n\nI should warn you it covers some heavy emotional territory so if you want light and funny then this isn't for you. Also as always with my stories it may challenge some of your ideas on relationships.\n\nThanks to vr snow for the editing, it was a pleasure to work with you. \n\nHope you enjoy.\n\nCharlieB4\n\n*****\n\nWe met in the oncologist's office, we both got our bad news on the same day. I had been a regular visitor to this office over the last ten years. My wife had bravely fought breast cancer until it beat her last year. I thought I wouldn't be back here, but in the shower a month ago I noticed one of my testicles was swollen and sore.\n\nMy doctor ordered scans during a visit and today I was awaiting the results in the office of the visiting oncologists. Jack sat there also, his wife by his side holding his hand. They both looked tired, anxious, and scared. No doubt, I exhibited the same emotions. We struck up a conversation across the room, talking about the weather and sports news. Anything to take our minds off the results of our tests. \n\nThey both looked younger than my forty seven years. I would find out later Jack was forty while Sandy, his wife, was thirty six. Dr Green opening her door halted our exercise in distraction. \n\n\"Alan, your turn.\" She said.\n\nDr. Green was old school, no fluff or padding. A straight shooter almost to the point of rudeness. Her manner had been a shock when we had first met ten years ago, but now I knew what to expect. No nonsense, no sugar coating, the facts, just the facts. She was a grey haired lady of I guessed around fifty five and she hadn't changed in the ten years I had known her. I suspected she had been born a grey haired old lady.\n\nI got up and entered her office. She closed the door behind me, then went to the other side of her desk. \n\n\"Right Alan, I have been over your ultrasound scans and your blood test. I strongly suspect testicular cancer.\" \n\nThere it was, the old enemy was back at the gates. Giving me little time to digest her statement, Dr Green ploughed on.\n\n\"I want you to have a chest x-ray and CT scans of the abdomen and pelvis to see if it as spread to the lymph nodes or internal organs.\" She paused and looked up from the reports she had open in front of her. \"And we are going to have to remove your left testicle as soon as possible!\"\n\n\"Don't you want to do a biopsy?\" I asked crossing my legs.\n\n\"Sorry Alan, the only way to know for sure, is to take it out and cut it open. If we take a biopsy of the lump while it's still in situ then we risk the cancer spreading.\"\n\n\"Okay, I guess it has to go. What's the rest of the battle plan?\"\n\n\"That's about it, I'll contact the surgeon I use here and organize to get it done ASAP.\" As she spoke, she tapped away on her laptop, then spun around grabbing two sheets of paper that came out of a printer. \"Take these to a radiology centre and get the scans and x rays as soon as you can. I'd like to get the results before your surgery. Any more questions?\" Dr Green asked as she closed my file and placed it in her out tray.\n\n\"What's the prognosis for testicular cancer?\"\n\n\"With removal of the testicle ninety five percent of men live normal lives. If it has moved into other parts of the body then that drops to eighty five percent after radiotherapy and chemo. However this is generally a young man's cancer, most cases involve men under twenty five so given your age I would say you have about eighty five percent if it hasn't spread.\" She had stood up and was standing beside the door waiting for me to make a move so she could open it and shunt me out.\n\nI could see she'd dismissed me so I went out into the waiting room.\n\n\"Jack Knox?\" Dr Green called and Jack and Sandy rose from their seats and followed the doctor inside.\n\nI'm not sure why, maybe it was the look of bewilderment on both their faces, but rather than leave after paying the receptionist I sat back down. I just thought, knowing Dr Green's abrupt manner, they might appreciate a chat with somebody who has been through some of it before.\n\nI thought they looked bewildered when they went in but on the way out, they were worse. Sandy fought back tears and Jack's jaw clenched so hard the muscles stood out on the sides of his face. Dr Green called the next patient inside, then disappeared again. I stood and went to the reception desk where the Knox's where settling their bill. I stayed out of their way and once they had finished I stepped towards them.\n\n\"Jack? Sandy? Would you like to go and have a coffee?\" I asked solemnly.\n\nThey looked uncertain so I added, \"I lost my wife to breast cancer last year after a ten year fight so I've lived through this before.\"\n\nThey looked at each other then back to me, \"sounds good Allan, lead the way.\" Jack said.\n\nWe walked out and down the street to a cafe I had frequented with my wife in previous years. The owner gave me a friendly wave from behind the coffee machine.\n\n\"Flat white, Allan?\" He asked.\n\n\"Thanks Jeremy, this is Jack and Sandy Knox.\" I pointed to the unhappy couple.\n\nHe took their orders and we sat down. As you would expect we shared a disjointed conversation, until one hour before we had been strangers. I gave them my brief life story and found out in return that Jack was a builder and Sandy was a physiotherapist. They lived about one hour away from me in a small town in which they had grown up. I showed pictures of my son, who worked in Dubai, and my daughter, who lived on the other side of Australia in Margaret River. She ran a surf shop with her partner. Jack and Sandy didn't have any children.\n\n\"We weren't able to have any.\" Sandy said sadly.\n\n\"Not for want of trying though!\" Jack added.\n\nWishing I'd never brought that topic up I moved onto Dr Green. I explained that despite her abrupt manner, she was a very good doctor and really helped my wife prolong her life after a very bad initial prognosis. Jack and Sandy exchanged looks and Sandy seemed on the verge of tears again.\n\n\"She was just so rude. Scolding us both for not noticing the changes sooner and saying we may have left it too late!\" She sniffed.\n\n\"That's Dr Green, um, if you don't mind me asking...what's your problem?\" Appalled at my tactless question I quickly added, \"I have testicular cancer...\"\n\nJack sat up and squared his shoulders before answering, \"Melanoma,\" he said quietly.\n\n\"He has had a mole on his lower back forever. We just never thought...\" Sandy stopped mid-sentence and blew her nose. \"It used to get red and irritated sometimes but we just thought it was his pants rubbing it.\"\n\n\"What did Dr Green say?\" I asked knowing that melanoma can be tricky.\n\n\"Surgery. They will remove it and see how deep it goes. If it's deeper than 1 mm then they will take surrounding tissue and nearby lymph nodes for biopsy.\" Jack replied solemnly, \"Looking at it, Dr Green thinks it may be stage two already so that's not good.\" He bowed his head and Sandy placed her hand on his.\n\nA waiter arrived with our orders which was a welcome distraction. After we had tried our coffee, Sandy turned in her chair towards me and fixed me with a steely stare.\n\n\"Allan, how did you and your wife cope when you first found out?\"\n\n\"Much the same as you two. That's why I hung around. You reminded me of me ten years ago. There is so much to take in and it's easy to become overwhelmed by it all.\" \n\n\"So what did you do?\" Sandy pressed.\n\nI stopped and thought for a moment, sipping my coffee. \"I guess we were just swept up in it. You will find the same thing, first surgery, then chemo or radiotherapy. I don't think we really stopped and thought about it. We just did whatever they told us to do. It's like a numbness that takes over your life, you don't want to stop and think...and feel too much.\"\n\n\"Is that a recommendation?\" Jack inquired seriously.\n\n\"No...no, I don't think so. If I had to go through it again, I think I would go and see somebody. You know a psychologist or someone like that, just a person removed from the altered reality that we existed in. To give another perspective.\"\n\n\"Are you going to see someone this time?\"\n\nI looked at her puzzled for a moment until I remembered that I'd been diagnosed with cancer too. \n\n\"Ah, yes...I suppose I will. Do you want to know something funny? Talking to you just now I forgot all about my own diagnosis,\" I confessed.\n\nI started giggling. The more I tried to stop the worse it got, until I was into a full-blown belly laugh. It was infectious, as first Sandy and then Jack joined in. What I had said wasn't very funny at all but the absurdity of life's situations overwhelmed the three of us for a few minutes.\n\nAs we calmed down and stepped back from the brink of madness, Jack consulted his watch.\n\n\"We best be going Sandy,\" he said to his wife then he turned to me. \"We have a dog to pick up at the vet's.\" He added by way of explanation.\n\n\"No worries, I should go and get my scans and x rays organized anyway.\" \n\nWe all got up and went to pay at the counter. While we were standing waiting for our change Sandy put her hand on my shoulder.\n\n\"Thanks for staying back Allan. Do you think it would be okay if we stayed in touch?\"\n\n\"Yes, I'd like to do that if it will help.\"\n\n\"What's your number?\" She asked, pulling her mobile phone out of her bag.\n\nShe typed it in as I dictated it and then hit send, my phone buzzed in my pocket then she disconnected.\n\n\"There you go, now you have my number a well!\" She said with a smile.\n\nWe all shook hands then went our separate ways, but we remained in touch. We spoke at least once a week as we negotiated the initial rush of surgery and further testing. For me, lady luck was smiling. The surgery went well. The results from the pathologist's examination of my left testicle suggested it had not yet spread. After consulting again with Dr Green, we decided to have one round of chemotherapy. In case there were cancerous cells loose in my system, Dr Green recommended chemotherapy with a drug that was very effective against testicular cancer, just to be sure. \n\nUnfortunately Jack's news wasn't as good. The surgical team that removed the melanoma found it had rooted into the muscle below the skin. They took lymph nodes from various parts of his body, his groin, armpit, neck only to discover cancerous cells in most of them. Dr Green passed him on to a different oncologist who specialized in melanoma. He put Jack straight onto a heavy schedule of chemotherapy, which made him very sick. Then more bad news. The new doctor ordered a full body scan and they found two small secondary tumors.\n\nThey were located on the spine. Initially they used radiation to shrink them, then more surgery to remove them. All of this occurred in nine months. By the end of it, Jack had been reduced to a shell of the man I met that first day. His muscles wasted away, his face gaunt and his eyes sunken back into their sockets. Sandy fared no better. The worry and strain had sapped the vibrant woman I had met in Dr Green's office. Through it all, they had shown tremendous fighting spirit. I tried to help when I could. \n\nAfter I had recovered from my chemotherapy, I worked four days a week and I would drive to see them on weekends. Jack had loved fishing, so I would take him down to the river and launch his little tinny. We would float down the river, sometimes talking, sometimes in silence. I don't actually think we caught a fish the whole time, but it was good for both of us to get out and it also gave Sandy a break.\n\nI was at work twelve months after that first meeting at Dr Green's office when my mobile buzzed. Sandy's name flashed on the screen and my heart went into my mouth. Oh no, what has happened now? I thought. I answered my phone and my fears washed away with one word from Sandy.\n\n\"Remission!\"\n\n\"Wow! That's fantastic! When did you find out?\"\n\n\"Five minutes ago, we just left Dr Ryback's office. He had the results from a week of testing and it was all clear!\" She gushed.\n\nTears welled in my eyes, . I was so glad for them both. It had been a long hard fight, but they had stuck at it. Remission wasn't the same as cure but after the setbacks of the last twelve months, it was all they were hoping for.\n\n\"How's Jack?\" I asked stupidly.\n\n\"I'll put him on and he can tell you himself!\" Sandy replied and there were sounds of the phone being passed to Jack.\n\n\"Alan.\"\n\n\"Mate! Fantastic news! I knew you could beat it!\"\n\n\"We couldn't have done it without you, mate. We can never repay you,\" Jack stopped, the emotion was getting too much. \"Fuck! I'm blubbering like a baby! I've got to get off here, Allan. Could you come over on the weekend? Sandy and I are having a get together of close friends and we would like you there.\"\n\n\"Tell me a time and I'll be there\" I replied earnestly wiping my own tears from my eyes.\n\nThere was silence and then Sandy voice returned, \"I'll let you know when Allen. We are staying in Sydney another night, then we'll come home.\"\n\nWe said our goodbyes and finished the call. I sat at my desk with a big grin on my face and tears dripping onto the pages below. Others in the office looked at me strangely but I couldn't have care less.\n\nOn Saturday night I knocked on their door, with a six pack of Jack's favorite beer and a bottle of bubbly for Sandy. Jack greeted me at the door and we embraced. I handed him the beer and he shook his head. \n\n\"You sure know how to tempt a guy, but I've given up all my vices. Well except one, Sandy wouldn't let me give that up. No more beer, fatty foods, sugar, meat...I'm going to do whatever it takes to stay healthy.\"\n\n\"Good on you!\" I replied with false enthusiasm. Unfortunately I had seen this before, lived through it. \n\nMy wife and I had done the same, convinced that cancer had come from the environment and not from us. We became \"born again\" vegans, evangelizing to all our friends about the benefits of it and the evils of eating meat and any food not grown naturally. We attributed my wife's remission to it, but then it came back. We stayed true to it until Dr Green gave us THE talk. It's time to get your affairs in order, she had said.\n\nAfter that, it didn't seem to matter. I went shopping the next day and I bought a big tub of ice cream, two thick juicy steaks, a carton of beer, and a case of wine. My wife gave me a knowing smile when she watched me bringing my purchases in. For the last four weeks that she was able to live at home we ate like kings, well, kings on a budget.\n\nSandy bought me out of my melancholy state with a slap on the behind.\n\n\"Naughty boy bringing temptation into our house.\" We hugged. They were so animated, alive. Dear god, I hoped it lasts.\n\nI sat down with eight of their other friends, to a lentil casserole and a chickpea salad. There was lots of laughing and everybody got on well. I was the last to leave standing at the front door with Jack and I asked him what he was going to do next.\n\n\"Get strong and get back to work!\" was his emphatic reply.\n\n\"Don't rush it mate, take the time to smell the roses,\" I cautioned.\n\n\"I'm going to beat this thing Alan, I've got it on the run and soon I'm going to kick its arse!\"\n\n\"Good on you,\" I said warmly shaking his hand, Sandy called out a farewell from the kitchen as I walked out the door.\n\nI didn't see much of Jack and Sandy for the next twelve months. I spoke to them regularly by phone as they updated me on their progress, but our paths rarely crossed. Jack did two months of intensive physiotherapy to get his strength back. Then he was back at work. In his down time he studied, meditation, yoga, and went through a re-birthing ceremony at a commune on the north coast. \n\nEach time I spoke to them, he had read another book from a cancer survivor who told how they beat it. If positive thinking could beat it, then Jack had no worries. However I was worried. Remission just meant the cancer was waiting. I had seen it before, experienced it. Sure, some people go from remission to being cancer free, but it's not a big percentage. When it comes back, it can hit very hard, not just physically, but mentally.\n\nLater that year, I began to think that Jack may be one of the lucky ones. We never discussed his doctor visits, too much negative energy. So I didn't have their side of the story. The call came when I was bringing the bins back in after collection. It was Sandy.\n\n\"Alan...\" she sounded worried, even frightened, \"could you come? please?\" The fragility in her voice scared me. \n\n\"Sure, what are you doing tomorrow?\" I asked.\n\n\"No, no. I mean now please, right now,\" she pleaded.\n\n\"I'll be there as fast as the speed limits allow.\" I was already heading into my house to change.\n\n\"Thanks,\" she said before putting the phone down.\n\nI hustled over as fast as possible. As I pulled into the driveway the front door opened and a distressed Sandy rushed over. As I got out, I could see she had been crying. I moved to comfort her, but she stopped me and then pointed to the house.\n\n\"He's in the courtyard off the kitchen. Please, you have to talk to him.\" \n\nI went inside and made my way to the kitchen, looking through the large glass doors that led to the courtyard. I could see Jack. He appeared to be naked, laying back in a chair in the blazing sun. As I watched he picked up a beer bottle that was beside the chair. On finding it empty, he threw it, smashing it against a nearby wall. From the pile of glass there, it wasn't the first. He reached into an ice bin next to the chair and brought out a fresh one. With some trepidation, I opened the door and entered the courtyard.\n\n\"Sandy, I'm going to need another six pack,\" he slurred.\n\nI moved and got a look at him front on. At least he was wearing speedos, \"hi Jack.\"\n\n\"Alan, come to gloat have you?\" \n\n\"No, Sandy rang. You're scaring her Jack!\" His skin was a fiery red. Trying to keep things lighthearted, I said, \"Come inside you look like done on that side.\" \n\n\"Fuck off, I don't want your pity. The sun started this, so it can fucking well finish it.\"\n\n\"So it's back then,\" I said quietly.\n\n\"Of course, it's fucking back! All that fucking clean living for nothing.\"\n\n\"What did the doctor say?\"\n\n\"Who cares? I'm fucked.\" He took a large pull on the beer in his hand. \n\nIt was worse than I feared. Jack had hit rock bottom and busted through into a very dark place. I was lost as to how to help. Part of me wanted to drive back home and hide. His pain brought back memories of my wife's reaction and my inability to deal with her final diagnosis.\n\nI resisted my urge to hide and sat in a chair beside Jack, but opposite the pile of glass. I sat without speaking, staring straight ahead. Jack drank steadily. Another crash signaled the end of another beer. He reached into the ice and retrieved two more. After removing the lids, he passed one to me.\n\n\"If you're not going to piss off, then you might as well drink with me.\"\n\nWe sat outside drinking in the midday sun until the ice bin was empty. After being on the wagon for twelve months the mornings drinking had significantly hampered Jack's coordination. He called for Sandy to get more beer, but when she didn't he tried to stand up. He got three quarters of the way up, before stumbling into my lap. Seeing this as a chance to get him inside, I helped him with my arm supporting under his armpits. We walked inside together.\n\nOnce inside I sat him in an armchair, telling him that I would get him another drink. I went into the kitchen and banged around a bit. Then I stopped and sat on a stool at the breakfast bar. Jack didn't yell to see what I was doing, so I sat quietly for five minutes before venturing back to where he was. He was sound asleep.",
        "I went looking for Sandy. In the backyard she sat on a bench made from an old wooden railway sleeper in the shade of a tree. She held her head in her hands. I walked up behind her, calling to her as I approached so I didn't surprise her. She straightened and wiped her eyes before turning around to face me.\n\n\"How is he?\" she asked sniffling.\n\n\"He's asleep in his armchair,\" I said sitting beside her.\n\n\"Thank god.\" Her head slumped into her hands again.\n\n\"When did you see the doctor?\"\n\n\"Yesterday, it was horrible! We weren't expecting the bad news. We were planning a trip to an ashram in India.\"\n\n\"How bad?\" I asked with trepidation.\n\n\"Six months left, there were two new small tumors on his liver and bowel with another bigger one on his spine. They said they could operate on the liver and bowel, but the one on the spine was inoperable.\"\n\n\"Shit!\"\n\nWe sat in silence,. Sandy started weeping again, so I put my arm around her shoulders. When she calmed down, I asked another question.\n\n\"What was the doctor's plan of attack.\"\n\n\"We didn't get to that. Jack just freaked and stormed out. I caught up with him in the car park. We went to the supermarket and he went berserk buying alcohol, meat, chips, crackers, cheese, and everything we had avoided for twelve months.\n\nWe gorged ourselves last night. I woke up with a hangover and when I came out mid-morning he was outside in the sun drinking. He wouldn't listen to reason and that's when I rang you.\"\n\nShe blew her nose loudly.\n\n\"Thank god you came...I didn't know what to do.\" \n\n\"I didn't either Sandy. I just winged it. I've seen it before, but every situation is different.\"\n\n\"What do we do now?\" \n\n\"We act normal, wait until he comes around, and see if his mood has changed. No matter what, we support him. If he wants to drink himself into oblivion, then I don't see why we should stop him. He has to decide himself, the same with the doctor. We can counsel, but in the end it's his decision.\n\nWe stayed in the shade for an hour, then went inside. Jack remained passed out, so Sandy made us some lunch while I cleaned up the broken bottles. We were eating when Jack woke up. He groaned and stretched. Then suddenly he was up and running to the bathroom. The hand clamped over his mouth revealed the reason for the dash, as did the loud sounds of Jack's vomiting.\n\nHe came back into the room with a sheepish look on his face, walking stiffly. The front of his body looked badly sunburnt as he came and sat down with us.\n\n\"Would you like something?\" Sandy asked, moving her chair so she could swing her legs out and get up.\n\n\"No, no, god no. Finish yours, please.\"\n\nWe ate in silence until Jack spoke again, \"sorry guys. I guess I flipped out there for a while.\"\n\nSandy put her hand on his and gave a tired smile of forgiveness. He grimaced as she squeezed his sunburnt flesh.\n\n\"Sorry, I'll have to get some lotion on you. You must almost have heatstroke.\" \n\n\"I would have if Allen hadn't got me inside. Thanks mate, it's great to know we have a friend like you.\" He said warmly, a far cry from the earlier abuse.\n\n\"Anytime, anytime...Do you mind if I ask what you are going to do now?\" I asked cautiously.\n\nJack thought for a moment, \"Well, I'm not going back on that diet.\" We all gave polite chuckles. \"Other than that, I don't know.\"\n\n\"Are you going to go back to the doctor?\"\n\n\"Not much point. He gave me six months, so I might as well stay home and enjoy it.\"\n\n\"It's up to you, but even if you have decided to die, you are going to need a palliative care plan.\" It was a cheap trick, but I hoped the stark reality of giving up would make him see sense.\n\n\"I don't want to go through all that shit, again: the needles, the radiation, the feeling sick all day and night.\" Jack shook his head as he spoke to emphasis the points.\n\n\"Just go and talk to him. He may have other options, or he can help make the time you have left as comfortable and pain free as possible,\" I explained.\n\n\"He probably won't see me again.\" \n\n\"If you think you are the first patient to walk out on an oncologist after being told they had an expiration date, you're mistaken. Give the office a call. I'm sure they will be worried about you.\"\n\n\"Please, Jack. Let's just talk to him,\" Sandy added.\n\n\"Alright, I'll ring him before they shut today and check when we can see him again.\" Jack said to the relief of Sandy and me.\n\nAs things calmed down, I thought I might be able to head home, but Sandy wanted me to stay.\n\n\"Please, Allen. It would be great to have you around after we see the doctor. You have such a level head.\"\n\n\"Best to check when you can see him, again.\" I replied.\n\nSandy looked at Jack. He walked stiffly over to the telephone and called the doctor's office. The doctor was very keen to talk to them and arranged for them to come in half an hour before normal consultations started the next day. \n\nAfter Jack got back to the table, I again tried to say goodbye, and that I would meet them at the doctor's the next day.\n\n\"Nonsense,\" Sandy blurted out. You can stay here tonight. I'll make up the spare bed.\"\n\n\"Yes, Allen. It's ridiculous to go home now and come back tomorrow. Just stay and you can go home after the doctor's.\" Jack backed up his wife.\n\n\"Alright, alright. I'll stay, then.\" I said with a smile.\n\nJack looked a little worse for wear from his morning in the sun. He glowed like a stop light. Sandy pointed to the bedroom.\n\n\"In you go, lobster boy, I'll get some body lotion and slather you from head to foot. It might help cool you down.\"\n\n\"I like the sound of that,\" Jack replied, but as he went to stand up, his face showed just how painful his sunburn was.\n\nThe next morning, we were in the waiting room of the doctor's office. He came out and invited Sandy and Jack to enter.\n\n\"Is it alright if Allan comes to? He's a close friend.\"\n\n\"Sure,\" the doctor replied.\n\nHe seemed excited that Jack was back, so I think he had something up his sleeve. First, he discussed the impossibility of removing the tumors. In a nutshell, the one on his spine was rooted into the cavity of the spinal cord. Removing it had an unacceptable risk of leaving Jack a quadriplegic without ridding his body of the cancer. Due to the sensitive area, radiation wasn't an option either. The previous chemotherapy hadn't worked. So with tumors as an added boogie, it was out as well. It was similar to my wife's situation and I waited for the palliative care talk. However, he had an ace in the hole.\n\n\"There is a trial of a new drug happening through the university hospital at the moment. I spoke to the professor in charge and sent him your case notes. He wants you in the trial.\" Jack and Sandy sat up straighter. \"I must caution you this it is not, I repeat, not a cure. However, this drug has been successful in prolonging the life of others in the late stages of cancer by dramatically slowing the growth of existing tumors and preventing new ones.\"\n\nSandy asked the obvious question, \"if it's so good, why haven't we been on it before.\"\n\n\"There is a hitch. You have to realize that most of the chemicals we use in chemotherapy are poisons. Basically, we almost kill you to heal you. This is an effective drug protocol but it will kill you before the cancer if you stay on it more than fifteen months. This trial is only for people with a diagnosis of six months or less to live. The professor is trying to work out a way to make it safer.\"\n\n\"So, I'm a guinea pig,\" Jack said dismissively.\n\n\"Yes, but in twelve months' time you will likely be a live guinea pig. Whereas without this drug, you probably won't be.\"\n\nJack and Sandy were quiet, holding hands, and looking at each other. I thought they should hear the other side of the equation. \n\n\"Doctor, could you explain how the disease will progress without treatment and what interventions would keep Jack comfortable?\"\n\n\"Yes, that would be a good idea,\" the doctor said rubbing his forehead. \"It is a bit hard to say, but given how quickly the tumor on your spine has grown, I would think that it will start to impact your quality of life within two months. Initially, you will feel pain in your lower limbs as it put pressure on the spinal cord, then pins and needles. Paralysis is possible by four to five months. By then the other tumors will have grown, compromising your internal organs. We would work on pain management. When it got bad, we would operate inserting a morphine pump. With the press of a button, you would self-administer the drug. I suspect you will be in a hospice for the last month, depending on when you become paralyzed.\"\n\n\"If they decide to go on the program, they get an extra twelve months. Then what you just described, the paralysis and such will still occur.\" I added for clarification.\n\n\"Yes, that is likely.\"\n\n\"Something else they might need to know are the side effects of the new protocol?.\"\n\n\"Ah, yes. The doctor went through a file and passed Jack a card. \"This lists the side effects of the treatment. Considering the toxicity of the drug, they are quite mild. Still, they are significant and you should consider them. Not every person gets everyone of them. Generally, it's considered that any one patient will only experience a couple of them.\"\n\n\"And lastly, how long will the actual procedures take and what other tests are required?\"\n\n\"Arr, that's the beauty of it. It's one day per fortnight. The professor mixes it the night before. Then its couriered overnight to the local hospital. You spend one hour on a drip and you're set for the fortnight. You will be very tired for twenty four to thirty hours after the infusion, but okay after that.\"\n\n\"It's a lot to take in,.\" Jack shook his head. \"Can we have some time?\"\n\n\"Yes, certainly, but I would like to know before I finish today. If I let the professor know, then he can start you next week.\"\n\nJack and Sandy looked at me, \"let's go and find somewhere to have a coffee.\" I said.\n\nWe left the offices passing more frightened people in the waiting room, poor bastards. We found a little place for takeaway coffee that smelt half-decent. We got three cups and went to a park. We sat at a table. Jack and Sandy on one side, I on the other. I took the side-effect card off Jack and read through them. They were all too familiar: nausea, vomiting, hot flushes, itching, hair loss, dermatitis, impotence, lethargy, loss of taste, loss of smell, and insomnia. The list went on and on. \n\nI asked the unhappy couple their thoughts about the treatments.\n\nSandy looked at Jack. \"Obviously go for it, with the new drug treatment, but it's really up to Jack. He is the one that has to go through it...\" she broke down and started crying.\n\n\"That's where you are wrong Sandy. You are going through it with him and, in the end, you have to think of a way to carry on.\" I interjected.\n\nJack put his arm around his wife and consoled her. \"It's not much of a choice really. If it only gave me another week with you, I'd do it. One year...it's like a lifetime.\"\n\nWe were all blubbering now. Once it had subsided, Jack fixed me with a steely stare.\n\n\"How bad does it get at the end?\"\n\nI stopped and thought for a moment. \"There is no getting around it. It's tough, but most people find a peace that makes it easier. My wife struggled with it for a long time, until she met somebody else, a sixteen year old that had only weeks left. The girl was happy and joking with other patients. My wife asked her how she could do it, when she knew the end was so close. \n\nShe answered she was lucky. Everybody dies, most don't know when. I've known for four years that I have a date. Other people walk out their front door in the morning, thinking they'll see family tonight or go to Paris next year. Then they get hit by a bus and that's it. I've packed a lot into my sixteen years, my family know that I love them, and I'm ready.\n\nYou're tough, Jack. You've fought a good fight, but know it's about living what time you have left.\"\n\n\"You mean a bucket list?\"\n\n\"Don't get carried away with all that. Sit down and work out your priorities. You don't want to spend too much of your last twelve months in airport lounges and driving across country. My wife and I found spending time with family and friends, giving them a chance to say goodbye was the most important. We did some traveling, but not just for the sake of seeing an object or natural wonder. It was about connecting with those close to us.\"\n\nWe finished our coffee. The sun rose high in the sky and the heat bordered on oppressive. \n\n\"I suppose we should go and tell the doctor we are going to do it.\" Jack said to Sandy.\n\n\"I'd better get home. My daughter's coming from Western Australia this weekend.\" I stood up and stretched.\n\n\"Oh, dear. Sorry Allen, you should have said. I feel terrible dragging you away.\" Sandy, now standing next to Jack, reached over and placed her hand on my shoulder.\n\n\"No, it's fine, really. I hope I've been some help. I'll get home and make up some beds before they get there.\"\n\n\"Thanks again Allen,\" Jack offered his hand for a handshake. \"Don't be a stranger!\"\n\n\"Don't worry. I'll be around so much you will think I'm a stalker.\" I replied shaking his hand.\n\nSandy gave me a hug and a kiss on the cheek. Then they walked in the direction of the doctor's office. I found my car and headed for home. The next week was full of family things for me. My daughter and son in law had some great news. They were expecting their first child, my first grandchild. I had quite a shock when I had seen her, because she was already five months along. The ultrasound had shown she was having a girl. They were going to call her Mary, after my wife.\n\nAfter they left, I rang Jack. He had been to the city to meet up with the professor and have his first treatment. From then on, it would be done at his local hospital. There would still be trips to the city every five weeks to have scans and blood test, so they could assess his health.\n\nJack gave up any thought of working. His life insurance policy was good, which allowed a payout of seventy percent if you were diagnosed with a terminal illness. It was enough to cover their debts giving them enough money to live on for the next eighteen months, without Sandy working. They were in the process of working out their priorities for the next twelve months and he assured me that there would be time set aside for our fishing.\n\nEven with the assurance, it was six months before we wet a line. In that time Jack and Sandy clocked up a lot of kilometres. The need to get back for the next treatment every fourteen days kept them hamstrung, but they still managed to go to New Zealand, Bali, Hong Kong, Fiji, and a long haul to London to see relatives.\n\nWe got the tinny in the river, set the Minn Kota for trolling speed, and put a couple of lures in the water. Then we promptly forgot about them. Opening a couple of cans of beer, I passed one to Jack. In the late winter sun we caught up with what had been happening in each other's life. Jack's treatment had turned out to be even better than the doctor had advised. The tumor on his spine didn't just stopped growing, but shrank slightly. There were no new ones on his internal organs. Side effects had been minimal, mostly just tiredness after the treatment.\n\nIt was a relaxing couple of hours, not just for us, but for the fish as well. We hadn't got a nibble. We were in Jack's truck, with the boat behind, driving home when he lobbed me a figurative hand grenade.\n\n\"Have you been with another woman since your wife died?\"\n\nIt was a fair enough question. I'd asked Jack some personal questions about his treatment, so I was surprised by my defensive reply. \n\n\"No, of course...not,\" it sounded like I was still married.\n\nJack noticed. \"It's coming up to three years isn't it? You're not still married you know.\"\n\n\"Yes, of course, I know,\" I replied testily. Then in a more friendly manner said, \"Sorry, still a sore point, I suppose.\"\n\n\"Have you...you know...had any thoughts about...it?\"\n\n\"Yes, a few times.\"\n\n\"Ever try to do something about it?\"\n\nI sighed, \"after I got my all clear for my cancer I...I stayed in the city and I got an escort to come to my room.\"\n\n\"You sly dog, how did that go?\"\n\n\"It was embarrassing really. She was so young, I kept thinking of my daughter. So I paid her and told her to leave.\"\n\n\"Did you, um, do anything?\"\n\n\"No, I didn't. She took her clothes off, sort of a strip tease. Then she started undressing me and I realized that I couldn't do it.\"\n\nWe were both quiet for some time, as Jack backed the boat into his shed. He stopped and looked at me.\n\n\"Is that what you meant in the park that day?\" I must have looked unsure. \"You know, what you said to Sandy. You have to find a way to carry on after.\"\n\n\"I suppose so.\"\n\n\"Sounds like you're not doing much of a job of that yourself.\"\n\n\"I never said I had all the answers.\"\n\nWe put the boat cover on and then went into the house. Sandy had dinner ready so we ate. After dinner, I said my goodbyes and made my way home. Jack's words, about not carrying on with life bounced around in my head as I drove.\n\nIt was true, in many ways I acted as if I was still married. I hadn't made any changes to the house. All the pictures and furniture were in exactly the same place they had been when I carried my wife to the car to take her to the hospice. When I got home I looked around. I sat in my chair and flicked on the television to see what the late movie was. I didn't need change I decided. I was happy here. My wife was still with me in my heart, and that was enough for me.\n\nI continued to see Jack and Sandy every fortnight. I would go to their house on the Saturday, before he had his next treatment. Sometimes, we went fishing. Sometimes, we watched the local team play footy at the oval. Afterwards, I would have dinner and then drive home. It continued like that for five months, becoming something of a ritual.\n\nI guess seeing him regularly, I missed the early signs of Jack's physical decline. He was a tough guy so I suppose he hid it from us. I first noticed he'd developed a bit of a limp. Later he seemed unsteady, unsure of where to place his feet. As I helped him into the boat, he seemed frailer. When he got to his chair on the bow, he sat down heavily with a sigh.\n\n\"Are you okay mate? We don't have to do this today if you're not up to it.\"\n\n\"No, no. I might not get many more chances, so let's go.\" Jack said waving away my concern.\n\nI started the main motor to get us away from the shore and the people at the boat ramp. Then stopped it and drifted with the electric one so we could talk. \n\n\"Is it starting to get worse?\"\n\n\"Yeah, it's not bad, but I'm getting pins and needles in both legs. It comes and goes, sometimes I can't feel them at all.\"\n\nShit, I thought to myself, here we go again. My feelings must have shown on my face, because Jack reacted.\n\n\"Cheer up Allen, you're not the one dying,\" he said in a lighthearted, jokey way.\n\nI felt worse. Someone dying, telling you to cheer up puts things in perspective. For the rest of the trip, I talked about everything from politics to Miley Cyrus's raunchy music video. That steered the conversation towards sex and Jack pounced.\n\n\"So have you got a girlfriend, yet?\"\n\n\"No, still celibate.\" I replied with good humor. He didn't catch me on the hop this time.\n\nJack pushed his cap back on his bald head and scratched his scalp, then sat forward and said in a low conspiratorial voice. \"What do you think of Sandy?\"\n\n\"She's beautiful, Jack.\" \n\n\"Oh, yes, she is that. I got very lucky there. Definitely punching above my weight when I got her.\" He grinned. \"Would you do something for me, Allen?\"\n\n\"Yeah sure, Jack.\"\n\n\"Would you sleep with her?\"\n\nHe definitely had me flustered now. \"She's your wife!\"\n\n\"Yes, she is my wife...unfortunately, um, I haven't been able to be...much of a husband to her, since I started this new drug.\"",
        "\"What do you mean?\" It was out of my mouth, before I thought about it.\n\n\"I...er...I haven't been able to get it up.\" Jack said, his face showing his embarrassment.\n\n\"Can't the doctor help with that?\"\n\n\"He gave me some pills, but they only worked momentarily. So while I got hard at first, I wasn't able to get the job done.\"\n\n\"Jack, I've got to say I'm not very comfortable with this. I mean, what would Sandy say if she knew you were offering...\"\n\n\"She asked me to ask you, Allen. You have to understand that we had a very active sex life before all this happened. I've often heard male friends and workmates complain that they want sex all the time, but their partner doesn't. That was never a problem for me. Sandy, well I'll just say Sandy kept me more than satisfied. In our younger days we even tried swinging, but I couldn't handle it. I mean, I might be with one woman or maybe two, but Sandy would go all night with multiple partners. I got really jealous so we stopped.\"\n\n\"Won't you get jealous, now?\"\n\n\"I don't think so. I think I've come to terms with my situation now. Both Sandy and I have had a lot of time to reflect on our life together. I know that I'm dying. That doesn't scare me as much now. What does scare me is, what is going to happen to Sandy after...\" His voice trailed off and he crushed the empty can in his hand, discarding it in the bottom of the boat.\n\n\"I'll be there for Sandy, Jack, but she doesn't have to sleep with me to get my help.\"\n\nWe approached the boat ramp, so Jack wrapped our discussion up. \"Just think about it Allen, please.\"\n\n\"Alright,\" I said as I nosed the boat over to the bank. I tied off near a tree, before getting out and backing the boat trailer into the water at the boat ramp.\n\nBack at Jack's house, Sandy had dinner almost ready. Tonight would be different because they were having some other friends over. The other guests left around ten. Sandy asked me to stay and help with Jack. He found it hard to walk, particularly when he was tired. They'd hired a wheelchair and a mobile hydraulic hoist which helped lift Jack onto the bed, and into the bath. The main bedroom now resembled a twin share hospital room. Jack's bed was an electric one that could be raised and lowered by pressing a button.\n\nI had used a hoist initially, when I looked after my own wife. However, towards the end, it was easier just to lift her by hand. Jack and Sandy's was similar to the one I had, so I help them go through the operation manual. I planned to head home, but Sandy insisted I should sleep over in the guest room. Sandy put Jack to bed, making sure he was comfortable while I watched some television. She came back out and after getting some chocolate, sat down in the other armchair. \n\nI got up to walk to the guest room, when Sandy stopped me. She stood placing both hands on my shoulders, so I faced her. \"Jack told me he spoke to you.\"\n\nI considered playing dumb. In the end I simply said, \"yes.\"\n\n\"Have you made a decision?\"\n\n\"No.\"\n\n\"Allen, I understand this is difficult, but I have needs too. I love Jack and I always will. I just need a little bit of me time. I don't want to go to a bar to find some stranger to help me. I just want to escape this shit for a few short minutes. Please, think about that.\"\n\nShe kissed my cheek, then turned and walked to the main bedroom. I watched her walk away. Damn, she was beautiful. I just didn't know if I could or should do it. Climbing into bed, I couldn't escape the erotic thoughts of Sandy naked. Her blonde hair, full breasts and countless other hidden delights. Then my pre-sleep dreams turned to my wife, as she was before her body betrayed her. No, I thought, I can't do it.\n\nVery early the next morning, I was in that dead zone, where you are almost awake but want to get back to sleep. I rolled from one side to the other, trying to get comfortable, waiting for the blackness to descend again. I'd almost drifted away when I thought I heard the door click. I rolled onto my back, but didn't hear anything else. The room was very dark, so looking would have been futile and I didn't open my eyes to try.\n\nListening intently, I heard movement. Then the covers moved and the bed squeaked as another body entered. I knew who it was, but I remained frozen. The body moved towards me and a hand slid up my chest. It explored my shoulders and upper arms, the touch light, teasing. Once it had exhausted that area, it began to descend, running through the mass of chest hair. It flittered over my nipples before delving lower still.\n\nI bit my lip to stifle a groan as that delicate hand slipped under the waistband of my boxer shorts to my rampant member below. Gripping it lightly at the base, her hand moved slowly, so slowly upwards, stopping just short of the sensitive head before retreating. Back at the base. It opened releasing my cock, before exploring lower. Sandy caressed my scrotum gently, finding my one testicle she rolled it gently through her fingers.\n\nI couldn't stay silent, I groaned as the hand moved back to my rock hard dick. I rolled towards the body to allow for my own exploration, but it rolled and bent away causing a firm buttocks to push back against me. The hand still holding my cock pushed it down below the curve of her buttocks between her legs. I automatically pushed forward as her legs opened slightly allowing my access to the wet, hot, crevice in front of me.\n\nAs I sunk deeper inside, a feminine moan escaped my companion's lips. The hand that directed me, released my pole allowing it to go deeper, and grabbed at my butt to urge me on. My hands gripped her hips as I bottomed out, my stomach pressed against that firm arse. For the first time in a long time I gave in to my urges, pumping in and out with a fervor that almost frightened me. \n\nThere were no words or expletives, just our heavy breathing as we each strove to achieve our climax. Suddenly, the body in front of me stiffened, and the hand that held my butt dug its nails into the flesh there. I kept going and I too went over the edge, my hands on her shoulders pulling her back to ensure I was embedded as deep as possible.\n\nWe stayed that way as our breathing returned to normal. I released my grip on her shoulders and she straightened up, so her back nestled against my chest. Her hand reached back taking hold of my arm and pulled it tight around her middle.\n\n\"Thank you, Allen,\" Sandy said. \"Now, hold me please.\" The need in her voice was palpable.\n\nI didn't speak, I'm not sure I could. I just gave her a squeeze of affirmation. I drifted off to sleep and when I woke up in the morning, I was alone in the bed. It could have all been a dream, except my penis was still hanging out of the fly of my boxers.\n\nI had a long shower to avoid facing Jack and Sandy. Eventually, I walked into the kitchen. Jack sat at the breakfast bar reading the paper and Sandy stood in front of the stovetop. \n\n\"Morning, Allen,\" Jack said looking up briefly from the paper.\n\n\"Poached or fried for your eggs, Allan?\" Sandy said cheerily from the stove.\n\n\"Poached, thanks,\" I replied, pulling out a stool next to Jack.\n\nAs I sat down, he passed me a newspaper underneath the one he was reading.\n\n\"Here, I've already been through that one.\"\n\nIt was a welcome distraction and kept conversation to a minimum. I felt like an interloper in this domestic scene. I was keen to eat breakfast and make an excuse to leave. After eating, I didn't get a chance as Jack asked me to help him sort out his tools in the shed. He was going to have a garage sale.\n\nWe worked side by side all morning without mentioning the discussion from the day before. Sandy left to meet some old work colleagues for a morning coffee. She came home with some lunch. We sat eating in the sunshine in front of the shed. Jack went to sleep after lunch, so I prepared to leave. Sandy walked me out and stood beside the car kissing my cheek while leaning against me. She had done it before and it had seemed normal, but now it took on an extra dimension. Her breast pressed into my upper arm, the smell of her shampoo, intoxicating. The light touch of her hand on my shoulder stirred me. I quickly got into the car to hide my arousal.\n\nIn no time two weeks had passed. I was in the car on my way back to Jack and Sandy's. I had thought a lot about what had happened. I reasoned that I was only helping support Sandy in a similar way to helping Jack keep his spirits up. An all too brief respite from the impending doom, there was an eleven year age gap so I doubted anything would come of it. I was just convenient I suppose, and maybe getting some sympathy for my own struggles. Getting out of the car, I was still leery of how the change in relationship might affect the interplay between us. \n\nJack didn't feel like boating so we just went for a long drive through the surrounding countryside. We pulled into a small pub in a tiny town. I got Jack's wheelchair out and wheeled him inside. Only a few locals sat inside, I parked Jack at a table near a big window and went to get us a couple of beers. When I got back, one of the locals named Ben was talking with Jack. His son had been one of Jack's first apprentices. \n\nIt was the start of a long afternoon. Ben rang his neighbor, who had played football with Jack, and he came in as well. I remained sober as I was driving, but Jack was well oiled by the time we left.\n\n\"I won't need any morphine tonight Al,\" he said, opening the long neck that his old football buddy bought him as a roadie. After a pause he spoke again, \"they took me off the new drug, Allen. My cancer has become resistant to it, even at increased doses.\" \n\n\"What are you going to do?\"\n\nJack took a long pull from the bottle. \"Die, I suppose.\"\n\nI didn't have a reply to that, so I turned the radio onto the sport station. We listened to the broadcast of the early game as we drove back to Sandy. It was getting dark and the phone chirped when we were about ten minutes away. It was Sandy checking where we were.\n\n\"Do you two know what time it is?\"\n\n\"Sorry darling, I couldn't get Allan out of the pub.\" Jack slurred his words a little as he spoke loudly so the Bluetooth microphone could pick up his comment.\n\n\"Allan?\" There was some alarm in Sandy's voice.\n\n\"It's all right Sandy. I'm right to drive. Jack just ran into some old friends at a pub. We will be home in ten minutes.\"\n\n\"Alright. See you then.\" She disconnected.\n\n\"God, she's a good girl! Always looking out for me,\" Jack said, melancholy seeping into his voice. \"And thanks Allan, for being there for both of us.\"\n\nI didn't know what to say. Was he just talking generally or about the previous Saturday night? I just smiled and nodded. Dinner was just the three of us. After, I cleaned up while Sandy got the drunk Jack into bed. When she came back I'd finished the kitchen and Sandy poured us both another glass of red.\n\n\"Are you staying tonight?\"\n\n\"Yes.\"\n\n\"Good, did Jack tell you?\"\n\n\"Yes.\"\n\n\"Thanks for staying. I don't want to be alone tonight. Let's see what's on television.\"\n\nWe watched an old Clint Eastwood spaghetti western, laughing at the overdubbing. When it finished, I felt awkward again. I was unsure what was going to happen, given the news I been told today. I decided to say goodnight and went to the guest room. I got into bed with the lamp on and waited. After a while I turned it off and tried to go to sleep. The door opened just before I slipped away, I pulled the covers back and Sandy got in.\n\n\"Are you...\" Sandy's hand covered my mouth.\n\n\"Don't talk,\" she said, as she placed my hand under her shirt.\n\nSo tonight, it was my turn to explore. I pulled the shirt up and traced her firm abdomen, finding a small piercing in her navel. Moving up, I felt under the curve of each breast then around the sides up under her armpits. Going back to the middle I slowly undid the three buttons on the shirt, allowing it to open, giving me access to the top of each breast. I circled the nipples being very careful not to touch them, moving close, then darting away.\n\nSandy breathing deepened, as my fingers glided over first one then the other stiffening bud. She pushed her arm down between us, her hand seeking and finding my hard cock. Leaving her breasts, I slid my hand down cupping her sex. Teasing was forgotten as I pushed my middle finger into her moist slit. At the same time I leaned over and sucked on the nipple closest to me. \n\nThe extra stimulation caused Sandy to moan and grab at my body trying to pull me on top. I let her hands guide me between her legs. She pushed down my boxers. I kicked them off before nestling my cockhead just below her entrance. Sandy reached down with both hands taking a firm grip on my butt. She pulled me up as she slid down impaling herself.\n\nThen we were off, grunting, gasping, rutting, both of us desperately seeking a release. Sandy got there first, the earlier teasing giving her a head start. I slowed to a stop allowing her to bask in the glow for a while before I withdrew completely. Now, it was my turn to set the agenda. I rolled her over onto her stomach before pulling her hips up until she was on all fours. Nestling my cock back in her cunt, I pushed all the way in, groaning as I did.\n\nI tried to be slow and steady, but it just felt to good,. I held her hips as I picked up the pace. Sandy dropped her head onto the pillow, her butt still high in the air making it easier to go faster. One arm snaked down between my legs tickling my ball whenever it came within range. I was getting close and Sandy knew it, bucking back against me she clamped her internal muscles milking me. All too quickly, I was there, firing off inside, slamming as deep as I could go each time.\n\nSatisfied I collapsed on the bed on my back beside her. Sandy snuggled under my arm with her head on my shoulder. She lightly stroked my chest as my breathing slowed and deepened as I drifted off to sleep. When I woke in the early morning she was gone again, she had left like a phantom in the night. This Sunday was a carbon copy of the last. After breakfast, I finished off listing all the items in Jack's shed. Over lunch, we went over it putting a value on most of them. Jack had accumulated some good stuff after fifteen years in the building industry.\n\nRubbing my chin, I said, \"you know Jack, you should auction this stuff. There is a lot of gear here that other builders might want.\" \n\n\"I just can't be bothered, Allan. I'll just get Sandy to put a few signs up around the neighborhood.\" \n\n\"I tell you what, leave it with me. I'll make some inquiries to see if I can organize something.\"\n\n\"Okay, but really I don't think it's worth the bother.\" Jack didn't appear that interested.\n\nBack home that night, I checked the yellow pages for stock and station agents in his town. They worked clearing sales on farms, so I thought they might be interested. The next day I rang around. Two didn't seem to care, but one guy wanted to see the list. I scanned a copy e-mailing it to him and he rang me the next day.\n\n\"I think we could help you, Allan. You have done most of the work. I've got a young bloke, just learning the ropes. I've been trying to get him some auctioneering experience. Is it alright if I send him to do it?\"\n\n\"Yes, that would be fine. How much would it cost?\"\n\n\"As I said, you've done most of the work with the cataloging and valuing,\" he paused as if mulling something over. \"Can I ask, um, if this stuff has got anything to do with Jack Knox?\"\n\n\"Yes, it's all his gear.\"\n\n\"You should've put that somewhere on the list. There will be no charge. We will pay for the advertising and I'll try to get it out to all the builders in the district. I'm sure they will all want to support Jack and Sandy.\"\n\n\"I'm not sure Jack would like a big fuss.\"\n\n\"Knowing Jack, I'm sure he wouldn't. Everybody knows his situation and they would be glad to have found some way to help him. When do you want to do it?\"\n\n\"Not this coming Sunday, but next.\"\n\nThere was silence except for the flipping of pages, probably from a schedule diary. \"That will be fine, I'll send my boy, James, around Saturday afternoon to get the lay of the land. What time were you thinking of starting?\" \n\n\"Not sure, would ten be okay.\"\n\n\"Perfect, should have everything wrapped up for a late lunch. If you give me your contact details, we'll be in touch.\"\n\nI did and we said goodbye. I rang Sandy straight after to let her know what I had organized. I didn't say anything about them doing it for free or the publicity. Best if that was a surprise on the day. I didn't count on how much publicity had happened. The next weekend the phone rang all the time with people offering to help, and asking about the condition of the gear. On Sunday night I left the phone off the hook, so I could get some peace.\n\nI wanted to get back to Jack's on Friday, but work intervened. On Saturday morning I was up before the sun and at their house for breakfast. Jack was having a bad day. The pins and needles in his legs had become a throbbing pain. It came and went, but today it came in a big way. Sandy gave him some of the heavy painkillers and he went to bed. I spent the morning in the shed, trying to get things lined up and ready to sell.\n\nAbout three, James came over and had a look. He suggested we move some of the stuff outside in the morning, just to give people more room to see. I asked how many he expected to come.\n\n\"The way the boss has been working the phones, I'd say half the town will be here.\"\n\nOh dear, I thought, I hope Jack wakes up in a better mood tomorrow. That night Sandy visited me again, slipping into bed in the dark and leaving before dawn. I got up early and lined up the bigger items outside the shed. Sandy came out an hour later to tell me breakfast was ready. Luckily, Jack did feel better today, he was even up to walking around a bit. A big four wheel drive pulling up in front of the shed cut my breakfast short.\n\nI went out to see who it was. The agent who I spoke to about the auction introduced himself, his wife and his daughter. The ladies were busy setting up a table, laptop and printer. I wondered what for.\n\n\"That's for the bidders tickets registration. Everything goes onto a spreadsheet, I follow the the auction with a tablet noting down bidder numbers and prices. Those are sent back to the laptop via wifi. Then when the buyer goes to the girls at the end of the day, he gets an itemized report of what he has bought.\"\n\n\"Wow, um, is that going to be necessary today?\"\n\n\"Certainly is. Does Jack own that vacant lot behind the shed?\"\n\n\"Yes.\" \n\n\"Good, we will need it for parking. The Lion's club are bringing their food van out to serve bacon and egg rolls and also sausage sandwiches. The lady who runs the coffee shop is bringing her trailer as well. All proceeds going to Jack and Sandy, of course.\"\n\n\"Oh, I'm not sure that they are going to like all this fuss.\" I was sure they weren't.\n\n\"Too bad. The town wants to say we're here to support you. Don't look so worried Allen. By the time they realize what's going on, it will be too late. I think in the end, they will have a great day.\"\n\nI went back inside warily to let them know, at least some, of what was going to be happening.\n\nIs that Warren Martin out there?\" Sandy asked, handing me a cup of tea.\n\n\"Yes, and his wife and daughter. Do you know him?\"\n\n\"Sure do. I used to work for him during my university holidays. Mostly in the office, but I used to help on some weekends with his clearing sales on farms. That's actually where I met Jack.\"\n\n\"Seriously?\"\n\n\"Oh yes, Sandy was the sundries girl.\" Jack replied with a glint in his eye.\n\n\"What's that?\" I asked.\n\n\"It's a bit hard to explain. Allan, what's that van doing?\"\n\nA large van with the Lion's Club symbol on the side pulled up beside the shed.\n\n\"Um, Warren thought that having food might be a good way to keep the buyers here.\"",
        "\"How many people are coming, Allen?\" Jack started to get testy.\n\n\"Who knows with these things. It could be twenty. It could be two hundred,\" Sandy interjected.\n\n\"It better not turn into a freak show!\" Jack's face reddened.\n\n\"Calm down Jack. Allen's just helping out,\" Sandy scolded. She walked over to stand behind Jacks chair. \"Come on. Let's go and say hello to Warren and Shelley.\"\n\nJack stood up and got himself steady. Then with Sandy by his side walked slowly outside. I stayed in and finished my tea. When I got outside, Jack and Sandy were sharing a laugh with Warren. Jack seemed in a better mood. The young auctioneer turned up and we all went through the sale order. I thought they would sell the big stuff first, but the intention was to start on all the sundry items. There were boxes of screws, nails and numerous hand and power tools.\n\n\"Some of this stuff can be hard to shift, so it's best to do those first,\" Warren said looking over the three tables of stuff. He shifted his gaze to Sandy, \"it will be harder today without my sundries girl.\"\n\n\"Maybe I could make a comeback. After all, it's for a good cause. What do you think honey?\" she asked Jack.\n\n\"I might buy some of my own tools back,\" he said with a laugh.\n\n\"Hmmm, I'll just go and check in my wardrobe to see if I have something appropriate to wear.\" Sandy said before strutting back to the house.\n\nCars and utes had already rolled into the back lot. The smell of bacon on the grill wafted through the air and there was a sense of excitement building. The early starters milled around the equipment outside. A couple lined up to register as bidders for the day. The coffee van arrived completing the smell of breakfast.\n\nBy the auction start time, the back lot was full. Other vehicles packed into any spot they could find along the streets including some neighbors front yards. Other builders from around the district surrounded Jack and he was having a great time. \n\nThe young auctioneer stood on a box so he was well above the crowd and yelled out. \n\n\"Saleooo! Saleooo! We will be starting here at the three tables in one minute.\"\n\nOn cue, Sandy came out of the house. Wowsers! She wasn't just hot, she was on fire. Dressed in short, and I mean short, denim cut offs and a red halter top that was barely managing to hold in her breasts. She must have had a wonder bra on or some padding because I was sure that she isn't that big. A short brown leather jacket and ankle high cowgirl boots finished off the outfit. Daisy Duke eat your heart out. \n\nThe crowd around the table parted like the Red sea for Moses as she sashayed towards us. Holding out her hand, I help her onto another box beside the auctioneer. Then I passed her the first item. I don't know if it was just her, but the bidding got off to a frantic pace. We got through the sundries in an hour with most items selling higher than the value Jack and I put on them. Once the tables cleared, we moved into the shed for some larger items. Sandy went inside, coming out a short time later in different clothes with less skin on display.\n\nShe walked to Jack and stood with him in a group of builder friends. Once the gear in the shed sold, the builders deserted Jack as they stood around the bigger equipment. There was a bobcat on a trailer with accessories, a backhoe with trencher, concrete pump and hoses, and his five ton work truck with hoist and racks. The builders competed fiercely with some of the bidding coming close to new prices. \n\nIt was all over by eleven thirty. Some of the people that purchased early had paid and gone, but there was still a big crowd. The Lion's Club van was doing a roaring trade in sausage sandwiches. However another ute pulling up with a tarp tied over a loaded tray usurped the coffee cart. \n\nA large man got out of the front, followed by two girls in shirts plastered with advertising for a beer brand. The guy uncovered the back of the ute to a big cheer from those closest to him. It had four big tubs full of ice and beer. I found out later the guy was a publican at one of the locals. He'd part filled the four tubs with ice before topping one up with beer from his own establishment. Then he went to the other liquor outlets and they matched his donation in the other tubs. \n\nSo then the party started. The Lion's Club van ran out of food. They took a slightly inebriated butcher down to his shop to load up with more sausages. People surrounded Jack and Sandy all afternoon showing their support and I guess, sadly, saying goodbye. I had to get Jack's wheelchair from the house as the standing took its toll on him.\n\nOnce the free beer ran out, the crowd began to disperse. I stood with Jack and Sandy when Warren, his wife, and daughter came to say goodbye. After some tearful embraces, Warren handed over two big rolls of cash.\n\n\"This is for all the little stuff. That way, the taxman won't need to know. I'll deposit the other money from the bigger items in your account, once the cheques clear.\"\n\nTaking the money, Jack looked up at him. \"Thanks mate. If I'd have known it was going to get like this, I would have said no, but then I would have missed a today. You deserve more than your ten percent today.\"\n\n\"No son, no charge today, and I'd do the same tomorrow just to see my sundries girl, again.\" Warren replied making light of his contribution. \"If you have some spare time on a weekend Sandy, I'll give you a job.\"\n\n\"You couldn't afford me anymore,\" she retorted slapping him on the arm.\n\nThe crowd had thinned and only the builders remained loading up, hitching up, or preparing to drive away their purchases. I went inside, got a few more drinks from Jack's bar fridge, and took them outside so he could have one last drink with his mates. Sandy and I went back inside, watching from the window as they stood around Jack talking.\n\n\"Thanks for doing this,\" Sandy said putting her arm around my waist and laying her head on the shoulder nearest her.\n\n\"I didn't do anything. I just rang Warren.\" \n\n\"But we wouldn't have done that. Maybe I would have after, but not before. He will treasure this day, I'm sure.\" She replied wiping tears from her eyes.\n\nHis mates started to shake Jack's hand. Sandy went back out to say goodbye and so she could wheel him back inside. I made myself scarce packing my things in the guest room, as I knew it was an emotional moment for both of them. I came out thirty minutes later to find Jack and Sandy in the kitchen. Jack talked to Sandy, dissecting the day as she prepared dinner.\n\n\"You're not going anywhere, mister.\" Sandy said on seeing me with my bag.\n\n\"I'd best get going,. I have to work tomorrow. It's been a big day,\" I protested.\n\n\"No way, put your bag back in there. Then come out here and have a drink.\"\n\n\"Really...I should be going,\" I wavered.\n\n\"Are you going to argue with a lady holding a sharp knife?\" Sandy demanded, pointing the large knife at me with a playful grin.\n\n\"Just get up early and go home tomorrow, mate.\" Jack joined in. \"Come on, Sandy's doing my favorite dinner tonight, spicy butter chicken.\"\n\nSighing, I returned to the guest room depositing my bag on the bed before going back to the kitchen. I picked up the glass of wine they'd poured for me and sat on the other side of the bench as Sandy prepared dinner.\n\nIt may have been Jack's favorite, but he could barely keep his eyes open at the dinner table. He was seriously fatigued after missing his afternoon sleep and all the activity that day. Not to mention, he'd drunk quite a few ales as well. Tonight, I wheeled him down to the bedroom and got him into bed while Sandy cleaned up. I came back feeling very tired myself, so I told Sandy I was going to have a shower and go to bed.\n\n\"Me too, it was a long day.\"\n\nSo, Sandy moved towards the main bedroom and I went to the bathroom. After a long hot shower, I walked back to the guest room turning off the lights as I went. I put my clothes on a chair just inside the guest room door and turned to close it when a voice behind me made me jump out of my skin.\n\n\"About time you got here, I nearly went to sleep.\" \n\nI turned to see Sandy in the bed, covers up to her chin.\n\n\"Come on, turn the light off and get in here.\" \n\nAs I turned off the light, my thoughts went back to Sandy's Daisy Duke impersonation from earlier in the day and I became more aroused. A childhood fantasy crossed off tonight, well, sort of. After an all to brief interlude, the childhood fantasy put me over the edge very quickly, I was sound asleep. Waking in the night, I expected Sandy to be gone but her sleeping form huddled behind me. \n\nI rolled over and she did too before pushing back against me. I draped my arm around her, my hand moved up to cup her naked breast. I lightly caressed her nipple and she wiggled her butt against my growing erection. \n\n\"Do you think you can wait for me this time?\" Sandy mumbled sleepily.\n\n\"I certainly hope so,\" I replied earnestly.\n\n\"Good, but maybe I should make sure.\"\n\nSandy rolled to face me, pushed me onto my back, and climbed on top. \"Now, I don't care what you have to do, but you'd better get me off first,\" she scolded.\n\n\"Yes ma'am!\" I replied in my best southern US accent.\n\nSliding herself down my cock, she asked, \"so you like a girl in boots?\"\n\n\"Oh yes,\" I panted.\n\n\"Well, think of me in something else. This is my turn.\"\n\nI let her have a turn. In fact, she had two before I lost it again. Sandy collapse on top of me falling asleep with my cock still inside her. The alarm went off at five with Sandy still in the bed.\n\n\"I've got to go.\" I whispered getting up.\n\n\"So do I,\" she replied, \"don't turn the light on until I'm gone.\"\n\nI got home, showered, changed, and was at work almost on time. It took me a couple of days to get over that big weekend. Thursday evening, I was watering some plants in the garden, daydreaming about Daisy Duke, when the bells went off above the back door signaling my home phone was ringing. I didn't hurry inside. It was probably a telemarketer, anyway. I returned to the memory of Sandy walking through the crowd at the auction.\n\nThe bells stopped and I was thankful for the silence. Five minutes later, they started again, but I still didn't run inside. If it's someone I know they will ring my mobile. I continued watering. A couple of minutes later, I felt my pocket and realized my mobile was inside. Then the bells started again and this time I ran.\n\n\"Hello?\" I said breathlessly.\n\n\"Allan, oh thank god,\" it was Sandy.\n\n\"What's wrong?\" I asked worried by the distress in her voice.\n\n\"It's...I...\" she started crying, \"please can you come I...I...can't explain.\"\n\n\"I'll be right there.\" I replied trying to reassure her.\n\nShe hung up and I went straight to the car driving like a maniac to get there. All the way, I tried to get her back on the phone, but she wouldn't or couldn't answer. I drove onto their street expecting to see the flashing lights of the ambulance, police, or something happening. Except it just looked normal. The outside light over the front door burned bright, but that was it. \n\nI got to the door and knocked. Sandy answered, her eyes red from crying. She rushed into my arms bursting into a fresh round of sobbing. I got her inside, sat her on the lounge, and checked on Jack. He was asleep and appeared comfortable. I returned to Sandy and sat beside her.\n\n\"What's up, Sandy?\" I asked easing her hands from her face.\n\n\"He's given up. He's just waiting to die!\" \n\n\"What happened?\"\n\n\"Monday morning, he wasn't well. I...I just put it down to the big weekend and the beer and...\" she dissolved into tears again.\n\n\"Come on, Sandy. Take a few deep breaths and just calm down a bit.\" I said gently, putting my arm around her.\n\nAfter regaining control of her breathing, she continued. \"That night he was no better, so I rang the local GP to see if he could drop in the next morning.\" Now that Jack had finished his cancer treatment, the local doctor looked after of his palliative care. \" He looked at Jack and suggested that I take Jack to the base hospital for some scans. The cancers everywhere Allen. It's gone berserk. He shouldn't have gone off the new drug.\"\n\n\"The doctor told you it was a short term thing, Sandy.\"\n\n\"I know.\" She almost lost it again, then pulled herself together. \"They only give him two weeks.\" That started the tears, again.\n\nI held her for some time, until she felt she could talk again. \n\n\"The doctors want to see him again tomorrow to discuss pain relief. I just can't face it on my own. Jack has become so withdrawn and distant. He doesn't want to eat. He doesn't want to get out of bed. I don't know what to do. Can you stay, please?\"\n\n\"Yes, I can stay. Have you been getting any sleep?\" I worried about Sandy's physical as well as mental state.\n\n\"No, I just keep thinking.\"\n\n\"Did the doctors prescribed anything for you?\" \n\n\"Yes, but I can't take them. What if Jack wakes up and needs me? What if I can't wake up?\"\n\n\"I'm here tonight. I'll spend the night in your room. You, have a shower, take a couple of pills, and go to bed in the spare bed.\"\n\n\"But what if he...\" I shushed her.\n\n\"No talking back. Into the shower, then into bed. Dr Allen's orders. Now go!\"\n\nShe stood up. Halfway to the bathroom, she turned around to argue again, but I simply pointed to the door and she left. I got a glass of water and the iPad I had brought with me, then walked to the main bedroom. I sat in the comfy chair beside Jack's bed, fired up the kindle app on my tablet, and started reading the latest Lee Child novel. I'd reached the first fight scene when Jack woke up. \n\n\"Is that you, Allan?\" He asked weakly.\n\n\"Yeah, mate.\"\n\n\"Did Sandy call you?\"\n\n\"Yes, she's worried about you Jack.\"\n\n\"I guess she won't have to worry for much longer then,\" he said bitterly.\n\n\"Come on, Jack, where is this coming from?\"\n\n\"I'm fucking dying Allan. It changes your perspective!\"\n\n\"Really, well here's something for you to think about, Jack. We are all dying. Tonight everybody is twelve hours closer to dying than what they were when they got up this morning.\"\n\n\"It's not the same.\" \n\n\"No shit. Of course it's not, but before you get all woe is me, why does all the bad stuff happen to me? I want you to think about something. The other day six kids were gunned down in a school. They went to school like it was just another day. Three hours later, they are cowering under a desks as some mad arsehole, with authority issues and an automatic weapon, walks into their classroom blasting away like he's playing a video game.\n\nThey died in abject terror and probably in agony, because I bet the fucker couldn't shoot straight. They died alone, away from their loved ones, in a place they probably didn't even like.\n\nNow you, poor Jack, you get to go in your bed, so whacked out on drugs the only thing you will be aware of is the touch of your wife. She will be holding your hand through all of this and when you've gone and are at peace, she will be crying her heart out. Even though she has been doing that in her private moments for a long time, nothing prepares you for that moment when the person you love is just a lifeless shell.\" Tears were streaming down my face as I remembered sitting next to my wife's bed in the hospice. Her eyes closed, her hand cold, and her mouth hanging open with a bit of spittle on her chin.\n\n\"Spare me your home spun philosophy Allan. I mean, where is this peace and calm you crapped on about at the start. It's fine for you, you're just thinking with your dick.\"\n\n\"So that is what this is about? Spare me your hypocrisy. You practically begged me to help Sandy out and I have never rubbed it in your face.\"\n\n\"She didn't come back to her bed the other night!\" he retorted.\n\n\"She fell asleep, Jack!\" It was on the tip of my tongue that I didn't get her off the first time, but that would have been too much information. \n\nJack was silent. After a while I wondered if he had drifted off to sleep. Looking closer, I could see tears running down his cheeks.\n\n\"Come on mate,.\" I pulled the chair closer to his bed.\n\n\"I don't want die,. I know that sounds pathetic, but I don't want to die,\" Jack mumbled.\n\n\"It's not pathetic. It's what Sandy wants to hear. She thinks you have given up.\"\n\n\"The doctors have given up, why shouldn't I?\"\n\nHe had a point, but I didn't agree with him. \"Alright Jack, how about we look at it a different way. Let's say that you go to a fortune teller and she tells you, no matter what you do, in two weeks you are going to get hit by a truck. Do you lay down on the road and wait for it? or do you live every minute of those two weeks like the precious gift they are? The next couple of weeks will be defined by how you choose to live it not by how you die, because we know how this story ends.\"\n\nNeither of us spoke for the next twenty minutes,. I sat back in my chair and stared at the ceiling. Jack was the one who broke the silence, again.\n\n\"Where's Sandy?\"\n\n\"She is in the guest bedroom,. I told her to take a couple of the sleeping pills the doctor prescribed and get some rest. She looked a wreck, Jack, I'll stay in here tonight.\"\n\n\"Oh okay, \" Jack rolled onto his side facing away from me,. I reached back and got my iPad to resume reading.\n\nA little later, Jack rolled back. \"What are you reading?\"\n\n\"It's just a fiction book, about an ex-army guy who drifts around the US getting himself into scrapes with bad guys, before saving the day. It's action, thriller sort of stuff. His names Jack Reacher and he's like a gunslinger from the old style westerns.\" I suddenly realized the light might have been keeping him awake. \"I can stop if the lights to bright.\"\n\n\"No it's fine,. I'm not tired at present. Did they make a movie about this guy recently?\"\n\n\"Yeah, it was a joke. The books are one hundred times better. In the books, Reacher is over six foot, a real man mountain with a craggy face. Then they picked short arsed, baby faced Tom Cruise in the lead role. It was a travesty.\"\n\n\"Um this is going to sound weird, but could you read it aloud to me till I go to sleep?\"\n\n\"Yeah, but I'm warning you, I might be a little rusty. The last time I read aloud it was a nursery rhyme book to my kids.\" \n\nI started reading and it did felt weird. I started at the beginning, which made it easier, as I knew what was coming up. As I got into the story, I got swept up in it. Jacks eyes were closed, so I assumed he was asleep and I stopped. \n\n\"Keep going, I'm listening,\" Jack barked, so I did.\n\nAt the end of chapter eight, Jack stopped me. \"That's enough, you can stop now. I'm tired.\"\n\nI stopped reading aloud, but continued to read to myself when a Jack spoke again. \"No mate, stop. Don't read ahead. You can continue tomorrow when I wake up.\" I opened my mouth to protest, but he stopped me. \"Who's dying here?\"\n\n\"How long are you going to use that old chestnut?\" I asked with a grin.\n\n\"As long as it takes. Goodnight Allen.\" He rolled over the other way.\n\nI woke the next morning with a numb bum and a sore neck. It was only just light and Jack still slept, I stood up and stretched, then went out to the kitchen. Putting the kettle on, I got the stuff out to make a cup of tea. I just sat down with my tea and a piece of toast when Sandy came out, wiping the sleep from her eyes. \n\n\"Sorry, I didn't mean to wake you,\" I said looking up at her gorgeous form. \n\nShe was wearing a t-shirt that just came down far enough to meet the lacy panties below. The shirt was tight across her chest, so the outline of her breasts with the nipples prominent were clearly visible. I looked away, quickly, remembering the conversation the night before.\n\n\"How was Jack with you?\"\n\n\"Um...we had a spirited discussion. We went to sleep on better terms, but I guess we will see when he wakes up.\"\n\n\"Did he say anything about...\" She didn't finish the sentence, but I got the drift.",
        "\"Yes, that was part of it.\"\n\n\"We will...I mean I will have to stop. I suppose I should never had started.\"\n\n\"We can't change history, but yes, WE have to stop,\" I agreed, it takes two to tango.\n\nSandy realized her attire was perhaps not in keeping with the sober mood and left in the direction of her bedroom. I continued with my breakfast and tried to massage the kink out of my neck. Sandy appeared more modestly dressed with her smile back.\n\n\"Jack's awake,\" she said brightly.\n\n\"And he's...\" I started.\n\n\"In a very good mood,\" she finished, \"but apparently you started a book last night and he wants you to read some more, before the doctors appointment today.\" Sandy gave me a quizzical look.\n\n\"I'll tell you later,\" I answered, finishing my tea. Then getting a big glass of water before heading back to the bedroom.\n\nI read eight more chapters before Sandy kicked me out to wash and dress Jack for the doctors. They requested I tag along again, but this time I wasn't much help. The doctor spent thirty minutes explaining options from morphine pumps to meditation. Then he asked Jack to rate his pain on a scale of one to ten. With one being easily bearable, to ten being excruciating. Jack came up with a three, mostly, and sometimes a five.\n\nThey decided the best thing to do was to stay with the heavy oral painkillers for now. The doctor said they could reassess in a week, if there was any major change. He wouldn't give Jack a big amount. Instead he gave him enough for two days saying he would drive past and pop in with some more after that. It was common practice not to give terminally ill patients too much medication at once, in case they tried to end it early.\n\nBack at the house, I once again read aloud. Only this time it was in the lounge room. Sandy came in and sat with us for a while. Jack caught her up on the story, but she wasn't as enthusiastic as we were for it. She adjourned to the kitchen to organize some dinner, and I got up to get a drink.\n\nHe allowed me to stop to eat, but while sitting around the table Jack laid down the law.\n\n\"You know Allan, you can't leave until you finish that book.\"\n\nI thought he was joking. \"Don't worry mate, I'll be back next weekend.\"\n\n\"Allan, I know it's a lot to ask, but would you stay? While I was getting Jack dressed, we talked about it and um...\" Sandy asked her face flushed with embarrassment.\n\n\"Do you mean till the end of the book or the end?\" \n\n\"The bitter end,\" Jack said, hope on his face. \"If you can't, we'll understand, but it really helps us out when you are here. Both our stress levels go down,\" Jack added.\n\nI was blindsided by this and I wasn't able to give an answer straight away. \"I'm not sure guys. Um...can I let you know tomorrow? I just haven't even...you know...ah... the idea has never entered my head. These situations are usually private things.\"\n\nI spent a restless night thinking over Sandy and Jack's request. It was only going to be a couple of weeks and I could easily get the time off work. Except I wasn't sure I wanted to be in this highly charged emotional zone. Did I really need to sit and watch somebody else die? In the end, Sandy and Jack's needs won out over my own misgivings. I told them my decision over a late breakfast.\n\n\"I can hang around, but I want you to tell me to piss off if you want some privacy, okay?\" They nodded. \"Alright, first thing tomorrow, I'll go home to get some clothes and ring my boss.\"\n\n\"Will that be a problem?\" Sandy asked, uncertain again.\n\n\"No, I'm not indispensable and he owes me some time.\"\n\nAfter breakfast, we all went for a drive and a walk. In Jack's case, a wheel around the riverside park. After a refreshing dose of the outdoors, it was back home to the story. We finished it that night before Jack fell asleep. Then I went to bed. \n\nThat became a pattern. A late breakfast, followed by all of us or sometimes just Jack and myself, going to see his friends and relatives. The afternoons were for resting and reading. I had many books that I could read on my iPad. We stuck to the fiction books,alternating between the action hero of Jack Reacher and John Rebus, Ian Rankin's drunken detective from Edinburgh. I slept in the guest room without disturbance, but I did wake twice and thought I sensed somebody in the room with me. That may well have been my over active imagination.\n\nFor the first ten days, there was little outward change in Jack's condition. However on the next Thursday morning, a panicked Sandy woke me.\n\n\"Allen! Allen!\" I sat up pushing away Sandy's shaking hands.\n\n\"What's wrong?\"\n\n\"I was getting Jack dressed and he started shaking. Then he had some sort of fit and fell off the bed. He won't wake up!\" She almost screamed the last bit.\n\n\"Call the doctor,\" I said grabbing a dressing gown and hurrying to Jack and Sandy's bedroom.\n\nJack was on his side on the floor, I got down beside him realized he was still breathing, but he was unconscious. His colour was still good and his pulse was strong, so I was hopeful it wasn't the end. By the time the doctor arrived, he was semi-conscious. Sandy and I had him back on the bed. The doctor looked him over, then motioned for us to follow him outside.\n\n\"He's had a seizure. Probably the tumor at the base of his skull has grown and is putting pressure on the brain itself. Now it's up to you. We can get him to hospital, do the scans, and confirm that, or we can let him rest here. I think in a couple of hours, he will be back as normal.\"\n\n\"So you're saying not to take him to hospital?\" I inquired trying to clarify his statement.\n\n\"No, what I'm saying is, my professional advice is, to take him for scans. However as a friend and given the scarcity of time left for Jack. Do you really want to be waiting around in a hospital for three quarters of the day?\"\n\n\"But what if he has damaged himself?\" Sandy asked a quite reasonable question if we weren't talking about a man with a week to live.\n\nThe doctor sighed. It was tough for him. He had taken an oath to do everything to preserve life. He had a legal obligation to do much the same. He knew the score in this situation, he just couldn't spell it out.\n\nI put my arm around Sandy. \"We will keep an eye on him for a couple of hours and if he starts to deteriorate, we will call you,\" I explained.\n\nSandy gave me a look, but I tried to act reassuring. The doctor said \"thanks,\" and left.\n\n\"Why no scans. What if he has a fractured skull?\" Sandy was agitated.\n\n\"I'm sure he checked him thoroughly. If Jack hasn't improved in an hour, I'll take him to the hospital. Although we both know he is sick of all that stuff, getting poked and prodded, and the interminable waiting.\"\n\nSandy still seemed unsure. Come on,\" I said. \"Let's go in and sit with him.\"\n\nWe didn't need an hour. In ten minutes, he was a lot brighter. I started reading again and he lay back holding Sandy's hand. He didn't get out of bed that day and his excursions out became less frequent and shorter in the days to follow. The seizure had started something, it also jogged my memory of something that Sandy and Jack might want sorted. Over dinner, I asked them about what type of a sendoff they wanted for Jack.\n\n\"What do you mean?\" Sandy replied.\n\n\"Well, there's the big one, burial, cremation or a Viking burial?\" I said trying to keep things light.\n\n\"Viking burial?\" Jack looked confused.\n\n\"We will throw you in the tinny, pile in some timber, set you alight and let you float down the river.\" We all giggled at that and after that subsided I asked, \"have you thought about it?\"\n\n\"No, didn't you say I was supposed to concentrate on living?\" Jack seemed annoyed.\n\n\"Yes, I know, but I'm not always right. I remembered the other day that I hadn't done anything before my wife died. In the state that I was in after her death, I don't think I did her justice with the funeral.\"\n\nWe went through everything that I could think of regarding a memorial service. They selected a funeral director and we contacted him to firm up the details. We spoke about other funerals we had been to, what we liked and what we didn't. I recounted how one of my old work colleagues, a football nut, had requested when they carried him out of the church, for a recording of \"Dropkick Me Jesus, (through the goalposts of life)\" to be played.\n\nThe Wednesday following Jack's first seizure, we took Jack on what was to become his last outing. We went to the cemetery and he watched as Sandy placed flowers on his parents' graves. On the way back to the car, Jack had another of his fade-outs. He slumped in the wheel chair almost falling out. After getting him back to the car, I rang the doctor and he said to come straight to the back of his surgery. When we got there his practice nurse was waiting. She helped us get Jack into one of the examination rooms through the back door.\n\nThe doctor came in and went through his routine checks. Jack was still breathing and had a strong pulse, but wasn't conscious. We stayed for two hours and the doctor checked back, in between other patients. Jack hadn't regained consciousness and his pulse had slowed. The doctor took Sandy and I into his office and closed the door. We sat down and the doctor moved his chair out from behind his desk, closer to us. \n\n\"I think we have reached the endgame,\" he said quietly,. Sandy choked back a sob. \"As always with these things, I don't know for sure, but you have to decide how to proceed.\" We nodded and he continued. \"I'll organize an ambulance to take Jack from here, but where he goes is up to you. He can go to the hospital or he can go home. In hospital, there will be interventions to slow down the process, oxygen mask, etc. At home, the end will be quicker, but having a person die in your house isn't for everybody. So it's up to you.\"\n\nSandy grasped my hand tightly,. \"Jack didn't want to be kept alive by machines and I want his passing to be peaceful. I want him at home.\"\n\nThe doctor smiled and patted Sandy's leg. \"Good choice. There is something I want to warn you about. Some patients, not all, have a sudden surge of energy. It's like the body and the brain give it one last shot. I had a case where a woman had been nursing her terminally ill son. He had been unconscious for two days. She went to the toilet and came out to find him standing at the fridge with the door open looking for a drink. It can be disturbing and lead people to believe a miracle has happened. Generally, it last less than five minutes and is followed by a very rapid decline.\"\n\n\"Okay,\" Sandy replied weakly.\n\nThe doctor rang for the ambulance and thirty minutes later, the ambulance officers were placing Jack on his bed. Sandy stayed with him and I made us something to eat. She stayed beside his bed all afternoon holding his hand. I walked in and out, trying to keep active. That had always been my coping mechanism, even during my wife's final days.\n\nAbout nine that night, I'd made a cup of coffee in the kitchen when I heard excited voices coming from the bedroom. Walking in with two cups, I saw the end of the bed had been pumped up and Jack was sitting up talking to Sandy. She sat on the edge of the bed holding his hand and lightly touching his face. \n\n\"Thanks for the coffee mate, but I'd kill for a beer.\" Jack said to me, his voice raspy. \n\nI put the cups down and returned to the kitchen for three beers,. I took the tops off and in the room shared them around.\n\nI made a toast, \"to good friends and true love!\" We clinked the bottles together and each had a mouthful.\n\nJack smacked his lips and sighed laying back into the pillows stacked behind him. He closed his eyes and they never opened again. His body held on until, with one last rattling breath, he died at midnight. Sandy laid her head upon Jack's chest and sobbed. I left the room so she could start the process of grieving. I called the doctor to let him know the end had come, expecting just to leave a message, but he answered. He had been on a call for a road accident, and was just heading back home. He said he would swing by to do the formalities for the death certificate.\n\nNext, I rang the funeral director. Unfortunately he was awake due to the same road accident. I explained that Sandy was still with Jack. He understood saying that he would take his time arriving and he would wait until Sandy was ready.\n\nThe last person I rang was Sandy's sister, she was going to come and stay. I only got her answering machine, but that would be fine as she would still get here tomorrow. Sandy came out with her face red from crying. I held my arms out and she walked to me, resting her head on my shoulder. She cried some more. The doctor arrived and did his thing, followed by the funeral director. He inquired if it would be all right to move the body, Sandy asked for another couple of minutes.\n\nA little later Sandy came out of the room carrying the suit that she wanted him buried in. The funeral director and his son wheeled a trolley in and came back a short time later with Jack's covered body. After seeing them out I gave Sandy a couple more sleeping pills putting her to bed in the guest room. Exhausted I plonked down on the lounge to get some sleep myself.\n\nThe morning sun streaming in through a window woke me a few hours later. I sat up disorientated at first, then came back to the reality of the previous night's events. After checking in on the still sleeping Sandy, I went to the main bedroom. Switching on the light, I stared into the room. The unmade bed that Jack had previously occupied and the now redundant hoist were monuments to the previous two weeks. I walked to the small bedside table. The three partly drunk beer bottles sat forlornly amongst the pill bottles and lolly wrappers.\n\nPulling myself out of the maudlin mood, I began tidying. It seemed like the right thing to do. Taking the beer bottles out to the kitchen, I emptied the remaining contents down the sink. Returning to the room with a garbage bag I loaded it with any rubbish I could find. Next I stripped the sheets of Jack's bed, taking them to the laundry. \n\nGoing back to the bedroom, I wheeled the hoist to the front door. It would go back to the medical supplies place. I was pushing the hospital bed to the front door as well, when a disheveled Sandy appeared from the guest room. I stopped pushing and hesitated unsure what to do or say. Thinking back to my time straight after my wife died was no help, because I couldn't really remember anything until the day of the funeral. I had been a walking, talking zombie just going through the motions of life trying not to feel anything.\n\nLeaving the bed, I went to her and gave her a hug. She didn't respond with her arms, they staying limply by her side. She merely rested her head on my shoulder. There was no point inquiring about how she felt, instead I asked if she wanted some breakfast. She shook her head, I led her into the kitchen anyway, sat her down putting the kettle on for a cup of tea.\n\nWe sat opposite each other without speaking, I held her hand as she stared off into space. Thankfully, there was a knock on the door and it was her sister, Angela. It meant a fresh round of tears, but I discovered Angela was a people person and she took charge of Sandy. It left me to do the mechanical things, which suited me anyway. I returned the hospital bed and the hoist, borrowing a truck from one of Jack's builder friends. In the process, I began spreading the word of the nights events through the various networks that existed under the surface of a small town.\n\nWhen I was back at the house, Angela put me in charge of the phone. Taking calls of condolence and noting down names.The funeral director came in the afternoon and finalized the details of the burial and memorial service, to be held the following Tuesday. A few close friends came to visit, but Angela kept a tight rein on how long they stayed. I packed my things and was on my way to the front door, when Sandy saw me and called out to me.\n\n\"Allan? Where are you going?\"\n\n\"Not far, I've booked into a pub in town,\" I explained.\n\n\"Why?\" she asked walking towards me.\n\n\"With Jack gone...it just seems more appropriate. You know how gossip can start.\" Angela appeared behind Sandy and gave me a slight nod to show her approval.\n\n\"But...but,\" Sandy spluttered as she reached where I stood.\n\nI put my hands on her upper arms holding her,. \"I'll be back tomorrow, and I won't go home until after the funeral.\" I assured her, but she didn't seem convinced. I pulled her close and this time she clung to me.\n\n\"No, you have to stay!\" \n\n\"I will. I'll only be gone at night time. You haven't got enough beds. The house will be full when Angela's family arrive tonight.\"\n\nReluctantly she let me go, only after I assured her yet again, I would be back for dinner. The weekend wasn't great. My room at the pub was dreary and I had no urge to spend extra time there, but Sandy's house wasn't much better. Waiting for a funeral is almost as excruciating as waiting for someone to die. There wasn't much to do, so was a lot of sitting around, reminiscing, and feeling sad. Angela's husband and I put Jack and Sandy's queen sized bed back together in their...her room.\n\nOn the day of the funeral, Sandy got her game day face on. She wore a simple black dress topped with a black hat. The church was full and the congregation spilled out the front and the sides. Large speakers had been set up outside so those out there could hear the proceedings. Sandy sat in the front row with her family while I sat in the pew behind.\n\nIt was a fitting service. Warren Martin led the eulogies, followed by one of Jack's building friends, and finally I read a short piece that Sandy prepared. As always, the lowering of the coffin at the cemetery caused the peak of the emotional turmoil for the crowd. Sandy stood up to it well, but I could tell it was taking a terrible toll. \n\nThe wake was at the local ex-serviceman's club. It was shoulder to shoulder at first, but after an hour the crowd began to thin. I stayed in the background. This was a chance for everybody else to share in Sandy's sorrow. When it was down to the hard core, who looked like they intended to see the next dawn before finishing, I suggested that I take Sandy home. Angela had left earlier with her husband and children.\n\nAt the house, I pulled up at the top of the driveway close to the house. Sandy made no move to get out, so I turned off the car. She turned in her seat to face me.\n\n\"You're leaving tomorrow, aren't you?\" This wasn't a question, but an accusation with the severity of high treason.\n\n\"Yes.\"\n\n\"But why? I need you here!\" Sandy pleaded.\n\n\"You have your sister. She is staying for another week. I have to get back to my job,\" I argued.\n\n\"That's bullshit!\"\n\nShe had me there,. I had no desperate need to go back to my job. It was a flimsy excuse, but I felt I couldn't tell the truth. I was right that her sister was indeed staying for a week and Sandy could cajole her into another. Their days would be filled with visits from well-wishers and friends dropping in with casseroles or inviting them to share dinner elsewhere. However the nights, the long desolate nights alone, would be a different story. The need for oblivion would grow strong, and if I stayed the temptation would be too great. Not that I am an irresistible individual, but the need to forget would be unstoppable.\n\nI harbored the thoughts of one day being with Sandy, forming a bond that could be love. The chances were slim, given I was ten years older and probably a polar opposite in personality and physical appearance to her precious Jack. I felt the probability would be zero if I took advantage of her in such an emotionally raw state. It would also set tongues wagging, the widow and the close friend who had been around a lot before Jack died. Sandy needed some time and space. The last four days had been torturous and the coming two weeks would be no better. Maybe I was just a scared.",
        "She looked at me, eyes glistening defiantly, awaiting my reply. \"I'm sorry. I'll call often and maybe come back in a couple of weeks.\" I said quietly.\n\n\"Don't bother, I don't want to talk to you,\" she spat fumbling for the door handle.\n\n\"Sandy, Sandy, please don't..\"\n\nSandy was out of the car, but she turned leaning back in, one hand on the roof, the other on the top of the open door. \"Jack thought you would be there for me. I thought you would be there for me.\" Her voice crackled with emotion, \"but now, you're leaving me too. So fuck off home, you old coward!\" \n\nStanding up, Sandy slammed the door and stomped up the path to her front door. Her words had stung, mostly because they were true. She particularly emphasized the \"old\" and that hurt most of all. My secret dreams lay in tatters.\n\nBefore I left the pub the next morning, I rang Sandy, but got her sister. She said Sandy was still asleep, but in my minds eye, I imagined her waving the phone away after she found out who it was. I went home with a heavy heart. Walking down the entrance hallway of my house, my late wife's smiling pictures seemed to mock the old man who thought he had a chance of snaring a younger partner. \n\nIn a fit of pique I swiveled and swung a punch into a picture of us smiling happily. The glass smashed and I think one of my knuckles did too on the wall behind. I slumped down against the wall and picked up the fallen picture with my bloody hand. I looked at the crumpled faces in front of me and a tear dripped off the end of my nose onto them. Then another, and soon enough a flood came as great wracking sobs were torn from me. I was crying for myself, I was crying for my wife, and I realized, I was crying for the first time for my friend Jack.\n\nI tried to stay in touch with Sandy, but our parting caused a rift I could not close. When I rang, Angela always answered the phone saying Sandy was in bed, in the shower, or on the toilet. She never returned my calls. Every day for the two weeks, I was rebuffed. Angela must have gone home after that so Sandy ignored my calls completely.\n\nIt was a month after Jack's funeral. I sat on my front porch enjoying the last warmth of the afternoon sun when Jack's, I mean Sandy's F 100 truck pulled up outside my house with Jack's boat hitched up behind. The tinted windows prevented me from seeing who was driving, until the driver got out of the vehicle. It was Sandy. She wore a heavy coat with a caterpillar cap pulled down tight on her head. \n\nWalking around the front of the truck, she paused seeing me sitting on the stoop. Then steeling herself continued on towards my front gate, her hands thrust deep into the coat pockets. I stood to greet her, uncertain of the reception I would get or the reason for the visit. She got to the gate first, but stopped on the outside until I arrived.\n\n\"Hi,\" I said with a hesitant smile.\n\n\"Hi,\" Sandy looked down and scraped her boot on the pavement before looking back up. \"I've brought Jack's boat, he wanted you to have it.\"\n\n\"Wow, thanks,\" I replied with a little too much enthusiasm. \"You should have called and I could have saved you a trip.\"\n\n\"It's alright. I needed to get out,\" Sandy said, shuffling her feet and looking everywhere, but directly at me. \"Umm, could I come in?\" she asked, for the first time looking at me directly.\n\nHer eyes searched my face as I tried to keep neutral expression. \"Sure, how did you find me? You've never been here before.\" I opened the gate and stepped back allowing her to come into the yard.\n\n\"Jack had your address, I just punched it into the GPS.\"\n\nShe continued walking up the path, onto the porch, and waited at the front door. I followed her to the door. Reaching over her, I opened it and pushed it wide so she could go inside. She walked up the entrance hallway a short distance, her boots echoing on the floating timber floor. I closed the door and when I turned back, Sandy was studying some of the photos.\n\n\"Your wife was very pretty,\" she said with genuine admiration as she put her cap on a hook.\n\n\"Yes, she was.\"\n\nWe continued down the hall to the family room/living area. \"Would you like something to drink?\"\n\n\"No, I'm fine.\" Sandy said looking around, taking in the surroundings.\n\n\"I'm just getting a water. Sorry it's the maids day off,\" I replied seeing her looking about.\n\n\"It's tidier than I thought it might be. If Jack lived alone, the house would resemble a teenager's bedroom.\"\n\nWe both tried a laugh but it came off as half-hearted. I returned to the family room and told Sandy to take a seat. \n\nShe hesitated, then remained standing, \"I just want your opinion on something...\" She bit her lip. After a couple of seconds, her hands came out of the coat pockets and unbuttoned it. Then grasping each side, she opened it and with a shrug, slipped it off her shoulders. \"Do I still look alright in this?\"\n\n\"Magnificent,\" was the only reply necessary. \n\nShe wore the same red top and cut off denim shorts she had the day of the auction, complete with the cowgirl boots. My mouth was dry as I drank in the sight before me. \n\n\"I don't know, maybe I would look better like this.\"\n\nSandy's hands went up to the three buttons that when undone allowed her to pull the top off. There was no bra and her breasts came into view. Not huge but firm, riding high on her chest. Her hands went down and she popped the top button of her shorts. Then slowly undid the other three. Pivoting on her toes, she pushed her butt out towards me as she \"tried\" to push the shorts down.\n\n\"Oh, they seem to be stuck.\" She turned her head looking back over her shoulder at me. \"Could you give me a hand?\"\n\nI had to stop myself from running. Placing my hands on her hips, I hooked my fingers under the waist band of the shorts and slowly slid them over her butt. Her thong came off with the shorts and as I squatted to push them down her legs I got the VIP view of her pussy as it peaked out between her closed thighs. She leant against the wall in front of her and lifted one foot.\n\n\"Boots on? Or boots off?\"\n\n\"Definitely boots on!\" I confirmed.\n\nI slipped the shorts and underwear over first one boot then the other. Now naked except for the boots, Sandy straightened and turned around to face me as I stood up again. I ogled her as I did, the long legs, the pussy with a covering of fine blonde hair. In this case the carpet definitely matched the curtains. Her middle was a little thicker than I expected with just the hint of a mummy tummy, but she wasn't twenty anymore. Her breasts rounded but coming to a point that seemed to curl up, ending in a small pink nipple.\n\n\"Enjoy the view?\" She inquired confident now and in control.\n\n\"Oh, yes.\" I replied, my hands reaching to explore the incredible body that I had enjoyed before but had never seen.\n\n\"Wait up.\" She grabbed my wrists before I got the chance. \"It's my turn to look now.\"\n\nShe began to unbutton my shirt. \"Remember, I'm old.\" I cautioned, feeling inadequate with a naked goddess in front of me.\n\nPausing her work, she looked up at me with an apologetic look, \"you should ignore the rantings of a temporarily insane person.\" \n\nI didn't disturb her further as she made short work of removing my shirt. She ran her hand over my chest, teasing the hair there before moving lower. I didn't have a six pack, but I wasn't fat either. My wife had often described me as wiry. With both hands tucked inside my jeans she squatted down, then unbuckled my belt. With it out of the way and the button fly undone, she looked up into my eyes. She kept eye contact as she pulled down my pants and boxers, even when my hard cock sprung up next to her face. \n\nGripping it with one hand, but still looking at me, she directed it towards her lips. When the head touched them, her tongue flicked out and I groaned as she teased it with light wet strokes. Finally, breaking her trance, she studied the cock in her hand. She lifted it to run her flattened tongue all the way along the underside, from tip to balls and back again. Then opening her mouth, she enveloped my cock driving herself down until her nose hit my pubic hair.\n\nI looked down at the gorgeous creature kneeling before me, naked except for her boots, sliding her mouth backwards and forwards on my dick. I wanted her so badly but not like this, at least not yet. I stepped back, easing her off my manhood. She looked up confused so I smiled and helped her up. Taking her hand, I led her to my bedroom. I pulled her inside and attempted to get her on the bed, but she stopped me.\n\n\"Wait, I want all the lights on,\" she went around both sides turning on the lamps there, as well as the main light in the centre of the ceiling. \"Before, I wanted it dark, it seemed less wrong that way. Now I want to see you.\"\n\nPushing her back on the bed, I once again took in this exquisite woman, reclining with her legs open. Climbing onto the bed I got a closer look, the lips of her cunt peeked through the blonde undergrowth. I wanted to taste her so badly but forced myself to go slow, sliding up and around with my tongue but never quite hitting the spot. Sandy's frustration was apparent as she tried to direct my face to where she desperately wanted it. Giving in to her, I gave her a long slow lick, lingering against her clit. Pulling back, I placed my tongue back down the bottom and started to go again only slower. Sandy was literally pulling my hair, trying to get me up to her most sensitive spot. \n\n\"Stop teasing you bastard, and suck me!\" she screamed.\n\nI went for it, diving in headfirst, going hard and fast. Pushing my tongue inside then sliding up to work on her throbbing clit, before dropping down again to soak up the wetness oozing from her. Sandy bent her knees, placing her feet flat on the bed, so she could thrust up against my head that she now held firmly in place.\n\n\"Oh fuuuuuuck!\" she screamed clamping her thighs around my ears as she withered through her climax.\n\nWhen she calmed down and released my face from her dripping snatch, I moved up so my cock was waiting at her gushing hole. I pushed inside watching her face change as I slipped deeper. In time she was moving with me as I slowly fucked her. Sandy pulled me down to kiss my face. Our mouths met and our tongues began their own battle for supremacy. \n\nMoving faster now, Sandy urged me on, fucking me back wildly, her head thrown back, eyes closed. And then it was there, gushing from me, inside her, as she held me tight. I pulled out and rolled beside Sandy, panting like I was having a coronary.\n\nOnce we calmed down, I rolled towards her and kissed her sweaty forehead.\n\n\"Thank you, for coming here. I'm sorry I couldn't stay...\" Her ginger on my lips stopped my words of explanation and contrition.\n\n\"It's alright Allan, don't talk I have something to tell you.\" \n\nShe took my hand and placed it on her stomach.\n\n\"We're going to have a baby. I'm three months gone,\" she whispered excitedly.\n\nI was in shock, \"but I...you said...you couldn't have children.\"\n\n\"We tried, but Jack had a low sperm count. We had three goes with IVF, but after two successful implantations, I miscarried inside two months. I couldn't go through that roller coaster again and I only wanted Jack's baby, so we decided that we would be childless. I didn't even think of the possibility until...\" I didn't reply. I was still trying to process it. \"Are you okay with this?\" Sandy asked, suddenly unsure.\n\n\"Yes, I think so. It's just a bit of a shock.\"\n\n\"I know it is for me too! Being pregnant and Jack dying, it's been a up and down three months...I want this baby and I decided a couple of days ago, I wanted you too. Will you stay with me this time?\"\n\n\"Yes, oh yes,\" I replied rubbing what was really a mummy tummy.\n\nWe kissed, kissed, and then kissed again. \"There's just one thing,\" Sandy added.\n\n\"Hmm,\" I inquired, my hand now sliding over her breasts.\n\n\"If it's a boy we are calling him Jack.\""
    ],
    "authorname": "CharlieB4",
    "tags": [
        "sex",
        "younger woman",
        "older man",
        "grief"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-big-c"
}