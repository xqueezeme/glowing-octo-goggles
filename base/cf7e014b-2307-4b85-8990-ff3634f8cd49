{
    "title": "Rocket Man",
    "pages": [
        " Hey folks, Mid terms kicked my ass. I spent so much time studying and getting the cars ready for spring that I barely had time to write. Thanks to all who thought enough to write and ask what the hell was taking so long between this one and the last. But really it's only been about three weeks. So let's get to the meat of this one. I have to apologize to all of you who like quick, dirty stories with a lot of sex scenes and very little dialogue, because this ain't one of those. You should probably skip down to another story so both of us can be happy. I am also apologizing in advance to all of the would be Sheldon Coopers out there who will probably be licking their chops with glee as they analyze the story letter by letter to find places where I got the science wrong. I am admitting right now that i got most of the space stuff from google. It's probably all wrong, so please don't waste your time in the comments section explaining to us what an idiot I am when it comes to space travel. Unlike you I have never been to space, but I'm looking forward to reading your story where you tell us how it really is. This is just another story written purely for the hell of it. I am not now, nor have I ever been a rocket scientist, but hey any one of my Mustangs will run rings around your Prius. Lastly, Thanks so much to the great Barney-R not only for editing this and making my scribbles legible, but also for reminding me from time to time that i needed to write something. While I wrote this, we lost one of the greats. And this time we don't need to search for Spock. He's in a better placed. Here we go. SS06\n\n* * * * * *\n\n\"She packed my bags last night pre-flight.\" \n\n\"Zero hour nine AM.\" \n\n\"And I'm gonna be high ai ai ... As a kite by then,\" I screamed at the top of my lungs. \n\nThe laughter in the small space came from the other six members of my crew. \n\n\"Holy shit, Commander. Remind me never to invite you to go karaoke singing with me,\" exclaimed Captain Martin, who occupied the command seat to my right. \n\n\"Remy, you cut me to the quick,\" I said dramatically. However, deep down, inside my mission had been accomplished. \n\nThe reason for my outburst was to lighten the mood. I was sitting on top of a stack of rocket motors with a crew of mostly first timers. The air was so thick with nervousness and genuine fear that you could smell it. Making them laugh with my horrible singing helped to ease that tension. \n\nEvery one of them had been well-trained and was ready for the mission. At least as well trained as you could be on the ground. But let's face it ... Going into space is a whole different animal. They can simulate the environment. They can sit you in a jet and subject you to massive amounts of G-forces. They can put you in a giant underwater tank and have you perform your mission duties thousands of times until you can do it in your sleep. But it's just not the same as being in SPACE. \n\nI'm Jack Daniels, a NASA mission commander. I hold the record for space missions. At 45 years old, I'm the only man in the US or any other space program to serve on more than 20 missions. I'm somewhat of a legend. And I consider myself to be somewhat of a loser. \n\nSure I'm very proud of my successes. I've successfully completed my mission objectives in every God damned case. And some of those were situations where I had to improvise and pull solutions out of my ass to make things happen. The eggheads at mission control had a saying when the job was complicated and absolutely HAD to be done correctly and on time. \n\n\"Send up the Rocket Man,\" they'd say. \n\nThat's me ... The Rocket Man. I think it's a joke. I'm more of a space going or ... Orbital UPS driver. OPS ... Orbital Parcel Service is what they should call us. And that's why I'm a loser. \n\nIt's not really my fault. I was just born in the wrong fucking time. \n\nWhen you think of space, you think of exploration. You think of seeing things that or going to places that human beings have never been. I hate to quote William Shatner, but Captain Kirk said it first and best. I want to boldly go where no man has gone before. \n\nBut I can't because we don't really explore any more. The only space missions we do now involve delivering shit to and repairing that rapidly aging, piece of orbital junk we call the international space station. \n\nAs much as I think Obama got it wrong when it comes to his health-care plan, I have to hand it to him. He has definitely cranked up both the funding and the interest in space exploration. His determination for us to launch a mission to Mars is great. It's just that it came far too late in my career for me to benefit from it. \n\nSo here I am, along with my flight crew, Captain Remy Martin, and Captain Pete Morgan, flying a group of mission specialists from several different countries, up to the ISS to fix the toilets and let them try to grow plants and shit. \n\nSo once again, to get these highly motivated, well trained, extremely bright individuals to stop being nervous, so they could all do their jobs and make mine easier ... I sang old Elton John songs to help them forget that they were sitting on top of what was basically a giant bomb that would soon go off. The first stage alone put out 860000 pounds of thrust. They were all petrified, while I was wondering if this rocket's thrust was equal to my Mustang's horsepower. Sometimes, I wasn't sure. \n\n\"Hey Cassie,\" I said loudly. \n\nA very nervous redhead looked up and made eye contact with me. \n\n\"What does NASA stand for?\" I asked in the cheesiest voice I could manage. Her pale skin flushed, and for a second, I thought I had misjudged her. However, the fire returned to her green eyes, and she glared at me. \n\n\"Need another seven astronauts,\" she laughed. \"That's a horrible joke, commander. Especially right now, sir.\" \n\n\"You're right,\" I said. \"I wasn't thinking that at all. You should be ashamed of yourself, Cassandra O' Reilly. And I was trying to hit on you too! I have terrible taste in women.\" \n\nShe blushed returning even more color to her milky complexion. Cassie was one of those fiery redheads. If you pushed her, she would always push back. I just wanted her cranked up enough to erase her fear, not pissed off enough to make her angry.  \n\n\"So what DOES it stand for, commander?\" she pouted. The amusement in those green eyes alone was so enticing that even without seeing the three feet plus of curly red hair that they had somehow managed to stuff under her helmet, she was extremely beautiful. \n\n\"Need another SEXY AGRICULTURIST,\" I smirked. Her face got even redder as the rest of the crew laughed at us. \n\n\"Why do you need another one?\" she quipped. \"You can't even handle the one you've got!\" \n\nThe crew laughed again this time at me. And before I could continue our duel, the voice of mission control came over the com. \n\n\"All systems go, people. Ignition in ten,\" said the voice of John Walker, who ran mission control. \"Five.\" \n\nA few seconds later, the world began to vibrate and then to shake violently as the rocket built up thrust. \n\nI smiled as I watched the expressions on the faces around me. Morgan and Martin had both been through it before, so while understandably tense, especially after the NASA jokes, they were okay. It was the other four I was worried about. Vladimir Miranov, a member of the Russian space program was fine. He met my gaze with a slight nod. He too had been through a mission or two prior to this one. Terence Dawkins, an aerospace engineer who looked as if he'd be more at home on a basketball court than a rocket was also fine. I had gotten to know him a bit while training for the mission and liked him. He was solid, dependable, and brilliant in his field. The idea for bringing him actually made the most and yet the least sense. \n\nTerry coming along so he could experience a mission would give him invaluable experience and insight when he designed rockets and components for future missions. It would help to set him apart from all the other eggheads who designed and expected us to use equipment that was substandard or just plain junk. \n\nIt would be great to have someone on the design team who actually thought about the people who used the things they designed and built. \n\nHowever, taking Terry up to the space station to look at trying to find ways to upgrade or modify the ISS was silly. That barely flying piece of space junk is seventeen years old. How much has technology changed over the last 17 years? What we really need to do is dismantle it and build a newer, more modern version. \n\nTerry as expected was doing fine. I quickly glanced over next to him and saw panic on Cassie's face. I smiled at her and then pretended to wipe my eyes as if I had been crying. She stuck her bottom lip out stubbornly and then realizing what I was doing, smiled back at me. She gave me the Okay sign and then lurched to the side unexpectedly. \n\nSeated next to Cassie was Nathan Penn. His family were supposedly descendants of William Penn. It was rumored that their family still owned half of the state of Pennsylvania. Penn was a theoretical physicist. I had no fucking idea why he was here. He had probably bought a seat, or made a huge donation to the favorite charity of one of the senators with oversight of NASA. \n\nHis family owned several businesses in a variety of industries from utility companies to pure bullshit and hokum. They even owned a company that specializes in products to make life better for the average person. That company advertised on late-night TV. I thought most of their products were inane. There was the Penn-cil. It looked like a pencil, but you couldn't erase it, and it used ink. The Penn-derizer was used for tenderizing meat. It looked like a hammer except the head was made of wood, and the handle was steel. My favorite of all though, was the shop-Penn bag. It was just like a shopping bag except that it had Penn written on the side of it. \n\nAs I looked at him, I thought he looked a bit nauseated. \n\n\"Nate if you hurl, you're going to be wearing it until we get to the station. \n\n\"I'm not gonna ... Ah ...bleeeaaarrrrrrggghh ... Blauuughhh!\" \n\nCassie turned away, trying her best not to look at him. I leaned back in my seat, trying my best not to laugh. Maybe he should have taken some Penn-a-dryl or a couple of aspir-Penn, before we launched. \n\nThe vibration and shaking increased as we gained momentum. It felt as if the ship was shaking itself to pieces, but it was only the physical forces of mass, acceleration, and gravity all vying for supremacy as we rose into the early-morning sky. \n\nWe heard the sounds of metal creaking and a couple of tiny pings hitting the floor. \n\n\"Holy shit we're all gonna die,\" screamed Nate. \n\n\"Calm down, Mr. Penn,\" I said. \"We're fine the ship is just settling.\" \n\n\"Stop being such a girl, Nate,\" said Cassie. \n\n\"Bleaaaaaarrrrgh,\" was his only reply. Nate's helmet was so full of vomit that it looked like a fish bowl. \n\n\"If you get that stuff in your helmet locks, they'll fail,\" I said. \"We'll probably need a can o-Penn-er to get you out.\" \n\n\"We'll have to use Penn-seal to make sure there aren't any air leaks when his vomit eats through the gaskets,\" laughed Remy. \n\nThen there was a giant clank sound and the ship started to move even faster. \n\n\"Was that the second stage,\" asked Terry calmly. \n\n\"Yep, we should be out of the atmosphere, and the G-forces will stop squeezing us soon,\" I said. \n\n\"That was what made me throw up,\" said Penn. \"It was the pressure of all of those G's.\" \n\n\"That's good to know,\" said Morgan. \"I thought you were just being a giant Penn-sy.\" \n\n\"Shit, I miss the shuttle,\" said Remy. \"Even though they just made this thing, it feels like my granddad's technology. All of this shit about leaving the station and then landing in the ocean makes no sense. I'm a pilot, not a guppy.\" \n\nI looked across the space that separated the glass visor of his helmet from mine and into his eyes. \"Holy shit!\" I laughed. \"You can't swim can you?\" \n\n\"Of course, I can,\" he spat, \"Just not in water.\"\n\n* * * * * *\n\nLiz \n\nIt had been a wonderful dinner at a restaurant the likes of which I'd never seen before. It wasn't that I couldn't have come here if I'd wanted to. As an associate with one of Washington DC's most prestigious law firms, my salary pretty much let me do whatever I wanted. It was just ... Well, no need to dwell on that now. \n\n\"How about one more dance pretty lady,\" asked Brett. Brett Baldridge was one of the junior partners in our firm. He was five or six years younger than I am, but had already made junior partner. At the rate he was going, he'll be a partner in the next year or two and then jump the fence into politics. \n\nHis father and uncle were senior partners in the firm, but they had made him work for everything he got. The firm and the law were just stepping stones for Brett. He had his eye on the Senate and possibly beyond. \n\n\"Why not,\" I said. I was more than a little tipsy, and I knew that dancing was probably not a good idea. However, I would do anything to calm my nerves. It wasn't really nerves was it? It was anger. And as Brett took my hand and led me back onto the dance floor, there was a bit more sashay in my hips and both, he and most of the men around us noticed it. \n\nAs we danced, Brett held me very close, and I allowed it. He probably thought that his charm was finally working on me. He thought that his fashionable two-day beard growth and rugged good looks had finally won me over. The smile on his face told me that in his eyes, I was ripe for the plucking. \n\nHe squeezed me even closer, and I laughed. I could feel his boner, a fully hard one forcing itself into my stomach. I laughed again as we swirled across the floor without a care in the world. I noticed the people around us watching. The handsome, young Washington lawyer and his beautiful date. I wondered if they could tell that I was older than Brett. \n\nI've always been pretty. I've always been tall and thin. My long almost ash blonde hair seemed to draw men to me from an early age. I laughed as Brett tried to dip me. It was hard for him because I'm as tall as he is. And let's face it Brett is only a warrior when it comes to the law. He looks really good rocking a two thousand dollar suit. But it looks good because of the cut, not the body under it. \n\nDoing a dip requires that the man be able effortlessly to support the woman's weight. And even though I'm not very heavy, Brett had to increase his leverage by supporting me closer to my center of gravity. That meant that instead of holding my lower back, he ended up holding my ass. I laughed loudly. I guess I was more tipsy than I thought. Especially since I felt my long hair sweep the floor, and I continued downwards in the flamboyant movement. I later saw pictures that indicated both the presence of Brett's hands on my ass in a public place in full view, and how close the back of my head came to splitting open on the marble floor. \n\nAs I looked across that same dance floor and restaurant. I noticed that most of the people there were staring at us. There was one gray haired, shriveled old man who was paying particular interest in our every move. \n\n\"Why is everyone staring at us?\" I asked. \n\n\"That's easy,\" he said. \"You're like a model. You're the most beautiful woman in this place. And they all wish they were in my shoes. They all wish they could be with you. They all wish they were the one holding you this closely. They all wish they were the man who got to kiss those lips ... Like this.\" He lifted me up pulled me in closer and planted his lips on mine. \n\nSome of his flattery got to me. And awash with a potent mixture of anger, liquor and my susceptibility to flattery, I let him. I knew I shouldn't have, but I did. After all Brett at least wanted to be with me. Brett appreciated my work. That was the main reason we were here. \n\nTwo colleagues celebrating another victory in court, on a night when I simply could not stand to be alone. The loneliness and the uncertainty always threatened to destroy me on nights like this. I knew what I had signed up for. I knew what I would go through. However, somehow instead of getting used to it, it got worse every God damned time. \n\nAn hour and several more drinks later, I was feeling no pain. Brett finally grabbed our coats, paid the check, and took us out of there. We ended up back in my house. We danced more, drank even more, and got comfortable. Sometime in the early-morning Brett started taking off his clothes. In my drunken state, it seemed only normal for me to also take off some of mine. His body was scrawny for a thirty two-year-old man, and I laughed. \n\nThe funniest part was that he was wearing Scooby Doo boxers. He came over to me and danced me around the room again. I was so drunk I would have done almost anything. \n\n\"Do you know what this is?\" he asked me in a playful voice. I nodded my head. \n\n\"It looks like a dick, only it's smaller,\" I said. \n\n\"I'm average size,\" he spat angrily. \n\n\"I didn't mean to hurt your feelings,\" I laughed. \"But I've actually only seen one of those in my entire life.\" \n\n\"You didn't hurt my feelings,\" he smirked. \"You hurt HIS feelings. Do you want to make it up to him?\" \n\nI nodded my head several times. \"Well then, you have to suck it,\" he said. \n\nI walked over to him and took his little dick between two of my fingers. Even in my drunken state, I noticed that there were several things that didn't add up. I had done this same act many times before, but it felt odd. Somehow I knew what I was doing was wrong, but I wanted somehow to inflict a dose of pain on the person who had hurt me. \n\nAnother thing was that whenever I had done this before, my nostrils had taken in the musky odor of an aroused man. The organ I held in my hand usually throbbed with desire for me and even holding it, I knew that it would fill me and stretch me to the point of no return. I didn't feel any of that. Brett's dick was more like a joke. I popped it on my mouth and the only thing I smelled was his over dose of cologne. \n\nI instantly deep mouthed him in one gulp. I say deep mouthed because his dick wasn't long enough to reach my throat. It didn't get any fatter or any longer no matter how hard, or how long I sucked on it. And that struck me as funny. \n\n\"Can you actually fuck with this little thing?\" I giggled. I found out. Brett fucked me three times. The last time he fucked my ass. Only one man had ever done that before. and it had hurt but over time I'd grown to appreciate the pain because of how much pleasure it gave him. But this time there was no pain. I laughed the whole time; I barely felt a thing. \n\n\"The women on the office are sooooo full of shit,\" I yelled. \"And all of this time I thought I was missing out on something.\" \n\n\"Yeah well, most forty-year-old women are kind of jaded,\" he smirked. \"I think it's because they're so close to menopause and their pussy drying up and becoming useless toothless old whores.\" \n\nI was shocked. His words took some of the drunk ones out of me. \"I'm not ...\" I began. \n\n\"I got your record from personnel,\" he said. \"I know everything there is to know about you. You'll be forty one three weeks from Tuesday. Pretending to be young doesn't make it true. All the face lifts and tummy tucks in the world can't stop the hands of time grandma.\" \n\n\"Well, for a young hot stud, you suck in bed. Even with your microscopic dick, you have no idea how to make love to a woman. I didn't cum,\" I shrieked. \n\n\"Too bad for you,\" he said. \"I did. I did four times. Once when you blew me, you really know how to suck a dick. You must have lots of practice. I came in that big old, loose pussy of yours twice and once up your tight little ass. I got mine. Now while we're on the subject. I wasn't making love to you. I was fucking you. The same way I'd fuck some downtown streetwalker. You treat a whore, like a whore and that's all you are to me. Actually, you're lower than that. You were just the last name on my list. You were the only bitch in the firm that I hadn't fucked.\" ",
        "Shock and disbelief went through me. Suddenly, I was no longer nearly as drunk. \n\n\"The last one,\" he continued. \"Every partner, junior partner, associate, secretary, steno, paralegal, and cleaning woman has given me a taste. I wish I could say that I saved the best for last, but that would be an out-and-out lie. But hey, ya win some; ya lose some. Mission accomplished.\" He started looking around for his clothes. He gathered them up and started putting them on. \n\nHe got to the door with his pants and shirt on. He was holding his tie and jacket in the crook of his arm. \n\n\"The best thing about this,\" he said. \"Is that no one ever needs to know about it, right?\" I nodded as tears began to fall from my eyes. \n\n\"I trust that we can still enjoy a thoroughly professional working relationship around the office, can't we,\" he asked. I nodded again. He smiled again, and I wondered what I had ever seen in him. What the fuck was it that made him seem to be so God damned charming? \n\nThen I realized that I had been played. He had simply sensed my weakness and unhappiness ... No ... I wasn't really unhappy. I have never been unhappy. What he sensed was my anger and my ... Fear. \n\nHe opened the door and stepped out into the early-morning darkness. Well, he tried to. He was shoved back into the house by two men who looked like they belonged on the defensive line of an NFL football team. \n\n\"How many doors does this Damned Castle have, Ma'am,\" asked one. \n\n\"Hey, do you have any idea who I am,\" snapped Brett getting over the shock of being manhandled. The two bruisers, one of whom was white with close cropped blond hair, and the other was black with close cropped black hair looked at each other. They had probably worked together for a long time because no words were necessary. \n\nWhile the black man repeated his partner's question to me, the blond one stuck his arm out. That was really what it looked like. It was an almost casual movement. Both of the men looked like tanks in suits. The arm that suddenly extended was almost the size of Brett's waist. I could hear the seams in the suit he wore protesting with the sudden movement. Brett suddenly flew across the room. \n\n\"The senator wanted you in one piece,\" he said. \"He never said shit about you being conscious.\" \n\nThe black man shook his head at his partner's words. \"Yeah, I know,\" said the blond man. \"As soon as we get back, five bucks in the swear jar.\"\n\n\"Can you please tell me what's going on?\" I asked. \n\n\"Did you hear that?\" the blond man asked Brett, who was holding his nose in hands. \"That's the way you should be acting. Keep things calm and cool.\" \n\nThe black man turned and spoke to me. \"We don't actually know the full details, Ma'am,\" he said politely. \"But Senator Cargill would like a word with the two of you.\" \n\n\"Senator Cargill as in the most powerful Senator in Washington,\" asked Brett. \n\nBoth men nodded. \n\n\"When is this supposed to take place?\" I asked. \n\n\"First thing tomorrow morning,\" said the blond man. It was then that I noticed the iPhone placed in front of the huge 75 inch curved 4K television set. It reminded me that sometime tomorrow morning I'd be receiving a very important call. \n\n\"Don't worry, Ma'am,\" said the blond bruiser. \"All important calls will be routed through to you.\" \n\n\"Great,\" I said. \"There are no exits from the second floor except to the balcony over the pool in the back. I'm too old to jump or climb down to that concrete pool deck, so I'm going up to sleep in my bed. I have a lot of liquor to sleep off and some bad decisions to think through.\" \n\nBoth bruisers nodded. \n\n\"Hey what about me,\" yelled Brett. \n\n\"You can sleep on the floor,\" I said. \n\n\"Fuck you,\" he sneered. \"If you won't give me a guest room, I'm sleeping on this couch.\" \n\n\"Gentlemen,\" I said to the bruisers. \"I would prefer it if Mr. Baldridge kept his slimy ass off of my furniture. Can you at least do that for me? Help yourselves to coffee and anything else in the kitchen you'd like.\" \n\nBrett sat down on the edge of the sofa. The blond man smacked his fist into his other hand and Brett leaped off of the sofa as if it was on fire. \n\n* * * * * *\n\nJack \n\n\"I miss the Earth so much, I miss my wife.\" \n\n\"It's lonely out in space.\" \n\n\"On such a timeless flight.\" \n\nThe usual thing to do on a mission like ours was to sleep. The mission specialists would sleep or try to for most of the trip to the station. The flight crew would rotate napping. Truthfully, we all could have gone to sleep. The capsule was pretty much guided from mission control. We were only needed if, for some reason something malfunctioned, or we got off course. \n\nHowever, space travel did have its share of dangers that were faced nowhere else. For one thing, we were prisoners inside the capsule. Without our oxygen supply, and life support, we wouldn't survive for very long in the cold, dark vacuum of space. As I looked out into the universe, I felt many things. I was amazed at just how bright the stars seemed to be away from the earth. I was amazed at exactly how small we are when compared to the almost infinite size of the universe. And I felt loneliness. \n\nI think it was then that I decided that this would be my last trip. The rocket man would settle down. I'd take a long vacation and see some of those tropical places that Beth and I had always dreamed of seeing when we were young. We were actually still young. We were just an older version of young. To me, Beth was still the most beautiful girl I had ever seen. And I had short changed her in our lives. I was always out exploring this or that, when all she ever wanted was to keep her feet planted on earth. \n\nIt kind of reminded me of that old KISS song lyric. \"Beth I hear you calling, but I can't come home right now.\" \n\nIt was almost as if I had grown up while I looked out at the nothingness. Beth hated to watch me take off. The challenger disaster from so many years ago had shaken her to her core. We always argued just before a mission, and the closer the launches got, the angrier she seemed to get. However, as soon as I was back, she was right there with me, making up for lost time. \n\nI got my iPad out of a storage locker. I decided to make a video for her. I guess it would be kind of like a selfie from orbit. I figured out what I wanted to say and figured out two ways to get it to her. The first possibility would be if I could hook into the Wi-Fi on the station. There was wireless communication between devices on the capsule too, but I had no way of knowing how to hook into it. \n\n\"Beth, Honey, I love you. And I'm coming home,\" I said. \"And this is the last time. This is my last one.\" \n\nI recorded my heartfelt words and tried to play it back. I didn't want anyone else to hear what I had said, so I spoke softly and kept the volume down as I played it back. Or as I tried to. \n\nI need to point something out here. I'm a pilot. I'm an aerospace engineer. I work with some of the most high-tech equipment in the history of mankind. BUT ... I have to admit that I have absolutely no idea how the fucking iCloud works. \n\nI do know that my iPhone back on earth and the iPad I had on my lap were linked. So that pictures or videos shot on one automatically went to the other. But the nearest thing I could figure was that as I tried to play back the video I had just made, it somehow told my iPhone back on Earth to start recording as well. That had happened to me a couple of times before. I usually got recordings of a wall or the inside of my pocket. However, this time it was different. \n\nThis time as I hurtled through the emptiness of space with nothing but Beth on my mind; my iPhone sent me video of my Beth fucking some guy in our living room. I've heard that there are men out there who are turned on by the thought or sight of their wives with other men. I clearly am not one of them. As horrid as the video was I couldn't turn away. \n\nI saw Beth, suck this guy's junk. It made me want to vomit. He fucked her at least a couple of times, and he even fucked her ass. Beth and I had been married for over twenty years, and I had only been allow to do that a few times on special occasions. The one thing that was merciful was that there was no sound. I don't think I could have taken listening to the sounds of the pleasure she was having with him. The smile on her face throughout it, told me more than enough. \n\nI shut the iPad off, and the tears began to flow. Once we'd left the atmosphere we had all taken off our helmets and heavy suits. I watched as several tears rose into the air intearsat ro gravity of space. As much as I tried not to a few very soft sobs escaped my lips. \n\n\"Commander, are you okay,\" asked Cassie. \n\n\"I'm fine,\" I said trying my ass off to make my voice sound as normal as possible. \"I'm just in awe about how beautiful it is out here.\" \n\n\"Sorry,\" she said. \"I've heard there are weird echoes out here because of the lack of air for sound waves to travel on. But for a second, it sounded like you were crying.\"\n\nI started laughing. \n\n\"I just wanted to know if I could help,\" she said. \"You know ... Make you feel better?\" \n\n\"Oh my God,\" I snorted. \"Cassie, are you really hitting on a man who's almost old enough to be your father?\" She folded her arms across her chest and stuck her lip out. \n\nFor a while, I sank back into my seat and thought about things. I could not for the life of me figure out where I went wrong. But then I tried to see things from Beth's perspective. She literally hated what I did. I couldn't understand it. We grew up together. She had always known that I wanted to be an astronaut. She had encouraged me to go for it, just as I had encouraged her to go to and had paid for her to go to law school. \n\nI hated the idea of her parading around with her tight little ass in one of those pseudo business suits with the short skirt. I hated the idea of her working with all of those sleazy Washington lawyers. But, I trusted her. I trusted her with my heart and soul and look what I got for that trust. After that I began to wonder exactly when she had begun cheating on me. I tried to look back and figure out when things changed. Could it have been when she simply stopped coming to the launches? \n\nIf that was the case, then this shit had been going on for five years or more. And the thing that bothered me the most about it was that if she was tired of me, all she ever had to do was to say, \"Jack I want a divorce.\" \n\nI would have given her anything and everything she wanted. The more I thought about it, the angrier I got. Fuck that bitch. \n\n\"The station should be in sight, people,\" the voice of mission control sounded out through the speakers on the control console. And it was. \n\nFrom where we were the shuttle appeared as just a very bright light in space. Our relative orbital speeds made it seem as though the station was moving relatively slowly. However, it was moving at more than 10,000 miles per hour around the earth.  \n\nThe shuttle orbited the planet every 92 minutes. We were exactly on time. The mission thus far except for my personal tragedy was a good one. \n\n\"Rise and shine Specialists,\" I said in my most booming voice. \"Time to earn your keep.\" \n\nTerence was the first up. He suited up and then helped Cassie. Vladimir was involved in an argument with Nathan Penn, who had tried to switch helmets with him. \n\n\"I can't use this thing,\" yelled Penn. \"it smells awful.\" \n\n\"We told ya not ta upchuck in it,\" smirked Remmy. \"But you can always go without it.\" \n\n\"Remmy, you've got the controls,\" I said. I climbed back into my heavy space suit as he nodded. Then we switched, and I watched the shuttle as he suited up. The capsule had an airlock. So we should be safe even if the docking maneuvers went wrong, but we were better safe than sorry. \n\nMission control walked us through the process of docking with the station. I guess I make it sound easy, and we had done it so many times that it was. We simply matched speeds with the station and then lined up the capsule's airlock with the docking port on the shuttle. Once we touched, a mechanical lock was engaged, and the two orbiting bodies became one. \n\nI could tell that Cassie was a bit apprehensive about leaving the ship. Going through what basically amounted to an aluminum tube into a different environment could be frightening. \n\n\"Don't worry we're all going,\" said Captain Morgan. \"You guys are staying for two weeks until the next ship comes along to take you home. I think it's a Soyuz. But, the three of us will take turns going over to the station before we head for home. We can \"phone home\" from there. The news media eats that kind of stuff up. \n\n\"Who's going first,\" asked Penn. \n\n\"I will,\" said Terry. \n\n\"Why do you get to go first,\" whined Penn. \n\n\"Okay, you can go first,\" said Terry. \n\n\"Are you out of your Vulcan mind,\" asked Penn. \"I'm not going first. I've seen this God damned movie too many times. Whoever goes first dies. If he doesn't, then it's whoever goes last. One of the flight crew has to stay in the capsule that means there are six of us going. I'll go forth, or fifth.\" \n\n\"Who elected you president,\" asked Remy. \"Look I'll go first to make sure everything is correctly attached. That way, I can speak with my wife and my boys and come back so the commander can call that hot wife of his before we drop back to earth.\" \n\n\"I'll go second,\" said Captain Morgan. \n\nTerence and Vladimir agreed to go third and fourth. \"I'll go last,\" said Cassie looking at me. \n\n\"Take your time guys,\" I said. \"I have to arrange some things with mission control. I think I'll pass on the phone home thing.\" Remmy and Morgan looked shocked. As soon as the docking procedure was done they opened the airlock door and walked across the small tube of the docking port. \n\n\"Hot wife, huh,\" said Cassie. I didn't know what to say to her. She seemed out of sorts at discovering that I was married. I was surprised that it hadn't come up before. As I turned to her, I saw it out of the corner of my eye. Terence and Vladimir had just gone into and through the docking port. Nathan Penn was in the port when suddenly we heard a giant clang. \n\nI believe that Cassie thought the noise we heard was the sound of the airlock closing on the other side, so she could go through. But it wasn't; it was a large piece of space junk that I had seen out of the corner of my eye, traveling at a high rate of speed had slammed into the docking port ripping it from the side of the station. It has also separated the capsule from the station. \n\nCassie had simply stepped out into nothingness. The airlock was destroyed, and Nathan Penn's bloody body went floating out into space. Cassie grabbed for anything she could get. As she did so, I saw Nathan Penn's cracked helmet float by. His body followed it on the same trajectory. A look of \"I told you so,\" was frozen on his dead features. \n\nMy biggest problem was Cassie. I had no choice. I fired the maneuvering jets and inched closer to her. I had to be really damned careful cause if I accidentally tapped her, I would kill her. \n\nI could still hear her screaming over the comm links. \n\n\"Cassie, just relax,\" I said. \"I've got you.\" \n\n\"Okay,\" she said, calming down at the sound of my voice. \"You were right. It really is pretty out here.\" \n\nI turned the ship until I thought that what was left of the docking bay was pointed towards her. I grabbed one of the very sturdy lines that we used for emergency space walks and secured myself. \n\n\"Jack, what the fuck are you planning,\" screamed Remy. \"Jack, none of that cowboy shit! If you hit us we're all dead!\" \n\nI realized then that Remy was so worried about me hitting the station that he failed to realize that Cassie was out there and still alive. I gently goosed the maneuvering jets again, moving the capsule even closer to the station. It was like performing brain surgery with a wrench. \n\nAnother thing I had to worry about is that there are no brakes. When the jets stopped thrusting, I would continue moving in that direction, unless I used a jet to go in the opposite direction. But that wasn't what I had in mind. \n\nLooking out the view window, I saw that I had almost caught up to Cassie's rapidly moving form. I guess a sane person would have slowed down then, but to what end? I no longer had an airlock. The space debris had destroyed it. \n\nSurprisingly, Cassie wasn't screaming like the men on the station. Just before the capsule reached her and slammed into her, I left the controls. I crossed the small space to the doorway, even though the outside door of the airlock had been destroyed. And just before the heavy capsule slammed into her, I did the least logical thing possible. I opened the hatch. \n\nI had clipped my suit to one of the heavy cables we used when doing space walks and latched the other end to one of the internal support beams. I left only enough line for me to reach the hatch. As I expected the air hissed louder and louder as the pressure was released and my life-giving atmosphere vented into the vacuum of space. I reached out and snatched Cassie's arm before the buildup of escaping air pushed her farther away from me. I then closed the hatch. \n\n\"Jack you asshole ... You could have killed us all! Good job,\" screamed Morgan over the com link. \n\n\"Jack check the capsule for exterior damage,\" said the voice from mission control. \"Your O2 scrubber seems to be malfunctioning.\" \n\n\"Oh, it's fucked,\" I said. \"The same chunk of debris that hit the airlock and docking port damaged that side of the capsule. It's why my flight to get Cassie was so erratic. I have no maneuvering jets on that side either.\" \n\n\"Then how the hell did you manage to ...?\" he began. \n\n\"It's like drifting a Mustang,\" I said. \"You can't really control all of that power. So you just learn to use the fact that it's out of control. After a while, you get so accustomed to it that when the ass end breaks loose in the turns, you go with it and use it to make that beast turn better.\" \n\n\"So what's your next move,\" asked Remy. \n\n\"I'm gonna maneuver this busted ass ship around to the docking port on the other side of the station,\" I said. \"This won't be easy, so give me some time.\" \n\nIt took me nearly an hour to move around the station. My erratic movements were hampered not only by the fact that I only had maneuvering jets on one side of the capsule, but by the fact that if I hit the station, I could damage either the station itself or our capsule. \n\n\"Jack, there's another problem,\" John Walker's voice from Mission Control was quiet. I already knew what he was thinking, and I was ahead of him. \n\n\"Jack, there were already five men on the station,\" he said. A normal crew is six. We have had up to ten people aboard for a period of up to ten days. You are leaving the four specialists there and would have brought the total up to nine. It would have been cramped but survivable. Adding your crew to that total ... Even with Penn's unfortunate demise would put that total at eleven. Jack those are not survivable numbers. Right now, everyone on earth is working toward a solution, but it is not good. The men aboard the station were scheduled to be there for three weeks. Your specialists were supposed to be there for a month. \n\nIt will take us at least two weeks to get a rescue ship to you. We've all got our thinking caps on but ... It ... It doesn't look good. If you do the math ... You might've been better off ... At least it would have been quicker for ...\" \n\n\"Wow!\" I said. \"I guess there's a first time for everything. I'm supposed to be the \"fly it by the seat of his pants pilot.\" And you're supposed to be the rocket scientist. How the hell did you get this one wrong? I can't believe that I've figured out something that all of you eggheads with your computers and calculators missed.\" ",
        "\"What did you figure out,\" asked Walker. \n\n\"Later Johnny,\" I said. \"I have to concentrate on driving. Remy do you still have your suit on?\" \n\n\"Of course, I do,\" said Remy. \"Shit, the way you're flying that bus, even the guys who were stationed here have started putting their suits on. One bad bump and we could be venting our atmosphere.\" \n\n\"Remy all I need you to do is open the air lock, Dummy. Even an average pilot like yourself can handle that,\" I smirked. \n\n\"What do I do after that?\" he asked. \n\n\"Don't worry,\" I said. \"Cassie will tell you what to do next. I'm filling her in as soon as you shut up, so I can run the numbers.\" \n\nThe jets hissed as I adjusted them and fired short bursts, it took constant corrections to move the capsule close to the docking port. \n\n\"Commander ... Jack ... You saved my life, you know,\" said Cassie. \n\n\"Get ready Cass,\" I said. \n\n\"What am I going to do?\" she asked. \n\n\"You're going on the shortest space walk ever recorded,\" I said. \"I'm thinking it's going to be about a foot from the open capsule door to the airlock. When I get this in position, it's going to be very tricky keeping this thing from crashing into the station, so you're gonna have to be quick. Can you do it?\" \n\n\"Of course,\" she said. \"And what do I ...?\" \n\n\"Remy open the outer airlock door and step back,\" I yelled cutting her off. \n\n\"Shit Jack,\" he screamed. \"You're gonna crash.\" \n\n\"Remy Martin, I thought you were supposed to be smooth. You're acting like an old lady. Just get that God Damned door open,\" I yelled just as I fired the jets to reverse our momentum. \n\n\"Cassie, Open the door and jump,\" I yelled. She quickly did exactly what I told her to do. \n\nRemy closed the outer airlock door as soon as she was aboard. \n\n\"I got her Jack,\" he crooned. \"Not bad for an AVERAGE pilot huh? Now how the hell do we get you over here so we can hear this brilliant idea of yours to make the air last. Terry has an idea. He thinks he can hook the capsule's O2 scrubbers to the station to bolster our life support and make it so all of us can ...\"\n\n\"It won't work Remy. The capsule's system was destroyed as soon as the wreckage from the docking port hit it. There's no air over here. I'm in my suit ...\" I began. \n\n\"Then why did you ever open the ...?\" he began. He waited for a while, clearly thinking about things. \"Jack that was some really tricky flying you did to get Cassie over here. How the hell are you going to keep that pile of trash steady enough for you to come over without it crashing into the station?\"\n\n\"Just watch,\" I said as the capsule began moving further and further away from the station. \"Cassie, LLAP. Remy, you, and Captain Morgan take care of each other. You're the best NASA has and two of the bravest guys I ever met.\" \n\n\"Shit, neither of us will ever be the best Jack. Not as long as you're ... Jack, what the fuck are you doing? Why are you turning ...!\"\n\n\"Remy don't make a stink about this,\" I said. \"The eggheads had it right. There's just not enough air for all of us. Either ten of us barely survive or we all die. I'm going with the ten. I'm just not going to be one of you.\" Then I turned off the communications feed from the station. \n\n* * * * * *\n\nLiz\n\nThe next morning as I awoke; I felt off. I immediately realized the situation and dressed. There was no one outside of my room. I walked down the stairs and saw the two huge men still there. \n\nBrett was still curled up in the corner of the room using his jacket as a makeshift blanket. \n\n\"Does anyone want coffee?\" I asked. \n\n\"That would be good, Ma'am,\" said the darker of the two bruisers. \"The senator should be calling at any moment.\" \n\nI quickly made coffee and poured three cups. The two men had theirs at the table. I had mine in the kitchen. A few minutes after I began sipping my coffee, one of the men answered his phone. I never heard it ring. He just pulled it out and started talking. \n\n\"We're on our way,\" he said closing the device. The two of them stood up, and I grabbed my keys. I didn't bother with a purse because I wasn't sure what I would be allowed to carry. \n\nThe blond man grabbed Brett by his shoulders and yanked Brett to his feet. As soon as the man let go Brett collapsed again. As he hit the floor, he regained consciousness. \n\n\"Huh? Whuh?\" he said. He looked around the room, and recognition dawned in his eyes. \"Is that coffee?\" \n\n\"It is,\" I said. \"Coffee is great ... first thing in the morning especially. It really helps to wake you up. That shot of caffeine gets the brain working on all cylinders. Too bad you can't have any.\" \n\nThe two men propelled him out through the open door, and into a waiting SUV. We were forced to sit next to each other. \n\n\"You seem awfully perky,\" he said.\n\n\"You look ridiculous,\" I said in reply. \"You need to look into a mirror. Your hair is standing straight up on your head like one of the members of a boy band. You have a line of dried drool all over your beard. And those thingies in the corners of your eyes. Your shirt is wrinkled, so are your pants, and that jacket is ruined. I hope someone sees us. Your reputation is about to take a hit.\" \n\n\"Fuck you,\" he spat. \"Oh shit,\" he said, slapping himself on the head. \"I already did. That's where all of this animosity came from.\" As they walked us in the back door of a downtown hotel, he continued to mouth off. \n\n\"Are you really worried about my reputation?\" he asked. \" ... Or your own? I mean I have a reputation as being a pussy hound. But you ... You're supposed to be the wife of a fucking astronaut ... That's it!\" he suddenly laughed. \n\n\"Your ... Ha, ha, ha ... Your husband is an astronaut. And I'm ha, ha, ha ... An ASS-tronaut. You kept telling me that no one had ever gone there before ... Ha, ha, ha.\" \n\n\"You act as if what you did is something to be proud of,\" said a voice from just outside of the room. \"When in all actuality, it is the most heinous, most craven act of cowardice, there is.\" \n\n\"I saw it all the time during the war,\" he said. His rich melodious voice preceded him into the room. \"I was just a boy. I was brimming with energy and eager to go overseas to do my part to protect the country I loved. I saw all of these brave, strong, upstanding young men rushing off to serve and defend the country as I wanted to. I also saw the snakes who were too weak or too cowardly to go themselves, but who took advantage of weak or simple-minded women while their husbands were away.\" He spat right onto the floor in front of Brett. His spittle splattering on Brett's polished eight hundred dollar shoes, told us what he thought of Brett. \n\nThe man was barely five feet tall. He used a cane and hobbled. His spine was extremely kyphotic. Whether it was from injury or just old age, I couldn't tell. However, he hobbled proudly. He wore his injury like a badge of honor. Power flowed outward from his bent form. His eyes glowed as if the power inside of this man was too much to be held in. \n\n\"Senator Cargill ... Sir ... I,\" sputtered Brett. \n\n\"There aren't many heroes left,\" continued the old man as if he hadn't heard Brett. He spat again and this time the spittle landed on Brett's pants. \"And the few we have ... those few people who can take the minds and imaginations of the country ... Maybe even the world ... to places we can only imagine are Damned few. Let me ask you this, you fucking moron ... How many people can you think of who actually make you proud to be an American?\" \n\n\"Well ... I ...\" began Brett. \n\n\"Shut up, you pissant little bitch,\" spat the senator before Brett could finish. \n\n\"That's the problem with your generation,\" continued Cargill. \"You can only think as far as your own selfish wants. The law used to be a respected profession, but look at what you've done to it. Fifty years of ambulance chasing, litigation mongering, money grubbing assholes, who only wanted to get rich, have destroyed the profession. On the scale of respectful careers, the law has steadily decreased until we finally rank beneath undertakers ... At the bottom of the list. And politicians ... We're just as bad.\" \n\n\"I have no idea what your father ever saw in you,\" he said, causing Brett to suck in a breath. \n\n\"You've met my ...\" he gasped. \n\n\"I gave your grandfather the money to start your firm. My family trust still benefits from its profits, though I personally have no connection to it. Where was I? ... Oh yes ... Heroes. The only ones we have left that aren't the subject of constant denigration ... People hate cops, these days, they hate our soldiers; they hate the drug companies and shit boy; they barely even trust the doctors to try to treat them. However, for some reason, they still believe in our spacemen.\" \n\n\"The astronauts you were just belittling are the last true explorers we have. They bring out that spirit that all men have to go places and see things, where we as a species ... Where humanity as a whole has never been. Do you know who her husband is? The man has been to space more times than any human being in history. He is respected all over the world. Shit when we get UN ambassadors from countries whose names you can't pronounce visiting Washington; most of them know who he is. Those are the kinds of men, we need to restore respect in politicians. Not cowardly, backstabbing, backroom creeping little pissants like you.\" \n\n\"But ... I,\" sputtered Brett. \"It wasn't anything serious. It was just ...\" \n\n\"Shut up and talk into the phone,\" spat the senator. \"Your career change has been arranged.\" He held out a phone to Brett in an extremely strong looking hand. The sight of the phone made me laugh. It was hard to believe that one of the most powerful men in the Senate ... In the country and probably the world, still used one of those early 90's flip phones. \n\n\"Who ... \" asked Brett cautiously. He placed the phone against his head. \n\n\"Hello,\" he said tentatively. We heard the voice on the other side. The senator must have been hard of hearing because the volume from the phone's earpiece was so loud that we could all make it out. \n\nI recognized the voice instantly as Brett's grandfather, the chairman emeritus of our firm. \n\n\"Brett, as soon as you get home, I want you to order a tractor,\" he said. \"And make sure ...\"\n\n\"Granddad, I don't know anything about tractors,\" said Brett. \"And I'm too busy right now, to ...\" \n\n\"Right now, your primary responsibility like every other farmer, is spring planting,\" screamed the old man. \"You'll be assisting your uncle Cletus on the family farm in Arizona.\" \n\n\"But I'm not a farmer,\" whined Brett. \"I'm a lawyer. I don't know anything about ...\" \n\n\"Not anymore, boy,\" said the old man. \n\n\"What,\" asked Brett. \n\n\"We had such great hopes for you, Brett, your father and I,\" said the old man. \"You were going to be our shining star ... Maybe even president. But you damned near destroyed us. How many times have we warned you ta keep it in your pants?\" \n\n\"Last night, you made a spectacle of yourself in a public place. Who do you think was supposed to be your backer, your mentor? Who was the person we were going to get to help you make that step into politics? Were you going to run for dog catcher and then the school board in some tiny town? You'd never get to be president that way. It would take you forty years to get to be a senator then. By the time you were ready seriously to consider running for president you'd be almost a hundred. And people don't really trust career politicians any more. \n\nYou need to start building up that trust and that political charisma early on. It takes one of two things to get into the public consciousness on the political scene, Brett. It takes either a hell of a lot of money, or a combination of money and power. Shit, everybody knows Oprah got Obama elected. \n\nSenator Cargill was going to do that for you. Unfortunately, the first time he sees you out on your own, you're acting like a drunken playboy while all kinds of people took pictures of it. Luckily, the senator managed to use his influence to make sure that none of those pictures or videos got out. Luckily, everyone uses cell phones. The senator made a few phone calls and there was a fake terrorist reported on the loose in that restaurant. No one was apprehended or detained, but everyone was forced to go through a security check when they left. They had to go through a metal detector. But, it really wasn't a metal detector. It wiped out the pictures and video files on all cell phones while leaving print or text information intact.\" \n\n\"So if no one knows, then why can't I have a second chance,\" whined Brett. \n\n\"Because what you did displays an alarming lack of character,\" sneered the senator. \n\n\"But I'm a lawyer,\" said Brett. \"I don't know how to do anything else.\" \n\n\"This would be a good time to learn,\" said Brett's grand dad. \"Because you're not a lawyer any more. Besides being let go by the firm, you were brought up on ethics charges in front of the bar.\" \n\n\"For what,\" hissed Brett. \"An office romance gone wrong with one old woman.\" \n\n\"Actually, there were several,\" Grandpa Baldridge said. \"Several from our firm and even a few clients. Any one of the clients could have caused a great deal of problems for the firm. That was why you were terminated immediately and with prejudice.\" \n\n\"But what about the ethics board,\" asked Brett. \"I'm allowed to speak in my own defense. I'm allowed to answer to the charges. Maybe I could get it dropped down to a suspension with a heavy fine and some sort of probation. Doing all of this overnight, without notifying me is illegal. How can they take my license behind my back like... \" \n\n\"Like some cowardly guy who fucks other men's wives behind their backs,\" asked the senator. \n\nTears rolled down Brett's cheeks. \"Who hates me that much?\" he bawled. \"Who hates me enough to stir up this kind of shit?\" He suddenly looked at me. \n\nHe looked at me as if he wanted to rip my head off and shit down the hole. \n\n\"Your husband ...\" he screamed. \"The Fuckin' Rocket Man ... He did this! I thought it would be a kick to have you. So every time they talked about him on the news or shot him up into space, I could look at him and think ... I fucked his wife. But somehow he knew. He found out, and he destroyed my career. He destroyed my career over a fling with an over the hill barely competent housewife of a lawyer ... Do you see what you've done. I could have been a senator. I could have been president. I could ...\" \n\n\"You could shut the fuck up long enough for me to tell you it was me,\" said Senator Cargill. I breathed a sigh of relief. \"Commander Daniels has no idea about what went on. And right now he has enough problems on his hands.\" Hearing that Jack had no idea about my mistake made me feel even better. \n\n\"Perhaps, although they weren't meant that way, my actions will serve as a last gift to a dying hero,\" said Cargill. \n\n\"What are you talking about?\" I asked. I closed the distance that separated me from the old man. \n\n\"I was sure you would have heard by now,\" he said. \"It's all over the news. The current space mission has gone bad. There was already one death. Your husband saved the life of another of the mission specialists. But his own life is in serious jeopardy. In fact, he may already be dead. However, he died a hero. He died saving the lives of the other members of his crew and the station crew.\" He was serious. My greatest nightmare had just come true. I suddenly lost consciousness. \n\n* * * * * *\n\nJack \n\n\"Mars ain't the kind of place to raise your kids.\" \n\n\"In fact, it's cold as hell.\" \n\n\"And there's no one there to raise them. If you did.\" \n\nAs the capsule drifted away from the station getting farther away with each passing second, I relaxed. I looked out the window and thought about Mars. I always thought about Mars. Realistically, I knew I'd never go. It wasn't anything I had done or anything I hadn't done. I was just born too soon. We didn't have the technology currently to make the trip. It was simply the luck of the draw. \n\nHowever, in the back of my mind, I felt cheated. I guess it was my upbringing. I was so conditioned to believe that if you bust your ass and work hard enough, you can accomplish anything. So based on how hard I had worked, Mars should have been mine. But in the end, it was just my fucked-up luck not to go anywhere but around and around in circles. I was born too late to go to the moon and too early to go to Mars. The Rocket man was clearly locked in that NASCAR astronaut category. I went into space and drove around in fuckin' circles. \n\nShit, I didn't even have to drive in the circles. Earth's gravitational field did that. All I had to do was manage the amplitude of the orbit. Maybe it was fitting that I died in space. Maybe in years to come, school kids would talk about me. Maybe I'd become an urban legend like the man in the moon. I could be the man in orbit. \n\nIt was just as well. My life was over anyway. I had nothing to look forward to. My life both professionally and personally had reached a holding pattern. I had gone as far as I could go. Professionally, I would never go to Mars. What would I do? Go into management at NASA? Push pencils and requisitions around? Not Hardly. Maybe become a trainer? They would have to be suicidal to let me. I was born a competitor. So the idea of training people to do what I wanted to do was laughable. I'd probably do whatever it took to make them look bad and make myself look better. I'd be seventy years old and still trying to go to Mars. \n\nThe best thing for me would be to retire with Beth and see the world. Only that was out now. Beth had betrayed me. Beth was no longer mine. Maybe that was why I wasn't reacting to this the way everyone expected me to. Maybe without Beth it just all seemed pointless. I remembered the looks Remy and Morgan had given me when I didn't want to go into the station to call Beth. The crack Remy had made about my \"hot wife,\" had been true. For most of my life, I'd had three obsessions; Beth, space and Mustangs. I had several hobbies, but the three things I loved the most were those. \n\nIt was unusual on a mission for me not to talk about Beth. But after what I saw on my iPad, I just never wanted to see her again. She could have the Earth; I'd just float around up here until I lost consciousness. I didn't even want revenge. I just wanted the pain to stop. I guess it's like that with everything. If you get hurt a little, you get pissed at whoever hurt you. However, when you get hurt so badly that it's life threatening, revenge takes a backseat to just living and stopping the pain. \n\n\"Hey Rocket Man, you're going the wrong way,\" squawked John Walker. \"Dude what you're doing is one of the bravest, most noble things I've ever seen. But it's not the way for you to go out. I've got an idea. So ... you remember my friend, Jim Beam?\" \n\n\"Yeah,\" I said tiredly. \"He was one of you eggheads. He quit NASA to go to work for some private company involved in space and outlandish stunts and shit, right?\" \n\n\"Yeah well, I called Jim, and we came up with an outlandish stunt that will either kill you or bring you home,\" he said. \n\n\"I'm listening,\" I said. \n\n\"Good, keep listening,\" he said. \"We've got nothing but time. Do we still have those two spare suits aboard?\" \n\n\"Yeah,\" I said. \"Why?\" \n\n\"Because your suit is going to run out of air soon, dummy. But you can use them to stay alive long enough for us to get you down,\" he said. I had thought of that, but it would have only delayed the inevitable. But if there was the possibility of me living I had at least to consider it. So having air might be important. \n\n\"How many functioning jets do you have?\" he asked. \"Our checks from down here have to be wrong. It looks like you only have five of the sixteen nozzles online.\" \n\n\"That is correct,\" I said. ",
        "\"Jack, how the fuck did you do all of that flying around the station with only five nozzles?\" he asked.\n\n\"This is going to be more difficult than I thought,\" he said. \"First off, you're going to have to use the thrusters to put you into a lower orbit. You're going to have to do it manually, because we don't seem to be able to control your flight systems or the jets from down here.\" \n\n\"No problem,\" I said. \"I can ...\" \n\n\"Problem,\" he interrupted. \"I've mapped out the functioning jets and in order to get into the position we need; you're going to be mostly flying upside down.\" \n\n\"Johnny, there's no gravity here. Upside down doesn't really mean much,\" I said. \n\n\"Remember that when we start giving you coordinates that don't make sense,\" he quipped. \n\nI started the burn and forced the tumbling capsule back towards earth. It's hard to understand, but it was very easy to do. It was hard to control, but easy to accomplish. All I was doing basically was pushing the capsule in the direction that gravity wanted it to go in anyway. I was using the thrusters not to fight off gravity but to speed up the rate of my orbit's decay. \n\nWhen I got to the place that Johnny Walker and his friend, Jim Beam wanted me to maintain, I breathed a sigh of relief. I was probably still going to die. I had no idea what we were trying to do. This capsule was designed to float down on several large parachutes. The mechanism for deploying those parachutes had been damaged. \n\nThe idea of dropping it in the ocean like the old Apollo capsules wouldn't work either. The capsule wasn't designed to float, and it wasn't water tight. Landing in the ocean would be a death sentence. The capsule would sink like a fucking stone, and I had no survival gear that would help me last for even a few moments while a recovery vessel made it to my location. \n\nI also had no control over the capsule's attitude. I was basically tumbling my way through orbit. \n\n\"Okay,\" Jack this is what you're going to do,\" he said. \"Do you remember a few years ago when Felix Baumgardener parachuted from the edge of space? Two years later, the head of Google beat him and dropped from even higher? We're gonna do something like that. Here's the deal. We're going to use the capsule to get you through the heat of re-entry. Then you're going to bail out before the capsule drops to the desert and probably explodes. You're aiming for a hot-air balloon where there's a harness with a special parachute that will attach to your space suit. Got it?\" \n\n\"It'll never fuckin' work,\" I said. \n\n\"Well, right now, you're gonna die,\" he said. \"If you stay in the capsule, you're gonna die. If you go back to the station, you're all gonna die, so what the fuck is the difference?\" \n\n\"Okay,\" I said. \"When you put it that way, how much time do I have?\" \n\n\"Not much,\" he said. \"You're orbiting every seventy - seven minutes. On your next time over the US, we're gonna do another burn that will put you on a shallow re-entry vector. I'm not gonna lie to you. If the heat shields fail, you're gonna burn up. Once you're through the atmosphere you're gonna have to spot the balloon, use the thrusters to get you close and then bail out and glide for it. If you miss, you're fucked. Actually, there are two balloons. There will be a second one five thousand feet below the first just in case. Good luck Jack.\" \n\n\"Thanks, I guess,\" I said. \n\n\"Jack, do you want me to connect you to Elizabeth so you can talk to her?\" he asked. \"You know ... Just in case?\" \n\n\"Nope,\" I said trying to keep my voice as casual as possible. \"I need to concentrate on the task at hand.\" \n\n\"Okay, your choice,\" he said. \"I'll talk to you again in about twenty minutes.\" \n\nI sat there staring out at space. I wondered what had gone wrong. Not with the capsule, or the mission. There's an old saying, \"Man plans, God laughs.\" Anything that we put together with our slide rules and calculators can always go wrong. The capsule had been a very good ship. It had performed well under trying conditions. However, the impact from a chunk of metal traveling at roughly seventeen thousand miles per hour was simply something they never foresaw. \n\nIt had been serendipity that it had only struck us a glancing blow. A straight on impact on either the capsule or the space station could have been a disaster for all of us. We were lucky that we lost only one person. And Nathan Penn was an asshole. The fates must have been looking out for us after all. \n\nNo, the mission had been a mild cluster fuck as those things go, but it was my life that confused me. Not that I had one anymore, not that I even wanted one anymore. I had no illusions. I really didn't believe in Johnny Walker's hair brained scheme to snatch me from the jaws of death. I just wanted my death to be glorious. I wanted to look down from space someday and have little kids study me in the history classes. I wanted them to say that the Rocket Man went out fighting. Even if it wasn't true. \n\nThe truth was that there was no fight left in me. Beth's betrayal had beaten me. I had all kinds of questions going through my mind. It felt almost as if I was a reporter. I had all the same questions that reporters want to know. Who? What? Where? When? And most of all Why? \n\nWe had been together for nearly all of our lives. I had given her everything she wanted, whether I had wanted it for her or not. When she wanted to go to law school, I paid for it. When she wanted to go to work for that sleazy assed firm, I hated the idea, but I loved her too much to tell her no. \n\nBut she hadn't told that asshole no. She had brought him into our home and fucked him in my God Damned living room. Suddenly, I was burning. The flames were hotter than the ones from re-entry would be. I burned with the desire for revenge. That snug asshole would pay for the life he had destroyed. Suddenly, I wanted to ... No I needed to live just so there could be a reckoning between the two of us. \n\n* * * * * *\n\nLiz \n\n\"Thank you Senator,\" I said to the old man in front of me. \n\n\"I did nothing for you,\" he said. His tone of voice let me know exactly what he thought of me. Where Brett was someone he felt might have had a great deal of potential, who had unfortunately not lived up to it, I was simply scum. He had dismissed and dispatched me without bothering even to say goodbye. \n\n\"Why, then,\" I asked even as his men tried to whisk me back to my house. \n\n\"For the future, for the country ... For the Rocket Man,\" he said. \"Someday ... When he's done with space, maybe he can serve his country in a different way? If that comes to pass. He doesn't need the stigma of a cheating strumpet of a wife to hold him back. This way, his past remains clearer. However, the truth is all you could ever do is muddy the waters. His qualities would have shown through the murkiest mud you could bring. Worst case scenario, the world learns that while he was off into space, saving lives, his whore of a wife was screwing some low-life ambulance chaser. It would probably make him a much more sympathetic figure. The man burns so brightly that even your bullshit can't tarnish his legacy.\" Then he turned and left the way he came. \n\nAs soon as I got back to my house, I got into my car and started the long drive to the airport. I had to be on the next flight to Florida. Even as I drove, I frantically called the launch facility. I told them who I was and was put through to Johnny Walker. \n\n\"I'm on my way,\" I told him. \"Jack needs me. I'll be there as soon as I can get on a plane.\" \n\n\"Uh yeah,\" he said. \"Look Elizabeth, you don't want to be here. And more importantly, Jack doesn't want you here. I think he's trying to distance himself from you to make it easier on you if he doesn't make it.\" \n\n\"Fuck that, Fuck you. I'm coming,\" I said. \n\n* * * * * *\n\nJack\n\n\"And I think it's gonna be a long, long time.\" \n\n\"Til touchdown brings me round again to find...\" \n\n\"I'm not the man they think I am at home.\" \n\n\"Oh no, no, no ... I'm a Rocket Man ...\" \n\nLike a star dropping out of the sky. NASA never broadcast it. It was more a secret than it was ever meant to be. Perhaps that was why it worked so well and why the secret never got out. Usually if you try to keep something a secret, people start to talk about it, and then it gets out and pretty soon everyone knows about it. \n\nHowever, in my case, with most of NASA, the country and the world focusing on those ten brave people waiting to be rescued from the station, no one thought about me. Oh sure, I was mentioned a few times. My supposed heroism in sacrificing myself so everyone else would have at least a chance to live had not gone un-noticed. But I was off camera, assumed to be floating away into nothingness. Most of the world assumed that I was already dead. I had to be, right? \n\nOf course, the few experts they brought in did point out that there were spare suits on the capsule and I could have possibly used them to prolong my air supply, but I would probably have frozen to death without some sort of heat. And realistically it seemed morbid to dwell on my fate while there were ten people, ten brave souls, trapped on the station waiting for rescue. They were trying very hard to remain as quiet and as still as possible. If the O2 scrubbers malfunctioned or gave out from the strain, they were all dead. The world held its breath and watched. \n\nAnd like some cosmic magic trick, I dropped out of the sky, like a ... meteor. \n\nIt was a rough ride, perhaps the roughest thing I have ever endured. Johnny came back on the com and gave me instructions. I did a long slow burn propelling the capsule towards the earth. Gravity did the rest. My job was the hard part. I had to keep the bottom of the capsule, the fat end, pointed towards the Earth. The bottom of the capsule was the only place that held the heat-absorbing tiles that would keep me from becoming a charcoal briquette during re-entry. \n\nUnder normal circumstances, it would have been difficult. But with most of my jets non-functional, it was barely possible. And without trying to sound like I was bragging, I'm not sure anyone else could have done it. There's a certain skill level ... Call it a touch, that goes with experience. And I have more experience piloting a space craft than any man on earth, living or dead. \n\nThe capsule was tossed around like a cork in a heavy sea as it fell. And yes, fell is what I did. My thrusters even if fully functional were simply not strong enough to lift the capsule or even slow it down enough to cushion my landing. They were maneuvering jets, pure and simple. They allowed me to point the nose or move sideways, nothing more. \n\nThe one good thing about it, at least at first was the fact that I didn't have to worry about freezing to death. It got really hot, really quickly. There were moments when even in my suit, it was so hot, I struggled to breathe. And suddenly the buffeting and tossing stopped and things began to cool.\n\n\"Out of the frying pan and off of a fuckin' cliff,\" yelled Johnny Walker. \"Are ya still alive, Rocket?\"\n\n\"Yep,\" I said tight lipped. \n\n\"You sound a little pissed,\" he said. \"Good because, the next part won't be easy.\"\n\n\"Is anything ever easy?\" I snapped. \n\n\"Okay, you're dropping like a rock,\" he said. \"My coordinates were perfect as usual. But you're falling way too fast. I need you to fire every thruster you have and if the retro rockets are still working fire those too.\" \n\n\"Johnny none of those are going to be strong enough to stop me from dying if I hit,\" I said. \n\n\"Look Rocket,\" he quipped. \"I already know that. You're the driver, here; I'm the fucking rocket scientist. I know we can't slow you down enough to survive. I'm trying to slow you down enough that you can get to one of the balloons. They are in position. You've only got two chances at this.\" \n\nI fired everything and according to my instruments, I did marginally slow myself down. It also produced a spin that I didn't need. \n\n\"Okay Rocket, it's time,\" he screamed. \"You have about 90 seconds. Get the hatch open, sight the Balloon and jump for it.\"\n\n\"Am I landing in the basket?\" I asked.\n\n\"There is no basket,\" he said. \"There's a very long static line attached to the balloon by a quick release mechanism. There's a harness and kit on the end of the line. Your job is to get into that harness.\" \n\nThe door opened easily since the pressure outside was greater than the pressure inside, and the hatch opened in. Looking outside scared the shit out of me. It would have been easier just to die. But then I saw the Balloon. It was huge. I'd have had to be drunk to miss that. When I was about fifty feet above it, I jumped. I guess jumped isn't really accurate. I sort of stepped away from the capsule. We both continued to drop. As I passed the Balloon, I grabbed for the line. I let go almost immediately. The friction was incredible. Just trying to grab the line nearly burned through the carbon fiber and Kevlar layers of my gloves. \n\nI started alternating the pressure to slow my descent. I wasn't sure it was working until I noticed how much further down the capsule was than I was after only a few pulses. I saw the end of the line coming up quickly and squeezed a bit more. That caused me to yank nearly to a stop. I reached for the box. Made contact and slipped. My left hand grabbed for the line. My right for the box that stood between me and death. My left hand missed. My right grabbed the edge of the box. My fingers dug in for dear life. I saw my life flash before my eyes. I saw myself courting and marrying Elizabeth. I saw our life together. And then I saw that bastard go into my house and fuck her. All in the blink of an eye. \n\nAnd then my hand slipped off of the edge of the box, and I plummeted towards death. \n\n* * * * * *\n\nElizabeth \n\nI needed help. I called my office. My secretary answered the phone. She gave the name of the firm, instead of my name. That was weird until I realized that I had probably been fired too. \n\n\"Sue, it's Beth,\" I said. \n\n\"Who,\" she asked. \n\n\"Elizabeth, your boss,\" I said, remembering that the only person who had ever called me Beth was Jack. Even my parents called me Liz. \n\n\"I don't have a boss,\" she said. \"They told me to stay in the office and catalog all the paperwork until they assign another junior partner. All of the associates are snapping at the bit to replace you. And since no one knows why you left they're all afraid that the same thing might happen to them.\" \n\n\"Whatever,\" I said. \"I need help. I need you to get me on a flight to Florida. You know the usual stuff.\" \n\n\"Oh, fuck,\" she said. \"I heard about your husband. I'm soooo sorry. You're going there to ...? Shit, there probably won't even be a ...?\" I heard a shape intake of air. \"Okay one last time,\" she said. \"I'll even arrange it on the company dime. Your expense account hasn't been cut off yet. I used it this morning to buy breakfast. I'll text you the details.\" \n\nI had done this so many times before that I shouldn't have been nervous. However, none of the previous times were like this. Jack had always been ... Well he'd always been Jack. My husband is a rock. He is totally unflappable. He is the steadiest, toughest, most special man I know. I always felt so safe and so special when he was around ... When he was around. That was the operative phrase. \n\nSomehow over the past few years, we had drifted apart. It wasn't as if I had stopped loving him. Jack was my world. I mean Jack IS my world. But we just spent too much time apart. We weren't like some couples. When I say that we drifted apart, I don't mean that we no longer loved each other because we'd become two different people. All of the love was still there and still as strong as ever. But we just spent too much time apart and that, coupled with my anger, had led me to doing things that I wasn't proud of. \n\nPart of the problem was Jack. The very steadiness that made him a great pilot and a legendary astronaut, made him a pure asshole to deal with. Perhaps asshole is too strong a word, but Jack just refused to compromise. \n\nThe gold standard for astronauts used to be three missions. It was something that rarely happened. Competition for missions was tough. NASA always wanted to send the best of the best. So after Jack's third mission, I expected him to take a job in management or perhaps go to Washington to lobby for the aerospace industry or even NASA itself. \n\nI got my job in Washington and began to worry until Jack surprised me with our house. Foolish me, I believed that my loving husband was putting my career ahead of his. I was wrong. Jack commuted. He flew from DC to Cape Canaveral three or four times a week. When he was getting ready for a mission, he simply stayed in an apartment on the base. \n\nIf anyone had ever asked me if I'd be willing to live in a different state than my husband did, I'd have looked at them as if they were nuts. However, that was the way it ended up. \n\nI don't want to sound like a whiner, but I hated it. Jack always said that it didn't matter. I worked long hours so when I was home all I did was sleep. And Jack's hours when training for a mission were insane. We loved each other, that was what mattered, he always said. We called or texted each other at least twenty times a day. Not because we had to, but that was just our natural rhythm. We always shared the moments in our lives, both the big ones and the small ones. \n\nSo I was never shocked when Jack would text me a picture of some new astronaut. \"I hate this motherfucker,\" he would send along with the photo. \"The bastard can bench press more than me.\" \n\nAnd that was the way it went. We both went from triumph to triumph. I quickly moved up the ladder in a very prestigious DC law firm. My trajectory seemed to be moving towards me becoming the first ever, female partner there. Jack became a legend. With regular deliveries to the ISS, Jack sometimes did five or even six missions a year. Our vacations, several times a year, gave us the chance to reaffirm our love for each other. \n\nThe problem was that I had a secret. It was one that I had been carrying since I was 12 years old. I remember it like it was yesterday. Jack and I was sitting on the sofa in his parent's house watching the launch of the Challenger mission on TV. Everyone in our small Michigan suburb knew that Jack was going to be an astronaut. I was going to be a house wife and a mother.\n\nAs we watched the launch and two hours of science shows before it, we were excited. And then it went all wrong. We were both shocked. For more than thirty minutes, we sat there without saying a word. Our hands clasped each other's, and we needed answers. The news men did their best to find out facts. We switched from channel to channel trying to get to the bottom of it. In the end, Jack was saddened but even more determined to become an astronaut. \n\n\"We'll come back from this,\" he said. \"This will make us even stronger. We'll have even more safety protocols and going to space will become even safer.\"\n\n\"Yeah, Uhm, I'm sure of it,\" I said. For the first time since we met in first grade, I did not want Jack going into space. I have never told this to anyone. Jack and I have been together forever. Before our teens, before we even understood the concept of love or of being boyfriend and girlfriend, Jack and I were together. \n\nI understood him better than anyone else on earth. So I knew that I could never express my feelings about space. In order to be successful, Jack had to focus totally on what he did. Knowing that I worried about him, and that I hated him strapping a bomb on his ass and shooting himself into orbit, would have rocked his confidence and made him doubt himself and his missions. Jack loved me, but if he had to choose between me and space, I had no illusions about winning. \n\nBut every time Jack went on a mission, I hated it more. It got so bad that he never wanted me to be there during a launch or even to watch it on TV. Of course, I waited by my phone for him to call me as soon as he was safely on the station. I always knew then that he was halfway home to me. And when he came home, I was always there. As soon as I caught a glimpse of him, I ducked past security guards and military personnel and got to my husband. I just needed to hold him as if to make sure he was okay. ",
        "So there was no way that anyone would prevent me from being there to greet my husband when he came home this time either. \n\nI guess over the years my frustration and anger at the situation continued to climb. It was probably a couple of years ago that I started going out. At first, there was nothing to it. I went out with the girls, but kept my eyes on the news for any and all information about Jack's missions. The nights out got wilder and began to include men from time to time. However, I never so much as danced with one. \n\nThen one night, I looked up on the news, and they were running it. IT, the it. They were talking about Challenger just before my husband was blasted into space yet again. I got so angry that I lost control. Losing control led to me getting drunk. Me getting drunk led to me getting fucked by a man other than Jack for the first time ever in my life. \n\nI was unfortunately so drunk that I didn't remember a moment of it. I was consumed with guilt for months. And then with the logic and legal double talk that all lawyers use, I was able to convince myself that if I didn't remember it, it probably didn't happen. I also told myself that Jack probably wouldn't throw away thirty-five years together, twenty of them married, over a drunken fling. He would be very angry, and it would take time, but Jack loved me and he WOULD forgive me. Or he would have of, had he found out. But he never did. \n\nI also reminded myself, that every marriage has its ups and downs and that one or both partners having a slip was common nowadays. And that was all it had been. It had been a slip and a drunken one at that. Jack and I would be together forever and perhaps many years down the line; we could talk about what happened and why. \n\nAnd then, about a month ago, Brett began his pursuit of me. At first, I didn't recognize it. He was always around. He was always polite and very complimentary. However, he was also always with another woman. \n\n\"Most of them are only friends,\" he said. I guess that was his way of luring me into becoming friends too. That led to working lunches, collaborating on a case or two and inclusion on his team on the last case we did. My first ever corporate case and the biggest I had ever been a part of. \n\nOf course working together meant more working lunches, a few non-working lunches and a few nights out with the gang. Then it was stopping off to have a drink and then stopping off for dinner with a friend was better than going home to an empty house and an even emptier bed. \n\nThe thing that should have tipped me off was the fact that Brett always asked about Jack. He seemed to be in awe of him, but at the same time he tried to belittle his accomplishments. Now that I know what an asshole Brett was, I understand that he got his jollies from screwing the wife of a man who was far better than he would ever be. It was like some strange collection that Brett had. I later found out that he had also enjoyed speaking to the husbands of the women in the office that he had fucked. I was glad that he would never get the chance to do that to Jack. \n\nJack was great at reading people. He would have knocked Brett on his ass first and asked questions later. And Jack was famous enough to get away with it. Sure Brett had connections with judges and a few politicians. But Jack had even stronger connections, and he had genuine fame. Brett would have come out on the losing end both physically and reputationally in that battle. \n\nI made my way to the airport as I had a thousand times before. I presented my ID at the registration desk that Sue had texted me. Her timing as usual was perfect. The flight left only twenty minutes later. I went to the terminal with my freshly printed ticket and boarding pass. \n\nUsually, all I had to do was present my ticket, and I was waved through the security checkpoints. Being the wife of an astronaut carried a lot of perks. However, this time I had to go all the way up to the inspectors. Since I didn't have any luggage, I figured it would be quick. But I was pulled out of line almost immediately. \n\nA fat Asian woman looked me up and down and then shook her head. I heard them calling my flight. And told her I needed to go. \n\n\"Look I haven't done anything,\" I said. \"You didn't even run me through the scanner.\" \n\n\"I know ma'am,\" she said. \n\n\"Run my record,\" I said. \"I have a clean criminal record. I have never committed a crime. I'm an officer of the court. My husband is an astronaut. I have to get to Florida, so I can ...\"\n\n\"There are no astronauts on that mission named Dixon, Ma'am,\" she said skeptically. \n\n\"When we got married, I kept my maiden name,\" I said loudly and wishing for the umpteenth time that I had taken Jack's last name. It had hurt him a bit when I didn't, and it took me months to get him to understand that I wanted to make it in my legal career on my own. I didn't want to get ahead because I was the astronaut's wife. \n\nI grabbed my purse and showed her the pictures of Jack and I during his training for several missions. I even showed her our selfie taken in front of the shuttle with Jack in full gear. \n\n\"My husband is Jack Daniels,\" I said. Her eyes bugged open. \n\n\"The Rocket Man ...\" she hushed so loudly that everyone in the airport turned towards us. I nodded. \n\n\"I'm sorry Mrs. Daniels ... I mean Ms. Dixon, I thought it was unusual when I looked up your records ... Shit! ... Your marriage is even here in your records. They're probably doing this to protect you ... I mean with everything going on and him probably being ... Uhm ...\" \n\nI looked into her eyes and understood. She felt badly for me. \n\n\"Doing what to protect me,\" I asked. \n\n\"Ma'am you're on the no fly list. No airline is going to fly you anywhere. If they do they'll be subject to massive fines. They'll sell you tickets all day long. They'll take anyone's money, but you are not going to ever get on a plane. You will not pass any security checkpoint in the country.\" \n\nI walked away from the desk in a daze. \"Good luck, Ma'am,\" she called out cheerfully as I left her. \n\nAs much as I wanted to tell her to stuff her luck up her fat ass, I didn't. My parents didn't raise me that way. I was supposed to be a lady no matter what the situation. Besides it wasn't her fault. \n\nI didn't think it was Jack's doing either. Shit Jack had been on the launch pad when Brett, and I got together and by the time Brett and I fucked; Jack was in space. \n\nI was pretty sure that a certain senator was flexing his political muscles again to punish me. And as much as I hated to admit it. I deserved to be punished. After all, I was having dinner and sex with another man while my husband was risking his life, and as it turned out, sacrificing his life in space. I deserved everything the senator could throw at me and more. \n\nThey were already planning some sort of memorial for Jack. And It was pointless. My husband was Teflon coated. Nothing could kill Jack Daniels. Jack had pulled a miracle out of his ass more times than I could tell about. It wouldn't surprise me if this was the time when we first made contact with aliens, and they did it to bring Jack home. I could see the headlines now. \"Huge spacecraft lands on the White House lawn bringing home famous astronaut.\" \n\nThe second reason that I didn't think Jack was dead was the fact that my own heart was still beating. Jack and I have a connection that goes beyond normal love. We have been together for so long that if anything had happened to him, I would know about it. \n\nSo I got back into my car and punched the launch facility into my navigation system. The senator couldn't stop me from driving to Florida. \n\n* * * * * *\n\nJack \n\n\"Rocket Man, burning out his fuse up here, alone.\" \n\nI was falling again, slower but still falling, and then I hit it. Actually, I glanced off of the side, and I scrambled to grab the static line trailing from it. This time I actually grabbed and disconnected the harness. I thought about nothing except for getting that harness on for the next few moments. Once it was fitted, I tried Johnny again. \n\n\"Jane, how do I stop this crazy thing?\" I asked. \n\n\"It's automatic,\" he chirped. As soon as the air is thick enough to support it, the chute will deploy. Good L ...\" \n\n\"Johnny why didn't you just have me ride the balloon down?\" \n\n\"Balloons float, Jack. From your altitude, it would take you a half-hour or more with the fastest safe landing we could calculate with the balloon. You're only about a thousand feet from when your chute will deploy. Once that happens, you'll be on the ground in about sixteen minutes. It took Baumgardener fifteen minutes to land. We've calculated that you only have enough air left to last you thirteen minutes. You're going to be in some distress when you land.\" \n\nAnd he was right it was a rough trip and just when I could make out the fact that I was coming down over a fairly dense forest, I had no air to breathe. Johnny was wrong. Either that or my fear of heights caused me to use up oxygen at a faster rate. I held my breath until I blacked out. \n\nI probably would have died if it wasn't for those fucking trees. A branch from the tree I landed in smashed a hole in my visor and scratched the shit out of my face. I was lucky it missed my eyes. On the other hand, I scraped my ribs and broke my left leg.\n\nBy the time the search crew found me, I was cursing about my leg, but glad to be alive. The emergency med techs stabilized my leg for the trip to the hospital, and I was loaded into an ambulance. Despite the fact that the whole operation had been a sort of secret, there were hundreds of reporters at the hospital when we arrived. \n\nBefore my X-Rays were done, there were thousands of people gathered throughout the hospital for a glimpse of me. My leg was a clean sharp break and didn't require surgery. They brought in the hospital's chief orthopedic surgery to handle a reduction that any resident could have done. I was X-rayed again to ensure that the reduction was done correctly and then transferred to a room. \n\nThat was the story given to the reporters and others. Actually, I was whisked out the back door of the hospital and into an unmarked SUV. I was driven to and secreted inside of a well-known hotel downtown. \n\nI was placed on the softest most comfortable sofa I had ever been on in front of a huge TV. Moments later, Johnny arrived. \n\nWe were both grinning at each other like two Cheshire cats. A tall nerdy looking guy who reminded me of Jeff Goldblum stood behind him. I was pretty sure he had to be Jim Beam. \n\n\"I can't believe you pulled that shit off,\" grinned Johnny. \"You have to be the toughest son of a bitch, I have ever met.\"\n\n\"Or the luckiest,\" threw in Jim. \n\n\"So ... Rocket ... You're on top of the world. What do you want,\" asked Johnny. \n\n\"I want a phone call,\" I said. \n\n\"Shit, Rocket. You can do that yourself,\" he laughed. \"You're back on earth. You can call anyone on the planet. I'm pretty sure that Justin Verlander would give you Kate Upton's phone number. However, I know who you want to talk to. So go ahead ET, phone home.\" \n\n\"Johnny, I don't want to talk to or see Beth under any circumstances,\" I spat. \"I want to talk to the people on the station. I need to let them know that we're all thinking about them, and we're busting our asses to get a ship up there to bring some or all of them home as quickly as possible.\" \n\nHe looked startled at the double revelation. No one who knew us would believe that I didn't want even to speak to Beth. After everyone had left the room presumably to allow me to get some sleep, I got my iPad from my belongings and looked for my family lawyer's number. He was really shocked to hear from me. \n\n\"Hey, Jack,\" he said. \"I'm not sure you can sue NASA, but I'm glad you're back.\" \n\n\"There's no easy way to say this Ted. I need a divorce. I need to have it accomplished as quickly and painlessly as possible. I'd like the customary 50/50 split. We're both in great careers, so we should be able to just each take our personal property and move on. If you have to sweeten the deal, offer her the house. It's worth nearly three-quarters of a million dollars, and she loves it. It should be a pretty quick and easy thing to do. I just want this over with so I can start getting over her.\" \n\n\"Are you sure about this?\" he asked. I gave him a single nod. \n\n\"Make it so,\" I said. \n\n\"What the hell does that mean?\" he asked. \"Who says shit like that?\" \n\n\"Jean-Luc Picard,\" I said. \n\n\"Who the hell is that?\" he asked. I was shocked. The man was obviously not a Star Trek fan. \n\n\"Just handle it, Ted,\" I said. \n\n* * * * * *\n\nLiz \n\nMy shock was off the charts. I guess shock isn't really a good word for it. I'd known the whole time that my hubby would be fine. But when faced with the actual facts, it was awesome. I found out by listening to the radio in the car. Jack had supposedly pulled off some sort of impossible stunt and lived to tell the story. He had supposedly suffered some sort of injury to his leg but was expected to fully recover. Hearing that made my day. I still had to get to Florida though. \n\nAnother thing that still confused me was the fact that Jack hadn't answered his phone. I had called him at least ten times, and he hadn't answered or returned my calls. Upon thinking about it, I realized that he was probably in the hospital and was being kept away from people while he was being processed. They would want to know the details of everything he could tell them to help the astronauts who were still in space. \n\nAbout that time I also remembered that Jack couldn't call me from his iPhone and he couldn't answer it either. His phone was still back at our house. That made me feel better. \n\nAs I drove, I heard part of an interview with Jack on the radio. He even answered questions for some of the callers. One man asked why they didn't use the same method that worked for Jack to get the other astronauts down. \n\nOnce Jack explained exactly what he did, there was dead silence over the airwaves. It quickly became evident exactly what my husband had gone through and how unlikely it was that anyone else could survive it. \n\nSuddenly seeing Jack became the most important thing in my life. I needed to see him and hold him and make sure he was okay. At the same time, I felt a tinge of guilt about what I had done. But I was done with that life. I came too close to losing everything ever to risk it again. \n\nThe senator didn't outline any kind of punishment for me. He didn't need to. I intended to give it all up. I had no idea whether or not the senator's plan included reporting me to the ethics committee as they had Brett. It didn't matter. I was done with being a lawyer. Whether the senator intended to see me disbarred or not, I was done. It was time for me to settle down and just be happy to be Jack's wife. \n\nI would take his last name if he still wanted that, and we could even try for a baby. I was a bit old, but it really wasn't out of the question. \n\nAfter a day and a half on the road, with only a few hours at a cheap motel to grab some sleep, I reached the launch facility. I could tell almost immediately that something was off. I was put on hold and made to wait while person after person juggled me off to the next person on the list. \n\nFinally, Johnny Walker came out to talk to me. He looked nervous as he shuffled from foot to foot. And he never looked me in the eye. \n\n\"Uhm, Elizabeth, Jack isn't here. He's been taken to a different location to recover from his injuries. You should probably just go home and wait for him to contact you,\" he said. \n\nI was floored. But what he said did make sense. Jack would have expected me to be at home waiting for him. I should have thought about that from the beginning. I had just panicked after the whole incident with Brett and the senator. \n\nI got back in my car and prepared for another day and a half of driving. However, I did it with a sense of relief. It all made sense. Every time Jack went into space, he had to stay at NASA for a couple of days after he got back. They gave him a thorough medical check-up and a long debriefing. \n\nThey had to make sure that he was physically okay and hadn't picked up any bizarre bacteria or infections. They also wanted to make sure that the time spent in zero gravity hadn't damaged his bones or muscles. The debriefing part was so that they could find ways to improve the next mission. Tiny things that had occurred during a mission could have a far-reaching impact on the next one. \n\nEven on this mission, the things that had gone wrong were things that needed to be examined to ensure that there were no further incidents. This time there was a death. I might be lucky to see Jack in the next two weeks. \n\nJack was always telling me that space was filling up with junk. There were decommissioned satellites and pieces of old rockets and all kinds of things orbiting the earth. They all traveled at high rates of speed and any one of them impacting a ship could cause untold damage or death. \n\nNASA had known about the problem for years, but until this mission, they had been lucky. The odds of a piece of space junk hitting a ship were considered minimal at best. But it had happened, and a man had died from it. The same space junk had damaged my husband's ship to the point where it was extremely lucky that he even made it back home. \n\nMy guilt over what I had done while my husband was on a mission was what made me feel so bad. What if Jack had died while I was at home fucking Brett? I don't think I'd have been able to live with that. \n\nAbout halfway through my trip home, I got a call from Sue. I expected to hear from her. \n\n\"Hi, Liz. I just called to tell you that they have officially fired you. They don't even want you to come back to the office. They are sending a messenger to your house to notify you by certified letter that you have been terminated. They haven't told anyone the reasons for your dismissal, but I'm pretty sure that you guys fucked up that Chamberlan case didn't you? I'm pretty sure that has to be it because you worked on that case with Brett, and they fired him too. I've never heard of them firing anyone just because they lost a case, but Chamberlan is an important client so ...\" \n\n\"Sue, don't worry about it,\" I said. \"I'm fine. My husband is alive. I'm gonna spend the foreseeable future getting him back on his feet again. But thanks for calling and thanks for the warning.\" I hung up. I could tell that she was angling to get more information. The office grapevine was probably speculating like crazy about why both Brett, and I had been terminated. I wondered if they would go after my license as well. But none of it mattered. \n\nI got home even earlier than I thought. Maybe it was because I drove faster on the way back, or because I did the trip back non-stop, but it took me far less time to get back than it did to get to the launch facility. \n\nIt was in the early evening when I got home. Surprisingly enough, the senator's men locked the house up. There seemed to be no damage done to anything. The house seemed to be just as we left it. The coffee cups that the two bruisers and I used had even been washed and put in my drying rack. Other than that though, the place appeared to be untouched. \n\nI was so tired from driving that I immediately went to bed. As soon as my head hit the pillow I was out. I don't normally dream. Or if I do, I don't remember them. But I've heard that times of high stress and guilt can help us to remember our dreams. In any case, I dreamed of my wedding day. Jack was so handsome. Our honeymoon was perfect. We had known each other for most of our lives, but somehow that was the start of the most special phase of our lives. \n\nThe dream was so vivid. I could feel the material of my dress. I could smell the flowers. I was really pissed when the sound of my doorbell awakened me. I threw on a robe and stomped down the stairs. I threw the door open to find myself twenty years earlier waiting for me. ",
        "I swear she could have been me. She had the same long blond hair, although mine was now maintained with help from a bottle. She had the same long legs and tall, thin figure. Her boobs were bigger than mine had even been and her ass had a little more curve to it. But she could have been me. Well ... I would never have chewed gum while waiting in someone's doorway, like she did. But other than that ...\n\nAs I looked at her, I noticed that she was holding a sheaf of documents. \n\n\"Elizabeth Dixon,\" she asked. Her asking to identify me only confirmed who she was. I was sure that she was the messenger sent over by the law firm. \n\n\"Yes,\" I said angrily. I took the packet she handed me and glared at her. \n\n\"And tell those jerks at the law firm that they did me a favor. They saved me from having to quit. I didn't want to work for them anyway,\" I said. \n\n\"Grandma, I think you need to go back upstairs and take your medication,\" she said. \"The papers I gave you weren't to fire you. I've seen that kind of papers enough times to know ... Well ... just read them.\" Then she turned, on her expensive high-heeled shoes, and walked back to her waiting car. \n\nI looked at the papers she had just handed me and almost passed out. They were divorce papers. Jack wanted a divorce. I had given that man the best years of my life, and he wanted to kick me out of his. I was angry beyond belief. I went to our computer and looked up the senator's office number. Those things are published so that the people who vote for them can reach their senators. None of the senator's ever answer their own phones, but it makes the public think they have access to their elected officials. \n\nAs expected, I got one of the senator's third or fourth level flunkies. I gave him a piece of my mind out of frustration. I told him to tell the senator that Elizabeth Dixon would spend the rest of her life making him pay for what he'd done. I'm sure that my words could have been taken as a threat, but I didn't care. I hung up the phone angrily and started crying. \n\nA short time later, there was a knock at my door. I didn't answer it. I just wanted to stay curled up in the corner crying my eyes out. The next thing I knew the sound of my door opening made me look up. It must have been Jack, only he and I had keys. \n\nI looked into the eyes of the two huge bruisers that worked for the senator. \n\n\"She's in here, sir,\" said one of them. \n\nThe hunched over form of the senator came into view after that. \n\n\"So Mrs. Daniels ... I believe you're angry with me?\" he said. \"Obviously, the news of your husband's miraculous return from space isn't enough for you. I still can't fathom why you're spending your time calling me.\" \n\n\"You told Jack about Brett,\" I bawled. \"You ruined my marriage. I hope you're happy. You ruined my life.\" \n\nI did no such thing,\" he snapped. He looked me over with an expression that told me he was evaluating me for something. \n\n\"You are about the age when women start having those hormonal changes,\" he said. \"So I'm going to try to explain this to you one more time, and I'll go slowly. I've already explained to you that my motives are totally political. I would love to have your husband become involved in political service, especially in my party. Even if he wasn't interested in public office himself, he would be an extremely potent person to have campaigning for us. Your paramour, Brett, was totally unsuitable for anything. He lacked not only integrity, but any trace of a personality who could be sold to the public. \n\nIf I wanted your husband on my side, the last thing I'd want to do is be involved in the breakup of his long-time marriage. I wouldn't even want to be the person or responsible party for telling him you cheated on him because people do tend to shoot the messenger. You should probably try to find the answers to your questions by speaking to your husband.\" \n\nHe turned and left the room, flanked by his huge body guards. And I realized that he was probably telling the truth. I knew Jack and the way he reacted to things. The senator obviously did his homework. Jack would have reacted the same way the senator claimed. He would look at the motives of the person who'd given him the news. \n\nAccording to the packet, Jack wasn't divorcing me for sleeping with Brett. He was using irreconcilable differences and going for a simple no-fault divorce. Perhaps Jack was the one who had found someone else. Maybe he had hooked up with some reporter, or some female engineer at NASA. Jack was kind of famous without tying to be; he could have become involved with anyone. She could be a model or an actress or literally anyone. \n\nWell, it didn't matter. Whoever she was; she should be prepared for the fight of her life. There was no way I was giving Jack up without a fight. We'd been together since we were kids. We would be together until we stopped breathing. \n\nI spent the rest of the day finding a lawyer I could trust. I needed someone who understood the rules and tricks of family law. Even though I was still a lawyer myself, I gave no thought to handling my own case. That old legal saying about lawyers representing themselves having fools for clients came back to me. \n\n* * * * * *\n\nJack \n\nFor the two-week period after I got back, I did two things. I made sure to speak to my colleagues who were on the station every day. I did everything I could to reassure them that we hadn't forgotten them, and we're working very hard towards coming to get them. They laughed and asked if I was going to be on the mission to bring them back to earth. I told them if they wanted to wait six weeks for my leg to heal, I would gladly come for them. And they laughed even harder as they declined. \n\nThe reporters from several different news networks ate it up. There were tapes of our daily conversations all over the media. \n\nThe second thing I did was to do everything I could do to speed up the healing of my leg. I got daily healing treatments with vibration therapy and also thermal therapy that could be delivered through the cast. I ate foods that were rich in calcium and other minerals to aid in the bone remodeling process. \n\nAfter the two weeks were up, I still had another month in the cast, but I was at mission control for the entire rescue mission. When the rescue effort was complete, I spoke to each of my colleagues and wished them the best. They all returned to their lives, and I returned to mine. \n\nMy biggest problem seemed to be keeping my personal life, personal. Somehow the press got wind of my looming divorce, and it became front-page news. \n\nI tried as hard as I could to keep things private. It was hard enough getting over the only woman I had ever loved without having the facts on the front page of every newspaper. It was especially difficult when no one really knew what the facts were. \n\nMy lawyer was supposedly handling everything for me. I had made a very fair offer to split everything down the middle and even gave her the house to sweeten the deal. I left the negotiations up to my lawyer after that. \n\nHe kept coming back to me and telling me that Elizabeth wanted to speak to me. I refused. Legally, it wasn't necessary for me to speak to her, so I opted not to. It wasn't that I wanted to avoid arguments with her, or that I had any lingering anger towards her. It was pure cowardice. I guess most people consider me a brave man. I make my living pushing the envelope. I go into situations that would frighten most people, but I couldn't face Elizabeth. How could I look into her eyes without breaking down in tears? \n\nWhat a lot of people fail to realize is that men are people too. We have feelings and emotions just like women do. We may not be as forthcoming with them, but we still feel. When you spend your entire life with one woman and that woman betrays you, it hurts. It makes you doubt yourself. It makes it hard for you to trust anyone again. \n\nI would never have believed that Elizabeth would do what she did, but the way she handled our divorce was worse. \n\n* * * * * *\n\nElizabeth \n\nI couldn't believe that Jack wanted just to throw me away like garbage. Sure Jack was famous now and there were all kinds of women throwing themselves at him. He needed to know that anything those bitches could do for him, I would do for him better. My lawyer had several good ideas. The first thing we needed to do was get the evidence on him, so we could force a meeting. \n\nWe hired a PI to follow Jack. However, the PI had to follow Jack at a distance and be very careful about it. Jack is a national hero, and as such; he has protection provided by the government. He didn't have body guards or secret service agents assigned to him, but he was monitored closely. \n\nAll that did was to show me that Jack was slicker than I have him credit for. My PI trailed Jack as closely as he could for nearly three months and found nothing. I was burning through money in PI fees and legal fees like it was water. \n\nI decided with my lawyer's help to fight fire with fire. I spent a month with a ghost writer, writing my autobiography. The ghost writer I used was a pro. My book came out and immediately went to the top of the bestseller list. The writer painted me as a long-suffering wife who was cast aside by her rock star astronaut husband, who threw her away for a younger, prettier, more famous woman. \n\nThe backlash against Jack was huge. I started doing the rounds of daily talk shows to promote the book. The audiences of those shows are largely female and very pro women's rights. Those women are always ready to castrate any man they run into anyway, but after reading my mostly fiction book, they wanted Jack's balls on a plate. \n\nMy lawyer was sure that the negative publicity would force Jack to sit down and have a meeting with me. She was also sure that whatever woman or women Jack was dating would have to back away from him or see her career destroyed by the negative publicity. My lawyer was right; she just never saw the way the meeting would take place. \n\nI was doing yet another one of those national talk shows. I had the audience eating out of the palm of my hand. I was answering questions about how Jack had simply thrown me away for absolutely no good reasons. I explained how one morning I was a very much loved wife and the next I was on the trash heap. The hostess of the show literally shocked the shit out of me, when she announced her next guest. \n\nThe entire audience started booing and hissing when Jack walked out onto the stage. I hadn't seen Jack in months, but he was different. He wasn't the brash swaggering cowboy that I had known and loved for his entire life. \n\nHe was just as attractive, but he seemed more mature and extremely vulnerable. Half of the women in the audience were on his side before he ever sat down. The combination of attractiveness and vulnerability had them ready to forgive him before he said a word. \n\nI sat there on the stage, not realizing that my mouth was gaped open.\n\n\"You don't have to be afraid,\" said the hostess. \"He wouldn't dare beat you, here, in front of a national audience.\" She was smiling as she said it. And I noticed that my lawyer, who was usually backstage for these things was nowhere to be seen. I had a bad feeling about the whole thing then. \n\n\"Uhm, he's never laid a hand on me,\" I said. \"Whoever said that he ... Uh beat me?\" \n\n\"You did,\" said the host. \"It was in chapter fourteen.\"\n\n\"That may have been an exaggeration,\" I said.\n\n\"You mean a lie,\" asked one woman in the first row. \n\n\"It wasn't really a lie,\" I said. \"I think the writer just misunderstood some of the things I told her. Or maybe she padded a few things to make the book seem more ... \"\n\n\"So what you're saying ...\" Interrupted the hostess. \" ... is that you didn't really write your own autobiography?\" \n\n\"I uhm ... helped,\" I said. \n\n\"So what exactly did he do to you,\" asked a woman on the other side of the audience. \n\n\"After more than twenty years of marriage and almost forty years together, he just dumped me,\" I shouted. \"He threw me away like yesterday's garbage without any kind of explanation.\"\n\n\"Ladies you are in for a treat,\" smiled the host. \"For the past few weeks, this woman has been all over TV selling her book and telling us a terrible tale of neglect and abuse. Today on my show, you'll get to hear the other side. Today you'll find out why America's greatest astronaut is divorcing his childhood sweetheart.\"\n\nThe camera panned over to Jack. No one in the audience could look away from him. He leaned forward and sighed. Even that sigh of his swayed the women in his direction. He looked miserable. \n\n\"I know this is hard, Jack,\" cooed the host. \n\n\"I met Beth when we were five years old,\" he started. \"At the time, the time I didn't even like girls. However, for some reason, I liked her. From that moment on, we were best friends. Sure, she hung out with the girls, and I hung out and played sports with the boys but other than that we were always together. If I was playing baseball or football, she was there watching. If she was cheerleading or dancing, I was in the audience. Once we got older, the two of us weren't under any sort of pressure. \n\nWe didn't have the need to experiment with sex or drugs or anything because we already knew that we were going to be together for life. By the time we were ten years old, we knew that I was going to be an astronaut, and we would get married when we were old enough. \n\nI still remember the boys trying to make fun of me and the girls trying to make fun of Beth. The girls would say, \"Hey Liz, here comes your boyfriend.\" And she'd say, \"I see him.\" And then come over to talk to me. The girls were all shocked because at that age, no one had a girlfriend or boyfriend. It was the same with the guys. They couldn't understand why I spent half of my time with Beth. Even from that age I was the only one who called her Beth. No one else was allowed to. \n\nOnce again, we were under no pressure to get married, so we waited until we were twenty years old and in college. We got married on our summer break. It was also the first time that we ever had sex. We had always kissed and hugged, but again, we weren't under any type of pressure. Neither of us needed to impress anyone except each other. So we did things on a time schedule that seemed right for us. \n\nI entered the Air Force academy and specialized in aerospace engineering. Beth and I grew closer as the years went by.\" \n\nThe women in the audience oohed and ahhed as pictures from our wedding album and our photo album played on the huge screen behind Jack. Even I liked looking at them and couldn't help smiling. \n\n\"For all of these years we've been together,\" he continued. \"I finally made it to space and never looked back. I had fulfilled my dreams, and Beth started working on hers. She wanted to go to law school, and I encourage her to do it. When she graduated, I hoped that she'd start her own small practice in our home town, but she wanted to work for a big law firm. And she got her shot with one of the biggest firms in Washington DC.\" \n\nThe screen showed a photo of me in my cap and gown graduating from law school. The next picture was of Jack lifting me off my feet and kissing me in my cap and gown. The women in the audience started oohing again. \n\n\"Through all of our lives, we've been together,\" said Jack. \"I have never once looked at another woman. So I'm sorry, but most of the things that Beth wrote about in her book are absolute lies.\" \n\nThe women in the audience got quiet, too quiet. You could hear a pin drop in that huge sound studio. My heart was beating so loudly I was sure they could all hear it. \n\n\"You've all heard about how my latest trip to space went badly, right,\" asked Jack. \n\n\"We know you're a hero,\" screamed a woman somewhere in the audience. That did it all of the women started screaming and crying and clapping. The applause lasted for nearly five minutes. \n\n\"Thanks ladies,\" said Jack. \"But I was just doing my job. And the stunt that got me home wasn't something I'd have done under normal circumstances. I'm just not that brave.\" \n\nThat started all of the women to screaming again about how brave Jack was. I swear some of those women looked like they were about to take their panties off and throw them on the stage. And then suddenly they all got quiet. There was a close-up of Jack's ruggedly handsome face on that huge screen, and they all saw that he was crying. I think every one of those women had a broken heart then. \n\n\"I'm really not that brave,\" Jack said sadly. \"I just didn't care. In actuality, what you all think of as a brave and adventurous act, was a man with a broken heart trying to commit suicide. I never thought that crazy assed idea would work. I just wanted to die. I was in so much pain that I just didn't want to live anymore.\" The entire building was deathly silent again. Jack had an amazing degree of control over women who just ten minutes earlier wanted to lynch him. \n\n\"You're smart; you're handsome; you have a great career,\" said the hostess. \"What could be so bad that you wanted to kill yourself?\" \n\n\"How many of you ladies have iPhones,\" asked Jack. Nearly every hand in the audience went up. I was surprised. I thought that the market was supposedly evenly split between Apple and android, but I guess that's just what they say on TV. \n\n\"How many of you ladies actually understand the whole iCloud thing,\" asked Jack again. Only one or two hands went up. \n\n\"Like I said earlier,\" continued Jack. \"I'm an aerospace engineer, and I don't fully understand the whole iCloud thing either. Sometimes it works perfectly, other times it acts as if it has a mind of its own. And that was what happened that day in space. I had my iPad with me, so I could play some games and take some pictures from space for our family albums. I like to take pictures, so I can show them to Beth when I come home. However, that day in space, my iPad, over NASA's communication linkage and the capsule's Wi-Fi, connected with my iPhone back on earth. As a result instead of me taking pictures in the capsule, my phone took pictures back on earth in my living room.\" \n\nBefore I even knew what was going on a video began playing on the giant screen. It showed me coming into my living room and dragging Brett behind me. Every woman there in the studio went into shock as they watched my drunken tryst with Brett. A few of the older women gagged and vomited as they watched me sucking Brett's tiny dick. \n\n\"Shut it off,\" someone screamed. It took a few moments before I realized that I was the one screaming. \n\n\"So now you see,\" said Jack. \"I never dumped her. It was just too painful for me to talk about all of this. And every time I see her, even in those pictures, it just brings home exactly what I lost. I didn't throw her away as she claimed. She threw me away. I don't have a clue why. I just needed to get away to try to start over. At the same time, I was injured and trying to heal. And I had a lot of emotional things to go through over the mission. Whether you guys realize it or not, I lost a man up there, and I keep thinking if I had done something different, just one thing ... EVERYONE ...might have made it back.\" \n\nThere was nothing but silence in the room. \"Thank you for listening to me,\" said Jack. He stepped down off of his chair and left the stage. More than a thousand women watched him go. They all started clapping wildly. They continued to clap long after he was gone. \n\nAnd then almost as one they turned back to me. The look they gave me scared me. Then they started pointing at me and booing. I didn't know what to do. Then something flew out of the audience and glanced off of my shoulder. It hurt. I looked at the floor of the stage set where it had fallen. Someone had thrown a copy of my book at me. Then another flew through the air nearly hitting me in the head. That was when I got up and started running. "
    ],
    "authorname": "StangStar06",
    "tags": [
        "cheating",
        "mustangs",
        "romance",
        "space"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/rocket-man"
}