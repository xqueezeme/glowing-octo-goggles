{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 06",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\n*\n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental.\n\n*****\n\n\"She'll see you now,\" Rae announced, looking at Neal and Gita. Gwen wondered if 'she' was the woman she had just had her own audience with, and if so, what Mrs. Danning could want with the young couple.\n\n\"Uhh yeah, right then.\" The big Aussie's cockiness seemed to waver, and he looked down at his cinnamon-skinned wife. \n\n\"Yes, I suppose it is that time.\" The couple began saying their goodbyes, making promises to keep in touch and \"that we'll all do it again next year\". The Slut purred at the hint of Neal's manhood as it pressed against her lower ribcage when he hugged her. \n\n\"James will be along in a moment to escort you to your car,\" Rae told the other models, then turned to the Harpswells. \"If you'll follow me, please.\" Both Neal and Gita smiled and nodded before falling in behind the buxom young redhead. Liz and Natalie began to gather their things.\n\n\"Shouldn't we wait for them?\" Gwen asked after the couple left the room. \"And what about Cho and Dorothy?\"\n\n\"Cho and Dorothy will be here a while. They're still answering questions and taking orders.\" The murmur of voices in the next room was a sure sign there were plenty of guests that had stuck around after the show had finished. \"And Gita and Neal,\" Liz said with a knowing smile, \"aren't leaving tonight.\"\n\n\"What do you mean? They're staying? Why?\"\n\nShe shrugged. \"The hostesses for these little home parties usually get a gift for their time and effort. Sometimes it's a no-stick skillet or a seal-and-store bowl. Mrs. Danning's getting Neal and Gita for the evening.\"\n\n\"Getting...\" A look of shock crossed Gwen's face. \"Oh my God, you can't mean,\" she lowered her voice and looked about. \"For sex?\"\n\n\"Maybe,\" Liz calmly replied. \"Or maybe they're going to discuss the effects of European unity on the dollar. Who knows? Gita didn't give me the details. She did tell me that they were spending the evening and tomorrow morning, and that they were told they would be leaving some time before noon.\"\n\nGwen's voice remained low and urgent. \"Both of them? Together? All of them? Are Neal and Gita...do they have to do this? They're not in some kind of trouble, are they? Or, you know, prostitutes?\" \n\nLiz laughed. \"I doubt it. Mrs. Danning saw them at the show last year and asked Cho if they might be interested in having a sleepover this year. Cho asked them and they said yes. Gita sounded like she was looking at it as a way to network with one of the country's most powerful women. College students always have to be on the lookout for post-school job prospects.\" She smiled again and shrugged. \"Or maybe they're just into rich women.\"\n\nJames appeared at the door. \"If you ladies will follow me, I'll show you to your vehicles.\" The Lady voiced disgust with the Harpswells for consenting to what she was sure was pleasure for pay. The Slut disagreed, seeing it as a great opportunity to enhance their future prospects for any evening's efforts. Gwen felt sympathy for them at having been put in such a difficult spot, but also saw the cold practicality in the arrangement and reluctantly admitted she had been faced with the same decision during her time with Miss Ritter. Her arousal flared at the remembrance of the depravities she had willingly consented to and performed in return for instruction from a truly great equestrienne, and imagined the Harpswells preparing for their own night of servitude and debauchery.\n\nNatalie drove and Liz played navigator while Gwen took the back seat, lost in thought until her sister-in-law made the turn from country lane to public road. \"Do you really think she's going to have sex with them?\" She quietly asked of whoever wished to answer.\n\n\"Maybe,\" Liz replied as she continued to watch the road. \"I hear Gita's a wiz with rope bondage, it could be Mrs. Danning wanted to see some of her best knots. Or, she wanted to watch a more intimate performance starring two very attractive young people. Or she wants to play her own party game with Neal. Or she just wants some company and pleasant conversation. Or, all or none of the above. We can ask them next year, but I bet the non-disclosure agreement we signed extends to after-party activities.\" \n\nGwen didn't share Liz's uncertainty regarding the expectations of the young couple. She knew from her parents' circle of friends that the rich just assumed their wealth and power brought privilege. Sylvia Danning was no different than the local country club set, just infinitely more powerful and therefore more entrenched in an aura of self-entitlement. The Harpswells would definitely be hard at work satisfying their benefactor who in turn would likely be giving little thought to her \"guests'\" comfort and pleasure. She remembered that when Miss Ritter had occasionally grant her physical release\u2014and more often than not, withheld it despite her student's apparent need\u2014she had been using positive and negative reinforcement to shape acceptable effort and behavior. The higher her instructor set the bar, whether in the ring or in her bed, the harder she had worked to earn that reward. Gwen could only hope Neal and Gita would be rewarded more fairly and more often for their efforts.\n\n\"Home sweet home,\" Liz announced with a sigh as they pulled into the condominium parking lot. Gwen trailed behind the two women as they climbed the stairs to the second floor, wondering how long it would be proper to socialize with them before slipping off to bed. She was tired, but sleep was going to wait until other more pressing needs had been addressed. \n\n\"Make yourself comfortable,\" Liz told them as she dropped her bag on the couch. \"Help yourself to whatever's in the fridge. I don't know about you two, but these shows always get me horny as hell and I'm need to do something about it,\" she said matter-of-factly, looking at Natalie. \"What about you?\" \n\nThe blonde glanced at her sister-in-law and smiled. \"I'm ready.\"\n\n\"Am I alright in your guest room?\" Gwen asked softly.\n\n\"You sure you don't want to stay with us? Plenty of room...\"\n\nThe Lady had prepared and rehearsed her answer but Gwen hesitated, the Slut urging her to reconsider. \"No, thank you very much,\" she replied thoughtfully. \"That's very nice of you to offer, though.\" \n\n\"Up to you,\" Liz said with a knowing smile, sensing the inner battle being waged. \"See you in the morning.\"\n\n\"'Night sweetie,\" Natalie said, kissing her cheek as she walked by. \"Sleep well. If you change your mind...\" \n\nGwen stood and watched the two women disappear into the far bedroom while Lady and Slut bickered. With a sigh, she trudged to the guest room and quickly stripped down to bra and panties. \n\nAt least go borrow a vibrator if you're going to do it yourself, the Slut urged. A Neal-sized dildo might be nice, too. The Lady advised fingers would suffice if ignoring the deviant urges altogether and going to sleep was not an option, but on this she was overruled. Gwen crept into the hallway, not bothering to redress.\n\nShe peeked in from the side of the open doorway, a single bedside lamp giving off a soft light. Natalie was already nude and lying on her side with her back to the visitor, her hand propping up her head as she watched her equally naked friend rummaging through a dresser on the other side of the bed. \n\nLiz caught the movement off to her side. \"Hi?\" Natalie looked back over her shoulder to where here friend was looking and smiled warmly.\n\n\"Hi,\" Gwen replied, fighting the urge to retreat back to the safety of her room. \"Sorry if I'm interrupting, but, umm, I was wondering if it would be alright if I could borrow a, umm,\" she lowered her voice, \"a vibrator? It's been an interesting day,\" she explained weakly.\n\nLiz smiled. \"Of course you can. I was just looking for one to bring to you.\" She stepped away from the nightstand and motioned to the open drawer. \"Come pick one. Or two, they're small. Well, some of them, anyway.\"\n\nGwen cautiously entered the bedroom and moved slowly to the other side of the bed, as if the door might slam shut and trap her. The drawer seemed full of lingerie, dildos, vibrators and other things not quite identifiable, a plethora of shapes and sizes in a rainbow of colors. \n\n\"I'm kind of an aficionado of the masturbatory arts,\" Liz explained. \"So much easier than a man.\" \n\nNatalie laughed. \"But not always as satisfying. You know you can use the one I trained any time you want, right? You seemed to at least find him not terrible once upon a time.\"\n\n\"He wasn't bad and if I ever have a moment of weakness sometime I may take you up on your offer. But there's a lack of men in the room tonight, so Gwen, go ahead and take whatever you want. I've got plenty.\" \n\n\"I see that.\" She looked at the neatly-sorted collection, a bit overwhelmed, hesitant to actually touch them.\n\n\"I will admit that a talented partner can be a very nice change of pace,\" Liz allowed, looking at the woman on the bed before her focus shifted to Gwen. \"Or two. Are you sure you wouldn't like to join us?\" \n\nGwen looked from one naked woman to the other, giving the Lady one last chance to extract her from this. The Slut was more convincing. \"I'm not very talented and I'm not sure what I'd have to do...\"\n\nLiz answered by moving behind her. Gwen froze in place and allowed the nude woman to deftly unlatch her bra. \"Natalie seems to think you're pretty good, and we can teach you. First things first,\" she said softly, \"let's get rid of these.\" Fingernails rasped down the nervous woman's waist and into the waistband of her panties, gently pushing them down. \"Just bare skin in my bed. And yours is beautiful.\" There was a kiss on the back of her neck as soft hands smoothed over the contour of her hips and ribcage. \"On the bed,\" she directed, \"lie down next to Natalie.\" She numbly complied, arms at her side and looking up at the ceiling, fervently hoping Liz would make good her promise and guide her.\n\n\"Hi there,\" Natalie said from her right, her hand already smoothing circles on her sister-in-law's firm stomach. \"Relax and enjoy. We'll take good care of you.\"\n\nLiz lay down on her left, two naked bodies and a headboard blocking the newcomer's escape. There was a lingering kiss on her cheek, and Liz's hand replaced the one on her stomach as Natalie's traced a line up between her breasts and onto her upper chest. The lips moved to her earlobe, nibbling, a tongue leaving a damp trail along the folds. \n\nLiz gently pulled Gwen to face her and claim first dibs, offering a reassuring smile to eyes tinged with fear and anticipation. She could feel Natalie's body pillow against her back as her sister-in-law rolled up behind her while Liz continued to pleasure her from the front. \"New kid sandwich,\" she murmured, and her lips found the surrounded woman's. They were soft, tasting of the bright red lipstick she had worn for the show, and her tongue searched for a partner to dance with. Gwen responded, committed to following the strawberry-blonde's lead. Natalie's hand ran over their mashed-together breasts while her mons ground sensuously against Gwen's tailbone. \n\nThe feel of two bodies enveloping her own was electric, two hands that instinctively knew a woman's triggers working confidently to create sensations unlike Gwen had ever experienced before. The hand caressing her nipple moved down between their sexes to find her clit as Liz grabbed Gwen's wrist and firmly placed it between the strawberry-blonde's now-open legs. Gwen's finger began to explore the woman's very wet sex and welcoming channel, and the hand grasping her wrist let go to make its way between her flank and the hip behind her so a finger could gently turn circles around the sandwiched woman's rosebud. Gwen wanted to do more for the body behind her, to return some of the pleasure she was receiving, but the arm trapped under body was impossible to free. Later, she promised. Just a little later, after I...\n\nLiz broke their kiss. \"I've wanted to taste your pussy ever since I saw Natalie open you up to shave it. Lay back,\" she demanded. Gwen gladly complied and rolled on to her back, her legs spreading to accommodate the body that was forcing its way between them. Liz smiled with satisfaction, then knelt and bent to claim her prize like a lioness stooping to feed from freshly-captured prey. \n\nHer kisses were gentle at first, a soft reminder of how her day had started\u2014had Natalie really done that in front of Tim today? It seemed so long ago\u2014and lingered, the tip of Liz's tongue just barely making contact with the soft folds beneath. It was slow to extend further and explore more fully, and Gwen's hips twitched involuntarily in an effort to persuade it upwards towards her tingling clitoris. Natalie was close by, crouching to the side of the twitching woman and teasing her erect nipples. Gwen's hand came up between her sister-in-law's legs, palm firmly pressed against her mons while two fingers squished their way into her very wet sex. \n\nIf being the center of attention of one person's efforts was good, two was overpowering, and her much-needed release rocketing towards the peak of the precipice. Liz's technique was a cross between Natalie's and Miss Ritter's, forceful and authoritative while being performed by a person who seemed to be concerned with giving pleasure and knowing how to deliver it. The initial gentleness shown by the woman between her legs had transformed to something more urgent and demanding. Liz was now licking and nibbling in a very energetic and almost aggressive manner, ramming her tongue into the wet opening as deeply as it would go before drawing it roughly up her slit to an engorged clitoris. Gwen wanted to take hold of the woman's head and force it deeply into her as her orgasm drew close, but Natalie's sighs and undulating hips told her the hand between her legs was appreciated where it was. Besides, she was sure Liz would react poorly to being forced into the sex she was pleasuring\u2014she was very clearly in control and unlikely to willingly cede that. Gwen's arms could not have obeyed the order anyways as her climax broke like storm surf on the beach a moment later. Soft, warm, feminine bodies surrounded her, cradled her, until the waves passed, and she lay there in the afterglow, basking in the feeling of well-being.\n\n\"Welcome back. Good trip?\" Liz finally asked from her left. \n\nGwen nodded, eyes still closed and struggling to bring her breathing under control. \"Very. Thank you so much. That was wonderful.\"\n\n\"Good, and the pleasure was mine.\" The recovering woman's eyes opened in surprise at the kiss placed on her lips, the taste of lipstick now supplanted by the taste of her own juices. The lips withdrew and the body shifted to bring a thigh over her head, giving her a very clear view up Liz's body, past the pussy descending upon her and up the flat stomach, firm breasts and determined face above. \"My turn. Eat me.\" \n\nShe had no time to object, somewhat surprised her compliance had been assumed, not that Liz had been wrong. Soft, warm flesh settled itself on her lips and cradled her nose. \n\n\"You sweet-talker, you,\" Natalie said with a laugh, her voice muffled by the thighs beside Gwen's ear. \n\n\"What can I say? I know what I want and I like to take charge.\" Gwen stuck her tongue into the wet folds as Liz steadied herself with both hands on the headboard. \"Play with my tits,\" she ordered, grabbing the hands of the woman she rode and placing them on her chest. Gwen obediently palmed the globes and gently caressed her erect nipples.\n\n\"Oh so nice,\" she hissed in satisfaction, \"keep licking.\" Despite her command, the motion of her hips really didn't give Gwen much of a chance to be proactive, Liz helping with her own satisfying by rubbing her wet folds and clitoris up against the offered tongue and nose. She was close as well and Gwen briefly worried that the spasming sex being pushed down onto her might cut off her air supply before the orgasming woman could recover from her climax. \n\n\"Nice,\" Liz breathlessly repeated as her grinding slowly came to a halt with a shudder. She dismounted from the woman below her and dipped to kiss the face covered in her wetness. \n\nGwen barely managed to catch her breath before Natalie announced \"next\" and placed herself over her sister-in-law's head to face the foot of the bed. The blonde leaned forward a bit before gently settling over the waiting tongue, apparently to make herself available to the body that Gwen felt straddle her hips. A finger appeared between Natalie's legs, stroking her, and Gwen ran her tongue over both digit and clit as well as the fleshy lips closer to her mouth. The finger and the tongue combined to quickly send Natalie over the edge. She pushed backwards in her throes, desperate for something solid to grind against, and Gwen managed a deep breath before her mouth and nose were engulfed by wet flesh. \n\nGwen lay cuddled between the women after Natalie had recovered and climbed off to return to her side of the bed, hands gently caressing skin, no words spoken. The Lady strongly advised she retreat to the guest bedroom, but the feel of warm, soft bodies on either side of her was too much to resist. In the end she remained there with Natalie and Liz, the last to fall asleep. She had never slept in a bed with more than one adult, but it was not the unfamiliarity with the etiquette for this kind of behavior that delayed her rest, it was guilt. She knew it was not the old feelings, her depraved actions since the morning not producing the remorse it would have just a few months ago. It was Tim. He deserves better, deserves more than just little snippets of sordid details to tease him, she thought as she tried to limit her tossing and turning so as not to wake the others. This is all so wrong. The proper thing to do would be to limit her perverse explorations to include only him if she could not ignore her deviant urges altogether; but even the Lady admitted that she had fallen so far as to make that nearly impossible while the Slut declared giving all this up would be ludicrous. There would have to be another way. \n\nShe was disappointed the morning did not bring a resumption of the night's events, and although none of the women bothered to dress for breakfast and the recap of the lingerie show did reawaken her arousal, Gwen bowed to Liz's desire to be in charge and so did not suggest another bedroom session. Her thoughts turned to Neal and Gita, if they were awake yet or had even been allowed to sleep, and what they were doing now... \n\n\"Whattya think?\" Natalie asked with a grin as she finished her coffee. \"Picture time?\" \n\nLiz rolled her eyes. \"I dunno...\"\n\n\"C'mon, he's been a good sport about all this. I wanna give him a little thank-you gift. It's not like he hasn't seen it\u2014hell, he's put a variety of body parts and fluids in it.\"\n\n\"That was a quite a while ago.\"\n\n\"So you think it's changed since then? Developed some sort of magical aura that would burn his eyes?\"\n\nLiz thought for a moment. \"You sure he won't think it's something more? Don't tell him I said so, but he really is a good guy. I don't want to tease him and make him think it's taking deposits again.\"\n\n\"I'll make sure he understands. Please?\"\n\nShe groaned and got up from the table. \"Alright, let's just get it over with.\"\n\nGwen looked on, confused. \"Get what over with?\"",
        "\"Liz and me are gonna have our picture taken for Adam. You're gonna be the camerawomen.\" \n\n\"Picture? What kind of picture?\"\n\n\"You'll see.\" Natalie smiled, grabbed her phone from her purse, and headed down the hallway towards the bedroom. Her sister-in-law followed, still unclear as to what exactly was going to happen. \n\n\"Here,\" the blonde said,\" handing the phone to Gwen when she entered. \"Take our picture.\"\n\n\"If I'm going to do this, I get to be on top,\" Liz insisted, gesturing to the bed. \"You first.\"\n\n\"Alright, alright,\" Natalie grumbled, lying down on her back and opening her legs. Liz straddled her hips and bent over, her face next to the woman below her. \n\nTo Gwen it appeared as though one wide open sex had been stacked on the other. \"You want me to take a picture of you two like that?\"\n\n\"Yup! He'll love it!\"\n\nLiz looked down at the woman below her, then back at Gwen. \"No faces, right?\"\n\n\"No faces,\" Natalie agreed. \"Okay hurry up and take the picture\u2014she's heavy. Make it good, remember, this is for my husband.\"\n\n\"You don't seem to mind me on top of you when I make you come this way,\" Liz retorted. She ground her mons into the woman below for effect.\n\nMy brother, Gwen reminded herself as she shook her head in disbelief. I'm taking a picture of his naked wife and her naked friend for my brother. She aimed the phone with shaking hands and clicked the button three times. \"Okay, think I got it.\" \n\nThe women got up and reviewed her efforts. \"Those will have to work,\" Liz announced and looked at Gwen. \"How about you? Think your husband would like a picture of you and Nat?\" \n\n\"Me and Natalie? Oh God, no! He's never even seen her naked, much less...no!\"\n\nLiz smiled at the woman's discomfort. \"So I guess Natalie's not gonna get one of you two for Adam, huh?\" She smiled at Gwen's shocked look and discomfort.\n\nNo more was said of the matter and the women were on their way home shortly after. The vehicle was quiet, Natalie concentrating on her driving, Gwen mulling over the events of the last twenty four hours and their consequences. \n\n\"Natalie, do you ever feel bad that Adam doesn't get to do the same kinds of things you do?\"\n\n\"Things like what?\"\n\n\"Things like last night. What we did at Mrs. Danning's, and...after.\" \n\nThe blonde laughed. \"He's more than welcome to model for legalbeefcake.com if he's ever asked. I do think he's on the upper end of sexy for a lawyer. And if one of his golf buddies wants to give him a handy, he's free to take that offer too. I doubt that would happen though, guys are kinda funny about anything more than a fist bump or a bro-hug.\"\n\n\"Did you really mean what you told Liz about her and Adam?\"\n\nThe blonde looked over and smiled. \"Of course. It's not like they haven't done it before.\"\n\n\"But not since college, right?\"\n\n\"Well no, not since then, but that mainly because her ex is the jealous type. She hasn't really had any desire or use for a man since she got divorced, but I get the feeling she's starting to get the itch again. She's worried about the crazies you meet on a one-night stand, and a friend with benefits kind of hookup makes her nervous because if she wanted to get laid when she has the urge she'd probably feel like she has to return the favor when her fuckbuddy comes calling at 3am. I keep making the point to her that Adam would fit her requirements really well. She'd have complete control of when, where and how.\"\n\n\"And you're alright with that? You don't mind sharing him?\"\n\n\"I put a lot of time and effort into his training,\" Natalie said with a grin. \"You Currans are an inexperienced bunch, but very teachable and eager to learn. I'm happy to share the fruits of my labor with those I trust, and I trust Adam and Liz.\" Her smile changed, softer and more heartfelt now. \"I trust you too, you know.\" \n\nGwen smiled back, certain Natalie had chosen her words poorly and was not offering her all the same privileges as Liz. \"I trust you, too.\" That makes you a member of a very select group, she added silently.\n\nIt took her a moment to realize the SUV was turning right on to a side road that appeared to cut through heavy forest. \"What's going on?\"\n\n\"Which one did you like best?\" Natalie replied, pulling to the side and reaching for her phone. She looked at the screen for a moment, then turned it to Gwen. \n\nOne of the pictures she had taken a short time ago was now displayed. \"I don't know, they all pretty much show the same thing, right?\"\n\n\"I think this one,\" Natalie decided. \"It's a little sharper.\" She typed, pressed a button, waited a moment then put the phone back. \"All set.\"\n\nGwen eyed her suspiciously. \"What did you just do?\"\n\n\"Sent it to Adam. What did you think I was going to do with it?\"\n\n\"I don't know, maybe show it to him at home, in private?\" She said plaintively, her voice rising. \"What if someone sees it?\" \n\n\"Don't worry, it's his personal phone, not his work phone. I know the work phones can be confiscated for evidence, and I wouldn't want him to have to have to give up who the hotties are in a deposition,\" Natalie replied with a smirk. \"And Adam will keep it private. He's not going to show it to anyone.\" Natalie wasn't quite sure that had been completely true in the past, but if he had let a few \"slip\", he had done so discretely. Those had been solo shots, though; she was fairly confident he was not about to show this one to his golf buddies. Still, the thought of him showing off his wife with her friend had produced a delightful surge of fear-based adrenaline. \"If someone sees it who shouldn't, no faces, so they won't know it's me or Liz, right?\"\n\n\"It'll be on his phone! Who else could it be?\"\n\n\"A sizeable portion of the population has the same standard equipment. Your brother could just be a giant horndog who gets photos of other guys' pussy. Plausible deniability, you know?\"\n\n\"So why did you wait until now to send it?\" \n\n\"I wanted to wait until he got to the golf course. It's fun to try and rattle his game. It's also bait so he comes home as soon as he gets done rather than hang out with his buddies in the lounge.\" \n\n\"Do you do this a lot?\"\n\n\"What, send him naughty pictures? Sure, why not? We both get a kick out of it. He sends me some, too. Wanna see?\" \n\n\"No!\" Gwen cried. \"He's my brother!\"\n\nNatalie laughed. \"I know, I know, but he does have a nice bod for a lawyer...\" \n\n\"I'm sure he does, but I don't need to see it. What is it about sending dirty pictures to other people? You two, Ali and Jason...\"\n\n\"It's fun and a gift the person getting them is sure to appreciate. I'll bet Tim would like one...\"\n\n\"What! You mean like the one you just sent?\" \n\n\"How about one of just you to start? I think I take a good enough picture for your husband to figure out he's looking at girl parts.\" \n\n\"And anybody else who sees it!\"\n\n\"No face,\" Natalie reassured her, \"just a smoking hot body. Plausible deniability, right?\"\n\n\"We can't take a picture like that right now,\" Gwen reasoned. \"We're out in public. Maybe we can do it some other time?\" \n\n\"We've been here five minutes and haven't seen another car go by yet. It's pretty secluded...you don't even have to get out. Just take your shirt off. C'mon, live on the edge a little. Trust me.\" \n\n\"Yes, this weekend has been absolutely boring,\" Gwen sniffed before hurriedly looking about, checking for onlookers. \"You won't get my face in the picture?\"\n\n\"No face, just a pair of unnaturally perky boobs. Gimme your phone.\"\n\nGwen again looked about, then reached in her bag and handed it over. \"Just one,\" she announced, unbuckling her seat belt. With a final scan of the surroundings, she raced to shed the blouse and bra. \"Hurry.\"\n\n\"Perfect.\" Natalie aimed the camera. \" Hey, I've got an idea.\"\n\n\"What? Natalie, take the picture or I'm going to get dressed again!\"\n\n\"Take your pants off and then put your seatbelt on. We'll make it look like we were driving when I took it. Just do it,\" Natalie insisted, sensing the woman's reluctance. \"The only way anyone could see your cooch is if they walk right up to your window.\"\n\nGwen looked around again, then hurriedly shed shoes, pants and underwear. \"Don't get my face.\" \n\n\"I won't. Put your foot up on the map pocket in the door, open yourself up a little. Look casual.\"\n\n\"I'm naked, Natalie! How much more casual can I be!\" Gwen slouched in the seat and the phone's camera clicked in quick succession. The Lady urged her to get dressed as they reviewed the pictures. \"That one,\" Natalie announced, handing the phone back. \"Send that one.\" \n\nGwen checked each of the photos for anything that might identify her, finally agreeing with Natalie on the best of a perverted lot. She looked up in panic as the engine roared to life and the SUV began a U-turn. \"What are you doing?\" \n\n\"Going home, unless you wanted to hang out here a little longer.\" \n\n\"Let me get dressed first!\" \n\nHer sister-in-law grinned at her. \"I dare you to stay like that all the way home.\"\n\n\"Somebody might see me!\"\n\n\"I doubt it. You're sitting pretty high up. Tell you what\u2014put your shirt on, but nothing else.\"\n\n\"Why?\"\n\n\"Because I want you to. Do it,\" she repeated with an air of authority. \"I'll give you a treat if you do.\"\n\nGwen grumbled as she slipped on her blouse and slunk deeper into her seat. \"If I get caught like this...\"\n\n\"You won't. There's a blanket in the backseat\u2014I'll let you put that over your legs if you want. Gonna send your picture to Tim? I'm sure he'd appreciate knowing you're on your way back.\" \n\nGwen scanned the 2-lane highway for threats, then back down at the phone. She triple-checked the destination she had selected\u2014the idea she might send this to the wrong person was too horrifying to contemplate\u2014and started typing.\n\nFor you\n\nPlease don't show anyone!\n\nOn our way home\n\nLove you \n\nShe held off sending it, pondering the wisdom of her action, knowing that once sent it would be very difficult to undo. Tim will love it, the Slut suggested. Something for him for once. With a deep breath, she hit the send button.\n\nNatalie's hand slipped from the gearshift and gently snaked under the blanket to Gwen's bare thigh as she was deleting the last of the photos from her phone. It didn't stop there, the driver's fingers gliding down to urge her passenger's legs apart. \"I think you like showing off,\" she said, gently inserting a finger in Gwen's exposed slit. \"You're very wet.\"\n\n\"I'm not showing off...you said nobody could see, right?\"\n\n\"Yeah, but just imagine if somebody could...\" The next two hours were decadent torture as Natalie kept one hand on the wheel and one hand between her sister-in-law's legs, alternating strokes and caresses with periods of inactivity where her middle finger just rested between swollen lips. Gwen eased her seat back and spread her legs to make herself more available in an effort to keep Natalie's hand moving and avoid those moments of frustration when she stopped. The blanket had long since slipped to the floor, but Gwen didn't feel the need or desire to retrieve it just yet. \n\nNatalie was skilled, bringing her passenger ever closer to climax in cycles, exciting then backing down for a bit to slow her climb as Gwen's hips tried to create pressure against the palm that rested lightly on her mons. They were ten miles from the turn into the Nelson driveway when the long-awaited orgasm was finally delivered. \n\n\"That was incredible,\" Gwen groaned before realizing just how close they were to home and scrambling to find her pants, deciding that underwear wouldn't be necessary for the short walk from driveway to the house and stuffed bra and panties in her bag. \"Thank you\u2014let me return the favor\u2014maybe if you pulled over somewhere?\" \n\nNatalie laughed. \"You get very brave after you come! I appreciate the thought, but don't worry, I'm sure your brother will take good care of me when I get home as long as those pesky kids aren't around.\" She grinned. If I know your brother, between the picture and telling him what we did this weekend I'm pretty sure he's going to make me walk funny.\"\n\nThe SUV pulled into the yard as Gwen was slipping on her shoes. Tim's truck was not there but Eric's was. One of the business trucks was gone\u2014Eric had the emergency duty this weekend, maybe he and Tim had switched? But why would the young plumber be up here on his day off? She reached for the door handle and remembered where her underwear was\u2014hopefully the young man would not come out of the shop to greet her. \n\n\"You did great,\" Natalie told her as she exited. \"I'm so proud of you, the way you handled everything. Think you want to model again?\"\n\nGwen got out and turned to look back at her sister-in-law through the open truck doorway. \"I would\u2014\" she stopped mid-sentence, a look of horror spreading across her face as she spotted the wet patch on the seat cover, dark against the light gray of the fabric, where she had been sitting. \"Oh my God, Natalie, I'm so sorry\u2014let me go get something to clean that with\u2014\"\n\n\"Don't worry about it,\" the blonde laughed and rubbed her fingers over the stain. \"It just looks like you spilled a drink there. It'll dry.\"\n\n\"Are you sure?\" I\u2014\"\n\nI'm very sure, and I'm glad you enjoyed yourself. You did, right?\"\n\nGwen blushed and looked down. \"Yes, I did. It was a lot of fun.\"\n\n\"Good! Then we'll have to do it again. I'll call you tomorrow\u2014I want to hear what Tim thought of your picture.\" \n\nShe waved from the deck as the SUV disappeared down the driveway. Maybe a swim before I make lunch, she thought. Eric is probably in the shop...skinnydipping would be fun but too dangerous, she mused. It might be fun to let herself get caught...she smiled at the little fantasy, imagining the young plumber's embarrassment. The Lady's admonishment that she hadn't felt it necessary to be embarrassed herself was summarily dismissed. \n\nShe was startled enough to let out a small squeak as she entered the kitchen and saw a naked man leaning against the counter, his arms crossed expectantly at his chest. Tim had not left after all, a half-smile on his face. \"Oh\u2014I didn't think you were here. I didn't see your truck, but I did see Eric's. Is he out on a call?\"\n\n\"Yup, Eric's out on a call. My truck's behind the shop\u2014I was loading scrap to take down to Manny's when I got your message. That's a hell of a picture of you,\" he replied, picking up his phone. \n\nShe smiled weakly. \"How do you know it's me?\"\n\n\"I've spent years memorizing every nook, cranny and curve of my wife's body, a habit you've made a lot easier recently. I'd recognize it anywhere.\"\n\n\"You aren't mad that I sent it, are you? I know it was risky\u2014somebody else could have seen it\u2014but Natalie thought you might like it.\"\n\n\"Much as I'd love to show that off to all my friends, I think I'm going to keep that one to myself. And Natalie was right.\" He gestured to his swelling member. \"Do I look mad?\" \n\n\"No, I guess not...\"\n\n\"The problem with a picture like that,\" he continued, arms again crossed, \"is when you send it you have to be ready to take care of anything that might come up because of it.\"\n\nGwen smiled. \"That's not a problem to me at all. Let's go to the bedroom. There are some things I want you to know about last night. If you still want me to take care of that\u2014\" she motioned to the snake raising its head to look at her\u2014\"after, I'll be glad to.\"\n\n\"Uh-oh, that sounds interesting. I want to hear all the details of your weekend, but I really need to take the edge off first so we can take our time after and I can really enjoy every detail, and anyways, it's hard to talk when your mouth is full, if you know what I mean.\" Tim raised his eyebrows suggestively and grasped his erection, shaking it at her.\n\nGwen smiled, gracefully dropped to her knees and took him in her hand. \"When was the last time you came?\" \n\n\"Well, uhh...\"\n\n\"You can tell me. I just want to know how much to expect. You do want me to take the edge of this way, right?\"\n\n\"Yeah, that'd be nice. And, uhh, if you really wanna know, yesterday morning, right after you left.\"\n\nSo Natalie had been right about that, too! \"Really? What Natalie did, did you...masturbate...because of that?\" \n\n\"Well, uh, yeah! Sorry, but that was hot as hell!\" \n\n\"Huh,\" she murmured, studying the cock just inches from her face. Not as big as Neal's, not that size was important, but it was all hers, and that was far and away the most important thing. She felt a deep obligation to satisfy it and the man it was attached to.\n\n\"You aren't mad that I saw that, right?\" Tim asked, mistaking her concentration for displeasure. \"Natalie said I didn't have to leave, and I didn't know she was gonna do that...\"\n\n\"No, I'm not mad,\" Gwen replied still studying the veined length she was holding. \"Just a little surprised that you liked it. I'm still getting used to the idea that, umm, you like us being together like that.\" She leaned forward, letting the spongy pink head slide past her lips until they locked around his corona. The tickle of her tongue against his opening made him groan. \n\nTim's need was urgent and he took control, gently taking hold of the base of her ponytail while he fucked her mouth. Gwen moaned in approval and he occasionally stopped mid-stroke to allow her to remind him of her tongue's talents before gently thrusting again. \"Eric's back,\" Tim grunted as they both heard the sound of tires crunching up the driveway, but he showed no desire to stop or retreat to a more private spot. Gwen grew nervous at the thought of being discovered servicing her man like this, but there was excitement too, the Slut encouraging her to show off her cocksucking talents. The cock's owner was too close to allow much time for that though, and he thrust several more times before stopping, this time with his length pushed as deeply as he dared go without gagging her. Across the yard a truck door slammed and Gwen felt the first jet of salty cream against the back of her throat. She flinched with the first pulse, willing herself not to pull away from the sudden volleys of hot sperm, letting it pool on the back of her tongue. \n\nTim pulled his length from her mouth even as the last spurt was leaving the tip. \"He's coming up to the house,\" he calmly announced, looking past her through the window. \"Since you're dressed, can you see what he wants while I go get some clothes on?\" Gwen hurriedly swallowed her husband's offering, wryly noting that her efforts to get her husband to drink more fruit juice seemed to be paying off, and got to her feet. She was struggling to retie her ponytail when Eric knocked. Gwen, cheeks flushed and her brow damp, opened the door to greet him.\n\n\"Hi, uhh, Gwen, is Tim home?\" \n\nShe smiled. At her insistence, Eric had stopped calling her \"Mrs. Nelson\" just a couple of weeks ago. \"He is. C'mon in, he'll be right out. Is everything okay?\"\n\n\"Uhh, yeah, everything's fine, I just wanted to let him know...\" he was momentarily distracted by a little white pearl on her shirt, very visible against the light blue fabric, sitting just above her breast. He knew what it looked like, but it couldn't be that...just his overactive imagination again. It's just spilled ice cream, or mayonnaise. \"I just wanted to let him know,\" her repeated, now worried that he had been caught looking at his boss's chest, \"that the compressor on truck two blew a seal.\" \n\n\"Goddamn thing,\" Tim grumbled, tucking his shirt into his jeans as he came down the hall, \"I knew that was cheap shit when we bought it. I think we've got a dead compressor with a good seal in it\u2014at least I hope it's good. I'll swap it out.\" \n\n\"I hope I didn't interrupt anything\u2014I mean, your Sunday,\" Eric said nervously looking back and forth between Tim and Gwen, noting the pearl was quickly melting and the wet spot on her shirt expanding.\n\n\"Oh no, I just finished lunch and was getting ready to feed him,\" Gwen said, shooting a glance at Tim. \"Are you hungry? I can make you something.\" ",
        "\"Oh no, thanks, that's very nice of you, but I grabbed something on the way up here.\"\n\n\"Lemme grab my boots and I'll see if those compressors come apart better than they stay together,\" Tim said, heading back to the bedroom for socks. Gwen and Eric smiled at each other in awkward silence.\n\n\"Oh\u2014should I gave you the paperwork from that job now?\" Eric asked, thrusting out the multicolored stack in his hands. \"Or just put it on your desk in the office?\" \n\n\"No, I'll take it now,\" she said, reaching out. The handoff was missed and pink, yellow and white slips of paper fluttered to the kitchen floor. Eric dropped to one knee to retrieve them, but she was faster. The young plumber noticed something else about the loose blouse as it fell away from her body while she bent over to collect the paperwork-Gwen Nelson was braless beneath it. His efforts to help were forgotten as he kneeled there, entranced by how her breasts dangled and wobbled as she reached to bring the pile together and sort them, erect nipples rubbing against the fabric. He ripped his eyes away and rose a second before she did, thankful for this unexpected blessing. \n\nTim reappeared, stuffed his stockinged feet into the boots by the door and stomped across the yard. Eric volunteered to help with the tear down and rebuild, mumbled his goodbyes to Gwen and followed him out the door.\n\nI still need a swim, Gwen thought as she watched them walk across the yard. Eric was not the type to gossip with the other employees, but she took no chances and selected her most conservative suit and was standing on the pool deck before rethinking her choice. She really disliked the restrictive feel of wet suit\u2014or a dry one, for that matter. Tim and Eric would likely be in the shop for a little while yet; decision made, Gwen pushed the straps off her shoulders and shimmied out of it. She swam for some time and then climbed out to let the sun dry her, gloriously naked and exposed, the Slut daring the men to come up and look. Eric's truck was still in the yard when she returned to the house wrapped in nothing but a towel to wait for Tim, anxious to tell him about her weekend."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "lesbian",
        "vibrator",
        "blow job",
        "masturbation",
        "photos"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-06"
}