{
    "title": "Surefoot 27: Oubliette",
    "pages": [
        "SUREFOOT: OUBLIETTE\n\n<br >\"Counselor's Log, USS Surefoot-A, Stardate 55082.18, Commander Kami Hrelle, Recording: while the ship engages in its usual -- and unusual -- routine, the cadets are preparing to take their final exams today. The collective tension and anxiety among them at this time is, to say the least, palpable, and we are endeavouring to alleviate this through proven methods...\"\n\n*\n\nThe scent of exotic blossoms hung in the still, cool air of the Arboretum, remodelled since the incident with the Vlathi attack many weeks before. The real gardens merged almost seamlessly with the holographic images on the surrounding walls of forests leading up to craggy grey snow-capped mountains on an illusory horizon. A fountain, unseen, gurgled softly nearly, but otherwise, the environment was suffused with peace -- as the Counselor desired.\n\nThirty cadets knelt or sat on mats in a square of six by five, facing Kami, who knelt on her own. Everyone wore loose-fitting clothes, or underwear, or nothing at all, whichever made them feel most comfortable, as Kami talked them through the relaxation techniques. \"Breathe in... Hold for one, two, three, four, five, six... Breathe out... the quieter your mind becomes, the more you will hear... there is no turmoil that you do not create yourself, and bring forth from within...\" She opened her eyes, looked out and added with a smile. \"Speaking of which: I recommend you not have anything gassy for breakfast, for the sake of those around you.\"\n\nThat elicited chuckles and signalled the end of the session, as people rose, dressed, stretched, rolled up their mats and chatted amongst themselves, the animation in the room seemingly immune to the effects of the relaxation techniques. She moved among them, smiling and offering words of encouragement, before finally approaching Alpha Squad. \"And how are my favourite babysitters feeling?\"\n\nJonas Ostrow offered a (mostly) confident grin beneath his silver hair. The Capellan Eydiir Daughter-of-Kaas was typically stoic, a harsher version of the more contemplative Qarari Kitirik, who was carrying Captain Fuzzybutt, Sasha's old Caitian Starfleet doll that had since been adopted as the Squad's lucky mascot. The white-furred Caitian Meow Rrori was growling under his breath. The Bolian Neraxis Nemm somehow managed to invent a move of pacing in place while still keeping her feet firmly fixed. And their leader, Sasha Hrelle, just let out a long, wistful sigh, as if she was still listening to the breathing mantras.\n\n\"Well,\" the Counselor grunted, folding her arms across her chest, \"Nice to see my efforts to help you relax are bearing fruit. Rotted fruit with maggots, yes, but-\"\n\n\"Sorry, Kam,\" Sasha offered. \"You have helped, and we appreciate it, and I know we'll all be fine in there, but-\"\n\n\"It's stupid,\" Rrori declared, grinding his fangs. \"This is the Twenty-Fourth Century! We should have more advanced methods for education than this! Why can't we just have cybernetic implants in our brains and download the data directly? We could get through the Academy in a day, without taking tests and with all the knowledge we need!\"\n\n\"But would you know what it all meant?\" Kami countered, smiling at his consternation. \"Many cultures have tried educating like that in the past; it doesn't teach you how to use the information you gain, how to be creative and resourceful, doesn't give you muscle memory. It just makes you organic databases, little better than the Borg.\" She approached him, teasingly scratching him behind his left ear. \"Besides, do you really want someone cutting into this beautiful head of yours unnecessarily?\"\n\nRrori growled, but also purred at the touch. \"It is beautiful...\"\n\n\"Holy Hraxor,\" Neraxis groaned. \"I will die in there. I will just drop dead in there!\"\n\n\"I know,\" Eydiir quipped, deadpan. \"Reviving you will be part of my tests.\"\n\n\"Oh, you're high-larious! You don't have Advanced Tactical to look forward to!\"\n\n\"True, all I will be doing is just be spending the next four years after this studying for my medical degree while serving full time as a Starfleet nurse.\"\n\nThe Bolian scowled, her blue skin darkening as she leaned in closer to Jonas and in a mock whisper offered, \"Take my exam for me, Scrappy, and I'll wear that Orion slave girl outfit you keep asking about.\"\n\nHe flushed, as Kami laughed. \"Don't all look like you're marching to your deaths! You did well in your Practice Exams!\"\n\n\"Half of us failed those,\" Jonas reminded her glumly.\n\n\"Exactly! If you're gonna fail, that's when you do it, and get it out of your systems!\"\n\n\"Hopefully,\" Rrori groused.\n\n\"And we do have our lucky mascot with us,\" Kit reminded them, indicating the doll. \"While we of course do not genuinely ascribe to superstitions, there is a cultural and psychological validity to allowing a fetish to distract us from anxiety.\" He sighed. \"'Hopefully', as Best Friend Rrori said.\"\n\n\"Whatever works for you,\" Kami concluded, smiling. \"Now, go shower, have breakfast and get ready for the briefing, while I have a quick word with Sourpuss here.\"\n\nSasha looked up, scowling, as her friends chuckled and moved away. \"Why am I a Sourpusss?\"\n\n\"I don't know, why do you have a mouth that looks exactly like a Horta's nethers?\"\n\nSasha stared. \"Do I even want to ask how you would know what one of those looks like?\"\n\n\"No, you don't; it was the 2350s, it was a weird time.\" Kami put an arm around the younger woman's waist and guided her to a quieter part of the Holodeck. \"Now, what's wrong? Worried that you'll fail?\"\n\n\"No. I mean, I won't do great, but I won't fail.\"\n\n\"The others? Do you think they will?\"\n\n\"What? Seven Hells, no! I made sure they studied nearly every waking moment! I even got Rrori to take his suppressants to get his Season under control and not be distracted!\"\n\nKami smiled. \"Then why are you worried?\"\n\n\"Because they're my Squad! My friends!\" Her expression turned anxious. \"Something can still go wrong. I'm their leader-\"\n\n\"Yes,\" Kami agreed. \"So start acting like one. You've seen your father during a crisis situation: cool, confident, jocular. Be more like him.\"\n\n\"I can't be! He's- he's-\"\n\nKami leaned in and murmured, \"He's terrified, just like you. He wants to protect all of us, but like you he knows that something can still go wrong. But every good commander knows that their crew looks to them, not just for orders, but for confidence. So many times, it's the one thing that keeps the crew together. Fear breeds fear. Confidence breeds confidence.\"\n\nSasha's stomach rumbled. Loudly.\n\nKami chuckled. \"And hunger needs attention.\" She hugged the girl. \"Good luck. Misha and I will be thinking of you.\" Then she smiled. \"Well, I'll be thinking of you. I'm afraid your little brother's too distracted at the moment with his new girlfriend.\"\n\n*\n\nDeck 3 Mid -- Sickbay Suite -- Cr\u00e8che:\n\nThe Klingon leaned forward, leering with jagged teeth at his opponent as he declared, \"I will eat you whole, and save your companion for later! Do you think you can stop me, you furry little petaQ?\"\n\nMisha Hrelle kept himself upright by grasping the thin bars of his playpen, staring up at Doctor Kline and responding with a tiny defiant roar and a baring of his own teeth.\n\nKline pretended to stagger back and melodramatically cower in fear of the roar. \"Arrgh! Curses! The little petaQ is too much for me!\"\n\nBeside him in the playpen, a small wrinkled lime-green figure in colourful clothes, with beady black eyes on stalks, swept-back fins on the sides of her head, and a stubby, curved-down nose, clapped her hands and laughed with delight at the epic struggle between her new boyfriend and the ridge-headed monster with the bad breath.\n\nDoc Masterson, preparing the particular food for the two infants, frowned at his colleague. \"Y'all mind watching the cussing in front of the Critters, dude? You don't want Naida taking anything like that back to her Daddy.\"\n\nKline looked over at Masterson and sneered. \"Don't be an old woman! She is far too young to understand-\"\n\n\"PetaQ!\" Naida declared happily.\n\nThe CMO chuckled. \"Roylans grow faster than weeds. And they have memories sharper than my ex-wife's wit. Captain Weynik won't be too pleased when the Starsong comes back to pick his daughter up. For that matter, neither will the Counselor.\"\n\nKline laughed, folding his arms across his chest. \"I like the Counselor. She has fire in her belly, like a Klingon woman. I would love to make her mine, and tame her.\"\n\nMasterson grunted. \"Tame her? Take away the thing you admire most? That's like wanting a bat'leth in order to dull the blade. What's the point in that?\"\n\n\"No point at all, boys.\" Kami informed them as she strode into the Cr\u00e8che, walking up to the playpen and bending down to rub her muzzle against Misha's, before reaching in and picking up Naida, cradling her and stroking the ridges running down along her throat. \"Hello again, my beautiful little girl! And what have you and my son been up to in my absence?\"\n\n\"PetaQ!\" Naida replied. \"PetaQ! PetaQ! PetaQ!\"\n\nMisha giggled.\n\nKami blinked, looking to the two doctors. \"Seriously? It was tough enough convincing Weynik to let her stay onboard for the day! Now you boys manage to make her first word a Klingon curse?\"\n\nKline shrugged. \"It was my first word.\"\n\nKami rolled her eyes, looking down at Misha. \"Well, young man? Care to impress me as well?\"\n\nMisha tightened his hold on the playpen bars, grimaced with concentration... and farted in his diapers, his stubby tail shaking from the effort.\n\nNaida giggled and clapped her hands.\n\nKami looked to the Roylan infant and confided, \"That's how his father won me over.\"\n\n*\n\nDeck 2 Mid -- Cadets Mess Hall/Conference Room:\n\nThe breakfast trays were fed back into the replicators for recycling, the chairs and tables were stacked and moved to the far wall, and the cadets were in uniform, at attention, facing Captain Hrelle and Commander T'Varik.\n\nThe Vulcan First Officer was addressing them. \"Holodecks 1 and 2 are now configured to edify the regulation Academy Exam Rooms. When you select a Testing Station, sit down and key in your identification, and the appropriate exams will be provided. There will be holographic invigilators on call in both Exam Rooms should assistance be required, as will drinking fountains and hygiene chambers. I should not have to remind you of the regulations against cheating in any way, or in assisting others in their exams.\n\nBut I will remind you that this is not a race to see who finishes first; be absolutely certain that you are satisfied with your answers before you log out of your station and depart the Room, as you will not be permitted to return.\" She looked to Hrelle. \"Do you wish to add anything at this time, Sir?\"\n\nHrelle looked thoughtful at the offer. \"Yes, actually.\" He looked out at the cadets. \"I am one lucky fat bastard.\"\n\nAs the cadets laughed at that, T'Varik clarified dryly, \"I was expecting something more pertinent, Sir.\"\n\n\"This is!\" He grinned at the young people. \"I mean it, I am one lucky fat bastard. I've got to know and work with all of you. You're all smart, strong, talented, resourceful, brave, selfless, hard-working people. Any commander would be honoured to have just one or two of you under him, but I've been privileged to have all of you! You're all going to make your mark in Starfleet!\n\nAnd years from now, when I'm a grey-furred old retired cat moaning about the weather and my noisy grandcubs -- and there's no rush in making that happen by the way, Sasha -- I can look back with pride, knowing that I played a small part in getting you out there.\n\nYou can do this. Trust in your own abilities. Trust in our confidence in you.\"\n\n\"Well said, Sir,\" T'Varik complimented, sounding almost pleased at the mature approach he had adopted.\n\n\"And when it's all done and out of the way,\" Hrelle added, \"You'll have a party of epic proportions, and I'll order all of you to get absolutely shitfaced!\"\n\nThat broke the room up.\n\nHrelle looked to T'Varik, grinned and gave her the Thumbs Up. The Vulcan calmly waited for the crowd to settle before concluding with, \"Cadets 1-15 proceed to Holodeck 1, Cadets 16-30 to Holodeck 2. The Exams will begin in 20 minutes. Dismissed.\"\n\nAs the cadets filed out, jabbering excitedly among themselves, Hrelle leaned closer to T'Varik. \"How was that?\"\n\n\"That was... undeniably you, Sir.\"\n\n\"Thanks!\" He rocked nervously in place. \"Look at me, I'm a bundle of nerves for them! I feel like I'm gonna give birth!\"\n\nThe Vulcan raised an eyebrow. \"You do appear to have the hips for it, Sir.\"\n\nHrelle stopped and stared in astonishment -- and delight. \"Mother's Cubs! Was that an actual burn, Commander?\"\n\nShe looked away. \"I have no idea what you are referring to, Sir. No tissue damage appears to have been inflicted.\"\n\n*\n\nDeck 3 Fore -- Holodeck Suite Corridor:\n\nGamma Squad Leader Falok stood formally before Eydiir, the young Vulcan male's hands folded behind his back. \"Wishing someone luck is, of course, illogical.\"\n\nThe young Capellan female mirrored his pose. \"Of course. We have superior intellect, and have prepared sufficiently for obtaining commensurate grades.\"\n\n\"Indeed.\" He paused, his stoic expression shifting. \"However... there is nothing inherently disadvantageous to expending the minimum amount of energy in the verbal desire of good fortune.\"\n\n\"Indeed not.\" Eydiir straightened up. \"Good luck to us both.\" Then something like mischief brightened her eyes. \"There would be nothing inherently disadvantageous to a good luck kiss, either.\"\n\n\"I would agree.\" They drew together.\n\nNearby, Rrori and Delta Squad Leader Isabelle Zhou were more effusive with their affection, his hands moving through the Englishwoman's hair. \"We will conquer them, Izzy. We will conquer them all and gnaw on their bones and-\"\n\nShe reached up and pressed her forefinger against his snout. \"We will do our best. No one needs to be conquered, or gnawed on.\" She smiled. \"At least, not until the party.\"\n\nNearby, Kit faced Izzy's Medical Specialist, Hafsa al-Samra, clasping her hands tightly, their voices murmuring to each other; Sasha could have leaned in to listen, but chose to give the budding young lovers a moment of privacy.\n\nShe all but avoided looking at Neraxis and Jonas as they lip-locked passionately, shamelessly, nearby, oblivious to everyone around them.\n\nShe was certain her own discomfort didn't come from being the only member of her squad not currently involved with anyone else. She was happy with that. Content-\n\n\"Hey, Sash.\"\n\nShe turned at the familiar voice. \"Giles!\"\n\nGiles Arrington strode up, eyes wide and handsome features a welcome distraction. \"I, ah, just wanted to wish you good luck.\"\n\nSasha brightened at the presence of her former lover. \"Yeah! You too, you know? Good luck, and all that.\"\n\nThey shifted in place for a second or two, before moving into an awkward hug.\n\nStill tightly wrapped around Jonas, Neraxis pulled back to warn, \"Hey! Behave yourselves, you dirty Bumpers! Holy Hraxor, some people have no discipline!\"\n\n*\n\nDeck 2 Fore -- Bridge:\n\n\"On course to Shangris IX, Captain,\" Neheru reported from Ops. \"ETA 5.7 hours.\"\n\n\"Um... okay.\" Hrelle tapped his claws on the arm of his chair. \"No problems, no crises, nothing to take note of?\"\n\n\"Ah, no, Sir.\"\n\n\"Good. That's, um, good. So there's, uh, nothing for me to do, then?\"\n\n\"No, Sir.\"\n\n\"Nervous about the cubs, Uncle Esek?\" C'Rash suggested from her Tactical station, amused.\n\nHe shot a look at her. \"Of course not, Brat. They'll be fine. They'll all be... fine.\" He bolted out of his chair and moved to the Ops station, gently shifting Neheru slightly to the side while calling up the mission specifications. \"There's quite a few navigational hazards in this system, isn't there?\"\n\n\"Sir?\" Neheru asked, bemused.\n\nHrelle called up a system map, indicating several places. \"See? There's subspace rifts, null space, general instabilities -- look at all these warning buoys.\"\n\n\"What?\" C'Rash exclaimed sarcastically. \"Putting warning buoys around navigational hazards? Whatever next?\"\n\nNeheru gave her a look, but then focused on their Captain again. \"There do appear to be a larger than usual number of them in this system. Do you see a problem with this, Sir?\"\n\n\"Nothing... except that many of these subspace anomalies only seem to have appeared in the last couple of years.\" He called up comparison charts from the Archives to illustrate. \"See? What's making them all form? What are they studying here?\"\n\nNeheru called up the data. \"Weather patterns on Shangris IX. There are five personnel, all listed as Exo-Meteorologists.\"\n\nHrelle frowned, as he studied the details: one Vulcan, a Dr Vassak, and four humans: Professors Shryalis, Kessis, Barredo and Cartier. \"Very strange. No technicians, no physicists or support staff-\"\n\n\"Maybe you should go visit Aunt Kami and burn off some of that nervous energy?\" C'Rash suggested, smirking. \"I'm sure she'll appreciate it.\"\n\nHrelle straightened up. \"Contact the station, I want to have a quick word with them.\"\n\n\"Aye, Sir.\"\n\n\"Oh, and put Lieutenant C'Rash down for double duty tomorrow for being a smartass.\"\n\n\"Aye, Sir.\" The Kelpien failed to suppress an 'I Told You So' look at C'Rash as the Caitian female hissed. Then he announced, \"I have them, Sir. Audio only.\"\n\nHrelle nodded and took his seat again. \"Shangris Station, this is Captain Esek Hrelle of the USS Surefoot, en route to you.\"\n\nThere was an almost uncomfortable pause, but before Hrelle could speak again, a gruff male voice responded. \"What do you want?\"\n\nHrelle blinked. \"May I ask with whom I'm speaking, please?\"\n\nThere was another pause, and then the voice returned. \"I am... Professor Barredo. Again, I ask what do you want?\"\n\nHrelle leaned forward, feeling his hackles rise. \"Don't you recognise me, Professor? Your old friend, Crazy Esek, from Nimbus Three? We kept that Mexican restaurant open all night serving us Ensalada de Culo, and then went home with those waitresses! Remember?\"\n\n\"Mmmm... yes, I remember, Captain. Those were good times. Forgive me, but we are very busy here.\"\n\nHrelle rose to his feet now, his tail swishing in unrest. \"Of course, Professor. I just wanted to call and apologise.\"\n\n\"Apologise? For what?\"\n\n\"Well, we're having warp drive problems, and we're gonna be late bringing your supplies to you.\"\n\n\"I... see. When will you arrive?\"\n\n\"At present speed, 13.5 hours. But when we do get there, you can come onboard, and we'll treat you to some fine non-replicated food. Have your bib ready, because I promise you, it's gonna get messy! Surefoot out.\" As the channel closed, he turned to Neheru, his expression taut. \"Go to Yellow Alert.\"\n\n\"Sir?\"\n\n\"You heard me.\"\n\nC'Rash turned back to him. \"Uncle Esek, the cadets- the Final Exams-\"\n\n\"Can't be helped.\" As the Yellow Alert sounded, he continued. \"Helm, increase speed to Warp 9.5. Ops, update Starfleet Command that something's wrong at Shangris and request further information on their actual mission. Tactical, run an analysis on that transmission, and find out who I was really speaking to.\"\n\nEveryone obeyed, C'Rash turning and facing him again, sensing his change of mood and mirroring it. \"You think there's something wrong with your friend?\"\n\n\"He's not my friend, I've never been to Nimbus III, I've never kept a Mexican restaurant open, believe it or not, I've never gone home with any waitresses -- and if there is such a dish as Ensalada de Culo, even I won't eat it. Helm, what's our new ETA?\"\n\n\"At Warp 9.5, 1.05 hours, Sir.\"",
        "An alert drew C'Rash's attention back to her station. \"Captain, the transmission is definitely from the direction of Shangris IX... but the vocal and carrier wave analysis marks both as Ferengi in origin!\"\n\nHrelle nodded. \"The Columbia reported spotting one of their Marauders in this sector the other day. And if the Ferengi think one of our stations is gonna be easy pickings... well, I did promise them that it was gonna get messy...\"\n\n*\n\nIn Exam Room 1, Sasha was chewing on some of her hair as she pondered the latest question; the Tomed Incident was not one of her favourite subjects, and she considered moving on and coming back to it-\n\nThe screen locked as the ship's computer announced overhead. \"Yellow Alert! This is not a drill! All personnel report to your duty stations immediately! Repeat: Yellow Alert-\"\n\nLike others around her, she bolted to her feet, knocking over her chair, not sure if she was annoyed by this case of Examinus Interruptus, or relieved.\n\nShe quickly decided on Relieved. She knew she would be lucky to scrape by, and so welcomed a distraction from the inevitable.\n\n*\n\nDeck 2 Fore -- First Officer's Quarters/Office:\n\nT'Varik had been surreptitiously monitoring the initial progress of the Exams -- for academic purposes, of course, rather than just idle curiosity -- when the Yellow Alert sounded. As she felt the ship accelerate to high warp, she allowed herself an indulgence of 0.74 seconds alarm and annoyance before opening a channel to the Bridge. \"This is T'Varik, what is happening?\"\n\nNeheru answered. \"Commander, it appears a Ferengi Marauder is attacking the weather research station on Shangris IX.\"\n\nShe called up the details of Shangris, her work with the Final Exams having taken up most of her time and leaving her with less than fully-comprehensive information on what was meant to be a routine resupply mission. As the station personnel manifest appeared, Neheru continued. \"The Captain believes that there is something more going on there than just weather research.\"\n\nT'Varik bolted to her feet as she focused on the image of Shangris' team leader. \"The Captain is correct. Please have him meet me in his Ready Room immediately.\"\n\n*\n\nDeck 2 Fore -- Captain's Ready Room:\n\nA picture of a broad-jawed, olive-skinned Vulcan female approaching middle age appeared on the Mission Ops screen. T'Varik stood closest to it. \"The official records list this individual as Doctor Vassak, graduate of Exo-Meteorology at the Vulcan Science Academy, civilian specialist with the Federation Science Council, previously assigned to the USS John Dalton studying weather patterns in the Azati Prime system, before being transferred to Shangris 3 years ago to manage the team based there.\n\nThis is entirely false.\"\n\nAs Hrelle, C'Rash and Kami exchanged glances, T'Varik continued. \"I knew her 22.6 years ago as Sakuth, a fellow instructor at Starfleet Academy. She was dissatisfied with her professional and personal prospects, and changed career path, joining Starfleet Research and Development -- officially.\"\n\n\"And unofficially?\" Hrelle prompted.\n\nT'Varik paused before replying. \"She is in fact working for Starfleet Intelligence, overseeing security for classified projects with R&amp;D; I have occasionally encountered her record while assisting cadets who are seeking positions within SI. I believe Sakuth's current rank is Captain, though she is not assigned command of any particular vessel.\"\n\nKami crossed her arms. \"So the Ferengi didn't just pick this as an easy target, did they? They're after whatever secrets are being kept on Shangris?\"\n\n\"Undoubtedly.\" The Vulcan looked to Hrelle. \"You were correct to call for a Yellow Alert, Sir.\"\n\nHrelle sighed. \"I wish I hadn't been. The cubs-\"\n\n\"It could not be helped, Sir. I will reschedule the Exams following the conclusion of our work at Shangris. Captain, may I have a private word with you before we repair to the Bridge?\"\n\nHrelle looked to Kami and C'Rash, who left. Once the doors closed, he asked, \"What's up?\"\n\nThe Vulcan folded her hands behind her back and adopted a more formal posture. \"Captain, protocol compels me to offer full disclosure: when we were both stationed at the Academy, Sakuth and I were in a long-term, intimate relationship. In fact, we had discussed marriage before we dissolved our relationship and she moved on.\"\n\nHrelle nodded at this for a moment, before offering, \"Acknowledged.\"\n\nT'Varik paused, as if waiting for a lengthier response from him, before replying. \"I must confess I was expecting a more... prurient reply.\"\n\nHe smirked. \"Contrary to my reputation, on rare occasions, I am capable of a mature attitude with my colleagues and crew. And I can see that it's still a sensitive subject for you.\" At her reaction, he elaborated, \"Not that I believe it would ever have an effect on your typically exemplary behaviour, of course.\"\n\n\"Of course.\"\n\nHe leaned back in his chair, regarding her. \"At the risk of appearing prurient, though, may I ask what happened between you two?\"\n\n\"You believe it necessary to know?\"\n\nHis expression altered slightly. \"Well, maybe not necessary. But it only just occurred to me how infrequent you and I have shared any personal details. You usually go to my wife or my niece for such things, and I only get to hear about anything if they deign to share it. You don't have to answer, of course; I am more than happy to keep our relationship on a strictly professional basis -- but if I have to deal with someone from SI, I'd like to have as much truth as possible already established, and I trust what you would say more than what any of them would.\"\n\n\"Thank you, Sir.\" She paused before continuing. \"Sakuth had planned on teaching Security, Tactics and Martial Arts at the Academy, but eventually came to believe that such a career would be... unworthy of her. Beneath her.\"\n\n\"An ambitious Vulcan?\"\n\n\"That would imply emotion; Vulcans would prefer to view it as a logical and efficient utilisation of our full potential.\" Now her brow furrowed slightly. \"She was recruited by a then-Commander Trenagen into Starfleet Intelligence. He attempted to recruit me as well, but I turned down his offer. Sakuth... believed this to be a reflection of deficiencies in my character, and our relationship ended inamicably.\"\n\nHe grunted. \"Her loss. But I'm curious as to why you chose not to reveal it to Kami or C'Rash? They are, after all, the Counselor and your current partner.\"\n\nShe breathed in. \"I have found that such a revelation tends to spur in both of them a desire for intimate, salacious details that I am less than sanguine about supplying at this time. I would prefer that they remain ignorant for now.\"\n\nHrelle smiled.\n\n\"What is it?\"\n\nHe sighed. \"We have a saying on Cait: 'What a female doesn't already know isn't worth knowing'. If we cubs are smart enough we learn that quickly; it saves us a lot of smacked snouts from our mothers and Matriarchs for lying.\"\n\nShe raised an eyebrow. \"You believe they are already aware?\"\n\n\"Almost certainly -- but they will also be aware that you don't want them to be aware, so they'll wait to get it out of me. I won't say anything, of course, which means they'll work it out of me anyway.\" He straightened up. \"Enough of all this emotional nonsense. Shall we focus on more immediate concerns?\"\n\n\"Gladly, Sir.\"\n\n*\n\nThe ninth planet in the Shangris system was small, blue-green in the computer-enhanced image that was rapidly growing on the viewscreen, at the centre of the dilated tunnel of high warp; beside it, tactical data scrolled down about the vessel in geosynchronous orbit over the equator of the world.\n\nHrelle gripped the arms of his chair; moving at over 2500 times the speed of light, and it still seemed to take forever to get where they were going. Still, the cadets had left the Exam Rooms and taken their expected duty stations, otherwise behaving professionally, for which he was once more proud of them. \"Helm, ETA?\"\n\nVelkovsky never took her eyes away from the controls. \"Ten minutes, Sir.\"\n\n\"Have they detected us yet?\"\n\n\"They don't appear to,\" Neheru reported, then responded to an alert. \"Captain, we've received a reply from Starfleet Command! It...\" The Kelpien paused, his flat face creasing as he continued to read silently now.\n\nUntil T'Varik prompted him with, \"Lieutenant?\"\n\nNeheru shook himself, looking up again at Hrelle. \"It's a... Directive 27.\"\n\nThe more experienced officers reacted, though the cadets remained more bemused. Hrelle stiffened and ordered, \"Read it aloud, Lieutenant, so everyone else understands the implications.\"\n\nNeheru nodded. \"'Under Starfleet Security Directive 27, the Captain and Crew of the USS Surefoot is hereby authorised to take any and all steps necessary to prevent the Shangris IX Research Station facility, including its equipment, data and personnel, from becoming compromised by unauthorised parties. These steps include, if required, the destruction of said facility, its equipment, data and personnel, as well as the unauthorised parties. Signed: Admiral Ian Trenagen, Starfleet Intelligence Office.'\"\n\nHrelle allowed the words to sink in to the younger members of the Bridge crew. He had expected as much anyway, and as much as he detested even getting peripherally involved with Starfleet Intelligence skullduggery, he also knew his duty. \"What's the status of the facility?\"\n\nT'Varik glanced at her board. \"The station's orbiting defence platforms are destroyed, and the Marauder is continuing to fire on the station- wait, they've stopped now. I think they've brought the station's shields down. I'm detecting transporter activity.\"\n\nHrelle nodded at that. \"Red Alert!\" As the klaxon sounded and the lightstrip circling the ceiling of the Bridge glowed bright crimson, he continued, \"Velkovsky, take us in over the planet's polar region; its magnetic fields will mask us. C'Rash, arm phasers and photon torpedoes. Target the Ferengis' warp core; I want them destroyed before they even know we're there. Is that understood?\"\n\nThe younger Caitian looked up, but quickly nodded and replied, \"Aye, Sir.\"\n\nHrelle spared a glance at T'Varik, who had been looking to him but staying silent. She didn't have to say anything; he understood her reluctance to kill, to let the cadets see this option, as extraordinary and necessary as the circumstances might be.\n\nOnscreen, the planet's icy polar caps raced beneath as the Surefoot glided along the upper edges of its atmosphere, dropping out of warp before their faster-than-light trail could affect the exosphere and alert the Ferengi, and racing along on full impulse, preparing to destroy the Marauder.\n\nHe looked around again at the cadets, looking to him for orders, for guidance... for inspiration. They learned from him just as much as they did their lessons. And as much as it rankled him sometimes... he liked setting an example for them.\n\nThis was not the example he wanted to set.\n\nAfter a moment, he looked to C'Rash again, announcing loudly and deliberately. \"Lieutenant, target the Ferengi weapons ports and shield generators only. We'll see if we can disable them first rather than destroy them.\"\n\n\"Aye, Sir.\"\n\nHrelle looked back at T'Varik. \"SI might want to interrogate them, after all, and find out what they know.\"\n\nShe nodded, her eyes displaying her approval of his change of tactic.\n\nSuddenly the crimson, crab-shaped starship appeared in view, as C'Rash announced, \"Entering weapons range! Firing torpedoes!\"\n\nA volley of dazzling lights shot forth from the Surefoot, striking the port tip of the crescent Engineering section of the Marauder; caught with their shields down, portions of the Ferengi vessel's hull ruptured and splintered under the explosive yields, as the Surefoot's phasers followed the torpedoes, striking the central underside, where Starfleet Intelligence believed their main shield generators were situated.\n\n\"Helm, Attack Pattern Alpha One!\" Hrelle barked. \"Ops, hail them, order them to surrender or be destroyed!\"\n\nBut as the Surefoot swung around, the band of warp panels along the outer curve of the Marauder glowed white, before the ship itself departed at high warp.\n\n\"So much for that,\" C'Rash muttered, satisfied. \"Are we pursuing, Sir?\"\n\n\"No, but send out a General Alert to all ships in the sector, Neheru.\"\n\n\"Captain,\" T'Varik reported. \"Sensors are detecting four lifesigns: Vulcan... an indeterminate reading... and two Ferengi, obviously left behind by their ship. Sir, there's weapons fire- and the station's antimatter containment fields are degrading! They'll collapse in fifteen minutes, possibly less!\"\n\n\"Beam all lifesigns up! Alert a Security team-\"\n\n\"Unable to, Sir!\" Neheru shouted. \"There are transporter inhibitor fields in place! We can beam down, but not back up!\"\n\nHrelle rose to his feet. \"Get someone from Engineering to Transporter Room One with pattern enhancers! Better get someone from Medical too! C'Rash, you're with me! T'Varik, you're in command!\"\n\nThe Vulcan rose as well. \"Sir, as Captain you-\"\n\n\"-Have no time to argue this, Commander. Call me if the Ferengi return.\"\n\nHe was already on his way to the Bridge doors, C'Rash handing him a phaser from the weapons locker by her station as she followed him out, their boots pounding on the deck as they raced along, almost running into Jonas and Eydiir, the former carrying a set of enhancers in a shoulder bag, the latter wielding a medical kit, Jonas nodding and announcing, \"Reporting as ordered, Sir. What's our status?\"\n\nHrelle almost told them to stand down, and send more experienced crewmen. But then he accepted he couldn't treat them like cubs any more. They had been through too much already... and all under his command, he reminded himself. \"Federation research station under attack, two survivors, condition unknown, and two armed Ferengi. And the station will probably blow up in fifteen minutes or less.\"\n\nThe cadets nodded at that, Jonas replying with, \"Best get moving then, Sir. We have exams to get back to this afternoon.\"\n\nDespite the crisis at hand, Hrelle couldn't help but smile as he led them into the Transporter Room.\n\n*\n\nThe main Station Dome was of standard circular design, with configurable sections and corridors ringed around a central core. It was large, but no longer pristine: debris and smoke and acrid fumes filled the air, and a Red Alert chime made Hrelle's teeth itch.\n\nEydiir raised her medical tricorder. \"Methane and ammonia from the planet's atmosphere is leaking in through the dome. Best not to hang around long and risk respiratory damage.\"\n\n\"Not to mention an imminent antimatter explosion,\" Jonas quipped.\n\nThe Caitians reacted simultaneously to the cries and the weapons fire heard ahead, drawing their phasers and racing along one curved corridor, stepping over more debris along the way.\n\nThey drew back at the last second, ensuring the cadets halted as well, as energy bolts flew past them, and an anguished voice screamed, \"DEBTORS! DEBTORS EVERYWHERE!\"\n\nThe officers crouched, Hrelle silently signalling C'Rash to take a position behind some rubble nearby, before he called out, \"Ferengi! This is Starfleet! Your ship's fled, you're on your own! Drop your weapon and surrender!\"\n\n\"FILTHY DEBTORS ROBBING ME! LEAVING ME BROKE! I'LL DIE A PAUPER!\"\n\nHrelle frowned. Why was he ranting like that? \"Ferengi! This station is going to blow up! You can't go to the Divine Treasury now, with nothing! Give up, live to profit another day!\"\n\nAnother energy bolt struck the wall near C'Rash, making her duck beneath the fountain of rocks and dust that blossomed. Hrelle held his breath -- they didn't have time for this! -- and listened, building up a picture in his mind based on what he heard: the whistle of escaping air, crackling damaged power conduits, agitated pacing, incoherent muttering, an energy weapon on power cycle, almost ready to fire again-\n\nHe rose, turned the corner, aimed and fired, catching the Ferengi with a stunbeam that caught the right side of his bulbous, peach-coloured head. He dropped his weapon, and followed it to the ground.\n\nHe raced up to it, the rest of his Away Team following as he knocked away the Ferengi weapon and kept guard. \"C'Rash! Find the other one!\"\n\nEydiir dropped to one knee beside the Ferengi, running her tricorder over him, and frowning. \"This- This is wrong.\"\n\nJonas was clutching his shoulder bag and looking around. \"What is?\"\n\n\"The Ferengi is suffering from multiple systems failures, cascading out from his central nervous system, affecting his heart, lungs, autonomic system-\"\n\n\"Because of my phaser beam?\" Hrelle asked, concerned now.\n\n\"No, Sir, the failures were already there, which presumably was causing the irrational behaviour-\"\n\n\"Captain!\" C'Rash called out. \"The other Ferengi is here, dead! No apparent cause as far as I can see!\"\n\nHrelle nodded for Eydiir to go check, as a horrible thought swelled through him: what if there was some biological agent being created here, and it was now released, in the air and infecting them even as they stood there?\n\nHis combadge chirped. \"Captain, the magnetic chamber around the station's antimatter will collapse in ten minutes.\"\n\nJonas drew closer to Hrelle. \"I might be able to make repairs to it, Commander.\"\n\n\"Negative, Mr Ostrow. This is no malfunction, it's a self-destruct protocol; any attempt to halt it will trigger it immediately.\"\n\n\"Acknowledged, Commander,\" Hrelle told her. \"The Ferengi are dead, have you got a fix on the survivors?\"\n\n\"Yes, Sir, in a room six metres behind and to your left. The signs are still indeterminate for one of them.\"\n\n\"Stand by, I'm leaving the channel open.\"\n\nEydiir and C'Rash returned, the Capellan reporting, \"The other one died in the same way, no apparent causes.\"\n\n\"And you're not detecting any biological or chemical agents responsible?\"\n\nShe checked her tricorder again. \"No, Sir.\"\n\nHe nodded, feeling slightly relieved. \"Let's get the survivors and get out of here.\"\n\nThe Away Team moved to the section T'Varik indicated, and as the doors slid open, Hrelle strode in first, seeing what looked like private quarters. \"It's okay, we're-\"\n\nThe room seemed empty, deserted. But there was an elongated black metal box sitting on a table.\n\nIts lid was opening of its own accord; something dazzling began emerging...\n\nMother's Cubs... Hrelle turned in place, blocking the view for his Away Team. \"TURN AROUND! BACK OUTSIDE! DON'T LOOK!\" The terror in his voice made them obey, as he called out over his shoulder, \"We're Starfleet! STARFLEET! Not Ferengi! Get back in the box! NOW!\"\n\nHe listened, his heart threatening to burst through his furry chest, waiting for the lid to shut again, and hoping that they understood him. He swallowed. Seven Hells, that was close, too, too close...\n\nHe looked to his Away Team. \"Stay here. Don't look in that room.\"\n\n\"Captain?\" C'Rash started, confused.\n\nHe raised a finger to his muzzle for silence, and started back around the corner -- dodging back in time as phaser beams, set on Kill, shot out. \"DAMMIT, STOP! Captain Sakuth, this is Captain Hrelle of the Surefoot! We were on our way to pick you up when we detected the Ferengi attack!\"\n\nThe phaser blasts stopped, but a female voice called back, \"There is no Captain Sakuth here!\"\n\n\"My First Officer, Commander T'Varik, recognised your picture in the station files! I know you knew each other back at the Academy!\"\n\nAnother pause, and the voice replied, \"I do not know a Commander T'Varik-\"\n\n\"Captain, we drove off the Ferengi, and the ones left on the planet are dead, but your station is still on Auto-destruct! Admiral Trenagen's slapped a Directive 27 on this stroking place, so I'm perfectly in my rights to beam myself and my people back up and leave you to your fate! If that's what you want-\"",
        "He stopped as he heard the footsteps approaching the doorway, and a middle-aged, broad-chinned Vulcan female in a plain black civilian jumpsuit, the woman in the Personnel file his First Officer had shown him, approached, expertly holding a Starfleet phaser in one hand, albeit aimed to the floor. \"There is no need to shout any more, Captain.\"\n\nHrelle lowered his own phaser. \"Captain Sakuth, I presume?\"\n\nShe nodded curtly. \"The Auto-Destruct is at 6.6 minutes and counting.\"\n\n\"Can you halt it?\"\n\n\"It cannot be countermanded at this time. You have pattern enhancers with you? We will need them to transport our Device to your ship.\"\n\nHe nodded to the table. \"Who's in the box?\"\n\n\"Professor Kessis. She was injured in the Ferengi attack, but remains conscious-\"\n\n\"She was listed on your records as Human!\"\n\n\"A necessary security precaution. You must transport the Device up first, it is the culmination of our work here-\"\n\n\"No, we'll transport your injured scientist, and my Away Team, and yourself, and then we'll transport your Great Whatsit.\"\n\n\"Captain, my authority-\"\n\nBut he ignored her, focusing on his combadge. \"Commander, we have Captain Sakuth and a Professor Kessis, who's been injured. Contrary to the records, Professor Kessis is actually Medusan.\"\n\nHe saw the reactions from the Away Team at the revelation -- and then the almost-hidden reaction on Sakuth's face when T'Varik's voice responded. \"Understood, Captain, we'll isolate Auxiliary Sickbay on Deck 4 and clear the corridors between it and Transporter Room Four. You have six minutes now, Sir.\"\n\n\"Medusan?\" Jonas breathed out in horror, as he both looked at and tried to avoid looking at the box.\n\n\"Jonas!\" Hrelle snapped. \"Set up the pattern enhancers!\" He looked back at Sakuth. \"Where's your Great Whatsit?\"\n\nThe Vulcan escorted him to a nearby lab, where a large unmarked segmented black container roughly the size and shape of a ship's work bee sat. \"You should have beamed this up first. It's more important than any of us.\"\n\n\"Thankfully I disagree, a thousand times over. Come on! I'll get it beamed up in time!\"\n\nHrelle escorted Sakuth back to the quarters. Jonas had the four enhancer poles arranged in a square around the centre of the floor, where someone had moved Professor Kessis' box. \"Seven Hells, are you people crazy? You shifted her without us?\"\n\nC'Rash looked to him, her tail agitated, and presumably not from being near a Medusan. \"We were careful, Sir! Now let's get going!\"\n\nHrelle noticed that she and the cadets were indeed facing away from it, and stepped aside to let Sakuth walk into the enhanced field. \"T'Varik! Beam them up! NOW!\"\n\nHe kept his eyeline well above the box on the floor as he watched his Away Team depart with the two survivors. \"Time, Commander?\"\n\n\"Three minutes, Sir. Alacrity would be prudent.\"\n\n\"No shit.\" He grabbed the enhancers and raced back into the lab, quickly setting them around. The object looked like... well, like nothing valuable or dangerous was inside. But then, so did Professor Kessis' container. He stepped within the field. \"Beam us both directly to Cargo Bay 5, prepare it for secure storage...\"\n\n*\n\n\"Captain's Log, Stardate 55090.44: The Shangris IX Station was completely destroyed by its Auto-Destruct device. Of the five members of the team based there, two have survived: Captain Sakuth, and Professor Kessis, although Professor Kessis has apparently been injured by one of the Ferengi energy weapons. At the suggestion of our Chief Medical Officer, we are utilising one of the prototype Emergency Medical Holograms recently installed in the Auxiliary Sickbay; its program is basic and not very interactive at this time, but it should not be affected by the Medusan's unique defensive properties.\n\nWe have secured the Great Whatsit that the Shangris scientists were working on, and are now proceeding to rendezvous with the Starsong to transfer it and the survivors to their care. No reports have been received as yet regarding the Ferengi Marauder.\n\nFor the record, I wish to protest the deception in the official files regarding Professor Kessis' race. I don't give a damn just how Top Secret their project was, I shouldn't have to explain the enormous danger posed by the presence of a Medusan among sighted corporeal beings. Members of my crew, my cadets, could just as easily have gone mad and died from viewing her, the way the two Ferengi we found obviously did.\n\nBut then, we are dealing with Starfleet Intelligence here. Secrecy to the detriment of others is practically their motto.\"\n\n*\n\nThe bald, confused-looking human in Starfleet Medical Blue appeared on the holocommunicator platform in the Main Sickbay, looking nonplussed. \"This program has encountered a problem and needs to close down. We are sorry for the inconvenience.\"\n\nMasterson frowned. \"Why? What's wrong?\"\n\n\"What's wrong? What's wrong is that the Medusan is not a biological lifeform, and the Federation Medical Database is limited as to their treatments.\"\n\nThe CMO leaned back in his chair and crossed his arms. \"Come on, Tenderfoot, you have to come up with something. Think outside the box.\"\n\n\"I cannot do this. I am a literally within a box. This program has encountered a problem and needs to close down. We are sorry for the inconvenience.\"\n\nKline sneered beside Masterson. \"What a pointless, pathetic machine.\"\n\nMasterson ignored him, focusing on the hologram. \"Listen, pardner: Medusans are a collective of electromagnetic particles in a self-sustaining analogue of their biological bodies from their evolutionary past, including their original cerebral functions. They think, communicate, ingest, excrete, and reproduce with energy, all at specific wavelengths -- and when injured, they lose cohesion and bleed that same energy. Work out a means of giving her a transfusion until she can recover enough to heal herself.\"\n\nThe hologram frowned. \"The Medusan is not a biological lifeform, and the Federation Medical Database is limited as to their treatments. This program has encountered a problem and needs to close down. We are sorry for the inconvenience.\"\n\nThe Klingon doctor spat. \"I will disembowel your database!\" He looked to Masterson. \"You cannot allow this petaQ to dishonour our noble profession! Vulcans are resistant to the Medusan madness! Let us have one of them go in and treat it!\"\n\nMasterson frowned. \"None of the Vulcans onboard are sufficiently medically trained to deal with regular folk, let alone Medusans.\" He frowned as he nodded at the EMH prototype. \"On the other hand, what choice have we got? Chuckles here doesn't seem bright enough to hit the ground with his hat in three throws.\"\n\nThe hologram blanched. \"Should I be insulted?\"\n\nMasterson pushed his favourite Stetson back up from his forehead. \"Yeah, pardner. You should.\"\n\n*\n\nDeck 3 Fore -- Cadets Mess:\n\nThe tables and chairs had been replaced, and those not on duty had congregated here, though not many were eating, and their voices were muted.\n\n\"I have heard the rumours about Medusans,\" Rrori noted. \"It seems unbelievable that a race could be so hideous that just looking at them can drive you mad and kill you.\"\n\nKit looked to the Caitian. \"The name 'Medusan' was applied by Terrans who first encountered them, inspired by their own mythology of creatures who could turn people to stone, but this race's capacity is based not on any aesthetic attractiveness, but an evolutionary defence mechanism. It exploits the innate capacity for quantum phototransduction most organic visual systems possess. Viewing a Medusan 'in the flesh', as it were, triggers a quantum feedback that affects first the neocortex, causing the notorious bouts of insanity, and then the autonomic nervous system that controls vital functions such as heart rate and respiration.\"\n\n\"But despite the danger in looking upon them,\" Eydiir commented. \"Their thoughts and words are among the most sublime, peaceful and poetic. They can't help their natures, any more than we can help having canine teeth.\" She spared a glance at Kit. \"Those of us who have them, of course.\"\n\nAs Kit nodded in silent appreciation of his friend's acknowledgement of his race's different evolutionary path, as he added, \"Ironically, their energy states appear to make them even more vulnerable to weapons such as the Ferengis', than if she had been solid.\"\n\nAfter a moment, Jonas asked, \"Are we still on to resit the Exams at 1330 Hours, Sash?\"\n\n\"That's what I'm told. So, anyone looking for a bit of last-minute revision...\" She glanced around at the other cadets at their tables, furiously perusing over PADDs, while others stress-ate, or disappeared together to find a quiet place for more intimate activities. \"Or a bit of last-minute anything else, should take the opportunity.\"\n\n*\n\nDeck 2 Fore -- Captain's Ready Room:\n\nSakuth stood in front of Hrelle's desk. \"No, Captain. You do not need to know the nature of the Device.\"\n\nHe looked up at her. \"A Directive 27 was placed on you, your colleagues, your station, and the Great Whatsit in Cargo Bay 5. SI was willing to let you die rather than fall into Ferengi hands. Trenagen considered you expendable.\"\n\nShe folded her hands behind her back. \"That was an entirely logical and reasonable decision on Admiral Trenagen's part. If you are seeking to inflame my indignation over the decision in order to spur me into indiscretion, you are wasting both your time and mine.\"\n\nHrelle smirked, seeing an uncanny resemblance to a more familiar Vulcan. \"My own rank, and my role as Strategic Operations Officer for the sector covering the Federation-Cardassian Border, must give me a high enough level-\"\n\n\"It does not,\" she interrupted. \"Captain, after the Battle of Wolf 359, many think tanks were established to devise effective weapons and tactics against the Borg, as it is correctly surmised that they will soon return to attack the Federation again. It has already been established that the Borg accrue intelligence through the assimilation of beings such as Starfleet personnel, as was demonstrated when Captain Jean-Luc Picard was assimilated, and his knowledge prevented a potentially powerful weapon deployed by the Enterprise from functioning with efficacy.\n\nThe fewer people who know of the nature and operation of the device you refer to as 'the Great Whatsit', the less likely the Borg will learn and adapt to it beforehand if they happen to assimilate someone with information on it.\"\n\n\"Well,\" Hrelle commented, \"Someone must have screwed up somewhere, since the Ferengi came looking for it.\"\n\nSakuth nodded in acquiescence. \"They entered orbit and flooded subspace with interference to keep us from calling for aid. I responded by activating our defence systems, and they began their attack. We possessed a Mark 10 Planetary Shield System, which bought us time until your arrival.\"\n\n\"But not before you nearly lost all of your colleagues; I'm sorry we weren't here sooner.\"\n\n\"Your words of remorse are unnecessary, Captain. What is done, is done.\"\n\nHe studied her. \"Tell me, was it Professor Kessis' idea that she use her destructive properties against the Ferengi? Or was it yours?\"\n\n\"It was mine. The Professor understands Federation languages, even though she cannot reply verbally. I impressed upon her the necessity for her involvement, given our tactical disadvantage against the Ferengi.\"\n\n\"Disadvantage? You are a trained, experienced Security specialist. You were armed. You didn't have to involve a civilian from a nonviolent race.\" He stared hard at her. \"Did you tell her that you were armed?\"\n\n\"That is not relevant. What is done-\"\n\n\"-Is done. So you said already.\" Hrelle nodded at that. \"You know what I think? I think you wanted to use the opportunity to test the weaponisation capability of the Medusans, a race who are reclusive because they're intensely, intrinsically nonviolent; they fear and loathe harming beings like us.\" He grunted. \"Maybe we should just enslave their whole race and dump them onto any enemy with vision that comes along? Sure, it would violate their rights in a horrible fashion and be a betrayal of everything we espouse, but it'd be worth it, right?\" His door chimed before she could respond, and he called out, \"Enter.\"\n\nT'Varik and Kami entered, approaching his desk but stopping a respectful distance from Sakuth. T'Varik looked to Hrelle. \"I have an update for you, Sir.\"\n\n\"Thanks.\" Hrelle felt the temperature in the room halve as he looked to Sakuth. \"Captain, this is Kami Hrelle, my wife and our Ship's Counselor. And I believe you already know my First Officer?\"\n\nNow T'Varik regarded the other Vulcan, nodding politely. \"Captain Sakuth.\"\n\nSakuth's expression hardened. \"Your disclosure of my identity was a violation of Starfleet Security Directive 47.1, a court martial offence incurring a minimum sentence of 5 years' imprisonment.\"\n\nT'Varik remained impassive. \"Sub-Directive 47.1.4 stipulates that a limited disclosure of the identity of undercover Starfleet Intelligence operatives is allowed when their lives are in immediate danger, and when the benefits of the disclosure outweigh the harm -- as perfectly exemplified by our rescue of yourself, Professor Kessis and your Device.\"\n\nSakuth seemed to consider the argument. \"That... might be arguable.\"\n\n\"Your apology is accepted.\"\n\nHrelle exchanged looks with Kami, who noted to the visitor, \"Had T'Varik not said anything, we might have gone in unprepared, and maybe not been able to save you and your little project. Surely that warrants a Thank You, at the very least?\"\n\nSakuth offered her a cold stare. \"She performed her duties to the best of her abilities, Counselor -- such as they are. Gratitude is not required.\"\n\n\"Nor desired,\" T'Varik added, \"Not from Captain Sakuth, at least.\"\n\n\"Well, before this descends into hair-pulling and boob punches,\" Hrelle butted in, \"Commander, you said you had an update?\"\n\nT'Varik turned to him again. \"Yes, Sir. We have updated Starfleet Command, and await a response. But the EMH prototype is not suitable to the task of healing Professor Kessis, and our own medical crew lack the experience and the mental discipline to survive close contact. However, it has been suggested by Doctor Masterson that a Vulcan telepathically link with Professor Kessis herself and allow her to assist in healing her own body, as she would of course be more familiar with-\"\n\n\"No,\" Sakuth declared flatly.\n\nEveryone looked to her, Hrelle asking, \"Excuse me?\"\n\nThe other Vulcan straightened up more formally. \"It is not permitted to make any unauthorised telepathic contact with Professor Kessis, given the classified information she possesses.\"\n\n\"How did you communicate with her on the planet?\" Kami asked.\n\n\"Among our party was Professor Shryalis, an Aenar scientist. As Aenars are blind and telepathic, she was ideal, and as a fellow member of the think tank, she already had sufficient security clearance.\"\n\n\"Professor Kessis' condition is said to be critical,\" T'Varik reminded Sakuth. \"She could die without aid. She is the last surviving member of your group. Surely that makes this suggestion an unobjectionable security risk?\"\n\n\"The Device is complete and intact and onboard, and its design can be analysed and duplicated. While her death would be regrettable, it would also be acceptable.\"\n\nHrelle rose to his feet, his expression taut. \"Not to me. Why don't you volunteer, Captain? You've got the required security clearance level.\"\n\n\"I do, Captain. But Professor Kessis does not have my security clearance level. As such a telepathic link would involve a mutual exchange of thoughts between both parties, I cannot risk her possibly gaining access to classified intelligence above her level.\"\n\n\"You'd rather let her die?\" Kami asked, appalled.\n\n\"Yes,\" T'Varik confirmed coldly, still staring at Sakuth. \"She would. Captain Hrelle, I will volunteer for the task of linking with Professor Kessis.\"\n\n\"No,\" Sakuth retorted before Hrelle could. \"You will not.\" She looked to Hrelle. \"You are forbidden from authorising this action.\"\n\nHe leaned over his desk towards the visitor, beckoning her to come closer and whispering in mock confidentiality, \"I don't know if they told you when you beamed onboard, but I'm in command here; I have a note from my Mom that says so. I keep it tucked behind my ballsack if you want to go down and have a read.\"\n\nSakuth's expression furrowed. \"Your notorious predilection for puerile obscenity appears well founded. In my capacity as a senior operative of Starfleet Intelligence, I am ordering you not to allow any unauthorised telepathic contact with Professor Kessis. Failure to comply will result in the imposition of the strictest penalties, up to and including a maximum sentence of twenty years' incarceration. Am I making myself clear, Captain?\"\n\nHrelle stared at her soberly, before looking to Kami and winking. \"Did you hear that? I'm notorious!\"\n\nKami winked back at him. \"You don't have to tell me, Sugartail.\"\n\nT'Varik remained formal. \"Captain Sakuth, Starfleet Security Protocols require you to provide proper authorisation before you can issue such an order.\"\n\n\"You are already aware of my authorisation, Commander.\"\n\nT'Varik shook her head. \"You are listed in our records as a Doctor Vassak, graduate of Exo-Meteorology at the Vulcan Science Academy, civilian specialist with the Federation Science Council, assigned to Shangris IX. As such, you do not have the authority.\"\n\nSakuth offered a look of -- for a Vulcan -- naked contempt. \"Your predilection for childish semantics is demonstrative of the stagnant and limited outlook you have always possessed. You remain an individual of self-imposed insignificance.\"\n\n\"Captain Sakuth,\" Hrelle growled. \"That's my First Officer you're disrespecting. Play nice, or I'll take away your Secret Decoder Ring.\" He touched a desk control. \"Lieutenant C'Rash, come in here.\" Seconds later, the black-furred Caitian entered, her posture stiff as she focused on the visiting Vulcan, and Hrelle ordered, \"Lieutenant, escort our guest to the VIP quarters.\"\n\nC'Rash's gaze narrowed like phaser beams on Sakuth as she replied through clenched teeth, \"Yes, Sir.\"\n\nSakuth ignored the Caitian to focus on Hrelle. \"I demand a priority channel to Admiral Trenagen.\"\n\nHe nodded. \"I usually respond to demands with an invitation you'll probably find notoriously puerile and obscene. However, we'll see what we can do about that. In the meantime, we'll proceed with saving Professor Kessis' life.\" He looked to C'Rash. \"Lieutenant?\"\n\nC'Rash nodded to the door. \"Would you follow me, please... Ma'am?\"\n\nSakuth relaxed her posture and followed C'Rash out, the others' gazes following. As the doors slid shut, T'Varik noted, \"The Lieutenant is aware of my past association with Sakuth?\"\n\n\"Yes,\" Kami confirmed. \"Though I warned her not to start anything.\" She glanced back at the door before adding, \"Actually, she's handling it better than I thought. Sakuth got out without any scratches.\"\n\nT'Varik looked to Hrelle, who shrugged. \"Our territorial natures come out when the Exes show up. Now look, are you sure you wish to go through with this? I know every Vulcan mindmeld is risky and very personal, not to mention that we're also dealing with a Medusan here-\"\n\n\"I acknowledge the risks, Captain, but I welcome the unique opportunity, not just to assist in saving the life of a scientist, but in making contact with their mind.\" She raised an eyebrow. \"It should serve well to expand an individual of self-imposed insignificance such as myself.\"\n\n*\n\nC'Rash moved briskly down the corridor, with Sakuth directly behind her, neither woman saying anything until the Chief of Security stopped outside one door, allowing it to slide open and stay open as she indicated the interior. \"There is a private replicator for food; should you require a change of clothes, order some from our fabricators and a member of the Support crew will deliver them to you. When your Priority Channel with Admiral Trenagen is established, you will be informed. It will of course be secure and encrypted.\"",
        "Sakuth regarded her, before announcing, \"You are her current partner. Your tone and body language suggests it.\"\n\nC'Rash bristled. \"Your access on this ship is restricted to the Officers' Mess and Lounge, and the Gym; if you wish a tour, contact our Chief Operations Officer Lieutenant Neheru.\"\n\n\"If you have any desire for achievement in Starfleet,\" Sakuth suggested. \"You would cease your association with her. You will find her limited scope an impediment to advancement-\"\n\n\"For medical assistance,\" C'Rash interrupted, \"Contact Sickbay.\" C'Rash bared her teeth. \"Perhaps you should shut up and go in now, Captain, before you end up requiring it?\"\n\n*\n\nDeck 2 Fore -- Bridge:\n\n\"Steady as she goes,\" Beta Squad Leader Giles Arrington ordered, unable to suppress a smile. He never tired of saying those words; it made him feel so confident, assured, like the Captains of old.\n\nAs Rina Chaudri at the Helm acknowledged the order, Giles turned in his seat -- something else he liked about Command -- and looked behind him at Ops. \"Any tips on surviving the Final Exams, Lieutenant? Any hints?\"\n\nThe impossibly tall Kelpien's features creased with amusement, making his tangerine-coloured skeletal head look under pressure. \"Take off your footwear before you start the Exam.\"\n\n\"Our footwear?\"\n\nNeheru nodded. \"Your boots and socks. You can flex your toes and feel the cool floor beneath your feet. Very relaxing.\"\n\nGiles smirked. \"With respect, Sir, how would you know, Sir? Kelpiens have hooves.\"\n\nNeheru chuckled. \"We also have friends and roommates, who have often complained about the stress that seems to collect in their dainty little feet. Now, I know you have to get back to the Exams in twenty minutes, but do you think I could go grab a quick bite to eat first, Ensign?\"\n\nGiles grinned now. \"Take even longer if you like, Sir.\"\n\n\"Don't sound too eager to see the back of me, Ensign.\" Neheru straightened up and departed.\n\nGiles could almost feel everyone relaxing a little around him now, as his squad's Science cadet Charlie Ingalls took Neheru's place at Ops, and Giles joked, \"So... who wants to see if my Command-level authorisation will let us see the answers to all the exams?\" They laughed, Giles following up with, \"Anyone heard back yet about their First Assignments?\"\n\nSoolamea looked up from Engineering, the Rigellian girl smiling, \"I'm joining the California on the Tau Alpha C Expedition. Think of it: a three-year journey out of Federation space...\"\n\nGiles smiled. \"Congratulations; I've heard a lot about the Expedition. That's gonna be something.\"\n\nBeta Squad's Andorian Security cadet Atiaro Thykrill glowered. \"With the Dominion and the Borg around, here's hoping there's a Federation for you to come back to.\"\n\n\"A ray of sunshine as always,\" Rina joked. \"What about you, Atiaro?\"\n\n\"The USS Saratoga-A. And what about you, Arrington?\"\n\nGiles smirked; Andorians made even the most casual conversations sound like cross-examinations. \"Border ship: the Hurricane.\"\n\nThe cadets shot glances at each other.\n\nAnd Giles noticed. \"What? What is it?\"\n\nRina smiled. \"Oh, nothing. We just thought- well...\"\n\n\"You thought what?\"\n\n\"That you might be following Sasha to Advanced Command School on Vulcan,\" Soolamea offered.\n\n\"I didn't apply for it,\" Giles admitted. \"T'Varik believed my grades, while excellent, didn't-\" Then he noticed the sly looks his squad were giving each other. \"Oh, right. Because you all think I'm still lovesick for Sash. Very funny.\"\n\nThey all laughed openly, until an alert signal on her board drew back Rina's attention. \"There's some sort of disruption, almost dead ahead. Might be just another spatial anomaly, like the ones we left back in the Shangris system.\"\n\nGiles nodded. \"Drop to Warp 5, vector around it.\" But as he gave the order, he frowned to himself. \"Tactical: scan the anomaly.\"\n\nThykrill complied, seconds later scowling as well. \"Wait... the spatial disruption is clouding our sensors momentarily.\"\n\nA sudden memory returned to Giles, an informal course in Tactical Command given by Captain Hrelle, where the man detailed threats that employed spatial charges to mask themselves just before attack: Don't fear the Unknown. Just whatever is making the Unknown- \"Shields-\"\n\nThe Ferengi ship appeared on the viewscreen, microseconds before a volley of disruptor fire struck the Surefoot, sending it reeling sharply to port. The Red Alert klaxon sounded automatically as many of the Bridge crew were flung from their seats.\n\nSeconds later, Hrelle and T'Varik emerged from the Ready Room. \"Report!\"\n\nGiles leapt out of the Command Chair, helping himself up to Ops to support T'Varik. \"The Ferengi appeared from a disruption! They used-\"\n\n\"Spatial charges,\" Hrelle finished, helping the cadets back into their seats as he checked the tactical readings. \"Coordinate damage control, get the shields back online! Helm, drop to impulse, divert warp power to-\"\n\n\"Captain,\" T'Varik reported. \"The Ferengi have locked onto the Device, attempting to bea-\"\n\nThen the Surefoot, and everything around it... vanished...\n\nThe ship was buffeted, cadets that had just returned to their seats were thrown from them again, but Hrelle clung to his chair, before rising and reaching for the Helm controls, increasing stabilisers and inertial dampeners until his ship felt more anchored.\n\nThen he looked up, blinking in confusion at what he saw.\n\nThe viewscreen seemed to have turned into a kaleidoscope, a turbulent storm of dizzying colours, mostly greens and reds, spinning and mating and colliding, seemingly woven together by energy strands, looking like nothing more than the Mother of All Ion Storms, decorated for a Terran Christmas.\n\nHe returned to the here and now, checking the readings for their current location.\n\nNo. This isn't right...\n\nT'Varik was speaking over the intercom. \"Damage Control to Deck 5 Fore! We have structural damage within Cargo Bay 5, minor damage in adjacent areas! The Device appears to be missing-\"\n\n\"Casualties?\" Hrelle asked, helping Rina back into the Helm seat.\n\n\"None reported, Sir, minor injuries only.\"\n\n\"What about the Ferengi?\"\n\n\"4.5 kilometres, dead astern, with a minimal power signature; they appear damaged, drifting-\"\n\n\"Keep an eye on them; they make any move, let me know. Atiaro, get phasers and torpedoes online, just in case. Rina, we seem to be caught in some sort of spatial current, see if you can compensate and keep us stationary. Giles, take the Science Station, launch three probes on standard pattern. I want a full scan of... wherever we are.\"\n\nGiles, looking pale, nodded. \"Aye, Sir.\"\n\nHrelle took a moment to study the young man's shaken expression, recognising something in it. \"Mr Arrington?\"\n\nGiles stopped. \"Sir?\"\n\nThe Captain raised his voice, to ensure everyone heard and understood. \"This wasn't your fault. It was mine; I underestimated the Ferengis' determination to get what we have. You're not to blame. Got it?\"\n\nGiles, shaking and flushed, nodded in appreciation. \"Thank you, Sir.\" Then he continued to the station.\n\nThen Hrelle nodded to T'Varik. \"You're in charge, continue with damage control, get our Science and Engineering cadets and any other braniacs onboard together in the Science Lab to collate the probe data; Counselor Hrelle will be coordinating their efforts. I'm going to see Captain Sakuth and get some answers.\"\n\n*\n\nThe Vulcan sat, fingers steepled before her as she listened, before finally rising. \"The Ferengi did not beam away the Device. It possessed additional failsafes which I activated upon our arrival on the Surefoot; in the event of an unauthorised transport, it would detonate.\"\n\nHrelle's hands were balled into fists. \"And you didn't bother telling me this?\"\n\n\"I judged that you did not have an exigent need to know.\"\n\n\"Well, that worked out well for us, didn't it?\" He paced now, stopping and looking back at her again. \"Since we're all walking and talking, I can safely assume that your Great Whatsit wasn't some sort of bomb.\"\n\n\"You assume correctly. It was classified by the Shangris Think Tank as a Trajector, designed to open a rift to transport everything within a predetermined spherical radius.\"\n\nHis eyes widened. \"Transport to where? I saw the navigational board. There's nothing here! No stellar beacons, no landmarks, no Galactic coordinates, not even a quantum signature! Just a miasma of exotic energy particles!\"\n\nSakuth nodded. \"We are in another universe, a particular continuum selected by my think tank after opening up several small, short-duration rifts to study it further.\"\n\n\"That explains all those spatial anomalies we detected in the Shangris system.\"\n\n\"Indeed. This is a proto-universe, without matter, without life, an ideal destination to permanently banish threats such as Borg cubes and Dominion fleets; our Professor Cartier dubbed this realm the Oubliette. And as no loss of life occurs, it does not violate the Khitomer or other accords that prohibit the utilisation of weapons of genocide and mass destruction.\"\n\nHe drew closer, his gaze narrowing even as his heart raced the more he heard. \"You're being uncharacteristically forthcoming with this intelligence now, Captain Sakuth. Why?\"\n\n\"There is no longer any need for further secrecy, Captain Hrelle. The Trajector was designed to open a dimensional rift to the Oubliette, and then self-destruct, leaving nothing of itself to be analysed and adapted by its targets. There is no escape. We will be spending the rest of our lives here. Therefore, security is no longer a consideration.\"\n\nHrelle's stomach twisted, and his mouth went dry as his heart raced. Spending the rest of our lives here... \"Captain... there are two infants onboard... a group of young cadets just starting out in life...\"\n\nNow something like emotion crossed her features. \"It is regrettable that circumstances have brought us here, Captain. But I am hardly to blame for the actions of the Ferengi-\"\n\n\"No, but you're to blame for keeping all your precious little secrets!\" He stabbed a clawed finger at her. \"You're gonna tell my people everything you know about the Great Whatsit, the Oubliette -- everything! We're gonna find a way back home!\"\n\nSakuth studied him. \"The Trajector was designed by some of the most advanced minds in the Federation, far superior to any who might be onboard your vessel, and using materials unavailable to one of your limited resources. You are wasting your time, Captain.\"\n\n\"Well, thanks to you, we now have plenty of time to waste.\"\n\nThen his combadge chirped. \"Captain, this is the Bridge; the Filthy Lucre is sending a distress signal.\"\n\n\"The... what?\"\n\n\"The name of the Ferengi Marauder, apparently, Sir.\"\n\n\"Oh, really? Stand by, I'll be right up. Hrelle out.\"\n\nThe Vulcan eyed him. \"You are not going to assist them, are you? Our resources will be limited in this space-\"\n\n\"-And therefore we may need what they have onboard their ship to survive. Oh, and it's also the right thing to do. I know you might not recognise something like that while you're hiding behind your cloak and dagger, but it's important to the rest of us. Now, get to our Science Lab, before we run out of food, and you start looking tasty.\"\n\n*\n\n\"What's their status, Mr Neheru?\"\n\nThe Kelpien straightened up as Hrelle entered. \"Their main drive, weapons, power and life support is down, there are multiple hull breaches and their remaining habitable areas are limited. There are twelve Ferengi lifesigns and-\" He breathed in. \"Captain, I must apologise- I left Ensign Arrington and the cadets for only a few minutes-\"\n\n\"You're guilty of nothing but bad luck, Lieutenant. Like I told Mr Arrington, the fault lay with me. Now put the Ferengi on.\"\n\nThe image of the Oubliette and the Filthy Lucre mercifully vanished, replaced by the slightly more welcome sight of a cramped, smoke-filled Ferengi Bridge, and a jewelled, furred Ferengi coughing and snarling, \"And it's about time! We're dying here, hyoo-man!\"\n\n\"You need to get your eyesight checked, DaiMon...?\"\n\n\"Bald!\"\n\nHrelle blinked. \"Of course. Well, DaiMon Bald, I'm sorry to keep you waiting. What do you want?\"\n\n\"Want? We want to be rescued! There are four of us, plus my valuables-\"\n\n\"We're detecting twelve surviving Ferengi, DaiMon.\"\n\nBald sneered. \"Those others were too cheap to pay the Rescue Fee! Now beam us over, and then I'll give you the coordinates of my vault-\"\n\nHrelle raised a hand. \"We don't have a Rescue Fee, DaiMon. But we do have a Transfer Fee. It's rather steep-\"\n\n\"What? Anything! I'll pay anything!\"\n\n\"Music to my ears. You and your crew will face arrest for the attack on Shangris Station and the deaths of its scientists. You'll provide all data you have on who hired you and gave you intelligence on your target. Oh, and you'll turn over your ship and everything on it.\"\n\n\"WHAT? You greedy grimalkin! Mangy tabby! Eat my debts!\"\n\n\"Fine, I'll wait until you're all dead and legally claim your ship as salvage. In fact, that works out more profitably for me, as I won't be wasting food and air on you. Thanks for the tip! Cheers, Big Ears...\" He made a show of reaching for the screen controls.\n\n\"Wait!\" Bald ground his crooked teeth, coughed again and finally acceded, \"I... I accept your terms!\"\n\n\"Good. Gather your people together, DaiMon. No weapons, none at all -- if we detect any in our transporter beam, we'll just dump all of you into space. Surefoot out.\"\n\nAs the viewscreen blanked, Hrelle turned to C'Rash. \"Secure the Emergency Barracks on Deck 4, Full Security detail.\" He then looked to Grev, who had been summoned to the Bridge. \"Get a tractor lock on the vessel -- and work out a Fuel and Power Conservation Protocol. We don't know how long we'll be here.\"\n\nThe gruff Tellarite looked at him with beady black eyes, before nodding. \"Aye, Sir.\"\n\nNow Hrelle turned to Neheru. \"Where's Commander T'Varik?\"\n\n\"She has reported to Sickbay, to begin preparation for the mindmeld with Professor Kessis.\"\n\nHrelle nodded. \"Coordinate with Chief Grev on the Conservation Protocols. When the prisoners are beamed onboard and secured, have DaiMon Bald escorted to my Ready Room. And have Ensign Hrelle bring my son as well.\"\n\n\"Misha?\"\n\nHrelle smiled. \"I might need some muscle in there when I'm interrogating the Ferengi.\"\n\n*\n\nOutside the ships, red and green energy ribbons swirled and danced, occasionally bouncing off the shields of the Surefoot as if they were fish bumping against the glass walls of their aquarium.\n\nThen the shields dropped long enough to beam in the Ferengi survivors.\n\nAnd the energy ribbons dipped down, touched and stroked the hull... and slipped inside.\n\n*\n\nDeck 4 Fore -- Auxiliary Sickbay:\n\nMasterson stood a fair distance, halfway turned away as he watched T'Varik adjust the rose-tinted visor that allowed Vulcans to view Medusans without suffering ill effects. \"We've equipped you with everything we think you might need in there to deal with electromagnetic-based biology, but if you need anything more, just give us a shout and-\"\n\n\"Shouting will not be required, Doctor.\"\n\n\"Call me Doc.\"\n\n\"I do not think so.\"\n\nHe chuckled. \"You Vulcans never cease to crack me up. Cool as ice water, no matter what. But I do have to ask you-\"\n\n\"Doctor, I have to mentally prepare for the mindmeld. It requires silence, not flippancy.\"\n\nHe straightened up. \"This is a serious matter now. I checked your records; you've added a Euthanasia Declaration in the event of permanent mental incapacity should something go wrong in there.\"\n\nT'Varik paused. \"It seemed logical to prepare for any eventuality. I do not wish to survive if my mental faculties have been destroyed; That is not a quality of life I desire for myself. And it would be better that I make my desires known for the record, rather than leave such a traumatic decision to my family.\"\n\nMasterson nodded. \"And by Family, you mean Captain and Counselor Hrelle, and Lt. Shall? You named them as your Next of Kin. You don't have folks back home?\"\n\nNow the Vulcan looked to him. \"I have blood relatives, of course. But I have found that I am... closer... to the aforementioned officers onboard this vessel. They are more familiar with me, and more likely to respect my wishes.\"\n\nMasterson nodded. \"Then I'll make sure your wishes are fulfilled. And hope to Hell it doesn't come to that.\"\n\n\"As do I.\" She slipped the visor onto her face. \"Leave now, lock the door.\"\n\nHe tipped his hat to her and departed, the door closing and beeping as the lock was applied.\n\nT'Varik focused on her meditation mantras, acknowledging her fears and moving past them to the task at hand, approaching the container with Professor Kessis, sitting on the operating table, surrounded by esoteric equipment.\n\nWhen she was ready, she opened the lid. Even with the protective visor, what she saw was...\n\nBeautiful.\n\nAlmost too much so.\n\nHer fingertips drew closer to the brilliance, her mind reaching out. Your mind to mine, Professor Kessis...\n\nOutside the Auxiliary Sickbay, Masterson paced, stopping only as he heard a familiar -- and unfamiliar -- voice from his combadge moments later. \"The mindmeld is successful, Doctor. We are joined. We must work now. Do not disturb us.\"\n\nMasterson started to reply, then realised the communication was cut.\n\n*\n\nDeck 2 Fore -- Captain's Ready Room:\n\nMisha sat in Hrelle's lap, grinding happily on a round leather teething toy in his mouth, as his father smiled in approval. \"That's it, my Warrior Prince. And what do we do when we see... Ferengi?\"\n\nMisha stopped chewing, spitting out the toy to bare his teeth and growl.\n\n\"Exactly! Good cub!\" He stuck the toy back in and looked up at his other offspring. \"How are you doing? Want one of these, too?\"\n\n\"No thanks. Why am I here? I should be at my station-\"\n\n\"Captain's Privilege; I want to have my cubs around me. Besides, the senior officers are busy with other things, I need someone to pester.\" His door chimed. \"Enter!\"\n\nThe door slid open, and DaiMon Bald strode inside, clutching his hand, as C'Rash followed closely behind. \"Captain! How dare you treat us like prisoners! And let this creature bite me!\" He held up his bloodied appendage.\n\nHrelle adjusted Misha in his sitting position on his father's lap. \"But DaiMon... you are prisoners. That was part of our deal, remember?\" He looked to C'Rash. \"Why'd you bite him?\"\n\nThe black-furred Caitian growled. \"He touched my breast.\"\n\n\"It's her own fault!\" the Ferengi defended. \"Letting your females wear clothes that entice men with curiosity! She brought it on herself, the slut!\"\n\nHrelle felt Sasha stiffen with anger beside him, but otherwise gave no reaction. He focused on Bald. \"DaiMon... if you or any other member of your crew so much as leers at any of mine, let alone touches them, I'll cut off your lobes and feed them to my son here. He's teething, and would love to chew on one.\" He looked to Misha. \"Well, cub? What do you think about... Ferengi?\"\n\nMisha stopped chewing, glared at Bald and growled.\n\nThe DaiMon blanched, reaching up instinctively to his ears. \"You- You can't- that's horrible! Barbaric!\"\n\n\"Then I suggest you behave yourself, dickhead,\" Sasha butted in harshly, \"And do what our Captain says, or we'll have your balls as well!\"\n\nBald looked up in shock at her, as did Hrelle, before the Captain took over again. \"Who hired you to attack Shangris, DaiMon?\"\n\nThe Ferengi focused on the Caitian captain behind the desk. \"A Cardassian Legate, named Hovat.\" At Hrelle's reaction he asked, \"You've heard of him?\"\n\n\"Yes.\" They hadn't met in person, but Hrelle had crossed paths with him several times before: Hovat was his opposite number across the border, a Cardassian Strategic Operations Officer or the closest equivalent, and he was planning something big, though as far as Hrelle knew from the reports from Starfleet Intelligence, exact details were still sketchy. \"I guess he didn't tell you what the Great Whatsit did, did he?\"",
        "\"He was not forthcoming about that. I don't think he trusted me.\"\n\n\"Imagine that.\" Hrelle smiled. \"But I bet you were gonna find out anyway before you handed it over, weren't you?\"\n\nBald grinned. \"I hired a scientist to study it secretly while we journeyed to deliver it to the Cardassians. Doctor Ponzi was expensive, so you know he's good!\" He raised a finger. \"He was clever enough to pay the Rescue Fee before boarding my ship!\"\n\nHrelle nodded. \"He might be useful.\" He looked to C'Rash. \"Have him escorted to the Science Lab to join the others.\"\n\n\"Aye, Sir,\" the Caitian replied curtly.\n\nBald scowled. \"Hey! I hired him! Legally I deserve a share of any profit to be gained from what you learn!\"\n\nHrelle rose, setting Misha on the floor as he indicated the view of the Oubliette outside his windows. \"Look out there, DaiMon: we're in another universe. And the device you tried to steal from us sent us here -- one way. And I'm told that there's no way back, and we could end up spending the rest of our lives here, alone. No planets. No profit. Just float around until our power, our fuel, our food and air all run out.\n\nIf your Doctor Ponzi can help us escape, you will share in profit: the profit of being back home, alive. Of course, you'll be in jail, but it'll still be better than being here.\"\n\n\"Yes,\" Bald finally admitted, after staring outside, but then leered at Hrelle. \"So let's make a deal: I have Ponzi assist you in getting us back to our own universe... and you drop the charges against me. Take my crew, and Ponzi-\"\n\nSuddenly Sasha stormed forward, grabbing the Ferengi by one of his lobes and twisting. \"Are you kidding us? You sent us here, and now you think you can make a deal, you little Troll Doll? DO YOU?\"\n\nAt the corner of Hrelle's desk, Misha had helped himself to his feet and manoeuvred his way around, holding onto the edge of the edge with one hand to teeter on his stubby legs and give a tiny roar at the Ferengi in solidarity with his big sister, while C'Rash just smirked.\n\nHrelle, however, simply ordered, \"We don't treat prisoners like that, Ensign. Let him go. Now.\"\n\nSasha looked to him, reluctantly releasing the DaiMon and backing off at her father's silent gesture.\n\nStill remaining calm, Hrelle informed Bald, who was busy clutching his ear, \"And I don't need your assistance, bubulah, I'm sure he'll be smart enough to cooperate. I think we're done here.\"\n\nC'Rash clutched Bald by the shoulder and guided him out.\n\nMisha tried to go after them, but toppled over and fell once he let go out of the desk. He began crying.\n\nHrelle rushed around and scooped him up, comforting him. \"Awww, Sweetheart! Don't cry, everything's going to be okay!\"\n\n\"Is it, Dad?\" Sasha asked, sparing a glance at the Oubliette again. There was genuine fear in her eyes, her voice. \"You said we couldn't get out of here.\"\n\nHe rested Misha against his chest and shoulder and rocked him gently until he calmed down again, as Hrelle regarded his daughter. \"No, I said that I was told we couldn't get out of here. I don't believe that. We have some of the Best and the Brightest onboard, as well as one of the original scientists who helped build the Great Whatsit that got us here in the first place.\"\n\n\"But that's still no guarantee that we-\"\n\n\"No. It's not.\" He drew closer, reached out with his free hand and cupped her face. \"But that doesn't mean we don't still try. Especially as the alternative is to do nothing. And as lazy as I normally am, I don't want to spend the rest of my life doing nothing. Now, care to explain what that strong-arming was all about?\"\n\nShe looked at them, before turning away, staring at the energy swirls outside. \"He deserved it.\"\n\n\"No, he didn't. I'll make any sort of verbal threat, because I know I wouldn't do it, but what you did crossed the line. We have to maintain our ideals as much as we can, despite the temptation. Besides... you know that their ears are erogenous zones, don't you?\"\n\n\"Eeeuww.\" She shuddered, and she clutched herself, as if chilled. \"Not a couple of hours ago, I was worried about failing my Final Exams. Now, we may never get back home, Misha may spend the rest of his life here, thanks to that stroking little Troll...\"\n\nHe reached down and took her hand, squeezing gently. \"Not just him. Other people authorised the creation of the Great Whatsit, other people designed and constructed it, and still others kept the secrets of it so fervently they put us all in danger. Sasha... don't face life afraid or angry all the time; you tend to get that fear and anger thrown back at you. And usually it's because you started it.\"\n\nShe grunted. \"Kami says that you're always terrified for us, for the crew. But you never show it, because we need you to look up to. How do you- how do you do that?\"\n\nMisha seemed to have fallen asleep on him; he adjusted his infant's position, before indicating him. \"It's a practised move, like taking care of a cub. He was upset, I cradled him, I didn't have to do much, just be a steady, comforting presence, and he accepted it and took care of the rest.\n\nThere's a saying you'll hear in Command Training: 'Fool the ones you need to fool enough, and you can fool yourself.' Now here, take him. I want you to mind the cubs; Kami will be busy supervising the braniacs, and I want the doctors free should we need them.\"\n\nSasha nodded, reached out and collected Misha, puffing slightly. \"He's getting heavy.\"\n\nHrelle grinned. \"He gets that from his Mom.\"\n\n\"I'll tell her you said that.\"\n\n\"He'll burn that off soon enough when he's running around the ship, getting into mischief.\" He breathed out in a puff. \"Mother's Cubs, we'll have to work out security protocols, to keep him from getting into places he shouldn't.\" At her expression, he smiled at her. \"Have faith, Runt of the Litter.\"\n\n\"Faith? In what, the Great Mother?\"\n\n\"In that the Universe will unfold the way it's meant to.\" He drew in and rubbed the side of his muzzle against her cheek in a Caitian kiss, before sniffing the air as he drew back. \"Oh, and he needs changing as well.\"\n\nShe grimaced. \"Gee, thanks.\"\n\nHe smiled. \"Anytime.\"\n\n*\n\nThe ribbons of energy from outside slipped between the molecular bonds of the ventral side of the Surefoot, passing up through Main Deflector Control and the Antimatter Containment Pods on Deck 8, dancing around until they grew bored and passed further up to the Battery and Shield Generator Compartments on Deck 7, liking the energy patterns found here.\n\nThen they heard voices and went deeper into the ship to investigate.\n\n*\n\nMasterson turned as he heard the hissing. \"Lieutenant?\"\n\nC'Rash strode up to him, her tail smacking the walls as she approached. \"Where is the Commander? I need to see her.\"\n\nHe held up a hand. \"She's in there now, mindmelding with the Medusan scientist.\"\n\nAlarm crossed her dark-furred features. \"She's what? Is she crazy?\"\n\n\"Not when she went in there, no.\"\n\nC'Rash growled and stepped forward. \"Let me in there-\"\n\nThe doctor held up a hand. \"Not so fast, Wildcat, you can't go in there, the Medusan's sitting out in the open.\"\n\nThe Caitian bared her teeth. \"Get out of my way, or-\"\n\nMasterson never budged, never even flinched. \"Or what? You'll push me aside, burst in, risk madness and death for yourself, possibly also for the Commander while she's linked with Professor Kessis? Is that what y'all are gonna do, Lieutenant?\"\n\nShe drew in closer, her intensely hot breath on his face -- a sharp contrast to the cold fear in her eyes. \"She- She could-\"\n\nMasterson reached up and gently took her by the forearm, guiding it down, even as he recognised the power and the tension in the muscles there. \"She'll be fine, she's got more smarts than the pair of us put together -- though in my case that probably ain't saying much -- but no amount of smarts will do her a damn bit of good if you or anyone else barrels in there now like a bull with a burr up its-\"\n\nSuddenly the doors slid open, and both figures instinctively looked away, until a figure stepped out. \"There is no need for alarm. My body is secured inside the receptacle.\"\n\nMasterson and C'Rash relaxed slightly and turned around again, though the Caitian's hackles rose.\n\nA figure that looked and sounded like Commander T'Varik stepped out, though she seemed to falter somewhat, looking a little like Misha taking his first steps, before she finally straightened out, breathed in as if for the first time, and looked around her, finally focusing on the two figures awaiting her. She smiled. \"Hello.\"\n\nC'Rash's pulse raced, and her fur stood on end.\n\nMasterson stared in wonder. \"You're Professor Kessis, aren't you?\"\n\nThe new arrival grinned. \"We're both in here. I came out to inform you that my work on myself appears to be successful. My body is now resting, and healing. But T'Varik's memories tell me that the Trajector has brought us into the Oubliette. You will need my help getting us back.\"\n\nMasterson raised the tricorder in his hand up, scanning and frowning at the readings. \"T'Varik's metabolism is way off the scale- you can't stay linked forever-\"\n\n\"Nor do we intend to, Doc.\" But she looked around again in abject wonder. \"Though it would be fascinating to indulge in experiencing life once more with fleshy senses... to breathe in air with fleshy lungs...\" Then she focused on C'Rash. \"To do many things-\"\n\nThe Caitian hissed. \"That's not the sort of threesome I'm into, thanks.\"\n\nMasterson's attention moved uneasily between the two figures. \"Lieutenant, why don't y'all take her to the Science Lab? And stay with her, keep an eye on her? Any signs of trouble, you holler.\"\n\nSomething seemed to eclipse within T'Varik/Kessis, a sobriety, as she nodded. \"Yes, Lieutenant. Let us proceed.\"\n\n*\n\nDeck 4 Fore -- Multimission Science Lab:\n\nThough she was a Counselor, Kami was listed in the roster as the Chief Science Officer, and led the Science cadets as their Department Head. Thus, it wasn't unreasonable for her to chair the group designed to analyse their situation and come up with a means home.\n\nThough, as it turned out, her Counseling skills also came in handy, with the clash between the Science and Engineering cadets, and the visitors. Oh, not so much the Ferengi scientist Doctor Ponzi -- who after an initial straightening out regarding a female being in charge of the group, proved to be almost amenable -- but with Captain Sakuth, who seemingly chose to remain silent unless and until she was directly addressed, or when she felt the need to state that any method proposed for their return to their universe would not work.\n\n\"Respected Captain,\" Kit said, addressing her directly after the fifth rejection. \"I must respectfully disagree with you once again. I believe in the potential efficacy of a quantum fluctuation beam to duplicate the dimensional shift of your team's Trajector.\"\n\nThe Vulcan's expression narrowed. \"You have no basis for making such a wild conjecture.\"\n\n\"On the contrary: The December 2371 issue of the Journal of Subspace Research contains an article by a Lieutenant Jadzia Dax regarding a Class-M planet that underwent periodic quantum fluctuations due to a cascade reaction in the planet's sun, resulting in the planet undergoing transitions to a dimension which intersected our own-\"\n\n\"My team are aware of that, of course,\" Sakuth admitted, \"But such a method was rejected as requiring too much power to be duplicated. It is pointless.\"\n\n\"Everything seems pointless to you,\" Dr Ponzi suggested with a sneer. \"Quite the attitude to take, considering you're not even a qualified scientist.\"\n\n\"He makes a valid point,\" Kami pointed out to the Vulcan. \"Remember, you've only been pretending to be a one on Shangris.\"\n\n\"I read something about a folded-space transporter, employing a dimensional shift,\" Jonas recalled, looking to Yeager. \"Utilising the Elway Theorem. You remember it, Nancy?\"\n\nThe blonde girl frowned and nodded in recognition. \"Yeah, but it was abandoned as a transport alternative, for causing cellular damage.\"\n\n\"Only with extended use,\" Delta Squad's Suliban Science cadet Zajan pointed out. \"It might be worthwhile for making one journey home.\"\n\n\"It will not function,\" Sakuth informed them. \"I may not be a scientist, as the Ferengi pointed out, but I have worked with those who are, and have listened and learned. Folded-space transport was considered but rejected, as the method allowed for a potential means of tracking a path back to our own space through an adaptive subspace echogram, thus rendering it useless as a weapon of banishment. This continues to be pointless.\"\n\nKami leaned forward and regarded the Vulcan in a new light. \"Your manner, your speech vocalisations, changes slightly whenever we come across a possible means of escape. Why? Is it that important for you not to go back?\"\n\nSakuth looked at her with visible disdain. \"Do not seek to psychoanalyse me, Counselor,\" she warned. She looked to the cadets now. \"I am certain that you are all bright, but you cannot compete with qualified, experience physicists who have worked on this project for years. Your efforts would be better spent working out a means of living here indefinitely.\"\n\nThe door to the Science Lab slid open, and T'Varik -- or a very close approximation of her -- walked inside, looking at all of them in turn, as C'Rash brought up the rear, appearing unnerved.\n\nKami rose to her feet, instantly assessing the situation, and understanding her niece's reaction. \"Professor Kessis, yes? I'm-\"\n\nThe new arrival offered an uncharacteristic smile. \"Counsellor Kami Hrelle. T'Varik's memories of you are clear and strong.\" She looked to the others. \"I know all of you, everyone but our Ferengi guest.\"\n\nMore warily now, Kami asked, \"Is T'Varik- is she-?\"\n\n\"She is here as well, of course, Counselor. It is a fusion, not a possession; it is logical to expect that the Host mind would still have influence within her own body.\"\n\nC'Rash approached, still staring at the merged Vulcan but addressing her aunt. \"Doc Masterson said they shouldn't stay like this for too long.\"\n\nT'Varik -- T'Vessis? -- nodded. \"Yes, of course, let's get to work.\" She sat down.\n\nSakuth stared at her. \"Professor, may I speak with you privately, please?\"\n\nThe other Vulcan never even looked over at Sakuth. \"That will not be possible, Captain. T'Varik will always be there, and you may not consider her security clearance sufficient.\" Now something like contempt crossed her features. \"And we all know how important you regard security.\"\n\n\"Professor... your current attitude may be an undue influence of the mind of the body you inhabit-\"\n\n\"My current attitude is my own. And brought about by your influence.\"\n\nSakuth's expression stiffened. \"Professor, I must insist that you do not reveal anything confidential to the people assembled here about your work. Such a violation would incur the most severe penalties.\"\n\nKami drew up to them. \"And how would you enforce those penalties in this universe, Captain?\"\n\nThe Ferengi cackled. \"Live Now, Profit Later.\"\n\nSakuth ignored them, focusing on the Medusan mind she saw behind her former lover's eyes. \"Professor, the security of the Federation is at stake here. If you find a means of returning to our universe, and the information reaches our enemies, then all of your work, the sacrifice of your associates, will have been for nothing. If we remain here, others in our universe will carry on in your place.\"\n\nNow the object of her entreaties looked back at Sakuth. \"I might possibly be prepared to consider sacrificing myself under such conditions. But not these young people. Not this crew. So I guess you'll have to have me prosecuted along with everyone else involved. Won't you?\"\n\nSakuth stared hard, before rising to her feet. \"There is no further point in my remaining here.\" She strode out without further notice.\n\nT'Vessis tapped the tabletop, pausing as she seemed to feel the surface of it on her fingertips, before returning to the matter at hand. \"Contrary to what our associate Captain Sakuth wants to get around, there is a means of returning, albeit a slim one, and we need to move quickly, to take advantage of it. Our transition to this continuum will have weakened the local space/time fabric at the quantum level, but this will soon right itself.\"\n\nPonzi nodded. \"Like a rock dropped in a pond; the ripples where it landed will show us its entry point, but not for long.\"\n\n\"Indeed, Respected Guest Scientist,\" Kit confirmed. \"But our initial attempts at identifying the quantum signature for a baseline reading have proven ineffective, without any prior points of reference.\"\n\nT'Vessis smiled again in an unnerving fashion. \"Fortunately, Cadet Kitirk, I have been studying this universe for some time. I will supply the points of reference...\"\n\nKami smiled -- until she saw C'Rash depart as well, without warning.\n\n*\n\nDeck 6 Fore:\n\nCrewman Eddie Leslie knelt by the next escape pod hatch on his duty roster, running the standard weekly diagnostics and singing to himself, letting the rhythmic whine of the Engineering tricorder act as a metronome. He worked alone, and preferred it that way, as he like to sing, but apparently his crewmates were less appreciative of his skills. He suspected jealousy.\n\nBehind him, ribbons snuck out from between the bulkheads and coalesced overhead like a ball of strong, listening in fascination.\n\n\"Believing the strangest things / Loving the Alien...\" Leslie raised his voice on the chorus, hoping that his voice drifted down to the Computer Core, where Torleen and O'Hara, some of his most vocal and snarky critics, were refitting a new subprocessor interface. Then he stopped as his tricorder picked up an anomalous energy signature, and his dreams of starring in the Federation Cultural Exchange Program, bringing his Latinum Voice to the rest of the Alpha Quadrant, were eclipsed by his sense of duty. He tapped his combadge. \"Engineering, are you running any power sweeps in Section 6-8A?\"\n\n\"No, Mr Leslie,\" Chief Grev's gruff voice replied. \"Not on current Conservation Protocols. Why?\"\n\n\"I'm detecting strange readings on my tricorder, Chief.\"\n\nThe Tellarite's harrumph was quite audible over the channel. \"Did you accidentally set it on Critique while you were singing again?\"\n\n\"Oh Ha Ha-\" Then he paused as he felt the hairs on the back of his neck rise. He twisted in place, gasping as he saw the bundle of energy in the air. It flared up as if with excitement.\n\nStories returned to the forefront of his mind, stories he had heard from his grandfather from when he had served on the Enterprise under Kirk, and had nearly died more than once from strange energy creatures which seemed to invade that ship on a weekly basis, killing off what the midshipmen of the day called 'Redshirts'. They were stories that the younger Leslie had subsequently suppressed, because despite the horror tales his Grandpa told, he still wanted to join Starfleet. And the years in service since graduation had proved wonderfully, comfortably routine.\n\nNow, however, he looked up, squinting at something that was no plasma leak or conduit malfunction, but a genuine, alien threat -- he could feel it.\n\nAnd he knew what to do: instinctively he reached for the hyperspanner in his tool kit. 'The right tool for the right job,' the legendary Montgomery Scott used to tell Grandpa and the rest of his Engineering crew, but always adding, 'But the right tool is usually your hyperspanner.' And it remained a versatile tool over two centuries after its invention. It even acted as an improvised dampener for discharging energy surges.\n\nLeslie drew out his hyperspanner and brought it up to the energy bundle. He closed his eyes tightly, expecting the consequent flare.",
        "But not expecting the screech.\n\nThe bundle unravelled into ribbons which jerked and dropped like banners caught in a storm, before vectoring back and striking Leslie in the chest, sending him sprawling. He was unconscious before he hit the bulkhead, his chest smoking and his combadge fused.\n\nThe ribbons scurried away.\n\n*\n\nIn the gym, Atiaro Thykrill punched the heavy bag, again and again, feeling like the frustrations of the last few days, the last few weeks, were being channelled out of her body and through her gloved hands. The bag barely shifted; she had increased its density to near-Maximum, and it felt like she was punching a wall.\n\nBut the tension of the Final Exams still built up inside her- no. Not just the Exams. Everything. Her lack of success with the male cadets over the past year. Her being posted to her third choice, a newly-christened ship, and going there alone. And now today's fiasco, landing all of them in another Universe. She had manned the Tactical station, and should have spotted that Ferengi trap before it was sprung! And now, her ship and everyone onboard was... somewhere else. Because of her. Her!\n\nThe anger seemed to heat up her skull, her antenna almost curled up like kindling in a fire, the sweat pouring down her azure skin as she snarled and cursed and punched and punched and punched-\n\nSomething caught her eye, and she spun in place, expecting it to be some other cadet foolish enough to want to pull a prank on her. She swung out, connecting-\n\n-With what looked like a bundle of energy in red and green ribbons, coalesced together into a vaguely humanoid shape. And swinging back.\n\nShe blocked the punch with her forearm, wincing as an energy surge travelled through the muscles, and she tried punching back again. She had no combadge on her to call for help, and there was no one else in the gym at that time, and she was damned if this -- whatever it was -- thing was going to get the best of her.\n\nThey began sparring, but every connection she made only delivered more shocks. And when it punched back-\n\nThykrill delivered one final shot, direct into its midsection.\n\nHer arm went through it completely.\n\nAnd the energy copied her.\n\n*\n\nCadets Cheung and Adams stood on either side of the doorway that led into the Evacuation Barracks, where the Ferengi were being kept. Both of them were armed, and both of them couldn't help but reach down to absently touch the handles of their phasers on their belts as they passed the time. The red-haired Irishgirl Adams grunted. \"Think we'll ever get to take the Final Exams?\"\n\nCheung smirked. \"At this rate? We'll both make Captain before we do.\" He shook his head. \"I think I can still smell those Ferengi even through the walls.\"\n\nShe grunted again. \"I know what you mean. And the way they were leering at me... Hrelle has got some nerve, saving their lives. He should have let them eat vacuum.\"\n\nHe made a sound of agreement. \"I think he's getting soft from having his baby around. Starfleet ships are no place for kids. How does it look to our enemies, seeing him practically nursing it on the Bridge?\" He shook his head. \"He's pathetic. I'll be glad to get off this ship. Hrelle, C'Rash, the Counselor -- I'm sick and tired of seeing Caitians everywhere I go.\"\n\n\"Yeah, me too.\" Adams looked to him. \"You know where your first assignment is?\"\n\nHe grinned now. \"The Ellesmere. A Captain Jaxik R'ven.\"\n\nShe frowned. \"R'ven?\"\n\nHe nodded. \"I think it's Vulcan, or Andorian-\" Then he started as he saw the energy ribbons coming around the corner. \"What the-\"\n\nThe ribbons moved like heavily-medicated red and green lightning bolts through the air, towards the two security cadets.\n\nCheung knew exactly what to do, drawing his phaser, aiming and firing. The orange beam struck part of one of the ribbons.\n\nAnd made it angry, coalescing and striking like a spear against the cadet's phaser, fusing the circuitry as the energy rode up his arm and sending him sprawling and unconscious.\n\nAdams tapped her combadge as she drew her own phaser. \"Security Alert to Corridor 4-Starboard!\" She fired as well, while trying to evade the ribbons.\n\nBut even as she did so, a part of her knew it was futile, as another ribbon struck her in the rear, sending her down to join her companion in oblivion.\n\n*\n\nOn the Bridge, Hrelle tried not to stare at the joined entity his wife had dubbed 'T'Vessis', as she stood there with Kami, the Ferengi physicist, and Jonas and Kit, the latter two making adjustments to the sensor stations, as the Vulcan/Medusan continued to explain. \"My knowledge of the Oubliette has allowed your gifted young cadets to make the necessary adjustments to your sensor array, allowing you to track the weakest point in the local space/time fabric. Once arrived, your deflector dish, modified to emit a sustained graviton pulse, should open a rift back to our universe.\"\n\nThe Ferengi nodded, acting more professionally than any member of his race Hrelle had encountered before. \"Assuming that the graviton pulse is strong and steady enough. Your Strategic Engineering Officer believes it will be possible, assuming all ship power, including Life Support, is diverted to the task -- along with the additional power from the Filthy Lucre. You need to know beforehand, Captain, that should it fail, we are unlikely to last long afterwards, or be able to restore even Emergency power.\"\n\nDying relatively quickly from lack of life support, or dying slowly from any manner of other terrible reasons... \"The Riskier the Road, the Greater the Profit. Let's get started.\"\n\nPonzi looked impressed at Hrelle's quoting one of the Rules of Acquisition, and chuckled.\n\nAt Ops, Neheru and Kit performed the sensor sweep. \"Scanning now, Sir...\"\n\nThen a signal from Tactical drew Neraxis' attention. \"Security Alert, Captain! We have phaser fire on Deck 4, near the Ferengi quarters!\"\n\nHrelle rose to his feet. \"Red Alert! Force fields at all critical junctures on that deck! Get a team down there, Cadet!\"\n\n\"Aye, Sir!\" The Bolian girl summoned Lieutenant C'Rash, as per procedure -- only to find her superior officer's combadge turned off.\n\n*\n\nDeck 4 Aft -- Main Engineering:\n\nThe crew on duty moved quickly in response to the Red Alert, accentuated by Grev clacking his hooves. \"Pruul! Lock down the manifold controls, assuming your simple Betazoid brain can work out where they are!\"\n\nThe cadet kept moving, fully accustomed to the Tellarite chief's banter. \"If someone of your limited abilities knows where they are, Chief, I won't have any problem!\"\n\nGrev laughed with satisfaction. \"Okone, disengage the power limits, the Captain might need the weapons back online if we're on Red- Okone?\"\n\nHe squinted, sniffing the air; a Tellarite's sense of smell wasn't as great as a Caitian's, but it was acute. He knew his Assistant Chief Engineer was just around the corner, and strode forward. \"Okone! Silence is not Banter-\"\n\nHe stopped as he saw Okone lying unconscious on the floor. \"Dan!\" He rushed over, dropped to one knee and touched the young man's neck, finding a pulse, even as he reached for his combdage to call for a Medical team.\n\nHe never sensed the presence moving up behind him, grasping his neck, touching the right pressure points and sending him into unconsciousness to join the other crewmen before help could be raised.\n\nSakuth straightened up and moved to the Main Engineering Control Board, activating a new sequence. \"Computer: Starfleet Intelligence Security Override, Authorisation Code 107105.11611, Captain Sakuth reporting. Computer, activate Emergency Self-Destruct Protocols, effective imme-\"\n\nThe rush of incoming air reached her microseconds before the black-furred body slammed into her, sending her backwards towards the Warp Core column.\n\n*\n\nOn the Bridge, Neheru looked up. \"Captain, we've receiving reports of random energy phenomena appearing through the ship, and injuries from crew encountering them!\"\n\n\"Energy? What type?\"\n\n\"It's matching the exotic energy wavelengths in the Oubliette!\"\n\nT'Vessis moved to the Science Station, examining the readings. \"Your Operations Officer is correct, Captain, the energy is identical to that outside the ship. I can't explain it-\"\n\nAll eyes turned up to the ceiling near the Auxiliary Engineering Station nearest the viewscreen, where a plume of red and green energy seemed to seep down, snaking along the unoccupied station and chair.\n\nEveryone had risen to their feet, Neraxis drawing her phaser, Kit his tricorder. But Hrelle held up a hand. \"Nobody move.\" He watched it carefully, as it seemed to coalesce at the base of the chair, before suddenly, seemingly becoming aware of the presence of the people on the Bridge, and darting into a nearby vent.\n\n\"Whoa...\" Neraxis muttered. \"That was-\"\n\n\"-Alive,\" Hrelle finished, fascinated.\n\n\"Alive?\" Jonas echoed, \"But it's just made of energy!\"\n\n\"As am I, Cadet,\" T'Vessis reminded him dryly. \"At least, in my original body.\" She examined the readings on Kit's tricorder, and her expression changed, sobering. \"And your assessment appears correct, Captain. There are lifeforms in the Oubliette, despite what we initially believed when we surveyed this space.\" She handed the tricorder back to the cadet. \"I would never have selected this continuum as the destination for the Trajector if I'd known it was inhabited.\"\n\n\"And that the locals could be so hostile,\" Neheru added, before raising his voice again. \"Captain, there's some sort of massive energy wavefront approaching from astern! The same wavelengths as the Oubliette Beings, but the power readings are off the scale!\"\n\n\"Onscreen!\" Hrelle looked up and gasped at the image of a red-green tsunami of energy, much larger versions of what they had just witnessed on the Bridge, quickly filling up the viewscreen as it rolled in. \"Can our shields protect us?\"\n\n\"I- I can't be certain, Sir!\"\n\n\"Have we got a fix yet on that weak spot in this space?\"\n\n\"We think so, Sir!\"\n\n\"Then get us there! Maximum warp!\"\n\n*\n\nIn the Cr\u00e8che, Misha and Naida were changed, fed and sleeping in the playpen, while Sasha had been catching up on her revision, wishing she was somewhere else, instead of babysitting.\n\nThen she heard the raised voices in the adjacent Sickbay, and carefully rose to her feet, setting aside her PADD as she made her way to the door and stepped outside, only intending to be away for a minute.\n\nIn Sickbay, Masterson, Kline and the nurses and Medical cadets were bringing in and treating more and more victims of the energy ribbons, Masterson shouting, \"Scarlo, get the emergency dermal regenerators from Stores, we're gonna need them!\"\n\nSasha emerged from the Cr\u00e8che, rushing up. \"Doc, you need help?\"\n\nHe never looked up from his latest patient. \"Yeah, help Scarlo in Stores.\"\n\n\"Yes, Sir!\"\n\nBack inside the darkened Cr\u00e8che, Misha stopped pretending to snore, opened his eyes and smiled, gurgling to his girlfriend to wake up so they could play some more. The tiny Roylan stirred and rose as well. \"PetaQ!\"\n\nThe room suddenly brightened as ribbons of energy snaked in, swimming and circling overhead, coalescing before the infants.\n\nMisha laughed.\n\nThe ribbons laughed back.\n\n*\n\nHrelle stared at the tactical display, as it presented an image of the Surefoot dragging the Filthy Lucre behind it, while the energy wavefront drew ever closer. \"ETA to spatial point?\"\n\n\"At current speed, 12.3 minutes.\"\n\n\"Continuing to receive reports of injuries throughout the ship, from encounters with the smaller Oubliette Beings. Internal force fields seem to have no effect on them.\"\n\nHrelle never took his eyes away from the view ahead. \"Go to Security Alert 4, avoid approaching the entities if possible- and where in the Seven Hells is C'Rash?\"\n\n*\n\nC'Rash thought she had been imagining it, a response to her seeing her partner following the mindmeld with the Medusan: a woman whose voice, manner, even scent had altered slightly. It was like seeing T'Varik as one of those living dead in the horror vivids her older sister used to make her watch as a cub, and what the cadets today seemed to favour. Or maybe it was simply protectiveness on her part, seeing how T'Varik had reacted to the appearance of Sakuth. Or maybe it could have been put down to simple jealousy.\n\nBut no, once she got past all of that, she watched Sakuth -- and knew the woman was up to something. Her departure from the Science Lab, seemingly defeated, was not like her. And so she followed surreptitiously, and with the aid of the ship's computer, having switched off her combadge so any messages received wouldn't alert the Vulcan.\n\nAnd now, her claws and teeth bared as she charged at the other woman, she knew her instincts had been correct. She slammed into Sakuth, twisting around to try and pin her down, but the Vulcan's strength, speed and training was a match for her own. \"Lieutenant, stand down! That's an order!\"\n\n\"Kiss my furry ass!\"\n\nThey swung and grappled, Sakuth knocking the phaser out of C'Rash's hand as the Caitian tried to draw it, the Vulcan then moving with astonishing speed, reaching up to try and touch her opponent's face with her fingertips- a mindmeld? Was she really going to force a mindmeld onto her? If she made contact, she could shut down C'Rash's mind-\n\nC'Rash tightened her grip and extended her claws into her opponent's skin, drawing thin green blood. And the Vulcan's face was a picture of lost control over her pain, as she gritted her teeth and called out, \"COMPUTER! INITIATE-\"\n\nShe never finished her orders; C'Rash dropped and clamped her jaw around the other woman's throat, pierced the flesh and crushed her windpipe.\n\nSakuth spasmed, the fight draining from her as the futile struggle to breathe eclipsed her. C'Rash slid out from under her, spitting out the acrid taste of the copper-based blood and reactivating her combadge. \"Medical Team to Main Engineering!\" She watched her opponent turning a darker and darker shade of green as her crushed trachea, now bleeding between her fingers, failed to provide her with oxygen.\n\nThe Security Chief rose and rushed over to a medical kit on the wall, opening and extracting a small hypospray, removing from it a thin clearsteel tubing and returning to Sakuth. She knelt over the woman, prying away her struggling hands to get to the soft nape of her throat below the bite, as C'Rash extended the claw on her forefinger -- and pierced the skin and subdermal tissue, working the tough flesh open and forcing the tube into it, the tissue clamping around the invader. A rapid but welcome sound of air intake through the tubing filled the space between them.\n\nSakuth stared up with wide, pained, hostile eyes, gurlging something incoherent.\n\nC'Rash caught her own breath. \"You're- You're welcome, bitch...\"\n\n*\n\nSasha returned to Sickbay with the spare units, saw more of the injured -- and felt a pang of guilt about leaving the children. \"Doc, do you still need me in here-\"\n\n\"No, y'all get back to the Critters.\"\n\nShe nodded in appreciation and returned- stopping and gasping as the door slid open.\n\nThe room was no longer darkened, but lit up like a nightclub, courtesy of the energy ribbons, which now... danced with Misha and Naida. The energy patterns had thickened, changed shaped, formed rudimentary bodies and faces and appendages, like toddlers.\n\nAnd they stopped as they sensed her presence, and looked at her.\n\nShe froze, not wanting to endanger the children, guilt and terror suffusing her frame. Why did she leave them, what was she thinking? Stroking idiot! She'd heard the reports, seen the burns and shock of the crew who had encountered them already! They could have- they-\n\nThe children were laughing. So were the energy creatures. Misha and Naida had been alone in here for at least a few minutes, but were unhurt.\n\nSome of the energy creatures approached, warily, making faces much like... like her own. Reflecting what she felt. Fear, guilt, anxiety, apprehension...\n\nDon't face life afraid or angry all the time; you tend to get that fear and anger thrown back at you. And usually it's because you started it.\n\nShe relaxed, and smiled, opening her mind, remembering her father's words. And hoping it would work.\n\n*\n\nOn the Bridge, Hrelle focused his attention on the approaching wavefront, gasping as it swallowed up the Filthy Lucre and crushed it utterly. And passing through the debris, the energy seemed to darken and coalesce, taking on a vaguely humanoid face.\n\nAn angry face.\n\n\"Fascinating,\" T'Kessis exclaimed quietly.\n\nHrelle had other words to describe it. \"Kit, analyse the energy signature, see if we can disrupt them somehow. Tactical, ready the aft phasers and torpedoes.\"\n\nThen Sasha's voice came over the intercom. \"Captain, the energy creatures onboard, I don't think they're really hostile!\"\n\nHe started, glancing at Kami and the other officers before responding, \"Sasha, there's reports of at least a dozen injuries throughout the ship because of them, and there's one big one trying to crush us right now!\"\n\n\"Sir, the ones onboard are all here in the Cr\u00e8che right now! Playing with the children!\"\n\nHrelle heard Kami start, and he rose to his feet, his heart racing at the thought of his cubs in danger. Or, apparently, not. \"Playing?\"\n\n\"Yes, Sir! They've turned into energy analogues of Misha and Naida to play with them! I don't know if they're trying to communicate like that or they're just imitative, but none of us have been threatened, so long as we've not threatened them!\"\n\n\"And the children are okay?\" Kami asked aloud.\n\n\"Yes, Kam, I promise!\"\n\nHrelle silently motioned for his wife to get down and verify Sasha's account, as he regarded the pursuing, relentless wavefront with the angry... anxious... face.\n\nEnergy versions of Misha and Naida... playing- \"Helm, full stop!\"\n\nVelkovsky looked to him in disbelief. \"Sir?\"\n\n\"Do it! All hands, this is the Captain! Make no aggressive moves towards the energy beings onboard!\" He glanced at Tactical. \"Keep shields up, but do not fire on them!\" To Neheru he ordered, \"Send Handshake messages on all frequencies- Professor Kessis? Any ideas?\"\n\nThe Vulcan-Medusan bonded entity nodded, looking almost feverish and weak after such a length of time together, but remaining alert. \"The base frequencies on the 110cm wavelength would make for a good communications field for this medium-\"\n\nKit nodded excitedly, feeding the frequencies to Ops, as Neheru focused the hail and the accompanying translation matrix towards the desired band.\n\nThe wavefront, fronted by the vague face, seemed to crash on the Surefoot's shields, making the vessel shudder.\n\n\"I think it's mad,\" Jonas muttered, clinging onto his station.\n\n\"I'm not surprised,\" Hrelle replied. \"We might have their cubs onboard.\"\n\n*\n\nKami entered the Cr\u00e8che cautiously, suppressing her maternal instincts as she saw Sasha sitting cross-legged on the floor with Misha and Naida and a half-dozen Oubliette Beings, in a circle, passing a ball back and forth to each other, all of them laughing and giggling and gurgling happily. Sasha looked up, silently urging her to smiling broadly, her voice confident. \"See, Kam? No one's hurt, no one's in danger.\"\n\nKami trained her instincts on Sasha and the cubs, sensing no fear from any of them, no undue influence. Then she put on a smile and joined the circle, studying each of them in turn, while touching her combadge. \"Captain, Ensign Hrelle is correct. The beings here are imitative, picking up what they see or hear.\"\n\n\"Do they seem like actual children to you?\"\n\nKami reached out tentatively to one Oubliette Being, her fingertips brushing along its surface, making the fur along her hands and arms rise but offering nothing more dangerous. \"It's dangerous to make judgements on an unknown species, of course. But in this instance, you might possibly have something.\"",
        "\"Do you think you need to get the cubs away from them?\"\n\n\"I... No. No, I don't.\"\n\n\"Good. I'll see if I can explain things to their parents. Bridge out.\"\n\n*\n\nThe ship rocking caught Hrelle's attention, as Neraxis reported, \"We're getting buffeted by the energy wavefront, Sir! Shields at 83% but holding!\"\n\nHe turned to Neheru and T'vessis. \"Well?\"\n\nThe two figures looked to each other, before Neheru responded with, \"We think they've received our Translation Matrix and Handshake and understood it, Sir.\"\n\nThe ship rocked again, Neraxis reporting, \"Shields down to 60%, Sir!\"\n\n\"Open a channel.\" He took a moment, clearing his throat and fighting his nerves; twenty five years and more of Starfleet service, but it was still rare that he encountered a completely new alien species. It could go so horribly wrong... \"Attention: this is Captain Hrelle of the starship Surefoot. We are a peaceful vessel from another universe. We've come here accidentally and are trying to return. Your children are onboard, playing with our children. We were not aware that they were onboard when we departed, and we wish to release them back to you. But we can't do that while you are attacking us.\"\n\nThe ship rocked once more, Neraxis' voice a squeak. \"40% now, Sir!\"\n\n\"If you stop acting against our ship, I can drop our shields and let them go.\" He paused as the ship rocked again. \"I know how important our own children are to us, so I empathise with your actions now. But they need to stop. Please. If you continue to do that, our own children will be hurt. Or worse. And I don't think you want to do that.\"\n\nThe rocking stopped.\n\nHrelle paused, holding his breath, until he heard T'Vessis. \"The wavefront remains surrounding us, Captain, but the pressure against our shields has stopped.\"\n\nHe nodded. \"Drop the shields.\"\n\n\"Sir?\" As he looked to Neraxis, she seemed to have turned a nasty shade of purple. \"If we do that-\"\n\n\"Then they can retrieve their children. But if we don't offer them that gesture of trust, they'll crush us eventually anyway.\" He smiled confidently. \"Do it. What's the worst that can happen? You avoid taking your Exams permanently.\" He winked.\n\nShe swallowed, nodded and complied. The wavefront didn't move again -- but there was a strange vibrational whine that penetrated the hull and made Hrelle's fur stand up.\n\n*\n\nIn the Cr\u00e8che, the whine reached them, and the Oubliette Beings looked up at the ceiling, making sounds of their own, sounds that Kami would swear were ones of protest. She smiled wistfully, reaching up and touching the nearest one. \"Time to go home now, cubs.\"\n\nThe beings unravelled into energy ribbons once more, swirling around the remaining occupants before disappearing upwards through the ceiling. The room was dark and quiet again, until Misha and Naida began crying at the departure of their playmates.\n\nKami and Sasha reached out and took each of the infants, Kami cradling her son as she tapped her combadge. \"Our visitors are gone -- but now you have two cranky infants remaining.\"\n\n*\n\nOn the Bridge, Hrelle smiled as he watched the tiny ribbons join the larger wavefront. \"Thanks for the update, and give the cubs some shuris, that always quieted me when I was cranky. Hrelle out.\" He looked to T'Vessis. \"Are we close to the weak point? Can we get home?\"\n\nThe Vulcan/Medusan fusion appeared intensely feverish, though Hrelle resisted the urge to enquire further. \"Yes. As to whether or not we have sufficient power...\" She shook her head.\n\nHrelle faced front again. \"Activate the graviton beam. Use all power necessary.\"\n\nThe lights dimmed, and all attention focused on the screen as a pure white graviton beam shot forth into the Oubliette space, striking a point and erupting at seemingly nothing in particular. The ship shook, but this time not from attack, and Hrelle gripped the arms of his chair. He could feel the eyes on him, the attention. Even though he wasn't the one who had devised the potential means of getting home, or made the modifications, or implemented the beam, they still looked to him.\n\nHe forced down his terror and stared ahead. Onscreen, there was a point of blackness, just ahead where the beam struck.\n\nThe shuddering increased, as Neheru called out, \"All power, including life support, is pouring through!\"\n\n\"It's not enough!\" Ponzi shouted. \"Not enough! We can just about open the rift, but we don't have the power to sail through it!\"\n\nSuddenly the ship lurched forward, though not of its own volition, and Hrelle tightened his hold on his chair as the Surefoot raced towards the rift, shaking violently-\n\nAnd emerging into a starfield.\n\n\"Shut down the beam!\" he barked over the Red Alert, as people scrambled to their stations. \"Restore power to systems! Helm, get control again, and get a fix on where we are now!\" But even as he ordered it, he looked out at the normal-seeming view on the screen, and felt much better. Even if they were as far away as the Delta Quadrant, it still had to be better than where they were.\n\n\"What happened?\" Jonas asked. \"I thought we didn't have the power to move?\"\n\n\"Best Friend Jonas,\" Kit replied, gasping, \"It- It appears the natives of the Oubliette gave us the impetus to move.\"\n\n\"They helped us?\"\n\nHrelle smirked. \"Or they kicked us out of their neighbourhood. Either way, I'm happy.\"\n\nA sound from behind made him turn, in time to see Neheru catch T'Vessis. \"Get them back to Auxiliary Sickbay, now!\"\n\nAs he watched Jonas and Kit rise to assist the woman out through the doors, Velkovsky reported from the Helm, \"Sir, our deflector dish is burned out, but we have Standard Galactic Coordinates! We're only 1.4 light years from where we were when we entered the Oubliette! And there's a Starfleet vessel approaching at high warp! It's the Starsong! And they're hailing us!\"\n\nHrelle grunted; it was his friend Weynik's ship, which didn't surprise him in the least, with Weynik's daughter onboard. He relaxed his posture in his chair and retorted, \"Onscreen.\"\n\nThe starfield was replaced by the Starsong's bridge, literally centred around the diminutive figure in the Captain's chair, his aquamarine, swept-back facial fins almost as dark with worry as his beady black eyes, looking like a very anxious-appearing coral sculpture. \"Esek! Are you okay? Is Naida okay? Is everybody's okay? What happened to you? We've been scanning this sector where you disappeared for hours now!\"\n\n\"Everything's fine, Short Round.\"\n\n\"But where did you go?\"\n\nHrelle shrugged. \"Field trip for the cubs. They had fun, they made some friends. All in a day's work, really.\"\n\n*\n\n\"Captain's Log, Stardate 55099.78: the Starsong is towing us to the Shipyards at Alpha 441 where a replacement deflector dish awaits us -- as do numerous debriefings and signings of Nondisclosure forms from SI personnel. Our young Roylan guest has been returned to her father, the Ferengi prisoners have been turned over to the Starsong's Security team, and the cadets will resume their Final Exams shortly.\n\nMy First Officer has broken her telepathic link to Professor Kessis, who will be carefully transported back to the Medusan Homeworld to continue her healing, and those crewmembers and cadets injured by the Oubliette Beings have made full recoveries.\n\nCaptain Sakuth was severely wounded while attempting to trigger the self-destruct mechanism onboard the Surefoot during our time in the Oubliette. Her injuries were repaired; she is continuing to make a full recovery in an appropriate place.\"\n\n*\n\nDeck 4 Aft -- Brig:\n\nT'Varik strode in, ignoring the figure behind the invisible forcefield in the nearest cell as she approached the guard on duty. \"Please wait outside, Mr Gorman, and ensure no one disturbs us.\"\n\n\"Yes, Ma'am.\"\n\nThe ginger-haired man nodded and departed, as she turned to face the other Vulcan female. \"You have recovered, Captain?\"\n\nSakuth mirrored her stance. \"Are you asking facetiously, or does my health actually concern you?\"\n\n\"The latter; as a prisoner, your welfare would logically be of interest to a First Officer.\"\n\nShe nodded in acquiescence. \"I will fully recover. Eventually.\" After a moment she added, with a raised eyebrow, \"Your Chief of Security's bite is deep.\"\n\nT'Varik allowed a hint of amusement to soften her expression. \"I have experienced it myself... albeit under more amorous conditions.\"\n\n\"Naturally. And have you recovered from your mindmeld with Professor Kessis?\"\n\n\"Yes. It was a transcendent experience, and I am grateful for the opportunity.\"\n\n\"You are welcome.\"\n\nT'Varik's gaze narrowed. \"I was not thanking you. I took the action despite you, not because of you.\"\n\nSakuth glanced around the interior of the cell, as if for the first time. \"Your captain's insistence on my remaining here is petulant. All charges against me will be dropped by Admiral Trenagen.\"\n\nT'Varik's face went taut. \"Most likely. But for now, you have proven to be an immediate threat to this ship and crew, and will remain here until we reach Alpha 441, or until we receive appropriate orders. For now, accept your situation... and consider yourself most fortunate that it was Lieutenant C'Rash who intercepted you.\"\n\n\"Elaborate.\"\n\nT'Varik seemed to rise several centimetres in height. \"I care for the people onboard this ship... some very strongly... but there is one child in particular, my Keos-tath, or Godson. Had I caught you in your attempt to harm him, I can assure you that it would not have ended as mercifully for you as it had under our Chief of Security.\"\n\nSakuth's expression narrowed in regard. \"You will need to be debriefed regarding what you learned during your mindmeld with Professor Kessis. I may be involved. I trust this will not intimidate you?\"\n\nT'Varik folded her hands behind her. \"You are incapable of intimidating me. Perhaps we should begin now? Professor Kessis asked me to relay to you the following: she will not return to your Think Tank, nor will she allow any of her discoveries or developments to be employed in any future endeavours.\"\n\nSakuth stiffened. \"You are being dishonest.\"\n\n\"You are thinking of yourself, not me.\"\n\n\"You influenced her decision.\"\n\n\"No, Captain -- you did. When you compelled her to unnecessarily kill the Ferengi on Shangris IX -- and almost accidentally kill Captain Hrelle and his Away Team. When you tried to destroy this vessel.\" She paused and added, \"And when you hid the evidence of life in the Oubliette.\"\n\nThe other Vulcan almost reacted. Almost. \"I do not know what you are talking about.\"\n\n\"Your continued deceit is pointless. While you were undergoing surgery, your subdermal recording unit containing your personal logs was discovered. Professor Kessis and I decrypted them.\"\n\nSakuth's glare focused. \"How did you break the encryption?\"\n\n\"Irrelevant. What is relevant is that the initial probes into the space dubbed the Oubliette revealed evidence of native life, evidence you suppressed from Professor Kessis and the others, knowing that they would ethically object to the Oubliette as a destination for the trajectory, and thus delay completion of the project, while they sought another destination.\"\n\nSakuth regained some composure. \"I will neither confirm nor deny this. Whatever evidence you may or may not have seen will be suppressed for security reasons.\"\n\n\"Again, irrelevant. The damage is done, and a potential weapon to defend the Federation is perhaps permanently lost... not because of a scarcity of secrecy, but an overabundance of it. Perhaps you should recruit the Ferengi physicist Dr Ponzi? He appears to operate at your ethical level.\"\n\nThe captive Vulcan stared hard at her. \"Your criticism of the work of Starfleet Intelligence is indicative of your provincial thinking. It is regrettable that you have squandered your considerable attributes in a career at Starfleet Academy.\"\n\nT'Varik stared back. \"The Terran historian Henry Brook Adams wrote, 'Teachers affect eternity; no one can tell where their influence stops'. Helping to guide the lives of innumerable young people, to teach and advise them, to encourage and assist them, not just academically but ethically and, yes, even emotionally, to help them be the best that they can be, is not a squander of my attributes. It is a fulfilment of them.\n\nI do not diminish or disparage the work of Starfleet Intelligence in investigating and uncovering potential threats to the Federation -- but rather the zealotry of certain individuals such as yourself, who are too quick to sacrifice others for a victory of dubious value or even certainty. And while I recognise that operatives in your field must at times bend and indeed break the rule of law to achieve your ends, I will always believe that these times must be the exception rather than the rule.\"\n\nSakuth stepped back from the force field. \"I am not one of your cadets, requiring a life lesson.\"\n\n\"A pity that you are not; you could clearly benefit from it.\" She held up her hand in the Vulcan salute. \"Peace and Long Life, Sakuth.\"\n\nThe other Vulcan regarded her, before copying the gesture. \"Live Long and Prosper, T'Varik.\"\n\nC'Rash had been outside with Gorman, but now allowed the man to return to his post as she sided up to her partner. \"Are you okay?\"\n\nThe Vulcan raised an eyebrow as she proceeded to her duty. \"Of course. Why would I not be?\"\n\nThe Caitian slipped an arm around her. \"You have been through much.\"\n\nT'Varik allowed the familiarity. \"I have fully recovered. It was most rewarding to share my thoughts with Professor Kessis.\"\n\nC'Rash growled.\n\nT'Varik indulged in .39 seconds of amusement at the response. \"However, I will be most pleased to resume intimacy with you. Medusans have been non-corporeal for too long to properly appreciate the physical aspects of love between individuals - something with which I have found you excel at.\"\n\nC'Rash just growled again.\n\nBut couldn't hide her Happy Tail from smacking the back of T'Varik's legs.\n\n*\n\nDeck 3 Fore -- Holodeck 1:\n\nAlpha Squad stopped and drifted into a circle as they looked to each other, Jonas offering a glum, \"Well, third time's the charm. Good luck everyone, we're gonna need it-\"\n\n\"No, we're not.\" Sasha declared defiantly, looking to them all to make sure they were paying attention. \"We don't need luck. We don't need cheats or lucky mascots or Divine Intervention. We're an amazing group! We've survived Nausicaans, Ferasians, Orions, Nazis, Ferengi, Vlathi- We were just in another Universe!\" She raised a finger to them to make sure they got the point. \"We are kickass! This is gonna be as easy as pissing our pants!\"\n\n\"Speaking from experience?\" Neraxis quipped, smirking.\n\n\"Yes, actually,\" she admitted, staring back. \"Twice -- both times when I died. And I still came back. In comparison, this is nothing.\" She held out her hand to the centre of their circle. \"We're Alpha Squad.\"\n\nAcross from her, Eydiir stuck out her chin, reached out and rested her hand on Sasha's. \"Alpha Squad.\"\n\nJonas smiled and joined his hand to hers, as did Kit, Rrori and finally Neraxis, declaring, \"Hell, yeah...\"\n\n*\n\nDeck 2 Fore -- Officer's Mess Hall:\n\nMisha threw the spoon away for the fourth time.\n\nT'Varik offered the infant a look as she retrieved the cutlery, drew closer to his chair and proceeded to try and feed him again. \"It is illogical to continue with this course of action.\"\n\nHe closed his muzzle and looked away.\n\nShe caught his attention again. \"Your continued defiance has ceased to be amusing.\"\n\nNearby, Kami never looked up from her food as she suggested, \"Start eating it yourself, T'Varik.\"\n\nThe Vulcan regarded her. \"It contains meat products.\"\n\nOpposite his wife, Hrelle smirked between bites of his shuris burger. \"You don't have to really eat it, just pretend.\"\n\nT'Varik frowned. \"That would be dishonest.\"\n\n\"It's for a good cause,\" Kami assured her. \"Weaning him off fatty foods.\" She looked up and glared at her husband. \"Apparently he gets his weight retention from me.\"\n\nHrelle pretended to be distracted by the approach of C'Rash. \"Hello, Brat! And how's life in Security?\"\n\nThe black-furred Caitian set her tray and herself down next to her aunt. \"Don't get me involved in your domestic catfights. Have the Final Exam results come back yet?\"\n\nT'Varik pondered the creamy contents of the food in the bowl. \"I am expecting them shortly from Starfleet Academy.\"\n\nHrelle grunted. \"It's idiotic, having to send them off to the Academy to get marked. You could do that easily enough here.\"\n\nT'Varik turned in her chair, still allowing herself to be partly seen by Misha while bringing the bowl and spoon closer to her mouth. \"I thank you for the vote of confidence, Sir, but as you will already know, Final Exams are more than just questions that must be either correct or not, but essays to be judged and graded by appropriate instructors and professors. Also, the Academy must not allow any possibility for accusations of personal bias on my part.\" She made a show of pretending to consume the food, before adding, \"Yes, that is most gastronomically desirable. It is a pity that Misha does not desire any of this.\"\n\nMisha made a mewling, demanding sound now for his dinner.\n\nT'Varik returned the bowl and spoon to him, as Kami chuckled. \"Yes, just like his Dad.\"\n\nOn the table in front of T'Varik, her PADD made an Alert sound. She lifted it up. \"The results are here.\"\n\nShe went silent as she proceeded to read, the others at the table staring and waiting for several seconds before Hrelle finally exclaimed, \"Well?\"\n\nNow she looked up again. \"All have passed. There are fourteen notes of distinction from the Academy instructors who assisted in grading the papers.\"\n\n\"Marvellous!\" Kami announced, beaming.\n\n\"Seven Hells, yeah,\" C'Rash agreed, smiling as well. \"They all deserve it!\"\n\nThen T'Varik looked up at Hrelle. \"Sir... Sasha has made Valedictorian.\"\n\nHrelle's eyes widened as he took it in, and his grin broadened until he thought it would go around to the back of his head. \"My girl... My little girl made Valedictorian?\"\n\n\"Indeed, Sir. Congratulations.\"\n\nHe looked to the others, looking fit to burst. \"Did you hear that? DID YOU?\" He drummed on the table with his hands and whooped and hollered, \"MY LITTLE GIRL'S VALEDICTORIAN IN HER CLASS!\" Then he rose and did a Victory Lap around the room.\n\nAs others in the Mess Hall cheered and applauded, and Misha looked up curiously at his father, Kami looked to T'Varik. \"Did you know she would?\"\n\n\"Her grades were consistently in the Top Five Percentile, but given her shipboard activities consume a significant portion of her time, I did not believe she could actually achieve the leading position. None of the cadets I have worked with in my capacity as Academy Liaison and instructor have achieved this position before. I am most proud of her. Proud, and pleased.\"\n\n\"She'll be, too... at least, until she realises this means she'll have to give the closing address to the graduation class back at the Academy. Then she'll be all nerves again.\"\n\nHrelle dashed by the table, reaching out and grabbing his shuris burger along the way as he went for another lap. C'Rash watched him with amusement. \"Don't exhaust yourself, Uncle Esek, you'll need the strength to go personally embarrass her with the news. Assuming you can get the words out from between the chunks of shuris you have stuffed in your huge mou- OWW!\" She hissed as Hrelle smacked the back of head while passing behind her and out the door.\n\nAs her husband departed, Kami said to the First Officer, \"My husband might be running around with Happy Tail, but you should be, too. You've inspired and driven Sasha and the others. When will you tell them?\"\n\n\"I will schedule a briefing for 2100 Hours tonight.\"",
        "The two Caitians looked at her.\n\nShe looked back, before finally tapping her combadge. \"Commander T'Varik to all cadets. The Final Exam results have arrived.\" After a moment, she added, \"I recommend that all of you prepare to get absolutely shitfaced. T'Varik out.\" At the reactions of the other women, she asked, \"What?\"\n\nMisha laughed and threw his spoon away again.\n\n<br ><br >THE ADVENTURES OF THE SUREFOOT WILL CONTINUE..."
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fan fiction",
        "surefoot",
        "fanfic",
        "fanfiction",
        "science fiction",
        "sci-fi",
        "starfleet",
        "starfleet academy",
        "caitian"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-27-oubliette"
}