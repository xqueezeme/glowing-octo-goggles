{
    "title": "The Bra Salesman Ch. 11",
    "pages": [
        "Again, thanks to all who have written, commented, and voted in the past. I appreciate all the feedback. Hope you enjoy the next installment!\n\nChapter 11: But Of Course\n\n\"No, I don't think so.\"\n\nI roll my eyes and grab Dave by the shoulders. \"I am telling you man, Brittney is totally jealous of all the bondage stuff you've been doing to Tasha and she wants you to do them all with her!\" Hey asshole, you're at work, why don't you try saying that a little louder so that the females in the next cube over can write down everything you say to save time on your sexual harassment hearing. I poke my head down the aisle to make sure no one else at work heard me.\n\nHe looks at me skeptically, \"I don't think she likes me. She called me a troll yesterday.\" Honestly, the resemblance between Dave and a short monstrous creature who lives under a bridge terrorizing goats is quite uncanny, but I'm not going to point that out to him.\n\n\"Of course she likes you! She calls me a jackass! She calls Tasha a slut! She calls people names all the time. That's how she is. That's how you know she likes you.\" I can see by the look on his face that Dave still isn't buying it. \"Look, I promise you. I'll go with you to Brittney's apartment after work and you'll see for yourself, ok?\" Of course, I know all this because I was able to plant all sorts of subliminal instructions to Brittney last night after Tasha told me the code word for Brittney's hypnosis. Which sounds even more ridiculous than it did when I discovered it last night. \n\nPoint is, I can finally be free of the annoying bitch and can let Dave unleash all his pent-up sexual perversions on her. And now that I've conditioned her to enjoy all his extreme bondage shit, it's a win-win-win situation for everyone. Especially for Tasha and me, which honestly is all I really care about.\n\nUntil last night, Tasha and I hadn't been together for at least a week. And after being with her again, I never want to be with anyone else ever again. I know that now, and I am going to spend tonight showing her just how special she is. I've bought all sorts of stuff in preparation tonight so that we can have the exceptional night she deserves, but not in the Dave sense of \"I spent a buttload of money on bondage crap that would scare Madame Whippamyass.\" \n\nBut first I have to convince Dave to actually get Brittney out of my hair. Dave shrugs and says in a meek voice, \"Ok, I guess I can do that.\" \n\n\"Terrific! I'll meet you in front of their apartment building at 5:30! And don't forget your bag of... y'know\" and then I lean in and whisper \"bondage stuff\" because I don't want to make the same mistake again. Dave leaves my cube with a smile, but I can tell he still doesn't believe me. That's fine, he can have as many doubts as he wants, just as long as he gets his large, hairy ass there tonight. I can barely focus on my work for the rest of the day. Hell, I can't get any work done, I just spend most of the day checking and rechecking the bag that I'm bringing to Tasha's tonight.\n\nBy the time Dave arrives at 5:35, the fucking prick, I'd already been waiting twenty minutes before that. God, I'm acting like some pimply teenager with a schoolboy crush, and I guess that's exactly what I do feel like and I'm ok with that. \"Sorry to keep you waiting,\" is all Dave says as he walks up to me.\n\n\"No problem, glad you're here.\" That is what I actually said. What I wanted to say was a string of four-letter curse words that made fun of his penis, his manhood, his character, his personality, and every other physical attribute about him for him being a selfish fucking asshole making me wait out here five fucking minutes that I could have had being inside with Tasha. But I want him to be confident and in a good place mentally tonight, so I wisely shut my fucking mouth and opened the door of the elevator for him.\n\nThe two of us walk up to Brittney's door and just as I'm about to knock, Dave grabs my arm again, \"Are you sure about this?\" I give him a huge smile and rap on her door three times. Thing is, I honestly don't know how well this is going to work. Sure, the hypnosis seems to work pretty well, but it might be asking a lot to get her to be attracted to a guy like Dave who, frankly, is a little repugnant, not that good looking, and has the charming personality of a cement block. All of a sudden a wave of dread flooded my body, but I didn't let me smile fall for one second.\n\nBrittney throws open the door and in an irritated voice says, \"What do you wan... oh, hello there!\" Upon seeing Dave, her voice immediately melts into a lovely, welcoming tone full of sweetness. \"I didn't know YOU would be here. Come on in!\" Holy shit, I think this is actually going to work. \"Please tell me you brought over your handcuffs!\" she says with a weird sort of merriment that I never thought I'd hear come from a mean bitch like her. She grabs Dave by his shirt, pulls him into her apartment but leaves the door open.\n\nTo Dave's utter shock, and mine as well, she immediately starts clawing at his clothes with one hand while ripping off her own clothes with the other. I have no fucking idea how she has the dexterity to do that, but within a minute, they're both completely naked. \"Get your handcuffs out!\" she says to him. Well, it's more of a scream, but not the atonal screechy yell of irritation I've been listening to day after day, it's more of an enthusiastic squeal of delight that is accidentally too loud.\n\nI'm still standing in the front doorway, which is still wide open, and decide to just let myself in and close the door behind me. When I turn around, Dave is already pinned on the floor with Brittney straddling his groin with her hands behind her back and handcuffed. \"Do you have nipple clamps?\" which made me snicker. Seriously? Asking if Dave has nipple clamps in his traveling nylon bag of masochism is like asking if the Pope has ever read the Bible.\n\nDave reaches out as far as he can, given that he can't move with her sitting on top of him, and scratches at the strap of his duffel bag until he can grab it with his fist. I watch his hand disappear beneath a pile of whips and boxes and dildos until it reemerges with the nipple clamps in his clutches. \n\nAs he clasps the clamps on her protruding nipples, she gyrates her hips around and then moves her body up and down. I can't see, but I assume she managed to find his stumpy dick and maneuver it inside her. I would feel like an asshole for such a completely mean comment if it weren't for the fact that it was absolutely true.\n\nThis is great, now I can take this chance to quietly slip out the door so that I can go to Tasha's apartment, finally free and unencumbered with any blackmail or threats or anything. Crap, Dave is waving to me and pointing somewhere. I look over to the table where he's pointing at and I see some stuff lying there, including a banana. I don't know what the fuck he wants, so I grab the banana and hold it out to him. Seems like an odd time to eat, but if he's hungry, I'm not going to deny him a snack.\n\nBrittney is still pumping her shackled body up and down so hard that the chain across her tits, which I have to admit are beautifully large, shakes every time she slams down on his crotch. Her eyes are closed and her head bent back like she's in an erotic trance, so I assume she's oblivious to what Dave is doing as he waves me off and frantically points at the table again. Well, his car keys are there, so maybe that's... no, he's waving that off. Shit, what the fuck are you.... \n\nOh, he's pointing at his digital camera. Fine, here's your camera, enjoy yourself and... he's waving me off again?!? What the fuck does he want? Now he's holding his hand up and with his finger in a hook... shit, he wants me to videotape this. \n\nBrittney is now gasping \"yes\" as she keeps hammering her naked body on top of his. Goddamnit, I don't want to stand here like some schmuck watching Dave perform acts with Brittney that would be illegal in several states. But since he videotaped and shared the footage of me and Tasha from last night, and holy shit was that some awesome footage, I can't really say no to this. I just hope she makes him cum soon so I can get out of here quick.\n\nJust as I hit the record button, she dismounts him and says breathlessly, \"I'm yours,\" with a big smile on her face. In appreciation, Dave shoves a ball gag in her mouth and throws her on the coffee table so that her head lands hard against the top. She's lying on her back on top the table, her arms still handcuffed behind her back, with a pile of magazines digging into her shoulders and a bag of low-fat corn puffs under her neck. \n\nDave lifts one of her legs up so that her body shifts onto one shoulder, and then he starts rutting her as hard as his rotund body can manage. Her breasts are flopping wildly in every direction and I hear her grunt in appreciation with every one of his thrusts. He reaches down and grabs a fistful of hair in one of his hands, and then he starts pummeling her even harder with his hips. She is moaning in pure bliss and the two of them grunting and growling together sound like a lawn mower that's in immediate need of repair. \n\nIt doesn't take long before he slows down and she lets out one long, muffled \"hhhhrrrnnnnn\" as she accepts every drop of cum he is undoubtedly squirting into her wet pussy at that moment. As soon as they both regain control of their breathing, Dave pulls himself out while still holding on to a fistful of her hair. He comes around to the side of the table and starts wiping his cum-covered dick all over her tits, and she moves her shoulders around as best as she can considering her arms are still handcuffed behind her.\n\nI think he's done, but then he lets go of her hair and starts digging his fingers into her nipple-clamped tits and squeezing her as hard as he can, which I can tell because she arches her back and grunts with pain. When she does, Dave uses his other hand to put two fingers into her cunt and pumps his fingers in and out of her so that streams of wetness come pouring out of her.\n\nNow he's finger fucking her as hard as he can with one hand while twisting her clamped nipples with the other. She is contorting her body every which way, all the while screaming in muffled pain with the ball gag in her mouth. As she yelps with pleasure, he gets on his knees and really focuses on shoving his fingers as deep as he can inside her. \u2028\u2028\n\nHer muffled grunts soon turn into intermittent high-pitched squeals of orgasmic delight. She spreads her legs as wide as she can so that he can insert himself as deep as possible, and Dave is just thumping away at her crotch with a sick smile on his face and his drooling tongue hanging out of his mouth. She lets out one long squeal and then gasps for air, which makes me think she had an orgasm, and Dave finally slows down.\n\nShe rolls over on the coffee table onto her back, as best she can with her arms handcuffed behind her, and pants as magazines slide from underneath her and fall to the floor. Dave unstraps the ball gag and the two of them smile at each other like their souls are connected through some devil-inspired code of perversion. In between gasps, she asks, \"Did you bring your whip?\"\n\nOk, that's it, I've done my duty. I quietly click the recording off and gently laid the camera on the couch. I hear Dave ask, \"Do you want the leather or the nylon?\" I am so glad these kids got together and can make each other happy, but I really need to get the fuck out of here. I manage to grab my bag and open the front door without either of them noticing, and I made it into the hallway. \n\nWow, this is all working out so much better than I ever dared dream. Ok, now that THAT's taken care of, I pick up my own bag of goodies and make my way to Tasha's apartment and knock.\n\nShe opens the door, but is peeping from behind so that I cannot see her body. Her expression changes from nervousness to delight when she sees me, \"Oh it's you! I wasn't sure if Dr. Cooper would still be coming tonight.\" \n\nOh, he will be cumming, I guarantee it, but not with you. Not anymore. \"He's going to be working with Brittney from now on. You're stuck with me from here on out.\" I say as I step into her apartment.\n\n\"I am so glad to hear that,\" and she closes the door behind me. Now I can see that she is wearing black lace lingerie and stockings with a black choker. I watch her voluminous tits jiggle and her wide hips sway as she walks towards me. \"So what do you want to do first?\" she asks teasingly.\n\nBut I know exactly what I want to do first. \"First, take a seat on the floor here,\" and I pull a picnic blanket out of my bag. I spread it in the air in an exaggerated way, which makes her giggle, and let it float down on top of her carpet. I take her hand and, in the spirit of a true gentleman, help her onto the blanket and down on her knees. \n\nI get on my knees in front of her and pull out a Tupperware of strawberries. Ok, it's not REAL Tupperware, it's actually the five-for-a-dollar cheap knock-off stuff, but for me it's eons more romantic effort than I usually spend time doing. I hold up the strawberries in front of her, and she helpfully opens her mouth and lets me feed her. After about five strawberries, I remember that I forgot to get the other part of the surprise. \"I'm sorry, did you want some whipped cream with that?\" as I grab the spray can out of the bag.\n\nShe gets an impish grin and snatches the can out of my hands. \"I most certainly do,\" she says as she reaches behind her with one hand and takes off her bra and then sprays whipped cream on the tips of her erect nipples. God, she is hands down the sexiest woman I could ever possibly hope to meet. I don't know how she does that innocent yet slutty look with a smile that just lights up... oh right, she has whipped cream on her enormous boobs, that's how she does it.\n\nI lean over and lick the whipped cream off of her chest and continue devouring her tits until I get a hold of her firm nipples between my teeth. I lightly bite down on her, and she moans in approval. I grind my jaw a little and gnaw on her flesh, and she grabs my head and pulls me closer in until my face is pressed so far into her flesh that I have trouble breathing. I make my way over to her other breast and nibble on it as well, much to her delight. \n\nWhen I'm done, I look up at her with a huge grin on my face. \"Oh no, you're not finished yet.\" She says with a tease. She sprays more whipped cream in her cleavage and all over the top of her tits. I use my tongue to make my away across her chest and lick every last bit of white sugar off of her. I even throw in several dozen kisses, just to make sure I get it all.\n\n\"Stand up and take off your clothes,\" she orders me, and I am not one to say no to a naked woman with large breasts. I stand up and she takes off my pants and helps me out of them as I remove my shirt. Then she sprays a generous amount of whipped cream all over my dick, which is now as rigid as a Republican ideologue. She opens her mouth wide and slowly sucks the tip of my penis clean. She then uses her tongue up and down my shaft to lap up as much cream as she can. My cock is already visibly throbbing and ready to orgasm. \n\nWhen she opens her mouth wide again and shoves my entire cock into her mouth and throat, I have to put my hands on her head to hold myself steady and keep from falling over in pure ecstasy. \"Mmmmmm!\" She moans and groans in pleasure as she sucks my dick as hard as she can, and I can feel her tongue exploring my entire cock to make sure she licks all the sugary stickiness off of me.\n\nShe pulls her mouth off of me with a loud SLURP that pops in the air, then she sprays even more whipped cream on my penis again. This time, when she opens her mouth and crams my entire cock into her mouth again, I can feel the cum filling my penis. \n\nHer intense sucking is unlike anything I have ever experienced, and I hear myself unleash a guttural \"UNGH!\" Again, she puckers hard and powerfully, and I cannot hold back anymore. \"UNNNNNNNGH!\" I hold myself steady as jism rockets out of my cock and mixes with the sticky cream that has already filled her mouth. \n\nShe tries to swallow as much as she can, but globs of white whipped cream mixed with green cum pours out of her mouth and lands on her gargantuan breasts, shuddering as she forcefully moves her head up and down over me to encourage me to release as much cum as possible. \n\nShe slows down and sticks out her tongue, covered with cream with cum, and licks my entire stiff cock several times while cooing with delight. I feel my dick disappear once again into her mouth and throat until her lips are touching the base of my cock where the pubic hairs are pressed against her nose. As she pulls her mouth slowly, so slowly, off of my dick, she washes all of the sticky whipped cream off of me and leaves only her spittle that makes my cock glisten.\n\nI drop to my knees in front of her and gently push her backwards and help her lie down on her back. I slip her black lace thong off of her taut legs, then as I shake the can of whipped cream, I smile and say, \"Your turn.\" She spreads her legs expectantly and I spray whipped cream on top of her moist pussy. As I push my face between her thighs, I can smell her wetness along with the sweet sugar.\n\nI can feel my face is now covered with whipped cream, and I stick my tongue out through it and find the warm lips of her pussy. I make my way around her, and I can taste her saltiness amongst the whipped cream. There is so much cream on my cheeks that it gets spread around her thighs and cunt as I move my face around her crotch and using my tongue to explore every fold of her damp pussy.\n\nAs I continue licking, I reach out with both my hands and grab a breast with each hand. I find her nipples and give them a hard squeeze and tug, which makes her arch her back and groan in pleasure. I keep kneading and squeezing her tits as I thrust my tongue as deep as I can into her hairy, moist pussy. \u2028\n\nWhatever residue of whipped cream that remained in her crotch doesn't last long as I flick my tongue in every direction. \"Ungh!\" I lap at her pussy while digging my fingers into her immense breasts. \"Ungh! Ungh! Ungh!\" I lick and I lick, being sure to press against her clitoris with my tongue, and her thighs press against the side of my head in hopes of pushing me deeper inside her. \"UNGH! UNGH! YES!\" I feel her erect nipples between my finger and thumb, not to mention several sticky globs of whipped cream and cum, and squeeze them so that she moaned. \"UNNNNNGH!\"\n\nBy now her body is quivering in pleasure, and I keep lapping and licking at her drenching wet pussy. \"UNGH! UNGH!\" As I shove my tongue deep inside her, she grabs my head with both hands and presses me into her body as hard as she can, while my hands grab as much flesh on her breasts as possible to keep her wiggling tits from flailing too much as a wave of orgasm hits her. \"UNGH! YES! UNNNNNGH!\"\n\nHer body is convulsing in orgasm now, and it takes all the strength I have in my hands to hold her gigantic tits as I press my head deeper into her crotch and lick the wetness pouring out of the spongy inner walls of her vagina. \"UNNNNNNNGH!\" I pull my tongue out and lap at her clitoris, which only makes her tremble in more orgasmic pleasure. \"YES! YES! UNNNNNNGH!!\"\n\nI lick her a few more times slowly before I lift my head up and crawl on top of her. I position myself so that I can insert my cock, which has already hardened again, inside her waiting cunt. But she sits up before I can do so, \"Wait, I need to wash first, it's not good to get food inside you, y'know.\" Ok, no I didn't know that, but I nod as if I did. \"I'm going to go shower.\" She got up off the floor and started walking to the bathroom, but then looked over her shoulder at me. \"So are you coming or not?\" You bet your sweet, hot, delicious ass I am. I hop to my feet in one single jump and catapult myself across the room to join her in the bathroom.",
        "It's a little cramped as we both squeeze inside her glass shower booth, but it doesn't take long for the hot water to steam up the air. She lathered up her hands with some body wash and rubbed her hands all over my torso and back. I lathered up my hands and rubbed her breasts and her tits and her boobs. I guess I should wash some other parts of her body, but goddamn my hands do not want to leave those amazingly awesome chest of hers.\n\nMy hands do somehow manage to find their way to her arms and back, but then they get stuck again gripping her ass and pulling her wet body into mine. The shower continues to tenderly pelt us with warm water, and I give her a long, loving kiss as I caress her back. But one of my hands finds its way down to her crotch and washes her pubic hair. She smiles at me as I start lathering her pussy, and by the time my fingers enter her lips, she is gasping in delight. \n\nShe returns the favor by lathering up my stiff cock, and I can feel my cock pounding in her hand as it moves up and down. We give each other another long kiss, and then I spin her around and press her against the wall of the shower. With one hand I lift her left leg and with the other I reach around and grasp her right breast. She holds herself steady by holding on to the top of the glass shower wall while her other hand reaches down and guides my dick into her eager pussy. \n\nAs soon as the tip of my penis penetrates her, I grind my hips so that I move in and out of her. \n\nShe throws her head back on to my shoulder so that her drenched hair covers my face. I squeeze her tit hard as I pull her body down on top of my cock, and I can feel her spreading her pussy so that I can enter her. \n\nNow she is moving up and down in opposite rhythm with my gyrations, and as the water from the shower head continues to beat down on both of our bodies, the slap of our skin against each other fills the stall. \"Unnnngh!\" she moans, and I begin hammering her harder. \n\n\"UNGH! UNGH!\" I can feel the walls of her vagina pulsing and wrapping around my cock as I shove myself deeper and deeper into her. \"UNGH! YES! UNGH! YES! YES!\" Our bodies are united in carnal lust and my fingers dig into her thigh in hopes of spreading her legs even further so that I can drive myself as hard and as deep as possible, and I can feel her trying to accommodate me and welcome me into her deepest areas. \"UNGH! UNNNNNGH! YES! YES! YES! YES!!\"\n\nI am pummeling her crotch as hard as possible and she is driving her body down as hard as she can in response. \"YES! YES! UNNNGH!\" I look up for a moment and, through the steam and the watery glass wall, I can see our bodies in the mirror. \"UNGH! YES! UNGH! YES!\" Most of her body is pressed against the glass wall, and her tits are bulging against the glass so much that the outline of her nipple can be easily made out. \"UNGH! UNGH!\"\n\nLines of water are streaming down both our bodies as the shower water mixes with our sweat, and the steam almost matches the heat of friction between our bodies as we slap and grind against each other in erotic pleasure. \"UNGH! UNGH! YES! UNNNNNNNGH!\" My cock is pulsing inside her and the slap of my groin against her buttocks keeps echoing in the stall. \n\n\"UNGH! UNGH!\" I can feel the urge to cum, and I do my best to resist it, wanting this moment to go on as long as possible. \"YES! YES! UNGH!\" But before I want it to, I feel the cum explode from my cock and shoot inside her, and she must be able to feel the streams of jism filling her because I hear her moan in orgasmic bliss. \"UNNNNNNNNGH!\"\n\nMy body immediately goes weak, and I release the grip I had on her thigh and breast. I have to brace myself against the sides of the shower just to keep from collapsing. She turns around and has the biggest smile I've ever seen on her, and I've seen some pretty fucking terrific smiles on her. She tosses her arms around my waist and gives me several lingering kisses that make my damp skin tingle in excitement. \n\nShe was the one who finally turned off the shower, since I was more than happy to spend the rest of my life in that stall, and we stood there soaked and dripping with our arms around each other and feeling each other's bodies as if it were the first time. \n\nWe put on robes and ordered some take out from a nearby Chinese place while I complained about work, but by the time we devoured half our dinners, we swapped mischievous looks and were ready to devour each other all over again. I carried her to the bedroom and threw her on top of the bed. As I climbed on top of her, we tore at each other's robes until they were a tangled mess on the floor. \n\nI pressed my body down on hers and felt her enormous tits pushing back against my chest as we kissed each other over and over. Using only my hips, I navigated my stiff cock into her crotch and she spread her legs wide so that I could slowly push myself into her hungry pussy. \n\nAnd then I did something I had never done with any other woman ever in my life. I stared at her. No, I'm being serious. Don't get me wrong, I have looked at woman as I fucked them, but that was all in the moment of satisfying my own selfish, carnal needs. No, I mean really stared at her. I mean never really looked deep into a woman's eyes while I was inside her, not even with Tasha before now. \n\nShe seemed surprised, but pleasantly so, and she gazed back at me. I could feel my cock throbbing inside her, and I clenched my penis so that it throbbed hard. I didn't move in or out or up or down, I just kept my cock in place and pulsed it against the sides of her vagina. The whole time we kept our eyes locked on each other, no throwing our heads back, no closing our eyes and conjuring some image in our head that would turn us on, none of that. No, we just stared into each other's eyes and felt each other pressing against the other inside her. \n\nI can't believe I've never done this before. No wait, I can. I know why I haven't. Because staring at someone at this moment when your throbbing cock is nuzzled deep inside someone you care about, you feel an overwhelming intense connection that makes you feel both larger than all of existence and at the same time tiny compared to the vast universe of emotions now open to you. The incredible sensations swarming within me were too scary to be believed and too fantastic to deny. \n\nI moved ever so slowly and pulsed my cock several times and I could feel the wetness within her flooding her vagina and drenching me with her pleasure. Our eyes stared at each other as we both gasped in gratification, our gaping mouths inches from each other and trying to find enough air to keep us from passing out from overpowering bliss. \n\nI could feel her body shuddering and shaking from an orgasm, and soon my dick climaxed into a stream of warm cum filling her generous body. I squeezed every drop I could from my cock, and continued to make it throb as much as I could until I felt the inevitable deflation and slowly slid myself out of her cum coated pussy.\n\nI don't know how long we kissed and held each other, I can't tell you how long I spent running my tongue lightly down and around her gargantuan breasts as she relaxed, and I have no idea how long it was before she fell asleep in my arms. But what I do know is that three hours later I was still awake staring at the ceiling, which, I have to say, was really irritating to me. I mean, usually after I cum I couldn't stay awake if a nuclear air strike alarm was going off two inches from my ears. Now, as much as I felt terrific and spent and tired and relaxed, I just can't fucking go to sleep. What the fuck is wrong with me?\n\nSomething is nagging at my brain, and I can't put my finger on it. It's something about what Tasha said. No, it was Brittney's hypnotic code word, \"Neitzsche-esque.\" The way that Tasha leaned over and asked me about that. Wondering who the writer was who said God is dead. But why would that bother me? Sure, Neitzsche is a famous philosopher, but that's like saying someone's a famous harp player or a famous badminton athlete. Not everyone knows who Neitzsche is, or can think of his name off the top of their head, so why did it bother me that Tasha didn't know? It's not like she would have any reason to know who he was.\n\nAll of a sudden, I sat up in bed. I was worried I was going to wake up Tasha, but she just rolled over in peaceful slumber. I was so goddamned tired, but I had to go check something. Something I hadn't consciously thought about.\n\nI found my robe on the floor and went out to Tasha's living room and strode over to the bookshelf I had browsed at a few weeks ago. At the time, I had mindlessly gazed at the various books on her shelf, but now I was actually reading the names there. \n\nVoltaire. Plato. Lao Tzu. Doris Kearns Goodwin. Why the hell didn't I notice this when I was browsing before? John Irving. Dominic Crossan. Martin Luther King Jr. Probably because my mind was focused on the large-breasted woman who was going to be sucking my cock. Nikos Kazantzakis. Frederick Neitzsche. There he was. And not only that, but there were three books by him; Thus Spoke Zarathustra, Beyond Good and Evil, and The Will to Power, which I had never even fucking heard of.\n\nOk, hold on. Don't get ahead of yourself. Maybe Tasha just bought a bunch of books that she'd never read. She certainly wouldn't be the first person to have ever done that, but as I flipped through page and after page and saw notes that seemed to be in her handwriting, and the binding and earmarked pages sure as hell seemed like somebody had read these.\n\nSo why the hell didn't she know who Neitzsche was? Come on, maybe it was just a brain fart, that happens to everyone. I certainly have had plenty of moments where the name you know you know is on the tip of your tongue but you just can't quite formulate the thought. Maybe. But the way Tasha asked, she seemed like she'd never be able to come up with the name no matter how many of her underused brain cells she assigned to the task.\n\nAnd then I had the worst thought of all. It was so horrible I couldn't even bring myself to actually think it. That would be... just... \n\nI had to know, so I bolted out the front door and went upstairs to Brittney's door and started pounding on the door. After a minute of that, I hear her muffled voice through the door, \"Goddamnit, it's fucking three in the morning! Whoever this is, it had better involve a dead body or else you're about to become one!!\" The door opens and Brittney is standing there with an unclasped robe that doesn't do an adequate job of hiding the fact that she is totally naked. \"You?!\" What the fuck are you doing?!?\"\n\n\"Neitzsche-esque,\" I say and quickly let myself in and shut the door while she stands there in her stupor. \"Sit down,\" and she does so. \"Did you do anything to Tasha when you took her to the hypnotist?\"\n\n\"Of course. I wanted to take that smartass cunt down, so I took her to go see a hypnotist.\" It is too fucking weird listening to Brittney talk in such a bitchy way with that monotone, zombie-like voice. \"After the show, we went backstage and I told the hypnotist that if he put her under and gave her a codeword that would automatically hypnotize her, then he could fuck her brains out, which he did, and then commanded her to forget what he did.\" She's not mentioning her own hypnosis, so I can't help but wonder if she also fell prey to this guy and was told to forget it as well.\n\nI ask Brittney, \"Have you used that hypnotism against her since then?\"\n\nBrittney flatly said, \"Sure, I've been using the codeword to make her believe anything any guy who wants to fuck her says. And I also gave her a fetish for painful bondage.\" Fuck me. All this time I had been patting myself on the back for being oh-so-fucking-clever with my oh-so-fucking-inventive-lies, but all along she'd already been programmed to believe whatever I told her. I'm not charming or clever or talented at bullshitting people, I just randomly came across someone would believe me no matter what I told her. And I was too fucking full of myself to see what was really happening.\n\nI sigh deeply and ask, \"What's the codeword?\"\n\n\"Dostoevsky-ish.\" Good lord, what the hell kind of codewords are these? Neitzsche? Dostoevsky? But when I thought about it a second, it does make a weird kind of sense. I mean, you'd want a codeword that no one would ever actually use in real life to avoid someone accidentally stumbling into hypnosis. And if you completely made up a word, you might forget it. So complicated last names with an extra syllable would solve both those problems.\n\n\"Alright, Brittney. Go back to bed and forget we had this conversation. Oh, and forget Tasha's codeword.\" I snapped my fingers and she lumbered into the back bedroom.\n\nI was still sitting in Brittney's apartment on the couch in the dark. I wanted to get up and go back downstairs, but I was too numb. This was all too much to take and I found myself struggling to breathe. The weight of this information felt like it was going to crush my ribcage. The fact is that I loved that Tasha wanted to fuck every night and was willing to do whatever I wanted. Her fetish for bondage was such a turn-on. And the only reason she was willing to do any of this with a schmuck like me is because she wasn't in her right mind. If this had happened a few weeks ago, I'd be slapping my hands together and gleefully rubbing them together like some cartoon world-dominating villain, grateful that I had complete control over a woman with huge tits and no brain.\n\nBut now. Now I have feelings for her. Now I see what a goddamn horrible person I am. I used to not give a shit about what a horrible person I was, but after being with Tasha, now I do give a shit. I want to be better than what I've been. I don't want to be that guy I was anymore. I don't want to be some selfish prick who thinks with his cock and doesn't give a shit about anyone else's feelings.\n\nI lean my head back against the soft pillows on the couch, and I stare at the hints of moonlight on the clouds slowly crawling across the nighttime sky outside. I hate the fact that I know what I have to do. I fucking hate it.\n\n...to be concluded"
    ],
    "authorname": "bobrobertson",
    "tags": [
        "bra",
        "lingerie",
        "breasts",
        "tits",
        "hypnosis",
        "bondage",
        "boobs"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-bra-salesman-ch-11"
}