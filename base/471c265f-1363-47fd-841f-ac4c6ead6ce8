{
    "title": "'Real' Fiction",
    "pages": [
        "(NOTE: This is probably only useful to new writers, such as myself, as more experienced writers have probably already figured this out.)\n\n* * * * *\n\nThe title may seem ridiculous, but adding an element of realism to your story could be a vast improvement. Yes, true life is boring sometimes, and erotic fiction is there for escapism, but a few touches of reality here and there couldn\u2019t hurt.\n\nA number of authors (including myself) are guilty of filling their stories with completely unbelievable tripe, creating unrealistic situations and characters to easily amuse the reader. This is the difference between a good erotic story and a plain old sex story.\n\nCertainly some story categories are meant to be unrealistic, such as the dream category and the non-human category. However small snippets of real life can be spliced into these over-the-top stories. Realism can more effectively engage your reader, as it provides a point of association and can make them feel that your characters could be someone they know.\n\nHere are some general tips and suggestions for adding realism:\n\n1. Not every guy is a well hung stud who can go on for hours. If you want to have your male characters be sexual dynamos, at least give them an average sized penis (there is a reason they use the word average) so that he is not a super-exceptional lover, just a good one. The percentage of stories that have guys with penises over 7\u201d could mislead some readers into thinking that they are inadequate. This links to point two.\n\n2. Not all girls are perfect 10\u2019s madly craving the aforementioned studs. Most women don\u2019t like large penises, as it feels quite uncomfortable. Bigger women could certainly have a desire for bigger penises, but that\u2019s a matter of proportion. Also, try to avoid making all your women perfect looking and for that matter, don\u2019t make them all the same. E.g. not all guys (or girls) like big-busted women. \n\n3. Despite hormonal issues, sex is not the only thing that people think about. Even if sexual tension is not alleviated by some sexual act, periods of arousal pass, and this can be inserted into your story to create suspense, or sexual tension/frustration. E.g. your characters could be getting heated up then they could be interrupted and have to postpone their engagement. \n\n4. If it helps, base some of your characters on yourself or people you know (with names changed of course) in order to have a \u201creal\u201d personality or even physical profile. If you wish to create a fantasy person, give them some minor flaws; e.g. a crooked nose, moles, slightly bad teeth, a disproportioned body; so that your reader can more readily associate with the characters.\n\n5. Aside from just making your characters more real, you could spend more time developing them and build up to a sexual encounter or have them dotted throughout the story. If your reader develops a rapport with character, s/he will enjoy their sexual encounters more.\n\n6. Things don\u2019t have to always work out perfectly in the end. Life isn\u2019t fair, so if you create scenarios in which your main character does not triumph, readers can, again, more readily associate with their own lives. A good example is the rape category, as men (or women) that are driven to rape ordinarily do so out of sexual frustration; maybe they asked a girl out, and she said no. It has realism and fantasy combined, as long as you remember that women (or men) don\u2019t usually enjoy being raped.\n\n7. Finally, where possible (and I know it\u2019s difficult) try to have an aftermath, try to continue your story beyond the sexual encounters. Write your stories as a series if it helps, so you can include more sexual encounters, and continue to develop your characters and not end everything with sex."
    ],
    "authorname": "TheWriter",
    "tags": [
        "writing tips",
        "realism",
        "natural"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/real-fiction"
}