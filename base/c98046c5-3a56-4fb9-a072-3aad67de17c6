{
    "title": "On a Slippery Slope Ch. 04",
    "pages": [
        "\"Are you sure we aren't lesbians?\" Angie asks with a smile as we linger in our bathrobes over Saturday morning coffee. \"Anyone one watching us last night would certainly get that impression.\"\n\n\"Are you ready to give up men?\"\n\n\"Hell no!\"\n\n\"Me neither, so we aren't lesbians,\" I declare and then change the subject. \"What would you like to do today?\"\n\n\"I want to watch the second video,\" she answers.\n\n\"Now?\" I ask, surprised at her answer, thinking we would save it for tonight.\n\n\"Why not now? I love morning sex. But let's shower first,\" she says, setting her coffee cup aside and taking my hand as she rises to her feet.\n\nWe spend a half hour gently soaping each other's bodies and taking liberties whenever opportunities present themselves. By the time we towel off, leaving our hair damp, we are both looking forward to the video and what is likely to happen during and after the show. Realizing that clothing is superfluous, we climb onto the sofa bed stark naked.\n\nWe hold hands while we begin watching the performance. Once again Angie is mesmerized by the scenes that unfold in front of her and she quickly becomes highly aroused. She seems particularly interested in the cat o' nine tails that my stalker is dragging up and down between my thighs as I lie draped over the arch. So I pause the video and remind myself that she doesn't yet know that two men are involved. I need to be careful until I'm ready to tell her the rest of the story.\n\n\"Is he going to whip you with that?\" she asks a little breathlessly.\n\n\"No, but if he had, I would have used the safe word the instant he hurt me. But all he did was brush the ropes across my body like he did in the first video. It certainly felt good; made my skin all tingly, just like the first time.\"\n\n\"If that happened to me, I'd want some pain. I love to be spanked, \"she says, surprising me. \"I've only had one boyfriend who would do it, but I had to get rid of him for other reasons. Go ahead and restart the video.\"\n\nI comply and before long the camera zooms in to focus perfectly on Brian's hand as he finger fucks me and thumbs my ass. My cries of pleasure are clearly audible even though my face is resting inside the arch. Angie slips her fingers into her pussy. I do the same, as aroused by what she is doing as I am by what I'm watching on the screen.\n\nI know that the twins trade places, but she is still in the dark. When Connor inserts the butt plug and then fucks me senseless, Angie and I cum together, covering our mouths to stifle the noises we're making. I pause the video again to let us rest.\n\n\"Oh my God!\" she breathes. \"How many times did you cum when he did that?\"\n\n\"I have no idea,\" I reply. \"I was in another dimension somewhere but then I couldn't take any more. Watch what happens next.\"\n\nThe video restarts and a few seconds later I use the safe word. Connor immediately withdraws his impressive condom-clad cock and removes the butt plug. The picture jumps to a shot of him carrying me into the other room and laying me gently on the bed. Angie reaches over to hold my hand once again as Connor finishes the encounter. When the video ends, she turns to face me.\n\n\"Your stalker is falling in love with you,\" she states with authority, \"or he is at least headed in that direction.\"\n\n\"Oh, I doubt that. He just enjoyed getting laid.\"\n\n\"Don't bet on it,\" she says, \"and by the way, who was operating the cameras?\"\n\n\"What?\" I ask, stalling for a little time. Not much gets past Angie.\n\n\"The camera zoomed in when your stalker started to finger fuck you,\" she answers with a slight frown on her face. \"Didn't you see it?\"\n\nOf course I saw it. I have watched the cameras zoom in and out on both videos and I know how it's done. I wasn't planning on telling her about the twins just yet, but now I don't have much choice.\n\n\"I have seen it, so I guess it's time for you to hear the rest of the story. It doesn't end with what you just saw.\"\n\nI spend the next fifteen minutes telling her of my efforts to identify the stalker and my success in doing so. I explain that the bondage house was rented and then tell her about my encounter with Mrs. Wilson and the resulting discovery.\n\n\"Brian?\" she screeches. \"Brian Devlin? I don't fucking believe it!\"\n\n\"On Wednesday he asked me out on a date for last night. I suggested we meet for a drink at Hot Spot after work instead. I confronted him with the copy of the check he wrote to Mrs. Wilson and he admitted putting malware on my computer, mailing the notes and stories, all of it.\"\n\n\"Obviously you didn't go out with him last night. Are you going to later on?\"\n\n\"Not exactly, there is more to the story.\"\n\n\"What more could there possibly be? You've already blown my mind.\"\n\n\"Brian has a twin brother. An identical twin brother. You've met him. His name is Conner.\"\n\n\"What? I don't know anybody named Connor.\"\n\nI spend a couple more minutes explaining that they own the computer company together and the twin thing they do with their shirts. I tell her that they are virtually interchangeable and they've each been in our offices many times, all under Brian's name.\n\n\"That's the craziest fucking thing I've ever heard of. And what the hell does Conner...oh...oh no,\" she exclaims as she puts one hand up to her mouth and the other on her chest.\n\n\"Oh yes. Both Brian and Connor are in the videos. When I showed Brian the check copy, I thought there was a chance we could have a real relationship if he were apologetic enough about tampering with my laptop. Instead, he pulled the rug out from under me with the twin thing.\"\n\n\"What did you do?\" she asked, a horrified look on her face.\n\n\"I asked him who did what to me, and he answered. Conner provided the oral sex and the finger fucking services in video number one and then went into the kitchen to operate the cameras and jerk off. It was Brian who fucked me at the end of that one. Video number two featured Brian doing the hand work and then Connor fucking me with the butt plug in place. And it was Connor who carried me into the other room after I used the safe word. Brian was operating the cameras and jerking off that time around. Connor is the one who appears to be making love to me at the end of video number two.\"\n\nAngie is completely stunned and starts to hyperventilate. I reach out to pat her on the arm. Finally, she gets control of her breathing.\n\n\"What happened next?\" she asks, her voice unsteady.\n\n\"I told him it was all over because Mrs. Wilson's place was no longer available. I also told him there would be no relationship between the two of us because I could never be certain which twin I was with.\"\n\n\"What did he say to that?\"\n\n\"He informed me that he and Conner were preparing a new place to enact bondage scenarios. I basically told him to fuck off. I was so pissed at him and his goddamn brother that I couldn't think clearly. Then just when I thought I couldn't handle any more surprises, he really floored me. He said that he and Conner would like to add a fourth person into the mix.\"\n\n\"Who?\"\n\n\"You.\"\n\nAngie was speechless for a long while, a shocked expression on her face as she fanned the air in front of her with both hands and started to hyperventilate again.\n\n\"I told him there was no way I was dragging my best friend into something like that,\" I continue. \"He asked me to think about it and suggested that you should be the one to decide whether or not you wish to get involved.\"\n\n\"I'm in,\" she announces.\n\n\"What?\"\n\n\"Count me in. Why on earth wouldn't I want to experience all those wonderful things they did to you?\"\n\n\"Don't you even want to think about it for a while?\" I ask, truly surprised at her hasty decision.\n\n\"I have been thinking about it. The whole time I was watching what they did to you, I was vowing that if I ever got a chance like that, I'd grab it. Are you going to get back in the game?\"\n\n\"I am. I thought about it after I cooled off and realized I was thrilled at the idea of a new bondage place. I made a trouble call on Thursday and ended up with Connor. Or at least he said it was Connor. I told him I wanted to play and that I'd talk to you about it. I didn't think you'd go for it and told him so.\"\n\n\"Well, I am going for it,\" she said with a broad smile. \"I want to be fucked like you were, and I don't care which one of the twins does it.\"\n\n\"You'll get them both, I can assure you. You just won't know which one is doing you.\"\n\n\"How do they decide who does what to whom?\" she asks.\n\n\"I think they flip a coin.\"\n\n\"Oh for Christ's sake!\" she exclaims, shaking her head in disbelief.\n\n\"They're full of surprises. By the way, you'll need a safe word.\"\n\n\"I've already chosen 'cannoli' as my safe word,\" She says, obviously pleased with herself.\n\n\"Cannoli?\" I repeat, laughing out loud.\n\n\"Sure. It's a word I won't forget and I've never heard it used during sex before. I don't know squat about boats. If I use your safe word, I'll forget just when I need it and start yelling 'ahoy, ahoy' or something equally ineffective. Cannoli will do just fine.\"\n\n\"Okay, okay,\" I say, still laughing. \"I'll get in touch with them on Monday and tell them you're in, if you'd like.\"\n\n\"We'll tell them together. When we get to work on Monday, get Brian, or whomever, to come over to the offices. We're going to tell him that we'll play only after we meet with both of them. The boss is in Phoenix all week at a conference so we can spend as long as we need to in the lunchroom.\"\n\n\"I don't have a problem with that, but why?\"\n\n\"Do you have any proof that there really is a twin?\" she asks. \"We already know that Brian is deceitful, with or without a twin brother. There is a possibility that there's no twin, that it is just Brian and there is someone else who operates the cameras, or maybe there's another explanation for the zoom control.\"\n\n\"I have no proof. I just took him at his word, which I guess is pretty foolish considering his track record. It never occurred to me that the twin business might be a lie.\"\n\n\"I'm a natural skeptic. Now let's get dressed. We have some planning to do,\" she says, taking charge.\n\nIt turns out that 'planning' consists of figuring out how to communicate Angie's bondage fantasies to the twins. There is no malware on her computer, or at least none that will allow Brian or Connor to snoop. Suddenly an idea occurs to me.\n\n\"I'll rename the 'Recipe' file on my computer as Carla's Fantasies and create a second file we'll call Angie's Fantasies. That'll be pretty hard for them to misunderstand. You comb through the stories on the site and put copies in your file. I've already told them I want back in the game, so they will be poking around in my laptop pretty soon. When they find your folder, they'll know what you want them to do to you.\"\n\n\"Perfect!\" Angie exclaims. \"I'd better get busy.\"\n\n\"Take your time. I have some stuff I can do around the apartment. You hunt down some stories and then we'll go out for a nice lunch.\"\n\nAn hour later, Angie has copied half a dozen stories into her file and aroused herself to the point where she either needs to stop reading or dig out one of her vibrators. Exercising great self-control, she prints out her three favorites and hands them to me.\n\n\"Read these,\" she orders, \"and tell me what you think.\"\n\nI think her bondage fantasies are a little edgier than mine, relying more heavily on spankings and whippings. But she likes restraints, anal experimentation, and quirky fucking machines just like those in my stories. I find all three stories very arousing, so we are soon naked again and taking care of each other with various implements from our supply of sex toys.\n\n\"Oh fuck that was good,\" I declare when we finish. \"Thank you.\"\n\n\"And thank you, but we need to stop this or we'll be too sore to do anything tonight. Let's get dressed again and get out of here. All of a sudden I'm starving.\"\n\n\"Me too. There's nothing more we can do until the new folders in the laptop catch their attention. We just have to sit back and wait.\"\n\nAngie and I have a great lunch and then go shopping. She is concerned that she has nothing to compare with the dress I wore to my two bondage sessions. By late afternoon she has purchased two items that satisfy her sense of style. She is dazzlingly beautiful in both and each ensures that the twins will have easy access to her body. \n\nDinner is a nice affair with candles and soft music. After coffee and brandy, we decide to deploy the sleep sofa and watch the videos again. The scenes have the expected effect and we end up back in my bedroom.\n\nA half hour or so later I am sitting with my back against the brass headboard, each outstretched wrist lashed to a bar with one of my scarves. My knees are drawn back with my legs widely splayed. Angie is sitting cross legged in front of me working a dildo in and out of my pussy and putting the finishing touches on my clit with one of her little vibrators. I cum for the second or third time with a shriek, my breasts heaving and my legs shaking as my pussy rhythmically clenches the dildo.\n\n\"Oh God! Enough,\" I cry, certain that I can't handle any more stimulation tonight.\n\n\"I'm not quite finished for the night. Will you do me a favor?\" she asks softly as she unties my hands.\n\n\"Of course, honey. What would you like me to do?\"\n\n\"Straighten out your legs,\" she tells me. I am puzzled but I do as she asks. When I have complied, she positions her body so she is lying across my lap.\n\n\"Spank me,\" she says softly.\n\n\"Oh Angie, are you sure? I don't want to hurt you.\"\n\n\"I'm sure. I'll let you know how hard I want it.\"\n\nI take a deep breath and slap her fanny a few times, but not very hard.\n\n\"Harder,\" she commands. \"And don't stop.\" I do as she asks, my palm striking her flesh with more force.\n\n\"Harder,\" she orders. \"Faster.\" Once again I do her bidding. Even in the muted light of the bedroom I can see that her skin is turning a bright pink. I back off. I don't want to hurt her.\n\n\"Don't stop! Don't stop! I'm gonna cum!\" she cries, grinding her pubic mound into my thigh. I return to the level I was using before. Just as my hand begins to ache, Angie has a crushing orgasm, screaming her release into the bed clothing.\n\nShe stays where she is for a long time while I gently caress her reddened little butt. Finally she rises to her knees, kisses me, and then snuggles by my side.\n\n\"Oh, thank you, thank you. I didn't know that was possible. I've always liked it but had no idea I could actually cum during a spanking.\"\n\nBefore I can think of what to say, she slips a hand in between my thighs and I lose my ability to concentrate. Apparently I can handle more stimulation after all. It is well after midnight when we fall asleep holding hands, completely exhausted.\n\nDinner at my parent's house is very nice. My brother and his family are there, as is one of Angie's Episcopalian priest brothers with his wife and two kids. My father is in rare form, telling one corny joke after another. Mom is thrilled to have such a large gathering.\n\nAs we eat, I study my family. I love them dearly and I know they love me, but I take perverse satisfaction in knowing they have no idea what I have become. I am a pussy-licking bondage slut, an evolving pussy-licking bondage slut who is more than happy to allow some stranger to tie me up and fuck me. And I am dragging my de facto sister down the slippery slope with me. I start to get wet sitting at their dinner table when I think of the future. I have to force myself to think about something else. I glance over at Angie and receive a little Mona Lisa smile that tells me she has just read my mind.\n\n****\n\nAngie and I arrive at work a few minutes early and I place a trouble call. I explain to her that the twins have two cousins who work for them. Cousins are not what we want.\n\nA few minutes later, one of the twins arrives and we beckon him into the lunchroom.\n\n\"Grab a cup of coffee and have a seat,\" I tell him and point to the table. \"Which one are you?\"\n\n\"Brian,\" he says, as he fills a cup and sits down. We do the same.\n\n\"Let me see your driver's license,\" Angie demands. She has come up with something that never crossed my mind. Suddenly I am hopeful that we are really seeing Connor. That would clear up a lot in a hurry. It seems highly unlikely that they would swap licenses like they do shirts.\n\nBrian grins, pulls out his wallet, removes his license, and slides it across the table to Angie who studies it like it's the Magna Charta before she hands it over to me.\n\n\"Okay, here's the deal,\" Angie begins. \"I understand Carla has already told you she wants back in the game. I want in too...\"\n\n\"Great!\" he interrupts, obviously thrilled at the prospect of fucking the gorgeous little Italian bombshell.\n\n\"...but we have some stipulations.\"\n\nBrian looks slightly less enthusiastic for a moment but recovers soon enough.\n\n\"Okay, what are they?\"\n\n'First of all, we want to meet with you and Connor together. Tonight.\"\n\n\"That can be arranged,\" he agrees immediately. \"What else?\" I am relieved. If Connor doesn't exist, Brian would hardly be so agreeable.\n\n\"We want proof that you both have been tested recently for HIV and other STDs.\"\n\n\"We use condoms, so why do you care?\"\n\n\"Condoms break occasionally,\" she responds with a steady stare.\n\n\"Well, it's not a problem. We are tested regularly by the National Guard. Our most recent test was about a month ago and neither of us has been with anyone other than Carla for a long, long time. We can get copies of the test results. Will that do?\"\n\n\"Yes,\" I reply, finally joining the conversation. \"We will have ourselves tested after work today. Both of us know we are okay, but it's only fair that we be able to prove it to you. Afterward, we can discuss whether or not to continue condom use.\"\n\nI am shocked at myself, nonchalantly discussing condoms and STDs in the lunchroom as though we are conducting a sex education class. I feel myself starting to blush.\n\n\"Okay. Now about tonight,\" Brian says, \"Connor and I own a home together. Carla has the address from the check I wrote. Please come at seven o'clock. We won't have time to prepare a proper meal, so we'll pick up something nice from the deli.\"\n\n\"You told me last week that you and Connor share everything. Do you sleep in the same bed?\" I ask, unable to resist yanking his chain a little.\n\n\"Of course not. We each have our own bedrooms with private baths, individual razors, and personal toothbrushes,\" he answers good-naturedly. \"Anything else you'd like to know?\"\n\n\"Nope. Angie?\"\n\n\"That'll do for now,\" she answers. \"We'll see you at seven. Can we bring anything?\"\n\n\"Just yourselves, and dress appropriately,\" he says with a wink and a grin in my direction.\n\nBrian departs but Angie and I linger over our coffee.\n\n\"Good call on the driver's license,\" I tell her.\n\n\"Ditto on having ourselves tested. I haven't done that since I dumped the shithead who used to spank me. Turned out he was unable to keep his dick in his pants when we weren't together.\"\n\n\"I haven't been tested recently either. There's a clinic a couple of blocks away that does the tests. It takes about fifteen minutes and we'll have the results before the end of the week.\"\n\n\"Good. Where do these guys live?\" she asks.\n\n\"I did a drive-by when I got the copy of that check. They live in a nice neighborhood a few miles north of my apartment. It'll be more convenient for you if you drop by my place about six forty five. I'll drive us over.\"\n\n\"That'll work. Now, let me change subjects. I picked up on the 'dress appropriately' comment. Do you think they will try anything tonight?\"\n\n\"I doubt it. As cool as Brian appeared, I know we caught him by surprise. I think they'll play everything straight. After all, the last thing they want is for us to change our minds. But just in case, I'm dressing conservatively.\"",
        "\"Good,\" she replies, \"I'll do the same. Lunch today?\"\n\n\"Sure, if you're buying,\" I say with a grin.\n\n\"After the weekend you just treated me to, I'm more than happy to pick up the tab.\"\n\nLunch is nice. It is cool enough to dine outside at our favorite local eatery. The rest of the day goes quickly. I get hung up for a few minutes after the workday so I get to the clinic just as Angie is leaving. She spots me, grabs her arm, and grimaces in mock pain.\n\n\"Oh God that hurt!\" she cries, knowing I am a big baby about needles. I give her a raspberry and enter the building.\n\n****\n\nAngie arrives right on time. We take a couple of minutes to critique each other's clothing and agree that we did it just right. No cleavage showing and no leg visible above the knees. We both are wearing heels, but they are the type we wear to work. After pronouncing each other fit to proceed, we hop in my car and head for the address I still have stored in my GPS from the drive-by.\n\n\"If they live in a man cave with dirty bathrooms I'm leaving,\" Angie announces, making me laugh out loud.\n\nWhen we pull up in front of the house there are two identical Camaros in the driveway. I park at the curb and we exit the car. Before we can get to the porch, the door opens and one of the twins appears.\n\n\"Hi ladies. Welcome. Please come in,\" he says and gestures with a flourish.\n\nAngie and I step into a large, beautifully finished greatroom, complete with a pair of very handsome twins, casually dressed and grinning from ear to ear.\n\n\"I'm Connor,\" one of them says as he steps forward. \"Brian told me about the driver's license thing this morning. Here's mine.\"\n\n\"That doesn't prove shit,\" Angie says. \"You could have swapped licenses.\"\n\nBut his gesture breaks the ice. We all have a good laugh and then they offer us a tour. The house is a lot cleaner than my apartment and much more tastefully furnished and accessorized. The twins obviously have style. Their bedrooms are masculine but very different from one another. All the bathrooms pass Angie's not-so-subtle inspection. We end up in a gourmet kitchen and Connor, I think, offers to bartend.\n\n\"We drank cosmopolitans all weekend. I think I'd like a martini,\" I say.\n\n\"Me too,\" says Angie.\n\n\"Martinis coming up,\" Brian replies, \"We'll make a pitcher. Why don't you both have a seat at the breakfast bar and talk to us while we prepare the libations.\"\n\n\"Your house is really very nice, particularly for a couple of bachelors,\" Angie announces.\n\n\"The furnishings belonged to our parents, and the cleanliness is the work of Rosa, our housekeeper,\" says Brian. \"Without her, things would be a lot messier. We aren't slobs, but we aren't fond of housework either.\"\n\n\"Do you fuck Rosa too?\" Angie asks with a wicked smile, causing both men to choke on their drinks. I think it is Connor who recovers first.\n\n\"Lord no! She was our parent's housekeeper before they were killed in an accident a few years back and she decided to stay employed with us. She's a grandmother and she holds black belts in at least two martial arts disciplines. We're both scared shitless of her.\"\n\n\"I'm sorry to hear about your parents,\" I say, thinking of my lie to Mrs. Wilson. \"The same thing happened to Angie's folks when she was in the sixth grade. Her oldest brother raised her.\"\n\n\"And look what a good job he did,\" she quips, smiling radiantly at the twins, \"with a lot of help from Carla's parents.\"\n\nThe rest of the evening goes very well. The deli fare is excellent and we talk about everything but what is on all our minds. Finally, I decide to nudge the conversation where I think it needs to go.\n\n\"We've been avoiding this topic all evening,\" I begin, \"so we have a few things that need to be discussed. But before we get started, I have a question for Brian.\"\n\n\"Shoot,\" he says.\n\n\"You asked me out last week and told me that you have been attracted to me for a long time. What took you so long and why did you choose to do it then? I thought it was because Mrs. Wilson's place was no longer available so the game was over, but apparently you and Connor were already working on another place.\"\n\n\"It's true. I have been attracted to you and to Angie as well. So has Connor...\"\n\n\"Then why didn't you morons just ask us out?\" Angie interrupts.\n\n\"...and we were within a day or two of asking you both out,\" Conner resumes, \"when your laptop failed. Brian's attention got diverted and he pulled the malware stunt. Suddenly the whole thing started to get a life of its own.\"\n\n\"So why the timing last week?\" I ask.\n\n\"A lot of reasons. Connor and I both wanted to spend more time with you, we wanted you to know that we were setting up a new place, and we were hoping to find a way to get Angie involved.\"\n\n\"And here I am,\" announced Angie with a serious look on her face. \"So now what?\"\n\n\"I...uh...I...\" Connor stammers.\n\nUncharacteristically, I decide to take charge.\n\n\"I set all this in motion when I put those stories on my computer. Brian saw an opportunity and took it. I enjoyed myself immensely and I'm certain you guys did too. I want you to know that you unleashed something from deep inside me that I did not know existed. I was pissed off when I found out I had been tricked by twins, but now I am pleased. I am even more pleased that Angie wants to be involved. After I showed her the videos, something happened between us that unlocked another door. What happened is none of your business, but we are both grateful. Brian told me last week that you guys are about a month away from having the new place ready to go. Is that still a good estimate?\"\n\n\"Probably less. We both have been moonlighting at the computer store, under the 'Brian' name, because we like the work and nothing much else was going on in our lives. Since it appears that is changing, I gave notice last week. By next weekend we will be devoting all our spare time to the new place. I am Brian, by the way, in case you've lost track,\" he finishes with a smile.\n\n\"I thought you needed the money to support expensive hobbies,\" I said, remembering our first conversation at the computer store.\n\n\"Our folks left us very well off when they died. We were just working there to fill the time.\"\n\n\"How would you ladies like to handle this from here on,\" Connor asks, apparently regaining his composure and trying to maneuver the discussion back on track.\n\n\"Angie only knows what I've told her and shown her on the videos. I think, for the time being at least, that we should continue as though nothing has changed since my last encounter with you guys, but with a few exceptions.\"\n\n\"And they are?\" asks Brian.\n\n\"Angie and I arrive at the new place together every time. We don't want to participate together, at least not yet, but we arrive and leave together. I'd prefer that you continue to communicate by note card, disguise your voices, and continue the charade just as before, including your departure before ours when it's all over for the evening. I found all that mysterious and sexy. I also want to dispense with the hood. I like the mask because being unable to see you adds a great deal to my pleasure, but the hood sucks.\"\n\n\"Me too,\" Angie announces. \"I loved what I saw on the videos but I was a little put off by the hood.\"\n\n\"Agreed,\" Brian and Connor say in unison. \"To everything.\"\n\n\"And one more thing,\" I continue. \"When was the last time you snooped through my computer?\"\n\n\"Last night,\" Brian replies, \"And yes, we saw the new folders. We also know about the website.\"\n\nAngie involuntarily grins and clasps her hands together, secure in the knowledge that the twins now know what sort of bondage experience she is looking for.\n\n\"Anything else,\" asks Connor.\n\n\"One last thing,\" I respond. \"I'm tired of the twin shtick except when we're doing the bondage stuff. Neither of us cares which one of you is doing us during sex. But otherwise, no more tricks. We don't mind that only 'Brian' works on our office computers, but don't lie to us again about which twin we're talking to.\"\n\n\"Okay. I'm Connor. When I say I'm Connor, you can take it to the bank.\"\n\n\"Ditto for ole Brian here,\" says Brian. \"Now, is there anything else bothering you?\"\n\nWhen Angie and I both shake our heads, he offers us a nightcap. We conclude the evening with Irish coffee and then excuse ourselves. Just as we are ready to depart, Brian, or maybe Connor gives me two CDs. I stare at them blankly and then realize what they are.\n\n\"You assured me that I have the only copies!\" I spit out sharply.\n\n\"You do have the only copies,\" he says. These are the originals which show our faces. Now you have everything.\"\n\nMy anger slips away quickly. \"Would you like to make copies for yourselves? I don't mind.\"\n\n\"Only with your permission,\" he says. I hand the videos back to him.\n\n\"Make your copies and get those back to me later,\" I tell him with a smile.\n\nThe twins walk us to my car because it's now dark outside. Chivalry is not dead. On impulse, I kiss each of them on the cheek and Angie follows suit.\n\n\"You'll be hearing from us,\" one of the twins calls out as we pull away from the curb.\n\n****\n\nNow we wait.\n\nOn Thursday we get our test results, all negative as expected, and mail copies to the twins the next morning.\n\nThere is a letter in my box the following Monday that displays my name and address in the familiar block printing. It is not the high quality buff colored stationary I am hoping for. Inside are copies of the twin's test results from a month earlier. All are negative. Angie calls to tell me she has received the same information. We gleefully decide to tell the twins they can ditch the condoms when we show up at the new place for the first time.\n\nAngie and I get together each of the next two weekends for sex. We are becoming increasingly inventive. At her suggestion, we order a butt plug, a strap-on dildo, some handcuffs, and a cat o' nine tails through the internet. We vow not to use them until after we see what the twins have planned for our first encounter at the new location; as long as they don't take too long getting us to that point.\n\nOn Tuesday of the third week, I run into Brian or Connor in the hallway. Angie is nowhere in sight.\n\n\"Listen to me,\" I say, \"I'm going to do this only once. It will never happen again. I am interceding on Angie's behalf. I want her first experience to be perfect. I don't know what you guys have planned for her, but I think she will be disappointed if she isn't spanked or whipped with the cat during her first visit. She will let you know how hard she wants it if you start out gently. And for the record, if you are planning anything like that for me and you hurt me, I'll scream my safe word loud enough to wake the dead.\"\n\n\"I get the picture,\" he says, smiling. \"Thanks for the tip, and we never had this conversation.\"\n\n\"We certainly did have the part about hurting me,\" I reply poking him in the stomach with my index finger. He is still chuckling as he goes down the hallway.\n\nOn Friday evening of the third week, I find a padded envelope in my mailbox and rip it open before I even go inside. Two DVDs and a small buff colored card are inside. I know the DVDs are the originals from my first two encounters.\n\n\"Be at the address below at exactly seven tomorrow night. You know what to wear. Bring your friend. When you arrive, the door will be unlocked. Open the door, stop just inside, and lock the door behind you. Remember your safe word. Do not masturbate tonight,\" is printed on the card in the familiar block lettering.\n\nMy hands are shaking so hard I have trouble reading the address. I don't know the exact location of the place, but I am familiar with the area. It is not within walking distance and it's far enough away from my apartment and Angie's that we won't have to worry about parking a car nearby.\n\nMy cell phone chirps and I see that the call is from Angie.\n\n\"I got a note!\" she yells, forcing me to pull the phone away from my ear.\n\n\"Calm down and read it to me,\" I tell her. After a few moments she settles down and reads the note out loud. It's basically the same as mine except hers says 'dress appropriately.'\n\n\"Okay, try to stay calm. I'll help you get prepared tomorrow and we can talk about everything. I know exactly what to do. Everything will be just fine. Get some sleep and I'll see you tomorrow.\"\n\n\"Okay, but I am so excited I don't think I can sleep.\"\n\n\"Would you like me to come over? I can bring my stuff and we can leave from your place tomorrow night.\"\n\n\"Oh yes! Please!\"\n\n\"I'll be there in a little while.\"\n\nI gather casual clothing for tomorrow during the day; my bondage outfit, make up, a little nightie, and my favorite toys. I already keep basic grooming items at her apartment.\n\nA beaming Angie meets me at the door waving her note.\n\n\"I am so excited!\" she exclaims, literally bouncing up and down. \"Help me figure out what to wear.\"\n\n\"Let's order a pizza or something first. I'm starving.\"\n\n\"Pizza! Pizza? Are you crazy? I'll gain two pounds over night! I'll make us a nice salad instead.\"\n\n\"Okay, okay, but do you have anything worth drinking in the house other than tap water?\" I ask, knowing full well that she always has a nice selection of red and white wines.\n\n\"I guess I can find something if I root around under the sink,\" she replies with a grin.\n\nWe have dinner with more than a little wine, and then get down to the business of her outfit for tomorrow night.\n\n\"I think it's pretty simple,\" I tell her. You saw what I was wearing when I started my little strip tease at the beginning of the first video. I heard nothing from The Voice, so I have to assume the twins enjoyed the show and liked what they were seeing. I recommend that you do the same thing; slowly give them a good look at what they are going to fuck a little while later.\"\n\n\"You were very, very sexy when you were stripping,\" she says. \"I'm not sure I can do as well.\"\n\n\"You'll do just fine. With your body, you'll have them drooling before your bra comes off. Do you have a bra what hooks in the front?\"\n\n\"Of course. Doesn't everybody?\"\n\n\"Probably. Let's see yours.\"\n\nAngie pulls three of them out of her underwear drawer along with four or five pair of panties. I sort through them and select a red bra and a pair of delicate lacy panties to match.\n\n\"Put these on,\" I tell her. Moments later she pulls the panties into position and clasps the bra around her perfect breasts.\n\n\"Now let's choose a dress for you. Where are the two you bought a couple of weeks ago?\"\n\nShe brings them both out. Either one will work nicely, but I encourage her to select the red sleeveless one that buttons up the front like my dress. Hers is tartier than mine, showing her shoulders, much more cleavage, and leaving most of her splendid legs exposed.\n\n\"Why that one?\" she asks.\n\n\"Because it's perfect for a strip tease. The other one zips up the front. It's a little harder to prolong things with a zipper. This little number has only eight buttons, but you can drag things out by undoing them slowly. Now let's take a look at your shoes.\"\n\nAngie has about as many pair in her closet as I have in mine. I know what I'm looking for. She has always dressed a little more provocatively than I, so I'm looking for something with a come-fuck-me flavor in red. She has four or five pair of red heels but I spot what I'm looking for immediately. They are very similar to the ones I have worn to both my bondage sessions except they have one additional strap that encircles her ankle.\n\n\"These are perfect,\" I announce. \"You can make a production out of undoing that strap.\"\n\n\"I'll look like Little Red Riding Hood\" she counters with a giggle.\n\n\"You'll look like a very beautiful, very sexy young woman who can't wait to be blindfolded, tied up, and fucked half to death. Now put everything on so we can check you out.\"\n\nA couple of minutes later, she is standing in front of her full-length mirror with me behind her. She is perfect. I fluff up her hair a little and then run my hands down her hips to straighten the hem of a dress that barely conceals her panties.\n\n\"One of the twins is really in for a treat tomorrow night,\" I tell her as I turn her around.\n\n\"Do you think that's what they'll do, just divvy us up?\"\n\n\"Probably. When it was just me, they were able to trade places quickly without me having a clue there were two of them. I have no idea what the new place will be like, but I'm betting they'll draw our names out of a hat, or flip a coin, or some other dumbass thing and then stick with the outcome for the night. Next time, they'll swap.\"\n\n\"What makes you think so?\"\n\n\"Both of them have fucked me. Unless they both get to fuck you tomorrow night, one of them will have to wait until next time. Whoever he is will be so anxious to be with you that he won't allow another element of chance.\"\n\n\"We'll never know who is doing us, will we?\"\n\n\"That's pretty much the point, don't you think?\"\n\n\"Oh yeah,\" she says with a wide grin. \"Oh yeah.\"\n\nTen minutes later we are in the shower, gently lathering every inch of each other's bodies. By the time we dry off, we are pretty revved up. I put on the little nightie I brought while Angie dons a sexy little thing of her own.\n\n\"The note says we aren't supposed to masturbate,\" she reminds me with a small smile.\n\n\"I have no intention of allowing you to,\" I counter with a grin. \"But they will ask us tomorrow night and we'll tell them we did. I lied to them the first two times, but I think they want us to disobey them. They've read your favorite stories and they know you want to be spanked. Disobeying them will probably help your cause.\"\n\n\"Oh Carla, you are so devious,\" she says as she moves into my arms. We spend the next hour or so making it unnecessary for either of us to masturbate and then fall into a deep sleep.\n\nWe sleep late the following morning, not stirring until a little after nine. We have a light breakfast and try to stay busy. I am a little nervous, but Angie is a basket case. I am glad to be with her. I had to endure the day of my first bondage encounter by myself and it was a lonely, frightening experience. I can't keep her from being nervous, but I can provide support.\n\nI am able to distract her a bit by running a few errands and sitting down to a light lunch. I explain to her that we won't have dinner before meeting the twins but we will be famished afterward. We go shopping for a while, stopping by a drug store for the little pre-mixed saline enema kits they sell. We know from my experience that they are likely do something anal, even on Angie's first night.\n\nWe start our preparations at four o'clock with the enemas and take showers. We'll shower again at six o'clock, shaving our legs and underarms and touching up what little pubic hair we have left. Angie gets more nervous by the minute. I hold her and reassure her that she is in for the night of her life.\n\nWe shower on schedule and do our hair. It is time to get dressed. We each take a turn in front of her mirror and inspect each other carefully. We are ready.\n\nI drive. Angie is far too anxious to control a car. My GPS tells me it'll take us twelve minutes to cover the five miles to our new bondage venue. We pull away from the curb at six forty five.\n\n\"You saw my videos. I think we can expect everything to be similar when we arrive. The Voice will give us our instructions. Because this is your first time, you will get the little lecture about being there of your own free will,\" I tell her.\n\n\"What do you think the layout will be?\" Angie asks.\n\n\"I don't know, but they probably looked for a place like Mrs. Wilson's where there were separate rooms. My guess is that they prepared a room for each of us which means they'll separate us soon after we arrive. We won't see each other again until it's all over and they have departed. They will release our restraints before they go, or at least enough of them so we can finish the job. And remember, my first session was just slightly more than an hour and the second slightly less.\"",
        "We pull up in front of a small building that is not a house. It might have been a retail establishment at one time. Now it appears to be empty as it sits in the small lot. I can't see any lights inside. I park in front of the building, give Angie's hand a squeeze, and we approach the doorway.\n\nWe enter as instructed and find ourselves in an entryway with a long hall ahead of us. There is a door at the far end. The building is much larger than it appears from outside. Spotless linoleum covers the floors. The hallway is lined on both sides with doorways that apparently lead into separate rooms. I count six of them. Everything is painted white.\n\n\"Welcome ladies,\" says The Voice, startling both of us. \"Thank you for being here tonight. We will begin soon.\"\n\nAs expected, The Voice goes through the little 'free will' bit for Angie's sake and then continues.\n\n\"Did either of you masturbate last night?\"\n\n\"Yes,\" Angie promptly says in a firm voice. I echo her reply.\n\n\"We don't have to do what you tell us all the time,\" I continue argumentatively.\n\n\"Ah but you do, ladies. You will both be severely punished tonight for your disobedience,\" says The Voice, causing Angie to shoot me a little smile. Our little ploy just might work in her favor.\n\n\"Do you have any questions?\" he asks.\n\n\"No,\" we reply in unison.\n\n\"Any requirements?\"\n\n\"Just one,\" I reply, \"Skip the condoms.\" Out of the corner of my eye I see Angie nodding her head in agreement.\n\n\"Then it is time for us to proceed. Carla, enter the first room on your left and shut the door behind you. Angie, you take the room to the right and close the door. You will be given further instructions when you are inside.\"\n\nAngie and I join hands for just a second, give each other a quick hug, and enter our respective rooms.\n\nMy room is painted white with the same hallway linoleum on the floors. There are two windows but they have been painted over with the same white as the walls. The cameras and speakers are where I expect to find them but they appear to be permanently mounted. Several recessed lights are in the ceiling and pencil spots are mounted in various locations around the room. \n\nMy twin changes the lighting in the room from some remote location. When he finishes, the only remaining light is a recessed unit in the ceiling that is illuminating the very center if the room. Two devices and a small table are featured there. One is the padded arch they strapped me into the last time. I can see that it has been slightly modified. A short plastic or rubber cylinder, perhaps an inch long and rounded at the end, protrudes from the arch above the depressions for my knees, exactly where my clit will be when I am on the arch. A thrill runs through my body at the thought of what that might mean for me tonight.\n\nThe second device appears to be a fifty-five gallon oil drum attached horizontally to a very tall pedestal with a heavy base. A three-step ladder is in position to one side. An English riding saddle sits atop the drum with stirrups hanging down. The saddle has been modified; there is a dildo sticking up out of a hole in the center, exactly where my pussy will be. I shiver a little in anticipation as I move closer to examine the device. Directly in front of the dildo there is a hump in the leather, presumably there to stimulate my clitoris when I sit in the saddle.\n\nThe small table nearby contains basically the same items it did the last time except for a new device that resembles a TV remote. There is a tube of lubricant, the cat o' nine tails, the mask from my original encounter, and my butt plug. The hood is gone. My knees nearly buckle with excitement.\n\nI pick up the remote and press a button. I hear a noise behind me and turn to find a camera in the corner extending its lens. This is how the twins will control the zoom function now that they'll both be concurrently occupied. My last lingering doubt fades away. There will be no third party operating the cameras.\n\nI am ready to get started so I begin to undo the buttons near my neckline.\n\n\"Stop,\" The Voice commands after a couple of the buttons are released. \"Leave the dress alone but take off your shoes.\" I comply.\n\n\"Now mount the horse.\"\n\nI am ready. I have been getting wet since I entered the room, but the dildo is quite large so I apply a good coating of lubricant to the long thick phallus. I can see some sort of mechanism down inside the drum. I am about to climb aboard a fucking machine.\n\nI go up the steps, put one bare foot in a stirrup, and swing my leg over the top of the saddle to take possession of the stirrup on the other side. I am now standing in the stirrups directly above the dildo. I raise the hem of my dress and slowly lower myself into position, impaling myself on the large cock. I wiggle my ass a little to get more comfortable and discover that my clit is resting nicely against the little hump in the leather.\n\n\"Put on the mask.\"\n\nI do as I'm told but I wonder how I'll be restrained. I have total control; my hands are free and I can rise up in the stirrups whenever I wish.\n\nI hear the door open. My twin's presence is confirmed when he cuffs my wrists behind my back. Seconds later, the stirrups disappear and everything becomes clear to me. I am confined to the saddle by my own body weight and my hands are now of no use. I hear him slide the ladder out of the way. The horse is far too high in the air for me to roll off the saddle if I wish to escape. I am not going anywhere, so I sit there with my legs dangling, waiting for what I know will happen next.\n\nI vaguely hear a mechanical sound and the dildo begins to move. My twin keeps the machine moving at a slow pace for a couple of minutes. It feels wonderful. I begin to squirm a little, rubbing my clit against the little hump as the thick cock moves in and out of my pussy. He notices what I am doing and increases the thrusting speed. I cry out in response so he adds a little more speed.\n\n\"Oh God!\" I cry as the delicious sensation of an impending orgasm begins to form deep inside me. \"Faster!\"\n\nHe honors my request and the machine's pace picks up sharply, soon fucking me at an astonishing pace that no human male can match. I am grateful for the extra lubricant. I lubricate heavily during sex, but I am no match for this thing without a little help.\n\nI scream something unintelligible as I race toward what will be a shattering orgasm and my twin adds another increment of speed to the fucking machine. I rock my hips frantically to take advantage of the little hump. I am on fire. I go over the edge with a piercing wail, and the machine mercifully slows to a gentle pace. My breathing consists of irregular sobs and hiccups.\n\nBut the machine doesn't stop entirely. As I regain my senses, I realize I am about to go another round. I briefly think about using the safe word, but hold off as the machine slowly begins to increase speed once again and I feel my body responding. Within a few minutes I am being fucked at the same energetic pace that resulted in my first orgasm. A minute or two later I am flung over the top once again, my pussy rhythmically clenching the shaft of the wildly thrusting dildo.\n\nAnd then we start all over again. As usual, I lose count of the orgasms.\n\nI think I briefly lose consciousness. The next thing I am aware of is that the machine has stopped, my handcuffs are gone, and my twin's hands are grasping my waist as he lifts me up off the horse to set my feet on the floor. I sag against him, my legs unable to support my weight. I wrap my arms around his waist and lay my cheek against his chest. It feels good to be held.\n\nAs I recover, I realize the rooms are not totally soundproof. I can faintly hear Angie crying out repeatedly across the hall, obviously responding to something very pleasurable that her twin is doing to her.\n\nWhen I recover enough to stand on my own, my twin guides me over to the arch. I reach out with one hand and recognize the depression for my breasts. I am now oriented. I know what to do, so he releases his hold on me.\n\nI pull my dress up out of the way in front and take my position across the arch. He quickly cuffs my wrists near the handles and straps my legs into position. The new little nub is precisely positioned against my clit. He lifts the hem of my dress and drapes it across the small of my back. I am thrilled to be here. I believe the butt plug will be next. I am wrong.\n\nThe cat o' nine tails lashes softly against my butt. I realize I am being 'punished' for disobeying orders, so I raise my face out of the arch and let out a low moan to let him know I approve of my punishment. So far.\n\nThe next blow is harder. It doesn't actually hurt, but it stings a little. I am prepared to use the safe word the instant he crosses the line. My twin gradually increases the strength of the blows to a point just below the threshold of real pain. I discover that I like what he is doing and begin to moan and wiggle my ass appreciatively. I decide to look for opportunities to be disobedient in the future.\n\nMy whipping goes on for a couple of minutes, although he stops from time to time to run the silken cords over my pussy. I begin to whimper a little. He adds a little more force and I feel a more intense sting from the blows. I decide not to use the safe word unless he goes one step further. He does not, somehow sensing that he has reached my limit. Suddenly the little nub comes alive and starts to buzz my clit. I cum within seconds, screaming with pleasure into the body of the arch. The vibration and the lashing stop. Regrettably, my punishment is at an end. \n\nHe allows me to rest for a minute or two and then I feel him start to insert the butt plug. I am thrilled because he is going to fuck me soon. Knowing what to expect this time around, I relax and feel very little discomfort as the thickest part of the plug enters my rectum. \n\nIn the background, I hear a long muted wail. Angie is cumming, certainly not for the first time.\n\nMy twin moves the tip of his cock up and down my slit, probing for the entrance to my pussy. He finds it soon enough and slowly eases himself inside me. I am deliriously happy because I know what will happen the instant he begins to move. The little nub next to my clit begins to vibrate softly and I know that I am about to experience a new facet of the butt plug-cock routine.\n\nHe starts slowly at first and very gradually picks up speed. I sense that he is highly aroused and may not last long if he moves too quickly.\n\nHe lasts long enough. As before, I enter some sort of continuous orgasmic state as the moving plug matches the tempo he establishes with his cock and the little vibrator does its job. My sensitive nipples are brushing against the padding inside the depression where my breasts are suspended. Very soon I am screaming into the middle of the arch, cumming over and over again.\n\nJust as my mouth starts to form the safe word, my stalker lets out a primitive bellow and I feel his contractions begin. I bite off the word just as he finishes.\n\nI feel him gently lay his torso over my back. He supports most of his weight on his forearms but the closeness feels good to me. Both of our bodies continue to tremble with the aftershocks of our combined orgasms.\n\nA muffled shriek from across the hall tells me that Angie is cumming again.\n\nSeveral minutes later he withdraws his cock from my pussy, removes the butt plug, and releases my restraints. I remain still, giving him ample time to disappear. When I hear the door open and close, I remove my mask but keep my eyes shut for a minute or two longer. The door across the hall opens and then closes.\n\nAfter a minute or two I hear a different door open and close far down the hall. The twins are leaving. I get off the arch but stand beside it, steadying myself with my hands. When I know I can stand unaided, I look about the room. A towel has been placed on the table next to the cat and the other items. Cum is oozing down the insides of my legs, so I use the towel to clean myself up and then decide to go check on Angie.\n\nI find her leaning against the wall outside of her room. Her door is ajar. She is naked and barefoot. There is a dazed expression on her face. Cum is slowly running down her inner thighs. I retrieve the towel from my room and crouch down in front of her.\n\n\"Open your legs, sweetie,\" I tell her. She complies and I clean her up as best I can.\n\n\"That was the most extraordinary experience of my life,\" she whispers.\n\n\"What part, honey?\"\n\n\"All of it,\" she replies, her voice gaining a little strength. I toss the towel back into my room and shut the door.\n\n\"Can you walk?\" I ask.\n\n\"I think so.\"\n\n\"Then let's take a look around,\" I say and start down the hallway.\n\n\"My, my,\" she says with a giggle, \"you must have been a very bad girl.\"\n\n\"What?\"\n\n\"You have a pretty pink ass. Did you enjoy your punishment?\"\n\n\"I did,\" I say, feeling myself blush a little, \"and I'm going to disobey the twins as often as I can in the future. Now let's take a look at you. Turn around.\"\n\nShe turns, looking coyly back at me over her shoulder.\n\n\"Holy shit!\" I exclaim when I see her bright red little butt. She smiles broadly at my reaction.\n\n\"As you can see, my twin thought I was extremely disobedient. He made me cum with the cat. I still can't believe that happened. When you spanked me I could rub my pussy against your thigh. I couldn't do much of anything this time but I had an orgasm anyway.\" she says, now mostly recovered from her experiences, \"Let's go explore.\"\n\nThe room next to hers contains the bed from my first encounter with the twins, complete with straps, cuffs, and the slings. The rest of the rooms are empty. The door at the end of the hall opens into a large shop space with lots of tools, supplies, and what looks to be partially completed constraint devices and fucking machines. We're delighted. The twins obviously have additional plans for us.\n\nAt the back of the shop is another door that apparently leads outside; probably the twin's escape route. A bathroom at one end of the shop gives us the opportunity to finish cleaning up so we take advantage of it.\n\nHaving seen everything there is to see, we head back up the hallway to our rooms. When we get there, Angie stops and places a hand on my arm.\n\n\"I wanted to see what's in your room, but I changed my mind. Let's wait for the videos and then watch them together,\" she suggests.\n\n\"Good idea. Let's get dressed and go find something to eat. I'm starving.\"\n\nA half hour later, we are seated in one of our favorite restaurants, drawing stares from the other late diners because of our attire, particularly Angie's. I find this amusing since I'm the one who isn't wearing any underwear. We ignore them and have a wonderful dinner, talking quietly about our experiences earlier in the evening.\n\n\"I want to thank you,\" Angie says a little later in the meal. \"First of all for giving me the opportunity to participate, but mostly for being there when I needed you. You had to go through all that alone, the anxiousness, the self-doubt, fear of the unknown, all of it. I don't know how you managed. I had all those feelings, but you were beside me right up until I stepped through that door. Not only that, but I got to meet the twins beforehand. You had no idea what you were walking into.\"\n\n\"I wanted to share all that with you, but I just couldn't do it. What I was doing seemed so depraved at the time. But I'm glad I was able to be there for you. And now we're in it together and that makes me very, very happy.\"\n\n\"I feel good about it too,\" she says, reaching across the table to take my hand.\n\n\"You know we are going to get another invitation for this coming weekend,\" I say to her quietly.\n\n\"You think so? Why?\"\n\n\"One of the twins has not yet had the opportunity to fuck you. He won't let that situation stay unresolved for very long. Plus, there was a new device in my room that he'll want to use on you unless he decides on the bed with the slings. Either way, you're in for a wonderful time.\"\n\n\"Well, my twin used something on me that I didn't see in your videos,\" she says with a mischievous grin. \"You're going to like it.\"\n\n\"There you go then. They have what they need for at least one more encounter before they have to develop other ideas,\" I respond.\n\n\"I can't wait for the videos to arrive,\" Angie says, taking a sip of her after-dinner drink.\n\n\"Speaking from experience, we'll probably get them in Tuesday's mail,\" I reply, \"So Tuesday night we should plan on a little party at my place.\"\n\n****\n\nTo be continued...\n\nI encourage readers to vote and comment. Constructive thoughts, suggestions, and criticisms are always appreciated."
    ],
    "authorname": "mindventure",
    "tags": [
        "masturbaton",
        "girl-on-girl",
        "spanking",
        "whipping",
        "fucking machine",
        "anal"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/on-a-slippery-slope-ch-04"
}