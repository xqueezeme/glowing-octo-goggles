{
    "title": "The Ponytail Express Ch. 18",
    "pages": [
        "Chapter 18: Post Practice \n\nCantella Forks Hotel\n\nFoyer\n\nA tall, ample-chested woman sporting a huge grin and long red hair in tight curls, a medium-sized, alabaster-hued woman with bright blue eyes and short dark hair done in an immaculate bob, and an almost forgettable young man with sandy blond short hair barely taller than the redhead strode into the hotel, garnering immediate notice from the staff. However, rising from a chair in the lobby was a bespectacled woman in her early thirties. The young man grinned politely, but his eyes held her with an intense, almost commanding stare. The redhead waved hello, sporting her signature \"aw, shucks\" grin as she sauntered over to the lawyer. \n\nMia shattered what remained of the decorum the older woman tried to maintain by pulling her in for a hug that was anything but appropriate. \n\n\"Hello, Tandy,\" Mia said, her eyes admiring the more mature woman. \n\n\"Hello, Mistress,\" Tandy spoke before tilting her face up so her mouth could meet the redhead's. The two kissed deeply, sharing tongues in a delightfully erotic dance. Mia pulled away, her long tongue sliding out of Tandy's pursed lips. \n\n\"Mistress?\" Fred asked, shaking his head at Mia. \n\n\"Hey, you put me in charge of her,\" Mia said, shrugging. \"So, I took charge. This one needs a bit of a firm hand.\" To stress that fact, she gave Tandy's tight ass a slap. \n\n\"Hey, Tandy,\" Fred spoke, greeting the lawyer. \"Hope everything's okay.\" \n\n\"Other than a bit of embarrassment,\" Tandy said. She struck a civil tone while trying to communicate her public humiliation. \"Things are proceeding. I had some developments I wanted to share in person.\" \n\n\"I'll bet,\" Niamh said. With her soft voice, people barely heard her, but Fred and Mia heard her perfectly well. \n\nFred smelled two people in the lobby who had recently met with Marcus. He pegged them as possibly NireCue. He almost didn't see a third man, but his nose told him it wasn't a man at all. It was the Chameleon, easily the strangest woman he'd met, who opposed the faction Marcus worked for. Had she been an experiment like him? Another in a long line of questions he would need answered at some point. \n\n\"Thanks again for coming,\" Fred said, stepping into her personal space. He stood inches away from her, looking slightly downward. In heels, Tandy was around 5'9, and looked into the eyes of the man she wanted inside of her since Saturday night, when she'd sucked his cock and told him everything she could. She wanted to be Fred's lover, not his lawyer. Yet here she was, doing something that could get her disbarred. \n\nTandy Graham craved Fred like a starving man craved food. \n\n\"I can't help myself,\" she murmured, leaning in to kiss him. He parted his lips only slightly, seeming to urge her to be more passionate, so she did. Unable to help herself, she melted into her client in the lobby of a hotel. \n\n\"You little whore,\" Mia said, teasing. Fred loved how unashamed she was about everything. Mia gave exactly zero fucks. Her uninhibited nature was seeping into other members of the harem as well. The redhead seemed to enjoy making people uncomfortable.\n\nFred pulled back before things progressed any further. He wanted to put Tandy up against the nearest wall and do things to her that her husband couldn't, but not here, and not now. He'd been giving some thought to the lawyer's situation, and wanted to give Tandy the freedom to decide her own fate. \n\n\"Let's go to the bar,\" he spoke. \n\n\"Okay,\" Tandy said. Niamh took Fred's hand and Mia took Tandy's. \n\nThe server came over to the table to find three people instead of four. They seemed like college kids with a bit of an edge to them, two pretty women and a guy around her own age. He had short, sandy blond hair with intense eyes that seemed to see everything. She liked the way he looked at her. And the way he smelled... it was an invigorating scent, ever-present but not overpowering. She wondered if they all used the same body wash. Standing on the balls of her feet, which somehow felt lighter, she launched into her greeting. \n\n\"Welcome to the Forks Bar and Grill. I'm Mallory, your server. Would you like some drinks to get started?\"\n\nThe redhead with the freckles and amazing hair answered. \"Yes Mallory,\" she said, and again, she was impressed by the redhead's attention, feeling like it was more than just politeness. \"I'll have a Long Island Iced Tea, Fred will have a whisky neat, two fingers, the lovely woman over yonder,\" she motioned at the pale, willowy girl with shoulder length dark hair. \"Will have a French 75. Can you make that?\" Both women were on either side of Fred, and the pale woman's piercing eyes tried to hold Mallory in place. They were hypnotic. \n\n\"I can check for you. There was a fourth, right?\" \n\nSuddenly, those piercing eyes noticed something under the table at around Fred's crotch, and she wore an amused look. \n\nBoth women now looked amused. \"Right,\" said the redhead, \"there is. Get her an Irish Cactus.\" \n\nThe server was confused. \"My apologies! That's not on our drink list.\" \n\n\"That's okay. It's Bailey's Irish Cr\u00e8me mixed with Tequila. Pllleeeeaase?\" \n\n\"I'll check with the bartender, but I'll come back when...\" as she handed out menus, Mallory noticed the fourth woman under the table. She was giving Fred a blowjob. God, she was really going at it. \n\n\"Please don't rat us out,\" Fred spoke, his intense eyes seeming to bore into her soul. Normally, she would have them all thrown out for the lewd scene, but there was something about him. Something about them. Fred's request made a lot of sense. \n\n\"I won't,\" she heard herself say. \"I'll be back with your drinks. Please enjoy yourselves.\" \n\nMallory had to fight the urge not to stay and watch. \n\nMia Riley shook her head. \"I suppose all client-lawyer relationships should be like this. Fewer court cases, more plea bargains. Taxpayers would save a lot of money.\" \n\nNiamh sighed. \"If only more lawyers knew how to chug cock.\" She leaned into kiss Fred on the neck, but he turned his head, meeting her lips with his. Fred was one of the best kissers she'd ever had, and that said a lot. It probably had something to do with all the pheromones crawling around on her body, like some sort of foreign bacteria, apparently shuffling her DNA to help her over her withdrawal symptoms. She had other questions, but her mind was melting into the fantastic kiss. \n\nFor Fred, he enjoyed the attentions of all three women. He had intended to get more information out of Tandy Graham, but she was intent on giving him an enthusiastic blowjob. Similar to Oni's blowjob last week, but with a bit more publicity. This was definitely nastier. Now, Fred's sense if impropriety was all but gone. \n\n\"Fred, can your cock heal the sick, too? Raise the dead?\" Mia was in her usual form. \n\n\"I will not ask that question until I've seen a lawyer,\" Fred deadpanned. Mia laughed loudly, causing some of the other patrons to look over. He didn't care. \n\n\"Fuck, Fred, I'm glad I wasn't drinking. It would've shot out my nose,\" the tall, sturdy redhead said. \"That's just the kind of spit-take you don't want.\" \n\nHe looked at Mia. \n\n\"Give me your mouth, but wait until the server comes over.\" \n\nNiamh smiled, kissing Fred's neck, stealing glances at the show playing out under the table. \n\nTandy had her reading glasses on, taking Fred's cock down her throat like a pro. Four days after first contact, the lawyer had been reduced to a slut. \n\nPart of Fred wasn't so sure. The reason he agreed to this visit was to see if he could pick up any oddities in the lawyer's own scent, some sort of clue that would tell him more about the mysterious overlord present in the city. He believed whoever it was to be at least somewhat benevolent, if not lazy. If Fred was the experiment Oni's father spoke of, he was given an awfully long leash, and room to make his own decisions. Niamh's rescue had signaled the beginning of his harem. He looked at the pallid vision now, and she winked playfully at him. There was no question she was his. \n\nAnd yet, ET (Fred got a kick out of the criminal's initials) was now off the board, even though he served the same master that apparently had abilities like Fred's, except with better control. Was he going to end up serving the same boss? Every answer had another question; everything was up in the air. Fred felt like anything could happen. He also felt good about his chances, and not just because he was about to blow a load into Tandy Graham's eager mouth. \n\nMallory came over with a noticeable flush of the cheeks and the drinks. Her mannerisms were commensurate with her exposure to the scent. She was semi-attractive, but Fred wasn't shopping. Better looking women were currently around him, although he liked the way she carried herself, filling out the uniform with an upbeat aplomb that suggested she was a former dance squad or perhaps in drama or acting. \n\nHis thoughts about dancing reminded Fred he needed to call his mom before tonight's festivities began. \n\nMia leaned in to give him a sloppy kiss that Deb would've approved of. Mallory cleared her throat as the ample-breasted redhead and handsome young man played tonsil hockey. \"Here are your drinks, Mr. Markinson.\" \n\nTandy exchanged glances with Niamh, and now the pale beauty felt the lawyer's hand moving up her thigh from under the table. She could've slapped it away, but it didn't seem appropriate. Like a tourist in Las Vegas, Niamh let it ride. \n\n\"Thank you very much, Mallory,\" Niamh said, leaning forward. \"I like your makeup. What color lipstick is that?\" \n\n\"Velvet Teddy, and thank you for noticing!\" she said, angling herself to get a glimpse of the cock suck-a-thon under the table, as Fred's lawyer worked diligently to gobble up his cock like it was a Christmas ham. \"And an Irish Cactus for the absent party.\" Mallory's tone was equal parts conspiratorial and arousal. \n\n\"Is there anything else I can do for you all?\" \n\nMia took her tongue out of Fred's mouth long enough to say, \"No, you've been very helpful, Mallory.\" And with that, the redhead slipped a bill to Niamh and went back to using her tongue to check on Fred's tonsils. Niamh offered her hand to Mallory, who took it. \n\nThe server let Niamh kiss the back of her hand as she felt her put a bill into her palm. Her lips felt warm and sent little tingles through her arm. Mallory considered herself a strong heterosexual woman, but she was having second thoughts about that as moisture was grew between her legs. She wondered what color panties the pale woman wore. \n\n\"You're named Eve?\" Mallory asked. \n\n\"No, it's like 'Eve,' but with an N in front. It's spelled differently on account of my Celtic background. \n\n\"Is that like Gaelic?\" \n\n\"More Irish than Scottish, but close enough for me,\" Niamh said. Suddenly, she did a brief intake of breath. \n\n\"Everything ok?\" Mallory asked. \n\n\"Yes, I seem to have dropped something on my leg,\" Niamh said. Actually, Tandy had two fingers driving slowly in and out of her wet pussy. \n\nMallory inclined her head so she could see the source of the celtic woman's yelp, and grew even more aroused. A part of her knew she should be outraged, but a darker side yearned to join them. \n\n\"I'll let you all peruse the menu and be back in a few,\" she said, flushing crimson. \n\nNiamh sighed, her eyes half-lidded. \"See you in a few minutes, Mallory.\" \n\nTheir server reluctantly retreated, an extra sway in her hips. She shot constant glances at their table. \n\n\"It's happening,\" Fred moaned around Mia's tongue. He looked Niamh's way and pulled her in for a three-way kiss. He was going to cum soon and wanted to fill up Tandy's mouth while kissing both cousins at the same time. \n\nNiamh leaned in and the trio started sucking each other's face in a chorus of both moans and whimpers. Two sets of firm breasts pressed against his chest and arms, and he cupped Mia's rounded ass as he ran his hand through the pallid vision's hair. When Mia's tongue found Niamh's, the pair really got into it, expressing their newfound passion for each other. \n\nWhen their kiss finally broke, it was Mia who spoke first. \"I guess incest is best,\" she joked. \n\n\"Relatively speaking,\" Niamh agreed, and the two kissed again. \"Seriously though, cousin, you're a great kisser.\" \n\nMia agreed as she felt Niamh feeling up her tits. \"You're no slouch yourself.\" \n\nFred kissed both women as they tongue-fucked each other, and at that moment, he exploded into Tandy's mouth, painting her tonsils with his jets of hot jizz. His lawyer had been aching for some attention ever since their \"interrogation\" Saturday night. \n\n\"That's better,\" Fred said, now more relaxed. \n\nMia bit Niamh's lower lip playfully, stretching it out then releasing it as she pulled away. \"Things were about to get out of hand,\" she said. \n\nNiamh tensed suddenly, her body shivering as Tandy's fingers found the right spot, dipping into her love canal, tapping her well, producing an orgasmic gush of cum. \n\nPeople looked over, but no one said anything. Tandy suddenly popped out on Mia's side of the table, looking both disheveled and happy. \n\nTandy looked first at Mia, then opened her mouth slightly, displaying leftover jizz inside. \n\n\"Oh, you saved some for me,\" Mia cooed. She dove in for a snack, helping herself to Fred's fucktastic sperm. The unlikely pair shared through a voracious kiss that steamed Tandy's glasses. \n\nFred felt a hand around his half-hard prick. \"I can't help myself,\" Niamh spoke, her soft voice barely audible over the background noise. \n\n\"I know you can't, Niamh,\" he said. \"Would you like to take Tandy's place down there?\" \n\nStill coming down from the brazen display of exhibitionism, she knew whatever Fred asked for, she would give. The prospect of sucking his cock excited her beyond belief, motivation enough to slip under the table. Seconds later, Fred felt his cock enveloped by the warm, wet confines of Niamh's gorgeous mouth. \n\nTandy and Mia finally separated, both women clearly in a state of perpetual arousal. Even with the cigarette smoke forming a constant background scent, Fred knew his scent was floating to the other tables. Niamh had given Mallory a healthy dose of pheromones when she kissed the back of her hand. Now, the server was spreading it to other tables. \n\n\"Jesus Fred, do you ever stop?\" Mia asked, an impressed look on her freckled face. \n\n\"Do you?\" Fred countered, returning the redhead's smile. \n\nShe chuckled. \"Touche.\" \n\n\"Tandy,\" Fred began, \"now that you've had your meal, tell me why you're here.\" \n\nIt benefited Fred to believe what Oni's father had said yesterday evening. Further solidifying that fact was Marcus trying to downplay it, and it didn't go well. Now here Tandy was with an \"emergency\" he suspected wasn't true. \n\n\"I'm not here for any legal matter,\" she said. \"I'm mainly here to tell you two things. One, I overheard Morris Yull talking to Ned Stallings. I got the impression they were going to send Marcus to stop you from doing something.\" \n\n\"I take it Morris Yull is one of the senior partners? The name on the law firm?\" \n\n\"The same,\" Tandy admitted. \n\nInteresting, Fred thought. \n\n\"And number two?\" he asked. \n\n\"I called Mia to schedule an appointment with you. Not as your lawyer, but as your... woman.\" \n\n\"That's brave, considering who you work for,\" Fred said. \n\n\"Desperate,\" she said, looking guiltily down at both her hands. \"I'm married.\" \n\n\"Unhappily,\" Mia said, pointing out the obvious. \"Frustrated. You need something more.\" \n\n\"Still married,\" Fred said, agreeing with the lawyer. \"Tandy, you should know that being my lawyer means we won't be doing anything sexual anymore. I can make you forget what happened Saturday night. Our relationship could become just a professional one.\" \n\nMia listened intently, looking from Tandy to Fred. \n\nFred's cock was diamond-hard again inside Niamh's otherworldly, incredible mouth as she sucked his cock from under the table. \n\nMallory came back, greeting Tandy with a slight flush, then noticing what Niamh was currently doing. Her eyes widened as she looked at Fred with varying degrees of lust and awe. \n\nMia ordered for Niamh, who paused her sucking to correct her cousin somewhat. It made Fred and Mia smile, because both knew this wasn't the worst thing the pale beauty had done in public. Not even close by a long shot. \n\nMallory sauntered away, swaying those hips suggestively while looking back at Fred. \n\n\"You could make me forget?\" Tandy asked. \n\nFred nodded his head, reaching under the table to take hold of Niamh's ears in order to fuck her pretty face. She hummed in appreciation around his hard dick, getting an incredible feeling of knowing how excited Fred was becoming. It went without saying she would do anything to please him. She remembered what they had planned and her hand went down her dress to attend to her sodden pussy.\n\n\"You have a decision to make, Tandy,\" Fred said, his voice slightly uneven because of the spectacular blowjob he was receiving. Mia was right; Niamh was a blowjob artiste, both talent and experience combining to make her the unmitigated champion cocksucker in Fred's life. He was tapping the back of her throat with the tip of his large, hard cock and she seemed to love it. Her tongue and suction-action provided a stimulation his cock had never felt previously. Despite all his prior orgasms, her skill would always make him cum. \n\n\"You can either forget the whole thing, or be a part of it.\" \n\nHis body jerked as he went off inside Niamh's eager mouth. She took his seed down her throat like she was born to it, jerking the base of his shaft with one hand, coaxing every bit from his roiling balls. His hips churned into her cum-drenched lips as she savored every drop. \n\nBlowjobs had been one of Niamh's specialities when she worked as a whore for the cathouse behind the casino. It had been a hard life, but looking into Fred's satisfied face, she felt it was all worth it. There was a debt owed to both Fred and Deborah she would try to repay for the rest of her life. Chugging cock seemed a small price to pay. As his load careened down her throat, her whole body tingled. Sensations ran through her. The taste, the texture of him, and how she felt. The need for drugs had been replaced by a more urgent need for both Fred and the other members of the Express. \n\nFred could feel Niamh swallowing his seed, yet still kept his focus on Tandy Graham. He was curious what her answer would be, feeling he was in a win-win scenario, but was concerned for her position. Married with a job that obviously paid her a lot of money, by accepting to be a part of his harem, she would accept the possibility of losing both. \n\n\"I know you forced me into it, but you showed me how... good it could be. I want to be of service.\" \n\n\"You're saying you need my cock, now.\" \n\nShe nodded. \"Yes, sir.\" \n\nHe smiled. \"Tell me more about the phone call.\" \n\nAs the quartet ate and drank, Tandy reported her findings, clarifying that Ned Stallings, Deb's father, gave Marcus his orders, which made Ned the frontrunner as the culprit. \n\nTandy left them in the bar, leaving the trio time for a little dancing before retiring to the Executive Suite and what Mia kept referring to as \"Sexy Time.\" \n\nOnce inside the Suite, the girls retreated to the bathroom to make themselves ready. \n\nFred texted Deb. \n\n\"Deb, got some news for you. Not sure if it's good or bad.\" \n\n\"I'm here, babe. Let me know.\" \n\n\"Ned Stallings is Marcus's boss.\" \n\n\"Freddy, I'm not sure about that. Daddy's been retired for years now.\" \n\n\"Has he? It wasn't just Tandy's information that implicates him. He had the clout to get Oni's parents out of Thailand. The only thing that doesn't track is if he is this guy, why hasn't he used his scent stuff on you?\" \n\n\"Yeah, maybe Tandy is throwing you a red herring, trying to lead you in a different direction.\" ",
        "\"You might be right,\" Fred sent. \"Just be careful. Don't go home until this weekend, when you're with me. It was great seeing you today.\" \n\n\"You too, babe. I love you and can't wait to let my parents know we're getting married.\" \n\n\"I love you too, dear. Can't wait to take you, Mia, and Oni to visit mom and give her the news. The look on her face will be interesting.\" \n\n\"LOL, Freddy. Well, tonight, we're playing sense deprivation games, which will challenge Jess. I don't think she knows how sharp my sense of smell is. We may have to default to 'Guess What I'm Gonna Do?'\" \n\n\"That game sounds hot, dear. This whole dom-sub thing might become a whole thing. Let me know if it becomes your kink.\" \n\n\"My kink is you, lover.\" Deb sent. \n\n\"Likewise,\" Fred responded. \"Mom's calling. Gotta go, Love you.\" \n\n\"Love you too.\" Deb sent. \n\n\"Mom, how are you?\" Fred said, his tone all earnest pleasure. He'd spoken to her a few times over the week, but it was mainly by text. \n\n\"Oh, I'm good, my boy. Are you staying hydrated? The weather's been so dry,\" she added, her upbeat tone infectious, the weather being one of her favorite subjects. \"We should get some rain this weekend.\" \n\nFred smiled despite himself. \"Everything okay on your end, Ma? Have you seen anything suspicious?\" \n\n\"Why?\" she asked. \"Are you okay, my boy? I was just telling someone the other about the good times we used to have, traveling into Cantella Forks for shopping and movies. Remember when we would make a day of it?\" \n\n\"We would always eat at the Burger Shack before heading back,\" Fred said, his tone nostalgic. He remembered those days vividly. \n\n\"Your father was the best driver,\" Susan said, her tone wistful. \"You loved to go swimming and he would get some sun watching you while I went shopping.\" \n\n\"That was fun,\" Fred agreed. \n\n\"Are you sure you're okay, my boy?\" she asked. \n\n\"Just worried about you is all,\" Fred said. \"But I have a question, ma.\" \n\n\"Ask away.\" \n\n\"Do you know the Stallings or Dasna families?\" \n\nAn uneasy silence followed the question. Fred could hear the girls laughing and talking in the bathroom while he laid on the bed. \n\n\"Your father knew him, as I recall. I don't think they were ever close, though. I haven't heard of the Dasnas.\" \n\nSomething in the tenor of her voice changed as she chose her words carefully. That alone revealed a lot to Fred, none of it good. \n\n\"Okay,\" he said, feeling tired. \"Are you really coming into town on Saturday?\" \n\n\"I was hoping to,\" Susan said, her voice hopeful. \"we'll have to see what the weather says. You know how much I enjoy driving during storms.\" \n\n\"It sucks, I know,\" Fred spoke, signaling agreement. \n\n\"Still running around with your new girlfriend?\" Susan asked, her tone inquisitive. \n\nFred appreciated the subject change. \"Yeah, she's still letting me hang out with her for some ungodly reason.\" \n\n\"Don't sell yourself short, my baby boy,\" Susan spoke. \"She's lucky to be with a nice young man like you. Say, are you still planning to live in Cantella Forks this summer? The house feels empty.\" \n\n\"Yeah ma, though I may live off-campus this summer.\" \n\n\"Do you need money?\" \n\n\"I'm good, ma. Send me some chocolate chip cookies.\" \n\nShe giggled. \"Come out and visit your mother and I'll send you home with as many as you want.\" \n\nThe women were out of the bathroom, and Fred's jaw dropped. \n\nMia wore an emerald lace bustier with matching panties. Her eye shadow was a glam glitter that added a smokey look to her, as if she needed it. Her breasts were on the side of DD's, which weren't too large given her sturdy six-foot frame. \n\nNiamh had put on some much-needed weight since her rescue five days ago. She no longer had the skeletal appearance, her skin didn't have jaundiced blotches, and any needle tracks were almost invisible. She had styled her short black hair and wore a bit of makeup to stress her already gorgeous facial features, from the full lips to penetrating blue eyes. The frightening thing was she wasn't one hundred percent and yet still she was gorgeous. A crimson keyhole teddy fit over her voluptuous body like an erotic glove. Each woman held what looked like a small jewelry box. \n\n\"How do we look?\" Niamh asked coquettishly. \n\nFred knew a \"Mia-ism\" was going to materialize. He wasn't disappointed. \n\n\"We look concubine-o-rifical,\" she said, wearing her signature goofy grin. \n\n\"Wow,\" Fred spoke. \"Not even Mia's jokes can mess up how incredible you both look.\" \n\n\"Thank you, sir,\" Niamh said. \"Would you like for us to continue to model for you?\" \n\nMia chuckled. \"What dost thou wish, kind Master?\" \n\nHe chuckled. \"Master would like to know what is in the boxes.\" \n\nThey both giggled conspiratorially before prancing over to the bed. \n\n\"Let us show you,\" Mia said, excitement in her voice. \n\nMia flopped onto the bed while Niamh was more composed. \n\n\"Open mine first, sir.\" \n\nFred liked the submissive angle she took. \n\n\"Remarks like that,\" he said, giving her a meaningful look. \"will get your pussy crammed with dick a lot faster and maybe even harder.\" \n\nShe tittered in response. \n\n\"Before I open this, I wanted to let you both know,\" he began, \"that you being here means a lot. I gave you both an out, and I know we're beyond both of you hanging around until the end of softball season. I would like both of you to be here permanently as a part of the Ponytail Express harem. I love you Mia, and I love you, Niamh. Thank you.\" \n\nThe pair were clearly not ready for that. Niamh's lower lip began trembling with emotion. \n\n\"Fuck you, Fred,\" Mia said finally. \"the eye shadow took a long time to put on and it runs when we get all teary. I was thinking it would run during sexy time but here you are trying to ruin that.\" \n\nFred laughed, which infected the both women. He opened Niamh's box. \n\nThe choker inside was black leather, with a heart-shaped metal clasp at the front. On either side of the heart from left to right was the word \"Yes,\" then \"Sir.\" \n\nFred knew what to do. He took it out, undoing the clasp. \n\n\"Come here, Niamh,\" he said. \n\nShe complied in her usual sensual manner, blue eyes shone like deep pools of emotion. \n\nhe fitted her neck with the choker, but before he snapped the clasp, he wanted to say something. \n\n\"Once I snap this clasp around your neck, the collar will symbolize your submission to me. It will symbolize how your body belongs completely to me. There will be no going back.\" \n\nShe gazed into Fred's eyes. \"I hope so,\" she said, smiling. \"I love you, sir.\" \n\nHe snapped the clasp. Her body gave a slight jerk, and her skin flushed with arousal. \n\n\"You are now mine, Niamh.\" \n\nShe sighed. \"Now, and forever.\" \n\nHe grabbed her by the hair, his grip tight. She exhaled in a hiss, obviously enjoying the sensations the pain caused. \n\n\"Niamh, I'm going to violate you tonight. You will end up doing something you've never done before.\" \n\nMia, content with watching her cousin's intimate bonding with Fred, interjected. \n\n\"Fred, she's done quite a bit.\" \n\nFred looked at Mia with a grin, then back to Niamh with a more serious look. \n\n\"I bet she's never had sex with two people she genuinely loves.\" \n\nFred's words hung suspended in the air. He could see the realization seep into both women. \n\n\"You got me there, sport,\" Mia spoke. \n\nNiamh put a hand on his chest. \"I know you've reserved it for Oni, but will we, or can we, give you children? I know it might sound weird, but lately I really would like to give birth to your child, Fred.\"\n\nMia smiled. \"I think breeding is going to fall to more than just Oni.\" \n\nFred nodded agreement, exchanging a glance with Mia. \n\n\"Mia made a comment the other day,\" Fred spoke, \"I believe she said that if my pheromones made her fertile, she would have my child. That was correct, wasn't it?\" \n\nMia nodded her head while scooting in to offer her box to Fred. \n\n\"Take the collar, put it on, yadda yadda yadda, let's get to the part where we breed already!\" \n\nNiamh laughed. Fred smiled, opening the box to reveal a rust-colored collar with a rusty-looking metal. It was very steampunk, and I had a metallic engraving that read \"Lovingly Owned.\" \n\n\"Future wife,\" Fred spoke, \"This collar doesn't symbolize ownership, it symbolizes freedom. You chose this of your own free will. For that, you have my love, respect, and appreciation.\" \n\nWhen he snapped the clasp, she kissed him tenderly. \n\n\"Please use this filthy whore, Master,\" Mia said, voice dripping with need. \n\nNiamh was behind him, hand on his shoulder. \n\n\"Sir, your cum-slut needs to be violated.\" \n\nFred smiled. It was time to breed.\n\nTo Be Continued..."
    ],
    "authorname": "A_Gavin_MaCross29",
    "tags": [
        "harem",
        "cousins",
        "lesbian",
        "male dominant"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-ponytail-express-ch-18"
}