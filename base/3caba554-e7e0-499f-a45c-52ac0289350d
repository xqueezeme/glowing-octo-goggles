{
    "title": "Rag Doll Ch. 06 Pt. 02",
    "pages": [
        "This is the very last part of this story; it's taken me a while to get here, but I've had some great company along the way. All of those fine people who've had a say or a hand in making this happen are offered the biggest possible vote of thanks, but most especially to Grand Teton, who's calming influence and editorial skills have once again tamed my wild, punctuation-scattering compulsions. \n\nSpecial thanks also to my beautiful Lori, Mriceman1964 for being in the dugout the whole time, Bonnie Hurd for being objective and critically realistic, but most of all to the loyal readership who've stayed with me and chose to accompany Nicky, Bobby and Rick on the whole ride, and rooted for them as they set out to try and vanquish evil their own way.\n\nAs before, I would like to remind one and all that this is not the real world, it's just one of my versions, so things happen the way I think they should, not the way they would in the mundane reality we live in. Please suspend disbelief and play along, who knows, you may even enjoy it! I'm finished with this universe, so I'm going to start hunting for that door again, the door between the worlds that let's me find other realities to explore, play in, and encounter unfeasibly hot girls as and when I need them!\n\nbeachbum1958\n\n________________________________________\n\nI awoke from a complicated and confusing dream, or maybe nightmare; in my dream, I was in a plush room, with Leon, and a girl whose face I never saw, and Barbara was there, too. She was trying to talk to me, to tell me something, and I was straining to hear what she was saying, but her voice was being constantly drowned out by the roaring background silence. I knew it was important, maybe the most important thing I'd ever hear, but try a I might, I couldn't make out what she was trying to tell me. Suddenly Nicky was there, his furious face covered in terrible scars and cuts, his habitual grin replaced by a huge scar pulling his mouth down on one side. He reached out and grabbed my collar, cuffing me on the side of the head, shouting \"How could you do that, why did you let it happen, where the hell were you? She needed you!\"\n\nI jerked awake with a shout, to see Shari's eyes full of concern.\n\n\"What is it baby? That was some nightmare, you've been twisting and muttering, do you want to tell me about it?\"\n\nI couldn't properly recall the dream; like all dreams, what had seemed so clear and insightful had faded almost immediately; the only images that remained clearly were Barbara's anguished face and Nicky's bruised, bleeding face covered with scars and cuts, hurts put there by my father. \n\nI lay back, suddenly realising I was covered in sweat, and still too unsettled to go back to sleep. I couldn't work out what had brought that on; I never dreamed, or if I did, I never remembered my dreams, but this one had reached down into me and pulled all sorts of switches and I didn't know why. Shari pulled herself closer to me and looked at me quizzically.\n\n\"Baby, you're trembling! What frightened you, what did you see?\"\n\nI didn't know, but, for the first time in my life, I felt a deep melancholy, a sadness so profound I wanted to cry. I needed to cry, and I didn't know why, and that unsettled me even more. I felt like I'd forgotten something I really needed to know, and the loss was gnawing at me. Shari sat up and pulled me even closer, cradling my head in her arms, holding me close and gently rubbing my head, the way you'd calm a small child. \n\n\"Let it go, baby, whatever it was, just let it go, you're safe now, I've got you...\" she murmured, and for some reason, that picture of Barbara back home on the mantelpiece flashed into my mind, her smiling face and carefree expression, and her bracelet glittering in the light from the camera flash. That jerked me awake again, and now my head was full of that image, entwined with memories of how we'd treated her, ignored her, closed our ears to her cries, and pretended that she was fine, that all was well in our world. There was no more sleep for me that afternoon.\n\n*\n\nWe were dressed and ready for dinner with Leon and his girl by 7 p.m., Shari in a deceptively modest black cocktail dress that made her look delicious and my preferred first course at any banquet, the dreams and memories of earlier temporarily banished by the sight of my beautiful girl.\n\n\"Do you like it?\" she smiled, pirouetting to show off her svelte figure in that figure-hugging dress, and I could only nod, once again lost in admiration of her long, supple legs, her trim, sexy body, and her gorgeous hair tumbling down her back in a riotous mass of red-bronze curls. I was dressed in a pair of dress slacks and a new white dress shirt, and a subdued purple silk tie with a \"Herm\u00e9s\" label she'd pulled out of one of the boxes we'd brought back from the shopping mall. \n\nShari pronounced me fit to be seen in public, so I knocked on the interconnecting door, which was opened by Yaz. Her dress wasn't at all deceptively modest; on the contrary, it seemed to be competing for the title of world's shortest dress. It was a glittering metallic Teal green, to set off her Titian-red hair, her lips a blaze of almost fluorescent crimson against her pale olive skin, with her hair cascading carelessly over her shoulder, and towering matching green stiletto heels making her already flawless legs look truly endless to finish the look; she looked breathtaking; my baby sister was stunning, no escaping the fact; but then, so was my older sister, and they were going to make maximum impact tonight, I would have bet the farm on it.\n\nWe made our way down to the lobby, to wait for our guests, other guests and visitors stopping dead in their tracks to stare at the two visions of loveliness walking through the lobby like they owned the place. Leon was already seated there, waiting for us, talking to a girl with her back to us, with colour-streaked hair cut in a layered shaggy mop. As we walked up to the eating area, he glanced up and spotted us, immediately standing up and smiling. His girlfriend also stood up, smoothing down her really short shift dress as she stood, and turned to greet us. She was a pretty little thing, petite bordering on tiny, with thick, dark eyebrows framing a pretty, elfin face, and a gold pendant piercing through her bottom lip. She smiled broadly, and then, for a second, her smile faltered and her eyes widened behind her pink-tinted pixie glasses as she looked intently from Rick's face to mine and back again.\n\n\"Guys, this is Judy Nixon, my fianc\u00e9e. Judy, these are the two guys who saved my ass today, Rick and Bobby, but I haven't met these two lovely young ladies yet!\"\n\nI made the introductions, introducing Yaz and Shari as our girlfriends; it was too complex to explain our real relationship, and they didn't actually need to know that anyway. Judy shook hands with all of us, then looked up at me.\n\n\"So, Bobby...and Rick; am I right in thinking that would be short for Robert and Richard?\"\n\nI nodded, and she looked appraisingly at me, then flicked her glance over Rick again, obviously comparing our features, noting the resemblance. We chatted for a few minutes while we waited for the car we'd booked to take us to the restaurant, Judy asking about England, what we did, how old we were, all the little things you talk about when you first meet someone. The conversation we'd had earlier that day about his boss and the place he worked came back to me, and so I asked Leon what I thought were a couple of innocuous enough questions, just politeness regarding his place of work and his \"English\" boss. If I didn't know better, I could have sworn Judy deliberately jumped-in to change the subject each time. I let it go; it didn't seem important, and we'd only just met them, so it seemed impolite to press him about something so trivial...\n\nAfter a short while, Judy excused herself, and still hadn't returned when our driver arrived, so Leon went to look for her. I led the way to the minivan, and happened to look back, to see Judy and Leon partially concealed behind a potted Weeping Fig tree in the lobby, having some sort of heated conversation, Judy arguing with Leon while simultaneously speaking to someone on her cell phone. \n\nI turned away; it was none of my business, anyway, and they both seemed fine when they joined us out by the entrance, chatting quite normally and affably as the minivan threaded its way through the downtown traffic.\n\nDinner was very good, an harmonious blend of traditional Malaysian cooking and American flair, most of the dishes exotic and interesting, although I drew the line at the Mee Goreng; there were just too many tentacles in it for me to want to give it a try. Rick and Leon ribbed me gently about it, telling me that squid was delicious, I really should try some, and to just ignore it if it winked at me; somehow, appetising as they made it sound, I just couldn't bring myself to do it... \n\nYaz jabbed Rick with her elbow and squeezed my hand.\n\n\"Ignore him, baby, I can't take him anywhere twice! Here sweetie, you can have my Satay instead, I'll take the Mee Goreng!\"\n\nI noticed Judy watching all this carefully, interestedly, almost like she was evaluating us, Rick and me in particular. Once we'd got to the coffee stage, Leon grinned and leaned back in his chair, smiling at all of us.\n\n\"Guys, you really saved my ass today, I thank you, Judy thanks you, and most of all, my mom thanks you! She keeps saying I need to meet new people; I guess I did, it's just that one set tried to rearrange my face, and you guys came along and saved my ass! Somehow I don't think she meant it in quite the way it happened, but I'm sure glad you guys came along when you did!\"\n\nAfter a good dinner, with good wines and some really good beers, we eventually called it a night, and had the restaurant call us a minivan to take us back to the hotel. Once there, Leon and Judy made their farewells. Leon remarked that he'd be along in the morning to take Rick and me out and show us around, and Judy wanted to show the girls some of the better-kept secrets of Albany's shopping experience, so that was how we left it. \n\nWe were in good spirits when we went up to our rooms, although for some reason the intent, sometimes almost hostile, looks I'd seen occasionally flit across Judy's face puzzled me. I shook it from my mind; I was mistaken, I must be; I didn't really know enough about people to interpret their body-language that well, and I was probably on completely the wrong wavelength.\n\nMorning found us lounging in the lobby, having a coffee and a muffin for breakfast rather than another of those gargantuan meat-feasts, while we waited for Leon, and that was where he and Judy found us. Judy was dressed in a style she seemed more comfortable with than the more or less conventional dress of the previous night; now she was dressed in a tiny red skirt, more a belt than anything else, an off-the-shoulder 'Clash' tour t-shirt with a picture of Joe Strummer on it, and red patent stilettos. Once we'd shaken hands all over again, we said our farewells to the girls after arranging to meet for lunch, and Leon led Rick and me out to his car, a massive cherry-red Dodge Nitro.\n\nFor the next three hours Leon, Rick and I chatted and joked as we took in the sights of Albany; a short cruise in an authentic paddle-steamer, a wander round the spectacular Empire State Plaza, which was, for me, absolutely breathtaking, the Museum of Fire-Fighting, which Leon was especially proud of, as he came from a family of fire-fighters, and the New York State Capitol. We tried street food, including the best hot dog I've ever eaten, had a beer in a genuine sports bar, and promised Leon we'd come with him one day to the Baseball Hall of Fame at Cooperstown. By now it was time to meet up with the girls again, so Leon happily cut the tour short and we hustled back to meet the girls, who'd elected to try the delights of the UNO Chicago Grill in the Crossgates mall.\n\nLunch was fun, the girls managed to put away an astonishing amount of ribs, and the conversation was light, friendly, and non-intrusive. Leon was curious about why we'd come to America, so Rick gave him the story we'd decided on; we were having one last holiday before we had to get down to work, as we'd probably have no time for the next couple of years at least. We'd settled on that story as the simplest to remember, because none of us really wanted to explain our convoluted family history and circumstances to casual enquirers, and both Leon and Judy seemed satisfied, as they left it at that.\n\nOnce we'd gotten to the stage in our lunch where the edge was off our appetites, Leon invited us to spend a few days with his family; apparently his mother wanted to thank us in person for getting him out of what could have been a nasty situation, and had offered us the hospitality of the family home for a few days as a thank you. I exchanged glances with Shari, while Rick and Yaz looked on, obviously prepared to follow my lead. Shari nodded imperceptibly, so it was arranged; Leon would pick us up later that afternoon, and we'd be back at his home in time for dinner. \n\n\"Remember, guys, wrap-up warm, it gets cold out in the backwoods!\" he'd grinned.\n\nWith that, lunch was done, the girls piled all their mass of shopping bags into the trunk of the big Nitro, and drove back to the hotel with Judy in her little Toyota Prius. \n\nBack in our room, I asked Shari why she'd agreed so readily to go off on a jaunt with people we really hardly knew. She led me over to the couch and sat down, pulling me down next to her. Once we were seated, I posed the question again; why?\n\nShe looked thoughtful for a second, and a little sad.\n\n\"Baby, I did it because Leon and Judy are the first friends you've ever made; you've gone your whole life in this kind of bubble of isolation, and that fucker Robert Davies is to blame for that. Even while I'm rejoicing you finally met someone and made friends with them, part of me inside is crying because you've gone your whole life completely alone, without a single friend, or knowing how to make one.\"\n\nA tear trickled from the corner of her eye, and I wiped it away, wondering at what she was saying. She smiled softly at me, and continued.\n\n\"Bobby, you've had to wait twenty-two years to find out what a friend is, all because of that crazy bastard; he took more than your mother away from you, he took the world away from you as well, but now, now you've started to meet real people, and spend time just as friends with them. That's why I agreed to go away with them; Leon likes you for you, someone else has finally seen the real you, not just me, and that makes me very happy!\"\n\nWhile we were debating what to take with us, and what to leave in the room, the cell-phone from the investigation agency beeped. Shari snatched it up, listened intently, then:\n\n\"I see, okay, well, in that case, please follow-up all the most plausible leads, I'm sure you know better than I what to do, so I'll leave it with you. We're going out of Albany for a few days, to Oneonta, if there's no cell service available I'll check in with a land-line number as soon as I can. Thank you, goodbye.\"\n\nI looked at her, smiling hopefully. \n\n\"Well?\"\n\nShe grinned ruefully.\n\n\"No luck so far, baby; quote 'There are currently 189 persons of the correct approximate age listed under the name Nicholas Davies and variants in the Albany, Schenectady, Amsterdam, Sarasota Springs, and Springfield areas. We will of course investigate all those deemed to be most likely, but this will take time, and of course, all costs incurred will be in addition to our agreed scale of fees,' unquote. So nothing so far, sweetie, but it's early days yet, baby, nil desperandum!\" \n\nI looked up the places she'd mentioned; it was a huge search area, how could they ever hope to pin down one Nicholas Davies if there were nearly 200 people with the same name spread out over such a wide and populous area? I resigned myself to the fact that we might be here for a while. If we had to, we had more than enough money to last it out; the sale of Shari's mother's business, their house, and the properties around London had netted a staggering amount of money, several million pounds, so we weren't hurting, nor ever would be, but I was now concerned that we'd be throwing good money after bad in this quest and end up still no closer to the truth. \n\nHowever, there was nothing I could do about that, so I decided to take a shower; we still had over an hour before Leon was due, and I'd worked up quite a sweat trudging around the landmarks of Albany, so I ducked into the wet room while Shari chose to have a little post-shopping recuperation. I was miles away, lathering-up and humming a country and western tune I'd heard on the car radio, when two small hands crept around my waist, and two soft lips kissed me between the shoulder-blades. \n\n\"Hello, baby, can I do your back?\" she murmured, rubbing her hands in the suds coating my torso and moving south. I grinned to myself.\n\n\"Umm, that's not my back, babe...\" I said, trying not to laugh, and I swear I could feel her lips curving into her beautiful smile against my back.\n\n\"I know Bobby, I know, I'm sort of working my way around you, starting with the bits I know best...\"\n\nHer flattened hands slowly circled my torso, spreading the shower soap and pressing slightly as though massaging me, but always moving down, until her hands rested on my hips, pressing and kneading the muscle there. I was enjoying this immensely, if the size and hardness of my erection was anything to go by, and now her hands began to move inwards, closing-in on me, until she was clasping my cock with one hand, and cupping my scrotum with the other.\n\n\"Oooh Bobby, look what I found!\" she giggled softly, squeezing my shaft lightly, making me twitch in her hand.\n\n\"Oooh, it moved, I think it's alive!\" she gasped, squeezing harder and gently, rhythmically squeezing my scrotum in time with the hand slowly squeezing and pumping my engorged cock.\n\nI was starting to get more than a little heated with all this fondling and squeezing; I was feeling the need to do a little of my own, but when I tried to turn she let go of my scrotum and slapped me warningly on the backside.\n\n\"Uh-uh, Bobby, I'm not finished!\" she breathed, and lightly bit me on the shoulder, her teeth barely scraping the skin, but sending a delightful shiver all the way down my spine. I took the hint and stood there, enjoying the feeling as she slowly masturbated me, her soapy hands slick and frictionless as she slid them around my cock and balls. I couldn't take much more of this; I was rapidly getting to the point where I wanted her in my hands, I wanted to play with her and pleasure her like she was doing to me, but Shari seemed quite happy to stay out of reach and pleasure me.\n\nEventually I'd had enough, and spun round to grab her, making her squeal in surprise, her protests cut short as I clamped my hands on her bum and ground our sexes together as I crushed my lips to hers. Shari moaned and pushed herself against me, her arms locking tight around my neck as we kissed, and when I spun around and pushed her back against the wet-room wall, she grinned and leaped on me, wrapping her legs around my waist as we kissed so hard I thought we'd split our lips.\n\nMy engorged cock was still trapped between us, but Shari got over that by lifting up slightly and then dropping down, impaling herself on me. We both gasped at the sudden intrusion, the tightness and heat; I'd not planned to do this with her, but it was welcome, and so hot! With her back against slick marble tiles, and her arms around my neck, I began pumping into her, resting my forehead against the wall to give myself enough leverage to keep ploughing into her. My hands slipped from holding her delectable buttocks to hold her under her thighs as I held her legs apart so I could ram myself ever harder into her. ",
        "Shari was gasping and mewling, almost incoherent by now, repeating my name over and over as I hammered into her, her pussy clasping and releasing me, sucking at me as I powered into her. A kind of madness overtook us, all thoughts of the outside world were forgotten, there was only the slap of wet flesh against flesh, and her soft groans and whispered exclamations as I pumped into her again and again.\n\nShari came with a loud groan, stammering my name as she shuddered and quivered in release, her orgasm triggering my own. The feel of me flooding her over and over with my hot spunk, more than I'd ever done before, made her orgasm gather pace and roll through her again. \n\nWe hung there, suspended in a perfect moment, gasping, shuddering, and clasping each other as our release swept through us and became our world. The bright flare of release slowly dimmed, and the billowing steam, and the needle-jets of hot water cascading over us finally brought us back to reality. \n\nI slipped from her, and sank to my knees, almost no strength left in me after that volcanic release. Shari sank down to lean against me, her lips soft against my shoulder as I cradled her against me. Her gentle hands held and caressed my face as I gasped for air, trying to catch my breath and slow my racing heart.\n\n\"Ohohohoh Bobby, that was incredible!\" she quavered softly, \"we've so got to get one of these installed when we get home!\"\n\nI leaned back against the cool wall, letting the spray from the multiple showerheads massage me and relax me, pulling Shari onto my lap so I could kiss her properly, not that frenzied \"face-sucking\" we'd been doing earlier, Shari kissing me back just as gently and tenderly, then grinned, and giggled as something occurred to her. I looked at her quizzically, and she dimpled.\n\n\"Now that you've done that to me, you just HAVE to marry me, Mr. Davies!\"\n\nI pulled her close, and kissed the tip of her nose.\n\n\"Anytime you're ready! Miss Shereen Amisha Shahida, I would be honoured if you would consent to be my wife; bedraggled as you currently are, I've never seen a lovelier or more desirable spinster, and I would have you to wife! There, how's that for an 'olde-worlde' proposal?\"\n\nShari smiled at me and pulled herself closer to me.\n\n\"'Spinster' eh? You'll pay for that as well. To get back to your proposal, and I'm holding you to it, by the way; it was better than a million roses and a whole orchestra, so yes, Robert Davies, bachelor and occasional idiot, I think I will marry you!\"\n\nWe sat together under the needle sprays, letting the hot water wash the fatigue away as it washed our bodies, until at last Shari kissed me and patted my chest, and climbed somewhat shakily off me and made her way to the entrance of the wet-room; as she made to leave, she paused and softly called out \"Oh, Bobby, darling...?\"\n\nAs I looked up she hit the 'Cold' button, drenching me in high-pressure freezing water from all the spray heads at once. \n\n\"Wakey-Wakey, Baby!\" she crowed, finally getting her revenge as I hooted, gasped and spluttered under the unexpected icy deluge. Revenge really is a dish best served cold, or in her case, icy cold!\n\nWe were under the clock now; we had less than an hour before we were meeting Leon and Judy, so we had to hustle. We'd already packed all the warm clothes we'd brought; it was January, and the upstate weather was cold and unpredictable. Luckily Shari and Yaz had picked up a pair of vivid turquoise North Face goose-down jackets for Rick and me, and some Thinsulate ski gloves and beanies, and a few more pairs of thermal socks, just in case we decided to do a little exploring.\n\nGetting dried-off and dressed took minutes; most of our slack time was taken-up with drying Shari's spectacular mane of red-bronze hair, but with two driers we were done and waiting for Rick and Yaz in record time. They joined us in the lobby, Rick looking as drained as I felt, and Yaz and Shari sharing a sly, secret little grin, so obviously Yaz and Rick had been taking the same opportunity Shari and I had...\n\nLeon was bang on time, but no Judy. Shari asked him where she was, and if she was going to be there for our visit. Leon grinned as he helped us load our bags into the trunk.\n\n\"She had to deal with something, a family thing, but she'll be along tomorrow, don't you worry, she's looking forward to this!\"\n\nWith that we were off. The drive wasn't that long, something over an hour and a half. As Rick was riding shotgun, Leon chatted mainly with him, so I took the opportunity to grab a little shut-eye in the back seat, Shari nudging me if Leon spoke to me. Otherwise I caught-up a little on my missed sleep.\n\nLeon's family lived on Canterbury Lane, just outside Oneonta, in a beautiful sprawling house backing onto open country. There was snow on the ground, and cloaking some of the conifers, evidence that winter was still very much here in upstate New York. Leon's mother and sister greeted us warmly, his mother a redheaded slim lady whom Leon didn't resemble in the slightest, but a photo on the wall of an older man in a fire-fighter's outfit looked enough like him to clue me in that it was his father. I was curious about the \"FDNY\" badge and the number 343 incorporated into the frame, but I thought I'd keep it to myself, as there was a black band across one corner of the photograph. His younger sister resembled his mother, but with his sandy blonde hair, grey eyes, and quick smile.\n\nLeon's mother (\"Please, call me Kathleen!\") couldn't do enough for us, almost falling over herself to hug Rick and me for saving her son. Leon looked more than a tad embarrassed by the whole thing, but I suppose if someone had jumped in and saved my son a beating, or worse, I'd probably be grateful too. \n\n\"Ma, stop it, you're embarrassing the guys!\" he complained, grinning and nudging Maria, his sister, who promptly jumped on us and started the whole thing all over again. I happened to glance up while Maria was trying to break my neck with a hug, to see Leon, Yaz and Shari all grinning widely at Rick and me. My face was burning with all this show of affection, as was Rick's, something that made everyone else grin even more.\n\nDinner was wonderful. Leon's mother was a great cook, and she kept piling our plates up with more food. The crowning glory of the meal was a huge apple pie, hot and delicious, the smell of cinnamon and spices rich and tempting. After dinner, I asked Kathleen if I could go outside; I was feeling the need for a little alone-time, and it was quiet and peaceful all the way out here. She told me to wrap-up warm, the winter chill was still around, but I was looking forward to it; it was a different kind of cold to England, dry and crisp, not raw and damp like winter in Carlisle. \n\n\"Don't fall in the stream, honey!\" she joked as I let myself out onto the patio and struck off across the lawn, no real destination in mind, really just wanting to breathe some of that chill fresh air, hoping it would clear my head a little. I sat on an old log stump, watching my breath steaming in the sharp night air, thinking about what we did next, where we went next as a family. I was lost in my thoughts when I heard someone coming up behind me. A small hand came to rest on my shoulder, and, from that shared telepathy couples sometime have, I knew that it was Shari without needing to turn and look.\n\n\"It's beautiful out here, isn't it, baby?\" she murmured. I stood up and unzipped my jacket, pulling her cold hands inside and around my waist to warm her up again. Shari nuzzled against me as I pulled my thick jacket around us both, her hands rubbing my back as she looked up at the distant mountains glowing in the moonlight. I didn't answer her; I thought she was much more beautiful, and the feel of her against me was triggering all kinds of things inside me. Shari obviously guessed what I was feeling, her hands coming up to cup my face as she kissed me. I returned the kiss, feeling her gently grind herself against me, her movements becoming more insistent as the kiss dragged on. Now I was heating-up, and part of me was wondering why she was doing this to me; we were guests in someone's house and couldn't do anything about it.\n\nShari proved me wrong. As she kissed me, her hand slipped down to rub and squeeze my cock, already painfully constricted in my jeans, and what she was doing wasn't helping any as I kissed her, hard, still wondering how we were going to do anything about it. I had just decided to break-off and take her back indoors when she swung me round so my back was against the trunk of one of the big conifers on the stream bank and dropped to her knees to fumble with my belt. I watched in horny fascination as she undid my belt, popped my jeans, yanked down the zipper in one smooth move, and pulled my jeans and shorts down so my aching cock was freed. She looked up at me and grinned, her face pale in the moonlight, but with that devilish smile she did so well, then ducked her head and took me into her mouth. The warm, wet succulence of her mouth was almost unbearably wonderful as she licked and sucked me out there in the open air on a freezing winter night, one hand slowly squeezing and pumping my cock, while the other gently squeezed and massaged my balls.  \n\nOrdinarily, I have to be really worked-up for this kind of thing to bring me on, but for some reason the whole situation was extremely erotic, and I couldn't last long, not like this, not with her doing so many wonderful things to me. The end came quickly, even though I didn't normally find oral sex that much of a turn-on, but right there and then...\n\n\"Oohh God, Shari, yess, it's... God, I'm coming, Shari...!\" I gasped, as an avalanche of spunk blasted out of me, filling her mouth as she sucked me avidly, not spilling a drop as I pulsed and twitched in her mouth, firing salvo after salvo of hot spunk onto her tongue and against the roof of her mouth. I came so hard my ears were ringing with the force of it, and my knees buckled as I leaned against the tree-trunk.\n\nShari sucked me until I began to go soft, sucking every last drop of sperm out of my cock and polishing the head with her tongue. When I'd finished, and she'd cleaned me with her tongue, she zipped me back up and buckled my belt back on before standing up and kissing me once lightly on the lips. I grinned at her.\n\n\"That was wonderful, big sister, but why, and why now?\"\n\nShari pulled herself against me once again, sliding her cold hands around inside the back of my jacket to warm up again.\n\n\"No reason, except you're my Bobby, and I wanted to give you something nice. That should hold you 'til we get back to the hotel, but then you owe me one, Robert Davies, and I never forget a debt!\" she grinned.\n\nWe both laughed at that, and holding hands, made our way back to the warmth of the house.\n\nLeon showed us to our rooms; Rick and I were sharing one guest bedroom, Shari and Yaz another; we may have been living together as couples in England, but Leon's family, his mother in particular, were old-fashioned Catholics with very set ideas about who slept with whom. It had been a long day, with a large meal on top, plus that interlude with Shari out in the moonlight, and I must have flaked-out as soon as my head hit the pillow, because next thing I knew the sun was shining in my eyes. The room had a small bathroom attached, so I had a quick shower and got dressed. Rick was just finishing getting dressed when there was a knock on the door, followed by Leon poking his head round.\n\n\"Breakfast guys, come and get it, we've got a long day ahead! Judy just got here and the girls are all up, so come on, di di mao!\"\n\nWhen we arrived at the table, Judy was already seated with Yaz and Shari on either side of her, and she smiled at us, but behind it was that searching, almost hostile glance again, first at Rick, then me. She was starting to unnerve me; she couldn't possibly know me or what I was like, or had been like, and yet she was definitely not as affable or easy with Rick and me as Leon was. \n\nWith the girls it was another matter; she seemed completely, genuinely taken with Shari and Yaz, laughing, joking and giggling with them; it just seemed to be Rick and me she had an issue with, and I couldn't for the life of me figure out what it was. \n\nAfter breakfast, while Yaz and Shari helped Judy clear up, Leon took us on a quick tour of the property. The house stood on about three acres, and had a small stream or brook running through the back garden, with a small single-span barrel-vault wooden bridge connecting the two halves of the property. Off in the distance we could see mountains and snow-capped hills, blue with distance, with dense forest covering the lower slopes of the hills. The air held a sharp, refreshing chill, and smelled fresh and clean, tinged with pine, and I felt very relaxed. While we were sitting on some sawed-off logs and talking about England, with Rick telling Leon about London, the girls joined us, Shari slipping next to me, and Yaz plumping down onto Rick's lap. \n\nJudy remained standing, her expression unreadable, but even I could tell she had something on her mind; she was too tense, too intent, and once again that feeling of disquiet brushed the surface of my mind. She thrust her hands into the pockets of her snow jacket and turned away, looking up at the distant hills.\n\nEventually she seemed to come to a decision, and turned to face us.\n\n\"Bobby, Rick, if I ask you a direct question, will you answer me truthfully?\"\n\nI glanced at Shari, and once again she nodded almost imperceptibly, one eyebrow raised, like she knew something was coming, and had been prepared for it. I looked back at Judy and nodded.\n\n\"Ask away, I'll be as truthful as I can.\"\n\nJudy looked at me skeptically, and then once again, that strange, half quizzical-half hostile look flitted across her face.\n\n\"Okay then, answer me this; who are you, and why are you really here in America, and more specifically, why are you here in Albany?\"\n\nLeon started to protest, but I held up my hand, quieting him as I looked into Judy's eyes, seeing the suspicion there. I looked at Shari for guidance again, and her hand tightened on mine.\n\n\"Tell her, baby, it's okay, I think she already knows, but she needs to hear it from you. Go on, it's okay!\" she whispered, kissing me lightly on the cheek. I nodded, and pulled Shari closer.\n\n\"Judy, I think you know we're not here on holiday, we're not having a junket before buckling-down to work, we came here for a reason. I have an older brother, he's missing, he's been missing for nearly four years now, I want to find him, we all want to find him. Rick and me, we have a lot of things we need to say to our big brother, and Shari and Yaz, they also have their own reasons for wanting to find my brother. My family fell apart because of something that happened, something very bad, and we want to find our brother so he can know it's over now, and so we can ask him how we can make it right with him. We know he came from here a long time ago, and we know he came back, we just don't know where he is now.\"\n\nJudy was watching me closely as I went through the basic reasons for us being there, her eyes sharp, intent, not missing a thing.\n\n\"And if you find him, what then?\" she asked.\n\nRick stood up and cleared his throat, Yaz holding his hand as he spoke to Judy.\n\n\"If we find him, we tell him we're sorry, we were wrong, what we did was wrong, what happened to him was wrong, that we went to our mother's grave and we saw what he'd done for her, and that we both wish we'd done it, we should have done it a long time ago. My big brother tried to be there for us, and we pushed him away all our lives; now we need to make things right with him; we want to ask him to forgive us, and to let him know that his family finally understands who he is, and what he means to us.\"\n\nJudy looked at Yaz, then Shari.\n\n\"Okay, I get what you're saying, but I still don't understand why your girlfriends need him back as well?\"\n\nOkay, this was it. I looked at Shari, at Yaz; they both nodded and held themselves a little closer to us.\n\n\"This is hard to say, and maybe you won't like it, but here goes. Shari and Yasmin are sisters, but you already knew that; what you don't know is that they are also our sisters, or half-sisters; my older brother is their older brother, too, and they need him as much as we do, maybe more. Our father was a vile and evil man, and he did vile and evil things, but one thing he did I will always be grateful for; he fathered these two lovely girls. They're part of our lives in ways you won't understand, that I don't expect you to understand, or approve of, but that's the way it is. Our brother is missing, we all need him, we're all here to try and find him.\"\n\nJudy was looking at me in open-mouthed wonder, as was Leon.\n\n\"So Shari's your...sister? Really? You look nothing like each other...\"\n\nShari spoke up.\n\n\"Bobby's my half-brother, we have different mothers. My mother was Indian, and Bobby's mother was English. Everything Bobby told you is the truth; we came here looking for my brother, we know what happened to him to make him leave, all we want is a chance to tell him his family is there when he needs us; we know he has a family here, we don't want to drag him back to England, we don't want him to re-live any of that, we know what pain and sorrow he went through, is still going through. All we want is the chance to tell him that he has us as well, and to let him know that when he's ready, we're going to be there for him, if he'll let us. That's all. All I want is to meet my big brother...and hug my niece as well!\"\n\nJudy looked thoughtfully from Rick to me, to Shari and back to Rick.\n\n\"And if you find him, what then? Maybe he has a life here. Maybe he won't want to be reminded of the life he left behind, maybe he has all he needs right here, have you thought of that?\"\n\nShari wiped her eyes with the back of her glove and squeezed my arm tightly.\n\n\"I hope he does have a life here, a good, happy life; after what happened to him, he needs and deserves all the happiness he can find, or make. All we want is for him to know that we're here, that he has us too, and that it's all finally over. There's only one more thing we need him to know, and...well, I think that's for him, if it's all the same to you, Judy.\"\n\nJudy looked appraisingly at us, but the flat hostility that had been so apparent before was gone now. Now her look was friendly, compassionate.\n\n\"Ok guys, thank you for sharing at last. I hope you find him, I really do, it must be hell, knowing part of your family is missing like that!\"\n\nYaz was hugging Rick closely, her face buried in his chest, obviously affected by Shari's words, Rick stroking her hair as he hugged her, and Judy glanced thoughtfully at her. Leon was looking pretty shell-shocked at all these revelations, turning to stare back at us as Judy towed him back to the house. As we gathered on the back porch, he grinned at us.\n\n\"Whatever you do, don't tell mom you're all brothers and sisters! I could give a shit, but she's kinda old-school Catholic; one hint of this and she'll have you on your knees, so keep a lid on it, guys, and I mean it!\"\n\nWe spent the rest of the morning touring around the town, Leon showing us the various historical landmarks and sites, obviously proud of his home-town. Judy and the girls split away from us, doing some exploring of their own, leaving the three of us to talk in an excellent coffee-shop.\n\n\"So Bobby, isn't it kind of weird, you and...you know, your sister and all...?\" asked Leon, a puzzled expression on his face, and I struggled to explain the connection Shari and I shared, plus the fact that three months earlier I'd never met her or knew she existed, so for me she wasn't my sister, and that I had no place anywhere in my head that she fitted-in as a sister, so no, it wasn't weird at all; to me she was only and always a beautiful, exotic girl who loved me, and I loved her.",
        "Leon got that, and grinned. \n\n\"I don't blame you, man, she's a real babe! How 'bout you, Rick?\"\n\nRick kind of grinned too, all the answer Leon needed. With that we headed back to rendezvous with the girls and go back to the house for lunch. After lunch, Judy excused herself, saying she had to get back to Albany, urgent family business, but that she'd see us soon, and left us to sit and talk with the family, Kathleen and Maria filling us in on Leon's past; we learned he'd grown up wanting to be a fire-fighter, like his father and grandfather, but after his father was killed in New York, the family had moved back to Oneonta and Kathleen had made him promise not to join the Fire Department, so his other great love, cars took over. \n\nAt that point he took Rick and me out to the garage and pulled a tarp off his pride and joy; a black 1967 Chevrolet Impala he'd first seen in a TV show called \"Supernatural\" and had scrimped and saved until he could finally get a broken-down example, which he'd then spent several years restoring. It was a beauty, glossy black paintwork and sparkling chrome, and to my eyes, used to the compact cars of Britain, it looked big as a ferryboat and sleek and menacing as a torpedo.\n\nDinner was once again a happy, relaxed affair, Kathleen pulling out all the stops, as we'd be leaving the next day to go back to Albany; we'd decided we really should be back there in case the private investigator had any more information. We were just passing round dessert when the telephone rang. Leon took the call, and then called Kathleen out into the hall for a quick, whispered conversation. They both came back in, Kathleen giving us us an odd look, before exchanging glances with Leon and nodding to him, so he turned his attention to us.\n\n\"Guys, I'll be taking you back to Albany once we're done here; Judy's in Albany with someone there she thinks you need to talk to, so once we're done, we'll get your stuff together. I wish you could have stayed longer, but Judy says this is real important!\"\n\nRick, Yaz, Shari and I exchanged puzzled glances; what was going on here? Leon wasn't saying anything more, so we finished dinner in awkward silence. Once we were done, Rick and I went and got the bags while the ladies hugged and promised return visits as soon as possible. \n\nConversation during the drive back was limited, as Leon seemed to have no wish to discuss where we were going; all he would say was that Judy had asked him to bring us back to Albany as quickly as possible, and that it was important. To be honest, I was feeling a little embarrassed at the abrupt way we'd finished our visit, eating and running like that, so I was not entirely comfortable on the 90-minute drive back to Albany. \n\nEventually we began hitting the off-ramp signs for down-town Albany, and we took one, driving through what looked like very nice housing developments and older neighborhoods, lots of green spaces and lawns, large, elegant houses set well-back from the road, with large gardens to the front, and wide, sweeping roadways.\n\nWe eventually pulled into the gravelled drive of a large, red-brick house with tall, white-framed windows, and a large Weeping Willow in the centre of the lawn. As we rolled to a stop, the front door opened, and Judy came out with a tall girl with striking red-bronze hair, almost the same titian-red as Shari's, and smoky emerald eyes. She stared wide-eyed at Rick and me, and turned back to Judy.\n\n\"Jude, look..they're so much like...it's amazing, look at them!\" she whispered, while we looked on uncomprehendingly. Judy grinned.\n\n\"I know, told you so. Guys, this is my sister, Ashley. Ashley, this is Bobby, that's Ricky, and these are their girlfriends, Shari and Yaz. Shall we go in?\"\n\nAshley led us into the house and into a large, comfortable family room, with big couches and a bright fire, where she indicated that we take our seats. I was at a complete loss to understand why Judy had brought us here, and was just about to ask her, when a little girl, maybe no more than 18 months or so, came running down the passage and barged into Judy's legs.\n\n\"Judeejudeejudeejudee!\" she crowed, laughing as Judy picked her up and nibbled her neck, making her laugh and giggle even more, before settling her on her hip. She saw the puzzled look on our faces, and grinned.\n\n\"This is my niece, Babs; say hello to the nice people, poppet!\"\n\nThe little girl grinned happily, and flapped a pudgy little hand.\n\n\"This is Ashley's baby, her husband will be along shortly, he has some things he wants to tell you; in fact, here he is now.\"\n\nI was just turning to see this \"husband\" who wanted to talk to us, when he spoke, freezing me in my tracks.\n\n\"Hello Robert, long time no see! You too, Richie! I hear you want to talk to me!\"\n\nRick jumped spinning around, his expression probably mirroring mine, because there, framed in the doorway, looking just as I remembered him, was Nicky, the same tousled dark blonde hair, the same tawny-brown eyes, the same lopsided smile, a little taller and somehow more \"grown-up\", but still Nicky.\n\n\"Nicky...oh my God, Shari, look, it's...it's Nicky, look!\" I whispered, shock, relief, guilt, and sorrow all battling for control of me.\n\nNicky walked into the room and took the little girl from Judy, grinning fondly as she reached up and pulled his nose, then kissed her and passed her to Ashley, kissing her as she took the child from him. He then turned back to face us, his expression quizzical, but not hostile.\n\n\"Judy tells me you came here looking for me, which was kind of a surprise, but here I am. Now you've found me, what can I do for you?\"\n\nI was utterly dumbfounded; I'd resigned myself to weeks, maybe months of waiting for news, and yet the people we'd bumped into by the sheerest stroke of luck had led us right here to him. My mouth worked as I tried to say something, anything, but I was struck speechless.\n\n\"Speak up, Robert, you never had any problem before!\" he grinned, his expression robbing the words of any sting, although, in truth he had every reason in the world to be bitter and hostile, and not one reason in hell to listen to anything we had to say. Shari looked up at me, her expression unreadable, realising I was trying to say so many things that nothing could come out, so she plunged ahead. \n\n\"Nick...Nicky, you don't know me, my name is Shereen Shahida, and my sister Yasmin and I are the daughters of Robert Davies; we're your sisters, you're my big brother, and we've been looking for you. Mummy told us everything she knew about you, what our...what that man did to you, how he hurt you. She didn't know where you were, or what happened to you, but I promised myself that we'd try and find you, because you're my big brother, and I need you as much as I need Bobby and Ricky!\"\n\nNick put his arm around Ashley and squeezed her, smiling at Shari as she stood looking at him, her face pale and drawn, and her eyes glittering.\n\n\"So you're my little sister? Hello sis, and hello even younger sis!\" he grinned, smiling at Yaz.\n\nYaz stared silently at him, her eyes shining, breathing out in a gusty sigh that somehow became a sob. Nicky cocked his head and winked at her, and suddenly Yaz was hugging him, babbling into his chest.\n\n\"We looked for you, we tried to find you, we all did, oh Nicky, we didn't know where you were, I heard so much about you, mummy said you were badly hurt, I'm so sorry, so sorry...!\" \n\nNick hugged her, grinning at Shari, as she too moved in to share in his hug.\n\n\"Sshhh, it's okay, it's okay, shh now, is that any way to say hello to your big brother? Who knew I had such beautiful little sisters!\" He held them both away a little and studied them, his old grin very much in evidence, that charming, lopsided smile of his that had always irritated me so much when I was younger.\n\n\"Judy said you were beautiful, but she was only half-right! All my sisters are knock-outs, just look at you! And now I think you should meet the rest of your family. This beautiful girl here is my wife, Ashley, and this is our daughter, your niece, Barbara.\"\n\nMy heart lurched as he said her name, wonder, guilt and loss warring in me all over again. Nick saw me start at the name, and nodded slightly, obviously guessing exactly what had jolted through me on hearing my mother's name again.\n\nNick pulled Judy closer and hugged her tightly.\n\n\"You've met Judy, my sister-in-law and my best friend, and Leon, my soon-to-be brother in law you already know. My mother and her husband are waiting for us to get acquainted, you'll meet them later. So now, talk to me, Robert, tell me why you needed to see me so badly. I wrote to you, I asked you both to meet me in Carlisle last year, I heard nothing back, so I assumed that was it. So, why are you here, now?\"\n\nShari looked up at me again, checking if I was up to this now, and I nodded, letting her know I was ready for this. We all sat down as I began to speak.\n\nIn a low voice I told him what had happened after our father was arrested and extradited, the way we'd been stripped of everything, how we'd lived, then Rick's disappearance and re-appearance two years later with two sisters in-tow, sisters we'd grown-up completely unaware of. \n\nRick took up the tale, how he'd pieced together enough hints and clues to convince him that he'd found something, and how he had indeed found Shari and her family, and learned what our father had put her mother through. He glanced at Shari, who took it up from there.\n\n\"Our mother was beaten and abused, raped and mistreated by our father for so long, but she couldn't do anything about it, because he threatened us, Yaz and me. When we were old enough, he was going to sell us to his friends!\"\n\nNicky's look of shock and outrage was echoed and magnified on Ashley and Judy's faces. Nicky pulled her close and held her while she trembled, the remembered fear and terror reverberating through her all over again, and it felt right to watch her be held and take comfort in the arms of her big brother.\n\n\"Where's your mother, Shereen, what happened to her?\" he asked her softly.\n\n\"Mummy died, all the beatings, so many injuries...she had a brain haemorrhage, one day she just...died, peacefully, I think, but he killed mummy, just as surely as if he'd throttled her with his bare hands...Ricky found us, mummy took him in, she loved him, we loved him, he was our brother, and he promised her he'd look after us, and he did. Bobby and Ricky have changed, Nicky, I swear, they're different, they're who they should have been. Yaz and me are safe at last, with them, at least give them a chance please!\"\n\nNicky looked up at us, one arm encircling Yaz, his free hand stroking Shari's hair as he glanced from Rick to me and back again, his eyes hooded, distant.\n\n\"I knew that bastard was sick; he's in jail now for the things he did, and he deserves every second of time he'll serve there, but how about you two? What I remember of you isn't good, or happy, and how about Barbara, what about her, what about her memory? She was your mother, you know, I tried to tell you, but you never listened, how do I know you've changed? That part of my life only means hurt and pain to me; why should I let you into any other part of it?\" \n\nRick stood up and moved next to me, taking Yaz's hand and raising her up. Yaz held herself close to him as he spoke.\n\n\"Nicky, all our lives we treated you like an outsider; we thought Barbara was your mother, and neither of you wanted or needed us. Dad always told us we didn't need her or you, and we believed him. I'm sorry I left my oldest brother out, I was wrong, and stupid, and selfish and all kinds of other things. Yaz and Shari, and especially her mother, showed me how wrong I was, they taught me what family really means, and now all I want to do is put mine back together again the best way I can. I'm sorry Nicky, I was wrong, and I want my big brother back. We only found your letter a few days before Christmas, it had been wrongly delivered to an empty house, but we came here to look for you just as soon as we discovered where you were!\"\n\nNicky grinned at me, although there wasn't much humour in his smile.\n\n\"And you, Robert, what do you want?\"\n\nShari reached out and took my hand, squeezing my fingers gently, telling me to tell him everything. I squeezed back just once, agreeing with her.\n\n\"Nick, I came to find you so I could say I'm sorry. I thought Rick and I were going to be big-shot businessmen one day, just like dad, and I learned how to be just like him, and I forgot you were my brother too. What I learned from dad was all so wrong, I know that now; my sisters showed me how wrong I was. I even tried to kill myself, because I worked out how bad it was going to be, but Shari saved me, literally. She made me see that there was another world out there, and she's showing me how to fit into it, how I could be so much better than whatever I was before. I'm still learning, but I do know one thing; I need my big brother to show me how as well. And it's \"Bobby\" now, I'm not Robert anymore...\" \n\nNick hugged the two girls again and smiled enigmatically as Shari slipped her hand in mine and Yaz stayed huddled against Rick.\n\n\"It seems the Davis brothers have a lot more in common than you think!\" he commented cryptically. \"By the way, you should know our family name is \"Davis\", not \"Davies; that sick bastard's real name is Brian Davis, he changed his name to hide me from my mother when she tried looking for me after he abducted me.\"\n\nHe looked behind me into the passageway, and nodded, and a woman in her mid-forties popped her head in the door and smiled at everyone. I could see immediately her resemblance to Nick; not so much the features, but the same eyes, the same hair, the same jawline. This must have been Nick's mother. She in turn looked Rick and me up and down, her eyes flicking between us and Nick, comparing our features. I had noticed the strong resemblance between Rick and Nicky before, but now they were standing side by side, they were almost eerily similar; apart from the hair and eye colour, they could almost have been twins, even more so than Yaz and Shari. Nick stood up and took her hand.\n\n\"Mum, these are my brothers, the tall one is Bobby, the handsome one is Rick, and these two lovely girls are Shari and Yaz, my sisters. Guys, this is my mum, Julia Nixon.\"\n\nI offered my hand, but instead she hugged me, a warm, inclusive hug. She did the same to Rick, and each of the girls, gently hand-combing a large curl away from Yaz's face so she could look at her properly. Yaz smiled at such a motherly gesture, and the ice was broken. At that point little Barbara decided to make her presence felt, and with a grin Ashley handed her to Shari, who sat down with her on her lap, Yaz sitting next to her, the two of them suddenly completely absorbed with their new-found niece. \n\nJulia took my arm and linked her other arm with Rick, speaking so only the two of us could hear her.\n\n\"Thank you for coming, all of you, I'm so glad you came to find Nicky, he needs this, he needs all his family too! Now that you're all here, all that stuff that happened before is finally over. Poor Nicky's been wracked with guilt over what happened, perhaps now he can let some of it go. Who knows, maybe his brothers and sisters can help him do that, you never know. I know how much he loved your mother, I don't blame him; she was all he had, stranded there with that terrible man, and from what I heard, those two girls have the same loss as him. Perhaps all of you can help each other over this now. You're here, and Nicky's family is back together again; before he only had us, now he has you again, or maybe at last. Perhaps now he can find some sort of peace. All of you are going to have to help each other; you know that, don't you? You're brothers and sisters, perhaps now's the perfect time to be just that!\" she smiled, letting us both go with a gentle pat on the arm.\n\nI was a little overwhelmed by all this; such a lot had happened in the last hour, and I was still processing where I was, and who was who, and trying to figure-out what happened next. I looked across at Yaz and Shari, bonding with their niece, talking animatedly with Ashley, fitting-in, and couldn't help but feel that perhaps Julia was right; now was the time to be family again. \n\nJudy slipped her arm through mine and grinned up at me, her little pixie face alight with amusement.\n\n\"Welcome to the Nixon-Davis clan! Don't worry, Leon's still trying to get used to this, feel free to feel a little shell-shocked if you need to!\"\n\nI sat down on one of the couches, and Judy sat next to me, which was good, because I had some questions for her.\n\n\"Judy, when did you put it all together, when did you know or suspect that we were looking for Nick and all?\" I asked her, and she gave me that grin again.\n\n\"You're serious, right? Bobby, as soon as I saw you two at the hotel I knew! Have you looked in a mirror lately? You and Rick are so much like Nicky it's uncanny; I nearly fell over in shock! He once told me what a pair of little shits his kid brothers were, and then to see you two in the flesh, boy was I conflicted! It was a weird sensation, actually seeing in the flesh two of the people Nicky felt he had most reason in the world to hate, looking so much like one of the people I love most in the world! Even the hand gestures are the same. It's still freaking me out, believe me!\"\n\nI had to grin, and agree with her; we had been a pair of despicable little shits, but maybe, just maybe, we'd turned that corner and left that all behind. Something else was also troubling me.\n\n\"Judy, what is Nicky going to say about...you know, Shari and me, and Rick and Yaz?\"\n\nJudy twinkled at me.\n\n\"I think he'll congratulate you on your taste! Tell him, I think you just might be surprised; the Davis boys are a lot more alike than you probably think! Go on, go and ask him!\"\n\nShe seemed to be secretly amused about something, but not in a malicious way, so I followed her advice. Rick was in the middle of being admired by Nicky's mother and Ashley, much to his embarrassment and Yaz's amusement, so I collared Nicky while he was unoccupied.\n\n\"Nicky, can I ask you something?\" I began, and he nodded, walking me to a part of the room not occupied by sisters, wives, mothers and little girls.\n\n\"Okay...Bobby, what's on your mind?\"\n\nNow for it; the only way to ask him was to ask him, so I jumped straight in.\n\n\"What would you say if I told you that Shari was more than just a sister to me, that she and I, and Rick and Yasmin, have a...a closer relationship than just simply being brothers and sisters?\"\n\nNick looked at me for a long moment, then slowly grinned.\n\n\"I think I'd say that you have incredibly good taste, both of you, they're exquisite!\"\n\nI breathed a sigh of relief, but now my curiosity had gotten the better of me.\n\n\"So you don't think it's wrong...or immoral, or anything like that?\"\n\nNick looked at me, then glanced over at Ashley, and I was struck how much she had in common with the girls; tall, slender, beautiful, deep red-bronze hair, large, expressive eyes, and something began to click inside me. Nick saw the direction of my glance and pulled me closer, so he was almost whispering in my ear.\n\n\"My mother's name before she married David, my stepfather, was Lowry, Julia Lowry; Ashley's maiden name was also Lowry...\"\n\nI listened uncomprehending for a second, then it clicked into place; Ashley Lowry, Nick's mother was Julia Lowry, of course; Ashley was his sister! Now Judy's offhand remark about the Davis boys being a lot more alike than we suspected suddenly made sense; that, and Nick's cryptic comment along the same lines a few minutes ago!\n\nI gaped at him, and he grinned happily.\n\n\"When I first arrived here, almost the first person I saw was Ashley; and I couldn't take my eyes off her, or stop thinking about her. We met on the first day I arrived here, and we've been together ever since. I felt about her, and I still do, the same way you probably feel about Shari; she's beautiful, she loves me, I love her, the \"sister\" thing didn't matter to us then, and it doesn't matter to us now.\"",
        "He stopped talking for a second to look at Ashley, happily chatting to the girls as little Barbara clambered over all of them, then carried on.\n\n\"I think I know why, too, and it's probably the same for you. Ashley and I didn't grow-up together; she was born long after I was abducted, and she was already an adult when we met; I was just a vague story about something that happened a long time ago, so there was no 'sibling bond' or anything like that. Ashley explained it to me once; apart from that one family relationship through a shared parent, we have no other connection, no life together as siblings, so it was easy for us, just as it was probably easy for you, and for the same reason. Or perhaps we just have a twisted gene that makes us bunk-up our sisters!\"\n\nHe grinned as he said it, and I breathed a sigh of relief, and then sensed someone standing behind me. I turned, to see Nick's mother standing there. She put her arm through mine again, and reached up to stroke Nick's cheek.\n\n\"I heard what you both said, and Nicky's right; if Shereen's the girl for you, then that's who she is. When Nicky and Ashley first got together it bothered me, and made me angry, but no-one in the world had ever loved her like Nicky did, she was his whole world, and he was hers, and I eventually saw it too. My husband loves her like a daughter, he thinks of her as his daughter, just like Judy and our little girl, Rachel, and he couldn't have wished for a better husband for her than Nicky, so these things do work out, it just takes a little effort. Forget about what happened in the past, that doesn't matter now, but if you're anything like Nicky, then you've got it in you to make it work too, just let her know once in a while how you feel about her!\"\n\nShe smiled, and piloted me back into the centre of the family to meet her husband, Nick's stepfather. Doctor Nixon came across as a good man; Ashley obviously adored him, as did Judy, his own daughter. I noticed Ashley called him \"dad\" as often as Judy called Julia \"Mom\", so there was obviously a lot of love there, and Nick was just as obviously deeply in love with his little sister, four year-old Rachel, looking sleepy and shy and just adorable in her little 'Pok\u00e9mon' nightdress. \n\nI was sitting quietly for a moment while Nick and Leon went to get coffee for everyone, when Doctor Nixon sat down next to me. I'd found him incredibly easy to talk to, he seemed to be able to draw things out of me that I had no intention of mentioning, but he did it so well, and so unobtrusively, that I found myself talking with him like an old family friend.\n\nSomehow, I found myself telling him about Barbara, and what Shari's mother had told Rick about how she'd died, that our father had murdered her, how he'd boasted to her what he'd done, how he did it, and what he did to Nick.\n\nDoctor Nixon looked at me levelly.\n\n\"I saw what Brian Davis did to Nick; I treated him for some of it myself. When Nick came here his back and shoulders were a mass of cuts and welts, his clothes were blood-soaked, and he was suffering from post-traumatic shock, almost like those poor boys coming back from Iraq; he was a mess, and that man boasted of it, did he? Well, I'm not surprised, but you don't know the half of it; he blackmailed his associate here to rape and beat Julia, as her punishment for leaving him; he didn't get to her, but poor Ashley walked into the middle of it, and she took what your father had set in motion.\"\n\nMy shock at hearing this, at the final knowledge of just how depraved and evil my father was, must have shown, because Doctor Nixon clasped my shoulder, a warm, human gesture as I let the shock and horror wash out of me. He looked at me sympathetically as I tried to come to terms with what I was hearing. Just then, Leon handed me a coffee, so I took a long sip, letting the rich brew calm me as Doctor Nixon waited. Eventually I was braced enough to hear the rest of what he had to say.\n\n\"Please, go on, I know there's more, so please, finish what you were telling me.\"\n\nHe looked appraisingly at me for a moment, then continued.\n\n\"Ashley became an outcast at her school after what...happened to her. No-one but Judy was there for her, the others called her names, shunned her, she had no friends, no social life, none of the things a teenage girl should have. Her mother had no money for new clothes or the latest fashions, and that made it worse; the whole school treated her like some kind of pariah, because of what that man had done to her. They used to call her \"Rag Doll\", and she only had her mother, and Judy, and it was the two of them against the world.\" \n\nHe paused, staring reflectively into his coffee cup, before continuing, his voice soft and far away.\n\n\"Only my Judy was there for her, something I will be proud of until the day I die; that my girl stepped up and stepped in front of Ashley, and faced down the bullies and the name-callers for her friend.\"\n\nHe paused to take another sip of coffee, then continued. \n\n\"It took Ashley a long, long time to get past that, and it was only because of Nicky that she managed it at all, and is who she is today. When I first met her mother, I was filled with admiration for her; she'd managed to make a life for her daughter and herself out of the shards and splinters of her old life, and that is just one of the reasons I married her. Now, Ashley's my daughter, Judy's her sister, and Nick is my son, and they're happy, they're a family at last. Brian Davis has caused a lot of misery and heartache for his family and the people around them, but now he's caged-up in a place where he can sit and twiddle his thumbs for the rest of his life while he thinks about what he's done.\"\n\nHe paused, and looked penetratingly at me.\n\n\"Nicky, however, still needs help; he's still mourning for his mother, which is how he thinks of Barbara; he believes he left her to die, that he somehow caused her death, and he thinks he needs to atone for it. We've done all we could, but you, his family, are going to have to help him out of that, he can't do it himself; will you help him?\"\n\nOf course I agreed; how could I not? With these final revelations of the true depth of my father's evil, all those little things inside me, the parts of him I hadn't yet exorcised now dissipated, and I was finally free of every molecule of him and his influence. I noticed the little girl, Rachel, standing next to me, yawning sleepily and staring shyly at me, so Doctor Nixon beckoned her closer, grinning as she climbed on his lap and twisted round to look at me again.\n\n\"Bobby, this is Nick's littlest sister; Rachel, say hello to Bobby!\"\n\n\"Hello Bobby, my name's Rachel. Why do you look like Nicky?\"\n\nI held out my hand and she took it, clambering from her father's lap to mine.\n\n\"I look like Nicky because Nicky's my big brother, just like he's your big brother!\" I told her, watching her puzzled look as it slowly cleared up.\n\n\"Are you my big brother too?\" she piped, her head tilted adorably to one side. I looked at her father, unsure what to say, and he shrugged and nodded, so I grinned back at her.\n\n\"Yes, yes I am; and see that man over there? His name's Ricky and he's your big brother too!\"\n\nNicky came over and tousled her hair, grinning his familiar lopsided grin at her.\n\n\"What are you doing out of bed? Come on, trouble, before mommy catches you!\"\n\nRachel jumped up and hugged Nick as he picked her up.\n\n\"Read to me Nicky, pleeeeaasse! Read me some more about Pooh and Pig-uh-let, pleeeeaasse?\"\n\nNick lifted her up and smiled at her.\n\n\"Alright, but only a few pages, okay? Say goodnight to Bobby, pumpkin!\" She nodded and dimpled at me.\n\n\"Nicky and Ashley took me to the 100 Acre Wood and showed me where Pooh and Pig-uh-let live, and the Woozle, and rabbit's house, Nicky knows Pooh and rabbit, and the Heffalump, and everything! Goodnight Bobby!\"\n\nI watched them leave, and felt a hand on my shoulder; it was Shari, a small smile on her lips.\n\n\"Who'd have thought you'd be so good with children, Bobby? You know, I really do think you'll be okay! And now we have to go, but Ashley and Nicky will be coming to the hotel tomorrow morning, we have things to talk about, you know what, so let's say goodnight, baby, we'll see them again tomorrow, don't worry.\" \n\nLeon drove us back to the hotel, and walked up to our room with us, hugging Yaz and Shari goodnight and shaking hands with me and Rick, before telling us he'd see us again at the house before we left. He still had a while left of his unspent vacation time, so he wanted to spend some time with us, and Judy definitely wanted to spend some time with the girls again; as she'd pointed out with a grin, Yaz and Shari were kind of, sort of, something like, her sisters too, and she wanted to get properly acquainted with her extended family.\n\nWhen Leon had left, I flopped back on the bed, the events of the day crowding together in my head as I tried to make sense of everything that had happened on such an eventful day. Twelve hours ago we'd been having breakfast in a small upstate town, planning on getting back to Albany so we could quiz the private investigator. Now suddenly Nicky was back; he had a wife, a daughter, a mother and father, and yet another little sister. \n\nMy head was running close to overload, I needed to sleep on all this, because the worst was yet to come; in the morning we had to tell him that he'd been right, that his beloved Barbara had indeed been murdered, and we had the proof. I yawned, the crowded day catching up to me, and Shari bounced onto the bed next to me, jarring me into wakefulness.\n\n\"Wakey-Wakey, Sleeping Beauty! I told you, you owe me, time to pay up, buster, come on, get naked, I want to play!\"\n\nI grinned and pulled her against me, my hand snaking down to grab and squeeze her taut little bottom. She grinned back at me, and gently bit my chin.\n\n\"So you are awake, after all! Good, my turn Bobby, and tonight I want something special!\"\n\nI looked questioningly at her hoping for a hint, but she just smiled minxily and bit her bottom lip, the one gesture I have no defence against. I struggled to sit back upright as she began to strip-off, popping her jeans and lying back so I could tug them off her. Underneath she just wore small thong panties, and once she pulled off her tank-top she was naked, except for those panties. I had managed to get my jeans, sweater and polo shirt off, and was left in just my shorts, with the evidence of my arousal plain to see. Shari smiled as she reached out to grab me, squeezing as she scooted closer to kiss me firmly.\n\n\"I love you Bobby, and because I love you, I want you to do something special for me tonight. Will you do that for me? You'll like it, I promise!\" she asked, punctuating her words with little kisses.\n\nOf course I agreed; I loved her, and anything she wanted was okay with me. Shari smiled at my acquiescence and slid her hand inside my shorts, holding and squeezing my cock, then pumping it gently as she rubbed her thumb gently over the end, spreading the lubricant pouring from me over the head and along the shaft. My own hand was just as busy, rubbing and caressing her damp pussy, teasing the lips apart as we kissed, feeling the little stiff bud of her clitoris harden and throb against my caressing fingertips. \n\nShari was gasping softly as I frigged her, her own hand pumping and rhythmically squeezing me as we touched and stroked each other. I pushed my shorts down as Shari pulled her thong off, and now we were both completely naked, a fact Shari took full advantage of by sucking my cock into the back of her throat. I lay back and lost myself in the sensation as she suckled on me, her tongue soft and warm and delightful against the sensitive flesh of my glans. I tried to urge her to move over me, so I could return the favour, but she shook her head and smiled at me around my cock as it stretched her lips wide open. \n\nI leaned back again, enjoying what she was giving me so freely. Then she released me and slid up next to me, kissing me lightly before throwing a leg over me, to straddle me. I like this position, I love to watch her move, all her muscles moving together in harmony, a sleek wildness about her, absolute perfection of movement in her blend of smooth coordination and blazing sensuality.\n\nShari grinned and raised-up momentarily, her hand grasping me as she aimed me, then slid slowly, smoothly down onto me, taking me into herself in one long, agonisingly sweet moment of heat and wet succulence. She rested her hands flat on my chest and began to rock, sliding herself on me as she squeezed me with her internal muscles, riding me like a slow-motion rodeo rider as she pleasured herself. Her breasts danced and bobbed in front of me, her nipples fat and swollen, thick as my fingertips in her arousal, and without thinking I reached out to take them, cupping her beautiful small breasts as I gently pinched and rolled her nipples between my fingertips.\n\nNow she began to speed up, working herself against me, grinding her pussy against me as her breathing quickened. The end came quickly, her eyes closing as her breath sobbed in her throat, her pussy tightening around me and pulsing as her orgasm flared and crashed through her. \n\nShe lay down atop me, her heart racing as she fought for breath, her pussy still pulsing and twitching around me as the aftershocks thrilled through her.\n\nAfter a while, I became aware of two things; her hand was working away behind her, and she was biting her lip again, something she only did when she was up to something. I hadn't orgasmed, and was still bone-hard inside her, waiting for what she wanted to do next, this mysterious \"special\" thing she wanted to do with me. Suddenly, she sat upright, and took hold of me, squeezing me a couple of times to check whether I was still interested, as if she needed to check that! \n\nApparently satisfied, she rose up off me and held me in place, then slowly lowered herself, but now it was different; I couldn't fit into her, it was so constricted, it felt like my cock head was being squeezed in a clamp, and then I suddenly realised what she was doing, where she was putting me.\n\nShe must have seen the realisation dawn in my eyes, because she grinned that slow, sly, minxy grin she did so well, her eyes hooded, and squeezed her nipples with her free hand, while looking me in the eyes.\n\n\"There Bobby, is this naughty enough for you, you're going somewhere naughty, do you like it, baby, do you like being naughty with me?\" she murmured, slowly slipping down on me until, with an almost audible pop! I slipped into her tight anus. Shari gasped as she slid all the way down my shaft, my cock feeling like it was being squeezed in a moist velvet fist along its entire length. I gasped out loud, Shari echoing me as she ground herself down against me, my hands automatically reaching for her perfect little buttocks and pulling them apart as she leaned down to kiss me.\n\n\"This is for you Bobby, I love you, baby!\" she whispered as she began to slowly pump herself up and down, the ring of her anus squeezing and pulsing around me as she gyrated on top of me. I'd seen pictures of this, of course, and fantasised about it; before she'd come into my life my sex-life consisted of the porn magazines I'd managed to acquire, but I'd never seriously thought it could ever happen to me for real, and now it was, and it was the most heart-stoppingly erotic thing in my entire life. As she rolled her hips and pumped against me, her muscles squeezed and milked me, and I knew I couldn't hold out for long, not with her gyrating and milking me like that, and I was right.\n\nI came with a sudden build-up of the pressure in my groin, my scrotum, and deep inside me; something wanted to explode inside this girl, and it wouldn't be denied. I cried out in ecstatic agony as I came harder than ever before in my life, my cock actually burning with the pressure and force of my ejaculation, long, sweetly agonising bursts of spunk blasting out of me and deep into her bowels, painting her insides with my seed.\n\nShari slumped down against me, her own orgasm triggered by mine, both of us moaning and shuddering as deep-swelling waves of pleasure crashed and thundered through us; my ears popped, and all sound disappeared in the high-pitched singing note that filled my head as I emptied myself into my beautiful girl in pulsing jets of high-pressure spunk.\n\nFinally I was done, I was empty, I had no more to give as the aura of orgasm faded and sanity and senses returned, leaving Shari clasped tightly against me as my heart and breathing slowed and calmed down again. After a long, still silence, I felt myself fading, my cock slowly slipping from her as it softened. Shari drew a long, shuddering breath, and raised her head to nibble my chin.\n\n\"Bloody hell, Bobby, that was incredible, wherever you got that from, I want some more! I need a shower now, look what you've done to me!\"\n\nSomehow we both managed to stagger into the wet-room for a much needed shower, and then back to bed, to sleep; we were both exhausted from that incredible experience, and we needed clear heads for the morning. None of us, Yaz, Rick, Shari, myself, was eager for that meeting, but we owed it to Nicky, because he needed to know the truth.\n\nThe beeping of Shari's 'phone alarm finally dragged me out of my deep sleep, confusion once again ruling for a few seconds as I tried to work out where I was; I'd been dreaming about when we were young, long before all the bad stuff had happened, and it had been so real, so vivid, that I had to consciously shift mental gears from dream to reality. I was rested though, and as I stretched luxuriously, Shari opened her eyes and yawned, huddling down under the covers and pushing her warm little bottom into my lap. I was tempted to hug her closer while I grabbed another 40 winks, but I couldn't; Nicky was coming to see us, and we had things to say, things he needed to know, and something to give him.\n\n\"Come on, up, up, up!\" I patted Shari's firm, juicy little rump, \"Up and at 'em, babe, things to do, people to see, let's go!\"\n\nShari groaned as she pulled the bed-covers even tighter around herself.\n\n\"It's still dark, Bobby, what time is it?\" she groaned, and when I told her it was 6:45 a.m. she looked at me incredulously.\n\n\"Bobby, it's the middle of the bloody night, go back to sleep!\"\n\nI had to grin; for several years now my day had started at four in the morning, and for me 6:45 was a late start, but Shari obviously wasn't an early-morning person. However, Nicky and Ashley were due at nine o'clock, so...\n\nI jumped out of bed and stripped the covers off her, Shari holding on to them like grim death as soon as she realised what I was doing, but I soon had them off her.\n\n\"Bobby, it's too early, just a few more minutes, pleeeeaasse!\" she whined, and much as I would have liked to just let her sleep for another couple of hours, we had this thing with Nicky to finish.\n\n\"Nope, up you get, we need to get showered, dressed, and have some breakfast before they get here, so come on, Shari, don't you want to see Nicky and Ashley again?\"\n\nThat did the trick. She sat up and scowled at me.\n\n\"When this is over, I'm getting you for this, just you wait and see!\"\n\nI just grinned, making her even more annoyed, but she slid off the bed and stood up, stretching, and at the sight of her slim, lithe body, parts of me stood up as well. Shari saw that immediately, and grinned happily.\n\n\"Oh look, did I do that?\" she smiled, and I nodded, and she undulated closer, until she could take me in both hands.\n\n\"Shall I take care of this for you, baby?\" she murmured, her eyes hooded and mysterious, and I nodded again, happily waiting for her next move. Boy was I in for a rude awakening!\n\nShari suddenly pinched the base of my cock between her fingernails, making me jump.",
        "\"You drag me out of my nice, warm bed at some ungodly hour and then expect me to thank you by getting wet and wild with you? I don't fucking think so, Bobby!\" she gritted while my eyes bugged out of my head.\n\n\"Remember one thing, Bobby; if you want a long and peaceful life, Shari sleeps late, got it?\"  \n\nI closed my eyes as I nodded; disagreeing with her right now seemed foolhardy, seeing what she was holding. Shari waited for a few more agonizing seconds, then let go of me.\n\n\"See Bobby, that's what you need to learn; in any negotiation-type situation, always make sure you negotiate from a position of strength; mummy taught me that! Now, let's go and have a nice shower, eh?\" \n\nI couldn't help but grin as she led me to the wet-room; Shari was always so compliant, always happy to let me take the lead, but, when she really needed to make her point, she had some pretty persuasive techniques to enforce her will, and the willingness to use them when needed. Luckily, by the time I got around to soaping her back she'd forgiven me for rousting her out so early, and promised me a treat later to say sorry for threatening my best friend.\n\nBy the time we were dressed, had made up the bed again, and were ready to order breakfast, Yaz and Ricky had joined us, so we called down and ordered a light breakfast, then sat around chatting while we waited for Room Service. We also had some things for Nicky, so Shari and I checked they were to hand, and Shari gave me another long and tender kiss to apologise for earlier, this time with extra squeezing, which meant I had to wait before rejoining the others, as I refused to walk around in front of Yaz with a tent in my trousers...\n\nWe were at the coffee stage when there was a knock at the door. Rick answered it, and ushered Nicky and Ashley into the room. Once the niceties were dispensed with, we sat around the table, six of us, all family. Nicky poured Ashley a coffee, and one for himself, then leaned back in his chair, that trademark grin and slightly raised eyebrow so much in evidence.\n\n\"So Bobby, I hear tell you guys have something for me, so tell me, I'm agog here!\"\n\nShari left the table to pull something out of her case, and came back to the table, handing Nicky a photograph album.\n\n\"We found this in the house, stashed in one of the attics; I think it belongs to you, Nicky.\"\n\nNicky opened it, his eyes widening as picture after picture of Barbara was revealed, each page filled with his memories of his mum. His face remained expressionless as he leafed through the album, but his eyes filled, a tear eventually spilling out and running unheeded down his cheek to drip from his chin. Finally, he came to the end, and closed the album, passing it to Ashley, who looked at me in enquiry. I nodded, so she opened it, seeing for the first time images of Nicky's beloved Barbara, and pictures of Nicky as a toddler, a little boy, a schoolboy. Her lip quivered as she looked through the album, her eyes flicking occasionally to Nicky, who sat impassively until she'd finished leafing through it, finally passing it back to him.\n\n\"Thank...Thank you for this,\" he faltered, \"it's ...\" he broke off, swallowing several times, his throat clicking dryly. Yaz passed him a glass of water, which he accepted gratefully.\n\n\"Thank you, all of you; I never had anything of her, now I have this, thank you...\"\n\nAshley pulled his head down into the angle of her neck and shoulder, her hand stroking his hair while she held him, her own eyes bright with unshed tears. Both Yaz and Shari were similarly affected, their eyes also brimming with tears in sympathy for their big brother's pain and loss. Nicky pulled his head away from Ashley and looked at us, all four of us, as we waited for him.\n\n\"Thank you, I don't know how to thank you, really...\" stopping as Shari held her hand up.\n\n\"Nicky, there's more, and I don't know how to tell you, so I'm going to let you read it; then you'll know, and maybe you'll know what to do next. I wish there was another way, something other than this, but it's all we have. Nicky, mummy wants to talk to you, will you let her?\"\n\nNicky looked puzzled, uncomprehending, but nodded. Shari went back to her case, and pulled out a thick buff envelope, which she brought back to the table and handed to him.\n\n\"Nicky, this is an affidavit my mother swore out a few days before she died. It concerns you; please read it.\"\n\nNicky looked at all of us, then opened the envelope and pulled out the thick sheaf of documents. We all watched as he unfolded the papers and began to read, watching his face alternately pale and darken, his jaw muscles bunching as he clenched and unclenched his teeth, and the occasional tremor in his hand as he read page after page. I knew what was in that terrible document, I had read it, and it had made me sick, and outraged, and deeply grateful that Robert Davies (or Brian Davis, or whoever the hell he really was) was caged up 24 hours a day in a super-maximum security federal prison, and would stay there forever. Just remembering what I had read in that affidavit made the rage churn and roil in the pit of my stomach all over again, but I knew I must be feeling only a pale shadow of what poor Nicky must be feeling right now.\n\nWe sat in silence, hardly daring to move, as Nicky read each page, finally folding the document and pushing it back into the envelope. He sighed, a deep, tremulous sigh, then stood up, motioning us down when we would have stood as well. \n\n\"No, guys, please, I just need some air, I...\" he paused; his mouth worked, then he turned and walked out of the room. I knew Nicky's expressions of old, and right now he was furious. I made to follow him, but Ashley shook her head.\n\n\"No Bobby, leave him, he'll come back when he's ready; he just needs to think, he'll be okay, don't worry about him. Do you mind...?\" she asked, picking up the thick envelope. I shook my head.\n\n\"No, not at all; you're family, so this concerns you too.\"\n\nAshley began reading through the document, her face paling and her eyes hardening as she worked her way through it, finally folding it and pushing it back into the envelope, then drummed her fingers for a moment on the tabletop, her face pale and angry, before looking at Shari, her eyes once more bright with tears.\n\n\"Shereen, Yasmin, can we talk? Somewhere private?\"\n\nYaz indicated the connecting door into her suite, and led the way, Shari trailing a hand across my arm before following the other two girls, and closing the door behind her. Rick and I sat and looked at each other; no conversation seemed appropriate, and I had nothing to say; crunch-time was here, maybe soon we'd find out if we really had Nicky back, or if he was lost to us forever. \n\nThere was no sound coming from the other suite; with the door closed, it was effectively soundproof, but we listened-out anyway, to try and maybe get a hint of what was being said; they probably weren't arguing. Ashley had looked like she needed a shoulder, not an argument, as did the girls; seeing Nicky so affected had obviously reached into them as well, and they probably needed some girl-time right now. Rick and me sat and waited, silent and thoughtful, wondering if we'd see Nicky again today, or any time soon. \n\nAfter what seemed like several eternities, but was probably no more than 15 or 20 minutes, the door to Yaz & Rick's suite opened and the girls came in, looking like they'd all had a good cry, but also calm, and oddly, upbeat as well. Whatever had been said had obviously done all of them some good. As they seated themselves, there was a knock on the door, and Yaz opened it, to find Nicky there, looking pale and drawn, but no longer furious, no longer expressionless. Yaz slipped her hand into his, and he patted her hand and smiled distractedly at her as she led him back to the table. He'd obviously been thinking and he began speaking almost before he'd sat down.\n\n\"Thank you, all of you. I wish I'd come here better prepared for all this, but now I know, that's the main thing. There's just one thing I have to know, Shereen; why did you show me that thing? I was starting to get past all that; going to see her helped me start to let her go; why did you bring this all back to me?\"\n\nShari shared a quick glance with Ashley, who nodded.\n\n\"Nicky, we brought you this because I thought you'd know how to get that fucker to pay for everything he did; the authorities in England didn't do much, they just handed him over like he wasn't any concern of theirs, and that's just wrong! Just like you, Bobby and Ricky need closure too, and they need justice, so do I, and Yaz, and Ashley, and I thought this was the place, and you were the one to help. You helped get that filthy bastard caged-up in the first place; please help us find a way to make him pay for everything else; he killed mummy, Nicky, he has to pay, he hurt her, and he hurt her, and she died!\"  \n\nNicky started at that, his hand going out to take Shari's hand as two tears ran down her cheeks, pulling her close and holding her against him as she cried silently, stroking her hair as he soothed her. When she'd recovered somewhat, he fished out a handkerchief and dried her eyes, Shari smiling wanly as he did so.\n\n\"You're right, Shereen, he did, and I forgot that, I'm sorry, I won't let that happen again! All my sisters have reason to make that bastard pay, so let's do just that. David, Doctor Nixon, has an old friend with the FBI here in Albany, maybe he can somehow use this to put that bastard back to trial, this time on murder charges; he killed Barbara, he caused your mother's death, he did...what he did to Ashley, you're right, he should pay!\"\n\nShari wordlessly hugged him, then gently kissed him on the cheek.\n\n\"Thank you Nicky, thank you for being my big brother! And Nicky, my family calls me \"Shari...\"\n\nNicky grinned, his face losing some of its pallor, suddenly looking again like the Nicky I remembered.\n\n\"I'm sorry...Shari, and what should I call you, little-little sister?\" he grinned at Yaz.\n\n\"Everyone calls me Yaz, so should you...bigger Big-Brother!\" she retorted, grinning cheekily. \n\nAshley cleared her throat.\n\n\"Actually, Yaz, you'd be little-little-little sister; I'm older than you, you know!\"\n\nRick looked puzzled, then understanding flared in his eyes.\n\n\"You mean...?\" and Nicky nodded. \n\n\"That's right, Ashley's also my sister, my half-sister actually, which sort of makes her your sister too, although I'm buggered if I know how; I think we need a new word in English for 'the wife of my brother who is also my brother's sister, but is no relation of mine; \"sister-in-law\" doesn't quite seem to cover it...!\"\n\nRick leaned back and grinned.\n\n\"I tell you, when our family sets out to blur the lines, we do a bloody good job of it!\" which brought chuckles from around the table.\n\nYaz seemed to have something on her mind. Nicky noticed and asked her what was up.\n\n\"Nicky, mummy said you were badly hurt, that our fathe...Robert hurt you; did he do that?\" she indicated the scar above and running the length of his right eyebrow.\n\nNicky grinned. \"No, I got jumped by a tree, but one day my daughter's going to think I got it when I fought a bear, so keep it to yourselves, OK?\"\n\n\"It was my fault he got that!\" said Ashley, her eyes on Nicky as all our eyes swivelled to her. \"I left him in the forest at night, I got angry with him when he told me what your father had done to me, and I abandoned him, and he could have died!\"\n\nNicky was by her side in a flash, holding her against him.\n\n\"It was a long time ago, baby, let it go, I did, it happened, it's long over, leave it, please!\"\n\nIt felt good to see Nicky, the one who'd always been left out, be so much in love, to have someone who loved him so much, and to finally be happy. He looked into Ashley's eyes, and smiled at her.\n\n\"It's all over baby, it's gone, I promise you.\" She looked up at him, her face set and resolute.\n\n\"Show them, Nicky, show them what he did; your family needs to see what happened to you, what he did to you. Please Nicky, just show them!\" \n\n\"Ashley, please...\" he began, but Shari cut him short.\n\n\"Show us what, Nicky? What happened, what did he do to you?\"\n\nAshley looked at him and nodded, and he slowly nodded, and pulled off his jacket and the black \"Mark One\" polo shirt underneath and turned his back to us.\n\n\"Ooohh fuck!\" exclaimed Rick, with shocked gasps the only sound from Shari and Yaz. I turned my head away, sickened by the sight before me; Nicky's back was a mass of criss-crossing red welts, from his shoulders to the small of his back, some of them 6 inches long, so many there was virtually no unmarked skin visible between the welts, mute testimony to the savagery of the beating he'd taken.\n\n\"Dad...did that?\" Rick whispered, \"How?\"\n\nAshley snorted.\n\n\"He used his belt buckle, like he always did, it was his favorite tool; my mom has some like that on her back as well, but nothing like that. When Nicky came to us, he looked like he'd been flayed alive, it took a year for his back to heal, and he won't admit it, but I know it still hurts him; that bastard damaged so many nerve-endings it'll never stop hurting. I guess this is what he meant by 'a Father's true legacy!'\" \n\nShari had tears in her eyes as she picked up his shirt and handed it back to him, and hugged him as he pulled it down over his head. Nicky held her tightly, his hand against the back of her head as she buried her face in his neck, then Yaz and Ashley joined them in a group hug, Nicky suddenly in the middle of a triple sister-hug, three beautiful girls holding him as tightly as they could.\n\nWhen the girls had let him go, and more or less got their emotions under control, Nicky called his step-father and explained what we'd shown him. They chatted for a few more minutes, then Nicky hung up and smiled at all of us.\n\n\"Dad's calling his friend at the FBI, hopefully he'll want to see this right away, and dad and mum will swing by later so we can have a proper family talk over lunch.\" He seemed pensive, then cocked an eye at me.\n\n\"The only thing here that I find strange is that you guys come to Albany to look for me, and the first person you bump into is someone who knows me, and is engaged to my step-sister; as far as I'm concerned, that's stretching coincidence just a little too far, but then, it's not the first time...\" \n\nI looked at him questioningly, so he told us a story about when he'd come home to see Barbara's grave, they'd left the cemetery and were on the motorway back to their hotel, Ashley had flicked on the radio, to hear the DJ play a record request from Barbara to Nick, the Beach Boys' \"Little Saint Nick\", Barbara's nickname for Nicky growing up. \n\nRick and I exchanged glances, and Rick nodded, so I told them about why we'd helped Leon in that alleyway; because I'd heard Rick's voice, as clear as day, shouting \"help him!\", while Rick asserted he'd heard me tell him to help Leon, which is why he'd jumped in. Whoever had called out, though, the result had been that we'd befriended the one person who could lead us straight to our missing brother. Coincidence? Ashley didn't think so.\n\n\"Bobby, Rick, I think someone wanted you to meet Nicky, I think they wanted it real bad, because here you are, and here he is. Maybe this 'Guardian Angel' business has something to it after all, or perhaps it's just that so much has been set in motion, it was time for all of you to meet-up again; sometimes fate does take a hand, maybe this is one of those times!\"\n\nWe talked in this vein for a while, gradually moving on to our lives and what we were doing now. I was intrigued to hear that Nicky was the boss at his lace of work, the \"Mark One\" logo was the emblem of the company he worked for; in fact, he, Ashley and Judy were co-owners of Mark One Auto Engineering, with a new auto shop opening soon, a specialist shop where they were going to build replica and road-race vehicles and high-performance engines. Leon and Judy were getting the shop as a wedding present, when they married after she graduated from medical school, but it was still a secret, so all Leon knew was that he was going to be lead mechanic at the new shop. \n\nShari and Yaz gave him a little of their background working in the property business with their mother, and told him about the house we'd bought to redevelop, which was how we'd found the letter that had brought us here. We'd chatted for what only seemed like a few minutes when Ashley's phone rang. She answered it and spoke briefly.\n\n\"OK guys, that was mom; they'll meet us in the restaurant in 10 minutes.\" \n\nI looked at my watch and was amazed to see we'd been talking for over three hours, and now it was gone 12:30, lunchtime. The girls all refreshed their makeup, although they really didn't need any; we Davis men had incredibly good taste when it came to our women, because apparently we'd all picked bronze-haired goddesses.\n\nWe'd just taken our seats in the restaurant when David and Julia joined us. Now that I had leisure to see, I was struck by how much Nicky resembled his mother; sure, he looked like dad, so did Rick and I, but Nicky's hair and eyes, the way he held his head, and especially his profile, all pure Julia. \n\nDavid was smiling and friendly, once again impressing me with how calm and urbane he was; Nicky had done amazingly well to snag him for a step-dad, he gave off the \"good-guy\" vibe in big loud waves, and Rick and the girls were obviously feeling it as well. Julia looked amused that all of us were responding so well to David; obviously she'd heard stuff about us from Nicky, all true, and was having trouble reconciling that image with the new us, but she didn't look like she was holding any grudges.\n\nAfter a few pleasantries, and some banter as we ordered lunch, David asked if he could read the affidavit document. He read through it while we waited for our starters, then read through it again, his face becoming set and drawn, his lips thinning to two bloodless lines, and his jaw muscles trembling and rippling as he clenched and unclenched his teeth. \n\nEventually he put it down and looked at all of us, his eyes hard and angry, and wiped his forehead with his handkerchief. Julia stroked his cheek, her eyes concerned.\n\n\"David, what's wrong, darling, what is it?\" she asked, and David leaned back in his seat, visibly trying to relax his arms and shoulders.\n\n\"I've never in my life...read this, Julia, it's the vilest, most disgusting...dear God, how can anybody sink so low...the FBI will definitely need to see this; God, it's like wading through a cess-pit!\"\n\nJulia raised an eyebrow as she took the document from him, her expression becoming set and drawn as she read through it, to finally drop it with a deep sigh, her bottom lip trembling as she unconsciously wiped her hands on her jeans.\n\n\"He really did all this?\" she whispered, and Shari nodded.\n\n\"We were there, we saw what he did to mummy, we watched as he beat and abused her, stole everything from her, and she couldn't do anything; he threatened Yaz and me, he even tried to rape Yaz, but she managed to get away. Everything in there is true; I took an oath when I swore it was a true account, I stand by it now, so does Yasmin!\"\n\nJulia reached across and cupped her face, her eyes filled with outrage, but also sympathy and compassion. She gently brushed a strand of hair out of Shari's face and smiled gently.\n\n\"He's in jail now, and he will be for the rest of his life; that's punishment enough, and maybe even justice. What more can we do?\"\n\nShari's face set in harsh lines, her anger just below the surface.\n\n\"That's not enough! Caging him up isn't justice; perhaps now, with this, we can put a rope around his filthy neck! Brian Davis has too much to answer for, he deserves to die for what he did, maybe now we have a way to make him pay for mummy, and for Barbara! No hell is too much for him, he deserves to burn!\"",
        "Julie put both hands on her face, pulling her round to look into her eyes.\n\n\"No, Shereen, stop that! Don't think like that! Revenge is a dead-end street; the punishment he's living now, a cell deep underground for the rest of his life, that's enough, that's a death sentence for a man like Brian Davis. Don't be like him; if you let him in, you become like him, and he's won; don't give him that! He's a killer, and he deserves his punishment, but don't be so ready to take a life; that's what he did, and now look where he is. Let the system punish him, he's earned it!\"\n\nShari stared defiantly at Julia, her eyes hard and unforgiving, then suddenly her face crumpled and two big tears ran down her cheeks. Julia pulled her close, holding her against her shoulder as she sobbed silently. I went to take her, but Nicky put his hand on my arm.\n\n\"No Bobby, let mum handle it, she knows what she's doing!\"\n\nDavid had been on the phone while Julia spoke with Shari; now it was his turn to smile grimly.\n\n\"I just spoke with Special Agent Mike Walker of the FBI, he's asked me to bring that document in immediately, and the two witnesses, so Yasmin, Shereen, when you're ready, if you would please come with me, we're going to the FBI building. The rest of you, please carry on with your lunch, the ladies and I won't be too long.\"\n\nShari was looking apprehensive, so pulled her a little closer and hugged her.\n\n\"Bobby, it's the FBI, what if they...\"\n\nI cut her off.\n\n\"Just tell them the truth, baby-girl, that everything in that affidavit is the truth, that you witnessed dad telling your mother about what he'd done, and you saw him do some of the stuff in there, both of you did. Dr. Nixon thinks they'll be able to do something, just trust him...I do.\" \n\nNicky leaned across the table and put his hand over hers.\n\n\"Listen to Bobby, he's telling the truth; we got that bastard once, this is the way to make him pay for everything else he's done to all of us. Go and make your statement, you'll be OK, Mike Walker's a nice guy, he helped put Brian Davis away before, maybe this time, with his help, we can find a way to really make him pay for what he did!\"\n\nYaz stood up and held out her hand to Shari, who leaned down and kissed me, then squared her shoulders. Ashley stood up and hugged her, and I heard her whisper \"Just tell him everything, Shari, don't leave anything out; perhaps this time round they'll make him pay for what he did to all of us. Don't be frightened, dad will be there, he'll take care of you!\"\n\nAs the three of them walked toward the exit, I saw Doctor Nixon slip his arms around the girls' shoulders in a comforting gesture, the gesture of a father reassuring his daughters. Both girls in return slipped their arms around his waist, holding themselves against him as they walked out to the lobby. Julia grinned as she pointed at the trio with her chin.\n\n\"Look, I think we just acquired a couple more kids!\" \n\nConversation now moved on to us, to our lives and what we were doing. I was still unsure how to deal with Nicky's mother; she had every reason in the world to despise us for what we'd allowed to happen to her son, although she was never less than gracious and friendly. I kept stumbling over what to call her; \"Julia\" seemed inappropriately familiar, \"Mrs. Nixon\" seemed cold and formal given her connection to our big brother, and \"Nicky's Mum\" just seemed childish. Julia seemed to understand how I was floundering a bit when it came to her, so she decided to give me an out.\n\n\"Bobby, it's okay to call me Julia, I don't mind, really!\"\n\nI mumbled something about how it seemed a little rude and too familiar, making her grin, looking uncannily like Nicky for a split second.\n\n\"Alright, then let's try something else; long ago, Nicky told me all about you, both of you, and then last night he told me how it's been for you since he left. I understand how things can change, and I know from talking to all of you last night just how much has changed for you; sometimes, when the scales fall from your eyes, the world you see around you really is new, and a new world means new opportunities...and sometimes, second chances.\"\n\nShe paused to push the hair back from my eyes, something Shari was perpetually doing.\n\n\"I know how you were brought up, and I don't hold it against you, you didn't know any better, but there was one thing missing from your life that Nicky had in abundance; he had Barbara to be his mother, and she kept him safe and made him who he is, and I will always love her for that. You and Rick, you had no-one like that, and my heart breaks for you; Shari and Yasmin had their mother all their lives, they only lost her a little while ago, poor things, but you never had anyone, so maybe, if you want to, you can share me with Nicky? Your sisters seem to have adopted David, if you want, you can adopt me; I don't think Nicky and Ashley will mind sharing me!\"\n\nI was dumbstruck; I'd never heard such a preposterous, lunatic, unrealistic...and wonderful thing in my life. I looked at Rick, looking for some sort of guidance, something to tell me how to respond. Rick must have got it immediately, because he was grinning and nodding.\n\n\"Say yes, Bobby, you need this! I got to share Yaz's mum for two years, and it was the best time of my life; whatever I am now, she showed me how to get here, so give yourself a chance, big feller, you might even like it!\" \n\nJulia took my hand and smiled at my expression.\n\n\"It's alright, Bobby, really, there's no catch. Maybe you need to call someone 'mum'; God knows, you never had the chance before. You gave your mother to Nicky, I think it's only fair he shares his with you, isn't that right baby?\"\n\nNicky leaned over and slapped me on the shoulder.\n\n\"Go with it Bobby; she's won, you know you want to!\"\n\nI drew a deep breath, scared and apprehensive for probably the first time in my life, but Rick and Nicky both smiled and nodded, as did Ashley, so I took the plunge.\n\n\"You really don't mind if I...call you mum, even after what I did?\"\n\nJulia (mum!) smiled as she once again swiped that fringe of hair out of my eyes.\n\n\"Bobby, you're my son's little brother; whatever went on in the past, you're still his family, so that makes you part of my family too. Besides, Rachel's all excited because suddenly she's got two new big brothers; all she did this morning was talk about Bobby, Bobby, Bobby, you may never get her to leave you alone! Judy and Leon had to take her and Barbara to the play center in Rotterdam otherwise she'd be here climbing all over the pair of you, so I think I'll go with her instincts!\"\n\nI didn't know what to say, I was still almost in shock, but the good kind; Nicky's mum was being kind to me, and she'd let me into her family, Rick and me; this was how the world changed, a little at a time, but a profound change for me. I had to say something.\n\n\"Thank you...mum, I won't let you down, I promise!\"\n\nMy new mother grinned at me, and squeezed my arm.\n\n\"OK, that's all settled, now let's have some lunch!\"\n\n*\n\nDoctor Nixon and the girls never made it back for lunch, so the five of us made our way back up to my suite to wait for them. Mum (and I was still trying that word out for size!) looked through the photo album, her eyes brimming as she looked at pictures of the young Nicky the way she should be remembering him, anger sizzling in me that his childhood had been stolen from her. Her attention switched from the pictures of Nicky to those of Barbara, and a copy of the framed picture we had at home. Her eyes flicked from the photo to Rick and me and back again, comparing our features, obviously seeing our mother in us.\n\n\"She was beautiful...\" she softly observed, and Nicky nodded slowly.\n\n\"Yes, she was, she was so beautiful...\" he whispered, and my heart broke for him at the raw pain and loss still apparent in his eyes, his voice. Mum caught the look, the tremor in his voice, and pulled him closer.\n\n\"Don't worry, baby, we'll fix this; all my boys are here, together they'll fix this once and for all, just have faith, baby, that's what your dad's always telling you, trust the system, it usually works!\"\n\nAshley stood behind his chair and hugged him, her lips level with his ear.\n\n\"Mom's right, baby, let the law take care of that lunatic. He's already been kennelled, maybe this time we've got enough to drag him in front of a judge and drive home that he never got away with anything. You said it once, baby; 'the mills of God grind slowly', let them grind him fine and scatter the pieces, and that will be an end to it. Last time was payback, now perhaps we'll see some real justice.\"\n\n*\n\nIt was late afternoon before the girls and Nick's step-father arrived back at the suite. They were cautiously optimistic, especially since one of the FBI's legal experts had gone over the document, and taken fresh statements from both girls. In his opinion, Barbara's alleged murder was connected to the crimes my father had already been convicted of, committed in order to prevent her reporting him to the authorities. With new evidence now come to light, and with the Justice Department agreeing that the affidavit amounted to a \"Dying Declaration\" made by Shari's mother, the State Department was considering requesting that the UK Home Office either provide a complete forensic report of the investigation into her death and any DNA results obtained from the \"suicide\" scene, together with the post-mortem examination report, or turn over all remaining physical evidence to the Federal Prosecutor's office for them to start their own investigation. \n\nThat evening, we held a family meeting, to decide our next step. The girls wanted to spend a little time with Nicky and his family. Rick and I were feeling something similar; I'd never bothered to get close to Nicky; the most I'd ever felt for him was resentment that he had Barbara, and that he seemed perfectly happy to have her and not us. Now, however, I was feeling a deep and inexplicable need to be near him, to reconnect with him, almost the way I'd felt when Rick had come home.\n\nAlso, I was enjoying having a mum; I was still feeling the wonder of saying that word, a word that had never fallen from my mouth my entire life before this day. Nicky's mother had made us part of her family, and I wanted to keep feeling that feeling a little longer. The girls were obviously in love with Nicky's step-dad; the only father they'd known had been a violent psychopath; now they were experiencing what a real father felt like, and they were understandably reluctant to let that go.\n\nNicky had invited us to stay with him and Ashley in their home, so the family could all be together; his mum (our mum!) lived a few minutes' drive from his home; we had no pressing business back in Carlisle, no jobs to return to, and abundant funds, so we'd accepted.\n\nOnce Shari and I were alone, she began to cry, the memory of the statement she'd had to make rising up and catching her unawares, things she'd forgotten or deliberately suppressed once again fresh and raw, and I had a desperate time calming her as the edge of hysteria cut across her again and again. Finally I managed to calm her, holding her close as she slept fitfully, eventually sinking into a deeper sleep. \n\nI woke with a start; something had snapped me awake, and my hand automatically felt for Shari, but I was alone in the bed. I sat up, and dimly in the glow from the street lights far below, I saw her, wrapped in her favourite robe, sitting in a chair and looking at the Albany nightscape.\n\n\"I'm sorry baby, I didn't mean to disturb you...\" she murmured, and I climbed out of bed and padded over to her.\n\n\"You didn't, I just missed you, that's all. What are you looking at?\"\n\nShe motioned me down next to her and draped her legs over mine, plumping up a cushion as she leaned back.\n\n\"It's beautiful, isn't it? Look at all those lights. Somewhere down there, there are people trying their best to get justice for us. I'm glad I came, I'm glad the people who matter the most are helping us. Maybe they can really make a difference, maybe mummy, and Barbara, and poor Nicky will finally have some peace. I hope so. Take me back to bed, baby.\"\n\nShe swivelled her long legs off me, and as I stood, she grinned and held out her arms to me, so I picked her up and carried her back to our bed, setting her down gently and climbing up next to her. She smiled gently and pushed my hair out of my eyes and touched her forehead to mine, her eyes luminous in the dim glow from outside.\n\n\"Make love to me, Bobby, make babies in me. Nicky and Ashley are so happy, they have such a beautiful baby, that's all I want for us; to be that happy, with your baby growing inside me. I know Yaz feels the same way; she and Rick have been ready for a while now, and now coming here and meeting our family has finally made it all come together for both of us. I'm in love with you, I think I have been from the moment I met you, and I know you love me the same way; all I want is a life and family with you, so make me happy, Bobby, make a baby with me!\"\n\nMy heart leaped as I listened to her, things I hadn't understood, or didn't know how to express, suddenly becoming clear as day; I wanted so much to have a family with this beautiful girl. I loved her so much it was a deep and abiding ache inside me, but a sweet and infinitely bearable ache, one I would gladly carry for all the days of my life. I wanted to make babies with her; I was ready to begin a family of my own, and to hear her say it unlocked all those things inside me.\n\nShari must have seen my thoughts and my resolution in my eyes, her smile telling me just how close and in-tune she really was with me. She sat and untied the sash of her brief robe, letting it fall away from her beautiful, lithe body. As always, the sight of her nakedness primed me as nothing else could, a fact she took note of as her small hand encircled my suddenly bone-hard cock.\n\n\"Are you really ready for this baby?\" she whispered, and I replied with a soft barrage of kisses on her lips, her eyes, and her elegant neck. She pressed me back slightly as she looked deeply into my eyes.\n\n\"Tell me, baby, because this is my fertile time, and I've been off the pill for a while now, so you need to tell me now whether you're ready to go wherever this takes us!\" \n\nI squeezed her delightful little bum as I pulled her closer to me.\n\n\"Shari, all I want is to make babies with you, tonight; you're all I want, you're all I'll ever want, you, and our babies. I'm more than ready, I have been for a while now, I just never realised it until just now. I know I asked you before, but now I'm asking formally, the way I should have; will you marry me?\"\n\nShari grinned and pecked me lightly on the lips.\n\n\"Of course I will, I've been waiting for you to ask me properly for ages! Now make me happy, Bobby, make love to me, make a baby in me!\"\n\nAll the while we'd been speaking, she'd been gently pumping me, making my already painfully erect cock throb even more urgently. As we kissed, she pulled me over her, her smooth thighs parting as I slid between them and positioned myself. Once more, she checked my eyes, then nodded as I slowly pushed forward, feeling the delicious wet heat and succulence, and hearing her gasp as I slid all the way into her, her hips coming up to meet mine as I pumped into her. Back and forth we went, our hips in perfect synchronization as we fucked, my cock never feeling so hard and rigid as it did right now. Faster and faster we went, faint gasps and soft moans escaping both of us as we approached our mutual climax, the agony of holding back as her pussy squeezed and massaged me matched by the love and intensity of our kisses as we held each other close while we coupled. \n\nAt last, it was too much; Shari gave a loud hissing moan as her pussy clamped down on me, holding me tight inside her. The pressure set me off, and I swear I felt my cock-head swell inside her as what felt like endless pulses of spunk jetted out of me and deep into her, bathing her womb and cervix in my seed. My eyesight dimmed and blurred with the intensity of my orgasm, and my ears popped, only distantly hearing Shari scream as her orgasm gathered and roared through her again at the feel of me pumping hot spunk into her fertile depths.\n\nWe made love three more times that night; I couldn't get enough of Shari, and she seemed to feel the same, and so we spent the remainder of the night enfolded and entwined with each other, unable to stop taking our pleasure of each other, the urge to make our baby overpowering and all-consuming. We finally fell asleep, exhausted, in the grey pre-dawn light, satisfied, sated, and hoping that we'd fulfilled our promise to each other. \n\n*\n\nThe progress of the case was agonizingly slow; wheels turned within wheels as our two governments fought and argued and wrangled over the legal niceties; in effect, debating over the true meaning of a peach, until eventually we decided that we'd spent enough time lotus-eating, and it was time to get our own lives back on track. David promised to keep us updated, and Nicky and Ashley promised to come and see us soon, so, with much crying and hugging, we returned to England to wait for things to resolve themselves.\n\nIt took almost three months for the British Government to stop procrastinating and comply with the request made by the FBI. The Home Office pathologist's report into the post-mortem was incomprehensible, and, according to Doctor Nixon, so hopelessly botched that it provided no credible evidence one way or another. The photographs taken at the scene were something else; the bruises and cuts covering her body were apparent to all, yet had somehow completely failed to be mentioned in the Post-Mortem report. According to Mike Walker, the pathologist concerned had been suspended pending a competency hearing, and an investigation into his connection, if any, with Brian Davis. \n\nOther things had also happened. Shari was pregnant, as was Yaz; suddenly our family was breaking out in babies, a new generation to teach about their grandmothers, and bring-up with all the love that had been missing from our lives.\n\nTime dragged on, and just as we were beginning to doubt that anything could be done, the Cumbria Police Forensics Unit sent the evidence gathered from Barbara's supposed suicide. After a tense wait of almost two weeks, we got a call from Nicky, asking us to come home, the case had taken several turns in our favour, and we needed to be there, especially Yaz and Shari. We still had our visas, so it was a simple matter to get flights, and two days later we were meeting Special Agent Walker at his office in town.\n\nWhen we'd assembled and taken our seats, Mike Walker began to speak.\n\n\"In my official capacity as Special Agent in charge of this case, to wit, the investigations into the death of Barbara Morrison Davis, I have to inform you that the Forensic DNA tests, using evidence provided by our police colleagues in England, have provided a positive and conclusive result. The rope that was allegedly used by Mrs. Davis to commit suicide has been found to contain epithelial cells of the person who knotted the rope. Those cells have been matched 99.9999%, with a sample taken from Brian Robert Davis. The laboratory has confirmed there is a probability of better than 1 billion to one against any other member of the human race having tied that rope and left those cells. Other physical evidence also points to a second party having first immobilised Mrs. Davis before knotting the rope in a manner intended to convey to others that she had in fact done it herself. We have therefore formally requested that the United States Department of Justice bring Brian Robert Davis to trial on charges of murder in the First Degree.\"\n\nI realised I'd been holding my breath, only breathing out as I gradually comprehended what he was saying; they were putting that bastard back on trial, they were going to try him for murder!",
        "Special Agent Walker wasn't finished.\n\n\"Ordinarily, a murder committed outside United States jurisdiction is considered a matter for the local authorities to deal with, but in this case a Federal judge has ruled that, since your mother was killed by Brian Davis in furtherance of his crimes against America, it would have formed part of the original indictment against him if the evidence had been made available at the time of his original trial. The British authorities have raised no objections, other than the usual, to him being tried under a Federal Indictment for First Degree murder in the commission of crimes against America. Without your help, we would never have been able to bring this about, thank you all for your invaluable help and assistance. The trial will be held as speedily as possible, but it won't be soon; the Federal courts have a long backlog of cases, but I will do my best to keep you updated as and when anything new comes up.\"\n\nAs it happens, that bastard never got to trial; a week later, on the advice of his attorney, he pleaded-out, admitting his guilt for a technical reduction of his sentence. We were in court to watch the bastard allocute to his crimes, listening as he described in sickening detail what he'd done to our mother, and why. Part of his plea-bargain was that he give explicit details, which he did, with no hint of emotion, no signs of remorse, nothing; he could have been reading a laundry-list for all the expression in his voice or on his face. The bastard never once looked at us as we sat there, all his children in a row, all of us there to watch his final downfall. \n\nAt the end of his speech, the Federal Prosecutor confirmed to the judge the terms of the deal that had been struck; that Brian Davis would receive a sentence of 30 years to life for the murder of Barbara Morrison Davis. The judge noted the plea for the court record, and then informed that ...creature that he would serve the term consecutively to his current sentence, ensuring that there was no possibility of him ever leaving prison alive. It was a fit sentence, and a victory for us; at last, justice had been done, that bastard had admitted in open court what he had done, and had been convicted and sentenced for his acts. Now our mother could rest, her \"suicide\" wiped from the record, and her last resting place could be blessed, something she would have wanted.\n\nWe filed out of court in silence; there was no rejoicing, this wasn't something to celebrate, but it was a day to remember; we had seen justice done, and I was content. We had seen and heard that bastard admit his guilt, and really speaking, I had no issues with the sentence; Brian Davis was in his late fifties, he still had almost 40 years to serve on his original sentence, with no possibility of parole, now he had an additional 30 years, sealing his fate, and he'd be doing it from a hole in the ground far from any contact with the rest of the human race. Time was going to drag heavily for him, perhaps he'd take that time and reflect on what he'd done, although that was probably not very likely; people like my father don't feel guilt; if they did, they wouldn't do the things they did. He'd taken a life, and caused the end of another, he'd ruined lives and almost destroyed his children, he'd hurt and damaged us, and caused unspeakable suffering. Now he'd waste his life away in a hole, a forgotten, pathetic relic of a time best forgotten too.\n\nNicky had been right, and so had Ashley; the mills of God had ground him fine, and found nothing worth saving; he had bought and paid for the fate that awaited him, and there was no-one left who could or would mourn him. I, however, was paradoxically glad that New York had no death penalty; I didn't want his death on my conscience, or that of any other member of my family; that his crimes had condemned him to a tiny cubicle 80 feet underground for the rest of his life was entirely his own doing, and it was justice enough for me.\n\nA month later, a Requiem Mass was said for my mother at our local catholic church in Carlisle, where the stigma of suicide was removed from her and she was rejoined with the Catholic Church. \n\nAfterwards, a short, but profoundly moving service was held at her grave-side, where our mother's grave was formally consecrated in accordance with her beliefs, and the proper prayers of her faith said over her for the repose of her soul. All of the family was there to say goodbye to our mother, and pray for her to be at peace at last. \n\nPoor Nicky is still at war with himself over her death, but I think the service gave him some of that peace and closure he so desperately needed, and he has Ashley to help him, and mum, and all of us who played their part in giving our mother peace at last.\n\n*\n\nTwo years have passed since the events described above, two full, satisfying years. Shari and I have a little girl now, Ayesha, named after her mother, and the spitting image of Shari. Rick and Yasmin have a little boy named David. We also have another one on the way, as does Yaz, only both girls are having boys this time. \n\nNicky and Ashley spend several weeks a year with us, as do Judy and Leon; Shari and I feel very strongly that maintaining close family links is the most important thing we can do for our extended family, so every summer, Nicky, Ashley, little Barbara, and their youngest, Judy, the baby of the family, try and spend at least a couple of weeks in England, and we return the favour over Thanksgiving or the Christmas holidays. The house is always alive with conversation, and the sound of children playing, something I think Barbara would have appreciated. \n\nI know she's still with us, though, and it's not just supposition; I know, believe me. \n\nThis summer just gone, everyone was here, Nicky and Ashley and their kids, Judy, mum, step-dad David, and of course, my little sister by adoption, Rachel. I was sitting in the family room catching my breath after chasing kids all over the house, with Rachel sitting on me watching the Disney channel on the big plasma in there. Everyone else was in the kitchen, talking and drinking coffee while they got the things ready for the barbecue we'd planned. I was just dropping-off, hoping to catch a little snooze before the barbecue, when Rachel clambered off me and disappeared. In my half-asleep state I heard her laughing and talking in the dining-room. I paid it no mind, settling down to try and recapture my snooze, when she climbed back onto my lap and shook me awake the way she usually did; by pulling my bottom lip and making my head nod.\n\n\"What? Don't do that Rachel, please!\" I mumbled, so she thumped me on the chest.\n\n\"Wake up, Bobby, wake up!\" she pestered, so I cocked an eye at her.\n\n\"What's the matter, Rachel, I'm tired?\" I grumbled, unable to even think about sleeping while she bounced on my stomach.\n\n\"I got something for you Bobby, look!\"\n\nI opened my eyes, and stared in shock. She was wearing Barbara's charm bracelet, dangling it from her wrist.\n\n\"Where...where did you get that, Baby?\" I asked her, and she grinned her gap-toothed smile at me.\n\n\"The nice lady gave it to me!\" she giggled, taking it off and dangling it in front of me, admiring all the tiny charms and medallions depending from it.\n\n\"What 'nice lady'?\" I whispered, and she squirmed around and pointed at Barbara's picture on the mantelpiece.\n\n\"Her! She told me to give it to you, and I had to tell you something, too; she said that she loved you, and Ricky, and Little Saint Nick, and all the babies, and me too! She was nice! Is she your mommy? She looks like you! Who's Little Saint Nick?\"\n\nI asked Rachel to go and get Nicky and Rick, and waited until she came back in, towing both of them behind her. Nicky grinned at me as he picked up his littlest sister.\n\n\"What's up, Bobby? Rachel said you want to talk to us.\"\n\nI held up the bracelet, Nicky's eyes widening as he saw it, as did Rick's.\n\n\"Rachel, tell Nicky what you just told me.\" I urged, so she did, pointing at the photograph when I asked her who the lady was. Nicky's eyes filled as he held the bracelet, then he smiled as he picked up and kissed the little girl.\n\n\"You're so lucky, baby-girl, so, so lucky. That lady is the loveliest lady in the world, and she came a long, long way to see you, so you must always keep that safe, OK?\"\n\nRachel nodded, reaching out to rub at Nicky's eyes.\n\n\"Don't cry Nicky, you're a big boy!\" as she hugged him, then kissed him on the tip of his nose.\n\n\"The nice lady said I had to give you that!\" she giggled, and Nicky grinned back, hoisting her higher as we made our way into the cool kitchen, where our family waited for us."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brothers",
        "sisters",
        "incest",
        "oral sex",
        "anal sex",
        "love",
        "family",
        "albany"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/rag-doll-ch-06-pt-02"
}