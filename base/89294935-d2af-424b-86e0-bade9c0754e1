{
    "title": "The Whipped Heiress Ch. 03",
    "pages": [
        "Author's Note: All characters in this story are eighteen years of age or older.\n\n- -\n\nLife as a slave was more of an ordeal that I'd anticipated. It was very demanding, and more than once I felt as if this must be what Olympic hopefuls felt like as they underwent their grueling training.\n\nWell, if they were forced to train in the nude, maybe it would be like what I was put through.\n\nAnastasia took me back to the park to be ogled and objectified some more. Maybe it wouldn't have been so bad if I was just there to be stared at, but Mrs. Bowden and Ms. Nomikou had a talk and they decided to make certain my level of suffering be increased for my second trip to the park.\n\n\"If we get too complacent, you'll get bored,\" Mrs. Bowden explained. \"It'll be more fun if we keep adding new levels of difficulty and shocking you with new outrages and new humiliations. It'll help to keep you on your toes and make your life as a slave more interesting.\"\n\nI was paraded around naked in public every day and sexually abused by the servants. Such a life was humiliating and sometimes traumatizing, but I could never imagine it becoming boring. Still, my opinion didn't count for anything, so it was decided that new cruelties and degradations would be dreamed up and more of my dignity and pride would be stripped away from me each day.\n\nMrs. Bowden came along for the ride this time and she rubbed her hand up and down my inner thigh as Anastasia drove us to the park. The drugs they gave me already had my libido stirred up. Having Mrs. Bowden's hand caress my naked flesh just added heat to the fire. I could feel my nipples hardening and my sex beginning to throb before we even arrived at our destination.\n\n\"Okay, slave-girl, out of the car you get,\" Mrs. Bowden said to me after the car was parked. My mistress was dressed in a Navy-Blue business suit with a cute two-button jacket. The way she was dressed and the way she held herself she had an air of authority about her. I was naked except for my slave collar, and I had an air of surrender about me.\n\nWith my naked body on display, it took scant minutes before I began to attract a crowd. And as the crowds began to form, Anastasia opened the trunk of the car and began to retrieve several lengths of rope.\n\n\"Here's where you get tied up,\" Anastasia said. \"Place your arms behind your back with your wrists touching your elbows.\"\n\nI could sort of anticipate what was coming next, so it was no surprise when Anastasia took the nylon rope and bound my right wrist to my left elbow and my left wrist to my right elbow. In my opinion, those ties made me adequately helpless, however, Anastasia didn't stop there. Next, she took more rope and used it to bind my arms closer together. No matter how much I struggled I knew that escape would be quite impossible.\n\n\"What next?\" I asked as I noticed Anastasia readying more rope to tie about my naked body. \"I'm already helpless. There's no need for anymore rope.\"\n\n\"It's not always about need,\" Anastasia explained. \"Sometimes, it's about creating a memorable display for the crowds.\"\n\nSomething in the way Anastasia said that worried me, and I soon discovered that I was right to worry. The next thing I knew, Anastasia snaked one rope between my legs and pulled it tightly into the furrow between my buttocks. With Mrs. Bowden's assistance, she yanked it painfully between the sensitive, tender swollen folds of my pubic lips.\n\nThe two of them worked together, tying one length of rope tightly around my waist. And then the rope that was yanked up between my pubic lips was tied off to the rope that went around my waist. Then another rope was added with great difficulty to the crotch rope to use as a leash, so that Anastasia could lead me around the park by tugging on it.\n\n\"Aaaahhhh,\" I gasped as Anastasia tugged.\n\nMerely walking with the nylon rope biting deep into my labia hurt bad enough, but every time Anastasia pulled on the rope, the rope buried itself even deeper inside of me and the biting sting of the rope hurt even worse. \"Anastasia, I can't walk like this,\" I protested, \"The rope is cutting my pussy in two!\"\n\n\"What did you call her?\" Mrs. Bowden asked admonishingly. \"You are to address all free women as Mistress. Who told you that you could address Anastasia by her proper name?\"\n\nAnastasia and Mrs. Bowden decided that I needed to be gagged to keep me from speaking impertinently and in short order a bit gag was forced into my mouth and buckled tight to the back of my head. The gag forced my jaws to open wide and I soon found myself drooling around the cruel gag that was wedged into my mouth.\n\nI found that being bound and gagged made me feel more like a slave-girl. I was naked, my buttocks and pubic lips were shamelessly exposed, that cruel rope painfully bisected my poor vulva, the gag in my mouth prevented me from speaking and held my mouth wide open, causing me to drool and robbing me of control over my own body.\n\nMy saliva freely dripped out of my widely open mouth. My efforts to swallow it back soon proved to be ineffective. I explored the possibilities of speech. But the sounds that emerged from my gaping mouth were too demeaning. I quickly gave up on any attempts at verbal communication.\n\nI was forced to walk around the park like that, being led by my sore, tortured pussy with Anastasia pulling on that loathsome rope. I was forced to walk past dozens of fully clothed tourists, and Sklavian locals, some of whom filmed me or snapped photos of my painful predicament.\n\nI had never dreamed that I would one day be forced to walk with a piece of rope being pulled up tightly between my poor, sensitive pubic lips. It was painful, difficult and humiliating. I was endlessly grateful when Anastasia unbuckled my bit gag and untied me. She untied my wrists first and saved the crotch rope for last.\n\n\"Oh God,\" I exclaimed as the crotch rope was pulled out. My pussy lips were raw from having that rope biting deep into my tender flesh. I wondered if I would ever walk normal again.\n\nWhile I was still sobbing from the pain of how Anastasia had abused my poor, tender pussy, she began preparations for my second punishment. As I was rubbing the parts of my body that had suffered from rope burn, Anastasia produced a dog leash with a black leather handle and attached it to my slave collar.\n\n\"On your hands and knees, pretty girl,\" Anastasia said. \"You're going to crawl and I'm going to lead you around the park. When I tug on your leash, you crawl forward. When I say 'heel', you stop crawling immediately.\"\n\nIt was demeaning to be led around on a leash and forced to crawl while crowds of curious onlookers pointed and stared. My reddened ass and swollen pubic lips were humiliatingly displayed for anyone who cared to look. I got dirt and grass stains on my knees as I crawled and every now and then Anastasia would order me to heel so one of the tourists in the park could pet me.\n\nThe petting would start off innocently enough, with someone affectionately stroking my hair or my upper back, however, petting invariably became sexual, with the delighted tourists cupping my vulnerable breasts, stroking my sensitive pubic lips or even brushing their fingertips across my delicate, pink anus. My entire body became hypersensitive and every stranger's hand that touched me stoked the fires of my libido. Anastasia kept me out there in the park for hours and had me crawl for the entertainment of prurient tourists for what seemed like days.\n\nShe allowed two of the tourists to rub sunblock all over my naked body to help protect me from sunburn. At first, this seemed like a kindness, but as the tourists rubbed the oily lotion into my skin, my sex throbbed, and my clit became painfully hard. My nipples ached as they became even more swollen and erect, and moisture leaked from my pussy in copious amounts.\n\nMy mother is a millionaire. I've lived a life of privilege, but I can barely remember what that was like now. Now I'm a naked slave and I'm sexually objectified, abused and tormented by total strangers. Everyone around me has a superior social status. I'm shamefully naked with my bald pubes constantly exposed, while everyone around me is well-dressed and dignified.\n\nAnastasia yanked on my leash and had me crawl towards a redheaded woman dressed in Black dress slacks, a black blazer and black leather pumps.\n\nMy knees ached as I crawled on my hands and knees with my ass suggestively raised up for all the tourists to see and enjoy. It seemed as if a thousand eyes were openly examining my naked body and I blushed furiously at the thought of how improper and indecent I must look. From the rear my anus and swollen public lips were indecently on display and from the front my naked breasts were hanging from my torso in clear view of anyone who cared to look.\n\nI trembled slightly as I stopped at the dapper woman's feet and allowed her to examine me. She seemed amiable and without malice of any sort, but I had the good sense to be suspicious of her. In Sklavia, just because a person speaks to a slave in an amiable manner and smiles kindly, doesn't mean that slaves are safe around them.\n\n\"She's adorable,\" the congenial redhead enthused as she placed her hand on my head and gently stroked my hair, \"what's her name?\"\n\nThe woman spoke English with an American accent. I'm no expert on accents, but she sounded like she was from the Pacific northwest. She was probably visiting Sklavia while on vacation, hoping to see naked slaves like myself.\n\nAnastasia explained that my name was Heather and that I very friendly and well behaved. She invited the dapper redhead to touch me all over and feel the softness of my skin and the firmness of my muscles.\n\n\"See those beautiful buttocks?\" Anastasia asked. \"Give them a squeeze. Her glutes are impressively firm.\"\n\nThe American tourist grabbed my sore bottom and squeezed both my left and right buttocks, feeling the muscles beneath the skin. Anastasia gushed about my body, explaining how I was slender, but I had excellent muscle tone. The redhead then proceeded to feel me up everywhere, testing the firmness of my thighs, calves, adductors, obliques, biceps, triceps and forceps.\n\nI was being assessed like horseflesh and I found it to be dehumanizing, but as a slave, I couldn't complain. I remained on my hands and knees and allowed the woman to examine me as if I were being examined at the slave market by a potential buyer.\n\nThen, she switched tactics. Instead of judging my muscle tone, she placed a hand between my legs, and I felt her fingertips stroking my pink slit from the bottom to the top and then back again. My sex throbbed and I trembled from the intimate contact and then I gasped as she plunged two fingers into my vagina and probed my moist interior. I felt myself instinctively clenching down on her fingers and I silently hoped that she would continue to pump her fingers inside of me until I achieved climax.\n\nSadly, she withdrew her fingers from my needy sex and exclaimed, \"Good Heavens! Her vagina is soaking wet!\"\n\n\"Yes, she's easier to control that way,\" Anastasia explained. \"We give her drugs that keep her in a state of constant sexual readiness and then we ration her orgasms. We only allow her orgasms as a reward if she's well behaved and obedient.\"\n\n\"That's clever,\" the American tourist commented. \"Using that approach, I imagine you have a very well-behaved slave.\"\n\n\"Oh yes. We control her supply of orgasms, so she'll do whatever we want. She's totally dependent on us for the sexual release she so desperately craves.\"\n\nAnastasia discussed the most intimate details of my sex life with a total stranger, and all I could do was listen and squirm with embarrassment. It was demeaning, but if I were to complain or interrupt, I would be severely punished.\n\n_ _\n\nBy the time I was returned to the estate, I was sweaty and had grass stains and dirt on my naked body. Mrs. Bowden told the maids to clean me up, but not to use the bathroom facilities inside the house.\n\nShe decided that I was being given too much dignity and privacy by being bathed in a bathtub inside the house, with the door closed. After putting some thought into it, she decided that the maids should use the outdoor shower to clean me up, and the gardeners, kitchen staff, delivery people or anyone else on the property were welcome to watch as the maids soaped me up and rinsed me off.\n\nBefore I was led to the outdoor shower, my wrists were helplessly tied behind my back. I felt that it was unnecessary to tie me up just for a shower, however the maids informed me that I looked \"fetching\" when I was tied up and helpless therefore the ropes were necessary.\n\nThe maids soaped me all over, however they spent and inordinate amount of time lathering up my boobs and my pubic lips. And the maid named Katerina decided that it was important to thoroughly clean my anus. I squirmed as the maids focused their attention on these delicate portions of my anatomy.\n\nI moaned when they focused their attention on my delicate, pink pubes. My sex throbbed urgently as they rubbed me vigorously between my legs, however they refused to give me any orgasmic relief. I spread my legs pornographically wide and begged the maids to show me some mercy. My whole identity became my intense sexual need and I shamelessly whimpered and begged the maids for some relief. The maids loved listening to me beg, however, they wouldn't give me an orgasm as they enjoyed seeing me in a desperate, lust-crazed state. They washed every single inch of my swollen labia and even worked some soapy lather inside my pussy, but they cruelly took their fingers away from my sex if they felt I was getting too close to achieving an orgasm.\n\n_ _\n\nLater that week, Corrina Nomikou threw a party and invited dozens of her friends and business associates. She wanted to show me off and I think she also wanted to embarrass me by bringing in an army of people to examine my naked body and unapologetically grope me.\n\nMost of her friends were women, although some of her friends were male. Every single one of them were given opportunities to cup my breasts, play with my nipples, squeeze my buttocks, finger my sopping wet pussy or smack me on the ass.\n\nThe kitchen staff prepared trays of drinks and finger food and sent me out into the main hall to serve Ms. Nomikou's guests. It was humbling to mingle naked among such dapper, well-tailored guests and serve them while I was barefoot, naked and bound. To make matters worse they seemed far more interested in me than the items I carried on my tray. I was ogled and objectified by both men and women.\n\nHer guests were wealthy businesswomen, wealthy heiresses, fashion moguls, fashion models and famous Sklavian performance artists. It was a who's who of the wealthy and famous in Sklavia. I'd been invited to parties like this back in America. However, I'd never been made to serve drinks or parade around naked at those parties.\n\nAt one time I was the social equal if not the superior to every person on Ms. Nomikou's estate. Now, I was beneath all of them, even the kitchen staff were above me. I had dropped down so many more levels than I had ever thought possible.\n\nIn the past few days, my pride and my dignity had all been stripped away and now I was nothing more than a naked sex object, accepting of my new role, to be ogled, abused, punished and violated. The aloof heiress was gone now, replaced by a humbled, obedient sex slave.\n\nServing drinks to well-tailored, coifed, urbane women while you yourself are naked and handcuffed is an extremely humbling experience. The more elegant the women surrounding me looked, the more naked and vulnerable I felt. I felt shamed, exposed and humiliated, however, I was also overwhelming with potent sensations of arousal. My nipples were embarrassingly erect and would not stop pointing, and my sex was so wet that moisture was leaking from it and coating my pubic lips and inner thighs.\n\nThe women I was serving seemed polished and refined at first glance, and even at second glance, but that didn't stop some of them from grabbing my ass from behind and copping a feel while I was focused on the guest in front of me. It was done with a sort of quiet dignity and if my ass wasn't so tender from the many spankings I'd received that day, I might even have welcomed the attention.\n\nThe kitchen staff were far less reserved in the way they treated me.\n\nThe kitchen staff were coarse and abusive. They would yell at me in Sklavian and give me orders that I couldn't understand. There was one of them who would grab me, bend me over a stainless-steel table and mercilessly spank my ass while the other members of the kitchen staff would laugh and cheer. Then there was the woman who would kick my legs apart and force her fingers deep inside of me. The drugs they give me keep me in a constant state of sexual arousal, however this woman would probe my vagina until I was moaning, panting and feverish with lust. And when I was trembling with desire and on the verge of an insanely powerful orgasm, she would pull her fingers out, grab me by my scalp and force me to stand up.\n\nTypically, that's when I would be given a new tray of drinks and be sent out of the kitchen to mingle with the guests.\n\nThe party went on for hours and the kitchen staff had many opportunities to abuse me. By the time the evening was over, my backside was throbbing with scalding pain, my clit was agonizingly hard and swollen and my pubic lips were soaking wet. Of course, many of the wealthy guests made fanciful comments about the conspicuous moistness of my pussy and the painful, red handprints all over my ass.\n\nJust when I thought I couldn't possibly feel any more defeated, disgraced and objectified, that bratty teenage girl, Irini wandered up to me and snatched a drink from my tray.\n\n\"Should you be drinking that, Mistress?\" I asked. \"You're only eighteen and that has alcohol in it.\"\n\nI didn't want to get into trouble for serving alcohol to a teenager, but Irini haughtily informed me that the legal drinking age in Sklavia was fourteen.\n\n\"Slaves shouldn't be questioning the actions of free women anyway,\" Irini said. \"I'm still hoping to see you whipped someday. I'm watching you, and at the first sign of disrespect or disobedience, I'm going to demand that you be punished.\"\n\nIrini was a true sadist, even her mother said so. She wanted to see me suffer, and I had approximately two more months left in my slavery contract. Irini was going to have plenty of opportunities to see me punished. I'd avoided whippings since Irini and I first met, but my luck couldn't hold out forever.\n\n\"Doukissa says that if slaves aren't whipped regularly, they become impertinent. She says that whipping slaves should be considered preventative maintenance to keep them properly humble.\"\n\n\"I've only been a slave for a few days, Mistress,\" I replied, \"and I was whipped shortly after I arrived. The whip marks faded after a couple of days, but I remember how intensely painful they were.\"\n\nI tried to walk away from Irini and serve drinks to some of the other guests, but the wicked teenager darted out in front of me and blocked my path after I traveled just a few steps.\n\n\"If you were to talk to Mrs. Bowden, and request a whipping,\" the teenager said, \"I'm sure she'd take you out and have you publicly whipped.\"\n\nI was forced to stop abruptly when Irini stepped out in front of me, nearly spilling the drinks. It was intensely frustrating dealing with the little sadist, and I was already feeling overtaxed after just a few seconds with her.\n\n\"Mistress, slaves never request a whipping,\" I said as respectfully as I could. \"The pain is just too traumatic. If you'd ever been whipped yourself, you'd understand.\"",
        "Irini scrunched up her face and was about to launch another verbal salvo at me when a trim woman with professionally styled hair, dressed in a stylish, back dress approached and interposed herself between Irini and me.\n\n\"Irini, your mother is looking for you,\" the posh woman said. \"She wants to see you right away.\"\n\n\"But Olympia!\" the teen protested, \"I've been looking forward to seeing the slave-girl all day!\"\n\n\"You can torment the slave some other time,\" Olympia said. \"Your mother will be cross if you make her wait.\"\n\nThe headstrong, impetuous teen stormed off in a huff and the stylish lady in black took a glass from my tray of drinks.\n\n\"The little baggage has no self-control,\" the woman said after taking a small sip. \"There are people all over this country who enjoy watching naked girls get whipped, but there are certain social conventions and formalities which must be observed. You can't just whip an innocent girl who hasn't done anything wrong.\"\n\n\"She's somewhat fanatical on the issue of seeing girls whipped, Mistress,\" I responded.\n\n\"She's a mischievous, spoiled brat is what she is!\" Olympia replied. \"If I were her mother, I'd have her stripped naked and whipped on the Public Stage.\"\n\n\"Is that even possible, Mistress?\" I asked. \"Irini is a free woman, not a slave.\"\n\n\"She's a free woman for now, but that's the sort of thing that can change very quickly. Take away her car, her credit cards and her bank accounts and refuse to give them back until she signs a slave contract...it would take about two or three hours before she agreed to sign.\"\n\nI had only just met Olympia, but I felt an instant fondness for her. She was tall and majestic and was kind to me. I felt a smile creep across my face as I considered her words. Irini a slave? Could that happen? Could she be whipped on the public stage? And most importantly, would I be allowed to watch along with the other spectators?\n\nThe girl really was a sadist. It gave me a small surge of joy to think of her receiving the same sort of stinging pain that she was so eager to inflict upon others.\n\nOlympia seemed dignified even when spoke of her desire to see Irini whipped. I liked her and wished I could talk to her all night; however, she saw someone she knew and before I knew it, she left me and wandered across the room to her friend.\n\nIt took time to deplete the supply of drinks on my tray. Most of the people who approached me were more interested in ogling my naked body or copping a feel than sampling the vodka lemonade cocktails on my tray.\n\n\"Well, well,\" a familiar voice said near my left shoulder, \"I never thought I'd ever see you serving drinks.\"\n\nI turned to my left and saw Grace Fuller. She had her phone out and snapped a picture of me just as I made eye contact with her.\n\nGrace Fuller was one of the few people in Sklavia that I knew from my pre-slave days. She was a landscape designer who had done some work for my family. It felt intensely humbling that a woman who used to work for my family to see me naked and doing menial labor.\n\n\"Heather, you look so different now that you're a slave,\" Grace opined. \"You look much improved. With all your cool disdain stripped away, you're quite beautiful.\"\n\n\"Was I disdainful as a free woman, Mistress?\" I asked, being careful to keep my tone respectful and subdued.\n\n\"You said that I was the 'hired help' and there was no reason for a rich girl like you to talk to me. Well, you have to talk to me know, don't you?\"\n\n\"Yes, mistress,\" I replied. \"I'm sorry I was unkind to you when I was a free woman. I was proud and aloof. It happens sometimes with rich people.\"\n\n\"Well, you're not proud and aloof now,\" Grace said as she gently placed a hand on my hip. \"I like you much better this way. I hope you can remain approachable and humble when your time as a slave is over.\"\n\nIt occurred to me that I would be returning to America after my sixty-day sentence of slavery was over. Grace Fuller would also be returning to America, and she lived in the same locality as me. It was probable we'd run into each other after I regained my freedom.\n\n\"I'll try to remain humble, mistress,\" I replied.\n\nMy personality had changed radically since becoming a slave, but once I returned to being a free woman, who knew? I might fall back into old habits. Although, I found myself wanting to hang onto my newfound humility. Grace preferred me humble and approachable, and I found myself now craving Grace's approval.\n\n\"I'm pleased to hear that young lady,\" Grace said as her hand smoothed down to where she could gently cup my left buttock. \"But, if you ever backslide and become arrogant, I have salacious photos of you that I could threaten to share with your mother. I'm confident that such a threat would make you humble once again.\"\n\nA sudden feeling of cold dread spread across my spine. The prospect of my mother seeing photos of me as a naked, libidinous slave filled me with a sort of chilling dread. I felt a simultaneous cold chill and a feverish burst of heat as I considered the very real possibility Grace Fuller could expose my lesbian sex slave adventures to my mother.\n\n\"Please, don't ever share those photos with my mother, mistress,\" I begged. \"My relationship with my mother has never been all that strong. If she sees those photos, our already fragile relationship could be destroyed.\"\n\n\"Oh, Heather,\" Grace said reassuringly, \"you have nothing to worry about. \"All you have to do is remain humble, congenial and stay on my good side. If you can manage that, your mother never has to know that those photos exist.\"\n\n_ _\n\nLater that night, Mrs. Bowden unlocked my handcuffs and told me that Grace Fuller was staying in one of the guest rooms and that I was to go to her and provide her with whatever sort sensual pleasures she desired.\n\nOrdinarily I spent the night in Mrs. Bowden's bed. She enjoyed playing with my naked body and having me lick her pink slit. I was surprised that she wanted to loan me out to another woman for the night.\n\n\"Grace is a very charming woman,\" Mrs. Bowden explained. \"She and I have become good friends. And I think that it would be good for you to spend more time with working class people. You shouldn't just be a slave to wealthy women like me. You should be a slave to everyone.\"\n\nMrs. Bowden escorted me into Grace's guest room. Grace wasn't in it at the time however, I was ordered to kneel at the foot of the bed and wait for Grace to arrive and inform her that Mrs. Bowden was loaning me to her for the night.\n\n\"You aren't going to tie me to the bed?\" I asked. \"Aren't you afraid that I'll wander off or try to escape?\"\n\n\"I think we've broken your spirit enough that you won't try to do anything so foolish,\" Mrs. Bowden replied. \"If you try to escape, the Department of Slave Commerce has high resolution photos of you they can give to the police. And your slave collar is locked on your neck, and you can't remove it without the key. So, you'll easily be recaptured and then you'll be taken to the Public Stage where you'll be whipped. You wouldn't want that, would you?\"\n\nI assured Mrs. Bowden I didn't want that. Then she kissed me on the cheek, spun around on her heel, and left me alone in Grace Fuller's bedroom. I had been ordered to kneel at the foot of Grace's bed. I knelt with my knees far apart and my hands placed behind the back of my neck. This is an easy pose to hold for short periods of time, however, I had no idea how long it would take for Grace to return to her room and holding the pose turned into a grueling ordeal as it took quite a long time before she made her appearance.\n\n\"Well, what do have we here?\" Grace said when she finally returned. She had a look of joyous surprise on her face as she looked me over and considered what it meant now that she had a naked slave in her room.\n\n\"Mrs. Bowden decided to loan me to you for the night, mistress,\" I said congenially. \"I hope that her act of generosity pleases you.\"\n\n\"Oh, yes,\" she replied with an enthusiastic smile on her face. \"That pleases me very much! This must be my lucky night!\"\n\nI was ordered to stand up and then Grace leaned in close and kissed me on the lips. She wrapped her arms lovingly around me and fused her lips to mine. She pulled me in closer and it took me mere moments before I melted into her arms. Since I became a slave, my body was begging to be touched, in any way whatsoever. My body responded positively to Grace Fuller's touch, and it wanted more.\n\nGrace broke from our kiss for a few microseconds and rapidly shed her clothes. She had me help her remove her bra and she removed everything else with impressive haste. And when her clothes were lying in a heap on the floor, she pulled me close and pressed her naked breasts close to mine.\n\nMy body yearned desperately to be touched and Grace was eager to touch me. Her hands, her lips, her breasts, her entire body was merged with mine it seemed. I wrapped one arm tightly around her waist and gently stroked her back as we kissed.\n\nHer tongue invaded my mouth and I eagerly let it in. I allowed Grace's tongue to explore my mouth, to slide over and under my own tongue and to excite nerve endings in my mouth I didn't previously know existed. I moaned into Grace's mouth, and I savored the sensations of her touching me everywhere as if claiming every inch of me as her own.\n\nMy whole body felt tingly and alive, and it didn't take long before the heated throbbing in my loins was rekindled. My thighs brushed against Grace's thighs and my sex felt even wetter and my clit felt achingly hard.\n\nGrace's kisses had been passionate and forceful at first, but they gradually became tenderer, more affectionate and more lingering. Then her lips separated from mine, and she kissed my naked breasts, quickly locating my nipples and kissing them both and then sucking them hard one after the other, causing me to moan in delirious lust. I felt both my nipples and clit to throb simultaneously, and I lovingly cradled Grace's head in my hands.\n\nGrace licked and suckled my nipples, getting them shamelessly wet and extraordinarily hard, reddened and erect. They were so hard and swollen that they ached. I whimpered and panted, but Grace controlled my nipples and did what she liked with them. I was just a slave and could do nothing to stop her.\n\nThe more she lavished attention on my nipples, the more my loins tingled and suffused with feverish sexual heat. I gasped and panted, but Grace refused to take me all the way. My pubic lips became wet and swollen and my clit became painfully hard and peeked out from its hood.\n\nThen Grace put a hand in between my legs. She painfully pinched my swollen labia and then she roughly kneaded my sex until my breathing became labored and interspersed with gasps. Then she suddenly inserted a finger deep and forcefully into my throbbing wet sex.\n\n\"Aaahhh!\"\n\nI let out a girlish gasp and then Grace withdrew the finger only to impale my sex again, this time with two fingers. And this time it felt as if she was probing even deeper into my sensitive sex.\n\n\"Aaaahhhh,\" I gasped and then Grace withdrew and shoved three fingers forcefully into my sensitive vagina. She thrust her fingers into me roughly, forcefully, again and again, making me moan, pant and sob. Harder and harder she worked her fingers into me and then just as I was on the verge of a potent orgasm, she grabbed a sensitive nipple with her free hand and pinched it cruelly just before the jarring explosion of libidinous pleasure erupted from my loins.\n\nThe delicious pain of my nipple being tormented only seemed to add to the intensity of my final, mind-shattering orgasm, and I let out a wanton, indecent cry that was so utterly loud and passionate, my scream may well have been overheard by every person on the estate.\n\nThe orgasm washed over me and swept me helplessly along with it. I was overpowered and my body trembled as my sex throbbed in hungry spasms and contracted around Grace's strong fingers. I spread my legs even wider, yearned to feel even more submissive and vulnerable to my Mistress Grace. For several delicious moments I gloried in the sensation of Grace's fingers deeply penetrating me and forcing my body to submit to her.\n\nI was still impaled on her fingers when she kissed me on the mouth once again. I moaned and kissed her back as much as I was able. I was physically and emotionally drained and could barely control my motor functions anymore.\n\nMy body was permeated with post-orgasmic bliss and my breasts heaved as I panted. I rested my head on Grace's naked shoulder and I felt utterly safe and content in her arms. The enormity of the orgasm I had just experienced shattered all my preconceptions of Grace Fuller. I was now enamored with her. It was as if she bewitched me with her talented fingers and her seductive tongue and made me her naked and loyal plaything.\n\nFor a long while the only noise in the room were the sounds of my labored breathing. Then, I broke the silence by saying, \"Mistress, when I return to America, will I ever see you again?\"\n\nOne of Grace's hands drifted down to cup one of my sore buttocks and she inquired, \"Would you like to?\"\n\n\"Oh, yes,\" I replied dreamily, \"I would like that very much.\"\n\nFor a while we just held each other with Grace's naked body pressed lovingly into mine. She told me that she was a very lucky woman that a sexy teenager like me wanted an older woman like her. I told her that she was clever and talented and knew how to use me and manipulate my body better than I did. I delighted in having her hands possess my naked body and I wanted her to do so again and again.\n\nGrace kissed me and played with my nipples again, rolling the pink nubs between her thumbs and index fingers until they were swollen and erect. I moaned into her mouth and soon my pussy was throbbing with need again.\n\nGrace hugged me affectionately and then she reached between my thighs and felt my pubic lips once again.\n\n\"Are you going to finger me to orgasm again, Mistress?\" I asked and began to writhe as her hand stroked my sensitive labia and made them even more swollen and tender.\n\n\"Just the opposite, my greedy little slave-girl,\" Grace replied, as I squirmed my hips shamelessly. \"Now you're going to get down on your knees and use that tongue of yours to service my pussy.\"\n\nI eagerly dropped to my knees. I found myself wanting to be submissive to Grace and kneeling before her and pleasuring her womanhood with my tongue was an excellent place to start.\n\nGrace stood over me, her puffy, pink pubic lips just inches from my face and said, \"So, there's a tradition in Sklavia. Slaves who perform oral sex on their master of mistress are expected to do well. If they do poorly, they get punished. If you do an inadequate job of licking my pussy, do you feel I should punish you for it?\"\n\nIt was the sort of question that should have filled me with dread, but I found it to be strangely thrilling. A wave of desire passed through me as I felt the weight of Grace Fuller's dominance over me. I felt as if I belonged to her even though my slave contract specified that I was the property of Karen Bowden.\n\n\"If you feel that I have failed you, I shall gladly accept whatever punishment you feel is fitting,\" I replied. I was carried away by my feelings of abject submissiveness towards her. I had become smitten with her as she displayed the perfect combination of wicked dominance and loving sensuality as she handled me.\n\n\"What a perfect response,\" Grace replied, smiling down at me. \"You do realize that even if you do an excellent job, I may still punish you, merely because if gives me pleasure.\"\n\nThat frightened me slightly. Slaves fear punishments, but sometimes we find them to be darkly exciting. My sex throbbed at the thought of being punished by Grace Fuller. Maybe I was delirious as my body was still thrumming with post-orgasmic ecstasy, however, the sensations of fear and vulnerability of knowing that Grace could punish me, and I was helpless to stop her ignited a pulsing fire in my loins.\n\nMy buttocks were already sore from the cruel spankings I'd received earlier that evening, and I should have been dreadfully afraid of any additional punishments so soon.\n\nBut when Grace threatened to punish me, I felt a thrumming sense of sexual excitement and I recklessly decided that I wanted Grace to make good on her threat.\n\n\"Mistress, if it gives you pleasure, you should punish me. It is a slave's duty to provide entertaining diversions for her mistress. Use and abuse my body in any way that gives you pleasure.\"\n\n\"If you keep talking like that, I may reach climax before you ever work your tongue into my vagina. Your submissive attitude combined with your exquisite body and that sweet, innocent, girlish face absolutely makes me melt. You don't even realize the potently seductiveness that you're using on me, do you?\"\n\n\"Slaves are supposed to be captivating sex objects, mistress,\" I replied.\n\n\"Well, you've succeeded in becoming that,\" Grace replied. \"Perhaps after you've licked me to orgasm, I'll punish you simply because it would be entertaining to see you writhe and scream.\"\n\nMy head swam at her words, and I found myself falling in love with her. It was insane, I know, but the more she spoke of punishing me, the more I adored her. She was just a landscape designer, but I found myself wanting to be her naked plaything, to be possessed by her, to be objectified by her and to be punished for her entertainment.\n\n\"If you punish me, I'll try to scream prettily for you mistress,\" I said in a sweet, innocent, demure, little-girl tone of voice. Grace sucked air in through her teeth and gave me a look of utter adoration.\n\n\"I have a leather strap in the top drawer of my nightstand,\" Grace said. \"Crawl over there and fetch it for me.\"\n\nMy heart leapt happily in my chest, and I crawled swiftly. Being punished by Grace would create a powerful emotional bond between us that I urgently wanted. I opened the drawer and removed the leather strap. It was long and thin and looked like it could inflict a wicked degree of pain on a naked girl's skin.\n\n\"That's a good slave-girl,\" Grace said as I retrieved the cruel strap from the drawer. \"Now carry it to me in your mouth.\"\n\nI held the leather strap in my mouth and crawled on my hands and knees to Grace. It was a deliciously erotic scene with Grace mastering me and me being utterly submissive. Grace took the leather strap from my mouth, smiled and said, \"Good girl.\"\n\nWith Grace standing ominously over me, holding her wicked leather strap, she ordered me to begin lapping at her pussy. I took her firm, high buttocks in my hands and pushed my face into her beautiful pink slit.\n\nI eagerly worked my tongue across the swollen folds of her pubic lips. First, I licked at the pink labia on the left, then the puffy labia on the right, then the slippery cleft in between.\n\nGrace's sex was seeping moisture even before I began to work my tongue between her legs. I attempted to lick away all of her leaking juices before I focused any of my attention on her clit or her g-spot. I used smooth, slow licks, starting at the bottom, near her asshole and working my way up to the top. Grace's sexual juices had a buttery taste to them and for some reason I found that to be exotic and thrilling.\n\nGrace began moaning almost from the first lick. I took this as a compliment and felt rather proud that I was doing well enough to make her moan. I adored the sounds that were coming from her mouth and once I had licked all traces of fluids from the exterior of her sex, I worked my tongue inside of her and probed her moist interior. Her moaning became much more intense at this point, however, she insisted that I should focus my attention on her swollen clitoris.\n\n\"Oh, God,\" she gasped when I licked the hood away from her swollen clit and her legs seemed to go wobbly. She dropped her leather strap and grabbed onto a nearby chair in an apparent effort to keep from falling down. I lapped at her clit lovingly, marveling at how hard her pink nub was. Her whole body trembled as I repeatedly brushed my tongue against her delectable clit, and I knew it wouldn't be long before she climaxed.",
        "\"Aaahhh! Aaaahhhh! Aaaaahhhhh!\" Grace gasped. The sound of her feminine gasps sounded alluring and erotic to my ears. And then I took her hard, swollen clit in between my teeth and sucked on it. Apparently, I did a good job as Grace responded to my efforts with trembling thighs, frantic hissing sounds and bucking hips.\n\nGrace's hips and pelvis bucked so hard that my mouth lost contact with her pussy a couple of times. After the second time, Grace grabbed my skull and forced it against her crotch, thus making certain my face and her pubic lips would remain connected.\n\nHer orgasm was intense, boisterous and it seemed to go on forever. She panted and forcefully cried out, making deliciously feminine sounds until her legs finally gave out on her, and she collapsed to the floor. Even after she collapsed, her chest continued to heave up and down and she continued to pant. Her eyes were heavy lidded, and her face was breathtakingly beautiful as she savored the sensations of the carnal pleasure, I had unleashed for her.\n\n\"Oh, Heather,\" she moaned. \"That was amazing. That was indescribable. Oh, God, oh God, oh God!\"\n\nShe moaned and gushed about the extraordinary skill of my tongue. She insisted that I had to do that again, but first she wanted to use her leather strap on my beautiful ass. \"Your ass is so beautiful, so perfect, so tempting, I just have to leave my mark on it.\"\n\n\"Get on the floor, face down,\" she said. \"I want your ass raised up and your legs as far apart as you can manage.\"\n\nI assumed the position she ordered, and my skin felt tingly all over as I anticipated the stinging crack of her leather whip across my naked flesh. Something about the idea of Mistress Grace reddening my ass with her leather strap excited me. It was like her putting a wedding ring on my finger. It would be a visible symbol that I belonged to her.\n\n\"You're a very good slave, Heather,\" Ms. Fuller assured me. \"You're so obedient and so adorable. I can hardly believe I have you all to myself tonight.\"\n\nCRACK!\n\nThe leather strap snapped across my bare bottom with stinging force.\n\nCRACK!\n\nIt struck again. I whimpered but did not beg for mercy. I was under Grace's spell and felt an overwhelming sense of excitement as I was punished.\n\nCRACK! CRACK! CRACK! CRACK CRACK!\n\n\"There are some lovely marks forming,\" Grace assured me. \"It's a pity you can't see them.\"\n\n\"Ow! Oww! Ohh! Oww!\" I gasped as my poor abused bottom was further reddened by Grace's leather strap. I adored Mistress Grace's dominance over me. I adored it when she used the strap on my bare skin. I found the pain to be delicious, however, that didn't stop me from crying out in pain.\n\nThe sharp slaps to my bottom were stinging agony, however, the agony was delicious, and the pain was accompanied by waves of desire that heated my loins and hardened my nipples. As the leather strap scalded my poor bottom, it also fueled a pulsing fire in my loins.\n\nCRACK! CRACK! CRACK! CRACK! CRACK! CRACK!\n\nWhen Grace was finished whipping my naked buttocks the only sound in the room was the sound of me sobbing. Grace stood over me and listened to the sounds of my girlish tears for a while before she scooped me up and held me in her arms.\n\n\"You look so submissive and adorable right now,\" Mistress Grace gushed. \"Tears really enhance your beauty. If you were my slave, I'd make sure that you shed tears every day.\"\n\nMy head was swimming with potent sensations of carnal desire, helplessness and vulnerability. This cocktail of emotions resulted in strong feelings of lust and passionate desire for Mistress Grace. I was infatuated with her, and I told her so.\n\n\"Oh, I wish I could make this moment last forever,\" Mistress Grace said. \"I don't think I could be any happier with someone than I am being withy you right now.\"\n\nBefore the night was over, we both ended up on the bed where I lapped at her pussy and sucked her clit once again. I brought her to another earth-shattering orgasm again when she recovered, she pulled me close and once again kissed me passionately on this mouth. Of course, this time I had her sexual juices on my tongue, so she was able to sample the taste of her own pussy as we kissed."
    ],
    "authorname": "allison22",
    "tags": [
        "cfnf",
        "crotch rope",
        "edging",
        "legal slavery",
        "lesbian femdom",
        "lesbian cunnilingus",
        "orgasm control",
        "outdoor nudity",
        "public nudity",
        "spanking"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-whipped-heiress-ch-03"
}