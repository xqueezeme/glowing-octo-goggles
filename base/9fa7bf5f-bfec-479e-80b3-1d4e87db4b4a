{
    "title": "The Greatest Sex Toy Ever Pt. 02",
    "pages": [
        "We were both saturated with sweat and mixed fluids of cum and more cum and vaginal juices; it was a languid smell that titillated my senses.\n\nSally kissed me, got up and walked to the room's shower. \"Join me, Jack?\" with a naked, pretty smile.\n\n\"Of course, beautiful!\" I began to collect the prototype assembly in order to clean and repack it properly. I grabbed my phone and texted the sample people at the company and requested a replacement for 'emergency demo', as this one gave its all and needed to be reset and charged.\n\nEntering the shower, Sally grinned and said, \"Wash my back, Jack!\"\n\n\"A pleasure, Sally! I hope I can count on a good review of my product from you! I'll forward the request if you leave me your email.\"\n\nHanding me the washcloth, she said, \"All over, please.\"\n\nI obliged by getting her back, her sides and running the cloth between her ass cheeks, her pussy.\n\n\"Ooh! Careful there, still sensitive.\"\n\n\"Oops! So sorry, Sal, can I call you Sal?\" turning her around so I could get her breasts and tummy. Mainly her breasts; they were still delicious-feeling.\n\nLaughing slightly she said, \"Call me anything or anytime, baby! Just have your sample box ready to go!\"\n\nWe could hear her cell phone beeping as we turned off the water and began to dry off.\n\nIt had stopped by the time she reached it and pressing the buttons got her message center. She listened for a moment and shut it off.\n\n\"Oh, it's the hospital, they need me first thing in the morning. Two nurses have called in sick for tomorrow! Crap. Not what I need right now,\" she said, looking at the bedside clock.\n\nWe exchanged cell numbers on our iPhones and she tossed hers in her purse and began dressing. \"Guess I better go, as six o'clock will come early.\"\n\n\"Aw! I was hoping you'd spend the night with me, I would love your warm body next to me.\"\n\n\"How sweet, Jack.\" She kissed me and rubbed her tits over my chest until I groaned and then she smiled up at me. \"Promise you'll call next trip? I know you'll be in great demand, but remember, I was first with the best! Really, thanks for bringing me out that depression!\"\n\n\"I promise, Sal.\"I walked her to the door. I gave her my card for insurance and she left me in the doorway.\n\n\"Call me,\" she said.\n\n\"Count on it, baby!\"\n\nI again texted the office in New Orleans for any replacement equipment they could courier to me and left the hotel's address. Hopefully, I'd be first on the list.\n\nI awoke at seven o'clock and got up to take a good long piss when I noticed the room phone message flashing.\n\nStretching out, I pressed the button to get my messages from the hotel room phone.\n\n\"Jack, last night was magical! But I have to work a double today. So sorry, but I need the job.\"\n\nThere was a short pause, then, \"I hope you don't mind, but I was talking to my best friend and let slip details about last night. I know I should have asked you first, but Sadie was insistent and wants to meet you. Well, you and your toy box. She said she volunteers for a job as a test subject so you can have fun with that!\n\n\"Ha ha! From what she's told me, she's got an insatiable box too! Only her husband lost interest in sex after a back injury last year, so they're separated now. Maybe you can help her some with that...Uh, Jack, I gave her your cell so you may get a call from her! Later, Jack!\"\n\nClick.\n\nWow! I hoped nobody else knew about this thing. I'd better start swearing them to secrecy. Then again, it's free advertising, with guaranteed customer satisfaction. Hmmm, got to take that up with marketing.\n\nGetting dressed for my two morning appointments, I picked up my cell and as is habit looked at the screen. Four calls and two messages. Three of the same number, and one from Sally. All 'mobile' area code. I wondered who the others could be? Give me three guesses. Sadie, Sadie, Sadie! Got to be one horny lady.\n\nSally's was last so I clicked on her message first\n\n\"Hi, Jack! Just another thank you for last night. Incredible! And it brought me out a fucking bad mood!\n\n\"Attached is a pic I took of Sadie this morning when she wasn't looking. You can see she's very beautiful, oh! She took off her bra after we talked about you and your toys, so I can imagine she's really hot under the collar to meet you! I can see her nipples poking out so I really hope you can meet with her before you leave town. She's kinda known as a wild child around the hospital. Maybe you can tame her down a bit! Ha ha!\"\n\nI clicked on the next message and listened to Ms. Sadie's excited short message. \"Hi, Jack! We haven't met, but my best friend Sally told me about you this morning! Please please call me back to set an appointment to see your products, [hee, hee]. I would sooo love to sample your wares!\" Another short laugh and she clicked off. I decided to get my coffee and think before I called her back.\n\nBy nine o'clock I had set up two appointments locally on the phone and was ready to eat and go to work. Ha! Work! Should call it \"sexual pleasures for sale!\" I like my job!\n\nI packed up my case of goodies and was downstairs eating a heavy breakfast to keep up my energy when my cell beeped. Looking at the screen I could see it was Sadie. I answered, \"Hello.\"\n\nBefore I finished the last vowel Sadie gushed, \"Oh, Jack! Can I call you Jack? Thanks for answering, I was so worried you were too busy to respond! Can you meet with me today? I want to volunteer as a test subject or anything I can do that will help you with your company's products! I can meet with you at your convenience, anytime is good for me! I can leave in fifteen minutes if you want. Just tell me and I'll meet you wherever you want!\" She paused for breath.\n\n\"Hi, Sadie!\" I drawled, \"You sound slightly excited,\" I chuckled. \"Of course I can meet with you. Sally spoke highly of you so I don't see a problem. We are always looking for test subjects that meet our criteria! You know, healthy, uninhibited, high libido! We even have a new virtual reality setup that needs field testing, you might be perfect for that.\"\n\n\"I just have to tell you that you have to sign a release and confidentiality statement before I can discuss anything further and or open my sample case. Maybe an early dinner at my hotel? I haven't gotten the replacement items yet but the courier should drop them off before then. Oh, and don't tell people about any arrangements we make, please.\"\n\n\"I would love to sign anything Jack! I am excited at being a part of the scientific research your company is pioneering! Anything I can do to help your research I'd be willing to do, hell! I'll do it for free!\" Sadie was obviously panting the words out; I guess Sally did one hell of a job describing the fun she had while getting her brains fucked out.\n\n\"Okay then, Sadie, how's four o'clock sound?\"\n\n\"That's fine, Jack. What do you want me to wear?\"\n\n\"Oh, just whatever you're comfortable in when meeting a sales rep for the first time who wants to show off his stuff! How does braless, tight short skirt and heels sound to you?\"\n\n\"Oh, Jack!, You are making my day!\" Sadie practically drooled over the phone.\"I can't wait to get home and change!\"\n\n\"Alright then, lady, I'll call you around three to make sure there are no problems.\"\n\n\"Damn, Jack, I hope there are no problems! Call me! Bye!\" she clicked off before anything changed.\n\nI looked at the phone before putting it in my pocket when a uniformed female courier walked up to the table and asked,\" Mr. Jack? I have a package for you.\"\n\nNice tits, showing a little cleavage, with a gorgeous ass and legs.\n\n\"Already? Girl, you got here fast!\"\n\n\"Well it's only a two and a half hour drive from the development center warehouse, and they said the shipment was urgent, so here it is!\" She handed me a receipt after putting the medium size box on the floor next to my leg. I noticed her hand sliding against my leg as she set the box down.\n\n\"Thank you so much, er, Karen,\" I saw her name tag. \"Sit down and let me get your tip.\"\n\nKaren sat and I felt her leg brushing against mine suggestively.\n\n\"No need Mr. Jack! But I know Tommy at the warehouse and he let slip what was in the box! I deliver for y'all several times a week, always urgent!\n\n\"Maybe I could get a demo sometime. I'm going to Panama City next and will be back through here tomorrow afternoon. Tommy said to ask you; he said you're the best rep and researcher they have!\"\n\n\"Oh he did, did he!\" I smiled at the compliment, thinking Tommy needs talking to!\n\n\"Maybe we can work something out for next week with another rep; I'm kind of booked up with a lady here!\" I suggested.\n\n\"Oh, thank you! I have your cell and will call next week if that's okay?\" Karen stood up and left before I could say a word. I better get to work as I am going to have my hands and other parts very busy the next two days. I took the package to my room for safekeeping and went to my first appointment.\n\nMy morning went by fast and the orders were great; I wasn't number one in sales for no reason. I worked hard...well mostly in hotel rooms, but hard!\n\nI got to my room at two o'clock, removed my jacket and tie and opened the package.\n\nVoila! What was this? I saw four individual plastic boxes with different items in each. I pulled the shipping order out and began to study it.\n\nWritten in ink across an empty space was a note from Tommy. I read the content.\n\nMr. Jack, sorry but the module you used up was unavailable for this morning due to demand. However, I think you will like these four prototypes that need more field work if you get the opportunity. Number one box is an advanced unit like you wanted. Please read the instructions carefully as I understand the results can be addictive and overwhelming!\n\nRegards, Tommy H.\n\nOh! Number two is going to be a big hit everywhere! Tommy\n\nPicking up number two I looked at the four lines of instructions under the product name, \"Enhancer 4oz.\"\n\n1. Please wear finger cots provided before opening jar\n\n2. Unscrew the top and LIGHTLY dip the protected finger into the honey like the product.\n\n3. Gently rub product onto the desired area. [clitoris & penis, nipples etc.]\n\n4. The product takes effect within 15-30 seconds\n\nWow! Sounds like something illegal! Taking a finger cot out and unscrewing the cap I decided to try it out on myself. I unzipped my pants and hauled out Willie. I sat down on the sofa.\n\nDipping my finger into the container, I barely touched the surface of the golden syrupy contents and got the pea-size drop on it.\n\n\"Well here we go, little buddy,\" I said as I lifted up my medium long cock and rubbed the stuff on the underside, moving up and down the frenulum to the base. Feeling there was still syrup on my finger, I made a circle around the head of my dick and waited.\n\nLooking at my watch I saw twenty seconds go by and felt a warmth travel from my balls to the tip of my dick. A minute went by. Willie got warmer.\n\nSuddenly I lost control of my lower body as a wave of euphoria took over. My member came to an erect state in two seconds and my crotch arched off the sofa as if reaching for a pussy to penetrate. My hips lifted up and down searching for a rapture just out of reach that I knew was waiting.\n\n\"Oh shit!\" I whined as a blissful pulsing of my dick started sending pleasure and ripples of delight all over my body. I started shaking as I felt a powerful orgasm begin to travel the length of Willie. I grabbed my little buddy and squeezing and pulling on him sent a solid ribbon of cum arching out of him to splatter on the carpet.\n\nIncredibly, the cumming went on for longer than a normal hand job and slowly ebbed with little throbs of pleasure pulsing over me. I sensed as well as felt the final dripping of fluids off my cock.\n\nMy breath came in deep and fast and I thought, \"I can't wait to rub this on Sadie's body!\"\n\nI walked towards the bath and my penis kind of throbbed pleasantly causing me to stop walking and grab it. The sweetness of the tickling was too good for standing so I went to my knees on the carpet and gently squeezed my dick as the pleasure was mounting quickly. I felt my balls jump up into position to ejaculate and my head fell backward as my second cum erupted past my fingers.\n\n\"Oh shit, shit, shit!\" I managed to wheeze out as the orgasm tightened my every muscle and I sat back on my heels while I grabbed a huge lungful of air as I had been holding my breath for what seemed minutes. I was blowing like a breaching whale.\n\n\"That was good! Wonder if there are any more?\" I crawled to the bathroom door and standing, walked to the sink. I washed my face and hurried a hand through my hair to look presentable for my appointment with Sadie.\n\nI was buckling my belt when the knock came at the door. \"It's me, Mr. Jack. Sadie.\" Sweet anxious voice!\n\n\"Coming, Sadie, Just a moment.\" I looked for my loafers and was slipping them on when another wave of pure sugariness rose up my cock and my third, fortunately dry, orgasm swept over me and my knees again gave out.\n\nI finished orgasming on the carpet, weakly saying, \"I'm cumming, Sadie.\"\n\nI arose and stumbled to the door and opened it to a very wide pair of blue eyes that could I swim in. Sadie's face was gorgeous but her eyes took what little breath I had left, away. Thick dark hair came to her shoulders to pleasantly frame her face. She was medium height with a pleasing figure that included a pair of firm, poking straight at me, 36B boobs. Nipples appeared to be slightly puffy and were they aroused? I'm a sucker for nipples that try to get my attention. The tight skirt and her pink vee-necked t-shirt completed the vision.\n\n\"Please come in, Sadie, I was just looking over the shipment of new items and I got sidetracked.\" More like bushwacked, I thought to myself.\n\n\"Have a seat and I'll get the releases for you to look over.\" I walked to my brief and took out the release documents and handed them to her. \"I'm authorized to offer you a small fee for compensation of your time and comments if you decide to hang around for all four of the new appliances. Sally is tied up at work or I would have offered that to her.\"\n\n\"You're serious? That's a bonus I wasn't expecting! Just show me where to sign!\"\n\n\"Okay. You are agreeing to volunteer to experience, evaluate our products and agree to not discuss them outside the company until they are offered up for sale, do you agree?\"\n\n\"Yessir! \"\n\nSadie signed her name in the appropriate places, in a very feminine script, handing me the back the signed papers and the pen.\n\nSetting them on the desk I turned to her and asked her why she was so eager to be a test subject in a field few people even thought about.\n\n\"Well, Sally told you about my separation from my husband, didn't she? Well, my love life has been unsatisfactory at best so maybe this will sorta make up for it. I've been in a funk as the few dates I've had were disasters, and she said you were a professional so I feel safe!\"\n\nI was about to thank her for the compliment when my cock started getting hard and that now-pleasing sexual dick tickle announced an imminent orgasm. \"Ah! Excuse me a moment, Sadie,\" I murmured and almost made it to the bathroom when it hit me. I bent over holding my knees and moaning for a shorter time than the last orgasms.\n\n\"All you all right, Jack? Can I help or call 911?\" Sadie was wide-eyed and concerned.\n\n\"No. Ooo! I'm okay!\" as the sweet throbbing of my dick subsided to a nice warm afterglow.\n\nSheepishly I said, \"I tried one of the new products and it's causing repeating orgasms that are coming at the regular intervals.\"\n\nSadie's blue eyes grew wide as she comprehended what I said, and she said quickly, \"I wanna be next! Please, it's my turn next! I'm ready for that! You need a woman's point of view too!\"\n\nJust like a woman, just got here and wants to take charge. Well, I could help her with that.\n\n\"Okay, just let me wash my face and you can undress and get under the sheet.\" I'll be right back.\"\n\nI made it to the bathroom and was washing my face when I heard the bed springs gently make a noise, \"Ready when you are, Jack!\" came the eager voice of my new helper.\n\nPutting on my best professional look I walked up to the bed with the small jar of Number Two in my hand.\n\nSadie was on the side of the bed, covered by the sheet.\n\n\"Are you nervous? I asked. \"I hope you're not too shy as I have to move the sheet to apply the gel.\"\n\n\"Not at all, Jack.\" She reached her right hand to the sheet and slowly pulled it off her body.\n\n\"Wow, just wow,\" I thought, her figure is perfect! Tiny waist spreading out to smooth rounded hips, a neatly shaved landing strip pointed down to her pussy. The outline of her outer lips was already moist. I was in love already. Her tits were like upturned pudding bowls, the nipples sunk in a little depression, so very erotic.\n\n\"Okay then, just let me apply some of this gel. Actually, I'm going to start calling it honey as that's what it reminds me of.\"\n\n\"Whatever you think, Jack,\" as she spread her legs to give me access to her pussy. \"It goes right on my vagina, right? On the clitoris?\"\n\n\"Yes, ma'am,\" I said hopefully. I really should have read up more on the application of the honey, but what the hell, there were only four steps on the package.\n\nIt worked good enough for me. I put a pea-sized amount of the honey and went her right to her lips and spreading her legs more, I gently rubbed my finger onto a very tight clitoris. Sadie slid her feet towards her ass and received practically all the honey. Shit! I forgot the finger cot! Hope I didn't screw up and get a stronger application myself.\n\n\"Ooh! Jack! That feels good already!\" as she arched her hips to gently knead her pussy into the air. Sorta like I did on my first orgasm.\n\n\"My vagina is getting warm and starting to tingle!\"\n\n\"Ahh! That's too good, Jack! Can I rub it? I think it needs rubbing now!\"\n\n\"See if you can hold off for a moment to see if you can orgasm hands-free, Sadie. We want to get as much information on the effect as possible.\"\n\nHer hips were grinding frantically against an imaginary partner. The honey was taking effect sooner on her than with me. \"How's it feeling now?\"\n\n\"Like I need to get fucked, and I mean fucked now, bad or good, I don't care.\" Her head was thrown back against the pillow and her face was contorted with the agony of an impending cum. \"I'm on the edge but can't cum!\" Sadie cried in frustration.\n\nI reached over and rubbed my hand over her pussy.\n\n\"That's it, Jack, harder! Put your finger in me! Please! I can't take this; I'm going to explode or scream!\"\n\nI slipped my middle finger into her sopping pussy, searching for her G-spot and Sadie rocked her hips to get it in as far as possible. \"That's better, Jack, but I can't cum! Put another finger in my pussy!\" Sadie was gulping air and was stretched out. I put a second finger in and wiggled them over her G- spot.\n\n\"Ahhh, it's so good but I gotta cum soon!\" Sadie arched her hips repeatedly into the air.\n\nBy now my dick was starting to exhibit that familiar warmth that I knew preceded another forced orgasm. I dropped my pants and briefs and moved my butt closer to Sadie. Her hands were flailing around and I lifted my hips so her left hand could grab it and help me get relief.\n\nSadie's hand found my dick and immediately began squeezing it, crying out in pure sexual agony.\n\nShe said, \"That's not working, Jack! Get on top of me, please! You're gonna have to fuck me!\"\n\n\"Are you sure, Sadie?\" I moaned as she pulled my cock towards her.\n\n\"Just do it NOW, Jack! I am on the edge of a huge cum and I need your help! Please just put your dick in my pussy...Now!\"\n\nI quickly repositioned my body on Sadie's, her legs wide open and demanding to be penetrated. Her hand pulled my now pulsing cock to her entrance and pulled me into her warm, wet and slippery pussy all the way until our pubic bones ground together. I fucked her and she fucked me. There was no rhyme or rhythm, just pure erotic, super passionate sexual intercourse.",
        "\"Ahhh! Yes! Yes! That's what I want!\" moaned Sadie as she began to cum all over my dick.\n\nMy dick, now close to its own orgasm, welcomed the new sensation and the throbbing began a steady cum, pulsing, once again, a little cum but huge pleasure.\n\nI'm not sure how long it went on, just that we had both just had unbelievable orgasms. We started to come back to the real world.\n\nI could feel Sadie's pulsating pussy gripping me as we continued to gently fuck each other, slowly coming out of the euphoria we had shared moments ago. What a climax.\n\nI began to withdraw my spent penis from a warm pussy when Sadie pulled me tighter to her.\n\n\"It's not over, Jack. I'm building up again; it's super good! I can feel my pussy getting wetter.\" Sure enough, Sadie was going to cum again already. \"Hold me, I can't go through another of those edge things.\"\n\nSure enough, Sadie's eyes started glazing over and she whimpered, \"Jack! I'm cumming again, please fuck me, don't get out! I'll do anything you want, just fuck me!\"\n\nSadie moaned as her orgasm built up slowly this time. I felt her contractions on my dick and I too began a slow build up to ejaculation in her cunt. Pure ecstasy, so pleasurable, sooo...\n\n\"Ahhh!\" we both moaned together.\n\n\"So good, Jack,\" moaned Sadie.\n\n\"Ahh, so good,\" I moaned pushing my dick as far into her as it would go, just holding it gently against her pubic mound as she gently moved under me to continue our orgasms.\n\nAfter the latest explosions in our nether regions, I thought maybe we would get a respite from cumming. I lifted up on my arms to better see Sadie and asked, \"Think it's over for a while?\"\n\n\"I don't know, Jack, it's still feeling like there's more, but not at this moment. That was the sweetest orgasm I've ever had. How are you doing?\"\n\n\"I'm not sure, honey, I feel like I could go for hours!\"\n\n\"We may have to, Jack. Boy, first day on the job and I need a vacation; how long do the effects last?\"\n\n\"I'm not sure, Sadie, the directions weren't that explicit.\"\n\nSurprisingly, my dick was getting erect again. I wondered how much not using the finger cot was affecting me? Of course, I was up to my nuts in a honey-filled pussy so I'm sure I got a reinforcing bit of honey when I entered her. Oh well, live and learn.\n\nSadie pulled my face to hers, kissed me deeply and asked, \"What just happened, Jack? That was the most intense sex I've ever had. What is in that gel?\"\n\nI disengaged from her pussy, hard dick swinging and got up and walked to the package where there were still three boxes inside. I lifted each out and set them on the desk.\n\nWell shit! On the bottom was a folder that said, Please read all directions enclosed carefully. Experimental Nanotechnology enclosed.\n\n\"I think we need to reread the directions on our products!\"\n\n\"Really? Why?... Oh, shit, Jack! You better get back over here! It's starting again! I'm gonna cum. Please get over here!\" Sadie's eyes were starting to glaze again.\n\n'Oh well,' I thought, scurrying to the bed. 'No rest for us investigative researchers!' \n\n*****\n\nI hope you continue to follow the adventures of Jack and Sadie as we make our way through our box of goodies. Please leave a score and comment as we all like pats on the back if earned! Jack"
    ],
    "authorname": "jkthekat",
    "tags": [
        "toys",
        "erotic",
        "aphrodesiac",
        "edging",
        "mutiple orgasms",
        "nano tech"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-greatest-sex-toy-ever-pt-02"
}