{
    "title": "Idle Hands Ch. 05",
    "pages": [
        "<p align=\"center\">Forbidden Fruit<br ><br >Part Six of The Succubus<br ><br >Copyright 2016 Alana Church<br ><br >== || &lt; &gt; || ==<br ><br >~~ All characters in this book are over 18. ~~<br ><br >== || &lt; &gt; || ==</p>\n\nWarning for the Literotica version:<br ><br >Despite the title, this is part six in an eight-book series. The first two parts were listed in \"Sci-Fi and Fantasy,\" the third in \"Erotic Couplings,\" the fourth in \"Incest/Taboo,\" and the fifth in \"Sci-Fi and Fantasy.\" This one is going into the \"Sci-Fi and Fantasy\" category, as well. However, if reading about taboo sex disturbs you, I suggest you stop here, because there is some.<br ><br >As always, I hope you enjoy this story, and I welcome both your votes and your comments.<br ><br >Thanks,<br ><br >Glaze72\n\nOur story thus far...\n\nIn \"Idle Hands,\"Althea, first among the succubi, was torn from her body by a foolish mortal. In desperation, she sought refuge in the mind of Rachel Wainwright, a successful attorney. Weakened by the ordeal, Althea knows the only way to return to her own body is to restore her power, which she receives by tapping into the sexual pleasure of others.\n\nWith this in mind she begins a slow seduction of her host, nudging Rachel towards a more sexually adventurous lifestyle. At the end of \"Idle Hands\" she has seduced her intern, Jeremy Edwards, and has also attempted a reconciliation with her former husband, Joshua. Meanwhile, her children find her attitude towards them softening, as Rachel becomes resigned to the fact that Sarah wishes to attend culinary school, while Alex wants to become an actor.\n\nThe story continues in \"The Devil's Playthings.\" In a heroic courtroom scene, Rachel makes an impassioned argument for the future of the earth in a case involving corporate pollution. In a stunning verdict, the polluters are fined an astronomical sum, one third of which will go to Rachel's law firm. She decides to use her bonus to semi-retire from her work as an attorney, instead choosing to do pro bono work as she sees fit.\n\nAt the same time, sexual urges are beginning to manifest in Rachel's home. Driven by a compulsion she can't explain, she makes a full-time job offer to her maid, Maria, with the caveat that she must dress attractively around the house. Maria, for her part, looks on the offer (with a substantial increase in salary and the prospect of a rent-free apartment above Rachel's garage) as the answer to her prayers. When Rachel's husband, Joshua, returns home, he finds his daughter, Sarah, strangely flirtatious. The only person who seems immune thus far is Alex.\n\nDuring dinner one night, Rachel and Joshua agree to let the kids pursue their career goals without interference. Sarah will attend culinary school. With the help of his parents' connections, Alex will transfer from his dead-end community college into the theater department at Northwestern University.\n\n\"The Devil's Playthings\" ends with Rachel and Joshua reconciling. Driven by admiration of Josh's artwork, which graphically depicts their love for each other, including the night Alex was conceived, Rachel performs oral sex on him. Later that night, they make love for the first time in months. At the moment of her orgasm, Rachel falls unconscious. When she wakes, she finds herself in a beautiful, pastoral scene, where she is greeted by a gorgeous woman who introduces herself as Althea, a succubus who has been sharing her mind.\n\nIn \"Dark Reflections\" we learn about Althea and her history. She is the firstborn of the succubi - a scion of Lilith, Adam's first wife, and one of the Fallen, an angel named Imriel who refused to fight for God during the War in Heaven, when angels rebelled against the Almighty. Exiled to Earth, Imriel and others like him mated with human women and men, siring the lines of the succubi and the incubi, who were charged by God to remain vigilant against the Forsaken, those demons who fought against God and were cast into Hell.\n\nRachel, now aware of the immortal being who shares her body, learns to live with the fact, and indeed, to revel in it. Her reconciliation with her husband is a joy to her. At the same time, she notices that Althea is having an effect on all the members of her household. Maria and Alex, recognizing the compatibility of their natures, make love for the first time in Maria's apartment. And Rachel learns that her husband and daughter are drawn to each other as well. Rather than being outraged, she considers how to bring two of her loved ones together without damaging either.\n\nThe story continues in \"Bright Shadows.\" At a family cookout which Jeremy attends, Sarah finds herself strongly drawn to the attractive young intern. She tries to seduce him, but her advances only succeed in driving him away in confusion. Young, hurt, and frustrated, she is consoled by her parents. Driven by love rather than lust, Sarah and Joshua make love that evening, their incestuous relationship given approval by Rachel herself.\n\nThat evening Rachel makes a frightening discovery. Her body is beginning to change in order to conform to the spirit it is hosting. The first change manifests in the appearance of a tail. Rachel is horrified at first, but is counseled by Althea, who demonstrates some of the benefits of her new appendage. The following morning Rachel confesses Althea's existence to Josh. Confronted with physical proof in the form of the tail, her husband accepts the truth, but is suspicious as to whether Althea's spirit is as benign as she claims.\n\nLater that day Rachel, Maria, and Alex go to the hospital in order to check in on Althea's body. They find her well-cared for, but her body is growing frail after weeks in a coma. Driven partly by Althea's aphrodisiacal presence, partly by their own desire, Maria, Alex, and Rachel make love in Althea's hospital room. They are interrupted in the act by Dr. Yasna Marafi, the physician who has been caring for Althea. They return home to find a strange man trying to break into their house. Rachel confronts him, and she and Althea discover he is a servant of a demon-spawn named Mortimer Kincaid, the unholy offspring of a male human and a female demon. What is worse, Kincaid knows of Althea's injuries. It is only a matter of time before he finds her body and kills her.\n\nOr, even worse, finds Rachel and her family.\n\nIn \"Sacred Sins,\" Rachel and Althea confront the consequences of their actions. Bringing everyone together, Rachel confesses to Althea's existence, and proves it by showing them her tail. With Jeremy's assistance, they concoct a plan to kidnap Rachel's body from the hospital. Later that afternoon, Jeremy and Sarah become lovers.\n\nThat evening, they drive to the hospital. But the rescue attempt goes horrifyingly awry, as Kincaid has also deduced Althea's location. In a terrifying scene, they are barely able to escape, fleeing the hospital with Althea's body while Kincaid chases them in demonic form. By the time they reach home, Josh's truck and the trailer they used to transport Althea's body are little more than shredded wreckage.\n\nLater that night, they enact a ritual designed to return Althea to her body. Giving selflessly of their sexual power, they at first think they have failed. But just when hope is lost, Althea stirs and wakes. Over a meal she confesses her love for all of them, and expresses her hope that they will not be stupidly jealous or possessive when (not if) she takes one of their lovers as hers.\n\nThe story continues late that night.\n\n*****\n\nAlthea stood in the shower, letting the hot water run over her body. For long moments she was content to let it play over her golden skin, washing away the faint, acrid scent of her own sweat. She wrinkled her nose in distaste. The staff at the hospital had done their best, but no one, however dedicated, could keep someone who was in a coma completely clean. Now that she was restored to her body by the efforts of Rachel and her family, she could indulge herself. She slowly soaped her body, letting her hands play over the large firm swells of her breasts and the lush curves of her buttocks.\n\nOf all the inventions mankind has come up with, she thought, I think I like indoor plumbing and running water the best.\n\nWell, after central air. And vibrators. And internet porn. Bless them, they are clever, she added with a smile.She squeezed a generous dollop of shampoo into the cup of her palm, then started to wash her hair, her hands kneading the foamy lather deep into the blond strands.\n\nWhen her arms began to ache from the effort of holding up the sodden mass of her hair, she rinsed off and stepped out of the shower. She wrapped a towel around her head, trying to soak as much water she could out of her golden curls. Another was draped casually around her hips, more for her host's sense of propriety than from any innate modesty. She leaned towards the mirror over the sink, eying her reflection critically.\n\nToo thin, Althea, she thought. Granted, modern ideals of attractiveness now often favored those with an almost waif-like appearance, with slim, shallow curves and small, high breasts. Althea would never attain that standard of beauty, not did she want to. The curves of her breasts, thighs, and hips were far too lush and bountiful. But even by her own standards, she had lost too much weight in the past few weeks. She blinked at her own face, one hand tracing the prominent line of her cheekbones. Her skin, while still golden, looked unhealthily sallow, almost translucent, as if she had spent weeks cooped away from the sun.\n\nWhich is all too true. Good thing I'll be able to do something about that soon. Dismissing the thought, she opened the door to the guest bedroom where Yasna was waiting for her. Silently she thanked Rachel and Joshua, her hosts, for having the good sense to give her a room with its own bathroom. At this point, the last thing the members of the Wainwright household needed was to have her parading up and down the hallways half-undressed.\n\nTera's Sweet Titties, Althea thought as she stepped out of the bathroom and into the bedroom where Yasna was waiting for her. The last thing I thought I'd be doing with this girl is playing psychotherapist. Especially when we could be doing so much more.\n\nShe frowned down disapprovingly at the nude young woman who was kneeling on the floor. Her hands were clasped in front of her. Her eyes, when they looked up, were openly adoring, almost frightening in their inability to see how she was debasing herself.\n\n\"Mistress,\" she said. \"Command me. How may I please you?\"\n\n\"Stop this foolishness immediately and stand up,\" Althea said. She had already decided to nip this particular problem in the bud. \"You don't have a submissive bone in your body. Don't think you can fool me.\n\n\"Now,\" she said, as Yasna scrambled to her feet. \"What's the meaning of this little charade?\"\n\nYasna's mouth opened and closed rapidly, reminding Althea, she thought uncharitably, of a recently-caught fish. \"I...\"\n\n\"You thought that since I am a succubus, I have some sort of need to be the dominant in my relationships?\" Althea kept her voice cool. \"No. I do enjoy being dominant at times,\" she stated. \"But only when my partner is truly submissive.\" She tried to keep one corner of her mouth from curling up, but was unsuccessful. \"Which you aren't.\n\n\"What you are,\" she stated flatly, but without condemnation, \"is elf-shot.\"\n\n\"What?\"\n\n\"Beguiled. Obsessed. Infatuated.\" She shook her head, the towel loosening and falling to the floor. She ignored it, and blond hair spilled down her back in a damp wave. \"You know what I am, right?\"\n\nYasna nodded. \"You're a succubus. The daughter of...an angel?\"\n\nShe nodded, glad that the dark-haired woman did not seem to be too far gone. There was certainly nothing wrong with her mind, once she pulled it out of the rut of unthinking worship. \"And a human. My mother was Lilith, the first wife of Adam. Unfortunately,\" she said, her lips quirking with old humor, \"they had a bit of a falling-out. She left him and mated with my father, Imriel.\n\n\"I'm powerful. Sometimes, too powerful for full-blooded humans who are unprepared. When one of us spends too much time with one of you, you risk becoming obsessed.\n\n\"Usually, this is not a problem. We have ways to lessen our impact. To keep humans from being overwhelmed by our beauty.\" She smiled with grim amusement. \"However, when you spend a couple of weeks in a coma, you find out that your options are a little bit limited.\n\n\"But now that my mind is back where it belongs,\" she sighed. \"Come here, Yasna.\"\n\nThe young woman stepped forward at once, transparently eager to please. Althea took her in her arms. She closed her eyes against a frustrated stab of desire as Yasna's warm brown breasts pressed into her own golden globes. When is it going to be my turn? I have spent so long drawing power from the sexual experiences of others I've practically forgotten what it's like to have it first-hand. Her fingers twitched, aching to heft the sweet weight of Yasna's breasts, to taste her mouth, to spread her thighs and not emerge until she had brought her to climax after loving climax, a fitting end to a night when she had finally reclaimed her own body.\n\nInstead, she wove her consciousness into the shining elegance which was Yasna's mind.The key to her obsession was easy to find. Frustrated desire, years old, bent back onto itself by the dictates of an uncompromising religion and the desperate urge to please a much-beloved father. With practiced ease, she undid the bonds. She was tempted to attempt a full healing, but instead withdrew quietly. Yasna must find her own way through that tangle.\n\nPhysician, heal thyself, she thought morbidly. When she opened her eyes, the young woman was looking at her with awe, and a touch of fear. But not, she was happy to note, with the mindless adoration which she had showed just a few moments before.\n\nShe took a step back, her forehead wrinkling in consternation. \"What...\" She shook her head, as if trying to dislodge an errant thought. \"Wow. That was...weird.\" She looked at Althea, then down at herself. \"Why am I naked?\" Her voice was adorably confused. \"I didn't...I'm not...\" Her fingers were trembling slightly. \"What did we do?\"\n\n\"We didn't do anything,\" Althea reassured her. \"And you're naked because you thought I was a sex-obsessed immortal who was going to ravage your tender young body,\" Althea said. \"Most of which is true,\" she continued cheerfully, as Althea blinked at her in confusion. \"But not tonight. I am whipped. And not in a good way. What I want to do is go to bed and get a good night's sleep.\n\n\"But I wouldn't mind having some company,\" she said, lowering her head and looking up seductively through her lashes. And it was the truth. Although her constant, boiling need for sex had been turned down to a low simmer by her complete exhaustion, the thought of a warm body sleeping next to her had its own comforting charm. She reached out, trailing a finger down Yasna's arm. \"Sleep with me tonight? I've been...\" her voice caught, almost breaking. \"I've been alone for too long.\"\n\nShe removed the towel from her hips, ignoring the way Yasna's eyes followed her hungrily, and slid between the cool sheets of the bed. There was a moment's long hesitation, then she felt the mattress sag slightly as Yasna climbed in beside her. She closed her eyes and rolled over on one side, her back to her companion, her head sinking into the comfortable down pillow. With long-practiced skill, she stretched her consciousness outward, warding the house and all who dwelt within from mystical attacks. She had fallen out of the habit years ago, to her regret.\n\n\"You can relax, you know,\" she said conversationally. Even with her eyes closed, she could sense how tense her companion was, ready to leap out of bed if she made one false move. \"I'm not going to do anything you don't want me to do.\"\n\nA long silence answered her, then a slow, gradual loosening of the tension. The bedclothes shifted as Yasna turned over. Just before she drifted off to sleep, she felt an arm hesitantly rest across her waist. A warm pair of lips kissed her, right between the shoulder blades.\n\n\"Good night, Althea.\"\n\n*****<br >\n\nAs Althea slept, she dreamed. Dreamed of the three pairs of lovers who shared the house with her.\n\nThe children had left, still stunned by the events of the night. Rachel had even managed to chase Maria off to bed, sending her to her apartment over the garage with Alex. The black-haired Latina had made only token protests about needing to clean the house, disappearing with her boyfriend.\n\n\"So. What do you think of Althea?\" Rachel asked, trying to keep her voice casual.\n\nJosh hesitated as he dumped cold onion rings and leftover french fries into the trash. Used napkins, empty soda cups, and burger wrappers were tossed into the recycling bin. One good thing about fast food was that it was relatively easy to clean. Though his doctor would have something to say if he had seen the recent Feast of Doom he had introduced into his cardiovascular system.\n\n\"Truthfully? I think she's gorgeous, intelligent, opinionated, dangerous, bossy, and sexy as hell,\" her husband said. He paused for a beat. \"Which is a relief. I can't tell you how long I've been waiting to get a Type A personality around here. Everyone else in this household is so meek.\"\n\nShe laughed and drew him down for a quick kiss. \"Ass,\" she said fondly. She picked up a roll of paper towels and headed back into the dining room, Josh following her. She tore off a sheet and started wiping down the table, brushing crumbs into her cupped hand and dropping them onto a waiting plate. As Josh cleared the table, pausing occasionally to eat a leftover onion ring, she could feel his eyes on her. She pretended not to notice, but allowed her hips to sway back and forth as she slowly made her way around the table.\n\n\"You love her, don't you?\" he asked suddenly. \"Althea. You love her.\"\n\n\"Of course I do,\" she said, smiling over her shoulder at him. \"And I love you. And the kids. And Maria. And I think I am coming to love Jeremy, too. And Yasna is so sweet she makes my heart ache.\" She covered her belly with one hand. \"And I love the babies you are going to give me, my love.\"\n\nHe looked at her, his eyes wide. \"Babies?\"\n\n\"Babies,\" she said firmly. \"I stopped taking my birth control pills. I want more children, Joshua. Your children.\" She finished cleaning the table, dropping the paper towel into a litter basket. With a naughty smile she shrugged out of her loose shirt and hiked her skirt up over her hips. Leaning over the table, she spread her legs wide. \"Come on, baby. I know you're horny as hell. And so am I. No time like the present to get started, huh?\"\n\nJosh came to stand behind her. His strong hands were on her hips, though he kept his jeans on. \"I don't recall you asking me if I actually wanted more kids,\" he said. He snuggled in close and she shivered as the feel of warm, worn denim brushed against the sensitive skin of her thighs. She sagged down, letting her chest rest on the table, and she gasped as he kissed the tip of her tail, set flush with the skin of her spine. \"What if I decide two is enough?\"",
        "\"You're not the only fertile man in this household,\" she said, her cheek pressed against the silky wood of the table. \"And I bet Alex would be more than willing to fuck a baby into Mommy. But it's your children I want now, Josh. Alex can wait his turn.\"\n\nThere was a long silence, broken at last by the sound of a zipper being lowered. Rachel closed her eyes. In moments, she could feel the hot head of Josh's cock slip between her nether lips. Before she could do more than take a deep breath, her husband had driven himself inside her.\n\nTheir moans broke from their mouths in unison, more an exclamation of relief and completion than of pleasure.\n\nI wonder, Rachel thought. Is Althea's influence even greater than she thought? Are we becoming like her, where sex is more of a need than a desire? She reached out for her friend with her mind, but only received a sense of drowsy contentment.\n\nSleeping, she thought, and smiled, even as Josh continued his welcome assault of the dripping folds of her pussy. His groin slapped into her ass, making the table creak alarmingly as he drove his weight against her. She lifted up, allowing her hands to cup her breasts. She slowly kneaded her mounds, stoking her lust higher.\n\n\"Let me,\" Josh said, his hands gently replacing hers. \"Have I ever told you how much I love your tits?\" he breathed into her ear. She gasped in pleasure as he gave a nipple a tiny tweak with his fingers.\n\n\"Maybe once or twice,\" she said. \"Or a thousand. But it never hurts to hear it again.\" She let her hands drift down between her legs. One tapped the bud of her clit and pushed on the rise of her pubis. The other moved even lower, her fingers reaching to stroke Josh's shaft as it plunged in and out of her. She could feel her wetness on his rigid pole, and the thought aroused her even further. For a moment she regretted their position, which kept her from using her tail on him.\n\nJust wait until he finds out what that feels like, she thought smugly. Remember how he nearly lost his mind when you licked his asshole for the first time? This will be even funnier.\n\nHer thoughts suddenly cut off as Josh changed positions, shifting slightly to find a more comfortable angle. As he did so, she found her pleasure spiraling upward, until there was little she could do but lay on the table and gasp. One hand flailed behind her until it caught Josh's, gripping it hard.\n\n\"Coming, baby. I'm coming. Please, come with me. Help me make our child.\"\n\nHer spasming vagina clenched around Josh's cock as her orgasm swept over her. At the same time the crashing waves of pleasure gathered her in their stormy grip, she felt Josh reach his own peak. The steely bar inside her erupted in a volcanic climax, shooting torrents of hot seed into her. She sighed as she felt them coat her womb, every precious drop a potential life.\n\nJosh slumped across her back, shaking. She turned her head and caught his mouth in a long, lazy kiss, her teeth nibbling his lips playfully. \"Thank you,\" she whispered.\n\nWith an effort, she levered her body off the table. Josh's arms came around her, holding her upright as she staggered to her feet. She could hear his deep chuckle in her ear as he took in the spot where she lay. The shining surface of the table was streaked with sweat and smudges.\n\n\"Maria is going to have some problems figuring out why the table looks like that.\"\n\nShe smiled up at him. \"She knows us, darling. I don't think she'll have any trouble figuring it out at all.\"\n\n*****\n\nAt that moment, Maria was wondering what she had done to deserve such exquisite torment. The thought made her giddily happy.\n\nAs soon as she and Alex had entered her apartment, her master had stripped naked, laid on the bed, and with his cock rapidly rising, had ordered her to pleasure him with her mouth. She had fallen on his bone like a starving dog, but his generosity was, as always, tempered by restrictions that drove her mad and at the same time aroused her even further.\n\nWhich was why she was giving her lover a blow job while she was fully clothed, despite her need to feel his skin on hers.\n\n\"No, Maria,\" he had said, even as she had taken him into her mouth, swirling her tongue around his wonderfully hard, thick shaft, the very embodiment of male virility. \"You can't touch me. Only your mouth on my...on my cock,\" he had sighed. \"Touch me anywhere else, with any other part of your body, and I leave.\"\n\nPart of her was convinced it was an empty threat. That her master needed her as much as she needed him. That after the cataclysmic events of the past night, they needed the comfort of each other's bodies.\n\nBut she didn't dare put her convictions to the test. If he were to leave her now, frustrated and unfulfilled, after having been exposed to the erotic magnetism of Althea, she didn't know how she would cope. So she clutched the bedsheets between her hands, the better to drive away temptation, and prayed that Alex would be pleased with her when she finished pleasing him.\n\nI need to come, she panted, caught in her own mind. She dove down the length of Alex's shaft, not flinching as the spongy head of his phallus bumped the back of her mouth. I need it so bad right now. Holy Mother, I've never been so horny! That woman...angel...succubus...whatever she is, she drives me crazy. I wanted to lay on the floor and spread my legs for her, right in front of my master and the senora and everyone!\n\n\"You're doing well,\" her master whispered. Suddenly she felt the cold press of metal against her right thigh. She froze in sudden fear. For the first time since she and Alex became lovers, she seriously considered using her safe word.\n\n\"Shhh,\" he said, as if he were reading her mind. \"Don't be afraid, mi novia. I just wanted to make things easy for us.\"\n\nShe heard a faint snip, and realized Alex had taken the small pair of sewing scissors off her nightstand. As she slowly resumed giving him head, he snipped away at the legs of her shorts. In a few minutes the garment was reduced to tatters, and he could remove it without having her stop what she was doing.\n\nBut the removal of her shorts only resulted in an increase of temptation. Her discipline wavered as Alex tauntingly blew a stream of warm air across her trembling thighs. God, it was maddening. His hot, loving mouth, so skilled, was only inches away from her fiery cleft. But to give in to her need would only result in having her needs denied.\n\nShe took refuge in discipline and the need to please her master. The more she did for him the better the odds of receiving a sweet reward. To that end, she concentrated on the lovely cock in her mouth. She slowed her pace, making love to its full length with her lips and tongue. She let all but the pulsing head emerge from her mouth, and ran her tongue around the sensitive glans over and over again, until her master's hips were twitching upward helplessly.\n\n\"Witch,\" he muttered hoarsely. \"You've enchanted me.\"\n\nShe smiled around him, then unexpectedly swooped down the length of his cock, running her tongue along the underside of his rod.\n\n\"Oh, God,\" he said. \"Maria...\"\n\nShe felt the changes in his body, and knew his time was close. As he tensed under her, she waited in joyful anticipation. His cock swelled in her mouth, the muscles at the base of his phallus pulsing strongly. When the first spurt of his semen hit the back of her mouth, she closed her eyes in rapture. She swallowed as his throbbing manhood delivered burst after burst of his seed, his essence warming her belly as she took it inside her.\n\nSlowly, the quaking aftermath of his climax subsided. She swallowed one final time, then cleaned him thoroughly, only letting him escape from her mouth when he was shining damply with her saliva.\n\n\"That was very good, Maria,\" he said. His voice was slightly hoarse. \"You can, if you like, take off your shirt.\"\n\nIn moments the garment had been torn off and was flung into an empty corner. Now unconfined, her breasts hung, down, her nipples fiery points on her chest, trying to drag her down towards her lover. His hands settled on her sides, then slowly crept higher, towards her ribcage. She bowed her head and shook in anticipation.\n\n\"And,\" he sighed, his voice low, slow, and teasing, \"you can touch me, if you want to.\" She felt her breasts gathered up in his hands.\n\nWithout taking the time to thank him, she spread her legs and sat on his face, her nether lips placed directly on his mouth. For a long, excruciating moment, her master did nothing. Then his mouth opened.\n\nAt the first lick, she opened her mouth and screamed in rapture.\n\n*****\n\n\"Are you sure this is a good idea?\" Jeremy asked uncomfortably as Sarah dragged him into her bedroom. \"I mean, we did sleep together earlier today. But should I be spending the night in your room?\"\n\n\"Probably not,\" Sarah said. \"But at this point, I don't care. I need a man, Jeremy. And since Daddy is probably doing the horizontal mambo with Mom right now, you're elected.\" In moments she had taken off her clothes and was lying on her back. She held her legs apart, her knees in her hands, allowing her channel to gape open lewdly. \"Come on,\" she urged, \"pull your dick out. I know you're hard for me. Stuff me full of it. Come inside me.\"\n\nJeremy blinked and stopped taking his clothes off. He shuffled backwards, his shorts around his ankles, feeling vaguely ridiculous. He shook his head at his girlfriend. \"No. Not until you tell me what's wrong.\"\n\n\"Nothing's wrong,\" she snapped. \"God, what kind of man are you? Or is it Althea that you want? Decided you'd follow her around like Yasna, hoping she'll give you a pat on the head? Or on your cock?\"\n\nJeremy opened his mouth, stung by her anger, then slowly closed it. \"It's Althea, isn't it?\" He sat on the bed beside her, pulling her into a sitting position.\n\n\"She's too beautiful,\" Sarah moaned. As if a cable had been snapped, she slumped in his arms, her cheek resting on his chest. \"No one's going to look at me with her around.\"\n\n\"That's ridiculous,\" he said, patting her shoulder awkwardly.\n\nShe gulped and lifted a tear-stained face to his. \"But that's not the worst of it. She made me...\"\n\n\"Made you what?\"\n\n\"Horny,\" she whispered, as if confessing a terrible sin. \"I'm not a lesbian. I'm not bisexual. I'm straight. Why is she making me horny?\"\n\n\"I'm not trying to take her side, but I don't think it matters,\" Jeremy said. He shrugged in resignation. \"From what your mom has told us, I think Althea is almost...omnisexual. Like she can make people horny even if she's not their type. I bet she could even make a gay guy hot for her,\" he said with a lopsided grin, earning him a watery smile. \"Just think. If it had been an incubus named...\" he fumbled for a second, \"...an incubus named Randy who wandered into your Mom's mind, I'd be here freaking out because I had a crush on a man.\"\n\nSarah giggled and relaxed in his arms. \"And remember,\" he continued, his hand stroking her back, trying to comfort her, \"Rachel and Althea have both told us how much free will means to her. She might ask. But she'll never force you.\"\n\nSarah nodded and drew an arm across her eyes, dashing away her tears. \"It just...felt weird. I mean, Mom and everyone keep talking about how wonderful this all is. And most of it is,\" she said, kissing him firmly for emphasis. \"I enjoy the way I'm always ready to go. I liked making love with Daddy. And I loved fucking you. But Althea...\"\n\n\"A step too far, huh?\"\n\nShe nodded. \"When does it stop?\" she asked. \"Are we going to lose control? Turn into sex-obsessed monsters, going after anyone we find attractive?\"\n\n\"No,\" Jeremy replied. \"I can't believe that. Just because you found the immortal scion of an angel to be attractive doesn't mean you're losing who you are. I mean,\" he said, trying to cheer her up, \"we might be sex-obsessed. I have been since I was about fourteen. But never monsters.\"\n\n\"Oh, Jeremy,\" she said, laughing softly. \"I love you.\" She peered up at him, her face slightly worried. \"Or is it too soon?\"\n\nIn answer, he kissed her. \"Too soon to be told I'm loved?\" he said softly. \"There's no such thing.\"\n\nTheir kiss deepened, lengthened, until Sarah had moved off the bed and was sitting in Jeremy's lap, his cock trapped firmly between his stomach and the wet furrow of her sex. She looped her arms over his shoulders and shifted up and down, teasing him with her heat. In response, he let one hand rise from her hip to her breast, teasing her nipple into turgid fullness.\n\n\"Enough of this foreplay shit,\" she gasped, when their mouths finally parted. \"I need a good come, then I might be able to finally relax and fall asleep.\n\n\"No,\" she said, placing a hand on his chest as he shifted his weight, ready to move on top of her. \"This time I'm in charge.\" She pushed him back onto the bed, smiling at his cock, jutting upwards like a spear.\n\n\"So beautiful,\" she said. She straddled him, crouching on the balls of her feet. She grasped his manhood at the base, angling it until the head brushed the lips of her entrance. She bit her lip, savoring the moment, when desire mingled with reality. Then, slowly, she sank down, opening to him, feeling his rod pierce her with wonderful thoroughness.\n\nHe reached for her, and she caught his hands, their fingers entwining. Partly for balance, but more for the sense of control it gave her. With slow, lingering strokes, she rose and fell above him, each time rising until only the head of his cock remained inside her, then filling herself up again. More quickly than she could have possibly expected, she felt her climax approach. She locked eyes with Jeremy, willing him to see her love for him, her desire, her need.\n\nOne last series of strokes, and it began. She shook all over as the waves of her orgasm swept over her. Unable to speak, she panted through her open mouth, her body rippling ecstatically.\n\nSlowly she regained her senses, and found Jeremy looking up at her with a combination of pride and chagrin.\n\n\"What?\"\n\nHis lips twitched. \"I'm not done yet,\" he said, mimicking her words from earlier in the...good God, could it really be the same day?\n\n\"I can tell,\" she replied tartly. \"Do you think I don't know the difference between a dick that hasn't come yet and a dick that has? Just hold on a second. Men,\" she added. \"I don't know why we put up with you. You have no idea what it's like when we come.\"\n\n\"Well, try to explain, then.\" Jeremy said reasonably. \"I'll never know if you never try to tell me how it is for you.\"\n\nShe glanced down, but there was no trace of mockery in his eyes.\n\n\"It's not that easy,\" she protested. \"You don't have the...the background.\"\n\n\"You mean I don't have the right parts,\" Jeremy smiled.\n\n\"Well, maybe,\" she admitted, then gasped as he shifted inside her. \"Although the parts you do have are awesome,\" she said softly. \"But...when I come, it takes me a while to recover. Everything is so sensitive. Imagine, if you can, your skin being so responsive that every time someone touches you it brings pleasure that is almost painful, it is so intense. That's what it's like for me. My lips. Both sets,\" she said with a smile. My titties. Inside me, where you are.\" She laid a hand on her flat belly. \"And especially my clit. I just need time to calm down. Otherwise, it almost hurts if you start to fuck me again.\n\n\"But now I'm fine,\" she finished, beginning to move. \"It doesn't take long.\" She moved off her feet and onto her knees, and leaned down to kiss him, her hips still moving. Her breasts brushed his chest and she sighed into his mouth as his hands came around her rear, guiding her pace.\n\nHe turned his head, presenting to her the clean line of his jaw. Sarah instinctively knew what he wanted. She leaned down, her teeth gently fastening on the lobe of his ear, then she stuck her tongue into the ear itself, swirling it around as he twisted and groaned under her. His hands clutched at her thighs hard enough to leave bruises. His loins pushed up into her, driving his cock into her womanhood.\n\n\"Sarah...\" It was a tortured gasp.\n\n\"Do it,\" she whispered. \"Come for me, Jeremy.\"\n\nWith a strangled shout, he did. He wrapped his arms around her tightly and hugged her to his chest, the sweat of their love mingling on their joined bodies. When his joyful spasms eased, she turned off the lamp. Not even bothering to remove his phallus from her body, she pillowed her head on his chest and fell into a deep, dreamless sleep.\n\n*****\n\nYasna woke the next morning, and for a long, disjointed moment, had a difficult time remembering where she was. Then the memories of the previous evening came crashing back down in all their impossible reality.\n\nThe strange family who had showed up at the hospital, and their avowed mission to remove Althea Carpenter from her care.\n\nThe panicked chase through the streets of Chicago, pursued by a monster out of her worst nightmares.\n\nThe bizarre, sex-soaked ritual, during which Althea somehow regained consciousness.\n\nAnd lastly, Althea herself doing something to her mind, which dispelled the fog of obsession which had slowly clouded her wits over the last several days.\n\nLet it all be a dream, she begged, her eyes still closed. A very detailed, realistic, weird dream, brought on by overwork, stress, and peanut butter and banana sandwiches.\n\nBut when she opened her eyes, she found Althea's beautiful face smiling at her from across the bed, her glorious green eyes open, aware, and amused.\n\n\"Good morning,\" she said. \"Did you sleep well?\"\n\nShe shifted in the bed, suddenly shy. \"Like a baby,\" she replied awkwardly, using an old joke of her mother's. \"I woke up every two hours and cried.\"\n\nAlthea's smile widened. She lifted a hand, brushing her cheek. Yasna closed her eyes, fighting not to lean into the touch. Her skin was soft as silk and as welcome as a warm fire on a cold night.\n\n\"Do you want to talk about it?\" she asked. \"Your parents? And why you're so afraid of sex that you've all but walled yourself off from all human contact?\n\n\"I am sorry about last night,\" she added \"And what I did to you. I would not blame you for not wanting to be near me again.\"\n\nYasna blinked, taking a minute to remember the violent conclusion to last night's ritual. She had been distraught, almost out of her mind with anger and grief, convinced Althea's spirit had departed for whatever afterlife was reserved for succubi. Leaping onto the platform where Althea and Rachel lay, she had ranted like a madwoman.\n\nAnd then...\n\nAlthea had stirred in her arms, returning her kiss, her mouth opening, her hands lavishing sweet caresses upon her. Then, with sudden, heart-stopping swiftness, Althea's tail had pierced her, stroking the inner walls of her vagina passionately. The sensation had been indescribable, and Yasna squirmed uneasily as she remembered the unbelievable pleasure and intimacy they had shared.\n\n\"From what I have gathered,\" she said carefully, \"you were not completely in control of yourself.\"\n\n\"That is no excuse.\" If she expected Althea to take the offered way out, she was mistaken. \"It was the next best thing to rape. I woke in my body to find someone on top of me. Kissing me. Rather skillfully, too,\" she said, her eyes twinkling. Yasna lowered her eyes. \"I thought it was Rachel. We have become rather close over the past few weeks. Still, I should have taken a moment to make sure.\"",
        "She shook her head. \"It's all right,\" she said. Breaking eye contact, she slipped out of bed, not terribly surprised to see she was naked. She dressed in the clothes she had borrowed from Rachel the previous evening and turned to see Althea regarding her curiously, the sheets puddled around her waist.\n\n\"It's not all right,\" she said. \"What I did to you...it's nearly unforgivable. Especially considering your history.\"\n\n\"I don't want to talk about it,\" Yasna said shortly. Her hands, she was ashamed to see, were shaking. She wished she had her doctor's scrubs. Or a jacket. Anything to ward off that kind, penetrating gaze.\n\n\"You're going to have to deal with it sooner or later.\" The tenderness in Althea's voice nearly broke her heart. \"And you have seven people here who will help you. No judging. No anger. No talk about the will of Allah. Or how much you are hurting your parents. All we will offer you is love, Yasna.\"\n\nShe hesitated, torn by the desire to unburden herself to this impossibly beautiful, incredibly compassionate woman, who seemed to be able to see into her secret heart. But the barriers guarding her soul were too strong, too old.\n\nShe turned away, and therefore didn't see the hurt in Althea's eyes. \"I'm hungry,\" she said. \"I'll see you at breakfast.\"\n\n******\n\n\"Good morning,\" she said, as she entered the kitchen. Josh was the only person in the room, nursing a cup of coffee and reading the morning newspaper.\n\n\"Good morning,\" he returned. \"Help yourself to whatever you would like for breakfast. Sarah and I are going to make a supply run later on today, so if there is anything you'd like for us to get for you, let us know.\"\n\n\"Oh, I couldn't possibly...\"\n\n\"Nonsense,\" he said firmly. \"You're our guest, and it's our fault you're here in the first place. The least we can do is try to make you feel at home.\"\n\nShe murmured something noncommittal and started opening and closing cabinets, looking for something to eat. With Josh's help, at last she found a package of cinnamon-raisin bagels in the pantry. Sighing in relief, she split one and dropped it into the toaster, then ransacked the fridge for cream cheese. As it toasted, she stared blankly out the window, then blinked.\n\n\"What happened to the trailer?\" she asked. The rented attachment which they had used to transport Althea's body back from the hospital was conspicuous by its absence.\n\n\"Oh,\" Josh said. \"That.\" He made a pained face. \"I dropped it off this morning. Very early, before anyone from the rental company would be there. I put a note on the windshield saying that it had been damaged by vandals and that they were welcome to bill me.\" He sighed dramatically. \"Next time I'll get the optional insurance coverage.\"\n\n\"Wasn't that...dangerous?\" Yasna asked hesitantly. \"From what Rachel and Althea told us last night...should you have gone out alone?\"\n\n\"Probably not,\" he said agreeably. \"But Althea is just one person. And if we count on her to protect all seven of us until we can put down Kincaid, then we're going to either end up prisoners here or run her ragged. No disrespect to my wife, but she doesn't know everything.\n\n\"Oh. Hello, dear,\" he said, his voice changing suddenly. Yasna turned to see Rachel Wainwright standing in the doorway, dressed in a light sundress. She was shaking her head.\n\n\"I should be pissed at you,\" she said. \"But I know better by now. You'll do whatever you think best, and to hell with what the rest of us think. Fair warning, Yasna,\" she said. \"The man you're eating a bagel with may very well be the most stubborn, pig-headed man alive.\"\n\n\"Guilty,\" Josh admitted cheerfully. Yasna looked away, blushing, as the two engaged in a long kiss.\n\n\"So what are the plans for today?\" Rachel asked.\n\n\"Well, I'm going to go grocery shopping with Sarah. It won't take long for all of us to eat up everything we have here. I mean, we're set up for a household of three. Or four, counting me. Not eight. Now we've got Jeremy, Althea, and Yasna. Maria, too, I suppose. And Althea told us last night that she needs to get her things from the hospital, and that Yasna was going to help. But neither of them have a car. So maybe you or Jeremy can drive her and Althea up there.\n\n\"Sarah has nothing going on,\" he continued, ticking members of the household off on his fingers. \"But Alex has his rehearsal at COD.\"\n\n\"Alex isn't going anywhere,\" Althea stated, entering the kitchen, dressed in a bathrobe. \"Good,\" she sighed, taking in the three of them. \"It's just the grown-ups. We can make the decisions before the kids come down.\" She smiled at their expressions. \"Come on. Don't tell me you've never done the same thing yourselves.\"\n\n\"Maybe,\" Rachel said. \"But why should Alex stay here?\"\n\n\"Kincaid. It wouldn't take much for him to figure out that Alex is going to be in a play. Just a quick internet search about your family. You and Josh have hardly been inconspicuous over the years,\" she said wryly. \"And attacking your family would be just the sort of thing he would love to do. Not a frontal assault. Oh, no. He's too much of a coward to attack us openly. But by going after your son he would hit you where it hurts the most.\"\n\n\"But Alex has been looking forward to this play for months,\" Rachel protested. \"He'd never forgive us if we kept him out of it.\"\n\n\"You'd never forgive yourself if he died,\" Althea said bluntly. \"And I'm not saying this is permanent. Just for today. Maybe tomorrow. Until we've had time to make plans.\n\n\"I've warded the house,\" she added. \"There's no way Kincaid or any of his ilk can get inside. Or even approach closely. It would take the spiritual equivalent of a nuclear bomb to attack us here. So we're safe for the time being.\n\n\"Let's see. I think a grocery run should be safe. He would have no way of anticipating that. But I don't think I should go to the hospital. There would be too many awkward questions if I show up like I haven't been in a coma for the last two weeks. Maybe Yasna can go with Sarah and Jeremy to pick up my things. And Jeremy should definitely stop at home to get what he needs before he comes back here. His family will be worried.\"\n\nYasna looked at her, open-mouthed. \"You seem to have made all of our decisions for us. And won't the hospital be dangerous? You told me last night you didn't want me going home.\"\n\nAlthea nodded soberly. \"It's not without risks. But remember. Kincaid is a predator. He works best from an ambush. There's no way he could stake out an entire hospital. Your home is another matter.\n\n\"Ah,\" she said brightly, as Alex and Maria entered the kitchen through the door that led outside. \"Here are two of them now.\" She smiled dazzlingly at Rachel's son and the dark-haired Latina maid. \"And here are the other two lovebirds,\" she continued, as Jeremy and Sarah trooped in from the other direction.\n\n\"So,\" she said, dropping gracefully into a chair and stealing half of Yasna's bagel. \"Let's get to work.\"\n\n*****\n\nIn the end, it was decided that Josh would drive Yasna to the hospital to pick up Althea's personal items, and to also stop at a store to buy some things for Yasna, as she absolutely refused to be wholly dependent on Rachel's charity. Secretly, Althea was pleased by the spark of independence the gorgeous young doctor was showing. Every time she challenged her made it less likely she would fall back into mindless obedience.\n\nMaria, Sarah, and Jeremy would take care of the grocery trip, and also run to Jeremy's house to reassure his family. Maria fretted about not being around to clean the house, but was told that there were more important things to take care of at present.\n\n\"I don't care what you tell them,\" Rachel told Jeremy, as they were about to leave. \"Camping trip, eloping to Australia, whatever. Just pack a suitcase with what you need and get back here. Don't spend any more time there than you have to. Once we've taken care of Kincaid we can worry about all the piddly shit.\"\n\nMeanwhile, Rachel, Alex, and Althea would stay at home. Rachel had some potential clients to screen. Althea said she was going to be busy making plans for Kincaid. Alex, while vaguely aggravated that he was going to be under \"house arrest,\" as he called it, nonetheless took the news with a measure of good grace.\n\nYasna gave a relieved sigh as Josh backed Rachel's car out of the driveway and headed for the tollway. There were so many subtle currents of tension swirling around the house she didn't know how to deal with them all. Even pleasant young people like Alex and Maria seemed to have a subtle edge. And Althea and Rachel were flat-out terrifying.\n\nJosh, on the other hand...she smiled and relaxed into leather seat of the car. Josh was soothing. Calm. There was no sense of the otherworldly about him. He was nothing more than what he was. A good-looking man driving a car with casual ease.\n\n\"I should apologize, I guess,\" he said quietly, as they made their way onto the expressway.\n\n\"Apologize?\"\n\n\"Well, we have pretty much turned your life upside down, haven't we?\"\n\nShe shook her head. \"My life was turned upside down the moment I laid eyes on Althea. All the rest of you did was give me the opportunity to actually talk to her.\"\n\nHe smiled and cocked one arm out the open window. The other guided the car effortlessly around a slow-moving pickup.\n\n\"She is something, isn't she? I mean, she's beautiful. Anyone with a working set of eyes can see that. But her personality...she's overwhelming. I don't blame you for being obsessed. Or for my wife for falling in love with her.\n\n\"So, I didn't really get the low-down on you last night,\" he continued. \"What with the entire nearly-getting-killed-by-a-horrible-demon thing we had going on. And then the orgy, which I was not expecting.\" His eyes were shrewd but kind. His glance fell on her left hand, where a wedding ring was conspicuously absent. \"How come no one has snapped up a pretty young woman like you?\"\n\n\"One did,\" she said shortly. \"But he reconsidered.\"\n\n\"Would you like to talk about it? I promise, it goes no further than my ears if you'd like to keep it private. And if you don't want to talk, I'll never bring it up again.\"\n\nThey'll get the story out of you sooner or later. Might as well tell someone you're comfortable with.\n\n\"No, it's all right,\" she sighed. She sat still for a moment as the western suburbs drifted past. \"It was right after I graduated medical school,\" she began. \"Number four in my class. My parents were so proud. I was going to start my internship here at Adventist in Bolingbrook.\"\n\n\"Good place,\" Josh nodded. \"I've been there once or twice.\"\n\n\"But my parents were worried that I wasn't looking for a husband. I was the only child, and they wanted grandchildren. Especially my father.\"\n\nShe blew out a deep breath. \"I tried to tell him. That I wasn't sure if I even liked men. But you know how conservative some people can be. They don't hear anything they don't want to hear.\n\n\"So my parents started bringing men by the house. Sons of other families who had left Iran when the Ayatollah seized power. And nine months later I was married to Tabor. It wasn't precisely an arranged marriage,\" she said, catching his glance. \"But I never really had the opportunity to say no, either. Everyone simply acted as if it had all been agreed on, and nothing I said made much of a difference.\n\n\"He wasn't a bad man.\" Even to herself, the words sounded weak, as if she were still trying to convince herself. Why? It's been three years since the divorce became final. Why are you still making excuses for him? a hateful part of herself sneered. \"But he wanted a traditional wife. Like his mother. Someone he would come home to who would have supper on the table, be modest and discreet, and who would give him the children he wanted.\n\n\"Well. I had a career, too. And I wasn't going to throw it away just so I could fit into his feminine ideal.\"\n\n\"Good for you,\" Josh said forcefully, and she smiled.\n\n\"We went back and forth, trying to reach a point we could both live with. But it never worked. He couldn't accept the hours and the time away from the house.\"\n\nShe took a deep, steadying breath, and told the secret she had never revealed to anyone, not even her parents. \"But it was the way he treated me in the bedroom which made me file for divorce.\"\n\nJosh was silent, but touched a button to roll up the windows. She nodded gratefully, glad she wouldn't have to raise her voice to be heard.\n\n\"I told my father that I thought I might be a lesbian. He wouldn't listen.\" Her voice became harsh with strain. \"Not me. Not his daughter. Lesbians were deviants or mentally ill.\" Tears filled her eyes and her hands fisted on her thighs, trembling in anger. \"He was a doctor. He was my father. He should have known better!\n\n\"And Tabor...he thought it was my job to please him. Not his job to try to please me. It was never good between us. And by the end...\" she gave a bitter laugh. \"I won't call it rape. But I wasn't a willing partner, either.\"\n\n\"If you weren't willing, Yasna, then it was rape.\" She looked to her side, surprised by the suppressed anger she heard in his voice. Josh's face was stiff with fury. \"Tell me where this piece of human garbage lives,\" he said. \"And I will teach him the proper way to treat women.\"\n\nShe smiled at him and shook her head, laying one hand on his arm. \"No. It is done now. He is gone and I have no need to ever see him again. And by the grace of Allah, there was never a child. It would have given our parents the perfect excuse to try to keep us together.\"\n\nJosh drove on, his face thoughtful. \"So, you've never found happiness with men. And women...\"\n\n\"I've never been with one.\"\n\n\"Ah.\" He was quiet for a long time. \"No wonder you're terrified around us. Rachel and Maria and Althea offer what you want, but have been afraid to reach for. And Jeremy and Alex and I are what you have been taught to fear.\"\n\nYasna blinked slowly. The man's insight is unholy. Not even her therapist had ever been able to set forth her problems so simply.\n\n\"We're not all like that, you know,\" he said at last. \"Men, I mean.\"\n\nShe smiled at him. \"I know.\"\n\n\"I'm not trying to hit on you, by the way,\" he added hurriedly. \"If you spend enough time around us, you'll find out that we have a pretty open set of relationships. Although how it happened is still a bit of a blur. But no one, no one,\" he emphasized, \"will push you to do anything you don't want to do. If anyone does, tell me, and I'll have them out of the house so fast they won't hit the ground. Even if it's my own son.\"\n\n\"Or daughter?\"\n\n\"I don't think you have to worry about Sarah,\" he said wryly. \"The next time she looks at a woman as a potential partner it will be the first.\"\n\n\"Pity,\" Yasna said, her voice wistful. \"She's very attractive.\"\n\n\"Yes,\" Josh said, pulling into the hospital parking lot, the scene of last night's terror. \"She is. We're lovers.\"\n\nYasna stared at him, disbelieving.\n\n\"Like I said,\" he told her. \"An open set of relationships.\"\n\n*****\n\n\"So how are you and my brother getting along?\" Sarah asked as she pulled away from Jeremy's house. The visit there had been blessedly uneventful. Both parents were at work. Jeremy had left his father a voice mail with a cock-and-bull story about being invited on a camping trip as Sarah helped him fill a suitcase and a duffel bag with what he needed for several days away from home.\n\n\"Won't your dad be pissed that you're blowing off work?\" Sarah had asked. Reggie Edwards ran a landscaping business.\n\n\"A little,\" Jeremy had replied. \"But I told him last week I didn't intend to put in as many hours this summer. I wanted to enjoy my last summer vacation. He'll deal with it.\"\n\n\"We're getting along very well,\" Maria now replied to Sarah's inquiry. She stretched out on the back seat, her long legs gleaming in the sun. \"My master tells me that if I am very good, he might agree to lead me around on a leash this evening when we come down for dinner.\"\n\nSilence fell over the car like a damp blanket. \"Oh,\" Sarah said at last. They drove on for several minutes, making their way to the grocery store. \"Maria,\" she asked, her voice hesitant, \"you told me once that you would explain. Why you enjoy being a submissive.\"\n\n\"Of course,\" Maria smiled. She closed her eyes. The promise Alex had made, in a whisper before she left the house, made her belly churn with suppressed arousal. Inside her shirt, her bra-less breasts were sticky with sweat, her nipples pulled up into hard little points. She fought to keep her hands away from them.\n\n\"First of all, it's not that I enjoy being a submissive. It's that I am a submissive. I couldn't change that any more than I could grow six inches or give myself blue eyes. It's a part of me. And for me, it's all about the surrender,\" she said, her voice soft. \"Ever since I was a young girl, I was the responsible one. The good girl who kept the house clean and cooked the meals and took care of my sisters. I was always carrying that load of duty.\n\n\"So when Alex orders me about, tells me what to do, how to please him...\" she shivered in happy memory. \"Dios Mio, it makes me hot. Horny. The only thing I have to worry about is making him happy. And he is so gentle. I know he would never hurt me. Even when he is throwing me around on the bed, pounding me with his wonderful cock, I know I am safe.\n\n\"That's what it is all about, Sarah. A safe place where I can surrender and put all my other responsibilities aside. Alex does that for me. If I come to dinner tonight wearing nothing but a velvet choker and a lead, it's because I feel safe with him. I wouldn't do that for any other man.\"\n\n\"Not even me?\" Jeremy said from the passenger seat.\n\n\"Oh, Jeremy.\" Maria leaned forward and kissed his cheek. \"You are almost as gentle as my master. But do you really want to lead me around on a chain?\"\n\n\"Well, no,\" he admitted, with a quick glance at Sarah. \"I'd feel pretty silly.\"\n\n\"But I bet if you were making love to Sarah tonight, and you held her wrists down on the bed, and she was struggling underneath you just a little, it would turn you on. Wouldn't it? To feel like you were dominating her, and there was nothing she could do about it?\"\n\nShe could see his throat work as he swallowed, and he made a show of fanning himself as they pulled into the parking lot of the grocery store. \"Hell, it's turning me on a bit right now.\"\n\nShe smiled and ran her fingers through her hair. \"And now you understand. A little. We all have our own kinks, Jeremy.\" She turned towards the woman who she thought might soon be her sister-in-law. \"Don't be afraid to explore them, Sarah. You might find out more about yourself than you think.\"\n\n*****\n\nMy life has turned profoundly weird, Alex thought.\n\nHe was sitting in the family room in the house, idly doing research on his laptop. He had called Professor Olson earlier, faking an illness, to tell him he wouldn't be able to attend rehearsal. There had been a long pause at the end of the line, then a reluctant acceptance.\n\n\"You will be here tomorrow, won't you, Alex?\" he had asked. \"If not, we're going to have to get Wally ready to take your place on Friday.\"\n\n\"No,\" he had said hurriedly. \"It's just a stomach bug. I'll be there.\"\n\n\"Good. Until tomorrow, then.\"\n\nIt had seemed better to lie than to tell the old man that he was in protective custody because a demon wanted to kill him and everyone in his family. That sort of thing had a tendency to unnerve people, he thought with an inner smile.\n\nHis mother came into the family room, carrying her laptop. \"Keeping busy?\" she asked, seeing him working on his own computer.\n\nHe nodded. \"Looking into the plays that Northwestern has been putting on over the last few years. If I get into their communications school, I should be familiar with the sort of thing they're doing. How about you?\"",
        "\"Just going through my e-mail. I put out the word that I'm interested in doing pro bono work when I left Chihiro. So now I am getting all sorts of offers. I've got to weed out the ones that seem sketchy and see if there's anything that looks like a good fit.\"\n\nShe sat down beside him on the couch, her laptop balanced on her knees. He looked at her and swallowed. Until Althea had entered their lives, he had never seen his mother as anyone but his mother. But when Althea had entered her mind, it had began a slow transition to where anything now seemed possible.\n\nRachel Wainwright had always been an attractive woman. But in the weeks since she had merged with Althea her body had changed in subtle yet dramatic ways, which Alex had unwillingly observed. Her breasts were firmer, to the point where she seldom bothered to wear a bra anymore. The faint smile lines and crow's feet at the corners of her eyes and mouth had all but disappeared. Her pale skin seemed to glow with good health. Her black hair was more lustrous, now reaching past her shoulders, and her dark eyes were brighter, twinkling cheerfully as she glanced at him, seemingly aware of his thoughts.\n\nAnd she seemed to emit a sexual magnetism which had him on edge whenever they spent any time alone together. The culmination of the ritual last night was proof of that. He colored as he remembered his mother's small, strong fingers on his cock, the way she had expertly coaxed him to climax. He steadfastly kept his eyes away from the neck of her shirt, where he could just see the tops of her breasts...\n\n\"Hello, darlings!\"\n\nAlthea walked into the room and Alex's eyes bugged out. While Rachel had taken her skirt off the day before in order to display the tail which proved her incredible tale was true, he was still trying to get used to the casual states of undress which now seemed to becoming commonplace around the house. Althea was wearing nothing more than a button-down sweater, which he vaguely remembered as belonging to Sarah, just long enough to cover her hips. It gaped open at the neckline, displaying most of the teardrop-shaped wonders which were her breasts. High, large, round, and golden like the rest of her body, they challenged the gaze, daring a man to set his hands on them.\n\n\"Hello, beloved.\" Alex blinked. He had never heard his mother speak to anyone, not even his father, in that tone. It spoke of secrets shared, and terrifying intimacy, and a bond that went beyond mere love and approached the holy.\n\n\"Hello, my handmaiden.\" Althea kissed her cheek, then sat down between the two of them. In doing so, the sweater rode up until her legs and groin were completely exposed. Alex could see the puffy lips of Althea's cleft, and the dense, close-clipped blond strip of her pubic hair.\n\n\"Handmaiden?\" he asked, trying to peel his eyes away from the intoxicating sight.\n\n\"Indeed.\" Althea smiled at him, brushing her fingers over his cheek. Casually, she hooked one leg over his knee. Her skin felt hot where it touched his, as if she had a fever. \"When I first entered your mother's mind, I did not plan to do anything more than use her to regain my power and my body.\" This was said in such a frankly unapologetic tone that Alex could only sit there, stunned. Althea must have noticed his expression, since she went on quickly. \"Understand, Alex, that I have watched so many of my loved ones die over the years that for the past few decades I have avoided any but the most casual relationships. But as the days went by, I grew to admire your mother more and more. It wasn't long before I decided that Rachel was worthy of much more than simple abandonment.\"\n\nShe bestowed a loving look on his mother. \"For too long mankind has not given thought to what a wonderful thing the act of love is. Even the most open of your societies place so many restrictions on it. They take away the power and beauty and leave shame and guilt in its place. Consider your own example. How much happier would you have been if you had been able to explore your desires without self-disgust?\"\n\nAlex nodded slowly, remembering how his need to be the dominant in a relationship made him feel as if he were sick and twisted, unworthy of a woman's love. \"And?\"\n\nAlthea smiled at him, unbuttoning the sweater even more. \"So I am going to do something about it. I will not hide any longer. I am going to be a beacon to humans who want sex to be something more than the merely physical. To stand tall and proud and declare how wondrous our lives are, and how we should celebrate them. And Rachel will be my handmaiden; a guide and a spokeswoman for us.\"\n\n\"Well, it all sounds good,\" he said, but doubt clouded his voice. \"But free-love cults have sprung up before. They usually fall apart pretty quick, don't they?\"\n\n\"Free love?\" Althea's voice was amused. \"No. Love is never free. In order to give love, or receive it, you must give up so much. Fear. Hate. Selfishness. When you love, truly love, you realize your happiness is dependent on that of your beloved. And hers is dependent on yours.\n\n\"Tell me, Alex. Do you love your mother?\" Somehow the sweater was now completely unbuttoned. Althea spread it apart, revealing her glorious breasts. The nipples were darker than the surrounding skin, almost bronze in color. They seemed impossibly large and thick and were turgidly erect. Her other leg was now draped over Rachel's, wantonly exposing her nether-lips.\n\n\"You know I do.\" His voice was hoarse.\n\n\"And yet you have not taken her to bed yet. Why not? Oh, and here,\" she said, catching hold of his hand. She guided it down between her legs. \"Rub me for a while. I need to get off soon, or I'm going to explode. And, Rachel,\" she added, turning back to his mother, \"you can do something to help out, you know. With me, you never have to ask permission.\"\n\n\"Of course, my beloved.\" As Alex watched avidly, Rachel helped Althea slip off the sweater. As if it were the most natural thing in the world, she took Althea's nipple into her mouth. Her mouth worked softly, suckling on her breast like a child.\n\n\"Oh, that's lovely, dear,\" the succubus sighed, leaning her head back. Under his probing fingers, Alex could feel dampness gathering on her lips. Her hand gripped his wrist, guiding him. \"Two fingers, please. Yes,\" she cooed. \"That's right. That's right...there,\" she said as her thrust his hand into her dewy cleft.\n\n\"I can't...fuck my mother,\" Alex said, answering her earlier statement. But his voice was uncertain, as if he were trying to convince himself.\n\n\"Why not? Your father is fucking Sarah. And very happy the two of them are about it, to be sure.\"\n\n\"What? Mom, is this true?\"\n\nShe lifted her head from Althea's breast. He could see the nipple shining wetly. \"Of course it's true. Why do you think I told you to stay at Maria's the other night?\"\n\nHe colored, feeling amazingly stupid. His sister had been much more cheerful over the past few days. But he thought it was due to her relationship with Jeremy. Not the consummation of a forbidden love with their father.\n\n\"And yes,\" she said, her hands stroking Althea's breasts lovingly. \"I'm okay with it. How can I not be? I was the one who suggested it, after all.\n\n\"Your sister, with our help,\" she said with a wry glance up at the succubus, \"had finally admitted to herself that she wanted her father in her bed as her lover. However, she also knew that sort of relationship was impossible. At least, it would have been impossible if we constrained ourselves to an outmoded morality passed down by iron-age barbarians.\" A small shrug. \"It wasn't a big deal. All I had to do was give them my blessing and they took care of the rest of it themselves.\"\n\n\"Just as you two will,\" Althea smiled. \"Go on, Alex. I think my work here is done. No one will be back for an hour or two.\" She grinned unashamedly. \"I will say it took some pretty clever maneuvering to make sure you two would be here by yourselves.\"\n\nAcross Althea's body, their eyes met. The desire which he had felt and denied for days found its match in his mother's face. He held out his hand, and she gripped it hard, then raised it to her lips, licking off the residue of the immortal's juices. Her eyes closed, and a slow shudder rippled through her body. In the loose pair of cargo shorts he was wearing, his cock was hard and aching, his testes swollen with seed.\n\n\"Mom,\" he whispered.\n\n\"Yes, darling,\" she replied. \"Yes.\n\n\"But not yet.\" She turned to Althea, who had been watching them with loving eyes. \"How long, beloved? How long will you deny who you are? What you are? This restraint is not natural to you. You denied yourself Yasna last night. And again this morning.\"\n\n\"How can you know that?\"\n\nShe smiled and tapped her head with her finger. \"And now you think to deny yourself again. No, I say. You need more. And you deserve more. Come with us.\"\n\nAlthea's eyes shone with tears. \"Oh, my handmaiden. Do you mean it truly? I have waited for this for so long.\"\n\n*****\n\n\"I have wondered,\" Rachel said curiously to Althea, as they watched Alex undress in her bedroom, \"why you never tried to make love to me in your glade.\"\n\nAlthea sniffed. \"Would you rather smell a good meal? Or eat it? Illusion is no match for reality, my dear.\" She lay on Rachel's bed, resplendently nude, her hands idly stroking her nether-lips.\n\n\"You are so beautiful,\" she whispered, as Alex kicked off his shorts and his cock jumped free. The thick, curving length of it slapped against his belly, leaving a faint gleam of moisture on the curling hair surrounding his navel. \"All of you. I do not know what strange plan of the Almighty has brought me here with you, but I have been blessed.\n\n\"Please, Rachel. I need you so bad.\"\n\nAlex watched, transfixed, as his mother crawled into bed with Althea. For long moments he was content to watch them. They stroked each other lovingly, their caresses the culmination of weeks of slow-building desire.\n\nAlthea's back arched as Rachel touched her, her hands expertly arousing her. A small, secret smile danced over her lips as the dark-haired woman played her body like an instrument. Her legs spread open helplessly, her hips slowly rolling upward, and when Rachel let her weight fall directly onto Althea's groin, Alex could hear her let out a weak gasp of pleasure.\n\nThe foreplay was long and slow and tender. Rachel made love to Althea with hands and lips and tongue, kissing her, nibbling her ears, her lips, her breasts, until she was red-faced and gasping. As Alex watched, wide-eyed, their tails emerged from the sheaths at the base of their spines and lovingly curled around each other, the spade-shaped tips pressed flat like the pages of a book. They shone in the dim light of the room, and an aromatic musk rose from them.\n\n\"Now,\" Althea whispered, and Rachel sank down between her legs. She cupped Althea's buttocks in her loving hands, raising her up at the same time as her head dipped to taste the golden-skinned succubus. At the first touch, Althea's hips snapped upwards and her mouth opened, her breath coming hard and fast. Like a flower unfurling, her legs opened wide, then came down to rest on her lover's back, her feet slowly stroking Rachel's spine.\n\n\"There. Right there. My clit. Suck it,\" came a cracked whisper from the bed, then a high-pitched squeal, ending on a gurgling giggle. Again and again it sounded, and Alex smiled to hear such an unrestrained sound coming from Althea, who the previous evening had seemed the epitome of tough, unemotional competence. She lolled on the bed, squirming slowly, and to Alex's eyes it seemed that the light in the room began to gather around the two women, leaving the rest in shadow.\n\n\"You're wonderful,\" Althea said.\n\nHis mother's voice was warm and amused. \"And how can I not be, with you inside my head, practically giving me step-by-step instructions?\" Her hands reached up and gave Althea's nipples a quick pinch, eliciting a groan. She bent her head again, and Althea's hands rested on the dark mass of her hair, tenderly stroking the dark strands.\n\n\"Oh, Rachel, my handmaiden, my love. I'm there. I'm there. I'm coming!\" Althea's face reddened and her body shook. To Alex's astonishment, a pair of white horns appeared on her head, gleaming palely through the golden curls of her hair.\n\n\"Now,\" Althea chuckled, her voice rich and deep. \"Your turn.\" She drew Rachel up in her arms, then turned her around until her golden head rested next to her dark one. \"That's it,\" she whispered, her hands roaming over Rachel's body. She cupped her breasts in her hands, the fingers slowly gliding over the erect nipples. She sank back onto the pillows, her lover cradled in her arms. \"Come on, Alex. Take her. She's so ready for you she's about to burst.\"\n\nHe gazed at his mother adoringly. \"Mom?\"\n\n\"Oh yes,\" she breathed. She stretched her arms over her head, displaying her body to its fullest advantage. \"I want this. In fact, in all honesty, I command it, as Mistress of the Household.\" She started slightly as Althea's legs crept inside hers, then smiled as the succubus slowly pulled them apart, her channel exposed and vulnerable. She ran a teasing finger along her lips. Dew glistened on her folds. \"See how wet I am for you, baby? Come over here and fuck Mommy.\"\n\n\"Don't mind me,\" Althea added cheerfully. \"I won't bite. Much,\" she said, as her teeth fastened playfully on Rachel's earlobe.\n\nAlex moved onto the bed, feeling as if he were dreaming. But it was real. He could feel his mother's warm hands on his back as he positioned himself between her legs. When he kissed her, her tongue, darting into his mouth, tasted of honey and musk, Althea's intoxicating nectar driving him wild. Her eyes, when she looked at him, were filled with love and desire.\n\nSo much desire. Desire to match his own. To match all of them. For an instant, he glimpsed a corner of what Althea had told him about her, and was awestruck. The vast power of his mother's soul, to hold all of them in her heart simultaneously, would be what drove Althea's dream of carnal freedom.\n\n\"I love you, Mom,\" he whispered, and sank into her.\n\n\"I love you,\" she told him, then gasped as he filled her.\n\nShe surrounded him like exquisitely sensual oil, the muscles of her inner walls stroking him in a way that was both pleasurable and incredibly intimate. Her thighs lifted, snuggled firmly against his hips, and he paused for a moment to reflect on the astonishing fact that he himself had emerged from her body less than twenty-two years ago.\n\nHe lowered his head, and found himself looking into Althea's brilliant green eyes. \"It's a wonder, isn't it?\" she said, her eyes sparkling. She raised her head to his, and almost helplessly he found himself kissing the succubus, their tongues entwining passionately. Her taste was intoxicating, pushing his passion higher, filling his body with desire. When he emerged, he looked down at Rachel guiltily, but she did not seem to resent his momentary distraction.\n\n\"She's irresistible, isn't she?\" she asked softly. \"Don't worry,\" she continued, taking his face in her hands and drawing him down to her lips. \"I don't mind. I love both of you.\n\n\"But so gentle, Alex,\" she teased. \"I'm not made of crystal, you know. I won't break. Yes, that's it,\" she said as he began to thrust into her more vigorously. \"Fuck me hard!\"\n\n\"I won't last long,\" he warned her, bracing on one arm so he could hold her breast in his hand. His thumb grazed her nipple, then started to stroke her from thigh to hip to breast, over and over.\n\n\"So?\" she asked. \"Do you think we are going to only do this once?\" She pulled his head down and kissed him thoroughly, even as her hips rose and fell, meeting his strong strokes firmly. \"You are going to be my lover for years, Alex. Just as Sarah will be with Josh. Just as Althea will be with all of us. She is part of us now, just as we are all part of her.\"\n\n\"Wonderful,\" he groaned, feeling his climax boil up inside him. His balls felt huge, swollen with seed. He pounded into his mother, unable to think of anything but the sensation of her breasts against his chest, the silky-smooth feel of her inner walls around him. With a keening wail, she clenched down on him, her grip excruciatingly tight and pleasurable. Her muffled moans of pleasure triggered his own release, and he came into her in a bolt of white-hot fire.\n\n*****\n\nAlthea entered Josh's workshed a short time later, happy to see Yasna and Josh puttering about.\n\n\"Hello, Althea,\" Yasna said as she closed the door behind her. She gestured towards the workbench. \"There are your things.\"\n\n\"Oh, thank the Almighty,\" she said, hurrying over. She opened her purse and rapidly riffled through the contents. Wallet, credit cards, and ID were all there, along with the laptop in her shoulder bag and the jacket she had been wearing the day she had been yanked out of her body. She pulled the laptop out and powered it on immediately.\n\n\"So where are Rachel and Alex?\" Josh said.\n\n\"In bed,\" she replied absently.\n\n\"Ah.\" There was a short silence. \"I don't suppose I have to ask whether they are in different beds, do I?\"\n\n\"Indeed not,\" Althea replied, smiling at him. She wondered how long it would be before she managed to get him alone. Or perhaps not alone, she added, thinking of Rachel. Mmmmm. She slanted a look at Yasna, and was happy to see there was no look of moral outrage on her face. The last thing they all needed was to spend hours or days convincing her that incest was not inherently sinful. Instead, she looked slightly introspective, as if she were trying to come to terms with a way of thinking that was unfamiliar, but not completely unfathomable.\n\nJosh caught her glance. \"I told her about Sarah and myself earlier, when we were picking up her things.\"\n\n\"Good,\" Althea said. She logged into her bank account and started paying her bills. \"It's strange. Even when something monumental occurs, everyday life has a way of sneaking up on you.\"\n\nYasna nodded. \"Truly. I bet if you look back in history, you will find extraordinary people with very ordinary fears. I wonder if the founding fathers had worries about how they would pay their mortgages.\"\n\n\"Oh, they totally did,\" Althea murmured. \"John Adams, for example. He was always concerned about how to keep Braintree solvent.\"\n\n\"Were you there?\" Yasna's voice was incredulous.\n\n\"No, of course not. I was far too fond of my own comfort to move to a new continent peopled by savages.\"\n\n\"That's not an appropriate way to speak of the Native Americans,\" Yasna said primly.\n\n\"I wasn't. I was talking about the religious maniacs who settled in Massachusetts,\" Althea replied. \"Terrible people. Adams wasn't as bad as some, but I didn't move into America until about fifty years ago, in the sixties, when things started to get interesting. And sometimes I think even that was a mistake.\"\n\nShe finished buying new clothes, specifying Rachel's address for delivery, and turned her computer off. Standing up, she wandered around the shop. She smiled to herself. Everything she needed was here.\n\n\"Tell me, Josh, have you ever made a sword before?\"\n\n\"A sword? Yeah. I dabbled in weapons when we first moved out here. It was right when I first started casting my own bronze and I wanted something simple to practice on. Can't get much simpler than a blade.\" He opened a low drawer set under the table and pulled out a long, slender object. \"What do you think?\"\n\n\"Nice,\" she said, impressed. The blade was about thirty inches long, impressively sharp, the hilt wrapped in soft leather. She lifted it, testing the weight and balance, and quickly moved through a series of exercises, heedless of Yasna's startled glance. \"How long would it take you to make one of these for me?\"\n\nHe shrugged. \"We can start on the mold right now. I have clay here. I could have it ready by this evening. It doesn't take long. Melt the bronze while I'm doing that and cast it. Then a day or so to sharpen it and make the hilt.\"",
        "\"Thursday, then, as a worst-case scenario. Good. Let's get started. The sooner I have a weapon the better I'll feel.\"\n\n\"This is to be used against Kincaid? That...that thing that chased us last night?\" Yasna asked. Althea nodded her reply. \"Then why a sword? Wouldn't something else be better? Guns? Grenades?\" Her lips quirked in dark humor. \"Maybe a flamethrower or a bazooka?\"\n\nAlthea shook her head, helping Josh lift a brick of clay onto the workbench. She stripped off the shirt she was wearing, revealing a dark sports bra. \"No good. Against the demon-spawn, we can't deal out death from a distance. Modern weapons don't work on them. Not to the extent we need. They're almost like zombies that way. Unless you remove the head, they always seem to heal themselves and come back for more. A sword is the best weapon. Or a really good ax. Some of my incubi brothers use them. I don't. It's always been swords for me.\"\n\nShe sighed. \"I have a lovely one at home. Seventeenth century, Toledo steel, made by a master swordsmith in Spain named Domingo Montoya. I would give anything to have it here right now. But I don't. So I will have to make do with what I have available.\" She started sketching out the dimensions on a bit of paper. \"It doesn't have to be fancy, Josh. Two edges, a pointy bit at the end, and a place to hold onto it. The most important part is the power. And the symbolism.\" She drifted off as a thought occurred to her, and she smiled.\n\n\"Oh, Yasna,\" she said, as the sound of an approaching car came through an open window. \"That's Jeremy and the rest of them. After they get their things put away, can you ask everyone to come in here? I have something to do before Josh and I get too deep into this project.\"\n\n*****\n\nA few minutes later, they were all gathered in the workshop, the seven mortals looking curiously at the immortal sccubus.\n\n\"You asked to see us, Althea?\" Rachel asked. Her voice sounded a little bit testy, and Josh smiled. His lovely wife looked vaguely aggravated, as if she had made plans that had gone unfulfilled.\n\n\"Have a nice afternoon?\" he asked Alex quietly, making his voice low and threatening.\n\nHis son rolled his eyes towards him warily. \"Yes, sir. I did.\"\n\n\"Good,\" he replied with a nod. \"I'm glad. Otherwise I would have wondered if something was wrong with your mother. Don't worry, kid,\" he said with a crooked smile. \"I'm in no position to be jealous or angry. Just don't wear her out so much that she doesn't have energy left for me.\"\n\n\"I don't think that's possible,\" his son whispered. His voice sounded slightly awed. \"We were going to start for the fourth time when Yasna knocked on the door. I wasn't sure I could do it.\"\n\nJosh snickered, then caught himself as Althea pinned him with a hard look, making him feel like a teenager who had been caught passing notes in study hall.\n\n\"I have been giving thought,\" she said, \"about what to do about our Kincaid problem. I cannot protect all of you all the time, and neither can we all huddle here like frightened children until he comes bursting through the front door.\n\n\"You must be protected. Josh and I are crafting a sword which I will use to dispatch him, when the opportunity presents itself. But it has occurred to me that I can do something similar for all of you, albeit on a smaller scale.\n\n\"In my world, the spirit world, symbolism is important. The sword was the tool used to dispose of one's enemies for millennia. As such, it has symbolic weight which you will not find in a gun or any other modern weapon.\" A quick, blinding smile.\n\n\"But you have objects in your own lives which have their own symbolic importance. Which mean more to you than their mere physical form would suggest.\n\n\"Find them. Bring them to me. And with your help I will imbue them with the power you will need to drive away the demon-spawn, should he ever approach you.\n\n\"They should be small. But precious to you. And if at all possible, they should be items which could, as a matter of last resort, be used as weapons. They will have much more power that way. Both for yourselves, and against our enemy.\"\n\nThey scattered, heading towards the house, except for Josh, who remained where he was. Althea looked at him quizzically. \"What's the matter, Josh? Feel like being gutted by that slime if he corners you in a dark alley?\"\n\nHe shook his head. \"I've got what I need right here.\"\n\nIn a few minutes, the family started to trickle back in. \"All right,\" she said to Josh. \"What's your choice?\"\n\nHe pulled a small box out of a drawer. \"This was my first wood-carving set. My folks gave it to me when I was eleven.\" He pulled a wickedly sharp knife out of the box and showed it to her. \"What do we do?\"\n\nShe wrapped her hand around his. \"Just this.\" She closed her eyes, reaching within herself for her power. Then she moved towards him, flowing up his body like a cat. Her mouth opened, finding his in a long, slow, languorous kiss. When she pulled away he was smiling.\n\n\"Done,\" she said.\n\n\"But you didn't do anything,\" Maria protested. \"Did you?\"\n\n\"Maybe not to your eyes,\" she told the lovely young woman with a smile. \"But if you were a succubus, you would have seen plenty.\"\n\nOne by one, she moved down the line.\n\nFor Alex, a stage dagger. As Althea blessed it, he and Maria exchanged a secret smile.\n\nFor Maria, a broom handle. Althea frowned slightly, but relented. \"You'll have a hard time hiding it, dear. But it could serve as a staff if need be.\"\n\nFor Rachel, a gavel, which she had received from her parents when she had graduated law school.\n\nFor Jeremy, a small set of pruning shears, pulled from the trunk of his car.\n\nFor Sarah, a vicious-looking carving knife. \"Lucifer's Tits,\" Althea said, fingering the serrated edge. \"You could do some serious damage with this thing.\"\n\n\"I know,\" Sarah said cheerfully. As Althea's hand closed around her own, she pulled back slightly. \"You don't...don't have to kiss me for this to work, do you?\"\n\n\"No,\" Althea said regretfully. \"But I really enjoy it.\"\n\nTo her immense surprise, Sarah laughed. \"You're terrible,\" she said, and gathered her in a fond hug.\n\nFor Yasna, a scalpel, drawn from her medical bag. Althea whistled respectfully as she looked at it. \"You're going to have to make some sort of sheath for this. Otherwise you'll slice yourself to ribbons if you ever have to carry it around.\"\n\n\"I can take care of that,\" Josh said. \"I've got bits of leftover leather all over the place. It won't be any trouble at all.\"\n\n\"Do it for all of us,\" Rachel said. Althea looked at her. \"Everyone but me and Maria, at least. Our weapons aren't very stabby. But if we need these to go out in public safely, we should have a way to get to them quickly.\" She shrugged. \"No matter how effective they are, it won't do us any good if we have to dig through our purses to get them. If Josh can make sheaths we can hang from our belts, all the better.\"\n\nAlex was fingering the dull edge of his prop dagger. \"How does it work? No one is going to be scared of this. It's not even sharp.\"\n\n\"Not to your eyes, maybe. But to someone like Kincaid, it's scary.\n\n\"Understand,\" she said, glancing around at the crowded workroom. \"Beings like Kincaid and myself exist in both the material and the spirit world at the same time. What I have done to these objects is similar to what I did last night, when I warded the house. But it is much more concentrated. Using your love for what these things represent, I have made them physically and spiritually repellent to a being like the demon-spawn. If he had to, he could still approach you and hurt you, but it would come at the cost of great pain.\"\n\n\"What if we used them to attack him?\" Alex asked eagerly, and Althea heard Rachel suck in her breath in horror.\n\nAlthea shook her head. \"Only as a last resort, dear one. If you are trapped, they will be a final means of defense. But the demon-spawn is still far, far stronger than you.\" She fixed him with a stern eye. \"So don't go a-hunting, do you hear me?\"\n\n\"Yes,\" he said, abashed, and she smiled at him.\n\n\"Althea?\" Maria asked.\n\n\"Yes, love?\"\n\n\"I've been meaning to ask. Where did you get...where did you get your name?\" she asked, blushing over her beautiful dark face.\n\nShe looked at her quizzically. \"From my parents, of course. 'Althea' means 'to heal.' My mother Lilith claimed that learning of her pregnancy cured her of her anger against God, after he cast her out of the garden.\"\n\n\"No, not that!\" Maria said hurriedly, blushing even more, if it were possible. By the Almighty, what ailed the girl? \"I meant your last name. I mean,\" she said hurriedly, \"you probably didn't have last names back when you were born, right? So how did you choose one?\"\n\n\"Oh.\" She smiled. \"Althea Carpenter. Well, Maria, as the years went by and our kind grew fewer, we tried to blend in with humans, who were growing more and more numerous. But I never tired of thumbing my nose at human folly when I could. So I took my last name from the Carpenter of Nazareth.\"\n\nMaria's eyes widened. A few steps away, Josh guffawed in laughter. \"You mean...\"\n\n\"Yep,\" she grinned. \"I named myself after Jesus.\n\n\"Others did much the same thing. Our enemy, for instance.\"\n\nJeremy frowned. \"Kincaid? What does that mean?\"\n\n\"Not Kincaid. His first name. Mortimer.\" She glanced around the room. \"Anyone take any French in school?\"\n\nShe could see Yasna's lips moving as she translated, and was heartened by her participation. The young woman had been almost invisible during the conversation, as if she were still trying to convince herself that everything that was going on was real. \"Mort-du-Mer? Still water?\"\n\n\"Or Dead Sea,\" she said grimly. \"It's a little bit more obscure than most. But the demon-spawn do love images of death.\"\n\n\"What a wanker,\" Yasna said. She smiled, the expression transforming her face into a thing of beauty. \"I bet he gets all emo when he's in a bad mood and plays really bad goth music to cheer himself up.\" The family laughed, and Althea felt her heart clutch inside her chest. This was how Yasna was meant to be, not the timid, cringing woman she had seen so far.\n\n\"Of course,\" Althea continued, after the laughter died away, \"some of my sisters are more...unconventional when it comes to names. My sister Lucifer, for instance.\"\n\n\"Wait,\" Jeremy said. \"Your sister Lucifer?\" Althea nodded. \"But...isn't Lucifer...the devil?\" His voice trailed off as he caught the furious look in her eye.\n\n\"No,\" she said flatly. She tried to rein in her anger at the ancient slander. \"Lucifer means light-bearer, and was used to describe the dawn star. And Lucy was that and more.\" Her face softened. \"Oh, I hope you all get to meet her someday. She is as merry as the day is long.\"\n\n\"But...\" Rachel said slowly. Althea let her head turn, knowing what was coming next.\n\n\"I've heard you swear. 'By Lucifer's Balls.' You've said it,\" Rachel said, her tone almost accusatory. \"I've heard you.\"\n\n\"My sister always did have an odd sense of humor.\" She shrugged. \"It is no great strain on our power to take on a male form when we choose. Lucy was fond of doing so. Not myself,\" she continued. She gave an exaggerated shudder. \"I don't know how men deal with those things. All floppy and dangly and bouncing around. Women's bodies are ever so much nicer.\"\n\n\"It's amazing,\" Sarah said distantly. \"Just when you thought life couldn't get any weirder, it suddenly does. Gender-swapping succubi. Sure. Why not?\"\n\n\"Look at it this way,\" Jeremy said to her encouragingly. \"If Althea's sister ever comes to visit, maybe you can convince her to be a man for a while so you can find out what sex with a succubus is like.\"\n\n\"You're not helping.\"\n\n\"Oh, she would go for you in an instant, Sarah,\" Althea said. \"You're just her type.\"\n\nShe could see her imagination piqued, despite herself. \"Really?\"\n\n\"Oh, yes. You should see her when she's a man.\" She sighed dreamily. \"Tall, red-haired, little dimple in his chin. Kind of looks like that guy on 'Outlander.'\"\n\n\"Sam Heughan?\" Sarah squealed. She was addicted to the show. \"Oh, God, she must be fucking gorgeous!\"\n\n\"Do you have any other sisters, Althea?\" Josh asked, trying to steer the conversation away from Sarah's dream man.\n\n\"Just one left,\" she said sadly. \"Tera.\" She snickered to herself. \"If any of us look like the classic stereotype of the succubus, it's my little sister. Tall, dark-haired, voluptuous. Cute little pair of red horns. I always wanted red horns. But I got white.\"\n\n\"You could always put an illusion on them,\" Rachel pointed out reasonably.\n\nShe made a rude noise. \"But I would know. Enough. Go on,\" she said, waving her arms at them. She didn't want to talk about sisters she hadn't seen in years. Not when she had a blade to craft. \"Scat! Josh and I have work to do here.\"\n\n*****\n\nShe thought Josh might be worried she might have more on her mind than making a sword when she shooed everyone out of the workshop. But once everyone but he and Sarah was gone, she got right down to business, putting on protective clothing and helping him set up the materials.\n\n\"This would be easier if we just had some cast bronze already here,\" she fretted. \"All we would have to do is grind it down and make a hilt.\"\n\n\"I know,\" he replied, pulling up clay blocks from underneath the worktable. He checked them carefully, finding they were still damp and moist inside their plastic coverings. \"But I don't have any left, and it would take days to have some delivered. Days you say we don't have.\" He reached for a tool, but she stopped him with a hand on his arm.\n\n\"You can do the hilt,\" she said. \"But I have to do the blade myself. As much as I can should be by my own hand.\"\n\nHe nodded, but looked worried. \"You know this isn't going to come out of the mold ready to use, right?\" he asked. \"There is grinding and sharpening and polishing.\"\n\nShe nodded. \"I know. Trust me. This isn't my first sword. Or even my tenth. I've done this before.\" She began working on the clay, carving out a hollow where the liquid bronze would settle. When she was done, she would have to do it again, creating two halves of the mold. On the other side of the workshop, Josh had turned on the furnace, readying it for the copper and tin they would use to create the bronze alloy. \"And to be honest, I'm not interested in making a museum piece. As long as it has two sharp edges, somewhere to grip it, and a pointy bit at the end, I'll be satisfied.\"\n\nShe was surprised to see that Sarah had stayed and was willing to assist. The young woman had been so jumpy around Althea she didn't think she would be inclined to stay in the same room with her. But she made herself useful, fetching tools and materials with commendable speed whenever asked. Over the course of the next few hours, Althea was given to understand she had often helped her father the same way when she had been younger, before her parents had separated.\n\nBy the time the mold and the metal were ready, the sun was going down and they had turned on the interior lights. Althea sprinkled the inside with fine sand and ash in a method which had been old when the phalanxes of Greek hoplites had been cutting-edge military tactics. She held her breath as Josh poured the liquid metal into the mold, hoping against hope it would hold.\n\nIt did.\n\nAs soon as the pouring was completed, she fitted the top of the mold over the bottom, taking care there were spaces for the release of the dangerous gasses which would form as the metal cooled and solidified. As she slotted the final bit into place, she saw Sarah looking at her curiously.\n\nShe raised her eyebrows and waited. \"Well?\"\n\n\"You're not...not what I expected,\" she said finally. She glanced over at her father, who was shutting down the furnace, which had filled the small building with choking heat.\n\n\"Hm. What did you expect?\"\n\nThe young woman shrugged uncomfortably. \"Something different. I mean, after what we did, what we had to do to get you back into your body...\"\n\nShe stifled a grin. \"Ah. I see. You expected a sex-crazed demon who would drag you into a series of orgies against your will. Right?\"\n\n\"Well, I wouldn't put it that way...\"\n\n\"Well, of course you wouldn't. Your parents raised you too well to say something so rude,\" she smiled. \"And really, you're not that far off. I am sex-crazed. At least, from a modern point of view.\" She sighed tiredly. \"Back in the old days, things were different. I won't say 'better,' because then I'll sound like a senile old fart who keeps insisting that everything has gone to hell since they were kids. But, by the Almighty, people have a stick up their asses when it comes to sex these days. You would not believe how much fun they used to have.\n\n\"Personally, I blame Emperor Constantine and Saint Augustine,\" she said conversationally as she helped clean up the work area. \"If not for Constantine, the Christians would never have been more than another one of the squabbling Judaic sects that hung around the fringes of the Roman world. But he gave them legitimacy, and all the other native religions slowly faded away. And then Augustine...\" she trailed off in disgust. \"Half the problems modern Christianity has are due to that stuck-up, pompous, sanctimonious prig. He came up with original sin, predestination, all sorts of really terrible ideas. And he had a serious case of misogyny as well. He hated women. But since he was a bishop, people listened to him. And now, sixteen hundred years later, humans are still following his rules.\"\n\nShe realized that Josh and Sarah were both staring at her, open-mouthed. \"You know,\" said Sarah, \"eventually someone is going to call bullshit on you when you act like you knew all these people personally.\"\n\nShe smiled as she opened the door, allowing the two to proceed her out. \"Maybe. But you're going to have a hell of a hard time proving it.\n\n\"And actually, no. I was nowhere near Europe when all that stuff was happening. The Roman Empire was falling apart, and I had no desire to get caught in the collapse.\n\n\"No, I had much more fun. I was in what is now known as India.\" She sighed in happy memory. \"Now that was a place where a girl could let her hair down and relax.\"\n\n\"Watch out, Daddy,\" Sarah said as they climbed the back steps to the house. \"Next thing you know she's going to tell us she wrote the Kama Sutra.\"\n\n\"Don't be silly, Sarah. I didn't write the Kama Sutra.\n\n\"I inspired it.\"\n\n*****\n\nKincaid chewed and swallowed, feeling strength flow back into his body. With a negligent swipe of his teeth, he pulled another hunk of raw, dripping meat from the human femur he held in his hands.\n\nBest use I could have possibly found for Fontein, he thought. The ex-cop had made the fatal mistake of coming to Kincaid's penthouse, perhaps trying to worm his way back into his good graces. Instead, he had found Kincaid, crazed with pain and fury after failing to kill the Carpenter bitch at the hospital. Fontein had barely had enough time to scream before Kincaid's claws had laid his throat open. Maddened, he had fallen on the warm corpse like a starving wolf, taking in food and power with every bite.\n\nNow, Fontein's body lay in a dismembered heap. He had eaten the internal organs first; the heart, liver, and intestines dulling the savage edge of his hunger. His body was rapidly repairing itself. Still too slowly for his taste, but he would be back to his full strength in a matter of days, if not hours, thanks to the beefy ex-cop.\n\nThe pathetic pile of carrion is serving me better in death than he ever did in life, Kincaid snarled to himself. He was still furious over his inability to kill Althea Carpenter. The hateful succubus had been helpless, her body and spirit separated, and still she had somehow managed to elude him! The chase through the streets of downtown Chicago had been exhilarating. He had felt more alive than he had in years. He had been only moments away from laying his claws on her disgusting golden shell when he had been swept off the side of the truck like an annoying insect, his body smashed and broken.",
        "It had taken him hours to get back to his penthouse. His first action had been to call Rachel Wainwright, the human woman who he knew was sheltering Althea's spirit.\n\nHe smiled around a mouthful of bloody meat. Wainwright's reaction had been suitably hysterical. The woman was a good lawyer, but playing unwilling host to a spirit like Althea Carpenter could break even the strongest of wills. He could hear her approaching madness in every word she said. What must it be like, to suddenly have another soul in your mind, driving you to more and more foul acts of self-abasement, unable to control your own sexual desires? Wainwright had sounded like she was one small step away from a complete and total mental breakdown.\n\nGood, he thought. The bitch thwarted me in the Antioch Chemical case. Serves her right if her mind snaps entirely.\n\nBut Carpenter...I must have Carpenter. This Earth, this mortal realm, this zoo of stinking, breeding sheep. I have to escape it. By the Master's black soul, I have to get out of here! Back to the Pit, before I lose my own mind. Her death will be the payment I lay before the Master's feet in exchange for my return.\n\nHe lurched to his feet, ignoring the rags which had once been a four-thousand dollar suit clinging to his malformed flesh. Fontein's leg held casually in one hand like a chicken bone, he went to his desk. He turned on his laptop, going over once again what the corrupt officer had gathered for him before his untimely demise. Dried blood flaked away from his claws as he typed, the action surprisingly delicate and precise, despite his grotesque outward appearance.\n\nLet's see...\n\nRachel Wainwright was a lawyer. But a quick perusal of her firm's website showed that she had recently retired, though she was still listed as a partner. He scowled, the flesh of his forehead bunching unpleasantly around his horns.\n\nThe cunt probably took the money and ran when Antioch caved.\n\nFontein had determined that Joshua Sunderman, Wainwright's until-recently estranged husband, had moved back into her house, the result of a reconciliation between the two. Kincaid smiled mirthlessly. He suspected the reconciliation was less a result of love and more a result of Althea's influence, her unnatural lust driving Rachel back into the arms of a man she despised.\n\nShe might actually thank me for killing him. So, no. Sunderman is safe for now, damn him. I want to hurt her. To pay her back for what she has done to me.\n\nAh. The children.\n\nThe daughter, Sarah, was apparently a complete slacker, having done nothing but sit around on her ass for a year after graduating high school. Fontein's research had revealed that Sarah Sunderman would be attending culinary school in a few weeks, when the new school year began at Kendall College.\n\nMaybe I should pay her a visit. Kill her, gut her, and make her into a nice dish for Mommy and Daddy to find. Human Tartare. His mouth watered, sending drops of sizzling spittle down his chin.\n\nNo. It's too long to wait. He paused, his forehead knotted in thought. What did Fontein tell me about the boy? Something about acting school?\n\nIt took only moments, and his eyes widened with evil delight. Alex Sunderman, though supposedly about to transfer to Northwestern, was slated to play Iago in a production of Othello being put on by his current school, the College of DuPage, a cut-rate community college in the western suburbs. The premiere was only a few days away.\n\nHe leaned back in his leather chair and gloated. Rachel Wainwright, savor your madness. It will feel like paradise compared to what I am about to do to you. You'll be there, won't you? The proud little mother, watching her son strut around the stage. Then, when you least expect it, I will cut him down before your very eyes. Then I will kill you and that monstrosity you are carrying around in your pretty head. Then the pathetic remainder of your family.\n\nAnd for dessert, I'll dine on the flesh of a succubus.\n\n*****\n\n\"So how's the sword coming along, Althea?\" Rachel asked late that evening.\n\nAlthea shot her an amused look, then looked at Josh, who was sitting on the couch, a sketchbook in hand. He had asked her to pose for him, and she was lying at her ease on a love seat, nude. As members of the family wandered in and out, sneaking furtive glances at her, she felt her body warm, readying itself for sex.\n\nIn fact, the entire evening had been steeped in a thick liquid haze of sexual desire. When Alex and Maria had come down for dinner, Althea had been surprised and delighted to see the lovely Latina maid leashed, led around on a leather cord which encircled her brown throat. She had been naked from the waist up, her dark skin gleaming with sweat, her nipples so hard with arousal they seemed to threaten to burst from her breasts. Her musk had risen around her like an invisible wave, and only Althea's pride in Alex's bravery in showing their desires in such an uninhibited fashion had kept her from diving into her sweet folds and tonguing her to orgasm.\n\nJeremy and Sarah had hardly blinked at the display, though Sarah had rolled her eyes at her older brother. Rachel and Josh hadn't even raised an eyebrow, treating the pair with the sort of relaxed, casual courtesy that only came when two people had spent so long in one another's company they barely needed to talk to agree. Yasna, on the other hand, had barely been able to keep her eyes off of Maria, and, to a lesser extent, Alex. Althea smiled in memory, thinking of the way the young doctor's eyes had devoured the pair.\n\nOnly a matter of time, she thought smugly, shifting slightly on the love-seat. She stopped when Josh gave a frustrated hiss.\n\n\"Please hold still, Althea,\" he said. \"Or this is going to turn out to be the most horrible mess.\"\n\nShe smiled at him, charmed by his devotion to his work. \"It's not like this is going to be the only time I ever pose for you, Josh.\"\n\nHe raised his brows at her. \"Did you ever hear the story of William Manchester? He planned to write a three-volume biography of Winston Churchill. The first two books were amazing.\" He sighed. \"Then the poor bastard had a stroke and couldn't finish the last book. He had to farm out the work to a literary executor.\n\n\"So I'm never going to miss a chance to create art, Althea. Especially when I have such a superb model to inspire me.\"\n\nHis words made her blush happily.\n\n\"I don't suppose anyone is actually going to answer my question?\" Rachel asked. Her voice sounded a little snappish.\n\nAlthea held still, but answered the question. \"The answer, Rachel, is that it's too early to tell. Once the metal is poured into the mold, all you can do is wait until it cools. By tomorrow we should be able to take it out.\" She gave a very tiny shrug, ignoring Josh's warning growl. \"I don't anticipate any problems. We built a good mold, and sword blades aren't too difficult. And this sword is a one-shot. Once we take care of Kincaid, I'm going to bring Atashe' back here, so I will have it if needed.\"\n\n\"Atashe'?\" Sarah asked, from where she and Jeremy were lying in a drowsy, snuggled heap.\n\n\"My sword. And yes, Rachel,\" she said, anticipating the next question, \"I did name my sword. It means-\"\n\n\"The Fire of My Heart,\" said Yasna. She smiled at Althea as the words flowed off her lips like liquid honey. \"Of course, the full name would be 'Atashe' Delam.'\"\n\nAlthea smiled back. Slowly. You have to draw her in slowly. \"Indeed. It's Persian. I do have a liking for ancient languages. English is a mere child by comparison.\"\n\n\"Atashe' Delam. That's a great name,\" Alex said from the chair where he and Maria were sitting. Her bare back was leaned back against his chest, and his hands cupped her breasts, slowly stroking. It made Althea's breath catch in her throat, so beautiful the two of them were together.\n\nAnd Sarah and Jeremy are just as lovely in their own way, she thought.  More restrained. But not less passionate. Indeed, even as she watched, Jeremy gave Sarah a hug, his lips brushing her cheek. In return, she squeezed his hand, laying it on her flat stomach, her fingers entwined with his.\n\nShe opened her mind, letting the pleasure the couples shared flow into her. Power gathered in her mind. Despite the protective spells she had woven earlier in the day, she was gaining strength, practically on an hourly basis. Never had she been exposed to so much sexual desire at once, so much love. Seven sexually mature adults, six of whom were in at least one relationship, often more. At times she felt as if she were drinking from a fire hose. At others, she felt almost ashamed of the glut of power which was available to her.\n\nAs if in response to her thoughts, she could feel the lips of her pussy growing flushed with blood, thickening, engorged, and turning outward. The noose of desire tightened around her neck, making her breath grow short in her chest.\n\nA man. I need a man. It has been too long. Weeks.\n\nWho?\n\nBut in reality, there was only one choice. Rachel had worn Alex down to a nub earlier in the afternoon, even if he was looking satisfactorily recovered. And Sarah would not thank her for tempting Jeremy away from her. Although she was growing more comfortable with her, especially after their time together in the shop today, there was still a small undercurrent of tension. She sighed to herself. Jeremy was a lovely young man, and she knew from her sojourn in Rachel's body that he was a good lover. It seemed to her to be patently unfair that she should have to deny herself only because Sarah was resolute in her heterosexuality and saw no need to share her boyfriend.\n\nTime, Althea. All it will take is time. Time for her to grow confident in her own beauty. Time for her to see what I shared with Rachel and Alex today will have no effect on their relationships with Josh or Maria.\n\nBut I want them all!\n\nPatience.\n\nReally? Okay. I want patience, and I want it now!\n\nJosh must have heard her muffled snort of amusement, for he looked over the edge of his sketch pad at her. \"Something funny?\"\n\n\"It would take a while to explain,\" she said softly. She didn't move, but in an instant, her entire posture seemed to change, her lush, ripe body casually inviting. She stood, then walked over to where he sat, putting a world's worth of invitation into the four or five steps.\n\nShe held out a hand to him. \"Would you like to come to bed?\"\n\nHe put down the pad of paper, then looked over at his wife.\n\n\"Go ahead,\" Rachel said, her voice cheerfully indulgent. \"You know you don't have to ask me for permission.\"\n\n\"Maybe,\" he replied. \"But I know the day I don't is the day I'll have my head handed to me on a platter.\" He took Rachel's hand. His own shook slightly.\n\n\"Althea.\" His voice was quiet, but all eyes were on him. \"I've never...I haven't....\" He took a deep breath. \"Until Sarah, I'd never been with anyone besides Rachel. Ever. And I haven't since, either.\"\n\nShe smiled into his eyes. \"I know, beautiful man.\" She cupped his cheek, her fingers lightly tracing his skin. \"Why do you think it makes you so attractive? When you love, you love deeply. You give your whole heart to your lovers. Just as your wife does. And your children. And their mates.\n\n\"It's what make you irresistible to me. And probably to all of my kind. It's not just the sex. Although that has been spectacular so far. It's your spirits.\n\n\"Come with me.\"\n\n*****\n\nAs Althea and Josh left, Yasna let her head sink. Her face crumpled in grief, and she fought to keep the racking, tearing sobs from bursting from her chest.\n\nMaria looked at her, then rose, drawing Alex after her. \"I think we should go.\" She cast a quick look at Jeremy and Sarah. \"Would you like to come to my apartment for a little while? Alex is the only one who has seen it since I moved in.\"\n\nThe two murmured agreement, and soon Yasna was left alone with Rachel.\n\n\"I should go to bed,\" she said. Her voice sounded choked in her own ears.\n\n\"No, you shouldn't,\" Rachel said. \"Althea and my husband will be in her room. You know, the one you shared with her last night? I don't think you would be happy to see them right now.\n\n\"What is the matter with you? You ran away from her this morning. And now, when she is leaving you alone, you act as if she's your girlfriend and she just dumped you.\"\n\n\"I don't know,\" she moaned. Her heart felt like it was breaking. \"I don't know what I want.\"\n\n\"Or maybe you do, but won't admit it to yourself.\"\n\nHer head snapped up, her eyes glaring at Rachel. \"I want her,\" she snarled. \"All right? Is that enough for you? I want her so bad I hurt. I want to take her clothes off and spread her legs and lick her until she comes in my mouth. I want to kiss her tits and feel her legs and taste her mouth. And I want her to do things to me I can't even say out loud.\"\n\nIf she expected Rachel to be shocked, she was in for a surprise. The small, dark-haired woman merely raised an eyebrow. \"Good. At least you're able to define what you want. So why haven't you acted on it?\"\n\n\"Allah, can you even ask? How can I compete with the rest of you?\"\n\n\"By realizing this isn't a competition, for starters.\" She got up and sat down beside her, settling an arm around her shoulders. Yasna leaned into the touch, so like her mother's, but unlike at the same time. A spasm of frustrated desire stabbed at her. I can't go on like this.\n\n\"I think I should try to explain some things about Althea to you,\" Rachel said quietly, \"since I doubt she has taken the time to do so herself. The most important thing is that she is, by and large, a creature of emotion. Of feeling. Think about what she has told us about herself. She gets her power from the joy brought by sexual pleasure. By orgasms. She is very simple that way. Not stupid,\" she emphasized. \"Never stupid. Merely uncomplicated. But she will respect your choices.\n\n\"So when she asks someone to share her bed, and that person turns her down, it will be some time before she asks again.\"\n\n\"I wasn't ready,\" Yasna protested. \"And besides. She doesn't seem to have much of a problem asking Sarah again. And again.\" Indeed, it had become something of a running joke, the golden-haired succubus making more and more outrageous suggestions to Rachel's teenage daughter, who had blushed and laughed in reply, gradually growing accustomed to Althea's ways.\n\n\"No one is blaming you, Yasna. I know you've been hurt. Badly hurt. And I know you are confused by what you want. And whether you actually, truly want it. But you can hardly blame Althea for giving you the space you say you need.\n\n\"Wait. Watch. Rest. Heal. She will be there, waiting for you, when you are ready. But don't pine away waiting for her to ask you. You must ask her.\" She felt a gentle hand on her chin, turning her head up until she was forced to meet Rachel's eyes. Dark blue, filled with a wisdom that was not ordinarily given to mortals, they searched hers intently. \"Oh, Yasna,\" she sighed, and pulled her lips down to her mouth. Slowly, gently, she kissed her, sweetly and inexpressibly tender.\n\nAfter a moment, she pulled away, her eyes gleaming. Yasna's heart was pounding, her pulse racing in her throat and at the junction of her thighs. She blinked, confused. Why did this wonderful woman not continue?\n\n\"Because,\" Rachel said, reading her thoughts, \"you are not ready yet. But,\" she continued, trailing a hand down her cheek as she shuddered, \"you will be.\n\n\"Soon.\"\n\n*****\n\nJosh had barely closed the bedroom door behind them when Althea was in his arms, her mouth hungrily devouring his. The golden-skinned succubus clung to him as a drowning sailor did to a spar on a storm-tossed ocean.\n\n\"Lilith's Tits,\" she panted when they finally parted. \"It's been so long since I've had a man. Three weeks. I haven't gone that long since I was younger than Sarah is now.\n\n\"I thought about taking Alex earlier today. But the way he and Rachel were looking at each other...I couldn't. And Jeremy is a non-starter at this point.\" She unzipped his jeans, her fingers reaching in to cradle his erect cock. \"Oh,\" she breathed, her eyes rolling back happily in her head as he filled her hand. \"That's just...lovely.\"\n\nShe stepped away, just a bit, so she could push down his pants. When she rose, he had it brought home to him once again that Althea was actually taller than him. He looked up into her face, realizing she was smiling down at him. \"Do you have a problem with it?\" she asked, reading his thoughts with almost frightening ease.\n\n\"To be honest, I think it's kind of hot. Like making love to Wonder Woman. Or an Amazon.\"\n\nShe laughed and pulled him onto the bed with her. He ended up sprawled on his back, with her draped across his chest and thighs. \"Mmmmm,\" she sighed, wiggling around so she could breathe on his straining phallus. \"I think I know what I want.\" She spread her legs, straddling his head. She slowly lowered her core down towards his waiting mouth. At the exact instant her folds touched his mouth, her lips embraced the head of his shaft.\n\nHer taste was intoxicating, and as soon as her nectar passed his lips, he had no trouble understanding why so many men and women had fallen beneath her sway. She filled his senses; her taste in his mouth; her scent in his nostrils; her feel in his hands; her soft moans in his ears; her lovely skin, her sleek flesh in his eyes. He lapped at her folds, taking in more and more of her delicious dew. His hands clutched spasmodically around the glorious curves of her buttocks, pulling her down against him.\n\nShe giggled around his rod, and let it escape her mouth long enough to comment. \"Enough, my love. I am not going to run away. You don't have to hold onto me as if I am going to try to escape.\"\n\n\"Sorry,\" he gasped, tearing his mouth, with difficulty, away from her sweet feminine core. \"I just...\" he trailed off, helplessly.\n\n\"I know, sweet man. I know.\" She filled her mouth with his cock once again, making love to him. She was soft and hot and wet, and felt lovely. His cock strained towards her, eager to fill her mouth with his seed, as she bobbed slowly on his rod. Her tongue was incredibly skilled, seeming to know instinctively the places to give him the most pleasure.\n\nAnd why not? His thoughts were dazed, but he was not yet so far gone as to be incapable of thought. She could have pulled the knowledge out of Rachel's head at any time over the past two weeks. Rather than disturb him, the idea made him even more determined to return his pleasure to her. He used his fingers to gently part the wet folds of her sheath, allowing his tongue to find the pulsing nodule of her clitoris. As he fastened his lips upon it, she jerked under his touch, her mouth humming around him, almost like a purring cat. He drew it into his mouth, lightly flicking it with his tongue, using the lessons Rachel had taught him so well.\n\n\"By the Almighty, you're wonderful,\" she said, letting her head fall limply onto his thigh, although her hand still slowly fisted his steely length. \"Though I should have known. When you made love to Rachel, I was a lot more than a mere passenger.\"\n\nIf she thought she could tempt him to answer, she was mistaken. He gave an agreeable hum, but kept his mouth on her sopping sex, urgently lapping at her angelic fount of pleasure.\n\nSlowly, almost imperceptibly, she relaxed, until she was lying limp across his body, the only parts of her body moving being her hips, which slowly rolled her pubic mound back and forth across his mouth, and her hands, which gently jacked his aching rod, pulling him inevitably towards his own climax. Her breasts filled his palms, and he caressed the heaving orbs, wondering at the wonderful heft. The nipples were the size and shape of the last joint of his thumb, and stiffly erect. Althea writhed, slow and sensual, her slit trailing over his mouth, as he pinched them softly. Every minute or so, she would give a soft, high pitched giggle of pleasure, which often trailed off into a satisfied moan.",
        "\"Josh,\" she whispered. \"I'm getting close.\"\n\nWith his mouth buried in her folds, he could not answer. But he did give a grunt of encouragement. Althea slowly backed into him, until her clitoris was forced into his loving mouth. Taking the hint, he lashed the sensitive bud with his tongue, her taste like salt and honey in his mouth, feeling her body tensing on top of him. At the same time, her strokes on his cock quickened, the wetness from his cock-head slickening his shaft, speeding her strokes.\n\n\"Oh. Here we go. Here we go!\" Althea panted. For one splintered fraction of a second, her body was motionless. Then, with an almost subterranean growl of release, she came into his face, flooding his mouth with her ambrosial taste. Her swallowed thirstily, never wanting the moment to end. Her hips bucked against him, her thighs and hips shaking, as her muscles rippled in joyous completion.\n\nHer orgasm, coupled with the indescribable sensation of swallowing her most intimate fluids, triggered his own climax. Come boiled up his shaft like oil from an uncapped well. Before he could do more than gasp out a frantic warning, his cock expanded, thickening. Just before he exploded, he felt a set of lips eagerly encircle his throbbing head. She licked him lovingly, and then his orgasm was upon him. Over and over, his muscles clenched and released, pumping semen into her hungry mouth. He could feel the muscles in her throat work as she swallowed what he gave her.\n\nAfter an interminable length of joyous rapture, he finally came back to himself. Althea had somehow twisted around, and was laying by his side. Her green eyes looked up at him wickedly as she pulled him on top of her. His hips nestled into the welcome angle of her thighs.\n\n\"Nice,\" she commented, her voice low, soft, and blurred. \"Very nice. I needed that. Literally. More than I can possibly make you understand. The seed of a virile man...\" she trailed off, licking her lips, her eyes focused inwards. \"It is life and breath to me. Now let's fuck.\"\n\nHis eyes widened, and he gave a self-deprecating laugh. \"I'd love to. But it's going to take me a bit to recover.\"\n\n\"No, it won't.\" She smiled up at him, guiding his hands to her breasts. \"Don't tell me Rachel hasn't tried this on you yet.\"\n\n\"Tried what?\"\n\n\"This,\" she said, and his mind exploded.\n\nSometime during their love-making session, Althea's tail had emerged from its sheath. Now, she used the spade-shaped tip to caress his penis and scrotum. The feeling was exquisitely pleasurable, even more than the feeling of a woman's tongue on him. As her tail stroked him, he found himself responding, surging erect in mere seconds.\n\nHe looked at her in amazement. \"How...\"\n\nShe smiled smugly. \"We were given many gifts. This is another of them. When I wish, my tail secretes a fluid which serves as a potent aphrodisiac. It can make a man ready in seconds. Or a woman,\" she added. \"Though usually men are the recipients.\" Her face creased in a puzzled frown. \"I cannot imagine what the Almighty was thinking, when he designed you. Why give men a tool which can provide such incredible pleasure, and then make it so unreliable?\"\n\n\"Maybe because if we were constantly ready to go, we wouldn't do anything else?\" Josh suggested. \"I mean, it's hard to create civilization from scratch when you are constantly screwing.\"\n\nAlthea laughed, her voice like silver bells in his ears. \"Maybe. But since we have civilization now, there isn't any reason not to screw all we can.\" She reached down, guiding his hardness into her. \"Fuck me, Josh. I need a man. Women are lovely, and I love them. Especially your wife. But there is something about a strong, hard man inside me...\" she shivered happily, and he could see the pupils of her eyes were dilated. \"It's what I was made for.\"\n\nDisobeying her command was all but impossible. Under the loving strokes of her tail, his balls felt hot, swollen with seed. The urge to mate with her was irresistible. Slowly, then more rapidly, he plowed her hot furrow, his cock thrusting into her hot, slick cavern. At every stroke, his testes bounced against the wet heat of her sex, sending his passion spiraling skyward. His chest brushed the glorious mounds of her breasts, and he learned the delight of making love to a woman who was taller than he, as it was no effort at all to bend his head and latch onto one of her bronze-colored nipples with his mouth, laving the turgid bud with his tongue.\n\nHer hands caught him by the hair, keeping his head at her breasts. Her keening voice sounded in his ears, the words almost indistinguishable, but filled with lust and desire. Her thighs rose, gripping his hips firmly, keeping him from escaping, if such an option had even thought about crossing his mind. It didn't. With Althea, he was finding the meeting of souls he had only found with his wife, and recently, his daughter.\n\nBeneath him, Althea was in rapture. She had taken hundreds, maybe thousands of male lovers during her long life. Most had been for her pleasure alone. Some she had cared for. A very few, she had loved.\n\nJoshua Sunderman outshone them all.\n\nBy the Almighty, she sighed, as his tongue flickered back and forth between her heaving breasts, laving them lovingly. If I had known he was under my nose this way I would have found and seduced him years ago!\n\nIt wasn't just his lovely cock, pumping into her with apparently no urge to slow or stop. Or his muscular body. Or his sweet mouth or his loving hands. It was all of them together. Combined with the gentle passion of his lovemaking, his transparent desire to please her, she found herself falling in love all over again. His disparate parts combined to create a greater whole.\n\nAnd he is certainly making my hole feel great, she thought, giggling with pleasure as he fucked her. She wrapped her arms around his back, pulling him more and more tightly into her. Her heels dug into his ass the better to urge him to pound her harder harder harder.\n\n\"Harder,\" she moaned. With an effort, she pried Josh's head away from her breasts and up to her face, where she kissed him deeply, their tongues doing happy battle inside the caverns of their mouths. \"Harder, Josh. I like to be fucked hard.\"\n\n\"I'll blow quick,\" he warned her.\n\n\"Then you can fuck me again,\" she grinned up at him. Below, his groin began to slap at her with redoubled force, intensifying the sweet ache in her loins. It began to spread throughout her body, presaging the massive orgasm which was only moments away.\n\n\"Almost there,\" she whispered. She cupped his cheeks in her hands, infinitely tender. She drew his mouth down, and they kissed. In turn, she felt his fingers trace the delicate curve of her horns and gasped. No one, not even Rachel, had guessed at the incredible sensitivity of that part of her body. The touch sent her over the edge, her hips bucking wildly, the muscles of her channel grasping Josh's cock, milking him, until he in turn erupted inside her in a series of quaking spasms. His hot ejaculate coated her, filling her with another massive jolt of power.\n\nAnd with that final dose of sexual strength, she felt the circle complete. With a thought, she tested the reservoirs of her mystical gifts. With a stifled gasp of relief, she found they were full.\n\nAt last. \"I'm ready,\" she growled. Collapsed across her chest, she felt Josh draw back in alarm, suddenly afraid.\n\n\"Sorry, dear one,\" she said, patting his back. \"Sometimes the more...exotic side of my heritage takes control. Remember, the angels were not all sweetness and light. How could they be, when they were called to war against the Forsaken? Even my own father was not immune to his own nature. And when I am called upon to protect those whom I love...I can be frightening, I know.\"\n\n\"You eyes...\" Josh stammered. \"They were glowing. All green fire and molten gold.\"\n\nShe nodded. \"I didn't mean to scare you. Think of it as a sign that I am finally back to my full strength.\"\n\n\"So....\" Josh said, his brows furrowed. \"When your eyes go all crazy like that, it's kind of like the green light telling you your cell phone is fully charged?\"\n\nAlthea laughed out loud. \"Yes. Though I would never have put it in those terms.\" She sighed deeply. \"By the Almighty, it feels like an eternity. Three weeks of weakness. Three weeks when any concerted attack could have blown out my life like a candle. Three weeks when my life hung by a thread.\n\n\"Never again,\" she swore. \"I will never let this happen to me again. I will ward myself by day and night against mystical attacks like that which tore me out of my body. I will protect my loved ones from those who would harm them. I will kill Kincaid, and then I will embark on a mission to make this world safe for me, my kind, and those who I love.\"\n\n\"But first,\" she said, capturing his mouth in another kiss, \"we have a whole night ahead of us. And it is yet young. Are you ready to make love again, wonderful man?\"\n\nHis laughter was her only answer."
    ],
    "authorname": "Glaze72",
    "tags": [
        "group sex",
        "incest",
        "milf",
        "sci-fi",
        "succubus",
        "urban fantasy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/idle-hands-ch-05-1"
}