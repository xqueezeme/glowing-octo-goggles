{
    "title": "Amazing Grace Ch. 08-10",
    "pages": [
        "CHAPTER EIGHT\n\nExploring Limits\n\nI glanced over at the bedside clock. 9:43. We hadn't eaten anything for dinner.\n\nAs if reading my thoughts, Ethan whispered, \"Are you hungry?\"\n\n\"A little. Not enough to get up, though.\"\n\n\"I hear ya.\" Ethan nuzzled my neck. His cock had grown soft inside me and was now sliding out a centimeter at a time. \"I hope you're not expecting an encore, though. I think three times in one day is a record for me.\"\n\n\"A stud like you?\"\n\n\"Don't start something your ass isn't prepared to finish for you.\"\n\n\"Oh, now you turn all Dom.\"\n\n\"What's that supposed to mean?\"\n\n\"I mean, what we just did wasn't exactly in the BDSM playbook.\"\n\nEthan shrugged, \"So?\"\n\n\"I didn't think you'd get off to vanilla sex.\"\n\n\"I'm pretty sure with you I'd get off to any kind of sex.\"\n\n\"Oh, stop.\"\n\n\"Wasn't that proof enough for you?\"\n\n\"I suppose.\"\n\nI started to catalogue in my mind what we'd done sexually. It felt like a lot in a short period of time. But then, we were making up for a weeks worth of celibacy. It dawned on me one obvious thing that was missing.\n\n\"Ethan?\"\n\nEthan opened his eyes. \"Yeah?\"\n\n\"Why haven't you asked me to go down on you?\"\n\nEthan chuckled and blinked hard for a second. \"Uh, well, it just hasn't crossed my mind, I guess.\"\n\n\"Is it because you think I won't be as good at it as your previous subs?\"\n\nHe tilted his head with a frown. \"No. Where...? Oh, hell Grace. You do come out of left field with some of your assumptions. I have no doubt you'd satisfy me in that department. If you really must know why it hasn't happened, it's because I was afraid it would make you feel used. And judging by what happened earlier, I'm probably right.\"\n\n\"I don't want to be this broken person that you have to make concessions for all the time.\"\n\n\"Grace, you're not. We haven't exactly had the opportunity. If I wasn't so drained right now, I'd be happy to oblige you. And you're not broken. Quit being so hard on yourself.\" Ethan glanced at the clock and suppressed a yawn. \"I'm wiped out.\"\n\n\"You haven't eaten anything since lunch.\"\n\nEthan nodded and sighed. \"I don't feel like making anything. Mind if we just snack on what I've got?\"\n\n\"No. Works for me.\"\n\nI waited for Ethan to make some move toward getting up, but he just rested his cheek on my shoulder and continued his absentminded caress of my arm.\n\nWe stayed like that for another hour, drifting in and out of sleep. Finally Ethan got up and turned off the lights and we settled in the middle of the bed just like the night before.\n\n***\n\nI woke up first again. It was still dark outside. 5:02.\n\nEthan was lightly snoring near my ear. He'd managed to push me to the very corner of the pillow he'd taken over from me. He was such a bed hog but I couldn't begrudge him for it. He wasn't used to sleeping with anyone. At any rate, it had no ill effect on my own slumber, apparently. I'd slept better than I could ever remember sleeping.\n\nI could tell from how alert my mind was becoming that there was no chance of my falling back to sleep. My bladder prompted me to slide out of bed. Ethan lifted his head and squinted at me.\n\n\"I'm just going to the bathroom. I'll be right back.\"\n\nEthan nodded and let his head drop to the pillow. I glanced at him one last time before shutting the door and taking care of business. When I returned, he'd shifted onto his back but appeared to be deep in sleep again.\n\nI stood beside the bed staring at him and listening to his even rhythm. It was so soothing. I really was falling for this man. More than I wanted to admit. Just being around him made me feel better about myself. Normal.\n\nI chuckled as I recalled his reaction to that word earlier. Maybe two abnormals make a normal. We just seemed to fit in a way I was only beginning to understand.\n\nI knew one thing for sure, though. Something wasn't quite right when I woke up. I padded to the living room, mildly aware of how comfortable I felt in the nude. My eyes scanned the mess on the floor and it brought back fresh memories of my panic attack. It already felt like it'd happened ages ago, rather than hours. I knelt and picked up the bowl, setting it in the sink as quietly as possible. Then I gathered our clothes and placed them on the sofa.\n\nThat looks better. Where are the...?\n\nI spotted what I had come in there for. The cuffs. It saddened me to wake up without them. Like I'd lost my lifeline to Ethan. I picked them up and held one around my wrist. I was amazed at how the feel was comforting to me.\n\nEthan stirred and opened his eyes as I approached through the doorway. \"Everything alright?\"\n\n\"Yeah. Well, not exactly. I'm not sure how this works; if I need to ask you for these, or what.\" I held out the cuffs toward him.\n\n\"You want me to put them on you?\"\n\n\"Yes.\"\n\n\"Okay. Come here and have a seat.\"\n\nI sat down and handed the cuffs to Ethan, then presented one wrist at a time for him to cuff.\n\n\"There isn't some secret code of conduct we have to follow, you know. Whatever works for us. If you want something, just ask.\"\n\nI nodded. My gaze shifted to the tent that Ethan was creating with his morning erection. When my eyes met his again, he was smiling at me.\n\n\"I get just as turned on by you asking me for something.\"\n\n\"Why?\"\n\n\"Because you're giving me control when you ask. I can always say 'no'.\"\n\n\"Would you, though?\"\n\n\"I might. Or I might ask you to tell me why you are making your request before I decide. In this case, I wanted to cuff you so I didn't ask. But now that we're talking about it, why did you want me to put these on you?\"\n\n\"I feel closer to you when I have them on.\"\n\nEthan moaned. \"You say the sweetest things, baby. Climb back under the covers with me.\"\n\nHe shifted onto his side and pulled my back against his chest. He palmed my breast as he nibbled at my ear. His hips kept rolling in a gentle rhythm against my backside.\n\n\"All that nice sex last night has put me in the mood for fucking.\"\n\nHe pinched my nipple as if to accentuate the point. I nodded and moaned. It had done the same to me, or I was just into it because he was; I'm not sure.\n\n\"Have you ever had anal sex, Grace?\"\n\nI shook my head. I hoped he wouldn't ask me my thoughts on it because ordinarily I was quite certain I'd be against the idea. At that moment, however, I might not accurately convey that stance. I was growing more amorous by the second and dangerously close to agreeing to anything.\n\n\"Up on your hands and elbows.\"\n\nI obeyed.\n\n\"Now, slide your elbows toward the headboard so I can bind your wrists there.\"\n\nHe clipped them in place just as he promised. He then flattened his palms on my back and slid them down my body as if he were smoothing out my skin. On his knees, he moved between my calves and continued his smoothing. He reached beneath me to my swaying, heavy breasts and fondled them roughly. It was just uncomfortable enough to elicit a mewl from me.\n\nHis thumbs parted my butt cheeks and I held my breath. Oh, please, no. I felt his hot breath kiss the exposed area, then he released his grip and slid his thumbs down to my slit.\n\nBoth his thumbs entered me at once and I reacted by arching my back and parting my knees at the same time. Ethan yanked my hips toward him and my elbows slid off the mattress as my arms were extended over my head. He pulled again and I could feel my tense muscles already starting to ache.\n\nThen he fucked me.\n\nIn stark contrast to the night before, he drove his hard cock into me with such force, every muscle of mine went numb. My own climax built to an unbelievable crescendo and then just held there. I don't know if I was having one long orgasm, or a bunch of tiny orgasms back-to-back.\n\nWhat it actually felt like was that I never completely released but was being suspended just at the edge of coming.\n\nEthan would pull all the way out and then back in again with fury. All the while yanking me painfully tight until my upper body was completely suspended over the mattress. It had to take some coordination to do it. Pulling while he thrust his hips forward.\n\nHe had a particular routine he liked to follow. He'd take a series of shallow strokes and then several punishing thrusts, bottoming out against my vaginal wall.\n\nFinally his thrusting stuttered and his rhythm became more unorganized. He held my hips firmly against him as he unloaded.\n\nA few moments later, drops of sweat fell onto my back and then he abruptly pulled out of me. I felt my anus release something and I tensed. I quickly realized that he'd had his finger or something in there while he fucked me. I hadn't even noticed through all the pounding.\n\nEthan left me and walked into the master bathroom. He didn't shut the door so I could clearly hear what he was doing. He ran the water in the sink for a few minutes and then washed his hands. He urinated. It sounded like Niagara Falls to me. Then he flushed and returned to the bed.\n\nI felt a warm washcloth against my vagina. I was going to be a little sore. He gently cleansed the area and it felt good to be tended after. It wasn't the same as cuddling afterward, but it was close.\n\nEthan unfastened my wrists from the headboard and eased me onto my back. Then he sat beside me, his hand gripping my waist possessively as he studied my face for clues as to what I was thinking.\n\nMorning light had begun to illuminate the room. His chest was still heaving slightly from the exertion and his tattoos glistened beneath a sheen of sweat. He was so intensely masculine. More so than any man I'd been with.\n\nLying there and looking up at him with his hand still gripping me, I was replete. Even my brain had slipped into a peaceful reverie.\n\n\"What do you want to do first, shower or eat?\"\n\nI shrugged. \"Whichever you want.\"\n\n\"Well, I don't do the couples shower thing, so do you want to go first?\"\n\n\"Okay.\"\n\n\"Is there anything we need to talk about?\"\n\n\"Nope.\"\n\nEthan chuckled. \"Okay, then.\"\n\nI held out my wrists and he released me from the cuffs. He briefly kissed my lips before standing up and walking toward the door. He turned and took one last look at me as I made my way to the bathroom. I was starting to find that smirk incredibly sexy.\n\nI met him in the kitchen after my shower. He hadn't instructed me on what to wear so I put on what I wanted. His tee shirt and a pair of shorts.\n\n\"You look sinful in my shirt. Do you ever go out braless like that?\"\n\n\"Oh, gosh no.\"\n\n\"You should. It's sexy as hell. I tell you what, it's gorgeous outside. Why don't we go have lunch at Sneaky Pete's and watch the drunk boaters as they dock?\"\n\n\"Okay.\"\n\n\"You can wear that.\"\n\n\"Ethan, I don't think so. It's too revealing.\"\n\n\"No more revealing than the bikinis that are going to come through there.\"\n\n\"Is that why you want to go?\"\n\nEthan released an exasperated sigh. \"I have to remember not to set myself up like that. No, silly. I want to go to show you off. I want to watch the expression on the guys' faces as they pass our table. I want you to see the looks you get. You are so fucking gorgeous, baby.\"\n\n\"Are you sure we won't get kicked out?\"\n\n\"Positive.\"\n\nWe went to Sneaky Pete's and ate lunch. Ethan was the one doing all the gawking. At me. He swore that he wasn't the only one, but he was the only one I noticed. That was perfectly fine with me, actually. I didn't really like the thought of being on display. I did, however, like doing it because it pleased Ethan.\n\nIt was a subtle distinction that didn't go unnoticed by my conscious brain. I wondered if I wasn't starting to become a submissive. Or maybe I already was; the label was still so confusing to me.\n\nWhatever I was becoming or not becoming, Ethan and I seemed to be clicking. We were just a normal couple. There's that word again.\n\nWhen we got back to his place in the afternoon I started to feel tense. The weekend had been more like a dream vacation for me that I didn't want to end. But every time I thought I might say something to that effect, my own insecurities stopped me. What if it hasn't felt the same to him. You have to give him the opportunity to escape gracefully. He only asked you to stay for the weekend. Not forever.\n\nAs if he read my mind, Ethan approached the topic.\n\n\"Tomorrow night we're having our regular monthly club meeting. They're kind of boring, but I was hoping you might go with me.\"\n\n\"As your date?\"\n\n\"Yeah.\"\n\n\"Sure.\"\n\n\"I was thinking that maybe we could drop off your car at your place today. You could pick up whatever you need and some work clothes for tomorrow. We can ride into work together in the morning, your office is on the way to mine. I'll pick you up for lunch, and then after work we can go to the meeting.\"\n\nI tried to apply some restraint to the grin that was about to take over my face. \"I'd like that.\"\n\nEthan took a deep breath and exhaled. \"Good.\"\n\n\"What was that for?\"\n\n\"I was bracing myself for an argument.\"\n\n\"You thought I'd say no?\"\n\n\"I thought you might try to complicate it. I like you and I want to spend time with you. It's really pretty simple. We can't build on this good thing we have if we're apart.\"\n\nHis delivery sounded a bit rehearsed and the approach wasn't exactly flowery, but he was sincere. What were you expecting - 'After one weekend with you I never want us to be apart for the rest of our lives'? Shit Grace, if he would've said that, you would've fallen on the floor laughing. Seriously, give the guy a break.\n\nEthan frowned and pulled me into a hug. \"I wish I knew what was going on in that pretty head of yours.\"\n\nI shrugged. \"Picture a dysfunctional family reunion and you'll pretty much have it pegged.\"\n\nEthan laughed and squeezed me. He kissed the top of my head before releasing me again. \"When do you usually write?\"\n\n\"Uh, well, I don't have a routine, exactly. Just whenever I feel like it. If I try to force it or create a schedule around it, I'll just end up with crap.\"\n\n\"Have I kept you from writing this weekend?\"\n\n\"No, uh-uh. But if you don't have anything planned for tonight, I might like some time at the keyboard.\"\n\n\"Can you write here?\"\n\n\"Yeah. I have a laptop.\"\n\n\"Do you need anything else?\"\n\n\"Nope.\"\n\n\"Can I watch T.V.?\"\n\n\"Yeah. I usually listen to my iPod with earbuds in, so it makes no difference to me.\"\n\n\"Hmm.\"\n\n\"What?\"\n\n\"Nothing. Just that...that was easy. I thought I was going to have to choose between having you with me and you getting some writing done. I didn't want to be responsible for keeping your fans waiting.\"\n\n\"So, you would've chosen to keep me with you?\"\n\nEthan squinted as if he were weighing the decision in his mind. \"Yeah, I would have. Today, anyway. I'm a selfish bastard that way.\"\n\n\"It's just as well, because there is no way I could sit alone at my house and write knowing you were here alone. I'd just sit and pine for you.\"\n\nEthan grinned. \"You would?\"\n\nI could feel my cheeks heating up slightly. I wondered if I confessed too much too soon. I nodded and swallowed.\n\n\"Me, too.\"\n\nThose two words brought me more comfort than a pint of Rocky Road ice cream.\n\n***\n\nEthan followed me to my house. I parked in the garage while he left his car in the driveway. He met me in the garage and was noticeably quiet as I gathered my purse and other assorted items from my car. I finally realized why. He was staring at the car occupying the other space in the garage.\n\n\"It was Robert's. I haven't gotten around to selling it.\"\n\nEthan's head nodded slightly but his concerned expression didn't change. There was nothing I could do about it in that moment. My mind began spewing silent rationalizations as if I were preparing my arguments for him. But he never asked me for them. He didn't say another word about it.\n\nI'm not sure if it was Robert's car or something else entirely, but the mood between us changed. The best word to describe it was pensive. Ethan followed me into the bedroom and watched while I hurriedly gathered clothes for the following day.\n\n\"What should I wear to the meeting?\"\n\nEthan's eyes scanned my bedroom as he answered my question. \"Street clothes. We've got a back room reserved at a restaurant.\"\n\nMy own gaze followed Ethan's in an effort to figure out what was going through his mind. He was acting so strange. Finally, I just had to ask. \"What's wrong, Ethan?\"\n\nHe gave me a weak, reassuring smile and shook his head. \"Nothing to worry about, baby.\"\n\n\"You've been acting strange since we got here.\"\n\n\"I didn't expect there to be so much of your late husband still here.\"\n\nI frowned and glanced around the room. He was right. I hadn't changed a thing. His shoes were still peeking out from under the bed, his old ball cap hanging from the edge of the headboard, our wedding picture on the dresser. They were things I didn't see any longer. Just part of the backdrop that'd been there so long I ignored it.\n\nWhy didn't I remove those things right away?\n\nI knew the answer had something to do with the fact that I slipped so far into depression at first, I couldn't do it. But there was so excuse for why they were still there.\n\nI realized right away that it must look like I wasn't ready to move on. But that wasn't true. I was ready. I could thank Ethan for that.\n\n\"I guess those things have been there so long I don't see them anymore.\"\n\n\"You see them every day. You may not consciously want to think about them, but your subconscious is aware of them.\"\n\n\"I'm sure you're right. I honestly didn't realize they were there until you pointed them out. But now that you have, I'll get rid of it all. I need to put that whole thing behind me.\"\n\n\"It's not a thing. He was your husband. These are his personal belongings. Regardless of what you discovered after his death, you spent a significant part of your life with him. Good times.\"\n\nMy eyes started to tear up. \"Not so much, as I recall. I pretended to be happy a lot. You know I never once walked through this house without clothes on? Never felt comfortable enough in my own home.\"\n\n\"You were walking around my house naked early this morning.\"\n\n\"I know. I liked it.\"\n\n\"Why?\"\n\nI silently considered his question for a few moments. \"It was very liberating.\"\n\n\"Take off your clothes.\"\n\n\"Now?\"\n\n\"Yes.\"\n\nEvery nerve ending in my body woke up and began to hum. His matter-of-fact delivery. As if it were perfectly natural for him to ask this of me. It was totally presumptuous. And completely disturbing how much it aroused me.\n\nI lifted my chin and took a deep breath. I started to pivot away from Ethan to undress, but he stopped me.\n\n\"Don't turn away. Keep your eyes on me.\"\n\nI nodded and pivoted toward him. His tee shirt that I was wearing came off in one movement, leaving me completely nude from the waist up. Ethan's gaze strayed from my eyes to my chest briefly. I unfastened and unzipped my shorts and then hooked my thumbs in the waistband to shimmy them over my hips. I let them drop to the floor and then stepped out of my shoes and clothes in one movement.\n\nIn a matter of seconds I'd gone from completely dressed to completely nude.\n\nEthan maintained his position, locking me into a stare. It was oddly comforting. My mind vaguely registered that I had nothing on, but I didn't seem to care.\n\n\"I'm thirsty, Grace. Can you fetch me a glass of ice water?\"\n\nI walked through the bedroom doorway. Ethan moved behind me and then stopped. I knew he was watching me. I pictured what I looked like from where he stood and remembered how many times he'd complimented my ass. I wondered if it was as torturous for him to watch me walk around naked as it would be for me to watch him do it.\n\nTurning back toward him with the glass of ice water in my hands, I immediately noticed the bulge in his shorts. His green eyes were dark with lust. He was no longer looking me in the eye. Instead, his gaze swept up and down my body as he licked his lips. He looked positively ravenous for me. I'd never felt so desired in all my life.",
        "My trembling hand offered him the glass of ice water. He accepted it and took a few casual drinks as he continued to rake over me with those deadly green eyes of his.\n\n\"Are you uncomfortable right now?\"\n\nI swallowed and nodded. \"In a different way.\"\n\n\"Tell me, Grace.\"\n\n\"The way you're looking at me right now makes me...\" horny. There was more to it than that, but how was I going to explain that I'd never felt as wanted as he made me feel? I'd never felt beautiful before. \"...It makes me feel good about myself.\"\n\nEthan's expression softened. He reached up with his free hand and cupped my face, stroking my cheek with his thumb. In a voice barely louder than a whisper, he spoke. \"Thank you for being honest.\"\n\nI nodded.\n\n\"I want you to go lay down on your bed, face up. Spread your legs as wide as you can get them and interlock your fingers behind your neck.\"\n\nHis command had been delivered with an eerily even tone. The calmness of it was more menacing than if he'd shouted it to me. Gooseflesh flooded my entire body at once and I felt the muscles between my thighs start to contract. I knew it would be only a matter of seconds before the wetness would seep through my folds.\n\nI nodded and bit my lip, and then attempted to summon the muscles in my legs to obey his commands. I had to focus very hard to walk the four or five steps on the rattling bamboo sticks that were once my legs.\n\nOnce in place, relief washed over me. I was safely in position and ready to accept what he doled out. The fact that everything he'd done to me, even delivering pain, had always led to my pleasure, made me trust him. I was beginning to understand that he meant me no harm.\n\nIt seems like a simple thing. It was something I took for granted with Robert. I trusted that he would never consciously do anything to harm me. But he did. And not just once. Many times. He violated my trust in him. And he was so underhanded about it.\n\nI didn't know if I could ever trust any man fully again. And I couldn't say for certain that Ethan would never hurt me. But the ways in which he talked about hurting me were so much more tolerable than Robert's way. At least Ethan was honest about it. And that was something Robert never was.\n\nEthan studied my face for a moment and I knew that he was wondering what I was thinking. I need to remember to tell him. Some other time. Not now. I didn't want to ruin the buzz of arousal that had swept over me. It wasn't the time to take a timeout and talk. I smiled and widened my stance to clear my mind and wipe that perplexed look off his face. It worked.\n\nEthan's gaze moved down my body. His fingertips lightly grazed my inner thigh, just above my knee as he drank in the sight of me.\n\n\"You're fucking gorgeous, Grace.\"\n\nI fought the urge to turn my face away from him. I knew he wouldn't like it. He wanted me to accept what he was saying.\n\n\"When I see you like this, pushing yourself to please me, it fucking drives me wild.\"\n\nI gasped and my elbows waved as my hands struggled to stay in place. I wanted to pull him down on top of me so badly.\n\n\"Keep your hands in place. I know you want to touch me, but that's not what I want right now. I'm going to lick your pussy, Grace. I've been craving it since I woke up this morning.\"\n\nHis fingers moved up my inner thigh and began gently stroking my outer labia. There was no attempt to penetrate me or seek out my clitoris. He was merely petting that area as if it were a cherished pet.\n\nThere was no pressure. He didn't tell me that he expected me to come, or even that I had to enjoy it. He made no indication of removing his pants to release his straining erection. This wasn't to prepare me for intercourse. It was merely something he wanted to do. Something he 'craved', by his own admission. And somehow that made me accept it.\n\nI don't know if it was knowing that he wasn't doing it for me, but rather for himself. Or because he liked it so much. Or maybe his little lesson the day before really had helped and I was no longer worried about how I tasted. Whatever the reason, I didn't have an ounce of hesitancy or doubt over it. I simply relaxed and waited.\n\nEthan crawled onto the bed and hovered over me on all fours. He kissed my cheek and then my mouth. He pulled away and swiped his tongue along my lips and into my mouth in a teasing manner. I tried to meet his lips with mine, but he'd pull away every time my head lifted from the pillow. I finally just relaxed my head and let him play, only extending my tongue when he gave me ample opportunity and was taunting me to do so.\n\nI suppose it was his way of training me. It was really pathetic how well it worked, even after realizing that I was being manipulated. And utterly ridiculous how much it was turning me on. There was something about that kinky, controlling little bastard that I was finding hard to resist. He was just so playful at times.\n\nHe finally moved to my neck, sucking and biting me there until I was squirming beneath him, then down to my breasts. He spent quite some time drawing my nipples into peaks and then torturing them with the flick of his hardened tongue.\n\n\"How would you feel about having your nipples pierced?\"\n\nI gasped. \"I don't...know.\" It had crossed my mind when I was in my early twenties, but I hadn't revisited the idea since.\n\n\"I love them, and hoops would look fantastic on you.\"\n\nEthan's eyes locked on mine as his tongue trailed down my stomach to my navel. And then lower.\n\nThe first touch of his tongue to my slit was soft and gentle. Like his fingers, he gently caressed the outer area first with a laziness that suggested he intended to do it all day. First one side, then the other. Laving every inch with a flattened and soft tongue.\n\n\"You're very aroused. So damned enticing. And you taste so perfect. I could live on this.\"\n\nA heated gush of wetness flowed through my folds. His gruff voice acted like some sort of aphrodisiac for me. He noticed the wetness and smiled before lapping it up.\n\nGradually he increased the pressure until his tongue was slithering between my labia and exploring deeper. He urged me to open wider for him, lifting and bending my knees until I was obscenely displayed before him like a Sunday buffet.\n\nHis eyes would roll back in his head as his tongue delved farther into my depths. He held nothing back, making the most lascivious noises; slurping and sucking, groaning and growling. I understood for the first time why they called it 'eating pussy'. The way Ethan went about it, it was more like eating. Or devouring. He used his entire mouth on me, sinking his face so that he seemed to half disappear inside me.\n\nIt was utterly heavenly. From the lewd sounds, to the sight of his head rolling back and forth, to the unmistakable musky scent from my arousal. All of it. He was making me start to love it as much as he did.\n\nHis efforts moved up to the highest point of my slit where he circled the hooded area that protected my most sensitive spot. The tip of his tongue felt so hard and small as it snaked all around the area, brushing over my clit occasionally as if the contact was purely accidental. Then his lips clamped around my entire clitoral hood, sucking that sensitive nub inside and locking me in place.\n\nI tensed as he seemed to hit just a perfect rhythm for me. All of my mental focus was on that sensation. He must've read my signals because he stayed in that spot, stroking and sucking with a relentless rhythm. And then he gradually increased the pressure. My pelvis began rocking against his face. I could feel the climax building. I wanted it so desperately now.\n\nThe start of it was so subtle at first. My hips stilled and all my muscles tensed. An exquisite tingling sensation that started from, I don't know where, was now approaching Ethan's mouth. Any reasoning I may have still possessed left me in those moments. I cared about nothing except the raw carnal need to finish.\n\nMy body twitched when the first of that lovely sensation reached the tip of my clit. Ethan gripped me tighter and a moment later a flood of intense stimulation burst through that tiny bundle of nerves. The gratification for me was instantaneous and consuming.\n\nEthan stilled his mouth but kept it in place for a few more moments. Then he shifted and I could only feel the slight movement of his tongue lapping the less sensitive area and then sliding inside me in these long, lovely strokes that felt amazing.\n\nHe replaced his tongue with his fingers and very slowly fucked me with them. It seemed to draw my climax out even more. I could feel subtle contractions deep inside, hardly perceptible, like butterflies. I felt certain that if he fucked me just then, I'd come again.\n\nThe butterflies stilled their wings after a few moments, though. Ethan let his fingers slide slowly out of me. I peered down at him and watched as he sucked his own fingers of my juices before crawling up my body to take my mouth.\n\nThe tangy flavor penetrated my tongue. My own musky scent assaulted my senses. It was the most delicious lewd cocktail, and him sharing it with me like that felt like the most intimate thing we'd done.\n\nHe pulled away from our kiss and settled on top of me, his jean-clad hips nestled between my open thighs. His cock felt huge.\n\n\"Thank you.\"\n\nMy eyes opened wide. \"I think I should be the one thanking you.\"\n\nEthan shook his head. \"I did that for me.\"\n\nI wasn't sure how to process what he was saying. I'd always thought that gratification and ejaculation were one in the same for men. Ethan hadn't come. In fact, he was evidently still very aroused. How could he be thanking me?\n\n\"I'm hungry. We still have that frozen lasagna in my freezer. Are you just about finished packing?\"\n\nI nodded and frowned. \"What about you? Don't you...?\" I shrugged hoping he knew that I was referring to his hard-on and our obvious unfinished business.\n\n\"I'm fine. I don't need to come every time I get hard in order to be satisfied. Hell, around you that would be the end of me since I'm hard almost every second I'm with you. Anyway, the sooner you understand that I can resist that temptation, the better.\"\n\nEthan pushed himself up and off the bed. He leaned over and gripped my wrists to release my clasped hands.\n\n\"You were perfect, by the way. You held position like a champ.\"\n\nHe pulled me onto my feet and into his arms for a deep kiss. His hand trailed down my back to cup my buttocks and pull my pelvis into his. I lifted my leg and wrapped it around the back of his thigh as I ground my hips into him.\n\nEthan smiled and broke our kiss. \"I think I'm creating a slut. My perfect slut that is going to get her ass reddened if she doesn't get moving. I'm hungry.\"\n\nHe slapped my ass and pinched it hard enough to make me yelp as my leg dropped to the floor. A silly grin crept across my lips as I turned to get my things and get dressed. It didn't even faze me that he called me a slut.\n\nCHAPTER NINE\n\nThe Meeting\n\nSitting at my desk on Monday morning I realized that my outlook on just about everything had changed. I never would have guessed that getting laid would improve my attitude at work. What was even worse was that every one of my peers seemed to notice the change.\n\nBy lunchtime, my friend Robin, who no doubt went to the Gestapo school of interrogation, had managed to get more details out of me than I was comfortable with. She knew his name and generally where he lived, and somehow wangled out of me that I'd spent the weekend with him. She had the audacity to act as if she'd won the lottery after that.\n\nFortunately, I had enough sense to leave out the details. But not enough sense not to mention that he was picking me up for lunch. The lineup of faces along the windows was embarrassing. Made worse by Ethan's bold reaction.\n\nAfter waving and smiling to the crowd he pulled me into him for one of those deadly kisses of his just before he handed me into the car and shut my door. I couldn't even look up at the windows as we drove off. Ethan thought it was hilarious.\n\nThe general consensus of the office gaggle was that he was a keeper. Any man who could carry themselves like that had enough confidence for ten men. Then there were all the usual comments about his looks. I thought I found him attractive because of his personality. Apparently, his attractiveness is evident through plate glass as well. His tight ass got quite a few comments. I was surprised, however, that no one mentioned the tattoos that were visible on his arms. I thought they would immediately point out how mismatched we looked.\n\nI did feel somewhat giddy after having told someone about him. It made him real. The fact that they all thought he was the hunk of the year didn't hurt, either. That afternoon I allowed my mind to ponder a topic I scarcely let myself imagine up until that point. A future with Ethan.\n\n***\n\nWe had hardly gotten through discussing what had happened during the day when Ethan pulled up to the restaurant for the meeting. We'd been talking non-stop. I would have been perfectly content to sit in the car and continue talking. That wasn't going to happen.\n\nEthan opened the door for me and right away I saw some familiar faces. John was the first to greet us, shaking Ethan's hand and welcoming me to their meeting. A few others waved in our direction as we made our way to a pair of open seats. It just so happened that we were sitting next to the couple I'd noticed after my second reading. Ethan gave me a grin as he introduced me to them.\n\nTheir names were Roger and Dhani. They lived together. Roger worked for a local gas company while Dhani juggled an assortment of jobs from the house. At the moment, her most exciting prospect involved buying and selling knockoff designer handbags on eBay. She wore a collar, which clearly indicated some type of agreement, but I didn't ask.\n\nEthan moved his hand around the nape of my neck and rested it there. It was obviously possessive, and I loved it. I'd worried that he would ignore me after we got there, but all of that was instantly washed away. He was attentive and happy. I almost allowed myself to believe that he was proud to be seen with me.\n\nWhile one of the members was reporting on an event they'd held the month before, Ethan leaned in and whispered in my ear.\n\n\"I think I'm the most envied person in the room right now.\"\n\nMy cheeks grew hot. I rolled my eyes and shook my head at him.\n\n\"You think there's anything hotter than a brilliant woman with a rockin' body who can write erotica?\"\n\nI tried to shrug off his comments. I pretended to be interested in what was being announced. The truth of the matter was, I hadn't heard a word they'd said. Even if Ethan hadn't been whispering his ridiculous compliments in my ear, my mind was still buzzing from the whole event. I couldn't get over the fact that I was seated at a munch with this guy I was seeing who rocked my world. And he was a Dom. And he obviously wanted the entire community to know I was his. His. My feet might never touch the ground again.\n\nThat is, until the next thing he whispered.\n\n\"See that guy with the leather Harley vest and the blonde girl sitting next to him?\"\n\nI nodded.\n\n\"That's Holly.\"\n\nA chill ran right up my spine and prickled my scalp. I'd noticed her when she walked in. I'm sure everyone did; She was almost impossible to ignore.\n\nHer platinum blonde hair was the first thing you noticed. Long, straight, with a full set of blunt-cut bangs that almost reached her eyelids. She had these huge brown eyes that she made look even bigger with thick black eyeliner and purple eye shadow.\n\nHer clothing choice was bold, with shorts that left a portion of her butt cheeks showing on both sides, and a leather vest with nothing on beneath it. She'd carried a helmet into the room with her, suggesting that she had come there with the man sitting next to her. Other than the thick leather collar she wore, there was no evidence they were together. He hardly looked in her direction, much less spoke to her. And when she did say something to him, he seemed to wince.\n\nI tried to picture her with Ethan and my stomach lurched. I couldn't wrap my mind around how someone could be with her for a year and then want me. We couldn't be any more opposite if we worked at it. I was nothing like her. And that's where my mind started to short circuit.\n\nHe stayed with her for a year. A YEAR. He had to have some kind of feelings for her to be with her for that long. But if that's what he likes ... I can never be like that. Never.\n\nI felt the grip on my neck tighten and I glanced at Ethan. He looked concerned. I knew that I'd once again broadcasted my emotions on my face. I took a cleansing breath and relaxed my shoulders and I felt the grip ease up a bit. Then I willed myself to not look in her direction again for the remainder of the meeting.\n\nEthan and I shared an appetizer platter but I only picked, having lost my appetite to the only thing that could have possibly ruined my perfect day.\n\nWe settled into the car in the parking lot and right in front of us Holly and her boyfriend/Dom/old-enough-to-be-her-Daddy-lover were getting ready to climb onto his Harley. Rather than make a quick departure, Ethan held the keys and looked over at me.\n\n\"What are you thinking?\"\n\nI shrugged. \"I don't know. Lots of things I guess. It's hard to picture you with her.\"\n\nEthan snorted, \"That's because she didn't look, act, or dress anything like that when she was with me. She looks like a cheap hooker.\"\n\nI busted out in laughter and then stifled it quickly. It seemed disrespectful to even think bad things about his ex, even if he said them first.\n\n\"Listen Grace, that whole thing is ancient history. And the only regret I have is that you have to see her from time to time. That's all.\"\n\nI nodded as I watched her swing her leg over the seat of the bike and wiggle her little butt into position. \"She's just so different than I am.\"\n\n\"Thank God for that.\"\n\nI shot him a look to see if he was being sarcastic. Ethan leaned over the center console and pulled my face to his for a kiss. I heard the signature glub-glub from the tail pipes as the Harley pulled out of the parking lot. Ethan kept my lips occupied until the sound was barely audible. When he sat back in his seat, John was standing at his window.\n\nEthan smiled as he shoved the keys in the ignition and lowered the window.\n\n\"Hey, sorry to interrupt.\" John paused to snicker before continuing. \"I'm having some people over to my uncle's place to practice tomorrow night. Seven. You're both welcome to come.\" John leaned down to make sure I understood that I was invited. I had no clue what sort of practice he was referring to but I nodded to at least confirm that I understood.\n\n\"Thanks, John. I'll let you know.\"\n\n\"Alright. Good seeing you again, Kimber. Drive safe.\"\n\n\"I will. See ya, John.\"\n\nI waved as Ethan pulled out of our parking space. \"What kind of practice was he talking about?\"\n\n\"Whip practice.\"\n\n\"Yikes. No, thanks.\"\n\nEthan chuckled. \"We don't practice on human targets. We go to his uncle's place up near Denton. He owns like 50 acres up there. Plenty of room and no neighbors to complain about the noise. You want to go?\"\n\nI scrunched my nose and shook my head, \"Not particularly.\"\n\n\"Would it bother you if I went without you?\"\n\n\"No. Is there some reason why it should?\"\n\n\"Not at all. It's usually just a couple of us guys refining our skills with a single tail. What are you going to do?\"\n\n\"Laundry. Vacuuming. All the things I didn't do this weekend because I was with you.\"\n\n\"I see. Regrets?\"\n\nI shrugged my shoulders and rolled my eyes in a teasing manner.\n\n\"I can drop you off at home now if you want to get started on those chores.\"\n\nI frowned and made a pouty face. It wasn't fair how he turned it all around on me so fast.",
        "\"It's no problem, I understand if you'd rather do chores than be with me.\"\n\nHe was clearly playing dirty. \"Ethan ...\"\n\n\"What?\"\n\n\"I don't want to go home.\"\n\n\"What do you want, Grace?\"\n\nMy stubborn streak was taking over. I didn't want to give in, even if we were just playing. It felt like he was rubbing it in my face that he had this power over me. \"Why do I have to say it?\"\n\n\"Because I want to hear it.\"\n\n\"Hear what? That I want to go back to your place and stay with you? I do. Okay? Feel better now?\"\n\nEthan laughed out loud for a few very long moments. \"Such a temper. You really don't want to admit that you like me, do you?\"\n\n\"You make it hard when you act like you are right now. You remind me of my father.\"\n\n\"That must really get under your skin.\"\n\n\"It does.\"\n\n\"I know just the thing to wipe that comparison off your mind.\"\n\nEthan pulled into a parking lot and I looked around to see where we were. I vaguely recognized the building. It was several blocks from my house, a small auto repair shop that was closed for the day. He drove around the side of the building and put the vehicle in park.\n\nI watched with a perplexed look on my face as he unfastened his seat belt and then mine. Then he fisted my hair in his palm and pulled my face to his in a hard kiss. He released my hair and settled into his seat, leaving me breathless, and then proceeded to unbutton and unzip his jeans.\n\nMy eyes darted about the parking lot. There was no one in sight. At the moment.\n\nHe pulled out his cock and it was already rock hard. I glanced at it and then up at him with curious eyes.\n\nEthan nodded as if to answer my silent question. He expected me to go down on him. He wasn't asking.\n\nHe was absolutely right. All comparisons to my father went flying out the window. Apparently, so did my stubbornness because I didn't hesitate to obey. I shifted my knees up onto my seat and draped my torso over the console until my face was in his lap and my mouth was closing around his girth.\n\nEthan hissed and then groaned. His fingers wove into my hair and he caressed the back of my head and neck with surprising gentleness as I worked him in my mouth. That simple gesture, his gentle touch, was all the encouragement I needed to give it everything I had.\n\nI licked and sucked and then bobbed my head in a mind-numbing rhythm to get him off. It didn't take as long as I feared. I was still so sure that I was going to fail him in this one thing.\n\n\"I'm coming, baby.\"\n\nEthan gripped the headrest when his muscles tensed to unload. His announcement had prepared me and so I gripped him with one hand as I clamped my lips around the head of his cock to force him to spew into my mouth.\n\nI pulled away to swallow and then swiped my tongue over the tip of his cock for good measure. I felt triumphant. Like I'd just won the war between men and women all over the world. I know, what a silly thought.\n\nEthan released the headrest and cupped my face to lift it to his. He kissed me very gently between pants and then pressed his forehead to mine.\n\n\"Truce.\"\n\nI simply nodded.\n\nWe drove to his house in silence.\n\n***\n\nI was still floating in a post-coital haze by the time I arrived at work the following morning. Ethan had driven me to my house to pick up my car after spending the night at his place. We'd had sex before bed, and then again in the morning. It was something I decided I could definitely get used to doing on a regular basis.\n\nRobin appeared in the doorway to my cube looking too chipper. \"Hey, Grace. How's it going?\"\n\n\"Good. You?\"\n\n\"Good. Did you see Ethan again last night?\"\n\nI nodded and smiled.\n\n\"What did you guys do?\"\n\nI shrugged. \"Nothing much. We went out to eat and then back to his place.\"\n\n\"Did you spend the night?\"\n\nI bit my lip. I really was uncomfortable with her line of questioning. \"Yeah.\"\n\n\"Good for you. It's about time you let your hair down a little.\"\n\n\"What do you mean?\"\n\nRobin shrugged. \"Nothing.\"\n\n\"No, seriously. Do you think I'm uptight?\"\n\n\"No, Grace. I don't think that. But you have to admit this guy is a different breed for you.\"\n\n\"You think so?\"\n\n\"Yeah. He looks like it, anyway. What do you think? Do you like him?\"\n\nI looked down at my desktop and then back up at Robin, \"Yeah, I do.\"\n\n\"That's good. Just be careful, okay? Guys who look like that are usually players. Yanno?\"\n\nI nodded. I realized that Robin was passing judgment based on Ethan's looks alone, but that didn't stop the general feeling of dread that started to take root. If she was doubting him without ever even talking to him, maybe I needed to at least exercise some caution.\n\nHe phoned me during work and then that evening when he got back from practice. We talked for a solid hour and I was feeling good about us again but when he invited me over, I'd already rehearsed my answer a thousand times. I needed to know I possessed the strength to resist him. If for no other reason than to prove to myself that life goes on without Ethan.\n\nJust in case.\n\nCHAPTER TEN\n\nSettling the Past\n\nI regretted my decision to stay at my own place. I not only missed him like crazy, but I slept like shit, too. After just a few nights, I'd already grown accustomed to sleeping with him.\n\nThe good thing was, I finally got around to clearing out most of Robert's crap. The bedroom and closet were clean, anyway. My wedding picture, along with the album that was still sitting on the coffee table, were tucked away in a box and shoved unceremoniously in the attic.\n\nThe relief was almost immediate. There were no more reminders of the fairy tale marriage. The lies. The cheating. The fake smiles in every photograph of the two of us. I lived in denial and believed that it would make us whole if everyone else believed our marriage was perfect.\n\nI was hung up on image. How things appeared to everyone else. I smiled as I recalled not being able to locate a single mirror in Ethan's house. He was clearly not driven by the same thing that I was. And I loved him for it.\n\nI felt a dull ache settling in my bones. My body was starting to physically complain about his absence. I need to see him.\n\nEthan had given me a key to his house when he dropped me off Tuesday morning. I'd forgotten all about it since he hadn't made a big deal of it. But as I sat at my desk Wednesday afternoon, missing him more than I should, I wondered if I was underestimating his intent. If I wasn't supposed to be anticipating his needs; doing more. Maybe he gave me this key to give me a little nudge to step up and do special things for him. Guys don't give you keys unless they want you to use them. Right? Right.\n\nWe'd made plans to meet at his place at seven. He hadn't mentioned dinner and circumstances thus far hadn't allowed me the chance to cook for him. Yet. All guys like to eat. And they love when a woman cooks for them. I glanced at the time on my monitor. If I hurried, I might beat him to his house and surprise him.\n\nI quickly shutdown and packed my things to dash out the door before anyone could stop me. I still had to run by the store, but could make it to Ethan's by five if I pushed it.\n\nAt 5:15 I pulled up to his house. The presence of his car made me a touch disappointed. I'd wanted to surprise him.\n\nI knocked on the door and waited. It felt like an eternity before the door swung open. And then all time stood still.\n\nIt was Holly.\n\nAt first I blinked hard not wanting to believe my eyes. But her annoying voice snapped me out of it.\n\n\"What are you doing here? Your not supposed to be here until seven.\"\n\nShe left the door open and turned on her heel toward the kitchen. She was wearing a mini skirt that hardly covered her ass and a blouse that was unbuttoned to her navel and flapping open. For some odd reason, a sick curiosity no doubt, I followed her into the house. She was cooking something in the kitchen.\n\n\"He's in the shower right now. He wasn't expecting you this early but we can always make it a three-way. Yanno?\"\n\nI shook my head, still too stunned to speak.\n\n\"You shouldn't leave him alone. He's afraid of being alone. Has he given you the little speech, 'I like you and I want to spend time with you. It's really simple, babe. We can't build on this good thing we have if we're apart.' That one got me. We'd only been dating two days when I moved in with him.\"\n\nIt felt like a thousand stinging bees were swarming me at once. He'd used almost those exact words with me. I thought they sounded rehearsed at the time. That's because they were. The thought that he'd said those very words to her made me want to vomit.\n\nHolly looked up from the stove and parked her hand on her hip as she studied me. \"I guess you probably thought you were special, huh. I know Ethan better than anyone and I know he could never be happy with someone as vanilla as you. What was the phrase he used to describe it last night ... Oh, yeah, sugar kink.\"\n\nI wasn't sure if I was more appalled by the label or the fact that she'd obviously been with him the night before. Just as I was about to ask her about it, her blouse gaped open allowing me a full view of her breast. The silver ring through her nipple flashed a glint of light in my direction. I could clearly picture Ethan's face as he peered up at me just a few nights earlier to ask if I'd considered getting mine pierced.\n\nI had to get out of there. I didn't belong in this world.\n\nI hooked the plastic bag from the grocery store onto my wrist and fished his key from the outer pocket of my purse. I tossed it on the counter and turned on my heel without a word.\n\nThankfully, the tears didn't come until my back was turned. And the sobbing didn't start until I was out of the driveway.\n\nI barely made it to the next street to pull over and let it out."
    ],
    "authorname": "D_Lynn",
    "tags": [
        "pounding",
        "blow job",
        "ex-girlfriend",
        "eating pussy"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/amazing-grace-ch-08-10"
}