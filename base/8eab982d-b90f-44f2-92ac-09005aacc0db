{
    "title": "Breast Milk Battles",
    "pages": [
        "Jamie was angry. Damned angry! Her husband just slept through everything. The baby had woken up five times already and it was only three in the morning. She was certain to wake up at least once or twice more. And each time that the stupid monitor told Jamie that their daughter was awake, she would nudge her husband. He could at least go down the hall and get the baby from the nursery. Was that too much to ask? \n\nShe had endured five months of near constant nausea, three months of back pain and indigestion, forty-eight hours of labor and major surgery. Not to mention the raging hormones that resulted in dozens of tears fests, the cravings, the swollen feet, and the hornies those last couple of months. For the baby they both supposedly wanted.\n\nAnd he slept through it all. He had even managed to sleep through most of her labor. Now even though she could barely walk from where the caesarian stitches pulled and itched, he could not be bothered to get up and walk down the hall, pick the baby up and bring her to be fed. Now Jamie's boobs felt like they would burst. The baby was balling so loudly that she was certain one of the neighbors would call the cops. And he still slept.\n\nShe shoved him one more time. This time she put all her strength into it. Even though the stitches pulled painfully, she kept pushing. Until he rolled out of bed. He jumped up, looked around and exclaimed, \"What?\"\n\nJamie had had it. She threw his pillow at him. \"Can't you hear that?\"\n\nHe listened for a moment and said, \"The baby is crying again. So what? It is all she does.\"\n\n\"Go and get her, asshole,\" she raged at the man that was fast extinguishing every positive feeling she had for him. \"She needs to be fed.\"\n\n\"And you woke me up for this? Why couldn't you do it? You are the one she wants. The one with the tits. The one who insisted on breastfeeding,\" he said as he turned and sulked down the hall. \n\n\"I already have. Half a dozen times, Daddy,\" Jamie emphasized the final word.\n\nA moment later he reappeared in the doorway. The way that he cooed and gently held their little girl caused Jamie's heart to stutter in her chest and for a moment she remembered the man that she loved. \n\nThen he opened his mouth, \"Here is Mommy. She was too lazy to come get you herself, sweetheart.\"\n\nJamie was right in the middle of unsnapping the complex mechanism that was a nursing bra. Her overly full breast popped out and a bit of milk shot out of the nipple in a stream. She realized too late that her breasts were too full for her small baby to latch onto properly. She was about to reach for the manual pump on the night stand next to the bed when another burst of milk gave her an idea. A wicked, vengeful and still slightly funny idea.\n\nSmiling sweetly at her husband of five years, she reached down and gently squeezed her breast. A stream of milk shot across the bed and hit him squarely in the face. The shocked looked on his face was priceless. \n\n\"What the fuck?\" he cursed as he wiped it away. His brow curved inward curiously as a bit of it leaked into the corner of his mouth. He froze holding their daughter in one arm as he brought the wet hand up to his mouth and licked his finger tentatively. \"Well, I'll be damned. Shit that stuff don't taste half bad.\"\n\nHe passed their little girl to Jamie and nestled on to pillows next to them. Surprisingly, Jamie felt self-conscious. This was the first time he had actually watched. She blushed as she tried to adjust her bawling baby into the proper position to latch on to the still slightly engorged nipple. It took them a moment to get it right but then her baby settled into a good rhythm. \n\n\"Wow,\" he said.\n\nJamie looked up at him quizzically, \"Wow what? Breastfeeding is the most natural way. It is best for the baby and for me...\" she started to launch into the full lecture that she had memorized from the support group meetings. Then she saw the look of wonder and amazement on his face as he gently caressed their little girl's cheek and occasionally her breast.\n\n\"Amazing. She actually gets everything she needs from your boobs,\" the way he said it might have been lacking but Jamie gave the man credit for his obvious fascination. And for the first time in weeks, her heart began to warm just a bit to the man that had been the center of her world for years. \n\nShe shrugged as the sucking began to slow, \"Damn,\" she cursed as she began to unwrap her daughter.\n\n\"What are you doing?\" he asked in shock. \"She's falling back to sleep now. Isn't that what you want?\"\n\nJamie shook her head, \"Normally yes, but right now my breasts are getting engorged and that makes me uncomfortable. It can also lead to a blocked duct and mastitis. So I need her to wake up and eat some more. Otherwise I am going to have some serious pumping to do,\" she explained.\n\n\"Mastitis?\" his face contorted again.\n\n\"A blocked duct can lead to a nasty infection. Perhaps even surgery.\"\n\nHis eyes went wide again. \"Wow, I never knew. But she seems so content now. Do you really have to wake her up?\"\n\nJamie looked down at the sleeping baby. She had to agree with his assessment of the situation. She tucked the blanket back around the baby and kissed her forehead. \"Would you mind putting her back in the crib for me please? While I pump then.\"\n\nHer husband smiled at her. That cute boyish grin that she had fallen in love with on their first date. \"Of course, it would be my pleasure.\" He took the tiny bundle and in a moment disappeared back down the hallway.\n\nJamie frowned. Maybe everything these past few weeks was not all his fault. She had been so excited about her pregnancy and the new baby that she supposed she had pushed him aside. She thought about how they used to come home to discuss their days at work over dinner. How she had always been there to listen to any problems at the office, to offer advice and support. \n\nThen everything had changed; the only topic of conversation had become the baby: doctor's appointment, email updates on fetal development, which child birth class to choose, nursery decorations. The list was endless. Maybe, just maybe, her husband had felt replaced, left out, ignored?\n\nShe was pondering that very issue when he came back into the room. She was going to ask him about it. Until she noticed the tent in the front of his pajama bottoms. \n\nHe shrugged as he followed her eyes, \"It was hot watching you feed her. To see the tits I love used to feed our baby instead of just be on display in a push up bra. Surprising, isn't it? And damn, I'd wake up every hour to eat too if my food tasted like that.\"\n\nJamie frowned, she knew from the support group meetings that breast milk did not have the vitaminy smell and taste associated with the artificial formulas. But she had never actually thought about how it did taste. Now he had her curious. \"Really? What does it taste like?\"\n\nHe frowned thoughtfully for a moment, \"Like watered down sweetened condensed milk. Yeah, it was really sweet.\"\n\nShe laughed, \"So next time I get angry with you and want to get your attention. I should shoot you with my milk then. Like a breast milk water gun fight?\"\n\nHe laughed then too, \"Won't be a fair fight though. Since I don't have any milk to spray you with.\" Then his eyes got big and his cheeks flamed red as he dropped his eyes to the duvet.\n\n\"Come on. What is it? You have me really curious now,\" she inquired.\n\n\"Just thinking how hot the whole breast milk thing is...well...\" he stammered like a little boy caught with his hand in the proverbial cookie jar. \"Well as hot as it gets me, I might end up spraying you with something else.\"\n\nHer eyes widened as his meaning dawned on her. It was almost a month before her check-up and sexual intercourse was out of the question. But it had been almost three weeks since they had, well since they had. An idea occurred to her. A naughty idea, a very naughty idea. \n\nIt was her turn to blush then, \"Would you...I mean...would you care for a bit of a battle then.\"\n\nHis eyebrows twitched in a bad Groucho Marx imitation, \"Whatever did you have in mind, dear?\"\n\nJamie was never sure where the aplomb came from to actually suggest it, but she charged right in. \"What if instead of using the breast pump, well, I squirted you like before. I could even squirt your cock.\" How long had it been since she had actually said 'cock'? but now was not the time to consider her inadequacies. It was time to do something about them. \"You could masturbate or I could do it for you.\"\n\nHe smiled as he bent and placed a quick kiss on her lips, \"I like your kinky thinking, sweetheart. But where's the battle here?\"\n\nShe winked, \"If you come before my breasts are empty I win. And if the milk runs out before you come then you win.\"\n\nHe thought for a moment, \"I don't want the baby going hungry though.\"\n\nShe shook her head, \"It doesn't work like that. Even if I can not squirt it, there is still milk in there that the baby can get to by sucking. You have no idea how strong those little things can suck by the way. Besides that is called the hind milk and is actually the richest in calories and nutrients. And anyway breast milk works on a supply and demand system. The more she sucks or I pump the more milk my body makes,\" she explained.\n\n\"So we would actually be doing her a favor?\"\n\nJamie nodded her head. \"Okay then just one more question. What do we win?\"\n\nShe thought about that one for a moment. With the new baby money was tight. So anything material was out of the question. Then the answer hit her, \"If I win then you have to get up and bring the baby to me every time she wants to feed. And if you win, you get to sleep through the night.\"\n\nHe smiled, \"Lady, you have yourself a deal.\" He was pushing the bottoms down over his erection even as he spoke. \n\nJamie smiled at the sight of her husband's hard cock. She felt her own body respond and for the first time in weeks, perhaps months she actually felt sexy. She reached up and released the clasp on both sides of her nursing bra, baring both breasts. She smiled when she heard his moan. And her self-confidence as a woman grew.\n\nShe found herself messaging and stroking her full tits in harmony with the long slow strokes he was giving his cock. She winced as the stimulation caused her letdown reflex, the familiar pins and needles pain that came just before...milk gushed from her nipples. She was not even trying and it shot a good six inches from her body. A stream actually hit his cock as he knelt next to her on the bed. \n\nHer husband moaned louder as the warm liquid coated his cock and hand providing lubrication. His stroking increased in tempo. \"That is so fucking hot,\" he groaned. \n\nJamie squeezed her right breast, working inward towards her nipple and more creamy liquid burst forth. The analogy of a water gun became a super soaker. \"Fuck,\" he said as his hand on his cock took on new urgency. \"Shit, Jamie, you're gonna make me come.\"\n\nShe smiled, \"That's the idea.\" But this little show was having strange effects on her too, her hand slipped beneath her gown and found her swollen clitoris. She rubbed it and her moans mixed with his. She leaned back further against the pillows, lost in her own pleasure. But he simply leaned forward so that his hard cock was inches from her engorged tits. \n\nAnother naughty idea occurred to her as her hand slipped out of her panties. She lifted both tits and squeezed them together around his cock. Milk still leaked continuously from the nipples providing the lubrication they needed for a...\n\n\"Titty fuck?\" her husband groaned almost painfully. \"Damn, woman, you're driving me crazy here.\" But his hips were too busy pounding away at the twin peaks as he leaned a hand against the headboard of their bed for balance and closed his eyes. Then he shook his head, \"No, I want to watch this too fucking much.\"\n\nJamie smiled as she felt his movements take on a familiar jerky tempo. She knew he was close, so fucking close. She could even see pre-cum leaking continuously from the slit. It mixed with the creamy whiteness of her milk like oil and water. She looked up into his face, smiled and held his gazed as she leaned her head forward and licked the fluids from the head of his cock. \n\n\"Yeah, baby, suck my cock. Drink my come and your own milk too,\" his other hand wrapped through her hair, holding her head in place as he pounded away in earnest now, his thick cock sliding easily up and down between the twin globes, in and out of her open mouth. \n\nThen he was coming in great long strings. Some of it mixed with the milk between her breasts, easing his way even more. A bit of it shot straight into Jamie's open mouth. She swallowed the first bit. Hmm, the taste was not half bad. Salty but he was right, the milk sweetened it. Sort of like chocolate covered pretzels...sweet and savory at the same time. The second shot she held in her mouth as he finished up. \n\nHe was gasping for air, leaning his full weight against the headboard and his eyes were closed. Jamie could not resist. She lifted her left breasts and squeezed. A long stream of milk hit him square in the eye. He chuckled and wiped it away with the back of his hand as she said, \"I win\" around a mouthful of come and milk. \n\nHe bent down and kissed her. She was a mess, covered in come and milk, all over her chest and her face. He had perhaps meant it to be a quick and loving peck but Jamie had other ideas. She wrapped her hand around the back of his neck and deepened the kiss. She opened her mouth and their tongues dueled, sharing the come/breast milk mixture. \n\nWhen they finally drew apart he was smiling. \"I have tasted worse. Your first attempt at spaghetti sauce comes to mind,\" he teased.\n\nJamie shoved at him playfully. Then his face softened and he caressed her cheek tenderly. \"Thank you sweetheart for reminding me why I love you so fucking much.\"\n\nShe pressed another kiss, this time more tender to his lips, \"I was just thinking the same thing. But I still won.\"\n\nHer husband's eyebrows once knitted knitted together in that horrid Groucho Marx imitation, \"Let's see...I get to get up and hold my beautiful little prince. I get to watch my beautiful wife nurse the baby we made together in love. And who knows what kinds of things we will get up to after the baby goes to sleep. Are you sure you are the one that won, darling?\"\n\nJamie giggled at his analysis of the situation, \"All right then, we both win.\"\n\n\"As it always should be, dear.\" They fell asleep then. In one another's arms, not even caring about the mess that covered their bodies and the sheet. They fell asleep like young lovers in the first blush of sexual exploration. \n\nTo be woken up an hour later by a screaming baby. But such is the joys of life...you take the good with the bad. The salty with the sweet just like the flavor of come and breast milk."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "breastfeeding",
        "breast milk",
        "lactation",
        "masturbation"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/breast-milk-battles"
}