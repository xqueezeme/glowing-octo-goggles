{
    "title": "Ms. Walker's Class Ch. 06",
    "pages": [
        "I had always intended to continue this story, but, well, you know how it is. I got a little sidetracked, and it took a few loyal readers to remind me that Michael, Miranda, Ashley, Sophia, Solange, Charisse, Jenelle and Hiromi, had more to tell. \n\nA few of their suggestions form parts of this one. Thanks for the input, and please don't be shy in the future. \n\n~~~~~~~~~~~~~~~~~~~\n\nThe new 'rent-a-husband' arrangement between the freshly married Michael and his small group of remaining clients was working out better than expected. \n\nAll Michael's ladies were happy, having much more time with him each week, so that more jobs besides merely sex were getting accomplished. That was actually easier on Michael physically than the previous situation. \n\nEveryone had completed their testing weeks ago, so he now rode every woman bareback, and they all seemed to love getting their pussies full of his warm cum. \n\nPolyamory with his harem of mature lovers was heavenly. If variety was the spice of life, he certainly had that covered. Japanese, French, Italian... Negro, Asian, Caucasian... Blonde, brunette, and redhead...tall and robust, to petite and delicate. The one constant among them was their breasts, with Hiromi's D-cups ranging up to Sophia's massive J's. \n\nEven though he was enjoying himself greatly, if his wife hadn't suggested this, he wouldn't have been worried. He would have been more than happy to spend his life with Miranda exclusively. She was more than enough for him. \n\nFrom her perspective, Miranda had suggested this arrangement in an effort to satisfy her young man's natural urge to roam. He was, after all, only twenty years old, and she knew exactly when his sexual history started, because she was there at the time. Still, over the last year or so, he had experienced a decade of sexual activity. Now, she was concerned with cutting him off too quickly, hence the short list of remaining women. \n\nConventional it was not, but she could live with it. \n\nThe side benefit had been that she now had a few extra friends, whose company she was enjoying as well, and she found she actually liked the idea of her hubby with these ladies. It excited her. \n\n***\n\nIt was Thursday... \n\nMichael laid beside Charisse, catching his breath. She was doing the same, but also licking her fingers, as she dipped them occasionally into the gooey slit between her legs. His thick load was slowly oozing out of her. \n\nOver thirty years his senior, she had as much energy in bed as her daughter, who was only five years older than him. Sometimes, he had a hard time remembering her age, but then again, it's just a number, isn't it? \n\nJenelle wasn't present today, so it had been just the two of them all day long. He had arrived in the morning for a wake up canoodle. A late breakfast followed, then a little yard work, before Michael accompanied her for some shopping. \n\nNot normally his favourite part of his duties, he sat while she tried on several dresses, offering his opinion when asked. \n\n\"You know,\" she smiled, \"I'm doing this for you. You're the only man in my life, and the only one I want to be with. I want to look good, so you don't feel like you've got an old lady on your arm.\"\n\nHe had heard similar things from all his ladies. It seems that they all felt that way. He liked being 'enough' for them. \n\nCharisse had made it worth his while to indulge her at the dress shop, as their next stop was a lingerie shop. Now this, he could get into. \n\nEach changing room had a curtained area, with a small alcove outside, and a seat, presumably so husbands could sit while wives tried on their new unmentionables, and show them in relative privacy. \n\nMichael took his seat. Charisse had taken a small selection of bras and panties inside, and was giving him a show of the various ensembles. Periodically, the curtain would open, and there she was, clad only in the briefest of undergarments, her delicious body on display for his eyes. Black, red, pink, white and several other colours that he lost track of, the one constant was silky, lacey and revealing. \n\nThere had to be some deeply psychological reason why men found sexy lingerie interesting, even on women they had seen naked. That certainly applied in Michael's case, as Charisse had a habit of walking around the house nude on a regular basis. She was very proud of her incredible physical condition, surgically attained or not. \n\nThat surgically enhanced perfection did limit her selection of garments, though. Lingerie manufacturers seemed to want those women who were less endowed to look better, which is fine, but what about those who didn't need the illusion? Charisse and her double D's for example. Fortunately, it appeared that they had finally realized their mistake, and now were making garments for more voluptuous figures. \n\nMichael wandered the store, at Charisse's request, browsing the racks of underwear and lingerie, looking for something that caught his eye, but had somehow escaped hers. His fingers tested the slippery, silky texture of the fabrics, something he would have felt self conscious about not long ago. \n\nThen, as a high school senior, he would never have come into a store like this, no matter how much he wanted to. He had no reason to, and his confidence with women was shaky at best. \n\nNow, he was married, and supremely comfortable with the fairer sex. He had removed more lingerie from sexy, mature women than most of his friends had viewed in catalogues. Those women had educated him on the subject of bras, panties and the like, so when the sales girl approached to help him, he didn't shy away. \n\n\"Can I help you find something?\" the petite brunette asked, eyeing him with her doe like, brown orbs. \n\n\"Sure,\" Michael smiled. \"I don't mind browsing, but a little help is always welcome, even with a fun task.\" He was flirting, something she must have been quite familiar with given her job, but she tittered back. \"My girlfriend is trying on a few things, and she asked me to get a few others to try as well.\" \n\nHe still felt a little strange using that term...'girlfriend'...given his status as a married man, and being younger than all of them, but it was the best description he could think of. He let his eyes wander across the brunette's body, finding a name tag on the emerald green sweater that clung so attractively to her perky chest. \n\n\"Certainly. Do you know her size?\"\n\n\"Yes April,\" he replied, making eye contact, \"She's a 36DD up top, and a medium down below. She likes thongs, and brazilian cut panties. I think she looks great in a demi cup, or a plunge bra. She doesn't really need the extra help of a push up, but a balconette might be nice.\"\n\n\"I'm impressed,\" April smiled. \"Most guys just stare and say 'she's bigger than you'! Okay. Well, we can eliminate this area then,\" she gestured. \"These are for girls that need the help, and she obviously doesn't.\" \n\nApril led over to a display on the side of the store that held the larger cup sizes. She was helping Michael pick out a few selections when Charisse walked up to them, wearing a satin robe that reached her knees. \n\n\"Hi honey,\" she smiled, pecking him on the lips. \"Find anything you like?\" \n\n\"Still looking,\" Michael laughed. \"What's under this?\" he grinned, peeking down the front of the robe. Charisse didn't even hesitate, turning her back to the front of the store, and untying the sash. She held it open for his approval, giving April a view as well. \n\n\"I like this one,\" Charisse said, proudly thrusting her ample chest out. \"What do you think?\" The bra that she was wearing was black, with medium coverage cups, and a plunging centreline. Lace trim adorned the edges of the cups, allowing a hint of her darker areolas to peek out through the filigree. \"It opens in front, so of you're in a hurry to get at me...\" she finished, raising an eyebrow playfully. \n\n\"Very nice,\" April smiled, reaching in to adjust one of the straps. She was immediately struck by several thoughts and questions. He said 'girlfriend', so she hadn't been expecting someone as mature as the woman now proudly displaying her body for them. That body was a sculptural masterpiece, very lean and hard, with breasts that almost made her mouth water...and she was straight! Finally, there was the question of why these two were together. Older woman...much younger man...there had to be a reason, most likely a physical one. Was he as impressive in the sack as it appeared? April's ruminations were interrupted by Michael's voice. \n\n\"Wow!\" he smiled. \"Maybe we'd better go back to the change room, just in case I can't control myself!\" he laughed, catching April's smile out of the corner of his eye. \n\n\"Down boy,\" Charisse giggled. \"Save it for when we get home.\"\n\n'When they got home' was soon after...and the new lingerie didn't stay on long. \n\n***\n\n\"Honey, I'm home,\" Michael sang, as he walked in the door. There was a delicious scent in the air, leading him to believe that he could find Miranda in the kitchen. He peeked in, then snuck in behind her. He was just about to grab her when... \n\n\"You know, if you're trying to surprise someone, you shouldn't announce your presence before hand,\" she giggled, turning to face him. \"How was work? Charisse and Janelle wear you out?\" \n\nMichael completed his sneak attack, undeterred by her knowledge of his intent. He palmed her left breast, finding nothing but delectable flesh under her tight t-shirt. He fondled her softly, then withdrew his hand, leaving a stiff nipple tenting the thin fabric. She sighed, and kissed him, probing his mouth with her tongue. It took a couple of minutes for them to separate. \n\n\"Whoa, that's some 'welcome home',\" Michael breathed, rubbing her back. \"I think you asked me a question?\" \n\n\"Mmmmm hmmm,\" she smiled, and recapped the query. \n\n\"Ah, yes, well...no Janelle today. Apparently, she's out of town, so it was just me and her Mother. We spent some time at home, then she took me shopping,\" Michael answered. He grinned at her, knowing what she really wanted to know. \"Three times,\" he added, holding up three fingers. \"Twice in the morning, and once this afternoon.\" \n\n\"Ooooo, so you've got some left for me!\" she gasped, pressing her big, round boobs into his chest. \"Why don't you go have a shower, while I finish cooking dinner, then after we eat we can go to bed early, and you can show me what you did with Charisse.\"  \n\n\"Deal,\" he replied, and gave her a parting kiss...fondle...grope. \n\nHe spent several minutes in the shower, relaxing under the warm spray, and getting clean for his wife. He was still busy with the soap when she walked in on him. \n\n\"Five minutes,\" she smiled, peeking in at him. \"Either finish that thing fast, or save it for me.\"\n\n\"I'm cleaning it,\" he laughed, continuing to run his soapy fist along his stiff cock. \"This is the most efficient way. Honest.\" \n\n\"Uh huh. Of course it is,\" she giggled back. \"Just prime the pump, honey. Don't spill it. I want some.\"\n\n\"I'll be out in a sec,\" he said, turning into the spray to rinse off. \n\nMiranda watched his huge member hang, soap and water streaming off the end. It was hers. Yes, she shared that monstrous dick with a select few other women, but they only had access once a week. She owned it. It came home to her bed every night, and her pussy had the tingles to prove it. Soft, he was bigger than the average guy was hard. She was very lucky. Even luckier that the remarkable instrument of pleasure was attached to a loving, gentle, devoted man whom she loved. \n\nDinner was lovely. In addition to being a beautiful black woman of amazonian proportions, Miranda was a very good cook. She kept Michael well fuelled for his daily workload...three to four times a day, was normal for him now, down from the six or more of his busiest times. He still occasionally used pharmaceutical assistance when needed, but it was no longer the norm. \n\nMichael helped her with the dishes. Often, 'washing the dishes' was only part of what went on in the kitchen, and that was the case tonight. Both of them took every opportunity to rub up against the other with purpose. Miranda brushed her huge boobs across his back, while reaching around him for a pot. Michael did the same, dragging his burgeoning bulge over her firm ass. He reached past her, into the sink, and splashed soap suds across her chest. The bubbles clung to the round curves, soaking the thin cotton a darker grey than the surrounding area. \n\nStanding behind her, he kissed and bit the side of her neck, causing a contented sigh. She pulled his wet hands up, to cup both her breasts, lolling her head back against his shoulder. She ground her butt back into him. \n\nThe rest of the dishes could wait. \n\nMiranda turned in Michael's arms. He looked down, smiling at the wet, hand shaped prints that decorated her breasts. Crossing her arms, she grasped the bottom edge of her snug shirt, and peeled it up over her head, freeing her large breasts for his eyes. She kissed him hard. \n\n\"Take me to bed,\" she whispered. \"Take me to bed, and fuck me. I'm yours, now and forever. I love you, Michael.\"\n\n\"I love you too, honey,\" he breathed, and scooped her up, manoeuvring out the door, through the house, and into the bedroom. He placed her gently on their bed, like a fragile treasure, and slid down into place beside her. \n\nMichael reached across her body with one hand, resting his fingers gently on her flat, firm stomach. Miranda's smooth, dark mocha skin, contrasted starkly with his own, tanned, but much paler. He looked into her big brown eyes, while his hand slid upwards to cup the full volume of her right breast. Her long lashes fluttered, registering the pleasure she felt at his touch, and she rolled slowly toward him, pressing her lips softly against his. \n\nIt was early. Miranda didn't need to be at school until 8:30 in the morning, and Michael wasn't due at Hiromi's until 9. They had all the time in the world to please each other. Passionate hands removed clothing piece by piece, until the two lovers were totally bare, and wrapped in each other's ardent embrace. Legs intertwined, and fingers caressed, stoking the fires of desire that kept them warm. \n\nMichael kissed his wife gently, still cupping her breast in his hand. He knew that her incredible rack wasn't all natural; she had never denied having them augmented, and had invited him to inspect the small, faded scars hidden in the crease under each globe. It didn't matter to him one bit that part of her was plastic. \n\nSome men have a problem with it though. He suspected that the number who complained about women with 'fake' tits feeling different was far higher than the number who had actual basis for comparison. Just another way to put others down, for something they didn't understand. \n\nHe, on the other hand, had ample data at his disposal. Besides his wife, Charisse had been under the knife, and her breasts still felt wonderful when they filled his hands. Natalya, though no longer in his life, had been similarly enhanced. While he wouldn't go so far as to say he couldn't tell the difference... his experience had made him something of connoisseur of boobs... he didn't find it a negative. Firm and round was never a bad thing, in his opinion. \n\nMiranda's eyes were closed, accepting his kisses and caresses quietly. She was twirling her fingers in Michael's hair, with her long leg hooked over his hip, holding him in place. Her pussy was drooling against the length of his shaft as it pressed across her lips, eager to feel it fill her again. She arched her back, and tilted her hips, hoping to capture the head of his pole between her thick lips. It took some doing, but she was successful. \n\n\"Ooooo! Aren't you sneaky!\" Michael hissed, kissing her neck softly. \n\n\"Mmmmm, yes,\" she giggled, wiggling her hips to ease it further into herself. She pulled with her leg, trying to urge him deeper, and he complied, pushing his hips forward until nearly half of his shaft had slid home. \"Oh, I'll never get tired of that big thing stretching me open,\" she breathed. \n\nMichael rolled her back, gently, and drove the rest of his tool in. Miranda's legs wrapped around his hips, and she grunted in satisfaction. He began a very slow, gentle rhythm of long, deep strokes into his wife's pussy, while hey exchanged kisses and caresses. \n\nThis was living proof that Michael may be young, with a young man's stamina and libido, but he was a very mature lover. His stable of MILFs had taught him very well how to please a woman; that there was a time for furious fucking, and a time for more leisurely enjoyment of a woman's body. He had learned those lessons well, and for that, Miranda would be eternally grateful. \n\nShe loved the feelings his cock gave her. 'Full' is simply an inadequate description, as it touched her everywhere at once, rubbing all the good spots. She especially liked it when he would grind against her clit at the end of each stroke. That brought her to the plateau, just short of her peak, very quickly. \n\nMichael had also learned how to make Miranda, specifically, lose her mind with pleasure. He read her body signals so well now, that her little shudders, gasps, and moans spoke volumes to him. He knew she was close, and now faced a choice; make her cum often, or reduce the number, but jack up the intensity. \n\nHe chose the latter, partly because he was still recovering from the workout Charisse had given him this afternoon and partly due to still digesting dinner, but mostly because he liked to watch her have really big orgasms. It was quite a show. \n\nHe slowed down to a crawl, occasionally pausing for several seconds at a time, at various points in his stroke. Miranda moaned softly, chastising him for teasing her, but knowing it would be worth it. \n\nMichael took his time, varied his pace often, and kept bringing her to the precipice, only to repeatedly pull her back. He hoped it was working on her, because it was sure doing it for him. \n\nMiranda could feel it cumming. He was taking her closer to the point of no return each time, before easing her back. She was shaking, and panting for air, awaiting that next little nudge that would trigger her inevitable orgasm. His chest was pressed firmly against her breasts, squashing them flat. He stepped on the gas once more. \n\nThe pleasure hit her like a wave in the ocean, lifting her gently with its power. She arched her back, and screamed, wrapping her limbs tighter around his body. Amid the surges of her own bliss, she heard his grunts, and felt his massive tool flex as it spewed his semen inside her vagina. The warmth spread inside her, mixing with the flames of her own climax. \n\n\"I love you, Michael,\" she breathed. \n\nHe kissed her by way of response, and lay panting atop her. \n\nIf only the classmates who tormented him in high school could see him now. \n\n***\n\nFriday morning, Michael parked in Hiromi's driveway. The door opened before he even touched the knob. Apparently, Hiromi was watching for him, and welcomed him inside quickly. \n\nAs always, she gave him a respectful bow, then a kiss that threatened to suck the fillings out of his teeth. There was no doubt about what she wanted, and when she wanted it. He picked up the petite Japanese woman, and carried her down the hall to the bedroom. With any of his other ladies, this would have been the end of the journey, but Hiromi had one more tradition to honour ; his bath. \n\nFrom their first time together, she had always given him a bath before sex. Initially, she had bathed him from behind, and outside the large wooden tub that steamed in the backyard. More recently, she had joined him in the water, but the purpose remained the same. They never had sex in the tub. \n\nThat shouldn't be read as never being sexual, however. Hiromi would soap herself up... quite the sight against the natural green backdrop of her yard... and use her body to apply the suds to his body. He loved it, feeling her soft, curvy body rubbing across his. It gave him a new appreciation for cleanliness, and always made him hard as a rock. ",
        "Today, she led him back to the bedroom, holding his long dick like the tiller on a sailboat. When they reached the bed, she sat, and pulled his cock to her lips. \n\nHer pussy may have been flexible enough to accommodate his dick, but unless she could dislocate her jaw like a python, a blowjob was simply a physical impossibility. That didn't stop her from licking it quite effectively, and sucking the head like it was made of sugar. Michael stood, and looked down at her, enjoying the sensation of her lapping at him like a sexy little kitten. \n\nHiromi Takara was by far the most petite and proper of his polyamorous group. Barely five feet tall, maybe a hundred pounds soaking wet, she had recently decided to go to a little lighter brown in her hair colour. Michael liked the new look, but he was slightly biased. What he really liked was her tight little body, almost doll-like...except that most dolls are not equipped with a firm pair of D-cup breasts. \n\nShe had him sufficiently wet now, and was giving him one of her patented, two-handed stroke jobs, adding a little more saliva as needed. She looked up at him with those dark eyes, and smiled. \n\n\"I think he's ready,\" she whispered, \"and I'm dripping. I've been waiting a week for this, and masturbating every day. I can't wait any longer. Take me Michael... Fuck my brains out!\"\n\n\"Yes Ma'am,\" he grinned, with a mock salute, as she scooted up the bed into position. He followed her, and she guided his hard shaft to her entrance, spreading her legs as wide as possible. \n\nHe liked to watch as his cock split her thick, orchid-like labia. He'd been inside her more times than he could count, but it never ceased to amaze him, as her pussy somehow stretched open to admit all of his monster. It seemed impossible, but it was happening again, right before his eyes. Even more amazing was the fact that she now took it easily, with no discomfort registering on her face at all. If anything, her face showed ecstasy, and that made him very happy. \n\nHiromi wrapped her legs around his waist as he pressed home, and sighed, smiling softly. She was just able to crane up for a kiss, then laid back to let him pound her into the mattress. She loved feeling so full. During the week, she had to make do with a rubber facsimile of Michael's huge cock, and it was nowhere near as satisfying. Even fisting her own pussy wasn't enough. She needed this cock inside her more often, but it wasn't hers. \n\nShe had to find a way, but for today she would just enjoy being stuffed full of his hard meat. It was worth every penny. \n\nShe squealed, an amusing little squeak, every time Michael's huge tool slammed into her. Initially, Michael had been reluctant to really give it to her hard, and had misread her sounds as pain. He was so sweet, treating her like a fragile little doll, and always put her needs and feelings above his own. That's why she had fallen for him. Her husband had never treated her this well. \n\nTruthfully, there had been some discomfort early on : he was ploughing a cock as big as her forearm into her cunt. How could it not hurt? Now though, it was pure heaven, and he had learned that her sounds were merely a preamble, pleasure building to the point where she would voice her joy more eloquently. At least she rarely used Japanese to direct him, anymore. \n\n\"That's my darling,\" she smiled, kissing his chest, which was hovering over her. Missionary was more intimate, but their size difference made it more difficult. He weighed more than double what she did, and he'd crush her if he rested his full body on hers, so he always perched on his hands and knees. He didn't really mind, as it let him watch her as her body absorbed his thrusts. \n\nHe was watching her now. It was very gratifying, knowing that he was able to give her the pleasure that was obvious on her face, in her dark eyes, and in her melodic voice. She really did make him feel special, and he felt the same way about her. \n\nBeing a man, of course, he wasn't just watching her face, or observing her emotions. Nope. His eyes were wandering around her body, from her bountiful, bouncy chest, to the cleft between her legs, where her pussy lips stretched obscenely around his shaft with each firm stroke. Her breasts held a special fascination for him; he never denied being a boob man, and never would. Romi's tits were so perfectly shaped, firm and resilient, they might have seemed out of place on her tiny body, if not for her nipples. Small in diameter, with almost boyish areolas that were dark in colour, they still managed to be home to tall, thick nubs of aroused flesh. When they stood up, they were the quintessential 'pencil erasers', impossible to ignore. They looked delicious, but the size difference between himself and Hiromi made munching them during the act a contortionist's nightmare. \n\nHe continued shafting her smoothly, as she transitioned easily from one orgasm to another, then another. Little wonder she had fallen in love with him; he had given her more pleasure in their relatively brief history together than her husband had during their entire marriage. She had been a virgin when they married, and he was much older than she was, already established in business and focused more on that aspect of his life than his new bride. She was his trophy, a symbol of his success, but not really a priority. Truthfully, she had never loved him, but defiance just wasn't part of their culture. \n\nWhen he died, she had taken a few lovers, but none did much for her. Now, with Michael, she had a man who did everything. \n\nBut... He was married already. She cursed her luck, but was willing to pay to keep him in her life, even if only once a week. \n\nHiromi was revelling in the sensations his cock gave her, and looking up at him lovingly, when he shifted, leaning over her more. She took a tighter grip on him, and he deftly rolled them over, but doing so put them dangerously close to the edge of the bed. Michael wrapped a strong arm around her waist, and sat up to reposition them, but decided to stand instead. \n\nThe pressure change was immediate, and Hiromi came again almost instantly, clawing at his shoulders in surprise. She held on for dear life as it washed over her. \n\nMichael read her reaction, and smiled. With Hiromi's arms around his neck, and her legs gripping his hips, there was little of her diminutive weight left for his arms to support. With a handful of each butt cheek, he bounced her on his cock while standing in the middle of the bedroom floor. They were mobile, and he went for a walk with her fully impaled. Every step made her squeak happily, as the base of his thick shaft crushed against her clit. \n\n\"Oh god, Michael! This is incredible!\" she gasped. \"Why didn't we do this before?!\" \n\n\"I didn't think of it before,\" he laughed. \"Sorry, baby.\"\n\nShe didn't respond with words, merely clinging to him like an amorous koala, as he carried her down the hallway. Halfway to the kitchen, he felt her stiffen, and her grip got suddenly tighter. He paused, and looked down at her, blushing pink as another orgasm hit her, just from him walking. He'd have to remember this. \n\nReaching the kitchen, he rested her on the countertop, and pulled out, causing a whimper of disappointment from her. She leaned back on her elbows, breathing hard and recovering from her most recent climax, her eyes locked on his huge dick, which was well coated with her juices. She felt the cool air tickle her inner walls, as her cunt gaped open. It would slowly close up again, but she knew they were far from done today. \n\nUsually, she was the one who would initiate a pause to serve her man some mid-coital refreshments; they had been at it for quite a while, and she could use a drink herself. Today, Michael had put a very pleasant twist on it. She watched him rummage through the fridge, pulling out two soft drinks, before she directed him toward a few snack items. She arranged the food and drinks in her hands. \n\n\"Plug in, please,\" she smiled, and groaned contentedly as his shaft slid smoothly back inside her. She wrapped her arms around his neck again. \"Back to the bedroom?\" \n\n\"Yes Ma'am,\" he grinned back, lifting her off the counter again, and padding toward that end of the house. \n\nBack inside the boudoir, Michael sat carefully, and rested flat. Hiromi smiled as she arranged the snack on his chest, and giggled when he complained about the cold items. She fed him crackers, and cheese, all while undulating her hips on his cock, and sipping her drink. Once they had both satisfied their thirst, she put the items aside, and went back to work on other needs. \n\nWhile she loved being under Michael in the missionary position, she was equally fond of being on top. The underlying reasons for the former were both physical and psychological; a part of her liked being helpless to resist, as her much stronger lover took her as he saw fit. Call it ego, or just animal desire. \n\nOn top, she was in control. Sure, he could take that control back at any second, with ease, but she knew he wouldn't. She was able to set the pace of her own orgasms, for as long as her stamina would allow. She had a way of making her up and down motions with a slight circular component, that let her drag her sensitive clit against him. It was very effective. \n\nSpeaking of orgasms... Here cums one now. Hiromi tossed her head back, and squealed as it hit her. Her hands gripped Michael's arms as he held her waist, supporting her through the shuddering seconds of pleasure. \n\nFrom below, Michael smiled as she shook. It felt wonderful, as her pussy became warmer and wetter around his shaft. It looked even better. He watched her boobs bounce, and quiver. Her nipples puckered tighter, turning almost purple, and standing nearly an inch tall. Far too appetizing to resist, he contorted his head to reach one of the stiff buds, and took it into his mouth. \n\n\"AHHHHHHNNnnnn!\" she gasped, squirming in his grasp. Every inch of her was hypersensitive right now, and suckling her nipples sent an electric current straight to both her brain, and her clit. She leaned over more to make it easier for him to reach, and slid her hips up and down rapidly, tugging at his cock with her clenching pussy. She heard him moan, then growl, and knew she was near to getting her reward. She kept going, until she felt him starting to arch his back. \n\nIn an instant, she leapt off him, spinning on her hip to face his huge dick, slick with her lubricant. She grabbed it with both hands, and stroked him, sucking the head happily. He grunted, and the first shot ricocheted off her tonsils, right down the hatch. It caught her a little off guard, and she coughed, pulling back. Michael's tool flexed in her hands, fountaining ropes of cum in the air, and across her face, tits and shoulders. She tried to catch a few of the airborne globs with her tongue, but was largely unsuccessful. By the time he was spent, Hiromi was painted with his seed, and so was he. \n\nShe immediately went to work with her tongue, cleaning up the mess, while he caught his breath. She managed to deal with most of it, before retreating to the bathroom for a warm cloth to finish the job. She lovingly wiped his now softened penis clean, then snuggled beside him, pulling the sheets up to cover their bodies. \n\n***\n\nHiromi woke as Michael stirred in bed beside her. He had been the first to fall asleep, while she had been deep in thought. When she had succumbed to fatigue, her subconscious had continued to work the problem, and her dreams had presented a possible solution. Something she hadn't thought about in years, but she wasn't getting any younger. It might be now or never. \n\nYes, it was just a dream, but it might be exactly what she needed to bring Michael further into her life. It would also fill another need, beside the one between her legs. \n\nMichael rolled over, finding her almond eyes open, and looking back at him. She smiled, and kissed him gently. \n\n\"It's almost that time,\" he said softly, referring to the end of his day with her, and the beginning of his weekend with his wife. \"Is there anything else I can do for you before I go?\" \n\n\"Michael, my darling,\" she smiled, \"the only thing I need is more of you, but I understand why that's not a possibility now. No. You go home to your wife. I'll be waiting for you next week.\" \n\nMichael returned the kiss, with equal feeling. Each of his ladies held his attention for different reasons. Sophia was just an unabashed slut, and built for sex, with her huge tits and curvy body. Solange, so sophisticated and European, made him feel worldly. Besides, she let him drive the Jag almost as often as he drove her. Since Charisse and Janelle shared him, they satisfied his group sex cravings. Ashley made him feel wanted, and was always saying she would steal him from her friend Miranda. They all had a corner of his heart. \n\nHiromi, however, made him feel loved, almost as much as his wife did. Under normal circumstances, that would be dangerous, but there was little in his life that could possibly fit the definition of 'normal'. Despite the emotional conflict, he knew that Hiromi would never even think of causing trouble. It simply wasn't in her nature. \n\nMichael finished splashing water on his face, wiped himself with a towel, and combed his hair. He was dressed when he walked back into the bedroom, to find Hiromi arranged sensuously on the bed. The sheet that covered her just begged to be pulled back, and the look in her eyes encouraged it. \n\nHe leaned down for another kiss, and slowly slid the sheet aside. She giggled, and pretended to fight against him. \n\n\"I'll see you next week,\" he whispered. \n\n\"I love you, Michael,\" she smiled. \n\n\"I love you too, Romi,\" he replied, using his pet name for her. \n\nShe heard the front door close, and rolled over, picking up her phone. She scrolled down to the M's, thumbing past Michael's number, to the one right below it. She placed the call, waiting three rings before it picked up. \n\n\"Hello, Miranda,\" she said respectfully. \"No, he's fine. In fact, he just left... Well, actually, I called because I wanted to talk to you about something. Is there any way we can get together sometime next week?... Really? Yes, I'd love to come to dinner, but I'd like to talk to you alone before Michael gets home. How about I come over and help you in the kitchen?... Yes, I'm sure he will be surprised. Don't tell him I'm coming, okay?... Alright, Monday it is. Thank you so much, Miranda. Goodbye.\"\n\nHiromi put the phone down, and nestled into the covers deeper. Yes this might be the perfect solution for everyone involved. \n\nAs long as the others didn't object, it might be wonderful. \n\n***\n\nMiranda put the phone down. She didn't know what this was about, but it really didn't matter too much. She really liked Hiromi. Aside from Ashley, who had been Miranda's friend for years, the petite Japanese woman was closest to her in age... actually two years younger... and had a very honest, trustworthy demeanour. It was hard not to like her. \n\nMichael would be home in a few minutes. He'd probably have an interesting story for her, about his day in Hiromi's bed. It still amazed her that a five foot tall, one hundred pound person such as Hiromi could take Michael's giant penis into her pussy, and still walk afterwards. Hell, sometimes she had trouble walking straight herself. \n\nActually, she would probably be having that difficulty at some point in the next two days. It was now officially the weekend, and her husband was all hers until Monday morning. \n\nThank God It's Friday! \n\n***\n\nMonday afternoon, Michael was flat on his back in the middle of Ashley's very comfortable king-sized bed, looking up at the beautiful blonde while she rode his cock energetically. \n\n\"Fuck, honey! I'll never get over how good this thing feels in my cunt!\" she groaned, bracing her hands on his chest to let her undulate her hips freely. \"SO...\" she barked, slamming her hips down on his pole, \"... FUCKING...\" slam, \"... GOOD!\" Slam, slam, slam. \n\nAs if to illustrate her point, she howled through a spectacular orgasm. He already had his hands on her fabulous, round knockers, and squeezed them firmly, thumbing the puckered nipples. Ashley looked down at him, her eyes ablaze, as her climax waned. \n\n\"Oh, baby! You're so good for me!\" she smiled. She leaned forward, and pressed her firm globes in his face. \"Suck me! Suck my big tits, like I know you want to. Chew on my nipples!\"she gasped. \n\nWell, it was either do as she asked, or suffocate under her fantastic funbags. Ashley ranked number three on Michael's biggest tits list, right behind his wife. Of course, they were both a few cup sizes short of Sophia, who was the undisputed title holder. Solange, his French honey, was a close fourth, then Charisse, followed by a tie for last, with Janelle and Hiromi bringing up the rear with their 'mere' D cups. \n\nAshley was a chatty Cathy in the bedroom. Okay, a slutty, filthy, chatty Cathy, with a vocabulary of sexual terminology that would make a sailor blush. In the past, she would have fucked the sailor first. Miranda had told him the tales of her college roommate's escapades. Maybe she was the one they were talking about when they said that blondes have more fun. \n\nMiranda told him about the night she pretended to be asleep in her bed, while Ash had taken on two guys on her side of the dorm room. Miranda's fingers had been busy under the covers, as she watched her buxom blonde companion get spit roasted by the men. They went at it for nearly an hour, and Miranda had several stifled orgasms. Her pussy was a swamp of juices. \n\nAfter Ashley had seen them off, she flopped back on her bed. \n\n\"Goodnight, Miranda,\" she laughed. \n\n\"Goodnight, Ash,\" Miranda giggled back. \"Well done.\" \n\nThat was many years past, however. Ashley had married, and curbed her impulses... Until her husband's death. That's when the cougar was freed. Several young men met their match in her bed. Michael had tamed her. \n\nSo, he was latched on to her nipple, suckling roughly, and biting at her request. She not only liked to talk, she liked it rough, most of the time. Where as the rest of his ladies liked a softer, more gentle approach, especially at the beginning, then a 'fuck their brains out' finish; Ashley liked it hard and fast from the outset, and became more subdued after she had surrendered. She was unique, to say the least. \n\nHe chomped her nipple once again, then grabbed her ass with both hands. He sat up, then stood, before reversing their position. He crashed down atop her as he threw her on her back. \n\n\"Oh you fucking bastard! Put that big cock back inside me, you fucker! I'm not done with it yet!\" she hissed. \n\nHe played his role, mauling her big jugs, and putting one hand to her throat as he fed his monster back into her cunt. She moaned, and grunted, as his cock reached her cervix. \n\n\"C'mon... Fuck me!\" she snarled, grasping his wrist to keep his hand in place at her neck. \"Gimme that giant cock! Fuck me like a cheap whore! Make me feel it!\" \n\nMichael did. He pounded her into the mattress, drilling deep with each furious stroke. Her eyes opened wide, registering the pleasure she was feeling, delivered with an equal amount of pain. She arched her back and screamed as she came; once, twice, then a third, while he fucked her hard. Sweat dripped off his body onto hers, and at last, her grip on his wrist lessened. She transformed from wanton slut, to caring lover before his eyes. \n\n\"Oh god, Michael,\" she smiled, \"I'm in heaven. Thank you so much, darling.\" \n\nHer change in demeanour allowed him to ease up, and stroke her pussy a little slower. He stopped choking her, and her hands gently caressed his back, shoulders and face. She looked up at him. \n\n\"Cum for me, darling,\" she breathed. \"Cum inside me. I love the warm feeling of your cock spurting deep in my pussy.\"",
        "He had been gritting his teeth, and holding back the flood for a few minutes already, waiting to see if slut Ashley wanted a facial, or loving Ashley wanted it inside her. Now that the decision was made, he was happy to pull the trigger. A few more strokes, and he emptied his balls, gushing way up inside her cunt, while she cooed and caressed his hair. \n\n\"Thank you, Michael,\" she sighed. \n\nThank you, Ash,\" he panted. \n\n***\n\nMichael stubbed his toe on the last step as he left Ashley's house, nearly doing a face plant in her driveway. His legs were a little wobbly, and he leaned against the fender of his car for a few seconds, getting his bearings. His head was a bit fuzzy, too. Both were residual effects of his day with Miranda's college friend. \n\nShe had really put him through the wringer today, a total of six times. It would have been a more manageable four, but she had pushed his buttons with great skill, hinting at the past she shared with Miranda. A shared past that included sharing a bed on several occasions. \n\nActually, she did a lot more than hint at it, giving him a very vivid, erotically descriptive rundown of a few of those sessions, timed to resurrect his exhausted penis. It had worked, as the images of his wife and her blonde friend engaged in various sapphic activities filled his head, leading to blood filling his cock, and that cock filling Ashley's cunt. \n\nHe started his car, and put the window down, inviting the cooler air of early evening in to clear his head. Feeling better, he put the car in gear, and slowly pulled out of Ashley's driveway. \n\n***\n\nMiranda was in her kitchen, watching Hiromi make most of tonight's dinner. Who better to learn the art of making sushi from than a native of Japan? Of course, that hadn't been the main reason for tonight's get together. When she had opened the door to invite her guest in, two hours ago, Miranda had been curious. \n\nNow she was stunned. Her mind was turning over the pros and cons of Hiromi's request, and the accompanying offer. It had a definite appeal, but also a slight risk. She needed to think more, and talk to her husband about it. \n\nMichael would be home soon, and then all the cards would be on the table, along with the delicious sushi Hiromi was fashioning. \n\n***\n\nAs Michael pulled into his driveway, he saw the extra car parked in front of their house. He didn't recognize the vehicle, and assumed that one of Miranda's other friends might be visiting, and possibly joining them for dinner. He had no problem with that; he'd met several of his wife's friends, and never felt anything but acceptance. \n\nOf course, not all of her friends knew about their former and current business together. Ashley did, but since he just left her nearly unconscious in bed a few minutes ago, he was certain she wasn't the mystery guest. He was prepared for a quiet dinner with no discussion of the day's events. \n\n\"Hi honey, I'm home,\" he called out in his normal fashion as he came through the door. \n\nMiranda breezed out of the kitchen and greeted him with a kiss. She looked very good, tonight, well dressed and coiffed. \n\n\"Hi sweetie,\" she smiled. \n\n\"Company for dinner?\" he asked, holding her close. \n\n\"Yes. A friend wanted to talk today, and she's making us dinner as well,\" Miranda nodded. \n\n\"Do I know this friend, or is this a new one?\" he queried. \n\n\"Oh yeah. I think you could say you know her. In fact, you know her a lot better than I do,\" Miranda giggled. \n\nThe response made Michael turn, a confused frown on his face. He didn't see their 'guest' come out of the kitchen with the tray of sushi. \n\n\"Dinner is ready. Good evening, Michael,\" Hiromi smiled, placing the large platter in the centre of the table. \n\nMichael nearly gave himself whiplash as his head went back and forth between the two women. The look on his face must have been something to see, and Miranda laughed. \n\n\"Relax sweetheart,\" she consoled. \"You're not in trouble. Hiromi just wanted to bounce an idea off me... off us... and this seemed as good a time as any.\" \n\n\"Okay,\" he replied cautiously, still wondering where this was going. Romi hadn't mentioned anything on Friday. \n\n\"I suggest we eat first,\" Hiromi said softly, \"then we can discuss my proposal.\"\n\n\"Yes,\" Miranda nodded, already taking her seat. \"Come on, honey. It looks delicious. Hiromi is teaching me how to make it properly.\" \n\n\"Um, yeah, okay,\" Michael answered, still baffled. It didn't appear they were going to let him in on the secret yet, so he might as well eat. He joined the ladies at the table. \n\nHiromi had been a very generous chef, providing a quite ample selection of tasty rolls, nigiri and even sashimi. Tuna, salmon, ebi and mackerel... as well as a few that Michael didn't recognize... were stacked on the tray. He was famished after his day with Ashley, and wasted no time, immediately diving in, chopsticks flying. \n\nHe gorged himself, while the girls ate at a more dignified and feminine pace, chatting between themselves about the food, and how it was made. Eventually, they stopped depleting the selection, and left him to finish off the balance. It went down so easily, he hardly noticed the full feeling sneaking up on him. As he plucked the last piece from the vacant platter, he caught Miranda and Hiromi sharing a knowing glance and a smile. \n\n\"Oh, god, that was so good,\" he groaned, dropping his chopsticks on the plate and rubbing his belly. \"I'm stuffed. I hope this 'proposal' doesn't require me to do more than listen, because I can barely move.\"\n\n\"I don't doubt it,\" Miranda giggled. \"You ate enough for a small army! Why don't you waddle into the living room and rest, while we clear up. We'll join you in a few minutes.\" \n\nMore stall tactics, he thought, as he slowly walked over to the couch and dropped heavily onto it. They're trying to drive me nuts. He sat, tipped his head back, and closed his eyes. \n\nMiranda and Hiromi walked in and took their seats in the recliners opposite the couch. Michael was still sitting with his eyes closed, so Miranda cleared her throat. He opened one eye. \n\n\"Yes?\" he asked. \n\n\"You probably want to know what's going on?\" Miranda suggested. \n\n\"Hadn't given it a second thought,\" he grinned. \"Romi? What's up?\" \n\nHiromi sat with her hands clasped around the knee of her crossed left leg, trying to appear calm while the flock of butterflies in her stomach flew in formation. Even though she had already talked to Miranda about it, she was nervous about suggesting it to Michael. Oh well. No turning back now. \n\n\"Michael...\" Hiromi began, then paused. \n\n\"Just tell me, Romi. I can't take much more suspense,\" he begged. \n\n\"Right,\" she smiled. \"I won't beat around the bush.\" One more deep breath, and she laid it out. \"Michael, I want a baby, and I'd like you to be the father of my child. I don't expect you to have a child with me and not be part of that child's life, but I would never consider coming between you and Miranda. With that in mind, I suggest that both of you come to live with me, on a permanent basis. You have seen my house; It's far too big for me by myself, and more than big enough for all of us.\"\n\nMichael sat in silence for several seconds, looking from Hiromi to Miranda and back. His wife looked happy, and his 'girlfriend' looked hopeful. \n\n\"Alright, let me be sure I've got this right,\" he finally said. \"In exchange for getting you pregnant, you are offering us a free place to live?\" \n\n\"Yes,\" Hiromi nodded. \n\n\"We could sell this house and invest the proceeds,\" Miranda added, \"or just rent it and bank the income.\"\n\n\"Correct,\" Hiromi confirmed. \n\n\"Sounds a little one-sided, in our favour,\" Michael opined. \"You get a baby, and...?\" \n\n\"And greater access to you, my love,\" Miranda finished. \"It seems you have more than one woman in love with you.\"\n\nMichael looked over at Hiromi, who appeared on the verge of tears. This was her only shot, and she desperately wanted it to work. \n\nHe weighed the options. Three day weekends, reduced expenses, increased standard of living, increased money to invest for their future. Getting to fuck Romi more often. Having to fuck Romi more often. Having a child. Essentially having not only two wives, but two incredible wives. He really didn't see a downside, but it wasn't only his decision to make. \n\nMiranda had given it a lot of thought, and she couldn't see a problem either. She saw him looking across at her, a question in his eyes. The only question he could possibly be asking; yes or no? She nodded, almost imperceptibly. \n\nMichael stood, and walked across to Hiromi. She looked up at him hopefully, and her eyes followed him as he knelt next to her chair. He took her hand, feeling the tension inside her. A gentle kiss on her lips opened the gates, and his one word answer unleashed the flood. \n\n\"Yes,\" he whispered. \n\n\"Oh, thank you, Michael!\" she gasped, wrapping her arms around his neck. He remained the sole beneficiary of her gratitude for several seconds, until she remembered she had another to thank. She stood, and faced his wife. \n\n\"Miranda... I don't know what to say,\" she bowed. \"Thank you doesn't seem enough.\" \n\n\"Of course it is. We are all going to benefit,\" Miranda reminded her. \"But I'll still take a kiss, if you are willing.\" \n\nHiromi smiled and nodded, stepping into Miranda's embrace. The two women cast a glance at Michael, who was watching intently, a huge smile on his face. Satisfied their audience was paying attention, they pressed their lips together; Hiromi's bright red, bee-stung beauties contrasting Miranda's plump, dark pillows. Their tongues reached out, tangling wetly for his eyes. \n\n\"This is going to be fun,\" he whispered. \n\n***\n\nFriday afternoon brought about a change in routine. \n\nWhile it had begun as every other Friday had, with Michael arriving at Romi's door in the morning, it had departed from the norm when Miranda left work in the afternoon and headed in that direction too. She used the key she had been given, and entered the house quietly. \n\nIgnoring the obvious sounds of sex coming from down the hallway, she had a quick look around. \n\n\"So this is my new home?\" she giggled. \"Wow.\"\n\nIt really was a beautiful house, so open and airy, yet warm, with all the rich wood tones and natural materials. \n\nAcoustically, it was... well, she could no longer ignore those sounds. She recognized Michael's grunts and huffing breaths. The squeals, squeaks and gasps, certainly female, had to be from Hiromi. As she crept down the hallway toward the bedroom, she felt her pulse racing, and a sudden dampness between her thighs. \n\nShe obviously knew that her husband had sex with women other than herself... the proof was in their bank account... and she had heard the stories from his own lips. She had never actually seen him in action, though. That was about to change. The shoji leading to the bed chamber was ajar, letting Miranda peek in, and what she saw took her breath away. \n\nHiromi was on her back, legs splayed wide, while Michael pounded her mercilessly. That was hardly a surprise, as she had been on the receiving end of similar treatment many times. The surprise was how incredibly arousing it was to watch him; muscular shoulders and back flexing as he held himself in place above Hiromi, while his ass and thighs clenched with each furious stroke. Far better than any porn she had ever seen, it compelled her to open the door. \n\n\"Working hard, I see,\" she smiled, causing both Michael and Hiromi to turn their heads her way. They both smiled, and he went back to his task. \n\n\"Just ful-fill-ing my end of the con-tract,\" he grunted, in time with his thrusts. \n\n\"Mind if I watch?\" she asked. \n\n\"Not at all,\" he grinned. \"Ro-mi?\"\n\n\"Cer-tain-ly... Please do!\" Hiromi squeaked. \n\nMiranda smiled, and took a seat on the chair next to the bed. No question about it... Her husband can really fuck! The sight was causing a definite tingle between her legs, one that couldn't be denied. \n\nShe hiked up her skirt, and tore a huge hole in the crotch of her pantyhose, sacrificing them in the name of expediency. Her fingers went to work quickly, circling her clit, and plunging into her juicy cunt eagerly. She noticed that her husband had slowed his pace, allowing them to watch her, while she watched them. \n\nIn contrast to the method used on her pantyhose, Miranda carefully unbuttoned her blouse. Well, it was one of her favourites, and she didn't want to ruin it, even if she was desperately horny. Once it was open, she dragged her bra cups down, giving her access to her nipples, which were already stiff and tall. Now able to get at both primary erogenous zones, she settled into her seat, propped one foot up on the edge of the bed, spread her legs wide, and resumed her self pleasure. \n\n\"Fuck her, Michael,\" she growled. \"Fuck her hard. It's so hot watching you two like this. Do it!\"\n\nMichael grinned again, and returned his attention to the woman under him, resuming his former rhythm of long strokes into Hiromi's receptive cunt. \n\nFor her part, Romi's focus was divided. She wanted to make her usual eye contact with Michael as her shafted her so divinely, but Miranda's pussy was a huge distraction, and a very exciting one. It was stoking her fires to previously unknown levels. Add the stimulation of being watched for the first time, and it's no surprise she felt an orgasm rapidly approaching. Her cute little squeaks of bliss began to escalate. \n\n\"Aiye, aiye, aiye, oh, my, fuck-ing god! Fuck me, darling... I'm cumming!\" she screeched. \n\nIn the corner of his eye, he saw his wife's body stiffen as she had a climax of her own, fingers furiously throttling her pussy. Her groans of pleasure added to Hiromi's screams, filling the room with the sounds of lust. \n\nThe scent of it, as well. His nose registered the familiar smell of his wife's aroused pussy, mingling for the first time with that of his Japanese lover. It was a potent perfume, and urged him into another gear. \n\nMiranda saw him pick up the pace, and knew he was going to soon be pumping Hiromi full of his warm seed. That thought and sight spurred her fingers to plunge deeper. She had four of them in her cunt now, and two from the other hand threatening to start a fire on her clit. She needed a third hand to tug her nipples, but would have to settle for the two she had for now. \n\nRomi was beside herself. Michael's cock was normally enough to make her cum, but the added stimulus had her in a near orgasmic coma. She didn't feel it cumming again, because it never really stopped. Her body hung limp under him, bouncing between his hips and the mattress, and her voice was nearly gone from screaming. \n\nMiranda watched her husband's balls pull up tight, and the thick shaft flexed as he spurted a huge load into Hiromi. It was the final straw, pushing her over the top again, and she screamed her own harmony as both Michael and Romi vocalized their orgasms. \n\nThe room suddenly fell still and silent, other than the sound of tortured breathing. Miranda wilted in her chair, Hiromi was a damp rag, and Michael was resting his body as gently as possible atop her tiny frame. \n\nIt was Michael that stirred first, carefully rolling off Hiromi's body, and staggering toward the bathroom. \n\n\"Romi? You alive?\" Miranda giggled. She was greeted with a weak groan. \n\n\"No,\" Romi sighed. \"Must be in heaven.\" \n\nMiranda rose slowly, and stepped over to Hiromi's virtually lifeless body. She bent, and kissed her new co-wife on the lips. Another moan of exhaustion, before Miranda peeked at the other woman's ravaged pussy, where Michael's gooey deposit was slowly dripping out. It was more than she could resist, and she quickly took a place between Romi's thighs, cleaning up with her tongue. Michael's semen mixed with Romi's musky juices to create a delicious gravy. \n\nRomi moaned, and squirmed, before grabbing a handful of Miranda's dark tresses. She ground her sloppy cunt against Miranda's face, and gasped at the feeling of another woman's tongue twirling around her clit. She was astonished how good it felt. Michael was very talented with his mouth on her pussy, but Miranda left him in the dust. Romi hadn't planned on this new arrangement including threesomes with her, but it was looking like a pleasant bonus. \n\nMichael returned from the bathroom to find his wife's face buried in Romi's pussy, slurping away happily. She gobbled his residue from Romi's gaping hole. \n\n\"Um, honey?\" he said gently, leaning against the door frame. \"I'm trying to get her pregnant. It's going to be difficult if you keep sucking my cum out of her every time.\" \n\nMiranda lifted her head, and wiped her chin. A wry grin crossed her lips. \n\n\"Sorry, baby,\" she shrugged. \"Too good to resist. You'll just have to fuck her again... and again... and again.\"\n\nThe things he had to do for his wife. Jeez. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThanks for taking the time to read this one. I hope you enjoyed it. Don't forget to send me some feedback or comments, and please, please, please... Click those stars. \n\nI think I hear Dan and Karen calling."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "mature women",
        "younger man",
        "interracial",
        "big tits",
        "cougars",
        "asian",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/ms-walkers-class-ch-06"
}