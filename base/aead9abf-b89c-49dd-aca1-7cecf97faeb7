{
    "title": "Slow Dancing with a Fast Woman",
    "pages": [
        "The title was in a passage of a story I read recently, unfortunately that's the only thing that stuck, or I'd give credit.\n\n*****\n\nLooking around the room, I couldn't help but smile. Jerry deserved this happiness, he'd had a rough couple of years. I was surprised I was here at all. I called him when I got the invitation.\n\n\"You sure about this?\"\n\nHe actually laughed.\n\n\"Yes, I'm sure. After all, if it wasn't for you I would never have found Anna. I owe you, if you had been a different person I could be dead or in jail by now. You helped me when the most natural thing in the world would have been to turn your back.\"\n\nSo I went to his wedding. Even sat at the main table, though I had no part in the ceremony. His new wife hugged me when we met, whispering in my ear.\n\n\"He told me all about your history, but I'd like to hear it from you. I've never heard anything quite like it.\"\n\nI smiled, watching them. He was forty two and she was forty-six, but they acted like teenagers around each other. I wished the best for them.\n\nI was dancing with the bride when I saw her. I just stopped moving. Anna looked up in confusion, and followed my gaze. I was trying to get loose but she had a death grip on my arm.\n\n\"Calm down. Please don't ruin my wedding.\"\n\nI exhaled loudly, trying to center.\n\n\"What the fu.., what is she doing here? Does Jerry know? If he doesn't it probably will ruin it.\"\n\n\"He knows. He actually invited her. He says he did it for you. Now calm down and let's finish this dance.\"\n\nWe did. I was thinking about just walking out, but Jerry was waiting at the table. I got right in his face. \"I can't believe you'd invite your exwife to your wedding. What the hell was going through your head?\"\n\nHe was shaking his head, smiling slightly.\n\n\"I didn't invite her to the wedding, just to the reception. And I invited her for you. One way or another, sometime tonight, you're going to sit down and talk to her, for just a few minutes.\n\nI don't want you to do this for me. I want you to do it for you. And her. Neither of you will ever get over it if you don't. But I gotta tell you man, she really does love you.\"\n\nI sat, I brooded, I fumed. Jerry and Anna alternated staying with me to make sure I didn't leave. I know I must have pissed them off whining, until Anna snapped.\n\n\"Will you please just shut the hell up! For man who went to war, you're sure a pussy when it comes to her. Man up, talk to her, get it over with. Then leave if you want. You're bringing us all down, and I want my memories of tonight to not be of babysitting a whiny little bitch disguised as a big strong man.\"\n\nI was shocked, more from her using the words 'pussy' and 'bitch' than anything else. Then I realized she was right. Plus she had fed me four really strong drinks pretty close together.\n\nSHE choose that exact moment to appear beside me, tears in her eyes and hand outstretched.\n\n\"Dance with me? Please?\"\n\nI could have been an asshole and screamed at her. I could have sat there and ignored her. I could have gotten up and left. I took her hand.\n\nWe swept out on the dance floor, her achingly familiar body molded to mine as we slowly twirled to the song the band was playing. I felt her shake a little and looked down to see the tears falling onto my jacket. I started to disengage, trying to speak. She raised a hand to my lips.\n\n\"Please, don't talk. Just hold me, and let me pretend, just for a moment, that you still love me.\"\n\nAnd that was the heart of my problem. I did still love her. So we moved slowly across the dance floor, each lost in our own memories and thoughts.\n\nI reviewed all the women I thought I loved, including her, wondering why she had to be the one. The ONE. The one I wanted. The one I intended to spend the rest of my life with, only to find out she was never really mine. That's why it hurt so badly. I held her and let the memories continue to flow.\n\n...\n\nI saw it coming, I just didn't believe it.\n\nHe was about five seven or eight, and weighed under one fifty. And he had to be in close to forty. I was thirty one, six two, two hundred ten, mostly muscles.\n\nHe rushed up to me, two of his friends trying to slow him down. I was feeling pretty good, it was a Thursday, I had just gotten paid, and my girl was supposed to meet me for drinks and dinner out, followed by dessert in. I had started early, a couple of beers while I waited and shot the breeze with my friends.\n\nI didn't know him, never saw him before in my life. He planted himself directly in front of me. I was wondering what he wanted, when I saw his arm move.\n\nIt started somewhere around his knees, gathering momentum as it traveled. I saw his hand ball into a fist, he was moving so slowly I could tell he'd probably never made a fist before. \n\nI remember thinking whatever he hit better be soft or he was going to hurt his hand, when he connected with my eye. I was just so fascinated watching it never occurred to me to defend myself. Down I went, and he started trying to kick me.\n\nI'd been out of the sandbox long enough to let him slip under my defenses, but not so far that instinct and training didn't kick in full force. I rolled and did a leg sweep, dropping him to the ground beside me, quickly grappling him into a submissive position. I may have gotten a kidney punch or two in, judging by the grayness in his face.\n\nHis two buddies tried to jump in but they were outnumbered and outgunned, so they resorted to calling for the bartender to get help pulling me off him. My cousin was the bartender and owner, had seen the cheap shot, and just kept polishing the glass he was holding. I got my breathing back to normal and snapped at him.\n\n\"What the hell is wrong with you, dude? You got some kind of death wish, jumping on strangers half your age and twice your fuckin' size? I ought to knot you up some, send you home to the wifey bruised and contused!\"\n\nHe continued to struggle.\n\n\"Let me up, you lowlife motherfucker! You need a lesson about fucking married women.\"\n\nI looked at him, wondering if he was high or just delusional. Shoving him away, I jumped to my feet.\n\n\"Mister, I don't trespass on private property. That being said, if you come back at me, I guarantee you a first class ass whipping. Do you understand me?\"\n\nApparently he didn't, because he came up screaming and swinging. I jabbed with my left, and landed a roundhouse to his jaw with my right. He dropped like a rock and laid there. I looked at his buddies.\n\n\"Haul his ass out of here, and I think I can speak for management when I say he needs to drink elsewhere. And tell him that jumping younger, stronger, meaner strangers is a sure way of not living to a ripe old age.\"\n\nThey wanted to argue, but the bartender cut them off. Finally they carried him out, and we laughed a few minutes before my date showed up. She saw the beginnings of my shiner and went into mother mode.\n\n...\n\n\"What happened, honey?\"\n\nI made a joke of it.\n\n\"Some guy came in and accused me of sleeping with his wife. He punched me before I could react. Sad, really. He had to be in his forties, was small, and had no idea how to fight. He had nerve, though. If some guy is screwing around with his wife, he'd best watch his back.\"\n\nHer face had gotten paler as I recounted the episode. I noticed and tried to reassure her.\n\n\"Relax, honey. I'm fine. However if you feel the need to kiss it and make it all better, I won't object.\"\n\nShe immediately covered my face with light kisses, before pulling back with a smile.\n\n\"There now. Did Momma make it all better? No mean old man gets to hit my honey. He had to be a pretty big man to attack you. Did he not notice all those lovely muscles?,\" she cooed, as she rubbed my bicep. I found out later she was just wanting me to describe him again.\n\n\"Actually, he was an older guy, short, with a bit of a belly. He had no skills but plenty of nerve. If his wife is cheating on him, it might be pretty bad if he finds the guy.\"\n\nMelody got quiet again, before excusing herself to use the restroom, saying she didn't feel well. My cousin Bob, the bartender, had heard most of the conversation.\n\n\"It's always the quiet ones, you know? He was probably living his version of the American dream, happy as a clam, and he finds out his wife is a slut. Those are the ones you have to watch, the ones that could kill you in a fit of rage. I've seen it to some degree a hundred times or better, I hope you straightened him out enough to leave you alone.\"\n\nI nodded, agreeing totally. \"I hope he finds the motherfucker and kicks his ass. I saw a few men go down when they got Dear John letters while I was in service. Still, he better get his facts straight and be careful, he ain't much of a fighter.\"\n\nMelody reappeared, looking sad.\n\n\"Sorry honey, the hospital called. There was a big wreck on the interstate and they're shorthanded. They begged, so I have to go in. I'll call tomorrow, if I'm not too tired. Love you.\"\n\nShe kissed my cheek and dashed out. This had happened before, as she was a trauma nurse at the local hospital. Luckily for me, she worked twelve hour shifts during the first of the week, so she was available from Thursday until Saturday.\n\nMe, I worked out of town, a lot.\n\n...\n\nNo, I don't have a high paying executive job that has me jetting around the country, solving problems for megacorporations or saving the world for the government. I lay stone.\n\nThat's right, stone. Big rocks, you follow?\n\nMy father was the guy I just talked about, jetting around the country and occasionally the world, making his company big bucks. He was almost never around. so Mom raised my sister and I pretty much alone. And did a damn fine job in my opinion.\n\nWhen I was twelve, my dad decided he didn't need a middle aged, middle class housewife on his arm, and traded her in on a newer model. She was heartbroken, but my grandfather, who had never really liked him, was furious. Dad tried to rush the divorce, cutting off funds for leverage. Pops stepped in, spent some of his own money, got her the second best divorce lawyer in the state only because the first was too busy, and burned him to the ground. Dad was fighting tooth and nail until Pops threatened to bring suit against his company for violation of the morals clause. His new woman had at one time been his assistant.\n\nSeeing his high flying career in jeopardy, he folded like a cheap tent, and Mom came out smelling like a rose, even if she was heartbroken.\n\nDad moved to the other coast, and we basically never saw him again until he attended my high school graduation, offering me a full ride at a top ranked west coast college, if I would agree to move. I politely turned him down until he pushed, then I got loud and physically threw him out of our house. I haven't seen him since.\n\nMom had remarried, a decent man who loved her dearly. Surprisingly, she turned up pregnant, and I became a brother at fifteen. I admired the man, and my sister worshiped him. He offered to help pay for college, but didn't push when I opted not to continue my education just then. Instead, I became part of the big green machine, and spent four years in service, with a year each in both sandboxes. When I got out I was more in tune with the way the world worked, so I used military money to go to school part time while I worked for my grandfather.\n\n...\n\nYou guessed it, he was a Master stone mason, all he'd ever done his whole life. Even at sixty two he had a body most thirty year old gym rats would kill for. My dad couldn't get away fast enough, but I was hooked by the time I was old enough to pick up a stone. Pops would put a pile in the backyard of his home, and reward me based on how fast I could assemble them. Sometimes I put it together in a way he never envisioned, but they always held together by the time I was thirteen.\n\nI became his apprentice at fourteen, working summers and after school, if he worked close to home. In Afghanistan, especially the part I was in, there was no shortage of rocks, and I would relax myself by building walls, especially around our positions. When a wall I built saved a few lives, including our captain, the guys were soon avid helpers. We always had the best fortified positions in the area.\n\nThe Afghans were excellent stonemasons, and I studied their techniques, occasionally working beside them to build schools and hospitals. I learned from them as much as I could.\n\nPops took me into the business as soon as I got out. Soon I was running jobs for him, usually just me and a helper or two. He usually handled the big jobs.\n\nOne of the worst days of my life came when he passed, victim of a kid texting. He crossed the road and hit Pops head on. They estimated he was doing sixty five when they collided. Pop was in his sixty six Ford pickup, no airbags, no headrests. He suffered a broken neck, the doctors say he probably died instantly. Didn't matter how he went, he was gone at sixty six.\n\nHe was retiring as soon as he got his current job completed. He and Grams had bought an RV, intending to travel the country. Because of the impending retirement, he had gradually moved the company into my name, so I didn't have a lot of paperwork to deal with. I was twenty seven.\n\nStone masonry is a fascinating field. A master mason could make a lot of money, depending on the work. My company specialized in the building and restoration of dry walls, walls built without mortar, depending on the size and way the rocks were placed to retain shape. It was a skill not easily learned, and we were the best in the region. My grandfather, before he passed, had struck a deal with the state university system to repair the walls on their five oldest campuses. Some of them were over three hundred years old, in disarray or completely fallen. I had a crew of two master masons and three to four apprentices at each site. The apprentices were in it for training, and we paid fifteen to twenty dollars an hour, depending on their skill level. As they progressed, their pay increased. Of course, it took years to be considered a master, but as I said, the pay was excellent.\n\nThere was a question of me keeping the contract, but I convinced them to have faith in me.\n\n\"Look, Pops was pretty much just an administrator before he passed. The same masons with the same skill levels are still on the job. I guarantee the work will not suffer.\"\n\nIn the end they kept us, mostly because the company was in my name by then and they'd never complained before, and they knew it would be hard to replace us. Stone masons are kind of rare, really good ones even rarer.\n\nI hated being a manager, not getting to lay stone on a regular basis. I solved my problem by hiring my sister Becky. She could actually lay stone pretty good, and she could spot shoddy work a mile away. She had just graduated with a business degree, and there weren't that many good jobs out there, so she took it for the experience if nothing else. Still had to have meetings and review the books, which we scheduled to coincide with our weekly family dinners.\n\nMy stepfather Jerry was an accountant, and Pops liked him so much he gave him our business when he married Mom. Gram would always be there, and she and Mom would participate in the discussions, having years of experience to fall back on. My younger brother Jerry Jr. was fifteen, and I had already promised him a job next summer. He would start at the bottom, hustling rock like all apprentices. He had a fantastic head for numbers, and I was pretty sure he wouldn't end up a Mason. Didn't matter, accountants were valuable people too.\n\n...\n\nI was thirty years old when I met Melody. She came into the bar one Thursday night with some friends. It was an immediate attraction, almost lust at first sight for both of us.\n\nBilly, my cousin and owner, had live bands on Thursday, Friday, and Saturday. The place was blue collar all the way, so it was mostly country, and some of them were even good. I watched Mel dance a few fast numbers, admiring her grace.\n\nShe came up to the bar just as the band started a slow song, ordering a round for her table. When the music started, she grabbed my hand.\n\n\"I hate to waste a good slow song, and yes, I'd be pleased to dance with you. Thanks for asking.\"\n\nI was so surprised I couldn't even talk, and stumbled along behind her while my friends laughed. Slow dancing with Mel should have been a requirement for graduating seniors, just to show how it should be done. Of course, if it happened, there would be a lot of wet spots on a lot of jeans. The woman would just mold herself to you, letting no space get between, moving with you so gracefully it was like you were alone, except for the extremely pleasant warmth and feel of her body. I think I loved her before the first song was over.\n\nShe was tall, around five nine, and when she wore her five inch heels she could look me in the eye. Not model thin, but not thick either, the perfect size. Her chest was full but didn't sag, and she possessed the largest green eyes I'd ever gazed into. Honey blonde hair cascaded in loose curls down her back, stopping just above an ass that no skin tight jeans could ever do justice to.\n\nWhen the dance was over she refused to let go of my hand, pulling me over to her table. I met her friends but to this day couldn't tell you their names. The band stopped forty five minutes before closing time, and we could actually talk without yelling. Her friends got tired of waiting and were tugging on her to go home.\n\n\"Damn it, Mel, kiss the guy, you know you want to, get his number, and let's go,\" said one of her friends, so she did.\n\nYou never forget the first kiss of someone you're attracted to. Hers was soft but firm, no tongue, but held hints of really great things to come.\n\n\"Be here tomorrow?,\" she asked as she pulled back.\n\nI just nodded.\n\n\"Meet me out front at seven thirty. Take me somewhere nice for dinner. Bye.\"\n\nAnd she was gone, leaving traces of her perfume on my body and the taste of her lips on mine. I got up and wandered back to the bar, where I caught hell from the guys.\n\n...\n\n\"Way to play hard to get, Bandit,\" laughed Billy.\n\n\"If she had pulled out a hoop, I believe you'da jumped through it.\"\n\nI got the nickname because my real name was Jesse James. My dad picked it, saying he admired his Robin Hood ways. I looked him up once. He is recognized by many historians as the first recorded criminal sociopath in American history.\n\nI didn't care why. I didn't care how. I just cared she'd chosen me. But I was incredibly wary. \n\nYou see, I didn't have the greatest track record with women. I'd had two serious relationships since high school. The first ended when she told me in no uncertain terms she wasn't going to wait on me while I was in service.\n\n\"I'm nineteen. You may not come back. I don't want that future of uncertainty. I care a lot for you, and if I'm still single when you get back maybe we can start up again.\"\n\nWell, I hated it but understood it. We did hook back up when I got home, but we had both changed and the magic wasn't there anymore. We recognized it pretty early and parted friends.\n\nThe second I met in college. She was the star of the volleyball team. Tall, muscular, attractive, and the most arrogant woman I'd ever met. Someone told her she was special once and she believed it for the rest of her life.\n\nThe volleyball team was back to back national champions, in a school where the basketball and football programs sucked. It made her queen bee, and staff and students alike kowtowed to her every whim. Everybody in town knew who Cindy Tolliver was.\n\nI wasn't a troll either. Six one, thanks to my military training and job I was solid as the rocks I lay, even had an impressive six pack, not that I ever took my shirt off except when I was working. Sandy brown hair with hints of red from being outdoors so much, and blue eyes that were so pale they were almost gray. Also thanks to being outdoors so much I had a perpetual tan. The beauty of dry wall construction is you can do it even if it's cold, because you don't have to worry about mortar setting right, so we worked year round unless the ground was so deeply frozen we couldn't set the stone properly. I took most of my classes in the winter.",
        "Cindy was so used to getting her way it shocked her when someone actually refused her. It so happened that day I was the one refusing.\n\nWe were at an popular off campus bar and grill. The food was good, reasonably priced, and at happy hour it was really packed. I was sitting at a large table alone, everything else was taken by the crowd. They had really good food, and I was about halfway through a great cheeseburger when she and her entourage entered. Two more women and four guys. Looking around she soon recognized that I had the only empty table. She came over.\n\n\"My friends and I need a table, and you've got the only one available. Would you mind giving it up so we can sit?\"\n\nShe was giving this big fake smile, assuming I would be happy to disappear for her pleasure.\n\n\"Yes,\" I said, with a smile, before continuing my meal. She assumed yes meant I'd leave, but yes meant I did mind, so I continued eating. After a minute or two she snorted.\n\n\"Are you gonna leave or what? We're waiting.\"\n\n\"When I'm finished or a smaller table comes open, I'll give up the table gladly. Or, seeing as how I have so much room, you could all join me.\"\n\n\"You could go stand at the bar\" one of the guys said loudly, puffing up a little. I grinned.\n\n\"Boy, don't you know standing while eating makes your feet bigger? I'm already having a hard time finding a decent fourteen, I don't need to push it.\"\n\n\"Maybe I should make you go,\" he snarled. He looked to be about five ten and in pretty good shape, but his posture and attitude told me he had no skills.\n\nI looked at him for a moment before taking a big drink of my tea, eating a few fries, and sighing.\n\n\"All right, I see three possible outcomes here. One, you kick my ass, and people think you're a jerk for starting a fight with somebody minding his own business.\"\n\nTwo, I stomp the dog shit out of you in front of your friends, which everyone will think you deserve for being a first class asshole.\"\n\n\"Or three, you could leave me alone while I finish the last two bites, and I'll be on my way. Why don't you let your friends sit while you go order a round of drinks? I'll be gone by then.\"\n\nHe puffed up. Cindy had been watching the exchange in amazement. She held up her hand.\n\n\"Stop it, Brian! I think it might end badly for you if you don't. Do like he said, order our drinks. We'll be right here, IF this gentleman is willing to share.\"\n\nBy then I was done. I stood up, pulling out the chair for the girl nearest me.\n\n\"Please, take the table. I'm done anyway. Enjoy your evening.\"\n\nI reached behind the column near the table and got my cane. My foot was in a cast, the result of a too eager apprentice trying to show off for me. He ended up dropping a sixty five pound stone on my foot, breaking two bones. That's why I needed the table, I couldn't stand at the bar. Her eyes widened.\n\n\"Please, stay and let us buy you a beer.\"\n\n\"Thanks for the offer, but I have to decline. I can't drink right now because it would interfere with my medications.\"\n\nBrian came back, saw the cast, and smirked. I knew then he thought I'd be easy. Sure enough, he followed me to my truck.\n\n\"You think a cast is going to save you? It just makes it easier. I'm gonna...\"\n\nI heard enough, so I turned, wincing at the sudden movement, and drove the point of my cane right into the soft tissue above his groin. He dropped like a rock, making a sound that resembled a balloon deflating, pissing all over himself. I turned back to my truck.\n\n\"Don't get up until I'm out of the parking lot. If you do I'll take it to mean you intend to do me harm, and you won't like my response. Grow up, pussy boy, before someone not as patient as me gets hold of you.\" He was still lying there when I hit the street\n\nI didn't know it, but Cindy and her friends had noticed him missing and had come out to save me. They managed to witness our little discussion. They pulled Brian up, dusted him off, and Cindy pumped every one in the restaurant for information about me.\n\n...\n\nCindy made it a personal quest to find me. She didn't have much luck because I took night classes mostly, and didn't socialize with the college crowd. I was older, much more mature and goal oriented thanks to my time in service, not looking for the 'college experience'.\n\nShe finally tracked me down by staking out the bar and grill. When I came in she stood, indicating an empty chair.\n\n\"Good, you're here. I've been saving you a seat.\"\n\nShe pointed at the only empty chair at the table. I looked around the room, there were other seats available and I was about to head for one when she placed a hand on my arm.\n\n\"Please,\" she said, a word she didn't use much, \"just for a minute. We owe you an apology. Brian was an idiot, one of the many reasons he doesn't hang with us anymore.\"\n\nI thought I detected sincerity in her voice, so I sat.\n\nTo my surprise, I discovered she and her friends weren't air headed jocks. One was a political science major with a good job offer from a lobbyist group when she graduated, another was prelaw and had already been accepted by Yale, and the other was going to work for her father after she got her MBA from Wharton.\n\nCindy was majoring in sports psychology, a degree she would use after her career as a pro volleyball player was over.\n\nIt was refreshing watching them fend off admirers while debating the profitability of new sports in context to their futures, asking my opinion from time to time. If I could, I answered their questions, if I couldn't I said so.\n\nI told them I was too busy running my business to watch many sports, especially the newer extreme types. This led to questions about my occupation, especially from the business major. \n\n\"Wow, talk about a niche market. Is it good money? What's your business plan? How much market do you control?\"\n\nI held up my hand to stop her.\n\n\"It's excellent money. I'll probably never be filthy rich, but I'll be very comfortable. My advertising is by word of mouth, and my type of work is not affordable to everyone, I work on multimillion dollar properties most of the time. Right now I have two big projects going for developers, plus the restoration contract for the state college system. With the crews I have now, I'm booked almost two years out. And I fly out tomorrow to talk to the college system two states over, to do the same thing for them I'm doing here. With the crews I have now, that would add another two to three years work. I'll probably interview and hire a few local masons there, to start the project in a timely manner. Even when the economy went bad, since I tend to work for the wealthy, I still had steady work.\"\n\nAll of them sat back, surprised. Becca, the business major, was the first to speak.\n\n\"Wow. I'm in the middle of a paper on the viability of niche businesses. I think I'm gonna scrap everything I already have and do one solely on your business, if you'll let me. Please?\"\n\nI thought about it for a second and grinned.\n\n\"Sure, it'll be more free advertising for the business. Just a warning though, a lot of the work is away, so you may have to travel if you want an in depth analysis.\"\n\nShe grinned. \"Not a problem. One of the perks of having rich parents is available funds, especially if I tell them it's school related.\"\n\nCindy frowned at the idea of her following me around but wisely said nothing at the time. I found out later she tried to talk her out of it. Becca refused.\n\n\"It's a good opportunity, Cin. The report will really look good on my application to Wharton. And I don't plan on hooking up with him.\" She smirked a little before continuing. \"What he plans may be a different matter.\"\n\nLet's face it. She was a beautiful, determined woman used to getting her way. I was more laid back and nonconfrontational, tending to flow along unless it went against my values. The inevitable happened and we slept together, starting a pretty intense two year relationship.\n\nI led her on a good chase, recognizing early the only way to keep things equitable was to keep her off balance. If she got too comfortable her 'my way or else' side came out.\n\nI spelled it out to her.\n\n\"You may be the queen at school, but you're just another girl to me. Oh, you're beautiful, and I am attracted to you, but I'll never be your flunky. I look on serious relationships as a partnership, with give and take, each with their strengths and weaknesses. In a perfect relationship, the weaknesses and strengths should balance each other, each partner taking the lead from time to time as needed. Understand?\"\n\nShe gave me a smile that was half smirk. \"Oh, I understand. And I intend to be your queen before we're done, just as you'll be my king.\"\n\nIt was the words I needed to hear, so for eighteen months I climbed the mountain, only to discover there was nothing at the top but a sheer cliff.\n\n...\n\nI believe she would have been willing to sleep together on our first date if I had pushed it, but I made her wait, part of my plan to keep her off balance. We got pretty involved with hands and mouths, but I always stopped short, frustrating her badly.\n\nShe finally got tired of it. One night, when I led her right to the brink and stopped, she exploded.\n\n\"Damn it, Bandit! Time to man up and do me. What's wrong, don't think I'm any good? I can give you some references. Or is it that you're afraid you won't be man enough to please me? Don't worry, baby, I'm willing to train you just the way I like.\"\n\nI think she knew she'd overdone it, judging by the look on her face. She started trying to apologize but I cut her off.\n\n\"Don't worry about it, Cin. I've already had a few of your references describe in great detail how skilled you are. I'm not nearly as EXPERIENCED as you are, but I've never had any complaints. It's so kind of you to offer to share your expertise with me. Just like your volleyball, the more you practice, the better you are. And we already know how good you are at that.\"\n\nI paused, thinking I may have overstressed 'experienced' just a bit. \"And as kind as your offer is, I think I'll decline. You have a good night, now.\"\n\nShe was begging and pleading as I left her apartment, even trying to physically stop me. She was a big girl, strong, but I had been lifting rock for too many years, and I easily broke her hold.\n\nI didn't see her for two weeks, despite her calls, texts, and emails. As it happened, I was on a deadline and had to work through the weekends anyway. Her last two emails were kind of nasty, she wasn't used to rejection and didn't handle it well.\n\nBack in town, I ran into Becca, the business major, and Carol, her prelaw friend, at the bar and grill. I was sitting by myself when they plopped down at my table. Carol had a big grin on her face.\n\n\"So is it true Cindy dumped you?\"\n\nBecca saw my face tighten up and snickered. \"Look at his face, Carol. I bet if truth be told, he dumped her. Isn't that so, Jess?\"\n\nI assumed a bland demeanor. \"I'd say it was a mutual parting. Let's just say our ideas about relationships were just too far part.\"\n\n\"Ha!,\" she said, \"I'd guess it was more along the lines of her telling you to jump and you explaining how you didn't like hoops. Whatever it was, it shook her pretty bad. She's been a screaming bitch since you disappeared. Coach threatened to bench her if she didn't get her head out of her ass. Well, well, speak of the devil.\"\n\nCindy had just entered, a basketball player on her arm. She looked at us sitting together and snapped. Leaving the basketball player in the dust, she stormed up to us. He trailed behind, trying to take her hand. The second time, she snarled at him. \"Let go of me! What part of just friends didn't you comprehend?\"\n\nThe look on his face told me that wasn't exactly what she'd implied. \n\n\"What the fuck, Cin? Why are you mooning over this redneck? He was already dumb enough to dump your ass once already. He's a loser, I bet he could never keep you in the style you deserve, like I could.\"\n\nBecca almost fell off the chair laughing.\n\n\"What is it Bugs Bunny used to say? Oh yeah, 'what a maroon.' You're not even out of school yet, and your chances of making the pros are thin at best. Depending on your major, it could be years before you make decent money. Right now, Jesse owns his own very successful business, and has for years. He makes well into six figures and it goes up every year. Not bad for a redneck, huh Dustin?\"\n\nHe was about to make an angry retort when Carol jumped in. \"Dustin, whatever you're thinking, stop. Look at him, he didn't get those muscles in the weight room. He's also done two tours of combat, so he knows how to hurt and kill people. Probably wouldn't bother him to take you apart and put you back together again a foot shorter. Maybe you'd like to sit at the bar while he and Cin talk? Come on, Becca and I will keep you company.\" They led him off, complaining. Cin plopped down and just looked at me for about three minutes before speaking.\n\n\"The worst thing about people spoiling you is it works. I know I'm arrogant and a total control freak. I know I can't stand to be told no. But, Jess, I'm a good person. I'm in college damn it, surely you know I can learn. Can we start over?\"\n\nI sat, considering. She was one of those people that couldn't appreciate silence, so she started again.\n\n\"I'm sorry about the other night. I'll admit, I've never gone without sex so long since I entered college. I've been brainwashed into thinking I was a great gift, and should be appreciated as such. I know I'm just a girl. A pretty girl, but there are plenty of prettier, better built, smarter, more understanding girls around. Becca and Carol, for instance. They've made no secret that if we're really through they were interested.\n\nBut they'll never love you like I do, Jess. They'll never melt the way I do when you touch them. If you want to wait, I'll wait. You set the pace. I'll follow.\"\n\n...\n\nNinety minutes later we broke her bed. We rode it down, laughing. I even kept stroking because she was almost there, again. We finally collapsed together, the bed sagging around us.\n\n\"Sorry, babe,\" I said, lightly stroking a nipple on her small, muscled breast. There wasn't an ounce of fat on her anywhere. \"I'll buy us a new one tomorrow. A new suite, if you want. Think the store would let us stress test it first?\"\n\nShe raised up over me, her long hair falling into my face. Her expression was unreadable.\n\n\"Us? A suite?\"\n\nI brushed her hair back so she could see my face and know I was serious. \"Yes babe. Us. You know I stay with my grandmother when I'm home. I live in an RV most of the time, so it doesn't make any since to waste money on an apartment or house. So what I'm asking, in an incredibly awkward and roundabout way, is if you'd like to live together.\"\n\nShe cried, but I'm pretty sure there was a yes in there somewhere. We got up, took the broken bed apart, and slept on the mattress that night, when we slept. It seemed she liked traditional furniture, picking a massive oak, four poster bed, even insisted we bounce up and down on it a few times, while the saleswoman blushed and grinned.\n\nFour months later she wanted to see where we were heading. They didn't win nationals that year. She blamed it on me, saying I took her away from extra practice and kept her energy levels drained.\n\nShe was due to graduate, and had a very attractive offer to join a seasoned professional on the beach volleyball circuit.\n\nIt paid fairly well, but she explained the money was more in the endorsements, personal appearances, and television. She wanted to do it for three years, to save enough to continue her schooling all the way through the PhD level.\n\nAfter several long talks, we decided the most sensible thing was to get married. She actually fainted when I popped the question and gave her the ring.\n\nWe decided to wait until after her first year on the circuit to marry. I was hoping by then she'd have enough and quit to concentrate on her schooling. I could afford to pay for it. She came from a single parent home and her father couldn't afford to help her.\n\nWe spent a glorious month together. She traveled with me from job site to job site, experiencing the cities we were in while I worked, then concentrating on keeping me drained and weak every night. For the first time in my life I struggled to lift the larger rocks. My crew snickered and told me if I slacked up on after hours exercise I'd get my strength back.\n\n\"That's why I pay you flunkies, to do the heavy lifting. No way I'm giving up my exercise program. Now, get those rocks over here.\"\n\n...\n\nIt really sucked when she left. She clung to me and cried like a baby. I had to almost pry her off me so she could make the plane. It was really hard because I didn't want her to go.\n\n\"If you don't like it honey, come on home. You know I have the money for your schooling, so you don't have to worry.\"\n\nShe sighed and hugged me tighter. \"All my life people have taken care of me. My Dad. Then the school. Now you. Just once, I need to prove I can take care of myself. Besides, I signed a contract. I HAVE to do this season.\"\n\nI didn't like it, but I understood.\n\nThe first year was rough for both of us. She did really well, she and her partner were first runner up in the points standings. As they won more, their money increased. I watched her on television, and really didn't care for the almost thongs they wore.\n\n\"It's in the contract, honey. The maker has offered us an advertising campaign because of our popularity. It's a nice number honey. You don't mind, do you?\"\n\nHow could I not support her? It took time away from us but we dealt with it. It got to the point we were only together about once a month for three days. I was counting the days until the end of the season.\n\nShe came home, and we tried to make up for lost time. Mom was hinting around about grandchildren, seems my sister and I had something in common. We both liked girls. That explained why she hung out with us so much, she was looking to hook up with some of Cindy's friends. Two of her teammates were gay, and another was openly bisexual. Beck managed to hook up once, but they parted because neither was wanting to settle down. She eventually found a nice, quiet girl, and they married. Besides nagging me, after she got over Becky's choice, Mom started hinting to her to either adopt or go invitro. They were thinking about it.\n\nAfter four glorious weeks, she became moody. I took it as long as I could before I confronted her.\n\n\"What's going on, Cin? Don't try to blow me off, we're going to sit right here until you tell me. \"\n\nShe hemmed and hawed around a bit before she told me. \"I signed a contract for another season. They've doubled our money, and the exposure is worth a lot more. I'm sorry honey, but I have to do this, for me. Please don't be mad.\"\n\nI wasn't mad, I was furious. We bickered away most of the time before she left.\n\n\"Why can't you be more supportive? Just this year. I swear to you.\"\n\n\"I am supportive. All last year. You made promises then, remember? So much for your word if money is involved, I guess.\"\n\nWrong thing to say. She went into a screaming fit. I only half listened to the rant, and about ten minutes in she realized I wasn't hanging on every word. She stopped immediately. In a quiet voice she tried again.\n\n\"I guess I deserved that. Tell you what, I'll write up a contract. If I don't stop next year the marriage is off. Please, Bandit, this really means a lot to me.\"\n\nI just looked at her. \"A contract isn't necessary. If you don't stop next year, I walk away. Do you understand?\"\n\nShe paled a little and made a bunch of promises. Promises she didn't keep.\n\n...\n\nThey did even better at the start of the next year. Her partner, Jan, called, thanking me for letting her play.\n\n\"This is my last year on the tour, so unless she finds a new partner she's done too. I plan to teach, already got a job lined up as a high school math teacher and volleyball coach in a little town in California. I've always been a beach girl. Maybe I'll find a nice quiet guy and get married again. Then again, if we had an agreement like you guys, maybe I'd still be married.\"",
        "I didn't know she was divorced. I knew she was married, and that he didn't like her being away. When Cindy told me that I gave her a pointed look. She got the hint and shut up.\n\n\"What agreement, Jan?\"\n\nThe way I said it made her pause. \"Oh you know, the understanding you have.\"\n\nI let the silence stretch and she got nervous. \"I'm sorry, I wasn't being clear. I didn't mean an understanding, I meant your understanding. She's really lucky to have you. Gotta go. Watch for us on the television.\"\n\nThe whole conversation left me a little uneasy. The first tine she was home, I asked her about it.\n\n\"Don't worry about it, honey. She's been a little scattered since her divorce. I think it hurt her more than she'll admit. Believe me, I'll not make her mistakes. I love you too much.\"\n\nWhen I asked her what kind of mistakes, she was a little vague. I pushed and she finally admitted she'd had an affair with one of the men on the tour, and her husband found out.\n\n\"I'll give you my word, honey, I'll never hurt you like that. I have too much to lose.\"\n\nThe sex those three days were frantic. I asked her about it and she told me she was trying to get enough to last the month. The next break she could only stay with me for two days because she had a shoot scheduled for the bathing suit company. Seems they had a sportswear brand in addition to the swimwear, and had all kinds of sports figures on contract. I'll admit the shots were well done, but the swimwear made me uneasy. This time it really was a thong, and she and Jan were paired with two up and coming golfers, Steve something and a young Spanish player named Juan Pablo. The men were in tight speedo type suits, and there were a couple of shots where the girls were entwined with the golfers, thong back and topless. I was not happy, even though there was not even a hint of breast.\n\nUsually she called every Monday and Tuesday, but I never heard from her, even though I called and left six emails. The next week, I returned the favor, not answering the phone any of the ten times she called. She was home the next week, unscheduled, in a fury.\n\nAfter she ranted and raved about me not answering, I told her I was just following her example. A lot of frustration came out from both of us, ending abruptly when I told her to shove her Spanish boyfriend right up her almost naked ass.\n\nShe went so pale I thought she was going to pass out. By then I'd reached my limit with her, so I got up and left. Two days later she tracked me down to a job site, and begged on her knees for a chance to talk. Cin spent two days telling me there was nothing there, and if I was that unhappy she'd never do another ad. She swore on everything she could think of she was quitting for good when the season was over. Looking back, it was like she was reading from a script, but it was the right words at the right time, and I believed her.\n\nShe did two more shoots, both times with the golfer, wearing casual wear once and more modest swim suits the next, and in no picture were they in physical contact.\n\nIt all started unraveling when I needed a set of tires for my truck, and went to a dealer in the town I happened to be working in. It took over an hour, so I walked across the street for lunch. After lunch, I had to wait another ten minutes before they were done, so I looked at the magazines, casually glancing through. It was an golf magazine, two weeks old, that caught my interest. There was a profile of Juan Pablo, showing him on and off the course. The picture that caught my eye was him sitting in the stands watching beach volleyball, then kissing one of the winners. The article quoted him as saying he went to every one his schedule would allow, to support his girlfriend. You guessed it, the player was Cindy.\n\nI was beyond pissed. I deliberately missed her calls, and flew to her next match. She and Jan always roomed together, and I got there about seven. Jan answered the door, and paled when she saw me. Cindy wasn't there. I called her in front of Jan. She sounded happy to hear from me.\n\n\"Hi honey. Where have you been? I was getting worried you may have replaced me.\"\n\n\"I could never replace you hon. Did I catch you at dinner?\" I could hear noises in the background. \n\n\"Yes you did. Jan and I are in the hotel dining room. The food is actually pretty good.\"\n\nI managed to chat her up for a few minutes while Jan got progressively paler. I hung up and smiled at Jan.\n\n\"Jan, did I ever tell you I was in the Army? I spent two years in the desert, killing people as often as I could. I won't kill you Jan, but if I don't get the truth out of you right now, I'm going to break your wrists and your knees. You'll live, but you'll never be able to walk right again, or use your arms like you used to. Nobody needs a crippled volleyball player, or coach. I'll got to jail, for sure, but not before I get to Cindy and her Latin lover. Your choice, but if you choose the easy way, now would be a good time to start.\"\n\nWould I have done it? No, but I was really pissed at the time. Jan must have thought I was serious though, judging by the terrified look on her face. She was talking so fast I had to make her slow down.\n\nIt started at the end of the first season. Not with him, but another volleyball player. No love, she said, just releasing tension. She admitted doing the same thing, until her husband caught her. She begged, but the deed was done, and he divorced her. Cindy hooked up with Juan at the first photo shoot, seems rubbing so much skin against each other was just too much to handle.\n\n\"She told me you were cool with it, Jess. Said you were doing the same thing. Said you guys came up with an agreement. She was free to satisfy her urges, and you were doing the same while you traveled for work. She also told me it was all going to end when the season was over, and she talked constantly about how happy she was going to be when you guys got married.\"\n\nShe hung her head, saying she knew now there was never an agreement.\n\n\"Where is she now?\"\n\nHer eyes got huge. \"Please Jess, let me call her, get her back here so you guys can talk. I'm sure you can work it out.\"\n\n\"Tell me right now, or you'll have at least broken elbow to add to your injuries.\" I stood up and she shrank back in terror. \n\n\"They're in his hotel across town. He's playing a tournament here.\"\n\nShe gave me the room number, saying they might not be there, they may be out dancing. I got her by the throat, backing her to the wall, putting my face against hers.\n\n\"If you warn her, I'll come back, and I'll be even more pissed. We understand each other?\"\n\nShe actually wet her pants at the end, nodding so fast I was afraid she was going to injure herself.\n\nI was in the lobby, watching them come in arm in arm and head for the elevators. I had the room number and could have waited, but I knew what they were doing so I couldn't see the point of waiting for them to get naked. I gave them three minutes and kicked the door in. \n\nThey were locked in a kiss, the top of her dress dangling at her waist, his shirt unbuttoned and loose. She looked over, recognized me, and almost fainted. He was just buzzed enough to try being macho. I shut him down pretty fast, twirling him around and locking his arm.\n\n\"Stay still motherfucker. Struggle and your elbow gets broke. Understand me? Good. Now tell me how long have you been fucking her, and if you lie, I'll know.\"\n\n\"Three, maybe four months. It don't mean nothin', man. Take it easy.\"\n\n\"So you've been fucking for that long, knowing she was engaged, and you thought that was all right? I read you've engaged, and she's waiting for you back in Spain, wonder if she would think it's nothing? Let's call her and find out.\"\n\nHe was begging by this time. Cindy had put the bed between us and had managed to get her dress back into place. She still hadn't said a word.\n\nI figured I was running out of time, there had been people in the hall and I wasn't exactly being quiet. I let go and he stood up. I punched as hard as I could into his rib cage, cracking two. Try to swing a club now, motherfucker.\n\nHe collapsed on the floor and I looked at Cindy. \"Keep the ring. It doesn't matter to me any more. Come back when you've got the nerve, and I'll have your things packed. Don't bother trying to talk. We got nothin' to say to each other, not any more.\"\n\nI walked out the door, took the elevator down, and got the manager. I apologized, saying I had always been clumsy and fell into the door of Room 418, explaining that my girlfriend and I were going to visit, and he was standing behind the door and may be hurt. I gave him a credit card number, telling him I would be glad to pay for repairs and any medical bills. He wanted me to stay but I said I really needed to catch a plane, and he could call if he needed me. He could just ask my girlfriend for my number.\n\n...\n\nI heard about it the next day, when I watched a little of the tournament he was playing in. The announcers made a big deal of his injury, saying it might just keep him out until the end of the season, explaining it was just an accident among friends. The rumor mill in both sports started grinding right away, and he used his injury as a reason to fly home. The next season the announcers speculated on his new single status.\n\nI hadn't said a word to anyone, but a lot of the other golfers and announcers stayed at the same hotel, and it was impossible to keep it quiet.\n\nJan and Cindy did poorly the next three outings, losing in straight games each time.\n\nAt the end of the season, Jan actually did retire, but Cindy signed with a new partner fresh out of college. She played four more seasons before she quit and actually got her PhD.\n\nShe tried for about three months to get me to talk to her, telling my mother she was flying in and we were going to talk if she had to force me. Mom laughed and dared her. She never came.\n\n...\n\nSo there you have it. Not very original, the same thing probably happened a hundred thousand times every day around the world. But it was my world that got destroyed. For two years I had a deep mistrust when dealing with a woman. Then I met Melody, and light came back into my life.\n\nLike I said, she was a trauma nurse in the local hospital. Twelve hour shifts Monday, Tuesday, and Wednesday, and on call every other week. I thought it was fate, because all she did was work, and I was usually out of town at least four days, so our off time usually matched.\n\nWe started out slow, a few dinners, dancing at better clubs than the bar we met at. Saw a few chick flicks, went to a museum, a baseball game, she was pretty much up for anything. But then again, all she had to do was bat those big beautiful eyes and I fell all over myself trying to please her.\n\nWe never saw each other on the days she worked, although she would always call me whenever she got a break. She lived with two other nurses, and said they'd made an agreement never to bring their boyfriends home.\n\n\"One of us is always working, another is usually asleep, so we keep you guys out to keep the distractions down. Plus last year, before we made the rules, one stole a boyfriend while another slept. I had to replace both of them. So no guys, baby, rules are rules.\"\n\nWhen we finally got physical, it was everything I hoped it would be and more. She was flexible, skilled, and threw everything she had into it. She was twenty seven at the time, at her peak, her body both soft and hard in the appropriate places. And she liked it a little rough. Her favorite position was me pounding her doggie style, her hair in my hand, pulling back so hard she had to arch her neck. Other times she liked me taking a breast in each hand, twisting her nipples and tugging them out. She'd gush a river. And when we went at it soft and gentle, mostly missionary, she would tear up, every time.\n\nWe were together almost from the time I would get back from a job until she had to go home to get ready for work. I got tired of renting motel rooms, and put out feelers. In my business I had made a lot of contacts, so when I asked people to keep an eye out for a house, at least three bedrooms on a large lot, I got a good bit of ribbing.\n\n\"Someone finally caught you, huh? Good for you.\"\n\nThat was a pretty common theme. I'd just smile and show them a picture. Then the comments pretty much ran along the lines of lucky bastard.\n\nOne interior designer took me to task. \"Idiot. Don't you know ninety nine percent of the time, the woman picks the house? Might want to keep her in the loop.\"\n\nI took her advice, and armed with inside information about houses that were in distress, or a homeowner looking to unload one due to the economy or a divorce, went looking. Using the excuse I wanted to spend as much time as possible with her and needed a woman's viewpoint, I took her along.\n\nShe wasn't really impressed with the first five, but the second weekend we walked into a four bedroom on three acres on the edge of town.\n\nShe walked around the house, touching the appliances, really liking the large kitchen. She loved the floor plan, which put the master bedroom on one side of the house away from the others, allowing privacy. We had to walk the entire three acres, discovering a little spring, and she actually touched a few of the bigger trees.\n\n\"What are you thinking about?\"\n\nMel looked at me, misty eyed. \"Treehouses.\"\n\nI took a day off the next week and started the paperwork. I'd gotten a really good deal. They had just started foreclosure, and were happy to avoid the process. The owner had abandoned it that week, leaving for parts unknown. \n\nFriday had us back out at the house. We walked it one more time. I asked her if she thought she could be happy living here.\n\n\"I'm sure I'd love it. Why the question?\"\n\n\"Because we bought it Monday. I'll need you to pick out new furniture. Sound all right?\"\n\nBefore she could answer me I dropped to a knee. \"I hope you like this house. I intend to live in it for a long time. A long time with you by my side. I'd like to have to utilize one or two of the bedrooms sometime down the line. All you have to do is say yes.\"\n\nI held out the ring. A traditional, simple ring with a nice size rock on the top. She surprised me by swooning against the kitchen counter.\n\nMelody recovered quickly. Tears were in her eyes. I didn't get the answer I was expecting.\n\n\"I love you, Jessie. But I can't marry you right now. I'm begging you to give me some time. I have things I need to do before I accept your proposal. Please, and I'm begging here, give me six months and ask again. I promise the wait will be worth your while.\"\n\nIt was not the answer I was expecting, and I was terribly disappointed. She tried her best to reassure me, to the point of taking me shopping the next day, for furniture. She didn't have a preference as long as it was sturdy. We bought a master bedroom suite with a California King bed, a sectional sofa, a love seat, and a rocker for the living room. I looked at her as she sat in the rocker. She grinned.\n\n\"This might be nice to have, a year or two down the road.\" The simple statement filled me with hope. I gave her a credit card, telling her to buy what she thought we needed.\n\nI took Melody to meet my family. Mom and Becky liked her instantly. Grandma wasn't as enthused. My younger brother practically drooled on her, and my stepdad just grinned. I took it as a good sign.\n\nI came in the next Friday, going straight to the new house. She had added a nice dining room suite, and had outfitted a guest room. Her car was outside, but I didn't see her. I found her, gloriously naked, on the California King. She slid across the bed, reaching for me.\n\n\"I was about to start without you. I want to christen every piece of furniture, every foot of space in our new home. Next weekend we'll do the yard.\"\n\nI tried, I really did, but all we accomplished that weekend was the bedroom and the dining room table. She laughed, saying she'd have pity on me, and we'd do the guestroom and the living room next week.\n\n...\n\nThe next weekend I was at the bar waiting for her, happier than I'd ever been in my life, when the guy walked in and slugged me.\n\nWhen she disappeared, I had a few more drinks with my friends, leaving early for my new house, to wait for the love of my life. \n\nTwo shots rang out as I walked out to my car. They hit the car two spaces down. Still came close enough to scare the shit out of me. Instinct had kicked in and I had dropped and rolled behind an SUV.\n\nI could hear the guy as he approached, crying and swearing as he looked between cars. I rolled under the SUV, popping up and running in a crouch to the next line of cars.\n\n\"Come on out, motherfucker! I'll make sure you never screw over another husband.\" The voice shook with rage, and I could tell he was pretty drunk by the slurring. I got a look at him as he passed under a parking lot light. It was the guy who punched me, so I knew this wasn't random, the guy was after me.\n\nMy stepdad had a saying, 'never leave a live snake behind you', so I hunkered down and waited. He was almost level with my hiding place, looking in the other line, so I tossed the shoe I had slipped off gently behind him. The slight noise made him twirl, and as soon as his back was turned I was all over him.\n\nI grabbed the hand that held the pistol, yanking back, hard. The pressure made him release it, and after that I kicked the shit out of him. He never got a lick in.\n\nRealizing if I didn't stop soon I'd kill him, I let go and got up. He was out cold, so I picked him up, threw him in the bed of the truck, and started driving, ending up in front of an abandoned barn in the middle of nowhere. He was starting to come round when I dropped the tailgate and dragged him out by his feet, listening to his head hit the gravel as he fell. It knocked him out again. He came around when I threw some water that had been sitting in a cooler on the back of the truck in his face. He swiveled his head, eyes widening in terror when he realized he was tied up. I had no intention of killing him, but I did want to scare the shit out of him. I held up the pistol.\n\n\"A .32? Really? 'Bout all you can do with a weapon like that is piss people off. I know it did me. Now I'm gonna talk, you're gonna listen and nod your head. When I'm done you can talk, and it better be good, because right now I have an urge to stick this peashooter up your ass as far as it will go and squeeze off the last three rounds in it. I hear it's a particularly painful, ugly way to die. Now's the time for you to talk.\"\n\nI had to hand it to him. Ass beat, tied up and helpless, he still glared at me. \"What do you want me to say? I'm okay with you fucking my wife? Not gonna happen, ever. And sooner or later you won't be watching, and I'll get justice. Best you just kill me now.\"\n\nI looked down at him. He should have been terrified but he wasn't backing down. Made me kind of admire him. I grabbed him, sitting him down on my tailgate, and held him by his shirtfront as I methodically slapped him. \"I (pop!) ain't(pop!)fucking anybody's wife, (pop! pop!). what do I have to do to get you to leave me alone? The humor has gone out of this situation pretty fast. The .32 up your ass it looking better and better.\"\n\n\"Back pocket,\" he gasped. \"Get my wallet out. Tell me that isn't Melody in the picture. If it's not, I'll apologize and you can do what you want with me.\"\n\nI can't describe the feeling that went through me when he said her name. Denial was raging through my head as I pulled the wallet out, already knowing what I was going to find. It was her, younger, a little thinner, smiling into the camera as she posed, in her wedding dress, with her husband. Sighing, I sat down beside him.\n\nHe actually looked pleased. \"Is that her, motherfucker? Never mind, I can see by the look on your face it is. You really didn't know, did you? How's it feel? I hope it sucks as much for you as it does for me.\"",
        "We talked, and after fifteen minutes I let him go, pulled the bottle of straight rye whiskey I'd picked up earlier for the bar at my new house, and we proceeded to get drunk. I woke when the sun hit my face, sitting up to see him holding the .32 and staring at me. Fear shot through me as he grinned. He lay the pistol in the tool box.\n\n\"You're right. It ain't much of a weapon. Still, I'd hate to get shot by one.\"\n\nSo we had another talk, again on the tailgate of the truck. I apologized again, surprised when he brushed it off. \"I always knew it was coming. Sooner or later, the age difference and the fact that we liked few of the same things was going to come into play. That and the fact that I'm gone every weekend. She had plenty of time to play.\"\n\nWell, that explained her free time. He was an over the road trucker, specializing in hazardous loads that were best moved over weekends and at night to avoid as much traffic as possible. It paid really well, but kept him away from home Thursday night until Sunday night.\n\n\"What are you going to do?\"\n\nHe looked at me in surprise. \"Divorce her, for sure. She's yours now, if you still want her.\"\n\nI had drunkenly confessed my marriage proposal to him. I shrugged. \"How could I trust her? This is the second time something like this has happened to me. No, we're done. It hurts, but I know from experience it can be gotten over.\"\n\nI drove him back to his car, reminding him to get his pistol as he got out. \"You keep it. I don't think I need it around, reminding me it could have gotten me killed.\"\n\nAs he got into his vehicle, I asked him again what he was going to do. \"You're lucky. You get to just walk away. I have to go through a divorce. Gonna try to keep it simple, no fault, you go your way and leave me the hell alone type deal. No kids, so it shouldn't be messy.\"\n\n\"If it does, get in touch, tell her you're going for adultery and I'll appear as a witness for you. That might make it easier.\"\n\nHe looked up in surprise, and slowly held out his hand. I reached out the truck window and shook it.\n\n\"Sorry, dude,\" he said, as he cranked up and drove away. I watched his tail lights disappear. \"Me too,\" I said to empty space, before going in the opposite direction.\n\nI went over to Gram's house, got into the RV and drove away.\n\n...\n\nI wasn't hiding from anyone, but I knew I needed to let a little time go by before I talked to her. It wasn't in my nature to hit a woman, but I wasn't above a little verbal slicing and dicing. I pulled in to a rest stop and sent her an email.\n\n\"Melody,\n\nI'm not running away, but you really, really don't want to be around me right now. Don't look for me. I'm out of town and will be until next weekend. I'll be taking this time to reflect on our relationship. You do remember it, don't you? The one based on lies? Give me a call next weekend, and if I can keep my anger in check I'll try to actually listen to anything you have to say. Don't expect me to believe a lot of it, though.\"\n\nShe sent me a short answer immediately. \"Thank you for at least agreeing to let me talk. There's a lot of stuff about me that you didn't know that I'd like to tell you. Unless you say otherwise, Ill be at your house next Saturday at four. And Jess, believe it or not, I do love you.\"\n\nI thought and brooded all week. My guys knew a little of what was going on, so they forgave me for being a flaming asshole for the first few days. As Saturday approached, my sense of dread increased.\n\nAt least she didn't dress up, or try to entice me into bed. She had on jeans and a simple top, and was still the sexiest thing I'd ever seen. I was actually pleased to see, even with make up, how red her eyes were.\n\nI didn't let her get past the kitchen, making her sit across from me at the kitchen table she'd spent two weeks trying to decide if it was the perfect one.\n\nShe started to speak but I held up my hand. \"Ground rules. Don't tell me how much you love me, don't waste our time with a lot of apologies. Just explain it to me. Why were you out hitting bars, hooking up with guys while you were married? Do you really think I can go forward, wondering where you're at while I'm away working? You could crawl out of bed with someone else and be all showered and fresh when you welcome me home, dragging me up to bed for a shot of sloppy seconds. Could you live like that if it was you wondering?\"\n\nTears came out, and she sobbed quietly for a few minutes before she got it together. The look of defeat was total.\n\n\"I've already lost you, haven't I?\"\n\nI didn't answer her, so she squared her shoulders, looked me in the eyes and started.\n\n\"I don't think it matters anymore, but I'm going to tell you anyway. I was raised dirt poor, the term 'trailer park trash' kind of sums up my childhood. Mom left before I was old enough to remember me, so I was raised by my Dad and two older sisters. I was an oops baby, born when both my parents were in their late thirties. My sisters were just hitting their teens when I arrived. Pop was a functioning alcoholic, and he never once, in the whole time he was alive, told me he loved me.\"\n\nShe sighed, remembering.\n\n\"He finally died of liver disease just after I turned eighteen. My sisters had families of their own then, one on her second marriage, the other on her third. So you see, there wasn't what you'd call good role models in my life. Then I met Jerry.\n\nI didn't love him, but I respected him, and I knew he'd take care of me. I just knew it would turn into love eventually. We were still doing fine until he took that job.\"\n\n\"I was bored, and lonely. He talked me into going into the nursing program at the community college, just to give me something to focus on. I don't think he ever expected me to graduate, and continue my schooling until I became a registered nurse. But for the first time in my life I had a purpose and a valuable skill. The ER job paid the most money, so I took it. It was intense, demanding, and left me little time to dwell on how my life was going. Jerry was making good money, so I banked most of my salary, intending it to be the down payment for a house.\"\n\n\"Things were still okay until they changed my hours. Now when he was home, I was gone. I made friends, who encouraged me to stop sitting at home and go with them for drinks, maybe some dancing. I still wore my rings, and nobody got to touch me, but it relieved my boredom. I know it doesn't make any difference now, but I was planning on leaving Jerry before I met you. Then I fell in love and lust, and had to have you.\"\n\n\"The first time you kissed me I knew it was over for me and Jerry. I still respected him, but I was never gonna love him. So I got a lawyer and started the paperwork. I was in no hurry, though, wanting to get to know you better. There was no inclination on my part to start a relationship with anyone until I was sure.\n\nI don't expect you to believe me, but I never slept with anyone else until you. You're only the second man I've ever been with, and that's the truth.\"\n\nShe pulled out some papers. \"Look at the date. They should have been filed months ago. I just didn't know how to tell him, and the guilt was eating me alive.\"\n\n\"That's why I wanted to wait, honey. I may not be the best person, sleeping with and loving you while I was still married, but there was no way I'd take your ring until I was a free woman. And I was going to tell you, soon. But I was going to wait until after I had moved out, and honestly, I was going to lie a bit about the timeline.\"\n\nShe had talked herself out, waiting.\n\n\"You know, I actually believe most of what you're telling me Mel, but there are still some sore spots for me. One, when you realized your feelings, you should have separated right then. Instead you, in my opinion, stayed with Jerry as a fall back plan, just in case I wasn't what you thought you wanted. And you had to still be sleeping with him, even while you were fucking me.\n\nHow do you rationalize that to yourself? Or me? But the big thing for me is even if we end up together, I still have to travel for my job. What happens when you get lonely? Will you be going out with your friends, maybe fall into the same situation again? Will I be like Jerry, lurking in parking lots to kill your new lover?\"\n\nHer tears got bigger as I talked. I let the air out of my lungs, trying to center.\n\n\"It comes down to trust, Mel. If I marry, it will be to a woman I trust heart and soul, one who will always, always, have our best interests at heart. And right now, you're not it. Honestly, I doubt you ever will be. But I'll make you this deal. Get your divorce. Let a little time go by, then give me a call, if you're still interested. Maybe we can start over. We'll see.\"\n\nThat was it. The final act. It took her ten minutes to get back under control. She wanted a kiss, which I refused. I did hug her, and she held so tightly I figured I'd have bruises later. She stood back sniffling.\n\n\"I understand, Jess, I really do. And though you don't have much use for my promises right now I'm going to make you one. Doesn't matter if we get back together, you will never, ever, find a woman that loves you more than I do. And one day, maybe years down the road, even if we're not together, I'll find a way to prove it to you.\"\n\nShe turned and left without another word.\n\n...\n\nWe only talked twice after that. I was too angry and she was too weepy to hold an intelligent conversation, but she was determined to try. \n\nFinally, she gave up talking directly, and started emailing me once a week or so. She tried to keep it upbeat and chatty, but for at least three months they all ended up with her pleading for another chance. I responded occasionally, if she touched a nerve.\n\nShe wrote to me about going into therapy, and how much it was helping her. She even talked Jerry into going with her twice, her only comment was that it was informative. \n\nShe started emailing less, maybe twice a month, Finally, seven months later, she stopped. I still have her last one saved, I can't seem to make myself delete it. \n\n\"My darling Jess,\n\nI know it bothers you when I use terms of endearment, but this is going to be my very last contact with you, so I'm going to say what I feel, even if you don't like it. I got the papers today. I'm officially a single woman again.\"\n\n\"The second best thing to ever happen to me(I will always consider meeting you the first)was going into therapy. I actually learned who I really was.\"\n\n\"I should have never married Jerry, but I was selfish and looking for a way out of my miserable life. I was too young, too immature, too stubborn to be in an adult relationship. Oh, I went through the motions, but my heart was never really in it. Even without you, my marriage would have died eventually. I think inertia and fear kept me with him.\"\n\n\"My time with Dr. Chu has taught me to throw away my crutches, and stand on my own two feet for the first time in my life. Jerry was shocked when I told him I wanted none of our joint assets, and sent him a check repaying him for my education. I owed him that much, and more. We didn't exactly part friends, but I don't think he hates me as much now.\"\n\n\"It's kind of funny if you think about it. Remember that lie I told you about living with two more nurses and the no boyfriend rule? I'm living it now, splitting a three bedroom condo with two more nurses. It works for me, even though I'm independent now, I don't think I could stand going home to an empty apartment.\"\n\n\"In honor of my divorce, I'm going to give you a gift. I'm going to let you go. Dr. Chu has helped me realize that if I were you, I'd have a hard time trusting me.\"\n\n\"So, I letting go. I hope you have a good life, and find a woman who loves you as much as I did, as much as I still do.\"\n\nMel\n\nI stared at the screen for a long time, finger hovering over the delete button. I didn't want to read it again. It hurt too much. I saved it instead.\n\nSo I wandered aimlessly through life. If it hadn't been for work, I would have probably have lost it completely. It took me almost ten months before I went on a date. She was a beautiful woman, the sister of a contractor I did a lot of business with. She was witty, articulate, and seemed to enjoy rubbing her body all over me while we danced. I really enjoyed the evening, but at the end, we both realized there was no spark at all between us. We actually went out twice more before she found someone else and we called it a day. \n\nI saw Mel twice during this time. Once, as I was sitting at a stoplight, I saw her through the window of a little bistro. She was with a group of women, smiling and chattering. I sat so long the guy behind me had to blow his horn to get me to move. Mel glanced up at the noise, looking straight into my eyes as I pulled away.\n\nThe next time was at a club. I was on my second date with Tina, and we had just been seated when I noticed her, sitting across the room with four of her friends. She must have felt eyes on her, because she looked up, seeing me. Time stood still as we stared at each other. Actually, it was about thirty seconds, before she burst into tears and ran from the club. Her friends chased after, all but one, who stopped at my table.\n\n\"Asshole! Did it feel good, rubbing another woman in her face? What the fuck is wrong with you?\"\n\nI was actually pretty calm. \"Hello to you too, Gwen. I don't want to belittle your point of view, but I'm not shoving anybody in anyone's face. It's been almost a year since Mel and I were together. This is a pretty small town, we were bound to run into each other eventually. Tell her I'm sorry if I upset her, but it's time for her to move on. Goodnight, Gwen.\"\n\nI turned back to Tina, ignoring her. She stood glowering for a few minutes before she walked off mumbling \"asshole\" under her breath.\n\nTina, naturally, wanted the whole story, so I told her. She looked at me and sighed. \"You might tell yourself it's over, but I saw the look on your face when you saw her. Even as we talk you're watching the door like a hawk, waiting to see if she comes back. And she's still in love with you, why else would an ex make her cry after almost a year apart? You guys need to clear the air.\"\n\nI didn't acknowledge her observation. We dated one more time before she met someone she was interested in.\n\nJerry had started hanging around my cousin's bar. It gave us both the same thing. It was the one place Mel would never enter again. He was actually a stand up guy. As we got friendlier, the guys would razz him for trying to kill me. I told them to lay off.\n\n\"He had right on his side. If he hadn't been quite so drunk, he would have been a lot more accurate, and I'd be just a memory.\"\n\nOne night, after quite a few beers, he asked me a question out of the blue. \"Do you miss her?\"\n\nI knew who he was talking about. There was no use trying to bullshit him. \"Every day.\"\n\nHe sighed. \"Me too, but not every day. Just time to time, when I see a mutual friend or go by a place we used to enjoy. I had a lot of years tied up in her. You know, I saw one of her nurse friends the other day, one of the few I liked, and we talked for a few minutes. She said they call Melody 'The Nun' because she won't date. She didn't blame it on me, she blamed it on you. Said you had messed her up so bad she couldn't stand the thought of being intimate with another man. She also told me she was in therapy, something I bet you already knew. One of her tasks she assigned herself was to write a letter of apology to everyone she had wronged. In my letter she called it 'purging the demons'. You get anything like that?\"\n\nI admitted I had, but didn't elaborate.\n\n\"Well, as bad as she fucked over me, I remember the good times. And there at the end, she stood up, admitting her guilt, heck, she even gave me the money back I spent on her nursing degree. I hope she finds someone else, someone who'll treat her nice.\"\n\nI grunted. Jerry had gotten lucky. The day his divorce became final, one of the dispatchers at his work asked him out. She was a few years older, a war widow, with a fourteen year old boy and a twelve year old girl. They were made for each other, shared the same views, the same beliefs, and he got along great with her kids. He was even an assistant coach on the girls' softball team. He went as far as nagging me and my cousin into sponsoring them. We actually took half the bar and went to a few games and cheered for her by name, embarrassing her no end. But the hug she gave him was genuine, and he looked so proud he could bust. We were already planning his bachelor party.\n\nI was happy for him, sad for me, watching the little girls play, wondering if I'd ever get to be in the stands, cheering my own kid. My chances were getting slimmer, I was thirty-two. My clock was ticking.\n\nSo I laid more rock, throwing myself into the business, growing it. There comes a time, though, when you can saturate your market. I was taking on more work than we could do, even after adding more masons. Gram and my sister got on me about it.\n\n\"Let someone else have the contract, Jess. Get caught up on what we have. If you don't our quality will slip, the kiss of death in this field. Think of Pop. You want his life's work to disappear?\"\n\nIt made sense. I stopped taking on more work, even farmed out a few of the smaller projects to competitors I knew would do a good job.\n\n...\n\nI got my business back on an even keel, but wandered personally. I ran into Becca, from college, when she asked me to come out and bid a job. She emailed me, using her married name, so I was surprised when I saw her. She was a little thicker, but still attractive.\n\nBesides being very successful in her own career, by her own admission she had married well.\n\nHe was loaded, seven zeros worth according to Becca. She held his arm while she told me this, embarrassing him no end. He was probably ten years older, and they had just had their first child.\n\nWhat they wanted was pretty elaborate, including a small stone cottage, destined to be a play house. She wanted it built like a Scottish shepherd cottage, one she saw while they were on their honeymoon. We talked, and I agreed to take the contract, if I could do it on my own schedule. I did take two apprentices and a journeyman, and started on the boundary and privacy walls.\n\nI did the preliminary work, laying the lines, selecting the stones. She wanted local field stone, a bit of a trick because there were no local suppliers. I got lucky, buying up some existing walls from an estate, painstakingly marking every rock so I could reassemble it on the new site. There was also a stone chimney on the property, the last remnant of the original house.\n\nI wandered over and looked at it, and saw an example of stonework at it's finest. Every stone, down to the flagstone hearth, shaped and fitted perfectly. It impressed me so much I had Becca come out and look it over, explaining my idea. She was all over it immediately.\n\nI built her a stone patio, with the fireplace as the centerpiece, complete with half walls tapering back in a vee that kept the heat reflected onto the sitting area. It was the perfect thing for cool fall evenings. She sent me a photo years later, of her three children and their friends sitting in front of the fire, roasting marshmallows, as snow fell around them.\n\nAn unexpected bonus came when I disassembled it, and found a hiding place beneath the largest hearth stone. It was actually a pretty common practice at the time, the only logical way to store valuables, fire being much more of a risk in those days. There was a wooden cigar box, containing a half full bottle of whiskey, still good because it was stored cork side down, two love letters from the 1870's and a wedding ring. There was a small bag that contained two silver dollars and assorted other change. The letters were from his lover, the one he bought the ring for, but he died in the fire before they married. Technically it was mine since I had purchased it, but I turned it all over the heirs of the estate, who fought over it for a little before donating it to the local historical society. It made the papers, and there was a rash of dug up hearths all over the county. If anyone found anything they didn't say.",
        "After I finished the project, Becca invited me to a party to show my work off. I went, for business purposes mostly. After all, most of their friends were pretty well off. I made a few connections, and ended up sitting with Becca as the party wound down.\n\n\"I still talk to her every once in a while,\" she said, out of the blue. I knew she was talking about Cindy. I hadn't really thought about her in years.\n\nWithout asking me, she pulled up some photos on her phone. Cindy had cut her hair much shorter than in college, and had probably gained thirty pounds. On her tall frame it didn't look that bad, but the tone I remembered was long gone. There was one of her standing next to a man that was a couple inches shorter. They had their arms around each other, smiling for the camera.\n\n\"Her second husband,\" said Becca. \"The first was a total failure, because both had affairs. A year later she met David when he brought her a client.\n\nThey ended up having coffee, which led to a date, which lead to the altar. She was in therapy also, and told him the truth, about you, her first husband, and how she didn't think she was good wife material. He convinced her, after a long engagement, that he was willing to take that risk, give her that trust, because he had no choice. He just couldn't see living without her.\"\n\n\"They eloped the next day. It's been a little less than two years, and they're inseparable. I believe she'll make it this time.\"\n\nI think I surprised her when I told her I was happy for her.\n\n...\n\nI thought about it later, and I decided I really was happy for her. It apparently taken her years to get her head on straight, and I hoped it was worth the wait.\n\nAs for me, I quit dating, trying to get my own head on straight. I couldn't see getting involved with anyone with the specter of Melody still lingering.\n\nOn a whim, I sent her an email.\n\n\"Mel,\n\nI just want you to know I wasn't trying to make some kind of statement when I saw you in the club. I had no intention of causing you pain or making you uncomfortable. It was pure happenstance, I had no idea you were there. If it's any consolation, it pretty much ruined my night too.\n\nJess\"\n\nShe answered me the next day.\n\n\"I'm sorry I ruined your evening. I had no right. I know we're over. I know we'll never be together. I just can't seem to stop loving you. I've actually given up trying. Time is supposed to heal you, but all it does is make me miss you more. I've had an offer from another hospital, far enough away that I won't run into you. I think I'm going to accept the job, and make a fresh start. Maybe then I'll heal. I really do wish you happiness,\n\nMel\"\n\n\"PS, if you ever want to talk, just email.\" \n\nI thought about it. I didn't really see her that often, but if moving away helped her, I was all for it. Maybe then one of us would be happy.\n\n...\n\nAnd now, here we were, swaying to the music. It felt disturbingly familiar and totally different at the same time. Jerry had bribed the band, and they played three slow songs in a row. I would have stopped after the first one but she wouldn't let go. I thought about forcing the issue, but didn't.\n\nWhen they were finally over, she locked down on my hand.\n\n\"Will you sit with me for a bit? Please? I'll get down on my knees and beg if I have to.\"\n\nThe thought of her embarrassing us both by doing that made me agree. She led me to a small table in the back, far enough away from the band to be able to talk.\n\nShe tried to make small talk, and I let her ramble for a minute before stopping her. \"What do you really want to say, Mel? Stop beating around the bush and get it out.\"\n\nShe hung her head for a second, then looked up at me. I'd never seen a more determined look on her face.\n\n\"I can answer that with one word. You. I want you back. I've tried, Jess, really, really tried, but I can't let you go, can't forget about you, can't stop loving you. I can see it in your eyes, you still care for me. I know you don't date, my friends seem to make it a point of telling me that every time they see me. Why? You're the whole package. Good looks, good values, great job, bright future. I bet you've been hit on a lot since we've split. You could have your pick, but you shut them all down. I think I know why. I can tell you why I haven't found anyone else.\"\n\n\"In the first place, I didn't want anybody else. I've considered dating a couple of times, but I look at them and wonder how they'd measure up to you, and tell them no. I never stopped loving you, I didn't even pretend to try. Can we please start over? I think you'll find me a lot different than I used to be. I'm begging here, just give me one chance. Take me on one date,and if it feels off I'll never bother you again. Think about it, and give me a call. My number is still the same. Thank you for listening, and thanks for the dance. It meant a lot to me.\"\n\nShe hopped up and kissed me on the cheek before walking away. I saw her speak to Jerry and Anna, hugging both, before disappearing through the door. Jerry walked over and sat down. \"Well?\"\n\n\"Well, what?\"\n\n\"Don't act like an idiot. Are you going to give her another chance? You should. You deserve it.\"\n\nI looked at him like he'd just turned green started speaking a foreign language. He just sighed.\n\n\"It's up to you. One more thing I meant to tell you earlier. From the day she met you, she never had sex with me again. She apologized for it in her letter. She told me she had been exposed to something at work, and it would be six months before it would be safe to have sex again, and she would have to be tested to be sure she was disease free. I should have been pissed about it, but by the time she told me I was over her. I think deep down, I never loved her either. Not the way she should have been loved. Now come on, congratulate us one more time before we leave. Niagara Falls, can you believe it? I wanted somewhere warm, but she wanted this. I got a feeling that whatever Anna wants, Anna is going to get. She wanted me, and she got me. She's the one who insisted I get you both here. She can be very persuasive. I like it.\"\n\n...\n\nI thought about it for about two weeks. The next town over held Friday night concerts on the old courthouse lawn in the summer. Blues, folk, the odd rock and country band to even things up. There was a blues duo, a man and woman, with the catchy name Freeman Feelbad Jr. and Sweet Thang, playing that weekend. I'd heard them before and they were quite good. I called Mel up and asked if she'd like to attend. There was a long silence, I thought she had hung up, before I heard a quiet yes and what sounded like a sob, and she was gone.\n\nIt seemed like a safe choice. Surrounded by lots of people, there was no chance of getting into something too deep. I didn't even pick her up,we met at the venue. I had gotten there early and staked out a good spot, setting up the chairs in advance.\n\nShe appeared, right on time, at the place we agreed to meet. She didn't see me at first, so I spent a moment looking at her. She had on a pale yellow sundress, her long curls glistening in the backdrop of the sinking sun. It was enough to take your breath.\n\nHer smile blossomed as she saw me. She rushed up, about to hug me, when she caught herself. Instead, she brushed my hand, shyly. We walked around the square until show time, window shopping and people watching. I got two glasses of a red wine I knew she liked, to sip on while we listened.\n\nThe duo was very good, professional quality. The guy was older, mid forties at least, and she look to be just past thirty. Their voices blended very well, and he was a slide virtuoso. Their patter between songs was humorous, and their song selection had a little something for every one.\n\nWe laughed at the humorous ones, but when the guy sang a song about a cheating woman you could hear the anguish in his voice. Mel stiffened and looked at me, blushing. The next song, a duet about romance rekindled, brought a smile to her face. By nine the concert was over.\n\nShe stood as I stowed the chairs away, looking at me wistfully. \"Thank you for tonight, Jess, it...\"\n\n\"Isn't over, yet. Unless you want it to be. I'm hungry, wanna grab a pizza at Yanni's?\" Tears glistened as she took my hand. It was one of our favorite restaurants, when we were together.\n\nYanni's was a restaurant on the square, offering Greek and Italian cuisine. They stayed open an extra hour on concert nights, and did a good business. I'd done the stonework on his outdoor dining area.\n\nYanni personally served us, not even letting us order. \"Ah, young lovers. I fear you forget your old friend. Is good to see you again. One Yanni pizza, right away.\"\n\nA large pizza, half filled with anchovies(mine), the other piled high with mushrooms(hers). We ate, and had the rest boxed. I walked her to her car.\n\n\"Well, thanks for the evening, Mel. I had fun.\"\n\nShe had been holding my hand since we left the restaurant. Before I could say anything else, she wrapped me in a tight hug, kissed me on the cheek, and jumped into her car. I stood and watched her tail lights fading, wondering what it all meant.\n\n...\n\nWe dated twice more, a silly romance movie that gave her an excuse to hold my hand and snuggle while she sniffled. Then a day at a local fair. She made me walk with her through all the exhibits, oohing at the canned goods and cakes, laughing at some of the exotic vegetables. She stopped dead in front of a huge quilt display, a dozen or more, ranging from traditional to modern, all works of art in fabric. Tears formed again, and I was hit with a memory.\n\nShe had showed me a picture of a quilt in one of her magazines, one night as we were snuggling in my new house. \"I've always wanted to learn to do that.\"\n\n\"Why?\"\n\n\"Because, silly, I want to be able to make all the children their own personal quilt, something durable they can pass to their own children, and them to our great-grandchildren.\"\n\nShe caught what she had said, and looked at me nervously. I grinned. \"How many quilts are we talking about?\"\n\nShe smiled, happy I wasn't angry. \"Oh, at least three. Maybe more, if I'm lucky.\" She laughed at the stunned expression on my face and snuggled down again, flipping pages.\n\nReturning to the present,I didn't say anything, but I took her hand and squeezed it gently, grabbing a card in front of the display, putting it in my pocket.\n\n\"Busy Needle Quilting Club. Join us and learn the art of making quilts. We have classes,workshops,\n\nand soon you'll be sewing with confidence.\"\n\nHey, her birthday was coming up. I thought it would make a perfect gift. Candy would be eaten, flowers would fade, but a new skill would stay with you forever.\n\nWe rode the rides, at least the ones she could get me on. I watched as she rode the scarier ones by herself. Come on now, everybody is afraid of something, right? She thought it was hilarious that a combat hardened veteran was afraid of a little old roller coaster.\n\nShe had her own fears, the main one being thunderstorms. She had almost been hit by lightning when she was six. It struck the ground ten feet away, knocking her and her friends off their feet, unconscious. Now, she stays inside, well away from the windows, and would shake until it was over. Holding her helped, a little.\n\nWe shared our first full kiss, as we sat and watched the fireworks they held nightly while the fair ran, snuggled together in the bleachers of the arena. It just happened, neither of us planned it. She said something, and when I turned to answer our lips seemed to lock of their volition. It felt like it lasted hours, but it was probably only ten or fifteen seconds.\n\nWe parted, and looked at each other, amazement plain on both our faces. We never said another word to each other the rest of the night, and when I took her home she simply got out and went inside.\n\nWe didn't see each other for almost three weeks. We weren't avoiding each other, I was still trying to catch up on my work. Weather had put us behind again, and it took us that long to catch up.\n\nWe did talk on the phone a few times, and she seemed distant. I started to wonder if the kiss was a mistake.\n\nI called home, telling my family I had wrapped the project up and intended to be home by Thursday. They seemed happy, they were concerned I was working too hard, and it was burning me out.\n\n...\n\nI sighed, dropping the bag full of dirty laundry in the foyer. I'd wash them later. First I wanted a shower, in the worst possible way. The only change I'd made since I bought the place was to remodel the bathroom. It was larger, and the shower had room for four people. It had six heads that could be turned on all at once, individually, or in any combination a person could think of, with a choice of full flow, massaging pulses, or gentle mist. My first thought when I had it done was how much Mel would have loved it. It didn't get completed until two weeks after our break up. I was glad in a way, I didn't need to have any memories of a naked, happy Mel every time I showered.\n\nWhen you live alone, especially if you have for a while, you tend not to worry about how you're attired when you walk around. I came out of the shower naked, rubbing my hair with a towel. It was getting long, I was thinking, time for a haircut. I'd had a buzz cut when we met, and she talked me into letting it grow out. She said she loved to run her hands through it. I think she liked to tug it when we were making love. I didn't mind in the least.\n\nI thought I heard giggling, and pulled the towel away. There was Mel, sitting on the bed.\n\n\"What? How! Why are...\"\n\nHer smile split her face. \"The what is your mother told me you'd be home today. The how is you never had me give my keys back, and the why is because I have something to tell you. Now put some clothes on and meet me in the living room.\"\n\nShe giggled again, looking at my cock, which seemed to like the idea of being ogled. \"Or not, either way works for me.\"\n\nShe swayed out of the bedroom, felt me watching her, looked over her shoulder and grinned. \"Here's another thought. You stay as you are and I'll join you.\"\n\nThe thought put me at full mast. \"No,\" I sputtered, \"I'll be out in a second.\" I grabbed some shorts and a shirt, willing myself to relax. It took a few minutes.\n\nShe was in the rocking chair when I came out, looking over the backyard. Turning to me, she gave me that beautiful smile.\n\n\"I need to tell you some things, and I need you to not interrupt. I'd like to get it all out before I lose my nerve. Please?\"\n\nI nodded, sinking down on the sectional she insisted we have. I thought about changing the furniture when we split, but it worked well in the room, and it was comfortable. I tended to sit in the recliner most of the time. Every time I sat on the sectional flashes of us snuggling, or making love ran through my mind and I'd end up moving.\n\n\"I know I've sounded off the last few times we talked. It's because of the kiss. It reminded me of things I'd lost, things I want back. I want you back, I want you to chase me around this house like you used to, until I get tired of the game and let you catch me. I want to take the air mattress into the backyard, lie on it like we used to, watching the stars as we snuggle, then make love. I want you to love me again.\"\n\nShe stopped, gathering her thoughts. I started to speak but she held her hand up. \"Wait, I'm almost finished.\"\n\n\"Then I realized something. You already love me. I know it, you know it, everybody we know knows it. Love isn't our problem. Trust is.\"\n\n\"I lied to you in the worst possible way. It took a while, but I now realize how badly I hurt you. So I had to find a way to get your trust back. Here's what I came up with. Let me move back in. You've got security cameras, add to them. Wire the whole house. Then, while you're away, you can access the feed any time you want, to see what I'm up to. Put a GPS tracker on my car, then at a glance you can tell where I'm at and where I've been. I've done some research on the internet. We can get a personal tracker, like those ankle things criminals wear. This model is a bracelet. Again, you can see at a glance where I'm at at all times.\"\n\nShe looked down, a deep blush on her face. \"If that's not enough, I'll...I'll wear a chastity belt. They make them, I checked. You could lock me in when you leave, turn me loose when you get home. I'd do all this, just to prove you can trust me.\"\n\nWow. Mel had obviously put a massive amount of thought in to this. Sadly, there was one thing she missed. I explained it to her as gently as possible.\n\n\"First, let me thank you, for thinking about a way to get us back together. For be willing to do all the things you described. But it'll never work.\"\n\nTears started and I held up my hand when she tried to speak.\n\n\"My turn. Hear me out. All the things you're willing to do are things that aren't necessary. If we did them, you wouldn't be a partner in a relationship, you'd be a slave. While some of it sounds like fun from a play standpoint, you couldn't live with it constantly. Oh, I'm sure you'd try, but sooner or later you would start to resent it. I know I would. All these things won't promote trust, just the opposite. If I have to go to that much trouble, it would just reinforce the idea you CAN'T be trusted. I couldn't live like that. Deep down, you know all this.\"\n\nTears were flowing freely now. She got up, fumbling towards the door. I caught her, pulling her down to the couch with me. She buried her head in my shoulder, and cried for a few minutes.\n\nI petted her, loving the way she felt in my arms. Finally she pushed away from me.\n\n\"So it's over then?\"\n\n\"Quite the opposite, baby. I think we are just beginning. What you did today, what you were willing to do, that took a lot of guts. THAT\"S what makes me think we might just make it. So, let's go slow, build on what we've done. Okay?\"\n\nShe looked up and smiled. It reminded me of the sun popping out after a bad storm.\n\n\"Really?\"\n\n\"Yes, hon, really.\"\n\nThat led to a massive make out session. Her nipples were straining, her face was flushed, and I was hard as a rock. She jumped up, pulling on me.\n\n\"Come on, baby, I need to show you just how much I love you. I haven't made love since the last time we were together. You're getting an almost virgin.\"\n\nI hesitated for a second and tears formed. \"That is, if you want to.\" She squealed when I surged off the couch, flipping her over my shoulder. She giggled and pounded my back as I carried her into the bedroom, tossing her in the middle.\n\n\"STRIP!\"\n\nIt wasn't slow, or sensual, it was a woman in a hurry. She wiggled out of her tight jeans, cursing when her panties got caught on her ankles as she tried to take them off over her sneakers. A couple of buttons popped as she shed her blouse. The bra was a front catch, and she didn't bother releasing it, ripping it off and flinging it.\n\nWhen she was finally naked, she sighed, stretching her body sinuously, getting comfortable. I had been shedding clothes as rapidly, lucky I didn't have as many as she did to remove. I paused, drinking in her beauty. She actually whined.\n\n\"Please baby, please.\"\n\nI should talk about how I worshiped her full breasts, biting and sucking on them while she writhed with pleasure. Or how I took my time, licking her to one orgasm after another, and entering her slowly delaying the pleasure of release as long as possible. Fuck all that.\n\nI was between her legs, slamming into her before she finished speaking. Luckily she was soaking, or it would have been very uncomfortable. She screamed out a massive orgasm before a minute had gone by, and had another five minutes later when I let loose what felt like a gallon into her. I collapsed and tried to roll off her, but she wrapped her arms and those long legs around me, and wouldn't let go for five minutes. Only the need to breathe made her turn me loose. We lay there, gasping like we'd run a marathon. She rose up, kissed me deeply, then snuggled into my shoulder, and promptly fell asleep. I lay there, stroking her body, until I dozed off.",
        "Two hours later I woke, smelling something that reminded me how hungry I was. She was in the kitchen, her hair damp, wearing one of my tees and nothing else. Apparently she'd been up long enough to have a shower.\n\nNoticing me, she broke into a huge smile, slinking over to mold her body to me, kissing me with passion. When she broke, she gave me a wicked grin.\n\n\"Love the shower, baby. I can't wait to christen it,\" Her eyes changed, going darker, and I knew she was wondering if someone had gone before her.\n\n\"That sounds like a great idea. The only intimacies I've shared in there was with my right hand, and I bet it would be a LOT more fun with you.\"\n\nShe beamed, giving me a great kiss. Then she turned everything off and started walking towards the bathroom, slipping out of the shirt before tossing it at my feet. \"Coming?,\" she said, smiling.\n\nWe set the heads to mist. It was like bathing in a slow rain. We cleaned each up very, very well, before the shower surrendered to our passion, and lost its' purity.\n\nThe lovemaking was slow this time, as we did our best to see if everything was as we remembered it, For me, it wasn't. Somehow, it was better. I was a very happy, very tired man when we finally collapsed.\n\n...\n\nI beat her up the next morning. I showered again, and slipped into the bedroom for shorts and a tee.\n\nShe had rolled on her back, pulling the sheet with her. One of those long, sexy legs was out, as well as her left breast. I couldn't help it, and snapped two pictures. No one would ever see them but me, and I wanted them as a reminder when we were in our golden years, to show how absolutely perfect she had been.\n\nI tickled her nose until she woke, kissed her, and told her to get cleaned up. I was taking her to breakfast, and then to her apartment to get clothes. She was working a split shift today as a favor to a friend. Then she was coming back to the house for the weekend.\n\nI got to meet her roommates, and could understand why she said she was thinking about moving.\n\nAmanda was a tall blonde. Decent looking, but she couldn't hold a candle to Melody. She had been married twice, divorced twice, her cheating the cause both times. Her last time had been with a woman, and she had a bit of a crush on Mel.\n\nBeth was a chunky redhead that might have been attractive if she ever smiled. She didn't cheat on her husband, but had anger issues. He'd actually postponed the wedding until she got some help, and she'd lied to him, telling him she went through an anger management program. After they married, she turned into what her ex described as 'a screaming bitch the devil probably threw out of hell because even he couldn't stand her'.\n\nHe went for irreconcilable differences, because it was the easiest route to take and in this case it happened to be true. She was actually surprised, even though he begged her to get help right up until the day before he filed papers.\n\nShe didn't take it well, and ended up with a restraining order keeping her five hundred feet away from him at all times. She walked through it twice before the judge got tired of it and put her in jail for a weekend. She begged for counseling, got it, but after three sessions of listening to her scream, the counselor recommended the divorce be granted. It was sad, and he promised he would stop the divorce if she would just get help. Of course, she didn't.\n\nHer idea of revenge was to fuck everything that moved and tell him about it. By then he could have cared less, because he'd met someone else. The funny thing is now she's in therapy, because the hospital told her it was that or unemployment. No one wants a nurse with the kind of bedside manner she had.\n\nThey didn't hesitate a second. As soon as Mel closed the door they were on me like rabid hyenas.\n\n\"So you're the guy who has her head so fucked up. I know your kind, you can't or won't forgive. That precious pride of yours won't let you. You'll end up making her jump through hoops until you get tired of her, and dump her again. Asshole!\"\n\nI know my mouth was hanging open. I'd never seen anyone spew venom like that. It must have made her day to get a chance to vent on someone. I made a note to never turn my back on Beth.\n\nAmanda was no better.\n\n\"You hurt her, I swear to God it'll be the last thing you do. She deserves better, she deserves to find someone who can love her right, not some asshole who'll lord it over her her the rest of her life because she made a mistake.\" She would have probably said more, but I'd heard enough.\n\nMy good mood was long gone. \"Listen bitches! First, Mel and I are none of your business. And if you think you're going to be the one who ends up with her, guess again. Mel tries to be tolerant, but she's a bit of a homophobe. She gets queasy watching two girls on porn films. The chances of you getting to lick her pussy are about the same as me ever liking you. Won't happen in this lifetime.\"\n\nI turned to Beth. \"And you! Amanda I can understand, a little. She's in love, or maybe just deep lust. You got no excuse. You just don't want anyone to be happy, period. Your husband should have been up for sainthood for putting up with your shit for as long as he did.\"\n\nI was on a roll. Looking back, maybe I should have been a little quieter, but it felt good to vent, especially on bitches you didn't give a shit about.\n\n\"So fuck both of you. I'm not the least bit interested in your baggage. Right now, we have our own past to deal with. Don't expect an invitation if we decide to get married. Better yet, by all means come, seeing your face as I say my vows would be icing on the cake.\"\n\nMel had caught the last bit of our exchange, looking on like a deer caught in headlights. Amanda saw her and immediately stared.\n\n\"I hope you were listening, Mel. This guy isn't going to take you back, he's just fucking with you, waiting until you get comfortable before he drops the hammer. I've seen guys like this before, honey. Notice he said IF a lot. My second husband was just like him. Just to fucking proud to forgive a mistake. Well, I wonder if his pride gives blowjobs as good as I used to do, because he went through a long dry spell. News flash, jerkoff, pride won't love you back, give you kisses, cuddle you when you're sick.\"\n\nI was beyond pissed at this point. \"True, Amanda, true. Pride won't let you do those things. BUT, pride will let you look yourself in in the eye in the morning, confident that you are true to your beliefs. Pride will also let you walk down the street and look other people in the eye for the same reason. I've often thought the old saying about pride was all wrong. Pride doesn't go before the fall, it comes after it. When you're down in the dirt, and everything you wanted, everything you believed in, and everything you loved has been taken from you, pride will lift you up. Pride will force you to live according to your principles. It may not let you sleep at night, but it will make you aware your insomnia is bearable. Now, as stimulating as this conversation has been, Mel is ready, and we're leaving.\"\n\nI took her hand and pulled her out the door, never so glad in my life to leave a place.\n\nMel was quiet on the way back to her car. When we got home she slipped her case into the trunk of her car, instead of carrying it in. I was confused.\n\n\"Mel, honey, let's put your case in the house. No need to ride it around, chance it getting stolen. It'll be here when you get here tonight.\"\n\nShe wouldn't look me in the eye. \"Um, I think I'll pass. I'll be really tired, so I may just go home and crash. I need to think without distraction.\"\n\nIt hit me hard. \"What happened, Mel? Three hours ago you were whining because you had volunteered to work, regretting it. You even tried to get someone to cover for you. Now, because of the rantings of some seriously disturbed women, even after yesterday and this morning, you don't want to spend time with me? Fine. Go find yourself. But be careful. I've already learned to live without you once. Go all passive/aggressive on me now and it'll be the last straw. And before you go, I'd like my key back.\"\n\nI think she realized then she'd made a serious mistake, and tried to correct it, but I was way past being reasonable. Screw all this. After we finally reconnect, she wants to draw back? She was done. I was done with her. I'd do just fine without her.\n\n...\n\nOf course I wasn't. I missed her more than I did before we broke up the first time, angry at myself for letting myself believe.\n\nI took solace in my job. You had to pay attention when you handled large stones, my broken toes had taught me that. So I worked on my backlog. trying to catch up before cold weather slowed us down. I didn't go home for three weeks, and only took one day off then, to do some laundry and check on my house.\n\nI was a little surprised to see her car in my driveway. Even more surprised when Mel came flying out of the house and tackled me, putting us both on the ground. She held on to me with a death grip, mumbling and babbling almost incoherently.\n\nShe was pretty strong, but she didn't lift rocks for a living. I got tired of being gentle, so I took her hands and forced them back until they were behind her back.\n\n\"SHUT UP!\" I'd never raised my voice to her before like that, and it shocked her into silence. I took advantage of it and got up, leaving her on the ground. \n\nI left her lying on the ground, whimpering like a wounded animal, determined to leave her there. I almost had the door shut when her cries became screams. Even though I wanted nothing to do with her, I couldn't stand her sounds of pain. I went back and tried to get her up but she refused to move, so I scooped her and headed towards the door. Her arms went around my neck as the tears fell, snuffling into my neck.\n\nI dropped her on the couch, not very gently, and went to get her some water.\n\n\"Drink!,\" I said, sitting her upright. She drank the water, staring at me with her huge eyes.\n\n\"How did you get in here?,\" I asked, after she quieted. She started talking, but it was disjointed, rambling. I held up my hand and she stopped instantly.\n\n\"I'm going to try one more time. Answer me in simple words. Go slow. And be truthful. One lie and I'll never speak to you again. Begin.\"\n\nShe held her head down while she talked, so quietly I almost asked her to speak up.\n\n\"I broke a window. I replaced it right away. I knew where you kept the spare keys, and I used them. I went home that night when I finished my shift, had a terrible fight with Amanda and Beth, and they threw me out. I could have gone to a motel, but I ran here like a wounded animal. Because I was a wounded animal, destroyed by my own actions. I just wanted to be near you, to beg you to help me get your love back.\" \n\n\"You weren't here, and you wouldn't answer the messages, texts, or emails I left for you. I felt safe here, so I stayed, waiting for you to come home. If you want me to leave, I will.\"\n\nShe seemed totally destroyed. Kicking her out would have been like beating a puppy.\n\n\"Well, not right now. I still need to process some things, and I'll need your help to do it. Order a pizza, I'm starving. I'll be back after I shower.\"\n\nHer eyes lit up with hope, but my look dampened it a little. When I came out showered, dressed in sweats, I noticed she'd freshened up, minimal makeup, hair neatly tied back in a ponytail. It made her look younger.\n\nI was spared conversation by the arrival of the pizza, which Mel grabbed and hustled into the kitchen. By the time I'd paid, she had plated it, and had a glass of wine sitting beside the plate.\n\nI gave the wine back. \"Water will be fine for right now. I want to have a clear head for later.\"\n\nShe nodded, getting us both a glass, leaving the wine sitting. I noticed the way she ate, nibbling the edges,glancing up at me from time to time. She seemed a little slimmer than I remembered.\n\n\"You on a diet?\"\n\nShe shook her head. \"I just haven't been hungry lately.\"\n\nI nodded and ate another piece of pizza, thinking while I ate. I really didn't know what to do. We were a pretty messed up pair of human beings.\n\nWe finished, she tidied up a little, and we sat down in the living room to talk. I could tell she was disappointed I didn't sit beside her, choosing to face her in the recliner. \n\n\"Tell me the truth here, Mel. I know you want us back together. I want us back together. But how? How can I ever trust you? What could you possibly say or do to get us back to where we were before it all fell apart? Suggestions?\"\n\nActually, she had a plan. \"Couples counseling. Pam at work told me about it. She went through a bad time with her boyfriend just before they were to marry, and they went, to see if they could salvage their love. She said it worked wonders, made them both realize they weren't prepared for married life. They put off the wedding for a year, but she said it was worth the wait, because when she walked down the aisle and met him at the altar, they were both sure in their hearts this was the path they were destined to take. I even get a discount through my job. Will you think about it? I think it might be the only way we can get over what I've done. I'm willing to try, and I'm begging you. There's a chance we'll realize we will never be together, but I'm willing to take it. Living this half-life is killing me. Please promise you'll think about it.\"\n\nI could tell it took a lot out of her to make that little speech, and I promised I'd think about it. She nodded, looking half hopeful. \n\nShe got up, and I heard her rambling around in the bedroom. She came out a few minutes later pulling a suitcase behind her.\n\n\"Will you help me load this in my car?\"\n\nWell, what the hell. She squats in my house, begs me to go to couples counseling with her, and then she runs away, again?\n\n\"Where are you going?\"\n\nMel seemed surprised. \"A motel, I suppose. I know you won't want me here right now. I guess I'll look for an apartment next week.\"\n\nI picked the case up, surprised at the weight. Instead of walking towards the door, I carried it back into the bedroom, threw it on the bed, and starting unpacking it. She followed, and watched me silently, before asking in a timid voice what i was doing. \n\n\"I'm putting your clothes back where they belong. Now, would you like to help me? I can manage without you if I have to, but I may not put things where you want them.\" I held up one of her thongs, twirling it in my hand.\n\nUnexpectedly shy, she snatched it away from me.\n\n\"I'll make a deal,\" she said through tears, \"I'll put them away and put them on, but you need to take them off as often as possible.\"\n\nI'd never seen a woman cry and smile at the same time. It twitched her face into all kinds of expressions. \"Deal,\" I said softly, kissing her cheek, \"but there will be some rules. I think I'll have that wine now. Want your glass?\"\n\nShe nodded, hair down in her eyes. Ten minutes later she snuggled beside me, taking the wine. Mel didn't say anything for a few minutes, enjoying the wine and the moment. Finally, in a voice so soft I almost didn't hear it, she whispered. \"Rules?\"\n\nYes, Mel, rules. I'd like to say we'll make it, but until we resolve our issues I'm not sure. You will continue to live with me. You can sleep in my bed if you want. We won't get any better if we're apart.\"\n\n\"Make the appointment for counseling as soon as possible. Email me the dates, but please try to make it for Fridays, in the evenings, so I can work.\"\n\n\"I'm willing to try, Mel. You know I love you more than anything in the world, but I have to know in my heart that going forward I can trust you completely. AND, if for any reason one of us decides it's just not going to work, we tell the other immediately. Agreed.\"\n\nI expected her to jump all over it, but she said nothing, sipping her wine. I was about to speak again when Mel spoke.\n\n\"Yes, with all my heart. And I will be sleeping in OUR bed. Where else would I sleep? I want a few things from you, in return. I want you to ease up on work enough to actually spend more than a day now and then with me. I want your absolute promise that short of a natural disaster or a cataclysmic event, you will be at all the sessions. Promise me.\"\n\nI was about to answer when she held up her hand. \"One more thing. I want you to try to figure out a way I can prove how much I love you, and that I will always be faithful to you. Whatever it is, I'll do it. But I have my own insecurities. I may ask you for the same consideration, sometime in the future. Deal?\"\n\n\"Deal,\" I said.\n\n...\n\nWe didn't make love that night, it just didn't seem right, somehow. It wasn't because I didn't want her, especially when I saw her sleepwear.\n\nIt wasn't some sexy teddy or gown or exotic lingerie, but a really thin 'wife beater' shirt, in red, with matching bikini panties. It looked hot as hell. She snuggled into me as I stroked her body, and was asleep in minutes. I lay awake, thinking, wondering if we were finally on the right path to happiness.\n\nI lived up to my words, working half days or not at all on Fridays, so I could be home for the sessions.\n\nThe counselor was a man, which surprised me. I would have bet good money she would have picked a woman. Come to find out, she picked him because he had the highest success rate in helping couples over their problems than anyone in his practice.\n\nI liked the guy. He was calm, relaxed, told me he liked to keep the drama to a minimum. We each had a session alone before we went together. In each he asked what we hoped the outcome of the sessions would be. Our answers were very similar.\n\nHe was calm, but he didn't pull punches, and often Mel would be in tears before the session was over. I didn't cry, but he did push my buttons skillfully enough to make me want to punch him a time or two.\n\nHe got Mel to admit what I suspected. She stayed with Jerry, especially in the early phase of our relationship, as a security blanket, in case I wasn't what I appeared to be. When she figured out she wanted me, she did start the process of divorce, but stopped short of filing. Her reason was that until I proposed she wasn't sure of my feelings.\n\nI called bullshit, and the counselor actually agreed with me. \"Is that really true, Melanie? In the six months you dated, especially after you started staying with him on the weekends, did you not feel secure that he loved you? Even if you did deny sex to your ex while dating Jesse, you still shared a bed, still snuggled, exchanged endearments. Then when he left you did the same with Jesse. Yes, you did divorce, but only after you were caught.\"\n\nShe almost screamed out her response, surprising both of us. \"YOU THINK I DON'T KNOW WHAT I'VE DONE? I BETRAYED BOTH OF THEM! AND I RUINED ANY CHANCE OF HAPPINESS I'M EVER GOING TO HAVE!\"\n\nShe calmed down a bit, snuffling.\n\n\"I don't think that's necessarily so, Melanie, or you two wouldn't be here now. However, I think we've gone as far as we can in these sessions.\"\n\nWe both looked at him in surprise. \"But we're not healed yet!\" Melanie cried out.\n\n\"No, you're not. But you've come as far as you can with my help. You're both obviously still deeply in love. That was easy to determine. You want to stay together, get the happily ever after you both want desperately. That's a given.\n\nThe whole thing comes down to trust.\"\n\n\"Can Jessie trust you? Hopefully. Does he now? No. Same with you. In your mind, you're not sure he can ever get over what you did, and that he may be seeking revenge at some point. You both have to make the decision soon about whether it's worth the work and the pain you'll both go through to resolve your issues. I can't do that, I have no magic wand to wave over you and declare you healed. I can just wish you the best of luck and tell you this. I think if you can attain grace from each other, you'll never regret it. And if you can't...well, you need to cut your losses and walk away. I wish you all the luck in the world.\"",
        "We found ourselves outside his office looking at each other in wonder. Melanie said it best. \"Where do we go from here?\"\n\nI had no answer.\n\n...\n\nWe tried to move forward for three months. We had days of happiness, and then something would trigger one of us and life would be strained for a day or so. We were rapidly becoming frustrated, and cracks were appearing.\n\nI thought of her often while I was away working. She would call me every night, which I looked forward to, then send me photos of her in our house, proving she was there. That got old quickly.\n\n\"Enough!,\" I told her one night. \"Stop sending me pictures! And stop locking yourself away in the house every night. It's driving us both crazy. Go out once in a while, have dinner with friends, even go for a drink with the people you work with. I'm going to live on the premise that you're an adult who made a mistake and learned from it. If i don't, then it really wouldn't matter, now would it?\"\n\nI think she got the point. A few days later she went to a movie with her best friend. She loved horror movies, something I had no interest in, and she called me the next evening, telling me how much fun she'd had, before getting serious.\n\n\"Thank you, honey. For the love, and for the trust. I...\" Choked up, she stopped. I felt really good about it, even kidded her about how glad I was I didn't have to be dragged along to any more sucky movies. Her old spirit came through.\n\n\"They're not sucky! They're an art form, something a caveman like you just doesn't understand. Despite your stunted intellect, I still love you. Goodnight, honey.\"\n\nDespite how hard I tried though, I know she knew something was holding me back. She'd gotten quiet the last week or so, and I knew it might be the beginning of the end.\n\nStrangely enough, it all came together at of all places, a flea market. Mel loved the smell of incense, had little burners all over the house. Most of the smells were pleasant enough, so I tolerated it. There was a booth at the place, run by a woman who looked like a poor man's version of a VooDoo Queen, that had literally hundreds of scents. Mel was running low and asked me to take her. \n\nWe both liked going, often spending several hours browsing. We actually bought very little, but every once in a while we'd stumble onto a treasure, at least in our opinion. I was watching her flit back and forth, willowy grace personified, smiling, lifting a stick to her nose now and then. She felt me watching her, and she looked up and smiled, the familiar smile of joy I loved so much. Then her eyes clouded and she looked down in sadness. I knew at that exact moment she would soon be lost from me if I couldn't change, and soon.\n\nIt was late summer, and as we were leaving once of those quick seasonal storms came up, all wind and lightning, blowing over as quickly as it came. The first boom of thunder came, and Mel jumped slightly. I had my arm around her instinctively, soothing her. Luckily we were inside, in one of the many halls that seemed to stretch forever. We had gotten there late, and they were starting to close up.\n\n\"Wait here, Honey. I'll get the truck and pull up to the door.\" I made a mad dash into the parking lot, and was soaked almost instantly. I was thinking hard as I waited my turn to pull close to the door, almost praying for a way to get over my blockage and love her the way I was supposed to.\n\nAs I pulled up a song came on the oldies station I was half listening to that I had always loved. \"Slow dancing, swaying to the music, slow dancing, just me and my girl,\" was coming out of the speakers. I looked at the entrance, trying to spot Mel, and glanced at a bumper sticker on a little van parked close by, guessing it belonged to the incense vendor. There were a lot of stickers on the van, but the one that jumped out at me sent chills up my spine.\n\n\"Life isn't about hiding from the storm, it's about learning to love dancing in the rain.\"\n\nI had it. A way to prove to me without a doubt that Mel loved me. I opened the door and turned the volume up. I stood in the pouring rain, while lightning flashed and held out my hand.\n\n\"I've got it, Honey! If you really love me, I mean really really love me, you'll come outside and dance with me. It's our last chance, please, please, let's dance.\"\n\nI was almost screaming to be heard. Every one was looking at her, wondering what she'd do. I know she couldn't see them in the rain, but tears were running down my cheeks. She crept up to the door, quivering with every flash, while I stood and held my hand out, three feet away from her.\n\nMel looked into my eyes, straining to see if I was sincere. She must have gotten the answer she wanted, because with one long step she was in my arms, clinging tightly, flinching at every strike, but swaying, kissing me. The song ended about ninety seconds later, and I picked her up and placed her in the truck. Yes, it was short, but it said everything that needed to be said.\n\nShe loved me deeply enough to face her greatest fear to prove it. What better demonstration could there be? We sat in the parking lot, wiping each other with napkins from the dash, laughing and crying together. Then we went home, and made love.\n\nAnd complete, total love was what we made.\n\n...\n\nNINE MONTHS LATER\n\nI felt faint looking at it. The newest, steepest, scariest roller coaster on the planet. It had loops, rolls, and a three hundred twenty-five feet sheer drop. But I had it to do, so I held her hand tightly as we stood ready to be strapped in.\n\nShe had told me a week after the slow dance in the rain that someday she would ask me to do something in return to show my absolute love for her as well. I agreed instantly, and this was the result.\n\nThe coaster was designed like a bullet, and it was single file seating. She let me go first, holding my hand as they strapped and locked me in. Then I felt sheer terror as she let go and stepped back.\n\n\"Aren't you going with me?\"\n\nFor some reason she was grinning and crying at the same time. \"I can't.\"\n\n\"Why the hell not?\" I almost screamed as the ride lurched forward and gained momentum.\n\n\"Rule Number Three!\" \n\nI read the rules as I passed them by.\n\nRule1: You have to be 48\" tall to ride this ride.\n\nRule 2: Anyone with a heart or any other medical condition should not ride this attraction.\n\nRule 3: No pregnant women allowed.\n\nWait! What?"
    ],
    "authorname": "qhml1",
    "tags": [
        "loving wife",
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/slow-dancing-with-a-fast-woman"
}