{
    "title": "After the Fall Ch. 06",
    "pages": [
        "Mariah woke to sunshine on the bedspread, a dull and not entirely unpleasant ache between her legs, and Michael's erection rubbing against her backside. She didn't know how he was awake so early after his exertions late last night. He was not only awake, but raring to go.\n\nHe nuzzled the back of her neck. \"I know you're awake.\"\n\nAs always, his voice so close to her ear sent little shivers down her back.\n\n\"Yeah, because you woke me up.\"\n\n\"I just wanted to say good morning.\" He draped an arm over her side to fondle her breast.\n\n\"I didn't order a wakeup call.\"\n\nHe tweaked her nipple. \"Isn't it a little early for you to start earning more spankings? You've still got a bunch left over from yesterday.\"\n\n\"You can't be serious.\"\n\n\"Oh, but I am.\"\n\n\"I haven't even had a chance to do anything since you spanked me yesterday.\"\n\n\"Yet you managed to earn another spanking within hours. Remarkable, isn't it?\"\n\n\"You're just making stuff up so you can spank me.\"\n\nHe pinched her nipple sharply and held it. \"What happened after your spanking yesterday?\"\n\n\"You went cave man on me.\"\n\n\"By that, I assume you mean that I fucked you senseless. I needed that, and so did you. If it was physically possible to fuck you any harder, I would have, and I'd do it again. What happened after that?\n\nShe squirmed, but he didn't release her nipple. \"You continued acting like a knuckle dragger and locked me up.\"\n\n\"Exactly, kitten. I left you locked up nice and safe with an entire wing at your disposal, complete with a kitchen, wine selection, and entertainment center. Imagine my surprise when you were the first thing I saw when the elevator door opened.\"\n\n\"You couldn't possibly have been that surprised. Did you really expect me to stay locked up?\"\n\nHis fingers tightened on her nipple until she sucked her breath in through her teeth. He held it a few seconds longer before releasing it.\n\n\"Yes, that's exactly what I expected. I expected to come home to find you safe and comfortable in our wing where you have everything you need. Especially since we had just talked about the condition of following my directions without question about security matters.\"\n\n\"Your wing,\" Mariah corrected. \"And you didn't tell me not to unlock the gates.\"\n\n\"That sort of nonsense is exactly why you need a spanking. You knew perfectly well not to do it. But, I'll make you a deal. Tell me how you did it and I'll take five spanks off the total.\"\n\n\"What's the total?\"\n\n\"Forty.\"\n\nShe rolled away and scowled at him. \"You only said forty because you wanted to be able to take away five and still give me thirty-five spanks.\"\n\n\"Very astute, but now it's forty. So do you want to get it back down to thirty-five or not?\"\n\n\"I just turned the dials in the panel in the hallway floor.\"\n\n\"But how did you know there was a panel in the floor?\"\n\nShe gave him a sly look. \"I'll tell you if you take five more off the total.\"\n\nHe grinned at her and shook his head. \"What am I going to with you? Fine, five more off if you tell me, but I'm adding five for extortion. So now it's thirty-five spanks if you do tell me, and forty if you don't.\"\n\n\"If anyone ought to be spanked for extortion, it's you.\"\n\nHe looked amused. \"Do you want to spank me, sweetheart? Go ahead.\"\n\nShe had absolutely no desire to spank him.\n\n\"Well, kitten? Do you want me to lie across your lap? Bend over the bed?\"\n\nWhen she didn't answer, he smiled and kissed her forehead. \"That's what I thought. This is why you get spanked and I don't. I very much enjoy spanking you, but I have no desire to get spanked. You don't even want to do it. You, on the other hand, might not want to get spanked, but do you think I've forgotten what it does to you? Remember your spanking by the pond when you were dripping wet and needed so badly to come? Last time was different, of course. You weren't supposed to enjoy that.\"\n\n\"I didn't!\"\n\n\"Good. Now, do you want forty spanks, or are you going to tell me how you knew about the panel?\"\n\n\"I didn't know about it specifically, but there had to be something like that. It wouldn't make sense to have gates intended to protect someone inside the wing if there was no way to operate them from inside the wing.\"\n\n\"How did you find the panel?\"\n\n\"I just started at the gate and worked my way back, looking at the walls and floor. The gap between floorboards is slightly different where the panel is.\"\n\n\"I see.\"\n\n\"Since I gave you all that extra explanation, I think you should take off five more spanks.\"\n\n\"I'm sure you do. I'll take off two more spanks, so your total is thirty-three, unless you manage to earn some more between now and the time I spank you.\"\n\n\"You can't spank me that many times for one thing.\"\n\nMichael snared her by the waist and dragged her back towards him. \"I can and I will. If I put you in a secure area, I expect you to stay there.\"\n\n\"If you have unreasonable expectations, you're sure to be disappointed.\"\n\nThe words were barely out of her mouth when he yanked the sheet down and brought his hand up between her legs to land a sharp smack. Caught off guard, she yelped.\n\nMichael frowned. \"I'm sorry, sweetheart. I didn't realize you would still be sore.\"\n\n\"I'm not sore,\" she snapped.\n\nHe rolled his eyes. \"Of course not. So you won't mind if I do this?\" He cupped her pussy and squeezed gently.\n\nShe glared at him. \"If I were sore, it would be because you were a total barbarian yesterday, even before your encore last night.\"\n\nHer scowl deepened as his chuckle turned into a full-throated laugh. \"A barbarian, huh? I seem to remember a certain little somebody who was awfully eager for a good, hard fucking by the barbarian. Positively feral, in fact.\"\n\nThe heat in her cheeks told her that she must be turning a brilliant shade of red. She sat up and scooted away. \"Don't be smug. And thanks for reminding me, smarty-pants. You lied to me.\"\n\n\"What did I lie to you about?\"\n\n\"That's a really long list, Michael. But last night, you said I would get a turn to touch you.\"\n\n\"As I remember it, you managed to do quite a bit of touching. I seem to remember having to hold you down because you wouldn't stop. But by all means, sweetheart, go ahead and touch.\"\n\nHe laid back on the pillow and winked at her. The smile she gave him in return made him wonder if he'd overplayed his hand.\n\nMariah's smirk was more show than substance. Michael's comment about her enthusiasm the night before had thrown her off balance. The reminder that he hadn't let her touch him like he said he would was the first retort that came to mind. If she had really been so... feral, as he put it, she worried that her control was slipping. With control in mind, she decided to be the predator instead of the prey.\n\nShe crawled over to him slowly, hips dipping and breasts swaying. He wished she had further to crawl, but too soon she was kneeling beside him. She ran her finger down the length of his cock, with just a hint of fingernail skimming the skin. A thigh muscle twitched, and she looked up at him with a grin.\n\nHe could feel his erection returning fully even before she bent down to his cock. The ends of her hair brushed his hips and curtained his view. He waited to feel her mouth, but all he felt was her breath, so hot and moist that her open mouth had to be millimeters away. As soon as he raised his hips, she pulled back. When he relaxed, she returned to hovering over his cock. Wise to the trick, he laid impassively until she blew cool air across his shaft, causing gooseflesh to form on the tops of his thighs.\n\n\"You're not doing very much touching,\" he groused.\n\nShe crawled over his body, straddled his hips, and folded her arms across his chest. He raised his head to see her better. Her chin was resting on her forearms and her ass was high, swaying like a lazy cat making up its mind to pounce. She sat up quickly when he put his hands on her arms.\n\n\"Nuh-uh. It's my turn to touch.\"\n\n\"Then touch me already.\"\n\n\"Are you always this grouchy when women touch you?\"\n\n\"I'm grouchy because one woman isn't touching me.\"\n\nShe leaned forward and brushed her lips over his. \"Where's this terrible woman?\"\n\nWhen he didn't answer, she traced his lower lip with her fingertip. \"Not speaking to me?\"\n\nShe kissed him slowly and gently. It was nothing like his aggressive, devouring kisses. He wanted to kiss her his way, but these kisses had a sweet sensuality that was beguiling. Wanting more, he pushed down the urge to take over. She nibbled at his lower lip, then ran her tongue along the top of it. Just a little after he wished she would, she pressed her mouth firmly to his. When her tongue darted in, then out, it was just a whisper. A second later, her tongue was back, curling against the roof of his mouth. Another kiss -- deeper, slower. Her tongue teased his, coaxing and tangling with it. As soon as his tongue strayed past her teeth, she sucked it deeper.\n\nHe combed his fingers through her hair, up from the nape of her neck to the back of her head, pulling her harder into the kiss and smothering her moan against his mouth. When his arm clamped over the small of her back to pull her down onto him, she raised her head.\n\n\"My turn to touch, remember?\" she admonished.\n\n\"You are touching me. Don't push me, kitten, or I'll have you on your back in a heartbeat and your little pussy will get sorer than it is now.\"\n\n\"You can dish it out, but you can't take it. Is that it?\"\n\nShe leaned down until her lips were brushing his ear. Her voice was soft and throaty. \"Remember all those times you've teased me? It's your turn.\"\n\nHe groaned and thrust upward, but she had already raised her hips. Her tongue traced the contours of his ear. She laughed softly against his ear when he shivered. Straightening her arms to raise herself, she let her hair fall around them like a curtain, carrying the sandalwood and gardenia scent of her shampoo. He could see her eyes moving across his face, taking in every feature as she traced his jawline with her fingertip. She ran her fingers back along the side of his head, combing through his hair.\n\n\"Your hair's so soft.\"\n\n\"My hair's not soft.\"\n\nThe corners of her mouth quirked up. \"I'm sorry. What I really meant to say is that your hair is coarse and manly like steel wool. I hope you won't mind if I run my fingers through it anyway.\"\n\nShe ran her hand through his hair again, fingertips caressing his scalp.\n\n\"Would you get on with it?\" he growled when he caught himself leaning into her touch.\n\n\"Of course. I can't imagine why I thought you might like another kiss.\" She shifted her position, then raised her head with a gasp when he swatted her ass.\n\n\"Give me the kiss, you little tease.\"\n\nShe fitted her mouth to his, tilting her head further to kiss him deeper, rubbing her breasts against his chest. His groan resonated inside her mouth, driving her on until she was kissing him hungrily. When she moved back, he pulled her closer. She countered by reaching down to wrap her hand over the head of his cock, massaging it until his arms dropped away.\n\nShe sat up to watch him while she licked the musky slickness from her palm. \"Don't you want me to get further than your mouth?\" she asked, reaching down to gather another taste.\n\n\"You're going to pay for this.\"\n\nShe smiled sweetly. \"But not before you do.\"\n\nBefore he could get any other ideas, she swooped down and kissed his chest. He held her loosely caged with his hands on her back, but he didn't interfere as she dropped open-mouthed kisses across his chest, licking the salt from his skin everywhere she kissed. He yipped when she licked at his nipple, and she froze, looking up at him with the point of her tongue still pressed to the tiny nub. When he didn't say anything, she started moving her tongue again, flattening it to lap across in a single swipe.\n\n\"Hey!\"\n\nShe stopped and looked up. \"You don't like that?\"\n\n\"It's just... Never mind.\"\n\nAfter a moment of uncertainty, she decided that if he wanted her to stop, he could say so. She closed her teeth gently around his nipple and ran her tongue back and forth across it. She heard him suck in his breath. He did like it. Pushing her luck, she moved across to his other nipple, sucking it softly and backing away before he could complain again.\n\nFeeling pleased with herself, she returned to kissing his chest, backing down his body as she went. His cock bumped the underside of her breasts as she kissed her way down his stomach. She paused at his bellybutton, her tongue circling and then dipping into it.\n\n\"Damn it, Mariah, come on.\"\n\nIgnoring him, she trailed kisses across the top of his hip, stopping occasionally to suck at his skin. Before his restlessness grew too great, she wiggled her way between his legs, stopping when his cock slid between her breasts. She squeezed her elbows inward so that her breasts pressed around his shaft. He raised his head to look, swore under his breath, then scooted up to prop himself up on pillows to see better.\n\n\"Do it again.\"\n\nShe put her chin in her hand and tilted her head, pretending to think about it.\n\n\"Kitten...\" he warned.\n\nWith a grin, she repositioned herself. This time, she rested her elbows beneath her so that she could bring her hands to her breasts to squeeze them around his shaft. When she looked up, he was watching with a hot, hungry look that gave her an anticipatory shiver. Her head dropped, obscuring his view, but before he could protest, he felt her tongue on his cock. She couldn't reach it well, but her fluttery licks made his hips rock.\n\nGiving in to her own impatience, she sat up between his thighs and wrapped her hand around his shaft. His cock jerked when she squeezed it. God, he was hard. She shifted, squeezing her thighs together. She stroked upward from his base, watching the clear bead of fluid form at his tip. When she reached the top of his shaft, she closed her hand around the head of his cock, slicking her palm and fingers as she caressed it. A little thrill shot through her when he groaned.\n\nWith her hand slippery, she stroked up and down his cock in long, smooth movements: slow all the way up, fast all the way down. His hips rose on every downstroke. When she noticed that his gaze was riveted on her hands, she watched, too, fascinated by his engorged cockhead disappearing and reappearing through her hand. She tried to imagine how it must look to him as her hand worked up and down his shaft.\n\n\"Kitten...\" His voice was harsh, strangled. \"If you don't get your mouth on my cock right now, I'm going pull you down on it myself.\"\n\nShe lowered herself between his thighs. Keeping eye contact, she lapped the length of his cock.\n\n\"Your mouth. Now.\"\n\nAfter a quick swirl of her tongue around the head of his cock, she took the tip between her lips and sucked him in until the head of his cock rested in her mouth.\n\n\"Deeper.\"\n\nHer lips sank slowly down his shaft. Too slowly for him. He shifted and she felt his hand on her head, pushing her mouth down his length and removing any illusion that she was in control.\n\n\"Playtime's over, kitten. Suck.\"\n\nThe demand brought a rush of wet heat between her legs. She sucked diligently and enthusiastically without further urging. With Michael's hand on the back of her head, she couldn't move up and down to allow him to slide in and out of her mouth. She tried to regain some movement by forcing her mouth down further, but his hand moved with her and she found herself trapped there. Unable to do more, she relaxed into the rhythm of her suction while she kept her tongue busy beneath the underside of his cock. She barely noticed when he took his hand off her head.\n\nHe fought the impulse to push up into her mouth, trying to ride the steady pleasure without accelerating toward the inevitable finish. When he felt the vibration of the sounds she was making, it was too much to resist. His hips rose and he thrust against the back of her throat, prompting her to begin sliding her mouth up and down his cock. Reaching for her head again, he threaded his fingers through her hair to guide her, moving her mouth faster and faster up and down his length.\n\nWhen he moved so fast that he lost his rhythm, she took over, backing off to lavish attention on the head of his cock with her mouth while she pumped his shaft with her hand. The waves of suction pulled at him, drawing him on towards the climax he fought to fend off. He gasped when she started tonguing the underside of the flared ridge. His hands tightened in her hair, but he let her maintain her pace as long as he could. His control began to slip when she started to roll his balls in her hand.\n\nShe began rocking her head again, and it was more than he could take. He pushed her head down and thrust his hips up, fucking her mouth to his climax. He held her there while she gulped around his cock. Each spurt was another pulse of pleasure, sustaining his orgasm until he was spent. His head fell back on the pillow and he released her head.\n\n\"That's my good girl.\"\n\nIn response, she made one of those satisfied sounds he liked to hear. He smiled to himself. She laid her cheek on his thigh and softly mouthed his softening cock, unwilling to give it up just yet. A few times, her tongue touched a spot that made him jump, but everything else was gentle pleasure, like a warm, softly rolling sea.\n\nShe sighed and nuzzled him when he stroked her hair. He enjoyed the contentment she got from sucking his cock. There wasn't any other time she was quite like this. She wasn't this peaceful even after he fucked her to exhaustion.\n\nHe wanted to tell her he loved her, but he knew it would spoil the moment. Since the first time he said it, she had practically snarled at him every time he tried to tell her. The first time, she did worse than snarl. He planned talk to her about it today, and he knew she was not going to be happy about that. He recognized the irony of his eagerness to talk to her about their feelings. If she didn't try so hard to avoid these conversations, he probably wouldn't see the need to talk about it at all. Her persistent refusals and evasions only made him determined to find out what she didn't want to tell him.\n\nHe doubted she was going to be happy about some of his other plans for the day, either, but he was pretty sure she would end up enjoying them. Given an inch with her \"turn to touch,\" she'd taken a mile. He was going to thoroughly enjoy making her pay for being such a tease. Keeping Mariah on edge sexually was something he wanted to reintroduce, anyway.\n\nHe had been thinking a lot about things he missed from the way things started between them, before all the ugliness. When he remembered what made him happy then, he realized that a lot of it was about things he wanted to see her enjoy, like showing her the fox family, or surprising her with a picnic, or even something as simple as making sure she had her favorite drink. He had been excited about plans for new surprises. During their estrangement, he had stopped thinking about things like that. He suspected the loss was his more than hers.\n\nShe was proving to be an intractable challenge, but he didn't believe that was the primary source of their problems. In the beginning, he was pleased by the relative ease with which she adapted to his demands. Too late, he was realizing that she had simply ceded those particular fields before he pressed his conquest. Where anything else was concerned, she was fighting him over every inch. Was fighting the right word? Resisting, maybe. In retrospect, he could see that he had confused her resistance with rejection. Of course, there had been genuine rejection after that goddamned transmitter implant that he still couldn't bring himself to have removed.\n\nHis thoughts were interrupted when Henry jumped up on the bed. He'd had the grace to make his exit earlier, but this seemed to him like a good time to come back and socialize. He snuffled Mariah's hair.",
        "\"Really, dude?\" Michael shook his head at Henry. Henry wagged his tail.\n\n\"Babe, your son's being inappropriate again.\"\n\nMariah sighed and relinquished Michael's cock. \"I've got to take him out.\"\n\n\"Let's take a shower. I'll take him out while you're drying your hair afterward.\"\n\nHe pulled Mariah off his lap and went to start the water. When he looked back, she was still sitting on the edge of the bed.\n\n\"Sweetheart, don't you want to check on Sarah?\"\n\n\"Oh!\" The guilty look on her face confessed her momentary forgetfulness about their house guest. She jumped up and started back towards her room to shower.\n\n\"Oh, no you don't.\" he intercepted her. \"In here with me.\"\n\nShe didn't argue. In fact, he was happy to see that she didn't even seem to mind. Maybe she was getting used to it. He turned on the second shower head and let her bathe herself, although he insisted on shampooing her hair first. There was a relaxed vulnerability about her when he shampooed her hair that he enjoyed. When he finished bathing, he waited for her to rinse the conditioner from her hair. She was off in her own little world again, but he didn't feel shut out the way he had before.\n\nHe stopped her when she reached for the shower door.\n\n\"Not yet, kitten.\"\n\nShe looked back at him, trying to figure out whether \"kitten,\" had been a slip of the tongue. He'd said it unintentionally once before when he didn't mean to invoke her agreement to be sexually submissive.\n\n\"But I'm finished.\"\n\n\"You may be finished with your shower, but I'm not finished with you.\"\n\nHe moved her to stand with her back against his chest. With his arms around her, he lathered up his hands and began massaging her breasts.\n\n\"Lean your head back against my shoulder.\"\n\nHe tugged her soap-slicked nipples, pinching them while they slipped from his fingers.\n\n\"Remember when you thought it was fun to tease me?\"\n\n\"You didn't enjoy it at all?\" She sounded uncertain and disappointed.\n\nHe kissed the top of her head. \"Of course I enjoyed it, sweetheart. I'm also going to enjoy making you pay for it.\"\n\n\"But...\"\n\n\"But what, kitten?\"\n\n\"But that doesn't make any sense!\"\n\n\"It doesn't have to.\"\n\n\"You're always saying that,\" she huffed.\n\n\"Maybe you should start listening to me.\"\n\n\"That's...\" Whatever she intended to say was abandoned to a throaty moan when his fingers ran up and down over her nipples, derailing her train of thought.\n\n\"Hmmm? What are you trying to say, kitten?\" he teased.\n\nShe stiffened in his arms, trying to shake off the haze of arousal. He frustrated her efforts by slipping a hand down to run a finger through her pussy. Somehow, the slickness of her natural lubrication made the water from the shower seem less wet. His other arm locked around her ribcage to steady her as he sought out her clit. She jumped when he touched it. Painstakingly slowly, he stroked it, running his fingertip across and around it from every angle. He rubbed a little faster, until she was whining for more.\n\n\"Still think it was a good idea to tease me?\"\n\nShe tried to angle her hips away, but couldn't shake his touch.\n\n\"You had it coming.\"\n\n\"And now, so do you.\"\n\nHe worked her clit until her legs were shaking. When she was close to coming, he stopped and released her. She glared at him.\n\n\"What?\" he asked, with mock innocence.\n\nHe opened the shower door for her, and she wasted no time exiting. When they had both dried off, he set her on the vanity.\n\n\"You can't just pick people up and put them wherever you want them.\"\n\n\"Really?\"\n\nHe grinned at her before he leaned down to capture her nipple. After teasing it gently, he sucked it hard.\n\n\"Ouch!\"\n\n\"Surely you don't expect me to believe that bothers you?\"\n\nShe shrugged.\n\n\"I'll tell you what. If you tell me it hurts, I'll stop.\"\n\nHe lowered his mouth to her other nipple and sucked it just as hard. She didn't say anything.\n\n\"Just couldn't bring yourself to say it, could you?\" he teased, when he raised his head. \"Now your nipples will be tender and sensitive for me all day. You remember what that's like, don't you?\"\n\nThe slightly unfocused look in her eyes told him that she remembered exactly what it was like. He tilted her chin up for a gentle nibbling kiss, much like she'd done earlier, until the kiss became more passionate. When he stepped back, he ran the pad of his thumb over her lower lip and then slid it into her mouth. She sucked it softly while he slid it slowly in and out.\n\nHe kissed her again before he left to dress and take Henry out. \"When I get back, let's talk about Sarah. I don't see how she can go back home under the circumstances.\"\n\nWhen he left, Mariah went back to her own bathroom to finish getting ready. When Michael returned, he found her in the kitchenette. She had made coffee. Henry insisted on his hug and kiss, even though he had been gone for all of ten minutes.\n\n\"Thanks for taking him out.\"\n\n\"No problem. We talked about you the whole time. He told me all your secrets.\"\n\n\"Yeah? You sure you were understanding him correctly? He usually wants to talk about squirrels.\"\n\n\"That explains why he told me where you hide your nuts for the winter.\"\n\nMariah pushed a cup of coffee towards him. \"So, about Sarah?\"\n\n\"As much as I'd like to just take her back home, I don't see how we can. I'm sure Hawley already has people looking for her.\"\n\n\"First of all, it's up to her. You can't make decisions like that for other people.\"\n\nMichael rolled his eyes. \"She seems to have better sense than you do, so I think she probably recognizes that going home isn't safe.\"\n\n\"I'm sure she does. I just want to make sure the choice is hers. You can't just add people to your collection.\"\n\nMichael looked tremendously pleased with himself.\n\n\"What are you grinning about, mister?\"\n\nHis grin widened and he moved to stand behind her. With his lips against her ear, he teased, \"Sounds like someone is jealous.\"\n\n\"Jealous?\"\n\nHe groped her breasts. He could feel her swollen nipples even through the dress and her bra. \"Yep, jealous. You don't want other women in my 'collection.'\" He was joking, but he did hope she felt a little bit jealous.\n\n\"If you want to find yourself a collection of willing women, it'll keep you out of my hair.\"\n\n\"Sorry, sweetheart, but I'm all yours.\"\n\n\"You are not mine.\"\n\nMichael moved the coffee cups aside and tried to bend her over the table. She resisted, but he had no need to physically force her.\n\n\"Kitten, time to obey.\"\n\n\"Must be nice having a magic word,\" she snapped, but she allowed him to bend her over the table without further resistance.\n\n\"Oh, it is nice. I enjoy it tremendously.\"\n\nHe pulled the skirt of her dress up around her waist and pulled her panties down, then stepped back to appreciate the view.\n\n\"That's really lovely kitten. I was going to give you a spanking now, but I have a better idea.\" He caressed her ass. \"But don't worry, I'll add the spanks you just earned to your total. You're up to thirty-eight already, and it's still morning. I assume you know what the additional five spanks are for?\"\n\nShe remained mute.\n\n\"Thirty-nine.\"\n\n\"Seriously?\"\n\n<br >\"Forty.\"\n\n\"Because I deny your ridiculous pretense of... whatever you want to call it.\"\n\n\"Love? Is that the word you can't bring yourself to say?\"\n\n\"Whatever you want to call it.\"\n\nHe edged her feet apart to give himself better access to her pussy.\n\n\"That is what I want to call it.\" He slipped a finger between her folds and found her still wet and swollen from his attentions earlier. \"But we're going to talk about that later. Right now, we're talking about Sarah.\"\n\n\"Good.\" She tried to straighten up, but Michael put a hand on her back to stop her. He swirled his finger through her pussy, then sucked it clean. \"You're delicious, kitten.\" He pushed his finger into her and pumped it in and out, then offered his finger to Mariah. \"Want to taste?\"\n\n\"No!\"\n\n\"Suit yourself. Since you think Sarah will agree that it's not safe to go home, let's just skip to the part about what to do with her, shall we?\"\n\nAs he spoke, he stroked her clit. She shifted her hips in a fruitless effort to avoid his finger.\n\n\"Well, sweetheart, can you think of any alternative to her staying here?\"\n\n\"I can't believe you expect me to have a normal conversation like this. No, I don't know of any alternative.\"\n\nMichael's finger circled her clit. \"I suppose she can be an early installment on the first group of people we're bringing in, but that presents a couple of problems. We don't have a house built for her and we don't have a job for her. For the time being, we could convert one of the empty offices to a bedroom. They used to be bedrooms, and the larger ones still have an en suite bathroom. But, those slots were supposed to be for people with necessary skills. She certainly doesn't seem to be cut out for heavy labor. How did she make her living until now?\"\n\n\"She does lots of things. Mostly, she mends clothes and she gathers clams from the riverbank. The freshwater clams here are really small and it takes forever to gather enough, so most people don't bother with them until they've run out of other options. She cans them and trades them at the shop. She\u2014\" Mariah gasped when he pinched her clit. \"She does all sorts of other stuff to fill in the gaps. In autumn, I collect black walnuts for her and she dries them and shells them. They're particularly difficult to shell, and you usually have to pick the nut meat out of the bitter shell. I get some of the shelled nuts and she keeps some, and she trades the rest at the shop. In the spring, she gathers earthworms. Just stuff like that.\"\n\nMichael paused in in his exploration of Mariah's pussy. \"Are you telling me that people are eating worms?\"\n\n\"By the time spring gets here, people are out of food and nothing has had time to grow yet. So, yeah, of course they eat worms.\"\n\n\"That's disgusting.\"\n\n\"That's surviving. Other people don't have the options you do.\"\n\nHe sighed and pulled her panties back up and let the skirt of her dress fall back into place, then pulled her up into a hug.\n\n\"I guess I just didn't realize how bad it was. Did you eat worms?\"\n\n\"Why? Afraid I have worm breath?\" She tried to make light of it. \"You know I'm a vegetarian, Michael.\"\n\n\"I didn't know if worms counted. If food is so hard to come by, how did you get by without eating meat?\"\n\n\"We're supposed to be talking about Sarah.\"\n\n\"And we will, as soon as you answer my question.\"\n\n\"I grew food and I did a lot of foraging. Nuts were a big part of my protein and calorie source. Besides the black walnuts Sarah shelled for me, I gathered bushels and bushels of hickory nuts and acorns. Those are very high-value nutritionally. I hid stashes of them in different places so my whole supply couldn't get raided.\"\n\n\"Henry was right! You have been hiding nuts for the winter!\"\n\nShe laughed. \"Yeah, I suppose I do.\"\n\n\"Did,\" he corrected.\n\n\"Will,\" she rejoined.\n\n\"You will not.\"\n\nShe shrugged. \"Well, maybe not this year.\"\n\nWhatever he wanted to think, when this was over, she was going back to life as usual. In all likelihood, he would offer only token resistance to it when the time came. By the time the project was complete, he would be well over his romantic delusions and tired of playing house. She refused to harbor fantasies about a future with Michael. It wasn't in the cards, and that was probably for the best.\n\nShe didn't notice the anger that flashed across Michael's face at the suggestion that she would return to foraging after this year. His anger was fleeting, though. He pulled her body against his and kissed her deeply, trying to communicate what his words had thus far failed to make her understand. He smiled at her dazed expression afterward.\n\n\"What am I going to do with you, sweetheart?\"\n\n\"You don't seem to run out of ideas for that. But, about Sarah?\"\n\n\"Right, Sarah. A seamstress would be a very useful skill, but perhaps not right away. Maybe she can be your assistant until there's a demand for a seamstress?\"\n\n\"Okay. But an assistant for what?\"\n\n\"I told you things were going to change, and I meant it. One of those changes is going to be a lot more attention to the project. We'll have a staff meeting tomorrow about it. I'm going to leave a lot of the details in your hands, so I'm sure you'll find plenty of ways that Sarah can help. When I say I'm leaving details in your hands, that is not license to turn construction worker or farmer. I expect you to be supervising things, not doing them personally.\"\n\nBefore she could respond, he opened the channel on his radio. \"Ezra, you there?\"\n\n\"Yes, I'm down by the kitchen. Marcus is making Sarah a late breakfast.\"\n\n\"That's just who I was looking for. Mariah and I will meet you there shortly.\"\n\nWhen he left the kitchenette, he realized Mariah hadn't come with him. He peeked back around the corner to see her standing there, looking stubborn.\n\n\"I like working, Michael.\"\n\n\"You like working my nerves. Now come on. Don't you want to see Sarah? You can argue with me later.\"\n\n\"Okay. But just so we're clear, I'm not agreeing not to work on things directly.\"\n\n\"Babe, stop being difficult and come on. I promise, I'm very clear that you practically never agree to anything.\"\n\nHe landed a satisfying spank as she passed him. When they got to the elevator, she waited until the door was closing, darted out, and stuck her tongue out at him as the doors closed. She dashed down the stairs fast enough to be waiting for him, slightly out of breath, when the elevator door opened. He pulled her into the elevator and closed the door.\n\nHe grinned at her surprise. \"Show me that wicked little tongue again.\"\n\nHer mouth stayed firmly shut.\n\n\"Kitten...\"\n\nAfter a moment, he shrugged. \"Now you're up to forty-one spanks. Want to keep going?\"\n\nShe glared at him, but stuck out her tongue briefly. \"I was only playing.\"\n\n\"So am I. You still get that extra spank, though.\"\n\nHe backed her against the wall of the elevator, gathered her wrists in one hand and held them against the wall over her head. \"You could have just been good and ridden down with me, but since you want to be bad, I can help you with that.\" He ran his free hand over her body.\n\n\"Michael! Someone could open the door.\"\n\nHe looked unconcerned.\n\n\"I suppose they could. I'll just explain that you were having too much fun being my bad little girl to stop when we got to the first floor.\" His nails raked over her nipples through the fabric of her dress and bra. \"Why do I even let you wear bras? Everything would be so much nicer without them.\"\n\n\"Michael, you can't\u2014\"\n\nHe kissed her into silence. When she began returning his kisses, he released her wrists and circled his arms around her. Again, he wanted to tell her he loved her, but knew it would only upset her. He had never expected to find himself in this sort of position. Until now, his experience with relationships had centered around avoiding entanglements. He never realized it could be so difficult to get entangled, once you found someone you wanted to get tangled up with.\n\n\"Ready to go see Sarah?\"\n\nShe nodded, still quiet from his kisses.\n\nAs they neared the breakfast bar, they could hear Ezra telling yet another sea story, this time about a little noodle shop in Saigon where customers were served by trained macaques in aprons.\n\n\"Why didn't the monkeys eat the noodles?\" Sarah asked.\n\n\"Well, these monkeys\u2014 Ah, there they are,\" Ezra broke off as Michael and Mariah came around the corner. \"I thought you might have gotten lost in your own house.\"\n\nMichael grinned and plopped down next to Ezra. \"Mariah wouldn't stop fooling around. I tried to tell her to hurry.\" He shook his head resignedly.\n\nMariah sputtered, but decided not to tempt Michael to hint at the real reason for the delay. She went over to Sarah and hugged her. \"How'd you sleep?\"\n\n\"Better than I thought I would. Once I finally started to relax, I was out like a light.\"\n\nEzra and Sarah were already finished with breakfast and were nursing their coffee. Michael poured another cup for himself and made one for Mariah, complete with enough cream and sugar that it barely qualified as coffee -- just like she liked it.\n\n\"Sarah, Mariah and I were talking, and\u2014 Mariah, why don't you explain it?\"\n\n\"We're worried that it's not safe for you to go home. Hawley's the type to hold a grudge, but I suppose I don't need to tell you that. He went after you because he was pissed off at me. Now he'll be pissed off at you, too. How do you see the situation?\"\n\nSarah looked serious. \"I've been thinking about that, too. I know those guys will be looking to punish me for getting away from them. I just don't know what to do about it.\"\n\n\"We were thinking you could stay here. There are a bunch of empty offices that used to be bedrooms. We can just convert one back to a bedroom. The thing is, there are some pretty serious restrictions that come along with staying here.\"\n\n\"Thank you for offering. I wanted to ask, but I just couldn't. What sort of restrictions, though?\"\n\n\"Well, Mr. Personality here won't let anyone go in and out. You're either in or you're out. That's why all you got from me was a note. Allegedly, I can go back out with a guard, but that hasn't happened yet.\" She shot Michael a look.\n\n\"And yet, you still managed to get yourself abducted,\" Michael reminded her.\n\nSarah's eyes widened. \"You actually did get abducted? I thought they only tried!\"\n\nMariah shook her head. \"No. Well, sort of. But it was a very, very short abduction. I didn't even get out of sight of the compound walls before the whole security team drove out and had them surrounded. It was all very fast and everyone was very professional. Everyone except Hawley's guys, anyway. One of those dopes was waving a knife at Ezra from more than a car length away, while Ezra had a gun aimed at his head. Typical Hawley goons.\"\n\nSarah looked at Ezra with undisguised admiration. Mariah had to hide her smile in a sip of coffee. Michael didn't have that much decency. He grinned like a dope until Mariah elbowed him in the side.\n\n\"Ouch! Forty-two.\"\n\n\"Forty-two?\" Ezra asked.\n\nMariah rushed to offer an explanation before Michael could say something embarrassing. \"It's just a game.\"\n\n\"How do you play?\" Sarah asked.\n\nMichael smirked. \"Every time she breaks a rule or does something she knows she's not supposed to do, I give her a new number.\"\n\nMariah stared daggers at him.\n\nEzra laughed. \"And you're already up to forty-two?\"\n\n\"Oh, that's just from yesterday afternoon and today.\" Michael looked pleased with himself.\n\n\"Mariah!\" Sarah scolded.\n\n\"It's not my fault. He has too many rules. Speaking of his rules, the one about going in and out isn't the only one. You're also not allowed to talk about what goes on inside the compound to anyone outside. Of course, since he never lets anyone in or out, that's hardly an issue.\"\n\nSarah frowned. \"What sort of things are going on that I shouldn't talk about? Is there something bad going on?\"\n\n\"No, nothing like that. It's just for security. You know I wouldn't be involved in anything shady.\"\n\nMichael snorted.\n\nSarah jumped to Mariah's defense. \"She wouldn't!\"\n\nMichael rolled his eyes. \"Depends on your definition, I suppose.\"\n\n\"Just ignore him. That's what I do.\"\n\n\"Which is why it's just after ten in the morning and she's already up to forty-two.\"\n\nThe heat rose in Mariah's cheeks. She had the uncomfortable feeling that Ezra, who was remaining studiously silent with an impeccably neutral expression, might have guessed what the numbers were about. She tried to steer the conversation back to safer ground.\n\n\"So, what do you think, Sarah?\"\n\n\"I think it sounds amazing, but what would I do here?\"\n\n\"You could be Mariah's assistant,\" Michael volunteered.\n\n\"What he means to say is that you could work with me on a long-term project we're starting.\"",
        "Sarah laughed, and Mariah caught Ezra's smile at the sound of her laughter.\n\n\"Honestly, Mariah, 'assistant' is fine. I'm not the management type.\"\n\n\"Neither am I! But tell me, what do you think? Do you need time to consider it?\"\n\nSarah grinned. \"Do I look like I'm crazy? Of course I'd like to stay here!\" She turned to Michael. \"Thank you. I really appreciate this.\"\n\nMichael smiled. \"I'm glad we could help.\"\n\nEzra's face was plastered with a giant smile.\n\n\"Someone will take you to get your things later, but do you want me to show you around while Michael and Ezra sort out the details?\"\n\n\"Yes!\"\n\nMichael caught Mariah's hand as she got up to leave. \"Please keep the tour inside for right now. I don't want you to go out until the security team has had a chance to assess things after everything that happened last night.\"\n\n\"Okay.\"\n\n\"Thank you.\" He gave her hand a squeeze before he let her go.\n\n\"How come you got the sweet, cooperative one and I got the hard-headed difficult one?\" Michael complained after Mariah and Sarah left.\n\nEzra frowned. \"I don't 'have' Sarah.\"\n\n\"That's not what it looked like to me.\"\n\n\"Like you'd know.\"\n\n\"I know you had a big, dumb hundred-watt grin on your face when she said she'd stay.\"\n\n\"It's not safe for her to be out there.\"\n\nMichael was serious for a moment. \"Honestly, Ezra, the more I hear about what goes on out there, the more I think it's not safe for anyone to be out there. Did you know people eat earthworms?\"\n\n\"They are? I mean, I guess there's no reason not to. I remember hearing in survival training that they were a good source of protein. Still, though... Are you sure Mariah wasn't pulling your leg?\"\n\n\"I'm sure. She said that by the time spring comes, people are running out of stored food and nothing new has grown yet.\"\n\n\"Don't they hunt?\"\n\n<br >\"I assume they do. But what are they hunting with? There's no shortage of guns, but they must have run through their ammo by now.\"\n\n\"Bow hunting? Fishing? Trapping?\"\n\n\"If they're eating worms, I think we can assume they've tried that. If you had a little village, you could survive that way. I don't think it can feed a whole town, though. Even after everything that's happened, there must be at least a thousand people here if you count the kids. Probably a lot more. It's not just the food. Whenever Mariah takes an opportunity to remind me I don't know what it's like out there, I get the feeling there are all sorts of things she's not telling me.\"\n\n\"Probably because you'd freak out. You should have seen yourself yesterday out our planning meeting. If you react that way, it's no wonder she doesn't tell you.\"\n\n\"How would you like it if you heard Sarah talking about how she went waltzing through that gang of thugs on a regular basis, just to rob their safe?\"\n\n\"Sarah wouldn't do that.\"<br ><br >\"My point exactly.\"\n\n\"You should stop talking about Sarah like belongs to me. I have an interest in her welfare. I'll admit I'm fond of her. But for Pete's sake, Michael, I only me the girl last night. She's her own woman and I don't even know if she'll have any interest in me.\"\n\n\"You do recall where she spent the night?\" Michael goaded him.\n\n\"It wasn't like that. I spent the night in a chair.\"\n\n\"Relax, Ezra. I wasn't suggesting you bedded the poor girl right after everything she's been through. You're not a toad. My point is that you were the one who made her feel safe.\"\n\n\"She feels safe with me because I literally carried her away from her kidnappers.\"\n\n\"Yeah, and now she looks at you like you're her very own personal hero.\"<br ><br >\"Why don't we stop worrying about my personal life and get down to business? We've still got that asshole in the basement to question, a review of all of yesterday's operations to conduct, a security reassessment, and we've got to get Sarah moved in. At some point, we also need to talk about what Quinland is doing poking around Ashland.\"\n\n\"You're right. The first thing we need to figure out our game plan for today. I'm guessing you want to personally take Sarah out to get her things?\"\n\n\"I'd appreciate that.\"\n\n\"Of course. You were the one I wanted to go out there with Mariah. Who are you going to take with you?\"\n\n\"I'd like to take Yvonne and Jack. Sarah's gotten a little more comfortable with both of them. Yvonne's situational awareness is a big plus, and you can't beat Jack for reaction time. I hate to peel three people off of security here, but we have every reason to expect trouble.\"\n\n\"That's fine. Is there anything Nate and Andy can be working on while you're gone?\"\n\n\"I'd really rather keep them at their posts. In fact, I was going to see if Daniel would mind pitching in to monitor the camera feeds. That way Nate can take a post on the roof and Andy can be on the ground near the gate.\"<br ><br >\"Is there anything I can do to help?\"\n\nEzra hesitated. \"Just as a precaution, I think you ought to keep a gun on you while we're gone, and of course, a radio. I'd rather you stay within a few minutes of the house until we get things sorted out. I'm probably being paranoid, but that's my job. That guy Quinland sent, Fred, or 'Dave' as he's calling himself, has me kind of antsy.\"\n\n\"Me, too. When you guys get back, let's get the security team together for a meeting. I might bring Mariah, too, since she seems to be a font of information she has no business having.\"\n\n\"Good idea.\"\n\n\"I'll go see if I can find the ladies while you hand out assignments.\"\n\n\"Why don't you give Mariah a radio?\"\n\n\"Think I haven't tried? She won't keep it with her. It's one of many little rebellions that I have yet to get to the bottom of.\" Michael stood to go. \"I'll radio you when I've found them.\"\n\n&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;\n\nAfter they left Michael and Ezra, Mariah led Sarah to the elevator.\n\n\"I don't know how long we have, so I want to show you the empty rooms first. Then we can start on the rest of the house. I can't believe you'll be staying here with me!\"\n\n\"I know! I don't know what it's going to be like not being in my own house, but there's so much to like here. Air conditioning, hot water, the food, not getting kidnapped\u2014\"\n\n\"The handsome head of security that's gaga over you,\" Mariah interrupted.\n\n\"He is not!\"\n\n\"Did you see the smile on his face when you said you would stay?\"\n\n\"No. I was afraid to see how he reacted.\"\n\n\"Afraid? Why?\"\n\nSarah twisted her hands. \"I didn't want to be disappointed if he didn't look happy about it.\"\n\nMariah rolled her eyes. \"Seriously? How'd it go last night, by the way?\"\n\n\"Mariah! He slept in the chair. He was a perfect gentleman.\"<br ><br >The elevator opened on the second floor and Mariah led Sarah down the east wing.\n\n\"Sounds like you're the one with your mind in the gutter! Of course he was a gentleman. I wouldn't have let you go off with a cad at a time like that. I just meant stuff like was it awkward? What did you talk about? How hard was it to get to sleep?\"\n\n\"I thought it would be a lot more awkward than it was. He kept making me laugh, and that helped. The whiskey he gave me helped, too. Real whiskey! And don't be getting ideas, because I just had one drink.\"\n\nThey had reached the part of the hall where the offices began.\n\n\"I've only glanced into most of these offices. Michael says some of them have bathrooms in them. They used to be bedrooms. Let's just look at all of them.\"\n\nThe first offices they passed looked like they were subdivisions of the original bedrooms. The last four offices at the end of the hall were twice as large and they all had bathrooms.\n\n\"They're huge.\" Sarah was having a hard time imagining any of the offices as a bedroom.\n\n\"I guess a big, fancy house means big, fancy rooms.\"\n\n\"You sound so disapproving.\"\n\n\"It's such a waste. Nobody needs all this.\"\n\n\"Looks like you're going to be the mistress of this big, fancy, wasteful house,\" Sarah teased.\n\n\"Very funny. It's not my house and it never will be.\"\n\n\"I don't know, Mariah. You guys seem pretty serious to me.\"<br ><br >\"Don't buy into his B.S. He's a control freak with some good qualities that occasionally shine through, but he's still a control freak and he can be a real jerk. Let's talk about something more pleasant. Like why Ezra was sleeping in a chair instead of the couch.\"\n\nSarah blushed. \"There wasn't a sofa in his bedroom.\"\n\n\"Ah, so he slept in a chair so he could stay with you in the bedroom?\"\n\n\"I felt better that way.\"\n\n\"That's so romantic that it makes me queasy.\"\n\n\"I don't know who you think you're fooling, Mariah. I've known you a long time. Deep down, you've got a romantic streak a mile wide. You even read romantic poetry. Who does that?\"\n\n\"I read science fiction, too, but you don't see me looking for little gray men. Let's just pick out your room before I get diabetes from all this sugary stuff. Which one do you want?\"\n\n\"I don't know. They all seem about the same. They're all huge and they all have windows.\"\n\n\"True, but you get a different view from different rooms. And don't forget the bathrooms are a little different.\"\n\n\"I should pick the one with the biggest tub!\"\n\n\"You could go swimming in any of them. You in one of those bathtubs is like a little kid wearing a ten-gallon hat.\"\n\nAfter another survey of the bathrooms, Sarah picked the one on the southeast corner. They were on their way back to the elevator when Michael found them.\n\n\"Did you guys pick out a room?\"\n\n\"Yes,\" Sarah answered. \"Thank you again. I don't know where I could have gone if you hadn't offered. I know they'll look for me.\"\n\n\"My pleasure. We'll get you moved in right away. Ezra, Yvonne and Jack are going to take you to your house and help you move your stuff. I'll ask Paula to figure out what we need to do to turn the office into a bedroom. If you two at a good stopping place, I'll let Ezra know you're ready to go.\"\n\n\"I'm ready.\"\n\nMichael radioed Ezra, who asked them to meet him on the first floor. Jack and Yvonne were already waiting with Ezra. Ezra, Yvonne, and Jack joined Sarah in the elevator when Michael and Mariah stepped out.\n\n\"Can I go with Sarah to help?\" Mariah asked, as soon as the elevator doors closed.\n\n\"No, sweetheart. She'll have plenty of help.\" He was somewhat gratified that she actually asked this time, even if she ought to have known she couldn't go. \"Besides, we have things we need to do here.\"\n\n\"What are we doing?\"\n\n\"For starters, let's figure out what needs to be done to convert the office back into a bedroom. I don't remember exactly what furniture's still in there, so let's go take a look.\"\n\nBack upstairs, they passed Daniel in the security office. Michael thanked him for pitching in to watch the feeds. At the end of the hall, Mariah showed him the room Sarah had chosen. There was very little in it. There was a desk, a rolling chair, a credenza and a bookcase.\n\nMariah gestured to the mostly-bare room. \"They're all this empty.\"\n\n\"That's okay. I'll ask Paula to figure out what we've got for bedroom furniture. She always seems to know where stuff is that I didn't even know we had. I know for sure that we have a bunch of mattresses.\"\n\n\"I can help her.\"\n\n\"I'm not sure if you're going to have time for that.\"\n\n\"What do you mean? Is there something else we need to take care of?\"\n\n\"As a matter of fact, there is.\" He leaned back against the desk and drew Mariah close with an arm around her waist. \"Since you're already up to forty-two spanks, I've decided to give you a chance to take a few off your total. Are you interested?\"\n\n\"Maybe. What's involved?\"\n\n\"You're so suspicious, sweetheart. All you have to do is give me a kiss.\"\n\nShe stretched to kiss him, then looked at him expectantly.\n\n\"That brings your total down to forty-one. If you want to take any more off the total, you'll have to do better than that. I want a real kiss.\"\n\nShe thought about it for a second before she made up her mind to kiss him, but when she did it, she did it right. She circled her arms around his neck and pressed herself against his chest, rubbing against him as she stretched to feather her lips over his. Hovering, she waited until his hands on her back tightened before she pressed her mouth to his. Her kiss was soft and lingering, a melting intimacy that made him feel his heart in this throat. When she drew back, the look in his eyes made her shiver.\n\n\"Beautiful, kitten.\" His voice was thick. \"Thirty-eight.\"\n\nHis hand slid from the small of her back to the nape of her neck, guiding her back to his mouth. The other hand slipped down to firmly grip her buttock, pulling her tighter against him. He slanted his mouth over hers, kissing her with slow-burning intensity. Her low moan surged through his nerves, and he kissed her harder and deeper, forcing her mouth to open to him.\n\nHe shifted to bring his leg between her thighs. With his grip on her ass, he pulled her toward him, grinding her pussy against his leg. She canted her hips, clearly enjoying the stimulation, but a moment later, he felt her hands on his chest, pushing herself away. He held her in place.\n\n\"What's wrong, sweetheart?\"\n\nShe didn't meet his gaze. \"Could you let me off of your leg?\"\n\n\"That depends. Why do you want me to do that?\"\n\n\"I just do.\"\n\n\"Well, I 'just do' want to keep you right where you are.\"\n\nWhen she didn't respond, he pulled her more firmly against his thigh.\n\n\"Wait! There's a good reason!\"\n\n\"I'm waiting to hear it.\"\n\n\"Can't you just take my word for it that it's a good reason?\"\n\n\"Nope. Do you want to tell me, or shall I keep going?\"\n\n\"I just don't want to get my dress wet.\"\n\n\"Mmmmm... That's a lovely reason.\" He eased her off his leg.\n\nHer revelation brought his erection to near-painful rigidity, despite his satisfaction earlier that morning. He took her hand and pressed it to his crotch, letting her feel his reaction. His lips brushed the top of her ear as he whispered to her. \"I love knowing how wet you are, and I know just what to do about it.\"\n\nHe closed the office door before he sat her on the edge of the desk and laid her back on it. She sat up again when he rolled the chair up and seated himself between her legs.\n\n\"Lie back down, kitten.\"\n\nShe laid back on her elbows.\n\n\"All the way.\"\n\nHe waited until she laid all the way back before he flipped the skirt of her dress up over her waist. She was wearing white lace panties, and the sheer material between the embroidered swirls had become all but transparent where it was wet. She jerked when he touched her. He pushed the fabric back and forth over her clit until she started to whimper.\n\n\"I don't think these panties are going to do you any good. Let's just lose them, shall we?\"\n\nHe placed her feet on the arms of the chair and hooked his fingers around the waist of the panties. \"Raise your butt for me.\"\n\nHe stripped her panties down and off her legs. She was absolutely soaked. Moisture shone on her mound and on the insides of her thighs. He pulled her to the very edge of the desk and spread her legs wide. Her pussy unfurled to reveal her glistening reddened center. He bit back a groan.\n\nMariah's head came off the desk when his tongue swiped through the center of her pussy. She steeled herself for another slash of sensation, but it didn't come. Instead, she felt Michael's tongue moving delicately along the crease of her inner thigh. Taking a deep breath and letting it out again, she focused on relaxing. As soon as she did, his tongue flicked across her clit, causing her breath to hitch and her stomach to tighten. Without pausing, he returned to licking her thigh.\n\nShe knew what to expect now, but she didn't know when to expect it. Not knowing left her on edge. He continued to tease her with occasional darting licks over her clit as he licked the insides of both thighs. When he paused, she steadied herself, expecting another flick of his tongue. Instead, she felt two of his fingers sliding into her, giving her the fullness she craved. Then his tongue was everywhere, lapping the lips of her pussy, her mound, and finally, across her clit. Her moan was the only sound in the room, and it echoed in her ears.\n\nBiting down on her lower lip, she struggled for equilibrium. She knew, of course, what Michael was going to do. He was going to bring her to the edge and leave her hanging there. Unfortunately, knowing what he planned didn't confer any ability to avoid it. Trying to fight it by distancing herself would only prolong the inevitable. He would reach his goal eventually. Logic dictated that she should relax and let him reach it sooner. With her pulse pounding in her throat and nerves on edge, she was unswayed by logic. She resisted.\n\nIf he noticed her resistance, he wasn't phased by it. Slowly and insistently, his fingers slid in and out, making her swell and cling. If she tensed, her pussy grabbed at his fingers, heightening the sensation. Her body's every reaction reinforced the effectiveness of the methods he used against it. She was dismayed by the weakness in her strangled whimper when he sucked at her clit. The battle was lost, but she was unable to surrender. When he finally stopped, she was covered in a sheen of sweat, panting and twitching on the verge of an orgasm.\n\nThe fabric of her skirt whispered back down over her legs. A deep sigh of relief carried some of the tension away. It was over for now. She heard his chair roll back, then creak as he stood, but she didn't move. With her head turned to the side, she didn't have to face him yet. She just breathed. In and out, in and out, rising and falling. Her pulse slowed its frantic flutter until she couldn't feel the pounding in her pulse points. His hand on her knee startled her and she jumped.\n\nMichael was perplexed by the surprise on her face when he touched her.\n\n\"I'm sorry. You weren't answering me.\"\n\n\"Oh,\" she said vaguely. She hadn't heard him.\n\n\"Are you okay?\"\n\n\"Yes.\"\n\nShe sat up, then got to her feet. He eyed her dubiously.\n\n\"What's going on, sweetheart?\"\n\n\"Nothing's going on. I'll go find Paula and ask her about fixing the bedroom.\"\n\nWith the heady scent of Mariah's arousal in the air, Michael decided that calling Paula would have to wait. He had the good sense not to explain his reasoning to Mariah.\n\n\"No, I'll take care of that here in a bit. Let's go upstairs. I promised Ezra I would keep a sidearm on me while he's gone. Nothing to worry about, but he wanted to take precautions while he's out helping Sarah.\"\n\nShe followed him toward the elevator without comment. He slowed down to let her catch up, but she stayed behind until he took her hand. He didn't press her for conversation until after he they reached his room. He led her with him to his closet and showed her the drawer where his pistol was kept. Nate would have a coronary if he knew Michael was showing Mariah. Checking that it was unloaded, he handed it to her.\n\n\"We're going to need to teach you to use one of these, just as a precaution.\"\n\n\"I know how to shoot a gun.\"\n\n\"What I mean is that I want you to get comfortable with it. You can use a smaller one than this.\"\n\nShe stared at him until he began to wonder what he said wrong. Fitting the grip into the web of her hand, she brought it up in a push-pull grip facing the corner of the closet in a modified isosceles stance. She lined up the sights, dry-fired it double action and then cocked it and dry-fired it single action. After clicking the safety over, she placed the pistol back in his hand.\n\n\"I suppose a .44 magnum is a better choice than a Desert Eagle, but I'd prefer the accuracy of a .44 special, were I suddenly possessed of a desire to tote around a hand cannon. If you really want to get practical, consider something simple with a magazine. Maybe a Glock 32 in .357 sig. I'm going to go take a shower. By myself.\"\n\nShe left him staring at the gun in his hand, trying to figure out which combination of things had just gone wrong. His first impulse was to insist on showering with her, but he was beginning to realize that there were times he had to give her space. He didn't like it, but the alternative frequently backfired. The problem was that he didn't always know how to tell when it was really necessary. If he backed off every time, she would resort to avoiding him whenever she simply didn't want to deal with something.",
        "He loaded the revolver and started to put it in a pocket holster, then switched to a waistband holster because he needed an ammo pouch for a couple of speed loaders. Mariah had a point about the magazines. The real question was why she had an apparent proficiency with handguns, assuming her familiarity was matched by her marksmanship. He would like to get her outfitted with a firearm of her own choice, but the \"hand cannon\" comment didn't sound as though she would be cooperative.\n\nWhen he removed the pocket holster, her wadded up panties fell out of his pocket, as if to drive home the point that Mariah's familiarity with handguns was probably not his most pressing mystery. He felt uneasy about her reaction earlier. Nothing unpleasant had happened to her. He had teased her to the brink many times before. It frustrated her, but it usually made her eager for more. What was different this time? The morning had been going so well, too.\n\nHe decided to wait for Mariah in her room, but he went first to the kitchen and poured her a glass of chardonnay. When he returned, she was already out of the shower. Her hair was still pinned up to keep it dry, and she was rummaging in the lingerie drawer.\n\n\"I'll be over by the window,\" he called, in order to avoid startling her when she walked out of the closet.\n\nShe took so long in the closet that he suspected she was delaying, but when she came out, she joined him at the window. He handed her the wine.\n\n\"It's not even noon,\" she objected.\n\n\"What difference does that make?\"\n\nShe shrugged and accepted the glass. \"You're right. It doesn't make a difference.\"\n\nShe sipped in silence. When he realized she wasn't going to speak, he decided to start with the easiest questions first.\n\n\"I didn't know you had that kind of familiarity with guns.\"\n\n\"I was just showing off because you were being condescending.\"\n\n\"I didn't mean to be condescending, but I see what you mean. So how did you get to be so familiar with them?\"\n\n\"How did you?\" She turned the question around.\n\n\"My father was convinced the villagers would overrun the castle.\"\n\n\"The villagers ought to have done so. I became familiar with guns because my uncle was a very enthusiastic gun enthusiast.\"\n\n\"You've never mentioned your family before.\"<br ><br >\"Did you think I hatched from an egg?\"\n\n\"Sweetheart, have I told you lately that you're a smartass?\"\n\nShe shrugged. \"Probably.\"\n\n\"So why don't you ever talk about your family?\"<br ><br >\"Why would I? You don't talk about yours, either.\"\n\n\"Fair enough.\"\n\nMariah fell silent. She was facing the window, but her gaze was so fixed and unblinking that he wondered what she was actually seeing. Her expression was neutral, but not studiedly so. The untouched glass of chardonnay was balanced delicately in one hand, half-raised as though she might take a sip. Duncan walked back and forth on the windowsill in front of her, twining his tail around her other hand. Other than the rise and fall of her chest and the idle swirl of her hand around Duncan's tail, she was motionless.\n\nMichael tried to assess the quality of the silence between them. He had felt hostility in her silence before. He had experienced companionable silences with her. This didn't feel like either, nor did he feel shut out completely. Her attention seemed to be turned inward. He moved to stand behind her and wrapped his arms loosely around her midsection.\n\n\"Drink your wine, sweetheart.\"\n\nShe glanced at the glass as though she had forgotten she was holding it, then took a sip.\n\n\"Good girl. I want you to finish your wine before we go.\"\n\n\"Where are we going?\"\n\n\"To the pond. But first I want to talk to you about what happened earlier. Are you upset?\"\n\nShe sipped her wine. \"I don't know.\"\n\n\"Baby, I need you to help me understand.\"\n\n\"I don't know how to do that.\"\n\nHe sighed. \"Come sit down with me.\"\n\nHe sat on the sofa facing the window. When she tried to sit beside him, he guided her onto his lap instead.\n\n\"Don't forget your wine.\"\n\nShe raised the glass and kept drinking until she drained it. He took the empty glass from her and set it on the end table.\n\n\"I'm trying to figure out what happened. This isn't the first time I've teased you or kept you on the edge. You may get frustrated, but it usually excites you, doesn't it?\"\n\nMariah looked away. \"You're making a big deal out of nothing.\"\n\n\"Please answer my question, kitten.\"\n\nHer eyes flashed to his when she heard, \"kitten.\" He could almost see the wheels turning as she analyzed whether or not she was obligated under their agreement to answer his question.\n\nShe sighed heavily. \"Yes.\"\n\nHe kissed her shoulder. \"I know you were excited when I was kissing you. Were you excited when I first set you on the desk?\"\n\n\"Why are you doing this? You know I don't want to talk about it.\"\n\n\"You know why I'm doing it. I don't want to upset you, but I have to understand so that it doesn't happen again.\" He caught her quick, sideways glance. \"And before you get any big ideas, the solution is not going to be not to tease you or edge you. Now, please tell me whether you were excited when I first set you on the desk.\"\n\n\"Yes.\" She seemed resigned to getting his questions over with.\n\n\"And what about when I started licking your pussy?\"\n\nThe color in her cheeks heightened. \"Yes.\"\n\n\"You liked it when my fingers filled your pussy, didn't you?\"\n\n\"Yes.\" She sounded more irritated with each question she answered.\n\n\"What about when I sucked your clit?\"\n\n\"I didn't want you to.\"\n\n\"Was it still exciting? Did it feel good?\"\n\n\"At first.\"\n\n\"Ah. See? We're getting somewhere. When did you stop enjoying it?\"<br ><br >\"I don't know.\" She raised her voice in frustration. \"You're asking me about things I haven't had a chance to think about. All I know is that it was too much to deal with and you were punishing me for something I didn't even think was a bad thing to do. It got to be too much. I just had to disconnect to manage it. I don't know. Please, can we stop talking about this? It only makes it worse.\"\n\nHe pulled her against his chest. For several minutes, he stroked her hair in silence.\n\n\"Sweetheart, we're going to have to talk about it just a little bit more, but then we'll be done and we won't have to talk about it again. I just have one more question for you, and after that, all you need to do is listen. Okay?\"\n\nShe tensed in his arms as he spoke, but she nodded.\n\n\"I wasn't punishing you, sweetheart. Did you really think I was?\"\n\nShe struggled with her answer. \"Not exactly. Trying to get back at me. And then it started feeling like punishment.\"\n\nHe hugged her. \"Thank you. You don't have to say anything else unless you want to, but I want you to listen. I wasn't upset with you. I enjoyed everything you did this morning. You may have gotten a bit carried away toward the end when you weren't listening, but you stopped when I got your attention. I love the way you suck my cock, baby, but I loved the kisses and the other touching, too.\n\n\"Yes, I wanted to pay you back for all your teasing this morning, but not in a way that would be upsetting. I just wanted you to be very aroused today. I wanted to give you little bits of pleasure all day long before you finally get to come when you get your spanking. I wasn't paying as much attention as I should have. I was breathing in your scent and had your taste on my tongue. I had your hot little pussy squeezing my fingers. I got distracted.\n\n\"From now on, I want you to let me know if you start to feel disconnected. That's not a free pass. It means we'll stop and talk about it to decide what happens next. And, kitten, that's not just a request. It's an instruction. Make sure you do it. Okay?\"\n\nShe gave him a smug look. \"You said I only had to answer one question.\"\n\nHe smiled as the tension in his chest eased. \"You little brat.\"\n\nA moment later, he added. \"See? Sometimes talking makes it better.\"\n\nHer newly formed smile fell, so he rushed to reassure her. \"Don't worry. We're done talking about it.\"\n\nHe cupped her breast and thumbed the nipple through her clothing. \"I'm not done with paybacks, though. Not even close.\"\n\nHe gave her breast a squeeze before he eased her off of his lap. \"I think we had better get something to eat before we go to the pond.\"\n\nWhen they got to the kitchen, Marcus was busy making lunch for everybody who wanted it. Mariah was interested in the sauce Marcus was making, so Michael left her to watch while he rummaged in the refrigerator.\n\nAfter a couple of minutes of ransacking, Marcus called to him. \"If you can wait fifteen minutes, you can have rigatoni with vodka sauce.\"\n\n\"Now you tell me!\" He heard Mariah and Marcus giggling like a couple of schoolgirls. When he came back, he found her stirring the sauce while Marcus put the pasta on to boil.\n\n\"You never let me get behind the stove,\" Michael complained.\n\n\"That's because all you want to do is sample my sauces, swipe mashed potatoes by the spoonful, and snag bacon as soon as I fry it up!\"<br ><br >\"Mmmm... you should make bacon.\"\n\n\"Can't you do anything with him?\" Marcus asked Mariah.\n\n\"Me? He doesn't do anything I say.\"\n\n\"Use your feminine wiles!\"<br ><br >\"I don't have any feminine wiles.\"\n\nMichael scowled theatrically. \"Marcus, stop fomenting insurrection!\"\n\nMichael brought Mariah another glass of wine while Marcus drained the pasta.\n\n\"Do you ever make Indian food?\" Mariah asked. Even though Marcus was ethnically Indian, none of the meals he had made since she arrived included Indian cuisine.\n\nMarcus sighed. \"No. I'm afraid there's no demand for it.\"\n\nMariah looked at Michael incredulously. \"You don't like Indian food? Not any variety?\"\n\nHe shrugged. \"I don't like what I've had.\"\n\nSeeing his opportunity, Marcus asked, \"What's your favorite Indian dish, Mariah?\"\n\n\"Paneer tikka masala!\"\n\nMarcus looked meaningfully at Michael until Michael caved in. \"Fine! Make paneer whatsit sometime. Mariah, how is it that every time I bring you to the kitchen, you end up causing trouble?\"\n\n\"Thank you!\" She kissed his cheek.\n\n\"You're welcome. But if Marcus tries to kiss me, the deal's off.\"\n\nMarcus beamed. \"I wasn't even tempted. You're just not that pretty.\"\n\n\"No kissing Mariah, either.\"\n\n\"You're a cruel man.\"\n\n\"I know. I'm a cruel man in a hurry, though. Could we get a couple of bowls of rigatoni to eat in the kitchen? If I take Miss Popularity to eat in the dining room with everyone, we'll be there for an hour.\"\n\nMarcus shrugged. \"Suit yourself.\"\n\nThey scarfed down their pasta while Marcus took the salad and bread to the dining room. \"I'm sorry, babe, did you want bread or salad?\"\n\n\"No, thanks. Why are we in a hurry?\"\n\n\"There's just a lot to do today. We need to meet with the security team once Sarah gets back. That reminds me...\" He radioed Paula and asked her to see about furniture for Sarah's bedroom.\n\nBy the time they left, it was nearly noon. The pond was only a few minutes away by golf cart, but in deference to the heightened security posture, they took an enclosed all-terrain vehicle instead of a cart. As they approached the pond, Mariah spotted a bench that hadn't been there last time.\n\n\"Who built the bench?\"\n\n\"Amy and Daniel. Do you like it?\"\n\n\"It's a perfect spot for a bench, but I'll need to test it.\"\n\nAs soon as the ATV stopped, she went straight to the bench and plopped down in it. When Michael reached her, she was running her hand along its smoothly scrolled arm.\n\n\"It's so beautiful. I didn't know they did this type of work.\"\n\n\"I'm glad you like it. Daniel and Amy can do just about any kind of mechanical or carpentry work. It's nice for them to have special projects. I'm afraid that maintaining all the vehicles probably gets pretty boring for them.\"\n\nMariah leaned against the back of the bench and tilted her head back to let the sun hit her face. \"It's comfortable, too.\"\n\n\"I'll have to let them know you approve.\"\n\n\"Approve? Michael, they didn't do this on my account did they?\"\n\n\"Relax, sweetheart. They enjoyed doing it. Actually, there are two benches.\"\n\nShe looked around and spotted the second one. It was beneath the willow where they had their picnic. Her cheeks heated at the memory.\n\nMichael smiled. It was obvious what she was thinking about. \"Just imagine your next spanking by the pond. You'll look so good bent over the back of the bench with your skirt pulled up around your waist and your panties pulled down around your knees. If I weren't saving your spanking for later, I'd do that right now.\"\n\n\"You're already planning future spankings no matter what I do!\"\n\nHe laughed. And kept laughing. When his laughter died, he was wiping tears from his eyes. \"I'm sorry, but your air of injured innocence is just too much. You can't even go a day without doing something that you ought to be spanked for. I think it's safe to assume that you'll continue giving me plenty of reasons to spank you.\"\n\nHe sat down next to her and pulled her sideways to rest against his shoulder. It was a beautiful day. The mirrored surface of the pond reflected the azure sky, and the last of the gold and lavender irises bloomed around the edges. The air smelled like warm grass, and an intermittent breeze carried the scent of wild columbines from the nearby meadow. Morning's cacophony of birdsong had died down to the occasional chirp of a sparrow. Now that he had her here, he found himself reluctant to disturb the peace of the moment.\n\nMariah broke the tranquility. \"Please just get it over with.\"\n\n\"Get what over with?\"\n\n\"Whatever awful thing you've brought me here to tell me. I'd rather just hear whatever it is than to sit here waiting for the bomb to drop.\"\n\nHe hadn't realized it was that obvious. \"I did want to talk to you, but not to tell you something awful.\"\n\n\"Then what is it?\"\n\nHe turned her face towards his and kissed her slowly and softly. \"I love you, Mariah.\"\n\nShe pulled away. \"Don't start with that again. It's not going to make me any happier about whatever it is you're going to talk to me about.\"\n\n\"Sweetheart, that is what I'm going to talk to you about.\"\n\nShe jumped up. \"For God's sake, Michael. There's nothing to talk about. You've convinced yourself that you love me. You don't. You know I don't want to hear this.\"\n\nHe caught her wrist. \"I know you don't want to hear it, but we're going to talk about it anyway. Please sit down.\"\n\n\"No.\"\n\nHe pulled her down onto his lap and locked his arms around her waist.\n\n\"Let go of me.\"\n\n\"I'll let go of you if you sit beside me on the bench again.\"\n\n\"Fine.\"\n\n\"If you run off, I'm going to catch you and you'll spend the rest of the conversation laying across my lap.\"\n\n\"Just let me up.\"\n\nAs soon as he released her, she sat down, practically hugging the arm of the bench to put as much distance as she could between them.\n\n\"Would you rather sit on the grass?\"\n\n\"Yes.\"\n\n\"Okay, we'll do that.\"\n\nHe waited for her to sit down, then sat close by, at angle where he could see her face without facing her directly. The more comfortable she was, the better this would go.\n\n\"I didn't mean to tell you I loved you, yesterday, but it's the truth and I'm not sorry I did. I'm sorry you're so upset about it, though. I know it wasn't ideal to hear it for the first time in the middle of a spanking, but I don't understand why you were so angry. You could have hurt yourself throwing yourself off my lap like that. Didn't you have some idea how I felt before that?\"\n\n\"The fact that you can even ask me that question is absolutely incredible. You bargained for my sexual services instead of helping people because it was the right thing to do. You deceived me. You've tried to manipulate me and you've tried to control me. You put a tracking device in my back. You threatened to use it to kill me if I left. When I didn't appreciate being treated that way, you made life as miserable as you could for me. You threatened to lock me up. You used me like a masturbatory tool. You've only started treating me decently again since those idiots tried to nab me.\n\n\"That's not how you treat someone you love. Most people wouldn't even treat someone they hated that way.\"\n\nEvery accusation landed like a blow. It hadn't all been like that, but he couldn't dispute the truth of any of her charges.\n\n\"Mariah, I do love you. If you didn't always fight me, things wouldn't have happened that way.\"\n\n\"Do you even realize what you just did? You claimed that you love me. The next thing out of your mouth was blaming me for the way you've treated me. Do you know what the problem is with blaming what you do on other people? It makes you powerless.\n\n\"The thing about taking responsibility is that it allows you to recognize what went wrong and gives you the power to change things. You can't change me. I'm not some weak-willed little girl. You can only change yourself. You like to tell me that things aren't up to me. But, according to you, everything is up to me. According to you, I control your behavior by my actions, like you don't have any choice about how you respond.\n\n\"You don't love me, and you don't have any right to say that you do. You wanted to talk about it? We've talked about it. I want to go back to the house.\"\n\nShe stood, blinking back tears, and walked towards the ATV. Michael caught up to her a few steps later and wrapped her up in his arms. To her embarrassment and dismay, her tears started overflowing. He hugged her to his chest and a sob escaped, and then another. When he began rubbing her back, she broke down completely.\n\nMichael felt completely helpless. Her whole body shook with every sob, and there was nothing he could do. He suddenly saw his recent behavior in a whole new light, and it made him sick. She was right. He had blamed her for everything that had gone wrong since he put that damned transmitter in her back. He thought back to what he realized after he'd watched her in the shower. He had been angry because she rejected him. That's why he blamed everything on her, and that's why he had treated her that way.\n\nShe was wrong about one thing, though. He did love her. He was doing everything wrong, but he did love her. His inability to get even the most basic things right with her made him wonder momentarily if he was just too damaged. He refused to accept that possibility. He would do better.\n\nHe held her until she calmed in his arms. He stroked her hair soothingly, waiting for her to catch her breath. She kept her face buried in his shoulder even after the tears stopped. For a long while, they were both silent.\n\nFinally, Michael spoke. \"I'm sorry, Mariah. I'm sorry I hurt you and I'm sorry I blamed you for what I did. I'm sorry for the way I treated you after that damned transmitter.\"\n\nHe suddenly realized he still hadn't told her the transmitter did not include a kill switch. He pulled her back far enough to see her face. He needed to know she was listening.\n\n\"Baby, there's not a kill switch in your back. I would never have put something like that in you, and I would never, ever try to kill you know matter what you did. It's just a transmitter.\"\n\nHe was confused when she didn't react. \"You don't seem surprised.\"\n\n\"I'm not.\"\n\n\"You knew?\"\n\n\"Of course I knew. The implant wasn't located close enough to anything vital to kill me without a power source that was much larger than what you stuck in me.\"\n\n\"How could you let me worry about that when you knew the whole time?\" As soon as the words were out of his mouth, he regretted them. \"Wait... Never mind. I didn't realize how stupid that was until I heard myself say it out loud. I was blaming you for something I did. You didn't have any obligation to tell me you knew.\"\n\nShe thought for a moment and decided to help him understand. \"But you still want to know why I didn't say anything, don't you?\"",
        "\"Yes, please.\"\n\n\"At first, I didn't say anything because you were threatening to kill me if I ran away from you. Why should I tell you anything? Later, I didn't say anything because I was hoping you would tell me. If I told you I knew, it would have taken away your chance to do that.\"\n\n\"So every day I didn't tell you, I was making it worse.\"\n\n\"As far as you knew, every day you didn't tell me was another day that I was living with the threat of that hanging over me. But, every day, you had a chance to make things better by telling me.\"\n\nHe hugged her to him again.\n\n\"I'm so sorry.\"\n\n\"Let's just not talk about it anymore.\"\n\n\"You can't make things go away by not talking about them. I screwed up -- badly. I know that. I need you to understand something, though. I do love you. That's real. You can't pretend it away. When I mess up, it's not because I don't love you. I know you can probably come up with a hundred reasons not to believe it. I've given you too many of them. That doesn't mean you shouldn't at least accept the possibility that I love you. Because I do, and I'm not going to stop saying it.\"\n\nShe wouldn't look at him, so he took her face in his hands and tilted it up. He kissed her gently, lingeringly. When he pulled back, he caught a look of longing on her face. Encouraged, he tucked a strand of hair behind her ear and kissed her again. Her lips were parting for him when the radio beeped. She tried to pull back, but he held her in the kiss. It was Jack, reporting their return to the compound.\n\nMichel stopped to depress the button on the radio. \"Thanks, Jack. Mariah and I will be there to help in a couple of minutes.\"\n\nInstead of releasing Mariah, he pulled her closer and kissed her with greater urgency. His hand bunched in her hair at the back of her head, pulling her forward and mashing her lips against his. He didn't let go when he ended the kiss. Refusing to let the moment end so soon, he caressed her cheek. Finally, a dropped a soft kiss on her forehead and freed her.\n\n\"I guess we'd better get back to the house.\"\n\n____________________________________________________\n\nChapter 7 is nearly complete. I expect to submit it in time for publication by the weekend of June 27, 2020. I update my profile page with estimated publication dates.\n\n \n\nThank you again for the feedback on previous chapters. I do respond to feedback, whether it's left in the comments section or sent as feedback through the site. For comments left hear, I usually post the response within a day or two, so if you're interested, check back. \n\n \n\nI appreciate the encouragement, which helps keep me wanting to write, and the criticism, which helps me get better at it. If this story doesn't rate a 5 for you, let me know what I can do to fix that next time. Even if it's just something that bugs you, I'd like to hear about it. \n\n \n\nI would really appreciate it if you vote for this story. It lets me know how the chapter is received. I compare the scores of chapters in this series to see if I'm going in the right direction. \n\nI appreciate you. Thanks for reading!\n\n \n"
    ],
    "authorname": "Enchantment_of_Nyx",
    "tags": [
        "blow job",
        "edging",
        "female submissive",
        "male dominant",
        "oral sex",
        "orgasm denial",
        "reluctance",
        "teasing"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/after-the-fall-ch-06"
}