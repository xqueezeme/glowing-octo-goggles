{
    "title": "Lady in Red Pt. 03 Ch. 09",
    "pages": [
        "Gwen Hammer was outwardly calm as her incredible husband knelt before her, even as all the others in the Great Kremlin Palace struggled to regain their composure. Though there were very few journalists in the hall for such an auspicious occasion and fewer cameras, such was the power of the internet for spreading news that the entire world had just born witness to Steve Hammer killing three men, all of them senior Russian military officers, on live television! So many unbelievable things had happened and continued to happen, everyone in the hall as well as around the world, was having difficulty sorting out the meaning of it all. \n\nAs Gwen mentally prepared a short impromptu speech, she thought back to the day she met Steve Hammer, and the incredible ride it had been ever since. He had tirelessly worked to position her as the most powerful woman... no, make that the most powerful person, in the world. She recalled her ascension to the Presidency of the United States, as well as her not unexpected but sudden removal from that office. The days following her impeachment had been some of the most challenging, yet rewarding, of her life. \n\nShe recalled the fear and anger that had filled her heart when Hanna Kiss had phoned and told her Lena, her 7-year-old daughter, had been abducted, as well as the tremendous pride she had experienced when Steve and Saint, Gwen's own 7-year-old son, had together saved the precious child. The day of Lena's abduction had been one of the most terrifying of Gwen's life. She firmly believed the beautiful little blonde girl, along with Saint, had a date with destiny. The little girl was ordained to become Saint's future Queen, and the world would badly need them both! \n\nThat fateful afternoon Sybil, as head of her security, had responded immediately when Gwen informed her Lena had been kidnapped in Sparta. Gwen and Steve, along with Sybil and Tyler, had been riding their motorcycles when Hanna Kiss, barely holding herself together in the crisis, had called to alert Gwen of Lena's abduction. Sybil immediately began making calls. Steve was not far behind, as he quickly reached for his phone. Tyler briefly considered the situation before sharing a thought with Gwen.\n\n\"You'd better make certain your family and friends back home know what's going on. That blonde girl wasn't as routinely protected as your family and many other children in your circle, but nevertheless, they need to be advised to be extra careful.\"\n\n\"I want security doubled everywhere,\" barked Sybil, issuing directives on her phone. \"We have a situation in Sparta. Unknown actors are threatening our Queen, her friends, family, and particularly the children. All areas within our security network need to go on high alert. In fact, double all security immediately. No exceptions!\" \n\nEven as she spoke, Sybil was checking her surroundings, concerned for Gwen's immediate safety. Till now she had been enjoying her day, possibly to the detriment of her duty. Steve's formidable capabilities were well known to Sybil, but it was her job to make certain Gwen and her extended family was safe at all times. She didn't know exactly why Gwen felt so attached to the little blonde girl from Hungary, but she understood the situation well enough to realize the child was extremely important to the Hammers, which made her a high priority to Sybil.\n\nGwen was speaking with Lisa soon after Tyler made his suggestion. \"Lena's family's in Sparta, and Lena's been kidnapped! They're demanding 50 million dollars, and they expect Hanna to get the money from us. Sybil is aware of the situation and is tightening security for everyone as we speak. You need to be extremely careful.\"\n\n\"Mom told me a little while ago Saint woke up early this morning very agitated!\" revealed Lisa. \"She gave him a good breakfast and did her best to calm him down before he left for school, but he never seemed to relax. Do you think there could be a connection?\"\n\n\"I don't know, Sis. That old woman I've encountered on two continents left me with more questions than answers. That said, I have no doubt that Saint and Lena are supposed to be together for reasons unclear to us. I firmly believe they'll eventually become very important to a great many people. We'll be making arrangements to get home as soon as possible. Please keep a close eye on all the children. \n\n\"I've invited Hanna and Adam to Asgard, and they should be arriving shortly. Please see that security gives them access and takes them to our house. They'll be staying with us.\"\n\nSybil had listened to Gwen's side of the conversation, and she decided to ask Gwen's newly minted Road Warriors for any help they could offer. With that in mind, Sybil hurried over to the group as they watched and waited.\n\n\"Guys, Gwen and Steve need to return to Sparta in the shortest possible amount of time,\" announced Sybil. \"It's a shot in the dark, but if any of you have an idea how to best accomplish that, please tell me. Otherwise, we'll be spending valuable time just getting home.\" \n\nThe Road Warriors looked at each other and slowly shook their heads. Sybil was turning away when one of the female nurses who had performed so admirably the previous day broke her silence.\n\n\"There's another nurse in my ward, who's always talking about her cousin. He's a pilot. He lives someplace in Eastern Tennessee and has a plane he charters. He was a pilot in the Air Force. Should I call and ask her for his number?\"\n\n\"Please do that right away!\" replied Sybil. \"If he can fly us back to Sparta post haste, we'll make it worth his while.\"\n\nThe nurse dug her phone from her pocket and scanned it for the number before placing a call. \"Joanie! It's Rita! You heard right, I'm with her right now. We're in Eastern Tennessee. She and her Warrior need to return to Sparta ASAP. Could you give me your cousin's number? You know the one I mean? He's the pilot with a plane.\"\n\nSybil punched the phone number into her phone as Rita recited it. It was ringing within seconds. \n\n\"Hello, this is Sybil Smith; I'm in charge of security for President Hammer's family. She's in Eastern Tennessee, and she needs to get to Sparta immediately. Are you and your aircraft available to transport her to Sparta as soon as we can reach your location? We'll pay well above your usual rate.\n\n\"Let me check. Can anyone tell me how soon we can reach Blandon?\" asked Sybil of the group around her. \"The plane's located there.\"\n\nAfter a few seconds of checking their phones, one of the riders responded. \"I looked it up. Google says 45 minutes, but I think we can beat that.\"\n\n\"Thanks!\" responded Sybil before speaking into the phone again. \"We'll be there in about 40 minutes. Please be prepared to take off for Sparta as soon as we arrive. There'll be two others traveling with President and Mr. Hammer. We'll be in a hurry!\n\n\"Folks, you may want to find your way home now. Knowing Steve like I do, I can tell you the 40-minute ride won't be for the faint of heart.\"\n\n\"I practice law in this county. I'll make some calls to see if the police can help facilitate the trip,\" promised a tall man in the back of the group.\n\nSteve was speaking on his phone when Sybil returned to his side. \"Chip, find out what you can. Call in all favors and make wild-ass promises if necessary. Jason's already making calls. We'll get there as soon as we can.\"\n\nSybil quickly explained what she had accomplished to Gwen and Steve. They nodded as they listened. Steve and Tyler started their bikes, and Gwen and Sybil swung on behind them. The man who'd mapped the route handed his phone to Steve, who studied the screen for less than a minute before returning it.\n\n\"You folks have been great, but we're going to be exceeding all the speed limits, so you may want to drop out now,\" warned Steve as Gwen secured her helmet.\n\nSpeed limits weren't a concern as the county Sheriff's office had cruisers blocking intersections. Steve and Tyler, closely followed by their newly minted Road Warriors, tore through them at speeds well in excess of any limits. Just 36 minutes later, Steve led the group onto the tarmac at a small airport, and came to a stop next to a Cessna 206 Stationair. A tall man with closely cropped gray hair stood at attention next to the plane. Gwen swung her leg over the rear of the bike and dismounted. The pilot saluted as she approached, but Gwen simply gave the man a quick hug.\n\n\"Thanks so much, Sir,\" began Gwen. \"We really appreciate your help today.\"\n\n\"Ma'am, it's my honor,\" responded the man, as he helped her and Sybil into his aircraft. Less than 2\u00bd hours later, the pilot had touched down on the private landing strip inside the walls of Asgard. Chip was waiting with an SUV to take the travelers home. \n\nAs soon as Gwen stepped through the door, Hanna Kiss flew into her arms. \"I'm so sorry we involved you in this horrible situation, but we had no options. They have Lena!\"\n\n\"I'm pleased and honored you called me first,\" soothed Gwen. \"We're dedicating every resource we have to getting Lena back safely. Steve, Charlie, and my two brothers-in-law are very adept at handling this sort of thing. \n\n\"My Warrior will settle this matter and return Lena to you,\" promised Gwen as she nodded toward her grim-faced husband. \"It's what he does. He protects our family and friends, and you're family.\"\n\nA middle-aged man in a police uniform cleared his throat to get Gwen's attention. \"Madam President, we have our entire force searching for the girl. If you have any information that could lead us to the men responsible, I suggest you tell us, and let us do our job. We've only known about this abduction for a couple hours. I've placed a call to the FBI, and they'll have agents in Sparta very soon. Please just wait as patiently as possible, while law enforcement handles this situation.\"\n\n\"With all due respect, Chief Lansing, my husband will not be waiting here for any results. If you manage to find Lena I'll be most grateful, but Steve is the one I depend on in situations like this, and he's never failed me or our friends. Please do your best and know we appreciate it, but Steve and these other men will end this threat to our family, I'm certain of that.\"\n\n\"Where's Saint?\" asked Steve as he turned to face Lisa and Paula.\n\n\"He's in his room. He became very emotional as soon as Hanna and Adam arrived. Somehow, he seemed to sense that Lena's in danger. I insisted he lie down and try to relax,\" replied a worried Paula.\n\nSteve nodded, strode to Saint's room, entered and silently closed the door. Saint was sitting on his bed. His eyes were red, but no tears were falling.\n\n\"Dad! We've got to help Lena! I know she's in trouble, and she's scared,\" managed Saint as he rushed into his father's arms.\n\n\"Saint, we'll bring her back safely, I promise. And I'll need your help. Do you have any idea where she might be? Think hard.\"\n\n\"It's someplace cold, I know that. She's got tape around her hands and ankles. She's real scared, Dad!\"\n\n\"Saint, I need you to calm down and think about Lena really hard. She's trying to tell you where she is. Can you feel her inside your head?\" asked Steve gently.\n\n\"Not right now, but I could a little while ago, when Aunt Lisa was driving us home from school,\" responded Saint.\n\n\"I knew it! Come with me, and we'll get her back,\" said Steve as he took Saint's hand and returned to the living room.\n\n\"Chip, Jason, Charlie! We'll be leaving as soon as we get some supplies from Valhalla. Saint's going to help us find Lena.\"\n\n\"You're not going anyplace without me!\" declared Sybil forcefully. \"I know damn well what kind of 'supplies' you're getting and what you intend to do with them. Security is my job. I'll be going with you.\"\n\n\"My men are combing the area. You need to allow them time and understand that...\" began Chief Lansing before being cut off.\n\n\"You need to understand there's no time!\" interrupted Gwen impatiently. \"Steve and Saint will find Lena, and with the help of the others, they'll return her to her parents.\"\n\n\"But the FBI is on the way. We should wait to hear any new ransom demands,\" reasoned the police chief. \"We could follow them when they pick up the money.\"\n\n\"There'll be no money and no pretense of money,\" stated Gwen flatly. \"These animals will never give Lena back willingly. We don't reward extortion, we end it. That little girl must be rescued, and soon.\"\n\n\"Tyler, your wife's going with us,\" Steve told his friend. \"If you have any objections, you need to convince her right now; we're leaving.\"\n\n\"Sybil, be careful, and bring that little girl back to her parents. I love you,\" was all Tyler said, as Sybil flashed him a grim smile and followed Steve out the door.\n\n\"How could you let your wife go with them?\" demanded the police chief as the door closed. \"Surely you know they're hunting armed criminals! If they find those guys before we do, there could be shots fired and people killed. You must know that!\" \n\n\"Chief, my wife is the head of security here. If I even suggested she stay behind, she'd lose all respect for me. Not only that, she'd think I didn't have any faith in her. I can't go with them because I'd be a liability, and I know that. I also know that Sybil is no stranger to battles and she could make all the difference for those men. She's got more sand than anyone I've ever met, except possibly Steve.\"\n\n\"But what about Saint?\" worried Paula. \"Why is Steve taking him? This is no place for a 7-year-old boy; what if he gets hurt?\"\n\n\"Saint won't be hurt,\" replied Gwen more firmly than she felt. \"Steve needs Saint to find Lena. Those two kids have a connection; the same one I have with Steve. He's destined to become an even greater warrior than his father. Who better to learn from? I'm scared to death, but this is how it has to be, I just know it.\"\n\n\"You believe that old lady's prediction about Saint and Lena, as do I!\" Hanna Kiss stated with certainty. \"Our children will battle together as one, and someday lead us all out of darkness. I've seen this in my dreams.\" \n\n\"I've had the same dreams,\" nodded Gwen. \"Steve and the others, with the help of my son, absolutely must bring Lena home safely.\"\n\nOnce the four men, along with Saint and Sybil, arrived in Valhalla, they entered a locked room where Steve pressed a panel. It swung open to reveal an arsenal neatly stored in a square room 15 feet on a side. Steve motioned for Sybil to choose first. \n\n\"Saint, I want you to put on one of the smaller vests. You won't have a gun and you won't be near any shooting, but we need to be as careful as we can,\" explained Steve.\n\n\"Dad, Can I take one for Lena, too? She might need it.\"\n\nSteve nodded and then addressed the others. \"I don't know if the rest of you will agree or not, but I think Saint will help us find Lena. Right now, he's our best chance.\"\n\n\"Ever since that church thing in Hungary, I'm a believer,\" asserted Jason. \"No explanation is needed, not that you have one. It is what it is.\"\n\nGwen, Lisa, Kate, Jordan and Tyler had watched in silence as the SUV carrying their spouses and Saint moved toward the exit from Asgard. \n\n\"Ted will be upset he missed this,\" predicted Paula. \"He's in Chicago and couldn't get back in time to help. He'd walk into hell to side with those men.\"\n\n\"He already has, Mom,\" pointed out Kate. \"More than once.\"\n\n\"I don't understand why all of you think Steve will find those kidnappers. If you have any information, you need to pass it on to the police so we can do our job,\" insisted Chief Lansing.\n\n\"All I know is that Saint will help them find Lena. Please have your men ready to move in the very moment you're notified they've found the kidnappers,\" replied Gwen. \n\nChief Lansing still looked dubious, but he nodded and excused himself from the room. Soon his cruiser was exiting through the heavily guarded gate.\n\nSteve drove his team slowly toward Saint's school, watching Saint closely as he made his way down the rural road. 10 minutes into the ride, Saint began to fidget.\n\n\"Dad! She's in a big block building. Part of the roof is gone. There are junk cars in the grass around it.\"\n\n\"That's the old Wilson junkyard!\" declared Charlie. \"It's half a mile up that dirt road on the right.\"\n\nSteve nodded as he pulled the car to the side of the road. \"I'm going to drive halfway up the road and park behind that old hay barn. Saint, you stay in the car, do you understand me?\"\n\n\"Yeah, Dad, but Lena's really scared. You need to help her as soon as you can. There are men with guns all around. They're being mean to her!\" \n\n\"Leave that to us, Saint. We'll get her back,\" promised his father.\n\nOnce Steve parked, Sybil stepped out of the car and checked her weapons. When she'd finished, she looked around to see the others doing the same.\n\nShe felt tremendous pride that these battle-hardened warriors considered her worthy of their trust. She briefly thought about the pain she'd felt when she took the bullet that nearly crippled her for life. That memory caused her to make certain her vest was properly secured before joining the others on their trek to the Wilson property.\n\nLena was locked in a small room made of masonry blocks. There was a small hole in an exterior wall, which animals had been using to enter the abandoned building for years. The bad men had placed a sturdy piece of plywood over it from the outside. When no one was looking, Lena had tried to push the board away, but she was unable to budge it. The only light in the room came from a large hole in the roof, almost 15 feet above her head.\n\nThe doorknob rattled, and the scary man that always stared at Lena entered the room. \"We'll be calling your mother again, you little bitch. Once she agrees to pay the ransom, I'm going to show you how much fun it is to be loved by a man. We'll never let you go, but don't tell your mom.\"\n\nThe man laughed as he finished his vile threat. He turned and left the room when someone called his name. Lena heard the click as the door was again locked. She had been cowering in a corner, desperate to keep as much space between herself and the horrible man as possible. \n\nSuddenly, Lena knew! The Warrior was near! She had no doubt he would rescue her. She felt Saint's nearby presence and through him, knew his father was coming for her! She desperately needed to escape from the room! Her captors had positioned a device on a high shelf in her room, and from their comments and the care they had displayed while placing the box, Lena knew it was a bomb. \n\nThe men had even joked about what would happen if anyone tried to rescue her. Lena stared up at the box, wondering if there was anything she could do to save herself. If the bad men discovered The Warrior was coming for her, they would set off the explosive. Young as she was, Lena was still able understand the gravity of the situation, but she could think of no solution. \n\nSensing Lena's urgency, Saint was unable to remain in the safety of the SUV. Every part of his being demanded he grab the extra flak jacket and go for Lena; if he didn't, she would die! So he began trotting toward the old junkyard. Once he got closer, he knew exactly where to look for his blonde friend.\n\nOnce the old block building was in sight, Saint carefully crept to an abandoned truck parked far from the building. From there, he managed to work his way closer to the building while remaining concealed behind the decaying car bodies, old pieces of machinery, and the tall grass growing wild around the junk automobiles. \n\nSaint scanned the building, finally seeing the plywood he was looking for pressed against the wall of the building. It was held in place by a broken board jammed into the ground and wedged against the plywood. He bent low and sprinted to the board. It was an easy matter to angle the end of the board away from the plywood, which then fell quietly to the ground at his feet.\n\nSaint dropped to the ground and crawled through the small hole to find Lena nodding to him in silence, but her eyes screaming at him desperately! She held her hands up for Saint to see. He immediately began unwrapping the duct tape binding her wrists together. Once her hands were free, the two friends turned their attention to the tape binding Lena's ankles. A sudden burst of nearby gunfire frightened the kids badly. They redoubled their efforts to remove the duct tape.",
        "Steve had sent Chip, Charlie and Jason around to cover the rear of the building while he and Sybil remained in front, concealed behind an old Jeep. Charlie had taken a position next to a derelict John Deere tractor, which appeared to be sinking into the earth. He had a line of sight to Steve and Sybil. Jason took cover behind an old shed. Chip had worked his way around to the back of the building and dropped down, shielded from sight by a tree.\n\nA man suddenly charged out of the rambling old building, looking intently in Charlie's direction and firing an automatic rifle as he ran. Bullets bounced off the old tractor Charlie was using for cover. Chip brought his rifle around just as a second man appeared, also carrying an automatic weapon. Chip squeezed off two rounds, and the second man fell over backwards. He was lining his rifle up on the man shooting toward Charlie, when he heard Jason's rifle bark. Chip watched as the first man pitched forward into some old farm machinery and became motionless.\n\nAs soon as Steve heard the gunfire, he stood and began racing for the front door of the building. While not caught totally by surprise, Sybil was unable to keep up with him, but she did her best. Steve was within 50 feet of the open door, when two heavily armed men came running out to meet him. Steve never hesitated as he brought up his handguns and began firing. \n\nSybil saw both men drop. She then noticed movement out of the corner of her eye. A man was steadying a rifle over the back of an old pickup as he took aim at Steve! Sybil growled deep in her throat as she brought her handgun to bear on the man and began firing. The man jerked each time a bullet struck him as Sybil emptied her weapon. \n\nSteve turned to see the man slide to the ground and nodded to Sybil, just as an explosion rocked the inside of the building. Dust and smoke billowed through the open door. Both Steve and Sybil instinctively dropped to the ground. \n\nAs they cautiously regained their feet, a man's heavily accented voice came from inside the building. \"I give up! I am unarmed! I am coming out!\"\n\nSteve held a gun on the man, his empty hands raised, as he appeared through the smoke and haze. Sybil took that moment to slide a fresh magazine into her weapon.\n\n\"Where's the girl?\" demanded Steve angrily as he strode up to the strangely behaving man.\n\n\"You must know what happens when you don't pay the ransom,\" replied the man as he wiped some blood from a gash on his head. \"I blew up the room she was in. You'll be lucky to find any pieces of the little bitch!\" \n\nWithout hesitation, Steve pointed his gun at the man's head and fired. By this time, Sybil was next to Steve and saw him jerk at the man's words. She anticipated what would come next. She quickly swept her arm up and pushed Steve's gun to the side, just enough to prevent the bullet from striking the man.\n\n\"Don't kill him, Steve! You don't need the trouble it would cause. We have to look for Lena!\" urged Sybil as she watched Steve wage an internal battle. She had no hope of preventing Steve from killing the man if he decided to do so. Steve suddenly brought his handgun around and cracked the man on the head, knocking him over backwards. The man remained motionless as Charlie, Chip, and Jason hurried up to them.\n\n\"Jesus! That guy's lucky Sybil was here,\" remarked Chip. \"What did he say to piss you off so badly?\"\n\n\"He told Steve that he just blew up Lena!\" answered Sybil. \"We need to watch for more kidnappers while we search for her. She may not be dead, but there's no time to waste!\"\n\nSteve simply nodded as he stepped over the unconscious man and entered the smoky building. He quickly indentified the area when the blast had occurred. Thirty feet of the wall was missing, as well as the entire roof. \n\nAlmost blinded by tears, he began lifting debris in search of Lena. Soon Jason, Chip and Charlie were assisting him in his search as Sybil stood nearby, on the lookout for any remaining kidnappers. \n\n\"Steve! Look over by that junk car!\"\n\nSteve glanced at Sybil to see what had her so excited. His eyes followed her pointed finger, and he immediately saw some platinum hair. He jumped over a piece of masonry wall still standing and sprinted towards the blonde girl. Fear for her survival created a knot in Steve's stomach.\n\nDreading what he would find, he couldn't get to the girl fast enough. Stunned, Steve found Lena collapsed on top of Saint! It had been her hair draped across his shoulder they had seen from the ruins of the building.\n\nSteve quickly found both kids had strong pulses. There were chunks of debris from the building scattered all around them, and a few smaller pieces lying on top of them. Lena had a glazed look, while Saint's eyes were closed and blood covered his head. \n\n\"I'll get the car and we'll get these kids to the hospital!\" offered Jason as he took off running.\n\nSybil studied her surroundings carefully as she pulled her phone from her pocket. \"Gwen, we have her, we're at the old Wilson junkyard; there was gunfire and an explosion. I can't tell how badly Lena was hurt, or even if she was hurt at all. She seems dazed, at the very least.\n\n\"Gwen, I'm sorry, but Saint's been hurt as well. He's unconscious and bleeding from his scalp. I don't know what other injuries he may have. We're going to load them up and run for the hospital. It would take an ambulance some time to get way out here and frankly, I don't think Steve would wait for it.\"\n\nGwen felt her heart turn to ice at Sybil's words. Saint was hurt and unconscious! She managed to hold it together as she responded to Sybil.\n\n\"Thanks, Sybil. We'll send the police to the junkyard and head for the hospital right now. Take care of them, please!\"\n\nEveryone began firing questions at Gwen as she disconnected the phone. \"Was someone hurt? Did they rescue Lena? What happened, Gwen?\" demanded Lisa.\n\n\"Sybil never mentioned if the men were hurt,\" replied Gwen as she faced her family. \"They have Lena, but Sybil said she's dazed, and she didn't know if she'd been badly hurt. Saint is bleeding from his head and is unconscious! I need to get to the hospital!\"\n\n\"I don't know why Steve took Saint!\" exclaimed an overwrought Paula. \"I knew it was a mistake!\"\n\nGwen stopped so suddenly the others stumbled into her. \"Mother, If I ever hear you blame Steve for Saint getting hurt, I'll make certain you never see my kids again. I don't expect you to fully understand the importance of both Saint and Lena growing up and prospering, but know this!\n\n\"I believe Saint and Lena are the future of mankind. He'll be in constant danger as he grows up and will likely be badly hurt a few times, much like Steve has been. There's a price to be paid to become a Warrior. And there's no one better equipped to teach Saint what he needs to learn in the next ten or twelve years than Steve! You'll either respect Steve's and my decisions regarding Saint, or even though it will break my heart, I'll have to insist you remove yourself from our family!\"\n\nStunned silence fell over the room. Gwen had never spoken to a family member so sharply, and especially not her mother! \n\n\"I apologize, Gwen. I was wrong,\" sobbed Paula. \"I don't understand, but I know I need to trust you and Steve. Will you forgive me?\" \n\n\"Ride with me to the hospital, Mom. I love you! You're already forgiven. We have to get moving. Hanna and Adam will ride with us. We need to leave right now.\"\n\nAs Jason came racing back with the SUV, Steve carefully cradled Saint in his arms and stood. \"Charlie, would you bring Lena? Sybil, please drive us to the hospital. Chip, would you and Jason keep an eye on everything, watch for any more trouble and explain everything to the police when they arrive?\n\nSybil concentrated on driving as fast as she safely could. She was aware many people became involved in accidents while rushing to the hospital and was determined not to cause any further harm to her precious cargo.\n\nShe pulled up near the unloading dock for the emergency room and simply slammed the car into park. Someone else could move it if necessary. She had more pressing issues to worry about.\n\nSteve and Charlie had stepped out of the car as soon as it came to a stop and gently carried the kids toward the ER, only to be confronted by a young police officer. He was new to the job, but two heavily armed and bloody men were exactly what he was tasked to protect against.\n\n\"Stop!\" demanded the officer as he pulled his gun. \"You can't come in here carrying weapons. I need you to disarm immediately!\"\n\nSybil rushed past Steve and shoved her ID into the man's face. \"Stand down, officer! These men are Federal Agents in the service of President Hammer!\"\n\nBy this time, some of the hospital staff had responded to the ruckus outside, recognized Steve and Charlie and pushed two gurneys right past the young officer, ignoring his lack of comprehension.\n\n\"Officer Parker, these men are absolutely permitted into this hospital, with or without weapons, anytime of the day or night,\" announced Dr. Laura Watkins as she went to examine the children.\n\n\"Laura, I'll take one of them,\" called Charlotte as she hurried to where Charlie was placing Lena gently on a gurney. \"Gwen called. She'll be here in a few minutes. We need to get them into the ER!\"\n\nReluctantly, Steve stood and watched Laura direct the staff as they wheeled Saint and Lena away. Charlie saw the pain in his friend's face and embraced Steve in a manly hug.\n\n\"They'll be okay. You know how tough kids are. And scalp wounds always look worse than they really are.\"\n\n\"Sir? We need to get you into the ER and check your arm,\" stated a young nurse who suddenly appeared next to Charlie.\n\n\"You were hit?\" asked a very surprised Steve as he looked at Charlie's arm. \"Go with her and get it taken care of!\"\n\n\"It's little more than a scratch. It doesn't feel any worse than a bee sting,\" replied Charlie before being led away by the nurse.\n\nSteve then turned to Sybil with concern. \"Are you okay? Were you hurt? I was so wrapped up in the kids I couldn't think of anything else. I'm sorry, Sybil.\"\n\nSybil shook her head in wonder as she embraced Steve. \"I'm fine, and you've got nothing to apologize for. You're a great dad. You know Saint is the one who saved Lena, don't you?\"\n\n\"I never should've left him alone. I wouldn't ever have stayed in the car, so how could I have expected Saint would? She was wearing the extra vest Saint insisted we bring, and it looks like it made a difference.\"\n\n\"What happened to Charlie? How badly was he hurt?\" demanded Jordan as she and Tyler hurried up to Steve and Sybil.\n\n\"Jordan, I didn't even know he was bleeding until a moment ago. He carried Lena in and seemed fine. He told me it was little more than a scratch. I'm afraid I let a few people down after I heard that guy claim he'd blown up Lena.\"\n\nJordan frowned at Steve's reply and looked to Sybil for a clearer explanation.\n\n\"Charlie will be fine. His arm was just bleeding, not gushing. I'm not sure if a bullet grazed him, or he was cut while digging through the rubble looking for Lena. One of those assholes tried to blow up Lena when he discovered we were on the scene. It seems that Saint pulled her out of a tight situation in time to save her life, but he suffered a head injury for his efforts.\"\n\nBy that time, Kate and Lisa were close by and listening intently. Lisa spoke when Sybil finished. \"I talked with Jason, and he said he and Chip are fine. They were sorting things out with the police and the FBI, who showed up in time to take over the arrest of the lone kidnapper still alive. He said the guy was bleeding pretty badly and was being brought here.\" \n\n\"Then we need to go somewhere else to discuss this,\" insisted Sybil. \"If I'm here when that guy's brought in, I might try to strangle him to death!\"\n\n\"Come with me, guys,\" offered Kate. \"The waiting room is just down the hall.\" \n\nThe waiting room was a large carpeted area furnished with numerous chairs and sofas where half a dozen people were sitting around waiting to learn about their loved ones. They had all been watching TV when Steve's group entered the room.\n\n\"Steve Hammer?\" asked an older woman. \"I don't know if you remember me; I used to...\"\n\n\"Mrs. Jenkins? You lived on Gwen's street before we moved to Asgard. Of course I remember you!\"\n\n\"You're so kind to remember an old woman. The news people broke into the talk show a little while ago to tell us that the beautiful little girl you and Saint rescued in Hungary had been kidnapped here in Sparta. They said you were involved in a gun battle with the kidnappers, but no one knows how it turned out. \n\n\"Are you hurt? You're wearing guns and there's blood on your shirt, so I bet it didn't turn out too well for the kidnappers. Is that adorable little girl okay, if you don't mind my asking?\"\n\n\"Ma'am, thanks for asking. Lena is here, and the doctors are tending to her. I'm hoping for the best,\" answered Steve politely just as Adam Kiss rushed into the room.\n\n\"Steve! How is Lena? I was told to wait here because the ER was getting too crowded. Hanna was allowed in with Gwen, but I haven't seen Lena at all. How is she?\" asked the obviously concerned father before adding. \"And how badly was Saint injured?\"\n\nSeveral of the people around them let out gasps upon hearing Saint had been hurt. All eyes turned to Steve.\n\n\"She was dazed, but was breathing fine and seemed to be getting better during the ride in, but she didn't say a word, not that we were encouraging her to. Saint took a blow to his head, I'm guessing from flying debris. He was unconscious and bleeding, but his pulse and respiration were regular. We need to wait for a report from the medical staff. There's no better hospital or doctors than right here in Sparta,\" responded Steve as he took a seat next to Sybil and Tyler.\n\nJason and Chip joined Steve and the others in the waiting room. A few minutes later, Charlie and Jordan joined them. Charlie had his left sleeve missing and a large fresh bandage wrapped around that arm.\n\nMrs. Jenkins watched the rugged men as they discussed the day's events before commenting to the others in the room. \"It looks like the boys are back in town, to quote Jordan from that great song. If these boys want to fight, you'd better let 'em!\" \n\nThe older woman then declared, \"Sparta's home to some of the toughest, best looking men imaginable. I feel a lot safer because of them.\"\n\nLess than an hour later, Gwen walked into the waiting room to find Steve quietly speaking with their friends. The others in the room had gradually become accustomed to sharing a room with the famous Steve Hammer, and with Charlie and Jordan Burns, but were unable to stifle their oohs and aahs when Gwen entered.\n\n\"Saint is going to be fine,\" announced Gwen with a smile as she wrapped her arms around her husband. \"Both kids will be fine. Saint was concussed by something striking his head, but there was minimal swelling, and he's feeling much better.\"\n\n\"Gwen, I never...\" was all Steve managed.\n\n\"Hush, Husband,\" replied Gwen as she kissed Steve into silence. \"Saint saved Lena's life. He had to be there so he could go to her. It's begun. We have to prepare for it. Those kids are the future for far more than we realized. And I'm talking worlds, not countries.\" \n\nGwen suddenly turned red when she heard gasps from several onlookers. \"I need to save this for a more private time and place, but don't blame yourself for anything. Saint needs to learn all he can from his father, and everything is as it should be. He's spending the night here for observation, and he wants to speak to his Dad.\" \n\nSaint had a bandage wrapped around his head and he looked pale, but his eyes were alert when Steve stepped into the room. When Steve smiled down at him, his face came alive with worry.\n\n\"Dad, I know you told me to stay in the car, but I just couldn't! Lena was in danger, and she needed me. I had to try to help her!\"\n\n\"Saint, don't worry; one of the most difficult decisions a responsible man has to make in his life is determining when to follow an order, and when disobeying it is the right thing to do,\" responded Steve. \"I told you to stay with the car based on what I knew at the time. Then more information became available to you, and you acted accordingly. That's exactly what men of honor and conscience do. I'm proud of you!\"\n\nGwen beamed as she watched her husband embrace their son. Saint was destined to shoulder tremendous responsibilities, and his father was the only man she trusted to prepare him for it. She knew Saint would learn far more than strategy and tactics from his father. He would also learn the compassion, wisdom and leadership skills a true warrior must possess.\n\nPaula had entered the room just in time to hear Steve's response to Saint and see the two share a hug. Tears came to her eyes as she thought back to Gwen's strong support of Steve's decisions regarding Saint. Gwen understood her men so much better than Paula ever could. It was increasingly apparent why her daughter had become the Queen of Peace, and Steve was known as The Warrior. They were both extraordinary in every way, and she would never question their decisions again.\n\nGwen and Steve were given a room in the hospital so they could spend the night close to Saint. Hanna and Adam Kiss were allowed similar use of a room. Lady in Red had donated millions to the facility over the years, and the administration well understood how important the Hammers had been to the hospital's growth and success. The hospital was delighted to offer them accommodations.\n\nThe parking lot was jammed with reporters as Gwen, Steve and Saint emerged from the hospital shortly before noon the next day. Typical of the couple's approachability to the media, they made their way around their waiting vehicle and approached the gathered reporters.\n\n\"Madam President! Can you tell us how your son is doing today?\" asked Heather Jensen.\n\n\"He's doing very well. Thank you, Heather,\" responded Gwen with a smile. \"He suffered a minor concussion but is almost totally recovered. We'll keep him as quiet as possible for a couple of days, but that's merely a precaution.\"\n\n\"Why did you allow your husband to place your son in such a dangerous situation?\" demanded a man reporting for a cable news station. \"Wasn't it reckless to send a 7-year-old boy into a probable gun battle?\"\n\n\"Would you care to rephrase your question?\" asked Gwen tersely. \"Insulting me and implying my husband and I aren't dedicated to the safety of our children won't get you very far.\"\n\n\"I apologize!\" replied the reporter immediately before rephrasing his question. \"Could you tell us why your son accompanied your husband on such a dangerous endeavor?\"\n\n\"I can, although you may not believe my answer. Saint has a special connection with Lena. It's much like the one I have with Steve, only stronger,\" continued Gwen as she squeezed Steve's arm. \"Steve needed Saint on hand to locate Lena. Once Saint determined where Lena was being held, he was instructed to remain in our SUV. The situation devolved, so Saint decided he had to involve himself. \n\n\"He managed to free Lena from her prison shortly before the rabble that had kidnapped her set off an explosive device intended to kill her. If Saint had not been along, Lena would have been killed. Our son was the key to Lena Kiss's survival.\"\n\n\"Do you expect people to believe that your son and that little girl have some sort of special connection?\" demanded the same reporter.\n\n\"I expect people to believe what they choose. I'm simply answering your questions, but I'll not take any more from you, Sir. Your attitude is not acceptable,\" replied Gwen calmly. \n\n\"Madam President, why did the kidnappers choose Lena Kiss for their victim?\" asked another reporter.\n\n\"I can only assume they found the security surrounding the children of our friends and family far too difficult to circumvent. Lena's parents arrived in Sparta unannounced and unknown to our security, making Lena vulnerable. Those despicable jackals must have recognized her as the little girl who won our hearts in Hungary and seized the only opportunity available to them.\"",
        "\"Madam President, can you better describe this connection you believe your son has with that little girl from Hungary?\" asked an older woman reporter from a national newspaper. \"You're giving us the impression she's someone very special to you.\"\n\n\"Not at this time, Eunice,\" answered Gwen honestly. \"Lena is extremely special to Steve and me, as well as to Saint. Only time will reveal in what ways.\"\n\n\"Less than a week has passed since you were removed from office,\" prefaced another reporter. \"During that time, you and your husband, with the help of a few others, have saved the young victims of a horrible school bus accident, created a new group of followers you call your Road Warriors, and thwarted a kidnapping. How are you enjoying your retirement thus far?\"\n\nGwen and Steve both laughed along with the reporters at the question. \"That's actually a very good question, Hector. Once I was relieved of the responsibilities and restrictions that come with the office of President, Steve and I quickly became more involved in our community, family and friends. They are the heart and soul of this country. Washington is obviously broken, but the citizens of this country are not. They donate time, blood, sweat and money to help others. Lady in Red is all about helping others, and now we have the liberty to concentrate on that endeavor.\"\n\n\"Your movie has dominated the box offices and has already raked in well over a billion dollars worldwide,\" observed Heather. \"Are you surprised at its tremendous success? And do you feel that your 'We Come in Peace World Tour' contributed heavily to your success?\"\n\nGwen smiled at Heather before responding. \"I have no way of knowing. Truthfully, it doesn't matter to me. We're very pleased it has done so well and are grateful for the kind words critics and moviegoers have given the film. The best thing about it is we now have more in the till to support our humanitarian efforts around the globe.\"\n\n\"Steve, it's been reported you and your friends were involved in a gun battle with the kidnappers and five of them were killed. The lone survivor suffered a blunt force trauma to the head. His lawyer is claiming you struck him after he'd surrendered. Is that true?\" \n\n\"I don't believe anyone can corroborate that story,\" replied Steve with equanimity. \"You're referring to a man who set off an explosive in an attempt to kill a 7-year-old girl. A man willing to murder a helpless child is also likely to lie, wouldn't you agree?\" \n\n\"Your response is simply that he cannot prove the claim?\" pressed the reporter. \"That isn't quite the strong denial we were expecting.\"\n\n\"It'll have to do,\" retorted Steve. \n\n\"It was reported by a local police officer that Mrs. Smith identified herself, as well as you and Charlie Burns as Federal Officers,\" pointed out an older man working for AP. \"Was that a ruse to get you inside the hospital more quickly?\"\n\n\"Please allow me to respond,\" asked Gwen as she looked for and found Steve's approval. \"During my tenure as President of the United States, I appointed Steve, Charlie, Chip, Jason and Sybil to the Secret Service. I also issued an executive order granting them authority to operate within Homeland Security, the FBI and ATF. Once I was removed from office, I requested that these five individuals be allowed to retain their rather unorthodox designations. In return, I signed off on any and all Secret Service protection. They are indeed, Federal Agents.\"\n\nThe next few days were spent in Asgard as Steve and Gwen relaxed as much as possible. They spent a fair amount of time with their house guests Adam, Lena and Hanna Kiss. \n\nGwen revealed a major surprise the second afternoon of their stay. The two couples were joined by Kate, Lisa, Sybil, Jordan, Paula and their spouses. Ted had just returned from his business trip.\n\n\"Hanna and I have had the same recurring dream,\" began Gwen to get the attention of everyone. \"It isn't very clear, but we always see Saint and Lena as young adults battling unimaginable creatures as well as humanlike enemies.\"\n\n\"It's odd you're both having the same dream,\" admitted Chip. \"Is this more like sharing a vision?\"\n\n\"Is it that obvious?\" asked a surprised Gwen.\n\n\"You've been dropping some rather strong hints lately, Sis,\" stated Kate, joining the discussion.\n\n\"What we see isn't of this Earth!\" interjected Hanna. \"Logic and science tell me mankind will never see travel to other worlds in the kids' lifetime, so on the surface it all seems distinctly impossible.\"\n\n\"It's impossible, yet you have more to reveal, don't you?\" asked Lisa intently.\n\n\"Yes. We think it's possible that while the inhabitants of Earth won't develop interstellar space travel within the next several generations, other life forms may travel here,\" admitted Gwen.\n\nNo one spoke for over a minute as Gwen's declaration was digested. It was Chip who finally broke the silence.\n\n\"You do realize this all sounds pretty crazy, don't you? Is this theory based on anything more than a dream, or a vision? I'm not disputing you. I'd just like to see some evidence.\"\n\n\"We don't have any, except for sharing the same dream,\" replied Gwen softly. \"And we both see that old fortune teller in the dream every time. She's constantly urging us to prepare, especially Saint and Lena.\"\n\n\"That, and I've been granted access to signals from deep space,\" stated Hanna. \"The Canadian Hydrogen Intensity Mapping Experiment, or CHIME, in British Columbia has detected a Fast Radio Burst, or FRB. It's my belief it originated from intelligent beings in deep space.\"\n\n\"Even if that's true, the time required to travel to Earth from deep space is astronomical, pardon the pun,\" argued Kate. \"It's impossible for any creature to reach earth in less than thousands of years, unless they do the Star Trek thing with warp speed and travel faster than light, which simply isn't possible.\"\n\n\"That's the flaw in our theory, unless they began their journey to earth eons ago\" admitted Hanna. \"To base such an unbelievable theory on visions and short radio wave bursts just isn't reasonable. Which is why I'm asking Lady in Red to help me build a smaller, yet stronger radio telescope based on my calculations and design. It would require almost two years building, and costing over two hundred million dollars, again going by my calculations. We could build it on the hill west of the lake and would require less than ten acres of your land.\"\n\n\"Wow! You don't beat around the bush, do you?\" asked Lisa rhetorically. \"May I assume you believe this telescope of your design will answer your questions about alien life forms and their intentions?\" \n\n\"I believe it will give us data,\" replied Hanna with a scientist's precision. \"Data that Adam and I would have to analyze and interpret. This project will take years. Gwen and I both place the ages of Lena and Saint in our visions at around 20. That means we have less than 13 years to get this right, if it's an eventuality. Or it may be that Gwen and I are imagining it all.\"\n\n\"It's up to you guys,\" added Gwen. \"I'd never blame you if you refused Hanna's request, I know how weird it all sounds. And either way, we need to keep this among ourselves. It could create all kinds of unpleasant situations, including but not limited to my being burned at the stake as a witch, wasting $200 million dollars and years of Hanna and Adam's time, and our possibly becoming the laughing stock of the world. It could curtail much of the power and influence we've accumulated over the years.\"\n\n\"So our choice is between saving the world, or saving a couple hundred million bucks?\" quipped Kate. \"I've seen too many things I can't explain to go against Sis and Hanna. I vote we go for it.\"\n\n\"Agreed. What do we need to get this started?\" asked Lisa.\n\n\"I say we give Hanna a blank check to get whatever she needs. Tyler can oversee the ordering and contracting,\" Jordan chimed in.\n\n\"That's it?\" marveled a stunned Hanna Kiss. \"No long discussions? You've made your decision that quickly? You're trusting me to spend $200 million of your money so easily?\"\n\n\"It appears so, Hanna; we're not exactly broke you know, and saving the world seems kinda worth doing,\" quipped Kate.\n\n\"There's something else you and Gwen sort of glossed over,\" pointed out Paula. \"You both believe Saint and Lena will be involved in this future battle, or whatever it is. Are they the only two involved? Surely there'll be lots more people helping!\"\n\n\"That's the rub, Mom,\" answered Gwen, studying her mother's face. \"Lena and Saint will be doing this... whatever it is, on their own, with no help of any kind from anyone else on Earth. We've both seen that quite clearly.\"\n\n\"We've got thirteen years; so for now, let's take a swim and relax for a few hours,\" suggested Kate to break the tension. \"We'll bring the kids and have a fun family gathering and keep our mouths shut about all this. Let's go about our daily business as if we have no idea what's going to happen, which is truthfully the case.\"\n\nThat evening as they prepared for bed, Steve asked Gwen a question which had been on his mind. \"With all this going on in Saint's future, it would probably be best if I remained retired from football, don't you think?\"\n\n\"Hanna and I discussed that. You can't spend all your time working with Saint. He and Lena still need to be kids as much as possible,\" reasoned Gwen. \"Thirteen years is a large chunk of our lives and we need to live it, not fear its ending. I know you want to play again, so if it were up to me, I'd encourage you to get back with the team. You know Saint wants to see his Dad play another year. He's older now and can better appreciate what you do. It's your decision but if you're asking me, I say play.\"\n\n\"What about all the things Saint needs to learn? I'll be pretty busy for a few months, with very little time for you and the kids,\" worried Steve.\n\n\"That's the downside to possibly knowing the future. We could get so wrapped up in our concern for it that we'd no longer enjoy the life we have,\" replied Gwen. \"You have to do things for Steve now and then. You're a wonderful husband and father, but please don't stop being Steve Hammer, quarterback, actor, writer, musician, and whatever else. You've always placed us ahead of your personal wants and needs. But especially now that I'm no longer President, I want my husband to do the things he loves.\"\n\n\"You realize that list of things \"I love to do\" puts you at the top, don't you?\" responded Steve with a chuckle as he cupped his wife's left breast. \"I think I'll do you first, and then get around to the other stuff later.\"\n\nGwen, Jordan, Lisa, Kate and their husbands joined Jared and Naomi in New York for the Spartan game against the Giants that Sunday. Jared was delighted to see his friends again.\n\n\"My bosses are here to check up on me? We've lost our first two games, so you're already looking for my replacement?\" he joked.\n\n\"You know us better than that,\" answered Jordan. \"Your contract has clauses allowing us to renew it a few dozen times. You'll be running the Spartans until you're sitting in a rocking chair in a retirement home.\"\n\n\"I've managed to find a way to bolster our defense, beginning next week!\" revealed a pleased Jared. \"I've been cleared to play again. I'll practice this week and be in the lineup next weekend. It'll take a few weeks to get back into game shape, but I'll be able to play at least somewhat well at first, and hopefully help the team.\"\n\n\"That's great news!\" squealed Kate as she hugged the big man. \"You're better at half strength than most of these guys on their best days. I love watching you play.\"\n\n\"That still leaves us with a glaring weakness at quarterback,\" replied Jared as he looked toward Steve. \"The kid we've got starting has real potential, but he was never expected to step in and lead the team during his rookie season. If we only had a smart, experienced guy to mentor him, he'd be the real deal in a year or two.\"\n\n\"I'm not a football genius, but I think I have the solution to your problem,\" responded Gwen with a smile. \"Are you willing to take a chance on an older player, someone that's a little rusty?\"\n\n\"By older, do you mean someone my age and probably still the best quarterback in the league?\" asked a delighted Jared. \"We can still make the play-offs if we start winning some games!\"\n\nThat weekend, the Spartans lost their third game of the season 32-17. Sports writers were pointing out how difficult it was to begin a season with 0-3 and still reach the play-offs. One reporter made that very observation to Jared in a postgame interview. \n\n\"I understand we have a difficult road ahead, but we're making some changes this week that should strengthen the team. I've been cleared to play and all modesty aside, I think I can make a difference to our defense. We've also been able to add an experienced quarterback. He'll help our rookie quarterback develop without so much pressure on him.\"\n\n\"Tell us Steve Hammer is coming out of retirement!\" yelled an excited reporter.\n\n\"Okay, Steve's coming out of retirement,\" obeyed Jared with a laugh. \"I have no doubt his ability and leadership will immediately make us a far better team. My goal isn't just making the play-offs but winning the Super Bowl.\"\n\n\"You have a home game against Dallas next weekend. Will Steve be ready to play by then?\" asked a blonde female sidelines reporter.\n\n\"He'll definitely be playing,\" replied Jared with a grin. \"Colt Chance will have two more shots at Steve in head-to-head meetings this season, not that he'll win either of them. This is the matchup every NFL fan loves. They'd better savor it!\" \n\nThe following Sunday night found Gwen and Jordan singing the National Anthem before a packed house of raucous fans. When it was announced that Steve and Jared would be in the lineup, the network airing the Sunday night games exercised an option in its contract. The scheduled starting time of 1 PM was changed to prime time, and the network anticipated a huge viewing audience.\n\nThe network had made certain fans knew Steve was playing in its Sunday night game. It hyped the game with clips from the various activities Steve had participated in during the previous few months. Even viewers who had never watched a football game tuned in to watch what the network billed as \"The Return of The Warrior\", as well as to see his beautiful wife, the woman who had so recently been President of the United States and was still proclaimed Queen of Peace. Congress impeaching and removing her from office had only made her more popular and admired by many of the citizens of the nation. \n\nSteve had practiced hard all week to regain his timing with his backs and receivers, but he knew he was still rusty and would be missing plays he had been accustomed to making easily. So he went into the game determined to minimize his mistakes and give his team a chance to win.\n\nThis season The Cowboys had drafted a middle linebacker, Leon Baker from Ohio State, in the first round. He was off to a fast start with four sacks in his first three games. He was also an excellent run stopper and had really stiffened Dallas's defense. \n\nThe rookie had soon become known as a showboat. He celebrated his plays a little harder and longer than his opponents felt appropriate. He had also made a point of telling reporters Steve Hammer was too old to give him or his team any problems. He promised to sack Steve at least once during the game. \n\nThe kid quickly made good on his promise, as he dropped Steve for a loss in the first offensive series. Thereafter the Spartans began keeping the tight end or a back near Steve, just to help block Baker.\n\nHome team fans became incensed when the rookie hit Steve late and very hard at the very end of the third quarter. To compound the fans' irritation, the kid stood over Steve beating his chest as an obviously shaken Steve slowly rolled over and regained his feet. The play was assessed a 15 yard penalty, allowing the Spartans to make a field goal early in the fourth quarter to bring them within 4 of Dallas.\n\nJared and the defense stopped Colt Chance's offense just beyond field goal range. Dallas punted and pinned the Spartans down on their own 7-yard line with less than 7 minutes to play.\n\nSteve missed two passes he would have made with more practice. Then with a 3rd and 10, he once again threw behind his receiver. As he watched the ball hit the ground behind his target, he was bowled over yet again by Baker. \n\nThe crowd was silent as Steve lay stretched out on the field with the young linebacker again beating his chest and prancing around in some sort of dance. Several flags flew as everyone waited to see if Steve was okay. Two trainers were trotting onto the field as Steve slowly managed to stand up. They asked him questions and examined his eyes and memory before clearing him to remain in the game.\n\nThe penalty advanced the ball to the 22-yard line and automatically gave the Spartans a first down. Steve told his concerned teammates in the huddle, \"We'll have to run the ball to give me some time to clear my head. Just block your men.\" \n\nAfter three running plays, the Spartans still needed 4 yards for a first down. Steve never looked to the sideline to see if the coach wanted to punt; he simply called the next play. He handed the ball off to the tailback, who promptly ran up the middle for 6 yards! The Spartans then slowly marched down the field and reached the Dallas 20-yard line with a minute left in the game. \n\nThe fans were on the edges of their seats when Steve moved into the shotgun and backpedaled once he received the ball. He found his running back open as he raced across the middle of the field, just 8 yards from the end zone. Steve hit the young back right in the numbers with a perfect spiral. But the ball bounced off the receiver's hands and shot upwards and slightly closer to the goal line! \n\nThousands of fans let out a collective groan as Leon Baker gathered the ball into his arms and quickly headed downfield with the interception. He evaded several tackles before putting a spin move on a Spartan receiver trying to bring him down. As he finished his spin and once again turned downfield, he was met by Steve Hammer hurtling towards him at full speed! The loud crack of their pads colliding echoed around the stadium.\n\nSteve had watched the play go south and instinctively knew the young linebacker would try to run the ball back for a score rather than go to the turf and let his team's offense run out the clock for the victory. With no Dallas players near enough to block him, Steve raced up the middle of the field and timed his hit perfectly, just as Baker came out of his spin. Steve's left shoulder hit the young linebacker in the chest as he tightly clutched the football. \n\nThe force of the collision lifted Baker completely off his feet and sent him flying backwards, forcing the ball from his grip. Once again it seemed to float upwards before yielding to the forces of gravity and beginning its downward journey. \n\nThe Spartans running back who had bobbled Steve's original pass had been chasing down Baker when Steve hit the man and dislodged the football. Incredibly, the ball dropped right into his arms for the second time in a single play! This time he tucked it in and raced toward his end zone. In a stunning reversal of fortune, he crossed the goal line to give the Spartans the lead. The extra point would make it a 4-point lead, with just 20 seconds left to play. \n\nThe extra point attempt was delayed while the Cowboys training staff worked on young Leon Baker. He was finally helped to his feet and guided off the field as the home fans whistled and yelled their pleasure at his misfortune. After the successful point after attempt, the Spartans' defense held Dallas back, clinching their first win of the season. In the locker room, the players were jubilant. ",
        "Jared went to the middle of the room and called for silence, which was quickly granted. \"Today you guys saw how it's done. Never give up on a play! That kid had us beat, but Steve didn't accept that and made the play we needed. That's why he's the team leader, he finds ways to win. He was rusty as hell tonight, but he stuck it out and fought for the win. He won the game with heart. The rest of you need to learn from him. There's no quit in Steve Hammer! That's how I want this team to be on every down!\" \n\nWhen Steve slowly walked up on the small stage and stood in front of the microphones for the postgame interview, he was holding Gwen's hand and smiling gingerly. He responded to each question thoughtfully and with good humor. \n\nIn his rookie season, Steve had begun asking Gwen to join him for postgame interviews whenever she was available. His reasoning was simple. The reporters asked as many questions about his wife as they did about the game. Bringing Gwen to the interviews allowed the reporters to address their questions directly to her, as well as giving her more press. Steve had no problem sharing, or even yielding the limelight to Gwen. The reporters looked forward to the interviews, and Gwen almost always made the highlight reels the next day. It seemed many sports fans enjoyed seeing a beautiful woman knowledgeably discussing football.\n\n\"Steve! Do you think Baker hit you with a couple of cheap shots today?\" asked a network reporter.\n\n\"The officials judged that he hit me late and handled the situation appropriately. The two 15-yard penalties he drew allowed us to score twice and win the game. It all worked out quite well,\" replied Steve with a smile.\n\n\"How about that hit you smacked him down with after he caught your deflected pass? Didn't you hit him especially hard?\" asked another reporter.\n\n\"Hard enough to knock the football loose, which was my intent,\" replied Steve with a wry grin. \"He's young and he'll learn. If he'd simply gathered the ball in and hit the turf, Dallas would have won the game. Football is a team game, and players always need to do what's best for the team, not for their individual stats.\"\n\n\"Are you saying Baker isn't a team player?\" asked the same reporter.\n\n\"I'm not saying that. You'll have to ask him why he risked the game by trying to run back that play, when simply dropping down and covering the ball would have guaranteed a win,\" suggested Steve. \"Maybe he had a logical reason for risking the game, I just can't think of one. Dallas would have had possession with very little time left in the game. As quarterback, Colt could have simply taken a knee a time or two for the win.\"\n\nAfter spending several minutes questioning Steve, reporters directed their attention to Gwen. She graciously responded to the questions posed by the reporters. She answered several before drawing the session to an end.\n\n\"Thanks, everyone. Steve needs to eat and relax a little. He'd like to stay here answering questions all night, but we have friends waiting for us. The Spartans are for real! The fans can start making their Super Bowl reservations. Jared and Steve were the missing parts to the team puzzle. We've got this!\" \n\n\"Will you be having dinner with Colt Chance?\" questioned a female sports reporter. \n\n\"It's common knowledge Steve and I consider Colt a dear friend. We try to get together whenever our schedules allow it,\" responded Gwen. \"He's been invited to join us tonight for a very late meal, and I hope he can make it.\"\n\nGwen, Naomi, Jared and Steve were enjoying a midnight dinner at Anna's Place with Colt Chance. The restaurant was teeming with fans that had attended the game and had decided to stop by for a good meal, and hopefully to catch sight of Steve and Gwen Hammer. Gwen noticed Heather Jensen sitting alone at a table in the corner. She excused herself and walked over to speak with her.\n\nAll the patrons stopped talking as they watched Gwen Hammer, the most beautiful and popular woman in the world, casually stroll past them. Many had their phones in their hands as they snapped pictures and videos of what would be one of the biggest highlights of their lives.\n\n\"Heather, would you like to join us at our table? We have room, and we always enjoy your company. Naomi, Jared and Steve will be glad to see you, and I know Colt will be ecstatic.\"\n\n\"I'd love to join you, Madam President,\" replied an obviously pleased Heather Jensen. \"I've been told by my network not to refer to you as My Queen so often. I'm sorry about that.\"\n\n\"That's fine, I don't mind. Call me whatever you like. Just come with me,\" insisted Gwen as she reached for Heather's hand and led the reporter back to her table.\n\nSteve had seen Gwen returning with Heather and had quickly pulled an unoccupied chair from a nearby table and placed it next to Colt's. Gwen nodded her approval as Jared and Colt stood to greet Heather.\n\n\"You know Steve, Jared and Naomi of course, but I don't know if you've ever met Colt Chance. He's a football player of some kind,\" added Gwen with a chuckle.\n\n\"I should say he is! When Steve isn't winning the Super Bowl, Colt is. It's amazing to me you three men are friends. Jared planted you on the turf twice tonight, and Steve just about ripped your star linebacker into pieces,\" stated Heather with a big smile.\n\n\"Baker learned a thing or two in tonight's game,\" replied Colt with a smile as he shook Heather's hand. \"It's a pleasure to meet you, Ms. Jensen. I watch you on TV all the time.\"\n\n\"Please call me Heather; I did a piece with your Courtney when I first got into broadcasting,\" recalled Heather. \"It was about breast cancer and how hard she worked for her charity. I really admired her; she was very beautiful. I'm so sorry she succumbed to the disease.\"\n\n\"Thanks,\" responded Colt. \"I miss her every day, but our two kids, along with football, keep me pretty busy.\"\n\n\"You played a great game tonight,\" praised Heather as she took the proffered seat next to Colt. \"If Baker hadn't made so many bone-headed plays, you would've won the game, but then our Spartans wouldn't be celebrating our first victory.\" \n\nSteve glanced at Gwen with a raised eyebrow. She smiled and winked back with her head turned so Heather and Colt wouldn't notice. Steve and Gwen had often discussed the tragic death of Chase Colt's wife Courtney from breast cancer at the age of 29. They had long hoped he could somehow find another love with whom to share his life and family.\n\nDinner was almost over when Heather checked a text message on her phone. \"Mom just asked me if I'm dating Colt Chance!\"\n\n\"I didn't say anything, but my agent texted me the same question about you,\" revealed Colt. \"Being out in public with Gwen, Naomi, Jared and Steve draws a lot of attention. I'm sorry if this causes you any embarrassment.\"\n\n\"Embarrassment? Being linked with Colt Chance while dining with the Whites and the Hammers?\" chortled Heather. \"I can't imagine how it could get any better! The tabloids have printed stories about me and some rather unsavory characters over the past few months. Being seen with a true gentleman who works so hard for a worthwhile charity when he isn't winning Super Bowls is a pretty good thing in my mind.\"\n\n\"Yeah, Steve's a great guy, but how do you feel about me?\" asked Chance with a straight face.\n\n\"I was referring to..., you're pulling my leg, aren't you?\" countered Heather with a laugh.\n\n\"Would it be okay if I called you sometime?\" asked Chase nervously. \"I've had a great time tonight and I'd love to see you again, if you're okay with it.\"\n\nHeather's face lit up in an even bigger smile as she pulled a card from her purse and wrote on the back of it. \"This is my cell. Only my Mom and a few close friends and relatives have it. Call me anytime.\" \n\nLater that evening as Steve and Gwen were snuggling in bed, Steve asked the question Gwen was expecting. \"Was it a coincidence Heather was at the restaurant tonight, or did you two have something cooked up?\"\n\n\"Whatever do you mean?\" responded Gwen innocently. \"Can't a girl introduce a good friend to another good friend without it being a conspiracy? They're two great people and if they happen to hit it off, so much the better. Besides, she'll stop making those doe eyes at you all the time if she falls in love with Colt.\"\n\nJust two days after the first Spartan victory, Gwen Hammer was announced as the winner of the Nobel Peace Prize! Her work as President of the United States had prevented a world war. Added to that, her humanitarian efforts through Lady in Red, made her selection an easy decision. She had been nominated by charitable organizations supported by Lady in Red two years running, but this time, The Queen of Peace was actually awarded the Peace Prize!\n\nThe Spartans entered the easiest part of their schedule and managed to squeak out victories against three of the league's weaker opponents. Meanwhile Steve was slowly working back into playing shape and regaining his timing with his receivers. The biggest problem he now had was his porous offensive line; it was allowing him to get hit too often.\n\nBy the time the Spartans entered the heart of their schedule, Steve's passes were sharp and on target, so the opposing teams began sending more players after him. And of course, when he was given little or no time to look for receivers, he was less effective. As the season went on, Steve was spending more and more time being treated for bruises and contusions by the trainers. The Spartans continued to win, but Steve was paying a heavy price.\n\nThe Spartans had won six consecutive games when they lost their starting halfback to a leg injury. Steve approached the head coach before practice. \n\n\"Hank, we have to start getting Ben some snaps in these games. He didn't play badly in the first three games, even though we lost. He just needs more experience and confidence to become a major asset to us. I'm beginning to realize I'm not 21 anymore, and it's getting harder for me to recover from the beatings I've been taking. I have a suggestion.\"\n\nSteve didn't tell his coach he had decided this would be his last season of football. He wanted to spend more time with Gwen and the kids, and his enthusiasm for the game was waning. Their second-string quarterback needed to gain some serious experience, since he would be starting the following season. \n\nHalf an hour later, Steve stood next to the coach while he addressed the team. \"Men, I've talked it over with Steve, and we have to adjust, or we'll never make the play-offs. You all know Steve's been taking a beating every game, and it's taking a toll. Sunday we lost Dexter to a leg injury, and he was our best blocking back. So to help keep Steve healthy and ready for the play-offs, we're going to play Ben a lot more.\"\n\n\"You're going to sacrifice his scrawny body to help keep our diva healthy and in the lineup?\" asked a grinning Jared.\n\n\"That's pretty much what I'm thinking,\" agreed the coach with a chuckle. \"Ben needs more experience, so he'll be ready to take over if Steve goes down. So he'll be practicing with the first team and getting more playing time, but not in any ordinary way.  \n\n\"We're going with a two-quarterback offense. By that, I mean both Steve and Ben will be on the field at the same time. One will line up at quarterback and the other as a halfback or receiver. Ben's a strong runner, and Steve does pretty well in a pinch.\"\n\nThe Spartans played the Eagles, a division rival, the following Sunday. The Eagles were taken by surprise when both Steve and Ben took the field on the first offensive play. Ben lined up as the only back behind Steve, who stood at shotgun. Steve took the snap and tossed the ball back to Ben, who appeared to be sweeping around the right end.\n\nBut then Ben suddenly launched the football downfield to a wide-open tight end! The receiver managed to reach Philadelphia's 20 before being shoved out of bounds. The Spartans lined up the same way for the next play. This time Steve began calling the signals until he went in motion, much to the surprise of the Eagles and their fans. The center then hiked the ball to Ben, who looked right before firing a tight spiral over the middle to Steve, who caught the ball on a dead run and reached the end zone before the surprised defensive backs could recover.\n\nThe first set of downs established the style of offense the Spartans would utilize for the rest of the season. Steve and Ben would run the ball often enough to keep the defense honest, but the wide-open and often unpredictable passing game combined with Jared's stubborn defense carried the team to the play-offs. They only dropped one more game for their only loss after Steve and Jared had rejoined the team. That loss was their second game with Dallas.\n\nIn December, Steve skipped a Friday practice to travel with Gwen to Oslo to accept her Nobel Prize. They were accompanied by jubilant family and friends. Gwen's acceptance speech was filled with praise for others.\n\n\"I want to thank The Norwegian Nobel Committee for this incredible honor,\" began a beaming Gwen as she looked over the audience. \"I think everyone knows it was the hard work and strong negotiating skills of my husband Steve Hammer and my very good friend Naomi White, which allowed the world to avoid a devastating war. I accept this award not for myself, but for all the people of the world who seek only to enjoy peace, prosperity and good health. My promise to everyone listening is this. I will work as hard as I can to make it possible for everyone to attain those goals. That's my pledge to you.\"\n\nThe Spartans faced the Cowboys in the second round of the play-offs. Before the game, Leon Baker approached Steve. \n\n\"I owe you an apology for the way I played in our first meeting. Colt wanted me to talk to you before our second game with you guys, but I was too pigheaded. He pretty much told me to man up and do it today, or he'd make my life hell in the locker room, and now I get the point. I was a jerk for hitting you late. I thought I'd knock you out of the game, or make you so angry you'd do something stupid. That isn't the way the game's meant to be played, and I apologize.\"\n\nFans watched as Steve reached out to shake young Baker's hand. The two men smiled, slapped each other on the back and parted. Baker, and of course Chance, played very well, but the Spartans prevailed to win 22- 20 and advance to the NFC Championship game against the Saints. \n\nThe following week the Spartans rode the efforts of the defense to beat the Saints in a low-scoring game, and to punch their ticket to the Super Bowl. Jared was playing extremely well, and the defensive unit had become the stingiest in the league.\n\nAs luck would have it, the Academy Awards were held the weekend between the conference championships and the Super Bowl. Charlie and Jordan were the co-hosts for the third consecutive year. Steve had been nominated for Best Actor, as well as Best Original Screenplay, while Gwen was up for Best Actress. Becky was thrilled to be one of the contenders for Best Supporting Actress. Charlie and Jordan were once again in the running for Best Original Song. The Queen's Ransom had smashed all box office records and was favored to win Best Picture.\n\nFairly early in the evening, Becky's name was called for Best Supporting Actress. She held her statuette in her hand and flashed her trademark smile to the crowd. Her acceptance speech was brief but emotional.\n\n\"I lost a hand years ago while I was still in high school, and I believed my life was over. I felt like a freak. Then my amazing sister introduced me to Steve Hammer. Can you believe a single prom date with him saved my life?\" asked Becky as the crowd broke into laughter.\n\n\"My wonderful husband Pete and I agree on this. Any success we've enjoyed is the result of our friendship with Steve and Gwen Hammer. She's truly our Queen, and there is no doubt Steve is her Warrior. They're also our friends. I dedicate this award to the Hammers!\"\n\nJordan and Charlie took home the Oscar for Best Original Song. The crowd cheered long and hard for them as they took the stage. Jordan thanked Charlie before mentioning Gwen and Steve as inspirations, as well as their best friends.\n\nA short time later, Steve was awarded the Oscar for Best Original Screenplay. His acceptance was gracious and poignant.\n\n\"I want to thank everyone that helped make our movie the great success it's been,\" began Steve. \"You know who you are. I've been fortunate to have a great support group, but it all begins with my wife, the Lady in Red. All I am is a direct result of her love and faith in me. I proudly accept this honor and devote it to the woman who so recently brought peace to a very troubled world. I live only to serve my Queen!\"\n\nSteve received a standing ovation as he headed offstage. The camera panned the crowd and settled on Gwen. She wiped tears from her cheeks as she smiled proudly. \n\nWhen Gwen was announced as the winner of the Best Actress award, the audience broke into a huge ovation. The raucous reception continued as Gwen made her way to the podium to receive her Oscar. She smiled, waved and nodded to the crowd while she waited for the noise to subside. Once it became quiet enough for Gwen to speak, she wiped her eyes and uttered but one sentence.\n\n\"The Warrior has made me your Queen, and I pledge my love to him for as long as we both shall live!\" proclaimed Gwen before starting back to her seat to another huge round of applause. \n\nIt was almost anticlimactic when Steve's name was called for Best Actor. He grabbed Gwen's hand and pulled her to her feet to accompany him to the stage. Once they were in front of the cameras, Steve looked into Gwen's face, declared \"My Queen,\" and knelt in front of her with his head bowed.\n\nGwen beamed as the auditorium erupted into cheers and whistles. Once she was certain she would be heard, she spoke only two words. \"Rise, Warrior.\" \n\nSteve stood and swept Gwen into his arms for a passionate kiss, to the delight of the audience watching at home, as well as those in the theater. This couple had captivated the world like none other in history.\n\nThe main cast of characters took to the stage when The Queen's Ransom was announced as the year's Best Picture. Kate and Lisa went to the microphone and Kate spoke first.\n\n\"We're fortunate to have been blessed with the amazing talent assembled before you. It all begins with Jordan, Gwen, Charlie and Steve. Your support of Lady in Red's various enterprises in general, and this wonderful movie in particular, allows us to help more people in need.\"\n\nKate took a step back, and Lisa moved to the microphone. \"Along with our thanks to those who supported this film, we're pledging to you that Lady in Red will spend every cent of profit from this wonderful movie on humanitarian efforts around the world! Details will be posted on our company website. Thanks so much! Good night!\"\n\nSteve and Jared were back at practice the next morning. Steve took some good-his natured ribbing about taking time off to win a few Oscars. It was obvious that Steve's teammates admired him and were proud to be associated with him. Preparations for the Super Bowl continued.\n\nThe evening before the big game, Colt Chance was awarded the league's MVP trophy. Although his team was defeated in two out of three meetings with the Spartans, Colt's play had remained at a very high level. He led the league in passing yardage, touchdowns and passer rating.\n\nGwen and Steve were two of his loudest supporters as they cheered their approval. Gwen had reached over to squeeze Heather's hand when Colt left her side to accept his award. \n\nGwen had found some time to chat privately with Heather before the festivities. It was quite apparent she was extremely fond of Colt Chance.\n\n\"Colt and his two kids visited Sparta to meet my parents!\" revealed Heather when she and Gwen were alone. \"Mom is a huge Cowboys fan, and she just loves Colt. She fell in love with his children as soon as she met them. I owe you big time for introducing us.\"",
        "\"It was truly my pleasure,\" replied Gwen. \"Now you have a great guy of your own, so you won't be making moon eyes at mine. There was a method to my madness.\"\n\n\"I hope you don't think I'll stop loving Steve,\" retorted Heather. \"He's your guy and the world knows it. He's amazing and I'll always love him. Now that I think about it, I'll always love you too, Gwen. You've been very kind me even when I went out of my way to get Steve to notice me. But now that I have a great guy of my own, you're right, I'll be less emotional around Steve,\" promised Heather before thinking of another matter she had decided to share.\n\n\"Keep an eye on that Kathy Perrine though. She's in love with Steve, and she's very beautiful and talented.\"\n\n\"She said almost exactly the same thing about you,\" responded Gwen with a laugh. \"Remember when I asked you to do your dance at out last concert? Kathy flat out told me you were in love with Steve, and I needed to keep my eye on you.\"\n\n\"She said that?\" marveled Heather. \"She's the one you'd need to worry about, if you had any reason to worry, that is. She's an incredibly beautiful woman who writes love songs about your husband!\"\n\n\"I told her I have complete faith in Steve, and I'm telling you the same. If I didn't, you and Kathy would never be my friends,\" acknowledged Gwen. \"You're both stunning women with tons of talent.\"\n\nGwen was surprised at the emotion Heather displayed as she moved close and hugged Gwen hard. \"You and Steve practically made my career, and now you've given me Colt to love. I'll always be your friend, if you'll let me.\"\n\nColt was magnanimous in his acceptance speech. \"I want to thank Steve Hammer for missing the first three games this year, thus affording me an opportunity to win this great honor. It's always been a team effort in Dallas. This award reflects the hard work of the entire organization. Thanks so much!\"\n\nGwen and Jordan proudly performed the National Anthem prior to the Super Bowl kick-off the next evening. They were then joined by family and friends in their skybox to watch the game. Saint was extremely intense as he closely watched every play. His pride in his father's success was obvious. When Steve did well, Saint was jubilant. When his father missed a receiver, or took a hit, Saint winced in sympathy.\n\nNew England got off to a fast start and held a 17-10 lead at halftime. It would have been worse, except Jared had forced a fumble on the Spartan 12-yard line that was recovered by the Spartans. \n\nJared was fired up in the locker room. He called out players he felt weren't performing up to their skill level and demanded more passion and desire from all his teammates. Steve felt it was a toss-up whether Jared inspired the players with fear or pride. Regardless, a determined team left the locker room for the second half.\n\nSteve was surprised to find Kathy Perrine waiting for him on the 50-yard line when he reached the field. She had been the headliner for the halftime show, but she should have returned to her dressing room long before the teams made it back onto the field. \n\nShe stepped right in front of Steve, making him stop in his tracks. The beautiful woman broke into a huge smile and embraced Steve tightly before stretching up and kissing him on the cheek.\n\n\"Gwen said she was fine with me personally offering you encouragement after the halftime show. Good luck, Steve. You're the best guy I've ever met. I'll always be your biggest fan... after Gwen, of course.\"\n\nSteve gave Kathy a quick hug before joining his team on the field. He was immediately the target of harassing comments from his teammates. \n\nThe second half was a one-sided affair, and the principal reason for that was Jared White. On the second play of the second half, Jared strip-sacked the New England quarterback on the 15-yard line. Jared then managed to gather in the loose football and rumble across the goal line for a touchdown. \n\nNew England was unable to mount any real drives in the second half, as Jared and his fired-up defense shut New England down. The Spartans offense consistently enjoyed excellent field position when they received the ball back, and they managed three field goals and two touchdowns. Steve knew the job of the offense was to eliminate mistakes, and to take advantage of the gifts presented them by the defense. \n\nThe Spartans won the game 33-23 and Jared was awarded the Super Bowl MVP award for his outstanding play. As an owner, Jordan accepted the Super Bowl trophy from the league commissioner. It was televised nationally, and her smile lit up the screen.\n\nThe celebration in the locker room was also broadcast. Gwen, Lisa and Kate were shown congratulating the players and coaches. Gwen and Steve were engaged in conversation with the head coach, when a team representative approached Steve with a wireless phone in his hand.\n\n\"It's President Rosen,\" was all the man said as he handed Steve the phone.\n\n\"Hello, Sir\" greeted Steve with a big smile. \"Thanks for calling.\"\n\n\"Congratulations on the win, Steve, but that's not the main reason I called,\" admitted Vince Rosen. \"This isn't a secure line, so I won't go into detail. Just after the second half began, a series of explosions rocked Moscow. Suffice it to say your presence is requested in Moscow, along with Gwen, as soon as possible. I can't stress the gravity of the situation enough.\"\n\n\"Mr. President, we'll prepare to leave immediately,\" assured Steve as he considered the possible scenarios in Moscow. \"We'll contact you for clarification once we have a secure connection.\"\n\nGwen's attention was focused entirely on Steve as she listened to his side of the conversation. Cameras had zoomed in on Steve as the reporters expected him to accept a simple congratulatory call from President Rosen. The actual reason for the call was obviously quite different than anyone expected.\n\nAt that moment, a different team employee appeared with yet another phone. He shrugged his shoulders as he wordlessly handed it to Steve. \n\n\"Hello? With whom am I speaking?\" asked Steve as he looked to Gwen.\n\nSteve immediately switched to Russian as he responded to the caller. Gwen's attention was still on Steve as he engaged in a brief conversation in Russian. She was easily able to follow Steve's end, and her frown grew as Steve continued speaking. He disconnected the call and spoke quietly to Gwen and his other close companions.\n\n\"Gwen, we have to hurry to the airport. Tyler, would you ask our pilots to file a flight plan for Moscow and to be prepared to take off as soon as we board? Gwen and I are leaving immediately.\"\n\n\"Steve, I don't want to intrude, but can I possibly help?\" asked Naomi. \"Jared and I would like to accompany you.\"\n\nSteve had been concentrating on the situation when Naomi interrupted his thoughts. He face softened as he turned to her. He mulled over her suggestion briefly before smiling.\n\n\"Naomi, that would be great! I appreciate your willingness to help us on such short notice. Kate? Do you think you and Chip could drop everything and come with us too? I'm sorry to thrust this on you so suddenly, but time is suddenly a luxury we don't have. We're jetting to Moscow as soon as possible.\"\n\nKate glanced at Chip before turning back to Steve. \"Absolutely. We can leave right away. We'll have our luggage packed to meet us at the airport. You know you can always count on us.\"\n\nBoth phone conversations had been broadcast live. What had been a Super Bowl victory celebration had suddenly morphed into international intrigue. Steve Hammer had just promised President Rosen to leave for Moscow immediately. He had then received another call where he'd held a brief conversation in what sounded like Russian. Something momentous was happening. Even sports reporters could identify real news when it was thrown into their faces. They began asking questions, which the normally responsive Steve and Gwen simply ignored.\n\nSteve took Gwen's hand and nodded to his friends to follow him from the locker room. He led them into a private room and closed the door before speaking.\n\n\"There's been a coordinated attack on the Russian leadership. President Kozlov has been seriously injured, and his survival's in doubt. There's no clear line of succession in Russia. Prime Minister Oblonsky would normally be next in line, but he was killed in a separate attack at the same time. All told, the top five Russian bureaucrats were targeted with only Kozlov remaining alive, and that's only for now.\"\n\n\"My God!\" gasped Gwen. \"The situation is ripe for anarchy... a coup! But what does Vince think we can accomplish?\"\n\n\"He said he has no idea. Marshall Yahontov just contacted him and requested him to ask us to fly to Russia immediately. I had no sooner ended my conversation with Vince, when Vavara Suchkov called. Her father is an advisor to Kozlov. Vavara said her father insisted she contact us as soon as she could. He too wants us to fly to Moscow immediately. I told her we were making plans to leave within the hour.\"\n\n\"I don't have to tell you a volatile situation like this is dangerous as hell,\" stated Naomi. \"It's obvious someone's trying to throw Russia into chaos. There are a few ambitious actors in the Russian military. Gwen mentioned a possible coup, and I think that very well may be the case. There's a radical Russian colonel the CIA has been watching closely. He's very anti-American and has been gaining support within the Russian Army.\"\n\n\"Colonel Chernov,\" replied Steve. \"He's bad news for the US, and even worse for Russia. He has a reputation as a cruel, brutal man. He commanded a division in Russia's war in Georgia back in 2008. The Georgians claimed his men indiscriminately killed civilians, including women and children. Many of the women were raped before they were killed. He committed almost every war crime imaginable and got away with it.\" \n\n\"So if he gains control of Russia, all hell will break loose? What does Kozlov expect you to do about it?\" asked Chip. \"Challenge him to a duel?\"\n\n\"If he manages to grab power, he'll make Stalin look like a boy scout,\" worried Naomi. \"I repeat. This trip will be dangerous as hell.\"\n\n\"Steve and I have a limo waiting for us, and we're leaving for the airport. I won't ask any of you to go with us, now that I realize how dangerous this may be,\" stated Gwen. \"No one will blame you for staying behind.\"\n\n\"If Chip and I aren't there, who's going to pull Steve's ass out of the fire?\" asked Jared. \"We don't abandon our friends just because things get a little edgy.\"\n\nSteve spoke to Jason. \"You're a cabinet member now, so you and Lisa will be keeping an eye on things here. This isn't a government sanctioned visit.\"\n\n\"As the one responsible for Gwen's safety, I'll be going with you,\" declared Sybil. \"Don't even think about dissuading me.\"\n\nSteve turned to see how Tyler felt about his wife's announcement. \"We missed your world tour, so it's only fair we get to go with you to Moscow. It'll be something to tell the grandkids.\"\n\n\"You make it sound like we're inviting you along on a family picnic; but okay, you and Sybil are in, and thanks,\" replied Steve.\n\nThere was a tattoo of rapid knocks on the door. Kate opened it, and Heather rushed into the room, with Colt following closely.\n\n\"They just broke into regular programming. There's pure hell to pay in Moscow. I know you're going there as soon as your flight is ready, and I'm begging a ride. The network wanted to send Jim Perkins, but I insisted it was my assignment. I'm aware of the danger, but it's what I do. You have the room, so give me a seat, please!\" \n\n\"Could you make that two seats?\" asked Colt. \"I'm not comfortable with Heather going into danger like this. I can't talk her out of it, so I'd like to go along. Maybe I can help keep her safe.\"\n\n\"I was just notified our limo is here,\" stated Gwen. \"Luckily it's a stretch. Those of you foolish enough to want in, come with us now and bring your passports. We don't have any time to waste.\" \n\nFewer than ten hours later, the group climbed into an extended van hired to take them to their hotel in Moscow. As they were being driven through the streets, it was obvious the city was on edge. Large groups of people milled about on street corners and unrest was in the air.\n\nSteve was on the phone as soon as they landed. He spoke to the Russian State Department and then called Vavara Suchkov. As soon as he finished the call, he spoke to the driver in Russian.\n\n\"Steve just told the driver to take us straight to the Kremlin,\" revealed Gwen after listening to Steve. \n\n\"Kozlov is barely hanging on, and he wants to speak to us before he dies. This is looking worse all the time. The Russian State Department tells me Colonel Chernov's arrived in Moscow. They suspect he's responsible for the bomb attacks on the Russian hierarchy, but they need time to connect the dots and find the proof. He could be the next President before they manage to assemble that proof.\"\n\nAs soon as they reached the Kremlin, Steve and Gwen were led into the center of the complex while the others were shown to a well-furnished waiting room. Kozlov was awake when Steve and Gwen entered his room, but he appeared very pale and in obvious pain. His head was wrapped in bandages, as was his abdomen. \n\nSteve immediately noted the presence of Marshall Yahontov, the Commander of the Russian Federation. That title indicated he was the top military man in Russia. He nodded as Steve followed Gwen to Kozlov's side. A doctor stepped away to allow Gwen and Kozlov a private conversation. Yahontov stepped alongside Steve as he and Gwen listened carefully to the weakened voice of President Kozlov. \n\nHalf an hour later, Gwen and Steve rejoined their entourage. \"Things have gotten pretty strange,\" began Gwen. \"President Kozlov just passed away while we were there. There's great concern about the vacuum these five deaths have created. \n\n\"Marshall Yahontov seriously fears Colonel Chernov. Yahontov still controls the Russian military, at least in theory, but he's concerned that more than a few brigades might break ranks and follow Chernov's lead. He's convinced Chernov's responsible for the coordinated attacks on the Russian government. Chernov has grown extremely bold; he's openly making a serious attempt to assume command of the Russian military, as well as the government itself, and he may have the influence to pull it off.\" \n\n\"Exactly why are we here, Gwen?\" asked Naomi. \"There's something you're not telling us.\"\n\n\"What Gwen hasn't yet said is the real kicker! In about ten minutes, she'll be sworn in and introduced to the world as the Interim President of the Russian Federation!\" revealed Steve. \"Kozlov managed to squeeze a promise from Gwen just before he passed away.\"\n\n\"What?!\" exclaimed Kate. \"You can't be serious! That's completely impossible! Russia would never accept a US citizen, never mind a former American President, to serve as President of the Russian Federation, interim or not. Please tell me you're making an insane joke.\"\n\n\"It's no joke,\" replied Gwen. \"Marshall Yahontov will be here any minute to accompany Steve and me to the Great Kremlin Palace to be presented to the citizens of Russia. I'll be sworn in as the Interim President.\"\n\n\"I asked the Marshal to send someone to escort all of you to the Great Palace,\" added Steve. \"Ostensibly, you're simply Gwen's guests,\" stated Steve as he looked to Chip and Jared. \"The reality is things may get pretty dicey when Chernov hears he isn't being named President. I don't know how you can help, but I'll feel better if you're present and already aware of the situation. I only wish we all could go in armed, but that's out of the question. If something goes down, we'll all need to be resourceful.\"  \n\n\"I see what's going on,\" declared Naomi. \"They're appointing Gwen Interim President in hopes of holding Chernov at bay until they can proceed with an orderly transfer of power that doesn't include him. They're banking on Gwen's popularity in Russia to overcome the obvious objections many Russians will have.\"\n\nTwo men in dark suits appeared at the door to escort the group to the Great Kremlin Palace. It was only a couple of minutes later when Marshall Yahontov appeared at the door to escort Gwen and Steve to the ceremony.\n\n\"If I may have a private word with your husband, Mrs. Hammer?\" requested the Russian.\n\nGwen simply nodded as Steve stepped into another room with Marshall Yahontov. They returned in less than two minutes. Steve appeared grim as he offered Gwen his arm. The walk to the Great Palace of the Kremlin took several minutes, but Steve was very quiet. Gwen knew his taciturn demeanor indicated he was on high alert. He tried not to be obvious about it, but he closely watched their surroundings for any indication of trouble. \n\nThere were surprisingly few cameras and reporters in attendance as Gwen and Steve entered the palace. Gwen noted the lack of news people. In the United States there would have been wall to wall reporters and cameras. \n\nSteve saw Chernov standing with several other military officers near the center of the hall. He was a large man with a scar running across his cheek and down over his chin. He was smirking as he joked with the two officers standing closest to him. \n\nAs he and Gwen walked farther, Steve noticed that the two of the officers with Chernov wandered with suspicious casualness to the rear of the room. They proceeded to circle to either side of the rather small crowd. Everyone in uniform had handguns holstered at their sides. Steve held back as Yahontov escorted Gwen onto a dais at one end of the room and to a podium.\n\n\"People of Russia,\" began Marshall Yahontov as he faced the cameras. \"It is my unpleasant duty to inform you of the passing of President Kozlov. He will be greatly missed.\"\n\nYahontov paused as those in attendance gasped, while more than a few broke into tears. Gwen imagined much the same reaction was occurring across the entire nation. Apparently Yahontov was not one to break bad news gently.\n\n\"President Kozlov left me with a final request, which I am about to honor. It was his wish that Mother Russia avoid turmoil during the transfer of power following his demise. It was his belief that Russia required the services of an Interim President to serve until we are able to select our next President in a peaceful and orderly manner. The person President Kozlov believed would best serve Russia during this dark time is Mrs. Gwen Anderson Hammer. She will now take the oath of office.\"\n\n\"What the FUCK?\" screamed Chernov in Russian. \"We will NEVER have an American whore ruling Russia. I will not allow it!\"\n\nHeather had been videoing the proceedings when Colonel Chernov burst out with his tirade. While she didn't understand Russian, she could easily tell how displeased the man was. She recorded Chernov as he suddenly began striding toward Gwen. As he walked, he reached for his handgun.\n\n\"I'll kill her, cut the bastard from her womb and then kill it with my bare hands!\" bellowed Chernov as his hand closed on his weapon.\n\nSteve had seen and heard enough. He took several quick strides toward Chernov, who showed surprise at Steve's aggressive response. Steve delivered a wicked punch to the man's throat. As Chernov staggered backwards, Steve stepped closer, grabbed the man's head and brutally snapped his neck!\n\nAs Chernov's body began to sag, Steve grabbed the gun from the dead man's grasp and swung it around to face Chernov's two lieutenants, both of whom were now bringing their weapons to bear on Gwen. Shots rang out. Screams and gun smoke filled the air as the two men fell dead to the floor. \n\nThere was a commotion in the back of the room. Steve turned to see Chip stepping away from another officer's body as it dropped from his grip. Hearing a scuffle in the other corner, Steve swung his attention in that direction in time to see Jared deliver a vicious blow to a fifth officer's head. The force of the blow caused the man to slide several feet on his back before coming to rest. The gun which had been in his grip slid another ten feet and lodged against a wall.",
        "Steve scanned the room carefully, nodded to Marshall Yahontov and then allowed the weapon in his hand to drop onto Chernov's inert body. He turned back to Gwen. The entire room was silent as Steve marched forward onto the dais to stand before his wife. Then he dropped to a knee and bowed his head! \n\nGwen somehow managed to remain stoic as she considered the recent events and the timely actions of her remarkable husband and his fellow warriors. The weeks since her being removed from office had been a roller coaster ride, leading to this very moment. \n\nGwen formulated her words carefully. She needed to convey both strength and humility. It was imperative for her to remain calm and self-assured. The Russians had to believe the situation was now under control and beneficial to their nation. With Steve still kneeling before her, Gwen turned to the microphone to address Russia and the world.\n\n\"Citizens of Russia, I have accepted this very rare and incredible honor only after the strong urging of my Warrior husband. When Marshall Yahontov and President Kozlov presented me with their proposal that I become acting President of the Russian Federation, at first I could see no possible outcome that would benefit either Russia, or me.\n\n\"It was my husband who explained that Russia was on the brink of civil war, which would yield control of this great nation to a bloodthirsty madman, the same Colonel Chernov who was probably responsible for President Kozlov's death. That madman was determined to violently seize control of the government and begin a reign of terror that would make Stalin's tyranny pale in comparison.\n\n\"President Kozlov discussed this situation with us briefly before he succumbed to his injuries. He and Marshall Yahontov expressed great concern that the explosions which ripped through Moscow, killing the five highest level Russian officials including the President and the Prime Minister, would eventually be traced back to Colonel Chernov, the man who built his reputation in the Georgian War by ordering the brutal murders of hundreds, and possibly thousands of innocents.\n\n\"Make no mistake. The Warrior has just altered the course of history. Think about that. Just moments ago, he saved Russia from the rule of a madman, risking his life to do so. His strength and skill are the real reasons I have been asked to serve as your temporary President. The situation was dire. In its time of need, Russia turned to The Warrior. If anyone else had been named President, Chernov would have killed them instantly and laughed as he seized control of your Mother Russia.\n\n\"The world knows my husband will always protect me against all dangers. Marshall Yahontov and President Kozlov likely foresaw the very scenario we have just witnessed. When governments hang in the balance, when thousands and thousands of lives are at risk, the world turns to my husband,\" concluded Gwen. \n\n\"Rise, Warrior,\" intoned Gwen as her eyes clearly reflected her love for Steve. \n\nAs Steve stood, Gwen moved close, wrapped her arms around his neck and kissed him passionately. Frantic applause erupted from those watching, even as the dead bodies were being removed.\n\nWhen the pandemonium slowly began to subside, the Chairman of the Constitutional Court of the Russian Federation approached Gwen, obviously nervous at this complete break with the traditional succession. He once again glanced over at the Marshall of the Russian Federation, who nodded for him to proceed. Speaking haltingly in his native Russian, he requested Gwen to place her hand on the Russian Constitution and repeat the Oath of Office. \n\n\"I swear in exercising the powers of the Russian Soviet Federative Socialist Republic to observe the Constitution and laws of the RSFSR, to protect its sovereignty, respect and protect the rights and freedoms of man and citizen, and the rights of peoples of the RSFSR, and to conscientiously fulfill the duties entrusted to me by the people,\" repeated Gwen in fluent Russian with a strong, unwavering voice.\n\n\"Ladies and Gentlemen,\" began Amber Stahl from network headquarters in New York, \"the world has just born witness to perhaps the most unbelievable, most incredible change of power that it has ever seen. \n\n\"Russia, one of the most powerful nations in the world, was under siege from within. Colonel Chernov was poised to seize control of the Russian military, as well as the government. He was the prime suspect in the bombing deaths of the top five Russian bureaucrats. In its time of need, Russia turned to the Queen of Peace and her Warrior, realizing they were the only two people in the world able to end this threat and bring immediate stability to Russia.\n\n\"It remains to be seen how the Russian people will accept Gwen Hammer as their President, but personally, I predict she will be welcomed with open arms. While she is as American as apple pie, she has developed a strong bond with the people of Russia, beginning with her very memorable trip here as a high school senior. \n\n\"Who will ever forget the incredible photo of Gwen holding the newborn baby with a soft light glowing behind her? That was also when her future husband, her Warrior, first demonstrated his knowledge of global issues and international diplomacy. That Russian trip was, in fact, a glimpse into the future.\n\n\"We are told President Rosen is about to make a statement in the Rose Garden,\" revealed Amber. \"We'll go there now.\"\n\n\"My fellow Americans,\" began Vince Rosen. \"The United States sends its heartfelt condolences to Russia. President Kozlov served his nation with honor. He will be missed.\n\n\"Quite frankly, the appointment of Gwen Hammer as the Interim President of the Russian Federation took the United States completely by surprise. That said, Gwen and Steve have already delivered on the expectations of the late President Kozlov. \n\n\"Russia is far more stable than it was just an hour ago. The world is a safer place because of the valor of this incredible couple. Arrangements will be made for me to attend President Kozlov's funeral when the details are made available. The United States hopes this will be the beginning of a new spirit of cooperation between Russia and the US,\" concluded Rosen. \n\nThe Russian citizenry's initial reaction was shock. No one had ever expected to see a former President of the United States taking the reins of their government. The extraordinary situation was discussed at great length in Moscow, and all throughout Russia. Many Russians, especially the older ones, had grown up disliking and even fearing the United States and anything American.\n\nIt was the younger Russians who were first to embrace Gwen's tenure. They had lived through her exploits, seen her movies, her concerts and especially her accomplishments as President of the United States. For the most part, they were proud to have this beautiful woman serving and leading them. Gwen had made it clear she was there to serve the people of Russia as well as to lead them, and that she had nothing personal to gain by so doing.\n\nTheir enthusiasm and quick acceptance of Gwen Hammer began to spread throughout the nation. Gwen immediately began to win over the doubters by performing as a selfless public leader. Over the next few weeks, she was seen at schools and hospitals, listening to the concerns of parents, patients, medical professionals and teachers, all while showering the children with love and affection. It was a recipe for success. \n\nKozlov's body lay in state at the Kremlin for three days. Although quite pregnant, Gwen remained near the coffin, greeting mourners for hours on end. Her husband was always close by her side as he watched over his wife. It was obvious to everyone who came in contact with them that they were a very special couple.\n\nOne of Gwen's first official appointments was Vavara Suchkov as her press secretary. She then asked Vavara's father to serve as an advisor. These appointments were met with widespread approval. Many Russians had been concerned Gwen would surround herself with American aides and advisors. Gwen allayed that fear as, paying careful heed to the Suchkovs' recommendations, she appointed numerous Russians to positions of authority.\n\nNo one seemed concerned when she announced that her sister Kate, and her very accomplished personal friend Naomi, would also serve in her government as liaisons with the many government officials with whom Gwen interacted.\n\nThe people of Russia had their first opportunity to see the Hammers represent their nation just a week after Gwen had taken the oath of office. President Kozlov's state funeral was attended by an unusually large number of world leaders. \n\nIt was widely accepted that many world leaders came to Moscow for the opportunity to see, and to be seen with, the Queen of Peace. Gwen did not disappoint. She and Steve met as many leaders at the airport as possible. She smiled, hugged, and posed with them as, on behalf of Russia, she made them feel welcomed. \n\nRussia, as well as the rest of the world, watched when Steve and Gwen welcomed Vince and Cindy Rosen to Moscow. Neither couple made any attempt to behave as anything less than very close friends when they embraced on the tarmac. As attractive as the American First Lady was, the Russians agreed their President was even more beautiful. \n\nThe funeral ceremony was broadcast live across the nation. Viewers could not help but admire Gwen's beauty and poise as she interacted with other world leaders. Near the end of the funeral ceremony, Steve played the piano as Gwen sang \"Bridge over Troubled Waters\", in Russian! Kate and Naomi later told her they believed that was the moment Russia truly fell in love with their new President. \n\nGwen and Steve settled into their new reality. Saint and Vicky were enrolled in a Russian school instead of one of the English-speaking schools in Moscow, much to the delight of all Russians. It did not go unnoticed that Hungarians Adam and Hanna Kiss moved to Moscow and frequently attended official events with President Hammer and her husband. Their daughter Lena attended the same school as Saint, and the two were inseparable. \n\nHanna and Adam tutored the pair several evenings a week. They learned the same subjects as the other children while at school, but the Kisses also introduced them to physics, chemistry and advanced math. Steve had instructors teaching the kids various self defense disciplines, as well as several musical instruments three days a week. On the other days, Steve worked on improving the kids' conditioning and strength in the Kremlin's gymnasium.\n\nReaction in the United States to Gwen's reign as President of the Russian Federation was varied and often predictable. Senator Lancer seized on the unprecedented situation in an attempt to bolster his slumping campaign. He appeared on as many news shows as possible. His message did not waver.\n\n\"The former and disgraced President of the United States now sits in the Kremlin. She has had full access to our intelligence. She knows in great detail our military capabilities and weaknesses. Therefore, America is in extreme danger because of her. Nobody on earth has the capacity to damage the United States as badly as she can!\" repeated Lancer at every opportunity.\n\nOddly, a young woman emerged as Gwen's champion in the media. Pamela Stenson, the high school senior who had met Gwen after the Miracle at the Oxbow and the same student body president who had led the student exodus out of Senator Lancer's intended media-grabbing speech in that town, was interviewed on a local station. It was picked up by the networks and she was frequently invited to appear on various news programs to be interviewed.\n\n\"Gwen Hammer is the Queen of Peace! She and her Warrior risked their very lives to save Russia from a vicious traitor. No one else on earth could have preserved the peace while ending the threat Colonel Chernov represented,\" insisted the young woman.\n\n\"We are so much safer now than we would have been if Chernov had been successful. Does our Queen know many American secrets? Of course she does. But who among us can point to a single instance when the Hammers have not acted honorably? Who can deny they have proven themselves willing to work, fight, and even die for peace?\" challenged Pamela.\n\n\"Senator Lancer is representative of the old, self-serving ways in Washington. He seeks to further himself above all others. He's small-minded. He suspects everyone of everything. Only a man who is unworthy of trust himself, is unable to trust another. And tell me... Who has done more to restore our faith in mankind than Gwen and Steve Hammer?\n\n\"This is fact. I sleep much better at night knowing my Queen, with her Warrior at her side, is watching over Russia. I plan to step up my efforts to promote Gwen Hammer as the next President of the United States, and I expect everyone watching today to help me make that goal into reality!\" \n\nGwen had been in office almost a month and was only a couple of weeks from her delivery date, when she approached Steve. \"There's been a gas explosion in a large apartment complex in Sochi. There's been over 15 fatalities and many serious injuries. An entire apartment complex was pretty well destroyed. I want to visit the scene and offer my support.\"\n\n\"I thought we were going to stay close, so our baby would be born in our Lady in Red hospital here in Moscow. It's probably the best facility in Russia. Traveling in your condition isn't very easy, you know that.\"\n\n\"I won't go if you tell me I shouldn't, but I'm hoping you'll agree. Those poor victims need hope, and they need it now. They may not survive until after our baby is born,\" worried Gwen. \n\nThe next afternoon Gwen, Saint and Steve, along with Hanna, Lena and Adam Kiss, were surveying the damage caused by the explosion. Heather and Colt had asked to join them when Gwen mentioned her intentions the previous evening at dinner. Sybil and Tyler were also there since Sybil refused to allow Gwen to go out in public without her. Heather had been given complete access to Gwen's schedule. Her network had told her to remain in Russia and report anything she felt would be of interest in the states. Gwen's trip had not been announced, and almost no one was expecting them in Sochi.\n\nThe Sochi mayor had been one of the few apprised of Gwen's itinerary, and he met them at the airport. The city supplied an extended van for the group to use. Steve was impressed with the man's knowledge of his city. He seemed to know many of the people by name.\n\n\"See the girl standing by all those boxes? They're boxes of clothes and canned goods for the victims, donated by concerned citizens of Sochi. She's scheduled an orderly distribution of the items to begin two hours from now, even though I don't know if she's slept since the explosion. She's been on the local radio and in our newspaper asking for donations and setting up the distribution of goods. She's quite an amazing young lady. You actually met her once, Madam President,\" concluded the mayor.\n\nThe young woman, while taking an inventory of the supplies she had collected, noticed a couple of her comrades suddenly go very still. Realizing they were staring at something behind her, Galina Smirnova turned around, only to find President Hammer smiling at her! \n\n\"Madam President, my Queen,\" managed the surprised girl as she dropped to a knee and bowed her head.\n\n\"Galina Smirnova! Stand and give me a hug!\" insisted Gwen. \"I'm so very pleased to see you again. You've grown into a wonderful young woman.\"\n\nThe girl hesitated slightly before standing and approaching Gwen, who promptly swept her into her arms. \"You know who I am? You couldn't possibly recognize me,\" reasoned the teen.\n\n\"Your mayor told me you were the baby I helped deliver here on the streets of Sochi. Now you're busy helping others in their time of need. I can't tell you how proud I am of you,\" replied Gwen.\n\n\"We've had a bad time of it,\" admitted Galina. \"We've been doing what we can, but there are far more people hurt, hungry and in need of clothes and housing than we can aid.\"\n\n\"That hasn't stopped you from doing your best for them, which is a lot more than most others,\" stated Gwen as she studied the teen's face. \"Would you accept some help from our company?\"\n\n\"From Lady in Red?\" asked Galina incredulously. \"Of course! That would be great. Will you donate some food or something?\"\n\n\"Or something,\" chuckled Gwen as she pointed down the street where several large trucks with Lady in Red logos had parked. \"We've gathered up some food, clothes and supplies, and now that I've met you, I want you to take charge of distributing it all. We also have people working on finding housing for those displaced by the explosion. As soon as we find places, we'll pass the information on to you. I want you to determine who is the best fit for each home or apartment as they become available.\"\n\n\"That's a lot of responsibility for a person my age, but if you think I can do it, I'll be glad to take care of it. You're even kinder than I heard you were. Did Steve, I mean your husband, come with you? I'd love to meet The Warrior.\"\n\n\"That looks like him walking up the street with a young woman I think may be your cousin,\" responded Gwen. \"He wanted to see the girl he held in his arms as you made your appearance into this world. Your mayor told him where she worked, so he went to find her.\"\n\n\"Gwen, this is Fanya Smirnova. She was that cute little girl I held in my arms as Galina was born. Fanya, this is my wife Gwen,\" concluded Steve.\n\nFanya immediately dropped to a knee and bowed her head, only to have Gwen grasp her hand and tug her back up to her feet. \n\n\"Look how beautiful you are,\" praised Gwen. \"I hear you're a nurse at the local hospital. I'm so proud of you both, and delighted to be able to see you again.\"\n\n\"Galina is a huge fan of yours. She watches every movie, and every television and internet broadcast you're in,\" revealed Fanya. \"She's always telling people how she was delivered into this world by the Lady in Red, the Queen of Peace, and lately, the President of the Russian Federation. All of Sochi knows her story.\"\n\n\"My cousin neglected to mention all the posters and magazines featuring The Warrior she's collected over the years,\" confided Galina. \"She tells everyone about being trapped in that bombed out building. She claims it was filled with smoke and was shaking, about to collapse, when The Warrior suddenly appeared. He scooped her up and carried her to safety in his strong arms. She told everyone she would marry him when she grew up.\"\n\n\"I was just a young girl then. I would never do anything to harm your marriage, Madam President, not that I ever could,\" responded a blushing Fanya. \n\n\"That sweet fantasy has been shared by a lot of girls over the years,\" responded Gwen with a laugh. \"I should know. It was my fantasy for a long time, too.\"\n\n\"And now you're living the dream!\" joked Steve.\n\nGwen had almost forgotten about Heather until she spoke. She had been standing off to the side videoing the entire exchange. \n\n\"This is too good an opportunity to pass up. Could I get some pictures of the four of you standing together? We obviously can't recreate the exact scene, since the girls have grown up. This is the sort of thing people love to see.\" \n\nThe week after returning to Moscow, Gwen gave birth to a son. Leaders from around the world issued congratulatory statements. Gwen had conceived while serving as President of the United States and given birth while President of the Russian Federation! \n\nThe infant was named Zachary Robert Hammer. The name Zachary was after Ted's deceased father, while Robert had been Steve's paternal grandfather's name. \n\n\"This is an easy one!\" pointed out Kate after mulling over the boy's name for a few minutes. \"He was born in Russia and his initials are ZR. We'll call my new nephew Tzar Hammer. The T is silent!\" ",
        "Gwen, Steve, Saint and Vicky spent most of the next two weeks bonding with young Zachary. The family was ecstatic with the new addition. Gwen often caught Steve smiling as he watched her with the children. He made no effort to conceal his pride and pleasure in his growing family. In turn, Gwen marveled at her good fortune in marrying such an incredible husband and father.\n\nIn mid-April, Gwen went in front of the Russian nation to reveal the selection of next President. \"It's my great honor and pleasure to announce the Federal Assembly has decided the next President of the Russian Federation will be Vlad Novokov! \n\n\"He will take the oath of office on May 1st. In honor of his inauguration and the incredibly kind treatment Russians everywhere have given us, Lady in Red will perform a celebratory concert in Red Square immediately after he is sworn in. My husband and I want all Russians to know how much we appreciate the cooperation and support we have received from the people of this great nation. As soon as the inauguration ceremony is complete, we'll take to the stage along with a few very good friends. We hope you enjoy it as much as we've enjoyed Russia since our arrival here in January.\" \n\nCharlie had been inundated with requests from famous artists around the world who wanted to participate in the concert. The event would be like no other he could remember. The most popular performers of the time were coming together to celebrate Vlad Novokov's presidency and the success of Gwen Hammer's brief tenure as President of the Russian Federation.\n\nFive days after she made the announcement, Gwen and Steve welcomed world leaders to Moscow for the annual G8 summit. Gwen had insisted Vlad and Anna Novokov join them for all the meetings and events. She wanted Vlad up and running from day one, and his interactions with the world leaders would help make that possible.\n\nRussia watched with pride as the Hammers and Novokovs met with other world leaders. The two couples were obviously very comfortable together. Russians were delighted Gwen and Steve were so friendly and respectful to their incoming President and his First Lady.\n\nGwen and Steve dominated the evening of the formal dinner with their grace, charm and humility. In a room filled with the most important people in the world, the Hammers stood out. They would soon be returning to private life, but no one doubted the power and influence the couple carried so easily on their shoulders.\n\nGwen looked beautiful as she danced with dignitaries, while Steve captivated the ladies with whom he danced. When Steve and Gwen took the floor together, everyone else simply stood, watched and marveled at their elegant dignity. Many Russians secretly lamented they would soon be losing the Queen of Peace's service as the President of the Russian Federation.\n\nRussian bureaucrats are not known for being succinct, but they made an effort during Vlad Novokov's swearing in ceremony. Once Vlad repeated the Oath of Office, his wife Anna hugged him tightly. She was followed by Gwen Hammer, who hugged him warmly and kissed his cheek. An orderly transfer of power was successfully accomplished without incident. Russia, as well as the rest of the world, breathed a collective sigh of relief.\n\nVlad kept his remarks brief. He knew the huge crowd which had gathered was there to see Gwen and Steve Hammer perform with Charlie and Jordan Burns. \n\nWith so many the performers in attendance, the concert lasted almost seven hours, and hundreds of thousands of people were present and loved it, most of them remaining until the very end. It was more than a concert, it was Gwen Hammer thanking the people of Russia for their kindness while telling them goodbye.\n\nAn hour into the concert, Gwen asked Galina and Fanya Smirnova to step onto the stage. The pictures Heather had taken of the cousins with Gwen and Steve had been immensely popular in Russia. The two girls smiling and waving to the crowd while standing with the Hammers brought a roar of approval from the huge crowd.\n\nThe motorcade carrying Gwen and her entourage to the airport the next morning saw thousands of Russians lining the streets to honor the woman who, along with her Warrior husband, had saved Russia from the reign of a cruel dictator. The Russian people were extremely grateful. Gwen had graciously helped Vlad Novokov assume the presidency seamlessly. Yielding power so graciously was not a custom with which Russians were very familiar. People cheered as Gwen's limousine approached, and kneeled as it passed. She was truly their Queen.\n\nGwen and Steve Hammer returned to American soil for the first time since the day of the Spartans' Super Bowl victory. Sparta was teeming upon their return. Business was bustling as tourists had made it one of the most popular destinations in the world.\n\nAlways mindful of their hometown and how important they were to its growth and development, Gwen and Steve surprised everyone by strolling into Marsh's Landing the second evening after their return.\n\nThe main dining room went completely silent as Gwen, carrying her infant son and holding Saint's hand, entered the restaurant. Steve entered behind her, carrying Vickie on his hip. Gwen immediately recognized Sandy Turner sitting at a table with her family.\n\n\"Sandy! Ned! It's so good to see you again,\" gushed Gwen with a smile as she hugged them both. \"Your kids are so adorable! You must be very proud.\"\n\n\"Proud? I guess we are,\" beamed Sandy. \"I have a great family and I love them to pieces. I also have a friend who's pretty much saved the world at least twice, and that makes me super proud. Your baby is so cute!\"\n\nGwen smiled as she carefully handed Zachary to her friend. \"He's been a very good baby so far and Saint and Vickie love him to pieces. Steve hasn't been able to wipe that smile off his face since Zachary was born.\"\n\nHonored that Gwen would entrust her with her baby, Sandy carefully cradled it in her arms while chatting with Gwen for a few minutes about raising babies and how delightful they were.\n\n\"Everyone is watching and listening to us. I'm keeping you from your dinner,\" apologized Sandy. \"I'd better give him back so you can eat.\"\n\n\"Would you and Ned care to join us in the other room? I know Saint and Vickie would love to play with your kids. They haven't seen them in months,\" added Gwen.\n\n\"I don't know if I'll ever get used to the most famous people in the world treating my family and me so well,\" responded Sandy. \"We'd be happy to have dinner with your family. Thanks for being so good to us.\"\n\n\"You're a friend, Sandy. We both enjoy your company, even if Ned's jokes are a little lame,\" teased Gwen.\n\nSteve and Gwen spoke to other diners as they worked their way across the room. It was a source of pride for residents of Sparta that Gwen and Steve remembered their names and spoke with them in such a friendly and personal manner. They were one couple who had never forgotten their roots. That they were so friendly with a \"regular family\" like Ned Turner's was proof positive their incredible success hadn't gone to their heads.\n\nLisa gave Gwen and Steve a few days to settle in before stopping in to visit. \"I flew back from Washington to speak with you both about the efforts Lady in Red is directing toward politics in Washington. Jason's been pretty busy with FEMA. We're committed to living there for the foreseeable future.\n\n\"As Steve and I discussed last fall, I've been creating a network of activists in every state. We have a list of candidates you should consider supporting for Congress in the fall.\"\n\n\"Thanks, Lisa. I knew you'd come through for Gwen,\" replied Steve. \"You made sure they aren't just s bunch of sycophants, right? We want intelligent, independent thinkers.\"\n\n\"I think you'll approve of the people on the list,\" answered Lisa. \"It's almost entirely comprised of people who've never run for an office of any kind. They're carpenters, mechanics, teachers, nurses, truckers... well, you get the idea.\n\n\"We looked for hardworking, taxpaying, community minded folks who understand honesty and ethics. Sadly, I expect half, or more, of Congress will be reelected. We have people doing the math, and they're telling me if we replace half of the members of the House of Representatives and a dozen or so senators, it would be a tremendous victory. I was really hoping to run them all out of town, but I'm told that's highly unlikely.\"\n\n\"Rome wasn't built in a day,\" chuckled Steve. \"But I do like how you think. We need to make certain these people get our support for their campaigns. That means time and money. I'll be traveling around the country offering encouragement and urging people to vote for the candidates we support. Gwen will join me for some of the trips, but she's hoping to spend some quality time this summer with the kids, especially Zack.\"\n\n\"Your support should be enough for most of them,\" agreed Lisa. \"If Gwen shows up at a rally or a fundraiser now and then, I'm confident the outcome of the next election will be very good for the country. \n\n\"I'll be back in Sparta again in early June and I'll bring Pamela Stenson with me,\" added Lisa. \"That girl is golden. She has people listening and responding positively to her message. She may be the most devoted supporter Gwen has, outside of family and friends. \n\n\"Lady in Red has offered her an internship for the summer and a full scholarship to Virginia Tech. I think you'll want her to travel with you and speak at rallies and events. She's that good.\"\n\nIn early June, Gwen and Steve were reminded just how connected Lena and Saint were. Lisa and Jason had flown in for the weekend. Pamela Stenson had arrived in Sparta at the same time. She was more than a little star struck when Lisa led her into the pool area at Gwen's home.\n\nJordan, Naomi, Kate, Lena, Charlotte, Paula and their husbands, along with most of the children in the group were relaxing by the pool. Gwen and Steve greeted Pamela warmly. \n\nThe girl seemed unable to close her mouth as she looked from Gwen to Steve, and then to Naomi and Jared, before settling on Jordan and Charlie. Gwen spoke in hopes it would give the girl time to recover. \n\n\"I'd introduce you, but you seem to know everyone here. This is Pamela Stenson, everyone. Steve met her in River City, Virginia just after that terrible bus accident. He was somehow able to convince her to support our efforts to change the atmosphere in Washington.\"\n\n\"My Queen! I'm so sorry,\" apologized the girl as she knelt before Gwen.\n\n\"That's the first thing you have to get over,\" giggled Gwen as she tugged the girl to her feet and hugged her. \"I'm Gwen, and you're Pamela. We'll be working closely together and become good friends, I hope.\"\n\nGwen released the girl as Steve stepped closer. She turned a bright red as she gazed at Steve standing shirtless in swim trunks. Unable to form words, she gathered her courage and launched herself into Steve's arms for a hug.\n\nWhen Steve released the teen and stepped back, she simply stared at him. \"I was even worse the first time I saw him,\" pointed out Kate as she greeted Pamela with a hug of her own. \n\n\"I don't mean to stare or anything,\" apologized Pamela once again. \"I've only ever been around my brothers, and the boys at school. I didn't realize there was such a difference between boys and men.\"\n\n\"It looks like Steve's ruined another poor girl's chances for happiness,\" quipped Naomi. \"She's going to expect her Prince Charming to be just like Steve.\"\n\n\"Yeah, Charlotte used to have that look when she was around Steve, at least until I took my shirt off and she saw what a real man was like,\" joked Billy.\n\n\"Yeah, once I was able to see around you to find Steve again, I knew I'd never be happy with anything less. Luckily, Billy is just like Steve, except maybe for the money, the body, the talent...\"\n\n\"Okay! I think Pamela gets the picture,\" interrupted Billy. \"Maybe you and Gwen should trade places, if you think Steve's so hot.\"\n\n\"Oh, my!\" gasped Gwen. \"Would you be willing to do that for me, Charlotte? I'd be so grateful.\"\n\n\"I couldn't do that to you, Gwen. Once Steve spent some time with me, he'd forget all about you,\" warned Charlotte. \"When I was done with him in a few weeks, he'd be broken-hearted and plain broke, but he'd have a smile on his face that wouldn't quit.\"\n\nPamela Stenson was simply amazed at how easily the members of Gwen's group of friends interacted and joked with each other. She was grinning from ear to ear as she listened to the people she had essentially idolized most of her life. They were very like her own family, except more attractive and much wealthier.\n\nA few minutes later, Lena, Ruth and Theresa asked permission to ride their bikes to a picnic area along the shoreline of Asgard's private lake. The girls had packed sandwiches and sodas, along with a few cupcakes for dessert.\n\nGwen and Steve were sitting by the pool with their friends. The other kids were playing in the pool, when Saint suddenly raced up to his parents, quite obviously upset.\n\n\"Dad! Mom! Theresa was stung in her mouth by a bee. She's having trouble breathing!\"\n\n\"I have epinephrine in my bag. Where is she?\" asked Charlotte as she immediately stood up and reached for the small medical kit she always carried. \n\n\"They're at the picnic area by the lake,\" responded Saint. \"Lena's really worried about her!\"\n\n\"Jump in the 4-wheeler and I'll get you there,\" insisted Jason, as he leapt to his feet and headed for the machine.\n\n\"Lisa, ride with us,\" instructed Steve. \"We'll get the pickup and drive over. Come on, Gwen. Paula, please watch the baby and Vickie.\"\n\nJason and Charlotte were already out of sight by the time Steve started his vehicle. As they neared the picnic area, they saw Charlotte and Jason kneeling by Theresa as Ruth and Lena stood watching.\n\n\"How's she doing?\" demanded Lisa as she rushed to her daughter's side. \"Will she be okay?\"\n\n\"She's getting better already,\" replied Charlotte calmly. \"We need to take her to the hospital just in case, but she's breathing easily now. Thank God Lena was able to get Saint to warn us so quickly.\"\n\n\"Theresa's going to be okay,\" declared Saint to the adults remaining by the pool. \"Aunt Charlotte gave her a shot, and she's breathing again.\"\n\n\"Thank God!\" declared Paula as she gathered Saint into her arms and hugged him. \"I don't know how you and Lena do that, but you kids have just saved Theresa's life!\"\n\n\"Pamela, I can see you're wondering what just happened,\" said Kate. \"The short version is Saint and Lena have some kind of mental connection, like telepathy or something. Gwen mentioned it to the press once when Saint had found Lena after she'd been abducted, but she soon regretted saying anything. Their connection seems to be getting stronger.\n\n\"The world isn't ready yet for the adventures Lena and Saint will experience, so we'd appreciate it if you didn't mention what just happened outside our inner circle. Gwen has the same thing with Steve, but on a much lesser scale. She somehow knows when he's in trouble.\"\n\n\"That's one of the reasons she's Queen,\" replied an awed Pamela. \"She's extraordinary, yet so nice at the same time. I think she can do almost anything.\" \n\nIn the middle of July Steve was visiting candidates in the western states in an effort to help their campaigns. He had flown to Denver with Pamela Stenson, who was proving to be a crowd favorite since her viral video in the spring. Pamela's mother Linda was with them as a chaperone for her daughter. Saint was traveling with his father. Gwen was determined he have the opportunity to learn from his father as much as possible, which meant traveling with him whenever it was at all convenient. \n\nAfter driving to several campaign events north of Denver Steve, Saint, Pamela and her mother boarded a Beechcraft Bonanza, which had been hired to fly them to southern Wyoming to attend a rally for a candidate in Laramie. \n\nThey were an hour into their flight when Steve noticed the plane tilting as it unexpectedly turned west. He had been napping, and the tilt of the plane had awakened him. Steve looked to the front of the aircraft only to see the pilot slumped to the side. As Steve went to check on the pilot, he heard the engine sputter!\n\nBy the time Steve had determined the pilot was dead, the engine had stopped completely. A quick glance revealed they were in mountainous terrain, and only a few hundred feet above the treetops. As the plane began losing attitude, Steve spoke calmly to the Stensons and Saint. \n\n\"Kids, be sure you're buckled up. Linda, tighten your belt, we're going down. Hold these folded blankets over your heads and place your heads down by your knees. Brace yourselves for impact.\"\n\nThe aircraft was beginning to point downwards at a steeper angle as Steve buckled himself into a seat in front of the kids. He determined they were headed for the down slope side of a mountain before he lowered his head and braced himself.\n\nGwen was hosting the press in what had become an informal weekly gathering at Valhalla when she suddenly felt extremely apprehensive. She stopped in the middle of a sentence and involuntarily gasped.\n\nReporters easily determined she was upset and emotional as she began wiping tears from her eyes and looking around the room.\n\n\"Where's Lena?\" demanded Gwen as she looked toward an adjoining room, only to see the door flung open and Lena racing toward her.\n\n\"Saint's hurt! His plane crashed!\" cried the blonde girl.\n\nGwen knelt down and wrapped her arms around the child and hugged her tightly as the reporters watched in stunned silence.\n\n\"What can you tell me, Sweetheart?\" probed Gwen. \"How bad is it?\"\n\n\"He's breathing, but he's asleep,\" replied the girl between sobs.\n\nHanna, Kate and Paula rushed to Gwen's side as she knelt with Lena in her arms. Hanna tried to apologize for her daughter. \"She suddenly began crying and insisted she had to see you, Gwen. She's very distraught. Something must have happened.\"\n\n\"What else can you tell me, Lena?\" asked Gwen softly as she struggled to regain her own composure. \"Do you know what happened?\" \n\n\"Your Warrior was in a plane with Saint and that girl Pamela, and her mother. It stopped working. The trees were coming at the plane very fast, and then Saint fell asleep.\"\n\n\"I'll start making calls!\" promised Kate. \"They were scheduled to be in Laramie this afternoon. I'll see if the FAA knows anything about a plane crashing.\"\n\n\"Can you tell us what's happening?\" asked a woman reporter.\n\n\"I'm sorry, I can't; family matter. I have to ask you all to excuse us,\" responded Gwen as she stood, still holding Lena in her arms. \"Mom, please arrange for transportation to Wyoming immediately. Steve and Saint need our help!\"\n\nIt was a few hours later when Gwen, along with Lena, Hanna and Adam Kiss stepped off the jet in Laramie, Wyoming. Kate and Chip soon followed them from the aircraft.\n\nThe press was in a frenzy as they covered the story. Somehow Gwen Hammer and the blonde girl had known of a plane crash involving Gwen's husband and son before the FAA had even been apprised of a missing plane!\n\nReporters watched from a distance as Gwen and her entourage were escorted to a hanger for a briefing by the Civil Air Patrol.\n\n\"Madam President, we've had planes out searching for your husband's plane as soon as we were able to verify that his flight was no longer on our radar or in communication with ground control.\n\n\"As you can imagine, searching in heavily wooded, mountainous terrain is difficult and time consuming. It'll soon be dark, and we'll have to suspend operations. We'll resume our efforts at first light. We have all available resources involved. This is a top priority for us.\n\n\"This is a very difficult situation,\" admitted the CAP agent. \"We've been unable to detect any sort of signal from the aircraft. Records indicate it was equipped with a black box, but it must not be transmitting. ",
        "\"We're treating this as search and rescue mission. Your husband had a very experienced and capable pilot. There's a very good chance he put the plane down in a way to reduce injuries to the passengers,\" concluded the man.\n\n\"The pilot died before the plane lost power and crashed,\" revealed Gwen. \"He was slumped over in his seat shortly before the engine died. The craft rapidly descended into the side of a tree-covered mountain.\n\n\"My husband's in considerable pain. It's very likely he has a compound fracture of his left leg. Mrs. Stenson has a severely lacerated arm. My son and Pamela Stenson escaped with bumps and bruises,\" concluded Gwen.\n\n\"Have you been in contact with your husband after the crash?\" asked the surprised man. \"Do they have a cell phone with a signal?\"\n\n\"Not exactly,\" admitted Gwen. \"It doesn't matter how I know the extent of their injuries. You need to inform your searchers they're on the western face of a wooded mountainside, the pilot is deceased, and two of the four survivors are seriously injured.\"\n\nThe fact that Steve Hammer and his son were missing had the world monitoring the situation closely. When the information Gwen supplied to the CAP agent was relayed to those searching, people in all walks of life quickly learned that Gwen claimed to be in contact with her husband and son.\n\nSaint had been the first to regain consciousness after the crash. He immediately checked on his father, who was unconscious and tangled up with two of the plane's seats. Saint immediately noticed Steve's leg was bent at a strange angle.\n\nHe then moved to determine Pamela Stenson's condition. She had some cuts on her face, but seemed to be breathing normally. Then Saint caught sight of Pamela's mother's arm. Blood was running down her arm and dripping onto the ground as she slumped in what remained of her seat.\n\n\"Saint? Are you okay?\" asked Steve softly, much to Saint's relief.\n\n\"Dad! Your leg is bent funny. Pamela's not awake, and her mother's arm's bleeding pretty bad. What do we do?\" \n\n\"I don't know how much I can do, Saint. I need you to help me. See that suitcase? Drag it over and open it. We need some shirts to use as bandages.\"\n\nSteve managed to crawl the several feet to reach Mrs. Stenson. He carefully ripped the woman's sleeve away from the nasty cut on her arm. Saint followed his instructions closely as father and son did what they could to clean the wound and then bandage it tightly, dramatically reducing her loss of blood. \n\nAs they finished caring for Mrs. Stenson, Pamela slowly opened her eyes and looked around. \"Mom? Is Mom okay? Is she ...?\"\n\n\"She's alive,\" assured Steve. \"Saint and I just treated her arm, it's cut pretty deep. How do you feel? Anything feel broken, or bleeding?\"\n\n\"I have a headache,\" appraised Pamela as she cautiously moved her arms and legs. \"Everything else seems to be okay. Why's Mom so quiet?\"\n\n\"She must have been knocked out in the crash,\" responded Steve. \"Her breathing is normal, so I think she should wake up before long. \n\n\"My leg's broken. I'm going to need you and Saint to help me set it, and I may not be able to help you very much. I could even pass out from the pain. If I do, you and Saint will have to carry on. I'll explain what I want you kids to do, so listen carefully. This won't be easy for any of us,\" warned Steve.\n\nOnce Steve explained what Pamela and Saint needed to do and was certain they understood, he managed to move his left foot so it was wedged between a broken seat and the side of the aircraft. He had already managed to slit the leg of his pants and slid it up well above his knee. \n\nWith Pamela and Saint standing by with the materials needed to bind his leg, Steve heaved his torso back, causing the broken bone to slide back into place. Pamela immediately sat on Steve's upper leg with her feet braced against the section of the plane. She maintained constant pressure against Steve's torso, keeping his leg extended. Saint bound a stick and several rods, which had broken off the landing gear during the crash, as tightly as he could to Steve's leg, both above and below the break.\n\nOnce Saint finished, Pamela slowly relaxed from her position on Steve and stood up. She nodded her approval to Saint when she confirmed Steve's leg had remained stable. \"Don't worry. Your father said he'd probably pass out. You know he's the toughest guy in the world; he'll be okay.\"\n\nFor the first time since he'd awakened after the crash, Saint reached out to Lena. She quickly let him know she had \"seen\" everything he had done, and had relayed it all to his Mother. They were rushing to an airport to fly out to help take care of them.\n\n\"Lena told Mom what happened, and they'll get here as soon as they can. But it'll probably be tomorrow before they get here,\" stated Saint matter-of-factly.\n\n\"You can communicate with Lena when she's so far away?\" asked a stunned Pamela. \"Does she know about Mom and Steve being hurt?\"\n\n\"She saw everything the same time I saw it,\" revealed Saint. \"She told Mom. They'll find us.\"\n\n\"You're an amazing boy,\" croaked Mrs. Stenson, much to her daughter's surprise.\n\n\"You're awake, Mom!\" cried Pamela. \"I was so worried! Does your arm hurt?\"\n\n\"Of course it hurts, but it looks like you two bandaged it pretty good. I saw what you just did for Steve's leg. I'm extremely proud of you both.\n\n\"Saint, did I hear you tell Pamela you're able to communicate with Lena Kiss? She knows we've been in a crash and your mother is sending help?\" asked a somewhat incredulous Linda Stenson.\n\n\"He's connected to Lena, Mom. It sounds crazy, but I've seen them do it before. If Saint says Lena knows and has told his mother, you can bet that's the truth,\" insisted Pamela. \"That's one of the reasons she's our Queen. She and her family do things no one else can.\" \n\nThe Civil Air Patrol had spent the day searching along the intended path of Steve Hammer's flight to Laramie, but failed to find any sign of the wreckage. They would search again with first light. Gwen was given the news as dusk settled in.\n\nBy this time, Gwen was keeping Lena by her side at all times. She turned to the girl to be certain she had received and forwarded the message to Saint. The beautiful little blonde girl nodded to Gwen. \n\n\"Both the Warrior and Pamela's mother are in pain, and they feel warm to the touch. Pamela thinks they both have fevers, probably from infection. She and Saint are very worried,\" reported the petite girl. \"Saint has told them we'll be searching again in the morning.\n\n\"He wants you to know they can see a mountain with two peaks with no trees on them from where they are. The woods are really thick, and seeing their wrecked plane will be difficult,\" stated Lena. \"I think they're looking in the wrong area. Saint didn't see any planes at all today.\" \n\nThe CAP agent looked skeptical, so Gwen spoke up to reinforce Lena's opinion. \"Do not disregard what Lena is telling you. It's not your fault you're looking in the wrong place, but your search needs to be directed away from the area you covered today. \n\n\"I have an idea!\" exclaimed Gwen. \"Lena will let us know when Saint sees a search plane, and he'll help guide you to their location. You need to spread out your search area. Could you place a different colored banner or something on each plane so Saint can let you know which plane is close?\"\n\n\"We've never been in a situation quite like this before, but if it'll help, I'll have each search plane carry something unique which can be used to identify it from the ground,\" replied the dubious representative.\n\nBy the next day reporters were swarming around the airport, seeking information on the search and wanting to know how Gwen was bearing up under the stress. Kate approached Gwen shortly after noon.\n\n\"I think it might be a good idea for you to meet with the press briefly, accompanied by the Civil Air Patrol representative. People all over the world are concerned for Saint and Steve, and for you. If everyone sees how calm and confident you are, and how hard the CAP is working to locate the crash scene, it'll inspire confidence in the process and help to relieve a lot of worried people. This situation has upset everyone. You can lead by example. I think Steve would agree if he were here.\"\n\nGwen saw the merit in Kate's suggestion and reluctantly agreed. There would be difficult questions, as well as possible accusations. She and the Civil Air Patrol held a joint news conference less than an hour later. It began with the CAP representative describing what had been done, and what was being done to locate the survivors of the crash. \n\nThen Gwen gave a brief statement. \"Steve has a likely compound fracture of his left leg. Linda Stenson has a badly lacerated arm. They're both running temperatures, possibly because of infection. Saint and Pamela were bruised, but both appear to be in good health. \n\n\"The pilot had died in his seat prior to the crash. The engine sputtered once and then stopped, causing the aircraft to plummet into the western down slope of a mountain within sight of two mountain peaks above the tree line. That's pretty much what I know at this point.\"\n\n\"Madam President,\" began Amber Stahl. \"First, let me express my hope your family and friends are found soon, and they will soon return to good health.\"\n\n\"Thank you, Amber,\" was Gwen's reply.\n\n\"Can you tell us how you can be so certain Steve has a broken leg and Mrs. Stenson suffered a badly lacerated arm?\"\n\n\"I can tell you, but I doubt you'll believe it,\" admitted Gwen. \"My son Saint, and Lena, this lovely girl standing next to me, have a connection unlike anything previously known, or at least unlike anything I've ever seen or heard of. She knows exactly what Saint sees and thinks in real time, especially during a crisis.\"\n\n\"You're telling us they're telepathically connected?\" asked another reporter. \"Do you have proof of this?\"\n\n\"I have no need to prove anything,\" replied Gwen. \n\n\"Why doesn't your son just tell this girl their location so they can be rescued?\" asked a woman with a cable news station.\n\n\"If they had a phone with a signal, they could do exactly that. Steve's was smashed into small pieces in the crash. Pamela and Linda Stenson have phones but without any cell service, so their usual GPS doesn't work. They simply don't know their location. That's why the Civil Air Patrol has planes searching for them.\"\n\n\"Can you tell us why there's no signal from the downed plane? The service records show it was functional when it was inspected just a week ago. Do you suspect foul play?\" asked a network reporter.\n\n\"I haven't given that any thought,\" replied Gwen. \"I'm sure the proper agencies will investigate the situation thoroughly once everyone has been rescued.\" \n\n\"How long do you expect it to take for...?\" began another reporter before being interrupted by a very loud and animated Lena.\n\n\"There's a plane! It's far away and it's flying in the wrong direction. It needs to turn right,\" stated the girl excitedly.\n\n\"Which plane is it?\" demanded the CAP representative. \"I'll pass that on to the pilot right away.\"\n\n\"It's too far away to see any colors,\" replied Lena thoughtfully. \"Could you have all the search planes turn right?\"\n\n\"Yes, I suppose I could,\" agreed the man quickly.\n\nHe spoke briefly into the communication device he was carrying. \"We have five planes out searching. They've all been instructed to turn right ninety degrees.\"\n\n\"Please ask them to turn slightly more to the right,\" instructed Lena.\n\nThe CAP agent relayed Lena's request as Gwen watched and listened intently.\n\n\"The plane has green on its side!\" stated Lena excitedly. \"It needs to turn a little more to the right. It'll be directly over them in another minute if it does!\"\n\n\"Tell the green plane to turn slightly right and record its location,\" ordered the CAP agent into his device. \"Can he see anything?\n\n\"The pilot reports the area is heavily wooded. He's unable to make out any wreckage, but he's going to make some more passes,\" reported the agent. \"We'll dispatch a helicopter to those coordinates. We'll find out if this girl is the real deal soon enough.\"\n\n\"I understand your skepticism,\" responded Gwen with some annoyance. \"I really don't care if you believe Lena or not, but you'd damned well better have a helicopter get to that location as fast as possible, or there will be pure hell to pay!\" \n\nThe group of reporters suddenly broke their silence and began shouting questions at Gwen and Lena. \n\n\"I'm sorry, but we need to prepare for the return and treatment of our family and friends. I know you'll understand,\" responded Gwen as she hurriedly led Lena from the room.\n\nThe news media couldn't get enough of the story. It was the very thing cable news lived for. Gwen Hammer believed the blonde Hungarian girl could communicate with her son and help the rescuers zero in on their crash site!\n\nPsychiatrists were interviewed about Gwen's mental state as well as the possibility Lena actually could share her thoughts with Saint and vice versa. Most experts suggested Gwen was grasping at straws. She was under tremendous stress, and her desire to find her husband and son had overwhelmed her common sense.\n\nAmber Stahl was Gwen's lone on-air supporter that afternoon. \"Believe me, Gwen Hammer is cognizant. She is well aware of how difficult this is for most people to consider, but rest assured her husband and son will be found at that location, and they will be reunited with Gwen Hammer... wife, mother and Queen. \n\n\"The only thing which actually surprises me is how anyone can doubt what she tells us,\" continued Amber. \"I've been privy to so many incredible, even impossible, achievements by Gwen and Steve Hammer that I cannot question this latest revelation. Our Queen will soon be reunited with her Warrior and her son, I'm certain of this.\"\n\nJust two hours after Lena revealed Saint's location, the world watched as Gwen stood near a helipad as a chopper gently landed. Once the blades stopped rotating, Gwen raced onto the pad as a door swung open and Saint dropped to the tarmac, only to be swept into a warm embrace by his sobbing mother.\n\nThey were shown having a brief discussion as emergency personnel pulled two gurneys from the helicopter. Once safely unloaded, Gwen moved to her husband's side and kissed him passionately but gently on the lips. She then leaned close to share a brief conversation before he was wheeled inside, along with Linda Stenson. Pamela left her mother's side to kneel before Gwen.\n\n\"Please stand up and give me a hug, you little hero,\" admonished Gwen softly as she held her arms out to the girl. \"Lena told me how great you were treating Steve and your Mom. You're now one of us, part of this family. I'll never be able to thank you enough.\"\n\n\"My Queen, your saving the world from war, probably twice in the past year, is more than enough thanks! And Saint was incredible! He's so much like his Dad. You must be very proud of him and Lena.\" \n\nSeveral hours later, Gwen was seen leaving the hospital with Saint, Lena, Pamela, Hanna, Kate, Chip and Adam. She paused briefly to answer a few questions the reporters were posing.\n\n\"Steve's leg is already healing. Saint and Pamela did an excellent job of setting and splinting the compound fracture in his left leg. He's on antibiotics to combat a slight infection.\n\n\"Linda Stenson will require surgery to minimize the scarring of her arm. She's also receiving antibiotics for an infection. Both she and Steve will make complete recoveries. Pamela and Saint were given clean bills of health.\n\n\"We're going to have a nice dinner before we return to be with Steve and Linda, who obviously have been admitted to the hospital,\" concluded Gwen.\n\n\"How do you feel now that you know Lena Kiss was right about the location of your husband and son?\" asked a reporter.\n\n\"The doubt which you imply was yours, not mine,\" responded Gwen as she stopped to deliberately look over the assembled reporters. \"I realize this has been difficult for many people to believe. I'm not going to waste my breath telling you what is to come for Saint and Lena, but know this. Today was merely a small sample of what lies ahead for them.\"\n\nGwen had discussed the situation with Steve in the hospital. The world now knew of the special connection between Saint and Lena, even though many people, perhaps a majority, were still in denial. Steve felt at this point it would be counterproductive to deny it. If Earth were to accept Saint and Lena as the representatives of the planet, it was important for the world to begin to see just how well-equipped the two were to undertake the battle. The message would be accepted slowly, perhaps glacially so, hence the campaign had to begin straight away.\n\n\"Saint and Lena are destined to fight for the future of mankind. Steve and I will make certain they are prepared.\"\n\nGwen's comment created a furor as reporters began shouting more questions. Her response was terse. \"As I just stated, we're going to enjoy a nice dinner and return to be with our loved ones in the hospital. Please excuse us.\"\n\nGwen called Amber Stahl the next morning. \"Would you care to interview Steve and me today? Television and the internet are running with all sorts of rumors. We realize people often prefer to believe what is convenient, causing all sorts of theories to crop up. We'd like to present the roadmap for the future as we see it.\"\n\nThe hospital supplied a media room for the interview. Steve was in a wheelchair, his leg in a cast with Gwen sitting next to him. Amber was mildly surprised to see Lena, Saint, Hanna, Adam, Kate and Chip sitting behind Gwen and Steve. Amber had the cameraman set up and then signaled the interview was underway.\n\n\"Amber, we're all here to answer questions. That includes Saint and Lena. I trust you to not ask anything which would be age inappropriate, although both these kids are quite advanced for their age,\" added Gwen.\n\n\"Madam President, thank you for granting this interview,\" responded Amber with a warm smile. \"I think I should begin with Steve. How are you feeling? Will you make a complete recovery in time for football season?\"\n\n\"I expect to be fully healed by next fall, but I've already let Jared know I wouldn't be playing again. The Super Bowl was my last game. It's becoming more difficult to concentrate on football when I have such a wonderful family. I need to spend more time with the kids, Gwen, and our extended families and friends. It's time to hang up my uniform.\"\n\n\"The Spartans will miss your leadership and skills, but I'm sure the fans will understand,\" remarked Amber. \"Gwen relayed to us, through Lena that your pilot died before the crash, as well as how the engine stopped for no apparent reason. What can you tell us about the situation?\"\n\n\"Ralph, our pilot, appeared fine when we took off. His death was quite sudden and unexpected. I expect an autopsy will tell us more. The engine suddenly cutting off requires an investigation as well. I don't believe in coincidences. Combine those two items with our flight recorded not working and I see a pattern. The FBI will determine what actually happened and why.\"\n\n\"Gwen, I have the feeling Steve thinks these were not random, unconnected occurrences. Did this dangerous situation cause you to rethink having your son travel and spend so much time with Steve on the campaign trail?\"\n\n\"It honestly has,\" responded Gwen. \"Saint may well have saved his father's life, as well as Pamela's and her mother. I have stated how important I believe Saint and Lena are to the future of mankind. Saint needs to learn the ways of a true warrior. It's my firm belief his father is the one person capable of preparing him for what lies ahead.\n\n\"Being a member of such a prominent family is not always easy. Saint needs to learn humility, compassion, and empathy. Steve is the best example of those traits I know. That said, Saint also needs to learn to defend himself and others. He must be able to determine when it's necessary to be proactive. Steve has proven his total grasp of dangerous situations. He's also demonstrated his ability to end, or neutralize them. Saint will learn by watching his father. That requires they spend a lot of time together. Being with Steve will subject Saint to international intrigue, diplomacy and leadership, and at times danger. It must be so for him to become the man the times will require.\" ",
        "\"Can you tell us what it is that you think Saint will face? What is he being trained for? Where will this threat originate and how do you know of it so far in advance?\" asked Amber.\n\n\"I'll only reveal what is known to be true,\" replied Gwen. \"Lena's mom and I both believe our kids are meant for something very critical for us, not for a nation, but for the human race. We know we both believe that. It is a fact Lena and Saint are able to communicate with each other on a level never before known to exist.\"\n\n\"Saint, do you worry about the expectations others may have for you?\" asked Amber to the boy.\n\nSaint looked at Amber as he formed his response. He had seen her many times with his parents and knew she was a friend. Still, he hesitated.\n\n\"He's worried about living up to his parent's expectations,\" revealed Lena as she gazed at Saint. \"He's very brave and is doing everything he can to become the person Gwen and Steve want him to be.\"\n\n\"Lena's worried she won't be big enough, or strong enough to do her part when things get rough,\" revealed Saint. \"She's worried that people, especially Americans, won't accept her as queen.\"\n\n\"Okay!\" interrupted Gwen. \"The kids are still learning which thoughts of each others' are okay to share and which aren't.\"\n\n\"Gwen, will you run for President of the United States next year?\" asked Amber as she realized Gwen was concerned about the responses from the two children.\n\n\"That's a fair question. Steve has been working hard to alter the landscape in Washington. He was doing exactly that when his plane crashed the other day. My husband is my conscience as well as my advisor, friend and lover. He hopes I'll accept a draft, and I'm not one to disappoint my husband if I can help it.\"\n\n\"To be clear,\" interrupted Steve. \"I'm trying to change the culture in Washington so Gwen may be allowed to serve effectively if she should be elected our next president. The people of this great nation will determine if they want Gwen. I have not been campaigning for her, but rather for people I think will benefit Washington, regardless of who is elected.\"\n\n\"Secretary Chatham stated the road to the White House runs through Steve Hammer,\" recalled Amber. \"Would either of you care to respond to that statement?\"\n\n\"I used to deny we were kingmakers,\" replied Gwen. \"I've come to rethink that position. Steve is incredible. He truly has the respect and trust of leaders around the world. Everyone knows he says what he thinks, and always keeps his word. I do believe he has the power to alter history, as well as the leadership of many nations. I also know he will not force his will on others unless he feels the situation is dire. I am not a kingmaker, but Steve is. That's how I see it.\"\n\n\"To answer your question, I'm going to do everything in my power to help Gwen get elected President of the United States,\" avowed Steve. \"This is not because I seek power, or influence. I want this nation to prosper and flourish. I am convinced beyond any doubt that Gwen is the best person possible to lead the United States.\"\n\n\"Do you think Gwen's belief that Saint and Lena are destined for a world saving adventure of some kind will affect her chances of being elected?\" asked Amber.\n\n\"Absolutely,\" replied Steve immediately. \"My wife is willing to place her son in possible danger so he may be prepared for his quest. If she's willing to place the survival of the world ahead of the safety of her family, how can the rest of us not respond? Doing nothing is not an option. The world, not just the United States, needs Gwen to take the lead and prepare it for destiny.\"\n\n\"I've received some information which has just been verified,\" stated Amber to her audience, as a staff member handed her a letter. \"Gwen, I'm sure you remember that Sunday morning when Congress impeached and convicted you, thus removing you from office.\n\n\"Do you remember the child in the wheelchair you stopped to speak with during your walk to the National Mall that morning? You held her hands briefly and kissed her?\"\n\n\"Yes, of course I do,\" admitted Gwen immediately before becoming concerned. \"She was such a joy. I hope nothing bad has happened to her!\"\n\n\"Something has happened to her, but it's very good. She's regaining feeling in her extremities. She's actually been able to move her legs,\" revealed Amber.\n\n\"That's wonderful news! I'm so happy for her. Thanks for letting me know, Amber,\" replied an ecstatic Gwen. \n\n\"There's more, My Queen. Her spinal cord had been severed in a car accident. Her doctors told her she'd never walk again, but her spine is fusing back together! It's being called a miracle by her medical team. Her family's insisting the Queen of Peace has performed another miracle!\"\n\n\"Oh, my,\" gasped Gwen as she considered the ramifications of Amber's revelation.\n\n***\n\nThus ends Book 3 of the Lady in Red series. Book 4 will feature Saint and Lena battling for Earth's existence, which sounds exciting. It will have an obvious sci/fi theme. I am deeply touched so many readers have written and commented on this series. I am determined to have the next book completed before posting any chapters, so it will be another year or so, if we all last that long. Your patience and support is certainly appreciated. \n\nWhen I began this series almost 7 years ago, I really had no idea what I was doing, or getting into. The response by readers has been very gratifying. I need to thank Tex Beethoven who suggested he could greatly improve my story with some careful editing. He was right. He edited Book Three and it improved my story a great deal. Mostly, I need to thank readers who understood I was not seeking reality, so much as entertainment and inspiration. Never stop dreaming."
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "russian pesident",
        "coup",
        "kidnapping rescue",
        "lena",
        "plane crash",
        "saint"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-03-ch-09"
}