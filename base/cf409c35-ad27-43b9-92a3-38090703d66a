{
    "title": "My Teacher Ms. Miller Ch. 07",
    "pages": [
        "The rest of the class gradually filtered in. Tony ignored them all.\n\nFinally, a few minutes after the bell had run, Ms. Miller came into the class.\n\nMs. Miller was dressed in a drab outfit that looked like shapeless military fatigues. She wore an olive green shirt which appeared large enough to fit two people. Her pants had an old style of camouflage print, and looked cut for a two hundred pound man.\n\nShe was also wearing a green cap which covered all of her hair and most of her face. Finally, she had resumed wearing her thick black-rimmed spectacles which served to distort the appearance of her entire face.\n\nAfter a few stunned moments, the class took in the return of their old calculus teacher, and her ridiculous outfit.\n\n\"Mousy Miller is back!\" someone cheered from the back of the room, and the entire class erupted in rude guffaws of laughter.\n\nTony was himself stunned by this turn of events. Ms. Miller looked nothing like the woman Tony remembered. The last time he had seen his teacher was before their holiday break. She had dressed in increasingly confident clothing that managed to flatter her figure while still remaining professional.\n\nIn fact, Tony had to remind himself, he was one of the major instruments of Ms. Miller's conversion from her habit of dressing in horrific, shapeless clothing. She had invited him over because she somehow thought that she was fat. She had invited him to judge her awesome body. He had run his hands all over her legs, stomach, and ass, and told her the truth: she had an awesome body.\n\nMs. Miller had seemed to take his words to heart, and had begun dressing in a much more appealing way at school. Her popularity had increased rapidly as a result.\n\nThat had also been the beginning of Ms. Miller's relationship with Tony, and they had begun a variety of escalating sexual encounters, beginning with a titfuck after a nearly naked study session. He had lost his virginity with her after going to prom together, and he had fucked her from behind in the dressing room of her favorite store.\n\nThen Ms. Miller had left town for the break, and Tony's cousin Caitlin had initiated a relationship with him. Tony's cousin, after their first fuck had gone bad, had texted Ms. Miller using Tony's phone about Tony's cheating.\n\nThen there had been silence. Ms. Miller had not returned after the break, and they had endured a substitute teacher for calculus class.\n\nSo that was how things had stood, until Ms. Miller's return today.\n\nTony felt incredibly uncomfortable with how things stood. Had Ms. Miller received Caitlin's text? Was she angry? Why was she dressing this way?\n\nHer first calculus class back was awful. Ms. Miller's voice had seemed to diminish to nothing, and soon the class was out of control, obliviously talking over their shy teacher.\n\nWhen class was over, Tony waited for the others to clear out. \n\nWhen he arrived at her desk, he was the last person in the room.\n\n\"Ms. Miller...\" he began.\n\n\"Yes, Tony.\" Her cold tone made Tony stop his question in his tracks. Her blue eyes peered at him from behind her enormous glasses, and he could see her hand gripping her desk tightly.\n\n\"Never mind. I'll figure it out myself.\" Despite the fact that they were alone in the classroom, he couldn't bear to ask her what was going on.\n\nAt home, Tony tried to sort out what was going on. He didn't really understand his relationship with Caitlin. He was attracted to her physically: that he definitely knew. He and Caitlin would text each other and chat when they were online. Tony felt good about communicating regularly with Caitlin, but didn't really think of it as a real romantic relationship. \n\nAfter all, they were cousins. There was no way they could tell their parents what they had done. And since she was so far away, they weren't able to have sex.\n\nSo for now, Caitlin was basically out of sight, out of mind.\n\nBut Ms. Miller was definitely not out of sight. Each weekday, Tony had to sit in her class, miserably trying to pay attention while still thinking about all the firsts he had done with his teacher. His first kiss, his first blowjob, his virginity.\n\nMs. Miller seemed to have returned entirely back to her old manner of dressing. Today, she was wearing a hideous mix of brown and grey splotched clothing. Again baggy. Again shapeless.\n\nThe return of her old look had emboldened all the idiots in class to return. The desks in the class were no longer arranged in neat rows, but in little clusters of desks where students openly talked during class. On a daily basis, Tony could barely follow what was going on because of the ruckus.\n\nTony realized he still very much cared for his teacher. Did he like her more than Caitlin? Both were illegitimate, secret relationships. Caitlin because she was his cousin. Ms. Miller because she was his teacher.\n\nAnd what did Ms. Miller now think about Tony? Tony had slept with Caitlin over winter break. And Ms. Miller knew it.\n\nSo Tony didn't know what to do. He decided to go to Ms. Miller's apartment. It was Saturday afternoon, three weekends after the end of winter break.\n\nTony reviewed again what he wanted to say. Then he rang her doorbell. Just when Tony thought that nobody was home, Ms. Miller opened the door. She was dressed in a purple long sleeve knitted sweater with khaki pants.\n\nShe was dressed a good deal better here than she did at school, Tony noticed.\n\nShe did not look surprised to see him.\n\n\"Yes, Tony?\" It was the first time she had spoken directly to him in weeks.\n\nAt least she didn't seem hostile, Tony thought.\n\n\"Ms. Miller, could we talk?\"\n\n\"About what, Tony.\" She said it as a statement rather than a question.\n\n\"Well, Ms. Miller, about the way we've been treating each other lately.\"\n\n\"What way?\" Her voice was frigid.\n\n\"I thought we were friends!\" Tony said lamely. He had rehearsed what to say, but a lot of his words felt like they were being torn away from him. Tony felt like he was about to cry.\n\nMs. Miller's face darkened. She stuck her finger in his face and Tony thought she would poke him in the forehead. Her anger was explosive.\n\n\"We were friends, Tony. We had something special. Something fun. And you had to go around and stick your dick somewhere else. What the fuck kind of friend are you?\"\n\nShe slammed the door in his face.\n\nTony just stood there, stunned. Well at least he knew where she stood now. Ms. Miller was angry, and justifiably so.\n\nTony carefully thought about what he was going to say, and then knocked again on her door. \"Ms. Miller?\"\n\n\"What?\" Her muffled voice came outside. It sounded like she was crying.\n\n\"I'm sorry. Would you please open the door? I'm sorry.\"\n\n\"Sorry doesn't cut it, Tony. Go the hell away,\" she said.\n\n\"Caitlin found out about us. She read my text messages on my phone while my family was visiting her house,\" Tony said. After he had finished speaking, he held his breath. He hoped that this would work.\n\nThere was the sound of a lock turning, and Ms. Miller opened the door just a crack.\n\n\"What?\" She said. Ms. Miller was crying, Tony realized. Her eyes looked puffy, her hair was unkempt, and her mouth was creased in a frown. She wasn't wearing any makeup.\n\n\"Caitlin took my phone when I wasn't looking and read my text messages,\" Tony repeated. \"Then she made me promise to sleep with her so that I wouldn't tell anybody.\"\n\nTony watched as Ms. Miller processed this new information.\n\n\"Really?\" She said.\n\n\"Really. I slept with Caitlin to protect you. So no one would find out about us.\"\n\n\"Why did you send me a text message about it?\" Ms. Miller said.\n\nTony had thought about this too. \"After... after we did *it*, Caitlin stole my phone again and sent the message.\"\n\nMs. Miller thought about this. \"How did Caitlin get your phone in the first place? I thought she lived two hours away.\"\n\n\"She does. My mother is her father's sister. So we went over there to spend Christmas together.\"\n\nMs. Miller said, \"What's going to happen now? Do you have to sleep with her again and again to keep... to keep our relationship a secret?\"\n\nTony said truthfully, \"I can confidently say that Caitlin will not tell anybody about my relationship with you.\" \n\nMs. Miller said, \"How are you so confident?\"\n\nTony knew that he had a bunch of pornographic pictures of Caitlin on his phone; she had agreed to let him take them to ensure that she wouldn't tell anybody about Ms. Miller. But he didn't want to tell Ms. Miller that.\n\n\"Let's just say that it was a one-time deal, and I think Caitlin will keep her word,\" Tony said. That was still truthful.\n\nMs. Miller said, \"Did you enjoy it?\"\n\nTony froze. He hadn't prepared for this question at all.\n\nMs. Miller asked again, \"Caitlin is really hot. Did you enjoy fucking her?\"\n\nUh oh, Tony thought. This is going the wrong way.\n\nMs. Miller persisted. She took a step closer to him. She was two inches taller than he, but standing next to her right now, Tony felt like a little kid. Her words bored a hole into his skull. \"C'mon, you definitely liked it. Caitlin's got awesome tits. I saw you look at her ass during winter ball. She's probably a great lay.\"\n\n\"Of course Caitlin is not as pretty as you,\" Tony said finally.\n\n\"That's not what I asked, Tony. And you better tell me the fucking truth. Did you *LIKE* fucking your cousin?\"\n\nTony closed his eyes.\n\nHe swallowed once, and then said, \"Yes.\"\n\nMs. Miller said in a voice thick with anger, \"This is all bullshit. Get the fuck off my doorstep.\" Then she slammed the door.\n\n*******************************************\n\nAnd life went on. Days passed by, then weeks.\n\nWhen Tony stayed after class, Ms. Miller answered his questions calmly and efficiently, and left no room for conversation.\n\nHis friends were already getting \"Senioritis,\" an excuse to be lazy that high schoolers developed for themselves. Those who had applied to college were all waiting for the results of their applications.\n\nBut Tony refused to accept that his torrid fling with Ms. Miller was really over. Now that he had more time, he spent it working hard during calculus class, and trying to rack his brains to figure out how to get Ms. Miller to meet him again.\n\nThe answer came to him one day as he was playing basketball in the park. Near him, a group of Europeans were playing soccer.\n\nSoccer! Ms. Miller was going to play on a soccer team the first time he had seen her, the first time that he had noticed her as a woman.\n\nHe spent his entire Saturday driving to parks in the area where they had met, looking for soccer games. At last, he found someone who told him that there was a women's soccer league which had games each Saturday morning. The start time of the game was about half an hour after the time when he had met Ms. Miller that first fateful day.\n\nHe settled into the bleachers at the park early the next Saturday to watch the games. The first game was a 90 minute waste of time. During the second, he saw a familiar blond figure jog onto the field. She was again wearing her clinging blue shirt that had so attracted him the first day.\n\nDamn! Tony thought. Her figure is amazing! Why does she hide it so much?\n\nTony changed quickly into his athletic clothes. He joined a pickup basketball game that was adjacent to the soccer field where Ms. Miller was playing her game. He kept an eye out for her, and, when the game was over, he made sure to head over to the water fountain in the direction she was walking.\n\n\"Tony?\" Ms. Miller asked? \"Is that you?\"\n\n\"Ms. Miller?\" Tony forced himself to be casual. \"Good to see you again.\"\n\n\"What are you doing here?\" Ms. Miller asked.\n\n\"Playing basketball,\" Tony said, \"There's a really great pickup game that I play in every week.\"\n\n\"And it's right here? Where my soccer game is? What a coincidence.\" Ms. Miller said dubiously.\n\n\"Well, what can I say? I got to play basketball where the games are.\" Tony hoped his answer wasn't too strained.\n\n\"Fine then. Well, I'll see you later,\" Ms. Miller said. She wasn't smiling.\n\nThe next week, Tony repeated his pattern. He watched his teacher play soccer, then, as her game was ending, he went to the basketball court and shot around a little.\n\nShe greeted him with some surprise again. Tony might have been overthinking it, but her reaction did not seem as negative this time.\n\nAs she walked away for a second time, Tony felt disappointment. Sure he'd seen her and they'd talked, but so what? They could have had the same brief conversation during calculus class, where he saw her five times a week.\n\nThen he turned to hear Ms. Miller's voice. \"Just don't go showing up to my yoga class Sunday morning workouts at Thompson Park. Then I'll know it's not a coincidence.\"\n\nTony felt a surge of hope. It sounded like the door was open - just a crack, but still open.\n\n*********************************************\n\nTony wondered again whether doing yoga was worth it, even to see Ms. Miller again. For three weeks, he'd been coming to a class full of women. Almost all of the women in the class were in their fifties and sixties. Not for the first time, Tony wished that they would cover the sagging features and expanded waistlines \u2013 or at least wear clothes that weren't so tight.\n\nMs. Miller typically dressed in conservative sweat suits for class. Today she was wearing black pants and a red stretch top which concealed most of the shapely features Tony knew were there. He did notice that his teacher easily completed all of the most difficult stretches.\n\nTony wished he could spend the yoga class watching her, but he had to spend most of his concentration on just not falling over because of the poses he was attempting. He was inflexible even for a male, and he had tried and failed at all sorts of the contortions from the class.\n\nAfter yoga class, he lingered, hoping that she would speak with him. Yes, he was stalking her, he thought to himself ruefully.\n\nUsually, she said no more than a few polite words to him. In his opinion, this was worse than saying nothing at all.\n\nToday during class, he had actually fallen over. Somehow, every other woman in the class was able to do the \"Crouching Crane\" position, but he had no ability to balance on one foot while contorting his body in the way the instructor was doing.\n\nHe made a loud thump when he landed. The yoga instructor had rushed over to make sure he was not hurt, and he was being laughed at by a flock of elderly women. Perfect.\n\nHe got up gamely, massaging his butt, and continued the class. He did not turn to look, but did Ms. Miller just pause and watch him thoughtfully?\n\nAfter class, he was packing up his stuff.\n\nMs. Miller bent down to speak to him.\n\n\"Tony, why are you still here?\"\n\n\"What do you mean, Ms. Miller, I'm just putting away my stuff?\" He replied innocently.\n\n\"No, what I mean is: why are you still in this yoga class? Why don't you just go to the mall or the park or wherever it is that boys like you usually go to?\" Her emphasis on the word \"boys\" cut him.\n\nHe thought over his answer carefully, and then responded slowly: \"I would go to those places if I thought that I would meet you there.\"\n\nHis answer visibly stunned her.\n\n\"Tony...\" her voice trailed off.\n\n\"Ms. Miller, although you've cut off our relationship, that doesn't mean we can't be friends. I miss you, Ms. Miller. I miss studying together and working together. I miss laughing with you. Can't we just hang out? No funny business, no tension, just be friends?\"\n\nShe thought for a moment, and looked at him with a hard squint. Tony held his breath and waited for her response.\n\nAt last she smiled, a very slight smile, and said, \"I guess we could just be friends, Tony. No fooling around, no funny business. Just friends.\"\n\nTony returned her smile.\n\n\"Thanks, Ms. Miller. It's such a relief just to be talking again.\"\n\n\"So what were you thinking? Friend?\" She rolled the last word off her tongue like it was an unfamiliar flavor.\n\nTony thought a moment, and then said. \"Maybe we could go jogging together? Your house is on my route!\"\n\nMs. Miller appeared to be considering a moment, and then said, \"I'm going running tomorrow morning. Meet you at my house at 9?\"\n\n*********************************************\n\nTony blew on his hands and rubbed them together. It was freezing cold. Tony shuffled up to the door of Ms. Miller's house and rang the doorbell promptly at 9. He was wearing sweatpants and a hoodie.\n\nWhen Tony opened the door, his breath just about froze in his mouth.\n\nMs. Miller was wearing the briefest of sports bras and sports shorts. Her entire outfit looked about two sizes two small. Her large breasts were crammed tightly into the skimpy tube top, creating visible strain marks in the stretchy black material. Her nipples stood out clearly in the cold weather. The bra shaped and uplifted her large breasts, creating a nice expanse of cleavage. Her stomach was completely bare, and Tony could easily make out her shapely abs.\n\nHer shorts were just as revealing. Also black, they had a thin white stripe running up each side. They were extremely tight against her hips, outlining his teacher's awesome ass. Staring at her, Tony thought he could almost make out a camel toe where her shorts outlined her crotch.\n\nThe best part of seeing Ms. Miller again wasn't even her outfit. Ms. Miller had a wide smile on her face for him, the first he had seen on her face in what seemed like forever.\n\n*********************************************\n\nTony pushed himself to try to keep up with his teacher as they fought up the next hill. She was much faster than him, and had better endurance to boot.\n\nTony regretted what he was wearing just a little bit into their run. Despite the biting cold, he was sweating profusely. After his sweatshirt was soaked, he'd tied it around his waist. His sweat left him freezing. Ms. Miller, on the other hand, seemed utterly unphased by the weather as she sprinted down each stretch of road.\n\nTony felt his lungs burn, and his legs ached at the pace. The cold weather froze his face. He was so cold that he felt his eyes tearing up.\n\nAll he had was pride at being a man to keep him at her withering running pace. \n\nThat, and his lust.\n\nThe bottoms of her butt cheeks protruded from her shorts as she ran. That pushed him to catch up to her, to stay close. He focused on the small of her back, those hips, and that ass as he followed her on mile after pounding mile.\n\nJust when Tony was about to collapse, Ms. Miller suggested that they stop and stretch. For a few, blissful minutes, Tony had an excuse to watch her from close up. Her skin was glistening with her sheen. Her face glowed from her perspiration. Her bra and shorts were visibly darkened from her sweat.\n\nTheir run had taken them in a wide loop, with the starting and ending point her home.\n\nGratefully, Tony slowed his pace down until they arrived at her apartment. As he stopped, his legs were shaky.\n\n\"That was awesome!\" Ms. Miller said. She was already stretching, with her legs straight out in front of her, and her fingers reaching for her toes.\n\n\"Yeah,\" Tony felt like he could barely breathe, and gratefully sucked down each breath, exhaling it in large steaming clouds.\n\n\"We're about the same speed,\" Ms. Miller said, oblivious to his pain. \"We're good running buddies.\"\n\n\"No, you're much faster than me,\" Tony said honestly. \"You're in really great shape.\"\n\nShe paused her stretch and looked up at him sharply. \"You're just saying that,\" she said flatly.\n\n\"No, really, Ms. Miller. I already knew you were hot from that first time in your apartment, and I can see that your body isn't just for show.\"\n\nMs. Miller seemed to genuinely hesitate at that, and said in a small voice, \"I don't really believe you.\"\n\n\"How come?\" Tony said slowly.\n\n\"You are still the only person to have seen me. Up close, I mean.\"",
        "Tony was amazed to hear that. He loved being the only one to know about his calculus teachers' hot body.\n\n\"We had some really great times together, didn't we?\" Tony said.\n\n\"Really great,\" Ms. Miller sighed. \"You're amazing in bed.\"\n\nTony grinned at that. \"You're pretty great yourself.\"\n\n\"We had something special. Something fun and awesome. And you totally fucked it up by not being able to keep your dick in your pants,\" she said, \"I realized it was all a lie, everything you said. I felt so tricked.\"\n\n\"That's insane, Ms. Miller. You're the most beautiful woman I've ever met. You're model hot. No, you're lingerie model hot.\"\n\nShe smiled at his feeble attempts to compliment her. \"No. My legs are too thick,\" she said, gesturing weakly at her lower body.\n\n\"My tits are too big, and my ass sticks out too much,\" she said sadly. Now she cupped her left breast in her hand.\n\nTony went up to her and grabbed her arm. She was sitting on the ground, holding her legs bent in front of her. \"No, Ms. Miller. You are a smoking hot teacher.\"\n\nTony placed his hand on her thigh. It was slick with sweat. \"Your legs are not thick. They're long, and they go on for miles.\"\n\nNow he moved up to her hip. \"Your ass is a work of art. I've seen it up close, and I've dreamed about fucking it.\"\n\n\"I've always wanted you in my ass,\" Ms. Miller murmured quietly.\n\nTony continued his movements up her body, now placing the flat of his hand on her taut stomach. It was slick with her sweat. \"Your tummy is trim. It's strong, and womanly.\"\n\nSlowly, he inched the back of his hand up to the bottoms of her breasts, waiting for her to interrupt him. Ms. Miller just looked down at him, waiting for him to continue.\n\nBoldly, Tony cupped her full left tit through her bra. Ms. Miller held her breath as he squeezed her large breast gently. Tony said, \"You have the most amazing breasts I have ever seen. They are just the perfect size for your body.\"\n\nReleasing her, Tony looked directly into her eyes and continued, \"And every time we hooked up was like a fantasy. Every time, I had to pinch myself that I could be with the hottest babe I've ever met.\n\n\"And I accept that I messed up by fucking Caitlin. Even though I knew I shouldn't have, I totally cheated on you. And I accept that we'll never have the same kind of relationship again. But what I don't accept is that you ever think of yourself as anything less than beautiful.\"\n\nTony snapped his mouth shut.\n\nHis teacher locked eyes with him. Her eyes were wet.\n\n\"So there it is, Ms. Miller. That's the truth, whether you believe me or not.\"\n\nFor a minute, they both sat there, in the freezing cold. Neither of them moved, and Ms. Miller eventually said, \"I should go inside. Thanks for running with me.\"\n\nThey both got up slowly, and Tony wondered how to continue the mood.\n\nThen, quite suddenly, he sneezed.\n\n\"Oh no,\" Ms. Miller said with concern, \"You're catching a cold! You have to come inside and get washed off right away!\"\n\nShe pulled him into her apartment. Ms. Miller showed him to the bathroom, where he stripped off his clothes and immediately set the shower at a high temperature. The steaming water cleared his congestion and brought some relief to his aching muscles.\n\nWearing just a towel, he left the bathroom. He found that Ms. Miller had laid out a bowl of steaming chicken soup for him in the kitchen.\n\nHe ate it gratefully while he heard the sound of Ms. Miller taking her own shower.\n\nIt seemed like so long ago that he'd spied on her changing, he thought to himself ruefully. A lifetime ago.\n\nThe shower stopped. Tony helped himself to another bowl of steaming soup. He felt immensely better.\n\nMs. Miller padded out to the kitchen where Tony was still eating. She was wearing billowy pajamas. The pajamas had vertical red stripes of varying colors: pink, red, orange and white.\n\nHer shirt was oversized, concealing the shape of her body. Her pajama pants had the same pattern. They were also loose fitting.\n\nShe sat down next to him. \"Tony?\" Ms. Miller said, \"You're a really good friend. Thanks for going on a run with me today. And thanks... for what you said.\"\n\nTony unsteadily got to his feet. \"Yeah, no problem. We should definitely do that again sometime.\"\n\n\"Definitely sometime soon,\" his teacher said, with a wink.\n\nIt sounded like she was dismissing him. Tony desperately thought about a way to continue the mood from outside. \n\nMs. Miller stretched, her arms raised above her head in little balls. She groaned a bit from the exertion.\n\n\"Hey Ms. Miller? Do you want a massage?\" Tony suggested lightly.\n\n\"Well...\" she said. \"I don't know.\"\n\n\"C'mon, it's just a massage. A friendly massage. Definitely what one friend would do for another.\"\n\n\"Well, okay,\" she said. \"I am kind of sore.\"\n\nTony, still wearing just a towel, came up behind his teacher where she was sitting at the kitchen table.\n\nHe started massaging her trapezoid muscles, then her shoulders.\n\nMs. Miller groaned and leaned her head forward. Her mass of curly blond hair drooped in front of her face.\n\nDetermined to give her a good massage, Tony continued to work and knead her upper back and shoulders. Her muscles were taut under her skin, and Tony could feel the knots loosening as he worked.\n\n\"Would you like me to do your lower back too? Your whole back is so tight,\" Tony said hopefully.\n\n\"Yeah, definitely. That feels really good.\"\n\n\"Maybe we could move into the bedroom?\" He tried to keep his voice neutral, although he was excited at the possibility of what would come next.\n\n\"Yeah. The bedroom would be good,\" Ms. Miller said.\n\nShe stood up, and walked down the hall. Tony trailed after her.\n\n\"Thanks, Tony,\" she said, and settled into a front down position on her bed, her head turned to the right. Her hair was lying in a golden pool to her side.\n\nTony stepped over to the side of the bed, but realized that Ms. Miller was lying on the middle of it, too far for him to reach.\n\nHe paused for a minute, and then crawled onto the bed next to her. Sitting on his knees, his towel loosened slightly around his waist. He began to knead Ms. Miller's back again, this time also working on her lower back.\n\nHe realized immediately that her cotton pajamas blocked him from effectively massaging her. They slid along her back as he tried to rub her, bunching up uncomfortably.\n\nAfter a more few ineffective moments, Tony said, \"Ms. Miller? Would you mind taking off your top? For the massage...\"\n\nFor the massage indeed, a corner of his mind whispered. You want to see your teacher topless!\n\nMs. Miller paused for a moment, and then said, \"Alright, Tony. Maybe just for a few minutes.\"\n\nShe sat up next to him. They were both on their knees in the middle of the bed.\n\nTony gallantly faced away from her as Ms. Miller unbuttoned her top and slid it off.\n\n\"You can look now.\" She said.\n\nMs. Miller turned slightly, and then sprawled onto the bed. She was again front down, with her head turned to one side. This time, though, she was topless.\n\nTony looked down at the sight of his gorgeous teacher, half naked in front of him. She was still wearing her pajama pants, but since she was front down, he could see her shapely butt. Her toned back lay naked on full display in front of him. The sides of her full breasts were still visible, pressed to her sides by her position.\n\nTony again moved on top of her. Still wearing only his towel, he straddled her body with his knees, with his ass suspended directly above hers. He used both hands to rub her back with intensity. She groaned in appreciation.\n\nHe stood up on his knees behind Ms. Miller to get the best leverage, and began to kneed her back and neck. This time, his hands made close contact with her skin, and the massage was much firmer.\n\nHer lower back had more muscle than he had expected. It was tight, and his massage was tough going at first. Tony used his elbow at some of the worst trouble spots. After a good, solid five minutes, Ms. Miller was groaning in appreciation. Her arms hung limply at her sides as she relaxed.\n\nFrom his vantage point, Tony could see the sides of her breasts from where they extended beyond her slim torso. They looked unbelievably round and full. \n\nAfter about ten more minutes of kneading and pushing, Tony backed off to rest. He sat lightly on his knees, touching her calves with his thighs as he did so.\n\n\"Do you want me to do your legs too?\" Tony asked quietly.\n\n\"God yes,\" Ms. Miller moaned, still in obvious enjoyment of his work.\n\n\"But your pants...\" Tony trailed off. He didn't want to push the issue.\n\nShe paused for a moment, and then said, \"You want to take off my pants? Isn't that a bit too much, Tony? We are just friends after all.\"\n\n\"Well, I know your legs must be burning up after our run. I was just thinking about how sore they must feel.\"\n\nMs. Miller thought about this, and then said, \"Could you take them off for me? I don't want to move.\"\n\nSo Tony leaned forward and reached into Ms. Miller's waistband. He slowly pulled down her striped pajama pants.\n\nMs. Miller was wearing pink cotton panties, with little red kiss marks dotting them. They were cut in a triangle in the back, and were tied by little string laces to her hips. Her ass looked amazing, perfect. It rose in a dramatic curve from her hips. It was astonishingly rounded; Tony salivated just looking at it.\n\nHis calculus teacher was now lying in front of him completely naked except for her panties. He was so close to her that her perfect, heart-shaped ass looked huge to him. Her smooth, endlessly long legs stretched out invitingly to him.\n\nAppreciatively, Tony ran one hand along the curve of her ass, starting from the waist, rising up in a smooth crest to its highest point, and then quickly dropping to where her butt connected to her thighs. Ms. Miller moaned but didn't make any effort to move.\n\nAlthough he had had fucked her before, even from behind, there was a long stretch where Tony didn't know if he'd ever enjoy his teacher's body again. That made him hungry.\n\nHe worked slowly and deliberately to massage her legs, first one thigh, and then the other. He kneaded her large calves one by one, using his elbow in trouble areas.\n\nHe'd fantasized about doing just what was doing now, rubbing her long silky legs again. He worked his way back up her body, working past her knees and thighs.\n\nFor a long time now, he'd thought about seizing this moment. He longed desperately to push their encounter further.\n\nSo Tony leaned down, very close to his teacher's ass, and deliberately touched his nose to the area deep between her legs. It was covered with underwear, but Tony could still feel her pubic hair. He took a very deliberate sniff.\n\nMs. Miller had frozen when Tony had first touched his face to her innermost area. She waited until the sniff was done, then sat up and protested, \"Control yourself Tony! That was so naughty!\"\n\n\"I'm very naughty, teacher. So naughty. It won't happen again,\" Tony said breathlessly. He moved off of her legs and sat on his knees facing her. He hoped that she would initiate the sexual encounter he so desired.\n\nMs. Miller would not take the bait. Instead, still holding the blanket to her chest, she turned halfway off the bed and looked at him.\n\nThe blanket covering her chest was grey cotton and had hanging fringes on its edge. Her left hand was delicately holding it in place while her right arm cradled her head. Her left leg was curled on top of her, highlighting the lovely curve of her ass and legs.\n\nTo his relief, she had a slight smile on her face. A long silence stretched between them. Tony wondered what his teacher was thinking.\n\n\"I should get dressed,\" Ms. Miller said finally, breaking the silence between them.\n\nTony was secretly thrilled that he had gotten to touch her crotch and to smell her womanhood. Ms. Miller didn't seem upset or angry. But she also didn't seem like she was going to escalate their encounter.\n\nHe leaned forward and slowly stroked her bare arm with his hand. She didn't pull away, and they both watched his hand as it moved up and down her skin.\n\n\"Unless you can control yourself, Tony. We are just friends, after all,\" Ms. Miller said quietly.\n\nShe lay down again on the bed in front of him.\n\nHe continued to work on her back, relishing the feel of her smooth skin on his palms. He continued to knead her large calves and tight thighs. Now he worked his way up to her ass, and continued his work. He began rubbing her panty-sheathed ass, enjoying the feel of her silky underwear. The kiss marks on her panties danced as her ass jiggled with his motions.\n\n\"Ms. Miller?\" Tony said. \"Now your panties are getting in the way.\"\n\nMs. Miller sighed, and then said, \"Just don't stop, Tony. Do anything you want.\"\n\nTony leaned forward, and then hooked one finger on each side of her panties. She raised her hips slightly to accommodate him. He slid her panties down her hips, then past her long legs entirely. Finally, he dropped them on the ground, off the bed.\n\nNow she was completely nude. Tony massaged his teacher's ass with abandon, rubbing first one delicious globe, and then the other. Now he pushed the two perfect buttocks together, delighting in the sight and feel of mashing his teacher's ass with his hands.\n\nMs. Miller just sighed and continued to encourage him. \"That feels so good, Tony.\"\n\nTony moved himself on top of her again, straddling the backs of her thighs and knees. He was dressed in only a towel, and it quickly became undone. Tony tossed it off the bed as well.\n\nNow he was totally naked on top of his teacher, who was also nude. She didn't seem to notice, and continued groaning in appreciation as he rubbed his hands all over her body.\n\nLeaning forward, Tony pretended to focus on closely massaging her upper back again. But he was really positioning himself, and his semi-erect cock fell directly between her thighs, resting lightly between her ass cheeks.\n\nTony continued rubbing his teacher, wondering how long she would let him do this. As he began to work her, his penis continued to get more and more erect, until now it was full and hard. Now he was intentionally rubbing her erect cock back and forth over her ass!\n\nHe leaned forward over her and rubbed her ribcage and her chest. He inched his hands closer and closer to her large, firm breasts, still mashed beneath her.\n\nHe began to stroke the sides of her breasts gently, relishing the feeling of her warm smooth warm skin on his hands.\n\nTony could see Ms. Miller begin to breathe harder and harder, and noticed her hands begin to grip her bed sheets.\n\nMs. Miller eased herself up, raising her chest off the bed slightly and allowing him more access to her breasts. Now Tony filled each palm with them, continuing to rub them more and more intensely. He began to tweak her full nipples through his fingers. He was now thrusting his cock up and down the crack of her ass.\n\nMs. Miller groaned, and Tony said, \"Could I just have one kiss, Ms. Miller? One kiss for old times' sake.\"\n\n\"Just one, Tony. She turned her face to one side, and raised herself fully on her elbows. Tony, now resting his full weight on her back, eagerly pushed himself forward to kiss her hot mouth. \n\nHer tongue snaked out into his mouth, probing it and rubbing his teeth. His tongue began to wrestle with hers, pushing forward and back.\n\nHis full weight sprawled on her back, with his cock now sandwiched entirely between her ass cheeks. To his delight, she was pushing back against him slightly, her ass pressing rhythmically into his crotch.\n\nThey continued to kiss for a moment, with him on her back. He could feel her grow increasingly excited as they continued to french kiss, with both of them naked.\n\nShe pulled her mouth away, and rested her head on her forearms. Tony pulled away a little, shifting his weight off of her.\n\nStill under him, Ms. Miller said seriously, \"Tony. I want you to know that I am glad that we are friends again.\"\n\nTony replied, \"I am so glad too. We are definitely good friends.\"\n\nTony shifted his weight so he was lying below his teacher's naked body. She parted her legs and he sat between the \"V\" between her thighs. Very slowly and deliberately, he let the tip of his hard cock rub over her pussy lips. The dark blond hairs were wet with her moisture.\n\nFeeling him probe her, Ms. Miller groaned out, \"Tony, what are you doing?\"\n\n\"You're just so beautiful, Ms. Miller. I just can't help it,\" Tony said. Holding his shaft in his hand, he rubbed it up and down her wet bottom.\n\nThey continued like that for a minute, Tony flicking her in her innermost place with the head of his cock.\n\n\"You really think so, Tony? You really think I'm beautiful?\" she asked innocently.\n\n\"Yes, Ms. Miller. You are the hottest woman I have ever met, and I have never wanted anything more than to fuck you senseless,\" Tony replied.\n\nThen Ms. Miller very deliberately lifted herself to her hands and knees. She looked over her shoulder, her eyes heavily lidded under her thick eyelashes. Her lustrous hair draped down, framing her elegant face.\n\n\"Then I want you to fuck me doggy style.\"\n\nTony stood up on his knees. He situated himself directly behind her. He could see her golden, heart-shaped ass. It was perfect.\n\nHe put his hands on her hips, steadying her and allowing him to aim his cock. He lined up his cock at her cunt. Its dark blond hairs were already wet from her own desire.\n\nThis time, Tony knew a little more about sex. He pushed gently with his cock until he felt her pussy lips separate, accepting the helmet of his organ. Then he thrust into her. He could feel his shaft slide deeper in under her ass flesh, deeper into her pussy, until it was completely buried by her luscious hole.\n\nShe was as hot and tight as when he had fucked her before. The sensations were heightened by the sight of her naked back and delicious ass in front of him. \n\nMs. Miller gripped the sheets while he took her from behind. Tony paused his fucking to lean over her body and kiss her. She was taller than him, so he had to plant little kisses on her back and shoulders. Her damp hair still smelled of shampoo.\n\nMs. Miller was making little sighs and moans of pleasure. She looked back over her shoulder and said, \"God I missed this, Tony. You're so amazing.\"\n\nIn amazement, Tony said, \"You're the amazing one, Ms. Miller. I love being so close to your tight ass.\"\n\n\"Say it again, Tony. Say that you like my body again.\"\n\nHe rubbed her hourglass shaped body with his hands, delighting in her broad hips and narrow waist.\n\nTony said, \"Your body is awesome, Ms. Miller. Right now I'm rubbing your body. It's so sexy and curvy. Ungh!\" Pleased, she pushed back at him. He could feel her cunt flex and squeeze his cock like a vise.\n\n\"And I love your hips. Your waist is so narrow. Ungh! Ungh!\"\n\nHe leaned over again and began to roughly paw at her tits, hanging like ripe cantaloupes beneath her.\n\n\"Your tits! God! Fucking your tits was the best moment of my life! Can we study together again?\" He panted.\n\n\"Yes, my student. We can study together again whenever you want.\"\n\nTony slid his cock halfway out of her. With each stroke, her pussy lips would resist him, almost trying to pull him back. Then he would push forward again, sliding into her slick depths easily. He pulled her hips back with each stroke, slamming her rear with his thighs and crotch. She pushed back at him with her ass, making each stroke a little harder and deeper than the one before.\n\nThey were increasing in intensity as they picked up the pace. The sound of their thighs slapping together began to ring throughout her bedroom.\n\nSuddenly, Ms. Miller climaxed, her vagina spasming around his cock as she cried out in pleasure. She collapsed until she lay sprawled face first on the bed.\n\nHe pulled his cock out of her pussy. The head of his penis came out slowly, as if reluctant to give up her tight canal.",
        "Tony hadn't cum yet, and wanted more. He wondered how far he could push this.\n\nShe lay in front of him, face to the side and panting slightly from their exertion.\n\nTony sat on his haunches behind her. Her legs were still spread to accommodate him.\n\nHe took one of his hands and put it at the top of her beautiful ass. He slowly worked his way down to her sphincter, a crinkly brown star between her ass cheeks. He could feel her tense up, considering this new development.\n\nAfter she didn't object, he leaned forward and planting his face in her ass, licked her right in the asshole. She had just taken a shower, so it was clean. When she moaned and pushed back at him, he stuck his tongue and traced the rim of it.\n\n\"I don't know Tony. I don't know if I can do it again,\" she said.\n\n\"Please, Ms. Miller. Just a little bit. Please. I love your ass so much.\" He continued to lavish attention on your ass, licking her lush ass. From up close, he could see the small goose bumps forming on the smooth skin of her rear.\n\n\"I've never done that before, Tony. You'll have to teach me what to do,\" she said softly. She began to prop herself up again on her hands and knees. Her ass once again swayed seductively in the air.\n\nTony pushed his stiff cock until it was lined up directly between her butt cheeks. It bobbed as he moved forward between her legs again. The head stopped right at her anus.\n\n\"Are you going to fuck me in the ass, Tony? Are you going to fuck your poor teacher in the ass?\" she whispered at him.\n\nHis cock was still shining from her wetness. He held its shaft so that its tip stayed steady on the unblinking eye of his target. She began sighing again and pushed back against him. The motion allowed the wet head of his cock to penetrate her asshole.\n\nInch by inch, Tony pushed his cock deeper into his teacher's ass. He could see his length begin to disappear into her perfect behind. Her anal sphincter squeeze him as he worked, intensifying the sensation.\n\nHe reached one finger around her hips and ran it along her pussy lips. He could tell Ms. Miller was gritting her teeth and trying to relax, helping him violate her.\n\n\"Oh Tony. Your cock feels so good in there. Like it was made to be home.\"\n\nWhen he was about half way in, he paused. He didn't feel like he could push in any more because it was just too tight.\n\nHe began easing it out again. It was still incredibly tight, and the feeling of friction on his dick was amazing. Amazingly, Ms. Miller began to murmur her protest, saying that she wanted him back in her ass.\n\nBefore he left her entirely, he began pushing forward again. It was hotter and tighter than he believed possible!\n\nThe second time, he managed to push himself all the way in. His cock was planted deep in her luscious, perfectly formed ass. Her ass was like a vise, gripping his penis tightly with its hot depths. He groaned with pleasure and whispered his thanks to his teacher.\n\nHolding on tightly to her narrow waist and hips, he sawed into her again. His orgasm was building quickly. Her head was turned over her shoulder, and he could see her face locked in a mask of pleasure and pain.\n\nShe was crying out, and Tony thought he was hurting her, but she would push back at him with the same rhythm he was using. \"Oh Tony! Fuck me! Fuck your teacher in the ass!\"\n\nPausing, he used his hands to rub her gorgeous back and shoulders. His hands found their way to her hanging breasts again. He kneaded them, first gently, and then more roughly as he found that she liked it.\n\n\"You're so gorgeous like this, baby. You're so hot and I can't believe I'm fucking you.\"\n\nShe began to grind her ass against his hips, working his cock around inside herself while her perfect ass rubbed against her thighs.\n\n\"Fuck me, Tony! Just keep fucking your poor teacher!!! Fuck me in the ass!\"\n\nMs. Miller orgasmed loudly, screaming out and biting her sheets. He climaxed inside her ass, spasming his semen directly into her rectum. He collapsed on top of her, his twitching dick still locked into her anus."
    ],
    "authorname": "edstevens94301",
    "tags": [
        "teacher",
        "student",
        "anal",
        "forbidden",
        "jogging",
        "doggy style",
        "touching",
        "massage",
        "tease",
        "busty"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/my-teacher-ms-miller-ch-07"
}