{
    "title": "Normal Ch. 13-15",
    "pages": [
        "Chapter 13 \n\nI managed to catch Amanda before she went home and got her dressed. Normally just the thought of her walking around with no pants on, my seed running down her leg, would have gotten me hard. Excited. But today, barely a twinge. My thoughts were consumed with what had happened earlier. The physical sensations had been intense, but it was the situation that got to me. The feeling of being dominated, that other side of what I'd done to Amanda and Nancy. And the fact that Ms. Miller was smaller, weaker than me, somehow made it... better. More kinky. I was the one with the super power, but she had me in the palm of her hand, and I knew it. And I knew that she knew it, and it made me both afraid and even more aroused. \n\nLater that night, I was laying in bed, halfheartedly trying to study. I knew I was likely going to fail all my classes at this point - I just wasn't motivated enough to work at classes when I had the ability to do other things at will. But I went through the motions, even though I was constantly being distracted. I'd be halfway through an essay on what \"good\" means and the next thing I knew I was masturbating to the feel of Amanda's pussy working my cock with Ms. Miller's fingers buried in my pussy. And during that I felt it. That pressure that's not really a pressure in my head, that my power was active - pushing someone past their boundaries. It confused me - I mean, no one was around. But I guessed that maybe I'd made too much noise, and it had been required to keep my parents or sister from getting worried. So I put it out of my mind. \n\n* * * \n\nI stood outside Ms. Miller's class, waiting for the bell to ring. And fidgeted. The dress that had given me such confidence last week felt like the thinnest of armors today. I was practically naked, at her command. I wanted to walk away, to call it off, to stop our affair. Maybe I could be happy with just Amanda. But my stiff cock and wet panties told me I was going to walk in the door and do whatever Ms. Miller told me to do. \n\nFinally, the bell rang and her first period class filed out, their faces passing me in a blur. I think a few said hi, but I ignored them. And finally there was no one left to help me procrastinate. I closed my eyes, to prepare myself for walking into this, when I heard an amused, \"ahem.\" My eyes shot open, startled, and Oh. My. God. \n\nIt's the middle of December and she's wearing a short, short skirt, hose and high heels. Definitely not proper teacher attire. A blouse that covered enough, but looked like it might be transparent if the light was right. Her nipples poking through it told me she wasn't wearing a bra. And she'd spent some time on her makeup - it wasn't the proper makeup, the \"look nice, but not nice nice\" kind of bullshit that most professional women have to deal with. It was date makeup. She looked like a $1,000/hour hooker. Well, ok, I'm a high school student. I don't know what actual hookers look like. But she could have played one on TV. \n\nHer eyes took me in, and I couldn't breathe. Couldn't look away. She said only one word - \"Good\" - and then turned, beckoning me with a finger. I followed her in with my heart in my throat. I hadn't expected the outfit, and was finding it hard to think with her ass swaying from side to side in front of me. She led me to the chair behind her desk, and I got my second shock as my eyes wandered over it. There were tiny cuffs on each of the arms - they didn't look very strong, so I wasn't sure what they were for - but what blew me away was the dildo standing straight up the middle. It wasn't extremely large, maybe a little smaller than I was, but just the sight of it drew a small sound from my throat. I felt shame burst over me at how I was reacting, but I couldn't help it. \n\nShe turned and looked at me again, and I could see her responding to my desire. The lust in her eyes reflecting my own. \"God Sally,\" she breathed, stepping right up to me, \"You're such a fucking sexy slut.\" And then she kissed me. Deeply, aggressively, and I melted into her, letting her take control, the situation and the kick of being called a slut making me helpless before her. At the end I felt even more dazed, and more horny. She stepped back and held out her hand. \"Panties.\" A one worded demand, and I meekly complied. The freedom I'd felt last week when I was like this was completely gone - I was entirely at her mercy. I put them in her hand, and she stepped forward and felt me up. I groaned and tried to push into her hand, almost read to cum, but she pulled back. Smiled at me. \"Just making sure you're ready. Take a seat.\" And a nod at the chair, the dildo standing proud, as I watched her lick my nectar off her fingers. The makeup smeared across her face from our kiss would have normally made her look ridiculous, but to me she'd never seemed more commanding. \n\nMy legs felt like jelly, but I walked over to the chair. The dildo was attached with some sort of strap system, and it looked a lot bigger from here than before. But I knew what she wanted. I turned around and eased myself down, until I felt the head of it brush my clit. A little further, to line up the head. And then I started pushing down and the dildo filled me, spread me. But I was wet enough that there was no resistance, and I moaned as it filled me up, feeling incredibly big. I wanted to go slow but my legs were shaking, so I hurried it, and finally, finally I felt the chair beneath my ass, and I let myself collapse down. I felt undone, my legs trembling, on the edge of orgasm. And then Ms. Miller reached down and grabbed my cock, pulling it out from under my dress. And stroked it, gently, softly. \"Cum for me, Sally.\" Her eyes drilled into mine. \"Cum for me.\" And I did. \n\nMy pussy felt like a vise around the dildo, squeezing and releasing it in waves. And my cock was spurting, the build up of two days taking over as load after load shot out. And all through it Ms. Miller's hand, stroking, and directing. I realized dimly that she had pulled a cup from somewhere, that she was collecting my spunk in it as I came and came and came. But finally it was over. I sat back in the chair with my eyes closed and tried to recover, to regain something, any control. But my breath was ragged, and my pussy still twitching occasionally around the dildo buried in it. \n\nI heard her walk a few steps back to her desk, and the clink as she set the cup down. Then she walked back, and I felt her pull my arm up onto the arm of the chair, and gently attach the cuff. I opened my eyes and watched her do the other one. I felt... remote. Like I was just an observer, watching her do whatever she wanted to do to me. She cupped my chin, and forced me to meet her eyes. \"Sally.\" \n\nI swallowed. \"Y-yes.\" My words came out breathy. Desperate. Aroused. \n\nShe smiled. \"I was wondering if you could still talk. We're going to play a game, Sally. I made you cum just now because it wouldn't be fair otherwise.\" Her other hand reached down lightly to grip my length, and I jumped slightly from the contact. \"I'm glad you're still hard. I thought you would be, but it saves some time.\" Her hand slipped away, and I tried to follow it. A mistake - the feel of the dildo sliding out of me caught me, and I sank back down onto it with a groan. Her smile deepened. \"There are two ways you can lose, Sally. The first is if you break these,\" and her hand circled the cuffs around my wrists. \"They're not very strong, so don't move too much. And the other way you can lose,\" and her hand came back down and trailed down my cock, making it twitch, \"is if you cum before the hour is up.\" I bit down on my lip to keep from making more noise. \n\nI considered the game. I thought... no. I knew I could win. The dildo felt good, sure. But I could stay still for that long, since I'd just had relief. But... \"What,\" I asked cautiously, \"are we playing for?\" \n\nHer grin turned wicked. \"Everything.\" \n\n* * * \n\nI watched, detached, as her class came in and sat down. I was naked from the waist down in front of them, cock hard and a dildo in my pussy, but it didn't seem to matter. The only important thing was to control myself. To get the upper hand on Ms. Miller again. She got up in front and talked, and I realized that it was a presentation day. And then the end of it: \"... Sally will be my assistant today. Oh, and one other thing. Sally was kind enough to make a donation for us.\" She walked over and held up the glass of my cum. \"Any girls who get up and present will need to take a drink of this before they start.\" And I watched as they smiled and nodded because, of course. Totally normal to drink the teacher's assistant's spunk out of a glass before you talk in front of your classmates, since it's Sally. \n\nIt was a nice try, I thought, but not enough. I could feel myself getting hard at the thought of them drinking my essence unwittingly, but I could master it. I could stop it. I felt my determination solidify. I would do this. I would get control back, and I would take Ms. Miller in ways she'd never been taken before. She walked over to her desk and called the first person up - a girl, of course - and then turned her back on me. I smirked - if she was trying to make me lose control, she'd picked the wrong end to tease me with - but I slowly felt my smile fade. The situation felt... familiar. Me in a chair.. her in front of me. Like... oh. Oh, no. Our first time. My mouth was suddenly dry. Ms. Miller turned her head to look at me, and her smile was angelic innocence as she sat back onto my lap. And no, she wasn't wearing panties. \n\nUnfair, I thought, as her lower lips enveloped the head of my cock. Totally, 100% unfair in every single way. I held myself absolutely rigid as she slowly, oh so gently, descended onto me. She was just as tight as the first time, and it seemed to take forever as she sank onto my length. But eventually her ass touched my hips, and I was buried in her for the second time. And god, it was amazing. I'd forgotten how good she felt, how tight and wet. I knew I'd lost. As soon as she moved, she'd have me. So I waited. And waited. Until I realized that she wasn't going to give me the easy way out. \n\nThe first girl ended with obligatory applause, and then Ms. Miller, slowly, oh so slowly, stood up. Sliding smoothly up and off of my cock. I barely held it together, trying to think of anything else, but I couldn't help my gasp as I finally slipped out of her. She called the next name - Amanda's friend Tina - and then came back. God help me. She timed it so I entered her just as Tina took a drink of my cum, and I honestly can't tell you how I kept from cumming right then and there. And then down, slowly again, relentless, until she was back in my lap, my entire length in her. I don't think I've ever been as hard as I was that day. \n\nI held out until the end of the third presentation. I'm not sure how. I thought about everything else - anything else. I tried baseball. D&amp;D 4th Edition rules. Old people. Wars, murders. But nothing worked. And my heart wasn't really in it. I wanted to surrender to her. I wanted Ms. Miller to take me, to make me hers. I could hear her say that \"Everything\", and I was ready to give it up. To let her have control. \n\nAnd part of me thought it might be better this way. Safer. Easier to have Ms. Miller in control. I was dangerous, I changed people. I'd taken Amanda's life and made a child with her. I was a bad person, a weak person. But if Ms. Miller controlled me, if she made the decisions, I wouldn't have to worry about that. We'd just have lots of sex, and satisfy her kinks, and everything would work out. \n\nMy orgasm caught me when she was standing up to announce the 4th presenter. She slid up, and her pussy squeezed the head of my cock, and it was too much. I was coming. I ripped my arms out of the cuffs and grabbed her hips, pulling her down and myself up, burying myself in her as I blew my load. I heard her soft cry of pain from the violence of my penetration, but I didn't care. And then the dildo sliding out set off my pussy and that was coming as well. I was caught, torn apart between the two, as I ground into myself and Ms. Miller and tried to cum and oh god oh god oh god. And a part of me knew I had lost control in front of 20 of my classmates, and reveled in the shame of it. \n\nEventually, finally, it was over. I felt limp all over. Ms. Miller stood up, and I was glad that her legs were unsteady too. I couldn't remember enough to know if she'd come, though. \n\nShe ignored me the rest of the class, and I just sat there. I felt... relaxed. The weight of not making more decisions about sex was a giant load off of my shoulders, and I just watched the rest of it contentedly. A tiny part of me deep inside liked watching her walk around with my cum dripping down her leg, ruining her hose, but most of me knew who had really done the owning here. \n\nFinally, it was over, and, and everyone left. I watched Ms. Miller stalk over to me, and I knew I was her prey. She put one finger to my lips, and I sucked it reflexively. Her tone was reflective. \"You seem to have lost, Sally. In both ways.\" \n\nI nodded, letting her finger slip from my mouth. Having her stand over me like this was starting to get me aroused again, my pussy tingling and my cock rising up from between my legs. \"Yes. You won, Judy.\" I swallowed hard. \"You won... me.\" \n\nShe nodded. Then got in the chair, kneeling on either side of me. It was a tight fit, but she was just small enough to make it work. She sat back, pussy just touching my cock, making me want to push up into her. But something told me to hold back. \"If that's the case, Sally, then I think we need to change one thing.\" My breath was hard and fast as she reached down and causally groped one of my breasts, and I moaned and twisted. \"I think if I won you, you should call me Ms. Miller, and not Judy.\" She stopped moving but left her hand where it was, waiting on my answer. \n\nI licked my lips. \"Y-yes. Yes, Ms. Miller.\" And she rewarded me with another grope. \n\nShe smiled down at me, then sunk another inch of my cock into her, making sure I couldn't get away. \"Good girl. Now make me cum as many times as you can. And be gentle this time.\" \n\nI got to work. \n\nChapter 14 \n\nMs. Miller left me limp and exhausted, totally spent, with an envelope on my chest and a dildo up my cunt. \n\nI was full of vying emotions. I felt sexy. I felt embarrassed. I felt used. Simultaneously abused, and loved, and very, very confused. But the biggest emotion, the central one that I kept coming back to, was overwhelming relief. I didn't have to try anymore. I hadn't realized how much my power was weighing on me until I had the option of giving it up. I didn't have to decide anymore that it was better to abuse Amanda than to risk raping one of my classmates. I didn't have to worry about my morals slowly slipping away until I found myself taking and fucking on a whim, because I felt like it, with no regards to consequences or feelings. So on top of that relief, I felt grateful to Ms. Miller for taking those decisions away from me. All I had to do was give up my sexual freedom, but that wasn't so bad. I enjoyed it, didn't I? I mean, I didn't like all of it, but I deserved it after what I put Nancy and Amanda through. This was my penance, and it would work out best for everyone. \n\nThat's what I was thinking. I'm telling you this so you understand why I rationalized things away. Why I ignored the fact that I hadn't seen Amanda at all that Friday. Why I decided that I'd just been making too much noise over the weekend when I felt my power activate - that pressure - four distinct times. Because I'm a goddamn fool. \n\n* * * \n\nThe envelope had contained directions, a room number, and a time. So at 5 PM Christmas eve I walked into the fanciest hotel in town, made my way to the honeymoon suite, and knocked with a trembling hand. Ms. Miller opened the door, smiled and kissed me, and swept me inside. And then she pushed me up against the wall and worked my cock and my pussy right to the edge as I clutched at her from the sudden assault. My vision went dark, and all I could think about were the hands working my crotch. And then right as I was about to cum, they... stopped. I protested inarticulately, and Ms. Miller just gave that angelic smile. \"Is something wrong, Sally?\" Her tone held just a hint of a dangerous edge to it. \n\nI gained control with difficulty. Smiled back. \"N-no. No, J- Ms. Miller. It's fine.\" She studied me for a moment, then nodded, turned, and walked into the bedroom. It was obvious that I was supposed to follow her, so I did. \n\nBy this time I'd recovered enough to realize what the game was. So I didn't protest when she put me in a sheer dress that left nothing to the imagination. I nodded when she showed me the first vibrating bulb, and put it gently, lovingly, into my pussy. And I thanked her when she told me to, for attaching the other one to my cock. \n\nDinner was room service. It came in three different courses, and I was required to answer the door and take it in each time. The human mind is a weird place. I have a superpower. I know that the bellhop (or whatever the hell they're called) didn't actually care that I was practically naked, or that I was literally dripping on the floor. They might enjoy the show, but they wouldn't call the police or think I was crazy, or a slut. But I still felt the shame each time, and it was sharper because I knew I had done exactly this with Amanda. \n\nOther than that, I don't remember much about that dinner. Ms. Miller chatted about inconsequential things. Stories, family, about going to college. I smiled, and asked questions, and nodded in the right places, but my attention was on the goddamn vibrators that wouldn't. Let. Me. Cum. They would build up, and I would get so fucking close... and then they'd die off. And a few seconds later they'd start over. And each time, Ms. Miller smiled knowingly. \n\nI made it through dinner, but then I broke. I begged her to make me cum, to do anything, just to give me relief. And I knew I was walking into the trap she'd left for me, but I didn't care. Nothing could be worse than this. \n\nI cried as the vibrators backed me off from the edge again, and she circled behind me. Her breath was hot on my neck. \"You want to cum, Sally?\" And I writhed, shuddering just from the feel of her breath. \n\n\"Yes.\" I whispered it, like a prayer. \"Please, yes. Oh, god. I'll do anything.\" \n\nI could hear her smile in her voice. \"I'm not the god, Sally. But what I want to know,\" and she slid her hands up the side of my breasts, maddeningly close, inches from my nipples, \"if you're begging me, if you'll do anything to cum, \" and they moved up and hovered over my tits, \"then what does that make you?\" I hesitated, unsure which answer would get her hands on my tits so I could cum the fastest. But it was rhetorical. \"I think,\" and her hands were circling my nipples and fuck I want to cum and god I'm close, \"that makes you my bitch. Doesn't it?\" \n\nAnd of course it fucking would, if it would let me cum. So I screamed it, and she slid the vibrators to max and her hands grabbed me and came and came and came. It never seemed to end, pleasure so intense and sharp that it's almost pain, and I begged her, pleaded with her to stop and let me stop. And finally, eventually, the vibrators turned off and she let me down, caressing me gently, telling me how beautiful, how perfect I am. A goddess. Her goddess. And her bitch. \n\nI felt numb. Detached. I simply reacted to whatever she did. We go to the shower, and we clean up. And of course, at some point I found myself on my knees, and I brought her with my mouth over and over until she let me stop. She led me back to bed, and curled up against me, with me lying on my back. \"Good night, Sally\" she whispered. \"Sleep. I have a surprise for you tomorrow.\" And at some point I drifted off. ",
        "I dreamed of a pressure that's not a pressure in my head. \n\n* * * \n\nI woke up with my head cleared, and wondered what I was thinking yesterday. Was this really what I wanted? I mean, don't get me wrong. Getting my pussy and cock played with simultaneously is awesome, and incredibly intense. But on a regular basis it's almost too much, and Ms. Miller has an obsessive fetish for it. And the talk... being her bitch? Was she going to make me display myself every time, to strangers? On the one hand... yes, I made Amanda do it. But I stopped. And the past three times with Ms. Miller... well. Let's just say I was worried about the trend I thought I was seeing. \n\nOn the hand, I thought as I felt her mount me and slide down onto my cock, if I get wake-up sex every day, maybe it will be worth it. Her pussy felt amazing, nestled around me, and somehow different. Not as tight as normal. And, actually, she was heavier. And her pubic hair was shorter, and... \n\nMy eyes shot open. I had never seen the woman riding me before in my life. She had just taken my full length sheathed in her, and she had her eyes closed and her mouth open as she gave a little sigh of pleasure. She opened her eyes, and they were... wrong. I'd seen that look before. In churches. She looked at me worshipfully, then started rolling her hips. She moaned. \"Oh, Goddess, your rod feels so good.\" And I mean, I like to think I'm pretty good in bed at this point. I know how to fuck, how to make my partner feel pleasure. But I was lying there, I wasn't using my hands at all or even moving, and she was acting like my dick was giving her the best orgasm of her life. She reached her hands up and grabbed her tits, then started really moving, bouncing up and down. \"Oh, Goddess. Take me! Fill me!\" And then her cunt clamped down on me as she came, hard and long. \n\nShe was attractive. Brunette, white, young, in shape, and her tits were really nice. But for the first time in my life, I was staring at them without feeling lust. Because the tattoo across her breasts, which I could just make out as she bounced on top of me, filled me with horror. It was short and simple: \n\nSally's Breeding Slut #2 \n\nAnd then, of course, Ms. Miller's voice to tie everything together: \"Merry Christmas, Sally. I hope you like her.\" \n\nChapter 15 \n\nI think my original reaction, back when all this started, sums it up the best: \n\nWhat. The. Fuck. \n\nI turned my head to look at Ms. Miller, and got the second shock of the morning. Because of course she hadn't just stopped at one. Two woman - one at each side of her, kneeling, looking at me adoringly (I say woman, but the one on the left looked disturbingly like jailbait). I could just make out the #3 and the top of the #5 across their breasts. One with her tongue buried in Ms. Miller's pussy, eating her out. And - yes, a fourth. Behind Ms. Miller, face buried in her ass, going at it with apparent enthusiasm. I took a moment to wonder if she'd bothered cleaning up first, then put it out of my mind. I took a deep breath and tried to order my thoughts. And asked Ms. Miller, as calmly as I could, what was going on. I think it came out something like: \"What the - what the hell is this?! Who are they? And what the fuck is up with the tattoos?!\" \n\nMs. Miller reached out and caressed the heads of the two on each side, and they leaned into her touch, and transferred those gazes from me to her. My skin crawled. She'd turned them into... pets. And... oh. Oh fuck. She'd used me to do it. Pressure in my head. Last week, this weekend, and the memory of a dream. \"Ms. Miller\", I whispered, horrorstruck. \"Judy. What did you do?\" \n\nShe smiled at me and strode to the bed. And then without warning, leaned down and kissed me. And it was a kiss filled with passion, with love, which made everything else even harder to understand. I struggled a bit, but I couldn't help but get turned on, and I heard #2 moan and start riding me again as I reacted to Ms. Miller's kiss. Ms. Miller broke it off, still smiling down to me, and she was beaming at me, like I'd done a particularly good trick. \"Sally, my Sally. You don't know yet, but you'll understand. You're a goddess, Sally. A real, honest, worthy, goddess. All I have to do is tell them about you, what you can do, and will do to them, and they were eager to serve you. To serve us.\" Idly, one of her hands came down and circled my tit. And squeezed, making me cry out. \"And therefore\" she whispered, \"because you belong to me, Sally. My goddess. That means they all belong to me too.\" \n\nIt was hard to think, with #2 bouncing on my cock and Ms. Miller playing with my breasts. But... no. Numbers were bad. Inhumanizing, they made it easier to accept this, to just go along. \"Names.\" I made it as much of a demand as I could. \"Tell me their names. Please.\" I added, when she looked like she was getting angry at me. \n\nMs. Miller looked at me, but finally shrugged. \"I don't see why it matters - they're just for us to use as we see fit, Sally.\" She indicated the woman riding me. \"This is Carly. She was just a bartender, but she has a magnificent rack, don't you think? She was the first one... I was having a drink, and I told her about us, you know? How good it was, Sally. How perfect. And she said she wished she had something in her life like that, and well. One thing led to another. That's why she's the first to get the gift of your seed.\" There was something wrong with that - wasn't she #2? - but my attention was dragged to the next. The girl on the left - #3. \"This is Kaley. I used to teach her last year, and once I realized what our purpose was, I remembered her. She's wonderful, isn't she?\" And then the next, the woman who had been eating her out, #4. \"Miriam here is one of your neighbors - I was going to go to your house a week ago, but I chickened out, and she came out to see what was wrong. She's married, of course, but her husband can't have kids. But you, Sally. You can give her your gift. I knew it was meant to be.\" And then #5. I caught the name - Jenny - but the rest faded away, because I was staring past them. At the girl who'd been happily, enthusiastically eating out Ms. Miller's asshole. Amanda. \n\nMs. Miller caught where I was looking. \"Of course. I saved her for last, Sally. She's the alpha. But I knew you'd be happy I included her.\" She went over and pulled Amanda up, caressing her belly. \"I saw your purpose, Sally. When you were having sex with her. All of them, Sally, they all want to be yours. To take your seed. And as soon as I explained it to them, it's all they wanted.\" She nodded at Miriam. \"Even her husband understood, once I told them what you were. It's not natural Sally. Don't you see? You are a goddess of fertility and love. It's the only explanation.\" Her face twisted slightly, fleetingly showing something ugly. Jealously? She turned back to me. \"I thought it was me, of course. I told them what I wanted, and what we did together, and I got Carly in bed... and it was glorious. But it was all you in the end, Sally. I had to tell them about you to make it work.\" She came back to the bed. My breath felt short in my chest - it was too much. Everything that was happening was overwhelming. Her hand caressed my cheek. \"That's when I knew I had to have you, Sally. To make me mine. You're a goddess, but you're weak. Flawed. Let me guide you, Sally.\" Her eyes boring into mine, filled with passion and love. And... control. \"And the entire world, all the beautiful vessels for your seed. It will all be ours to use and play with.\" \n\nI couldn't think. But... no. No. I have to think. I can't just let this go. My vision of myself with no morals had been brought to life early, somehow embodied in Ms. Miller. I had to try something. I forced myself to ignore the physical sensations - to think past Carly riding me, or Ms. Miller back to playing with my tits. \"Ms. Miller... Judy... you can't do this. Think about it. They have lives. They're people, not just toys for me to knock up.\" I stared at her face, and saw only blank confusion. I tried again. \"Don't you... don't you think this is wrong? They have families, people who love them...\" I trailed off. Ms. Miller patted my head. \"I know you don't understand yet, Sally, but you'll see. Nothing we do here can be bad. You know that. You told me so.\" My turn to stare in confusion. But... fuck. Fuck. That first, damnable day. The words ran through my mind. \n\nYou can't get in trouble for having sex for me. And it won't be a bad thing.  \n\nAnd it all came crashing down on me. This was my fault. I had thought I'd turned off Ms. Miller's inhibitions, and I had. But I'd also warped her moral compass. I'd let her justify anything as long as it involved, even remotely, sex with me. And so my power had led her down this road, to sluts - slaves - as Christmas day presents, to girls with numbers whose purpose in life was to give me babies. And she had no way to stop. I'd had trouble with my power, but I knew what was going on, and I'd been able to pull back from the edge. But Ms. Miller didn't know that, didn't realize what was happening. She couldn't think of this as wrong, because I'd told her it wasn't. And at some point she'd discovered what I'd found out with Nancy, that with the proper phrases I - and her, with references to me - could turn people into puppets. I wasn't sure where the mythology had come from, but she was an English teacher, and at some point she must have made a connection and decided that all of this was divine purpose. Because she couldn't see it as anything else. \n\nI struggled, trying to get out from under Carly. I had to fix this. I had to explain to them, to tell them that no, they were people, they weren't just things for my use. To tell Ms. Miller that right vs wrong still applied, that I'd been mistaken before, to somehow undo everything that had happened. I pleaded with Ms. Miller, I tried to tell her, but she just stared at me, and I realized I wasn't using the right words, the right phrasing. I paused to think, and that was a mistake. \"Sluts.\" Ms. Miller's voice was all steel command. \"Your goddess is feeling unsure. Make her feel good, show her devotion, that this is the right path.\" And then she kissed me, cutting me off as I tried to make them stop, and they descended on me. \n\nSome supers get a physical boost, but I was all mental. It was six against one, and I just wasn't strong enough. They were everywhere - lips and fingers, hands and mouths, caressing and sucking me all over, and I shuddered and writhed under their assault. Words flowed out of my mind, and I was left with only sensation and pleasure. But I kept struggling to think. I'd lost why I needed to struggle, but I knew I had to, so kept trying to work past it, to focus through the bodies and sensations that enveloped me. \n\nBut it was too much. And I finally felt myself come, my cock spurting inside of Carly, who cried rapturously and thanked me feverishly for impregnating her. And Ms. Miller stopped kissing me to give orders, and so I watched Kaley take her place, sinking herself deep onto me, and she thanked me for the gift of my rod in her as she started moving up and down. And it all started again. And my brain said, Nancy. \n\nI'm not sure what about Kaley reminded me of her. Something with the shape of the face, and the nose. But it lodged in my mind and stuck, even as Ms. Miller descended to kiss me again, and I struggled to make sluggish thoughts move, to understand why Nancy was important. But it was hard to form thoughts, so I sunk into memory. I remembered that first day in the bathroom, with Nancy casually handling my cock. I remembered the classroom, my first blowjob, the very first step of my descent into this madness. And I remembered the second blowjob, where I had taken control and told Nancy how to please me. I remembered what I had to do. \n\nI couldn't speak, couldn't form words, with Ms. Miller devouring my mouth. So I waited it out. I surrendered to their attentions, their lusts, and let myself come in Kaley's pussy, possibly knocking up my second girl of the day. It's funny - if Ms. Miller hadn't been tormenting me the past weeks, I wouldn't have been able to do it. But she'd taught me enough control that I could keep a hold of myself now, even through all six of them pleasuring me. And when Ms. Miller raised her lips from mine to switch things up, I was ready. \"Ms. Miller\" I breathed, trying to put devotion into my words. \"Ms. Miller, I understand now. I know what I have to do.\" I poured sincerity into my words. I needed to buy time, for her to believe me. \n\nShe paused and looked down at me, and I saw her accept what I was doing. Cradled my head in her hands. \"Oh Sally!\" And kissed me again, but this time thankfully it was short. \"I'm so glad you understand, that you can see your purpose here.\" \n\nI nodded, and tried to look properly reverential. \"I do, Ms. Miller. More than ever, I understand. And we can continue - we should continue - but first, can I just say something to show my love for you all?\" I pleaded with my eyes, and she smiled and said of course. \n\nI closed my eyes. I thought of all the times I'd used my power, and the best way to word this. And I started to speak. \n\n* * * \n\nSo as I watched Miriam Haywood walk to her husband with my seed dripping down her leg, I thought back to that Christmas almost six months ago. The first few moments were rough - I was scared Ms. Miller would realize what was going on and stop me - but eventually I got control, and I had them obeying my orders. And then I set out to undo what Ms. Miller had done. \n\nI didn't fully succeed. I'm not sure why I couldn't fix them entirely, but it seemed like they wouldn't accept me totally contradicting anything Ms. Miller had told them previously, so I couldn't just wipe out her conditioning. But I could change things, adjust them to be better. It took two days, but I got most of it. I'm still their goddess, but they can live their lives now instead of being entirely devoted to me. I check in on them, and occasionally stalk them, and I'm hopeful - I haven't seen any crazy behavior, or felt the not-pressure in my head that would tell me they're starting to use my power on others. And I managed to convince them, after hours and hours of argument, that being my breeding sluts only means I have to knock them up once. \n\nCarly and Kaley (and thank god, she'd turned 18 that November - she just looks super young) were the first, and both got pregnant almost immediately. They're both showing pretty good now, and they go to maternity classes together. Jenny, who turned out to be Ms. Miller's therapist, called me a month ago to let me know that I finally succeeded. She was celebrating with her boyfriend, and I heard him express relief that now he could finally stop using condoms. \n\nMrs. Haywood - Miriam - is the last holdout, but I'm hopeful. I checked, and she can have kids - it's only Mr. Haywood that's firing blanks - so I think it's just a matter of time. But I want to get as much of this over with as possible, so I'm usually over there every day before school to try and knock her up. \n\nAmanda popped a week ago. A little early, but I was told it's not that abnormal and there was no danger. They thought it was a boy from the ultrasounds, but little Judy is a girl with a cock, just like me. And if I'm a bit ambivalent about the name, and absolutely terrified that she might inherit my power, I still find myself going sappy whenever I see her in Amanda's arms. I spend most of my time over there arguing with Amanda, though. She insists that since she was pregnant before she became one of my breeding sluts, that little Judy doesn't count and I owe her another kid. And despite my best efforts I haven't been able to convince her otherwise. She has me penciled in for a couple of weeks from now, when she says she'll be fully recovered (literally penciled in, on her calender, with little hearts around my name. It's simultaneously cute, disgusting, and arousing). \n\nSo I suppose that only leaves Ms. Miller. \n\n* * * \n\nAfter servicing Mrs. Haywood, I walked back to my room. Judy met me at the door wearing her birthday suit and nothing else, looking at me with need and lust in her eyes. \n\nOut of all the woman, I feel the worst about Judy. She had done horrible things, but only because I'd remade her. The rest, I could mostly fix. I have to knock them up each once, and they'll have that tattoo for the rest of their lives, but other than that they can have a relatively normal life. Do I feel bad? Sure. But I can mostly decide that it's ok, that in the end something bad happened to them but they can get past it. \n\nBut Judy was broken differently, directly by me, and I couldn't fix her. I pleaded with her, ordered her to know right from wrong. I ranted and raved, trying to convince her to change, to be... normal again. I tried everything I could think of. And she would just look at me, and smile. Or say, \"Goddess, there is no such thing as right or wrong. There's only you.\" And eventually I despaired, and did the only thing I could think of. I broke her again. \n\nI wonder, sometimes, what would have happened if I was smarter. If maybe I could have fixed all of them, if I could have avoided this. And in my darker moments, I wonder if maybe I am smarter, but I didn't want to fix them. I can't deny that on some level, I like all of this. I love all of this, having them for breeding, to use at my pleasure. And they like it too - even though I convinced them that I only need to get them pregnant once, they've all told me flat out that they'd like me to keep going. The whole situation just flat out does it for me. And that possibility, that I did this on purpose, keeps me up at night. \n\nSo Judy is #6. I had to make it so she can't speak or write at all - she's simply too dangerous, with no morals and my power at her fingertips. I'm debating forbidding sign language as well. Of course that leaves her pretty much helpless - she can't hold down a job - so she's living with me. I've made her into a toy, and I can't trust anyone else not to abuse her - I feel guilty as hell, and I still can't resist her, so how could I trust someone else not to do worse? \n\nShe can't talk, but she's good at nonverbals, and my cock rose as I saw her in the doorway, her need pouring off of her. I took her to my bed, gently, and made love to her, because I know that the only thing I can give her now is pleasure. And afterwards, as she lay limp and exhausted, curled in my arms, I thought. About control, and superpowers, and minds. About good and evil. Where did my actions lie? Was what I was doing really the right choice? Shouldn't I find someone else to care for Judy? I had destroyed her as a person, made her into a toy for sex and pregnancy, and now I made it worse by fucking her whenever she - or I - got horny? \n\nBut deep in my heart, I knew I had no other choice. I'd seen the result when I passed the buck. I'd given Judy control in a naive attempt to stop all of this, and she'd damaged and almost destroyed four lives. And if I hadn't stopped her, she would have done far worse. My power was my responsibility. No matter how much it hurt, no matter the guilt, I had to step up. I had to take and keep control, to watch my words, control my desires and actions to avoid damaging more people. And if Judy was the price of that lesson, then so be it. I would keep her close, and she would be my reminder, my touchstone, a life taken and destroyed with two careless sentences. And I would do what I could to make her feel loved, and comfortable, and happy. \n\nSo I curled myself around her and held her tight. One of my hands ended up on her belly, and she grabbed it and pressed it into her. She's just starting to swell."
    ],
    "authorname": "Fot1234",
    "tags": [
        "futanari",
        "futa/female",
        "blowjob",
        "pregnant",
        "public"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/normal-ch-13-15"
}