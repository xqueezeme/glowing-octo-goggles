{
    "title": "While You Sleep",
    "pages": [
        "Hi Folks. This is another longer story. It is an LW story in that there is a wife cheating on her husband as the backbone of the story. But there is also much mote going on here. So those of you who just want the usual strange car in the driveway story might want to pass on this one. Those of you want the whole thing to be resolved in three pages also might want to keep it moving. Those of you who have a pacifistic nature might not like this story. Those of you who want a burn the bitch story might be a little upset because there are no bitches getting burned here. There is also not a reconciliation so those of you who want to see the couple get back together no matter what will probably have your feelings hurt. For the three people that are still here, I hope you like this one. It's a bit long so sit back and enjoy it. This one is an action movie. To get you in the mood you might want to listen to Charlie Sexton's version of \"While you sleep.\" It was originally written by Steve Earle who never recorded it. I'm trying to get Kat into 80's music. Thanks as usual to Mikothebaby for everything. She's like a combo sister/best friend. She does so much more than just edits, she keeps me grounded and sane. SS06\n\n* * * * * *\n\nAs I shut down my Mustang's engine, I let out a heavy sigh. I actually hated coming here. The irony of that statement wasn't lost on me, since there was a time when to me, this place, not Disney World, was the happiest place on Earth. Looking at the small grouping of detached apartments, it's hard to imagine that there was a time when all of them were well-maintained and looked nearly new. Even stranger is the fact that the current state of disarray and disrepair has occurred over a period of less than three years.\n\nThe unit I'm parked in front of is pretty bad, but the one I'm going to is far worse. I couldn't actually get my car in front of that one because there are several cars in various states of repair parked in front of it, in the driveway and there's even a truck on the lawn.\n\nActually, you can't really call it a lawn when there's no actual grass. I think there's a law somewhere that says that. I also think it's pretty specific. There have to be at least ten or twelve blades of actual grass present for an area to be called a lawn. An uneven, rough trod collection of dirt, mud and weeds with a dead pickup truck thrown in for decoration is not legally a lawn.\n\nWhen I lived here, I was proud of my lawn. It was watered every other day and cut every weekend. My neighbors and I traded lawn care tips and always tried to one up each other in having the coolest garden equipment. Now the place looks like no one lives here. Only the thumping from the loud, raucous music coming from inside gives any indication that people actually live in the unit. The peeling paint and sagging wooden steps, help to reinforce the impression of the place being unoccupied.\n\nThe screen door swings freely in the wind. There is no screen in the door, nor is there any glass. In fact the only thing keeping the door anchored to the building is the one lone loose hinge near the top. The opposite corner on the bottom of the door seems to be planted into the rotting wood of the porch. It acts as a type of pivot and every time the wind blows the door seems to noisily swing. It's that lone, tortured hinge making the noise apparently. The corner of the door also scrapes further into the porch with every breeze.\n\nI wonder what it would look like if I were to come back in in two years. Would the wind and the constant movement finally rip the hinge from the wall and let the door simply fall off? Or would the constant scraping simply dig the door deeper and deeper into the porch until it couldn't move?\n\nI often wonder why none of the neighborhood's scavengers don't simply come up onto the porch in the middle of the night or the day for that matter and simply steal the door and take it to the scrapyard.\n\nAs I close the door of the Mustang, that solid, \"thunk,\" sound as the door closes draws attention. I have no illusions that my car's security system would be a match for any of the neighborhood's cadre of professional car thieves. But if my car has drawn attention, I use that scrutiny for my own benefit. I let my black trench coat slide open until my gun is visible. I also make a show of pulling my piece as if I'm checking it over before confronting someone inside of the unit I'm visiting.\n\nMy movements suggest that I'm an undercover cop on an investigation. I walk around behind the car and open its tiny trunk. I pull out a giant stuffed animal. It isn't just any teddy bear or unicorn. It's a giant stuffed skunk. The skunk is kind of an inside joke between my daughter and I. Ever since I took her to see that movie \"Over the hedge,\" when she was three years old, my daughter has loved skunks. I know that she'll love this one as well.\n\nI step gingerly on the shitty wood of the porch expecting at any second for the rotted boards to give way under my weight. But they hold and I knock on the door hard and wait. After a few moments when no one has answered, I try the knob and it turns and opens.\n\nThe scene in front of me looks like something out of Caligula. Inside the room the noise of the country music station pouring out of the cheap stereo at ear splitting volume is countered by the sounds of loud moans and groans. Three naked men are all pumping one small chubby woman. All of them are covered in sweat and the woman's screams are the loudest in the room.\n\n\"Ohh...Baby...harder...fuck me...fuck me,\" she screams, oblivious to everything else going on around her. In one corner, a guy is smoking weed or a mixture of marijuana and God knows what else. I'm not interested in him. I'm more interested in the would-be porn star on the couch. She's flat on her back with her thin legs flailing in the air while a large greasy looking guy rams his dick in her ass. She alternately moans and then plunges another guy's dick down her throat. The third guy is currently rubbing his dick against one of her large breasts and pumping his hips in time with Lynrd Skynrd's \"Sweet home Alabama.\"\n\nTwo other guys appear to be playing cards in the kitchenette unit in the next room. I wonder what happened to the stove we had when I lived here. One of the guys is wearing a suit and a good one. He seems to be the only guy in the room who's noticed that I'm here.\n\nI drop the skunk and draw my piece. I don't go for the gun though. I drew my iPhone. I snapped off several still photos concentrating on Danielle's face and a few shots of the entire scene then I switch to video and march past the scene through the house talking as I go. I walk, video-taping the entire scene to a door on the second floor. I open the door and video tape my sleeping eight year old daughter.\n\nI close the door behind me and start to pack some of her clothes into a small suitcase in her closet. Just as I get as many clothes as I can fit into the suitcase the phone rang.\n\n\"Hammond,\" I said, answering it.\n\n\"Rick,\" says my boss, Jeremy Clarkson, the agent in charge. \"I've got an assignment for you. Your plane leaves for DC in an hour.\"\n\n\"On my way,\" I said ending the call. I storm back down the stairs and nothing in the room seems to be any different.\n\nI kick the plug out of the wall and the stereo ceases abruptly. \"God damn it Danielle,\" I yell. \"Rina is upstairs asleep while you're holding an orgy with all of these fucking losers. I was about to take her out of here but my boss called me. I have another assignment, but when I get back...\"\n\nThe sound of the gun clicking silenced me immediately. I should have known it would be the guy in the suit.\n\n\"Who are you?\" he asked. He and the guy he was playing cards with are completely different from all of the other guys there. For one thing they're the only guys who are dressed. For another, neither of them is drunk or high. And the fact that they're both holding guns isn't lost on me either.\n\n\"He's my husband,\" said Danielle. \"Don't worry about him...Oh I forgot who you are. You should worry about him...\"\n\n\"Shut up bitch,\" said the guy in the suit. \"Donnie, shut your bitch up.\"\n\nI figured that the Donnie he was referring to had to be Donnie Simmons. He was Danielle's latest boyfriend. His father was Big Al Simmons. He owned and operated a chain of appliance stores throughout the Midwest. I could see that over the next five to ten years the big chains like Best Buy, and Good Guys Inc would slowly squeeze them out of the market. The online vendors like Amazon would also cut into his profits if he didn't find some way to either diversify or move into a different business. But for now, Big Al's Appliances was at least a regional powerhouse.\n\nDonnie, of course, had very little to do with the actual management of the stores. He saw himself as a business genius who simply hadn't been given a chance. His dad had given him some kind of titled position in the organization that really sounded far more important than it was. Donnie probably figured that when his dad died, he'd run the stores the way he wanted. But anyone with half a brain could see that by the time Big Al died, there probably wouldn't be much left.\n\nDonnie was about six feet tall and fat as hell with lips that looked too big to be a man's. Apparently, Donnie was a sharing individual because he was allowing his friends to fuck Danielle too.\n\n\"Oh shit, boss,\" said the guy next to the man in the suit. \"He's got a piece and there's metal next to it. I think it's a badge.\"\n\n\"You a cop?\" asked the guy holding the gun on me. He began to lower his gun.\n\n\"Not exactly,\" I said. \"But I do have a gun.\" I held my hands up and slid my coat open. Before they even saw my badge and ID my gun and holster told them what they wanted to know.\n\n\"Look at the holster rig and the hardware,\" the second guy said. \"He's a fed.\"\n\nI nodded. \"I'm not here for a job,\" I said. \"I came because I had my daughter yesterday for a visit and she saw this in the window of a toy store. The store was closed last night so I went back and got it today. My only interest here is getting her away from here.\"\n\n\"I can see why any father would want his child out of here,\" said the man in the suit. \"I assume that is why you took pictures of your wife in action.\" I nodded. She's been blocking and delaying our divorce for almost three years. I finally have evidence that should get not only my divorce but custody as well.\"\n\n\"That's why you didn't take pictures of my associate and I,\" said the man in the suit nodding his head. \"We're only here because Mr. Simmons is a possible business associate and THIS was what he considers entertainment. Five or six guys fucking one chubby slut...No offense meant.\"\n\n\"None taken,\" I said.\n\n\"Sorry about the guns. We carry a lot of cash sometimes for our business dealings. We both have CCW permits for the guns and...\"\n\n\"I believe you,\" I said. \"As I said I'm not interested in you or your associate...Or even those guys for that matter. I just want my daughter out of this cesspool.\"\n\n\"We'll be leaving then,\" he said. \"Good luck with your divorce.\" He and his associate backed out of the room and out of the house. I wondered where they'd parked since I was certain that they'd have decent cars and I didn't see any parked in front of the building.\n\n\"What are you doing here Richard?\" screamed Danielle. As I looked at her it was hard to believe she was the same woman. Three years ago when we'd separated, it had broken my heart. Eight years years before that, when we'd gotten married, I'd been over the moon and couldn't believe that a woman that beautiful was mine.\n\nNow as I looked at her sagging tits, bulbous beer belly and thin yet flabby legs, it was hard to reconcile the picture of her in my mind with the screaming, sweating, stinking creature shrieking at me. When I met her, it was just after she'd won the title of Miss Michigan. I'd been sure that she'd go on to become the next Miss America and use that to springboard into some kind of movie or television career.\n\nAny guy who saw her back then instantly fell in love with her. I did and I fell hard. The funniest thing was that she fell just as hard for me. I thought we had it all.\n\n\"No one gave you permission to come inside of my house,\" she screeched. \"Donnie, call the police. No, just throw him out!\"\n\nAs Donnie moved towards me the other naked guys got up too. Being smaller than Donnie, I guess he expected me to be intimidated by his bulk. Nothing could have been further from the truth. Donnie was even stupider than I'd given him credit for. Attacking another man while you're naked is simply stupid. Donnie raised his big flabby arms as if he was going to grab me in a bear hug. I stomped down on his instep and broke his foot. Then I delivered a short chopping punch to Donnie's throat. I pulled the punch to avoid killing him and the pain in his foot was forgotten as he struggled to breathe.\n\nMy next move was as clich\u00e9d as it was un-necessary. Donnie was already out of commission and his friends after seeing how quickly I'd taken Donnie out of it had begun to retreat as swiftly as they could. There was no need for what I did, but I did it anyway.\n\nI kicked Donnie in the clock-weights as hard as I could and left him a slobbering wheezing pile of goo on the floor.\n\nI'm not a cruel man. I'm not a sadist. But I am a man. And the shrieking, flabby pile of trailer trash that Donnie was publicly fucking and sharing with his friends had once been my woman and legally, she was still my wife. That's why I did it. There is something primal about seeing another man fuck your woman. Something deep inside of us just wants to destroy or remove the offending organ much in the way that sperm cells destroy other men's semen. That is my only excuse for kicking Donnie in the nuts when he was already out of it.\n\nAs to why I stepped on Donnie's hand and then stepped onto his chest and then back down onto his other arm as I confronted Danielle, yep that part was probably over-kill. I wanted to show Danielle that her new man meant absolutely nothing to me.\n\nOn the floor behind me, Donnie just lay there wheezing, struggling to even take in enough oxygen to complain about his broken foot or his aching balls. His friends quickly gathered their clothes and beat feet out of there leaving Donnie where he lay.\n\n\"Danielle,\" I said calmly. \"In the first place, I have every right to be here since I'm the one paying for this hovel. In the second place, the court gave me unlimited visitation rights as long as I am current on my child support. You have no legal recourse or reason to block me from entering the premises to see my child which was my only intention here today. I don't care what you do Danielle or whom you FUCK, since I wouldn't touch you with a syphilitic donkey's dick. You can have gang bangs on the lawn or...I guess you'd have to call it a sty now...if you want to and as long as it doesn't affect my daughter, I wouldn't care. I will be using the pictures I took today to try to get custody away from you, as soon as I get back though. Maybe we can finally get this God damned divorce over with and you can set up shop on the street corner of your choice.\"\n\nShe was seething as she looked at me.\n\n\"All you're going to get is out of a fucking job and thrown in jail,\" she hissed. \"You broke in here and attacked poor Donnie.\"\n\nI turned around and quickly took pictures of the two remaining guys as they tried to scamper away. \"Hold it right there,\" I said. They both froze.\n\n\"I have both of your pictures. It will be a simple matter for me to run these pictures through the facial recognition software...\" I just walked over to the first guy and took his wallet. The second guy just handed me his.\n\nI quickly took pictures of their driver's licenses and returned them to them.\n\n\"Are we going to jail?\" asked the first one. \"I...I...used to have a card for that weed. I got the glaucoma and...\"\n\n\"Just save it,\" I said. \"I probably won't need your testimony and I don't care about the weed. If you do get called into court all you have to say is what really happened. I started trying to talk to Danielle and she tried to sic her fat assed boyfriend on me. Of course, you won't have to testify because Danielle may have done the world's greatest magic trick...\"\n\nThey were looking at me curiously.\n\n\"What magic trick officer?\" asked the second guy. \"I was a little bit high so I might have missed it.\"\n\n\"She took a beautiful woman and turned her into a sloppy, fat, whore,\" I said. \"Anyway Danielle isn't stupid. She's just flapping her lips to try to scare me. Even if I didn't have the right to be in here, which, I do. The door was open I just turned the knob and walked right in. So she doesn't have a case. She told Donnie to throw me out. Donnie moved towards me and I defended myself against a larger, heavier, greasier attacker. When you add to that the fact that I'm a federal agent; both Donnie and Danielle would be the ones in jail. She isn't THAT stupid. Have a good day.\"\n\nI turned back to Danielle who was fuming so hard that her entire face had turned red and she was clenching her fists.\n\n\"Maybe if you stick another dick up your ass, you can let some of that steam out and your blood pressure will go down,\" I smirked at Danielle.\n\n\"Your video won't do much in court,\" she said. \"The way the laws work in this country all that will happen is that they'll wonder why you're allowing your daughter to live like this and take even more money from you. Donnie's father is thinking of opening a few stores out of state. If you push this, or try to use that video, I'll move Katrina and myself out of state with him and you'll have a hard time ever seeing her.\"\n\n\"I'll be gone for a while,\" I said. \"I have an assignment out of town to handle. And we'll finish discussing this then.\"\n\n\"You do know that's the reason I cheated on you,\" she said. \"You were always leaving town for assignments. I got lonely. And after a while of that...\"\n\n\"Save it for Oprah,\" I said and I left.\n\n* * * * * *\n\nDanielle\n\nAs Donnie struggled to get up, I looked at him seriously. He kept coughing and grabbing both his throat and his nuts. All he could get out were gurgling sounds. I sat down on the couch. There was a time when I'd never let Rick sit on the couch if he'd just come back from a run. When we first moved here, I'd worked my ass off to make everything about the place look nice. I'd picked out this very same furniture as if the world depended on it being stylish and opulent, and now just look at it. Shit, just look at me.\n\nI'm only two years older than Rick, at thirty, but I look like I'm pushing forty. Rick on the other hand still has that same boyish charm and looks younger than his twenty eight years. If you asked him he'd probably say that it's due to all of the workouts he has to do to stay fit for his job, but I think there's more to it than that. I think it's the lack of guilt and the fact that Rick is a fucking boy scout. I don't think Rick has ever done a bad thing in his life.\n\nI don't see myself as a bad person. I'm just human. I make mistakes just like everyone else and I made a few during my life and during my marriage. The problem is that both Rick and his job put me under constant scrutiny.\n\nThose idiots don't realize it but Rick is not a cop. Rick is also not an agent specifically. Rick works for the secret service. He isn't one of those guys who are assigned to protect the president. He doesn't have that type of seniority. But he is well thought of and is probably on the fast track to becoming one. What Rick does is he goes to places that the president or a senator or some other dignitary may soon visit and makes sure that the area around where the visit will occur is secure. He scouts routes for them to travel from place to place and arranges it so that every possible area of attack is covered or barricaded.",
        "He and his team scout and cover areas where snipers could hit their targets from. It's a nearly impossible job but they do it to the best of their ability. No American president has ever been seriously injured on foreign soil. Most of the assassination attempts happened in US cities. So that says something about the job they do. It also says something about Rick.\n\nHe has this instinct for when something isn't right. He also tends to put all of his energy and concentration into one thing at a time. He has this sort of tunnel vision that allows him to block out everything except the prize. I guess that's how he got me, but it's also what led to our downfall.\n\nLet me backtrack. My name is Danielle Mitner. I guess it's Danielle Hammond right now, since I'm still married to Rick legally. That, \"legally,\" is a word that I hate.\n\nAnyway, as I've mentioned before, I'm thirty years old and I wasn't always like this. All throughout high school and college, I was a cheerleader and I had a really nice body. There were all kinds of guys hitting on me all the time. I didn't settle for any of them though, because I'd decided at a very early age that I had to wait for someone special. I wanted a man who was going to amount to something.\n\nOkay, I wasn't a whore. When I say amount to something I meant a man who was going to have high standards and provide for his family. We didn't necessarily have to be rich, but my husband had to love me and our kids and provide at least a comfortable life for us. I didn't think that was too much to ask for.\n\nAs pretty as I was, I could have just married one of those cheesy old rich guys who were always sniffing around me after football games. Right now I haven't convinced you yet have I? As you're listening to me, your mind is still saying whore, right?\n\nWell, let me put it into context for you. When you look at me nine years ago you'd see Miss Michigan, a beauty pageant winner who had the chance to go on to become Miss America. You saw a beautiful twenty one year old girl with the world on a string.\n\nWhat you wouldn't see and probably never heard about was the fact that the beautiful girl grew up in a fucking trailer park as one of six kids. My parents never got married and one day my mother got tired of it all and just left.\n\nAt the time I guess I couldn't blame her, we never had very much of anything. The only thing we had was each other and we didn't really have that. We couldn't stand the shit out of each other. My mother and father constantly argued about everything. They argued about not having any money and any time they got some they argued about what to do with it.\n\nWhen you put that with the fact that both of my parents had roving eyes, things start to come into focus. My dad would fuck anything he saw, but then so would my mother. The difference was that my dad was good at covering his tracks. My mother was just a whore. Thinking back on it, more than one of their arguments started out with, \"So what, I gave him some pussy.\"\n\nIt was after one of those arguments that my mother disappeared. We were too young to really understand what had happened and they didn't tell us the whole story at first. They'd had their argument about my dad finding out that my mom had slept with some guy and at the time I didn't know anything about sex. I thought that sleeping with someone; literally meant sleeping with them. So I really didn't understand what the fuss was about.\n\nSo after the argument, my mother stormed out of the trailer. Apparently, she went walking down the road and several people saw her get into a car with another man. She never came back. I do remember my dad crying his eyes out for about three days straight after she was gone. That was also when things went from bad to worse because he just stopped going to work. Whatever it was had just drained the life out of my father and he was never the same. In my own mind, I decided that he shouldn't have gotten so angry about her sleeping with people.\n\nWe ended up being evicted. All of the kids were separated and sent to live with different family members on both sides of the family. What I didn't realize was that not all of us had the same fathers. My sister Claudia, whom I'd always thought was beautiful and was the only one of my siblings that I really loved, wasn't taken by my grandfather who'd taken me. When I begged him to take Claudia too, he just shook his head.\n\n\"Grandpa, she doesn't take up much space and I'll share my food with her,\" I cried. \"She's my sister. She's my best sister.\"\n\n\"Hush up girl,\" he'd said. \"You can call her your sister if you want. But she ain't my granddaughter. There's no way I'm taking some black guy's kid home with me. My son was stupid for putting up with your mother's whoring.\"\n\nThe break-up of my family colored a lot of my thoughts and opinions throughout my life. I decided that when I did get married, I'd never sleep with anyone except my husband and that I would never try to raise my family in a trailer.\n\nUntil I was old enough to realize what she'd done, I never blamed any of it on my mother. I put everything on my father's shoulders. I always thought that someday she'd be back for us and she'd find all of her children scattered all over wherever we were and we'd all get back together. I thought that my daddy would find us too and he'd forgive mommy and we'd be happy again.\n\nThat fantasy was like armor for me. I wrapped myself in it as I grew older. I held onto that fantasy until I found out the truth when I was about sixteen. I had a cousin who knew the whole story and she told me during a visit.\n\nGrandpa didn't take me to see my daddy, because my daddy had died the year before. He'd died in the nuthouse my cousin had told me. Then she told me that my daddy had gone to the nuthouse because he'd checked out when he found out that my mother had been murdered. My father wasn't coming back to get us and neither was my mother.\n\nMy cousin even told me that the whole thing wasn't my daddy's fault, it was my mother's. After the last argument, my mother had gotten into a car with a strange man. She wanted to rub it in my daddy's face. But the man had, in my cousin's words, fucked her, then killed her and left her by the side of the road. They'd never caught him. My cousin said that was God's way of punishing her.\n\nI understood then what my daddy had been crying about and why he went crazy. Even though my mother had done what she'd done he loved her too much to try to live without her. Grandpa often said that my mother was a whore. But I told him later on that both of them had cheated. Grandpa just looked at me and shook his head. He told me that my dad had only started sleeping with other women after the third or fourth time that my mother did it. He figured that he's show her what it felt like. He told me that the real tragedy was that they got together too young and had nothing going for them. They had no jobs, no skills and no education. Even though they were never legally married they could never leave each other. It was like some weird Shakespearian tragedy.\n\nI decided then that I needed to go to college and any man that I married had to love me as much as my daddy loved my mother but he also had to have an education. So things started out well. I was beautiful and popular but I rarely dated because my standards were too high. It was in my second year of college that a group of people I knew brought a guy I'd never seen before around. He took one look at me and sparks flew between us.\n\nAs our friends talked about us, I could see disappointment in his eyes and he looked away from me. All kinds of things went through my mind. I found out that we were both from the state of Michigan and I thought that maybe the well-crafted lies that I told everyone about my background had been detected. I also thought that maybe once he'd discovered what I was that he was no longer interested. He probably thought I'd show up soon on an episode of Jerry Springer. He was as bright and shiny as a new penny and I was sure that he didn't want anything to do with me.\n\nHe even left the cafeteria and waited for my friends to take him back to the dorms outside. I had to find out why he looked so low, so I followed him.\n\n\"Your name is Richard isn't it?\" I asked him.\n\n\"Yep,\" he said looking down. I noticed then that he was bigger than me but he wasn't a huge guy. He was very muscular and he moved with a sort of masculine animalistic grace that just did something to me. \n\nIt sounds stupid but when I looked into his eyes I could see his soul. He wanted me badly but he didn't just want me for sex. He wanted all of me. He wanted my whole life.\n\n\"Why don't you like me?\" I asked. He looked at me with the stupidest expression on his face.\n\n\"Who said I don't like YOU?\" he asked. \"You're a beauty queen. You're going to be in the Miss America pageant and on TV. I just didn't think you'd want to waste your time on someone like me.\"\n\n\"But aren't you supposed to be a big time quarterback for the football team?\" I asked laughing.\n\n\"I guess,\" he said. \"But I don't even go to school here yet. I'm eighteen years old and still in high school. I'll start here in the fall. They're just taking me around and getting me used to the place. I guess it isn't too late for me to pick a different school.\"\n\n\"Why would you want to do that?\" I asked.\n\n\"Shit, I can play football at any school in the country,\" he said. \"I got a lot of offers, but I just don't think I'd like to be around here and have to watch you with other guys.\"\n\n\"So how do you know that it wouldn't be you here with me?\" I asked. \"Are you going to let the fact that I'm a few years older than you get in your way?\"\n\nThat was all it took. From that day we were joined at the hip. Rick was unlike any other man I'd ever known. He didn't ever lie to me. He rarely swore and he always treated me like I was a princess.\n\nHe was angrier than I was about what happened in the Miss America pageant. Everyone thought that I was a shoe in, except for some of those bitches I competed against. I looked great and I felt great. My first problem came when I had to do the world famous promenade of states. That's where all the contestants march across the stage and introduce themselves and tell which state they're from. You wear a costume that represents some of the great things about your home state.\n\nAs I was walking across the stage swinging my ass back and forth and just about to say, \"My name is Danielle Mitner and I'm from the great state of Michigan,\" the heel on both of my shoes broke and I fell on my ass. I tried to play it off by taking my shoes off and looking at them to show that I'd had a wardrobe malfunction but the camera had zoomed in on the next contestant. The only thing the audience remembered was me falling on my ass.\n\nI still managed to make it into the next round on my looks alone but any question about me being graceful was ruined. That fall alone had probably robbed me of the chance to be Miss America, but I kept going. I thought that I'd make up some points in the talent contest but there again, I met with disaster. I played the violin. Unfortunately someone had gotten backstage and loosed the tuning pegs on my violin. I later found out that they'd also super-glued the hairs on my bow together so it wouldn't vibrate the strings correctly either.\n\nMy violin solo sounded like a couple of cats in heat. I have to admit that I drew out emotions in the audience. Some of them cried because it sounded so awful, other laughed because the look on my face as I played was funny as hell.\n\nAfter the contest was over my coach took my shoes and my violin to the promoter of the contest to show what had been done to them. He just looked at her and smiled.\n\n\"Is this her first big contest?\" he asked. We nodded our heads thinking he was sympathetic.\n\n\"Okay,\" he said smiling. \"We'll just call everyone back and have a do-over.\" We looked at him in shock.\n\n\"Seriously?\" I asked.\n\n\"Of course not,\" he spat. \"Listen girlie. It's like those rap guys always say, \"Bitches be crazy. Next time you're in one of these things, keep an eye on all of your stuff. Every girl in these contests would do ANYTHING to win. So fucking your pretty little shoes up, or messing with your fiddle don't mean shit. The hardest part for me is keeping these whores from screwing the judges for more points. Now if you'll excuse me...\"\n\nBut I was still Rick's beauty queen and he proposed to me that night. He told me that he was sorry that I lost, but he was also glad that I lost. He'd be worried about me traveling all over the world during my reign and the two of us not seeing each other.\n\nThat was also the night that we first had sex and we never looked back from then. It must have been four months later that the wheels came off of our trip through Candy land. I discovered that I was pregnant. Rick was as happy as he could be. Of course, we got married immediately. There was no way that we could wait two more years for Rick to graduate. And as I got bigger and bigger my speaking engagements as a former beauty queen dried up.\n\nRick's family offered to help us, but Rick thought that we should take responsibility for what we'd done. He dropped out of school and kissed his chance at pro football goodbye for me and our baby. He decided to join the military because it would give him a salary and pay for college after his tour as well.\n\nWhile going through the tests for the army, Rick was contacted by a different branch of the government. Rick made a deal to start working for the secret service. They paid for the rest of his college classes and paid him a salary while he trained.\n\nWe immediately moved into our beautiful little detached apartment here and thought that we were on our way to greatness. The first few years were just that. They were great. But as the years wore on and Rick started being occasionally posted out of not only the state but the country, I started to resent it.\n\nTo me it seemed like Rick was advancing in his career and traveling all over the world. But I was stuck at home doing nothing. At the same time, some of it was my fault. Even after Katrina was old enough to go into daycare, I didn't work out or try to get myself back into shape. I'd gained some weight during the pregnancy and piled more on afterwards as well.\n\nRick was ecstatic with our life. He loved me, I can never say enough about that. During that time I felt more loved than any woman has a right to be. But he was just away so often. Rick was also the best father I know and he still is. We were talking about buying a house and having another baby. It was a great time until I fucked it up.\n\nMaybe I was more like my mother than I ever suspected, but I fell for a line from a really smooth operator in our neighborhood. Rick had been out of town for a week and I was very lonely. I invited him in for a cup of coffee after he'd volunteered to cut our grass. I gave him a cup of coffee and a piece of cake. Before he left he'd also had a piece of ass. I was so stupid.\n\nThe sex wasn't very good. If I'd been curious about what being with a man other than Rick was like, I knew then. On the physical side it was pretty much the same. On the emotional side it was very lacking. I told myself that I would never do it again. But I did. And I did it again after that. And Rick caught me. It was the same old story. He came home early and beat the shit out of the guy. I realized then exactly what Rick did for a living. He put the man in the hospital and wasn't even scratched himself.\n\nRick actually called the police and they took the guy to the hospital. The poor man went through a couple of surgeries and a long recovery just for trying to keep me from being lonely. I guess I knew what I'd done was wrong, but I didn't see the harm in it. \n\nThe man was no threat to my marriage. I didn't love him, I just fucked him. It was no more serious to me than if we'd just played cards. Rick didn't see it that way. We got into a huge argument while I tried to explain it to him.\n\n\"So I gave him some pussy, so what?\" I said. \"It's not like you were here to get it. It's not like you lost anything, Honey.\" On some levels I think I was glad that I'd gotten caught because it allowed me to push for what I really wanted. I wanted Rick to stop traveling and just take a desk job. In my mind he made enough money and I'd be happier if he was just home all of the time. I guess as much as I thought I knew my husband, I'd forgotten about how honest he was. Rick had never lied to me even when it was unpleasant to tell the truth. So I guess I should have considered the fact that he'd be a lot less likely to accept dishonesty from anyone else either.\n\n\"Danielle,\" he said to me and I couldn't for the life of me figure out why he was crying. Shit if the pussy meant that much to him, he could have some right then. \"That's where you got it wrong. I didn't lose ANYTHING. I lost EVERYTHING.\" He just left me standing there and went up to our room and started packing.\n\n\"You're an asshole,\" I screamed. I was glad that my daughter was still at daycare. \"You come home after being gone for a week. You beat a man senseless because he decided to comfort me when you couldn't. You get into a big argument with me and then before we've settled anything you go back out of town on another fucking assignment. When you get back, there will probably be another man here.\" I swear to God I didn't mean it. I was just angry. \n\n\"Wrong again, Danielle,\" he said calmly. I think his calmness pissed me off more than anything else. But he couldn't help that. A quarterback has to be calm and assess everything around him while large, quick, brutal men are trying to throw him to the ground. Rick was just being Rick.\n\n\"I'm not fucking wrong, \" I screamed. \"I can give this pussy to anyone I want. I always say it's yours but if you aren't here to use it, someone else can.\"\n\n\"You're right about that,\" he said. \"It was the other things that you were wrong about. You said that when I got back there'd be another man here. The first place that you were wrong is that you thought I was going on assignment; I'm not. I'm just leaving here. I won't live with a whore. And the second thing was that when I got back there'd be another man here. You were wrong there because I won't be back. I'll call you and we'll arrange for me to pick Rina up for my visits. We should probably both do the rest of our talking through lawyers. Goodbye Danielle. And congratulations, you wanted to hurt me and you did. You ripped my heart out through my throat and shit down the hole. I loved you so much and we had a good life, but I guess you deserved better.\" I was in shock at what he was saying. He was doing it all wrong.\n\n\"I just wanted you to know one thing though,\" he said. \"My life away from you isn't anything like what you think. You're bored here and you want to do things. I like having it that way for you and that's why I work so hard. I want you fat and bored and...SAFE. People outside of the country don't always like us very much despite how much money we give to help support other countries. In a lot of the places we go to, we get spit upon and called names and have rocks thrown at us or we get shot at. There are times when I have to hurt people just to make sure that my team or the people we're trying to protect aren't hurt. But I do that so we can have a nice life. If I'd stuck to playing football, I'd be safer and a hell of a lot richer.\"\n\nAfter that he was gone. I couldn't believe that I'd driven my husband away from me over some mediocre sex with a man who simply fucked me because he was as bored as I was. He also couldn't do the things he did to me to his wife. I'd realized a long time ago that I was no better than a prostitute to him. The only difference was that he'd have had to pay a hooker.",
        "I decided then to do whatever I could to get Rick back and make it up to him. None of it worked. He wouldn't speak to me unless it had something to do with Katrina. Rick filed for divorce and asked for joint custody. That was all he wanted. He agreed to split everything with me fifty/fifty and even pay me alimony for five years. He probably could have gotten away with two years.\n\nI fought the divorce and counter sued and delayed because the thing I wanted the most was to have him back. Every time I tried to speak to him and he refused, I took it as an insult against me and tried to hurt him right back.\n\nI already knew how to do that, it was simple. If I asked for a meeting or for him to come to dinner at the house and he begged off, I just had sex with someone in the neighborhood that knew him so it would get back to him. Over the first six months of our divorce it happened four or five times. I guess I wasn't smart enough to see the big picture. I didn't see that every time I did it, I became a bigger whore, and each time it hurt Rick less. It finally got to the point where he didn't care anymore. \n\nThe first year of our divorce saga ended with my lawyer forcing Rick into counseling. And of course, since he could only go when he was in town it took more than six months for the counseling. A round of arguments about the alimony and more out of town assignments ended the second year of our divorce drama. And then the bottom dropped out for me. Katrina came home all excited after a visit with her dad and told me about her new mommy. Rick had brought along a woman that he was dating on a trip to the zoo and I was devastated. It took weeks for me to actually get a glimpse of her.\n\nShe was everything that I never was, pretended to be or used to be. She was English so she had that accent that just sounded classy no matter what she was saying. She too had won several beauty contests back in her college days which weren't very long ago at that time and she still looked the part. In stark contrast to my short, dark hair, she had very long, very wavy, blond hair and bright blue eyes. When she got out of Rick's Mustang, I no longer wanted to meet her, I just wanted to stare at her. I wanted to twist her fucking head off and kill her but more than that, I wanted to be her. She was so pretty that it hurt my eyes to look at her. Shit, I wanted to be her so that my husband would love me again. She waited by the car while Rick came to the door to get Katrina.\n\nAfter that, I knew that he'd be gone soon. I made my demands in the divorce more outrageous to try to hold onto him. At the same time, I met Donnie and started dating him. I don't love Donnie but I need him. Donnie's family is rich. If Rick manages to divorce me, I'll need Donnie. The next few times that Rick picked Katrina up, I made sure to mention Donnie and apparently Rick never even noticed.\n\nI finally realized what a fool I'd been when I mentioned to Rick that since we were both in relationships maybe we should double date. He and his English friend and Donnie and I could all go out together. That was when I proved how big a fool I am. \n\n\"Are you happy with Donnie?\" he asked.\n\n\"Oh yes,\" I gushed, trying to twist the knife. \"He makes me feel more loved than any man I've ever known. And it's the best sex I've ever had.\" He winced a bit but he smiled.\n\n\"I'm glad you're happy,\" he said. \"I've always wanted you to be happy throughout all of this. Maybe we can get this divorce handled now so you can marry him.\"\n\n\"Are you happy with Anne?\" I asked. I was so shocked by his words that I could barely think. He'd said he wanted me to be happy and he hadn't been lying or sarcastic. He meant it.\n\n\"Why would I be happy with Anne?\" he asked. He was truly confused. \"We're not together. She's just a person I work with. Our allies often send their agents here to train. I was her training officer so there were times when I'd ask her along to go to the zoo or something just to be polite. There's no way I'd ever enter into a relationship with anyone when I'm not divorced from you yet, Danielle. I thought you knew me better than that.\"\n\nHe looked at me curiously. \"Did you really think that I was that kind of person?\" he asked. As he walked away with Katrina I ran up to my room and cried again. It seemed like all of my schemes and plans to try to hurt him only ever hurt me. And when all the water was boiled out of the pot, I never really wanted to hurt him in the first place. I just wanted him back.\n\n\"Water,\" the gurgled words sounded awful but they drew me out of my thoughts. I looked down at Donnie's flabby, obscene, naked body where he lay curled up on the floor. I got up and got him a cup of water. He sipped it and winced as it went down his throat painfully.\n\nHe tested his voice and was able to talk again albeit painfully.\n\n\"I need...doctor,\" he said. \"My balls hurt bad. I can't walk. My foot hurts really bad too.\"\n\nI snickered.\n\n\"What's so God damned funny?\" he asked.\n\n\"Before we got married, Rick used to play football. I think he was playing with you. Get it, foot and balls; football.\"\n\n\"I should have kicked his little ass,\" growled Donnie. \"The next time I see that asshole.\"\n\n\"Donnie, please,\" I said. \"Quit while you're behind. You tried to kick his ass and he played with you. You're bigger than he is and you weigh more. You were the one who jumped at him first and you had three of your friends here. The easiest thing for him to have done would have been to have shot you. He could have gotten away with it too. You attacked a federal agent. If he had shot you, they'd have thrown your ass in jail as soon as you recovered from the surgery. But don't worry about it, baby. You won. You tried to fight for your woman. You have me and if it's any consolation, I'm pretty sure he scuffed the shit out of his shoes when he kicked you in the balls.\"\n\n* * * * * *\n\nRick\n\nI got to the federal building downtown and parked my Mustang in the underground parking structure. I grabbed one of our shuttles that took me to the airport. I showed my badge and credentials and was on the plane with twenty minutes to spare.\n\nThe flight to DC was uneventful. I slept through most of it. I had no idea where my assignment would take me or how long I'd be away for. The one good thing about my separation and pending divorce was that I could freely concentrate on my career. I could accept any kind of assignment anywhere in the world because there was no longer anything to hold me back.\n\nMy boss, Jeremy Clarkson and another agent James May were waiting for me as I deplaned. Jeremy was smiling at me, which either meant he had some very good news for me or very bad news and he was glad that I had to do it and not him.\n\n\"Guess where, you're going?\" he said as soon as we were in the car.\n\n\"Iraq?\" I asked.\n\n\"Wrong area,\" he said.\n\n\"Canada?\" I asked.\n\n\"Pacmanistan,\" he said.\n\n\"Oh shit,\" I said. \"Isn't that the place where all of the sewers in Russian, Poland and Slovakia empty?\"\n\nHe just nodded his head. \"But at least you'll be there doing your dream job.\" He beamed.\n\n\"I'm going to be protecting the president?\" I gushed.\n\n\"Not exactly,\" he said. \"But it's something like that.\"\n\nBy that time, we were at the White House. Once inside, we went into a briefing room and the team consisting of ten agents; eight men and two women sat waiting to be briefed for their assignment. Jeremy went up to the podium and the First Lady walked into the room. She smiled at me and I immediately stood up. \"Mrs. Cameron,\" I said respectfully.\n\n\"Jeezus, Rick,\" she said, her soft southern drawl more pronounced away from the cameras.\n\n\"There's no need ta' be so formal. There aren't any reporters here. But I appreciate it just the same.\" She patted me on the shoulder and went up to speak to Jeremy.\n\nHe nodded several times and then shuffled his papers and started talking.\n\n\"Let's get this briefing started,\" he began. He pointed to the screen behind him and a map appeared there.\n\n\"This is the sovereign nation of Pacmanistan,\" he said. He started talking about the region and its three major cities. He also talked about the border it shared with several Eastern European countries.\n\n\"You will be in Pacmanistan for three days,\" he said. \"Your job is to protect...\"\n\n\"The president,\" gushed one of the older agents.\n\n\"Uhm...no,\" said Jeremy.\n\n\"The vice president,\" yelled another who was slightly less enthusiastic.\n\n\"No...\" said Jeremy.\n\n\"The Secretary of Sate?\" asked another agent.\n\n\"Nope...\" said Jeremy.\n\n\"The First Lady?\" asked one of the female agents.\n\n\"Uhm not exactly...\"said Jeremy.\n\n\"Then who?\" asked one of the agents in frustration. I think that we were all equally disappointed. As I looked around the room, I noticed that the demeanor of the agents present had changed since Jeremy stood up to begin the briefing. Most of the agents here were professionals. They would do the job they were assigned and would do it to the best of their abilities. But most of us were a little bit disappointed.\n\nThe room contained a mixture of agents with varying degrees of age and experience. Some were on their way up. Some of them, including myself, had never been on a protection detail before. Others had formerly been assigned to protect either the president or some other person. For some of them, they'd believed that they were taking another step upwards. Others realized that they were now taking a step in the other direction.\n\n\"You'll be assigned to protect Millicent Cameron,\" said Jeremy in a barely audible voice.\n\n\"Oh fuck, not Millie the Model,\" gushed one agent.\n\nThe change in Jeremy was instantaneous. His eyes snapped up and he addressed the guy who'd said it.\n\n\"Mr. Carlisle, you're off of the assignment,\" he snapped. \"In fact, you're suspended.\"\n\nCarlisle grabbed his brief case and stood up taking his belongings with him. He grumbled under his breath about how he'd rather be suspended.\n\n\"Is there anyone else here who'd rather not be on this assignment?\" Jeremy asked. \"Does anyone have anything they'd like to say or to get off of their chest before we resume?\" No one said a word, so I raised my hand. Jeremy was clearly shocked.\n\n\"Yes Mr. Hammond,\" he said in syllables so crisp I thought they'd break.\n\n\"I'm honored to be assigned to protect Miss Cameron,\" I said. \"But the assignment was supposedly designed for ten agents. My concern is for her safety. Will Agent Carlisle be replaced?\"\n\nJeremy smiled and nodded his head. The First Lady also smiled.\n\n\"My assistant, Agent May, who is already present will go with you. He'll act as senior agent. Now let's get into the meat of the assignment.\"\n\nOver the next half hour Jeremy gave us all kinds of facts about Pacmanistan and its culture. The religion in Pacmanistan was an extremely radical version of fundamentalist Christian beliefs. Their doctrine wasn't too far removed from the early Mormons or Jim Jones.\n\nThey believed a man could have multiple wives as long as he could comfortably support them. And, as in a lot of countries, men held all of the power. There were certain things that women simply couldn't do in Pacmanistan. Our female agents had to make sure that they never went out in public without a male escort. Any unescorted woman could be claimed by a man and that included foreigners. It would be up to the woman's family to arrange for her return if she was unmarried and for her husband to see to her return and punishment if she was married.\n\nA married woman who was taken would have to prove that she was married or she could be claimed and used by the man who'd taken her. Many women who were taken were simply left by their husbands. No one wanted a woman who had been sullied back. Many of these women were simply thrown out into the streets later and had to try to make it on their own in a society where women didn't hold very much value.\n\n\"Why the hell are we going there?\" asked an agent. \"It seems like something out of the middle ages.\"\n\n\"Like most of the states in that region, the US has a very tenuous relationship with Pacmanistan. Unlike some of the other countries in the area, Pacmanistan allies more closely with the North Koreans and the Chinese than the Russians. Pacmanistan is the only manufacturer of a special type of portable power source that we're interested in...\"\n\n\"I've heard of those,\" said one agent. \"They call them power pellets, right?\"\n\n\"Yes,\" said Jeremy. \"At any rate, having an exchange of visits with Pacmanistan would do a lot to stabilize our relationship with them and as it so happens, Millicent Cameron's college roommate was a princess from the royal family in Pacmanistan. She invited Miss Cameron for a three day visit to attend one of their festivals.\"\n\nWe were given a few hours to prepare and told to meet back at the White House for the motorcade to the airport.\n\nAs I left the room and headed down the hall, I was stopped by the head of White House security. He ushered me towards the Oval Office and I was nervous. As far as I knew, the room should have been empty. This president only used the big office for official meetings and press conferences. He preferred smaller, less ostentatious rooms for day to day work. The agencies generally called it the \"Offal Office,\" because whenever an agent was called there it was because he'd fucked up. The guys who'd fucked up during the Obama presidency were fired from that room. I was really nervous to be heading there. Just as we got to the room, the door opened and agent Carlisle walked out with a pissed off expression on his face. \"Whatever happened to, \"Free speech?\" he muttered loudly.\n\nA few minutes later, the Director of the Secret Service came out and held the door for me. He smiled at me and nodded his head. I figured he'd probably done that before talking to Carlisle as well.\n\nThat was the way things like that were done in DC. No one fired you anymore. You didn't get shit canned or terminated or laid off. What they did now was emotionless except for those God damned smiles.\n\nThey'd just smile at you and then tell you something like, \"They'd recognized that you had qualities that were simply not being used in your current employment scheme. They hated to have you waste your potential and not doing all that you could be doing. Unfortunately, there was nowhere in their organization that you could utilize all of that potential so rather than hold you back any longer, they'd decided to release you so that you could reach your full potential.\"\n\nThey actually had the stones to smile at you while they did it too. They actually pretended that they were giving you the greatest opportunity in the world. But everyone knew that all of DC was one big club. If you were let go from one area of the club, the chances of you getting another chance in another were very God damned slim. I was actually trying to decide on whether I should try my hand at private security or use up my savings and go back to finish law school, when I noticed that HE was in the office with me.\n\nI was standing in front of Alan Cameron the president of the God damned, United States of America.\n\n\"Rick, I was watching the briefing,\" he said. \"You saved the meeting. You displayed the attitude and professionalism that we expect from the Secret Service. You turned the tide of what could have turned really bad. You're on your way up, son. So I need to ask a favor of you. I know this isn't dangerous assignment and you really should be doing something more important. I'll make sure that from now on you do too. But this time I want you to look out for my little girl. I know that she's wild and more than a little crazy. When she sets her mind to something, there's just no stopping her. But her mother was like that when we were young and she grew into a great lady. So Rick, you protect my little girl. Bring her back safe.\"\n\n\"Yes sir,\" I said. He reached out and just as his wife had done an hour before, he patted me on the shoulder.\n\nOnce we got onto the plane, I settled down for some alone time. There was very little chance of an incident happening on the plane. Millicent was surrounded by her personal secretary and both of the female agents who would be with her during the trip. I was invited to play cards by some of the agents on the plane that I'd worked with before but declined. I just needed some time to myself to think about what had just happened and how to get my divorce back on track.\n\nI knew a little bit about Danielle's childhood and the way she grew up. We'd talked at length about the kind of marriage she wanted and she'd been very insistent on the parts about us being true to each other. I wondered what the hell had happened to that woman and how she became the raving slut that I was trying to get away from. I pulled out my notebook and tried to write. My notebook wasn't really a journal or a diary or anything like that. It was just a series of observations and poems I wrote that helped me to make sense of things.\n\nAt the end of each year and sometimes when I was stressed, I'd look back over my thoughts and think about how I'd felt and what was going on when I read them. The poems were sometimes pretty good, at least I thought so.\n\nAt that time, I just couldn't come up with anything. No poems or even words sprang to mind. I felt like I was in the middle of a jungle with danger all around me. I had to be very careful where I stepped because any wrong step could end up in disaster.\n\nAt the same time, although there was danger all around me, I felt alone. I felt like the only person I had in my life was my eight year old daughter and if I wasn't careful I could lose her too. I put the notebook back in my pocket and tried to grab some sleep. I had no idea how much sleep I'd get over the next few days so grabbing some while the opportunity presented itself seemed smart.\n\nBefore I closed my eyes, I scanned the plane and saw Millicent. She seemed to be happily chatting away with the other ladies. She didn't seem to have a care in the world. That meant that I was actually doing my job. I drifted off to sleep.\n\n* * * * * *\n\nMillicent\n\nAs the plane flew towards our destination my heart was light. Actually, my old roommate, Polly's, invitation had come at just the right time. The idiot I'd been dating had been starting to put pressure on me to sleep with him and I wasn't feeling it. Derek Christian seemed to be like the other men I'd dated over the years.\n\nThey were all reasonably good looking. They all came from the right families and had the right amount of money and political standing. When I dated them, we looked good together and made it onto the right magazine covers and went to all of the right parties and events. Everything was just too fucking right.\n\nI felt more like a prized racehorse than a woman. I had, of course, scandalized the country several times by wearing a skirt or two that the magazines and reporters thought seemed too short or too tight for the daughter of a well to do family to wear, much less the daughter of the president.\n\nI had also supported several causes and done things that simply didn't fit in with my father's political party's views or my father's views. Things like that made the headlines far more than any stylistic faux pas ever would.\n\nI knew what they thought of me. I also knew what they called me. \"Millie the Model.\" and \"The first family freak,\" were some of them that I didn't mind. The funny part was although I was supposed to be a wild party girl, at twenty six years old I'd only slept with two men in my entire life.\n\nA lot of my press was simply based on the reporters projecting their fantasies of what they thought I'd be like, on me. If I went to a party in California and there was a suspicion of someone doing drugs there, it was automatically assumed that I'd been one of the people there who partook in the drugs. The reality was that I'd never done drugs of any kind.",
        "If I went on a camp out while in college and it was reported in the papers that several of the campers, who were, of course, college students and well over eighteen years old, had engaged in sexual behavior; it was automatically assumed that I'd gotten fucked.\n\nI did date a lot because I got asked out a lot. A big part of that was the way I look. I'm not stupid, I understand that my looks attract a lot of attention and if I wasn't the president's daughter and the senator's daughter before that, I probably could have been a model. Not that I would have, but I could have been. So a lot of guys ask me out.\n\nI'd say that half of them ask me out for my looks. The other half ask me out because I'm the president's daughter. Some of them do it for political or occupational reasons, others because they're really stuck on themselves and see me as some kind of trophy or prize to enhance their own status.\n\nI've never yet been on a date where a guy treats me like I'm just a woman. I do make a very poor trophy though. Many of them run away after finding out that I'm the kind of trophy that likes to use her brains more than just sitting on a shelf looking pretty. I'm also the kind of trophy that can end up kicking you in the nuts if you make the wrong move.\n\nI guess that's my problem, most of the men I date aren't really men. In a lot of cases they aren't even boys, they're more like toys. They're just something to play with and I'm beginning to grow out of the stage where it's fun to play with them.\n\nMy assistant Liz said something that I'd missed as I looked across the cabin and caught a glimpse of one of the agents assigned to protect me. His name was Richard something or other and he was surprisingly attractive for what he was. One of the things you expected from your security people in general and secret service guys in particular was that they were supposed to be innocuous, anonymous looking guys who wore dark suits and didn't draw attention to themselves.\n\nThis guy was different. He was kind of cute and probably about my age or barely older. But at the same time, he didn't have the arrogance of guys my age. He had kind of an old world charm. There was something else about him that made me look at him. Separately, both my mother and father had told me that if anything out of the ordinary or anything dangerous happened; I was to get myself to Rick.\n\nAs the plane knifed its way through the sky, I wondered why. He wasn't the biggest of the agents, or the oldest, or the most aggressive. He wasn't even the most intimidating looking one by a long way. I wondered what made him special.\n\n\"I thought you were on good terms with your mother,\" said Liz, my personal assistant.\n\n\"What?\" I asked.\n\n\"I saw you staring at Rick Hammond,\" she smirked. \"He is kind of cute for a white boy. But the word around the White House is that he's your mom's puppy.\"\n\nThe two female secret service agents laughed at that and I looked at Liz in surprise. Liz and I have known each other since high school and she read my face.\n\n\"No, stupid. I didn't mean it like that,\" she said. \"Your mother taught both of us our values. She's a lady and she loves your father more than anything I've ever seen. That kind of love is especially rare in Washington. What I meant was that Rick has the BIGGEST crush on your mother that I've ever even heard of.\"\n\n\"He acts more like she's the queen than the First Lady,\" she continued. That sent the two secret service agents into another bout of laughter.\n\n\"Off the record,\" I said. \"Is that true?\"\n\nThe two women looked at each other and one of them nodded her head vigorously. \"If your mother told him to jump, he'd leap into the air and hang there until she told him he could come down,\" she said.\n\n\"You guys have it wrong, I think,\" said the other agent. \"I think that Rick is just extremely respectful. And it's not just your mother. It's your family.\"\n\nShe looked at the other agent. \"Remember what he said about her at the briefing.\"\n\n\"He said something about my mother at the briefing?\" I asked.\n\n\"No,\" she said. \"He said it about you.\"\n\nI got warm then wondering what he'd said.\n\n\"One of the agents there made the mistake of calling you, Millie the Model. And from what we've heard, I believe a lot of the agents there were either worried or disappointed about this assignment.\"\n\n\"Why?\" I asked.\n\n\"Well...this is off the record, right?\" she asked and looked at me.\n\n\"I swear it,\" I said.\n\n\"Well you go to a lot of parties and places that, while they're not dangerous on the surface, can cost people their jobs and their careers. Things you don't even consider can ruin people's lives ma'am. Do you remember when you went to that party in New York and snuck off to go to another party with the guy you were dating?\"\n\n\"Yes,\" I smiled. \"That was fun.\"\n\n\"For you,\" she said. \"The four agents who were assigned to watch you were fired because they couldn't keep track of you. Two of them were married with kids. Your fun left them jobless with families to support.\" I was shocked.\n\n\"I never knew that,\" I said.\n\n\"So yeah, a lot of us were worried about being assigned to your protection detail. It's a \"lose-lose proposition.\" If nothing happens to you, it's simply business as usual. Watching you on what is supposed to be a short fun outing isn't the kind of assignment that will stand out on our records or lead to any advancement. On the other hand, if you ditch us or something does happen to you, whether it's because of happenstance or because you ditched us, then we're either fired or we have a black mark on our records that would prevent us from ever going any higher.\" I had trouble meeting her eyes.\n\n\"On the other hand, they put together a very good team and some of us were thinking that with our service records, we should be assigned to more prestigious duties like one of the big three,\" she said.\n\n\"You'd rather work for one of the car companies?\" I asked.\n\n\"No, the big three are the president, the vice president or the First Lady,\" she said. \"Anyway, after agent Carlisle was dismissed for simply saying what a lot of people felt, Rick raised his hand with a question. He started out by saying that he was happy...\"\n\nThe other agent interrupted. \"He didn't say happy. He said he was honored to be assigned to Miss Cameron.\"\n\n\"Oh, you're right,\" said the first agent. \"He said honored and he asked who would be replacing Carlisle because the assignment was supposed to call for ten people.\"\n\nI took another look at the sleeping man. No one in my life had ever said that being around me was anything other than a pain in their ass, unless they were trying to impress my parents or get into my panties. Perhaps that was the reason that my parents both liked him. They thought that he was one of those men who'd go beyond the call of duty to protect me.\n\n* * * * * *\n\nGregor\n\n\"They will be here in only hours,\" he spat. \"Everything must be ready and it must be perfect. Oil those fucking hinges so they don't make a sound or replace them.\"\n\n\"Yes my prince,\" said the craftsman. \"But this room will probably not be used.\"\n\n\"What are you babbling about idiot?\" asked Gregor. He didn't like the man at all. The citizens of Pacmanistan should be more solicitous towards their future king. The Pollinscourt family had ruled Pacmanistan for centuries. With his father aging, it was only a matter of time before Gregor would be king. \n\n\"Your sister has put her in one of the rooms near her own,\" said the man. \"Since she is, after all, her guest and she invited her. They did not consider your plan, my prince.\"\n\nGregor's face grew red with anger and he stalked off.\n\nAs soon as he was alone, he dialed a number on his cell phone and spoke into the instrument. \"There has been a change in plans,\" he said. \"We are going to have to do this the hard way. So we will go back to plan A.\"\n\nThere was a voice heard from the other end of the line. \"No, you idiot this was plan B. The other plan was plan A. But I guess when we decided to go with this one it became plan A and plan A became plan B. But now that Plan A that was originally plan B became impossible, the plan A that became plan B, became plan A again. Just fucking do it.\"\n\nGregor hated his sister. Sanyia was always trying to upset the applecart. She wanted to modernize the country and especially the way that women were treated. The bitch was too stupid to even realize that it was Gregor who had arranged for the American delegation to even come here.\n\nGregor had fooled his sister into inviting them. With the spring festival coming up, Gregor had begun to put pressure on his sister to attend the festival instead of remaining in England where she was working on her doctorate. Sanyia's views on women were stupid. She didn't understand the women of Pacmanistan because she didn't know any of them. She'd been educated abroad from the time she was twelve. She thought more like a western woman than any woman from her own country. Her friends didn't even call her by her name. They called her Polly. \n\nIt was a good thing that Gregor was the older of the siblings. He'd also done what he could to allow her to stay out of the country. He didn't need her drumming up support for her stupid causes at home. There had been a couple of instances in Pacmanistan where a queen ruled the country until she married.\n\nGregor had too many alliances with other strong countries and men who were counting on him to rule the country. His father did tend to echo Sanyia's views on it being time to modernize. He didn't want it to come to that, but sacrifices might have to be made.\n\nHe walked to the window and looked down at his sister's compound. His sister had her own luxury bungalow built in the shadow of the huge palace. When she was home, that was where she resided. In her house, she made the rules. He should have foreseen Sanyia's choice to have her guest stay in her bungalow with her. After all, they had shared a room in college. It was an oversight that he shouldn't have made.\n\nHe made a list of everything he'd need to have done. He could still accomplish his goals. It would simply be harder on the other side.\n\n* * * * * *\n\nMillicent\n\nAs soon as the plane landed, I was on my feet and headed towards the exit. That didn't last for long. I walked thinking about the door and found my way blocked. It was, of course, Rick. He pretended that it was an accident. He pretended that he'd just been clumsy but I'm not stupid. He simply didn't want me to be the first one to the door.\n\nAs the door opened, he nodded and a couple of agents stepped out of the plane and walked down the jet way to the ground and the limo that waited there. He looked at them through the window of the plane. They scrutinized Polly and her escort and nodded back to him.\n\nHe then apologized again for blocking my path. I smiled when I realized how concerned he was for my safety. The funny thing about it is that he never made eye contact with me. The whole time it was ma'am this and Miss Cameron that. I wasn't used to being treated like that.\n\nMy protective squad usually called me Miss Cameron out of respect, but the whole Ma'am thing was unnerving.\n\nThe agent in charge, Mr. May, seemed to be a bit perturbed that Rick had taken charge. I nodded at him and he smiled at me but I could still tell that he was pissed.\n\n\"It's not like there was any danger,\" he said to Rick when he thought I couldn't hear them. \"I repeat we are on a purely fun, visit. There are no diplomatic or political ramifications here. Relax, we don't want your over-zealousness to cause an incident.\"\n\nAs soon as I got into the limo, Polly and I started chattering as if it had only been a day, not a couple of years since we'd seen each other.\n\nWe all called her Polly as a shortened form of her last name Pollinscourt. She acted just like any other girl at college. It was hard to believe that she was a princess. Her long dark hair and pale skin contrasted with my blond hair and tanned skin.\n\nWe talked about everything under the sun until the limo arrived at her compound. Once there, I met her father, the king, and her brother. They all seemed to be very polite. Her brother seemed to be the brooding artist type. I'd run into enough of them to realize that they were just shy.\n\nHe did try to get me to move myself and my staff into rooms in the palace, but I assured him that whatever Polly had set up for us was fine. Besides I WAS sure that he was only being polite.\n\nWhile we talked and Mr. May introduced the agents and staff to the palace's chief of staff, I noticed that Rick and another of the agents were missing. I have no idea when he left or how long he'd been gone. He nodded at May again when he re-appeared. I figured out then that he'd checked out the bungalow for whatever he thought might possibly be wrong and had decided that the place was safe for me. Again, May was fuming.\n\nI was sure that it was protocol for my father and my mother to have an advance team go over every inch of anyplace that they might visit. Apparently, Mr. May and Rick had differing opinions on whether or not I was important enough for that kind of treatment. I doubted very seriously that Polly would allow anything to happen to me, but it was nice that someone found me important enough to worry about my safety.\n\nFor the rest of the day it was business as usual. We spent a lot of time at Polly's bungalow reminiscing about our college days and what we were doing now. I found out that we weren't Polly's only guests. Judging from the accents there were a couple of women from England and one from Japan as well. Polly was getting to have an international cadre of friends.\n\nOne incident happened that I could have handled better. Mr. May was giving Rick a talk.\n\n\"You have to relax, Hammond. This is not that serious. It's not like the president is here. I think you're stressed out. And for heaven's sake go somewhere and shave, this isn't Miami Vice,\" said May.\n\nPolly, Liz, the two female agents assigned to me and I were passing by them as he said it. I sometimes forget that I have to act in a certain way. Decorum has long been one of the things my mother has tried to drum into me.\n\nI simply stopped, tapped Mr. May on the shoulder and when he turned to look at me in shock, I said, \"Leave him alone. He's doing fine and I kind of like his scruffiness.\"\n\nMay's eyes bugged out and he just gave me a curt nod and walked away. Rick naturally looked down and just stood there. I just wanted that man once to look me in the eye. I never got a chance to say anything else though because there was a bunch of shocked gasps and laughter behind me.\n\nAs we walked away, one of the English girls simply stayed there and watched Rick as he finally walked away in the opposite direction.\n\n\"I've never seen that before,\" said Liz.\n\n\"You've never seen what?\" I asked.\n\n\"You went after that man like you were a mother bear and he'd threatened one of your cubs. That is not the Millie we all know. What's going on here, Mill? Are you falling for the help?\" she asked.\n\n\"Of course not,\" I said defensively. \"You know I have a boyfriend, Liz.\"\n\n\"Yeah,\" she said. \"He's a boy and you guys are definitely FRIENDS. But you haven't even kissed the guy yet after three months of dating.\"\n\n\"So you and the guy back there have nothing going on?\" asked one of the English girls.\n\n\"Of course not, he's like her body guard,\" said Polly.\n\n\"That's good to know,\" said the English woman, smiling. \"I think I need a nap,\" she said. \"All of this excitement is too much for my delicate constitution, you know. Polly, I may go into town at some point; perhaps to get some native clothing for the party tonight. Could you arrange a suitable escort?\"\n\nAs the woman walked back towards the room where we'd be sleeping, her friend just shook her head.\n\n\"She's still a slut isn't she?\" asked Polly. Her friend just nodded and suddenly without knowing why I was pissed.\n\nFor the rest of the morning, I was upset. I think that Polly knew it too. Liz spent a lot of time staring at me and shaking her head. The two female secret service agents stayed silent but they had trouble keeping their faces straight a lot of the time.\n\nThe two English women just pissed me off. The slutty one was Carmella. I was angry at her companion Beth because she reminded me of Carmella.\n\nPolly told me that we'd probably end up going into town after all. Carmella had already gone and the other women wanted native outfits as well. Pacmanistani women actually dressed like women all over the world did nowadays, but it was customary to wear the old time clothing for the festival.\n\nI sent one of the female agents to find Mr. May. He came over a few moments later and the closer he got to me, the calmer he became. I knew he was angry but I didn't care.\n\n\"Mr. May You are in charge of my protection, right?\" I asked. He nodded.\n\n\"Well, I'm going into town and...\" I began.\n\n\"No...you can't,\" he said. \"We haven't had a chance to investigate the city and who knows what could...\"\n\n\"Make it happen,\" I said.\n\nHis entire face turned red and he clenched his fists reflexively. But he kept his composure. I'll put a team together at once,\" he said.\n\n\"Will Agent Hammond be on the team?\" I asked.\n\n\"No,\" he said. \"Agent Hammond has been assigned to the team that watches you at night.\"\n\n\"I want him on the team,\" I said.\n\n\"But he's asleep,\" he sputtered.\n\n\"Make it happen,\" I said, turning towards the bungalow.\n\nI guess I was acting every bit as much the spoiled arrogant princess that they'd all assumed I'd be. That really pissed me off because I wasn't actually like that. In fact, everything pissed me off that morning. But the thing that pissed me off the most was the thought of that bitch Carmella being alone with Rick. Why the hell would May assign him to watch me during the night when everyone was asleep?\n\nI was also afraid that he wasn't sleeping alone. So there was no way I was going to town and leaving him here with Carmella. I started getting ready to leave. About twenty minutes later, Mr May and three other men came into the bungalow and stood in front of me. I looked at him and tilted my head. Before I opened my mouth he interrupted me.\n\n\"He's checking over the limo,\" he said. \"He's going over the motor and everything under the car.\" I smiled and he sighed.\n\nJust as we were about to leave, Carmella flounced her way into the group. \"I'm so glad I caught you,\" she said.\n\n\"I thought you'd already gone into town,\" said Liz.\n\n\"I forget to get something,\" smiled Carmella. She scooted into the limo and somehow ended up sitting right next to Rick.\n\nOn the trip into town, Carmella was flirty and charming. I didn't appreciate her charm and her flirting wasn't directed at me. Rick kept his eyes constantly scanning for possible threats.\n\nApparently Carmella wasn't used to being ignored, so she struck up a conversation with him.\n\n\"What are you doing?\" she asked.\n\n\"My job ma'am,\" he said.\n\n\"Oh, you're making sure we're safe,\" she smiled. \"That is so exciting.\"\n\n\"What would you do if there was more than one attacker?\" she asked.\n\n\"Protect Miss Cameron and get her away from danger,\" he said.\n\n\"What if both of us were in danger?\" she asked.\n\n\"I'd protect Miss Cameron and get her away from danger,\" he said.\n\n\"What about me?\" she asked, leaning forward so he could look down her shirt. \"What if I were in danger and she was safe?\"\n\n\"If there was any danger in the area,\" he said. \"My first priority would be to protect Miss Cameron. If you were in danger, she might still be a secondary target and my job would be to protect her.\"\n\n\"Would you kill someone to protect her?\" she asked. He nodded.\n\n\"Would you risk your own life to protect her?\" she asked.\n\n\"Of course,\" he said without hesitation.\n\n\"So now here's the tough question,\" she said leaning forward again. \"What if I, her friend attacked her. You know, nothing serious, just one of those girl on girl cat fights that you guys love to watch.\"",
        "\"I'd put a bullet in your forehead before you got close enough to...\" before he could finish the sentence Liz and Polly were laughing so loud he couldn't finish it.\n\n\"You certainly are serious about your job,\" laughed Carmella.\n\nFor the rest of the trip into town it was like being in a weird three-way. Carmella did everything she could to get as close to Rick as possible. I fumed at how obvious and whorish she was, getting angrier and angrier but keeping my composure. Rick, on the other hand, far more than the rest of the security detail, went out of his way to make sure I was safe.\n\nI was also angry because he never once looked at me. He looked her right in the eyes when he spoke to her. He looked at her huge boobs when she stuck them in his face and he spoke to her. He never once looked me in the eye. If I stood directly in front of him, he looked away. It was like trees, walls and even his God damned shoes were more interesting than I was.\n\nAnd it was all a game to Carmella. On the way back, she showed off a little bit. \"Did you see the guy on the roof in the marketplace?\" she asked.\n\n\"The one with the fishing rod or the one hanging the clothes out to dry?\" he asked.\n\n\"What were they wearing?\" she asked.\n\n\"Fishing rod guy wore jeans and a plaid shirt,\" he said. \"Laundry guy wore an old whitish looking robe.\"\n\n\"My God, you notice everything don't you?\" she smiled.\n\n\"I have to see everything that might be a danger...\" he began.\n\n\"What color are my eyes?\" she asked.\n\n\"Hazel with a little bit of blue on the outsides,\" he said without hesitation. She didn't hesitate either.\n\n\"What color is my bra?\" she asked.\n\n\"Black,\" he said. This time it was Carmella's turn to laugh.\n\n\"I'm glad you noticed,\" she smirked. \"And looking at my lingerie isn't part of your job like protecting Miss Cameron. So you did that on your own. If you want to see any more of my underthings, or what goes into them, you can just...\"\n\n\"Carmella,\" hissed Beth. \"Sometimes you go too far.\"\n\n\"And sometimes, I go just far enough,\" said Carmella. She tapped the flustered Rick on his hand.\n\n\"The ball is in your court,\" she said smiling. \"You don't have to worry about your charge, she has a boyfriend. So anytime you're not protecting her...How exactly does that work? Do you have time off or are you working around the clock?\"\n\nBefore Rick could answer, the limo stopped and we were back at the bungalow. I looked at him to see what his reaction was but he was already out of the car checking to make sure everything was okay. I looked towards Carmella and she was smiling and nodding her head. She wasn't paying me any attention.\n\nPolly was already walking towards the bungalow with Beth right behind her.\n\n\"I know that look,\" said Liz. \"You did say that you weren't interested, remember?\"\n\n\"I hate that bitch,\" I said quietly.\n\n\"Like looking into a mirror, huh?\" she said.\n\n\"I'm not like that,\" I hissed.\n\n\"Well maybe she is a bit more, direct about it. Maybe she's a bit more obvious, but some men like that. I think they see it as being honest. It's kind of flattering. But in the end you and Carmella are pretty much the same. Once you figure out what you want, you go right after it and you usually get it,\" smiled Liz.\n\n\"Then why does it feel like I'm losing?\" I asked.\n\n\"It's probably because you're sitting your ass on the bench watching the game instead of playing it,\" said Liz. \"This isn't a game that you're used to playing. You're kind of used to just showing up, batting your big pretty eyes and having the men chase after you. Doing the chasing might not be something you're good at,\" she said.\n\n\"So maybe I have to get him to chase me,\" I smiled.\n\n\"Won't happen,\" spat one of the female agents.\n\n\"Not in this lifetime,\" said the other. \"Carmella probably picked up on that. It's probably why she's going in with all guns blazing.\"\n\n\"And she does have an advantage over you,\" said the first agent again.\n\n\"What do you mean?\" I asked.\n\n\"Rick is a very good agent,\" she said. \"He takes his job really God damned serious. He's already down on women, but he sees you as \"WORK,\" first. Before he notices you as a woman, you're the job. So it's weird because he's already not interested, but before he even sees you as something he's not interested in, he has to protect you.\"\n\n\"Right,\" said the other woman. \"Carmella only has to leap one small hurdle to get him. You have to scale a wall to even get to the hurdle.\"\n\n\"But cheer up, Carmella only stays with a guy for a couple of weeks before she moves on,\" said the first agent.\n\n\"How do you know that?\" I asked.\n\nThe two agents and Liz all stared at me like I had two heads. \"Honey, you have to start reading those state department briefings,\" said Liz. \"She's Carmella Bingham. She's the British prime minister's niece. She's kind of the British version of you. She's left a trail of boyfriends all over the fucking world. She's had artists and rock stars and athletes. If you can name it, she's fucked it and left it. A U.S. Secret Service agent would be something new for her.\"\n\n\"Not mine,\" I hissed. The two female agents looked at each other and smiled.\n\n\"When did he become yours?\" asked Liz.\n\n\"I don't know,\" I said. \"And I'm pretty sure that he doesn't know it yet. Maybe it was on the plane when he was asleep and every time one of his eyes would pop open, he'd look for me. Shit, not even my dad is that concerned with making sure I'm okay.\"\n\n\"That's our job,\" said one of the agents.\n\n\"Nope, there's a connection. I'm pretty sure of it,\" I said. \"So why does he hate women? Is it all women or are we just bitches because one woman in particular pissed him off?\" \n\n\"Oh, we'd better go inside for this one,\" said the agent. \"This is going to take a little while to tell.\"\n\nOnce we got inside the bungalow, the four of us gathered in my room while the two Brits napped and Polly went off to prepare for our trip into town for the festival that evening. The biggest part of the festival would be two nights from then. But Polly had to participate in the opening of the festival.\n\nThe two agents, Gail and Patty, actually got relaxed. I could tell the difference because even though they still wore their holstered guns, they'd taken off their suit jackets.\n\nPatty started telling me everything she knew about Rick.\n\n\"Okay, the reason he hates women is...well you were right. It's all because of one woman. He's kind of...the opposite of what people think you are ma'am. He was a hot shot high school quarterback. He was so good that he got recruited by a lot of colleges. He did a lot of those college visits where the schools go out and try to spoil the shit out of you for a weekend to try to convince you to go their school.\"\n\n\"Anyway the U of M had something to offer that interested him right away,\" said Patty.\n\n\"Let me guess,\" I said. \"They offered him the starting quarterback's job his first year, right.\"\n\n\"Not even close,\" said Patty. \"He flipped over something the football team didn't even offer him.\"\n\n\"Are you about to tell me that he went to college for the educational benefits?\" I laughed.\n\n\"No ma'am,\" said Patty. \"He went for the benefits alright. And for an eighteen year old boy, I'm sure he got an education, but he picked that school because he went crazy over a girl. And she wasn't just any girl either. She'd just been selected as Miss Michigan and went on to compete in the Miss America pageant. It was a weird relationship.\"\n\n\"How so?\" I asked.\n\n\"Well she's older than HE is for one thing,\" said Gail.\n\n\"That's not really very unusual anymore,\" I said.\n\n\"There's more to the story,\" said Patty.\n\n\"But wait you said she was Miss America and he was a football player,\" I said. \"Did he get hurt? Why didn't he become a pro?\"\n\n\"He quit,\" said Patty. \"A few months after the Miss America pageant fiasco, she got pregnant. He quit the team.\"\n\n\"He what?\" I asked in shock. \"But there had to be a way for them to...\"\n\n\"That's what he did,\" said Patty. \"He was going to join the army, but instead he was selected by the service. They paid the rest of his college expenses and gave him a salary. He's done very well and is a great agent. Unfortunately, life at home wasn't quite as good. She cheated on him and he's been trying to divorce her.\"\n\n\"How long has he been trying to get away from her?\" I asked.\n\n\"About three years,\" said Patty. \"She's fighting it tooth and nail and of course, with him often being out of town on extended leaves hasn't helped.\"\n\n\"Okay, so he just needs better, more dedicated lawyers and a way to cut through some red tape. Half of the marriages out there end up in divorces. That shouldn't make him hate women,\" I said. \"It should just make him hate his wife.\"\n\n\"Ma'am, you still don't get it. He's the kind of man who puts his all into everything he does. He loved that woman with everything he had to give and in the end, she did something he could never forgive and she keeps on doing it. Plus, there's the fact that she's the ONLY woman he's ever been with. It's kind of a mess.\"\n\n\"It's so sad,\" I said. \"I can almost feel his pain.\"\n\n* * * * * *\n\nRick\n\nFor the first time that I can remember, I really wasn't happy with an assignment. I was busting my ass but I seemed to be the only one who had a bad vibe about this place. I guess I was so used to going into a place and scouting for possible problems that I saw them everywhere. Normally, when my team came into a location, we had to cover every possible vantage point where a crazy would try to attack from. And while we couldn't secure an entire city, that's impossible, we did try to make sure that the corridors our charges would use were as secure as possible.\n\nIn this case, since we were on supposedly friendly soil and this mission wasn't political or even diplomatic in nature, everyone seemed to be relaxing. Agent May seemed to be constantly riding my ass. But he was telling me to relax on one hand and telling me I needed to shave on the other.\n\nThe message I seemed to be getting from him was that security wasn't a priority here but looking good was. That made no sense. The only good thing about the whole situation was that at least he'd allowed me to pick the shift that I wanted to work. I'd decided to work the night shift for a couple of reasons. The first was that it gave me the days to either sleep or handle personal business.\n\nWe had access to the palace and they had Wi Fi there so it gave me the ability to contact my lawyer. Even if the divorce didn't go through, I was now dead set on getting custody of my daughter. I couldn't leave her with Danielle any more.\n\nThe second reason I preferred to work nights was that it got me away from Miss Cameron. The incident with her the other day, telling May to leave me alone was embarrassing. I had the other agents making all kinds of jokes at my expense over her looking out for me. A good agent should be anonymous enough to stand right in the room and not draw any kind of attention. Somehow, she'd noticed me, which would only hinder me from doing my job. She and some of her friends had actually started talking to me, which the other agents also found noteworthy.\n\n\"Hey Rick, exactly how big are that English girls tits,\" I'd been asked a couple of times. \"I heard she stuck them right in your face.\"\n\n\"Ah, don't even think about it,\" said another. \"Rick only has eyes for the Cameron women.\"\n\nThe bad thing about it was that it was at least partially true. I'd seen Millicent Cameron around the White House lots of times before this assignment. Usually it was in passing and from a distance. She tended to distance herself, not only from politics, but from her parents so that anything she did didn't reflect badly on them.\n\nShe was very outspoken on several issues and her stand on things like the environment, the average person's carbon footprint and women's issues differed strongly from her father's political party's views.\n\nThe problem was that this was the first time that I'd actually been in close proximity to her and I hated to admit it, but I was very attracted to her. Pictures in the newspaper or seeing her on TV doesn't convey the nuances she has that you can only experience in person. Her hair glows it's so blond. And her breasts, while not in the same league as that insane Carmella Bingham's, were very full and very beautiful.\n\nMillicent Cameron is probably the most beautiful woman I've ever seen and she isn't very standoffish or aloof like some women are. When I watched her conversations with both her assistant and the princess and even the two female agents, she spoke to all of them the same way; like they were all just people. A lot of people in the political arena tend to treat people as if their value came from their rank or their position.\n\nThat means that to a certain extent, they tended to talk down to anyone who wasn't a political power. Miss Cameron didn't do that at all. She had several habits that she did when she thought no one was looking that endeared her to me all the more. She had a way of biting her bottom lip when she concentrated on a problem that made me just want to...\n\nThat was the problem. I should never think about her like that. My job was to protect her; nothing more and nothing less.\n\nI didn't like Agent May's attitude on how we did things. It was simply too lax. He'd even told me that I should go into town for a drink. I wasn't supposed to be on duty until midnight and he wanted me to, in his words, get the stick out of my ass. His theory was that my agitation and unease would spread through the others and make things unpleasant for everyone.\n\nI also didn't like Prince Gregor one fucking bit. He'd been very open and very accommodating but I didn't trust that bastard as far as I could throw him. He seemed like the type of prince who can't wait for his father to die, to take power. He seemed like the type to seize power sooner rather than later. It just felt to me that the entire country was a powder keg and I didn't want Millicent here when it blew.\n\nThere was also a group of terrorists or something who, from time to time, staged raids or demonstrations throughout the country. The army seemed to keep them in check, but I couldn't count on them not to try something during the festival in two days. I also didn't like the idea of Millicent just wandering around town with only a couple of agents besides Gail and Patty to watch her. Gail and Patty were excellent agents but...\n\nOkay, maybe my thoughts in that area weren't very professional. The fact of the matter was that if Gail and Patty were Stallone and Schwarzenegger, I still wouldn't trust them to protect her. I don't think I trusted anyone beside me to handle it.\n\nPrince Gregor was politically some sort of throwback. He favored far stricter adherence to the regions religious tenets. The princess and their father were more moderate and more open to modernizing the country and its laws. It would be interesting to see how things were in this country in twenty years.\n\nOne thing that I found interesting was that the terrorists in the region seemed to have views that were very similar to Gregor's. I could foresee a day that he might reach out to them when he took over power.\n\nWhile I was here, I'd made a very thorough study of the geography of the country. The city that we were in, held no strategic importance. It had simply been a very successful trade city. A large part of that importance was that the city was very close to the border. In fact, the bungalow that Millicent slept in was only five miles as the crow flies from the border with Russia.\n\nI'd gone into the palace and used Google earth to map out my route to the Russian border. It was always a good thing to have an escape route. It seemed funny. During my father and grandfather's time in the military service, they'd fought the Russians or at least helped to maintain the status quo between us and them. But now, we had diplomatic relationships and alliances that made the Russians my best hope in the event of anything going wrong.\n\nI did want to relax a bit though and maybe May's suggestion about going out for a drink wasn't a bad idea. I don't actually drink, but getting away and just kicking back couldn't be a bad idea. I didn't need any more sleep. Even after being awakened by May to go into town on that babysitting run, I'd come back to have a couple of more hours of sack time.\n\nI caught a ride with some of the palace workers who told me about a quiet bar in the town. I staked out a small booth in the back of the place and took out my notebook to write. I sat there watching the locals wander in and out. They had an incredible capacity for alcohol. There was one farmer who seemed to come in about every half hour or so. And the liquor they served, I'd heard from other agents was some kind of extremely potent local whiskey. I'm not sure I'd be able to walk let alone run a tractor with that amount of liquor in me.\n\nI'd taken several pretty good stabs at a poem, when she walked in. It was only about six thirty p.m. local time and I wasn't due to report until about eleven thirty for my midnight until eight a.m. shift.\n\n\"Would you mind it terribly if I were to sit down with you?\" she asked. I don't know what it is about the British. We speak the same words except for regional slang and inflection but somehow it just seemed to sound so different. Looking at her standing there in front of me, I got the impression that she was waiting for me to tell her it was okay to sit at the table.\n\n\"It's fine,\" I said. \"Have a seat.\"\n\n\"Are you busy?\" she asked.\n\n\"I was just jotting down a few lines in my notebook,\" I said.\n\n\"Oh, well now that I'm here, you don't have to do that anymore,\" she said smiling.\n\n\"I actually like to write,\" I said. \"It gives me a chance to think about and reflect on what's going on and how I feel.\"\n\n\"Oh,\" she said. \"I was really hoping to get your opinion on something.\"\n\n\"Me? Why would you want my opinion?\" I asked. I didn't trust her so I started the micro recorder in my jacket pocket just in case she accused me of something.\n\n\"Well, you're a man,\" she gushed. \"You're an attractive young man. And sometimes there are cultural differences between us. Even though you're no longer our children and our relationship is still more like we're cousins now, there are simply... differences and I wouldn't want to miss-step.\"\n\n\"How are we cousins?\" I asked.\n\n\"I mean America and Britain, not us specifically,\" she smiled. I shrugged my shoulders.\n\n\"If you're asking me about cars, I can really only tell you about American cars...wait are there any British cars left? Aston Martin and Jaguar are both...\"\n\n\"I wasn't asking you about cars,\" she interrupted. \"Next week, I'm going to a party in New York at a club. It's one of those jeans and T-shirt, dance and get funky kind of parties. What do you think of my shirt?\"\n\nShe pulled her jacket open and my eyes opened wider than I thought possible. Carmella Bingham is no shrinking violet. She's a pretty English woman. Perhaps a bit thicker in the waistline than I'd prefer but her attributes were known world-wide.\n\nBeneath her coat, Carmella had on a pair of jeans that were so tight it looked like they'd been panted on. She was wearing a T-shirt, if that was what you'd call it. Her hands held the sides of the shirt together. The shirt was very thin. It was so thin in fact that I could see the blue lines of veins in her huge pale breasts. She obviously wasn't wearing a bra. With her holding the T-shirt together I was able to read it. It read \"Fuck Me.\" I think it was meant, not as an invitation, but the expressive way. But when she let go of the T-shirt and it opened, I was so busy staring at her huge heaving udders that I couldn't form rational thoughts. As she breathed, the thin material of the shirt sounded almost as if it was tearing even more. It was simply unable to contain her boobs.",
        "\"I didn't want you to be distracted by my bra,\" she said. \"So I didn't wear one,\" she laughed. It looked like if she breathed very hard, everyone in the bar would see nipples. Luckily for us, the two men she had from the palace guard had their backs towards us. She quickly buttoned up her long coat once she was sure that I'd seen what she wanted me to see.\n\n\"So, did you see anything you liked?\" she asked.\n\n\"So, what was your question again?\" I asked. She laughed and I have to admit I liked the sound of her laughter. It was throaty and full with just a touch of evil in it. She seemed like the kind of woman who went after whatever she wanted with both feet.\n\n\"Let's make it an easy one,\" she said. \"If I was your woman, would you let me go to a party dresses like this?\"\n\n\"If you were someone else's woman, I'd love the view,\" I said. \"If you were mine, I'd let you dress like that all the time when we were at home, but in public, I don't think so.\"\n\n\"Have you ever heard the expression, \"If you've got it flaunt it?\" she asked.\n\n\"Have you ever heard the expression, \"One with a gun will get you two?\" I asked.\n\nShe nodded and smiled. \"Isn't that one of your American laws? If you're caught in the commission of a crime and you have a firearm on your person, the minimum mandatory sentence is two years, correct?\" she asked.\n\n\"Very good,\" I said. \"But in your case it's more like, \"One with two guns will get done.\"\n\n\"What does that mean?\" she smiled.\n\n\"It means that in New York you'd better be very careful at your party. Because a lot of guys seeing you like that would expect for you to do more than stand there and look sexy; whether you were willing or not.\"\n\n\"Oh, I'm always willing,\" she smiled. \"Like now; your place or mine?\"\n\n\"Both,\" I said.\n\n\"Ooh I love a man with STAMINA,\" she squealed. \"Shall we?\"\n\n\"I meant you in your place... and me in mine,\" I said. \"The opening ceremonies of the festival are about to begin in an hour or so and I'm probably going to be there whether I'm working or not. So I need to shower and get presentable. So, can we say some other time, perhaps?\"\n\nI'd said some other time as a way of letting her save face. She took it literally. There was no way of squashing the spirit of this Valkyrie.\n\n\"Ooh, you can count on it,\" she said. She pulled her coat tightly around her and left the bar. I looked at the poem I'd written a couple of stanzas for and tore the sheet from my notebook. I left the crumpled ball of paper on the table. I wrote down my impressions of what had just happened. I left a ten on the table to cover the two cokes I'd just drank and headed outside to get a ride back to the palace.\n\n* * * * * *\n\nDanielle\n\n\"Mommy is that man, your friend, going to stay in our house?\" asked Katrina.\n\n\"Yes Honey, but only for a little while,\" I said.\n\n\"I don't like him, Mommy. He's not a nice man. If we have to have a man in our house why can't it be Daddy?\"\n\n\"Katrina, your daddy travels a lot for his job. And sometimes mommies and daddies don't live together because they don't get along,\" I said.\n\n\"Why don't you get along with Daddy,\" she asked.\n\n\"Because Daddy has his head stuck up his ass...\" I began. I thought about it and decided that telling her that would be a mistake.\n\n\"Daddy left you and Mommy alone while he went to work sometimes,\" I said. \"And Mommy just...Well Mommy got bored and did a really bad thing. It hurt Daddy a lot so he doesn't want to be with Mommy any more. And that makes Mommy really angry so she does even more stupid things and Daddy gets even angrier at her.\"\n\n\"Why can't you just say \"Sorry,\" and not do the bad things anymore?\" she asked.\n\n\"Sometimes I wish I could, Honey,\" I said. \"But in the grown up world, it's really not that simple.\"\n\n\"Danielle,\" screamed Donnie from the next room.\n\n\"Rina go on up to your room and play,\" I told her as I headed into the living room.\n\n\"My junk hurts and this couch is lumpy and it smells like...it stinks,\" he bellowed. \"I need another pain pill. This isn't worth it. When my foot heals, I don't care what you said he is. I'm going to take some of the boys and kick his ass. This pain I'm feeling in my nuts will be like nothing compared to what I'm going to do to him.\"\n\n\"Donnie, did you see the way your big time gangster friend put his gun down and left the house along with his hired muscle when they found out who Rick was?\" I asked.\n\n\"Yeah, but he didn't get his foot broken and his balls stomped on,\" hissed Donnie. \"And that's another thing I have to pay that mother fucker back for. Maranelli is rethinking his decision to work with me because of that. Do you know how much money I stand to lose?\"\n\n\"The chances of me getting you out of this rat trap are significantly lower now because of your husband too,\" he said.\n\n\"Why can't I just move in with you?\" I asked.\n\n\"Oh yeah,\" he smirked. \"Like my wife is going to let me just move some whore into the house and...\"\n\n\"You're married?\" I asked.\n\n\"Of course I'm married,\" he spat. \"What, you thought that because I'm fat I couldn't get a woman?\"\n\n\"No but...\" I began. \"I thought that we...\" I realized then that I'd made yet another mistake in the series of humungous fuck ups that I'd turned my life into.\n\n\"You called me a whore, Donnie,\" I spat. \"I'm not a whore.\"\n\nHe just laughed. \"Okay, what would you call yourself? What's the PC label to put on a woman who has sex with men for just the promise of personal gain? Okay, you're right a whore would need more than promises. Those bitches want to get paid and you...\"\n\n\"Donnie, call one of your friends,\" I said. \"Have one of them come and pick you up. I want you out of here.\"\n\n\"Why are you getting upset?\" he asked. I just turned and walked up the stairs to my daughter's room.\n\nKatrina was sitting on her bed watching her television. Katrina's room was the only nice place left in the house. Her room had murals on all four walls. The ceiling had been painted a deep dark blue with glow in the dark stars on it in the form of constellations. She had a 46\" Plasma screen TV with cable and all of the channels. She had a computer in one corner of the room and her huge toy box in the other.\n\nRick had done all of that for her. Rick paid me far more than the state's going rate for child support. He never said no to a single thing that Rina wanted. The sad part of the whole thing was that he'd once loved both of us that way, but I'd been too jealous and too stupid to see it.\n\nFor most of my life, I'd lived in fear of becoming what my mother had been and somehow I was walking in her shoes anyway. The only thing missing was five more kids. The reason for that not happening could be explained in one word; Rick. If Rick hadn't been as smart as he was, I'd probably have continued to cheat on him. If I had gotten pregnant again, we'd never know if it was his child or not.\n\nRick was just different. For one thing, unlike my father, Rick cared about his daughter. And for another thing, even though Rick loved me and I'd really hurt him badly, he hadn't been willing to give up his pride and his self-respect for me the way my dad had for my mother.\n\nI guess I'd thought that even if Rick did catch me, he'd give me another chance. I was also sure that once we'd had Katrina, that he loved his daughter enough to forgive me. What I'd really hoped was that he'd decide that he needed to watch me more closely so that it didn't happen again. I thought that he'd take a desk job and that we could all be happy together. But I could see now that Rick would never play my game. And I saw that no matter what I did to him, he would just keep plugging away at the divorce until he got it.\n\nThe most logical thing for me to do was to try to negotiate a settlement that would give me some kind of financial support. My insistence on trying to rub Rick's nose in what I was doing had made things far worse for me. Of course, for the last year, I'd always thought that I'd be marrying Donnie when all of this was over so I really didn't think I'd need alimony or any form of support.\n\nThere was also the fact of the video and pictures that Rick had just taken to consider. If he did get them to someone in CPS and they sided with him and gave him custody of Katrina, I could find myself homeless and in trouble. Part of the reason that the rest of the house looked like hell was that Rick only maintained Katrina's room. He didn't do any form of repair on anything else in the rest of the house. He'd told me enough times that I'd destroyed our marriage and the only thing he gave a damn about is his daughter. Once he got her, where the hell would that leave me?\n\n* * * * * *\n\nMillie\n\nLiz, Gail and I were watching as several attendants and hairdressers prepared Polly's hair and makeup for the festival's opening ceremonies. Beth was in the shower and Patty was off doing something for me that I really appreciated. It was outside of her job description as a secret service agent but well within the guidelines of something a friend would do.\n\nThe door to the main large room opened and Carmella came into the room smiling like a shark. She wore a trench coat and if I didn't know any better I'd have sworn that she was naked under it. The things that woman did no longer surprised me.\n\nShe seemed to have turned this into some kind of game between the two of us. Perhaps it was because, as Gail had suggested, the press around the world seemed to consider and often called her, \"The English version of me.\" It was almost as if she needed to live up to it and prove that she was the far wilder, sluttier version. If she wanted the title, it was hers as far as I was considered.\n\nShe sat down on the sofa near me. The smell of sex was coming off of her in waves. I almost gagged. I wondered why she hadn't taken a shower. \"You'll probably have him in a couple of nights,\" she smirked. \"I think he'll end up all yours.\"\n\n\"So you're bowing out?\" I asked.\n\n\"Of course not,\" she smirked. \"But I'll be done with him by then. There are too many men in the world to sample for me to allow myself to settle down with any one man. After I've had them a few times I get bored.\" All I saw was red. The temptation to grab her by the throat and throttle her was very strong.\n\n\"Are you sure it's not just that THEY get bored with YOU?\" I asked. \"Maybe your charm wears off after one or two nights.\" I'd segued from being polite to being almost catty.\n\n\"Well it was on this evening,\" she said. \"And I didn't even need my charm. My CHARMS worked just fine. He couldn't take his eyes off of them.\"\n\nShe let her coat open up and I could see that she had on a T-shirt that was practically pornographic. I could see the entirety of her huge left breast.\n\n\"Did he see you like that,\" I hissed.\n\n\"Of course,\" she smiled. That was the point of doing it.\"\n\n\"So did you do it?\" I asked.\n\n\"A lady never tells,\" she smiled at me.\n\n\"What the fuck does that have to do with you?\" I hissed.\n\n\"Are you getting angry?\" she smiled. \"Or, are you just jealous that someone else played with one of your toys?\"\n\n\"Neither,\" I said. \"Just bored with you waltzing in here dangling hints of what may or may not have even happened. I have a very short attention span and I get bored really easily. You came in here obviously trying to piss me off but I don't care about what you do or whom with, especially when all you're offering me is hearsay and a bad smell.\"\n\nAs she bent down to retrieve something, I noticed the bites on and between her breasts. The collar of her coat moved and there was bruising on her neck as well. Then she pulled it out and I got even more pissed.\n\n\"I got a souvenir,\" she said. She flashed a badge that I knew could only have come from one place. It was one of the badges that only US secret servicemen were issued.\n\n\"So much for hearsay,\" she smirked. \"But look, I don't want any bad feelings between us. We're too much alike. I just wanted to give you the heads up. The one place that you and I are different is in what you call scruples. I don't take anything seriously. If I run into a guy that I like, we fuck and that's it. I don't care who they were with before me or afterwards. \n\nYou, on the other hand, get into a lot of long relationships that ultimately go nowhere. I think the big difference between us is that I'm having more fun. So I just wanted to warn you that I've been there, so there are no bad feelings and things between us stay on the up and up. We had a contest, it's over. I'll be done with him in a day or two. And you can go after him or stay away from him. It's your choice. Of course, you could also try to take him away from me. That might be interesting and kind of fun; so few things are these days.\"\n\nAs Carmella flounced away humming some stupid tune, Gail and Liz came over to me. \"You know that she's probably lying, right?\" asked Gail. \"That just doesn't sound like him.\"\n\n\"She had his badge,\" I said. \"She had his fucking badge.\"\n\nI got up and walked away to find a place where I could be alone to cry.\n\n* * * * * *\n\nRick\n\nAs I watched the women coming out of the bungalow and getting into the limo to go to the festival something struck me as strange. Millicent wasn't with them. I went over to the agent that was assigned to protect her to find out what was going on.\n\n\"Man, I'm pissed,\" he said. \"I really wanted a chance to go to the festival and see it. But at the last minute she decides not to go. She sent her assistant and all of the other women went but now I'm stuck here. She's probably planning on sneaking off to go someplace more dangerous. We also had to split up because May decided that Arnie should go to the festival and watch out for her assistant. If she decides to leave the premises, I'm supposed to call for another agent to support me. So I'll probably just be standing out here for another four hours until you take over.\"\n\n\"I'll take over now,\" I said. \"It's not like I'm doing anything. \"\n\n\"Shit, I'd have thought you'd be in town at the festival with BBBB. Everyone here knows that she's hot for you.\"\n\n\"Who the hell is BBBB?\" I asked.\n\n\"The Big Boob British Broad,\" he said smiling and holding his hands out in front of his chest.\n\n\"She's not my type,\" I said, shaking my head. \"So you go on and have fun. I've got this.\" I took over for him and watched the doorway outside of the bungalow. My job would be just the same. I'd watch the entrances and make sure to prevent anyone unexpected from entering the area.\n\nIf someone showed up and wanted to see Millicent, I'd walk them back to her and make sure they were expected and not a threat. Gail and Patty would be with her around the clock anyway and in the case of real trouble, they were the last line of defense. I was just the gatekeeper.\n\nAs I stood there, my mind wandered and I thought back to the poem I'd written about my job earlier. Shit, I'd thrown it away when the English woman came over to sit down.\n\nI rewrote it as I watched over her through the night. A couple of things happened during the early evening while I watched over her. Gail came out and got her something to eat. Gail looked at me as if I'd done something wrong but we didn't have time to talk.\n\nIt was very close to midnight when the women came back from the festival. They were all smiling and talking about what they'd seen and what they'd done. The two British women were drunk and had to be led inside the building. \"Hey you, don't forget our rain-check,\" Carmella slurred at me as she passed. Millicent's assistant glared at me. I just shook my head.\n\nI wished that I could go into the palace and check my E-mail. But I couldn't leave my post. My iPhone didn't work here and I could get E-mail on it but only in a place that had Wi Fi and the network inside the palace didn't have the range to reach the bungalow. I was sure that by now my lawyer had some kind of information about my complaint against Danielle. For the rest of the evening, I just hung out outside of Millicent's quarters.\n\nAt eight o clock the next morning, I was replaced by another agent. I went back to my quarters and changed clothes. I wanted to get a run in before I went to sleep. I ran through the streets of the city just outside of the palace compound. The houses were tiny and old fashioned but appeared to be well maintained. Seeing them made me think about the house that my daughter lived in. Was I doing her a disservice by not doing more about the upkeep of the place? It just seemed to me that Danielle or the legion of men she paraded through the place should have been the ones taking care of it.\n\nThere was also the fact that I really didn't care one way or another about taking care of Danielle or anything she valued. Rina was the only person who mattered to me. Even as I thought about that, I realized that it wasn't true. Millicent's face flashed in front of my eyes and I laughed. I wondered why I'd even thought about her. It was probably something that if my brain had been considered a computer, would be a software glitch. Sure I cared about Millicent's well-being but only from the standpoint that her health and safety were my job. But was there more to it?\n\nAs I ran through the streets, I saw a lot of things. Some of them made me smile. Some of them made me long for home. There were lots of ancient, by our standards, vehicles here that were still apparently functional and on the road. There were also a few newer vehicles, mostly small imports that could easily cover the tiny, narrow roads here.\n\nI did see one thing though on my way back that jarred my senses and made me stop short. There, parked in the driveway less than a half mile from the palace, was a Mustang GT. It was an older model. But only one generation down. They made that body style from 1999 until 2004. The guy who owned it obviously took care of it. As I stopped to look at the car, I noticed that he'd made a lot of modifications to the car including vented brake rotors, bigger rims and an updated exhaust system.\n\nI stood there staring at the car and it made me think of home.\n\nThe door to the house opened and a small man with a scraggly beard came out. He too was smiling. He started talking and I didn't understand him. He switched to English.\n\n\"You like my car?\" he asked.\n\n\"Yeah, it makes me think about mine back home,\" I said. I spent another ten or fifteen minutes there outside of the house talking about Mustangs and life in general with the man. Then I ran the rest of the way back to the bungalow. I grabbed something to eat, showered and went to sleep.\n\n* * * * * *\n\nMillie\n\nAs soon as I woke up, Liz came over to me. \"Your eyes are all puffy,\" she said. It sounded more like an accusation than a statement.\n\n\"We've known each other for a long time Mill,\" she said. \"I've never seen you get this wound up over a man before. \"\n\n\"I don't know Liz,\" I said. \"For some reason that I don't understand, this one is special. I don't even know how it started. I think that my mom and dad telling me that if anything happened, to get to Rick started it. It just put the idea that he'd protect me no matter what in my mind. Then when I saw him...He's kind of cute. He seems almost vulnerable. When that idiot Mr. May picked on him, it just seemed natural for me to try to protect him as well. And every time I think about that, it just feels like something I'm supposed to do. It almost feels like he's already mine and we've been together for a very long time. I guess that's why yesterday hurt me so bad. It feels like he cheated on me. The funny thing about it is, that I've never hurt that bad when I guy I was dating, DID cheat on me. But Rick and I have never even had a God damned conversation.\"\n\n\"Exactly,\" said Liz. \"How do you even know that you'll like him if you do? You may have gotten yourself all worked up over nothing. You missed the opening of the festival last night. We had a lot of fun. Carmella sure isn't going through what you are. She looked around for him last night for a while and once she found out that he wasn't there she got drunk and partied with someone else. Prince Gregor seemed to be upset that you weren't there.\""
    ],
    "authorname": "StangStar06",
    "tags": [
        "cheating",
        "romance",
        "mustangs",
        "action & adventure"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/while-you-sleep-2"
}