{
    "title": "Harp Un-strung",
    "pages": [
        "Fair Warning: This story is going to be a long one, narrated by characters aged eighteen years.\n\nThis is my attempt at writing something with a mature and slightly morbid content. I hope you enjoy this story.\n\nTags -- High School, First Time, Romance\n<center>* * *</center>\n\n<center>Harp Un-strung\n\nTake me to a place far away\nAway from this chaos\nAway from this ache and misery\n\nTake me to a place far away\nWhere they never find us\nSinging and dancing\nTo music all night long\nBorn of my harp un-strung\n\nTake me to a place far away\nHold me tight\nAnd never let go of me</center>\n\n<center>Prologue</center>\n\nI wake up with a start.\n\nRivulets of sweat adorn my face as I blink away the vestiges of a nightmare. My breathing is ragged and uneven and my heart threatens to beat its way out of my chest.\n\nThe flashes of black, blue and white fade away as the seconds tick by, leaving behind a cold silence. Concentrating on the white wall ahead, I try to remember past the bright burst of colored light.\n\nA therapist suggested I write down my dreams in a diary...a hard thing to do when there is nothing coherent to write about. I sigh and groggily dismiss the dream, as I've done countless times before.\n\nThe pitter-patter of raindrops plays an eerie beat on the windowpane. It's a soothing sound in the dead hush of my room. I look at the clock on my bed stand, which cheerily blinks a bright red 5:04 AM.\n\nConvinced that sleep will not come any more, I trudge downstairs to the kitchen. The empty house is creepy, and it doesn't take a rocket scientist to figure out why my sister spends her vacation at college.\n\nIce-cold water helps to relax my agitated nerves. I drink some of it and splash the rest on my face. I lean on the kitchen sink. Calm breaths and the sound of falling raindrops permeate my senses as I feel myself relax.\n\nOut of the corner, something dashes towards me.\n\nMy equilibrium evaporates. The glass slips from my hand and shatters the silence of the empty house.\n\nShit.\n\n\"Look what you've done!\"\n\nMy dog bolts away. The sudden noise had frightened him, but he'll slink back in a few seconds to inspect his latest achievement. I hastily collect the bits and shards as best as I can. He sits down next to me after some time, looking with those big brown eyes, hoping I won't be angry.\n\nI can't help but smile.\n\nI pull him closer, and reassure him that nothing could ever be wrong with us. I could never be angry with him.\n\nHe's my best friend.\n\nSitting on the kitchen floor, I become painfully aware of how lonely I really am. The tears surprise me for I've rarely wept in the last two years. He snuggles closer. I hold him tight, afraid to let go of him as the emptiness rears its ugly head. For a few moments, I'm afraid to open my eyes, afraid of the reality I live in.\n\nAs the panic subsides, I pat his head and let go of him reluctantly. Bracing myself for the day ahead, I stand up and go back to my room, hoping in vain that sleep will take over.\n\nI lie on my bed, staring at the bare ceiling for the next half an hour.\n\n<center>Chapter 1\n\n~ Inside his head ~</center>\n\nSome days my thoughts are so biting and morbid, it takes even me by surprise. I make sure to stay cooped inside my house, refusing to talk lest anyone sees the person I really am. My behavior defines me as a sociopath, an anti-social best left alone to his own misery.\n\nIn my defense, I'll say that it's a rare phenomenon. Living alone in a two-storey house can do strange things to your sanity, but I live through it, one day at a time.\n\nMy life's a hell hole. It has been like that for the last two years. Loneliness and depression are my daily companions, and bad luck pops in to say hello once in a while. Some days the shit falls from such a height, I wonder if god himself had crapped on me.\n\nOh, and I just got expelled from school.\n\nIt was nothing. The star quarterback told me that I cried for \"mommy\" in my sleep. I said I didn't. He insisted, and the next thing you know, he has a busted kneecap. His entire life was ruined in just five seconds.\n\nAunt Sherry could've won an Oscar for her stellar performance that day -- begging on my behalf, and imploring the principal that I didn't deserve an expulsion. She said I deserved mercy. It broke my heart to see her like that.\n\nThe Head finally agreed, transferring me to my cousin's school with glowing recommendations. Provided I kept my nose out of his school for the rest of my life.\n\nThe drive back home was terrifying. I'd made my peace with god as soon as my aunt was summoned.\n\n\"So, Michael,\" she finally asked as we stopped at a red signal. She looks just like mom, sans her deep-brown eyes. \"What did that boy say exactly?\"\n\nI was truthful, repeating his insults verbatim. It was hard not to get angry, but an involuntary fear of my aunt kept me in my place. Her expression remained stoic as she digested the information. I waited for the howl of reprimand, the ones that Daniel usually gets every morning, but it never came.\n\n\"And how bad did you hurt him?\" she asked quietly.\n\n\"I broke his nose,\" I said hesitantly, \"and...and a leg.\"\n\nShe sighs in defeat. \"I don't know what to say, Michael. If I were you, I would've done the same thing.\"\n\nNothing else was said on the way back home.\n\n<center>*</center>\n\nI surface from the reminiscence and stare at the clock again.\n\nIt's 5:42 AM. The drizzle stopped a long time ago.\n\nI drag myself out from the warm sheets, hating the feel of being exposed to a bitter morning cold.\n\nTrundling to the bathroom, I stare at my reflection in the mirror. I've made a habit of studying it every day. My face gives me an insight, a window to what goes on inside my head. With time, I've learned to hide my feelings behind a mask, but in the mirror with only myself to see, something is revealed every now and then.\n\nToday, I'm a mess.\n\nWith bloodshot eyes and tornado-swept dirty blonde hair, I can easily pass for one of those homeless drunks squatting in the local park.\n\nI shake my head to get rid of the sluggishness creeping throughout. I brush my teeth and splash my face with the icy water. The shock rejuvenates me as I gear up for the day. Tying up my shoes, I set out for a much needed morning run.\n\nThe parks, trees, roads -- everything has remained the same for the last few years. The bright mellow sun cheerily heralds a new day. Its cleansing ray washes away my earlier gloom. I stop at the local park to catch my breath. Filling my lungs with the crisp morning air, I exhale quietly, feeling the stress ease out of my conscience.\n\nNew school, new environment, new people...it's something that I have a hard time acquainting myself with. Perhaps I can, if I'm willing to try. I just don't have the heart to do it.\n\nI always used to wonder who invented the concept of schooling. If I knew, I would've buried his body in my front porch and make it a point to walk over his grave when I left for school every morning.\n\nI hate school.\n\nNo, it's not the grades I'm worried about. It's the animals inhabiting the place. Screeching, leering and always chattering. Their behavior never ceases to amaze me. My last school was a horrible example.\n\nI'm happy, for now. Getting rid of my previous school had taken an immense load off my chest. The morbid thoughts start creeping in when I'm alone. Otherwise, as long as I have people around myself, I seem to work fine. The crowd will notice a new guy in the middle of a school session, but they'll forget about it pretty soon.\n\nPublic memory tends to be very short, should I remind you.\n\nI take a quick shower, make a palatable breakfast of milk and sandwiches, grab my bag and set out for school on my bicycle. I only have to peddle a few meters to reach Aunt Sherry's house. She's my next door neighbor.\n\nMy cousin opens the door as soon as I press the buzzer.\n\n\"I'm up!\" My cousin yells. \"MOMLOVEYOUGOTTAGOBYE!\"\n\n\"You don't have to update the whole neighborhood,\" I say.\n\n\"They hafta know that the Warners are still alive, matey,\" he deadpans.\n\nJust then, a shout...nay, a roar, pierces the peaceful morning air.\n\n\"DANIEL!\"\n\nHe winces at the near physical impact of the words.\n\n\"COME BACK HERE AND FINISH YOUR BREAKFAST!\"\n\nI roll my eyes. It's the same drama almost every morning. The difference this time is that we won't be parting ways at the intersection.\n\nWith a visible slump in his shoulders, my cousin drags himself back into his house. I have to follow inside as usual and offer moral support.\n\nAunt Sherry's house is the same size as mine, but a lot cleaner and tastefully decorated. Being a single Mom who worked from home, she had single-handedly raised Daniel and promised to raise me up with him as well. And she didn't fail in either.\n\nDaniel is the valedictorian of his class. He has already earned scholarships to reputed Colleges up North.\n\nMe?\n\nI haven't commit suicide yet. I can chalk that up to her support.\n\nRight?\n\n\"I'm so sorry you have to see this, Michael,\" she says as soon as we enter inside. Turning back to my cousin as if I'm not there, she yells, \"EAT UP YOUR BREAKFAST, PRONTO!\"\n\n\"We're early anyway.\" My voice is a despicable squeak as compared to her mighty roar.\n\n\"I hope everything's fine, Michael?\"\n\n\"Yeah, of cour-\"\n\n\"I'M WATCHING YOU DANIEL!\" She bellows out loud without even turning her back.\n\nMy cousin was quietly trying to stash the breakfast into his bag.\n\n\"Jesus Mom! Even Banshees don't scream that loud.\"\n\nI grin. It's one of those rare moments where I feel like a part of the family. For those precious moments, nothing feels out of place.\n\n<center>*</center>\n\n\"Keep your head high, shoulders straight and put that I-don't-take-crap-from-no-one face,\" Dan instructs me with a serious look. It feels as if we're about to raid an enemy base camp.\n\n\"Roger that.\"\n\nDaniel's school isn't much different from my previous one. Different location but the same ole shit. These were standard procedures for a newbie anywhere.\n\nThe building is a standard white, not much bigger than the one I was kicked out of. Students litter the grounds in front of it, many in their own groups. I get a few stares as some pinpoint me as the new guy.\n\n\"Meet my friends,\" Daniel says cheerily. \"Guys, this is Michael. Michael, these are guys.\"\n\nI had expected his friends to be a typical bunch of social misfits. Turns out they're pretty cool.\n\n\"I'm Sam,\" The first one with jet black hair introduces himself. His handshake is firm. Not too tight, not too flimsy either.\n\n\"Call me Mike.\" I offer a genuine smile.\n\n\"Welcome to the jungle, Mike.\" He winks, and I take an instant liking to his easy air.\n\n\"Nathan.\" The next one shakes my hand.\n\nHe's huge, easily towering over me by half a foot. Judging by his voice, he's a soft-spoken person. A small grin splits his dark face. \"I'm the jock around here.\"\n\nSomething must've shown on my expression because Dan jumps in quickly. \"Mike had a bad experience with a jock.\"\n\nI throw my cousin a dirty look and he seals his mouth shut.\n\n\"Oh.\" Nathan's grin gets even wider. \"Don't worry. The only thing I've ever kicked around here is the school football and our Danny boy here.\"\n\n\"Hey!\" My cousin cries indignantly.\n\n\"Just kiddin'.\" He laughs. \"Nice to meet you, Mike. Call me in if you ever need help. They say my size is enough to scare away most of 'em.\"\n\nI grin. \"I will. Nice to meet you too.\"\n\nThey're good people. Every one of them.\n\nSam looks around. \"Where's Nina? You have to meet her.\"\n\n\"She's stuck somewhere else,\" Nathan says. \"She'll be back before lunch.\"\n\n\"C'mon, let's go before we're late,\" Dan pipes up. Then he smiles. \"Heads up, Mike, you're in Sam's Class.\"\n\nLucky me.\n\n\"Barring a few nuts, you'll be fine.\" Sam opens the door for us both.\n\nWe enter the hallway -- a typical affair with lockers adorning both sides of the wall. A few more students take notice. They take a glance before realizing that I'm not worth their time. I couldn't care less. I'll be more than happy to remain an anonymous for the rest of this session.\n\nThere's a girl standing just outside my designated classroom. Raven black hair, pale skin, extremely beautiful and way out of my league. She was chatting with a mousy brunette before she noticed me.\n\n\"Who is he?\" she asks.\n\n\"He's new,\" Sam speaks for me.\n\nShe evaluates me with a slight cock of her head. Her eyes are a pale grey.\n\n\"Oh, a new guy,\" her voice is lightly amused, a slight sneer clearly evident. She reminds me of the bitches from my last school -- heads full of thin air and noses stuck high in the sky.\n\n\"Let's go,\" Sam says, ignoring her.\n\nWe brush past her and enter inside.\n\n\"Cheerleader bitch?\" I ask quietly.\n\nSam grins. \"Close.\"\n\nI take my designated seat in the middle of the class. As much as I'd like to sit near Sam, I don't think he'll be of much help in here. Dumping my bag on top of the table, I sit down with a sigh.\n\nDear Jesus, I pray silently, please don't fuck this for me.\n\nI swear I heard his laughter.\n\n<center>Chapter 2\n\n~ Ice Queen ~</center>\n\n\"Claire, please!\" Jim whines pathetically.\n\nI throw him a dirty look and, like a dog trained to obey, he shuts up. The bastard has been sleeping around behind my back.\n\nI feel angry. Angry at myself at not being able to hold onto him. Frustrated too, because he could've slept with any of my friends all these months.\n\nAnd sad because of my own...incompetence.\n\nI have to get rid of him before he makes a scene.\n\n\"You know what?\" he says angrily. \"You're just a frigid bitch!\"\n\nThat's it.\n\nI stamp on his right foot. He howls in pain and hops around madly. I shove him back. With a foot out of duty, he lands flat with a satisfying thud. He's still howling as I enter the cafeteria.\n\nMy girlfriends greet me. I greet them back with a smile, all the while boiling with a rage inside, wondering which of these two-faced bitches slept with my boyfriend all along.\n\n<center>*</center>\n\nMy brother used to say that you could tell a lot about people just by looking into their eyes -- their emotions, their thoughts, their evasions, their lies. It's a window to their soul. By the senior year, I had figured out almost everyone. The nerds, the jocks, the princesses, the so-called upper class, the so-called lower class -- no one escaped my scrutiny.\n\nI see lust in Jim's. It's not a bad thing, but seeing it all the time is disheartening. I didn't know how long I could resist. One day, I would've caved in and given myself away. I needed an excuse to break up with him, and he gave it to me on a silver platter.\n\nMy girlfriends -- lying, conniving bitches, all of them -- aren't what I'd consider as my friends. Given a chance, any of them will stab me in the back and bring me down.\n\nThen there's Dan Warner and his group. They look so...happy, so carefree and honest. I can't chat with my friends in the cafeteria without being interrupted by their howls of laughter. I've never seen so much liveliness clustered in a single place. How I wish I could shut them up for good.\n\nThen there's this new guy.\n\nHe's a mystery.\n\nI've interacted once with him on his first day. I wish I had behaved better, instead showing off my bitch persona. He didn't deserve it.\n\nHe uses aloofness on the exterior as a shield. Underneath his liquid brown eyes, there's a hint of sadness. Something that was happy, but a long time ago. A part of his real self emerges when he laughs without a care, but the sadness...it remains. In time, I'll figure him out too.\n\nIn the meantime, I have other priorities to deal with.\n\nThe news of my break-up will spread out like wildfire. Guys will mill around to fill the vacancy, but I'll pretend to be depressed about it. Hopefully, I can last through the rest of the school session without having to keep someone for company.\n\nLuckily for me, school ends today without another incident. I race back home and fall face first flat on my bed. My head throbs. My phone rings just then, making in groan in frustration. Contemplating suicide seems like a very viable option at this moment.\n\nI look at the screen, and my headache disappears just as quickly.\n\n\"Joyce...\"\n\n\"Is Claire Bennet dead?\"\n\nFor the first time in several hours, I laugh. And admittedly, it feels good.\n\n\"She's close to that stage.\"\n\n\"What happened?\"\n\n\"Don't ask,\" I reply glumly. She has her own problems. Letting her worry about my crap is the last thing I want.\n\n\"It's Jim, isn't it?\"\n\nDamn. There isn't a single thing I can hide from her. Somehow, sitting hundreds of miles away, she can always read my mind.\n\nI sigh. \"Yes.\"\n\n\"Do you want to talk?\" she asks.\n\n\"No. Yes. I-I don't know.\"\n\nJoyce is the only sane thing left in my life. With her, I can lower my walls and be myself. I laugh, cry and snort freely. She never judges me. I really wish I could be with her right now.\n\n\"Okay, tell me this -- did you break up with him?\"\n\n\"Yes, of course I did.\"\n\nShe breathes out a sigh of relief. \"About time you got rid of that leech.\"\n\n\"Leech?\" I ask, grinning. \"You thought he was a leech?\"\n\n\"Yes,\" she states firmly, \"an emotional leech that needed to be taken care of sooner. Seriously, I don't know how you stood him all this time.\"\n\n\"Joyce, I don't want to talk about him anymore,\" I say softly. \"Tell me what's up with you? What did the doctor say?\"\n\n\"Oh,\" she falters at the sudden change of topic. \"Dee gave me the permission to do light physical activities. I can now run for five and a half minutes straight without feeling dizzy or nauseous.\"\n\n\"Wow,\" I say, \"that is good news!\"\n\n\"And Dad said he'll let me join college if I get well enough!\"\n\nJoyce was diagnosed with a rare cerebral disease at birth. She used to have irregular fainting spells. Other than walking and physical activities that required little to no exertions, she was restricted to the confines of her house and its four walls.\n\nHer Dad, my Uncle, did everything he could to make life easier for his only daughter. Home schooling, physiotherapy and what not. She has no social life, but she didn't let it hinder her faith that she'd be able to live a normal life someday. She has shown good signs of recovery of late. I hope she can attend college next year like she always wanted to.\n\n\"Make sure you learn some kung-fu,\" I say, \"for you'll have to defend yourself from the lust-crazed guys in college.\"\n\n\"Oh, puh-lease!\" she says bashfully. \"I'm sure they'll find someone who's more beautiful and doesn't stammer.\"\n\n\"No, they won't,\" I say firmly.\n\nInferiority complex is another drawback my cousin has. If only she knew how beautiful she is.\n\n\"Gee! You're too good for my ego.\" She giggles. \"I think I'll kidnap you someday and stuff you in my trunk.\"\n\n\"Oh, that'll be wonderful!\" I exclaim. \"At least, I won't have to deal with the professional nuts in my house.\"\n\nMy cousin ends in a fit of hysterical laughter. She's amused by how much I hate my parents, and I use the fact mercilessly, just to hear the sound of her laughing.\n\n\"Okay, Claire, it's time for me to go. I'll call you later, okay?\"\n\n\"Make sure you have my kidnapping trunk ready, and make it comfy too.\"\n\nShe laughs. \"Of course, I will. Take care, Sweets.\"\n\n\"You too.\"\n\nAnd with that, she ends the call.\n\nI keep the speaker close to my ears, not wanting the feeling of euphoria to stop. But like all good things that come to an end, the reality dawns over me. Taking a hard swallow, I close the screen and set my phone aside.\n\nA few years ago, I tried to commit suicide but I chickened out at the sight of the blade. As soon as Joyce heard about it, she flew all the way over just to see me.\n\nShe said nothing, preferring to hold me in her warm embrace. I bawled like a baby for the first time after my brother died. I don't remember how long because I cried myself to sleep in her arms.",
        "I don't know where I'd be without her.\n\nMy parents?\n\nThey didn't have a clue about it.\n\nNot that they'd care even if the news reached their ears.\n\nJust reminiscing those days gives me a bad shudder. I wait for the mild panic attack to subside as I take a deep breath before steeling myself for the day ahead.\n\nOne day at a time, I cajole myself, one day at a time.\n\n<center>Chapter 3\n\n~ Mundane Happenings ~</center>\n\nThe dying rays of the evening sun light up the sky in a dark hue of violet. Orange clouds laze above, seemingly unaffected by the turbulence of humanity below. The walk back home is a slow one -- partly because I don't want to be cooped inside, but mostly because I loathe the immediate silence after socializing with people.\n\nIt was my choice to live alone. The silence helps me think clearly, and I'm able to concentrate on my thoughts better without having someone around, breathing down my neck.\n\nOver the last two years, I have become sufficiently independent. I know how to cook (my loyal taste buds fully agree), wash dirty linen and wipe the surfaces. My only luxury is a cleaner hired by Aunt Sherry who makes sure the house remains in its pristine condition.\n\nI insert the key, and enter the house quietly.\n\nDark, creepy and classy -- my house will give Dracula a run for his money. With a flick of a switch, the lights come alive, bathing the house in a soft, warm glow. Mom invested in some classy, designer lighting. It's one of the few things that make this house worth living in.\n\nSnuffles pads up to me wagging his tail and demands his daily dose of affection -- a bribe of his favorite dog food -- that I'm more than happy to provide.\n\nHe's the chief of the dogs around here, so I never had to worry about him getting bored. He recruits dogs to help him hound the other dogs in our neighborhood. He never interferes in my routine and has been a silent, albeit annoying, guardian to me all these years.\n\nI wash my hands and enter the kitchen. Donning my Bluetooth headphone, I start chopping the vegetables for dinner. My favorite is a broth loaded with diced vegetables, strips of cooked meat and various assorted spices. After a few disastrous trials, I got the combinations right and stuck to it ever since. As I turn off the gas, my smartphone rings.\n\nAnd there's only one person on God's green earth who would call me at this time.\n\n\"Hey sis,\" I greet her.\n\n\"Hiya studdly!\" she chirps back in a horrible, godforsaken accent. \"Whatchha doin?\"\n\nIt's the same as ever. She enquires about my health, and I ask about hers in return.\n\nEmma feels guilty leaving her baby brother alone in this miserable house. She phones me now and then just to make sure I haven't done something stupid. My news of getting \"transferred\" to Dan's school has nagged her suspicions, but she was glad I would have Dan to keep me company.\n\n\"Scored any girlfriends?\"\n\nThis is one of those few times she needles the subject.\n\n\"Why are you so interested in my boring life?\"\n\n\"Oh, come ON!\" she wheedles. \"As your adorable and awesome big sis, I have the right to know.\"\n\n\"Don't worry; your brother is the owner of a successful harem,\" I reply blithely. A dead silence greets me back from the other end as I pour my dinner and take a careful sniff of my handiwork. It's spicier than necessary.\n\nPerfect.\n\n\"Bummer,\" she says after some time.\n\n\"I don't have the time, sis.\"\n\n\"Hermit.\"\n\n\"Whatever.\"\n\n\"All that is left for you is to run naked in the Himalayas.\"\n\nDespite the many times I've wanted to strangle her, she always brings a smile to my face. We talk for a few minutes more before saying our goodnights. I take a seat in the huge dining table and say my daily prayer with a religious fervor:\n\n\"May the gracious lord have mercy to prevent thy humble servant from choking on his own rations. Amen.\"\n\nAfter wolfing down my meal and cleaning up, I visit Daniel's house for one of our clandestine nightly meetings. Our discussions usually start with current events, and slowly veer towards girls and women of our school and beyond. It always does.\n\nDan and my sister are the brains of our family. No doubt whatsoever. Dan coached me so well that I excelled in almost every major subject. It's a boon. On the flipside, I doze at the insanely boring lectures.\n\n\"Guess what,\" he begins. \"There's a major upcoming project in socials.\"\n\n\"I hate that topic,\" I groan.\n\n\"You can to do a nice expos\u00e9 on Little Home. I'm sure Claudine can help you out with the details.\"\n\nMy mood takes a U-Turn immediately.\n\n\"The project will be a walk in the park, literally.\"\n\n\"Yeah, here comes the catch.\"\n\n\"What?\"\n\n\"It's a team-work. You'll be paired with one of the girls, and your partner won't be of your choice. It depends on your academic track record.\"\n\nI had a good record in my previous school. Perhaps that won't count.\n\n\"So, I'll be paired with...?\" I ask hopefully.\n\n\"You're new, so you'll be paired with someone whose record is neat.\"\n\nThat'll take some load off my chest, at the very least.\n\n\"What about you?\"\n\nHis grin is outright creepy. \"I usually get paired with Missy. She's an absolute delight to work with.\"\n\nNina had taken some time out at lunch to hammer in the names of a few prominent members of my new school. Redhead, busty and an impossible ass -- that's all I remember about Dan's partner.\n\n\"Let me guess,\" I say, \"she's stupid?\"\n\n\"Of course, not!\" he exclaims indignantly, \"She's a highly intelligent - and a highly sexual - creature.\"\n\nHis obtuse innuendo doesn't take long to hit home.\n\n\"You didn't.\"\n\nHis sly, near maniacal, grin speaks for him. I know my cousin lost his virginity before he hit eighteen. With his looks and easygoing manners, he can charm his way into any Ice Queen's pants.\n\n\"She has a boyfriend, doesn't she?\" I ask.\n\nMatt is another jock gorilla of my current school. He'd love to pulp Dan if he gets the chance.\n\n\"So what!\" he says, and leans back in his chair. \"That ass can't make her happy, so I have to do his job instead. As long as she's, er, satisfied, I don't have to worry about it.\"\n\nIt isn't every day that my cousin narrates his sexual adventures in detail to a bumpkin like me. Listening to his exploits gives me the courage to start fantasizing about my own.\n\n\"What do you think?\" I ask. \"Can I have a shot at my partner?\"\n\n\"If I were you, I'd carefully stake her out and draw the lines first before making a move. Then I'd start with something like --\"\n\nI sigh. \"I wasn't being serious, Dan.\"\n\nI had to stop him before he started one of his goddamn lectures on sexual approach.\n\n\"Mike, you're eighteen! When the fuck are you going to be serious?\"\n\n\"When I find the right girl, I'll think about it,\" I say solemnly.\n\nI don't really believe I will ever find the right girl.\n\nMy cousin shakes his head in disappointment. \"Someday, you'll die a virgin and get canonized as Saint Michael, I tell ya.\"\n\n<center>*</center>\n\nHaving successfully blended in with the crowd, I got to know most of the faces. I'd like to credit this incredible achievement to my ninja skills, but the hard fact that a boring guy barely makes any ripple is a wonderful truth I freely admit to.\n\nMy current school...well, it isn't that bad. There are good guys and there are bad guys.\n\nAnd there are the ones in the middle.\n\nMy cousin and his rowdy group fall in the third category. Daniel made sure that I sat with him instead of moping about my own. His friends, now mine as well, don't talk about my past. Perhaps they already know, but they don't talk about it. They know their respective lines and choose not to breach it. I gladly return the favor and watch their backs.\n\nToday, I'll be assigned to a partner. Dan's words still echo inside my head. There's nothing I can do about the inevitable, except keep my fingers crossed. I hope that my partner's obnoxiousness is above my permissible levels.\n\nI don't know why this project is making me antsy. The beat of my pounding heart is an instinct that I've grown used to over the years. It's a premonition of something disastrous coming my way. Perhaps my partner is a murderous lunatic.\n\nWorse still, it would be a jock.\n\nIf that happens, I'd rather hang myself with old, smelly socks.\n\nThe teacher, Cate Mahen, enters the class. I watch with trepidation as she opens her file and takes out a printed sheet. She adjusts her spectacles and pores over through the list.\n\n\"I'm sure all of you are aware of the project and its details. There have been a few adjustments, but the idea remains the same. It's a team-work, and I expect all of you to cooperate...\"\n\nBlah blah blah.\n\n\"Partners once assigned will not be changed.\"\n\nDamn.\n\n\"Asher, Samuel,\" she calls out the first name on the list.\n\nSam stands up slowly, desperately trying to hide a smirk with his hand but fails.\n\nHe told me earlier that his regular partner faints with dread every time they're paired together. Despite Sam's reassurance that he'll do every bit of his share, his partner hyperventilates from day one. So, he goes with the flow and scares her whenever he gets the chance.\n\n\"Your partner will be Karen Marr.\"\n\nKaren, the mousy brunette sitting beside me, quietly bangs her head against the desk. She looks at Sam with dread, and Sam returns her gaze with an evil all-knowing wink. I can't help but shake my head. The moment isn't far when I'll be wanting to bang my own head.\n\nTwo people out of the picture. I hear a few more groans and giggles before my name pops up.\n\n\"Lehane, Michael,\" she calls out.\n\nI stand up, and smile sincerely at her. She reads the list, readjusts her spectacles, and pores through the list again. Then she looks at me over the rim of her half-moon glasses.\n\nI feel like a goat being scrutinized just before its slaughter.\n\n\"You're new?\"\n\nGo figure.\n\n\"Yes, Ma'am,\" I reply.\n\nShe looks back at her list. Did I somehow piss her off?\n\nChill the fuck out Mike, I cajole myself, it's just a project...a career-determining, make-or-break, larger than life project that you can't afford to mess up.\n\n\"Ah, yes. There have been a few changes to accommodate your name into the list. Although, that makes no difference...\"\n\nSay the name already, four-eyes.\n\n\"You partner is...\"\n\n<center>Chapter 4\n\n~ Stranger Danger ~</center>\n\nMy guts freeze every time the teacher assigns a project in Socials.\n\nNot that I hate the subject, but I dread my would-be partner. Last time, I was paired with Jim, and I had to do all of his work. That asshole couldn't do anything other than whine about how less attentive I was becoming to him with each passing day.\n\nFucking leech.\n\nI watch people being assigned with their respective partners, and I pray that I don't get someone who'll mess this up. It's set-up in a random order most of the time. Prayers are the only thing that can save me.\n\n\"Lehane, Michael.\"\n\nHe stands up and puts a huge, outrageously fake smile on his face. His efforts are worth the snigger that erupts around him. Mrs. Mahen reads the list, readjusts her spectacles, and pores through the list again. Then she looks at him over the rim of her half-moon glasses.\n\nHe keeps shifting his weight on his feet, something he does when he's nervous.\n\n\"You're new?\"\n\n\"Yes, Ma'am,\" he replies brightly.\n\nShe looks back at her list again.\n\nIntroduction of new kids changes the pattern, wreaking havoc on the regular partners. Means there are chances that I won't be paired with asshole Jim.\n\nA big grin splits my face as I consider my options.\n\n\"Ah, yes. There have been a few changes to accommodate your name into the list. Although, that makes no difference. Your partner will be...Claire Bennet.\"\n\nPhew! She didn't pair me with --\n\nWait what?!\n\n\"Are you all right, Claire?\" she asks me.\n\nI jerk back to my senses.\n\nShit, shit, shit, shit.\n\n\"Yes, Ma'am...\" I say in the smallest voice possible.\n\n\"You made a strange noise. Are you sure? The doctor might be available...\"\n\n\"That won't be necessary, Ma'am,\" I insist, trying to squeeze myself into a smaller size. I hope he didn't notice me.\n\nShe nods absentmindedly and goes back to the list. Lehane was observing me all this time. I soooo hope he doesn't recognize me as that bitch from Day One. His face reveals nothing, but his eyes say it all.\n\nAnxiety, anger...disgust.\n\n\"Michael, you may sit now.\"\n\nHe sits down quietly, and throughout the rest of the class, he doesn't move a muscle. I don't know if I should be happy, or curse my luck instead.\n\n<center>*</center>\n\nApparently, I'm an incorrigible bitch in his eyes.\n\nSo what?\n\nI don't care what he thinks about me. I never cared what anyone thought about me. Why should I be bothering about him?\n\nScrew him, says my erratic inner voice. Who cares?\n\nHe matters because he's a potential screw-up for your career, says my more sensible inner voice.\n\nI sigh in defeat. There's no way I can do this all alone. I need his cooperation, even if I have to drag him buck naked, screaming and kicking and lock him inside a dungeon.\n\nIt's funny how a simple project can put students through so much mental drama. I'm hyperventilating and cooking up wishful scenarios. Perhaps, he isn't that mean, or nasty. I have to try and see for myself.\n\nThe cafeteria din is unnoticeable as compared to the noise of my inner thoughts. I should've been more alert as I suddenly see Jim approaching me.\n\nToo late to make a run.\n\nI really wish Mother Earth could swallow and puke him somewhere far, far away from me.\n\n\"Claire!\" he exclaims, his voice agitated. \"I'm trying to convince Mahen to get us back together. We'll totally ace this project.\"\n\nYeah, you and I together sound so good.\n\nSaid no one ever.\n\nI ignore him as he rattles on about his teacher conspiracy theories and other bullshit. Out of the corner of my eye, I notice Lehane making an exit from the cafeteria.\n\nThis might be my chance.\n\n\"Shut up,\" I order Jim briskly. His jaw is hanging midair, stuck between repetitions of some mumbo-jumbo, as I hurry towards my grumpy partner.\n\n\"Hey!\" I call.\n\nHe doesn't stop, and walks out of the cafeteria.\n\nStupid me. What was his name?\n\n\"Michael Lehane!\" I call again, and he stops this time. He turns around and looks directly at me. He's partly surprised and partly annoyed. Up this close, his liquid brown eyes are...mesmerizing.\n\n\"Yes?\"\n\nI screech to a halt and pause to collect my scattered thoughts.\n\n\"We're partners,\" I say lamely.\n\nDamnit, take control, Claire!\n\n\"So?\" He isn't making it any easier for me. I don't know if it's deliberate.\n\n\"Look we're partners,\" I say, \"and we have to work together. If you get lesser marks, so do I.\"\n\nHe cocks his head slightly to the right. \"So, you're implying I'm stupid?\"\n\n\"No!\" I insist. Pissing him off is the last thing I want. \"It's just that...I don't know you, and we have to start ASAP.\"\n\nHis eyes soften. Finally, I've made some sense.\n\n\"What do you want?\" he asks cautiously.\n\n\"Can I have your number?\" His eyebrows shoot up, and I add hastily, \"We'll have to talk after school and keep ourselves up-to-date.\"\n\n\"Anything else?\"\n\n\"Do you have any idea about this project?\"\n\n\"Dan filled me in with the details,\" he says. Of course, he's the cousin of the bloody valedictorian.\n\n\"Do you have something in mind?\" I ask. Maybe we could chalk out something.\n\n\"I have something in mind,\" he says with a nod.\n\nPlease, not the women's shelter, I pray. That has been done to death.\n\n\"Little Home, owned by Claudine Marie...have you heard about it?\" he asks.\n\n\"Of course I have,\" I exclaim. Everyone knows about her. \"But the project wouldn't be worth anything if we can't get an interview with the head.\"\n\nClaudine Marie refused to entertain any visitors unless they had urgent issues that had to be taken care of immediately.\n\nMy mother tried once. She was left red-faced.\n\nHe shrugs nonchalantly. \"She's a personal friend. She can't say no to me.\"\n\nNo. Way.\n\n\"That would be...great.\"\n\n\"When will we start working?\"\n\nI want to say now, but building a good temporary relationship with my partner is the first step. Pushing him around could backfire badly.\n\n\"Can we start tomorrow? You can ask Claudine, in advance, if she's willing to help us out.\"\n\n\"Anything else?\" he asks.\n\n\"Uhhm...nothing I can think of right now.\"\n\n\"Okay, then. See you tomorrow.\"\n\nWith that, he turns around and walks away. I realize my heart is beating erratically. I gulp and wait for it to slow down.\n\nWhat the hell just happened?\n\n<center>Chapter 5\n\n~ Mister Who ~</center>\n\n\"Spill!\"\n\nIt's hard to avoid Joyce's interrogation once she smells something. She's like a friggin' shark. As soon as she heard me on the phone, she demanded to know what happened earlier today.\n\n\"I said spill!\" she repeats.\n\n\"I told you there's no one.\"\n\nOops.\n\n\"I knew it. What's he like? I want names!\"\n\n\"Joyce,\" I insist, \"I swear he's just my project partner.\"\n\n\"Ooooooh!\" she teases. \"I like the way you say partner.\"\n\n\"Dammit, Joyce, I'm not joking!\" I say in my sternest voice, but end up giggling. It's never easy to remain serious around her.\n\n\"Alright, alright! So, seriously, what's he like?\"\n\n\"Umm...\" I think hard. It isn't easy now that I have to picture him. \"He doesn't speak much, like a reclusive mystery full of secrets.\"\n\n\"All that observation from one meeting?\"\n\n\"You know how much I like to observe people.\"\n\n\"Yeah, like a lil' dingo,\" she quips.\n\nI laugh. \"He's new, so I think his so-called allure will wear off once I figure him out. But I know that won't be easy.\"\n\n\"Is he rude?\"\n\n\"He isn't rude,\" I say, reclining back on my bed. \"He's just...cautious.\"\n\n\"Wow. Now, that's interesting,\" she says. \"So, what does he look like? Is he a strapping fellow?\"\n\n\"Joyce, you pervert!\"\n\n\"Guilty,\" she admits giggling, then she adds, \"but I'm really curious. You never blathered about a single guy like this before.\"\n\n\"I blathered on the phone?\"\n\n\"Yes you did. Now, don't change the topic.\"\n\n\"Okay, let me think about it.\"\n\nI start creating a mental image, and slowly his face comes alive. His dirty blond hair, his brown expressive eyes, his cute boyish looks that he's completely unaware of...his lean, yet toned body that are perfectly --\n\n\"Helooo? Earth to Claire!\"\n\n\"What?\"\n\n\"So what does he look like?\" she repeats slowly, as if I'm a dunce.\n\n\"He's unique,\" I say after some time.\n\nDead silence. Peals of laughter follow next. She gasps for breath, only to laugh again at a joke I don't remember making at all.\n\n\"Oh my god,\" she gasps after some time.\n\n\"Did I say something funny?\" I ask, genuinely confused.\n\n\"Oh, Claire!\" she says after she finally catches her breath. \"You won't believe me even if I held up a neon signboard in front of you.\"\n\n\"Try me,\" I offer.\n\n\"Trust me, you won't,\" she says after another fit of giggles. \"Okay, I have to take my medicines now. We'll talk tomorrow, okay?\"\n\n\"Uh huh.\"\n\n\"Bye, sweets! And thank you so much for the laughs.\"\n\nAnd with that she cut me off.\n\nThis time, I'm left staring at my phone. I don't remember say something peculiar...did I? But then, Joyce is very sensitive, and could be eccentric at times. I conclude that my cousin is nuts, and go outside for a much-needed walk.\n\n\nDate of Birth unknown.\n\nAbandoned at birth. Brought up in a now closed orphanage, and ran away at the age of eight. Several years later, organizes dozens of successful non-profit organizations including shelter for the homeless, children and orphans.\n\nAwarded at numerous prestigious events, felicitated twice by the President himself and once by the UNICEF. Voted by the Times Group as the most influential Feminist and Champion for the cause of Orphans and Homeless thrice in a row.",
        "She is Claudine Anna Marie.\n\nI pore over the near-endless list repeatedly. In earlier projects, I had to choose what more to add so that I didn't fall short of the required pages. Now I have to decide what to ditch so that I can compile this huge thing on time.\n\nI also realize that I don't have Mike's number. I didn't insist, and he didn't tell. Part of me says it was a deliberate move on his part because he doesn't seem like a callous person.\n\nI wait for the recess before I can approach him. He's scribbling something, and it isn't until I clear my throat that he even notices me. He covers up his shenanigans and looks up at me with unfocused eyes.\n\n\"Have you talked to her?\" I ask.\n\n\"Yes,\" he says with a curt nod. \"She'll have all the relevant files delivered to me. We can work it out from there.\"\n\n\"Will she agree to an interview?\" I ask. \"That'll seal a full A plus for us, you know.\"\n\nHe nods again slowly, and I can see a hint of tiredness that obscures his usual alert self. There are dark spots around his eyes. What has he been up to?\n\n\"Umm...are you okay?\" I ask.\n\n\"Huh?\"\n\n\"You look tired.\"\n\nI don't care what he feels like. I just don't want him messing up with my...our project.\n\n\"I'm fine,\" he says and shrugs it off as if it's nothing.\n\nHe's a terrible, terrible liar.\n\n\"I can compile the notes today and plan it out if you're not feeling well. We can start from tomorrow.\"\n\n\"I said I'm fine!\" he snaps.\n\nHe pushes back his chair and stands up. I step back in reflex. Looks like I came close to pissing him off.\n\nPerhaps I already did.\n\n\"Be at the Northern Greens at four o'clock today. She'll be there,\" he says, and walks out of the door.\n\n<center>*</center>\n\nNorthern Greens is about ten minutes away from where I live. It's easily one of the best places in this town at any given time of the year -- full of idyllic sceneries and a giant, shallow, man-made lake in the middle.\n\nI haven't visited the park in years. The last time I did, it was with my brother who wanted a safe place for me to experiment with his mini bike....and as always, it brings back depressing memories.\n\nIt's a weekday, so the park is mostly empty except for a large gathering of children near the forested area. Their shouts and shrieks of laughter are so loud that I can hear them even from this distance. A few uniformed caretakers mill around the perimeter, keeping a watchful eye on them.\n\nSlipping my hands into my front pockets, I walk towards the group. I can't see Lehane anywhere. A few children take notice of me, but they don't pay much attention. A little girl, probably three years old, was busy doodling on a paper when I approach her.\n\n\"Hello,\" I greet with a friendly smile.\n\nShe looks up at me in surprise. With her soft blonde hair and baby blue eyes, she's awfully cute. I can easily cuddle her to death.\n\n\"Do you know where I can find Michael Lehane?\"\n\n\"Mike?\" she asks.\n\nSo cute.\n\n\"Yes,\" I reply with a smile, \"Mike.\"\n\nShe stands up and leads me towards the lake where a lone couple sits by its shore with their back towards me. The child runs the last few meters, yelling her lungs out.\n\n\"MIIIIIIIIIIIKKE!\"\n\nI hear a distinct 'ooomph' as her body connects with his neck.\n\n\"You'll break my neck, Breanne!\" He laughs, and then he asks, \"What is it?\"\n\n\"Someone wants to see you.\"\n\nHe turns around and notices me.\n\nHe looks happy, content, free and...different. No kidding, but he doesn't look the same as he did in school earlier today. I wonder if it's the same grumpy guy I was acquainted with just a few hours ago.\n\n\"You said she'd be here,\" I remind him.\n\n\"Oh!\" he exclaims but doesn't get up. He turns towards the woman sitting beside him and says, \"Claudine, meet Claire. She's the one I was talking about.\"\n\nShe's sitting here -- just like this?\n\nClaudine half-turns and beckons me to sit down beside her. I swear my knees are shaking of their own accord. I approach her and sit down at a respectable distance on the soft grass.\n\n\"I don't bite, Claire,\" she says, laughing.\n\nI laugh with her...or try to, but it's a strangled squeak that comes out. Up this close, she looks even more attractive than the glossy magazine covers and more intimidating to my scared brains.\n\n\"I-I heard s-so much about you,\" I stammer. \"I can't even talk right.\"\n\nShe laughs. Michael smiles knowingly, but doesn't say anything.\n\n\"I really thought you'd summon me into your office,\" I confess. \"I didn't expect this.\"\n\n\"Relax,\" she says with a kind smile and pats my back gently. \"Ask whatever you want to.\"\n\nA constant, gentle breeze blows from across the lake and caresses my face with a warm touch. I can see why she must like this place so much.\n\n\"Would you mind if I record?\"\n\n\"No, not at all.\"\n\nI already had my smartphone at ready. With a single swipe, it starts recording.\n\n\"So, Miss Marie --\"\n\n\"You make me feel like an old hag, Claire. Call me Claudine.\"\n\n\"Okay, Claudine,\" I repeat with a grin, \"Could you tell me what motivates a person like you to...\"\n\n<center>*</center>\n\nWe laugh, crack jokes, and compete for the crown of unofficial self-deprecating humor contest. It's the first time in years I have had so much fun.\n\nShe minces no words and speaks from her heart. Her passion, her belief, her confidence and her knowledge shines through her eyes as she narrates her goals for life and the Trust. I just sit there, jaws agape and listen to her with my undivided attention.\n\n\"Your childhood must've been a big influence in what you are today.\"\n\n\"Of course, everyone's childhood influences them in one way or the other. Either you take it as a motivation, or you mope about it.\"\n\nSo true. It makes me wish for a different set of parents right now, or at least for people who'd care whether I live or die. She glances at her wristwatch, an intricate golden band with sapphire dials.\n\n\"Oops,\" she says. \"You must be getting late.\"\n\n\"What?\"\n\nI look at my phone, and gasp. A full hour flew by without me even realizing it.\n\n\"Time to go, dear,\" she says and stands up. \"You can ask me more if you feel something has been left out.\"\n\n\"I don't think anything has been left out,\" I say happily. It's more than I could ever ask for.\n\n\"Mike?\" She turns towards him. He has been sitting silently all this while, a comatose Breanne draped over his legs.\n\n\"Can you hand Breanne over to Freya? I don't want her to wake up now.\"\n\n\"Sure,\" he says. Lifting Breanne up as if she's a feather, he stands up and slowly walks over to the area where the caretakers are assembling and doing a headcount. As soon as he's out of earshot, she turns towards me.\n\n\"So, how long have you known Mike?\"\n\nThe sudden change of topic takes me by surprise.\n\n\"We didn't meet until we were paired up together for this project,\" I say. \"He doesn't talk much.\"\n\n\"How does he behave at school? Does he socialize now?\"\n\nShe must really care about him.\n\n\"He sits with his cousin's friends, but otherwise, he doesn't do anything.\"\n\nShe sighs out in relief. \"God bless Warner,\" she exclaims. \"At least he's doing something for his cousin.\"\n\n\"If you don't mind, can I ask something?\"\n\n\"Shoot.\"\n\n\"How did you two meet?\"\n\n\"I knew his Mom. We were very good friends. Mike has worked with me for the last two years. I wanted to help him, but he ended up helping me instead.\"\n\n\"What help?\" I ask, curiosity getting the better of me.\n\n\"He didn't tell you?\"\n\n\"Tell what?\"\n\nShe shakes her head, refusing to answer anymore. \"It's up to Mike. You should ask him.\"\n\nInteresting.\n\nI stand up, and help her up with me. We dust our backs, and head back towards where the children lined up. Mike is busy helping to contain the errant ones in the line.\n\n\"Are you done with your interview?\" he asks.\n\n\"Yes,\" I say happily. \"Thank you so much.\"\n\nI give him a hug.\n\nNot the awkward-cum-sideways hug, it's a full-blown bear hug.\n\nIt's not a show for Claudine or others around me, because I mean it. It's my own way of saying thanks. His body scent -- a light, tangy lemonade flavor -- permeates my senses.\n\nThen it hit my thoughts.\n\nGiven his...anti-social stance, he probably isn't used to such closeness. I separate just as quickly, noticing his wise-eyed expression. My brain races to bring something out to make me look less stupid.\n\n\"Thanks,\" I repeat in a small voice.\n\n\"Uh, it's okay I figured out how much you'd like this so, uh, it wasn't --\"\n\nI try hard not to guffaw at his flustered face. He looks adorable when he desperately tries to hide his insecurities.\n\n\"Thanks anyway,\" I repeat. \"I really appreciate it.\"\n\n\"Okay.\"\n\n\"Can we do a follow-up on today's work?\" I ask. \"There's still enough time for us to write an entire section based on today's conversations.\"\n\n\"Sure,\" he says, \"but the library is closed for renovation. We'll have to do it somewhere else.\"\n\n\"How about your place?\" I ask. \"I mean, if it isn't a problem for you. My place is too far away from here.\"\n\n\"No problem,\" he says understandingly. \"My house is a five minute walk from here.\"\n\nHe gives me the directions.\n\n\"I'll be there in a few minutes,\" he says and walks back to help the wardens.\n\n<center>*</center>\n\nI hum a long forgotten song as I drive through the narrow road, tapping my fingers on the steering wheel with the beat in my head. There's this big smile pasted on my lips that refuses to go away. I don't know where all this happiness is bubbling from. I just know that I feel happy...and relaxed.\n\nAfter three minutes, I reach an upper-middle class neighborhood. Driving through the rows and rows of beautifully made homes, I reach his supposed abode. Parking my car at a respectable distance, I climb up the small flight of stairs and press the doorbell.\n\nNo response.\n\nAfter waiting for another minute, I ring the doorbell again.\n\n\"I hope you haven't been waiting for too long,\" he says from behind me.\n\nI jump, but recover quickly.\n\n\"Sorry,\" he mutters, and proceeds to open the door. Inserting a key into the hole, he unlocks it.\n\n\"It's okay. I guess your parents are out on an errand.\"\n\nHe turns around and looks at me, considering me for a few moments. His eyes aren't clear, but I can sense his sadness. He wants to say something, but hesitates.\n\n\"They won't be back for a long time,\" he says and opens the door to his house.\n\n<center>Chapter 6\n\n~ Company ~</center>\n\nI enter the house and drop the keys on a nearby table. With the flick of a switch, the warm lights bathe the entire house. That's the least I can do to make this house look less creepy.\n\n\"Nice place,\" she comments.\n\n\"Thank you.\"\n\nSnuffles is nowhere to be seen, so I'm hoping he's out somewhere else causing trouble. I settle down my notebooks and files on the huge dining table as she puts down her bag on the opposite side. The dining room is an ideal place for us to work in. Definitely more spacious than my study desk. And besides, I don't want her sneaking inside my room.\n\n\"So, where do we start from, Mike?\" she asks. That's the first time she has called me Mike, instead of Michael.\n\nI like it.\n\n\"From the beginning,\" I say, \"the very beginning.\"\n\nMy thoughts regarding Claire are...mixed.\n\nMy friends filled me in about her the same day we were assigned as partners. According to them, she's a Grade A bitch, very goal-oriented and mean as hell. She wasn't a person I would want to mess with.\n\n\"Never piss her off,\" Dan whispered conspiratorially. \"I say you should ask the Head to swap partners while you can.\"\n\n\"She might be beautiful, but stare at her face and she'll bite your head off,\" Nathan joined in. I would've taken it seriously had he not been grinning like a maniac. The jolly fucker couldn't stay serious for a minute.\n\nI knew they were messing with me, but a part of my heart said it was true. I gauged a lot about her character when we met the first day. And I still remember that leer.\n\nIt still gives me the shivers of the wrong kind.\n\n\"I'll be fine, guys,\" I said with a shrug but apparently, it wasn't convincing enough.\n\nNina remained silent throughout our chatter. She hadn't said a single word since I announced the name of my would-be partner.\n\n\"What do you say, Nina?\" I asked her, and took a sip from my bottle.\n\nShe shrugged and went back to poking her lunch with a fork. Dan quietly shook his head at me and I got the drift. After my friends were done hyping her bitchy status, Sam spoke for the first time in minutes. Like Nina, he had been quiet all this while.\n\n\"Do you think she's hot?\" he asked, without any sort of preamble.\n\nI almost spat out the water.\n\n\"What?\" I sputtered.\n\n\"Oh dear,\" Nathan groaned in mock despair. \"He likes her.\"\n\n\"I never said that!\"\n\n\"Denial isn't the key to happiness, Mike,\" Dan chipped in with a serious look.\n\n\"I know, Pope Pervert.\"\n\nWhile they laughed themselves silly, Sam was still waiting for my answer.\n\n\"I think she's pretty,\" I conceded. \"But I don't see her in that light.\"\n\n\"We aren't going to razz you up if you like her,\" Sam said with a shake of his head. \"We're just asking you to be careful. Her ex-boyfriend was in hospital for a semi-fractured toe.\"\n\nCouldn't blame her, really. I was guilty myself of busting someone's knee cap.\n\n\"Especially stay clear of her friends and you won't burn yourself. You can thank me later.\"\n\nFast-forwarding to the present situation, I still don't think she's evil.\n\nGrade A Bitch? Probably.\n\nGoal oriented? Definitely.\n\nBut evil?\n\nI don't think so.\n\nThere's a reason behind every thing we do. Every motive, every intention has a cause. I'm sure she has her own reasons, but I'm not too concerned about it.\n\nI just don't care.\n\nChances are we won't speak after we finish this project from hell.\n\nShe's diplomatic, though. She knew that I'd be pissed off at the sight of her, so the first thing she did was to break the ice. Admittedly, her sugar coated words and meekness got the best of me. Even though I could see right through it, I fell for it like a deluded sucker.\n\nI think she dislikes me for some reason. She doesn't know me. Judging by the way she looks at people -- trying to figure them out and everything -- I'm damn sure she's pretty frustrated by me.\n\nI caught her a few times staring at the back of my head. I found it a bit creepy -- okay, a LOT creepy -- to have someone looking at me like that, but I can live with it. As long as she doesn't pester me about things, she can stare all she wants.\n\nI'll pretend not to notice.\n\nAs we sit on our seats doing our projects, I check her out on the pretext of thinking something through. She has a habit of chewing her lips lightly when she ponders over a difficult question. A pink tongue darts out to wet her lips as soon as she finishes a chewing session.\n\nCute.\n\n\"Should we include more about her childhood?\" she asks. \"I think it's interesting.\"\n\nShe knows the answer to this, probably asking me out of courtesy.\n\n\"Substantial materials are more important. We can use Claudine's back story as good filler material once we finish the project.\"\n\nShe smiles briefly and gets back to her scribbling.\n\nDid I pass her test?\n\nWe work for an hour, debating on the procedures and passing around ideas until we settle on one. She's really passionate about something once she sets her focus on it. She's much better at it than me, so I let her do most of the visionary work.\n\n\"That'll be enough for today,\" she says after an hour and a half.\n\n\"Yes,\" I agree. \"We can finish it within a week if we keep up this pace.\"\n\n\"That'll be wonderful!\"\n\nShe raises her arms above her head and then stretches some on her seat. Her pert breasts push out against her T-shirt, hinting at the shapes of two lovely globes of...damn, I shouldn't have looked. I avert my eyes and focus on the mahogany in between us.\n\nToo late. The damage was done. Mike Junior awakes from his slumber in my pants, wondering who the heck woke him up.\n\n\"We'll continue tomorrow from where we left off. Same place, same time. Is that okay?\"\n\n\"Uh...yeah, sure,\" I say, concentrating on mental images of spider shit and dead monkeys.\n\nDown boy!\n\nClaire pushes back the chair and stands up. I follow suit after I'm sure that my semi-flaccid dick won't be making an embarrassing tent in front of her. Opening the door for her, I let her outside. She turns around on my doorstep.\n\n\"Good night, Mike,\" she says with a hint of a smile on her lips.\n\n\"Good night, Claire,\" I reply.\n\nAs soon as she is out of sight, I slam the door shut and run to the bathroom as fast as I can. Unbuckling my belt and zipping down my pants, I push my jeans and underwear down in a single fluid motion.\n\nMy penis jumps out, hot and ready for some action. The picture of her luscious breasts pushing out against her tee pops into my head and my dick jumps up right on cue.\n\n\"I'm sorry, buddy,\" I whisper, \"I can't do this.\"\n\nI take a deep breath and feel the knots in my groin loosen after a few moments. My cock finally goes down, figuring out that it won't be the part of any action tonight.\n\nI don't masturbate that often, but the luscious sight of her breasts woke up my libido from its coma. The reaction took me completely by surprise. Thank God, I abstained. I would've felt guilty for giving in to my dick about...her.\n\nClaire doesn't come off as a sexual person. She doesn't give the inviting looks, nor does she wear anything provocative. It's always the right, proper clothes that any self-respecting teenager wears these days --designer form-fitting jeans with a complementary, usually dark, expensive T-Shirt.\n\nYes, she's beautiful, but I have a feeling that she desperately tries to hide her sex appeal. That fact compounds the guilt when I think of her like that. It's childish and juvenile and...hot.\n\nI shake my head again to clear my thoughts. As I don my headphones, the doorbell rings.\n\nWho could it be at this ungodly hour?\n\nThe peephole reveals Claire. An unsightly frown mars her beautiful face.\n\nDid she somehow divine that I was about to sacrifice a few million sperms in her name? I've never had the opportunity of meeting people right after devoting dirty thoughts to them. It's the weirdest feeling I've had in a while.\n\nTaking a deep breath, I open the door.\n\n\"Claire?\"\n\nShe has been crying, tearstains still visible on her cheeks. I open the door further and quickly usher her inside.\n\n\"What happened?\" I ask as she sits down on the edge of sofa. She's very tense.\n\n\"Can I bunk at your place for the night?\" she asks. \"Please?\"\n\nNo way.\n\n\"Of course, you can,\" I assure her. \"But...what happened?\"\n\n\"My parents are back,\" she says, \"and I don't want to go back home.\"\n\nI would've given an arm and a leg to be with Mom and Dad right now, and here she is -- running away from hers. Tomorrow is weekend, so I could easily host her until then.\n\n\"Okay,\" I say and gear up mentally for the inevitable. \"Just call your parents and say you're staying at your friend's house, or at least call someone who'll inform them of your whereabouts. I don't want to be booked for kidnapping.\"\n\n\"I will.\" She smiles. \"Thank you.\"\n\n\"I'll see what I can do, okay?\"\n\n\"I'll call my people and let them know.\"\n\nI turn towards the kitchen, but she calls me again. \"Mike?\"\n\n\"What?\"\n\n\"Thanks again.\"\n\nA smile finds its way on my face. It has been a long time since I was anything but alone in this house.\n\n\"Don't mention it,\" I say, and leave her for a bit of privacy. Despite the distance, I can hear her angry voice over the whirr of the kitchen chimney and the noise of chicken strips being fried to perfection.\n\n\u201cWhat do you mean I can\u2019t stay out tonight? I\u2019m not a little girl!\u201d\n\nMy ears perk up against my own will. \n\nOkay, sue me. I\u2019m nosy, but I can\u2019t help it if I can peek into someone else\u2019s life.",
        "\u201cTell them that their darling daughter is staying at a friend\u2019s house for a school project. She\u2019s perfectly capable of taking care of herself. Good BYE!\u201d \n\nSarcasm drips from every word, and it is the first time I\u2019ve seen Claire losing her cool. I make a quiet mental note to not piss her off in the future. I hear the chair being pulled as she sits down at the kitchen island behind me.\n\n\u201cSorry for that,\u201d she says quietly.\n\n\u201cIt\u2019s okay.\u201d\n\nShe says nothing, until she notices the weird thing about my entire house for the first time.\n\n\u201cYou cook?\u201d she asks incredulously.\n\n\u201cYep,\u201d I say convincingly. \u201cChef Mike has an experience of more than two years.\u201d\n\n\u201cWow\u2026that smells nice,\u201d she says. \u201cI couldn\u2019t cook worth a damn even if my life depended on it.\u201d\n\n\u201cIt\u2019s not that hard. You\u2019re a fast learner, so you\u2019ll have no problem,\u201d I reply. \u201cI hope you like this. You aren\u2019t a vegetarian, are you?\u201d\n\n\u201cNo, I\u2019m not.\u201d\n\nThank God.\n\nI pour the broth into a ceramic bowl, a new culinary piece I had taken out especially for her, and lump the vegetables and meat into it. I\u2019m being careful not to add too much of anything, lest she feels sick later on.\n\n\u201cTell me what you think about it,\u201d I say, serving the bowl and spoon in front of her. A small smile plays on her lips as she takes a tentative sip. I sit down opposite to her and hold my breath in anticipation.\n\nPlease don\u2019t puke, please don\u2019t puke\u2026\n\n\u201cYou\u2019re a really good cook!\u201d she exclaims, and takes a larger sip.\n\n\u201cReally?\u201d It feels good to have your cooking skills praised by someone other than your own taste buds, especially someone like Claire.\n\n\u201cIt\u2019s the best thing I\u2019ve had in a while!\u201d\n\n\u201cThanks.\u201d  \n\nMy heart is busy doing summersaults of joy. I barely eat half of my portion, when she finishes and asks sheepishly for a second helping.\n\n\u201cI get hungry when I\u2019m upset,\u201d she says softly, as if she\u2019s ashamed to admit it.\n\nFor the first time, it gives me a glimpse to the vulnerable girl inside her. The fa\u00e7ade she keeps up slides away, showing me her natural, unprotected self. A stereotyped girl, so eager to prove her worth that she forgets what she wants for herself.\n\n\u201cPlease, don\u2019t be shy,\u201d I urge her.\n\n<center>Chapter 7\n\n~ A Lonely Night ~</center>\n\n\n\u201cThese are my sister\u2019s pajamas,\u201d Mike says, handing me over the light blue silk-cotton clothes. \u201cIt should fit you. You\u2019ll find towels and her toiletries in her bathroom.\u201d\n\nI hate being a burden, but I had to bunk away from home at any cost, and Mike happened to be the only one who seemed reliable. I can\u2019t even trust my own social circle at times like these.\n\n\u201cThey\u2019re great. Thank you so much.\u201d\n\nHe shrugs it off nonchalantly. \u201cAnd if there\u2019s anything else you need, just let me know. I\u2019m in the next bedroom.\u201d\n\n\u201cI will, thanks again for putting me up.\u201d\n\n\u201cNo problem. Besides, you\u2019re my partner now,\u201d he says with a smile. \u201cYou change and go to sleep, while I take care of a few things.\u201d\n\n\u201cOkay.\u201d I nod. \u201cGood night, Mike.\u201d\n\n\u201cGood night, Claire.\u201d\n\nWith that, he turns and heads down the stairs. I close the door behind me and breathe a sigh of relief.\n\nWhere would I be without him?\n\nMy parents pop out of nowhere and are back in their house after like three months.\n\nI don\u2019t know why they even bother with this town. After all the happy moments I spent with Claudine and Mike today, I\u2019d be highly tempted to kill myself if I had to see them. I couldn\u2019t face them today for the life of me.\n\nI\u2019m overreacting\u2026but I can\u2019t help it.\n\nI drove half a mile or so, when Griffith, my caretaker, called and warned me of my parents\u2019 arrival. Usually he warns me the day before their arrival, and I stay at the Griffiths\u2019 cottage inside the mansion grounds. But there was no way my parents wouldn\u2019t notice me entering the gates.\n\nHe sounded worried as I hadn\u2019t called back in a while. Usually, I don\u2019t venture outside the house, so I could understand his anxiety. I told Griffith I\u2019d find a place to bunk for the night to allay his fears.\n\nTruth was I didn\u2019t know where to go.\n\nMike\u2019s house was the only place I could think of at that moment. It was a split second decision. I trusted my instincts and turned back in the direction of his house.\n\nI realized I was alone. There was not one single soul in the entire town that I could trust, except a mere acquaintance, whom I called partner. The truth stung, more than it should have. Tears welled up but I somehow steeled myself before I knocked his door.\n\nI almost broke down with relief when he agreed. His eyes, they were sympathetic and kind, as if he understood what I was going through. He was more than just an understanding friend to me. He didn\u2019t even bother telling his parents. Not a single phone call or anything. He let me in just like that.\n\nAt that moment, I just wanted him to hold me close to himself and tell me everything would be okay. \n\nI just wish I had had the courage to ask.\n\nI take in the room. It\u2019s a little bit smaller than mine, but spacious nonetheless. Stripping down naked, I enter the adjoining bathroom. Adjusting the knobs, I enter the warm shower and let the powerful jets cleanse my body.\n\nI can\u2019t sleep at night. Too many things rattle around inside my head for me to relax. Everything \u2013 ranging from school politics to my more recent academic status \u2013 makes a guest appearance during those forlorn times.\n\nI take a sleeping pill. No, not the entire tablet. Just a small part of its many pieces when it becomes impossible to close my eyes. Joyce threw out the entire stock the last time she was here. She knows that I still take it, but there\u2019s nothing she can do about it.\n\nI swear to get over it, but who am I kidding?\n\nThe cleansing shower helps to calm me down. Some breathing techniques calm me down by another notch, but I don\u2019t know if I can make it through. I quickly discard the idea of calling my cousin. Disturbing her like this would leave a bad taste in my mouth.\n\nDrying up myself, I quietly slip on the borrowed pajamas and lie back on the bed, staring at the ceiling and wondering if sleep will take over.\n\n<center>*</center>\n\n\nThe sound is faint, like a barely audible whisper far away, but it is enough to wake me up. I sit up and look around in panic.\n\nNo one.\n\nIt comes again, outside my door.\n\nThieves?\n\nI certainly hope not.\n\nI forgo the slippers and pad barefoot to the door, and listen carefully. Apart from the erratic pound of my beating heart, there is nothing.\n\nIt comes again, loud and clear.\n\nOpening the door quickly, I peer outside. The dark, empty corridor stares back at me as I try to figure out what is happening. Apart from a single low-powered bulb lighting the hallway, there\u2019s no one. It seems to be coming from the direction of his room.\n\nIs Mike jacking off? The sounds are somewhere between a mumble and a loud moan, and I\u2019m unsure of what to do. Something furry brushes past my feet and I\u2019m barely able to hold back my abject scream of terror. I clamp my mouth shut and look down in panic.\n\nIt\u2019s a dog, a golden retriever. I can barely make out its shape as he muzzles my feet and sits down in front of me. It\u2019s big, brown eyes look hopefully at me, as if he\u2019s asking me to do something for him. He pads up to Mike\u2019s door and scratches the doorknob with his paws.\n\n\u201cI shouldn\u2019t go in there,\u201d I whisper. \u201cIt\u2019s probably locked from the inside.\u201d\n\nHe looks at me again and claws at the doorknob. Taking a hard swallow, I approach the dark mahogany door, and hold the doorknob.\n\n\u201cIf anything goes wrong, it\u2019s your fault,\u201d I whisper, and he reassures me with a small woof. Taking a deep breath, I turn the knob and open the door.\n\nMike\u2019s lying on his back half-naked, wearing only cotton pajama trousers. He twists and turns, and despite the cool temperature of the room, he\u2019s sweating. I can\u2019t help but notice his well-defined torso, lean muscles and yummy abs.\n\nOkay, girl, you\u2019re not here to check him out, I scold myself.\n\nThe dog nudges me with his nose, and I walk up to his bed. This feels like a suicide mission. What am I even doing here? Should I wake him up and request him to mumble quietly?\n\nHe moans something incoherent again, as if he\u2019s in great pain. I sit down next to him and gently place a hand on his forehead. He visibly calms down as I stroke his forehead and after a few moments, he falls back into sleep. I can still see his eyes moving haphazardly underneath his eyelids.\n\nI would\u2019ve balked at the prospect of doing something this, but his light contented smile makes it worthwhile. I run my fingers through his hair until I\u2019m sure he won\u2019t wake up anytime soon. The dog leaps up onto the bed without making any noise, and lies down close to his feet.\n\nNow what?\n\nThe bedside clock blinks 1:26 AM, and there\u2019s no way I could get a wink of sleep after this drama. Should I go back to my room now?\n\nI\u2019ll be alone anyway.\n\nI lie down on the bed beside him, making sure to keep a respectable distance between us. Slowly, I turn sideways, take his arm and hold on to it. I feel a better this way\u2026with someone beside me, even though I barely know him.\n\nAfter a few moments, he turns in his sleep. I watch with trepidation as he faces me. Still asleep, he gently drapes a protective arm over me. I take in the unconscious invitation and snuggle closer to him.\n\nIt has been a long time since I felt something like this.\n\nSafe, warm\u2026and loved.\n\n<center>*</center>\n\n\nThe soft rays of early morning sun wake me up, their warmth lingering gently on my face. I smile contentedly, feeling unusually refreshed and rejuvenated. Taking in a deep breath, I exhale quietly.\n\nI have never felt so good.\n\nI slept like a baby. A night of sleep without those knockout pills is certainly a much better experience. The memory of last night feels like an ethereal dream, one that I would be hard-pressed to believe. Yet here I am.\n\nMy contented smile freezes when I realize that I\u2019m in bed with someone else. He\u2019s spooning me, his hands snug, yet firmly planted, on my boobs. His warm breath washes over my neck, making the tiny hairs stand with every breath he takes.\n\nI feel an embarrassing blush creep onto my cheeks as my predicament dawns over me. His hands, one over me and one underneath, hold me firmly against his chest. His penis, that rock hard thing poking my ass is definitely his boner, is another distraction that rubs me the dirty way.\n\nMy traitorous nipples are straining to return his touch, eager for more stimulation. The sharp tingles go straight to my head, and I can barely muffle the subsequent moan. Every little move, every little twitch makes things worse.\n\nI\u2019m trapped.\n\nMy haywire thought finally poops out one ultimate solution \u2013 it\u2019s impossible without waking him up. If he wakes up, he\u2019ll definitely ask questions to which I have no answers.\n\nAnd my wingman from last night, the dog, is now MIA.\n\nHe shifts. His palms graze against my sensitive nubs. I clasp my jaws shut and breathe hard as the small jolts of pleasure wrack me again.\n\nErotic torture at its best.\n\nMy relationship with Jim was limited to occasional blowjobs. I have masturbated in the privacy of my room before, so I\u2019m not unfamiliar with these\u2026feelings. But my body has never felt the touch of another man. This is an entirely new thing, like discovering new shortcuts to heaven.\n\nI try hard to silence my lewd moans as he carries on his gentle rubbing and dry humping. My legs quiver, my stomach flutter and my insides shake as I feel an orgasm approaching.\n\nOh shit\u2026\n\nJust when I\u2019m about to have a small, mind numbing, toe-curling orgasm, he wakes up.\n\nMy body stiffens up with shock as he takes a deep breath and snuggles up even closer, squeezing my tits and almost making me cry. After a few moments, he goes rigid as realization strikes his befuddled mind.\n\n\u201cClaire\u2026?\u201d he whispers.\n\nIt\u2019s a moment of crystal clarity, a flash of brilliance that tells me what to do next.\n\nI pretend to be unconscious, snapping my eyes shut, seemingly fast asleep. He takes an audible gulp as he analyzes his situation. His grip on my breasts slackens next as he realizes he is giving me an unintentional groping.\n\nI can almost hear my nipples scream in protest.\n\n\u201cOh shit!\u201d he says, echoing my thoughts.\n\nI had taken a few liberties with his hands, using my own on top of his to maximize the friction. I thought it would be better getting off and relieve the brewing tension by having an orgasm quickly.\n\nIt was a bad, bad idea.\n\nHe tries to get his hands out of my grip and not wake me up at the same time. I suppress a giggle as he swears under his breath.\n\nFinally, he shakes me, whispering urgently, \u201cClaire, for the love of God, wake up!\u201d\n\nI mumble an incoherent reply and snuggle back, grinding my ass to his boner in the process.\n\n\u201cDammit\u2026\u201d he whispers and shakes me more urgently. \u201cClaire, please wake up!\u201d\n\nIt\u2019s funny how he uses his arms and resists using his palms, knowing that he\u2019d be doing nothing but fondling me.\n\nFinally, my heart takes pity.\n\n\u201cWhat?\u201d I mumble sleepily, and let go of his arms.\n\nHe grabs the chance and peels his arms off my body. I feel the bed shift as he gets up hastily, away from me, and lands on the floor on the other side with a dull thud.\n\nI really miss his warmth.\n\n\u201cWhat are you doing here?\u201d he asks from the floor, still whispering.\n\n\u201cYou woke me up last night with your moaning,\u201d I say, muffling my voice with the pillow, \u201cso here I am.\u201d\n\n\u201cOh,\u201d he says, as if he understands exactly what happened.\n\nIf I turn around to face him now, he\u2019ll easily see how flushed I am. Slowly, I curl up into a fetal position, highly embarrassed at the situation I have created.\n\n\u201cOkay, uh\u2026I\u2019m going out for a run. I\u2019ll be back in half-an-hour.\u201d\n\nI swear I saw a massive tent on his trousers as he stumbled out of the room, slamming the door shut behind him. My insides throb with a dull ache as an impending orgasm reminds me to take care of something.\n\nI turn to the other side, facing away from the door, and slip a hand inside my pajama. My clit is standing erect as I move my panties to the side and rub myself in earnest. I breathe in his scent from the pillow and feel his hot warmth that just had been there, imagining his hands instead of mine.\n\nThree seconds is all it takes for the dam to break open.\n\nI swamp my moans in the pillow as I ride the waves after waves of pleasure jolting me apart. I sneak my remaining hand under my top and tug my sensitive nipples, the rhythm in sync to the throb that now courses through me.\n\nA second bolt of pleasure strikes me \u2013 unexpected\u2026and hot.\n\nI ride out on the waves of pleasure, hoping earnestly that Mike doesn\u2019t barge in through that door and see me like this. It\u2019s after a long time that the quakes subside and I\u2019m able to gain a modicum of control. I lie quivering for several more minutes, waiting for the delicious aftershocks to fade away into nothingness.\n\nThen, I laugh.\n\nI laugh at the absurdity. The sudden exhilarating feeling takes even me by surprise. It\u2019s joyous and content. The sound of my laugh is strange even to me, but it is mine. It subsides after a long time, only punctuated by fits of giggles and snorts.\n\nIt\u2019s good to feel so alive.\n\n<center>Chapter 8\n\n~ Weird Days ~</center>\n\n\nHave you ever jogged with a raging boner?\n\nI tried\u2026and failed miserably.\n\nThere\u2019s an abnormal, indecent bulge in the front of my trousers that even a blind bat can see. Adjusting my cock this way and that, upside down and downside up\u2026it just doesn\u2019t want to be contained so I give up trying altogether.\n\nI had a glorious dream this morning. There was cotton in my hand\u2026soft fleshy cotton that molded to any shape I wanted. The feel, the touch was so exhilarating. I simply couldn\u2019t get enough of it. When consciousness seeped in bit by bit, I realized I was actually holding them.\n\nWhen I was fully awake, I realized they were Claire\u2019s.\n\nI was fondling her boobs. Her soft, perky boobs that had given me an unforgettable hard-on last time. Worse, she had my hands locked with her own, making it impossible for me to not notice her hard nipples that were poking through the satin-soft material.\n\nI sit down on the front steps of my house and hang my head in shame.\n\nWhat have I done?\n\nShe\u2019ll wake up, recall the morning, and freak out.\n\nShe\u2019ll never talk to me again.\n\nAfter perhaps ten minutes, I feel Mike Junior calming down, grasping the fact that there will be no relief this time either. I\u2019m too horny to run and too agitated to enjoy my daily dose of endomorphins. I decide it\u2019ll be better to head back home quietly and resume my routine as usual.\n\nI just hope she doesn\u2019t call the police.\n\nAfter the initial panic subsides, I realize it\u2019s not completely my fault. She was in my bed, not the other way around.\n\nBut what the hell was she doing there?\n\n\u2018You woke me up last night with your moaning\u2026\u2019\n\nThat could mean that she heard me talking in my sleep. God knows what she heard. If she tells it to her friends, it won\u2019t take long for one of the bastards to descend with a pike to poke my ass.\n\nI remember having a bad dream, but it had faded away, leaving me with a dreamless sleep.\n\nArgh\u2026I don\u2019t know what to do. Too many things in my head doesn\u2019t help much either.\n\nOne damn thing at a time, I say to myself and enter the house. I head upstairs to my room to see if she\u2019s still there.\n\nThe unkempt bed is empty, the sheets ruffled as if trampled underneath wild horses. There\u2019s a strange, musky scent\u2026faint, but still there. I didn\u2019t notice it in my hurry earlier. Without putting much thought into it, I quickly complete my morning routine and head downstairs to make breakfast.\n\nI stop dead in my tracks.\n\nClaire\u2019s already there, sitting on a kitchen chair, doodling something on her mobile. She had changed her clothes from last night, which is now blue cotton, teamed with a loose top of the same color. She must have felt my presence, as she looks up at me.\n\n\u201cGood morning, Mike,\u201d she says with a big smile, blowing me off kilter.\n\n\u201cGood morning,\u201d I greet back. \u201cYou had a good sleep?\u201d\n\n\u201cYes, I did,\u201d she replies. \u201cIt was the best I had in a while.\u201d\n\nCouldn\u2019t smell any sarcasm, so I assume she must\u2019ve meant what she said.\n\n\u201cSo, about this morning,\u201d I begin.\n\n\u201cWhat\u2019s for today\u2019s breakfast?\u201d she cuts me halfway. \u201cI\u2019m really hungry.\u201d\n\nAll right, then.\n\n<center>*</center>\n\n\n\u201cDude, what happened next?\u201d Sam asks eagerly.\n\nBy now, my dolt of a cousin had accidentally spilled the news of Claire bunking the night at my house. He said it as an offhanded comment to an acquaintance, who said it to another acquaintance and pretty soon, the entire school knew about it.\n\nEveryone\u2019s giving me the looks and a sly grin, as if they know a very dirty secret about me.\n\n\u201cShe thanked me and went away just before noon.\u201d\n\n\u201cNo\u2026no sex?!\u201d Nathan asks unbelievingly.\n\n\u201cWhy the hell would we have sex?\u201d\n\n\u201cIt\u2019s the law of nature, man!\u201d he declares.\n\n\u201cIgnore that bastard,\u201d Sam says. \u201cOn a serious note, word\u2019s out that you two did it.\u201d\n\n\u201cWhat?\u201d\n\n\u201cI swear I never said that,\u201d Dan says, hanging his head low in shame. \u201cI just said that Mike hosted Claire for a night.\u201d\n\nI\u2019m pissed off at my cousin, but part of it is my own fault because I was the one to tell him in the first place.\n\n\u201cNow what?\u201d I ask.\n\n\u201cPeople are going to talk. It\u2019s their business,\u201d Sam says. \u201cAct cool, just like the way you are right now, and the news will fade away.\u201d\n\n\u201cAnd what if it doesn\u2019t?\u201d\n\n\u201cJust hope it does, otherwise you\u2019ll be attracting trouble.\u201d\n\nTrouble came the same day in the form of our star quarterback.\n\nIt\u2019s always the star quarterback.\n\nI was taking out stuff from my locker when I felt a presence behind me. Closing it quietly, I turn around to face my newest \u201cthreat\u201d. His name is Jim or something. I keep forgetting his name.",
        "\u201cI heard you slept with Claire,\u201d he says, sheer disdain evident in his voice.\n\nIs he Claire\u2019s boyfriend? I heard she had ditched whoever-it-was.\n\n\u201cI didn\u2019t,\u201d I reply, leaning back against my locker.\n \n\u201cDon\u2019t you fucking lie,\u201d he seethes.\n\n\u201cIf it helps you think clearly, go ahead,\u201d I say calmly.\n\nI sure look like an untouchable in his eyes. Leaning back against the locker and seemingly uncaring of his queries will have him thinking twice before laying a hand on me.\n\nEven though my insides are squeezed in panic and screaming bloody murder, I maintain a calm, visible exterior. It\u2019s one of my defense mechanisms against idiots like the one standing before me. \n\nSomeone clears her throat.\n\nIt\u2019s Claire, her face neutral and devoid of any emotion.\n\n\u201cClaire! Please tell me you didn\u2019t sleep with this retard.\u201d\n\nClaire steps forward, a hand\u2019s distance away from him.\n\nThen, she slaps him.\n\nThe sound is flinch worthy \u2013 a loud, resounding smack \u2013 that seems to stop time itself. Most people stop and watch the drama unfold.\n\n\u201cWhom I sleep with is none of your fucking business,\u201d she seethes quietly.\n\nJaw, meet floor.\n\nI really expected her to deny the fact. Jim\u2019s face is a bright red color, even more so than a fully ripened cherry. He works his jaw to say something, but nothing comes out.\n\n\u201cFuck off!\u201d she screams. He looks between us, his face a mask of an angry scowl, and then he walks away, shoving people on his way out.\n\nWell, that was unexpected.\n\nThen, she faces me.\n\nIt\u2019s deer-caught-by-the-headlights moment.\n\n\u201cI hope you didn\u2019t freak out. He\u2019s an asshole.\u201d\n\n\u201cHe,\u201d I say, picking my bag off the floor, \u201cisn\u2019t the first numpty I\u2019ve come across in my life.\u201d\n\n\u201cI\u2019m sorry. He shouldn\u2019t have said that.\u201d\n\n\u201cIt\u2019s okay,\u201d I shrug it off. \u201cAlthough you should\u2019ve told him that we didn\u2019t, er, sleep together.\u201d\n\n\u201cDidn\u2019t we?\u201d she asks, an amused smile playing on her lips.\n\nShe feels different. More amiable and less tense than our previous meeting. She\u2019s like one of those secrets that are within reach, yet feels so far.\n\n\u201cNot exactly,\u201d I reply with a grin. \u201cSo, are you coming over to work on the project today?\u201d\n\n\u201cYes, of course.\u201d\n\nI nod. \u201cThat\u2019d be great.\u201d \n\nSam approaches me from around the corner. He stops dead in his tracks. He eyes Claire, his expression best described as one of annoyance. Claire acknowledges him with the raise of a perfect eyebrow.\n\n\u201cMike, time to go,\u201d he says in a curt voice.\n\n\u201cYeah, sure,\u201d I acknowledge him, and then turn towards her. \u201cSee you later, Claire.\u201d\n\n\u201cOf course.\u201d\n\nOnce we are out of earshot, Sam jumps the question, \u201cYou two are doing it, aren\u2019t you?\u201d\n\nI almost fall flat on my face.\n\n\u201cWhat?\u201d\n\n\u201cYou heard me.\u201d\n\n\u201cWhat makes you think that?\u201d\n\n\u201cThe way she looked at you,\u201d Sam says quietly as we pass a bunch of kids, \u201call she needed was a drool.\u201d\n\nClaire seemed perfectly normal, although her cold attitude had changed substantially. This was a definite improvement.\n\n\u201cThat\u2019s an exaggeration, my friend,\u201d I say and pull the door open for him.\n\n\u201cYou\u2019re blind even with your eyes wide open,\u201d he says.\n\nI know it can never happen. We are two different people, different personalities, different backgrounds and different mindsets. Like oil and water, that can exist together but can never mix.\n\nWe will be friends, at best, but nothing more.\n\n<center>*</center>\n\n\n\u201cDo you have a dog?\u201d\n\nIt\u2019s the same as the previous day. Me and Claire sitting at the dining table, writing our shares of the project, me in my illegible scribbling and she in her cursive calligraphy. Add in an occasional glance to her stunning self, and you can sum up this wonderful evening for me.\n\nSo, you can see why that question about Snuffles feels unexpected.\n\n\u201cYes, I do. What happened?\u201d\n\n\u201cNothing, I met him in the hallway last night.\u201d\n\nThat\u2019s interesting. I wonder what he must have done on their first meeting.\n\nScared her out of her mind, I imagine.\n\nAs much as I would have liked, she doesn\u2019t stay like the last time. As she is about to walk down the steps, she turns around and looks at me.\n\n\u201cI am glad that you\u2019re my partner,\u201d she says sincerely. \u201cI shouldn\u2019t have underestimated you.\u201d\n\n\u201cIt\u2019s okay, I guess.\u201d\n\n\u201cThank you for being so understanding,\u201d she says, leaning over and placing a quick kiss on my cheek.\n\n\u201cSee you tomorrow,\u201d she says and walks down the steps, to her car.\n\nShe drives away, leaving me rooted to the spot. I stare at the street and wonder if she just did what I think she did. An embarrassing blush creeps up over my cheeks as the realization takes hold in my befuddled brains.\n\nDamn.\n\n<center>*</center>\n\n\nShe deliberately bumps into me at the cafeteria line the next day.\n\n\u201cSit with me, please?\u201d she wheedles.\n\nMy heart flutters with joy, there\u2019s music and orchestra playing in the background, but then she says, \u201cI have some important things to discuss.\u201d\n\nBummer.\n\nMy eyes flick towards Dan who\u2019s standing right behind her. He shrugs nonchalantly, and I take this as approval.\n\n\u201cSure, why not?\u201d I reply.\n\nI give myself a mental kick a few moments later when I realize whom I\u2019m going to sit with. Her friends, more like sharks to me, acknowledge me with varying degrees of amusement and sneers. She sits down with her girlfriends, motioning me to sit opposite to her.\n\n\u201cMike, these are my friends,\u201d she says, although not quite as happily as I expected. \u201cGirls, meet Mike.\u201d\n\nAn awkward silence permeates the table as her friends, all four of them, wonder what the fuck is going on. Finally, one of them breaks the ice.\n\n\u201cHello Mike,\u201d the stunning redhead greets me first with a legitimate smile, \u201cI\u2019m Missy.\u201d\n\n\u201cNice to meet you, Missy,\u201d I acknowledge. \u201cMy cousin told me a lot about you.\u201d\n\n\u201cOh,\u201d she says, somewhat surprised. \u201cWhat did he say?\u201d\n\n\u201cAlmost everything there is to know,\u201d I say. The grin accompanying my words isn\u2019t intentional, but I can\u2019t help it.\n\nHer face reddens with embarrassment. \n\n\u201cI\u2026about that\u2026\u201d\n\n\u201cDon\u2019t worry about it,\u201d I assure her. \u201cI understand.\u201d\n\n\u201cWhat is it, Missy?\u201d another one of her girlfriends asks.\n\n\u201cOh, it\u2019s nothing,\u201d I answer for her. \u201cJust a private joke.\u201d\n\n\u201cYou are not as anti-social as I thought you\u2019d be,\u201d Claire admits.\n\nIt stings to have your personality judged like that in public, but I am no stranger to such comments. She realizes what she said a bit too late.\n\n\u201cSorry,\u201d she says sheepishly.\n\nI shrug. \u201cNothing that I haven\u2019t heard before. Anyway, tell me what you wanted to talk about?\u201d\n\n\u201cThere are a few things about Little Home that we should add. We have to adjust it somewhere in between the management part.\u201d\n\n\u201cThat can be done. We can stick a few pages in between. I\u2019m an expert on that.\u201d\n\nA group sits down by the adjacent table. It\u2019s like an informal congregation of the school football team.\n\n\u201cI hate the bloody coach,\u201d one says, loud enough for the entire hall to hear.\n\nClaire pointedly ignores him. \u201cDo you think we can do overtime?\u201d\n\n\u201cYeah, me too,\u201d pipes up a second one, intrusively. \u201cWho the fuck appointed him? He selected Nathan over Kyle. What the fuck!\u201d\n\n\u201cSure,\u201d I reply, trying my best to ignore them. I can\u2019t help but feel defensive when one of my friends is mentioned like that.\n\n\u201cI hate these goddamn niggers,\u201d the first one says. \u201cI\u2019ll tell the coach to suck Nate\u2019s black cock and fuck off somewhere else.\u201d\n\nThose last words prick my ears with stunning accuracy, and something inside me just\u2026snaps. It isn\u2019t every day I encounter racist remarks. All my life, I was taught to stand up against bullshit. Dad in particular, took out the time to hammer it into my head. My hands start to shake as I feel the familiar black rage boiling over.\n\nAnd Claire?\n\nShe heard it perfectly well. She looks at me wide-eyed, noticing for the first time that something is wrong.\n\nHow can she just sit and look as if nothing happened?\n\nI can\u2019t pick up a fight. I can\u2019t do that to Aunt Sherry. Being expelled twice in the same year wouldn\u2019t be good for my career either.\n\nI stand up abruptly, breaking their chatter and walk towards the exit. My appetite is certainly ruined.\n\nThanks to her friends.\n\n\u201cMike!\u201d she calls.\n\nLooks like she followed me outside, but I\u2019m in no mood for her. I walk quickly to the corner of the building. As soon as I round it, I break into a full sprint. I run until I'm damn sure that I've lost her.\n\nGood riddance.\n\n<center>Chapter 9\n\n~ Regrets ~</center>\n\n\nShit hit the fan.\n\nNever thought I\u2019d be using that phrase in my life, but today I did. Everything went from picture perfect to terribly awry in just a matter of a few seconds.\n\nI never paid much attention to the happenings on my table. There were a few bigots, but with time, I had learnt to filter their comments. It wasn\u2019t something I supported, just something that I never felt the need to rectify.\n\nUntil today.\n\nHe\u2019s friends with Nathan. Of course, he would not want to hear a single word against him. How could I be so dumb? How could I not see it coming?\n\nHe just\u2026ran away. I tried to follow him, but he disappeared.\n\nI feel like crap.\n\nBy the time I\u2019m home, I\u2019m almost in tears. I ruined something, and I don\u2019t know if I can fix it.\n\n\u201cJoyce?\u201d\n\n\u201cHey, Sweets. What\u2019s up?\u201d\n\n\u201cI need your help.\u201d\n\n\u201cWhat happened?\u201d\n\n\u201cI screwed something really bad.\u201d\n\n\u201cTalking helps, you know?\u201d\n\n\u201cI don\u2019t know if he\u2019s willing to talk.\u201d The sheer disgust on his face goes through my head like painful reruns.\n\n\u201cYou can always talk to me.\u201d\n\nI tell her everything. It\u2019s hard to go through the exact details, but I force myself to tell everything there is to say.\n\n\u201cI don\u2019t know why I didn\u2019t say something,\u201d I say, my voice breaking down, \u201cI know I should\u2019ve said something, but I couldn\u2019t.\u201d\n\n\u201cOh dear,\u201d she says.\n\n\u201cI\u2019ve never felt so awful.\u201d\n\nShe doesn\u2019t say anything as I sniffle and blow my nose into the tissues.\n\n\u201cClaire, do you trust me?\u201d\n\n\u201cI wouldn\u2019t be telling you this if I didn\u2019t.\u201d\n\n\u201cOkay,\u201d she says, stalling to think. Then she says, \u201cThen answer me this, and answer it honestly: Why is this Mike so important to you?\u201d\n\n\u201cI don\u2019t know,\u201d I say quietly, \u201cHe feels like a genuinely good person, like when I\u2019m with you. I can trust him.\u201d\n\n\u201cDo you think he\u2019s more important that your friends?\u201d\n\n\u201cI don\u2019t know.\u201d\n\n\u201cYes or no. Would you choose him over your friends? Is he that good?\u201d\n\nI remember his smile, the way he cares about those who mean something to him, the way he helped me when I needed help and never asked anything in return. I wonder if any of my friends would\u2019ve done the same.\n\n\u201cYes,\u201d I answer this time.\n\n\u201cOkay, then,\u201d she says, \u201cYou have a lot of things to do, things which you haven\u2019t done before. If not for him, do it for yourself. Can you do it?\u201d\n\n\u201cI will.\u201d\n\n\u201cThat\u2019s my girl,\u201d she says. I can almost see her encouraging smile. \u201cSo here\u2019s what you have to do\u2026\u201d\n\n<center>*</center>\n\n\nApologize. \n\nA verb, meaning to express regret for something that one has done wrong.\n\nIt\u2019s a completely foreign idea. Why should I apologize when I haven\u2019t done anything wrong? All my life, I\u2019ve gotten whatever I ever wanted. Who requires an apology when I can threaten them into submission? I have never apologized to anyone in my life. Ever.\n\nThat\u2019s going to change.\n\n\u201cYou have to apologize first, Claire,\u201d Joyce had said. \u201cIf he means something, you will have to apologize.\u201d\n\n\u201cWhat should I say?\u201d I asked.\n\n\u201cYou have to think that for yourself. Just mean what you say, okay?\u201d\n\nFirst step is to apologize. \n\nBut I have to get hold of him for that.\n\nHe arrives in class just before the bell rings and is out as soon as the recess begins. He never looks once in my direction.\n\nHow do I get hold of him?\n\n<center>*</center>\n\n\n\u201cWhat are you doing here?\u201d he snaps.\n\n\u201cI wanted to apologize,\u201d I plead.\n\nHe\u2019s at his home as I had expected, but really pissed off. His stare is condescending at best.\n\n\u201cI know you want to get on with your project, so don\u2019t fake this apology thing. We can complete the work and go our different ways. You\u2019ll never hear back again from me after that. For now, just leave.\u201d\n\n\u201cHear me out for once, please?\u201d I insist. \n\n\u201cI don\u2019t want to hear anything coming from you.\u201d\n\nI couldn\u2019t sleep last night, thinking over my actions again and again. Like Joyce had said, it\u2019s time for a change. I just need a chance.\n\n\u201cPlease?\u201d I asked softly. \n\nHe doesn\u2019t say anything else, staring down at the patio\u2019s wooden floor instead. I hate myself for putting him through such conflict.\n \n\u201cI\u2026\u201d he begins, still not looking at me, \u201cI thought you were a great person, an intelligent girl who knows the difference between right and wrong.\u201d\n\n\u201cI don\u2019t support them, okay? I just ignore them.\u201d\n\n\u201cIs that an excuse?\u201d he asks.\n\n\u201cNo,\u201d I say. \u201cThey mean nothing to me.\u201d\n\n\u201cThey\u2019re your friends, Claire,\u201d he says sarcastically.\n\n\u201cWhy are you being so hard?\u201d\n\nHe just stares at me, saying nothing.\n\n\u201cYou don\u2019t know, do you?\u201d he says after sometime. \u201cDo you know how hard Nathan worked to get on the team? His family doesn\u2019t have the money to spare for his football gear, so he works to pay for everything that your spoon-fed friends get just by clapping their hands. He barely sleeps four hours, slogs through the day and still keeps a smile plastered on his face at school, just because he doesn\u2019t want to dump his problems on his friends.\u201d\n\n\u201cYou see, I was this close,\u201d he says, raising his index finger and thumb with barely an inch separating them, \u201cto losing my temper and beating the crap out of your sophisticated friends.\n\n\u201cJust go away,\u201d he says tiredly, \u201cI don\u2019t want to talk or hear your apologies.\u201d\n\n\u201cBut \u2013\u201d\n\n\u201cThe library will reopen in two days. We\u2019ll continue our project from there. Goodbye.\u201d\n\nWith that, he slams the door shut.\n\n<center>*</center>\n\n\n\u201cYou again?\u201d he asks exasperatedly.\n\n\u201cI want to say something and I\u2019m not going anywhere without saying it.\u201d\n\nI had composed myself for fifteen minutes before knocking on his door again. He hangs his head and sighs in defeat.\n\n\u201cOkay,\u201d he agrees.\n\n\u201cHear me out first, and then you can decide for yourself,\u201d I plead softly. \u201cI know it was wrong, but I had gotten used to it. It\u2019s not an excuse; I\u2019m trying to explain how things were.\n\n\u201cI\u2019m sorry\u2026I truly am,\u201d I say sincerely. \u201cI can\u2019t take back my words or actions, but I swear I won\u2019t ignore it or support it, ever. Can you please forgive me? I promise I\u2019ll try to improve myself.\u201d\n\nA dry chuckle escapes him. \u201cWhy do I matter? Why, all of a sudden, do you want to change? I find that fucking hard to believe.\u201d\n\n\u201cI didn\u2019t realize how bad it was until I met you. You were different. Everything about you made me realize how mucked up my life had become. I felt like a disappointment that day you left, and I knew I had to make it right. Please believe me.\u201d\n\nI can feel tears on my cheeks, but I ignore them. A sad smile cracks his lips as he looks at me, gauging me, wondering if I am lying.\n\n\u201cYou know, I hate to see girls crying like this,\u201d he says, reaching forward and wiping my tears away with a gentle stroke. \u201cI want to believe you, but it\u2019ll take some time, okay? I\u2019m too upset to make decisions right now.\u201d\n\n\u201cAre we good?\u201d I ask quietly.\n\n\u201cYes,\u201d he says. \u201cYes, we are almost good.\u201d\n\nIt feels as if a great weight lifted off my chest, and I can breathe freely now. A sense of dread and misery that I never thought I had dissipates.\n\n\u201cThanks for trusting me.\u201d\n\n\u201cI trusted you. I just felt you were misguided in parts,\u201d he says, smiling. \u201cWhat made you apologize? I don\u2019t think you made the decision all by yourself.\u201d\n\n\u201cIt was my cousin,\u201d I say truthfully. \u201cShe\u2019s like this completely opposite version of me.\u201d\n\n\u201cWow.\u201d\n\n\u201cShe is one of the kindest people you\u2019d ever get to meet,\u201d I say proudly, mentally thanking Joyce for her encouragement.\n\n\u201cShe must be,\u201d he says, \u201cto make you do this.\u201d\n\nA sudden burst of dizziness makes me grab hold of the doorsill. He looks at me in alarm and put his hands on my shoulders for support.\n\n\u201cAre you okay?\u201d he asks concernedly.\n\n\u201cI\u2019m just feeling a bit woozy,\u201d I manage to say. His entire house revolves in front of me, making me shake my head in disbelief. \u201cIt\u2019s getting late. I should go.\u201d\n\n\u201cLike this?\u201d he asks, \u201cAre you sure you can drive?\u201d\n\n\u201cYeah, positive,\u201d I say, accompanying it with my brightest smile.\n\nI wobble back to my car, holding its door to gain a modicum of control. I think I\u2019ll rest for a little before I drive. He is by my side the next instant and opens the door for me.\n\n\u201cYou can stay over, if you want,\u201d he says. \u201cYou look very tired.\u201d\n\n\u201cIt\u2019s okay,\u201d I say as smoothly as I can and slip inside to my seat. \u201cGoodnight, Mike.\u201d\n\n\u201cGoodnight, Claire,\u201d he replies but doesn\u2019t go back, watching me fumble with my purse and pockets instead.\n\n\u201cWhere are my keys?\u201d I mumble under my breath.\n\n\u201cLooking for these?\u201d he asks, jingling the keys in front of me.\n\n\u201cThanks,\u201d I exclaim happily and reach for them, but he pulls them away.\n\n\u201cYou\u2019re not driving, Claire. You\u2019re ill.\u201d\n\n\u201cWho are you to tell me?\u201d\n\n\u201cYour partner.\u201d He smiles, and with my car keys spinning on his little finger, he walks back into his house, whistling a tune.\n\nI sigh in frustration and follow him.\n\n<center>*</center>\n\n\n\u201cThanks for letting me stay over.\u201d\n\nI feel even worse than a few minutes ago, with a splitting headache burning away my thoughts. I don\u2019t think I could drive like this.\n\n\u201cIt\u2019s nothing.\u201d\n\nHe pops a thermometer under my tongue and goes about making dinner.\n\n\u201cYou\u2019re running a fever,\u201d he says, checking the thermometer, which reads slightly over a hundred degrees. \u201cWhen was the last time you ate?\u201d\n\n\u201cThis morning, I think.\u201d\n\n\u201cAnd the last time you slept?\u201d\n\n\u201cIs it that obvious?\u201d\n\n\u201cYeah,\u201d he says, raising a critical brow at me, \u201cyou look like a raccoon.\u201d\n\n\u201cWhat?\u201d\n\n\u201cJust kidding.\u201d He laughs. \u201cYou have some serious dark shadows.\u201d\n\n\u201cI didn\u2019t sleep last night,\u201d I say. \u201cI tried hard but couldn\u2019t.\u201d\n\n\u201cYou\u2019re going straight to bed after dinner,\u201d he says.\n\n\u201cI can\u2019t really sleep without the pills,\u201d I blurt.\n\nHis jaw hangs slightly as he processes what I just said. I do a face-palm, but the damage is done.\n\n\u201cWhy?\u201d he asks, completely shocked. \u201cWhy would you take sleeping pills?\u201d\n\n\u201cBecause I can\u2019t sleep, genius,\u201d I retort.\n\nHe shakes his head and goes back to chopping vegetables. I stare at the marble kitchen island, feeling ill, dead tired and wondering if I was repenting now for some sin in my past lives.\n\n\u201cSometimes, I can\u2019t sleep at night too,\u201d he says.\n\n\u201cWhat do you do then?\u201d I ask. Having seen a sample of his nightmare before, his self-admission has me genuinely intrigued.\n\n\u201cI try to recall happy things in my life,\u201d he replies after some time, \u201cthings that make me laugh. Despite how sad I might be.\u201d\n\n\u201cI don\u2019t know if I have even one such memory,\u201d I say glumly.\n\n\u201cThere was this one time when Dad took us out golfing,\u201d he begins. \u201cI was young, perhaps six years old, so I was only allowed to watch. It was a first time for Mom, but she ignored the trainer\u2019s instructions and went straight ahead to the hitting zone.\u201d\n\nI can feel his joy bubbling from this distance. More than his memory, it\u2019s the way he reveals his past that catches my attention.\n\n\u201cMom took the first swing, and the golf club went flying straight into the lake. The second swing landed on the golf buggy\u2019s windshield, shattering it to pieces.\u201d\n\nHe laughs softly as the memories burst forth.\n\n\u201cThe trainer tried to stop her, but she took a third swing and hit that poor guy right on his head.\u201d\n\nWe end up laughing together. I try to conjure the hilarious scene that it must\u2019ve been.\n\n\u201cDad teased her for an entire month, saying that he was traumatized by dreams of flying golf clubs.\u201d His shoulders shake in mirth, but then, it stops. My laughter dies when I realize he\u2019s not with me.\n\n\u201cThose were happy days,\u201d he says softly. Going to the fridge on his left, Mike takes out the salad. I notice tears when he turns around.",
        "\u201cAre you okay?\u201d I ask, unsure of myself.\n\n\u201cOh, it\u2019s just the onions,\u201d he dismisses it.\n\nHe says nothing else.\n\n<center>*</center>\n\n\n\u201cHere are Emma's pajamas,\u201d he says, handing me over a green cotton cloth, \u201clet me know if these don\u2019t fit you.\u201d\n\nIt\u2019s d\u00e9j\u00e0 vu, only this time, I really need the rest. After dinner, he gave me a pill to take my temperature down. I feel slightly better by the time I\u2019m ready for bed, but I\u2019m still unsure if I could get a wink of sleep.\n\n\u201cClaire?\u201d he asks again.\n\n\u201cHuh?\u201d I ask, wondering what he had said. \u201cDid you say something?\u201d\n\n\u201cI asked if you need anything else.\u201d\n\n\u201cOh no, I don\u2019t think so.\u201d\n\n\u201cGoodnight then,\u201d he says. \u201cIf you need anything, I\u2019m in the next bedroom. Don\u2019t hesitate.\u201d\n\n\u201cThanks\u2026and goodnight, Mike,\u201d I say and close the door behind me.\n\nD\u00e9j\u00e0 vu it is.\n\n<center>Chapter 10\n\n~ Mutual Happenings ~</center>\n\n\nI toss and turn, lie sideways and on my back, but sleep is an elusive fairy that evades me every time. I feel washed out and exhausted. The events from the last two days have drained me out. Emotional drama isn\u2019t my cup of tea, but then, my life is full of it.\n\nI was surprised to see Claire. She looked like hell. Hair askew, dark spots under her eyes and dead tired. I wanted to say it\u2019ll be okay but I wanted her to torment her. Perhaps I was too angry at that time.\n\nI don\u2019t believe that a person can change overnight, but Claire seemed sincere about it. She\u2019s a great person, but it\u2019ll take some time for her to change. I just hope she doesn\u2019t back out, or lose faith on the way.\n\nI close my eyes and her face appears. She\u2019s crying and begging for reasons unknown as I stand above her, emotionless and angry.\n\nI sit up abruptly, wondering if I could ever sleep like this.\n\n<center>*</center>\n\n\n\u201cClaire, I\u2019m beginning to hate this sound.\u201d\n\n\u201cLike this?\u201d She reaches and knocks on my door again.\n\n\u201cYes, like this,\u201d I sigh. \u201cWhat are you doing here?\u201d\n\n\u201cI can\u2019t sleep,\u201d she says. Her eyes are wide open and she has a loony smile on her lips.\n\nI bet she isn\u2019t even thinking straight.\n\n\u201cYou need to go to sleep.\u201d\n\n\u201cI know, but I can\u2019t. Can you sleep?\u201d\n\n\u201cNo.\u201d\n\n\u201cWe both can\u2019t sleep!\u201d she exclaims in a hushed voice, as if she just discovered my fourth wife in hiding.\n\nI make a mental note to steal a prescription of sleeping pills.\n\n\u201cWhat do you want to do?\u201d I ask, wracking my brain to come up with a solution.\n\n\u201cI say we wreck something.\u201d\n\n\u201cNo. That\u2019s not gonna happen in my house.\u201d\n\nJust then, an idea strikes me out of the blue.\n\n\u201cCome with me,\u201d I say, and grab her hand.\n\nUntil today, I\u2019d never realized how much I\u2019ve missed this. It was mostly Emma and me on weekends, while Mom and Dad preferred to spend some quality time together outside.\n\n\u201cWhere are we going?\u201d she asks as I lead her upstairs.\n\n\u201cYou\u2019ll see.\u201d\n\nI open the door adjoining the terrace. The night skies are clear, devoid of any clouds.\n\n\u201cWait here,\u201d I say and rush back to the supplies wardrobe just beside the door.\n\nI rush back in record time, and lay the blankets on the terrace floor. I rush back again for the pillows and lay them on the blankets. There\u2019s enough space on it for two people to lie side-by-side.\n\n\u201cWe\u2019re sleeping here?\u201d she asks incredulously. \u201cOut in the open?\u201d\n\n\u201cNo, we\u2019ll just lie down for a while,\u201d I reply nonchalantly.\n\n\u201cYou\u2019re nuts. What if it rains?\u201d\n\n\u201cIt won\u2019t.\u201d I arrange the thick blankets so that they don\u2019t poke uncomfortably. With the deepest sigh I\u2019ve taken in a while, I lie down on my back and stretch my legs.\n\nI can barely make out her expression in this darkness, but she finally acquiesces and lies down beside me.\n\n\u201cWow,\u201d she says after a while.\n\nThe sky is littered with diamonds, each trying to outshine its counterpart against the velvet background. It\u2019s rare to see a clear sky, and hardly a handful of people ever stop to look at the vista above their own heads. Thin cirrus clouds hang above, illuminated by the moon behind them, covering the sky like a gauzy curtain.\n\nIt\u2019s a stunning view.\n\n\u201cThere\u2019s Aquarius,\u201d I say, pointing the group to my right. \u201cHe\u2019s faint, but he\u2019ll be bright again in September.\u201d\n\n\u201cI recognize that one. It\u2019s the belt of Orion.\u201d She points to three brighter groups amongst the countless ones.\n\n\u201cThe two faint stars from the other side form Orion\u2019s head and bow.\u201d\n\n\u201cI never knew the dark could be so\u2026captivating.\u201d She studies the sky with eyes wide open like an innocent child. \u201cHow did I miss this?\u201d\n\n\u201cYou just had to take a look around.\u201d \n\nThe cool summer breeze is soothing, strangely mesmerizing and wildly beautiful. She shifts closer, linking our arms and holding my hand. She feels good against me, comfortable and safe out in the open.\n\n\u201cThanks,\u201d she says softly.\n\n\u201cYou\u2019re welcome.\u201d\n\nI stare at the landscape above, watching the vivid patterns of light play their tricks. I didn\u2019t even realize at first when Claire fell fast asleep. She snores prettily, a soft whistling that\u2019s endearing at the same time. I decide against waking her up and relish the touch of her hands. It\u2019s a foreign feeling that I\u2019m getting accustomed to, but it sure feels good.\n\n\u201cGood night, Claire,\u201d I say and kiss her forehead softly.\n\nI hate myself for making her cry earlier today, but a part of me says I did right. She\u2019d understand me, if she ever tries to.\n\nFor now, it\u2019s back to stargazing.\n\n<center>*</center>\n\n\nI breathe in, but all I get in my lungs is water. I drown further into the depths of darkness with an elephant sitting on my chest. It blows warm bubbles on my face, asking me to relax as I sink down to my own death.\n\nI wake up with a start.\n\nI open my eyes, but can\u2019t see anything. I realize it\u2019s hair \u2013 hair on my face, eyes, my ears and inside my nose. Carefully extracting the silky tendrils, I take note of my latest situation.\n\nThat elephant turns out to be Claire. She\u2019s completely and hopelessly lying on top of me, making breathing very difficult as the seconds pass. She has one arm draped around my neck and another over my chest with her face buried in the crook of my neck. As sleep takes flight from my muddy thoughts, I start feeling other things pressed against me.\n\nLike her boobs squashed flat against my chest. And her nipples poking me through the nightshirt.\n\nNot to forget her amazingly soft, incredibly warm body lying on top of me.\n\nWait. No, no\u2026NO!\n\nAh, fuck.\n\nNow my cock is hard, trying its best to tear free of my boxer and pajama. I\u2019m sure she can feel something hard poking her thighs.\n\nA mental face-palm follows next as I wonder what excuse I could give. The sun has already broken above the horizon and she\u2019ll be awake any minute. Very slowly, I turn to my side, planning to put down Claire and then try to slip out of her grasp.\n\n\u201cMike, stop moving,\u201d she mumbles with her eyes closed.\n\nI freeze.\n\n\u201cI need to go,\u201d I whisper.\n\n\u201cWhere?\u201d she whispers back.\n\nCrap, I hadn\u2019t expected follow-up to my excuse.\n\n\u201cPlease stay,\u201d she pleads softly, \u201cI like it this way.\u201d\n\n\u201cI have an\u2026emergency to take care of.\u201d\n\n\u201cThis?\u201d She reaches below and pats my boner gently, almost making me squeal in shock. \u201cI understand, and I don\u2019t mind.\u201d\n\nDid she just \u2013\n\n\u201cAre you scared?\u201d she asks.\n\nI gulp. \u201cNo.\u201d\n\n\u201cThen what\u2019s this?\u201d she asks, placing a hand on my chest where my heart is busy trying to beat its way out.\n\n\u201cI\u2019m afraid of\u2026disgusting you.\u201d\n\n\u201cHey,\u201d she says and looks up at me, her eyes bright and clear, \u201cyou\u2019ll never disgust me.\u201d\n\n\u201cYou haven\u2019t been sleeping, have you?\u201d\n\n\u201cI had a great sleep, thank you,\u201d she replies, stretching on top of me and rubbing oh-so-tenderly against my cock. I use the distraction to slip away, but she moves right along with me.\n\n\u201cStay.\u201d It\u2019s a command.\n\n\u201cWe have school.\u201d\n\nShe giggles. \u201cIt\u2019s Sunday, doofus.\u201d\n\nDidn\u2019t see that coming.\n\nShe gets up and straddles me, placing her hands on my chest for support. Her raven hair, despite the tousled look, makes her look even more beautiful in this early dawn. The energy and happiness bubbling forth makes it clear that she\u2019s not tired at all, unlike the previous day when she was ready to drop dead with exhaustion.\n\n\u201cI\u2019ve thought about something you said last night.\u201d\n\n\u201cOh, what was it?\u201d I ask. Half of my attention is on my groin where she was grinding against my cock absent-mindedly.\n\n\u201cThat I just have to take a look around.\u201d\n\n\u201cOkay\u2026so what did you f-find?\u201d I stammer as small jolts of pleasure shoot up from my groin.\n\n\u201cSomething I was looking for,\u201d she says, locking her eyes with mine, \u201cand it was right in front of me all this time.\u201d\n\nShe grinds her groin against mine again, this time in small circles. All illusion of her being unaware is out of the window. If she keeps it up, I\u2019ll cum very hard in a matter of few seconds.\n\n\u201cClaire,\u201d I begin shakily. \u201cIt\u2019s\u2026inappropriate.\u201d\n\nShe laughs. \u201cWhat is inappropriate?\u201d A devilish glint creeps into her voice as she grinds harder.\n\nI\u2019m sure heaven is just a few strokes away.\n\n\u201cYou grinding against me,\u201d I say.\n\n\u201cDon\u2019t you like it?\u201d\n\n\u201cNo,\u201d I begin, but back peddle immediately at the raise of her eyebrow. I add hastily, \u201cI mean yes, but this isn\u2019t right.\u201d\n\n\u201cHow can something that feels so good be wrong?\u201d\n\n\u201cClaire, stop. I\u2019m going to \u2013\u201d\n\nShe shushes me with a finger on my lips. \u201cLet me thank you.\u201d\n\nI feel my balls roiling. Me cumming in my pants seems imminent.\n\n\u201cMichael, is that you?\u201d someone calls from my front porch.\n\nIt\u2019s Aunt Sherry.\n\nShit.\n\nClaire\u2019s eyes widen in shock and she falls down flat on my chest immediately.\n\nOur roof has no boundary walls, just a thin safety railing constructed to keep people from falling over. Someone standing at my porch a few moments ago could\u2019ve seen the back of Claire\u2019s head and, I pray, nothing else.\n\nClaire\u2019s initial shock is gone when she realizes that she wasn\u2019t seen. An evil smile lights up her face and she grinds against me with renewed vigor.\n\nI don\u2019t know whether to laugh or cry.\n\n\u201cIt\u2019s me, a-aunt Sherry,\u201d I reply, holding her tight against me and hoping to slow her down somehow.\n\n\u201cWhat are you doing up there?\u201d she asks.\n\n\u201cI was just\u2026\u201d My head spins as my orgasm threatens to burst again. \u201c\u2026staaaar gazing.\u201d\n\nClaire sniggers quietly and kisses my cheek, but doesn\u2019t stop the humping. I place my hands on her hips and roll over on top of her, effectively ending her control. I hold her hands above her head with mine, to stop her from maneuvering again. With our faces just millimeters apart, our hot breaths wash over each other.\n\nIt\u2019s bizarre, yet intimate in a way I can never fathom.\n\n\u201cAre you okay?\u201d my Aunt asks suspiciously.\n\n\u201cI\u2019m good,\u201d I reply loudly.\n\nClaire looks up at me, disappointment clouding her face as she struggles against my hold. She pouts prettily, but it\u2019s not going to work.\n\n\u201cYou can always talk to me, Michael,\u201d Aunt Sherry says understandingly. She thinks I\u2019m trying to evade her.\n\n\u201cI know. You\u2019re the best!\u201d\n\n\u201cDo you want me to call the cleaners today?\u201d\n\nIf only Aunt Sherry knew my situation, cleaners would be the last thing on her lips. Despite being held down, Claire nudges her hips. I press my groin tight against hers, stopping her from doing even that. Her eyes widen all of a sudden.\n\n\u201cNo!\u201d I yell.\n\n\u201cDo you need anything else?\u201d my aunt asks again, blissfully unaware of the rooftop conundrum.\n\n\u201cNo, I\u2019ve got my hands full today,\u201d I say, \u201cI\u2019ll let you know.\u201d\n\n\u201cOkay. I was going out for a walk. Would you like to come with me?\u201d\n\n\u201cI\u2019m kinda busy here. How about tomorrow?\u201d\n\nA soft blush creeps up on Claire\u2019s cheeks. She\u2019s no longer struggling, and I feel as if she\u2019s no longer having fun with this. I\u2019m still clueless as to what happened.\n\n\u201cOkay,\u201d my aunt says. \u201cSee you later, Michael.\u201d\n\nI count ten seconds before I turn towards Claire.\n\n\u201cWhat\u2019s up with you?\u201d I ask.\n\nShe has her eyes shut, her cheeks reddened and her lips sealed. This close, she looks very kissable.\n\n\u201cClaire?\u201d I ask again, softly this time.\n\n\u201cPlease get off me,\u201d she says in a small voice.\n\nOur hips are mashed together, only a thin barrier of silky cotton separating our sexes. I scramble backwards away from her as quickly as I can.\n\n\u201cI\u2019m sorry,\u201d I apologize, \u201cI\u2019m so sorry.\u201d\n\nShe sits up, wrapping her arms around herself. Her eyes are downcast.\n\n\u201cIt\u2019s not your fault,\u201d she says miserably. \u201cI panicked.\u201d\n\n\u201cI\u2019m so sorry.\u201d\n\n\u201cI know,\u201d she says, a sad smile finding its way on her lips. \u201cYou just brought up some bad memories.\u201d\n\nI feel like a piece of filth.\n\n\u201cI\u2019m sorry that I freaked you out like this,\u201d she apologizes. \u201cI should be the one saying this.\u201d\n\nI don\u2019t know what to say. One minute she\u2019s an out of control nymphomaniac, and a scared victim in the next.\n\n\u201cI won\u2019t do that again,\u201d I say and stand up.\n\n\u201cAre we good?\u201d\n\n\u201cYes, we are,\u201d I say, \u201cBut I think we need to work somewhere else until the project is over. We can\u2019t work like this.\u201d\n\nShe nods. \u201cI understand.\u201d\n\nI turn towards the sun, now beating mercilessly over us. The morning is crisp and clear, just like it used to be.\n\nJust the way I like it.\n\n\u201cAre you hungry?\u201d\n\n\u201cYes.\u201d\n\n\u201cC\u2019mon,\u201d I say, \u201cLet\u2019s go out.\u201d\n\nJoan\u2019s Caf\u00e9 is a Sunday treat.\n\nI usually go alone. If the mood strikes my cousin, he accompanies me, but it\u2019s mostly me. I order the usual coffee, bread along with the house\u2019s special jams, and biscuits. Claire orders a latte with an extra shot of espresso.\n\nThe owner, Joan Maitland, knows me very well and reserves a seat by the window just for me. She has a sly smirk the entire the time she is taking orders from Claire and me.\n\n\u201cAnything else for your copine?\u201d she asks with a smile.\n\nI roll my eyes. \u201cShe\u2019s my project partner, Joan.\u201d\n\nWe\u2019re served breakfast in three minutes, I dig into my food while Claire sips her coffee.\n\n\u201cCan I say something?\u201d Claire asks.\n\n\u201cSure.\u201d\n\n\u201cI like to figure out people,\u201d she says. \u201cYou know\u2026studying them and trying to know their traits.\u201d\n\nI grin. \u201cI knew it.\u201d\n\n\u201cAm I that obvious?\u201d she asks, slightly shocked.\n\n\u201cSometimes, yes, when you\u2019re too engrossed to care about being seen,\u201d I say, grinning. \u201cAnyway, go ahead.\u201d\n\n\u201cI have figured out almost everyone except you.\u201d\n\nI laugh. \u201cShould I be flattered?\u201d\n\n\u201cYou\u2019re hiding something,\u201d she says seriously, looking into my eyes, \u201csomething that you don\u2019t want to talk about.\u201d\n\nWell, she got that one.\n\n\u201cThat is a talk for another day,\u201d I say, ending the discussion.\n\n\u201cI\u2019ll figure you out before that,\u201d she says with a smile.\n\nComing from her, it sounds more like a challenge.\n\nI love a challenge.\n\n\u201cGood luck.\u201d\n\n<center>Chapter 11\n\n~ A Farewell to the past ~</center>\n\n\n\u201cWhat do you think?\u201d\n\n\u201cI don\u2019t know. What do you think?\u201d\n\n\u201cI asked the question first.\u201d\n\n\u201cDoesn\u2019t matter.\u201d\n\nIt\u2019s nerve-wracking to have your career determined by grades, but it\u2019s the sad truth. We\u2019re sitting outside Miss Mahen\u2019s room waiting to collect our sheets. Mike looks calm, as always, and doesn\u2019t break a sweat.\n\n\u201cHow can you be so relaxed?\u201d I ask.\n\n\u201cShould I panic?\u201d he asks, grinning.\n\n\u201cNo,\u201d I reply and go back to watching the door anxiously.\n\n\u201cWe worked hard, so it shouldn\u2019t be bad,\u201d he says after some time.\n\nHe\u2019s right. We worked hard. By mutual agreement, we decided it\u2019d be best if we worked somewhere public. Things could\u2019ve escalated in his house, in a way which we would\u2019ve regretted later. Working in the library was in our best interests. It was hard not to talk about other\u2026things, but somehow, I stayed focused throughout the ordeal. For five days, we talked about nothing but studies.\n\n\u201cLehane, Michael,\u201d the assistant calls out. \u201cYou may go inside.\u201d\n\n\u201cMe?\u201d he asks incredulously.\n\n\u201cYes, you.\u201d She adjusts her spectacles and goes back to reading her documents.\n\n\u201cBe confidant,\u201d I encourage him as he stands up. He gives me a tight smile and goes to the door, waiting outside for a moment. He knocks twice and then goes inside.\n\nI wish I had the ability to hear through closed walls. Panic creeps in when he doesn\u2019t come out for fifteen minutes.\n\n\u201cCan I go inside?\u201d I ask the assistant.\n\nShe fixes me with a stern glare.\n\n\u201cI think I\u2019ll just wait here,\u201d I say brightly.\n\nAfter exactly one minute, he exits the door with a folder. He looks happy.\n\n\u201cWhat did we get?\u201d I ask desperately.\n\nHe smiles. \u201cWe got a B minus.\u201d\n\n\u201cWhat?\u201d It feels as if someone dropped a ton of lead in the pit of my stomach.\n\n\u201cIsn\u2019t it good?\u201d he asks, surprised.\n\n\u201cBut\u2026but I thought we\u2019d get at least an A.\u201d\n\nI feel like crying.\n\n\u201cShe said it wasn\u2019t that good, but was impressed by our efforts.\u201d\n\nI sit down heavily on my chair, wondering if I should screw myself to death. I hang my head, feeling the dawn of an impending headache. This came off much worse than I had thought.\n\nThe sound of sniggers makes me look up again. He has a huge smirk on his face.\n\n\u201cGotcha,\u201d he whispers.\n\n\u201cHuh?\u201d\n\n\u201cWe got an A plus,\u201d he says happily, waving the folder in front of my face.\n\n\u201cShow it to me!\u201d I snatch the folder out of his hands. Tearing its seal, I carefully extract the paper that holds the key to a lucrative scholarship. A letter comes out first.\n\nIt\u2019s addressed to me.\n\n\nClaire Bennet, \n\nI\u2019m impressed, especially at the subject that you chose to work upon. Having known Claudine Marie on a personal level, the in-depth detail of your biography, and discussion of her work, left me awed. Hardly any students have undertaken a project so ambitious in scale and managed to do it with finesse. You are truly an exception in the crowd.\n\nPerhaps the highest grade available will motivate your academic endeavors to do more.\n\nI wish all the best to you and your partner, Michael Lehane.\n\n\nSigned,\nCate Mahen\n\n\nWow.\n\n\u201cSo, this is it,\u201d he says.\n\n\u201cWhat?\u201d I\u2019m too happy to even hear things right.\n\n\u201cThis is where we say thank you to each other and part our ways.\u201d\n\nHe couldn\u2019t be saying that.\n\n\u201cI\u2019ll go first,\u201d he says and clears his throat. \u201cThank you, Claire, for sticking with me through thick and thin. I wasn\u2019t expecting such a high grade but \u2013\u201d\n\nI watch his lips move as he says something about me being such a nice person and that I will do very well in life. It feels as if the world is crashing down around me.\n\nMike hugs and smiles down at me. \u201cIt was a pleasure knowing you.\u201d\n\nI try to form words, but they don\u2019t come out.\n\n\u201cDo you want to say something?\u201d he asks.\n\n\u201cI\u2026you\u2019re nuts.\u201d\n\n\u201cWhat?\u201d\n\n\u201cYou\u2019re nuts!\u201d I scream.\n\nThe assistant clears her throat. I look back, only to find him genuinely amused.\n\n\u201cAre you crazy?\u201d I ask.\n\n\u201cListen to me \u2013\u201d\n\n\u201cNo, you listen to me!\u201d I say, almost shouting, prompting the assistant to clear her throat again. \u201cYou said that everything \u2013\u201d\n\nHe silences me with a finger on my lips.\n\n\u201cQuiet,\u201d he says, \u201cI\u2019m not done yet.\u201d\n\nHe takes me outside the building. I think I have tears on my cheeks. I swear I haven\u2019t cried so much since my first day in kindergarten.\n\n\u201cI want us to begin again,\u201d he says. \u201cYou don\u2019t know me, and I don\u2019t know you. Can you do that?\u201d\n\n\u201cWhy?\u201d\n\n\u201cI\u2019m still pissed at you for that day. Nathan keeps asking why I\u2019m being a pussy and apologizing to him all the time. I want to put that behind us. I want a fresh start. Do you understand?\u201d\n\n\u201cOh\u2026\u201d\n\nHe offers his hand. \u201cHi, I\u2019m Michael Lehane.\u201d\n\nHe smiles as I accept it shakily.\n\n\u201cI\u2019m Claire Bennet.\u201d\n\nI barely stifle a sniff that follows.\n\n\u201cWhy are you crying, Claire?\u201d\n\n\u201cI thought you still hated me.\u201d\n\n\u201cWe\u2019ve just met.\u201d He grins. \u201cHow can I hate you without knowing you first?\u201d\n\nI wipe away my tears and meet his gaze. It\u2019s kind, understanding and compassionate, just as I had thought it\u2019d be.\n\n\u201cI\u2019m sorry, Michael. I had dust in my eyes.\u201d\n\n\u201cYou\u2019re lying.\u201d\n\nI smile. \u201cOkay, I got emotional about\u2026a thing from the past.\u201d\n\nHe wipes my tears away, just like the first time a few days ago.",
        "\u201cThere\u2019s a saying. Would you like to hear it, Claire?\u201d\n\n\u201cI\u2019d love to,\u201d my voice cracks.\n\n\u201cThey say yesterday is history, tomorrow is a mystery but today\u2026today is a gift,\u201d he says and takes my hand smiling, encasing it gently with his own. \u201cThat\u2019s why we call it the present.\u201d\n\nMy chance of doing something right, of leaving all things behind in the past \u2013 this is it. He\u2019s my chance.\n\n\u201cThank you, Michael. I feel better.\u201d\n\n\u201cUnless you\u2019re my aunt, I\u2019d like to be called Mike. That\u2019s non-negotiable.\u201d\n\nI smile. \u201cOkay then, Mike it is.\u201d\n\n\u201cNow,\u201d he says, glancing at his watch, \u201cI was wondering if we could have something for lunch. I\u2019m hungry\u2026\"\n\nThe first day Mike introduces me to his friends, their eyes bug out.\n\nMoi, Claire Bennet, the pretentious bitch and rich snob would be sitting with them.\n\nI try my best to hide behind Mike, but it\u2019s impossible. I put on a brave face, but panic eats away at my insides. If they reject me, it\u2019ll screw my reputation.\n\nMike looks anxiously at his friends. \u201cWe\u2019re together now, so I was wondering if she could sit with us.\u201d\n\nDead silence.\n\n\u201cI knew it,\u201d Nathan finally blurts.\n\nHis cousin naturally nods his support while Nathan shrugs nonchalantly. Nina and Sam find something very interesting in their plates, perhaps a new engrossing species of spaghetti. They simply refuse to look at us.\n\n\u201cWell?\u201d Mike asks again, wondering what their stony silence meant.\n\nSam and Nina whisper something urgent, almost as if it\u2019s classified information. Finally, they turn towards us, their private chat having ended at an apparent stalemate.\n\n\u201cI\u2019ll ask one question,\u201d Nina says.\n\n\u201cWhat?\u201d\n\n\u201cHow long have you been having sex?\u201d\n\nThat question wasn\u2019t asked quietly either. Every ear present in the cafeteria swiveled towards us. I feel my cheeks warming up.\n\n\u201cN-no!\u201d I insist when I realize that Mike is hopelessly tongue-tied. \u201cWe didn\u2019t do any of that.\u201d\n\n\u201cHa!\u201d Nina squeals in delight. Sam grumbles and puts a dollar on her outstretched palm.\n\n\u201cWhat was that?\u201d Mike asks her.\n\n\u201cGo ahead, loser,\u201d she nudges Sam. \u201cYou say it.\u201d\n\n\u201cUhhh\u2026\u201d Sam pauses, searching for the best way to put his thoughts, \u201cI bet Nina that Mike and Claire were screwing each other.\u201d\n\n\u201cWhat?\u201d Mike yells, echoing my thought.\n\n\u201cApparently, I was wrong,\u201d he sighs.\n\nThe corner of Nina\u2019s lips quirk up into a smile. \u201cWe wouldn\u2019t mind at all if Claire sits with us.\u201d\n\n\u201cThanks guys,\u201d he says and takes his seat. \n\nI follow suit and sit close by his side. He takes my hand underneath the table and squeezes it encouragingly.\n\nNina whispers something to Sam again, but he shakes his head vigorously.\n\n\u201cI can\u2019t,\u201d Sam whines, almost pleading. \u201cI don\u2019t have the money.\u201d\n\nNina grinned. \u201cWe\u2019ll call it a deferred payment.\u201d\n\n\u201cSo,\u201d she addresses us, this time beaming widely, \u201cI was wondering if you two have at least kissed each other\u2026?\u201d\n\n<center>*</center>\n\n\nLeaving my old circle was hard.\n\nMany times I wonder if I\u2019ve made the right decision. It always felt good to be a part of the crowd that everyone knew, that everyone worshipped. It was like a self-appointed God-status in school. It\u2019s hard to leave something that has been an integral part of your life for as long as you can remember. Admittedly, I had the hang of the childish politics, the gossips and yada-yada involved.\n\nWhen I look at Mike, all of my doubt disappears like a wisp of smoke. I know I made the right choice. \n\n\u201cSo, you\u2019re sitting with them,\u201d Missy says. It\u2019s more of a statement than a remark.\n\n\u201cYes.\u201d\n\nThe hallway is bustling with people, and hardly any people notice us in this hubbub. She looks around herself, an unknown conflict evident in her eyes.\n\nAfter I started sitting with Mike, the rumor mills began their activity. Some of my old \u201cfriends\u201d tried to talk me out of it, while I nodded, as if I agreed with every single one of their stupid points.\n\n\u201cI wish I had the courage to do something like that,\u201d she says sadly.\n\n\u201cOur table is just a short walk from yours.\u201d\n\nShe smiles unhappily.\n\n\u201cI wish it were that easy.\u201d\n\n<center>*</center>\n\n\nI don\u2019t know what Mike thinks about me.\n\nI know I like him. I trust him, and I want to be with him. He\u2019s probably the only person about whom I\u2019ve genuinely felt something. It\u2019s not a crush. It\u2019s a want.\n\nHe, on the other hand, keeps me at an arm\u2019s distance. As if, he\u2019s afraid.\n\nOf what, I don\u2019t know.\n\n\u201cThat\u2019s what dates are for!\u201d Joyce hollers through the phone.\n\n\u201cJoyce, he won\u2019t ask me out,\u201d I reply miserably. \u201cI just know.\u201d\n\n\u201cYou\u2019ve told me that before, silly. You should ask him out.\u201d\n\n\u201cMe?\u201d I ask incredulously. \u201cI\u2019ve never been out to a real date; forget about me asking him to go out with me.\u201d\n\n\u201cWhat are you afraid of?\u201d\n\n\u201cI don\u2019t know. Don\u2019t want to push him, I guess.\u201d\n\n\u201cDearest cousin,\u201d she says exasperatedly, \u201che won\u2019t refuse you. You can take it in writing from me.\u201d\n\n\u201cWhat if he does?\u201d\n\n\u201cHe has no reason to. Tell me one, and I won\u2019t push this topic.\u201d\n\n\u201c\u2026\u201d\n\n\u201cThought so,\u201d she continues. \u201cNow, when would be the best time to ask him?\u201d\n\n\u201cUmm\u2026\u201d\n\n\u201cYou once said he stays inside his house during weekends,\u201d she rattles on. \u201cYou will ask him out tomorrow morning.\u201d\n\n\u201cBut \u2013\u201d\n\n\u201cThat\u2019s my girl!\u201d she chirps happily. \u201cCall me tomorrow after you\u2019ve asked him out. If he agrees, which I\u2019m sure he will, we\u2019ll chalk out the next phase of our plan.\u201d\n\n\u201cWhat\u2013\u201d\n\n\u201cBye, Sweets! Call you tomorrow,\u201d she sings.\n\n\u201cWait, Joyce, I still \u2013\u201d\n\nShe had already hung up on me.\n\nThis feels more like a tornado that leaves chaos behind. I hold my head in panic, wondering what to do.\n\nI\u2019ve never asked anyone out for a date. It\u2019s always the other way around \u2013 guys asking me out and getting refused.\n\nMike, will you please go out on a date with me?\n\nToo needy.\n\nMike, how about a date?\n\nToo callous.\n\nMike, kiss me!\n\nI can already see his eyes rolling out of their sockets.\n\nWhy am I so agitated? I\u2019m a beautiful, confident girl.\n\nI can do this.\n\nI hope.\n\n<center>Chapter 12\n\n~ Begin Again ~</center>\n\n\nThe streets are empty. Only a few people waddle around with determined looks, desperate to lose a few pounds of fat.\n\nI've been thinking a lot about my future these days.\n\nJoining the Special Armed Force was my dream. I couldn\u2019t join the elite Black Guard unit, as they were handpicked orphans, but I\u2019m still eligible for the Special Land Forces Unit. If I somehow crack their tests and qualify for an overseas division, it\u2019ll be the opportunity of a lifetime.\n\nDiscipline was never a problem. I've been living in self-imposed discipline for the last two years. I just have to break the news to my sister gently, because she will go ballistic if she hears this news.\n\nAnd Claire?\n\nI haven\u2019t put much thought to it, but I guess she\u2019ll be supportive.\n\nWith all my concentration on the few feet ahead and the thoughts circling my head, I barely notice the runner colliding head first into me. The person is lucky as he got me to cushion his fall. \n\nI\u2019m not.\n\nI land hard on my back, knocking most of the air from my lungs. What little remains are forced out by his weight landing on top.\n\nCruel World one, Michael zero.\n\nSurprisingly, he doesn\u2019t even make an effort to get up.\n\nThe sonovabitch.\n\n\"Oh God, I'm so sorry!\"\n\nI don't have air in my lungs. I can't even see. My heart is beating like a psychotic drum. I try to gulp as much precious oxygen as I can before I pass out.\n\n\"Mike?\"\n\nThere's no way a guy could have a voice that soft.\n\n\"Come on. Get up!\" She offers me her hand.\n\nMy vision has returned, somewhat. The early morning sky has an amazing shade of blue. It's funny how I've never noticed such a stunning scenery before, obstructed somewhat by Claire\u2019s worried face.\n\n\"The grass is way too cozy,\" I whip out lazily.\n\nClaire grins at me, blinding me momentarily with her dazzling white teeth. She ponders for a moment before plopping down on the grass beside me.\n\n\"Damn right it is.\"\n\nI lie there on the ground, admiring the scenery above, and beside me.\n\n\"So when did you start bumping into people?\"\n\nShe punches my arm lightly. \"That was an accident.\" She pauses. \"You look as if today were the end of the world.\"\n\nThat gets a laugh. \"I'm sure it wasn't that bad.\"\n\n\"If you can't see ahead, then I'd bet it was.\"\n\n\"When did you start these morning runs?\"\n\n\"About a year ago. A girl has to keep herself in shape, y'know.\"\n\nAnd it definitely shows.\n\nI lie there for some more time admiring the early morning sky, the trees, the birds, the \u2013\n\n\"Mike?\"\n\n\"Hmm?\"\n\n\"What are you doing this Friday?\"\n\nThe question was so rapid that I have to re-run it in my head. Once realization dawns, an involuntary smile creeps onto my face. \n\n\"You\u2019re asking me out?\"\n\n\"Maaybeeee.\"\n\nLet\u2019s see, I don't have anything to do, except mope around the empty house, watch a movie, cook my dinner and maybe even polish up my boring homework. I rise first, help her up, and take some time dusting my pants to think about it. We have been friends for a while. Surely, a harmless date would be okay.\n\nShe's looking at me expectantly, lips pursed. A few strands of her silky hair have gone astray, giving her a wanton look, and her normally pale skin is flushed from her recent exertions.\n\nI'm certain. \n\nEven wild horses can\u2019t stop me from going out with her.\n\n\"We have a date.\"\n\nShe brightens my day with another dazzling smile.\n\n\"Thanks!\"\n\nBefore I can do anything, she stands up on her toes, kisses me on my cheek, turns around and jogs away. I'm left standing awkwardly caressing my cheek, which still burns after ten minutes.\n\nOn Friday, all hell breaks loose.\n\n\"Dump these black clothes. What are you, a Goth?\" My cousin looks disapprovingly at the T-shirt I hold up for inspection. This is the fifth consecutive piece of clothing rejected without an iota of respect.\n\n\"Black is classic, bro. I wear it whenever I'm in doubt.\"\n\nHe shakes his head in utter disgust.\n\n\"No wonder you were single,\" he mutters, rummaging through my cupboard before coming out with an ancient piece of clothing I've never worn. \n\nIt\u2019s a dark blue, button-down shirt, a gift from Mom on their anniversary.\n\n\"Will you look at this?\" he says with some sort of smug satisfaction I can't comprehend. \"A treasure beneath all this junk.\"\n\n\"Hey!\"\n\nA minute later,\n\n\"Momma would be so proud.\"\n\n\"Shut up.\"\n\nI have to agree I've never looked better because the shirt fits my physique perfectly, unlike my preferred brand of baggy clothes.\n\n\"Alright I gotta go. Bye.\"\n\n\"Don't mess this up by trying to be someone else.\"\n\nI roll my eyes. \"Yes, Dad. Lock my house on your way out.\"\n\nI run out of my house as fast as I can. The weather is clear and perfect for what I have planned so I take my car and set off towards our meeting point.\n\nClaire told me to meet her at a caf\u00e9 near her house. It\u2019s a posh area, situated in the wealthy zone of our town. I told her that I could pick her up from her house, but she insisted otherwise. Part of me says that she\u2019s embarrassed about something.\n\nI just hope it isn\u2019t me.\n\nI park my car at a safe distance and get out. Although I wouldn\u2019t touch Dad\u2019s BMW on any given day, he isn\u2019t here to stop me. I took the liberty of cleaning it inside out and use it for myself on special occasions, like this one.\n\nI didn\u2019t even recognize her at first glance.\n\nA black one-piece dress adorns her body, the skirt barely reaching her knees. It leaves her toned legs open to my gaze. I realize it\u2019s the first time I\u2019ve seen her wearing something other than her skinny jeans.\n\nA faint makeup highlights her features. The only outrageous difference is her lips, a sharp contrast to her fair skin, painted with a dark-red lipstick.\n\n\"Close your mouth.\" She grins.\n\n\"You're beautiful,\" my voice is an obnoxious croak.\n\n\"Well, thank you!\" she gushes and makes a little curtsy. \"Shall we?\"\n\nShe offers me her soft hand. I gladly accept it and lead her to my car.\n\nI think I must be the happiest teenager alive.\n\nI take her to the summer carnival that has just opened by the beach, filled with couples like us, out on a Friday night. Our conversation is more riveting than the attractions themselves. We talk about everything and still don\u2019t run out of topics. Even the silence between us is comfortable.\n\nI also learn she's a very lousy shot.\n\n\"Oh, come on!\" she cries desperately after her third and final attempt to hit the moving toy aliens. She really wants that fluffy white teddy, but with an aim of such rotten accuracy, it would be nigh impossible.\n\nThe game is predictable. On a closer look, the toy aliens followed a \u2018P', an \u2018O' and then finally a \u2018Z' pattern.\n\n\"This game is rigged!\" she cries out indignantly.\n\n\"It ain't, sweetcheeks,\" the keeper shoots back, looking very happy with his little profit.\n\n\"Here, let me try.\" I hand the smug keeper another two bucks.\n\nI miss the first one.\n\n\"Warm-up,\" I mutter to a sniggering Claire.\n\nI knock the aliens off their hinges on the second and third try while the Carney still has the silly grin on his face.\n\nI beam right back at him.\n\nI pick up the pearl-blue teddy for Claire and the white unicorn for Breanne for my two successful shots.\n\n\"Thanks.\" Her smile turns me into warm, gooey mush.\n\nWe walk out of the carnival into the beach with a vanilla snow cone in her hand. I decline the sugary goodness, feigning sensitivity to extreme cold dishes. I have to join a Boot Camp after a few months. Watching what I eat now will be a real help to me there.\n\n\"I don't remember having so much fun,\" she chirps in between licks. I'm fascinated by the sight of her pink tongue darting out to lick the snow cone.\n\n\"Me either,\u201d I say, using what must've been the best one-liner to have existed for guys to say.\n\nWith our shoes slung by our fingers, we walk hand-in-hand down the beach. The sand is cool between my toes and the cool night air barely a caress to my skin. The gentle noise of the waves breaking on the shore adds a quiet serenity to the beautiful place. We walk away from the noise of the carnival, each absorbed in our own thoughts.\n\nWe approach a group of rocks amidst the waves, the jagged edges looking forlorn underneath the moonlight. Climbing the rocks, where they meet the sea, we sit down.\n\n\u201cBeautiful, isn\u2019t it?\u201d she asks.\n\n\u201cYeah,\u201d I reply, just as mesmerized. \u201cI think I could stay here forever.\u201d\n\nJust then, a particularly strong wave crashes onto the rock, spraying our feet with warm seawater. As the water recedes, it leaves behind a faint ticklish sensation, making her laugh. The sound is beautiful, and carefree.\n\n\u201cMike?\u201d\n\n\u201cHmm?\u201d\n\n\u201cI want to say something.\u201d\n\n\u201cGo on.\u201d\n\nShe looks down at her feet, focusing, before she begins, \u201cI have had a very rough childhood. Despite being born with a golden spoon, I never had the parents to love me. My brother, the only one who understood me, died a few years ago.\u201d\n\nI can feel the pain brimming over, but her voice is neutral. I know she\u2019s not asking for sympathy. She just wants me to hear it out, to understand her, what she\u2019s going through. I take her hand in mine and link my fingers in hers, encouraging her to go on.\n\n\u201cAll of my friends try to use me. All of them are fakes. I even tried to commit suicide once.\u201d Her grip on my hand tightens painfully as the memory rears its head. \u201cBut I got over it. My cousin, Joyce, saved me. I had grown cynical over the years, hating everyone and myself. I never believed that good could exist any more.\u201d\n\nShe looks at me, a sad smile coloring her face. \u201cThen you came along and proved me wrong. You\u2019re the best guy in the world I could ever ask to be with.\u201d\n\nShe rests her head on my shoulder, as I wrap a protective arm around her. This is probably the first time she has revealed so much about herself to anyone else besides her cousin.\n\nI wonder how I can divert her thoughts.\n\n\u201cDo you remember your challenge?\u201d I ask.\n\n\u201cChallenge?\u201d\n\n\u201cThat you\u2019ll figure me out someday,\u201d I say, \u201cbefore the right time.\u201d\n\nShe looks at me. \u201cIt\u2019s hard to study a subject like you.\u201d\n\nI stare at the waves crashing over the shore. The scene hasn\u2019t changed one bit, as if time had frozen it over.\n\n\u201cWhat do you see?\u201d\n\n\u201cI see sadness,\u201d she says slowly. \u201cIt\u2019s something that still makes you sad, and I think it\u2019s the same thing that has matured you ahead of your time.\u201d\n\n\u201cMy parents died two years ago,\u201d I say.\n\n\u201cWhat?\u201d\n\nDisbelief, shock, sadness \u2013 it\u2019s amazing how she combines all these emotions into a single word. I don\u2019t say anything else, letting her digest the fact. It\u2019s not every day that I reveal my past.\n\n\u201cBut, the first day we met, you said that-\u201d\n\n\u201c- that they\u2019re not coming back anytime soon,\u201d I complete her thoughts. \n\nI\u2019m sure her brain is doing overtime, matching the puzzle together and fitting in missing pieces of my character jigsaw.\n\nEverything must fit perfectly now.\n\n\u201cI\u2019m sorry. I could\u2019ve never guessed that,\u201d she says after a few moments, and holds me tight. It\u2019s comforting that way, having someone to hold you while you confess your horrid past. No one ever did that for me, not even my sister.\n\n\u201cIt\u2019s okay. Aunt Sherry, Dan and Claudine kept me sane all this time.\u201d\n\n\u201cHow could you be so composed after all this?\u201d\n\n\u201cIt\u2019s a long story.\u201d\n\n\u201cTell me.\u201d\n\nI take a deep breath. \u201cMy parents and I had a big fight. They wanted me to do something, and I wanted anything but that. We dragged it on for a week until the day of their wedding anniversary. All of us were in the car when the tanker hit us. In an instant, everything I knew just\u2026went away. Forever.\u201d\n\nA hard swallow doesn\u2019t help with the knot in my throat. She holds me tighter, saying nothing as I go on.\n\n\u201cWe didn\u2019t even talk much that week, apart from acknowledging each other\u2019s existence. I even said that I hated them and wouldn\u2019t see their faces ever after I graduated out of school\u2026I just wish I could say that I loved them a lot one last time. When I awoke from the coma, I promised myself that I wouldn\u2019t do anything again that I\u2019d regret that much.\n\n\u201cIt\u2019s a strange feeling, this regret. Even when you think that you have gotten over it, it comes down on you with vengeance.\u201d\n\n\u201cI\u2019m so sorry,\u201d she whispers.\n\n\u201cDon\u2019t be.\u201d\n\nShe doesn\u2019t say anything else, but holds me as I pick up the scattered pieces of my thoughts.\n\n\u201cMy sister\u2026she doesn\u2019t even want to see my face now.\u201d A dry, humorless chuckle escapes my throat. \u201cShe says I\u2019m a painful reminder of Dad.\u201d\n\nMemories like these have stopped causing pain. All that remains is a dull ache whenever I recall the events from two years ago. It\u2019s hard to get over it, but I give it my best shot.\n\n\u201cI remember something that someone said,\u201d she says. A faint smile plays on her lips. \u201cYou know, when I was feeling pathetic and the lowest I\u2019ve ever felt in my life, this guy came up to me and told me a wonderful thing.\n\n\u201cWhat was it?\u201d I ask, genuinely curious.\n\n\u201cYesterday is history, and that we should live for today.\u201d\n\nThat brings a smile. She remembers that.\n\n\u201cYou need to let go of it, Mike,\u201d she says quietly. \u201cIt\u2019s for the best. Your parents wouldn\u2019t want to see their son miserable like this. They knew you loved them despite what you said.\u201d\n\n\u201cProbably,\u201d I concede.\n\n\u201cProbably?\u201d\n\n\u201cOkay\u2026yeah, they knew and wouldn\u2019t want to see me like this.\u201d\n\nShe kisses my cheek softly. \u201cMuch better.\u201d\n\nI feel safe this way, comforted by someone who has been through a similar life. She understands me in a way that my own family can never do. We sit in the silence for some more time. As much as I would\u2019ve liked to sleep on this spot, I have a responsibility to make sure that Claire is safe back in her house.\n\n\u201cC\u2019mon, Claire,\u201d I say reluctantly, \u201cit\u2019s time to go.\u201d\n\nShe pouts, and I\u2019m highly tempted to backtrack on my decision.\n\n\u201cIt\u2019s getting late,\u201d I stress.",
        "\u201cWe\u2019ll come here some other time, then?\u201d she asks innocently.\n\n\u201cThat\u2019s a great way to ask me out,\u201d I say.\n\nShe laughs. \u201cThat\u2019s because I know you\u2019re not going to.\u201d\n\n\u201cI\u2019d love to ask you out.\u201d\n\n\u201cThen ask.\u201d\n\nMy throat runs dry in an instant.\n\nShe giggles. \u201cSee what I mean?\u201d\n\nWe climb down from the rocks. As I help her down, a sudden impulse takes over. I clear my throat and face her. She looks up at me, waiting for me to go on.\n\n\u201cSo, Claire\u2026I was wondering if you\u2019d like to, you know, go out on a\u2026date?\u201d\n\nShe bursts into another fit of giggles. I feel an embarrassing blush creep over my ears and cheeks.\n\n\u201cWhat are you so afraid of?\u201d she asks. \u201cYou\u2019re so confident, but balk at the prospect of asking a girl out on a date.\u201d\n\n\u201cI guess I need some more practice,\u201d I reply cheekily. \u201cSo?\u201d\n\nShe steps closer, wraps her arm around my neck and pulls me until our faces are millimeters apart. Up this close in the dark, her soft grey eyes are spellbinding, determined, yet scared. As her lips inch close, the realization strikes.\n\nShe\u2019s going to kiss me.\n\nCLAIRE is going to kiss ME!\n\nBefore I know it, our lips meet, soft and hesitant. On an instinct, I pull her closer against me, mashing our lips together. I lose myself in that soft, warm feeling. Pulling gently at her lower lip, I suck on it. She moans, winding her fingers in my hair and pulling me in for a deeper kiss.\n\nMy hands, with a will of their own, roam over her back. I sigh contently as her body rubs gently against mine, her breasts soft against my chest and the warm scent of her perfume infusing my senses.\n\nIt feels so perfect, so beautiful, so\u2026right.\n\nUnfortunately, the kiss goes on for so long that I never notice my lungs begging for precious air. We part reluctantly, our lips producing a soft \u2018pop\u2019 as they separate. She buries her face in my chest.\n\n\u201cHow\u2019s that for a yes?\u201d she asks.\n\n\u201cWow.\u201d\n\nWe just hold each other, basking in the warmth and quiet companionship.\n\n\u201cSo, that\u2019s what it\u2019s like to kiss someone,\u201d she says after some time.\n\n\u201cI\u2026it was a first for me too.\u201d\n\nShe looks up at me and smiles. \u201cWe\u2019re on the same boat, then.\u201d\n\n<center>Chapter 13\n\n~ Harp Un-Strung ~</center>\n\n\nWe kiss for a good fifteen minutes, each round growing more fierce and desperate than the last. \n\nIt\u2019s good, but it\u2019s not enough.\n\nI want more.\n\n\u201cWe\u2019re getting late,\u201d he whispers again reluctantly. \u201cMy aunt will raise hell if she finds about my nocturnal activities.\u201d\n\n\u201cLet\u2019s go to your house then.\u201d\n\nHe gulps. \u201cAre you sure?\u201d\n\n\u201cWell, someone wants to play,\u201d I tease, running a hand lightly over the obvious bulge in his jeans. He lurches back from the illicit contact.\n\n\u201cYou\u2019re such a doofus,\u201d I laugh.\n\nHe regains his composure very quickly. \u201cOkay, call someone from your house and say that you\u2019re staying over and\u2026whatever else you see fit.\u201d\n\nI\u2019m already done texting a message before he can complete his words. I grab his hand and race towards his car.\n\n\u201cC\u2019mon, I need a closer inspection of your goodies.\u201d\n\nThe drive back to his house is full of anticipation. As if time has slowed down, making the short journey incredibly torturous. We kiss some more during the red signals, not even realizing when it turns green until a driver honks angrily behind us.\n\nHe opens his garage doors long before we\u2019re in sight of the house and parks the car with squealing tires. I don\u2019t know how we navigated through the house, but we somehow end up on his bed in a tangled heap of intertwined arms and legs. My hands are everywhere at once, as if it\u2019s the end of the world with far too little time to spend.\n\n\u201cI have a crazy idea,\u201d I say, pulling back from the kiss.\n\n\u201cWhat?\u201d\n\n\u201cLet\u2019s go to the roof.\u201d\n\nHe grins.\n\n\u201cI like the way you think.\u201d\n\nWe rush up the stairs, careful not to make much noise. He settles the blankets and pillows on the roof. I push him onto his back as soon as he\u2019s done.\n\n\u201cEasy,\u201d he says, but I swallow his next words with a kiss.\n\nI\u2019ve never felt so\u2026wanton, so eager for someone\u2019s touch. As if a dam broke somewhere inside me, carrying me away with its tide. It\u2019s the one thing that I\u2019ll never regret doing in my life.\n\nHe rolls over on top of me and holds my hands above my head, controlling me effectively. Just like last time.\n\n\u201cSlow down, we\u2019re not going anywhere,\u201d he says, grinning down at me. I try to think up an excuse, but I realize he\u2019s right. We\u2019re both panting like dogs in heat.\n\n\u201cNice and slow,\u201d he says and buries his head in the crook of my neck, sending tingles of shock as he nuzzles my skin.\n\nHis warm body is a comfortable weight atop mine. I wrap my legs around his hips and hold him closer to me, sighing in contentment as he kisses my neck and shoulders.  My heart feels full, almost to the point of bursting out of my chest with sheer joy.\n\nHe kisses my cheek, my jaw and descends down to my throat. A startled gasp escapes me when he kisses a particularly sensitive region. His lips quirk into a devilish grin as he spends more time on that place, licking and nibbling and eliciting small gasps from me. He nibbles my neckline as his fingers search for the zip. \n\nMy heart jumps when he finds it, holds it and pulls it down slowly. The sound, instead of arousal, brings panic.\n\nHe stops.\n\nHolding my chin, he makes me look up at him. His eyes are sincere, full of love and understanding.\n\n\u201cYou\u2019re the most beautiful person I\u2019ve ever seen, Claire,\u201d he says simply, and just like that, a sense of peace and calm replaces the panic. He leans down and kisses me once more, our lips molding with each other\u2019s.\n\n\u201cIf anything makes you uncomfortable, tell me, and I\u2019ll stop.\u201d\n\nI nod gratefully. He pulls the zip down to my waist. Threading a finger to each of the straps holding my dress, he pushes it aside and brings it down to my waist. His eyes remain glued to my skin, revealed inch by inch, as a piece of my dignity is carefully pried apart. I raise my hips as he pulls the material down to my legs. I\u2019m out of it, finally, clad only in my bra and panties.\n\nI wonder if anyone could see us on the roof, with me scantily clad in my underwear. Maybe doing it in such a romantic setting was a bad idea.\n\n\u201cNo one can see us,\u201d he says, reading my thoughts. \u201cIt\u2019s just you and me.\u201d\n\nJust me and Mike.\n\nIt sounds like music to my ears.\n\nHe draws another lingering kiss from my lips and then kisses my sternum, down to my cleavage. I\u2019m only a girl with a modest cup size, but his enthusiasm gives me a gigantic ego boost, elating my feelings to new heights.\n\nHe reaches behind my back and unhooks my bra\u2026or tries his best to. I giggle uncontrollably as he fumbles with it and curses under his breath. \n\n\u201cI hate this thing,\u201d he says, mock-anger in his voice.\n\n\u201cMaybe you need some more practice.\u201d I smile and reach behind myself, unhooking the bra and holding the cups with one hand.\n\nHe watches me with barely contained lust. I feel like a virgin deflowered by the meanest wolf around. The panic begins to resurface, but a sudden kiss on my lips surprises me, making me open my eyes. I didn\u2019t even realize that I had closed them out of fear.\n\n\u201cI wish I could tell you how beautiful you are to me, Claire,\u201d he says, a faint smile on his lips. \u201cYou don\u2019t have anything to hide.\u201d\n\nI smile. \u201cYou always know the right thing to say, don\u2019t you?\u201d\n\n\u201cYes, I think\u2026\u201d he trails off as I let the bra fall. \n\nMy breasts, though not the biggest hooters around in school, are well-formed \u2013 teardrop shaped topped with light pink areolas and nipples. Many a day I stood in front of the mirror, wishing them to somehow grow bigger. Not today.\n\n\u201cLike what you see?\u201d I ask, even though his expression of sheer awe says it all.\n\n\u201cLove it.\u201d\n\nHis warm hands make my breath catch as they caress the sensitive underside, hefting my breasts and worshipping them slowly. My insides clench with pleasure as he rubs my hardened nubs, rubbing and rolling them over. His touch, so foreign, make my nerves tingle with an electric shock as he gently lowers his head and takes one of my pink nubs inside his hot mouth.\n\n\u201cOh,\u201d I gasp, as his wet tongue flicks over my flesh.\n\nMy eyelids shut down as I take in the sensory overload of two nipples being stimulated simultaneously. I never noticed his other hand moving down onto the crotch of my panties. I jerk as his tentative fingers rub my slit through my moist panties.\n\nIt\u2019s only a matter of a few moments before a small wave of contractions grip my body in its throes of orgasm. Everything falls apart and I clamp my thighs close, nearly crushing his hand.\n\nI barely hear his grunt of pain as I familiarize myself with the foreign feelings coursing through my veins, stimulating me to a limit far beyond my imagination. Slowly, the muscles of my legs relax and Mike pries his hands away.\n\nHe lies down beside me, draping an arm over me, embracing me sideways, as I thank the stars above.\n\nI just don\u2019t know what for.\n\n\u201cYou look adorable with your eyes shut.\u201d\n\n\u201cReally?\u201d I ask. It feels like an out-of-the-body experience for me, as if someone else had asked it.\n\nHe laughs softly. \u201cHaving my hand crushed for that cute scrunched up face was definitely worth it.\u201d\n\n\u201cI\u2019m so sorry,\u201d I apologize, reaching for his hand.\n\n\u201cIt\u2019s the other one,\u201d he says, amused. I reach for it, but he holds it away. \u201cIt\u2019s alright, Claire. You didn\u2019t break any bones.\u201d\n\nAs we lie there, doing nothing and basking in the comfortable silence of the twinkling stars, a realization hits me.\n\n\u201cHey, how come I\u2019m the only one naked?\u201d I ask.\n\nHe grins as I get up and straddle him. I open his buttons one by one, following each with the softest kiss. After I throw the offending piece of clothing away, I start kissing back again from his neck, biting particularly hard at a spot near the junction where his throat met his chest.\n\n\u201cOuch,\u201d he yelps. \n\nThat bite will bruise proudly on his neck for everyone to see.\n\n\u201cI\u2019ll have a hard time explaining that to people,\u201d he says.\n\n\u201cI\u2019m marking my territory,\u201d I say a little more harshly than I had intended. I don\u2019t know why, but something about this reminded me of that loser, Jim.\n\n\"Always yours, Ma'am,\" he replies sincerely, taking my hand and kissing it softly. \n\nThe reply was a bit corny, but it\u2019ll do nicely for me. I respond with a sweet kiss to his cheek.\n\nI unbuckle the belt and pull his jeans and shorts down his legs at one go before he can protest. His cock jumps up, freed at last. I hold the warm throbbing flesh with my hand, marveling at its warmth and inherent pulsating beat.\n\nMike looks at me apprehensively. \u201cLook, Claire, you don\u2019t really have to\u2026OH Sweet Jesus!\u201d\n\nThe next few words are drowned by his moans of pleasure as I envelope the sensitive head with my mouth and lap it gently with my tongue. I\u2019m no stranger to blowjobs, but I never thought that I\u2019d actually enjoy giving one.\n\n\u201cYou were saying?\u201d I ask innocently.\n\nHe grunts his denial, and I happily go back to my mission of keeping him in touch with Lord Almighty. I take my time, marveling at the way his thick shaft hardens further inside my mouth. A strange taste invades my senses as his precum oozes out, lubricating him further. I pump him rhythmically, swirling my tongue and sucking over his glans.\n\n\u201cYou know what?\u201d he asks mirthfully.\n\n\u201cHmm?\u201d I hum, sending vibrations straight to his cock. He moans and clutches a handful of blankets as the pleasure scatters his train of thoughts.\n\nI want to giggle, but it\u2019d ruin the effect.\n\n\u201cMasturbating with my hands will never be the s-same.\u201d\n\nThis time, I have to pause and laugh. The little remaining tension in my gut dissipates as we laugh together.\n\nI dive straight back to my homework after that. His hands reach for my hair as his back arches off the makeshift bed. The head of his cock hits the back of my throat, and I gag. Thankfully, it doesn\u2019t last long and he pulls back, letting me take control once more.\n\n\u201cClaire, I\u2019m going to cum,\u201d he gasps after a minute.\n\nI look into his eyes and renew my efforts, watching his eyes lose focus and then roll back as he ejaculates inside my mouth. The first spurt hits the back of my throat, and I swallow it quickly, making sure not to let it leak over and make a mess.\n\nMike tastes somewhat like peach, a sweet-salty peach at that. My instant reflex was to spit it out, but I bear it quietly, knowing that I do this for him. He calms down after a few moments, and shudders sporadically as I lick him clean. His semi-limp manhood pops out of my mouth apparently satisfied for the moment.\n\nHe hooks his hands under my pits and drags me upward until I\u2019m lying on top of him. I half-squeal in fear but calm down as my common sense takes over. He kisses me hard, possessiveness evident through the act, like never before.\n\n\u201cThank you,\u201d he whispers.\n\n\u201cThank you too,\u201d I whisper back.\n\nHe catches his breath, while I acquaint myself with the turn of events. Never in my wildest dreams did I even think about having sex with Mike, on a rooftop at that. It seemed like such a foreign idea. Now?\n\nWell, our compromising position speaks for itself.\n\nThe sensitivity has waned somewhat, renewed slightly by the friction as my nipples rub against his chest. I feel him with my hands, slowly this time, wondering if it\u2019s a dream.\n\n\u201cI\u2019m real, Claire,\u201d he says, \u201cEverything is happening for real.\u201d\n\n\u201cWill you regret it in the morning?\u201d I ask quietly.\n\nI don\u2019t know why, but my insecurities always crop up as mood spoilers just when I feel most vulnerable.\n\n\u201cNever,\u201d he says without hesitating, \u201ctomorrow morning or the next ones after that.\u201d\n\nI just hold him tight, afraid to think what would happen if he ever chose to leave me. It would be too much to bear.\n\nMike kisses me again, his touch gentle and reassuring. He rubs my nipple and pinches it, sending a sudden jolt to my senses. He leaves behind a trail of wet kisses as his lips trace a path from my lips to my shoulders and down to my breasts. Ample attention is given to my nipples again, this time more roughly. He suckles on one nipple, and then bites on the sensitive nub.\n\nMe?\n\nI\u2019m just a wet, shivering mess. I\u2019m damn sure that my panties are thoroughly soaked with my juices.\n\nHe kisses my stomach. More than a source of arousal, his tongue is ticklish on my skin. I end up serving him an accidental kick.\n\n\u201cI\u2019m so sorry. Are you okay?\u201d\n\n\u201cI\u2019ll live,\u201d he wheezes.\n\nCarefully avoiding my tummy, Mike skips down towards my feet, planting soft smooches all the way. Lingering on my mound, he peels off the last remnant of my clothing, now I\u2019m completely naked. I raise my hips and watch the soggy cloth being carefully ditched to the side with my dress.\n\nEach kiss sends a thrill from my legs to my spine and straight to my head. I nearly faint as I feel his wet lips on my inner thighs. My scent must be overpowering him as he stops just short of my sex.\n\n\u201cDo you want me to kiss down there?\u201d\n\nI nod, afraid that my voice would be too weak for an answer.\n\n\u201cI can\u2019t hear you,\u201d he teases.\n\n\u201cPlease kiss me down there,\u201d I beg.\n\nMy legs part and I feel a gentle touch of his warm lips on my inner thigh, just an inch away from my pussy. A groan of frustration is all I can manage.\n\n\u201cNot there,\u201d I say.\n\n\u201cHere?\u201d he asks, placing another kiss on my outer lips, millimeters away from my throbbing clit.\n\n\u201cPlease kiss it.\u201d\n\n\u201cKiss what?\u201d\n\n\u201cMy pussy,\u201d I say exasperatedly.\n\nHe runs a slow tongue on my slit, from the perineum to my clit that\u2019s aching to get out from underneath its hood. He wraps it up with his lips and sucks it gently. My back arches and my thighs close, but he holds them apart.\n\nThere\u2019s no escape. The assault is slow but relentless. The pressure builds up as he licks my warm folds, almost exploding as he sucks on my clit like a mini-penis. My legs, held wantonly apart by him are of no use so I use my hands instead, clawing at the soft sheets and grabbing fistfuls of his hair.\n\nI explode when he firmly wedges his tongue inside me and explores. Breathing is a foreign idea, as is seeing. It\u2019s not a tidal wave, but a storm that sweeps away everything in its path. My cry is hoarse, deep throated and guttural as the joyous feelings course through my veins.\n\nAnother storm sweeps, unexpected and sudden, as he reaches up and pinches my nipples rhythmically, suckling on my clit hungrily at the same time.\n\nMy thighs clamp shut on his head, my hands on his trying to stop and augment his touch at the same time. I take a deep breath and cry out in joy, uncaring of the judgmental world that would hear me.\n\nMy vision darkens around the edges, and soon, I see nothing but blackness.\n\n<center>Chapter 14\n\n~ Never Alone ~</center>\n\n\nI could stay here like this for the rest of my life \u2013 between her legs, tasting her sweet cream and hearing her sweet moans of pleasure.\n\nI could go on forever.\n\nMy ears are shut out by her thighs, so all I can feel are the vibrations that travel from her chest. I close my mouth on her sex and suckle to my heart\u2019s abandon, reveling in the touch of the silky smoothness of her nether lips and the sweet juice that flows through it. It is glorious.\n\nSoon enough, her thighs lose their strength and they rest lazily on my shoulders. I lick some more, feeling her quiver with each stroke of my tongue.\n\n\u201cStop,\u201d she says.\n\n\u201cDon\u2019t you like it?\u201d I ask, sucking her clit to emphasize my point.\n\nShe groans and pulls away. \u201cIt gets sensitive.\u201d\n\n\u201cOh.\u201d\n\nI sit up, kneeling between her legs. With her hair askew and skin visibly flushed, she looks magnificent. Lying by her side again, I hold her close, feeling her breathing slow down to normalcy. I feel happy and proud of myself. I\u2019m the one who did this to her, after all.\n\n\u201cWhere did you learn to do this?\u201d she asks, amazed.\n\nI grin.\n\n\u201cSecrets.\u201d\n\n\n\"Here!\" Daniel said as he dumped a freakishly thick book on my desk.\n\n\"Master Daniel's Guide to a Woman's Body,\" I read the title out loud, incredulous, then looked up at him. \"Master Daniel? When did you get the time to print pieces of crap?\"\n\n\"Oi! It's not a piece of crap.\" He held up the book with an expression of sheer reverence. \"This is my gift, in advance, for your birthday.\"\n\nAs I said, Dan is smart, but sometimes he takes it a bit too far.\n\n\"I don't get it.\"\n\nHe slapped his head in dismay.\n\n\"You are going out on a date with Claire.\"\n\n\"Sooo\u2026?\u201d\n\n\"You are in the \u2018Friends' zone of her brain. Nothing more than a male acquaintance she can freely talk to without getting hit upon, you get my drift?\" He starts pacing back and forth. \"If SHE has asked you out for a date, then I believe the day is not far away when she wants to take things a step further. The last thing I want you to do is to perform a two-second squirt and go your different ways singing Sayonara.\n\nI grudgingly admitted that he was absolutely right.\n\n\"Just read it. You won't regret it, I promise.\u201d\n\n\nAs I look down at Claire's naked form I mentally thank my cousin for his far-sightedness. Her pale body is flushed pink from her exertions and she is stroking my shaft lazily. Mike Junior is quite the trooper, responding to the call of duty.\n\n\u201cWell?\u201d I ask. \u201cNow what?\u201d\n\n\u201cThat\u2019s a rhetorical question.\u201d\n\n\u201cI\u2019m scared,\u201d I admit.\n\nShe rolls over, on top of me. \u201cWould you like to know a secret?\u201d\n\n\u201cGladly.\u201d\n\n\u201cI\u2019m scared too,\u201d she whispers, her breath hot in my ear. \n\nSlowly rising until she straddles me, Claire places her hands on my chest for support as she adjusts her position. She grinds on my cock slowly, just like the last time, lubricating with her juices, preparing it for the inevitable.\n\n\u201cI\u2019m safe. You won\u2019t make me pregnant,\u201d she says, rising and positioning the mushroom tip to her opening, grazing the sensitive head along the entire length of her slit. \u201cLet me do it.\u201d\n\nShe doesn\u2019t move as she prepares herself. Taking a deep breath, she plunges down on my length. A barrier resists as my cock pushes against it, and then it gives away. Barely half of my shaft is inside when she stops. Tears brim in her eyes.",
        "\u201cFuck,\u201d she mutters shakily, \u201cthat hurts.\u201d\n\nHoly. Shit.\n\nHer hands tremble as she fights against the pain, trying her best to accommodate the intruder. Her slick wall pulsates around my cock\u2019s head, making me want to push further inside and take her completely.\n\nIt\u2019s a terrible way of testing one\u2019s self control, but somehow I do it. I sit up and hold her tight against myself, running a gentle hand on her back, soothing her as she sniffles quietly against my chest. Ever so slowly, I feel her calm down and slide down along the rest of my shaft, feeling her walls stretch as she accommodates a cock inside for the first time in her life.\n\nOur groins meet. We hold each other in an embrace, each of us trying our best not to lose control.\n\n\u201cIt hurt, but not as much as I\u2019d expected,\u201d she admits.\n\n\u201cThank you.\u201d\n\n\u201cFor what?\u201d\n\n\u201cIt\u2019s not every day that a guy gets to make love to the most beautiful girl for the first time.\u201d\n\nShe giggles softly. \u201cThank you too.\u201d\n\n\u201cFor what?\u201d\n\n\u201cFor being you.\u201d\n\nWe stay like that for a few moments, just me and her in our own embrace. This is way more touchy-feely than I had expected. But I like it this way. I\u2019ll never forget the intimacy.\n\nClaire pushes me back again until I\u2019m lying down on my back and starts moving tentatively. I gladly let her do the work as she grinds her hips in slow, tight circles, bouncing a little and trying to adjust to my size. Her insides are like a hot, velvety glove that wraps tightly around my shaft and milks it gently.\n\nI\u2019m having a hard time thinking straight, forget about doing anything else but trying to hold back myself.\n\n\u201cThis is good.\u201d\n\n\u201cFrom what I hear, it\u2019s supposed to feel good,\u201d I quip.\n\n\u201cOh yeah?\u201d She rises until my tip remains inside, and thrusts down forcefully. My insides clench as I hop dangerously close to the point of no return.\n\n\u201cSlowly,\u201d I beg.\n\nHer breathing gets faster and more ragged as she grinds against me. I trace a path from her thigh to her clit with my thumbs and rub it gently. Her eyes fly open and she humps faster as her own climax approaches.\n\nI\u2019m the first one to lose control.\n\nMy spurts of semen coat her insides as my control caves in. I squeeze the soft flesh of her breasts with my other hand as the pleasure mounts to dizzying heights. The pleasure rises as she keeps thrusting down on my length, just when I think I won\u2019t be able to take any more, she stops.\n\nShe remains still, but her insides are a different matter altogether. She pulsates erratically, her slick channel\u2019s warmth making me giddy with pleasure. She bites down on her lip and stifles her moans. Her nostrils flare. She breathes hard. Her nails dig into my chest, making me grit my teeth as the pain combines with pleasure.\n\nAs the tide fades, she lies down on top of me with her forehead resting on my chest. My dick slides out of her. Electric tingles shoot lazily from my over stimulated nerves as the head slides against her skin.\n\nMichael Lehane loses his virginity.\n\nGoodbye Saint Michael.\n\nAll I want to do right now is to shout my lungs out and let the world know that they couldn\u2019t be any happier than me on this day, at this time.\n\n\u201cI know what you\u2019re thinking,\u201d she whispers. \u201cGo on. Do it.\u201d\n\n\u201cReally?\u201d I ask, surprised.\n\nShe nods.\n\nI fill my lungs, almost to the point of bursting, and yell to my heart\u2019s abandon.\n\n\u201cWoooooooooohhoooooooooo!\u201d\n\nShe giggles softly as I cry myself hoarse. We laugh, kiss and shout some more until we\u2019re content.\n\n\u201cThat\u2019s for both of us,\u201d she says.\n \nWe don\u2019t talk. We don\u2019t need to. \n\nThe easy silence speaks for us.\n\n\u201cMike?\u201d she asks after some time.\n\n\u201cHmm?\u201d\n\nShe traces a finger on my chest, drawing abstract patterns of circles and triangles. \u201cDo you love me?\u201d\n\nI stare at the dotted heavens, wondering what she\u2019s up to. \u201cI think I do.\u201d\n\n\u201cYou think?\u201d she laughs.\n\n\u201cI never knew what it\u2019s like to be in love.\u201d\n\n\u201cWhat about your family?\u201d\n\n\u201cThat\u2019s a different kind of love. Certainly different than this,\u201d I emphasize by copping a feel of her breast.\n\nShe smiles. \u201cSometimes I wish you\u2019d stop making this much sense.\u201d\n\n\u201cMe too.\u201d\n\n<center>*</center>\n\n\nThe first rays of the sun hit my face, waking me up. I swear I had closed my eyes to rest them for a while. I ended up sleeping the entire night.\n\nClaire\u2019s asleep too, this time to my side with an arm draped over me.\n\n\u201cGood Morning.\u201d\n\nShe mumbles something back and scoots closer. My morning wood reminds me to take care of something, but I ignore it for the moment.\n\nI contend myself by studying her. Her lipstick is smudged, no doubt half of it on my face and body. Her raven black hair is astray, and her face radiant. She looks peaceful, serene and ethereal.\n\nAnd she\u2019s mine.\n\nI know I can\u2019t live without her. When time comes for me to join the Academy, a part of me will hate myself for giving up Claire in favor of a profession that brings nothing but pain. The realization leaves a sinking feeling in my gut. I hold her, wishing the time to stop. I want to savor all of this\u2026all of her.\n\nI don\u2019t want to let go.\n\n\u201cWhat are you thinking?\u201d She\u2019s barely awake, but alert enough to have sensed my inner turmoil.\n\n\u201cAbout you,\u201d I say. \u201cAbout us.\u201d\n\n\u201cAnd?\u201d\n\n\u201cI love you.\"\n\nShe stares at me, the question evident her grey eyes. After all, I had claimed to be unaware about love just the night before.\n\n\u201cThis is the most I\u2019ve felt and cared about someone else,\u201d I confess. \u201cIf this isn\u2019t love, I don\u2019t know what is.\u201d\n\nShe kisses me, a soft lingering touch.\n\n\u201cI thought you\u2019d never say that.\u201d\n\n\u201cI know you\u2019ve been hurt before,\u201d I continue. \u201cI\u2019m not the perfect specimen of a man, but I\u2019ll try my best to give you whatever I have.\u201d\n\n\u201cPromise me that you\u2019ll never leave. Ever.\u201d\n\n\u201cI promise.\u201d\n\nShe kisses me again. There\u2019s no urgency to it, just a gentle reminder of what we were. It grows fierce, but she pulls back.\n\n\u201cI need you. On top.\u201d\n\nI roll over obediently until we\u2019re face to face. She pumps my shaft until it\u2019s rock hard and wraps her legs around my hips.\n\n\u201cTake me.\u201d\n\nI slide against her silken lips, find her opening and push inside. She groans as I sheath myself inside her slowly, inch by inch. I expected a bit of dryness as she had cleaned up last night, but to my surprise, I find her channel slick and ready. As our hips merge, I pump the last inch inside her quickly, mashing against her clit and taking her breath out.\n\nThere\u2019s more control this time. I keep a steady rhythm of pumping inside and grinding against her clit at a few intervals. I wrap my lips around an erect nipple, suckling on it and making her gasp.\n\nShe shudders unexpectedly. I thrust harder as I feel my own orgasm approach. I bury myself to the hilt and let loose spurts of semen inside her. We mold into one. I stay there, taking my weight on my arms and knees instead of crushing her beneath. She has a big smile on her lips, one that needs no words.\n\n\u201cI love you too,\u201d she whispers softly.\n\n<center>~* * *~</center>\n\n\nGod bless you readers for making it to this far. Now go and click that 5 star thing below. It takes less than a second.\n\nGo on.\n\nDone?\n\nYou\u2019re awesome.\n\nThis story is what it is because of two wonderful ladies.\n\nFirst, I\u2019d like to thank Naoko Smith. She went over this piece, and much to my surprise, didn\u2019t lose her sanity. Thank you so much for your helpful comments, suggestions and quick edits just before the contest.\n\nI\u2019ll give another shout of thanks to Lady Ver for taking out time to go through it and providing helpful feedback. I got to learn a lot from her edits here and there, so her help was doubly appreciated.\n\nAny mistakes that remain are solely mine.\n\nThe comment\u2019s section is yours. Go crazy. Tell me what you thought about this story \u2013 good or bad. Just don\u2019t whine about how long it was. I had warned you beforehand.\n\nThis story is meant for Literotica Summer Lovin\u2019 Contest 2015. If you still haven\u2019t voted this a 5, you\u2019ll be cursed with bad karma *insert frowny face*\n\nStay safe, fuck hard and enjoy this beautiful summer.\n\n\n\nCheers!\n\nSammael Bard\n\nDated: August 22nd 2015\n\nP. S. If you liked this one, please check out my other submissions and erotic art gallery by clicking "
    ],
    "authorname": "Sammael Bard",
    "tags": [
        "first time sex",
        "virgin",
        "high school",
        "high school drama",
        "female virgin",
        "male virgin",
        "dark",
        "borderline sociopath",
        "hymen",
        "high school romance"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/harp-un-strung"
}