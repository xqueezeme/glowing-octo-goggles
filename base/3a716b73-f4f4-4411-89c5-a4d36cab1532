{
    "title": "Fiery Heat Ch. 07",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nDamon Reid vs. Tristan Thomas\n\n***\n\nThe next time Damon saw Tristan, it was at a meeting in his office. Four days after their last encounter. And it was all he could do not to draw him into his arms and damn the consequence. There were bags under his eyes and he had lost weight but he still looked sexy as hell. Dressed in black jeans and white long sleeved designer T-shirt, with his aviator shades tucked into the V of his t-shirt, and leather cuffs on his wrists that matched his boots, he simply looked delicious. Casual. But that didn't make him seem more relaxed. Tristan was strung tight as a bow, vibrating with tension and whatever else was eating at him. Damon could take a good guess.\n\nTristan was due in Paris in two days. They had to meet and agree on what was to take place in Paris. Caleb Thomas, the Architect and the Consultant for the Albatros project were also present at the meeting. Damon could barely concentrate on what was being discussed. He simply couldn't tear his eyes off Tristan. Damn he was hot. Tristan deliberately wouldn't even meet his eye. He had never seen him all business like he was at that moment. Damon was so engrossed in the sexy man sitting at the table, he started when he heard the raised voices. What the fuck was going on? Damon wondered. Obviously he had zonked out.\n\n\"Damon talk some sense into him.\" Caleb Thomas said pointing at Tristan.\n\n\"No Dad. If I'm supposed to head this project, then you gentlemen must respect my opinion. I think the best thing to do is to start from the East wing and not the West. From these drawings, it will be our best shot. And that's exactly what I'm going to ensure when I get to Paris.\" His tone was stern, authoritative.\n\n\"But we've already agreed to start from the West wing. Aren't we supposed to go by the plan?\" Caleb Thomas sounded exasperated.\n\n\"Excuse me.\" Tristan said standing to go out of the conference room.\n\n\"Damon?\" Caleb looked imploringly at Damon.\n\nWith a sigh Damon pushed his chair back. \"I'll be right back.\" He went after Tristan.\n\nThe guard on the floor pointed towards the restroom when Damon asked where Tristan had gone. Damon entered and heard the toilet flush just before Tristan came out, going to the wash basin to wash his hands. He didn't even look in Damon's direction though Damon knew he had seen him. God, he had missed him. And if his rapidly hardening cock was any indication, he had really missed him.\n\n\"What are you doing Tristan?\" He asked quietly. \"Explain what the fuck just happened,\" he added calmly.\n\nTristan ignored him. Damon stood with his arms straight by his sides. He felt everything in him, everything he was, go still as he took in the sight of Tristan. God, he was beautiful, and Damon couldn't look away. He was hard, so hard he ached.\n\n\"Tris.\" Only his name, but it was husky and rich and deep, filled with pain and longing and Tristan had to look at him.\n\nHis breadth hitched in his throat at the look of pure need on Damon's face, his gaze so hot it did crazy things to Tristan's heart. But arguments rushed through his mind. Every reason why Damon couldn't be serious about him, how heartlessly he had treated him and the fact that he was obviously only good for one thing... Sex! Tristan saw red.\n\n\"Is the meeting being moved in here? If not, then get the hell out of my way.\" Tristan started to dry his hands.\n\nDamon abruptly turned on his heels and headed for the door. Tristan's heart sunk. Just having Damon that close to him was giving him pleasurable flutters in his stomach. Now, he was walking away from him, when all he wanted was to go into his arms and hang on for dear life. Damn his big mouth.\n\nHe froze when he saw Damon rather lock the door and turn to look at him, unsure of what exactly was happening. Lord, he was so handsome, so goddamned sexy it was impossible not to stare at him. In his unmistakably costly grey three-piece suit, he looked every bit the powerful, successful businessman he was. Damon Reid looked so edible, Tristan wanted to fuck him with his suit still on. He watched with a pounding heart as Damon closed the distance between them and slammed his mouth on his, a hungry tongue, sliding its way in. \n\nTristan couldn't help the moan that tore out of his throat as he opened his mouth and allowed Damon inside. Damon tasted of desperation and need as their tongue twisted around each other. But Tristan's brain decided that it couldn't accept Damon's need... wasn't about to be seduced like some schoolgirl. Not by a man who went around fucking people whilst his fianc\u00e9e was out of town and even recorded the act. Tristan stood as firmly as he could and tore his mouth from the kiss, staring into blue eyes glazed with lust. \n\nTristan's hands made their way onto Damon's belt buckle and quickly undid it, pushing his hand inside his boxers to cup his wet-tipped prick with a warm, but less than gentle hold. Damon moaned deep in his throat.\n\n\"Is this what you want Damon?\" Tristan's voice took on a warm purr that caressed Damon's senses, making his toes curl inside his shoes. Tristan swept the weeping pierced head with his thumb, smirking at Damon's sharp intake of breath. Then he wrapped his palm around Damon's cock, pumping him firmly.\n\n\"Oh, Christ.\" Damon's knees almost gave out under him. Though he could feel and see Tristan's anger, Damon felt he could very well die from the pleasure of his touch. His eyes closed against the anger on Tristan's face.\n\n\"Is this all I'm good for?\" Tristan asked harshly in a voice filled with so much pain.\n\nDamon's heart stuttered. Words froze in his lungs, heat racing through his body, weakening his limbs. He knew he shouldn't but couldn't help himself. Tristan's hands on him felt so good. A ragged moan escaped him. Heavy pants filled the restroom as Tristan stroked him, jerking his cock from root to tip, thumb dipping into the slit. \n\n\"Does she make you feel like this?\"\n\nA hot palm cupped his balls and Damon threw his head back, his lips parting to let out a silent scream. He thrust into Tristan's palm, fiery heat flooding his body. He knew Tristan wasn't in the right frame of mind. Knew he had to stop him, but Damon didn't have the willpower to bring himself to do that. He couldn't have stopped Tristan even if his life had depended on it. \n\n\"Are you thinking about her now? Maya? Look at me Damon.\"\n\nDamon did as commanded, opening his eyes to stare at Tristan. His blue eyes, filled with passion, clashed with Tristan's green ones, which were so...cold. What had he done to Tristan? Where did all the fire that filled those eyes just a few days ago go?\n\n\"I gave you my heart and body and what did you do? Trampled upon it. Now you have the fucking nerve to come in here and expect me to fall into your arms?\" His lower lip trembled. He knew he was not far from breaking down. But he was determined not to give Damon that satisfaction. He went down on his knees, opened his mouth and swallowed Damon down.\n\nDamon had to shove his hand in his mouth to keep from screaming. \n\nHe couldn't breathe under the onslaught of pleasure. Tristan had never been able to take him into his throat like that before. No one ever had. Damon's heart rate accelerated out of control. He was going out of his mind. When the hell did he learn to do that? Didn't matter, all that mattered was the wet heat of Tristan's mouth and the way he was swallowing around the head of his cock. Bracing his hands on the vanity, he watched as Tristan bobbed, taking his cock into the back of his throat. Those lips stretched around his thickness was simply amazing and the pleasure from it stripped his control.\n\nTristan heard Damon hiss with pleasure as he took him into his mouth and bobbed his head, taking him in even deeper, sucking hard, feeling the thick cock hit the roof of his mouth before sliding back to hit his throat. His eyes watered. Shit he was huge! But he didn't stop. His cheeks hollowed as he found a rhythm, taking him as deep as he could. He needed to give Damon this, needed to watch him come apart in his hands one last time, needed to remind Damon what exactly he was missing. His own prick was hard and throbbing inside his jeans, aching to be touched. He ignored it.\n\n\"God Tris.\" Damon panted. Tristan hummed his response and the vibrations ran down his length and tickled his spine, drawing up his balls. Damon almost came on the spot. He thrust into Tristan's mouth, his hips moving without any conscious effort. Tristan gagged.\n\nTristan released him with a slurping popping sound, working him with his hands as he spoke, never breaking eye contact. \"Am I doing okay? Am I pleasing you?\" Face red, eyes wide and wet, Tristan smiled innocently, as though he didn't know he was driving Damon out of his fucking mind. Shit he never thought he could ever be able to take Damon down his throat. He had to take it out so he could breathe. \n\n\"Don't stop. Please!\" Tristan heard the whispered plea. He stared into blue eyes that glittered with lust and tenderness, eyelids that had grown heavy as if Damon was drunk on pleasure. He had a feeling Damon thought he was going to leave him with no relief.\n\n\"Do you want to come down my throat and watch me swallow?\" He shifted, taking Damon inside again. This time Damon cried out. \n\nHe bucked as Tristan's throat contracted around him. Harsh groans filled the restroom as he rammed himself down Tristan's throat again and again, fighting for control but not succeeding. Tristan took him almost to the base of his cock, and his tongue worked faster, tracing just under the head of his cock, over the pierced tip, and pressing into the tiny slit. Damon whimpered as his fingers sank into Tristan's bangs and they stared each other down, neither willing to look away as Tristan pleasured him. His hands tightened in his hair, his body tensing as a ragged groan tore out of his throat.\n\nTristan felt his warm pre-come dripping onto his tongue. It was salty, rich, making him realize how desperate he had been for Damon's taste. He wanted it all, wanted to feel the hard hot spurts of his semen filling his mouth, coating his tongue as he found his release in his mouth. But that wasn't going to happen. Damon watched, looking down at Tristan, half crazed by the look in Tristan's eyes... so much pain. Shit!\n\nThen Tristan took his balls into his palm and squeezed them. Damon groaned and threw his head back, squeezing his eyes shut. Tristan's mouth was working on him with wet precision, his fingers on his balls, creating a burning insidious pleasure. He gritted his teeth, and surrendered to the impending explosion. He just couldn't hold it.\n\n\"Tris...gonna...\" His voice was hoarse as his body convulsed and his thrusts grew increasingly vigorous as his excitement got the better of him and he lost his rhythm. Tristan sealed his lips tighter around him sucking with purpose, and Damon surrendered to a mind-blowing orgasm and shot...into the air, coming so hard he saw dark spots.\n\nHe opened his eyes and watched his fluids splatter across Tristan's partially opened lips. Oh fuck, that was hotter than having him swallow it. To see the evidence of his release on Tristan's face and lips was so hot. But it still hurt. And his gasp was due to the sharp pain that slashed inside his heart and not the pleasure that had been given him. Tristan not swallowing was more painful than Damon cared to admit. \n\nTristan saw the hurt that crossed Damon's features and was surprised at the answering hurt in his own heart, instead of the triumph he was supposed to feel at that particular victory. \n\nGetting to his feet and taking a tissue from the holder, Tristan nonchalantly wiped the cum off his lips and cheek, ignoring a trembling Damon who was slammed over the vanity.\n\n\"You're never going to get that again.\" Tristan swallowed past the emotion clogging his throat. His tortured voice was barely audible. \"I wish you the very best in your marriage.\" \n\nTristan's heart was heavy, his emotions jumbled together. He was filled with a wave of pain so intense, he nearly doubled over. But he stifled his warring emotions and headed for the door. \n\n\"Oh and Damon, tell the other that I had to go. I'm sure you can come up with a...good reason.\" And with that, Tristan turned on his heels, unlocked the door and walked out.\n\nDamon couldn't think, couldn't breathe. The searing pain that gripped his chest made him want to scream in misery. God help him, he needed Tristan. But for his sake, he had to stay away. Shit! \n\n***\n\nTristan sat in the lounge at the airport waiting for his flight to be called. He had left home earlier than necessary because his parents had invited Damon over for Dinner. His mum claimed she wanted to discuss some ideas she had for the hotels with him. What was she going to talk about anyway? Scented sheets? He didn't want to see Damon so he had left. Now here he was, waiting with a couple who obviously didn't want to be parted. They kept making out like there was no tomorrow and Tristan couldn't keep his eyes off them. They were acting like they couldn't stand to be parted. Jeez it wasn't like they were never going to see each other again, Tristan mused. It was a mere trip. But then love could do that to people right?\n\nHe felt a pang when he thought of Damon. How he wished he could have what the couple had with Damon. But he couldn't. He was about to get married. He envied Maya so much though he didn't know her. It didn't matter...she had Damon. Tristan's misery knew no bounds. How the fuck was he going to survive this? He always felt a sharp pain in his chest whenever he thought of Damon and Maya together. Adriana claimed he now acted like a zombie. There was no 'life' in him. He had to start living again somehow. But he felt he could only live if he had Damon in his life. \n\n\"Hey are you ok?\"\n\nTristan looked up to see the couple who had been making out, looking intently at him. The lady had asked the question.\n\n\"Sure. Why do you ask?\" He smiled wondering why they would bother with him in the first place. They had been too engrossed in each other to notice someone else.\n\n\"You...\" The lady made gestures on her face that signaled there were tears on Tristan's.\n\nHe quickly reached up and felt the wetness on his cheeks.\n\n\"Ow shit!\" He wiped at his cheeks furiously and blushed. \"Don't mind me. Go ahead.\" He told the couple who looked at him with concerned faces. \n\n\"Woman trouble?\" The guy asked.\n\n\"Yeah you could say that.\" Tristan muttered.\n\n\"Life is short you know. Make up with her and forget about everything else.\" The lady chipped in, smiling so sweetly but sadly at Tristan.\n\n\"Thanks.\" He told them, just as they were called to board. He stood and walked towards the boarding gate.\n\nMake up? Ha! How about Maya? Well how about her? He fucking didn't owe her anything right? Tristan stopped walking and stood still, lost in thought. He had the sick fear in his gut, the horrible insecurity that told him he didn't have any reason to live if he lost the man he loved more than anything. Damon had made it clear he didn't mind having Tristan in his life too. He wanted Damon. And by God, he was going to be with Damon. He was going to have him any way he could and damn the consequence. Though there was still a little voice in his head cautioning him to guard himself from getting hurt, he ignored it. What had the lady said? Life was short right?\n\nTristan looked around him and realized he was almost to the gate. His luggage had already been taken on board but he didn't care. He was going to Damon and damn the trip.\n\n\"Thanks guys. I'm going back to make up.\" He paused long enough to tell the couple who were saying their final goodbyes, and rushed out of the airport to loud cheering by the couple. \n\nTristan called the contractor who was to meet him in Paris to tell him there had been a change in plans. He told him to schedule a conference call for all the stakeholders the following day and expect him in Paris at a later date. Then he hailed a taxi and was on his way back home, where he knew Damon was. He couldn't keep the excited grin off his face. Damn he was going to have a hard time keeping his hands off Damon. He knew he was going to have to make a conscious effort not to give their relationship away to his family.\n\nTristan was almost home when he heard the breaking news on radio. \n\n'STAR-BO144 Crashes Immediately After Take Off.' \n\nHe froze! According to the news, airport workers were trying to rescue people from the wreckage. The newscaster went on to say that the front part of the plane had suffered the main crush. It was therefore feared that most people flying first class and the pilots were probably dead. Tristan was meant to fly first class. He started shaking. All the blood drained out of his skin...he turned as white as a sheet. He had almost died but for his decision to go be with Damon. God!\n\n***\n\n\"Then she decided to turn the water hoes on the poor old man.\" Stephanie Thomas finished her story to howls of laughter from the people at the table.\n\nAdriana, who was bent over in stiches managed to point an accusing finger at her mum.\n\n\"Mum it was your fault. You always told me to be helpful to people remember? I was probably only trying to help the...\" She broke off into more laughter.\n\n\"Well at least you know you're marrying a very helpful lady Paul.\" Damon couldn't help teasing Paul, Adriana's fianc\u00e9. \n\nStephanie Thomas had been giving them stories about a younger Adriana and how terrible she had been. They were all having fun. The food was great and in abundance. The only thing missing was Tristan. Though Damon knew it was better this way, he felt empty inside. He couldn't help but miss Tristan. If all had gone according to plan, he would have been on his way to Paris with Tristan after all. He had come to the Thomases' home early, hoping to catch Tristan before he left for the airport. He had been told on reaching that Tristan had already left. He didn't have to be a genius to know why he had left for the airport way before time.\n\n\"Your phone is ringing Darling.\" Stephanie prompted Caleb.\n\n\"It's Tracy.\" Tracy was their eldest daughter. \"Hey little lady.\" Caleb greeted his daughter fondly. Then he listened for a while and went white. \"Go turn on the TV Adriana.\" He said urgently.\n\nThe anxious way Caleb spoke told Damon something was terribly wrong.\n\n\"Oh God No no no no.\" Caleb kept chanting whilst rushing to the living room. Everyone stopped eating and followed him to see whatever was causing Caleb to lose it. \"Come here Honey.\" He said to his wife who quickly rushed to her husband's side.\n\nAdriana cried out and sat on the floor. On the huge TV screen was the scene of the crush. Stephanie started screaming.\n\n\"Was that the flight Tristan was on?\" Damon bellowed. He felt like his heart was being ripped out of his chest, like he'd gulped down an entire pot of coffee. His hands were trembling and his heart was beating too fast. He actually felt a physical pain within his chest. \n\n\"Yes Damon.\" Caleb said quietly with a tremor in his voice, moving quickly towards where his car keys hanged.\n\n\"Fuck!\" Damon took his cell phone out of his pocket, ready to get some answers whiles moving urgently towards the door when the front door opened and a zombie looking Tristan entered. Everybody froze.\n\nSomeone finally screamed his name but Tristan couldn't summon the interest to look in the direction of the scream and see who. He was focused on getting to just one person. And that was Damon. He didn't pay attention to any other person in the room, he just walked.\n\nAs Tristan moved toward him Damon braced himself, opened his arms and caught him as he rushed into them, needing him. Relief flooded Damon as he pulled Tristan close and held him tight. Tristan buried his face in Damon's neck and wrapped both arms around his waist. Damon locked him in a firm embrace, one hand cradling the back of Tristan's head to press his face against his neck. Tristan's trembling intensified, but he didn't cry. Damon was glad because he didn't think he could handle that. But Tristan was trembling so much Damon was getting scared.",
        "\"It's okay, baby,\" he murmured.\n\nDamon held Tristan tightly, running a hand over his back to soothe the muscles tight with anxiety. \n\n\"Scared me shitless,\" He murmured into Tristan's hair. There was no doubt about it. He'd fallen for the sexy man in his arms. He'd fallen hard.\n\nTristan held him tighter, inhaling the delicious scent of his cologne. It felt good being held like this. Damon's strong arms wrapped around him, tucking him against his hammering heart. \n\n\"Thought I'd lost you,\" Damon confessed. \n\n\"Didn't think you'd mind.\" Tristan muttered still shaking real bad.\n\n\"I couldn't lose you.\" Damon's voice shook.\n\nThe emotion in that voice was Tristan's undoing. When the tears started flowing, Damon couldn't stand it. He scooped him up into his arms and heard a gasp of surprise from their audience, who had moved closer to them. He ignored them. Tristan wrapped his arms around Damon's neck and his legs around his waist. He sobbed against his shoulder, drenching his shirt in seconds. Damon stroked his back and rubbed his lips against his hair. \n\n\"It's okay. I'm here. I've got you. Shh.\" \n\n\"I d-don\u2014don't mind sharing yo-you with her if you'll ha\u2014have me.\" Tristan stuttered through his tears.\n\n\"Oh fuck!\" Damon turned mush inside. He couldn't contain the ferocious swell of emotion that coursed through him. He buried his head in Tristan's hair and didn't bother fighting the emotions surging through him. He could feel the man in his arms shaking and held him tighter. \n\nWith shaking fingers, Damon touched Tristan's cheek, trying to smooth away the wetness that only returned the instant it was wiped away. Tristan nuzzled into his touch with a soft, plaintive moan.\n\n\"I love you,\" Tristan whispered, his wet eyes full of passion. \"I love you so much it hurts.\"\n\n\"What is going on?\" Caleb asked, confused by the scene unfolding before his eyes.\n\n\"I'm in love with your son Caleb. That's what's going on.\" Damon had eyes only for Tristan.\n\nEverybody gasped. Including Tristan.\n\n\"To think you actually told my dad first.\" Tristan murmured into Damon's neck.\n\n\"Shut up.\" Damon chuckled, his nose pressed under Tristan's ear. \n\n\"You're so warm.\" Tristan snuggled closer. \n\nDamon's arms tightened around him.\n\nThere was a minute of absolute silence during which several things happened at once. Caleb's jaw dropped open. Stephanie gasped and put a hand to her mouth. Paul flushed and looked at Adriana. A slow smile crossed Adriana's face as she looked at her brother and Damon. Then she reached out and gently rubbed Tristan's back, silently showing her support.\n\n\"You know you just outed us don't you?\" Damon murmured into Tristan's ear.\n\n\"Are you worried?\"\n\n\"Do I look worried?\"\n\nTristan brought his head out of Damon's neck to look into his eyes, and couldn't stop his gasp. Damon's eyes glittered with so much love, Tristan caught his breath. \n\n\"You look like you're waiting for me to kiss you.\" He whispered.\n\n\"I am waiting.\" Damon said huskily, rubbing his thumb over Tristan's bottom lip. He'd never needed to kiss Tristan more than he did right then. But he knew Tristan had to make the move. This had to be consciously Tristan's choice if this thing was to work between them.\n\nTristan didn't bother stopping the sob that welled up from his throat. He sank his fingers into Damon's hair. Then tipped his head forward and crushed their mouths together. Their first kiss...and it was fierce, possessive. The intensity of emotions and shattered control swept them both along, and they came together without any restraint at all, mouths wide and teeth clashing. Damon knew their audience were staring but didn't care. All that mattered was that Tristan was in his arms. He had one hand tangled in his hair, and the other was around his waist, supporting him.\n\n\"Damon Reid what the hell is the meaning of this?\" Caleb bellowed, finding his voice after getting over the initial shock. He leveled a glare on Damon.\n\n\"Oh shut up Caleb. Let them be.\" Stephanie admonished, drawing her husband away from the two who were obviously crazy about each other.\n\n\"He's kissing my son in front of me Hon. He should show a little respect.\" Caleb murmured to his wife.\n\n\"Put a sock in it Darling. Besides, your son started it.\" She answered wiping the tears from her eyes. \"Look at them. They're crazy in love with each other.\"\n\n\"You do know you spoil him don't you? He always gets his way.\" Caleb groaned.\n\n\"He's my baby Cal. If he wanted Damon and Damon didn't want him, I would have kidnapped Damon and tied him to his bed.\" She said with a chuckle.\n\n'You wicked wicked woman.\" Caleb leaned down to press a kiss to his wife's temple. \"Okay break it up you two. Come here son.\"\n\nWhen Damon let go of Tristan's mouth, they were both a little breathless and Tristan was looking kind of dazed.\n\n\"I'm so hot for you right now,\" Damon growled into Tristan's ear, his voice husky with want. \n\n\"Damon...\" Tristan moaned unlocking his legs from around Damon's waist. He stumbled when he tried to move but strong hands gripped his shoulders to steady him. He laughed, slightly breathless, and gazed up at Damon.\n\n\"Are you okay?\" \n\n\"I think so.\" Damon held him till he was sure he could walk before letting him go.\n\nWhen Tristan finally turned around, he came face to face with a beaming Adriana who hugged him so tightly all the air left his lungs. He hugged her right back. \n\n\"You slut.\" She whispered into his ear.\n\n\"You're just jealous I got the hottest guy on the planet.\" Tristan laughed.\n\n\"I'm so glad you're okay. Come on go give mum a hug. I want to talk to your man here. Maybe he can tell me what he did to turn you into a zombie these past few days. I might even beat the shit out of him for doing whatever to my baby brother.\"\n\n\"Don't bother. I already did.\" Tristan said dryly.\n\n\"What?\" Adriana stared at her brother incredulously. Tristan would never hurt a fly.\n\n\"Let's just say he'll never forget my mean right hook.\"\n\nBrother and sister burst into fits of laughter. Whilst Tristan moved towards his parents, Adriana made her way to an amused Damon. Somehow, he knew what was coming. Tristan had told him how close he and Adriana were.\n\n\"So why did you do it?\" She went straight for the jugular.\n\n\"Did what?\" Damon managed to look innocent.\n\n\"Come on Damon. He looked like an empty shell this past week thanks to you.\"\n\n\"I just wanted to spare your brother the heartache that goes with this Adriana. I didn't know how your parents were going to take this. Especially your dad. I didn't want Tris to have to go through all that gay bashing bullshit.\" \n\n\"You could have let him down a little easier. Why did you have to hurt him so bad? Whatever you did, or said, broke him.\" She looked up at him, those green eyes so much like Tristan's, piercing and stern.\n\n\"You know how Tristan is. Your brother is very stubborn. I figured I had to be brutal to get him to forget about me. He obviously didn't give a hoot.\" Damon gave a ragged sigh.\n\n\"He loves you. And he always fights for what he wants.\" Adriana said sounding proud. \"You must have done something right too. Probably rocked his work.\" She grinned mischievously at Damon. \"Actually I do remember someone walking very funny after spending the night in the house of one smoking hot business man.\" She finished, fixing Damon with a dry recognition.\n\n\"Oh my God!\" Damon groaned. If he had been a timid man, he would have blushed under that intense gaze. \"No he wasn't.\"\n\n\"Was too. I asked him about it. And he said he had a pain in his ankle. The lying slut.\"\n\nDamon barked with laughter. \"Well he did steal my heart. So you had better add thief to that list.\" Adriana laughed at that. \"And I'm crazy about him.\" Damon added with so much emotion.\n\n\"Don't hurt him again Damon. He's had it very rough these past few days. His heart can't take another hit like that.\"\n\n\"Never again.\" Damon promised.\n\n\"You know I heard him crying in the middle of the night some nights ago. Only to enter his room and realize he was actually crying in his sleep?\"\n\n\"Oh shit!\" \n\n\"Uh-huh. Don't give him hope if you know you can't give him what he needs. Hurt him like that again, and you'll pay. That's a promise.\" Her voice was deadly quiet.\n\nHe didn't doubt it. \"Yes Ma'am.\" Damon said glancing down at Adriana with surprise and respect. \"You have my word.\"\n\n\"Good.\" Adriana turned to look at Tristan who was in his father's embrace with Stephanie rubbing his back lovingly as they watched the news. It looked like Caleb didn't have any intention of letting go of his son. \"You know if you want your man back, you probably have to go take him from them.\"\n\nDamon laughed at that. \"And you better go be with your man. He looks lonely.\" Then bending down to drop a kiss on Adriana's cheek, he went to get his man.\n\n\"Damon, I don't know whether to kiss you or hug you senseless.\" Stephanie gushed out. \"My son is alive because he decided not to board that plane but to rather come back to you. Come here my dear.\" \n\nShe stepped into his arms, hugging him as tightly as she could, her cheek pressed to his chest. Caleb's expression was unreadable. Damon knew he had a lot of work to do in that area. The only obvious reason why Caleb was not shooting him between the eyes this very moment was because he was also overwhelmed with his son's near death experience. For the moment, however, Damon's main concern was Tristan, who looked shaky again. His eyes were glued to the TV.\n\n\"Hey\" he said softly, pulling Tristan to him. Damon felt him trembling, almost vibrating when he drew him back into his arms. \"You're okay Tris.\" Damon soothed.\n\n\"They died Damon. Listen to the news. Almost everyone in first class died. I was meant to be there.\" He was almost becoming hysterical. \"What happened to her?\"\n\n\"What happened to who baby?\" Damon asked softly. Tristan didn't look too good.\n\n\"The nice lady. She told me to make up with you because life is short. What if she died too? Damon I'm here because of what she said.\" Tristan looked flushed, his mouth opened trying to draw in desperate breaths of air, his lungs heaving.\n\n\"Damon do something. I think he's going into shock.\" Stephanie cried, tears streaming down her face. \"Caleb I think you should call Dr. Murray.\"\n\n\"I'm supposed to be dead right now.\" He said, with a sudden burst of calm.\n\n\"Tell me what you need Tris.\" Damon said softly, his strong arms sliding around Tristan's waist and rocking him gently. \"Talk to me baby.\" He added in a whisper.\n\n\"You. Need you.\" Tristan whispered into his neck.\n\n\"Got me.\" Damon kissed his hair. \n\n\"I want you to fuck me, Damon.\" Damon shivered at the raw need in Tristan's voice. \"Make me forget. Please.\" He didn't make him ask twice.\n\n\"I need to use his room Stephanie. Can you show me to his room please?\" Damon asked urgently, his arms going behind Tristan's knees to carry him. Tristan's arms wound tightly around his neck, his face buried in Damon's shoulder blades. He clung to him, shaking. \n\nStephanie led the way up the stairs to Tristan's room. She opened the door to let them in.\n\n\"You are welcome to stay the night Damon. He needs you.\" She said softly.\n\n\"Thanks Stephanie.\" She left closing the door softly behind her. Damon turned the lock.\n\nImmediately Tristan's feet touched the ground, they started tearing at each other's clothes, both getting gloriously naked. Damon's lips slanted over his in a kiss that was wild, wet and passionate, his tongue fucking Tristan's mouth deep and fast as he ground his hips against him. They both moaned as they slid and rubbed together, their cocks already slick with pre-cum. Tristan felt Damon's cock hard, hot and heavy against him and knew that was just what he needed.\n\n\"Fuck me, Damon.\" Tristan shivered. He could almost feel Damon moving in him already.\n\nBig hands slid under Tristan's arse and lifted, planting his back hard against the wall. Tristan wrapped his legs around Damon's hips, arched into him and moaned.\n\n\"Shit! Lube,\" He gasped. \"Where's your lube Tris?\" Tristan smiled. Damon had nearly forgotten lube. At least Damon was as lust-crazed as he was.\n\n\"No lube, fuck me dry,\" Tristan grunted against his ear. \"I want to feel everything, the burn, the pain.\" He nipped at Damon's neck.\n\n\"Hell no. I'm not going to hurt you. Point me to the lube Tristan.\" Damon's strained voice showed how thin his hold on control was. \"Now!\"\n\nWith a sigh, Tristan pointed to the bedside drawer and Damon walked, with Tristan's legs still around his hips, to the drawer and retrieved a tube of lube. He put Tristan back in his former position, against the wall and proceeded to pour some lube into both his hand and Tristan's. \n\n\"Get me ready baby.\" Damon voice was so sexy Tristan melted.\n\nHe reached down and wrapped his palm around Damon's throbbing cock and gasped when he felt Damon's lubed fingers at his entrance. He groaned when two fingers entered him. It felt so fucking good. Tristan groaned and grunted and whimpered for the fuck and started to buck against the delicious assault. He fucked himself on those fingers until he thought he'd go insane, his body sweating, his breath coming in ragged gasps as he begged Damon to fuck him.\n\n\"Oh God, it's so good. You feel so good Damon.\" Tristan's breath caught, mouth falling open as his head fell back in ecstasy.\n\nHe stroked Damon roughly, slicking him with the lube from base to the pierced tip. Damon worked his fingers into Tristan's arse, stretching him till he thought he was ready for his cock.\n\nBut just when he was about to take out his fingers, Tristan froze, his green eyes dilated. He looked blissed out.\n\n\"Oh Christ Damon, please,\" he whimpered. \"Don't stop yet. I'm gonna come.\"\n\n\"Come for me baby. Do it.\" Damon slid his fingers deeper, brushing against Tristan's prostate.\n\nHe lost it. Just fucking lost it, his dick spasming and come flying out between them. It was all Tristan could do not to scream, only the knowledge that his parents might hear him alone keeping him from crying out a litany of words. He whimpered as he came hard between them, almost sobbing, making the most gorgeous noise. Oh fuck, it felt amazing, so unbelievably good. \n\nEvery time Tristan shot, Damon felt his hole spasm, could feel the contractions against his fingertips. He had never looked sexier than he looked at that very moment to Damon.\n\n\"Stunning.\" Damon murmured, enthralled by the look of total bliss on Tristan's face. \"Now I'm gonna fuck you,\" Damon said, kissing Tristan hard, pushing his tongue into his mouth as the broad head of his pierced cock pushed against him, parting the slick opening. He surged heavily inside him, the thick length of his rigid cock tunneling deep inside his channel.\n\n\"Oh God, Tris.\" Gasping his name, Damon buried his face in his throat and ground his hips against Tristan, trying to get deeper, shoving and circling as he pushed in taking Tristan in a long thrust and then another, going deep. \n\n\"Fuck.\" Tristan brought Damon's head up and rested his forehead on Damon's, trembling as he slid inside deeper and deeper. He felt every vein and every twitch as Damon dragged along his passage. He hadn't lost his erection even for a second after coming. His cock throbbed. The stretching was intense. Delicious. His channel clenched desperately around Damon. Damon made a rough sound of pleasure, pulling out just a little before sliding back slowly. The wide crest of his cock, massaging the bundle of nerves deep inside Tristan that only he had ever reached.\n\n\"Tris.\" His name tumbled from the lips hovering above his. Damon shuddered as he bottomed out, then he stilled, heavy breaths fanning across Tristan's face. The tight heat enclosing him was maddening. \"You're so fucking tight.\"\n\nTristan groaned as the hot metal of Damon's barbell brushed against his button. His eyelids fluttered and his lips parted in ecstasy. Fully seated in the clinging heat of Tristan's body, Damon stared into his unfocused green eyes. God, he was so fucking sexy he couldn't keep his eyes off him. With the glazed look of helpless pleasure, and lips slightly parted in total bliss Tristan looked like a wet dream. Damon's heart melted all over again.\n\n\"So hot, baby. You're so fucking sexy. Ready?\" Damon asked breathing hard, low rumbles vibrating in his chest. He was hot for Tristan.\n\n\"Yeah, more than. Fuck me. Oh, God Damon. Fuck me hard.\" \n\nAnd Damon did just that. He placed a palm on the wall behind Tristan's head, pulled out till only the head of his cock remained inside Tristan, and thrust, plunged in hard. He fucked Tristan with fast deep strokes, and he could feel Tristan's arse clenching around him. Tristan slammed his lips on Damon's, his tongue devouring his mouth.\n\nDamon kept a smooth, hard rhythm as he thrust in and out of him. Each stroke stretched and filled him. Tristan's head tossed and his body shuddered. He grunted and gasped for air as Damon set up a brutal rhythm, nailing his prostate with that metal at the head of his cock. He could feel the heat building inside his stomach, knotting his muscles. His channel clamped down on Damon's cock, milking it, demanding his release as he felt a harder, stronger orgasm building inside his own body. \n\nHe threw his head back, banging into the wall. Damon's deep strokes had him crying out for ease. Nothing compared to the satisfaction Damon was giving. The intensity of the fucking was making both of them soar higher and higher. Their combined groans and sighs of pleasure filled the room. \n\n\"I could have lost you,\" Damon groaned, his voice ragged, harsh. He buried his head in Tristan's neck as he continued to pound into him. \"God help me, Tristan, I can't lose you.\" His voice cracked gruffly.\n\nTristan was overwhelmed by the intensity of emotion in Damon's voice. It drove him into a passion as natural and as deep as love itself. Tears filled his eyes and spilled over. Damon was moving faster, harder, his hips pistoning in and out. His mouth went to Tristan's neck and started sucking up a mark on his neck. It was a wild ride, and Damon knew it couldn't last long. They were both too far gone. He was groaning with hoarse pleasure with each thrust.\n\n\"Ah Tris, you are mine.\" Damon growled in Tristan's ear, thrusting deep.\n\n\"Yours.\" Tristan murmured in a lust-choked voice.\n\nThat one word from Tristan was Damon's undoing. With a groan he slammed his cock up inside Tristan and began to piston hard and fast, his tongue tracing the outer edge of Tristan's ear and then plunging inside. Tristan emitted a sputtering cry.\n\n\"Oh shit, oh fuck,\" Tristan whined. He was making incoherent sounds that even he didn't understand. He made noises that were primal and desperate and full of need. Damon thought they were the loveliest sounds ever. He reveled in them.\n\nThen Damon shifted his hold on Tristan, hoisting him up, moving first one arm and then the other until he was holding him under his thighs. Then he adjusted his angle. Tristan's breath hitched, mouth falling open as his head fell back. That barbell was biting directly onto his button, causing an intense pleasure, which was turning into a full roaring inferno, higher and higher with every thrust. His prick which was trapped between them was getting just enough friction, but not enough to come...fuck! He tightened around Damon, squeezing.\n\nAnd just like that, Damon's whole body jerked hard, then shuddered as his orgasm hit without warning.\n\n\"Oh fuck, gonna come\u2013\" Damon barely got the words out before he was shooting his warm cum into Tristan even as he kept fucking him with long thrusts that left Tristan shaking and whimpering uncontrollably. Damon moaned as he shot, unable to think of anything other than the sweet feeling that washed over him. \n\n\"Oh, shit!\" Damon growled, his head thrown back in deliciously erotic abandon.\n\nPure molten ecstasy radiated from inside where Damon spilled his heat and the back of Tristan's head met the wall with a thud as Damon pushed deeper onto his prostate, reached between them to grasp his cock and dipped his head to take one erect nipple between his teeth. It was too much. Tristan reached up and buried his fingers in Damon's hair, holding his head in place. ",
        "His eyes lost focus and drifted shut, his face slack. What little thread of control he had, snapped. He completely lost it. He was writhing, begging with his body, his orgasm building like white heat. His muscles began to jerk as Damon gave his cock a few swift firm strokes of his hand. He felt his cock swelled, knew he was going to shoot his load and couldn't do a damn thing about it; couldn't control the thick spurts of creamy semen that shot from his cock to land in gleaming streams between them; he couldn't control the intensity of feeling flooding him.\n\nHe screamed.\n\n***\n\nBelow, Tristan's scream was clearly heard. His parents and Adriana were following the news on TV. Caleb stiffened and moved to get up, his glance going to the stairs but his wife held him down with a chuckle. \n\n\"He'll be fine Honey. He's not a child,\" she informed him with a smile. \"You may as well get used to it now.\"\n\nCaleb turned to her with a frown. \"He is my child,\" he muttered softening.\n\n\"Now who's being overprotective?\" Stephanie teased. \"He's in good hands. Relax.\"\n\nAdriana couldn't help the smile the spread across her face. Her baby brother was such a slut. And she wouldn't have it any other way. Damon obviously rocked his world. Most importantly, he was alive. What else could she ask for? She moved to sit beside her dad and laid her head on his shoulder. Paul had already left, wanting to give the family some privacy.\n\n\"He's alive and happy Daddy. That's all that matters.\"\n\n\"That Paul had better treat you well pumpkin.\" He hugged her close.\n\nMother and daughter couldn't help the delightful laughter that bubbled out of them.\n\n***\n\nUpstairs, Damon eased Tristan into bed and gently eased out of him. After cleaning both of them up, he joined him in bed, turning him until they could hold each other. They didn't talk, just shared long kisses. The pleasure that had rushed over them in a tidal wave of sensation, had swept away any residual unease left in them. They were both satiated and warm in Tristan's bed. Damon couldn't seem to keep his hands off him.\n\n\"I never recorded us?\" Damon said softly, breaking the silence.\n\n\"Why did you say you did?\" Tristan asked after a long silence during which Damon thought he hadn't heard him. \n\n\"I never said that. You chose to believe that. I said I had on record that you enjoyed it.\"\n\n\"Same shit. What other lies have you told me?\"\n\nDamon groaned and rolled to lie on his back, pinching the bridge of his nose.\n\n\"Damon?\"\n\n\"Maya...is my cousin. She's Maya Reid.\"\n\n\"What the fuck Damon! Why did you feed me all that bullshit about marriage?\"\n\n\"I didn't want to have any problems with your folks. Put yourself in my shoes for a second Tris. Your dad trusted me to mentor you. I'm sure the last thing he expected was for me to fuck his son. And do you have any idea the difficulties you're going to face being gay? I just wanted to spare you all that Tris.\"\n\n\"So you decided to steer my life in the direction you thought it should be?\" Tristan exploded getting out of bed.\n\n\"I'm sorry baby. I just...I didn't want to create any problems for you. I wanted the best for you.\" Damon moved to sit at the edge of the bed.\n\n\"Bullshit! You were thinking about yourself. You placed your relationship with my dad above ours. Do I mean so little to you?\" His eyes flashed, a dark mix of anger and hurt.\n\nDamon took a shuddering breath and let it out slowly. \"Tris if I remember correctly, you were also worried about what your father would think. You were not ready for this.\" \n\nTristan started shaking his head before Damon stopped speaking. His fists were clenched at his sides. He was so angry at Damon he was shaking.\n\n\"I don't care what he thinks Damon. I only asked you whether you think he would accept me being gay. There's a difference you asshole.\" He thundered. \"It would have been nice if you had fought for me no matter what my father or anyone for that matter thought. Do you have any idea what I've been through this past week?\" He asked in a whisper.\n\n\"Adriana gave me a picture. I'm so sorry.\" Damon got off the bed and walked towards an angry Tristan whose eyes were bright with unshed tears.\n\n\"Goddamn right, you're sorry. Next time fucking tell me what's going on in that head of yours before you decide for me how my life should be.\" He raked his fingers through his hair, his voice now quiet but rough with fury.\n\n\"I'm so sorry Tris,\" Damon whispered. \"God, so sorry.\"\n\nTristan looked around the room for a moment, obviously trying to rein in his emotions. He hated how easily the man pulled emotion from him. He turned to Damon and gave a quick nod. When tears welled up in his eyes and started to flow down his cheeks, Damon reached for him, pulling him close and holding on.\n\n\"I fucking hate you right now.\" Tristan whispered stepping back from Damon's embrace. He furiously wiped at his tears. He looked around, expression panicked. Maybe he should get out of the room until he could get some control, and Damon wouldn't have to see him cry again. Was it too much to ask to maintain at least a shred of dignity around Damon? He'd about taken it all away. Tristan contemplated going inside the adjoining bathroom to compose himself. After all, he was buck naked and wouldn't want to risk shocking his family by going outside his room. \n\nBut just as he was about to move, Damon's voice stopped him. \n\n\"Please forgive me.\" Damon's voice cracked. \"It killed me inside seeing how hurt and angry you were. Knowing I was causing you pain. Give me a chance to make it up to you. To erase whatever damage I caused. I'm nothing without you baby. I ache all the time, I miss you.\"\n\nThe desperation in his voice took Tristan by surprise. He wanted to touch him, but felt rooted to the spot. He stared at Damon's gorgeous face, saw something swirling in those blue depths he hadn't dared hope for before today. Love!\n\n\"God, I would never have been able to forgive myself if anything had happened to you Tris. I'd planned on going on that trip with you. We would have used one of my private jets.\" Damon swallowed hard. \"To think something happening to you could have been prevented...\" \n\nDamon's voice was filled with so much anguish. Tristan couldn't stand it.\n\n\"Shhh...\" He cut him off, covering Damon's mouth with two fingers. \"Don't think about it. Come here.\" He drew a shaking Damon into his arms. To think they could have lost each other because of Damon's stupidity fucking pissed Tristan off! But he knew he had to let go. \"Just for the record, I would have hunted you from the grave if I'd died in that crush.\" He murmured.\n\nIt took Damon a full five seconds to burst into laughter. He wiped at his own eyes as he laughed. Tristan couldn't help but admire the handsome man in front of him. Damon's yumminess never failed to make Tristan's breath catch and his pulse race. \n\n\"God, you are sexier than any man has a right to be.\" Tristan gasped.\n\nDamon's fingers clenched around the back of Tristan's neck, and he dropped his forehead to his.\n\n\"You're nuts you know that? I do love you, Tris.\" Damon bent and captured his lips in a sweet kiss, pulling his bottom lip between his own.\n\n\"I love you too. I love you too much to ever live without you again Damon.\" Tristan's eyes darkened with emotion. \"You sure she's your cousin? 'Cause that scene looked...\"\n\n\"Well...her mother did tell my uncle that she was his. I'm pretty sure he didn't ask for a DNA test but he...\"\n\n\"Will you shut up Damon Reid?\" Tristan couldn't control his laughter.\n\n\"She had a problem with her fianc\u00e9. Caught him cheating on her. She was devastated and decided to come cry on the shoulder of her fav cousin. She is a medical doctor. And she is in Brazil at the moment. And her wedding is in two months.\"\n\n\"To the dickhead?\" Tristan asked.\n\n\"To the dickhead. After putting Maya to bed that night, I paid the prick a visit. Let's just say he's never going to fuck around again.\"\n\nTristan chuckled. \"What did you do? Use him as a punching bag?\"\n\n\"At least I don't hit like a girl.\" Damon couldn't help but tease.\n\n\"Oh no you didn't.\" Tristan made a fist and started growling.\n\n\"Don't you dare hit me Tristan Thomas. You almost broke my fucking jaw with that right hook.\" Damon laughed, burying his face in Tristan's hair. He had almost ruined the best thing that had ever happened to him. He'd been such a fucking idiot.\n\n\"I'm sorry I hit you.\" Tristan said quietly.\n\n\"I deserved it.\"\n\n\"I know right.\" Tristan chuckled.\n\n\"I won't let you go, Tristan. Not ever again.\" He held on tighter to him. \"God help me, Tristan, I love you...\"\n\n\"I know,\" Tristan whispered back.\n\n\"I hope you mean that. 'Cause I really do.\"\n\n\"Dude, you blurted out that you loved me to my father, in the presence of my mum, sister and her fianc\u00e9. If that wasn't a genuine confession, I don't know what else is. That was so fucked up and...and sweet. I loved you so much at that particular moment, it hurt.\" \n\n\"There was no stopping it.\" Damon's voice lowered to the seductive timbre that always sent the blood straight to Tristan's cock. \"I might as well have commanded the wind not to blow. Such had been the need to just put it out there. I think I have for a while now Tristan. I was just too blind to see it.\"\n\nAs far back as Damon could remember, he'd never uttered those words to anyone except his mother. He couldn't even recall the last time he'd said them to her. And they'd fallen out of his mouth and he didn't even have the throes of ecstasy as an excuse.\n\nThey slid back into bed and held each other. Damon knew he had to face Caleb in the morning. He wasn't looking forward to that encounter. Damn fathers! His had been just as overprotective. So Damon knew what to expect. Shit!\n\nFor now, he planned on enjoying the love of his life. Life was short. He made a mental note to look for the lady who got Tristan to have a change of heart...which had led to his not getting on that fucking plane. He owed her big. Hopefully she was okay. \n\n\"Hey what are you thinking about? You have a faraway look in your eyes.\" Tristan looked worried.\n\n\"Need a favour Hon.\" Damon dropped a quick kiss on Tristan's swollen lips to reassure him that he was okay. \"I need you to help me find that lady tomorrow. The one who spoke to you at the airport.\"\n\nDamon felt Tristan stiffen. \"Damon...\"\n\n\"She's fine. Believe.\" Damon kissed the worry lines that had appeared on Tristan's forehead.\n\n\"Okay. We'll look for her tomorrow.\"\n\n\"Good. Now let's fuck our brains out.\" Damon husked drawing Tristan to lie over him.\n\nAnd that's exactly what they did till the wee hours of the morning."
    ],
    "authorname": "adjoaq",
    "tags": [
        "blowjob",
        "love",
        "restroom",
        "gay drama",
        "passion"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/fiery-heat-ch-07"
}