{
    "title": "Guys Guide to Going Down",
    "pages": [
        "My first experience with going down was a clumsy experience that left my girlfriend frustrated and me a little embarrassed and not at all excited about repeating. But then I met my now wife who is wild about receiving oral and made it her mission to turn me into the best pussy eater she could. Now, granted some of my tips here are going to be kind of particular to her tastes, but I think you can have fun exploring with your lady and use some of this information as a springboard to developing this area of your sex life. So, here we go.\n\n1. Pussy is very much an acquired taste. Think beer, coffee, wine, etc. The first time you tried any of these, you probably wondered how anyone could ever drink that crap. But, with experience you develop an appreciation for the taste. So it is with your lady's juices. If you have some concern about smell or taste, maybe plan to give your lady a bath or shower with her before. \n\n2. Don't just dive in. Women aren't like us, ready for action at a moment's notice. My wife loves getting a massage. It relaxes her and she finds it very erotic to have me rub oil on her body. By the time I work my way down to her feet, she's ready to turn over and have my face between her thighs.\n\n3. More than technique, women love enthusiasm. Don't go down half heartedly. Many women are very self conscious about receiving oral and anything less than your eager participation may totally kill the experience for her. So, get in to it. Afterwards, complement her on how she tasted, but no talking from you during the main event. This is about her and she really doesn't want to hear anything from you other than maybe a little moaning to emphasize how much you are enjoying this. \n\n4. Be gentle at first. Again, especially the clit is very sensitive and more so when you first start. Kiss around her abdomen, her inner thighs, her mons, her lips. Suck her lips between your, er, lips very gently. When you sense her warming up, move on to working your way toward the clit. Tease her a bit by darting your tongue around the clit, but once you start licking the clit itself, don't stop and move off. You can use a circular motion, up and down, trace the alphabet with your tongue, it should be pretty evident to you what she likes the best. Once you find a rhythm she likes, stay with it as much as you can.\n\n5. Most women like for you to use your hands. Sometimes my wife likes me to just get on my hands and knees and use tongue only, other times she prefers to have fingers inside. Hopefully your lady is comfortable enough to tell you what she wants and what feels good. But one thing I like to try is inserting two fingers with my palm facing up toward her clit. You'll feel a small \"button\" like structure in the anterior portion of her vagina. This is the G-spot and simultaneous stimulation of it along with tonguing the clit will send most women into orbit. I will often crook my fingers forward rhythmically (like signaling for someone to \"come here\") on either side of the G-spot and occasionally I'll stroke the spot with a circular motion using my middle finger.  \n\n6. Now, this sounds a little strange, but I'm so in tune with my wife during oral that I can actual feel in my genitals when she is about to climax. Weird, I know. As she gets very close, she starts to grind her pussy into my face. When this happens, let her take control. Keep with your rhythm, but let her take care of the pressure. She's going to apply the pressure she wants. Don't worry if you're having trouble getting a breath at this point, she's so close you can hold your breath until she finishes. If your fingers are inside, you'll obviously have a better idea when her orgasm starts. At this point, you can just continue what you're doing or start to suck her clit rhythmically between your lips. \n\n7. As her orgasm subsides, she's getting very sensitive down there, but she doesn't exactly want you to disengage just yet. Greatly reduce the pressure and let her ride out the final contractions of her orgasm. Slow your rhythm until your open mouth is over her clit with your tongue simply resting on it and just stay there for a few minutes while she recovers. I like to finish by kissing all around her pussy for a few minutes.\n\nHopefully, this will help you get started. There are few women who don't cherish a man who loves to go down. Of course nothing makes you better like lots of practice."
    ],
    "authorname": "PaulBlart",
    "tags": [
        "cunnilingus",
        "going down",
        "eating pussy"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/guys-guide-to-going-down"
}