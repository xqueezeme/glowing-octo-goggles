{
    "title": "Silver Angels",
    "pages": [
        "This is my winter holiday contest story. Partly inspired by true events. \n\n..................................................\n\nMy brother was dying.\n\nNot in the abstract everybody is going to die someday way, but in the lying on a nursing home bed, every breath may be his last way.\n\nStill, he had a good life. Living to be seventy six, married forty two years before his wife passed, three children, no druggies or miserable human beings in the bunch.\n\nHis oldest daughter was killed in an auto accident when he she was fifty one, his son was a middle manager living out West, his youngest daughter was in Alaska.\n\nThe only family he had left locally was me, his youngest brother, twelve years his junior.\n\nI was an \"oops\" baby, surprising everyone. My dad passed when I was eight, and Don stepped in, becoming a surrogate father. Despite our ages we were as close as brothers could be.\n\nI followed him around like a puppy. One of my finest memories is going out after church Sundays and helping clean his car, one of those hot rods from the sixties, and afterwards getting a pint of chocolate milk and a cake from the store.\n\nI was five eight, slender, when I reached my adult size, he was six three and weighted about two fifty. I took after mom, he took after dad. He had his jet black hair, I had fine blond locks that I wore long, after the fashion of the time. He was 'big dude' and I was 'little hippie'. We argued over politics constantly, but in good fun.\n\nIt was lung cancer, a side effect of smoking two or more packs of unfiltered Lucky Strikes a day for over forty years. He blamed air pollution.\n\nHe lay there, rasping, as I went to check on him before going home for the night.\n\nI was director of nursing at the rest home he was in. Usually I worked the day shift, but it was Christmas Eve, and I always worked the afternoon shift to give our younger nurses time with their families. I also worked Christmas, coming in at ten for the same reason. We had an empty nest, my wife and I, and she understood, God bless her.\n\nI looked at the small, eighteen inch tree I had found at a discount store and put on his night stand. The small strand of lights gave off a feeble glow. Checking his chart, I glanced at the night nurse, she shook her head and patted my hand. I stepped out and called my wife.\n\nOur daughter and her family had come in the day before, she and the three grandchildren were putting finishing touches on the holiday decorations.\n\n\"Hi honey, it's me. I may be a little late tonight.\"\n\nThe line was silent for a minute, before she said in a sad voice, \"how long?\" \n\nI knew she didn't mean how long before I came home, but how much longer did I think he was going to last.\n\n\"Not long.\"\n\n\"Call if you need me. Tell him I love him.\"\n\nShe had always liked my brother. I heard a small sob as she hung up.\n\n................................................\n\nI went back in the room and just sat quietly, watching him and remembering good times.\n\nHe woke slowly, looking around.\n\n\"Damn, I thought you were a vulture there for a minute. What the hell are you doing here this late? Go home. Be with your family.\"\n\nI smiled.\n\n\"They're all asleep. I was running late.\"\n\nI looked at my watch. Twenty minutes until Christmas.\n\n\"It's almost Christmas, thought I'd hang around with you, make sure I get my present. I saw you making eyes at your nurse, you'll probably give it to her if I'm not here.\"\n\nHe tried to laugh but it came out as a rasping cough. I gave him some ice water. When the coughing subsided he grinned.\n\n\"Why would I do that? It would make me look like a cheapskate.\"\n\nThere were two small packages under the miniature tree. We both knew what they were without looking.\n\nIt was a tradition going back to our youth. Money was often tight for a single mom. She made sure we got something, but there was often no money for the siblings to buy presents with. After a few years, Don and our oldest sister would slip us a few dollars to buy something for our mom and each other.\n\nHe used to go on and on about how much he loved chocolate covered cherries, but they had to be Queen Anne, nothing else would do. They happened to also be the cheapest. I think back then they were like fifty nine cents. My sister and I would always get him a box each, and he would make a production out of eating them, and pretending he didn't want to share. I loved Junior Mints, so every year he gave me a box.\n\nAs we got older and could afford things, the presents would be more expensive, but every year without fail we could each look forward to a box of our favorite candy. We had given each other a box for the last fifty five years.\n\nSo underneath that pitiful excuse of a tree were two brightly wrapped boxes, Queen Anne cherries and Junior Mints.\n\nWe opened them up, pretending to be surprised. He put them on his stand, sighing.\n\n\"Looks like I'm gonna check out on you, hippie.\"\n\nI put my hand on his, probably the most intimate touch I had ever given him.\n\n\"Hold on a little longer, dude. Your kids will be here tomorrow.\"\n\n\"Tell them I love 'em, and I'm sorry I couldn't wait. I feel like the Silver Angel will be here soon. Reckon that nonsense is true?\"\n\nI laughed softly.\n\n\"If you can keep a secret, I'll tell you a story. I know the Silver Angel personally. So do you. It's somebody you already love.\"\n\nI was hoping if I told the tale it would keep his interest, and maybe he would hold on for a bit longer.\n\nI could see his interest.\n\n\"Huh?\"\n\nI fluffed up his pillow, had him sit up a little straighter.\n\n\"You remember when I got back from the service?\"\n\n................................................\n\nIt was 1970. \n\nI had just got back from a two year Southeast Asian vacation courtesy of my uncle. It sucked.\n\nTwo tours. I never got shot, never shot anybody. I was a medic. I spent my time holding scared and dying kids my age, and trying to keep them alive.\n\nI got a unit citation, a Good Conduct Medal, and an honorable discharge.\n\nI took the GI benefits and went back to nursing school. I had dropped out when I ran out of money, making me eligible for the draft. My lottery number was nineteen out of thirty. I was screwed. So I joined up, actually getting a recruiter with some sense. Seeing my year of nurse training, he actually got me assigned to the medical corp. I breezed through medic training, I had already covered most of it in nursing school.\n\nAs my schooling progressed, I qualified as a certified nursing assistant, then a practical nurse, before getting my degree and becoming a registered nurse.\n\nI spent many years as an emergency room nurse. The pay was good, and no what matter came through those doors, I had already seen worse.\n\nMy mom was working at the rest home, she and the owner had been best friends in school.\n\n................................................\n\n\"Remember the Queen family estate fight?\"\n\nMy brother grunted .\n\n\"Yeah, one wife against the ex wife, right?\"\n\n\"Exactly. Nobody could find his will, and then the ex came up with the old will, before he got remarried. It was turning into an ugly court battle. What you, and nobody else except me until now, knew was how it got resolved.\"\n\n.................................................\n\n\"Eric Queen was successful farmer, owning over four hundred acres that had been in his family for generations.\"\n\n\"He had two families, the first with his ex wife, two boys. He had three with his second wife, two boys and a girl. Remember?\"\n\n\"His first wife was very attractive. So attractive in fact, that she felt entitled. Secretly she felt like she was doing Eric a fa\"\n\n\"But, he was a very successful farmer, and was richer than she knew. Even then, he was worth several million. Of course, it was tied up in maintaining the land and equipment, so very little of it was liquid.\"\"They lived in the ancestral home, a huge, two story farmhouse. She hated it, telling him they needed a newer, modern home. He was stubborn, saying if it was good enough for his great grandfather, it was good enough for him. It was a constant bone of contention.\"\n\n\"In their second year, she had their first son, twenty months later she had their second. He wanted a large family, but she thought two was enough, and secretly had her tubes tied, telling him the last child had messed up her uterus and there would be no more. He knew nothing about female anatomy, and didn't think she would lie to him, so he accepted it.\"\n\n\"When the oldest was around ten, she embarked on an affair with her doctor. He was also married, with four children.\"\n\n\"They got careless, and his wife had him watched. Eric didn't know a thing about it until the divorce action, when she was named as the reason for the breakup.\"\n\n\"Edwina, Eric's wife, denied it right up until the photos came to light. Then it was all over but the name calling and custody fight. And there was a lot of name calling.\"\n\n\"Forty years ago infidelity was a much weightier factor in divorces, and she got very little. Child support, a small cash settlement, and alimony for a year. Many thought she got much more than she deserved.\"\n\n\"She begged him for another chance, but he was adamant. He no longer trusted her, so how could he love her. They may have had a chance at reconciliation until he found out she had her tubes tied.\"\n\n\"\"The doctor let the information slip out of spite.He didn't lose his medical license, but it was a close thing. The medical board let him keep his it, mostly so he could support his children. He got raped in the divorce.\"\n\n\"When Eric found out she had 'gotten fixed' without his knowledge, it killed what little chance she had of getting him back.\"\n\n\"It turned her into a bitter, hard woman. She played games with him, denying him the children as often as possible, asking for more money, saying the children needed things she couldn't provide. He tolerated it for a little before he got his lawyer to send her a letter. If she didn't stop, he would take her back to court and go for full custody, limiting her access to them severely. She smartened up and did her best to get along, even having him join her for childhood events like plays and sports activities.\"\n\n\"Her plan was to make him forget the past, to see she had changed and deserved another chance.\"\n\n................................................\n\nI paused in my narration, checking to see if he was still awake and with me.\n\nHe rasped, asked for more ice water.\n\n\"Damn, hippie, at the rate you're going, it'll be next Christmas before you get to the point. Step it up, I'm kind of on a schedule here.\"\n\nI smiled for the first time. He was looking a little better. I had him hooked.\n\n\"Okay, okay. I have to tell it this way for you to get the full effect, but I'll move it along.\"\n\n\"As I said, Edwina, his first wife, was working on a reconciliation and it looked like it might be happening, when something unexpected occurred.\"\n\n..............................................\n\n\"Eric fell in love with someone else. He wasn't looking for love, he was actually starting to forgive Edwina, when he met Sarah.\"\n\n\"She worked for the accountant who handled his farm business and her boss was getting on in years, so he started dividing up his most lucrative accounts to the employees he could trust. They did the actual work, he gave it an overview, asked questions, and generally rubber stamped their work.\"\n\n\"Sarah was sharp, she kept up with all tax changes and laws that could effect the businesses her clients had. She found several ways he could save a good bit of money, all legally, and recommended he make changes. He was very impressed.\"\n\n\"Sarah wasn't nearly as pretty as Edwina, but her personality and loving nature more than made up for looks. Eric slowly fell in love with her. Business lunches turned into dinner dates, they even started going to church together.\"\n\n\"Before Edwina had a chance to react, she was history. Again. When the engagement announcement came out in the paper, she screamed in rage and cried in pain. Her heart turned to stone and she vowed revenge against a woman she barely knew, if it took the rest of her life.\"\n\n\"Eric had three more children with Sarah, two more boys and a girl.\"\n\n\"Sarah tried over the years to forge a truce with Edwina for the sake of the families, but was rebuffed every time. After a while she gave up, concentrating on making his two older children part of their family when they had them. Edwina had tried for awhile to poison any type of relationship between the half siblings, but the kind nature of Sarah won out, and the children at least made peace and got along.\"\n\n\"Edwina once became enraged when her younger son told a friend that his \"baby sister\" had won the elementary school spelling bee, and he was proud of how smart she was. She tried to berate him afterwards, but her oldest defended him.\"\n\n\"By now the boys were in their late teens. The oldest told her even though she wasn't related by blood, they were, and it was through no fault of the children that things were like they were. They had accepted them, and though it wasn't cool for a teenage boy to say love, he let his mom know they cared for their half siblings.\"\n\n\"Edwina took it as another way Sarah was easing her out of the family.\"\n\n\"Then something extraordinary happened. Edwina fell in love and married. Older, she was still an attractive woman. He was handsome,kind to her kids, and was attentive to her needs.\"\n\n\"He sold real estate for his uncle. It was the biggest agency in the county. The economy was booming back then, so he made good money.\"\n\n\"She was very happy for awhile. She even made peace with Sarah, asking if since the boys were going to be groomsmen if she minded that their sister be the flower girl. Sarah actually hugged her and thanked her for her thoughtfulness.\"\n\n\"Eric and his family attended the wedding. She was touched when Eric and Sarah gave her the deed to two acres of some property he had on the other side of the county. It was a spot she had often admired. They built a nice house on the slight rise, with a well landscaped yard sloping down to the highway. She was finally happy again, for about five years.\"\n\n\"The economy slowed. Remember that? It was the early eighties. Her husband had to spend more time at work to make a good living. Edwina hated the time he spent away from her, but knew it was for the benefit of the family, so she dealt with it. Both her sons were gone by then, off to college. Eric paid most of the expenses, so she made sure their clothes, car insurance, and incidental financial needs were met. She had taken a job as a secretary for a local law firm, so the cost wouldn't hurt their lifestyle. The husband objected at first, but soon acknowledged the wisdom behind it. Besides, she was always home before he was, with dinner almost done.\"\n\n\"Sometimes when he worked on Saturdays, she would call his office for his location, cell phones were just becoming available then, and were very expensive. She would pack a picnic, wait outside the house he was showing, and surprise him. When he was done with the customer, they would eat together, and he would go on to another appointment with a kiss and a full stomach.\"\n\n\"That particular Saturday he was showing his most expensive listing. They needed the commission, things were a little tight. She waited about an hour before giving up and going in, she thought sure he had the sale. The door was unlocked, she was just going to stick her head in and let him know she had his lunch.\"\n\n\"In that house you could see straight through to the kitchen. The house had no furniture, so her husband was making do. He had the customer perched on the kitchen counter, his pants to the floor. Her panties were dangling off one ankle, and she was very vocal.\"\n\n\"It shattered her. She managed to hurl the picnic basket she still had in her hands at them, with great accuracy. The basket hit his shoulder, bounced into the client, and dumped potato salad and sweet tea all over her.\"\n\n\"He didn't make the sale. If his uncle hadn't owned the company he would have been out of a job. As it was, after it got out and he was going through his divorce, he had trouble showing houses to anyone but men or couples. No one would let him show a house to a woman alone.\"\n\n\"The customer was married, to a very well to do man. He destroyed her in his divorce, he even had Edwina as a witness. They had four children, and she got custody, barely, but their lifestyle was nowhere near what she had. The children resented it and her, and each moved in with their father as soon as they got old enough to make the decision. When the last left her, she moved out of state.\"\n\n\"Edwina got her house, but she also got most of the bills. She was in danger of foreclosure, when the bank offered to refinance the loan, lowering her payment. She didn't know it, but Eric had privately guaranteed the loan to make it happen. His reasoning was his sons had to have a home to come back to. Sarah approved.\"\n\n\"I stopped at a country store while the divorces were going on, and heard the old guys that always seemed to sit around places like that talking. It was odd to hear an old farmer use the word karma\"\n\n\"Bad karma. She got done to her what she did to Eric. What goes around comes around. Always has, always will.\" \n\n.................................................\n\nI stopped for a minute, thinking my brother had slipped off into sleep. He roused himself, asked for more ice water, and bitched at me before he put his oxygen mask back on.\n\n\"Is there a point to this shit? I have yet to hear about the Silver Angel. Remember her? The point of this story? Get on with it, hippie.\"\n\nI smiled. It was now close to two. His oldest was getting in just before four, and I had left a text for my wife to collect him and bring him straight here.\n\nHe was going to get to see at least one of his children and some of his grandchildren, if I could get him to hold on for three more hours. \n\n.................................................\n\n\"Edwina turned her bitterness and rage back to Sarah. The guarded friendship was gone. Edwina fixated on the fact that if Sarah hadn't stolen Eric from her, she would have back with him and never married the jerk she wasted six years on.\"\n\n\"What really burned her up was the fact that even though she had asked Eric for years to get out of that creaky old farmhouse and build a new house, he wouldn't, then turned around and built one for Sarah just before her youngest went to college.\"\n\n\"Again, she had no knowledge that Sarah cried when they found out that it was so damaged by termites it was deemed unlivable. She loved the old house, full of history and memories. They built a nice four bedroom ranch, but she never really thought of it as her house.\"\n\n\"Years went by, like they have to. Edwina, Sarah, and Eric got older.Sarah was sixty seven, Edwina was seventy one, and Eric had just celebrated his seventy third birthday, when he had a stroke.\"\n\n\"It wasn't too bad, but it led to a couple more, and soon he was in a nursing home. This nursing home. Dad had been a close friend of Eric, having worked on the farm for him while in his teens and during college. Unfortunately, none of his children had inherited the farming gene, so our father got his wisdom and take on life imprinted on him. Mom often said if it hadn't been for Eric, he wouldn't have turned into half the man he became.\"\n\n\"So she had a soft spot for him, checking on him far beyond the call of duty. He was not having a peaceful twilight.\"\n\n..................................................\n\n\"Remember when the courthouse burned down in sixty-eight? It happened right after I went into the service. Burnt to the ground, quick. They should have rebuilt years ago, but it was in the register of historic buildings, and they just couldn't make themselves do it.\"",
        "He nodded, mumbling through his mask. He lifted it up.\n\n\"Yeah, I remember. The insurance wouldn't pay for it because they didn't install the sprinkler system they were supposed to. The county sued, saying being a historic building they couldn't touch it, federal law. They ended up settling for half.\"\n\n\"Well. remember, that was BCE.\"\n\n\"Huh?\"\n\nBefore Computer Era. Everything was still on paper and microfilm. It all burned up. It was a hell of a mess.\"\n\n..................................................\n\n\"Luckily, most people still had their birth certificates, marriage licenses, deeds, and wills. The county rerecorded as many as possible, and used hospital records, lawyer records, even family bibles to try and complete the database.\"\n\n\"Eric figured out early on none of his kids wanted to be farmers. His oldest son became an accountant, which angered Edwina, especially when he had Sarah help him during tax season. The other became an engineer, specializing in bridges and roads. His work took him all over the world, and he took his family with him as often as he could.\"\n\n\"Of his three with Sarah, one opted for the military instead of college, but when his hitch was up, he used the GI bill to finance part of his education, with his parents furnishing the rest. He became a city manager for a small town not far away. The middle child, another boy, became a middle manager in a textile firm. This was before everything went to China. The daughter went to college, became a paralegal for a law firm in the same town her brother managed, and ended up marrying a lawyer.\"\n\n\"Before he went into the nursing home he sold off a hundred acres, including the old house, to a developer. They already had the lots and streets laid out and marked off.\"\n\n\"His children and Both Edwina and Sarah made sure someone visited him often. He was failing, everyone knew it wouldn't be long.\"\n\n\"Seeing Sarah holding Eric and crying brought back many of Edwina's bitter memories.\" \n\n\"Then something happened that threw the whole family into turmoil.\"\n\n\"Eric wasn't a strictly religious man, but he went to church often, usually to please Sarah. Facing his own mortality, he started paying a little more attention to the sermons. The preacher would visit often, talking about the value of community and the good Samaritan. They were pretty good friends by then, so Eric told him if he had something to say, spit it out.\"\n\n\"He figured he wanted money, but instead he asked if he would set aside an acre for a community garden, to help the less fortunate of the congregation and the county raise their own food.\"\n\n\"He gave him five, and supervised the garden, giving advice and teaching. He said he would always be grateful for the opportunity to be useful again. He and the preacher got interviewed by the local paper, and it got picked up nationally, starting a movement.\"\n\n\"Eric wanted to amend his will, and donate the five acres to the church.\"\n\n\"The drawback to that plan was nobody could find the will. Sarah thought it was lost in the move from the old house to the new. His lawyer was long dead, and his records were gone. His new lawyer, his son in law, pushed him to rerecord the will, but he insisted it was lying around the house somewhere, they just needed to find it.\"\n\n\"Things got a little sticky. Eric was fading fast, and was no longer considered to be of sound mind.\"\n\n\"A new one couldn't be written. He was going to pass without a will.\"\n\n\"Bill, the son in law, talked to everyone of his kids. As well as Sarah could remember, she got the house and ten acres around it, the savings account, and most of the money from the sale of the hundred acres. There was also a two hundred thousand dollar life insurance policy she was the beneficiary to.\"\n\n\"Edwina got a lump sum, in memory of happier days.\"\n\n\"The rest of the land, and the farm machinery, was to be put up for auction, all five kids splitting equally the proceeds. If any of the children wanted a acre or two, they were to come to terms with the others.\"\n\n\"It got Edwina to thinking, and being a pack rat, she kept everything, including a copy of the will Eric made before he remarried. She told the lawyers she worked for about it.\"\n\n\"The newest associate was just a cut above being a shyster. He only got the job because he was a godson of one of the oldest partners. He asked to see it. Dollar signs got into his eyes.\"\n\n\"You know, if that's the only copy of the original will, then it most likely is still binding. You wouldn't be able to touch the insurance policy or her accounts, but everything else is up for grabs. Theoretically you could walk away with most all of the assets. You need to have it rerecorded at the courthouse. At the very least you could use it to leverage a bigger share for your kids. I could handle it for you, for the normal charge, of course. You don't have to pay me if you don't come out ahead.\"\n\n\"So, she took the will to the courthouse and had it done. Then she presented it to Bill, saying she was willing to negotiate, but she wanted the house Sarah lived in and most of the property for her sons.\"\n\n\"Everyone was stunned. Sarah and everyone of the kids held a council.\"\n\n\"I don't know what your mother expects, exactly. Normally, if you die intestate, the surviving spouse gets it all. That being said, this will appears to valid at the time it was registered. This could end up in court for years.\"\n\n\"He turned to the oldest two.\"\n\n\"Ask your mother what she is trying to prove. If this goes to court and gets ugly, your inheritance could be delayed by years. There might not be anything left when it's over. See if you can talk some sense into her.\"\n\n..................................................\n\nI paused for my own drink of water. He shifted his mask aside.\n\n\"I don't remember her getting everything. What happened?\"\"\n\n\"This is the part where Mom and I come in. Now shut up and listen.\"\n\nI looked at the time. Three forty. His son's plane should be on the ground. Another thirty minutes for exiting the plane and gathering luggage, forty minutes to get here. I had to keep him going for another ninety minutes. It was going to be close. His coughing jags were getting longer, and there was a lot of blood on his tissue.\n\n...............................................\n\n\"The battle lines were drawn. Edwina secretly knew she couldn't win, and sometimes hated doing it. But every time she sat by his side and listened to him call out for Sarah, her heart became more hardened. Eric wasn't long for this world. In the few times he was lucid, he got one of the children to tell him what was going on. He wanted her lawyer, his lawyer, and the kids to gather so he could make his wishes known. Unfortunately, that night he slipped into a coma. It wouldn't be long now.\"\n\n.................................................\n\nI stopped the narrative, to check on him. His breathing was shallower, his pulse lighter. But he grabbed my sleeve. I leaned down as he moved his mask.\n\n\"Almost gone!\" He gasped. \"Finish it!\"\n\nIt was four twenty five. Come on, honey, hurry.\n\n\"All right. Like I said, this is where Mom and I came in. You remember that coat we got momma that year?\"\n\nHe nodded. Normally we weren't able to afford something like that, but dude had allowed a trapper to work the creek on the back of his property. He got several muskrats, and eight mink. He also got raccoon. On a trap farther back from the creek, he got three foxes, two red, one gray. The gray one must have been pretty old, the fur was almost silver. He gave that one to him, in gratitude.\n\nI knew a leather worker, and we bought mom a long, bright white London Fog type coat, that went almost to her ankle. The leather worker carefully cut and sewed the fur. He trimmed the neck, the cuffs, and even had enough to go around the bottom.\n\nMom actually cried, saying it looked like something out of a Christmas story. She said later it was the most beautiful thing she had ever owned.\n\nI looked at him. His chest was barely moving, but his eyes were sharp and focused.\n\n\"I know you remember how much I liked history. I've been a member of the County Historical Association for many years. When Mr. Queen sold the hundred acres, he put a flyer in saying the association could remove any historical buildings it wanted. You know back them we were trying to put together a working homestead on a few acres a member had deeded to us. There was a log corn crib on site, and we didn't have one for the homestead.\"\n\n\"I was still working as an ER nurse, and since weekends were the busiest time for us I got a weekdays off a lot. The president called me the day before I got off that Monday, and asked me to see if it was in shape to move.\"\n\n\"It was cold that day, but I had promised. I went out and checked it over. At first glance it looked pretty good, but on closer inspection it was dry rotted badly. If we tried to move it, it would crumble to dust. I was disappointed, and was about to leave, when I noticed an old wooden pitchfork stuck in the rafters. I nearly pulled the whole thing down on me getting it out. It would look good in our tool collection.\"\n\n\"As I walked back to my truck, a white car with the company logo of the development company that had bought the property pulled in. They had had a lot of trouble with vagrants and squatters in the old house, so when he saw me he wanted to investigate.\"\n\nOnce I told him who I was and what I was doing, he became friendly. He was disappointed that the crib couldn't be moved, but he was happy I found the pitchfork.\n\n\"We're pushing the old house down next week. If you want, you can go into it and if you find anything of historical significance, take it. Be careful though, it's pretty shaky in spots.\" He told me just before he left.\n\n\"Naturally I went in to look. It was in pretty bad shape, and had been vandalized pretty heavily. It was better upstairs, but not by much.\"\n\n\"I was about to go downstairs when I noticed the wall behind a ratty old sofa. The walls were pine board, and normally joined in a staggered pattern, to be pleasing to the eye and give the wall added reinforcement. This wall had all the boards cut evenly, then about three feet farther down the wall there was another straight joint. I had seen this once before, in a house that was part of the Underground Railroad. The joints were actually a hidden door, concealing a room escaped slaves could rest and sleep in before continuing their journey.\"\n\n\"I pushed the old high backed sofa aside, and there was a door there. It wasn't exactly hidden, the handle was broken off, but no one had noticed it. I managed to get it open.\"\n\n\"It was about six by twelve, and seemed to be a storeroom, filled with junk. It was getting dark by then, and I was a little afraid of what I was going to find, so I grabbed three wooden boxes that seemed to be filled with books and carried them out to the car.\"\n\n\"I set them out of the car in the garage, told Carrie where I had been, and called Jack, the president of the association, and told him what I had found. He promised to go the next day with several members and look it over.\"\n\n\"Carrie helped me. Two of the boxes were so old and damaged the contents were useless. The third was in good shape, and filled with old books. Nothing valuable except a couple of Zane Grey first editions from 1909 and 1911, still with the book jackets. They're in the bookshelf at the homestead now. But, at the very bottom, was the Queen family Bible, dating all the way back to the eighteen eighties. I would have loved to add it to the homestead collection, but it was just too personal, too important as a family heirloom.\"\n\n\"Remember when we would have our family gatherings on Christmas night because Mom always worked Christmas morning to let a young nurse off? She always worked the night shift on Christmas Eve too. I had given her the bible the week before to give to Mr. Queen.\"\n\n\"You know how hectic it always is right before Christmas, so mom forgot to give it to him before he slipped into his coma. Remember how long she kept her hair? Nobody at work could tell because she always kept it up in a bun. She had attended a little gathering of staff that evening, and they coaxed her into letting down her hair.\"\n\n\"When she started to leave that night she saw the Bible and remembered. It was almost midnight on Christmas Eve, The home was down to a skeleton staff, so no one was out and about. She didn't bother to remove her coat because she was only going to be a minute.\"\n\n\"Mr. Queen had come out of his coma, and was sitting up, disoriented. Mom helped him lie back down, and gave him the Bible.\"\n\n\"I was sent to give this to you Mr. Queen\", she said, \"I hope it gives you comfort.\"\n\n\"He clutched her hand as if he were afraid to let go.\"\n\n\" Lie down, Mr. Queen, I'll be seeing you soon\" she told him, \"you rest now.\" \n\n\"The next day, Christmas, found him lucid. He asked for all his family, especially his son in law. Amazed that he was awake, they were all there, even Edwina. His lawyer son in law was holding a copy of his will, the correct one.\"\n\n\"Everyone clamored to know where it came from. He held up the Bible.\"\n\n\"It was in this\", he said. \"An Angel of God appeared before me, and gave it to me. I'm not going to be with you much longer, she said she would see me soon. She gave me a chance to say goodbye, and this.\"\n\n\"He opened up his hand. It was a silver angel. Mom had it on that charm bracelet she always wore, and it must have come off when he held on to her.\"\n\n\"Everybody cried. Edwina and Sarah had a long talk, and it all came out. Edwina had hated Sarah for taking Eric away from her, she loved him more now than she did when she was younger. Sarah got her to understand she didn't take him away, they had both moved on. Peace was achieved, they actually became friends.\"\n\n...............................................\n\n\"Mom heard the story and never said a word. But after that, every so often, if she felt they were a good enough person, she would slip into somebody's room and give them comfort, slipping a little silver angel into their hand.\"\n\n\"So there, now you know. Our mother was the Silver Angel.\"\n\n..............................................\n\nHe said \"Momma?\" and seemed to be looking behind him.\n\n\"Yes dude, it was momma.\"\n\nIt was five fifteen. His son and daughter burst into the room, trailed by my wife. I hugged her and watched as they got to say goodbye. I saw him grip his son firmly, speaking urgently into his ear. He held out his other hand to his daughter, looked past them to me, mouthed 'thank you', and passed.\n\n................................................\n\nThe legend of the Silver Angel didn't pass into obscurity. Working in the ER got less and less attractive as the years went by. People got more violent, blood got more dangerous. My mother retired and I was offered her position at the nursing home so I took it.\n\nMom stayed independent right up until she was seventy, and then she surprised us all by moving in to the rest home. She had anticipated this and put ten percent of her salary up over the years to pay for it. For the two years she was there, she was treated like a queen, with a private room and privileges far beyond that of a patient. She even volunteered the first year. Towards the end, she told me the story.\n\nThat's why, when we divided keepsakes of my mother, I took the coat. I was almost exactly the same size as her, and it fit. I had always worn my hair long, and by now it was silver.\n\nSo, every once in a great while, if I think the person deserves it, I comb out my hair, put on the coat, and walk the halls in the middle of the night. Sometimes If they're asleep I don't even wake them, just place a small silver angel onto their palm.\n\nTechnology almost did me in. One of the patients was awake one night, saw me, and managed to snap a picture on her cell phone. It was from behind, and blurred. The coat went almost to my feet. I had on white sneakers, and it looked like I was floating. The legend grew.\n\nI finally got caught. Not by a person, but a security camera. The owner now is the granddaughter of my mom's best friend. She called me into the office and showed me the tape. Then she surprised me by kissing my cheek.\n\n\"It had to be you that gave gram that silver angel. Did you know she insisted it be in her hand when she was laid to rest? I'm not gonna comment on what I saw, it harms no one and gives many comfort.\"\n\nWhat I never told anyone was that after my brother passed, I stepped out to give his kids time to mourn. There were arrangements to be made, even if it was Christmas. I called the funeral home to pick up the body, the doctor on call to issue the death certificate.\n\nAfter doing what was necessary, I stepped back into the room. Carrie was sitting outside, holding her niece. His son was still by his side.\n\n\"They'll be here shortly\" I told him. He left to get a drink of water. Acting quickly, I reached down for my brothers hand. It was closed into a fist. I was going to slip a small silver angel into his hand as tribute.\n\nThere was already one there.\n\n.................................................\n\nI asked my nephew later if anyone besides family was in the room and he said no.\n\nTwo weeks later for reasons I couldn't explain even to myself, I stopped by the Queen family graveyard. I spent about an hour telling him the story. Sarah was buried on his right, Edwina on his left. They had matching inscriptions, beloved wife and mother. \n\nThen I stopped by to see my brother and make sure the new inscription was added. It was.\n\nHe lay beside his wife. On his side, a small inscription had been added.\n\n\"Mourn not for me, for I am borne home on the wings of an angel.\"\n\nHis son said it was his last request.\n\nI scraped a little mud back and buried a small silver angel to match the one in his hand. I put my hand on the stone.\n\n\"See you soon, big dude. Tell momma I said hi.\"\n\nI walked back to my car. It was getting colder, and I needed to go home to Carrie. She had a nice beef stew waiting for me.\n\n.................................................\n\nThe man was in a rest home, and I actually found his bible pretty much as described. My mom did work in the rest home, and she did give it to him. She said it gave him great joy. The rest is just pure fiction.\n\nHappy Holidays. Hug your family for me. In the end, they're all you have. QHML1"
    ],
    "authorname": "qhml1",
    "tags": [
        "christmas"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/silver-angels"
}