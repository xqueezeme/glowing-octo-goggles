{
    "title": "Lost Empire Ch. 31",
    "pages": [
        "\"Derrick?\" Shelby questioned a few moments after Jan and Ellen had shut down to rest.\n\n\"Is anything wrong Shelby?\" Derrick asked after hearing the hesitation in Shelby's voice.\n\n\"No, it's not so much as anything is wrong though I do have a question.\" Shelby again hesitantly said.\n\n\"You know that you can ask me anything Shelby.\" Derrick informed her.\n\n\"I was wondering, now that almost all of the boxes we found are regenerated. The time is almost upon us for Lucy's return. Derrick, she risked so much for you, I believe she would do everything she could for you. Have you given much thought of what we are to do when she is whole again?\" Shelby said trying to gauge Derrick's reaction.\n\nDerrick sat for a few moments thinking hard on what Shelby had just asked him. Sighing, Derrick finally spoke, \"I have thought about it Shelby; every minute of every day since she sacrificed herself. She was a hero, the best of everything that all of you ships and A.I.'s are. Before she awakes I will need to speak to all of them, they have to be made aware of what she did. What she did and who she is now.\"\n\nShelby could only nod at Derrick's words as the tears were coming far faster than she thought they would. She suddenly realized that she was also far prouder of Lucy than she had at first thought. The fact that Lucy had done all that she had for Derrick also made Shelby prouder.\n\n________________________________\n\nKimison was still pissed that he hadn't seen so simple of a solution to the problem. The simple fact that the whole project had been his idea to start with wasn't sitting all that well with him either. Looking over to their download device Kimison felt he wasn't smart enough yet. Sighing he waited for an hour after Rayburn had gone to sleep; and then running through all the adjustments that Rayburn had made.\n\nTaking a deep breath he donned the head set again almost expecting pain as the program started.\n\n\"Sir I thought you weren't going to use this again,\" Tempro told him a moment later.\n\n\"I wasn't but I can't seem to grasp enough to solve the problem. I mean I can feel the answer there but it eludes me each time, I need to do this. I feel I am at my limit now though I have brought you here as a guide. I really need this Tempro or I might never be able to help Rayburn to finish everything.\" Kimison told Tempro with a sigh. \"I have to Tempro; I have no choice I am of no use like I am.\"\n\n\"I can understand much of what you have said, sir, though the risks to me seem to outweigh the positives.\" Tempro told Kimison.\n\n\"Look Tempro just contact Zan, the emperor gave me and Rayburn permission to access his and Sherry's libraries. I intend to gain as much as possible from him. Now please patch me through.\" Kimison told the A.I. Nodding Tempro contacted Zan telling him what was about to happen, then Tempro realized that Kimison had already bypassed him and was already in the portal to Zan.\n\nKimison blinked as a five foot seven inch young man with short brown hair, not overly muscled, no facial hair either, wearing what appeared to be...? Overalls? Appeared in front of him. \"Hello sir, the emperor explained that you might be accessing my library to increase your knowledge. I along with the rest of my brothers and sisters think that is a noble undertaking. I am here to provide any aid that you may require, please know though that I will call Mary if any problems arise.\" Zan advised Kimison.\n\n\"Agreed,\" Kimison told Zan. \"Let's get started, I want to get as far as I can before shut down.\"\n\nZan nodded as the information started to flow into the link. Kimison knew he wasn't going to be able to take all of Zan's library but hoped to get most of it. Only a few minutes into it Kimison saw one of the new safe guards Rayburn had added kick in, then the second. Only one minute later the third kicked in, oh shit Kimison thought, as the pain started and he screamed.\n\nZan appeared in front of Mary, \"I think we have another problem, Kimison is in my library. Most of the way through it, I can't disengage. I am afraid that he will suffer permanent damage if we cannot stop the process.\"\n\nMary was in the link within seconds trying to do a shut down. Touching several internal stops she finally got the program to stop. Looking around she couldn't seem to find Kimison, \"I am not detecting his bio-signature,\" Mary told Zan.\n\n\"I believe he is at the outer fringe of my library Mary.\" Sherry spoke up a moment later.\n\n\"Sergeant Rayburn!\" Mary shouted startling Rayburn out of his sleep. \"We have a situation with Corporal Kimison!\"\n\nGroaning Rayburn rolled out of bed, \"Damn it! What has that idiot done now? Throwing his shirt on Rayburn ran for the control room. Looking around he saw that Kimison was slumped back in the chair with the head set on. \"Son of a bitch! You couldn't wait could you!? Alright Mary I'm into the network, tracing now. Good I see you managed to turn the advancement off. What the hell?!\"\n\n\"What's the problem?\" Both Tempro and Mary asked.\n\n\"I thought he had the parameters set for just Zan. It appears that the program breached the parameter and he was entering Sherry's library when you got to him! You stupid son of a bitch! I should kick your ass to death if you survive this! How could you not notice that you set the parameters to unlimited?\" Rayburn shouted as he slowly started to extract the consciousness of Kimison from the program.\n\nFinally, half an hour later, Rayburn had all of Kimison back. Sighing Rayburn had him in the med bay watching as all the alpha, beta and theta waves in Kimison's brain finally started to normalize. \"The thought transfer process needs a more stabilized connection than the normal cerebral-neuro interface provided by the artificial synaptic interface.\" Kimison was mumbling to his self.\n\nShocked a moment Rayburn wrote down everything that Kimison said. Interesting Rayburn thought that was a direction he'd not thought of going in. \"Tempro I need you to run a diagnostic on the memory enhancement device. After the four extra sets of safe guards I added there shouldn't have been a failure that there was.\"\n\n\"Yes Sergeant starting now. This may take some time; I will alert you as soon as I am finished.\" Tempro replied.\n\nRayburn nodded then turned back to check on Kimison one more time before he pulled up a small pad and began to go through the memory enhancement device's program. Sighing he knew that this was going to take a while, especially with Tempro preoccupied with the diagnostic he was running.\n\nIt was perhaps another hour later when Rayburn was brought out of his line by line search of the program. \"Sergeant Sir?\" Tempro asked him.\n\nShaking his head Rayburn rubbed his eyes and looked up. The hologram of a short cropped blonde hair, medium build man, with a smooth face was standing in front of him. \"Oh sorry Tempro, you found something?\"\n\n\"No sir, all systems of the memory enhancer device are operating at optimum effectiveness. I did however notice that something had been added. It appears to be a suppressor of some sort. I believe that this is what caused the problem to Corporal Kimison.\" Tempro reported.\n\n\"A suppressor? That's how the son of a bitch was able to take as much as he did. I'll be damned! I was wondering how he'd managed to take all of Zan's library without a lot of pain. I want constant monitoring of Kimison's Delta and Theta waves!\" Rayburn told Tempro.\n\n\"Yes Sergeant. I also wanted to have you look at the progress on the first project you and the Corporal started.\" Tempro replied.\n\nTaking another look at Kimison, Rayburn nodded then started to go over everything that Tempro displayed. \"As you can see I haven't made much progress on it.\"\n\n\"I can see Tempro, I'm sorry we had to abandon it but other things took precedent over it.\" Rayburn told the hologram.\n\n\"It is alright sir; the inventions you both came up with have already helped the emperor. You both should be very proud as am I of the both of you. The simple fact that you both came up with generator re-doubler finally make it possible for me to feel safe going into combat. Plus I think that the micro-IMT is going to help the emperor as well.\" Tempro told a stunned Rayburn.\n\n\"We both felt that these were the least that we could do to help him. We both owe him as much as he says he owes us.\" Rayburn told a nodding Tempro.\n\nA sudden chiming sound caused both Tempro and Rayburn to turn. Kimison had suddenly sat up on the bio-bed looking around with a strange look on his face. Turning his attention to Rayburn Kimison smiled. \"Yeah I know you want to kick my ass but first I think I have a solution, a final solution to the micro-IMT!\"\n\nRayburn nodded then stated, \"Uh huh, this had better be good or the promise of kicking your ass will stand.\"\n\n\"Alright we have solved almost all of the problems except...\" Kimison started.\n\nDerrick was bored the paperwork had always been a boring part of command. This though had to be the ultimate in boring paperwork. Christ he thought, he'd actually dedicated a whole day to it and had still only caught up possibly 10 years! Well he thought, at least I am finally in THIS century. He'd rejected several requests by the fathers of a lot of the nobles. That part had helped speed it along.\n\nHe was about to start in on another ten years worth when Mary appeared. \"Sire I am sorry to disturb you especially since you have made such progress. I have more news from Kimison and Rayburn or rather they do.\"\n\nMary stepped aside when the holograms of both Kimison and Rayburn appeared. \"Sorry to interrupt you sire but I do believe we have completed it.\" Kimison stated.\n\n\"Completed it? What exactly?\" Derrick asked.\n\n\"This,\" Kimison stated as he held up the thicker looking shield, \"Mary if you could please?\"\n\nThere was a shimmering and the device appeared beside Derrick. \"Ok I seem to have forgotten what exactly this is.\"\n\nKimison smiled, \"it's the micro-IMT, though it does have a few surprises. Oh and I think we have found a way to get the micro-generator to recharge.\"\n\nThis last made Derrick's head snap up as he looked at Kimison. \"How long were you unconscious?\" He asked of Kimison.\n\nThe smile disappeared from Kimison's face as he looked at Rayburn, \"How in the hell does he do that?\" Then he turned back to Derrick. \"Almost a whole day, I took an idea from studying how you extended how you take in information.\"\n\n\"Yeah, the idiot took all of Zan, and then he had gone over to Sherry when Mary shut it down. I had to do a manual retrieval of his consciousness. The moron used a memory suppressor! I still want to kick his ass!\" Rayburn growled.\n\nDerrick chuckled then turned the device over looking at it. \"So please, explain about the capabilities of this.\"\n\n\"Well, we solved all the problems. I'd say the range is about five miles, six if the generator is at full. We managed to place a small self renewing generator into it. This will help to repower the main generator. All tests proved positive so we thought it was ready. As you can see the range can be set on the back.\" Kimison explained.\n\nDerrick's mouth was hanging open they had gone far and beyond what he thought they had done. \"I do believe that this almost as much as the shield emitter will prove more than helpful.\"\n\nKimison was nodding then pulled a large cannon looking weapon out. \"We also managed to finish this.\"\n\n\"Is that the triple power particle beam cannon?\" Derrick asked his voice full of awe.\n\n\"Yes sire, if it works as well as we think, then there isn't really anything out there that can stop it. Mary if you please?\" Kimison said as the cannon appeared at the feet of Derrick. \"As we have said it works better with the re-doubler. This may be the weapon you need to destroy the sect once and for all. I believe that if it doesn't destroy the planet, it can damn sure upset the stability of it.\"\n\nDerrick was nodding as he was turning the weapon different directions examining all aspects of it. \"I see that you took my advice with the firing chamber by adding a regulator.\"\n\nKimison was nodding as he pointed to the regulator, \"We were also able to add a modulator. It would seem that the regulator helps but it also needed to be controlled. We are just hoping that no one else can figure a way to counteract it, the destructive force is off the charts.\"\n\nDerrick was nodding his acquiescence, they really had been worried about him. \"So I take it you have also made a set of these for your selves?\"\n\nKimison and Rayburn both nodded no, looking away Rayburn spoke first. \"No sire, we have been working on these for you first. The power re-doubler is the only one that we have more than one of. That is in thanks to Mary who started production the moment we were finished.\"\n\n\"We are both sure that with a few of the machines on Tempro we can make a few more. Tempro don't you have a duplicating program?\" Kimison stated.\n\nDerrick heard Tempro respond a moment later, \"Yes corporal I do, though I am afraid it will take me a day each on the shield emitters.\"\n\nTurning back Kimison bowed then his face held a sad look. \"I am afraid that the holo-shield emitter we made for Mary, was for her only. It had been my intention to make one for each ship to add a component that could assist them in repairs. I am afraid that Mary's unique programming and control are the only one that we can at present make the solid hologram for.\" Looking back at something behind them Kimison said. \"I apologize to all of the ship A.I.'s I thought we might be able to incorporate it for all of you but no. I have though continued to work on the problem and hope to find a solution one day.\"\n\nDerrick looked at Kimison in shock, this was the first time that he'd heard the man speak like this. It was at that moment that Derrick saw each ship bow to Kimison and Rayburn with huge tears in their eyes. Shelby stepped forward and also bowed. \"Though it would be of great help we appreciates all that you have already done. Though in the future if you can solve the problem, I will be the first that you can try it on.\"\n\nDerrick nodded it was like Shelby she didn't want any of her children to suffer if it didn't work. Though he couldn't say anything Derrick's love for Shelby grew even more at that moment.\n\n\"Thank you Shelby, I will do all I can. For all of you.\" Kimison said a new determination in his eyes.\n\n\"As will I,\" Rayburn spoke up. \"I might have a few ideas but I need to do more research first.\"\n\nKimison looked at Rayburn then his eyes flew wide. Derrick nodded them said, \"Hmmm I see, when did you both discover the link?\"\n\nRayburn's mouth also dropped open as he repeated the same words that Kimison had earlier. \"How in the hell does he do that?\" Eliciting a short chuckle from Derrick.\n\n\"I mean come on you two, I've been around you both for most of your adult lives. I guess I notice the little things that most people just let go as everyday things. The look you gave Rayburn was reminiscent of what I have noticed about Shelby's link with me. I have also noticed it between Thomas and Conner. So you see it wasn't that hard. Now then is it constant or is it just flashes?\" Derrick asked of them both.\n\n\"I noticed it after I used the device and immediately went into Kimison's mind to try and help him. I am assuming that delving in so soon after use is what caused it?\" Rayburn asked.\n\n\"Yes, for all intents and purposes having just opened the mind like you both had, made you extra perceptive. I'm sorry I can't say if it is permanent or not, nor can I say if it will grow stronger. You are the first I have read of it happening to in well over one thousand years. Hell enjoy, it should prove advantageous.\" Derrick told both of them with a chuckle.\n\n\"I'm glad you find it so damn funny sire! I for one can't really stand to have this...\" Rayburn moved his hand up and down indicating all of Kimison. \"Invading my mind!\"\n\n\"As if your kinky perverted thoughts are any damn better!\" Kimison snapped out at Rayburn.\n\n\"Kinky! The pursuit of pure science is in no way kinky, thank you very much!\" Rayburn snapped back at Kimison.\n\nBoth men began to glare then advance upon each other. Derrick sighed and nodded to Mary who extended several electrodes inside Tempro and zapped both men.\n\n\"AAAAAAAAAAAAAAAAAA!!\" Both men yelled as they folded up and went down.\n\n\"Whab de fub wab dat forb?\" Kimison tried to talk, spewing gibberish.\n\n\"Just taking a note from Mary's book. I'm not there to kick both of your asses so this is the next best thing. The only reason I don't zap you both unconscious is that I still need both of you. Now then straighten up or you can expect more of the same. Do I make myself clear?!\" Derrick yelled.\n\nBoth men shook their heads with what little muscle control they left. \"I told you I was only doing what the emperor had ordered.\" Mary told both the men.\n\nBoth men tried to look up at her each a fierce look of abhorrence etched on their faces. \"Don't blame her, you should blame your selves. After all she was only following orders, much as I do the both of you.\" Derrick told both men trying to defuse their anger. \"Now unless either of you have anything else I actually have work to do!\" With that Derrick clicked off. Shaking his head they had come a long way. Derrick just hoped that they didn't kill each other before they reached a plateau of understanding.\n\nRayburn and Kimison both managed to pull themselves to a sitting position while they continued to glare at each other. Just as suddenly they both began to smile, then chuckle 'til they were both laughing uproariously. \"You think we have him fooled?\" Kimison asked.\n\n\"For now yes, I am afraid he might catch on soon if we have to keep this up. That and the fact that I think we are both going to have burn marks on our asses if we keep going like this too long!\" Rayburn replied which brought about another round of laughter.\n\n\"I think we have protected him a hell of a lot better than he was. I think it's about time we started in on the other project don't you think? Besides I want to try and implement the new ideas I got the other day about the correlation between data transfer and memory transfer.\" Kimison told him.\n\nRayburn sat there for a few minutes as Kimison outlined several ideas that he had. At first Rayburn was shaking his head as he took in all that Kimison was saying. Everything made a lot of sense at least 'til Kimison moved far beyond the scope of Rayburn's knowledge. Stopping a moment later Kimison could see that Rayburn had only got about half of what he'd said. That plus the feeling of angry confusion in their link also gave him reason to pause.\n\nWalking to a console Kimison pulled the plans for the memory enhancer. Then suddenly not unlike the emperor had, Kimison started to enter data at a blinding speed. The hologram of Tempro appeared a moment later his mouth hanging open. \"Yes sir, I see now what went wrong. It will be finished in a few minutes.\"\n\nKimison turned and sat next to Rayburn, \"alright I have repaired all that was wrong with the enhancer. I added another set of safeguards to prevent what happened with me and another of backups. I have re-tuned the suppressor so it is by far safer than when I used it. I need you and your odd way of seeing my ideas to their completion.\"\n\n\"WHAT!? You expect me to take as much as you did? I know the suppressor worked good, it was almost brilliant, but I was there to help you ease into it. You sure you can process the data like I do?\" Sighing Rayburn looked over what Kimison had added. \n\nNodding he had to admit even the emperor might want to use this now with everything they had added.\n\nSitting in a nearby chair Rayburn's eyes burned a hole in Kimison. \"If this doesn't work I am going to kick your ass all over this ship damn it!\"\n\n\"It'll work, I can see it.\" Kimison said drawing a strange look from Rayburn, damn if he hadn't heard the emperor say the same damn thing!",
        "Flipping a switch, Rayburn was suddenly in an empty room with a 5' 7'' young man with short brown hair, not overly muscled, no facial hair, wearing what appeared to be...? \n\nOveralls? \"Not to sound condescending but really? Overalls?\"\n\n\"Actually I tried several types of clothing and apparel over the short time I was aware. I found that after the emperor opened more of my emotions, that I actually loved this that I am wearing more than any other. If it offends you I can change it though I have to say I won't like it much.\" Zan told Rayburn.\n\n\"I am sorry I didn't mean to offend you I was wondering is all. So when do we start?\" Rayburn asked wondering when the pain would start.\n\n\"Sir? You started as soon as you appeared, I estimate that you have almost half of my library now.\" Zan replied.\n\n\"WHAT!!?? There is no sensation, nothing what did you do Kimison?\" Rayburn was shouting.\n\n[I added a second suppressor to allow the information to expand slower after entering the mind. I take it you like it?] Kimison's thoughts said.\n\n[Like it? Hell I think we have it as safe as we can get it.] \"Zan where am I?\" Rayburn asked.\n\n\"I have you at seventy five percent another five percent then you will be at shut down capacity.\" Zan reported.\n\nRayburn nodded as he finally started to feel the information that was entering his mind.\n\nZan looked up and nodded, Commencing shut down, I have to say this is the best I have seen a corporeal mind take the libraries. Good luck sir, I also wanted to thank you for the many inventions you and your partner have created.\" Bowing low Zan vanished then Rayburn opened his eyes.\n\n\"We have to give the commander a chance to use this! I felt nothing at all! Wait! You not only used a second suppressor but an extra bank of voltage regulators! Nice! Now then on to the problem you were talking about. I see where you were going though, I think a few of the items you used in the enhancer will prove useful in the project also.\"\n\nKimison nodded as they both started to move at a much faster pace than they had before. It was perhaps a day later when a huge vat like door opened in front of Kimison. A table with a female form on it rolled out of the chamber.\n\n\"Tempro? How are her vital signs?\" Rayburn asked as he made his way to the table.\n\n\"They are holding steady, I am not reading any adverse effects of the transfer. I have to say sirs, this is the furthest I have ever seen the project go.\" Tempro replied.\n\n\"We'll see Tempro, as soon as she wakes up.\" Kimison said as he was scanning the woman on the table with several apparatus.\n\nThere was a sudden sigh then, the beautiful, blonde, green eyed, slender woman sat up and looked at the two men. \"Hello, I'm a little confused. I can see that you both are techs of the empire but I can't seem to place you.\" The soft but strong voice of the woman said.\n\n\"We are friends and helpers of the emperor, you are probably the most important person next to the emperor. We will be assisting you over the next few weeks, perhaps less. Now please rest, your majesty all will be revealed soon.\" A hugely smiling Kimison said to which an even wider smiling Rayburn nodded agreement."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-31"
}