{
    "title": "Free School - Graduating to Freedom",
    "pages": [
        "In a free-use society, the young must be protected until they are old enough to enter it.\n\nWhen they turn 18, they must be acclimatised and educated about all aspects of sex and sexuality, before they can enter the adult world.\n\nThis is the story of two young people entering a free-use world for the first time.\n\nThis story jumps between the two viewpoints of Jack and Suzy.\n\n(As a British writer, all spellings and grammar are UK standard. As always, all sexually involved characters are over 18)\n\n===========\n\nJACK\n\n\"For those students who are now over the age of 18, the final stages of your education will begin next week. As you know, this is the final stage before you graduate and can enter adult society.\"\n\nThe Headmaster spoke to the school assembly, in his usual, monotone and impassive voice. His worn-out black suit matching his uninterested voice and body language. But for Susanna (Suzy) and I, this was the news we had been waiting for, basically for our entire lives.\n\nSomething happened to society, many many years ago. A war, a virus and other things almost ended society. A new way of living was created.\n\nAll children go to live in special boarding schools from around the age of 3. Family visits are frequent, but always within the school grounds. There are no field trips, no excursions. No exceptions. You never leave the school. Until, that is, you have become 18 and finished the final course.\n\nI looked at Suzy, and I could tell she was as excited as me. We had often wondered together (during our supervised break times - no students are ever allowed to be alone together, regardless of age, gender or even familiar bond) what secrets were being kept from us. We saw pictures of the world outside, of the shops and factories and nature. But we never saw any pictures of people. The buildings were always empty. The shops had no shop-workers, though we knew they existed.\n\nThe only clues we had were 2 government laws that we know were involved in the rebuilding of society. First was something called the \"naturalisation act\". The second was the \"Free Use Act\". We were told in our history class that these were instrumental in the repair of society, but we had no idea at all what these legal acts were or how they fixed the world. Any time we asked questions, we would be told the same - \"You'll find out in the final course\".\n\n\"The following students...\" The headmaster continued, listing off fourteen students, including myself and Suzy \"will move to your new rooms today, after an extended lunch break. Please use the extended break to say goodbye to your younger friends and siblings. You will not see them again until they too have finished the final course.\"\n\nI thought of my friends Adam, Darren and Ruth. They had all done the course last year. I often wondered how they were and what they were doing now.\n\n=====\n\nSUZY\n\n\"Assembly dismissed\" the headmaster told us.\n\nAs soon as I could, I ran to give my little sister a big hug. \"You be good Rose\" I instructed her. \"I'll see you in 2 years. Sooner, if I can come visit with Mum and Dad.\"\n\nWe hugged, and Rose started to cry, but I wiped away her tears. \"Two years isn't too long. It was three years ago that Abigail and Benjamin left the school.\" They were our oldest siblings. Twins.\n\nRose sat with me at lunch, and I even gave her my dessert as a final treat. That meant I saw her smile before I left. I wanted a happy memory, not a sad one.\n\nAfter our long lunchtime, I went to my room to pack my few belongings. The school had provided two suitcases, with very clear instructions. Clothes in one bag, everything else in the other. I folded my school uniforms carefully. I knew Jack would be throwing his haphazardly into his bag, but I wanted mine to stay nice. I hate creases on my clothes.\n\nTogether, all fourteen graduating students pulled our two suitcases along and through corridors until we we were brought by the deputy head to the top floor of the school. She was much younger than the headmaster. He was in his late forties, maybe early fifties. But she was in her early thirties, and I had a slight crush on her. But I'd had crushes on most of the staff over the years (male and female). I guess it was just her turn to fascinate me.\n\nWe stopped at a row of bedrooms. \"Take your general belongings into your room and unpack, but leave the bag with your clothes outside the room for now. Wait inside the room until you are called.\"\n\nThere were twenty bedrooms available, but we only needed 14, so we were allowed to pick our own. I picked one next to Jack. We hadn't been close friends for long, only about a year, since his old friends had moved up and out.\n\nThe room was nice, with a much larger bed than I'd had before. There was the usual on-suite bathroom with shower, and that too was nicer and large. One thing that was missing, was a wardrobe. There was nowhere for my clothes, except a small draw, already filled with plain, skin-coloured underwear, as well as pads and tampons.\n\nI felt like I was waiting for a long time before finally there was a knock at the door. The school nurse came in, with another woman I didn't know, but who seemed to be her assistant. Both were in their late thirties.\n\n\"Hi Susanna. How are you today? You must be feeling very nervous. But that's OK. Firstly, I'm going to need you to get naked, and put your remaining clothes in a pile.\"\n\nI did so, and I watched as the assistant took the clothes out of the room.\n\n\"Great.\" The nurse reassured me. I'd been naked in front of her before, but she was almost the only person who had seen me naked since I'd joined the school. \"Please let me do a physical examination. Are you on your period?\"\n\nI shook my head.\n\n\"That's good. It's much better for this week. If you look in the draw here, there are tampons and other items to help you if you do start your period.\"\n\nShe then gave me an injection. \"This is to help with your immune system. You'll be meeting a lot of new people soon, and close contact with strangers will mean you catch more viruses. This should help with that.\"\n\nThen she gave me a second injection. This time it was not in my arm, but in my leg, close to my genitals. \"This is a form of contraception. It will last for around a year, but then you'll need to speak to your new doctor.\"\n\n\"What's...contraception?\" I asked puzzled. I'd never heard that word before.\n\n\"You'll find out soon enough\" she told me with a smile. \"But don't worry. I give this injection to everyone, men and women. And I've had this injection too. I still get it once a year.\"\n\n\"Me too\" the other woman said, trying to reassure me.\n\nThen I was given a physical examination. They looked at every part of me. And I mean, every part of me. They even looked in my vagina and anus with special tools! One of the special tools caused my vagina to hurt and bleed, but only for a second. After that, it somehow felt different. More...open and relaxed. It's hard to describe.\n\nI don't know what the nurse and assistant were looking for in the examinations, but they both seemed happy at the end.\n\nFinally, the assistant pulled out a small grooming kit, compete with small scissors, razors and other hair-care items. But instead of cutting the hair on my head, she started cutting the hair between my legs!\n\nI'd known that growing hair there and in other places was normal. But this was the first time I'd had a hair cut in my private places. The assistant asked me about how I wanted the hair, but I didn't really understand. I asked what my options were, but she just said it's hard to explain. In the end she removed all the hair under my arms, and gave my vagina something called a 'landing strip', which meant that she removed everything except a little rectangle of hair.\n\n\"OK dear,\" the nurse said as the assistant finally put away her scissors. \"You can now go to the classroom. You're the last student, so you'd better hurry.\"\n\n\"What about my uniform?\" I asked.\n\n\"No need. You are perfect as you are.\"\n\n\"But I'm naked!\" I exclaimed.\n\n\"Yes, but so are all the other students. It's OK. Now please go to the room on the left.\"\n\n-----\n\nThe nurse wasn't lying. As I walked self-consciously into the classroom, I saw everyone naked for the first time.\n\nSure, I'd seen naked girls before. I saw myself in the mirror every day. The girls here were much like me. A couple had bigger boobs, most had smaller.\n\nBut what really caught my eye, and by that I mean I couldn't stop looking at them...was the boys.\n\nI knew boys had a penis. I'd seen photos. And once or twice every year at school a rebellious boy would drop their trousers and show off their genitals. That was a quick way to get two weeks of detention. But I'd never really seen one in real life for more than a few seconds. Nor seen them erect. And right now there were six penises on full display. Four of which, (including Jack's) were fully erect. One of the others (belonging to a boy called Rupert) had tissues at the end, catching some kind of fluid that was dripping out.\n\nAnd at the front of the classroom, standing in front of the whiteboard, was the headmaster. And he too, was naked. His limp penis hanging freely between his legs. The only thing remotely close to clothing was a small white ribbon around his left arm.\n\n\"Right. Everyone's here\" he said. \"Now we can begin.\"\n\n--------------------------\n\nJACK\n\nI'd come in the room about five minutes before Suzy, and I'd had the same reaction. Just staring at the girls. So many boobs and pussies! Dicks too, but I didn't really care about those. I couldn't help but get hard from seeing all the naked girls. All the boys were excited, and so were the girls. Some girls were putting tissues over their vaginas, and those tissues seemed to be getting wet. We all just took in the sight of one another, our bodies fully exposed. Rupert had been stroking his cock while looking at the group, and moments later cum had exploded out. I'd expected the headmaster (naked too) to be angry, but instead he just passed Rupert some tissues.\n\nI tried to avoid touching my dick, because I knew that I'd cum too if I started touching it.\n\n(Years ago as a young teenager, I'd woken up with wet bedsheets. Scared I was sick, I had called for the school nurse. She explained that men's penises sometimes release something called cum, and I shouldn't worry, but I shouldn't encourage it, and it should only happen in private.)\n\nSuzy came into the room, and the headmaster told us to sit at our desks. Until then we had just been standing around, looking at each other's naked bodies. I found a desk near the back, whereas Suzy chose the front. All desks had textbooks, computer tablets and tissues. Plenty of tissues.\n\n\"OK\" The headmaster said, in his monotone voice. \"Let's talk about reproduction.\"\n\nIt was the most intense 4 hour learning of my life.\n\nIt started with cells, and how after eggs meet sperm, the eggs divide and grow until a baby is formed somewhere called a womb. There was a video of a horse being born.\n\nAfter that, the lesson moved to where the sperm is, and where the eggs are. I learned what my cum really was. And why my female classmates have something called periods.\n\n(At one point, the deputy head walked into the room to give a message to the headmaster. She was naked too! I couldn't help but stare at her big breasts as she walked in and out.)\n\nThen, in the final hour, they explained how the sperm meets the egg. It started with abstract diagrams. Then videos of animals. Rabbits, horses and monkeys.\n\nFinally, it moved to humans. It showed a video. The man was already erect. The woman was on her back with her legs wide. The man pushed his cock into her open vagina and began thrusting.\n\nThe teacher paused the video. I glanced round to see all other guys were hard again, just like me. Several ladies had put their hands between their legs. Suzy seemed to be absent-mindedly playing with her large boobs.\n\nThe headmaster explained briefly that this thrusting time could last a long time, and there were many different positions it was possible to use during this time.\n\nHe un-paused the video. The man thrusted for another minute, before moaning loudly. The camera zoomed in on his cock as it eventually pulled out of the woman. Cum dripped out of her pussy. She didn't seem to mind. In-fact, she seemed to have enjoyed it, because she moaned with pleasure too.\n\nThe video was cut off.\n\n\"OK students. We've covered a lot for today. Please go to your rooms immediately. Dinner will be waiting for you there. You will find more material on today's topic by using the computer in your room. Breakfast tomorrow is at 8am.\"\n\nI tried not to make eye contact with the other students as we walked to our bedrooms. Especially Suzy. Today had changed everything. I didn't know what would happen with my friendship with her now.\n\nAs I closed my bedroom door, I heard the usual 'click' of the locking system. Every bedroom locks until breakfast. I used to wonder, but now I knew why. It was to stop us from doing together what we'd seen in the videos.\n\nI ate the food provided and then sat, naked. Feeling....what was I feeling? This was a new feeling. It was all about my genitals. My penis wanted something. I remembered a word the teacher used. 'Horny'. I was 'Horny'.\n\nI turned on the school computer. Usually, there were extra school learning materials available -- maths games, children's books etc. About twenty educational options and five games.\n\nBut today there were just two options. And one of them was blocked out.\n\nReproductive pornography\n\nand\n\nFull pornography\n\nSince the 'full' option was unavailable, I clicked on the link for 'reproductive pornography'. What I saw blew my mind.\n\nThere were hundreds of videos. Each one showed a man (or sometimes several men) meeting a woman (or several women) and inserting their penises into the vaginas. The women and men seem really happy during this, and then the man cums into the woman's vagina. He then leaves the woman alone.\n\nThe videos were set in many places. Sometimes in bedrooms, but other times in places like in the woods, or even in shops. Always the men and women were naked. Sometimes they had ribbons, like the one the headmaster wears. Other times they didn't even have that.\n\nMy cock began to feel hard, and I stroked it to the videos until it shot cum into a tissue I had ready. Then I watched more pornography, until it was hard again, and I did it again.\n\nThen tried to sleep. As I drifted off, I remembered my friends from before. How I learned words like 'Cock' and 'pussy' from them, when we secretly showed our genitals to each other when we thought the teacher wasn't looking. We had no idea back then what they were really for.\n\n--------------------------\n\nSUZY\n\nI didn't sleep much last night. I was too busy.\n\nAs well as the pornography to educate myself, there was something else in the room. A reproduction of an averaged sized erect human penis. It had 2 balls attached, and if I pressed a small button, it would fake an ejaculation, pushing a small amount of watery liquid out from the 'eye' at the top.\n\nWhen I asked around at breakfast later, I learned it was only given to the girls. And like me, every girl had used it while looking at the reproductive pornography. And it felt....amazing. Indescribable. All I knew was, I wanted it. I wanted more. And I wanted to know more. About sex, about...everything.\n\nWe were all getting used to being around each other naked. It was strange, but also enjoyable. Freeing. I was puzzled by one thing. I didn't feel cold. I thought I would, but I didn't. Nobody else did either. But considering all we were already learning, the mystery of not being chilly was hardly a big priority.\n\nThe room we ate breakfast in was big. Not as big as the main school cafeteria, but still large. It probably had seats for fifty people. With only fourteen students, it felt almost empty.\n\nSitting next to Jack at the breakfast table, I could see he was trying (and failing) not to look at the boobs visible to him. Our group had an imbalance -- We had nine girls and only five guys. Even without Melissa (who often skipped breakfast) there were 16 breasts bouncing around in front of Jack and the others. Of course Jack had an erection! I reached my hand slowly under the table and put my hand over it. My first time holding a real penis!\n\nJack's penis was slightly larger than the fake one I'd been thrusting inside myself yesterday (and this morning). And it felt warm. I slowly began moving it up and down. I don't know why. It just felt natural.\n\n\"Don't stop\" Jack whispered to me. \"I'm going to cum.\"\n\nAnd a moment later, I felt it pulse in my hand, and white cum came out. It didn't shoot like the fake one did. It more...dribbled out, but with force.\n\nAs I removed my sticky hand, he whispered \"thanks\".\n\n---------------------------------\n\nJACK\n\nIt wasn't the headmaster waiting for us this morning. Instead it was Mr Grander. He was in his mid-twenties and my favourite of the staff. He was usually a history teacher. And like the head yesterday, he was naked, except for a ribbon around his arm. His ribbon was blue, compared to the white ribbon of the headmaster.\n\n\"Good morning students,\" The teacher told us, \"To begin with, we will learn about the history of our 'free-use' society and how it affects all of you. Then in the afternoon, you'll learn more about sex. Specifically in the ways it can and is used for pleasure rather than reproduction. This includes non-vaginal and same-sex contact. Then this evening, you will have a chance to experience vaginal penetration for the first time. Something I'm sure many of you are looking forward to.\n\nThere was a huge murmur from all of us, as Mr Grander had just dropped about four revelations at once.\n\n1 - There was more to sex than reproduction. You didn't need to be trying to make a baby to do it. (Something I was pleased about, because there's no way I'm ready to be a father!)\n\n2 -- There didn't have to be a vagina. Where else could it go? Did girls have somewhere else it could go? What type of baby did it make if you used this other hole?\n\n3 -- same sex?! Does that mean I could have sex with a man? I know I didn't have a vagina, but did other men? And could two ladies have sex? What would that be if they didn't have a penis?\n\nAnd 4 (the most important to me) -- we would be having sex tonight!\n\nAll those revelations did nothing to help us concentrate on the history the Mr Grander was talking about.\n\nI'm sure Suzy could give you a better recap, but it seems to be that the world was doing pretty badly after a big war and a virus that killed lots of people. And people were very sad. So they made a new society where people could always get the thing that makes them happy -- sex. And to keep everyone thinking about sex, everyone stopped wearing clothes. It even became illegal to wear clothes in some places. So now, in the outside world, you can have sex almost anywhere, with almost anyone. The exceptions being schools, hospitals and similar places.\n\nAt one point in the lesson the deputy-head walked into the room. Once more, all eyes moved to her and her large breasts. Mr Grander's eyes too, were on her big tits. She silently passed him a note. He read it and nodded. His eyes were on her arse as she began to walk away.\n\n\"Mrs Williams\" he said to her as she was about to leave the classroom. \"I'd like to fuck your vagina. If you're not too busy.\"\n\nShe turned round and gave a big smile. \"Of course\" she said, walking back towards him. She moved her hand to her mouth and grabbed some spit. She brought it down and seemed to put spit on her pussy. \"How would you like me?\"\n\nThe history teacher was frantically rubbing his cock, increasing it's size. \"Bend over that empty desk.\"",
        "The deputy-head did so, and we all watched in fascination as he lined himself up behind her, then pushed his cock into her. He began to thrust and she began to moan, her breasts bouncing up and down as he pushed into her. It was one thing to see sex on the computer, but in real life?!\n\nSeveral students moved from their desks to get a better view, and it was clear both teachers were enjoying the act. It was almost hypnotic, watching their bodies bumping against each other. Some of the other students were touching themselves while watching. I noticed that Deborah near me had put two fingers insider her pussy and were pulling them in an out, just like a penis might do.\n\nAbout three minutes since Mr Grander had first entered her, he huffed, and pushed himself as deeply into her as he could. She moaned louder than I'd ever heard her before. He pulled out his cock, and the cum slowly began to drip out of her. She grabbed a wad of tissues from the table, and wiped herself down. Then she walked out the room without a second word.\n\n\"Now....where were we?\" Mr Grander continued, as if nothing had happened. \"Oh yes, the treaty of Milan in the year two thousand and thirty...\"\n\n-----------------------------\n\nSUZY\n\nWe all ate our lunch quickly. We were excited for the next stage in our learning. We were not disappointed. For the first time, it was a 'practical' lesson.\n\nThe desks in the classroom had been moved to the sides, so only a few chairs remained. Teaching us for this lesson was the PE teacher. A strong woman in her early fifties. Her hair was white but everything else about her suggested she was as fit as when she was 20. Like all the previous teachers, she was naked. Unlike the other women teachers, she had a ribbon around her arm. Hers was blue like Mr Grander's.\n\n\"OK\" she said to us all, in the way we'd heard from her for the past 15 years. \"Partner up. Two girls, one guy. And don't sit down until I tell you.\"\n\nI instantly gravitated towards Jack. So did Melissa. That made our three.\n\n\"OK, let's start with looking at the gentlemen. Can you find his penis?\"\n\nThat was more of a joke than anything, as all 5 guys had huge erections.\n\n\"Very good. And that penis can go into many places.\"\n\n\"The vagina?\" asked Naomi.\n\nThe teacher laughed loudly \"YES. The vagina. Wonderful for fun and for making babies. But what if we don't want to make babies? Is there somewhere else a man can put his penis?\"\n\n\"Umm....\" Naomi again \"her bum hole?\"\n\n\"That's right\" the teacher said. \"The ass, arse, booty, or 'bum hole' is great for sex, though it can be a little more complicated than the vagina, as it doesn't provide it's own lubrication. And if you are very clever, you might notice that men also have a 'bum hole'. This means that men can have sex with other men, by using their bum holes. Again, it's a little bit complicated, but quite possible.\"\n\nI glanced over at Jack. He didn't seem too excited about the idea of someone putting their penis into his bum hole. His excited cock seemed to be losing it's energy.\n\n\"Where else can a penis be inserted into?\"\n\nThere was a pause as we all thought hard. Naomi tried \"the pee hole?\" but the teacher shook her head.\n\nI decided to speak. \"The mouth, miss?\"\n\n\"Very good Suzy! Both men and women have mouths which are a great size for a penis.\"\n\nThe teacher grew a mischievous smile on her face.\n\n\"Gentlemen, would you please sit on one of the chairs.\"\n\nJack sat on the chair in front of us. His erect cock pointing straight up at us.\n\n\"Now ladies, this is called a blow-job. I want you to kneel down in front of him, and take turns sucking his cock. And I mean SUCKING not biting. And don't blow either. The name is misleading.\"\n\nI felt a twinge of anger as Melissa was faster than me, and got to Jack's cock before me. I waited impatiently, looking at her straight, shoulder-length black hair as it obscured my view of her sucking on Jack's cock. It felt like ages before she finally let it go and let me have my turn.\n\nIt was covered in her spit, but that didn't matter. I had Jack's warm cock in my mouth. It felt amazing, and I sucked and moved my own head up and down. Somehow I knew how to do this. How to suck on a cock. It felt so natural.\n\nMelissa gave me a nudge, and I reluctantly passed it back to her.\n\nWe all heard a spluttering, coughing noise and turned to see what was happening. Laura was pulling her head back from a very sheepish looking Tom's crotch, his cock quickly shrivelling.\n\nThe PE teacher gave him a disappointed look.\n\n\"OK students, there's a lot we can learn here. First, gentlemen -- it's common etiquette to warn a woman before you cum. And that means at least twenty seconds warning. Two seconds is not enough.\"\n\n\"Secondly\" she continued \"Cum has a specific taste. Some like it, some don't. You don't need to swallow if you don't like it. Just don't make a big deal out if it.\"\n\nAnd at that, we all went back to sucking, while Laura went to wash her mouth out in the bathroom. Over the next four minutes, all the guys came from our blow-jobs. For Jack, he was in my mouth. I was about to again pass the cock to Melissa, before he looked me straight in the eyes. I knew what he was saying without a word, and seconds later, I got my first taste of cum. And it tasted good! I slurped it out of his cock like I was sucking on a straw.\n\n\"Hey!\" Melissa said, realising I'd got his cum first. \"Let me taste!\"\n\nAs I lifted my head off his cock Melissa's mouth moved. But not to Jack's cock. She locked lips with me, forcing her tongue into my mouth, swirling the cum around between the two of us. I should have broken the kiss and moved away, but it felt so good, sharing Jack's cum with her. In the end, she was the one to end the kiss.\n\n\"OK\" the teacher continued when Fabio (the guy in the group with the shortest but fattest cock) had finally cum into Naomi and Deborah's mouths. \"Let's talk about equality. Guys, stand up.\"\n\nAll the men stood up. The teacher moved more chairs so that there were now enough chairs for each woman.\n\n\"Ladies, please sit down. And open those legs nice and wide for me.\"\n\nI did so. My chair next to Melissa's. We both sat there, legs open, waiting for what would come next.\n\n\"Gentlemen, never be afraid to go down on a woman, especially if she will go down on you.\"\n\nAll five of the men knelt down in front of one of their partners. Jack knelt in front of Melissa, staring at her moist pussy. The remaining four (included myself) just sat and waited, as we watched the men get their first chance to lick a pussy. All the while the teacher gave clear, direct instructions to them about how to use their lips, tongues and even teeth. Then it was my turn.\n\nI thought having a fake penis in my pussy felt good. It was nothing to Jack's tongue as he slowly licked, sucked and nibbled. It was heaven. It was ecstasy. It almost hurt when Jack moved away to return to Melissa. My hand automatically rubbed at my pussy while waiting, trying to keep the pleasures going.\n\n\"Miss?\" Asked one of the guys, \"Will the women make a squirt of cum, just like we did?\"\n\n\"Probably not\" she said. \"That's a more advanced question. For now, let's say no.\"\n\n\"Then how do we know when they've finished?\" another guy asked. \"My tongue is already getting tired.\"\n\n\"You'll know when.\" She said, but then sighed. \"Sadly, since it's your first time, very few of the ladies will orgasm. If any. Gentlemen give it two more minutes, then we will stop.\"\n\nJack flitted quickly between me and Melissa, trying to give us both equal time. But the teacher called stop, leaving me still feeling...what was that word...horny.\n\n\"OK. That's enough practical for now. Ladies, I know you are feeling unsatisfied right now, but I promise that will all change soon enough.\"\n\nWe then all remembered what Mr Grander had said earlier. We'd be having real sex soon! With real penises entering our vaginas!\n\n\"Now all of you go to your rooms. ALONE. There will be some food waiting for you. Eat and shower. Then come back to this classroom at 9pm. Class dismissed.\"\n\nWe all walked single-file out of the classroom and to our bedrooms. I wolfed down the risotto that was waiting then hopped into the shower. All the while wondering, who would be the first to put their penis inside me? Jack? Another student? Mr Grander, the headmaster or another teacher?\n\n-----------------------------------\n\nJACK\n\nWe entered the classroom at 9pm, the fourteen of us waiting patiently for a teacher or someone to tell us what was going on. After about ten minutes, the deputy headmistress finally came to the room.\n\n\"Everyone here? Good. Follow me.\"\n\nWe followed her only a few steps to the dinning room, where we've been eating our breakfasts and lunches. The normally empty room was now filled with people. Most were strangers I had never seen before, though one or two seemed familiar to me. Maybe parents of younger children I'd seen being visited over the years. And there were a lot more men than women here.\n\n\"OK students. These lovely men and women have volunteered to be your firsts. When your name is called, you'll choose who to take back with you to your room. Men will choose one lady, whereas our female students will choose two men to join them.\"\n\nAll the men and women stood and lined up randomly around the edges of the room, allowing us to have a good look at these strangers. All were naked, apart from some wearing arm ribbons. I'd never seen so many cocks, pussies and breasts. It was almost overwhelming. A few days ago I had twice seen Ruth's pussy for a combined total time of fifteen seconds. Now I was bombarded with pussy.\n\n\"First name...Naomi Atkins\".\n\nNaomi walked around the room, unsure. She looked at the men with their big cocks and their soft cocks and everything between. Eventually she chose two guys and they followed her to her room. Fabio was next, followed by Melissa and then my friend Suzy.\n\nI watched as Suzy chose an older man, maybe as old as the headmaster, and a guy who looked, well, a little bit like me!\n\nEventually I heard \"Jack Webb\".\n\nMy name was called and I began to look at the ladies. The room was about a third of what it was before, and some of the ladies I liked most had gone, but there were still eight women to choose from.\n\n\"Um, what's your name?\" I said to a woman with much darker skin. She was about twenty five, and was taller than me. Her hair was long, straight and black, and her face was highlighted with golden makeup. Her boobs were almost as big as Suzy's, but were definitely firmer. Her pussy was hidden slightly by wisps of black hair. She didn't have any ribbons on her arm.\n\n\"Does that matter?\" She asked. \"But if you want to know, it's Candy.\"\n\n\"OK, Candy. Shall we go?\"\n\n\"Lead the way\" she said with a smile.\n\nWe walked along the corridor to my room. Almost every room we passed had the sounds of sex coming from them. Either moaning, or the slap of skin on skin, or just the creaking of the beds.\n\n\"We will be making those noises soon\" Candy said to me, trying to be seductive.\n\nShe hadn't realised that I was trying not to think about it. To think about Suzy and Melissa and Rupert and all the others.\n\nIt was strange. These were the boys and and girls I'd seen all my life. They were practically my family. It was taking time in my brain to adjust. To seeing them not as boys, but men. Not girls, but women. Not children, but adults. Sexual adults.\n\n\"Is something wrong?\" Candy asked when she walked into the bedroom with me. \"You're very quiet. If you've changed your mind and want a different girl, I think there is still time.\"\n\n\"No\" I said, waking up from my thoughts. \"I like you. I think you are pretty.\"\n\nCandy smiled and sat on my bed. \"OK. I think I understand. Let me guess. There is a girl (or a guy), one of the students, that you really like. And though you are excited to have sex, you are sad because I'm not her, and because you know she's having sex right now with two guys who aren't you.\"\n\n\"um...how did you know?\" I said, sitting next to her. I didn't want to tell her she was wrong. That wasn't really what I was worried about.\n\nShe passed me a small blue tablet, along with a glass of water. \"Take this, it will help you keep going tonight.\"\n\nThe tablet taken, she moved her hand to play gently with my cock.\n\n\"I know,\" she now continued, \"because we have all been there. It's a common situation in our society. You have to learn to separate emotions from sex. Look..\"\n\nShe lifted her hand -- the one that was not around my cock. It had a small gold ring around it.\n\n\"This is my wedding ring. I got married about two months ago. He's the love of my life. And right now he's in one of the other rooms with a girl called...Emma, I think...fucking her. He's going to eat her pussy, then fuck her mouth and cunt until he cums. And then he's going to do it again and again. He might even fuck her arsehole. He's going to fuck that 18 year old all night. Doesn't mean I love him less.\"\n\nShe moved away from me and onto the main bed, spreading her legs wide, waiting for me.\n\n\"So you can put that dick inside me, because it's a fun thing for adults to do. Or you can lick my pussy. You can use my mouth, and if you are a good boy you can use my arsehole later on. But you've got a nice big dick, so you'd better use it somehow.\"\n\nI climbed up onto the bed, and over her. I moved my cock awkwardly to the entrance of her pussy. The entrance felt tight, but also wet and inviting. Inviting me to slide inside her. I pushed with my hips, and my cock slid inside her.\n\n\"Oh yeah, just like that!\"\n\nIt was amazing. Like I was built for this. Her pussy squeezed my cock but in such a pleasurable way. And my body knew exactly what to do. I began to thrust with my hips, moving forward and backwards harder and harder. In front of me her breasts moved up and down as I pushed, and I moved my head down to lick at her nipples.\n\nI felt the pressure building up, and moments later I came inside her. Her pussy squeezed me as squirt after squirt entered her.\n\nIt was the best I'd ever felt in my entire life. In that moment, I forgot everything.\n\n---------------------\n\nSUZY\n\nYou could forget that plastic toy penis. I didn't need it any more. This was everything.\n\nThe old guy had already cum inside my pussy twice, and the younger guy once. Right now the younger guy who I thought looked a bit like Jack (though his dick was smaller than my classmate) was holding my hips while pushing frantically into me. The older man's limp cock hung in front of me, waiting for me to put it back inside my mouth to make him hard again.\n\nThey hadn't paused. They hadn't rested. As soon as one guy finished inside me, the next guy just took over. The only moments we stopped were to move my position on the bed.\n\nAnd they were going to keep this up all night.\n\nHeaven.\n\n---------------------------\n\nJACK\n\nI was surprised when Candy didn't leave after I'd cum. That's what happened in all the videos on the computer. She laughed at that. \"Sure\" she said. \"A lot of sex is like that. Cum and leave. But not all sex.\"\n\nJust to prove it, she cleaned herself up in the bathroom (taking my cum out of her pussy) then showed me something called a 69. She laid on top of me, her pussy in my face. And I licked at her pussy while she sucked my cock until I was hard again.\n\nAnd when I was hard again, she moved her body. This time she was on top of me. She lowered herself down onto my cock until she was sitting on me, my cock deep inside her. This let me see her boobs and face as we fucked.\n\n\"You're doing much better this time\" she told me. \"Generally, the longer sex takes, the better for both. So don't cum until you have to.\"\n\n\"Generally?\" I said to her, though my eyes were focused on the point where her pussy met my cock. The sliding motion was almost hypnotic.\n\n\"Sure\" she said. \"There are times you just want the guy to cum as quick as possible. Like on the bus for example.\"\n\n\"You can have sex on a bus?!\"\n\n\"You can have sex almost anywhere\" she said with a smile. \"That's what a free-use world is all about. You are horny, you find someone, you have sex. Welcome to being an adult.\"\n\nShe arched her back and moved her legs a bit so she was fucking me from a different angle. It exposed something called 'the clit' better, she explained. She told me how important it was.\n\nI was close, and she could feel it (I don't know how, but she knew). She climbed off me and instead sucked my cock until I came in her mouth. \"I just wanted to know what you taste like\" she told me with a smile, licking her lips.\n\nWe watched porn together for a while after that. The 'full pornography' had been unlocked on the computer, and Candy enjoyed showing me her favourite videos to watch with her husband.\n\nIt was long after midnight at this point. The sounds from the other rooms had died down a lot, but most rooms still had some gentle rhythmic bed bumping or the occasional moan. Suzy's room was next to mine, and I was sure I could still here her.\n\n\"Wanna try something different?\" Candy asked, as one of the videos (three men and three women in the same bed) finished. I thought she meant a different video, but instead, she bent over, and found something called lube.\n\nAnd then she told me exactly where to put my cock.\n\n---\n\nSUZY\n\nThe breakfast room was full to the brim. Students and lovers all sitting together, talking and joking about last night. It had been as magical for them as it had been for Sven, Alex (the Jack lookalike) and myself. Naomi was telling how they had tried something called a DP, which meant one guy was fucking her pussy, while another guy fucked her bum-hole.\n\n(Both Sven and Alex had used my arse this morning, but not at the same time as my pussy or mouth).\n\nJack seemed happy, talking with Candy and discussing breakfast. I'd heard him a couple of times through the wall last night. Melissa and her two men (big black guys) were at the same table as them. Candy was embarrassing Jack, telling that when he first put his cock in her asshole, he found it so tight he was worried it would get stuck! But Jack and the others soon laughed and Candy gave him a small kiss on the cheek.\n\nAs I ate my breakfast, I was surprised to see a couple of the adult guests just start fucking in the room. A middle aged man had whispered something to a younger blonde woman, and she'd promptly sat on his cock and began rocking up and down. And nobody else (none of the full adults at least) seemed to mind or even notice.\n\nThere wasn't a big 'goodbye, thanks for taking my virginity' thing. The men and women just left when they had finished their breakfasts. Then a teacher called us students into the classroom, and we were done.\n\nWe were all clearly exhausted, and the teacher (Mr Grander again) promised a half day so we could all get some rest. Only morning lessons.\n\nThe lessons began, and so did something a bit strange. Mr Grander was teaching, when the headmaster came into the room. He was naked as usual. And he had a big erection.\n\n\"Melissa Clements\" he said \"Would you please come to the back of the classroom?\"\n\nWe tried to focus on what Mr Grander was talking about, but kept an eye on Melissa, wondering what she had done wrong. We watched as the headmaster whispered something to her. She sat on one of the empty desks. She opened her legs. The headmaster stroked his cock a couple of times, then slipped it into her exposed vagina and began to fuck her!\n\n\"Students, keep focusing on Mr Grander please\" the head told us, as he saw us all looking. \"This won't take long.\"\n\nBut he did take long. It was probably at least ten minutes before there was a deep manly groan and he came inside Melissa's vagina. She moaned loudly too. He pulled himself out of her, passed her some tissues and told her to go back to her seat.",
        "\"This\" Mr Grander said as the Headmaster left \"is what it means to be in a free-use society. Anyone can fuck almost anyone, at any time of the day.\"\n\nI noticed Mr Grander now had an erection. And Mr Grander noticed that I had noticed.\n\n\"Suzy, would you please stand up and come to the front?\"\n\nObediently, I did so. He stood me against his desk, and put his hand on my back, encouraging me to bend over. His feet slipped between mine, widening my legs slightly.\n\nThen he stuck his cock forcefully inside me. In front of everyone. I was being fucked by the teacher at the front of the class.\n\nAnd then he kept on teaching!\n\n\"In theory, the law is that anyone can fuck anyone at almost any time. However, an unofficial ribbon system exists that is almost universally acknowledged and followed.\"\n\nHis thrusting got a bit harder and faster. His balls began slapping against me with the force he was fucking.\n\n\"A black ribbon means that sex is entirely off the table. This might be because of an injury for example. A red ribbon means that the woman is on her period, or there is some other reason why vaginal sex is unwanted. Many women trying to get pregnant by a specific man will wear this ribbon. But blow-jobs or anal...\"\n\nHe stopped talking, and gave one or two really hard thrusts before cumming inside me. I couldn't help but catch Jack's eye as the teacher shot load after load into me. I could feel the liquid begin filling up my insides. Then he pulled himself out, and continued teaching as if nothing had happened.\n\n\"Thank you Suzy. You can sit down now. Now, where was I? Ah yes, ribbon meanings...\".\n\nBy the end of the morning, I knew all about the ribbon system, and why the Headmaster wears a white ribbon (doesn't like to receive a penis inside him, but he will insert into men and women), and why Mr Grander wears blue (he only has sex with women) and also the PE teacher (she only has sex with women).\n\nI had no idea if I wanted to wear a ribbon yet.\n\nAnd at the end of the morning, I also knew what it looked like to see each of my female classmates have vaginal sex. Over the three hour morning lesson, different male staff walked in, asked for a specific girl, then had sex with her, then and there in the classroom. Sometimes he moved her to the back of the room like the headmaster had done with Melissa. Others like the mathematics teacher (no ribbon) barely moved the girl, fucking her aggressively over her own school-desk.\n\nClass was dismissed at 1pm, and we were instructed to get lunch at the dining room, then to rest in our bedrooms (privately) until dinner. As much as I wanted to invite Jack (and possibly a few more boys) into my room, I knew I needed sleep. In-fact it was the dinner bell that woke me. I must have fallen asleep moments after my head hit the pillow.\n\nI still felt a little sleepy, but I was excited to find out what the evening would bring. Or, more specifically, who it would bring.\n\nDinner finished, and at 9pm we all waited in our usual classroom, excited and nervous for what would be coming next.\n\nInto the room walked four teachers. The deputy-head, the PE teacher, The maths teacher and one of the science teachers. He had a pink ribbon around his arm. That told me he only liked to have sex with other men.\n\n\"Everybody listen carefully,\" the deputy-head instructed. \"Ladies, you'll follow myself and Ms Hammond to the gymnasium. Gentlemen, you will follow Mr Sachs and Mr Goldsmith to the staffroom.\"\n\nI gave a quick wave to Jack and followed the other girls, single file down the corridors until we got to the school gymnasium. This was my first time back in the 'normal' school building. It was strange. It had only been a few days, but already the old rooms and corridor looked smaller somehow.\n\nWe were instructed to put the soft mats onto the floor until we made a large, soft island surrounded by the hardwood floor. While we did so, the 2 teachers checked and double-checked the doors were locked.\n\n\"Right!\" sounded off the PE teacher. \"Ladies. So far, you have all experienced sexual contact with the opposite sex. However, that is not the only type of physical pleasure available to you.\"\n\nThe Deputy-head walked up to the PE teacher, and without warning began to kiss the other woman. The Deputy's hands moved to the PE teacher's vagina, while the PE teacher began fondling the other woman's boobs. After a few moments, they broke up the kiss.\n\n\"OK ladies. Groups of 2. Leftover student makes a 3. Find some space on a mat together.\"\n\nI ended up in the three with Naomi and Emma. Emma, the smallest of our classroom, barely came to my chin.\n\nFrom now on, the PE teacher was in charge. The deputy-head was just there as her example dummy. We watched carefully as PE 'ate the woman's pussy', giving us instructions at all times about where fingers and tongues should go.\n\n\"Now, in your pairs and 3s. Three minutes, then swap over.\"\n\nI watched as the girls in my class, girls I had known almost all my life, began their first time touching another woman. Some took to it instantly, while others were hesitant or uninterested.\n\nI'll admit, at first I wasn't too fussed about the taste of pussy. Since there were 3 of us, I waited and let Naomi go first on Emma. Then the PE told us to swap, and I began to lick between Naomi's legs, the orange hair around it matching her long hair on top. It was nice to hear Naomi's sighs of pleasure, but it did little for me.\n\nThat was before we swapped for the second time, and I experienced Emma's tongue.\n\nThe men last night had licked my vagina a little. But after the first 'cream-pie', neither men went close to it with their mouths again. I guess they didn't want to eat another man's cum.\n\nBut this was completely different. A man's tongue is a hammer. Emma's tongue was a scalpel. It was a precision instrument, hitting me exactly where it would cause the most pleasure. It felt like only seconds before the teacher told us to change round, find a new partner, and try something called a '69'.\n\nFor some reason, Melissa seemed to seek me out, wanting to be my partner. I couldn't refuse without making a scene. Melissa, like half the other girls, laid on the floor. I climbed on top of her the opposite way, until my head was in her crotch, and my crotch was above hers. I put my head down, and all I could see what Melissa's wet pussy. And all I could feel was Melissa's tongue around my clit. It felt so good I began licking her clit harder and faster. She responded to my licking by licking me even more.\n\nOh god it felt amazing. The pleasure built and built until I finally lost it, orgasming to Melissa's playful tongue.\n\nAs the orgasm finally subsided, I moved my head up for just a moment to catch my breath and to check the room. The deputy-head was now with us students, licking at Naomi's wet pussy while the PE teacher Ms Hammond walked round the five couples, inspecting and generally approving of the acts she was watching.\n\n\"Now, if you see more women near you\" she instructed \"don't be afraid to change partners or join the couple. Lesbian sex is a dance, and you can have many partners.\"\n\nI have no idea how much time we spent on those sports mats in the middle of the indoor basketball court. Another couple came near to us, and I started playing with another girl's breasts, even as Melissa kept licking. Another pussy came close to me, and without thinking I moved from Melissa to this new woman. I felt shifting beneath me, and soon somebody (I don't know who) had two fingers inside my pussy, thrusting in and out as if they were a penis. And...it felt amazing. I grabbed the nearest vagina and replicated that, first with two fingers and then with three. And whoever's pussy I was inside moaned so loudly that PE had to tell her to keep it down.\n\nI was completely lost in the orgy. We kept it going for I don't know how long. My tongue had tasted at least four pussies, and god knows how many had touched mine. I couldn't tell you who I'd been licking -- I wasn't exactly looking at their faces.\n\nEventually, the Deputy-head told us all to release each other and stand by the doorway. Someone asked about putting away the soft mats, but Ms Hammond explained they would need to be cleaned first by the cleaning staff.\n\nOn the way back, we met up again with the boys as they were leaving the staffroom. I'd been in there only a few times. I knew it was full of couches for the teachers. The boys all came out of the room looking tired, and some of them looking a bit sheepish. And most were walking a little funny.\n\nI whispered to Jack \"How was it?\"\n\nAll he replied was \"I'm a blue-ribbon guy\".\n\nWe were lead back to our dormitory on the top floor and I settled into bed. Happy but exhausted. For the first time in days, I went to my evening sleep without first fucking or masturbating. I didn't even think about touching myself. I was that tired.\n\n-----------------------\n\nJACK\n\nI woke up, and realised it was Sunday. The rest day.\n\nNormally at the school, we studied for six days (with less on Saturday) and then Sunday was different. Sunday was the day that families came to visit. The whole school would be full of parents and older brothers and sisters. The ones who had already graduated. They would all be clothed, of course. We never had any clue that in the outside world, everyone is naked and constantly fucking each other.\n\nIt was also the day without studies. More computer games were available on the school tablets, sports equipment was available and movies would be put on in the cafeteria between meals.\n\nI was about to leave my room and look for breakfast, when I remembered something. I opened up a draw in the room and pulled out a blue ribbon. I tied it carefully around my left arm, close to the shoulder.\n\nI left my room, expecting to hear the standard locking noise behind me. Only I didn't. The room stayed unlocked.\n\nFor the first time in over fourteen years, my bedroom door was under my control. I started opening and shutting it, just to test it wasn't a computer malfunction.\n\n\"No, don't worry.\" A voice from along the corridor said. It was Mr Grander. \"You've got complete control of your bedrooms today.\"\n\nI walked closer to him, leaving my door ajar. He saw the blue ribbon, and gave a slight nod of approval. It wasn't that he disapproved of sex with other men. It was that he liked I had made a conscious decision regarding my sexuality, and a recognition that we both wore the blue.\n\n\"I'm just here to keep half-an-eye on things.\" He explained, as he saw my puzzled expression. Teachers didn't normally hang around in corridors. Especially on the rest day. \"Got to make sure you all don't go too crazy with your new freedom. Miss Picard was here too, but Fabio invited her into his room.\"\n\n\"What's going to happen today?\" I asked him.\n\n\"No lessons. It's a Sunday. You can't go and mingle with the other, younger students of course, but you are free to do what you want in this closed-off area. It's too small for sports, but I think there will be some movies in the canteen as usual. I've put out some boardgames too.\"\n\n\"Will the normal Sunday computer games be available? I'm almost at the end of Ghost Warrior Seven.\"\n\n\"Normally no\" he said, before giving a small smile. \"But I'll have a word with the IT guy. Check your computer in an hour or so.\"\n\nI turned away to go to the canteen, but Mr Grander wanted to say something more.\n\n\"You know, Jack, we are all very proud of you. The teachers I mean. You've had it harder than most of the other students, but you've really done well. We are really proud.\"\n\n\"Umm, thanks.\" I said, unsure of what to say to that.\n\nHe gave me another nod, and I took that as my cue to leave and get some breakfast. I was starving.\n\n----------\n\nSUZY\n\nI woke up to the sounds of children playing happily. My window was open a little, and as I glanced out, I saw all the younger children talking and playing with their families. My own family (at least my parents, and maybe my older siblings) would be down there today, spending time with my younger sis.\n\nAfter a quick shower I left my room, looking for breakfast. Mr Grander was in the hallway, looking bored.\n\n\"Good morning Mr Grander\" I said politely.\n\n\"Good morning Suzy\" he replied in his usual, friendly way. \"Did you sleep well?\"\n\nNot a mention of - 'Oh, by the way, thanks for letting me fuck you hard in front of the other students until I filled your pussy with my creamy cum'. I guess we weren't talking about that. Which was a shame, because I wanted to tell him that I had actually really enjoyed it.\n\n\"Yes, thank you.\" I replied in my usual sweet voice. \"I see it's family day. Will our families be coming up here?\"\n\nHe shook his head. \"No. We keep you all fully apart until after graduation. But you'll see them very soon. It's not long till you all finish and go out into the wide world. I expect your parents will be waiting for you on Wednesday, ready to take you home.\"\n\nI thought about that for a moment. I'd always known that after graduation, you went back to living with your family, just like you did when you were a very young child. But this was before I knew about how adult life worked.\n\n\"Um...can I ask a question sir? I know it's not a teaching day.\"\n\nHe shrugged his shoulders. \"Sure. What do you want to know?\"\n\n\"How does it work with our free-use world and families?\"\n\n\"We did go over this in class a couple of days ago, but I'll forgive you for forgetting. You have a lot of information to take in at the moment! Family is one of the exception categories on the free-use law. No family member (legal or biological) can compel another member into a sexual act. However, it doesn't forbid acts. It's up to each family. My own family are OK with sexual contact, as long as contraception is being used. I know other families that choose not to have any sexual contact with each other. It's up to you and your family.\"\n\nI stood there, thinking about it. When I go back home on Wednesday, would I want to have sex with my family? Would my family want to have sex with me?\n\nWould I want to have my father's dick inside me? Or my mother's pussy in my mouth? Would I share a bedroom and a bed with my older twin siblings? Would Benjamin and daddy take turns inside me, just like the two men had a couple of days ago? Would Mummy and Abigail take turns to lick my pussy...\n\nI could feel a wetness growing. I was getting turned on by the thought of my own family!\n\n\"Um, sir\" I said sweetly. \"Would you like to come in my room and fuck me?\"\n\nHis cock stirred at this suggestion. But his head shook. \"I need to stay here and keep an eye on the corridor, at least until Miss Picard gets back. How about a blowjob?\"\n\nI got to my knees, and prepared to put his cock into my mouth. The cock that had given me a good hard fucking less than twenty-four hours ago. He was fully hard within seconds, and my lips rolled over his shaft. My eyes looked up at his, and I began to suck.\n\n---------------------------------\n\nJACK\n\nI finished eating my breakfast and sat talking to a few of the girls. Dominica. Like me, had put on a blue ribbon. I wasn't surprised. When I saw her being fucked by the maths teacher, I could see she wasn't getting much enjoyment from his frantic, aggressive fucking. It did surprise me that little Emma had also put on a blue ribbon. She was really pretty, and she seemed to really enjoy man-and-woman sex. When I watched the German Language teacher putting his 'glied' into her 'scheide' yesterday, I felt a bit jealous.\n\n\"Well\" she said with a sexy smile when I told her. \"that's the nice thing about ribbons. They are easy to change. Right now, I only want girls. But you never know what ribbon I'll be wearing tomorrow. Or later this afternoon.\"\n\nWe all left the cafeteria together. Dominica was already getting very hands on with Emma, and they were going back to Dominica's bedroom. I was going to find Suzy, when I saw her.\n\nShe was on her knees, giving a blowjob to Mr Grander. And he was loving it. He had his hands on her head, helping her to suck and bob at the speed he liked. I couldn't see her face, only the back of her head. But I was pretty sure she was loving it as much as he was.\n\n\"Good girl Suzy\" said Emma quietly.\n\n\"Hey guys\" Melissa said, coming up to us. She didn't have any armbands. She was up for anything. \"What you doing?\"\n\n\"Nothing much\" said Dominica. \"Emma was going to come to my room. We're going to try that 69 again.\"\n\n\"Have fun\" Melissa smiled at the girls. Then she looked me straight in the eye. \"Jack, can I go to your room and sit on your cock?\"\n\n\"Umm..\"\n\n\"Come on Jack\" Emma said as I hesitated. \"It's a free-use world. And you've got a blue ribbon. You can't refuse.\"\n\nI thought about what she said. It was true. This was our new world.\n\n\"...OK.\"\n\nLeaving Dominica and Emma, we walked to my room. The door was still ajar as I had left it. I was going to close it, but Melissa pulled me away and onto the bed. Melissa laid on top of me, her breasts against my chest, sucking on my cock. Her pussy was basically forced onto my face, and I had little choice but to start to lick and nuzzle.\n\nDon't get me wrong -- it felt amazing. But she was the one in control of this situation, not me.\n\nAfter a couple of minutes, Melissa moved her body round, until she was over me. Just like Candy had done before, she raised herself up, then slowly lowered herself down onto my cock. Her pussy was much tighter than Candy's was. Part of me wanted to cum almost instantly, but I held it back, remembering Candy's advice to keep from cumming as long as possible.\n\nI watched Melissa as she bounced. Her boobs were smaller than most in our class, but this didn't make her unattractive. In some way she owned it. She made small boobs her look. The straight, shoulder-length black hair and her pointy nose making her somehow look sharp. She wasn't a woman, she was a weapon.\n\n\"Lets change\" she said. \"My legs are getting tired.\"\n\nShe climbed off me and knelt on all fours in front of me, offering her pussy to me from behind. 'Doggy style' I remember it being called.\n\nI moved behind her. I was at the pillow end of the bed, and looking out at the open door and the corridor beyond it.\n\n\"I should shut the door\" I said, going to get off the bed. But she grabbed me quickly with one hand.\n\n\"Why? We need to get used to fucking in public.\"\n\nI moved back to behind her, and pushed my cock into her from behind. I liked this position. I had a lot more control. I could put in a lot more power. I put my hands on her hips, and began to fuck that pussy hard.\n\n-----------------\n\nSUZY\n\nMr Grander's cock exploded into my mouth. His hands were on my head, forcing me into it. I had no choice but to drink the cock being fed me. But it tasted good to me, and I took it without problems. After his final quirt, I looked up at him, and I showed my mouth, letting him know I'd swallowed every drop.\n\n\"Thank you very much Suzy\" he said. \"That was very good. You're a natural.\"\n\nI smiled shyly.\n\nMiss Picard walked out of Fabio's room at that point, and the two teachers began chatting to each other. I could see small drops of cum leaking out of Miss Picard, but she either didn't seem to notice or care. Either way, they weren't paying attention to me, so I walked back along the corridor.\n\nI glanced in each room with an open door. Some were empty. I saw Rupert alone, masturbating to some gay porn. In another room I saw Dominica on her bed, legs spread wide with someone, maybe little Emma, eating out her pussy. Dominica was in a world of her own, and didn't seem to notice me staring at her from the open doorway.\n\nThen I got to Jack's room.\n\nOn the bed was Jack behind Melissa. Fucking her from behind, doggy style. Melissa had been looking down at the bed, concentrating on the feeling. But as soon as I was at the doorway, her eyes glanced up, and a mischievous look appeared on her face.",
        "The kind of look that says 'I know I'm fucking the guy you like. Deliberately.'\n\nJack noticed me, and that was the worst. Because he made eye contact with me at the exact moment he orgasmed. Cum shooting out of his cock and into Melissa's cunt, and all the time his eyes were looking at me.\n\nMelissa's half smile became a huge grin. Now it said 'I just took away what you really wanted. Not because I wanted it, but because YOU wanted it.'\n\nI practically ran away from the door before Jack could stop me.\n\nMy legs took me to the canteen, and I burst through the door so quickly it took the other student's attention from the film being shown. (A remake of the old Captain America film we'd seen years before, except this time everyone was naked and Steve Rogers occasionally fucked Bucky).\n\nThere were three of the girls and one guy (Philip). All were sitting at the front, closest to the film, and were playing with themselves (but not with each other). I knelt down on all fours in front of Phil and stuck my arse in the air.\n\n\"Fuck me\" I told him. \"Fuck me in the arse.\" I then looked at the girls. \"And somebody give me a pussy to lick.\"\n\nPhil moved faster than the women. He knelt behind me and put his already hard cock at my bum hole. He spat a little, but it was still painful as he inserted into me. But painful was what I wanted right now. I wanted painful, shameful, public sex. Thirty seconds later, and a small, moist pussy was placed in front of my face. I didn't even look up to see who owned it. I just put my head down and licked.\n\nHer taste was familiar, and I realised she must have been one of the girls I had been with last night.\n\nAnd that's when Jack walked in.\n\n-----------------------\n\nJACK\n\n\"Was that all just to annoy Suzy?\" I said angrily to Melissa. I had pulled out of her and tried to catch up with Suzy, but it was too late. She'd gone into one of the rooms.\n\n\"Not all of it. I did want your cock. You have the biggest of the class I think. But some, yeah.\"\n\nShe was just sitting on my bed, my cum dripping out of her. She wasn't even trying to catch it or stop it going onto my bedsheets.\n\n\"I get you have been rivals for years, but, god, seriously?\"\n\nIt was true. For as long as I can remember, Suzy and Melissa have been rivals. Always competing for first place in lessons, tests, sports etc. If one of them was given a new toy or new clothes by their parents on visiting day, you'd be sure that next week the other would get something just a little better from their parents.\n\nAnd it went both ways. Suzy could be just as much as a bitch to Melissa, as Melissa was to Suzy.\n\nShe scoffed. \"You think I did this because I'm in a competition with her? God, you are clueless.\"\n\nShe got up, cum still dripping slowly, and walked out the door without looking back.\n\nI used tissues to clean the remaining cum off myself, the bedsheets and the bedroom floor, before going to find Suzy.\n\nShe was in the canteen. Her arse was being fucked hard by Phil (while he kept watching the movie) and she had Lily's pussy in her face.\n\nI knelt closer to her. She seemed to know I was there, and got more passionate with the pussy to show how much she DIDN'T want to talk to me.\n\n\"Let's talk later\" I said to her, and left the room.\n\nI closed my bedroom door, I showered and played computer games, trying to ignore the many voices in my head.\n\n-----------\n\nSUZY\n\nI didn't find Jack until much later. The canteen sex finished when Jack left and Phil came inside me. I went back to my room for the second shower of the day. Jack didn't come to the canteen for lunch. I avoided the other students. I was told by Miss Picard that Fabio was looking for me, but I managed to avoid him. I just didn't want any more sex to complicate things.\n\nWho knew a world with free, unlimited sex could be so complicated!\n\nI stayed mainly in Dominica's room with her and Emma. I wasn't having sex with them, just hanging around watching them, or reading one of our textbooks. The good thing about hanging round with two girls wearing blue ribbons was that guys didn't even try going into the bedroom. At one point Naomi joined the couple on the bed to make a threesome, but otherwise it was just us.\n\nI finally found Jack again after evening dinner. He ate at a different table, but he gave a nod to me, showing he was ready to chat.\n\nI found Jack in his room. In the hallway, Miss Picard and Mr Grander had been replaced with the deputy-head and the maths teacher. Both chatted, looking a little bored. By Mr Sachs's shrivelled cock, he'd recently emptied his balls, probably into one of the students.\n\nI ignored the teachers and went into Jack's room, sitting quietly on his bed next to him.\n\n\"You know..\" he said, the first to start. \"..I didn't want to have sex with her. She asked me. And I couldn't refuse, because of the free-use thing.\"\n\n\"I realised\" I told him. \"Later on. I was just....annoyed...at the time.\"\n\n\"I looked for you, you know.\" He said. \"First thing in the morning. But you were giving Mr Grander a blow-job.\"\n\n\"Oh. I didn't know that.\"\n\n\"Well, I did.\"\n\nWe sat in the awkward silence.\n\n\"Why did you look for me?\" I asked. \"You wanted sex?\"\n\n\"Yes. No. Maybe.\"\n\nHe took a deep breath, closing his eyes and concentrating.\n\nThen he continued.\n\n\"I wanted to talk to my friend. Everything is so crazy. There are so many changes and revelations, and everything has gone so weird. And my childhood friends are now adults and all about sex, whereas last week we were all playing basketball and telling jokes together. You were all family to me. Especially you, Suzy.\"\n\nI blushed when he told me this.\n\n\"Last week you wanted to play chess with me and talk about the future. Now you just want to suck cock and fuck and I...I need my friend. I need to talk to her about things. About my worries and my happiness and everything we used to talk about together before.\"\n\nHe stopped talking, and we just sat in silence. And I realised how selfish I had been.\n\n\"I'm sorry Jack. I should have realised. And I should have thought about it more. You're worried about Wednesday.\"\n\nHe nodded.\n\nOn Wednesday, we would all be graduating. And my parents would be waiting for me. Waiting to take me home. So would everyone else's parents.\n\nEveryone, except Jack.\n\nHis parents had died in a car accident when he was just 5. He hadn't even been able to go to the funeral. He had no other family. He was an orphan.\n\nSo when he said we were his family, he really meant it. His classmates were is family in so many ways.\n\nI was worried about possible incest when I got home on Wednesday. He was already living it.\n\n\"Jack. I'm sure everything will be OK. We can ask the teachers about it tomorrow. Maybe they can speak to your old friends Adam, Darren and Ruth. Get them to meet you on Wednesday. Something like that.\"\n\nHe seemed to smile at that idea. They had been his best friends before I was.\n\n\"And we shouldn't let sex damage our friendship. You're going to stick your dick in places. I'm going to have dick stuck in places. Maybe I'll have your dick sometimes. Maybe I'll have someone else's. But we can't let us ruin our friendship. You mean more to me than that.\"\n\nHe was now smiling ear to ear. And I could see a semi-erection growing.\n\n\"Is there a ribbon I can wear..\" He asked in a jokey way, \"to mean I'll have sex with any girl but Melissa?\"\n\nI laughed, \"Sadly not. But even if you fuck her, I won't be upset. I'm past that now.\"\n\nI tried to twist the subject. I laid back on the bed.\n\n\"No secrets between us\" I told him. \"Deal?\"\n\n\"Deal\"\n\n\"Tell me about sex. So far. For you. Tell me what you've enjoyed, what you haven't. What's it like to have sex when you own a penis.\"\n\nHe laid back next to me. Two friends, relaxing on the bed together. Ignore the fact we were both naked, I was wet and Jack now had an erection. We were just friends hanging out together.\n\n\"I'll tell you my experiences, if you tell me yours\" he said playfully.\n\nAnd he did. He told me about fucking Candy and about our blowjobs and how he didn't enjoy having Mr Goldsmith's cock put inside his anus. Nor did he really enjoy putting his cock into Thomas (though he had cum inside the guy). He told me about fucking Melissa and how he felt when she was bouncing on top of him, and how different it felt to fuck her doggy style.\n\nAnd then it was my turn. I told him about how Sven and Alex had taken my virginity, and had used every one of my holes. How first they took turns at eating my pussy, and then had fucked it all night and how amazing that had felt. How I preferred the younger guy's cock, even though it was smaller, because the older man didn't hold back. He just came as soon as he wanted to. The younger guy was kinder. He wanted me to cum too.\n\nAnd I told him about the girls in the gymnasium, and how I liked being licked and licking at the many many pussies. I told him boobs were good, but pussies were my favourite. But that I didn't have a preference between boys and girls, cock or pussy.\n\nAnd at this point, we were both extremely horny.\n\n\"Stay in this room tonight?\" He said.\n\n\"OK\" I said. But then I got up and off the bed, walking towards the door.\n\n\"I thought you said you were staying here?\" He asked, puzzled.\n\n\"I want to get you something special.\" I told him.\n\nIn the corridor were still the two teachers. Mr Sachs got excited as I approached, but disappointed when I addressed Mrs Williams, the deputy-head.\n\n\"Mrs Williams, would you come to Jack's room?\"\n\n\"Is there a problem?\" She asked.\n\n\"No. It's just that I want a threesome with you and him.\"\n\n\"Oh, of course.\" she replied. \"It's a free use world.\"\n\n-------------------------\n\nJACK\n\n\"Mrs Williams?\" I said in confusion as the deputy-head walked in with Suzy. Suzy closed the door behind them. I was sitting on the edge of the bed, erect penis pointing at the ceiling.\n\n\"You can call me April\" the teacher said \"But only during sex.\"\n\nShe knelt in front of me and took my cock into her mouth before I could say a word.\n\nSuzy went behind me and whispered in my ear \"I can't wait to watch my friend having sex with our teacher\".\n\nI turned my head to kiss her, moving one hand to play with Suzy's large breasts. \"And I want to see my friend eating our teacher's pussy. And our teacher's tongue on my friend's little clit.\" I whispered back.\n\nI carefully took hold of one of the teacher's arms, and moved her up and away from my cock. She was too good, and I worried I would cum too quickly. I didn't want to cum in her mouth. Not yet at least.\n\n\"Get on the bed April\" I told her. It was strange to call a teacher by her first name, but it also felt so powerful.\n\nShe did so, lying down, arms and legs spread wide. I moved my head to her crotch, and began to lick at her pussy. She had a different taste to other girls I've licked, but it wasn't unpleasant. I tried to remember what Candy had told me two nights ago, and I made sure to lick and play with the teacher's clit.\n\nMeanwhile I watched Suzy slowly lower herself onto Mrs William's face. The teacher's tongue moved up to meet the student's young pussy. The teacher's arms moved to wrap around Suzy's legs, bringing the wet pussy even closer to her face.\n\nI listened as Suzy giggled and laughed as the teacher licked her, until laughing became a moan of pleasure. I looked up to see Suzy's whole body shake, and realised my friend was having an orgasm.\n\n\"Yes April, Yes April!\" my friend called out loudly.\n\nWe continued like this for I don't know how long. Maybe just minutes. Maybe it was half an hour. I don't know. I didn't care. It was amazing.\n\nEventually, Suzy climbed off April, and I released her too. This time the teacher seemed to take control. \"I want to see the two of you fuck\" she said.\n\nI tried not to overthink. To overthink now would ruin everything.\n\nI grabbed Suzy, and pulled her onto the bed. But not face up. Face down. I'd seen this position on one of the videos, and wanted to try it. I couldn't see her big breasts, but I also couldn't see my friend's face. Easier for me to treat her as just as sexual object. I put my hands between her legs first, spreading them more and feeling her pussy. Yep, still nice and wet.\n\nI climbed on top of her, and angled my cock into position. With one thrust of my hips I pushed my cock into Suzy's wet cunt.\n\nI was fucking my best friend. My penis was inside her vagina. I'd crossed the Rubicon.\n\n\"Oh god! Yes Jack, yes!\"\n\nSuzy's pussy was the best so far. I don't know how to rate them, but it's true. She was amazing. She felt so tight and squeezed my cock with her pussy like nothing else. Several times I had to stop thrusting and pause, to avoid cumming too soon. I knew I didn't have to, that I could cum whenever I wanted to. But there was another pussy in the room, waiting for my cock.\n\nMrs Williams was on the far corner of the large bed, one hand between her legs, playing with herself while watching us both. Her pussy looked so inviting, and she blew me a little kiss when she saw me looking at her.\n\nI pulled out of Suzy, and moved to the teacher. I didn't say a word. I just pulled her a little closer to the edge of the bed, then stood over her, pushing myself into her. Her on the bed, me standing beside it.\n\nThe differences between the two were night and day. April's cunt was nowhere near as tight as Suzy's, but this meant I could thrust without fear of orgasming too soon.\n\nWell, that would have been the case, if Suzy hadn't come up behind me. \"Cum inside her Jack\" she whispered to me. \"Fill our teacher's vagina with your sperm.\"\n\nI'd have to teach Suzy some new sex words. Her technical language was so out-of-place here.\n\n\"Yeah, April?\" I said loudly, so Suzy could hear me. \"You want me to fill your CUNT with my JIZZ?\"\n\n\"Oh yeah, big boy\" she replied, realising what I was doing. \"Fill my tight little PUSSY with your SPUNK. I want your CUM inside me. I want to feel your COCK as it shoots your CREAMY CUM deep into my GASH.\"\n\nI stopped holding back, and moments later my cum squirted into Mrs Williams' wet pussy. The teacher moaned loudly as I came, orgasming with me. Suzy's mouth met mine at that moment, and our tongues swirled around each other as the final drops of cum leaked out of my cock.\n\n-------------------------\n\nSUZY\n\nMrs Williams left the room, and I fell asleep cuddled up to Jack. It was great.\n\nIt was different to sex. Sex was primal. This was...personal. It was friendship and more. Having skin on skin contact, not because of sexual connection, but because you really care for the person. It's hard to describe how magical it is.\n\nWe slept all night together. When we woke in the morning, we had 'missionary' sex. We'd learned about the most common positions in our last lesson with Mr Grander. But I neither Jack nor I 'chose' missionary. We were just cuddling in bed, and cuddling became kissing, and kissing became fucking.\n\nJack orgasmed long before I could. But it didn't matter. That wasn't the point. The point was that we were having fun together.\n\nHe got up to shower, and I popped quickly to my own room to shower there. We met up again in the canteen and ate breakfast together. At one of the tables, Laura was crouched down below it, licking at little Emma's pussy. She was sitting next to Dominica, holding Emma's hand. It was so strange how sex and nudity had become so normal already.\n\nAt 9am we all entered the classroom for today's lessons. We had no idea what we would be expected to do.\n\nFour staff were waiting. The headmaster (white ribbon), Mr Grander (blue ribbon), Mr Goldsmith (pink ribbon) and Miss Picard (no ribbon). The nurse and her female assistant were also both there.\n\nThe headmaster was first to address us.\n\n\"Good morning students. I hope you all enjoyed your rest day. I've heard from many staff how well you are all progressing. We know the revelations revealed over this week can be overwhelming at times, and we are all impressed by how all of you are handling it.\"\n\nThe teachers gave a small, quick round of applause to us.\n\n\"On Wednesday\" he continued, \"your families will all be here to celebrate your graduation from school and into adult society. You will leave us then. Therefore today and tomorrow, we will be focusing more on getting you all ready for the outside world.\"\n\nMr Goldsmith was next to speak. He started by showing the back of his right hand.\n\n\"Do you see anything strange? Anything different to your own?\"\n\nWe all shook our heads.\n\n\"Implanted into every adult man and woman's right hand is a small computer chip, used to handle your money. It doesn't hurt, and it's almost impossible to see with the naked eye. You will all be implanted with your chips this morning.\"\n\n\"After that\" Miss Picard took over, \"We will be going into the outside world! Under close supervision, you'll be given a list of tasks to do outside of school, before returning here. Consider it a test run for normal, adult life.\"\n\nIt took around 45 minutes to get everyone's chip installed, and a reasonable amount of money installed on each. Someone asked about the money, and the nurse's assistant explained that everyone had the same amount, and it was provided by the government to help with the transition period.\n\n(As we were doing this, I saw the headmaster and Mr Grander saying something to Jack, but I couldn't hear exactly. Something about a visitor to see him tomorrow.)\n\nDuring this time, our feet were also sprayed with a special chemical \"To make it more comfortable to walk around barefoot\". And finally, we were advised to make sure we were wearing any ribbons we wanted for the outside world. About half the ladies (including myself) chose not to wear a ribbon. I was surprised to see Emma take her blue ribbon off (though Dominica kept hers on).\n\nIt was different for the men. Both Jack and Fabio were wearing blue ribbons, while Phillip had a white ribbon like the headmaster. Tom remained ribbon-free. Rupert was the only man to be wearing the pink.\n\n\"Groups of 3 or 4\" called the headmaster.\n\nI instantly gravitated towards Jack. Rupert also joined our group, as did Lily (no ribbon). I smiled for a moment, remembering her pussy in my mouth yesterday. Melissa didn't even try to join our group, instead joining Phil and Rachael as a 3.\n\nOur supervising teacher was Miss Picard. She would be joining and following our group of 4 all day. She put a small yellow band around her arm saying 'supervisor'. She also took her own small handbag with her.\n\nWe followed her out of the classroom, and to the canteen. We went behind the main student area, and to a closed fire-escape. \"This\" she said \"is the secret tunnel to freedom.\"\n\n\"This must be how you got all those naked adults into the school earlier\" said Rupert. \"I wondered\" he explained when we gave him a quizzical look.\n\nThe fire-escape led to a long staircase down, and then to a small tunnel. The tunnel continued for about 300 metres, before finally coming to a small elevator. And the elevator took us up to just outside the main school.\n\nFor the first time in 15 years, I was outside the school.\n\nAll around us, people walked around, naked except for bags and sometimes hats. Some were going in shops. Others were talking and drinking coffee. Others seemed to be carrying briefcases and walking in a hurried focus. A few meters away, we could see another group of students with the headmaster.\n\nThe roads themselves had a few cars, but a lot more bicycles. The world was trying to be as green as possible, and bicycles were one of the most environmentally friendly forms of transport ever invented. For every car we saw, we saw ten bicycles. Ridden by naked people, of course. Most of them didn't even wear helmets on their heads.\n\n\"OK students\" said Miss Picard, when we had finally stopped gazing at the world around us. \"What's first on the list?\"",
        "Jack handed me the piece of paper and I read it out loud. \"Go on the number 12 bus until Churchill street (seven stops).\"\n\nWe waited for ten minutes until the bus arrived. The other school groups all walked in different directions. I guess they wanted to make sure we didn't bump into each other too much during the excursion.\n\nWe got onto the bus, and the teacher showed us how to scan our hands to pay for the tickets. The bus driver gave her a careful nod as when he saw her supervisor band on her arm.\n\nThe bus was already semi-full. Some business men were talking in the back. A young lady with a pushchair was nearer the front. An older man (70ish) was sitting close to us, as well as a few more men and women staring at their tablet computers. Nearby a young lady (about 23) was bouncing up and down on the crotch of a man in his early sixties. She smiled at me when she saw me looking.\n\nThe older man near us said something to Rupert, and our classmate nodded. He knelt in front of thee man and began to give him a blowjob.\n\nLily nudged me, and pointed to the two businessmen at the back. They were waving at us.\n\n\"Go ahead\" said Miss Picard with a smile. \"We've got a few minutes. I'll count the stops so we don't miss it.\"\n\nLily and I walked up the bus aisle to the businessmen on the back row. They both were in their early 50s with greying beards and similar sized erections.\n\n\"Hello ladies\" one said. \"Where are you getting off?\"\n\n\"Churchill Street.\"\n\n\"Us too\" they said. \"We will make sure we finish by Nelson Way.\" And that was it. They smiled and waited, looking back and forth between their crotches and ours. It took me a second, then I realised what they wanted. No, what they expected. Then I smiled.\n\nI wasn't feeling very wet, so I put spat on my hand and moved the liquid to my pussy. Then I put my back to the first man (Lily took the second) and slowly lowered myself down onto his crotch. He held his cock in his hand and helped guide it inside me. And that was it. I was riding the bus, sitting on the cock of a complete stranger.\n\nI watched the bus as I bounced up and down on the man, feeling his warm cock inside me. The woman I saw earlier got off the bus, though her sexual partner was still riding the bus. Another man got onto the bus, and walked towards Miss Picard. I saw her point to her 'supervisor' band, and he shrugged his shoulders. Instead he walked to the woman beside her pushchair. The woman quickly checked her baby was sleeping, then bent over and let the man take her pussy from behind.\n\nLily seemed to be having a lot of fun with the man next to me. Sure, my man had an OK sized penis, but he wasn't putting much effort in, letting me (and the occasional bump from the bus) do all the work. However he kept telling me how good a job I was doing. \"Oh yeah baby. You've got such a tight snatch. Keep going baby. Oh god you're so tight.\"\n\nJust before the next bus-stop, I felt the man's cock twitch and then fill my insides with his cum. I waited politely on him until he was quite finished, before I climbed off and walked back to Miss Picard and Jack. I had to walk carefully around the man fucking the young mum. Lily took another 2 stops until her man had finished. Miss Picard offered me some tissues from her handbag, which I gratefully accepted. I could see it was normal, but I didn't like the idea of walking around letting cum just drizzle out of me and onto the floor.\n\nRupert's gentleman finished in his mouth, and he too was offered tissues, though he politely declined.\n\nMost of the bus got off at Churchill street. The businessmen were polite, thanking Lily and I as we all got off.\n\n\"What's next on the list?\"\n\n\"Go to the bag shop and each purchase a bag you like.\" I read to everyone.\n\nAs we walked towards a big shop for bags, Miss Picard explained further. \"Without clothes, bags are the main way to show your fashion style. They are also useful, as you can use them to carry things you buy, as well as other useful items such as tissues. Some women carry vibrators and even strap-ons.\"\n\n\"Strap-ons?\" Asked Lily. She'd obviously not seen some of the full pornography videos I had.\n\n\"A woman puts it on\" I explained before the teacher could \"and it gives her a fake penis. So she can fuck like a man.\"\n\nLily's eyes widened at that idea. \"I'm not sure I'd like that.\"\n\n\"Which part?\" Asked Jack curiously. \"Having a fake penis, or having sex with a woman wearing a penis.\"\n\n\"Um...both?\"\n\n\"Not every woman likes strap-ons. Giving or receiving.\" the teacher said. \"But that's OK. I don't really enjoy it myself. I prefer the real thing. Anyway, we're here.\"\n\nWe walked around the bag shop looking carefully. We wanted to get some advice from a shop assistant, but the only one we found was being fucked in both her mouth and arsehole by two guys who might have been brothers.\n\nEventually I found a medium sized black handbag I liked. It looked practical, but also a little feminine. Jack went for a large blue messenger bag. Lily had a very small, green handbag while Rupert went for something that clipped around his waist if he wanted. We paid, then left the shop.\n\n\"What does it say next?\" asked the teacher when we were outside.\n\nI passed the paper to Lily for a change. \"Go to the nearby shopping centre. Spend at least one hour here, before meeting for lunch on the 4th floor of the shopping centre. You may buy some small items if you wish, but make sure you keep at least 30 pounds for your lunch and transport back to school.\"\n\nOnce we arrived at the shopping centre, Miss Picard gave us some rules. \"OK. I'm going to wait here on the bottom floor. Don't go out of the building. Remember to save some of your money. And don't go on the 5th floor.\"\n\n\"What's on the 5th floor\" Asked Rupert.\n\nThe teacher was about to explain, but changed her mind. \"I'll just show you. Come on.\"\n\nWe all got in a nearby elevator and rode it to the 5th floor.\n\nIt was full of small shops, like the other floors. But the shops only had pictures of naked people, and a list of things beside the names. Each with a different price. In the background, behind the timid, gentle music of the shopping centre was the sounds of skin on skin, sexual moans and the occasional whipping noise.\n\n\"This is the brothel level.\" The teacher explained. \"That just means that these people sell sex. It's all government regulated and controlled, and you need a special license to work here.\"\n\n\"Why would anyone buy or sell sex in a free-use society?\" Rupert asked.\n\n\"Because some people have specific likes or fantasies. We call these 'fetishes'. For example they really like feet, or want to be whipped and tied up. Maybe they fantasise about having sex with clothes on. In the outside world, this isn't possible. But here it is, for the right price.\"\n\nThe teacher pointed to another area. \"There are also rooms available to rent with some extra equipment if you want to experience more hardcore sex with someone. Search for BDSM on the 'Full pornography' section of the computer when we get back.\"\n\nShe took a big breath and guided all of us back to the elevator. And back to the ground floor.\n\n\"OK. So, meet me here at 1pm. There are clocks all around if you need.\"\n\nThe four of us walked around the shopping centre for a while. I mainly wanted to stay with Jack, and the others just seemed to want to stay with us. Lots of the shops didn't have much interest for us. Selling items for your home or sports equipment. Things we wouldn't need until after we'd graduated. But there was one shop on the 2nd floor that grabbed all of our attention. It had a big sign on it, and was clearly the busiest shop in the place. It was called \"Barbie and Keith's Sex Toys\".\n\nA woman at the door greeted us. She was tall and thin, with long straight blonde hair, medium sized boobs and a pink ribbon around her arm. She saw our eyes full of wonder. \"Hi Guys! I'm Barbie. Let me guess, first time out of school?\"\n\n\"How did you guess?\" Jack asked.\n\n\"Because only new guys like you would get a boner from just looking at a sex-shop.\"\n\nJack looked down. It was true. He had an erection quickly growing. Rupert too.\n\n\"Well\" she continued \"Why don't I give you all a tour of the shop, and then if you still need I can help you with that.\"\n\nShe took us round the large shop, pointing out the different areas. There were rows upon rows of fake penises called dildos, made of different materials such as wood, glass and the usual plastic. Barbie gave us all small shopping bags, and I saw Lily put a sleek glass dildo into her shopping basket.\n\nWe got to another area (whips, chains and other BDSM items) and she let us look for a while. At one point I saw her reach to Jack's cock and give him a quick shake, keeping his cock hard. He didn't seem to mind. But none of us seemed very interested in these products.\n\nAnother aisle had fake vaginas and anuses. Some came in tubes, others attached to fake hips and even full bodies. She showed one to Rupert -- an arsehole in a tube. \"Very popular for men who wear the pink\" she told him. She grabbed a 'trial use only' one off the shelf and passed it too him. He pushed his erect cock into it and began to masturbate with it furiously.\n\n\"This is called a Fleshlight. Though if it's more for the gay man, it's usually called a Fleshjack. This particular model is self cleaning\" she explained. \"So you just empty the tube at the end every few days.\"\n\nWe left Rupert to himself in that aisle, as he wanted to try several more of the fake arseholes.\n\n\"What about you two?\" Barbie asked Jack and myself. \"Anything particular you're looking for?\"\n\nI told her what I was thinking about, and she gave me an agreeing nod. \"OK. Follow me.\"\n\nWe walked 2 more aisle along until we found what I was looking for. The strap-on aisle.\n\nBarbie grabbed something from the end of the aisle, and I thought it was something she wanted to show me. But it was Jack she wanted. And the item was just a fold up stool. She unfolded the stool next to him and sat on it. Then she spread her legs wide, showing a completely bald pussy to Jack. Without hesitation, he took his hard cock and pushed it into the woman.\n\n\"Just let me know if you need any help\" she told me as Jack began to thrust frantically into her.\n\nI found several strap-on sets that caught my eye. One thing I hadn't realised was that many of these sets had 2 dildos. One big one, and a second, smaller one for the user.\n\n\"That one's on special offer\" Barbie called to me at one point.\n\nLily joined me looking at each of the many many choices. \"This one vibrates!\" she said with excitement.\n\n\"MAY I HELP YOU LADIES?\" A man's voice boomed from behind us! We turned quickly to see a large guy with a big bushy beard. His cock, hidden behind a bush of curly brown hair, was enormous. Bigger than any I've seen so far.\n\n\"It's OK dear\" Barbie called out from under Jack (who had now taken her off the stool and was fucking her on the floor). \"I'm keeping an eye on them.\"\n\nShe then seemed to mouth silently to him \"first timers\".\n\nThe large man went down to where Jack and Barbie were, Jack pausing his thrust, unsure about the situation.\n\n\"ARE YOU ENJOYING MY WIFE'S PUSSY??\"\n\n\"Don't tease him Keith!\" Barbie said rebuking him \"Or he'll go all floppy on me.\"\n\n\"SORRY DEAR.\" The big man smiled. \"HOW ABOUT THIS BOY. IF YOU MAKE HER CUM, I'LL GIVE YOU ALL A 10% DISCOUNT. AND A COUPLE OF FREEBIES TOO\"\n\nThe big guy walked away as Jack doubled his thrusting speed. Lily went to Jack's ear and started whispering advice to him, motivating and encouraging him. She clearly wanted that discount!\n\n\"OH GOD YES!\" Barbie suddenly cried out as both her and Jack reached climax. Lily kissed his forehead as he shot his seed into the blonde woman. Jack had earned the 10% off.\n\nFifteen minutes later and we were all paying at the till. I had chosen a strap-on. Lily had her glass dildo and Rupert had the fleshjack. Jack was the only one not to buy anything. I guess he had been to busy with Barbie to browse. Keith still gave him the same freebies he gave us ( easy to carry lube and something he said were called condoms. Apparently they catch the cum during sex, for easier clean up at the cost of some feeling).\n\nBoth Barbie and Keith thanked us as we left, and told us to come again soon.\n\n---------\n\nJACK\n\nWe found Miss Picard where she said she'd be on the ground floor. She was sitting alone on the bench, which slightly surprised me. As a nice looking younger teacher, I'd imagined that we'd find her with at least one man or woman giving her attention.\n\n\"OK class\" she said. \"Let's go to the food court on the 4th floor. And lets walk to the elevator slowly please?\"\n\n\"Why miss?\" asked Lily.\n\n\"Because I just received anal sex\" she told us matter-of-factly \"about five minutes ago, and I'm still a little sore.\"\n\nI remembered for a moment my own uncomfortable experience with receiving anal, and was happy to walk slowly for Miss Picard. I understood that some people liked it, but it wasn't for me.\n\nThe food court on the 4th floor amazed me. It was like the school canteen, but with many, many places and types of food to choose from. None of us cared about sex at that point (though it was happening a little around us). We were here for the food. For the first time in about 15 years, I could choose what food I wanted. In the end I went for a large portion of lasagna (something we only got about 2 or 3 times a year at the school) with dessert of something called 'tiramisu'. I'd never had it before, but it was amazing.\n\n\"What's next on the list?\" Asked Miss Picard.\n\n\"Go to the park. Drink a cocktail in the park, then read the next instruction.\"\n\nIt didn't take long to get to the park. Miss Picard's walking speed was back to normal after her lunchtime break, and ten minutes later we were in the open air.\n\nIt was a large park with many flowers and plants. Along the walkways there were benches to stop and rest at. And yes, occasionally fuck on.\n\nI couldn't help but admire the diversity of sex I'd seen since we first left the school. Age was less of a factor than I expected, though younger women clearly got asked for sex a lot more than older women. But women could ask for sex too, and I occasionally saw older women getting fucked hard by much younger men. Mainly however, people stayed within about a ten year gap.\n\nSkin colour and origin didn't matter either. I saw a small women from China or Japan being fucked missionary on the grass by a larger black man. Near to that, 2 smaller, Hispanic men were stood side by side, as a white woman in her 40s took turns giving them each blowjobs.\n\nThere was a bar at the centre of the local park. It was mainly empty, apart from one or two people. Miss Picard was first to speak to the barman ( tattooed guy in his early 30s).\n\n\"Afternoon Dave. I've got 4 noobies here. Something light but tasty.\"\n\nThe barman looked us all up and down, and seemed somehow disappointed.\n\n\"OK. I'll do 4 Long Islands, half strength. And you? The usual?\"\n\nTeacher nodded, and guided us to a table. A couple of minutes later and 5 drinks arrived. The teacher had a blue coloured drink while we had brown ones. It tasted strange but good.\n\n\"That\" our teacher explained \"is alcohol. It will confuse your brain but in a good way. But it can damage your health if you drink it too much.\" She then proceeded go give a lecture to us about the pros and cons of alcohol, while we sat drinking our brown drink. But it was amazing. I felt slightly light headed after, like I was tired but not.\n\n\"Any questions?\" the teacher asked when she finished her explanations of alcohol, and we'd all finished our drinks. \"then if not, please read the next instruction.\"\n\nI was passed the paper to read.\n\n\"Have sex with a stranger in the park.\"\n\nMiss Picard waved us all away. \"Off you go. And don't stay all together. Be brave and have fun!\"\n\nWe all agreed to walk around the park separately. We then started walking away in different directions. That didn't mean I didn't see some of the others. I saw Rupert very early on. He approached a large, muscular man who seemed to be doing exercises in the park. The man had a white ribbon on. Thirty seconds of conversation later, and Rupert was kneeling on all fours, and the big man was pushing his cock inside the 18 year-old's rectum.\n\nI kept walking around looking for a woman I wanted to approach. It was harder than I expected. Many of the women looked busy, or were already busy with other guys/girls. I approached one particularly beautiful woman, but she just sighed and pointed at her ribbon. It was black. No sex available. I apologised for the mistake and kept walking.\n\nLily was next for me to see. She was laying on a park bench, with another, slightly larger woman laying on top of her. Their 69 made me stop and stare, and I was getting an erection from watching my classmate.\n\n\"Looks good, doesn't it\" a voice said to me from behind. I turned round, and at first I couldn't see anyone. But then I looked lower. It was a young lady, maybe three years older than me. And she was in an electric wheelchair. She clearly had some sort of physical disability. Her legs and arms were almost pencil thin. But her face was completely normal. Attractive even.\n\n\"Um...yeah. She's my classmate, um...the underneath one. I'm, errrr, we errrr, are meant to find someone to have sex with. A stranger, I mean.\"\n\n\"Well we can have sex\" the girl in the wheelchair said. \"If you'd like.\" I glanced at her arms again. I'd expected a black ribbon, but I was wrong. She didn't have any ribbon. It was good to know disabled people could enjoy the free-use world too.\n\n\"OK!\" I said, happy to have found someone. \"But will the chair be a problem? And will it be OK..I mean I don't want to hurt you.\"\n\n\"Oh no. I've got stuff at my apartment to help us. I'll drive us there. And my partner can join in too if we need. She wears the pink, but doesn't mind helping me in a threesome.\"\n\n\"Oh. Can we not do it here?\" I asked. \"I need to stay in the park.\"\n\nShe shook her head. \"Sorry, I really wish we could. I understand. Good luck finding someone.\"\n\nShe started wheeling her chair away, but then reversed back, giving me a small piece of paper. \"My details. Give me a ring after you've graduated and we can have that threesome if you want. Or just a drink and chat. I know how hard it can be at first after graduation.\"\n\nI thanked her, and promised I'd contact her. It was only when she had completely left my view that I thought to check her details and find out her name (Tabitha).\n\nMy big break came another 5 minutes later. I spotted a girl in her late 20s running in the park, getting some exercise. She stopped near me and grabbed a rest and drink from a bag she'd left in a tree. She had small boobs but an attractive, athletic body.\n\n\"Hi, um...sorry, I'm new at this. Can we have sex?\"\n\nShe looked at me and gave me a smile. \"Sure. Especially for that dick. But can you be quick? I don't want to stop my training session\".\n\nShe put her hands on the tree and stuck her bum out slightly, her legs a little apart. One hand moved to her mouth, and a tiny bit of spit was brought to her pussy.\n\nI took my dick and gave it a quick rub, but didn't really need to. It was already hard. I went up behind her and slotted myself into her wet pussy. I put my hands on her hips, and started to thrust.\n\n\"You've got a good dick\" she told me as I fucked her. \"Nice and long. Anyway, as I said, just cum when you are ready.\"\n\nI didn't hold back, and two minutes later, my cum was inside her.\n\n(It was amazing to think how far I had improved since my first time with Candy. I hadn't lasted twenty seconds. Now two minutes was my minimum time.)\n\nShe said it was \"nice to meet you\", used a tissue from her bag to clean up my cum, and then went back to her jogging.",
        "\"There you are!\" said Lily as I began walking back. \"We've been looking for you. It's time to go.\"\n\nThe others were at the cocktail bar waiting for me. It seemed I was the last one to finish. Suzy gave me a big smile. \"A guy\" she said, before I could ask. \"From Russia or Ukraine or somewhere like that.\"\n\nMiss Picard guided us back to the nearest bus stop. Five (sex free, the bus was almost empty) stops later we arrived back at school and the teacher guided us back into the school's secret tunnel entrance.\n\nOur first taste of freedom was finished.\n\n-----------------------------------------------------\n\nDinner in the canteen was great. Everyone had had the same or similar instructions to us. So we all put our tables together and the 14 of us took turns describing their experiences out in the wild world. The teachers who had supervised us joined us too (except for the headmaster), and they explained anything we didn't fully understand.\n\nFor example, buses were infamous for quick sex. Only two of us (Myself and Dominica) hadn't had sexual contact on at least one of the bus journeys.\n\nI enjoyed hearing each story, and the different ways the different people told it.\n\nSome told it very quickly.\n\n(\"Yeah, I saw these two hot guys. I asked them to fuck me. They bent me over the bench and one fucked my pussy while the other fucked my face. The end\")\n\nOthers took their time, giving each detail or describing tastes, smells, emotions etc.\n\n(\"The musky scent of her pussy overwhelmed me for a moment, as her lips gently began to lick and lap at my own labia. Her light brown skin tones becoming darker on her most private places. My tongue rose....\")\n\nOne thing was clear. We had all had a good time. And we'd learned about the free-use world.\n\nOne full day left to go, and then we would be graduating. The day we had today would become our new normal.\n\nWe started getting ready for bed, and my classmates started to couple up.\n\nTo my slight surprise, Tom went to bed with Rupert, the two of them clearly planning to spend some of the night together.\n\nSuzy was holding Naomi's hand as she wished me a goodnight. I asked if she was going to use her purchase, but she shushed me and told me that was a surprise for later. The two of them left giggling together.\n\nMelissa grabbed Fabio and practically pulled him out of the canteen and to her bedroom.\n\nWithin the next ten minutes, almost everyone had paired off and left the room.\n\nRebecca, Amy (with the squinty eye) and Phil were giggling together, talking about which sex positions they wanted to try first as a threesome. Amy asked if I wanted to join them, but I politely declined.\n\nSure, the idea of taking turns with the girls, swapping over every few minutes seemed fun, and something I'd like to do in the future. But the weight of Wednesday was starting to grow on me again.\n\nI went to bed and got a full night of sleep. Not quite as fun as orgasming deep inside a beautiful woman, but still pleasant and enjoyable.\n\n----------------------------\n\nSUZY\n\nI woke up Naomi with a kiss. The kiss turned into a cuddle, and the cuddle lead to both of us fingering the other until we reached ecstasy. Guys were great at sex, don't get me wrong. And if I've only got 10 minutes I want a guy's cock pounding hard into me. But sex with a girl meant a lot more orgasms for me and her, as long as we had the time to commit to it.\n\nWe were almost late for our class, and Naomi and I had to beg the canteen staff to give us something to eat quickly, or else we'd be waiting until lunch. Luckily they were kind, and we both got some bread rolls with cheese and a quick cup of coffee.\n\nI took a desk near to Jack and put my bag down beside me. The teacher (pink-ribboned Mr Goldsmith) talked about jobs and studies in the real world. I already knew what I would be doing, as did Jack. I'd be training at a university to become an architect. I'd chosen this years before we had had this week of revelation.\n\nAs for Jack, he'd always wanted to pursue a career with bicycles. Since they were most common form of private transport, that was a pretty good career path to aim for. He sometimes used to talk about opening a high-end bike shop, and even designing his own bicycles for wealthy, famous clients. I doubt he imagined his wealthy clients would be naked!\n\nI was getting bored, and I could see Jack was too.\n\n\"pssts...\" I whispered quietly to get his attention, \"...who did you sleep with last night? Rebecca?\"\n\n\"..nobody\" he whispered back. \"I was tired, so just went to bed.\"\n\n\"really? You didn't fuck anyone??\"\n\n\"no\"\n\nI had a great idea. It was like chess in my head, the pieces falling in order. One last chance to beat Melissa. My school rival for over ten years. We'd finish the school with me on top.\n\n\"..do you want to fuck now?\" I whispered to him. This time he just nodded silently.\n\nI put my hand up.\n\n\"Yes, Susanna? You have a question?\"\n\n\"Yes sir. Um...can we have sex in here? I mean us students.\"\n\nHe looked unsurprised, like he had been expecting that question for a while.\n\n\"You may, as long as you don't disturb my lesson too much.\"\n\nCheckmate in 3.\n\nI bent over my desk and exposed my pussy to almost everyone else in the room, including Melissa on the back row. But that was only for a couple of seconds, as Jack moved behind me, and pushed his large cock inside me. My large breasts bounced forwards slightly at his first full thrust.\n\nJack's cock was still the biggest of the class. He filled me up so it felt I might split, but in the best possible way. We both didn't moan or grunt. We just made the sound of skin slapping skin for about eight minutes until Jack finally put his cum inside me. I put some tissues around my vagina to catch the cum, and both Jack and I sat back down again. I glanced back behind me to Melissa and gave her a smirk. The kind of cruel smile that just says one thing. \"Top that.\"\n\nCheckmate in 2.\n\nSomething I hadn't expected happened about ten minutes later. The headmaster came in with woman looking in her early thirties. She was slightly smaller, and ever-so-slightly overweight. In one hand was a briefcase and the other arm had a black ribbon.\n\n\"Jack Webb? Can you come with us please?\"\n\nMy best friend gave me a puzzled look, and walked out with the headmaster and the stranger.\n\n-------------------\n\nJACK\n\n\"You can use his bedroom to begin with.\" The headmaster told the woman. I showed her the room, and we both went inside. The headmaster didn't come in. Instead he closed the room behind us. I was alone with the stranger.\n\n\"Hello Jack\" she said in a friendly voice. \"My name is Stacy Harrison. Why do you think we are meeting today?\"\n\nI looked once again at her arm, and the black ribbon on it. \"Well, you are wearing the black, so it's not about sex. I guess it's about graduation tomorrow, because I'm an orphan?\"\n\nShe smiled. \"Right about everything. Many occupations, including lawyers, wear the black while working. And I'm here because we need to discuss your future.\"\n\n\"You are a lawyer?\" I asked.\n\n\"I'm your lawyer.\" She said with a smile. \"My company was appointed to oversee you and your assets after your parents passed away. And I've been appointed to you by my company. I'm here to answer any questions you have, and help you transition to adult life.\"\n\n\"What will happen to me on Wednesday?\"\n\n\"Tomorrow? You'll graduate in front of all your friends.\" Her voice was calming and gentle.\n\n\"But...after that. When they all leave with their parents. Back to their homes. What will happen to me?\"\n\n\"That depends on what you want to happen\" she said. \"What do you know about your parents?\"\n\n\"They died when I was 5.\"\n\n\"And I'm sorry for your loss. I mean, do you know what they did for a living?\"\n\nI shook my head. All these years, and I'd never even thought about it!\n\n\"Well\" she continued. \"They were not short of money. They had been investors. Your grandfather had made a lot of money from something called crypto-currency. This was decades and decades ago. And your parents continued the family business, though they changed investments into less volatile markets. But that's not important right now. What it DOES mean, is that your parents had a sizeable amount of money in their bank before they died. And tomorrow....it goes to you.\"\n\n\"I still don't quite understand.\"\n\n\"It's OK. It's a lot to take in. How about we go for a little journey. I've got a couple of places I'd like to show you.\n\n------------------\n\nSUZY\n\nLunchtime, and Jack was still not back. I looked in his room but it was empty. Wherever he was with that woman, he was not in school any more.\n\nIn the canteen, I saw Melissa whispering to the three remaining guys (who liked women). My plan was working perfectly. I ate my lunch quickly and left the canteen. I didn't want Melissa to start anything there. It had to be in the classroom.\n\n------------\n\nJACK\n\nWe left the school via the secret exit in the cafeteria and were out on the street. The woman guided me to a nearby bus stop and we waited for a couple of minutes before one arrived. While we waited, I asked her about where we were going, but she said it was a surprise.\n\nWe got on the bus, and instantly my eyes moved to one of the passengers. She was gorgeous. Like one of the movie stars I used to watch on family days, when I'd sit in the canteen all day watching films. She was standing in the middle area, no ribbons on her arm.\n\nStacy saw me, and gave me a slight nudge.\n\n\"I'm wearing the black, not you. We've got time.\"\n\nI hesitantly walked up to her. \"Um, hi.\"\n\n\"Hi!\" she said with a smile. \"I saw you looking at me. Do you want a blowjob or a quick fuck. Only my cunt please. I don't really enjoy anal unless I'm given time to prepare.\"\n\n\"Um, a fuck?\"\n\n\"Sure honey. Sit down over there.\"\n\nI sat on one of the nearby empty seats. A slightly older woman was next to me, doing some knitting. She seemed to be knitting a pair of panties. And then the gorgeous woman was there. Like other times I'd seen bus sex, the woman turned away from me, then slowly sat down on my crotch, sliding herself backwards onto my erect cock. Her pussy squeezed me in an amazing way. I reached my hands round her and played with her breasts as we fucked.\n\nI looked over to the older woman. She didn't seem to mind our fucking at all. In fact, she had stopped her knitting, and was rotating one finger slowly around her clit while watching us. I didn't know quite what to make of that, but I took it as a compliment.\n\n\"What do you do?\" I said to the gorgeous woman as we fucked, unsure of correct free-use protocol.\n\n\"I'm a barista.\" she replied. \"Thanks for asking. You?\"\n\n\"I'm still a student.\" I admitted. \"I graduate tomorrow.\"\n\n\"Congratulations! Come and visit our coffee place on Portobello Avenue when you have. My friend Silvia would love to ride your big cock.\"\n\nStacy walked over to us. \"Jack, we've got to get off in 2 stops.\"\n\nThe sexy woman jumped off my cock and knelt down on the floor of the bus. She took my cock into her mouth and gave me the best blowjob I'd had so far.\n\n\"Oh god, you're amazing at that\" I said quietly to her.\n\nI think she said thanks, but without taking my cock out of her mouth. So it sounded more like \"hhass\". Twenty seconds later, and my cock erupted into her mouth. She didn't stop sucking as I did so. She kept going until every single drop was out of my cock, then she slowly got up again. She smiled as she swallowed my cum.\n\n\"Not a bad taste too\" she said with a smile. I got up, and she took my place next to the old lady. \"Don't forget, Roma Coffee House on Portobello Avenue. We will be waiting for you.\"\n\n\"Are you sure you're still a student\" asked Stacy as we got off the bus. \"Most students don't manage thirty seconds before cumming. Especially with a woman like that. Don't worry, I'm just playing with you. We're here.\"\n\nWe were outside a large apartment building. We walked in to see a man waiting behind the reception desk.\n\n\"Hi John\" she said to him, walking towards the lift.\n\n\"Good afternoon Miss Harrison. Is this young master Webb?\"\n\n\"Yes it is. Jack, meet John. He's one of the concierge team here. He'll help you with anything you need.\"\n\nWe got into the elevator. Stacy pressed the button for the top floor.\n\nThe doors opened to a small entranceway. It only had one door. She passed me a key. \"Go ahead.\"\n\nI inserted the key and slowly turned the lock. The door swung open to reveal a large room. No, not a room. A whole apartment. With modern furniture and plain white walls, with tasteful but sexual artwork on the walls.\n\n\"Welcome back home.\" Stacy said with a smile.\n\n-----------------------------------------\n\nSUZY\n\nOur final teaching period of the day. Of the school year. Mr Grander was taking it. The topic 'solving problems and grievances in a free-use society'. All about what to do if there was a crime, or if someone didn't respect your ribbon and insisted on something you didn't want to do. That sort of thing.\n\nIt didn't take two minutes before Melissa put her hand up to ask a question.\n\n\"Sir, what's 'running a train?\"\n\nCheckmate in one.\n\n\"We talked about it yesterday Melissa. It's when a woman (or rarely a man wearing the pink) has sex with many people (usually men), one after the other, rather than at the same time. As soon as one man finishes, the next takes over. Quite popular at bars and holiday resorts.\"\n\nShe pushed her arse into the air, just like I had done for Jack.\n\n\"I'd like to run a train sir. As it's our last day. You can start if you want to.\"\n\nMr Grander's cock wasn't hard, so he walked over from the front of the class to her at the back. All our eyes were on Melissa as he offered his cock to her mouth. She took it with a smile, getting our teacher hard. But she wasn't looking at him. Her eyes were only on me.\n\nAs soon as he was hard enough, he moved behind her, and pushed himself deep into her pussy. She moaned as he began to thrust. And Mr Grander continued to teach, just like he had before when he'd fucked me in front of the class.\n\n\"Common punishments for breaking the law (on top of being placed in prison) include...\"\n\nMelissa began moaning so loudly from his fucking that we could no longer hear him. Mr Grander grabbed a nearby student's pencil case and pushed it into her mouth as a gag.\n\n\"Much better\" he said with a smile. \"Where was I? Ah yes. A common punishment awarded by the courts is for a blue-ribbon man to be forced to receive anal sex at least four times a day while in incarceration. Usually this is done every six hours, interrupting his sleep. This can be administered by either the male prison guards, or by female guards using large dildos. As for pink-ribboned male prisoners, they are often punished to....\"\n\nThe teacher stopped and we all watched as he held her hips and pushed harder into her. Then he pulled his rapidly shrinking cock out of her. It was slick with his cum and her juices as he walked back to the front to continue teaching.\n\nAll the male students (except Rupert) moved in a line behind still gagged Melissa. They were all already erect, and Phil was next to start fucking her, though he did it in a tepid, unsure way. I guess having half the class watching you can affect your rhythm.\n\nI waited until Phil had cum too (it didn't take long) before making my move. I grabbed my special item from my bag and moved to join the queue. Tom was fucking her now, far harder than Phil had done. I prepared my weapon. The strap-on harness wasn't too hard to put on, though I wish I had practised before hand. This model came with two dildos, but I only needed one for today.\n\nTom's dick shot into Melissa, and when he pulled out, Fabio went in. His short fat cock making squelching noises as he fucked her. The lubrication from three other men's cum making his fucking far easier than he usually found it.\n\nThere were many choices of strap-on in the shop. This one was called 'the thumper'. The dildo didn't just vibrate, but it moved back and forth on it's own. It even came with a remote control. And it promised maximum power. And that's what I wanted. Maximum power.\n\nFabio moaned as his cock exploded inside her. Eventually he pulled out of Melissa's pussy. It was red from the now 30 minutes of constant hard fucking, and white cum was dripping out and onto her school chair.\n\nI think she thought it was over, and she started to move, but I quickly grabbed her hips. Before her head could turn and see me, I pushed the dildo inside her, then pressed the 'on' button on the remote.\n\nI watched her whole body shake in surprise as I pushed the dildo into her. Her eyes widened as she finally turned to see who was fucking her.\n\nI reached along to remove her pencil-case gag.\n\n\"You're my bitch\" I told her quietly, trying not to disturb the class. It wasn't working. Most of the room were now watching me and my strap-on dildo fucking her.\n\n(A couple of other people were watching Dominica under Emma's table licking her pussy, And Laura couldn't see because she was under the teacher's table, giving him a blowjob as the lesson continued.)\n\n\"Do you like it?\" I asked her, turning the power up to the medium level.\n\n\"I love it.\" She replied out of breath. The vibrating dildo was fucking her in ways a real cock never could.\n\n\"Tell me again. Say, 'Susanna, I love being your bitch'\"\n\n\"Susanna, I love being your bitch.\"\n\n\"Again Melissa\" I ordered.\n\n\"Susanna, I love being your bitch!\"\n\n\"AGAIN!\" I instructed, not caring that everyone was watching and listening.\n\n\"SUSANNA, I'M IN LOVE WITH YOU!\"\n\nThe whole room audibly gasped, and even the teacher stopped at that revelation. I pulled the dildo out, turning it off with the remote.\n\nMr Grander was the first to break the silence. \"Melissa, why don't you go to the ladies bathroom and clean yourself up? Susanna, Please sit back down again at your desk. You too Laura and Dominica.\"\n\nMelissa left the room. She didn't come back. Everyone else returned to their desks. Not a single sexual act happened again for the rest of the lesson.\n\nI sank low in my desk. I felt...ashamed.\n\n-----------------------\n\nJACK\n\nI walked around the apartment. It was huge. The entire top floor of the apartment building, and it was apparently mine.\n\nA master bedroom, two smaller bedrooms (that were both larger than my current school bedroom, and twice the size of the standard school bedroom) and each had an on-suite bathroom. The master bedroom's bed looked large enough for five people to sleep in.\n\nThere was a living room, a dining room, a study, a home cinema and a kitchen. But my favourite was the hot tub and sauna. I couldn't believe an apartment like this had it's own hot-tub and sauna!\n\nStacy let me walk around, explaining little things if I didn't understand. Finally, in the bedroom, I found a small photo I'd never seen before. It was my parents. They were naked, standing together and very much in love. My dad's cock looked about as big as mine, and my mum was standing beside him, her hands holding a large, swollen belly. \"Taken a few weeks before you were born, I believe\" Stacy told me. \"They loved you very much.\"\n\nI opened the fridge in the kitchen, but it was empty.\n\n\"Are you hungry?\" she asked. \"I can order some food if you want.\"\n\n\"Yeah\" I said, my stomach grumbling.\n\n\"Do you mind if I take off the black while we have lunch?\" she asked me. \"Only if you're OK with it.\"\n\nI shrugged. \"Sure thing.\"\n\nI told her I wanted pizza, and Stacy walked to the apartment intercom.\n\n\"Hi John, It's Stacy on the top floor. We're wanting some food. Could you order a four-cheese pizza for Mr Webb, and a vegetarian poke for me? Two delivery drivers. One of each. And make sure they've got some time on their hands. OK? OK.\"\n\nShe put the receiver down. \"OK. Food will be here in about forty-five minutes. Let's do some legal stuff while we wait.\"",
        "On the dining room table, Stacy took me through some of the basic paperwork, signing for the apartment, and explaining about existing agreements with a cleaning company so I didn't have to worry about that. At each point she was fair and explained everything. I never worried that she might be trying to cheat me.\n\n\"Now, let's get to the main money.\" she said. \"I'd recommend what we call a 10/20/30/40 split. That's where we...\"\n\nA small buzzing noise filled the apartment.\n\n\"Ah, that will be food.\" Stacy said. She removed her black ribbon and walked to the doorway. As she opened the door, two people entered. The first was a large, muscular man holding a bowl of rice and vegetables. The second was a young lady, maybe just a few months older than me, with shoulder length blonde hair and firm, medium sized breasts. She was holding a pizza box. Neither of them had ribbons.\n\n\"Jack?\" Stacy asked me \"Do you mind I take this into one of the spare bedrooms? I promise to get the sheets cleaned before tomorrow.\"\n\nI gave her a nod, and both her and the muscular man walked into one of the extra bedrooms. A few moments later, and I heard creaking on the bed.\n\n\"Where would you like me?\" the pizza woman asked. \"My name's Kay by-the-way.\"\n\n\"Um...can I eat some pizza first?\"\n\nShe smiled. \"Of course. Whatever you want.\" I opened the pizza box and took out a slice of pizza. She moved under the table and started to suck my cock. I got through two slices before I felt ready to give her attention.\n\nI looked at the large, master bedroom, but decided against it. Instead I took the pizza girl (\"Kay\") into the other spare bedroom. I could hear Stacy moaning in the other room and the springs on the bed bouncing up and down.\n\nI moved Kay to the middle of the bed and ate her pussy for a few minutes. \"Oh, you're so generous\" she said. \"You don't have to do that\". But I did. Or else I would have cum in that pussy within moments.\n\nWhen I felt ready, I bent her legs up over her head and fucked her pussy hard. \"OH yes! She called out. Use me! You're the boss! You're the boss!\"\n\nI came deep inside her, enjoying the look on her face as I did so.\n\nWhen I finally pulled out, she moved herself round quickly, and sucked my cum and her juices off my cock until it was clean. And she thanked me.\n\nI let her use my on-suite to clean herself up. The pizza girl sung to herself as she quickly showered. Then she left, and I found Stacy waiting for me in the dining room, her black ribbon reattached. There was no sign of her delivery man.\n\nWe did more paperwork, agreeing my money would become available to me in stages (so I didn't do anything too stupid with it to begin with) with more money being released every five years. Of course, it would be invested wisely in the mean time.\n\nIt took a long time to get the final paperwork finished, and it was late by the time we were ready to go. She gave me the key to the apartment, and we ordered a private taxi to get back to the school in time for dinner. I gave her some final requests I had for tomorrow, and she agreed to arrange them.\n\nAt dinner I'd seen Suzy, but she was busy in her thoughts. I watched her eat her own food, then carry another full plate of food out of the room. Tom sat next to me and explained the situation. Told me exactly what I had missed between Melissa and Suzy.\n\nLittle Emma walked up to me after I had finished my dinner. Dominica's hand, as usual, holding hers. Dominica was still wearing the pink, but Emma didn't have anything.\n\n\"Hey Jack.\" She said with a smile. \"We're going to your bedroom tonight.\"\n\n\"Yeah?\"\n\n\"Yeah\" replied Dominica. \"My girlfriend wants your cock inside her before we graduate.\"\n\nWhat can a man say to that?\n\n\"OK ladies. Follow me.\"\n\n---------\n\nSUZY\n\n\"Hey Suzy!\" Tom called out to me as I walked out of the canteen after dinner. I had a plate of pasta in my hand. \"Fabio's looking for you.\"\n\n\"What does he want?\"\n\n\"You.\" Tom said with a laugh. \"He's trying to fuck every girl in the class before graduation. He got to Dominica before she started wearing the pink, and now he only needs you and Amy. And I saw him leave with Amy a few minutes ago.\"\n\n\"Well\" I said with a smile. \"He can find me tomorrow morning before graduation. I'm busy tonight.\"\n\nI knocked on Melissa's bedroom door. She hadn't come out for dinner.\n\n\"Hey, Melissa. Um...it's me. You didn't come for dinner, so I brought you some. Can I come in, please?\"\n\nShe hesitantly opened the door. I could see from her eyes she had been crying.\n\n\"Can I come in, and, um, explain?\"\n\nShe didn't say a word. But she did let me in. I closed the door behind me.\n\n\"I'm sorry\" I said, honestly, as I watched her slowly eating the pasta. \"I hadn't realised. I thought we were just competitors.\"\n\n\"We were\" she admitted. \"At first. But for me it became more. First, I hated you. Then my hate changed. I enjoyed your focus on me. I wanted to be the person you were paying attention to all the time. When you were with others, I got jealous. This was before this week and when we learned about sex. Even before this -- when you were with someone else, I was jealous. And I realised that this jealousy wasn't hate. It was love. But I couldn't tell you. Because I knew you didn't feel the same.\"\n\nI let the revelation sink in. I didn't say anything. But I held her hand, and squeezed it tightly.\n\nEventually, I knew what to say.\n\n\"Thank you for telling me\" I told her. \"I hadn't realised how your feelings had changed. I like your attention too. I've enjoyed playing your opposite. Being the other side of your coin. I don't feel love for you. I don't feel love for anyone. But I'd like a friendship with you. A friendship, like I have with Jack. If you'd like.\"\n\n\"I think\" she said \"I'd like that.\"\n\nI reached over, and kissed her lips softly. I heard her sigh, and soon our kiss became more passionate, as mouths parted and tongues began to dance. Eventually, I pushed her backwards gently onto her bed, our lips locked as my hands wandered gently down to between her legs, finding the moist cunt between them. I turned my body round, until my head was at her warm, wet pussy. My own legs wrapped around Melissa's face underneath me. With a smile, I began to lick at her waiting clit.\n\nTomorrow was graduation. One last chance to make it right with Melissa. My school rival for over ten years. And now, at the end of this road, we would finish the school with me on top.\n\n-----------------------------\n\nJACK\n\nThe final morning.\n\nEmma and Dominica had stayed in my room all night, and we woke early and excited. Last night we had fucked in the dark, our bodies rolling over each other like waves. I'd even been inside Dominica, briefly, but only by accident, the darkness not showing me who's pussy belonged to who.\n\nBut the morning was for light, and I enjoyed being able to see our lovemaking. We finished with me fucking tiny Emma's arsehole while she licked at Dominica's open pussy. We hugged in celebration. Celebrating our threesome, and our friendship and the 15 years of school we had all gone through.\n\nWe had started at the age of 3 or 4. Taken away from our families and forced into our lives together. We had grown together. We had become friends. And then we had become lovers. And now, at the end of our journey, we would be leaving as adults. Adults, free to enjoy the world and ourselves. But never to forget our friendships we formed over these 15 years.\n\nI left my room and pushed open Suzy's door. She was inside, lying on the bed, with Fabio's arse rising up and down on top of her. \"Hey Jack!\" she said as she saw me. \"Wait for me.\"\n\nI sat in the room and waited until Fabio squirted his cum into her. He thanked her, and gave me a high-five, telling me he had managed to get every girl.\n\n\"Did you want to go next?\" Suzy asked, her legs still open with Fabio's cum slowly leaking out.\n\n\"No\" I said, but not in a nasty way. \"I want to tell you about yesterday.\" I shut the door and told her about the apartment and my parents and the large inheritance. She was the first person I told. And she would be the only person I told today. I didn't want to take anything away from our graduation.\n\n------------\n\nSuzy\n\nWe ate breakfast with everyone else. I smiled at Jack, keeping his secret.\n\nEveryone was talking about the same thing. What would the graduation ceremony be? Would we fuck in front of our families? Would we have some massive orgy or something like that? Would our teachers give us one final test, about all they had told us this week?\n\nThe teachers instructed us to leave the canteen after breakfast, and to go and pack all out belongings. The rampant gossip continued as we all packed away the lives we had built for the past 15 years.\n\nThen, it was time.\n\nIn the end, it was a bit of an anti-climax.\n\nThe cafeteria had been rearranged slightly, and our families all walked in. It was so strange to see our families naked for the first time! Mum and Dad were there (of course) along with Abigail and Benjamin, my twin older siblings. This was my first time realising that my parents would also be wearing ribbons. Dad wore white, while mum didn't wear anything. Abigail was wearing a red ribbon, and I realised it was because she was on her period. Small, skin-coloured panties carefully hiding her pad. Benjamin wasn't wearing any ribbon. For a moment I imagined my family having sex, Dad taking turns to fuck both Mum and Benjamin. Then I tried to put that out of my mind and focus on the graduation.\n\nI saw Jack had his old friends, Adam, Darren and Ruth. I was glad they were there. So was that woman from yesterday, though she was mainly standing at the back, again wearing a black ribbon.\n\n-----------------------\n\nJACK\n\nI smiled at my friends, and also at Stacy my lawyer. They watched as one-by-one, the 14 of us walked to the front. One by one, we collected our official certificates from the Headmaster, who for some reason had put his old, black worn-out suit back on again, shook the hands of many naked teachers, waited for a small round of applause, and then sat back down again. Then repeat for the next student.\n\nAfter, The deputy-head gave a final speech, commenting how well each of us had done over the many years. She managed to say something nice about each of us. She mentioned Suzy's high test scores and Melissa's driving attitudes. She talked about Rupert and his growing confidence, and about Dominica's loyalty and friendship. And for me, she complimented me on how I had handled adversity, never once complaining at the extra difficulties I had been given.\n\nAnd that was it. We left the students area, and went to meet our friends and families.\n\n--------------------------\n\nSUZY\n\nI hugged Mum and Dad tightly. Though it had really been only two weeks since I'd seen them, it had been before the revelations, and that world felt like years ago. I hugged my brother and sister too.\n\nAnd then I hugged some classmates, and some people cried.\n\nDad got my 2 bags of luggage. My old clothes from before the revelation were returned, as well as my other belongings.\n\nAnd we left.\n\nWe all got on the bus together. And as we rode the bus, I watched my mum sit on a random stranger's cock. And I watched my dad get a blowjob from a girl not much older than me.\n\n\"um, Benjamin\" I said to my brother. \"Do we, um, as a family....\"\n\n\"What do you think, little sis?\" Asked Abigail, before Benjamin could answer.\n\n\"I think yes?\" I replied hesitantly.\n\nAbigail nodded with a smile. Her hand moved around to Benjamin's cock and began to play with it.\n\n\"It's up to you\" Benjamin told me as our sister gently gave him a hand-job. \"But we'd really like to fuck you later. All of us, mum and Abigail included.\"\n\nAnd I smiled.\n\n------------------\n\nJACK\n\nStacy had arranged everything exactly as I wanted. Waiting for us outside the school was the black taxi. It took me, along with Adam (white-ribbon), Darren (pink-ribbon) and Ruth (no ribbon) back to my apartment building. I invited Stacy, but she politely declined. Today was for me and my friends. I wished Suzy could have come too, but understood she needed today to be with her family. She promised to visit very soon.\n\nAt the entrance to the building, John the concierge was waiting. \"Everything is ready for you upstairs, Sir.\"\n\nAs we rode up the elevator, I was enjoying being able to see my friends naked again. I remembered our fleeting chance showings to each other, when we hoped a teacher wasn't looking. Darren, the first penis I saw which wasn't mine, and Ruth, the first woman to show me what waited between her legs. She saw me looking at her, and smiled. \"Yep. No teachers to stop us now.\"\n\n\"Are you hungry?\" I asked my friends as we stepped out the elevator, and stood at the closed door to my penthouse apartment.\n\n\"Starving mate!\" Adam replied. \"But why are we here, man? Whose place is this?\"\n\nI opened the door carefully. Waiting for us was pizza, Chinese, sushi and other types of food. And ready to serve us, were 8 beautiful servers. Four men, four women. I recognised Kay from yesterday.\n\n\"I didn't know what food you wanted\" I told my friends. \"So I ordered everything.\"\n\n\"And I didn't know what ribbons you wore,\" I continued. \"So I ordered everything.\"\n\nAnd as I watched my friends getting hard and wet and start to play with the naked men and women around us, I realised that my adventures in this free-use world were only just beginning.\n\n----------------\n\nThe End\n\n------------\n\nEpilogue\n\nSUZY\n\nJack hosted a reunion every year for us after that, in his huge penthouse apartment. It had been five years since we'd graduated. This year was unusual, as we'd all seen each other recently, at the wedding of Dominica and Emma. So the usual two hour catch-up session of what you were doing / who were you dating / where were you working etc hadn't been really needed.\n\nI was a bit sore as I travelled to the apartment. This morning before work both my dad and brother had used my asshole, rather than my pussy. And then on the bus to the apartment after work, two guys had wanted to fuck my pussy, one after the other. They had both been quite rough, and I regretted not taking Jack's offer to pay for a taxi.\n\nJack greeted me at the door to the apartment. \"Hey Suzy! I was worried you weren't coming.\"\n\n\"Sorry Jack\" I told him. \"Work held me up. A big new project we're working on. But I'm here and I'm definitely cumming tonight.\"\n\n\"I'm sure you are!\" he said \"Almost everyone's here. Lily and Tom couldn't make it, they're both abroad at the moment. But I think everyone else made it.\"\n\nHe lowered his voice to a whisper. \"Including Melissa\".\n\n\"It's OK.\" I told him. \"We patched things up a bit at the wedding.\"\n\nAbout three years ago, Melissa and I had tried dating. We lasted a year, but then it all went bad. We didn't speak for a long time after that, and I had moved back in with my family. But we'd cleared the air at the wedding. We weren't back together, but at least we could stand being in the same room again.\n\nWe walked further into his apartment, waving at classmates. Naomi and Emma were chatting away on a sofa, while Dominica was on the floor in front of them, her body wrapped around Laura, their tongues dancing together as their arms and bodies played with each other.\n\nRupert had brought his boyfriend and they had taken over the kitchen and were serving the cocktails for us all.\n\n\"And where's your Mrs?\" I asked Jack as we got a couple of moscow-mules and sat on kitchen stools.\n\n\"Ruth took little Sarah to her parent's for the evening. Sarah has been crying a lot recently (teething) and she didn't want a baby's cries upsetting our evening.\"\n\n\"You know it wouldn't\" I told him. \"But that was nice of her.\"\n\n\"Do you mind if we join you?\" A voice came from behind. It was Mr Grander and Miss Picard, our former teachers. Jack always invited the teachers to the reunion too, though few came. In the past five years the headmaster had retired, and now Mrs Williams was the new head. Mr Grander had taken over as deputy-head.\n\n\"You can join if you'd like\" Jack said with a smile. \"But Suzy here has only just arrived.\"\n\n\"I see\" said Miss Picard. \"Who do you want Susanna?\"\n\nI looked at them both. Of course, I'd had both of them several times since graduating. \"I think my pussy needs a good licking. It needs a woman's touch.\"\n\n\"Say no more\" the teacher said as she lowered herself down. I spread my legs wide and let her start to lick and play with my open pussy.\n\n--------\n\nJACK\n\nI talked for a while with Mr Grander, who now let me call him Jim. I told him about my bike company. I'd opened my shop about a year after graduating, making custom bikes for the rich and famous. Since then I'd made bikes for politicians and celebrities. And of course, most of my female customers also got to ride my dick, as well as the bike. Two years ago I'd even fucked royalty. A queen of one of the smaller African countries.\n\nWe heard Suzy make an unmistakeable sound, and knew Miss Picard had done her magic. The teacher lifted herself back to her feet and licked her lips clean.\n\n\"Do you gentlemen want to take it somewhere else?\"\n\n\"I do if you do\" replied Jim, looking at me. I glanced at Suzy, who just gave me a small nod.\n\n\"The master bedroom is this way.\"\n\nThey knew that already of course. I remembered fucking Miss Picard (Esmee) hard on the bed last year while Ruth (very pregnant with our first child) sat on her face very carefully.\n\nWe weren't the first to get to the large master bedroom. Fabio was there with a woman I didn't I didn't recognise for a moment, until I realised Amy (with the squinty eye) had changed her hair colour. Luckily the bed was just about big enough for all of us, especially as Fabio and Amy were only using one corner of the bed at the moment, with him standing up and thrusting into her from behind.\n\nThe ladies climbed onto the bed, and we gentlemen followed after. I was above Suzy, and paused for a moment to watch Jim next to us push himself into Esmee's wet cunt.\n\nBut I only paused for a moment, and slid myself into Suzy's moist pussy. Like I had so many times before. And as I thrust my hard cock deep inside her again and again, I realised I wouldn't have it any other way.\n\n------------------------\n\nTHANKS FOR READING! PLEASE DON'T FORGET TO GIVE SOME STARS AND SOME FEEDBACK!"
    ],
    "authorname": "TheOtherTeacher",
    "tags": [
        "free",
        "use",
        "freeuse",
        "students",
        "school",
        "teacher",
        "student",
        "nudity"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/free-school-graduating-to-freedom"
}