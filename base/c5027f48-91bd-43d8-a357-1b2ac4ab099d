{
    "title": "Driving Miss Bea",
    "pages": [
        "It was a year ago August 10th 2018 when I had my first story published. I'd like to think I've learned and improved in the past year, I've published 65 other stories and all but two have ratings above 4.5, the two that didn't were a few tenths of a point below that level. \n\nThe following isn't a new theme, are there any left after Lit has been publishing for over twenty years? It's simply my take on what I would like to believe is a love affair between two people of different ages and ethnicities, the ending is a bit different than most, but I think you'll like it. Happy reading. \n\n*****\n\nGazing at Miss B. I couldn't help but think of the lyrics on an old Eagles song, *I like the way your sparkling earrings lay against your skin so brown*, dangling or hoop earrings had always been the trademark of Miss B. This would be the last time we made love, she was 54 and interested in an older gentleman at the coffee shop, I was 27 and ready to settle down with a woman I wanted to marry. We had determined that once we reached the stage where we would move on with lovers nearer our actual ages there would be no more extra curricular activities. There would be one woman in my life, the one I married, and there would be one man in her life, not two. \n\nIt was a bittersweet moment as she led me down the hallway of her simple three bedroom ranch one last time, like all the times before she grasp my hand and walked a half step ahead of me. As we entered her bedroom she closed the door, drawing me in, kissing me passionately, her soft plump lips tasting like cherry lip balm. Pulling away from me she stated as she had so many times before.\n\n\"Take your clothes off Anthony, you're not going to make love to me dressed, hurry on now boy.\"\n\nI was ten the spring we moved into the older three bedroom ranch next door to Bea and Oscar Waverly, he was 44, she was 37, they had one child, a lovely daughter going into her junior year of high school. I soon found out Miss B, which everyone referred to her as, taught Biology at the high school, her husband Oscar commonly referred to as Ozzie was a diesel mechanic at the local county shop. Mother and I had moved from Boston, my dad having been killed in an industrial accident the year before. Mom wanted a new start and I agreed, I just didn't know it would be twenty six hundred miles away near Burley, Idaho. \n\nThe day we moved in Miss B knocked on our door with a loaf of bread, a dozen eggs, a gallon of milk and a plate of fresh cookies. That's how it was then, now a days you're lucky if you ever meet your neighbor, much less welcome them to the neighborhood. Mom put the coffee pot on, poured me a glass of milk and we sat at the table visiting with Miss B for over an hour. I was enamored by Miss B, I'd seen many black people before, but none as pretty as her, she exuded natural beauty. Her hair was straightened and had delicate waves cut at shoulder length, dangling earrings, a crisp floral print cotton blouse, flowing cotton skirt and a wide belt accentuating her thin waist. \n\nI was only ten, (almost eleven) but I knew a pretty lady when I saw one, and this was a very pretty lady. Her skin had a dark chocolate hew that almost seemed to shine, a bright white and infectious smile topped off with the greenest eyes I'd ever seen. I learned later in life that green eyes in a black person are not common and only found in about seventeen percent of the black population. I had no idea what color Emeralds were at that time, as I aged, I realized her eyes were the color of Emeralds. \n\nMy daddy had insured himself heavily, I remember he and mama argued about the amount of money he'd have coming out of his pay each time. Now, my mama was glad he did, at the same time wishing he were still here instead of the money. An insurance policy of one million dollars was a huge amount of money in 1995, we could have lived high on the hog for a long time before that money ran out, but that's not what my mama was about. She bought a late model used Dodge Caravan with all the bells and whistles she wanted, set up an education fund for me and purchased our house outright. \n\nWe ended up here because she was a court stenographer and the local lady was retiring, mom answered the ad for a replacement and was hired after one interview. Ozzie became a surrogate father to me, teaching me how to throw a baseball and football, he played street hockey with me and the other boys. By the time I was thirteen I was playing little league baseball, Ozzie, Miss B and mama were at nearly every game. Katrina, the Waverly's daughter, had tried to help me fit in, but no matter what I did or accomplished I was always the new kid. I wasn't a cowboy, hadn't grown up around horses and in the eyes of most kids my age, I was a geek, other than in sports. Though I was congratulated for my prowess on the ball diamond, in reality I was tolerated, but never accepted. \n\nOzzie hired me to take care of his yard the summer I turned fifteen, soon several other neighbors had hired me as well. In my eyes I was swimming in dough, mother put a cap on that after my second week, she'd allowed me to waste the first two weeks of wages, the third week she laid down the law. Half of everything I was paid went into savings, another twenty five percent went into a school clothes account, ten percent went into the offering plate at church and the rest was mine to, as she put it, *piss away*. It sounds restrictive, but at fifteen I had plenty of money to waste as I watched my savings accounts multiply. \n\nThe summer I turned eighteen was also the summer my view of Miss B went from seeing her as the wholesome school teacher/worship leader next door to the sexiest creature I'd ever seen. She was well respected about town, known as a dedicated teacher and a power house as worship leader in our church. I'd never been to a non-denominational church before we moved, Miss B and Ozzie had invited us the first week and we'd been there ever since. She had a voice that beckoned you to sing with her, mama said it was like listening to Ella Fitzgerald, whoever that was. I only knew that soft husky voice could draw me into the worship service and have me ready for the preacher's message. \n\nOn the evening I would begin to view Miss B as not only pretty, but sexy as well she had inadvertently left her bedroom curtains open at dusk, normally the glint of the sun shown off her window and I couldn't see in. That night would be different, the sun had set enough that I could see into her bedroom as clear as day, my overhead light was not on as I stood back in the shadows watching Miss B undress. \n\nFirst the blouse, when the skirt which exposed her full slip, no big deal, I'd seen my mom in her slip hundreds of times. What happened next made my young dick stiffer than it had ever been, her arms grasp the bottom of the slip and pulled it over her head. Standing on the other side of the room I could see Miss B in her bright white cotton full briefs and a simple white cotton bra. With her back to me she unclipped the bra and let it fall, cupping her hands under her breasts sort of scratching and rubbing underneath them after shedding that restrictive harness. Turning around with her thumbs in the panty waist she realized she'd left the curtains open. As she walked toward the window, I could see her staring into my room as though she were looking for my yes. \n\nHer breasts didn't hang like my grannies did, they were sticking straight out with nipples dark and round, kind of like a pencil eraser. They jiggled and swayed as she walked, at that point in my life I was too inexperienced to know the nuances of such a notion but I imagined my lips sucking her breasts like I'd read about in one of the romance novels mother kept hidden in her panty drawer. (Don't ask how I knew what was in my mother's panty drawer.) The bright white color of the underwear against her chocolate skin made it all the more erotic and drew my eyes to the prize, was I actually going to get to see a real pussy tonight? Her hips were not oversized and looked as if they flowed directly into her slim torso. Her butt wasn't pronounced as some I'd seen, it was nice and puffy looking, as though it was there to be caressed and squeezed. Her face was to me angelic, soft features, inviting lips and always a pair of earrings.\n\nPulling the curtains closed the show ended, once again my dreams were dashed, I was left with only one option, pull my dick out and stroke until it erupted. I came so hard I cried out, then heard mom knock at my door asking if I was alright. I told her I was fine, it was only a Charlie horse in my calf. Charlie horse indeed, my dick was hard again as I considered stroking a second time. From that day forward I never looked at Miss B the same way, I didn't leer, but I didn't look away either. If she wasn't looking I drank in all the beauty and sexiness she exuded.\n\nIt was later that year tragedy struck the Waverly home, like so many men do, Ozzie had ignored the signs of not being well for so long he was in stage four cancer before it was found. In April I stood next to Miss B as they lowered Ozzie into the ground, she silently took my hand and kept it all the while people greeted and talked after the ceremony. Katrina was with her part of the time, but she also had a husband and new baby that needed her attention. I knew some of the people but not all, if I knew them, I greeted them, if not I simply stood with Miss B holding her hand. If she moved, she pulled me with her, to the point of asking me to wait for her outside the ladies, I took advantage and emptied my bladder as well. \n\nThe reception afterward was at the church, by four it had basically cleared out, mother asked if I would mind driving Miss B home while she and the others cleaned up, to which I readily agreed. As I drove her home Miss B. and I joked around about how we were the black version of Driving Miss Daisy, with me being the driver and she being Miss Daisy. It was one of the few times I saw her smile that day and the only time I'd heard her laugh. Katrina and family would be staying a few days before flying back to Connecticut. I chose to stay clear unless Miss B summoned me. \n\nIn the weeks and months that followed I became almost like her handy man and helper. With Ozzie's life insurance and the pension she would get from the school system she decided to stop teaching altogether. I would take her to the grocery store every week, every other Saturday she'd have me drop her off at the beauty shop and pick her up an hour later. Mom had been dating a deputy sheriff and my time was pretty much my own. Miss B and I went to supper every Friday night, usually fish fry at the VFW Hall, then Sunday after church she, mother and I would go for brunch. When we were out and about she would hook her arm through mine and tell me the same thing every time, *okay, you've a lady on your arm, be a gentleman*. If folks would ask about me, she'd always reply.\n\n\"Surely you remember Anthony, he's lived next door to me since he was a tike. He's my helper now that Ozzie is no longer with me, I'd be lost without him.\"\n\nI was now doing all her yard work as well as carting her around here or there, none of which I minded at all. One evening as we sat on the patio I sought some advice from her.\n\n\"Miss B, my grades were good enough to get into state and I've been accepted if I go there, but I don't want to leave you or mom. I could use some words of wisdom right about now.\"\n\n\"What do you want to go to school for Anthony? That will make a difference in where you choose to go, the local campus offers nearly everything the state campus does, just not all of it is available every year. Sometimes a course is every other year.\"\n\nI pondered what she'd said, then answered. \"I love anything mechanical, old Mr. Morris taught a small engine repair class as part of metal shop this year. I did well and got to know him, he's going to retire in two years and is looking for someone to buy his small engine repair business. He told me if he was fifteen years younger he'd nail down a dealership for one of the major brands, most folks are tired of buying out of town at the big box stores with little or no service afterward. That's kind of what I had in mind, but I don't know if it's the right thing to do.\"\n\n\"Do tools fit in your hands Anthony? Ozzie always said if the tools don't feel comfortable in your hands, you'll never make a living with them.\"\n\n\"They do Miss B, it's as though they're a second set of fingers sometimes.\"\n\n\"Well Anthony, I think you answered your own question. The local tech school has a two year program for small engines which includes a six month class in business management. If you did that you'd be here to help your mom and me, if you talked with Henry Morris and told him of your plans I bet he'd hire you after you completed tech just to train you and get the customers comfortable dealing with someone new.\"\n\nI grinned, \"The tech school, of course, I've heard nothing but college for three years and had it in my head that's what I needed to do. I like that idea.\"\n\n\"If you need some money to start up, I can help you sweetheart.\"\n\nSweetheart, she had never called me anything but Anthony before. That word of endearment was music to my ears. \n\n\"I'm okay Miss B, I have money set aside for my education fund, what I don't use for school mom says is mine to start out with. I can buy a house, or a business, whatever I want.\"\n\nAs I was leaving she had ahold of my elbow guiding me toward the door as she always had. I turned to face her.\n\n\"Miss B, you called me sweetheart earlier, you've never called me anything but Anthony before tonight. What gives?\"\n\n\"That's because you are a sweetheart Anthony, a very special sweetheart to your mother and me.\"\n\nYoung inexperienced boldness took me somewhere I'd never dared before. \"Miss B, if I'm your sweetheart can I get a kiss from you?\"\n\nShe stared at me for the longest time, those emerald green eyes looking deep into my soul. \"You really want a kiss from this old lady? I'm in my forties Anthony, you can't be serious.\"\n\n\"Ah but I am Miss B, I find you attractive and fun to be around.\"\n\nWith both hands on my chest she leaned toward me, pecked me on the lips and pulled back. I was disappointed and told her. \n\n\"Geez, I used to get kisses like that from my gramma, and you aren't my gramma.\"\n\nThe words had no more than left my lips when her hand went to the back of my neck and pulled me to her full cherry tasting lips, holding me there for at least five seconds, softly molding her lips to mine.\n\nPulling back flashing me one of her award winning smiles she asked, \"Is that better Anthony, did that rock your boat?\"\n\n\"Is one all I get?\"\n\nShe thumped my chest, \"Get your scrawny behind out of my house young man, and make sure you're here by nine for my hair appointment. Goodnight sweetheart.\" I could hear her laughing as the door closed. \n\nLife went along as it had been, she would kiss me goodbye from time to time, no set pattern, always a nice surprise. Together we filled out all the applications and paperwork for tech school, convincing mom it was the right thing to do, that college wasn't necessary for everyone to make a decent living, in spite of what guidance counselors pounded into student's heads. I was nearly through my first year of tech when I noticed mother wasn't doing well, she looked sickly and had no energy. Cancer had taken her mother's life, sadly, it was also taking my mother's life. Mom had watched her parents go through all the ravages of chemo and radiation and made the hard decision she was not going through that agony. Her pain could be managed, she wanted to die in her own bed, not some damned nursing facility full of chemicals.\n\nIn October of that year it was Miss B who stood with me holding my hand as I greeted guests and well wishers. I'd held it all together up until that evening at Miss B's house sitting next to her on the couch. The tears flowed as she held me to her body, not saying a word, simply comforting me. It was well after midnight by the time I'd composed myself, I bid her goodnight and trudged across the back yard where I sat in the dark looking over the valley all night. As first light peeked over the horizon I went to bed and slept until three in the afternoon. \n\nIt was Wednesday and I was late taking Miss B to the grocery store. I rushed to her patio doors and knocked, as she spun she beckoned me inside. \n\n\"Anthony, sweetheart, what are you doing here?\"\n\n\"It's Wednesday Miss B, grocery shopping. Sorry I'm late.\"\n\nWalking up to me she put her hands on each side of my face, \"Such a sweet boy you are. Shopping can wait.\"\n\n\"No Miss B, I need to maintain our schedule, if I sit in that house I'll go nuts, I have early classes tomorrow which will keep me busy, but today I need to be with you doing what we always do.\"\n\nShe leaned in and kissed me, soft, delicate, then patted my chest and stepped back. \"Then I guess we'd better go grocery shopping, oh, and you're eating supper with me from here on. Don't give me any shit about it either.\"\n\nIt was the first time I'd ever heard her use what she referred to as vulgar language. It was obviously said to show how serious she was, I received the message loud and clear. At the store she pushed the cart, pointing to this or that telling me what to get. If I was next to her, she would snake her hand through my arm and softly squeeze the inside of my elbow. This was a new Miss B and I liked it. I had no idea if it would ever go further, but I liked the attention she was showing me. Having supper with her each night was therapeutic for me, within a few months I had adjusted to mother's demise and gotten through all the probate trash. One evening at supper Miss B asked what I was going to do about the house. Not knowing what to do I shrugged my shoulders. While we did the dishes, she told me to put on a pot of coffee, we needed to talk.\n\n\"Anthony have you considered selling the property. It's a seller's market right now, I think you could get top dollar, put that money in the bank to purchase Henry's business and leave the rest of your savings where they are.\"\n\n\"But, where would I live? I've been there the better part of my life, I certainly don't want to be that far from you in case you need me.\"\n\n\"Well Anthony I've thought about that a lot. We have the loft apartment above the garage, it's heated and cooled, has a bathroom with shower and a mini-kitchen. We used to rent it out before you folks moved in, it's been a catch all for a long time. You could live there, you'd be close with your own privacy and not in the house with a widowed woman, the gossips would have nothing to talk about.\"\n\n\"That sounds okay, why did you stop renting?\"\n\n\"When Katrina began to mature we had a single man living there, long story short he started making advances with her, she was young and easily impressed. Thankfully Ozzie and I figured it out right away and evicted him, we simply never rented it again.\"\n\nMiss B was correct about the seller's market, I had three people bidding on it and sold it for eleven thousand more than listed. I had a yard sale for most of the furniture and household items keeping the family heirlooms and antique pieces mom had collected. I had made enough money off the yard sale to afford a three year old Toyota Tacoma pickup. Perfect transportation for an almost 21 year old. I moved all my belongings into the apartment on a Saturday, the house closed on Monday. \n\nI was having supper with Miss B every evening, usually retreating to the apartment to do homework or research new equipment. At times I would stay, Miss B would sometimes cuddle next to me on the couch, nothing romantic, something I would have done with mom. She would ask how school was going, had I spoken with Mr. Morris yet, when did I graduate, normal caring adult topics. I dated very little in high school and not at all now that I was at tech, I didn't feel like I needed that distraction in my life. I'd put my hormones on hold, if you do that long enough the desire sort of goes away unless you're stimulated in some way.",
        "Friday night supper had become something we looked forward to every week, we'd take in a movie once in a while, walk in the parks or a stroll along the small lake on the edge of town. At times she held onto my hand, but generally it was her arm through mine. We'd overheard people say more than once that Miss B and I were connected at the elbow, she and I would snicker and guffaw over the silliness of their comments. On a Saturday morning I heard someone in my kitchenette, walking out with a baseball bat I realized it was Miss B cooking breakfast. \n\n\"Good morning sleepy. We need to eat, I'm famished, then you're going to dress quickly and we're heading across town. It's time we talked with Mr. Morris before he up and shuts the doors, it'll be harder to start anew than to take it over. Come on, get a move on.\"\n\nAfter an hour's worth of negotiations with Mr. Morris we slid back into the car with smiles on our faces. I graduated in three weeks at which time I would begin working with Mr. Morris, he would stay with me six months and be gone. I would pay him two thirds down and the balance when I took over entirely. Miss B was like a teenage girl, giggling and squirming all over the seat. We decided to celebrate by sharing a Turtle Sundae, paying no attention to those pointing as we ate from the same bowl with different spoons. In my mind it was perfectly natural, after all, we'd kissed, this was almost the same ... then it occurred to me, they didn't know we kissed at times. \n\nWhen I walked across that platform for my certificate of completion Miss B stood and cheered. Those who were younger wondered what that was all about, those who were older never blinked an eye. We had a steak for dinner and returned to her house, sitting on the couch she asked me if there were any romantic prospects on the horizon now that school was done. I told her nobody struck my fancy at this time, besides, I was already her sweetheart and had no intention of two timing her. I'd meant it as joke, she stared holes through my eyes for what seemed like an eternity, finally standing she reached for my hand telling me to follow her. At the bedroom door she stopped, kissed me passionately and whispered so seductively my heart nearly stopped beating. \n\n\"Your graduation present is in my room.\"\n\nI was numb and dumbfounded, what exactly did she mean? Was it going to be what I hoped it would? She answered my unspoken questions with a single sentence. \n\nClosing the door she stepped back, \"Take your clothes off Anthony, you aren't going to make love to me dressed. Hurry on boy.\"\n\n\"But, but, but Miss B, isn't this kind of sudden?\"\n\n\"Are you saying you don't want to make love to me Anthony?\"\n\n\"No, I do, I do, it just caught me by surprise.\"\n\n\"You've been chasing me for the past year and a half, do you think I didn't know? I never let you have more than a kiss or two because I had to make sure you were grown up enough to be my lover and keep your mouth shut. I'm a big girl, I know what I want and I don't need a big romantic build up to get it. Stop talking and take your clothes off.\"\n\nAs I undressed, I watched her disrobe, first her blouse, then the skirt, followed by the full length slip being pulled over her head. As she stood in a simple coral colored bra and a pair of blue with white polka dot hip hugger panties I marveled at the contrast between her dark brown skin and the colors of her underwear. It hadn't always been like that, I remembered the first time I had watched her undress through the bedroom window. Plain white cotton bra and white cotton full brief panties, no nylons, no garter belt, nothing that screamed seduction. \n\nWatching her undress was as erotic as I had imagined, in front of me was a black June Cleaver for all intents and purposes, ready to show me how love between a man and woman should be. There were no sexy lacy undies or an ass splitting thong, no push up bra or thigh high stay up stockings, it was the body of a 49 year old woman taking her clothes off to teach this boy of 22 how to treat a woman. Her breasts were those of a lady who'd had a child long ago, there were slight stretch marks, yet they weren't flabby or hanging down, they still stood fairly erect and the nipples pointed upward a little. Looking at her bra later I discovered she was a 34C. \n\nWith the bra laying across the chair she put her hands under her breasts lightly lifting them as if to scratch or adjust, rubbing the skin beneath them as she had done so many years ago when I spied on her. Reaching for the panties she hooked her thumbs in both sides as she slid them down in one fluid motion. Stepping out of them and standing before me, her hips were plump but not flabby, thighs had no sagging saddle bags or bulging veins, there was no six pack tummy, but it was flat without being muscular. At the center of it all was a tight curly hair pie with bits of grey here and there, her bush wasn't big enough to be trimmed and certainly didn't need to be shaved. As I was dropping my underwear she lay down on the bed and reached her arms open inviting me into her lair. My cock was hard as a steel pin and pulsing as she reached for it. \n\n\"This is nice Anthony, I'm anxious for you to be in me, but first we kiss, kissing is essential to making love properly.\"\n\nI'd kissed her many times before this day, but never at this level of passion and sensuality, today was much different. I began in haste as I'd seen in so many porn flicks, she pushed me back. \n\n\"Slow down Anthony, take your time, be soft, gentle, be passionate without being rough. The next kiss should be anticipated by your lover, make her want to be kissed again, it should be part of what makes her wet between her legs.\"\n\nResuming my kissing lesson her lips were soft and seemed more full than normal, her hand was alongside my cheek softly caressing, she'd break the kiss then slowly move to my lips again. I could sense the desire without being overly physical, she would look into my eyes, whisper *sweet boy* and draw me back into her world of sensuality. We were laying on our sides facing each other as we kissed, her hips were gently rocking against me moving back and forth.\n\nSensing my trepidation and uncertainty, she reached down, took my hand and put it on her breast, manipulated my fingers with hers, gently squeezing and molding her breasts to my hand, urging my hand to slightly pull them away from her body and then tweak the nipple. Each time I did that her body seemed to shiver slightly. I'd been with a smattering of girls before and had felt a few boobs, but this, this was different, almost reverent as if I was worshipping her flesh. We weren't two kids sucking face and swapping spit, she was teaching me that slow, gentle and sensual far out ranked a heated escapade.\n\n\"It's time to feel between my legs Tony, mm, hmmm, slide your middle finger up and down the slit without penetrating. There, see how wet that makes me, I'm ready for you to be inside me.\"\n\nTony?? She had never called me Tony in the twelve years I had known her. Her pussy was magnificent, the vulva were thick and occupied the entire width between her legs. I'd seen pictures of skinny little pussies, this wasn't one of those. Her thick puffy vulva was designed for one thing, to wrap itself around my cock and suck my balls dry. \"Miss B, I need to tell you something.\"\n\n\"Shhh, you're a virgin, it's okay, I knew that when I closed the bedroom door, now I get to teach you the way I like it. Climb on top sweetheart, say goodbye to your virginity.\"\n\nMoving my five foot ten frame over the top of her five foot seven body I felt her reach between us and take ahold of my dick, in doing so she squeezed the head. \n\n\"Cut, I like cut, especially the head, nice and thick. Okay Tony I'm going to put you inside me, I know you've felt a few girls at school, but today Miss B. is going to give you the ride of your life.\"\n\nThe outer petals slowly opened as I pushed in, Miss B. moaned, with her hands on my butt she continued pulling me entirely into her body. When I was all the way in she hissed a long *yesss* before dropping her hands from my butt. \n\n\"Anthony I know this is your first time and you'll want to go fast, but today we go slow and deep with every stroke. I want you to push up with your armsTony, I've never had a white boy inside me before, I want to look. Go slow so I can watch.\"\n\nWe both watched our coupling for a long moment, her brown body absorbing my light colored flesh as her hips rocked up and down. \n\n\"Tony I love watching you slide in and out of me, I think it's sweet and sexy.\"\n\nWe kissed as she pulled me down on top of her, arms around my neck, her legs raised alongside her body, those luscious plump hips cradling me in her nest of love. Our movements were slow and steady, I could feel her insides gripping my cock as I withdrew and relaxing when I went in, I'd never had feelings like this before, she was right, there was so much more to making love than wham bam thank you ma'am. As I would begin to swell, she would grab my butt with her hands and hold me tight, not letting me move. As the urge to cum would subside she would then allow me to start again, when it happened the third time she smiled at me.\n\n\"Go ahead Tony, cum in me, when I feel you cumming it'll set mine off. You've done well for the first time, now put that puddle of warm creamy sperm inside me.\" \n\nAs I pushed in and held tight spewing semen inside her vagina I felt her body tense, shudder and then relax. It wasn't a demonstrative or loud orgasm, but it shook her world. She was gasping for air as her chest heaved, sweat beading on her brow and upper chest. I had never experienced a climax as intense before, I was as out of breath as she was, moving off her body I lay next to her. \n\n\"Anthony you made me feel good, you have the perfect size penis for me, not too long that it hits my cervix but nice and fat. You stretched me real good, I felt every vein and bump on your cock, I'm looking forward to more lessons. Teaching school was never this much fun.\"\n\nI found the language she used interesting, as though she were still in the classroom discussing science and anatomy. Taking my face in her hands she became very serious.\n\n\"Anthony, no one can ever know we are lovers. The thought of you being my illicit lover excites me to no end, but no one else can ever know. Promise our secret is safe.\"\n\n\"I won't utter a word Miss B. I like that you trust me enough to let me make love to you. I've dreamt of this day since I was eighteen and saw you through the curtain undressing, you closed it when your hands were on your panties. I sort of took care of things later that night dreaming of having your breasts in my mouth.\"\n\nShe laughed softly, \"You're a naughty boy Anthony Tesmer, I couldn't see you that night, but inside I knew you were watching and to be truthful, it made me wet and excited. Poor Ozzie, I screwed him half to death and he never knew it was because I was sure I'd given you a show. I feel the same way now that I did then knowing you masturbated thinking of me. But right now, we need to clean up, you're staying with me tonight, we have more lessons to get through before morning.\"\n\nAfter our initial love making session the rest of the night was more lust than love, with her remarking once how lovely it was to have a young man in her bed who could go three times in one night. After a short nap she had me on my back while sitting on my face, I'd seen it in porn flicks so had an idea what to do, it was Miss B's soft tender instructions that taught me how to please her the first time. As her orgasm hit, her pussy was rubbing back and forth across my mouth, my hands went along her sides and played with her tits. \n\n\"Squeeze them a little harder Tony, they like to be mauled, pull my nipples out and lightly pinch them. AHHHH, yes baby, just like that. Tony you're becoming a good lover. Just a little more baby and I'm gonna cum again, lick me a little higher.\"\n\nShe'd no more than said that when she fell off the face of the earth. As she rubbed her clit across my stiff tongue I could feel the girl cum flowing onto and down my chin. I quickly moved my mouth to the entrance of her vagina and got busy devouring the fruit of my labor. I was lapping like a dog, I couldn't seem to get enough of that sweet tangy nectar, pushing my tongue inside as far as I could get it. Her body shuddered one last time as she slumped forward. I lifted her, scooted from beneath her and went to wash my face. \n\nAs I walked back into the room, I noticed she'd turned off the lamp, there was just enough light from the bath night light to see her silhouette, she was on her hands and knees in the bed. When I reached the bed I felt her hand wrap around my dick, then the warmth of her mouth as she slowly moved her head back and forth sideways. Pulling it from her mouth I heard her say.\n\n\"That should make you nice and hard. Get on your knees behind me, find my vagina and put the tip of your penis inside me. Once you're inside I want you to push all the way until your stomach touches my butt cheeks. And another thing sweetie, all this clinical talk ends now, what I need is for you to ram your cock into my pussy as hard and deep as possible.\" \n\nI felt my dick at the entrance as I slowly pushed forward, once the head had opened the soft delicate petals I steadily pushed until my body hit her ass. Letting out a long feral groan she pushed back against me grinding her hips up and down. I put my hands on her hips and began the rhythm of my dick sliding in and out of her sopping love canal. As I would push forward, she would throw her ass against me causing our bodies to produce a slapping sound, sweat was pouring down my face and chest, her juices were literally forming a ring of white lather around the base of my cock. Some had already run down my balls and dripped on the bed. \n\nHer breathing was now heavy and staggered, her hips were bucking softly when suddenly her back bowed up like a cat for a few seconds before that motion reversed and she slammed back into me with a scream. Her body was stiff, she was grunting and muttering under her breath. That action sent me into the strongest climax I'd had so far in my life. My back was bowed as I prepared to drive into her steamy caldron one last time, pushing forward with all the strength I had I buried every centimeter of cock I could into her pussy. My back was arched as I held onto her hips pushing against her, stream after stream of cum shooting inside her. \n\nAs I began to soften I noticed her hips still twitching slightly, seeming to milk my cock, then I felt myself hardening. Soon I was at a full erection and Miss B was gently moving back and forth on my dick. \n\n\"Tony, I could feel every shot your dick sent into me. You're hard again, fall forward with me but make sure you stay inside.\"\n\nAs we fell forward her body hit the mattress and her back arched pushing her pussy upward into me. Oh this was good, not only was I deep, the way her ass was pushed together made the channel to her pussy that much longer providing twice the stimulation. I wasn't going to last long like this, of that there was no doubt. \n\n\"Miss B I won' last long like this.\"\n\n\"I know baby, I want you to go as fast as you want and fill me again. Then we can shower, I'm not about to let that hard dick go to waste. Go ahead and have me Tony.\"\n\nSehe wasn't talking filthy by most standards, but the new seductive sultry Miss B would take some getting used to, even if it wasn't dirty I loved hearing her talk to me like that. I put it in gear and began hammering like a locomotive going full steam, I didn't last five minutes and was growling, her ass was bouncing as she cried out, her vaginal muscles were squeezing as though they had no intention of letting me go. Looking over her shoulder she beckoned me to lay with her. Looking at one another we caught our breath, as we rose from the bed she took my hand leading me to the shower. Soaping and rubbing each other's body we kissed a little but not much more. \n\nCrawling under the covers she pushed tight to my side. With her arm across my chest and her leg across my upper thighs she slowly drifted off to sleep. I lay there for the longest time, thinking, pondering the day and evening. What I had dreamed of transpiring had come to pass, I just hoped she wouldn't tire of me, because I could fuck her forever if it was always like this. In the morning light I looked sideways as I woke to see Miss B smiling at me, she then leaned in to kiss me. \n\n\"Good morning sleepy head, go take your pee and come back to bed, I have another lesson planned.\"\n\nSliding under the covers I tried talking with her. \"Miss B I don't think I can do it again so soon, my balls are working overtime trying to keep up with you.\"\n\nShe put her finger on my lips, \"Shhh, not now silly, later in the morning about lunch time, but we need to talk before we get ready for the day. How we handle this situation will determine how long we can be lovers. I enjoyed being with you immensely and you'll only get better with time. My concern is what the public may think if we're too casual with each other.\"\n\nI thought about what she'd said and answered, \"I want this to go on as long as you want me. I don't care if our ages are an issue, they aren't to me. You tell me what I should do and I'll do it, I trust you Miss B.\"\n\n\"Rule number one Tony, my name is Bea, B E A, Bea. In public you should probably continue calling me Miss B, but in this house or your apartment, in our beds, in our love making I want to hear you call me Bea. It's important to me. Rule number two. We carry on in public as we always have, no holding hands, we'll do arm and arm as usual. Once we're behind closed doors you can strip and screw me anytime you like. Number three. You'll be at work from here on, I'll bring you lunches just like your mom would have and make sure a warm supper is waiting for you every night. I love you young Tony, and though I never in my life imagined we'd be in bed together, I'm glad we are.\" \n\nBy the time we were in bed that night I'd made love to her two more times, the first bent over the kitchen table at brunch time and the second with her on her back, legs spread wide as I pummeled her pussy on the couch. We skipped church the next day, I awoke with my cock in her mouth, I didn't want to cum in her mouth fearing she might not like it, you can imagine my surprise when she not only swallowed every drop but tried sucking me clean after I'd softened. I say tried because I was so sensitive I couldn't take any more and pushed her away. \n\nWe gave our nether regions a reprieve the rest of the day, content with snuggling and necking on the couch. Monday morning she shooshed me out the door early and said she'd see me for lunch. When she showed up she'd brought enough for the three of us, Mr. Morris was happy as a pig in mud and asked if she was going to do the same the next day. At the end of the day I walked into my apartment, took a shower, dressed and walked into her back door calling out, \"Honey I'm home\". Bea came around the corner in a pretty sun dress.\n\n\"Here, sit Tony, let me get you something cool to drink. Apple juice okay?\"\n\nAs she set it down she put her hands on my belt buckle opening it. With my pants open she hauled my dick out, sucking it softly before she spoke. \n\n\"I know your tired lover, so you just sit there and I'll take care of everything.\"\n\nShe lifted her leg exposing her naked pussy, straddled my waist and slid my dick inside her with one long slow stroke. When she hit bottom she stopped, unbuttoned her dress exposing her bare breasts, pulled my mouth to the right one and began grinding on my dick. The more she ground the deeper I went and the louder her whimpers and cooing became, soon it was a series of Uh's and Ah's as she raced toward her reward. Just before she came she began riding up and down sending shivers through my spine. Pulling her nipple free she put her mouth next to my ear.",
        "\"Cum in me Tony, make me yours, screw her like you own her.\"\n\nI growled, \"I do own this pussy, it's all mine.\" Picking up speed and me thrusting into her she smiled and asked.\n\n\"Who owns my pussy Tony? Who does Bea's pussy belong to?\"\n\nI looked dead into her eyes, \"This cunt is mine and mine alone.\" As I shot a day's worth of sperm into her warm spasming honey pot. \n\nWe eventually ate supper after we did 69 in the living room with our clothes half on, half off. We loaded the dishwasher, showered and went to bed. Since we were both awake at 4:30 we ripped off another piece before I went to work. That level of sexual activity lasted almost the entire first week, we were so worn out we decided we had lots of years ahead to try fucking each other's brains out, for now we'd temper things a bit. Our love making and all out fucking happened four or five times a week the first six months, followed by three or four a week after that. There were times we'd go twice in a night or day, but it wasn't the norm nor the goal. \n\nI took over the business seven months after starting, the woman who'd been with Mr. Morris for thirty two years wasn't interested in continuing, she was sixty four and ready to quit the work force. Bea and I talked it over one night while we recovered from a forty five minute session of oral and vaginal sex, reaching the conclusion that Bea would work with me until we found someone suitable. It was also about that time her sister called from Eau Claire, Wisconsin. She was in stage four cancer and dying, wanting to know if Bea would be willing to come live with her so she didn't have to die in some old folks home as she put it. \n\nShe was Bea's one remaining sibling, how could she not go? She packed and we headed for Boise to catch her flight. Our night together in the hotel was sensual, it was also heart wrenching, it would be the first time we weren't near each other since I was ten. We made love twice that night, I dropped her at the airport at five thirty, waving as she went through security, each of us with tears in our eyes. \n\nI'd had an ad in the paper seeking a receptionist over a week with zero results. Like clockwork I went to the VFW for Friday Fish fry, finding a table by myself to be lonely, that didn't last long. Eli and Judith Yoder along with their five kids invaded my space, though the kids were all well behaved, I just wanted some alone time. It was Judith who started the conversation. \n\n\"I'll bet it's lonesome for you without Miss B around, you guys were kinda fastened at the hip. Say, have you found someone for the office yet?\"\n\n\"No Judith I haven't, it's hard doing the sales, repairs and orders in an eight hour day. I miss her like crazy.\"\n\n\"Well, would you consider hiring me, the youngest goes into first grade, I'll be free from eight until three fifteen every day ... and I'm dying to get out of the house after all these years. Don't worry about Eli, he's good with it. Aren't you honey?\"\n\nOf course she caught him with a mouth full of food, he swallowed, \"Yup, I promised her that as soon as Toby was in first grade I'd have no problem with her working, the kids and I will kick in to do more stuff around the house. It'll give her some time away from the herd and some mad money of her own.\"\n\n\"Do you have experience with computers Judith? An awful lot of what you'll be doing is with computers.\"\n\n\"Who do you think takes care of all the farm finances and records? Me. It's all on computer now, I take the upgrade class every summer at the tech. Yes, I'm fine, computers don't scare me.\"\n\nJudith turned out to be an absolute godsend, she knew almost everyone, seldom did someone walk through the doors she didn't know. She worked from the moment she arrived until she left, neither of us had set break times, we took one when we needed it other than lunch which we tried to maintain at noon. Her being able to answer calls and cover the desk while taking care of the other office duties allowed me to sell and repair. Business had increased thirty percent since the time I had taken over completely, much of that having to do with Judith. Bea and I talked every evening, she and I decided we needed to give Judith a substantial raise. She was thrilled to say the least. \n\nBea had been gone ten weeks and we were both so lonesome it hurt to talk on the phone each night. She couldn't leave her sister, she was at the end and it wouldn't be right for Bea to go home. I told Bea to book a room at the Hampton, set it up with hospice care for someone to stay two days and nights and I would fly out to see her. When she met me at the airport it was a long soft kiss, our bodies pressed together. Some smartass walking by mentioned getting a room, she pulled back and told him we had one already.\n\nOur room was relatively close to everything, it wasn't a fancy place, but the hotel had every amenity we desired, including an attached restaurant. We weren't in the room five minutes and she was undressing me, then again, I was doing the same to her. When I got to her underwear I stopped, in front of me was a shy blushing vixon in tiny little panties and a bra that barely covered more than part of the sides and the nipples. My dick had been hard, now it was like a fossilized stone. Stepping back she slowly turned letting me drink in every aspect of her sexy undies.\n\n\"Do you like it Tony? I wanted something other than my old cotton stuff for you, I wanted you to remember me like this so you won't be tempted, we've been apart too long.\"\n\n\"C-mere you little hussy, let me put my arms around this luscious body and taste those sweet cherry lips again. There won't be any temptations, I have all the girl one man could want.\"\n\nI unclipped her bra and let it fall, taking her lovely full breasts into my hands, cupping, kneading, squeezing softly, tugging at the nipples gently. I bent down and sucked both, drawing the nipples and flesh as far into my mouth as I could until she yelped. \n\n\"Softer baby, that hurt a little.\"\n\nI moved my hand to her belly and she instantly spread her legs as I lowered my hand into her tiny panties, sliding a finger along the top of her clit and into the slit of her vulva, wet, oh so wet. I pulled my finger out full of warm thick clear arousal, put them in my mouth and sucked, I did it a second time but put my fingers on her lower lip. She was hesitant and then opened her mouth sucking the fingers in while moaning. I dropped to one knee and slid her panties down. \n\n\"Open your legs a little and push forward with your hips.\"\n\n\"No Tony, take me to bed and have me baby.\"\n\nI lightly slapped her ass, \"Be a good girl and do as you're told. I'll make sure you're thoroughly screwed, several times.\"\n\nWith a smile she leaned into my face, God how I had missed her aroma, sweet and musky, the tiny droplets of liquid that would coat the hair when she was turned on like this. I pushed my tongue and made contact with her slit, then drew it forward until my tongue was on her clit. Distended, hard, throbbing and a deep pink, I sucked as I licked softly, her hands were in my hair pulling me tight to her body. \n\nAs her hips rocked against my mouth her head lolled back, \"Oh Tony, just a little more, I'm gonna cum all over your face. Lick me baby, make me cum.\"\n\nAs I licked I turned her so her back was right next to the bed, it was going to be a strong climax and I knew it. She grabbed my head, pushed into me with all her might and let out a long low, UHHHHH before her legs began shaking. Keeping my mouth on her pussy and my tongue working her clit I pushed her back onto the bed, her legs shot straight up as she ground into my face. She reached a crescendo three times before she pushed me away. \n\n\"Oh my gosh, I came three times babe, I mean three separate times. It wasn't just a big wave that kept overriding the last one, it was three climaxes. Oh my, that was a first for me.\"\n\n\"Only three huh? I was kinda hoping for five or six.\"\n\n\"Anthony, you are a sadistic bastard, that many in a row would kill me. Lay down so I can give you a blow job.\"\n\n\"Bea, I don't want a blow job, if you wanna suck me hard okay, but I want to be buried inside you every time I cum this weekend.\"\n\n\"But Tony, I wasn't there for your birthday, at least let me give you a birthday blow job.\"\n\n\"Here's the deal Bea, after you're home you can suck me as often as you want, but this weekend I get all the pussy we can handle. Okay?\"\n\nWe then made slow soft love, grinding away for over thirty minutes before the rockets went off. After showering and changing we had a light dinner and crashed early, sleeping in each other's arms all night. I woke to her sucking me hard, she knew I'd use it and did, having her lay on her tummy with a pillow under her hips. A position we absolutely love, it's deep for her and extremely satisfying for both of us. We cleaned, changed and went to the mall. \n\nAs we ate lunch in the food court I was watching one of those digital advertisement boards that changes every three or four minutes. An ad for Victorias Secret came and I stopped eating as I watched it, I did the same the next time it came around. This time Bea turned to look, smiling back at me. \n\n\"That turns you on doesn't it? Admit it, you think a woman dressed in lingerie looks sexy. Should I dress like last night for you every day? Do you want me to shave for you? That seems to be the trend.\"\n\n\"No Bea, don't shave, I like you as you are. If you wore sexy panties and stuff I wouldn't say no, but you don't have to, I don't want you to think I'm turned on because you're wearing lingerie.\" \n\nLaughing at me she nearly spit her food. \"Tony, if seeing me in my cotton granny panties and worn out cotton Penny's bras makes your dick hard, I'm not worried about lingerie taking my place. It's obvious that my body is what excites you. I'm getting some of those things, you like them, I'm going to wear them, case closed.\"\n\nLeaving the food court we went directly to Victoria's where she made me help pick out combinations she thought I'd like. Standing in front of me with her hand behind on top of my dick she would determine which one to buy. If my dick twitched or jumped it immediately went on the purchase stack. The young sales gal asked if this was Bea's first lingerie, to which Bea nodded. Leaning close to Bea she whispered. \n\n\"The mall across town, little shop called Bev's Bloomers, you'll find more of what I think you want there.\" \n\nAt Bev's Bea found exactly what she wanted including French silk stockings and garter belts, an assortment of thigh high stay up stockings and several bras that supported while still being sexy. There were similar items at the other shop, but Bea preferred these. It was mid afternoon by the time we got back to the hotel room, Bea quickly washed a pair of silk bikini panties in the bathroom sink and hung them in the bathroom to dry as we took a nap. She wanted to wear the new panties to dinner under her dress along with a sheer bra she'd picked up, it was very thin and didn't do much more than keep her breasts from swaying as she walked.\n\nOur dinner reservations were for seven and the panties weren't completely dry at six, Bea adapted and used her blow dryer on high to finish the job. As we walked down the hall arm in arm we got several stares and a wolf whistle to which she reached back and flipped the hem of her dress slightly. The dress had a fit bodice and flaring skirt that stopped just below mid-thigh. Bea was wearing her signature two inch gold hoop earrings, a Ruby necklace I'd bought her, sheer stockings with a black garter belt and three inch spike heels. \n\nOn the elevator she pushed into me as we kissed. \n\nShe was chuckling nervously as she spoke, \"My God Tony, the way I'm dressed I feel like a whore. Can I be your whore baby? Will you be my protector and not let anyone bother me or dance with me? I'll give you lots of pussy if you agree. Can I be your whore lover boy?\"\n\nMy back was to the door as it opened letting an older couple in, we were glad we hadn't been feeling each other. Turning I stood next to Bea, dropping my hand alongside and cupping her ass softly. The older lady looked in my eyes, then at my hand and back to my eyes. As the door opened she winked, slutty old thing, she was probably hoping some younger guy would take her over the moon one last time. We had been seated about ten minutes when the older couple from the elevator were seated at the table next to ours. As they sat, she asked if we were newlyweds. Bea nodded yes and the old lady grinned from ear to ear. \n\nHer older gentleman friend got up to use the head and as he did she leaned toward Bea. \"What's it like having a young one dearie? Is it as exciting as they say?\"\n\nBea beamed, \"Oh, much better, sometimes he can go three times in one day. He wears me out, but I manage to keep his balls empty.\"\n\nThe old gals smile was wider than life itself, \"I knew I made a mistake dating Rupert, he can't get it up even with pills. I'm going to contact that young fella who just joined the retirement village, he asked me out but I'd already told Rupert I'd go out with him. The new guy is only 66, I'll bet he has a lot of spunk left in him.\" \n\nWe nodded and attended to our meals which had just arrived, walking past their table as we left, she took Bea's hand and softly said, \"Take a stroke or two for me dearie, it's been a long dry spell.\" \n\nWe barely made it across the lobby before we broke into convulsive laughter on the elevator. Bea pressed herself into me.\n\n\"So what do you think lover, do you have an extra stroke or two for your personal whore to please the old gal? Or is that asking too much?\"\n\nI grabbed her ass as I ground against her, \"You are gonna get so fucked tonight you little whore.\" Then I got serious, \"I love you Bea, this is only role play. Right?\"\n\nShe stroked my face, \"Yes Tony, it's role play, but it's a role I like playing with you. Your personal slut, your house whore, the one who satisfies every sexual need you have.\"\n\nWe had the room booked for that night and the next, we enjoyed every single minute we had. The only time we left the bed was to eat room service food, use the bathroom, shower and let them change the sheets. I asked Bea if she wanted me to see her sister, which she did not. It would be a few weeks now, her sister looked dead already, she didn't want me to see her. As we walked across the lobby on the way out we ran into the older lady from the elevator. She stopped us and asked Bea. \n\n\"So, was it a good weekend?\"\n\nBea looked at her, smiled and told her, \"You really enjoyed the strokes I took for you.\" \n\nThe old gal chuckled and mumbled something about getting some KY and being laid when she returned home. Bea's sister lasted another two weeks, since Bea was her only living relative she remained another two weeks to take care of all the probate issues. The day she returned she began cooking as soon as I had her bags in the bedroom, she was going to make a meal for her man, he was going to need the energy. Following supper the very first thing she did was change into a sexy outfit that barely covered her. \n\nI was told to take off my clothes and sit on the love seat, which I did. Bea sank to her knees, put a pillow under them, leaned forward and took my cock all the way into her mouth. As it hardened she could only get two thirds of it in, she told me later she liked it soft or semi hard so she could get it all in her mouth. She gave me a ball shattering blow job, my legs were straight out and stiff as fence posts, I was bellowing and groaning like a bull in a pasture full of heifers in heat. She swallowed every ounce. An hour later she was sucking again, as soon as I stiffened she straddled me and sank down my pole all the way to her ass cheeks. That would be the second of three loads she coaxed from my balls before morning. \n\nAt church we looked prim and proper, me talking with the men about chain saws, lawnmowers, snowblowers and whatever the topic was. Bea had on a very conservative longer peasant kind of dress and looked the part of miss wholesomeness. I had watched her dress and knew she was wearing a pair of tiny panties that barely covered her mound, a garter belt with silk stockings and a bra so sheer it was as if nothing existed. At brunch she teased incessantly telling me how much fun she was going to have undressing in front of me, watching my dick get hard and then having me take her from behind. She'd been home less than two weeks and I was damn near worn out, apparently it caught up with her as well, we chose to scale our sex back to three or four times a week once again. \n\nThe business had been in my name a little over a year by the time Bea got home in the spring, we spent the summer months seeking a dealership franchise, we were able to land it late summer which instantly boosted sales. I hired a mechanic to help me, a younger guy out of tech school. He had a good attitude and fit in well. With him to help me and Judith to run the office life was looking good.\n\nWe were at the grocery store together when the new minister walked up to us, Bea's arm was through mine as we read a label and talked about whether to get a new item or not. We thought it was a chance meeting, only to find out it wasn't. Stopping in front of the cart he tried that plastic smile people give you when they're about to screw you over. Bea spoke first, \"How can we help you reverend?\"\n\n\"It's been brought to my attention the two of you are entirely too familiar with each other, you're always holding his arm, going to places together, eating some of your meals together. It needs to stop.\"\n\nI was ready to tell him to go fuck off until Bea held her hand up to stop me. \n\nGiving him her dirty bird look she began, \"You know rev, I can tell you exactly who said those things, Agnes, Mary Lou and Belle. Those three dried up hags have nothing to do but point fingers and create discord. Anthony here has been by my side helping me since my husband died and Anthony was still a boy. Yes, we have meals together, yes he takes me shopping and he takes me to the beauty salon every other Saturday. You're fairly new in the congregation so there's room for you to learn the truth, but sonny, if you ever point your finger at me again, I'll break it off and shove it down your throat. Now move your skinny butt out of our way.\"\n\nAs she pushed forward he quickly scampered out of the way. That Sunday Bea made a big show of sitting close to me, whispering nothing in my ear, laughing when I said nothing, making sure the three old biddies saw everything. On the way out we stopped next to the three hags.\n\nBea stared them down, \"You girls get your eyes filled this morning?\"\n\nShaking hands at the door we told the young pastor we wouldn't be returning, there were other churches in town to attend where we would be welcomed and not ridiculed by dried up little old ladies. Bea wished him luck, telling him he would surely need it. They had him out the door in less than six months, I felt sorry for the kid, all he wanted to do was serve God, unfortunately they don't have a course on dealing with manipulative old hags in Bible School.\n\nIt was in late September of that year the school contacted Bea. The teacher who had taken her place had been rock climbing and fell, she lived but would be off her feet for months. They wondered if Bea would consider teaching until someone could be hired on a permanent basis. We talked it over and she reached this conclusion. She would take the position but only if they signed a year contract, she would have the seniority she left with and she was doing no extra's after school, she'd put in her after hours activities years ago. Since she'd be done every day at four and I didn't usually get home until five or right after our home life had very little disruption. ",
        "If she was having someone over in the evening I would have supper, bid them goodnight and go to my apartment, for all intents and purposes we lived separate lives other than meals and things we'd always done together. If there was a reason I shouldn't come over she would put the deck light on and I'd stay busy until she contacted me. \n\nWe'd been living like this for a bit over four years when she met a guy named Bill at the coffee shop. He was a few years older than her and a retired school teacher as well. At first it was strictly platonic, she'd talk about this or that and he'd add to it. In the evenings I sensed she was conflicted but wasn't sure how to approach it. For you see, I'd met a young lady as well, Judith's youngest sister. There were seven girls and three boys, Estelle was the baby, and at 25 she was also the cutest. I'd met her on a day when Judith's car was being worked on and Stell picked her up after work. \n\nWe talked for five minutes while Judith shut down the systems and got her coat. I was instantly smitten by this red headed beauty, I had never cottoned to red heads in the past, but this one ...this one sent me head over heels. The next day Judith told me her sister talked about me all the way home, wouldn't shut up. She told me I'd done a job on her, I told Judith she'd done a job on me as well. That night as Bea and I lay with each other after making love I made the decision it was time to talk.\n\n\"You really like Bill don't you. He seems kind and attentive, skin color doesn't make a difference to him. Do you think you would be happy with him?\"\n\n\"He's very good to me, always a gentleman like you. Yes, I could be happy with him, but what about you Tony? We've been lovers almost five years, won't something like that hurt you?\"\n\nI pulled her in a little tighter and kissed her. \"Do you recall the first time we made love? You told me you were a big girl and knew what you wanted, we're big people Bea, we both knew our affair would not go on forever. I haven't asked her out yet, but I met Judith's youngest sister a few weeks ago. I like her and according to Judith she likes me. I want to pursue a relationship, but I don't want to hurt you.\"\n\nWe laughed before Bea spoke. \"Here we are both worried about the other, I agree with you Tony, we are big people and I think we should pursue this. If it works out we'll stop making love, I don't want to be two-timing anyone and you need to focus all your energies on her. Until then, I think you should take me once more tonight, on my tummy, ass in the ar.\"\n\nAt the three month juncture both relationships had begun to materialize. Bea and I were still making love at least three times a week, realizing it would end soon if things continued as they were. By the time we'd been seeing our dates six months we were down to twice a week, just enough to keep our horns trimmed. Bea told me she and Bill were becoming more intimate, lots of petting and kissing, she was ready for him to climb between her legs. Stell and I were at the same place in our relationship, we were ready to make love.\n\nWe had finished our regular fish fry with Bill and Estelle along, parting ways after the meal. Estelle and I went to my apartment where we were in a heavy make out session, it ended up with me going down on her before I took her home. She wanted to reciprocate, I told her very soon, I wanted to please her and there would be plenty of time for a blow job later on. Apparently Bill had done the same with Bea. As she and I sat on the love seat in the dark sharing a beer we made the decision we'd been looking forward to and dreading at the same time. Tomorrow night would be our last time together. From that point forward we would be friends, we would no longer be lovers. \n\nHere we were, the final time together. She'd just told me take my clothes off, I stood there watching her undress like so many times before. The lady who had been in plain jane undies the first time I saw her was now in a pair of sheer light blue panties and a matching bra, sky blue colored fishnet thigh highs and her signature hoop earrings. Once naked she sat on the bed, as I approached, she reached out for what she called her favorite boy toy, sexily putting her lips around the head and sucking softly as she buried it in her mouth. \n\nA few minutes later she let loose and scooted onto the bed, arms open beckoning to me, legs open waiting for her prize. I was going to lick her, she stopped me. \n\n\"You don't need to lick me Tony, I'm so wet I need a diaper. Put it in and make love to me Tony, slow, easy, make our last time the best it's ever been. We've had something very special Tony, let's end it in a special way as well. Come lay between my hips baby, let mama cradle you in her love valley as you sink that monster in my horny pussy. No matter how old we get or who we're with, know that you'll always own my pussy. Now make love to me.\"\n\nWe spent ten minutes on her back, another seven or so in doggy, then on her tummy where she wanted me to finish. I stopped and told her I wanted to finish on her back, us watching my beige colored cock sliding in and out of her chocolate brown pussy one last time. \n\n\"I'll miss seeing that contrast Bea, to me it's so erotic, so sexy, so hot, so like you. Let's try to cum together, I want to be looking into your eyes when we cum.\"\n\nShe nodded and smiled as she looked down. We watched ourselves fuck for another three or four minutes when we both started to tighten, her pussy was squeezing me, my balls were beginning to tighten. \n\n\"Yes Tony, yes. I can feel you swelling, cum in my pussy baby, give me the last load. Hurry honey I'm there, shoot baby shoot. AHHHHH.\"\n\nWe had somehow managed to time it right, both of us going over the edge at the same time. Other than her one loud AHH there was little that came out of our mouths but hisses and groans. Our bodies shook though, her hips were bucking up and down, my body kept slamming into her, her Kegel muscles milking every ounce from my dick. We slept like that until I plopped out, waking us both. After washing she put on a pair of cotton panties I hadn't seen in a long time, we covered up and slept until about six when I went to my apartment. \n\nBill picked up Bea just before church, I picked up Stell and met them there. At one point after the service both Bill and Stell excused themselves to use the restroom. Standing next to Bea I smiled a knowing smile. Talking low enough no one else could hear. \n\n\"So which panties are you going to tease him with today? The red silk ones or the peach colored?\"\n\nShe smiled and winked, \"Neither, I still have on the old cotton pair from last night, I want your sperm in me as long as possible. I kind of like the fact that the seed of my lover is still in me. I'll shower tonight and let him eat me again tomorrow night when I wear the sexy sheer blue ones you like so much.\"\n\nI looked at her with a smirk, \"You slut.\"\n\nHooking her arm through mine she leaned her head against my shoulder, \"You made me this way stud. Here they come, let's go to brunch.\"\n\nBill and Bea were the perfect pair, they enjoyed everything they did and especially liked that it was with each other. Estelle and I made love a week later in my apartment, as I we walked out to take her home I noticed the deck light on and Bills car in the driveway, chuckling I climbed into my truck. I stayed at Bea's another two months before Estelle and I moved into an apartment together. Stell is talking about a baby, we're being married in July and she wants to be pregnant by September. I guess we'll be in bed quite a bit. \n\nWe run into Bea and Bill nearly every Friday, sitting at the same table at the VFW. At times my eyes will meet with Bea's, a special sparkle seems to emit when our eyes meet. We always smile a sincere smile, there are no regrets, we've kept our time together between us, there's no need to bring it up. We're in monogamous relationships, what happened before that is no one else's business. \n\nI was 54 when my sweet black lover passed on at 81. She and Bill never married but lived together until their deaths. My wife and our six kids attended her funeral, in fact our two oldest boys were pall bearers. Estell and I lay in bed talking after that sad arduous day.\n\nShe spoke, \"You and Miss B were lovers, weren't you? Everybody in town suspected it but nobody ever had proof. I don't mind at all, I figure I've benefitted from all she taught you. I asked her once and all she said was to ask you. So, were you lovers?\"\n\nI pulled her into my body, kissed her deeply while I slid my hand into her panties finding her soft curly nest. She whimpered as she relaxed and spread her thighs, my finger was inside her in seconds, followed by her panties hitting the floor and my dick being buried deep. We finished with her on her tummy.\n\n\"Tony that isn't fair. You didn't answer me, you only screwed me, which I liked, but I'd like an answer.\"\n\nI kissed her again holding her tight, \"A gentleman does not kiss and tell.\"\n\nAnd then the wrestling match began."
    ],
    "authorname": "R410a",
    "tags": [
        "neighbor",
        "neighbour",
        "interracial",
        "romance",
        "romantic"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/driving-miss-bea"
}