{
    "title": "Jason's Best Canoe Trip",
    "pages": [
        "Author's note: This is my submission for the 2021 Nude Day Contest. It's a bit long because I'm seemingly incapable of keeping any story short, but still a fairly smooth read. If you like it, please consider voting for it. Everyone in the story is at least 18 years old and the story is entirely fictitious. Any similarities to real people or events are purely coincidental.\n\n***\n\nIt was a Friday afternoon in July and I was driving a familiar route through rural southern Missouri, making the annual pilgrimage to my favorite river for a weekend of camping and canoeing. As I hugged the centerline of the two lane highway, leaning my Jeep into the ever present curves, and gritted my teeth through the nauseating up and down of the hilly countryside, I daydreamed about past trips to the same destination.\n\nThe river, along with a half dozen others in the region, had been the stage for some of the best times of my life. In recent years, my appearances there had occurred infrequently and with relaxation as my primary purpose, but that hadn't always been the case. During my college years, I took part in two day floats multiple times per summer on the more party-oriented rivers of the region as part of large, coed groups. My best river days, though (the really memorable ones), came later, during my mid to late twenties. The majority were spent on the very river to which I was headed.\n\nAfter college and a few years spent overseas in the Army, I returned to my hometown, Kansas City, and became a police officer. For the remainder of my twenties, I was a night shift street cop in a high crime area. Obsessed with the job, I worked too much and took too little time off. Like most cops, I wound up only socializing with other cops because nobody else understood us or our crazy schedules.\n\nI became pretty close with some of the other guys on my patrol squad. We were of similar age and stage of life. Our schedule gave us the same days off, including every other weekend. It seemed only natural that we spend many of those days off together. A couple of them were veteran river rats like me and we soon indoctrinated a few others. Before long, most of our summer weekends off were being spent on or near a river. That pattern persisted for several years.\n\nThere were many aspects of canoe trips that appealed to me. The rivers and campgrounds provided a chance for me to enjoy the outdoors, the camaraderie with my friends, and my habit of drinking beer by the case. My outgoing personality thrived in the party atmosphere of the area. More importantly, though, the environment gave me the opportunity to practice my favorite pastime of that age: chasing women.\n\nThat was before internet dating was a thing. For the most part, you had to meet people at work (not generally a good option for cops) or at social events. Being a terrible dancer and boring dresser, I wasn't always a hit with the ladies at bars and clubs in the city. I was, however, tall, reasonably handsome, in great physical shape, and a fair conversationalist; all traits that played well on a float trip. Accordingly, I was popular with the fairer sex in that environment. Rarely was I spurned by a girl during a float weekend. It followed that many of the most memorable conquests of my single life happened on those float trips.\n\nWe stayed at the most party-friendly campsites, camping overnight Friday and Saturday with an all day float in between. The river itself could usually be counted upon to host all types of drunken debauchery, but the party didn't begin or end there. An open-air bar and dance club was within walking distance of our favorite campgrounds and we generally spent at least one of our nights patronizing it. Women of all ages in pairs and groups abounded. They were often scantily clad and well liquored. It was an idyllic setting for socializing, making new friends, and hooking up with women.\n\nIt wasn't all about sex and we certainly didn't get laid every time out. Some of my best memories were of purely platonic interactions with awesome girls or mixed groups whose company I genuinely enjoyed. That being said, sex was one of the signature features of those outings. Not only was it rarely in short supply, the quality trended toward the spectacular (for me, anyway). As I pondered some of my most cherished riverland sexual exploits, it occurred to me that they were pretty impressive feats, even without the embellishments I had often added when telling the story in later years.\n\nI had once talked a smoking hot waitress at the club into having sex with me in the men's room. Lifting her skirt, I bent her over a toilet and did her from behind in a filthy stall. We got so into it that we broke the stall, one wall crashing down on the floor, yet we kept going until we both finished, guys doing their business at urinals right next to us all the while. I got high fives, handshakes, and free drinks around the club the rest of the night from guys who had witnessed the show and were impressed by my accomplishment.\n\nAnother time, a game of 'Truth or Dare' got out of hand and a well built sorority girl accepted a dare to have sex with me on my camp chair next to the fire at our campsite. She took off her shorts, pulled out my dick, and impaled herself on it while a dozen people looked on. We went at it for at least twenty minutes while the others in our group either casually watched or continued their own conversations with indifference toward us.\n\nThese weren't just run of the mill hookups, they were like unrealistic porno movie scenes that actually happened. And there were many other, more tame and less story-worthy, encounters that were just as enjoyable.\n\nAlong with the flood of good memories coming back to me, there was one that was less pleasant, that of a sexy blonde from Arkansas named Jamie who was immune to my charms. Smart, classy, and fun, in addition to being beautiful, she and her friends camped next to us one weekend. I was completely smitten about ten minutes after meeting her, but my interest wasn't reciprocated. We hung out together most of the weekend. Despite my every effort to impress her, I never received more than polite tolerance from her, my status as the lady killer of the riverlands be damned. The memory of that epic failure haunted me for a long time.\n\nAs I replayed that experience in my mind, it occurred to me that fortune had played as big a role in my conquests as had any of my skills or qualities, real or imagined. A fair evaluation of me at that age, with the benefit of hindsight and maturity, revealed something less than the great catch I had thought myself to be. Young me had a little too much testosterone, drank way too much, and talked about himself too often. The tales of my heroic police exploits with which I used to regale anyone who would listen lost much of their luster in retrospect. That I had seldom slept alone on a canoe weekend back then had to have been at least partially due to dumb luck or women with low standards, I thought, grinning to myself. Jamie had simply been too good for me. The more mature version of me could live with that, but young me never could have.\n\nAfter giving my attention to the road while negotiating the tricky passing of an old guy in a farm truck, I glanced at myself in the rearview mirror. A couple of months shy of my 41st birthday, I didn't look nearly as different from younger me as I felt or acted. My dark, close-cropped hair had a few speckles of gray in it, but otherwise I might have passed for having had many fewer birthdays than I'd actually had. A strict diet and workout routine kept me trim and fit, if not quite as lean and chiseled as in my heyday. Had it interested me, I could probably have still landed a lady or two in one of those campgrounds.\n\nOf course, it didn't interest me anymore. Seven years of marriage followed by three years of nearly dateless divorced life had passed since my woman chasing days. I had a four year old daughter and a six year old son who were my top priority. Night shift policing had given way to a banker's hours investigator gig with the federal government. Everything about my life was different and I was different as well.\n\nThe float to which I was en route was the only thing that brought me back to the river anymore. An office-organized, annual event with my coworkers, it bore little resemblance to the floats of my younger days. We didn't camp at a party campsite and we only floated half the distance of the full route. For the most part, we steered clear of the young partiers out on the river. Coming for relaxation rather than rowdiness, we probably would have chosen a calmer river entirely except that we wanted one with little or no kids on it. Our group was usually all couples, though I was the oddball flying solo that year, due mostly to my lack of effort at securing a date.\n\nThough the river itself hadn't changed much over the years, my recent river adventures were nothing like those from my past and that was fine with me. Those were good times with good friends and the memories would always be fun, but the only thing I truly missed from back then was the sex. I still craved it, though not as rabidly so as in my youth. In recent years, sexual encounters of any sort, much less bold or adventurous ones, had been few and far between for me.\n\nAs I exited the highway, taking the gravel road leading to the campsite, I ended my trip down memory lane and focused on the present. I was looking forward to spending some time with my coworkers and their wives. We all worked individually from our homes and didn't meet often in person, giving these social outings added value. This trip had been a great bonding experience in the past and this year should have been no different. Over and above all else, including my genuine eagerness to socialize with friends, was my desire to be out on the river alone, at least for intermittent stretches. The potential peacefulness offered by canoeing solo held an appeal that put a smile of contentment on my face during the last few bumpy miles.\n\n***\n\nA couple of hours later, my favorite coworker, Andy, and I were hard at work erecting our tents, racing against the fading daylight. A half dozen or more tents, belonging to the members of our party who had arrived earlier, were already in place about the campsite. After my arrival, I had lost track of time while catching up with everyone and got a late start on construction of my little dome. Having just arrived, Andy had a better excuse for not having his tent up yet.\n\nA short, stocky former Marine with a quick wit and a dry sense of humor, Andy had begun the job the same year I did and we had gotten along well from the start. He was a few years younger than me, but had kids in the same age range as mine. Unlike me, he was still married, but only barely so. He and his wife, who was along for the trip but off scoping out the restrooms at that moment, hardly tolerated each other.\n\n\"Where are Ted and Sharon? They're coming, right?\" I asked him.\n\n\"I got a text from Ted a while ago. They got a late start out of the city and don't expect to be here until after dark,\" he replied.\n\nProbably in his mid fifties, Ted was one of the longest serving members of our office team. He had been a mentor to newer investigators like Andy and me when we came on board and was universally well liked and respected. He and his wife, Sharon, were conservative and religious, though not to the point that it wasn't fun to have a beer with them. Fairly prim and proper, they were not the outdoor type and always seemed a bit out of their element on these floats.\n\n\"That's gonna be fun, setting up their tent in the dark,\" I observed, sarcastically.\n\n\"No shit!\" he agreed, chuckling. \"Uh, also, I almost forgot to mention it, but they're bringing their daughter with them. Ted was thinking she could ride with you on the river.\"\n\n\"What the hell? Their daughter?\" They had more than one daughter: three, if I was remembering correctly. I had met them all at one time or another, but didn't remember much about any of them. The oldest one seemed most likely to be the one accompanying them. The other two were too young. \"Their oldest? What is she, early twenties? Ellie? Is that her name?\"\n\n\"I don't think she's even that old. Can't remember her name.\" He shrugged his shoulders. \"Anyway, I thought you might not like the idea, but I figured I'd let you and Ted argue about it. You are the only one without a canoe partner and I doubt she's competent enough to manage her own canoe.\"\n\nAndy was right to assume I wouldn't like it. If my memory was accurate, the girl in question was a quiet, bookworm type just out of college--not likely to mesh well with me after several beers. The last thing I wanted for my weekend was a buzzkill tagalong whose presence would require me to watch my language and manners. Even so, I could see that I might have to get used to the idea. From the sound of the situation, her riding with me was going to be the only sensible arrangement. I would come off looking like a selfish jerk if I refused.\n\n\"It might be the only thing that makes sense,\" I admitted, with a sigh.\n\nThe topic of conversation changed to war stories from our military days and that carried us through the completion of our work and the onset of darkness. Eventually, reluctantly, we broke it off and turned in for the night. Eager for the following day's float, I was out the minute my head hit the pillow.\n\n***\n\nI awoke in the morning five minutes before my alarm was set to go off. As I rummaged through my stuff and dressed for the day, my six foot, four inch frame cramped in the confined space of my little dome tent, my spirits were dampened by memories of the previous night's conversation about Ted's daughter. Try as I might, I still couldn't think of any way out of accepting the unwanted passenger without looking like an ass.\n\nI had been awakened by the noise when Ted had finally arrived during the night, but only partially so. My memory of his arrival was foggy. However, I vaguely recalled hearing his voice not far from my tent, along with two different women's voices, conversing as they set up their tent. That memory dispelled any hope I previously held that maybe Andy had misunderstood the situation or something.\n\nAfter a quick walk to the restroom, I returned to the campsite to find Ted and Sharon sitting in camp chairs near the fire, sipping coffee. After we exchanged hellos, I dragged my chair over to join them. We made small talk about work, the weather, the drive down, and such. All the while, I was wracking my brain for a clever way to beg off from hosting their daughter for the day. That effort came to naught, though. When Sharon finally broached the subject, I still had nothing.\n\nHaving just asked me about my relationship status and commented about my being alone on this trip, she segued perfectly into what sounded like a rehearsed spiel. \"So, Jason, it's kind of convenient that you're alone this year. You see, we brought along a third wheel, leaving us with an odd number.\"\n\n\"Emily came down with us,\" Ted added, with excitement in his voice. \"She wanted to spend some time with us before heading back to school next week. We figure she's old enough now to handle this crowd.\"\n\nEmily? That name didn't ring a bell with me. I could have sworn her name was Ellie. School? I just knew she had already graduated from college. Ted had proudly shown me dozens of pictures from her graduation. He was talking about her as if I should remember her. I had lots of questions, but was leery about asking them and proving that I hadn't paid attention the first time he told me, whenever that may have been.\n\n\"We invited her along without really thinking about how the canoe pairings would work out,\" Sharon continued. \"Then, when we heard you were coming alone, we thought it would even things out perfectly if she just partnered up with you.\"\n\n\"She's pretty outgoing, you might just enjoy her company,\" Ted said, with a hopeful smile. That wasn't how I remembered her.\n\n\"I don't imagine having a pretty young lady as your hood ornament for the day will be too much of a hardship for you.\" Sharon flashed a conspiratorial grin. Did she really think of her daughter like that? That definitely wasn't how I remembered her.\n\n\"What do you say? Any objections?\" Ted asked.\n\nI was a bit confused and I had plenty of objections, but none that I wanted to say out loud. It wouldn't kill me to hang out with their mousy daughter. \"No. Not at all. That's fine. She can hop in my boat. Sure.\"\n\n\"Great. Thanks buddy. Hopefully she'll get up and around soon. Teenagers...always hard to get them out of bed in the morning,\" Ted said, shaking his head and glancing toward their tent.\n\n\"Yeah. I know. Haha.\" Teenagers? I had to be missing something. Maybe they had brought one of their younger girls. That possibility was unsettling. Babysitting a kid might be even worse than hanging out with the boring young lady I had been picturing.\n\n***\n\nTwenty minutes later, I was giving my gear a once over in preparation for heading out to the float. Out of habit, I always ran through a checklist like I had before missions in the Army or tactical operations in my police days. Though the nature and purpose of this gear were laughably different from those for which the habit had been developed, I still found comfort in the process. Besides, old habits die hard.\n\nMy cooler was perfectly fitted out with 18 beers and six bottled waters packed in plenty of ice. The beer was all in cans because glass bottles were forbidden on the river. Though I generally preferred bottles, cans brought the advantage of being easily stacked, which appealed to the organization nerd in me and allowed for an impressive quantity to be stowed in the medium sized cooler.\n\nMy white Kansas City Chiefs t-shirt, green military police baseball hat, blue swimming trunks, and black water socks made for an awkward looking and uncoordinated ensemble, but I didn't care. I wasn't trying to impress anyone. Everything else I needed was in my dry bag, a watertight rubber sack for protection of sensitive items on the water. A simple lunch, sunglasses, multitool, sunscreen, credit card, cellphone, and car keys made up the full inventory of its contents. Cooler in one hand and dry bag in the other, I was ready to hit the water.\n\nAs I smothered the campfire in preparation for stepping off toward the embarkation point, I heard the zipper on Ted's tent and looked up, eager to size up my companion for the day. The tent door unzipped halfway from bottom to top and a head of blonde hair popped out, top first. Two tanned and well muscled but feminine arms came into view next, their owner crawling out of the tent behind them on hands and knees. Her hair, in a thick ponytail, dangled down, obscuring her face. Below the wavy mane, two shapely breasts hung, restrained by a black bikini top and swaying slightly with her motion. After crawling until most of her was outside the confines of the tent, she transitioned gracefully from crawl to walk in one smooth, effortless motion. She paused and looked around, taking in the campsite and its surroundings. I was fairly dumbstruck by her appearance and took the opportunity to look her over while she wasn't paying attention.\n\nShe was petite, standing maybe 5'2\", but powerful looking. My eyes were drawn first to her toned, muscular thighs, protruding from a pair of tight jean shorts in the short-legged but high-waisted style popular among young millennials. Upward from there, sculpted abs led to perky breasts and strong shoulders. There was lots of exposed skin, all of it tanned and smooth. It was a classic gymnast's body, though it boasted more feminine curves than most bodies worthy of that description.",
        "As impressive as her body was, her face stole the show. Large, expressive, blue eyes bracketed a cute nose, the left nostril of which was pierced with a small diamond stud. Full lips surrounded straight rows of gleaming teeth, all set above a delicate chin. Light freckles were scattered across the bridge of her nose and her upper cheeks. If that face had any flaws, I couldn't see them.\n\nThis was Emily? How could I have failed to remember her? I was even more thoroughly confused than before, but feeling better about the prospects for my day. She looked young, but not jailbait young, and she was as attractive as any woman I'd ever seen. Even if she sucked in every other way (which was possible, I reminded myself), at least I would be looking at some nice scenery toward the front of my boat all day. Turning away from her, I pretended to be occupied with packing my cooler before anyone could catch me staring.\n\n***\n\nLess than a half hour later, our group, eighteen of us in all, stood in a gaggle near the riverbank at the shove off point. Our campground was at the beginning of the scheduled seven mile float route. We would put in there, within sight of our tents, and get off the river at another campground downstream at the conclusion of the float. Then, we would bus back to our campground on one of the retired school buses operated by the campgrounds for that purpose. Along with 50 or so others, we waited as a couple of young men who worked for the campground wrangled canoes off a trailer and lined them up along the shore.\n\nTed took the opportunity to introduce me to my boatmate for the day. \"Jason, this is Emily,\" he said, as both of them approached me.\n\n\"Nice to meet you,\" I said, reaching out to shake her hand.\n\n\"We've met several times before,\" she corrected me, taking my hand in a soft but firm grip. Her eyes were mesmerizing up close. She fixed mine with them in a kind of intimidating way.\n\n\"Yeah. I...uh...thought I had met all of Ted's daughters, but couldn't remember exactly.\" I was thrown off guard and did a terrible job of hiding it. My face felt flushed. I didn't like being put at a disadvantage so easily by someone so young. Adding to my discomfort was ongoing confusion about how I could possibly not remember meeting her. Had we met when she was significantly younger and didn't yet look like she belonged on a magazine cover?\n\nGripping my hand for an extra second or two before releasing it, she held my gaze, seeming to enjoy my discomfort for a moment before letting me off the hook. \"It's been a few years. Not surprising you don't remember. Anyway, thanks for letting me tag along with you today,\" she said, amiably.\n\nI recovered my composure and set about asking questions that would rectify my lack of knowledge about Ted's daughters. It turned out that the oldest, at 23, was named Ellie, like I had thought. She had recently graduated from college and was the only one I had remembered from before with any accuracy. Emily, 19, was the middle child and the youngest, Erin, was 16. The younger two were a little older than I had imagined with my spotty memory. With that all straight in my head, at least I wouldn't be caught looking so stupid in any future conversations about them.\n\nEmily was soon to begin her second year as a student at the state university. She was a scholarship athlete, having been a cheerleader the previous year before being accepted on the school's prestigious dance team for the coming year. None of that was surprising, given her appearance. Apparently, she was a pretty good student as well, to hear Ted gush about it.\n\nOur introductions accomplished and the canoes ready for us, we made our way to the shoreline and picked our vessels for the day. I selected one and went about securing my cooler on the deck just in front of the rear seat with bungee cords. Once that was accomplished, I buckled the dry bag to a support bar that ran across the waist of the vessel. When both containers were locked down, I looked up and found Emily standing next to the boat, obligingly waiting for my direction.\n\nLike her parents, she looked just a little too refined for the setting. She stood ramrod straight with perfect posture, legs together and arms crossed politely at the wrists down near her waist. Her skin and features looked unnaturally flawless, like she was a well-crafted doll. The only sign that she wasn't too prissy for the river was that she appeared to travel lightly, though it was hard to say if that was driven by simple needs or naivety regarding what might be needed. She wore only flip flops, jean shorts, and a bikini top. All she carried with her was a cellphone, a water bottle, and a tube of sunscreen. I crossed my fingers mentally, hoping that I wouldn't be listening to her whine later in the day when she started needing things she hadn't brought.\n\nI helped Emily get situated in the bow seat and put her phone in the dry bag. After collecting a pair of paddles from the canoe trailer, I shoved us off and the float was underway. It was about 10 AM. Our float plan, allowing for plenty of chill time with the canoes beached at good spots here and there along the way, should have had us off the river at the pickup point by 4 PM at the latest.\n\nEmily and I conversed a little in the early going, but our interaction was fairly stiff. Our positions in the canoe, her facing forward in the bow with her back to me, posed a challenge to easy conversation. I could only hope things would loosen up as the day went along.\n\nI had to admit that Sharon's comment about Emily making a pretty hood ornament for my boat had been spot on. Sitting slightly sideways in her seat, one muscular leg dangling over the side, ponytail bouncing with every head movement, she looked great. By any standard, she was certainly a beautiful young lady.\n\n***\n\nRoughly an hour after we put in, we had been floating in silence for a while, our boat hanging toward the back of the pack formed by our camping group. I was paddling intermittently to keep up a fair pace. The temperature was getting toasty, the sun bearing down on us from a cloudless sky.\n\nBy then, nearly everyone had stripped to just their swimsuits, but Emily still had her shorts on. As much as the dirty old man in me wanted to see more of that tight little body, I was starting to think that wasn't going to happen. When I gave it some thought, it occurred to me that her bikini top was more padded and gave more coverage than you would expect someone her age and build to choose. That, along with the way her shorts seemed glued on, led me to conclude that she wasn't interested in showing more, either by personal taste or due to her present company.\n\nGiven what I knew of her parents, it shouldn't have surprised me that their daughter would dress modestly. I chided myself for caring too much about the subject. My overblown interest in whether or not this young lady chose to show some skin was confirmation that I was not very cool anymore and that I needed to get laid.\n\nI had just put the lecherous thoughts about her out of my mind when, abruptly, Emily pivoted 180 degrees on her seat, swinging her legs over the side and back in again before coming to rest facing toward my perch in the stern. Normally, that kind of sudden movement would be a tipping hazard in a moving canoe, but she executed it so gracefully that the boat never wobbled at all. Smiling and seeming to choose her words carefully, she asked me, \"do you think we could drag our feet just a little?\"\n\nNot really understanding what she wanted, I shot her a questioning look.\n\n\"You know, just kind of lag behind the other old timers?\" she added. \"Not for the whole day or anything. Just for a while?\"\n\nI cringed at her use of the term 'other old timers', which implied that I was one as well. \"Are we that bad? You're already sick of us?\", I asked. There was a deliberate edge to my voice. I didn't like the implication that she didn't want to be part of our group. Also, given how she'd taken the upper hand on me during our introduction, the caveman in me needed to assert some dominance in our interactions. At the least, I didn't want to be a pushover for her whims. Girls that hot are often used to getting what they want with a charming smile. I felt the need to show her that I would not be so easily affected.\n\n\"No, it's not that at all.\" She bit her bottom lip and wore a thoughtful look, looking down at the deck. \"Ummm...well...two things.\" Sitting upright in her seat, she looked me in the eye and switched to a hopeful smile, her eyes twinkling. \"Okay, first of all, I'm a dummy and I packed the wrong suit for this trip.\"\n\nI wasn't following. I flashed her yet another questioning look. What did her suit have to do with our float pace?\n\n\"I grabbed this one because the top is heavily lined--appropriate for hanging with Mom and Dad. But I forgot that the bottoms are a little less appropriate.\"\n\nSo, that explained the shorts not coming off. Now my dirty mind was full of hopeful thoughts about those unseen swimsuit bottoms and what made them inappropriate.\n\n\"I'd rather lose the shorts and get some sun, but only if we can let the others get a few curves ahead and out of sight.\"\n\nI had to stifle the urge to immediately dig my paddle in, braking the canoe. I was happy to oblige her request, but preferred not to appear so eager. \"That makes sense,\" I said, affecting nonchalance. \"Sure, we can slow down for a while and catch up to the others later.\" I dipped my paddle in gently on one side, then the other, slowing our pace. \"What was the other thing?\" I asked.\n\n\"Other thing?\" She had been looking around with a pleased expression as most of the others were already passing out of sight around a bend ahead.\n\n\"You said two things.\"\n\n\"Oh yeah. I'll tell you the other one in a minute.\" Her expression switched to a slightly mischievous grin.\n\nShe scanned downriver again. Apparently feeling like the others were safely downrange, she stood up, unbuttoned her shorts, and shimmied them over her hips. The shorts pooled on the deck around her feet and she stepped out of them. Her swimsuit bottom, black like the top, was the high-waisted type that had plenty of material, but most of it up high where it didn't cover the goods. Down low where it counted, it was about two inches wide. Still, it wasn't overly lewd or daring and I couldn't see why she didn't want her parents to see her in it.\n\nAfter folding and stowing the shorts, she spun in place, again flaunting her grace of movement and defying my experience with boat stability, the canoe hardly flinching. With her backside facing me, I saw why the suit wasn't parent friendly. Like the front, the back of the suit had a significant band of fabric up around the waist, but it tapered to a V shape over her butt that left the bottom two thirds of her cheeks bare and disappeared between them toward the bottom. Like most people in my generation, I didn't get the high-waisted fashion trend, feeling like it seldom flattered a girl's figure, but Emily could have made any style look good. Her butt was as perfect as any I had ever seen. It was smooth, tanned, and shapely. She looked over her shoulder at me, gave her backside a wiggle, and said, \"see what I mean?\"\n\nI laughed. \"Not your dad's favorite style, huh?\"\n\n\"I'm not planning on finding out what he thinks of it. Or my mom, either.\" She spun in place again and sat down on her seat, facing aft toward me. I was getting used to her fluid movements, but continued to be impressed. It wasn't hard to imagine what a talented dancer she was.\n\nShe assumed a cross-legged position on her seat, facing me. I nearly groaned out loud as my head spun with imagery. Though I wouldn't allow myself to look down there, I could imagine the scene between those strong thighs, her modesty only protected by a strip of fabric the size of a Band-Aid. Whether she chose to sit like that out of cheerleading habit or to purposely screw with me, it definitely affected me.\n\n\"So, the other thing,\" she said, smiling at me. \"I was hoping you would share a couple of those beers with me.\"\n\nAs a former cop and, for the most part, a rule follower, I initially balked at her request. Then common sense (along with a desire to please my beautiful, scantily clad boatmate) weighed in on the other side. I had always thought the 21 year legal drinking age was unfair in a country where you were an adult in every other way at 18. While considering both arguments, I belatedly remembered that there were others whose opinions should be considered, as well. \"Another thing you can't have your parents see, huh?\" I asked, a skeptical look on my face.\n\n\"I don't know what they'd say, really,\" she replied, matter-of-factly. \"Kinda like the suit, it's just something I don't want to discuss with them. I'm an adult. I spend most of the year living on my own and making my own choices. I feel like it should be the same with them around, but I know it can be hard for parents to see their little girl as grown up. So, I don't push confrontation with them, for now anyway.\"\n\n\"That all makes sense to me. Some things you have every right to choose still don't need to be flaunted in front of them, particularly if you can guess that what you choose will be uncomfortable for them.\"\n\n\"Exactly! You get it. I'm not a bad or rebellious kid. I have a great relationship with my parents and genuinely enjoy their company. I wouldn't be here if that wasn't the case. Spending this weekend with them is important to me. But I'm allowed to make my own choices now and I intend to exercise that right.\" She punctuated the last part by looking me in the eye, a determined look on her face. \"If doing so without creating conflict means not sharing everything with them, then that's what I'll do.\"\n\nI mostly agreed with her stance. Besides, she was an adult in every way that mattered to me and her relationship with her parents was none of my business. I reached into the cooler and tossed her a beer. \"Please don't make me regret this,\" was all I said.\n\nBiting down on the tab and the outer rim, she opened the can with her teeth, then she tilted her head back and took a long pull without using her hands. That was a trick I hadn't seen in quite a while and would never have expected from her. Apparently, she and beer were not strangers to one another. She put the can in the cup holder beside her seat and smiled at me. Her head swiveled over her shoulder, looking back downriver behind her, scanning again for any sign of our group among the smattering of canoes up ahead.\n\nShamelessly, I took the opportunity to look between her legs, which were still crossed at the ankles, her crotch splayed open in between. As I had pictured, her suit was barely wide enough to cover her inner labia and the treasures within. Her outer labia were bare and visible on either side of the taught black strip. All the exposed skin was tan and smooth without a hint of hair anywhere. Not willing to risk more than that one glance, I looked away well before she turned back toward me.\n\nThe image presented by those incredible legs, what sat between them, and the unconcerned way their owner displayed them raised my heart rate. I had always been a sucker for women with body confidence. A girl with half Emily's looks would have turned me on with bold behavior of that sort. Even so, I chastised myself, both for ogling her and for letting her affect me so much.\n\nWe settled into our positions, her facing rearward in her bow seat and me reclining in the stern seat, and talked for what must have been an hour. Content to drift, neither of us paddled at all, allowing our group to leave us well behind. Emily never even bothered to pick up her paddle. She took to calling me 'Paddle Boy' and joking about me being at her service in a mock aristocratic voice. I put in just enough effort at steering to keep us from running aground, but did no actual paddling.\n\nWe talked about all kinds of subjects, from college courses to sports to finances, and drained several beers each in the process. I had started out just trying to humor the girl by participating in conversation with her, but I wound up losing track of time and enjoying her company. I found her to be more intelligent, engaging, and mature than I would have previously guessed. Miss Emily, it seemed, was more than just a pretty face.\n\n***\n\nOur conversation was eventually interrupted by our approach to a tricky spot in the river. A downed tree trunk stretched across half the width of the river, the left side as we looked downstream. The trunk was several feet thick and suspended above the water with only a foot or two of clearance between the water and it. The fastest current went that way and through a small channel of shallow water to the left of the tree. Slower, deeper water was to the right. Though the right half of the river should have offered easy passage, the current tended to pull boats to the tree. Unable to pass below it and pushed against it by the current, canoes would capsize and be stuck against the tree.\n\nApparently, two canoes and an inflatable raft had recently fallen victim to the tree. Their occupants were out in the chest deep water trying to dislodge their craft from against it. They were aided by a half dozen good samaritans who had beached nearby and waded out to help, though it didn't look like their efforts were bearing much fruit.\n\nThe path to avoiding a similar fate seemed clear to me. Some hard paddling should carry us across the current to the open water on the right where we could safely pass the obstacle. The others must not have paddled vigorously enough to overcome the current, I reasoned. I shared that opinion with Emily, who gave up her leisurely posture, facing forward and manning her paddle.\n\nWe both dug in like our stern was on fire and within a couple dozen strokes we were really scooting. Our momentum was so fierce that we were mostly unaffected by the current running under the tree. We cleared its rightmost branches and coasted out into the calmer waters beyond.\n\nI had put down my paddle and was enjoying the minor triumph when an impact brought our canoe to an abrupt stop, nearly throwing me out of my seat. My celebration had been premature and my plan had been flawed. There was another tree trunk lurking just beneath the water. Preoccupied with the first obstacle, I never saw the second. The momentum generated by our little sprint had carried our boat halfway over the trunk and we were solidly high-centered on it. To make matters worse, the water around us looked to be deep enough that controlled dismounting wouldn't be possible and capsizing there could be ugly.\n\nBefore I could formulate an extrication plan, Emily stood in the bow and tried to push off the tree with her paddle. Predictably, that accomplished nothing. Recognizing the futility of that approach, she dropped her paddle, braced herself with a two-handed grip on the canoe, and reached her right leg over the side. The foot planted on the obstacle and her leg flexed in preparation for pushing off. Two thoughts hit me simultaneously. The first was how incredible her leg and butt looked, toned flesh gleaming in the sun. The second was what a bad idea it was for her to push from that position.\n\nBefore I could suggest a different tactic, Emily pushed on the trunk with all her strength. The front of the canoe started to move, but then her footing on the moss-covered trunk gave way and everything went to shit. Her body went the way of the missing foothold. Despite her entire body weight being out of the boat, her grip on the bow initially restrained her from going in the water. Unfortunately, that left all her weight tugging sideways on the upper frame of the canoe. Even when lodged on an object and with a heavy body (mine) onboard, a canoe has very little lateral stability. Her weight tugging at that angle was enough for the boat to dislodge from its grounding. Unfortunately, it did so by capsizing and dumping us both in the drink.",
        "Taken off guard, I went down a ways and had to get my bearings before surfacing. I broke the surface to the sound of laughter. Wiping my eyes, I saw Emily's smiling face a few feet from mine. The canoe was floating, upside down, right next to us.\n\n\"I'm sorry. That was all my fault,\" she said, stifling another laugh.\n\nI scanned the area, trying to take stock of our stuff. Our spare clothes, my lunch, and our phones were sealed in the dry bag that was clipped to a crossbar inside the canoe and should have been safe. Cans of beer and bottles of water were surfacing here and there, the current taking them slowly downriver. That meant the bungee cord holding the cooler shut hadn't been up to the task. One of the paddles was floating next to me, the other was nowhere to be seen.\n\n\"No big deal. It happens,\" I said, trying to sound forgiving. It hadn't actually happened to me (dumping a canoe) in many years. It did tend to happen, just not to me. \"Oh well,\" I thought, it was as much my fault as hers, though I was annoyed that she seemed to be laughing at me. \"What is so damned funny, anyway. Did I look that ridiculous going in?\" I demanded, my voice a mix of serious and playful. \"You weren't exactly smooth and dainty like a ballerina there, either, Stumblebum.\"\n\n\"No. I didn't even see you go in. I'm not laughing at you. I'm sure I looked goofy as hell...well, we both probably did. I think sometimes when shit like this happens you just have to laugh.\" She was cracking up. \"And what did you just call me? Stumblebum? That's hilarious!\" My annoyance with her laughter morphed into admiration. I thought her attitude was awesome. Most women would have been seriously pissed right about then. It was a reminder to me that I shouldn't be a sourpuss about things, either.\n\nI was able to stand where we were, but only just barely, the water coming to my neck. I had hold of the canoe and the one remaining paddle. We had two options: swimming the canoe to shore before righting and draining it or righting and draining it where we were. The first would take so long that we'd never catch up to our belongings (most importantly, the beer) that were floating away downriver. That made it an easy decision for me.\n\n\"Hang tight for a few minutes while I fix the boat,\" I told Emily, handing her the paddle.\n\n\"Okay, but some of us can't touch here, tall guy,\" she said with a smirk. \"Can I hold onto you and rest for a minute? I don't want to grab that slimy tree.\"\n\nIt hadn't occurred to me that she was treading water (both of our lifejackets were floating downriver with the beer). I didn't blame her for wanting to avoid the mossy tree. \"Sure,\" I said, offering my right arm, my left still holding the canoe.\n\nIgnoring my outstretched arm, she put her left arm around my neck instead and pulled herself against me. That brought her face within inches of mine and the left side of her body up against my right side. The sensation of her soft, warm skin on mine was electric. I could feel her padded breast pressing into my chest. Her breath smelled like beer, which was strangely appealing, and those big blue eyes were fixed on mine. The closeness to her was intoxicating. I felt like a kid at his first school dance, excited by a girl's touch.\n\n\"So, what's the plan now, skipper?\" she asked, expectantly, as if my brain could process anything else with her clinging to me like that.\n\n\"Well, hopefully, I'm gonna get the canoe upright and get you into it. Then you're gonna go save as much of our stuff as possible. I'll catch up to you when I can.\"\n\n\"Okay. I'm ready to be part of the plan,\" she said, eagerly and with a bit of mock seriousness.\n\n\"Alright then, whenever you've rested enough, let go that death grip you have on my neck and I'll get to it,\" I said, playfully.\n\nShe rolled her eyes. \"Oh, don't pretend this is a hardship for you,\" she chided, a knowing look in her expressive eyes.\n\n\"I am actually quite put out by it, but tolerating it for your sake,\" I retorted, feigning seriousness.\n\n\"Uh-huh,\" was her response, her tone skeptical. She let go of me and resumed treading water. I took a deep breath, trying not to be so affected by her, and went to work on the canoe.\n\nBeing built like a proverbial lumberjack sometimes has its uses and this was one of those times. Ducking under the canoe, I surfaced beneath it and lifted it over my head by the supports that crossed its midsection. After allowing the water to drain for a few seconds, I jump tossed it in front of me, flipping it over in the process. It landed upright with a smack and looked no worse for wear. I was fairly pleased with my handiwork, but knew the hard part was still to come. After throwing the paddle onboard, I started mulling over the next challenge.\n\nClimbing into a floating canoe from water more than knee deep is nearly impossible. There was definitely no way to get me back in the boat where we were. Given Emily's athleticism, my strength, and our size difference, I gave us decent odds of getting her aboard, but the devil was in the details.\n\nFor our first attempt, she grabbed the side of the canoe with both hands while I put my hands together underwater, interlacing my fingers, and provided a step for her foot. She stepped into my hands and I lifted, but the canoe simply moved away from us before we had enough upward lift to get her over the side. She wound up stretched to her full length between the canoe and me, laughing at the futility of our effort. We needed some way to keep the canoe laterally stable while pushing Emily over its side, but I only had so many hands.\n\nThe solution was readily apparent to Emily. \"You're gonna have to hold the canoe still with one hand and boost me into it with the other,\" she said, confidently. \"Hold your boost hand like this.\" She extended her arm upward, wrist bent, hand forming a horizontal shelf, palm upward. \"It works like a bicycle seat. Trust me...cheerleading experience.\" She didn't explain any further, but it went without saying what part of her body would sit on the hand.\n\nI hesitated, unsure what to say. It sounded like it could work, but the required hand placement seemed way inappropriate. Holding my friend's daughter, less than half my age and entrusted to my care for the day, by her most private parts, which were mostly naked, made me a little uncomfortable. For a moment, I considered ditching the reboarding plan altogether and swimming the canoe to shore.\n\nBefore I could articulate an objection, Emily read me like a book. \"Geez, Jason! This is how you react when a girl asks you to grab her ass? If word of this gets around, you may have to turn in your man card.\" She was smiling tauntingly at me, eyes sparkling, looking adorable. \"I've been lifted like this a thousand times and it's never been a big deal. I appreciate you being a gentleman, but it's not necessary. Now, let's do this.\" Again acting before I could even comment, she put both hands on the side of the canoe like before and extended her rear end toward me. She looked over her shoulder at me, eyebrows raised, waiting for me to do my part.\n\nI chastised myself for giving in to her before even doing so, but I gave in just the same. Grabbing the canoe with my left hand, I ducked my right shoulder underwater as far as was feasible, formed my hand as she had suggested, and brought it up from underneath her backside, taking on her weight. My hands being very large, my palm was squarely between her legs and my fingers fanned out to cover most of her bare cheeks. It was like a bicycle seat, indeed. I briefly noticed the sensations of soft skin all around my hand and a distinct heat source at the base of my palm before I extended my right arm and shot putted her into the boat. The canoe tried to move away like before, but I was able to hold it in place with my other arm.\n\nSeconds after she went over the side, she reappeared, looking down at me with a triumphant look on her face and the paddle in hand. \"I told you it would work. You're pretty strong for an old guy. It felt like I was shot out of a cannon.\"\n\n\"Just go save our stuff, smartass.\"\n\nSmiling mischievously at me, she dug in her paddle and got underway. I had been a little concerned that she would have trouble piloting the canoe by herself, but she fared pretty well, motoring downstream at a solid pace. Even so, she mostly came up empty regarding our stuff. She called off the chase a hundred yards or so downstream and waited there for me to catch up.\n\nWhen I eventually got to her, I found that only four cans of beer and two bottles of water had been recovered, along with the lifejackets. Our second paddle was still unaccounted for, as well, but that was unimportant to me compared to the beer. There had been a good dozen beers and at least four waters in the cooler when we tipped. I had expected to rescue more of them and was bummed about their loss. Drinking beer--lots of beer--was an important part of my plan for the day. That part was in jeopardy now, especially given that Emily had proven not to be the lightweight I had expected. She had been matching me beer for beer. Between us, we needed a healthy supply of beverages to keep us going as we had been over the more than half of the float that remained.\n\nIt was some consolation to me that Emily had found my baseball hat snagged on a log. In the confusion, I hadn't even noticed that I lost it. Emblazoned with the words 'Military Police Corps' and 'Fort McClellan, Alabama,' it was purchased after I graduated from training there long ago. It was ratty and pathetic looking after so many years, but had great sentimental value to me.\n\nAfter wringing most of the water out of my weathered hat, I put it on, bill backward in the fashion that had been cool in my day. I tossed one of the remaining beers to Emily and cracked one open for myself. Finding a spot in the shallow water near the shore where the rocks forming the riverbed were smooth, I sat down and then reclined on the rocks. The depth there was perfect, leaving all of me submerged except my head, the cool water flowing only an inch deep across my chest. \"Let's enjoy this spot for a minute before we move on,\" I suggested.\n\n\"Okay,\" she replied, as she sloshed her way over to my location. Arriving beside me, she tested the riverbed all around with her feet. Having identified a suitable spot, she sat down right next to me and reclined to match my posture. Our shoulders touched, her left against my right. I glanced her way and found her looking back at me, eyes squinting against the sun and a wry grin on her face. Her breasts, ensconced in their padded bikini cups, protruded from the water like islands. Other than that, she was submerged to her neck like me. Our close proximity was again causing an involuntary acceleration of my heart rate. \"So...why don't you tell me a good story from your police days?\" she asked. \"Dad says you have tons of them.\"\n\nLooking away from her before she could notice how she was affecting me, I gazed out across the water at a gaggle of approaching canoes. I sorted through story options in my head, aiming for one that might be entertaining without being too dark or serious. It was a struggle to come up with something that met those conditions, but I eventually settled on one that seemed unlikely to bore or disgust her. \"I'll tell a story if you'll tell one to me in return,\" I offered.\n\n\"Deal,\" she said, without hesitation. She was watching me intently, eager for me to share.\n\n\"Okay...so...one of my specialties as a cop was as a negotiator and crisis intervention officer. They would send me in to talk down suicidal and disturbed people and such. My unofficial nickname around the department, after I worked for years in that specialty, was 'The Tard Whisperer'. I know, it doesn't score well for political correctness, but it was meant as a compliment to my skills.\"\n\n\"It does have a certain ring to it,\" she allowed, giving a thoughtful shrug for effect.\n\n\"Yeah. Anyway, I was pretty good at that kind of thing later, but when I first got certified for crisis intervention...well, like most things, there was a learning curve.\" I glanced over and confirmed that she still looked interested. \"It was my first week with the certification and I got called across town for a suicidal guy with a gun. So I raced over there, eager to do my deal, save the world, you know. I showed up and there were eight or ten officers there already, most of them senior to me. It was a trailer park and cops were in a semi-circle arrayed around one trailer, all of them behind cover of some sort. Their point of focus was a man sitting on the front steps of his trailer home with a rifle across his lap. When I arrived, because I was a crisis officer, the others all deferred to me. It was all my show from there.\"\n\nThe group of canoes I had previously noticed was passing by. They were a boisterous group and I paused for a moment to wait for the racket emanating from them to fade a little. As I scanned the occupants of the nearest boats, I got a couple of odd looks in return. One guy let off a loud wolf whistle in our direction. I was confused for a moment before remembering that there was a sexy young woman lying next to me and that we probably looked like a seriously mismatched couple to most observers. I had to keep in mind that while I knew we were just canoe partners of convenience for the day, nobody else knew our story. Imaginations seldom allow their owner to select the boring explanation when choosing from among several options. A rabid people watcher myself, I knew my mind would race with the seedy possibilities if I saw a similar pair together. My ego smiled at the idea that people were seeing us as a couple. At the same time, my body enjoyed the sensation of her arm and shoulder firmly pressed against mine.\n\nOnce the noisy crew was largely out of range, I snapped out of my musings and got back to my story. \"I got there and I grabbed my shotgun from its rack in my car. One of the officers gave me the briefest overview of the situation. Then, in full-on Dirty Harry mode, I walked right out in the open and approached the guy, shotgun dangling from my hand cowboy style.\" I shook my head.\n\n\"I'm guessing that wasn't standard procedure?\" Emily asked.\n\n\"No. Not in the least. But I was a headstrong moron who was too good for silly rules and procedure. Anyway, my unnecessarily risky approach paid off at first. I struck up a conversation with him from about ten feet away. It went well for a while before he decided he didn't want to talk anymore. Eventually, he just looked me in the eye and told me he wanted to die but wanted me to do it. He said he was gonna point his rifle at me and shoot if I didn't get him first. As he slowly brought the rifle up to a shooting position, I racked a round loudly into the chamber of my shotgun and dramatically took a bead on his head. Then, past the point of no return anyway, I doubled down on my stupidity. I told him, in graphic detail, what my magnum 12 gauge slug was gonna do to his head, how an open casket wouldn't be an option and all that.\"\n\n\"You were hoping to shock him?\"\n\n\"Yeah, basically. And...it worked. Just as his rifle came up toward horizontal and I was starting to apply pressure to my trigger, a breath away from the end for him, he dropped the rifle on the ground and started crying. I took him into custody and off he went for a mental evaluation.\"\n\nEmily was incredulous. \"It worked? I thought this was gonna be a story about mistakes and what not to do.\"\n\nI laughed at that. \"It is. I put myself out there in unnecessary danger and forced an unnecessary confrontation. Even though it worked out, it was a comically bad piece of police work. Besides that, though, I haven't finished the story.\"\n\n\"There's more?\"\n\n\"Yes...After the drama was over, crazy guy secured, his gun unloaded, all that...I was holding court near my patrol car, reliving the event with a hefty dose of braggadocio, other officers gathered around me. In the middle of my 'Officer of the Year' acceptance speech, I racked the slide on my shotgun to eject the round I had chambered during the incident and make the gun safe to put away in the car and...nothing came out.\"\n\n\"Oh shit! So your gun wasn't even ready to fire during the standoff?\"\n\n\"Nope. It wasn't even loaded at all. I had used my shotgun at the practice range the previous day and never reloaded it afterward. There were no rounds in the magazine tube, so I racked an empty gun and thought it was ready to fire. Everyone there knew immediately what I had done. Any of them who didn't already think I was an idiot probably put me in that category afterward.\"\n\n\"Wow! You went from almost having to kill someone because of a mistake to almost dying yourself because of a different mistake.\" She summed it up well.\n\n\"That's the gist of it. I certainly wasn't a dumbass my whole career and I more than made up for it with good work later, but that was the signature head-up-my-ass moment of my early career. So, that's my story. At least nobody died.\" I shrugged.\n\n\"Good story,\" she said. \"I can't imagine having a job where the stakes are so high and the consequences for any mistake are so permanent.\"\n\nI was silent for a few seconds, trying to avoid a deep or serious police conversation. Those tended to ruin the kind of relaxing vibe we had going. \"Your turn,\" I said, looking to change the subject.\n\n\"What kind of story do you want me to tell?\" she asked.\n\n\"I want to hear about a time when you got into trouble. Speaking of police, have you had any run-ins with the police? That's the kind of story I want to hear.\"\n\nShe giggled slightly and looked at me with a thoughtful smirk. \"I have, actually. I didn't really get in any trouble, but there is a decent story there.\"\n\n\"Now I'm curious. Go on.\"\n\n\"Hmmm...where do I start? At school, I live in a female athletics dorm. It's a six story building, taller than its neighbors. Sometimes, when the weather is nice, girls tan on the roof without much on. You know, all over tan, no lines?\"\n\nI liked where this story was heading already, which was probably apparent from the stupid grin on my face. She had answered the question in my mind about how her butt was so completely tanned.\n\n\"One day this past spring, a group of us were up there talking and the conversation turned to public nudity laws. Like, could we get in trouble for tanning like that? One girl said it was legal to be topless in public in Missouri, but not fully naked. She said her sister had spent a whole day at Party Cove, Lake of the Ozarks, and was topless the entire time. So, the discussion turned to whether we would walk around topless in front of strangers, and that type of thing.\" She paused, taking a big drink from her beer. Her face was fixed in a cute smirk. She appeared to be enjoying telling the story as much as I was enjoying hearing it told.\n\n\"My friend from cheer, Allison,\" she continued. \"She's pretty well endowed and proud of her equipment, not generally bashful about showing some skin. And I had recently got my nipples pierced and wanted an excuse to show them off.\" I almost choked on my beer when she mentioned the piercings. Just a couple of hours earlier, I had her pegged as a prude. It was steadily becoming apparent how inaccurate that evaluation of her had been. \"Long story short, we ran our mouths about how we'd go topless wherever, yada yada yada...Next thing we know, we've accepted a dare to go buy something at the convenience store...topless.\"\n\nWhen she didn't continue, I looked over and found her scanning my face, eyebrows raised, checking my reaction. \"What?\" I asked.\n\n\"I'm trying to decide if telling you this story is a good idea.\" She had an almost nervous look. \"I don't want you to think badly of me.\"\n\n\"First of all, there's about zero chance that I'm gonna think badly of you for doing some college dare.\" I looked her in the eye for effect. \"Secondly, you can't possibly leave the story hanging there. You're too far in to turn back now. Let's hear the rest of it.\"",
        "\"Alright,\" she said, trading the nervous look for the happy smirk. \"Four of us got into the car and went to this store. It's a big convenience store right on the busy strip off the highway, dozens of fueling spots under a roofed area outside, customers in and out all over the place. It was a Saturday afternoon.\" She waited for a moment before continuing, letting me imagine the setting.\n\n\"We parked at one of the pumps. Allison and I waited for a lull in the foot traffic, then whipped off our shirts and walked into the store. All we had on was running shorts, sneakers, and socks. We went in and browsed around like nothing was out of the ordinary. Most of the customers and the clerk behind the counter were guys, so we didn't really get any flak from anyone, just mostly surprised smiles. When we finally picked out something and went to pay for it, the clerk recognized us from our cheering at football games. So, he pays enough attention to the cheerleaders at the game to remember us and now here we are in his store with our boobs out...\" She furrowed her brow. \"He was gonna drag that moment out, right? He started up a conversation about cheerleading and we must have stood there for five minutes talking. All the while, he was ringing up customers intermittently as we stood off to the side.\"\n\n\"If the clerk didn't mind your attire, how did the cops get involved?\" I asked, trying to imagine what kind of sourpuss would call the police on a couple of hot, topless college girls.\n\n\"I don't know, really. Apparently, some old bag called the police on us. All I know is we walked out of the store and ran straight into two cops in the parking lot. Luckily, they were both guys, too. We stood there in the middle of the lot talking with one of them while the other contacted the clerk inside.\" Her eyes widened in an expression of disbelief. \"And this cop we're talking with, he recognizes me too! I'm in my cheer outfit on an athletics department poster that hangs here and there around campus and he recognized me from it. So, he wants to chat about cheerleading, too!\" She laughed and shook her head. \"I never knew how famous I was or how interested everyone was in cheerleading until I took my shirt off in public, right?\"\n\n\"That's why they say you have to dress for success. The right outfit can really lend weight to your message...make people take notice,\" I said, with an overdone, feigned tone of seriousness. We both laughed out loud for a moment. Switching to a genuine tone, I asked, \"they let you go, though, didn't they?\"\n\n\"Oh yeah! The clerk had zero complaints about us. I guess the old 'no shirt, no shoes' rule doesn't apply to everyone. The cops told us there was no law against free boobin' it, but we should be respectful of private establishments' rules, et cetera. They sent us on our way. It was a pretty fun experience, overall, actually.\"\n\nThat was a good story, putting mine to shame. It was so good, in fact, that I was in danger of pitching a tent in my trunks if I didn't wipe the imagery of it from my mind. I had really enjoyed our little storytelling session and wouldn't otherwise have wanted it to end so soon. But, the potential embarrassment or awkwardness that might accompany an uncontrollable boner was a real danger at that moment. Also, we needed to get back on the water if we were ever going to catch up with our group. \"Maybe we should get moving again,\" I suggested.\n\n\"Yeah. Agreed. We need to find more beer somewhere,\" she said. She popped up and walked to the canoe, her movements fluid and graceful, as always. Her butt cheeks had small river rocks stuck to them all over and I had to fight the urge to reach over and brush them off for her. Reaching the canoe, she rifled through the dry bag and took out her phone. She scrolled through items on the screen while I dragged the boat off the shore. \"Here. I have a picture my friend took that day,\" she said, holding the phone out for me.\n\nBracing my leg against the canoe to keep it from floating away, I eagerly accepted the phone from her and looked at the screen. Sure enough, there she was, along with her friend, topless in the convenience store parking lot and chatting with an officer. Both girls stood confidently with their hands on their hips, breasts displayed proudly.\n\nThe photo was taken from too great a distance for much detail to be seen. I tried to make out the piercings she had mentioned, but couldn't. Even from that distance, though, it was clear that neither woman had anything to be ashamed of. Both were athletic and shapely, their breasts high on their chests, tanned skin everywhere. There was no doubt in my mind that was the best call those officers had all year.\n\nI kept my leering to a minimum and quickly returned the phone to her. \"Wow. You two were bold. That's awesome,\" I told her.\n\n\"Yep. It was fun,\" was all she said. She wore a beaming smile, enjoying both the memory itself and sharing it with me, it seemed.\n\nI found her confidence really appealing. My early appraisal of her as a prude had certainly been inaccurate. To the contrary, she actually had an exhibitionist streak in her. I couldn't help but wonder just how strong it was and whether she would show it again while I was around. Once again in danger of pitching a tent in front of her, I changed the subject, commenting about my hopes for finding the other paddle downstream.\n\nWe boarded the boat and headed off. As luck would have it, we found and recovered the missing paddle beached in the shallows around the next bend. After that, with both of us paddling again, we charged downstream in earnest, looking to rejoin our party.\n\nBy that point, it was well past lunch time and we hadn't eaten anything. Emily had planned on eating lunch that her parents had with them. Having no idea when we might catch up to them, I offered to share my lunch with her. Being easy to please myself, all I had brought was turkey cold cuts and cheese in pita pockets and a can of plain Pringles. It was boring, but I had brought way more of it than I needed for myself. Once again, Emily proved to be less high maintenance than I expected, readily putting away her share of it.\n\nAfter eating, we opened our last two beers and settled into a decent rhythm of paddling and talking. Easy conversation flowed between us as before and we alternated methodically between paddling and resting as we cruised down a quiet and relatively straight stretch of river. We nursed our final beers and chatted away most of the next hour. Despite making a fair pace the whole time, we didn't pass many people at all, much less find our group. A friendly couple with ice to spare gave us enough to refill our cooler, but we didn't get our hands on any more beer.\n\nDespite our little spill and the resulting beer shortage, I was enjoying the day immensely. Far from the burden I had expected that morning, Emily had proven to be an excellent boatmate. As we hurried along for her sake, hoping to salvage some time for her with her parents, a part of me hoped we never caught up to them. Spending the rest of the day alone with her on the river didn't sound bad at all to me.\n\n***\n\nJust as my last beer was running dry, I heard chanting and laughter that sounded like it emanated from a large group of people up ahead. It was coming from somewhere down the river, but there was hardly anyone in sight on the river ahead of us. Eventually, as we drifted around a bend, the source of the crowd noise became apparent. Something like two dozen canoes and rafts were beached along the right bank. A crescent shaped crowd was gathered around a rope swing hanging from a huge tree overlooking a natural alcove in the river. Emily's eyes lit up when she saw the swing.\n\nI guided our canoe to the edge of the crowd and dug my paddle into the riverbed like an anchor. Looking around, I saw no sign of anyone from our camping group there. I was about to suggest we keep going in an effort to find our crew when Emily's obvious interest in the party there caught my attention. Unusually for that river, we hadn't seen much in the way of party spots all day. The appeal of that environment to her wasn't hard to read. I took the last swallow from my beer and settled in to watch for a few minutes.\n\nA wiry young man in jean shorts with eyes that looked glassy even from a distance was winding up for his turn on the swing. He walked high up the steep sloped bank, giving his swing more potential momentum. After lots of encouragement and cheering from the assembled peanut gallery, he let loose, swinging high out over the alcove. He let go at the apex of his upward swing, did a gainer, and went into the water below head first to raucous cheers from the onlookers. That he surfaced uninjured shortly after going in was an indication that the water must be fairly deep there.\n\nNext up, apparently having waited their turn, were two young ladies in matching blue bikinis. As the pair, one a little overweight but curvy and the other very thin, ascended the bank, the crowd began chanting. \"Topless swing! Topless swing!\" Both girls looked over their shoulders as they climbed and shook their heads, though only the skinny one looked like she meant it.\n\nReaching the top, they gathered the rope as it was handed up by people below. Examining the rope, which had several knots in it for footing and handholds but no actual seat, they looked to be trying to figure out a way for both of them to swing at once. While they debated, the chant started again. \"Topless swing! Topless swing!\" This time, it increased in intensity and didn't stop. The thin girl went back to shaking her head, declining the crowd's challenge adamantly. The curvy girl, however, was smiling and clearly considering it. The chanting and cajoling went on for a while. Both girls procrastinated atop the bank, unsure of the plan for their rope swing routine and seeming to enjoy the attention they were receiving.\n\nEventually, an older woman, overweight and topless, considerable but unappealing white breasts swaying as she walked, emerged from the gaggle of onlookers and chastised the other two from the base of the bank. They seemed to be acquaintances and whatever she said was enough to convince Curvy. She untied her bikini top and tossed it down to her chunky friend, revealing a fairly impressive pair of breasts, topped by large, pink nipples. She shook her shoulders, wobbling her goods for the crowd, then quickly mounted the rope and swung out over the cove. Letting go well before the apex of the swing, she dropped unglamorously into the water with a big splash, garnering a smattering of cheers and applause.\n\nThe thinner girl went as soon as the rope returned to her, bikini top still firmly in place. She showed much better form, swinging high before releasing and cannonballing into the water with her knees tucked to her chest. That got her little acclaim from the crowd, though, as most of the attention was still on Curvy. She had met the older gal on the shoreline and they shared a drunken embrace, giving each other's bare, pillowy breasts a squeeze for the benefit of the audience. Hoots and whistles rained down at them. One particularly annoying middle aged guy with a prominent gut, wearing Harley-Davidson shorts, shouted encouragement at them in a shrill voice from a canoe not far from ours.\n\nScanning the throng of revelers around the cove, I took stock of what I saw. There were more tattoos, beer guts, and mullets than I would have preferred, but otherwise it was a fun, energetic, and loose group. There were several topless women and a few more in dental floss bikinis, though none of them were especially attractive. Beer bongs and Jell-O shots abounded. The only thing missing from this party was a few more attractive women. Emily set about doing her part to rectify that.\n\n\"Do you care if I try the swing?\" she asked, sounding excited.\n\n\"Have at it. Show 'em how it's done,\" I replied. I was curious to see what kind of acrobatics she had in store for the crowd.\n\nShe went overboard, stood up in thigh deep water, and waded off toward the shore. As she made her way around and through some of the neighboring canoes, more than one person asked if she was going to swing, undisguised eagerness in their voices. As she passed by the middle aged guy in the Harley shorts, he commented loudly that it would be nice if she did it topless. Emily heard him, glanced his way, smiled, and kept wading. A step or two later, she did a double take, looking over her shoulder at his canoe and fixating there for a moment.\n\nFollowing her gaze, I saw what had caught her eye. Stacked on the deck of his canoe, right in front of him, he had at least three cases of Busch Light. I had no idea why anyone would bring that much beer on the river and the brand was hardly my favorite, but I was jealous. No way was he running out of beer that day. I was wishing I had enough cash with me to convince him to part with some of his beer when Emily, apparently thinking similarly, made him a better offer.\n\n\"I'll swing topless for a 12 pack of that beer,\" she offered, bringing a few laughs and whistles from nearby boats. Her tone and the look on her face left little doubt that she was serious.\n\n\"That's a pretty steep price fer seein' yer tits fer a few seconds from far away,\" he said. He wasn't above paying to see a girl take off clothes, but wanted to be sure of getting his money's worth.\n\n\"You can take a picture with me afterward,\" she quickly offered in reply. That was a steep increase to her bid.\n\n\"I'll tell ya what,\" he countered, grinning. \"Ya leave yer top in yer boat, do a flip off that rope, and then take that picture with me, n' ah'll give ya a whole case of birrr. But, no coverin' up fer the picture, now. Ah want a good one.\"\n\nWithout hesitation, she said, \"Deal!\" and offered a handshake to seal the agreement. That drew more whistles and laughter.\n\nEmily splashed back over by me. Standing alongside our canoe, she smiled at me and said, \"I got us some beer!\"\n\n\"I heard,\" was all I said, though I wore what I thought was an approving smile. I neither wanted to discourage her, nor to appear overly in favor of her proposal.\n\nShe frowned at me, then she lowered her voice. \"You don't approve.\"\n\n\"I didn't say that. Besides, you don't need my approval.\"\n\nCocking her head to the side, she took on a serious, and incredibly cute, expression. \"No, but I want it. We've been having fun together and I don't want you to think badly of me.\"\n\n\"Why would I think badly of you?\"\n\n\"You know, loose morals and such.\" She rolled her eyes. \"I know how judgey you older people can be.\" A wink punctuated that line, taking some of the sting out of it. \"If you're gonna think less of me, say so now and I'll get back in the canoe and keep my clothes on like a proper girl.\"\n\nIt was pretty cool to me that my opinion mattered so much to her but, of course, her concern was completely unfounded. If she only knew the debauchery I had taken part in during my lifetime, she would have laughed at the idea of me judging her. Her confident and bold demeanor was increasing my already high opinion of her, not lowering it. I was the last guy who would require a woman to be all modest and buttoned up to earn my respect. My concern was about coming off like a sleazeball for putting her up to it. It was hard to picture any acceptable explanation I could give Ted for encouraging his daughter to strip so I could get more beer. That and my desire not to appear too eager to see her topless were all that restrained me from telling her to go for it.\n\n\"I'm not gonna think badly of you for being confident and having some fun. Don't worry about that. I just don't want you to feel pressured. There are other ways to get beer.\" I hoped that struck the right tone.\n\nMy words seemed to ease her mind. She broke into an easy smile. \"No worries about that. I'm not much of a follower and I don't get pressured into anything.\" That wasn't hard for me to believe.\n\nReaching behind her with one hand, she unclasped her top, grabbing and lifting it away with the other. She casually handed the top to me and stood there smiling, as if daring me to look at her exposed chest. I chose not to be bashful, taking a long glance.\n\nEmily's breasts were fantastic. Though they were probably about B cup size, they looked larger on her petite frame. Round, perky, and high on her chest, they had no sag to them. They were capped with perfect, erect, brown nipples, each of which was pierced horizontally by a silver barbell. She pushed out her chest a little as I checked them out, clearly proud of them and rightfully so.\n\nAfter giving me fair time to ogle her, she shot me another wink and headed off. As she slogged through the knee deep water toward the swing, her breasts were in constant and tantalizing motion. Cheers, whistles, and lewd comments erupted from the nearby partiers as she passed. Stopping briefly to face the canoe of Harley Shorts Guy, she gave him a thumbs up and asked, \"you want a flip, right?\" He replied affirmatively, grinning ear to ear, clearly enjoying the view and pleased with the deal he had struck.\n\nWithin minutes Emily had threaded through the crowd to the location of the swing. A young man with long blonde hair had hold of the rope and had been ready to take a turn himself. When she approached, he eagerly gave up his spot, passing the rope to her. Taking it in hand, she scaled the bank, the muscles in her legs and butt rippling with the effort. As she had done repeatedly that day, she showed off her balance during the climb. She ascended the steep slope on her feet, choosing footholds carefully, an arm extended for balance, as opposed to on all fours as the others had done.\n\nReaching the top, she faced the water, rope in hand, assorted cheers and whistles sailing her way from the douchebag guys in the peanut gallery. Her eyes scanned the crowd before focusing on me. She gave me a searching look, still looking for signs of my approval, I imagined. I responded with a big smile and a thumbs up.\n\nAs she lined up for her performance, she paused momentarily, tucking the rope under an arm and reaching up with both hands to adjust her ponytail. Strong legs in a wide stance, shapely breasts bobbing slightly over a washboard stomach, upturned nipples prominent, piercings glinting in the sun, she looked absolutely sublime up on that riverbank. That image was likely to stick with me for a long time and, truth be told, figure in more than a few future 'me time' sessions.\n\nHer ponytail set and her plan decided upon, she wound up and pushed off the bank, sailing out over the cove with a fury. As her trajectory curved upward and she began to lose momentum, she swung her legs upward and threw herself off the rope. Her body continued upward, feet first and head down, for a moment. Tucking her head to her chest, she brought her legs in with enough force to spin her body. She spun head over heels one and a half times before stretching back out and hitting the water feet first with legs fully extended. The impact with the surface was so smooth that it hardly generated a splash. It was quite a display, leaving no doubt that she had been practicing that kind of maneuver for years.\n\nAfter lingering underwater for an almost concerning amount of time, Emily surfaced ten feet away from her splash point in water up to her navel. She smiled broadly, looking even better than before, water dripping from her ponytail and breasts as the crowd gave her a round of applause and cheers. She started wading in the direction of our canoe, but a gaggle of boys surrounded her before she could get very far. Unsurprisingly, there was no shortage of guys who wanted to be her new friend.\n\nHer performance left me shaking my head, but I was equally impressed at how easily she chatted her way through the throng of boys. She gave them enough attention that she didn't come off looking stuck up, but left no reason for any of them to think he had a chance with her. She high-fived and shook hands with a few guys. One handsome young man even got a half hug, complete with a breast smashed into his ribs. But none of them got more than a few seconds of attention. Walking the line between friendly and aloof to perfection, she was soon done with them and on her way back in my direction.",
        "Glancing at the bikini top that was still in my hand, something from our earlier conversations occurred to me. It was the piercings. They were the reason the padded top was necessary around her parents. She didn't want them to know about the piercings. Like she had said, there were things about her they didn't need to know, indeed. I became aware of something else, too. My dick was hard as steel, tenting my shorts down the side of one leg. So much for pretending to be unaffected by her.\n\nEmily had made her way mostly back to our boat when she noticed a scragly man about my age with sleeves of tattoos down both arms taking a video of her with his phone. Frowning, she shot a dirty look his way and covered her breasts with an arm. She had spent probably fifteen minutes walking around topless and that was the first time she looked at all uncomfortable or made any effort to cover up. That guy had obviously spoiled her fun.\n\nShortly thereafter, still wearing a disconcerted and pensive look on her face, she was at Harley Shorts Guy's canoe. His wife, a broad shouldered gal with stringy hair and an unfortunate face, had her phone out like a photographer readying for a studio session. Harley Shorts himself was standing alongside, grinning like a kid in a candy store, beer gut jutting out proudly. Emily glanced at them, then at me, conveying her disgust. She still owed them a photo and didn't look happy about it.\n\nI thought to head over there. They were only about 15 feet from me, though a few occupied canoes were between us. If I could offer the guy money for the beer or just tell Emily not to worry about it, she'd be off the hook for the picture. Unfortunately, my tented trunks and the absence of any easy way to secure my canoe kept me in my seat for the moment. Instead, I watched as Emily found her own solution.\n\n\"I know I owe you a picture, but I wasn't thinking when I made that deal. I don't want topless photos of me out there,\" I heard her say. His response couldn't be heard clearly, but I didn't need the words to know he was pissed. A heated exchange ensued, the details of which were lost to me as other conversations and background noise interfered. I did my best to read their body language.\n\nEmily stood her ground, looking formidable and immensely sexy, standing there 95 percent naked, reasoning with that goon. He was twice her size, yet no match for her on many levels. Following some debate, Emily cupped her breasts and pivoted toward his wife demonstratively. His demeanor relaxed after that and it seemed they had an agreement. I thought I understood what had been agreed upon, but hoped I was wrong.\n\nThey lined up for the picture after all, Harley Shorts standing with Emily in front of him, both facing the wife with the phone in her hand, seated in her canoe. As Wifey lined up the camera, Harley Shorts leaned over Emily's shoulder and smiled a goofy smile, his face right next to an obviously forced smile on hers. At the same time, he reached around both her sides, his big, meaty hands grasping her breasts and covering them. Much to my discomfort, my guess had been right.\n\nWatching that jerkoff feel her up filled me with an odd combination of emotions. I was a little bit angry, jealous, disgusted, and turned on. I couldn't believe she had agreed to it. Beer wasn't that important.\n\nWifey counted off, 1-2-3, then snapped the photo, grinning almost as widely as her husband. Harley gave Emily's breasts one last squeeze, almost kneading them, then let go and stepped aside, wearing a lecherous grin. I fought off the temptation to go over there and knock out a few of his yellow teeth. It wasn't my place to be pissed and Emily could take care of herself, I had to remind myself. She went straight to their canoe, collected her case of beer, and walked away from them without any further discussion.\n\nThe next thing I knew, Emily was standing beside our canoe, a case of beer in her arms, her breasts resting on it like it was a shelf, and a victorious grin on her face. That sight made me forget about Harley Shorts, but it also reinflated the erection I had been valiantly trying to shrink. I managed to hide it from her by putting my feet up on the cooler in front of me, my knees pressing up toward my chest and my legs blocking any view of my crotch. The one problem was solved, but another was created. Assuming that pose left me in no position to help her with the beer and with no good excuse for not getting up and doing so.\n\nWhen I didn't move to offer help, Emily hoisted the beer into the canoe by herself with a grunt. \"Geez. Do I have to do everything myself?\" she asked, rhetorically. Luckily, she was smiling and her tone was playful. If she suspected the reason I wasn't moving, she didn't let on.\n\nAfter climbing into the boat, again with no help from me, she bent over and tore open the beer box, her dangling breasts swaying tantalizingly in the process. She loaded a few in the cooler, handed one to me, and popped one open for herself. Sitting down on her seat, facing me, she leaned forward and spoke in a secretive tone. \"Can you believe those fuckers with the cameras? I was enjoying myself until I noticed a bunch of dudes snapping pictures and video. One creeper in particular kinda weirded me out.\"\n\n\"Yeah. I noticed,\" was all I managed in response.\n\n\"Oh well. I guess it's to be expected. It's just too bad. There'd be a lot more girls willing to show off their bodies if they didn't have to worry about ending up all over the internet.\" She paused, shaking her head. \"And then, the dude with the beer...giving him a topless picture was a bad plan. I'm glad I realized it before letting him take one.\"\n\n\"He didn't seem to mind the alternative deal you offered him.\"\n\n\"Ha. No. He sure didn't. I thought he was gonna leave bruises with those meathooks of his.\" She cupped her breasts lightly and looked them over. \"That wasn't the best idea I ever had, either, but at least it kept me covered for the picture. I felt bad about backing out on my promise, so I was overly generous with the terms of the makeup arrangement. We'd better enjoy these beers. I certainly earned them.\" She laughed.\n\n\"Your flip was pretty sweet,\" I said honestly, changing the subject.\n\nHer eyes lit up at that statement. \"Hell yeah! Nobody's topping that today!\"\n\nNoticing her bikini top lying next to me, I reluctantly decided I should give it back to her. \"Oh. Here,\" I said, handing it to her. As I passed it over, I felt the thick padding in one of the cups. \"So, now I understand the conservative top. I guess it takes some serious padding to hide those piercings, huh?\"\n\n\"Oh. Were you wondering why I chose that style? Does it look dumb on me?\"\n\n\"Yes and no. It just doesn't fit your personality or your body. You don't exactly need all that support. But, with the piercings, it makes sense.\"\n\n\"Well, yeah, I don't want to ever discuss my pierced tits with my parents, but that's not the only reason for the boring top. Ever since I got them pierced, my nipples are, like, on point at all times.\" She fingered both nipples for effect. \"Look at them. Always standing at attention.\" She wasn't wrong. They were proudly erect without a doubt. \"If I wear any of my thinner tops, I'm poking out so badly that I might as well not wear a top at all. So, now when I choose a swimsuit it's either bundle them up or show everyone my nipples and piercings. There's not much in between. I obviously like showing them off, but...in some settings that's not a good option.\"\n\nHaving listened to her talk about her beautiful, young breasts at length, with them on display not four feet away the entire time, I was more than a little distracted and my erection was beyond control. I resisted the temptation to compliment them, not wanting to sound lecherous or come off like I was hitting on her. During the few hours that we had been boatmates, she had become relaxed and comfortable around me. I was enjoying her openness immensely, and not just the part where she removed clothing. My main concern was not to do anything to damage my status with her.\n\nDeciding that I should continue my policy of acting unaffected by her raw sexiness, I grudgingly changed the subject. \"We should shove off. We're far enough behind the others that we're not going to see them at all today if we don't pick up our pace.\"\n\n\"Agreed,\" she said. \"Shove us off, Paddle Boy.\" She gave me a playful grin before swiveling to face forward and helping me push off into the river channel.\n\nI was grateful to have her eyes forward so I could adjust my hard on and give it some space. My dick wouldn't set any records for size, but it wasn't insignificant either. Fully engorged as it was, just tucking it down my leg wasn't an option.\n\nAs we picked up speed and left the rope swing party behind, Emily quietly slipped her bikini top on, then looked over her shoulder at me. \"This little stop...the swing and the beer...it's just between us, right?\" She asked.\n\n\"That goes without saying,\" I replied, casually, looking her in the eye.\n\nWe settled into a comfortable silence, paddling along at a strong enough pace to give us a shot at catching up to our group. Watching Emily's back and arm muscles flex and her bare, sweet ass rock back and forth on her plastic seat with each dip of her paddle, I was mesmerized for a while. When I finally snapped out of my stupor, I chuckled to myself about the ease with which she could turn me into a slobbering fool.\n\nTo say that I was impressed by her would have been a colossal understatement. She had shown herself to be smart, strong, confident, easy going, and I couldn't even count how many other desirable things, in addition to being smoking hot. Had I met her when I was her age, I would have moved heaven and earth for a shot at being with her.\n\nA part of me couldn't help but wish that was the case, that I was young and in a position to make a run at her. Yet, my wiser side knew it was probably better to know her this way, as a non-threatening, older guy. It seemed unlikely that she would have been so open and comfortable with me if I were a young stud trying to land her. Besides, she was so rare that chasing her would likely end in disappointment for any but the luckiest and most worthy guy. It was better and wiser to enjoy her company for the day without any grander aspirations. But, of course, young me could never have settled for that.\n\nAfter giving the paddles some effort for a half hour or so, keeping up a pretty good pace, our effort slackened as if by unspoken agreement and our pace slowed. Then, all of a sudden, Emily quit paddling at all, dropping her paddle on the deck and executing her signature swivel move to face aft again. She took a big pull of her beer and gave me a thoughtful look.\n\n\"What's on your mind?\" I asked.\n\n\"Can we just drift for a while, like we did this morning?\"\n\n\"Yeah. Sure we can. I don't like working so hard, anyway,\" I replied, with a chuckle, putting my paddle down and giving my own beer some attention. \"We might just have to see everyone else back at the campsite, though. It's getting late and if we don't catch up soon we're never going to.\"\n\n\"Do we really care about catching up to the others, though? I mean, how important is it to you?\"\n\nI wasn't sure how to answer. Ever since we had purposely fallen behind the group in the morning, I had enjoyed being alone with her so much that I didn't really want to catch up with the others. My repeated suggestions that we hurry off in pursuit were driven only by my assumption that she wanted to be around her parents and my desire not to appear like I was trying to keep us alone. I decided to be honest and hope she didn't take it the wrong way. \"It's not important to me at all. I just thought you would want to catch up with your parents.\"\n\n\"I mean...I came here to hang out with them, but the truth is I'm having way more fun away from the old timers than I would with them.\" I noticed with satisfaction that she wasn't lumping me in the 'old timers' group anymore.\n\nShe sat upright and got a little more animated, a mischievous look in her eyes. Grabbing her bikini top with both hands, she turned the padded cups inside out, exposing her breasts, which were left bulging out above the disheveled top. She tipped her head back and drained the rest of her beer. Putting both hands in the air, she yelled, \"woohoo,\" her voice echoing across the water. Then, taking on a calmer, more serious tone, she continued making her point. \"I love Mom and Dad to death, but I can't exactly let loose around them, you know?\"\n\n\"I understand completely,\" I said, with a knowing smile.\n\nThere were no other boats nearby, but there were two 50ish good ol' boys in overalls fishing from the bank a little downstream from us. I saw them take notice of us when Emily let out her yell. Facing upstream, Emily hadn't noticed them. As we passed them, her gorgeous breasts still on display, one of them let out a low whistle. Surprised to discover their presence no more than 15 feet away, she blushed a little, but made no move to cover up or turn away. Instead, she faced toward them and said, \"how are you boys doing today?\"\n\n\"Wirr doin' just fahn young lady. And you?\" one of them replied.\n\nEmily giggled and said, \"I'm enjoying myself. Thanks.\"\n\n\"That's how it should be. Y'all have a good one, now,\" the other one said. Both of them looked me over with sly grins, undoubtedly wondering how I got so lucky to be in that canoe with her.\n\n\"You too,\" she and I both replied, in harmony.\n\nThe current quickly took us around a bend and beyond sight of the fishermen. Emily fixed her bikini top and tucked her breasts back into it. \"Maybe I should slow down on the beer,\" she said, laughing. \"Anyway, I was just saying that I'd rather we coast to the finish point and relax, if it's all the same to you. We'll see the others at the campsite tonight \"\n\n\"That sounds great to me,\" I said, meaning it. However, I was a little concerned about what the others, particularly her parents, would think about us doing our own thing all day. Being the one who knew the route and a veteran of the river, I would have trouble convincing anyone that our slow pace was due to anything beyond my control. It wouldn't take much imagination for them to dream up some ulterior motives on my part that might have caused me to drag my feet. There wasn't much I could do about appearances at that point, though.\n\nEmily reclined in her seat as well as was possible, cracked open another beer, and said, \"so I'll bet you have some other interesting cop stories you could tell me.\"\n\n\"I could probably remember one or two, but I'd rather hear more of your stories,\" I said, a wry grin on my face. We had maybe two hours of floating left before we hit the pickup point and I intended to make the most of it. The sky was clouding up and I knew rain was in the evening forecast, but that wasn't a big concern to me just yet. Pleased to hear that she was enjoying our time together as much as I was, I was too focused on our interaction to give outside forces much thought.\n\n***\n\nAs luck would have it, we only enjoyed maybe another 45 minutes of peaceful floating before the storm hit. I watched the thunderheads build into a fearsome looking tower overhead while listening to a couple of Emily's stories about college shenanigans. Due to a combination of overestimating our pace and underestimating how fast the rain was approaching, I remained unconcerned for too long. By the time I realized we were going to get hit long before reaching our takeout point, it was too late to do much about it. I started to paddle again just before the first raindrops fell.\n\nI wasn't sure just how far we still had to go when it started coming down in torrents, but I knew it was far enough that we were in for quite a drenching. Even if we put on all speed possible, we couldn't expect to be off the water in the next half hour. I explained that to Emily, screaming between thunderclaps. True to form, she took the bad news well. She just shrugged her shoulders and smiled through gritted teeth and squinting eyes while the downpour bombarded her face. As it turned out, even with both of us giving a decent effort at the paddles, nearly an hour passed before we caught sight of the takeout point.\n\nAs the storm raged, the river rose and the current picked up rapidly, causing me some anxiety about our safety. Even worse, though we had been slow all day, I was fairly certain there were others still on the river behind us. I was even more concerned for them. The cop in me wanted to turn back and help others make it in safely, but that wasn't practical at all. I knew getting the two of us safely off the river was all I could reasonably accomplish.\n\nEach time we passed another takeout point or campground, I considered pulling us off the river there. The campground at our scheduled point was the only one that would have a bus to our campground, but it was farther downriver than many others and we could possibly come to regret waiting for it. I ended up staying the course and waiting for our scheduled take out point, but was more than a little anxious for it to appear. Mercifully, just as my anxiety was peaking and the last of our good spirits were circling the proverbial drain, the orange flags marking our takeout point came into blurry view through the monsoon.\n\nThe terrible visibility caused me to recognize the alcove where we were to beach our canoe later than would have been ideal. Compounding our late turn toward the beach, the rain-swollen river was rushing with a force that made controlling our direction of travel at all quite difficult. We paddled for all we were worth, but were very nearly swept on down the river. The front of our boat slammed into the rock point dividing the alcove from the main channel and we teetered between safety and uncertainty for a moment.\n\nAfter an anxious handful of seconds, using her paddle, Emily shoved us off the rocks and into the calmer waters of the beaching area. The moment our bow touched the shoreline, both of us dismounted as if the canoe was on fire. We shared a brief, triumphant laugh in the ankle deep water while fighting to blink the rainfall from our eyes.\n\nThe teenage guys who normally manned the shoreline to pull the canoes out and collect the equipment were nowhere to be seen. I was annoyed enough about their absence that I considered just leaving the boat where it sat, but my do-the-right-thing side won out. With Emily's help, I pulled the canoe about 20 feet from the water to allow for the river's level continuing to rise. We left the paddles, lifejackets, and such right in the boat and hurried off with our cooler and dry bag in search of the bus that would take us to our campground. After we passed through a stretch of trees riverside and into more open ground beyond, a big, yellow school bus loomed out of the haze up ahead. Shouldering my cooler, I broke into a clumsy jog toward it with Emily on my heels.\n\nWhile sloshing through ankle deep standing water toward the bus, I noticed, above the cacophony of the storm, that Emily was singing a song. Without really meaning to do so, I stopped moving and tried to identify the song. Only two steps behind me, she had to stop when I did. She wore a puzzled look. By way of explaining my halt, more than genuine interest, I yelled an inquiry about the name of the song. She gave me an appreciative smile and closed the distance between us to ease the difficulty of communication. Grabbing my shoulder, she leaned in toward me until our faces nearly touched.\n\nShe was pleased by my show of interest and eagerly identified the song, explaining in animated fashion why it was one of her favorites. Unsurprisingly, given the generation gap between us, the song and the artist of its origin didn't ring a bell. She might as well have been speaking Chinese, for all the good her explanation did me. I wasn't really focusing on her words, anyway.",
        "As it had before, the closeness with her affected me to an almost embarrassing extent. I was fixated on her facial features, just inches away. Her wet eyelashes stood out, looking unnaturally long and accenting her expressive eyes. Her cute little nose was tinted red and her skin was flushed more pale than usual due to the cold rain, increasing the prominence of the freckles scattered across her high cheekbones. Her lips were nearly colorless, but still so feminine and inviting. Even in her weather-beaten state, she was a strikingly attractive woman.\n\nAdding to and almost overshadowing her beauty was her incredible, positive personality, on open display as she shrugged off her discomfort and extolled the virtues of this song in her energetic, lively way. It would be hard to overstate how attractive she was to me at that moment. My heart rate was up and my throat was dry just from standing close to her. When she finished talking, I smiled, pretended to understand what she had said, and continued toward the bus before she could recognize her effect on me.\n\nReaching the school bus, I was pleased to find its door open. I left the cooler on the ground outside and jumped right through the doorway onto the stairwell. In the process, I startled a man sitting in the driver's seat. He looked to be in his fifties, with thin-rimmed glasses and long, graying hair pulled back in a ponytail. He was a dead ringer for the late comedian George Carlin, a classic hippie look straight out of central casting. \"Hey,\" he said. \"You jus' come off the riverr?\" I confirmed that his guess was correct and took another couple of steps up the stairway, making room for Emily to get in out of the rain behind me.\n\nWhen I reached the top of the stairs, I looked down the aisle to find that the bus was devoid of passengers. The only occupied seats were the first one on either side, each of which contained a fit-looking young man wearing a notably dry campground t-shirt. I figured they were the ones who were supposed to be manning the takeout point. Their lazy, unconcerned posture, along with their dry shirts, made me angry, considering that their help down at the riverbank could be crucial in that weather. I suggested they go down there and look for stragglers coming down the river, but both looked uninterested in my opinion and neither of them budged. Shrugging off my frustration with them, I turned to the driver, provided the name of our campground, and asked if that was the right bus to take us there.\n\n\"It's the raht bus, but it don't sound like we're gonna make no more runs outta 'ere today,\" he said. \"Gimme a minute and ah'll trah to figger out fer sure.\" He keyed a handheld radio and began trying to raise someone on it.\n\nIt hadn't even occurred to me until he said it that our ride out of there might be canceled by the weather. As soon as I heard it, though, it made sense to me. The road out of the campground was a winding little gravel one that traversed at least two low-water crossings before connecting with the main road. Those crossings were likely impassable during a heavy downpour like that.\n\nI thought to suggest we have a seat deeper in the bus and dry out while the driver waited for an answer, before noticing an uncomfortable gale of cold air blowing from the passenger area. They obviously had the air conditioner cranked up back there. Wearing only wet swimsuits and already chilled by the rain, Emily and I were better off staying near the door. I settled for standing aside slightly on the platform, allowing Emily to come all the way aboard. She climbed up the last few stairs and stood next to me in the space I had vacated.\n\nIt hadn't occurred to me previously, but the two slacker boys in the front seats hadn't been aware of her presence until then. Their reaction when she came into their view was hilarious. They both shot out of their slouchy poses and became ramrod straight, their interest in our situation seeming to grow tenfold in an instant. I nearly laughed out loud. She flashed her eyes almost imperceptibly in my direction, telling me she had noticed the same thing.\n\nThe driver got hold of whomever he was trying to reach on the radio and began a shorthand conversation that was difficult to understand, given the language being used and the background noise from the rain's unrelenting assault on the metal roof. Though he was immersed in his radio interaction, he too took notice of Emily. Without any attempt at subtlety, he checked her out head to toe, even adjusting his glasses for a clearer view at one point.\n\nWhile I struggled to make sense of the campground's radio codes and the terminology being used in the static-filled discourse, Emily surreptitiously leaned into my field of view. She gave me a mischievous and conspiratorial look as though she was about to do something sneaky and wanted me in on it. I responded with an encouraging grin and waited to see what she would do.\n\nShe began by making a show of curiously checking out her surroundings. High and low, this way and that, she craned her neck and swiveled her head around looking at things. All the while, she had her shoulders pushed forward so her cleavage popped out impressively. When her gaze landed on each of the boys during its circuit, she met his eyes and smiled politely at him.\n\nNext, she faced the front right of the bus, leaving her ass pointed in the direction of her admirers, whose eyes all widened when they saw how little coverage her swimsuit provided. She played as though she was looking over my shoulder through the windshield of the bus at the storm, standing on her toes and flexing her legs and ass in the process. Both of the young guys leaned over in their seats for better view angles and Hippie Driver just blatantly stared. Her intention was clearly to tease them and she was succeeding at it, but she wasn't done yet.\n\nFor her finale, she pivoted as though something had caught her attention outside the doorway through which we had entered the bus. Acting like she couldn't see well enough from her standing angle, she bent at the waist, grabbing the handrail along the stairway for support, and leaned her head down almost to the floor. It wasn't a natural movement that a normal person could make, looking more like a ballet or gymnastics stretch, but it did get her head down to an angle facilitating a view through the door. It also had the effect of causing her labia, covered down the middle by the bikini but bare along the edges (as I had noticed earlier in the day), to pop out prominently at the base of her ass and between her legs. The image presented, her little taco not completely covered and bulging out between all that tanned, toned, flesh, was a sight to behold. She held that pose for a few seconds, letting us all get a good look, then straightened back up.\n\nTurning back around, she wore a serious and satisfied look on her face as though she had gotten the view she was looking for and was oblivious to any display she had put on in the process. The boys looked stunned and sat with their mouths open, one of them with beads of sweat running down his temples. Hippie Driver literally licked his lips and broke into a stupefied grin, ignoring radio traffic intended for him in the process. Emily turned to me and flashed a knowing grin that I returned as well as I could without the others seeing.\n\nThe driver eventually recovered his composure and finished his radio call. The final word was that no buses, or any other vehicles, were allowed to leave the campsite until the following morning, at the earliest, due to high water blocking the road. We were welcome to camp there for free or rent a cabin at a reduced price for the night. He gave directions to the campground office and a covered pavilion where he believed some other stranded canoers could be found. He was pretty certain that nobody else from our campground (which meant nobody else from our camping group, too) had been stranded there. It seemed that my time alone with Emily was going to last a while longer.\n\nI suggested to her that we head over to the office and see about some accommodations for the night. There was no reason to stay on the bus. Drying off would be pointless as we would be drenched again whenever we left and neither of us were eager to hang out with those guys any longer than necessary. Emily agreed with my plan of action.\n\nBefore leaving, she exhorted the two young men to go down beside the river and see if anyone needed help. They put up no argument and headed off into the rain almost immediately, acting as brave and manly as possible. I snickered as I watched them go. Sometimes results just depend on who's asking. I enjoyed seeing those lazy bums scramble to impress her and hoped maybe they learned something from the interaction.\n\nIt took several minutes of sloshing through the deluge for us to reach the campground office. It was a wooden building resembling a log cabin with an extensive covered porch out front. Reaching the porch, we dropped our belongings and stood around letting the water drain off us. After checking out our surroundings, we looked at each other and shared a smile.\n\n\"Sorry about that back there,\" Emily said. \"I couldn't resist.\"\n\n\"Don't be sorry. It was entertaining. Their reactions were priceless.\" I didn't mention how much I had enjoyed the show as well. \"You had those two boys eating out of your hand afterward.\"\n\nShe laughed at that statement. \"Yeah. They were certainly eager to please.\" Changing the subject, she asked, \"so, I understood the part about us being stuck here until tomorrow. What are our options for tonight?\"\n\n\"Well, we need to hope they have a couple of cabins available. Campsites won't do us any good without tents and such. After that, we need dinner.\"\n\n\"I didn't bring any money, but I can pay you back later.\"\n\n\"I'm not worried about that. I have it covered. Let's just see what they have.\" I retrieved my credit card from the dry bag and gestured toward the door, then added, \"I'm sorry we got stuck here.\"\n\n\"Not your fault,\" she said. \"I'm the one who suggested taking our time.\" She gave me a reassuring smile.\n\nWe walked into the office looking like drowned rats and leaking water all over the floor. I was anxious to find out what accommodations were available. I hadn't ever stayed at this campground, but knew that cabins normally had to be reserved far in advance. If none were available, I had no backup plan in mind.\n\nThe campground manager, a dour looking older woman, greeted us from behind the counter, introducing herself as Ann. She looked us over and sighed audibly, a look of disapproval on her face. My guess was that she saw us as a couple and found the age difference inappropriate. Whatever the reason behind her unfriendliness, our interaction didn't begin well.\n\nI told the old sourpuss we had been stranded by the rain and needed two cabins for the night. She only had one to offer, but my request must have put her concerns about us as a couple to rest because her demeanor brightened. The available cabin had a full bathroom and two full-sized beds, which was plenty for our needs. She even gave me a discounted price due to our late check in and involuntary detention there.\n\nI was incredibly relieved to have secured a dry place to sleep for the night. My only remaining concern was about whether sharing a cabin would be uncomfortable for Emily. I had requested two of them to avoid any awkwardness. At least Emily had overheard my request and wouldn't think I had us rooming together by choice.\n\nAs Ann finished running my card, I noticed her face cinch up into a scowl, her gaze directed over my left shoulder. I turned to determine the source of her ire and couldn't help but smile when I saw what it was. Emily was watching the storm out a window, her back toward us. A puddle of water had pooled around her feet and water continued to trickle down her body. I knew the puddle wasn't what had her upset, though. From the front, Emily's swimsuit was fairly conservative. However, from the rear it left her basically naked. To this judgmental woman, Emily had gone from classy young lady to scandalous slut simply by turning around.\n\nOf course, Ann's opinion of us wasn't terribly important to me, but I thought keeping on her good side during our short stay might be beneficial. In an effort to redirect her attention from Emily's bare ass, I asked her a whole slew of questions about the campground and such. I was mostly successful, her mood lightening up again, and I got some important information in the process, as well.\n\nThere was a large covered pavilion in the campground that served as a gathering place, particularly during rainy weather. Dinner of some sort would be served there. With another swipe of my card, I purchased dinner tickets and some bottled water as well. I was glad I had asked. At least we wouldn't go hungry all night.\n\nI looked over the campground map on the wall to get my bearings and was ready to head out when Ann's husband appeared out of the back room. A tall, lanky guy with a good-natured way about him, he introduced himself as George and offered his sympathy for our storm-related troubles. He queried Emily about herself and then launched into endless small talk with her about her university. I let them go on for a while before suggesting we get going. As friendly and accommodating as they both were, their conversation could have gone on for hours.\n\nOn our way out of the building, I noticed a clock on the wall. It had been quite a day up to that point and it was still only slightly past five o'clock.\n\nBefore leaving the cover provided by the building's porch, we took out our phones and messaged our people. My text to Andy received an instant reply. The rest of the group had come ashore before the rain even started and bussed back to our campground before the road was closed. He was hunkered down in his tent, but promised to tell everyone else what happened to us when he had a chance. He concluded the exchange by saying, \"have a fun night with the prom queen. Keep your hands to yourself.\" The text was punctuated with a winking face emoji. Emily messaged her parents, filling them in, but got no immediate response.\n\nDespite the heavy downpour, we didn't run the couple hundred yards to our cabin. We were already so drenched that ambivalence had set in. The rain, still coming down in sheets, was making too much noise to make any conversation practical, so neither of us said anything the whole way. We slogged along through huge patches of standing water, me carrying the cooler and her the dry bag.\n\nI spent the walk overthinking our situation and worrying. Concerns about how Emily felt about us sharing a cabin and how her parents were going to feel about me disappearing with her all day and night were gnawing at me. The smartass tone of Andy's text seemed to confirm my fears about how our disappearance would be viewed among the others. Though I had hoped for more time with her earlier in the day, I was less than excited about the extra time we had coming. Far from expecting the rest of the evening to be a blast, I found myself just hoping it wasn't too awkward.\n\n***\n\nArriving at our cabin, I was pleased to see it was a little more refined than some I had used elsewhere. It had a roofed porch outside and the inside was basically equivalent to a standard chain motel room. There were two beds, a TV on the wall, a small refrigerator, and a full bathroom. The beds were made up with linens and the bathroom had hotel towels and sample size soaps and shampoos. I was actually glad to be spending the night there rather than a tent, given the horrendous weather.\n\nOnce inside and finished with the cursory tour, I felt awkward toward Emily, just as I had feared. Throughout the day I had been careful about not appearing to have designs on her, treating her inappropriately, or making her uncomfortable in some other way. Given the turn of events, my concerns in that regard had become so acute that I was the one who was uncomfortable. I was not at all unhappy about spending the rest of the night around her, but I needed reassurance that she was okay with the situation and trusting of my intentions.\n\n\"It's not bad, huh?\" I asked her.\n\n\"Beats the hell out of sleeping in a tent,\" she replied, smiling.\n\n\"I'm sorry they only had one available. I can see about some other arrangement for me if sharing it makes you uncomfortable.\"\n\n\"This is just fine. I'm not uncomfortable at all, outside of being completely waterlogged, I mean,\" she said, smiling widely. \"Let's make the best of things. We still have plenty of hard-earned beer to drink. I say we head over to that covered area and eat some time soon. I'm starving.\" I was relieved to see no sign of discomfort or frustration with the situation in her demeanor and decided to quit worrying about it.\n\n\"That sounds good to me. I'm ready whenever you are.\"\n\n\"The only problem for me is what to wear. I've been in this wet suit for hours. I need to get into something dry,\" she said.\n\nI dumped out the dry bag on the bed and took stock of our clothing options. The only dry clothes we had between us were her jean shorts and my t-shirt.\n\n\"I don't mind hanging out in my trunks for a while longer if you want to change into these,\" I offered.\n\n\"That'll work.\" She said, clothes in hand and heading for the bathroom.\n\nTwo minutes later, her suit was hanging near the air conditioner vent and she looked ready to go. I liked the way she looked in my t-shirt. It was way too big for her, but she knotted it along the side at the bottom, taking out some of the slack. The movement of her braless breasts when she walked was sexy as hell. It wasn't a terribly modest look, but I already knew how little that mattered to her. She had taken down the ponytail she wore most of the day and her hair looked pretty good, despite still being wet. It occurred to me that she hadn't been wearing any makeup all day and I shuddered at the thought of how good she could look all made up for a night out. She gave herself a once over in the bathroom mirror and stood by the door, waiting.\n\nI collected two beers in each hand and we headed out. Still shirtless in my wet swim trunks and water socks, an armload of Busch Light, my hair a disheveled mess under my ratty old ballcap, I probably looked about like Cousin Eddie from the 'Vacation' movies. It was lucky for me Emily was such a good sport, otherwise she might not have been willing to be seen with me. The sight of us together was likely to cause a few raised eyebrows, I imagined.\n\nPausing on the covered porch of our cabin, we both realized that we didn't have a plan to keep us dry during the trek to the pavilion. It was at least a hundred yards away, smoke from the fire there being just visible from our cabin, and rain was still falling steadily. The rain didn't matter much to me as I was still completely soaked, anyway. Emily, on the other hand, was wearing the last dry clothes we had and probably hoped to keep them that way. I was considering taking the plastic trash can liner from the cabin's bathroom and turning it into a poncho for her when the rain abruptly let up.\n\n\"Run for it?\" Emily asked.\n\n\"Yep.\" It seemed like our best bet and there wasn't time to debate it if we wanted to cover the distance before the lull ended.\n\nI took off for the pavilion at a jog, the best I could do without shaking my beers such that they wouldn't be drinkable any time soon. Emily was beside me before I had gone far, laughing at me as she worked to jog in her flip flops without tripping. Rain was still coming down sporadically, but the pace we were making would deliver us dry to our destination if the lull would just last a couple of minutes. We weren't that lucky, but it wasn't a resumption of the downpour that ruined our plan."
    ],
    "authorname": "JohnBergin",
    "tags": [
        "exhibitionism",
        "mature",
        "canoe",
        "river",
        "public nudity",
        "teen",
        "cheerleader",
        "bikini",
        "flashing",
        "blonde"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/jasons-best-canoe-trip"
}