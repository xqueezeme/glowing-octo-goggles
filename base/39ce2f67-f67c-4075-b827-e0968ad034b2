{
    "title": "Eyes Like Winona Ch. 06",
    "pages": [
        "*Ugh... Shortness...\n\nSorry! But I'm just releasing a short chapter so you can see it. I'm working, but things are going slow. I'll have the next chapter out as soon as I can.\n\nAll Characters are 18+*\n\n*\n\n\"Please help me.\"\n\nThat was the last straw. Before I had been snuffling. Little gasping sobs under my breath. But with those three words, my legs went limp and I slid to the sidewalk. I took a deep whooping breath and wailed into my hands, clasped over my mouth. I had been swallowing the blood from my cut tongue, and I felt so sick that I retched a little as I sobbed.\n\nHe dropped down next to me. I couldn't look at him. I flinched when he tried to lay his hand on my shoulder.\n\n\"Neil!\" He muttered. \"Come on... Come on Neil. Follow me.\"\n\nI weakly got up, keeping one hand at my waist, keeping the torn jeans shorts from falling down. I was off-balance, and I fell. Drake caught me. His hand under my armpit. He heaved me up in one easy motion and supported me. I leaned on him. I could have walked by myself, but I didn't.\n\nI closed my eyes as we walked, letting him lead me, feeling the tears fall even from my closed eyes. I could tell when we reached his room. I could smell the air fresheners that he kept around. I could hear the door opening.\n\nI tried to stop crying. I managed to quiet the sobs. He gently released me so I sat on the edge of the bed. A huge numb jolt of pain made me whimper as I sat down. He was digging around in a drawer. He pulled out a cell phone and dialed in a number, glancing back at me. I flinched away from his gaze.\n\n\"Ferdinand. Ferd... Something happened to Ryan. He's back at my apartment. Somebody hurt him.\"\n\n\"Chris...\" I whispered. \"Tio.\"\n\nHe glanced back at me, and I closed my eyes. \"Their names. The ones you watched.\"\n\nI was mumbling, but he understood. \"Ryan says it was the couple who came here and shared him, the couple where I watched.\" His voice was thick and choked with anger.\n\n\"Alright. Alright, I will. Goodbye.\"\n\nHe put the phone down and he was by my side in an instant. \"Ferdinand is gonna take care of those two, okay?\"\n\nI nodded, looking down at my knees. They were bloody from my fall out of the van. I started to shake. I tried not to cry, but I was shaking with the effort.\n\n\"My family.\" I whispered. \"I g-g-gotta g-go h-home.\" I felt so sick that I held my stomach and bent over, resting my face between my bloody knees. I whimpered. \"Wh-What do I tell them Drake? They're gonna... They're gonna be so...\"\n\nI was babbling. He rested his hand on my back. I shut up. His hand was cool and dry and very light.\n\n\"You don't have to go home.\" He whispered. \"What's your number?\"\n\nI gave it to him. Feeling a dim ember of hope in my chest.\n\nHe called my home on his cell phone. My entire family shared a cheap phone with a minute-by-minute plan. I was so quiet that I could hear it ringing. When I heard Ben say \"Hello?\" I curled up again, feeling physically ill with shame and panic.\n\n\"Hey... This is one of Neil's friends. We got a bit hammered tonight, so Neil's gonna sleep here. I'll get him to work in the morning, no worries.\"\n\nHe was slurring his voice slightly. Falling into the role of a drunk friend. I could hear Ben talking angrily, demanding to talk to me. I held out my hand.\n\nDrake covered the mouthpiece of the phone with his hand. \"Are you sure?\" I nodded, and accidentally looked into his eyes for the first time since I had been assaulted.\n\nHe was so beautiful.\n\nI fumbled the cell phone from his hand.\n\n\"Ben?\" I whispered.\n\n\"Neil, where are you? I'm gonna come pick you up.\"\n\nI flicked my eyes up to Drake. He was digging around in a drawer for something. I could see the way his muscles bunched up between his shoulder blades as he dug.\n\n\"No.\"\n\nBen didn't say anything for a moment. Drake looked up and his dark worried eyes gave me strength. \"What do you mean, No? I'm coming to pick you up!\"\n\n\"No. I'm fine, Dean is gonna give me a ride.\"\n\n\"I thought you said his name was Scott.\"\n\n\"I have more than one friend Ben. Now Fuck off.\"\n\nI wanted to drive him away. Make him angry enough that he wouldn't want to come. But I was surprised and hurt by how vindicated I felt. By the all-too-real anger in my voice. I was surprised at the depth of real anger that I found for my brother. I tried to stop. I didn't want to be angry at him. But I was drunk on pain, and I couldn't halt the bitter flow of words.\n\n\"Stop pretending to be worried about me for once and pretend to be worried about the others. Get off your lazy ass and watch your family for once. Tell your bitch girlfriend to take a night off. Get a fucking job, and then maybe you can talk to me with that tone of voice.\n\n\"Contribute for once, and then maybe you can pretend like you're something other than an entitled parasite.\"\n\nHe was silent. Stunned.\n\n\"Toby is getting out tomorrow.\" He whispered hollowly. \"At eight... You'd better be there.\"\n\n\"Goodnight Ben.\" I whispered. I shut Drake's phone, and I started to weep.\n\nDrake sat on the bed next to me and very tentatively rubbed my back. It felt good.\n\n\"Can I t-take a shower?\" I asked.\n\n\"Sure. I'll lend you some clothes tomorrow. But you're gonna need a story.\"\n\nI looked at him for an explanation. He touched my chin, scraped up from the fall out of the van. I nodded tearfully, and I limped to the shower. It was a glass box, the glass was frosted about halfway up. I got into the box first before stripping my shorts. \n\nI nearly retched when I saw the ugly red blotch that had soaked through the seat.\n\n\"Are you okay?\"\n\nI nearly said yes. It was just ingrained in me to say that whenever somebody asked if I was okay. Instead I said nothing and started the water. \n\nI pressed my lips together tight to muffle the moan of pain. My scrapes stung. The water felt good on my bruises. I could see pinkish water running down my legs. I put my face under the spray and I felt like I was drowning. I stayed that way for a long time.\n\n---\n\n\"Neil. Neil. NEIL!\"\n\nThe door opened and I flinched and shrank into the glass, gasping at the cool pane against my wet flushed skin.\n\nDrake slid the stall door closed. \"I called your name ten times and you didn't say anything. I was worried.\"\n\nI turned the water off. Drake tossed an old white towel over the door. I buried my face in it. It was clean and soft. It smelled like detergent. A sweet, somehow childlike smell. I lifted the towel, and there was a small pink spot where my chin had been.\n\nI wrapped the towel around my waist and opened the stall door. He was standing there, holding my torn shorts. \n\n\"How bad is it?\" He whispered.\n\nI felt so cold out of the water. I was shivering. Water from my wet bangs was dripping into my eyes, and the remnants of Drake's shampoo stung them. I had used the shampoo without even thinking. The ritual had made me feel a little better, but now I felt horribly exposed. Like a naked nerve ending, raw and pained and alone.\n\nHe was standing three feet away from me but it felt like more. The careful way he maintained his bearing. Even now.\n\n\"Neil?\"\n\nMy name. Hearing my name from his lips broke me. Broke the skin of restraint.\n\nI rushed at him. One unsteady step, and then my face was buried under his chin and my arms were tight around his thin chest and I was holding on so tight. I didn't want him to push me away. The towel fell down but I didn't care. I couldn't let go. I needed him. The sound that rushed out of my mouth was more animal than human.\n\nWhat was this feeling? He wasn't pushing me away. His wiry arms in a cradle that held me close. His one bony hand flat between my shoulderblades, and the other cradling the back of my skull. His cheek was flat the side of my face, his chin hooked on my shoulder. His body was against me, frank, and there.\n\n\"This wasn't supposed to happen.\" He choked, holding me so tight that my bruises throbbed. \"You were gonna be okay... You were gonna get out of here.\"\n\nThe limp towel was pinned behind our bodies.\n\nI pressed my lips against his chest. He was crying. I could feel his chest heaving. I had seen his reddened eyes before. But I had never seen him cry. Now I could feel it. It was my first kiss. My first Drake-kiss.\n\nHe held me for a minute longer, and my sobs dwindled to soft tremors. He squeezed me a little tighter. \"Are you still bleeding? We should take you to the hospital.\"\n\nI shook my head. \"I can't. I'll b-be fine.\" I could hear Drake's heart beating in his chest. It soothed me. I could feel my own heart slowing, my breathing.\n\nHis grip on me was loosening. I hugged him tighter, not wanting it to end. Afraid of the uncomfortable realities outside of his arms.\n\nHe gently pushed me away, and the towel fell down from where it had been pinned between us. I didn't move. I just stood in front of him, naked and completely exposed. I put my arm behind me, and felt between my buttocks with my hand. My skin was clean and hot and dry. When I brought my hand back, it was clean. I let my hand go limp. And then I bent down to retrieve the towel, feeling my cheeks heat up. He had seen me naked before. He had seen me between Chris and Tio, those monsters. But I felt more naked now than ever.\n\nI wrapped the towel around my waist, and he went to dig in his drawer. He brought out a first aid kit and a baggy black shirt with YAMAHA scrawled across the chest in white.\n\nI pulled the shirt over my head gratefully. He wet a cotton ball with alcohol and started to dab it at my chin. It stung bad enough to make my eyes water, but I sat down and took it.\n\nHe cleaned the scrapes on my knees and elbows. He bandaged my chin, and my left elbow, which was the worst. The gauze pads crackled uncomfortably.\n\n\"It's late.\" Drake murmured quietly. Subdued. We should get to bed.\n\nWere we just going to ignore it now? Ignore the desperate way we had embraced?\n\n\"Kay.\" I whispered.\n\n---\n\nThe covers, they were clinging to me. I tried to kick them away, but that just tangled me more. I started to moan, because the movements hurt me. They hurt my scrapes and my bruises, and set a sick deep throbbing deep in my abdomen. It hurt, but I didn't stop trying to kick the covers off. I groaned with the pain and the panic. I realized dimly that I didn't have any covers on me. But the horrible constricted feeling didn't go away.\n\nSuddenly, the tight and menacing tangle of the imagined covers was replaced by something shockingly warm and strong. Drake was clinging to me, shushing me. I wept tiredly. I was so tired. More tired than scared or hurt or anything else.\n\nI turned and I kissed him. I kissed him for real. On the mouth. It was really short. I broke it a second later, and I buried my head in the pillow. Crying tiredly, trying to wake up from this confusing dream. Trying to fall asleep from it.\n\nWas I awake?\n\nI felt a sick jolt of anxiety at that thought. Had I just kissed him? My head hurt.\n\nI felt the covers being pulled carefully up to my waist. I felt his hands pulling down the shirt so it covered me again.\n\nThen he snuggled up closer. I was facedown in his pillow trembling with shame. He rested his arm across my shoulders.\n\n\"It's okay Neil... I'm here. I'm here baby.\"\n\nI looked at him, my vision blurry with sleep. He rested his hand on the side of my face, and he kissed me.\n\nThis time the kiss lasted. I could taste his hot breath, still minty from toothpaste. I could feel the curl of his lips, the puff of air on my upper lip when he exhaled through his nose.\n\nMy hand crept up, and I slid it under his head, cradling him. Making sure he wouldn't slip away. My heart was beating frantically fast in my chest.\n\nHe broke the kiss. \"I'm sorry.\"\n\n\"Why?\" I whispered. I kissed him again, a soft press of lips. He was thinking, his eyes closed.\n\n\"I'll tell him tomorrow. I'll tell Ferdinand that I don't want to work anymore.\"\n\n\"What?\" I whispered, snuggling into him. It didn't feel real. A sick part of my stomach told me that this had to be some terrible misleading dream. But I didn't want to believe that. This had to be real.\n\nIt had to be real or I would go crazy when I woke up.\n\n\"I don't want to get hurt anymore. I don't want to see you get hurt.\" He whispered.\n\n\"Why now?\" I whispered, nuzzling into his chest. I pressed the center of my aching forehead into his chest as hard as I could. As if the beat of his heart could cure my terrible headache.\n\nHe hesitated. \"I don't want to live like this anymore. I got enough saved up. I want to stop.\" He lowered his head so his chin and mouth were at the top of my head. He whispered the last words into my hair.\n\n\"I know I screwed up. Would you give me another chance? Please.\"\n\nFinally, with a little shudder. \"I think I love you, Neil.\"\n\nWith those words, those impossible words, he held onto me tighter than before, so tight that he hurt my bruises. He kissed me on the forehead. I felt feverish. His lips were warm against my sweaty skin.\n\n\"Am I asleep?\" I asked quietly. I was sure that I was asleep. This was a dream. It felt like a dream in so many ways.\n\n\"No.\" He said quietly.\n\nI felt the tears stream down my cheeks, and I wiped them off on his chest. \"Thank you.\" I whispered.\n\n\"For what?\"\n\nI felt my eyes close as I snuggled as tight and close as I could into his chest. My nose flattening, my lips against his skin. \"For being there.\" I mumbled, muffled.\n\n\"Is that a yes?\"\n\nI laughed, even with the tears stinging the bridge of my nose.\n\n\"Of course it is.\"\n\nI was so tired and weak that I fell asleep after that. But I didn't have any more nightmares.\n\nMy boyfriend was there to protect me. "
    ],
    "authorname": "Cruel2BKind",
    "tags": [
        "gay love story",
        "gay novella",
        "gay romance",
        "gay"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/eyes-like-winona-ch-06"
}