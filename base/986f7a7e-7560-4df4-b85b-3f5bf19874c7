{
    "title": "Lucille and Mrs. Miller Pt. 03",
    "pages": [
        "This story is total fantasy and has no relationship to real life or experience. There is no under-age sex or cruelty.\n\n*****\n\nYou have probably read my husband's account of his conversation with young Brian and our later discussions concerning the situation. Everything he related is absolutely true but inevitably we both had slightly different versions of events.\n\nI suppose my own feelings were affected by my previous thoughts about my tutor Mrs Grace and I was becoming infatuated by our Cleaning Lady, Mrs Miller whom I tended to see in the same light as Mrs Grace.\n\nAlso I hadn't fully shown my feelings to my husband when he talked about how well-endowed young Brian was. To be honest I had thought a lot about Brian and it tended to really come to fruition when I had squeezed past him in the shed. \n\nTo feel his penis pressing into my tummy with its special shape at the top did in fact give me an orgasm which I had to disguise. Having said that I couldn't help pressing myself into him as I slid past. I know I had to watch how carefully I spoke. I was afraid I may even squeak.\n\nActually when my husband had explained to me later, that the special shape I had felt was young Brian's knob at the end of his penis I did pant and when I questioned Bruce about it, my voice did squeak a bit. \n\nWhen I had got back to the house I deliberately avoided seeing Mrs Miller and had immediately gone to the bathroom. Ostensibly I was just going to have a pee.\n\nIn reality as I sat there with my panties around my ankles as I imagined that I had Brian's penis out and was easing the foreskin up and down his massive rod. I could almost see the the top with the wide open slitty eye where his sperm would soon erupt.  \n\nIn my fantasy I was unsure who came first. I could hear his mother hoovering in the hall outside the bathroom and knew I had to stop and get on with my work.\n\nI swiftly pulled my panties up and adjusted my skirt. Had a quick wash and went through the toilet door. \n\nMrs Miller was so calm and serene and smiled without speaking. I made some comment about having just taking Bruce and Brian a cup of tea and toast out to the shed. \n\nShe smiled at me but I could help thinking she must have noticed how short my skirt was. I just escaped into my office.\n\nThe rest of the day had followed uneventfully until Mrs Miller had knocked politely at my office door and asked me if I could ring my husband to tell Brian she was ready to leave. I did as she asked and they both left. As they left Mrs Miller gave us a little wave. I think Bruce mentioned later that we were all part of a complex series of events which were a little taboo but very exciting. I thought that as well. \n\nThat evening Bruce told me everything that had transpired during the day. I could see the subjects he and Brian had talked about excited Bruce, and his excitement was very obvious as he retold the story to me. I also enjoyed listening to my husband and didn't hide my own excitement.\n\nThat night we had some glorious squishies partly due to our fantasies and partly due to the events of the day. Bruce was embarrassed about his own shortcomings but the excitement was exaggerated due to Brian's obvious large attributes. I could see that Bruce was excited by his own embarrassment and possibly his humiliation. In the morning I told him how much I loved him. My love was real. I really loved my Bruce.\n\nThe next morning, the Millers arrived on time as usual. Brian went straight to the shed as I knew Bruce had some work lined up. Mrs Miller just started her tasks with her usual efficiency. I smiled at her and went to my office. It wasn't so much to start work as to reflect on what Bruce and I had said to each other the previous night.\n\nHe had told me with all sincerity how much he enjoyed the excitement of the fantasies and he liked to think of me with Daddy as he watched what was being done to me. \n\nHis words excited me. He was telling me he wanted to be my fantasy cuckold and watch me being mounted. \n\nI could see there was much reality in what he was saying. I don't think it was entirely fantasy. \n\nHis last words didn't even refer to fantasy. He wanted to be my cuckold. He wanted to watch me being fucked. I realised that I also wanted him to watch me being mounted. \n\nI had imagined lying on the bed without any clothes on sucking Brian's mighty cock as Bruce stood at the side watching me. \n\nI knew my feelings were reaching a crescendo. I wanted Brian to have me. I knew I had to talk to his mother. But how?\n\nI took a deep breath and walked to the door of my office. I knew that Mrs Miller was in the hallway working. I poked my head out and said \"Mrs Miller, I wonder if you could spare me a few minutes to have a word.\"\n\nShe smiled \"Certainly Maam. I have just finished the hallway.\" She was always so respectful.\n\nShe came in and sat on the comfortable settee and waited for me to talk. I was a bit jumbly but started by asking her if she had cleared it with Father Flynn to give me confession. She realised how I was feeling and told me that there was no problem and she could start that in a few days.\n\nWe had already started to have some very frank discussions about my fantasies already and I was really clumsy as I started to tell her about some of my thoughts. \n\nShe smiled encouragingly \"We can't really start the full Confession until Monday but if you want to tell me things in advance, Father Flynn has said it is quite acceptable.\"\n\nI gulped in some more air and started to tell her about Bruce's conversations with Brian and then more about my chats with Bruce the previous night culminating in us making love and fantasizing and talking about her son. \n\nI said I felt guilty and needed some sort of absolution. \n\nShe was very calm as she told me \"You are making a mountain out of a molehill, Mrs Ross. There is not much wrong with what you said or what you or your husband were doing. When you boil it down, the main thing you did last night was to be mounted by your husband. That is something God wants you to do.\"\n\nThinking about it that way, she was right. Actually I was starting to think that everything that Mrs Miller said or did was right. She was so wonderfully sensible. It was almost like talking to Mrs Grace or my mother.\n\nI did say quietly \"But we were talking about your son, Mrs Miller and about how big his penis is and it excited us both.\"\n\nShe chuckled \"Of course Brian's penis would excite you both Mrs Ross. You have to remember how tiny Brucie is. It is bound to make you think about it and as you know Little Brucie likes to be embarrassed so the comparison is bound to excite him.\"\n\nIt was noticeable how she used the term 'Little Brucie'. I had started to think of him like that myself.\n\nI nodded. I did explain about how I went out the shed and squeezed past her son and how nice it was for me. Again she smiled \"Brian told me. It excited him as well. I think he would like you to do that more often.\"\n\nShe seemed to have an answer for everything. I moved on to the thought I had had about Brian ravishing and raping me. \n\nShe went more serious and pulled a face. \"He would not want to rape you Mrs Ross. You would have to be willing before my Brian would mount you and it would have to be with Mr Ross's permission.\n\nI knew I shouldn't have used the rape word and apologised. I explained \"It is just that Little Brucie and I are confused where the fantasies end and reality begins. She smiled and I realized how I had referred to my husband.\n\nShe smiled. \"Let's begin at the beginning, Mrs Ross and see whether or not you are committing any sins. Let's assume for a moment that you let Brian ravish you. You can pretend it's without your permission but we know it is really. You want it to happen.\" \n\nI nodded. \"Yes Mrs Miller.\"\n\nShe continued \"And then consider your husband. He is conscious of his little Winkle and knows how big Brian's huge penis is. We also know he likes being humiliated so if it happened he would enjoy it.\"\n\nI nodded again \"Yes Mrs Miller but he did talk about watching me being had.\"\n\nShe smiled again \"So let him watch. I know Brian wouldn't mind him watching. Do you mind him watching?\"\n\nAll the answers were there and I said \"No, Mrs Miller. It is quite exciting to think of my husband watching.\"\n\nShe was so nice and had so much common sense. \"So we have established that you nor Bruce are hurt or upset and in fact you both would probably like it to happen.\" \n\nI nodded and asked. \"But what about you and Brian?\"\n\nShe chuckled and spoke in a motherly fashion \"Come, come Lucille. Brian is 23 years of age, he already fantasizes over you. He would just love to have you. You must already know that.\" I nodded.\n\nShe continued \"As far as myself is concerned, I love my Brian very much. He is afraid of girls his own age and I know how much he wants to mount you. I would like you to help him but only if you are willing.\"\n\nI started to relax now. I was more than willing and said so and then added \"So I wouldn't really be committing any sins.\"\n\nShe screwed her face up into a little smile \"Well not serious ones. If you really analyse it, only 4 people know it's happening and none of us are being hurt and in fact there is a lot of pleasure for everyone.\"\n\nIt was all out in the open now and we started to work out the best way for it to happen. She did lay down one condition that it was best if she was out of the way so that no one got too embarrassed. I agreed. \n\nShe went back to cleaning the stair carpet and I went back to my office. \n\nAbout half an hour later, she gently tapped on my office door and poked her head in saying \"Excuse me Mrs Ross, but I have to go down the village to collect some things and do some business.\"\n\nI was surprised as she had never left work like this before.\n\nThen the penny dropped as she added \"I will be gone for several hours, but I will telephone you before I come back to the house to check if everything is alright.\"\n\nShe was really telling me that now was the time. I just nodded and said \"Very well Mrs Miller. I think it would be a good idea of you ring before you get back.\"\n\nShe smiled \"Yes Maam.\" And left. I went into the kitchen to put the kettle on. It was time to take the men some tea and toast. I already had my shortest skirt on.\n\nIn a couple of minutes Bruce came into the kitchen looking a little puzzled saying \"Mrs Miller told me she was going down to the village for most of the day and said you would probably want Brian to come into the house this morning to collect it?\" I could see he was looking at my short skirt.\n\nI nodded. I hadn't expected her to start it off for me. I smiled and told him \"Yes I think it would be a good idea Bruce. It gives him a bit more responsibility and his mother won't be here.\"\n\nBruce pondered for a minute and then said quietly \"So you will be alone in the house with Brian.\"\n\nI knew what he was thinking. This was the second part of Mrs Miller's thoughts and I said to him \"Yes I will be on my own with young Brian.\" As I spoke I bent over a little to smooth out a chair cushion. It was an innocent movement and emphasized how short my skirt was. My underwear was showing. \n\nI then added \"I think it will be a good idea if you left the CCTV monitor on in the shed so that you can check if everything is OK.\"\n\nHe panted a little. I knew he was thinking about his 'watching' fantasy'. He murmured \"Will you leave the switch open in the kitchen, Lucille?\"\n\nThis was the final part of the jigsaw \"Of course, Bruce. I will leave the switch open in all the rooms. I always feel safer when I know you are watching.\"\n\nI deliberately used the word 'watching' as I knew it affected him.\n\nBruce kissed me on the forehead and said \"You are a wonderful wife Lucille. I will send him up to you.\"\n\nAs he left I smiled \"And you are a wonderful husband Bruce. I love you very much.\"\n\nIn a few minutes I heard a gentle tap on the door and I shouted \"Come in.\" At the same time I bent over the kitchen top to plug the kettle in. \n\nI knew that Brian's first view of me would be my short skirt and white knickers. I heard him gasp. I panted but kept control. \n\nI turned and smiled \"Hello Brian, have you come up for your morning tea and crumpet?\"\n\nI deliberately used the word crumpet instead of cakes and saw it had a reaction. He did surprise me though when he smiled and said directly \"I like crumpet in the morning Mrs Ross. You give me the horn.\"\n\nHe wasn't aggressive but surprisingly sure of himself. The CCTV button was nearby so I knew that Bruce was watching and listening. I felt a tingle in my tummy as on a small monitor I could see that Bruce was watching closely. It was comforting and I felt brave enough to say \"You shouldn't say that Bri, I am older than you are.\"\n\nI was sitting on a chair with my cup of tea as he said in a low voice \"I saw your knickers when I came in Mrs Ross, I wish I could fuck you.\"\n\nI breathed heavily. I knew that Bruce could hear every word as I tried to sound sensible \"But they are only my underclothes Bri. You wear underpants and women wear panties.\"\n\nAs I spoke he dropped to his knees in front of my chair. With my short skirt he was looking up and could see me as he muttered \"But your panties are special, Mrs Ross.\"\n\nI could see in the tiny monitor that Bruce had undone the front of his trousers.\n\nBrian was panting and so was I although nothing had been done. We were only talking. Suddenly he said \"Mr Ross has a small cock, Mrs Ross.\"\n\nI was surprised how direct the statement was.\n\nI knew that Brian knew about Bruce as my husband had told me that they had discussed various attributes in the shed. \n\nI weakly asked \"How do you know that Brian?\"\n\nHe told me so innocently \"My mother told me.\" I panted. This was a new twist. I could see Bruce looking embarrassed in the monitor but he was still masturbating.\n\nBrian went on \"I've got a big cock, Mrs Ross. If you let me shove it up you, it won't come out as I have a big knob on the end and it will make you feel lovely.\"\n\nHe was now holding his penis through his trousers and I could see from the outline it was truly massive. \n\nI was already feeling lovely but tried to control myself. \"But Bri, I am a lot older than you are and I am already married to Bruce.\"\n\nHe had dropped his trousers now as he nodded \"I know Mrs Ross, but I have always wanted to fuck a married woman and you are so lovely. I know you will enjoy it.\"\n\nI didn't answer but knew I would enjoy it as well.\n\nI was in a daze. I am not sure how it happened but my blouse slipped off and suddenly his hands were gently squeezing my breasts and whispering \"I like your Tits.\" \n\nI had a giggly moment and almost asked him if they were as nice as his mothers, but I controlled myself.\n\nHe had now slipped his underpants off and stood in front of me with his hands on his hips. His penis was magnificent. \n\nIt stood up so proud and rigid, almost like a soldier on parade and then the knob on the top was simply out of this world like a soldier's helmet.\n\nHe said \"Do you remember squeezing past me in the shed, Mrs Ross?\"\n\nI didn't try to deny it. I just nodded.\n\nHe asked \"Could you feel my knob pressing into your belly?\"\n\nAgain I nodded.\n\nAs we were talking I deliberately let my brassiere fall to the floor and without being asked also dropped my skirt.\n\nI glanced at the monitor on the table and saw Bruce looking more agitated and masturbating madly.\n\nBoth Brian and I were almost undressed. In fact the only item of clothing between us were my panties.\n\nHe must have thought about this moment many times as he was very controlled.\n\nAs I was lowering my skirt he had moved behind me and I felt his hand squeezing my bottom. He was breathing heavily. So was I.\n\nThen his hand moved between my legs. It wasn't really necessary but I bent even more forward and parted my legs to make it easier for him to fondle me.\n\nIt was wonderful as I felt his hand or about 3 fingers anyway cupping my crotch and move back and fore. \n\nI had 'happened' a few times by now but knew it would get even better.\n\nAs he played behind my back, I thought that time in the shed with his wonderfully big cock with that glorious ball of excitement at the top pressing into my belly. \n\nI did enjoy playing with my husband like this, but it was always spoiled to some extent when is small penis popped out.\n\nThere was no danger of that with Brian and his big knob.\n\nI moved away and gripped my elastic waistband to pull my panties down. Brian stopped me and said \"Mr Ross said he liked watching you take your panties off.\"\n\nI nodded. Bruce had told me the full conversation and knew what he was thinking. Brian murmured \"I would like that job, Mrs Ross.\"\n\nI knew what he was referring to but played along for the excitement \"What job do you want Bri?\"\n\n\"I would like to pull your knickers down myself.\"\n\nHe was sitting on a soft chair and I rested my hands on his shoulders and asked him \"Will you take my panties off please, Bri?\"\n\nHe looked up at me and with my breasts swinging in front of his eyes he gripped my panties and pulled them down so that I could step out of them. \n\nWe were both completely undressed now as he gazed between my legs and said \"I really like your cunt, Mrs Ross.\"\n\nWe were past any pretence now. I didn't even look at the monitor as I said \"I like your cock, Bri.\"\n\nI knew that Mrs Miller hadn't liked the word 'rape' so I deliberately instigated the next move and asked him \"Please will you fuck me now Bri?\"\n\nHe murmured \"Yes, Mrs Ross, I will fuck you.\"\n\nWith that he eased me back and lifted me up so that I was sitting on the washing machine.\n\nI simply opened my knees and he stood between my thighs and eased his big knob up me.\n\nHe was so gentle that I was surprised there was no difficulty. \n\nI could feel the knob part slide up and when he was right up he whispered \"Mrs Ross, it won't come out.\"\n\nI giggled. It had slid up so easily but it was entirely due to Brian gently pushing. It clearly would come back out unless he pulled it back out. I simply said \"It's nice and tight Bri.\"\n\nThe main difference was that unlike Brucie, I knew that Brian was in charge.\n\nWe had a glorious minute of him thrusting up and me thrusting back and then with his penis still right up me he lifted me up and carried me to the big settee whispering \"It will be more comfortable for you Mrs Ross.\"\n\nAs we began thrusting again, it was more comfortable and I whispered \"Thank you Bri.\" \n\nI had now cum several times and each one was better than the last. I felt another one coming and held my breath then I sensed Brian was ready to surge and my god it really was a surge.\n\nWith Brucie it was mostly a dribble and sometimes not even that. With Brian I felt his stuff shooting into me with some force. There were 4 mighty surges and then some smaller but still squelchy spurts. \n\nAlthough I am not small down there I knew I was overfull. It was lovely to feel his sperm spill out and down the inside of my thighs. To be honest I felt that between my legs I had a bucket of sperm.\n\nAs he slowed down we both entered a sort of limbo. Just very gently movements without speaking for about 2 or 3 minutes. I felt I could have stayed there for hours but Brian withdrew and spoke softly \"Perhaps you should go to the bathroom now Mrs Ross.\" \n\nI nodded and as I moved away I could see Brian gather his clothes and move to the other bathroom.\n\nI took my time having a nice wash and changed my clothes and put some nice perfume on. It was almost as if I was going out on my first date. Although I had just been mounted by Brian I still felt very high, and put a nice short skirt on before I returned to the lounge. I still wanted to impress him.\n\nAs I entered I noticed that Brian had also refreshed himself and looked quite a different person. He seemed so confident. I sat down opposite him and he politely asked \"Are you alright Mrs Ross? I hope I haven't upset you?\"",
        "He certainly hadn't upset me as I felt on top of the world and told him so. He looked pleased but I felt I had to say \"I did really enjoy things Bri but you realise that we can't do that again as I am a married woman and I love my husband very much.\"\n\nHe nodded \"Yes I understand that Mrs Ross and I want you to understand that I respect Mr Ross so much. He has taught me so much and he is such a nice man. I really don't want to upset him in any way.\"\n\nI could see in the small monitor that Brian was listening and watching very intently. As Brian said all these complimentary words Bruce looked very pleased with himself and seemed to be nodding approvingly.\n\nI had had those ecstatic times with Bruce although they didn't reach the heights that Brian had taken me to. With Bruce at this stage we would have gone onto the dessert stage where I would let him watch me doing naught things to myself. It excited him but he couldn't actually perform.\n\nWith Brian I felt I had just been through the full meal including dessert. The main problem I had was that he still looked delicious. I wanted another dessert.\n\nI could see him looking at me a little intently and my tummy did a little whoopsie wondering what he was thinking. I had though, already stated that it couldn't happen again and he had agreed with me. We couldn't go back on that.\n\nHe looked at me seriously and said \"I know we can't do that anymore Mrs Ross but I admire you very much and that short skirt suits you so much.\"\n\nI laughed \"It's only an old skirt Bri. Actually it is one I used to wear in school. It hardly fits me now and it is too short.\" \n\nHe panted \"So it is like a school skirt Mrs Ross. I used to like seeing the girls in short school skirts when they went up the stairs in front of me.\"\n\nI laughed \"What you are saying Bri is that you liked seeing their knickers up their skirts.\"\n\nHe was really looking at me now as he growled \"Yes, I liked their school panties.\"\n\nI was feeling quite warm now. I still had these special feelings in my tummy and my breasts. This wasn't quite like the dessert sessions I had with Bruce, it was more intense.\n\nHe asked \"Do you ever wear school knickers under that skirt Mrs Ross?\"\n\nI half laughed but it was more of a croak really \"They are not really school knickers Bri but they are simply white cotton panties.\"\n\nI could see the stiffness growing in his trousers. It was amazing. I knew the amount of sperm he filled me up the first time. Surely there couldn't be any more left. As I had these thoughts I could see him unbuttoning his trousers.\n\nWe both knew he wasn't going to do me again but I didn't stop his actions as I was really fascinated if it was still big.\n\nIt was. It was massive and throbbing in front of me. I murmured \"You filled me up when you did me a few minutes ago, Bri?\"\n\nHe nodded. \"I know I mustn't do it again but you are so lovely, I could fill you up again, Mrs Ross.\" I was amazed. He wasn't just bigger than Brucie. He was majestic.\n\nI let my skirt rise up a bit more and crossed over my leg, just to see how much bigger it got.\" I wasn't sure how much he could see but I knew it was a lot. \n\nHe panted a bit but kept control and stroked his penis up and down and whispered \"You like my big prick, don't you Mrs Ross.\" I couldn't deny anything and just nodded.\n\nHe explained \"I wank a lot thinking about you Mrs Ross.\"\n\nI was curious and asked \"When you do it, Bri, do you have a lot of stuff out of it?\"\n\nHe looked at me quizzically \"Do you mean spunk, Mrs Ross?\"\n\nI suppose I was silly not saying the word so I just confirmed \"Yes, Bri. When you do it to yourself, do you have a lot of spunk?\"\n\nHe smiled as he knew I was curious \"Yes Mrs Ross, there is a lot of spunk. Do you want to see some? I can make it spunk for you if you would like it. Especially if you will help me.\"\n\nHe knew I would and reached out and held my hand and brought it to his penis and wrapped it around. He let go and I was left with his very warm penis in my fist. \n\nHe sighed \"All you have to do Mrs Ross is move it up and down and you will see plenty of spunk.\"\n\nI was like a dream. I pulled it gently up and down and saw his knob part pulsate and get a darker red and the slitty eye at the top opening wider.\n\nThis was so much better than my dessert with my husband. I could see Bruce watching intently in the monitor. He didn't intend to interfere. It was absolutely silent for a few minutes as I did my work on Brian. Then he said quietly \"I like your Tits, Mrs Ross.\"\n\nI knew he was being nice to me and bent over further so that he could see down my blouse.\n\nHe sighed \"I like looking up your skirt and seeing your panties.\" I nodded but it was really impossible for me to do anything in the present position.\n\nHe made it plain what he wanted when he eased my fist of his penis and pushed me back onto the settee. At the same time he put his own hand around his penis and took over my actions. I knew what he wanted.\n\nI leaned back on the settee and pulled my skirt right up and then opened my legs wide.\" \n\nI knew his thoughts as he stared in wonder at my cotton panty gusset. I knew what he was thinking and teased \"Do you like my school knickers Bri.\"\n\nHe sighed loudly and I could see some small signs of excitement dribble out of the eye. I knew it was pre cum. I was eager to do my part now and whispered \"I like wanking as well Bri.\"\n\nHe muttered \"Oh God, you are wonderful Mrs Ross.\"\n\nI actually felt wonderful as I carried on exciting him \"I usually do it in the toilet with my knickers down Bri.\"\n\nHe gasped. I could see he was imagining it and muttered \"Do you ever pull you panty gusset aside Mrs Ross?\"\n\n\"Do you mean like this Bri?\" as I pulled my panties to the side knowing he was looking straight at my pussy. \n\nIt had always seemed to widen and get pinkier when I got excited. I knew I was incredibly excited so it would be very pink and gaping a bit.\n\nHe gasped \"It's nice and red, Mrs Ross. It's the same colour as the top of my knob.\n\nI looked at his knob and it was bright red with a huge eye. He seemed to stop using his fist for a moment and I murmured \"Don't forget what you promised Bri?\"\n\nHe was lost for a moment and I whispered \"You said you would spunk for me.\"\n\nHe gasped with pleasure and continued his up and downers. He also asked me \"Do you just rub it or do you put your finger in, Mrs Ross?\"\n\nIt was getting explicit. I loved it and looked at the monitor and could see that Little Brucie was in a trance as he masturbated. I explained \"I do both Bri. Do you want to see me use my magic finger?\"\n\nI knew he did and simply slipped my middle finger in up to the middle joint. He gasped \"Does it go up further Mrs Ross?\"\n\nI smiled \"It goes all the way up, Bri.\" And eased my finger right up to the knuckle. It was so easy that I realised how excited I was and how big my vagina had become.\n\nHe gasped and asked me \"Can you pull it mostly out Mrs Ross and then push it back up.\"\n\nHe was still fisting his penis up and down for me so it followed I should do the same for him. Actually I wanted to do it.\n\nI eased my finger out and then thrust it back in and then did it rhythmically again and again. We were doing it together. Brian put my thoughts into words as he muttered \"It's nice to wank together like this, just the two of us.\"\n\nI felt the same but a little guilty as I could see my husband doing exactly the same as we were. There weren't just two of us wanking. There were three of us doing it.\n\nIt had been lovely having my dessert with Little Brucie but this was a million times better. I actually came about 4 times as I watched Brian come to his crescendo.\n\nHe could see me staring intently at the eye and at the perfect moment he edged his cock up to my face and let it explode over my glasses and run down my nose.\n\nI was drenched. Soaked. Saturated. But I was also very satisfied. This was so different from the desserts I had with Little Brucie. It made me realise how little my husband really was. I was in effect a sort of mother figure to Brucie. I did things so that he could watch me. \n\nWith Brian, I liked watching him as well.\n\nHe chuckled and repeated some of his earlier words \"Perhaps you should go to the bathroom now Mrs Ross.\"\n\nI saw the funny side of it as well and giggled as I again made my way to the bathroom. He did the same.\n\nWhen I emerged I could see Brian was ready to go back down the shed to work with my husband. I reminded him \"Take some tea and biscuits down for Bruce.\"\n\nHe nodded and collected the tray. I opened the back door to leave him out into the garden.\n\nI went over to the side table to watch in the monitor how the two men would greet each other. I saw Brian struggle with the door to let himself in and my husband reach over to take the tray with a smile.\n\nBrian had left Bruce about 2 hours earlier to get the tea. Obviously Bruce had seen everything on the big screen, so I was intrigued how he would react\n\nBruce looked and sounded quite happy saying \"Oh that's lovely Bri. I feel like a cup of tea.\"\n\nThey just talked very normally. I was impressed.\n\nJust then the phone rang and Mrs Miller spoke to me saying she had completed her business and would be back in 15 minutes. I knew she was giving me the opportunity to delay things. I simply told her \"That will be fine Mrs Miller. I wanted to discuss a few things with you anyway.\"\n\nShe responded with a pleasant \"I won't be long.\"\n\nTO BE CONTINUED"
    ],
    "authorname": "MaryGrangerx",
    "tags": [
        "panties",
        "knickers",
        "cuckold",
        "small penis",
        "lesbian",
        "incest",
        "sissy"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/lucille-and-mrs-miller-pt-03"
}