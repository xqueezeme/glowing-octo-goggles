{
    "title": "I Like That It's You",
    "pages": [
        "'I've got to be honest,' Libby said as she sat down next to me, her stylish mess of dirty-blonde hair needing brushed from her face. The sofa was a tired old thing, and complained as we sat together, which was stupid as Libby was tiny, and I was no juggernaut either. 'I've had my eye on you for a while.'\n\nI tried not to give away my excitement, then realised that was a stupid idea and I should just be honest. 'That's fantastic,' I said. 'Because the only reason I came is that Peter said you'd come.'\n\n'Did he?' she asked, her eyebrow a fair line of consideration.\n\nIt was my best friend Peter's 30th, and he was throwing a lame barbeque-slash-house party to celebrate the night away. Only, I wasn't planning on coming - I had work in the morning, and me and Peter saw each other almost every day, so there wasn't much ceremony in me being there.\n\nBut then he'd mentioned Libby, knowing it would snare me. Like a moth to a firecracker, I was in.\n\n'Uh-huh. So, you've had your eye on me?'\n\nShe nodded, looking exceptionally cool in a tartan skirt and fishnet leggings that ended in thick boots. She was a bit of a metalhead, proved by her sleeve of tattoos covering her left arms, but they were all floral and of nature. She'd told me once before that if she could have been anything else in life, he would be a druid.\n\n'And why's that?' I asked, trying to match her cool, despite the fact that I was wearing a polo shirt and black trousers I hadn't gotten a chance to take off after work. Being a teacher attending a party on a Thursday night at 5pm meant sacrifices were made.\n\n'I just feel like...' she paused, searching for the right words, before shuffling a little. The side of her boob pressed into my arm as she looked up at me, her diminutive frame contrasting the power she seemed to hold in her at all times. 'You could handle me.'\n\nAh. Peter had told me all about Libby, after all. She was a known party-girl, going to gigs every other school night - look at me, talking about weekdays as 'school nights' - and drinking herself into rehab by the time she was twenty two. That was years ago, though, and as she was sat with a diet coke in her hand while the rest of the room sipped room-temperature beers.\n\nThere were maybe thirty people at his party, all packed into his livingroom and kitchen, with a few outside around the barbeque. It might as well have been empty, though, as Libby had well and truly snagged my attention.\n\nPeter had also mentioned that Libby was into some rather hardcore sex stuff. He never went into details, usually citing 'it's not my business' as an excuse to stop after remarking on the noise she would make through the walls, back when they lived together at Uni. Apparently she had a hell of a sexual appetite, and wasn't exactly tight-lipped about it. One time in particular, the last year they lived together, back when we were all in our early twenties, I came over in the morning to see Peter to pick something up - I can't remember what. All I remember was the sounds of Libby and another girl, both grunting and moaning in pleasure as they fucked somewhere upstairs, the walls no match for their sex. It was hypnotic, and I've never forgotten it.\n\nThis, of course, wasn't going to be a deal-breaker in the slightest. While never having been a sexual dynamo myself, Libby had the kind of features that always got me going. She was truly beautiful, the tattoos and piercings in her lip and nose only serving to heighten her looks, like flourishes on a work of art. The leather and metal music gave her an air of danger, compounded by her devil-may-care attitude. Plus, you know, knowing about her sex drive was a massive turn on.\n\nI took a drink of my fanta - also a tee-totaller - and shrugged, trying to be cool. 'I reckon I could.'\n\nShe looked at me, that mischievous arched eyebrow matched by a glitter in her eyes. She leaned in, so her ruby-red lips could brush my earlobe. I shifted in my seat, trying not to let my semi show to the room. 'All of me?'\n\nI thought about the sounds of Libby and the mystery girl, as I had almost every night for the past six or seven years, and turned to her. Our faces were an inch away, and she seemed to react well to the confidence I was mustering from somewhere.\n\n'With pleasure.'\n\nShe smirked, shifting in her own seat, only looking up as Peter approached. He was clearly a bit buzzed, and cheered as he saw us. 'HEYY!!'\n\nHe dropped, sitting between us, forcing me and Libby almost onto the arms of the chair to accommodate him. 'Libby and Elliot! You two getting along nicely?'\n\nI nodded. 'Absolutely. Having a good night?'\n\nPeter nodded. 'Hell yeah, man. Hell yeah. Listen, I know you have work in the morning, but what time do you think you'll be here till?'\n\nI checked my watch, balking to see it was already half eight. God, I was boring.\n\n'Uhh, actually, I'd best be heading off soon.'\n\nHis face fell comically, the alcohol painting his every thought on his features. 'No!'\n\n'Yes! I have to be at school in the morning, you knew that!'\n\nLibby eyed me again. 'That's right, you're a teacher,' she murmured, seemingly just remembering. I wondered if it was honest, or if it was a show for Peter, to put him off the scent we were definitely giving off.\n\n'Right, well... I guess I'll see you tomorrow?'\n\nI chuckled. 'Sure, man. I'll see you then.'\n\nPeter wandered off to mingle, and I felt Libby's gaze on me. 'I'm heading off, then,' I announced to her, though it came out sounding like a dare. Convince me not to.\n\n'Uh-huh, I heard,' she said. Not that easy to goad me, Elliot.\n\nI sighed, standing. She followed, standing with me, and as I pulled on my jacket she found her on the back of the door. I tried to suppress a smile, knowing it might be a game. She might just be having me on, making fun of me or something. She could be like that.\n\nThen, as she met me at Peter's front door, I thought, maybe not.\n\nShe looked up at me, barely over five feet tall, and yet she exuded confidence. 'Yours or mine?'\n\nI played dumb, knowing where this was going. Or, at least hoping. 'Whatever for?'\n\nShe shrugged. 'So I can fuck you senselss, obviously.'\n\nI gawked at her words, certain other people at the party would have heard her, but Libby seemed completely oblivious to them.\n\nI was about to say mine, being all confident and that, when I remembered that I lived alone, and that my flat wasn't exactly the epitome of 'sexy' that the night demanded.\n\n'How about yours?' I suggested, as Libby pulled her phone out to order a car.\n\n'Don't you have school in the morning?'\n\n'They'll survive without me for a day.'\n\n'A whole day? You want to commit to that?' She seemed genuinely surprised, or maybe impressed.\n\nAnd, trust me, I know I'm no adonis, I'm not Casanova or whatever, but Libby had held a place in my heart (and other anatomical regions) for years. I was not shying away from this willingly.\n\n'Give me ten minutes to call in tomorrow morning, and I'm all yours.'\n\nShe smiled at that. 'Deal. Car's two minutes away.'\n\n'How should we spend it?'\n\nShe shrugged, her jacket rustling in the way cheap leather only can. She stepped further out, and I shut the door behind us. As soon as it closed, she turned to meet my eyes again.\n\n'Are you sure about this?' she asked, seeming concerned.\n\nI stifled a laugh. 'Are you kidding? Lib, I'm man enough to say I've literally dreamt of tonight.'\n\n'Oh yeah? And how does it go, usually? In your dreams?'\n\n'Well, I'm very charming, and you're very beautiful, and we realise we've been circling each other for the past seven years without ever colliding - and how much of a waste that's been.'\n\n'Are we colliding tonight?'\n\n'I think we're getting there,' I said. God, she was easy to talk to. Easy to flirt with. I was surprising myself.\n\n'What happens then?' she asked.\n\n'Then we find a bed and fuck it in.'\n\nShe laughed at that point, and I managed to laugh too. My ego complained, of course, that she was laughing at the idea of having sex with me, but I pushed that down. Doubt wasn't getting to me. Not tonight. No second guessing, Elliot.\n\n'As long as you know what you're in for,' she mused.\n\nBefore I could give another well-crafted quip, her phone beeped, just as a silver honda pulled up.\n\n'Elizabeth?' the cabby asked, and Libby sighed.\n\n'That's us.'\n\nWe climbed into the car, the smell of disinfectant and stale cigarettes making a contrasting medley in the air, and settled in.\n\n'You want Bardugg Way?' the driver asked.\n\n'Number twelve,' Libby nodded, before sitting back. Suddenly, we had swapped sides - on the sofa I was on the right, now I was on the left. Something had shifted.\n\nThe drive was short, but the tension made it agony. Libby was a master at the art of 'hovering', making little actions that kept me revved up. Her legs pressed against mine; her hand placed innocently on her hip, which meant she was in constant contact with my pelvis; leaning against me to ensure I could feel her chest on my arms. Even her eyes, dark and mischievous, sent a shiver through me upon each glance. She was an expert. I was putty in her tiny hands.\n\nWhen we pulled up to her house, a decent size seeing as I knew she lived alone too, I had to make an effort to hide my erection from the cabbie. Libby gave me knowing smirks as I pointed my front away from the car, adjusting myself less than covertly as she said thanks.\n\n'Comfortable, Elliot?' she teased, her lips making a devil's smile.\n\n'Tease,' I growled.\n\n'You ain't seen nothin' yet!' She bounced past me, pulled her keys out, and let herself into the house. I followed, and as soon as we were inside, we were on each other.\n\nI'm not sure who moved first, but within seconds her lips were on mine, hands exploring under shirts and gripping hair. Moans and grunts escaped both of us as we traveled to the staircase, each as eager to get started as the other.\n\nShe pulled off me, her eyes closed in a slight daze, and ran upstairs. Her hair was even more of a mess now, and I watched hungrily her hips as they swayed, my vantage point giving me a cock-stirring perspective of her fishnet legs, her skirt casting a shadow over her seductive rear.\n\n'Fuck, you're gorgeous,' I whined, following her up.\n\nShe had me chase her down the corridor, only stopping as we crossed into her bedroom. The lights flicked on, and I was stunned.\n\nIt was almost a sex den. Honest to God, it was like I had walked into a dungeon from some S&amp;M-style music video or something. Her bed, the center piece, had a tall, strong-looking metal frame with loops every few inches, some of which had rope tied on, hanging limp. Her bedding was plain, but cleanly made, which was almost funny compared to the rest of the room.\n\nAll of the styling was dark, gothic-esque, so much so that even with the lights on it took me a moment to see the details.\n\nLining one wall, taking up three shelves, were a selection of sex toys - dildos, anal plugs, as well as whips and chains, all arranged for use. They were pride of place over a chest, the contents of which I couldn't begin to imagine. The other side of the room was a work-desk, with three monitors set up in a slight concave around a desk. At the moment, they were dark.\n\nThe floor was cold wood, covered by a thick shaggy grey rug that ran under the bed, muffling the sounds as Libby stepped in, kicking off her shoes.\n\n'I told you it was a lot.'\n\nI nodded, realising my shock must be apparent.\n\n'You can still back out,' she said, a hint of disappointment in her voice. But, when I looked at her, she was in the middle of unbuttoning her shirt, her breasts pushing out from underneath deliberately to tease me, with no bra to speak of. She was showing off, now.\n\nBut, god, was she a wet dream walking.\n\nHer bust wasn't enormous, but for her size they were generous, and as they were revealed bit by bit with each popped button I felt my reluctance washing away.\n\nI shook my head. 'I told you, this is happening.'\n\nShe smiled, and it felt less tantalising this time - more genuine. 'Yeah?'\n\n'Abso-fucking-lutely!'\n\nShe bounded forwards as her shirt came undone, leaving her in only the fishnets and tartan skirt, and pressed herself against me. Our lips met, and as her tongue probed by lips I couldn't stop a moan from rolling into her. I tasted her tongue, and she moaned back, my hands finding their way to her bare back. She purred as I stroked her, giving her a light scratch up her shoulder blades, fingers then sliding down her sides to the waist of her skirt.\n\nHer hands caught my wrists, stopping me. She pulled off, biting my lip for a moment in a way that made my knees weak.\n\n'That's only for boys who do as they're told,' she whispered, before pulling my hands behind her to her butt. 'This, you can play with. For now.'\n\nI laughed at her silliness, before kneading her cheeks in earnest. She was soft and firm, and soon I was gripping the small of her back as we kissed again, with one hand still on her firm buttocks. She mewled into my mouth as we travelled to the bed, the backs of my knees hitting the frame and causing me to sit. Happily, this actually put me on a level playing field with her, and allowed my kisses to move down her jaw and neck, each one rewarded with a different sound of approval from my beautiful lover.\n\nI travelled down, hands on her back and butt, to kiss her breasts.\n\n'Yesss,' she hissed as my lips found her right nipple. I sucked it into my mouth, delighted by the chirp she gave, before using my tongue and teeth to tease her until she squirmed.\n\n'Now the other,' she whispered, and I obliged, kissing my way across her bust. As I kissed and suckled her, her hands found my scalp, holding me in place as she nursed me. 'Bite me,' she whispered, her voice lusciously shaky.\n\nMy teeth gripped her nipple lightly, and I pulled just a little before releasing. She gasped, her hands gripping my hair slightly tighter. 'Again,' she ordered. I did it again, slightly harder, holding the pull for slightly longer. 'Oh, yes Elliot baby, do it again.'\n\nFor five or so minutes, I made aggressive love to her wondrous tits, feeling my erection inside my trousers grow steel-hard. Eventually, however, she was satisfied, and she pulled off.\n\nShe held me cheeks and jaw, strangely dominant, and made me meet her eyes.\n\n'I'm going to tie you up, okay Elliot?'\n\nI nodded, excited for where this was going.\n\n'Have you ever been tied up before?'\n\n'No.'\n\n'You're going to love it. Have you ever done... anal, before?'\n\nI gulped. 'Yes.' Once, badly - but I wasn't going to mention that.\n\n'Would anal be a reward for you?'\n\nI nodded again.\n\n'Then, do everything I say, and everything I want, and you can have your reward.' She smiled sweetly, and kissed me. 'Deal?'\n\n'Deal.' No going back now.\n\n'Okay, lie back on the bed. I need to get you into place for me.'\n\nShe spent the next few minutes stripping me, each piece of clothing unceremoniously peeled from my body before being thrown into a pile on the floor. My shirt first, which allowed my hands to be tied to the headboard, stretched outwards. Then, my socks and trousers, followed by my boxers. My cock sprang free, and Libby gave it an... interesting look, before moving away without having touched it. I groaned, and she smiled.\n\n'You'll get what you want,' she said, securing my left ankle in a belt-like thing attached to a rope that went through one of the higher hoops on the bed frame. 'As long as I get what I want...' The other ankle was secured, again to a rope looped through a high hoop. 'Perfect.'\n\nNext - thankfully - she straddled me, sitting on my chest like she was riding a horse. Well, soon I hoped she would be. Heh.\n\n'Usually, I like to gag my lovers,' she said, pulling out something that looked like a ball-gag, but with an open hole where the ball usually is. 'But that means no safeword. Would you be gagged for me?' she asked, her voice sweet as honey. It would have been impossible for me to resist anyway, but as she asked she started rocking herself against me, and the movement was making my cock bounce behind her. It bumped her backside, and she giggled, turning slightly to reach round and grab it.\n\nHer hand was tiny, too small to get all the way around, and was heaven. She started to stroke me with the lightest touch I had ever felt, almost tickling my shaft up to the head, and without touching my most sensitive part backing off.\n\nShe's the devil, I thought.\n\n'Gag me,' I said, deciding to throw caution to the wind. I'd never done anything like this, so why not go for broke?\n\n'Good boy,' she purred, leaning onto me to secure the gag into my mouth. It stretched my jaw open, and my teeth fell into little ridges on the top and bottom to keep me gaped open, like a hungry fish. I felt ridiculous, but the look of satisfaction on Libby's face as she observed her work made it worth it. Plus, as she learnt down, her tits pressed into my chest, her pert nipples dragging along my skin as she got me in place.\n\nI was at her mercy. Limbs tied to her bed, mouth gagged, cock hard and ignored. I knew I would be close to begging for her touch, was I still able to beg.\n\nShe sat up, swaying slightly to the music, her eyes closed as she shifted atop me. I groaned, though it came out as an empty whine, as she gyrated on my pelvis, her fishnets rubbing into my naked skin, her hands stroking my chest as I watched her breasts. I was hypnotised, completely under her spell. Her tattoos, I could see now, crested over her shoulder and filtered to her pectorals, tastefully shaping just the edge of her mounds, like an ornate frame of a painting.\n\nLibby bit her lip as her fingers found my mouth, slipping in to touch my tongue. It was an intrusion I couldn't stop, and didn't want to, so I slid my tongue around her digits. I tasted her, the slight echo of the coke she was drinking earlier tonight. Sweet.\n\n'Hmm, that's nice,' she sighed. 'Now I have you, I should say - I really have had my eye on you for a while. And hearing that you're... that you know about me, and you still want this... nothing could make me happier.'\n\nBeneath the lust in her hooded eyes, and the undeniable sensuality of her body atop mine, teasing me in such perfected measures, there was an air of honesty, of vulnerability about her. That was the Libby I was interested in. The substance beneath.\n\nShe gripped my length again, making my breath hitch as she stroked me. She sat up, her chest pushed out above me, and I had the most amazing view of her hard nipples as she felt me.\n\n'What are you, about six inches?' she asked. The question took me back - most women weren't interested in length. Call me arrogant, but in my experience it was more about how you used it. Plus, there were always other ways to give a woman pleasure. Not that I've ever had complaints. I nodded, and she put her other hand back on my chin, fingers in the gap in my gag, holding me like a handle\n\n'I don't know how much Pete told you,' she said, letting go of my length, and lifting her skirt up. 'But I'm just under eight.'\n\nThat's when I saw it. My eyes felt like they bugged out of my head, as I saw a bulge in her light-blue boxers that were hidden under the skirt, promising the reveal of something else. Something big within.\n\nI wracked my brain - had I known this?\n\nThe obvious answer was no - I didn't have any knowledge ahead of time. Except, of course, a few things that were clicking into place. The presence of what were clearly male-usage sex toys around the room, like cock rings and prostate massagers; the fact that she had said she thought I could handle 'all of her', which was ambiguous but made more sense now; and the way I remember her saying she was going to fuck me. I was the fuckee.",
        "Oh God.\n\nLibby pulled her boxers down, freeing the beast within, and a beast it was. Easily bigger than mine, in length and thickness, but also heavy. She pulled the elastic of her underwear down, and let her accompanying balls free - the things were large, and hung surprisingly low, brushing the skin of my belly as she straddled me. Libby lay forwards, resting her length along my chest, her balls resting fully on me, length pointing from my belly button to between my pectorals.\n\nMy eyes flicked up to hers, and the look of lust in her eyes was... breathtaking. If it wasn't for the slight shock I'd just been subjugated to, I think I would have cum on the spot. Her mouth hung slightly open, just enjoying the feeling of being against me, of me being under her.\n\nI had never been the submissive in the bedroom to this extent, and while I wasn't wholly uncomfortable, the newest development was giving me cause to pause.\n\nThat was until she rested her lips against my forehead, kissing me so softly that, without context, it could have been a lovers peck. A good-night note between us in the dead of night. It made something in my stomach flip, even against all the sin and lust in the air.\n\n'Elliot,' she breathed, slowly gyrating against me. No, not gyrating - thrusting. Ever so slightly, but enough for me to feel her length stretch up my chest on the upstroke, and for her rear to bump my own cock on the downstroke. A hypnotic rhythm, so soft and tender between us. I thrusted too, showing my interest. Despite everything, it was still Libby.\n\nCall me progressive, but this wasn't a deal breaker. I mean, probably not. We were about to find out.\n\nI'll try anything once, me.\n\n'Elliot,' she said again, slightly more desperate, slightly more heated. Her hips became a little more animated. She lowered her head so her lips were at my earlobe again, like they were at the party. Fuck, she knew what buttons to push. 'Baby... I'm gonna put on a condom - extra than, so I can feel you - and then I'm going to lube you up.' She sucked my lobe into her lips, making me whine and thrust up into her. 'Then I'm going to fuck you, baby.'\n\nMy stomach twisted again. I had no idea how this was going to be. The part of me that was nervous was my natural masculinity, telling me that I was supposed to fuck, not be fucked. The part shutting me up was the part looking at Libby, at her soft lips, her tight body with perfect tits, and, ultimately, the scarily large dick she was rubbing against me, wearing nothing but her fishnets and tartan skirt.\n\nShe lifted off me, and disappeared out of my field of view for a moment.\n\n'Fuck you look so good,' I heard, but when I strained to see her all I could get was the red, angry tip of her penis. I watched in fascination as she rolled a condom down it, the material giving it a light sheen, but it was almost invisible - extra thin indeed. Then, I heard a squirt of liquid, and watched her tiny hands apply the lube to herself.\n\n'Hrnnn,' I let out, making her laugh.\n\n'Don't worry, I know I'm big. I'll go slow for you, baby. Then, if you're lucky, I'll let you repay the favour.'\n\nNow that was an idea. Of course, being trans, she would likely be well-versed in anal, but I wasn't. It had been a one-time, slightly drunken fling after a cousin's wedding when I'd bedded a friend of hers. It was tight, and good in some ways, but neither of us really knew what we were doing, and she ended up telling me to get off.\n\nLibby was about to change everything for me.\n\nShe moved from my head, walking towards the foot of the bed, with her fingers of one hand trailing down my torso. Her other hand was slowly stroking her cock, and I could now see she was totally naked, and she was amazing. A vision of femininity, interrupted by this monstrous thing between her legs. She was totally shaved, which only made her size more distinct. Her arse was stunning, pert and toned, and I cursed the bondage for stopping me from feeling those cheeks. I wanted to kiss her, to feel her all over.\n\nWell, maybe I could. But first, I had to pay my dues.\n\nLibby stopped between my legs, and tugged at the ropes that were keeping me in place. They became slack, and for a moment I thought she was going to release me. I shifted, and she tutted at me.\n\n'No, no, baby. I'm just getting you in the position.'\n\nShe then pulled the ropes, which had been fed through high loops, to pull my ankles upwards, until my legs were pointed out in an almost 2-10 formation, framing Libby between them lewdly. She had a look on her face the whole time of complete confidence, of control and poise, with just a hint of excitement.\n\nOnce she had me secured in 'the position', she stopped, pausing between my legs.\n\n'Oh, I've wanted this for a while,' she repeated. I remembered her admitting at the part that she'd had her eye on me for a while. I wondered how many times she had imagined fucking me like this. Surely not as many times as I had imagine fucking her in the pussy she didn't have.\n\nShe stroked the insides of my thighs, kissing my calves, working her magic to bring my slightly-softened man back to life. She watched me grow with great interest, her fingernails trailing up and down my flesh in a way I've never been touched before. I felt a shiver go through me, and Libby grinned.\n\n'You like that?'\n\nI nodded.\n\n'Well, I'm not evil, Elliot. I can either fuck you like my own personal sex toy straight away, and fucking ruin you until you beg me to stop, or I can tease you until you're going to explode, and make you beg me to fuck you. Decision, decisions.'\n\nI whined, and my head dropped back as I just felt her. Her soft touch dragged downwards, ending only as she held my balls in one of her hands.\n\n'Ooh, you feel full, baby. Got something in there for me?' I groaned an affirmative, and she giggled. Her hands slipped up to my shaft, and I thrust involuntarily. 'Oh, we are eager. I think that's the decision made. I'm going to tease you, Elliot, until you're desperate to be fucked. Until you can't think of anything but my cock inside you, fucking you until you spray cum all over us. I'll make you beg for it.'\n\nHer hands, small enough for both of them to grip my shaft at the same time, gripped me softly. I pumped again, and she released.\n\nI looked up, and her face was a vision of lust. Her thumb trailed around the head of my cock, still trapped inside my foreskin. Slowly, she dipped her digit against the very tip of me, sighing as she felt my pre-cum leak onto her. 'Oh, you're so wet,' she purred. She dipped her thumb under my foreskin, expertly spreading my own precum around the head. I was sensitive already, rock-hard and waiting, and all this did was torture me. I was already close to cumming, and knew that if she spent much longer doing even this I would pop.\n\nOnce she decided I was lubed enough, she softly retracted my skin, her hands pulling my shaft in a long, sensual movement. The cold air against the sensitive made it feel like I was tingling, and Libby knew it.\n\n'You're ready to go, aren't you.' It wasn't a question. She knew.\n\nI let out another groan as her fingertips brushed the head of my swollen cock, her touches sending lightning through me. As she touched me, her hands became more bold, stroking me in full lengths, letting me fall into a well of pleasure.\n\nSuddenly, waking me from my stupor, I felt her length press against me, in the cleft of my buttocks. It was warm and slick, and did nothing but press against me. An iron bar between my cheeks, unmoving as she kept stroking me.\n\nI felt myself thrusting to meet her movements, my body reacting to her assault against all sense, which of course resulted in my cheeks rubbing against her length as her fist moved up and down my cock in deliberate, experienced movements. Her thumb glanced over the crest of the head, using my precum to make her hand slick and wet, as her hips now started to thrust ever so slightly beneath me.\n\n'Hrnnn,' I moaned as she rocked her thick cock up so the head pressed into my balls, her small body leaning against mine as her cock slid up against mine, displaying the stark contrast between us. While I wasn't small by any means, this girl had length. I whimpered weakly, and I watched as she bit her lip, her eyes glazed in a sexual fog.\n\n'God, you look so tasty,' she whispered, her voice low.\n\nHer hands slipped away from me, as Libby adjusted her position. With my arms pinned down, I could barely see her in my field of vision as she dipped out of view, the top of her head bobbing in my peripheral vision. I gave up, the strain of trying to watch too difficult, and lay my head back.\n\n'So hard for me,' I heard her whisper. 'Such a naughty cock, and a pretty little hole.'\n\nThen, as if my world hadn't flipped three times already tonight, I felt her mouth softly envelop one of my balls. Her lips were soft, but the small amount of suction she applied was heavenly. I groaned through my gag, but Libby didn't give in. No - not at all.\n\nI felt her hands stroking my inner thighs, fingernails leaving trails along the sensitive, exposed, intimate area as her mouth switched to my other testicle, tasking it with her tongue as she sucked lightly on my balls.\n\n'Hmmmm,' she groaned, the vibration running through me from balls to brain. I hummed back, and she gripped my legs, massaging them as she enjoyed my squirming.\n\nShe released me with an audible shpop, and as soon as I entertained the thought of her stopping, I felt her tongue at the base of my cock.\n\nOh, she's going to ruin me, I thought, as she licked me from base to head.\n\nI had my eyes clamped shut, my mind lost in the blind sensations of pleasure Libby was bringing to me. I had never thought I would be here - bound and exposed, being pleasured in a prelude to what I knew would be a reckoning. I was going to be fucked by her cock, and she was right - I was going to love it.\n\nI shivered as her soft tongue grazed the underside of my cockhead, the sensitivity making me moan.\n\n'Oh, you like that?' she asked, before licking it again.\n\n'Hmm!' I moaned, as she focused on the head, one hand holding the base of my cock to keep me at attention, the other massaging my balls in a way I'd never been touched before.\n\nSoon enough, Libby seemed to decide she was done playing, as I felt her lips slide over the head of my cock, her tongue pressed against the underside as she took the first few inches into her mouth. The piercing on her bottom lip slid against my most sensitive spots, like a drop of ice amongst the warmth of her.\n\n'Hhhmm!' I moaned, unable to stop myself. I was close now, and she knew it.\n\nShe stilled, holding me in her mouth as her tongue danced along me, making me squirm in my bondage. Then, she pulled back, before sliding a little deeper. Again and again, she bounced her mouth against my cock, until I felt the back of her throat. I thought she might stop, that she was going to tease me - but instead, I felt nirvana as she pushed onwards, my cock slipping down into her throat. It was wet and tight - all at once like a pussy and nothing at all like anything I've felt before. I'd never been deepthroated like this, and the sensation was amazing.\n\nLibby pressed until her lips met my trimmed pubes, gagging herself on my meat, and fucked my with her throat until I was gasping.\n\nSo close - so! Close!\n\nThen, as if she was some cruel psychic, she pulled away. I was abandoned, right on the edge, with nothing but frustration and desperation in my mind.\n\n'Not yet, gorgeous,' Libby purred, stroking my thigh. 'No, I want you to wait until you can't bear it anymore.'\n\nHer lips brushed my cock again, making me mewl in want, but she quickly moved away. Downwards. Her hands gripped my cock in two tight fists, just about able to encircle me completely, as she laced kissed down onto my balls. She briefly sucked one into her mouth, before releasing me, and giving a soft, sexy laugh - a confident noise that displayed her conquest. And she had, indeed, conquered me.\n\nShe kissed lower, dotting the sensitive flesh of my taint, and I realised what she was up to. The thought of her, down there, was somewhere between frightening and exciting. I'd never had anything like this done to me before - and I wasn't sure whether I was scared I wouldn't like it, or if I was scared I would. That Libby was awakening something in me that couldn't be put back to sleep.\n\n'Mmm,' she almost growled, one of her hands releasing my cock - the other keeping me in a vice. 'You're so clean, baby. Did you expect this?'\n\nI shook my head, but I don't think she saw.\n\n'Did you make yourself ready for me? Come to the party, hoping I'd eat you up?' She punctuated her taunting with a brief, but unmistakable lick across my anus - quick and fleeting. I whimpered, hating how much I didn't hate it.\n\nI had, of course, showered just before the party. I was a stickler for cleanliness, and didn't shy away from making sure every nook and cranny was sparkling fresh before a night like this. Oh, she was loving this.\n\nAnother lick - this one much slower, much more indulgent. I felt Libby's warm breath against my most intimate, untouched area, and imagined her eyes wide and full of enjoyment. Or, maybe they were narrow, mischievous.\n\nIt struck me again that, as far as she knew, I had genuinely come into this situation knowing what was going on. She was acting off of the signals she was picking up - I just didn't realise the context of those signals. Or, in the case of my, ahem, cleanliness, it was a case of positive bias. She had an idea in her head about what I wanted, and even something that was originally unrelated can be absorbed into that idea in her mind because it fits.\n\nThe fact that I was rock-hard and moaning each time her tongue lapped at my pucker probably didn't do anything to dissuade her.\n\nHer hand on my cock started to pump me absently, purely for my benefit as she rimmed me, nose pressing into my taint, her lips kissing my tight ring as her tongue made its efforts to break my seal.\n\nI moaned with each sensuous, talented assault on my backdoor, her some moans and huffs telegraphic her enjoyment, the gag in my mouth making me thankfully mute - whether I would be begging her to stop, or begging her not to at this point was unknown. I was along for the ride, and the loss of agency was only adding to the appeal. I was at her mercy, but she wasn't showing me any.\n\n'You taste so fucking good, Elliot,' she moaned, barely taking her lips off me as she spoke. Each movement made that damn piercing press into me, a little button of hard amongst the soft and slick flesh of her persistent, loving mouth. She made out with my backdoor, as her hand on my cock made sure that, even if I didn't like the rimming, I was building an association between her actions and my pleasure. Of course, I was liking it - and I think she knew it.\n\n'Don't miss me - I'll be right back,' she breathed, and all of a sudden she was gone. A flash of fear ran through me as I looked up, not able to see her between my raised legs. I had been left alone, tied to her bed, like a pig upside down in a spitroast. My cock was painfully hard, from her unsatisfying deep-throat and her talented tongue keeping me close enough to cumming for it to almost be painful.\n\nShe wants me to beg, I remembered. I wondered if she would really hold me here, at the edge of closure, until I begged her. Only, with my gag, could I beg? Would she let me? Or would she hold me here, in this in-between space? Only letting me out to call into work, so she could keep me longer...\n\nThe idea should have worried me, but I only felt excitement. My arousal, signified by my raging erection, didn't waver, until Libby appeared in the doorway. I must have missed her leaving, but now the silhouette of her from the hallway light gave me a view of her body in a new way. Her breasts, small but perky, sported visible eraser-nipples, and her slim body led my eye down to her waist.\n\nHer cock, I had to admit, was gorgeous. It was long, with the foreskin intact and still in place, giving it a look of power and dominance. It hung between her thighs as she stepped forwards, the door closing behind her, sending her back into the mysterious dark, the image of her phenomenal body seared in my mind.\n\n'Ready for the warm-up, baby?' she asked, her voice oddly sweet, like she was really asking for permission.\n\nI let out a whine, and she laughed softly. I could imagine the smile on her lips, a mix of pleased and pure evil as she plotted my demise.\n\nI heard a short spurt sound from her direction, and hissed as I felt coldness on my butt, but it quickly turned into a pleasant soothing sensation. Libby was spreading something onto my anus, and it felt wonderful.\n\n'Just to help you loosen up,' she informed me, before taking the plunge - I felt her digit slip into me.\n\nIt couldn't have been more than a single knuckle, and the fact that she had been preparing me for some time now meant it didn't hurt at all, but I still tensed up. Libby gave a small sigh, and pulled the tip of her finger out of me, before applying more of whatever substance it was to my slick hole, and pressed in again.\n\n'Uhh,' I sighed as she slipped it into me, staying shallow in a way I assumed was meant to be teasing, but in fact was a nice way to ease me in.\n\n'You like that, baby?' she asked, applying a babyish voice that made my cock stir. She leant over me, until I could feel her breath on my belly, and pushed her finger in deeper - deeper - until I felt her palm press into my cheeks. 'Oh, you love it. Look at you - such a slut.'\n\nThat word did things to me - making me feel cheap and unworthy and hers. Like she owned me. Well, right now she kind of did. She could do whatever she wanted to me, and I was going to thank her for it, and she knew it.\n\nWhich, I guess, is why she started to fuck me with her lubed-up finger, pulling it out fully before pushing back to her palm.\n\nThe sensation was odd - when she pulled it out it was almost like pooping, and I wasn't sure about how much I liked it, but when she pushed it in - oh God. I was in love. It was small, obviously, but that didn't mean much - I'd never had anyone play with my ass like this before.\n\n'Hrrm!' I moaned through the gag, unsure if I was begging for mercy or more, but Libby hardly seemed to notice. I felt her peck my stomach with kisses as she finger-fucked me, turning it from some lewd, nasty thing to a strange sort of intimacy. She was inside me, like no one else had been. Connecting to me like nobody else.\n\nHer kisses moved south as her finger slid in and out of me, until I felt her chin and hair brush my cock. I mewled, and could picture her shit-eating grin like she was right in front of me.\n\nLibby's finger exited me, leaving me a shade disappointed until I felt her lips reacquaint themselves with the desperate tip of my unloved cock. I sighed as she kissed it, licking the crown and worming around the top of the shaft, her tongue a seductive snake with powers unparalleled. As I swam in the pleasure she afforded me, Libby pressed two of her slick, soft digits against my now eager, if inexperienced, hole, and pushed.\n\nThe pressure of being stretched by two fingers was slightly uncomfortable, but between her mind-blowing tongue-job on my cock and my already admitted enjoyment from being penetrated - oh God, I wasn't coming back from this - it quickly turned to pleasure. It was strange, and hard to describe, but between the vulnerability I was showing, the dominance Libby had, the care and experience she was displaying as she worked me over, and the simple feeling of being stretched open was culminating in another impending orgasm. She was going to make me cum by fucking my ass and licking my cock.",
        "She fucked my cock with her mouth, then her throat as she pushed deeper, licking the base as her neck swelled from my intrusion, all the while getting faster and more insistent in her finger-fucking, until she was timing her gag-inducing nose-to-pelvis cock-swallowing with intense, purposeful thrusts into me that made my hips roll along with my eyes.\n\n'Hmmff, HHMM!!' I moaned, feeling that desperate need building inside me as my orgasm crept up, raging like a fire inside me that Libby was all too happy to incite.\n\nHer lips popped off me again, and although I had only learned today that I could moan like this, I whined again like an expert - a well-trained, needy thing, desperate for her mercy.\n\nLibby kissed me on my hips, he fingers still deep in me, reaching for some goal in my guy. Something told me that she would soon be substituting out her fingers for a more attuned tool.\n\n'Ready to beg?' she asked me in that sultry tone she had. It made me shiver, and I hoped for a moment that her words meant she might be letting me out. Quickly, though, I realised that wasn't going to happen. Not by a long shot. She was having too much fun. 'Oh? What's that? I can't hear you baby - but if you're not going to beg me, I might just keep you there... on the edge.'\n\nHer fingers inside me flexed, stretching me open. At the same time, her other hand came to my cock head, wet and red and hopeless, her fingertips running along my glans expertly. It felt incredible, so delicate and light, and yet so specifically able to shoot blissful lightning from my cock, up through my spine and into the pleasure centers of my brain that I knew she could make me cum just from this if so chose.\n\nThere was a brief reprieve, however, as she slowed. Her actions became less erratic, her smirk over me fading to a more sincere gaze as she watched me.\n\n'I told you, I've had my eye on you for a while. You remember that?'\n\nI nodded as her fingers slipped from my lubed-up hole, the fingertips still lazily grazing my cockhead, keeping me on that edge she'd mentioned.\n\n'I couldn't tell you why, Elliot. I just had this feeling, or this hope, that... that you would want this too.'\n\nBefore I could think of anything else, before I could even consider moving, before I could realise that moving wasn't an option, I felt the slick, thick head of her cock, clad in thin rubber than only served to make her entrance a gliding, smooth penetration, press into my winking orifice.\n\nI watched Libby's eyes roll back into her head and her hands gripped my shoulders, making me take her weight. I had imagined her on top of me before, fingers gripping my shoulders and neck as her eyes rolled and her lips dropped into a soft round O. In my dreams, however, it was as she sank slowly down onto my cock, the girth and hardness stretching her slick hole and making her gasp, realising how much she loved the feeling of me inside her.\n\nInstead, it was I who felt the girth and steel-like hardness of her cock as it pressed into me, the first inch cresting past my sphincter by virtue of her fingers opening the way. To me, she felt even bigger than she looked - like a rod of warm metal was being pushed into my body by a beautiful, impossible-to-deny seductress.\n\nShe paused, sighing as the head of her sex found it's home within me. 'Oh, wow,' she breathed, that light sincere smile on her face again. She stood, becoming more vertical now, looking up my body from between my bound knees, her conquest a writhing, whimpering thing beneath her. 'Relax, baby. If you relax, it'll feel so much better.'\n\nMy eyes met hers, and something must have clicked - some recognition of the fear behind the unexpected pleasure. Libby's brow furrowed, and just as I thought she might pull out, allow me to communicate, explain what had happened - she pressed again.\n\nI moaned, tightening instinctively around her, and she paused again. 'If you push out, like you're, you know, pooping, it'll help, baby.'\n\nI hesitated, wondering if by listening to her I was transcending that invisible line between recipient and participant. Did I want this to feel good? Did I want to act in a way that would make this specific action feel better for me?\n\nIt was a complicated question, with a simple answer.\n\nYes.\n\nI wanted it to feel good. I wanted to have sex with Libby, and I wanted that sex to be good.\n\nHad I envisioned it like this? Bound, unable to voice my concerns, or the unexpected circumstances that were unforeseen? No, of course not.\n\nBut - I had to admit something. Given the freedom, from these ropes, from my gag, I wouldn't have stopped her. I would have liked it to have been a bit slower, maybe, and for her to be acting under the knowledge that this was my first time having this done to me.\n\nBut I was way past pretending I wasn't enjoying myself.\n\nSo, I pushed, and Libby's eyes fluttered and her mouth hung softly open as her thick cock pressed into me, inch by glorious inch, her girth stretching my insides in a way unknown to me before.\n\nAnd it felt amazing.\n\n'Half way in,' she sighed at one point, which I decided had to be a lie because she'd been pushing herself into me for what felt like forever. 'God, you're so tight Elliot. And you look so cute, all tied up. Does it feel good?'\n\nI nodded, honestly. Her smile became a smirk as her hands trailed my thighs and calves, lifted up at her sides, a V that framed her perfectly.\n\nShe stopped pushing, and instead pulled ever so slightly. It was an odd sensation, but what sealed the deal was when she pushed again - her meat pressing into something within me that made my body crinkle and stretch, a new form of pressure and pleasure inside me I had never experienced before.\n\nLibby grinned. 'You like that?' And she did it again.\n\nFireworks. In my gut, behind my cock, swirling through my shaft and balls, tingling up my spine. She did it again, and again, short sharp thrusts that over and over pressed this button inside me that made me moan into my gag, tugging helplessly at my bindings like I hadn't in ages.\n\n'Gnhhhhn!' I squealed, not hardly in pain, but because I couldn't contain the sound anymore. There wasn't room anymore. Libby was pushing these notes of uncontrolled pleasure from me as she began to fuck me, her length vanishing deeper into me with each thrust, over and over, until I felt her hips press against the skin of my thighs. Her hands, which had become vice-like grips on my calves, steadying herself as she invaded my body, relaxed, trailing down me. She stroked me like a lover, her cock embedded in me, still but unmistakably present.\n\n'Tell me,' she said, her voice wistful and soft. She leaned forwards, her cock shifting in me, a solid staff of sexual prowess that made me twist and stretch upwards to accommodate her. Libby's hair fell onto my chest as her hands found my head, and I heard a soft click.\n\n'Tell me to fuck you,' she said, again hopeful. The gag, unbuckled, fell from my lips, away onto the bed.\n\nMy first instict was, rather ruining the mood, to swallow the spittle that had built up around my lips, making me splutter and cough as Libby ground into me, her face only inches from mine, yet her sex deeply embeeded inside me. My second instinct was to reach up, but my hands were still bound - she wasn't releasing me completely. No, this was too much fun for her.\n\nOnly for her?\n\n'Lib,' I coughed, looking up at her. At this beautiful, pierced, tatooed woman, every part of her a surprise, a shock. She was sexual, yet showed moments of innocence. Dominant, yet admitted all she yearned for was my acceptance.\n\nI could have told her. That I didn't expect any of this, that I didn't know she was trns, that I wasn't expecting the night to be anything like this. But, I knew that would make it stop. While I hadn't signed on for this, that didn't meant I wanted off. Libby may have had her eye on me for a while, but I'd seen her too. I'd wanted her. And now I had her. Or, she had me.\n\n'What?' she asked, a smirk on her face as she pushed into me, just grinding her soft flesh against mine as her cock filled me. 'You act like no one's ever fucked you before.'\n\nOur eyes locked, and before I could say anything, explain anything, she saw it. Finally, in my silence, despite my lack of a gag, she clicked.\n\n'Oh my God,' she breathed. Her mind must have been racing a mile a minute, going over every interaction we'd had tonight - the same way I had. 'Oh God! Elliot! Why didn't you tell me!'\n\n'I didn't- you had me gagged!' She looked horrified, and I immediately wish I hadn't said it like that. 'No it's- you didn't do anything wrong, Lib!'\n\nShe pulled away, her cock wrenching out of me in one fluid, glorious movement that sent shivers through me. I groaned, but I doubt she was listening now.\n\n'Didn't do anything wrong?!' she shouted, and I wasn't sure if she was shouting at me or herself. 'I raped you, Elliot! I baited you, basically lying, and then tied you down, gagged you, and... oh God, Elliot, I'm so sorry.'\n\nI shook my head, mostly as I still wasn't able to do anything else. 'No, Libby - don't be sorry.'\n\nShe sat on the side of the bed, looking away from me, and hung her head. I was so used to seeing her as this confident, dominant woman to seeming so... sad. I watched her bare back rise and fall in uneasy breaths, slow and controlled, as she tried to bring herself down. Her shock had been much more... impactful than mine. Whatever guilt she was feeling was misplaced, but clearly that didn't matter.\n\n'I... I like it,' I said, trying to help, or to give her some silver lining.\n\nShe looked over her shoulder, her tattoo stretching along the nape of her neck, and I struggled to think about anything other than how beautiful she was. Then, of course, I saw the thin black streaks of mascara that now lined her cheeks, smudging as she wiped the tears away. 'You what?'\n\n'It wasn't... rape, Libby. I mean, sure, I wasn't expecting it-'\n\n'Oh, God,' she sighed, her eyes screwing shut in some internal agony.\n\n'Libby - look. Why don't you, you know, untie me. So we can actually talk.'\n\n''Course,' she mumbled, quickly moving to my legs. In under a minute, my legs were released, and soon after, my wrists. Once I was fully free, Libby threw a blanket at me and mumbled another hundred 'sorry's for good measure.\n\nAs I sat up on the bed, blanket over me for (rather redundant) modesty's sake, I watched Libby pull on a pair of loose jogging bottoms that struggled to contain her hefty cock, which was still at half-mast despite how quickly we'd gone from 'beg me to fuck you' to an awkward silence. She pulled on a t-shirt, and stood at the doorway looking at me. Or through me. It was hard to tell.\n\n'Maybe you should go,' she said, all levity and seduction lost from her voice. She sounded empty. Like all the fire in her had been stamped out. 'You have work in the morning.'\n\nI gave a short laugh, despite what was a bizarre tone in the room. 'What?'\n\n'Well? Look, I didn't mean to... you know. Do those things to you. Not without you knowing. I'm not like that.'\n\n'Not like what?' I asked, confused. 'You didn't rape me-'\n\n'STOP! Stop saying that word, Elliot. Please.'\n\nThe gravity the word could hold suddenly fell on my chest, and I felt indescribably stupid. Stupid, pig-headed and inconsiderate. But, all the same, I wasn't interested in just leaving. Not at all. Not with her so upset.\n\n'Then what, Libby?'\n\n'What do you think?!' she shouted, and again I wasn't sure if it was pointed at me or herself. 'Growing up, like I did - do you have any idea the looks I got from parents when I asked if I could get changed in the girl's changing rooms at school? Or, using the girls toilets for the first time, and hearing someone mutter about how I wasn't 'real' - that I was only pretending so I could perv on people. After a while, you start to feel like being a predator is expected. And I hate it.'\n\n'You're not a predator,' I said, pulling the blanket around me and tucking it in, like you would a towel, so I could stand. Not wanting to invade her space, I took the other side of the door frame, so we were leaning, looking at each other, the empty void of the doorway hanging between us.\n\n'No?' she asked, a dead smile on her face. 'I scoped you out, ignored any sign you weren't aware of what you were getting into, and before we had a chance to clear anything up, I had you tied to a bed, my dick up your arse.' She held my gaze, waiting for me to challenge her, to fight with her. Anything to turn this into a confrontation - because they have winners and losers. She wanted to lose, to be told she was a predator, and for me to leave. To walk out.\n\nSo, I shrugged. 'Look, I might have been thick enough not to pick up on the clues, and you asked me more than once if I knew what I was getting into. You checked. You're not a predator. I'm just an idiot.'\n\nThat got a small laugh from her, which I was pleased to see.\n\n'And, besides,' I said. 'I didn't lie to you. I liked it.'\n\nA pause. A thousand expressions crossed her face, thoughts and feelings bubbling just under the surface. Doubt, hope, disappointment, suspicion, trust, lust. Half a minute passed like this, of us just watching each other.\n\n'What did you like?' she asked, finally, and the question kind of surprised me.\n\n'What?'\n\n'What part did you like?' she asked, more insistent this time.\n\nI had to think. It had all been a blur. 'Uhh,' I said, not knowing where to start.\n\nShe stepped forwards, into the void of the doorway, crossing towards me. I didn't know if she was waiting for me to reject her, or if she was hoping I'd say the right thing. I didn't know if she wanted a list of the things we'd done tonight, or if she wanted the highlights. I didn't know what to say, so I said the only honest thing that came to mind.\n\n'I like that it's you.'\n\nAt that, Libby closed the gap between us, her hands reaching around my neck as her lips found mine. In the dark, and for the second time tonight, our hands explored each other, only now there was something else between us. Well, two things, if you count the newfound sense of connection and understand.\n\nOur bodies pressed into each other, her thin pyjamas giving me more than enough room to slide under the fabric. One hand held her back to press her against me, whilst the other easily slipped into her bottoms, gripping her buttcheek in a firm hold that made her squeak against me.\n\nAs we kissed, eager and vigorous, her hands slid down my body. My bare chest goose-pimpled at her light touches, her wandering digits only stopping at the blanket I had wrapped around my waist. For a moment, I wanted her to just yank it off me, for her to give into temptation and go with her gut.\n\nInstead, Libby hesitated and pulled away, her eyes finding mine as I fondled her.\n\n'Are you sure?' she asked, her voice barely a whisper.\n\nIn answer, I pulled my hand around, inside her joggers, and took her length in my grip. She sucked in a breath as I awkwardly stroked her hardening, impressive length. 'I'm sure,' I said, pecking her lips with a kiss that made her smile, eyelids fluttering as I teased her until her cock was straining at the fabric of her bottoms.\n\nHer hands twisted, and the blanket dropped to the floor. My nakedness didn't bother me - I figured we were past that particular barrier by now. More, her lack of nudity was bothersome, so as I kissed her cheek and forehead and neck, my hands met at the hem of her shirt. I pulled it up and over her in a quick motion, letting her breasts free.\n\nI licked her neck, which made her mewl, and again gripped her length through the fabric.\n\n'Fuck, Elliot,' she whispered. 'What are you doing to me?'\n\n'What I want,' I said back between kisses. I travelled down her neck, kneeling so I could take her nipple between my lips. I sucked, nipping and licking her bud until it was as hard as her cock, before moving to the other, Libby's soft moans and roaming hands telegraphing her enjoyment. 'I want you,' I whispered as I kissed lower, tasting the skin of her flat stomach, my hands on her hips as I held her body to me.\n\nI could feel her trapped trouser snake against my chest, hidden beneath stretching fabric, crying to be released. Teasing her a little, I stroked up and down her legs, grabbing her butt before travelling back down to her calves, all the while kissing her at the line of her pyjamas, listening to each noise she made. Each small moan, every shiver, all in response to how I touched her. It was hypnotic, playing her like an instrument.\n\nEventually, I gave in to her softly humping hips, and tugged the elastic waistline down her hips. Her cock bounced up, into my chin, making us both giggle like teenagers. Then, I was met with something I never imagined I would experience - a cock, in front of my eyes, waiting for me to suck, kiss and lick it.\n\nAnd I wanted it.\n\nLibby's hands were in my hair, pulling and tugging as she contained her arousal, trying not to be domineering. But she didn't need to be worried - not really. Slow, maybe. But not worried.\n\nI looked up at her concerned, yet undoubtedly sex-drunk expression, and kissed the angry, slightly wet head of her member. 'It's big,' I commented, as the vague taste of salt, amongst other things, wafted across my tongue.\n\nShe only nodded. 'Sorry. Don't do anything you don't want to.'\n\n'I won't,' I said, before taking the head into my mouth. It was strange - a slightly spongy texture I was familiar with, but not like this. It was warm, too. She filled my mouth, but from what I could see there was so much more of her to go. I thought back to feeling her inside me, and wondered how on Earth I managed it. Then, I felt a swell in my own cock at the memory. Fuck, it had felt good.\n\n'Go slow,' she said, her voice comforting. Gone was the dominance, replaced with something softer. I like this side to her, but I hoped she hadn't lost that forcefulness completely. 'Don't force anything.'\n\nI pushed down, just until the tip hit the back of my tongue. I managed not to gag, but I knew it was my limit.\n\nNot even halfway up her shaft. \n\nShe moaned though, as I worked the head with licks within my mouth, sucking for pressure and moaning for vibration - every trick I'd ever had used on me. I almost wished I had a lip piercing, just to teach her a lesson.\n\nI sucked her for a while, getting used to her size, and hearing her slowly become more and more excited, her breaths shorter and her gasps louder.\n\n'Elliot,' she said, stopping me. 'You're gonna make me come.'\n\nI pulled up, standing again so I loomed over her a little. 'Not yet,' I said.\n\n'Oh?' That eyebrow was back - all taunting and cocky. 'You sure you're ready?'\n\n'I've already had you in me,' I said back, matching her smirk.\n\n'Yeah,' she said. 'But I haven't fucked you yet.'\n\nI smiled. 'Yet?'\n\nAll at once, we were on each other again, kissing and stroking and grabbing and feeling, our bodies meshing into one sex-fuelled thing. Somehow we found the bed, and I fell onto my back - again - with Libby on me. She straddled me, my cock nestled between her cheeks and hers pressed into my stomach as we kissed, tongues and lips and urgency between us.\n\nShe humped against me, both of us feeling our bodies stroking our cocks, a feeling of upcoming eruption building quickly as we rode each other. Before long, Libby caved, pulling away to give me an order.\n\n'Roll over,' she said.\n\nI smiled, a flash of nervousness in my belly, as she lifted herself off me. I did as I was told, laying face-down on her bed, with my head on the pillows. Libby pulled one of the pillows from under my head, and slapped my butt.",
        "'Lift,' she said. I obeyed, and she pushed the pillow under my waist, nestling my cock nicely against the soft fabric. The way the pillow kept my butt upturned was lewd, an obvious and unapologetic indicator of what was about to happen. She wasn't going to just sit inside me this time - this time, she was going to fuck me. Just like she'd promised.\n\nCold, slick wetness coated my anus again, and I felt Libby's finger slip into me, exploring and stretching. I relaxed, pushing my muscles slightly as she had taught me, and I heard her give a soft laugh. 'Quick learner.' I was rewarded with a kiss on the cheek as she finger-fucked me, crash-coursing what we had been up to the rest of the night.\n\nJust as quick, though, the fingers were gone, and I felt the bed shift as she straddled me again.\n\n'Go slow,' I requested over my shoulder. Libby appeared next to me, the trace of her cockhead tickling the small of my back, so she could give me a deep, meaningful kiss.\n\n'I want you to enjoy it,' she whispered, before disappearing behind me again.\n\nI felt her cock at my entrance, the warmth of her sex a contrast to the cool lube, as she pushed into me. It was easier this time, and I groaned as I felt my hole open up for her. As I was stretched by her cock, Libby's hand found my hair, gripping me like I knew I would have her if this night had gone the way I originally envisioned. The idea hit me that I was face-down, arse-up on her bed, a dick sliding into me with my hair in a pornstar's grip, and I loved it. I loved being hers.\n\nHer hips met mine as her cock bottomed out inside me, that spot of pleasure inside me being treated to a graze from her oversized manhood. I felt her heavy balls, hot and swollen, press against mine as my cock was trapped under my belly.\n\n'Fuck,' I moaned into her pillows.\n\n'You feel amazing, baby,' she said, her voice taking on that tone it had earlier in the night. 'Tell me when you're ready.'\n\nI nodded, adjusting my hips to feel her in me. It felt like she was in my stomach, up in my fucking ribs. It was so deep, so warm and hard, stretching me open like a slut under her. After a moment or two, I pushed back onto her, making her hump me accidentally. As she pushed into me, I moaned, 'I'm ready, Lib.'\n\n'Thank fuck for that,' she groaned, hips pulling back. Her cock slid out of me, before she pushed back in, hips slapping against my cheeks as my prostate was pressed into. I mewled into her bedding as Libby started to find a pace, fucking my prone body, her cock massaging my insides and making me moan and beg.\n\n'Fuck me,' I whined. 'Oh God, Libby, fuck me!'\n\nLibby did not disappoint. She picked up the pace, her hips slapping into my cheeks, balls slapping my taint as her cock dove deep into me over and over and over. She fucked me like a wanton slut, a sleeve for her to abuse, the one-night-stand I was.\n\n'Uh-uh-uh!' I moaned as she plowed me, her powerful thrusts hammering that spot inside me, my cock humping into the pillow beneath me as she fucked me. 'Gonna cum, Lib- gonna-'\n\n'Me too, baby,' she moaned behind my ear, her thrusts getting more and more erratic, more forceful, the bed shaking under us in creaky lurches. Her thick cock annihilated my prostate, forcing me closer and closer to orgasm, and just as I crested I moaned her name.\n\n'Libby! Fuck!!'\n\nMy muscles must have clamped down on her, squeezing her out, as just as I felt my cum erupt from my cock into the pillow beneath she pulled off.\n\n'Just the tip,' Libby moaned, and at first I didn't understand.\n\nThen, I felt her cock - noticably less slick and rubbery, press into my gaping hole again. This time, she stayed shallow, only the head pressed into me, and gripped my hips.\n\n'Elliot! Baby!'\n\n'Cum in me,' I moaned, knowing what she was doing. 'Fill me, Lib!'\n\n'AHH FUCK!!'\n\nThe hot liquid spewed from her in long, heavy loads that spurted deep into me. I felt her paint my insides white, my head rolling as my own orgasm had only begun to subside. Her teeth bit into my shoulder blade as she came inside me, condom discarded, a night's worth of teasing and flirting and confusion and seduction pouring out of her and into me.\n\nEventually, she rolled off me, her cum leaking from my once-virgin hole, landing on her bed to my left. Her face was glistening in sweat, mascara smudged to a raccoon-like haze, hair a mess of sex-addled activity. I lifted myself enough to kiss her, pulling her in for a long, sensuous smooch that lasted until we both fell into the arms of exhaustion.\n\nIn those last moments of consciousness, as we lay, hot and naked and spent, I heard her raspy voice give a soft laugh. 'I knew you could handle me.\n\n \n"
    ],
    "authorname": "Danni_Iridescent",
    "tags": [
        "anal",
        "big cock",
        "bondage",
        "first time",
        "mtf",
        "piercing",
        "prostate",
        "rimming",
        "semi-consensual",
        "tattoo"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/i-like-that-its-you"
}