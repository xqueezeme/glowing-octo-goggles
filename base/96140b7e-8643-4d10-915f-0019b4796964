{
    "title": "Family First Ch. 11",
    "pages": [
        "\"You know... alarms tend to work better when you leave them next to the bed that you're actually planning on sleeping in.\"\n\nChristina jolted awake at the sound of her mother's voice. She blinked several times in confusion as she struggled to figure out where she was and how she'd gotten there. All she knew for sure was that she wasn't in her own bed and that she wanted to go back to sleep.\n\n\"Hmm? Wuhtimeizit?\" she finally mumbled.\n\n\"It's almost eight, and Danny's already waiting for you out back,\" Diane replied. She stood at the foot of the bed with a droll smile on her face, holding Christina's buzzing cell-phone out in front of her.\n\nThe next shock came when Christina felt her father stirring next to her. All at once, memories of the previous night came flooding back into her brain. Her pulse quickened as she ran through a mental slide-show of the things that had lead her to this specific moment. And just like that, the reality of her situation slid back into focus.\n\n\"Shit! I overslept!\"\n\n\"You sure did, and you better get cleaned up before you go, too.\" Diane made a show of holding nose and pointing with her free hand to the streaks of dried semen that clung to her daughter's thighs and matted in the bright orange curls that adorned her well-fucked pussy.\n\nChristina's brain immediately launched into survival mode. She bounced out of bed like a shot, snatched her phone out of her mom's hand and darted toward the bathroom. A quick glance at the clock told her that she had barely half an hour to get showered, dressed, and into her first-period class before the late bell rang. If she had to choose between spending the day reeking of sex or showing up to school late, she'd choose the latter, but she still held out hope that she could make herself presentable with a little time to spare.\n\nShe only made it a few steps out of her parents' bedroom, though, before she came to a screeching halt. Running back inside, tackled her mom from behind, pushing her onto the mattress and nuzzling her face into her back.\n\n\"ThankyouThankyouThankyou,\" she said. \"Last night was perfect, and you're the best mom ever.\"\n\n\"You're very welcome, honey,\" Diane replied. \"You better get that cute little ass of yours in gear, though. I'm glad you had a good time with your father, but if you ruin your perfect attendance record with only three weeks left in the school year, I'll be pissed.\"\n\nChristina gave her one more loving squeeze before letting go. Angling her head around Diane's torso, she blew a kiss to her father and darted out of the room before he had the opportunity to respond.\n\n\"I hate it when she leaves, but I sure do like watching her go,\" Ray said, grinning sleepily back at his wife.\n\n\"You and me both,\" Diane replied. \"So, I take it you two had a good time?\"\n\nRay ran a hand through his messy hair. \"It was... I don't even know how to describe it. Really really good,\" he said.\n\n\"No regrets?\"\n\n\"None. You?\"\n\n\"Only that I didn't get to see the exact moment when you put that marvelous cock of yours into our little girl for the very first time.\"\n\n\"Maybe we should have filmed it,\" Ray said, only half joking.\n\nDiane flashed a naughty smile. \"Ooh, now why didn't we think of that? We could have added it to the home video collection.\" She adopted a thoughtful expression and started counting off on her fingers. \"Christina's first steps... Pre-school graduation ceremony... Daddy and daughter's first fuck.\"\n\n\"Don't worry,\" he replied. \"I'm sure there will be plenty more magical memories for us to catch on video in the near future.\"\n\n\"True... But I think that since we were so negligent on this particular occasion, the only fair thing would be for you to tell me every single thing that happened without leaving anything out. Right?\"\n\nAs she spoke, Diane climbed into the area previously occupied by their daughter and wrapped her fingers around Ray's hardening cock. A shiver ran down her spine as she imagined their little girl lying in this exact spot, smiling innocently up at her daddy as he worked himself in and out of her cute little pussy.\n\n\"I suppose it's a reasonable punishment,\" Ray replied, sighing as his wife lazily played with his prick. \"What about you? Did you have a fun night?\"\n\n\"Too much,\" she said as a slight flush spread to her cheeks. \"I may not be able to walk straight for a week.\"\n\n\"Well, it's about time someone gave you a run for your money.\"\n\n\"To be fair, it did take all four of them,\" she replied, her cheeks reddening even further. Until the events of the previous week, she'd been completely faithful to her husband. After all those years, It felt strange to talk casually about the extramarital sex they'd both enjoyed the night before.\n\n\"I'd expect nothing less,\" he replied, lowering his gaze down to her fist as it stroked up and down on his increasingly erect penis. \"I guess it goes without saying that you're way too sore to take care of a little issue that's recently popped up.\"\n\n\"Is that a challenge?\" Diane asked, her eyes twinkling with excitement and a bit of relief as well. It was nice to know that her husband wasn't jealous of what she'd done and that a night of no-holds-barred sex with their pretty, young daughter hadn't diluted his desire for her in the slightest.\n\n\"What if it is?\"\n\nLeaning forward, Ray pressed his lips against hers, and without another word, Diane melted into his arms. Happiness swelled within her as she savored just how wonderful her life had become. The last thing she remembered before being swept away in waves of passionate ecstasy was reaching over with her free hand to hit the snooze button on Ray's alarm clock.\n\nAfter all, being on time wasn't everything.\n\n~~~\n\n\"Sorry!\" Christina exclaimed as she dashed out onto the back patio, her still-wet hair trailing behind her.\n\nDanny just smiled. \"I was starting to wonder if you were coming.\"\n\n\"Not since last night,\" she replied, flashing him a toothy grin.\n\n\"You write that one yourself?\"\n\n\"Actually, I'm thinking of starting a career as a stand-up comic. Mostly observational material about my kooky family.\"\n\n\"Well, at least you're not getting into prop comedy. Your hair might be the right color, but I don't think I could stand having Carrot Top's successor in the family.\"\n\nChristina just grinned. She loved her cousin so much, and she badly wanted to give him a kiss. Before she had the chance, though, he'd already turned to leave.\n\n\"We better get going. If we don't book it, then you can say goodbye to that perfect attendance record of yours.\"\n\n\"Thanks, Mom,\" Christina replied, sticking out her tongue and blowing a raspberry before dashing to catch up.\n\nThey spoke in low tones along the short walk to school, quietly regaling each other with stories from the night before. Christina thought there was something incredibly adorable about the note of pride in Danny's voice when he told her about his night alone with her mom. At the same time, she felt relieved that he didn't seem jealous when she told him about the romantic evening she'd shared with her father.\n\nAs they walked, Christina's brain filled with images of her mom, cousin, aunt and uncle fucking and sucking to their heart's content. By the time they reached the main entrance, her panties were noticeably damp and her nipples poked like diamonds into the material of her bra. Suddenly, the thought of going seven whole hours without any kind of sexual relief seemed almost unbearable.\n\nShe made a mental note to put a moratorium on sex talk before school.\n\nThey paused for a moment when they reached the hallway where they normally parted ways. Christina found herself glancing up at her cousin's handsome face. His playful grin and warm, friendly eyes seemed to draw her in, and without sparing a thought to the consequences, she tilted her neck up to meet him in a loving kiss.\n\nA quick, nervous shake of Danny's head brought her crashing back down to earth. A heavy blush spread across her cheeks as she cast her eyes around the hallway, hoping no one had noticed.\n\n\"Shit! Sorry.\" She muttered, staring down at her feet in embarrassment. By that point in the morning, the halls were mostly empty, and the few stragglers who remained were too busy rushing off to class to give either of them much notice.\n\n\"It's okay,\" Danny replied. \"I don't think anyone saw. I'll see you at lunch, okay?\"\n\nChristina gave a quick nod. \"Lunch... Okay, sounds good...\" she mumbled, still hardly believing what she'd almost done. With an awkward wave, she headed off to class, fighting the urge to turn back for one last look at her cousin.\n\nDespite everything that had happened, she somehow managed to make it on time. The first thing she saw when she stepped inside was Olivia Foster smiling up at her, looking as effortly gorgeous as ever. The chair next to her was empty save for Olivia's backpack, which she quickly removed as she waved Christina over.\n\nShe saved me a seat, Christina thought to herself. Of course she did...\n\n\"Thanks,\" she said as she sat down. Before Olivia had a chance to reply, the bell rang and class began.\n\nAfter everything that had happened over the weekend, the utter normalcy of sitting in her classroom, listening to her professor give a lecture on symbolism in The Grapes of Wrath felt incredibly strange. It had been scarily easy to forget that there was more to life than having filthy sex with her extended family. Everything had changed so dramatically over the last week that something as normal as being a high-school student suddenly felt like it was part of some alternate reality.\n\nWith about fifteen minutes to spare, Dr. Rao ended the lesson and gave them the rest of the period to work with their partners on the project she'd assigned the previous week. They'd barely gotten started when Christina watched Olivia pull a strand of wavy hair behind her ear, revealing a tiny, blue police box that she immediately recognized as the Tardis, dangling from her ear.\n\n\"Are you a Doctor Who fan?\" she asked.\n\n\"A Whovian, you mean?\" she said with an embarrassed smile. \"Yeah. I guess... a little.\"\n\n\"Nice,\" Christina replied, hoping her surprise wasn't too obvious. \"Danny and I watch that show all the time.\"\n\n\"Same with me and my brother. He got me the earrings as a Christmas present a few years ago. We didn't have English language TV when we were living overseas, so he downloaded a big file with all the episodes on it, and we'd watch them on his computer when we were bored.\"\n\n\"Has Brett given you a hard time about it yet?\" she asked. \"I tried to get him to watch it with me once, and he just made fun of it the whole time.\" Before the words had exited her mouth, Christina found herself wishing that she could pull them back in. The absolute last person she wanted to talk about was Brett Sampson.\n\nOlivia frowned. \"Why would Brett care about what kind of TV shows I like?\" she asked, surprising Christina with the genuine confusion in her voice.\n\n\"Well... aren't the two of you like... going out?\"\n\nOlivia's eyes went wide as saucers. \"What!? Are you kidding?\" she exclaimed, drawing looks from the rest of the class. \"Who told you that?\" she whispered, making a conscious effort not to draw any more unwanted attention. \"He's not going around telling everyone that we're dating, is he?\"\n\nChristina stared back at her like a deer in the headlights, utterly confused by the sudden change in Olivia's tone. \"No. Well, I don't know... Maybe? I don't really talk to him at all. My friend Meghan said that you two were going out, and I see you together in the halls a lot, so...\"\n\n\"Trust me. It's not by choice,\" Olivia muttered. \"Ever since I went to that stupid party with him, he keeps finding ways to turn up everywhere I go.\"\n\nChristina was stunned and had no idea how to reply.\n\n\"Look. Let me explain,\" Olivia said, her voice sounding quick and desperate.\n\n\"\u2014You don't need to explain anything to me,\" Christina replied, cutting her off.\n\n\"No. I want to,\" Olivia replied. \"He invited me to that party at Sarah Whatshername's house. I didn't know anyone at school at that point, and he seemed like a nice enough guy, so I said yes. When we got to the party, though, he started getting really handsy and aggressive. I told him I wanted to leave, but he drove to some abandoned parking lot instead.\"\n\nChristina felt a cold shiver run down her spine at the thought of being trapped alone in a car with him. \"Oh, God. He didn't...?\"\n\n\"Ha! No way!\" she replied, a hint of a smile forming behind her otherwise horrified expression. \"I played along until he got his tiny little thing out of his pants and snapped a picture of it with my phone. I emailed it to myself and told him that if he didn't take me home, I'd make sure everyone in the school knew exactly what a micropenis looked like. It was kind of an empty threat considering I didn't know anyone at that point, but apparently his brain is even smaller than his dick.\"\n\n\"Amazing...\" Christina whispered with a gleeful smile.\n\n\"Ever since then, he's been following me around the school, trying to make nice. He probably thinks that I'll delete the pics if he gets on my good side. Fat chance of that ever happening.\"\n\n\"It sounds like I dodged a bullet on that one...\" Christina said.\n\n\"What do you mean?\"\n\n\"I don't know if you knew or not, but Brett and I went out for a while earlier this year. I had kind of a major crush on him.\"\n\n\"Did he try that same stuff on you?\" Olivia asked.\n\nChristina shook her head and looked down at her desk. \"No... I don't think he was ever really interested in me at all. We only went out for a week before I realized he was just trying to get closer to one of my girlfriends.\"\n\n\"What a piece of shit.\"\n\n\"Indeed.\"\n\nA realization seemed to strike Olivia out of nowhere. Her eyes went wide, and her lips turned up into a knowing smile. \"Wait a minute. So is that why you've been so...\"\n\n\"\u2014bitchy?\" Christina offered with an embarrassed smirk.\n\n\"I was trying to think of a nicer word, but yeah \u2014 bitchy works, too, I guess.\"\n\nChristina hesitated as some of the pieces of this strange puzzle finally started clicking into place. If Olivia had never been going out with Brett in the first place, then everything she'd done with Danny over the past week had been predicated on one gigantic misunderstanding. Her mom had been right \u2014 Olivia hadn't been toying with Danny at all. And if that was true, then she really did like him, and Christina had done nothing but get in their way.\n\n\"Guilty as charged,\" she finally said. \"When Danny told me that you offered to help tutor him in Spanish, I asked my friend Meghan about you. When she said you were dating Brett, I kind of blindly locked onto the idea that the two of you were messing with him... or with me.\"\n\n\"I'm really sorry, Olivia,\" she continued. \"It was shitty of me to assume the worst about you without even making the slightest attempt to find out the truth for myself. Can you forgive me?\"\n\nOlivia seemed taken aback by Christina's heartfelt apology. \"What? Of course I forgive you,\" she said. \"Besides, you're the only real friend I've got in this place.\"\n\nAs Christina looked into Olivia's crystal blue eyes, she felt a warm happy feeling welling up within her. She'd never planned on getting close with Olivia Foster, in fact, she'd done practically everything in her power to avoid it. Which it was shocking to realize that despite all of her lingering confusion, jealousy, and unanswered questions, she really wanted to be Olivia's friend. She had some kind of magnetic quality that Christina didn't quite know how to quantify. They'd known each other for less than a week, but she felt like Olivia saw her for who she really was and liked her anyways. Other than her parents, Danny was the only person who'd made her feel that way. It was easy to see how Danny had gotten sucked into her orbit. It was happening to her, too.\n\n\"You could do a lot better,\" she finally replied with a self-deprecating grin.\n\n\"I'm not so sure about that,\" Olivia said. \"So... I guess Danny also thinks I'm going out with Brett?\" she asked.\n\n\"For now,\" Christina replied with a perfunctory nod. \"But I'll set him straight.\"\n\n\"Thanks. I can't believe he thought I was actually dating that creep.\"\n\n\"I can't believe I thought it either.\"\n\nThey both giggled at the ridiculousness of the whole situation, but when their laughter died down, neither of them knew exactly what to say next. Christina sensed an opportunity to ask the question that had been dogging her all week, but she knew that going down that road would make her life even more complicated than it already was. There was a brief, awkward silence as she considered her options, eventually deciding that she was already in too deep to walk away without discovering the full truth.\n\nIn the most casual tone she could muster, she finally said, \"So, you care a lot about what Danny thinks about you, huh?\"\n\nOlivia's smile faltered, and she seemed oddly taken aback by the question. \"What makes you say that?\" she asked.\n\n\"I dunno. He's practically all you wanted to talk about on Saturday... Also, he told me you offered to tutor him in Spanish and that there were 'like serious vibes'\" she said, doing a dopey impression of Danny's voice and throwing in his lopsided grin for good measure.\n\n\"Oh god... He told you that?\" Olivia asked as she covered her face with her hands and let out a quiet groan even as she grinned at Christina's goofy impersonation.\n\n\"He is my best friend.\" After another brief moment of hesitation, she said, \"Would it be safe to assume based on your reaction that he was right?\"\n\nAfter yet another moment of awkward silence, Olivia finally gave a slow nod, her cheeks flushing a deep shade of crimson. \"I guess I haven't been too subtle, huh... I mean... I don't really know him all that well or anything. We've just talked a few times in Spanish class, but he just seems really funny, and cute, and friendly, and I like his hair, and \u2014 oh god \u2014 that smile...\" All at once, she seemed to realize that her mouth was moving faster than her brain, and she brought a hand up to silence herself \u2014 a gesture that Christina found irresistibly adorable.\n\nChristina couldn't help but giggle at the expression of lovestruck embarrassment on her new friend's face. Of course, part of her felt insanely jealous. After all, this was the dark, scary thought that had been lurking deep in her mind ever since their study date. But the way Olivia talked about Danny was just so genuine and earnest that directing that jealousy at her just felt unfair. Besides, there was no denying that Danny was a serious catch. She could hardly fault Olivia for being the first one to notice it.\n\n\"So... How come you never said anything to me about it?\"\n\n\"You mean, besides the fact that I kinda thought you hated me?\" Olivia responded.\n\nChristina blushed, even as Olivia's warm smile assured her that she wasn't upset. \"Yeah... besides that.\"\n\n\"I didn't want you to think I was just using you to get closer to him.\"\n\n\"Well, were you?\"\n\nOlivia hesitated a long moment before finally nodding. \"At first... maybe a little,\" she admitted. \"But mostly, I was just lonely and looking for a friend. The fact that you were related to someone I had a bit of a crush on was just an added bonus, I guess. I really am glad we're friends, though.\"\n\n\"Me too,\" Christina replied with a reassuring smile.\n\n\"Not that it really matters anyway. It doesn't take a genius to see that he's not interested,\" Olivia said.\n\n\"What makes you say that?\"\n\n\"I've been practically throwing myself at him for a week now. At first, I thought he liked me too, but... I think I just misunderstood. He's barely looked me in the eye since I offered to tutor him. I even tried calling a few times, but he always had some vague excuses about being too busy to see me. I can be pretty dense sometimes, but I know when to take a hint.\"",
        "Christina felt a ball of guilt forming deep down in the pit of her stomach. She knew why Danny had been so standoffish, and it had absolutely nothing to do with his busy calendar.\n\n\"That's my fault,\" she said. \"I'm the one who told him you were dating Brett, and I'm also the one who convinced him that you weren't really into him. I could \u2014 um... tell him that you are, though... if you want me to.\"\n\nChristina silently cursed herself. The last thing she wanted to do was get Olivia's hopes up, especially when all she needed to do was politely agree that Danny wasn't interested and move on, but in the heat of the moment, she wasn't sure what else to say.\n\nOlivia looked strangely taken aback and gave Christina a long, searching stare. Before Christina had a chance to wonder what she was looking for, she smiled and shook her head.\n\n\"No, that's okay. We've only got a few weeks of school left, anyways, and it doesn't make much sense to start dating someone new right before graduation,\" she said. \"Besides, everyone knows that high-school relationships almost never last once college starts.\"\n\nFor the first time since they'd met, Christina got the distinct impression that Olivia wasn't being entirely straightforward with her. There was something about her lack of eye-contact and the breezy sing-song of her voice that seemed forced. Christina was left with the distinct impression that Olivia was trying to assuage her guilt over the role she'd played in keeping them apart.\n\nOlivia paused for a long moment, obviously debating something in her mind before looking Christina directly in the eyes and saying, \"Besides, even if he did think I was going out with Brett, it wouldn't change the fact that I'm pretty sure he likes someone else.\"\n\n\"Wait \u2014 What? Who?\" Christina asked, surprised that Olivia would say something that was so obviously untrue. \"He hasn't said anything to me about having a crush on anyone, and he would definitely tell me.\"\n\n\"It's just a feeling I have, I guess...\" Olivia said, suddenly looking very uncomfortable as she fidgeted in her seat. That open, honest smile Christina had grown so fond of had vanished, and a nervous frown had taken up residence in its place. The fact that she was holding something back was clear, but before Christina had a chance to question her further, the bell rang and everyone started getting up to leave.\n\n\"Wait. Don't go yet,\" she said. \"We didn't get any work done on this project. I have track practice after school today, but I'm free tomorrow if you want to come by my place and finish it up.\"\n\n\"Okay, that sounds good,\" Olivia replied, her usual friendly smile returning just as quickly as it had gone.\n\nChristina hesitated a moment before saying, \"Danny and I usually do our school work together. Would it bother you if I invited him to join us? He's a lot better at English than he is at Spanish,\" she added with a sarcastic smile.\n\n\"Sure. If you want to,\" Olivia replied. \"Just don't do it on my account, okay?\" Despite her impassive tone of voice, Christina couldn't ignore the excited twinkle in her eyes at the mention of Danny's name.\n\n\"Okay, sounds good. Want to meet up at the front entrance after school, then?\"\n\n\"Works for me! See you tomorrow!\"\n\n\"See ya!\"\n\nJesus. What the hell have I gotten myself into? Christina asked herself as she packed up her belongings and jostled her way into the crowded flow of students moving through the halls.\n\nShe sat through the rest of her classes in a stupor. No matter how hard she tried to ignore them, her thoughts inevitably circled back around to Olivia Foster. Christina had spent most of her high school career purposefully avoiding the kind of relationship drama that seemed to go along with being an immature teenager, and other than her brief dalliance with Brett Sampson, she'd been fairly successful. Now, against her better judgment, she'd somehow managed to find herself in an improbable love triangle with her cousin and the hottest girl in school.\n\nThe worst part was that she had no idea how to feel about any of it. On one hand, she was overjoyed at having made a new friend, and knowing that Olivia wasn't interested in Brett made that friendship much more appealing. On the other, it bothered her that Olivia obviously still had feelings for Danny. Despite her protestations to the contrary, Christina didn't believe for a second she'd pass up an opportunity to be with Danny.\n\nMostly, though, Christina felt guilty. Guilty for all of the assumptions she'd made about Olivia. Guilty for the way she'd treated her afterward. And most of all, guilty for getting between Danny and a girl who she felt was her superior in every possible regard.\n\nNormally, track practice was an opportunity to clear her head. There was a certain meditative quality to the steady repetition of her footfalls that usually helped clear her mind. But as she ran laps around the football field, her confusion and anxiety only deepened. By the time practice was over, she was half convinced that she'd ruined Danny's first chance at real happiness.\n\nThe only thing she knew for sure was that it was on her to make it right. She'd meant what she said the day before. She would do whatever it took to make Danny happy, and if that meant that the sexual part of their relationship had to end, then at least they'd still have their friendship and more than a few happy memories to go along with it. It might break her heart, but she knew that she had to tell him the truth about Olivia. Trying to interfere any more than she already had would only make things worse in the long run.\n\nDespite everything, Christina did her best to maintain a positive attitude as she walked home. Her plan was to make a quick stop at her own house to drop off her things and take a quick shower before heading over to Danny's to tell him everything she'd heard. The moment she stepped into the foyer, though, the all-too-familiar sounds of sex stopped her in her tracks.\n\n \n\nForget about running laps, she thought. This is the kind of distraction I really need. \n\nFor the first time all afternoon, a happy smile started to form in the corners of her mouth as she moved stealthily down the hall and towards the masculine grunting and moaning that seemed to be coming from the living room. Her father and uncle would still be at work, so she immediately assumed the voice in question had to be Danny's. Based on the wet sucking noises that accompanied him, she guessed that someone was giving him the blowjob of a lifetime.\n\n\"Oh, God... It feels really good, Mom... But is it really okay for us to be doing this? What if Dad finds out? Won't he be mad?\" Danny asked, his voice sounding more clear and distinct as she crept closer to the entryway.\n\nHer first instinct was to jump around the corner and give her unsuspecting victims a scare before joining in on the fun, but there was something about what he'd said and the sincerity with which he'd said it that stopped her cold. Her Uncle wasn't merely aware that Danny had a sexual relationship with his mom. He'd been a driving force in pushing them together in the first place. The idea that her Uncle Tim would be upset by Danny and Mary sharing some afternoon delight just didn't make any sense.\n\n\"Don't worry about your father, baby,\" said a voice that almost certainly belonged to Christina's mother. \"He loves both of us very much, and he knows how badly I've wanted this \u2014 to feel my baby boy's sexy cock in my mouth, and... in other places...\"\n\n\"Oh, Mom \u2014 Yessss!\" Danny moaned as the rhythmic sucking sound resumed.\n\nWith her curiosity at its absolute peak, Christina knelt low to the ground and allowed herself a quick glance around the corner, hoping that they'd be too distracted by each other to notice her presence. What she saw made her pussy throb and her small, pink nipples harden into sensitive little knots.\n\nDiane was on her hands and knees with her face shoved right in Danny's crotch as he knelt before her. His hands rested on her scalp, his fingers digging into her auburn hair as he rocked his hips back and forth. His body was angled slightly in Christina's direction, giving her an erotic view of her mom's naked body. Every time Danny bottomed our in her throat, Diane made a pleasant gurgling sound, and a few more drops of spittle leaked out around her lips, forming several long strands that dripped down to the carpet below. Christina could also see the undersides of her mom's hanging breasts as they bounced and jiggled, her puffy nipples barely grazing the material of the carpet every time his hips slammed back into her face. Being low to the ground, Christina could also see the barest hint of tawny curls poking out from between the cheeks of Diane's ass. The scent of excited femininity seemed to waft off of her in waves, and Christina once again found herself resisting the urge to crawl around the corner and bury her tongue deep in her mom dripping cunt.\n\n\"Oh! You're so good at this, Mom. I can't believe how good it feels... I never knew...\"\n\n\"Mmmmm, I'm glad, baby,\" Diane replied, his dick sliding out from between her lips with a wet pop. \"From now on, you can use Mommy's mouth whenever you want. Nothing would make me happier than being my son's personal cum-slut. Would you like that, baby?\" she asked, her eyes wide and vulnerable with lust.\n\nDanny's only response was to take her face in his hands and frantically smash his lips against her own. Diane gave another weak moan as they made out with each other, filling the room with the wet, sloppy sounds of their tongues and lips.\n\n\"I love you, Mommy,\" he moaned, briefly coming up for air before going back in for more. As they kissed, his hands moved lower, tracing a line down her elegant neck to her hanging breasts. Her moans intensified when he filled each of his palms with a heavy tit and started rubbing and pulling on her puffy nipples.\n\nChristina wasn't surprised at all that her mom and cousin had been fooling around in her absence, but this was a dynamic she hadn't expected. The last time she'd seen them together Danny had been almost painfully shy, and her mom had been forced to take the lead. Obviously, a lot had happened between them since then. She still wasn't sure exactly what was going on, but somehow she sensed that interrupting them would be wrong.\n\nDoing her best to stay quiet, she shoved one hand into her shorts and started gently running circles around her erect clit while the other slid underneath her sports bra to tweak and play with her sensitive nipples.\n\nAs Christina watched with wide-eyed fascination, Diane flopped onto her back, spread her legs, and in a desperate, cat-like mewl, said, \"Oh Gawd, Johnnie... please fuck me! I want you inside of me so bad...\"\n\nSuddenly, Christina understood everything. They were play-acting \u2014 or Danny was, at least. Her mom obviously couldn't wait for her John to come home from school, so in the mean-time, she'd asked Danny to play the part of her far-too innocent son.\n\nShe couldn't see her mom's face, but she could see Danny's. His eyes were desperate and hungry as he stared down at the wet hole between his aunt's legs, but he made no move to do as she'd asked. Instead, he adopted a tortured expression and said, \"I want to, Mom. You're so pretty... but this is so wrong. I can't stop thinking about Dad. What would he think if he knew what we were doing? He'd never forgive me!\"\n\nChristina couldn't help but chuckle at Danny's performance. It was hard to picture her jock brother sounding so naive, but it seemed to work just fine for her mom. Diane let out another desperate groan and wrapped her fist around his wet cock, using her strokes to insistently pull him down to her drooling slot.\n\n\"Don't worry about your father,\" she pleaded, her voice sounding more urgent than ever. \"He knows I need this... He knows he married a filthy, incestuous, whore... And he knows how badly I've wanted this \u2014 how long I've waited to feel my boy's cock all the way up inside of me.\"\n\n\"He... he does?\" Danny asked, his eyes wide with surprise.\n\n\"He's the same way, honey. And so is your little sister. In fact, he's probably upstairs with his cock buried half-way up her tight little asshole right this minute.\"\n\nA stifled moan escaped from Christina's lips as Diane brought her into their dirty little role-play. She couldn't help but form a mental image of her dad kneeling behind her, plugging in and out of her asshole while her mom and brother fucked each other senseless downstairs. She couldn't help but notice the way Danny's cock lurched in her mom's hand as he imagined the very same thing.\n\n\"Dad... and Christina...?\" he asked. His acting was better than Christina would have guessed. If she didn't know any better, she might have thought he was legitimately surprised.\n\nDiane gave an eager nod. \"So you don't need to worry,\" she said. \"You can do whatever you want with me, just please don't make me wait!\"\n\nWithout another word, Danny placed his palm on her chest and gently pushed her back down to the carpet. He traced his fingertips down between her breasts and over her belly, grinning as she jerked and trembled beneath his gentle touch. When he finally reached the apex of her thighs, he pushed his middle and index finger into her cunt. Diane let out a desperate sob, her back arching as she lifted her hips to more quickly fill the aching emptiness within her.\n\n\"You're so wet, Mom!\" Danny exclaimed in a tone of pure, child-like innocence.\n\nDiane's body jerked and heaved beneath him. \"It's all for you, baby. All for my sweet little boy,\" she moaned, her voice coming out in an impassioned warble. \"Please fuck me. All I can th-think about is you f-fucking me... and c-c-cumming in me...\"\n\nBy that point, Diane's whole body was writhing and bucking on the carpet, incapable of feeling anything other than Danny's fingers eagerly molesting her swollen cunt. As Christina watched in stunned silence, she found herself holding back a powerful orgasm of her own. Diane had always been confident and assertive, especially in the bedroom, so it was strangely exciting to see her so completely consumed by her incestuous fantasies.\n\nPulling his hand away from her sodden crotch, Danny quickly slathered his cock with her juices and gave himself a few strokes for good measure before leaning forward and nestling himself right at the cusp of her entrance. Keeping his eyes locked on Diane's, he drove his hips forward. Her pussy made a wet, squelching sound as he slid deeper and deeper into her.\n\nFrom there, all bets were off. Danny started driving his cock in and out of her with long, powerful thrusts. Before long the room was filled with the slippery-wet sounds of her greasy hole repeatedly making way for his thick cock.\n\n\"Uhhhhh\u2014Fuck! Uhhhh\u2014Fuck! Uhhhh\u2014Fuck!\" Diane moaned as her eyes rolled back in her head and her fingers grasped desperately at the carpet. This went on for a minute or two, Danny grunting and thrusting while Diane mindlessly crooned her repetitive mantra.\n\nIt didn't take long for both of them to reach their peak. Diane came first, howling and moaning as her legs kicked wildly beneath her. Danny kept fucking her, forcing his dick in and out of her pulsing slit even as she bucked beneath him, trying to free herself from the blistering pleasure that seemed to pour from every nerve ending in her body.\n\nA second later, Danny made a noise that Christina recognized all too well. Moving swiftly, he withdrew from her hole and crouched over. Wrapping his fist around his cock, he started drenching her breasts and belly with shot after shot of his potent spunk. Diane stared up at him with unseeing eyes, her whole body trembling in response to each splash of warm cum against her skin. By the time he was finished, streaks of slimy fluid pooled between her tits and in her belly-button, and a few strands stuck to her pubic hair.\n\nWhen all was said and done, Danny collapsed backward, propping himself up against the base of the sofa, staring at his aunt's used up body, her belly and thighs jerking and trembling in the aftershocks of her orgasm.\n\n\"Did I do it okay?\" he asked.\n\n\"Okay doesn't even begin to describe it,\" Diane replied through panting breaths as she stared up at the ceiling. \"You were fucking incredible, Danny...\" When she managed to sit up and look at him, she added, \"Have you ever considered a career in acting?\"\n\nHe just grinned and shook his head. \"My impersonation of John isn't much to write home about, but I'm really glad you enjoyed it.\"\n\n\"You were perfect, honey, and I really appreciate you being willing to play along. I know it was more for me than for you.\"\n\n\"It was a lot of fun for me, too, you know,\" he replied glancing meaningfully down at the mess he'd made all over her. \"I don't know if I'll ever get over what an ego trip it is knowing that my sexy aunt wants to do stuff like that with me.\"\n\n\"\u2014And I don't know if I'll ever get over the ego trip of having a handsome, teenage, stud who's willing to fuck an old lady like me.\"\n\n\"Now you're just fishing for compliments.\"\n\n\"Hm. Maybe,\" Diane replied with a loving smile. \"Now get over here and kiss me.\"\n\nChristina had planned to reveal herself once the show had ended, but as Diane and Danny met in the middle of the carpet and started pressing soft kisses on each other's lips, she couldn't help but stop and stare for a bit longer. Unlike moments earlier, their show of affection wasn't part of a game. The quiet, appreciative noises Diane made were for Danny \u2014 not some imagined version of her son. Most girls would have felt utterly betrayed watching their mother share an intimate moment with their boyfriend, but Christina thought it was sweet. There was something strangely adorable about their chemistry that made her feel all warm and happy inside, even if she wasn't directly involved. Somewhere, deep in the back of her mind, she wondered whether she'd feel the same way if it was Olivia, and not her mother, who was making out with Danny in the middle of the living room floor.\n\nShe'd gotten a voyeuristic thrill from watching Danny and Diane fuck, but she suddenly felt like an intruder as she watched them share this private moment together. With a reluctant sigh, she finally acknowledged the fact that it was long past time for her to reveal herself.\n\n\"Well, what have we here?\" she asked, interrupting their embrace as she stepped around the corner and into the living room. \"You two really couldn't have waited until I got home?\"\n\nOnce the shock of her entrance wore off, Diane gave a casual shrug. \"I was home alone and horny, and I figured Danny was, too. Besides, does it really surprise you that your dear old mom likes to be treated like a slutty, incestuous, tramp every now and then?\"\n\n\"Every now and then?\" Christina asked, her eyes narrowing as she flashed a sarcastic grin.\n\n\"Hey! Be nice,\" Diane pouted.\n\n\"It's nothing to be ashamed of,\" Christina replied. \"After all, I had to get it from somewhere.\" As if to emphasize her point, she casually pulled her top over her head and tossed it aside. Her bra, shorts, and panties soon followed, and seconds later she was every bit as naked as they were. Her arousal was plainly evident to both her mom and her cousin as she took a seat on the couch, making no effort to hide the fact that her pussy was swollen and very wet.\n\n\"How much of that did you see?\" Danny asked.\n\n\"All the good parts,\" Christina replied with an impish smile. \"All I can say is that I hope I have a son like you one day\" She'd meant it as a joke, but a naughty shiver went down her spine at the thought of having a son of her own one day and doing the same things with him that her parents had done with her.\n\n\"I'm sure he'd make me a very happy grandma,\" Diane said, unable to suppress her glee at the stricken expressions on Christina and Danny's faces. \"And with that, I think I'll make my exit. I need to get cleaned up and start cooking dinner. Will you be joining us, Danny?\"",
        "\"I can't. Mom wants me home tonight.\"\n\n\"I imagine she does,\" Diane replied, her eyes making one more slow pass over his youthful body, lingering for a moment on his cock, which was already on its way to full recovery.\n\nDanny merely blushed, unsure how to respond.\n\nTurning to Christina, she said, \"Dinner will be ready around the normal time.\"\n\n\"Okay, sounds good.\"\n\n\"You two play nice,\" Diane replied. \"Don't do anything I wouldn't do.\"\n\n\"Not much to worry about on that score,\" Christina replied as she reached forward and drew a thick wad of cum off Diane's breast and slid it into her own mouth. \"Love you, Mom,\" she added with a wry smile.\n\n\"I love you both,\" Diane replied, blowing a kiss to Danny as well as her daughter before turning and sashaying away, making sure that the two teens got a good view of her swaying ass before she turned the corner and made her way upstairs.\n\nChristina waited until her mom was out of sight before turning her attention back to Danny. He was already blushing.\n\n\"So what was that all about?\" she asked.\n\nDanny hesitated a beat, a slight grin playing across his features, before finally saying, \"For me or for her?\" Before Christina had a chance to respond, he answered his own question. \"When I got home, she called and asked if I would play a game with her. She wanted me to do something she said she'd been fantasizing about.\"\n\n\"Have you pretend to be my brother?\"\n\n\"Basically, yeah... I wasn't sure I could do it at first, but she said I should just act the same way I did the first time with my mom. It was weird and kinda awkward at first, but once I saw how turned on she was, it got easier.\"\n\n\"You're sweet, Danny. Waiting for John to get back from school must be driving her crazy. I'm sure she appreciated you helping her get some relief.\"\n\nWith a shy smile, he averted his gaze and said, \"It's not like I could ever say no to her, especially after everything she's done for all of us lately.\"\n\n\"Well, she seemed to enjoy it.\"\n\n\"I enjoyed it, too. It was really hot seeing her that turned on and knowing it was because of me, even if she was imagining someone else.\"\n\n\"It was really hot to watch, too. Though I'm not sure I'd ever want to pretend that you were anyone but you.\"\n\n\"Me either for you,\" was his quick reply. \"It's a lot of fun fooling around with your mom. It's really hot knowing I can do these things with her that neither of us should be doing, but I wouldn't want to imagine you as some other woman, even if it was all make-believe. You're too special for that.\"\n\nChristina's heart fluttered as Danny smiled in that way of his that made her feel like she was the only person in the world who really and truly mattered. In that moment, she wanted him more than she'd ever wanted anything in her life.\n\n\"Special how?\" she asked, her cheeks and upper-chest flushing a deep shade of pink as she spread her knees apart even further and leaned back against the couch cushion, putting her body on full display. She knew she was fishing for compliments, much as her mom had, but she couldn't stop herself from wanting to bask in the warm glow of Danny's love.\n\n\"Well, first of all, you're the most beautiful woman I've ever seen,\" he replied without even the slightest hint of hesitation. \"Your eyes are the most amazing shade of green, and that I could spend literally all day getting lost in them. There's also your smile and the way your freckles fade when you blush. Most of all, it's that feeling I get whenever you're around \u2014 like I'm the most incredibly lucky that's ever lived \u2014 almost too lucky for any of it to be real.\"\n\nChristina was melting like butter under his intense gaze. She was so paralyzed by happiness that she jerked in surprise when his palm brush against her tummy. A second later, she was falling into his embrace, her lips making soft contact with his own.\n\n\"Oh, Danny...\" she moaned, her head swimming with lust for the only person in the world who could make her feel this way.\n\nIt felt like she couldn't get enough air in her lungs as he planted kisses down her chin before focusing on her exposed neck. His lips and tongue glided over her sensitive flesh, sending warm, fuzzy currents throughout her body. What felt like a river of moisture leaked from her already swollen pussy, wetting her thighs and making a dark spot on the couch cushion. Without thinking, her hand moved between her legs to relieve at least a little bit of her desperate need for stimulation \u2014 or it would have if Danny hadn't stopped her. With a gentle yet firm grasp, he held her wrist in place.\n\n\"Nu-uh. That's my job,\" he said, looking devilishly handsome as he smiled up at her.\n\nChristina could only bite her lip and nod. She knew the longer she waited, the better it would feel when Danny finally put his magical tongue to work on the slick little groove between her legs.\n\nApparently he knew it, too.\n\n\"Your skin smells so fucking good,\" he moaned as his tongue carved a slow path between her pert breasts. Christina's blush intensified as she realized that she hadn't showered after track practice, something that didn't seem to bother Danny in the slightest.\n\nHe took his time with her, lapping the salty sweat off of her breasts before finally latching onto one of her nipples, suckling the little pink morsel into his mouth and teasing it with the tip of his tongue. Christina gasped as she involuntarily arched her back, mashing her breast against his face. Just when the sensation was getting to be too much to bear, he switched, giving equal attention to her other sensitive little nub.\n\nAll the while, Christina kept her hands at her side, letting her cousin worship her body with his mouth and tongue. When he was finished with her breasts, he moved lower yet again. This time, she could sense some urgency in his kisses, and a fresh gush of wetness surged between her legs as she realized just how much he enjoyed giving her pleasure. A few minutes ago, she'd been excited to have a threesome with him and her mom. Now she wanted nothing more than to have Danny all to herself.\n\nHis tongue snaked down her belly, making her giggle and squirm as it tickled her belly button. Placing his palms on her thighs, he spread her legs wider as he settled between them, grinning up at her through the orange patch of fur that sat atop her mound.\n\n\"So beautiful...\" he murmured as his eyes traveled down her slender torso to her drooling slit.\n\nSomething about the sight of her excited cunt seemed to turn a switch in Danny's mind. All of his patience seemed to vanish in an instant, and the next thing Christina knew, his mouth was covering her sex as his tongue ran excited circles around her opening.\n\n\"Oh Fuck!\" Christina cried as she placed a hand on the back of his head and bucked her hips upward, mashing her vulva against his searching lips.\n\nHis mouth was in constant motion, licking and sucking all over her swollen flesh as she egged him on with a constant stream of moans and excited little whimpers. She could feel his loving affection for her with each swipe of his tongue through her wet folds, and his own moans of pleasure told her that there was nowhere he'd rather be than between her legs, lovingly devouring her sweet little pussy.\n\nA thick sheen of moisture coated his chin as his tongue slid deep within her, writhing like a wet snake against her pulsing, pink interior, his teeth scraping gently against her erect clit.\n\nChristina could feel the fire within her build and build until her whole body was consumed in a raging inferno of lust. The pressure finally reached its peak when she felt Danny's finger press firmly against her clenching butthole.\n\n\"Oh God! Oh fuck yes, Danny!\" She shouted as his index finger slid into her to the first knuckle, then a second later, all the way into her tight, clenching anus.\n\nChristina exploded, her whole body gripped by an overwhelming current of electric pleasure that shot through every nerve in her body. Her face seized up, forming a rictus of joyful release as a low, keening wail emanated from her half-open lips.\n\nDanny held on for dear life, doing his best to keep vacuuming his lips on her clit as she writhed and squirmed beneath him. He left his finger lodged firmly in her ass, tickling the deepest part of her rectum and prolonging her orgasm for as long as he possibly could.\n\nIt wasn't until Christina gently pushed him away that he finally stopped his loving ministrations and let his finger slide free of her ass. Leaning back on his elbows, he admired his handiwork.\n\nChristina smiled down at him through heavy-lidded eyes. Her freckled skin was flushed a bright shade of pink and covered in a thin sheen of sweat that had nothing to do with her earlier workout. The most exciting thing of all, though, was the sight of her swollen cunt.\n\nHer lips were red and engorged and hung open slightly, giving him a highly erotic view of the pink treasure hidden just inside. A clear mixture of her lubrication and his own saliva pooled at the base of her entrance, coating her thighs and making her matted pubic hair stick out at odd angles. A bit lower down, her cute little anus winked at him as it adjusted to the recent intrusion of his finger into its dark depths.\n\n\"Mmm... you're getting so fucking good at that, Danny...\" Christina mumbled.\n\n\"I aim to please,\" he replied with a sheepish grin.\n\nThe orgasm had left her feeling completely drained, but even so, she couldn't help but feel a tingle of excitement when she saw her cousin's prick standing rigid between his legs. Even after giving her mom a thorough cum bath, he was still somehow ready for more. Knowing that giving her pleasure got him so turned on made her feel even more warm and happy than she already did.\n\n\"Can I return the favor?\" she asked, licking her lips suggestively.\n\n\"I'd love that.\"\n\n\"Good because I'd love it too.\" They both sat there for a second, waiting for the other to move before Christina finally giggled and said, \"get up here, and bring that big, beautiful cock with you.\"\n\nHer words jolted Danny into action, and a moment later he was on the couch with her, straddling her lap, rubbing his cock against her belly and kissing her passionately. Christina moaned as Danny's tongue slipped into her mouth, still coated in her own juices.\n\nAs much as she enjoyed making out with her cousin, though, the warm cock-flesh pressed firmly against her skin provided a constant, needy reminder of what she was really here to do. Reaching between them, she wrapped her fist around him, smiling as she felt his whole body stiffen in response. Pulling away from his insistent kisses, she studied his excited expression as she started vigorously pulling on his prick. His intense fuck-session with her mom hadn't seemed to dull his arousal in the slightest, and Christina felt another flutter of excitement at the knowledge that being with her really did turn him on. For the time being, at least, all of her anxieties seemed to wash away, leaving her fully convinced that his love for her was absolute and all-consuming.\n\n\"Get up here,\" she whispered before planting another quick kiss on his lips.\n\nFollowing her guidance, Danny rose up to his knees until his erection was level with her chest. Her perky mounds were nowhere near big enough to give him a proper tit fuck, but Danny seemed to enjoy rubbing himself all over her breasts just the same. Goosebumps rose across her delicate skin as Danny rubbed the underside of his cock into her cleavage, leaving wet trails of precum that lubricated his passage.\n\nHe wasn't in her pussy, ass, or mouth, but he was fucking her all the same. His moans increased in intensity when she placed her hand over the top of his prick, providing a warm tunnel for his thrusting. Eventually, she guided him left, then right, trembling and purring as his hot flesh dragged along each of her throbbing nipples in turn.\n\nAs she stared down at his swollen, purple cockhead, leaking his musky fluids all over her pale skin, Christina's mouth began to water. She needed to taste him \u2014 to feel that perfect cock filling her mouth and rubbing against her tongue.\n\nDanny must have had the same thought because a second later he rose up even higher and started insistently pressing himself against her lips.\n\n\"Oh, god, Christina... I love you so much...\" he moaned as her lips parted and accepted his masculine offering.\n\nAs Christina slobbered all over Danny's prick, she thought back to the scene she'd witnessed just a short while ago. What they were doing now couldn't have been more different from the throat-fucking he'd given her mom. Rather than taking his pleasure from her body, Christina was giving herself to him freely \u2014 and more importantly \u2014 lovingly.\n\nShe bobbed her head slowly back and forth, savoring the texture of his cock against her tongue and listening to his grunts and groans. Pulling him free from her mouth, she planted a chaste kiss on his pee-slit before dragging his length through the valley made by her pursed lips. When she reached his balls, she sucked one, then the other into her mouth, swirling her tongue around his furry globes and marveling at the way they seemed to shift and roll within his wrinkled scrotum.\n\nOut of the corner of her eye, she noticed her mom standing in the entrance to the kitchen, naked, but looking more refreshed than she had a few minutes prior. Christina smiled and winked in her direction before burying her face back in Danny's throbbing cock-flesh. She half-expected her mom to stay there and watch, much like she had when their positions had been reversed, but Diane merely returned her wink and made her way into the kitchen.\n\n\"Mmm fuck yeah,\" Danny moaned, drawing her attention back to the task at hand. Keeping one hand braced against the wall, he used his other to stroke Christina's hair and caress her cheek.\n\nHer heart thumped wildly in her chest at his show of affection, and she let out a contented purr. Even when he was the recipient of her advances, he still somehow made her feel like she was about to melt into a puddle of pure joy. There was literally nothing she wouldn't do to make him feel the same way.\n\nAs she licked and sucked his balls, she slowly stroked his shaft, making sure to put extra pressure on the sensitive underside of his prick with each upward stroke. Eventually, she guided him back between her lips and started sucking him in earnest, moving her head back and forth while keeping a tight seal with her lips.\n\nIt was almost disappointing when his balls started to contract and his panting moans grew more desperate. Having orgasmed so recently, she'd assumed that it would be a while before he was ready to blow, and she couldn't help but feel a spark of pride at the effect her technique was having on him. After all, her mom had sucked him for much longer without managing to achieve the same result.\n\n\"Nngh... It's too good, Christina. I can't hold it!\"\n\n\"Don't try,\" she said as she came up for air, a long strand of saliva still connecting her lips to the top of his straining erection. \"When you're ready just let it all go.\"\n\nWith that, she plunged forward once again, sucking his dick with ever-increasing speed and intensity. A few seconds later, Danny let out a long, protracted sigh, and she felt the first spurt of his cum splash against her tongue. She held him there, half in and half out of her mouth as he bathed the inside of her mouth with jet after jet of hot creamy sperm.\n\nShe loved the taste of him and wished it could have gone on forever, but eventually, the steady jerk and release of his cock came to a stop and Danny's softening prick slipped free from her sucking lips.\n\nSmiling up at him, she made sure that he got a good look at her as she swallowed his spend in one big gulp. Opening her mouth wide, she waggled her tongue back and forth, making a show of the fact that she'd consumed all of it.\n\n\"Good?\" She asked with a twinkling smile on her face.\n\n\"The best,\" he replied in that simple straightforward way that made Christina feel certain it was true. \"Sorry I couldn't hold out longer. I have a hard time controlling myself when I'm with you.\"\n\nChristina blushed. \"Don't apologize. I love that I make you feel that way \u2014 that I can do that for you.\"\n\n\"That and so much more,\" he replied, leaning down to plant a loving kiss on her lips. Instead of joining her on the couch, though, he offered her his hand and said, \"Want to go upstairs and get cleaned up?\"\n\n\"Do I ever! I don't even want to think about how bad I must smell...\"\n\nDanny gave a shy smile. \"I like the way you smell.\"\n\n\"Aw, how sweet,\" she replied. \"I'm guessing everyone else won't be quite so appreciative, though, so we better jump in the shower.\" She paused a beat before adding, \"Also, some stuff happened at school today that I want to talk to you about... in private.\"\n\nDanny's eyes darted in the direction of Diane, who was busily working in the kitchen. \"Okay, let's go, then,\" he said, showing a mixture of curiosity and concern about Christina's sudden shift in tone.\n\nIt wasn't until they were in the tub that Christina realized she'd never showered with another person before. It was a bit awkward at first, but she quickly learned the benefits of having another pair of hands rubbing soap and shampoo on her naked body. By the time Danny was done with her, she felt more squeaky clean than she had in ages. And, of course, she was more than willing to return the favor. Although they didn't take things past touching, there was something undeniably sensual about feeling Danny's soapy hands gliding over her excited flesh while she explored the contours of his own body.\n\nShe felt so safe and warm in the shower with him that she could hardly bring herself to say what was on her mind. It wasn't until they were dried off and back in her bedroom that she finally mustered up the courage to relate the morning's events to him.\n\nOnce she started talking, she kept going until the story was finished. Danny listened patiently with the same neutral expression that he always carried when Olivia came up in conversation. She knew that he would feel one way or another about what she was saying, and it worried her that was obviously doing his best to conceal his true emotions.\n\nWhen she finally finished her story, there was a long moment of silence before Danny grinned and said, \"See. I told you there were vibes.\"\n\n\"Is that really all you have to say?\"\n\nDanny's grin quickly faded. \"What else is there to say about it? I feel bad that we assumed some stuff about her that wasn't true. I guess I could see how it could be awkward for your friendship if she still had feelings for me, but she said she doesn't anymore.\"\n\n\"And you actually believe her?\" Christina asked, trying to maintain a neutral tone despite her growing incredulity.\n\n\"Don't you?\" he asked, scrunching his eyebrows in confusion.\n\n\"Not at all. I think she's one-hundred-percent still into you.\"\n\nDanny rolled his eyes and let out an exasperated sigh.\n\n\"Don't do that, Danny! I'm being serious!\" Christina exclaimed, her voice catching in her throat as her emotions threatened to spill out into the open.\n\n\"Fine. Sorry,\" he said. \"But why would she lie about something like that?\"\n\n\"I don't know why,\" Christina shot back. \"But I could tell she wasn't being totally honest. There was something she wanted to say but couldn't... or wouldn't. I'm not sure which.\"\n\n\"Are you sure that you aren't just looking for conspiracies again?\" Danny asked. \"I mean, no offense, but you were wrong about her once. How can you be sure you're not wrong this time, too?\"\n\n\"Because I didn't know her then, and now I do. Come on, Danny. You saw her in class today, too. I bet she was stealing glances at you the whole time, wasn't she?\"\n\nDanny hesitated, briefly replaying the events of that day's Spanish class in his mind. \"I don't know.. Maybe?\" he finally replied. \"I've been trying not to think about it because there's no point. You know I had a thing for her, but I don't anymore, and it sounds to me like she's moved on to. So... why won't you?\"",
        "\"Because this whole thing is my fault!\" Christina exclaimed. \"If I hadn't been such a nosy, cynical bitch, then maybe you'd have a girlfriend that you could actually tell people about and be proud of -- someone you could kiss in the hallways and hold hands with without looking over your shoulder to make sure no one is watching!\"\n\n\"I've seen the way you light up whenever I mention her name,\" she continued, choking back unexpected tears. \"You try to hide it because you're sweet, and you want to spare my feelings, but I know you \u2014 probably better than anyone else \u2014 and I know you still have feelings for her. She would make you so happy, too. There are so many things she could do for you that I'll never be able to, and I feel so awful and selfish for wanting to keep you all to myself.\"\n\n\"I'm just so fucking afraid of losing what we have together. Whenever you're not around, I feel like something's missing in my life \u2014 like I'm not whole. You make me happier than I've ever been or could ever imagine being, and it kills me to think that any part of that happiness comes at the expense of your own... I just... I just don't know what to do...\"\n\nBefore she could say anymore, her sobs completely overwhelmed her, leaving her unable to speak. Danny stared dumbly back at her for a moment, completely shocked by this emotional outburst that, to him, seemed to have come out of nowhere. When the surprise wore off, though, he pulled her into a silent, loving embrace. He held her there for several long minutes, letting the heat of the moment pass as he gently caressed her skin and ran his fingers through her hair.\n\n\"I'm sorry, Christina,\" he finally said. \"I didn't know... I mean I did know how you felt about me, but I didn't realize this was tearing you up inside so badly. I'm sorry if I said or did anything that made you think, even for a second, that I regret any part of the life we're making together. Sure, maybe if we hadn't jumped to conclusions about Olivia things might have turned out differently, but I can't imagine any outcome that would make me happier than the way things are right now. You're not a limitation on my life, Christina. You're the best thing that's ever happened to it.\"\n\nChristina pulled back and looked him in the eyes. \"So you really wouldn't want to be with her if you had the opportunity?\" she sniffed, her voice still shaky and weak.\n\nHe thought about it for a second, then shrugged. \"There are lots of things I'd want to do if I 'had the opportunity'\" he said, using finger quotes for emphasis. \"In fact, I've done quite a few of them this week,\" he added with the barest hint of a playful smile. \"But, no. I wouldn't want to be with Olivia \u2014 not if it meant giving up any part of the life we have together. Honestly, the fact that someone like Olivia has finally noticed me is a bit of an ego boost. But that's all it is.\" He paused for a second before saying, \"Tell the truth, if our positions were reversed, and I came to you saying that Olivia Foster had a crush on you, can you honestly say that you wouldn't be at least a little happy about it? Even if you had no intention of ever doing anything about it?\"\n\nFor the first time since the start of their conversation, a smile began to form on Christina's lips. \"It would be hard not to,\" she admitted. \"Girls like that don't come along every day.\"\n\n\"Girls like you don't come along ever \u2014 at least not for guys like me. That's why I'm never letting you go, no matter what happens.\"\n\nIt was a cheesy line, but Christina could tell that he really meant it. Leaning forward, she pressed her lips against his, kissing him soft and slow as she reveled in the closeness of his body.\n\n\"I love you, Danny,\" she whispered.\n\n\"I love you too, Christina. More than you'll ever know.\"\n\nThey stayed that way for a long time, holding each other in companionable silence. Christina could tell that there was still something Danny wanted to say. She could practically hear the gears turning in his mind, but rather than ask him what he was thinking, she patiently waited for him to figure out exactly what it was he needed to express.\n\n\"Can I ask you something?\"\n\nChristina nodded. \"Anything.\"\n\nThere was another long, thoughtful pause before he finally spoke. \"This whole thing... You worrying that I'll be missing out on important life experiences by being with you... I don't know exactly how to ask this, but are you sure it's really me that you're worried about?\"\n\n\"What do you mean?\" Christina asked, her eyes narrowing in confusion.\n\n\"Well, it's just that I've never really thought of our relationship in that way. When I look back on the past four years of high school, I spent most of that time either in my basement playing video games or watching anime and sci-fi shows up here with you. I've never regretted it. I'll admit that there were times when I desperately wanted a girlfriend, but now I've got something so much better. It's a little nerve-wracking having to be so secretive all the time, especially when it comes to the things we've done with our parents, but I don't feel any more or less happy because of the fact that what we share has to stay just between us. The way I see it, our relationship has always been that way, whether it had to be or not.\"\n\n\"I still don't see your point,\" Christina said.\n\n\"I guess what I'm really asking is whether it isn't you who wants something more. Would you be happier with someone who you could take out on dates or go to school dances with? \u2014 someone you could marry and have kids with someday?\"\n\nChristina's first reaction was to tell Danny that he was wrong \u2014 that, like him, she was perfectly content spending her days with him and him alone. But then she remembered walking into school with him that morning. She'd wanted to hold his hand and kiss him full on the lips so badly. She wanted people to know that she was with the best guy in school.\n\n\"I...\" she hesitated, realizing yet again that Danny knew her even better than she knew herself. \"Maybe I do, but not with someone else. Never with anyone else but you. Sometimes it just seems so unfair that we have to give up so many of the things that everyone else gets to enjoy. I don't want to get married or have kids any time soon, but it is kind of depressing to think that we'll never be able to have those things, even if we decide we want to someday.\"\n\n\"Who says we can't?\" Danny asked. Christina expected the question to be followed by another of his sarcastic smiles, but he looked deadly serious.\n\n\"Um... society? The law?\"\n\n\"We're going to college soon, and we have different last names. There's no reason why anyone there would ever guess that we were related. As for the law, there are plenty of states where marriage between first cousins is perfectly legal. I wouldn't be crazy about moving so far away from home, but we could do it if that's what we decided we wanted. Having kids might be a little bit trickier, but I read online that there are genetic tests we could take to find out if it would be safe for us to conceive, and if all else fails, we could always adopt.\"\n\n\"You... you looked all this up?\" Christina asked, her eyes wide with surprise.\n\nDanny nodded. \"The same night we lost our virginity together. I always knew we would be close friends for our whole lives, but that night was when I knew for sure that whatever future I built for myself would have to have you in it. I didn't say anything because I wasn't sure if you wanted to think that far ahead, and I didn't want to rush anything. I know I can get a little carried away with myself, sometimes.\" He paused for a moment, wondering if he'd said too much, but the warmth of Christina's smile encouraged him. \"Anyways... Yesterday, when you said that we might have to end the sexual part of our relationship one day... I kind of thought that was your way of gently closing the door on any of that \u2014 or at least saying it was something you weren't ready to think about yet.\"\n\nChristina's heart thumped wildly in her chest, and the emotional whiplash made her feel faint. Hearing Danny say that he would be happy being with her forever was one thing, but knowing that he'd actually been planning for a future with her made it all so wonderfully real.\n\n\"God, I'm such an idiot,\" she muttered, even as an irrepressible smile spread across her face. \"But you are too.\"\n\n\"Guilty as charged,\" he replied, finally breaking out into that big goofy grin that Christina loved so much.\n\n\"And you'd really do all of that... for me?\"\n\n\"Well \u2014 Not anytime soon, but someday, when we're both ready I would.\"\n\nChristina thought her heart might burst from happiness. For the first time since this had all started, she finally allowed herself to imagine a lifetime spent with the man she loved more than anyone in the whole world. It wouldn't be easy, but somehow, she knew her dad's advice from the night before was true, love is never easy, even in the best of circumstances.\n\nKnowing that there were no words to accurately express just how happy she was in that particular moment, Christina lunged forward, catching Danny by surprise as she mashed her lips against his. Her kiss was hungry and possessive, leaving him no option other than to kiss her back with equal fierceness. Their tongues dueled several long minutes \u2014 invading each other's mouths as their teeth playfully nipped at each other's lips. Slowly but surely, Christina's advances won out, forcing Danny to give ground until he was flat on his back. Christina straddled him, holding him in place with her athletic thighs and smiling triumphantly down at him.\n\n\"Got you,\" she said.\n\n\"That's what you think.\"\n\nShe let out a playful shriek as Danny lifted his legs and hooked them over her ankles, trapping her feet beneath him. At the same time, he grabbed her waist and skillfully flipping both of them over until their positions were reversed.\n\nChristina bit her lip and gave her cousin a sexy grin as she felt his half-hard cock begin to poke against her flat tummy. Spreading her legs wider, she scooted higher up on the bed until his rapidly lengthening prick lay against the wet little crease between her legs. They both let out a contented sigh as he rocked his hips forward, her bristly pubic hair ticking the sensitive underside of his shaft as he dragged himself through her slick folds, putting delicious pressure on her clit.\n\n\"I love this, Danny,\" Christina moaned, all hints of playfulness long gone from her voice. \"Promise me we'll never stop \u2014 not ever.\"\n\n\"I promise. No matter what...\"\n\nLeaning forward, he kissed her, sealing their vow. Their tongues swirled and danced together as they moaned appreciatively into each other's mouths, losing themselves in a bond that was both emotional and physical. Seemingly moving with a mind of its own, Danny's cock found its way to the moist entrance of Christina's sex. A subline feeling of relaxation overcame her as she shifted her hips and accepted him inside.\n\n\"Oh, Danny!\" she moaned, breaking their kiss as she felt her insides give way, making space for her cousin's big, fat cock. Another desperate squeal escaped from between her clenched teeth as he fully embedded himself within her, his pubic bone pressing firmly against the swollen, sensitive little clit.\n\nShe was completely lost in the pleasure of the moment, unable to do anything but lay there, panting and groaning as her cousin filled her up with unimaginable joy. All the while, Danny kept kissing her, first on her open mouth, then moving lower, to her chin, then her neck. He teased her mercilessly, gently licking and nipping at her burning flesh while keeping his cock buried firmly within her. For the time being, at least, he was content to relax and enjoy the feeling of her inner walls massaging his prick. Every slick bump and ridge inside of her seemed to wordlessly beg him to take her \u2014 to gorge himself on the pleasures of her tight, young body.\n\nWhen he couldn't take anymore, he lifted himself up on his elbows and looked down at her. Her cheeks were flushed red; her mouth hung slack, and her eyelids drooped, obviously insensible to anything other than the intense pleasure coursing through her body.\n\n\"I'm going to fuck you now,\" he said.\n\nAll Christina could manage was a lazy nod and a soft, sensual groan.\n\nTrue to his word, Danny lifted his hips, leaving just the bulbous head of his prick inside before sliding slowly back into her, making sure his loving cousin felt every inch of him as he filled her yet again. He repeated the process over and over, dragging his cock in and out of her dripping pussy with agonizingly deliberate strokes.\n\nHaving come twice already that afternoon, he was more than content to take his time and enjoy all the myriad pleasures his loving cousin's body could provide. Fucking his aunt was exciting and fun, and there was something sweet and lovingly intimate about being with his mom, but neither of them could compare to Christina. Everything about her \u2014 the way she smelled, the taste of her skin, and the feeling of her pussy wrapped around his straining cock \u2014 all of it just felt like home. She was exactly where he wanted to be.\n\nChristina, of course, felt the exact same way. Lying supine beneath him, she made sexy gurgling noises every time he slid deep within her. The fine hairs on his chest tickled her swollen nipples, and the way his cock-head massaged her insides felt better than anything she could possibly imagine. She clutched at him, her fingers digging into his sides and holding him close as her smoldering passion began to build toward a familiar precipice.\n\nToo far gone for words, she wrapped her legs around him, resting the bottoms of her feet on his ass and gently, yet insistently, urging him to fuck her faster. Danny, ever obliging, eagerly complied.\n\n\"Mmm... Yesss... Thaaaatsssiiiiiit...\" she moaned as he thrust into her harder and faster. Every time he hit bottom, he pushed a little farther forward, grinding his pubic bone against her clit and making her groan.\n\nDanny could feel his own release building right alongside Christina's. Resting his elbows on either side of her head, he leaned back down and pressed his lips to hers once again. Christina let out another passionate moan as her tongue came out to meet his. Her body bucked beneath him, her breasts mashing against his chest as he pounded into her with increasing depth and speed.\n\nIt was all so unbelievably perfect. Every motion of her body was met with an equal and immediate reaction from Danny, almost as if their bodies were perfectly synchronized. Christina was yet again reminded of how completely whole she felt whenever the two of them made love. She could feel his affection pouring into her with everything he did, and she was sure that he felt the same coming from her.\n\nWithout a word spoken between them, they both knew that they were quickly reaching the point of no return. He could feel Christina's copious moisture flowing out around his cock, flecks of it splattering against his belly and thighs every time he landed heavily within her. Likewise, Christina could feel Danny's cock starting to swell as his thrusts became more shaky and erratic.\n\n\"Nnngh! Love... You...\" Danny groaned.\n\n\"Love... you... too...\" Christina replied.\n\nNeither of them was sure who started cumming first, but seemingly all at once, the two of them were engulfed in a wave of sweltering, all-consuming bliss. Danny held himself deep inside of her womb, emptying his balls inside of her as a long, guttural groan seemed to come from somewhere deep within him. At the same time, Christina's pussy clamped down on his spurting cock, holding him deep within her and milking every last drop of his creamy treasure. She could feel his warmth filling up the empty spaces within her, suffusing her whole body with electric energy that seemed to have no outlet.\n\nThey rode the waves of pleasure for as long as they could before their joyous union finally came to an end when neither of them had anything left to give. Danny lay on top of her for a long time, feeling her heart beating rapidly against his own.\n\n\"That was perfect,\" Christina finally said. \"Exactly what I needed.\"\n\n\"It's always perfect with you,\" Danny replied as he propped himself up on his elbows and smiled lovingly down at her.\n\nEven after sharing such an intense release, the way Danny looked at her never failed to make her heart flutter and her breath catch in her throat. She wished he could stay with her all night, cuddling and making love with her until they were both completely exhausted, but it was still a school night.\n\n\"You have to go, don't you?\"\n\nHe nodded. \"My mom will be pissed if I'm late for dinner.\"\n\nChristina grinned. \"She just wants to make sure she gets a chance to fuck you before me and my mom completely wear you out.\"\n\n\"Heh. Probably,\" Danny replied, returning her playful grin even as his cheeks flushed red with embarrassment. He hesitated a moment before saying, \"She has been a little bit obsessed ever since we started doing it. You should have seen her face last night when your mom and I decided to spend the night alone together. For a second, I thought she was going to slap her!\"\n\n\"If you think that's bad, wait until John comes back from school. I bet we don't see him or Mom for a week at least.\"\n\n\"Maybe that's for the best,\" he said. \"I never thought I'd say this, but my dick could probably use the rest.\"\n\n\"That's what you think,\" Christina replied. \"Don't forget that you've got not one, but two sexy older sisters coming home this weekend. Even you should be able to see that the math doesn't exactly balance out on that one.\"\n\n\"Pshh \u2014 You mean the sisters that spent every waking moment of their lives torturing and making fun of me? We'll see what happens, but I'm not going to assume anything when it comes to Abby and Emily.\"\n\nChristina merely shrugged. \"Things change... obviously. Besides, there's no way either of them will be able to resist once they get a look at this,\" she said as she reached between them and fondled his slimy cock as it finally slipped free from her well-fucked hole.\n\n\"Like I said... We'll see.\"\n\nHe finally stood up on wobbly legs, taking a moment to stare down at the lewd sight of Christina's nudity. Her whole body was pink and swollen from their exertions, but most exciting of all was the sight of his cum pooling at the base of her opening before finally succumbing to the force of gravity and rolling out of her in a thick, gooey stream.\n\n\"I love feeling your cum in me,\" Christina said when she saw where he was staring. \"It's weird, but it feels nice knowing that there's still some of you left deep inside of me, even after we're done.\"\n\n\"Good, because I really love putting it there,\" he replied. The sight of his cousin's lithe body lying there before him, her legs spread wide as his creamy spunk drooled out of her was almost enough to make him wonder whether going another round wouldn't be worth incurring his mom's wrath. It took a great deal of mental effort to finally tear his eyes away.\n\nHe quickly located his clothes, but before he could put them on, Christina said, \"Wait. Come here. Let me get you cleaned up.\"\n\nDanny hesitated, but only for the briefest of moments before walking to Christina's bedside and offering her his cum-covered cock. She eagerly got on her hands and knees and started gently lapping at him.\n\nShe hummed with delight as their combined fluids filled her nostrils and excited her taste buds. Danny merely closed his eyes and sighed, content to enjoy the warm, loving sensation of his cousin's tongue bathing his cock and balls. When she was nearly done, she took him into her mouth and fluttered her tongue against his sensitive glans a few times for good measure. The sensation was too intense for Danny to handle, and he reluctantly pulled away from her sucking mouth.",
        "\"You're bad.\"\n\n\"Who? Me?\" she asked, playfully looking from side to side as if there was anyone else in the room to blame for her behavior. \"I just wanted to make sure you were all clean,\" she explained. \"I wouldn't want to send you home to your mom with a messy cock, now would I?\"\n\n\"Oh no, of course not,\" he replied as he put on his shirt and pulled up his pants, finally removing his half-hard cock from his cousin's hungry gaze. Leaning down to meet her, he placed a quick, loving kiss on his cousin's lips. \"Seriously, though. Thanks. That felt really fucking nice.\"\n\n\"Anytime, cuz.\"\n\n\"I love you, Christina. See you tomorrow,\" he said as he headed for the door.\n\n\"I love you, too. See ya \u2014 oh shit...\" All at once, Christina remembered an important detail from her conversation with Olivia that she hadn't yet had a chance to mention.\n\n\"What's wrong?\" Danny asked.\n\n\"About tomorrow...\" She hesitated, wondering if it was even worth bringing up at this point. \"So, you know that English project I'm working on with Olivia?\"\n\nDanny nodded.\n\n\"Well, I invited her over to work on it with me tomorrow.\"\n\n\"Okay... and?\"\n\n\"And I kinda said that you might be willing to come by and help us finish it up.\" Before Danny had a chance to reply, she said, \"You don't have to, though, if you think it will be weird or awkward.\"\n\n\"Do you think it will be weird or awkward?\" Danny asked, giving Christina another long, searching stare.\n\n\"I don't know... probably not? Honestly, I really like her a lot, and it would be nice if we could all be friends.\"\n\n\"Just friends, though. Right?\"\n\nChristina gave an enthusiastic nod. \"Just friends.\"\n\n\"Okay, sounds good,\" he replied, \"I'll see you both tomorrow, then.\" With that, Danny blew her a kiss and stepped out into the hallway.\n\n~~~\n\nWith Danny gone, Christina lay in bed for a few minutes, enjoying a few quiet moments of calm relaxation. For the first time since leaving school, her mind was at peace. She might have stayed there and fallen asleep for the night if it wasn't for her rumbling tummy.\n\nWhen she finally managed to drag herself out of bed, she caught a glimpse of herself in the mirror. Her skin was patchy and red where Danny's light stubble had irritated her skin, and her hair had dried awkwardly after her shower, giving her a serious case of bed-head. Most noticeable of all, though, was the close-cropped mat of orange curls at the apex of her athletic thighs.\n\nIt would be obvious to anyone who looked that Christina Henson had just been the recipient of a very satisfying fuck. Her labia \u2014 normally so tidy and delicate \u2014 were swollen and red, protruding noticeably from between her outer lips. They hung open slightly as Danny's load dripped out of her and ran down her thighs in thick, globby rivulets.\n\nThe mere sight of herself made Christina tingle with excitement. Sometimes she still couldn't believe that the girl in the mirror \u2014 the one who had not only fucked her own parents, but her aunt, uncle, and cousin as well \u2014 was really her. But it was all true. She really had done those things and planned on doing quite a bit more.\n\nGrinning to herself, she ran a comb through her hair and rubbed some moisturizer into the red spots on her cheeks and chin, but she left her pussy alone. She wanted to see how her parents would react to the sight of their daughter brazenly walking around the house with her leaking cunt on full display.\n\nDownstairs, she found her mom leaning against the kitchen island, flipping through her phone, looking as effortlessly sexy as ever. Like her daughter, she was completely naked. Her damp, auburn hair clung to her neck and shoulders. She stood with her hips cocked at the perfect angle to emphasize the line of her midsection as it curved outward into her wide, motherly hips. When Christina walked into the room, she looked up at her, grinning when she saw the mess between her daughter's legs.\n\n\"I thought you went upstairs to get cleaned up.\"\n\nChristina grinned. \"I got messy again.\"\n\n\"I see that,\" Diane said. \"So, is it safe to assume that you two kissed and made up?\"\n\n\"You heard that, huh?\"<br >\n\nDiane nodded. \"I couldn't hear what you were saying, but I could tell you were upset. Want to talk about it?\"\n\n\"I think things are good now... but yeah, it might be nice to talk things through... if you have the time.\"\n\n\"I'd love to,\" Diane said, a little too quickly.\n\nChristina just smiled. In the past, she would have been annoyed at her mom's propensity for nosing into her personal business, but now she thought it was kind of cute. Besides, it was nice to have someone she could trust completely and absolutely with secrets that almost no one else could possibly understand.\n\nShe went on to tell her mom everything that had happened, starting with her walk to school that morning and going right up to the present moment. Diane had to stop her every now and then to attend to her dinner preparations, but mostly, she just let her daughter talk. Christina wasn't sure how her mom would react when she brought up the idea of her and Danny living together openly someday, but when that part of the story came up, Diane merely gave an impassive nod.\n\n\"I'm really happy for you, sweetie,\" Diane said when Christina finally finished her tale.\n\n\"Really?\" Christina asked, more than a little surprised by the reaction.\n\n\"Really,\" she said as she reached across the table and took her daughter's hands into her own. \"You and Danny are good for each other, and you always have been. All your father and I have ever wanted for you is to find someone that will love you, and take care of you, and see you for the incredibly unique and wonderful person you are. As far as I can see, Danny does all those things for you and more.\"\n\nAfter a momentary pause, she said, \"Just promise me that the two of you will take things slow.\"\n\n\"We will, Mom. Neither of us wants to do anything crazy anytime soon \u2014 crazy being a relative term in this family, of course.\"\n\n\"Good,\" Diane replied with a sparkling smile. \"Because I'm still too young to be a grandma.\"\n\n\"\u2014 And I'm still having way too much fun being your daughter,\" Christina added.\n\n\"You'll always be my little girl, Christina \u2014 no matter how many beautiful little grandbabies you give me one day,\" Diana replied, her voice suddenly thick with emotion. \"And in case it wasn't overwhelmingly obvious, knowing that I, of all people, get to be your mom makes me happier than you'll ever know.\"\n\n\"It makes me really happy too, Mom. It's been so nice having you around to talk to about all this stuff, even if it's still so strange and new. I'm sorry for brushing you off all those times you tried to talk with me about personal stuff. High-school might have been a lot easier if I'd actually confided in you every now and then.\"\n\n\"Well at the very least, I might have talked you out of ever dating that Sampson kid.\"\n\n\"Ha. I doubt it,\" Christina said.\n\n\"Me too,\" Diane admitted. \"I never listened to my mom when it came to boys either.\" She paused a beat before saying, \"I don't know if I ever told you this, but she never liked your father. She always said that he'd bring nothing but trouble.\"\n\n\"Maybe she was right,\" Christina replied with a sly smile. \"I mean, look at us.\"\n\nDiane returned her daughter's smile and said, \"Nope. She just never knew that I was the mischief-maker, not him.\"\n\n\"Some things never change, I guess. Not that I'm complaining.\"\n\nJust then, the timer on the oven beeped, and Diane stepped away to take her casserole out to cool. Using the momentary distraction as an opportunity to change the subject, Diane said, \"So, I guess I was right about Olivia wanting to be more than study buddies with Danny.\"\n\nThe statement hung in the air for a moment or two, before Christina finally said, \"Yeah, I guess so. I thought that if I asked her straight up about her feelings for Danny, it would clear things up, but now I'm more confused than ever. On one hand, I like her a lot, and I really do believe her when she says she wants to be friends. At the same time, I can't shake the feeling that she's still hiding something from me.\"\n\n\"I'm afraid I don't have the answers on this one, honey,\" Diane said. \"You'll just have to play things by ear. That said, I'm proud of you for sticking with her as a friend. It would have been easy to push her away when you found out she had feelings for Danny.\"\n\n\"I couldn't do that. She really is super nice.\" After a long, thoughtful pause, she said, \"Still... Do you think I'm crazy for inviting her and Danny over tomorrow? Am I just tempting fate?\"\n\nDiane shrugged. \"There's no way you can really be friends with this girl if you're constantly looking over your shoulder, second-guessing her motives. You also have to remember that to her, you and Danny are just cousins and best friends \u2014 nothing more. If you start acting like a jealous girlfriend, then she'll end up being just as suspicious of you as you are of her. The three of you should just hang out and enjoy each other's company. Having been on the receiving end of one of Danny's crushes, I can say with a reasonable amount of confidence that he'll always put you first, even if Olivia hasn't totally moved on.\"\n\nShe hesitated a beat before saying, \"And... I know I probably don't need to say this, but I'm going to say it anyway. No matter what happens or how close you get with this girl, you can't tell her the truth about what we do behind closed doors. Not ever.\"\n\n\"I know, Mom. I won't,\" Christina replied. \"Things would be so much simpler if I could just tell her straight out that Danny and I are together, but I know it would just lead to more questions that would be even harder to answer. Now that I think about it, though, if Olivia knew about me and Danny, then I'd be a lot more willing to share him.\"\n\nDiane shook her head, even as a wry smile spread across her features. \"You sure are your mother's daughter,\" she said. \"Speaking of sharing. I think I owe you a debt of gratitude for this morning.\"\n\n\"What happened this morning?\" Christina asked. The only thing she could think of that had happened was her waking up late and nearly ruining her perfect attendance record, which wasn't a very praiseworthy achievement.\n\n\"Your father fucked me so hard that I'm surprised he made it safely to work after. You really got to him last night. He's usually cool as a cucumber, even in bed, but you should have seen the look in his eyes when he told me about how sweet you tasted and how much he enjoyed fucking his daughter's tight little cunt.\"\n\nChristina's pussy throbbed as images of the previous night flooded into her brain. She knew the exact look her mom was talking about, and it thrilled her to know that she'd had such an impact on her handsome father.\n\n\"Well I'm glad I could be of service,\" she replied, as an excited flush spread across her freckled cheeks. \"For what it's worth, he really got to me, too. He was so sweet and romantic, and he made it all feel so special. It was also just so fucking hot knowing it was Dad's dick rubbing around inside of me.\"\n\nDiane let out a tiny, barely audible moan as she listened to her daughter talk so openly and enthusiastically about fucking her own father. She couldn't help but press her knees together in a desperate effort to stimulate her erect clit.\n\n\"Thinking about me and Dad fucking really turns you on, doesn't it?\" Christina asked, grinning at her mother's obvious arousal.\n\n\"God, you have no idea, honey,\" Diane said. \"I've been soaking wet all day thinking about him doing something so nasty and wrong with our beautiful little girl \u2014 sliding his big, long cock all the way up inside the same pussy we made together... His own flesh and blood...\"\n\n\"Well, why don't you show me?\"\n\nWith a sultry smile, Diane stepped slowly around to Christina's side of the kitchen island and sat down on the barstool next to her. She sat there for a second or two with her knees pressed tightly together, consciously building up her daughter's anticipation before slowly spreading herself wide open to her daughter's predatory gaze.\n\nHer pussy was swollen, red, and smeared with her musky lubrication. Even in her highly aroused state, Diane's plump outer lips gave no sign of the fleshy, pink pleasures that lay within, save for the thick knob of flesh that protruded from the top of her split. Christina found the sight of her mom's oversized clit to be fascinating and strangely beautiful. It was so big and swollen and erect that its protective hood of flesh wasn't up to the task of containing it. In a strange way, her mom's clit reminded Christina of the head of her uncle's uncircumcised cock as it slid free of its foreskin. She felt drawn to it in the exact same way, and her own clit throbbed and hummed at the thought of wrapping her lips around the most sensitive spot on her mom's body.\n\n\"He made me feel so good, Mommie,\" Christina said, turning effortlessly into the precocious little slut that had driven her father wild the night before. Tearing her eyes away from her mom's drooling snatch and staring into deep into her lust-filled eyes, she said, \"He started by licking between my legs. It tickled at first, but then it started to feel really nice... then it started to feel really nice, and I got that fuzzy warm feeling all over.\"\n\nAs she spoke, she stepped closer to Diane, who was completely transported by her daughter's performance. One of her hands played between her legs while the other idly stroked her breasts, rubbing and fingering the swollen pink nipples that protruded from her pale flesh like a pair of overripe cherries.\n\n\"I know it was wrong, Mommie, but it just felt so good... I didn't want him to stop. You're not mad at me, are you?\" Christina asked, biting her lip in over-exaggerated concern.\n\n\"Of course I'm not mad at you, baby. Daddy was just showing you how much he loves you.\" She hesitated a moment before saying, \"Why don't you...\" The words caught in her throat and she swallowed hard before continuing. \"Why don't you show me what he did to you.\"\n\n\"But how, Mommy?\" Christina asked, her face a mask of pure angelic innocence. \"How can I lick myself?\"\n\n\"Not yourself, baby girl,\" Diane purred. \"I want you to lick my privates just like your Daddy did for you...\"\n\nChristina scrunched up her nose in mock confusion. \"But I'm a girl, Mommy!\"\n\n\"I know that, honey,\" Diane replied. \"You're the most beautiful girl Mommy knows, and it would make me so happy if you used your mouth to make me feel good.\"\n\n\"Well... Okay...\" Christina replied. \"But I don't know if I can do it as good as Daddy did it...\" She smiled to herself as she watched her mom's expression dissolve into a mask of desperate lust.\n\n\"Oh god, baby \u2014 please,\" Diane muttered between clenched teeth. \"Mommy needs it so bad. Feel how wet I am... how wet you make me...\" With perhaps more aggression than she intended, she grabbed Christina's hand and shoved it between her legs. Moving on pure, animal instinct, she started frantically humping herself against her daughter's palm.\n\nChristina felt a surge of moisture flood into her own pussy as she cupped her mom's sloppy cunt. She could feel Diane's lubrication smearing all over her palm and knew she had to taste it. When she pulled away, her mom gave a pathetic cry and frantically grabbed for her daughter's hand, desperate to feel her daughter's fingers probing into her hole. Christina was too quick for her, and a second later, she was lapping at her palm, making a show of eating up her mom's cum.\n\n\"Mmm! You taste nice, Mommy!\" Christina exclaimed. Without waiting for a response, she dropped to her knees and pressed her face deep into Diane's steaming crotch.\n\n\"OHHHHHMMMMMYESSSSSsssss!\" Diane howled as her daughter's lips and tongue went to work. \"Just like that, baby girl! Show Mommy what a dirty little girl you are!\"\n\nChristina did exactly that. She ran her tongue up and down her mom's slit, gathering the moisture that seemed to flow endlessly from her. Her nostrils flared as the scent of excited femininity seemed to fog up her brain, obscuring everything but her desire to bring pleasure to her loving mother. Unable to hold herself back any longer, she let her tongue slither, snake-like, into Diane's sweltering hole, eliciting another loud exaltation of pleasure and a fresh gush of moisture that splashed wetly against her chin.\n\nDiane was far from passive as her daughter expertly ate out her cunt. With one hand on the back of Christina's head, and the other bracing herself against the kitchen table, she shifted her hips, grinding her excited sex against her daughter's face with ever-increasing force. Every time she slid forward, Christina's long, pointed nose mashed deliciously against her clit. Her lungs couldn't seem to take in enough air, and her exhalations came out in long, incoherent wails of sublime pleasure.\n\nAn evil thought popped into Christina's mind when she realized her mom was nearing the point of no return. She pulled back just as suddenly as she'd begun. Looking up at her mom with wide, innocent eyes, she said, \"Am I doing good, Mommy? Is it as nice as when Daddy does it?\"\n\nDiane stared down at her daughter in momentary disbelief before she renewed her grasp on her daughter's head and shoved it forcefully back between her legs. \"You're doing so good, baby,\" she cooed. \"You're making Mommy's pussy feel so fucking good! Nnnghhhh! Don't stop! Mommy wants to cum so bad, baby! Please help Mommy cum!\"\n\nChristina had always been an obedient child. Shifting her lips up to the apex of her mom's sex, she wrapped her lips tight around Diane's plump clitoris, putting gentle suction on the sensitive bundle of nerves while running her tongue in circles over its tip, treating it just like she would a man's penis.\n\n\"Hhnnghhh! OHGOD! OHFUCK! YES, BABY! YES!\"\n\nFireworks exploded behind Diane's eyes as staggering waves of pleasure pushed her into another plane of existence where nothing mattered except her straining clit and her daughter's soft, sucking mouth. Every muscle in her body tensed and released as a flood of viscous fluid poured out of her and covered Christina's face. She trembled and shook as sonic waves of pleasure reverberated through her, searching for an outlet and finding none. Out of pure necessity, her conscious mind reasserted itself just enough to push Christina's mouth away from her before the sensations became too intense for her to handle. By the time it was all over, she was surprised to find that she'd somehow managed to keep herself from falling out of her chair.\n\nShe was so dazed from her orgasm that she barely noticed when a voice from the other side of the room said, \"Having some fun without me, huh?\"\n\nA huge grin lit up Christina's face when she turned to see her father standing at the entrance to the kitchen. His tie hung loosely around his neck and he was already in the process of unbuttoning his dress shirt. Stumbling to her feet, Christina launched herself in his direction, surprising him as she jumped into his arms, wrapping her arms around his neck and her legs around his waist.\n\n\"Daddy!\" she exclaimed as she plastered several butterfly kisses all over his face before laying a bit wet smacker right on his lips, knowing full well that he would taste and smell his wife's cunt on her lips. She could already feel his erection poking into her through his slacks as he wrapped his arms around her, mashing her breasts into his chest and meeting her lips in a much more adult kiss.\n\nHe slid his tongue into her mouth, and soon the two of them were making out like hormonal teenagers. After nearly a full minute of grappling tongues and groping fingers, Ray finally came up for air.\n\n\"I missed you, Pun'kin,\" he said, smiling sweetly back at his daughter.\n\n\"I missed you too, Daddy.\"",
        "With that, he gently set her back on her feet and moved over to his wife, who hadn't moved a muscle since she'd cum all over their daughter's face. She was quite a sight, sitting there with her legs spread wide and a silly, almost delirious smile plastered on her face. Ray thought she looked beautiful.\n\nHer eyes tracked him as he moved nearer, but she seemed barely aware of his presence until he leaned down and pressed his lips firmly against her own. Reaching forward, he caressed her cheek as his lips played against hers. It wasn't the raw, sexual kiss he'd shared with his daughter, but it didn't need to be. Anyone who saw it would know that Ray was utterly devoted to his wife.\n\nThe feeling of his lips and the familiar feeling of his palm on her cheek seemed to finally lift Diane out of her orgasm-induced stupor.\n\n\"Welcome home, honey,\" she said, her voice still sounding hoarse and weak.\n\n\"Thanks, babe,\" he replied, giving her one last peck on the cheek. \"I see you and Christina have been keeping each other entertained...\"\n\nComing up to her dad's side, Christina said, \"I was telling Mom about all the fun we had last night, and she wanted me to do a live demonstration.\"\n\n\"I see that. If you two had just waited a little bit longer, we could have given her a full-length re-enactment,\" he said. At the same time, he ran his hand down Christina's back, finally letting his palm come to rest on one of her firm ass cheeks.\n\nChristina grinned. \"I think she had more fun this way. Right, Mom?\"\n\nDiane, whose eyes were still coming back into focus, smiled vacantly up at her daughter, nodded, and mumbled, \"Oh yeeeahhhh...\"\n\nChristina and Ray couldn't help but giggle. Someone who didn't know any better would have assumed she was stoned out of her mind.\n\n\"Oh \u2014 ha ha...\" Diane mumbled. \"Laugh at the cum-drunk housewife... I see how it is.\"\n\n\"Don't be mad, Mom. We're laughing with you, not at you.\"\n\n\"Mmhm. I've heard that one before,\" Diane muttered as she straightened herself up in her chair. \"Anyways, dinner is ready if you two are hungry.\"\n\n\"It smells delicious, honey,\" Ray said, inhaling deeply through his nose. \"But if it's okay with you, I just got out of a three-hour meeting with the QA team, and I think I could really stand to work up a bit of an appetite first... if you know what I mean.\"\n\n\"I think he's horny, Mom,\" Christina said, casting quick, conspiratorial glances at both of her parents.\n\n\"Thanks for translating, Pun'kin,\" Ray said, his voice laced with lighthearted sarcasm.\n\nWhen Diane didn't immediately respond, Christina said, \"Can we, Mom? Pleeease?\" in the same tone of voice she'd used as a kid when she desperately wanted a new toy from the toy store.\n\nOf course, Diane hadn't forgotten the teasing torture her daughter had put her through only a few minutes prior. Deciding it was time for some revenge, she rubbed her chin thoughtfully and said, \"Hmm... I don't know... If we wait too long to eat, then the food will get cold.\"\n\n\"We can just microwave it when we're ready to eat, though. Right?\"<br >\n\nDiane pretended to look offended. \"Microwave it? Do you have any idea how much time and effort I put into making sure you have a hot meal for dinner every night?\"\n\n\"I think I have some idea,\" Christina replied, sensing the game her mom was playing and refusing to take the bait. \"Come on, Mom. Dad's been working hard all day, too, and we've been fooling around all afternoon. Don't we owe him a little relief?\"\n\nDespite her best efforts to keep a straight face, a hint of a smile started creeping in around the edges of Diane's mouth. \"Well... Okay,\" she said. \"But I'm all fucked out, so you're going to have to do all the work.\"\n\nChristina clapped her hands and rubbed them together, a mad gleam of excitement spreading across her features. \"Yay!\" she exclaimed before leaning down to plant a grateful kiss on her mom's lips. Turning to her father, she gave him a quick once over and said, \"Why are you still dressed?\"\n\nRay just smiled and said, \"Good question.\"\n\nBefore he had a chance to actually do anything about it, though, Christina was in his arms yet again, nuzzling her naked body against his and kissing him frantically. Ray did his best to perform double duty, using one hand to unbutton the rest of his shirt and using the other to rub and caress his daughter's naked body.\n\nWith his shirt finally untucked and carelessly discarded on the kitchen floor, he went for the button and zipper of his pants, but not before he felt his daughter's hand worming its way into his waistband. A grateful sigh escaped his lips when he felt her slender fingers finally take hold of him.\n\nTurning her head, Christina cast another playfully innocent smile at her mom and said, \"Wow, Mommy. I think, Daddy's really excited to see us!\"\n\n\"I'm always excited to see my sexy little girl,\" Ray replied, as he finally managed to unfasten his slacks and push them down. His underwear came next, allowing his cock to spring free. Naturally, Christina wasted no time in reaching down with her free hand to fondle his heavy balls while the other continued milking his turgid prick.\n\nDiane had been fantasizing all day about Christina and Ray's sexual escapades, but the images she'd formed in her mind couldn't hold a candle to the reality of seeing her husband standing in the middle of the kitchen, his pants pooled around his ankles while their daughter gave him an enthusiastic handjob. Despite having just recovered from a powerful orgasm, the mere sight of her two loved ones doing something so completely taboo made her breasts and pussy ache for attention. Moving with a mind of its own, one of her hands made its way between her splayed thighs. Her fingers dipped between her inner-lips, drawing her feminine lubrication and spreading it over her labia and rapidly swelling clit.\n\n\"God... You two are so fucking sexy together,\" she moaned, drawing smiling glances from both of them.\n\n\"Thanks, Mommy,\" Christina replied.\n\nBefore Diane or Ray had a chance to say anything further, Christina dropped to her knees. She made sure to sit in profile, so her mom had a crystal clear view of her tongue as it snaked out of her mouth and traced a slow, path up her father's cock before swirling around his pee-slit. She purred as the musky taste of his masculine secretions hit her taste-buds.\n\n\"Oh, Fuck!\" Ray exclaimed, his knees nearly buckling beneath him as he felt his daughter's warm, wet tongue bathe his manhood.\n\nDiane, too, let out a low, excited moan as she watched her daughter's mouth open wide and take several inches of her husband's lengthy cock between her lips. Christina had always been a daddy's girl, and Diane had seen that same look of pure love and devotion in her daughter's eyes so many times before. She could hardly imagine anything more erotic than knowing that her daughter was expressing that love and devotion by licking, kissing, and sucking her father's cock.\n\nChristina, for her part, was really getting off on the idea of putting on a filthy, incestuous show for her loving parents. Though she could only see her out of the corner of her eyes, she could hear her mom's heavy, panting breaths and moans of arousal. Above her, Ray smiled down at her, his face a mixture of pride and disbelief that his young daughter was really down on her knees, sucking his dick like a cheap whore. The feeling of having her mouth stuffed full of her dad's dick was exciting, but really, it was the thought of him sitting at work all daydreaming about fucking her that made her pussy leak and her nipples harden. She wanted more than anything to help him fulfill every last one of his filthy, incestuous fantasies.\n\nAs much as Ray was enjoying the exquisite pleasure of having his dick shoved halfway down his daughter's throat, he knew that if this kept up for much longer, their fun would end a lot sooner than either of them hoped it would. With a gentle tug on her shoulder, he pulled her back up on her feet. At the same time, he finally took the opportunity to kick off his shoes and step out of his crumpled slacks.\n\n\"Did I do something wrong, Daddy?\" Christina asked, biting her lower lip and staring up at him with wide, vulnerable eyes.\n\n\"No, Pun'kin,\" he whispered. \"You were perfect, but now it's my turn to make you feel good, too.\" With that, he mashed his lips against hers and swirled his tongue around in her mouth. As they frantically made out, Ray slow-walked her closer and closer to the kitchen table, until her tight little ass was resting right on the edge, directly next to Diane's face. Finally Pulling away from their kiss, he turned and flashed his wife a salacious grin before shoving his hand between Christina's legs and roughly cupping her mound in his palm.\n\n\"Oh! Yesssss!\" Christina hissed, as she bent her knees, trying desperately to push as much of her crotch into her father's palm as she possibly could.\n\nRay responded by dragging his fingers through her moist slit, putting extra pressure on her clit as he passed. Christina let out a ragged moan, and her tongue lolled out of her head as her father brought his slick fingers up to his mouth to taste her creamy essence. A funny, mildly confused look crossed his face before resolving into a knowing smile.\n\n\"You've been naughty while Daddy was away,\" he said.\n\nChristina blushed and nodded. \"Danny came over to play this afternoon.\"\n\n\"It seems like the two of you did a little bit more than just play.\"\n\nChristina grinned back at him and said, \"It wasn't just me \u2014 Mommy played, too.\"\n\n\"Well, it sounds like you three had quite the afternoon,\" Ray replied.\n\n\"Oh! We did!\" Christina replied. \"And I also got to learn a dirty secret about Mommy!\" she added, casting a quick, devious smile in her mom's direction.\n\nRay's eyes narrowed into tiny little slits. \"Oh did you, now. And what secret would that be?\"\n\n\"I don't know if I should say... Mommy probably wouldn't like it if I told you,\" she said, acting as if her mom wasn't sitting right next to them.\n\n\"I think you better tell me. You know there are no secrets in this family.\"\n\nChristina pretended to hesitate a bit longer, staring down between her legs and idly shuffling her feet before finally looking back up at her father and saying, \"Okay.\" She leaned forward, making a big show of putting her mouth to Ray's ear. \"I think that Mom wants to have sex with Johnny,\" she whispered, making sure her voice was loud enough for Diane to hear.\n\nRay gasped, but not from surprise. The fact that his wife was desperate to fuck their son wasn't news to him, but there was something strangely erotic about hearing it directly from his daughter's mouth. Knowing that she was saying it for the sole purpose of turning him on made it all the more arousing.\n\nTurning to face his wife, he said, \"Is this true, Diane?\"\n\nDiane just smiled and said, \"Welllll \u2014\"\n\n\"\u2014 It is true!\" Christina interjected, relishing her role as the family tattletale. \"When I came home from school, she was playing with Danny in the living room. She had his thing in her mouth, and \u2014\"\n\nRay put a finger to her lips, silencing her in an instant. \"First of all, you know it's rude to interrupt your mother. Second, didn't we have a talk last night about using big-girl words?\" he said, doing his best to maintain a stony expression, even as the corners of his mouth turned up into a tolerant smile.\n\n\"Sorry, Daddy,\" she mumbled. \"Mommy had his cock in her mouth, and \u2014\"\n\nHe silenced her yet again. \"Don't apologize to me. Apologize to her.\"\n\nChristina couldn't hold back an impish smile as she turned to Diane and said, \"Sorry, Mommy.\"\n\n\"It's okay, sweetie,\" Diane replied, her voice sounding kind and motherly even as she kept rubbing her fingers back and forth through her frothy slit.\n\nBy that point, Diane was well on her way to a self-induced orgasm. Hearing her husband talking to their daughter in the same fatherly tone he'd used when she was a little girl, and seeing Christina play right along was almost unbearably exciting. Now her daughter had found a way to bring her into their sexy little game, and she couldn't have been happier.\n\n\"What I was trying to say was that It's true,\" she said between panting breaths. \"I do want to fuck John \u2014 I want to fuck him really, really badly. I was sitting here all alone, horny as hell thinking about fucking my little boy, so I called up Danny and asked him to... well, to pretend to be John for an afternoon.\"\n\nA week ago, Ray would have been shocked and horrified to hear that the woman he'd been married to for over twenty years had been fantasizing about sleeping with their son. Now, the mere thought of his son's muscular, young body mounting the love of his life and pumping a load of cum into her warm, motherly cunt was mind-numbingly erotic. The fact that Diane had every intention of making that fantasy a reality made it even more so.\n\nApparently reading his mind, Christina reached down and wrapped her fist around his erection. \"See, Daddy. I told you. She really does want to have sex with Johnny. Isn't that nasty?\"\n\n\"It sure is, Pun'kin,\" Ray replied, as he drew his eyes away from his wife, who hung limp in her chair. With a salacious smile, he locked eyes with Christina and said, \"But it's exciting, too. Don't you think?\"\n\nChristina bit her lower lip and nodded. \"I get all fuzzy and tingly inside whenever I think about it.\"\n\n\"Me too, baby,\" he said as he reached forward and palmed one of her breasts, giving it a gentle squeeze. Turning back to face Diane, he added, \"And I know it would make Mommy so happy to see you and your brother kissing and loving on each other, wouldn't it, honey?\"\n\n\"So happy...\" Diane said, her voice coming out in a husky moan.\n\nChristina's eyes sparkled with interest and her grip on Ray's cock tightened. \"What about you, Daddy? Would you like it if I did nasty things with my big brother? Would it turn you on to watch me suck Johnny's cock and let him put it in my tight little pussy... or how about my ass?\"\n\nA thousand filthy images flooded into Ray's mind, each one more arousing than the last. Unable to hold himself back for a moment longer, he grabbed Christina roughly by the hips and turned her around so they were both facing his wife. With his knees pressed against her inner-thighs, he insistently nudged her legs farther apart, widening her stance until her tight little ass was pointed directly at his straining cock. Like an animal claiming a mate, Ray hunched his back, slotted his big mushroom head against his daughter's warm, wet slit, and pushed forward, grunting and moaning as the tight walls of his daughter's cunt enveloped him.\n\n\"Does that answer your question?\" he whispered as he held her body tightly to his own, corkscrewing his cock deeper and deeper into her clutching depths.\n\n\"OH! Daddy... YES!\" Christina cried, not so much in answer to his question, but rather from the overwhelming pleasure of having his full length sliding filling up every spare inch of her cunt.\n\nIn that particular moment, Christina couldn't imagine anything nicer than the feeling of her father's arms wrapped around her waist, his cock sawing in and out of her dripping hole. Another guttural groan escaped her lips as his hands moved higher until they cupped her girlish breasts. He squeezed her sensitive tit-flesh gently at first but quickly grew more aggressive. Within the space of a few deep, panting breaths, Ray's rough palms were mauling his daughter's chest, squeezing her breasts, pinching her nipples and leaving red marks on her pale, freckled skin.\n\nShe howled in exquisite agony as Ray used her body as his personal fuck-toy. Her vision started to blur, and her knees threatened to buckle beneath her, but he held her steady, sliding in and out of her with desperate intensity.\n\nThe world seemed to come in and out of focus as waves of intense pleasure crashed against her senses, but in a moment of rare lucidity, she locked eyes with her mom, who seemed equally dazed by what she was seeing.\n\nDiane could hardly believe that somehow, the incestuous acts being performed right in front of her were really happening. Her husband and daughter looked unbelievably sexy together. Ray's six-foot frame towered over his daughter's petite body, making her look small and vulnerable as he slammed into her with the force of a freight train. She knew from experience how nice it felt to have that long, cock prodding deep into her cunt, and she felt a phantom sensation of fullness every time she heard the wet 'schlick' sound of his cock bottoming out in their daughter's pussy.\n\n\"He's so good, Mommy,\" Christina moaned. \"Daddy's fucking me so hard... So deep...\"\n\nHe was, too. From that particular angle of entry, Ray's cock slid easily into the deepest recesses of his daughter's cunt, his spongy cock-head producing a mind-numbingly pleasurable sensation every time it mashed up against her cervix.\n\nDiane couldn't take it any longer. As much as she was enjoying the show, she just had to be a part of it. With her eyes still locked with Christina's, she rose out of her chair and pressed her naked torso against her daughter's body.\n\n\"MmmmmmMommmyyyyy...\" Christina moaned, her mouth hanging open in a lust-induced stupor as Diane kissed her. She hungrily sucked her daughter's lips and tongue into her mouth, savoring the taste of her own femininity on her daughter's lips. Other than her moan of approval, Christina seemed insensible to anything other than the feeling of her father's dick ramrodding in and out of her excited twat.\n\nThat all changed when Diane reached a hand between them and started tracing her fingers down Christina's abdomen. She let her hand rest on her daughter's abdomen for a moment, enjoying rhythmic tension and release of her abdominal muscles before snaking her fingers lower, past her bristly mat of pubic hair and down to her swollen little clit.\n\n\"Eeyaghh!\" Christina screamed when she felt her mom's thumb rub directly on the sensitive bundle of nerves. Her whole body bucked and heaved in response to the almost unbearable sensations swirling through her body.\n\nChristina was the meat in her parents' incestuous sandwich, and she'd never felt more loved. With her father's fingers pulling on her nipples, his cock massaging her g-spot, and her mom's thumb masturbating her clit, nearly every pleasure center in her body was firing at full blast. The only thing that kept her even a little bit grounded in reality was the warm, familiarity of their bodies pressed up against her own as they wrapped her up in the most intensely erotic hug of her life.\n\nWhen her inevitable orgasm finally hit, her parents held her jerking, trembling body in their arms as Diane whispered loving encouragement in her ear. \"That's it, baby,\" she cooed. \"Let it all out. Let Mommy and Daddy make you feel good.\"\n\nChristina's only response was a few breathy moans as she buried her face in the nape of Diane's neck, nuzzling her Mom's flesh and riding out the roiling waves of unspeakable pleasure.\n\nRay watched with rapt fascination as his wife held and comforted their daughter through her orgasm, but he didn't stop fucking her. As Christina's trembled and jerked between them, he kept sliding his long cock in and out of her body with steady, deliberate strokes, making quiet grunting noises as her slippery hole tightened around him. Every bump and ridge inside of her seemed to drag against him in a desperate attempt to pull him deeper into the pulsing, molten hot core of her sex.\n\nDiane smiled lovingly up at him, her sea-green eyes wide with lust. He couldn't help but be struck by just how much he loved the beautiful woman he'd chosen to dedicate his life to and who had brought him so much joy over the years. It was strange, but somehow, even with their daughter's quivering body between them, he felt closer and more connected to his wife than ever before."
    ],
    "authorname": "ErrantZebra",
    "tags": [
        "aunt",
        "daughter",
        "father",
        "incest novel",
        "mother",
        "romance",
        "son",
        "taboo",
        "whole family incest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/family-first-ch-11"
}