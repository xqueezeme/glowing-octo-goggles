{
    "title": "Hope Among the Deserted",
    "pages": [
        "This story involves acts of both sex and romance between consenting adult males, so if that's not allowed where you live then you should march in the streets. If you enjoy the story, I'd love to hear from you. Thanks for reading. \n\n* * *\n\nIt wasn't the explosion that alarmed him. It was the silence.\n\nIn the aftermath, as the dust--and metal, and body parts--settled, he heard nothing. Nothing at all. Not even a muffled, muted facsimile of the screams and sirens and shouts that surrounded him, surrounded them all.\n\nSilence.\n\nThe explosion had ruptured his eardrums and so shocked his auditory nerves that he wouldn't hear for days, and never again as well as he had before. As he looked around, trying to sort out what had happened, trying to move, he saw a silent film of devastation. Grizz, who had been at the big gun, took the worst of it. There was little left to be sent home; the biggest parts were still gripping the handles of the gun. A pink mist descended; he looked up to see where it came from, and knew that it was all that was left of Grizz and who knows how many other guys--he wasn't sure who had been closest to the IED when it detonated.\n\nHe could smell burning. Oil, fabric, flesh.\n\nSomeone touched him on the leg, shook it hard. He couldn't hear them shout his name, he couldn't feel them pulling his legs to get him out of the burning remains of the transport. He felt himself moving, then spinning, and then darkness came as if his eyes had given up too.\n\nSilence.\n\n* * *\n\n\"Will? Will, can you hear me?\"\n\nLight. Too much light. And what was that? A voice?\n\n\"Will, I need to you to focus. Can you hear me?\"\n\nIt was a voice. He could hear, a little. One side, anyway.\n\n\"I ... ah--\"\n\n\"No, no, don't try to talk. You sucked in some bad fumes there. Your throat's going to be a bit rough for a while. Can you open your eyes for me?\"\n\nHe tried, but they were stuck. He felt a warm, wet cloth swab over his eyes, and then he could open, and blink, and try to focus.\n\n\"Good. Can you see okay?\"\n\nHe nodded.\n\n\"Do you know where you are?\"\n\nHe smiled weakly. Where else in the entire world would something like this happen to somebody?\n\n\"Afgha--,\" he croaked out, painfully.\n\nThe nurse nodded once, and made a note on the clipboard.\n\n\"Well, you were, until about 5 days ago. You were brought here after the attack, and we've been waiting for you to come around. Welcome back, soldier.\"\n\n\"Thanks,\" he coughed, and then fell silent.\n\n\"I'll let you rest. You have some work ahead of you, Will. But we'll get you patched up and on your way as soon as we can.\"\n\nHe lapsed back into unconsciousness, to experience an endless, silent replay of the explosion, as he had non-stop for the last 5 days.\n\nA few hours later a buddy from his unit stopped by his bed. Their conversation was a simple one.\n\n\"Grizz?\"\n\nA shake of the head.\n\n\"Peters?\"\n\nA slow shake.\n\n\"Donnelly?\"\n\nA tear ran down the cheek as it rocked from side to side.\n\nSilence.\n\n* * *\n\nThe next morning, he was better able to hear, more willing to see, and eager to talk. He waited until the same nurse came by to check on him, and then he tried out his voice again.\n\n\"Excuse me, ma'am?\" he said, his voice sounding scratchy and higher than he remembered it being.\n\n\"Yes?\" she asked, coming close to him, her head cocked, smiling.\n\n\"Juliet.\" He said the word like a prayer, like a wish.\n\nShe squinted at him a moment, and then realized what he meant.\n\n\"Oh, your wife! Yes, of course. The doctor spoke to her the first night you were here, and then again after the surgery. She's aware of your condition. In fact,\" she leaned closer to him, speaking more quietly, \"He said that she's taking it real well.\" She smiled, as if she knew this was something he was worried about.\n\nHe fixed her with a puzzled gaze. She paled.\n\n\"Oh--oh my. Has the doctor spoken to you? Oh, honey, I'm so sorry. I assumed that--I marked on your chart that you were conscious and responsive, and when they see that they always come by to talk with you. Oh, I'm so sorry.\"\n\n\"What ... is ... it?\" He pled with his eyes to be told, to know what it was that his wife of only a year was taking well.\n\n\"Let me get the doctor, honey,\" she said, and in an instant was up and gone.\n\nAdvances in surgical technique have revolutionized battlefield medicine, but every human endeavor has its bounds. There was nothing the doctors could do to reverse the paralysis that would leave Will's legs useless for the rest of his life. The considered him extremely \"lucky,\" however, in that his paraplegia did not seem to have completely disabled his lower abdominal systems. He was continent, could control his bowels, and there was a chance, his urologist assured him brightly, that he might someday regain sexual function.\n\nWill did not feel lucky.\n\nHeaped with bad news, he was shipped home for several months of rehab at a VA hospital near his hometown--if you consider two states away to be \"near.\" Juliet joined him there, and was involved in his treatment, at least at first. She had been relieved to see that he looked pretty much the same as when she saw him off for his tour 6 months earlier. He had always been the most handsome man in the room, any room, and he still was: a shock of brown hair, clear golden-brown eyes, the wide smile and the broad shoulders. Just that now he was in a wheelchair. Forever.\n\nHe worked as hard at physical therapy as he worked at everything he did in life: school, jobs, the service. If he was going to be in a wheelchair, he was going to go strong. He lifted weights every day, building what had been a lithe and defined torso into a sculpture of muscle and tendon. He built up his endurance in the wheelchair, until the staff, inspired by his dedication, took up a collection for a racing chair so that he could rack up the miles smoothly. And his legs remained still.\n\nAs Will worked to regain his strength, Juliet's focus turned to the family she had hoped to start. She pushed the urological team to come up with new options to restore his virility; surgery failed, Viagra left his heart fibrillating, an implanted pump would be useless without the muscles for ejaculation. She pushed and pushed and when that came to nothing she nagged and cried. Finally the team made one more suggestion: that she manually stimulate his prostate in order to encourage an erection and jump-start the ejaculatory system. It was a somewhat unlikely prospect, but it was the last thing they could offer.\n\n\"You want me to what?\" she asked in a flat monotone.\n\n\"Mrs. Patchett, it's a very simple procedure. You simply lubricate and insert your finger--\"\n\n\"Oh my god you cannot be serious. Did you just use the word 'insert'? He's a man, for god's sake!\"\n\n\"Yes, Mrs. Patchett, he is. And this may help him feel even more a man. Once you have inserted your finger, you simply locate the prostate gland by--\"\n\n\"I'm going to be sick! There's no way I'm going to diddle my husband like a prom date. You people are out of your minds.\"\n\n\"Please calm down. Now, if manual stimulation is out of the question, you can also use an electrical stimulator that you simply insert--\"\n\n\"A dildo? An electric goddamn dildo? I can't listen to any more of this. I'm leaving.\"\n\nAnd she did, leaving the urological team--and Will--out of options.\n\nThat night, the nightmare replay of the explosion was replaced with a new horror. Will found himself, in his chair, naked, surrounded by people he knew. As he focused in on them, he saw that they were friends of his from the army, from college, all the way back to high school. Then he noticed they were all naked, and sporting enormous erections. They laughed and pointed at his tiny, shriveled member as they stroked their own grotesquely large cocks. Meanwhile, Juliet made her way around the circle, pausing to lick or kiss or suck each prick, sighing and moaning as she went. Suddenly, the heat and noise rose to an unbearable pitch, and Will saw the cocks start to shoot. Long, flowing streams of white jetted out of every one, arcing high in the air and landing on him, covering with smelly, sticky spunk. He sat, soaked, in the middle, knowing that he would never experience sex again. He awoke in a sweat--a flaccid, panting sweat. He realized then--felt the truth of it in his gut--that he would never again experience sex.\n\nWill eventually settled into a long-term rehab routine with a new therapist at the VA across the city he called home. Lucas was Will's age, and they hit it off immediately, both as therapist and patient and, soon, as friends. After working in the clinic for a couple of weeks they started running together, Will in his racing chair and Lucas running barefoot alongside.\n\nFor the first time Will started to feel as strong as he had been before the explosion, and he sometimes could go hours without remembering that he was a paraplegic. His spirits were lifting. He felt it was time to push on something that Juliet had been unwilling to do.\n\n\"Come on, hon, just give it a try. For me?\"\n\n\"No, Will. It's disgusting.\"\n\n\"But if it works, we could start a family. Do you really want to give that up?\"\n\nShe looked at him, unconvinced.\n\n\"Look, it'll be easy,\" he said, as he lifted himself off of his chair and onto the bed. He pulled his sweats off, as well as his shirt, and he sat before her, naked. He moved his legs apart, and lay back a bit.\n\nHis body still had the power to move her. From his head down to his waist, he was completely normal--more than normal, in fact. The wheelchair work had built his upper body to a steely strength that was breathtaking; his pectorals were slabs of pure muscle, and his abs were tightly cut into an eight-pack. His cock, of course, he had not been exercising, but it was still the long, silky wonder that it had always been. She started to think that perhaps she could figure out a way to make this work.\n\n\"Just give it a go, okay?\" he pleaded.\n\n\"Oh, all right,\" she finally said. \"But I'm going to stop if it gets too weird.\"\n\n\"Okay. Whatever you say,\" he assured her.\n\nShe took the bottle of lube from him, and greased up her finger. She brought it to his anus, and began to push. Her finger suddenly slid in, all the way. He gasped and jumped a bit, and she panicked and pulled out.\n\n\"That was great! I could totally feel you in there! That's a good sign, they said. It means that some of the nerves are still connected.\"\n\nBut Juliet was looking at her finger, slick and shiny with lube, and at Will's ass, spread wide and pink from the friction of his first penetration. She suddenly retched and bolted from the bed, to the bathroom, where she could throw up in peace.\n\nWill was devastated. He slid back over onto his chair and wheeled to the bathroom. he pushed the door open, and saw her sitting on the edge of the bathtub, crying. She looked over at him, naked and pathetic, his pale, withered legs sitting hanging uselessly, his cock curled, flaccid, in his lap. She saw him for the first time as the sad case he was: he'll never walk, never fuck, never do anything worth doing. And now there were tears rolling down his cheeks to complete the look.\n\n\"Juliet, I know it's hard--\"\n\n\"No, it's not hard, and that's the problem,\" she spat at him. She saw this pain this caused him, and she backed off. A bit. \"Look, I love you, but I can't do this. I just can't. I'm going to pack a bag and get out of here for a few days, and then we'll work stuff out when I come back.\"\n\nShe never came back.\n\n* * *\n\nWill waited for three days, knowing in his heart that she would not return. But he didn't leave the house, in case she decided to do what she had said she would. By the time Lucas called to find out why Will had missed several therapy appointments, he had admitted to himself that it was over.\n\n\"She left? Just like that?\" Lucas asked, in disbelief.\n\n\"Yeah. Just like that. I don't know where she is, or if she's even coming back for her stuff. I've just been sitting here, waiting.\"\n\n\"You mean you haven't left the house in three days? What have you been eating?\"\n\n\"Oh, there was some stuff in the kitchen. It's mostly gone now. Hey, I had to learn how to do this stuff on my own sometime, right? I guess now is the time.\"\n\n\"Look, I'm going to swing by and see how you're doing, okay? Just sit tight.\"\n\n\"Lucas, there's no need for that. I can take care of myself. If I've learned anything through this experience, it's that.\"\n\n\"I'd feel better if I could see for myself that you're okay. I'll be by in 15 minutes.\"\n\nGiven that Will lived 20 minutes from the hospital, he was impressed by Lucas's determination to get there in 15.\n\nHe was there 12 minutes later.\n\nWill rolled to the door, opened it, and let in a distraught Lucas.\n\n\"Oh my god, Will, are you okay? What can I do?\" Lucas paused to breathe. \"Okay, so we know what's first. You smell like the Green Bay Packers' laundry hamper. We need to get you in the shower, pronto. Now, where's the bathroom?\"\n\nWill chuckled at Lucas's boisterous entrance, and pointed down the hall.\n\n\"Let's roll,\" Lucas called as he pushed Will briskly toward the bath.\n\nThe house had not yet been modified to accommodate Will's chair, so he had indeed not been able to bathe himself without Juliet's help. Arriving in the bathroom, Lucas started the water going, and then he helped Will undress and lifted him out of his chair and onto a jury-rigged shower bench. Slipping into his professional role, Lucas began to tend to Will.\n\n\"Dude, I can wash my own hair,\" Will protested as Lucas worked his scalp into a froth.\n\n\"Oh, sorry!\" Lucas laughed. \"I got carried away. I'll step out now and leave you to it.\"\n\n\"Will you stay in the room, though? It's been pretty lonely here.\"\n\n\"Of course. I just feel so bad about what happened with Juliet. I don't mean to pry, but--okay, I'm going to pry. What the fuck happened?\"\n\n\"I think it was building for a while. She really wanted a family, and this,\" he pointed to his legs, \"means that I can't give her that. I guess she kind of snapped. I'm not the man she married.\"\n\n\"That's horrible. You're every bit the man you have always been. Anyone can see that.\"\n\n\"Well, the one who needed to see it the most didn't, so now that's over.\"\n\nWill finished his shower, and Lucas helped him dry and dress.\n\n\"Look, Will, you can't stay by yourself in this house. Nothing's been set up for you to live alone here. You can't get your chair near enough to the shower, and the kitchen needs to be reworked, and there's no way you can get to the second floor.\"\n\n\"Yeah, but what am I supposed to do, check into a motel? I can't afford that.\"\n\nLucas knew he shouldn't, but he went ahead anyway.\n\n\"Come stay with me.\"\n\nWill looked up at him in disbelief.\n\n\"What?\"\n\n\"I said, come stay with me. My place is all set up for a chair. My older brother was in one--he's the reason I went into physical therapy. He lived with me for years.\"\n\n\"But there's no reason why you should have to take care of me. I mean, your brother, that's one thing, that's family, but--\"\n\n\"And Juliet was your family, and she decided not to do it. So, here I am, and I want to help. Please take me up on it.\"\n\nWill considered this. It had been depressing being alone in the house, not to mention frustrating--the coffee was on a high shelf, which he tried to reach for two days before grabbing a broom and whacking everything off of it at once. It would be a relief not to have to do everything himself.\n\n\"Okay, for one night. But tomorrow I'm going to get some stuff changed around here so I can be here on my own again.\"\n\n\"Deal. Now, what do you need to take?\"\n\nWill gathered up clothes, and medicine, and his toiletry kit, and was pretty much ready to move in two minutes--like a good soldier. Last to go in was the laptop, which reminded him that he hadn't checked his email since before Juliet left. He opened the laptop and saw that she was still logged in. Her email was up on the screen. He was about to log her out when a phrase caught his eye:\n\n\"He wakes up screaming, which is bad enough, but when he doesn't wake up it's even worse, because he thrashes around. I'm afraid he's going to hurt me.\"\n\nWhat the fuck? Juliet wrote this to her sister, about a week ago. There was more, much more:\n\n\"They say that PTSD shows up about four to six months after this kind of injury. That's what it's been, and I'm noticing changes. PTSD is the only thing that explains his anger at being paralyzed.\"\n\n\"He's just wasting away. I mean, his legs just dangle there. I cry myself to sleep every night thinking of what he was when I married him.\"\n\nAnd, finally:\n\n\"He's sinking into depression, and once that happens I know I won't be safe here. It's one thing not to be able to have the kids I've always wanted, but it's something else to feel like my life is at risk.\"\n\nHot tears filled Will's eyes, and ran down his cheeks. Was he really the monster that Juliet claimed he was? Could he have hurt her in his sleep? Was he \"sinking\"? His pride in what he had accomplished despite his injuries evaporated, and was replaced with shame and doubt and guilt. He had ruined his marriage. He had driven her away.\n\n\"Ready to go, Will?\" called Lucas from the front door.\n\nWill cleared his throat, and replied.\n\n\"Yeah, yeah, I'm on my way. Just needed to grab a couple last things. Be right there.\"\n\nHe shut the laptop and rolled down the hall.\n\nThe drive to Lucas's house was less than an hour, and they got there just before dinner time. They stowed Will's pack in the guest room, which had been Lucas's brother's, and then settled on the back porch with a six-pack and a sunset. They were polishing off the beer before either spoke.\n\n\"So, what do you want to eat?\" Lucas asked, in the most upbeat tone he could muster.\n\nWill was silent.\n\n\"She left me, dude. She just left.\"\n\n\"Yeah, she did. Do you think she's coming back?\"\n\nWill snorted. \"Hell no. Once she does something, it stays done. She's gone 6 years not talking to her cousin because she borrowed a dress of hers without asking. Something like this? Never. She's gone for good.\" Will tipped up his third beer. \"And this is fine for dinner. Chewing is overrated anyway.\"\n\n\"You have to eat. I'm guessing you're not vegan?\" Lucas grinned.\n\n\"Heh. No, not really. Anything would be fine. I'm not picky, I'm Army.\"\n\n\"Well, I'll try to scare up something that will be better than MREs. And I'll grab another of these,\" he said, picking up the paperboard beer holder.\n\nLucas grilled, Will ate, they both drank. And they were thankful for the company--Will because he needed to know that someone would be willing to stay in his presence despite the risks, and Lucas because his house had felt empty since Michael finally succumbed to his illness last year. He enjoyed having someone to care for, and Will was smart and funny and easy to get along with.\n\nA cat entered the screen porch, meowing insistently. Will reached a hand down and rubbed its head, and it purred contentedly. \n\n\"Cat person, huh?\" he asked Lucas.\n\n\"No, not really. Michael was, though. She was sort of a companion animal for him. She was always with him, even after he ran over her tail a couple of times. Since he's been gone, she just wanders around complaining at me.\"\n\n\"She's nice. What's her name?\"\n\n\"Pebbles. But if you want her to come, all you need to do is open a can of something. I gave her tuna once, and from then on she hears the can opener, she's there. Drives me up the wall. But she reminds me of Michael, and having her around is like a link to him.\"\n\n\"You miss him,\" Will said simply, not a question.\n\nLucas sighed. \"I do. Even though I took care of him most of my life, he was always my big brother. After our parents were gone, he was all I had.\"\n\nWill raised his glass--they had switched to whiskey sours after dinner--and said, \"To Michael.\"",
        "\"To Michael,\" Lucas said, and they drank. And drank some more.\n\nIt was after midnight when Lucas stood, with difficulty, and pushed aside the empty bottle of Jack Daniels that they had resorted to when getting up to mix drinks required too much concentration.\n\n\"Time for bed, soldier,\" he slurred, and Will stirred slightly, but was nowhere near conscious. \"Crap,\" Lucas muttered.\n\nHe rolled Will into the house, which began spinning so fast that he knew it would only stop if it landed on the Wicked Witch of the East--or if he crawled on all fours. As neither was an option, he pushed Will's chair as best he could, mostly missing the furniture along the way. He got as far as the first room along the hallway, his, and he knew he could go no further. He turned in, and stopped when Will's feet hit the bed frame. Lucas lifted Will out of the chair--a task made easier by Will's reduced weight, and made harder by Lucas's reduced sobriety. They fell onto the bed, and then Lucas positioned Will with his head on a pillow. He covered him, and then stumbled around to the other side of the bed and climbed in. He lay there for no more than a minute, willing the room to stop spinning. Then he passed out.\n\n* * *\n\nBright and early in the morning, the birds chirped and sputtered outside the window, and they slept. Then the morning light flooded the room, a blinding beam slashing across the head of the bed, and still they slept. It wasn't until Pebbles arrived much later to lodge a grievance about food service that they were jolted awake; she landed on the bed between them and howled mournfully. Their eyes flew open, startled and unfocused. Each turned toward the noise, and each saw the other.\n\nOh, fuck, he thought.\n\nLucas bolted up out of bed, and Will's instinct was to do the same. His instinct, though, called upon modes of action that his body no longer had access to; he flailed his arms and rolled out of bed, landing on the floor with a crash.\n\nWhat did I do to him when I was out of it? What horrible thing don't I remember? He's probably freaked out and doesn't want to be anywhere near me. The best friend I've got now, and I fucked it up.\n\nEach thought this, to himself, on opposite sides of the bed. Then Lucas's training kicked in and he ran around the bed to pick up Will.\n\n\"Will, I--\"\n\n\"No! Stay away from me!\" shouted Will, pushing Lucas away.\n\n\"But Will, nothing happened! I swear!\" Lucas replied, also shouting.\n\n\"I can't do this. How did I end up here? Why were you and I--\"\n\n\"I can explain. I was just too drunk to get you into the other bedroom. I'm so sorry, Will! It won't happen again. Can you forgive me?\"\n\nWill looked at him, unsure.\n\n\"For what? I'm the one who should be asking you that.\"\n\n\"What? Why would you say that?\" Lucas was in a complete fog of confusion. What were they talking about?\n\n\"Look, I can explain, and then you'll see why we can't do this,\" Will said.\n\nLucas took a deep breath.\n\n\"Okay, okay. Let's just calm down. I'll go make some coffee, and we'll talk it out, okay?\" Lucas escaped to the kitchen, overwhelmed and still hung over.\n\nShit, now I've ruined it with him, each one thought.\n\nA few minutes later Will rolled into the kitchen, the smell of coffee drawing him in. He had brushed his teeth and washed up a bit, and was feeling more human now. He hadn't seen Lucas's kitchen the night before, and took it in as he sipped from the mug that Lucas handed him. It was original to the mid-1940s house, with painted cupboards and a huge gas range; copper pots hung above the low butcher block island in the middle. It was like something on one of those home makeover shows Juliet was always watching.\n\nLucas pulled up a chair to the island, which had been designed to accommodate a wheelchair. Will rolled up to it and rubbed his eyes.\n\nHow do I explain this, each one thought.\n\n\"Look,\" Lucas started, having taken a deep breath and prepared himself for what he was going to say.\n\n\"No, wait. Let me explain. Please?\"\n\nLucas, surprised, nodded.\n\n\"When I was packing up last night to come here, I found some emails that Juliet had sent to her sister, and some of her friends. She was completely freaked out by me. She was worried that I had PTSD and was going to murder her in her sleep or something. And she said I was wasting away, and getting depressed, and now I see why she left.\"\n\nHe took a deep breath, and Lucas started to say something, but he put up a hand and stopped him.\n\n\"And so that's why I was so panicked this morning. I can't be around anyone right now, especially when I'm sleeping--that was when Juliet was most worried about me. I could have killed you, Lucas! There's some kind of monster inside me that I can't control. Can you just take me back to my house today? I need to be alone--it'll be better for everyone if I'm alone.\"\n\nLucas sipped his coffee and regarded Will. He saw tears forming in his friend's eyes, and his heart broke. He couldn't add to his burden, so he decided not to say anything about why he too had leapt out of bed this morning.\n\n\"Look,\" Lucas said, putting his hand on Will's arm, \"I can take care of myself. I was in the service too, you know. I'm a big boy, and I can handle it. You don't need to worry.\"\n\n\"But I can't control it!\"\n\n\"Control what? You passed out last night, just like I did. You woke up this morning, just like I did. No harm done. Except that I have a hangover and you appear to be just fine, which I hate you for.\"\n\nWill chuckled. \"I can be a cheap drunk, but I bounce back pretty good.\"\n\n\"Now, let's have no more of this 'I'm not fit for human company' bullshit, okay? I'm going to make breakfast, and then we'll figure out what to do today.\"\n\n\"Don't you have to go to work?\" Will asked.\n\n\"Nah. I called in sick, started the weekend early. How do you like your eggs?\"\n\n\"Cooked by someone other than me.\"\n\n\"Very funny. Now you just sit tight and I'll get something going.\"\n\nLucas worked away in the kitchen, pleased to have someone to cook for. The fact that he hadn't been completely honest with Will weighed on him slightly, but he would fix that soon. Or soon-ish.\n\nThey went for a run, and then Lucas dug out his catalogs of adaptive devices so that they could plan for modifications to Will's house. Everything they found needed to be customized and installed, though, so it became clear pretty quickly that Will wouldn't be going home tonight. This troubled him. It delighted Lucas.\n\nAfter dinner, they retired to the back porch again, though this time they skipped the alcohol.\n\n\"That was amazing,\" Will said. \"What did you say that was again?\"\n\n\"Pot-au-feu,\" Lucas answered. \"Just a simple one from the Julia Child book.\"\n\nWill shook his head.\n\n\"What?\" Lucas asked.\n\n\"I don't get you,\" Will replied.\n\n\"What don't you get?\"\n\n\"You cook like a fucking chef, you have this beautiful house, you take care of people like you're on a mission from god--\"\n\n\"Flattery will get you everywhere. Please continue.\"\n\n\"What I can't figure out is why you're not married. How has some completely hot woman not lured you down the aisle?\"\n\n\"Not the marrying kind,\" Lucas said simply. He wished he had one of those whiskey sours right about now.\n\n\"Heh. Who is? I kinda wish I hadn't been. Would've made things simpler for me.\"\n\n\"No, Will. I mean I'm--really--not the marrying kind.\"\n\nWill's mouth opened, and then shut, and then opened again.\n\n\"Really? No shit?\"\n\n\"No shit.\"\n\n\"Huh. Okay.\"\n\nLucas looked out over the backyard, wishing for some distraction. None appeared. He looked back over at Will.\n\n\"So, um, are you--\" he began, not sure where he was going with that sentence.\n\n\"Oh, it's no big deal. I served with a bunch of gay guys. Matter of fact, Donnelly, one of the guys who got pasted in the explosion, was. Good guy--the kind you'd want on your team when the shit started flying. Fuckin' shame, that was.\"\n\nLucas got up and poured a couple of whiskeys.\n\n\"His partner asked me on the phone what it was like for him at the end, and I didn't know what to tell him. I didn't see what happened to him. I just saw the pieces.\"\n\nLucas poured more whiskey into each glass.\n\n\"I told him that he went quickly, and wasn't in pain, and that he died doing what was most important to him. So basically I lied. What was really most important to him was being back home with his partner of ten years and living the happy fucking life he wanted to live. Getting turned into shredded beef in Afghanistan was never in his plan. At all.\"\n\nLucas handed Will a glass. They touched the rims together.\n\n\"To Donnelly,\" Lucas said, and took a big gulp of the raw alcohol.\n\n\"To Donnelly,\" Will repeated, and drained his glass.\n\n\"So you're really okay with the gay thing?\" Lucas asked.\n\n\"Psssh. Yeah. Why wouldn't I be?\"\n\n\"Well, we ended up in bed together last night, and--\"\n\n\"Lucas, you may not have noticed this, but I'm not exactly in full working order when it comes to sex. So I know that's not what you're after.\"\n\nLucas, knowing this was not true, nodded anyway. Will, suspecting the same, nodded too. Better to pretend it was settled.\n\n\"Now, before it gets too late and we get too blotto, we should turn in,\" Will said. \"I didn't sleep all that well last night.\"\n\n\"Yeah, me either. Why don't you go ahead and shower, and I'll get in after you.\"\n\n\"Did I see a bathtub in there? With a door?\"\n\n\"Yeah, Michael loved to take baths. It gave him a feeling of weightlessness that he really seemed to enjoy. Would you like to take a bath?\"\n\n\"That would be awesome. I haven't taken one since I got home--our tub was just too deep for me to manage.\"\n\n\"Well, try it out and see if you want to get one like it.\"\n\nThey rolled into the bathroom, and Lucas helped Will take off his clothes and get into the tub. He watched the look of bliss on Will's face as the warm water rose up to surround his body. He looked so comfortable and happy. Lucas was less comfortable, mainly because seeing Will naked and wet had given him a tremendous boner. He was beautiful--two kinds of beautiful. From the waist up he was strong and muscled and sinewy, and then below his legs were delicate and pale and laced over with dark, soft hair. The paralysis had wasted much of the muscle in his legs, but they were still beautifully formed. It was the part in the middle that took Lucas's breath away; Will's cock was a work of art. As it lay, at leisure, atop his egg-sized balls, waving back and forth slightly in the running water, Lucas wished more than anything that his touch could bring it back to life. A waste of such fine flesh, he thought.\n\n\"What?\" Will asked, jarring him out of his reverie.\n\n\"What what?\" Lucas replied, looking up to meet his eyes.\n\n\"Dude, you were totally checking me out!\"\n\n\"I was not!\"\n\nWill smiled broadly and laughed. \"You were too! Do I have to remind you that nothing below the waist works any more? I wouldn't want you to waste your time.\"\n\nLucas wasn't sure how to respond to this, so he decided to be clinical.\n\n\"Will, you know that there's still a chance that sexual function could return.\"\n\n\"Yeah, I know. But I don't really hold out much hope for that anymore. Seems like it would have happened by now.\"\n\n\"Have they tested you for nocturnal erections?\"\n\n\"What?\"\n\n\"They can test to see if you get erections when you sleep. Happens to just about all of us throughout the night, and especially in the morning. You know, like when you wake up with a boner, and you want it to go down so that you can get in the shower and not have every one in the unit looking at your--well, unit.\"\n\nWill chuckled. \"How do they test that?\"\n\n\"They fit you with a pressure band--around the base of your penis--and a probe goes up your butt to record some internal readings. Then in the morning, they download the data and find out if you're boning up at night.\"\n\n\"Why do these things always involve something going up the butt? I swear, you VA guys are all alike. If we just let you at the butt all our dreams can come true.\"\n\nLucas laughed, trying hard not to think about Will's butt, which was, like everything else on him, sculptural.\n\n\"So, no, I don't think that I'll be sticking a probe up my ass to see if my dick gets hard,\" Will concluded, and then closed his eyes to soak in the warmth of the bath.\n\n\"But if you are getting hard during the night, you'll know that the nerves and vessels are intact, and you can work on getting back to normal sexual function.\"\n\n\"I don't think I'm up for it right now, if you get my meaning,\" Will said.\n\n\"Well, there's an easier way.\"\n\nWill's eyes flew open. \"I knew it! You want to give it a crank, don't you?\"\n\nWill laughed as he said this, which Lucas was relieved about but completely befuddled by. Oh, how he did want that, but he wouldn't. Couldn't.\n\n\"No. Amazing as it seems, I don't want to jump you.\" He did, but not unless Will wanted it too. \"What I was thinking is that tonight I could check to see whether you, um, firm up as you sleep. Then you'll know, without anything having to go up your butt.\"\n\nIt was a risky suggestion, but Lucas had blurted it out anyway. Now he held his breath.\n\nWill considered this idea, then squinted at Lucas. \"In the interest of science only, right?\"\n\n\"Right.\"\n\nWill thought for a moment more.\n\n\"Okay, I'm in.\"\n\n* * *\n\nLucas couldn't believe what was happening. The man he had been helping for months, whom he had fallen pretty hard for, was in his home, and would be in his bed, naked, with him tonight.\n\nAfter Will's bath, and Lucas's shower, they went to the bedroom and stopped, somewhat awkwardly, before the bed.\n\n\"Ready?\" Lucas asked.\n\nWill nodded. \"Ready.\"\n\nLucas picked up Will and placed him back on the bed--his side of the bed, as Lucas shocked himself by thinking--and took off his t-shirt. He then slid his shorts off down his legs, and marveled at the beauty of this man who would be sleeping next to him tonight.\n\n\"Are you sure that you're going to be able to wake up through the night to check on me?\" asked Will.\n\n\"Are you kidding me? I won't be able to sleep a wink knowing that you're there all naked and helpless. I'll be trying hard to control myself.\" Lucas meant to be funny, and also completely truthful.\n\n\"Yeah, right,\" Will replied, swatting at Lucas with a pillow. \"Now get in.\"\n\nLucas went around to the other side of the bed, and pulled back the sheets.\n\n\"Uh-uh, wait a minute there, chief. If I'm going to be naked, you gotta be naked too. Fair's fair.\"\n\nLucas willed his cock not to respond to this provocation; he was completely unsuccessful. Nevertheless, he stripped off and climbed into bed. Will caught a glimpse of his erect cock as he pulled the covers over.\n\n\"Whoa. Even when mine worked it didn't get that big.\"\n\n\"Er, thanks?\" Lucas was unsure of the polite way to respond to compliments from a straight man about one's penis size. \"Yours is pretty hefty too.\" No, that probably wasn't the right thing to say.\n\nWill chuckled. \"Here's something I've always wondered. What do you see in guy's stuff that is so great? I mean, I like mine and all, and I certainly spent a good part of my teenage years giving it all the attention I could, but I've never really gotten what the attraction is.\"\n\nWere they really going to have this conversation now? In bed? Naked?\n\n\"It's not the 'stuff,' really,\" replied Lucas. \"At least it never has been for me. It has to be attached to someone I'm attracted to, not just in the way he looks, but in his personality, his character. If someone has an awesome personality, the way his dick looks makes no difference at all. I would love it because I love him.\"\n\nWill considered this for a moment, then nodded.\n\n\"I think I get it. It's like how straight guys think about tits. You know, if the tits are great, then you'll find a way to love her personality.\"\n\n\"Yeah, that's not really the same thing. At all.\"\n\n\"I know, I'm just yankin' your chain.\"\n\n\"Heh, good one,\" Lucas replied. This was going to be harder than he thought. Why did Will have to be so fucking charming?\n\n\"Well, good night,\" Will said, with a yawn. \"Let me know if something comes up in the night, okay?\"\n\nLucas laughed. \"I will. Now go dream about supermodels or something.\"\n\n\"You have now idea how straight guys work, do you?\"\n\n\"Nope. Not a straight bone in my body.\"\n\n\"I find it hard to believe you've never had a straight bone in your body. You talked me out of my clothes and into your bed lickety-split. I think you could get anyone you wanted, straight or gay.\"\n\nLucas tried to breathe.\n\n\"And Lucas?\"\n\n\"Yes?\"\n\n\"Thanks, buddy. You're awesome to do this.\"\n\n\"My pleasure. Seriously.\"\n\n\"I know,\" giggled Will, who was asleep within seconds. An important skill on deployment, Lucas knew, to grab sleep when you could.\n\nLucas kept a close eye on Will throughout the night, checking for signs of stirring under the thin sheet that covered him. There was no motion at all, though Lucas had plenty to look at: the way that Will's eyelids flicked when he dreamed, the tensing of his abs as he breathed deeply, the way his collarbone stood out in high relief as his muscles tensed in response to something in his dream.\n\nAs dawn crept into the room, Lucas was blinking long, slow nods and fighting to stay awake. This would be the most crucial point, as the pre-waking erection is the most reliable indicator. He watched Will's crotch closely, hoping to see some movement. Desperate, he slowly lifted the sheet off Will's slumbering body so that he could get a closer look. He moved gently until his face was less than a foot away from Will's crotch, close enough to see the pubic hair curling around the base of his sleeping cock, close enough to see the balls moving slightly in their sac. Lucas pleaded in his mind for Will's penis to come to life, to give him some sign of hope. The room was fully light now, and still no movement. Shit.\n\nJust as Lucas was about to pull the covers back up, he saw it. A slight, throbbing movement in Will's cock--just a gentle rocking back and forth in time with the beating of his heart. Then it began to move, to stretch upward. It lengthened, slowly at first, and then more quickly as the flowing blood filled and stiffened it. Lucas was thrilled, and he had to stop himself from laughing in surprise and excitement. He didn't wake Will, because that would likely stop the growing erection; he wanted to see how hard it would get. It continued to grow, to a length that surprised Lucas; clearly Will's compliment on his own erection was given from a position of strength. Lucas was certain that Will's was longer than his, if slightly thinner. It was beautiful. And it was hard, which was the best news ever. He could hardly wait to tell Will.\n\nHe replaced the covers, and settled back on the pillow to get a little sleep. It would be a good morning.\n\nPebbles woke them again, registering her displeasure with all of this sleeping in. Lucas lifted her off the bed and would have dropped her out the window if he could have reached it. But Will was awake now too, and he turned to Lucas.\n\n\"So, did I have a hard night?\"\n\nLucas smiled. \"No, but you did have a hard morning.\"\n\nWill was elated, at first. \"Whoo hoo! I can get a hard-on! When I'm asleep!\" He considered this further. \"When there's nothing at all I can do with it. Yay...\" He trailed off.\n\n\"Oh, ease up on yourself. The fact that you can get an erection means that the function is there. Now you just have to work on making it happen when you're awake.\"\n\n\"Yeah, but what if I can get it up but I can't shoot? Fat lot of good a stiffy does me if I can't come.\"\n\n\"Well, we don't know that part yet. You might be able to ejaculate--we won't know that until you try.\"\n\n\"But I have tried! For the first few weeks I tried every day--sometimes several times a day. I tried stroking it, I used Juliet's massager thing on it, I did everything I could think of. No dice.\"",
        "\"Well, maybe it took a while for the function to return. You could try again.\"\n\n\"Right now, with you here watching me?\" Will grinned at Lucas.\n\nWhat did that grin mean? Lucas was completely unable to figure Will out.\n\n\"No, of course not! I'll leave you alone to try.\"\n\n\"Oh hell no! You're my lucky charm, buddy, and you're not going anywhere. But no touching, okay?\"\n\n\"Promise. Should I look the other way?\"\n\n\"Nah, you were watching this morning when it happened, so you can watch again. Wouldn't want to jinx it.\"\n\nLucas shook his head in disbelief. The stuff this guy comes up with.\n\n* * *\n\nWill pulled the covers off, revealing his cock in its seemingly perpetual slumber. He gingerly wrapped his fingers around it, teasing it with his fingertips, rubbing gently over the head and down the long, soft shaft. Lucas was rapt as he studied the technique. Will increased the tempo, and varied the stroke, and did everything he could think of, to no avail. He slowed, clearly disappointed.\n\n\"Well--\" he began.\n\n\"Wait! I know!\" Lucas turned to the nightstand and grabbed a bottle of lube he kept there. \"Try this!\"\n\nWill looked at the bottle, then at Lucas. He nodded.\n\nLucas opened the bottle and squirted a bead of lube up the length of Will's cock.\n\n\"You could have just put it into my hand,\" Will said, teasing.\n\n\"Sorry, I just got a little excited,\" Lucas replied.\n\n\"Let's hope it's catching.\"\n\nWill's hand moved slickly up and down his shaft, the lube crackling. His cock, stubbornly, refused to perform. He tried for several minutes, and slowed as he realized it was not going to happen. He turned to Lucas, his face etched with despair. Then he turned away, and lay still, staring at the wall.\n\n\"Will? Will, it's not as bad as it might seem. There are still things we can try.\"\n\nWill grunted. \"What do you mean, we? This isn't your problem.\"\n\n\"The hell it ain't! As a gay man, I take a limp dick in my bed personally.\"\n\nWill laughed under his breath. He turned back to Lucas.\n\n\"You are something else,\" he said. \"As bad as it gets, you just keep coming back. A guy can't stay depressed around you.\"\n\n\"That's what friends are for, right?\"\n\nWill thought about that, and about how Juliet would have reacted to what had just happened.\n\n\"Yeah, I guess you're right. I'm glad you invited me to stay. I know I still have problems to work on, but you make me feel like I can take them on.\"\n\nHe looked down at the limp member that had betrayed him so.\n\n\"You know, it's funny. When you're young, you take hard-ons for granted. You think you'll always have one handy, and you even get them when you don't want them--like when you have to stand in front of speech class. You never think you're going to face something like this. I had this friend in high school,\" Will recalled, \"who was obsessed with finding out how many times he could come in a row. So he started working on it, and then he tells us he can come seven times in an hour. Well, we don't believe him, because, you know, ouch--who would do that? But he insists that he did it, and he's going to prove it. So we go to his house after school one day--all five of us guys--and go up to his room, and he just flops down on the bed, whips off his pants, and starts beatin' it. Damndest thing I ever saw. And he shoots within like 20 seconds of starting, which was kind of surprising. But he just keeps whackin' it, and pretty soon there goes another one. This goes on for almost an hour, and he's just about to do number seven when we hear his mom pull into the driveway. We scatter, and he tries to get cleaned up and dressed before she gets into the house, but he ended up with big wet spots on his shirt where he still had cum on his chest. God, that was funny.\"\n\nLucas just shook his head. \"The stuff straight guys do, I tell ya. It's like a different world.\"\n\n\"What, you gonna tell me that you never did a circle jerk or anything?\"\n\n\"First, that wasn't a circle jerk--that was a live sex show. Second, no. I mean, a bunch of guys standing in a circle, watching each other wank? That's weird, and frustrating. If I can't touch, I might as well be watching porn.\"\n\n\"You don't stand there looking at each other.\"\n\n\"Where do you look, then? And are the rules written down somewhere? Because I would love to read that.\"\n\n\"You're a funny man--a regular comedian. And the circle thing is not weird. I guess you have to have experienced it to understand.\"\n\n\"Is that an offer? If you could scare up a couple of friends as hot as you, I'd be up for giving it a try.\"\n\n\"You know, the worst thing about being paralyzed is not being able to kick your ass. But I am going to make that a physical therapy goal.\" Will grinned.\n\n\"That's the spirit. Now up and at 'em, big guy. Let's get 5 miles in before breakfast.\"\n\nBack from their run, Lucas made breakfast while Will made coffee--it was satisfying for him to be able to do something on his own, and Lucas's house was set up for it. After breakfast they sat and talked--it had become Will's favorite thing to do, as he found Lucas intriguing. Lucas, for his part, simply found Will to be the man of his dreams--with one significant disability. His straightness. No one's perfect, right?\n\n\"So, tell me,\" Will said, wiping the last bit of egg off his plate with a corner of toast, \"Is cooking school part of the mandatory gay training?\"\n\nLucas just stared at Will, momentarily stunned by his cluelessness.\n\n\"I mean,\" Will continued, \"Do all of you do it this well?\"\n\n\"Of course. It's one of the things we all learn at Gay Camp.\" Lucas got up with the plates and set them on the sink, perhaps a little too roughly.\n\n\"Sorry, I didn't mean to offend you.\"\n\n\"You didn't. It's just that for such an open-minded guy you seem to have very little beyond stereotypes to work with. Did you really get to know any of the gay people you've met?\"\n\n\"When you're in a combat situation, you get to know people really well really fast. But you get to know things that matter: does he shoot well? Can she fly us out of this valley? Does he really have my back? We didn't exactly have the leisure to cover cooking and decorating and all that. And, no, I haven't really known any gay people outside of the ones I met during my tour. So perhaps some of my ideas are a little stereotyped. I'm sorry, I'm doing the best I can.\"\n\n\"It just seems funny to me that you are so accepting of gay people, and yet you don't really seem to know what being gay means.\"\n\n\"What it means is that you should be treated exactly like everyone else. That's what America means. That's what I joined up to defend.\"\n\n\"You should wave a flag when you say that.\" Lucas smiled despite himself, intrigued by this patriotic side of Will.\n\n\"Shut up. I love my country, even when it does the wrong thing sometimes. Don't Ask Don't Tell was a fucking joke, and we all knew it. And we all are happy to see it go. I'm still proud to live in a country where we can acknowledge our mistakes and move on without having a coup or something. America is pretty durable, and I think that's awesome.\"\n\n\"You sir, are a patriot,\" Lucas announced, in his most dignified voice, and he raised his coffee mug in salute.\n\n\"So, now, tell me about this Gay Camp.\"\n\n\"Shut up, dickwad.\"\n\n\"See, now, that's just what a straight guy would say. Are you really sure you're gay? They find out you're talking that way they might cut up your membership card.\"\n\n\"Would a straight guy sit up all night watching your cock?\"\n\n\"Would a gay guy sit up all night watching my cock and not touch it?\"\n\n\"Just because I'm gay doesn't mean I'm going to grope you when you're unconscious.\"\n\n\"Yeah, but look at it from my point of view. You say you're gay, you tell me I'm hot, and then we spend all night naked in bed and you don't even cop a quick feel? How could I not be insulted?\"\n\nLucas just stared at Will, his jaw slack. What the fuck?\n\n\"Will, I wouldn't do that. You're straight, and I'm not really interested in complicating your life by mashing on you. And what would happen if I did? Where would it lead?\"\n\n\"Relax, dude! I was kidding. Mostly. I think. Look, here's the deal. I'm trying to figure out if I have any sex life ahead of me at all. Going through this, I'm starting to think that I'm just never going to be a sexual being at all any more. I mean, the woman who vowed to love me in sickness and in health took a good look at my sad, broken junk and got the hell out of Dodge. Now, I respect that you are gay, and I trust you not to do anything that might threaten my sexual identity or whatever. But you have to understand that for someone who thinks his sex life is probably over, sleeping with a gay guy who's not even interested in him is kind of a blow.\"\n\nLucas was stumped again. No words came to him at all. Will tried again.\n\n\"Look, I know this is incoherent. I don't want you to do anything sexual with me. But I want you to want to do something sexual with me. Does that make any sense at all?\"\n\n\"Actually, it's the first thing you've said that makes sense,\" Lucas replied.\n\n\"Good.\"\n\n\"I mean, it's stupid, but it makes sense.\"\n\n\"Gee, thanks for your support.\"\n\n\"Think about what you're asking me to do: tell you that I want you, but not to actually touch you. Or to touch you while you're sleeping and then, what? Tell you I touched you? Lie to you and tell you I wanted to touch you, but didn't? This is all pretty much around the bend, Will.\"\n\n\"Well, when you say it that way it doesn't really make much sense. But honestly, I don't know how much sense sex makes even under ideal conditions. Women say no when they really mean yes, except when no means no, except that no should always mean no, except that it sometimes means yes. I don't know what I want anymore, except that I know I want to be able to have sex again, and maybe I'm not all that particular about what kind.\"\n\n\"So where does that leave us?\" Lucas asked, a little dizzy from the twists and turns this conversation had taken.\n\n\"I don't know. If you could fix my cock, I'd let you do anything you wanted.\"\n\n\"But what could I do that Juliet couldn't?\n\n\"Oh, come on. Everyone knows gay guys are better at that kind of thing.\"\n\nLucas's jaw was becoming used to dropping open.\n\n\"What, now?\"\n\n\"That's what just about every guy in my unit would say. If you want love, marry a nice woman. You want a good blowjob, find a fag.\"\n\n\"Charming.\"\n\n\"I would take it as a compliment.\"\n\n\"Would you, now?\"\n\n\"Sure,\" Will continued. \"Having straight guys acknowledge that you're good at what you do? Why isn't that a compliment?\"\n\n\"Because blowjobs aren't what I do. I'm an actual person, not a walking stereotype.\"\n\nWill sighed in exasperation.\n\n\"Okay, let me try to spell this out for you. I didn't mean for this to be a whole conversation on gay identity and stereotype and whatever the hell else we're talking about. I was just trying to tell you you're an amazing cook, and I love what you make. And you're an awesome therapist, and I love what you've done with my body. And you stuck by me when no one else would, and I love you for that.\"\n\n\"You love me?\" Lucas gasped, sounding far too much like a middle-school girl.\n\n\"Yeah, I do. You took me in, you helped me, you were there for me when no one else was. Of course I love you. And I want you to know how much I appreciate everything you've done for me.\"\n\n\"Well,\" Lucas said, trying to keep on an even keel, \"I have to say in return that it's been great to have someone in the house with me again. And I am inspired by your spirit and determination. And I ... um ... I ... love--\"\n\n\"I know, I know. You don't have to say it. Geez, you gay guys are sure awkward with your emotions,\" Will laughed as he wheeled out of the kitchen.\n\n* * *\n\nAfternoon found them on the porch again, watching squirrels cavort in the trees.\n\n\"So, should we get you moved into the guest room for tonight?\" Lucas asked.\n\nWill looked at him, clearly taken aback by the question.\n\n\"You really must think I'm hideous,\" he sniffed. \"Can't even stand to be near me, huh?\"\n\nLucas grumbled under his breath. \"Look, you have to stop doing that. I've been honest with you; you know that I find you insanely hot, and I would be all over you if it's what you wanted. But you don't want that. So why put on the big mopey act when I ask about moving you to the other bed? You can't keep doing this, Will.\"\n\nWill looked hurt.\n\n\"I don't mean to be that way. I just meant--\" he was stopped by the sudden appearance of tears in his eyes. He sniffed, and wiped his eyes. \"I just meant that I don't think I'll ever be attractive to anyone again. Knowing that you find me hot is about the only thing that is keeping me going right now.\"\n\n\"Will, I'm sorry. I didn't mean to snap. I can't imagine what this is like for you.\"\n\n\"A big pile of hell, is what this is like.\"\n\n\"So, we sleep where we've been sleeping, and same rules apply?\" Lucas asked. He wanted to be sure the rules of engagement were clear.\n\nWill turned and looked out at the purple smudge where the sun had set. \"No,\" he finally said, almost too quietly to be heard.\n\n\"What did you say? I didn't hear that.\"\n\n\"I said no.\"\n\n\"No what?\"\n\n\"No, I don't want the same rules to apply.\" Will turned to face Lucas. \"I want to see if you can do it.\"\n\n\"Do what?\"\n\n\"Make it work.\"\n\nLucas was lost. \"I don't mean to be dense, but what are we talking about?\"\n\nA smile played around the edges of Will's mouth. \"What we're always talking about. My dick.\"\n\n\"Are you saying that you want me to try to help you get an erection?\"\n\nWill blushed--a first for him. He looked down.\n\n\"Yes. That's what I'm saying. I want you to try. I need to know.\"\n\nLucas was silent for a moment.\n\n\"I don't know, Will,\" he finally said. \"I'm not sure that's a good idea.\"\n\nWill looked up at him, clearly surprised.\n\n\"Why?\"\n\nLucas sighed in exasperation. \"Because it crosses a line, that's why. And once we cross that line, I don't know what happens. To us.\"\n\n\"I don't get it. Remember when I got the new chair, and my shoulders were all out of whack because of it? And you massaged me for an hour, every day, for month? You made it possible for me to use this chair. How is this different? You'd just be helping me regain something I've lost. That's what you do, isn't it?\"\n\n\"But that was part of my job. This isn't.\" What he didn't say was that the VA only allowed for a 20-minute massage twice a week for two weeks; the rest of the time he'd been working off the clock to rub Will down.\n\n\"So, you're not even going to try? This is a line Juliet wouldn't cross either, you know. The uro team told her something she could try, and she freaked out. I'm out of options if you say no.\"\n\n\"I want to help you, but it's a huge risk.\"\n\n\"Hey, if it works, great. If it doesn't, then it doesn't. I haven't lost anything.\"\n\n\"That's not what I meant.\"\n\n\"What, then? What's the risk?\"\n\n\"Us,\" Lucas said, quietly.\n\nWill cocked his head, trying to figure what he meant. He waited for Lucas to continue.\n\n\"You know those 'fags' your buddies talked about, the ones who know how to give blowjobs?\"\n\n\"Lucas, I said that that was something we joked about, but--\"\n\n\"How many of them, do you think, were friends with the fags who blew them? Once the cum dried, do you think they went out and got a drink? Hung out on the weekends?\"\n\n\"I don't--\"\n\n\"I'll tell you. No. No, they weren't friends. They never saw those guys again. Because the only way for them to stay manly men was to never, ever lay eyes on the little fag who blew them. If they did, that would mean they were fags too, and they can't have that, can they?\"\n\nLucas was shaking with silent rage, and something more--something that was causing tears to well up in his eyes.\n\n\"So that's why I can't do it, Will. I won't risk that. I won't have you get up out of my bed, and roll out of my house, and never look back. That would kill me. I won't ... I can't ...\" His voice broke into small, quiet sobs that he tamped down as best he could.\n\nWill looked stricken. He studied the pain-wracked face of his friend, trying to see what lay behind the tears.\n\n\"Who was he? Who did this to you?\"\n\nLucas jolted. He tried to imagine how this strange, beautiful man seemed to be able to read him so clearly. He saw Will's eyes welling with empathy, his eyebrows raised in open attention. He looked down at his hands.\n\n\"Jason. His name was Jason. We roomed together when we started with the VA. Oh, god, Will, he was gorgeous. From the first moment I saw him I was done--head over heels. For months, we did everything together--dinner, movies, camping trips--we were together 24/7. He was straight, and made it clear to me that there was no wiggle room on that at all. But I was too young and stupid to listen to him, and I kept at it. I would do things for him, try to get him to see how much I wanted him. Finally, one night, he let me touch him. I don't know why--maybe he was just all pent-up and between girlfriends. I don't know. But that night, he let me. And I was so excited. I thought my dreams were going to come true. I went at him like a flock of starving hookers, and he loved it. I blew him three times that night, until he was exhausted. He even held me as he fell asleep. I was in heaven.\"\n\nWill nodded, rapt.\n\n\"And then in the morning I woke up and he was dressed and out the door before I could say anything. That was it for us--he never spoke to me again if he could avoid it, never spent time in the room when I was there. He put in for a transfer that day, and was gone for good within a month. Never a fucking word. It was over.\"\n\nWill put his hand on Lucas's arm. Lucas looked at him, right into his eyes.\n\n\"I am so sorry.\"\n\n\"I can't let that happen to us, Will. It's like a poison is released, and it's over. I don't want to lose you that way.\"\n\n\"You won't lose me.\"\n\n\"That's what you say now, but you can't know what will happen. I do.\"\n\n\"How can you ever know what will happen when sex is involved? I mean, I've been with women who seemed perfectly normal and then went completely ape-shit once we hit the sheets. Next morning it's all sideways and you have no idea what the hell happened.\"\n\n\"This is a little different, Will.\"\n\n\"Why? I know women all react differently to sex--are you saying that men are all guaranteed to do the same thing? How can you know what will happen?\"\n\n\"Because straight men don't fall in love with gay men. It can't work. At least not for long. Sure, maybe I could have sucked Jason off every night for the rest of the time we were on that rotation, but it would have ended. I would have wanted to have a real relationship with him, and he would have been trying to find Ms. Right. No happy ending possible there.\"\n\n\"So you don't think people can switch teams? We can only do one thing?\"\n\nLucas looked at Will in disbelief.\n\n\"Are you really sitting there trying to convince me that perhaps the next straight guy I manage to finagle into bed with me may suddenly realize that he loves my cooking and my decorating sense and decide, what the hell, he might as well start being gay too? Is that seriously what you are suggesting? Where I live--you know, in reality--that just doesn't happen.\"\n\n\"Why not?\"\n\nLucas was pretty much at the end of his rope. Again.\n\n\"Think about it, straight guy. How likely are you to wake up tomorrow and decide that you're going to be all into--what was the word you used? Oh yeah: guys' 'stuff'? What are the odds on that one?\"\n\nWill was silent for a moment. studying his lap. When he spoke, it was almost inaudible.\n\n\"It would be easier.\"\n\n\"What?\" Lucas could not trust his ears.\n\n\"I said that it would make a lot of things easier.\"\n\n\"What the hell does that mean?\"\n\nWill swallowed. \"It means that if I could wake up tomorrow and realize that I loved you--not in the best friend sense, but really loved you--my life would be great. I mean, you are the kindest, sweetest guy I've ever met. You've opened your house to me, not to mention your bed, and treated me like I really matter. It would be heaven to stay here, and eat your cooking, and laugh at your jokes, and go to bed every night knowing I would never be alone again because you know everything that's broken on me and you love me anyway. I would be happy, really happy, for the first time since all this started.\"",
        "\"Oh my god, Will.\" Lucas sat for a moment, trying to take it all in. \"I don't know what to say.\"\n\n\"How about you get out your instruction manual from Gay Camp and find a potion you can whip up to make me all gay?\"\n\n\"You can't make people gay.\"\n\n\"Well, not with a potion. But there's something else that might work. You just have to try.\"\n\nLucas looked at Will, at his pleading eyes, his sweet smile. Oh, god, was he really going to do this?\n\n\"Will, I need to know first. You won't get up and leave tomorrow morning. No matter what, we have to at least be able to talk about it, okay?\"\n\n\"Depends on what's for breakfast,\" Will answered. Then that grin. \"I promise, I do solemnly swear, that I will stay, no matter what. I am going to redeem straight guys in your eyes.\"\n\nLucas shook his head.\n\n\"I know I'm stupid, but I'll do it. Because I love you. Remember that, okay? I'm not doing this because you're hot. I'm doing it because you're my best friend.\"\n\n\"You saying I'm not hot? What kind of fag are you if this doesn't get you going?\" He pulled off his shirt in one fluid motion and flexed his abs so that all eight slabs of muscle were clearly outlined.\n\n\"Fuck.\" That was all Lucas could say as he ran his eyes over Will's toned torso. \"Let's go.\"\n\n\"Now we're talkin'.\" Will rolled toward the bedroom, with Lucas following along, watching with fascination the muscles flexing across his broad, strong shoulders.\n\nThey arrived in the bedroom, and Will rolled up right next to the bed. He leaned over and hoisted himself up on it, then turned to arrange himself in a pose he hoped was both casual and eager. As Lucas watched, he untied the string that cinched up the waistband of his sweats, and then slipped them off. This left him wearing just his white boxer briefs. He turned to Lucas.\n\n\"I figure I'd leave you something to unwrap. You know, build the anticipation.\" He grinned.\n\n\"You are a considerate man,\" Lucas teased him. Secretly, he was thrilled that Will had left his underwear on. He looked model-perfect in his easy recline on the bed.\n\nLucas then had to consider how to go about this. The relatively few men he had brought to his bed--working so much, he had few opportunities for dating, and with Michael to care for, little time--had arrived here as a natural progression from making out in the living room, say, or soaping up in the shower. This was different. Will lay there, waiting for him, and only him, to make the moves. It was a little odd. Totally hot, but a little odd.\n\nLucas walked over to his side of the bed, and climbed on. He smiled somewhat awkwardly, at Will, and then looked down at the work that lay ahead of him.\n\nHe reached out for the waistband of Will's underwear, and heard Will breathe in sharply. He pulled back.\n\n\"You okay?' he asked, nervously.\n\n\"Yeah. I'm just a little nervous.\" Seeing Lucas's reaction, he continued. \"Not about you! I'm just nervous about whether this will work. That's all. Stage fright.\" He grinned.\n\n\"Okay, then.\" Lucas replied. \"I'm going in.\"\n\nHe hooked his fingers under the waistband, and pulled the boxer briefs down. That lovely cock sprang into view, nestled atop those lovely balls. Seeing them, their beauty, made their malfunctioning all the more tragic. It was like a Ferrari with no engine. Lucas slipped the underwear off and tossed them aside.\n\nHe looked at Will, laid out before him, and marveled at the circumstances that had brought him here. If his convoy had left a little later, if Juliet had been a little more supportive, if if if. But he was here, and he wanted this, and so.\n\nAs Lucas reached his hand out for Will's cock, Will grabbed his hand, stopped him.\n\n\"You wouldn't do this fully clothed with someone you were really, you know, doing this with, would you?\"\n\nLucas shook his head, wondering...yet knowing exactly where this was going.\n\n\"Will, I don't think it's a good idea for me to take off my--\"\n\n\"Look,\" Will interrupted. \"I'm going to let you in on a little straight-guy secret here, okay? Sometimes we don't really feel like having sex. Maybe it's been a long day, or we got yelled at for something at work, or we just would rather sleep. But if we can't get it up, then we're going to have to talk about it. About our feelings. About our relationship. And no straight guy wants to spend three hours doing that, so we figure out how to get it up. And the best way I've found to do that is going down on her, because--\"\n\n\"Can we please do this without reference to lady parts? Please.\"\n\n\"Stay with me for a minute. It'll be worth it. Now, the reason that going downtown is the answer is that there's nothing that gets the bone on more than knowing that she's getting off. Knowing that you are giving her pleasure, that's she's moaning because of you? Bam--every time.\"\n\nLucas shook his head in confusion. \"Why are we talking about this?\"\n\n\"Because what I'm saying is that knowing that the other person is into it is what makes the difference sometimes. That's why I want you to take it off.\"\n\n\"I still don't get this,\" Lucas sighed, but he pulled his shirt off over his head anyway. \"There, happy?\"\n\n\"No. How does that help me see that you're into it? I can't see it.\"\n\n\"What? You want to see my--oh god, Will, you can't be serious.\"\n\n\"I am totally serious. If I could see that you are getting off on getting me off, I think it would really help.\"\n\nLucas was stumped.\n\n\"Why would you...a straight guy ... I mean, Jason never wanted to see me naked, ever. And now you're asking me to--\"\n\nWill grabbed Lucas by both shoulders. \"I'm ... not ... Jason,\" he stated slowly, emphatically, looking right into Lucas's eyes. \"He didn't care about whether you were into it. I do. He left you. I won't.\"\n\n\"Will, I ... I don't know what to say. Are you sure?\"\n\n\"I am,\" Will stated simply.\n\nLucas got up off the bed. He unbuttoned his jeans and slid them off. He noticed, then, that Will was watching him. Was he just trying not to be Jason? Did straight guys look at each other that way? He shucked off his boxers and stood by the bed, his half-hard cock pointing directly at Will. Lucas would normally be embarrassed by such a display, but this time he needed to know that Will wouldn't freak out when confronted by another man's erection. He wasn't, evidently. He looked at it, then looked up a Lucas.\n\n\"Well, that's quite a compliment,\" he said, nodding at Lucas's bobbing cock. \"I did that?\"\n\nLucas nodded.\n\n\"Awesome,\" Will decided, then lay back on the pillow, his hands folded behind his head.\n\nLucas shrugged, and mounted the bed, naked and careless, then stretched himself out next to Will. He reached out again for that beautiful cock, and he wrapped his fingers around it. His own cock responded instantly, throbbing up fully hard and urgent. He ran his fingers up and down Will's penis, and then strayed down below to tickle his balls. This drew a gasp from Will, who was perhaps not expecting his balls to be on the menu today. But he groaned and smiled, and that let Lucas know it was okay to continue.\n\n\"I can feel everything you're doing, and it's awesome,\" he whispered.\n\n\"I'm just getting started,\" Lucas murmured in reply.\n\nLucas returned his hand to Will's cock, and began to stroke it more purposefully. He reached back for the bottle of lube, and he squirted some into his hand. He warmed the gel in his palm, and then spread it along the length of Will's member. It shone slickly in the light, a glistening wonder. He continued stroking, picking up the pace; he reached over with his other hand to rub the head--just the tip--something that always got him going.\n\n\"You are a pro,\" Will said, dreamily. \"Is this getting you going too?\"\n\n\"Look,\" he said simply, rolling back a bit to expose his rock-hard cock. Will looked.\n\n\"Holy shit, man! How do guys take that thing?\"\n\n\"They don't have to, because it's never been this big before. You did this--your hot body, your hot cock, they did this to me. I've never been this hard, never been this big, because I've never been with anyone this amazing.\" These words, while not completely true in every particular, had the effect that Lucas hoped they would.\n\n\"Oh, fuck,\" Will breathed as his eyes rolled back in his head.\n\nAnd then Lucas felt it. He felt a twitch, perhaps a throb, in Will's cock. He wasn't sure at first that it was the sign he'd been looking for, but then he felt another, and then another. He slowed his strokes, feeling his way along, trying to determine if the circumference was growing. He was sure it was. And then, as soon as he felt it, it faded, and Will's cock returned to its resting state. Lucas knew he had to keep trying.\n\n\"I've been with some hot guys before, but you are the sexiest by far. Your muscles make me weak. And your eyes get me so hot--I can lose myself in them. And your cock, oh my god, it's the most beautiful I've ever seen. I want you so badly I can taste it, and I want you right now. You are all mine, all mine.\" This was, Lucas knew as he said it, the absolute truth.\n\nWill groaned, and the throbbing returned. Lucas picked up the pace, and he noticed Will's buttocks making little thrusting motions, as if disused muscles were awakening along with his cock. It was getting hard now, and it was magnificent. Lucas kept up his stroke until Will's cock was a bar of steel in his hand.\n\n\"You did it!\" Lucas called out, amazed at the hot hardness in his hand\n\nWill opened his eyes and looked down. He saw his old friend throbbing up at him, and he grinned like a kid who's just learned to masturbate.\n\n\"Oh, fuck, Lucas! You did it! You fixed me! Oh, god, I love you!\"\n\nIt was only then that Lucas realized he had been thrusting his own hard cock along Will's lower leg, in time with his stroking. To his horror, he felt a sudden, clenching orgasm tear through him, unstoppable. The rush of cum shot out, streaking along Will's leg, splattering the sheets. He tried to ignore it, to keep up the stroking, but of course Will saw it.\n\n\"Oh my fucking god! Oh!\" Will called out, gripping the sheets with his fists. He was clearly over the edge, and Lucas shivered with joy as his own orgasm faded in waves. He gripped tighter and kept stroking, but then--\n\n\"STOP!\" screamed Will. \"Oh god stop!\" He was screaming and every muscle was tense. Lucas dropped his cock, terrified.\n\n\"What's wrong, Will? What is it?\"\n\n\"Cramp! Horrible horrible cramp! Oh, god, something's just seized up in there! It's like a charley horse in my junk! Make it stop!\"\n\nLucas leapt up off the bed, ran to the bathroom, and soaked a hand towel in the hottest water he could get to run out of the tap. He dashed back to the bed and laid the hot towel onto Will's groin, swaddling his cock, balls, and the regions below in wet warmth. He hoped this would help, and soon.\n\n\"Ugh, it's fading now. Holy crap that was awful! I guess the plumbing isn't quite ready for this, huh?\" Will joked feebly; the sweat on his brow showed that he was trying to bluff through the pain.\n\n\"I'm so sorry, Will! This is all my fault--\"\n\n\"No,\" Will interrupted. \"You were perfect. You did exactly what I needed you to do. And you did it better than anyone else ever has. Ever. And I'm not leaving. Okay?\" Lucas was silent. \"Okay?\"\n\n\"Okay,\" Will replied, his fear assuaged.\n\n\"Now, how about you use that nice wet cloth to wipe up the spooge you shot up my leg, hmm?\" Will grinned. \"That was fucking hot, by the way.\"\n\nLucas did as he was asked, and tried to account for his miraculous good luck. How had this amazing man found his way into his bed?\n\n\"There. Sorry about the jizz.\"\n\n\"No apologies. Just tell me why it happened.\"\n\nLucas grinned. \"Because you are so fucking hot.\"\n\n\"And?\"\n\n\"Because seeing you hard made me come.\"\n\n\"And?\"\n\nLucas paused.\n\n\"Because you said you love me. I came because...because I love you.\"\n\n\"Damn right,\" Will said, and then lay back on his pillow. \"Now, I think I'll get a little rest, to try to unsprain my cum muscles, or whatever went tits-up in there.\"\n\nStraight guys. Lucas got up from the bed, dressed, and walked out to the kitchen, shutting the door behind him.\n\n* * *\n\n\"Will?\" Lucas called through the door. \"Will, dinner.\"\n\nHearing no response, he opened the door. Will was asleep, lying just where Lucas had left him several hours earlier. He was still naked, no covers on in the afternoon warmth, and he was breathing serenely. Lucas shook his head thinking about how Juliet could look at this beautiful man and think there was something dark inside him.\n\nHe approached the bed, and saw, to his surprise and delight, that Will's cock was larger than usual, and pointed upward. A very good sign. Without thinking, he reached out and gently stroked his fingers down its length.\n\nSuddenly, Will was upright, grasping Lucas's wrist painfully with both hands. His eyes were wild, his breathing shallow, every muscle tense.\n\n\"Ouch, Will, that hurts.\"\n\nLucas's voice seemed to bring Will around, and he relaxed his grip and lay back.\n\n\"Sorry, I jump a bit when I wake up.\" He turned to Lucas. \"I didn't really hurt you, did I?\"\n\n\"No,\" Lucas said, rubbing his wrist. \"It was my fault. I saw that you were hard, and I wanted to see what it felt like. I shouldn't have done that.\"\n\nWill shook his head. \"Dude, when will you get it through your head? I'm okay with this. I'm okay with you looking at me. I'm okay with you touching me. I'm okay with--well, you.\" He smiled that sweet smile.\n\n\"This is hard for me, because it's so new.\"\n\n\"And it's not for me? I think I'm the one who's stretching the most here.\"\n\n\"Yeah,\" Lucas agreed. \"I guess you are.\"\n\n\"So, what's for dinner?\"\n\n\"Something special. Come on.\"\n\nWill shifted to the edge of the bed and lifted himself over into the chair. He was about to roll out of the room when Lucas stopped him.\n\n\"Naked? For dinner?\"\n\n\"What, there's a dress code now?\"\n\n\"For god's sake, Will, you can't expect me to be able to eat looking at that.\" He pointed to, well, Will's entire body.\n\n\"Oh, fine. Grab me my sweats, and let's go. I tell ya, I'm really beginning to think you're not really gay at all. I mean, who wouldn't want to eat looking at this?\" And here he grabbed his cock and waved it at Lucas.\n\n\"And I'm beginning to think you're not really straight at all, so we're even. Come on, food's getting cold.\"\n\nAs Will rolled into the kitchen, he sniffed the air, as was his habit when mealtime approached. Juliet had never been much of a cook, and of course the Army wasn't either. But Lucas? That guy knew his way around a kitchen.\n\nSomething in the air brought him to a standstill. He sniffed, not believing.\n\n\"Lucas, did you ...\"\n\n\"Yep, I did. Now get over here and eat.\"\n\nWill rolled up to the kitchen island, and stared in disbelief at the plate before him. He looked up at Lucas.\n\n\"How did you know?\"\n\n\"One of the docs in my clinic had been stationed in Germany, and had worked on a soldier from your unit. He said the guy told him about a local woman whose cooking was legendary with you guys.\"\n\nWill nodded. \"She was an old woman who lived near the base, in a tiny little hut with her granddaughter--the only member of her family who had survived. She made a little money by cooking some local dishes and serving them to soldiers who patrolled the neighborhood. Once, when we pushed out the Taliban who had been harassing her, she made this lamb stew with saffron for us that was just amazing. It smelled just like this!\"\n\n\"Well, before your buddy ended up in Germany he got her to tell him the recipe, and he passed it to the doctor. Said it was the best thing he could bring home from the whole experience.\"\n\n\"Oh, that had to be Benny. The guy was all about the food. He caught a bullet on patrol one day. Man, we lit that place up.\"\n\nWill leaned over the plate, smelled deeply.\n\n\"But why,\" he asked, \"Would he give a recipe for Afghan lamb stew to his doctor?\"\n\nLucas hesitated.\n\n\"Because,\" he began, then took a deep breath. \"Because he knew he wasn't going to make it. And he wanted to pass along the only good thing he could.\"\n\nWill looked up, the pain slashed across his face.\n\n\"I'm sorry, Will. I thought you knew.\"\n\nWill shook his head, slowly. He sighed, and then a familiar look of resignation replaced the pain. He had been here before, too many times for this new one to hurt him much more.\n\nThen he leaned down to smell again.\n\n\"Benny was right. This is the best thing he could have brought out of there.\"\n\nHe took a bite of the stew.\n\n\"Oh my god, Lucas. This is it. This is exactly it. How did you do this?\"\n\n\"I got the recipe, and I tracked down all of the ingredients. Wasn't easy--some of them are pretty exotic. But I wanted to make this for you. So, I did.\"\n\nWill squinted at him.\n\n\"That must have taken you weeks!\"\n\n\"It was more like a month and a half. But it was worth it, don't you think?'\n\nWill set down his fork.\n\n\"You did this for me?\"\n\n\"Of course I did.\"\n\n\"But you started planning it long before you knew I'd be here. This is a lot of trouble to go through for someone who was ... um--\"\n\n\"Unavailable? Believe it or not, I didn't make this in an awkward attempt to seduce you. I wanted to do something special for you because I loved working with you, and I thought you would enjoy it. That's all.\"\n\nWill shook his head. \"I can't believe you. Here I thought you were plying me with your wonderful cooking to get me into bed, and it turns out you were just being the nicest guy in the world.\"\n\n\"Well, would it have worked? Would you have fallen into bed with me after one taste?\"\n\nWill ate another big bite.\n\n\"Yes, I believe I would have. This is pretty amazing, what you've done here.\"\n\n\"Heh,\" Lucas laughed. \"I guess I've found that potion from Gay Camp. Eat up--I think you've only gotten to bi-curious, and I want you all the way to flaming by bedtime.\"\n\n\"Yes, sir!\" barked Will, and he tucked into the stew with vigor.\n\nAfter dinner they sat on the porch, watching the sunset, talking, reading. It was still early, but Will was anxious.\n\n\"What's up, buddy?\" Lucas asked, seeing Will's restlessness.\n\n\"I want to try again.\"\n\n\"Try what? There's more stew, if that's what you mean,\" Lucas said, smiling.\n\n\"Thanks, but that's not what I was talking about. I meant the thing we tried this afternoon.\"\n\n\"Ah. Do you think you're ready to go again? That cramping sounded horrible.\"\n\n\"Well, I was thinking about that. See, there was this thing that they wanted Juliet to try, but she was grossed out by it.\"\n\n\"Well, if it involves shaking boobies in your face, I'm afraid I won't be able to help you.\"\n\n\"Very funny. What they wanted her to do was massage my prostate--you know, get things working from inside.\"\n\nLucas considered this.\n\n\"Did they think that would work?\"\n\n\"It was an outside chance. But after today, I think it could help. That's kind of where my cramping was--I wonder if it would keep it from happening.\"\n\nLucas puzzled over this a minute.\n\n\"You know, I doubt that one straight man in ten our age knows where his prostate even is, much less what it feels like. How did you come to be on such intimate terms with yours?\"\n\nWill blushed a bit--quite becomingly, Lucas thought.\n\n\"Well, there was this doc on one of the bases I rotated through. He had a bit of a reputation for being a little too thorough on the physicals, if you know what I mean. Anyway, he asked if I had had a prostate exam recently, and I told him that my civilian doctor had told me I was too young to need one. Well, he had a glove on and lubed up before I could say anything about it, and he bent me over the table and went at it. Everyone always talks about how prostate exams are torture, but either this guy was extremely talented or I just have a happy gland, because it was kind of amazing. As soon as he flicked it the first time I felt like I was gonna pee all over the exam table. Then he started rubbing up and down, and I felt this heat just radiating all through my junk. I looked down, and my dick was dripping--there was a puddle pooling up on the paper cover. It was amazing. From that time on, I've always kind of wondered why everyone hates on the prostate so much. I think mine's pretty awesome.\"",
        "\"Wow. Since that exam, have you played back there at all?\"\n\n\"No. Juliet wasn't into anything anal of any kind, and so I didn't even bring it up. But I'll bet there's a whole chapter in the big gay instruction manual about how to work it, isn't there?\"\n\n\"Actually, I happen to have had a bit of experience in that area,\" Lucas declaimed modestly.\n\n\"Hot damn! Let's get to it.\" Will rolled his chair out of the porch and was halfway to the bedroom by the time Lucas caught up.\n\n\"So, you're telling me that you're ready to try jerking you off again, but this time with my finger up your butt?\"\n\n\"In clinical terms, yeah, that's it.\"\n\nLucas looked a little reluctant.\n\n\"What? I thought you said you had experience. I'm asking you to show me your ass-tickling skills, and you're just standing there? Come on, man, grab the lube and stick it in me!\" He rolled up to the bed and climbed onto it.\n\nLucas watched him strip off his sweats and settle onto the bed, in the same position as before: naked, legs spread slightly, cock at rest, smile on his face. Damn.\n\n\"I think the stew worked,\" he said, as he took off his own clothes and mounted the bed.\n\nHe knelt between Will's legs, which he flexed at the knees to bring his ass into better position. He slipped a pillow under Will's buttocks to provide more lift and access. His hole--his lovely tight pucker, virgin to all but the pervy Army doc who opened this world to him, lay before Lucas now, inviting him to attempt entry.\n\n\"Now, what we're going to do here could be construed, in some circles, as somewhat gay. Are you going to be okay with that?\"\n\n\"Lucas, for the third night in a row we're in bed together. Earlier today you masturbated me while you humped my leg, until you blew a load all over me after I told you I loved you. What part of that doesn't sound gay to you? This gay train has left the station. Get on.\"\n\n\"Fuck me, Will, you are the gayest straight man I've ever met.\" Then Lucas grinned broadly. \"How did I get so lucky?\"\n\n\"Just get up in there, okay? Scientific progress depends on you.\"\n\n\"With pleasure, sir.\"\n\nLucas squirted some lube onto his fingertips, which he then brought to Will's ass. He covered the opening with the slippery stuff, and then applied more.\n\n\"I'm going to poke in a bit now, to get you slicked up. You might want to push down, like you were taking a shit.\"\n\nLucas watching in amazement as the tight knot of Will's asshole blossomed , the shiny pink center opening up as he pushed. Lucas took aim at the delicate tissues, and pushed his slick finger into Will.\n\n\"You okay?\" he asked immediately, worried about how Will would react to penetration.\n\n\"Good to go, chief. Let 'er rip.\"\n\nAs smoothly as possible, Lucas slid his finger all the way in. He remembered his anatomy class and took careful aim before he started pressing along the wall of Will's rectum, seeking the little lump where orgasms are born. He felt his was gingerly along, until he felt its telltale presence. He pushed slightly, and Will moaned. Bingo.\n\n\"Oh, god, that's it!\" called out Will, his back arching, his eyes closed.\n\nLucas ran his finger up and down the lump, and then back and forth across it.\n\n\"Oh, fuck, that's so good!\" shouted Will, clearly transported by the sensations that Lucas was creating.\n\nWith one hand busy attending to Will's ass, the other wandered up to his cock and took hold. Will sucked in a breath of surprise and looked down (his eyes had not opened since Lucas first entered him), and then returned to moaning and rocking his head back and forth on the pillow. Lucas stroked his cock, slowly at first but then with ever more urgent rhythm. He felt two things at once: the cock started to respond by throbbing and thickening, and the prostate stiffened up and protruded more from the front wall of Will's rectum. Lucas responded by stroking harder and faster, and by increasing the pressure on the internal gland.\n\n\"You okay?\" Lucas asked the panting and thrashing Will.\n\n\"Oh god, yes. This is amazing. I can feel everything, and it's so good!\"\n\n\"I can't wait to see how it ends,\" murmured Lucas.\n\n\"You're going to pretty damn quick if you keep that up,\" panted Will.\n\nHis cock was now fully hard, and eager for release. Lucas kept up a demanding rhythm inside and out, and he could feel it wouldn't be much longer.\n\n\"Almost there ... almost there ... almost ... there!\" shouted Will, and Lucas could see every sinew in his torso tighten with the strain. His pectoral muscles stood out in high relief, his nipples fully erect. His fists grabbed the sheets and pulled them back and forth. His cock leaked a constant flow of pre-cum expressed by the pressure on his prostate.\n\nLucas's hand were a blur--he was focused on one thing only--bringing Will to an orgasm. A really really good one. One for the record books.\n\nHe felt something change in Will's response, though. He breathing seemed to be slowing down, and Lucas could feel a little bend in his cock. Lucas was losing him. He needed to do something.\n\n\"Come on, man, do it! Do it!\" Will shouted, desperate for the orgasm that seemed already to be receding from him. \"Harder! More! More!\"\n\nLucas had nothing more to give. He was already working Will's tackle as hard as he could, but it was not looking like enough. Then he realized what he had to do.\n\n\"Will, you are so fucking hot right now. I want you more than I've ever wanted any man. I want you to come, and I want you to come on me right now. Come on me, Will!\"\n\nThe dirty talk was helping, but not enough. Will was staying hard, but he didn't seem to be climbing the stairs toward orgasm.\n\nDesperate times, desperate measures. He hoped Will would understand. \n\nHe leaned forward, crouching near Will's cock, and then he growled under his breath: \"Forgive me.\"\n\nHe opened his mouth, and took Will's cock in. Will gasped, and bucked, and thrashed. Lucas stroked, and poked, and sucked. He felt the change, in his cock, in his ass. He could feel the tremors starting. Then the prostate throbbed as if it had been surprised, and then throbbed again against his finger. And Lucas knew that an orgasm had just been born.\n\nHe kept stroking Will's cock, and rubbing Will's prostate, and bobbing his head up and down. He had to swallow precum every few strokes, which threw off his rhythm slightly. He doubted Will noticed.\n\nWill, as a matter of fact, was screaming. In a good way.\n\nThe first shot of cum exploded into Lucas's mouth. It was followed by another, and another, and another, until his mouth was just about full of the semen that Juliet had been too selfish to find a way to get at. Lucas was proud, and horny, and so fucking in love.\n\nWill was still screaming.\n\nThe cum kept flowing, and the prostate kept throbbing,and Will kept screaming, until finally the spasms subsided and peace began its return.\n\nLucas, still in Will's crotch trying to deal with all of the cum, heard what sounded like laughter, or crying--he wasn't sure. He looked up at Will and saw him doing both. He seemed to be both laughing for joy and crying, as tears were streaming down his cheeks.\n\n\"Will, are you all right?\"\n\n\"All right? All right!?! You do this to me and you have to ask if I'm all right? Of course I'm not all right!\" More laughter, or sobs. Not sure.\n\n\"Will, it works!\"\n\n\"Yeah, I could tell,\" Will replied. \"That's not the problem.\"\n\n\"What is? Are you upset that I sucked it? I know that wasn't part of the deal, but it just seemed like the thing you needed.\"\n\n\"No, that's not it. It's just that ...\" his voice trailed off.\n\n\"What? Tell me--you're scaring me.\"\n\n\"It was the best.\"\n\n\"Well, thanks, I do try.\"\n\n\"No, I mean it was the best I've ever had.\"\n\nLucas blushed. \"So gay guys do give better blowjobs, eh?\"\n\n\"It wasn't the blowjob. It was the whole thing. What you just did to me gave me an orgasm that makes every orgasm I've ever had in my life seem like a warm-up. I came so hard I thought I was going to turn inside out. You have ruined me, Lucas. I may never be able to have sex with anyone else ever again. I think I'm in love. Really in love.\"\n\nLucas wondered how much of this was Will's standard bullshit, and how much was true. He needed to find out.\n\nTearing himself away from Will's lovely pubic area, he slid up alongside. He leaned over him, their foreheads touching, the smell of Will's cum on his breath.\n\n\"Prove it,\" he whispered.\n\nWill looked up at him, their eyes connecting, and he knew what he had to do--no, what he wanted to do. He reached up and wrapped his hands around the back of Lucas's head, and pulled him close. Their mouths met, tentatively at first, and then more purposefully, until they were pressing against each other with every fiber of their being.\n\nFinally, the kiss broke, and they returned to looking at each other.\n\n\"Okay, so that stew needs to be available by prescription only,\" joked Lucas.\n\nWill gripped Lucas's jaw in his hands. \"It wasn't a potion. It was you.\"\n\n\"We may need to face the fact that you are a little bit gay,\" said Lucas.\n\n\"If it's gay to want you next to me, then I'm okay with that. But now,\" he said as he put his arm around Lucas, \"I need to get some shuteye. Coming for the first time in 6 months kinda takes it out of you.\"\n\n\"Yeah, you were working pretty hard there.\"\n\n\"So were you,\" Will grinned. \"Hey ... um ... thanks. For everything.\"\n\n\"You're welcome. Now get some rest,\" Lucas said, as he stroked Will's cheek tracing the strong line of his jaw, feeling his rough stubble and his silky skin.\n\n\"Love you,\" Will murmured as he drifted away.\n\n\"Love you too,\" Lucas whispered, amazed and where they were and how they got here. \"Always.\" And he closed his eyes.\n\n* * *\n\nPebbles launched her daily campaign to awaken the household to her personal needs by, again, landing like a softball in the middle of the bed.\n\n\"Ugh. I'm sorry about the cat. I think we may need to invest in a cat door that locks.\"\n\nSilence.\n\n\"Will?\" Lucas turned over to face Will's side of the bed.\n\nIt was empty.\n\nLucas blinked hard, shook the sleep from his head, and looked again. Still empty.\n\n\"Will?\" Lucas called, more loudly. He sat up; the chair was gone. He looked around the room, searching for some sign as to what had happened. Nothing. There was nothing out of place, no indication at all that the man with whom he had been sharing his bed, his heart, had fled. Then Will remembered it: last night. He had crossed the line last night. Twice. At least.\n\nHe had sucked Will off--first line crossed--and then he had kissed him. That's two. Then they had said those words--they had said they loved each other. Three strikes, and Will was out.\n\n\"Fuck!\" Lucas shouted as he fell back onto the pillows. It had happened. He promised it wouldn't, but it happened anyway. He was alone. Again. Fuck.\n\nA sudden crashing noise from outside the room jolted Lucas out of bed. He raced to the sound, naked and panicked, and found himself in the kitchen, looking at the entire contents of his baking cupboard scattered across the floor. And there, in the middle of it, was Will, looking like the kid who got caught with his hand in the cookie jar.\n\n\"Sorry,\" he said, looking at the mess. \"I was just trying to get a muffin tin.\"\n\nHe looked up at Lucas, hoping that he wasn't upset. He does so love his kitchen.\n\n\"It's okay! It's okay. I'm just glad that you're okay--that you're here. I woke up and--\"\n\n\"Dude, breathe. You're all tense! And naked, by the way, which I have to say is not a bad combo.\"\n\n\"I thought you were gone,\" Lucas said quietly. \"I thought you freaked out and left me.\"\n\nWill backed up his chair so that he could roll around the other side of the island, where the floor was not littered with cake pans. He rolled right up to Lucas, and he put his arms around him. Of course, Lucas was standing, so Will hugged his buttocks and pressed his head against Lucas's stomach. Lucas felt the warmth of Will's embrace, and the scratch of his stubble under his belly button.\n\nWill, for his part, was content to close his eyes and rest his head against the gently ribbed surface of Lucas's abs. It was nice here, soft and hard at the same time, and he thought he might like to stay a while.\n\nLucas felt, with no small amount of panic, his cock rising, responding to Will's proximity, the heat of his body. Lucas knew it would soon brush against Will's throat, or bump into his chin. He had no idea where Will was on the gay-straight scale, but he was pretty sure that being whacked in the face with a boner was out of bounds.\n\n\"Will, I'm going to get some clothes on,\" Lucas said.\n\n\"Mmmm. Stay here a minute longer. You're so warm.\"\n\nThrob. Throb. Throb. Lucas's cock was bobbing higher now, straightening and lengthening, and it would have to make contact soon.\n\nWill looked up at him. \"I'm making muffins for you,\" he said, grinning. \"It's the only thing my mom ever taught me to make, but they're pretty good.\"\n\nLucas's cock, apparently a big fan of hot guys baking muffins, surged. He felt it make contact, striking Will under his jaw. Will's eyes got big, as he realized what had hit him. He released his arms from around Lucas's ass, and looked at the erection bouncing in front of his face.\n\n\"And you'd better take care of this thing before you put an eye out.\" Will giggled, and then he reached out his hand. Lucas couldn't breathe as he saw the hand approach. Will laid his fingers on the head of Lucas's cock, and pressed down. When it was pointing to the floor, he pulled his fingers off, and Lucas's dick flew up and slapped against his belly.\n\n\"Man, someone likes muffins. I'd better get baking.\" Then he leaned forward and planted a kiss on Lucas's hip before rolling back over to the mixing bowl on the counter.\n\nLucas stood there, stunned. And still naked. He turned to walk back to his bedroom, shaking his head at the fucking bizarre weekend he was having. He went immediately to his bathroom where we tugged out a load in short order to discourage his muffin-loving cock from springing up again. He dressed and returned to the kitchen to the smell of freshly-baked muffins, then saw eggs and fruit as well--clearly Will was getting more comfortable in the kitchen.\n\n\"This kitchen is amazing! I would love to have a kitchen like this,\" Will greeted him on his return.\n\nThis stopped Lucas dead in his tracks. It was the first reminder in days that Will wasn't here to stay. Of course he would be going home. Why wouldn't he? Lucas swallowed down the lump in his throat and sat at the island, smiling.\n\n\"This is beautiful. I had no idea--\"\n\n\"That I could cook? Well, I had kind of forgotten I could, it's been so long. So, dig in, tell me what you think.\"\n\nIt was good. It was very good. Lucas could get used to having another cook in the house.\n\nWait. Stop. Will was not going to be another cook in this house. He was not going to be anything in this house. He was going to go back to his house, back to his life, and they would be just friends. If he was lucky.\n\n\"Lucas, what's wrong?\" asked Will, clearly worried by the look on Lucas's face. \"You look like your best friend just died.\"\n\nNo, but his dream of what his best friend could become just had.\n\n\"Oh, I'm fine. It's just that I can't remember the last time someone cooked for me. It's really good. Thank you.\"\n\n\"Least I could do.\"\n\nAs they ate, Lucas's turned over in his mind what he had just realized. Of course Will would be eager to get back into his own home. In allowing himself to slip into imagining a life for the two of them, here, together, he had completely ignored what Will--what any man--would want: self-sufficiency. He doesn't want to be taken care of, he wants to take care of himself. Lucas felt a fool for having lost sight of that. That was his job, after all--to help the wounded find ways to be self-sufficient. He couldn't selfishly stand in the way of that.\n\n\"So, do you want to go to your place today and figure out how to get it whipped into shape?\" Lucas asked, as brightly as he could.\n\nWill stopped chewing and looked at him, surprised by the question. He considered it, though, and then nodded.\n\n\"Yeah, I guess that would be a good idea. Can't just hang around here the rest of my life, right?\"\n\nYes you could, Lucas thought.\n\n\"Great. Let's get going after we demolish the rest of these muffins.\"\n\n* * *\n\nThe drive to Will's house was a torture to Lucas. He had found the man he wanted most in his life, and now he was driving him away, literally. He passed restaurants where he imagined them having dinner; home improvement stores where they would pick out new paint; cafes where they would spend leisurely Sunday mornings with a paper and scones. Every mile brought new, already foreclosed possibilities--things they would never do.\n\n\"Dude, you okay? Your eyes are watering something awful.\"\n\n\"Just allergies. They're always bad this time of year.\"\n\n\"Oh, that sucks. Juliet got migraines from her allergies.\"\n\nThe mention of her name was like a kick in the gut to Lucas. He felt Will being dragged away from him. Nothing good could come of this now.\n\nThey pulled up at Will's house, and after unloading the chair, Lucas grabbed a measuring tape and some catalogs out of the trunk as Will rolled up to the mailbox. There was a stack of mail that he put into his lap, including one with a Certified Mail sticker on it. Apparently the neighbor had signed for it, and then put it on top of the rest of the pile. Lucas watched from the porch as Will opened the letter. He read the first page, and then dropped it into his lap. He sat, unfocused, unmoving. Then Lucas saw that his shoulders were shaking, up and down, as if he were sobbing.\n\nLucas ran from the porch and down the walk to the mailbox. He reached out for Will, and then drew back when he heard the manic gurgling coming from his chest. Was he crying? Or was he laughing? Both? He put his hand on Will's shoulder.\n\n\"Will, what's up? What happened?\" Lucas tried to get a glimpse of the letter that had caused such a reaction, but Will had crumpled it and was twisting it in his hands. Still the sobbing giggles. Giggling sobs? Lucas still couldn't tell. It was hysterical, no doubt.\n\nWhen Will looked up there were tears running down his cheeks. And still he couldn't stop crying/laughing long enough to say anything coherent at all. Finally, he took a deep breath and closed his eyes, and then spoke.\n\n\"She filed for divorce.\" And then he began laughing. And crying, sort of. He was a mess.\n\n\"Come on, let's get you into the house,\" said Lucas, getting behind the chair to push.\n\nWill clicked the lock on.\n\n\"No.\"\n\n\"What? Why not? You don't want to just sit out here on the sidewalk, do you?\"\n\n\"Take me home, please, can we just go home?\"\n\n\"Will, you are home. This is your house.\"\n\n\"No, home. Your place. Can we go now?\"\n\nLucas wasn't sure how to handle this, but he figured that given the shock of the divorce papers, Will could be forgiven for wanting to flee.\n\n\"All right, we'll go. We can do this later.\"\n\nThey loaded back into the car, tears still wet on Will's cheeks, and drove back across the city toward Lucas's house. Lucas wanted at several points to break the silence and find about what Will was feeling, but he wasn't sure how to ask. They arrived at his house without having said a word.\n\nWill rolled up to the front porch and waited for Lucas to unlock the door; he turned and looked out at the neighborhood, up and down the street, and heaved a sigh. Lucas, hearing this, closed the door he had just opened and sat on the porch swing next to where Will had parked. They looked out over the yard for a long moment. Finally, Lucas could hold back no longer.\n\n\"What's going on, Will? How are you doing with this?\"\n\nWill frowned a bit, looking as though he might be holding back yet more tears, and then he heaved a great sigh.",
        "\"I knew it was coming, but knowing it and actually seeing it are two different things. All the way over there I was afraid of what would happen if I looked in the mailbox and ...\" he trailed off.\n\n\"And you found divorce papers.\"\n\nWill turned his head suddenly to Lucas.\n\n\"No.\" He paused, a long pause. \"I was afraid of what would happen if I didn't.\"\n\nLucas's mouth dropped open. \"What?\"\n\n\"You were so amped up this morning about going to my old place and planning and measuring and basically shipping me off, and I knew that if these papers weren't in the mailbox I'd have no reason to be back here. With you.\"\n\n\"But you were so upset by getting the divorce papers--\"\n\n\"Upset?\" Will cried. \"Are you kidding me? I was so freaked out that they might not be there that when I found them I could hardly believe how lucky I was. And then it all became real to me--now that Juliet has filed for divorce, I'm a free man. Free to do what I want, free to turn my whole life upside down if I want. I can start over. And I already know who I'm going to start over with.\"\n\n\"Oh my god, Will. Look, you've had a shock, and you should go slow on making huge changes to your life. Give it some time, figure out what you want.\"\n\n\"I have what I want. I don't need to make any huge changes--I'm already here, and you're here, and none of that needs to change. So, I'm good to go. I'm the luckiest bastard in the world.\"\n\nLucas couldn't believe what he was hearing. And he wasn't at all sure that Will had really thought it all through.\n\n\"Will,\" Lucas said, \"I want you to really think about this. It has been amazing to have you here for these three days, and I've been blissful just to imagine what life could be like if we continued just as we are. But the reality is, Will, that you are a straight man who needed a friend in a dark time, and I was happy to be that friend. But friendship is not really my long-term plan. I would love to make a life here with you, but I can't do it, because you can't do it. At some point you're going to realize that you need to be with a woman in order to be happy, just like I need to be with a man, and that's going to be the end of it. I won't go into a relationship knowing that I would have to share you. I'm not that kind of guy.\"\n\nLucas was worried that he was letting Will down too abruptly, but instead of taking it hard Will was grinning.\n\n\"Hey, come on. I need to show you something,\" Will said, as he turned and headed into the house.\n\nLucas followed--down the hall and to the bedroom. Their bedroom.\n\n\"Now, I want you to sit down on the bed.\"\n\n\"Why? Will, what are you doing?\"\n\n\"You'll see. Just sit.\"\n\nLucas sat.\n\n\"Okay, now I need you to do just one thing for me. Will you do whatever I ask?\"\n\n\"Depends on what it is, actually.\"\n\n\"No, it doesn't. You have to agree or we don't do it at all. And believe me, you would regret that.\"\n\n\"Come on, Will, this is silly.\"\n\n\"No, I'm serious. You have to promise to do what I ask.\"\n\n\"You're not going to give up on this, are you?\" Lucas sighed as Will slowly shook his head from side to side. \"Oh, all right. I promise.\"\n\n\"Excellent. Now ... \"\n\nLucas waited. Will was building suspense, and it was more than he could take.\n\n\"Well? What?\"\n\n\"Take your clothes off.\" Will smiled broadly.\n\n\"No.\"\n\n\"You promised,\" Will said flatly, deadly serious. \"Do it. Now.\"\n\nThis was the voice Will used when ordering suspected insurgents to put their weapons down. It was surprisingly effective.\n\n\"Okay, okay! Don't shoot!\"\n\n\"No promises there, I'm afraid.\" Again the wicked grin. What was he up to, Lucas wondered.\n\nLucas pulled his shirt off over his head, and then slipped his shorts off. He sat in his underwear, looking at Will. Will raised one eyebrow, and Lucas knew what he wanted.\n\n\"You said take my clothes off. I did. You didn't say anything about underwear.\"\n\nWill glowered at Lucas, and then reached out and grasped the waistband of Lucas's boxers in both hands. He gave a tug, and effortlessly tore them into three large pieces, which he then wrenched from Lucas's now bare body.\n\n\"There. That's what I asked for.\"\n\nLucas was, for the first time since he met Will, a little scared of him.\n\n* * *\n\nWill rolled his chair right up to the edge of the bed, and then he reached around behind Lucas's buttocks and pulled him to the edge. There was no hesitation as he wrapped his hands around the base of Lucas's cock. He squeezed hard enough to provoke a gasp from Lucas, and then he leaned forward and, very gently, kissed the tip. Opening his mouth wide, he then swooped down on Lucas's growing erection, taking in four thick, solid inches. He pursed his lips around the fat cock in his mouth, and pulled back with a fluttering suction that Lucas had never felt before.\n\n\"Whoa there, big fella. Where did you learn to do that?\"\n\nWill looked up at him and grinned. \"You really want to know? It's kind of a dirty story.\" He stroked Lucas's cock non-stop while he talked. The man was gifted.\n\n\"Yes, I do. Dirtier is better, actually.\"\n\n\"Well, you can probably imagine that it gets pretty monotonous on deployment--long hours of boredom broken only by moments of sheer panic. To pass the time, we'd have movie screenings--porn movies, that is. We'd watch them together at night in the barracks. We weren't supposed to have porn in places that have strict religious rules, but if you've gone several months without sex, you're ready to break whatever rules you need to in order to get a little jerk-off material. So a couple of the guys would fix their computers so that they could download porn without getting caught, and we would watch it on their laptops.\n\n\"Since access to porn sites was pretty sketchy, we didn't have a lot of choice about what we watched--it was basically whatever the guy who downloaded it was into. Now, one of the best tech guys in the unit was Donnelly. He sometimes downloaded porn for us to watch, and I always made sure I was there if he was showing something.\"\n\n\"Donnelly was the gay one, right?\"\n\n\"Yep.\"\n\n\"So everyone would sit around his laptop and watch gay porn?\"\n\n\"Right. Because that happens a lot in the army.\" Will rolled his eyes. \"No, he chose something that had women in it, but his always had the best looking men in them. Now, you might not think that would make a difference--\"\n\n\"It would to me, but then again--\"\n\n\"Yeah, but then again, it made a difference to me, for some reason. I got to really like the stuff he chose because the guys were as hot as the women. Looking back on it, I should probably have realized that was a sign, but there's not a lot of opportunity for self-reflection when you're on deployment. Donnelly's stuff sometimes had two guys and a girl, and that was really hot. Especially when the guys would, like, bump into each other, or there would be a double-penetration scene. You just know that they can feel the other guy's cock rubbing against their own. I mean, how hot is that?\"\n\nLucas nodded, indicating that he believed it to be hot indeed.\n\n\"So anyway, the Army finds out that people are downloading porn, and they clamp the firewall down. No more sexy. But then Donnelly finds a way around it--his partner sends him an iPod, and loaded onto the iPod is hours and hours of porn. Now, his partner wasn't sending this stuff to please us--a lot of the stuff didn't involve women at all, if you know what I mean.\"\n\n\"I do know what you mean.\"\n\n\"But we're totally desperate by this point, so we watch it anyway. Turns out that the stuff that has chicks in it also has guys who not only do her, but each other as well. Even that wasn't too much for us to handle--we'd just fast-forward through the parts where the guys got busy, and find the next time the chick got in there. There were a couple of guys who stopped showing up for movie night, but the rest of us were okay with it.\n\n\"One night when it was just me and Donnelly in the barracks--it was Mother's Day, and my mom's dead, and Donnelly's was a fundamentalist wacko who wouldn't take his calls--so we were the only ones who weren't in line to use the phone. Donnelly fires up the laptop, and he says to me, 'No fast-forwarding. I want to to see the whole thing.' I agree, of course, anything to get some jack off material. So the video starts up and bam! it's two guys making out. Now, I had never even seen two guys kiss, and these dudes were going at it hard. It was amazing. Then they start sucking on each other's dick, and all I could think was that they did it so differently from the way that chicks in porn do it--you could just tell from watching that they wanted it more than women do. In straight porn, a blowjob is all about making the woman look like she's going to explode if she doesn't get fucked by it, and soon; for guys, you can just tell that sucking is what he loves to do.\n\n\"So I watched Donnelly's video, and I learned a few tricks. And I also learned that I like looking at a hot guy just as much as at a hot woman. Of course, before this weekend that didn't really matter--I was married, so straight I had to be. But now that the divorce ball is rolling, watch out.\"\n\nWill had been stroking Lucas's cock as he told this story, and by now there was a glistening drop of precum at its tip. Will smiled and leaned forward again, stuck out his tongue, and lapped it up. He kissed the tip, eager to get every drop.\n\n\"Oh, god,\" managed Lucas, between ragged breaths, \"So, this is the first time you've done this, but you've watched some instructional videos on the topic of cocksucking?\"\n\n\"Yeah. How'm I doing?\" Will asked with a grin.\n\n\"Fucking brilliant from my perspective. But how's it feel to you?\"\n\n\"Look,\" Will said simply, with a nod down to his lap. Lucas craned his neck forward and saw Will's beautiful cock, upright and hard. There was a tiny crystalline drop at the tip.\n\n\"Ohhhh, fuck,\" groaned Lucas, and he flopped back on the bed, completely abandoning himself to Will.\n\nWill, for his part, was not nearly as confident as he let on. This was a huge departure from anything he had ever done, from everything that he had ever thought himself to be. And yet, as he looked at Lucas, stretched backward across the bed, saw the rapture into which his simple ministrations had cast him, he knew in his heart--in a newly reopened part of his heart--that this was right. He knew, in that moment, that he loved Lucas more than he had ever loved anyone.\n\nHe looked back down at the task at hand, and in a gleeful swoop he stuffed as much of Lucas into his mouth as he could. He loved hearing the gasps and groans that he made, the twitching of his legs, the tensing and relaxing of his stomach muscles. With one hand firmly encircling the base of Lucas's cock, he brought the other hand up to his balls and softly, slowly, stroked his fingers along that wrinkled, furry flesh. This brought more urgent moans from Lucas, and Will massaged more boldly. All the while he kept up the bobbing rhythm on the hardness in his mouth, pausing only occasionally to pull back and kiss the tip, or lick around the flared head, or to try to stick his tongue in the slit. This last maneuver rewarded him every time with a drop or two of salty slickness, which he quite enjoyed. He could do this, he was convinced, for hours. For years. For the rest of his life.\n\nLucas, however, was not going to last hours. He felt the familiar throb in his groin that signaled the approach of orgasm, and he tensed his abs to bring it closer. He raised up, propped up on his elbows, and looked down at Will. That this lovely man, this lovely straight man, would do this to him, with such generosity and vigor, simply amazed him. And it brought him to the brink.\n\n\"Oh god, Will, I'm going to come,\" he growled, eager for the release but wanting to warn Will that it was on the way. Will only sped up his motions, using his hand to stroke up and down the base of Lucas's member, sucking even more devastatingly at the tip.\n\n\"Will, I'm serious. You are going to make me fucking explode!\" Lucas wanted to be sure that Will would pull off before his mouth was filled with what promised to be the load of the century. But he needed release, and now.\n\n\"Oh god! Oh fuck!\" he shouted, and every muscle tensed. Lucas was frozen, pitched over the cliff of a shattering orgasm, beyond caring what happened after. He was floating, he was steel, he was on fire.\n\nWill knew what was coming, and he wanted it. He didn't want the mouthful of semen, particularly, because like most straight men he considered the smelly, sticky, gooey stuff to be an unfortunate by-product; the best feeling in the world leaves the worst evidence. But he wanted Lucas to come in his mouth--he wanted to prove to him how much he loved him. It wasn't the spunk he wanted; it was for Lucas to possess him fully, to mark him as his own.\n\nWhen the first shot blasted hot into his mouth, Will knew he had made a mistake. It was too strange, too overwhelming, too much. The second shot was worse, because it was even bigger. Will was in serious trouble. He looked up at Lucas, who was frozen in place and time, his face both blissful and contorted. He suddenly gasped, and his eyes opened, and he looked down at his surging cock connected to Will's suckling mouth, and he said it.\n\n\"I love you ... I have always loved you .. I can't live without you!\" Each sentence was punctuated by a blast of semen.\n\nSuddenly, Will felt his mouth filled not with smelly, sticky, gooey stuff, but with proof. Proof of Lucas's love. Proof of his love for Lucas. Proof that they could be, together, what he had never imagined two men could be. Will was profoundly happy. \n\nFinally the fusillade relented, and Lucas sighed, raggedly but will deep contentment. Will pulled his mouth off of Lucas's still-hard cock, and looked up at him, at the man whose essence had filled him. He reached down to his own, achingly hard cock, and wrapped his hand around it. Lucas leaned forward to watch, and the idea came to Will in an instant. He smiled up at Lucas, his mouth still loaded with his cum, and then he looked back down. He opened his mouth, and great pearly strings of Lucas's semen stretched down to Will's cock, covering it, running down its length, pooling at its base. Will began to stroke, his prick slick with Lucas's seed, and still more flowed out of his mouth.\n\n\"Oh my fucking god,\" Lucas breathed. \"That is ... oh fuck.\"\n\nThe last of his semen slid out of Will's mouth, and Will looked up at him, his lips coated with the remains. Lucas leaned forward and kissed him, kissed all around his lips, lapping up every stray drop. Their mouths were joined for only a moment, and yet that was all Will needed.\n\n\"Fuuuuck,\" he murmured, and then it hit--his cock, so recently returned to service, shot a spray of spunk straight up into the air. The vigor of the spurt surprised them both, and they looked down in amazement. Which is why the second shot, scattered wildly by Will's frenetic wanking, hit them both in the face. The remaining shots went wide, as Will tried desperately to keep control of himself against the onslaught of his first homemade orgasm in months.\n\nLucas giggled delightedly, and Will caught on too. The laughed, they kissed, and they both knew, without a doubt, that they had come home.\n\n* * *\n\nFrom the park benches the parents watched the action in the sandbox. Their progeny played, and tumbled, and laughed gleefully in the sunshine of this first warm day of spring.\n\n\"Will? Is that you?\"\n\nThe voice that Will had not heard for more than four years fit his ear as if it had never left.\n\n\"Wow, Juliet. Hey.\"\n\n\"How are you, Will?\" She hadn't seen him since she left him in the bathroom, naked and crying. The attorneys had handled their divorce.\n\n\"I'm doing well.\"\n\n\"Well, you look good. Very good, in fact.\" Juliet's eyes wandered over Will's strong chest; the cuffs of his t-shirt sleeves stretched tightly over his biceps.\n\n\"Thanks. I'm in training right now. Going out for the US Paralympic team in biathlon. You know, cross-country skiing and shooting? It's hard work, but it's fun. And in case Finland is ever invaded, I'm your guy.\" They laughed. \"How are you doing?\"\n\n\"I'm good. Here visiting my sister. That's her daughter over there.\" Juliet pointed to a girl of three, who was busily pouring sand over the head of another child.\n\n\"She's cute. I'm sure Dylan doesn't even mind having sand poured on him by such a sweetie.\"\n\nJuliet's head swiveled back to Will.\n\n\"His name is Dylan? So ... \"\n\n\"Yeah,\" Will grinned. \"He's mine.\"\n\nJuliet opened her mouth, and then closed it again when no words would come.\n\n\"Dylan! Come on big guy. Time for lunch!\"\n\nDylan ran, with more energy than balance, over to his dad. He joyfully wrapped his arms around Will's legs, knowing he could squeeze as hard as he liked.\n\nJuliet finally found words.\n\n\"Will, how did you? I mean, what happened to--\"\n\nHe had never imagined seeing Juliet again, so the idea of explaining this to her was not something he had prepared for.\n\n\"Turns out the plumbing is all still connected. Just took a little patience. And the right touch,\" he added, knowing he was twisting the knife a bit.\n\n\"Wow. Well, good for you. He's beautiful.\" She turned back to him. \"So, you found someone?\"\n\n\"I did. Remember Lucas, my physical therapist?\"\n\n\"Yes, I do. He was a good guy.\"\n\nWill just looked at her and nodded.\n\n\"So, he introduced you to someone?\" she prompted.\n\nWill shook his head, still smiling.\n\n\"I don't get it,\" Juliet said at last.\n\n\"It's just Lucas. He and I have been together nearly four years now.\"\n\nJuliet was stunned.\n\n\"So, you and Lucas?\" she asked, too loudly for polite company. She looked from him to Dylan, and back again.\n\n\"Yep. We found a surrogate, the sister of an army buddy of mine, Donnelly. And we decided to take turns. Dylan's from me, and we have a second on the way using Lucas's.\" He beamed, every bit the proud father.\n\nJuliet could only gape.\n\n\"So, do you have any kids?\" he asked, genuinely interested.\n\nShe shook herself back into the present.\n\n\"No, no, not yet,\" she finally managed to say. \"Still haven't found the right guy, I guess.\"\n\nWill reached out and put his hand on hers.\n\n\"I hope you do, Juliet. I really do. I know what the right guy can do.\" He looked down at Dylan. \"Come on, buddy, let's go grab some lunch.\" He turned back to Juliet. \"Good to see you, Juliet. Really. Keep in touch, okay?\"\n\n\"Yeah, you too,\" she mumbled.\n\nDylan hopped onto the platform Lucas had built onto the back of Will's chair, and they rolled off into the distance.\n\nShe watched them go.\n\nSilence.\n\nTHE END "
    ],
    "authorname": "xaviermayne",
    "tags": [
        "military",
        "romance",
        "wheelchair",
        "gay first time",
        "gay romance",
        "bisexual male"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/hope-among-the-deserted"
}