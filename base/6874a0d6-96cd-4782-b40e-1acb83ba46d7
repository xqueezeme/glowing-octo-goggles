{
    "title": "Across the Pond Ch. 05",
    "pages": [
        "Sydney \n\nI. Drift. \n\n\"Did you call him yet?\" \n\n\"No.\" \n\n\"Oh my God, Sydney, call him!\" \n\n\"No!\" Tess huffed impatiently on the other end of the line and not one part of me cared. \"He broke up with me, I think. If anyone is crawling back to someone it's he to me. Or something. You know what I mean.\" \n\n\"I actually don't, because you've turned into a crazy person.\" My bestie wasn't wrong. I was on day nine of the Maxwell Charles Holland III Detox Program and not a damn thing had changed. Still missed him. Still craved him. I couldn't stop thinking of how easily he reads my thoughts, or the impressions left by his touch. My insomnia was back in full force and what little sleep I did get was bombarded with dreams of him. I woke up crying more often than not, which really pissed me off because I wasn't that person, some lovesick chick who couldn't function without her man around. I'd always been more of a ''love 'em and leave 'em'' kind of girl which probably wasn't the healthiest but it sure as hell worked for me. \n\nSo I was completely thrown off track, because after my fucked-up confession Holland picked me up off the floor and carried me to his shower, stripping us both and washing me down in a vain attempt to scrub the memories away while I sobbed uncontrollably. Because when he finished he dressed me in his Ramones shirt and laid me down in his bed to rest. Because he kept me safely in his arms until I cried myself to sleep. \n\nBecause he stayed, the whole night, with me. \n\nWhen I stood in front of his door and he asked me to stay, I panicked. I felt like I had ripped off the enormous scab where my heart used to be and I was bleeding all over the place. I had been exposed in a way that was so massive and foreign, not to mention embarrassing. Deep in the pit of my stomach was always the feeling I wasn't good enough for him and that was all the push I needed. When I was on the plane ride home and all cried out I thought, okay, it's not a big deal. Relationships end. I can do the alone thing. I've done it for years. \n\nWhen I got home and found he'd snuck his Ramones tee into my carry-on I knew it wouldn't be as simple as get over it. A guy cared for me so much he'd given me his favorite shirt with no guarantee he'd ever get it back. \n\nIf that's not love I don't know what is. Which made being separated from him that much harder. \n\nIt was almost easy when I first got back to Connecticut. Secluded in a far-away cubicle at my parent's firm, distracting myself with researching legal articles and organizing briefs and motions. The only contact with the living was when I transferred calls to other parties in the building and then I only had to sound like I had it together for twenty seconds at a time. Dad was thrilled to have me there as if it would spark some dormant desire to go back to law school. Mom saw through my act, even if she wouldn't say it outright: \n\n\"Are you sure you don't want to have dinner with us tonight? I'll make your favorite,\" she offered, her voice weighted with maternal concern. \n\n\"No thanks. I'm not hungry.\" I can't eat. \n\n\"Then how about a spa day tomorrow? My treat. You just look so sad, Sydney.\" \n\n\"Maybe another time.\" When I don't feel like I'm decaying on the inside. \n\nIt was different when I went back to Antonio's. I had to smile and flirt and be outgoing, because that was my bread and butter. I had to be social. I had to engage. I felt like an imposter. It was all a lie, but I went through the motions my first night back. I poured the beer and gave back change, counted pours and gave a polite thank you when I shoved cash into my tip jar. I called for more olives, and I'm sorry, we're out of chardonnay, can I recommend a Riesling instead? I pocketed the numbers given to me from nameless guys to throw away at the end of the night. I wiped down the bar and washed glasses, swept the floor while Tony asked for the fiftieth time if I was okay. \n\n\"I heard you crying in the locker room. You know you can talk to me if you need anything, right?\" \n\nI couldn't. I tried to reassure him I was fine but his questioning eyes told me he knew I was lying. So he counted my drawer and I thanked him, got into my car and came straight home. Cried. Tried to self-medicate with vodka and Ani DiFranco. Cried more. The cycle repeated for a few days until I could bring myself to tell Tess what happened, then that turned into occupying all her spare time by calling and obsessing about it. I think she was officially over it. \"Syd, I love you, you know that; but I can't spend another lunch break debating the whole \"break up vs. taking a break\" Ross and Rachel thing, I can't do it.\" \n\nThis bitch! \"Hey! I listened to you whine constantly when you and Shane split up - \" \n\n\"And you were more than honest when you reached your limit. Now this is me being honest, because I've reached my limit. If you want to get over him, you have to try and put it past you. I will cry and mope and binge on ice cream right along with you. If you don't want to get over him then you need to put on your big girl pants and CALL HIM,\" she yelled sharply before hanging up. I scoffed indignantly. The nerve of some people. \n\n...fine. She was right. \n\nOkay. I can do this. It's just a phone call. I repeated the sentence over and over in my head until I pulled up Holland's number. His picture - a rare moment when I snapped him grinning ear to ear after calling him my beautiful blond boy - made my melancholy intensify. The phone picked up on the second ring. \"Good evening, you've reached Maxwell Holland's mobile. This is Tobias, how may I help you?\" \n\nI was so shocked at the unfamiliar voice I started stumbling over my words like I'd never had a casual conversation before. \"Hi Toby, um, Tobias. This is Sydney. James. My name is Sydney James and I'm a friend of Holland's? I guess?\" \n\n\"Yes Miss James, I am aware of who you are to Mr. Holland - and you are more than welcome to refer to me as Toby,\" he responded with a reassured tone. \"If you'll please hold for a moment I will pull Mr. Holland from his conference.\" \n\n\"Oh, no. That's okay, I can leave a message.\" \n\n\"I have explicit instructions to patch you through to him immediately.\" \n\nI was touched. Then almost immediately scared shitless. \"Can't you just tell him I called? I really don't want to bug him.\" \n\nToby paused. \"I'm sorry, you did call to speak with Mr. Holland, correct?\" \n\n\"Yeah, but - \" \n\n\"Therefore, I have instructions to put you through. If you would please queue for a moment - \" \n\n\"Gah!\" I shrieked and hung up, tossing the phone on the bed before huddling up into my chair. Thirty seconds later it started blasting Luke James and I pulled my Nana's crochet blanket over my head like he could really see me. When the tone stopped and started ringing again I sighed. One trait Holland and I shared was stubbornness and I knew he wouldn't stop calling until I answered. I dropped the blanket on the floor and tiptoed over to where my phone landed, taking another three seconds to get myself together before picking up. \"Hey, Boss.\" \n\n\"Sydney.\" His voice pierced through me like a bullet to the gut and I had to sit before my legs gave out. Smooth as honey and sounding like home. \"Why did you yell at Toby? The poor boy is practically shaking, you gave him quite a fright.\" \n\n\"Sorry. Or, tell him I said sorry. He said you were in the middle of something and I didn't want him to interrupt you.\" \n\n\"He has a direct order to connect you to me no matter what I may be engaged in.\" \n\n\"I know that, I just - \"I stopped midsentence. I didn't want to go down that rabbit hole again. \"All I wanted to do was leave you a message.\" \n\n\"You have me now, so tell me your message.\" \n\nThere were a thousand things I wanted to say but suddenly none of them sounded right, so the only thing that came out was a succinct and definitive \"I love you.\" \n\nSilence. For way too long before he replied in a hushed voice, \"I have loved you for so long, Sydney, I've loved you before I even knew you existed. This entire situation was an absolute horrible idea, I never should have let you leave and I am no longer allowed to make serious decisions about our relationship.\" \n\nHe sounded so pissed off at himself I had to keep myself from laughing. \"So we are still in a relationship? I can put away the tissues and hyper-emotional music?\" \n\n\"Of course we are, why would you think otherwise?\" I didn't know how to answer him. \"You...did you think this was over?\" \n\n\"You never called so I figured when you said 'space' you meant permanently. I unloaded all of that fantastic information on you so dramatically, it's not like I could blame you.\" \n\n\"I would never...I thought it would be best if I gave you a bit of breathing room before we could move on together. I never meant to make you feel as if I deserted you in your time of need, I know how uncomfortable you become when you feel vulnerable and I didn't want to be overbearing. I never wanted you to leave, I thought I was doing the right thing.\" We both fell quiet. \"I fear I am consistently breaking my promises to you.\" \n\nIt took me a second to realize what he was talking about. \"Your heart is safe with me, little one. I swear I won't damage it further.\" \"You didn't, not really. Not damaged, just a little bruised and that's not all on you either, I fucking suck at communicating. Think it's too early for couple's counseling?\" \n\n\"A conversation for another time, perhaps. I need to return to my board meeting, I will give you a ring later if you're available.\" \n\nMy yes was interrupted by a text notification. I pulled the phone from my ear and opened the message from my dad, all it said was At Nana's. Need ride. Bring snacks. I rolled my eyes and got back to Max. \"Actually, I'll call you. Dad and Nana have been hitting the bong again and I have to go haul his stoned ass home.\" \n\n\"The apple doesn't fall far from the marijuana plant, does it?\" he poked fun and the knot that had set up in my chest the moment I left London eased away. \"I look forward to your call. I love you dearly, my sweet girl; and on the record, it was never over. It will never be over for me.\" \n\nDamned if my Grinch heart didn't grow three sizes that day. \"For me either. Love you too, Boss.\" I hung up and finally felt like I could breathe. Sure, we were both a little fucked in the head but at least things were salvageable. My phone dinged and my hopes it was a gushy message from Holland were dashed by a single word. \n\nFunions! \n\nI hate my dad. \n\n*** \n\nII. Same ol' Mistakes. \n\nI'm lying! I love my dad, he's the best. Self-made multimillionaire, a humble philanthropist who founded three high-profile charities from the ground up, has won numerous humanitarian awards and still found time to raise one daughter at the age of sixteen and adopt two more at twenty and twenty-three, respectively. Edward James is a total bad-ass who deserves to get lit with his mother-in-law occasionally. \n\nWhich is why I hauled myself to the nearest convenience store for two big bags of Funions and a Vanilla Coke because they're his favorite, then made the trek across town to Nana's retirement community. It's nothing more than an upper-middle class neighborhood they stick old white people in to get them out of the way, but with bridge nights and gardening clubs. It wasn't a bad place to spend your golden years, especially if you're like Nana and have access to pot for \"medicinal reasons\" because of your \"glaucoma\". \n\nWhen I got there I knocked on the door a couple times and let myself in. Nana was snoring away in her recliner while Dad was sprawled out on the plastic-covered paisley couch watching something old and boring on tv, only noticing me when I threw one of the bags at his chest. His lips turned up at me lazily. \"Hi Flower. You're my favorite kid, you know that?\" \n\n\"Duh, fool. I brings alls the snacks.\" I loved when he used my childhood nickname - because my middle name is Rose - but he was the only one to get away with it. I may be a hardass, but I am a total daddy's girl. He sat up clumsily and leaned over, rubbing at his eyes with a distraught look on his face. \"Hey, what's wrong?\" \n\n\"Mom's pregnant,\" he mumbled. \n\nWaaaaait a minute. My parents were only in their mid-forties so it's not like it was impossible; and I know they're still banging, it's why I call first and announce myself loudly whenever I go home to visit. But still...\" You're fuckin' lying.\" \n\nHe sat back with a pained look on his face, but not so pained it kept him from opening the snack bag. He looked like he aged ten years since I saw him a few days before. \"See, that's what I said when she told me, and all I got in response was get the fuck out of this house, you insensitive asshole.\" \n\n\"Well that was a dumb thing for you to say so I can't blame her,\" I scolded when I plopped down next to him. I'm not gonna lie, I was kind of excited for another sibling to teach and torment; but homeboy looked completely freaked out, shoveling salty rings into his mouth so fast I thought he was going to choke. \"You okay there, buddy?\" \n\nDad swallowed thickly before getting a little hysterical. \"The doctors told us after Rachael we couldn't have any more kids and we haven't had so much as a scare in over twenty years. Then boom, she's suddenly knocked up? We just got Carson out of the house. She just left for Julliard! I was looking forward to spending time just the two of us and now...I'm too old for midnight feedings and dirty diapers. I don't know how I'm gonna do this.\" \n\nPoor guy. I'd be anxious as fuck too. I took his greasy hand in mine and patted it gently. \"If you could do it at sixteen you can do it at forty-five. There are night nannies and day nannies and housekeepers and all kinds of help you can afford now that you couldn't then, but if you don't go home and apologize you're gonna do all that plus pay alimony and child support, because Mom is a better attorney than you and she will take you to the cleaners. She's probably scared too so stop being a buttnugget and go tend to your baby mama.\" \n\nHe exhaled sadly, focusing on the tv. I took a good look at his profile and realized how Holland kind of resembled him. Straight nose, strong jaw. They both had blond hair and blue eyes, though Dad's were sky blue compared to Max's sapphire ones. They were both dominating presences with undying love for their family. I guess it's true, you really do fall for the ones most like your father. \"Anyway. What's going on with you, kiddo? You look a little happier today.\" \n\n\"Oh, well. I'm seeing someone.\" He turned his head enough to show the surprise in his eyes. I shied away when my face started to heat up. \"Actually, I'm head over heels in love. Great timing, huh?\" \n\n\"I'll say. That's wonderful. He's a good man?\" \n\n\"The best. He's kind and generous, stubborn and hard-headed in a good way. Very family oriented, he's so damn smart and he has a great laugh. Puts up with all my shit and sometimes even finds it endearing. The only thing is he lives in London and the distance is kind of hard to deal with, but he seems to be all in so we'll make it work somehow.\" \n\nIn a split second the joyous look slid off his face and I got a little concerned. \"Mom and I worried after Jeremy you'd never...we saw the signs but you're an adult, you make your own decisions. But I saw, and I should have...I'll never forgive myself for what happened. I failed you, Flower.\" \n\nI widened my eyes to keep from crying. Not here. Not here. \"Daddy, that is not your fault.\" \n\n\"But I'm your father, I should have protected you - \" \n\n\"I should have broken up with him sooner, I should have never gone out with him, I shouldn't trust this new guy either...it's all shoulds and none of it does any good. It's not anyone's fault but Jeremy's and we can't change what happened, but I'm okay now so don't beat yourself up anymore. Save that pleasure for Mom, okay?\" \n\nHe finally laughed even as a tear slid down his face and I stood with my hand out to help him up. We left Nana to her nap and headed for home, not bothering with chit chat on the drive, instead belting out old rock songs on the radio while he got chip crumbs all over my seats. I didn't mind. \n\nWhen we pulled around the driveway Mom was sitting on the steps, waiting for him with a famously pissed off look on her face. We sat there idling, staring at her. \"Oh man, you're about to get your ass handed to you,\" I whispered, like she could hear me. \n\n\"Yeah, I deserve it. Thanks for the ride.\" He leaned over the console and wrapped his arms around me with a secure squeeze. I squeezed back. I forgot how much I loved his hugs. \"If you're in love with this guy, don't wait, okay? I don't like the idea of you living so far away but you have to do what makes you happy.\" \n\n\"Okay.\" I kissed him on his stubbled cheek. \"Maybe it'll be a boy this time. That'd be cool, right?\" \n\nHe thought about it and genuinely seemed happy for the first time that afternoon. \"Sure, but why would I wish for one? I'm the father of three of the most intelligent, beautiful women in the world. One more would be a blessing.\" \n\n\"That! That was what you should have said!\" He agreed profusely and got out, closing the door the moment Mom started screaming at him. I watched as she pointed and yelled, shoving him in the shoulder a few times for good measure while he stood there and took it. It went on for a while until Dad stepped up to her and put his hand on her stomach. Mom looked at him like he was nuts but whatever he was saying to her must have been the right thing because she started crying, covering her face while he pulled her into his arms and held her. It was then I felt okay to leave. \n\nI started to head for home, but I didn't want to go home. I didn't want to go to the gym, or Tess and Shane's. I drove absentmindedly for a while, and it took me halfway down the interstate to realize where I was headed. \n\n\"Miss? Is there anything I can get you?\" A friendly brunette grabbed me out of my thoughts and I shook my head politely. She asked because the sun set hours ago and I was the only one in the cabin still awake, though I was quiet as to not disturb the other passengers. She passed on her way back to her little area and my focus turned out to the night sky again. It was a new day. Everything had been reset. \n\nAnd I was going to get the man I'm in love with. \n\n*** \n\nIII. Hour Follows Hour. \n\nOkay, so maybe I didn't plan out everything before I impulsively spend 80% of my money on a plane ticket to London. \n\nHow it played out in my head was I'd go to Holland's house and wait for him to come home from work, laid out like an entire snack in the middle of his bed with nothing but the body God and boxing gave me, ravishing him the second he walked in the door. I had the seductive phrases, the preplanned dirty positions in my head. It wasn't until I hailed a cab outside the airport that I remembered the one thing I didn't have. \n\nThe goddamn key to his house. \n\nI thought about showing up at his office again, but I was pretty sure Becky the Nosy Secretary would call the cops as soon as I stepped onto the premises. Besides, what I wanted to say - and do - wasn't appropriate to do at his job. So when the cabbie asked where I wanted to go I blurted out \"bookstore\" and he took off from there. \n\nWhich is how I found myself perusing textbooks at a local shop, rocking out in my personal bubble to the music in my headphones. Nervousness started to spread up my spine as I thumbed the large bindings, irrational thoughts filling my head. Maybe he won't be happy to see me. I can't blame him, I'm a mess. But he's kind of a mess too, maybe we could wipe each other clean. Maybe. I tried to shake off the self-doubt but found it difficult to do. I knew he said he loved me and I believed him...but did I really? Am I scared of him not loving me, or am I not trusting myself to love him? How long am I going to keep myself guarded? Would he even wait for me? ",
        "I felt a gentle tap on my shoulder and whipped around in surprise, after clearing the hair from my face I took out one earbud and tried not to sound as bewildered as I looked. \"Oh. Uh. Hi.\" \n\n\"Good afternoon, Sydney.\" Umber eyes searched my face for a response. At least, that's what I assumed Charlie was doing while I stood there looking stupid. \"I didn't mean to startle you, I wasn't completely certain it was you. McKenzie informed me you'd returned to the States a week ago.\" \n\n\"Oh.\" Of all the bookstores in all the world. He waited patiently for me to explain. I knew he was a lawyer like Kenzie so the black suit he was wearing wasn't out of place, but with sandy hair and thin-wired glasses he almost had a boyish quality to him. It didn't make sense for the three of them to be so damn good looking. \"I did. I'm back.\" \n\n\"I see that. Is Maxwell with you?\" \n\n\"He doesn't know I'm here.\" I sighed and rolled my shoulders back to ease the tension of remembering how much of a dumbass I was. \"I was going to surprise him, but I don't have a key to his place so I'm going to hang out here until he's done with work for the day. Of course, I don't know when that's going to be either.\" \n\nCharlie looked entertained, and for such an asshole he had a nice smile. \"Knowing him that could be the middle of the night. I have a key, I'll take you to his home.\" \n\n\"I don't want to put you out.\" \n\n\"Nonsense, it's en-route. Come.\" He turned on his heel and started walking out of the aisle like I was supposed to automatically follow him. I mean, I did, but only because I needed a ride. \n\nWe got settled in the tan leather seats of his Mercedes, buckled up and pulled off. Time ticked by through the awkward silence and about seven minutes in I bit the bullet and asked, \"So are you going to tell me why you hate me so much or are we just going to pretend that dinner never happened?\" \n\nHis blank expression slipped a little. \"I should apologize for my behavior that evening, there really should be a two-drink maximum at Kenzie's. I don't hate you.\" \n\nI watched the rain come down in streaks across the windshield only to be pushed away by the wipers. \"Could have fooled me. You all but accused me of offering up my vagina on a silver platter to get at his bank account.\" \n\n\"And again, I apologize. It's not that, exactly.\" I turned my head and watched him puff up his cheeks before letting out the air in a steady stream. \"When Maxwell began seeing Simone he was...happy isn't the word. Relieved. He was relieved he could have a relationship with someone who wasn't bothered by his tumultuous upbringing. Of course, we didn't know how badly she would use that knowledge against him.\" Charlie switched lanes carefully before continuing. \n\n\"Maxwell didn't tell us until he filed for divorce. Suddenly it all made sense, how withdrawn he'd been: we wouldn't hear from him for weeks at a time and I don't believe we'd physically seen him for months beforehand. When he resurfaced he was practically emaciated with so many wounds we had to force him to see a physician. Kenzie and I felt so much guilt we didn't see the signs this go-round. In a way it was almost worse than what his father did to him because he chose to stay with her for so long, for whatever reason I'm unaware. She messed him up, good and proper.\" \n\nMy poor, broken blond boy. \"I would never do that to him,\" I tried to assert through my voice cracking. \n\n\"The issue I have is he keeps you even closer to the chest than he did with her. It's as if he wants to keep your relationship between the two of you, to sacrifice his own independence to do so. He is so blindly in love with you, so fiercely protective - rather, possessive - to the point where I hardly recognize him. It's not necessarily for the worst but I don't know you well enough to be sure your intentions are of a good nature. As you came barreling into his life when he is the most vulnerable I can't help but to be suspicious of your motives. It isn't hate, I simply don't trust you. However, I shouldn't have expressed my concerns in such a manner. I am admittedly a bit more emotional as of late.\" \n\nWell, I couldn't say honestly wasn't his strong suit. Luckily, it was mine too. \"I get it, he's your brother. I'm not so na\u00efve to not see the timing is weird and maybe I'm not the best rebound for him to have, but I need prove my worth to him, not to you or McKenzie or anyone else. That's hard enough for me to do without you breathing down my neck so you need to back the hell off, because while you were so worried about me hurting him, you hurt him. If there's one thing you should know about me is I'm also protective over my family, so if you upset him again there isn't a force on this earth that will keep me from kicking your ass. Got it?\" \n\n\"Yes. We're here.\" Pulling up next to the curb Charlie left the engine on while he wrestled a silver key off his keychain. He held it up in front of me when he was done. \"Allow me to return the sentiment. If you hurt him I will go to the ends of the earth to make you regret it.\" \n\n\"Threat unnecessary but received.\" I thanked him for the ride and when I took the key he surprised me by leaning over and giving me a kiss on the cheek. I responded by ruffling his hair and he smiled naturally. I left the car and ran up the steps to the front door, letting myself into the silent home. Everything was immaculate but cold, like no one had been there in days. I ran up the staircase and to his room, taking time to walk around the bed and mentally plan how to display all this chocolate sexiness when a couple things on his nightstand stood out to me. \n\nThe first was a copy of Pride and Prejudice earmarked somewhere in the middle of the novel. I was tickled before feeling a little sad at the memory of Colin calling him Mr. Darcy when he teased me about my crush. \n\nI sat on the bed and picked up the only other thing on the table. A glass frame with a picture of me in it, the first picture I sent him when he left for London after we started this whole thing. I was sitting on my knees in the Thomas' backyard wearing something other than black, a yellow sundress with tiny white flowers printed all over it. I was looking up at the camera and laughing when Shane took the picture because Austin was pawing at my lap like the spaz he is. \n\nI looked happy, and I was by his bed. \n\nI was the first thing he saw in the morning and the last thing he saw at night. \n\nIf that's not love, I don't know what is. \n\nI replaced the frame and kicked off my shoes, stripping off my clothes and heading to his shower to clean up. Operation: Get My Man was officially in full force. \n\n*** \n\nIV: When We. \n\nI had to swallow back a scream when a firm body pressed mine into the mattress and scared the living hell out of me. When I found my brain a few seconds later and realized, duh, it's Holland, and I wrapped my arms around his neck. \"You're here. It's not a dream,\" he whispered against my cheek. \n\nI rotated my wrist behind him to look at my watch. It was almost six and I'd been there since two. Four hours of prep time lost because my ass couldn't stay awake. \"Shit. I didn't mean to fall asleep, I- \" \n\nHe cut me off with a hard kiss before pulling back, looking almost relieved to see me. \"You're here,\" he exclaimed, as if it weren't real, as if I wasn't in his arms right then. \"I rang you many times and you never answered, I was ready to leave for the States because I couldn't be away from you any longer and I am so completely in love, I...I love you.\" \n\n\"I love you too.\" A sleepy smile formed on my face and I finally relaxed. I didn't realize how tightly wound every muscle and tendon in my body had been just from being separated from him. \"I had a whole seduction thing planned but I didn't sleep much on the plane.\" \n\n\"Seeing you in our bed is always seductive.\" He moved off me and stood, bringing me up with him and into his arms. \"Have a bath. I'll order takeaway and you can tell me about your trip. I understand you're tired, but you should stay up a while to combat the jetlag.\" \n\n\"I already showered but I wouldn't mind another one if you'll come with me,\" I suggested, my hands on their own mission to begin unknotting his tie. Oh, it was on. \"Or maybe we could shower after.\" \n\nHe lowered his head and nudged my nose before bringing his lips to mine, causing me to meld my body into his while he took his time massaging my tongue with his. Nimble fingers traveled down my body as if it were printed in braille and he was the only one to read every curvature, every slope and angle. When we disconnected his mouth found the top of my ear, the hollow of my throat, across my shoulder. \"Are you sure?\" he asked carefully. \n\nI rested my hands on his face and brought it up, making very sure he could see the certainty in my eyes. It was me and him in our own little world where nothing hurt and I could finally trust him to be who I needed him to be. Not someone who wanted to save me. By the desperate way he clutched me in his hands, maybe he felt I was the one saving him. \"More than anything.\" \n\nMax guided me until the back of my legs hit the bed, I hopped up and pulled off everything but my thong before he stopped me. I got stuck watching him when he took his tie off and tossed it on the floor. My heart started racing when he finished unbuttoning his shirt and shrugged it off, taking in his firm physique and badass tattoos. But when he was completely nude I had to stop myself from hyperventilating. \"Sydney? You look alarmed.\" \n\nI was, because I couldn't stop staring at his dick. It was so hard it laid right against his stomach, pale like the rest of him with blue and purple veins just underneath the skin, curling around the shaft like a fist. Pre-ejaculate was leaking over his foreskin which made it look even more like an obscene sex toy for porn stars. Sure, I'd played with it before, but the thought of that thing actually inside me... \"No way. There is no way that's going to fit.\" \n\nThe look in his darkened eyes was one of sweet flattery and undeniable lust, making me feel a little shy under his gaze. I watched it bob up and down when he walked over to me and I spread my legs right as he slid between them, covering my body with his and slipping his tongue in my mouth. The stiffness of that monstrosity pressed into my lace-covered clit and I angled my hips up to feel it again. Soft lips pressed into my temple and he declared against it, \"Don't you worry. I'll have you begging for it in a few minutes time.\" \n\nHis mouth began its journey down my body but there was no kissing. No licking, no sucking. His lips hovered a centimeter above my skin and he just breathed. All he left on me was air. I was riddled with goosebumps in anticipation of connection and by the time he reached my belly button ring I was whining with need beneath him. He finally gave me what I wanted, which turned into another fierce surge of fire when he \n\ntook my panties off with his teeth \n\nand flung them away with a flick of his head. Hands gripped my knees and pushed my legs up and back, his face embarrassingly close to my wet center. \"Christ,\" he hissed out while transfixed on my bare sex on display for him. \n\n\"Please,\" I choked out, chest tight with desire. \"Please.\" \n\n\"Please what?\" He nudged my slick opening with the tip of his perfect nose, making me dizzy. \"Please fuck this pretty little cunt that is so swollen and damp for me right now?\" \n\nIf I could get off on words alone, Maxwell Charles Holland III saying cunt would do it every time. \"Oh God, yes!\" \n\nA long finger slid inside me. Out. Another joined it and began this teasing dance of stroking and twisting that had me writhing impatiently. His fingers suddenly disappeared and I wanted to cry, and when they were replaced by a long swipe of his tongue I almost cried for a different reason. \n\nHe alternated between dipping inside me, gathering my arousal on his tongue and spreading it all over that throbbing button that would practically vibrate every time he connected with it. He'd hold me on the brink of orgasm then slow - or stop - until I caught my breath, then he'd go back to burying his mouth on me like a dehydrated man and I was his only source of water in the world. \"You are so blissfully hot, I don't know how long I can last...\" \n\nTugging on his hair he looked up until his eyes hit mine, the blue spheres so dark and hooded as if he were high on my body alone. \"I want to come with you inside me.\" Max pulled his fingers from me and stuck them in his mouth with a serene look, it was undeniably the sexiest thing I've ever seen. I'd masturbated enough to know my juices never tasted like flowers, or water, or nothing. I had a heady, spicy aroma that had turned guys off in the past - but this man had zero problems with the way I tasted. \n\nI expected him to climb back on top of me but instead he settled next to me with his back against the pillows. I leaned back on my head and looked at him upside down, making him smile. The sight of his joy made my belly feel warm. \"Come over top of me, sweet girl.\" \n\nShit, he didn't need me to tell me twice. I scrambled up until I straddled his legs, I had him grinning like a fool when I rubbed my pussy against him like a cat in heat. His fingers pushed into my hair to grab my attention. \"I have a copy of my last sexual health exam, you know it's been years since I've been intimate with anyone but I wanted you to be sure. I know you take birth control but I do have condoms if that would make you more comfortable. Your trust means everything to me and your physical and emotional health is always my top priority. You're safe with me. I'll give you everything you need in whichever ways you need it.\" \n\nI shook my head, struck with the realization that we were really about to do this. Not once did I ever get so caught up in the dick I didn't make the guy strap up, but...\" It's okay, I've never...you're the only one I've gone without. I have my STD results in my bag, I do trust you, and if you'd rather - \" \n\n\"No. Absolutely not.\" I giggled nervously and he kissed the side of my mouth, trying to put me at ease. \"I'll mark you as mine from the inside out. Give yourself to me, little one.\" \n\nI raised up on my knees and he positioned himself right at my opening, I closed my eyes when I started sinking down on his length as slowly as I could. He settled his hands on my hips to guide me without pushing too hard but I had only gotten about halfway before I started shaking my head frantically. I felt too full already. \"I can't do it...I can't, you're too big...\" \n\n\"Shhh, none of that. It's alright, come here.\" I stopped moving and his hand rested in the middle of my shoulder blades to push my upper body down toward his. I opened my eyes and was face-to-face with the beautiful blond boy I'd fallen so hard for I'd never get up again. The way he watched my face with such peacefulness, so many emotions etched into his smile I knew I'd knocked him down too. \"Breathe with me. We have all night, we have all the time in the world now. Open up for me and let me in.\"  \n\nI did as he said, inhaling when he did, only focusing on him. He replaced his hands on my hips, when we would exhale together my body would relax and he could push me down a little more. We had to do it five times until my cheeks finally rested on top of his thighs with a strained whimper, and I still hadn't taken all of him. I rested my forehead on his shoulder and he caressed my lower back, neither of us making any attempt to move so I could stretch around him. \"Such a good girl. You feel perfect, better than I imagined,\" he whispered into my hair. \n\nI panted against the top of his tribal, giving a cautious rock of my hips to see how it felt. \"Say it again.\" \n\nHis fingers gripped me hesitantly before flexing, and before I could ask again he brought his hand down hard on the fleshiest part of my ass, startling me into sliding back and taking that last inch of his dick inside me. His hand tangled in my hair and pulled my body back up, making sure I was secure in his lap before spanking me again. \"You will ask nicely, Sydney. Try again.\" \n\nI ran my tongue over my lips and placed my hands on his stomach, barely lifting and lowering. I rolled just enough to stroke against that sweet spot inside me. \"Please call me a good girl.\" \n\nMax let go of my hair and ran his middle and ring fingers over my lips before sliding between them, moaning when I sucked on them in tandem with my riding rhythm. \"Whose good girl are you, hmm?\" \n\nHe lifted his hips every time I sat back on them. He moved. I moved. His dick was wet with my effort and the headrush from sliding down over him was quickly bringing me to the edge. With a grunt he dropped his fingers out of my mouth and started thrusting upward with force, triggering the beginning of my orgasm when both fingers rapidly circled over my clit. When his mouth closed around my nipple and bit down with a pinch I was done for. \"I'm yours...I'm your g-good...girl! Ohh my God! Max!\" \n\nI came. I came hard. It felt like I sprung a leak all around him but when I came down and opened my eyes his face looked fucking peaceful: eyes shut with his mouth open against my skin, like he was experiencing a kind of euphoria. Very gently he rotated us until he was on top, but that was where gentle ended. Digging his knees into the mattress he grabbed both of my arms and pinned them above my head so hard I was sure I was going to have bruises. The severity on his face made my stomach drop. \"Oh, little one. How I'm about to fuck you.\" \n\nHe didn't give me chance to respond, his thrusts increasing at an almost violent pace when he gave into some kind of instinctive carnal need to claim my body as his. His strokes were harsh and long, and deep, digging into me so deep I felt every inch he had to give me. His face betrayed his concentration and hunger, hard sounds spilling from his throat every time his rolling hips met mine. My legs shivered and trembled around his waist when he threw his head back and abruptly called out in a short burst. \"It's too good...too-fucking-good!\" \n\nI couldn't think anything other than fuck right fucking there fuck fuck fuck and it took me a minute to realize I wasn't just thinking - I was screaming the words at the top of my lungs. And he gave it to me as I begged, the bed scratching and creaking against the hardwood floor while Max did some yelling of his own. \"Give it to me! My dirty little...who do you fucking belong to now??\" \n\n\"You!\" My back bowed off the bed when my second orgasm threatened to tear me apart. He pulled out, leaning over me and pulling my legs high up on his back, taking a second to run his fingers over my calves. I frowned when I tried to kiss him and he pulled away, instead brushing his thumb over my chin. \"Will you allow me to fuck your mouth when I so choose?\" My tongue snaked out and drew the digit between my lips. I moaned around it and nodded. \n\n\"And when I want to come all over these gorgeous tits,\" he slipped it out and trailed my spit down my neck until it circled around my right nipple, \"Will you allow me to do so?\" \n\n\"Yes,\" I barely breathed out. \n\nHis cock rocked against my sensitive pussy and his hand kept wandering down my ribcage and around my back, grabbing a handful of my ass and pushing me up against him. \"And when the day comes that I've decided to take this perfect arse of yours, you'll allow me too as well, won't you.\" \n\nIt wasn't even a question, it was a declaration of his intentions and I started grinding against him as if I could get him inside me through sheer will alone. I felt the thick tip of him rub against my aching clit. \"You want this, little one? Use your manners.\" ",
        "\"Please. I need you.\" He rolled back and took hold of his dick, entering me in one smooth motion and making my brain fizzle and short out from the pleasure. \"I, I... oh, fuck me...\" \n\n\"Right there? You like it when I fuck...you...right...there?\" His thrusts accented each word and a hand coiled around my throat, tipping my head back as he growled against my jaw. \"Feels good to belong to me, doesn't it?\" \n\nI raked my nails over his back, scratching into the hardworking muscles. \"More,\" I demanded loudly. \"Harder.\" \n\nI listened to the sound of Max's free hand slap around the top of the headboard before his grip on my throat went from lax to holding me down into the mattress, and he gave me what I asked for. The sounds of his pelvis snapping against mine and the tough noises coming from his mouth just screamed out rough sex. \"You dirty, demanding, greedy little bitch. You begged for this dick, now you're going to take it...take...it...all...is this fucking hard enough for you?!\" \n\nMy eyes rolled back into my head as I fought to breathe, or climax, or both. He's going to kill me. I'm going to come and die and what an awesome way to go. When he let go of my neck I inhaled so hard my lungs hurt, then let out a scream when he grabbed the metal with both hands and expertly gave it to me in vigorous waves. It was like he was punishing me, punishing me for wanting me so damn bad...my final orgasm weakened my entire body but he fucked me through it, his rhythm becoming erratic when he was about to explode. \"That's it...that's fucking it...ahh, ha, ahh Goddamnit!\" \n\nHe came with the most wounded sound I'd ever heard, little whimpers in the following seconds of his release. Out of habit I prepared myself for him to pull away but all he did was help my legs down so he could lean over my sweaty chest. His hands ran the length of my body, soothing me with sweet words when he touched his forehead with mine. Without warning he stopped and seemed upset when my bottom lip started to tremble. \"Sydney?\" \n\nI burst into tears. I didn't know why I was crying, or I did, but I didn't know how to explain it so I just started rambling. \"I needed, I needed to feel...you're the only one who doesn't treat me like...I'm...and I, I really needed to be fucked!\" I yelled through another sob. \n\n\"Well I suppose it's a good thing you flew eighteen hours to seduce me then, hmm?\" I slapped my hand over my eyes and laughed despite the frightening rush of emotions in my body. \"Was I too rough, Sydney?\" I shook my head, then nodded slowly. \"Did you...enjoy me being so rough?\" I nodded confidently but still wouldn't look at him. \"I think you're having a bit of a come down. Come here, love, it's alright.\" He rolled onto his back and I immediately curled up into his side, tears flowing freely down his chest while he tried to soothe me the best he could. \n\nV: Waste Away. \n\nWhen I woke up again it was dark in the room save for a tiny sliver of light shining through the ajar door. A quick look to my left showed it was a few minutes before nine and I was alone. I didn't remember falling asleep, faint memories of loving words flashing in my mind before I fell unconscious again. I guess I was more tired than I thought, though Holland banging me six ways to Sunday probably had a lot to do with it too. Rolling off the bed with a groan due to the very present throbbing between my legs, I pulled on the button-down shirt and knee socks he thoughtfully on the edge of the bed. \n\nI journeyed out of the bedroom and down the long hallway to the stairs. When I reached the bottom of the steps I walked through the foyer and into the living room, finding Max in the kitchen with his phone pressed to his ear. \"That depends. Are you sincerely inquiring of her well being or is this at McKenzie's suggestion?\" He paused. \"She's well now, no thanks to you.\" \n\nI stopped moving because he sounded angry. Not angry like when I piss him off which is usually more of an annoyance than anything - his voice was rough and all the muscles in his bare back were clenched together tightly. \"You know good and well why I place blame on you, if you hadn't spoken to her in such a manner she wouldn't have...because your asinine interrogation caused us to have a row she wasn't anywhere ready for and she left! She has been suffering for the past week and I don't care if she's forgiven you...I don't...because this isn't about you, Charlie!\" \n\nMy heart sank. I didn't realize how upset he'd been during our time apart but the distinctive pain in his pitch made it all clear. \"Listen to me. You and Kenzie are my family and I love you more than anything on this earth except for her. My heart and soul belong to her. If my wish comes true I'll spend the rest of my life...perhaps it's not for you to understand and I don't particularly care if you do.\" He spoke clearer but no less angry and judging by the yelling on the other end of the line his brother wasn't exactly happy either. \"You need to reign in whatever misguided conceptions you have of her. Please don't make it so unbearable I have to...alright. If that's how you feel. I choose her.\" \n\nMax hung up and slammed the phone down on the counter, leaning forward with his face in his hands. With a final sigh he straightened and finally turned around, only mildly surprised when he saw me standing there. \"Sweet girl. I'm sorry, did I wake you?\" \n\n\"I was up. You were talking to Charlie?\" \n\n\"Unfortunately.\" I was about to ask him what happened but he cut me off with a shake of his head. \"It's fine, not worth discussing.\" \n\n\"Didn't sound like it.\" I turned my eyes to the window, making out distant lights while I tried to keep my emotional ass in check. \"I'm not worth all this.\" \n\nMax invaded my space and I fought the urge to pull away. Somehow, he saw it too and took half a step back. \"Let's not speak anymore of it tonight. You need to eat and hydrate, our meals should arrive shortly.\" \n\nI'm hardheaded so kept on anyway. \"You have to forgive him. I don't want to be the reason your twenty-something year friendship ends.\" \n\n\"Sydney, you won't be. This isn't the first disagreement Charlie and I have had and I doubt it will be the last.\" \n\n\"But is this the first you'd be willing to cut him out of your life?\" I expected silence and that was exactly what I got. \"Max, he's your best friend and you need to make up with him.\" \n\nHe regarded me with a blank stare before reaching for my arm and pulling me into his chest. \"I will, in my own time. I know you are very much a fan of instant satisfaction but that isn't how I operate. He hurt you and that isn't easily forgivable in my eyes. In any event, this isn't something you should worry about nor is it something you can fix. As it is our first night together in the physical sense I don't want it marred by my idiotic brother, so let us table it for another time so I may love on you properly.\" \n\nMy arms wrapped around his waist and he tipped my chin up to look at him. He really did seem okay. \"You know, you're really good at saying nice things when I'm being a nosy asshole with a big mouth. Makes me feel bad.\" \n\nMax hummed thoughtfully while running his thumbs over my cheeks. \"Well, if you truly desire to make it up to me I'll put your mouth to good use before our supper arrives.\" \n\n\"Ooh, yay.\" He kissed the crown of my head before guiding me down to kiss the crown of his. \n\n*** \n\nVI: Blessing. \n\nAfter dinner we found ourselves on the floor in front of the gas fireplace, watching the flames pop and flicker a few feet away with a cashmere blanket draped over us. Max had his back leaned against the couch while I rested against his chest, both of our hands interlocked with one another's. I felt him kiss the side of my neck and I snuggled into him. \"Are you feeling better, little one?\" \n\n\"Much, thank you.\" Max had taken very good care of me after we ate, drawing me a bubble bath and taking it with me. A jetted tub, a couple of ibuprofen and lots of physical contact did the trick, though I still felt a little embarrassed. \"I promise I'm not one of those chicks who always cries after sex, I'm not that big of a mess.\" \n\n\"You've barely touched anyone for years, I'd be concerned if you weren't at least a little emotional. It was intense for me as well, I'm not used to being the, ah, dominant one.\" He lifted my wrist to his mouth and kissed one of the dark ovals starting to form from him holding my arms down. \"I never mean to cause you harm but I can't deny the bit of pleasure I feel seeing you bear my fingerprints.\" \n\n\"I liked it too. I don't know why, but I think it's because...\" I tried to figure out the best way to phrase how I felt. \"For the last two years everyone in my life has had this protective bubble around me, like I'm breakable. So when you hold my body down and fuck me, or you grip me so tightly I bruise, it makes me feel like you're the only person in the world who doesn't think I'm weak. Maybe not all the time...but maybe all the time. Does that make sense?\" \n\n\"I certainly don't mind giving what you need, but I need to know you're aware that is a considerable amount to trust to have in someone. You're confident for me to always stay in control when you're in my arms, and I don't want to fail you.\" \n\n\"I don't think you will. Yeah, earlier was...\" I giggled bashfully when I thought about our traipse all in and through his bed. \"I'm no nun but I've never had anyone fuck me like that. But afterwards you held me while I fell asleep and helped me relax, you made sure I won't feel too badly in the morning. You have more control than you think, and I'm not saying we have to have a BDSM dungeon or go signing sex contracts and shit. Maybe let's just think about it.\" \n\n\"Alright.\" That was the end of that conversation. We watched the fire silently for a while before he spoke again. \"Stay with me, Sydney.\" \n\n\"It's a little late for me to check into a hotel,\" I joked and he laughed softly into my hair. \"I can stay a little longer this time, I don't have to be back at work until Wednesday.\" \n\n\"And if I asked you to stay longer?\" He stroked over my thumbs with his own. \"Or if I asked you to stay permanently?\" \n\nI shifted so I could look at him. Holland was deadass serious. \"You want me to move here?\" \n\n\"I'd like to know what it would take for you to live here, yes. Five days isn't nearly long enough and I've spent too much time away from you as it is. This doesn't feel like home unless you're here.\" \n\nI blinked a few times while I thought about it. Was I willing to uproot my entire life and be thousands of miles away from my family and friends for him? The answer seemed clear, but... \"I think I'd probably need some sort of serious commitment in order to do that.\" \n\nHis eyebrows raised subtly. \"You mean marriage.\" \n\n\"No. Or, I don't know. Would you ever get married again?\" \n\n\"Are you proposing? If so, I feel a bit underdressed.\" I rolled my eyes at this fool and he gave me a lopsided grin. \"My sweet girl, I'd be the luckiest man alive to have you as my wife. I purchased an engagement ring weeks ago, I've been waiting until you were ready. Now I know.\" \n\nWell, shit. My stomach fluttered and I couldn't stop the dumbest smile from spreading on my face. When Holland matched it I started laughing nervously. \"You're not going to do it now, are you?\" \n\n\"Not at this moment, though it will be sooner rather than later.\" \n\n\"Sooner sounds good to me, Boss.\" I moved to kiss him and he met me halfway, bringing his hand around the back of my neck to pull me to him. I found myself thinking how I wished he would never let me go again. \n\n*** \n\nVII. You Ain't Ready. \n\nWatching my boyfriend get ready for work in the morning was a fascinating study of his mannerisms. I could see him in the massive walk-in closet wearing nothing but a pair of black boxer briefs, standing in front of his line of suits with his finger on his chin. He pulled on navy slacks and left the button undone until he pulled on his shirt, giving me the opportunity to leer at his lean upper body and the chiseled V of his midsection that led to one of my favorite parts of his anatomy. After fastening the buttons a silky graphite vest followed, and it was only when he was tying his hair back in a tight ponytail that Max noticed me staring. \"Do you approve, little one?\" \n\nI gave him thumbs up and blew the bangs out of my eyes. \"Hell yeah I do. It's almost unfair how hot you look when I'm all jacked up.\" \n\n\"On the contrary, I think you look lovely.\" He strolled over and sat on the edge of the bed, taking in my appearance of crazy hair and slightly swollen lips from our earlier coupling session. There definitely wasn't any crying afterwards that time. \"You have a very \"ridden hard and put away wet\" appearance about you at the moment.\" \n\n\"Pervert!\" He kissed me for the millionth time that morning, his hand lingering on my face before pulling away. Leaning over, Max grabbed the manila envelope he'd set on the nightstand before his shower and laid it on the bed next to me. \"I will come home after a while to spend the lunch hour with you. In the meantime, I'd like for you to look over these documents.\" \n\n\"Okay. What is it?\" \n\n\"A pre-nuptial agreement.\" He looked like he was going to be sick just saying it. \"It's not my idea, it's at the very firm suggestion of my attorney. It's not mandatory you sign, I only thought since we were discussing last night - \" \n\n\"It's cool, I'll sign.\" I tried not to laugh but he looked so cute when he was nervous. \"Seriously, I get it. Especially after your nightmare of a divorce I'd be surprised if you didn't have one drawn up.\" \n\n\"Thank you for understanding, I believe you'll find the terms most generous. Also, McKenzie's daughter is having a fancy-dress party this evening. As she is a bit of an extravagant tot you'll need a gown, and no arguing,\" he stated firmly, pulling out his credit card and tossing it on top of the folder. \"Sodhi is at your disposal today, you will purchase a dress and shoes and whatever else your heart desires.\" \n\nI narrowed my eyes at him playfully. \"You're so goddamn bossy. I'm gonna buy a sparkly pink dildo and slap you across the face with it.\" \n\n\"Kinky.\" Max picked up his shoes from the floor and gave me one last kiss on the lips. \"Little one, sweet girl, love of my life: I adore you.\" \n\n\"Love you more, Boss.\" I blew him a kiss and watched him catch it and put his palm over his heart while he walked out of the room. I waited until I heard the door close downstairs before picking up the envelope, pulling out the moderate stack of papers. Taking a sip of the coffee Holland so generously made after fucking me cross-eyed and stupid I replaced the mug on the table and started scanning the pre-nup. \n\nThe first thing that caught my eye was his net worth. I knew he had money, but I didn't know he held billionaire status. Just looking at all those commas made me feel a little queasy. \n\nI skipped down to the meat of the proposal. There was a twenty-million-dollar incentive to be deposited into my bank account the day I said I do. Ten million each year on our anniversary, another twenty for every child I had or we adopted. Jewelry, cars, property or any other form of income acquired during the marriage he forfeited 60% to me. Any infidelity on my part was a penalty of ten million; if he strayed it was a penalty of a hundred million dollars. \n\nI tossed the papers on the bed away from me and drew the sheet over my head to shield myself from them. Sure, it was generous, but it felt like a bribe - like throwing all this cash at me would make it impossible for me to say no when he asked me to marry him, because who would say no to that kind of payday? I didn't like it. I hated talking about money, maybe because I didn't have any. I didn't feel worth all the trouble so I did what I did best: avoidance. I pulled Vincent from underneath my pillow and drew my knees up, making his little legs dance on my stomach like I used to do when I was five. \n\n\"Sydney?\" I gasped when I heard his voice, interrupting a very elaborate one-bunny performance of Swan Lake. I stretched my body underneath the sheet, I didn't even realize I'd been fucking off for so long. \"What are you doing under there, love?\" \n\nI poked Vincent's head out and gave my best Danny-turned-Tony impression. \"Sydney's hiding, Mrs. Torrence.\" \n\n\"May I ask what from?\" I kicked at the pre-nup. \"Oh, I see. Would you please ask Sydney to explain why she is hiding from an inanimate stack of papers?\" \n\nI sighed and rubbed my eyes with the backs of my hands, talking in my normal voice. \"I keep telling you I don't want your money and you're still throwing it at my feet. I didn't ask for it and I don't want it. It feels like you're trying to buy my affection and it makes me worry that you're getting anything out of this relationship.\" \n\n\"Little one, you must know that isn't the case,\" he tugged on the sheet just enough so he could see my eyes. \"It's only money and I don't care about it.\" \n\n\"Neither do I, which is why I can't take it.\" \n\n\"Will you insult me so freely?\" He pulled the sheet down to my neck and leaned over, kissing me while I pouted. \"I want you to have everything you desire.\" \n\nI undid one of his buttons and stuck my hand inside his shirt, needing to feel his cool skin on mine. \"I want you.\" \n\n\"Then take all of me. My money, heart, body and soul. The terms are geared toward your protection rather than my own because if anything should happen I need you to be taken care of, especially as you'd be giving up quite a lot to be here. Everything I have is yours because I love you, not as an attempt to manipulate you. Alright?\" \n\n\"Grrr. Fuck, fine.\" I let him go and he picked up the papers, handing them over with a pen. I flipped through and wrote my signature or initials on the tabbed lines, sticking them back in the folder and giving them to him when I was done. \"Thank you, sweet girl,\" he praised kindly. \n\nLooking at my watch I discovered I still had 55 minutes with him. \"Think you have time to thank me properly before you go?\" \n\nA mischievous look got me hot and bothered with the quickness. \"Oh yes, at least once,\" he promised before claiming my mouth once more. \n\nVIII: I'm The One. \n\n\"Miss James? May I help you locate something?\" \n\nI turned around to the bright and polite inquiry from Nancy, the helpful blonde sales clerk. After a little afternoon delight with Holland I got showered and dressed, his driver Mr. Sodhi waiting at the bottom of the steps when I was ready to go. He took me to some private, bougie boutique that didn't even have a name, that's how exclusive it was. It was easily filled with millions of dollars in one-of-a-kind pieces and jewelry. I love a good party as much as the next person, but I wanted to impress his niece and I was completely overwhelmed. \"Um, maybe. My boyfriend's niece is having a...what did he say, a fancy-dress party - \" \n\n\"Oh, the Sinclairs!\" she exclaimed confidently. \"Yes, Miss Poppy-Jacqueline has the most exquisite taste. Did you have something in mind?\" \n\n\"I don't know, but I should probably find something...not black,\" I gestured to my own clothes, torn black jeans and my \"Got Salt?\" Supernatural shirt. \n\n\"Of course, Miss James. I'll pull a few looks for you and hang them into dressing room number two.\" I thanked her and she started to walk away, then abruptly turned back around. \"Oh, and Mrs. Sinclair is in dressing room number one if you'd like to ask for her advice. It's just through there, I'll be with you in a few minutes. \n\nWell if that wasn't a hell of a coincidence. I headed to the back of the store and sure enough, there was Samantha twirling around like a princess in a pink chiffon prom-looking dress. She stopped mid-spin and greeted me with the biggest smile. \"Oh my God, Sydney! What a surprise!\" ",
        "\"Really?\" I cocked an eyebrow at her. She was a worse liar than I was. \n\nSam looked like she was about to say something else until she sighed heavily and dropped her arms down to her sides. \"Shit, I suck at lying. It really is good to see you, though!\" \n\nShe hopped off the platform and hugged me tightly. She was a little shorter than I was so she kind of nuzzled into my boobs until I laughed. She reminded me of Tess, if Tess had sky-blue twists and talked a mile a minute. \"Max called and said you were back and if I wanted to take you dress shopping and then to lunch because you love food like I like food and I was like, duh, of course I will! And then he said you have his credit card but you felt weird spending his money, but I have no problem blowing his cash so he made me promise to make you do some mild damage to it. How are you?\" she asked when she finally let me go. \n\nI liked this chick. \"I'm good, happy to be back but I have no idea what the fuck to wear to an upscale five-year-old's birthday party?\" \n\n\"It's not even her birthday, she just has Kenzie's flair for drama.\" She poured a glass flute full of Dom P\u00e9rignon Ros\u00e9 and handed it to me, giving me cheers before I took a sip. \"Seriously, I'm so glad you're back. Maxie's been all moody and mopey and seriously bumming my trip. He sounded giddy when I talked to him, well, as giddy as he's gonna sound anyway. Let's try on some clooooothes,\" she sang in perfect time with the clerk showing up with an armload of dresses for me to try on and being Sam she had her \"Vogueing New Clothes\" playlist ready to go on her phone. \n\nI tried on six different dresses while talking to her behind the thick curtain. She told me all about how her and Kenzie met at a club in New York, how they got married almost immediately after reuniting three years later and split their time between Brooklyn and London before settling here once their daughter was adopted. She was animated and funny, my sides hurt from laughing so hard. It made me realize how damn morose I'd been lately, and even if it was only for a little while it felt good not to take everything so damn seriously. \n\n\"That's it! That's the one!\" She declared loudly when I emerged in my seventh and final dress. I stepped up to the mirror and wondered what the hell she was thinking. It wasn't that the dress wasn't gorgeous - an indigo, haltered floor-length gown, alluring and airy with a flattering surplice neckline and a sweeping, swooshing skirt - it was that the cut in the back went to my tailbone and there was no way I'd be able to wear a bra with it. \"Are you sure this is appropriate? I might hurt someone with these things flying free,\" I adjusted my boobs for emphasis. \n\n\"Don't worry about that, it would be a crime for you not to get this dress. It's perfect for tonight.\" She came up behind me and fluffed up some of the skirt. \"You know, I didn't wear white when I married Kenz? My dress was purple and so was my hair. The perks of getting hitched in Vegas.\" \n\n\"Lucky.\" I meant it too, I wasn't really a girly-girl when it came to that stuff. I started gathering my hair on my head and turning to see myself at all angles. I did look pretty damn good. \"I only want, like, five people at my wedding. No rabbi, no church, no fancy cake that looks pretty but you can't eat. I want to do it outside at night with twinkle lights and a lot of whiskey. No shoes, either.\" \n\n\"Ooh, sounds fun. I bet Maxie would like that too.\" \n\nI snorted at the thought. \"Yeah right. I couldn't see him getting married barefoot, I'm sure his wedding cost a fortune.\" \n\n\"Well yeah, it was a couple mil, from what I heard anyway. But that's not him, he's got dumb money but he never spends any of it except on suits. I mean, the Twatwaffle-Who-Shall-Not-Be-Named spent his money like it was oxygen and the bitch was born without working lungs but that's not what he's like. I see it in his eyes when he talks about you, now he's getting something he's never really had before.\" \n\n\"And what's that? A bitch with a big booty and a mouth like a sailor?\" \n\n\"That, and,\" she looked up at me and gave me the sincerest look, \"Love. He gets love from you, Sydney. That's all Max has ever really wanted and now he has it. It's pretty groovy if you ask me.\" \n\nI had to look away, choosing to focus on the price tag hanging from the waistline. \"Now he gets love and a four-thousand-dollar bill too. Man, I haven't even gotten shoes yet.\" \n\n\"You get used to it,\" Sam tried to reassure me with glee in her voice. \"C'mon, they have tiaras here too. Mild damage is about to turn to moderate.\" \n\n*** \n\nIX. As Is. \n\nWe shopped for another hour before grabbing a bite to eat, and afterwards Sam took me back to her house to hang out until dinner and so I could meet her daughter. Unfortunately, when we got there all we found was McKenzie running around with nothing on but a pair of jeans and an angry red face while he yelled, \"Poppy-Jacqueline Wilson Sinclair, you come out this instant! You are in a world of trouble, young lady!\" \n\n\"Whoa, what's with the yelling?\" Sam interrupted and temporarily distracted him from his tirade for a brief hello, and I do mean brief. \"Your daughter bit another boy at school today and the headmistress is threatening expulsion if she doesn't apologize,\" he explained. \n\n\"Again?\" Sam asked tiredly, dropping our packages by the door. \"Where's your shirt?\" \n\n\"Have a guess at where she hid - and made a considerable mess in - the moment we returned home?\" \n\n\"...not my studio!\" She hauled ass upstairs and about six seconds later started screaming for her kid to come out. Kenzie took a deep breath and came over, giving me a quick kiss on each cheek. I was momentarily sidetracked by how fit he was - again, it was ridiculous how good looking the three of those boys were. \"Good to see you, love. I apologize, we're a bit out of sorts at the moment.\" \n\n\"Hey, I'm an expert at hide and seek, why don't you go upstairs and help Sam clean up while I find the kid? Give me ten minutes.\" He apologized again and ran up after his wife. I started walking around their house, thinking of all the places I would hide whenever I got in trouble with my own parents. Living room and kitchen were too easy. Dining room table had no tablecloth so that was a no-go. I started opening pantry and closet doors when I reached the laundry room, I was about to turn the light back off and look somewhere else until I heard a sniffle coming from...the sink? \n\nShutting the door behind me I went to the washing sink, bent down and opened the two cabinet doors - low and behold, there was a beautiful, leggy kid in a prep school uniform, furiously rubbing green detergent into Kenzie's stained shirt. She looked at me with teary, puppy dog eyes. \"Who are you?\" \n\nI smiled at her calmly. \"I'm Sydney. I'm your Uncle Max's girlfriend. Your name is Poppy-Jacqueline, right?\" \n\nShe thrust the shirt at me and pleaded, \"Can you fix this please?\" \n\n\"Let me see.\" I held out my hand and she put the shirt in in, letting me assess the damage. Red paint on white fabric. \"Sorry kiddo, I think the shirt is done for.\" \n\n\"Papa is going to be so mad,\" she whimpered. \n\n\"I think your Papa will just be happy you're okay. He's looking for you, you know. He said you bit another kid at school. Do you want to tell me what happened?\" \n\n\"It wasn't my fault! Hughie kept taking all my paper at art time, then at music he called me a mu...mull...Milano because Papa is white and Momma and me is brown and his parents are just white and then he pulled my hair when I was playing hopscotch and I had to bite his arm to make him stop! But Miss Hunter only saw me bite him so I got in trouble and she called Papa.\" She started crying. \"But he just yelled at me and when I came home I tried to draw him a picture but then he yelled at me again for being in Momma's room and I didn't mean to squeeze the bottle so hard!\" \n\n\"Aww, it'll be okay. Do you want a snuggle?\" Not knowing who I was didn't stop her from falling out of the cabinet and crawling into my lap sobbing. I rocked her gently and rubbed her back until her cries turned to a soft whimper. I kissed the top of her dark hair that smelled like coconut hair product. Poor kid. I used to get into fights when I was first adopted, being the only black person at my private school fucked me up sometimes too. \n\nI don't know how long we stayed in there but eventually she did stop crying. By the time Sam and Kenzie opened the door they found their kid in my lap, braiding my hair into pigtails and telling me all the classroom gossip before her dad interrupted us. \"Alright young lady, come here and explain.\" \n\nPoppy-Jacqueline looked at me warily, I gave her the go-ahead motion and a gentle push off my legs. She moved slowly but once she was in front of then she told them what happened in a small, timid voice. Once she was done apologizing Kenzie's face was again flushed with anger. \"Excuse me, I need to make a phone call.\" \n\nHe stormed out of the room before Poppy-Jacqueline could ask, \"Momma, what's a Milano?\" \n\nSam crouched down to bring herself to her daughter's level. \"I think Hughie called you a mulatto, sweetie. A mulatto is a not-nice word for someone who is half-black and half-white. It was a mean thing to for him to say and I understand why you were upset. If he ever says it again, you tell Miss Hunter - and if she doesn't believe you, you tell her to call me or Papa. And no one has the right to put their hands on you, so if he pulls your hair again you kick him as hard as you can until he stops. I'll deal with the fallout, okay? I'm very sorry he hurt you, and I'm even more sorry that we yelled instead of listened.\" \n\n\"It's okay. I'm sorry I messed up your room, and Papa's shirt.\" She gave her mom a big hug and Sam mouthed \"thank you\" to me behind her back. I gave her a nonchalant wave. Poppy-Jacqueline ran back to me and was practically bouncing in her spot. \"Sydney! Have you ever done Dance Dance Revolution? I have it in my playroom, do you want to play?\" \n\n\"Um, of course I want to play! But first let's go make sure Momma's room is cleaned up. Then it's on, PJ.\" She ran out ahead of us faster than I could stand up, Sam and I laughing at the kid's energy burst while we followed her out of the room. \n\n*** \n\nX: This Bouquet. \n\n\"Hi Skipper, what are you up to?\" \n\n\"It's my birthday and I'm having a party!\" PJ waved around her Barbie doll in the air before bending her legs to sit in her blue plastic chair. \"Did you bring me a present?\" \n\n\"I sure did, I brought you your very own...tickle monster!\" I dropped my doll and snatched up the kid, tickling her ribs and belly while she squealed in delight. After wiping up paint and putting away brushes and paper we played DDR for a solid half hour before moving on to cars. Then Little People, then coloring books before settling down with some good old-fashioned Barbies. The kid was bright, cheerful and so damn scatterbrained she reminded me of myself when I was five. I get a kick out of little kids. \"Hey Sydney, are you going to marry Uncle Max?\" \n\n\"I hope so, one day. Would that be okay with you?\" I asked, trying to brush the kinks out of my doll's matted hair. \n\n\"Yes! Then he wouldn't have to live alone anymore, and you can take him to the zoo when I'm at school, and I wouldn't have just uncles. Can I be the flower girl? Momma and Papa bought a whole bunch of flowers this morning.\" \n\n\"Oh yeah? Why?\" Before she could answer Kenzie popped up, fully dressed this time. \"Petite-Poppet! I segreti sono segrete!\" \n\nPJ just rolled her eyes at him. \"I know Papa, secrets are secret. Is Uncle Max here yet?\" \n\n\"Why don't you dress yourself and go search for him? Momma laid out everything on your bed.\" She jumped up excitedly and ran out of the playroom, but not without giving me a kiss first. Kenzie gave her a little pat on the bottom when she ran past him, turning his attention to me when we were alone. \"May I have a moment of your time, Sydney? I'd like to speak with you.\" \n\nOh, great. He closed the door and I started throwing Barbies back in the cloth basket they came out of, I knew where this was heading. \"Look, Charlie already gave me the \"If you hurt Max I'll hurt you\" speech so you don't have to.\" \n\n\"Oh yes, he told me you threatened him with a good arse kicking, rightly deserved I might add. But no, I have something to give to you.\" He pulled out a folded piece of paper and handed it over. \"You are to guard this secret with your life. No one knows, not Maxie, not Charlie, not even Poppet.\" \n\nI opened it up and saw a list of about a dozen different brands and names, next to them were random percentages and ounces. \"Uh, what the hell is this?\" \n\n\"That is the recipe for my specialty brewed coffee. You are to memorize the exact amounts and then burn the evidence. On the first of every month you are to call that number and put in an order for two, one will be delivered to your home and the other to his office. He hates tea and it is the only coffee he will drink, lest you want a grumpy bastard 'round the house. Now, you must make sure Maxie eats at least three times a day and that he is home by six, otherwise he will lose track of time and continue to work until midnight. Schedule two holidays to the beach each year, and if he becomes ill - \" \n\n\"He prefers tomato bisque, not chicken noodle soup. He's allergic to strawberries and likes his dry cleaning picked up on Tuesdays,\" I finished for him. \"Why are you telling me all this?\" \n\nKenzie smiled wildly, like I just told him he'd won the lottery. \"Because these are important things to know. I've been taking care of him since we were six, much more than his own parents anyhow, but he doesn't need me anymore because now he has you. He has a tough exterior but is healing from some very deep scars on the inside. I don't believe I've ever seen him truly happy until you came into his life, he speaks so highly of you it's as if he's experiencing sunshine for the first time ever. He's yours now, so be gentle with the boy.\" He looked up thoughtfully and then added, \"Except in the sack. You shag him so thoroughly he forgets his name and begins speaking in tongues.\" \n\nI snickered. \"Done and already done.\" \n\n\"Ah, that explains the tranquil demeanor when he came in. I believe he is looking for you.\" I couldn't help the silly grin that came over me and I hopped up almost as fast as PJ did, sprinting out of the door while Kenzie laughed behind me at my enthusiasm. I ran downstairs and looked into the living room first, but no one was there. I was so determined to find him I almost knocked Sam over when she came down the hallway. \"Whoa, where's the fire?\" \n\n\"Sorry. Have you seen Max?\" I asked impatiently. \n\n\"Yes, but can I ask you something first? You like lilies, right?\" \n\n\"Oh, um,\" she caught me so off guard I had muddy brain for a second. \"Yep, love them. Big fan of the lilies.\" \n\nShe beamed at me brightly, so much more than the conversation warranted. I guess she really loved lilies too. \"Max went into the dining room for more wine, do you mind helping him grab the merlot?\" \n\n\"Fetching booze happens to be my specialty. Back in a sec.\" I went through the kitchen and took a right, walking into the dining room to find...candles. Several candles lit on the table, the lights off and soft music coming through the wall speakers. I was a little worried I'd just ruined some kind of romantic gesture Kenzie was doing for Sam when the pocket doors behind me opened and closed. I turned around and there was Max, changed out of his suit into a pair of jeans and a t-shirt. \"Hey Dimples! Did I miss a memo, are we doing something for Sam? Or is Kenzie a big fan of The Notebook and this is actually for him?\" \n\n\"Well, surprisingly enough he is...but no, little one. This isn't for her, or him.\" \n\nMax slowly dropped down onto one knee and I swear to God I forgot how to breathe. \n\n\"This is all for you.\""
    ],
    "authorname": "Swig",
    "tags": [
        "black woman",
        "british man",
        "interracial romance",
        "love story",
        "interracial",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/across-the-pond-ch-05"
}