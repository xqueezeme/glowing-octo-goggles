{
    "title": "The Agency Ch. 14",
    "pages": [
        "*Author's notes: This is a work of fiction, hopefully that is not a word you struggle with. It is a story of fictional, consenting adults who enjoy power exchange, lingerie, heels and the like. It's in the transgender/crossdressing category for a reason, if that scares you please back away slowly. For the rest of you, please enjoy!\n\nWhen they workout/peep show was over, Michelle quickly headed into the shower while Babette made herself breakfast. One of them had a date this morning, and she couldn't wait to see Brenda again! Michelle selected a white lace thong, garter belt and bra, nude stockings, a cream blouse, tan leather pencil skirt and white lace sling back heels. The heels showed just a hint of her bright pink nail polish. She added some nice jewelry to accent her outfit before checking herself over once more in the mirror.\n\nMichelle felt sexy yet elegant as she boarded the subway. The leather skirt was snug, yet certainly appropriate for work. Considering she spent half her time in the office in just her lingerie the dress code at work allowed for almost anything. Well, anything that made Michelle look more feminine that is. She'd now become accustomed to the usual glances and occasional flat out stare on the subway, she now took them completely in stride rather than allow the panic she'd dealt with the first few weeks to overcome her. It amazed her how much more comfortable she was in her skin than she'd ever been as Michael. Making her way into the coffee shop, a hefty construction worker held the door for her, making no secret of looking her over as she passed him.\n\n\"Thank you!\" Michelle blissfully said to her admirer.\n\n\"Oh no, thank you!\" He replied before heading off.\n\n\"Good morning, Michelle,\" the girl behind the counter said warmly, \"your order is ready!\"\n\n\"Thanks ever so much Darlene!\" Michelle replied with a warm smile.\n\nMaking her way to the building, Michelle packed into the elevator for the ride to the appropriate floor. The crowded elevator had little space, and Michelle assumed that at least one man was pressed against her ass. A month ago this would have made Michelle's heart race with panic, but not now, she even suppressed a grin and the urge to press back into him. She was a one woman girl after all. Well, that wasn't accurate, a one woman and one cross dresser girl? No, a two woman but one is a business relationship and one cross dresser girl? Oh this was far too complicated. It suddenly dawned on Michelle why there was an \"it's complicated\" relationship status! Although, she doubted many of those were like hers.\n\n\"Good morning!\" Michelle gleefully called out as she entered the Dr.'s office.\n\n\"I'm back here!\" Brenda replied. Michelle found her way to the back, following the sound of Brenda setting up the offices for the work day. \"Oh good! Coffee!\" Brenda said at the site of Michelle. \"This is all your fault you know.\" Brenda quickly pressed her lips to Michelle's while taking a coffee from the tray.\n\n\"My fault?\" Michelle asked unable to hide her confusion, \"but I just got here!\"\n\n\"I over slept,\" Brenda said as she organized one of the exam rooms, \"and that is your fault!\"\n\n\"I don't understand, sorry.\"\n\n\"Someone gave me more than a couple mind blowing orgasms this weekend,\" Brenda said brushing quickly past Michelle to the next room, pulling Michelle along, \"which led to me having the wildest dreams last night, which caused me to shut off my alarm clock and try to replicate what you did to me!\"\n\nMichelle couldn't help but beam with pride. Not only had she rocked Brenda's world Saturday night and Sunday morning, but Brenda just admitted to touching herself with her in mind! The image had Michelle's cage strangling her cock as it desperately wanted to react to the news.\n\n\"Stop looking so damn proud of yourself,\" Brenda was now playfully pissed, \"work is off limits for that kind of thing!\"\n\n\"Okay.\" Michelle responded unable to stop smiling.\n\n\"By the way,\" Brenda continued standing to face Michelle, \"you're now my plus one for the wedding, and you can dance with whoever you want but no kissing them this time!\"\n\n\"Yes Ma'am.\" Michelle blushed deeply remembering her kiss with Jeff at the night club.\n\n\"I'd spank you, but based on our conversation this weekend you'd only enjoy it!\" Brenda chuckled. \"Now, go into exam room three,\" Brenda took a long sip of coffee before continuing, \"and get undressed.\"\n\nMichelle did as she was told, not wanting to press her luck any further than she already had. Removing the blouse and pencil skirt, Michelle remained in her white lace lingerie and heels, taking a seat on the exam table and crossed her stocking covered legs, laying the gown next to her on the table. Sipping her coffee, Michelle felt the rush of adrenaline as she waited for Brenda to enter.\n\n\"Well you're halfway there,\" Brenda said as she entered the room, \"I'm sure Dr. Brown will approve of your outfit too.\"\n\n\"He won't be here for another fifteen minutes,\" Michelle smirked, \"so why be overdressed until then?\"\n\n\"You just want to show off your sexy lingerie and you know it!\" Brenda chided.\n\n\"You're right!\" Michelle beamed. \"I've been obsessing over what to wear three mornings a week ever since I started coming here, now I get to know you appreciate my efforts as well!\"\n\n\"I do appreciate them.\" Brenda replied as she stepped next to Michelle letting her fingernails glide over Michelle's nude stockings. \"And truth be told I've always looked forward to seeing what you had on your outfits.\"\n\n\"I'm glad you've appreciated my efforts.\" Michelle leaned forward, softly pressing her lips to Brenda's.\n\nThe nurse responded, parting her lips and letting her tongue dart outward. Their kiss quickly turned more passionate, Michelle's hand went to Brenda's hip before slipping underneath her scrub top and Henley to touch her bare skin while her other hand found Brenda's breast. The hand Brenda had on Michelle's leg quickly went to Michelle's hip, touching her bare flesh while the other went to the side of Michelle's face.\n\n\"I guess I should get used to doing this instead.\" Brenda chuckled placing her hand on Michelle's left breast.\n\n\"You can put your hands anywhere you want,\" Michelle replied leaning into Brenda's hand, \"as long as they're on me!\" They softly kissed again, Michelle enjoying the sensation of having her breast squeezed. \"Plus, if you think about it,\" Michelle winked, \"you get to rub them all you want later! And you get paid to do it!\"\n\n\"Oh, my head!\" Brenda replied with a massive eye roll. \"You are full of yourself today, aren't you?\"\n\n\"Well, I've never been as popular as I am right now,\" Michelle answered honestly, \"it's kind of nice being a girl.\"\n\n\"Does that mean you'll stay one when your,\" Brenda paused for a moment then continued, \"your whatever the hell it is you have going on in the office downstairs is over?\"\n\n\"I don't know,\" Michelle replied struggling to think of the actual answer, \"it will really depend on what's going on at that point in my life I guess, and who I'm with.\" Michelle looked into Brenda's eyes and continued, \"Would you be okay with that?\" Suddenly panic-struck Michelle, had she gone too far in assuming Brenda would still be around? Had she just scared her off? \"I mean, you know, if you and I\" she stammered and moved uneasily on the table, \"if you are, you know, still.\"\n\n\"With you?\" Brenda's voice was reassuring as she leaned in closer. \"Relax,\" Brenda kissed Michelle's forehead, taking her hand off Michelle's breast, \"you and I still haven't really figured out what this is yet, let's just take it slow.\" Brenda took Michelle's hands in hers and spoke further. \"If it were to happen tomorrow,\" she said squeezing Michelle's hands, \"I wouldn't care one way or another if you wanted to be Michelle or Michael, I like who you are inside, how you look to the rest of the world doesn't bother me!\"\n\n\"Well, that's good to know.\" Michelle blushed deeply at Brenda's words.\n\n\"Now take your bra off and put your gown on,\" Brenda instructed, \"the Dr. will be here any minute.\"\n\n\"Thanks.\" Michelle replied doing as she was told.\n\nJust as Brenda had predicted, the Dr. did show up within moments of Michelle getting the robe on. She struggled to pay attention to what he was saying, and simply agreed when he asked questions while unable to shift her focus from her favorite nurse. While Michelle couldn't really make sense of her life, it seemed Brenda didn't care and accepted her for whomever she wanted to be. How was that possible? Then again, how was any of this possible? The Dr. left the room, leaving Michelle alone with Brenda again.\n\n\"On Thursday night you'll have to stop eating by midnight, nothing but clear liquids Friday morning, okay?\"\n\n\"Um, what?\" Michelle responded.\n\n\"You're having surgery on Friday,\" Brenda replied as she started to rub the estrogen cream on Michelle's breasts, \"were you even paying attention?\"\n\n\"Uh, I guess not.\" Michelle blushed in response.\n\n\"Well you agreed to it, so it's going to happen,\" Brenda shook her head wondering what was going on with Michelle that she wouldn't pay attention, \"are you ready for this?\"\n\n\"Yeah, I'll be good.\" Michelle responded. \"I mean, you'll be there right?\"\n\n\"Yes, I'll be there,\" Brenda reassured her, \"I promise.\" Brenda finished with the cream, then washed her hands in the nearby sink. \"Who do you think made sure you had an appointment on Friday after all?\"\n\n\"Are you planning on taking care of me?\" Michelle felt the oddest sensation, an emotional warmth she'd never experienced before.\n\n\"Would you rather have someone else to it?\" Brenda asked as she dried off her hands.\n\n\"Not at all!\" Michelle responded. \"But we will have to be at your place, I still have a roommate.\"\n\n\"That's fine,\" Brenda replied helping Michelle into her bra, \"I'm okay with one, not two.\" Brenda walked to the door, turning to say, \"I'll see you for lunch.\"\n\n\"Sounds great to me!\"\n\nMichelle finished dressing, enjoying the feeling of her freshly injected breasts and wondering what they would feel like in another week. Walking past Brenda, Michelle gave her a quick wink before walking down the stairs to the office. She desperately tried to settle into work, but her head was swimming. Between her exchange with Brenda and the emotional feeling that brought out, and the fact she would soon be called into Ms. Allison's office to go over the weekend, she could hardly focus.\n\n\"Good morning Sweetie!\" Ms. Allison said as She walked into the office.\n\n\"Good morning Ms. Allison.\" Michelle replied sitting upright.\n\n\"In a few minutes a young man will be entering the office,\" Ms. Allison said as She walked up to the desk, \"have him wait here until I tell you to send him in.\"\n\n\"Yes, Ms.\" Michelle replied wondering if Ms. Allison had found her replacement already.\n\n\"Offer him a glass of water or something,\" Ms. Allison said as She looked Michelle over, \"maybe do some filing, apparently he has quite the heel fetish.\"\n\n\"Yes, Ms.\" Michelle replied feeling a chill race up her spine.\n\nAs Ms. Allison walked down the hall to Her office, Michelle quickly took out her mirror and checked her makeup. Reapplying her lipstick, Michelle checked her hair, then crossed her legs trying to appear as sexy as she remembered Babette looking her first trip into the office. She didn't have to wait long as she watched the office door open slowly.\n\n\"Hello?\" The young man said as he stepped into the office.\n\n\"Good morning,\" Michelle smiled warmly lifting her leg a bit, rubbing it against the other to show off her heels, \"please come in.\"\n\n\"Uh, my name is Dan,\" the rather timid young man said, \"I mean, uh, Daniel and I have a job interview.\"\n\n\"Nice to meet you Daniel,\" Michelle answered seeing so much of herself in him, \"why don't you have a seat?\"\n\n\"Thanks.\"\n\nMichelle could see Daniel's eyes following the lines of her legs. As a result, Michelle occasionally moved her legs, pointed her toes, or something else to highlight and entice his obvious gaze. It was almost like watching a dog's eyes follow their favorite ball.\n\nDaniel wasn't much to look at, he was short and thin. He wore a pair of ill-fitting dress pants and a shirt that needed to be ironed and was probably too big for him as well. He had dark hair and a soft complexion as well. Traits Michelle recognized in herself when she first entered this office. She remembered sitting in the chair Daniel occupied thinking Babette must be a model or something.\n\n\"Daniel, would you like some water? Or a coffee?\"\n\n\"Um, what?\" Daniel shook his head to clear the fog.\n\n\"Would you like coffee or water?\" Michelle asked again.\n\n\"Oh, no thank you.\" He replied.\n\nMichelle slowly got to her feet, picking up the mail from Friday and a couple empty folders before walking to the file cabinet. She had to smirk to herself knowing she could have walked over empty handed and Daniel wouldn't have noticed. The file cabinet was in the perfect position, placing Daniel off to the side but mostly behind Michelle as she stood. She relished in the feeling that she was enticing this stranger, feeling his eyes on her. While the cabinet was only five drawers tall, and Michelle could easily put something in the top drawer without standing on her toes, she stood lifting the heels of her shoes off the floor as she opened the drawer. Doing absolutely nothing but standing there, Michelle lifted one foot pointing her toe as she pretended to struggle with something. In reality the struggle was not giggling as she knowingly tortured Daniel.\n\n\"Silly me,\" Michelle tersely whispered at herself, \"this goes in the bottom drawer!\" Taking half a step back, Michelle leaned forward at the hips, keeping both of her legs straight. \"What was that?\" She said turning to look at Daniel who'd just groaned a bit louder than he'd expected.\n\n\"Oh, nothing.\" He sheepishly replied while trying to find something interesting on the bare wall to look at.\n\n\"Okay.\" Michelle replied, continuing to stand as she was while feeling the blood rushing to her head.\n\nShe could only stand like that for a couple of minutes, but eventually moved to the center drawer, keeping her back arched, but pushed out, and legs stiffly showing off her 4 plus inch heels. When her office phone beeped, Michelle chose to walk to the front of the desk and bend over it, again lifting a foot pointing it toward the front door, to answer.\n\n\"Michelle, is Daniel here?\"\n\n\"Yes, he is!\" Michelle responded unsure if Ms. was appropriate in this instance.\n\n\"Very good,\" Ms. Allison replied, \"please walk him back to My office.\"\n\n\"Of course!\" Michelle responded, slowly standing again. Michelle adjusted her hair, and pretended to fix her blouse while slowing turning to face the young man who was adjusting his crotch. \"If you'd follow me, please Daniel.\"\n\nMichelle turned to hide her smile as Daniel slowly stood and adjusted his crotch again. She was sure her antics had gotten him hard, and was quite proud of herself for getting him ready to meet Ms. Allison. Michelle was not so far removed from meeting Ms. Allison the first time that she didn't know what he was in for this morning. Surely, Ms. Allison would be wearing a pair of towering heels selected based on Daniel's personal likes. Then there would be the financial talk, which was so difficult to fathom while being so aroused. Michelle made sure her legs crossed with each step, making her hips sway in the snug fitting dress. As she reached the door, Michelle slowly opened it, holding it in place so Daniel had to walk closely by her to enter.\n\n\"Good luck!\" Michelle said to him with a wink causing Daniel to blush deeply.\n\nMichelle tried to busy herself, wondering if she would be called into the office as Babette was that first day. Babette had entered and shown off her caged \"manhood\" to a scared Michael. She tried to replay how the interview had gone in her head, and at what stage Daniel could be at as she eyed the office door. Time seemed to stand still. There was certainly no question whether Michelle could show her caged cock to Daniel, she had certainly gotten past where she was at this point in her career, and trusted Ms. Allison completely. Suddenly the door to the office burst open. An obviously flustered Daniel making his way down the hallway still adjusting his crotch.\n\n\"No fucking way!\" He spat as he stormed toward Michelle's desk. \"Are you one of them?\" He blurted at her, not waiting for an answer. \"Fucking freak!\" Daniel stormed past Michelle's desk and out the door.\n\n\"Michelle,\" the phone beeped and a very calm sounding Ms. Allison said, \"could you come in here please?\"\n\n\"Yes, Ms.!\" Michelle immediately responded walking briskly down the hall to Her office.\n\nUnsure of what to say, Michelle stepped into the office closing the door behind her. As usual, she undid her blouse and removed her leather pencil skirt, hanging both on the door. With no dildo hanging from the door, Michelle walked toward the desk where her Boss sat. Ms. Allison motioned for Michelle to sit in the chair, which she dutifully did as she anxiously waited for Her to say something.\n\n\"Are you okay sweetie?\" Ms. Allison finally asked breaking the uncomfortable silence in the room.\n\n\"Yes, Ms.,\" Michelle responded, \"that was unexpected, did he do anything in here? I mean, are you okay Ms.?\"\n\n\"Oh yes,\" Ms. Allison smiled warmly, standing and walking around Her desk She sat on the edge showing off the nearly 6\" black patent heels with a thin silver spike, \"not everyone realizes the benefits of working here unfortunately.\"\n\n\"That is true,\" Michelle smiled, feeling her cheeks turning red, \"I've honestly never been happier.\"\n\n\"I am so very glad to hear that,\" Ms. Allison sincerely replied, \"tell Me about your weekend, did you have fun?\"\n\nMichelle shared everything from getting ready straight through when she left Brenda's apartment. She had no ability to hide anything from the Woman who'd so liberated and improved her in every way. Michelle then continued telling Ms. Allison about her upcoming surgery and Brenda's offer to look after her over the weekend.\n\n\"It seems your relationship with Brenda is quite unique.\" Ms. Allison said.\n\n\"I'm just not sure what I can and cannot share with her when it comes to work,\" Michelle swallowed hard before she continued, \"it's not like I can really admit to her about where this training is heading, can I Ms.?\"\n\n\"While she seems quite open minded,\" Ms. Allison replied, \"and she didn't run away when you kissed Jeff or flirted with the other gentlemen, I'm not sure she would be as understanding of some of the dates you will more than likely go on.\" Michelle nodded her head. \"I will say that she has had a very positive effect on who you are,\" Ms. Allison continued, \"and you seem good for her as well.\"\n\n\"Thank you, Ms.\"\n\n\"I will make a small exception for you,\" Ms. Allison said as She stood and walked behind Her desk, \"find out when the wedding is taking place, and I will schedule your date with Mikey for another weekend.\"\n\n\"Thank you so much Ms.!\" Michelle could barely contain herself.\n\n\"Things will progress rather rapidly over the next few weeks,\" Ms. Allison said looking over Her calendar, \"after the date I will schedule your first dinner.\" Michelle anxiously sat quietly waiting to hear what this would involve. \"There you will meet ten or more clients that will be interested in your particular likes, some will be escort opportunities and other's will be more deliberate.\" Michelle nodded. \"Obviously My Friend Ms. Amy has already expressed interest in seeing you again.\" Michelle smiled and shuddered at the idea. \"There will be a shopping trip involved as well as some items you'll need in the future will be more of a custom variety. But, your chest will need to heal before that happens.\"\n\n\"Yes, Ms.\" Michelle responded. \"Can I ask Ms.?\"",
        "\"Go ahead My sweet girl.\"\n\n\"The gentleman today, Daniel,\" Michelle shifted slightly in her seat, \"he is obviously a perspective replacement for me in your front office?\"\n\n\"He was a candidate for it, yes.\" Ms. Allison replied. \"Although he was a bit of a long shot.\"\n\n\"A long shot?\"\n\n\"I don't want you to be offended by what I say next,\" Ms. Allison paused for a moment in case Michelle wanted to object, \"but you were the ideal candidate based not only on your personality score, but your financial status and, truth be told, your own self-worth.\" Michelle nodded knowing She was speaking the truth. \"Had you not answered the ad for this job, you'd still be living barely above the poverty line in the same crappy place with no love life or prospects of any kind of sexual enjoyment outside of your hand.\" Michelle could not protest the accuracy of anything that had been said so far. \"Daniel is not quite there,\" Ms. Allison continued, \"and as long as he's happy being a chronic masturbator in a dead-end job then that's where he will stay.\"\n\n\"I understand, Ms.\" Michelle responded. \"When I had my first meeting with you, Babette was called in to show off her, um, cage.\"\n\n\"Would that have been a problem today?\" Ms. Allison asked raising an eyebrow.\n\n\"Not at all Ms.,\" Michelle quickly responded, \"I was actually waiting for the call when he stormed out.\"\n\n\"If I didn't think you were ready for progressing to the next stage, I wouldn't be looking for a replacement already.\" Ms. Allison stated. \"Now, while you did a decent job of stuffing those five-dollar bills into a strippers G-string, there is the matter of ten unspent dollars.\"\n\n\"Yes, Ms.\" Michelle shuddered in response.\n\n\"There are several items on the cabinet you need to put on or bring to the desk,\" Ms. Allison suddenly had a wry smile cross Her face, \"I suggest you're quick about it or your lunch date will come in finding you in a very interesting position!\"\n\n\"Yes, Ms. Allison!\" Michelle replied quickly getting to her feet and rushing to the cabinet.\n\nBy now the items had all become quite common place, Michelle wasn't a wide-eyed virgin to bondage that she'd been when she first arrived here. She quickly attached the cuffs and collar in place, making sure to fasten the small brass padlocks securing each into place. The rather large plug slid into her greased ass easily, causing her to feel full and slightly stretched once the bulb was inside her. The collar she'd secured had a strap that went across her mouth, two large snaps held a gag, on the inside of her mouth was a three-inch dildo while outside a thin five-inch phallus protruded lewdly from her face. She picked up the spreader bar and turned to face Ms. Allison.\n\n\"Off with the thong My slutty sissy!\" Ms. Allison casually instructed.\n\nMichelle immediately complied, the thought of Brenda opening the office door and seeing her like this running through her mind briefly terrified her. Ms. Allison stood up, taking Michelle's wrists and clipping them to the D-ring at the base of her collar. She positioned Michelle, pushing her feet apart until she teetered on her heels, the locked the spreader bar in place. Standing in front of Michelle again, Ms. Allison hooked Her finger between Michelle's wrist cuffs to keep her from toppling over, then much to Michelle's delight undid the lock holding her cage in place.\n\n\"Now comes the conundrum for you sissy,\" Michelle felt a rush at the word, \"when you meet your friend for lunch, she could potentially taste your cum as you kiss. Or, you can resist and try your best not to orgasm, either way you'll have your cage back on before you leave.\" Michelle groaned as her cock sprang to life at being freed. \"But you will kiss her when she comes to get you,\" Ms. Allison continued, \"and you will use tongue, understand?\"\n\nMichelle greedily nodded yes before Ms. Allison leaned her forward, bending her torso parallel to the floor and hooking Michelle's collar to the desk. Ms. Allison pressed against Michelle's back, causing Michelle to arch it as far as she could, sticking her ass high in the air.\n\n\"Funny thing about spanking sweetie,\" Ms. Allison said as She let Her hand slowly roam Michelle's bare ass, \"in this position, because your muscles are stretched and tight, being spanked actually hurts more than say over someone's knee. Did you know that?\" Michelle shook her head quickly showing that she didn't. \"But I do like to mix pleasure with, well, let's call it pleasurable pain, shall we?\"\n\nSuddenly Michelle heard a loud buzzing sound, unable to see anything past her shoulders, Michelle jumped when the vibrating wand pressed against the base of her shaft and swollen balls. The vibrations were strong, almost uncomfortably strong, but sent waves of pleasure throughout Michelle's body. Her knees buckled as she loudly moaned, then yelped as Ms. Allison's hand came crashing down on her left ass cheek immediately setting it on fire while the wand pressed against the underside of her shaft all the way to the head. Michelle groaned loudly against the cock gag, the tip of the wand did hurt when it got to that point. Ms. Allison eased it back, pressing it against Michelle's swollen balls causing them to ache as well.\n\n\"It sounds like that's uncomfortable sweetie!\" Ms. Allison didn't attempt to hide her glee at Michelle's discomfort. \"I think you'll enjoy this more.\"\n\n\"OWHMAHFUGGGINGGAWWD!\" Michelle bellowed around the cock gag as the wand was pressed hard and held against the base of the plug.\n\nThe vibrations coursed deep into her body, radiating outward like a constant drop into a pool. It only distracted her for a moment as Ms. Allison's hand came crashing down onto her other ass cheek, setting her body on fire again. It went on like this for what felt like hours, Michelle had no idea how many times she'd been spanked. She highly doubted it was only 10 swats. Maybe 10 to each cheek? The swats were constantly intermingled with the wand pressing against her, sometimes providing intense pleasure while other times providing intense pain. One moment Michelle was in heaven, the next she was in hell, and sometimes she was in between the two.\n\nMichelle's body tensed again as Ms. Allison moved the wand around the base of the plug and occasionally pressed it against the center. Ms. Allison pressed and released the wand against the plug again and again, making Michelle feel as if she were being fucked by the vibrating plug. The noises escaping from around her gag were incomprehensible as far as words, but the emotion behind the sound was clear. Michelle was going to cum. In spite of herself and how hard she shook her head back and forth showing she didn't want to do it, Ms. Allison was going to make her sissy orgasm. Ms. Allison had already placed a stool directly underneath Michelle's twitching and leaking shaft, it was only a matter of time before Michelle covered it in her sissy juice.\n\n\"You're not thinking about Mikey fucking you like this are you sweetie?\" Ms. Allison's voice was low but firm as She reached underneath Michelle and started to roughly massage her balls. \"I'll take that long groan as a yes!\" Ms. Allison smiled to Herself, delighted at Michelle's actions. \"Look at you, all bound tight and full on both ends,\" She continued, \"imagine if that were a real cock in your mouth!\"\n\nAnother groan emanated from Michelle's mouth just as her balls tensed. Allie could see a tear forming in the corner of Michelle's left eye as she came, her body rippling as her balls emptied into the cup on the stool. Allie loved watching their leg muscles spasm uncontrollably as they came, those orgasms were certainly nothing like they'd enjoyed as men, which added to the appeal of continuing on their journey. Male orgasms felt nice compared to what Michelle had just experienced, which was an orgasm that shuddered and rippled through her entire body.\n\n\"That's a good girl,\" Ms. Allison praised as She unclipped Michelle's collar from the desk, \"time for cleanup though.\" Allowing Michelle to stand, Allie put the cup in Michelle's hands while pushing the dildo protruding from Michelle's mouth into it. \"Suck on it like a straw.\" Michelle immediately complied, sucking hard, pulling thick globs of cum through the cock in her mouth. \"Just like Mikey will do in a couple weeks!\" Michelle groaned again at the thought.\n\nEvery so often a glob would get stuck in the thin breathing hole of the cock gag, causing Michelle to suck harder until the glob freed and flew into her mouth like a cum shot. Michelle imagined it would be like this when she sucked a real cock, she closed her eyes relishing the idea, lost in the idea momentarily that she was truly sucking a real cock and being rewarded with his sperm! It made her knees weak and her body tremble. Thankfully Ms. Allison was still holding Michelle up, even if it was just by her collar.\n\n\"Now be a good girl and stand still,\" Ms. Allison instructed as She started to manipulate Michelle's flaccid cock, \"I can't have you walking around uncaged after all!\"\n\nAllie undid the padlocks on Michelle's ankles, wrists and neck which allowed Michelle's arms and the spreader bar to fall free. Now able to stand and move, Michelle remained still awaiting her next instruction.\n\n\"You go clean up and fix your makeup and hair,\" Allie instructed, \"your lunch date will be here soon!\"\n\nMichelle mumbled \"Thank you, Ms. Allison.\" Around the gag before she exited the room.\n\nWalking into the bathroom Michelle knew she would be a mess before she even looked in the mirror, she could fee perspiration covering her body. \"This is going to take a bit,\" she said to her reflection, \"and so is this.\" Michelle walked to the toilet, taking her time removing the large plug that had filled and tormented her ass. \"Ohhhhhhh fuck!\" Michelle moaned softly as the plug slid free.\n\nMichelle adjusted her makeup, and hair, as best she could returning her look to almost as good as before she'd walked into the office. It took some doing, but without a clock in the bathroom, Michelle had no concept of how long it had taken her. As Michelle stepped back into Ms. Allison's office she discovered her Boss was no longer present. Taking a quick look at the phone on Ms. Allison's desk, it was 12:15! Michelle quickly put on her thong, hastily grabbing her skirt and stepping into it. Brenda had been due to arrive fifteen minutes ago, which meant she was sitting and talking with Ms. Allison while Brenda had gotten ready. Fixing her blouse, Michelle stepped through the office door hearing the casual banter of two women coming from the lobby area.\n\n\"There she is!\" Allie beamed with pride as Michelle entered the lobby. \"I was hoping you wouldn't be much longer,\" She continued, \"not that I'm not enjoying your company!\"\n\nMichelle's face was whiter than her cream blouse as she wondered what Ms. Allison and Brenda could possibly be talking about. Brenda's warm, reassuring smile was almost nerve-wracking for Michelle as it gave away nothing. Obviously, Brenda hadn't been horrified about what they'd discussed or what she'd been told, so that was a positive.\n\n\"It's been a fun conversation!\" Brenda replied with a warm smile. \"And to think all this time I've been afraid to walk in here.\"\n\n\"You are welcome here any time,\" Allie slowly rose from Michelle's desk where She had been perched, \"I really enjoyed our conversation today.\"\n\n\"I did too!\" Brenda replied leaving Michelle standing there mouth agape. Brenda stepped forward, meeting Allie in a quick hug, while Allie kissed Brenda's cheeks. \"Thank you again!\"\n\nBrenda then took Michelle by the hand, leading her toward the office door, Michelle was unable to speak or really react as her mind raced to understand what she'd just walked into. Her Boss had just spent the better part of ninety minutes bringing Michelle's body to different levels of sexual bliss while tightly bound had just made quick friends with Michelle's girlfriend. Wasn't one of them the other woman? Wasn't this not supposed to happen? Michelle's brain, which wasn't really ready for deep, complex thought, was racing.\n\n\"By the way,\" Brenda said turning to face Michelle as they got to the door, \"it was suggested that I do this before we left.\" Brenda's left hand lightly touched Michelle's face as she brought her lips to Michelle's. While Michelle initially resisted, Brenda pressed her tongue forward pushing it into Michelle's mouth which eventually opened. Their tongues touched; Michelle was sure Brenda could taste what was left behind in her mouth. \"For a girl who loves kissing,\" Brenda said as their kiss slowly broke, \"you seemed pretty hesitant this time.\"\n\n\"Sorry, I guess I just got caught by surprise.\"\n\n\"If you say so!\" Brenda giggled, nonchalantly leading Michelle out of the office and to the elevator.\n\nMichelle remained mostly quiet as they ate lunch. She was still nervous, what could they have been talking about? How could Ms. Allison suggest that Brenda kiss her and Brenda not question it? How could they have kissed and Brenda not tasted the same thing she'd tasted Saturday night or Sunday morning? Surely she recognized the flavor of Michelle's precum on Michelle's lips!\n\n\"Why so quiet?\" Brenda asked as they sat in the park.\n\n\"Just wondering what you and Allison talked about?\" Michelle finally blurted.\n\n\"Oh, you know,\" Brenda smiled, \"just girl talk.\"\n\n\"Well, I'm a girl,\" Michelle tried to reason, \"don't I automatically get included in girl talk?\"\n\n\"Yes and no,\" Brenda replied with a knowing smile, \"in this case it's a definite no.\" Michelle showed minor displeasure at the response she received. \"But I will tell you one thing,\" Brenda said coyly, \"if you promise to stop pouting.\"\n\n\"Okay, it's a deal.\"\n\n\"She offered to send me the link to the same personality test you took before you were hired.\"\n\nMichelle felt the blood drain from her face at those words. What could she possibly say to that? Don't take it? How could she possibly admit that the test would go so much further than Brenda could imagine, digging into her browser history and financials?\n\n\"Maybe you should take it at work?\" Michelle replied hoping that planting that simple seed would protect Brenda from having all her secrets discovered.\n\n\"I'll try,\" Brenda replied, \"it should be a slow afternoon in the office, so I may have time.\n\n\"Okay.\" Michelle felt suddenly relieved.\n\nThey walked back into the office building, and to their usual stairwell. Brenda led Michelle to the stairs, playfully trying to lift the back of her snug fitting dress.\n\n\"How am I going to look at that sexy ass of yours when your skirt is so tight?\" Brenda playfully smacked Michelle's ass causing her to yelp slightly. \"Oh it wasn't that hard you big baby!\"\n\n\"No, you just caught me by surprise.\" Michelle replied feeling the sting on her recently spanked bottom.\n\n\"I didn't know you were so delicate.\" Brenda teased softly rubbing Michelle's leather covered butt.\n\n\"Maybe I should spank your bottom,\" Michelle teased, \"for not including me in the girl talk!\" Michelle tried to move behind Brenda, reaching around her to try to spank her. \"You've already said I'm the girlie one in the relationship after all!\"\n\n\"If you behave maybe I will let you spank me,\" Brenda retorted, \"but remember who's taking care of you this weekend.\"\n\n\"Okay, you have a very valid point.\" Michelle responded.\n\nWalking up the stairs, they stopped at Michelle's floor. Ducking behind the door, Brenda pressed her body into Michelle's, pinning her against the wall. Her hands started at Michelle's hips, rapidly moving to her chest as their mouths met, tongues exploring each other's mouths with abandon. Michelle's hands went to Brenda's butt, as they kissed Michelle gave Brenda's butt a firm spank. Nowhere near what Ms. Allison had delivered earlier but firm enough the sound could be heard through the stairwell.\n\n\"Naughty girl!\" Brenda giggled. \"You'd better behave or you're going to end up toppling over because of your new boobs on Friday!\"\n\n\"Okay, I'll behave,\" Michelle responded, \"for now.\""
    ],
    "authorname": "Ms_Allison",
    "tags": [
        "men in heels",
        "femdom",
        "female domination",
        "sissy slut",
        "men in lingerie",
        "forced feminization",
        "forced fem",
        "cross dresser",
        "crossdressing"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-agency-ch-14"
}