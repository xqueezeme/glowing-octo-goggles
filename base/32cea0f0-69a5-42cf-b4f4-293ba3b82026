{
    "title": "The Twelve Tables Ch. 27",
    "pages": [
        "Authors Note: Thank you to everyone left comments or sent me feedback about previous chapters of this story. Thank you again to Margaret who proofread for me. ~ellie\n\nPeri fidgeted nervously. Andie had been so good over the holidays at choosing her wardrobe that she had agreed to let her make a quick shopping trip for something sexy for her weekend away with Josh. While Andie claimed it was all the rage, Peri thought the Body Bow was ridiculous and she had to read the instructions several times before being able to put it on properly and it still looked lopsided. She had stared at the pictures she could find of it, on her phone, until she realised it was supposed to look lopsided. \n\nShe was considering taking it off but after all the trouble and time wasted putting it on she was reluctant to do that either. She was feeling a little out of sorts about not going home to check on the babies before coming here. She missed them terribly and even though she knew Antonia and the nannies would look after them without any problems, she craved the feel of them in her arms. She had been considering a date night before Joseph had pressed upon her the need to have some time alone with Josh and she had come up with the plan to have a weekend away. It would have been better she lamented if she hadn't organised it following her night away with Dante.\n\nLooking into the mirror, she tried to put her worries about the babies to the back of her mind and get ready for his arrival. She stood arguing with herself about the Body Bow when her phone rang, and she looked at it as she picked it up.\n\n\"Josh?\" she asked curiously into the phone.\n\n\"Hey there, I think I'm going to be late for whatever you had planned for tonight, Papa has detoured our plane to Andreas' winery,\" he said apologetically. \n\n\"Oh? It's still only early. What time do you think you'll be done there?\" She asked.\n\n\"You know what they're like,\" he said, and she could tell he was rolling his eyes. \n\n\"Maybe you should take a walk up to the chalet? You never know what surprises you may find there,\" she tried to keep her voice even, but she heard the silence on the other end of the phone stretch out and imagined him looking up to the small building at the top of the hill. \"I might have left something nice for you there,\" she teased further into the silence. \n\n\"I might have a look later then. I'm sure Marisol won't let me go without grilling me about the trip. You know how she is,\" he said nonchalantly, glad that she couldn't see the grin on his face, as he walked up from the airstrip toward the house behind his father and Uncle.\n\n\"I think you should go up before you see her then, the surprise might not be as fresh if you take too long,\" she said trying to think fast.\n\n\"Did you leave me bread that will go stale?\" he laughed. \"I'm sure it's nothing that can't wait an hour or two,\" his tone was so casual she believed he was serious and wasn't sure what to say as the silence stretched again. \"Peri are you still there? If it means that much to you I'll go up now,\" he said worried at her silence.\n\n\"It sort of does,\" she said, \"I'm sure Marisol will understand if you don't mind the extra walk up the hill.\"\n\n\"For you, anything, always and forever,\" he said with meaning. He ended the call saving her from saying anything else.\n\nGerrard and Phillipe were at the house. They had followed her here from the marina. The winery was considered a safe zone, due to its location and the security systems already in place, so they didn't have to stay as close as they had out on the bay with Dante. She knew if Josh went to the house first he would realise she was here and wouldn't have long to wait even if he didn't come here first but it would ruin her surprise.\n\nShe suddenly became self-conscious, 'What if he doesn't come alone?' Everyone else knew she was here the only one who might come would be Joseph to check on her. She ran into the bathroom to grab a bath sheet just in case Josh wasn't alone.\n\nShe heard the door of the chalet open and a single set of footsteps enter. Relaxing, she stepped out of the bathroom and grinned. \n\n\"Now that's a gift worth running up the hill for,\" Josh breathed, as he took in the sight of her wearing the Body Bow. \"I should warn you, though, as much as you're the sexiest gift I've ever received, I'm a married man, and my wife is waiting for me at home, so we can get away for a romantic evening.\"\n\n\"I hope she knows how lucky she is having such a devoted husband,\" Peri swayed her hips and closed the gap between them. \"I mean I wouldn't let myself be gifted to just anyone.\" She teetered on the too high heels, craning her neck up to kiss him softly. \"But if you don't want the gift,\" she went to turn away and felt his hand curl around her waist.\n\nJosh was done joking, he pulled her to him and kissed her deeply holding her close. When the kiss broke, he smiled down into her upturned face. \"Hi,\" he said huskily. \"I've missed you.\"\n\n\"Hi,\" she whispered smiling back at him. \"I love you.\" She pressed against him, tightening her hold on him. The relationship she had with Dante was wonderful and was only growing stronger, but Josh was and continued to be her first real love. She breathed in the smell of him and closed her eyes contentedly. \"I need this,\" she whispered, \"I need you.\"\n\nJosh's heart skipped a beat, and the reprimand he had planned to give her, about telling him her plans regardless of his father's wishes, disappeared at that moment. He heard the truth of her words and it filled him with an unexpected sense of joy that he couldn't explain, even to himself. He had come up the hill eager to see her and tried to bury his anger about the evening before and then being here now without telling him. He hated surprises like this. He hated feeling out of control, and he didn't want to argue with her here. Not in this place that held so many memories for him.\n\n\"I need this too,\" he replied softly, holding her as they remained standing in the middle of the room. He needed her, not this tryst in the chalet, but he closed his eyes and swallowed down his anger and disappointment. \"I've been on the road since early this morning why don't you fill the bath, and I will see what we have in the fridge to drink. \"Then I'll take my time to open my sexy gift,\" he tugged on the material bow that sat across her breasts. \n\n\"I didn't know if you would be hungry so I have some pasta I made earlier that I can reheat if you're hungry,\" she suggested before moving to do as he asked.\n\n\"Have you eaten?\" he asked. \n\n\"I ate while I cooked, I'm not hungry at all, but I will make you something else if you don't feel like pasta,\" she offered.\n\n\"Is it the one with chilli that you make?\" he asked enthusiastically.\n\n\"Now that I am not feeding the babies, I can eat anything I want again,\" she laughed, \"And I used to make that for you all the time before our lives became so complicated, so I thought you might like it.\" At the mention of the babies his face changed and she worried that her regret about not seeing them today had carried into her voice.\n\n\"Let's fill up the tub and relax for a while.\" He let her go and walked toward the fridge. It was full of his favourite snacks and beer and reminded him of when it had just been the two of them. He felt a twinge of regret that they couldn't have done this at home where he could have seen his children as well as spend some alone time with Peri. He grabbed a beer for himself and a bottle of water for her and headed over to the bath that stood in a little glass alcove between the tiny living area and dining area within the kitchen. The small chalet was one large room with an attached bathroom that doubled as a steam room. It was an ingenious alpine style used in the high mountain resorts. A combination of the hotel room and Swiss chalet styling. \n\nPlacing the two bottles on the tile, that surrounded the tub, he stripped off his shirt, pulling it over his head rather than undoing all the buttons. He reached for his belt, but Peri stepped forward.\n\n\"Let me,\" she said softly and put her hands over his. Josh lowered his head and kissed her, as her fingers worked quickly on the belt, button and zipper. Her hands pushed the pants and his underwear down over his hips, but he stopped her from sinking to her knees before him. He didn't want that right there and then.\n\n\"My turn,\" he grinned once again squashing his bad mood and kicking his pants across the room. He ran his fingers around the material covering her shoulder down to the bow across her chest. \"The question would be how,\" the corners of his mouth quirked up, forming a smile that barely made it to his eyes as he spoke. He watched as she stepped back and slid the ribbon-like material from her shoulder, then pulled the bow up and to the left, undoing the hooks and eyes hidden there, and the bow fell away from her.\n\n\"Mine,\" Josh groaned pulling her back into his arms and kissing her. He helped her into the tub before climbing in behind her and pulling her back onto his chest. He sighed contentedly, just happy to be with her again, regardless of where they were. \n\n\"Is everything okay?\" Peri asked craning her neck to look up at him. She had expected a lecture at the least, physical punishment at worst, for not telling him about the plans for the weekend. This calm and seemingly docile side of Josh worried her.\n\n\"Sydney is not my favourite of places. I think I needed this bath to wash the filth of it from me,\" he said quietly. \"I missed you and the babies. Did you have a good time with D. on the yacht?\" he asked without any rancour.\n\n\"The yacht is amazing you would love it,\" she said still concerned by his subdued mood. \"We talked a lot, I never really got the chance to know him properly the way I got to know you. I never even considered that he was that much older than you. I think it bothers him a little, the age gap between us.\"\n\n\"I think it's taken some time for him to get over the fact that his little brother grew up and married such a wonderful woman,\" he chuckled. \"I might have to have a word with him about being a dirty old man, preying on such a beautiful young lady,\" his chuckle turned into a laugh.\n\n\"Don't do that,\" Peri smiled enjoying his laughter. \"I think he is sensitive about it, even though it's never crossed my mind.\"\n\n\"That's because you just accept people as they are, not everyone is like that. I think all of my brothers have had to rethink their idea of me as the kid brother since the announcement,\" Josh admitted.\n\n\"Dante said that they hadn't thought of you in terms of the chair, now he couldn't imagine anyone else occupying it,\" she said softly reassuring him of Dante's support.\n\n\"I think it's been harder for Ben than anyone. Not because he is the second son and everyone thought the chair would go to him, but because he watched out for me from the time I moved to the city, like Papa would. I'll always be that kid brother to him.\"\n\n\"I always wanted a sister or brother, someone who would look out for me. It must have been nice having the five oldest brothers all looking out for you,\" she sighed.\n\n\"Seven not five,\" he groaned. \"It was okay sometimes, but more often than not, they teased, bullied and picked on me,\" he said with the mock sadness of a child. \"I guess there was always someone to ride with or just hang out when they were home for the holidays, so that was good. Carlo was the only one who never treated me like a kid. I loved him even more for that,\" Josh said.\n\n\"So Carlo was the favourite brother?\" Peri asked. \n\n\"I don't know that I had a favourite brother, they were all pretty good in their way. I didn't get picked on any more than the others even though it felt like it at the time. They all taught me how to do something cool I guess,\" Josh seemed to think about it.\n\n\"Cool like what?\" Peri was genuinely curious.\n\n\"Let's see, Ang and Ben taught me to surf one summer when I was home from school. Carlo taught me to ride like a rodeo cowboy. Lio taught me how to shave properly,\" he scratched at his stubble. \"D. taught me to drive, and appreciate the necessity of good driving music,\" he laughed.\n\n\"Mama told me about that,\" Peri laughed as he murmured in surprise. \"She didn't like that the first driving lesson was about the music selection. She thinks you two are trouble when you're together,\" she grinned and rolled slightly to her side in the huge tub to look up at him without craning her neck. \"I have to say I think I agree with her.\"\n\n\"Speaking of trouble,\" his voice lowered slightly. \"I can understand that you thought you were doing the right thing, and you didn't realise you would have no reception when you tried to call me but,\" he paused. \"Tell me next time, I can't bear it when you just disappear, I don't need surprise weekends. This is great, amazing, awesome to have the whole weekend with you but tell me if you're going away overnight, just in case I can't contact you.\" he was having trouble keeping his voice even, so he picked up his beer and took a swallow.\n\n\"I'm sorry,\" she apologised making no excuses for her behaviour. \"I knew you wouldn't be happy when you found out, and I should have told you.\"\n\n\"Yes you should have,\" he said sternly but seemed reticent to lecture her as she had expected. \"Peri,\" he said cautiously. \"Does it bother you when I call you mine?\"\n\n\"I don't understand why you would ask that. That's what we have always called each other, from our first weekend in this chalet,\" confusion laced her voice.\n\nHe sighed unsure of how to say what was on his mind. He had spent a sleepless night thinking about what his father had said and remembering the vision of the Martino Prince with his submissive on a leash in public. It had shocked Josh to find out that the girl wasn't a kept but rather a woman Alfonzo was considering marrying or as the pretty young man said, owning. Josh expected Peri's love and submission, but he would never treat her so badly, even if she agreed to such a scenario. \n\n\"I want you to know that I love you. You are my soul mate and the other half of my being, you are mine in more ways than I ever dreamed another person could be,\" he began trying to make sense of how he was feeling. \"I'm not jealous of Dante because I know that everything that has happened in the last year to get us where we are now, is because you feel the same way about me,\" he knew he wasn't making much sense. It was hard to explain without her knowledge of what he had endured from his father and the meeting with the Martino heir last night.\n\n\"I do feel the same. After all that happened, I asked you to marry me in case you have forgotten. This life, my life with you is what I chose, what I want, I love you because you are mine just as I am yours,\" she reassured him sensing something was bothering him on a much deeper level. \"I know you're not jealous of Dante,\" she leant into him and curled her arms around him. \"You have no reason to be. We've been through so much to be here together, and we're as much in love as we've always been. I explained that to Dante last night. You and I had a courtship, a time of growing together and getting past that initial rush of lust and endorphins to something much deeper and real. He and I have never had that same sort of time of getting to know each other as individuals.\"\n\n\"I don't know that I am exactly past the lust and endorphins stage,\" Josh grinned reassured by her words and running his hands down her body beneath the water. \"And that was a shotgun wedding after all,\" he placed his hand over her belly. \n\n\"You think I trapped you into marrying me?\" she looked up in mock horror.\n\n\"Well, I was a very eligible bachelor. No one would blame you, I'm sure,\" Josh teased. \n\n\"Poor man trapped into marriage with a nobody like me,\" she said and frowned as she remembered Cherise's attempt to trap Dante into marriage. \"The problem with that thinking is that if it were the case I don't think your father or Dante would have allowed it to happen. Given the history,\" she said meaningfully knowing that Dante had confided the real story of his heartbreak with Josh. \"Perhaps it was you who trapped me into marriage,\" she tried to hide her smile. \"I'd been through a pretty traumatic time, and you didn't know if I was still covered by birth control.\"\n\n\"If I knew it was that simple to get you down the aisle I would have gotten you pregnant long before then,\" he grinned. \"I knew I wanted you forever and always after our first night together.\" They laughed easily together as Josh let his mood soften with her words of love.\n\n\"Did something happen on your trip to make you worry about us? Aside from not knowing where I was until I managed to call you,\" she asked.\n\n\"Papa threatened to ground me like a naughty child. I wasn't exactly rational when I couldn't contact you or Dante. I even tried your security team,\" he admitted. \"I might have raised my voice to him,\" he said sounding contrite and surprising Peri. \"You drive me so crazy when you pull stunts like this!\" Josh felt his anger rising again, despite his desperate attempts to bury it deeply.\n\n\"It was Papa's wish that you didn't know, to be fair,\" Peri said softly. \"Not that I am blaming him, I should have told you myself, I know that now.\"\n\n\"It wasn't that so much, even though Papa gave me a few home truths that were hard to face. It was the Martino family. Have you met with their representative for the family history?\" he asked curiously.\n\n\"Not yet, I was starting with the Battaglia and Farnese families although a few of the others came to visit and start the process with my team. Not the Martino family, though,\" she answered thinking through all the information her team had sent her.\n\nJosh told her what Joseph had said about their history, followed by his meeting with the pretty young prince and the young woman he had under consideration for marriage. Peri stopped him after almost every sentence, asking questions, becoming totally enthralled by the idea of researching this family's history and discovering whether there truly was an unbroken male line from the Savoys. She realised, as Josh teased her about her expecting him to be a walking family encyclopaedia for the tenth time, that she was ready to return to work.\n\n\"I told Dante we needed to talk as a family about me going back to work and where we would live,\" she said. \"I like our home and think it's better for the children to be able to get out and run around in the fresh air. I imagine we will have Ben's children with us for some time now, and that lovely little school is close to the house.\" She added voicing her preference. \"Staying at the penthouse would mean it wouldn't be such a long commute for me, and I could spend more time with the babies as well as the children.\"\n\n\"You seem to have thought about this a great deal,\" he considered her with some surprise.\n\n\"Since the holidays when I saw Antonia's room and knew you would be using the Athenaeum here I have been wondering how difficult it would be to build me a workspace at the house?\" She asked enthusiastically. \"The library we have there is wonderful but if I have the team out there I'd like it to be separate and set up a little differently.\"\n\n\"I thought you said the three of us would discuss this as a family, but you seem to have decided what you'd like already,\" he chuckled. This was the Peri he fell in love with. The woman whose mind was alive and always working on several projects at once. He loved seeing her face light up with the excitement of it all, and if it were up to him alone he would have promised her that he would build an Athenaeum just for her research projects, but he had taken his father's words to heart. He needed to share all of these decisions with Dante. \n\n\"Yes, and I meant it but,\" she blushed. \"After hearing that story, I realise how much I've missed it, the work. I got a bit carried away I guess.\"",
        "\"Truthfully, I've had someone putting out feelers to the properties around ours. I thought Ben might want to stay close by if Emily doesn't recover as quickly as we all hope. Carlo is already moving into the cottage. I'd like that airstrip on top of the hill to be attached to our property, and there are other plans including your secret room to think about this year.\" Josh admitted he had been making plans of his own. \n\n\"Do you think we will be able to expand to the top of the hill?\" Peri asked wide-eyed her mind working to imagine the view from there.\n\n\"I'm hoping so, but we are negotiating with several of the surrounding property owners,\" he shrugged.\n\nPeri lifted her fingers which had started to prune and smiled. It seemed to have been forever since they had just relaxed and talked about the future like this. She craned her neck lifting her face up to his and placing a hand on his cheek. He lowered his head and kissed her deeply.\n\n\"I needed this more than I realised,\" he murmured feeling himself relax properly. \"I have missed moments like this you.\"\n\n\"I've missed it too. I love you, Josh, so much. I don't want our lives to get so busy we forget to take the time to be with each other like this,\" she whispered. She knew that everything that had occurred recently had been outside of their control but taking time like this was in their control, and she shouldn't have needed Joseph to point it out to her. \"Would you like something to eat? Another beer?\" she offered. \n\n\"You don't have to wait on me,\" he cuddled her close.\n\n\"I miss that too. I miss the cooking and looking after you,\" Peri giggled and then looked at him with a soft expression. \"Before our life spun out of control and we lost two people we loved.\"\n\n\"As long as I don't lose you, everything else I can handle,\" he kissed her again. \"Another beer wouldn't go astray. Then we can talk about food if you're feeling hungry.\"\n\n\"I'll grab you one,\" she kissed him again let him help her up and step out of the bath.\n\n\"Chalet rules still apply,\" Josh's voice lowered as he watched her pick up one of the towelling robes. He watched as she replaced the robe and took up a towel patting the water from her body. He had been concerned that after spending the last twenty-four hours with Dante she may be sore and bruised, but there were only small signs of harsh use of her body.\n\nHe sank under the water rubbing his face and neck. He'd spent a long morning meeting with high ranking family members from both factions of the Martino family, and he wondered how Carmen had come from such vapid and self-obsessed people. She was a good looking highly intelligent woman, but he still couldn't imagine her fitting in with elegant, stylish, class-conscious men and women of the Martino family that he had met.\n\nHe wondered how he had never noticed it before on his trips to Sydney and realised that he had been viewing them through a very different lens. They had thought him of no consequence. The youngest of Joseph's eight sons held no power or influence that could benefit them, so they had let him do what he liked, rather than filling his time with meetings and entertainments that were designed to show the family's wealth and influence within the community.\n\nBeing here with Peri had brought him back to reality, and he felt the tension of the last twenty-fours drain from him as he had held her in his arms and just talked. While he had never lived a normal life as most people thought of it, Peri had, and she kept him grounded in reality. Her questions and surprise over expanding their property had made him smile. It didn't matter how many times he told her that she was now a very wealthy woman, it was as if she still had to ask if the things they dreamed of doing were within their means. \n\nSitting back up and pushing his hair back dispelling most of the water from it, he smiled softly at her and took the beer from her as she sat on the edge of the bath.\n\n\"Are you sure you're okay?\" Peri asked softly, her concern evident.\n\n\"I adore you for organising this, I needed some down time with you, to talk about what's going on in our lives,\" he put the beer down after taking a mouthful and stood up. He got out of the spa bath and towelled off trying to formulate what he wanted to say without hurting her feelings. \"We aren't like normal couples who have our children with us twenty-four hours a day, and I look forward to holding them when I get home from a trip. Almost as much as I look forward to holding you. I know how it feels to me so it must be killing you to have left them for several nights.\"\n\n\"You would have liked to go home first,\" she felt her eyes mist as she realised she had done the wrong thing, not just for Josh but for both of them. \"I was trying not to be an obsessive mother hen. It's the first time I have been away from them for a whole day and night and you're right I miss them terribly,\" she admitted and felt the tears forming in her eyes.\n\n\"Then why are we here?\" He asked cautiously, pulling her against his chest. \"I would never expect you to leave the babies for so long,\" his voice was soft, and she could hear the tone of his voice mistaking it for confusion.\n\n\"I guess I just thought that with everything that happened that I needed to give you time away from all the drama and people who are with us constantly at home,\" she said sadly. \"I knew you wouldn't be happy when you found out where I was last night and now that you have pointed it out, I should have known you wouldn't be happy here.\" She blinked her teary eyes as she looked up at him. \"I just thought that this was the place where we opened up to each other, our wants and needs and admitted our love to each other.\"\n\n\"We did all that and more here, and it will always be special,\" Josh agreed. \"I love that you did all of this for me, I have been away not only from you but the babies for one night already, I'm not sure that either of us wants to be away from them for another two nights.\" He masked his real concerns and feelings to appeal to her maternal instincts.\n\nThis was not what Peri had been expecting. She had thought she was just overprotective not wanting to leave her babies. She had expected her time with Josh to be like her time with Dante, full of love and sexual heat. This calm, sensitive side of Josh had caught her off-guard, and she couldn't help the tears that now flowed as she realised how badly she had planned this weekend.\n\n\"You know me better than anyone else on earth. As long as I have you and our family I am a happy man,\" he held her tightly. \"I would never stop you from having time with D. just as he would always give us space when we needed it. We love you, all you have to do is ask,\" he murmured softly. \"Papa is not the expert on me, you are,\" he lifted her chin and gave her a soft smile. \"I would have been just as happy to be lying with you in bed blotting out the world at home after we put all of those noisy, messy, rowdy kids in bed and said good night to the three of our own.\"\n\n\"That sounds wonderful,\" she smiled wondering how she had got this all so wrong.\n\n\"Why don't we go home and hug our babies,\" he suggested. \"We'll still have our time alone if we want it. We can stay in our room or on the balcony. No one needs to know we're there. Dante will still be away for a couple of days so it will just be the two of us, and Mama who will handle anything that comes up if we decide to hibernate between visits to the nursery.\" The more he spoke, the more he convinced himself that this was the best idea.\n\n\"I'll get dressed and pack everything up again,\" Peri said feeling self-conscious standing there naked in this romantic setting and talking about going home because she hadn't thought this idea through properly. She knew she'd disappointed him and that was the cause of his strange mood. \n\n\"Everything?\" Josh looked around raising an eyebrow at her. \"We could give Gerard and Phillip this place for the weekend so nothing goes to waste, minus one small container of your pasta.\" He grinned.\n\n\"It's just,\" she walked toward the bed. \"I believed I had thought of everything,\" she said softly placing a hand on the chest Josh had brought with them the first time he had brought her here and the necklace that draped over it. \n\n\"You quite obviously did. Everything is perfect, in every way, but it's my job to look after you and make sure you are happy. I know you well enough to know that being away from the babies is not what makes you happy,\" Josh took her in his arms again. \"I know I didn't always handle your relationship with Dante well,\" he said remembering when they had come back from the hospital, and he had taken her in a fit of rage, but I have had time to see how happy we can be together, all three of us.\"\n\n\"You are the love of my life, Josh. Never doubt that. I meant what I said before. I chose you and this life. I am so very happy. I love Dante, and we are becoming closer all the time, but you were my first real love, you have made me happier than I ever dreamed possible,\" she declared. \"If we are leaving just for me, to make me happy...\" her voice trailed off.\n\n\"As much as I would love a night away from the world with you here in our little hideout, tonight might be better spent at home. I am as homesick as you are for some little cuddles and kisses from our precious bundles of joy.\" He picked up the necklace and smiled at the memories associated with it. Memories he didn't want to tarnish by losing control of his temper here with her. \"You always looked so beautiful in this,\" he smiled down at her.\n\n\"I always felt beautiful when I wore it,\" she whispered. Josh placed it around her neck doing up the clasp.\n\n\"Mine,\" he murmured huskily.\n\n\"Always and forever,\" she answered with a purr. They kissed deeply, and Josh turned her so her back was against his chest, his hands running down over her breasts and sides as he kissed her neck. Her hands went to his rapidly hardening cock behind her, and she began to stroke him slowly enjoying the feel of his lips on her neck.\n\n\"There's no reason why we can't have a little fun before we leave,\" he murmured feeling relaxed enough to keep his need to punish her under control now. He flipped open the chest they stood beside picking up a pair of cuffs he ran his hands down her arms and standing close enough for her to continue fondling his cock he wrapped her wrists in the leather cuffs and joined them together with the links on each side of them. Satisfied for the moment, he ran his hands back up her arms and over her shoulders in a massaging motion to her breasts. He was glad that he no longer shared that aspect of her with his children and he pinched the nipples making her whimper softly and his cock jump in her hands.\n\nJosh picked up the chest and carried it as he guided Peri to the table. Pushing her over the low dining table, he pulled her ankle to the leg of the table securing it with soft rope. He then pulled her other ankle to the other side and securing it in the same way. He moved up against her then pressing his cock into the crevice between her ass cheeks. His hands smoothed over her back and ran around her sides to wedge his fingers beneath her seeking her nipples. \n\nPeri heard him groan loudly and move away before coming back with pillows from the bed which he stacked one on top of the other then slid under her head and shoulders length-ways. She found herself leaning over the table at almost a forty-five-degree angle her breasts hanging down below her grazing the table top. Standing behind her again his hands gripped her breasts as his cock glided between her ass checks.\n\nHearing her let out a small whimper as he gripped her breasts, Josh stepped back again and took clamps from the chest. Stepping up behind her again, he ground his cock into her ass letting her feel how hard he was as he blindly attached the clamps to her hard nipples and pulled on the chain until she whimpered loudly. Pulling his hand back he slapped her ass, leaving a large red handprint, and he felt his anger rise again. He took a calming breath as savoured the sight along with her cry. Rubbing his hand over the soft skin of her ass he spanked her again relishing her submission to his needs.\n\nJosh pulled her cheeks a part as his cock nudged at the entrance to her cunt, teasing her and seeing her hips move in her almost immobile position. Bending low to his side he took the lube from the chest and as the head of his cock pushed into her cunt he dribbled the lube over her ass watching her sphincter tighten as the cool gel rolled down over it. Using his thumb, he rubbed down over the tight little hole and began loosening the muscle as he pushed his cock slowly into her warm wet cunt.\n\nPeri's breathing was ragged, and her heart pounded in heat and anticipation. The combined heat and pain of her bondage and the delicious feeling of being filled by his cock made her crave more, and she rolled her hips, relaxing her ass as his thumb wedged into her, making her gasp and whimper loudly. She felt Josh move again and wondered what else he could possibly do as her body quivered in need. She almost cried when he pulled completely out of her leaving her empty and wanting, the climax she was building toward making her clench at nothing as she turned her head to try and look back toward where he stood. It was only moments later when she felt the buzz of the vibrator entering her to fill the empty void his cock had left.\n\nJosh revelled in the sight and sound of her as her body began to tremble and her cries of pleasure became louder. He slapped her ass and fisted his cock lining it up with her ass. The vibrations from the toy wedged into her cunt travelled through him as soon as he began to push into her and he groaned loudly.\n\nThe pain flowed into her making every sensation she felt heightened as Josh forced his cock into her ass. She grimaced her ragged breath sounding harsh as it rushed past her clenched teeth along with her long high pitched keening. At that moment she felt as feral as she sounded. She tried to breath deeper relaxing her muscles and embracing the pain as she felt him push into her agonisingly slowly.\n\nJosh held her cheeks apart watching as his cock slowly sank into her grimacing at how tight she was around his cock. He rocked gently moving into her then back and moved further each time. He marvelled at her ability to take everything he gave her and he thrust hard burying the last of his cock inside her and holding still savouring the pleasure of taking her this way. He took a deep breath reining in his need to fuck her hard and fast. He began slowly fucking her, the vibrations of the toy in her cunt stimulating his cock even more and once again his hand reached forward to grip her breasts playing the clamps there and listening to her sing in a melodic cry of pain and pleasure. \n\nHe knew it was dangerous to fuck her when he felt so volatile, but he needed this physicality with her. Each time he felt himself lose his grip he purposefully slowed down calming himself and swallowing the raw emotion he felt for her that made him irrational at the thought of losing her. As the thought appeared in his head, he slammed into her growling loudly. \n\nPeri floated into the stratosphere. She had felt him quicken his pace and begin to slam into her moments before the blinding pain in her nipples hit her as he pulled the clamps free. Her body started to convulse, and the pillows beneath her head and shoulders began to slide as she shook with the force of each spasm. She barely acknowledged the cool wood of the table as her breasts flattened against its surface. She floated wrapped up in a cloud of painful ecstasy as he fucked her like a man possessed.\n\nJosh felt her body stiffen, all her muscles tightening, unbearably, further around his cock as her climax hit and he watched almost dispassionately as the pillows slid slowly from under her head until she lay flat on the table. He drew his hands back and gripped the cheeks of her ass cruelly pulling them apart again as he pounded into her with force. His growl almost becoming a howl as his orgasm hit him like a bolt of lightning travelling through his body as he buried himself deeply within her. \n\nSlumping over her, feeling weakened and breathless Josh held her for long moments her body still quivering with the continuing effects of her orgasm. She was right he admitted. He did need this time, knowing they wouldn't be interrupted or have Dante join them. At this moment she truly belonged to him alone and on some level he needed the reassurance that despite the turns their lives had taken, that she was his body and soul. He felt the knot of anger that had built within him dissipate, and he lay there just holding her for a long time. \n\n*****\n\n\"Look at him,\" Romey said to Ben. \"Have you ever seen that goofy expression on his face for so long before?\"\n\n\"I don't think you'll find anyone who has seen him look goofy ever,\" Ben said seriously. \"You think he's had too much sun?\"\n\n\"He's had too much something. I'm starting to worry about him,\" Romey chuckled.\n\n\"Fuck off,\" Dante grumbled but couldn't help the smile that tilted up the corners of his mouth as he tried to give them a look of disdain. \"Just because you two aren't getting any at the moment.\" He let the comment hang in the air wondering if he crossed a line with his brothers.\n\n\"You know better than that,\" Ben murmured. \"It mightn't be as good as having my wife, but it scratches the itch when needed.\" He referred to the kept he had installed in a closeby apartment. Emily had never had easy pregnancies and with the complications of the last two births he probably had sex more often with the kept than with his wife.\n\n\"You too?\" Dante asked Romey.\n\n\"Never felt the need to go elsewhere. Carmen is pretty hot blooded believe it or not,\" he smirked as if disclosing a secret side about his prim and proper wife. \"I'm looking forward to her return to see if this trial makes as much difference in the bedroom as I have heard it does.\"\n\nDante and Ben both looked at him in surprise. They had both assumed that he and Jules shared the kept they had living in an apartment in the same building as their office.\n\n\"Speaking of believing or not,\" Dante said considering his brother. \"Carmen seems to have a lot of talents you have kept hidden from the family.\" He hadn't planned to broach the subject of her coming to work for him until Carmen returned, but seeing the opportunity open itself up, he decided now was as good as any.\n\n\"Carmen's not the type to hide away like a shrinking violet,\" Ben looked at Dante in confusion. \"What do you know that the rest of us don't?\" He turned his gaze on Romey questioningly.\n\n\"She told me about her conversation with Peri and your offer,\" Romey said, \"So you don't have to hedge around it.\" He let out a long breath and scratched at the afternoon roughness of his cheek. \"I thought she'd always been happy at home with the kids and doing the charity work she and Em were involved in.\" He spread his hands as if that made sense. \"Ricky is only two, after all. She's been sort of busy over that last few years.\"\n\n\"I don't understand,\" Ben cut into the conversation. \"What conversation with Peri? What offer?\"\n\nDante proceeded to tell them both about why Carmen had sought out Peri for advice about the trial and her fears. Carmen had obviously not shared the entire conversation she and Peri had with Romey. He had then told them about Peri's curious mind particularly in light of researching the family histories and how Carmen had disclosed her education and intelligence.\n\n\"She speaks three languages and has two degrees,\" Dante said shaking his head. \"She's probably better qualified to run the house than I am. Josh is in the midst of trying to take his publishing house international, so I wouldn't be surprised if he tries to poach her from me with some deal I can't match.\"",
        "Ben whistled, and Romey sat considering what his brother had just disclosed about his wife's upbringing and fears. He knew she didn't have a happy childhood and was overjoyed to escape her family when he had proposed, but they had never talked about it in depth. She had said we wanted to leave it in the past and start a new life with him, and he hadn't pushed her on it. He could see now why she craved the praise of his family, especially over the holidays and why she had wanted to be the hero and fix everything for Emily.\n\n\"She's an amazing woman, but then, we Donati men have a knack for finding them,\" Romey said good-naturedly. \n\n\"Excluding Peri, our wives grew up within the families, and were taught to know their place, further their husband's careers and be the best of mothers,\" Ben said. \"I imagine they all have good educations and would be assets to any one of our businesses. Emily included, she has a business and human relations degree. I imagine Rosanna and Bianca have degrees just like our sisters.\"\n\n\"Bianca went to a Swiss finishing school, no degree but she speaks a few languages,\" Romey added. \"Carmen never considered working in the family business until you and Peri mentioned it,\" he mused. \"I don't have a problem with it if it makes her happy. As long as she doesn't overdo it and forget she has a family waiting for her at home,\" he chuckled.\n\nDante saw Ben's face drop slightly and felt for him. It must have been a terrible thing to see Emily breakdown the way she had and have to commit her for treatment. He tried to find the words to say to make it alright for Ben, as he would have last year when his grouchy, dark view of the world afforded him some leeway in what he said. Now as the oracle he felt the need to dole out words of wisdom instead of barbed home truths.\n\n\"Growing up a woman in any of the families can't be easy he said. All that pressure to be the whole package. Beautiful, intelligent, maternal and traditional to the point of sainthood, it's a wonder more of them haven't cracked under the strain. Em's a tough little lady, Ben,\" Dante said softly. \"Once she realises we don't hold her responsible she'll come good. Even Josh blames you two for getting me shot rather than your wives.\" He finally addressed the elephant in the room momentarily surprising his brothers.\n\n\"Ben and I had a chat, and we blame Peri,\" Romey said in a serious voice catching Dante off-guard. \"Before you fell in love and went all soft and squishy again, you never would have tried to be a hero like that. Don't get me wrong, we're grateful and all but that injury,\" he pointed at the bandaged wound on Dante's calf, \"is entirely Peri's fault.\" He was having trouble keeping the serious note in his voice as he finished speaking and looked to Ben for confirmation.\n\n\"I have to agree,\" Pete interrupted bringing his beer to come and sit with them at the rear of the yacht. \"You're not the hero type, Josh gets away with it because that's how he's always been swooping in to help everyone out but as you have kept reminding us for the last few years, you're the evil twin.\"\n\n\"He's got a point,\" Ben agreed. \"I doubt Lio would have been impressed with your heroics. He liked being the nice twin even though he was an asshole at times. Being in love is obviously dangerous to your health, D. Luckily Pete doesn't mind, between you and Peri I hear he is going to be able to afford a tub like this soon.\"\n\n\"Actually, I'm planning on expanding my practice soon, open a few medical centres as the family is spreading out around the suburbs,\" he grinned. \n\n\"I can't help it. I love her,\" Dante admitted and smiled through the goofy expression that came over his face again. \"If you're all honest about it, you love her too. Admittedly, not in the same way but you do.\"\n\n\"If Papa marries Andie, which I think is on the cards, she'll be my sister so technically, I'll have to love her,\" Pete chuckled. \"Going by that definition, though, you and Josh will be sleeping with your cousin,\" he pointed out laughingly.\n\n\"Not like that's going to stop me. We've always been a close family anyway,\" he joined in the laughter that surrounded him.\n\n*****\n\n\"It's so hard with three of them I never have enough arms,\" Peri whispered picking up Cruze. She and Josh arrived home late in the evening and went straight to the nursery, thinking the nannies would be getting ready to give them their last feed for the day. \"Hello little man,\" she crooned cuddling him close to her chest and breathing in the unique scent of babyhood.\n\n\"Hey there little princess,\" Josh whispered as Eden stretched and yawned in his arms. \"Did you have some adventures today?\" he carried her over to where Peri sat in one of the recliners as she gurgled away at him. \"What's that? Your brothers were picking on you again?\" He asked the baby seriously as she continued to gurgled. \"Don't you worry, Papa'll have a word with them.\" He gently placed Eden on the pillow across Peri's lap, next to her brother. He then took Blayze from the nanny and smiled. \"You're getting bigger every time I see you,\" he said proudly as his son gazed up at him silently. Josh sat down beside Peri and undid the blanket that had been wrapped around the baby so carefully. Rubbing his little belly, Josh spoke to him about being a good big brother to Eden and protecting her from bullies not being one himself.\n\nPeri laughed quietly as Josh continued to have very serious conversations with each of his offspring. They were four months old now and growing fast. Pete would be coming with the paediatrician during the following week to do their check-up. She was so lucky they were all healthy and happy babies, who seemed to be able to cope with all of the travel they had been doing over the last few weeks. Perhaps commuting between their two homes wouldn't be as bad as she envisaged, especially at this young age. Even if they spoke to Dante and Ben about next week, it would take time for any of the plans she had mentioned to Josh to come to fruition.\n\nAfter noticing several concerned looks the nannies gave them after checking their watches, Peri urged Josh to begin putting them to bed. Waiting until they were all sound asleep before leaving the nursery, Josh and Peri walked past the now silent living area of the children's apartment toward the stairs up to the penthouse. Josh stopped walking and squinted into the darkness. He let go of Peri's hand and walked over to a soft strangely shaped couch.\n\n\"Angelina?\" he whispered squatting down beside the couch.\n\n\"Zio Josh,\" she said in a heartbroken voice and wrapped her arms around him. \"I want my mama,\" she said sobbing.\n\n\"Mama's not well, and we have to let her get better before we can see her,\" he said softly holding her close. \"We just need to be big and brave for a little while longer. Can you do that for me?\"\n\n\"Papa is sad all the time without mama to make him laugh. I need her to come back and take us home so Papa will laugh and play with us again,\" she was crying now as she spoke.\n\n\"Zio D. has taken Papa out on a big boat and is making him laugh right now. How about tomorrow we give him a call and you can hear him laugh,\" Josh tried to calm the young girl. \n\n\"We can't he's not answering his phone or returning my messages,\" she held out her phone to him surprising Josh.\n\n\"That's because he's on a big boat and his phone doesn't work so good out on the ocean, but I have a special way of calling him,\" his mind was working. Vincenzo was out on the yacht with his brothers, but Zita would know how to contact him and get him to call. \"It's very late, and he will be asleep right now, but I promise in the morning we'll get him to call us.\"\n\n\"Papa doesn't sleep he watches to make sure we are safe all night, and he's not here to make sure,\" she looked around into the gloom the only lighting come from a dim overhead light in the kitchen left on for the nannies.\n\n\"That's why he left you here with me, so I could make sure you are safe and sound. Not only that but Nonna and Nonno are upstairs making double sure this weekend while Papa is on the yacht,\" Josh hated that she was still crying despite his words. \n\n\"When I was little my mama always made me hot chocolate when I couldn't sleep. She said it chased the monsters away from my dreams because it was so sweet and yummy,\" Peri said. \"Would you like to help me make some, I miss your Mama and Papa too. So I could use some hot chocolate to make my dreams sweeter.\" Peri held out her hand in invitation.\n\n\"You miss them?\" Angelina said sceptically.\n\n\"Of course, I do, I love them. They are so smart, strong and good at making sure that the whole family are safe,\" Peri answered. \"I was on that big boat last night and called Zio from there. I bet if he checks his phone the number will still be on it, and he might be able to get hold of your Papa in the time it takes to make the hot chocolate.\"\n\n\"I bet I could,\" Josh said wondering why he hadn't thought of that.\n\n\"Okay,\" the young girl agreed reluctantly and took Peri's hand tentatively as if it might sting her. Peri walked to the kitchen and made small talk about what she was doing and the time she had spent with Emily when they were both pregnant at the family gathering. She was trying to give Josh as much time as possible to reach Ben.\n\n\"Zia Nik didn't like you, but I think she was wrong, you're not an evil witch like in our story books,\" Angelina said as she placed five tiny marshmallows into her cup and blew on the steamy milk.\n\n\"Do you think your Mama and Papa would have left you here with Zio and me if I was?\" Peri asked astonished at the young girl's statement.\n\n\"Maybe if you magicked them like she said you did too Zio,\" she frowned. \"Are you magicking me?\"\n\n\"No,\" Peri laughed. \"I wish I knew magic, but I don't. I think love is a little like magic. Zio and I fell in love, like the prince and princesses in your stories, and we didn't pay as much attention as we should have to the other people we love, like Zia. We were a little bit mean, and I feel bad about that. When we love someone we try to do the things that will make them happy and worry about them when they aren't happy. Just like you tonight worrying about your Mama and Papa. Love makes us do things like that, but we also have to remember to be patient and kind because it can be tricky too. If we don't pay attention, we sometimes hurt the people we love by sharing that love with other people too. Zio and I fell in love and forgot to pay attention to Zia Nik, and her feelings were hurt. She didn't really think I was a witch she was just mad at her brother. I bet you get mad at BJ sometimes even though you love him.\"\n\n\"Yeah, but he's so gross. He purposely farted on me once,\" she said indignantly.\n\n\"I never had any brothers or sisters, so having such a big family is new to me,\" Peri confided trying to hide her smile as she said it. \"I make mistakes all the time so maybe you could help me out if you see me forgetting to pay attention again.\"\n\n\"I don't know why Zia was so mad at you. It was Zio who forgot to pay attention. Besides if you had made her hot chocolate, I am sure you would have been friends. She was super cool you know,\" Angelina said honestly untouched by any of the evil Nik had done in the last year of her life.\n\n\"I'd love to hear about her sometime. Maybe we could make hot chocolate for your sisters and cousins one night now that you have helped me do it once you can be the expert,\" Peri picked up her cup as she saw Josh walking towards them putting his phone on the bench and picking the cup they had made for him.\n\n\"Josh?\" Ben's disembodied voice came through the speaker of the phone.\n\n\"Papa!\" Angelina cried. \n\n\"Angie, what are you doing out of bed?\" Ben's voice sounded concerned and slightly cranky.\n\n\"She's having hot chocolate with me because I couldn't sleep,\" Peri said as she saw the girl freeze and Josh about to growl into the phone. \"She's a good little cook, she must take after her mother.\"\n\n\"Wait what are you doing home I thought you went away for the weekend,\" his sleepy confusion was evident.\n\n\"I missed my babies too much,\" she laughed. \"Poor Josh had to bring me home so stop me from crying all night long.\"\n\n\"I miss you like that Papa. I was crying, but Zia Peri explained that Zio D. is helping you find your smile again,\" Angelina said in a small voice.\n\n\"Zio D. has a funny expression on his face all the time lately. It's hard not to smile when he's around,\" Ben chuckled into the phone. \n\n\"Patient and kind,\" Peri mouthed at her. \n\n\"I love you Papa don't worry about me. I'll look after the little ones while you and Mama get better. But do you think you could call just one time tomorrow and tell BJ to stop being so gross?\" Angelina asked seriously.\n\n\"He can't help it, Angie, he's a boy,\" Ben chuckled. \"I will call and talk to you all tomorrow. I love you, sweetheart. Go to bed and get some sleep, okay?\"\n\n\"Good night, Papa,\" she smiled.\n\n\"Josh?\" Ben's voice asked, and Josh picked up the phone taking it off the speaker and pressing it to his ear as he walked away from the kitchen area again.\n\nThey finished their hot chocolate and washed the cups together. Then Angelina showed Peri where her room was, and Peri tucked her into bed. \n\n\"I'm glad we had the chance to talk, I think we're going to be good friends,\" Peri smiled down at her. \"Sweet dreams, I'll see you tomorrow.\"\n\nQuietly Josh and Peri made their way back upstairs to the penthouse and trying not to wake anyone stole into their room.\n\n\"You never cease to amaze me,\" Josh pulled her into his arms. \"I think our love is a lot like magic too,\" he bent his head to kiss her. He could see how exhausted she was from the last thirty-six hours, and he felt the same way. Their need for each other showed again as they shed their clothes, but he pulled her down onto the bed with him and kissed her softly. \"Sleep,\" he murmured. \"We both need some sleep.\"\n\nPeri was about to protest that she was fine, but she could see that he was as worn out as she was. She stroked his face tenderly and kissed him, letting him pull up the light blanket to cover them both. Content to be in his arms she closed her eyes and drifted off rapidly.\n\nWhen she opened her eyes again, he was gone, and she could see the small chink of sunlight showing the corners of the blackout blinds that hid the deck and pool from her sight. She rolled over picking up her phone to check the time and gasped. She had slept half the morning away. She got up and showered getting dressed into something casual before going in search of Josh.\n\n\"He's downstairs with the children,\" Antonia said as she spotted Peri in the living area. \"Come and have some breakfast you must be exhausted coming home so late last night.\" There was a question in her voice, but she didn't voice it.\n\n\"It's a bit late for breakfast,\" Peri said dismissively. \"I might just get a glass of juice and wait for lunch.\"\n\n\"Nonsense you need to eat something, sit down I will get you something quick and easy,\" Antonia frowned at her. \"You may not be feeding those babies anymore, but you have other priorities that will sap your energy like those two big babies of mine.\" She laughed.\n\n\"They aren't so bad. They're always lecturing me about overdoing things,\" she admitted stopping short of explaining that Josh put her straight to bed when they came upstairs last night. She was fairly sure that he was as tired as she was but that was beside the point. \"They look after me very well, thank you so much for training them so well,\" she grinned following the older woman into the kitchen as Antonia ignored the startled look of Bridgette and helped herself to the juice in the fridge and some leftover Danish from breakfast.\n\n\"I would have got that for you, ma'am,\" Bridgette said politely, but her voice held a disapproving tone.\n\n\"Nonsense you have better things to do than to be waiting on me at this time of day. I am quite capable of looking after my daughter by myself,\" Antonia took on the high-handed voice of the Donati matriarch. Even Peri was a little intimidated when she used that voice, and she was hardly going to correct Antonia's slip of the tongue about their relationship despite the look of surprise Bridgette gave her.\n\nThey went back out to the table and sat together. Antonia had a small cup of coffee while she encouraged Peri to eat.\n\n\"I already had breakfast with Joseph and Joshua,\" she smiled. \"He was lamenting leaving behind some pasta that you cooked for him. He said it's the best pasta he's ever had.\"\n\n\"He's probably just saying that because I made it for him a lot before Bridgette came to help us and took over the kitchen. I'm sure there are dishes you make that he loves just as much,\" Peri brushed aside the compliment he had paid her in telling his parents about it.\n\n\"Do you enjoy cooking?\" Antonia asked at hearing her say that Bridgette took over her kitchen.\n\n\"I love cooking for Josh,\" she smiled around a mouthful of food. \"Aside of Andie, he's the only person I've ever cooked for.\"\n\n\"Maybe you could make your special pasta for us tonight. I'd love to try it based on Josh's description,\" Antonia said.\n\n\"I don't think Bridgette would appreciate me invading her space,\" Peri said dubiously hating to disappoint her mother in law. \n\n\"Peri this is your house and your kitchen if you want to use it,\" Antonia said as if it was the simplest thing on earth. She noted Peri's worried expression and softened her voice. \"I understand that you haven't grown up with servants, but you are in control here, you own everything, including their contracts. They are not your family or housemates even. You can cook or do laundry or any chore you want, and they will make way for you, send them to their room for a rest if it makes you feel better. My mother used to send all of the kitchen staff away when she baked traditional Christmas treats for us all. Emily's are good but not as good as my Mama's.\" She said proudly.\n\n\"Is she still in Adelaide?\" Peri asked.\n\n\"No, I lost my Mama some years ago now,\" Antonia said sadly. \"I was never one to cook myself, but I have a book with her recipes somewhere in my little haven if you're interested in giving some of them a try. You could try the Anginetti for Easter.\n\n\"I would love to look at it if you don't mind sharing it with me. My mother was never much of a cook so I doubt there are any family recipe books to be handed down by her. I hope Lucia doesn't mind if I borrow it,\" she said carefully thinking that it should be handed down from mother to daughter.\n\n\"Lucia? Why would she mind?\" Antonia laughed. \n\n\"I guess I just think of family recipes passing from mother to daughter like your mother did for you,\" Peri said unsure of the woman's laugh.\n\n\"You became my daughter the day you married my son. You are the daughter who will take my place in looking after the family, alongside Joshua and his brothers,\" Antonia explained once again struck by Peri's lack of understanding of her position with the family now. It wasn't exactly a lack of understanding exactly, Antonia corrected herself, it was that Peri always put others needs and feelings before her own. Sometimes to her own detriment.\n\n\"I know you are still coming to terms with our ways,\" Antonia spoke in a softer tone. \"I have seen what a strong and intelligent girl you are. You need to come to terms with who you have become in the eyes of the family. Be kind and patient and thoughtful of others because that is who you are but you must also be strong and not let others keep you from what you want to do. If people think you are weak or uncertain, they will try and exploit you and your position for their own benefit.\"\n\n\"Lucia isn't like that, and they're her grandmother's recipes,\" Peri said defensively.\n\n\"At heart, Carmen isn't someone who would seek to take advantage of perceived weakness, but she did,\" Antonia rebutted. \"The reasons don't matter, what matters is that you are the one in charge of your household and your family. People will want to help bear the burden you face, but you must let them know in no uncertain terms that they do not speak for you, make decisions for you or that your sweet nature and genuine love of your friends and family will not stop you from making the hard decisions when needed. The only people you can truly rely on to help you make those hard decisions are the two men who love you without reservation.\"",
        "\"I can rely on you and Joseph can't I?\" Peri asked knowing the answer. \n\n\"I hope you do, but even we have an agenda and a way of doing things we prefer,\" she admitted. \"Before I retire entirely you need to discover your inner bitch and let her out for a stroll now and then when someone is pushing you to do something or stopping you from doing something you enjoy, like cooking for your husband and his family.\"\n\n\"Is this just a long drawn out way of asking me to cook tonight because Josh left his pasta at the chalet?\" Peri tried to make light of the conversation which scared her a little. She had staff, and she could be in charge at work, but she found it very difficult to have that same self-assuredness at home with the people she lived with and cared about in a different way.\n\n\"Well yes, but I meant every word,\" Antonia laughed.\n\n\"This is supposed to be my weekend with Josh I think he had plans to hibernate in our room and pretend we weren't home at all,\" Peri blushed. \"I'll tell him about your very persuasive suggestion though and see what he says. I have to admit though I was looking forward to hibernating with him.\"\n\n\"Everyone needs to eat including the two of you,\" Antonia smiled knowingly. \"I'm sure you can have your afternoon delight and still find time to cook.\"\n\n\"Afternoon delight?\" Peri almost spat the mouthful of juice she had just taken all over the table. \"Mama!\" she blushed deeply.\n\n\"What? The first time we met you told me that Joshua rocked your world,\" she smiled sweetly. \"I was never more proud of him.\" She laughed merrily seeing Peri squirm uncomfortably. \"Sex is a healthy part of life, you should enjoy it, there is nothing to be ashamed of. Papa and I have always had an energetic sex life. He still moves well for an old man.\" \n\n\"Too much information,\" Peri held up her hands giggling in embarrassment.\n\n\"You can hardly pretend to be a prude when you're openly sleeping with two of my sons,\" Antonia continued to laugh and tease her.\n\n\"I think I had better go and spend some time with my two sons if I am going to be having a busy afternoon,\" she continued to giggle. Peri stood and picked up her plate and glass to return them to the kitchen.\n\n\"Leave that, someone will come and get it,\" Antonia urged her.\n\n\"I like doing it,\" Peri shook her head with a smile. \"You were just encouraging me to do things I enjoy.\"\n\nThe two women went downstairs together, and Peri wasn't surprised to find Josh wrapped up in an intense game with several of his nephews while Joseph watched on indulgently. Peri caught Joseph's eye and smiled, but Josh was so engrossed in what he was playing he didn't look up. Leaving him to his game Peri walked through the large living space to the nursery eager to see the three little people who filled her heart with joy.\n\n\"Zia Peri?\" Angelina stopped Peri's walk toward the nursery. When she turned, she saw that Angelina stood with twins and a middle-aged woman.\n\n\"Hello, Angelina did you sleep well?\" Peri asked with a smile.\n\n\"Yes thank you,\" she said with impeccable manners. \"This is my nanny. Her name is Kathy,\" she introduced the woman who stood with her.\n\n\"I met Kathy when you all came to stay. It's good that you reminded me, though, I met so many people that day,\" again Peri smiled wondering if something was wrong by the way the woman looked at her nervously. \"Hello,\" she addressed Kathy directly.\n\n\"Ma'am,\" Kathy nodded her head differentially.\n\n\"Is there something I can help you with?\" Peri asked turning her attention away from the nervous woman back to Angelina and her sisters.\n\n\"School goes back soon, and Mama didn't get our books or check our uniforms before she got sick. I'm supposed to be going to Fairmont this year, and I have to go to orientation day next week, and I don't think Papa has remembered,\" Angelina babbled fast before Peri put up her hands stopping her.\n\n\"My gosh, I hadn't thought about school for you all because it's been summer holidays. We're very lucky Nonna is here this weekend. She would be an expert and help us to get organised. Nanny Kathy would you be able to get together with the other nannies and start making a list of the children, schools and grades. Also what is needed for those who will be going to school this year,\" Peri realised only about half of the children in her care would be school age. She realised she was about to get a crash course in the back to school rush that every parent went through at the beginning of the school year.\n\n\"Yes, Ma'am,\" Kathy nodded again and went to turn away.\n\n\"No hurry,\" Peri said thoughtfully, \"We can't do much about it this weekend. So just a general idea is fine for today. We can make a more detailed plan tomorrow and decide on an action plan.\" Peri smiled again her logical brain taking over from the shock she felt at Angelina's announcement. School had been the last thing on her mind when she had agreed to look after the children for her sisters-in-law.\n\n\"Yes, Ma'am,\" Kathy's head bobbed again before she moved off.\n\n\"Would you like to come and tell me about your new school and orientation day while I cuddle my babies?\" Peri asked Angelina and her sisters.\n\nPeri walked into the nursery and smiled widely seeing her gorgeous little babies playing on the floor with a myriad of brightly coloured toys and rattles. She immediately sat down and kissed all three having to stretch to make the distance to Cruze who seemed determined to wiggle away. He was lifting his head now and kicking his feet, and she grinned delightedly.\n\n\"Eden is tiny like Timo,\" Angelina noted cocking her head to the side to study the babies. \n\n\"She has two greedy brothers, but I think when she gets bigger she will show them who the boss is,\" Peri said picking up her little girl and cradling her to her chest.\n\n\"No when they get bigger the boys will get everything and she will have to get married and live with another family,\" Angelina sighed\n\n\"She might choose to have a career instead of getting married and moving away,\" Peri said reasonably. \"There's always choices Angelina.\"\n\n\"It's our duty, to the family. Like royal princesses we will get married off to a prince from another family table,\" she explained patiently. \"Zia Nik said she was never getting married and look what happened?\" \n\n\"Oh gosh, Angelina. Your Zia had a dreadful, dreadful accident. It wasn't because she wasn't married that she isn't with us anymore,\" Peri was aghast at the young girl's explanation of events.\n\n\"If she was married her husband would have protected her like Papa protects Mama and all of us,\" she smiled sadly. \"I wish he could have stopped her from getting sick.\"\n\n\"I do too,\" Peri smiled sadly and reached out and touched her hand. \"She'll get better, though. Your Papa will make sure of it. That's why you're staying with me for a little while. Why don't you tell me about this new school you're going to,\" Peri attempted to change the subject.\n\nAfter hearing about the exclusive girls boarding school that the Donati family had helped establish in a semi-rural area away from the main cities Peri was fascinated by yet another side of this family, she hadn't known was there. She asked questions and was impressed by Angelina's depth of knowledge. She realised that young girl had been being indoctrinated into family law and custom since she could walk and talk and considered her little ones as they gurgled and played around her. How would she ever manage that side of things she wondered? A strange thought occurred her, and she frowned as she wondered if she wanted her children to be indoctrinated at all.\n\n\"This was my choice,\" she counselled herself. \"Is it a choice I should inflict on them?\" She thought about Josh and Dante and their love of family and the duty, honour and the respect they gave to all. They were generous and caring, the traditions and laws weren't so bad, and the family were philanthropic with the wealth, they didn't flaunt it the way some families did. She believed that all of those qualities were exactly what the boys should be learning as they grew up and matured into wonderful young men. It was Eden she worried about. Peri didn't want just to marry her off especially to a prince if that meant she would become a Martino. She shivered involuntarily remembering Josh's recount of the girl on the leash.\n\nShe only half listened to Angelina talk about going to check if Nanny Kathy needed a hand with her list and nodded as she remained and thought about the future of her children and their role within the future of the family. Surely they would become the next table of control freak chauvinists. She laughed knowing how wrong that definition was in reality, but even Joseph's daughters believed it to be true until they matured and married, all except Nik that is. \n\nShe wasn't sure how long she had been sitting there deep in thought and cradling Eden, but Josh appeared at the door, and Madeline came to take Eden who was now fast asleep and pop her into her cot.\n\n\"Hey you,\" Josh said softly taking in the sight of her sitting on the floor surround by the paraphernalia of motherhood.\n\n\"Hey,\" she looked up and smiled. \"Have they crowned you king of the kids yet?\"\n\n\"I've held that title since I was three,\" he proclaimed proudly walking in to help her to her feet.\n\n\"I think your big brothers might have let you believe you held the crown,\" she giggled teasing him. \"From what I hear you had some pretty big tantrums if you didn't get your own way.\"\n\n\"I still do,\" he chuckled. \"Speaking of getting what I want,\" he pulled her close and kissed her deeply leaving her breathless. \"I think we should hibernate after lunch and forget the world exists for the rest of the day.\"\n\n\"As much as that sounds appealing in every way, we can't. Your mother has requested that I cook dinner tonight for you all because you complained about the leaving the pasta I made for behind,\" she shook her head but smiled at the compliment he had given her in a roundabout way.\n\n\"Tell her you'll make it another time,\" he shrugged. \n\n\"I did, and she started talking about having plenty of time after our afternoon delight. Then she started to give me details about her, and Joseph's sex life, and I just gave in,\" she grimaced.\n\n\"So we have afternoon delight to look forward to,\" he seemed to renegotiate his agenda in his mind.\n\n\"While that would be lovely, I'm afraid I have to have a quick meeting with the children who are returning to school next week and their nannies and reassure them all that I will make sure they have everything they need just as if their mothers were here. I don't think we took into account how much Carmen and Emily's absence would affect them all,\" Peri said sadly. \n\n\"You aren't even supposed to be here, we were going away,\" Josh huffed.\n\n\"I know but we are here and being here means we're responsible for everyone under our roof. We can't just ignore everyone and hibernate. We have obligations now that we are home,\" she felt like accusing him of being the one that was homesick and brought her home early when she had been reconciled to having time away from her children but she held her tongue calmly explaining what she needed to do.\n\n\"There are people to do those things for you, that's why we have nannies and cooks so that you are free to do things for me,\" he said in a husky voice pulling her closer.\n\n\"It's not that simple Josh. I've suddenly become a mother to fifteen children, and they need some reassurance that everything will be fine, that we won't forget any of them. As far as the cooking goes, I have yet to see you say no to anything your mother asks so don't expect me to,\" Peri laughed trying to lighten the mood, wary of not doing as he asked.\n\n\"Fine,\" he groaned, \"But there will be consequences.\" Josh was struggling to swallow the anger he felt rising in him again.\n\n\"Oh?\" she looked up at him with heated interest and placed a hand on his cheek. He bent his head to kiss her and wrapped his arms around her, and she knew the consequences would be enjoyable. Just like yesterday she had expected his temper to rise instead, he seemed to accept her apologetic explanation well, possibly too well and that worried her as much as facing his anger had.\n\n\"Yes, it's a bit early for lunch still but let's go up, and you can tell me about what it is the children need and why you have to be the one to organise it,\" Josh said. His voice was even and unemotional, but she could tell he wasn't happy by how tense his body felt as she continued to embrace him.\n\n*****\n\nThe cruiser manoeuvred around the north side of one of the larger islands in the bay. The men had decided that they had best come within range of a telco tower so they could be reached if necessary. A strange message from Josh had concerned Dante, and he had subtly put the thought into his brother's minds that two nights out of contact might be a little foolhardy given recent events. \n\nHe had been enjoying strengthening the bonds he had with his brothers but hearing that Josh and Peri were home instead of away on their weekend alone had bothered him more than he would admit to anyone besides Josh himself. He needed to know what had happened to bring them home immediately rather than staying away even one night. He knew he would never pass up some alone time with the woman he loved and found it hard to believe something else wasn't behind the decision to return.\n\n\"D., what's up?\" Josh answered his phone and stood up from the lunch table walking away from the curious glances and ears.\n\n\"We're just off Tangalooma, thought we might hit the beach tonight,\" Dante said easily. \"What are you doing home? I thought Peri had a romantic getaway planned for the two of you.\"\n\n\"She did, we were there. We missed the babies,\" Josh said just as easily. \"So we came home to cuddle the kids, no reason we can't hibernate in our room here and still be alone.\" He didn't even sound convincing to himself as he said it.\n\n\"Okay, well I got the boys to agree to come back into the bay tonight by telling them we need to be in contact because of recent events. The reality is I want to know what happened and why you're home. So unless you want me back there looking into your eyes as you try to lie to me you better just tell me what the hell happened,\" Dante demanded realising honesty was the only thing going to work with Josh at this point. His concerns stemmed from Josh's well-known temper and the fact that Peri had been away for the night with him while Josh had been worried sick about her in Sydney. Dante was concerned that he was punishing her in an unpleasant way.\n\n\"I don't like surprises,\" Josh sighed softly so he couldn't be overheard. \"She should have told me what was happening. I could have told her what would happen. It was silly to think she wouldn't get homesick being away for so long.\"\n\n\"Fuck,\" Dante exploded. \"So you ruined all her plans by using the babies as an excuse?\"\n\n\"It's not an excuse,\" Josh bristled and stomped off toward the study with his parents and Peri watching him go. \"She cried saying she didn't realise how much she would miss being able to go and see them whenever she wanted.\"\n\n\"Alright, I believe you. Keep your pants on,\" Dante said relieved that it had been Peri who had wanted to go home. \"So why are you in such a bad mood then, if this is what you both wanted. Shit, I was just asking. You gotta admit I had reason to be worried.\"\n\n\"Fuck off, you know I'd never punish her for something she didn't know would happen,\" he grumbled. \"Papa forced her not to tell, and she didn't know she wouldn't have phone reception. You could have fucking called before you left the bay.\"\n\n\"Whether we had reception or not was the last thing on my mind,\" Dante admitted. \"So hibernate in our room and let Mama take over as if you weren't there.\"\n\n\"Yeah well, what I want and what the family demands are two different things,\" Josh said tersely. \"Have you met Peri? The family say they need her and guess how much time she has for me.\"\n\n\"You're fucking pouting aren't you?\" Dante accused. \n\n\"Am not,\" Josh grumbled. \"I thought she would be happier and more relaxed here. Turns out she's more stressed and busier than ever. Even Mama is making requests of her.\" He knew he sounded petulant, but Dante didn't deserve his anger any more than Peri did. His talk with his father had made an impression, and he was trying to reign in his baser, selfish nature where Peri was concerned.\n\n\"What's so important she can't put it off for a day or two?\" Dante let out a long breath hearing the anguish in Josh's voice at having been proven wrong about Peri happier and abler to relax at home without the worry of missing her children.\n\nThey spoke for almost an hour about the issues with the children returning to school and their Mother's lack of understanding about their need to spend time by themselves, even though they had come home. They came up with a plan of their own that they believed would not only be good for Peri and the children but for themselves and their brother as well.\n\nDante hung up feeling better about not being there for both of the people he loved. His mind went immediately to Peri, and he imagined her as she was here on the boat with him. He felt an overwhelming need to talk to her but waited the allotted fifteen minutes he had given Josh to let her know and have her leave the table to call him. He stood and walked out onto the deck where his brothers and uncles sat relaxing and talking about where to fish that night. \n\nHe was deep in murmured conversation with Vincenzo who he needed to be able to carry out the plans he and Josh had made for the following day when his phone rang making his face split into a wide grin.\n\n\"I'll umm let you know the rest once I've taken this call,\" Dante said happily and walked back toward the salon.\n\n\"I miss you already,\" Dante said by way of greeting as he answered the phone call from Peri and tried to ignore the jibes from his brothers as he walked through to the other side of the boat.\n\n\"I miss you too,\" Peri smiled into the phone. \"It's been weird. I miss having you around to interject when things are weird.\"\n\n\"Weird how?\" Dante asked, concern creeping into his voice.\n\nPeri confided that at the very least she had expected a lecture about being out of contact and not where she was supposed to be. She also explained how when she had told him about needing to sort out the kid's school requirements and cook dinner he hadn't even batted an eyelid, but his body language had told her that he was not happy even though he didn't show it overtly. They talked about all the things she felt she needed to deal with and how bad she felt that being home meant being available to everyone, not just Josh and her babies.\n\nAs she spoke, she felt herself relax and realise just how much she had come to rely on Dante in her day to day life. She tried not to bother Josh with that side of her life whereas Dante seemed interested in even the boring details of her day when they spoke.\n\n\"Once everyone goes to bed tonight you owe it to Josh to give him your full attention,\" Dante said quietly. \"He's trying very hard to be everything to everyone at the moment, chair, father, husband, brother, son. It's not an easy thing for either of you but probably harder for him because of who he is. He's a good guy at heart. He's trying his best, but he needs our support.\"\n\n\"I'm...\" Peri began to tell him that she was trying too but realised she would sound defensive. \"You're right,\" she agreed \"I'll be there for him I promise.\"\n\n\"It's okay to miss me while you're at it,\" Dante teased finding it hard to hear the uncertainty he assumed her stuttered answer to be.\n\n\"I do.\" She said softly. \"I'm falling even more in love with everything new little thing I learn about you.\"\n\n\"You make me a very happy man. I love every inch of you inside and out.\" He said in response to her words his heart singing. \"Now go and do what needs doing so you can be there for Josh tonight. He's under a lot of pressure right now, and he needs you more than anyone else in that house.\"",
        "\"Dante, I'm sorry this has been all about me. Are you having fun with Ben and Romey? Did you catch any fish?\" Peri asked worried that the call seemed like it was ending and feeling like she hadn't found out if he was happy on his fishing trip.\n\n\"It's great, I have big plans for tomorrow before I come home,\" he chuckled. \"I can't wait to see you, but I have to go before Ben dies.\"\n\n\"Ben's sick?\" Peri asked in a panic-stricken voice.\n\n\"Not yet but I will kill him if he doesn't stop calling me goofy,\" he laughed with a deep rich sound, and she could hear the rumble of male voices in the background laughing with him.\n\n\"Have fun. I love you,\" she grinned loving that he sounded so happy.\n\n\"I love you too,\" Dante said loudly into the phone and Peri listened to the continuing laughter for a few seconds before the phone went dead.\n\n\"Fucking bastards,\" Dante growled but couldn't help the smile that spread across his face. Dante turned on his brothers who had followed him through the salon to the other end of the yacht to tease him. \"You wait until your wives get back from their little hiatus. Fuckin' jealous pricks.\" He swore at them through his laughter. The problem with hanging out with just men was that he had no filter where his language was concerned. He loved to curse, and it was rare he had the opportunity without someone's scowl of disapproval.\n\n\"Right who's coming ashore for a beer?\" Charles asked as he entered the salon followed by Pete. He had been drawn in by the boisterous laughter and happy mood of his nephews. This trip had been sorely needed by all three of them, and he was glad to report the buoyant news to Joseph who seemed to be having issues with Josh and Peri returning home.\n\n\"You men go across, I need to talk to goofy here,\" Vincenzo said from behind Dante startling them all with his presence. \"We'll follow you across.\" A meaningful look transpired between Charles and Vincenzo that the younger men pretended to ignore.\n\n\"I could stand an afternoon in an exclusive resort checking out this year's bikini styles,\" Romey shrugged.\n\n\"I guess you could twist my arm,\" Ben agreed seemly ambivalent about the option.\n\n\"You'll need my anatomical advice, of course,\" Pete said with a serious face. \"Assuming Zio can convince the invalid to keep the weight off his leg.\"\n\n\"Piss off already,\" Dante grumbled flopping into the nearest chair. \"I'm a fuckin' hero and still get no respect from the people who are supposed to love me.\"\n\n\"Alright let's give Super Goofy a break,\" Ben announced with a smirk.\n\n\"Super Goofy? I thought we'd decided on Captain Goofy?\" Romey scratched his cheek thoughtfully.\n\n\"Goofy Man was what I was plumping for,\" Pete added to the conversation making Dante groan even louder.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "submissive",
        "body bow",
        "anal",
        "brothers",
        "family"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-tables-ch-27"
}