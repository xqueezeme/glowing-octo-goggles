{
    "title": "Beetlesmith's Ch. 19",
    "pages": [
        "As promised, here is the latest installment of my Beetlesmith's tome. This chapter turned out to be much longer than I had anticipated, and, as such, I had to break up the Henry orgy into two manageable sections, this one, and the next.\n\nA warning to casual readers, as with much of my writing, these next two chapters touch on a number of different sexual subjects, double penetration and rimming being the most prominent outside the 'usual' adult, sexual practices. Also, I should add that there is one husband within the merry band of orgy participants who is a cuckold, and there is a degree of male bisexuality that is briefly touched upon very late in the chapters. None of these subjects are treated gratuitously, at least in my opinion, and fall well within the boundaries of the plot and the motivations of the characters I've set within the story so far. I believe all these sexual subjects, whether talked about briefly or elaborately, add another dimension to the plot, particularly as Karen, with Will's help, begins to exercise control over the other partygoers using her newfound powers. Plotting and characterization aside, however, if some of these subjects cause you to throw your skirt over your head and make you go screaming into the woods, then don't bother reading further.\n\nLastly, I wish to extend another big thank you to Bella Mariposa, who edited an early draft of these chapters.\n\n_____________________________________________\n\nI lead Karen upstairs, well out of earshot of the others.\n\nOnce we got to our bedroom, Karen let fly with a bevy of questions. The most prominent, but probably what I thought the least significant, being, \"What the fuck did you just do?\"\n\n\"I gave them a very powerful aphrodisiac. It's a drug called 'The Elixir.' And you guessed correctly, it was in the Sangria.\"\n\nA flash of anger crossed her face, before she said, \"Now everything makes sense. You've been using this on me all along.\"\n\n\"No, and that's the most important thing you have to understand. We've only taken the drug a few times, once with Gloria, once with Jackie, and then the dinner party with Denise and the others.\"\n\n\"Jesus,\" she exclaimed, \"Where did you get it?\"\n\nShe was still concentrating on the least significant questions. It frustrated me a bit.\n\n\"That's not important right now. What is important is that you understand how it works and what it does...\"\n\n\"I can see what it does. It turns everyone into rabid sluts in heat.\"\n\nI laughed sarcastically, before responding, \"No you don't understand, not really. Turning everyone into 'rabid sluts in heat' is just a part of what it does.\"\n\n\"What do you mean?\"\n\nBetter; I had her attention.\n\n\"Think back over these past months. Remember all those days of our heightened libido, all those morning and evening 'twofers' of yours, those Saturdays with Denise, that time in the car with that girl, Beth, our romp with Barbara and all yours subsequent when you were doing her behind my back. We were never under the drug's influence during those times.\"\n\nShe thought about my words. At times, muttering to herself in frustration, as if doing some mental calculation where the numbers weren't adding up. Finally, she said in exasperation, \"It doesn't make sense. That Beth person wasn't on the aphrodisiac, nor Barbara? What about that time with...\" she choked on the words before finishing, \"That time you were with Barbara and Lisa?\"\n\nI just shook my head.\n\nShe responded, incredulously, \"I can't believe that. You mean mother and daughter just naturally started having sex with each other without this elixir thing? Lisa's sicker than I thought.\"\n\n\"Don't blame Lisa. If anyone was sick, it was me. At the time, I was sick with rage at you. Pissed at everyone, really...pissed at the whole world. So, I lashed out by making both of them have sex while you could only watch.\"\n\n\"Would you make some goddamn sense, how could you just make them, without this...this drug?\"\n\n\"That's what I'm trying to tell you, and what you need to understand. I did it with my mind, with just a thought, just like I did moments ago with Rashid and Darcy.\" I let that declaration sink in, before continuing, \"Do you really think Darcy would just start sucking another man's cock in front of her husband and his wife, in front of everyone? Elixir or no, she would need a push to do something so brazen at the start. I commanded her by putting the thought in her head, and she acted on that command.\" \n\nKaren yelled with incredulity, \"Oh bullshit! You don't really believe that, do you? And if you do, then you're insane.\"\n\n\"Am I?\" I almost lashed out at her insolence, but I held my anger in check. Instead, I punished her with the truth, \"You have the ability as well. You just don't realize it yet. Think about all your times diddling Barbara behind my back. Do you really think a young, innocent girl would just naturally play a dog...eating off the floor...drinking out of the toilet...drinking your piss...eating your...\"\n\n\"Stop!\" she screamed, while clamping her hands over her ears.\n\nRecounting her deplorable acts\u2014and they weren't the most dangerous things she did to Barbara, just the most distasteful\u2014recounting them in the open and in the full light of day, she collapsed down onto her knees in wretched, mortal embarrassment and shame, weeping uncontrollably at what she had done to an innocent girl.\n\nI sat on the floor next to her, pulling her close. She grabbed me hard, nearly crushing the breath out of me as she laid her head against my chest and continued to cry.\n\nFinally, through stuttering sobs, she asked, \"How could you still love me after knowing that?\"\n\nI kissed her hair, and said with quiet conviction, \"Because I do, and always will.\"\n\nThat sent her into another uncontrolled fit of crying. I tried comforting her as best I could, but it didn't help much. Between sobs, she continued to mutter, repeatedly, \"How could I have done that to her? How could you still love me?\"\n\nSlowly, as she put herself through her mental torment, Karen had come to the cold, logical realization that I spoke the truth. It wasn't Barbara and her exploring themselves together; feeding off some collective dynamic that pushed the envelope of human depravity well past even any abnormal standards. It was just Karen, herself, manipulating Barbara to do those things. Their 'shared' depravity was really just Karen's, alone, and she trembled at that knowledge.\n\nAfter she quieted, I continued, \"I don't know how, but using the elixir has given us a mental power beyond anything I could ever conceive. I don't think it's as powerful in you as in me, but you do have the power, as well. Your tryst with Barbara proves that. Now you know why I put you through hell these past few weeks. I wasn't doing it just to punish you, but to force you to learn control over your emotions, and over your darker nature.\"\n\nShe asked, \"What about the others? Denise, Jackie, do they have this power as well?\"\n\n\"No, and I don't understand why it's only affected you and me. That's why we have to be careful. We can't let our arrogance get away from us. We can't let our darker natures loose as long as we have this power. It will harm others, if not physically then mentally. It could even destroy us in the end.\"\n\nShe asked with wide-eyed innocence, \"Do you have a dark nature, like me?\"\n\nI smiled that she thought so highly of me, \"That's sweet of you to ask that, but yes, I do as well. Even 'Saint' William has dark thoughts. We all do, Karen. It's human nature. Regrettably, I've unleashed my dark nature a couple of times. One of those times was in anger toward you, when I used Barbara and Lisa as tools of punishment, and for that, I'm asking you for your forgiveness and for your help. I can never do that again. You must help me control my dark nature just as I'm helping you control yours.\"\n\n\"I understand,\" she answered, thoughtfully. \"I wish you'd have told me sooner, though.\"\n\n\"How? What could I have said before that you would have believed? If I came to you with this when it first happened, the elixir, our new abilities, you would have tried to have me committed. I needed to show you these things, and make you experience them yourself. Hell, even then you almost didn't believe me.\"\n\nShe nodded agreement.\n\nOnce I opened the Pandora's Box in relation to the elixir, I decided to extend the tour of some of its other contents.\n\n\"There are other side effects besides enhanced mental abilities,\" I continued, \"The most obvious one you've noticed already.\"\n\nShe raised a knowing eyebrow before commenting, \"Yeah, the kielbasa you call a dick, which is now about fourteen inches long. This drug is every guy's wet dream. It turns every chick into a bitch in heat, while making your cock huge. What does the girl get out of all this?\"\n\n\"She gets the kielbasa anywhere the guy wants to put it,\" I retorted, laughingly. \"Don't get all sanctimonious on me. I didn't hear you complaining about the kielbasa before now, so it seems it's every chick's wet dream, as well.\"\n\n\"Well, if it gets any bigger...\"\n\n\"If it gets any bigger, we'll just have to take more time and use more lube before slipping it in somewhere.\"\n\n\"Easy for you to say,\" she said, laughingly, \"You're not the one trying to fit a double meat, deli salami through an opening made for a cocktail wiener.\" She giggled to herself before continuing, \"It's not the length, Sir, but how thick it is that's really becoming the problem. I've compared it the other night; the goddamn thing is as big around as my forearm at the widest part, and just as long. My goddamn forearm!\"\n\nI joked, \"Just thinking about it makes you squirt, doesn't it?\"\n\n\"Yes!\" she responded with an embarrassed giggle. Then she got serious again, \"I mean it, Sir, if it gets any thicker you might as well forget about blowjobs, because your tool isn't fitting in that placewithout pulling teeth.\"\n\n\"I guess I'll have to find some hot grannies with dentures, then.\"\n\n\"Funny. Go ahead and make jokes, but before long, if it continues to get bigger, anal sex won't be much fun for me either, no matter how much lube we use.\"\n\n\"No more butt fucking? Now you arescaring me,\" I joked at first, before telling her it was also my fear, \"I agree with you. I don't want this thing getting any bigger, either. That's why I've decided you and I won't be taking the drug any longer, among other reasons. Without the drug, the growth should stop.\"\n\n\"Will it?\"\n\nNo, not so far anyway, which was another worry.\n\nI shrugged my shoulders, and told her a half-lie, \"It's too soon to tell, but I don't see why not.\"\n\nAfter voicing her fears about my changing physical nature, I hesitated telling her the rest; telling her about the same dreams we've been having and the nightmares plaguing Denise, about my growing callousness and disregard for others feelings and well-being, about the fact we could project emotions and visions other than lust into the others, about my vision outside of Beetlesmith's that day, and so many of the other minor peculiarities outside the realm of normalcy and logic that I've experienced. It was all too much to tell at the moment. Instead, I gave her the opportunity to vent her anger at me at what I had done. \"Well, now you know. I happened onto this thing at a time in our marriage when we weren't setting the night on fire. And to tell you the truth, I felt, deep down, I was losing you. I was desperate to try anything that would spark your desire in me again. Stupid, I know. I know now I should have told you about it, at least after that first time with Gloria. Maybe then, things would have been different between us without the drug, if you had known my thoughts about losing you.\"\n\nI stared at her face. A small tear slowly made its way down her cheek, as she stared back at me, doe-eyed. Smiling at her, I wanted to kiss her more in that moment than at any other time in our marriage. She was forgiving me, unconditionally. Taking her hand gently in mine, I rubbed a thumb across her knuckles, while saying, \"You're being too easy on me. This may be your only chance to kick my ass for being so stupid.\"\n\n\"What you did...with the drug, I mean...this is about...about him, wasn't it?\"\n\n\"It was about a lot of things that were going on in our marriage at the time. He was never a factor. Most of all, I wanted you to desire me again, as you did when we were first married. I just wanted it to be like it was.\"\n\nShe blinked once to clear the water from her eyes, and said, \"You dope, you should know you could never lose me. I love you and I always will!\" With that, she pressed her lips to mine, and we fell into each other as if it was the first time. After a while, she added, \"And I can't lie to you. I like what's been happening to us. So there it is. I can't be mad at you although I should be, because being mad at you would make me the worst kind of hypocrite. That said, I just hope what we're experiencing doesn't go any further. I like taking you up the ass too much to just quit.\"\n\nI laughed at her self-deprecating joke, before agreeing, \"I hope so, too.\"\n\nShe thought a bit more about what I told her, probably trying to weigh all the conceivable positives and negatives, all of the good, along with the bad caused by the use of the elixir; just as I have been doing these past months. Yet, it was all too much to process at the moment. Instead, she asked with a sigh, \"What do we do now?\"\n\nStanding up, I pulled her up to me, saying, \"I think we should see to our guests. They should be in full swing by now. But first, I'm going to change into my bathrobe.\"\n\n\"Bathrobe? Don't you want to...you know...join in?\"\n\nI kissed her deeply, while pushing those thoughts of bliss and tranquility into her mind. Immediately, I felt her arousal begin to percolate. \"Of course I do, and so do you. But, for the time being I'm going to continue playing 'The Hef,' and just watch how the others have their fun before joining. I think you should too. Sit in the big chair with me for a while, and learn how to focus your mental abilities. You should get used to using these powers.\"\n\n\"After Barbara, I don't think I should.\"\n\n\"Because of Barbara, I think it imperative you should. It will be good training for you. You have to become aware of what it feels like, and to learn what you can and cannot do.\"\n\nShe still looked at me with apprehension.\n\n\"Don't worry. I'll be with you to guide you.\"\n\nReassured, she nodded her head before wrapping her arms around my neck and kissing me deeply.\n\nI took this moment to slide her skirt off and remove her bikini bra, then said, \"Leave the thong on for now. You can be my sultry, mistress Queen, sitting at my side while we watch our toys playing with each other and themselves.\"\n\n\"Speaking of toys, are we like the others? On the drug, I mean.\"\n\n\"No. As I said, we won't be taking the elixir anymore. We're both in our...how should I say it...we're both in our new, natural state.\"\n\n\"Really!\" she exclaimed, with surprise.\n\n\"Why is that so surprising? How do you feel?\"\n\nShe reached down into my boxers and stroked my cock lovingly with her fingertips, while saying, \"Because it feels like I'm on it. Because I want you to push this down my throat, while I beg you to fuck my cunt. And Master, I want you to keep fucking my pussy and my mouth until I pass out. Then you can start fucking my ass, and keep fucking it until I squirt in Jackie's face, over and over, again.\"\n\n\"Now, I thought I was supposed to do all that to Linda.\"\n\n\"Oh Sir, you're making my pussy drip, again.\"\n\n\"I haven't even started yet.\"\n\nI almost gave her a full demonstration of the extent of my powers\u2014our powers, really\u2014right then and there. It would have been so easy to show her what I could do, by pushing her into a screaming orgasm with just a touch to her mons. Something held me back, however\u2014vanity, I guess.\n\nI always want her to think it was just me and me alone, without use of the drug or my powers that makes her feel like no one else on the planet could feel. Yes, I am Robo-cock\u2014forever.\n\n\"Now, let's gather up all your toys. I'm sure our guests will put them to good use.\"\n\n********\n\nWhen Karen and I got back to the guests, things were in various states of 'ordered' chaos.\n\nSome of them were fully active in various fuck and suck sessions with various partners, while some, like Gabby and her husband Phil, just played with themselves as they passively watched the actions of the others. It was odd. Neither of them played with the other, but just sat naked on the couch fiddling about at masturbation.\n\nSurprisingly, some guests hadn't committed to anything yet, and were still dressed, frantically looking about. One of those was Mark, hard to believe.\n\nAfter Karen peeled away from me to deposit her toys around the room, I ventured over to Mark to find out what was wrong. At first, I assumed he didn't get a large enough dose of elixir, and was still within his normal, repressed state.\n\n\"Hey man, anything wrong?\" I asked.\n\nHe was sweating profusely, and his head and hands nervously shifted about as if he was a junky in desperate need of a fix. He responded loudly, like a deaf person who thinks everyone is as hard of hearing as they are. It was obvious he was overly jacked on elixir.\n\n\"Wrong? No man, nothing's wrong. Great party! You and Karen always do a great party.\"\n\n\"Well, what are you waiting for? I'm sure the ladies would love to meet you, particularly when you take your pants off. Hey look, there's Jackie. I know she's into you. Why don't you go over there and grab her big tits.\"\n\nJackie was on the other side of the room, along with Denise and Mark's ex-wife, Linda. Jackie and Denise were completely naked, their arms around each other as they squeezed the other's buttocks, playfully. Linda wasn't completely undressed. Holding her blouse in a hand, she still had on her bra and slacks. All three were looking down at the other lounger, but I couldn't see at what because they were blocking my view.\n\n\"Oh man, you didn't tell me she'd be here,\" Mark responded, loudly.\n\n\"Who, Jackie?\"\n\n\"No, Linda. I don't know if I can do any of this with her here.\"\n\nI was confused by his answer. \"Sorry man. Karen invited her. But hey, you don't have to fuck her, plenty of other fuckable women here. Why, just look at Sara going to town on Carl and Jack. Boy, she really likes to suck cock. I bet she'd love a third one shoved in her face. And, just whose face is she sitting on, anyway? Why that's Pammy, go on man, forget about Linda and get in the middle of that. Just stick that big dick of yours into Pam's dripping bush. She'll squeal in surprise and delight.\" \n\n\"It's not that man,\" he started to say, loudly, then dropping his voice almost to a whisper, \"I don't know if I can take watching Linda fuck other guys.\"\n\nOh that was it.\n\n\"Yeah, I know what you mean. I had a hard time watching you fuck Karen, but I got over it, sort of. Look, if I can get over seeing my wife fucking another guy, especially another guy that made her squirt like you did, how much easier will it be for you to get over Linda?\"\n\nJust then, as Sara continued to pump their cocks with her delicate hands, both Carl and Jack shot a heavy load into her waiting mouth.\n\nShe is good. Got them both off at the same time.\n\n\"Well looky there. I think a spot just opened up for you. Go on. Stick your cock right into Sara's mouth.\"\n\nI thought I had him coaxed off the couch, when Gabby finally made her presence known. She must have been waiting to see the money shot from Jack and Carl, and now she was ready to get down to business.\n\nStrutting around the living room with hands on hips, she announced as if the queen of the orgies had just arrived, \"Okay, which one of you peckerwoods is man enough to fill my snatch?\"",
        "Nudging Mark, I said, laughingly, \"I think you're on, champ.\"\n\nIn a flash, Mark was off the couch, cock in hand. While waving that monstrous tool of his in Gabby's direction, he called, \"Hey Gabby, bitch. Come and get it.\"\n\nIt took Gabby a second to see his cock. When she did, a great, openmouthed grin erupted across her face. She flew at him before any of the other women could, while saying with barely concealed excitement in her voice, \"Now that's what I'm talking about. Stick that beautiful pole in me baby, and keep stickin' it to me 'til I faint.\"\n\nNow that Mark was set, I made my way over to Jackie, Linda and Denise to see what was so interesting about our lounger\u2014I just about fell over laughing when I found out.\n\nThe three of them had Raven securely tied down to the lounger. She was on her knees in a crouch, with her head down and ass slightly elevated into the air. Her hands were tied behind her back with one of the ladies' skirts. Other skirts and articles of clothing secured Raven's neck, torso and legs to the frame of the heavy chair. Raven squirmed, mightily, but overall, she was immobile. Someone added a personal touch\u2014probably Denise\u2014and scrawled 'Cum Dump' across her forehead in red lipstick.\n\nComing up between Jackie and Denise, I put an arm around each, and asked with a laugh, \"Well ladies, what's up?\"\n\n\"Jackie kissed me on the cheek, and said in that sultry voice only Jackie could have, \"Hey Robo, care to try our new repository?\"\n\nWhile I tried not to laugh, it was Linda who answered my question directly, \"We all had enough of her bullshit.\" Then turning back to Raven, she continued berating the young woman, loudly, \"Isn't that right bitch! Everybody got tired of your shitty, little comments! How does it feel?\"\n\nRaven struggled against her bonds, while yelling, \"You fucking bitches! Let me up, or so help me...\"\n\n\"Or what, dear,\" Denise asked rhetorically, \"You'll call us names again? What did you call me again, a 'fag hag,' which doesn't even make sense? And, was that before or after you called Linda, 'an uptight Babbitt,' just because she thought your tattoo was a bit too gauche? That is what she called you, isn't Linda?\"\n\n\"That's right, bitch,\" Linda yelled down at Raven, \"Who's the tied-down, uptight bitch now?\"\n\nAt that moment, Holly came up and knelt next to her friend.\n\nHer voice full of relief, Raven said, \"Oh Holly, thank god.\"\n\nHolly looked her friend up and down, while straightening Raven's bangs. Sheepishly, she started to say, \"Gee, this so sucks donkey, Raven. It's really mean what they're doing to you...\"\n\n\"I know,\" Raven started to cry, \"Cut me loose so we can get the fuck out of here.\"\n\nHolly didn't answer right away. Instead, she looked around with an uncomfortable expression. Finally, she said, \"Gee, about that Raven...I...ah...I really want to help...really I do...but...\"\n\nJust then, Jack slithered up to us.\n\nDenise had her back turned toward him, but she heard his curt, \"Denise.\"\n\nNot turning around to face him, Denise responded with an equally unemotional, \"Jack.\"\n\nJack's mood brightened when he looked down at Holly, \"Ready, Holly hot stuff? Bam-bam Pam's just dying to feel that tongue stud of yours. She's wetter than a March rain.\"\n\nHolly gave Raven's cheek a quick peck, and said before scampering off with Jack, \"Just hold tight for thirty...no, make that forty-five minutes or so. I'll be back.\"\n\n\"Goddamn it Holly, you dumb, fucking, cunt bitch! Come back here and cut me the fuck loose!\" Raven yelled after her friend, but to no avail.\n\nAfter the three women stopped their giggling, Denise bent down close to Raven's ear, \"Aw, look who's gone off with the Crypt Keeper. I think it's love. No more 'friend-zees' for you, dear. You're all alone. Now, until you learn some manners you're going to be here a while, so get used to it. Occasionally, someone's going to come along for a little oral attention, so you'd better be extra good. Until then, we've got a little something here to keep you company. Jackie dear, hand me that butt plug and lube.\"\n\nDenise squirted a liberal amount of lube onto Raven's asshole, and worked the plug in. When it was seated properly, she said, \"There, that should keep your fat pussy interested and simmering nicely. Too bad it won't be enough to get you off, but them's the breaks, bitch.\"\n\nIt was the 'Will treatment,' only worse. How long the others will keep Raven tied to the chair is anyone's guess, but given Linda and Denise's ire, it was going to be for a while. I suspect by the time they let her go, Raven will be nothing more than a quivering mass of oversexed Jell-O, ready to sign her life over into perpetual servitude for just a quick finger fuck.\n\n\"Remind me never to piss you three off.\"\n\nJackie wrapped her arms around my neck, and said, \"Hmm, that's not a bad idea. Then we could tie you up and lick you all over until Robo-cock goes pop. Yummy! Speaking of licking, the three of us were about to start a little daisy chain. Care to join us?\"\n\n\"That does sound like fun, but give me a rain check, sweetheart. I want to see how the other guests are doing, first. No rest for the wicked, as they say.\"\n\nShe kissed me long and hard, before saying, \"No rest, but a hell of a lot more fun. We'll be waiting.\"\n\nAs I watched the three head off to another part of the living room, probably in search for that elusive fourth daisy, I caught sight of Lisa and Bob. I was glad to see Bob wanted to stay, though I had little doubt of that once the elixir took effect.\n\nThey were with Carl and Darcy, both of whom, given what I saw earlier, seemed to be making the rounds through the other guests rather quickly.\n\nMaking up for lost time, I suspect. Someone should tell Darcy you can burn just as many calories fucking as you can running.\n\nCarl and Bob were standing against the wall by the end of the couch, while Lisa and Darcy were on their knees in front of them\u2014a common position tonight for both my male and female guests. Carl's wife, Darcy, was giving Bob a blowjob. One of those slow, down to the nuts, swallow him whole kind. The kind of blowjob exclusively meant to get the guy to come in nut-busting fashion, rather than just get him super hard in order to fuck\u2014in other words, a blowjob the guys love. She was working it well, too. Her lips were tightly clamped around the shaft as she exerted a strong suction, exemplified by her deeply sunken cheeks. Along with a delightfully slow back and forth head bob along Bob's shaft, Darcy had her hands playfully, yet firmly, gripped his ass so that she could pull him in further\u2014masterful.\n\nFor the time being, Carl and Lisa were content watching Darcy work her magic.\n\nAsking the group with a perfect Host's aplomb, \"So how's everything, guys, things going alright?\"\n\nCarl and Bob, grinning from ear to ear, blurted in unison, \"Great!\" Bob even tried shaking my hand\u2014a nice gesture, but clumsily executed; his eyes were half-lidded and he couldn't see straight. Lisa winked, and mouthed a silent 'thank you' at me. I smiled, knowingly, and winked back. Humorously, while still engaged with Bob, Darcy tried to say something, but it just came out like a disjointed mumble.\n\nLaughing, I was about to say something clever, but Lisa beat me to the punch, \"Darcy, honey! Don't you know it's rude to talk with your mouth full?\"\n\nDarcy almost spit Bob's cock out trying not to laugh.\n\nCarl, having nothing to do at the moment\u2014not sure why, given Lisa's availability\u2014began asking questions, \"So how long have you and Karen been swinging?\"\n\n\"Oh, it started months ago when a friend was visiting. It was just one of those spontaneous things. We liked it, so we've been putting together bigger parties ever since.\"\n\nCarl continued with the questions.\n\nI wish Lisa would start sucking him off so he'd shut up.\n\n\"What made you invite us? I mean, I thought you had to scan through the classifieds in gash mags, or troll internet sites to find like-minded people. How did you know...well, you know.\"\n\n\"You can thank Bob for the invite.\"\n\nBob finally came out of the erotic fog to fain surprise, \"Me? What did I do?\"\n\n\"I guess it wouldn't hurt to tell you in front of Lisa. I caught you peeking over the fence at Karen and our friend when they were in the backyard.\"\n\n\"You saw me? Oh man...sorry.\"\n\n\"Hey, don't worry about it. I would have done the same myself. The look on your face told me you were ready for something like this.\"\n\nLisa got a little pissed at the news, and said as much to Bob, \"You were peeking into their windows? All this time I'm thinking you're too tired for sex. Instead, you're out sneaking around, looking in our neighbor's windows and probably whacking off...\"\n\n\"It wasn't their windows, it was their backyard, and it was only once, by accident...\"\n\nLisa was going to say more, but Bob threw up his hand, as a signal for her to shut up. Lisa ended up mumbling, \"I married a peeping Bob.\"\n\nBob had a concerned look when he asked, \"Will, if this party was planned, why did you invite Barbara?\"\n\nOh man, this is a disaster. I should get out of harm's way and go fuck someone.\n\nLisa also cringed at Bob's question, and said, coming to my rescue, \"That was my fault, Bob. Will didn't invite her. He told me the party was just for the adults, and that Barbara shouldn't attend. I thought by 'adult' he meant there would be drinking, so I let Barb come.\"\n\nBob said, before falling back into his erotic fog, \"Well, it's a good thing your mother called needing a ride. No telling what would happen if Barb stayed. Fuck the whole thing up.\"\n\nLisa rolled her eyes, and sighed in relief.\n\n\"Anyway,\" I said to Carl, hoping to finish off the conversation and get the hell away from them, \"I thought if I was going to invite Bob and Lisa, I'd invite you guys and the others as well. It was a risk, but I figured if you guys weren't into it, you'd just leave. No harm, no foul. I rolled the dice, sure...but what the hell.\"\n\n\"Glad you rolled 'em, man,\" Carl exclaimed, \"I mean, Darcy and I never even talk about doing something like this. Not even with each other. Oh, we talked about sex games and role-playing, and some other kinky stuff, just between the two of us, but nothing ever happened. It was getting pretty frustrating, what with Darcy running all the time and not in the mood...\"\n\nThis time, Darcy did spit out Bob's cock, \"What do you mean by, 'not in the mood'...\"\n\n\"I mean it's been freakin' months since you felt like doing it, and that was only a quick one in the shower.\"\n\nDarcy struck back, defensively, \"Well, it's not like you're some ball of fire either. You're always tired after work...\"\n\n\"I'm not tired on the weekends...\"\n\nBob put a hand on Darcy's head, and said with severe frustration, \"Darcy, honey, what are you doing to me girl? I was getting close. Get back on that thing.\"\n\nDarcy squeaked a 'sorry,' and went back to her duties.\n\nThere was some more chitchat from Carl for a few more minutes\u2014for some reason he didn't want me to leave\u2014when we all heard Bob say, \"Here it comes, baby,\" then groan loudly.\n\nDarcy held Bob's cock it, and just jiggled her head back and forth a bit. Her cheeks, once so shallow and sunken, began to puff out as her mouth filled with cum. Two small trickles leaked out at the corners of her mouth, appearing as thin, white ribbons, making their way down to her chin, and eventually falling softly onto her breasts.\n\nShe continued her little head jiggle until she felt Bob's cock momentarily getting soft. When she pulled away, she tilted her head back a bit, keeping the cum from flowing out. Lisa then slid closer to Darcy, positioning her head slightly below her friend. Darcy aimed perfectly, allowing a large glob of cum to fall neatly into Lisa's open mouth.\n\nThey both rolled the cum around in their mouths, as if they were cooks tasting the proper seasoning of a soup, before swallowing and smacking their lips to draw out additional flavor.\n\n\"Okay Lisa, do Carl now,\" Darcy said brightly.\n\nI know I'm going to kick myself for this, but I had to ask.\n\n\"Just what are you guys doing?\"\n\nDarcy answered, as Lisa latched onto Carl's cock, \"We're finding out whose cum tastes better. So far, we've done Rashid, Jack, and Bob, of course. So far, Bob's the best. Don't you think so Lisa?\"\n\nLisa, with Carl's cock half way in her mouth, just nodded her head in affirmation.\n\n\"Jack's was okay, kind of neutral at first, but the texture was way too thick. Rashid's was a really heavy load, not as thick as Jack's, but way bitter. I think it's his diet. Didn't you think so, Lisa?\"\n\nAnother head nod.\n\nI took that as my cue to, 'get out of Dodge,' \"Interesting. Well...\"\n\nFeet don't fail me now.\n\nI went in search of safer fields, and I saw them on the other side of the room.\n\nI made my way over and around various groups sprawled out across the living room, much like a soldier working his way through a minefield.\n\nI noticed the daisy chain girls had found a fourth, and a fifth, daisy. Rashid's face was buried in Linda's bush, tonguing her vigorously, while Sara was doing the same to Jackie. Jackie, whose tastes leaned heavily toward the phallic rather than Sapphic, was sucking on Rashid's balls as she slowly stroked his cock. Denise lovingly attended to Sara, and had the exotic beauty in spasms of pleasure. Linda was having the time of her life, her face buried deep between Denise's legs.\n\nI half thought about joining them, but I caught sight of Karen near the door of my study.\n\nShe was tight against Cecilia, having the younger woman backed up against the wall and up on tiptoes. Karen clasped both of Cecilia's hands firmly in her left hand and held them, outstretched, far above her head. Three fingers of her right hand were buried deep in Cecilia's pussy, and she was making the ebony princess slide her body, up and down, along them. Karen nuzzled Cecilia's face, occasionally kissing her lips gently or whispering a soft command into Cecilia's ear. Cecilia's legs trembled in strain and ecstasy.\n\nI stopped to watch the two when I was within earshot of Karen.\n\nKaren brushed her lips across Cecilia's cheek, whispering in a dark and sultry voice, \"Do my fingers feel good?\"\n\n\"Oh yes, Queen Mistress,\" replied Cecilia, panting.\n\n\"Hmm, I can tell, your pussy's dripping. Should I play with your clit, as well?\"\n\n\"Oh yes, please, Queen Mistress.\"\n\nKaren smiled at first, and then said absentmindedly, \"I think not.\"\n\nCecilia whimpered in disappointment at the news, but Karen hushed her, \"First, I want you to fuck my fingers like you fuck my Master's cock.\"\n\nCecilia shifted up and down a bit faster, but she did it awkwardly, given that she wasn't balanced well on her toes.\n\nKaren laughed brightly, \"It isn't the same, is it? Don't my fingers feel the same as Master's cock?\"\n\nCecilia was afraid to say anything, less she hurt Queen Mistress' feelings.\n\nKaren kissed her again, brushing her tongue along Cecilia's lips, \"Of course they don't, but they still feel wonderful.\" On the last syllable of 'wonderful,' Karen pushed her fingers deeper inside, just as Cecilia was dropping down. Cecilia's mouth snapped open. She gasped at the sudden shock of pleasure.\n\nKaren held her fingers fully inside, working them around deep in Cecilia's cunt. Cecilia's legs were trembling to the waves of pleasure.\n\nJust as it looked like Cecilia would come, Karen removed her fingers, \"Nope, not the same at all...pity.\"\n\nBringing her hand up to Cecilia's mouth, she commanded, \"Suck,\" and as Cecilia opened her mouth, Karen slid all four of her fingers inside, while saying, \"Suck on them like you suck on Master's cock.\"\n\nIt was all so eerily familiar to what I had done with Beatrice. Repeatedly, Karen would bring her fingers up to Cecilia's mouth for her to suck on, before inserting them back into her pussy. Then, massaging her insides until Cecilia was nearly climaxing, she would remove them and push them back into Cecilia's mouth. Karen did this until her fingers were coated with a thick film of Cecilia's arousal and saliva.\n\n\"Yes,\" Karen intoned, as if setting the scene, \"That's Master's cock you're sucking. Feel it, hard and hot against your tongue? Play with it, now. Flick your tongue across that fat head, and make his cock grow harder and fuller, still. Feel it dear, expanding in your mouth...oh yes, swelling until there's no room left to flick your tongue. Such heartache, now...no more room, but you need more room in that hot mouth of yours. You need to flick that quick tongue faster so that it makes Master's cock explode, filling you with all of his hot, thick cum. And really, isn't that what you want, his hot cum? So, you must open wider, dear.\"\n\nCecilia stretched her mouth open as far as she could, allowing Karen to insert her thumb, as well.\n\n\"Let your saliva run all along his cock. Bathe him in it...that's wonderful dear, now Master is ready for your pussy. Are you ready for Master's cock?\"\n\n\"Yes, Queen Mistress!\"\n\nKaren easily slid three fingers into Cecilia's pussy, then a forth. The thumb was trickier and Cecilia needed to lower herself in order to widen her stance and spread her legs further so that Karen could insert her whole hand.\n\nThere Cecilia squatted. With her back straight against the wall, legs jutted out sideways from her torso and bent at a right angle at her knees, she looked every bit as one of those Egyptian hieroglyphics that decorate a Pharaoh's tomb.\n\nKaren had all fingers and thumb completely inside her pussy. She pushed her hand in a little further, just enough so that Cecilia's inner labia nearly covered all of Karen's knuckles. While slowly rotating her hand, she rapidly shook her arm, causing her fingers and hand to vibrate inside of her.\n\nCecilia was nearly grunting like a wounded animal at the pleasure and pain. She rocked forward, almost losing her footing, but Karen balanced her by pushing Cecilia against the wall as she pressed her mouth onto Cecilia's.\n\nLong, muffled moans\u2014shrieks of pleasure, really\u2014whose volume were dampened against Karen's mouth, drowned out the sloshing sounds of Karen's rapid massaging of Cecilia's drenched pussy.\n\nCecilia ripped her hands away from Karen's grip, and grabbed either side of Karen's head for added support. Karen pressed her mouth harder onto her, forcing her tongue deeper into Cecilia's mouth, while she pushed her rotating hand deeper into her pussy. I could see nothing of her knuckles, as she resumed her rapid arm shake.\n\nKaren stared to inch her hand in further, but just then, Cecilia went wide-eyed and snapped her legs around Karen's arm, as if a trap were sprung.\n\nCecilia remained in her angled crouch, motionless, but I could tell from the way her stomach muscles rolled that she was in perpetual climax. Soon, they slowed their kiss, taking longer and deeper bites at each other's tongue with their lips. They stayed like that, locked against the wall for a little while longer, until Cecilia finally went limp, sliding down the rest of the way to the floor.\n\nEven Karen was breathing hard from the intense eroticism and strain of the ordeal as she whispered one more time, \"Is that how Master's cock feels?\"\n\nCecilia only smiled weakly.\n\nWhen Karen stood up, I put my arm around her, surprising her, \"Oh, you scared me. How long have you been here?\"\n\n\"Long enough. That was amazing.\"\n\nA satisfied smile crossed her face as she looked down at Cecilia, \"It all came so naturally,\" then kissing me on the cheek, she whispered, \"You were right. At least I think I did something...something using my...you know what. I'll tell you about it later.\"\n\nHow much of what Karen did to Cecilia was done with her mind, or just through her growing, expert sexual techniques, was hard for me to guess. If she truly pushed her into that shattering orgasm with the help of her mind, then her powers have grown near to my level. I kept these thoughts to myself, until I learned more from her of what she did and how.",
        "I squeezed her ass, playfully, and asked, cocking an eyebrow, \"Queen Mistress?\"\n\nShe blushed before answering, \"I liked the way it sounded when you said it to me. I think I'll have all our concubines call me that from now on. Come on Cecilia, up girl. It's time we join the others. Much more fun awaits us.\"\n\nCecilia's legs were still wobbly, so Karen supported her somewhat with an arm. We deposited her with the other daisies.\n\nKaren and I took our intended, ceremonial positions on the big lounger\u2014the Emperor and his mistress Queen\u2014to watch the proceedings for a while.\n\nEverything seemed to be going smoothly.\n\nMark had finally gotten his head on straight, and was having a hell of a good time on the couch opposite Karen and me. At the moment, Gabby straddled Mark's legs in a 'reverse cowgirl,' feverishly bouncing up and down on his cock. Candice, who I hadn't seen since the toast, straddled Mark's head, and had his face buried deep between her legs.\n\nI still hadn't seen Jack, Pam and Holly, and assumed they were in another area of the house.\n\nRaven was still tied to the other lounger, stewing nicely. A fine, yet obvious film of sweat covered her face and torso. It also looked like someone had already taken advantage of Denise and Linda's human repository, as two thick strands of semen hung from Raven's chin. Due to the sweat and semen, her bangs were matted and stuck to her face and forehead. She had to blow, constantly and forcefully, at her hair, because it kept tickling her nose each time her bangs fell forward across her face. In a word, she was in agony.\n\nWhen she saw me looking at her, she pleaded for me to let her go, or at least to fuck her. I just shook my head at her, before turning away with a smile. \n\nMost of the other guests had joined the infamous daisy chain. That is, all except Gabby's husband, Phil, who sat on the opposite end of the couch from his wife and Mark, 'playing' with himself. He wasn't really masturbating, either; it was more like he was holding his cock and balls close to his body. I don't think he had moved since he discarded his clothes after Sara and Darcy's dance.\n\nI whispered to Karen, \"What's with Phil?\"\n\nShe whispered back, \"I was going to ask you. I guess he likes to watch.\"\n\nMy attention was drawn back to Mark, Gabby and Candice. Candice had slid off Mark's face and was offering her pussy to Gabby, who was still bouncing along Mark's cock.\n\nGabby politely refused her offer, saying, \"Oh honey, that's just not my style, but you can suck on my titties if you want.\"\n\nGabby arched backwards, accentuating her breasts as Candice obliged, clamping her lips down on the closest of Gabby's breasts, while roughly playing with Gabby's other one with a hand.\n\nGabby wrapped an arm around Candice's head, pulling her closer and crushing Candice's mouth into her tits. Then she called, seemingly to no one in particular, \"Slave! It's time.\"\n\nImmediately, Phil jumped off the couch, knelt down in front of Mark and Gabby, and proceeded to tongue Gabby's exposed clit.\n\nGabby roughly grabbed a tuft of what was left of Phil's hair, and smeared his face all over hers and Mark's groin, all while saying, \"See that cock fucking me good? That's what a man's cock looks like. Tongue his cock as it slides into my snatch, wimp, then suck his balls.\"\n\nWhen Gabby let go of his hair, Phil brought his face lower, diving head first into Mark's junk.\n\nGabby asked, \"You don't mind if hubby licks your balls, do you stud?\"\n\n\"Just as long as he doesn't expect me to do it back to him.\" Mark responded, scooting himself out and further from the back of the couch so that Phil could draw his balls into his mouth easier.\n\nSimultaneously, Karen and I whispered to each other, \"Are you causing that?\"\n\nThat answered that question.\n\nKaren asked, softly, \"Did you know?\"\n\nI responded in equally a soft voice, \"I had no idea, but it makes sense he's a cuckold, I guess. He was always such a mouse and she was always dominating him, almost to the point of verbal abuse. Who would've thought all those times Gabby was berating him, it was really foreplay.\"\n\nKaren laughed, and said, \"You know, that's what's always been missing at these things, a little guy on guy action for the ladies.\"\n\n\"Women really want to watch two guys getting it on?\"\n\n\"Some would. Me, for example, and Jackie used to get off watching her ex-husband with a boy toy.\"\n\nI laughed, \"Well that's Jackie, enough said. As for your desires my mistress Queen, don't even think about it.\"\n\nShe ignored my dictate, saying, \"There are others, I'm sure. Gabby, of course, and I get the feeling Sara is kind of a Dom, but we'll never really know unless...\"\n\nI cut her off, knowing exactly where she was headed, \"I told you, don't even think about it.\"\n\n\"Oh come on,\" she whined.\n\n\"If it happens naturally, like with Phil, then fine; but, I don't want you pushing the other men into freaking out with each other. Is that clear?\"\n\nKaren got a little peeved with my supposed double standard, \"What about you pushing me and Gloria together? What am I saying, you pushing me and everyone with a pussy, together? Why was it okay for you, then, but not for me, now?\"\n\n\"I didn't push you into anything, on or off the elixir.\"\n\n\"Really?\"\n\n\"Really. That was all you and on your own. Oh, don't get me wrong, I wasn't going to stop it, but I didn't put the suggestions in your head, either.\"\n\n\"Wow, I learn something new about myself every day. I didn't know I was such a rug-muncher, or is it the elixir changing us?\"\n\nI laughed at the coarse description of herself, before responding, \"I don't think it's just you. I think most women are more fluid in their sexuality, as opposed to men in general, who are more hardwired to the hetero. I don't think it's the elixir, either. The drug accentuates and heightens our natural tendencies, to be sure, but I don't think it makes us do things we wouldn't do naturally, except under extremely special circumstances. It's just the nature of men and women, my love.\"\n\nI didn't mention what I had done to Justin and Parker at the office, or to Mark after the last orgy. Technically, it wasn't the elixir that forced the issue, only my mind, so what I told her about the drug was true as far as it goes; however, even I had my doubts as to where the exact boundaries lie concerning the elixir and human sexuality.\n\nKaren had drifted back to watching the four on the couch.\n\nIt looked like Candice finally got Gabby to tap into her inner lesbian, because she was pushing Gabby's head between her legs, and Gabby wasn't complaining. It looked like Mark was getting close. He was pounding forcefully into Gabby's snatch while playing roughly with her tits. His face was also between Candice's legs\u2014quite the versatile fellow, fucking and eating, and not missing a beat. I suspect both he and Gabby were taking great sucking bites from the redhead's sweet apple. Phil had stopped sucking on Mark's scrotum, and concentrated on his wife's clit as Mark pounded away.\n\n\"Speaking of putting suggestions in heads, why don't you tell me about you and Cecilia. You said you weren't sure if you really did anything.\"\n\n\"Well, I kind of got a hint that maybe I was when we were in the middle of playing with each other. I had her against the wall, sort of like you found us, and we were just kissing and doing a little gentle petting and fingering. It was really hot. Then my mind drifts, and I'm thinking about what you called me, 'mistress Queen,' and how I liked it. The name keeps rattling around in my head, until I hear Cecilia say, 'Touch me a little higher, please, Queen Mistress.' When she said the name I just about freaked, but I still wasn't sure. Did I inadvertently say it out loud and she picked up on it, or maybe she hear you call me that earlier, and started calling me 'Queen Mistress' herself?\"\n\n\"I didn't say a thing,\" I assured her, then asked, \"What about her climax? How much did you use your mind pushing her over the edge like that?\"\n\nShe shrugged her shoulders, \"That's another thing I can't figure out.\" She thought for a second more, then asked, \"When you're putting commands in their heads or reading their minds, what's it like?\"\n\n\"I usually see images, sometimes combined with their emotions. Either different, specific, still pictures flashing by, or I see short continuous scenes, like movies, of their fantasies or past events in their life. Then I play off those images.\"\n\n\"That wasn't happening to me at all,\" she responded, a bit dejected, \"It was like I heard her talking to me, like her voice was in my head. I didn't see anything, just heard things. At first, there was a lot of nonsensical chatter, but every now and then, I could hear a clearer voice above all the noise. One of those clear voices was that she really wanted your cock when I was fingering her. So, I went with that and made my hand into your cock, in a sense. Toward the end, all I heard in my head was her screaming, 'Fist me,' over and over until I felt her dam burst.\" She shrugged her shoulders, and concluded by asking, \"What do you think, can I really read minds and make them do things?\"\n\n\"From what you say, it sounds like you can definitely read their minds, at least at times. It's just different from how I see their thoughts. You seem to read their thoughts. I'm not sure whether you can influence them the same way as me. We'll have to experiment a little further.\"\n\nShe looked at me funny, \"Really, you think I can? It was all a big, noisy blank for me.\"\n\nKaren's apparent disappointment at telling me her story stems from an error. Because she read Cecilia differently than how I would have, she didn't think she was reading Cecilia's mind, when in fact she had\u2014she literally read her mind.\n\nI remembered reading an article where researchers were concluding that men and women's brains were wired differently.\n\nI know, leave it to a bunch of eggheads to waste gazillions of dollars on something everyone else knew intuitively since the dawn of history. Moreover, if they're still unsure about our different wiring, have them stop by any American home just as Monday Night Football starts. They'll find the husband wondering why the wife picked that moment, of all those moments during the week, to have him look at three-hundred drapery swatches. After that, the wife can give the researchers chapter and verse on why he's an uncaring, insufferable asshole because he won't take the time to discuss interior design for an hour\u2014men are from Mars, women are from Venus, and sometimes both wished they'd have stayed in their respective corners of the universe.\n\nAnyway, from the article, this difference in 'brain wiring' also translated into differences in how both sexes take in and process information. For men, the most natural way we synthesize data and information was through the visual, using images, while women best process information by communicating through language.\n\nWife to husband:How can you watch football all day, then look at porn all night? Could we please talk about the drapes, now?\n\nHusband to wife:It's been a freaking week of this drapery shit, maybe you can stop talking about the fucking drapes long enough to give me a blowjob?\n\nIf the research was accurate, then it makes perfect sense why Karen and I experienced different things when reading their minds. We were using a different avenue to process the information\u2014an avenue catered to how the male and female brain evolved and adapted over time\u2014hers verbal, mine visual. Yet, the results were the same, we could read and influence their thoughts.\n\nI was distracted from my musings by loud moaning from Gabby. She slumped back into Mark, momentarily spent. Mark continued to pump slowly into Gabby's pussy, but you could tell he had shot his load as well. Candice removed her pussy from Gabby's face, and was rudely prodding her that it was her turn, and that Gabby should move. And Phil, well...\n\nGabby kissed Candice to hush her, and said, \"Just hold those damn horses, Miss Candy Ass. You'll get your chance, but there's one more thing I need to do.\"\n\nGabby lifted herself up, pulling Mark's cock out of her before she sat back down on his legs. Once the 'plug' was removed, a small river of cum began to flow from Gabby's opening. Snapping her fingers at her husband, she commanded, \"Clean me, dickless!\" \n\nCandice watched Phil with rapt attention as he proceeded to bury his tongue in his wife's snatch\u2014all of us did, really.\n\nKaren whispered, \"You'd think Phil would have more fun getting...well, you know...getting it directly from the source.\"\n\n\"I guess it's the cuckold way,\" I whispered back, \"I don't think Phil is really gay, or even bi. He just gets off watching Gabby get off with different man, and being humiliated. I don't get it, but different strokes. Don't be surprised if sometime tonight he begs to clean you.\"\n\nGabby, having a good hold of Phil's hair, pulled him away from her, \"That's enough, you dickless cunt. Now fluff Mark's meat for Miss Candy!\"\n\nSure enough, cuckold Phil did as commanded.\n\n\"What the fuck!\" Mark exclaimed, as he tried impossibly to back away through the back of the couch.\n\nGabby forcibly leaned back into Mark, saying, \"Easy there stud. Miss Candy Cane is chomping at the bit, so just let my little 'fluffer' get that stick of yours back to full hardness. Some of the other studs I've fucked tell me he isn't half bad, so enjoy it.\"\n\nIn no time, Phil had Mark's tool stiff as a board.\n\nGabby pushed Phil off Mark, and said, \"Go back to your spot now. Better yet, stand over there by that rude cunt tied to the chair and wait. Be ready when I call. Little Miss Candy Cane will need some cleaning soon. And stop playing with that puny dick of yours. It's embarrassing when there are real men around.\"\n\nPhil did as told and stood alongside Raven, looking like a whipped mongrel, while sporting a burgeoning erection.\n\n********\n\nI was about to ask Gabby some more things about her and Phil's relationship, when I felt a nudge from Karen, and heard her excited cry, \"Linda!\"\n\nI guess the daisy chain was starting to break up as some of the other guests, Jackie, Rashid, Cecilia and Bob, were gathering back to the main part of living room, and forming different fuck-groups. Linda was with them.\n\n\"Kare Kare!\" Linda yelled her nickname for Karen, while quickly moving toward us.\n\nAt about five-ten, Linda was clearly the tallest woman at the orgy. A good, if not flattering, description of her would be 'lanky,' as she had very long legs and an equally long torso. Although her breast size was ample, her long frame made it appear as though they were smaller than they actually were. This caused her no end in embarrassment, particularly in high school where she was often called 'Stretch' or 'Long-Tall' by her friends, and 'Ironing Board' by the meaner school cliques. She had a beautifully soft, oval face framed by short, dark brunette hair. Her face seemed ageless, and always appeared much younger than what she really was. At the center of that ageless face, was a cute, slightly upturned nose that gave Linda an arrogant, pouty look from the side. Her personality was anything but, however, always being cheerful and bubbly in spirit\u2014except during the time of her divorce\u2014so much so that, at times, she came off a bit na\u00efve. This naivet\u00e9 also contributed to her youthful appearance.\n\nLinda tripped as she neared us, and falling forward, planted her face right into Karen's lap. She stayed that way for a while, giggling uncontrollably. Finally, she lifted her head a bit to look up at Karen, and said, melodiously, \"I was waiting for you at the circle thingy, Kare Kare, but you never showed. How come?\"\n\nWhat with her tripping, and now with her slurred, almost infantile speech, I would swear Linda was drunk.\n\nBefore Karen could answer, Linda lifted herself off Karen's lap with the intention of kissing her. She slipped again, missing Karen's mouth and ending up with her chin resting on Karen's shoulder. She began giggling and talking at the same time, \"I ate someone's pussy...I'm not sure whose...I think it was more than one, but I liked it. I didn't think I'd like eating pussy, but I do...\" The giggling stopped as she began to cry, \"I wanted you at the circle thingy, Karrie Kare, but you didn't come...\" Laughing again, \"But I came...a lot...someone ate my pussy...I think it was her, or it could have been her,\" she said, as she pointed at some of the other women in the room. \"I didn't think I'd like eating pussy. Can I eat your pussy, Kare Kare?\"\n\nKaren couldn't stop laughing.\n\n\"Linda!\" I said, trying to get her attention.\n\nShe looked over at me cross-eyed, and slipped forward, again. This time, her face ended up in my lap. Linda was sprawled out across us both. With most of her torso resting in Karen's lap, she continued to laugh uproariously into my crotch.\n\nReaching up, she touched my nose playfully with her finger. I noticed she didn't have that cross-eyed look anymore, but she still talked as if drunk, \"Hi Willy, do you care if I eat Karrie Kare's pussy...oh, Kare Kare told me about you. I think you should do those naughty things to me while I eat Kare Kare's pussy...\"\n\n\"Linda!\" I said louder, trying to snap her out of it, \"How much did you have to drink?\"\n\nShe held up her hand, putting a small gap between her thumb and index finger, \"I just had a teeny, tiny more Sangria. There was just a teeny, tiny bit left after your toast.\"\n\nIt was stupid of me not to have thrown the excess away, but at the time I thought, 'waste not, want not.' Obviously, Linda had ingested more than a single dose of elixir. How much more, and what it will do to her, I couldn't guess.\n\nLifting her head off my lap, she hit the mark this time, landing her lips against mine.\n\nSuddenly, she snapped her head back, and asked in that same slurred speech, \"Hey, how come Willy's got a robe on? Oh, I know, Robby-cock is shy.\" She buried her face back in my lap, and said, giggling, \"Don't be shy Robby-cock, 'cus Karrie Kare Kare told me all about you, you naughty boy. Come out, come out, wherever you are.\" She began fumbling with the sash on my robe.\n\n\"Maybe you should just lie down for a while, sweetheart.\"\n\n\"No, I want to play with Robby-cock.\"\n\nShe sat upright again, \"Kare Kare, did you see what we did to the bitch? Come on, let me show you.\" Then grabbing Karen's hands, she tried pulling her up and off the lounger, only to fall back into Karen's lap.\n\nKaren looked at me wide-eyed and confused.\n\n\"Just go with her,\" I said, \"I'll tell you what I think happened, later.\"\n\nLinda put her arm around Karen, and led her over to where Raven was tied down. She wobbled as she walked, but at least she stayed on her feet. Hopefully, her over-dosed condition was temporary.\n\nI watched the two as they stood in front of Raven. Karen was squeezing Linda's ass playfully, while Linda was jabbing her finger down at Raven while yelling. I couldn't hear what exactly, the din in the room from all the other moans, groans and shrieks of ecstasy of my guests drowned out the particulars.\n\nLinda squatted down in front of Raven, spreading her legs wide. I couldn't see much, except Raven's head bobbing to and fro, as she serviced Linda.\n\nKaren stood next to Linda, watching her friend torment Raven while teasing Linda's hair, playfully. Occasionally, I'd see Linda look up, making Karen laugh. At other times, Linda would lean over and kiss Karen sweetly, just above the mons or along her inner thigh.\n\nAs Linda neared climax, she leaned back on her hands, and lifting up her ass a bit, pushed her groin further into Raven's face, while gyrating her hips slowly. There was a great, gush of fluid sprayed all over Raven's face and hair as Linda came. Linda continued to slide her pussy up and down across Raven's extended tongue while she flicked her own clit with a finger, done, I suspect, to eke out the very last bit of orgasmic splendor.",
        "Satisfied, Linda stood back from Raven, while gesturing to Karen that it was her turn.\n\nRaven, her head and upper chest covered by a heavy coating of Linda's ejaculate, began to protest in earnest at her treatment\u2014her complaints were only met with laughter from the two women.\n\nKaren assumed the same squatting stance as Linda, allowing the tied down, chubby bitch to further work off her transgressions.\n\nLinda didn't appear drunk anymore as she squatted down behind Karen, giving her support while playing with Karen's breasts. Karen responded by reaching back and wrapping her arms about Linda's neck. Leaning back into her friend, she forced her pussy further into Raven's face.\n\nEvery so often, Linda would reach around Karen, take Raven by the hair, and pull her even harder into Karen. After thoroughly smearing her face with Karen's arousal, Linda would pull Raven's head back and yell some more at the younger woman, before releasing her, so she could return to fondling Karen's breasts.\n\nIt went on like this for a few minutes more, and as I continued to watch Linda's behavior and mannerisms when she was berating Raven, I got the impression she was acting somewhat robotically, as if the things she was doing were programmed. I assumed that Karen was directing her, and pushing Linda with her mind.\n\nMy assumptions were confirmed as I watched Linda, without any verbal command from Karen that I could see, wet two of her fingers, then slide them under Karen's bottom and into her asshole\u2014that technique Karen loves so well. Almost immediately, Karen's body shook violently while three quick and heavy pulses of her arousal drenched Raven.\n\nBy now, the poor girl must be waterlogged and pruney.\n\nBefore standing, Karen paid Raven an even bigger insult by patting her on the head for a job well done, as if she were a favored pet.\n\nJust when I thought they were through tormenting Raven, I saw Jack come into the room with a small cadre of fuck bunnies, Pam and Holly, in tow.\n\nHe slid up to Karen and Linda, and both talked with him in earnest. Pam slid in next to Jack. Holly stayed behind the group and out of sight of Raven\u2014still guilty about running off with the 'Crypt Keeper' and leaving her to the mercy of the women, I guess.\n\nLinda was saying something to Jack while pointing down at Raven. It was then I noticed Jack had a digital camera in his hand, one of those fancy ones with gobs of memory for taking movies.\n\nWhat an asshole. Not satisfied with my invitation to fuck everything in sight, he has to film it, as well.\n\nJack proceeded to hand the camera to Pam, before lowering himself so that his stiff cock was level with Raven's mouth.\n\nPam filmed, as Linda slowly stroked Jack off. Linda commanded Raven to her stick out her tongue and lick Jack's cock. Jack never ventured to stick his whole cock into the captive's mouth\u2014I guess he thought it wasn't safe yet, given Raven's still, onerous disposition.\n\nSmart boy.\n\nLinda jerked a heavy load across Raven's face. Taking deliberate aim with Jack's cock, she hit almost everything except Raven's opened mouth.\n\nTired for the moment of poor Raven's torment, the group split up. Jack and his cadre went off to find more 'voluntary' fields to sow\u2014they'll probably find the daisy chain\u2014while Karen and Linda tried to make their way back to me.\n\nThey had to step around Lisa and Darcy, who were on the floor doing the sixty-nine\u2014Carl and Bob must have found the daisy, because they weren't in the room\u2014but Rashid was alternating between fucking Lisa's pussy and Darcy's mouth. He wrapped an arm around Karen and Linda's thigh as they passed, then slid a hand up each leg, cupping their pussies\u2014I guess he wanted a couple more fuck-mates for his little group. Karen kissed him a polite, 'no thank you' on the forehead, and pulled Linda away. Both were still laughing about the situation as they neared.\n\nI asked Karen, as she slid in next to me, \"It looked like you two were having fun. How's Raven?\"\n\n\"Still a cunt,\" she paused for a moment's thought before continuing, \"Remember how Cecilia looked when we did it to her, all sweaty and shaky, mumbling incoherently, with her pussy dripping like a wet sponge? Well, I think Raven looks worse...or better, depending on your perspective. Anyway, she still has a smart mouth, so that pussy of hers is in for a long, agonizing wait 'til blast off.\"\n\n\"Well that cunt's pussy can burst into flame for all I care,\" Linda said, this time sounding sober as she climbed onto my lap.\n\n\"If you keep her tied up all night, it probably will,\" I said, laughingly.\n\nThen in a flash, Linda's personality flipped over into 'drunken' Linda, \"Karrie Kare, when can I see Robby-cock? You promised.\"\n\nShe'd be like this for the whole night, flipping at various intervals between a 'stone cold sober' Linda\u2014the one with the personal vendetta against Raven\u2014into what I call her 'Lolita' Linda personality\u2014the slightly inebriated, oversexed teenager. It was as if she were 'Sybil' on steroids, with two personalities seemingly competing for domination over her, but neither winning absolute control.\n\nKaren kissed the 'Lolita' persona, and said, \"I know baby, but what did Queen Mistress say? You have to ask Master.\"\n\nA mischievous smile brightened Linda's face as she slid down along my body. Undoing my robe, she found the large lump in my shorts and began kissing and mouthing my cock through my boxers. After a short while, she asked, \"Please Master, can Robby-cock come out and play? Pretty please!\"\n\n\"I don't know Linda,\" I teased, \"I've heard people say you're not that enthusiastic in bed. Why should I waste Robo-cock on someone who won't give it the loving attention it deserves?\"\n\nShe snapped her head up, crying, \"Who told you that? Did he tell you that, the meanie. Mark's always been a meanie to me. Karrie Kare Queen Mistress, tell Master I love Robby-cock. Tell Master I want to kiss Robby-cock and to suck Robby-cock. I want Robby-cock to snuggle my warm, pink pussy 'til I quake and faint. Please tell Master, or I'll die.\"\n\nKaren rested her head on my shoulder\u2014her way of getting comfortable for the upcoming performance\u2014and said, \"Maybe you should just show Master how much you love him.\"\n\nWith that same ravenous light in her eyes that I'd seen in the others' lately, Linda uttered small, animalistic grunts as she tugged at my shorts. I let her struggle a bit by keeping my ass firmly planted to the lounger. When her tugging was the most intense, I lifted my hips. The sudden release caught Linda off guard, as she tumbled backwards off the lounger, off the ottoman and onto the floor, taking my underwear with her.\n\nAs she returned to the lounger, she began to scold me with a drunken giggle, \"Master's such a meanie trickster...\" She stopped in midsentence when she saw my cock.\n\nLinda stared at my groin for a deliciously long time. Breaking out in a fine sweat, she panted rapidly, while continually licking her parched lips\u2014unsure whether she should dive right in, or first make sure it wasn't dangerous. Finally, 'stone cold' Linda, blurted, \"Jesus, it's bigger than Mark's. She stared at it some more, then swallowing, said softly, \"Fucking way bigger than Marks's.\"\n\nKaren said with a laugh, \"Careful Linda, it can sense fear.\" Then she whispered in my ear, \"Remember what I said about this in the bedroom?\"\n\nI joked, \"Remember what I said about hot grannies and dentures? You can be replaced. Besides, where there's a will there's a way. Let's see how much will Linda has.\" \n\nStill flaccid, Linda tentatively, almost cautiously, took a gentle hold of my cock along mid-shaft, and lifted it off my stomach to take a closer look.\n\nEven Karen had gasped when Linda finally removed my underwear. My cock had noticeably grown another inch or so in both length and girth since that Wednesday when we made love.\n\n\"If you keep gawking at it like that,\" Karen said to her, sternly, \"Master will start to believe the rumors about you are true.\"\n\nLinda opened her mouth wide with the intention of swallowing as much of my soft cock as she could. I gave her a helping hand, though, and following my mental direction, she lowered herself down and started tonguing my balls.\n\nKaren gave my arm a little squeeze of recognition of my silent command, then said to Linda, \"Very good dear. Master always likes us to start low and slow.\"\n\n\"Thank you, Queen Mistress.\"\n\n\"And you're doing it so well. Master's cock is already starting to stiffen.\"\n\nLinda uttered one more, 'thank you,' before drawing both my balls into her mouth.\n\nShe tongued on my balls sweetly, gently lapping first one, then the other, then rolling them both off her cheeks as she slathered them with copious amounts of saliva. To further these ends, she would let them fall out of her mouth for a moment, then let several, large spit bombs drop onto them, before sucking them back in again. At the same time, her fingers danced along the underside of my shaft as it lay across my stomach. Her eyes never left my cock, as she greedily watched it slowly stiffen and grow.\n\nOnce it started to lift completely off my body, Linda began taking long, wet, kissing bites as she worked her mouth up my shaft. At the same time, she slowly stroked my shaft with one hand as she continued cupping and kneading my balls with her other hand. She released a couple more spit bombs, one to my balls again, smearing it around with her fingers, and another along my shaft. She watched that one dribble slowly down along my cock for a moment, a smile plastered across her face, before lapping it up with her tongue and going back to her slow, wet, kissing bites.\n\nKaren fanned herself in a pseudo-pretend way, and said to Linda, \"This is making me so hot, baby. You really do like pleasing cock. Mark is such a liar. Isn't he Master?\"\n\n\"A terrible liar.\"\n\nLinda giggled at our compliments, \"Thank you, Master. Is he watching?\"\n\nSo, that's the game she wants to play. This is going to be fun.\n\nAt the moment, Mark had his back turn toward us. Gabby and Candice were up on their knees, side by side. Their asses were in the air and their heads buried deep in the couch. They were moaning wildly as Mark alternated between slam-fucking one pussy, then the other, and then back again. Sadly, Phil watched it all, intently, and with a hard-on near bursting. He seemed happy, though. Soon, two pussies would need cleaning.\n\nTurning back to Linda, I said, \"Not yet sweetheart, but soon.\"\n\nWhen she got me about half-erect, Linda shifted up to my cockhead, and rapidly flicked her tongue all along the bulbous gland where it joined the shaft. Interspersed with her tongue flicking, she'd take slower glides along the head, pursing her lips just enough to cover a part of the head while sucking and licking hard. Once she had the right suction, she'd pull me away quickly, causing a popping sound. Besides giving me wonderfully tingling sensations that ran down, deep into my balls, the technique always made her giggle\u2014'Lolita' was back.\n\nI pushed her a bit with my mind, keeping her focused on her current endeavors lest she change them\u2014I just couldn't get enough of her trip-hammer tongue flick following her cute, little suction pop.\n\nJust as things were moving smoothly, and I was nearing full hardness, Linda stopped for a moment, panting wide-eyed. It was a strange look, almost one of confusion. I guessed that Karen must also be pushing thoughts into her, along with me, and our simultaneous, mental commands were clashing in her mind. After I saw Linda's reaction, I stopped my direction, allowing Karen to have the reins\u2014and her fun\u2014while resigning myself to enjoy her play.\n\nKaren showered her with compliments, \"Oh Linda, I've never seen Master harder or bigger, well done. Now I think it's time you tasted all of him.\"\n\nUnder Karen's direction, Linda dropped another series of spit bombs, each landing on the tip of my cock. With both hands, she spread her natural lubricant all around and down my shaft. Spitting again, she repeated the smearing until my cock noticeably glistened from a thick coating of saliva. Then taking a moment to wet her lips, Linda attempted to slip me into her mouth.\n\nIt was then that Denise came alongside the lounger, \"This looks interesting, mind if I stay and watch?\"\n\nKaren said, excitedly, \"Denise! Where have you been?\"\n\n\"Having oodles of fun in a yummy daisy chain,\" she answered, and slipping in on the other side of me, opposite Karen, \"It was getting so big we had to move to your den.\"\n\n\"Really! I didn't see anyone going into the den.\"\n\n\"It's no wonder,\" she said laughingly, then training her eyes down at Linda, who was inching my cock further into her mouth while slowly stroking my shaft, she observed, \"Preoccupied by something else, I guess.\"\n\n\"Are all the little daisies breaking up then?\" I asked.\n\n\"No, Jack showed up,\" she said with distaste, \"So I left to find you guys.\"\n\n\"I'm sorry. I shouldn't have invited him.\"\n\n\"I understand. It's good politics, so don't be. He can be very generous with those he likes. Besides, I'm going to have to get used to seeing more of him when I meet him and his lawyers. Funny thing is, as we go through the divorce, I'll probably see more of him now than I've seen of him in years at any one time. Gag me.\"\n\nAfter that, all three of us went quiet for a time, settling in to watch Linda.\n\nBy now, Linda had the head and little beyond in her mouth, and that's about as far as she could hope given her position. She continued her slow stroking of my shaft, and adding a slow head bob to go along with it. Small trickles of saliva escaped from the corners of her mouth, becoming welcome lubricant to her warm hands. Lifting her head momentarily to catch a breath, a large river of saliva flowed out, and cascaded down my cock. She worked it around, slathering it generously with that stroking hand, and applying more to my balls with the other. Latching her mouth back onto my cock, I could feel her tongue rolling around lustfully across my cockhead. As my balls tightened in her other hand, I felt her finger shift below my balls to massage my perineum.\n\nOh, I was in heaven now. I knew the ball squeezing and pulling, combined with the perineum rub was all Karen's doing\u2014such a wonderfully devious slut. It wouldn't be long before Linda got the 'idea' in her head to slip that wicked, little finger into my asshole\u2014heaven, indeed.\n\nI was debating whether to let it happen, knowing it would be too difficult to resist coming because of it. I didn't want to come just yet. Fortunately, Denise unwittingly changed the game.\n\n\"You know Will, I wasn't going to say anything at the motel, but I just can't let it go. What in the hell is going on with your cock?\"\n\nBetween the last time we played together, and that night in the motel when the five of us tormented her, it had been almost five weeks since Denise saw my dick. I remember the look she gave when she saw my new size for the first time\u2014priceless.\n\n\"It makes you sweat and wet just looking at it, doesn't it?\"\n\nShe waited for an answer that wouldn't come. Finally, she said, with just a hint of frustration, \"You're not going to tell me, are you? You are a devilish man.\"\n\nI kissed her deeply, tasting another woman's arousal on her lips. There was the subtle hint of jasmine mingled with the arousal\u2014Jackie, of course.\n\n\"I think you've had enough of the Sapphic, for now. It's time I watch you enjoy the phallic, and show Linda what you can do.\"\n\nShe laughed nervously, \"It's been a while, and I've never done it with something this large. Oh well, it should be fun trying.\"\n\nShifting around, she put her head down by my cock.\n\nKaren whispered, \"You snot. Master spoiling my fun like that.\"\n\nI pulled her to me and kissed her deeply in response. Pushing a myriad of erotic images into her, she pressed her lips harder into me while sucking greedily on my tongue. Her arousal climbed rapidly, taking her mind off her own slow torment of me.\n\nI felt Denise's hands join Linda's, as both ran teasing fingers along my shaft. Linda uttered another of her Lolita giggles when she saw my cock twitch and jump at their attention.\n\nDenise said slyly, \"Linda, have you heard Will come yet? He makes the most adorable, little grunt-groan noises, sounding just like a little bear cub snacking on blueberries.\"\n\n\"I don't do that,\" I said, completely surprised by this revelation.\n\n\"Oh, yes you do!\" Karen and Denise said in unison, then laughing at my lack of self-awareness.\n\nOn her first attempt, Denise slid me in a little past where Linda had stopped. She held me there, as she shifted her tongue about and slathering more saliva around my tool. Linda went back to my balls, kissing, licking and mouthing them, but not fully enveloping them with her mouth. Now that Karen put the 'bug' in her head, her finger continued to massage my perineum, although she didn't venture any farther 'south.'\n\nDenise released me for a moment, leaving a nice, slick coating of saliva behind. Linda jumped back on my cock, and resumed her tongue flicking and slow stroking. Denise joined in the tongue flicking for a moment, before slipping me into her warm, wet mouth and descending down my shaft again.\n\nLinda went back to my balls. This time she wrapped her fingers around the top of my sack, forcing my two, small 'plums' tight against my scrotum. There, she began a little mouth dance on each testicle, a little lick, a little suck, and ending with a gentle teeth scrape and finger rub, before repeating the dance on the other 'plum.' Whenever Denise came up for air, Linda was quick to replace Denise's mouth with her own on my cock. This time she tried to mimic what Denise had done by pulling me in further. I felt the sudden flood of her saliva as choking fits took hold of her.\n\nWhen she gave me back to Denise, 'stone cold' Linda asked, \"How can you put Will...Master's monster cock so far in and not choke?\"\n\n\"Let me watch you lick Master, and I'll tell you.\"\n\nEven Denise was calling me Master, now. More of Karen's doing.\n\nDenise held me a bit forward as Linda darted her tongue around my cockhead.\n\nDenise sighed as she watched Linda's quick tongue-lashing of my member, and then said, with a tinge of envy, \"I wish I had such a quick tongue.\" Becoming tutorial in manner, Denise continued, \"You either have to be where I am, or in a spot where you're not bending your neck too far forward. When you're in front of him, you need to pull him toward you a bit. It gives you a better angle. Now, bring your whole head higher so that you're looking directly down on him. That's right, keep flicking that tongue. Now, open wide and lower yourself...that's it...lower. Good girl...oops...\"\n\nLinda was choking again, but this time she got well below her previous mark, and close to where Denise had me.\n\n\"You did good,\" Denise said, consolingly, \"You just need a bit more practice, and a bit more patience. Don't try swallowing him too rapidly or you'll trip the gag reflex. Try again.\"\n\nLinda had me close to a third of the way in with no gagging. I could even feel good suction and no teeth.\n\n\"Excellent! Now slowly slide your head up and down. Go almost all the way up to where you feel the head touching your lips, then flick that quick tongue of yours for a moment. Don't dally too long at the top. You want to go up and down as if it were one, continuous, motion. And when you come down, try and inch him in a little further each time.\"\n\nLinda was certainly getting the hang of it, and even more so. Besides sucking me in near to Denise's mark, she continued to pull on my balls while massaging my perineum\u2014quite the multitasker.\n\n\"Okay Linda, my turn,\" Denise said, cheerfully.\n\nAs Linda pulled off and handed me over to Denise, she took a large gulp of air, and went back down to mouth my balls, again.",
        "Denise went down quickly and pulled me in a little less than halfway. This was about as far as she could go for this round, and with that, she began the deliciously slow head slide she had just taught to Linda; this time, though, running her fingers up and down the underside of my shaft in rhythm with her mouth.\n\nKaren was still influencing Linda\u2014the slutty mistress. Even though I was ramping her arousal ever higher with just a kiss, making her moan around my tongue with delight, she still had the presence of mind to push Linda into new heights of decadence.\n\nLinda didn't stay long tending to my balls. Slowly, ever so slowly she licked her way to my perineum. Once there, she spent a wickedly long time tonguing that sensitive spot as well as the underside of my scrotum. Even though Denise took many breaths and pauses sucking my cock, Linda didn't stray from her appointed task deep in my groin, as she had done before.\n\nHer hands slid along my thighs in a purposeful, teasing manner, and they didn't stop until she reached my buttocks. Her tongue started moving down and down, and ever closer, as I felt her teasing fingers crawl between my buttocks, and ever so gently, pulled them apart, given her hot tongue access. Pushing her mouth fully between my cheeks, she flicked her hot tongue rapidly across my anus.\n\nWith all our anal adventures, this was the first rim job I've ever gotten. Oh, I've given them plenty of times to Karen and the others, making them squeal and squirt with delight, but it was never reciprocated. I think maybe because of my hetero nature, I was never comfortable having it done to me, much like Karen's finger probe done so many months ago, so I never asked for it and they never volunteered. Now, that Karen, via Linda, short-circuited that nature with her quickly darting tongue, and combined with Denise's exquisite cock sucking, I was getting hooked on the technique.\n\nDisengaging from our kiss, Karen saw my initial look of surprise, and asked with a sly smile, \"Is she doing it?\"\n\n\"Yes, you naughty girl.\"\n\nNot saying another word, she kissed me harder this time, nearly sucking my tongue out of my mouth. I felt her arousal ratcheting even higher than before. She was turned on by Linda's rimming of me, as much as I was.\n\nSeeing what Linda was doing, Denise was equally as turned on\u2014or maybe that was still Karen influencing the game\u2014because she began sucking my cock with a speed and intensity I've rarely experienced from her. She lifted herself away from my body a tad, so that she could fully use her arms and hands as leverage, and proceeded to slam her head down on my cock, rapidly pulling me in just before the point where it would cause her to gag, and holding me steady. Then pulling off me at times, to catch her breath and accumulate more saliva, she would jerk my well-lubricated cock violently, while always begging, \"Come on Master, shoot your load all over me. I want you to come all over my face.\"\n\nLinda ramped even higher. She may be lanky, but she was strong. Somehow, she was able to prop my hips up on her elbows, using her forearms as a kind of supporting ramp, thus lifting my ass well off the lounger so that she could really bury her face in my buttocks. With barely any obstruction\u2014like tightly clenched cheeks\u2014to impede her progress, she slid that wicked tongue deep into me. Pressing her face even tighter against me, she worked that tongue all around, moving it in and out, and all done as that cute, little button nose of hers rubbed and nudged the scrotum between my tightening balls.\n\nDenise had propped herself up on her knees and an elbow, giving her even more leverage, and a better angle to force my cock further down her throat. Barely coming up for air, Denise's head, her whole body in fact, was rocking forward and back like she was a large cog or piston, and part of a greater and grander engine.\n\nGod, she loved sucking cock, and she loved sucking mine, most of all.\n\nIt was quite a feat the way she used her whole body to throw herself as far down onto me as she dare, then pulling back with a suction that could lift a bowling ball. Even 'stone cold' Linda took a moment from her rimming to watch and urge Denise on, \"That's it bitch, suck that fucking cock. Suck it! I want to see Master blow his load all over that pretty face.\"\n\nLinda's words inflamed Denise further, as she continually tried to force me further down her throat until her tries ended in gagging fits. Coming off me for more air each time, she always left a thick trail of saliva, heavy strands of which, always draped off her lips and chin onto my cock.\n\nKaren had since turned around and was watching the spectacle in quiet revelry, and having the time of her life as both puppet master and muse.\n\nThey all so much wanted me to come, but I wasn't going to allow it\u2014not yet, anyway.\n\nKissing the back of her neck, I commanded Karen, \"Join them.\"\n\nShe didn't hesitate, and placing her head close to my cock, waiting for Denise to take another breath.\n\nI slowed the tempo of the dance.\n\nTaking turns sucking me, Karen and Denise mimicked each other, pulling me in as far as they could, holding me at that point for a moment while subtly shifting their heads, then slowly pulling back off while applying hard suction before handing me to the one waiting. Each time they pulled me back in, they advanced just a bit further down my shaft, held me in just bit longer, while running teasing fingers and fingernails on that part of my shaft that still remained outside their mouths. Each time one pulled me out, long, thick stands of their saliva remained, suspended between their lips and my cock. The other one, the receiver, before accepting me, licked greedily at the hanging strands, then kissed and licked the excess hanging from the mouth of the giver. They feasted with pure lust, on themselves and me.\n\nFor the moment, Linda had stopped her rimming to watch the two experts suck, although she continued to tease and play with my balls with her hands. When an opening presented itself, she'd dart in and take long licks and short sucks around the base on my shaft before either of my two cock sluts began their descent of my pole, anew.\n\n\"You're both sucking my cock well,\" I encouraged, \"Too bad that I'm too big for you now. So much of my cock remains outside your loving attentions.\"\n\nA challenge issued, and accepted. They pushed themselves to the limit trying to pull me in further. Still, they could only manage me a little more than halfway before the gagging would start.\n\nI slid a thumb into each of their pussies\u2014so warm and oh, so wet. Their little buttons where hard as pebbles, slick as wet clay, and extended well outside their protective hoods\u2014easy marks for an experienced finger. I barely touched them with a fingertip while using a gentle, slow circling motion. It was such a subtle tease as I gently rubbed the inside of their pussies with a thumb, yet their arousal quickly climbed toward the pinnacle.\n\n\"It's three against one my cock slaves. Who will come first?\"\n\nAnother challenge issued, and accepted.\n\nThe tempo shifted again, and the ladies sucked and prodded me with mouth and tongue in earnest. Linda went back down to my nether regions, flicking her tongue across my perineum, or batting it wildly across my balls, while Karen and Denise were sucking on my cock feverishly by taking a few quick sucks each, before passing me off to the other.\n\nI thought it was cheating that they concentrated their efforts exclusively at the head rather than attend to the whole thing, but I let it go for now.\n\nI rubbed them a little faster and a little harder\u2014cunt and clit\u2014pushing them even quicker to climax. At the same time, I tormented them with the rules, \"You have to suck me like you were, ladies. Take me all the way in, and no hands, Denise!\"\n\nThey both uttered a frustrated laugh, but did as commanded. Each took me into their mouths as deep and as fast as possible. Linda was back to rimming me, first with that flicking, quick tongue across my asshole, followed by a more thoughtful, deeper tongue fuck, inside me.\n\nIt was then that I saw Mark watching the four of us. His face tinted an ugly shade of green. Poor guy, I could only guess what he thought. Not only was my new size confusing him, he realized he wasn't king long dong, cock-of-the-walk, any longer\u2014not by, at least, a couple or three inches. The cherry on top of the jealousy sundae was seeing his ex-wife rimming me like a thousand dollar whore, and vocalizing her pleasure in doing so.\n\nI took pity on him, and said while pushing soothing thoughts into his ego, \"Why the long face, Mark? There's nothing like three bitches in heat who love sucking cock. You ought to try it.\"\n\nHe quickly scanned the room, calling to the first three women who caught his eye, \"Darcy, Lisa, and you, big tits with the red hair, come over here!\"\n\nThey all came running, leaving their current partners behind. How could they not?\n\nOn hearing my little conversation with her ex, Linda took a break from rimming me and winked, knowingly. I winked back, making her smile.\n\nSeeing that Linda was slacking off, Karen barked at her, \"Linda, you little bitch, keep rimming Master. Quick!\"\n\n\"Sorry Kare Kare...I mean Queen Mistress,\" 'Lolita' Linda squeaked, before returning to her duties.\n\nKaren and Denise were both getting tired, and because of that, I felt a little drawdown in the level of their arousal. I helped them out by pumping my cock into them, matching their quick head slides, first one for a time, then the other. Soon, they didn't even bother bobbing their heads, allowing me to thrust at will into their opened mouths, not too deep, just enough to push my cockhead barely into their throats.\n\nLinda gave up rimming because of my thrusts. Instead, she acted as monitor and coach, first guiding my cock into one waiting mouth, then shifting it over to the other waiting mouth, as I continued to pump indiscriminately into each.\n\nReleased from the strain of continual head bobbing, coupled with my rubbing fingers, their arousal climbed again, and rapidly.\n\n'Stone cold' Linda was back again, unleashing a verbal barrage down on the two as she continued to shove my cock into one mouth, then the other, \"Just look at that fat, monster cock fucking your hungry, slutty mouths. You horny bitches have all the luck, having a fat, dripping cock plunging into your warm, wet holes. Just watching it is going to make me come. Fuck those pretty faces, Master. Fuck 'em good! Yeah!\" Her last, loud 'yeah,' was almost musical in tone, something one would hear at a ball game after a winning touchdown.\n\nLinda's slutty talk transformed them all. I could feel it growing inside the two closest to me. They were no longer women with a need to love and be loved back with equal intensity. Instead, they had become mere tools to be used any way I want. Now, their whole purpose was to enact the greatest amount of pleasure they could to me. Moreover, they wanted it that way, they needed it that way, and that desire made their pussies boil. They clamped their lips around my cock harder as I thrust into them faster.\n\nI shifted my hand around, shoving all four of my fingers, down to the first knuckles, hard into their cunts, just as Karen had done to Cecilia. They screamed with pleasure around my cock as I pumped my hands as pistons. Adding a hard thumb to their hardened clits was just icing on the cake.\n\nDenise was the first to let go. With my cock still in her mouth, she lifted her ass high in the air while uttering muted screams the whole way up. I followed her, keeping my hand pumping inside her. Each time I drew my hand back in that pumping motion a warm fluid gushed out and ran down my arm.\n\nNeither Karen nor Linda bothered with my cock anymore, seeing that it remained lodged in Denise's serene face. Karen continued screaming as she pushed back into my thrusting hand. One squirt of fluid after another flowed around my hand, and still she kept on screaming. It wasn't until I did that technique she loves so well\u2014a moistened finger to her pretty, perky, pink asshole\u2014did the screaming stop, replaced by violent spasms of her body.\n\nFeeling their bodies relax into mine, I squeezed and patting their behinds, saying, \"God, how I love making you come.\"\n\nMomentarily drained of strength, they only responded with an exhausted laugh and a long, thoughtful kiss of my thigh.\n\nLinda just stared at me with an openmouthed grin. I stared back with a smile at first, then said to her as I playfully flexed my cock, \"That was just with my fingers. Care to try it with this?\"\n\n'Stone cold' Linda nodded her head slowly, but before we could start the game anew, we heard voices coming from the den.\n\nI guess the daisy chain has finally broken.\n\nI heard Jack ask, laughingly, and to no one in particular, \"What's all the yelling about in...,\" stopping in midsentence when he saw my extraordinary accoutrement, he exclaimed, \"Jesus Christ, Will, what the fuck happened to your dick?!\"\n\nHis loud exclamation got everyone's attention, and everyone looking. A still silence filled the room, as they all stared at the four of us on the lounger, gawking mightily at the object of Jack's disbelief.\n\nThe last time I saw so many slack-jawed idiots in one place, I was at the DMV.\n\nPam was the first to break the silence, saying to Jack, \"I told you he was built like a horse.\"\n\n\"Horse nothing, he's a fucking bull,\" Gabby blurted, as she tried to push Linda out of the way to get into the action.\n\n\"Back off, Gabby!\" Karen and 'stone cold' Linda shouted in unison. Linda added an extra shove to Gabby with her shoulder, while saying, \"Go sit on the couch and wait your turn like a good bitch. I'm sure Phil needs to clean your pussy some more.\"\n\nJack asked again, \"What the fuck, Will?\"\n\n\"Yeah, what the fuck, Will?\" Carl repeated.\n\nSeeing that there was no way around an explanation, I said, \"Look, a few months ago I had a problem with my back. I went to my doctor, and he gave me a steroid shot supposedly to relieve the inflammation. This was the result.\"\n\n\"You've got to be kidding,\" Jack said, incredulously.\n\n\"Nope. It started growing right after the shot. Doctors can't explain it, and I sure don't want them to cure it.\"\n\nI felt Karen squeeze my thigh at my deception.\n\nNo one said anything for a while, as they thought about my story. Finally, Darcy piped in, \"What's your doctor's name, Will?\"\n\n\"Yeah Will, and does he take any referrals?\" Sara quickly asked.\n\nI swear, the next time a woman tells me that size really doesn't matter to them, I'm going to laugh in her face.\n\nI said with a smile, \"Could we all just get back to the fun and games?\"\n\nAs the others started forming into new groups, Denise descended back onto my cock, while Linda went back to my balls. Karen kissed Denise's cheek before sliding beneath her friend's head, and commenced tonguing and mouthing the lower parts of my shaft. All a prelude for what's to come. When suddenly...\n\n\"Goddamn it, Jack. Get that fucking camera out of my fucking face!\"\n\n\"Come on Denise. This will be fun. Try to choke that monster beef bayonet of Will's down your throat, again. It could be part of a great bloopers highlight reel I make of the evening\"\n\n\"Do you think you can use these pictures against me in the divorce, is that it? If so, I've got tons of my own, with you and your assorted bimbos as stars.\"\n\n\"Gees Louise, Denise, dial down on the paranoia. I know all about your little stash of porn, and all about the PI's you've hired over the years to take them. The way I see it, you don't have any more on me than I have on you, so relax. Right now, I'm just taking keepsakes. I'll give everyone here a copy. We can play it back and remember all the fun we had when we get too old to fuck.\"\n\nDenise wasn't listening. I could tell she was close to ripping the camera out of his hand and shoving it up his ass.\n\nStepping in, I said quietly, yet sternly, \"Now's not the time, Jack.\"\n\nJack got the hint, shrugged his shoulders, and went over to film Sara going down on Candice, while Candice went down on Rashid and Bob.\n\nKaren slid back up, and whispered earnestly in my ear, \"Is there anything you can do about that? As much as I find it a turn-on having a movie made of me sucking your cock, I don't want ten million perverts seeing me star in some pirated 'Screwtube' video. Tell him to stop.\"\n\n\"It is kind of kinky, isn't it? And, everyone seems to be having fun slutting it up for the camera. That's why I didn't put a stop to it, outright.\" She stared comically wide-eyed at me in disbelief. It made me laugh. She always made me laugh. \"Look, let Jack have his fun. Let him shoot all the movies he wants. I have a strong feeling that by tomorrow there'll be nothing but a blank disk in his camera.\" I ended my reassurance with a mischievous wink.\n\nShe asked with astonishment, \"You can do that, too? With just a thought?\"\n\nI nodded my head.\n\nShe laughed at the joke that was being played on Jack. All those juicy movies he'll work so hard to get, all for nothing\u2014poor guy. Then an idea hit her. With a mischievous twinkle in her eye, she asked, excitedly, \"Ooh, before you erase it, get us a copy of it first, if you can. Can you?\"\n\n\"I don't know, we'll see.\"\n\n\"Oh, this is going to be so much fun!\" she said, clapping her hands like an eight year old on Christmas morning, \"Hey, let's get him back over here. He can film you giving the three of us a facial.\"\n\n\"You are such a slutty mistress Queen, but I've other plans for now. I think it's time we pull Linda fully into the harem, and make her one of our full-fledged cock slaves.\"\n\nThe most delectable, devilish smirk past across her face. Taking her by the hand, I sat on the ottoman right in front of Linda, who was still kneeling on the floor. Karen ran her fingers through Linda's hair before sitting on my thigh with one leg draped across my lap, behind my cock. It was the same position that we had assumed with Denise after their moonlight walk through the backyard.\n\nDenise came along on the other side of me, and sizing up the situation, said musically, like in a childhood rhyme, \"I know what's going to happen. Pity there's no blindfold handy. Should I get one?\"\n\nI kissed her sweetly for her thoughtfulness, \"I don't think that's important. Care to join us? I've another thigh you can sit on.\"\n\n\"No thanks, it'll be too crowded. Besides, I just want to watch for a while.\"\n\nLinda was looking up at Karen. The 'Lolita' persona was back, as she asked, \"Kare Kare Queen Mistress, why are you staring at me that way?\"\n\nKaren laughed brightly before answering, \"I'm sorry Linda. I was just thinking that if you only knew what's going to happen now, you would have ditched Mark and the kids long ago, just so you could keep fucking Master. However, first things first, you told me earlier that you like eating pussy. I want you to show me.\"\n\nKaren leaned back slightly, which naturally pushed her hips forward. Her clit and inner labia stood out well away from her smooth, hairless groin. Linda brought her tongue to bear at the easy target.\n\n\"Gently, gently sweetheart, just use the tip of your tongue. Just a flick of that quick tongue of yours is all I want.\"\n\nLinda obeyed, barely touching Karen's exposed clit with her tongue, she flicked at it rapidly.\n\n\"Lower now, sweetheart,\" Karen commanded, her breath coming as shallow pants, \"Take that quick tongue down slowly.\"\n\nLinda lowered herself, millimeter by millimeter, and continued her rapid tongue flicks across Karen's swollen labia. When she got halfway between Karen's clit and her opening, Linda put her hands up on Karen's thighs and slid them inward until they formed a ring outlining Karen's pussy. She pulled her hands apart gently, spreading Karen's pussy wide so that neither labium touched the other. Putting that wicked, flicking tongue in the middle of the groove, she continued to take it lower. When Linda's tongue reached her opening, I watched as Karen's eyes closed in ecstasy.",
        "Linda spent a deliciously long time flicking and darting her tongue in and around Karen's cunt hole. Karen was panting rapidly now, as she moaned another command, \"Lower.\"\n\nNothing else needed to be said. Linda understood perfectly.\n\nWith the same, slow, millimeter-by-millimeter crawl as before, Linda slid her flicking tongue away from Karen's pussy, down across her perineum, and eventually finding her anus.\n\nThe second Linda's tongue touched her tight ring, Karen gasped abruptly. Linda tried to push in, but Karen stopped her, \"No, just as you are. Just flick it across.\"\n\nLinda continued to flick her tongue across Karen's asshole until Karen's leg began to shake.\n\n\"Put your finger in!\" Karen gasped loudly, with the 'in' pronounced as a high-pitched squeal. Linda was way ahead of her, and had already wetted a finger and slipped it deep into Karen's ass just as Karen finished her sentence.\n\nLinda began her ascent back up the groove, pausing for a while to lick with abandon around Karen's cunt hole again. She pushed her thumb into Karen's pussy for good measure, before continuing her climb. Linda flicked her tongue some more at Karen's clit while massaging a firm thumb and finger around their respective orifices, and then pounced. Pulling Karen's clit fully into her mouth, Linda sucked on it hard while forcefully working her tongue all around that hardened pebble.\n\nKaren's eyes went wide, and clamping her hands on either side of Linda's head, screamed, \"Oh you naughty bitch!\"\n\nKaren's body was in spasm, as a warm spray flooded down Linda's chest. As her climax ebbed, she continued to sit motionless for a while, hands still clamped on Linda's head, panting and oblivious to everything around her.\n\n\"Maybe I will take that seat on your other thigh,\" Denise said, only half-jokingly.\n\n'Stone cold' Linda ran a teasing finger along Karen's labia, making her twitch some more in delight. Then she said slowly, while kissing various spots around Karen's wet groin, \"I never thought...I'd love...eating pussy...but I do...and yours is so sweet, my Queen...the sweetest I've had so far.\"\n\nShe shifted over to me, and began the same, deliberate kissing of my cock, all while saying, \"And I wish...I could continue eating that sweet pussy, Kare Kare...but other promises were made.\"\n\nShe looked up into my eyes as she pulled me into her mouth.\n\nThis wasn't the same person who tentatively sucked on my cock before, and not because of her changing persona. It was as if she'd gotten comfortable with it all; comfortable with her different manifestations, with my cock and its size, with everything. She was masterful with her mouth. Deviating well away from what Denise had instructed, she struck out on her own path, sliding my cock in and out of her while using her own rhythm. It was the real Linda this time, finding her own voice. 'Lolita' and 'stone cold' were still present, but subordinate to her true self, having become masks for Linda to wear in whatever situation suited her. For now, she wore the 'stone cold' mask.\n\nKaren just watched. She knew the game had changed. As such, she waited patiently for the right moment when she could enter back into the fray, and turn her friend into a cock slut just like her. I don't even think she used any mind control, letting Linda run on her own; although, every once in a while she'd press my cock forward with her leg, forcing my massive tool deeper into Linda's mouth or more firmly against her youthful looking face.\n\nThe flicking tongue was gone for now, that was Lolita's technique, stone cold took a more direct, yet thoughtful, tack, by wrapping her lips as best she could around my tool while sliding her mouth along my shaft, savoring every inch of my size and taste. \n\nI watched those lips of hers\u2014partly wrapped around my cock like it was an ear of corn\u2014apply such a firm, yet soft and subtle pressure to me. It was such an odd contrast to their hardness of only moments ago, when they had nothing but harsh words for Raven. Her hot tongue, shielded from my view within that subtle mouth, braced against me, providing the necessary wetness to those sliding, subtle lips, and always leaving a slick trail as she moved first up one side of my shaft then down the other. The eroticism of watching those firm lips heightened when she pulled me into her mouth.\n\nAs she pulled me further in, further than the first time she tried it, her lips were naturally pushed out and away from her teeth, looking almost like it was a sheath, melding into us, something part Linda and part Will, separate yet the same.\n\nI touched her nose lovingly as she reached her limit of accepting me in her mouth. Her nose and eyes crinkled up into a smile, but her lips, forming a short tube-like envelope fitting snuggly about my shaft, always stayed in contact with me. Even as she bobbed her head in short strokes her lips never lost full, sucking contact with me; except at one corner, where a small bead of saliva escaped those tightened lips to slowly dribble down my shaft.\n\nI wasn't the only one watching Linda with intensity, Karen was still waiting for the opportunity to rejoin the dance and was staring down at her with a fire in her eyes. Her opportunity came when she spotted that small drop of spit trickling down my shaft. Lowering her head, she snagged it with her tongue just before it disappeared into my public hair. She continued to lovingly kiss and lick my shaft as she moved up toward Linda. Karen sweetly kissed Linda at that unsecured corner of her mouth, then said to her in a near whisper, \"Kiss me.\"\n\nWhen Linda lifted her head to comply, a large pool of saliva cascaded down my shaft, and as they kissed with their heads hovering just above my tool, Karen blithely took the excess saliva and slathered it all about my shaft and cockhead.\n\n\"Suck, cock slave,\" Karen rasped.\n\nAs Linda pulled my cock back into her mouth, Karen parked her pursed lips against my shaft, just below Linda's tightening ones. Then, she commanded Linda, \"Pull him in until you touch my lips, cock slave.\"\n\nLinda easily did as commanded, and was rewarded with another kiss on the corner of her mouth.\n\nDenise saw instantly what Karen was doing, and she too, placed her lips against my shaft, but a little bit below where Karen had hers, and commanded Linda in the same firm tone as Karen, \"Now pull Master in until you touch my lips, cock slave.\"\n\nKaren and Denise continued this way, both positioned on either side of my shaft, they would nudge themselves a little lower each time Linda met their lips to hers; thus, causing Linda to slowly inch my cock deeper into her mouth, and on into her throat.\n\nAt first, there was little effort on Linda's part meeting their lips, but eventually Karen and Denise got to a point down my shaft that was too far for Linda to achieve without extreme effort.\n\nKaren and Denise remained at that point as Linda struggled to inch me in further. She came off me quickly as she gagged, causing a river of spit to flow out her open mouth. Thick and heavy strands of saliva dripped from her chin as she panted for air. Once she got her breath back, Linda went down on me again.\n\nAgain, she couldn't quite meet their lips. She pushed down hard, as best she could, but still the point eluded her, so off my cock she snapped, gagging and panting.\n\nDenise and Karen began taunting her, \"Aw, is cock slave's mouth too small for Master's cock? What's a poor little cock slave to do?\"\n\nThere was an angry look in Linda's eyes as she stared down at Karen and Denise. With their mouths snuggled against my shaft and their lips each curling into haughty smiles, they continued to taunt. Linda remained defiant and silent, however, as she descended on me for another try.\n\nLinda was really trying to force me in now. It seemed to be a question of honor for her. Although gagging and coughing, and sending more saliva down my shaft, she stayed on me, pushing. Tears flowed from her eyes, either from trying to suppress the gagging reflex or from frustration, and as the tears flowed, so did her mascara. Soon, ugly, black smears began to mingle with the tears, snot and spit all across her cheeks, lips and chin. She was a sight.\n\nThough she gave a monumental effort, Karen and Denise continued to taunt, mercilessly. Karen, specifically, asked in a goading manner, \"I wonder what should happen if cock slave can't touch our lips.\"\n\n\"Then cock slave gets no more cock,\" answered Denise with a giggle.\n\nOn hearing that, Linda snapped back off my cock, exclaiming, \"No!\" Tears and saliva, sullied black, flowed off her face, unabated. A particularly thick and heavy strand drooped low between my tool and her lips, as she pleaded to the two women with her watering eyes not even to say such things in jest.\n\nKaren just looked back at her, unsympathetically, asking rhetorically, \"Really Linda, what goods a cock slave who can't suck cock?\"\n\nOn hearing Linda's loud exclamation, a small crowd of some of the other guests had gathered to watch the spectacle. One of them was Jack, who was recording Karen and Denise's torment of Linda for prosperity. Others included Cecilia and Jackie, who threw in their own taunts at Linda, \"Come on cock slave, suck that cock like a good cock sucking bitch. I'd of had Will more than half way in by now. \"\n\nJackie and Cecilia were awful liars\u2014bless their hearts.\n\nA renewed fire of determination smoldered in Linda' eyes as she got off her knees. Standing up, she bent over full at the waist while keeping her legs nearly straight. With her head hanging directly above my member, she slowly descended again.\n\nThis time she got a little closer to Karen and Denise's lips, but she was still unable to touch them. The gagging and tears started anew as she came off me for more air and relief from choking.\n\nAs she gathered herself for the next onslaught, a loud crack reverberated off the walls, and Linda cried out in pain. Mark had come up behind her, and spanked her hard. Linda didn't know who had hit her until he spanked her again, and said, \"You heard them bitch, they want to see you suck that cock. It's about time you learned.\"\n\nLinda turned her head around to look at him, and yelled, \"You prick!\"\n\nShe was cut off by another hard spank, as Mark yelled back, \"Suck it, bitch!\"\n\nThe onlookers began chanting, \"Cock slave,\" or \"Suck it,\" in equal measures as if they were viewing a sporting event.\n\nGoaded by the chanting, Linda descended onto my cock for one last try. Mark continued to spank her as she inched me in further. In a way, Mark's spanking was helping her near her goal, either mentally helping as a punishing devise to spur her efforts, or helping physically by pushing her further down my shaft with each blow delivered.\n\nSadly, she was just above Karen's lips, and everyone thought she would do it, when that gagging reflex took hold. She stayed at that point, gagging, couching and crying, but she couldn't push me in that last, agonizing fraction of an inch.\n\nShe was about to give it up, when Karen, taking some form of mercy on her, put her hand on the back of Linda's head and pulled her down. Linda's eyes went wide as more tears flowed out from distress, but through continued gagging fits, Linda and Karen's lips touched.\n\nThe crowd erupted in cheers.\n\nKaren released her head a bit so that Linda could ascend up to a more comfortable spot. Karen had kept her lips at the same spot along my shaft, and said, \"Almost three-quarters of the way in, I didn't think you could do it. Ready? Let's do it again.\"\n\nKaren pulled her down. I slid in easier this time, with only minimal gagging from Linda. Again, their lips touched, and again there were more cheers. Karen and Linda did this three more times before Karen let her go.\n\nOnce released, Linda fell to her knees, removing me from her mouth. A triumphant smile donned her face as she continued to pant heavily. Leaning over, I said, \"You did good baby,\" before kissing her deeply.\n\nLinda smirked, and asked, \"Am I Master's cock slave now?\"\n\n\"Not quite. You have to be rewarded first.\"\n\nI stroked myself as a prelude for what's to come. Linda misunderstood my intentions, and opened her mouth thinking I was going to jerk myself into her. I chucked, while saying, \"You really are a cock slave. You want my cum?\"\n\nDesire flamed in her eyes, as she breathlessly answered, \"Yes, Sir.\"\n\n\"That's so wonderful of you, but before that, I want to feel my cock in your pussy. Turn around, jump on, and slip me in like a good little cock slave.\"\n\nGiggling like a little schoolgirl, she turned around so that she was facing the couch and straddled my legs. Her ass was still cherry red and warm to the touch from Mark' spanking, as she leaned slightly into my body.\n\nKaren, the good mistress Queen, held my cock at the base, keeping it steady. She teased her a bit, running my fat cockhead between Linda's labia, getting it slick with her juices, and making Linda's body tremble with anticipation.\n\n\"Alright, cock slave,\" Karen said, \"Time for cock.\"\n\nLinda lowered herself onto me.\n\nAs I entered her, Linda sharply sucked in air before emitting a loud moan of delight. She inched me in carefully, but she had no trouble sitting flush against my thighs with my cock fully inside of her.\n\n\"I'm going to make you work a little bit more, sweetheart. I want to watch you fuck me on your own.\"\n\nLinda moved her pelvis in somewhat of a shifty, circling motion. Her movements were subtle, sensual, as I barely slid back and forth inside of her. Yet, even with her small pelvic shifts, I could feel her arousal screaming toward climax.\n\nShe gasped loudly each time I slid the full way inside, tapping her uterus, and moaned incessantly, low and guttural, at the euphoria mounting quickly within her.\n\nTouching her mons, I had to tamp her arousal down or else she would come too quickly. She gasped loudly again, as I spread the euphoric feeling deeply within, and throughout, her groin.\n\nShe was shifting faster now, trying to get the bliss back up to its previous level, but I held her back while intensifying the feeling.\n\n\"Oh god,\" she emitted as a soft whisper, as I caused the ecstasy to flood through her, unabated, while still keeping her arousal well below the tipping point.\n\nKaren and Denise must have seen the rapture unfold across Linda's face, as they moaned and sighed heavily themselves, knowing what that look meant and what she must be feeling. They were both flanking her as they began kissing her cheeks and the corners of her mouth\u2014a sweet embrace from two cock slaves to another. Linda returned their kisses, turning her head to push her tongue deep into one, then the other. Still trying to push the arousal up, Linda wrapped an arm around each of them, and gaining a measure of leverage. Now, supported as she was, Linda added a little pelvic bounce to the slow circular motions.\n\nI took my mental dampener off a bit, allowing nature to inch her arousal toward its peak She threw her head back and went wide-eyed as the mounting euphoria ramped new and ever higher.\n\nKaren and Denise must each be pinching Linda's nipples, as she arched her back, and muttered, \"Harder,\" before kissing each in turn, again.\n\nKaren added verbal taunts to her teasing fingers, asking, \"You love Master's cock, don't you.\"\n\n\"Oh yes, Kare Kare Queen Mistress,\" Linda softly moaned.\n\n\"Are you Master's cock slave, now.\"\n\n\"Oh yes, Queen Mistress,\" she answered, her words coming out in staccato voice.\n\n\"What will you do for me?\"\n\n\"Anything, Queen Mistress.\"\n\n\"Kiss me.\"\n\nKaren pushed her tongue deep into her mouth has Linda sucked on it roughly. I took this moment to lean back onto my elbows and add my own thrusts to Linda's bouncing, while increasing her climb toward climax.\n\nLinda immediately unleashed a guttural series of expletives into Karen's mouth as the sudden rise in euphoria took her by surprise.\n\nKaren slapped her ass hard, while saying, \"Naughty little cock slave, yelling into her Mistress's mouth with such nasty language.\"\n\nLinda screamed, \"Harder!\"\n\nKaren complied, and this time her hand left a distinct, bright red imprint on Linda's left buttock.\n\n\"Fuck! Harder!\" she screamed again\n\nThis time, both Karen and Denise spanked a cheek.\n\n\"Oh fuck, oh fuck, oh fuck,\" Linda screamed, her words trailing off into a nonsensical string of nonsensical babble.\n\nI let Karen and Denise continue their spanking, and for each blow delivered, I felt Linda's arousal ratchet up until she was just below the pinnacle of climax. Grabbing her hips to keep her still, I began thrusting hard, up into her, and kept thrusting until she was at the point of no return.\n\nLinda was screaming, repeatedly, \"I'm going to come!\" However, like I had done to Karen that time after the moonlit walk, I kept her from release.\n\nLinda was just shrieking now, as I continued to pound into her, keeping her in sexual torment as her arousal boiled continuously well past the point of climax.\n\nI could feel Karen's hand vigorously massaging Linda's clit, while Denise sucked hard on her breasts.\n\n\"Come, cock slave, come for Mistress,\" Karen almost yelled, trying to be heard above Linda's deafening screams.\n\nStill keeping her above climax, I continued my hard thrusting, Karen continued to flick wildly at Linda's clit, Denise kept biting hard at Linda's nipples, and Linda continued to shriek in wild and wide-eyed, sexual torment.\n\nWhen I felt she was about to lose consciousness, I sat up and wrapped my arms around her waist and held her tight against me. Thrusting hard into her one last time, I released her into climax.\n\nHer body shook violently in my embrace. Her head flailed about to the continual waves of bliss and euphoria, and almost slammed into my nose in the bargain. I clamped a hand to her forehead, holding her steady and ensuring she wouldn't knock me unconscious.\n\nWith my lips close to her ear, I told her, \"Damn, you are beautiful when you come.\"\n\nShe smiled between the shrieking, and pronounced loudly, \"Oh my fu...god, I never...ought it could...like this!\"\n\nI could feel her pussy contract in spasm hard around my cock as one pulse after another of her ejaculate flowed around and past me. I continued to slowly pump my cock through the contractions, and through her forceful pulses of ejaculate.\n\nToward the end of her climax, I could hear her softly saying, almost under her breath, \"I am a cock slave. I am a cock slave,\" over and over until I felt her body relax against me.\n\nKaren and Denise took her from my arms and laid her on the floor. There, her body continued to vibrate as the last of her orgasm slowly ebb away, and she continued to softly mouth, \"I'm a cock slave,\" until she curled up into a ball.\n\nKaren kissed her cheek, and said, \"Yes you are, the same as me, and we both love it.\" She kissed her cheek again before taking her place back by my side.\n\nWhile Linda was screaming she was a cock slave, everyone had stopped their own sex play to watch the spectacle. Now that Linda had quieted, they continued to silently stare at Karen, Denise and I, sitting together on the lounger.\n\nMark looked both green with envy and confused, as he stared down at his ex-wife's quivering form. I knew the meaning of that look. He couldn't understand how in all their years of marriage, he could never get that intensity of sexual excitement from her, and was wondering what he had been doing wrong, and what I had done right.\n\nIt takes more than a big dick, moron!\n\nCandice was the first to break the silence, as she blurted, \"I want to be fucking next.\"\n\nShe was quickly followed by Gabby, who voiced her ire that Candice would even think of cutting in line. \"The fuck you are, Miss Candy Ass,\" Gabby barked, \"I'm next. You can wait your turn like a good bitch, just like I had to.\""
    ],
    "authorname": "dresbach",
    "tags": [
        "revenge"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/beetlesmiths-ch-19"
}