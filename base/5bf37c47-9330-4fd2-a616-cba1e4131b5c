{
    "title": "To Serve & Protect: Concrete Angel",
    "pages": [
        "(The title of this story is borrowed from Martina McBride's heart-breaking song of the same title. There is no sex in this story, only sadness. Not even Pat and Mike can save everyone. And even the very toughest person can reach the end of her rope.)\n\nThe siren wailed its long call, rising and falling. Sergeant Pat Gibson reached down and flipped the switch to \"yelp\" as she slowed for a red light. The car's dash-mounted blue light splashed its rays across the other cars as they inched out of the way or stopped.\n\nThree minutes later she pulled up to a non-descript battered house in a slightly run-down area of the city. Blue and red lights sparkled all over the lawn. Two marked units, a car that could only belong to a detective and an ambulance were pulled into the yard. Pat stiffened as she climbed out of her car and saw the black vehicle marked \"Medical Examiner\". That meant it was bad.\n\nIt got worse. When she ducked under the yellow tape around the doorway she saw the ME and squatted down beside him. Her heart sank as she saw the small form under the blanket.\n\nHer friend looked at her and touched her hand. \"Its really bad, Pat. Brace yourself.\"\n\nPat lifted the edge of the blanket. The little girl under it couldn't have been more than 10 or 11. Her face was elven like, but pinched because of inadequate nutrition. Pat swallowed hard, her hand momentarily brushing her own midsection where she was just showing.\n\nShe rose unsteadily and went to talk to the detective standing with a gaunt white male. At close range the reek of alcohol was almost overpowering.\n\n\"Hello Sam,\" Pat nodded to the detective.\n\n\"Hi Pat,\" the young black detective responded. \"This is Mr. Dee McCrae. He tells me that his daughter Sarah slipped and fell over a chair. He tells me she's quite clumsy and often falls. He didn't realize how serious it was for sometime. He thought she was trying to act up.\" The officer turned to the man, struggling to keep the distaste he obviously felt out of his demeanor. \"Is that correct, Mr. McCrae?\"\n\n\"Yeah,\" the slurred words came out. \"She's always falling. I didn't know nothin' was wrong.\"\n\nPat looked Sam in the eyes. The detective shook his head, indicating he knew the whole story was crap. She turned to the ME, \"Doctor?\" she asked formally.\n\n\"No,\" he flatly replied. \"These injuries were caused by a beating. There are bruised impressions of multiple handprints on her body. Furthermore, its obvious that some of these injuries are old untreated ones, possibly even badly healed broken bones. I have no hesitation in pronouncing this death suspicious and a possible homicide.\" \n\nPat nodded and reached under her jacket. Pulling her handcuffs free she walked towards McCrae.\n\n\"Dee McCrae, at this time I am placing you under arrest. Turn around and place one hand on your head.\"\n\n\"Oh no you don't,\" the still half-drunken man replied. \"Ain't no woman cop taking me to jail, especially over that little...\" His voice trailed off.\n\nPat's normally caring green eyes had turned to ice, her face to stone. In a voice barely above a whisper, but as hard and as determined as steel, she said, \"Oh please, yes. PLEASE resist.\"\n\nDee McCrae was 6 inches taller and 100 pounds heavier than the woman in front of him but the look in her eyes quailed his protests. Without any need of assistance from the uniformed officers, Pat cuffed him and marched him to the nearest black and white.\n\n\"Watch your head,\" she instructed mechanically as she put him in the back seat and closed the door. She watched the car drive off and turned back to the crime scene. She swore to herself that she would dot every 'I' and cross every 'T'. That son-of-a-bitch wasn't getting away with this.\n\n\"Anything from the neighbors?\" she asked Sam and the uniform officers present.\n\n\"Nothing. No one saw anything, no one heard anything. The complaint was anonymous.\"\n\n\"Its not going to be after I get done,\" Pat vowed. She scooped up some notebooks and flipped through them. \"Sam, get us a search warrant. I want to look through these. Apparently this one is a journal of some kind. It might prove useful.\"\n\nTwo months after that night Dee McCrae had been indicted for willful murder. Lieutenant Mike Gibson was discussing the case with their closest friend and Pat's former boss, Lieutenant Linda Shannon.\n\n\"What do you think? Will he plead it out?\" she asked.\n\n\"I think he will. The DA has announced plans to seek the death penalty and McCrae is terrified of the thought of dying.\" Mike grinned mirthlessly. \"Of course after a few years in prison he'll wish he had taken the gurney and the hot shot.\" Linda nodded. They both knew what child killers faced in prison. The average mob hit man or bank robber made life a living hell for them. One imprisoned drug dealer of their acquaintance, upon being asked about the brutal yard beating of a convicted molester had only replied \"Fuck him, he got what he deserved.\"\n\nMike leaned forward. \"Linda, I need to talk to you about Pat.\"\n\n\"I know Mike.\" She sighed. \"It seemed such a good idea to assign a dedicated and caring woman detective to investigate abuse cases. And since she's pregnant, its a safe place to utilize her investigative skills. After all, she's never first on scene. The uniforms and the precinct detectives are always first. She's as good as we knew she would be. Her case closure rate is astounding, not only convictions but she's decisively cleared several innocent people. But...\" she raised one eyebrow and looked at Mike.\n\n\n\"But she's about to go over the edge,\" Mike said. \"This case may have pushed her to the limit. We learned it in the Corps. Even the toughest Marine can reach the point were one more death is more than you can handle. She's driving herself too hard. She can't let go of it. She won't cross the line, but if she has to be on the job 24/7 until she can nail that bastard's coffin lid down, she will. Its not now that I'm worried about. She's working too hard but she knows she has another life to take care of and is acting accordingly. Its after that worries me the most.\"\n\n\"I agree,\" Linda nodded. \"I'm going to recommend that one detective in each precinct be trained to handle these cases. Perhaps Pat might be available as a back up or as a specialist, but asking one officer to deal with every case like this is too much. Even for someone as strong as your wife.\"\n\nThe evidence against McCrae became overwhelming. Pat had coldly canvassed the neighbors again and again until sheer persistence made them admit they had seen, and ignored, what was going on at the McCrae's. She brushed aside their excuses. \"It wasn't any of our business.\" \"I didn't want to get involved.\" Added to the physical evidence at the scene and the mute testimony of the damage inflicted on the child, the testimonies sealed the case. The court appointed attorneys conferred with their client at the start of the trial and gave in.\n\nA week after the plea bargain that saw Dee McRae sent to prison for life, Mike came home after his shift. Pat's unmarked car was not in the garage. \n\n\"Carol, has your mother called?\" he asked their older daughter.\n\n\"Yes, Daddy, but all she said was that she would be late.\"\n\nMike walked back to his car. Lifting the mike he called Dispatch, \"Dispatch this is SWAT1. Is D-David 24 10-8?\"\n\n\"Negative SWAT1. She went 10-42 over 30 minutes ago,\" the dispatcher replied.\n\nMike stuck his head back in the house and called to Carol that he would be back before too long. He took his car down a series of winding back roads and down a dirt strip to the county cemetery. Slowing, he looked over the area until he spotted Pat's unit. He parked next to it. Quietly he approached his wife, who was kneeling beside a grave. He knelt beside her and put his arm around her.\n\nShe looked up at him. Tears cut a path down her face. \"Why Mike? I know we can't save everyone, but why can't we save the kids at least?\" Her hand remained on the small headstone, moving in tiny circles as though she could somehow both offer and take comfort from the little girl even now.\n\n\"Shhhhhhhhhh, I know honey.\" His arm tightened around her. \"I don't understand it either.\"\n\n\"All the people I've talked to, if only one of them had spoken up, this little precious girl could have been saved. If Dee McCrae didn't want his daughter, why didn't he give her up for adoption? Why couldn't I save her? Mike, I read those notebooks of hers. Again and again she wrote all she wanted was someone to love her. We would have loved her. She could have become our daughter.\" Her chest shook with sobs. The barriers every cop has to keep up were crumbling before this final emotional onslaught and with a strangled wail of \"Oh GOD, WHY?\", she fell completely apart.\n\nFew things are more helpless than a strong man who knows he can't fix a crushing blow to someone he loves. Mike wanted to cry with and for Pat. He wanted to curse the man who had betrayed what Mike considered to be the most important aspect of manhood; the protection of his family, even at the cost of his own life. All he could do was to pull his distraught wife's head to his chest and hold her as she cried herself out. His eyes were fixed on the small stone angel standing at the headstone, her hands outstretched. He knew who had paid for that angel when he balanced the checkbook recently. It was how he had known where to find Pat. He held her and by that wordlessly let her know how much he loved her.\n\nFinally, after her chest stopped heaving and she was silent against him, Mike tipped her face up to his. He softly kissed her and then helped her to her feet. She grunted as she rose, the evidence of her advanced pregnancy showing.\n\n\"Its time to go home now, Pat. Our children are waiting.\"\n\n\"I know Mike. I just, I just don't want her to be alone.\"\n\nThe early evening had been warm and still. Suddenly a breath of wind passed across their faces. The leaves of the tree shadowing the little grave rustled.\n\nSomehow a smile came to Pat, though it was small and sad. She looked to the sky. \"Okay, I can take a hint. She will never be alone again.\"\n\nThe two officers crossed themselves, walked to their cars and drove off. The breeze had died away. In the stillness the shadows of the leaves fluttered once more over the angel and the headstone she guarded.\n\n(The End)\n\n(Dedicated to Al, a wonderful and patient field training officer who became an outstanding detective, and who finally burned out because he cared so much. Thank you Marian, Dotti and Linda for your support and your insistence I post this. I love you all.)"
    ],
    "authorname": "patricia51",
    "tags": [
        "pat nodded",
        "linda nodded",
        "pat mike",
        "pat",
        "mike"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/to-serve-and-protect-concrete-angel"
}