{
    "title": "Junction Pt. 03",
    "pages": [
        "Synopsis: Science unleashed brings about the salvation of humanity and the destruction of reality.\n\nInspired by multiple roleplaying gaming systems too numerous to mention. \u00a9 EmotionalStorm December 2020. This story cannot be transferred to any other site besides Literotica.com without the prior authorizations in writing from the author and EmotionalStorm must be credited for this work.\n\n---\n\nJace wanted no connection back to the Royal Family and the Avalon Wilds to become an issue. In reality, he kept most of those funds stored away on credit chips in case he ever was forced to flee or needed to spend untraceable funds for a reason. Just as he did with all of the other cred chips he had collected. He had 12+ million DC's in untraceable cred chips.\n\nHe set up his will for all of the children just in case anything happened to him and Rayne. He worked out a private code with her and expressed his concerns to her. He wanted her to know his fears and why. Especially what if questions concerning the Royal Family changing their minds on things in the future.\n\nIf he were gone for some reason. She understood as he brought up the retirement of Sylvia, the threat of Sylvia's sister inquiries on him, and the last mission which was designed to ensure the maximum loss of his team. He defeated that effort.\n\nHe did not give her specifics, just that the odds of survival on that mission were 0% and he came back with 8% of the team assets and mission success. She now understood just how much he loved her as he allowed himself to be anchored in this City-State because he truly loved her.\n\nShe loved him all the more for being honest with her about this. Just 2 weeks later in a small and private ceremony out behind the house Jace and Rayne were married. She finally felt trim enough to walk down the aisle and he could walk without the need for a cane. Technically, he was at 98% capacity of what he had before but kept that to himself. Richard and Hellen took the children for the night...technically for a few nights given Jace's plan.\n\nThey had a small reception in the dining room of their home before the party broke. Shelby and Molly, the two cooks took care of everything. The nannies went next door to help watch over the children.\n\nJace sent a text message to the Minister of Defense, 'Shutting down comms for the next 72 hours. If needed I can be reached or contacted through Marshal Cooper. I will be at home.'\n\nHe sent the same message to the director of the Marshal Service. He used his 950 processor to disable the aux port, which was where he stuck the comms crystal, to do just that sort of thing.\n\nThey both knew he got married today and he had a tracker and he knew where it was located. They knew where he was and he had no requirement to let them know he was going off comms, he did it as a courtesy only.\n\nHe walked in and activated the silence stone. He left it open to hear outside conversations or threats. She walked out of their bathroom in green silk lingerie complete with a garter belt, nursing style bra, and thong panties. She had gotten back into shape and her tits were a very full DD in size after the children and she was still breastfeeding.\n\nThey kept a mini-fridge in the nursery that was filled with breast milk for the nannies to use. Another in the bedroom with a breast pump she would use throughout the day and night to relieve the stress of what she produced every few hours.\n\nShe had warned him her tits would likely be off-limits to stimulation unless he wished to drown in breast milk and she found it painful to go more than 3 hours without relieving the stress. She had 3 spare breast pumps to safeguard against a unit failure.\n\nHe walked in and stripped, completely ready to split open her orifices and she knew it was coming. He walked up to her and kissed her warmly and then with greater passion. He dropped to his knees and slid her thong off and for the first time dove into her already dripping pussy as he attempted to stem the flow of the leaking damn from between her legs.\n\nShe stood there while he drank his fill of her secretions which only sped up as the stimulation to her vulva and clit were on overload. She slid back on the bed. He had a long tongue due to his mixed heritage, at least longer than an unmodified human. He knew what to do with it as Jess had sought that part of his education with him to get her prepared to take his cock for breeding.\n\nRayne lost it and started bucking her hips with her climax when he stabbed her ass with his tongue. She held onto his head as he continued the assault for another 15 minutes bringing her off again and again. Rayne stopped him finally and he mounted her with one smooth thrust into her velvety folds.\n\nShe was under no illusions. He had told her he would ravage her for days after they were married and she knew she would likely be pregnant again from it. He kissed her full on the mouth and she tried to suck her own juices from around his mouth and out of his tongue.\n\nAll while he thrust deeper and harder against her pelvic muscles; they had planned for this as well; she had a stack of healing potions to use if she ever got too sore to continue that she could pull from her nightstand. He fucked her pussy for 12 hours straight of passionate sex.\n\nShe used the breast pump on one breast and he sucked the excess out of the other one every few hours and he alternated. While he fucked her ass, which went on for over 6 hours, he held two of the pumping units to her breasts and milked them both as needed.\n\nA complication for having the children before the wedding but they were dealing with the issue. Thus far she had used 3 healing potions for sore muscles and her pelvic region. They managed a few hours of sleep before he started back up on her again, though his cock remained in her pussy while he slept and they continued this effort.\n\nThey had scheduled breaks for storing milk, the occasional shower, sheet replacements, and refreshments. They did not leave the room for 3 days and he never went soft during all of this. She did not keep count but knew he was close to 100 ejaculations and she figured her climax count was well over 1,000 thanks to the 30 healing potions she consumed during this marathon session of lust, passion, and heartfelt love he gave her.\n\nHe kept his word, he said he would not leave her side for 3 straight days if it were permitted. He arranged it with only minor interruptions to get breast milk to the nannies and the cooks to bring in food. He did not stop his affections on her when they came for it and she was turned on to have an audience.\n\nNot her first time having an audience after the barracks parties but he was balls deep in her ass, her legs were spread open and the sheets covered in their fluids which raged like a river from her gaping cunt the one time they came in to empty the fridge after 2 days. Both ladies smiled at her as she hit her peak into a massive screaming climax.\n\nThey walked out of the room to see him starting up again immediately on her. Cassy and her lover Renna both looked at each other and smiled as they walked down the hall to the foyer. Where Helen waited to take them back to her house. Helen asked, \"They sleeping?\"\n\nRenna laughed, \"No he has filled her ass once again and is pressing forward. I hope she has enough healing potions.\"\n\nCassy nodded, \"I saw at least 20 empty bottles in their room. She was splayed open enough we could have sunk a hand into her and not have needed lubrication.\"\n\nHelen laughed at them, \"Well he is well endowed, like my husband except Jace has scales. I went through 4 healing potions on my wedding night. He forewarned her he planned to fuck and make love to her for 3 days straight. Sounds like he is keeping that promise.\"\n\nCassy laughed, \"The mate I had in the program would go off twice during a visit and they were both into my cunt and lasted all of 10 minutes each. Neither of us could stand each other as he was a gay male forced to procreate with a lesbian. They gave him pills to keep him up for it.\n\nI would not let him near my ass. Renna got that honor with fingers and her hand eventually. Just as I did with her once we were set free. We had the same mate in the program.\"\n\nRenna looked over, \"The times we had to mate were pretty much the same though he did want my ass I kept it off-limits. That just pissed him off, I think. He died in the service a year in and they used his samples on us after that to complete our contract.\n\nWe shared a room and after we got out, we have had only one bed in the bedroom by our mutual agreement. We became lovers after we got out of the program and went into training together. We are glad Jace is not looking at us to mate with.\n\nWe know she is going to need a second, if he does this every damned day, she might need 15 of them. He is nice enough for a man and she is a sweetheart of a lady. Yet, he is just a fucking machine in bed but she appears to be enjoying herself.\"\n\nHelen smiled, \"I saw the aftermath of their first time together. That was 9 hours of sex and I used 14 large towels, a wet/dry vacuum, and finally decided after he disappeared that the mattress that would not dry had to go. It was like a giant sponge with as much fluid that came out of him AND her.\n\nThat is why they have the liquid barrier mattress condom on their bed. Richard needs a few minutes to bounce back, they have some similarities in genetics and he can more than satisfy. I already confirmed I have another set of twins on the way. We are talking about getting a second wife again. I know Jace and she will take it up when they come out of their extended rutting session.\"\n\n---\n\nJace chuckled as he finally exploded into her ass again, \"I heard your mother talking with the nannies about your gaping pussy and being able to put a hand into it.\"\n\nShe looked back, \"Put one in both.\"\n\nShe reached over and downed another potion as he slid both hands into her gaping holes which were both well lubricated from the semen he released into her. He fist fucked her through another 6 hand crushing orgasms before withdrawing them. He took her to the shower after she drained her tits yet again.\n\nShe cleaned him up and took him straight back into her cunt for another 6 hours before they stopped to eat again. They ate large quantities of food and fruit juices before continuing again after yet another bathroom break and her cleaning out both holes.\n\nIt was the end of the third night and she sighed out as he slid forward and gave what they agreed upon would be the last deposit for a couple of days at least, to let her body rebound. She looked at him, \"What is your bio-monitor telling you?\"\n\nHe smiled, \"Two sets of twins, too early to tell the sex. He held her from behind and had a breast pump in each hand to milk more out of her. She smiled back at him, \"Yep, as I told my mother. Lots of children.\"\n\nHe kissed her shoulder, \"Next time you deliver we will get you set up with the deluxe recovery package to get you back into the tight military form you had on that first night.\"\n\nShe laughed, \"I did not think I was that tight from my time in the service. I had several boyfriends and girlfriends. More like casual lovers, but you are not the first to get a hand inside of me. Just the first male to do it to my pussy and the only one to do it to my ass. What you pack between your legs we should seek a second wife.\"\n\nHe kissed his shoulder, \"We would never be able to get her your deal on children.\"\n\nRayne nodded, \"I know it is unlikely but that does not stop us from test driving a few to see if we can find one compatible to both of us.\"\n\nJace nodded, \"True. We will see what the future holds after getting some sleep.\"\n\nShe nodded, \"Sleep for 16 hours at least.\"\n\nJace chuckled as they went to sleep together. She still had to get up every few hours and milk her breasts down. She had not told him, though he suspected and did not care, that she had her breast size enhanced by magic.\n\nWhile in the hospital she had them set to never go beyond a certain size and to retain their firmness even into old age if needed. The magical version of breast surgery to keep her from having sagging tits.\n\nThey ever stopped having children then she would see about taking them back to being just D-sized. With the multiple children, the additional milk they produced would go to use. Her mother came in to see her. He laid in bed naked under the damp sheet which did not hide much other than the fact it had gone down for now.\n\nHellen shook her head, \"Richard got a message from the Royal Family. They need to see the 4 of us at the Palace. They also requested you keep your communications off Jace. Something is going on.\"\n\nJace sighed, \"Let us shower and we will get dressed and meet you downstairs.\"\n\nShe nodded, \"As long as I do not have to come up and use a crowbar to separate the two of you.\"\n\nJace laughed as he threw the sheet off of him, \"She is my wife now, but I did promise to give her a couple of days to let her orifices bounce back. She has 2 sets of twins, just as you have one set Hellen.\"\n\nRayne looked at her mother and smiled, \"Two more siblings to raise.\"\n\nHellen smiled, \"We are talking about the second wife again as well. You know what your nannies said?\"\n\nRayne shook her head and Jace walked into the bathroom as he spoke, \"No, we will not get 15 more of them. Those stones block sounds going out, but not coming in with the way I had them set.\"\n\nHellen laughed at him, \"He does have amazing hearing. To block that off would be problematic for security reasons. Those sensitive ears of his have saved our collective asses once already.\"\n\nShe left them as Rayne got up and went to the bathroom and then joined him in the shower. They kept it playful washing this morning and got dressed. All the sheets had been pulled and the bed made up fully while they were getting cleaned up. There was breakfast set out for them and she had to unload her breasts again before they departed.\n\nThey got downstairs to her awaiting parents, went out, and got into Jace's car with Richard riding shotgun. He looked at Jace, \"They did not tell me much, just to have you keep comms off and they needed to see the 4 of us.\"\n\nJace sighed, \"Text or audio?\"\n\nRichard looked over, \"First assistant, Royal Family. Vid and direct. Your children are fine by the way. They have kept the nannies busy. They will move back over while we are gone. The double nurseries and bedrooms were good ideas. I will send you information on a nanny and cook we have been considering. We just looked over the profile.\"\n\nJace nodded as he got them through traffic and to the Royal Estate which appeared to have been heavily fortified with added security. They pulled up at the outer gate and were instructed into a man-trap designed for vehicles with polymorphed dragon guards armed to the teeth checking everyone out as they searched the vehicle.\n\nJace looked at Richard who nodded, \"Something major has happened. I have not seen anything like this since we were at war last. Even then it was not this bad.\"\n\nJace sighed as he got cleared to enter the royal compound and found it half deserted. They found a parking space easily enough. They both carried sidearms and had their badges on display. Nobody searched or detained them. They went toward the main hall and a couple of guards pointed, \"Down this hall. You will see another set of guards and they will take you to the Royal Family meeting room.\"\n\nAll of the guards on duty were dragons. In fact, they were the only 'humans' that appeared to be in the compound from what they could see. Jace looked at Richard, \"Racial isolation?\"\n\nRichard nodded, \"All under an ironclad media blackout. I am not liking the looks of this at all.\"\n\nThey got to the other guards who took their sidearms and attached magic suppression bracelets on all 4 of them. The guard looked at them, \"I was told to tell you while you are trusted these are precautions. The Royal Family has instilled upon all visitors into the restricted residential wing of the compound.\"\n\nRichard and Jace did not buy it and the ladies could tell the men were not happy but everyone complied. They were taken into an elevator deep into an underground layer. Several hundred feet at least The doors opened and they went down another corridor and into a meeting room. Jace looked at Helen as they entered as the 2 ladies looked at each other. Rayne spoke, \"We just went through a heavy magical suppression field. We felt it.\"\n\nJace nodded, \"I have felt them before. A high-security area. Magical shielding and not suppression, that would affect the restraints as well if it were suppression.\"\n\nHe heard from across the room as a door opened, \"Please take a seat and for this meeting, you can skip the formalities.\"\n\nHe saw the Minister of Defense and the King enter the room in a humanoid form. They all sat at the table.\n\nThe Minister of Defense looked over, \"We tried to figure out a way of segregating some of the information from what you are about to see. We finally concluded it would not work as it left too many questions Jace would pursue.\n\nI spoke with the Royal Family on this and information on this is not to be released or discussed outside of this room. Jace, please control any angry outbursts you might wish to have and save your questions until we are done. Everyone.\"\n\nThey played Sylvia's message in its entirety. Including the discussions that they found implicating the woman's sisters and her execution. Jace was ready to explode as the Minister held up a hand and played the next vid, \"The 'attack' on CGR from within, they had recovered vid feeds which were bloody.\n\nThe Minister spoke, \"She is a talented geneticist but we have people more adept at getting into deleted and encrypted files. There was no information on cloning anywhere within the CGR facility or any facility. Except for one which was destroyed after that genetic mutation virus was released from that province. This is genetic technology we do not have. The fact she destroyed and ate the species 874 subject we found surprising.\"\n\nJace was livid as he finished watching everything. He finally looked over, at the King who could tell he was pissed off.\n\nJace decided it was time to hit back, \"Reports from Genesis Station? Before you ask, recovered on my 9th mission of 15. I kept no copies of the data on the stations other than what is in my own mind. Counterintelligence data I found in regards to our own Kingdom and the assets at your disposal. I never uttered the words before now.\"\n\nThe King sat back and sighed, \"What are you wanting Jace?\"\n\nRayne asked, \"Genesis Station?\"\n\nJace looked over, \"Every Royal family has one somewhere from what I could tell. Monitoring stations, ground, and space-based with alien technology manned by dragons and entitled races only. No humans. Regional spying on just about anything. Did she have any knowledge of this?\"\n\nThe King sighed, \"There is nothing to indicate she has any knowledge of this. They are strictly dragon facilities discovered only a few hundred years ago. Those outside dragon circles who helped get them operational are all dead now but were monitored for life and kept in a separate population center.\n\nBy decree of the RECD. I cannot bring it up to them without letting them know you were on that mission. The sole survivor of that mission. There should have been no information on those facilities in standard records. Nothing on the Weave. The alien races who ran them having abandoned them.\"\n\nJace shook his head and then smiled, \"They were not on the system you asked me to look at but it was on another terminal in that room. Off the Weave and I had enough tech knowledge into how to break into that system without setting off any alarms.\n\nNo, alien races may have 'left them' but that does not mean they did not monitor them to see what you would do with what they left behind. They are just another lab for monitoring life in this world; including and especially dragons.",
        "You would not have the resources to understand it without having been taught everything about those facilities by the races that left them behind. Instead, they put all who worked there under a microscope.\"\n\nThe King looked over, \"Why do you say that?\"\n\nJace looked back, \"Humans have done this behavior to each other for centuries before Junction occurred. Then the entitled races and Dragons did it to us once they learned how to use the technology. If these Aliens are more advanced, they would have destroyed such facilities.\n\nUNLESS they are monitoring the world from afar. The stations are space-based and not restricted by the Weave around this world. That would allow monitoring 'the new lab rats' in their facilities in space as parts exist inside of the weave and the upper sections outside of the weave and out of your control.\n\nYou enabled it further by getting them working with the ground stations. Comms antennas extended into the section of the atmosphere that the weave connects. To get it working through the weave after 'your required upgrades.'\n\nYou gave them what they needed to monitor the state of this world. Those who occupy those facilities to see if they can figure out if they are any more enlightened. Species 874 would be my guess.\n\nMost that 'fled' did so because all communication on the planet was now worthless to them. Pre-junction that humans understood. The Weave from your reality brought that into effect. The perfect reason to do a mass evacuation.\n\nThat server also confirmed the research into the creation of Junction. Dragon and the entitled races played a small role in that if any at all directly. The Weave being responsible for holding the 3 worlds together as neither side could fathom it and the power of Magic.\n\nThose societies, your own societies, were not into computers, technology, genetics, or any of that until after Junction occurred. It was the alien species and humanities combined efforts in alternate realities or galaxies that forced the merger into this world. Having 'drove off' the 'alien menace' that left humans to shoulder the blame alone. Based on this information and what I read from that server.\n\nIf they had not released the virus you would have worked to exterminate humanity a long time ago. You had no means of using Ki until all races had been modified to do that. The virus did that, released in the 84th City-State that no longer exists, Trimarka. They did the research on harvesting and using Ki.\n\nIt only worked with humans modified with species 874; no other race could use it until those sadistic bitches attacked you with that virus in spite. Their mothers 'research.' That inadvertently saved humanity from extinction and at the same time gave humanity the means to level the playing field.\n\nYou could now use humans as batteries to extend your life, ground troops for your border skirmishes. It allowed you to play at being the feudal warlords of old from Earth if you will. Remember who watched over my education was Sylvia and ancient texts on Earth were a central part of that when I was younger. The 'Art of War' and many other texts was required reading.\n\nI can draw parallels from across Earth history for the efforts done here. Dragons and the entitled races figured out a means to sit at the top of these pyramids being built. Yet, it was a human scientist who fundamentally changed your races, who caused you to take that approach to incorporate yourself into a human societal structure the way you have.\n\nAs to Sylvia knowing about it, I would just assume she does but does not care. She is relying upon you to be scared to act, to try and keep that secret from escaping. You saw what she did with her sister, she waited over 500 years to destroy her own sister, let alone her parents.\n\nWhy? Why won't you reveal this secret to how you can now not only use Ki but your Ki can be used by others? Same for any race? Because that small piece of genetic code is not ingrained into humans alone.\n\nIt was the mixing of humans with 874 that made it possible and they merged it using a biological virus that killed thousands in its day. Those that survived the virus were now Ki batteries as well. Those of us in Spec-ops have known we could drain Ki from Dragons in the heat of a battle, as long as we did not kill them.\n\nYou just have more Ki because we measure it in units and entitled races and dragons live longer. Thus, they have more Ki. Now the big question. Who did this benefit? The answer is species 874 who is monitoring our progress from these genesis stations your race does not fully understand.\n\nTheir problem? They don't have the ability to work with the Weave and their communications will not work in this world. When the 84th province fell, what happened to their genesis station? Who controls it? Was it upgraded with crystals to work with the Weave? The ground station might have been destroyed but what about the space-based component?\"\n\nThe Minister of Defense stood, \"Let me check a few things. First, I want to know why you think she would know?\"\n\nJace smiled, \"Syliva is about the long game, keeping important assets available for years at a time. Gathering dirt and trading in secrets are a part of her game. How she had control of several key players in your arms markets, pharmaceutical companies, and TECH companies you would have relied upon.\n\nThey could have stored that data off the weave. We have shown, or should I say she has, that your monitoring can only track so much at once as someone needs to determine who the threats are. A data storage disk could have been made over the years.\n\nSmuggled out of these remote facilities; even dragons are corruptible and I have to point no further than some of your own royal family. What occurred in the Avalon Wilds proves my point on that matter.\n\nAs does the entitled races keeping the viruses' effects from the Royal families and their own research efforts. Likely in their own facilities to try and correct the virus. Did you find her hidden facility here?\"\n\nThe King sighed, \"Yes, below and deeper into the mountain in sections of the facility that were never expanded upon but she somehow got it constructed or it already existed and she repurposed the space. She was gone from there after the attack. We do not know where she went.\"\n\nThe Minister and King left them in the room and Richard looked at Jace, \"15 missions?!\"\n\nJace nodded, \"Considering I just gave him what he needed to order our deaths if he chooses too, I will simply say yes. Those were the offensive missions, the ones they count. It did not count the 7 defensive missions, including the one Rayne saw me in the field with that Juggernaut.\n\nNone of them were deemed failures, even 2 of them where I returned alone. I still gathered intelligence on those 2 and escaped the area. Given my defects and my successes, I can say they have us here because they need us. Both of us Richard. We have the highest percentages of 874 than any others. Also your son Jason, but he was never a program asset and they want to keep those in the know of this as small as possible.\"\n\nRichard nodded, \"Mine is 2.5x as high as you for Species 874 at 25%. I had 1-2% of the others you had on your list except for the troll, giant, and elven which I did not get.\"\n\nJace sighed, \"They will want bone marrow and semen from both of us to reconstitute the program. Have you ever asked how they captured any species 874 subjects?\"\n\nRichard shook his head as did both ladies. \"They didn't capture them. They worked with the geneticist originally. The human geneticist. Creating 50% hybrids initially as humans understood genetics. The 51% rule came from that later. They saw the potential in Dragons and the other entitled races.\n\nOver the years the 874's who volunteered to stay behind died off, but the seeds of their knowledge they put into humans, and humans put it into the others. We are all crops for species 874 when and if they decide the grand experiment is over. They have to be able to get past and be able to use the weave.\n\nThat means they need a locally born army to do that. Part 874, human, and dragon for the best results. Species like Sylvia if you followed what she has done. 52% dragons and 24% 874 and human each. She genetically manipulates the offspring from the children she took to match her own structure or at least the 874 structure with Dragons and others.\n\nWeave capable races, able to access the highest tiers of the weave even. She could build a race with very long lives, weave capable, and then she has their army. Combined with her knowledge of the Genesis Stations, she can work with those who helped orchestrate our demise.\n\nShe is also able to hack my comms which is why they wanted it off-line as it is 50% and she is now 52%. I can fix it; dragons would have a harder time tracking my communications if I did that.\"\n\nRichard asked, \"How?\"\n\nJace smiled, \"The 5 we captured in your house had the new comms crystals, without the mind control. I have those crystals. It does not count the trackers they have placed within us but the bio-monitor shows me and you where those are located.\"\n\n---\n\nThe King got in contact with the King of City-State. The location of Jaces 9th mission.\n\nThe Gold King looked across as the Blue Dragon King, \"You had a Mastro97A unit attack one of your facilities 21 months ago. That unit was one of mine.\"\n\nThe Blue King was shocked to hear him admit the fact, though he suspected that fact. The Blue King looked over, \"I will demand reparations through RECD for that unprovoked attack.\"\n\nThe Gold King shook his head, \"Not unprovoked. We got the names of 86 spies in my City-State and sold off the list for 1,438 others in the other City-States you had amassed. Including corporate espionage efforts, you had going on at that time.\n\nIt was a response to your clandestine efforts. The problem is, you were careless. You had another system there. One that dealt with all of the information from the Council on Genesis Station and the history of Junction.\n\nThe human operative who did that just confirmed he got all of the information out of that system, from you. Your security was lacking and it was not in a place secure enough to protect it.\"\n\nThe Blue King sighed, \"It was relocated. While it did not set off any alarms we knew it had been accessed. I want that agent killed!\"\n\nThe Gold King interrupted, \"Yet you did not inform RECD of the breach?! That agent is working to help us understand the threat posed by the Genesis stations.\n\nStandby as I bring the RECD council into this discussion.\"\n\nThe Gold King put him on hold and called in all 82 Kings into the session. He brought them up to speed on the breach that was not reported and was conducted by one of his Mastro units. He went into the other facts, \"The rogue geneticists who infected all of our races with the Praxon virus. The virus that modified all of our DNA to include 2% human and 2% Species 874 into all of our genetics and killed hundreds of thousands.\n\nOur entitled races and likely yours have been working for centuries to find a way to remove it. They have not informed us of this fact before now. Our own dragon researchers have not informed us of this fact, before now! Nobody on this council has brought this before the council before now!\n\nGuess what? We have no method of removing it and if we did, it would kill us or cut off our access to Ki as a race!\"\n\nHe went over Jace's species 874 theory and incorporated a few items his Minister of Defense sent him from Jace's ongoing conversation with his family. The Gold King looked across, \"We need to ensure that the ground station is destroyed in Trimarka, to begin with. Then plan to destroy the space-based component that still exists for that location.\n\nElse this rogue geneticist who remains will likely contact species 874 with her research if she is cornered. Then we all lose if they invade and start draining the larger batteries we have become! They could have destroyed us or the facilities.\n\nInstead, our people are likely to be observed like lab rats in those facilities while we do not completely understand how they work. I am going to work with this asset who is providing us key information into how this terrorist's mind works.\n\nWe killed her sister and she killed her Mother who knows about how it was created. She is the only one who has a chance of getting a fix in place in the near term. It could take centuries to undo this damage while still being able to use the Ki we have become reliant upon. She will likely refuse.\n\nWe cannot allow her to build an army. A new race to challenge us all. My asset is too valuable and extremely loyal to me for working with this problem. His destruction will not occur, not now as he knows how to find this greater threat.\"\n\nThe council debated for almost an hour before agreeing to the strike on the Ground station. They looked at the Gold King, \"Get us more information from this asset of yours before we rule on what steps to take with him. Given his genetic makeup, as you have confirmed it is the same one who took down a Royal Red dragon. We need to know what the threat is from him.\"\n\n---\n\nIt took almost 2 hours before those 2 returned. The King spoke, \"Please keep Genesis information restricted. Only to be discussed here from now on. I contacted the Royal family and owned up to that attack. He wanted reparations. I informed him the RECD can rule on that matter.\n\nWhen they learn that Genesis station information was leaked into the human population from that attack from a computer in that area. He was not supposed to have that information upon any system outside the Royal compound. That effectively shut down his request for reparations.\n\nInstead, he got that computer moved to a vault inside of his Royal Palace immediately. Where it should have been. Then upgraded the security software as he had been advised of the data breach. They did not detect you getting into that system but they had determined, after the fact, that it had been accessed and they failed to report the breach to the RECD.\n\nHe wanted you dead. I told him that would not be required because you are helping us to assess what is going on with those stations. I contacted the RECD about working on the destruction of the 84th station immediately. I just told them we came upon rogue agents who had that virus research and that station posed a threat to talking with species 874.\n\nThe other 83 might need to be destroyed as well. The Minister was watching your discussion to see how you would take the news. As to your communication crystals, upgrade them, both of you. Jace, we cannot send you after her, we don't even know where she is located. The 84th City-State province is being bombed again as we speak as a precaution by all other 83 City-States. That ground station will be a crater.\n\nWe are not wanting bone marrow from the 2 of you. We don't have the doctors right now to handle that, she killed every doctor of skill who worked at CGR the day before we received that disk. Computers were destroyed one-by-one and backups were burned in one large fire at the back of the facility.\n\nShe had access to the security systems through hidden accounts and shut down all communication into the facility for any attempt to set off an alarm. She used a dampening stone to stop any magical escape from her attack. She used the lab's safety functions for viral contamination control and sealed the building and burned the staff alive.\n\nAll except the nursery for some reason, which she did raid. The next shift for the nursery staff came in and found screaming children and the carnage. It took time to filter the attack through our military before I was informed about it after seeing that vid file. I am authorizing some retired geneticist's life extensions for them and their spouses to work on rebuilding the program.\n\nThus far I got 6 who agreed but only if the facility was a new location given what occurred. Construction of that facility is underway. Her 'special projects' section is shutdown. We are asking you both to agree to provide semen samples into this project for the next 5 years. Provided you are both still alive. We will leave Jason out of this as we don't want this knowledge shared further.\"\n\nJace looked across at Richard, \"We obviously cannot talk about this in private here. I would agree with this given the following conditions. All internal tracking devices are removed from me and my family. All children sired directly by me are never to be brought into this program, with one caveat I will get into. Genetic manipulation that was done by her to create me is banned research.\n\nAll children to be raised by myself, my wife, wives, or single mothers until the day of evaluation as per normal instead of being divided or taken. Tracking of the offspring could commence then. IF they are my children then they are off-limits outside of those semen samples from males only if they agree. Eggs from females if they agree only at 10 times the normal rate for both males and females. Again, I have a caveat coming up for this.\n\nSamples for us are to be collected by my wife or wives during this time at home and then picked up for use. I will not return to a lab for any of this, EVER. That we are allowed a second wife, free of any charges whenever we might have an opening that we wish to fill. We may request a third at some point. I am covering the mothers we might interview with the previous unwed mother's line if they do not work out.\n\nThose single mothers MAY, at their discretion, release the children to those efforts at 10 times the going compensation rates. They may not have the means or the desire to raise the children on their own. Anything happens to those single mothers to get those children and I will locate the lab and destroy it myself. Let them have free will over the matter is all I am asking.\n\nNow for our continued cooperation, every 25 years from today you could ask us for another 5 years to include life extensions to myself and my wives if we agree. We may ask for an addendum, like a third wife at no cost or it might be a fifth wife by then if we get to be rambunctious.\n\nOnce you or we turn it down, you can ask again but the answer would likely be no without some cause or another concession we are seeking. To protect your investment, no more Mastro97A missions will be demanded of me.\n\nYou can brief me on a situation and ask if I would volunteer for it, but keep in mind you are putting me into enemy territory for that. Some enemies would like to kill me or experiment on me as they likely know who I am after the Wilds incident. Richard, your thoughts?\"\n\nCoop gave a half-smile, \"I could work with those same guidelines, except for the Mastro assignments. No fucking way would I ever consider going on one of those.\"\n\nThe ladies laughed. Jace turned to the King, \"Before you answer there is one thing you should know.\" He had his hands in his lap that entire time and he brought them up and onto the table and slammed the restraining bracelet on the table. \"Your Spec-Ops units are trained in how to get out of those in case of capture. That is not a threat, just letting you know the futility of requesting this on me.\"\n\nHe had 5 shocked faces looking at the bracelet on the table and the unspoken threat that he could attempt to battle his way out of there if he truly desired freedom.\n\nThe King finally looked up and chuckled, \"You make a fair point on the bracelets. I had forgotten that would have been a part of your training. Not bracelets created by dragons, but you seem to have the skills to do those as well.\"\n\nJace nodded, \"What species 874 can do has never been fully understood. This is just one example of an unknown variable you should consider with her creating a race capable of manipulating the weave as pure-blooded dragons can do.",
        "You have to kill every uplink to every Genesis station, the stations themselves if possible. Build new and separate stations that are Dragon comms tech only is your only solution to cutting out the outside threats to this world.\n\nTo thwart her if she gets into contact with them and has an army waiting for them. It will take years to build if that is the case. Some of my abilities come from that species and if I can break Dragon bonds with it at my percentage, you can imagine what she could do.\n\nShe will build a race with those percentages if not an army. She has enough ego not to want to contact them unless she is in trouble and has something to offer. She wants to rule. She will become a non-dragon ruler of a new race somewhere that you are not going to be able to defend against without our help.\n\nYou and your family are at the top of her shit list at the moment and she likes challenging prey. That is why she left you with few options except to come to those who are sitting in front of you. Richard and I are right beside you for our parts in getting her killed, her clone anyway. That makes her a threat to us all.\"\n\nThe King nodded finally, \"You are right. I have a general in front of me who served with distinction, his wife the Major who did the same during her military career. Also, you and your wife, just not as military lifers as it were.\n\nYou have all shown a high degree of loyalty to this family and myself in particular. I will write you the decrees and send them off to you for your records. How many samples can we expect?\"\n\nJace looked over, \"Let us say between 100-200 a year for 5 years. You know my samples can be split into 2 if required because of the volume. You will have to designate a courier we both would trust, Dr. Bowman if still alive we would trust for this activity. He has done our cybernetic upgrades and I am thinking we might need to do our wives as well if they are willing. For secure communication.\"\n\nThe Minister looked over his list, \"The Doctor is still alive as he is not a geneticist and his private practice could help to support this covertly with a courier until we are fully operational. I will ensure a supply of those communication crystals are on-hand if they are needed in the future as well. You said you had a few already?\"\n\nJace nodded, \"A couple more would not hurt for the wives we might add. Then there is the chance of them getting damaged in the field. Start DNA screening of all family and staff. Find out if she has any 874 spies in your midst.\n\nForce her hand. Give up the secret and unite all of the RECD against her. She is boxed in and if she is looking for allies she will try and gain access to the ground station sooner, rather than later. That is how you locate her. Make her desperate and cut off the assets that would support her. Set a killer bounty on her.\"\n\nThe King nodded, \"Wise precaution I will, unfortunately, have to share with the rest of the RECD. They will want more of those samples I am sure from both of you but we will draw from what you provide us and leave out the return clause in 25 years from them. She sent some to every province.\n\nYour abilities with dragon tech I am leaving out. In case one tries to capture you. The Council will have to decide if we announce her threat to release the information should be done by us to cut off that attack. We have a lot of entitled race scientists to talk with about this covert research as well. The 4 of you are free to go.\"\n\nJace picked up the bracelet and put it back on as they walked to the door. Rayne whispered to him, \"I thought he was going to shit himself when you did that with the bracelet!\"\n\nJace nodded, \"He needs us, and having us happily doing this for him is easier right now. The future is another matter.\"\n\nRichard nodded, \"I liked how you played it. We have both been talking with our wives about adding a second and now we have clearance to do it at no cost while protecting the children.\"\n\nJace nodded, \"Until they get evaluated. That will not change. I knew better than to ask for too much change upfront. In 25 years, we might have other ideas we want to see included. That gives us time to discuss the matter further.\"\n\n---\n\nThe King sat there and looked at his Minister of Defence, \"Jace made some strong arguments on the stations. My other concern is she would get into bed with another Dragon household to advance her research. Another reason to out her as public enemy number 1 in all City-States, as Jace suggested.\"\n\nThe Minister sighed, \"He asked for a lot but tempered and gave us the ability to negotiate for more in the future. How did he settle on the number of samples?\"\n\nThe King chuckled, \"She got samples from him every 3-6 months. The first always went to us. We had 26 samples in our storage facility on him and he knows he is giving us more to work with. She had 5 times that in storage. He is giving us a bargain for additional freedom for his wives and children.\n\nHe knows we could monitor his movements from space, even without the chip. Also, that of his vehicle. He teleports, that would be a different matter and he knows how to do that now in addition to the Astral plane travel we could not track when he disappeared.\n\nI had casters searching for him there and they could not find him there. Keeping him happy, keeps him from running to another royal family who would likely give him even more freedom in this matter. He is right, we need them both and we may need them for centuries to come.\n\nHim holding that knowledge on the Genesis Stations was a surprise. Yet he kept it secret until he felt threatened by her and us. Then he laid out what he knew that forced our hands in hearing him out. Jace has always been sound in his judgment of tactical situations.\n\nHe made a tactical decision to support us but applied additional leverage to expand upon what he wanted for his family. The deeper the roots he has the less likely he is to run. He has asked us to let him grow his forest unmolested until evaluation.\n\nI can see no harm in that as it keeps him loyal to my kingdom. Provides additional offspring to my army, mage corp, and science corp potentially. The more wives he has the more children that will be available to expand his genetics into the population. True for both of them.\"\n\nThey walked out and parted as they both had work to conduct.\n\n---\n\nSylvia was frustrated at not being able to hack into Jace's comms. He was offline for days now. She wanted to toy with him a bit. See if she could lure him out. The one thing she did not have from him was the cells needed to be able to clone him as he was.\n\nShe had planned to do it later until she got cut off from access to him. Then the strike teams went rogue and wanted him dead. She sighed and spoke to herself, \"I will just have to wait and see if his comms returns to being back on-line. I can still track him by his chip.\"\n\nShe pulled up the software and found his tracking chip, that of his wife, and both of the Coopers had gone off-line.\n\nShe sighed, \"They must have replaced the tracking chips in case I tried to locate him. I can be patient. I waited 600 years to deal with my sister, I can do the same for him if need be. One of his offspring might be even better suited to the task at hand. I do have a race to build.\"\n\nShe had to start small as she had no research assistance or staff on hand to aid her. At least none she left alive. She made a clean break into one of the ancient runes south of the old 84th City-State province. She had a couple of spies to work with but was not ready to use them yet. She heard and saw them drop thousands of bombs over that area again. Killing hundreds of thousands of undocumented humans.\n\nSome more like cavemen and women in the way they lived. They held no interest to her as she sealed her lab doors for now and dealt with a couple of crying infants. She had 181 children to deal with for now. She hated that part but she had to make the sacrifice for her research. She knew they bombed the area in case she had returned there, but it showed she had made a clean getaway.\n\n---\n\nIt took 3 days to get the final agreements in place with the King and they had Doctor Bowman come out to their home to do the surgeries on-site for both ladies before they got too far along. Dr. Bowman sighed as he saw Jace, \"You heard about the attack on CGR?\"\n\nJace nodded, \"I know they are building a new facility and have geneticists coming out of retirement to get the program back on track. You have your private practice to maintain you for a while.\"\n\nHe nodded, \"Most of the teenagers and children survived so I still have work to deal with as they approach deadlines. They increased some of the people coming into the program from the outlying areas. They are concerned about the military having enough recruits and if an attack comes. They are bolstering some numbers and allowing a larger percentage in for now.\"\n\nJace nodded, \"Wise precaution given everything that has happened.\"\n\nDr. Bowman finished up. \"You are wrong on one thing though, they are not building 1, they are building 2 facilities this time. Separate staff at each except for a few key players like me. Not enough work if you will that would keep me at just one. I noticed your in-laws look a lot younger. A life extension I would guess.\"\n\nJace nodded, \"How many have you had?\"\n\nThe Doctor laughed, \"12 thus far, several wives decided to pass on and I have remarried 8 times. Only one wife at a time. Hard to find a good second wife from what I hear. At least with the best genetic enhancements.\"\n\nJace nodded, \"I always thought love should play a factor in that.\"\n\nThe Doctor chuckled, \"I guess but you have to keep in mind the genetics evaluation for the children.\"\n\nThe Doctor left as the ladies walked out. Rayne smiled, \"You have so much more information with this implant. I had no idea.\"\n\nHellen nodded, \"True, Richard tried to explain it to me but seeing is believing. He appreciated you doing his upgrade after he saw how much more data he could get.\"\n\nJace nodded, \"You installed your communication crystals?\"\n\nThey both nodded and he soon had a four-way call going with Richard in the mix. He was at work. Coop chuckled, \"Running in my head in a meeting. I will be by to pick Jace up in a few hours. He starts back to work tomorrow officially, but they want me to take him out to the Avalon wilds. To introduce him to the Marshals who will be working for him.\"\n\nJace spoke out, \"All the ladies' security is done and now you have the crystal ID's to be able to communicate with all of us.\"\n\nRichard responded, \"Good to know. I had to show that letter to the doctor here, told him you had one as well. He noticed my tracking chip was gone, the system reported it going through the metal detector.\n\nI spoke with the director and he is setting up the exemptions on that alert for us. He spoke with the Minister of Defence who told him it was accurate and was true for our wives as well. He did not argue about it after that.\"\n\nHelen smiled, \"I should mention the doctor took the first set of sperm samples with his as well. He said the genetics team would be happy to have them as they had some surrogates already lined up. They still had a large selection of female eggs to draw from the other facility.\n\nFrom women still in the military who were compensated for their eggs in a special harvesting offer from the Royal Family. Mostly from the Mage corp but also some female Spec-Ops and science members as well. It depended on their genetic makeup. We will see you when you are free to talk.\"\n\nShe ended the call as did the others. Jace nodded and went upstairs to get his ammo clips, bow, and Judge from his room. He also grabbed his 'to go' bag...just in case. Rayne smiled at him, \"Keep your eyes open for a potential mate candidate.\"\n\nJace smiled, \"I will, but I prefer to do that hunting with you at my side.\"\n\nRayne smiled, \"I have to get some better mage armor built for myself before I go out there. Just connect me and I will see what you see.\" He activated his armor and she smiled, \"Keep that on out there.\"\n\nJace went up and kissed her, \"Expect to get ravaged later.\"\n\nRayne smiled, \"Gods I love it when you say that.\"\n\nHellen was in the doorway, \"Something else we have in common. Pregnancy makes us both horny. You bring my husband back in one piece. I plan on having him ravage me later. Thanks again for the cybernetic upgrade so we could all talk securely. I was not a fan of the idea but I see the importance. Especially after the visit with the King. Some of these other features are good to have with the children around, like the medical bio scan function.\"\n\nJace nodded, \"I am driving my car out. Richard can ride shotgun. Mine is armor-plated. Just in case the welcoming party is not that friendly.\"\n\nJace pulled his car out of the four-car garage and pulled up front just as Coop pulled out in front. He nodded and put his car in the garage.\n\nCoop walked over and opened the back door. He pulled the maglock decals, \"If we are taking yours, we should put these on. It makes sense to take yours as they will see it more often. I thought the 3 rows of seating were overkill when you bought it. Then you had 6 on the way it seemed too small.\"\n\nJace smiled, \"I have a personal vehicle for Rayne on order, more of the older minivan style vehicle that will hold her, a passenger in the front, and 12 car seated children easily. In case she and Hellen want to take the kids someplace like a zoo or something special after they are born.\n\nThey can do it in one vehicle if needed. Also, an armor-plated hover vehicle with jump jets, just in case they are needed to avoid an accident or hostiles. It will be here in a couple of weeks.\"\n\nRichard chuckled, \"Sounds like a massive bullet-proof baby stroller.\"\n\nJace smiled, \"Soon you will have one as well if you keep banging away over the next 20 years. Then there is the second wife to look forward to.\"\n\nCoop nodded, \"Alright, you have a point there. We better start finding more bounties then.\"\n\nJace smiled, \"Already working those.\"\n\n---\n\nIt took 6 hours to drive out to the Avalon wilds, at least to the border down inside the area. Jace pulled up out in front of their 'town hall' which had the Marshal's office taking up around half the room in the new building that was put up.\n\nThey got out to a bunch of staring eyes. Jace started running names on everyone he saw out there. Jace looked at the building and pointed next door, \"The diner first.\"\n\nThey walked over there and saw 30 people at different tables or working. Jace and Coop had a seat at the counter and a woman came around, \"You're the one from the news. The one helped to clear these wilds.\"\n\nJace sighed, \"I was sent out months ago to investigate. You saw that. I start back to work officially tomorrow. I am the Captain over this area. Coop here is my father-in-law and he is also my boss as he hired me if you will. Anything else rumored in the press is just that. Unsubstantiated rumors.\n\nThe big push with the army came while I was undergoing rehabilitation from losing a leg. I will tell you I will be out here, with those who work for me, to work to protect the people. All of the people.\"\n\nShe looked at him, \"You moving out here?\"\n\nJace shook his head, \"Not until the wilds are tamer. I have children and a wife to consider their wellbeing.\"\n\nShe sighed, \"So you will be a part-time presence out here.\"\n\nJace smiled, \"Over 1 million Square kilometers of land. This is but one small town in this area and I have to oversee it all.\"\n\nShe nodded, \"Fair statement. What did you want to eat?\"\n\nJace looked at the menu and chuckled, \"I guess the lunch special as you have that and the breakfast special as the only two items on your menu.\"\n\nShe shook her head, \"The owner's menu. She is next door if you want to complain. She is our de facto mayor and 1 of 3 on the town council. The town has just over 10,000 people. With a 4 to 1, female-to-male population after the army came through and took out most of the 'rebels.' Not all of them were involved but a lot of them were taken and recycled if you will.\"\n\nJace nodded and got up, \"I should go and talk with the council. I was not here or involved in those decisions. This is, in fact, the first I have heard about them.\"\n\nShe nodded at him, \"Not much you can do to bring back dead men.\"\n\nJace sighed, \"I am aware of that. I can still get a list of the outstanding issues I might be able to address.\"\n\nJace and Coop walked out. Coop looked over, \"The army has its own way of doing things. You know that.\"\n\nJace nodded, \"I also know as a Marshal I have my way of doing things that will cause them havoc. They took a civilian matter into their own hands and applied a military invasion approach.\"\n\nHe looked over and saw a squad of military types coming out of a private residence. Jace turned and walked toward them. Coop sighed out, \"Oh shit.\"\n\nJace walked toward them, \"You live here?\"\n\nOne of the men turned to him and asked, \"Who is asking?\"\n\nJace walked up to him, \"Is that your home, and were you invited inside soldier?\"\n\nThe corporal laughed, \"Go away before you get hurt.\"\n\nJace threw his coat back exposing the Judge, \"You will answer me.\" The other 5 men with him stopped dead in their tracks one seemed to recognize him, \"Your Jace Rivers.\"\n\nJace nodded, \"Captain, San Angeles Marshal Service, my boss, Commander Cooper of the Marshal Service, retired Army General. Now answer my fucking question soldier before you find yourselves in a world of hurt.\"\n\nThe man looked back at the house and then back at Jace. \"Of course, we were invited in and the ladies who live there were very entertaining. You're not army now and not in our chain of command.\" Jace held them inside of a wall.\n\nJace looked over, \"Coop, would you check on the occupants of that house and fact check these idiots. You are not in an army base and you fall under civilian rules out here. Now, you have orders allowing you to carry side-arms out here I take it?\"\n\nThe man looked over, \"We liberated this shit hole.\"\n\nJace was getting angrier with this man as he slammed into the wall. He looked at Jace who had not lifted a hand, \"You are being detained for questioning. I have all of your names and your orders. This unit has no business in these wilds unless you live here.\n\nYou corporal are barred from relations outside of the military as you are still within your first 2-year stint. In fact, you all are except for Sergeant Walker. He is trying to figure out just how much trouble he is in at the moment as the vehicle you have over there was signed out from the motor pool by him.\n\nNone of you are on leave and it was supposed to be making a supply run in the city. Your camp is on the other side of the City out toward the south-western border.\"\n\nCooper walked past Jace, \"I am grabbing a few deputies. We got multiple counts of rape and rape of a child to investigate.\"\n\nJace shook his head, \"You are all under arrest at this time. A message has been sent off to your lieutenant.\"\n\nOne tried to fire a gun and it ricocheted off of the wall and hit the loudmouth in the leg. He screamed bloody murder. Jace looked at him, \"All of this is being recorded and you now have an attempted murder charge to go with the other charges, reckless discharge of a firearm inside of a town, and I can guarantee you...it will stick.\"\n\nHis comms went off and he had a baby faced elven lieutenant on his comms. Jace looked at the man who commanded, \"Release my soldiers.\"\n\nJace sighed, \"That is not happening. Contact the Minister of Defense, these men are outside of their Area of Responsibility (AOR), are being investigated for rape, including that of a child and one of the idiots, a Private Grove is now facing attempted murder charges of a Marshal along with conspiracy charges for all of them.\"",
        "The Lieutenant looked over, \"I am an elf, part of the entitled race of this territory, and those men were sent there to blow off some steam.\"\n\nJace smiled, \"I guess I will have to have a discussion with Brandialshane about you Lieutenant Virranala as you are in violation of the law in allowing those within the first 2 years of service from engaging in sex acts with those in the civilian sector.\n\nEspecially acts of rape against children. I am sure he will find it just as repugnant as I do. Yes, I know him and can get to him. His daughter-in-law Kindra was the wife of my commander, before his death.\n\nYou now have some conspiracy to commit rape charges hanging over your head. I cannot arrest you, but my director can and likely would if the Elven Royal Family agrees with the facts after seeing this.\n\nMy name, by the way, is Captain Jace Rivers. Also known as Shidan Gresan, Shadow of Death. I just sent this recording to him and to the Minister of Defense, the head of the Royal Family, and the Director of the Marshal Service in the matter.\"\n\nHe had four other calls coming in and he interconnected them and put them on the holo display. A captain was about to speak, another elf when he saw the head of the Royal Elven Family. He looked over at the director of the Marshal Service and Minister of Defense who all came onto the call. Jace looked over, \"Minister of Defense, you have ranking seniority at the moment, followed by the head of the Royal Elven House.\"\n\nThe Minister of Defense sighed and looked over, \"You don't officially start back until tomorrow.\"\n\nJace smiled, \"The Director ordered me to be here today with Commander Marshal Cooper who is rounding up deputies to deal with the crime scene, including the rape of the child. At the moment I have them inside of a wall awaiting the other Marshals' arrival. I am technically on duty 24/7 so that is a non-issue as I was ordered to this location.\"\n\nThe director sighed and spoke in elven to Brandialshane. He nodded and spoke in English, \"I have a pair of my royal guards going to find the Lieutenant and bring him in for his part on this. As he was not on-site and thus far no proof has been given that he ordered them to rape I will deal with him internally.\"\n\nThe Captain spoke, \"We will send military police around to bring them in.\"\n\nJace shook his head, \"No Captain, you will not send them here to bring them in. They are facing capital crimes and until the Director and the Minister of Defense submit a release for these individuals they will be transported to the main Marshal's office, processed, and eventually arraigned for prosecution.\n\nI have one here for the attempted murder of a Marshal. I would not expect his return for another 20-years to life. This occurred far outside of your AOR and inside of mine. The 6 men need to drop their weapons and weapon belts right now.\"\n\nJace dropped the wall and Private Grove raised his weapon. Jace had his Judge out blew a hole through his head as bullets bounced off of his armor from another shot. The other five men panicked. The Sergeant and one other dropped their weapons belt and two others drew down on Jace and he shot them both through the heart. The last man just pissed himself and froze.\n\nJace looked at the Captain. \"I had dropped the wall to collect weapons. He still had his and fired on me, The other 2 drew weapons on me. Minister, you want to send the Captain what pieces of my record you are allowed to send for my 2-year stint in the military.\"\n\nThe Minister of Defense called out. \"Any of you who have not surrendered be warned, if you have not figured it out, Jace can kill you quickly. He is a former member of Spec-Ops and left the service as a captain after 2 years. That is all you need to know.\n\nTo the Elven officers. Report to the royal family on this matter. Jace is right, there is a process for all of this and they have a crime scene to process. Jace is the Captain over that section of wilderness.\n\nThe Director sent me a copy of the order he signed stating he called Jace in early to meet with the other Marshals assigned to that area. If he came across a crime in progress then he had every right to stop and detain your men Lieutenant. What might be left of them.\"\n\nJace looked at him and the Captain, \"All military personnel entering into these wilds will be checked for valid orders bringing them here. Else, if they do not have family here, they are barred from this section of wilds unless called upon by the Minister of Defense.\n\nYou using these wilds 'locations' as your without retribution whore houses is over. You may send one sergeant or above to this location to retrieve your vehicle, with another sergeant or above driving them out to get it. They must depart this area immediately as I want no attempts at witness intimidation occurring. Have I made myself clear Lieutenant?\"\n\nHe sighed, \"You should not be allowed to do this to a member of the entitled race.\"\n\nJace looked over, \"I am an entitled individual under the law. Either way, I still outrank you out here. You show yourself in this town to intimidate witnesses and you will find it to be a very unpleasant visit. I do not answer to the military in these matters.\n\nI answer to Commander Cooper and the Director of the Marshal Service in that order. From there it goes into the Minister of Defense and the King. My job is to protect the people, the City-States citizens. Not your rapist military squad I have in front of me.\"\n\nSeveral dropped from the call. The director and Minister of Defense remained after Brandialshane ordered those two back to the Avalon wilds more forcefully.\n\nThe Minister of Defense sighed, \"Not a day back and you have an incident.\"\n\nJace chuckled, \"The Royal family sent me here to clean this section of wilds up. I cannot do that with a lawless military taking liberties with the mostly female population.\n\nAs I said 5 out of the 6 were barred from outside military sexual contact. They are still in their first 2 years. I was barred even further to only those designated within the program, and the ice bitch. You know this.\"\n\nThe Minister of Defense nodded, \"You are correct on those grounds alone. You're going to need medical support out there.\"\n\nCooper walked up, \"We have the photographic and forensic collection going. There were 4 women in that house, the youngest being 13. All were assaulted and they're barred from having weapons. They were smart enough to have surveillance set up in the home and we have collected that. We know the Sergeant is the only one who raped the 13-year-old, but he did it in front of his men and he got her pregnant.\"\n\nThe Minister of Defense sighed, \"Take them into custody, no release to the military, in this case, will be authorized.\"\n\nJace watched the 4 of them get loaded into 2 Marshal Squad cars and taken back to the city directly after being processed inside of the local station. He did not want them there overnight. Jace went over to the home and gave each of them a card with a contact number for him and a rape counselor.\n\nHe came out to see Coop talking with a short Blonde, far shorter than him by almost 30cm. She looked over, \"I don't know if you think that helped us or if you are just a fool.\"\n\nJace looked at her, \"It is the law. If you support what happened to these women then I am in bigger trouble in dealing with the local population than I thought.\"\n\nShe sighed, \"No, I don't condone it but have no serious protection out here at night when your Marshals leave.\"\n\nHe walked over to the building and pulled up the schedule. He sighed and contacted Rayne, \"I am staying out here tonight. Your father can take my car back and the 2 of you can come back out tomorrow. This schedule for Marshals out here is fucked. It is getting late and they are not covering the nights. I will deal with any attempted reprisals.\"\n\nRayne asked, \"What happened?\"\n\nHe sent her the surveillance file to his private server and she watched. She went and got sick. She returned to him, \"Alright. You watch over those people. I will be there in the morning with my father or my mother if need be.\"\n\nHe nodded, \"That is fine also.\"\n\nJace turned back to the little blonde. He sighed, \"I will be here tonight. Follow me.\"\n\nHe went to the house where the ladies had been attacked. Two of them stayed behind the girl and her mother had been taken to the city to deal with the rape and unwanted pregnancy. Coop contacted the director to ensure female Marshals would be on-duty at the hospital to keep the military away from them.\n\nJace ran them all through facial recognition and pulled out a pad and handed it to them, \"Please sign this.\"\n\nAll three ladies signed it and he opened his bag and handed each one a 37Z Series laser pistol. He looked at them, \"You are all deputized, at least for tonight as Marshals. I am allowed to do this and for any attempted reprisals you should have the ability to defend yourselves. You all have 2-year stints in the military and have had children. No criminal history. I am not saying you have to shoot someone but if the need arises you have the means tonight. I will be awake all night.\"\n\nThe little blonde who was the de facto Mayor or leader of their council was shocked he put a gun into her hand. She sighed, \"You know I have been involved in protests of our government in the past?\"\n\nJace nodded, \"Peaceful protests. Does not make you wrong to carry that, if anything, at this moment, it makes you the most like-minded individual I have met in this matter.\"\n\nHe walked back toward the Marshal's office as the 3 lades all stared after him in shock.\n\nThe little Blonde Sarah Fern looked back at the other two, \"I am going to do a search on this guy.\"\n\nOne of the other ladies, Jane, smiled and shook her head, \"Don't. You won't find much. I checked when I heard about him being put in charge, then that dragon vid on my recorder. The man is a badass former Spec-Ops person who went toe-to-toe with a fucking dragon when this area was overrun.\n\nShortly before you came back from your tour in the service. He is married with 6 children he is raising. The government did not divide out his kids from his wife who was not even married yet when she gave birth to them. He has some serious connections.\"\n\nSarah looked over at Jane Gimble, \"Clue me in on what you are talking about.\"\n\nShe went to her display and pulled up the vid of the dragon attack. She looked at it and nearly got sick at seeing his leg getting ripped off. She looked at her, \"You are sure that is him?\"\n\nJane nodded, \"I know it is him and while the press bought, he was at home recuperating I have this. She pulled up a local vid she shot of his silver sword cutting a hole through the nose of a blue dragon before disappearing just as quickly. She looked over at her, \"You cannot see who is wielding those.\"\n\nJane nodded, \"True, but the other vid showed silver blades on the red Dragon to cut off a toe. I bet you anything that those 2 swords are silver-plasma based. Just like the one that took off the toe on that dragon.\"\n\nThey looked out the window and Jace worked to reload his partially used clip from the shots he fired earlier. He had a sheet of plywood up and was using his bow to shoot out a message that stated 'Marshals are on-duty.\" He set that up so anyone driving into town would see it. He used plasma shots and they were silver.\n\nSarah looked back, \"So he is the one who saved the town while I was in the service?\"\n\nShe sighed, \"He started it and brought down 3 jets. The military showed up later but a blue dragon had been run off and I saw some of the corpses hauled out of here. If I had to guess, it was just him who did all of that.\n\nHe said he did not know how to teleport in that interview. I bet he does now. As far as I am concerned the man is a fucking hero. He killed half of those men right in front of us and to hell with the elven military officers he spoke with. He told them both to go fuck themselves.\"\n\nThe third woman Carla who was a good 15 years older, \"The man with him was General Cooper. He was the ranking human General when I was a little girl. Saw him on TV. He's had a couple of life extensions.\n\nJace married his daughter but it was well after the children were born and she kept them all. One of the 'talk shows' made mention of it when their marriage was announced. Commented on the fact he used a royal favor to make that happen for her. He has only been married a few days.\"\n\nSarah looked up, \"I saw him call his wife. She looked super sexy. Especially for just having kids, he mentioned being an entitled individual to those elven officers. Still, it is unusual that she got to keep her children. I guess a Royal favor can be requested for about anything. He had to have done some serious shit to earn one.\"\n\nSarah walked out and over to the 'town hall' as he was sitting in a chair out front with his bow in his lap. She walked over and sat next to him, \"I was talking with the ladies at the house.\"\n\nJace nodded, \"I know. I heard the whole conversation. You know I won't comment on those things.\"\n\nShe sighed, \"You could hear us?\"\n\nHe smiled and recited the conversation back verbatim. She shook her head, \"How in the hell did you do that?\"\n\nHe sighed, \"Genetics, CGR program I alluded to earlier. I was raised there. From conception forward.\"\n\nShe sighed, \"So your genetics are wildly crazy?\"\n\nHe laughed, \"Something like that. More exotic than your genetics are.\"\n\nShe shook her head, \"That went for over 80% of the people I served with. Some just relied on their genetics to get through and did shit.\"\n\nHe smiled, \"I know why you were discharged early. I know the state took your girl. They still paid you for 2-years of service so something happened you are not wanting to talk about and that is fine.\"\n\nShe looked at him, \"How did you know?\"\n\nJace smiled, \"I have cybernetics as well.\"\n\nShe pointed at his sword, \"When do you use swords?\"\n\nJace smiled, \"When I am in a sword fight or I need to attack with stealth. Since leaving the service I have not had much need for the swords. The Judge and my bow I use upfront. Please move inside, we have someone coming down the road.\"\n\nShe went to stand as he disappeared as he shifted from visible to invisible in front of her. She went into the town hall. It was almost 10 minutes later when 12 men in military garb and masks showed up in 2 vehicles. One of them went forward after exiting the vehicle and set the sign for the marshals of fire. It quickly went out.\n\nThe man looked around, \"Something put out that fire.\"\n\nHe pulled out a submachine gun and aimed it at the sign and fired. The shots ricocheted back at the man and he was screaming and bleeding. His buddy came over to him, \"Who shot you?\"\n\nHe shook his head, \"The bullets bounced back someone is using magic.\"\n\nHe looked at his stomach and he had holes he was bleeding from, \"Fuck if whoever is doing it is not a mage.\"\n\nThe man looked around, \"Meaning he could be anywhere.\"\n\nThe wounded man got shot with an arrow in the leg from behind and screamed.\n\nJace called out from a distance, \"You are under arrest for the reckless discharge of a firearm within town limits.\"\n\nThe other 11 men went looking for him further out.\n\nA few fired at random. Two went back to the Town Hall and came face-to-face with Sarah who shot the first man coming in the door. He fell back holding his arm, \"We got at least 2 here! I cannot get to the cells without some support.\"\n\nJace yelled out, \"Drop your weapons and you can spend the night in those cells.\"\n\nMore shots rang out except this time they ricocheted back toward the main group and 4 of them got hit by friendly fire. One man was in bad shape after that.\n\nThey started to fall back to find both vehicles had a flaming tornado descending upon them and then engulfed both until they exploded.\n\n3 of them tried to run up the road and ran into a telekinetic wall.\n\nJace called out, \"Jace Rivers, Captain San Angeles Marshal service the 12 of you are under arrest.\"\n\nOne of them started firing in the direction of his voice. \"You are just one man and there are 12 of us.\"\n\nJace shot him with the Judge straight in the face, \"11 of you and counting.\"\n\nThe two badly wounded men threw down their weapons. 3 others fired at the flashpoint for the judge. Jace appeared behind them and severed their heads from their bodies with his swords.\n\nHe called out, \"8 with 2 who have complied on dropping your weapons. He was visible now and held both silvered swords. Two men fired in his direction from 45 degrees off of each side, not direct flanking but close enough.\n\nHe sent both swords straight at them and stabbed them both in the face. Then he had them fly back into his hands. Jace looked over and the rest started surrendering. One tried to run to be cut off by 2 ladies with laser pistols pointed at him.\n\nHe stopped once he realized he had nowhere to go and those women looked pissed. One of them shot him just for spite until he dropped his gun. Jace took the remaining ones into the jail and processed them. All human.\n\nHe shook his head, \"I am surprised you did not have an elf with you.\"\n\nThe one who got shot by Sarah sighed, \"We did. You killed him with those fucking swords.\"\n\nJace contacted the director at home after gathering the bodies together.\n\nThe Director looked tired, \"Do you know what time it is?\"\n\nJace showed him the images of the dead bodies on the ground including one elf he had a record for, \"Another lieutenant assigned to that same captain.\"\n\nDirector Younger cursed, \"What happened?\"\n\nJace sent him the combat footage, most in infrared.\n\nHe shook his head, \"I have 4 more Marshals coming from the city. How many Marshals stayed with you?\"\n\nJace sighed, \"I deputized 3 military veterans after finding out whoever has been watching over this place in my absence has left no Marshals on duty at night. That will change.\"\n\nThe director sighed, \"Alright, You get hit?\"\n\nJace nodded, \"A few bullets, lost 118Ki from this attack. I got them all on conspiracy to commit murder and they wanted into the jail cells so this is likely an attempted jailbreak not knowing I sent the previous group back to the city already.\"\n\nHe heard groans coming from the cells. \"Based on the groaning in the cells I would say we have a winner. We need medical services as we have 4 wounded here, 5 dead, and 3 who were smart enough, soon enough, to get away without serious injury. At no time did the elf identify themselves to me or the other 3 deputized Marshals on duty at this hour.\"\n\nThe director nodded, \"Understood. I have your surveillance vid, I will contact hospital services and have Coop bring them into the wilds. Have 2 other units coming from the city as you have them all in the processing system. I had set a couple of female Marshals as guards at the hospital, just in case with the victims. Have not heard from them, but Coop sent the request to me. He expected some witness intimidation.\"\n\n---\n\nThe Director contacted the Minister of Defense who glared at his display, \"What has Jace done now?\"\n\nThe Director sent him the footage and The Minister of Defense shook his head, \"That man was not a son of the Royal Family but one of his distant cousins. I will contact him. Let him know what happened and the fact that either he acted alone or the Captain he has ordered the attack on that small town.\"\n\n---\n\nThe Minister of Defense contacted Brandialshane directly who answered. They needed little in the way of sleep. He sighed, \"Lieutenant Brandiaso was killed this evening in an attempted jail break out in that small town of Evergreen in the Avalon Wilds.\n\nHe never identified himself, wore a mask with 11 other humans, and had his head removed from its neck by Jace when they attacked him and the town. Either he acted on his own or your captain ordered him to attack that town.",
        "Either way, the death had been deemed justified based on surveillance vid from the area. Jace recorded everything. He asked them to surrender several times and they failed to do so. He put a large sign coming into town stating Marshals were on duty.\n\nHe deputized 3 veterans and the men they attempted to break out of jail had already been taken to the city. He threw his life away for nothing other than someone's wounded pride.\"\n\nThe Elven leader bowed his head, \"I will deal with the elven matter. What are you doing with the humans captured?\"\n\nThe Minister of Defense shook his head, \"I cannot afford to keep losing military bodies like this. I will be contacting the Major over the Captain and the General over our Military and get them both in front of my desk in the morning. That area is off-limits to the military unless they get orders from the King via me. This has to stop.\"\n\nHe sent him another file, \"The rape of that child in case you wanted to see what Jace is fighting?\"\n\nBrandialshane shook his head, \"I have daughters as well. I will bring in all parties involved this evening.\"\n\nHe walked back into his hall and sent dispatches to the elven general of the Army, who sat below the Dragon General of the Army. He appeared a few minutes later with the Major, Captain, and the other Lieutenant.\n\nHe looked across and with a very angry tone, \"Your attacks into the wilds are to cease immediately. Lieutenant Brandiaso is dead and I have to inform his family come morning because someone got their nose bent out of shape with Jace Rivers.\"\n\nThe Captain looked at the Lieutenant who looked back at the Captain. Brandialshane screamed, \"I want them both discharged from the military! They apparently cannot handle working with humans. Especially the one who brought my youngest son's legacy home. Kindra is carrying a child because of that man.\n\nHe finished 2 years of service in a Mastro97A unit, taught by my youngest son. The man is a one-man army and you do not want to go to war with him! The Minister of Defense will be calling you forward in the morning General.\n\nYou let him know of these 2 being discharged for cause. Their next oldest siblings or younger if no older ones are available are to be brought in as replacements to save their family honor, as these 2 apparently have lost their honor!\"\n\nThe General looked over, \"Captain Jace, he brought down my predecessor, found where he had gone rogue against the King. He saved the information and gave it to the King directly. I know enough to know he is not a man to be trifled with.\"\n\nKindra was in the hall, \"My husband gave him the name Shidan Gresan for a reason. The man is a font or a rod into the magical realm if he chooses to unload. He is not elven but his power is extensive.\"\n\nBrandialshane threw over the combat footage and made them all watch this man in action. She shook her head, \"He was patient and not angry. He told me once he saw what Jace could do if angered. He dropped 4 jets and 8 drones within 5 km of him with one spell.\n\nHe saved my husband at least 4 times and when he could not save him, because of damage to a Ki unit, he still survived his entire required military tour. Then he came to us knowing Brandialshane could have had him killed because of that ring on his finger. He did it under orders and respected our family. He respected our ways. He is worthy of respect and this should stop.\"\n\nThe General nodded, \"Your husband should not have discussed that with you. The royal family is heavily reliant and invested in this human. Some of our researchers were taken to task because of the purity problem. They know we have been working to resolve it for our own race.\n\nThey know we have failed at every turn. The lead researcher in this effort was killed outright because of his failures. Now it is under dragon oversight to try and find a solution. Not that they have a researcher who can do the work.\"\n\nBrandialshane held up a hand, \"We came dangerously close to losing our status as an entitled race because of that she-devil that led the research at CGR. Her greatest success story in her efforts is the man you have taken on in the last day and it has cost you dearly.\n\nHe is an entitled individual and as far as any of you are concerned, his voice carries the weight of the Elven Royal Family. When he asks you to back off, you damned well better back off and bring the issue here for debate if it is needed. If you cannot justify it before me then you are being petty in this matter. Now GO!\"\n\nCrostanlir, his eldest, saw the toll this was taking on his father. He knew his father would likely be forced to step down and if that happened this Jace Rivers 'perceived status' by the Elven Royal House would be his to deal with. Then his status would vanish along with Jace if he had anything to say about it. He left the hall as commanded.\n\nThe room cleared out and he sighed, \"My youngest son warned me about Jace.\" As he looked at Kindra whom he had held back. \"He could be the future of humanity and he is extremely deadly, yet he respects us and the San Angeles Royal Family.\n\nHe is not out to be a separate race, in fact, I was told by a member of the CGR board he did not want his genetics to be seen as a potential threat to any other race. He knew the dangers and folly of that happening. I have heard rumors she is still alive. Is so, this Sylvia might look to capitalize upon it.\"\n\nKindra nodded, \"I believe it. He seemed very wise, from everything I have watched on the man. I worry about what will happen to our people if you step aside. Crostanlir is not likely to keep that in place. I have kept tabs on Jace.\n\nI have a couple of my own spies if you will that work to keep a distant eye on him. They just monitor, nothing nefarious, I just wanted to see how he progressed into civilian life. I respect the man for what he has done for me and our family.\"\n\nBrandialshane just nodded, \"As you should my daughter. You carry 2 of my grandchildren in you from my late son because of him. He does not know you carry two, just that you are due to have a child thanks to him. As to Crostanlir, that is a matter I will take up with the royal family when the time comes. It will likely come sooner if something else is found.\"\n\n---\n\nCoop led the procession of ambulances and Marshals back to that little town he sighed under his breath, \"I should have just stayed with him.\"\n\nHe heard his wife laughing in his head, \"You get that feeling and you should follow it. I would have understood.\"\n\nRayne was driving Jace's car and was bringing up the rear as they pulled into the small town. Looked like half the town population was up and about with all the vehicles coming in. She saw the burned-out remains of two military vehicles and shook her head. The third had not been picked up yet.\n\nCoop called out to one of the other Marshals, \"Taylor, take that military transport back to the city when we go. We want it out of this town.\"\n\nHe walked up to Jace who sat in a chair on the porch out in front of the building, the chair propped on two legs as Coop walked toward him, \"Word has it the military is being told from the top-down that this area is out of bounds for now.\"\n\nJace stood up, \"Taylor, you were in charge while I was recovering. You are on the night shift for the next 7 days. Return this evening. Cycle the men through, one night for everyone. This town is not to go without having 2 marshals on duty here at night from now on. I think I got them to finally shut down the attacks after last night.\"\n\nHe pointed over, \"Sarah, Jane, and Carla have all been issued a laser pistol and are in our reserves out here if the need arises. Ensure they get paid for last night, they fucking earned it. I am appointing Jane as an acting sheriff here until an election can be held. She can find a couple of deputies from the others. No criminal histories please.\"\n\nJane nodded, \"Alright. Liz and Ginna then.\" He looked them over nodded, had them sign forms, and issued them each a laser sidearm.\n\nTaylor nodded, \"I was always told not to mess with our military.\"\n\nCoop looked over, \"I am telling you flat out. Don't ignore the fucking law! They break it, raise the flag, and let the powers that be deal with the matter!\"\n\nRayne came up and hugged Jace, \"Hell of a start.\"\n\nJace nodded, and pointed to Sarah, \"She covered the jail when they tried to break in, the other 2 caught the one soldier who tried to run. He got shot by Jane for his effort, she was not scared to fire on him, hence why she is the new sheriff. I killed an Elven Lieutenant last night.\"\n\nRayne nodded, \"Already been ruled justified according to father.\"\n\nSarah looked at Rayne, \"Gods you are gorgeous.\"\n\nRayne smiled at the shorter woman, \"You are rather pretty yourself.\"\n\nSarah blushed at Rayne's obvious flirting back. Jace sighed and waved the 2 of them into the back room. He smiled at Sarah, \"Her flirting is more than flirting. She wants us to add a second wife into our marriage.\"\n\nSarah looked at her, \"Me?\"\n\nRayne shrugged her shoulders, \"We have not talked about you yet but I should warn you after the wedding he fucked and made love to me for 3 days and nights straight. We stopped only for some rest breaks and food. I went through 28 healing potions to keep going. I am pregnant again with 4 on the way now to go with the 6 we already have.\"\n\nSarah sighed, \"How do you have all of your children after that?\"\n\nJace sighed, \"Military, royal favor as was alluded to. I cashed in so she could keep all of the children sired by me.\"\n\nRayne nodded, \"After knowing me for 2 days. He put together that his assigned mate in the program, his first if you will. She was my twin sister who had been genetically altered to match him, then she was killed inside the program like many others. There is a lot more to that story but that is what I could share right now.\"\n\nSarah nodded, \"You gave both women children?\"\n\nJace nodded, \"Though hers are the only ones I will get to know. Again, something not available for discussion right now. You are 16 cm shorter than Rayne and 30 shorter than me. That might present some problems for you.\"\n\nSarah asked, \"Why would my height be a problem?\"\n\nRayne leaned over and kissed her on the cheek and whispered, \"Because he is fucking hung and can stay hard for hours, correction, days. He never went soft in 3 days. Not until a few hours after we had agreed to stop our honeymoon if you would.\"\n\nSarah turned red and then caught sight of Rayne's rings. She looked up, \"Damn girl, that is a massive ring.\"\n\nRayne smiled, \"He spent a couple of weeks designing it with the jeweler and then 2 months to build it and get all of the stones he wanted particular sizes. 9.6 carrots in diamonds and 12.7 carrots in sapphires.\" She pulled off her engagement ring and showed her the internal band for when she was pregnant. She put it back on, \"This would seem massive on your hand. He would have to design something thinner if we looked to add you to our group. You are 78% human, 5% species 874, 5% dwarven which did not help your height, 4% elven, and 8% gold dragon.\n\nShe looked at Rayne, \"How did you know?\"\n\nRayne smiled, \"He had me outfitted with the same cybernetic eye replacement. It allows for greater sensitivity on the bio-scan I just did. He probably did it yesterday.\"\n\nJace smiled, \"I have run one on every woman I have met in town. She asked me to keep an eye open for any potential matches while I am out here. One of the things a doctor told me was genetics is important. I told him I thought love was more important for marrying someone.\n\nHe explained his view was centered on the children making it through evaluations and living beyond those. The better the genetics, the better future for the offspring. I met 4 women in town who had higher percentages by 4-15% less human in the genetic mix if you will over what you have. I am banking on education, tutoring, and love over 'just' pure genetics. I cannot say that I love you, as I just met you.\n\nBut you are one of the strongest-willed women I have met in town. I tend to love strong-willed women. Rayne is a mage. An enchanter. She did the work on the armor I am wearing.\n\nAlso on some of the crystals tied into my cybernetics to detect certain things that are 'non-standard.' Her mother, an enchanter who is retired military, knows how to work weather magic as well, which we have in use at our home. They live next door.\"\n\nSarah looked at Jace, \"How do I compare to you?\"\n\nHe smiled and brought up his file so she could read the list of his genetics. She shook her head, \"So someone in town has less human genetics than you do?\"\n\nHe nodded, \"Just like Coop and Rayne. He is 25% species 874, has no elven, giant, or troll. Only half as much on the other races. What he did for his daughter, Rayne was add in some genetics to ensure she made it into the mage corp, as her mother did.\n\nRayne has 14% 874 if you will. 10% eleven and 6% silver dragon. The last two were increases on pieces her mother gave her. She had several 1% of this and that in her mix because of her parents. Some were lost in the resequencing. She has 66% human DNA, less than I have but my numbers are more balanced.\n\nThey worked to strike a balance with mine while making it a viable solution if you will for the military. Even that did not strike quite the right balance, as my mix was not continued because of one abnormality that I won't get into right now.\"\n\nRayne looked over, \"I have 4 on the way and 6 born which makes him very virile, that is a part of the issue if you would. When he was in the CGR program no woman had fewer than 2 children with each birth.\n\nHe has twins or better thus far with each mate he has had. In the program, he had very few options in who he was selected to mate with as they underwent gene therapy to match him. He was restricted while in the military from outside mating to just those in the program or permitted.\"\n\nSarah nodded, \"I had heard rumors of CGR and restrictions, this is the first I have heard of them being true. I do not watch the news and knew the least about you from most of the ladies in town. I was surprised to hear some things.\"\n\nJace went over to the display and brought up the news talking about military restrictions being put into place on all wilderness areas in regards to mating efforts. They were barred from exploring the areas without having some form of contract in place. With the potential mates agreeing to the sex to generate children or establish a marriage. All cases of rape would be examined and prosecuted in civilian courts.\n\nJace looked over at Sarah, \"Am I here to help?\"\n\nShe looked at the broadcast from the Royal Palace and back at Jace and nodded, \"I think you are here to help.\"\n\nJace nodded, \"Now you know this was not just a fluke or a one-time deal with me.\"\n\nHe opened a message he received and then displayed it to the screen. Sarah asked, \"Who is Kindra?\"\n\nJace sighed, \"My former Elven Commander and friend who trained me. He died in service to the City-State but Kindra was his wife and a member of the Royal Elven household through that marriage. Their leader, who I contacted earlier, came down hard on those officers involved, removing 2 of them from military service.\n\nShe wanted me to know they did not find me at fault for the death of the elven Lieutenant last night. They held the elven members who ruled over him responsible for his death. My commander was the youngest son of Brandialshane and I had to go and meet him to fulfill a dying request.\n\nA personal mission of honor. Once I completed my military service. He respected my honor at the risk of personal injury or even death in completing that task. I brought him answers, hope, and Kindra is expecting a child from what I returned to the family.\n\nI brought back his legacy which he found, and she found, to be more important than his dead body. His father knew enough to know his son's body was not desecrated which brought them a sense of peace if you will as well. This was while they neared the end of his period of mourning.\"\n\nHe played a recording of the exchange he had with them. Stopping after he stood to address Marshal matters. Sarah looked over, \"That name they gave you. It is fitting after what I saw last night.\"\n\nJace nodded, \"I gave them every chance to surrender and those who died did so after injuring me. I took no pleasure in killing our own military troops. They were out of line and the commanders they had were not helping to keep the rule of law in place. I was not given much of a choice in the matter.\"\n\nCoop knocked on the door and entered he looked over, \"You should head home and get some sleep.\"\n\nJace nodded, \"I should but want to talk with the men first. An announcement went out and it covered all areas in the state defined as 'wilds.' This will limit population growth out here unless they get those forms in place.\n\nSarah, pass the word to the ladies in town who are looking to get pregnant to establish a list of those looking for love and children. Then set up some form of social connection through dating sites for those ladies to find potential mates in the matter.\"\n\nSarah nodded, \"The biggest drawback is losing them all to places like CGR.\"\n\nJace nodded, \"I know but those are the risks if the relationship does not work out. They find a retiring military or separating military man who is interested in helping to build the population and have a family would be ideal mates. There are 4 small towns like this in the wilds here and I will have to visit them soon.\"\n\nSarah sighed, \"Some are more militant and likely to be confrontational. Larger male populations, that were forcibly sterilized to keep their genetics out of the pool as it were. One is led by a half-brother of mine who is 85% human, and sterile because his mental capacity did not develop well.\n\nHe finished in the bottom fifth of the class and was designated a farmer. At least the bottom fifth that survived that year. Only 1,200 in that small farming town. He has a wife but no means of getting her pregnant himself. She is pretty but a fucking airhead. He is 2 years older than me and mad at the world.\n\nJace sighed, \"We should go and see this little village before we head home. We will have to pass through here on the way back. You want to come along Sarah?\" He is your brother and you might be able to smooth things over for us.\"\n\nShe nodded, \"Would not hurt I guess.\"\n\nJace sent a message to Coop letting him know where he was headed. Rayne had to drain her breasts before they got on the road. He gave her time in the office to do it in private for once. Coop looked over and nodded at him as he got the latest batch of prisoners he had to deal with.\n\nHe had orders from the director to get them all out of the wilds today. Jace knew because he was copied on that order by Coop, which is why he left them to it and got in his vehicle. They drove down the small road for 2 hours.\n\nJace stopped twice and used the sat radio to destroy missed landmines that had been placed or forgotten when the wilds were swept. Sarah looked at him, \"How did you know the mines were there?\"\n\nHe brought up a screen and connected his cybernetic eye in so she could see the x-ray images he showed for the ground. Before he cycled through the frequencies and detonated the mines that had remotes as well.\n\nJace nodded, \"No active remotes in the area.\"\n\nHe pulled up to a small series of buildings along this road and Sarah waved him to stop. He picked up several small weapons in the area and at least 1 RPG. He looked at Rayne, \"This might get confrontational. Stay close to the vehicle and watch for RPG fire.\"\n\nShe nodded. Sarah looked at Jace, \"You know they have an RPG out there?\"\n\nHe looked at her, \"At least one, maybe two. Coming in from the north-west.\"\n\nThey got out and went to another small diner. Jace had his bio scanners going and 4 men looked to be getting up to make a run for it when Jace held up a hand, \"I know the 4 of you have small bounties on you. Just sit. I did not come up here to go chasing pocket change from the King's coffers.\"",
        "They paused as Sarah came into view and they saw she carried a pistol. One looked at her, \"What would your brother say if he saw you cavorting around with a Marshal?\"\n\nJace looked over, \"If he were smart, thank you.\"\n\nThere was a display in the dinner that was off and Jace turned it on and sent the announcement up from earlier. Jace looked over, \"I dealt with 18 army types directly yesterday and last night. That brought this about. I am Captain Jace Rivers of the Marshal Service.\n\nYou know what that means? It means I can deputize locals to appoint acting Sheriffs over an area until such time as you have an election. I will take some of the wild out of the wilds one way or another. He picked up a glass filled with water and set it down. He brought up the connection to the Palace switchboard.\n\nHe looked at a female dragon manning it and sighed, \"I normally deal with the Minister of Defense but I need the Minister of Health Services.\"\n\nThe local owner looked miffed, \"You going to shut me down?\"\n\nJace looked at him, \"Yes, and no. Temporarily. But I need answers.\"\n\nA female dragon in full glory was on the screen she looked over, \"What can I do for you human?\"\n\nJace looked at her, \"Captain Jace Rivers, Marshal Service. I am looking at a glass of water here in a small-town diner in the Avalon wilds called Treemond. They have around 1,200 farmers who work in this area. If the numbers I am getting from this glass are affecting this whole area then we have a problem.\n\nWe are talking lead levels of 20,000 parts per million. That would affect their health and the health of the food they are growing. I need the latest information you have in this area and want to know how soon we can get water treatment facilities in place to fix this issue?\"\n\nThe dragon looked at him, \"How is this Marshal business?\"\n\nJace smiled, \"This area provides about 20% of the City-States food. Even if half of that was directed at only wilderness areas, humans and lead do not mix. It can retard mental development. With the issues I know the King is facing, this is something that can and should be fixed with filtration systems.\n\nI have a 47Lima access code for the Minister of Defense if you wish I can bring him into the call as this affects the overall health of the population within the City-State and our military. My job is to protect our citizens. If I found someone poisoning our water supply it would be my job to track them down. I'm working to ensure the clean-up is on track for a speedy resolution.\"\n\nShe sighed and put him on hold. She was back 5 minutes later, \"We have water evaluation crews en route to that area now.\"\n\nJace nodded, \"Be sure to send a few geology representatives to check out the soil at these farms as well to work the cleanup. Water trucks for the local population would be another good start. Else I will order this area evacuated due to a contamination spill and that would create issues in your food supplies losing that much farmland.\"\n\nShe rolled her eyes, \"They will be there. Water trucks to deal with the local population will be coming into this. Any other towns having this issue?\"\n\nJace smiled, \"The small town of Evergreen just inside of the wilds is just over 10,000 people. I have not visited the other 2 central farming areas, which are larger. I would assume given the overall problems that occurred here in the last year that we have issues.\n\nThis area's groundwater contamination could be affecting the entire Avalon wild's crop viability. It will require some testing and safeguards to be put into place to ensure the safety of our food supplies coming into the city. I am quite sure the King would not wish to get poisoned in such a manner.\"\n\nShe shook her head, \"Fair point. What about the protection of these people coming in to do this work?\"\n\nJace nodded, \"I will have the local barracks stand up to provide the protection and we will appoint a sheriff and a deputy in each of these areas to provide additional security. Mages can take them to a rallying point in Evergreen while this work is going on so they are better protected at night.\n\nI will contact the Director of the Marshal service to address those issues. To make him aware of the problems found and the need to bolster our numbers out here while this work is being done.\"\n\nHe ended the call and sent the recording to the Director. At least a hundred eyes staring at him in wonder.\n\nJace looked over, \"This is likely a longer-term problem given some of the things I have heard. Easier to treat it as something new and get them to fix it than challenge them on how long this could have been going on and ignored.\"\n\nSarah shook her head, \"Alright you are here to help us.\" She looked over. \"He took out a group of military rapists yesterday and stayed the night and took out the military men who tried the jailbreak.\n\nHe sent them to the city almost immediately but the military was unaware he gave that order and had them sent back. This included him killing 8 of the 18 himself and deputizing 3 of us because of our prior military training and giving us guns. He made Jane a Sheriff and she appointed 2 deputies to help out.\"\n\nJace looked outside, \"Speaking of guns we have 2 RPG's at the end of the road taking aim at my vehicle.\"\n\nHe stepped outside. \"Drop those weapons. You drop them and I will take it as you turning in found contraband weapons and turning them over to law enforcement. You fire them and you will find you are both dead.\"\n\nSarah looked out and sighed, \"I would listen to him. There are at least 100 people inside this building you would be killing if you fired those.\"\n\nOne set his gun down. The other man fired at Jace's vehicle. It traveled a meter, hit the force wall Jace had put in place around the man and he was blown up into thousands of flaming pieces. Jace walked over and picked up the other one and left the remains to burn. He put it in the trunk of his vehicle. \"Sarah, you know the man that fired.\"\n\nShe nodded, \"Distant cousin who was never right in the head. Never tracked. He was born off the grid.\"\n\nJace nodded and handed her a pad, \"Give me his name and next of kin information. At least one who is tracked.\"\n\nShe sighed, \"Parents are dead, died in the events that happened up in this area. My brother might have known him better.\"\n\nShe saw him walking into town and he looked rather pissed and had a metal crowbar that looked to be a few meters long. Probably used on repairing farming equipment he had. She walked out to try and calm him down. Jace left her to it but watched them.\n\nThe man pushed past Sarah and headed straight for Jace. Jace walked out toward the man. He said nothing. When he swung that large bar at Jace's head, Jace caught it with one hand and had his Judge in the other pointed at his head, \"Let go of the bar now!\"\n\nThe man released the bar and Jace holstered his gun. He took the bar in both hands and bent it until it snapped in 2 and tossed them down. He looked over, \"Marshal Rivers, Captain. Lose the fucking attitude or the next time you come at me with a weapon they will be burying you. Do you understand that?\"\n\nThe man nodded in fear of Jace. Jace sighed, \"Sarah, are all of the men up this way as fucked in the head that they cannot listen to reason?\"\n\nShe sighed, \"The women have better dispositions overall. There are a few who are retired or prior military and have small families. She walked him over to introduce him to a few of them. He appointed a local sheriff and deputy.\n\nJace looked at them, \"I know there are some small bounties for people around here. I am not out to censor speech and I have a bounty hunters license as well. Big bounties I come across will be brought in or brought down. Best they clear these wilds.\n\nAny other people off the grid will get registered until we find out how the government wishes to address them. All children are to be registered going forward. Any local midwives or doctors who fail in this job will be arrested. We need medical people in the wilds for everyone, so obey the law in those matters.\"\n\nHe had half the population out and about now watching what he did.\n\nJace sighed, \"You make stills for alcohol. Use the same process for plain water until the new filtration and water systems get in place. Expect days and not weeks. Do not stop these people from installing what is needed in your town and your homes.\n\nThey will take soil samples and find out how bad the contamination is for that. They may deploy mages to clean the land of contamination. Especially if they want safe food. I am an evoker, sniper, and I have cybernetic enhancements to do shit like snap metal bars and wield that gun.\n\nIt is called a Judge for a reason. You surrender to it to be judged or it will judge you. He took her brother and walked him to the outskirts and put the gun in his hand. \"Both hands shoot at the root on that distant tree about 100 meters out. Do it.\"\n\nHe aimed the gun and fired. He flew back a good 10 meters and the gun went flying. Jace moved fast enough to catch it by the handle before it hit the ground, turned at the tree, and left a stump for them to stare at. As the tree fell after 3 shots with just one hand. Jace looked at the crowd, \"I know restraint but for those who only value strength, you can see what I could do to them.\"\n\nHe activated his camouflage and continued talking. \"I can be anywhere at any time. This area is vast but it is always possible I am in the area.\"\n\nHe teleported and reappeared at the other end of the street. \"I hope my introduction to you all gets my point across. Shooting at my marshals will get you buried out here. Respect them as they will work to respect all of you. They have their orders and the laws they have to enforce.\n\nTo those men with minor warrants, you are barred from owning weapons. I find you with one, I will take you in and collect pocket change for doing it to go along with the weapons charges. Any weapons caches that were missed will be found in the coming months.\n\nIf you are hiding them, best to bring them to town and turn them over to your locally appointed sheriff for disposal. Being labeled an anarchist and terrorist is not going to help you or your neighbors. I will seize them and those who are hiding them will be brought in for telepathic interrogation at our local offices.\n\nIf needed, you will be turned over to the city Marshal service, Judges, and the prison system. In short, get your act together and get it all turned over for return and eventual destruction. This area will not remain the wilds forever if I have anything to say about it.\n\nThe King put me in charge out here, I am former Spec-Ops as I have demonstrated I can be an army of one when called for. I did nothing over the top today by my standards. Any questions before I head home? I had a long night fighting with the military in Evergreen.\"\n\nSarah commented, \"Including killing one elven Lieutenant and being cleared in the attack already.\"\n\nShe had been off talking with a group of the women who lived there about the rapes that occurred and him bringing it all to a halt and killing members of the military who failed to yield or surrender. One was her brother's wife who went up to her husband and whispered into his ears, \"You want children and that man could get them for us.\"\n\nJace walked over with Rayne, \"My wife and what you told him would have to have her approval.\"\n\nShe looked at Rayne who smiled, \"We will see, he needs to get his anger under control because having a child in a household with a man that angry would be irresponsible. Give it time and demonstrate through actions. Be a leader here and do as he asked of you.\n\nGet rid of the weapons while he works on getting your water and food decontaminated. If you lived in this area your whole life, know what he found would have slowed your learning abilities. He cannot fix that for you, but before you have children it needs to be fixed in the land.\"\n\nJace sent a text message off to the Director, the Minister of Defense, and the King covering his activities and what he came across in his first night and day on duty out in the wilds. The need to fix things for the health of all. He sent it to the Minister of Health Services as well. He left a lot unsaid but knew the King would be able to fill in the holes.\n\nThey got back into his vehicle and started driving. Rayne took her top off and started pumping milk out while they drove back. She sighed, \"It was getting painful. He ran a finger over her tits and pulled a drop off and sucked it into his mouth. Rayne smiled, \"I produce enough that you are not taking it from the children.\"\n\nHe nodded, \"I know.\"\n\nShe smiled, \"Our guest did not and she is twelve shades redder right now watching our interaction.\" Rayne used 2 pumps and had a towel in her lap. Jace had one hand on her leg and rubbed her pussy through the crotch of her pants while she kept hold of the pumps against her tits. 10 minutes in and she let out a major climax from his effort but he did not stop and sent her over the edge again. She smiled at him, \"I so fucking missed you last night.\"\n\nJace nodded, \"I know. I missed you as well but protecting those women was more important last night. I was right in my instincts. They would send an assault team. After the jail, they would have worked to intimidate the women to get the others from their unit off the hook.\n\nAll except the sergeant who raped the girl, but they likely did not know those men still faced conspiracy charges because he did that in front of the other women in the house and men in his unit. After he assaulted the girl's mother. Those two were in bad shape when sent to the hospital yesterday. They are still there.\"\n\nRayne sighed, \"I sent off a message to the hospital last night letting them know I was covering the hospital bill. To take care of those 2 women. The Director had two female Marshals posted outside the door. My father insisted.\n\nA group of 6 army women tried to get to them last night but were turned back by hospital security and the female marshals and told them to return to their unit. They backed off easily enough. That was a good 3 hours before they came after the town.\"\n\nJace nodded, \"One approach failed so they thought the second location would be easier. Brandialshane had those elven officers removed from the military based on the message I got. He was pissed.\"\n\nRayne sighed, \"We both know the King is not happy with the elves right now and this just added fuel to that fire. He will deal with them if they did not deal with the matter themselves.\"\n\nJace shook his head, \"Got a message back from the director, they are looking at over 10,000 reported rape cases and the children are being tested which is keeping the hospitals busy. They figure over a thousand fathers for that group, maybe 2,000 and that is only those who are reporting the matter. At least 38 of those cases were done by elves. 7 fathers identified thus far from the elven part of his military.\"\n\nRayne shook her head, \"I am sure Brandialshane is not happy about that either. If the mothers had any Elven DNA those children could be over the 50% threshold. Unless they grant an exemption, those children will be killed or submitted to genetic therapy to lower that percentage down.\"\n\nJace looked at Sarah who was crying, \"I had a daughter previously. Raped while still in the military by my elven commander before my birth control took effect. I tried to report it and I was released from service. The child was taken and submitted for resequencing.\n\nShe died during that because her percentage of eleven DNA was too high. I was kicked out of the military and he was promoted. Jace sent the recorded conversation back to the Director and Minister of Defense who sent him a message that it would be looked into.\n\nHe got a message back, \"Child was never re-sequenced. She was sent to CGR and died the next day in Sylvia's lab. No evidence to cross-check. The information was provided to Brandialshane and he stated his telepaths would get an answer from the complaint that had been previously dismissed. The accused was one of his sons.\"\n\nJace shook his head and sent a copy to Rayne and asked her mentally, \"You want her? You want her to come home with us?\"\n\nAs he drove toward Evergreen, Rayne smiled and nodded. Rayne asked Sarah, \"We have a spare bedroom if you wanted to see our home.\"\n\nShe looked at Rayne who smiled wide, \"Else you could spend the night with us.\"\n\nShe turned red from the flirting Rayne did with her. Sarah liked women more than men but considered herself bisexual and bordering on tri-sexual. She sighed, \"Alright. Keep going but I will reserve the spare bedroom at this point.\"\n\nShe simply nodded as Jace spoke, \"I have people looking into your case, unfortunately, other than the complaint no other evidence was found. There was an attack on CGR computer systems not long ago and any evidence from that would have been lost. They are exploring other options to try and get answers.\"\n\nHe went over what Sylvia did to Rayne's sister and Jess's children in regards to female offspring. He let her know it likely occurred with her daughter as well. \"The woman was vile.\" She cried some more and Rayne moved to the back to console her as she knew she was hurting after that.\n\nHe got them home and pulled into the garage. Sarah had stopped crying well before then and just looked at the massive homes in this neighborhood in awe as they approached, \"You live here?\"\n\nJace nodded, \"We had it built, double-gated outer marker stops air attacks and the inner one stops incoming teleportation, not outgoing.\" He walked her through the lower level and out back to see the pond. She shook her head, \"I have to ask, how much did all of this cost?\"\n\nHe smiled and turned around and took her to his room. She froze like a deer in the headlights. He waved her on and took her into the panic room. She looked over, \"Alright this looks like a military bunker.\"\n\nHe sighed, \"Three-story tall safe room. If you did not follow my story in the news, after the attack in the valley where I became known as a Marshal, we had several attacks on us in Rayne's former home and while in protective custody. I wanted to ensure my family was safe. That included Rayne's parents who live next door. They just started a second life extension so they look our age.\"\n\nShe nodded, \"So how much?\"\n\nHe sighed, \"That resource I found netted me 7 million DC's. I spent 2 million on the two homes and the other vacant lots at the end of this street. Including furnishings. Not counting bounties, I have turned in which is more than 1.5 million DC's or the other 5 million DC's that went to Jessica and myself each for Sylvia's activity when she was killed.\n\nWhen Jessica ended her life, her share of that came to me, no estate tax as she had kept it in a joint account with me that I set up for her. With the attack on the lab, I have no children in CGR from Rachel, Rayne's sister, or Jessica. Let alone those delivered by Sylvia.\n\nLife in the program required some compromises, hence the ones with Sylvia. I made sure, tried to anyway, that Jessica would not end up with the same issues Rachel had. There is a chance the children could be alive somewhere but I am not banking on it.\"\n\nShe looked over, \"You had to have had something on this Sylvia to set that up.\"\n\nHe nodded and brought up his file again and flipped to the defects. She held her hand over her mouth, \"You could live for centuries.\"\n\nJace nodded, \"To go along with a highly successful Spec-Ops tour in the military the King wants me kept around for obvious reasons.\"\n\nShe sighed and nodded, \"Alright you filled in some gaps. You waited until we were in this secure bunker to tell me.\"\n\nHe shook his head, \"No. I told you very little, the defect they would be concerned about you knowing that. But Rayne and I are trying to convince you to join us in bed. Hard to do with so many secrets.\"",
        "He walked her out and introduced her to the other four ladies in the house. He pointed out, \"2 cooks and nannies. Both lesbian couples. They help to keep things organized around here.\"\n\nRenna smiled at her, \"We restocked the healing potions in case you end up in his bed. She only had 2 left from the honeymoon and he did not stop when we came in to get the breast milk from the fridge in the room.\"\n\nRayne handed her a bag, \"More for the little ones.\" She nodded as Rayne and she walked down the hall. Jace and Sarah sat in the living room. She asked, \"How did you and Rayne hook up?\"\n\nJace held his head down, \"Set up done by Sylvia. One of the mitigating factors I used to protect my children from CGR and her in particular. We had an instant attraction. I had that same attraction with her sister in the program but they were not identical. We put the pieces together after the fact.\"\n\nSarah looked at him, \"I don't know that what we have could be called that.\"\n\nJace laughed and walked toward the kitchen to get something to drink. He looked back and Sarah had followed, \"You have not noticed. Except when talking with girlfriends about me to learn more and when I sent you into the town hall, that you have not left my side since meeting me?\"\n\nShe stopped and thought about it and turned red again at being embarrassed. She sighed, \"How did you get her in your bed?\"\n\nRayne laughed from behind her, \"The kids are sleeping right now. To answer your question, he flat out told me that I would be welcomed in his bed. I was trying to figure out how to get him in mine after I walked in on him naked.\n\nHe turned the tables and told me he would not be responsible for my ability to walk or being pregnant and he would go all night. He did for 9 hours straight that night. He gave me 6 children the night before he went into the wilds and then was gone on the Astral plane for 6 months.\n\n12 hours to him but 6 months to the rest of us. Nobody could find him. He reappeared on the other side of the world and was rescued over the open ocean. He did not know how to teleport and a gold dragon was sent to find and rescue him.\"\n\nSarah smiled, \"You know how to do it now. I saw you do it twice.\"\n\nJace nodded, \"I learned. My genetic combination was so unique and my magical talent raw. They left it that way for a long time and then started introducing magical training slowly. They wanted to see what I would come to access on my own.\n\nLike plane shifting onto the Astral Plane which I discovered in the heat of battle. The fire tornados and a magnetic wave I can use to mess with aircraft, missiles, or drones. The magnetic wave they had never seen before. My commander ran a scan over me after I returned from the Astral plane and determined where I went.\n\nI got Rayne and her mother Hellen to work on teaching me how to teleport over several months, while I was recovering. I could barely stand let alone walk for months as my leg regenerated. Speaking of which.\"\n\nHe went and attached a container to his glove and topped off his internal Ki unit. He looked at Sarah, \"Before you ask, I keep around 30,000 Ki on hand. I had about half of that during that mission and drained that to zero while working to be rescued. The King topped off my reserves after that as part of the payment for the resource I found. Some I have purchased to have on hand.\"\n\nRayne looked over, \"Did you increase the 2,000 Ki unit you had?\"\n\nJace shook his head, \"No, why?\"\n\nShe sighed, \"You are registering at 2,254Ki at the moment. He disconnected his Ki unit and she shook her head, \"300Ki at the moment.\"\n\nJace sighed, \"That defect was always a possibility.\" He turned it back on and topped off the internal unit.\n\nRayne nodded, \"2,300 Ki.\"\n\nShe ran a bio scan on him, \"Your dragon percentage increased by 2% as well.\"\n\nJace nodded, \"Saw that this morning. The 874 interacting with dragon genetics is my guess.\" He sent off a message to the King heavily encrypted informing him of the changes. He got back a message from the First Assistant, \"He stated it is something to keep an eye upon. Likely caused by regrowing that leg. Not unheard of but your base Ki increase is something new. He thanks you for being honest about it.\"\n\nRayne pointed, \"Bedroom now. Let us see if any other changes are noted. The King could call him back into service and having that much Ki on hand has come in handy. He has given a few thousand Ki away to some Marshals who were protecting us while he recovered.\"\n\nThey went and Sarah followed at a distance and stopped just inside their bedroom door as Rayne pulled down his pants. She started gasping out a cough and Rayne looked over, \"He's not even hard, yet. I think the scales have thickened some. They have definitely moved or expanded if you will into your lower abdomen. Our 3 days of sex might have had a hand in that.\"\n\nHe nodded, \"Muscles used, and all of that?\"\n\nShe smiled at him and then sucked his cock into her mouth and went to work on bringing him hard. Taking it into her throat to Sarah's amazement. He looked over at Sarah who was pinned to the wall while Rayne went to town and then backed off as he was fully erect. They heard a small whimper from Sarah and they both looked at her.\n\nJace smiled, \"The choice is yours if you want to join us. I was supposed to ravage her last night. Instead, I spent it with you. Protecting you and those other ladies.\"\n\nShe was bright red but had not moved, yet. She finally walked forward as Rayne stood and got undressed. Not a stretch mark on her. She shook her head, \"She is fucking perfect.\"\n\nRayne smiled, \"We find you are the one for us and he will fix you up after you deliver, just like he did for me. She pumped out more milk while Sarah debated.\n\nSarah finally took her clothes off and looked at Rayne, \"What now?\"\n\nRayne got on the bed and spread her legs, \"Come to me.\"\n\nSarah went over and kissed Rayne and she found Jace's cock next to her leg and his hand over Sarah's pussy rubbing it slowly. She moaned out. Sarah sat up on the bed and looked at his cock and took it into her mouth. He flipped her over and started sucking out her dripping cunt which sent her screaming out a long and loud climax. Rayne closed the door and activated the silence stone.\n\nRayne laughed, \"I forgot to mention his extremely talented and long tongue.\"\n\nSarah held on and wailed again. He sat and spun around. \"Rayne, you finish with the pumps then join us.\" He lined up his cock on Sarah who grabbed it and helped get it straight, \"Bigger than any toy I have used.\"\n\nShe moaned out as she slowly slid down as he sat down. Rayne just smiled, \"She is definitely feeling it.\"\n\nSarah tried not to laugh but those occurred in between her moans as he stretched out her opening slowly, she called out, \"Fuck he is big.\"\n\nJace whispered to her, \"Wait until we both take your ass as well.\"\n\nShe went wide eyes and then wailed loudly as he brought her down pelvis to pelvis. She was sweating, \"You're going to do my ass with that?\"\n\nHe nodded, \"Also her hand and my hand. It will ensure you are opened enough to take the whole thing for the hours we share with you today and tonight.\"\n\nShe put her head on his shoulders, \"I kind of asked for this, didn't I?\"\n\nHe rolled her over and started fucking her with long strokes as Rayne sat her pussy on Sarah's face and found out Sarah had a talented tongue as well. She purred out, \"Sarah is hungry.\"\n\nJace smiled and started nailing her faster. Sarah shook in her orgasms as he kept pounding her very tight box and slid against her cervix every fourth or fifth thrust. Sarah wrapped her legs around him and went deep on Rayne's pussy including getting her hand inside.\n\nJace smiled at that. It had Rayne released out an ear splitter of a climax. He slammed forward and delivered his first load into Sarah. Sarah locked down with her pussy muscles and milked the shit out of his cock as the jets just kept filling her. She finally burst and sprayed him and Rayne.\n\nRayne laughed, \"Don't fight it, just let him go and he will break in your barely used pussy.\"\n\nRayne got up and Sarah was covered in juices and sweat as he started up immediately and she wailed out, \"Fuck, you were not joking about him just going on and on.\"\n\nHe rolled her over and he let her ride as Rayne came around minus the breast pumps and rubbed Sarah's clit. All while she worked fingers into Sarah's ass. She did not stop for 30 minutes until her hand was inside, using what semen leaked out of Sarah's pussy and onto the bed. Jace unloaded into Sarah's pussy again to another major climax from Sarah.\n\nRayne picked the girl up and turned her and attacked her full and dripping pussy herself. Jace got up and slid into Rayne in one smooth but fast stroke and then just fucked her fast and frantic. Rayne sent her over the edge again with her hand still in her ass. She twisted it and sent Sarah over the edge yet again. Rayne had both hands in her, one in her pussy which was easy after the stretching Jace gave her. Jace unloaded into Rayne's pussy as she peaked a screaming climax loud and proud.\n\nRayne looked back, \"Time out, she is going to need the bathroom. She is not used to our playing.\"\n\nHe backed away and Rayne helped her into the bathroom and onto one of the 2 toilets. She handed Sarah an enema kit, \"You will want to use that before he packs anything inside you up into your throat.\"\n\nSarah nodded, \"Like you just did. Thank you for the break. Fuck he is still hard.\"\n\nRayne smiled, \"3 days remember. When we rested, he rested hard inside one of my holes while we slept. I rode him a couple of times and got him to shoot off in his sleep. He still stayed hard. Part of his dragon genetics. I have silver and you have gold. His semen is very slick, reduces pain, and enhances pleasure.\"\n\nShe nodded. \"My pelvis is sore from the bumping and legs being thrust wide for so long by Jace. Also, my ass some from your hand.\"\n\nRayne nodded. \"I pulled some from your splayed pussy to put in your ass. You know where he is going next.\"\n\nSarah nodded, \"I think I will ask him to hold off on his hand in my ass just yet. Maybe, I haven't decided yet.\"\n\nRayne smiled, \"Until the lust takes you over like it did me and I told him both hands at the same time. He did and I fucking loved it but he had cum inside me a dozen times by that point and I felt no pain. I just wanted him more.\"\n\nSarah smiled, \"You are holding your hand over your pussy.\"\n\nRayne smiled, \"Saving it for your sweet thing.\"\n\nSarah sighed, \"You both are over the top in bed.\"\n\nRayne smiled, \"I was never that way with any other lover. Only him, and now you with him. He wasted no time splitting that pussy of yours open. Once you agreed. What are your thoughts on helping other women in the wilds?\"\n\nSarah looked over, \"I think, for the women, it would be a good idea. For us, I would be worried about losing him to another lover.\"\n\nRayne shook her head, \"No. He's very loyal and would not have brought you home without asking me first. We have cybernetic communications that are virtually untraceable. He asked what I wanted and I wanted you. You also just referred to us as 'us.'\"\n\nSarah smiled, \"I guess I did. I saw your image and wanted you. Then he reminded me I had not left his side since meeting him. Except when he told me to hide in the town hall because someone was coming and the girl talk, which he heard. I still shot one of the bastards who tried to get inside the jail.\"\n\nRayne helped her up and Jace was there and slid back in Sarah's pussy again while standing. She moaned into his kiss as he took her back to the bed and turned her to take her from behind. Freeing her mouth for Rayne's eager pussy that needed attention.\"\n\nHe fucked her for another hour using his dripping semen from the ejaculations to work his hand into her ass and sent her off to a new howling high which caused her to pass out. He pulled out of her pussy and ass. He slid his cock into her ass slowly and rolled her over. Rayne woke her up with her oral skills and she got that hand back into her splayed pussy while licking up his semen and Sarah's clit.\n\nSarah was on overload from the dual attention these 2 gave her. Jace fucked them both 12 times each before sending for food. The ladies were wasted on the bed curled up in each other's arms when the cooks dropped off food and the nannies raided the fridge again and emptied it. Jace gave both ladies a healing potion. \"I am nowhere near done with you 2.\"\n\nRayne smiled and Sarah shook her head, \"He is insatiable. Then so are you.\"\n\nShe downed the potion and then the food. Rayne got her to the bathroom. Jace went to the shower and pulled the ladies inside and fucked them both back to back twice in each hole in the shower and then filled them up with water and put them both on the toilets.\n\nHe then ate out both pussies while alternating which lady serviced his cock. He had them back in bed and surprised Sarah when he speared her ass with his tongue and sent her over the edge again. She sprayed all over Rayne's face as she had been moving to get at his cock.\n\nRayne laughed at her and took her back into the shower where those two did some one-on-one light petting lovemaking action until they both climaxed together. Jace stood back and watched the 2 of them slowly make love to each other in the shower. Sarah speared Rayne's ass with her tongue and sent her squirting in the shower. They came out wet and he carried them both back to bed and the sheets had been changed while they were in the bathroom.\n\nHe pulled Sarah on top of him and slowly made love to her for over an hour while Rayne emptied her tits and masturbated at the sight of it. Sarah watched Rayne as she smiled and climaxed from the show. Sarah shook her head and smiled. She kissed Jace, \"You 2 are outrageous and fantastic lovers.\"\n\nHe smiled, \"You have had us for 8 hours thus far. As he launched forward and filled her pussy again. She threw her head back and came loudly as Rayne echoed her from her own hand. He rolled her over again and slid back into her ass while Rayne gave her another healing potion which she drank like a drunken sailor in need of a fix, in one quick shot.\n\nJace held her legs open as Rayne came in for the attack again and cleaned out the stuffed and oozing pussy that beckoned here. Rayne turned around and kissed Sarah square on the mouth after flipping back and played with her tits while petting Sarah's pussy lightly until Jace fired off again in her ass.\n\nSarah looked back, \"I need the bathroom again.\"\n\nJace kept his cock in place, kept her in place while he carried her to the bathroom. He released her on the toilet. He got in the shower and fucked the living shit out of Rayne while Sarah sat on the toilet watching. She could not help but masturbate at the sight of those two in a heated rutting session.\n\nRayne pushed back just as much as he pushed forward. Sarah wanted her and she desired him more than any man she had ever known or heard of before. She got up and used the walls to get in the shower with them. She looked at Jace, \"Both hands.\"\n\nHe obliged her and slid them both home while attacking her clit again and sending her over the edge again and again. She just kept spraying him but he worked not to hurt her.\n\nSarah thought, 'Rayne was right, something about his semen cuts out the pain of getting so epically stretched.'\n\nRayne was behind her holding and kneading her tits while this occurred. Rayne whispered to her, \"You have twins growing in you now.\"\n\nSarah looked scared and Rayne smiled, \"A secret, but he has safety measures in place for wives and those we interview for wives. You could keep them all if you want to and if you can support them.\"\n\nShe kissed Rayne frantically as she came again and harder from the lust-filled attack on her nether regions. Jace pulled out his hands and used a handheld showerhead and sprayed up into the openings to send her off again and again as he cleaned her out. It was a powerful massaging spray.\n\nHe had them switch places and he fucked Rayne's pussy while Sarah sucked milk out of Rayne's breasts to keep from needing to go and get the pumps. They sent Rayne over the edge twice more before he cleaned up her nether regions in the same manner, including using both hands to open her up.\n\nSarah dropped to her knees and sucked his cock and could not get more than half of it into her mouth but she did not care. Sarah jacked the base fast and hard until he finally exploded into her mouth.\n\nShe swallowed most of it and then kissed Rayne for the rest. Rayne smiled, \"That's it, lover. He is going to stop for tonight after I suck him off twice more for the appetizing girlfriend he brought home for me.\"\n\nSarah chuckled, \"I feel tired and sore but fulfilled right now. You said, twins?\"\n\nJace sighed, \"No, some division could still occur over the next few days. My bio-monitor is fairly certain you have an even split of males to females. We both knew you were ovulating and this was likely to occur. The choice to have unprotected sex with us was your choice though.\"\n\nSarah nodded, \"You have an advantage with those bio-monitors.\"\n\nJace nodded, \"We know we are sexually compatible. We will see if it continues.\"\n\nHe carried her back to the bed which had clean sheets again. Rayne sucked him off twice more with a towel under him and one towel under Sara's ass as she watched and masturbated again as Rayne took the whole thing into her throat both times. When he shot off. He was still rigid and Rayne emptied out her tits again and put her nursing bra on with pads.\n\nShe smiled, \"You can ride him tonight in your sleep. I will have to get up and pump every few hours to offload milk for the children.\"\n\nSarah laughed, \"You are kidding right?\"\n\nJace pulled her on top and slid back into her pussy and she moaned out a climax on the way down. She looked him in the eyes. \"You are going to need more wives.\"\n\nRayne smiled, \"He has been cleared for 2, we might consider a third at some point. He seemed to enjoy the 2 of us making out as much as we did him making out with each of us.\"\n\nRayne came around and attacked Sarah's ass and sent her off one more time.\n\nRayne smiled, \"I said HE would be done.\"\n\nJace rubbed Sarah's ass, \"I never said that I would ever be done.\"\n\nHe slowly fucked her from the bottom all night long while the ladies got into petting each other's pussies every time Rayne got up to drain her tits. Sarah still climaxed left and right from him as he hit every pleasure center inside of her on every slow thrust into her.\n\nSarah leaned against his chest and loved the sensation of being fucked slowly in her sleep. Come morning she found him on top, Rayne sucking her tits and him building up speed as he filled her up again and she howled out an early morning climax from the pounding sensation in her pussy.\n\nHe backed off and Rayne dove in and cleaned Sarah out again while Sarah sucked his cock yet again. Sarah loved having oral done on her by those who knew how to do it. They were both pros from what she could tell. She got more than a mouth full and wore half of it.\n\nRayne climbed her way up and cleaned her off while he got in the shower. He came back with another pair of healing potions which Sarah and Rayne both downed in one go again. Sarah sighed out, \"Fuck, be careful what you wish for.\"\n\nRayne raised her head, \"You are up to 3 this morning. I think another egg dropped from your nocturnal riding.\"\n\nSarah shook her head. Jace smiled, \"We never did show you one of the many guest bedrooms available to you.\"\n\nSarah laughed and shook her head, \"You help me to the bathroom funny man. I still have to go back today. I don't know what I will tell the ladies about you.\"\n\nRayne smiled, \"Nothing about keeping your children. That is a secret, for now. Else every woman in the wilds will want to carry his children. The fact he is hung, has scales on his cock and his wife likes to play and invited you into our bed are allowed.",
        "The 11 hours of sex is up to you, as is the fact he spent 4 of those in your ass filling it up over and over again. The hands we both got into you can decide upon, as well as your hands into me. Based on the bottles we have on the table we went through 10 last night and that is a lot considering I went through 28 over 72 hours. 6 of those were yours.\n\nNot a complaint, just an observation. That first night with him I did not have healing potions on hand that night or the next morning until my mother went to the store and bought some for me. I was still moving slowly as you will soon see.\n\nJace helped both ladies into the shower and helped to keep the playing to a minimum even though he could still split logs into rails with that cock of his if called upon.\n\nThey got dressed and Rayne said goodbye in the garage. \"Give it a couple of days lover and see where your heart leads you.\"\n\nSarah smiled, \"I know where it is leading me at the moment, but your right.\"\n\nThey kissed goodbye and he took Sarah back to Evergreen. She was quiet during the first half of the trip and she looked at him, \"Any regrets?\"\n\nJace shook his head, \"I wanted to find a candidate that worked for both of us. You seem to fall into that category, but that is something you have to decide.\"\n\nShe sighed, \"I have to admit I was more into your wife at first until she slid your pants down and I thought, 'Oh my fucking god.' You have a fucking hot body and are hung. Most males I have encountered do not have your staying power or size. Fuck I came so many times from you. I had a boyfriend for a year.\n\nI came more in the first hour with you than in the one year I stayed with him. He was sterilized and another farmer. He married a friend of mine who liked to play as well, best friends in school. We had many little lesbian parties if you will and he walked in on one of them and joined us.\n\nShe found him more to her liking and I blessed them both when they wanted to get married. Hell, as the acting mayor I performed the ceremony. I spent the night before the wedding with her in my bed to ensure she was good, wet, and horny for his cock after the wedding.\n\nThey went to what is now your marshal's office for sex and came back 10 minutes later with his cum running down her leg. She had a short wedding dress and it was visible to everyone. Then your wife Rayne. She is just as aggressive and she can be a slow and tender lover.\n\nHer more than you in that area. You still rocked my world though and your slow lovemaking I did enjoy very much, but you are more aggressive from what I can tell. I think I enjoyed that from you a bit too much. Probably due to your military background.\n\nI don't know what I will say, especially to my brother...or his wife who was about ready to drool over you. After you snapped that bar in half, he liked to carry that around to intimidate people. You got through to a lot of the people in that town. Word will have spread to the other 2 by now.\"\n\nJace nodded at her, \"Well I can tell you she went back to bed after spending time with the children and talking with her mother, that would be a guess. I have not spoken to her but she was more than satisfied with you in our bed.\"\n\nThey pulled into Evergreen to see water trucks and more Marshal cars. He looked over, \"Morning everyone. I would like 2 Marshals to accompany the first team to the town I visited yesterday, Treemond. I am going to drive out to the other 2 today so this will be a procession. I will take point as we destroyed several mines yesterday. As Coop is here, he can ensure the roads are still clear of those and cycle frequencies as they had radio detonators.\"\n\nCoop nodded, \"I got here 15 minutes before you. I see you took someone home with you.\"\n\nJace laughed, \"Rayne invited her home to get a better understanding of local and Marshal relations if you will.\"\n\nCoop sent him a laughing message over in his head comms. Sarah sighed, \"I have some work to do today.\"\n\nThere was one road headed north before it split and Jace led the second group.\n\n---\n\nCarla and Jane came into Sarah's office and stared at her. Sarah just turned red. Finally, Jane nodded, \"The Marshal took you into his bed?\"\n\nSarah sighed, \"Jace and Rayne both did, for 11 hours of straight sex when I agreed to join them. We ate twice, massive quantities of really good food. They have 2 talented cooks and the food was great. I got naked on my own in their room.\n\nHe spent 4 of those hours in my ass and I felt nothing but pleasure from it from him. Something about his genetic mix did something. His semen is super slick and the man is fucking hung. He has some dragon DNA in him. Bronze if you noticed his skin tone.\n\nWell, that led to the discovery that the only location with scales was his well-endowed cock. His wife has Silver and she is just as insatiable and her body, even after 6 kids, was fucking perfect. No stretch marks, double DD tits and she is lactating which was a new experience for me and an unexpected turn-on.\n\nShe had to stop every few hours to empty those tits. I sucked some of it out of her at one point. The sex was fantastic. Gods could he get me to cum again and again. She could as well. They both got both hands into me at different points in the evening, in both holes.\n\nThey already have an opening set for a second wife in their marriage and I told him he might need a third. Rayne told me in the shower that the nannies joked about him needing 15 wives and he could fuck them all into submission if came down to it and he had that many.\n\nDamned if I did not tell you more than I wanted to, but I had to tell somebody. Speaking of which, Trish and her mother Violet are still both in the hospital and under Marshal Services' protection. What happened here also happened at the hospital on a smaller scale.\n\nRayne, Jace's insatiable and gorgeous red-headed wife, told me she was picking up their hospital bill. She told them to take care of the 2 ladies. Jace did not even blink at the cost. The man has millions of DC's as well. A large chunk of which comes from him being a bounty hunter.\"\n\nShe told them about what happened in Treemond and they had heard some of it from others but she kept it real and cut out the exaggerations. Sarah sighed, \"He knows how to teleport now and demonstrated that just because they could not see him did not mean he was not around. His armor is enchanted, his wife is an enchanter and did the work.\"\n\nJane looked at her, \"Just use some protection, else you will end up pregnant.\"\n\nSarah looked over and they read her face. \"He got you pregnant?\"\n\nShe nodded, \"Yes, he did. He knew it was likely to happen but it was left up to me to join them in bed. I wanted her, then when she pulled down his pants, I really desired what he had to offer. Fuck it, I want that man as well. They are both fantastic lovers.\n\nNeither was selfish and I was on sensory overload so many times between the 2 of them. We also had one-on-one sex while the others watched. Rayne and I masturbated while watching the show when he did the other. While he simply watched, waited, and smiled at our lovemaking.\"\n\nJane smiled, \"You going to marry him?\"\n\nShe sighed, \"I did not want to leave their bed this morning, but he had to come back. If I had not returned my brother would have gone ballistic. He took a swing at Jace with that metal bar he likes to carry around. Jace caught it, drew down on him, took it from him, and then snapped the fucking thing in half.\n\nScared the shit out of him and half that small town as they put a former Spec-Ops guy in charge out here. He has mods to be a one-man army. He was a one-man army in bed, that was for fucking sure. I went through 6 healing potions through the night and this morning.\n\nI am still sore from the royal fucking Rayne and he gave me. He fucked me in his sleep even. She is a prior mage corp. I mentioned he is part dragon. That length extends to his damned tongue as well. He could hit my cervix with it.\n\nBoth of them have mad oral skills and you both know how I feel about good oral sex, especially receiving it. She could get his cock into her throat. I could only get about half of it into my mouth. That woman is talented. We checked off the box for sexually compatible.\n\nAs to marriage, if I base it off one night of sex I would be married right fucking now. Rayne told me to give it a couple of days and see where my heart led me, what I wanted. The problem is I want to be back in their bed more than anything at the moment.\"\n\nShe looked up at somebody knocked on the door. Jane opened it to see Sarah's half-brother William and his wife Viv. William looked at her, \"I tried to reach you last night and was told you did not come home by your roommates.\"\n\nSarah rolled her eyes, \"I had an invitation from Rayne to go to the city and spend the night at her house.\"\n\nWilliam looked at his sister, \"Who is Rayne?\"\n\nSarah smiled, \"The wife of Marshal Rivers who was with us. The red-head with the fabulous tits 90% of the men were staring at, including you. Also, over half the women, including Viv, were in awe of her, jealous of her, or wanted her.\"\n\nHe sighed, \"What is their house like?\"\n\nShe sighed, \"12 bedrooms on the second floor, a 3-story safe room, the bottom one was underground. A first floor master with 4 staff quarters which were larger than my home here with 3 bedrooms in each for staff expansion or older children back from the military.\n\nThe safe room was a bunker in the middle of it and a large pond out in the backside of the property. The master bedroom and nursery were connected to the safe room. The nursery is fucking huge to house 40-50 children if needed. Inside of a double-gated entitled community with protection from aerial attacks and teleportation entry.\n\nIn short, his car is armored and his home has private security roaming the grounds. They had them built, two of them. The other one, Marshal Cooper and his wife own now. They own the 4 vacant lots at the end of a culdesac if they ever want to expand. Rayne is Marshal Cooper's daughter.\n\nThose people from the city headed out to Treemond behind Marshal Cooper and another pair of Marshals. Jace was headed to Riverton and Ferns today with the rest of the groups to get them testing things out there. Exactly what he said he was going to do to see to the safety of your food and water is being done.\"\n\nJane looked over, \"They told us our water is borderline and they are looking at installing a water tower with a filtration system to support a town 10 times our size. They should be here in a few days to make that happen. What I had come in to let you know about.\"\n\nSarah nodded at Jane and looked back at her brother.\n\nWilliam sighed, \"Did you fuck that Marshal?\"\n\nSarah laughed, \"Where do you get off on asking me that?! Fuck it! To answer your question, I had an amazing sexual experience with Rayne and Jace last night and into this morning. He is fucking hung and his dragon genetics extend into his tongue and his cock.\n\nThe man is solid muscle and he took his wife, who he married after she gave birth to 6 children by the way, and married her less than a week ago. Their 'honeymoon' was 3 days of constant sex, some minor rest, and food breaks.\n\nShe said he fucked her for 3 days straight and told her he would do that to her before the wedding. The man does not know how to go fucking soft. Is that what you wanted to hear, dear brother of mine?\"\n\nHe stormed out and slammed the door and Viv stood there and looked at her, \"How much of that is true?\"\n\nJane looked at Viv, \"You're married, but Jace is looking for a second wife and Sarah is a candidate, from what she told us before you came in. Sarah was being honest with him based on what she told us before you arrived. I doubt she lied to us. Rayne and Jace have their sights on Sarah and she said she is pregnant.\"\n\nViv looked wide-eyed, \"Just like that?\"\n\nSarah shook her head, \"After 11 hours of sex. Not 'just like that' and I have at least 3 on the way so far. That could be more if they divide out. Rayne is raising the 6 she delivered and has 4 more on the way. I saw the babies at their home before I left. They have 2 nannies and 2 cooks on staff, two lesbian couples. One of whom commented Jace could probably handle 15 wives and Rayne and I both agree he probably could but he does not wish to pursue that.\"\n\nViv looked at the door, \"Did you agree to marry him?\"\n\nSarah smiled, \"He won't marry you, Viv. You are already married and to a hot-head in the name of my infertile half-brother. I was told to take a couple of days and figure out what I wanted to do. We would see where it goes from there. I might be walking straight by then.\"\n\nTo emphasize her point she stood and walked around her desk and stood in front of Viv. She was slow and deliberate in placing her feet. Jane shook her head, \"She was that way going up the stairs to get into the building when we saw her get out of the Marshal's vehicle. She has not gone home to change from what she wore yesterday.\"\n\nSarah nodded, \"His staff cleaned my clothes while I was busy getting plowed over and over again. They even came in and changed the bedding several times and brought food to the room while we were all naked and still getting plowed. The cooks and nannies have seen them both naked.\n\nI was the only newcomer and I was in no shape to hide at that point. If you are lucky, he might consent to give you a child at some point but you got to get your husband under control first. You signed up for that 2 years ago Viv. I have seen no progress in that department.\"\n\n---\n\nJace had fewer issues in the other towns as he went about establishing some law and order and both were far larger but heavy on the female population. He brought in two high-value bounties that were close to 200,000 DC's each at the last stop. He caught them without weapons and by surprise when they were in the process of mining the road.\n\nThey were both injured because he started setting mines off before they could clear the area. The others in town, most of them, were glad to see them being taken away. Coop had to call in transports to Treemond to bring in the weapon caches that had been turned over.\n\nThe Director was pleased and then he was told it was Jace's doing after he visited the day before and scared the hell out of the locals. The next 2 days had this repeated in the other 2 towns. Almost twice the munitions they captured from the army invasion were gathered by the Marshals. The Director had a press conference on the matter after clearing it with the Royal Family.\n\n---\n\nThe Royal Family had a press briefing 2 days later to discuss the viral attack on all of the pure races that got Sylvia declared public enemy number 1 in all 83 provinces. Sylvia saw it from her bunker and was livid that they outed her as a mass murder on the loose. That she was still alive, and that had shut down a few obvious avenues of gaining allies she had hoped to capitalize upon later.\n\nHer spies, the 7 she had in circulation were captured and went comms dark within the hour. They either lost their tracking devices, had them replaced, or had been killed. She was now isolated.\n\nShe used her computer to locate the Genesis ground station in the 84th City-State to find a crater over 20 feet deep. She growled out, \"Fuck! They bombed the hell out of it! How did they know I would look for that? Did they know?\"\n\nShe could not figure out how they would have put that together as she had held that secret for over 200 years. They had cut off that contingency. She thought about her spies and realized she left them vulnerable and easy to detect.\n\nShe had given them more of the 874 species DNA in their bodies. They likely screened everyone for that DNA because of cutting it out of the lab. She made it too easy for them to be found.\n\nShe had nowhere to turn except her research. She activated one of her clones with only enough memories to serve as an assistant and deal with the brats that were driving her nuts. Her maternal skills were sorely lacking. She never raised a single child, she left that to those hired to look after the children and the wet nurses.\n\nShe started a new clone using cells from Jace's children and then stopped. She realized she had nothing to water down the 874 DNA with what she took. She did not take any children with lower numbers as she had enough to deal with these 181 children and no staff.\n\nThat was when she decided it was time to hunt up a couple of test subjects from those cavemen types she spotted. She'd have to figure out how to get them into the system later. For now, she needed more bodies to go in search of supplies before she ran out in less than a year.\n\nNow that she had a secondary nanny type clone online and she had lost those who could get supplies to her. She came back 2 days later with 3 captured subjects who were tied together.\n\nShe found her lab had been breached with an explosive charge, her subjects gone, dried blood and bullet casings all over the floor, her computers all destroyed except one, and her cloning stations destroyed and the bodies gone. She logged into the computer they had not been damaged to see the King of the Gold dragons on a vid message.\n\nThe Gold King smiled at her, \"You fucked up when you messed with us. Your words were you fucked up by messing with me. You are alone. We got good advice on how to hunt you from Jace. Not many rogue vid and communication signals in that part of the world. Your search for the genesis ground station after we captured your spies gave us your location.\n\nIt let us narrow down where you were hiding. We don't want clones as they are defective and amateurish constructs. Thus, we destroyed them, and that research outright. Disintegration spells worked wonders in that regard.\n\nThe children and samples are once again ours and are now split across facilities inside all 83 City-States as it was a joint raid. A small price to pay to bring you down. You did me a favor in your gloating, it united them all against you. We left you one computer to communicate with us from.\n\nTo answer the one question that remains. Can you reverse the impurity you did to the dragons and the entitled races while keeping the use of Ki available to us all? If you do not have the knowledge on that, then you are of no use to any City-State as agreed to by all 83 members of the RECD. Please keep in touch, ice bitch!\"\n\nSylvia screamed out in rage. \"I have never even explored that thought as I don't fucking look back. Even if I fucking knew how my mother did that, I would never reverse it for you sick fucks!\"\n\nShe saw the red dots from the laser sights and dozens of shots went off to ensure she was dead along with her captives. Invisible snipers left behind in her facility to await her return.\n\nThey had agreed the bounty on her would go to the one man who did not hunt her. The one who told them how to hunt her while he stayed clear of the action and out of her line of sight. 83 million DC's were transferred into Jace's account.\n\n---\n\nThe King sent a message to Jace, \"Sylvia is gone, no survivors in her hidden lab. You told us how to hunt her and you were right. She knew as much as you did and looked at that when she got desperate.\n\nWe, the entire Royal Eternal Council of Dragons tracked her and eliminated her and all her clones. Our deal still holds true but the bounty for her goes to you for your insight and advice into how to hunt that vicious ice bitch down.\n\nSigned and sealed by the King.\"\n\nThe King was unable to keep any of the existing children born, but he did get the lion's share of the samples captured instead. The other members of the council having divided the children across the upper hierarchy on the Executive Council instead. None having more than 2 children as some were 'inadvertently' killed in the raid. All of those with Sylvia's genetics.",
        "He had ensured the cloning data was completely destroyed. Though others, less important dragon families, wanted it. It was a joint mission but his team had gone in first and destroyed the cloning stations, terminals, and the one active clone in the facility who was obviously not her as it was too nurturing.\n\nThe success of the raid in bringing about the destruction of the anarchist who infected and killed thousands of dragons and others with the release of that virus was now laid to rest.\n\nHer body, and those remains of the clones, being returned to CGR for analysis, they had lied about the disintegration, at least it had not occurred yet. That had confirmed they got the real Sylvia that time and then disintegrated all of the bodies.\n\n---\n\nJace gathered the family and took them out to the wilds. Then teleported them away to Osland Island from his office, having used the vid files from the recon craft to find a location. He informed them of the message he had received and caveated it with, \"I don't buy it for a moment. The children were likely divided by the council and we will never see them.\n\nGiven what was at stake, he has us and any samples they recovered to help his program here. Loss of the existing children would be inconsequential to him as he has us to recreate the program. I cannot prove it, none of us can at this point.\n\nHe likely destroyed any of Sylvia's offspring from me or others, he can be rather vengeful, and wanting any traces of her gone would be something he would definitely do. As it was 83 million DC's we know the entire council is involved.\n\nAt most 1-2 children could be in any one City-States' hand, as I had fewer than 16 known children in the system, only 6 that concerned me. Then there were the others who she took that were not mine. She might have laid more since then or used a clone to have them deliver more for her.\n\nMost of them were Sylvia's children regardless, spawned from me. I believe they got her based on what I bargained with during that meeting. That and dragons don't go throwing 83 million DC's around for nothing. It was a message. They want my silence and cooperation, at least for now.\"\n\nCoop nodded, \"You are right. From a military point of view, 16+ children probably bought them a lot of goodwill with the higher-ups in RECD Executive Council. They lost a lot of ground and this may have bought them a seat in the top 20 of the Ruling body. They have us for samples. If we are wrong there is no way to prove it, for now, either way.\"\n\nHellen nodded, \"Rachel's children are the only 2 I fret over. I know they all hold a place in your heart, Jace.\"\n\nJace shook his head, \"I never got to know them. Rachel's and Jessica's children were the only ones I was concerned with. They died the moment Sylvia stole them. I knew we would never get them back. I can only hope they are healthy and have good lives if still alive.\n\nThe chances of encountering one later are small and at least 17 years out most likely. At which point they will be attuned and honed to be weapons for the City-State that they live within. IF they make it through local trials.\"\n\nThey all hugged before he took them back to Evergreen. They went down from the Marshal's office and into the main Town Hall.\n\nJace found Sarah. Sarah smiled at Rayne and him, \"I am ready for the next step.\"\n\nJace nodded, \"I am sorry to hear about your brother.\"\n\nSarah sighed, \"Half-brother. I should have figured Viv would try something. At least your deputies caught her in her obvious lie. Those tractors don't move without someone at the controls. She plowed him into the fields after poisoning him. She wanted to be your wife after hearing about my night with you 2.\"\n\nJace laughed, \"Her genetics were worse than your brothers and she was an airhead to boot. They were made for each other and she threw it away.\"\n\nHe looked over and threw up the news as it was just coming in. They discussed the joint operation to bring about the destruction of Sylvia. Sarah looked over, \"Did you know?\"\n\nJace nodded, \"Found out about 12 hours ago. No survivors, including children she might have taken. Joint operation. I provided my insight into the situation to the Royal Family. Into how she thought about things and how she might approach given issues. I gave them the information to hunt her while staying out of it.\n\nThings to watch out for within the Royal family to try and identify spies. Things like that. She directed my education. I knew what she valued the most and how she would likely react to given threats. She made me a weapon and it was turned on her as I knew her best for the bitch that she was.\"\n\nRayne added to it, \"He gave our King some advice on how to go about finding her while he was ordered to stand down and not pursue her directly. It proved extremely valuable.\"\n\nJace went to his vehicle and Coop rode shotgun. Sarah sat in the middle of the second row with Hellen and Rayne. He drove them out of the area and sighed. As Sarah asked, \"How valuable was the information you gave them?\"\n\nRayne answered, \"83 million DC's worth of value from the entire RECD. What he provided cannot be talked about but they essentially gave him the bounty on her as the first-ever public enemy number one in their history across all City-States.\"\n\nShe looked at Jace, \"You don't look happy.\"\n\nJace shrugged, \"I finally got the insurance payout on the drone company I owned that got destroyed. 3.5 million DC's for that. 1.9 million as a bounty hunter that I still have in the banks and now another 83 million on top of what I had in the holding company. Not counting any liquid assets, I have some that are off the books.\"\n\nHellen asked Sarah, \"When are you wanting to get married to these two?\"\n\nSarah smiled, \"7 days ago when he brought me back. I could not get the 2 of them out of my head. I stepped down from the council. Jane is the new mayor and acting sheriff.\"\n\nJace nodded, \"I am considering stepping away from the Marshal Service. Doing private investigations and bounty hunting work instead.\"\n\nRayne looked at him, \"First you have mentioned this.\"\n\nJace nodded, \"True, but as I have the foundation for the wilds set my proximity to the Avalon Valley presents issues. Brandialshane is looking to step down as their ruler due to what some of his sons did. What we discovered through Sarah, and she was not the only one.\n\nHe was connected to almost 100 other raped women who gave birth. Brandialshane had them executed as rapists and for bringing dishonor to the family. The internal corruption in the entitled races within the military and other areas makes that proximity an issue to staying.\n\nHis eldest son, Crostanlir would be the most likely replacement to take over. I can say I am probably not on the top end of his list of favorite people. Not because of my commander, who I honored by fulfilling his dying request. Because of the corruption, I had exposed within the military that tracked back to his family and his race.\n\nKindra sent me a message to say 'beware of him' as he was not happy with his brothers, 2 of them, being outed as rapists to go along with everything else they have had to deal with recently. Working that border would not last and the director would be hard-pressed to reassign me with less than a year on the job.\"\n\nCoop looked over, \"I will send him a message and feel him out, but a career change might not be a bad idea either. Your license as a bounty hunter will let you keep your sidearm.\"\n\nJace looked over, \"I already sent in a request to be reassigned to another area. It was denied by personnel. I just sent in a message to the King and the Minister of Defense letting them both know I would be serving notice to leave the Marshal Service soon.\"\n\n---\n\nThe first assistant walked into the King's chamber just as he finished fucking the last of his 4 wives. He looked over at the interruption and the first assistant. He pounced on her and fucked her as well, as was his right in their society. Not that she did not enjoy the attention she was not considered royalty.\n\nShe started ovulating immediately as he thrust into her. She had carried many children for the King over the years but was not one of his wives. Her eggs were always watched over and raised by the eldest of his wives. After he finished exploding a river of semen into her, he asked, \"Why the interruption?\"\n\nShe crawled out from under him and lowered her head, \"Jace Rivers submitted a message to us. He plans on giving notice, to leave the Marshal Service. I checked into it and found out he asked to be reassigned out of the Avalon wilds days ago. It was denied. This occurred after Brandialshane announced his plans to step down as the head of the Royal Elven family sometime next month.\"\n\nThe King did not look happy, \"What are his plans?\"\n\nShe shook her head, \"We do not know. We know for about 10 minutes today he disappeared from Evergreen with his wife and in-laws. Then returned. He is being followed from the station but he is headed back into the city.\"\n\nThe King went over and brought Brandialshane up on his display. He looked at the aged leader whom he had demanded to step down soon given the corruption under his rule. He glared, \"Why is Jace Rivers wanting to leave the Avalon Wilds?\"\n\nBrandialshane shook his head, \"He has not contacted me and this is the first I have heard of this.\"\n\nKindra was in the room as she watched over her father-in-law these days with a lot of the family starting to shun him for the disgrace that occurred under his watch.\n\nShe spoke to the King, \"I have an idea as to why, Your Majesty. But it would only be a guess on the matter. I warned Jace to be wary of Crostanlir, I owed Jace that much of a warning for the pregnancy I have from my late husband. Jace is not his favorite person.\n\nBest to say least favorite person. He wanted Jace dead when he showed with my husband's ring on his hand and said as much in the days that followed. His best friend growing up was the scout who went rogue during the wilds crisis and who took Jace to be killed at the invaders' camp.\n\nSeveral people were found to be cooperating with him but Crostanlir was not one of them being consulted. Those connections were checked but they had not spoken in months as his duties kept him occupied in other areas, namely overseeing elven research facilities among other things.\n\nHe blames Jace, publicly in our city, for bringing this corruption within the elven people to light. He is spiteful enough of a male to want Jace harmed. Jace being this close to the Avalon Valley would make him an easier target.\n\nWhen and if he decided some form of retribution should occur. As Jace works for an Elven Director at the Marshal Service, I could see pressure being applied to keep Jace in place out here if that were the case.\"\n\nThe King had a low growl rumbling in his throat, \"I want Crostanlir brought before me in 2 hours.\"\n\nHe looked at the first assistant, \"Inform Jace I want him here in 2 hours. He has lights and sirens, use them!\"\n\n---\n\nJace received the message and sighed as he threw the lights on. Coop looked at him as Jace sped up, \"Just got summoned to the Palace. Immediately.\"\n\nCoop shook his head, \"They wasted no time on that.\""
    ],
    "authorname": "EmotionalStorm",
    "tags": [
        "anal",
        "dragons",
        "elves",
        "fisting",
        "group",
        "polygamy",
        "swords"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/junction-pt-03"
}