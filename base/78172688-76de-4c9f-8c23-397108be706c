{
    "title": "The Year of the Cat Ch. 12",
    "pages": [
        "100% Fiction. All sexualized characters are adults.\n\nThe crew of men that would be working under Matt's supervision were waiting for him in the company warehouse when Matt arrived to work in the morning.\n\n\"Hey, guys. I'm Matt Turner. I'll be the team lead on this job.\"\n\nThe five men nodded, muttering a greeting. \n\n\"Now... \" Matt smiled. \"this may be my first outing, but-\"\n\n\"Hold up!\" a younger group member interrupted. \"We're flying half way around the world with a newbie?!\"\n\n\"Let the man speak!\" an older worker retorted. \n\nMatt nodded to the older man and continued. \"Yeah... You guys are gonna be my first crew... but one thing you should know about me is that I'm a team player, first and foremost. I know this job and I'm not too good to do anything... from sweeping the floors to hauling materials. I'm in your corner, guys, and I hope you'll be in mine. We're going to need to have each other's backs out there.\"\n\nMatt continued, explaining the scope of the work required and the location the team would be responsible for. \n\n\"Now... We're going to have a small crew of local temporary work helpers over there lending us a hand. I'm... not sure how much English they speak, so... do me a favor and show them some patience on the job site. Ok?\"\n\nMatt was able to answer the most pressing questions the guys had about the trip itself, but drew a blank when asked what to expect in the day to day life as a foreign resident of Japan. \n\n\"It's gonna be new for all of us. My only advice is to keep an open mind. It's a very different place. So don't be too quick to reject the unfamiliar... you might find something in it you weren't expecting.\"\n\nThe meeting was dismissed. Matt nervously smiled as the men sauntered away. Despite his speech, the men regarded Matt skeptically while returning to their regular assigned duties of the day. \n\nMatt sighed. \"I wonder if I'm REALLY the right person for this job?\"\n\n~~~~~~~~~~~~\n\nJanice sped home from work later that day, hastily took a shower and got dressed, anticipating Matt's arrival home from work. \n\nShe rummaged through her drawer of comfy shirts, trying on various tops, seeking a particular look. \n\nJanice sighed, frustrated. Nothing she tried on seemed right. Just then she spotted Matt's button down dress shirt on her bedroom floor, left behind by Kendra. \n\n\"Perfect!\" she grinned. \n\n~~~~~~~~~~~~\n\nMatt arrived home from his workday to find Janice busy preparing dinner at the stove. She smiled brightly at him, stirring the ingredients in the pan with one hand and cradling her phone to her ear with the other. \n\n\"Oh! Mom!...\" Janice motioned for Matt to approach while she spoke. \"Matty just walked in... hold on. Ok?\"\n\nJanice put her hand over the receiver end. \"Hey! Uhh... my mom really wants to talk to you. Do you mind?\"\n\nMatt smiled, broadly. \"Not at all!\" He eagerly took the phone from Janice's hand. \"Hey, Ms. Paige!\" he spoke in a cheerful tone. \n\n\"...Matthew!...\" Linda's voice was quiet, trembling. \"My dearest, sweetest Matthew!\" He could hear that she had been crying. \"Janice told me about what happened to her... my poor darling! Thank you, Matthew! ...From the very bottom of my heart! Thank you for protecting my baby girl.\"\n\nJanice watched Matt's face blush against the phone, smiling lovingly at him. \n\n\"Of course, Ms. Paige...\" he replied, then giving Janice a wink. \"Just tell your daughter to stay out of trouble until after I get back from Japan, ok?\"\n\nJanice chuckled as she continued to stir the simmering meal. \n\nLinda went on in a less solemn tone. \"I'll do better than that. I'm coming over to stay with her for a bit while you're away. Do you mind if I sleep in your bed?\"\n\n\"Oh! Anytime!... I mean, uh... no, I don't mind! No problem!\"\n\nHe heard Linda chuckle lightly over the phone. \"When you get back from your trip, maybe I'll pay another visit just so I can thank you properly...\"\n\n\"Oh! Linda.. No. That's not neces-\"\n\n\"...with my vagina.\" Linda interrupted. \n\nMatt was stunned silent. Janice was absorbed in her cooking task and didn't seem to notice Matt's startled expression. \n\n\"Uhh... Tha- that sounds real good, M-Ms. Paige!\" Matt stammered, nervously. \"See you soon! Uhh... Here's Janice again! Bye!\" Matt quickly handed the phone back to Janice. \n\nJanice took the phone and wished her mother a good night before she hung up, turning to Matt. \n\n\"Hi, baby!\" she cheerfully exclaimed, trotting from the stove towards him with open arms. \n\n\"Well, hi!\" Matt replied, feeling her squeeze his body in a loving embrace. She surprised him with a wet, open mouthed kiss. \"Wow! This must be our new thing!\" Matt happily surmised. \n\n\"Hope you don't mind I borrowed your shirt. Kendra left it on my floor.\" Janice blushed slightly, tugging at the bottom hem of the large, button down dress shirt hanging just below her derri\u00e8re. She didn't appear to be wearing shorts underneath. The top three buttons undone, allowing a few inches of shifting cleavage to be seen. \n\n\"Oh! Uhh, of course not... umm, hey, Janice...\" Matt reached out and touched her shoulder tenderly. \"Are you okay? You know... about Kendra leaving?\"\n\nJanice reached over and put her hand over his, smiling sympathetically into his eyes. \"I'll miss the hell out of her crazy ass, but... I am okay... Thanks. How about you? Are you... okay?\"\n\nMatt nodded. \"Yeah... Same goes for me. Something tells me she's gonna be just fine.\"\n\nJanice gave his hand a squeeze before she refocused her attention to the meal. \"Dinner just ought to be ready by the time you're done with your shower, if you hurry.\"\n\nMatt savored the aroma wafting from the bubbling pans on the stovetop. \"Mmm! Mmm! Can't wait!\"\n\n\"Well, then... SCOOT!!\" Janice exclaimed, playfully swatting Matt's tight butt with her open palm. \n\nMatt quickly showered and dressed in his casual house clothes. Janice was serving two plates when he emerged from his room. Matt caught her eyeing his ever present bulge when he walked into the dining room. \n\n\"Wow!... I like those pants on you, Matty. You look REALLY sexy in them!\" Janice said, practically staring at his dick. \n\n\"Hehe... thanks!\" Matt replied, somewhat taken aback by her unabashed flirtation. \"You- you look great wearing my shirt.\"\n\nJanice smiled. \"Thanks! I really like it! It smells like you and plus it provides easy access for later.\"\n\n\"Well, you can have it then! ...Uhh... wait. What do you mean 'later'?\"\n\nJanice grinned at Matt. \"You still owe my boobies a lotion massage, remember?\"\n\n\"Oh yeah!\" gasped Matt, giddy at the prospect. \"How could I forget?!\"\n\nJanice's eyes smoldered a sensual heat. A naughty smile spread across her lips in the same manner Kendra often displayed. \"I guess I'll have to make sure you never forget it again.\"\n\nMatt almost dropped his fork, amazed. \n\nJanice's usual, bright smile spread as she giggled. \"Eat up!\"\n\nMatt tried not to be too obvious that he was hurrying through his meal. He took chances with enormous bites, attempting to chew as politely as possible and not choke. \n\n\"Delicious as always, home girl. Thank you.\" Matt said, swallowing his last bite and setting his utensils down on the empty plate. \n\nJanice was only half finished with her meal, toying with her food, distracted. \n\n\"You're not hungry?\" asked Matt regarding her uneaten portion. He looked up to see Janice's eyes staring at him with lust burning. \n\n\"I'm saving room for dessert.\" she seductively growled. \n\nMatt gulped\n\n\"Are you ready?\" he heard her say, eagerly. \n\nAll that Matt's amazed senses could manage was a slight nod. \n\nSuddenly, Janice was on her feet, leaving the dishes where they were on the table and pulling on his arm towards the living room.\n\nJanice breathed heavily. \"I can't fucking wait to feel you again!!\"\n\nMatt's dick was thickening rapidly as she brought him to the couch urgently and pushed him down to a seated position. Janice clamored onto his lap, where their lips and tongues met in a crashing, sensual duel. Matt could feel her panties begin grinding relentlessly against his throbbing erection. \n\n\"Oh my god!\" Janice gasped, hugging Matt tightly, while her vagina doused her underwear in soaking wetness. \"Oh fuck! Yessss!! It's just as good as last time!!\"\n\nMatt was shocked at Janice's sudden passionate ferocity. Her pleasured moans grew so loud that a very annoyed cat was roused from his nap on the rocking chair and hurried out of the room, appalled. \n\nJanice rocked wildly up and down against Matt's solid hard-on. Her clitoris was able to feel Matt's blood pumping through his massive girth. \"Oh yes!! I'm gonna... I'm gonna...!!\"\n\nJanice buried her face in Matt's neck. He felt her body becoming rigid against him. She whimpered desperately as she began to convulse in orgasmic ecstasy. \n\n\"OH GOD! YES!!\" she threw her head back, screaming. \n\n\"This is everything I've been looking for!\" Janice's mind reeled as her body felt raked by the overpowering orgasmic force. \"This perfect feeling!! I've always wanted this!!\"\n\nJanice's chest heaved within the taught button down dress shirt. She leaned back, running her palms up and down Matt's chest while she caught her breath. \n\n\"Geeze!\" she panted after several seconds. \"... Sorry. I... I just had to, Matty.\"\n\n\"It is ok!\" chuckled Matt, breathlessly. \"I hereby grant you consent to do that anytime you want!\"\n\n\"Careful...\" Janice breathed. \"I kinda want that ALL the time!\"\n\nMatt's boner flexed against Janice's smothering panties. He watched her gasp, biting her lip in exquisite pleasure. \n\n\"Oh god! Sooo fucking good!\" she hissed. \"Mmmm!...Now... where were we?\" Janice smiled after a moment. \"Oh yeah... you were about to spread lotion all over my huge titties, weren't you?\"\n\nMatt's mouth was dry as he attempted to gulp. He nodded, eagerly. \n\n\"Well then...\" She quietly took Matt's hands and gently brought them up to the first done up button on the front of her top. \"Why don't you start by taking my shirt off?\"\n\nMatt's trembling fingers slowly unbuttoned the dress shirt from Janice's astounding bust. His dick spasmed against Janice's quivering pussy with every button's release. She moaned in sexual delight, arching her back to push her bare breasts through the expanding open front. \n\nMatt slid the lapels of the shirt over her shoulders, relishing the sumptuous feeling of Janice's perfect, enormous breasts being pressed against his neck, chin and lips. The shirt was tossed to the floor. \n\n\"My turn!\" said Janice, eagerly grasping Matt's T-shirt and pulling it over his head. She hunched over, tossing the shirt behind her, placing kisses on Matt's muscled, bare chest. \n\nJanice then reached into the crack of the couch cushions beside her and pulled out a large bottle of scented lotion. \n\n\"Where did that come from?!\" Matt chuckled.\n\nJanice unsnapped the lid of the bottle with a shy grin. \"I may have planted it there earlier this evening...\" she giggled. \"I've kinda been thinking about this all day.\"\n\nMatt watched Janice sit upright and squirt a squiggly line of lotion back and forth over her gargantuan bust. She then raised her eyes to Matt in the most intentionally seductive stare she had ever given him. He fought the urge to cum in his pants right there on the spot. \n\nMatt took a deep breath and brought his shaking hands forward, spreading the balm slowly over Janice's flawless skin. \n\n\"Oh... baby... Mmm! That's sooo good!\" she cooed in a high pitched cry. The symmetrical movement he employed spread the smooth lotion to every dry area of mammary skin. Once her gorgeous tits were coated in the glistening glaze, Matt then took care of each breast individually with his two hands, massaging the slippery softness gliding through his open palms. Janice's nipples were rigid. The slick pink skin of her areolas sparkled, catching the light beautifully. \n\nJanice's crotch was in constant slow, grinding motion against Matt's solid erection as he massaged her gorgeous, huge tits. The stimulation she was receiving from both her breasts and her vagina had Janice feeling the amazing rush blasting into ignition once again. \n\n\"Mmm!! Oooo god!! You've got to be kidding me!!... I'm about... OH FUCK!!\"\n\nJanice was no longer concerned with keeping her composure. Her body writhed in ecstasy upon Matt's angry cock as the orgasm thundered through Janice's very being. \"My fucking god!! It's gets better each time!!\" she gasped amazed. \n\nJanice's exhausted body fell against Matt's chest. He could feel her slick, gargantuan softness heaving against him. \"Oh god... I'm sorry. I'm being SO greedy. I just... have never felt so GOOD!!\"\n\nJanice brought her lips to Matt's and kissed him, passionately. He smiled into her eyes when she pulled away. \n\nJanice blinked, casting her eyes down to Matt's lap. \"Uhhm... Did you?\"\n\nMatt shook his head. \"Not yet...\" \n\nHe noted the excited look on Janice's face as she lifted herself from his lap and began undoing the snap and zipper at the front of his pants. \n\n\"Well then... Time for me to give back a little...\"\n\nMatt bit his lip while he raised his butt off the seat to assist Janice with her task of peeling his pants and underwear off. \n\nJanice pushed Matt's knees apart and descend in front of his massive bobbing erection. Her eyes were alive with a trancelike fixation, grasping the thick shaft at the base and bending it towards her glossy, cream colored globes. Her colossal tits crowded around his jumping erection, bathing it in fragrant ointment. Janice then squeezed her tits together from the outside edge, trapping Matt's dick in a soft vice grip of sensuality amid her shiny cleavage. \n\nJanice smiled up at him and began rocking up and down, sliding her tits against his throbbing cock. Matt moaned, closing his eyes, trying to keep himself from spraying jizz everywhere too soon. The very sight of Janice's gorgeous breasts jostling their soft, pale splendor, while his erect dick swam in between was enough to send forth the cascade on its own. \n\nMatt could hardly believe it when he felt a soft, wet tongue graze the tip of his penis. Opening his eyes and looking down, Matt gasped. Janice was hunched over her glistening tits, still rocking up and down. Every time Matt's dick broke through the roof of her compressed cleavage, Janice's open mouth was ready with an extended tongue, flicking the slitted top of his mushroom shaped head. \n\nMatt couldn't peel his eyes away as her head kept lowering with every rocking motion. Soon Janice was circling the head of his cock with her tongue, pressing her lips to his immense thickness. \n\nJanice continued to lower herself slowly, her oily breasts sliding off of Matt's thighs, until she was eye level with his lurching dick. Her breath shivered against his shaft as she planted small kisses up and down. Matt felt two small hands encircling his thick penis and start pumping at a slow, steady pace. \n\nJanice gazed up into Matt's eyes. \"Let me know, baby... I wanna catch every drop this time!\"\n\nJanice then lowered her mouth over as much of Matt's dick as she could. Her wide open lips couldn't even accommodate the entirety of his bulbous head. Despite her inability, she continued to stroke his shaft diligently with her hands while her tongue titillated Matt's sensitive tip. \n\nMatt could barely breathe. His brain struggled to accept that Janice was actually giving him an eager blowjob at this very moment, despite every evidence currently before him. When the moment finally snapped into vivid reality, Matt felt his balls tighten immediately. \n\n\"I'm... close. No wait!! Oh god! Here it is!!\" he shouted. \n\nJanice was prepared with her lips wrapped around Matt's slitted dick tip. However, she was not prepared for the torrential flood of cum that soon commenced. \n\n\"Mmmph!\" she choked. Janice struggled to swallow the first massive burst of jizz before her mouth was filled again and again by Matt's lurching cock. \n\nJanice had to release her hold to gasp for air, her open mouth dripping with semen. \"Oh fuck! I just swallowed SO much cum!\"\n\nMatt's chest was heaving rapidly while he recovered from his sky splitting orgasm. \"Jesus... THAT was unexpected!\"\n\nJanice smiled, licking up the remaining semen dripping down Matt's long shaft. \"Unforgettable too, I hope!\"\n\n\"Definitely... holy shit...!\"\n\nJanice stood to her feet, grinning proudly. \"I gotta say... I'm pretty impressed with myself! You sure put the 'dick' in 'ridiculous'!\" she laughed. \n\n\"Well, if there was a badge to give, I'd say you definitely earned it!\" Matt chuckled. \n\nJanice laughed, patting her bare belly. \"I'd say I definitely ate it!\"\n\nThe two cracked up laughing together. \n\n\"I need to clean up.\" said Janice, turning to make her way towards her bathroom. She stopped in mid step to turn to Matt. \"...care to join me?\" Janice said with a sultry smile. \n\nMatt sprang to his feet and was beside her in a flash. Janice grinned, gently grasping his chubby, leading him to her glass shower stall. \n\nJanice set the temperature to a comfortable warmth and pulled the handle to activate the shower head. She bent over at the hip to peel her panties off. Matt's slowly expanding dick accidentally bumped into her bent over ass cheek. \n\n\"It's gonna be a tight squeeze in here together. I hope 'Mr. Perfect' is gonna behave.\" Janice said with a smile. \n\nMatt bit his lip, stepping into the warm flow of water behind her. The glass stall certainly was a compact unit. Matt and Janice couldn't help but to be in constant contact one way or another. Her giant tits softly collided and squashed against his body every time she turned to face him. Meanwhile Matt's dick was solidly erect and inadvertently prodding Janice's hips, pussy and ass as they rinsed off together.\n\nShe simply smiled, turning her back to him, reaching for her bottle of body wash. \"I need your help. Hold out your hands.\"\n\nMatt's arms reached around the front of her body, palms upturned. His bare cock pressed tightly against Janice's ass, sliding against her soft butt cheek. She squirted a large puddle of liquid soap into his cupped hands. Replacing the bottle on the shelf, Janice then pressed Matt's hands against her oily tits. \n\n\"Make sure ALL that lotion is cleaned off of me, baby.\" she cooed, reaching behind her and gently stroking his throbbing cock against her hip. Matt shuddered in ecstasy, rubbing the slick soap all over Janice's massive breasts. The shaft of his cock slid across her cheeks when she started swaying her hips slowly back forth, bending slightly to push her ass back into him. The slippery run off of soap lubricated both of their lower bodies. \n\nAfter receiving several minutes of sudsy massaging, Janice rotated around to face him. Once again Matt exulted in the feeling of Janice's gargantuan bust gliding their heavy softness over his chest. Matt's slippery erection bent downwards against her hip as she turned, then sprang upwards against her twat, the shaft of his dick sliding against Janice's labia. \n\n\"Oh!... OH!...\" she exclaimed in fright, feeling the wide, slippery penis separate her pink pussy lips. \"Be careful, baby! I don't want us to have an accident.\"\n\nMatt was frozen still, afraid to move lest the head of his dick become lodged in her pussy. \n\nJanice gingerly backed away, letting Matt's cock spring upwards when it finally became free from between her legs. \n\n\"This thing is dangerous when loaded!\" Janice exclaimed, eyeing Matt's erection with a grin. She once again grabbed the body wash gel and squirted a thick line of soap down the middle of Matt's wide dick shaft. \"Safety first, baby!\" breathed Janice, grasping Matt's dick in her hand and stroking him with a steady pace. \n\nShe turned Matt facing away from her and reached forward, stroking Matt's dick from behind with both hands while she pressed her enormous tits against his back. ",
        "Matt's breathing became deeper as Janice continued to stroke his long penis. He felt her descend slightly as one her hands released it's hold, coming around between his legs to massage the base of his shaft and balls. \n\n\"Holy fuck!\" Matt gasped. \"Baby... fuck!... that's good.\"\n\n\"Mmm! You like that, sexy man?\" Janice cooed, adding a twisting motion to the wrist of the hand devoted entirely to Matt's shaft. \n\n\"Ye-Yes...\" Matt whispered. \"Oh my god! Keep doing it just like that, baby!\"\n\nIt wasn't long before Janice felt Matt's balls tighten in her one hand and his shaft expand in the other. \n\n\"Oh ssshhit!\" Matt hissed as cum came guzzling out of his cock head, washed away instantly down the drain from the shower flow overhead. \n\n\"There! All better!\" Janice cheerfully exclaimed, giving his softening dick a final squeeze before letting go. \n\n\"I'll say!\" Matt breathed, turning around to face Janice's smiling countenance. The two embraced tightly under the warm falling water. They made out for several minutes before the two finished cleaning their bodies and exited the glass shower stall. \n\n\"I'm just gonna brush my teeth. Meet you in bed!\" said Janice. \n\nMatt was laying in bed with is back propped against the headboard when Janice entered his bedroom. She was still completely nude, her breasts wobbling freely as she climbed into Matt's bed beside him. \n\nTheir arms instinctively reached out to each other to hold their bodies close. Matt kissed Janice's lips when their faces met. The two nestled into bed and a restful, easy peace descended in the quiet room. \n\n\"Who would have thought two months ago...\" Janice said in the dark. \"...that we'd be naked in bed together right now?\"\n\n\"Not I!\" exclaimed Matt. \"I usually miss out on luck like that.\"\n\n\"Hmm! And they say black cats only bring bad luck!\" Janice giggled."
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "big boobs",
        "enormous breasts",
        "huge tits",
        "slow burn",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-12"
}