{
    "title": "What The Cat Dragged In Ch. 14",
    "pages": [
        "Hi Everyone!\n\nJust a short note that so that there are no misunderstandings in this and future chapters. The Church of Humanity (CoH) and Friends of Humanity (FoH) are two related but different groups with similar anti-mutant agendas, but different ways of running those agendas. Neither is my own creation.\n\nNothing more to say really....just....enjoy and let me know what you think. :) \n\npsyche b.\n\n14. Not Easily Broken\n\nCreed stood in front of a wall of framed photos in Joe's den and worked on his third beer. The frail and her grandmother were on some kind of tour of the house. The old lady had looked at him like he was shit stuck to the bottom of her shoe. He was used to that, he could see the hurt and anger flicker across the frail's face. He couldn't say he understood that, but it had pissed him off to see her so upset. In that moment he had been tempted to take her back out to the car and head out to Washington State without another word to either one of them. \n\n\"They were always like that.\" Joe was standing behind him. \n\n\"What're you talking about?\" He was studying the pictures of the frail. Her hair was redder, but he couldn't mistake those eyes. \n\n\"Anna and Kelly. It's never been easy between them. She's too much like her father.\" Creed heard him sit down.\n\n\"What the fuck does the mean?\" Creed scanned the images on the wall. The frail and a man who looked like a younger version of Joe were in most of them. The grandmother was in some. There were a few pictures of a baby dressed in blue. The mother was conspicuously absent.\n\n\"Means Carl and Kelly prefer the ugly truth to a pretty fairy tale. Anna only knows how to function in the fairy tale.\"\n\nCreed turned and studied the old man for a minute. A slow smile spread across his lips. \"You never told her what you did.\"\n\nJoe wouldn't meet his eyes. \"Have you told Kelly?\"\n\n\"Didn't tell her anything specific. She guessed at the big picture.\"\n\nThe old man gave a short laugh. \"Shouldn't be surprised by that.\" \n\nCreed watched the old man pick at the label on the beer bottle. \"What?\" \n\n\"What really happened when you found her?\"\n\nCreed sat down and studied the wrinkled face. \"What'd she say?\"\n\n\"Which time? First she said you found her wandering, then she said you found her unconscious. Both times she said she ran away, but I know there was more to it than that.\"\n\nCreed smiled a little. \"She's a shitty liar. I don't know much about what happened before I found her. She figures Stan gave her to Dawes-\"\n\n\"Gave her to him?\"\n\n\"That ain't part of what I know, just what she told me. Stan gave her to Dawes because he figured Dawes would kill her or break her. Didn't come close to breaking her, but he goddamn near succeeded in killing her. I guess neither of them planned on her being the tough little thing that she is. I happened to be in the right place at the right time to see her running and him chasing after her with a gun. She fell, hit her head on a rock and knocked herself out. He took a shot at me; I killed him, and brought her back to my place.\" He swallowed the last of his beer.\n\n\"But she was alright?\" He was grasping at straws.\n\n\"Fuck no. She was filthy, bruised everywhere, cut up, bloody. So emaciated I could count her bones. 'F I'd left her there, Stan would've got his wish.\" It made him sick to remember it. Joe turned away and looked at the wall. He could smell the anger rolling off the old man.\n\n\"He rape her?\" He asked finally.\n\n\"No.\"\n\n\"Not that she told you, or-\"\n\n\"Just trust me on that one.\" He got up and walked back to the wall of birthday parties, holidays and ordinary pleasures on beaches and in parks. He had to look at something while he waited for the question to come. Finally, he couldn't stand the waiting. \"You gonna ask if I did?\"\n\n\"I've seen what you do to women. If you had used her that way she wouldn't have lived long enough to get back here, let alone look as good as she does.\"\n\nHe gave the old man a sidelong glance and then turned back to the photos. \"She's still too damn skinny. Guess she always has been though.\"\n\nWhat the fuck was taking Conlon so long?\n\n*~*~*~*~*~*\n\nThe furniture was mostly different. The wallpaper patterns and paint colors were different. The layout of the rooms was different. The longer Kelly spent in the house though, the more she started remembering the little things that surrounded her. China birds, a robin and a blue jay, sat on handmade doilies on the coffee table. The last time she'd seen them, they'd been on top of a console television. The photo of her father in his Army uniform hung on the living room wall, his serious expression frozen in time. A statue of the Virgin Mary that had occupied a small table in the upstairs hall now looked out over the dining room. Two votive candles stood in red glass holders in front of the blue and white figure. \n\n\"I lit them every night. One for you, one for Cody.\" The older woman brushed at imaginary dust. \"He probably doesn't even remember us anymore.\"\n\nKelly smiled slightly. \"When we were alone I would tell him about you and Grandpa, and Daddy.\"\n\n\"Your mother didn't do that?\"\n\nKelly shook her head and looked at the china in the cabinet. The ivory colored china with intricate gold designs brought back memories of holiday feasts and Sunday dinners. \"You know how mom is. She gave up all rights to think for herself when she married Stan.\"\n\n\"Kelly, she's still your mother-\"\n\n\"She's the woman who gave birth to Cody and me. Being a mother takes more than that.\" Kelly walked into the living room, her arms crossed across her stomach, cradling the pain of the statement. She stopped in front of her father's picture. Her grandmother followed. \n\n\"You know she's never been a strong woman. She was crushed after-\"\n\n\"And we weren't?\"\n\n\"A shocking accident like that-\"\n\n\"It wasn't an accident. It was a drunk who was driving on a suspended license. The whole thing was unfair and stupid and Cody and I needed the one parent we had left.\" Kelly's voice cracked. She dug her fingernails into the palm of her hand. Her grandmother stroked her back.\n\n\"Your hair is the same color as his.\" Her voice trembled. Even with the intervening years, the wound was still too fresh and the topic still too painful. Kelly didn't push it. \n\n\"Is it?\" She looked more closely at the photograph, studying the little bit of hair visible at the margins of the hat her father wore. \"It's been so long since I've seen a picture of him.\"\n\nHer grandmother ignored the last part of that statement. \"It is. When you were born you had the reddest hair I'd ever seen on anyone.\" She laughed softly. Kelly managed a little smile. \"As you got older it got darker and darker and I always wondered if you'd keep any of that red.\"\n\nKelly smiled a little. \"I just got it back.\"\n\n\"Got it back? Is that a dye?\" Her grandmother started moving locks Kelly's hair, studying it in the light.\n\n\"No, but stress can do awful things to a person.\" Kelly forced a little smile. \"The house is bigger than I expected.\"\n\n\"I wasn't too happy about moving, I certainly wasn't about to give up the things I love. Come upstairs, I'll show you your room.\" She took Kelly's hand, but Kelly didn't move.\n\n\"Granna-\"\n\n\"You have to stay somewhere while you're here.\"\n\n\"Victor and I have a place.\"\n\n\"Then let him stay there.\" Her grip was tightening. Something close to anger was spreading across her forehead.\n\n\"Before we left to come here Victor was gone on business for a week and a half. I hardly slept when we were apart. I'm not going to-\"\n\n\"You're sleeping with him?\" Shock and hurt vied for dominance on her face. \"Did he...force you?\"\n\n\"Of course not.\" Kelly kissed her grandmother's cheek. \"Do you think I'd want to stay with him if he had?\"\n\n\"That's why your neck is all bruised and cut up?\" The anger was back. Kelly wondered why she always managed to say the wrong thing.\n\nKelly sighed. \"Granna, those marks have nothing to do with anger or force.\"\n\nHer grandmother stepped back from Kelly, as if Kelly had become a stranger to her. That look made her heart hurt.\n\n\"Frail?\" His loud voice sounded as though it was coming from the kitchen.\n\n\"In the living room.\" Kelly was sure that he'd hear the tremor in her voice. She hoped he would decide that it was one of those things he'd rather not get involved in.\n\n*~*~*~*~*~*\n\nCreed glanced over at the frail. She had nodded off as soon as they'd pulled out of the driveway. Her shoes were off, her knees drawn up as if sheltering herself from something. The stink of anger, anxiety, and disgust had reached all the way into the den. It turned his stomach and it pissed him off because as soon as he got into the living room he could see that the frail blamed herself for all of it. If it had been up to him, he'd have grabbed her and taken off right then and there. The car was already packed. Course that would have upset her too. She was a fucking pain in the ass. A sweet smelling pain in the ass who'd probably kiss him and fall asleep with her head on his chest later. \n\nThe phone on his belt vibrated. He didn't have to check the number; he knew who it would be. He glanced over at the frail, then answered. \"Creed.\" His voice was subdued.\n\n\"Mess is taken care of.\"\n\n\"And?\"\n\n\"And I'm still working on the rest. I got names and ages from the ID in their wallets-\"\n\n\"You gotta be fucking kidding me.\"\n\n\"Nope. How they were dressed, tattoos, I'd say all three were FoH, or wanted to be.\" \n\n\"Meaning?\"\n\n\"Meaning from their age and the dumbass way they went about this whole thing makes me think they had no idea what they were getting into.\"\n\n\"And they picked me at random?\" Creed believed that like he believed pink elephants were about to fly out of his ass. \n\n\"Haven't gotten that far yet, but if that's true it would be a hell of a big coincidence. I've never been a big believer in that kind of coincidence. Just can't figure out why anybody would bother sending these three.\" Conlon's reputation for doing a job quickly and well seemed to be well-deserved.\n\nHe glanced over at the frail. She was starting to stir. \"Figure it out.\" He ended the call. \n\n\"What's wrong?\" Her words slurred with sleep.\n\n\"Nothing. We'll be there in a few minutes.\" He could feel her looking at him. \"What?\"\n\nShe shook her head and looked away. \"I'm sorry about Granna. Once she gets to know you-\"\n\n\"Don't even bother frail. You know it ain't true.\" \n\n\"Doesn't make it right.\" She put her shoes on again.\n\n\"Makes it normal.\" He had questions for her, but he wanted more information before he asked.\n\n*~*~*~*~*~*\n\nKelly fired the nine millimeter handgun at a human-shaped paper target set up on bales of hay against a wooded berm. For the sixth time, she missed completely. The sound of the shot echoed off the frigid clearing about a mile from the house. She lowered the gun and sighed.\n\n\"I must be doing something wrong. I can't even hit the hay bales.\"\n\n\"This is the first time you've tried.\" Her grandfather said.\n\nShe handed him the gun and poured them both a cup of coffee from the thermos. He leaned back against a rock, she sat on a stump. \"Was Daddy a good shot?\" \n\n\"Yeah, he was. It took him awhile to get the knack for a handgun, though. I taught him how to shoot a rifle when he was ten, so he had more experience with it.\"\n\n\"Hunting?\"\n\n\"No. Targets mostly. He won a couple of marksmanship medals when he was fifteen or sixteen. Your granna probably still has them packed away somewhere.\" He studied her for a minute. \"That isn't what you want to ask, is it?\" \n\n\"No.\" She sighed. \"Victor thinks he might be able to get Cody away from Stan.\"\n\nHe hesitated. \"How?\" \n\nShe looked at him for a long moment. \"You don't really need the answer to that question, do you?\"\n\nHe studied her face, then looked down into his coffee cup. \"Is it that obvious?\"\n\n\"No, but it just seemed like there was more between you two than one recent meeting. You...worked with him?\"\n\nHe nodded slightly. \"A couple of times, yes.\" \n\n\"And Daddy?\"\n\n\"Kelly-\"\n\n\"After everything I've been through, what do you think you're protecting me from?\"\n\nHe studied her for a minute, then nodded. \"He got out when you were three weeks old because he wanted you to be proud of him. He wanted to be around...\" He looked away and took a deep breath. \"When he started Demmer Security it was all legit and above board.\" \n\n\"Granna doesn't know, does she?\"\n\nThe old man smiled a little. \"You see everything, just like he did. No, you know your grandmother needs her illusions.\"\n\nShe nodded. \"Would she question it if Cody got out?\"\n\n\"Hard to tell. It's likely that it's one of those things she'd be willing to take on faith, as long as she got to see him.\"\n\n\"Maybe she'll get to see a lot of him.\" She couldn't meet his eyes as she said it.\n\nHe looked at her, the surprise written on his face. \"Are you sure about that? I didn't think you'd want to be separated from him again.\"\n\n\"I don't, but I don't think I can be what he needs.\"\n\n\"Kelly-\"\n\n\"It's true.\" Kelly felt the words catch in her throat. This was the right thing to do; she just hadn't thought it would be this hard. \"Cody needs parents. I knew how to protect him from Stan most of the time, but I don't know how to be a parent. Cody hates Stan, but CoH and that philosophy is all he knows. He believes in it. Bringing him into Victor's house...\"\n\n\"I see what you mean. Cody's always got a home here, you do too. You know that.\"\n\nKelly looked at him sharply. \"I'm not-\"\n\n\"I'm not trying to pressure you, just restating the obvious.\" He smiled a little. \"Come on, let's try a few more.\"\n\nShe took a deep breath. \"Maybe I'll get to hit the target once.\" \n\nKelly tried a few more shots, but still couldn't manage to hit anything. She was getting frustrated. \"I think this is just waste of time.\"\n\n\"No it ain't.\" Kelly turned to see Victor walking through the trees. \"Your stance is fucked up and you're flinching as you pull the trigger, but you can fix that.\"\n\n\"How long have you been there?\" Kelly felt a deep blush color her cheeks, though she couldn't understand why.\n\nHe grinned a little. \"Long enough to see that you can't hit the broadside of a barn.\"\n\nKelly smiled. \"So you came out here to tease me?\"\n\nHe shrugged. \"There was nothing on TV.\"\n\n\"I think I'm going to head back to the house.\" Her grandfather pulled on his down vest. \"I'll leave you the thermos.\" He kissed Kelly's cheek and walked back toward the trail. \n\n\"Get in position again.\" He waited until she took aim, then stood close behind her. \"This your idea, or your grandfather's?\"\n\n\"Kinda both. I used to bug him to teach me. With everything going on, I guess he thought it was the right time. I was glad to get to talk to him without Granna for a few minutes anyway.\"\n\nHe put his hand on the front of her right hip. \"Pull your leg back a little more.\" Kelly shifted her leg until he stopped her with his hand. He moved his hand onto her back. \"Shift your weight forward.\" Again, Kelly moved and he stopped her when she was in the position he wanted. \"Feel different?\"\n\n\"It does.\" She was surprised. The changes seemed so minor.\n\n\"Remember it. You talk to him about your brother? Take a higher grip.\" \n\nShe shifted her hands. \"Yeah. I thought Granna would have too many questions I wouldn't know how to answer. He's been figuring out what to tell her longer than I have.\"\n\n\"Tighten your grip with your thumb down.\"\n\n\"Isn't that what I'm doing?\" Kelly looked at her hands.\n\n\"Nope. When you grip it like you're milking a cow your other fingers move when you squeeze the trigger and it fucks up your shot. You don't need anything else fucking with your aim.\"\n\nKelly shifted her hands. \"Is that what you mean?\"\n\n\"It's better. What'd Joe say?\"\n\n\"That Cody has a home here for as long as he needs one.\"\n\n\"Good. Look at your front sight, take a deep breath, let it out, and squeeze the trigger.\"\n\nKelly did what he said, expecting to miss again. To her surprise, she hit the target's shoulder.\n\n\"Better. Do it again.\" He stepped back from her.\n\n*~*~*~*~*~*\n\nCreed tossed his newspaper aside and shifted around on the couch for the fourth time. Finally, he gave up and stretched out on the floor in front of the fireplace. Whoever the bastard was who designed that shit had missed his calling as a torturer. He stared up at the ceiling and listened to the water running in the closet of a bathroom. The frail was washing off the stink of the latest fight with the old lady. That pissed him off. So did the fact that he hadn't heard from Conlon all fucking day.\n\nAny way he turned it around, he came back to Stan. Didn't mean it made any goddamn sense. He could see how she would piss Stan off. He could see how her disappearance might be embarrassing to a guy in his new position, and that making a show of trying to get her back would be the thing to do. Actually trying -- especially this way -- was over the top for a show of desired family unity. Creed's phone vibrated. He checked the number and answered.\n\n\"About fuckin' time.\" \n\n\"Getting to the bottom of ten tons of manure would have been easier and I'm not there yet.\"\n\nHe growled. \"Well?\"\n\n\"Stan is itching to get your girl back. It doesn't make any sense, he's got the resources to make a serious play, but for some reason he's going the dumbass route.\"\n\n\"You mean someone with enough balls to actually show up while I'm within a hundred miles?\"\n\n\"That too. I found out that the Three Stooges were supposed to be there three days earlier, but they were guests of the local sheriff.\"\n\nCreed groaned. \"You're sure they were hired by Stan?\"\n\n\"I had to follow a string of third parties, but it's all leading back to him. Haven't been able to find the one who really knows anything though. There are a few more layers to go through first.\" He heard Conlon take a deep breath. \"This smells wrong.\"\n\nHe heard the shower stop. \"Keep digging.\" He ended the call and waited. Conlon was right. The whole thing was fucked up and before he could figure it out, he needed the whole story. She had to be keeping something from him, and one of the things he was good at was extracting the information he wanted. So why the fuck did thinking about it make his chest tighten?\n\nThe frail came out of the bathroom a few minutes later. She was back to wearing his shirts. He liked seeing her healthier curves in lace and silk, but she looked so much more fuckable in cotton or flannel. She smiled at him as she went by, carrying the clothes she'd been wearing that day. He watched her fuss around with separating dirty clothes and trying to decide between a book and her knitting. She turned toward the wall and he came up on her swiftly and silently. When she turned, he was only a few inches away from her. She gasped and dropped the book in her hands.\n\n\"What-\"\n\n\"Tell me about Stan.\" His tone was deliberately harsh, and it sent a tremor through her.\n\n\"I've told you all I know about him.\" Her voice quivered.\n\nPulses of anxiety came off of her with every heartbeat. \"Not everything.\"\n\nShe shook her head. \"I don't know-\"\n\n\"Bullshit!\" He watched her flinch and start to tremble. \"Someone tried to break into the house in Maine. Someone he hired. What the fuck do you have on him?\"\n\n\"Nothing!\" She was getting angry and she tried to push past him. That pissed him off.\n\nHe shoved her back into the wall, her head made contact with a hard thump. She groaned and he spun her around, pulling her arm up behind her again, hard enough to cause pain, not hard enough to injure. Yet. \"You struggle, I break it. You lie, I break it. You piss me off more than I already am, I'll be nice and tear it out of the socket. You understand me?\"\n\n\"Y-yes.\" He could smell her tears and her terror. The little whimpers she was trying to swallow made something inside him ache. He pushed it away.",
        "\"Good. Then we're gonna start again. What haven't you told me?\"\n\nTears flowed more freely. He felt her body go limp, as if resigned. \"All I know is how he treated Cody, my mother and me.\"\n\nHis hand tightened on her wrist. \"Then why is he coming after you this hard?\"\n\n\"I don't know!\" She sounded desperate, but there was no deception in it.\n\n\"What about CoH business. You said Dawes was gathering information.\"\n\n\"Dawes hadn't gotten very far. Just basics that anyone who lived in the area would know. Victor, please, I wouldn't keep something like that from you.\" The little sob at the end of her statement brought back that unaccustomed ache, and it was stronger than before.\n\n\"Doesn't make sense, frail.\"\n\n\"I know that!\" Another choked sob. \"If you're going to break it, just do it and get it over with because I don't know what else to say.\"\n\nHe pushed a little further, she cried out. He could feel the strain on the joint. \"Where'd he work?\"\n\nShe took several deep, gasping breaths. \"H-his study, but we weren't even allowed near the door while he was in there. It had the only phone and the only computer in the house. Unless he told us something, we didn't...\" As much pain as he knew she was in, something changed in her body. \"Oh God.\"\n\nHe eased the pressure slowly. That drew a fresh flow of tears as blood rushed in to strained flesh. \"What?\" His voice was still harsh.\n\n\"The basement. There was an air duct. I could hear everything he said.\" Her voice trembled.\n\nHe knew the realization was as new to her as it was to him. He lowered her arm, but kept her pinned to the wall with his forearm on her upper back.\n\n\"What did you hear?\"\n\n\"I don't know.\"\n\nHe growled. \"Frail-\"\n\n\"I only listened so I could keep my sanity. I used it to get a sense of what time it was and what day it was. I had no idea what was important and what wasn't. I didn't even understand half of it.\" She was shaking. \"I'm so sorry.\" She was swallowing her sobs. \"I shouldn't have dragged you into any of this-\"\n\nHe lowered his arm, but kept her between his body and the wall. She flinched when he stroked her shoulder. The fear rolled off of her in waves. Diffuse ache turned to cutting pain that tore through his chest. He waited until she was still, then started squeezing and rubbing carefully. Her tremors eased slowly. \"He's gonna be sorry.\" He stepped away from her. \"Get some sleep.\"\n\nHe turned and left quickly before she could say anything. \n\n*~*~*~*~*~*\n\nKelly had learned the value of frozen peas when she was eight years old and broke her wrist while trying to skateboard down a particularly steep hill near her house. Her mother had dithered between hyperventilating and lecturing. Her father had wrapped a bag of frozen peas around her wrist and took her to the hospital. Since coming to live with Victor, she made sure that there were always several bags in the freezer. \n\nShe got out of bed and refroze her current ice pack and got some ibuprofen instead. She curled up in bed in the dimly lit cabin. Victor had been gone for hours. She'd been trying to remember what she'd heard, and what about it could have been so important. Everything was running together. Lunch dates made with disembodied voices blended with confessions of marital infidelity and well-practiced sermons. None of it seemed important enough to make it dangerous or even interesting to anyone else.\n\nShe heard the door open and Victor sit heavily on the floor. Next, she heard him set a bottle down. It sounded too big to be a beer bottle. After a few minutes of silence, she got up and approached him. An empty bottle of Jack Daniel's sat on the stone fireplace surround. She knew it had been nearly full when he left.\n\n\"Thought you were sleeping.\" He didn't turn to look at her.\n\n\"I couldn't.\" She moved closer and saw dried blood around and underneath his claws.\n\n\"'Cause of your arm?\"\n\n\"No. Because I can't think of anything I know that's so terrible.\"\n\nHe looked over his shoulder at her, then moved over. She sat next to him and leaned against his arm. Kelly closed her eyes and took in the smell of wood smoke, alcohol, cold night air and the baser scents of blood and sweat. It was uniquely him, and the most comforting thing she could think of at that moment. He leaned slightly into her.\n\n\"Did you really think I would lie to you about this?\" Her voice was soft.\n\n\"Frail, people been lyin' to me for as long as I can remember for more reasons than I can count. Half the time I think it was just for the hell of it. A long time ago I figured out the quickest way to get the truth and stuck with it.\" He stared at the embers of the fire. \"'F you want, I'll take you to Joe's house.\"\n\n\"I don't want to go there.\" She took his hand, ignoring the gore. \"I want to go to bed. With you.\"\n\n\"I could've-\"\n\n\"Did you want to?\"\n\nHe looked at her quickly, his eyes locked on hers. She noticed that there were flecks of dried blood on his chin and neck too. The corner of his mouth twitched. \"Broken frail ain't no good to me.\" His voice was far softer than his words. "
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "non-erotic",
        "pain",
        "hurt-comfort"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-14"
}