{
    "title": "When Ordinary Isn't Ch. 04",
    "pages": [
        "\"Eric,\" he heard through fuzz.\n\n\"Eric, Baby,\" he heard and felt his shoulders being jostled.\n\n\"Erriic,\" Peggy sang.\n\n\"Just five more minutes,\" he groaned into his pillow.\n\n\"Wake up, sleepy-head. We gotta get moving, don't we?\"\n\n\"Why?\" he said without moving.\n\n\"Didn't you tell me the meetings start at nine?\"\n\n\"Yeah.\"\n\n\"It's 7:45.\"\n\n\"Oh, crap!\" he bolted. \"My alarm didn't go off!\" \n\n\"Don't blame your phone, dude,\" she chuckled. \"I forgot to set mine, too.\"\n\nHe quickly rousted himself out of the bed, and the two shared a shower, refusing their mutual urges for a little morning hanky panky.\n\nEric shaved at the sink while Peggy shaved her legs in the shower. He finished dressing as she began to style her hair. When she joined him back in the living area of the suite, he was brewing himself a cup of coffee in a Keurig.\n\n\"Want a cup?\" he asked her.\n\n\"Absolutely. Just like yours, please,\" she smiled, seeing that he preferred his coffee with cream and no sugar. \"I've gotta finish putting on my makeup.\"\n\n\"Hold up a second,\" he said, stepping toward her. He loosened the cinch-knot on the top of her towel and it fell to the floor around her ankles. He held her warm, dewy, naked body close and kissed her softly.\n\n\"Good lord you're so beautiful.\"\n\n\"Why'd you do that?\" she smiled sweetly.\n\n\"What. Kiss you?\"\n\n\"Yeah, but like just right then.\"\n\n\"Because that kind of kill would mess up your makeup if I waited until after.\" \n\nThe threads continued to unravel. Others followed in the incessant tug.\n\n\"I'm hands off from this point on. I promise,\" he added.\n\n\"Oh ho ho ho,\" she laughed. \"I'll bet you a thousand dollars that you can't.\"\n\n\"Can't what?\" he asked with arched brows.\n\n\"That you can't keep your hands off me,\" she said.\n\n\"You're on in five seconds.\"\n\n\"Why five sec&mdash; Ow!\" she shrieked with laughter when he playfully but firmly swatted a cheek of her bare bottom. \"You're on!\"\n\nHe left her alone to finish her morning routine. She didn't replace the towel, so he watched her beautiful naked body work its magic as she primped. He couldn't take his eyes of her little tush. Her cheeks were so firm and tight that they didn't quite meet, leaving more of a valley than a distinct groove. He noticed her pecan-colored pucker near the base, just an inch behind her smooth-shaven vulva.\n\nThe sight made him want to tackle her and have his way, but he decided he'd much prefer she attack him in her own time. \n\nShe pulled two business suits from her case.\n\n\"Which one?\" she asked him, holding up two blazers.\n\nHe looked at the pairings. \"Hold that one up?\" he requested, pointing to the one she held in her right hand. She brought it under her neck.\n\n\"Yeah. That one. That color really sets off your hair and eyes.\"\n\n\"Really? It's dark. What does that have to do with my eyes?\"\n\n\"Just telling you what I think. You've got those incredible pale green eyes and flaxen hair. Light versus dark. Rebels versus Empire. Sweet versus savory. Yin and Yang. I should stop now.\"\n\nShe laughed at his comical comparisons.\n\nShe pulled a pair of tiny black cotton panties from her suitcase and slipped them on, then a lacy black bra. She saw him smile as she put it on, hiding her little breasts away.\n\n\"Want to go downstairs and get some breakfast?\" Eric asked when she was finished dressing and re-packing.\n\n\"A light one. Maybe just a piece of fruit.\"\n\n\"Perfect. Lead the way.\"\n\nShe started walking toward the door, then stopped.\n\n\"What's wrong?\" Eric asked.\n\n\"Nothing,\" she said. She unzipped the back of her skirt, pushed her panties down her thighs, then re-situated her skirt and completely removed the thong. She folded it up and secreted it in the zippered compartment in her purse. She checked herself in the mirror one more time.\n\n\"Ready!\" she said with a wicked grin, and walked out the door with him following.\n\n\"I think I'm going to need to stop at the ATM on the way out of here,\" he said with a chuckle. She returned a simple, innocent, coquettish smile.\n\n\"Hand-holding doesn't count,\" she offered, taking his hand as they walked down the corridor.\n\nThey each selected a piece of fruit from the complimentary buffet in the restaurant and headed out for the day.\n\nEric found it intensely distracting knowing that delightful, incredibly attractive and wickedly intelligent woman sitting a few seats away from him at the conference table, being completely professional and insanely well-postured and poised, was not wearing panties under her skirt. It was a choice she made spur-of-the-moment, and purely to cause that very reaction.\n\nIn fact, when the dozen or so doctors and other professionals rose for a break, Peggy turned in Eric's direction and crouched to pull something from her soft-sided leather briefcase. Her posture and position were modest and ladylike, but she knew he was watching.\n\nThere was no one near him, and no one either in front of or behind him. She caught his eyes with hers and parted her knees very slightly. He caught just the slightest hint of what was bare there. From the slight grin on her face, he knew she knew what she was doing. He did see the guy behind her watching what was probably, for him, a very nice view of her hips and bottom without the faintest hint of a panty line under the taut fabric.\n\nEric saw that man's eyes widen sightly for a few seconds before he politely averted his gaze, and it took every ounce of his own self-control to not let his own mouth go agape or show any sort of untoward reaction. It wouldn't do at all for the others in the room to see something like that. It would certainly not be very professional for him to display what was happening much closer to his midsection, so he decided to return to his seat and distract himself with case reports and charts until his anatomy returned to baseline.\n\nHe heard Peggy chuckle when she walked behind him, as if she'd heard something funny. \n\n\"Your visuals sure are helpful,\" Eric said, turning pages as she passed, wondering if she'd catch his double entendre. \n\n\"I try to ensure that the reader's interest is piqued,\" she said as she leaned just close enough to him that he could smell her delicate perfume. \"I try to keep the fluff in the right proportions. I want the reader to be left with a rigid understanding, wanting to penetrate the morass of data, and to be prepared to drive hard into the conclusion.\"\n\nShe had certainly caught it, and her own multiple delivery made it where he wouldn't be able to stand up again for a few more minutes. \n\nBoth during and after lunch, the conversations and discussions went deeper into Peggy's background and experience. The meeting continued for several more hours.\n\nAt close to four o'clock, a staff aide asked Peggy to follow him to another room. Eric followed them.\n\n\"Please, wait here. The board needs some time to talk privately,\" he said before he closed the door to the room to which he'd escorted them.\n\n\"Eric, what's all this about?\" Peggy asked.\n\n\"I have no idea. I guess they want to talk without you in the room.\"\n\n\"Yeah, that's kind of obvious. But it makes me nervous.\"\n\n\"Why?\"\n\n\"I know they're talking about me, and they'd be doing it whether I'm in the building or not. But stashing me in another room? Yeah. Just makes me feel great,\" she said, her voice dripping in sarcasm.\n\nThe team room in which they sat was walled with floor-to-ceiling glass on one side. Eric wanted to take Peggy in his arms and offer her a reassuring hug, but felt it wouldn't be appropriate where they presently were. They sat and idly chatted for about thirty minutes before they were fetched and returned to the main conference room.\n\n\"Doctor Foreman,\" Doctor Shields, the chairman of the hospital board, spoke. \"Consider this hypothetical. If you were offered this position, and you chose to accept it, please describe to us what your departure from OC Regional would entail.\"\n\nThere it is, Peggy thought to herself. That's the magic question.\n\nShe knew the question was a mildly loaded one. The director was tacitly asking what she would do if, while working as the Research Director at his hospital, another exciting opportunity were to cross her path. He was asking how her prospective new employer would be treated if she was wooed away.\n\n\"My time at Regional has been intensely satisfying and both personally and professionally fulfilling. I've made a number of friends there, and it will be very difficult to say goodbye. Please understand, I say this with no ego in mind, but I like to think my departure will be noticed, that I'll be missed.\n\n\"I'm sure I'll face questions, and it will be easy and honest to explain that my time at OCR has provided for many invaluable experiences, but it's time for me to travel another avenue.\n\n\"That should come as no surprise to my peers. Not only do we seek to improve patient care, we seek to better ourselves as physicians to ensure it. I will certainly strive to maintain professional contact and continue to network with all of my peers from whatever distance.\n\n\"I think it fair that I offer them one month's notice of my resignation. I might be prepared to offer up to another month if appropriate incentives were provided.\"\n\nPeggy had collected a small stack of papers and a few folders. She straightened them by tapping them on the table as a final punctuation mark to her answer. She didn't think about such actions consciously, but her skill and diplomacy in interacting with decidedly bureaucratic personnel guided her instincts.\n\nShe watched as Dr. Shields scanned the board members seated around the table. Peggy observed seven subtle nods. Dr. Shields smiled.\n\n\"Doctor Foreman, thank you so much for spending your valuable time with us. I'm to understand you're due back in Orlando this evening?\"\n\nPeggy nodded, \"That's correct. I'm on call tomorrow morning at seven o'clock.\"\n\n\"I definitely do not miss on-call rotations,\" he chuckled. \"I think we have everything we need, so we'll let you get out of here. The board has some other items to discuss before we can make it official, but I don't think it's terribly premature to tell you that you might want to think about broaching the subject of your departure with your... perhaps... former employer.\"\n\nShe stood from the table as Doctor Shields rose and walked around it toward her. He shook her hand and the rest of the participants stood as well to offer presumptive congratulatory hand-shakes. \n\nPeggy collected the remainder of her papers, closed her laptop, and put everything in her attach\u00e9. Eric followed behind her as she exited the room.\n\n\"How are you feeling?\" Eric asked her as she slowly walked the corridor toward the elevators.\n\n\"What. Just. Happened?\" she whispered, stopping almost mid-stride to lean against a column.\n\n\"I think they just said you have a new career ahead of you if you want it.\"\n\n\"I'm numb,\" she said. \"This all happened so fast. I think I need a bit of a drink.\"\n\n\"Okay,\" he grinned. He took her attach\u00e9 from her and offered her his arm. She took it then resumed walking.\n\n\"What am I supposed to do now?\" she asked when they boarded an elevator.\n\n\"Nothing is set in concrete yet, Peggy. Don't panic,\" he chuckled.\n\n\"I'm not panicking. I'm just kind of reeling. But really! What am I supposed to do now?\"\n\n\"I guess you'll start by going home. Hopefully your on-call won't be busy and you'll have plenty of time to think. Remember. Nothing is set in motion until they send you an official offer letter. And you can still say no.\"\n\n\"I wonder how long they'll let me think about it.\"\n\n\"I imagine they will give you a few days to sleep on it. They've done what I asked, so the endowment is locked in now, and they'll be anxious to see it getting put to use as quickly as they can.\"\n\n\"Are you surprised they gave me that wink-wink just now? Because I am.\"\n\n\"I'm trying to decide,\" he chuckled. \"I don't know how it works in this business, but yeah, I'd have never done that immediately after an interview. All I can say is that you must have impressed the absolute hell out of all eight of the members for them to give the nod that quickly. I'm not surprised they liked you. I told you before that I thought you were a shoe-in for the role. Your passion and drive were infectious and everyone caught it.\"\n\nThe elevator display read B2 and the pair disembarked into the basement-level parking area. Only a minute later, they were back in Eric's truck and headed onto Interstate 35.\n\n\"What should I do?\" Peggy asked.\n\n\"About what?\"\n\n\"Should I take it? The job?\"\n\n\"Whoa. I can't answer that. Right now, what is your gut telling you?\"\n\n\"My gut is saying 'Hell yes!'\"\n\n\"Well, listen to it. But also listen to your brain. Your gut is your instinct, right? But your objective side should also join the conversation until the two of them can come to an agreement.\"\n\n\"You sure are good at answering without answering,\" she chuckled.\n\n\"I know,\" he smiled at her.\n\n\"So what's next?\"\n\nHe drove wordlessly for a few moments. \"Sweetie, I asked you last night if I could go back to Orlando with you.\"\n\n\"Yeah.\"\n\n\"I'm wondering if that's a bad idea.\"\n\nShe stared at the car in the lane next to them, in thought. She took his hand in hers and held it firmly.\n\n\"Eric, come back with me, okay? Please?\"\n\n\"Are you sure I won't be a distraction?\"\n\n\"Of course you'll be a distraction. That's kind of the point,\" she chuckled.\n\n\"Whatever you say, Baby. I'll follow you anywhere.\"\n\nThose words caught her off-guard, and her heart sizzled. Innumerable threads were now unraveling. Light was shining through her inner fabric. \n\nEric parked his Silverado in the reserved parking spot at the hangar about ten minutes later. When the two exited, he carried their bags and placed them directly onboard, then came back out of the plane.\n\nMonica approached the two from a small office. \n\n\"My apologies, Sir. I didn't know what time I should expect you. How'd it go today?\" she asked Eric.\n\n\"Very well, I'd say,\" he answered.\n\n\"Excellent! Congrats, Doctor Foreman.\"\n\n\"Thanks, but I don't want to jinx anything just yet.\"\n\n\"Have you filed a flight plan yet?\" Eric asked the pilot.\n\n\"No, Sir. I didn't know you were on your way. I was waiting. It won't take more than twenty minutes to get one into the system,\" Captain Sanz added. The copilot began the pre-flight while Monica returned to the pilot briefing room in the hangar.\n\n\"No Danny?\" Peggy asked, climbing the air-stairs. \n\n\"No Danny,\" Eric's eyes twinkled as he followed her on board.\n\nShe took the rear-facing seat on the port side and Eric sat across from her. She popped up the LCD screen, but it had no route map since the flight plan hadn't been entered into the flight management system in the cockpit.\n\n\"Want something to drink?\" he asked.\n\n\"Yeah. Something strong,\" she chuckled, \"and some cold water.\"\n\n\"What would you like?\" he asked.\n\n\"What's available?\" \n\n\"Several soft drinks and liquors, and a few different wines.\"\n\n\"Got any Jack Daniel's?\" she asked.\n\n\"Let me check.\"\n\nEric went to the small galley which was located behind her seat and opened a drawer. He pulled out a small plastic bottle and showed it to her. \"Sure do. Jack and Coke?\"\n\n\"Nah. Just pour one over ice.\"\n\nHe pulled two of the single serving bottles of the liquor from the drawer, then filled two rocks glasses full of ice from the small insulated chest the copilot had just refreshed. He poured them, discarded the empties, and handed both glasses to her so he could return and draw two bottles of cold water from the iced compartment..\n\nHe sat across from her and took a sip of his whiskey with a sigh. \n\nShe took a healthier sip from hers and crunched the small piece of ice that came with it.\n\n\"You've been a very good boy,\" she said with a wink.\n\n\"Oh? Why?\"\n\n\"No particular reason,\" she whispered as she slowly parted her knees and shifted slightly forward in her seat. Her knees were about a foot apart when the fabric of her skirt prevented more expansion, but it was more than enough. She saw his gaze drift lower and his involuntary smile as he stared at her plainly visible blonde fur-topped pussy.\n\n\"You are evil, you know that?\" he grinned.\n\n\"Yeah,\" she cooed.\n\nPeggy reflexively closed her knees and restored her modest posture and position when she heard feet climbing the airstars. It was the copilot again, and he took his seat on the flight deck.\n\nThe pilot was not far behind. She came to Eric and Peggy's seats. \"We're good to go, Sir. Y'all set?\"\n\n\"Sure are, Monica. Thanks.\"\n\n\"ETA at Orlando Executive is 9:15pm eastern time,\" she said, turning to the air-stairs which she pulled up, sealing the door.\n\nA small tug drove past the window, and a few moments later, they felt the plane being pushed away from the hangar building. Eric saw the LCD come alive with new data. \n\n\"Crap,\" Peggy whined.\n\n\"What's wrong?\"\n\n\"I meant to change clothes before we left. This outfit isn't the best for flying.\"\n\n\"It is from where I sit,\" Eric laughed.\n\nShe playfully threw her water bottle's cap at him and it hit him squarely in the chest, right on his tie-clip, increasing his laughter. Eric peered out the window.\n\n\"You probably have some time,\" he said, unbuckling and trotting to the back of the airplane where he opened the lav door and yet another door she hadn't noticed behind it. He grabbed her suitcase and brought it forward, sitting it in the seat on the opposite side of the aisle.\n\n\"You've got maybe five minutes,\" he chuckled as the airplane began taxiing under its own power. \"Can't close the cockpit door yet because we're not airborne. But if you stay behind the galley bulkhead, they can't see you.\"\n\nShe jumped up and opened her suitcase and pulled out a pair of denim shorts, a pair of paisley-printed cotton hip-hugger panties, a simple v-neck tee-shirt, a more comfortable bra than the lacy underwire she was presently wearing, and the same sandals she'd worn the day before. She shucked her clothes quickly, rolled the items carefully, and stuffed them into the case along with her dressy shoes. \n\n\"Better hurry!\" he whispered, seeing the bright yellow sign marking the intersection of taxiway \"Golf.\" He knew the airport like the back of his hand and estimated they had less than two minutes before they'd reach the runway.\n\n\"Here!\" she said when she'd closed the suitcase. He took it and re-stowed it aft as she quickly donned her clothes. \n\n\"You're not going to change?\" she said after she'd buttoned her shorts.\n\n\"I'll wait until we're airborne,\" he said, returning to his seat. He took a long sip of whiskey. She did the same as she almost breathlessly returned to her own.\n\n\"Whew! Never changed clothes in a moving vehicle before, let alone a taxiing airplane,\" she chuckled.\n\n\"A first time for everything,\" he smiled.\n\nShe felt the airplane turning and saw they were about to take off. She cinched her seat belt and watched as their rocket took off to the north. The whole plane shuddered as the gear was retracted. \n\n\"There have been more firsts for me in the last few days and weeks than I can count,\" she said.\n\n\"I know how you feel,\" he reflected. \n\n\"Really,\" she scoffed. \"This is your way of life. What kind of firsts are you talking about?\" she challenged.\n\n\"Well, let's see. Yesterday was the first time a woman bought my dinner at that steakhouse, and you and I had the same first yesterday right here in this seat,\" he chuckled.\n\nShe smiled and twirled her hair around a finger absentmindedly, sipping slowly at her whiskey before taking a drink of water.\n\nAfter about twenty minutes, the Citation had leveled off at thirty-seven thousand feet.\n\n\"You're killing me, you know that?\" Eric said.\n\n\"What? How?\" she asked.\n\n\"I don't like losing bets.\"",
        "\"What?... Oh,\" she smiled. \"Yeah, you've been a very good boy. You've won the bet.\"\n\n\"Yeah? You sure?\"\n\n\"Yeah,\" she smiled sweetly at him. \"I'll pay up as soon as I get my check.\"\n\n\"Nah, don't worry about it. You bought dinner yesterday, and it was a fun challenge,\" he smiled.\n\nWhen he unbuckled and knelt on the floor in front of her seat, she anticipated and hoped earnestly that he'd reach for any of her pleasure points. She was surprised that he simply wrapped his arms around her waist, settling his forehead on her sternum. His actions felt different. The contact was certainly welcome, and she realized it was exactly what she needed at that exact moment. He'd somehow sensed her need before she had.\n\nHe sighed as she traced her fingers through his hair and softly stroked the edges of his ears with her thumbs. The tenderness of her touch was unlike any other woman with whom he'd only thought he enjoyed spending time.\n\nEric's inner voice shouted at him.\n\nShe's not one of those artificial leeches. She is real, you ignorant, stupid, blind fucking moron! This woman is real!\n\nHe lowered his head into her lap, resting it on her warm thigh. She stroked his hair tenderly but with gentle tugs he felt through every follicle. She could feel his warm breath against her skin.\n\n\"Peggy, I wish I could figure out what you've done to me,\" he said.\n\nHis voice didn't sound relaxed and soothed. It sounded uncertain. It sounded like the timid voice she'd heard the first time she'd spoken with him. It was Ordinary Eric.\n\nShe gently palmed his temples and brought him to her waiting mouth.\n\nTheir kiss was soft. It was gentle. It was a kiss of reassurance. It lacked the fire of raw passion and smoke because it wasn't necessary in a moment that began dilating time.\n\nTwo ingredients had been in every kiss they'd shared, but in barely-detected proportions. The one they shared in that moment contained only those two. It consisted only of pure, unadulterated and unfiltered tenderness and heart-filling affection. Peggy's mind was ablaze. The remaining threads completely unraveled. Her soul was bared.\n\n\"Eric, I need to say something, and I need to say it right now, but I'm scared shitless because I've never... I've never been the first one to say it, and I'm scared because I have nowhere to run right now unless I find a parachute hidden somewhere on this plane.\"\n\nShe pierced his eyes with her gaze. \"I think... no... no, I'm... sure. I've... fallen in love with you.\"\n\nShe watched his face with some fear of what he would think of her confession. Time slowed to the point where every second seemed to linger for ten. She felt her heart thump once. She saw his eyebrows slowly arch upward. She saw his eyelids blink once, twice, then open widely. Her heart pulsed again. She felt with the fingertips still at his temples a beat of his temporal arteries and the muscles near his ears change from slightly clenched to a state where his jaw slackened. His mouth went very slowly agape.\n\nShe peered into his eyes and saw glistens the size of a grain of salt appear in the corners of both. She saw them grow, very slowly in her time, to the size of sesame seeds and coalesce into drops that fell as if suspended from invisible parachutes from the innermost lashes onto his upturned cheeks. \n\nIn her brain, it took an exorbitant amount of time before she saw his own lips begin to move and for her eardrums to resonate with the sound of his voice. It sounded as if it was spoken from a vehicle moving away from her at 100 miles per hour, the Doppler effect drawing its tone downward and slowing its cadence.\n\n\"I'm in love with you, too,\" he'd whispered.\n\nHis lips had stilled before the words registered in her brain. Time snapped back to the moment. She heard her heart racing in her ears over the din of the jet's engines. \n\nShe clutched his vulnerable body to her own and embraced him so tightly his lungs strained to inhale.\n\n\"Say it again,\" she begged.\n\nPushing gently away from her so he could see her eyes, he said, \"My god. I'm in love with you. I love you, Peggy.\"\n\nThe look of joy in his expression bore stronger witness than any she'd ever seen before on anyone. She wiped the tears from his cheeks, grasped for him and drew him to her again.\n\n\"Please, Eric. Say it one more time?\"\n\n\"I've never felt this way before, Peg, I've never felt this before. I've never felt like this before. I am so in love with you that if I die right now, I won't give a crap.\"\n\n\"Don't do that!\" she laughed. \"Oh holy cow, Baby. Is there something wrong with the cabin pressure? Are we like hypoxic or something?\"\n\n\"No, I'm pretty sure we're good,\" he said as he reached out and playfully pinched her arm.\n\n\"Oochie!\" she laughed. \n\nHe saw tears on her cheeks and leaned forward and kissed them away. He felt her eyelashes flutter against his nose in the softest of butterfly kisses when his lips were against her soft skin. Their next kiss contained perfect proportions of love, affection, tenderness, and yes, a smolder with the smoke of passion.\n\nThey settled back into their seats, grinning wildly at each other. \n\n\"God, Peggy. What the hell?\" he chuckled. \"You just... Holy crap. How the hell can this be happening?\"\n\nHis face expressed an odd mixture of glee and puzzlement.\n\n\"I know, right?\" she said. \"I mean, I've only known you for a few weeks. Less if we subtract the mystery-gap.\"\n\n\"Yeah, exactly! I don't get it! There's just something about you that's totally set my hair on fire, and I can't figure it out.\"\n\n\"Why question it?\" she asked, stroking his knee.\n\n\"Because I'm a nerd. I'm a geek. I question everything.\"\n\n\"I don't know how to answer you,\" she smiled sweetly. \"But I can tell you what, as you say, has set my hair on fire.\"\n\n\"Please do,\" he said.\n\n\"You're like... normal. You're just... I know this sounds mean, but it isn't. You're just ordinary. You're not a scalpel-jockey. You're not egocentric. You're not maniacally controlling. You're in the moment with me. You're just like the total opposite of all the things that's put me off of the guys I've dated.\"\n\n\"Yeah! Exactly! Same with you!\"\n\nHe paused, \"Well, sorta. You're gorgeous, obviously, but you're so reserved and guarded about it. When I'm with you, it seems like you're happy to let it show. You're so freaking brilliant that it kind of hurts my brain. Your passion for what you do is contagious. You're nothing like the... You're unlike anyone I've ever had the chance to get close to.\"\n\nHer heart was warmed by his words. \n\n\"Hey,\" she said.\n\n\"Yeah?\"\n\n\"I love you,\" she winked.\n\n\"I love you, too,\" he smiled. \"Now, if you'll excuse me, I'm getting out of this suit.\"\n\nShe stood with him, but grasped his shoulders and held him in place. \"Wait here, please?\"\n\nShe took the short few steps to the back of the plane and pulled his bag out and brought it back with her. She lowered the slipknot of his necktie and eased it from underneath his shirt collar then over his head. She untied it and smoothed out the silk where the knot had been, then folded it neatly.\n\nShe unbuckled his belt and removed it from the loops of his trousers and sat it next to the tie. She then, starting at the top, began to unbutton his shirt, kissing him, and ran her hands over his chest, tousling his fur. She wetted the tip of her finger in her iced whiskey then ran it gently across his nipple. She felt it harden quickly under the cold. She pulled his shirt off his shoulders, bent forward, and warmed his nipple with her tongue before she suckled it for a few seconds.\n\nEric had to fight the urge to moan out loud at the pleasure she gave him.\n\nShe pulled his shirt from the waist of his pants and removed it from his body. She watched his fiery eyes as she folded it carefully. \n\nShe knelt in front of him and unbuttoned his pants, and very slowly lowered the zipper. She could feel his raging erection underneath the Merino wool fabric and was very careful to not catch his flesh in the zipper. She saw his penis at what appeared to be a very uncomfortable angle, so she nuzzled it with her cheeks and nose to reposition it inside his boxers. She caught his scent. \n\nShe stepped to the galley and fetched several napkins, then knelt again and lowered his boxers very slowly, tenderly kissing each bit of the flesh of his penis as it was bared to her. She nuzzled into his mat, breathing his scent deep into her lungs. She kissed his scrotum very delicately, feeling his testes move in response to the stimulation of his sac. He groaned softly.\n\nShe looked into his eyes, opened her mouth, and enveloped his glans. Her eyes rolled back and closed when she tasted his essence which had begun to seep from him. She slowly caressed his shaft, licking his length and kissing the tip of his swollen head softly. \n\n\"Tell me when you're close, okay?\" she smiled sweetly at him.\n\nHe nodded.\n\nShe fellated him sweetly and with tenderness. Eric braced himself against the seat-back with a hand over his mouth. He wanted to call out her name so loudly that pilots in other planes nearby could hear even through the rarefied air. He was in exquisite bliss.\n\nIt took mere minutes for her to bring him to the brink.\n\n\"Peggy&mdash;\" he stuttered.\n\nShe removed him from her mouth and wrapped his head in the napkins, pumping him with her hand. He emptied himself into the paper as he gasped for air. She cleaned the end of his shaft. The heat of his semen was evident in the mat of napkins. She felt it soaking into the paper at her fingertips as she folded it and dropped it into the wastebasket.\n\nAs he watched her, she wordlessly opened his bag and looked inside. She pulled out a pair of khaki golf shorts and a simple sport shirt. His loafers were at the bottom. She handed the items to him and watched him dress. She placed his folded shirt and tie in the bag, then fetched his suit coat from the closet. She placed the pants on the hanger with the coat and looped the belt over the hook of the hanger and placed them back in the closet.\n\nHe laughed. \n\n\"What's wrong?\"\n\n\"Nothing. I'm just laughing because I told you I loved you like barely ten minutes ago and now you're dressing me.\"\n\nShe blushed. \"Oh, my God, Eric. I'm so sorry! I didn't think about it like that. I wasn't intending to act controlling. Please. I'm really sorry!\"\n\n\"No, no! It's okay! I'm not upset or anything, I just thought it was actually funny!\" he said, pulling her close to him. \"Heck. I suggested the suit you wore this morning, right?\"\n\n\"Yeah, but I asked you to. Shit. I'm a moron,\" she sighed.\n\n\"Peggy,\" he kissed her. \"Stop. It is absolutely fine.\"\n\n\"You're sure?\"\n\n\"Of course I'm sure. But I do need you to do me a big favor,\" he said.\n\n\"Anything.\"\n\n\"I want you to sit in that seat, and do what you did when you were wearing your skirt.\"\n\n\"What?\" she laughed.\n\n\"Please?\"\n\nShe watched him cautiously but acquiesced. \n\nShe opened her thighs. She wasn't expecting him to drop to the floor between them, or when he placed his nose against her crotch and slowly inhaled. She was momentarily frightened that he'd be repelled by her, considering she hadn't showered in close to twelve hours. But he did it again. And again, smelling her genitals through the cloth.\n\n\"Mercy you smell so delicious,\" he said. Her scent was rich and full. \"Can I have a taste, please?\" he begged.\n\nHer answer was in her actions as she unbuttoned her shorts and pushed them, along with her paisley panties to her ankles and gave him exactly what he wanted.\n\nEric licked slowly, deeply between her folds from the base of her vagina through her opening and over her clitoris. He quivered at her flavor and began licking her engorged nub. \n\n\"Oh, god!\" she squeaked. \"Yes yes yes yes,\" she panted through clenched teeth.\n\nHe lapped into her swollen parts and drew every drop of her moisture into his mouth and relished her savory flavor.\n\n\"Cum for me, Peggy. I want your body to feel how much I love it,\" he hissed.\n\nShe reached between her legs with both hands and separated her labia, revealing the dewy pink flesh of her vagina and exposing her clitoris.\n\n\"Right there, right under there,\" she sighed as the tip of his tongue flicked her meatus and drew upward to the underside of her nubbin.\n\n\"Fuuuuu&mdash; More more more more,\" she mewled. \n\nHe found the perfect rhythm. His stimulation began pushing her overboard.\n\n\"I'm so close, Baby. I'm so... yessss,\" she hissed as her orgasm arrived.\n\n\"Oh, god yes!\" She rasped and grasped at his hair.\n\nHe slowed his pace, feeling her little bottom quiver in his hands. Her breathing settled. She was feeling extraordinarily pleasant and relaxed. He kissed the inside of both her thighs, then the groove between her thighs and vulva, then settled with a slow gentle kiss of her wet little pussy. \n\n\"Goodness gracious, Peggy. I love how you tell me what you like,\" he smiled.\n\nShe trotted back to the hold behind the lav, shucked her panties and put on fresh ones after she realized her sodden ones were made cold and uncomfortable. \n\nBoth feeling satisfied, they returned to their seats. \n\nEric took a long drink of water and looked at the LCD. It showed a time remaining in flight of just over an hour.\n\n\"Oh, wow,\" he said as he looked at the other data.\n\n\"What is it?\"\n\n\"We're now members of an even more exclusive club.\"\n\n\"How so?\"\n\n\"Look at our altitude,\" he pointed.\n\n\"Fifty-one thousand?\"\n\n\"Yeah,\" he grinned.\n\nShe just shrugged.\n\n\"There are very few passenger planes on this planet that can fly this high. None of the commercial airliners can. I'm kind of surprised we're at this altitude considering we're going east, not west.\"\n\n\"So we're in the ten-mile-high club,\" she chuckled.\n\n\"Yeah. Even if astronauts have been doing things they don't talk about, I don't think there are that many of us,\" he said with a chuckle.\n\nHe refilled both glasses with more ice and added another bottle of whiskey. Peggy had changed seats and was sitting on the starboard side.\n\n\"Look at that sunset. It's so beautiful from up here,\" she said with childlike glee. \n\nEric smiled. He was very familiar with what she was seeing, and he was glad to have given her the opportunity to see such a marvel herself. Peggy rejoined him a few minutes later after the vestiges of the sun had slipped below the horizon. \n\nThe cockpit bulkhead was soon opened and secured. Monica announced they were on approach to the airport. Peggy peered into the flight deck and watched the pilots fiddle with knobs and buttons on their glass-panel instruments.\n\n\"When we land, I'll go check into a hotel, and do we meet up somewhere tomorrow or something?\" Eric asked.\n\n\"No.\"\n\n\"No?\" he asked, confused.\n\nPeggy chuckled. \"Hotel? Have I given you the wrong idea?\" she smiled. \"I'd much prefer it if you stayed with me. At my house.\"\n\n\"Your house. Really?\" he asked.\n\n\"Of course. It's part of the reason I wanted you to come back to Orlando with me. There's something there I want you to see,\" she said as the landing gear unfurled below the plane.\n\n\"Okay, you've really got my curiosity piqued now,\" he chuckled.\n\nA few minutes later, the airplane was on the ground and taxied to the same hangar from where Peggy had departed the previous morning. When the engines shut down, the copilot opened the air stairs and went to speak with the marshal outside. They followed him down.\n\nThe two collected their bags from a crewman then Eric placed their suitcases in the trunk of Peggy's vehicle. They were on the road mere minutes after the plane shut down its engines. \n\nAs they neared her residence, Peggy tentatively pulled Eric's hand into her own and held it nervously. \n\n\"Nice scenery around here,\" Eric said as she drove among some rather nice looking properties. Most were difficult to see fully in the darkness, but several homes glowed in rich architectural exterior lighting.\n\nOne drew into view that had a driveway lined with incredibly lush up-lit palms for its entire hundred yard length. A wrought iron gate at the entrance from the street began to swing open when Peggy pushed a button on the overhead console. Eric's jaw visibly slackened when Peggy turned onto that very drive and slowed as it approached a structure for which he couldn't find words to describe.\n\nHe looked at Peggy and saw she was studying his reaction very closely.\n\n\"What is this place?\" he asked in wonderment.\n\n\"It's my home.\"\n\n\"You... what? You own this?\"\n\n\"Yeah. I do. Does that surprise you?\" \n\nEric stepped out of the vehicle onto the well-lit patterned concrete driveway.\n\n\"Holy cow,\" he said after a few moments of observation. \"Lucy, you've got some 'splainin' to do,\" Eric said, mimicking Ricky Ricardo's accent.\n\n\"Yeah. I know. Come inside,\" she said, taking his hand and leading him through incredibly ornate heavy oak doors. She pushed a button on a backlit panel in the dark room and lights began to brighten.\n\n\"Whoa,\" Eric gasped and laughed nervously when he saw the lavishly appointed foyer into which they'd stepped.\n\n\"What's on your mind?\" she asked, even though she knew what he was thinking.\n\n\"Uh, I'm just curious. And I understand that this is none of my business, but, I don't know too many young doctors that can... \" he hesitated.\n\n\"That can afford a place like this?\"\n\n\"Yeah.\"\n\n\"You're right. No way in hell could I afford this on my salary. Not many retired doctors could, either,\" she said.\n\n\"Then...\" \n\n\"My parents bought it a while back. They've both since passed away. This was their winter house, and I took it over when they died. I've updated it a little.\"\n\nEric swallowed a lump in his throat. \"Oh, Peggy, I'm so sorry.\"\n\n\"I appreciate your condolences, but there's no reason to be sorry, Baby,\" she smiled. \"My mother passed away about six years ago. My dad, bless his soul, followed about three months later.\n\n\"She died of natural causes. She was 87 and he was 84. I guess he just kind of drifted away after she died. He passed in his sleep. I can tell you this. Other than the last three months of Dad's life, they were very happy and healthy.\"\n\n\"That sounds so sweet,\" Eric said. \n\n\"It really kind of is. They were so good to each other. I poked fun at them because they were constantly showing affection to each other. Stealing kisses and holding hands... they adored each other. They were married for sixty-five years.\"\n\n\"Aww, that's so beautiful,\" Eric said earnestly. \"But... wait,\" he paused, brows cinched. \"Does that mean your mom had you when she was almost fifty?\" Eric looked at her quizzically.\n\nPeggy chuckled. \"No, my birth mother had me when she was seventeen. That's the only thing I ever knew about her. I was adopted.\n\n\"My adoptive parents, God bless them, never were able to have children of their own. But, yeah. They adopted me when they were getting up there in years.\n\n\"Kinda strange, I know. My parents looked more like most of my friends' grandparents because of the age gap, but I can also say they were able to keep up with me just fine. They were very much full of pep and vinegar.\"\n\n\"So you were raised like this, huh?\"\n\n\"Hardly. My parents lived paycheck to paycheck for a long time. Mom was an actress, so I spent most of my life in California where she fought for any job she could get. Needless to say, she never became hugely famous, but she did a lot of commercials and a few recurring roles on television shows or as a five-words-of-dialogue kind of character in a handful of movies. They had enough to get by. It was... comfortable.\n\n\"Dad, on the other hand, hated California. He humored Mom, though, because, even though she struggled to find it, she adored her work. Dad was a rancher. He had cattleman's blood.\"",
        "\"Oh?\"\n\n\"Yeah. That goes all the way back to his great-grandfather, at least.\n\n\"We spent much of each year on the west coast, and a lot of summers on the ranch. Mom retired eventually, so they split their time between here and the ranch until Dad finally retired.\"\n\nHe listened intently to her family history.\n\n\"That's incredible,\" Eric said. He found it inspiring to hear how such diverse careers could meld into such happy co-existence.\n\n\"Come here. I want to show you something,\" Peggy said, taking his hand. \n\nThey crossed through a spacious great-room, through some French doors, into an office. \n\n\"Take a look around and see if anything catches your eye.\"\n\nHe stood still in the doorway, letting his eyes scan his surroundings. The room was very comfortably furnished with a leather couch and a pair of matching chairs. There was a cherry wood desk in the corner and an executive chair behind it. There were papers on the desk.\n\nHe stepped to the desk and looked at several pieces of mail bearing recent postmarks. It wasn't her father's time capsule, as he expected. One of the envelopes looked familiar to him. He looked at its corner and saw a logo he recognized. It was from Bangor Energy Exploration, a company from which he also received mail. Its logo was a drilling platform colored with black and yellow stripes, a play on the company name's acronym.\n\n\"Peggy, do you have gas?\" he chuckled, waving the envelope at her like a fan.\n\n\"Yeah. I have gas. And an awful lot of it,\" she grinned.\n\nHe laughed at their shared schoolyard-like joke.\n\n\"Keep looking,\" she said, and gestured to a wall.\n\nHe saw three wall-hangings. Two were photographs of thoroughbred horses, a breed he recognized immediately. The two on display were absolutely stunning specimens. He read at the gold tags on the frames. \"General Clout, 2006,\" read one, and the other was tagged \"Two Nickel Ante, 2008\". \n\n\"Your dad owned these horses? They both won the Preakness!\" he said.\n\n\"You're familiar? They've long since been retired to stud and sold, but yeah, they're probably still running around somewhere.\"\n\n\"Yes, I'm familiar! I have thoroughbreds on my land, but I thought you said your dad raised cattle,\" he said.\n\n\"He did. Black Angus. And horses.\"\n\nThe frame in the middle held a map. When he looked closely at it, he saw an outline marked around a large tract of land. Off to the southeast of the marking was the town of Nocona, Texas.\n\nEric's skin tingled and the hair on the back of his neck stood on end.\n\n\"Peggy&mdash;\"\n\nHe stared at the map and a name rang in his head when he looked at the tag.\n\nForeman Farms of North Texas\n\n\"Oh, my god,\" Eric gasped as the connection was complete. \"Mitchell Foreman was your father?\"\n\n\"Adoptive father. Yes,\" she said.\n\n\"No way,\" he whispered, reaching out to touch the glass-covered map, wondering if it was, in fact, an illusion.\n\n\"I figured it out when you told me yesterday that you bought two sections of land near Nocona seven years ago. During a break at the meeting today, I was able to pull up the closing documents on my laptop. I've got them all stored in the cloud for safe keeping. Of course, your name was on them. You bought your land from my dad.\"\n\n\"How on Earth did you even think to look?\" he asked, studying the outline on the map. He knew exactly where his own ranch was. It was depicted as a two-section notch in the southwest corner of the perimeter outlined on the map.\n\n\"Two sections of land is a lot for one transaction. That much acreage doesn't change hands often. I remember when Dad sold it.\"\n\n\"It was that big of a thing that he told you about it?\" he pressed.\n\n\"Well, yeah!\" she laughed. \"I mean, he just sold ten percent of his ranch. He said you were the first person to make him an honest offer, and he was preparing to start scaling back his operation as he got older. He told me about his plans, and I begged him to not sell more.\n\n\"Instead, he phased out his own operations and started leasing the land to other farmers and ranchers. He died a year into that effort, so I completed it.\n\n\"So count yourself lucky, because if I'd have known he was planning to sell anything before you bought some, I would have talked him out of it,\" she said, wrapping her arm around his waist as he stared in awe at the familiar territory.\n\n\"Of course I made him an honest offer. I really liked the place and wanted a piece of it. I flew over it during a solo cross country flight when I was training for my private pilot certificate and fell in love with it from the air. I drove there a couple of times to get a better look and knew exactly what I wanted to do.\" \n\nHe then remembered what she had said in his truck while they were driving.\n\n\"Oh, holy crap. That's why you mentioned the Barnett Shale.\"\n\n\"It's what enabled my parents to get into, well, all of this,\" she waved her hand around her.\n\n\"When the Barnett Play starting taking off more than a decade ago, exploration companies were offering pathetic little lease bonuses. Like $500 per acre. That was back when land around there was selling for barely a thousand an acre. \n\n\"But Dad was smart. Even though they could have used the money, he waited until the first few dozen wells came in on some sections adjacent to his. That's when the energy companies discovered the Barnett was going to be a huge play, and within a few years after that, they realized they were still vastly underestimating its potential.\"\n\n\"How long did he hold out?\"\n\n\"About four years. When horizontal drilling and fracturing were all figured out, the producers started to get serious. They offered him anywhere from $15,000 to $20,000 per acre over the next two years. They even signed one at $30,000 per acre on one section. They've punched a total of 120 holes so far, and I keep getting notices from the Texas Railroad Commission of intent to drill more.\"\n\n\"How much pipeline have they laid?\"\n\n\"Somewhere around fourteen miles, so there were pretty sizable easement payments, too, and barely half of the land has been explored so far.\"\n\nEric's mind quickly did the math. Half of eighteen sections meant almost six thousand acres. Conservatively using the low figure of fifteen-thousand per acre meant close to a hundred million dollars for the leases, even before production royalties. \n\n\"Sheesh. They were bigger than the Clampetts, weren't they.\" \n\n\"Over the next two years, my parents brought in well over a hundred million just on the lease bonuses. That's when they bought this house. The royalties easily doubled that in just the first two years of production, and like I said, they're still filing for permits to drill more.\n\n\"And my dad did a very wise thing. He hired a financial adviser that specializes in windfall clients. You know, like lottery winners. There's quite a few people, especially in Tarrant County, that got rich overnight like that then went bankrupt a few years later because they overextended themselves.\n\n\"Dad and Mom included me in all of their consultations, even though most of them were when I was still in medical school. They wanted to make sure I was aware of everything and understood what was happening because he knew they were getting way up there in years. They both wanted to ensure I knew how to manage the estate when the time came.\n\n\"So I try my best to make sure my accounts grow, not shrink.\"\n\n\"Then why are you struggling to find money to do the research you want to do?\"\n\nShe laughed. \"Baby, it's not that simple. In most science fields, research can be paid for however the researchers can get the money. But anything dealing in human medical sciences is a different landscape. I can't finance my own research. It's unethical. There's no gray area there.\"\n\n\"Yeah, I can see how that'd be a conflict of interest. But is it crossing the line for us to be involved? I mean, romantically? Isn't that the same thing?\"\n\n\"I'm not following,\" she said with her brows furrowed.\n\n\"Well, if you choose to take the job as Director of Research at Children's, and if you choose to pursue your idea... Well... I'm basically funding your research... if we want to be romantically involved, isn't that crossing the line into the same sort of conflict?\"\n\n\"I don't know. Let's cross that bridge when we get to it. It's a good question, but I think it's a different situation. I haven't even decided if I'm going to take the job. But, if I do, I'll file a case for review with whatever governing body is in charge of Oklahoma's medical ethics to find out.\"\n\n\"Yeah. Alright,\" he agreed.\n\n\"Now, can I ask you a question?\" she said.\n\n\"Of course.\"\n\n\"Do you feel a little silly now? Because I sure do.\"\n\n\"What do you mean?\" he asked.\n\n\"You were so guarded. So... worried about if I knew who you were... about what I'd think if I knew you were wealthy.\"\n\n\"Are you kidding?\" he laughed hard, almost doubling over. \"Of course I do! After everything you've just told me, I feel like I've been taken for a ride!\"\n\n\"No, Baby! Please don't think like that. I had no idea until two days ago. I fell in love with Ordinary Eric, remember? Seriously.\"\n\n\"Well, I think I made the right choice given what little I knew about you. So, no, I don't feel silly that I was trying to protect myself, you know?\"\n\n\"Yes. I understand completely,\" she said, and kissed him tenderly.\n\nHe started laughing again. \"But I do feel silly for insisting you let me buy you clothes at the store a few weeks ago, and at a Wal-Mart, no less!\"\n\n\"Thank god you did, Honey. If you hadn't, you wouldn't be standing here right now. That generous, selfless action was what put the hook in front of me. And everything that followed is what snared me.\"\n\nShe wrapped her arms around him and hugged him tightly. \"And that I know a lot more about you doesn't change that one bit. It just paints a clearer picture of an incredible person.\"\n\n\"I get it. Just being... I don't know the word... safe? Is safe right? We were in our safe spaces and look what it turned into. But... \" he hesitated.\n\n\"But what?\"\n\n\"Why didn't you tell me about this when you first learned about the 'me' you now know? I mean, now I realize what you meant when you said you weren't Cinderella or those other folks.\"\n\nShe thought for a few moments. \"Did you find yourself attracted to Ordinary Peggy?\"\n\n\"You bet your pretty little bottom I did,\" he chuckled without fear she'd take offense to the compliment.\n\n\"I guess I didn't want to spring it on you any differently than you sprung it on me.\"\n\n\"Good point,\" he admitted.\n\n\"Yeah,\" she smiled sweetly. \"Come on. Let me give you the tour,\" she said, taking his hand.\n\nShe walked him through the house. It wasn't an enormous palace, but the appointments and furnishings were perfectly harmonized to the surroundings. It was comfortable without being crazy. They were elegant yet tempered. The furnishings and florals equaled the beauty of the architecture. The house seemed to be about six thousand square feet in area. It held five bedrooms in addition to many other spaces. An exercise room included a treadmill, elliptical, and weight station. Another room had quilts hanging on racks as well as other things. \n\n\"Your mother's?\" Eric asked, stroking one of the thick and visually comforting pieces.\n\n\"Yep. She loved quilting. She had bees here at least once a week when they were in residence. She and her friends probably made at least two hundred of them. They donated most of them to hospitals and long-term care facilities.\"\n\nEric noted several acoustic guitars hanging from hooks on one wall. He picked one up, tested its tuning, and began playing a bluesy riff. He tapped the body of the guitar in time, adding percussiveness to his ad libitum performance. \n\nPeggy laughed and clapped her hands. \"That was fantastic!\"\n\n\"I started playing when I was like nine years old. My dad got me interested in it. I kind of gravitated towards blues because Dad was into rock and it pissed him off a little,\" he laughed. \"Lance's mother introduced him to the same teacher. That's how he and I became friends almost thirty years ago,\" he said, hanging the guitar back on its pegs.\n\n\"Most of them were my mom's,\" she said, selecting a nylon-stringed one. \"This one is mine.\"\n\nShe sat on a stool and began softly playing a classical Spanish ballad.\n\nEric was mesmerized. Her employment of rubato time and dynamic changes was exquisite. Her staccatos were crisp and firm, her legatos tender and soft. The effortlessness of her playing shined as the fingers of both of her hands moved with practiced ease and synchronicity. The thirty-two-bar passage brought goosebumps to his skin.\n\n\"Oh my god, Peggy,\" he whispered when the sustain of the last chord faded into the ambiance of the room. \"That was... magnificent.\"\n\n\"Thanks,\" was her simple reply.\n\n\"I mean it. The way you play could make Rambo fall to his knees and weep,\" he said in a sincere compliment. \n\n\"That's very, very sweet of you,\" she said, kissing him tenderly after re-hanging the guitar. \"My mom taught me. I continue to play, not just because I like it, but to keep my fingers nimble. Kind of like calisthenics for the hands. It may be sacrilegious, but maybe you and I can figure out a way to merge blues and classical Spanish so we can play together.\"\n\nHe smiled happily at such a suggestion, and she turned the light out in the room as they left.\n\nTwo bedrooms had comfortably plush furnishings, giving them the appearance of guest rooms. Each had private en suite bathrooms. They passed one room without exploration, but Eric caught the scent of Peggy's perfume as they passed it.\n\nThe master suite was bizarrely modest and basic. It didn't fit in with the rest of the house. Peggy noticed his expression.\n\n\"Yeah, I know. Mom and Dad didn't want this room to be anything out of their former standard of living. I've kept it just the way it was.\"\n\n\"You like it like this?\"\n\n\"Yeah, but I don't sleep in here. That'd make me feel weird on so many different levels,\" she chuckled.\n\nThe kitchen had modern appliances, all in stainless steel. An assortment of restaurant-quality pots and pans hung from a rack over an island.\n\n\"This might entertain you,\" Peggy said, as she opened a door situated near the kitchen.\n\nIt was a large, walk-in pantry, meagerly stocked. Peggy obviously didn't need much to prepare meals for one person. She led him through another door at the other end, where the temperature dropped significantly and the humidity increased.\n\nEric laughed. \"Wow, Peg! Do you have a bit of a problem?\" he joked.\n\n\"No, you jerk!\" she laughed and punched him in the shoulder. \"My dad fancied himself an enthusiast. Thing is, he didn't have any clue just how good of a collector he was. I had the collection appraised when the estate was probated.\"\n\n\"Yeah?\"\n\n\"Yeah.\"\n\nHe waited a few seconds. \"And?\"\n\nShe laughed. \"At the time, it was worth a little under a million. It's appreciated about three hundred percent over what he paid for it all. He kept really good records for tax purposes.\" \n\n\"Oh holy hell!\" he laughed. \"That's insane!\"\n\n\"The funny thing, though? He and Mom preferred boxed wine,\" she laughed.\n\n\"Sounds like your parents did a hell of a good job making sure you were left a sizable nest egg,\" Eric observed.\n\n\"They did,\" she said wistfully. \"Get one of those bottles right there,\" she said, pointing to a specific cubby in one of the many racks.\n\nHe carefully removed a bottle and looked at the label. It was a bottle of Two Hands Shiraz Ares, 2011.\n\n\"See? I told you I was familiar with the label,\" she said. \"This was his last purchase. He bought four cases of it, at forty bucks per bottle. Stored properly like this, it's worth more than the 2014 vintage we shared at the steakhouse in Oklahoma.\"\n\nHe carefully replaced the bottle before she guided him to another set of doors across from the comfortable living area.\n\n\"Your ranch is your paradise. Welcome to mine,\" she said, turning on lights via an app on her phone.\n\nThe pool was beautiful. It was surrounded with natural rock coping everywhere except where ladders and steps allowed easy exit. It had soft underwater lighting, and the plantings and landscaping had dim lights situated within them giving the entire space an incredible visual ambiance.\n\n\"You want the whole shebang?\" she asked.\n\n\"I have no earthly idea,\" he chuckled.\n\nShe tapped another icon and the entire space roared to life with sound as water began cascading over rocks in waterfalls at least twelve feet high. The subtle scents of gardenia and jasmine were amplified when the air moved in response to the falling water.\n\n\"Oh, my word,\" Eric sighed. \"It's incredible,\" he said with wide eyes.\n\n\"You think?\"\n\n\"I do. But I have to ask a question.\"\n\n\"Why'd my parents buy a place like this?\"\n\n\"Well, that, but I'm also wondering why every pool in the area is enclosed like this,\" he said, gesturing around the space. \"At least, that's what I saw from the plane when I flew out of here a few weeks ago.\"\n\n\"Gators, dude,\" she said evenly. \"The pool enclosures keep the alligators out.\"\n\n\"Oh, shit,\" he laughed. \"Are you kidding?\"\n\n\"Only a little. It's one of several ways of keeping them out, but I think most people choose the screened enclosures to keep mosquitoes out,\" she said, pulling his boyishly delighted form to her.\n\nHe clutched her affectionately.\n\n\"You want to take a dip?\" she asked.\n\n\"I would, but I didn't think to pack any swimwear.\"\n\n\"Why does that matter?\" \n\nHe watched, quite surprised, as she stripped her body of her clothing, depositing all the items on a nearby lounge chair. She then walked down the steps into shoulder-deep water and came to where he was standing by the side. \n\n\"What are you waiting for? Come on in. The water is perfect,\" she said with a happy smile.\n\nHe needed no additional encouragement. He shucked his clothes and joined her in the water.\n\n\"Follow me. This is my favorite part,\" she said, moving further into the pool's deeper reaches.\n\nDucking through a curtain of falling water, he felt like Alice disappearing down the rabbit hole into a wonderland.\n\nThe space concealed behind the waterfall was large enough to hold probably a dozen people quite comfortably. It even had its own patio with a table surrounded by six chairs. The furniture appeared to be made of meshed aluminum and stainless steel. Being located in a chlorine-rich environment, it made perfect sense to Eric. The LED lighting in the cave-like nook was warm yet intimate.\n\n\"Sweet,\" Eric said.\n\n\"Nifty, huh?\" Peggy said, swimming up to and wrapping her limbs around him. \n\n\"I'll say. I'm imagining that whoever built this paradise had lots of kids or grandchildren that loved this little hideaway.\"\n\n\"I don't know much about its history, but I do know it was only three years old when my parents bought it. The prior owners razed the houses on two lots and combined them before building this. I added a lot of automation and stuff a couple of years ago.\"\n\n\"You live here by yourself and have a paradise like this,\" he said, holding her bottom in his palms as he waded through the delightful hidden grotto.\n\n\"Yeah. I know. Crazy, right? But it's so awesome in here. Sometimes I'll bring my e-reader and a bottle of wine and lounge for hours. It's like nothing at all exists outside that shower of water. It makes the world and its stressors just go away. It feels very much like what I feel like now with you in here with me.\"\n\nShe gave Eric a slow, sensual kiss. They held each other gently in weightless buoyancy.\n\n\"Take a good look around and get your bearings. It'll be getting dark soon,\" she whispered softly into his ear, just over the sound of the showers of falling water.\n\n\"Huh? It's almost eleven o'clock and already dark,\" he chuckled.",
        "She released herself from his easy grasp and swam to a small panel in a wall which held a half-dozen rubberized buttons. She reached across the flagstone ledge and pushed one. All of the lighting in the entire paradise extinguished. The world went completely black.\n\nPeggy knew the interior of the grotto perfectly, and she knew the spot where Eric was standing was a specific location with very special properties.\n\n\"Polo,\" she said in a barely audible voice.\n\nThe sound bounced around the concave surfaces of the cave-like area and arrived from many directions simultaneously to Eric's ears.\n\n\"Whoa! Were are you?\" he asked, completely unable to locate her by the voice coming from everywhere.\n\n\"Polo,\" she responded again to the unspoken call.\n\n\"Marco?\" he beckoned, realizing she was beginning a game.\n\n\"Polo.\"\n\nHe thought about where he was and realized he must have been at the focus of the immense partial paraboloid, the only place where sound from almost any direction would be amplified. He visualized the geometry of the space in his mind's eye, and used the back-lit control pad as a reference. He moved to another position not far away. \n\n\"Marco.\"\n\n\"Polo,\" he heard somewhat more clear from a certain direction.\n\nHe repositioned himself once again.\n\n\"Marco.\"\n\n\"Polo,\" he heard distinctly in his right ear.\n\nHe deftly moved in that direction, opened his arms broadly and swept them inwardly, successfully snaring his easy prey.\n\nHe pulled his catch into him and met its lips slowly, carefully, perfectly.\n\n\"Marco,\" he whispered.\n\n\"Polo, my love,\" she kissed.\n\n\"Have I told you today how much I love being with you? I. Love. You. So. Much.\"\n\nHis heart leapt in the easy utterance of his feelings. \n\n\"I love you, too, Eric.\" she sighed into him. \"It feels so wonderful saying that,\" she whispered, her body incredibly relaxed as he held her.\n\nHe stroked her bottom, feeling its sculpted beauty.\n\n\"I want you to know my heart almost exploded in the plane when you said it. I've been so... I... I can't believe what has happened. This just seems so... impossible to describe,\" he said.\n\n\"I can't explain it either. But the way you kissed me then felt so different. It was so loving. So honest. There was just the truest of affection in it. Just exactly what it needed to be. It scared the crap out of me how clearly it hit me. Just everything about you seems so... hell, I don't know. I can't believe it myself.\" \n\n\"I guess we should be glad we're both clueless,\" he sighed, moving them through the water in constant contact as if in a slow dance.\n\n\"Please touch me, Eric,\" she whispered.\n\nEric slowly lowered himself in the water until it was over his shoulders. He allowed her buoyancy to float her higher against him. He lifted her bottom higher and felt a nipple graze his nose. Like a newborn, he blindly searched for it by sensation alone until he found his prize. He encircled her areola with his lips and suckled it inward, painting the firm nub at its center with his tongue.\n\n\"God, that feels so good,\" she cooed in the darkness, holding his head to her breast. She twisted when her left side felt lonely. He lavished its perfect twin with the same affection.\n\n\"Oh!\" she gasped when she felt his hand slide between her buttocks where a finger came into the softest of touches. The sensation of the unexpected resonated up her spine. She felt goosebumps race down her neck.\n\n\"Sorry, Baby. I didn't mean to do that,\" he said after moving his hand further forward to the soft folds of her vulva.\n\n\"Don't apologize,\" she gasped as he stroked her flesh. \"It just... surprised me. No one...\" her breath staggered with the unusual but pleasant sensation. \"I've never been touched there,\" she whispered, burying her face into his neck and biting into his upper trapezius as he stroked her sex.\n\n\"Oh, God,\" he whimpered against the mild pain of her nip. \"I need you. Please, I want you,\" he said before he licked against the edge of her ear and suckled its earlobe. The back of a gold stud raked his tongue.\n\n\"Let's go inside,\" she said, as she removed her legs from around him. She waded in the water to the panel and pressed two buttons. The waterfall stopped its cascade, and light returned.\n\nHe wrapped his own limbs around her body, and his own buoyancy allowed her to move him effortlessly to the steps outside the grotto. They dried themselves, but left their clothes on the lounge and traipsed fully naked through the extent of the house. Peggy guided him to her bedroom.\n\n\"I'm yours, baby,\" she growled again, grappling at his body.\n\n\"Huh-uh. Ladies come first,\" he said sweetly and lifted her onto the bed.\n\nTheir embrace was warm and collective. Their kisses were frenetic then focused. He encouraged her to offer him the center of her arousal by pushing against her feet until they were snug against his shoulders as he brought his mouth to the lowest extent of her torso. \n\nAs soon as his tongue rasped across her clitoris, she clutched at the down-filled duvet underneath her and groaned his name. They delighted in the knowledge that it was the first time they could make love without the concern of any other ears overhearing. They both considered their romps in the hotel to be quite pleasant, but the urges to vocalize were unencumbered in Peggy's dwelling. Eric suspected, and Peggy knew, there were no ears within two hundred yards.\n\n\"Eric! God, yes! Right there. God, what are doing!\" she cried as he flicked his tongue against the feathery separation between her clitoris and its hood. He tugged gently upward against the pad of her pubis. Her pea was made fully available to his attention. He occasionally slipped his tongue lower to take in the offerings of her vagina.\n\nThe scent of her femininity filled his sinuses. He instinctively ground his own engorged parts into the soft fabric of the duvet, being very careful not to bring his own arousal too far.\n\nPeggy's orgasm arrived without expectation, without warning. She yelled so loudly she surprised herself.\n\nHe caught her reflexes and eased his affections and simply kissed her engorged parts, immersing himself in her incredibly rich aroma. He avoided his urges and simply rested his head against her upturned thigh and nuzzled his nose into the coarse fur at her mons. \n\nWhen he felt her legs relax across his back, his nature drove him forward, kissing and gently suckling her engorged labia. He tickled her inner lips with the tip of his tongue along the length of their scalloped edges. His ministrations escaped his control and his tongue crossed the lower boundary of her perineum. She laughed in reflex and gripped his shoulders in her thighs. \n\n\"Eric!\" she shrieked. \"You just... \" she giggled uncontrollably.\n\n\"What?\" he chuckled with her.\n\n\"You just touched my anus again!\" she laughed.\n\n\"You sound like a doctor,\" he laughed more fully.\n\n\"My butthole, Baby! You just licked my butthole!\"\n\nAs soon as she said it, her laughter took over. \n\nHe took advantage of her weakened state, spread her legs further and purposefully ran his tongue fully over her clean, pecan-colored rim.\n\n\"Oh, god,\" she growled with the tender contact the tip of his tongue made in the center of her bottom. \"Oh oh oh oh,\" she stuttered, surprised that he'd do such a thing on purpose, even more surprised that she was willing to allow it, and a little shocked that she was enjoying the sensation his tongue was imparting on a most secret part of her anatomy. She relaxed into his tender attention and pulled her knees toward her breasts to ensure his access wasn't obstructed in the slightest.\n\nShe felt his nose grazing her clitoris with his motions and tilted her pelvis to increase the pressure. He received the message and used every part of his face to pleasure the entirety of her crotch until he began tasting the drizzle as her orgasm arrived.\n\nHer gasps and groans were the only sounds he heard as it waned.\n\n\"God, Eric,\" she panted loudly. \"What other surprises do you have in store for me?\" she smiled languidly at him.\n\n\"I'll think of something,\" he whispered as he climbed forward and atop her, nuzzling and suckling the firm little mounds of her tiny breasts on his way to her mouth where a delicious kiss awaited.\n\nThe masculine hormones in his saliva intermingled with the feminine of hers as she consumed his. Her libido was punching holes in the slate tile roof of her home.\n\n\"May I?\" he asked.\n\nShe felt his glans nudging her inner lips. \"You may, my love,\" she cooed with a tender, loving smile. \n\nHe entered her fully and without effort as her vagina stretched to accept him completely. \n\nHe gently rocked his pelvis in shallow strokes. She felt his glans nudging her cervix and the tingles went up her sides to her nipples and armpits. \n\n\"You're not allowed to cum until I tell you,\" she whispered with a wicked grin as he stole her gaze.\n\n\"Are you going to be mean to me?\" he pouted playfully.\n\n\"Not at all. Not. At. All.\"\n\nThey engaged in an easy rhythm. When he felt close to the edge, he simply stopped and breathed, relishing the slow movements of one of her hands through his hair and the other stroking his shoulders and back. It was the unrushed, all-consuming closeness and wholeness that made for the trueness of lovemaking in its fullest.\n\n\"Your touch is incredible, Baby,\" he smiled at her.\n\nTheir dance resumed. Peggy allowed herself a slow rolling orgasm with his pubis pressing into her mons and providing exquisitely gentle stimulation to her clitoris as its hood was stretched upward then relaxed back over her glans. \n\n\"I felt that,\" Eric hissed, \"and I can't wait. Please? May I?\"\n\nShe smiled and tapped her tongue with a fingertip.\n\nEric's brows rose. \"Are you... are you sure?\" his eyes beckoned for clarity.\n\nShe nodded with a deliciously sweet smile before shimmying backward from underneath him and leaning on an elbow as Eric brought himself to the perfect height.\n\nShe suckled and licked his shaft slowly, easily, lovingly. She paused several times, allowing him a cooling off period before she upped her efforts. She gently fondled his scrotum, feeling the weight of his testicles in her palm. When they lifted, she knew he was near.\n\nShe allowed herself the forbidden and extended her middle finger. She gently caressed his anus. It took scant seconds for his orgasm to arrive, propelled by her unexpected stimulation as well as her permission to end inside her mouth. Peggy's eyes watched his as he began to empty himself in brief but powerful volleys against her tongue. The corners of her mouth rose in the most wicked smile that pushed the twinkles of her eyes to join the stars he was seeing in his ecstasy.\n\n\"Oh, Peggy!\" he cried with such a force of emotion and release that her skin tingled with his praise. She swallowed his offering, both feeling joyous pleasure. \n\nWhen he was spent, Eric collapsed sideways and grasped at Peggy's body. He needed and craved to have her in the fullest of contact with him.\n\nThey rested easily and comfortably in simple strokes and caresses.\n\n\"I think you've killed me,\" he sighed in utter relaxation, \"because this is what heaven has to feel like.\"\n\nShe grinned fully. \"I don't think we're dead, though, because I can feel my heart going nuts,\" she growled affectionately. \n\n\"That was rather unexpected,\" he grinned at her.\n\n\"What you did to my butt wasn't?\" she asked.\n\n\"Yeah. I loved your reaction,\" he giggled. \n\n\"I could tell,\" she whispered.\n\n\"I love every single part of you.\"\n\n\"Thank you, Eric. You make me feel beautiful.\"\n\n\"It's easy, because you are.\"\n\nAfter several minutes of comfortable relaxing embraces, Eric asked, \"What time does your on-call start?\"\n\n\"It parallels my regular shift. Seven o'clock.\"\n\n\"Then maybe we should get some sleep? It's after midnight.\"\n\n\"I think you're right. And I couldn't be more relaxed.\"\n\n\"Yeah, my love. Me, too.\"\n\n\"Would you turn off the lights?\" she asked.\n\n\"Uh,\" he paused. \"I don't know how.\"\n\n\"There's a switch next to the door, goofball,\" she giggled as she turned off all the other automated systems with her phone.\n\n\"Oh,\" he chuckled. He left the bed and flipped the ordinary toggle downward. He returned to their nest and snuggled warmly into her.\n\n\"Eric?\" she whispered.\n\n\"Yeah, Baby?\"\n\n\"I can't imagine being happier than I am right now.\"\n\n\"You stole my words,\" he whispered and cuddled closely to his love."
    ],
    "authorname": "WillDevo",
    "tags": [
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/when-ordinary-isnt-ch-04"
}