{
    "title": "Unexpected Threesome Ch. 09",
    "pages": [
        "I normally like writing in the first person from the female POV. However, I've been lacking inspiration for new story lines recently and this series has proved pretty popular, so thought I'd add another chapter.\n\nThis is a continuation from my previous \"Unexpected Threesome\" stories; although you shouldn't need to have read them to enjoy this. \n\nNed, the owner of a yacht cruising the pacific and now in his early 60's, has unexpectedly found himself seduced by his two long term crew - nubile girls in their very late 20's.\n\nAs before with these stories, I am indebted to the male friends who have assisted me with relating to the male mind and body; and the red wine that made the conversation flow and loosened lips.\n\n*****\n\nBecause we were due to sail in the morning, the girls asked if they could take the tender to say goodbye to a friend they'd made in another yacht moored a few hundred metres away. The request was a courtesy. The reality was they didn't need to ask permission for such a trip; although as a safety precaution it was always wise to tell someone where you were going, especially near dusk.\n\nI'd seen the girl they were visiting from a distance. From the stories they'd brought back it didn't sound like a happy boat. Some skippers are what you might call laissez-faire in their relationship with their crews. I'd like to think I'm one of them. Others are more inclined to never let it be forgotten who was the owner of the boat and therefore in charge. A few went beyond that and extracted every benefit they could from having crew aboard; financial, workwise and emotional. I'd add sexual, but that strikes a bit close to home; even if I'd plead to being innocent of any exploitation of my circumstances. Still, there was no doubt that sometimes a sexual price could be demanded too.\n\nI hadn't heard of anything in the sexual department, but it did sound like her owners - a couple - were very much on the outer edge of what was acceptable.\n\nStill, you have to be careful of such stories. Sometimes owners can be painted with the harshest brush by the crew only for you to find out later that it was actually the crew who were a problem; complete freeloaders, unwilling to contribute even a fair share of effort to running the boat and sometimes even thieving to boot.\n\nIn this case I'd met the owners. They'd shared a drink with me aboard my yacht before the girls had met this crew member. I'd have to say they seemed like ripe bastards; almost boasting of how they exploited their crew. Needless to say, it was the only drink we shared.\n\nIt was only thirty minutes later I heard the motor of the tender alongside. Going on deck to help them aboard, I found three people in the tender; one more than I'd expected - my two plus Ellen, the girl in question.\n\nIt seems the girls had dropped in on something of a scene. Sick of being verbally bullied, Ellen had answered back and got an unapologetic whack across the face for her efforts. Realising a bridge had been crossed and that she might actually be in danger at sea with these two, she'd packed her bag and demanded to be taken ashore. The couple had refused, leaving Ellen a virtual prisoner.\n\nAmy and Issie had turned up as she was sitting on deck arguing the point with the owners; who were threatening to have her arrested for theft if she took the tender ashore by herself.\n\nAs you do in these circumstances, I got everyone safely aboard and the tender secured; offering up a cup of tea or something stronger to settle everyone's nerves. The thought had occurred to me it was a bit late and a bit dark to just dump her ashore by herself, so in a way I was already reconciled to her being aboard for the night. We'd barely got down to drinking our glasses of wine when Issie blurted out...\n\n\"We told Ellen you'd let her join our crew. You've always said you like to have at least four crew so we can have the safety of two night watches of two each.\"\n\nI was taken aback. I'd assumed our job had been to deliver Ellen safely to land where she could find accommodation and another yacht to sail on. We were sailing in the morning and there were a few issues with Issie's proposition.\n\nI'm going to be honest enough to admit that the first one that came into my head was the fact that the girls and I were in the habit of sharing wild, noisy group and individual sex anywhere and everywhere on the boat. Issie was right. As a matter of principle I do prefer a minimum crew of four. But I'd mentally crossed the bridge of compromising on that point some time ago in the interests of my sex life. Maybe it wasn't the most prudent decision, but it was a perfectly human one. Ellen being aboard was going to severely cramp the sexual activities.\n\nComplementing that was the fact I thought the boat would probably go naked once we left the confines of the harbour. That was pretty common for tropical sailing when only close friends were aboard and helped avoid heat rashes. But I figured Ellen's presence put an end to that.\n\nThen there were the more practical things. Before taking a crew on, I normally interview them. This is someone you're going to be living with and mutually dependant on. And once you're at sea you can't get rid of them if things aren't working out; not legally anyway. I knew nothing about this girl.\n\nMy answer was a way of stalling for time.\n\n\"Ellen might have different travel plans to us.\"\n\nIssie was already on to that one.\n\n\"No, she slowly working her way back to Australia, just like us.\"\n\nI looked at Ellen; just sitting there with a somewhat hopeful and very angelic smile on her face.\n\n\"How old are you Ellen?\"\n\n\"25.\"\n\n\"What has brought you out to cruise the Pacific?\"\n\n\"I finished my training as a doctor and I wanted to take a gap year while helping out in some community medical centres along the way.\"\n\n\"When are you wanting to be back in Australia?\"\n\n\"In about 9 months; but that's flexible.\"\n\n\"How much sailing background do you have?\"\n\n\"All my life. Manly Juniors and then 29er's and my dad has a yacht we used for offshore cruising and racing. I was often his crew boss in the big events. I can navigate too.\"\n\nEllen was making it very difficult to say no. For the first time I had a good look at her. Tall, willowy and with a cascade of naturally blonde hair, an American would probably call her a classical Californian girl although perhaps the stereotype for that is a tad vacuous depending on which version you think about. And if Ellen was one thing, it wasn't vacuous.\n\nBut she was very much Australian and there were no shortage of beaches that could readily claim her. She was not really bogan enough to be a classic Gold Coast girl. For an international audience you might call her a typical Bondi beach girl; although Bondi is pretty multicultural these days and this girl was more old style (what is sometimes patronisingly or pejoratively called, white bread) Australian. \n\nReally to my mind, if you had to stereotype her, she was a Peninsular Girl, from the Northern Beaches of Sydney. Well-spoken without being snotty about it, she came across as smart and independent minded. Her eyes were the deepest blue and pierced you with their intelligence and intensity. Her face had a slim, angular strength about it; stunningly beautiful if that strength didn't scare you.\n\nHer clothing, board shorts and a tee, flattered without flaunting. As far as I could see she had a nice figure, but you had to use your imagination to fill in some of the gaps. Not in the way Amy had originally dressed to make herself look like a cardboard box; but Ellen wasn't setting out to seduce either.\n\nI looked across to Amy and Issie who were looking back with expectant grins. They knew Ellen had made refusal impossible; especially since I'd always fancied having a doctor aboard. But it would be a month before we'd be reasonably able to unload her if things turned out badly; I could hardly dump her at some rarely visited place; it would need to be a decent port.\n\n\"OK Ellen, we'll give you a run. Welcome aboard.\"\n\nShe stood up and leaned into me to wrap her arms around my neck and kiss me on the cheek as I added...\n\n\"You are aware of the arrangements between Amy, Issie and myself are you?\"\n\nShe broke into a broad grin and looked back across to Issie.\n\n\"The whole anchorage knows about it. But yes, the girls here have been quite explicit. They tell me you're a complete stud. Issie reckons we'll have to make it a foursome one day.\"\n\nI blushed deeply. It was kind of the girls to say that, but I had no illusions about myself. Stud was nowhere near it. I managed to nearly meet their needs in what was fairly conservative and old fashioned ways was as far as I'd go. If we weren't all trapped on a boat together I would have been patronisingly dismissed by them as the old fart I was. As for the foursome, yeh, in my dreams; or was that nightmare. I was barely keeping up with two of them. Still, it also confirmed just how much the noise had been travelling.\n\nI managed to splutter out...\n\n\"They're just being nice. I'm too old for them really.\"\n\nI nearly added without thinking... \"As I'm sure you'll find out.\" Fortunately I stopped short on a statement that would have inadvertently suggested the foursome was likely.\n\nEllen was good heartedly playing with me and she knew I knew it. It was nice to have an Aussie on board who knew how to do that properly - the art of self depreciation.\n\n\"Why don't you put your things in the amidships bunk cabin and set yourself up for the night.\"\n\nI winced as I said it. That was the cabin in which the three of us used the tiered bunks for some rather kinky, multi layered threesome sex play. There goes that particular game.\n\nFifteen minutes later Ellen appeared back on deck. She had changed out of her tee and shorts into a bikini top and an A-line miniskirt; tight at the waist but flaring out around her upper thighs. I couldn't help myself by commenting on something I knew I shouldn't.\n\n\"You've changed.\"\n\n\"Yea, it was a bit warm for what I had on, even at this time of the evening. It was just that, on the other boat, I had to dress in a way that didn't give the owner any creepy ideas. I hope you don't mind; you guys are dressed the same.\"\n\nShe wasn't wrong about how the rest of us were dressed. Amy and Issie were in their perpetually worn bikinis and I, having been caught by surprise by Ellen's arrival, was in my no less perpetually worn speedos. Normally I'd cover up for visitors; especially young ladies. Indeed, by our standards she was still overdressed; even if her bikini top was as small as those worn by the other two girls.\n\nHer change of clothes made it hard not to admire her figure. I hope she was allowing for the fact there was more than one guy around capable of creepy thoughts. The overall impression continued to be one of willowy. She must have been a good 6 foot tall (182 cm for those mired in metrics; although even now, us old guys still revert to imperial when judging a girl's height). A good several inches taller than the others and nearly as tall as me. Her legs were extraordinarily long; they went all the way up to her arse, as a friend of mine at school used to say.\n\nIn her overall slimness, her features could be equated to Amy's; that sort of no fat but no showing bones body that looks so great on a girl. Maybe just the smallest hint of a tummy bulge, a nice feminine turn of her waist and breasts on the smallish end of the B cup spectrum. So not quite as spectacular as Amy; but in every respect, model material.\n\nAs she sat down she raised an issue I'd already considered.\n\n\"Have I mucked up your provisioning plan? I know we're meant to be leaving early in the morning.\"\n\n\"No, as the girls will tell you, I hopelessly overprovision. We're fine. We'll still be departing soon after first light.\"\n\nTo which my brain silently added...\"Just after I'm finished trying to screw Amy and Issie on a small boat without you overhearing anything.\"\n\nThe night passed uneventfully until I woke up to the feel of Amy playing with my fully engorged manhood as the first light of dawn broke through the cabin window; milking my already painfully throbbing cock in the palm of her hand. Her face was inches from mine, scanning it for the moment my eyes showed life. I'd barely opened them before her tender face was pushed against mine, her tongue pushing itself into my mouth as I felt my hardness slipped between her legs and slid back and forwards along her already moist slot as she used it to tickle up her clit.\n\nI groaned quietly as the tip and upper surface of the firm needy flesh of my cock was embraced by the warm wetness of the lips of her crease.\n\nShe whispered into my mouth...\n\n\"Time's short this morning. I thought we'd better make the most of it.\"\n\nShe pushed her whole body against me as she passionately kissed and rapidly worked the tip of my erection against her swollen little bud. What was previously only moist soon became noticeably wet; a combination of her juices and my flood of pre-cum. Knowing full well that it drove her absolutely wild, I was jerking my hardness up against her as she slid it back and forwards. After a bit of cuddling foreplay, I've had her cum in three minutes flat doing that in the past and it looked like this morning was going to be no exception. Which is good, because once Amy cums the first time, it's relatively easy to get her to cum again; important when an old codger like me is trying to satisfy two girls.\n\nSoon her need to kiss stopped and her head was lolling alongside mine, eyes closed, her breathing growing rapid and more audible as she seductively bit her lower lip. Just as a little..'aaahhh' formed on her lips she seemed to find the strength to seek a better ending. She sucked my shaft into her womanhood, wetly engulfing the entire length into her warm and delicious sex. Simultaneously Amy pushed me over on my back and straddled me with her legs outside mine. Then lifting herself up at full arms stretch, she worked herself up and down, rubbing her clit in circles on my pubis as we pushed against each other in a frantic connection of sex and lust; my cock deep and completely captured by her pussy. All the while I lustfully watched her delightful breasts bounce to the movement.\n\nI'd only just managed to put one her nipples into my mouth when I heard her moan...\n\n\"Oooohhhh...\" And then again. \"Oooooohhhhhhh...\"\n\nThat was the signal for me to swirl her nipples about all the more vigorously to prolong her orgasm as I felt her contractions bear down on my manhood. As her body relaxed I lay my head back down on the pillow and let her collapse on top of me.\n\nAmy may not have done the full screaming thing, but there was little doubt her orgasm had made itself known throughout the boat.\n\nLike a long married couple, the process for our morning threesomes had become a well-practiced routine. Woken by the activity, Issie was pawing at my shoulder. Momentarily sated, Amy rolled off me and Issie immediately replaced her. Issie always has got rather aroused watching Amy and myself make out. If we try and sneak a one on one, we'll usually find Issie was watching down a hatch playing with herself while we were at it.\n\nSo, on the mornings it's her turn to be second, by the time she climbs on, she'll usually be well juiced up and ready to pound; slipping my pre-sensitized and hardened cock into her like a well-oiled piston. And pound she does. Mostly she does the rubbing her clit on my pubis thing. \n\nOccasionally she leans right back and does the shaft on her g spot thing. At first it's all very controlled; her hand wrapped around the lower section of my hardness to control the depth of penetration and make sure it's pointed at the right spot. But then, in the last few moments, she gets all excited and much less controlled; leaving me worried she's going to break my manhood right off with her vigorous pounding. And that's before I mention that as she gets carried away in those last few moments and with her orgasm, she gets, shall we say, vocally expressive. Enough to make me think she must be waking everyone in the anchorage.\n\nThis morning, of all mornings, she chose the g spot alternative. If Amy hadn't woken Ellen, Issie certainly did.\n\nThere's another little twerk that Issie had recently started that it took me a while to catch on to. While she's pounding herself down on top of me, she's fingering Amy lying legs apart next to me. I'd been way too focused on her bouncing breasts to notice where the hand off to the side was going. And then one day I suddenly hear Amy going off like a bomb next to me; her crotch arching into my vision with Issie's hand buried deeply between her thighs.\n\nI suppose that's fair enough when she's doing the rub the clit thing. But you'd think when she's laying right back working her g spot, she'd want an arm stretched out behind her to support her weight. But no, she relies on her stomach muscles for that and Amy co-operatively slides herself further down the bed to put herself back in reach.\n\nOn this morning it was Amy's turn to be the one I cum into. Yep, it something they meticulously take turns at and there's a price to pay if someone takes a cum shot they're not entitled to. Don't ask me why; probably partly an emotional need, part physical. There's certainly nothing special about my cum; although I always have been a fan of the post coital cuddle. \n\nThe fact that Issie, because of a peculiarity of her sexual history, can sometimes orgasm to nothing more than me ejaculating might influence her desire for it, although that's in different circumstances to our morning threesome. But it doesn't explain Amy, even if the process itself can give her another orgasm. So while they're initially taking turns finding their own orgasms, they grip me lightly so as not to set me off prematurely. Then one of them presents their body for me to pleasure myself in - so to speak.\n\nWith a broad grin on her face and a pussy wet from Issie's fingering of her, Amy duly presented herself legs apart for duty. I'd like to say I was momentarily forgetful of the changed circumstances in the boat and carried away by Issie's performance. But's it's also possible I was just trying to make a statement that Ellen's presence in the boat wasn't going to change anything. Regardless, instead of just mounting her missionary style I moved between her legs, kneeling and pulling her thighs over mine.\n\nAmy has a shallowly located but very sensitive g spot and there can be few more pleasurable ways of finishing sex than by detonating that particular bomb before filling her pussy. After bending my manhood down to gain an initial penetration, I raised myself up to a kneeling position, lifting Amy's hips up just enough to let me deliver short sharp little jerks against her g spot without too much risk of me popping out of her.\n\nIt was always a delight to do this. Amy weighs all of 50 kgs, and with most of that weight resting down on her shoulders on the bunk, holding her up was little effort. On the other hand, thrusting at her in that position produced the most exciting rag doll effect; bouncing her boobs delectably while the curve of her body sucked her already flat stomach in, exaggerating the size of her breasts and the rise of her mound. It was enough to make you climax on the visuals alone. And that's before the view you got from just looking straight down and watching your shaft piston in to her sex.\n\nAlready worked to a state of excitement by Issie's fingering, it was only a few minutes before she worked herself into her pre-detonation vocalisations, delivered in a rising crescendo...\n\n\"mmmmmmm...oh my god...that's beautiful... oooohhhhh...yes...there...oh god...oh god...keep going...oh yes...oh yes...please...oh yes...\"\n\nAll of which was scant warning of the screams that followed with her g spot climaxes as she turned up both the speakers and the profanities, no less so on this particular morning...",
        "\"Fuckkk...oh shit...fuck...Ned, oh Ned...aaaaahhhhhh...god, oh god...I'm going to die...fuck...fuck\"\n\nAmy was convulsing on my cock, my arms barely able to restrain the orgasmic contortions of her body. Her hips thrust against me so hard they nearly pushed me backwards and bottomed my cock out against her cervix as her sex contracted on my shaft. Then she started rocking them from side to side threatening to tip me over. \n\nThe initial screams might have experienced a diminuendo, but the profanities continued to roll off her tongue. This was a good one and for Amy, and that was saying something. They could go on for minutes and neither of us was going to be any better for me waiting it out before I sought my own pleasure.\n\nThe short sharp thrusts I'd been delivering became long smooth explorations of the very deepest reaches of her sex, slowly at first, then with a rising pace, smoothly sliding in and out of her. She gripped me tighter. My balls crashed against her pelvic floor as the tip of my manhood grazed her cervix, all the while her juices splashed my thighs as I bottomed out each thrust. \n\nAs I looked down I could watch the length of my manhood sucked completely into her sex; disappearing deep inside the purity of her body. In full flight, her breasts acquired a life of their own, each thrust making them arc towards where her chin was tucked against her chest as her head pinned her upper body to the bed.\n\nThreads of glorious sensitivity shot up the length of my hardness as Amy came again; not as profanely or as loudly but the contractions I felt on my cock were no less real. As she often seemed to be after her first good orgasm, Amy had slipped into what seemed like a state of perpetual orgasmic ecstasy. I could never tell whether it was one long orgasm or a series of them. Whatever it was, she writhed under me, adding to my state of pleasure.\n\nI was nearly there, but determined to milk the pleasure for all it was worth; holding back for a surprising length of time as the pressure in my balls built. This was high energy sex. Thoughts of disturbing Ellen disappeared with my need to grunt out my efforts. \n\nFinally it was time to close my eyes and shoot my load; glorious waves of pleasure surging up my hardness as every rope of cum splashed against her cervix.\n\nOnce the last shudders of my climax had passed, I gently eased her flat onto the bed, trying to maintain full penetration until I was able to lay on top of her. Then I rolled over bringing her weight on top of me instead of the other way around. I always found something beautiful about this moment in a sexual encounter; just the press of the woman's body against yours as your shaft lays deep inside her. Soon enough your cock goes flaccid and the moment ends with a cascade of your own seed entangling itself in your pubic hair. But while it lasts it's wonderful. \n\nAmy waited until she felt me fall out of her, then gave me a kiss.\n\n\"Wow Ned. That was great. Same time tomorrow? Still, I'd better get up and start the pre-departure checks.\"\n\nWith that she rose on all fours and crawled past me to the head of the bunk to escape; offering me a delightful view of first her dangling breasts and then her naked pussy as she passed by; donning a bikini before exiting the cabin.\n\nI turned towards Issie to offer her a final cuddle before we both followed Amy. She lunged at me, wrapping me up in her arms and thrusting her crotch against my thigh where she started grinding it.\n\n\"Oh my god Ned, that made me so hot, you can't leave me like this. Can you...?\"\n\nShe started pushing my head down. The message was unmistakable. As I slipped my fingers into her crease to find she was already flowing with juice and her bud was hard and slippery, my head followed as l kissed down her torso. Moving between her legs I buried my face between her thighs and flickered my tongue against her obviously needy bud. \n\nThe moan that the first touch of her clit elicited told me this wasn't going to take long. As I sucked it between my lips and teased the tip of it with the tongue, she started bucking; lifting her hips off the bunk just enough to rock them from side to side as if the pleasure was too intense and had to be escaped.\n\nWhen her legs started shaking I knew another climax was about to explode onto my face.\n\nWith my own arousal and the inward focus that causes now fully expended on Amy's delightful little snatch and my cock hanging limply between my legs as I brought Issie to completion, I was far more sensitive to the noises she was making. The first moan could have been heard everywhere on the boat. The rising crescendo that followed was very likely waking up those on adjoining boats.\n\nThe scream like groan that signalled the breaking of her orgasm and the almost violent lifting and throwing about of her hips that accompanied it could have attracted the police from ashore in Papeete.\n\nAs my head, clamped as it was between her thighs and held tight there by the hand clasping my thinning hair, necessarily followed the gyrations of her hips, I was left wondering whether Ellen knew just what disturbances she'd signed up for. \n\nEven so, what Issie blurted out the moment her climax had passed and even while my head was still between her legs took me completely by surprise.\n\n\"You know you're going to have to fuck her too, don't you?\"\n\nI was genuinely confused by the statement.\n\n\"Who, Amy? I just did.\"\n\n\"No, Ellen.\"\n\n\"What? You're joking. Why?\"\n\n\"Because that's the only way we can keep having the sex life we've had with her aboard and in any case she's had an 8 month drought and is getting a bit desperate.\"\n\n\"Won't we just have to be quieter about it?\"\n\n\"Yea, sure. I suppose you thought you and Louise were being quiet when you were at it.\"\n\n\"We were weren't we?\" \n\n\"Nope. Just from your noises I could tell when you first poked her, what position you were in, how fast you were going at it and when you each came. And Louise was no beauty. Sometimes those mental images were a bit disturbing.\n\nAnyhow, how are you going to get Amy to be quiet when she has an orgasm like that; or me for that matter?\"\n\n\"But Ellen's just a kid.\"\n\n\"Ned, she's 25. That's not a kid. Anyhow that's only four years younger than us. Are we kids too?\"\n\n\"She just seems a lot younger. Anyhow the thought of sex with me is going to be revolting to her.\"\n\n\"Sure Ned. Normally someone her age, or our age for that matter, isn't going to give a 60 year old a look in. But you're in a pretty good state of preservation, got a good body if you'll excuse my sexist objectification of you and your reputation has spread around the anchorage as fast as the noise of Amy's climaxes.\n\nPlus we're all cruising the Pacific on yachts; little microcosms of ancient village life where age differences don't matter so much if you want any intimate relationship at all.\n\nShe's noticed you as we travelled around the anchorage and Papeete itself more than you've noticed her. And you been preapproved.\"\n\n\"You've talked about it?\" \n\n\"Yes. Did you think Amy and I were going to bring her aboard if we hadn't worked these things out?\"\n\n\"Couldn't you just have warned her she was going to have to listen to some noisy sex?\"\n\n\"That was one of the two options we gave her. But she indicated she'd at least like to try the second one.\"\n\n\"But Amy, you and I have just admitted how much we love each other. Aren't you going to be jealous?\"\n\n\"Ned, I feel little pains of jealousy when you're banging Amy. Of course there'll be some. But that's the price you pay for what is a pretty happy little family we've got going here. And we're all going to be happier if we just let Ellen into the family.\n\nAshore, when a woman's married to a man and having kids to him, it's a different issue. She wants the security of total ownership of his soul and body. But that's not where we are out here on the yacht. That's not to say you don't have pretty attractive genes and the thought of breeding with you isn't tempting; but it's not going to happen, at least while we're sailing the Pacific anyway. We can defer the catfight over you until we get back to Australia; or maybe the halo of our relationship will look a bit less realistic when we get back to dry land. Anyway, that's in the future. For now we want a happy boat.\"\n\n\"What if I fall in love with Ellen too?\"\n\n\"Then as long as you don't stop loving us we'll all be on an equal footing.\"\n\n\"This is crazy. And Amy agrees with it?\"\n\n\"Yes it's crazy and yes Amy agrees. Although I know you'll want to talk to her about it separately. And by the way, you'll be sharing watch with Ellen at sea and, to get things started, sharing this cabin with her off watch. Although Ellen hasn't been tested, so you have to use condoms with her.\"\n\n\"You got it all worked out haven't you? You were only gone for half an hour. When did you do this?\"\n\n\"Yes, we worked it out. Any complaints about it; as opposed to mere reservations? We figure Ellen's pretty attractive both in looks and personality, so you shouldn't really have a problem in that area. As for when we did it; we had Ellen off the boat within minutes of our arrival. The rest of the time was spent sitting there on the water talking about what we should do.\n\nEllen asked if there was any chance of joining our crew and the discussion went from there. Don't think mucking up the tidiness of our little arrangement wasn't high on the agenda.\n\nBut we like Ellen and wanted to have her aboard too. And that seemed to be the best way to make it work.\"\n\nI felt like a trapped animal. If you wrote a movie about this it wouldn't be believable, even as a porn script. It sounded like a dream and yet, to my old fashioned self, just seemed bizarre. \n\n\"I suppose not. What about sleeping arrangements in port?\"\n\n\"We'll rotate. Whoever doesn't sleep with you gets a one on one. Can you get it up twice a day? Actually, we already know the answer to that question. They don't have to be quickies. Those of us not involved just have to put up with the noises knowing our turn is coming.\n\nSo, is it settled?\"\"\n\nBeaten into submission I meekly nodded my head. In the back of my mind was the thought that this endless orgy we had going on the boat at the moment would settle itself down soon enough. We had all had a period of sexual deprivation and were making up for it. The honeymoon period would end, like they always do, and the sex would become less frequent. Maybe. Although the underlying element of competitiveness between the girls might affect that outcome.\n\nIssie brought the discussion to an end.\n\n\"Alright then, we'd better go and help Amy and Ellen clear for sea.\"\n\nA combination of tide, currents, wind direction and our projected arrival time at the next lagoon mandated an early departure. Breakfast would wait until we were at sea.\n\nAmy and Ellen had already done most of the work. As the skipper, ultimate responsibility for everyone's safety was mine, so after a quick double check we were properly battened down and ready for sea, the anchor came up and we motored out of the fringing reef and set sail. \n\nThat of itself was distracting enough. Watching Amy and Issie work the boat in their bikinis is always a pleasure, but one I've grown familiar with. Ellen was back in her small bikini top and A-line mini skirt. As she stood on the cabin top, sometimes bent over the boom, hoisting the mainsail and securing the lazyjacks and sailbag, the back of the skirt kept flipping or blowing up, revealing she was wearing nothing more than a thong underneath and so exposing the most beautiful arse cheeks I've ever seen.  \n\nThere's not many girls look truly good in an exposed thong. Whether they're fat or thin, it takes a certain bottom shape to get away with it. I suppose you'd describe it as requiring long, narrow butt cheeks instead of squat ones; and certainly little or nothing in the way of orange peel. Whatever it was, Ellen had it. If her legs went all the way up to her arse, her lean butt cheeks were the most glorious continuation of them. A thong definitely looked good on her. Add that to the clear alabaster skin of her body which I hadn't really noticed in the dusk of last night and she certainly presented as another version of perfect female beauty.\n\nBut there was something more about her. She conveyed a sweetness and a lightness in her manner that was just so attractive. She stirred in me a lust that I found disconcerting; more so when my body started to react to the lust as I stood at the helm watching her.\n\nAshore, a guy like me would feel privileged just to be able to talk to a young woman like her. And yet Issie had just told me I was going to be fucking her on the trip; the first one probably before the day was out. I knew Issie was just being direct, like only Issie can be. But I found myself bristling at the expression 'fucking her'. It just seemed too crude, too rough to be applied to her. Yes, as I watched her and even mentally undressed her from what little clothing she had on, I was stirred with an arousing lust at the thought of having her. But she activated desires that were far too genteel to be categorised as mere fucking, however carnal they were.\n\nStill, there was work to be done to get the boat safely away. I needed to concentrate on navigation and getting the boat away from the hazards of a tropical reef strewn shore. The flurry of activity distracted me from the issues around the discussion I had with Issie and my lusting over Ellen. By the time we'd settled down, had the auto-pilot on and were sitting around the cockpit having breakfast, I won't say I'd forgotten it, but my brain had deferred it for later consideration.\n\nIt had reinvaded my brain as I glanced over the spoon about to deliver a mouthful of food into my mouth to find that Ellen, sitting opposite, had an arm wrapped around one leg which was folded up along her chest with a foot on the seat. If she thought the A-line skirt had folded itself neatly down between her legs to protect her modesty, it had fallen well short of the mark. \n\nHer crotch was completely exposed. What's more, the slim gusset of her thong was doing nothing to take up where her skirt was failing her. Her outer lips sat outside the leg hems and the material was translucent enough to reveal most of what they covered. She was clean shaven and with her lips spread by the elastic of the thong, quite open to my view.\n\nFortunately Amy spoke up and stopped me from getting caught staring.\n\n\"So, Issie has given you the lowdown has she?\"\n\nAmy was grinning at me. In fact the three of them were lined up grinning at me. There was this strange sense of being a caged animal being poked at by three tormenters, even if in the long run it would be me doing the poking. They knew I was having trouble getting my brain around what was happening and were enjoying every moment of it.\n\n\"Yes, but are you sure you're OK with it?\"\n\n\"Yes and by the way, no, I wasn't reluctantly pushed into it by Issie. Once we sat down and started to work out the practical implications of Ellen being aboard, it was the obvious solution.\"\n\n\"I don't know. If it was a guy aboard, I'm not sure I'd be happy to share either or both of you with him. He could lie there wanking in his bunk for all I'd care.\"\n\nI looked to Ellen before continuing.\n\n\"Sorry Ellen.\"\n\nThen looking back to Amy...\n\n\"Why's it any different because it's a third girl?\"\n\n\"Because girls think differently to guys. Guys have good biological reasons to be sexually protective of their women; it goes to their very core. A girl's primary directive is to protect her emotional connection with the guy. So if Ellen steals your heart and turns you from us, we'll happily slit her throat and throw her overboard. But until then, we can all live together as one family and have a lot more fun in a small boat then if she was left to 'lie there wanking' as you so delicately put it.\"\n\nI turned to Ellen.\n\n\"What about you Ellen? What do you think of all this? Don't you think I'm a bit old for you? You know there's no sexual obligation on you for being aboard, don't you?\"\n\nEllen caught me by surprise. Standing up, in a moment she was sitting across my lap, her arm around my shoulder, the lower hem of her skirt down my thigh instead of under her butt where it might have provided a bit more barrier between me and the naked flesh of her legs. Instinctively I put my arm around her back as she looked me in the eye, making me feel like a little boy being talked to by his mother. \n\nIn this case a mother whose breasts were half hanging out of a tiny bikini right under my eyes, with firm nipples making themselves prominent by pushing out the filmy material only just covering them.\n\n\"It's chill Ned. Did you know that for the last couple of weeks you've already had me lying in my bunk wanking - does that word apply to girls using a vibrator; whatever - as the sound of you and the girls banging away at each other wafted across the anchorage. I've also stared out of the cabin window with a pair of field glasses on you and my hand between my legs as you've done one or other of them on deck.\n\nI've seen enough of you around the anchorage or ashore to already feel as though I know the man associated with that, especially when I add the details the girls have given me. In my head lying in bed at night, I've already made love to you many times. So now it's just going to be for real.\n\nIt's OK. We can take it slow. We don't have to get down to full on rooting the first time we share the cabin.\n\nI'd ask you if you feel OK about having sex with me, but your body's already told me that should be no problem.\"\n\n'Shit' I thought. Did she have to say that? When she sat across my lap, she'd trapped my cock under her thighs. With such a gorgeous, barely clad body draped across me like that, the reaction had been predictable. Stretching out my swimmers, the rapidly engorging member had crawled across the underside of her thigh and its tip was now pushed firmly into her nearly naked crotch.\n\nEven as she continued to hold me in her eyes, she squirmed on my thighs.\n\n\"Oh Ned. Is that a gun in your cossies or are you just glad to have me on your lap?\"\n\nAmy and Issie were noticeably amused by her banter, as well as my blushing face. I suspected more by design than accident, she'd slipped the tip inside the leg hem of her thong. Sometimes it's hard to tell these things, but I was pretty sure I could feel the press of the leg elastic under the rim of the bell and the environment it was resting in had grown noticeably warmer. \n\nThat did nothing to settle me. More determined than before, it grew to its full length and hardness. The stretch of the swimwear was pulling against it, but the real barrier was the floor of her crease. I could feel my cock bend as it had nowhere else to go; surging up against her crease in excitement.\n\nAnother squirm by her and it was suddenly able to stretch itself out; the tip now surrounded by a radiating heat and a permeating dampness. There was little doubt she had me penetrated. It was only shallow, but that sort of stuff plays with your brains and boils you balls; especially as I felt tip of my swimmers grow wetter and wetter.\n\nEllen looked across to Amy and Issie...\n\n\"He has a really comfortable lap doesn't he? Not too bony, not too fat. The goldilocks of laps really.\"\n\nBut all the while, she's squeezing her pelvic floor muscles to make her sex contract and release around the tip of my cock. Then, with a...\n\n\"Well, I'd better let you finish your breakfast.\" \n\nEllen stood up and moved back to her former seat opposite me, leaving me with a full erection stretching out my swimmers now in full view of the three of them. And where it covered the tip of my cock, the materially was visibly soaked.\n\nIssie of course wasn't going to let it go that readily.",
        "\"I think we can confirm for Ellen that it wasn't a gun.\"\n\nI just wanted the thing to go down. But Ellen was back with one leg up on the seat. Now not only could I see that there's a wet patch on the gusset of her thong, but it's been dislodged enough that her sex is fully exposed and clearly aroused. She catches my eye resting on it and gives me an innocent little raise of her eyebrows, twerk of her lips and a smile that suggests there really nothing to see down there without making the slightest move to hide it.\n\nIssie, finished playing with me, and deciding that the whole thing about the sex arrangements was now settled, was at least willing to change the topic, raising a question about the sail configuration. \n\nShe wanted to set the asymmetrical spinnaker. I thought it was too close to the wind, to which she asked whether it might be faster to let the boat sail a lower course for a while and come up on a close reach later.\n\nEveryone put their two cents in, with Ellen supporting me in resisting the change. Mind you every time I looked across to engage her on the topic, I'd get the same view and the same teasing lift of the eyebrows and I couldn't get my damn cock to go below half height.\n\nThe first day at sea is always a difficult one for the off watch crews. They've just had a full night's rest, so there's little point in going below for a sleep, even though you're going to be awake half the next night.\n\nMy approach is that, even though everyone is awake, the on watch crew is responsible for the boat. The off watch can more or less do what they want, although are responsible for food preparation. Then ideally, after the 4 pm changeover, the off watch will go below and try and have an afternoon nap to help them through their night watches.\n\nAbout midday Ellen came up from below and alerted me to a navigation issue. After checking the charts, I'd plotted our destination as a waypoint on the chart plotter to give us a line to follow. The wind had veered a bit and the current was adverse so we were below that course, looking for a lift to take us back up without having to put in a tack.\n\nI'd seen Ellen take a note of our latitude and longitude and our course over the ground off the GPS before going below. Having plotted our track on the paper chart, she'd identified a tiny reef we were in danger of hitting if we didn't alter course.\n\nThat's the trouble with chart plotters. The small dangers get lost from view as you zoom out. I'm well aware of the risk and always look at the paper chart before plotting a course, including for any dangers we might pass close too. But in this case our track was further from our intended course than I'd allowed for and in any case, I'd missed the small feature.\n\nI followed her back below and she showed me the issue and she was absolutely correct. It was about 10 nautical miles before we were in danger, but it was bang on our current course or at least close enough to our course to be an issue. Thank god for her being aboard.\n\nThe tide was changing and the wind was starting to lift, so we decided we'd give it another 5 miles before we'd actually tacked, to see if we could claw our way up again and fortunately, that did the trick.\n\nThe rest of the day passed uneventfully until Ellen and I handed over watch duties to Amy and Issie at 4 pm. I have to say, I felt a little nervous as I knew a threshold was about to be passed. We were soon in the master cabin with the door closed behind us.\n\nNormally I sleep naked; with or without Amy and Issie alongside. In the tropics, it gives your skin a chance to breathe. But I felt very strange about just dropping my dacks in front of her. So I decided just to ask.\n\n\"How do you dress for bed Ellen?\"\n\n\"Just in a pair of panties. Why what about you?\"\n\n\"Usually naked. Is that going to bother you?\"\n\n\"No, go for it.\"\n\nAs if to push the point, she immediately took off her bikini top, revealing her delightful breasts, and dropped her skirt and climbed onto the bunk lying out flat and fully exposed to me. It was all very well for her, but it left me having to peel my swimmers off a growing erection right in front of her.\n\nI just wasn't sure how this was meant to play out. Were we here to have sex or just a nap? I needed someone to tell me what to do and the ever pushy Issie wasn't here to do it. And compounding my awkwardness was my now raging erection; raging not in the sense of desperately needing to use it, just unrelentingly hard and obvious.\n\nAs I climbed onto the bunk, I tried to suck my stomach in and hold out my chest in a pathetic attempt to disguise my body's age. Ellen just put a gentle hand on my hips.\n\n\"Ned, you're as nervous as a virgin on a honeymoon. I'm not going to bite you and it's OK for you to be aroused. I'd be more worried if you weren't.\n\nWe don't have to do anything. Why don't we just cuddle up and let our bodies get used to each other while we try and nap if you'd like?\"\n\nEllen had me completely off balance. She was just so mature and up front about everything. Not for the first time with her, I felt like a kid being gently mothered. I had to fight to stop my voice from quivering as I answered...\n\n\"That'd be good.\" \n\nThere was enough pressure exerted by the hand she had on my hips to make it clear I should lie on my side facing her. As I settled down she shuffled towards me until we were in fully body contact; my erection pushed into her stomach, the jutting hardness of her nipples against my chest and our upper arms over the other's waist.\n\n\"Why are you so nervous around me Ned?\"\n\n\"You're so young and beautiful and smart, I just don't see why you'd be willing to come aboard the boat and offer up your body to an old geezer like me.\"\n\n\"Did you ever think it just as likely that I might be grateful for you offering up your body to me?\"\n\n\"I'd have to say that I'd rate that as a low probability event.\"\n\n\"Well, maybe you're more of a silver fox than you give yourself credit for. Look, I understand that, but you probably underestimate how much girls - well a lot of girls - have needs too.\n\nAmy, Issie and I have spent many hours discussing these things. The guys we find on these yachts cruising the Pacific just don't come up to standard; most of them anyway. So good quality sex is in short supply and I'm definitely someone who wants quality or none at all. \n\nAmy and Issie have given you an enormous rap; not just as a lover, but as a really nice guy who looks after them and shows them a sort of love they've never really had before. You have no idea how attractive that is and how much I've yearned for that sort of company over much of the last year. It's incredibly generous of the girls to be willing to share you with me. I'd grown to appreciate them as friends while we were all in Papeete, but I didn't realise how close that friendship was.\n\nIf you're worried that if you'd come up to me in a crowded Sydney nightclub and asked me for a dance that I would have told you to piss off, then that's probably true; although let me say that as a matter of policy I do more gentle brush-offs than that. But this is a different World. Different rules apply.\n\nRelax and go with it. I give into a relationship more than I take out. I promise you won't regret it. But nor will Issie and Amy.\"\n\nAs Ellen finished speaking, she closed her eyes, forcefully slipping her thigh between mine until her mound was pressed firmly into my flesh of my upper leg. We were meant to be napping and I tried to will myself to relax and drift off into some sort of sleepy state.\n\nBut it always was an unrealistic expectation. I might have been able to do that with my wife of 30 years, but my body was pressed against that of a gorgeous 25 year old who I never lain with before and only met yesterday. It wasn't that I felt some irresistible urge to fuck her, it was just I was in a total state of arousal. And that was in no way helped by a suspicion that she was very subtly rubbing her mound on my leg, using the rocking of the boat for cover. Too subtly to be sure of it, but enough for the doubt not to be ignored.\n\nI opened my eyes to stare at the face of the blonde beauty. Her eyes were closed and her face relaxed; her breathing soft and gentle. I almost felt privileged to know that her exhaled breath was mixing with the air I was breathing in.\n\nHad she really drifted off to sleep? Was the slow light rubbing I could feel on my leg really nothing more than that induced by the rocking of the boat and the rise and fall of her body as she breathed? Safe in a belief that I wouldn't be observed, my eyes drifted down between our bodies to where her tight nipples brushed against my chest.\n\nI've always been a breast man. I could stare at them for hours. Everyone has their own taste in them and mine definitely doesn't run to giant sagging melons. I like those that are proportional to the woman's body and my taste in women very much inclines to the slimmer bodies that match my own. A 'B' or 'C' cup on a body like that is enough.\n\nAmy's were spectacular because they were just a bit bigger than you might expect on her slim body; not too big, just generously proportioned. Ellen's didn't quite match that, but were pretty nice just the same; tidy, perky, distinct orbs, capped by delightful, perfectly proportioned, pink nipples.\n\nI lay there staring at them. Sucking in my stomach, I could even view through the valley of her cleavage the swollen tip of my manhood pushing into her stomach; a discharge of pre-cum stringing between the tip and the perfection of her flesh.\n\nMy eyes drifted up to her face to find me confronting the deepest, most intense blue eyeballs I've ever seen. Her pupils were dilated, even though sun was streaming into the room.\n\n\"Would you like to play with them?\"\n\nShe lifted the hand I had over her waist and brought it up to cup her breast. The already firm nipple hardened further and pushed up between my fingers. \n\n\"I've always liked my nipples being played with.\"\n\nShe rolled part of the way over onto her back, while still clamping her thighs around my own, her mound still firmly in contact with my leg. That gave me access to her other breast and I willingly took it into my mouth, sucking the nipple in between my lips and twirling it with my tongue. A sharp intake of breath followed by a low hum told me she was enjoying the sensation, the hand she had stroking my hair encouraging me to continue.\n\nFrom my position close over her chest, I could scan her body more intimately than I'd been able to before. Her skin was of the most beautifully textured alabaster. I don't know how she maintained it like that on a boat in the tropics, but it was almost untouched by the sun; just the faintest line delineating where her bikini top sat on her breast. \n\nLying half on her back, her little tummy bulge had dissolved and her stomach was a flat board all the way down to where it disappeared into the waist band of her low slung panties. The panties themselves had been dragged down by the action of her mound against my legs and the top of a little landing strip of pubic hair was exposed. It was an almost translucent white blonde; perfectly matching the fine line of her eyebrows and the long mane of her hair, that even as she lay there, wrapped sensuously over her shoulder.\n\nWhen I looked up to her face it was at one moment in repose, her eyes closed, her mouth open in a tiny little circle, the most incredible look of relaxed ecstasy radiating from it. The next her head was raised off the pillow, her eyes drilling into my very soul as her features conveyed a sense of - I hesitate even now to use the word - desire.\n\nThe movement of her crotch against my thigh had lost any subtly. She was rubbing herself on it, the panties bulging where they met my skin as her mound flattened under the firm pressure.\n\n\"Ned. Will you finger me please?\"\n\nHow quickly the situation had changed. It seemed mere moments ago I had climbed nervously onto the bunk; uncertain about how to approach this truly beautiful young stranger. Maybe inspired by the obviousness of her arousal, now her request seemed entirely normal. I slid my hand, fingers outstretched, down her stomach and under the waistband of her panties. She released the pressure on my thigh just enough to let me slide two fingers around the turn of her mound and into her crease. It was wet, its features swollen and open.\n\nShe disengaged from my thigh, inviting me to slip the panties down her long legs; bending each one sensuously to let me manoeuvre it off her feet. Now naked, she lay flat on her back, legs slightly apart. With unencumbered access, my fingers explored her crease.\n\nApart from the landing strip, it was devoid of hair. Her very swollen bud could easily be felt but it was different from any I'd felt before. It was bigger, more prominent. I circled it with my finger, causing her to lift her hips in excitement accompanied by an almost silent hum. With the tips of my finger I could actually tweak it, like a small nipple, exciting her more.\n\nSlipping down deeper, her sex was unresisting to my finger's penetration of her and it was flowing with copious juices. But it was the stroking of her bud that elicited the best response from her and I concentrated on that, even as I continued to suck at her nipple. \n\nEllen wasn't one to vocalise her pleasure. If I listened carefully, I could just hear the change in her breathing as her excitement increased. But her body squirmed and writhed under me. She brought her hand over the hand I had in her crotch to guide and encourage me. Now faster, now slower, a bit more pressure there, now a dip into her sex - one finger, a push from her indicating a second and then a third - some vigorous finger fucking before I was directed back to her clit.\n\nHer hips started to buck as she neared her climax. Satisfied she had me on the right path, her hand moved from covering mine to encircling my hardness, jerking it gently in sync with my rubbing of her bud.\n\nHer climax was silent; indicated only by the sudden arching of her hips and the clamping of my hand within her thighs. She lay suspended in the air like that as her breaths were delivered in a series of short sharp exhalations; long enough for me to worry about her taking enough air in.\n\nHer hips started to settle, only to be thrown into the air again as she was seemingly hit by another wave of pleasure. As she settled the second time she suddenly threw her body over mine, smothering my face in kisses before planting her lips against mine and penetrating my mouth forcefully with her tongue.\n\nFinally the ecstasy drained from her body and she nuzzled down the side of my cheek before lying motionless, covering me like a blanket, her head face down into the bunk alongside mine. Instinctively, I wrapped my arms around her, one hand covering the firmness of her butt cheek while the other caressed up her back. The long mane of her hair still covered my face as a result of the final throes of sexual high. I ran my fingers through its sensuous length as I collected it into a single piggy tale and lay it off to the other side, penetrating the strands with my fingers to stroke the underlying scalp.\n\n\"You're very quiet in your orgasms.\"\n\n\"For the last eight months I've been self pleasuring on a small yacht owned by a grumpy old couple. Old habits die hard.\"\n\nFor a few more moments we just lay there, my flesh tingling under the contact with the sheer beauty of the nubile woman lying on top of me; her mound pressed firmly against my hardness. Then she whispered seductively into my ear.\n\n\"Ned. Will you make love to me? I mean really make love, like you do for Amy?\"\n\nI was starting to discover just how much the girls had been talking; but still surprised it had gone to that much detail.\n\nAmy was an interesting one. Like Issie, there were times when she wanted me to 'go the animal' on her as much as she liked to go the animal herself. And by that I simply mean hard, furious thrusting designed to maximise the pleasure of the one who has let themselves go.\n\nBut at the other extreme, she also liked the sense that she was being made love to in some sort of romantic, idealistic manner. For me it meant, having already brought her to a climax, I should do something more than just pleasure myself in her vagina while enjoying watching her body rag doll under me. \n\nWith Amy, it wasn't hard to feel inspired to do that. In a way it meant obsessing about her whole body and self as you fucked her; not just her hole and breasts. Slow, steady thrusts as you nuzzled her neck and cheeks, sucked her breasts, and stroked her face and hair, all the while whispering sweet nothings in her ear. It meant thinking of both my brain and hers as the most important sex organs being deployed instead of just the length of my cock.\n\nI can tell you that end the result for me was no less mind blowing than any orgasm I was going to get from going the animal on her. And the afterglow of endorphins it left you with was far more powerful.\n\nThe practical issue was that most women won't actually climax to vaginal thrusting alone unless you're hitting their g spot. And the contortions the latter entails is generally inconsistent with that sort of love making. And that's assuming they are in the minority that actually have a g spot and you've already found it. With Amy, I knew her body and could play it like a fiddle. Having previously brought her to a climax, she was far more susceptible to additional ones; helped by her extremely sensitive breasts. But in any case, I knew that she knew that another climax for her wasn't really the point of the exercise.\n\nWith Ellen there were a lot more unknowns.\n\nEllen had already reached onto the bedside shelf where Issie had thoughtfully left a supply of condoms and was sheathing me; merely lifting her hips to give her access while the rest of her delightful body continued to be draped over me. Wrapping her hand around my now anxious hardness, she lifted it just enough to position it at her sex and then, almost before I knew it, I found myself deeply embraced within her body.\n\nThe sensation was incredible and frankly I was in no hurry to do anything except make the most of the moment. I stroked my hand through her hair as the other gently patted her butt.\n\n\"You know you're gorgeous don't you? Not just beautiful, but you come across as the most kind and gentle person.\"\n\n\"I bet you say that to all the 25 year olds you sleep with.\"\n\n\"Yes, every last one I've been with in the last 30 years; which of course is just you.\"\n\nFrom her head's position face down alongside mine, Ellen started nuzzling up the side of my cheek; pecking at the flesh and stroking her nose across its surface. I just felt so privileged that she'd want to do that to someone my age. Suddenly her lips were pushed against mine; her tongue flickering playfully, one moment brushing across my lips, the next slipping between them to lightly wrestle against my own. \n\nI felt her trying to instigate a rollover and surrendered to her desire. Soon I was on top of her, my legs outside hers and trying to push my throbbing manhood as deeply into her tight young snatch as I possibly could. It was warm and wet and glorious. As aroused as I was, all I really wanted was to let my cock bathe in its embrace forever.\n\nStill I somehow felt a duty to perform. Now it was my turn to nuzzle her face while I lifted my hips enough to give her a few slow but deep exploratory thrusts. My erection slipped in and out of the tight embrace of her body as if it was precision made for her. There was something about her that made my cock feel as if it had been filled to a jutting hardness designed to reach into the deepest parts of her body. Even as I bottomed out - as my manhood seemed to touch her cervix - it seemed as if the arc between my cock and pubis was perfectly sculptured to fit the turn of her mound; like two pieces of a jigsaw puzzle, my flesh came up against hers everywhere at once.",
        "I gently bit her ear as I lightly ground against her mound; convincing myself that I could actually feel her wet swollen clit flip across the sensitised skin of my pubis. She let out an almost silent hum as she lifted her hips tighter against mine and ground a little harder.\n\nOur dance continued; out, in, out, in, then grind; her hips coming up to meet mine. Our bodies moving momentarily as a synchronised whole. A hum, even a moan just at the threshold of being perceptibly heard. Then she dropped her hips again and the dance went through another cycle.\n\nAll the while I was nuzzling, bitting and sucking her neck, her face, her shoulders and then her nipples; those glorious jutting nipples sitting proud on those beautiful orbs, stroking her hair with the fingers of my hand as it supported my weight. It was the nipples that seemed to be the icing on the cake that set her off. I'd had to arch my back higher to bring my lips down to meet them.\n\nHer hips still came up to meet mine with every cycle of the dance. But suddenly they were tense and shaking. She broke off the synchronised joining of our bodies on full penetration and started throwing her sex at my hardness; hard full length thrusts of my swollen, elongated manhood slipping in and out of that wet tight snatch.\n\n\"Faster, harder!\"\n\nHer words were quietly spoken but urgent in their tone. Her need was clear, even if it surprised me. There been enough finesse, enough of the slow and gentle. She wanted cock; she wanted a good fucking and she wanted me to be the one who did it. As I kept sucking her nipples I gave it to her. Like the main piston of a speeding steam train; in, out, in, out. Each time I bottomed out, the time for grinding or for light touching up of her clit was passed. Whether I banged against it on full penetration I didn't know or care. Her boiling excitement was palpable regardless.\n\nWith my thighs over hers, I had her pinned to the bed. I could feel her whole body trembling with her breathing short, sharp and syncopated to her body's shaking. My own senses, the whole length of my cock and the balls about to release their contents into her, registered pleasure to a point of no return.\n\nHer climax was as silent as every other part of our sexual encounter; more so because I'll swear she actually held her breath. But her body said it all. Her hips lifted my weight off the bed as her hands on my butt held me tightly into her; telling me not to thrust. I felt her contractions bear down on my now throbbing shaft.\n\nShe dropped her hips momentarily to the bed, but still she held me tightly into her; then threw them up again. Still her contractions rippled the length of my cock.\n\nAs she dropped back to the bed the second time, her hands conveyed a different message. They pushed down on my hips and pulled me back in again; hard. Once, twice, I didn't need to be told after that. Start fucking her again. \n\nI didn't know whether she was demanding it for her pleasure or encouraging me towards a release. It didn't matter. It felt too good just to let go. Desperately I held it back, letting every sense in my body absorb the sheer joy of fucking this beautiful woman for as long as I could.\n\nWith just the slightest, barely audible grunt, she climaxed again, squeezing her legs around my balls and again lifting her hips. She didn't try and hold me into her this time and wouldn't have been able to. About to burst, my body had taken over my thinking self, taking the additional movement offered by her lifted hips to deliver two final powerful thrusts before I knew to hold it in there. If I went for another I'd be spraying mid thrust.\n\nIn that final moment of stillness I again felt her sex contracting onto my cock; the final ball bursting pleasure delivered onto my sensitised shaft. With a bellowing grunt, I felt the brain exploding, indescribable pleasure of my release; multiple jets of seed erupting up my shaft interspersed with uncontrollable cock exciting thrusts until I was left draped like a limp, panting blanket over her body shuddering out the last vestiges of my climax.\n\nAs my breathing slowly returned to normal and my brain reset itself from the tsunami of pleasure that had overwhelmed it, I became aware of her hand stroking my hair as her breasts and nipples pressed against my chest and my still hard shaft lay deep inside her body.\n\n\"Gee Ned, the girls weren't exaggerating. That was pretty good.\"\n\nAgain, she made me feel like a little boy being praised by his mother. Yet it wasn't patronising. There was just something so matter of fact mature about her approach. Mind you, any guy's going to bask in those words and I did, even as I felt myself blush.\n\nIf I'd learnt anything from the last few weeks with the girls, it was not to be embarrassed about wanting to understand their bodies. Every woman is different and the faster you learn what makes them tick - and orgasmically explode - the better everything is. And there was nothing like a direct question to give you that information.\n\n\"Were they vaginal orgasms or was I hitting your clit?\"\n\n\"Well my clit's a bit prominent and does get very pleasurably in the way of everything, but if the guy is big enough and can get deep enough I can do vaginal orgasms and that last one was definitely vaginal. So well done you!\" \n\nI don't doubt I blushed again. I hadn't been looking for praise, and had no illusions about being bigger - or at least much bigger - than normal, but had got it anyway. Still, the directness of her answer emboldened me to go a bit further.\n\n\"I was sure I could feel your clit brush across my pubis as we ground together. Is that what was happening and is it nice for you?\"\n\n\"Nice doesn't even start to describe it Ned. It was mind blowing. I don't know what you were feeling, but it was certainly brushing. I'd have to say we fit together rather nicely down there. I don't think there's been any other guy who I've got such good contact with. I think I might take a mould of you to compare future boyfriends with if that's OK. Or maybe I'll just make a dildo out of it.\" \n\nHer last comment amused us both enough to giggle. As I shrank back out of her it was time to disengage. We cuddled up, resting pushed hard against each other; momentarily lost in our own thoughts.\n\nHow could mine not turn to the strange situation I had found myself in? Most girls don't have g spots - or don't think they have anyway. Most don't do vaginal orgasms, let alone nipple ones. For most the clit is the start and end of any real path to climax.\n\nAnd yet here I was on a boat with three girls half my age who had thrown themselves under my aging body and can each go off that way. It defies the law of probabilities. Well actually, the whole arrangement defies that. It make me wonder whether I shouldn't extend the journey for as long as the girls will let me."
    ],
    "authorname": "Joanmcarthy",
    "tags": [
        "f/m/f",
        "f/m/f/f",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/unexpected-threesome-ch-09"
}