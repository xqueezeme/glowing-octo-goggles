{
    "title": "PTSD and The Good Samaritan",
    "pages": [
        "*According to statistics (which may be underreported), some 20 veterans PER DAY commit suicide due to PTSD. I decided to write this story after learning that a second Marine I served with took his own life over the holidays. I've never even been depressed, so I can't begin to imagine how awful it is to be a prisoner of one's own mind due to memories one can't shake.\n\nI'm also no expert when it comes to cures for anything, but I have met people who claim to have experienced some sort of 'overnight conversion' in which they went from hopelessly addicted alcoholics or drug addicts to clean and sober without traditional treatment. That would seem to be extremely rare, but it obviously seems to happen.\n\nWith that in mind, I hope you'll be able to enjoy an intense-but-romantic story that involves both PTSD, and the cure, that one hypothetical person found to not only help him escape his mental anguish but to replace it with the kind of love most people hope to find.\n\n******\n\n\"Heath? There's a big difference between feeling hopeless and a situation being hopeless, and I promise you, yours isn't hopeless.\"\n\nThe recently-discharged Marine Corps officer sat there staring into space before he quietly said, \"You have no idea.\"\n\nThe psychiatrist replied, \"No. I don't know the details of your specific case. But I've worked with enough soldiers and Marines with PTSD to know there are similarities. No matter how different the things you saw and experienced may be from someone else\u2014anyone else\u2014the brain's reactions to them are always similar.\"\n\nShe slid her wheeled chair a little closer then said, \"I can help you, Heath. But only if you'll talk to me.\"\n\nHeath Thomas was 26 years old and had spent 16 months of his 3 1/2 years on active duty in Afghanistan. He was now a civilian again because his PTSD was so out of control he could no longer function effectively on active duty. \n\nIt wasn't just that he could no longer lead Marines. That was true, but it was much worse than that. His personal life was spinning out of control, as well, and lately, he often wondered if what he called 'checking out' might not be a rational option. That he still knew it wasn't was the only hopeful sign in an otherwise miserable existence.\n\nHe also knew his doctor was right. He had to talk about it. But the last thing he wanted to do was say out loud what he'd seen after living with it 24/7 for well over a year. It had even invaded his dreams, the one place he used to be able to go to find some relief. But for the last year or so, and specifically since the second 'incident', even peaceful sleep had eluded him.\n\nThe former first lieutenant had been turned over to the VA for treatment since his discharge four months ago. While he knew he should be grateful, Heath was angry and resentful about being there. The only redeeming aspect of his first visit had been the psychiatrist herself. She was a 30-something woman who was very attractive, and Heath found himself mildly aroused for the first time in months. It was barely noticeable, but by her presence alone she was able to take maybe 10% off the edge of the PTSD, and while that wasn't much, any relief was welcome.\n\nShe reached out and touched his arm then said, \"I've been here long enough to have talked to people who've seen it all. So believe me when I tell you there is almost nothing you can tell me that I haven't heard before. So I hope you won't think being female or a civilian somehow makes me weak.\"\n\n\"I don't think you're weak,\" he said, finally breaking the silence. \"It's just so...fucking hard to talk about, you know?\"\n\nThis was progress, and the doctor said very quietly, \"I do know.\"\n\nBefore he said just those few words, the images came to him again in stark, vivid detail. The first happened two months into his first tour. A Humvee hit an IED, and after being blown 15 feet up and 20 feet to its right, there was a second explosion as the vehicle landed on its wheels. \n\nHeath was just two vehicles back in the convoy and watched it all unfold as though it happened in slow motion. He also knew the secondary explosion was the anti-tank round every Humvee carried. \n\nHe was one of the first to approach the burning vehicle just seconds later as other Marines exited their vehicles and set up security in the event of a post-explosion attack. \n\nRounds were still cooking off, and the smart thing to do was stay away. But Heath couldn't wait. He'd take an ass chewing from the company commander later, but he had to know if anyone was still alive.\n\nAs he reached the driver's side, what he saw through the thick, black smoke something that nearly made him vomit. The second Marine looked inside and hollered, \"Jesus fucking Christ!\" before puking his guts out.\n\n\"They're gone. Let's get the fuck away from this thing\u2014now!\" Heath hollered as the flames got hotter and higher before eventually engulfing the Humvee, causing any remaining ammo to cook off along with the three dead human beings inside.\n\nHeath had managed to compartmentalize the gruesome sight until the second event when it, along with what he'd seen with his own eyes, returned with a vengeance.\n\nHe was five months into his second and final tour when his company encountered the largest enemy force since Iraq; a force no one knew existed let alone was operating anywhere near them. There were roughly 200 Marines in a defensive position with nearly 600 jihadists preparing for an attack. \n\nHeath heard the company commander on the radio informing the Task Force commander, and Army lieutenant colonel who was back at their joint base camp, of their situation. The captain made it clear they needed reinforcements, massive air support, or they'd have to pull back.\n\nThe reply stunned not only Heath, the company executive officer or XO, making him second in command, but the company commander as well.\n\n\"Negative! Hold your position.\"\n\nTheir position was just another worthless patch of sand with no tactical meaning which meant there was no reason to stay and fight. But orders were orders. The truth was, even if they held off the attack, Marines would die, and many more would be wounded. The company commander reiterated his concerns in no uncertain terms, and again, he was ordered to 'hold at all costs'.\n\n\"Son of a bitch!\" the captain said as he looked at Heath.\n\n\"Looks like we're defending this oasis, sir,\" he remembered saying with a grim smile.\n\n\"All right. Get the word out,\" the commander said as he barked instructions to his lieutenants who would in turn, pass them on to their platoons.\n\nAs the enemy massed for a suicidal frontal assault reminiscent of Pickett's Charge at Gettysburg on the 3rd of July in 1863, the Marines dug in as best they could and prepared for battle. There was no air support available for at least another hour, but in less than half that amount of time, a hell of lot of people would be dead or dying.\n\nThe attack began with the enemy firing a few ill-aimed mortar rounds from maybe a half mile away that did no real damage. As the large group of enemy soldiers began running toward them wildly firing AK-47s and RPGs, Marine machine gunners opened fire, and riflemen began taking well-aimed shots as the 'martyrs' continued moving in mass toward them. \n\nEvidently, these fanatics truly believed that dying in battle with the infidel was a ticket to Paradise, and a lot of them were going to go there (or somewhere south of heaven) very quickly.\n\nHeath watched as the attackers fell by ones or twos here and there all across the front. At about a hundred yards away, the jihadis began sprinting and screaming, and Heath, who'd been firing his rifle along with everyone else, laid his 9mm next to him as the enemy closed the gap.\n\nThings went into slow motion again as three bad guys came directly at him. He shot one of them at five yards and another as he was diving into the small 'hole' Heath had dug in the sand, intent on killing the young Marine. \n\nThe man fell dead, almost on top of him, just as the third ran ran by screaming in Arabic. With no threat to his direct front, Heath turned just as the third man stopped and spun around. He reached for his pistol, and as he was about to fire, another Marine shot the attacker from the side. \n\nWhen he collapsed, Heath turned back around and saw several more 'men in black' heading his way. He laid the pistol back down and grabbed his rifle and began firing. Between him and the Marines firing on his right and left, all three of them went down.\n\nAnd that's when he heard someone literally scream, \"LIEUTENANT! BEHIND YOU!\"\n\nHeath rolled over and just as he did, he saw that the man who'd been shot was back on his feet. He was staggering toward lieutenant who grabbed his 9mm again. As he did, the enemy soldier raised his rifle and pointed it at Heath. Without hesitation, Heath shot the man twice in the chest. He not only didn't get knocked backward, he took one more step toward his enemy then fell just inches away from him on the opposite side of his dead comrade. Unbelievably, the man was still alive.\n\nTo this day, Heath clearly recalled the man's eyes; eyes that were wide open. Eyes filled with a hatred Heath had never before seen. The dying man had dropped his rifle but saw Heath's a foot or so from his head and tried reaching for it. As he did, Heath placed the pistol's barrel between the man's eyes and pulled the trigger from just inches away from his own body. \n\nThe next thing he recalled was the corpsman asking him questions.\n\n\"Lieutenant. What the fuck happened? Are you okay?\" the 'doc' asked him as he looked for wounds among the blood and body tissue from the dead jihadist.\n\nPhysically, Heath Thomas was fine. He didn't have a scratch on him. But mentally he was a changed man. This time, he couldn't compartmentalize what he'd seen. And what he saw every waking moment of every day were those eyes and...where they once were after he pulled the trigger.\n\nHe'd been able to function well enough to finish out the tour, but by the time he got back to Camp Lejeune, North Carolina, he began having serious issues.\n\nHe could no longer focus. His 'hard drive' was at near capacity continuously reliving the events of the suicidal frontal assault as well as the Marines he'd watched be incinerated after seeing the driver who'd been decapitated by the follow-on blast. \n\nThings got so bad he was removed from the company and put on the battalion staff. But even there he struggled to the point that his battalion commander referred him for counseling after learning what he'd seen while in-country.\n\nThere wasn't supposed to be any shame in seeing a 'shrink', but the thought of other Marines knowing an officer needed it only added to the growing mental chaos. \n\nAnd then the nightmares came. And with each passing week, they grew worse and worse, often resulting in waking up at some ungodly hour drenched in sweat.\n\nHeath had thought about staying in for a career, but it was clear he was in no condition to even serve as a commissioned officer. In fact, he was soon recommended for discharge, which was characterized as 'honorable under medical conditions', and as of a four months ago, he was no longer on active duty.\n\nHe was now back home in Orlando, Florida, living with his parents who were deeply concerned about their son; a son they were powerless to help.\n\nAs Heath recounted everything that had brought him here to this particular psychiatrist at the VA hospital, he forced himself to look up at her. He took a deep breath then began speaking.\n\n\"This all began on my first tour when one of our vehicles hit an IED,\" he said so quietly she could barely hear him.\n\nA few minutes later, Heath was wrapping up his mental nightmare by explaining how he'd ended up being discharged and sent home.\n\n\"First let me tell you how important it was for you to say those things out loud,\" the female doctor told him. \"From there, please know that what I told you earlier applies to you, too, Heath. We can work through this. You can feel better again.\"\n\nShe smiled then told him, \"And you can get your life back. You're a smart, well-educated man. And, this isn't personal, it's just an observation, you're a very handsome guy. There's a wife, and a family, out there somewhere just waiting for you, Heath. In order for you to find her, we need to stay focused on your treatment. So don't give up no matter what. Okay?\"\n\nThree months later, Heath told her after yet another session of therapy, \"I'm sleeping a little better, and I'm able to stay focused on simple things again. And I'm not...thinking about 'checking out' anymore.\"\n\n\"That's good, right?\" the attractive doctor said.\n\n\"I guess,\" Heath responded. \"I mean, anything is better than the mental hell I created for myself.\"\n\nShe could see he had more to say so she sat and waited.\n\nHeath looked over at her then said, \"But I still can't find any purpose in life, you know?\"\n\nShe knew he'd once been at least somewhat religious but after all he'd been through there was nothing left of his former spiritual life, and it wasn't her place to provide that anyway. He wasn't one for causes or political activism, either, so, as far as she was concerned, some deeper meaning or purpose could wait. \n\nFor now, the doctor was very pleased with the progress he was making, and she wanted to really hone in on these small successes and build from there.\n\nBut when no further progress came after another two months of three-times-per-week counseling, she became very concerned.\n\n\"Heath? Let me prescribe something else for you,\" she suggested. \n\nHe'd been adamant about not taking anything, but she'd convinced him to try a drug that had proven very effective on PTSD patients. After five months, and no further improvement, she wanted to try something different.\n\n\"What's the point?\" he said, his eyes and voice hollow.\n\n\"Getting better is the point,\" she said gently.\n\nShe continued speaking, but Heath didn't hear a word she said, and at some point he just started talking over her without realizing he was doing it.\n\n\"All I've done is...take life. I've killed quite a few people, and one of them was just inches away from me. What the hell value is there in going on when I haven't done a damn thing to make the world a better place?\"\n\nNow very concerned, she asked if he planned on 'hurting' himself.\n\n\"No. Not anytime soon, anyway,\" he told her in a way that convinced her he wasn't in imminent threat to himself.\n\n\"So...you're not...\"\n\n\"Suicidal? No. I...I just feel so...empty,\" he replied quietly.\n\n\"What do you think could help 'fill the hole'?\" she asked him.\n\nHeath shook his head then said, \"I don't know. I guess if I could...be the first man to have a baby, I'd feel like I'd done something.\"\n\nAnd for the first time since she'd known him, he laughed. It only lasted for a moment, but something in what he'd said had given him a moment of hope.\n\nThe doctor sat there for a moment and thought about options outside the normal treatment regimen then recalled a paper she'd read recently an alternative therapies. The idea was to give the patient something to serve as an anchor. Something that would capture their interest along the lines of religious conversions where people reported going from drug-addicted to 'changed men' overnight. She wanted to start out small, and recalled a specific recommendation.\n\n\"Heath? Have you considered doing something positive like donating blood?\"\n\nHe looked up again then said, \"No. Why?\"\n\n\"I'm trying to find something to help you find a sense of purpose. A cause that's...bigger than yourself. I was just kind of thinking out loud.\"\n\nShe saw another glimmer of hope when the glassy look in his eyes went away.\n\n\"I'd never thought about that,\" he replied as though he were suddenly very interested.\n\n\"It's called 'the gift of life' for a reason,\" the doctor told him. \"And it's renewable. You can donate regularly and help a lot of people.\"\n\n\"Renewable. Too bad my brain can't be renewed,\" he told her, a smile almost appearing on his lips.\n\n\"No, unfortunately the only organ that can renew itself is the liver,\" she told him with a smile of her own.\n\n\"What?\" he asked, now actually very interested. \n\n\"Seriously?\" he further asked in a way that told her he was interested in what she'd just said.\n\n\"Well, yes. Just 25% of a liver in a patient needing a new one will grow into a full liver in just a few months. And the same goes for the donor whose liver will completely regenerate.\"\n\n\"I knew you could live with just one kidney, but I wasn't aware the liver could do that.\"\n\n\"It most definitely can,\" she told him, wondering where this was going.\n\nShe sat there watching him and could tell he was thinking. Normally, he was just eaten up by the trauma he'd endured, but he was definitely thinking about something.\n\nA minute or so later, he asked, \"And that would save someone's life, wouldn't it?\"\n\n\"Yes. Living donors account for just 5% of all liver transplants and are in great demand at all times, so anyone healthy enough to do so, and who's also a match, would absolutely save someone's life.\"\n\nHeath sat up in his chair thens asked, \"So I could donate a kidney and part of my liver, right?\"\n\n\"Not at the same time, and, well, I'm not sure you're ready for that kind of stress just yet anyway. The surgery itself is potentially life-threatening, and then there's the recovery time. All of that takes a huge toll, Heath. Physically and mentally.\"\n\nFor the first time in what seemed like forever, Heath felt a spark of hope. He could not only save someone else's life, there was a chance he might not survive the ordeal, and that would solve a whole host of problems, too. Or so he told himself.\n\n\"I would strongly recommend you try donating blood, and try this other medication. Then, after another couple of months, we can explore other options.\"\n\nThe doctor had no intention of trying to get her patient to do something as radical as an organ donation, but if the thought of doing so gave him any increased sense of purpose, it was something she could use in promoting his overall recovery.\n\n\"Yeah. Um...maybe I will,\" he told her as he became aware their session time was up. Another little flicker of hope on a much smaller scale.\n\nThat evening, Heath did something he almost never did. He spoke to his parents during dinner.\n\nHis mother was so happy she had to use her napkin to dry her eyes.\n\n\"I...I think that's very...noble,\" she said when he brought of the idea of being a donor. She wanted to tell him it was insanely risky and foolish, but just seeing her boy engage in a conversation was such a rare treat she didn't want to spoil it.\n\nEven her husband managed not to say something like 'how ridiculous the idea was'. She knew he wanted to, but she'd given him the same look he'd seen so many times he knew better than to even mention it.\n\n\"I'm not saying I'm gonna do this. I'm just telling you it's something that makes me feel like my life might...matter...again,\" Heath told them.\n\n\"Your life matters plenty,\" his father said rather gruffly. But as he glanced at his wife, he got the look again and softened his tone. \"I guess it couldn't hurt to at least look into it a little.\"\n\nThis time he got an approving smile, and nothing more was said during dinner, but just those few moments were priceless to Jan Thomas.\n\nHe further cheered her up when, after finishing his meal, said, \"That was really good, Mom.\"\n\nHe'd tried smiling, too, but it didn't quite happen. Nonetheless, she felt herself tearing up again as she told him she was glad he liked it.\n\n\"If you don't mind, I'm gonna go do some research online,\" Heath said as he stood up.\n\nJan had always been very proud of her only child. He'd been so smart in school, and Heath had been a very good athlete in high school, lettering in two sports. He also had his father's handsome face, and although he'd lost weight during his battle with PTSD, he was still tall and strong, and as a mother, all she wanted was for her son to find the enjoyment in life he'd always had before the war. So if this idea of his was the 'way back', she would do whatever she could to support her son.",
        "Heath had been looking and reading for nearly an hour when he realized that for the first time in nearly a year, he'd been free of the oppressive thoughts that consumed him every waking minute of the day, and often as he slept.\n\nThe darkness returned later that night but not with the same vengeance. And just before it did, Heath sat there realizing that the possibility at least still existed that he could feel the way he used to. \n\nHe woke up around 3am in a pool of sweat and hoped he hadn't screamed in his sleep again. The fact that his mom hadn't run into his room asking if he was okay told him he hadn't.\n\nHe stripped the sheets off the bed and threw them in the washing machine before taking a shower then opening his laptop again while he drank a cup of coffee in the kitchen of the still-dark house.\n\nHe went back to a website he'd looked at the previous evening and continued reading where he'd left off.\n\n\"How to become a liver donor,\" he said out loud to himself as he took another sip.\n\nIt was almost 6am when he heard his father walking toward him.\n\n\"Rough night?\" his dad asked as he poured himself a cup of coffee.\n\n\"I've had worse,\" Heath told him truthfully.\n\nHis dad looked over his shoulder and saw what he was looking at but didn't say a word. His son was home, alive and well, and while the thought of doing something that crazy ate him up, Jim Thomas knew he had no say in anything his son did. \n\nBesides, he'd often felt like Heath was gone already, and were he to actually lose him, he couldn't help but wonder if his boy might not be 'in a better place'. It was a gruesome thought, but it was one he'd had many times since his son came home.\n\nWithout saying another word, Heath's father took his coffee to the living room where he turned on the local news and waited for the weather report like he did every morning as his son continued reading.\n\nWhen Jim got ready to leave for work, Heath was still at it.\n\nNot sure what else to say, he put a hand on his son's shoulder and said, \"You know we're both real proud of you, right?\"\n\n\"Thanks, Dad,\" was the only reply he got, but those two words were about as much as he'd gotten any time he'd tried telling Heath he cared since his son had been discharged.\n\n\"Okay. I guess I'll see you tonight then.\"\n\n\"Yeah. Have a good day, Dad,\" his son told him without looking up.\n\n\"You, too,\" his father replied, wondering if this new 'kick' of Heath's might somehow be doing him some good.\n\nHis mother wasn't a coffee drinker, but she'd been up since 6:30 herself. She'd stayed clear of her son until she had to go into the kitchen to eat. Then she, too, saw what he was reading and asked him what he'd found out.\n\n\"A lot,\" he replied very quietly.\n\nIt was just two words, but the way he said them encouraged her. She bent over, put her face next to his and said, \"I really will support you no matter what, Heath.\"\n\nHe reached up, touched her arm, and kind of tried to kiss her cheek. It wasn't much, but it was almost more affection than the grand total he'd given her since returning home, and she found herself tearing up again and trying not to get too hopeful.\n\nSometime around 10 o'clock, Heath told his mom, \"I'm gonna be out for awhile, okay?\"\n\nJan wanted to ask where he was going and when he'd be back as she constantly worried about him doing something to himself whenever he went anywhere alone.\n\nBut when she saw what looked like a smile her spirits soared.\n\n\"Okay. Call me if you need anything.\"\n\n\"I will, Mom,\" he told her in that same, almost-cheerful voice.\n\nAdvent Health was a transplant institute in Orlando located just a few miles from where the Thomases lived. Heath didn't call ahead or make an appointment, but he wanted to talk to someone to get some preliminary information.\n\nAs he got out of his car and headed toward the building, Heath realized he'd been 'out of his head' again for most of the morning. \n\nHe'd started referring to his mental state as 'being trapped inside his head' not long after the symptoms appeared, and it was an awful feeling; one in which he felt like he was held captive inside his own mind. \n\nHis mind had gone from being a friendly, familiar place where he could think and enjoy life to one that felt more like a prison cell; a cell that had been individually tailored to his own brand of tortured, solitary confinement from which there was no escape.\n\nHe walked in and found the information desk, where a middle-aged woman smiled and asked if she could help him.\n\n\"Um, yes. I'm thinking about becoming a donor,\" he said.\n\n\"Oh, okay. Do you have a family member in need of a transplant?\" she asked next.\n\n\"Oh. No. I uh, I'm just interested in getting some information.\"\n\n\"Well, we have plenty of brochures I can give you,\" the woman said with a smile.\n\n\"Okay, but what if I actually wanted to donate? What would I have to do?\"\n\nThe woman gave him a different look then said, \"You'd need to get screened to find out if you even can, then we'd need to do some tests and find out if you're a match to anyone on an approved list. You'd also receive counseling about the risks, but in the end, if you are a match, you would be able to serve as a donor.\"\n\nWhen Heath didn't immediately reply, she said, \"We rarely ever have a 'walk-in' actually end up donating, but I can tell you as someone who needed a kidney myself, you would quite literally be saving someone's life.\"\n\nHeath's brain needed a few seconds to process what she just told him, and when it did, he told her, \"I want to be screened.\"\n\n\"Well\u2014all right. Let me walk you over to the other side of the facility where we can get you started,\" she told him as she stood up.\n\nAs they walked, Heath asked her if she'd mind sharing her story, and the woman told him there was nothing she enjoyed talking about more. She was still talking when they arrived at the office that started the screening process, and Heath asked her to continue. It took her another couple of minutes to finish up the short version of how she nearly died, and the way someone just like him had decided 'out of the goodness of their heart' to become a donor.\n\n\"Did you ever meet him? Or her?\" Heath asked once she finished.\n\n\"No. He wanted to remain anonymous. But I'd like nothing more than to meet him and tell him how truly grateful I am,\" the woman informed him. \"After all, I quite literally owe him my life.\"\n\nHeath thanked her just as she opened the door and introduced him to the next person who'd take it from there, an attractive, younger woman who smiled at Heath the moment she saw him.\n\n\"God bless you,\" the woman older said with a smile as she assured him he was in good hands from there.\n\n\"You, too,\" he told her as he stepped inside.\n\nAn hour later, he'd filled out a huge stack of papers requiring a team of lawyers to comprehend and signed them all saying he fully understood everything he'd just (not) read.\n\n\"Okay, once we can get you scheduled, you'll be screened to see if you're eligible to donate. If there are no disqualifying factors, we'll then see if you're a match to anyone on a viable list,\" the young woman there told him confirming exactly what the first woman had said.\n\n\"So do I need to call or come back?\" Heath asked.\n\n\"Well, yes. But not until we call you. It won't take long. I promise,\" she said with a very bright smile. \"You should hear from us in a day or two.\"\n\nThe girl smiled again then said, \"But I wouldn't mind hearing from you sooner if you'd like my number.\"\n\nHeath had always taken being flirted with for granted. But since his return home, he had no idea how many times a woman had smiled at him or even said something similar. It wasn't that it stopped happening, it was that he had no interest whatsoever in dating, women, or sex. None.\n\nBut he managed a smile of his own and told her he wasn't really dating.\n\n\"I don't mind sharing,\" she said rather quietly after an older woman sitting at a desk behind her glared at the back of her head.\n\n\"It's not that, either,\" Heath said, not wanting to say anything else.\n\n\"Ohhh. Okay,\" the girl said. \"You um, play for the other team, huh? That's cool. My brother's gay, so I get it.\"\n\nHeath didn't reply to her comment. He only thanked her for her time then headed back to his car and then his parents' house.\n\nHe no sooner got home than his brief reprieve of mental freedom ended. The images came back again along with all of their attendant feelings, and Heath could barely remember how good he'd felt just an hour earlier.\n\nThe gloom stayed with him until the office that took his paperwork called and asked him if he could come in the following day to continue the screening process.\n\n\"Absolutely,\" he replied, feeling better almost immediately. \"Just tell me when and where.\"\n\nThey agreed on when and she gave him the room number and told him what to expect. Heath, in turn, promised he'd be there on time.\n\n******\n\n\"Mom? I'll be fine, okay?\" she said, trying to console her mother who was crying so hard she was shaking. \"Look, just because you weren't a match doesn't mean we won't find one, right?\"\n\nHer mother had always been the strong one, but after learning her daughter would die without a new liver, and having just learned she wasn't a match, the stress and strain of the last month overwhelmed her. Now it was her daughter who was standing strong in the face of more bad news.\n\nHer father and brother had both been tested and neither was a match. Her grandparents volunteered to be tested, but neither of them was deemed strong enough to survive the major surgery involved in organ donation. One out of 300 donors died, and roughly 30% developed some kind of complication. So any potential donor had to not only be a match but healthy enough to fight off infections or other serious problems arising from the procedure.\n\nRachel Owens had recently turned 38, and it was her father, Brian Owens, who first noticed what he thought was a kind of yellow color in the whites of his daughter's eyes. His older brother, her Uncle Dave, had died of pancreatic cancer, and his first symptom had been this same kind of jaundicing.\n\nHe didn't want to frighten his daughter, but the day after her birthday, he set her down and told her what he'd seen. They went to the bathroom together and Rachel saw the same thing her father had noticed in her eyes for the first time.\n\n\"I've been tired a lot lately and my body aches,\" she admitted. \n\n\"Let's get you in to see Doctor Wells ASAP,\" her father said as she turned around and looked at him.\n\n\"Dad? Do you think this is what killed Uncle Dave?\"\n\n\"I don't know, honey. But I know enough to be sure you need to get looked at.\"\n\nRachel had moved back in with them after learning that her husband of ten years had been unfaithful. As hurtful as that had been, finding out that he was out late at night cruising the streets of Orlando and paying prostitutes for sex had crushed her.\n\nShe'd been tested for STDs as soon as she found out the truth, and the tests had come back negative. But as they learned the following week after seeing their family practice doctor who had the tests redone, Rachel was told she'd contracted Hepatitis B. The disease was damaging her liver and was at the point where she would need a new one in order to survive.\n\nHer liver was still doing its job adequately enough to keep her alive, but it was struggling to do so. The jaundice and fatigue were early signs of a very serious condition that was rapidly getting worse. \n\nThe only possible explanations for the STD check not revealing the condition was the clinic she'd gone to didn't routinely screen for for 'Hep B' or there was a 'false negative', something that happened in a very small percentage of cases. Whatever the reason, the reality was that without a new liver, Rachel would almost certainly not live until summer. It was now mid-January, and the entire family had rallied around her in support.\n\n\"So what are our options?\" Rachel had asked the doctor who informed her of just how serious her condition was.\n\n\"I'm afraid you're going to need a new liver. We can and will treat you with antibiotics to slow the progression, but they won't stop it.\"\n\nHe further informed her that she would require a living donor, and then gave her the worst news yet. \n\n\"Only about 5% of all donated organs come from living donors, and the vast majority come from members of the immediate family.\"\n\nFinding out that her mother, Peggy Owens, the last immediate relative to get her results back wasn't a match, had been a crushing blow. And yet Rachel had remained surreally calm when the bad news was delivered. Her mother, on the other hand, was utterly devastated, fearing she would soon lose her daughter.\n\nRachel's younger brother, Andy, was good with computers and promised to bombard social media and every possible site with their urgent request for a viable donor. Everyone knew the odds were long, but they also knew there was no other remaining option. \n\nThe only good news they had was that she was still fully covered under her now ex-husband's insurance plan, the one thing she'd insisted on during the divorce. With the cost of a liver donation running well over $500,000, that alone was a daunting concern facing anyone in her condition.\n\n\"Mom?\" Rachel said again, as she put her hands on her mother's shoulders. \"I'll be fine.\"\n\nHer mother could only shake her head and hold her daughter as she cried. Rachel saw her father tenderly looking on, a feeling of helplessness showing on his face, too. She smiled at him until he smiled back then held her mom even more tightly.\n\n\"Come on. Let's sit down with Andy and figure out what to do from here,\" Rachel suggested as she gently pushed her mother away. \"How does that sound?\"\n\nHer mom struggled hard to stop crying then nodded her head.\n\n\"Okay. Let's do that,\" she said as bravely as she could while trying to smile. The smile was distorted and looked more like a grimace that a smile, but at least she was trying.\n\nAndy went through all of the photos they had of his sister, and selected one from about six months ago. She was at the beach in a one-piece bathing suit and even at 37, she'd 'rocked the house'. Or rather...the beach.\n\nRachel had always been a very pretty girl, and while not stunningly gorgeous, she was most definitely a very attractive woman. Her light-brown hair was now chin-length and perfect for the type of face she had, and also went quite well with her bright, hazel eyes. Rachel's skin was taught and firm, and in spite of the occasional trip to the beach, there were no visible wrinkles anywhere. \n\nA pretty, white smile added to her natural beauty, and from the neck down, she had a very athletic-looking body. Rachel was a bit on the thin side but not noticeably so. She'd worn a size 6 all of her adult life, and looked incredible in the all-white bathing suit.\n\n\"Isn't that a little risqu\u00e9?\" she asked her brother.\n\n\"Not at all. It's meant to convey a happy, healthy, vibrate young woman who is now...\"\n\nThere was no need to finish the sentence as everyone knew how it ended.\n\n\"Deathly ill,\" was the obvious choice although kinder, more gentle words could be found to use in their place.\n\nWhen Andy said, \"You look hot, sis,\" she playfully shoved him, and her parents both laughed, mostly as a way to relieve some of their pent-up stress and frustration.\n\n\"Yeah, yeah, yeah. Says the playboy,\" Rachel teased. \n\nHer brother was also a very good looking young man, and unlike her, he'd never married. But he was just 33 and for him, at least, there was still plenty of time.\n\nRachel had married in her mid-20s and dreamed of having a family one day. But one year and then another ticked on by, and with each passing year her now ex-husband continued postponing having a baby for one reason or another. \n\nNot long before she learned about his secret life, Rachel was preparing to lay down a kind of ultimatum in which she planned to tell him she wanted a child within the next year or she would consider calling it quits. \n\nCoincidentally, it was that very week when the first round of bad news hit. She'd found her husband's test results hidden in the back of a credenza that sat in their home office. She'd been looking for proof of their Florida Homestead exception for tax purposes and couldn't find it. So she pulled out every single file folder in the drawer and began going through them. \n\n\"What in the world is this?\" she asked herself when she found the letter in the very back of the last folder all by itself. It was from a local clinic and said that her husband needed to come in and receive the results of his 'recent blood work' in person. \n\nRachel laid it out on the kitchen countertop, and when her husband came home that evening she calmly asked him, \"What's this?\" as she pointed to it.\n\nShe saw the expression on his face change when he looked at it even as he said, \"Hmmm. I don't know.\"\n\n\"It's personally addressed to you,\" she told him. \"And it was filed away in the credenza almost as though it had been hidden.\"\n\n\"Oh, right. Yeah. That was the uh, lab work I had done during my annual physical,\" he told her, his confidence returning as he 'upped the ante'.\n\n\"No. That would have been through QWEST Diagnostics. You know, the only company our insurance pays for. So what's really going on here?\"\n\nHe hemmed and hawed and tried another round of BS before she said, \"It was a test for STDs, wasn't it?\"\n\nWhen he denied it so strongly it scared her, Rachel let it go. For then. The next day, however, she started going through their online banking statements, something she rarely ever did, and noticed a number of withdrawals for $300. And then she checked her calendar and realized the withdrawals coincided with the evenings when he'd claimed he'd been working late. Very late.\n\nHer last call was to his business partner. Rachel casually asked him about those nights and what they'd been doing so late.\n\nThere was a long pause before he finally told her, \"He uh, he wasn't here then, Rachel. On any of those nights.\"\n\nRachel told him she was probably mistaken and thanked him for his time.\n\nWhen her husband got home that evening she lit into him. She'd never so much as raised her voice before, but she was livid.\n\nIn a last-ditch effort to hide the truth he told her he was gambling.\n\n\"I've been playing poker. At night. I...I've lost a lot of money, and I'm sorry, but I promise...\"\n\nRachel grabbed the original paper and said, \"Just STOP it! Tell me the truth\u2014now!\"\n\nAfter a long period of silence he quietly said, \"I've been going to massage parlors. And...other places.\"\n\nRachel wasn't naive, but she had to ask.\n\n\"Why would you be going to massage parlors? At night?\"\n\nHer husband looked right at her then said, \"For...sex.\"\n\n\"For sex? Are you KIDDING me?\" she yelled. \"We have sex all the freaking time! So tell me why you need to go...elsewhere...for more!\"\n\nThe truth was he liked the impersonal nature of it. He found it thrilling that a young, 20-year old girl would let him do anything he wanted for the right price, and the right price for doing anything happened to be $300.\n\n\"And by everything, I mean...everything. And that includes barebacking,\" he admitted.\n\nRachel was even more lost and asked what the hell that was.\n\n\"It means sex...without a condom.\"\n\n\"Oh, my freaking GOD!\" she hollered as she threw the paper at him.\n\nAs it slowly drifted to the floor she hissed, \"GET...OUT. Get the FUCK out! NOW!!\"\n\nAnd with that, her marriage was over. And then the false positive, or whatever went wrong, and had allowed to think at least her life wasn't over. Having a baby was out of the question for the foreseeable future, but at least she was still healthy, and in time, would be able to find someone who would be satisfied with an attractive, fit woman who was almost always ready, willing, and able. But that dream died, too, when her doctor informed her she'd suffered severe liver damage. ",
        "Looking back, she had no idea when her husband might have first contracted the disease himself, but it could have been several years ago. For that matter she had no idea how he was doing and couldn't generate the interest needed to care. \n\nRegardless, this was where she was, and better than anyone, Rachel knew she needed a miracle of some kind, and not just to one day have a child but to go on living a normal life. Or...any life at all.\n\n*****\n\nOne Week Later\n\n\"Mr. Thomas? This is Doctor David Denning from Advent Health.\"\n\nHeath's deep funk lifted even as he replied.\n\n\"Yes. Hi.\"\n\n\"I have some very good news.\"\n\n\"I could use some,\" Heath said as he sat up straight and listened.\n\n\"As you know your screening was successful. You also qualified to be a donor, and you've had the risks explained to you, and all of the needed tests run. So if you're still interested in donating, I have some very good news.\"\n\n\"Yes. I'm very interested,\" Heath told him as he sat up straight and listened.\n\n\"You're a match for a woman who lives here in the greater Orlando area.\"\n\n\"You're kidding,\" Heath said, forgetting about the things that had held him captive for so long.\n\n\"No. I'm very serious,\" the doctor told him. \"This person is local and would like to make her identity known. Since you've indicated you still want to go through with this, I'll be calling her as soon as I hang up. As for now, I can provide you her contact information, and after I've talked her, I'll give her your name and number. We won't release her information over the phone, though, so if you could stop by, we could...\"\n\n\"I can be there in an hour,\" Heath said, interrupting the doctor. \"I just need to shower and head your way.\"\n\n\"All right. Stop by my office and this will only take a couple of minutes.\"\n\n\"I will. And Doctor? This is the best news I've had in...well, a really long time.\"\n\nDoctor Denning hung up the phone and wondered what kind of person thought risking their life for a total stranger was good news? He understood the question was rhetorical because people did things for all kinds of reasons. \n\nOne such reason was altruism. It was uncommon in today's world, but this young man was one of those rare people willing to quite literally roll the dice. So if he knew the risks and wanted to do this, the good doctor would be more than happy to make his wish come true.\n\nHeath arrived a little over an hour later as he also shaved for the first time in a week. As he walked into Advent Heath again, Heath almost felt like his old self. And the reason, he now understood, was having found purpose and meaning to his life. \n\nBeing a donor provided him a reason to live. And the fact that he could actually give life to another human being was the greatest feeling he'd ever experienced.\n\n*****\n\n\"Ms. Owens? This is Doctor Denning from Advent. Yes, you too. Thank you. Listen. I have some amazing news.\"\n\n\"Oh, my...did you...is there...a donor?\"\n\nThe doctor chuckled softly and said, \"We have a match,\" rather than 'yes'. Even though he'd just spoken to the potential donor, until he actually signed the final consent forms, he could back out at any time.\n\nRachel hadn't cried since the diagnosis, but this news was so powerful she couldn't stop herself.\n\nHer mother knew she was on the phone and rightly thought it was related to her medical situation. When she saw Rachel crying, she immediately assumed the worst as she hurried to her daughter's side where she sat down beside her and put an arm around her shoulders.\n\n\"What's wrong?\" she whispered.\n\nRachel shook her head but couldn't speak. She did, however, turn the speaker phone on.\n\n\"Ms. Owens?\" \n\n\"This is her mother, Peggy. Rachel's crying so hard she can't talk. Is there something I should know?\"\n\n\"This Doctor Denning from Advent. I can't tell you that, ma'am, but Rachel can,\" she heard a male voice tell her.\n\n\"They...found a donor,\" Rachel finally managed to say.\n\n\"WHAT? Oh, my God! I have to call your father!\" she said as she flew out of the chair.\n\n\"Doctor?\" Rachel said after inhaling slowly and deeply. \"Thank you.\"\n\n\"Don't thank me. I'm just the messenger,\" he said very pleasantly.\n\n\"May I know who it is?\" she asked.\n\n\"Yes, you may. I just spoke to him, and he's coming in to get your contact information. I fully expect he'll be calling you very soon. But in the meantime, I can tell you his name is Heath Thomas, and he's also from the Orlando area.\"\n\n\"Heath Thomas,\" she repeated. \"That's the most beautiful name I've ever heard.\"\n\n\"I can give you his phone number, if you'd like.\"\n\n\"No. That's okay. If he wants to call me, I'd love that. But if not, I don't want to interrupt whatever plans he might have. Just please tell him how incredibly grateful I am, okay?\"\n\n\"I will,\" the doctor promised. \"And once he and I have talked, the next thing we'll be doing is setting a date for the procedure.\"\n\n\"I...I don't even know what to say,\" she told him truthfully.\n\n\"I'm sure the right words will come once the two of you talk,\" Dr. Denning said, even though that wasn't what Rachel meant.\n\n\"Yes. I'm sure you're right,\" Rachel replied, almost in a state of shock.\n\nShe thanked the doctor again, hung up, then sat there and cried all the tears that had needed to fall but couldn't as she walled herself off against disappointment. She knew quite well there were still other hurdles, the biggest of which was the donor changing his mind, but just finding one really was the proverbial 'needle in a haystack'. \n\nThe needle had been found. Now if it could only be threaded and carefully used to give her the hope of more time...\n\n*****\n\nIt was a little after four o'clock when Rachel's phone rang. Her father had taken off from work as soon as his wife called, and the three of them were sitting around the kitchen table talking and laughing, all the while staring at the phone laying in front of Rachel.\n\nWhen it rang, her mother yelped so loudly it made her father laugh. She playfully slapped him as they watched their daughter pick up the phone, accept the call, then quietly say, \"Hello?\"\n\nRachel's hand was shaking as she held the phone to er ear. She wasn't going to let her parents listen until her Good Samaritan told it was okay.\n\n\"Is this Rachel Owens?\" she heard the most wonderful baritone voice she'd ever heard ask.\n\n\"Yes. This is she.\"\n\nHer parents both had tears in their eyes as their daughter smiled.\n\n\"Hi. My name is Heath. Thomas. I understand you and I will be...sharing body parts real soon.\"\n\nRachel laughed much too loudly, and when she did, her mom and dad laughed, too, even though they had no idea what had been said.\n\n\"Yes. I believe that's true,\" she replied.\n\n\"I uh, I'm looking forward to meeting you,\" she heard him say.\n\n\"Me, too, Heath,\" she told him immediately. \"My...my parents are both here, and I was wondering if you'd mind letting them listen in.\"\n\n\"Not at all,\" Heath told her.\n\n\"Let me put you on speaker, okay?\"\n\nRachel smiled at both of her parents then laid the phone down and hit 'speaker'.\n\n\"Okay. They're listening,\" Rachel told him.\n\n\"Um...hi, Mom. Hi, Dad,\" Heath said as cheerfully as he'd said anything in well over a year.\n\n\"Hello!\" her father called out.\n\n\"Thank you!\" her mother cried\u2014literally.\n\n\"Oh, no. I'm the one who's grateful,\" Heath said, confusing everyone.\n\nNo one dared asked why, so Rachel said, \"My parents are Brian and Peggy Owens, by the way.\"\n\nShe also didn't care to mention she'd gone back to her maiden name after the divorce as that was the last thing she wanted to think about during this happy time.\n\nHeath was unaware that he laughed for the first time in the same length of time before saying, \"It's a pleasure 'meeting' both of you.\"\n\n\"Tell him we'd like to meet him,\" Rachel's mom said, as though Heath wasn't listening.\n\nShe only smiled and asked Heath if he heard that.\n\n\"I did. And I'd love to meet all three of you.\"\n\n\"That...that would be wonderful,\" Rachel replied. \"Just tell us what day and time work best for you and we'll be wherever you say.\"\n\n\"Oh, well, I was kind of hoping we might be able to at least meet for a few minutes this evening. If that's not too...\"\n\n\"That's perfect!\" Rachel's mother blurted out. \"What would you like for dinner, Heath?\"\n\n\"Mom!\" Rachel said as they heard Heath laugh again.\n\n\"Anything will be fine,\" he replied. \"What time and where?\"\n\nRachel gave them their address then looked at her mom who mouthed 'six o'clock' which her daughter repeated.\n\n\"Great. I'll see you all at six then,\" Heath said.\n\n\"That sounds perfect,\" Rachel said, as her eyes teared up again. \"And, Heath? From the bottom of my heart\u2014thank you!\"\n\n\"Us, too!\" her mother called out.\n\nHe wasn't about to try and explain why this mattered so much to them over the phone. In fact, he wasn't sure he even wanted to mention his motives. Were he to do so, that would almost certainly necessitate talking about what had led up to his need to find something to give him a reason to go on living. And the thought of his demons returning due to simply saying those things out loud convinced him not to.\n\nIn fact, he hadn't even mentioned what he was doing to his therapist for fear she'd try and talk him out of it. He trusted her, but this was his life, his business, and his decision. He didn't need or want anyone else's permission, so that was another can of worms he had no interest in opening.\n\n\"I'll see you all in a couple of hours then,\" Heath told them.\n\n\"Yes. See you then, Heath,\" Rachel replied, holding off the next round of tears until he hung up.\n\nWhen Heath told his parents where he was going, they weren't anywhere nearly as enthused as Rachel's mother and father were. But when Heath's mom saw him smile, it touched her so deeply she knew something important was going on in her son's life.\n\n\"Have a wonderful time,\" his mother said as she hugged him goodbye.\n\n\"Thanks, Mom,\" he told her as his father intentionally refused to look at him.\n\nAfter all he'd been through, getting the cold shoulder from his dad wasn't that big of a deal. He managed a kind of smile then told his dad he'd see him later. His father only grunted and kept reading the paper.\n\nHeath hadn't felt this nervous since his first days in Afghanistan. He had no idea who Rachel Owens was or whether he'd even like her. But he did know that without his help she would die. He quite literally held the power of life within himself and therefore resolved to be as polite and upbeat as he could no matter who she turned out to be.\n\nAs he pulled into their driveway he realized he'd used the word 'upbeat'. That, too, was something he hadn't bothered trying to be since the whole PTSD thing started. His only goal had been to survive another day after waking up to the same hell he'd lived in the day before.\n\nThe dark clouds had, for the most part, lifted, and as he walked to the front porch, he almost felt optimistic. He went to ring the bell when the door opened.\n\n\"Heath?\" he heard a female voice say.\n\nAs he looked at her, he hoped the surprise on his face wasn't too obvious as he realized she was a very attractive woman who was probably in her early 30s.\n\n\"Rachel?\"\n\nTears were flowing down her face as she stepped onto the porch and put her arms around him and hugged him as hard as she could as she answered, \"Yes.\" \n\nHeath hugged her back and came close to tearing up himself.\n\n\"Hi!\" she finally said as she pulled away and looked at him. \"I'm so glad to meet you.\"\n\n\"Same here,\" he told her, an actual smile appearing on his face.\n\n\"Come in. Please. I want you to meet my mom and dad. Again,\" Rachel told him almost playfully, as she grabbed his hand and refused to let go.\n\nHeath closed the door behind them, and just a few feet inside were her parents standing there ready to thank this unknown Good Samaritan who was saving their little girl's life.\n\nRachel's mother was also crying as she hugged Heath and welcomed him to their home.\n\nHer father shook the younger man's hand then pulled him in and hugged him, too.\n\n\"Thank you,\" he said as he squeezed Heath before letting him go. \"Thank you so much.\"\n\n\"Heath, as you know these are my parents, Brain and Peggy. We, of course, all know yours, and you know I'm Rachel.\"\n\nEvidently, she was as nervous as he was based on the way she was shaking and talking.\n\n\"Please come in and sit down,\" Peggy said very pleasantly. \"Would you like anything to drink before dinner?\"\n\n\"No thank you,\" Heath told her as he looked around.\n\nIt was obvious they were at best a middle-class family causing Heath to wonder how they were paying for all of this, another thought that surprised him. And for the first time the thought hit him as to how he would pay for the amount Advent Health's 'Living Donor Foundation' didn't cover.\n\nRachel's father said, \"Our daughter hasn't stopped smiling since we heard the good news.\"\n\nHe looked at his daughter then added, \"Except for the times she's been crying.\"\n\n\"That goes for me, as well,\" his wife added. \"We're just so unbelievably thankful and grateful beyond words, Heath.\"\n\n\"I have to say I'm also thankful to have this kind of opportunity,\" he replied.\n\nHis comment would have been puzzling were they all not so overwhelmed with gratitude they couldn't focus on such details.\n\n\"So...are you from Orlando?\" Rachel asked.\n\n\"Yes. Born and raised. You?\"\n\n\"Yes. I grew up right here in this house,\" she told him. \"Well, minus the years I was...married.\"\n\nRachel's smile disappeared and she looked away when she mentioned having been married.\n\n\"But that's all behind me now,\" she said much more cheerfully. \"How about you, Heath? Are you married, engaged, in a relationship?\"\n\n\"Me? Oh. No. None of the above,\" he told her. \"No. I've never even been close.\"\n\nThere was a moment of silence before Peggy said, \"Dinner's ready. Why don't we go ahead and eat?\"\n\n\"Sounds great,\" Heath said as he stood up.\n\nRachel was right across from him so he extended his hand. It surprised her and also caused her to smile.\n\n\"Thank you,\" she said very sweetly as she took his hand and stood up, too, before leading him to the dining room.\n\n\"This is delicious,\" Heath said after tasting the fried chicken Peggy had made.\n\nShe smiled and Rachel told Heath, \"My mom is an amazing cook.\"\n\n\"Oh, that's not true,\" her mom said modestly.\n\n\"Oh, yes it is,\" her husband countered. \"And Rachel is just as good.\"\n\n\"Oh, really?\" Heath asked as he looked at her.\n\n\"I do okay,\" she replied, also being very modest.\n\nBrian finally got around to asking Heath what he did for a living. It was just a standard get-acquainted comment, but Heath, who was in between bites, wasn't sure what to say.\n\n\"It's none of our business,\" Brian said immediately.\n\n\"No. It's okay,\" Heath told him. \"After I graduated from the University of Florida...\"\n\nRachel smiled and said, \"GO, Gators!\" which caused Heath to laugh.\n\n\"I uh, I joined the Marine Corps and did 3 1/2 years on active duty. After getting out, I moved back home with my folks, so I'm kind of...unemployed at the moment.\"\n\n\"Ah, okay. If you need any help finding a job, just let me know, okay?\" Brian told him sincerely.\n\n\"I may take you up on that,\" Heath replied, the thought of a job being one of the last things on his mind as of late.\n\nSmall talk took up the remainder of their time together until Peggy asked if anyone would like dessert.\n\nEveryone said 'yes', and to Heath's surprise, Rachel's parents said they wanted to give the two of them some time to talk and took theirs to the family room. The sound of the television meant they couldn't hear any conversation, and Rachel apologized.\n\n\"For what?\" Heath asked.\n\n\"It was nice of my mom and dad to give us some time to talk, but it was, I don't know, a little...clumsy.\"\n\n\"It's fine,\" Heath assured her. \"And I agree. It was nice of them.\"\n\nNeither of them spoke as they each took a bite of the fresh, moist chocolate cake.\n\n\"This is amazing, too,\" Heath said as he took a sip of milk to wash it down.\n\n\"Mom made it from scratch,\" Rachel told him.\n\nSome more silence passed before Rachel got up the courage to ask why Heath was doing this.\n\n\"Don't get me wrong, please. I'm beyond thankful you are. But I'm just trying to understand it. That's all.\"\n\nHeath could tell she was an unassuming person, and that was something he liked in women. Confidence was fine, but he preferred a more traditional kind of woman who wasn't loud or aggressive. Then again, Rachel wasn't someone he was 'pursuing', but he liked that she had a kind of sweetness about her.\n\n\"I guess the short version is...I need to find some kind of purpose in my life,\" Heath told her very quietly.\n\n\"I'm sorry for being so nosy,\" Rachel told him.\n\n\"No. You're not being nosy at all. It's...it's just really hard for me talk about.\"\n\nRachel smiled then said, \"Then let's talk about something else. Do you have any brothers or sisters?\"\n\n\"No. Just little old me,\" he told her. \"You?\"\n\n\"I have a brother, Andy. He's the best. He's been so supportive. I can't wait for you to meet him.\"\n\n\"I'd like that,\" Heath said as they continued to gently probe for details.\n\n\"He's younger than me. I'm thinking you might be a few years younger than him.\"\n\n\"I don't know his age, but you can't be all that much older than me,\" Heath told her in a way that made her think he was serious.\n\n\"I'm...I'm 38, Heath. I don't know your age, but my brother's 33, and you look younger than him. To me.\"\n\nShe smiled then added, \"I had no idea what you'd look like, but I have to admit it was a very pleasant surprise to see how...handsome you are.\"\n\nHeath smiled again and thanked her before telling her he was 26.\n\n\"I wasn't sure, but that was pretty close to what I thought,\" Rachel told him.\n\n\"I am, but I'm really having a hard time believing you're 38. I honestly thought...30 or maybe...32.\"\n\n\"Oh, my gosh! I love you!\" Rachel told him with the happiest smile he'd seen yet.\n\nHeath laughed along with her before she got serious.\n\n\"I...I really do...love you, Heath. Not...romantically, of course. I mean that in...\"\n\n\"I understand,\" he told her.\n\n\"After Doctor Denning called me, something I heard a long time ago kept running through my mind. It's something like, 'Greater love hath no man than this.' I can't remember the rest of it, though.\"\n\nHeath had heard it said at a Sunday service in Afghanistan.\n\n\"Greater love hath no man than that he lay down his life for a friend,\" he told her.\n\n\"Yes. That's it. Thank you,\" Rachel said. \"I have to say that's how I feel whenever I look at you.\"\n\nHeath wanted to tell her something but instead asked, \"Do you have any idea when they'll do the...procedure?\"\n\n\"Oh. Um...no. I mean, I know it'll be relatively soon. I just don't know exactly when yet. Why? Did they tell you something?\"\n\n\"No. I was just curious,\" he replied, causing Rachel to momentarily wonder if he might be having second thoughts after meeting her.\n\n\"I see,\" she said very quietly.\n\nHeath realized she had some kind of thought that concerned her so he said what he wanted to say earlier.\n\n\"What I meant was...I...I was kind of hoping we might have some time to maybe, you know, get to know each other a little better.\"\n\nRachel's expression changed completely.\n\nShe smiled happily then told him, \"I'd like that very much, Heath.\"\n\n\"Do you work?\" he asked.\n\n\"No. I...I haven't had a job since before I got married. And after I left my ex-husband, I've was in no condition to hold a job, so I've been sponging off my parents...\"\n\nRachel remembered Heath was living at home, too, and apologized again.\n\n\"I wasn't implying that living at home meant...\"\n\nHeath managed a laugh then told her he hadn't taken it that way.\n\n\"Oh, good. I don't know why I'm so...nervous around you.\"\n\nShe looked away then looked back at him and added, \"But I am.\"",
        "In spite of the slight yellow color in her eyes, Heath thought Rachel was a very attractive woman. He loved the way she parted her hair to the side and the way it framed her face. And having spent a little bit of time with her, he also found himself oddly attracted to her. The 'odd' part, of course, was her being some 12 years older than him. Even so, she had this...this...'vibe' about her that he really liked.\n\n\"Would you like some more cake or maybe some more milk or a cup of coffee?\" Rachel asked as he put the last bite on his fork.\n\n\"No, thank you. I'm stuffed. I rarely eat this much, but everything was just so good.\"\n\n\"I'll let my mom know,\" she told him before offering to take his plate.\n\nHeath thanked her then told her he should probably get going.\n\nHe saw the disappointment flash across her face before she smiled.\n\n\"Oh. Okay,\" she said. \n\n\"Did you maybe want to talk some more?\" he asked, the hopefulness in her face returning immediately.\n\nRachel smiled and said, \"I'd love that. But if you need to be going...\"\n\n\"No. In fact, if you'd...like to...we could go somewhere and maybe get a cup of coffee.\"\n\nThere was a fresh pot ready to be brewed, but Rachel didn't mention that.\n\n\"That sounds really nice,\" she told him, the smile now warm and sincere.\n\n\"Yeah? Okay. Let's do that then,\" Heath replied, his smile equally warm. \n\nAs they spoke, he was unaware that the darkness had been away for so long. When one wasn't depressed, one never thought of such things. Feeling good was the norm and only when one didn't feel good did it cause one to ask why.\n\n\"Let me go tell my mom and dad I'm heading out, okay?\" she asked.\n\n\"Sure, and I want to say goodbye before we go, too, if that's okay.\"\n\n\"You can come with me if you like,\" she said very sweetly.\n\nHeath loved her smile and realized that was just one more thing he liked about this attractive, older woman.\n\nHe thanked her mom and dad sincerely, but Brian said, \"Nonsense! We're the ones who are thankful. If there's anything we can do...and we mean\u2014anything\u2014you just ask, okay?\"\n\nHeath promised he would then said, \"And I'll have your daughter back home before midnight, sir.\"\n\nRachel laughed first before her mother did, and her father roared as he slapped the young man on the shoulder.\n\n\"If she'd found a young man like you in the first place...\"\n\nHe stopped talking and laughing at the same time before looking over at his daughter.\n\n\"Rachel? Honey? I'm...so sorry.\"\n\n\"It's okay, Dad. I mean, the truth is, you're right. You're absolutely 100% right, in fact.\"\n\nThere was an uneasy moment before Peggy said, \"It was such a delight meeting you, Heath.\"\n\n\"You, too,\" he told her before they hugged again. \n\nHe shook hands with her father then asked Rachel if she was ready.\n\n\"Let me just get my purse, okay?\" she told him.\n\nShe came back with it and a thin cardigan sweater draped over her arm. \n\n\"Don't laugh, but anything under 70 degrees is chilly to me.\"\n\n\"I grew up here, too, remember?\" Heath reminded her.\n\n\"Right. You did say that,\" Rachel said with a smile before saying, 'bye' to her parents.\n\nWhen they got outside, she tried to remember the last time a man opened a door for her, and the only time she could recall in recent memory was her dad doing that whenever they went somewhere together.\n\n\"Thank you!\" she told Heath sincerely when he waited for her to get in being closing it.\n\nAs they backed out Heath said, \"I haven't been for coffee in so long, I can't think of anywhere to go.\"\n\n\"Gosh, it's been a long time for me, too, but I do remember this place because of the name. Do you know where The Drunken Monkey is?\" Rachel asked, trying not to laugh.\n\n\"Oh, sure. It's over on Bumby Avenue, right?\"\n\n\"Yes. The north end.\"\n\nNeither of them spoke for well over a minute, and Rachel felt Heath had something important to say. Her fear he might change his mind was back again in spite of the bond they'd created.\n\n\"Back at the house I got the sense you wanted to say something. If you do, I hope you'll feel free to share it with me,\" Rachel finally said.\n\nHeath let out a long sigh then looked over at Rachel for a brief moment.\n\n\"I wanted to answer your question about why this is so important to me, but I've never told anyone about it before. Except for my therapist.\"\n\n\"That's okay. I don't want to be pushy. I only wanted you to know I'm happy to listen. Anytime.\"\n\nHeath shook his head then said, \"I'm not sure I can share this.\"\n\n\"Okay. But in the meantime, if you don't mind, I'd like to tell you why I need a new liver,\" Rachel told him quietly.\n\n\"By all means. Please. I'm happy to listen.\"\n\nIt took her a little while to really open up, but eventually, Rachel got down to brass tacks.\n\n\"So...I don't know when this...massage parlor/prostitute thing started, but I know it was happening fairly often near the end of our marriage. When I learned the truth, I honestly thought nothing could hurt more than the feeling of betrayal.\"\n\n\"And then you learned about the infection that's destroying your liver,\" Heath said, understanding what she meant.\n\n\"Yes,\" Rachel quietly replied.\n\nShe was sitting with her hands in her lap, and although his still-foggy brain said not to, the human being in him said to do it, so he reached over and took her hand and squeezed it.\n\n\"I don't even have words to express how sorry I am,\" he told her.\n\nHeath couldn't see the tears in her eyes, but he did feel the little squeeze she gave him back. He then slowly pulled his hand away and said, \"Thank you for sharing that, Rachel. I feel like I'm really starting to know who you are.\"\n\nHe looked over at her then tried to smile and said, \"And the more I learn, the more I appreciate what a really wonderful person you are.\"\n\nRachel pulled a tissue from her purse, dabbed her eyes, then said, \"No. That's you, Heath. You're the wonderful person.\"\n\nWhen they walked into the coffee shop, the place was packed.\n\n\"I didn't expect this,\" Heath said as another couple jostled their way around them.\n\n\"I really didn't want coffee. I mostly just wanted to be able to talk,\" Rachel told him.\n\n\"I don't want coffee this late at night, either,\" Heath told causing Rachel to smile sweetly at him.\n\n\"We could just sit in the car,\" she suggested.\n\n\"I'd like that,\" Heath told her as they turned around and walked out.\n\nThere was just enough light from a light pole in the parking lot for Heath to see her face as they sat there in silence. After two uncomfortable minutes passed, Rachel turned toward Heath but didn't say anything. She could tell that made him uncomfortable so she faced the front again when he finally spoke.\n\n\"I killed a man with a pistol at point-blank range and watched his...\" he said almost inaudibly. \"I...I watched his eyes until...\"\n\nThis time it was Rachel who reached over for his hand.\n\n\"Heath. I...you...how did that...where were you when...\"\n\n\"Afghanistan. Farah Province.\"\n\n\"My God. I can only imagine,\" she said. \"No. Actually I can't. I can't imagine. At all.\"\n\n\"I saw worse things happen to the men I served with. Things I'll never talk about. Ever. To anyone.\"\n\nRachel leaned over the gearshift and tried to hold him. \n\nHeath had never cried before, but tears filled his eyes as the horrors of war came crashing in. And yet, the touch of this woman made them less ominous. They somehow held less power over him as long as she was near.\n\n\"So that's why I see a therapist. And that's the basis for the reason I want to do this.\"\n\nHe paused then said, \"No. That's the reason I need to do this.\"\n\n\"I think I understand,\" Rachel said as she put a hand on his cheek.\n\n\"I...I had to find something to make me feel alive again. I needed something positive to risk my life for; something to give me...purpose,\" he told her very quietly.\n\n\"Now I understand,\" Rachel said as tears fell down her cheeks again. \"I do, Heath. I understand.\"\n\n\"Rachel?\" he said just as quietly.\n\n\"Yes?\"\n\n\"I'm so very glad it's your life I'm saving.\"\n\nHer tears turned to sobs within seconds as she continued to hold him even as he turned to hold her back.\n\nAs her sobs subsided, Rachel said, \"You're my life, Heath Thomas. You're my...Good Samaritan.\"\n\nHeath then touched her cheek and tried to smile as Rachel moved away enough to look at him while she spoke.\n\n\"I'm not sure there's anything 'good' about me, but...you...make me feel like maybe there is,\" he told her.\n\n\"Heath. There's more good in you than in anyone I've ever met. So please don't ever say that again, okay?\"\n\nShe cupped his face with her hands as she said that and Heath promised her he wouldn't.\n\n\"Rachel?\" he began. \"I'm also incredibly glad I met you.\"\n\nTears were still falling as she told him, \"You, too, Heath. You, too.\"\n\nThey looked at one another for a second or two the way people often do just before they kiss when Heath looked down then slowly pulled his upper body away.\n\n\"I should probably take you home,\" he said unexpectedly.\n\nRachel also moved away and sat back in her seat.\n\n\"Yes. That's probably a good idea.\"\n\nHeath started the car then looked over at her and, without smiling, said, \"Thank you for letting me tell you that. I...I hope I didn't put thoughts or images in your mind that'll haunt you.\"\n\n\"What? Heath, no. Oh, my goodness. You actually saw those things. If you can see them and live through it, I can hear them and be just fine. Okay?\"\n\nShe reached for his hand again then said, \"I'm so happy you felt comfortable enough to share something so deeply personal with me, and thank you for telling me. I need to know who the man is who's saving my life.\"\n\nHeath squeezed her hand back just before she put it back in her lap.\n\n\"Seatbelt,\" Heath reminded her with the best smile he could muster.\n\n\"Oh, right. Yes. Can't have something terrible happening to us now, can we?\" she said, trying her best to be lighthearted.\n\nHeath felt himself laugh and couldn't believe it happened.\n\n\"No. We uh, we don't that.\"\n\nRachel laughed, too, and although they didn't talk on the way back to her parents' home, nothing more needed to be said. At least not right then.\n\nHe walked her to the door and thanked her again for being someone so special; someone he could tell the one thing he'd never told anyone before outside of a clinical setting.\n\n\"It's funny, but I feel like I already really know you,\" Heath told her as they stood on the front porch.\n\n\"I was just thinking the same thing,\" Rachel replied. \"I was even wondering if there was some kind of...I don't know...some kind of\u2014connection\u2014between us.\"\n\nHeath smiled then nodded.\n\n\"Yeah. Maybe so. I have no idea if that kind of thing is even possible, but maybe we were...fated to meet or something.\"\n\n\"Regardless, I'm glad we did,\" she said quietly in the night air.\n\n\"Yeah. Me, too,\" Heath told her as they had an awkward moment as to what to do next.\n\nHe started to hug her then stopped, so Rachel, who smiled at his discomfort, put her arms around him again and just held him.\n\n\"Thank you again, Heath. From the bottom of my heart.\"\n\nHe ran his hand up and down her back and said, \"Trust me. The pleasure is all mine, Rachel.\"\n\nShe pulled back slowly, smiled at him, then softly kissed him on the cheek.\n\n\"Goodnight,\" she said quietly.\n\n\"Goodnight, Rachel.\"\n\nAs her hands slid down his chest he took one of them briefly and gently squeezed it.\n\n\"I'd like to see you again,\" he told her.\n\n\"Huh. Imagine that. I was just thinking the same thing,\" she told him, a happy smile appearing on her face.\n\n\"You know, I still can't believe you're...the age you told me,\" he said.\n\n\"You can say '38'. Unlike Hepatitis, it won't kill me,\" she told him, trying not to laugh.\n\n\"Gallows humor. We Marines love that stuff.\"\n\n\"I've kind of become a fan myself in recent months. Sometimes it's been the only humor I've had of any kind.\"\n\nHeath kind of laughed then said, \"When you live with death, giving it the finger is about the only thing you can do.\"\n\nRachel covered her mouth as she laughed.\n\n\"I like that. Giving death the finger.\"\n\nHeath flipped the bird to the sky and quietly said, \"Kiss my ass, Death!\"\n\nRachel laughed a little too loudly and said, \"Shhh. But yes. Kiss my ass, Death!\"\n\n\"Honestly? I haven't felt good for, well, a very long time,\" Heath told her. \"But tonight, I felt okay again. I've even let myself believe things might one day BE okay, again.\"\n\nRachel's laughter and smile ended as she teared up again almost immediately.\n\n\"I wish I had the power to make promises that always came true,\" she told him. \"But I don't, and I don't know whether or not things will ever be like they once were. But I do know that you and I have the power to make each other feel like they could be.\"\n\nHeath blinked as hard as he could several times while he also tried to clear his throat which suddenly had a huge lump in it making it impossible to talk.\n\nHe settled down then looked at Rachel and told her, \"I told myself I wouldn't care who you were, what you were like, what you believed, or anything else. I was determined to do this even if I didn't particularly care for you. But having met you, all I can say is you're as beautiful inside as you are on the outside.\"\n\nRachel somehow managed not to even tear up, let alone cry, before trying to be lighthearted again.\n\n\"Considering my...advanced years...liking me in spite of what you see could be something very unflattering,\" she said with a warm smile.\n\n\"Oh, trust me. It's...very flattering,\" Heath told her. \n\nHe reached up and touched her face again then, as he looked into her eyes told her, \"You are beautiful, Rachel.\"\n\nA thousand things ran through her mind, but all she said was, \"Thank you.\"\n\n\"Well...I'll uh, I'll see you then, okay?\" Heath said.\n\n\"I very much hope so.\"\n\n\"I have your number so I'll text you and we can make plans.\"\n\n\"Please do.\"\n\nHe waved as he turned to leave and Rachel said, \"Goodnight, Heath.\"\n\nHe stopped, turned to look at her, smiled, then said, \"Goodnight, Rachel.\"\n\nWhen Heath got home, his dad was in bed, but his mom was still awake. It wasn't that late, but it was obvious she was waiting up for him.\n\n\"Hey, Mom,\" her son said the way he used to.\n\n\"Did you have a nice time?\" she asked rather tentatively.\n\n\"I did,\" Heath told her, again in his old voice.\n\n\"I take it you must have found common ground with...\"\n\n\"Rachel. Her name is Rachel. Owens. And yes, I did.\"\n\nHeath smiled when he said that, and his mom not only noticed, it made her emotional again, too.\n\nShe moved closer and hugged her son.\n\n\"Then I'm very happy for you.\"\n\n\"Thanks, Mom. And I have to say I'm pretty happy about all this, too.\"\n\n\"I don't suppose you'd care to tell me a little about her, would you?\"\n\n\"Actually, I'd love to.\"\n\nHeath spent the next several minutes recapping the evening, and his mom loved the way he sounded as he talked. It was almost as though he we was home from college on a break telling her about some new girl he'd recently met. The fact that this 'girl' happened to be 38 years old would have normally caused her huge amounts of concern, but Heath was so...happy...she didn't care one whit.\n\n\"That's amazing, honey. To be 38 and look that young is really unusual.\"\n\n\"You know, Mom? She's unusual. In the best kind of way.\"\n\n\"She\u2014and her family\u2014sound wonderful. I'd love to meet them sometime.\"\n\n\"I gotta say, this decision to be a donor is quite possibly the best one I've ever made.\"\n\nHis mother swallowed her fears about him dying during the procedure or ending up...brain dead or severely...retarded...from it and told him she was very happy to see him so happy.\n\nHeath gave her a kind of 'hmmm' look then said, \"Yeah. I am happy. I honestly feel good for the first time since this sh...stuff all started.\"\n\nHis mom hugged him again then told him, \"That's an answer to my prayers, Heath.\"\n\nHeath swallowed his lack of belief and thanked her for praying for him. After all, he had no way to prove it hadn't been the thing that was turning his life around, and if it was, it was truly a miracle. \n\nFor the first time ever, just thinking about having PTSD didn't bring it back. He was able to be aware he'd dealt with this for a very long time without it sucking him back into its blackness. He had no idea how he'd do when he got up the next day, but for the first time in far too long he wasn't eaten up by thoughts from his own mind.\n\nAs he got ready for bed, he also realized he'd been thinking about Rachel the entire evening. He looked at his phone, and a surge of something coursed through his body.\n\nHe picked it up, opened 'Messages', then added her as a contact. When her name appeared, he smiled as he started texting.\n\n\"Rachel. I can't go to bed without taking the time to thank you for the best evening I've had in a very long time. It may quite possibly be the best one I've ever had. And the obvious reason for that is...you. I hope I'm not so mentally unstable that I'm making a serious mistake here, but I wanted to tell you I haven't been able to stop thinking about you or how happy I am you're the one I'm helping. Anyway, I really wanted to share that with you and let you know I'm looking forward to seeing you again. Heath.\"\n\nRachel saw the text within seconds of hearing the little 'ding' announcing its arrival, and as she read it, tears welled up in her eyes yet again. She knew she was hyper-emotional due to the illness, the stress, and yes, her fear of death. But this was different. These tears were the result of someone, someone who just happened to be a man and one who was very kind, caring, and giving, making her feel good again. \n\nAs she reread the short text, Rachel was trying to recall the last time that had happened, and although she knew she'd felt that good before at some point in her life, she couldn't recall when. All that mattered was that's how she felt at that very moment, and the reason to her was obvious, too. It was this very attractive, much-younger man. Her lifeline. Her second chance. Her...Good Samaritan.\n\n\"Hi, Heath,\" she texted back.\n\n\"I promise you nothing you wrote was a mistake. It was perhaps the sweetest thing anyone has ever told me. Or would that be 'texted me'? Truth be told, I haven't stopped thinking about you, either. But then, how could I? You're the man who's giving me another chance at life. And the fact that you just happen to be rather easy to look at is a very nice bonus. And I'm very much looking forward to seeing you again, too. Just let me know when and where, okay? With much love (in a friendship kind of way), Rachel.\"\n\nHeath couldn't stop smiling when he read her reply until he got to the 'friendship' line. It was ridiculous, to be sure, but it completely knocked the wind out of his sails. He knew his recovery was tentative and fragile, but to be knocked off kilter so easily was very disturbing.\n\nHe fought off those feelings the best he could and decided to reply in spite of his brain telling him to leave well enough alone.\n\n\"I loved your reply. All the way to the 'friendship kind of way' part. But I suppose that's an accurate way to describe our...friendship.\"\n\nHe added some smiley emojis and hit 'send'.\n\nRachel read his reply and her heart began to race even though she knew she had to reading something into it that wasn't really there. It couldn't really be there. Could it? \n\nThat was the question she asked herself until she fell asleep, too afraid to answer it, because the implications were almost as frightening as the diagnosis had been.\n\nThe following morning, Heath had an appointment with his therapist, and as he walked into her office, he realized he wasn't dreading it.\n\nWhen he smiled, she said, \"Well, well. That's a very pleasant surprise.\"\n\n\"I've had a bunch of surprises lately,\" he told her as he sat down.",
        "\"Anything you'd care to share?\"\n\nHeath gave her the short version, and when he finished, she was quite a bit less enthusiastic than him.\n\n\"Heath. Please understand that PTSD is a very complicated and tenacious disorder. I'm thrilled that you're feeling better, but also understand there's no shortcut around it. You have to do the hard work over a long period of time and pass through it. There's just no other effective, proven treatment.\"\n\nHeath thought about what she'd said then asked, \"So are you saying people don't have...religious or religious-like experiences? Conversions that take someone who's addicted to drugs or alcohol to sobriety virtually overnight?\"\n\n\"Well, the literature is mixed, at best, on that topic. I can't deny there are people who report this kind of thing happening. I've just never actually worked with, or even met, anyone who's actually done that.\"\n\n\"No disrespect, Doc, but isn't that essentially an argument from ignorance? You know, like seeing a dead body in a mansion and concluding 'the Butler did it' without any proof, because, gee, who else could have done it', right?\"\n\n\"I don't want to argue with you, Heath. I only want you to get better. What you're experiencing feels better, I'm sure, but it's like...a sugar high. It's only temporary. Do you understand?\"\n\nShe smiled in a way that felt patronizing, and Heath wasn't in the mood for being patronized. And just the realization that he wasn't was further evidence he really was doing better. So while he was willing to admit this might be a kind of sugar high, his gut told him the improvement was real.\n\n\"I think I do,\" Heath said as he stood up. \n\n\"Heath? What are you doing? We just started.\"\n\n\"No, I'm afraid we're finished,\" he told her as politely as he could. \"I really, truly appreciate everything you've done for me, but I've had more improvement in the last 48 hours than in the last 48 weeks. If I'm making a mistake, then the mistake is mine. But I believe I need to keep pursuing what's been working. So again, no disrespect, but this...isn't working.\"\n\n\"Okay. I wish you all the success in the world, Heath. And should you decide to come back, we'll be here for you, okay?\"\n\nHeath hadn't planned on cutting ties, but as he thanked again for all her help, the idea of being free from these long, dull meetings was very appealing.\n\n\"Thanks, Doc,\" he told her before walking out and texting Rachel.\n\n\"Hi there. Are you free for lunch?\"\n\n\"I am,\" Rachel texted back with a smiley face.\n\n\"I'm just leaving the VA. Can I come get you?\"\n\n\"I need 30 minutes to get ready, but after that, yes!\"\n\n\"See you then.\"\n\nRachel had been feeling tired all morning. She was still happy from her evening out with Heath, but that little bit of excitement had worn her out. Just getting his text and knowing she'd be able to see him hit her like a first cup of coffee in the morning.\n\nWhen she told her mom where she was going, she told her daughter how happy she was for her.\n\n\"Thanks, Mom. Me, too.\"\n\n\"Rachel?\" her mom asked as she started to leave to get ready.\n\n\"Yes?\"\n\n\"Well, this may not be any of my business, but...\"\n\n\"Mom. You know nothing's off limits between us. Just ask or say it, okay?\"\n\n\"I know, honey, but I don't like interfering in your personal life.\"\n\n\"Mom? Had Heath not come along, I don't think I'd even have much more life to be meddled with\u2014personal or otherwise. So meddling is the least of my concerns, and besides, you don't meddle.\"\n\nRachel's smile made what her mom wanted to say much easier.\n\n\"Well, I know you just met him, and I know he's...a little young...but he's as nice a young man as I've ever met.\"\n\nRachel smiled again then asked, \"So what are you trying to tell me, Mom?\"\n\n\"It's just that, well, in spite of his age, I haven't been able to stop thinking there's something...more... to all of this. It's as though the two of you were, I don't know...destined to meet or something.\"\n\nRachel raised her eyebrows and kind of put her lips together and 'smiled'.\n\n\"It's funny you should say that.\"\n\n\"Oh?\" her mom replied.\n\n\"Well, yes. I...I've had that same feeling since the moment we met.\"\n\n\"Maybe it's more than a feeling, honey.\"\n\n\"Maybe,\" Rachel agreed. \"But I can't imagine he sees it that way. I mean, just look at him. He's young and smart, and...\"\n\n\"Very handsome?\" her mom offered with a smile.\n\nThere wasn't enough blood in Rachel's face to turn red, but she did seem a little embarrassed at her mother's observation.\n\n\"Okay. Yes. He's a very nice looking guy. No doubt about that. And that's just one more reason why there's no way he'd be interested in a woman closing in on...forty.\"\n\n\"Well, there didn't seem to be any reason to think anyone would ever voluntarily donate a part of his liver to save your life, either, right?\"\n\nHer mom's eyes seemed to twinkle as she spoke, and Rachel not only felt closer to her, she needed to hug her.\n\n\"No. No, there didn't,\" she agreed as her mom hugged her back. And now I need to get going.\"\n\nAs she walked away, Rachel tossed her head and said, \"I...have a date!\"\n\n\"You jest, but I'll bet Heath thinks it's a date!\" her mother called out.\n\n\"Yeah, right!\" her daughter called back, secretly wishing that were the case.\n\nAs the minutes ticked quickly by, Rachel couldn't decide what to wear. Where was he taking her? How nice a place would it be? She knew it wasn't a big deal, yet she also wanted to look nice, and then she had to ask herself, \"Look nice for...who?\" Or was it, \"For whom?\" she wondered before laughing and letting it go.\n\nTired of thinking about it, she grabbed a light-blue knit top with long sleeves then pulled on a pair of white Capri pants and slipped her feet into a pair of white, flat sandals. She put on a bit of mascara, brushed out her hair, and hoped that would be enough.\n\nJust as she finished, she heard the doorbell and her heart skipped a beat as she almost skipped downstairs where her mom was happily chatting with 'that nice looking young man'.\n\n\"Oh, here she is,\" her mom said as Rachel walked up and smiled.\n\n\"Hi,\" she said to Heath, the smile on her face extending from ear to ear.\n\n\"Hi, and...wow,\" he said as he looked at her.\n\n\"This is okay?\" she asked.\n\n\"Oh. Yeah, it's very okay.\"\n\nRachel's slim build with maybe 'B-cup' breasts was tailor made for what she was wearing, and she looked very nice indeed.\n\n\"Well, you kids have a wonderful time,\" Peggy said.\n\n\"Thanks, Mom,\" Rachel told her as she kissed her cheek.\n\n\"Yes. Thanks...Mom,\" Heath also said with a smile.\n\n\"Oh! Listen to him!\" Peggy laughed. \n\nHe leaned over and gave her a kiss on the cheek, too, and Rachel had to once again fight off tears as her mother beamed.\n\n\"See. I told you,\" she said in a faux whisper.\n\n\"Uh-oh. Have you two been...talking about me?\" Heath asked as though he was 'very worried' about it.\n\n\"Maybe,\" Peggy said with a smile. \"But...I'll never tell.\"\n\n\"Come on,\" Rachel said. \"We need to leave before my mother gets me in trouble.\"\n\n\"Oh. Do tell,\" Heath said as he winked at Peggy and offered Rachel his arm.\n\nAs they walked by, Rachel smiled and said, \"Thanks...blabber\u2014Mom!\"\n\n\"Who? ME?\" she said all innocent-like.\n\nRachel gave her another flip of the head and told her they'd be back later.\n\n\"So...now that my ears are burning...\" Heath said.\n\n\"Oh, it was nothing. Really,\" she tried telling him.\n\n\"Uh-huh. And I wasn't born yesterday,\" he replied. \n\nRachel got ready to say something about his age when he held up a hand.\n\n\"Not a word!\"\n\nShe went to speak again and he repeated the charge.\n\n\"Nope. Not one word about my rather limited 'time on planet'.\"\n\nHe finally smiled then said, \"That's Marine-speak for 'age', by the way.\"\n\nRachel laughed happily and thanked him for the clarification.\n\nAs he helped get in, Heath asked, \"You're not going to tell me what you and your mom were talking about, are you.\"\n\n\"Uh-uh. No. No way,\" she replied with a laugh.\n\n\"Okay. So that's how it's gonna be, huh?\" Heath said like a stereotypical tough guy.\n\n\"Uh-huh. For now anyway,\" Rachel told him as she laughed as his antics.\n\nWhen he got in Heath looked at her and she said as sternly as she could, \"The answer is still 'no'. Now drive!\"\n\nHeath made a 'harrumph' sound then said, \"Women!\"\n\nRachel laughed again and told him how glad she was to see him.\n\nHe looked over at her, smiled, and said, \"Yeah. Me, too.\"\n\nThe two of them talked, ate, then stayed and talked for another hour after their meal. The only reason they stopped talking was that both of them got texts from Dr. Denning at the same time.\n\n\"I wonder what this is about?\" Rachel said out loud.\n\n\"We could call him together,\" Heath suggested.\n\nRachel tilted her head then said, \"I'm okay with that.\"\n\nHeath moved over to her side then dialed the number.\n\nHis secretary, or whatever her title was, answered and patched them through.\n\n\"Doctor Denning. It's Heath.\"\n\n\"And Rachel,\" she chimed in.\n\n\"Well, well. Donor and donee seem to be getting along well,\" he said pleasantly.\n\nHeath looked at Rachel then said, \"Yeah. We kind of are. What's up?\"\n\n\"Well, I have a date and an OR for the procedure.\"\n\nRachel's heart skipped another beat as her blood ran cold.\n\n\"Oh. That's...that's great,\" she said unconvincingly.\n\nHeath both saw and heard the fear in her voice and on her face and put his arm around her.\n\n\"That is great,\" Heath told him much more enthusiastically. \"What are we looking at?\"\n\n\"Monday morning. You'll both need to be at the hospital at 5am.\"\n\n\"Five? As in the morning?\" Rachel, not much of a morning person, asked.\n\nThe doctor chuckled then told her that was correct and explained why.\n\n\"Okay. You're the doctor,\" she said with a sigh.\n\nThey thanked him for the call then sat there staring straight ahead when it ended.\n\n\"This is really happening, isn't it?\" Rachel mused.\n\n\"Do you mean the surgery?\" Heath asked in a way that made her look at him.\n\n\"Well, yes. Of course. What else could it...\"\n\nHer voice trailed off as she quietly said, \"Mean.\"\n\n\"Oh, I don't know,\" Heath said with a smile. \"I thought maybe 'this' might be referring to...this.\"\n\nHeath pulled her little a closer to help Rachel understand he meant them.\n\n\"Oh. That...this,\" she said very quietly. \"Funny you should mention that.\"\n\n\"Funny...ha-ha or funny...ironically?\"\n\n\"Both?\" she replied. \n\nHeath smiled then Rachel said, \"That's the thing I've been avoiding mentioning. You know, the thing my mom and I were talking about? Well, it was mostly her doing the talking, but I didn't exactly argue. Too much.\"\n\n\"So has this phone call made you reconsider mentioning it?\" Heath asked, the teasing gone from his voice.\n\nRachel was looking at the table when she said, \"It's just so...preposterous, you know?\"\n\n\"Um...not really,\" Heath replied. \"I kind of need to know what 'it' means before I can agree or disagree.\"\n\nRachel didn't actually look at him, but she did sort of turn her head his way a little bit.\n\n\"My mom was saying that you're a...a really special guy,\" she began.\n\nNow clearly teasing again, Heath said, \"Well, no one can argue with that, right?\"\n\nRachel tried to laugh but nothing came out.\n\n\"I completely agreed with her about that part,\" she continued. \"But what she meant by that was that she thought maybe you and I...that we were...kind of...brought together...or something.\"\n\nHeath got serious again and said, \"Don't you think that's at least possible? I know I do.\"\n\n\"Well, yes. At least in the sense that you're a genetic match for me anyway.\"\n\n\"But that's not what she meant, is it?\"\n\n\"It's silly, huh?\" Rachel mused out loud rather than answer him directly.\n\nHeath's arm was still around her and he pulled her a little closer then quietly said, \"I don't think it's silly. At all.\"\n\nRachel finally looked at him but only for a moment before turning away.\n\n\"You do understand she's talking about...a relationship, right?\" she said, her heart now beating faster.\n\nHeath gently ran his hand up and down her upper arm as he said, \"I do. And I still don't think that's silly in the least.\"\n\n\"Heath. You can't be serious.\"\n\n\"I'm tempted to say something witty, but I'm afraid it would come out\u2014half-witty.\"\n\nRachel laughed more out of nervousness than because it was funny, but she didn't reply.\n\nWhen she didn't, Heath continued speaking.\n\n\"Over the last year or so, I've lived inside my head, and all kidding aside, it's not a place I'd want anyone to even come visit let alone move in there with me. In all that time, I haven't had a week's worth of freedom from the hellhole created by PTSD.\" \n\nHe moved just enough so he could see her pretty face then waited for her to look at him. When she did, he continued speaking.\n\n\"But since I met you, I've been 'out of my head'...\"\n\nShe went to reply when he asked her to let him finish.\n\nHe smiled at her then said, \"Before you can say it, no, not...out of my mind, okay? Out of my head.\"\n\nRachel laughed nervously and smiled at him as he went on.\n\n\"It feels like...like I've been set free or something. It's been the most amazing gift anyone could have ever given me.\"\n\nSuddenly emotional again, Rachel began tearing up.\n\n\"And then, in addition to that incredible, amazing gift, there's you, Rachel. This kind, sweet, beautiful woman who's given me my life back while turning my whole world upside down.\"\n\nShe didn't bother trying to wipe away the tears. She just let them run down her face as Heath talked.\n\n\"So yes, I can't help but think something or maybe some...one...brought us together. But not just for the purpose of being a donor. But because...well, maybe you and I are...meant to be. Together.\"\n\nHeath reached for a tissue then, with a warm smile on his face, gently wiped away the streaks and the tears.\n\n\"And if so, then how can there be anything silly about that?\" he asked even more quietly.\n\n\"How about because in less than two years...I'll be...forty years old?\" she replied, nearly in a whisper. \n\nHer jaundiced eyes were now also red and puffy as they moved back and forth between his as she waited for him to say something.\n\n\"Are you saying love ends at 40?\" he asked with a kind smile.\n\n\"What? I...I don't understand,\" she replied with a slight shake of her head.\n\n\"I was trying to understand why you brought up how old you'll be in two years rather than how deeply we could be in love by then,\" he said, the smile even more genuine than before.\n\n\"Heath. What...what are you...saying?\" she asked as her body began to tremble.\n\n\"I'm saying I was in despair to the point of believing I'd never even enjoy life again, let alone...fall in love. I hesitate to even mention this, but there were times when I thought that life itself wasn't worth living.\"\n\nRachel's eyes were moving so rapidly Heath nearly laughed, but there was nothing funny about this to Rachel so he just finished saying what he knew he had to say.\n\n\"Rachel. You've told me I'm giving you back the gift of life, and I suppose that's true. But you've given me my life back, too. You've done what I couldn't do on my own. Where therapy failed, you succeeded. And now? Now, I honestly can't imagine my life without you in it.\"\n\nShe was crying again by the time he said his last word.\n\n\"Ever.\"\n\nEverything she knew about life and love told her he meant every word he'd just said. And as she sat there knowing she would lose her life without the generosity of this amazing younger man who was risking his for her, she realized she loved him. No one else on earth would understand. But at that moment, she knew it was true. And not because of what he was doing, but because of who he was.\n\nRachel grabbed another tissue, dried her eyes again, then looked at Heath and asked him, \"What are you really saying, Heath?\"\n\nHe smiled, touched her cheek then said, \"I'm saying that I love you, Rachel Owens. That's what I'm saying. And I'm also telling you I see nothing silly in...\"\n\nRachel suddenly lunged the 6-8 inches that separated them as she pushed his body back against the door as she kissed him like he'd never been kissed before. The kiss went on and on and on, and when it eventually ended, Heath's face was also a blob of mascara and saline.\n\n\"I love you, too,\" she told him as her eyes went back into overdrive.\n\n\"Yeah?\" he asked playfully.\n\n\"Yes. I do. I really do love you, Heath Thomas,\" she told him again. \"And I agree. There's nothing silly about 'it', at all.\"\n\nHeath gently pushed her away then leaned in and kissed her, and somehow Rachel managed not cry when he did. And when that kiss ended, all she wanted was to held by the handsome younger man she loved.\n\nThat evening, there were two very different reactions to the 'good news' from Dr. Denning.\n\nRachel's parents were thrilled. They were nervous but very excited.\n\nHeath's mother tried to be supportive, but her fears got the best of her, causing her to break down and cry as she begged him to reconsider. His father, in turn, used his wife's tears as an excuse to tell his son to 'wise up' and change his mind before he got himself killed on the operating table, which, he said, would kill his mother, too.\n\nBut even that did nothing to change his mind or the way he felt about the woman to whom he was giving a part of his very self. He didn't even try to convince his dad to see things his way, but he did hold his mom and try to reassure her everything would be fine; something he knew full well he couldn't promise.\n\nFrom the following morning until Sunday evening, Heath spent almost every hour of each day with Rachel, and often with her family. Neither of them mentioned their new-found feelings, at least not to their parents, something they agreed they would keep secret until after the procedure.\n\nBut they hadn't agreed not to talk about it amongst themselves, and Sunday evening, Rachel told Heath there was something she couldn't stop thinking about and had to ask.\n\n\"Sure. Anything,\" he told her as they held hands on the sofa in her parents' living room.\n\n\"Well, I believe you mean it when you tell me you love me, but I...I've been wondering if...if maybe what you're feeling for me is, you know, due to this strong connection we have because of the donation or something.\"\n\n\"Ah, okay. And you're concerned that on Monday afternoon I'll 'come to my senses' and realize this really is...silly.\"\n\nHe looked at her then asked, \"Is that about right?\"\n\nBefore she could answer, he turned toward her and said, \"Nothing is going to change the way I feel, okay? Not the procedure, not the passage of time, and not even...\"\n\nRachel felt sick when she thought he would say, \"Not even my death,\" before he suppressed a laugh and said, \"Your upcoming senior-citizen status in 2020.\"\n\nShe wanted to pretend to be mad at him, but hearing him say those words caused another flood of tears as she nearly collapsed into his arms.\n\nAs he held her, he couldn't resist doing a little teasing and said, \"Wow. I sure hope this new liver fixes whatever's wrong with your plumbing, because you've got the leakiest eyes I've ever...\"\n\nShe reached for a pillow and whacked him with it. In return, he grabbed the pillow, tossed in on the floor then pushed her down and lay on top of her, holding her wrists on the sofa above her head.\n\nAs she looked up into his eyes she thought about trying to explain why she cried so much. Instead she just said, \"I love you, Heath Thomas.\"\n\nHe knew she wanted to say something else so he waited.\n\n\"If...if something goes wrong tomorrow...\"\n\n\"Hey. Nothing's going to go wrong,\" he told her, knowing those words were as hollow as the one's he'd spoken to his mother.\n\n\"But...if it does, I just want you to know how much you mean to me, okay?\" she said, her eyes imploring and desperate for him to understand. \"And...you mean everything to me.\"",
        "\"I do know,\" he told her. \"I know because that's how I feel about you...sweetheart.\"\n\nHeath stroked her hair, smiled at her then said, \"In case you've forgotten since I last said it, I love you, too.\"\n\nThey kissed again then Heath sat up and told her it was about time for him to go.\n\n\"I know. I just don't want you to,\" Rachel told him.\n\n\"I don't want to go, but I need to,\" he told her, knowing she knew that, too. \"You need to rest.\"\n\n\"I guess a little beauty sleep couldn't hurt, huh?\" she said, trying to be funny.\n\n\"You are already more beautiful than any woman I've ever known, Rachel,\" he told her, all kidding aside.\n\nThey hugged and kissed one more time before getting up so Heath could say goodnight to her parents before Rachel walked him out to his car. There was precious little more to be said so they just stood there and held one another for several minutes before saying 'see you in the morning' and kissing each other one more time.\n\nNeither of them slept much that night as the kinds of thoughts anyone in their places would have ran through their minds. But more than anything was the unspoken fear that one of them might not survive leaving the other worse off than before they'd met.\n\nWere Heath not to make it, Rachel would have a new lease on life, but without Heath, a man she'd only just met but dearly loved, would life be worth living? And were she to die, would Heath lose all hope and possibly do the unthinkable?\n\nFour am finally came as both of them got out of bed and prepared to head to the hospital where the procedure would be performed. \n\nAt 4:45, both of them, and their parents, less Heath's father, all met in the lobby where they hugged and shook hands and wished the 'kids' the best of luck.\n\nHeath took Rachel aside and told her again there was nothing to worry about; that everything would be fine.\n\n\"I know,\" she bravely replied, hoping he couldn't somehow see the doubts that ran so deeply through her mind.\n\n\"I love you,\" she told him just when an RN came to tell them it was time.\n\nHeath kissed her softly and said, \"I love you, too, sweetheart.\"\n\nRachel managed not to cry this time as the RN took her arm and led her away from the man she loved while another nurse took Heath to a separate room.\n\nAs they changed into surgical gowns, both of them signed another ream of legal paperwork then were reminded the procedure would take between four and eight hours...depending. Depending on a whole lot of variables.\n\nThey weren't allowed to eat for 12 hours before the procedure, but neither of them had any appetite making that a moot point. It was all now a matter of waiting.\n\nJust before they were separately wheeled into their respective ORs, Heath asked if he could talk to Rachel again.\n\n\"I don't see why not,\" the attending physician said as he nodded to the nurse.\n\nRachel was beyond happy when she heard she had a visitor and that it was Heath. His gurney was pushed alongside hers and both of them reached for the other's hand.\n\n\"I had to see you one more time,\" Heath told her.\n\n\"Why? So you could make me cry again?\" she teased. She was already feeling good, but this time it was drug-induced.\n\n\"I really do love you,\" he told her.\n\nShe squeezed his hand and said, \"You're the first man who's not only said that to me but showed me how much he means it.\"\n\nRachel sat up a little and looked over at him.\n\n\"I love you, too.\"\n\nThe two nurses were both women, and one of them said, \"Okay, you two. If you don't stop, you're gonna make me cry!\"\n\n\"Sorry,\" Heath said. \"I had to tell her that one more time.\"\n\n\"It better not be the last time,\" Rachel told him as sternly as she could manage.\n\n\"It won't be. I promise,\" he told her.\n\n\"Okay, you love birds. We've gotta get this young man ready to go.\"\n\nRachel let go of his hand and felt his fingers slide away as the gurney began to move.\n\n\"He's very handsome,\" Rachel's nurse told her.\n\n\"He's...he's beautiful,\" Rachel told her as she drifted into a kind of pre-twilight as the preparatory medications really took hold, and that was the last thought she had before the anesthetist put her under.\n\nThe procedure began at 7am and didn't end until almost two o'clock that afternoon.\n\nHeath's father, who was strongly opposed to what his son was doing, nevertheless couldn't stand the pressure of waiting and took off work at noon. All four of them were on pins and needles when the doctor finally showed up to brief them a little after 2pm.\n\nHe looked at each of them then said, \"So far, so good.\"\n\nEveryone breathed a sigh of relief before he explained there were still many things that could still go wrong from infection to rejection.\n\n\"But as these things go, this was about as good as it gets.\"\n\nHe asked if there were any questions, and the only one they had was when they could see their children.\n\n\"I'd say sometime around four or five, maybe?\" he told them. \"But not before that, I'm afraid. And when you do go in, you'll need to wear sterile masks, gowns, and gloves to preclude any chance of infection. And, of course, that means no kissing, okay?\"\n\nAs he walked away, the women hugged and the men shook hands, and Heath's father had to turn away to prevent anyone from seeing him tearing up. The thought that his son had survived two tours in Afghanistan only to die on an operating table for something he didn't have to do had been eating him alive.\n\nBut now, after seeing Rachel's parents, he was able to put this in perspective a little better, and what caused him to be emotional was the realization that what his son had just done wasn't only an act of kindness. It was that, to be sure, but it was far more than just simple altruism. What Heath had done was nothing less than heroic. \n\nHis service had also been heroic, but this selfless act was 'above and beyond' any call of duty. So Jim Thomas stood there as tears silently streamed down his face pretending to decide what to get from a vending machine while the three other parents talked animatedly about the future of their children.\n\nThe one thing Heath's father didn't know, and couldn't understand, was that this donation was something his son HAD to do in order to reclaim his own life. His lack of understanding was, well\u2014understandable\u2014since no one who hadn't dealt with the unique horrors of PTSD could understand. Those who've been severely depressed could come close to understanding the hideous nature of this disorder, but beyond that, it was a kind of hell no outsider could appreciate.\n\nAs Jim's tears stopped, and when he was sure there was no trace of his loss of control remaining, he returned to the other three adults who were discussing what sounded like an impending marriage.\n\n\"What are you talking about?\" Jim asked, trying not to sound overly snide.\n\n\"Oh, well, Heath is...in love...with Rachel,\" Jan told him.\n\nJim snorted and said, \"The hell he is! The boy's not even 30 years old, and he just met her. How the hell can he be in love?\"\n\nRachel's parents got very quiet knowing he had a valid point. And yet they knew their daughter, and there was no doubt in their mind she'd fallen in love with this man's handsome, young son. She hadn't said those words to them, but they knew. And so did Heath's mother.\n\n\"We didn't date all that long, honey,\" his wife reminded him.\n\nHe started to argue the point when gratitude 'tapped him on the shoulder' again.\n\nHe ran his hand through his thinning gray hair and said, \"Well, it's his life.\"\n\n\"Can I buy you a cup of coffee, Jim?\" Brian asked.\n\nJim looked over at him then said, \"You know what? That sounds pretty good right about now.\"\n\nBy the time they were able to visit their 'kids', the two men had formed a bond of sorts. They weren't 'BFFs' and probably never would be, but there was a strong amount of mutual respect for them, and that was enough.\n\nThe first words out of both Rachel's and Heath's mouths were, \"How is...\" the other person.\n\n\"Fine, honey. Just fine,\" both were told.\n\nIn response to, \"How are you?\" both of them said, \"Happy. Very happy.\"\n\nIt was an agonizing 48 hours in the ICU for both of them before the new couple was allowed to see each other, and even then, there was no kissing allowed. But as Heath was wheeled over to Rachel's bed in recovery, he was able to hold her hand as they talked. And Heath was able to raise his head enough to see the woman he loved and smile at her.\n\n\"After seeing me like this, you probably feel very differently, huh?\" Rachel said, only half joking.\n\n\"I do,\" Heath told her with a warm smile. \"I love you even more.\"\n\nHe saw her blinking away tears, so Heath squeezed her hand and told her he'd come back a little later.\n\n\"Heath?\" she weakly called out.\n\nHe raised his eyebrows and waited.\n\n\"Thank you.\"\n\n\"No. Thank you,\" he told her as he smiled at her again.\n\nThe two of them spent the next week in the hospital as they recovered. Once Rachel could walk again, they performed heir mandatory walking by visiting the other person who was maybe 50 feet down the hall several times each day.\n\nAfter nine days in the hospital with no complications, they were discharged and sent home.\n\nBecause Rachel still had insurance, her total bill came to less than $5,000. Heath, however, had only the VA which didn't cover 'optional procedures', something he'd known all along. He'd never asked nor did he care about the cost, even though he'd been briefed on it as part of the in-take procedure when he filled out the stack of legal paperwork and again just before the surgery.\n\nHe did know there was a foundation that covered a huge chunk of donations made by living donors who were uninsured, but that still left Heath with a bill of around $170,000. He had no idea how he'd ever pay it off, but as long as Rachel was alive and well, that was the last thing on his mind. \n\nAnd almost as important to him was the fact that he was now virtually free of the mental agony that had held him in chains for so long, and he'd have paid any price for that kind of relief.\n\n\"Heath? Can you come here for a minute?\" his father said not long after he got home that first day out of the hospital.\n\n\"What's up, Dad?\" he asked as he slowly walked over to the desk where his father was sitting.\n\n\"Take a look,\" his dad said as he spun the computer monitor around.\n\nThe smile on his father's face initially concerned him, but his concerns disappeared the moment Heath looked at the computer screen. He was so moved by what he saw that he was speechless for nearly a minute.\n\n\"So, what do you think?\" his father finally asked, the smile still there.\n\n\"Dad. This...this is...incredible.\"\n\nThe GoFundMe page, with photos of Heath from childhood to Afghanistan and then in the hospital on a gurney giving a two thumbs up sign, were placed under a title that read, \"Marine War Hero Gives the Gift of Life: Please Consider Giving Back.\"\n\nThe amount raised in less than a week was nearly $200,000.\n\n\"There's a little left over in case, you know, you and this girl of yours get really serious.\"\n\nHeath fought back tears, but lost that war when he saw them in his father's eyes. The older man stood up and embraced his son, and said something he'd only said a time or two before.\n\n\"I love you, Son.\"\n\nHeath sobbed as he told his father, \"I love you, too, Dad.\"\n\nIt was at the 90-day mark that Dr. Denning told them they were both considered fully recovered. Heath's own liver had nearly regrown itself, and the 1/4 he'd given to Rachel was now twice that size and functioning quite well.\n\n\"Your odds of rejection are now down around 1%,\" the doctor told her as she and Heath sat in front of him holding hands. \"I'll need to see you once a month for six months, and after that, once every six months.\"\n\nAfter thanking him for the good news, Rachel hugged him and told him how grateful he was for all he'd done.\n\n\"Thank you, but I believe all this is due to the Good Samaritan standing next to you,\" he told her.\n\nRachel told him she agreed then, as she looked at Heath said, \"The two most precious gifts are life and love. And because of this wonderful, amazing man, I was blessed to receive both of them at the same time from the same person.\"\n\nHeath hammed it up and said in a southern drawl, \"Ah, shucks, ma'am. Tweren't nothin'!\"\n\nRachel put her arms around him, and in front of the doctor said, \"No. It wasn't nothing. It was...everything.\"\n\n*****\n\nThe two families got together often after meeting at the hospital, and they were all enjoying the 4th of July celebration at the Owens' house.\n\nAs they sat on the balcony watching the night sky explode with light, Heath took Rachel's hand. When the last remnants of the final explosion disappeared into the night sky, Heath stood up and asked if he could have everyone's attention.\n\nJan and Peggy looked at one another and within seconds began tearing up. They didn't need to wait for the formal proposal to know what was happening. Jim and Brian also knew and were both smiling as Heath got down on one knee and asked Rachel to marry him.\n\nShe'd cried so many times since learning she'd of the betrayal that there were no tears left to cry. In their place was a happiness that filled her heart with the kind of joy she'd only dreamed of before. So as the younger man she loved slid the beautiful diamond ring on her finger, a smile unlike any other spread across her pretty face.\n\nHeath helped her stand up, told her again how much he loved her, then kissed his beautiful fianc\u00e9 as their parents applauded...and cried.\n\nHeath accepted his future father-in-law's offer of help, and accepted a job with the company where he worked; a job that was more than adequate to raise a family on.\n\nThe happy couple married in September, and after making sure she was healthy enough, Heath and Rachel Thomas went to work on another job; that of creating a family.\n\nBy the time Rachel turned 40, she was holding the most beautiful baby she'd ever seen, a little girl they named Chloe Elizabeth Thomas.\n\nBoth Rachel and Heath, had, at some point, stopped believing in miracles. And yet, having experienced at least three of them themselves, they no longer had any doubt that miracles did indeed happen. \n\nHeath was no longer tormented by the memories of war, Rachel was alive, happy, and healthy, and they now had a beautiful child of their own\u2014all thanks to a Good Samaritan who'd willingly risked his life in order to give life to someone else."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/ptsd-and-the-good-samaritan"
}