{
    "title": "Sally's Small Breasts Ch. 02",
    "pages": [
        "The memory of that first date with Sally was a night I will cherish the rest of my life. Little did I know, our relationship was about to go to heights I'd never imagined. I had stumbled upon this incredibly confident sexy young vixen who, not only seemed ready to blossom but was also destined to change my sexual persona forever.\n\nBy telling Sally their stories and sexual exploits, her sisters had nurtured a sexual yearning that few 20-year old women have, and I was the lucky one destined to share her journey. \n\nFor weeks after our first date, we shared every evening together. Since my roommates were gone for the summer, we took advantage of the privacy. We rarely went out, we spent virtually every evening in bed exploring each other's body and trying anything and everything we could think of. We, for lack of a better phrase, were just in sync with each other. \n\nBut of all our sexual exploits, Sally was absolutely enamored with jacking me off and watching me cum all over myself, her body (usually her breasts) or straight into her face and mouth. She talked me into letting her shave my pubic hair so that my cock looked bigger but she especially liked the smoothness when she slicked me up with baby oil. \n\nWe had generally kept all of our fun to my apartment, taking advantage of my roommate's absence, that is, until my birthday!!\n\nI was fast asleep on that hot July morning when I was awakened by my doorbell. I tried to ignore it figuring it was someone looking for one of my roommates or someone at the wrong apartment. But the visitor was persistent. Always sleeping nude, I stumbled out of bed looking for some gym shorts and a T-shirt to throw on to answer the door. \n\nMuch to my surprise, it was Sally. We had enjoyed one of our sex-filled evenings the night before and we never mentioned getting together this morning.\n\n- Happy Birthday sleepy head!! Hurry up, put some shoes on.\n\n- Huh?? I was asleep.\n\n- C'mon, I made plans for your birthday! Let's go!!\n\n- Can I at least pee and brush my teeth?\n\n- Sure, but don't change, you're dressed perfectly for where we are going.\n\n- Where are we going?\n\n- It's a surprise, c'mon, hustle.\n\n- OK, give me 3 minutes.\n\nAs I was peeing, I couldn't help wonder, what was she up to? Where were we going in such a hurry?? Not that it really mattered, we always had fun whatever we did. But at 6:30 in the morning there was not much going on in town. It had to be casual though, she was wearing one of those tight athletic tops that accentuated how flat-chested she was, the exact kind of top she knew I loved admiring her breasts in. She was also wearing gym shorts and running shoes. \n\nFive minutes later, we were off.\n\n- So, why the hurry? Where's the fire?\n\n- Wouldn't you like to know!!\n\n- Hmmm, I hope it's in my favorite little spot!\n\n- How did you ever guess?\n\n- Just wishful thinking.\n\n- Did you sleep well last night?\n\n- Uh, yeah, you wore me out, I slept like a baby.\n\n- Well, I hope my not-so-little friend is well rested!!\n\n- Oh, you know you don't have to worry about that!\n\nShe pulled into the parking lot of the town's biggest public park.\n\n- Ready for a birthday breakfast picnic?\n\n- Sure, what's on the menu?\n\n- You'll see!!\n\nWe hopped out of the car and she popped the trunk.\n\n- You grab the cooler and I'll get the blanket and picnic basket.\n\n- I've only been to this park once.\n\n- Don't worry, I know the perfect spot for us.\n\n- OK, right behind you!\n\nWith her leading the way, trying our best to hold hands despite the load we were both carrying, we finally reached her strategic spot. It was toward the middle of the park, in a little meadow with trees on three sides with the one opening featuring a pleasant view over a pond. We were away from the bike and running paths that went around the perimeter of the park but there was one walking path that crossed between our spot and the pond.\n\n- Here we are, my perfect little corner of the park.\n\n- Yes it is, how did you find this spot?\n\n- My parents used to bring us here to feed the ducks. We came to this side because most people stay on the other side of the pond. My parents would sit here while my sisters and I would run around and play.\n\n- So you have good memories of this place.\n\n- Yes I do, and I wanted to share it with you and make some new memories.\n\nWe spread out the blanket and started to unpack the goodies Sally packed for us. Sally pulled some paper plates, plastic-ware and plastic champagne flutes out of the picnic basket. When I opened the cooler I found a bottle of champagne, some orange juice and a Tupperware container of fruit.\n\n- MMMM, mimosas!!\n\n- I hope you like them!\n\n- I certainly do, but you're about 6 months short of being able to buy champagne!\n\n- Sshh, don't tell anyone. Karen bought it for me, just for you and your birthday. \n\n- Well, tell her I said 'Thank you!'\n\nAs we got settled, I noticed there was very little foot traffic on the path. Only occasionally did anyone wander by. Sally filled the plates with fruit while I poured the mimosas. We each settled down to eat and drink, sitting Indian style facing each other. With a sparkle in her eye, she reached toward me to 'clink' our plastic champagne flutes. \n\n- Happy Birthday!!\n\n- Thank you so much. This is a wonderful surprise!\n\nAs time went by, we were just chatting and enjoying the refreshments, I couldn't help but notice with just the natural movements of sitting on the blanket, the seam of Sally's gym shorts was nestling up into the crack of her pussy giving her a great camel-toe. The outline of her pussy was having an effect on me. \n\n- Hmmm, you see something you like!!\n\nSally had noticed that my cock had grown out the opening of my gym shorts. I had dressed so hastily that I hadn't put on any underwear, so my cock was free to roam.\n\n- Well, now that you mention it, yeah, I was just wondering if you were wearing anything under those shorts? I like how you look in those.\n\n- Of course I'm not wearing any panties, and it looks like you're not wearing any either.\n\n- No, I'm not. It's just not as discrete with me though!!\n\n- Not that there's anything wrong with that!!\n\nSally reached into the picnic basket and pulled out a bottle of baby oil.\n\n- OK, big boy, ready for your present?\n\n- You got me some baby oil for my birthday!\n\n- No, I'm going to give you the memory of a lifetime for your birthday!\n\nWith that, Sally crawled beside me on the blanket and started kissing me as we rolled backward to lie down on the blanket. Very quickly her hand was up the leg opening of my shorts grabbing my cock and pulling it out even further. I countered trying to reach into her shorts as well.\n\n- Not so fast, Romeo. It's your birthday so just lay back, relax and enjoy.\n\nSally propped up on an elbow and with her hand that had been on my cock, she started pulling the waistband of my shorts down.\n\n- What are you doing, we're outside, someone will see if you take my shorts off.\n\n- Let's hope they enjoy the view!\n\nShe got my shorts all the way off and my cock was standing straight up at full attention. She sprinkled droplets of baby oil all over by cock and balls and started to rub it in. I felt my eyes roll to the back of my head as her stimulation coupled with being exposed outdoors for the first time was putting me on overload.\n\n- I think you like being outside with your cock out! \n\n- Oh my God ..............\n\n- I just love to slick you up. This is why I wanted to shave you smooth last night, just so you would gleam in the sunshine. See how big you are??\n\n- Oh Sally ....\n\n- The head of your cock looks like it wants to explode, but I'm not going to let you, not just yet!! This is more fun than I was hoping!!\n\nSally got up from laying beside me and got between my legs, crouching on her knees allowing her freedom to use both hands. With one hand she was stroking my cock up and down and with the other hand she alternated from cupping my balls to sliding her thumb down to put pressure on my butthole. Sally had jacked me off many times over the previous month, but never had it felt quite like this, the fact that she had planned this just for me as a birthday surprise not to mention the excitement of being outside. \n\n- I believe we have an audience!!\n\n- Huh .....\n\nI glanced toward the walking path to see two women, maybe in their early 30's, who looked to be on their morning walk. They were absolutely mesmerized at the sight of Sally jerking me off.\n\n- Look at them\n\n- They love looking at your cock\n\n- They wish they could come and stroke you\n\n- But they can't, your cock is all mine\n\n- Look at me, watch me beat your cock\n\n- You love that, don't you?\n\n- Now look at them, you love them seeing your huge cock, don't you?\n\n- Have you ever had 3 women staring at your cock at the same time?\n\n- You want to explode for them, don't you?\n\n- You see the one on the right, she has her hand in her pants\n\n- She's so turned on seeing your cock she's rubbing her pussy\n\n- Don't you wish she would come over here and let you smell her fingers?\n\n- You love to smell my pussy, I bet you'd like to smell hers too\n\n- Look at her hand, she beating her clit fast now, she wants to cum\n\n- You want to cum at the same time with her, don't you??\n\n- C'mon, stare into her eyes, show her how much it turns you on that she's watching\n\n- Her pleasure is watching me jack off your cock\n\n- She wants to see you explode\n\n- Where do you want to cum??\n\n- Oh, I know .....\n\nFor just a second, Sally stopped jacking me off. She pulled her top over her head exposing her breasts.\n\n- You want to cum on my breasts, don't you?\n\n- You love my itty bitty titties, don't you?\n\n- You love my nipples that stick out almost an inch, don't you?\n\n- Does it turn you on that they can see my breasts?\n\n- Do you think they would like to see my shaved pussy?\n\n- She's rubbing her pussy even harder now\n\n- I think she likes my breasts, she has small ones too\n\n- Do you think she shaves her pussy?\n\n- She's beating it real hard\n\n- Don't you wish she would pull her pants down so we could see her fingers on her pussy.\n\n- She's just waiting for you to cum all over my breasts\n\n- She wants you to cum on her breasts\n\n- But you can't, I get all your cum\n\n- OK, you ready?? \n\n- I know you're ready, your cock is harder than I've ever felt it\n\n- And I know just the thing to make you cum\n\n- You like it when I stick my thumb up your butt, don't you?\n\n- Look at me now\n\n- Watch me beat your cock\n\n- You love my thumb up your butt\n\n- You love it that she's watching\n\n- You love it that she's so turned on that she's beating her pussy\n\n- You love my itty bitty titties\n\n- You want to cum all over them, don't you?\n\n- You love to lick my pussy after you cum in me\n\n- Will you lick your cum off my nipples?\n\n- Are you ready, I think you are!\n\n- Look at your cock, it's HUGE!\n\n- Are you ready, I know you are!\n\n- OK, look me in the eye\n\n- I want to see you passion\n\n- I want you to see yourself explode on my breasts\n\n- Are you ready, look at my nipples, they are sticking out an inch\n\n- I want you to lick my nipples after you cum on them\n\n- Are you ready? I KNOW you're ready\n\n- OK NOW, Cum on my breasts, RIGHT NOW!!\n\nWith those final words she jacked me so hard I thought she was going to yank my cock right off my body and I exploded onto her chest with the most intense orgasm I had ever felt. I bet I shot 10 ropes on her chest and right in the middle of it, Sally and I both heard the moan of pleasure coming from the woman on the walking path beating her pussy. We both glanced her way to see that she had fallen to her knees exhausted after her orgasm. Her walking partner stared alternating between us and her friend, mouth agape. Sally smiled at them both while rubbing my cum all over her chest. Letting go of my cock, she climbed up my body and offered my mouth her nipple. I gladly tasted my own cum from her nipple.\n\nThat summer with Sally was the most unbelievable 12 months of sex in my life. I graduated from college and moved away with my first job and Sally moved to NY to live with her oldest sister. During those 12 months, Sally and I each broadened our sexual horizons with: phone sex, mutual masturbation, shaved genitalia, oral sex, voyeurism and exhibitionism. The joy of those experiences with Sally forever defined my preferences in women and sex. Since Sally, I have exclusively dated blonde, small-breasted women including the two women I married. In fact, with my second wife we both experienced love at first sight. We were both recently divorced, she walked into a party, our eyes met and the electricity was immediately there and coincidently enough, she is a 5'3 blonde with perfect little perky 34a breasts, she's 46 and her breasts look as if she's 18, absolutely no sagging topped with prominent pink nipples. \n\nShe feels better about her breasts now than at any time in her life. She said the previous men in her life always made her feel inadequate because of her small breasts, now that she has found a man who loves and appreciates them, she feels downright sexy. Shortly after we were married, I shaved her pussy. As soon as she experienced that new sensation, she never wanted hair down there again. She has had three laser treatments so she is well on her way to being perfectly smooth forever. She can't believe she never tried shaving before, she loves the look and the feel, she told me she's touched her pussy more in the past two years than she did in the previous 15 years. Her sexual confidence is at an all-time high and now mutual masturbation, oral sex and exhibitionism are major parts of our sex life. My wife is very thankful that she is the beneficiary of who Sally molded me into sexually those 20+ years ago. \n\nAnd for all you small-breasted women, have confidence, be proud of them and display them. I promise you, there are plenty of guys out here who appreciate and actually prefer small breasts. You are the ones that turn our heads!!"
    ],
    "authorname": "kingerob",
    "tags": [
        "public masturbation",
        "birthday",
        "small breasts"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/sallys-small-breasts-ch-02"
}