{
    "title": "Love, the Second Time Around",
    "pages": [
        "Sorry for the delay between stories, but . . . well, I'd make a bunch of excuses, but it boils down to me being a slacker. \n\nAnyway, this is my latest chapter in the ongoing tale of one of my favourite characters, Amberle. It picks up after the events of Tapestry, Chapter 1. I had thought to use it to continue the Tapestry series, but I think those stories have a life of their own and I'll continue them at a later date. \n\nIn a bit of shameless cross-promotion, if you haven't read Lost Love or the McKayla's Miracle series, I suggest you start there. Characters from some of my other stories make appearances here, too, so I'll leave it to you to find them. \n\nAs with many of my stories, this one is long on character and short on sex, so if you're looking for a quick stroke, this is the wrong story for you. Also, as a word of warning, this one is written in the first person from both Amberle and Nichole's points of view, and my intent isn't to cause confusion. \n\nI love to hear from readers, so please leave a comment or send me a note if you are so inclined. \n\nEnjoy! \n\n********************** \n\nNichole \n\nLooking back, the first time I saw her, I think I knew we were going to fall in love. \n\nIt wasn't the heavens opening up with a chorus of angels, or even that moment when you realise that your one true love is looking back at you. It was a simple smile. The sad, simple smile we both share. \n\nI remember the exact moment my first husband, Michael, and I fell in love. We grew up together; literally next door to one another. Our fathers owned a business together and we were raised in one, big loving family. I had just returned from studying abroad in China and ran into Michael at the company picnic. \n\nHe was so handsome, and for the first time, I saw him as something other than an older brother in our big extended \"family\". Our eyes met and from that moment on, we were attached at the hip. We left the picnic and went to dinner, absorbed in our own little blissful world. That night, we went back to his apartment and made love as the moonlight shone through the windows. \n\nMichael was killed in a car accident not even three years later, and when he died in my arms, a part of me died along with him. \n\nMany years and two husbands later, I met Amberle while on a beach trip with a mutual friend. \n\nShe was also widowed; her for almost six years, me for just over fifteen. \n\nNeither of us were looking for love, or even companionship. \n\nI remember thinking how pretty she was. Amberle is neither drop-dead gorgeous, nor is she simply plain. She is short and curvy in all the right places, with a full head of wavy, sandy-blond hair. What struck me was that she doesn't know how beautiful she is, and it seems that no matter how many times I tell her, she doesn't believe me. Of course, her late wife was the kind of woman whose beauty would launch a thousand ships, but Amberle is second to none in my book. \n\nAnd her ass is amazing. \n\nShe had never remarried or even dated seriously after her wife died, her heartbreak was so great. There were six of us together for a girls' weekend out, and Amberle and I spent the long weekend sharing a room at a beach house purely by chance. \n\nThe two of us talked candidly and openly about our mutual experiences in losing our spouses, and for the first time in my life, I thought that I had finally met someone who knew exactly how I felt. Don't get me wrong; I know people lose their spouses all the time. My mother has outlived my father by half a dozen years, for instance. \n\nBut they had a lifetime together. They raised five children, built a successful business and enjoyed retirement as doting grandparents. It wasn't until Dad was in his 80s that the Parkinson's Disease really began to take its toll, and finally took his life. \n\nAmberle and I both had our spouses taken from us; mine in a car accident, hers from cancer. I envy that she and McKayla had a daughter; Michael and I were childless. \n\nI only got three years with the love of my life, but I wouldn't trade those three years for anything, and on some nights, I wished God had taken me along with Michael. \n\nSo when Amberle and I started our relationship, we were both on the same page. And I think that's why we were destined to fall in love. \n\nI used to believe in soulmates . . . at least, until mine was gone in an instant. I know Amberle did, too. We both believe the loves of our lives are watching us from Heaven, and we both think that our spouses want us to be happy. But we also both believe that no matter how much we love one another, our love will never be as passionate and as complete as it was with our first loves. \n\nAnd we're both okay with that. \n\nSince Michael's death, I have been married twice, the first time to someone who deserved better than I could give him at the time, and the second to a man who didn't deserve me. My love for Amberle caught me completely off guard, but once it came to fruition, I couldn't imagine not loving her. \n\nShe doesn't need me, either emotionally or financially, just as I don't need her. And that's a good place to be. \n\nIn the five months since we \"discovered\" one another, our relationship progressed quickly. I've gone to see her, she's come to see me, and we've gone away for long, romantic weekends together. \n\nI don't think that that in my wildest dreams that I ever would have thought that I could have fallen in love with a women, but our attraction isn't strictly sexual, but nor is it platonic. It's just that being with Amberle feels so . . . so . . . right. \n\n********************** \n\nShe rolled over lazily in the big bed in the room Michael and I once shared. The sun shone through from behind the curtains. I snuggled up to her, our naked bodies pressed together under the soft down comforter. \n\nWe cuddle a lot, I think just to feel close to one another. \n\nEven though Amberle is four years older than I am, you couldn't tell by looking. In fact, I didn't think she was a day over thirty-five when we met. But she's forty-four, and in fine shape. \n\nAnd I mean fine. \n\nHer flight came in late the night before, and I picked her up at the airport using the same car service I frequent when on business. It was going to be our first meeting as a couple in my social circle. \n\nMy \"coming out\" party, so to speak. \n\nI swore my younger sister to secrecy before telling her that I was seeing a woman. My mother didn't know. My son would be coming back from his father's later that afternoon and we would talk to him first, then the rest of my family. \n\nThe butterflies in my stomach were working overtime, and I had barely slept, but I knew everything was going to be okay. My family was close, not only with each other, but with Michael's family as well. The business was chugging along with my sister and brother-in-law at the helm. Most of us still live in New York. \n\nAt first, I was apprehensive about introducing my new love interest to them, not because she was a woman, but because my track record since Michael's death wasn't the greatest. There were eight kids between our two families, and in reality, we are all one big family. Our parents made sure of that. \n\nMany years ago, Michael's younger brother Rhett came out as gay. There was a collective shrug among us, since we all basically knew it beginning when he was about eleven years old. Even my grandparents, who were as traditional as they came, accepted him for who he was because we were raised that family comes first. So I knew it wouldn't be any problem when I showed up with a beautiful woman on my arm. \n\nThe real problem was the shadow cast by my third husband. \n\nEveryone could see it but me. \n\nI don't think he is a bad or malicious person. But he has a problem with gambling and with credit. Even now, I don't believe he started out after my money, but he sure didn't have any problem treating me like his ATM. \n\nThankfully, I found out about his financial problems before he could do too much damage, and our marriage was annulled after only a few months. \n\nMy brothers and sisters tried to warn me, but I didn't listen. I fell for him quickly and got married without doing my due diligence. I worried that my family would think I was jumping into another relationship. Our split was quick and mostly without drama, but my family never really liked or trusted him, and the element of fraud had to be introduced into our marriage for me to see it. \n\nTo have two failed marriages after one that seemed to be made in Heaven was disconcerting, but I knew Amberle wasn't after my money. And we were no longer twenty-seven year olds who didn't know any better. \n\nAs we lay in bed together, I rehearsed the speech I had prepared to introduce Amberle to son, my mother , my siblings, and even my ex-husband. I went over every contingency in my mind. I won every argument I thought might come up. \n\nAnd I knew that when it was time to actually say something, I would draw a complete blank. \n\nYet, as I held Amberle in my arms, I knew it would all be okay. \n\n********************** \n\nAmberle \n\nIf my life with McKayla taught me anything, it was that sometimes, you just have to follow your heart. \n\nIn the six years after her death, I sublimated all of my energy and focus into raising our daughter. Maureen was\u2014and still is\u2014my joy and my light. There is no one in this world I could ever love more, and that includes McKayla. \n\nI was probably smothering to her, but she is the closest connection I still have with my late wife, and she took it well (mostly). They walk and talk the same way. Our daughter adopted many of her mom's mannerisms. And a part of me never wants to lose that. \n\nBut life goes on. Maureen is a sophomore at Duke in the pre-med program. Our daughter is the second smartest person I have ever met. She told me that she's going to cure cancer. And I believe her. \n\nThe first year she was away was hard. Our house is quiet now. Too quiet. So I work a little bit. I volunteer for the various charities McKayla and I championed. \n\nHave I mentioned that I'm 44 years old and essentially retired? It's a pretty sweet gig. \n\nLooking back now, I realise that I spent the six years after McKayla died pitying myself. Not in a self-destructive way, but I couldn't bring myself to play the hand life dealt me. There was a part of me that was afraid of leaving my life with McKayla behind. \n\nWhat I didn't realise is that life was leaving me behind. I went on a couple of dates, mostly out of courtesy to whomever it was that was trying to set me up. My daughter, my brother, my sister and even McKayla's parents all tried to convince me to stop seeing my wife's death as a paralytic event and move into the next chapter of my life. \n\nBut I didn't. \n\nSo when my dear friend Melanie Westcott introduced me to her friend Nichole Galloway, I was blindsided. \n\nI wouldn't say that I fell in love with her immediately, but very soon after we met, I felt a connection to her. It was more than just the fact that we were both widowed. Even from our first conversations, I felt like I had known her forever. \n\nShe is friendly and engaging. Nichole can have the brusque, New York attitude, but can also be caring and generous, sometimes swinging between those poles with less than a moment's notice. \n\nAnd she's beautiful. \n\nGrowing up, she played sports and is still in great shape. Her body is compact and strong. She is not the voluptuous goddess that McKayla was, but she's close. \n\nDespite our different backgrounds, we have a lot in common; we share the same political views, we share many of the same interests, and we both have a low tolerance for bullshit. \n\nAfter that weekend at the beach with Melanie and some of our other mutual friends, our relationship progressed quickly and I soon found myself missing her touch. Thank goodness for Facetime and broadband internet! \n\nI love that I don't have to worry about her being after my money. I love that she understands that I'll always celebrate my wedding anniversary to McKayla. I love that when I burst into tears because I can't fucking open a goddam jar of pickles, she takes me in her arms and holds me without saying a word. I love that we let each other be the people we are without strings or conditions or expectations. \n\nAnd most of all, once I admitted it to myself, I love her. \n\n********************** \n\nI woke up with Nichole pressed up against me. \n\nWe were in her apartment on my first morning in New York with her. She was now the landlord for the whole building, having bought it after being awarded a substantial amount of money in a wrongful death lawsuit following her husband's death. \n\nShe still lives in the apartment she shared with Michael; like me, she couldn't bear to give up the home she had made with the love of her life. It occupies half of the fourth floor in a building along Central Park West, just north of Columbus Circle. At one time, the building had been a warehouse of some kind, but that was long gone, replaced as residential and commercial space. \n\nThere are retail shops, restaurants and offices on the first two floors, and high-end luxury apartments on the other five. There is a small staff in the building, with a superintendent, doorman, and maintenance crew. \n\nSunlight shone into the room from behind the blinds. The hustle and bustle of the city had already started. In my house, there is the constant crash of the waves upon the shore. Here, it's a different noise\u2014the sounds of the street below\u2014but still constant. \n\nNichole's arm was draped around me, absently clutching my breast. We were both naked. \n\nI love the feel of her skin against mine. Her touch is soft and gentle. She is still a little tentative, as if she is just figuring out the whole girl-girl thing. But she's a fast learner, and truly, I'm content just to snuggle with her all the time. \n\nFrom the beginning of our relationship, I wanted to make sure that we weren't rushing in to things. After all, as far as anyone knew, she was still straight as an arrow. Hell, I may still be straight as an arrow; I'm not sure that McKayla actually turned me gay as much as she just made me fall in love with her. \n\nBoth of us still find men attractive. Both of us are very feminine and we like girly things. \n\nYet there we were together. We seemed to fit together naturally. Either spooned up against one another or lounging around on the couch. \n\nAt first, I was worried about introducing Nichole to my family, but Maureen very quickly figured out that I was starting a relationship and McKayla's parents were openly supportive of me dating again. When they conspired with my good friends Kevin and Melanie Westcott to celebrate my anniversary, they arranged to have Nichole just \"show up\" on me. \n\nI was surprised and a little angry that they sprang her on my party, but I was also relieved that Nichole's introduction had been taken care of without me. \n\nSo as we planned my first visit with her family, I told her that I wanted to meet with her 9 year-old son first, then with her mother and siblings. I wanted to hold off on meeting Michael's family, but Nichole told me that their families were so close that his family was essentially her family and no amount of pleading could change that. \n\nAfter a night with her flock, she was hosting a party downstairs with her friends so I could get to see how her life was. \n\nI rolled over on to my back and her head fell on to my shoulder. I kissed her gently and she smiled. Her eyes fluttered open. \n\n\"Good morning, sleepyhead,\" I whispered. Her hand reached over and brushed the hair out of my eyes. \n\n\"Do we have to get up?\" she yawned. \n\nAll I could do was smile. Her body pressed against mine. A chill ran from my head to my toes as her fingertips traced soft circles around my belly and breasts. \n\nWe kissed again. That soft, wonderful, unhurried kiss promising great things to come. \n\n\"Let's just stay in bed all day.\" Nichole nuzzled up to me, suckling on my earlobe and neck. My body shuddered. \n\nHer hand cupped my breast and squeezed gently. My nipples hardened instantly. \n\nI started to roll over to face her, but she pushed me back. \n\nThe first times McKayla and I were together, I was very passive. I was afraid of doing something wrong. \n\nNichole was the complete opposite. She was very aggressive and often initiated our sexual encounters. Where I was tentative in my newfound lesbianism all those years ago, she seemed be embrace this side of her sexuality. \n\nMy arms wrapped around her and I pulled her to me. Our breasts pressed together. \n\nWhen I ran my fingernails down her back, she bit her lip to stifle a scream. \n\nOur foreheads brushed together and she looked into my eyes. Hers shone with desire. \n\n\"I love it when you look at me that way,\" I whispered. \n\n\"What way?\" \n\n\"The look you have right now.\" My hand caressed her cheek. She turned and took my fingertips between her lips and sucked. \"The look like you're going to eat me alive.\" \n\n\"Oh, I'm going to eat you alright!\" We laughed and I once again held her close. \n\nWe kissed again eagerly. Our tongues intertwined. The hair on the back of my neck stood up when she pinched both of my nipples at the same time. \n\nNichole pressed her body against mine. I melted into the plush mattress and pulled her close. We stayed like that for a long time, exploring one another with our hands. With our lips. \n\nShe left a trail of soft kisses across my cheek and down my neck. \n\nI pushed my chest out as her lips enveloped my nipples, gently tugging on one. Then the other. \n\nMy hips began to reflexively buck up against her and she pushed back against me. I sighed as she pressed me back into the bed. \n\nHer lips wove a cold trail of kisses down my belly. I shivered with delight. \n\nShe pressed her tongue against my sex and I bit my lip to keep from crying out. Her tongue began to glide over my clit and labia, never stopping. \n\nPass after pass sent tingles up and down my body until my hands grasped at her hair, as if to pull her face into my pussy. Nichole worked my clit over, gently making love to me with her lips and tongue until I screamed and begged for release. \n\nWhen the cum finally hit me, I threw myself back into the plush pillows as the room began to spin. She never let up, until I blacked out. \n\nMy eyes fluttered open to see her looking down at me, her crooked smile promising both comfort and mischief. \n\nI fell back asleep into the warmth of her embrace. \n\n********************** \n\nNichole \n\nI paced from the kitchen to the living room and back. Again. Then to the bedroom, and back by the foyer. And across the kitchen again. \n\nAmberle sat on the couch, flashing me an amused smile. If she was nervous, she certainly didn't show it. \n\nStephen would be coming home soon, and then it would be off to introduce my girlfriend to the rest of my family. At the beginning of my whirlwind romance with Amberle, I knew that one day I would have to introduce her to my son and my family. It just never crossed my mind that it would be this hard. \n\nI had some experience with this before. My second husband and I divorced a couple of years after Stephen was born. I didn't date a lot, but when I did, I tried to make sure that my son was blissfully unaware of my activities. Still, when I met the man who became my third husband, I had to introduce him to everyone. \n\nHe was always polite and charming, so that wasn't the issue. I just didn't want my family to disapprove of my choice of lovers and spouses. Stephen liked him, though, and that was important to me. My sister Emily had a bad feeling about my third husband, and it turns out she was right. ",
        "I stared out the window, watching the street below. The same scenario was playing through my mind again. Only now instead of introducing another man to my family, I was coming out as a lesbian and introducing my new girlfriend to my family. \n\nOne thing I had going for me was that money wasn't an issue with Amberle. She was financially secure, and in fact, was worth more than I was. We were also older now; as forty-something women, I think we were both over the bullshit that dominated our younger lives. We'd discussed our finances, our children and our living arrangements. Nothing was written in stone, but the foundation of our relationship was settling into a nice comfort zone. \n\nChewing on my lip, I heard Amberle stand up and cross the room. I felt the warm press of her body against me. Her arms wrapped around my waist, and she rested her head on my shoulder. I settled back into her embrace; her touch seemed to calm my rapidly-beating heart. \n\n\"Why didn't you talk me out of this?\" I asked absently. \n\n\"I tried,\" she laughed. \"But you kept calling me back.\" \n\nNeither of us spoke for a long moment. \n\n\"Relax, sweetheart,\" Amberle whispered soothingly in my ear. \"Everything's going to be fine.\" \n\nThose were the words I needed to hear. When we were first discussing her coming to see me and meet the craziness that is my family, she suggested that I first tell them that I was seeing a woman\u2014to come out first\u2014and then introduce her later. I knew they'd want to meet her immediately, which is why we were doing it this way. I also didn't want to have this conversation more than once. \n\nNow I was having second thoughts. \n\nI wasn't worried about my family reacting negatively to my sudden lesbianism. New York, for all its faults, is a diverse place, and homophobia is bad for business. Plus, our family knew that the world didn't end when some of our closest friends\u2014and little brother\u2014came out of the closet. \n\nThe touch of her lips against the back of my neck was calming. And exciting, at the same time. If that makes any sense. \n\nOur fingers intertwined and she nibbled just behind my ear, in that one spot that makes me crazy. \n\nI had to bite my lip to stifle a moan, and closed my eyes, as if to will away the tension. \n\nWhen her hand cupped my breast, I jumped slightly as the space between my legs suddenly became very slick. \n\nMy pulse raced. My breath quickened. \n\nHer lips left a wet, sloppy trail down across my shoulder. Without warning, she blew a stream of cold air across my skin, sending a chill from my head to toes. \n\nJust as I was about to turn and kiss her, I heard Stephen's key hit the lock on the front door. \n\nAmberle gave my tit a firm squeeze, smacked me playfully across the backside and giggled. \n\n\"Bitch,\" I laughed as she wiggled free of my grasp. \n\n\"Your bitch,\" she replied with a wink, before retreating back into my bedroom, as we had discussed. \n\nStephen stepped inside from the hallway and was shedding his winter coat, mittens, scarf and boots by the closet. As far as Januarys go, this one was pretty mild with only sprinklings of snow instead of the blizzards that occasionally blow through. \n\nHis father held his backpack and some other things from school. I gave both a quick hug. Usually Ethan and I have a week on/week off schedule for our son, but over Christmas, he asked to have Stephen for a couple of extra days while they went skiing up in the Adirondacks, so I was getting him back early, which worked out nicely for me. \n\nThe first couple of years after our divorce, my ex-husband and I weren't very pleasant to each other. Both of us were hurt and angry, sometimes not even at the other, but we took out our frustrations in ugly ways. Looking back, that's one chapter in my life of which I'm definitely not proud. \n\nWhat got us through the nasty stretches was our mutual devotion and love for our son. Ethan is many things, but a bad father is not one of them. He has always been there for Stephen, and he never tried to use him to get to me. \n\nOver the last few years, we've become friends again, and put aside most of the things we wish we could take back. \n\nEthan re-married, and his wife is pretty good, as far as stepmoms go. They also live on the Upper West Side, just past the Museum of Natural History. We exchanged small talk and caught up on what was going on in Stephen's life, specifically the part where his grades were lower than what his father and I expected. \n\nI will also say that Ethan has always gone out of his way to back up the decisions I made when it came to our son, even if he didn't agree with them, and I've always tried to do the same for him. Even before our divorce, we had an unspoken rule that we would never fight in front of Stephen and that we'd put forth a united front when dealing with any matters that involved the three of us, whether it was the time he accidentally lit a Persian rug on fire, when we were first dealing with his dyslexia, or the first time he tried to play one of us off against the other to get something he wanted. \n\nIt helps that both of us always had good jobs\u2014Ethan in architecture, me in my real estate ventures\u2014so money wasn't really an issue that we fought over a lot. Mostly it was my emotional unavailability and his not being able to keep his dick in his pants. \n\nWith our business concluded, Stephen gave his dad a hug and kiss goodbye, and then we settled into our home. \n\n\"Remember when I told you that we were having company this weekend?\" I started. \n\n\"Yeah.\" \n\nWe left his things in the foyer and walked back through the kitchen and into the sitting area that overlooked Central Park West through the big bay windows. I led him to one of the couches and motioned for him to sit. \n\n\"My friend's name is Amberle,\" I said as my lover came out of the bedroom to join us. I watched my son's face with great interest as he gave my girlfriend the once-over. He scooted over, so I could sit next to him, and Amberle took a seat in the plush chair across from us. \"Amberle, this is my son, Stephen.\" \n\n\"It's nice to meet you,\" she smiled. \"I've heard so much about you.\" \n\n\"Stephen,\" I started, but had to pause, my mind suddenly drawing a blank. \"I\u2014\" \n\n\"You're dating, aren't you, Mom?\" \n\nMy jaw hit the floor. \n\nAmberle's smile got wider and she had to stifle a laugh. Apparently, me being speechless is funny. \n\n\"Yes . . . yes, we are,\" I stammered. \n\n\"Is that why everyone is coming over for dinner tonight?\" \n\nI'll say this about my son: There are some days when he'd lose his brain if it wasn't locked inside his skull, and on others, he's the smartest kid in the world. \n\n\"Um . . . yes.\" \n\n\"Does this mean you're a lesbo, Mom?\" \n\nThis time, Amberle couldn't help herself, and burst out laughing. After a second, she composed herself. \n\n\"Sorry,\" she tried to cover up her false sincerity. \n\n\"It means I'm seeing another woman,\" I said once I found the words. \"And it's 'lesbian', Stephen, not 'lesbo'.\" \n\n\"Okay,\" he said, then he turned to Amberle. \"Do you have any kids?\" \n\n\"I do,\" Amberle replied. \"My daughter Maureen is nineteen years old.\" \n\n\"Were you married before?\" \n\n\"Yes, my wife died a long time ago.\" Clearly she had thought far enough ahead to come up with answers to some of the questions my son and family might ask. \n\n\"How could you have children if you're gay?\" \n\n\"My wife and I wanted to have a child, and so we found someone to help us have a baby.\" I knew that wasn't entirely true, but it would pass muster with my nine year-old son. \n\n\"Can I meet her?\" \n\n\"Maybe one day,\" Amberle replied patiently. \"When it warms up, maybe you guys can come visit me at my house at the beach.\" \n\n\"That sounds fun,\" he said simply. Then, being the fickle pre-adolescent that he is, Stephen changed the subject. \"Can we get something to eat? I'm hungry.\" \n\n\"Of course we can.\" I breathed a sigh of relief. This had gone much better than I had anticipated, although I suspected that he and I would have a long talk between the two of us, and that my coming out to him would take a while for him to fully process. \n\nThe three of us spent the next couple of hours making lunch and getting to know one another in this new dynamic. After an initial bout of shyness, he seemed to open up to Amberle, even taking her back to his room to play on the Wii and show off his collection of Star Wars Legos. \n\nI hoped that my next coming out would go as smoothly. \n\n************************* \n\nAmberle \n\nThe prospect of meeting Nichole's family was less daunting than having her meet mine. Maybe it's because I've been \"out\" for twenty years. Maybe it's because I'm at the point in my life when I don't give a damn what other people think about my lifestyle. Maybe it's because over the last five months, I've come to terms with my wife's death and am finally ready to live the rest of my life without being haunted by my past. \n\nHer son seemed to receive me well. At least for our first meeting, he was polite and eager to get me to play with him. He asked me a few questions about my life, but we mostly played with his vast collection of toys, only to be shooed out of the kitchen as Nichole began cooking dinner when our Nerf gun battle spilled out of the play area. \n\n\"Stephen! Clean up your mess,\" Nichole called after a little while longer. \"I need Amberle to help me make dinner.\" \n\nMy girlfriend had already opened up the wine when there as a familial knock on the door just before it opened. \n\nThree smiling faces greeted me. Two I only recognised from pictures around Nichole's apartment. The third was my daughter. \n\n\"Surprise, Mom!\" Maureen laughed, having once again pulled one over on me. I gave her a puzzled hug. \n\n\"You must be Amberle,\" one of the other women said. \"I'm Melissa, the prettiest of the sisters.\" \n\n\"And I'm Emily, the highest-ranking,\" the second new face grinned. Both gave me warm, friendly hugs after setting bags of groceries down on the counter. My daughter wheeled her small suitcase to an out of the way corner of the kitchen. \n\n\"How did\u2014\" my voice trailed off before I gave up. \n\n\"We're all on Facebook, Mom.\" Apparently, my daughter was getting quite good at surprising me. \n\n\"It's nice to meet you,\" Emily said. Nichole was the middle of five children, behind Nathan and Emily, and older than James and Melissa. Michael was the oldest of three children, and Rhett and Courtney were coming later. \n\n\"Did you know that Emily is a rocket scientist?\" Maureen asked me. \n\n\"That's 'ballistic missile engineer',\" she corrected playfully. Nichole bragged a lot on her siblings, mostly because they were all very good at what they did. In her \"other\" life, she was Lieutenant-Colonel Emily Chittum-Galloway of the United States Air Force. She was a project manager for some program that she can't really tell you what she's working on, and it's best not to ask for any details, but it probably involves blowing lots of shit up. I just knew she was getting some leave to visit us for the weekend. \n\n\"Yeah, Em is the family's resident genius,\" Melissa said, her voice filled with sibling rivalry. If Emily was the smart one, then the youngest sister was hardest-working. Nichole's family was co-owner of a food shipping service that catered to many of Manhattan's long-established restaurants. All of the children had worked for the company at some point in their lives. \n\nBefore he died, Michael had taken over the company from his and Nichole's fathers, who came out of retirement for a short time before retiring for good a few years later. As the other children scattered across the country and around the world, Melissa and her husband had assumed the day to day operations of the business. \n\n\"Speaking of . . .\" Nichole frowned. \"What are you doing here? You were supposed to come over with Mom later.\" \n\nThe oldest of the sisters snorted softly. \"I wanted to meet your girlfriend first.\" \n\nNichole's eyes got wide. Then narrowed as she glared at the youngest. \n\n\"Oh, knock it off,\" Emily said dismissively. \"She didn't blow your secret.\" \n\n\"What gave us away?\" I asked, as much to break up the tension as satisfy my own curiosity. \n\nEmily reached for the electric corkscrew and a bottle of pinot noir, then winked at me, ignoring the daggers shooting out of her sister's eyes. \"Nichole has taken exactly eight vacations in the last seven years; two of those were to see me when I was stationed in Germany and one was that family reunion we had up in Lake George before Mary Paula got married. Don't make that face at me; your business trips and chaperoning for Stephen's school trips don't count! So when I saw on Facebook that she had suddenly taken three trips to fun places in the last five months, I figured something was up. And guess whose smiling face has been in four of my sister's last ten profile pictures?\" \n\nI blushed. \n\nShe passed some wine around to each of us. \n\n\"To my little sister's lousy attempt to keep her girlfriend a secret.\" Everyone except Nichole giggled and our glasses klinked together. \n\n\"Is it that obvious?\" Nichole asked softly. I saw fear in her eyes. \"Has Mom said anything to you?\" \n\n\"Nope,\" Emily polished off her first glass and poured herself a second. \"And even if she figured it out, she's going to make you tell her first.\" \n\n\"What about everyone else?\" \n\n\"Why are you worried, Nic?\" Melissa scoffed. \"You haven't been this happy in years. I'll get Emily to use her giant space laser on anyone who gives you any shit.\" \n\n\"We do not have a giant space laser.\" Emily's voice hardened sternly for just second, before she smiled mischievously. \"At least not one we can use on civilian targets.\" \n\nWe all laughed. I looked over at Nichole, who was trying to will away her nerves. Or drown them in wine. I reached out and took her hand, carefully watching her sisters to gauge their reaction. Both just beamed at me. \n\n\"Let's go show Maureen to her room,\" Nichole followed as I tugged her along to give my daughter the two minute tour of the apartment. Emily and Melissa began unpacking the groceries and picked up the kitchen choreography of a family that was used to throwing big parties and entertaining a lot of people. \n\n\"What are you doing here?\" I asked once we were out of earshot of the other girls. \n\n\"Nichole asked me to come up to meet her family all at once,\" Maureen grinned sheepishly. \"And we wanted to surprise you.\" \n\nI gave them both a big hug. \"You certainly did that.\" \n\n\"I also think she didn't want you to have to face her family by yourself,\" my daughter said, my appreciation for her and my girlfriend only growing. \n\nMaureen left her things in one of the back bedrooms and then we walked around Nichole's apartment. It has vaulted ceilings to match the tall windows that overlook Central Park West. The outside walls are a deep, red brick. Some of the inside walls are also brick, but most are framed and drywall. \n\nThe apartment she once shared with Michael took up a little less than a third of the floor, but once she bought the entire building and other tenants began moving out, she took over a couple of the other apartments, so now it covered almost half the fourth floor. \n\nThere is lots of open space with a big living area, a separate television room, a formal dining room and four bedrooms, a home office and three full bathrooms, a luxury in uptown Manhattan. She told me at one point she almost took over the top floor of the building, but this had been the home she made with Michael, and that meant more to her than a better view three stories up. Besides, then she could charge someone else the \"penthouse\" rate. \n\n\"Stephen! Come in here for a second!\" Nichole called. \"There's someone else I want you to meet. . . . This is Maureen, Amberle's daughter.\" \n\n\"It's nice to meet you,\" Maureen knelt down so she was eye level with Nichole's son. He blushed a little, but reached out to give her a friendly hug, which she eagerly returned. \n\n\"When is everyone else coming over?\" I asked, knowing the Nichole wanted nothing more than to get the initial part of the evening to pass. \n\n\"In about an hour,\" she replied nervously. \n\n\"Then let's get ready for dinner.\" I took her hand and have it a reassuring squeeze. We left Stephen back in his room to clean up. \n\nA short while later, Emily left to go pick up their mother, while Melissa, Maureen and I made dinner. Nichole wanted to pitch in, but she was too nervous be of any actual help. \n\nFrom the preparations, I could tell dinner was going to be quite a production. We had mac &amp; cheese going in a crock pot, some kind of chicken over pasta, meatballs, more pasta, a ham cooking in the oven and at least three different salads. \n\nIt was also my understanding that every family that was coming was also responsible for bringing something else. And this was the \"small\" party; the \"big\" one was the next night with the rest of Nichole's friends. \n\nNichole glanced up from a text message on her phone a little while later. She looked like she was about to have a panic attack. \"Mom, John and Elizabeth are on their way up.\" \n\nI reached out and pulled her to me. Her entire body was shaking nervously. \n\n\"Everything is going to be fine,\" I whispered in her ear. Pausing long enough to wash the scraps from dinner off our hands, I took Nichole and Maureen to the back corner of the living area. It was probably about as private a setting as we were going to get. \n\nWe heard the door open a couple of minutes later and the footsteps of half a dozen people announcing their arrival. Almost immediately, Nichole's mother covered the room quickly. She was followed by two people whom I instinctively knew to be Michael's parents. \n\n\"Hi, Mom,\" Nichole began, her voice sounding small. And afraid. \"This is . . . um . . .\" \n\nWe all stood there staring at each other for a long moment as words failed Nichole. \n\n\"I'm Carole,\" her mother broke the silence. I didn't know what to expect, but she reached out and gave me a cautious\u2014but warm\u2014hug. If she was surprised or upset, she didn't show it. \"It's nice to meet you.\" \n\n\"My name is Amberle, and this is my daughter, Maureen,\" I said. \n\nNichole finally managed to find her voice. \"This is John and Elizabeth, the other half of my family.\" \n\nThey, too, reached out and gave me reassuring hugs. Immediately, I found myself liking Nichole's mother and in-laws. They were informal, friendly and at the point in life when they quickly wanted to cut through useless pleasantries. I could tell from the twinkles in their eyes that they were accustomed to smiling and laughing. \n\n\"Amberle,\" John repeated my name, making sure he had the pronunciation right. I nodded. \n\n\"We've been trying to figure out how to say it for the past couple of months,\" Elizabeth explained with a smirk. Obviously, they had put two and two together. \n\n\"Oh, that reminds me,\" her husband reached into his walled and drew out a pair of fifty dollar bills and handed them to Carole. \"If he were here, I'd owe Ernie some money.\" \n\nThe family laughed at their shared in-joke. I smiled and filed that away as something to ask Nichole about later. \n\nJohn took my arm and saddled up next to me. He tried to put on a serious face. \"In the absence of Nichole's father, this is the part where I tell you if you break my little girl's heart, I have friends who can make you go away.\" \n\n\"You do not,\" Elizabeth snorted and playfully rolled her eyes. \"The last of your mob friends got sent to Saddlebrook in October.\" \n\n\"Is that a prison?\" Maureen asked curiously. \n\n\"Sort of,\" Carole laughed. \"It's a nursing home.\" \n\n\"Welcome to the family!\" John said with a mischievous smile. \"You did good, Nichole. She's much prettier than the last one you brought home. I just hope you did a credit check first.\" \n\n\"Oh, stop that,\" Elizabeth admonished her husband. ",
        "\"It's okay, Mom,\" Nichole said, and I could see her hands trembling. \"Her credit is better than mine.\" \n\n\"Even better!\" \n\nThree men I recognised from other pictures around Nichole's apartment walked over from the kitchen before John could say anything else embarrassing. They were all carrying drinks. Nichole took a glass of wine and gulped down about half of it. \n\n\"So do we get to meet her now?\" the biggest of the three asked. He was easily a head and a half taller than I, with strong arms, broad shoulders and a hefty middle-age paunch. He was the oldest of Nichole's siblings. \"I'm Nathan.\" \n\nI was going to have to get used to this family's penchant for hugs. \n\n\"Is Betsy here yet?\" I asked. Prior to coming up, I had devoted a sizeable amount of time trying to learn the names of everyone whom I might meet and connecting them to a face. \n\n\"She'll be here later with the kids,\" he beamed. They had two kids in high school, whose names had just flown out of my head despite my efforts. \n\nThe other men were a couple, Michael's younger brother Rhett and his husband Felix. \n\nI took the offered glass from Rhett who leaned in to give me another hug and quick peck on the cheek. They were the stereotypical gay New York couple: handsome, fit and immaculately dressed. \n\nSeeing how easily her family accepted me seemed to put Nichole at ease. Or maybe it was the wine. \n\n\"We're so happy not to be the only queers at family dinners anymore,\" Rhett hooked his hand into the crook of my arm. \"Is your daughter one of us, too?\" \n\n\"I'm not a queen, if that's what you're asking,\" Maureen took his other arm. \"I'm a princess, bitches, and I like to be treated like one.\" \n\n\"Sassy, too! You are going to fit right in around here,\" Rhett laughed. \"I love her already.\" \n\nWe engaged in some more small talk, as more people began to show up. \n\nI kept an eye on Nichole while trying to engage everyone, matching up names and faces and trying to remember who was married to whom, and who their kids were. Thankfully, Maureen ran interference for me, her mother's charm coming through. She has a near-eidetic memory, as well as McKayla's infectious laugh, rapier-sharp wit and warm, gregarious personality. \n\nAnd have I mentioned that she's gorgeous? \n\nBut then again, I'm her mother and I'm a little bit biased. \n\nVery quickly, she had all of Nichole and Michael's families eating out of the palm of her hand. \n\nShe made a point of quietly quizzing me on the various people at the party, pointing them out and expecting me to remember their names, or giving me a name and I had to come up with their relationship to Nichole. I did okay with most of the adults, but keeping up with the kids was a blur. \n\nMaybe it was some silent command Emily lorded over everyone like the big sister she was, but it seemed to me that Nichole's extended family was on their best behavior. They didn't pry into my past life too much and they made a genuine effort to be friendly. \n\nI'm sure it helped that they knew money wasn't an issue for me. \n\nOne thing I noticed is that every time someone called out for \"Mommy!\" or \"Daddy!\", half a dozen heads shot around to see what the problem was. All of the parents surely knew whose children belonged to whom, but the fact that everyone in the room was interested in the welfare of everyone else spoke to the strong bonds this family shared. \n\nSpeaking as someone from a small family, it was something refreshing to be a part of. \n\nThe other thing I noticed is they laughed a lot. Sometimes at each other, sometimes near each other. Sometimes they would let me in on a joke, sometimes not, and as the evening went on, I felt more and more at ease. \n\nThe wine glass in my hand that never seemed to empty probably contributed to that, too. \n\n\"I like them,\" Maureen saddled up next to me and put her arm around my shoulders. Her eyes were starting to glaze over. I'm sure between the flight up and the excitement of meeting all these new people, she was dead tired. \"Mom would have liked them, too.\" \n\n\"Are you sure?\" I asked quietly. \"Do you think she'd be angry with me?\" \n\nMy daughter snorted. \"Mom would only be pissed off that you took six years to find someone else to be with.\" \n\n\"I don't want to feel like I'm moving on.\" \n\n\"You have to, Mommy,\" Maureen said. \"If you don't, you'll spend the rest of your life being lonely. Statistically, you're going to live another forty years. You deserve to be happy for the rest of that time. Mom knew that. And she didn't want you to spend the rest of your life moping and pining away for her. If it's not Nichole, there are other people out there for you, too.\" \n\nI chewed on my lip for a moment. \n\n\"What if Nichole is that person?\" I whispered. \"And what if she gets sick and dies on me, too?\" \n\n\"Then you bury her and find another someone,\" Maureen replied, and I was a little shocked at her bluntness. \"Dwelling on the 'what ifs' will only lead you to becoming a crazy cat lady. And I can't be related to someone like that.\" \n\nWe both laughed, if only to break the maudlin moment. I knew she was right. \n\n\"Are you okay with me dating again?\" I took her hand in mine. \n\n\"Of course,\" she replied softly. \"Especially since your girlfriend lives someplace I like to visit!\" \n\nWe snickered. \n\nThe families with kids began to gather their things to go home. \n\nThere were a flurry of \"Good nights!\" and \"It was nice to meet yous!\" and I tried to call everyone by name. \n\nCarole stopped to see me before she left with John and Elizabeth. \n\n\"I haven't seen Nichole this happy in a long time,\" she told me with a warm smile. She gave me a hug and squeezed my hand. \"Make her stop working for a while so she can enjoy life!\" \n\n\"I'll do what I can,\" I winked. \n\nThose who were not in the process of leaving were cleaning up after dinner. There was an unspoken choreography as the trash was gathered, the dirty dishes cleaned and the leftovers packed away. \n\nAn hour or so later, the last of the stragglers were gone, leaving Stephen, Maureen, Nichole and me. \n\nStephen was already in his pajamas, and Maureen settled into the guest room. \n\n\"I had a wonderful time tonight.\" I wrapped my arms around Nichole and pulled her to me. \n\nShe let out a great sigh of relief and melted into my arms. \"I'm just glad no one let Rhett near the piano so he could start singing. I swear to God if I had heard him start into 'Let It Go', I was going to punch him in the throat.\" \n\nI kissed her through my snickering. \n\n\"Your family is very nice,\" I said. \"Is this the one night of good behaviour I'm going to get?\" \n\n\"Probably,\" she took me by the hands and we headed down the hallway to see the kids before bed. \"After tonight, you don't qualify as a guest.\" \n\n\"What does that mean?\" \n\n\"You have to bring something to dinner from now on. And you're not allowed to buy it from a store.\" \n\nStephen was watching something on his tablet through glassy eyes \n\n\"Time for bed, young man.\" Nichole took the iPad from his hands and set it on the nightstand. She leaned over and kissed him on the forehead. \"Good night, Stephen.\" \n\n\"Good night, Mom,\" he said. \"Good night, Amberle. You're very nice. And so is Maureen.\" \n\n\"Thank you, Stephen,\" I gave him a quick hug and we left him along. I was sure he'd be asleep in a matter of minutes. \"It was nice to meet you. Good night.\" \n\nMaureen was waiting in the door to the bathroom. \"What are we doing tomorrow?\" \n\n\"The big party is tomorrow night,\" Nichole gave her a hug and kiss on the cheek. \n\n\"After tonight, the 'big party' must be some production.\" \n\n\"You have no idea,\" my girlfriend sighed. \n\nI gave my daughter a kiss and took Nichole's hand. She led me back to her bedroom. We changed into our nightclothes without speaking. \n\nNichole curled up in my arms. The heavy curtains were drawn, blocking out much of the light from the windows. Her hair smelled sweet. Her breath smelled of wine. \n\nShe jerked a couple of times and her breathing became regular. \n\nHer breath was warm on my neck. \n\nI pulled her close to me and fell asleep, wanting nothing. \n\n************************* \n\nNichole \n\nIt's a good thing we weren't sleeping naked. \n\nAmberle was curled up against me, her head on my shoulder and her arm draped around my waist. \n\nI had a splitting headache from way too much wine the night before. \"Coming out\" to my family had gone well. I think. \n\nMom, my siblings and all of our extended family seemed interested in my girlfriend, and no one made a scene. I should not have been surprised that my relationship with Amberle was an open secret, but I was. I thought we were being cool and distant, but it seems that most of my family had us figured out. My friends probably had, too, but maybe they were keeping their comments to themselves until I came out on my own. Damn you, Facebook! \n\nI was very relieved that my mother and my son seemed okay with my sudden homosexuality, or at least they were taking some time to process my newest love before confronting me about her. \n\nWhat I had forgotten was how much my body disliked binge drinking. \n\nMy stomach wasn't upset. I wasn't going to puke my guts out. I just felt like a four kiloton warhead detonated at the base of my skull and my breath tasted of stale merlot. Thankfully, the heavy curtains were drawn, blocking out most of the daylight that was trying to creep into my bedroom. \n\nThe room started to spin as I lifted my head, trying to get a glance at the alarm clock. It was just after seven. \n\nI collapsed back into the bed and fell into the plush pillows. Amberle smiled in her sleep and snuggled up a little closer to me. \n\nPulling her close, I kissed her forehead. She was so beautiful. \n\nCaressing her cheek, I tried to will away the pounding in my skull and wondered what future we might have before us. \n\nMy reverie was interrupted by a soft knock at the door. Stephen didn't wait for an answer, and slowly turned the knob and came into my room. \n\nWhen he was little, Ethan and I didn't let our son sleep with us, but we never turned him away if he came into our room after waking up. \n\n\"Hi, Mom,\" he said quietly. I motioned for him to climb under the covers with us. My girlfriend stirred in her sleep, but didn't wake. \"How long are Amberle and Maureen going to stay with us?\" \n\n\"I don't know, sweetheart,\" I replied. It hurt less if I didn't open my eyes. \"Maureen has to go back to school soon, but Amberle might be here for a little while. Would you mind?\" \n\n\"No,\" he said softly. \"They're cool to be around.\" \n\n\"I'm glad you like them.\" We cuddled for a little while, then I fell asleep again, my son on one side and my lover on the other. \n\n************************* \n\nWhen I woke up again, I was alone in the bed. \n\nThe door was open and I heard voices from the kitchen. My headache had mostly subsided and the light was no longer unbearable. \n\nEven so, I took great care not to move too quickly, or change direction suddenly. I went into the bathroom and took care of business. When I came out, Amberle poked her head in through the door. \n\n\"Get back in bed,\" she scolded playfully. \"Someone wanted to surprise you with breakfast this morning.\" \n\n\"Okay,\" I mumbled and crawled back under the covers. \n\nA few minutes later, Stephen led Amberle and Maureen into the bedroom. He was carrying a tray with plate full of pancakes, bacon, and eggs along with a mug of coffee and some toast. \n\nThe four of us spread out on the bed, enjoying the first of many breakfasts together. \n\nDespite my hangover, I appreciated the effort Amberle was making to get to know my son. She is a natural with kids, as is her daughter. \n\n\"What are we going to do today, Mommy?\" Stephen asked, helping himself to a piece of \"my\" bacon. \n\nA quick glance over at the clock showed it to be just past ten. Mentally, I started counting backwards from the party that was going on later to see how much free time we might have. I checked my phone and saw about a dozen text messages, two missed calls and two voicemails. \n\nI turned my phone over and set it back on the nightstand. If anything were life or death, someone would have called the landline to my apartment. All of the other business could wait until I was done with breakfast. And a shower. \n\n\"Probably just a little bit. We'll have some time between now and after lunch, but you're going to stay with Uncle Nathan for a while, then we're going to go to the party.\" My hangover still lingered, but my temples had stopped throbbing. \"And then you're going to go spend the night with your cousins.\" \n\nWe finished up our breakfast. I insisted on cleaning up while the others rotated through the showers. I quickly washed myself off, then dressed while answering text messages. Most of the party arrangements were already made; now it was just time for details. \n\nNew York is one of those cities where you know that every time you leave to go out for the day, it's going to cost you a certain amount of money. Whether it's for a taxi, lunch, groceries or whatnot, there's a certain overhead that comes with living in the city. At least all the walking and the steps meant that everyone is in relatively good shape. \n\nI threw some bottled water, pop and snacks in a backpack, then the four of us headed out for a little while. Since I live right along Central Park West, we headed over through the park and walked around the Sheep Meadow and up to Strawberry Fields. It was cool, but not cold. There was a little bit of residual snow in places where no direct sunlight hit, but it was otherwise pleasant out for a January day. \n\nAmberle and I held hands a lot, often with one of the kids holding on to the other. \n\nStephen seemed to take to both my girlfriend and her daughter, and Maureen was nothing but an angel to me and my son. We stopped for lunch at Tavern on the Green, and as the four of us sat there talking and laughing, I glanced over at Amberle. \n\nThere was a distant look in her eyes for just a second, then she met my gaze. \n\nHer warm smile. \n\nThe soft bounce of her curly hair. \n\nShe winked. \n\nMy heart skipped a beat. \n\nAnd in that moment, I let myself fall in love with her. \n\n************************* \n\nI like to think that I'm a patient person. But not tonight. \n\nWe had less than an hour before the official start of the party. Of course, almost none of the guests would be on time. That wouldn't be fashionable. \n\nAfter our lunch, we hurried back to my apartment. Nathan came to pick up Stephen, Maureen retreated to her room to study for a chemistry test and Amberle mostly stayed out of the way as I made call after call. \n\nI ran around taking care of all the last minute details of the big party. \n\nThe first two stories of my building are retail and office space. There is a separate residential entry that is accessible from the street and from the lobby area. The first floor has a nice spacious open area, and the second level has a mezzanine which looks out on Central Park West through a set of glorious bay windows. \n\nA restaurant had recently gone under, so I had some empty space there. I knew enough catering companies through the family business that I got good food at an inexpensive rate. My sisters were in charge of decorating. I run the property through an LLC, which pays the maintenance and security staff. \n\nUsually, I like to take care of things personally, but several years ago, I realised that I couldn't do it all myself, so I grudgingly hired an office manager and a couple of other office staff. \n\nThe former restaurant was a nice setup; they put a lot of money into expensive hardwood floors, high-end kitchen equipment, and comfortable seating. When it was open, they did good business, but their menu was way too ambitious, their prices on the wrong side of reasonable and one of the owners \"forgot\" to tell the New York State Liquor Authority that he was a convicted felon. So their booze licence got revoked and the place went belly-up, leaving most everything for their creditors. \n\nThis wasn't the first restaurant to go out of business on my property, nor was it to be the last. I purchased most of the equipment and d\u00e9cor from the bank at a substantial discount. After all, I was willing to take the place lock, stock and barrel, while they would have to pay someone to come in, inventory what was left, find buyers and dispose of everything. \n\nI would either sell the equipment to the next tenant or make a couple of calls and have someone who could really use it come get everything. If I played my cards right, I would do a little better than breaking even, if not make a respectable return on my inventment. \n\n\"How ya doin' tonight, Miz Galloway?\" my doorman asked in his thick Jur-zee accent. He had been working at the building since before Michael moved into it. Friendly, professional and discreet, he was in the know about everything within a four block radius. \n\n\"Just fine, Paulie, how are you?\" His real name was Palmiro, but no one called him that except is mother and his wife. \n\nThe lobby buzzed with caterers and decorators putting the last minute touches on the place. \n\n\"Doin' well, ma'am,\" he replied with a smile. \"Great night for a party.\" \n\n\"Yes, it is.\" I stopped for a second and rummaged through my purse. \n\n\"I already got yer guest list, ma'am,\" he said, one step ahead of me. \"I gave it to all the boys, an' they know where to send everyone.\" \n\n\"Thank you,\" I patted him on the shoulder. \"Remind me to give you a bonus at Christmas.\" \n\n\"I remind ya every year,\" he laughed, and then leaned in so none of the other people buzzing around could hear. \"Oh, an' I told 'em that Miss Amberle would be staying for a while, an' I gave her a key to the back elevator.\" \n\nOf course he knew what I wanted before I did. \n\n\"What am I going to do when you retire?\" I smiled appreciatively at him. \n\n\"I don't plan on that any time soon.\" Paulie winked and went off to check on the valets and other staff. \n\nWhat had started out as a small party for my friends had turned into a ginormous production. I sighed as my phone buzzed. \n\nCan you come up here for a second? Amberle's text message flashed on the lock screen. \n\nI looked around, took a deep breath and let it out slowly. \n\nIf it hasn't been done by now, I don't need it, I thought to myself, supressing the urge to go back for one of the gazillion things I hadn't checked or double-checked. \n\nThe elevator opened and Maureen stepped out. She smiled mischievously at me, but said nothing and went on her way to check out the party location. \n\nIt was a short ride up to my apartment. Amberle was waiting in the foyer. Her hair was pulled back and it looked like she had already started getting ready for the party. \n\nI let out a surprised yelp when she grabbed me by the lapel and pulled me in for a hard, sloppy kiss. \n\nHer touch was calming and I melted into her arms. One hand groped at my breasts and she pinched one of my nipples right at the point between pain and pleasure. \n\n\"Knees,\" she commanded, and I reflexively obeyed. By nature, Amberle is not a domineering person in either her personal life or in bed, but when she get's that look in her eyes, I can tell I'm in for a hair-pulling, ass-slapping, scream-and-wake-the-neighbours orgasm. \n\nShe lifted her skirt to show me she wasn't wearing any underwear. \n\n\"Lick.\" \n\nI closed my eyes as she thrust her pussy forward into my mouth. My tongue snaked between her labia, brushing her swollen clit. The space between my legs became slick. \n\n\"You are so good at that,\" Amberle smiled, her eyes hooded over with pleasure. \n\nMy heart raced, happy to be able to satisfy my lover. I reached around and cupped her magnificent rear end. As I pulled her closer to me, she pulled away. ",
        "I let out a disappointed sigh. \n\nShe drew me to my feet and leaned in, as if to kiss me. Her lips brushed mine, but she pulled away again. My pulse raced, my desire nearly taking over. \n\nAmberle smiled, her eyes flashing with wicked delight. \n\nIn each hand, she held a small vibrator. \n\n\"I have something for you,\" she said with a teasing laugh. \n\n\"Remote control?\" I asked. \n\n\"Not quite,\" she replied. \"I told Melinda that I needed something I could use to drive you crazy, and she sent me these.\" \n\nMelinda Dransfield was one of the girls on the beach trip where we met. Our mutual friend was Melanie Westcott, who invited five of her friends along for a girls' weekend away at the beach the previous summer for my birthday. Melinda was sexually liberated and adventurous, but I guess living in a polyamorous relationship for close to thirty years will do that to someone, huh? \n\n\"One is for you and one is for me,\" Amberle drew my skirt up and pushed my panties down. \"I want these gone. We're both going commando tonight, sweetheart.\" \n\nI let out a moan as she pushed the vibrator inside my slick pussy. It fit me just right. Once it was snug, I felt her move a switch and it buzzed, sending a jolt through my body. \n\nShe closed her eyes and bit her lip as she slipped the other one inside her and activated it. \n\n\"There's a computer chip inside the vibrator that will cause it to go off at random intervals,\" my lover said with a grin. \"It will vary in intensity and duration. And you won't know when it's going to go off next.\" \n\n\"So what's the catch?\" I asked, taking her in my arms. \"Why didn't you stick just me with one?\" \n\n\"Because I have a proposition for you.\" \n\n\"I like the way that sounds.\" My heart raced. \n\n\"The first one to take it out loses.\" \n\n\"Loses what?\" I was intrigued. \n\n\"If you take yours out first, I win.\" She brushed the hair out of my face. Her fingertips traced a soft line across my cheek. \"And that means you have to take me on vacation. At least three weeks to the destinations of my choosing. Out of the country. And no working while on vacation.\" \n\n\"And if I win?\" \n\nMy body tensed as she pulled me close to her and bit gently on my earlobe. The hair on the back of my neck stood up as she breathed into my ear. \"I move to New York for three months. We start our life together.\" \n\n\"I'll start cleaning out space in my closet,\" I teased. I was going to do that anyway. \n\n\"And no brushing your teeth; I want you to taste like pussy all night,\" she squeezed my breast, sending a chill up and down my spine. \"My pussy.\" \n\nShe gave me a quick wink, and then sauntered off towards the bedroom. \n\nI straightened out my skirt and blouse, then checked the ten text messages I had been ignoring and went back downstairs. \n\nAs soon as I hit the floor, Emily pushed a champagne flute into my hands. \"Stop it.\" \n\n\"Stop what?\" I downed it all in one gulp. \n\n\"Stop going over the arrangements in your head,\" my sister scolded, and she wasn't very nice about it. She was using her Air Force officer voice. \"This is your party, so enjoy it. Melissa, Courtney and I will take care of everything.\" \n\nI breathed a deep sigh, again trying to will away my nerves. I was almost there when the vibe inside me went off. It was just a second, but it sent an electric tingle throughout my body. \n\nOh, Amberle was going to pay for this! \n\nThe room buzzed with service staff. Servers were carrying trays of hors d'oeurves around. The bar was fully stocked. A buffet table was set up with hot and cold food. There was music playing in the background, but it wasn't too loud. \n\nThis night was costing a small fortune, but since I had invited a bunch of people from my circle of work friends and associates, all I had to do was say something like \"zoning district\" or \"rent subsidy\" at some point and I could write the whole thing off as a business expense. \n\nOne of the anonymous servers replaced the champagne flute in my hand with another and I was sipping it before I realised what happened. \n\nThe first guests arrived a few minutes after the announced start time. Of course, they were my mother and Michael's parents. \n\n\"Where's Amberle?\" John asked, giving me a familial hug. \n\n\"Getting ready,\" I replied. Emily took their coats and sent them up to my apartment with one of Nathan's kids. \n\n\"She's a nice girl,\" he took me by the arm. \"You did good this time.\" \n\n\"Unlike last time?\" \n\n\"Everyone makes mistakes,\" my surrogate father shrugged. \"You fell quickly for him, but I'm glad you came to your senses fast enough. Don't give me that look, Nichole; we all tried to warn you.\" \n\n\"Do you think it's too soon?\" \n\n\"Too soon for what?\" John snorted softly. \"Listen, I'd be lying if I told you none of us were surprised you are seeing another woman. But we all see the way your eyes light up when she's next to you, and we haven't seen that look since . . . well, since you and Michael were together.\" \n\nNeither of us spoke for a long moment. \n\n\"What do you think he would say?\" I whispered, afraid of what the man who was as much a father to me as my own was thinking. \n\n\"He'd want you to be happy, Nichole. That's all he ever wanted. From the moment you stepped back into his life. If he hadn't been in that accident . . .\" He paused for a second to choke back tears. \"I know you'd still be together. And you two would have made us a softball team's worth of grandchildren. As long as you have your smile back, we're happy. Michael would be, too. And so would your dad.\" \n\nI wrapped my arms around him. John was always a sentimental guy. Fun and jovial. My father was the stern one. Michael's dad was the fun one. He laughed hard. Played hard. Loved hard. \n\nSo when I found out he didn't like my third husband, I knew something was wrong. \n\nAnd to hear that he liked Amberle, I knew I was doing something right. \n\n\"Thanks, Dad,\" I whispered. He gave me a quick kiss, then we both wiped our eyes. \n\nThe tingle inside me interrupted my maudlin moment. It lasted a few seconds and was a lot more intense than the last one. I shifted a little until it stopped, hoping John didn't notice anything unusual. \n\nA few more guests arrived, including a small army of Stormtroopers, Jedi and Mandalorians. There was a Han Solo, non-slave Princess Leia, and even a guy dressed up as Darth Vader. They were Maureen's idea; it was no secret that she was a ginormous Star Wars fan, just like her mother (and I don't mean Amberle). She mentioned something about raising money for charity. I just smiled, nodded and let them do whatever it was they were going to do. \n\nI knew the kids would get a kick out of shooting them up with Nerf guns. \n\nCircling the room, I greeted as many guests as I could. A part of me wondered why my girlfriend hadn't shown up. It was her party, after all. \n\nRhett was already at the bar. He and Courtney were scoping out the guys and making snarky comments about who was wearing what. \n\n\"Hey, sister!\" he called, his voice already a bit slurred. I tried to wipe the annoyed look of my face. \n\n\"The spring rolls rock,\" Courtney said. She was the youngest of our brood, and many of the older siblings found her kind of irritating. To be fair, she's sweet and fun and pretty. We like to say that the rest of us broke our parents down, and she is the spoiled one. \n\n\"I would hope so; the caterer is charging me a fortune,\" I muttered, careful not to completely empty the champagne in my glass, else I find it full again. \n\n\"Who is that guy over by the\u2014hot damn, Nic! Your girlfriend is smokin' hawt!\" \n\nThe room fell silent when Amberle walked through the door. \n\nShe was wearing a spaghetti strap floor-length slinky black dress with a slit than ran well up her thigh. It was low cut, but pushed up her boobs and hugged her curves in all the right places. A pendant lay in the top of her cleavage, adorned by what looked to be the fabulous Baseball Diamond. \n\nHer strut was accented by her four-inch fuck-me pumps. Her hair was pulled back into a simple tight braid. \n\nHow she could have put this together in the last forty-five minutes was beyond me, but she was the envy of every woman in the room. And she was all mine! \n\nAmberle sauntered over to me and made a big show out of giving me a quick kiss. It was appropriate for public places and in front of children, but left no room for speculation about our relationship. \n\nBefore I could say anything, she stepped back and twirled around, I think mostly to show off her magnificent rear end. \n\nI bit my lip when the vibe went off yet again. It was just for a fraction of a second, but it was the most intense buzz yet. My nipples felt like they were going to pop out of my bra and blouse. It was all I could do to keep from crying out. \n\nThat made me wonder what Amberle's was doing to her. \n\nShe winked as if reading my mind and blew me a bright red lipstick kiss. \n\n\"I didn't know we were dressing up,\" I managed to say, trying my best to keep my voice under control. Everyone one was admiring her beauty. \n\n\"We weren't,\" she replied with a devilish grin. I wasn't under-dressed, but nor was I dressed to kill. \"I'm showing off for you, sweetheart. I want every man and every dyke here tonight to know what you've got waiting for you at home.\" \n\nRhett giggled. \"Does that make you Nic's trophy wife?\" \n\n\"I'm her MILF in waiting,\" Amberle scoffed. \n\nEveryone laughed. I wanted to say something snide, but some of my other friends were making their way over to see us, and it was time for introductions. \n\nI took Amberle by the arm and we strode around the room, all smiles and waves. She was bombarded by names and faces of my friends and business associates, and took it all well. I think. \n\nWhen I came up with the idea for this party, I wanted to make sure there were some familiar faces around. \n\n\"What are you doing here?\" she laughed, stepping into the arms of a stormtrooper who was easily a head taller than her. \n\nKevin Westcott lifted her as easily as he could while wearing his armor and spun her around playfully. \"How did you know it was me?\" \n\nAmberle took his arm in hers and started scanning the crowd for his wife and her dear friend Melanie. \"Kev, I watched you build this armour in your garage. I'd know it anywhere!\" \n\n\"We're raising money for Make a Wish,\" he slipped his helmet off and leaned over and gave her a familiar hug and kiss. \n\n\"Did Maureen put you up to this?\" \n\n\"Of course not,\" he snorted, but we all knew he was lying. With a wink, he slipped his helmet back on. His voice was clear because of the voice amp he wore under the chest plate. \"Mel is around somewhere. Probably at the bar.\" \n\nAnd with that, he turned and headed back to the other Star Wars characters and some time the business end of a few Nerf guns. \n\nI took Amberle's hand and started to lead her over to another group of my friends when the vibrator went off. \n\nIt was all I could do to keep from collapsing onto the floor and letting out an ear-splitting scream right there. Instead, I dug my fingernails into my evil girlfriend's arm and rode out the longest and most intense burst yet. \n\nMy pulse raced. My pussy flooded with warmth. \n\nBiting my lip. My knuckles turned white. Teeth clenched. \n\nWhat felt like five minutes was probably only twenty seconds or so. \n\n\"Ready to give up yet?\" Amberle smiled sweetly. \"Slut.\" \n\n\"Not a chance,\" I whispered, my body still shaking. \"Bitch.\" \n\nShe winked. \"Your bitch.\" \n\nWhen she smiled, I noticed her eyes. They softened for a moment and she smiled warmly. Her gaze seemed to bore right through me. \n\nNeither of us spoke, maybe afraid to break whatever it was that held us spellbound. \n\nMy heart skipped a beat, when she took my hands in hers. \n\nAll of the conversations and music faded away. The faces of everyone around me blurred. Everyone except Amberle. \n\nI'm the tall one, but in her heels, I had to look up to her ever so slightly. She leaned in and I tilted my head back. \n\nI didn't realise I was holding my breath until our lips touched. \n\nHer skin was so soft. The smell of sweet vanilla lotion washed over me. \n\nMy heart raced. And fell with disappointment when she pulled away. \n\n\"I love you,\" she whispered in my ear. \n\nAny reply I might have had was erased when the vibrator went off inside me. Again. And again. \n\nI swear to God she must have had that thing on a remote control because it went off in a short staccato burst that lasted about five seconds. \n\nMy scream was only stifled by my clenched teeth. \n\n\"I'm going to fuck the shit out of you tonight,\" I swore once I found my voice. \n\n\"All you have to do is pay for a three week vacation,\" her eyes danced with delight as she slipped her arm into mine and we went back to mingling with our guests. \n\n\"No goddam way,\" I muttered, determined to outlast my girlfriend. And her secret, evil plan. \n\nCome hell or high water. \n\n************************* \n\nAmberle \n\nThe party raged on for a while. \n\nI caught up with Melanie and Maureen who were at the bar. Mel was buying drinks for my daughter, who was technically underage, but no one seemed to notice or care. I think the bartender knew she was with Nichole and me and that she wasn't driving home or anything like that. \n\nIn addition to Melanie, our friend Lara was there with her husband. She had also gone on our beach retreat where Nichole and I met. I was trying to be good and cut back on the champagne, but Lara is one of those people who never lets your glass get to empty, and I ended up drinking way more than I should have. \n\nSo after an hour or so, I was extra tipsy. It's a good thing Melinda wasn't there, too, because I probably could have been talked into karaoke. Or streaking. \n\nI've always been a happy, affectionate drunk, and that night seemed magical. I hadn't had that much fun in years. \n\nMcKayla was a very social person. I was never as outgoing or gregarious as my wife, but I liked it when she'd drag me out of my comfort box to be with people I wouldn't normally meet on my own. \n\nNichole is also very social, but I don't think it comes as naturally to her. Like me, she can be very introverted and she likes her space, but due to her business associations, she has to get out there and schmooze clients and sponsors alike. \n\nThere was a good mix of folks at the party. Some were Nichole's friend and family who were there to meet me. Some were people she did business with: tenants, suppliers, service support and so on. Some were residents of the building, who were there to mingle and pick up some free food at their landlord's expense. \n\nWhat turned out to be an unexpected highlight of my evening was when Nichole introduced Maureen and me to two of her favourite tenants. The husband had lived in the building since before Michael had moved in. His wife was almost twenty years his junior, but from the moment I first saw them holding hands, I knew they were soulmates. \n\n\"This is Gabriel and Bailey MacKenzie,\" Nichole introduced us and the champagne-induced glaze immediately melted off my eyes only to be replaced by starstruck wonder. \"They've live on the east side of the fifth floor.\" \n\n\"Oh, just above us,\" I blurted out and could only blush. \n\n\"It's nice to meet you,\" my daughter stepped in. \"We've been big fans for years!\" \n\n\"Thank you,\" Gabriel returned with a knowing smile. He was much more handsome in person. When I was little, my mom and I used to watch his soap opera, The Sun Also Sets, and after she passed, I continued to watch the show until it was cancelled when Maureen was in high school. We used to tape it and watch it together over dinner as well. \"It's nice to meet you, too.\" \n\n\"We saw you in the revival of Into the Woods a couple of years ago, and again in Spamalot when the tour stopped in Charlotte,\" Maureen continued. \"Do you think they'll bring back Sunday?\" \n\n\"I hope so,\" he raised his eyebrow, apparently surprised that my daughter might be aware that his attachment to the Sondheim musical was little more than mere rumour. \"It's a good show, and would do well in another run.\" \n\n\"Bailey is a family doctor, specialising in rural health care. Did I get that right?,\" Nichole broke in to keep the conversation from going too deep into musical theater, maybe to head off her brother ovearhearing parts and breaking into a medley of showtunes. \"Maureen is in the pre-med program at Duke.\" \n\n\"Oh, really?\" it was Bailey's turn to appear interested. \"Are you going to Duke for med school, too?\" \n\n\"I'd like to,\" Maureen replied. \n\n\"Can I talk you into Columbia?\" she asked with a sly smile. \"I have some connections there. In fact, I'm meeting with the chair of the Pediatrics Department on Tuesday if you've got some spare time.\" \n\nI don't think I have ever seen my daughter speechless before. Her eyes got wide, and then she broke into a big smile. It took her a second to form any words. \"I'd love to! Can I, Mommy?\" \n\nMy initial response was to frown, because I figured she was already missing school, but if she wanted to make some contacts at an Ivy League school, this was a good way to do it. Of course, Duke isn't some third-tier med school, either. Besides, between the champagne and the vibrator that kept going off and was turning my insides into a slip-n-slide, I was in a good mood. \n\nI just smiled, \"Of course, sweetheart, anything you want.\" \n\n\"It was nice to see you, Gabe . . . Bailey,\" Nichole took my arm as someone across the room was waving at us. \"Stephen is with me this week, so if the kids are around, send them down after school.\" \n\n\"We will,\" Gabriel reached out and gave me a friendly hug, and I seriously considered never letting go of the handsome actor. \n\nBut I did, if only to keep his wife from strangling me. I'm sure she's used to it, though. \n\nThe whirlwind of names and faces, when combined with all the booze, left my head spinning. \n\nThe one thing that kept me grounded was the steady, calming touch of Nichole. She never left my side and seemed to have a much more level head than I. Of course, I could tell when the vibrator inside her went off because her eyes would flash for just a second and she'd bite her lip or clench her fingers around mine. \n\nThe vibe inside me continued to go off all night, but instead of fighting it, like it looked like Nichole was doing, I just embraced the waves of pleasure coming from between my legs. \n\nI think I probably had four or five little orgasms throughout the night. One time, I had to steady myself against the bar to keep from falling over when it went off for about ten seconds on high. \n\nMelanie gave me a strange look, but said nothing. Then it was back to our guests. \n\nAfter a couple of hours, the party had split into two distinct camps: those who were there for business, and those who were there for the party. \n\nBy ten o'clock, the business crowd had mostly cleared out. And the partiers were just getting started. \n\nI brushed up against Nichole from behind, wrapping my arms around her waist. My lips attached themselves to the back of her neck, drawing a delighted squeal from my love. She leaned back into my arms. \n\n\"Ready to give up yet, slut?\" I nibbled playfully down her shoulder. \n\n\"Not a chance, bitch,\" she turned he head and kissed me, her touch right on the fine line between loving and hungry. \n\nI was acutely aware of the eyes upon us, as I publicly and eagerly expressed my affection for the woman in my arms. Many years ago, I gave up caring about what people thought about me when I kissed McKayla or held her hand in public. I knew she had a terrible disease which was going to take her from me, and I was not about to hide my love for her behind social niceties and mores or the disapproving looks of southern fundy Christians. ",
        "In part, I think I was testing Nichole, to see how she would react to people judging her for our relationship. Even though she was among her friends and family, I knew that not everyone would have a positive view of her being with another woman. It was going to affect her friendships, her business partnerships and her family, especially her son and ex-husband. \n\nFor myself, I needed to know that if I was going to invest in our relationship, she was willing to accept all of the social repercussions of having suddenly joining the gay community. \n\nIt seemed I need not have worried. \n\nShe is a very headstrong and stubborn and willful person. It serves her well most of the time, but can also be a weakness because she sometimes digs in when she shouldn't. Looking back, on that first night she spent in my arms, I think she knew what she was getting into, and was ready to jump straight in to the deep end without a second though. \n\nAnd that made me happy. \n\nAs I held her, it was all I could do to keep from reaching around, cupping her breasts and taking her right there. \n\nMy nipples felt like they were going burst out and poke through my dress into her back. I could feel her pulse racing and her breathing quicken. \n\nNichole was about to say something when her phone buzzed. \n\nShe reached into her clutch for her phone and giggled when she saw the screen. Then she held it up so I could see the text message from my daughter. Get a room. \n\nI let go of Nichole and she spun around in a graceful pirouette, ending with her arms wrapped around me. \n\nMy face felt flush, as if I was twelve again and having my first middle school slow dance again. \n\nAs I closed my eyes and tilted my head back, Nichole's hands framed my face and she leaned in and kissed me. Not hard. Not gentle. Not hungry. \n\nLoving. \n\nContented. \n\nBliss. \n\nShe pulled back and winked at me. The room had fallen silent, except for the music played by the DJ. \n\nSlipping her arm into mine, she led me back around to see our guests who were leaving. My head was lost to the clouds. And in that instant, I let go of the sorrow of my lost love and the shadows of my past. \n\nAs I embraced the light and promise of my future. \n\n************************* \n\nI don't remember the exact circumstances that caused us to leave the party. \n\nWhat I do remember was Nichole grabbing my hand suddenly, her knuckles turning white. Her teeth clenched. Trying not to scream. \n\n\"We need to go,\" she whispered, her voice a hoarse mix of desperation and desire. \n\nIt was later in the evening and most of the actual business was done. Nichole had formally introduced me to her friends from the stage that was set up in one corner of the bar, and in doing so, came out in public as being in a lesbian relationship. We were received enthusiastically by her close friends, most of whom were happy to see Nichole recovered from her disastrous third marriage. \n\nThe caterers were still serving hors d'oeuvres and snacky foods, but they were taking down the buffet. The stormtroopers, Jedi and Mandos were \"kitted-down\" and were either packing their gear to leave, or they stowed it in a storage room and were joining the party. Maureen was dancing with Nichole's extended family. \n\nMy heart raced as Nichole tugged at my hand. \n\nShe said a couple of hurried good-byes, reminded Emily to take care of paying those who were expecting to get paid, and then we raced off to the elevator. \n\nAs soon as the doors shut, she pushed me up against the side as I desperately tried to mash the button for the fourth floor. \n\nOur tongues intertwined. \n\n\"You win, goddammit,\" she growled, her hands pawing at my dress, searching for the zipper. I squealed with delight as she bit my earlobe. \"We'd better be going some place good.\" \n\nThe next thing I knew, we were in bed. Naked. \n\nRolling over lazily, I was surprised that I wasn't too hungover. Usually I take a handful of ibuprofen before going to bed, but I didn't the night before. I had a bit of a headache, but the light coming out from behind the curtains wasn't overpoweringly bright, and moving didn't induce nausea. \n\nNichole curled up on my shoulder, her breathing regular. \n\nI raised my head to see it was just after ten. Our clothes were strewn around the room. The sheets were rumpled and damp with sweat. \n\nMy girlfriend smelled like wine and sex. Her body was warm against mine. \n\nAs much as I wanted to stay like that all morning, my bladder had other ideas. Very carefully, I wiggled out from under her and slipped into the bathroom. I did my business and found a bathrobe hanging off a hook on the back of the door. \n\nTaking great care not to wake Nichole, I padded out to the kitchen. My daughter was sitting on a stool next to the counter, nursing a cup of coffee. She looked up from her iPad and organic chemistry textbook long enough to shoot me a sly smile. \n\n\"What are you looking at?\" I gave her a mock snarl. \n\n\"You're definitely in love,\" she laughed. \n\n\"What makes you say that?\" \n\n\"Nichole made you scream when you orgasmed last night.\" My jaw fell open and my daughter just laughed. \"You used to scream for Mom, too.\" \n\nNo words would form for me. \n\n\"When we were . . . what? . . . eleven, Emily and I snuck across the house to just outside your door one night when we heard you and Mom having sex,\" Maureen grinned sheepishly. \"I heard the noises for years before, but never thought about what it might be, but that night, we decided to check it out. You were trying to be quiet, but we could hear you from the kitchen. I don't think we quite knew exactly what you were doing, but . . . and this is going to sound strange . . . but even then, I knew it was you loving each other.\" \n\nShe paused for a second. \n\n\"And last night, you made the same sounds,\" Maureen gave me a reassuring smile. \"You haven't been this happy in a long time, Mommy.\" \n\nIt took a moment for that to sink in. \n\n\"Now make a cup of tea and go back to your girlfriend,\" my daughter winked. \"And, yes, I can hear you from across the apartment.\" \n\nDespite turning beet-red, I walked around the counter and gave Maureen a big hug, then kissed her gently on the top of her head. \n\nA few minutes later, I slipped back into the big plush bed, wrapped my arms around Nichole and fell into a contented sleep. \n\n************************* \n\nNichole \n\nI awoke to the faint smell of chai tea and vanilla lotion. Amberle was spooned up behind me, her arm gently draped around my waist. \n\nWe were both naked. \n\nMy head was pounding for the second morning in a row, but my girlfriend's touch seemed to take a little bit of the bite out of my hangover. \n\nHer breath was warm against the back of my neck. \n\nWrapping her fingers in mine, I savored the feel of our bodies pressed together. Being with her under the heavy down comforter warded away the morning chill. \n\nAmberle's breathing was steady. \n\nI must have dozed off because when I blinked my eyes open again, I lay in the crook of her arm, my eye level with the gentle curve of her breasts under the sheets. \n\nShe stirred when I yawned, and I cuddled up closer to her. \n\nWe were both awake, but neither of us seemed in a hurry to get out of the bed. Instead, we were content just to hold one another. I ran my hands over her skin, careful not to move too much or too quickly. \n\n\"Good morning, sleepyhead,\" she whispered. I lifted my chin enough to bring my lips to hers. She tasted of the chai tea. Her skin was so soft. \n\n\"I can't believe I let you win,\" I mumbled. \n\nAmberle giggled. \"I was five minutes from giving up!\" \n\nRolling my eyes, I have her a mock groan of disgust. This was probably the first time in my life that I didn't really care about \"winning.\" I just wanted for Amberle to be close to me. \n\nPhysically. \n\nEmotionally. \n\nHer touch was reassuring in its simplicity. Just holding her hand was comforting. \n\nWhen I was with her, I was ready to let go. Of my business attachments. Of the parts of my life that were draining of my energy and attention. \n\nThe best part was that I knew she didn't need me. Ours wasn't a relationship of convenience or one-sided\u2014or even mutual\u2014benefit. If anything, I was coming in to this relationship as the person with more to gain. \n\nFor all her talk about me taking her somewhere for a long vacation, I also knew that actually getting her to let me pay for it probably wasn't going to happen. But that didn't matter. Money wasn't really an issue for us. Yeah, I know that makes us sound a little arrogant, but we had both spent our lives being smart with our money, so we could afford to splurge when we wanted. \n\nUnder the down comforter, her skin on mine felt so good. So soft. So warm. \n\nMy hand strayed across her body and down her belly. \n\nShe spread her legs ever so slightly as my fingertips traced a line down one thigh and up the other. \n\nI made several teasing passes across her neatly-trimmed mound. My lips sucked on her collarbone when I slipped a finger between her labia. \n\nAmberle let out a soft moan when I pressed against the nub of her clit, and bucked her hips to meet each slow, gentle pass. \n\n\"Just like that,\" she purred in my ear. And I was happy to oblige her. \n\nWe fell into a steady rhythm. I build her up slowly. \n\nHer pulse raced. Her breaths came faster. \n\nEvery couple of strokes, I let go of her clit and slipped a finger or two inside her. \n\nThe arm wrapped around me tensed. \n\nAmberle's other hand clenched her breast. I leaned down and took her free nipple in my mouth, suckling her hungrily. \n\nShe spread her legs wide for me as I increased my pace. \n\n\"Oh, god!\" my lover cried out, her body pulsing with excitement. \"Don't . . . stop . . . don't fucking . . . stop . . .\" \n\nMy hand was a blur, working her pussy over with wild abandon. Slick with desire, my hand made that delightfully naughty squishing sound as I massaged her clit. \n\nHer voice was hoarse. Her fingernails dug into my shoulder. \n\n\"Oh, Jesus!\" She threw her head back into the pillows. I stuck two fingers inside her just as her pussy flooded with warmth. \n\nAmberle's pussy clenched around me and she let out low, throaty scream. I lifted my mouth off her breast and kissed her deeply and passionately. \n\nHer legs clamped together as she rode out the orgasm, my hand trapped inside her. \n\nShe pulled me tight to her, trembling. \n\nI slipped my hand out from between her legs and fell into her loving embrace. \n\nWe kissed for a long time, our bodies intertwined. \n\nHer hands ran up and down my back, the featherlight touch of her fingertips drawing goosebumps on my skin. Our breasts pressed together, and our bodies seemed to fit together like two pieces of a puzzle. \n\nMy hands brushed the hair out of her face and our eyes met. \n\n\"I love you,\" I whispered. Many years ago, in the very room where I held Amberle in post-coital bliss, I had vowed never to say those words to anyone ever again. It was the morning I lay in bed with Michael, his lifeless body still warm. \n\nIt was an empty promise. I knew it. My parents knew it. God knew it. They were the words of a broken heart and shattered dreams. I meant them at the time, but it was a vow I never could have kept. \n\nI knew Michael understood, though. \n\nLife went on. It always does. I found other loves. My husbands. My son. \n\nAnd now Amberle. \n\nHer hand caressed my cheek. I raked her fingertips with my teeth. \n\nShe pulled me down to her. Our foreheads pressed together, the tips of our noses brushing. \n\n\"And I love you,\" she replied softly and I found myself spellbound once again to her tender kisses. \n\nAs we held each other that morning, content just to be in the arms of one another, I knew I was going to spend the rest of my life with this woman, wanting nothing."
    ],
    "authorname": "HLD",
    "tags": [
        "amberle",
        "nichole",
        "lesbian",
        "mckayla's miracle",
        "tapestry"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/love-the-second-time-around"
}