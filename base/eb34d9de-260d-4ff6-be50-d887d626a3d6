{
    "title": "Louise Ch. 09",
    "pages": [
        "Louise woke up slightly disoriented and sore in a place where she shouldn't have been. When she moved, Nathan's arms tightened around her.\n\n\"Good evening sweetheart.\" Nathan said kissing her shoulder.\n\n\"Umm hi.\" Louise replied softly.\n\n\"How about a soak in the Jacuzzi?\" Nathan asked. \"You must be sore.\"\n\nLouise blushed and wondered why. There was no reason for her to be embarrassed. She was a grown woman who had just gotten married just by having sex. It didn't feel quite real although she suspected that it would take some time to sink in.\n\n\"What are you thinking about?\" Nathan asked nuzzling her shoulder and inhaling deeply. He found the scent of their combined fluids intoxicating.\n\n\"I was just thinking that all it took for us to be married was to have sex... it doesn't feel real.\" she replied.\n\n\"Let me clarify something,\" Nathan said, \"there was no sex... it was the mechanics of sex but what we did was make love. Sex is something that is done to meet a physical need. What we did was meet not only a physical need but an emotional one as well. We are now irrevocably linked and there is nothing anyone or anything can do to break that link.\"\n\n\"What about Barb and Hans?\" Louise asked.\n\nHe really didn't want to talk about them but thought it was for the best that they did. It was another step toward getting outside issues out of the way.\n\n\"I can't answer that. Only they and the fates know what happened but if I had to guess, I would say that Barb did or said something that severed the bond. That Hans wasn't broken up about it tells me that he never felt drawn to her as a mate should. Why the fates paired them is anyone's guess.\"\n\n\"So if they had made love, it wouldn't have happened?\" Louise asked.\n\n\"No, it wouldn't have but I think that they would have had some major issues to work out.\" he replied. \"How about that soak?\" Nathan asked again when what he wanted was to make love with her again.\n\n\"Do you mind if we stay here for a little longer?\" Louise asked. She wasn't ready to leave the comfort of the bed or to face the real world.\n\n\"I don't mind at all.\" Nathan replied as he planted another kiss on her shoulder. \"You were incredible today. The way that you trusted me... I'm honored.\"\n\nLouise turned so that she faced him, careful to keep herself covered.\n\n\"Thank you for being so patient with me, it couldn't have been easy.\"\n\n\"I had my moments but you were very much worth the wait.\" Nathan replied as he rubbed against her. \n\nTo his surprise and pleasure, she rubbed back. Her touch was still tentative but that wasn't important. The longer they were together the more confident she would become.\n\n\"Am I doing something wrong?\" she asked.\n\n\"Not at all, I'm just pleased that you aren't afraid to touch me. There are so many ways in which I want to love you but all in due time.\" Nathan replied. \"But for now, I would love for you to explore again.\"\n\nLouise bit her lip and blushed. Truth be told she had enjoyed the exploring as much as he had and she didn't need too much urging to do it again. This time it didn't take as long for her touches to become more confident. By the time she reached his feet, she was giving instructions.\n\n\"Turn over... please.\" \n\nNathan chuckled and happily rolled over. His ass was the one place that she hadn't paid much attention to and he loved having it played with. She started at his feet and stopped at his ass giggling when he flexed the muscles. She laid a hand on each cheek and began to massage them. Then she got the idea to knead them as if they were bread dough.\n\n\"That feels good.\" Nathan said as he wiggled under her gently kneading hands wanting her to knead a little harder. \"Sweetheart? Keep doing what you're doing but harder... remember, you can't hurt me.\"\n\nLouise hesitated and kneaded Nathan's ass cheeks harder and then even harder as she saw that he was enjoying it. Nathan sighed in contentment, his mate was a quick study and then he realized that her empathy was a small part of it. She had moved from his ass to the small of his back alternately rubbing and kneading it as she worked her way up to his shoulders.\n\nHe turned over without being told to, he wanted her to see what she did to him. Louise looked into Nathan's eyes and then at his hardness. Slowly, she reached out, put a hand around it, and then paused. Her eyes widened as she realized what was happening, she could see what he wanted her to do. Nathan realized it at the same moment she did and closed down. He didn't want to overwhelm her or make her feel as if she had to do the things that he thought about.\n\n\"Nathan...\"\n\n\"We'll talk about it later.\" Nathan replied as he reached down and pulled Louise up so that she lay on his stomach.\n\n\"But...\"\n\n\"Shhh... later.\" he said as he pulled her in for a kiss. He sat up so that Louise was straddled across his lap with her legs on either side of him. With no effort at all, he lifted her and then eased her down on his throbbing cock. He wrapped his arms around her and buried his face in her neck as she began to grind in his lap. He nicked her neck, drew a little blood, and drank from her for the first time. He heard her gasp and felt her shudder as the third orgasm of her life ran through her.\n\nHe breathed against her neck, crying out as he came deep inside of her. Afterwards, he licked the small wound and held her in place. Before her, the post-coital cuddling was something that he did only because it was expected of him. Now it had taken on a whole new meaning and he couldn't imagine making love without it.\n\nIt wasn't long before Louise needed to go to the bathroom. She looked around for something to put on but the need had grown too great. Nathan wanted to tell her that as far as he was concerned, she never had to wear another stitch of clothing as long as they were alone, which gave him an idea. While she used the bathroom, he started running the water for their bath. Tonight he was going to take her home.\n\n*******\n\nBarb woke up tired and feeling as though she hadn't slept although she knew that she must have. She climbed out of bed and headed toward the shower hoping that the night before had been nothing but a bad dream. She knew that it wasn't a dream when the hot water hit her nipples. She cursed when the hot water hit them. \n\nThorne's words resonated through her mind. He would rather have had Louise than her, \"she wouldn't have rolled over like a bitch in heat looking for a payout.\" Was that really what he thought of her? That question prompted another, if he thought that and he had just met her, what did other people think? It shouldn't have mattered but it did and then she became angry. Who in the hell did he think he was using her like that?\n\n\"But you chose to be used.\" a voice that sounded like her own whispered. She had spoken aloud and didn't realize it. For the first time in her life, Barb began to question herself. The questions weren't about wanting money and nice things but her method of getting them. She was quickly realizing that she had gotten off relatively easily. She could have been raped, killed or sold off and she would have no one to blame but herself. \"I just have to be more careful.\" she muttered as she oiled her skin.\n\nShe had already decided that there would be no more clubs, which left dating services, and the free ones were out. Chances were that the men on there were losers and even if they weren't they wouldn't have money. She needed one of the higher end services where the applicants would be screened and that they would have to show proof of income. \n\nShe threw on a pair of jeans and a tee shirt determined that she was going to stay in. She hoped that her sisters stayed away, she didn't want to answer any questions about her evening with Thorne Blackwell. She was however curious about something, what was his connection to the Sinclaires? Moreover, he made a valid point. She needed to stop shouting the Sinclaire name from the rooftops. So far, it had done absolutely nothing for her except to make her a pawn in whatever issues Thorne had with them.\n\nShe shuddered slightly but also tingled when she thought about Thorne. She understood the shudder but the reason for the tingling evaded her. She didn't like him and didn't care if she ever laid eyes on him again. She picked up the menu, ordered a tuna sandwich with fries and a slice of cherry pie for dessert. While she waited, she logged onto her laptop and thought about calling Juliet.\n\nShe looked at the clock and decided that although it was early enough, she would wait. It was however too late to call her realtor. She turned on the television looking for one of her favorite shows. Any of them would do but she was hoping to find the one about the homes of the rich and famous. It took her several minutes before she located one of the shows. Her meal arrived a few minutes later.\n\nSomeone different brought it this time and took it to the designated spot without asking. It made Barb realize that she was and had been the topic of conversation. The man uncovered her food and started to leave clearly not expecting a tip.\n\n\"Wait.\" Barb called out. \n\n\"Yes Miss?\"\n\n\"Thank you.\"\n\n\"You're welcome. Was there anything else?\"\n\n\"No... thanks.\"\n\nBarb watched him leave and promptly forgot about him when she heard the theme song of 'Ice-T loves Coco' playing. She sat on the bed and ate her dinner not paying attention to the show.\n\n******\n\n\"Thorne!\" Allen said, \"What in the hell is your problem?\"\n\nHe didn't like the panicked, horrified and angry look that he saw on Thorne's face. \n\n\"Allen do me a favor and stop asking me what the fuck is wrong!\" Thorne shouted. \"I don't care to talk about it. Now get your ass to the club, I'm not going in and don't fucking call me unless the damned place is burning down!\"\n\n\"Thorne...\"\n\n\"Get the fuck out!\" Thorne yelled cutting him off.\n\n\"You know what Thorne? Go fuck yourself!\" Allen yelled back angry and hurt that Thorne had spoken to him in the way that he had and that he wouldn't share his problem with him.\n\nThorne heard the door slam, the engine of the car as it started and the squealing of the wheels as Allen tore out of the garage. He didn't move from his spot. He knew that Allen would get over it and would be back for more. He couldn't believe it! That gold digging bitch was his mate! If he accepted her, it would tie him to the Sinclaires and that was unacceptable. He would rather die first than mate with someone like her or to be tied to the traitorous Sinclaires.\n\nHis mind went back to Louise. He liked her as much as he could like anyone and the way that she fought for her sister was commendable. And the other one... she could read the thoughts of vampires, she was a fighter too. None of those two would have gone with him let alone do the things that their sister did and for what? Money? As far as he was concerned, Barb Yancy Simpson was nothing more than a slut who acted as if she was so much more.\n\nIt didn't matter; he wasn't going to claim her no matter what happened. Having decided that, Thorne stood up, stretched and decided to take a swim in the ocean. As he walked out of the house, in his mind, Barb Yancy Simpson ceased to exist.\n\n******\n\nNathan helped Louise out of the bathtub. He dried her and then himself off in the human way. He wanted her to get used to his touching her and after a brief argument; she gave in.\n\n\"Get used to it.\" Nathan told her.\n\n\"Does Patrick do this for Kevyn?\" she asked.\n\n\"I have no idea nor do I care.\" Nathan told her as he dried her back. \"My only concern is you and I plan on spoiling you so get used to it.\" he added.\n\n\"Does that mean that I'll never be able to dry myself off again?\" Louise teased.\n\n\"I didn't say that.\" Nathan teased back and then became serious. \"Louise, are you ready to go home with me? I'm not talking about Kevyn and Patrick's home but our home.\"\n\nHe waited for her to respond knowing that it was something that she hadn't given thought to. It didn't take her long to respond.\n\n\"Where do we live?\" she asked.\n\n\"Not far from the rest of the family which reminds me, we need to do a formal introduction and if possible, I'd like to do it before Vanessa and Veronica's wedding.\"\n\nLouise's heart pounded. This was something else that she hadn't considered.\n\n\"All of them?\" she asked nervously.\n\nNathan hugged her.\n\n\"All of them and they'll love you.\" he assured her.\n\n\"Ok... I guess... just make sure that I don't do anything wrong like read people.\" she replied nervously.\n\n\"I promise to keep you shielded and if you have no objections I'll tell everyone to keep their shields up. In the meantime, I have something to show you after we check in with your sisters.\"\n\nNathan went to the door when he heard someone approach. He opened the door without looking; he already knew who it was.\n\n\"Mr. Sinclaire? Here are your freshly laundered clothes.\"\n\n\"Thank you.\" Nathan said and handed the man a twenty-dollar bill.\n\n\"Who was that?\" Louise asked from the bathroom.\n\n\"Our clothes, I had them cleaned.\" Nathan replied. \"Why don't you get dressed and I'll call Patrick to see what the plans for tonight are.\"\n\n********\n\nKevyn was nervous. \n\n\"Do you think that they did it?\" she asked. \"She wanted to talk about it and we did for a few minutes...\"\n\n\"Kev, she's fine. If she wasn't Nathan would have called.\" Patrick assured her. \"And if she wasn't ready, he wouldn't have pushed her.\" he added.\n\n\"I know... you're right. What do you think happened with Barb and Blackwell?\" she asked changing the subject.\n\n\"Hard to say but she looks none the worse for wear.\" Patrick replied. \"Maybe she's learned her lesson.\"\n\n\"Maybe, but I don't think so.\" Kevyn replied. \"If anything she'll be more careful.\"\n\n\"Kev baby, will you stop pacing?\" Patrick said as she walked by him for the fifth time. \"I'm sure that both of them are fine.\"\n\n\"This must be what it's like to have children.\" Kevyn said as she sat in Patrick's lap.\n\n\"Maybe.\" Patrick chuckled, \"but I imagine that it would be more nerve-wracking. Have you ever thought about having children?\"\n\n\"When I was with Lonnie, absolutely not. After that? No because I had no plans of ever being with anyone again.\"\n\n\"What about now? Would you want children with me?\" he asked.\n\nKevyn took a minute to gather her thoughts.\n\n\"One of the first things that I noticed about this family was that you loved each other. When Veronica was kidnapped, all of you joined and did what needed to be done so that she could be brought home safely. I noticed how protective everyone was of that little pistol Victoria and I remembered thinking that I wished that my family was like that. I also knew that I wanted my child to grow up in a family where they would be loved and protected. That your family had its issues doesn't take away from the care that you show each other so yes; I would want children with you. The only thing that I would change about this family is its past but then even that is a testament to how people can change. It gives me hope for Barb.\"\n\n\"I think that our children are going to be beautiful and brilliant.\" Patrick said. \"This brings up another topic, school. You haven't changed your mind about that have you?\"\n\n\"No and if we can get everything straightened out, I would like to go back nest semester.\" Kevyn replied.\n\n\"It can and will be worked out, what about work?\" \n\n\"I don't know... if I quit I can go to school full time.\" Kevyn replied.\n\n\"Then quit.\" Patrick advised. \"You can take most of your classes on line if you want.\"\n\n\"I don't know if I'm disciplined enough for that but then again, I'm quite sure that you'd keep me on target.\" She replied.\n\n\"I would at that.\" Patrick agreed. \"Let me know what you decide and we'll make it happen.\"\n\nPatrick's cell phone rang before Kevyn could reply.\n\n\"Nathan! How are things? Really? Congratulations! Louise is all right? Good, Kevyn was concerned. Can I call you back? Ok give me a few minutes... talk to you soon.\"\n\n\"They did it?\" Kevyn asked excitedly.\n\n\"Yes and Louise is fine. They want to know what our plans for tonight are. I think he wants to show her the house that he's building for her.\"\n\n\"He's building her a house? That is so awesome!\" Kevyn exclaimed.\n\n\"He designed it himself with her in mind. Anyway, he wants to know if we're going to meet for dinner and /or go see Barb.\"\n\n\"Let's go see Barb first and then we can have dinner. That way they can be on their way and we can go home... she won't be coming back will she?\"\n\n\"No sweetheart, she'll go home with Nathan.\" Patrick replied.\n\n\"You know how it is when you know something is going to happen but you're still surprised when it does? That's how I feel. I knew that at some point that they would mate and I'm thrilled for them but I'm still surprised. Does that make sense?\"\n\n\"It does.\" Patrick confirmed. \"But remember, they don't live far from us.\"\n\n\"Alright, Barb and then dinner.\" Kevyn repeated still dazed by how quickly things had changed for Louise.\n\nShe was still thinking about it when Patrick called Nathan back and when he got off the phone. So much change and in such a short period of time she mused. \n\n\"All set.\" Patrick said, \"They'll be here in about twenty minutes. I think that's more than enough time to make love, don't you think?\" Patrick asked as he stripped them.\n\n**********\n\nTwenty minutes later, Nathan and a nervous Louise were standing outside of Kevyn and Patrick's suite. Before knocking, Nathan pulled her away from the door and into a corner.\n\n\"What's bothering you?\" he asked.\n\n\"Nothing really.\" she replied. \"I'm being silly.\"\n\n\"Lou, if you're bothered by something I want to know about it. It doesn't matter how silly you think it is, if you're bothered, then it isn't silly. Now what's wrong?\"\n\n\"I'm just nervous... I mean... never mind.\"\n\n\"No, not never mind.\" Nathan said firmly. \"This isn't Pittsburgh where you couldn't or wouldn't say anything and where to some degree you chose to suffer alone. Those days are over and you need to remember that. Sweetheart, you aren't alone anymore, you can come to me with anything, and I do mean anything. This is a two way street, I will come to you as well now talk to me.\"\n\nTears burned Louise's eyes as she listened to Nathan. He was right, but it was so hard.\n\n\"I'm just nervous about us... I mean we were single when we last saw Kevyn and now...\"\n\nNathan was beginning to understand what she was thinking and tried to ease her anxieties.\n\n\"Are you worried because it seems to have happened so quickly?\" he asked.\n\n\"I guess so... I mean how long have we known each other?\" she asked.\n\n\"We should have talked about this before we mated. That's my fault and I apologize.\" Nathan said touching her face. \"Relationships in my world happen much faster than in the human world. What you're feeling is normal and it isn't silly. Some of us would consider two weeks too long and then there are those who think that it isn't long enough but it varies from couple to couple. What I'm trying to say is that Kevyn and my uncle's relationship was just as fast as ours was and they had issues to deal with on top of it. They aren't going to think any less of you and my guess is Kevyn is chomping at the bit to see you.\"\n\nLouise took a deep breath and relaxed. \n\n\"Thank you.\" she said as she pulled him down and kissed him on the cheek. \n\nNathan hugged her grateful for the small step forward in their public lives.\n\n\"Ready?\" he asked after a few minutes.\n\n\"Ready.\" Louise replied.\n\nThey had just walked up to the door when it flung open.\n\n\"There you are!\" Kevyn squealed as she threw her arms around Louise and then Nathan. \"You're really alright?\" she asked.\n\n\"I'm fine.\" Louise replied, \"Are you going to let us in?\"\n\nWhen they were sitting, Kevyn in Patrick's lap and Louise to Nathan's right. Barb was the topic of discussion.",
        "\"What can we say?\" Louise asked. \"We can only let her know that we're here if she needs us.\"\n\n\"Do you think that he raped her?\" Kevyn asked.\n\n\"I don't think so. Whatever happened, she was for the most part willing but he did hurt her.\" Louise replied.\n\n\"Patrick, you know this guy, what do you think?\" Kevyn asked.\n\n\"I don't really know him but I agree with Louise. She did agree to go with him and from what I know about Thorne Blackwell, rape isn't his thing but other forms of humiliation are. That's why he dropped her off in the worst part of town and in an area known for prostitution. He was telling her what he thought of her.\"\n\nAfter talking about it for several more minutes, they decided to go see Barb and talk with her. Both Kevyn and Louise had to hear from her mouth that she was all right.\n\n*********\n\nBarb looked at the list of dating sites and then began the process of elimination. She started at the top of the list, pulled the website up, read everything that it had to say and then Googled it. As soon as she saw the three star rating, she crossed it off her list and moved on to the next one on the list. This one she crossed off almost immediately. While it was highly rated, it was a site for working class people. She was on the third site when she heard the knock at the door.\n\nShe knew who it was and wanted to ignore it but knew that they wouldn't go away or that they would keep coming back. She closed the laptop and went to the door to face her family. As soon as the door was opened, Louise burst in and hugged her.\n\n\"Are you sure that you're alright?\" she asked scanning Barb's face.\n\n\"I'm fine, what are you doing here?\" Barb asked not returning the hug and making it clear that she didn't want to see them.\n\n\"We wanted to check on you.\" Kevyn said, \"Can we come in?\"\n\nBarb hesitated and then stepped back. Her thinking was to get the visit over with so that she could continue her dating service search.\n\n\"How are you doing?\" Patrick asked.\n\n\"Fine.\"\n\n\"Barb... did he hurt you?\" Louise asked.\n\n\"No, not at all.\" Barb replied. \"We just decided that we really weren't a good match.\" she added.\n\n\"Barb....\"\n\nBarb looked at Kevyn and gave her a cool smile.\n\n\"Say what you came to say and then leave.\"\n\n\"What do you think that I'm going to say?\" Kevyn asked surprised at the hostility in Barb's tone.\"\n\n\"Let's see, you want to tell me how stupid I was for going with a strange man and having sex with him. You also want to tell me how lucky I am that I wasn't raped or killed. But you know what?\" Barb asked, \"This was your fault.\"\n\n\"What? My fault?\" Kevyn asked shocked. \"Do you not remember us coming to that club and trying to get you to leave with us? You chose to go with him!\"\n\n\"If you had done as I asked and introduced me to men that you knew were safe, this wouldn't have happened!\" Barb screamed. \"Because you were selfish and trying to protect your precious money... I put myself at risk! So what you tried to get me to leave! But that was so you wouldn't feel guilty if anything happened. You could console yourself by saying that you tried.\"\n\n\"Barb...\" Louise said.\n\n\"And you! You were just pitiful throwing up all over the place! You are nothing! How could he want you over me?\"\n\nBefore she could begin the next sentence, Nathan was in her face, his blue eyes blazing. He had heard enough.\n\n\"Listen to me you self-serving stupid bitch! You've been nothing but trouble since you got here. Are you really so stupid that you would offend a man's wife in front of him?\"\n\n\"W....Wife? You ...\"\n\n\"Last night.\" Nathan snapped. \"But the insults aren't even all of it. I have watched you snub good people, which include your sisters who obviously love you although I don't know why. You are a jealous, selfish, money-loving bitch who in my opinion doesn't deserve their concern. You say that this is Kevyn's fault? It's not. It's yours. And do you know why? It's because you don't see what's in front of you! You equate love and happiness with money and possessions. You were lucky this time but the next time you may not be. A word of advice... evaluate what's really important and one more thing, this will be the last time that you will ever say anything negative about my wife, your sister. Is that clear?\"\n\nBarb stepped back and looked up at Nathan.\n\n\"You can talk about not needing money all you want.\" she replied. \"You have it! You don't have to worry about where the next car payment is coming from or whether you can afford something. You have everything!\"\n\n\"And without Louise it meant and means nothing! You told her that she was like you, she isn't. Neither is Kevyn for that matter. But I will tell you this, if I had to chose between my money and Louise, it would be Louise hands down. Now, once more, I'll warn you, watch your mouth about Louise. Do you understand me?\"\n\nBarb continued to look at Nathan and then looked away.\n\n\"I got it.\" she murmured.\n\n\"Good.\" Nathan said and backed away taking his place next to Louise.\n\nSomething that Barb said bothered him and he asked for clarification.\n\n\"What did you mean when you said that he wanted her?\"\n\n\"Nothing, he was just talking...\"\n\n\"He hurt you emotionally.\" Louise said softly. \"He said things that he knew would hurt you. He used me to hurt you, don't you see that?\"\n\n\"You weren't there!\" Barb snapped, \"You didn't hear the things that he said! He meant it! He wanted you!\"\n\n\"What did he say to you?\" Louise asked gently as she approached Barb taking her hand when she reached her. \"What did he do to you?\"\n\n\"I would like for you all to leave.\" Barb replied pulling away from Louise. \"Oh Kev, do you have those keys with you?\" she asked as an afterthought.\n\n\"Yes but Barb we need to talk about this.\" Kevyn replied.\n\n\"There isn't anything to talk about and I'm sorry about what I said.\"\n\nNo one believed her apology but no one challenged it.\n\n\"We're going out to dinner, would you like to come? We can order in if you want.\" Kevyn offered.\n\n\"I already ate, thanks and I really would like for you to leave. I want to be alone.\" Barb replied.\n\nAfter they left, Barb sat on the bed not sure of whether to laugh or cry. She couldn't fathom why Nathan Sinclaire would marry her sister and she didn't understand his anger. She had only told the truth as she saw it. In the end, she laughed. It was only a matter of time before she found someone as rich as the Sinclaires. \n\nShe opened up her laptop and continued the search for the perfect dating service.\n\n********\n\nPatrick and Nathan stepped away to give Kevyn and Louise a chance to talk for a few minutes. \n\n\"What do you think?\" Kevyn asked Louise.\n\n\"That she hasn't learned her lesson and no matter what, we have to stick by her.\"\n\n\"I know but ... was she right? Was this my fault?\" Kevyn asked.\n\n\"You already know the answer to that.\" Louise replied gently. \"You also know that Barb doesn't take any responsibility for her actions. It's easier to blame us than to admit that she's wrong.\"\n\n\"I know... I'm just sorry that your mating started out with so much drama.\"\n\n\"It's alright,\" Louise replied \"and from what I hear, all of the matings started out with drama. Some of the drama worse than others. Sometime, when the dust settles, could we talk about it? It had to have been hard for you.\"\n\n\"It was hard for both of us and sometimes it still is. I look at him and I just don't see it. I don't see the person that he says he was. I still struggle with the idea of an entire family doing such a horrible thing but then... Why don't we plan a girl's night so that we can talk?\" Kevyn asked.\n\n\"I think that's a good idea.\" Louise replied.\n\n\"Who knows? Maybe Barb will come too.\" Kevyn added as they walked to where Patrick and Nathan were waiting for them.\n\nNathan hugged Louise and kissed her head.\n\n\"Are you alright?\" he asked gently probing her.\n\n\"I'm fine and stop that. I don't like it.\" she replied quietly. She knew why he did it. He didn't trust her to tell him if she wasn't all right.\n\n\"I'm sorry sweetheart, I had to be sure.\" she heard from within her head.\n\n\"Me too.\" she replied in kind. \"I promise to talk to you but please don't probe me.\"\n\n\"As long as you keep your word, I won't probe. Agreed?\"\n\n\"Agreed.\" Louise replied aloud.\n\n\"Are you hungry?\" Nathan asked.\n\n\"Starved.\" Patrick replied. \"What sounds good?\"\n\n\"Kev, Lou, any preferences?\" Nathan asked. He didn't care where they went just as long as they had plenty of food.\n\n\"Del Taco.\" Kevyn said and waited for a reaction.\n\n\"Sounds good to me.\" Nathan said taking Louise's hand and heading toward the front door of the hotel. \n\nAs they passed the front desk, Hans looked up at them, nodded and then smiled. Louise smiled back relieved that he was all right.\n\n******\n\nLouise was unprepared for the attention that they generated when they walked in to the restaurant. Of the four of them, she seemed to be the only one affected by it. Nathan, sensing her discomfort pulled her close into his side sending out a clear message.\n\nShe watched amazed as Nathan and Patrick ordered several of everything on the menu and then asked for the hottest sauce that they had. She almost felt sorry for the poor cashier who barely kept up with the order.\n\n\"Is this for here or to go?\" he asked obviously relieved that they had reached the end of the order.\n\n\"Here.\" Patrick said as he pulled out his wallet. \"And don't forget the hot sauce.\"\n\nThe order consisted of so much food that it took four trays to carry it all with Nathan going back for the drinks. Kevyn and Lou each ate two tacos and then watched Nathan and Patrick devour the rest of the food and then going back for more.\n\nFinally sated, the conversation veered toward plans for the rest of the evening. \n\n\"We're going home.\" Patrick said, \"You're welcome to come back with us if you like.\"\n\n\"Thanks but we have someplace to be and then we're going home too.\" Nathan said. \"A question, have you thought about when we're going to formally introduce our mates?\"\n\n\"No.\" Patrick replied \"but I guess we should before the wedding which doesn't give us much time. Where do you want to have it?\"\n\n\"Our house.\" Nathan said. \"I've never had a gathering there and I can't think of a better reason to start... how about this Friday?\"\n\n\"Kev? What do you think?\" Patrick asked.\n\n\"I'm ok with it if Lou is.\" she replied.\n\n\"I guess... but that's not very long to plan something,\" she said.\n\n\"There's nothing to plan.\" Nathan said, \"We'll have an old-fashioned cookout. All we have to do is put the word out and everyone will come with food in hand.\"\n\n\"Sounds good.\" Patrick said as he pulled out his phone and called Ethan.\n\nA few minutes later, he hung up.\n\n\"It's a go. He and Katrina will take care of calling everyone else.\"\n\nAs nervous as she was, Louise felt a sense of relief. Meeting the family of one's husband was a normal activity and it felt good to have a little normalcy. She would tell Nathan that as he drove them to their house, which was half, built.\n\n\"I'm glad but Lou for the most part we are what you call normal. It's just that the differences are more pronounced.\" Nathan explained. After thinking about it, Louise realized that he was right.\n\n\"So where are we going?\" she asked.\n\n\"It's a surprise.\" Nathan replied as he took her hand, brought it to his lips and kissed it.\n\n\"Tell me what it's like to be a vampire.\" Louise asked out of the blue.\n\n\"It's just another lifestyle that if you're born to it you don't know any different.\" he replied. \"I was born a vampire and so was Joseph. Actually, all of the males who are direct descendents of the original Sinclaire are born vampire even if one of the couple is human. There are a few who were turned but there aren't many and if they mate with a vampire, their male children will be vampire.\"\n\n\"What if one of the pair is human?\" Louise asked.\n\n\"The male child will be vampire. If it is a female, it could go either way. Katrina was human when she conceived the twins. It just so happened that they were born vampire. The same happened with Victoria. No one knows why it's that way and I don't think anyone has given it too much thought since it's always been that way.\"\n\n\"What would have happened if the twins had been born human?\" Louise asked.\n\n\"They would have been loved, protected and taught how to keep the family secrets as soon as possible.\" Nathan replied. \"The hope would be that their vampire mate would find them and they would become immortal as you now are.\"\n\n\"So the ones who are born human, they die if their mates don't find them?\" Louise asked.\n\n\"Yes.\" Nathan replied. \n\n\"I don't understand why the woman doesn't change.\" Louise said. \"I mean if it means that you don't have to watch your daughters die...\"\n\n\"It comes down to what you can live with I guess. Many don't want to give up the option of going out into the sunlight and things like that. For some, it's a necessity. They may not be able to afford security like we can and they may be the only source of protection during the daytime hours for their mate.\" Nathan explained. He was pleased with the questions; it showed that she was interested in learning about her new life.\n\n\"Who would they need protection from?\" she asked.\n\n\"There are those that we call hunters. I think that we've mentioned them before. They are quite dangerous and their primary goal is to destroy our kind. They see us as evil monsters that live only to rape and kill. We haven't heard of one in a long time but that doesn't mean that they aren't around. Every couple of centuries, their population grows, there's a war, and they die off and go dormant until the next surge. That is the biggest reason that we ask our mates never to go anywhere alone. When you were at Kevyn's apartment, you were being guarded. We would never let you go anywhere without protection.\"\n\n\"Because if caught, we could be used against you.\" Louise said understanding.\n\n\"Exactly.\" Nathan replied. \"We're almost there, close your eyes.\"\n\nLouise closed her eyes wondering what the secret was. A few minutes later, the car came to a stop. Louise waited for Nathan to come to her side of the car to help her out. When she was outside, she inhaled deeply savoring the smell of the ocean air. The sound of the ocean hitting the shore sounded like a lullaby to her ears. She was about to open her eyes to look when Nathan stopped her.\n\n\"Not yet, just a few more minutes.\" he said as he picked her up.\n\nA few minutes later, Louise felt herself being lowered to the floor. Nathan held her by the waist until she steadied\n\n\"Are we home?\" she asked.\n\n\"Yes at one of them.\" Nathan replied. \"You can open your eyes.\"\n\nLouise opened her eyes and saw the ocean spread out before her. If she wanted to go put her feet in it, all she had to do was to go out to the patio, walk down a short flight of stairs; walk straight ahead and she would be there in a matter of minutes.\n\n\"This is beautiful... where are we?\"\n\n\"Don't you remember this place?\" he asked hugging her into him.\n\nLouise looked for anything that told her that she had been here before. Then she saw the rock formation to her right.\n\n\"This is your beach but a house wasn't here.\" She said.\n\n\"No, it wasn't.\" Nathan confirmed. \"I designed it the day I took you back to Kevyn and Patrick's house and started on it the next night. This is our home for as long as you want it to be. Let me show you around.\"\n\nLouise didn't know what to say and began to feel a little overwhelmed.\n\n\"Nathan, you didn't have to build me a house.\" she said after a few seconds.\n\n\"I know,\" Nathan replied, \"but when I saw how you loved the ocean and how it seemed to soothe you I decided to build you a home here. We can live here all of the time or come here when we want and need to be alone. I leave the choice up to you. Would you like to see the rest of it? It won't be done for a couple of weeks but we can start thinking about colors and things like that.\"\n\nLouise allowed herself to be led from the view of the ocean acknowledging the fact that Nathan was right. The sounds and the smells of the ocean were soothing to her but that didn't mean that he had to build her a house. An occasional trip to the ocean would have sufficed. Somewhere in her thought processes, the question of whether Barb was right about her popped up. \n\n\"She's wrong.\" Nathan said softly. \"There's nothing wrong with wanting, appreciating or accepting beautiful things, it's how those things are obtained and in the spirit in which they are accepted. You didn't con me or ask me to do this; you weren't even expecting it. I did this because I love you and I think that its time that you be given beautiful things and that you learn how to accept them.\"\n\nAs Nathan talked, he realized that whatever small amount of empathy he had, it was magnified. He didn't have to go into her head to know what she was thinking; he felt it. He was going to tell her that he hadn't read her when she spoke.\n\n\"You knew what I was feeling didn't you?\" she asked.\n\n\"Yes but I didn't read you, I just knew.\" he replied becoming aware that he would have to watch himself around other people. He wondered how she had managed all of those years without knowing how to shield but then realized that on some level that she did know. It just hadn't been a conscious thing. Then he thought about Barb and the other Yancy children. What gifts if any did they have and where had they come from? It was something that he planned to investigate at some point. \"Shall we continue the tour?\" he asked.\n\n\"Ok, but please... no more houses or anything like that.\" Louise said.\n\n\"Agreed... unless we talk about it first.\" Nathan amended.\n\nHe took her on a tour of the house that started and ended with the room that they had started in, the bedroom.\n\n\"It's beautiful.\" Louise said at the end of the tour. \"Thank you.\"\n\n\"Is there anything that needs to be changed? It isn't too late.\" Nathan said.\n\n\"It's perfect as it is.\" Louise replied, \"Can we go out on the beach?\"\n\nA few minutes later, they were walking along the beach hand in hand. Nathan carried a blanket that was in his car over his shoulder wanting one hand to be free just in case he needed to defend Louise. As they walked, he scanned the area for threats and trespassers. About a quarter of a mile down the beach, he heard the sounds of giggling and love making. He looked over at Louise who wasn't really paying attention, her eyes riveted on the ocean and trusting him to keep her safe.\n\nFrom the sounds that the couple was making, Nathan knew that they were almost through. He stopped walking, looked around and spread the blanket on the sand.\n\n\"Sit here, I'll be right back.\" he told her with a kiss.\n\nHe found the couple basking in the afterglow of their lovemaking. He made a sound to alert them to his presence.\n\n\"Shit!\" he heard the man swear.\n\n\"What?\" the woman asked.\n\n\"Someone's here, this is a private beach...\"\n\n\"We're trespassing?\" she asked alarmed, \"What if it's the police?\"\n\n\"Just hurry up and get dressed.\" the man replied. \"Maybe it's the guy who told me about this place giving me a warning.\"\n\nNathan looked behind him and could see Louise sitting where he left her. He scanned the area for danger and turned back to the couple curious as to who would have told them about this section of the beach. It had to be one of his people, no one else would be on the beach and it explained the presence of the couple.\n\nWhen they came from behind the rock that they had been hiding behind, Nathan spoke.\n\n\"Hello.\"\n\nThe woman let out a startled yelp and the male to his credit pushed her behind him ready to protect her. He glared at Nathan oblivious to the difference in their height and weight.\n\n\"I know that you're aware that this is a private beach so why are you here?\" Nathan asked.\n\n\"Why are you here?\" the man countered.",
        "\"I have every right to be here.\" Nathan replied, \"Who told you about this beach?\" \n\n\"None of your damned business!\" the man replied wanting to look brave in front of the woman and not wanting to give up his source.\n\nNathan gave the man a pleasant smile.\n\n\"It is my business because I own this beach, now who let you onto my property?\" Nathan asked with a soft mental push.\n\n\"For god's sake Frankie!\" the woman exclaimed, \"Tell him so we can get out of here before he calls the cops!\"\n\n\"It was some dude who says that he's a security guard.\" Frankie replied.\n\n\"Does this dude have a name?\" Nathan asked.\n\n\"Yeah... Adam.\" Frankie replied even as he tried to keep his mouth shut.\n\n\"What did you give him in return?\" Nathan asked with another mental push.\n\n\"I... two-hundred bucks.\"\n\n\"Are you aware that just three miles down that there is a beach designated for public use? And it wouldn't have cost you anything.\" Nathan said.\n\n\"Yes but this was more private...\"\n\n\"Private is the operative word.\" Nathan said interrupting him. \"You have fifteen minutes to leave my property. If I see you here again, I will do as your date says and call the police. I also want you to tell all of your friends that they are not to come here. Now get going.\"\n\nNathan turned and headed to Louise who had moved closer to the water. When he reached her, he sat down beside her and put an arm around her determined not to let her know that he was angry.\n\n\"What happened? She asked.\n\n\"Nothing serious.\" Nathan replied, \"Just a couple of trespassers.\"\n\n\"Then why are you so angry?\" Louise asked.\n\n\"One of my guards let them on the property. That in and of itself is bad enough but he took their money.\" Nathan replied.\n\n\"What are you going to do about it?\" Louise asked.\n\n\"Fire his ass!\" Nathan replied.\n\n\"Without talking to him first? Maybe he needed the money.\" Louise replied.\n\n\"That isn't an excuse.\" Nathan replied. \"Anyone who works for us signs affidavits saying that they will do their jobs as described. Part of his job was keeping this area secured. Not only that, each of our employees know that we have an open door policy. If assistance is needed, it is always given and steps are taken to help in alleviating the causative factors.\"\n\n\"But maybe he didn't feel comfortable in approaching you. Speaking from personal experience, whenever I needed help from Kevyn, I always hesitated. I knew that she would help us but just the idea of having to go to her.... I think that you should talk to him first and then decide.\"\n\nNathan didn't agree with her but saw no reason not to do as she suggested.\n\n\"Alright sweetheart, I'll talk to him before I fire him.\" he said as he pulled her closer and kissed the top of her head.\n\nLouise didn't argue. She knew that Nathan had already decided and that it really wasn't up for discussion. It was enough that he had listened to her. She also knew that after he thought about it, he would take some of what she said into account when he talked to the guard.\n\nShe laid her head on his shoulder feeling a little like a hallmark card commercial. \"This is real.\" she murmured to herself.\n\nNathan heard her but didn't respond choosing to let her acclimate to things at her own pace. He lost track of how long they were sitting there watching the waves when he felt a soft, tentative movement on his thigh. He didn't move or comment but waited to see what she was going to do. His breath caught as her hand made its way toward his cock, which was now screaming to be released from the confines of his shorts.\n\n\"Almost there.\" he thought as the touch became more confident.\n\n\"Nathan?\" a voice called from behind them, \"I didn't know that you were coming.\"\n\nNathan bit back his irritation at the interruption and waited until the guard was standing in front of them.\n\n\"It was an unplanned visit... where's Adam?\" Nathan asked.\n\n\"I don't know, he called about an hour ago saying something about having to leave early and asked me to come in to finish his shift.\" the tall, handsome vampire replied.\n\nNathan nodded and then looked up at the tall, dark skinned vampire.\n\n\"Winston? Why are you still doing guard work? I thought that you took your bar exam.\" Nathan said surprised but pleased to see his friend that he hadn't seen much of since he began law school.\n\n\"I did.\" Winston replied. \"But the results aren't in yet and besides, what else would I do while waiting? Gina says that I'm driving her crazy and threatened to leave me if I didn't leave the house and give her some peace.\"\n\n\"I understand.\" Nathan replied chuckling as he remembered how intense Winston could be. \"Do you have a job lined up or is that dependent on the results of the bar?\"\n\n\"I haven't really looked.\" Winston replied.\n\n\"Why not? You're brilliant; any law firm would be thrilled to have you.\" Nathan replied.\n\nWinston hesitated. He wasn't ready to make his pitch but the opportunity was here.\n\n\"There's only one firm that I'm interested in working for.\" he replied \"And that's Joseph's.\"\n\n\"Have you spoken to him about it?\" Nathan asked.\n\n\"Not yet.\" Winston replied. \"I was waiting for the results to come in.\"\n\n\"Talk to him before that, who knows? He may hire you on the spot.\"\n\nLouise watched the easy interaction between Nathan and Winston and understood something. Nathan was generous to a fault. The young vampire standing in front of them was someone that he had helped and considered a friend. She raised her shields so that she wouldn't infringe on the young man's privacy.\n\n\"Winston, I want you to meet my mate Louise. Louise this is Winston Carter a friend of mine.\"\n\n\"I heard that you found your mate. Congratulations! It's a pleasure to meet you Louise.\"\n\n\"Hello.\" Louise said a little shyly.\n\n\"Hey, there's a cook out at our place in a few days, why don't you come and bring Gina with you?\" Nathan said. \n\n\"Is that when you're going to formally introduce your mate?\" Winston asked.\n\n\"It is and I would love to have you there, who knows maybe I'll finally win a game of chess.\" Nathan said half-teasing.\n\n\"Sounds good. Well, I had better get moving. I've found a few people here... Nate, this is only a suggestion but if you're going to be living out here you might want to think about personnel that you have guarding it.\"\n\n\"Thanks.\" Nathan said. \"We'll see you in a few days.\"\n\nAfter Winston left, Nathan explained how he and Joseph met Winston.\n\n\"Winston was this scrawny kid who used to hang around near the grounds. He wasn't any problem; he just liked our house and studied on the other side of the gate because it was quiet. After a while, we became friends and played chess. Even then, he was one hell of a chess player and I have yet to beat him. He had this way of knowing what my next move was going to be even before I did. Joseph and I used to plan and plot our moves before each game and still we lost. I'm going to tell you why I respect Winston so much and why I consider him a friend.\n\nOne day, he didn't show up at the house. I was all set to beat his behind in chess but he didn't show. I didn't worry too much about it but then he didn't show up the next day or the next.\"\n\n\"How old was he and where was his family?\" Louise asked.\n\n\"He was young, not quite twenty. He lived with his mother and worked part time to help with the bills while he went to the Community College. His father had died some years before leaving Winston and his mother alone. I didn't know any of this until later. Anyway, when he hadn't shown up after a week, Joseph and I went looking for him. We found him in the park studying. I asked him where he'd been and he didn't want to tell me. He assured us that he was all right and that he would come around again soon.\n\nWe believed him, why wouldn't we? He had never lied to us before. He came around a week after that, we played chess and I beat him.\"\n\n\"But you just said that you've never beaten him.\" Louise interrupted.\n\n\"I don't count that as a victory.\" Nathan explained, \"He was distracted and making moves that he never would have made. By the end of the game, I understood that he was telling me in the only way that he knew how that he needed help. As I'm sure you saw, Winston is a proud man and for him to admit that he needed help was a very difficult thing for him.\"\n\n\"What happened to him?\" Louise asked.\n\n\"His mother died.\" Nathan said softly. \"She was already gone when we saw him at the park. When she died, he wasn't able to keep the apartment.\n\n\"He was living in the park.\" Louise said.\n\n\"It took him a week of living in the park to decide that he needed help. That chess game was the only way he knew how to ask. After insisting that he tell us what the problem was, he finally told us that his mother had died and that he was living the park. Now here's the thing, he could have played chess for money- he was that good but he didn't, he loves the game and would have seen it as sacrilege. He could have joined any one of the gangs that ran in the area, he could have done any number of things to survive including stealing but he didn't. He came to me because he trusted me as a friend.\"\n\n\"That's why you're going to fire that guard isn't it?\" Louise asked. \"You hold everyone to the same standards as Winston.\"\n\n\"If Adam was having difficulties, he could have made that need known even if it was leaving an anonymous email in the special email account set up just for that purpose. He would have gotten an ID number....\"\n\n\"I understand.\" Louise replied. \"When was Winston turned?\"\n\n\"About ten years ago. By then he knew what we were. He had always had his suspicions but out of respect for us and our privacy, he never asked.\"\n\n\"He wasn't afraid of you?\" Louise asked.\n\n\"No, we were known in the area and he had no reason to be afraid of us, we were friends.\" Nathan replied.\n\n\"Why was he turned?\" \n\n\"He asked.\" Nathan replied. \"Of course we said no but Winston is nothing if not persistent. It took him a year to convince us that he would be an asset to us. I was one of the ones present at his turning and one of the ones who vouched for him. In effect, I put my life on the line for him. If he had done anything illegal or to put us in jeopardy, both of us would have been killed.\"\n\n\"You trusted him that much?\" Louise asked.\n\n\"For that year that Winston worked to convince us to turn him, I examined him and his motives. I saw nor did I feel any deceit. Once I was convinced, I went to Uncle Ethan on his behalf. After he was turned, he worked for us and paid his own way through school. That's why he just took his bar. He worked his ass off refusing any additional help. Things got easier when he met and mated with Gina about five years ago. She's a nurse and was able to help with the money end of it. Do you see why I have a problem with Adam and what he did?\"\n\n\"I do but not all of us are like Winston.\" Louise replied.\n\n\"Alright, let's take you.\" Nathan said. \"You didn't want to ask Kevyn for help but you did, why?\" \n\n\"Because like it or not, I needed help and I had to swallow my pride if I wanted it and there wasn't just me to consider.\" Louise replied. \"I get it but will you still talk to him?\" Louise asked.\n\nNathan wanted to get back to where they were before Winston interrupted them so he quickly agreed. He placed her hand back on his thigh and waited. Slowly, Louise's hand began to move up his thigh. Nathan felt the need to reassure her.\n\n\"Louise, never be afraid to touch me wherever you wish. I'm yours.\"\n\nThat statement seemed to be what she needed to hear but she was still tense. She was afraid that someone else would show up. \n\n\"Let's go back to the house.\" Nathan suggested.\n\nLouise started to agree but changed her mind. It was time for her to step out of her little box.\n\n\"I want to stay here... please.\"\n\nShe moved her hand further up his thigh and stopped just short of the tip of his cock. Her hand rested lightly on his thigh as she debated as to what she should do next. Finally, she moved her hand so that it lay on his erection and began to rub the length of it.\n\nNathan sighed at the contact. He reached out with his senses listening and feeling for the presence of others. Sensing no one, he eased her back on the blanket and stretched out beside her. He ran a finger along side her face and traced her lips before kissing her. He gently offered her his tongue and waited for her acceptance before giving her more.\n\nLouise moaned when his tongue touched hers. She soon forgot that they were out in the open and that someone could walk up and see them. She pressed up against Nathan, wrapped her arms around his neck and returned the kiss. They both noticed that with each physical encounter, she was a little less reticent and responded more quickly. She was finally beginning to become comfortable with their bodies.\n\nNathan reached under her shirt, unclasped her bra and ran his hands up and down her back with firm but gentle strokes. Each downward stroke took his hands closer to her ass. When the last downward stroke had his hands on her ass cheeks, he stopped and squeezed them gently wondering if she would like having her ass played with as much as he did. \n\nA soft moan answered his question so he continued the gentle manipulation until she wiggled impatiently against him. In seconds, they were naked and Louise was sitting on top of him impaled on his cock. She seemed to have forgotten that they were in plain sight of anyone who happened to walk by.\n\nNathan looked up at her, stared at her for several long seconds memorizing her face. Her eyes were closed but the pleasure she was feeling was obvious as she bit her lip and soft cries escaped her lips. He lay still not moving, just watching and waiting for signs that she was going to come.\n\nThe first sign came a few minutes later. Louise's movements were becoming more erratic, her breathing more labored as her vaginal muscles began to contract around his cock. At that point, Nathan took over. He placed his hands on her hips and held her in place as he began thrusting deep inside of her.\n\nHe didn't know if it was because they were newly mated or the setting but the beach was no longer just a beach. In his mind, it had become a magical place that he would never see in the same light again. It was now their beach. It was now sacred ground that needed to be protected. His toes curled signaling the beginning of his orgasm. His thrusts while controlled became harder and faster.\n\nHe kept his eyes on Louise's face committing every detail of her visible pleasure to memory. When she came, it was with his name on her lips. Nathan didn't stop; he wanted to coax another orgasm from her. He thought that she was multiorgasmic but he wasn't sure. A few minutes later, Louise had come for the second time. Then and only then did Nathan allow himself to empty into her.\n\nLouise slumped onto his chest, her breathing ragged, her skin wet with sweat. Nathan held her murmuring soft words of love into her ear. He let her sleep for as long as he could before waking her up.\n\n\"Sweetheart, we have to go.\" he said softly. When she didn't reply, he said it again but louder and with a kiss. \n\nLouise slowly opened her eyes and looked around. For just a moment, she felt a flash of embarrassment that quickly passed. She was aware that she was changing and knew that Nathan had a lot to do with it. If someone had told her a month ago that she would be lying on a beach after making love she would have laughed. While the change was uncomfortable, she liked what she was becoming and realized that the strength had always been there. She also knew that she would always be shy and that she might never sit in Nathan's lap in public but she was all right with that.\n\n\"Lou? We have to go.\" Nathan repeated again as he rolled over so that Louise was lying on the blanket. He hated to leave as much as she did but it couldn't be helped. He gave her another quick kiss before standing and then helping her to her feet. \"Are you alright?\" he asked concerned.\n\n\"I'm fine... I promise.\" She replied. A few minutes later, they were on their way home.\n\n*********\n\nThorne finished his swim and stayed in the water for another thirty minutes. He lay on his back allowing the tide to take him wherever it wanted to go. He was surprised at how at peace he felt especially since he wasn't going to claim the bitch that the fates had given him. He had decided that there was only one thing that he regretted about the evening and that was that he laid eyes on Barb Simpson. Still, it had felt good to fuck with the Sinclaires and in all honesty, he had really been gentle with the bitch and he hadn't let Allen hurt her.\n\nHe wondered what she told them and thought that she probably said nothing and if she did, it would have been out of anger. He chuckled to himself, swam back to shore and went into the house where Allen was waiting for him.\n\n\"What are you doing here?\" Thorne asked sharply. \"The club isn't closed yet.\"\n\n\"I left Luke in charge...\"\n\n\"That idiot?\" Thorne snapped angrily. \"Get your ass back to the club!\"\n\n\"I'm not going anywhere until you ...\"\n\nBefore Allen could finish his sentence, Thorne had his hands around his neck and lifted off the floor.\n\n\"You don't make demands of me, is that clear? Now get your ass back to the club.\" Thorne said as he dropped Allen to the floor and walked away.\n\nAllen lay on the floor for a long time wondering what had gotten into his friend and then realized something. Thorne Blackwell didn't have friends. He had people that he used like pawns in a chess game. Thorne was a master manipulator and he was only just now seeing it because he hadn't wanted to see it. Thorne had been the only one who hadn't called him a sick son of a bitch and now he knew why. Thorne needed him to pick up his women for him and then to dispose of them.\n\nIn all of their centuries together, Thorne had never let him have the woman first and he had always dictated what he could and couldn't do to her. Barb Yancy was a case in point; he couldn't take her in the way he thought a greedy bitch like her should have been taken. His cock grew hard at the thought of the things that he had wanted to do to her; he was so deep into his thoughts that he didn't hear Thorne come back into the room.\n\nHe wasn't sure of what alerted him to Thorne's presence but when he realized that Thorne was in the room, it was too late to do anything about his hard on. Allen didn't speak as Thorne's cold green eyes assessed him.\n\n\"You don't go near her do you understand me?\" He asked.\n\nAllen didn't answer. He kept his eyes on him, ready to move should Thorne come after him. \n\n\"I asked you a question.\" Thorne said his tone as icy as his eyes.\n\n\"Yeah, I get it but what's so special about this...Oh shit!\" Allen swore as his erection died. \"She's....\"\n\n\"Shut the fuck up and get out... NOW!\" \n\nThorne yelled the last word and began to advance on Allen who wasted no time in vanishing from the den to the car. As he sped off, he knew two things, one that his time with Thorne was done. After tonight, he wouldn't come back to the house and he wouldn't help Thorne with his women anymore. In fact, he would assume another identity and leave the state. \n\nThe second thing that he knew was that he didn't want to be anywhere around when the two of them knocked heads. He understood something that Thorne didn't. They had hurt her but they hadn't destroyed her. If he had been allowed to do as he wanted with her, they would have destroyed her but it wouldn't have changed the fact that the woman was Thorne's mate.\n\nInstead of going back to the club, Allen went home, packed and took off in Thorne's car. He considered the car a less than even trade for all the shit that he had put up with over the centuries.\n\n\"So long mother fucker.\" He muttered as he made his way toward the highway to an unknown destination.",
        "*******\n\nThorne stood in the same spot for several minutes after Allen left. He was relieved that the vampire was gone; he had begun to overestimate his importance and to see himself as an equal instead of what he really was- nothing. He knew that Allen would take the car and he didn't care, it was a small price to pay to have the vampire gone.\n\nHe poured himself a glass of blood, walked out to the patio and sat down. Dawn was about an hour away and he was looking forward to a good days rest. The last thing he did before going to bed was to call the club.\n\n\"Luke, how are things?\" he asked.\n\n\"Fine, I'm just closing up.\"\n\nSatisfied that all was well, Thorne hung up and went to his suite where he lay down to rest confident that he was done with Barb Yancy Simpson.\n\n*********\n\nBy early morning, Barb had eliminated all but four of the dating services and was going through the process of elimination with them. After eliminating one of them, she stood, stretched and headed for the bathroom for a shower. As she waited for the water to reach the right temperature, another wave of anger hit her but none of the anger was at herself. It was at Kevyn whom she still maintained should have introduced her to rich men that she knew were safe. Then there was Louise. \n\nShe still couldn't figure out how the little mouse had caught such a big rat. Part of Barb's anger was jealousy. That much she could admit. No man had ever spoken for her in the way that Nathan had spoken for Louise, hell no one had ever looked at her the way that not only Louise, but Kevyn were looked at.\n\nFor a very brief moment, Barb wondered if she was looking for the wrong things. The question lingered in her mind for seconds and then was gone the second she laid eyes on the expensive bottle of bath oil that sat on the sink. In her mind, that's what it was all about, being able to buy things. Not the oil specifically but being able to afford it and anything else that she wanted.\n\nThe experience with Thorne was rapidly becoming a bad memory with the exception of a lesson learned- she wasn't going anywhere with a strange man no matter how nice they seemed. Thorne had shaken her confidence in her ability to judge people, men in particular.\n\nShe finished her shower, used some of the oil that was more than half-gone and decided to buy another bottle or two. She put on a clean set of lounge clothes, ordered something to eat and continued her research as she waited for her meal to arrive.\n\n*******\n\nLouise walked around the kitchen in Nathan's now her house. She touched the counters and opened the cabinets while Nathan watched.\n\n\"If we're missing anything that you want or need make a list and we'll get it.\" he told her.\n\n\"I can't imagine what it would be.\" Louise replied as she closed the door to the spice cabinet. \"This is such a huge house, didn't you get lonely here?\" she asked as Nathan led her from the kitchen to continue the tour of the house.\n\n\"To be honest with you, I never really noticed.\" Nathan replied. \"It was a place to sleep and to relax. But it has a different feel to it now, it feels like home.\"\n\nLouise nodded and then stopped.\n\n\"Nathan, about this family thing, we should invite Barb. I know that you don't like her but it's not going to help if we keep her at a distance. She needs us whether she knows it or not.\"\n\nNathan hesitated and then agreed. Louise was right and his feelings about Barb were unimportant, she was now a member of the Sinclaire family. \n\n\"What would you like to make for the party?\" Louise asked.\n\n\"We don't have to make anything and neither do Kevyn and Patrick. We're the guests of honor.\" Nathan replied.\n\n\"But we could make something if we wanted to right?\" Louise asked.\n\nNathan understood what was happening; she was nervous and needed an outlet.\n\n\"Of course we could, what were you thinking of making?\"\n\n\"I don't know... how many people are we expecting?\" she asked already calming with the prospect of cooking.\n\n\"A lot and all of the males eat like me and Uncle Patrick so there is no such thing as too much food. I was looking through your notebook and found a recipe for hot wings that looks good, how about making those? We can go grocery shopping this evening.\"\n\n\"That's a lot of chicken.\" Louise commented already calculating how much of each ingredient they would need. \"I wonder if I could get Kevyn to make her potato salad.\" she mused.\n\n\"Sounds good, why don't you call her while I make a phone call or two.\" Nathan said.\n\nHe had just thought about an issue that he hadn't thought of when Louise mentioned Barb's coming to the cookout. She didn't know what they were and she would wonder why all of them looked no older than their late thirties. He dialed Patrick's number and waited.\n\n\"Hey, this is Nathan.\"\n\n\"Is everything alright?\" Patrick asked.\n\n\"It's fine. I wanted to talk to you about Barb, Louise wants to invite her and as much as I don't want her here, I agreed. Like it or not, she's a member of the family.\"\n\n\"I know.\" Patrick replied. \"Kevyn and I were just having the same discussion. I don't care that she comes, everyone will recognize her for what she is but my concern is that she'll have questions that she doesn't need the answers to right now.\"\n\n\"What are you thinking?\" Nathan asked wondering if they were on the same page.\n\n\"We erase any specific memories about us- like how we all look close to the same age. I'll leave the memory about the gathering and things like that.\"\n\n\"What does Kevyn have to say about this?\" Nathan asked.\n\n\"She understands and agrees. I think she's on the phone with Louise as we speak.\"\n\n\"Yes, I know, I told her to call while I talked to you.\" Nathan replied. \"I think that your idea is a good one. We're making hot wings for the cookout and Lou is trying to convince Kevyn to make potato salad. I have an idea, why don't you and Kevyn come over here and make it? That way you won't have to lug it over on Friday.\"\n\n\"That sounds good.\" Patrick said, \"We can order in and make an evening of it.\"\n\n\"Great, I'll tell Louise. We'll see you tomorrow night.\"\n\nWhen Nathan got back to the kitchen, Louise was on the phone with Barb.\n\n\"Yes... Friday night... six. No, you don't have to bring anything but Barb; this isn't an invitation for you to shop for a man. It's an invitation for you to meet our new family and I expect you to behave yourself.\" \n\nNathan chuckled as he imagined Louise using the same tone with one of their children.\n\nChildren.\n\nHe had never given it serious thought. Not because he didn't want children, he wasn't sure if he would ever find his mate. Nathan looked at Louise and knew that she would make an excellent mother but he wanted her all to himself for as long as possible. \n\n\"Well, I invited her.\" Louise said distracting him from his thoughts.\n\n\"I heard and I assume she's coming?\" Nathan asked already knowing the answer.\n\n\"Yeah, she's coming; she wants us to send a car for her. I told her that we would make sure that she got here.\"\n\n\"That's fine.\" Nathan said. \"We'll send someone after her but Lou, when she leaves; we have to erase part of her memory. She can't know about us now and possibly ever. She'll remember meeting everyone but she won't remember that some of us don't look as we should look. We'll also have someone keeping an eye on her, I don't trust her.\"\n\n\"Neither do I.\" Louise guiltily admitted.\n\n********\n\nBarb danced around the room like a woman possessed. Finally, she was going to be in close contact with the family that could make her wants and dreams come true. She was so thrilled that she ignored Louise's admonishments to behave. She looked through her clothes looking for something that was eye catching but not so over the top that Louise or Kevyn would object. \n\nFinding nothing, she decided that a shopping trip was in order. She called a cab, changed her clothes and got ready to go shopping. As much as she wanted to shop at the higher end stores, she couldn't. She needed to conserve her money and she was going to splurge on the bath oil. \n\nShe barely glanced at who was behind the front desk as she walked by. She didn't care. By the weekend, she would be moving into Kevyn's small apartment. She thought about taking all of her things with her to the cookout and then whoever took her home could just take her to Kevyn's afterwards. It was a good plan she decided, it would save her cab fare.\n\nShe made a mental note to call Juliette to see how the packing up was going when she got back and added her realtor to the list. Her 401k money would be in the bank by the end of the following week but if her house sold, she would be in good shape and wouldn't have to be so tight with her money.\n\n\"Where to?\" The cabbie asked her when she got into the car.\n\n\"Wal-Mart.\" Barb replied grimacing inwardly as she said it. \n\n*************************\n\nThe Gathering\n\nLouise rested poorly the day of the gathering. Nothing Nathan did calmed her. Finally, she got out of bed, went to the kitchen and began making bread. Kevyn knowing that Louise was in knots joined her in the kitchen.\n\n\"You don't have to be here with me.\" Louise replied as she took several loaves of bread from the oven.\n\n\"I know that I don't but I want to be and besides, who can sleep when the house smells like a bakery?\" Kevyn asked.\n\n\"Kev, aren't you scared?\" Louise asked as she cut off a chunk of hot bread and handed it to Kevyn.\n\n\"No but then I've been to this rodeo before.\" She replied as she took a bite of the bread. She closed her eyes savoring the taste of the cheddar cheese that was baked into the bed. \"Damn this is good!\" she exclaimed after she swallowed the bread. \n\n\"What if they don't think that I'm good enough?\" Louise asked.\n\nKevyn sat the bread down on the counter, walked over to Louise and hugged her.\n\n\"Lou, what's not to love? You're beautiful, kind, one hell of a cook and most importantly, Nathan loves you. That in and of itself will make them love you so stop worrying and just be who you are.\" Kevyn advised.\n\n\"I know, Nathan says the same thing but I'm worried about Barb too.\" Louise replied.\n\n\"Me too and we'll have to keep an eye on her. Do you think I made enough potato salad? Kevyn asked changing the subject.\n\n\"Honestly? No.\" Louise replied with a laugh, \"but it will have to do. I'm sure that there won't be enough of the hot wings either. I think that Patrick and Nathan ate at least a third of them.\"\n\nNathan stood outside of the kitchen listening to Louise as the tension in her voice slowly ebbed away. She was going to be fine. He walked into the kitchen and kissed Louise noticing that she blushed.\n\n\"Good afternoon.\" He said to Kevyn.\n\n\"Hi... as you can see Lou has been a busy bee.\" Kevyn replied as she stood to leave.\n\n\"I know. It's what woke me.\" Nathan said as he reached for a slice of hot bread.\n\nAfter Kevyn left, Nathan hugged Louise.\n\n\"It's going to be fine; they're going to love you simply because I do. Let me help you with the rest of the bread and then we can get ready.\"\n\n*******\n\nBarb took extra care with her hygiene that afternoon. She splurged on a morning at the spa taking full advantage of the services offered and the additional discount. She took her time in fixing her hair in a bun that was simple but looked like it took a long time to do. She applied her make up last just finishing as her phone rang. \n\n\"The car is here for you.\" Hans said in a crisp tone.\n\nShe hung up without acknowledging him. She was glad that after tonight she wouldn't have to deal with him or any of the other imbeciles at the hotel. She grabbed her purse and her suitcase, gave the room one last look and left the hotel without speaking to Hans or any of the other people who had taken care of her during her stay.\n\nShe was pleased to see that the car while not a limo was a 2012 Mercedes Benz.\n\n\"This is more like it.\" she muttered as she remembered Ollie's older model Hyundai.\n\nThe driver met her at the door, took her luggage and helped her in. For just a second, Barb thought that she was going to get a kiss on the temple or cheek but the driver gave her a curt nod as he held the door open for her and closed it after she was in.\n\nAn hour later, the car was pulling up to a gate. Barb's eyes widened as she watched the massive gates open as if by magic. Her mouth dropped open as the house loomed before her. Jealousy raged that Kevyn and now Louise were living the life that she craved and felt that she deserved.\n\nThe driver made a call just as he pulled up to the front of the house. Louise and Kevyn met her at the car.\n\n\"So this is where you live.\" Barb said not bothering to give them a chance to greet her.\n\n\"Hello to you too.\" Kevyn said not missing the greed and envy in Barb's eyes.\n\n\"Yeah, whatever.\" Barb replied as she looked around.\n\nLouise took hold of Barb's hand to get her attention. She wanted to reiterate her warnings.\n\n\"What?\" Barb snapped and then looked around for Nathan.\n\n\"He's in the back but don't worry about him. Just behave yourself and everything will be just fine.\" Louise said giving just a little mental push without realizing it.\n\n\"I got it!\" Barb snapped.\n\n\"Ok, let's go in.\" Louise said not at all confident that Barb really got it. \n\n******\n\nBarb looked around as she followed Louise through the house to the back yard. \"This isn't fair!\" she grumbled under her breath. Not many people had arrived yet, which gave her a chance to look around relatively unwatched. When Kevyn asked her to help in the kitchen Barb gave her a scathing look.\n\n\"Fine but stay out of trouble.\"\n\nWhen everyone was busy, Barb went through the house her envy growing with each ornately decorated room.\n\n\"Hi, are you lost?\" a small voice said from behind her.\n\nBarb turned around and to see who had spoken to her.\n\n\"I... I was looking for a bathroom.\" Barb lied.\n\n\"I'll take you. My name is Victoria. This is my cousin Nathan and his mate's house.\"\n\n\"Mate?\"\n\n\"Wife.\" Victoria corrected. \"You must be related to her and Kevyn; you're pretty like they are.\"\n\n\"They're my sisters.\" Barb replied coolly not liking that she was being compared to them. And she definitely didn't like the way that Victoria was looking at her. She felt as if the little girl could see the inside of her. \"The bathroom?\" \n\nShe asked.\n\n\"This way.\" Victoria replied in a tone as cool as Barb's. \n\nShe watched as Barb closed the door and decided that she didn't like her. She knew what Barb was doing when she found her; she was snooping. She felt the envy and anger that she had toward her sisters and for that reason alone, she didn't like her. \n\nVictoria decided to wait for her in case she got \"lost\" again and planned to spend the evening keeping an eye on her.\n\n********\n\n\"Nathan Sinclaire where are you?\" Maryanne called out as she walked through the house.\n\nLouise tensed at the sound of her voice.\n\n\"That would be my grandmother.\" Nathan replied. \"She's going to love you.\" he said kissing Louise's temple.\n\nEventually, Maryanne found them in the kitchen.\n\n\"There you are!\" she exclaimed hugging and kissing him when she got to the kitchen.\n\n\"Hello grandmother.\" Nathan greeted returning the hug and kiss. \"I'm sure that you remember Louise Yancy, my mate. Louise, this is my grandmother Maryanne Sinclaire Feldman.\"\n\nMaryanne took Louise's hands in hers and gave them a gentle squeeze.\n\n\"I am so pleased to finally meet you and to thank you for your part in saving Veronica.\"\n\n\"It's nice to meet you too.\" Louise replied nervously.\n\nMaryanne gave her an understanding smile.\n\n\"Welcome to our family... have you set a date for the wedding?\"\n\n\"W...wedding?\" Louise stammered.\n\n\"We haven't talked about that yet.\" Nathan said taking control of the conversation. \"Where's George?\"\n\n\"He's coming with the truck... I'm sorry if I misspoke.\" Maryanne said seeing that Louise was trembling with nerves.\n\n\"It's fine,\" Nathan replied, \"Could I have a moment?\"\n\n\"Of course!\" Maryanne said as she hurried away cursing herself and her big mouth.\n\n\"Lou sweetheart, it's alright.\" Nathan soothed as he hugged her.\n\n\"Wedding? I thought that we were already married.\" Louise said in a shaky voice.\n\n\"We are but some of the mates like to have a human ceremony. She just assumed that we would have one but it's not a requirement. I didn't ask about it because I got the feeling that you wouldn't want one.\"\n\nLouise calmed down and blushed. \n\n'I'm sorry, I'm just nervous.\" she said. \"And you're right; I don't want or need a wedding.\"\n\n\"Fine by me but you can always change your mind later.\" Nathan said knowing that she wouldn't.\n\nSlowly the kitchen began to fill up with people bringing in food or wondering where to put things. Oddly, this activity put Louise at ease. The questions about a wedding date no longer shook her. By the time everyone had arrived, she was much more relaxed. Nathan knew and accepted that she would never be a social butterfly but then neither was he. \n\nAs the evening wore on, he kept an eye out for Barb, he just didn't trust her and when he saw Victoria watching her, he knew that he was right. He looked over at Louise who was talking with one of his cousins and then back at Barb who was doing little to hide her jealousy.\n\nKevyn and Patrick were talking to Ethan and Katrina but he noticed that either Kevyn or Patrick had an eye on Barb as well. He allowed himself to relax and watched Louise exchange recipes with his grandmother. His heart melted when Louise looked up at him and smiled without covering her mouth.\n\n\"You are so beautiful.\" he thought to her and smiled when she blushed.\n\nThe evening was filled with laughter, music and dancing and soon everyone forgot about Barb with the exception of Victoria. She didn't mind watching Barb; it allowed Patrick and Nathan to enjoy the evening introducing their mates and she wanted to know why the woman was so hateful and jealous. She wouldn't peek, that would be rude but she could watch.\n\n*******\n\nBarb found a quiet spot from which she could observe everyone. Her hope was that eventually Kevyn and Louise would forget that she was there. She had been one of the first to fix herself a plate of food after Kevyn, Patrick, Louise and Nathan making sure that she took plenty so that she wouldn't have to go back up to get more. She noticed Victoria watching her and decided that she didn't like the little girl who seemed older than her ten years of age.\n\nIt wasn't until sometime after ten when the music and dancing started. Barb looked around and not for the first time that evening wondered how all of them could look so young. She looked at Maryann who had taken an instant dislike to her but was polite and wondered how she managed to look no older than forty when she had sons in their thirties. After awhile she decided that it was one of the many benefits of having money and wondered if Maryanne would give her the name of the plastic surgeon she used.\n\nShe watched enviously as Nathan and Patrick doted on Louise and Kevyn but it wasn't just them. All of the women who came with someone were being treated as though they were royalty. When she thought no one was watching, she left her spot and wandered away from the party. She had seen enough and it appeared that every male was spoken for. In her mind aside from the food, the night had been a bust.\n\nShe followed a little path that led to a gazebo and decided to sit there for a few minutes while she planned her next move. She didn't see him until she was inside of the gazebo and when she saw him, her breath caught. Not only was he gorgeous but she could smell the money in the form of the cologne he wore. Barb looked around and didn't see anyone else. Since he was alone, she assumed that he was unspoken for and began to make her move.\n\n\"Hello.\" she said softly.\n\nHe looked up at her and gave her a polite smile as he stood up.",
        "\"Hello, are you lost? The party's that way.\"\n\n\"No, I'm not lost.\" Barb replied coyly. \"I think that I just found what I've been looking for.\" she said as she approached him.\n\nShe never heard someone come up from behind her; she only heard a low feminine voice filled with warning.\n\n\"Get the hell away from him.\""
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/louise-ch-09"
}