{
    "title": "Decoding Desires Ch. 02",
    "pages": [
        "***No sex yet, this one has a bit of a build up. This is gay male bdsm, just in case that's not for you. Otherwise, hope you enjoy!\n\nPenny****\n\n*\n\n\"What'd you think of Lee?\" Carrie asks, not even bothering with a 'hi', or 'hello', or 'good morning'. \n\nShit. Hearing his name gives me a mini heart attack. What the hell was I thinking last night? \"He's okay, I guess. You know,\" I say, trying not to let her know how freaked out I am about what I did.\n\n\"Mmm-hmmm,\" she hums in that tone that drives me crazy. \"Just okay?\"\n\n\"Yeah, sure,\" I dismiss, looking at the time. I can't focus my eyes yet, but it feels like it's way too early for me to have this conversation with her. I roll out of bed and hit the bathroom, cradling the phone between my cheek and shoulder. I sit down to pee so she doesn't hear it.\n\nShe hears it. \"Are you fricking pissing while talking to me?\" \n\n\"You woke me up,\" I complain. \"And I don't care if you hear it or not.\"\n\n\"You're such an animal,\" she complains. \"Whatever. Tell me about after you guys dropped me off.\"\n\n\"How are you not hung over?\" I grumble, putting the phone on speaker on the counter so I can wash up. \n\n\"Cody, it's two pm,\" she states. \n\n\"Oh.\" I checked for no good reason. \"Yeah. Shit, I got work in an hour. Shit.\" I can't believe how late it is, how long I slept. I close my eyes, realizing that I feel rested for the first time in a long time. I feel good, and it's a weird feeling. I'm not used to it.\n\n\"Is he still there, Coco?\" I hate the tone of voice she has, like she knows my crimes. \n\nOr maybe I'm just feeling guilty. \"No, he's not here,\" I snap.\n\n\"But he came inside?\"\n\nI gag on the innuendo, not sure if she meant it or not. \"Hold on.\" I mute the phone, flush the toilet and wash my hands before going back to her. I hoped the few seconds I'd carved would help me come up with something convincing. It didn't. \"Yea, he came in the house,\" I admit, carefully avoiding repeating her phrasing. \"But he didn't stay over.\"\n\n\"No? Why were you still asleep till now, then?\" She's so damn perceptive and I hate it. Maybe I'm just that predictable.\n\n\"He... We talked. And, um...\" Why couldn't I lie to her? My phone buzzed as I was thinking of what to tell her, distracting me. A text from an unknown number. I ignored it. \n\n\"Did you, you know? Hook up?\" She whispers the last part. \n\nI roll my eyes, not that she can see it. \"Not exactly.\"\n\n\"Cody!\" she squeals. \"You dog!\"\n\n\"We didn't,\" I insist. It's not a lie. We didn't touch each other like that at all. We didn't touch each other and I still was a big freaking idiot, fingering myself on the couch like a fucking pervert in front of the most beautiful man in existence. Why I'm so dumb? \n\n\"Well, he seemed to think you two hit it off last night,\" she complains, upset that I won't let her have the feeling of satisfaction that hooking us up would've given her.\n\n\"Does he, now?\" I ask, dismissing her instantly. My brain catches up a second later. \"Wait, what? You're still talking to him? When'd he tell you that?\"\n\nShe laughs her 'I know something Cody doesn't know' laugh. \"Of course I'm still talking to him. We're friends.\"\n\n\"Course you are,\" I say, trying to play it cool, but my heart is pounding hard. Carrie and Lee were talking about me? \"Wait, what'd he say about me?\" Fuck, why'd I say that out loud? \n\nShe sniffs in amusement. \"He forgot to ask for your number last night, he wants to meet up with you again.\"\n\n\"Please tell me you didn't give it to him,\" I beg, terrified. I was afraid of him, of the fool I made of myself, but more than that, I'm already too smitten and it was scaring me. \n\nLee was asking about me. Lee wanted my phone number. Lee wanted to see me again. My fucking heart was beating like crazy and my dick was already hard just remembering the look on his face when I came. My face burns, and I'm glad Carrie isn't here. \n\n\"I did,\" she said. \"You'll thank me for it later.\" \n\nNot if I make an ass of myself again, I won't. The text message from the unknown number slaps me in the face, and I suddenly need to know if it's him. \"Carrie,\" I stall, putting her back on speaker so I can check the message. \n\nMy hands are shaking so hard I almost drop the phone. Carrie is laughing. 'Cody, this is Lee Sullivan. I got your # from Carrie, I hope that's okay.' I saw the three dots moving, then pausing, then moving again as he wrote another message. \n\n\"He's pretty interested in you,\" Carrie says, startling me enough that I actually drop my phone. It falls to the carpet and I can't pick it up, I'm frozen in place.\n\n\"How do you know?\" I ask, my throat tight.\n\n\"Oh, something did happen last night,\" she purrs. \"He's got you all flustered.\"\n\nI lean down and pick up the phone. It buzzes instantly in my hands and I almost drop it again. Another text from Lee. \"Nothing happened,\" I lie. She laughs as I read his text. \n\n'Are you free tonight? Can we meet up?'\n\nI'm sweating, finding it hard to breath. I'm so excited that my shame and guilt can't compete and get flooded away. Lee wants to see me again tonight! I was so worried he'd think I was a freak after what I did last night. That he'd be turned off by what a freaking perv I was.\n\nThis was a chance to set the record straight, to clear up that I wasn't normally like that. How did I respond? What was normal? I suddenly couldn't think, couldn't remember words. I read his text over and over, the words losing meaning.\n\n\"Cody?\" Carrie's voice cuts through my haze of joy. \"Are you there?\"\n\n\"Huh? Yeah,\" I grunt, still unable to remember most words. \n\n\"You sound distracted,\" she notes.\n\n\"I gotta go,\" I say, touching the screen to keep it on, reading his words over and over again.\n\n\"Oh. Okay,\" she says, sounding disappointed. \"Call me later?\"\n\n\"Yeah, sure,\" I dismiss. \"Bye Carrie.\" She says bye and I hang up, then read Lee's texts one more time.\n\nI struggle with what to write, then decide to keep it simple so I don't say something stupid. 'What time?' I hit send. Nice and simple.\n\nLee's typing back, three dots blinking then stopping, then blinking, then stopping. I wait, but there's no response, and as more seconds go by I'm getting antsy, and I write another text. 'I'm free tonight. And it's cool, Carrie told me she gave you my number.'\n\nIt's stupid so I delete it without sending. No more blinking dots, not since I started typing. I don't get a message from him and my chest is tight. Instead of trying again I save his number to my phone, and write Ashley the first time, but change it to Lee immediately. I go back to the text screen and he hasn't sent anything. I see dots blinking again and get excited, but nothing happens. \n\nI'm pacing, so I go to my bedroom and force myself to get dressed. Even though I told Lee, or at least implied, that I was available tonight, I really did have to work today, I was supposed to be installing wiring for an underground pool heater. I pull an undershirt then my work logo-covered neon green shirt, a pair of clean jeans, a pair of black socks. \n\nI'm brushing my hair when my phone rings. Probably Carrie again. I pick it up and answer it without looking at it. \"What else do you want, Carrie? I got a job I'm gonna be late to, so I'll have to call you back later.\"\n\n\"Cody? It's Lee,\" says the sexiest voice on the planet and I'm so fucking embarrassed that I'm already inventing plans for a time machine to take me back three minutes so I can not be an idiot, at least for this one instance, but really, why stop there?\n\n\"Oh. Sorry, sorry,\" I say, my throat tight so it comes out more like a squeak.\n\n\"Hey, sorry, I didn't mean to bother you if you're at work,\" he apologizes, and why is he apologizing? He's perfect, he doesn't need to apologize.\n\n\"No, no,\" I rush. \"I'm just getting ready. I, um, yeah. I have a few minutes.\"\n\n\"You sure?\" he asks, sounding a little nervous, but I'm not sure why. \n\n\"Yeah, yeah,\" I reply, probably too eagerly. \"What's up?\" I roll my eyes at myself, feeling stupid. Why couldn't I be cooler around Lee?\n\n\"I thought maybe it'd be easier to just talk, I'm not really great at texting,\" he admits. \n\n\"Oh. Sure.\"\n\n\"So, um,\" he begins when I don't say anything else. I don't even know what to say at this point. Something like 'sorry I fingered myself like a neanderthal in front of you last night, I promise I'm actually housebroken,'? Yeah, better to just keep my mouth shut. \n\nBut I don't. \"I'll be done with this job by six. Six thirty at the latest,\" I blurt out. \"So, I can, yeah. For tonight. I mean, if you still wanted to do something. With me.\"\n\n\"I don't want to mess up your work,\" Lee says, but he sounds less nervous now. \"If you're busy we can try for another day. If you wanted to meet up.\"\n\n\"I do,\" I insist. \"I'm fine, it's an easy job, just some simple wiring and waterproofing. What, ah, were you thinking?\" I hope I don't sound as desperate as I feel. \n\n\"Dinner? Maybe an evening walk afterwards? Ice cream?\"\n\n\"I thought you were lactose intolerant,\" I say, the first thing that comes to my idiot brain.\n\n\"Huh?\" Lee asks. \"How'd you know?\"\n\n\"Carrie told me,\" I admit, too quickly. \"She was bragging about you. Before I met you, when, ah, like, she told me you two had a date.\" The word sours on my tongue and I'm jealous of Carrie for no good reason, other than she'd already gone on a date with Lee.\n\n\"It wasn't a date with Carrie,\" he clarifies, his tone stern enough that I stand up straighter. \"Tonight, though, I'd like tonight to be a date.\"\n\nI'm so freaking excited and happy and nervous I want to puke, but instead I put Lee on speaker phone and pull on one of my work boots. \"Date?\" I squeak.\n\n\"If that's okay with you,\" Lee clarifies. \"I don't wanna-\"\n\n\"Yes, date, that's good. Where? When?\"\n\nI imagine Lee in my head, hoping he's smiling that killer smile he has. \"I'll pick you up?\"\n\n\"You don't have to go out of your way,\" I insist, loving the fact that he wants to pick me up, wants to spend as much time with me as possible. At least, I hope that's what he means, though now that I'm thinking about it, it could mean a million different things, or nothing at all.\n\n\"It's no trouble,\" he says, his tone clearly stating he will not be taking no for an answer. My dick is so hard over his tone that it's pinched uncomfortably against my zipper. I adjust and pull on my other boot as he continues. \"I'd, um... I'm gonna send you a text with directions, like, um. I wanna give you commands, for tonight, for, so, I mean, for you to do to be ready for our date. Is that, do you wanna do something like that?\"\n\nI hate how nervous he suddenly is, like it's my fault. \"I'll do whatever. I mean, yeah, sure, like, yeah. I wanna do that.\" I'm pacing now, feeling jittery. I need coffee, I need something, I have no idea. My dick throbs and I try to ignore it.\n\n\"Good. Okay, yeah. Good,\" he says, sounding relieved. \"I'll text you later with some directions. Same word if you don't wanna do something, 'coffee', okay?\"\n\n\"Sure, sure,\" I say. \"Sounds good.\" I have no idea what to say. \n\n\"I'm, um. I had a nice time last night,\" he says, almost a whisper. \n\nMy throat is tight. \"Me too,\" I admit, also in a whisper. My fucking dick is twitching like a crackhead and I feel a small spot of dampness in my underwear. My balls were gonna hurt so bad later, but I didn't care. \"It wasn't weird, I didn't, um, like, weird you out?\"\n\nFuck, why'd I say that?\n\n\"You? I was worried I pushed you too far,\" he admits. \"You're, I felt like I took advantage of you a little. It was really fucking hot. You're a natural, I mean. I hope I didn't take it too far.\"\n\n\"Not at all,\" I insist. I'm gonna cum in my pants if he doesn't stop. I'm turned on like mad, and suddenly I feel like I need to cum. \"I, ah. Um, I thought it was hot, too. I mean, thinking about last night makes me, um, I'm hard. Really hard.\"\n\nLee fucking purrs, I can hear it over the phone. \"You're hard thinking about last night?\" he asks, his tone suddenly huskier. \n\n\"Um, yeah. Really hard,\" I admit, my face burning. \n\n\"Do you have time to jerk off before work?\" Lee asks. \n\nMy dick is begging me, please, please, please like a kid outside a candy store. \"Yeah,\" I say, not caring if it's true or not right now, that's how fucking turned on I am for this man.\n\n\"Brat, are you telling me the truth? If I let you jerk off will it make you late for work?\"\n\nLet me? Part of me wants to be offended that he thinks he'd be able to stop by just by saying it, but most of me... I want him to tell me if I can come or not. It makes me so hot I'm dancing from foot to foot to try to keep from jizzing in my jeans right there, I'm that close. \n\nI'm whining a little, I didn't realize it at first. Once I do I stop, but Sir heard me. He chuckles. \"If you lie to me I'll have to punish you.\" \n\n\"Fuck.\" I didn't mean to say it out loud but I did. Sir chuckles. \"I mean,\" I continue, face red as a beet probably, \"I'm so close that honestly I'm trying hard not to just nut right now.\" Why did I admit that? So fucking embarrassing.\n\nHe growls in the back of his throat. \"You're almost coming just from thinking about last night?\"\n\n\"And now,\" I say before I think it through. \"From you.\"\n\nOh, the sound he makes is pure sex. \"Take yourself out of your pants, Brat,\" he says. \n\n\"Yes sir,\" I whisper, fumbling with the phone to put it on speaker again. I take myself out and my rod almost looks purple. I stroke myself a few times before I realize he's waiting for me to tell him what I'm doing. \"I'm out.\"\n\n\"Good boy,\" he says, voice thick as honey. \"Are you gonna cum right away?\"\n\n\"Yes Sir,\" I say, stroking myself to the sound of Sir's voice. \n\n\"What's got you so turned on?\" he asks.\n\nMy mind is a mess, my hand a blur as I jerk myself hard and quick. \"You, Sir. The thought that you wouldn't let me-\"\n\n\"You like that I might have told you that you couldn't cum?\" he whispers hoarsely. \n\n\"Yes, fuck yes, Sir, fuck, Sir! Coming,\" I pant, his words pushing me over the edge. Cum shoots from my tip all over my hand, and I just have enough mental capacity left to catch the majority of it in my other hand. It's hot and slippery, and too quickly it starts seeping through my fingers. \n\nI don't have time to think about it as Sir starts grunting. Holy fuck, was he jerking off, too? Was he coming? I want Sir's cum. Lee's cum. I crave it, need it. \"Are you coming, Sir?\" I whisper.\n\n\"Yes, Brat,\" Sir pants. \"I'm cumming so hard for you right now.\" He sounds strained, and it's too sexy. I'm licking my palm, cleaning my cum off my hands before I realize it, pretending it's his creamy seed. \n\n\"I want it,\" I growl between licks. \"I want your cum, Sir.\"\n\nHe moans, low from his belly, then exhales long and low. \"I'm making an appointment to get tested this week,\" Lees informs me. \"Do you want me to make yours, too?\"\n\nI shake my head, then realize he can't see me. \"No, I can go to the clinic. It's fast.\"\n\nHe grunts. \"Make your appointment as soon as possible, Brat.\"\n\nMy hand is clean of cum, and I don't remember half of it, but my mouth is bitter. \"Yes, Sir,\" I agree. \"Thank you for letting me cum, Sir.\"\n\n\"You're such a good boy, using your manners,\" he praises. \"Now go clean up your mess and get to work.\"\n\n\"Okay,\" I say, already zipping myself up. I'm heading to the bathroom to wash up before I leave now. \"That was, um. Nice.\"\n\nLee chuckles. \"It was. Now, get to work before you're late. Call me when you get off?\"\n\n\"Yes Sir,\" I reply, biting my lip in excitement. \"Bye, Sir.\"\n\n\"Bye, Brat.\"\n\nWe hang up and I go to work, and of course I'm late, but it was one thousand percent worth it. I'm already distracted, and I'm super thankful Sir let me come. I can't imagine doing my job with the general excitement of tonight's date combined with unsatisfied blue balls. \n\nStill, I'm distracted and end up having to re-pull a ton of wiring because I'm not paying attention, but in my defense, it was because of the text he sent. I mean, I shouldn't have read it, but I also couldn't help myself. \n\nIt's way too late by the time I'm done, and I'm frustrated as hell, but all at myself. I text Lee from my car as I'm getting ready to leave with an ETA for when I'm getting home. It's almost impossible for me, I want to speed the entire way home, but I know it'll take even longer to get home if I get pulled over. And, Lee wouldn't be happy with me if that happened, either.\n\nThere's a car waiting for me in the driveway and I'm suddenly so nervous that my palms are sweaty on my steering wheel. It's him. I pull in and turn the car off, he gets out and greets me as I climb out. \n\n\"Hey,\" he says. \"Sorry I got here early, I just-\"\n\n\"Sorry I'm late,\" I apologize. \"I messed up and had to rewire stuff. It's my fault. You wanna come in?\"\n\nLee shrugs, then nods. I head to the door and he follows me in. \"No worries,\" he dismisses. \"I didn't make reservations, I know this awesome food truck in the park that makes stellar barbeque. You didn't answer my text, though, is barbecue okay?\"\n\n\"Yeah, yeah,\" I say, pulling my boots off one by one. \"Sorry, I didn't, I had to pay attention or I'd have messed up more, probably. But,\" I continue when I see him looking guilty, \"it's fine, I just couldn't answer you then.\"\n\n\"Okay,\" Lee says after a moment. He looks me over and I turn away from him, cheeks red. I must look terrible, since a lot of the work I do is on the ground, or underneath buildings, in crawl spaces, between walls. I haven't looked in a mirror in hours, and suddenly I'm feeling so inadequate that I can't stand it. \n\n\"I need a shower,\" I explain as I escape down the hall. \"Make yourself comfortable!\"\n\n\"Cody, wait,\" Lee asks, and my feet obey without delay. \"I can leave, if it's making you uncomfortable. I was just so excited to see you again that...\"\n\n\"No, no, it's okay, it's fine. You can stay, I just need, I mean, I must look like a hobo.\" My feet are free from Lee's command and I'm headed to the bathroom again. I shut the door behind me before Lee can say anything else. \"Make yourself comfortable!\" \n\nI hesitate to see if Lee says anything, but after a moment of silence I turn the water on and strip out of my soiled clothing. I see in the mirror that there are at least ten spider's worth of webbing in my hair, tangled between my reddish brown curls giving me a premature salt and pepper look. I rough my hands through my hair and the webbing gets caught on my fingers, but also stays in my hair. Great. \n\nI'm ashamed that Lee saw me like this, totally unkempt. The water's too hot, but I don't care, I jump in and begin scrubbing the grime, grease, and whatever other unknown junk I crawled through today off my skin. Usually I wouldn't care what I looked like after work, but...\n\nI take longer than normal in the shower, so long I can feel my skin pruning up and the room is filled with a cloud of steam, but I want to be so sparkling clean that it covers up my earlier cave-dweller ensemble. My face is flush when I clear the mirror with a towel. It instantly steams back up again, and I want to shave, but I also realize I've left Lee to wait on me for quite a while. \n\nAs I'm debating shaving it dawns on me that I didn't bring a change of clothing into the bathroom with me, and there was no way I was putting on my gross work clothes again. Fuck. Just, fuck. Why couldn't I be cool around Lee?\n\nI dry off once more, scrubbing my head until my hair no longer drips water onto my shoulders or down my neck, then grab a clean towel and wrap it around my waist so tight it's almost constricting. A deep breath, then I open the door, ready to sprint to my room, but Lee must have heard the door open. I really needed to WD40 it. \n\n\"Cody?\" he calls, his voice once again locking my feet in place. \n\n\"Almost done,\" I call back, willing myself to move, but I don't. \"Sorry to take so long.\"",
        "He's standing in the hallway now. I swallow hard, trying to run away, but also stuck in place. I mean, Lee's standing right there, in my hallway. I'm a tumultuous contradiction of emotion, stuck in place from just hearing my name from his lips. \n\n\"Mmm,\" he hums, taking a step towards me. \"Just a towel?\"\n\n\"I forgot my clean clothes!\" I squeak. My feet finally get the message and I'm moving towards my bedroom again, faster than before, maybe fast enough to beat anything else Lee might say.\n\nI almost think he's gonna follow me, but he doesn't. I escape into my room and shut the door, or rather slam it harder than I mean to, but I'm so freaking nervous I can't control myself. I don't even know what I'm putting on, I'm so frenzied, but I finally have clothing on and I'm ready to leave my room, but I'm not. I'm freaking out, panicking, ungrounded. \n\nAnd that was all before I realized I'd forgotten to follow the directions in Sir's text. I'm not sure where all the air in the room suddenly went, I can't breathe.\n\nI hear a knock on the door, a soft three-tap. \"Cody, are you okay?\"\n\n\"Fine,\" I squeak, and fuck it if I'm not going through puberty again. \"Fine. Sorry! I'll be out in, ah, a year.\" Shit, why'd I say that. Double shit, when'd I sit down on my bed? \n\nMy eyes are locked on the doorknob, so afraid it will turn, and also wanting it to turn so much. I can't stand how duplicitous I am, but I guess that's who I am. \"Can I come in?\" Lee asks.\n\n\"You can do anything you want,\" I respond, not trying to be flippant, but that's how it comes off.\n\n\"Cody, I want to do what you want,\" Lee says through the closed door. \"Would it bother you if I came in?\"\n\nI shook my head so violently the room spun with it, then course corrected. \"You can come in,\" I croak.\n\nStill, a few breaths pass before Lee opens the door. I'm still sitting on the bed and I go to stand up but he holds his hands up in front of him. \"No, stay where you are. Are you okay? I shouldn't have come right after work, I'm sorry that it upset you.\"\n\n\"No, no, not that, I mean.\" I inhale deeply, then blow it all out. \"I don't want you to think I'm a slob or anything. I mean-\"\n\n\"Why would I think that?\" Lee asks. He takes slow, steady steps towards me, as if approaching an injured mountain lion. \"I don't think you're a slob.\" Actually, it was probably more like a kitten stuck in a tree, I was definitely not a mountain lion right now.\n\n\"I mean,\" I say, fumbling with my words, with expressing how I feel, not wanting to seem weak or pathetic in front of my dream man. \"Just, I'm a mess. I'm usually not like this, I swear,\" I continue, images from the previous night flashing in my brain. I'm a fucking idiot. \n\n\"Cody, may I sit down next to you?\"\n\n\"Sure,\" I say, not even thinking about it. He does, with a healthy space between us and I'm both disappointed and relieved. Why was I so freaking nervous?\n\n\"Did you have another panic attack?\" he asks. I look at him sharply, how does he know these things about me? It's a dumb question he answers in his next breath. \"I mean, it seemed like you were, at the bar last night.\n\nAre you still processing last night?\"\n\n\"Yeah, I guess,\" I admit, though not to what he was referring to. The panic attacks at the Arcade feel insignificant now. \n\n\"Do you regret what we did last night? Or this afternoon?\" he asks, his hands balled up in his lap. \n\n\"No, no. I mean, yeah, a little, but not because of you!\" I rush to get out. \"Nothing, you're perfect.\"\n\n\"I'm far from perfect, Cody,\" Lee informs me. \"I really like you, like, I felt like we really connected last night, and now I worry that I might have pushed you too far. I'm, I have...\" He sighs and I can't say anything, hanging from his every word. \"I'm a bit domineering. I can come on strong. I try to keep it in check, but last night you pushed every button I had. I don't know what came over me, it just, it felt like you were sending me signals, like you wanted it, too. I'm not trying to make excuses, but-\"\n\n\"Fuck, Lee,\" I say, my mouth moving before I can stop it, or even think through what I'm going to say. \"You didn't do anything wrong! I fingered myself like an animal in front of you! You're the most beautiful man I've ever met, much less had the opportunity to talk to, and I'm a fucking idiot neanderthal teenager acting the fool. I don't want you to think I'm, you know, a pervert or something, but I guess I already fucked that up.\"\n\nLee is silent for a moment and my skin was crawling from the stress. Goose flesh pimples the skin on my forearms as I wait for him to speak. \"I'm a pervert, then,\" Lee says eventually. \n\n\"No, that's not what I meant!\"\n\n\"I am, Cody. I liked it, last night, today. I always do this, come on too strong.\"\n\n\"I liked it, too,\" I argue. \"A lot. I just, I'm not, I mean, I want you to like me, but I'm worried you'll think I'm a freak.\"\n\n\"I do like you,\" Lee says. \"I don't think you're a freak, or a teenage neanderthal, or a pervert, or anything like that. Can I tell you something?\" I nod. \"I've never done anything like that with someone I just met, but last night, I wanted it. A lot.\"\n\n\"Me either, doing something like that, I mean,\" I admit, my throat tight.\n\n\"Did you enjoy it?\"\n\nI swallow hard. \"So much.\"\n\n\"Me, too,\" he says, and his hand slides to my knee. It was bouncing and now that he was touching it I could relax it. \"I really want to get to know you, but I also want to do that kind of stuff with you. Do you still wanna, you know, do stuff with me?\"\n\nHe sounds so vulnerable that I'm nearly overwhelmed by the need to kiss him, but I hold back. \"Yeah, of course,\" I whisper, his hand on my knee sending warm waves through my whole body to the pulse of my heartbeat. \n\nHe squeezes my knee and sighs. \"I thought I'd fucked it up again,\" he says. A moment passes before he says anything. \"You wanna get something to eat?\"\n\nI put my hand on top of his on my knee. He tenses, then squeezes again. \"Yeah.\" He rewards me with a smile. We sit there for a few more breaths in silence, but it's not as tense as it had been. \n\nWe get in his car. His bluetooth connects, and suddenly the music is loud enough that I literally jump. He rushes to turn it down, but heavy, sludgy metal fills the space for a moment. Thirteen Fingers by Acid Bath.\n\n\"Sorry,\" he apologizes, the music now too low for good metal. \"Wait a second, you like Acid Bath? Most people I know have never even heard of them \"\n\n\"Hmm?\" I ask, confused by his question.\n\n\"You named the song and the band just now. You did it at the bar last time, too.\"\n\n\"Oh.\" I don't elaborate, though he waits long enough for me to do so. \"Um.\"\n\n\"You like Acid Bath, then?\" he asks when I don't explain myself.\n\n\"My best friend in high school was a metal head. Lots of obscure stuff, too. I dunno, I liked it then, you know, typical angsty teen, but I haven't listened to metal in years. This's old, too.\" I immediately want to take back that last bit, worried I've offended him.\n\nHe shrugs it off. \"Yeah, old, but still amazing.\"\n\n\"You know the singer put out a bunch of other music, after the band broke up when the one guy died.\"\n\n\"What? Really?\" I nod. \"Holy hell,\" he says, sounding interested. \"I'm gonna hafta check that out. You like music, I take it?\"\n\nI'm blushing, but also super pleased with myself. \"Yeah, I guess.\"\n\n\"You knew every song that came on at the bar,\" he chastises. \"That's more than 'I guess' levels of likes music.\"\n\nI chuckle. \"Carrie says I'm a musical idiot savant. Jace used to call me a walking mp3 player, but, um...\" I realize too late I've brought up my ex. \"I guess that's an out of date reference. I dunno.\" I'm praying silently that he doesn't ask about Jace.\n\nHe wants to, I can tell by the tension in his jaw even though I don't even really know him. He wants to, but he doesn't. Another song comes on, Trashed and Scattered by Avenged Sevenfold. He liked older metal. Noted.\n\nHe looks over at me and smiles quickly before turning back to the road and I realize I said it aloud again. I flush, but he seems amused and didn't ask about Jace, so I count it as a win.\n\nHe drives us to the park and low and behold, there's a barbeque food truck that I somehow had never noticed before. I can smell slow-cooked beef well before we are close enough to queue. It's late for dinner, well after eight, but business is booming, and we find ourselves waiting in line. My mouth is watering, it smells so good, and Lee is smiling, he can tell how excited I am. My stomach growls and I flush. He laughs, and I join in, and it feels good. \n\nI feel good, and until right now I didn't realize I hadn't felt this good in a long time. We move up a place in line and I reach out for Lee's hand, not really thinking it through. Too late I'm struck with the thought that he might pull away and how that would make me feel, but he doesn't. He smiles at me with his million dollar smile and squeezes my hand, then tugs me forward by it as we move closer to the mouthwatering finish line. \n\nHe orders for both of us and soon we are hauling a full rack of ribs, a slab of brisket, coleslaw, biscuits, and potato chips to a relatively secluded picnic table well away from where most of the other people have congregated. \n\nIt's heaven in my mouth as I tear into a little bit of everything. It all tastes so good, and I don't know if it's just that good, if it tastes better because I haven't eaten anything at all today, or if it's because of how happy Lee looks watching me eat. \n\nWe talk between bites, and then long after the food is gone and our trash cleaned up. We talk about everything, anything. It's so easy to talk to him I find myself opening up to him way too easily, but it doesn't make me feel vulnerable. It makes me feel validated. \n\nLee tells me about his adopted younger brother, about his dad, but doesn't mention his mother, and I don't bring it up. I find out his favorite movies are bad horror movies (which he'd already told me before, but I didn't correct him) and bad science fiction movies, that he loves to read fantasy novels (the longer the better), that he had cows and chickens when he was a kid. \n\nAfter a bit Lee pulls his phone out, almost reluctantly. \"I have to work in the morning,\" he explains, looking apologetic. \"I should probably get you home and get going.\"\n\n\"What time do you work?\" I ask, jumping up from the picnic table.\n\n\"Eight to Eight thirty,\" he says, standing up as well. \"I work Sunday through Wednesday, three twelves and a four.\"\n\n\"Sounds intense,\" I say, not that my schedule can't be just as demanding, it just wasn't as fixed. \n\n\"Eh, it's okay,\" he replies, reaching for my hand. I catch his and he squeezes again, then we head towards his car.\n\n\"Thank you, for tonight,\" I say when we get to his car. \n\n\"Thank you,\" he counters. \"I really enjoyed it.\"\n\n\"I mean, really, thank you. No one has ever, um, you know, done PDA with me in public before.\"\n\nHe's buckling his seatbelt now, but he looks over at me. \"No one's ever held your hand in public before?\"\n\nI shake my head. \"I mean, I get it, it's hard being gay, and especially for men, like with public displays.\"\n\n\"Cody, I will hold your hand in public every day of the week, no matter who's looking. You just haven't met the right men.\"\n\nI chuckle, blushing into my lap. \"Yeah, I guess.\"\n\nThe conversation gets unsettlingly close to discussion about Jace and I steer it away every time, but I can tell Lee is curious. We get back to my house, but I'm not ready to leave him yet. He turns the car off, but neither of us get out. \n\n\"You're really awesome, Cody,\" Lee says softly. \n\nI snort. \"You're the one that's awesome, Ashley,\" I correct.\n\nHe gives me a playful side-eye. \"Are you gonna make me regret that I told you my real name?\"\n\n\"Never,\" I swear. \"I love it.\" Fuck, why'd I say the 'L' word. \n\nIt doesn't seem to trip him up. \"Can I touch you?\" he asks, surprising me.\n\n\"Um, yeah,\" I reply, suddenly on edge in the best way possible. There are so many butterflies in my stomach that I'm worried if I open my mouth they will all fly out, so I keep it shut.\n\nLee's fingers trace my jaw, and I instantly regret not shaving, but he doesn't seem to mind. They stroke down to my chin, turning my face towards him. His eyes are glowing in the light from his dashboard, I'm unable to look away as his fingers trace back up my jaw, then slip into my hair behind my ear. \"Do you like it when I touch you?\"\n\n\"Uh-huh,\" I say, incapable of forming real words when his fingers are massaging my scalp like that. \n\n\"Did you like it when you were my Brat?\"\n\n\"Fuck yes,\" I hiss, leaning into his hand. It tightens in my hair, hard enough to bring tears to my eyes. I gasp and he releases it, then his fingers softly massage my scalp again. \n\n\"You still like it?\" he whispers, the look on his face intense, but in the best way possible. \n\n\"Yes, Sir,\" I whisper, raising my hand to cover his. I lean into his palm against my head, then scrunch my fingers over his. He fists my hair and I gasp again, but I also hold his hand to keep him from relaxing. \"I like it, Sir.\"\n\nLee exhales loudly, then shifts in his seat. He unbuckles his seatbelt with his other hand and leans across the car until his lips are so close to mine that I can feel his heat. \"I don't want you to regret anything you do with me, Cody,\" he says, his fingers relaxing, but his hand still buried in my curls. \n\n\"I'll try,\" I whisper, leaning closer to him until my seatbelt restricts further movement. He pulls back just enough that I never reach his lips. I fucking love it, how he teases me, I've never felt like this before. \n\n\"It's not about trying, Cody,\" he says, his fingers relaxing, but still holding me in place. \"You need to tell me when you aren't okay with something. It's about you being comfortable all the time around me. I couldn't handle it if, you know, I forced you to do something that made you feel bad, you know?\"\n\n\"I mean, like, I liked it, I just didn't want to mess up with you, make you think I was a weirdo or something.\"\n\nHe strokes his fingers through my hair, and I'm humming like high tension wires. \"Talk to me, yeah?\" he asks, but also demands. \"When you feel like that, okay?\"\n\n\"I will.\"\n\n\"Don't let it get like today. If I'm out of line, if you're uncomfortable you say 'coffee'. You tell me right away. Don't do anything because you think it would make me happy. Anything we do, Cody, anything we do, we do because we both like it, and if that's not happening I need to know right away. Promise me, right now. I can't bear to see you upset because of me, okay?\"\n\n\"Yeah. Yes, I promise,\" I say, feeling like a tool for my panic attack earlier, but in a better place now that I understood Lee a little more. \"I'm sorry about earlier.\"\n\n\"Don't be sorry, Cody,\" Lee whispers, his other hand cupping my opposite cheek. \"Just talk to me, okay?\"\n\nI nod. \"I will,\" I promise again. I close my hand over his in my hair again, urging him to grab it again. \n\n\"You really are a brat, aren't you?\" he asks, his tone dropping down low enough that I'm standing at attention in my pants. \n\n\"Yes, Sir,\" I reply. He fists my hair again and I shiver. It hurts, but in a really good way. \"I wanna be your Brat.\"\n\n\"Very good,\" he praises, sending a bolt of pure energy through my body. \"I want to kiss you, Brat.\" It's not a question, but it's completely a question as well. He does it so well that I swoon. \n\n\"Please, Sir. I want that, too.\" \n\nHe pulls me by my hair until our lips are just barely not touching. \"Good boy,\" he whispers, the heat of his breath washing over my lips. He's controlling my head with his fist in my hair and he barely brushes our lips together, an electric shock of need knocking me on my ass. I hear myself whining and he chuckles, then crushes our lips together. \n\nAt first neither of us move, then I open up to him and he takes me by force. His lips are chapped and I love the texture difference. I can taste residual bbq sauce on his breath and I know that this flavor will remind me of this moment for the rest of my life. He doesn't give me time to think about it as he kisses me hard. I kiss him back, matching his pace. It's easily the best kiss I've ever had, and I never want it to end, but he kisses me with such ferocity that soon I'm out of breath, out of air, and I need to breathe. \n\nHe must sense it, or feel the same way as he pulls us apart by my hair. We're both panting, his dashboard-lit eyes are wild. I want him so much. I want to kiss him forever. I want to blow him right now, to feel his beautiful member filling my mouth, stabbing down my throat. I want his cum. I want him on top of me, or me riding him. I want his everything, and I want it all now. \n\nI can't speak, I'm so overwhelmed. His fingers relax in my hair, then he presses our foreheads together. \"I wish I didn't have to work tomorrow,\" he whispers.\n\n\"Me too,\" I agree. \"But I also have to work.\" I sigh, and he follows suit. \n\n\"My appointment is tomorrow over my lunch break. Should have results by, I dunno, maybe Thursday.\"\n\n\"I'll stop by the clinic tomorrow,\" I promise. \n\n\"Good,\" he says, pulling away. I regret the second his fingers slip from my hair. \"Not gonna be able to meet up again until at least Wednesday anyway,\" he says, and my heart hurts. I want to see him everyday. I want him to never leave. \n\n\"Okay,\" I say.\n\n\"Just, you know, because of my schedule.\"\n\n\"Yeah, makes sense,\" I say, trying not to sound too disappointed. I unbuckle, my hand on the door, but I'm not done, not if I can't see him until Wednesday. I reach across the car before I wimp out and catch his chin, then kiss him like I might never see him again. He moans in the back of his throat and kisses me back, his hands around my neck. I don't know what to do with my own, but then I find one of them on his cheek and the other in his hair. \n\n\"Hmm, Cody,\" he moans, pausing for breath, then dives back in as soon as he takes it. Kissing Lee is hypnotic, I can't stop myself, but he stops us both with a will power I'll never have. \"I could kiss you all night long,\" he whispers into my mouth. \"But, I have to work, and so do you. Just cause we can't meet up doesn't mean we can't text and talk.\"\n\n\"Mmm-hmm,\" I say, dazed from our kisses. \"Yeah.\" A moment passes until I can find a normal breathing pattern again. \"I should let you get going.\"\n\n\"Yeah,\" he agrees, then reaches across the car and pulls me into another kiss. I'm melting into him, but eventually we both break away again. He looks at me and I love the wild look in his eyes, showing me how much he wants this. It makes me need more, but I know he has to go, and I can tell he knows it, too.\n\n\"Call me tomorrow, like, when you're done with work?\" I ask, hoping it's not out of line.\n\n\"Yeah, sure, of course,\" he says, happier than I expected. \"I was a little nervous that it would seem too clingy.\"\n\n\"I like clingy,\" I reply. He squeezes my hand and then slowly pulls away, neither of us want to go, but I open the door and step out. \n\nHe turns the car on and rolls the window down. \"Call you tomorrow,\" he says.\n\nI smile and wave. \"Looking forward to it.\"\n\nHe puts his car in reverse, but hesitates. \"Oh, and Brat?\"\n\nI gulp. \"Yes Sir?\"\n\n\"You're not allowed to cum until I say so.\"\n\nHis words hit me like a wall. My balls are already aching, and I know it's just going to get worse. I swallow hard before I answer, so turned on and riled up I can hardly stand. \"Yes, Sir,\" I growl. \n\nHe laughs, then pulls out of my driveway. I watch him until his taillights disappear around the corner, then moan out loud, frustrated and horny beyond belief. \n\nIt's fucking amazing. I get a text from him twenty minutes later. 'Thank you so much for tonight.' It was immediately followed by 'If you cum without permission I'll have to punish you.\"",
        "'Yes Sir,' I reply. 'Good night.'\n\nI'm still hard, it feels like I've been hard for hours. All night. Everything aches in the best and worst ways possible. I strip down to my boxers and imagine Sir getting ready for bed. I wonder if he sleeps naked. In my head he does. I'm touching myself without meaning to, once I realize it I stop, but as soon as I stop paying attention I find myself stroking my hard length again. \n\nSir didn't say anything about touching, just that I wasn't allowed to cum. The thought alone drove me higher, and I both wanted to be punished, and wanted to be Sir's good boy. I was close, every brush of my fingertips was a jolt of pleasure. How would Sir punish me, if I was bad? Would he spank me?\n\nI stopped stroking myself just before I came, but I waited too long. I felt the cum ooze out of my slit, but I didn't feel the pleasure of an orgasm. If anything once the cum was done seeping out of me I was hornier than ever. \n\nI whined, alone in my room, with no one to hear me, but it was still embarrassing. I came, I was a bad boy and Sir was going to punish me, and the orgasm hadn't even felt good. I almost texted Sir right there but decided to wait until morning, I didn't want to keep him up. \n\nI didn't text him right away in the morning, either, ashamed of myself. I stopped by the clinic on my way to work and did my blood draw, swabs, piss test, all the bells and whistles. It felt a lot different this time, last time was after Jace infected me, which was ten different types of awkward. This time it felt like it was a task that would earn me a prize once I finished it, a chore, but one with a really good reward at the end. \n\nI sent him a text, just a quick 'good morning, got tested', then went to work. I felt guilty and naughty all day long except for the time I spent under the ninety year old house I was rewiring. All original wiring, and it's a freaking miracle that this house hadn't burned down already. I don't think I've ever worked on something so old, I usually worked on new construction. I liked the challenge, but it was scary and dangerous, too. And, there were a lot of things I didn't really want to think too long about down there in the crawlspace with me, bones and garbage and a weird black sticky puddle with a horrid, indescribable smell. \n\nLee texted me while he was on his lunch break, but I didn't end up seeing it until I was home from work and already showered. 'Hope you were a good boy last night,' he sent.\n\nI swallow hard, he'd seen right through me. 'I'm sorry' I text back, then follow it up with 'I didn't mean to, it just happened.'\n\nHe didn't even read the texts for two hours, but I shouldn't have expected him to when he was at work. Even after he read them he didn't text back, but again, still at work. I was pacing my kitchen waiting for it to be eight thirty, then nine, then nine fifteen. Still no text.\n\nThe phone buzzed in my hand and I saw he was calling me, and my first impulse, the 'bad boy just got caught' impulse, was to ignore the call and hide my phone. Instead, I answered it.\n\n\"Hey Lee,\" I said, trying to sound upbeat, but I failed.\n\n\"Hey yourself, Cody,\" he replies, sounding happy, and I really hope that I'm the reason for it. \"How're ya now?\"\n\nWe talked about mundane things for a while, work and whatnot, each minute of casual conversation building up the nervous guilt in my stomach until I couldn't bottle it in anymore. \n\n\"I'm sorry,\" I apologize instead of answer his question. \n\n\"Oh?\" he asks, sounding coy. \"For what?\"\n\nMy voice gets small. \"For, um, last night.\"\n\n\"What about last night? What do you need to apologize for?\"\n\n\"I came,\" I force myself to say. It hurts leaving my mouth.\n\n\"You came, even after I told you not to?\"\n\nI swallow hard. He'd been setting me up this whole call, and suddenly I knew it, and now he knew that I knew it. He chuckled. \"Yes, Sir,\" I whispered. \n\n\"How did something like that 'just happen'?\" he asks.\n\n\"I stopped touching myself before I came, but it still happened. It didn't even feel good, and it made me even hornier. I had a hard time sleeping,\" I blurt, each word coming faster than the last.\n\n\"You ruined your own orgasm?\" he asks, sounding pleased.\n\n\"I don't know, I mean, is that a thing?\"\n\nHe chuckles. \"You're so innocent. Yes, it's something I would use as a punishment, but you seem to have punished yourself.\"\n\n\"Does that mean I'm not in trouble?\" I ask hopefully, but also not really wanting to get off without punishment. \n\n\"Of course not,\" Sir says, then laughs. \"I decide your punishment, Brat. Did you like it?\"\n\n\"No,\" I whine, wriggling as my balls ache and my dick pulses with need.\n\n\"Good,\" Sir says. I feel better, he's pleased with my answer and for whatever reason, making Sir happy feels really good. \"I'll have to think up a good punishment. You won't make the same mistake again tonight, will you?\"\n\n\"No Sir,\" I say quickly. He chuckles. \"I won't, I promise.\"\n\n\"You promised last night, too,\" he says.\n\n\"I know. I'm sorry,\" I apologize again. \n\n\"You will be, when I'm done with you Brat,\" he promises. I moan and he growls. \"It's so hot that you wasted an orgasm,\" he says, his voice lower. I love it when he sounds like this, husky and needy. \n\n\"It is?\"\n\n\"Oh yes,\" he purrs. \"Do you want to know what I'm doing right now?\"\n\n\"Yes, Sir,\" I reply, but I have a good idea of what he might be doing.\n\n\"I'm touching myself, thinking about how frustrating it must have been for you last night.\"\n\n\"It was so frustrating,\" I whine.\n\n\"Tell me about it,\" he grunts, then moans a little when I whine. \n\n\"I was touching myself because you didn't say I couldn't, but then I didn't stop soon enough and I started coming. I stopped immediately but the cum came anyway, and it felt so frustrating, like, I came, but I didn't actually cum, and it made me super horny, like, even more than before.\"\n\n\"Oh Brat,\" he moans. \"I'm jacking off to your ruined orgasm, and you don't get to cum again tonight.\" I whine and he laughs. \"How does that make you feel?\"\n\n\"I'm super frustrated,\" I mewl. It's pathetic, but that's where I am right now. \"I wanna cum. Please, Sir, can I cum?\"\n\nSir growls then moans. \"Fuck, I'm coming, I'm coming.\" Those are the most sexually charged words I've ever heard and I want to cum so bad I can feel it in my teeth. \n\n\"Sir, I want your cum,\" I beg, out of my mind with need. \"I want you to touch me.\"\n\n\"Soon,\" he promises, sounding breathy. \"Be a good boy for me, okay?\"\n\n\"Yes, Sir,\" I promise, unable to sit still I'm so turned on. \n\n\"I know you will,\" Sir says, and I know I will, now, too. It's so easy when Sir says it.\n\n\"I can't wait to see you again,\" I say, feeling really vulnerable and open right now, completely exposed. If Lee was here he'd be able to see inside me, I'm feeling that transparent right now.\n\n\"Me either,\" he agrees. \"Soon. What days are you off this week?\"\n\n\"Thursday and Saturday,\" I reply. \"It changes, though, depending on what jobs are happening at the time. Doing wiring for a new house, so it's pretty easy when the walls aren't up and I don't have to crawl under an ancient house, but I have a hard deadline.\"\n\n\"Nice. Okay. Do you have plans, I mean, other than work?\"\n\nI shake my head, then realize he can't see me. \"Not really. Usually meet up with Carrie for lunch on my weekday off, so that'd be Thursday. Other than that not really.\"\n\nLee makes a pleased noise. \"Nice. Okay. Keep your Wednesday night open for me please?\"\n\n\"Yeah, sure. Of course,\" I agree instantly. \"I don't know if my results will be in by then, though,\" I follow up after a second for my brain to catch up.\n\n\"I didn't say anything about that, did I, Brat?\" Sir teases. \n\n\"No,\" I whisper, biting my lower lip.\n\nSir laughs. \"We don't need your test results back to punish you for coming last night, do we?\"\n\n\"No sir,\" I mumble. \n\nSir laughs again. \"I'm really looking forward to it.\"\n\n\"Me too,\" I whisper. Lee laughs and even though he's not here, I'm on cloud nine, though I don't really recall clouds one through eight. \"Good night, Sir.\"\n\n \n"
    ],
    "authorname": "PDreadful",
    "tags": [
        "bdsm",
        "masturbation",
        "phone sex",
        "denial",
        "ruined orgasm"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/decoding-desires-ch-02"
}