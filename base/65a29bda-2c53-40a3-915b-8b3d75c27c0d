{
    "title": "The Dancing Ghost of Webster's Gore",
    "pages": [
        "Jared Prince was stopped by a fan as soon as he entered the Union Street Starbucks. He autographed a napkin for her, thanked her for her babble of praise with as much enthusiasm as he could feign, then stepped to the counter and asked for a Caffe Latte. Looking around while awaiting his order, he saw Charles Butler at a corner table and waved. Charles nodded to him, then lowered his gaze to the sketchpad in front of him. He continued drawing as Jared got his coffee and sat down across from him.\n\n\"Remember how great you once thought it would be to be famous?\" Charles asked, without looking up.\n\n\"I used to enjoy it,\" Jared said with a shrug.\n\n\"You used to be the Crown Prince of Horror.\"\n\n\"I'm not any more?\"\n\n\"You want to keep the title, you've got to stay in the ring.\"\n\n\"That's a mixed metaphor.\"\n\n\"I'm an artist, not a writer.\" He held up his sketch. \"What do you thing? Is that a spooky enough castle? It's for the cover of Angeline McFadden's new one.\"\n\n\"All castles are spooky in the dark.\"\n\n\"I suppose that's true.\" He set aside the sketchpad and took a sip of coffee. \"So what's going on with you? For two decades you cranked out a best seller a year, now you haven't published in, what? Three years?\"\n\nJared looked into his cup before answering. \"I haven't written more than a thousand words since the divorce.\"\n\nCharles nodded sympathetically. \"It's tough, I know. I've been through it twice. You and Sylvia were together for what? Seventeen years?\"\n\n\"Nineteen,\" Jared mumbled. \n\n\"Alright, but with all respect, isn't it high time you moved on? Got back to work?\"\n\nJared scratched his head. \"The thing is, I don't think it's about Sylvia, per se. I think it's about getting knocked out of my groove and not being able to get back in it. The divorce is just a part of that. I had a routine. I got up every morning, made my coffee and sat in my office and wrote. I think as much as anything, it's that I am not in my place. My apartment doesn't seem like home. In my office, I was surrounded by my books, my music, my memories of all I'd written in that same chair.\"\n\n\"So, create a new space.\"\n\n\"Yeah, maybe I ought to find a house. Somewhere more secluded. Even then, I don't have any strong story ideas.\"\n\nCharles sketched for a minute, then looked up at Jared with a crooked grin. \"I've a thought. Perhaps there's a stone that can whack both birds. You've written about vampires and werewolves and alien invasions, but you've never written a traditional ghost story, have you?\"\n\n\"I've tried to never write a traditional anything.\"\n\n\"Oh, believe me, I know. I still get hate mail because the paperback cover of Fanged Fury depicts vampires in broad daylight.\"\n\nJared laughed. \"Well, why should an author be bound to some so-called ancient lore, most of which was invented by Universal Pictures in the nineteen thirties...\"\n\nCharles held up his hand. \"Don't get defensive, I was just pointing out an area you hadn't explored. And I had a reason for it.\"\n\nHe picked up his phone. \"Maeve and I were up north a few months ago...\" he said, trailing off as he thumbed the screen. \"Okay, here it is...\"\n\nHe handed Jared the phone.\n\n\"Alright, nice house. Needs some work, by the looks of it.\"\n\n\"It's in a place called Webster's Gore.\"\n\n\"The middle of nowhere...\"\n\n\"It's not the middle of nowhere. It's just two miles down the road from Webster's Corners, which is not more than ten miles from Webster itself. And Webster is big enough to have a Subway and a Dollar General.\n\n\"So, the ass end of nowhere.\"\n\n\"And it's for rent.\"\n\n\"There are plenty of houses right here for rent...\"\n\n\"And it's haunted.\"\n\nJared stopped in mid word. He raised one eyebrow and stared at Charles. \"Haunted?\"\n\n\"So the locals say. It's a nice house, in a beautiful location, and they can't rent it for half the market rate.\"\n\nJared sat back, rubbing his chin. After a minute, he said, \"Charlie, you know why I am so good at writing horror?\"\n\nCharlie shrugged. \"I have some thoughts, but you tell me.\"\n\n\"Because I don't believe in any of that crap. There are no werewolves, there are no zombies.\" He took a sip of coffee. \"Okay, I grant there are probably aliens, but they ain't here. So, I don't think I'm going to get any interviews with ghosts to base a story on.\"\n\n\"I was thinking more of the ambience.\"\n\nJared stared out the window for a minute, then turned back to his friend. \"It is an intriguing idea. Are we talking rattling chains, screeching phantoms rushing down the halls, what?\"\n\nCharles set aside his drawing and leaned forward. \"Here's the most interesting part. Most of the stories about the house are claims of seeing a beautiful spectral woman, dancing on the lawn.\"\n\n\"You should have led with that!\" Jared said, laughing. \"House for rent. Furnished. Succubus included.\"\n\nCharles snorted. \"Don't get your hopes too high. Anyway, why not give it a go? Maybe for a change of pace, you could write a non-fiction piece on what it's really like living in a haunted house.\"\n\n\"That's an interesting thought.\"\n\n\"I'll email you a link to the ad.\"\n\n****\n\nWebster had a Subway and a Dollar General, but all Webster's Corners had was Campbell's Gas and Variety. Jared had arranged to meet his new landlady, Myrna Freeman there to pick up the keys to the house. A light rain was falling when he pulled into the gravel parking lot. He looked around, but the only other vehicle in the lot was a beat up pickup truck pulled up to an old fashioned mechanical gas pump. The burly man in the red and black flannel jacket and hunters orange hat was clearly not Myrna Freeman.\n\nHe parked near the door, got out and dashed into the store. A bell jingled above his head as he stepped inside. The light was dim in the store; the smell was musty. There was a big cooler of beer and soda, and several racks of canned goods and staples, but not much else. Jared was disappointed to realize that this was the closest store to his new home.\n\nA bald man with a long gray beard sat behind the counter, peering out between an ancient cash register and a display rack of lottery tickets. He nodded at Jared as he approached the counter.\n\n\"I'm looking for Myrna Freeman,\" Jared said, \"We had arranged to meet here.\"\n\nThe man raised one shaggy eyebrow. \"You must be the new tenant up to Hawthorne Road.\"\n\n\"That's right,\" Jared said.\n\n\"Myrna said you was some kind of writer. Monster stories and such.\"\n\n\"I am. Jared Prince.\" He offered his hand. The man shook it weakly.\n\n\"Abel Campbell,\" the man replied.\n\n\"You own the store?\"\n\n\"Fourth generation,\" he replied. Without taking his eyes off of Jared, he reached into his shirt pocket, removed a tin of snuff and tucked a pinch under his cheek. \"So,\" he said, wiping a drop of droll from his lip, \"You gonna write a book about the dancin' girl?\"\n\nJared shrugged. \"I might. Have you ever seen her?\"\n\nAbel looked off into the distance and slowly nodded. \n\n\"I was in middle school. Thirteen or thereabouts. My friends and I hiked up there one night just to see what we could see. Full moon that night. Folks said she danced under that big oak tree and you could only see her when the moon was bright. We never even went in the yard, though, just sat across the road and watched in the dark. We was about to give up, but when the moon come up, I seen I guess you'd call it a glimmerin' of light. Just her legs, that's all I seen, shinin' in the moonlight, doing a little dance. We all seen it. My friends, they jumped up like a bunch of jack in the boxes.\"\n\nHe paused again, rubbing his chin. \"I have to tell you, Mister Prince, I was kind of mixed up. Just as much as I wanted to run away, I had the urge to run to her. Actually took a step or two in that direction, but then I seen...\"\n\n\"What?\"\n\n\"She weren't dancing on the ground, she was like, floatin' in air. Well, that did it for me. My friends was about fifty yards down the road, but I caught up to them with a quickness.\"\n\nJared was about to ask him for a fuller description of what he saw, but the bell tinkled and Abel looked past him to the door. \"Well, here's Myrna now,\" he said.\n\nJared turned and saw Myrna Freeman enter the store. She was short, and nearly as wide as she was tall. She looked at Jared with a bright smile.\n\n\"I guess you're Mister Prince,\" she said, reaching out to shake his hand.\n\n\"Yes, I am.\"\n\n\"My daughter says she read some of your books.\"\n\n\"Well, please give her my regards.\"\n\n\"Uh huh.\" She opened her purse and began to dig through it. \"So, how's your mother doing, Abel?\"\n\n\"She's still doin',\" he replied.\n\nShe squeezed past Jared and put her purse down on the counter. \"Gosh darn keys are in here somewhere,\" she mumbled. Eventually, she found them and handed them to Jared.\n\n\"Big one's the front door,\" she told him, \"Smaller one opens the cellar. Have you got the rental agreement I mailed you?\"\n\nJared took the folded paper from his jacket pocket. \n\n\"Signed and dated,\" he said, handing it to her.\n\nMyrna glanced at it and said, \"You understand, this is for one year. If you should decide not to stay...\"\n\nAbel snorted and she glared at him.\n\n\"You are liable for the year's rent.\"\n\n\"Understood and agreed,\" Jared said. He took a check from his shirt pocket and gave it to her. She looked closely at it, nodded in satisfaction and tucked it, along with the rental agreement, in her purse.\n\n\"Any questions?\" she asked. \"You know the way out there?\"\n\n\"No questions. I think I can find it alright,\" he replied, then stopped. \"Actually, I was wondering something. The name Webster's Gore, what does that mean?\"\n\n\"When they drew up the town lines back in the colonial days, they accidentally left a space off and it became a part of no town. A gore means a place that no one claims. Kind of an in between place.\"\n\nJared nodded with a sardonic grin. Just where I belong right now, he thought, an in between place.\n\n***\n\nThe road to the Gore took Jared through a beautiful countryside of rolling wooded hills and tidy farmsteads. The moving van was already there when Jared found the house. Myrna had sent him a few pictures and a hand drawn floor plan, so he knew what to expect when he arrived, yet he was somewhat disappointed. It was just an old farm house with a ramshackle attached barn, there was nothing gothic about it at all. It sat at the top of a slight incline, behind a tumbled stone wall and a wide yard of witch grass sprinkled with purple asters and goldenrod. And there was the tree. It was a massive oak, at least three times the height of the house. Its branches shaded half the yard and the entire width of the road.\n\nThe movers climbed down from the cab of their truck and opened its back gate. Jared stepped on to the porch and crossed to the front door. He fished the keys from his pocket, then hesitated before unlocking the door. He felt a twinge of fear, then felt embarrassed for it. Shaking his head and chuckling, he opened the door and stepped inside. \n\nIt was dark in the foyer. He could make out a set of stairs leading upward in front of him and the faintly lit outlines of doors to his left and right. He felt on the wall for a light switch, but could not find one. He stepped to the left, according to Myrna's drawing, the living room, and ran his hand along the wall inside the door. As he did so, he wondered if he had the nerve to stay in the house tonight if the lights did not come on. But his hand struck the switch, and Myrna had indeed, turned the power on. The room was illuminated from a dusty ceiling fixture. \n\nThe movers came in behind him and began to check out the layout of the house. Soon, the entire house was lit. They began hauling in furniture and dollies laden with crates and boxes. Jared felt like he was in the way, so he stepped outside. \n\nThe late afternoon sun was hovering in the western sky, barely clearing a long line of low hills. He stepped down off the porch and looked toward the tree. \"She danced under that big oak,\" Abel had said. Jared walked, in hesitant steps, across the lawn and into the shadow of the oak's massive boughs.\n\nHe felt a chill, but attributed it to the shade and the approaching dusk. The grass was thin under the tree, and the ground was bare nearer the trunk, but littered with acorns. He looked up into the tree, thinking that it must be a fine home for squirrels but he saw none. He realized he heard no bird song either.\n\nThe bang of the screen door slamming startled him, and he turned to see the movers exiting the house. One of them approached him with a clipboard. He handed it to Jared and took a pen from his shirt pocket.\n\n\"All set, buddy,\" he said, \"Just sign here and we'll be on our way.\"\n\nJared took the clipboard, signed the papers and handed it back. \n\n\"Nice old house, but it sure is isolated out here,\" the mover said.\n\n\"Well, I'm a writer, I'm hoping to get away from distractions.\"\n\nThe mover nodded and looked down at his manifest. \"Oh, Jared Prince. Yeah, my wife has some of your books. She likes the spooky stuff.\" He looked around the yard. \"Yeah, you could get some inspiration here. Well, good luck with the writing.\"\n\nHe signaled to his partner, and they climbed into the cab of the van. Jared watched them pull out of the driveway and for a moment, felt an urge to jump back in his car and follow them. \"Don't be silly,\" he muttered aloud to himself, \"There's nothing here to be afraid of.\"\n\n***\n\nThe first thing he unpacked was his stereo system. He got it hooked up and filled the house with the sound of Bach concertos as he got to work setting up his new home. He found a box of linens and made his bed, then started on the kitchen. The nearest supermarket was in Farmington, almost an hour's drive away, but he had brought some staples and a few canned goods. He heated a can of soup and sat at the kitchen table and ate it. Sylvia would have a conniption, he thought, but he was on his own now and could eat what he wanted.\n\nAs he was finishing his soup, he glanced up at the window and realized that it was fully dark outside. Go look, he thought, then laughed at himself. He got up and rinsed his bowl in the sink. He looked out across the lawn. It was dark under the tree and he saw no sign of movement. Shaking his head, he went to the living room and found a box labeled \"work\". Food, shelter, and writing, he thought, my hierarchy of needs. He dug through the box and found his laptop. Flopping on the couch, he flipped it open. He connected to the hotspot on his cell phone and opened his browser. When he did not connect to the internet, he checked his phone and saw that he had only one bar. \n\n\"Fuck me,\" he muttered. He closed the laptop and sat quietly, thinking. Maybe that was for the best, he thought, the slow connection would tempt him to fewer distractions. Now, if only he had something to write about.\n\n****\n\nIt was raining in the morning, a slow steady drizzle that continued all day. Jared had slept well. He spent a couple of hours setting up and filling his bookshelves, then made the drive to Farmington to eat lunch and buy groceries. When he returned home, he took his laptop into the kitchen and scrolled through his slush file of story ideas. He opened one, titled Tooth and Claw, and began to read. After a few minutes, he closed it. Werewolf stories had been his bread and butter once, but he couldn't muster any interest for it. He got up and went to the front door. The rain had picked up and he could hear it hitting the leaves of the oak. He saw nothing in the dark beneath it, but still, it was a place to start. He returned to the kitchen and began to write. He spent an hour on a detailed description of the house. It was much more than he needed, but when he knew what direction he wanted to take the story, he'd trim out the extraneous details.\n\nThe words were coming to him tentatively, in fits and starts, but at least they were coming. When he started to feel hungry, he did not want to stop, so he threw together a sandwich for his supper, and kept going.\n\nMyrna had told him that the house had been built in the late seventeen hundreds. He tried to remember what he knew about that period. All that came to mind was George Washington and Thomas Jefferson. Perhaps the dancing woman was the widow of a soldier who had been killed in the Revolution. Was there fighting in this part of the country? He thought that Webster had a small library, perhaps they had some books on local history. They might even have something that would give him information about the house and who the dancing woman might have been. \n\nHe tried again to access the internet, and grew sleepy watching his home page try to load. He gave up and went to bed.\n\nHe awoke in a pool of moonlight. He rolled over on his side, his back to the window and tried to go back to sleep. Moonlight, he thought, as he began to drowse. Moonlight is special, but why? He sat up suddenly as the full thought formed. She danced in the moonlight. \n\nHe threw back his covers, and rushed to peer out of his second story window. From this angle the tree's canopy blocked most of the yard from view. But as the wind blew the leaves, he thought he saw a flash of something white beneath them. He leaned closer to the glass and stared. There was something there, something that was gleaming with the moon's reflection. Something that was moving. \n\nGrabbing his bathrobe, he hurried down the stairs, pulling it on as he went. He threw open the front door and stepped out on to the porch. \n\nHe detected motion before any image became clear. As he stared, he realized he was looking at a pair of delicate feet, toes aimed toward the ground like a ballerina on pointe. He remembered Abel saying that it was the fact that she floating above the ground that scared him into running. Jared did not run, he was mesmerized as the feet flexed and slowly rotated in a circle. His eyes moved up, taking in a pair of slender calves, bone white in the moonlight. Above the knees, the legs were hidden in the darkness of the tree.\n\nJared imagined himself stepping off the porch and going closer to her. That was something else Abel had said, that he was torn between fleeing from her and being drawn to her. But Jared found that he could not move.\n\nShe bent her knees, raising her heels and then slowly dropping them again. She made one more slow spin, and then, like a sputtering candle, seemed to just flicker out.\n\nJared stood on the porch for several minutes, hoping that she would appear again. But when a cloud hid the moon and the darkness under the tree spread to encompass the rest of the yard, he turned and went inside. \n\nHe sat down at the kitchen table and stared at the laptop screen, struggling to find words to preserve his impressions. For years, he had imagined the supernatural, and he had made a good fortune conveying his imaginings to others. But now, personally faced with the otherworldly at last, he could not articulate how he felt. He imagined that this was how religious people felt when they spoke of epiphanies.\n\nJust write it down as it happened, he thought, like a journalist writing a news story. He began typing, reciting the details of how he had awoken and what he had seen when he stepped out the door. Trying to go deeper into the meaning of his experience could wait until after he'd had more time for reflection.\n\nHe eyes were bleary. He shut the laptop and went back upstairs. We crawled back into bed. The sky outside his window had grown brighter. She will be gone now, he thought, at least for tonight, and he gave himself over to sleep.\n\n****\n\nIt was nearly noon when he woke. He dressed and drove into Webster. It was a drab town, dominated by the crumbling hulk of an abandoned tannery. In addition to the Subway and the Dollar General, it had a small grocery store and a couple of diners. The one sign of past prosperity was the ornate Carnegie library that loomed over the town square.",
        "Jared entered and looked around, impressed by the library's Gilded Age charm. He approached the circulation desk and was greeted by a smiling middle aged woman.\n\n\"May I help you?\" she asked.\n\n\"Hi, yes, I have just moved into Myrna Freeman's house out on Hawthorne Road. I was wondering if there was any way to get more information about the place. You have any local history books or anything?\"\n\nThe librarian chuckled. \"If anyone ever wrote any books about Webster, I've not seen them.\"\n\n\"Newspaper archives?\"\n\n\"Nothing we have. The Courier went out of business back in the seventies. I don't know if they have an archive anywhere or not.\"\n\n\"Well, alright, thanks anyway.\" He turned to leave, then looked back. \"The town office would at least have records, wouldn't they? Like when it was built, past owners and such.\"\n\nThe librarian pursed her lips and shook her head.\n\n\"No. Hawthorne Road isn't in the town, it's in the Gore.\"\n\n\"So who would have records?\"\n\nShe shrugged. \"Nobody, I guess.\"\n\nJared sighed and thanked her. As he walked away, he stopped, turned and asked her. \"Do you have any books by Jared Prince?\"\n\n\"Oh, yes, he's quite popular.\"\n\nHe smiled and left the library. The town hall was directly across the square and he considered checking there for records, despite the librarian's advice, but realized he didn't really know what he was trying to learn anyway. It's not like they would have some sort of directory of hauntings. He wandered around the village a little bit and went into the A-1 Diner and ate a club sandwich for lunch. It was good, and at least his trip to town wasn't a total waste.\n\nReturning home, he spent the afternoon setting up his writing room in the unused upstairs bedroom. He arranged his desk and filled his bookshelves. There were still boxes of keepsakes to unpack and pictures to hang, but they could wait. He was anxious to write.\n\nAfter a quick supper, he returned to the writing room and sat down at his desk. He opened his laptop and looked over the notes he had written the day before. Seeking a way to move beyond mere note taking to actually formulating a story, he mused on the character of the ghost. Like any other character, she should have motivation, but what was her motive? She did not seem to be malignant, she just danced, or at least that was all anyone seems to have observed. Was she dancing for some long dead lover? Or to entrance and perhaps ensnare some passerby? After all, the only descriptions of her dance came from those who had returned to tell the tale. Might there be others who could not, as Abel Campbell had, resist her lure?\n\nHe sat and stared at the screen. None of his suppositions seemed very satisfying. He pushed his chair back, slapped his thighs in frustration and whispered, \"What is it that you want?\"\n\n\"I wish for my story be told,\" a soft voice replied from over his shoulder.\n\nJared froze in place. His first thought was that he had imagined the voice, but with a growing sense of dread, he slowly swiveled in his chair and looked behind him.\n\nThe figure of a woman stood not more than a yard from him. She was tall and slender, dressed in a long white dress. Her skin was as pale as the dress; only her long, curling red hair gave any color to her appearance. Other than her alabaster complexion, she looked completely normal until Jared, steeling himself, looked into her eyes. There was something otherworldly about them. They seemed to not just reflect the light of his desk lamp, but to shimmer with it.\n\nJared stammered, struggling to find words, but the woman spoke first.\n\n\"You are a teller of tales, are you not?\"\n\nHe nodded his head and sputtered, \"Yes...yes, I am.\"\n\n\"I would have thee tell mine,\" she said. Her voice was sure, but sounded as if it were from a greater distance than the few feet that separated them.\n\nJared could not take his eyes from hers. \"I...I don't know...\"\n\n\"I would offer a bargain,\" she said, \"Your desires fulfilled in exchange for my own.\"\n\n\"My desires?\"\n\nShe took a step closer and raised her hand. Jared was surprised to feel its cool touch on his cheek. \"I know the desires of men,\" she said softly.\n\n\"Why do you want me to tell your story?\"\n\n\"It would bring me peace. I can no longer find justice, so it is as much as I can achieve.\"\n\nA part of Jared's mind was able to separate itself from the wonderment that had overtaken him. Of course, you take that deal, it said.\n\n\"Alright,\" he told her, \"Yes, if you tell me your story, I will write it. I have many readers.\"\n\nShe did not seem to move her feet, but she receded away from him. \"I shall, but for now, I must go.\"\n\n\"Wait. But when...\"\n\nShe had vanished. Jared leaped from his chair and ran down the stairs. He threw open the front door, expecting to see her dancing above the lawn, but all he saw was darkness. He looked to the moonless sky. Later, he thought, when the moon comes up.\n\nHe took a beer from the refrigerator and went back up stairs. For the next several hours, he typed away furiously, recording every detail of his ghostly encounter. As he did so, he pondered the effect it had on him. Writing his thought seemed to give him some distance from the situation, and allowed him to examine his own feelings\n\ndispassionately. He felt no fear, only a sense of wonder, and excitement at the opportunity to hear her tale. Of course he would write it. No one would believe that it was anything but another product of his own imagination, but that was alright. He would know the truth.\n\nHe looked up from his screen and realized that it was very late. He went to the window and saw the moon rising above the horizon. He went down stairs and out to the porch. \n\nShe was there, and she was dancing. He sat on the top step and watched. Once again, only her legs were visible, although with the moon so low in the sky, they were illuminated to the middle of her thighs. She pirouetted slowly, occasionally lifting one knee high, or raising a heel behind her. As he watched her, he realized that he was becoming aroused. That did not surprise him; her legs were long and shapely, and moved with a sensuous grace. He understood how Abel felt compelled to go to her, and he only resisted the urge himself with great effort. She will come back to you, he reminded himself. \n\nEventually, her legs became still, and faded into the dark.\n\nHe went back inside and sat once more at his desk, but no more words came. All he could think of was the beauty of her dance.\n\n****\n\nShe came to him again the next night as he was finishing his supper. He looked up from his plate and she was in the chair across the table from him.\n\n\"I would tell my tale,\" she said.\n\nJared stared for a minute, the last bite of his supper suspended on his fork, halfway to his mouth. He set it down, cleared his throat and said, \"Could I ask you a few questions first?\"\n\nShe frowned and for a second, he thought she was fading from view.\n\n\"I can not say much of what you likely want to know.\"\n\n\"Can you tell me anything about your...condition? What...what are you? Why are you...\"\n\n\"Haunting,\" she said, the corner of her mouth rising in the slightest trace of a grin.\n\n\"Well, yes.\"\n\n\"Feelings,\" she said, with a touch of melancholy in her voice. \"Feelings give me substance in this world and hold me here.\"\n\n\"Feelings like love? Hate? Desire for revenge?\"\n\n\"Those on whom I would that vengeance are long since gone themselves. But telling my tale to the world may loosen my bonds.\"\n\n\"Okay\" he said. \"I need to get my laptop.\" She looked at him in puzzlement. \"My tool for writing.\"\n\n\"I shall wait.\"\n\nHe rushed to his writing room, his heart pumping with excitement. He grabbed the laptop, but before he went back down the stairs, he stopped and took a few deep breaths. When he felt calm, he returned to the kitchen.\n\nShe still sat at the table, her hands folded in front of her.\n\n\"Do you eat? Drink? Can I get you anything?\"\n\n\"I take no sustenance.\"\n\n\"Alright then,\" he said. \"Can I know your name?\"\n\n\"Annabelle.\"\n\n\"And your family name?\"\n\n\"It matters not.\"\n\n\"I am ready to take down whatever you wish to tell me.\"\n\nShe sat in silence for a moment, then, gazing past Jared, began to speak.\n\n\"I crossed the sea in my mother's belly,\" she said, \"She was a woman of low birth, a whore and a pickpocket. When the King's justice at last caught up with her, she was sentenced to transportation to America.\"\n\n\"Do you know what year that was?\"\n\nShe looked at Jared with obvious annoyance. \n\n\"It was a few years before the war.\"\n\n\"I'm sorry,\" he said, \"I won't interrupt again.\"\n\nShe nodded and continued. \"In the new world, she continued with her same practices. I hold memories of soldiers coming to our tent, and taking their pleasure. And of fleeing when the soldiers boarded the ships to return to England. I believe that she feared the victors would express their wrath toward any who gave succor to their foes.\"\n\nJared took down her words as accurately as he could. He would glance up at her as she spoke, and it seemed to him that as she did, she grew more substantial.\n\n\"It was in Baltimore that my mother succumbed to the pox. I was taken to the orphan's home, and then given into the care of Mrs. Fletcher, a washerwoman, to earn my keep scrubbing the linen of the gentry. I engaged in that labor for several years, but then a great conflagration spread through the block, and Mrs. Fletcher's laundry was burnt to the ground. I wandered the street for some time, begging alms from strangers, until a certain Mr. Henderson offered me employ in his tavern. It was there, beyond my duties in the kitchen, that I first began to ply my mother's trade.\"\n\n\"You started picking pockets?\" Jared asked.\n\n\"No,\" she said, with what might have been a smirk.\n\n\"Oh.\"\n\nShe sat quietly for a moment, then rose from the chair. \"I have not spoken at length in many years,\" she said, \"I am taxed.\"\n\n\"Do you want to continue this tomorrow?\" \n\n\"Yes,\" she said. Jared stood, thinking he would walk her out, but as he watched, she seemed to blur and diminish, and was gone.\n\nHe sat back down, feeling foolish. He had responded to her as if she were not a phantom, but a living woman. He looked over the notes he had taken. This will be an exciting story, he thought, the Revolution, the dying mother, the young girl lost and trying to find her way. He jotted down ideas for how to write Mrs. Fletcher and Mr. Henderson. They could be wonderfully colorful characters.\n\nWhen the moon rose, he went to the yard to watch Annabelle dance. He had only a few minutes to wait before she appeared, and this time, more of her was visible. the tops of her thighs shone in the silvery light, slowly swaying as she danced. She turned toward him and he saw the dark patch between her legs.\n\nThe urge to go to her was almost too much to resist. But he remembered her words on her first appearance. \"Your desires fulfilled in exchange for my own.\" His desires would wait. When she ended her dance, he went to bed, and that night dreamed of holding her, of kissing her, of lowering himself between those graceful thighs.\n\n***\n\nAnnabelle came again the next evening. Jared walked into the living room and saw her standing by the window, gazing out across the lawn.\n\n\"Do many read your tales?\" she asked, without looking at him.\n\n\"Yes, my books have all been very popular.\"\n\nShe turned to face him. \"Shall I continue?\" she asked.\n\n\"Just a minute, please.\" He retrieved his laptop from the kitchen and sat down on the couch. Annabelle turned back to the window as she returned to her tale.\n\n\"Mr. Henderson was not an unkind man, but he was prey to vices. Drink was among them, but the worst was gaming. On a number of occasions, it was only the offer of my company that allayed violence from his creditors. At last, his poor luck with cards burdened him with a debt he could not make good. A certain Mr. Crowell, a trader from New England, appeared at the tavern, bearing pistols and demanding redress. Mr. Henderson mollified him with the only payment at hand. He gave me to Mr. Crowell, not for the night, but to take with him to serve as his companion.\"\n\n\"Wait,\" Jared interjected, \"You weren't his slave. How could he do that? You had rights?\"\n\nAnnabelle turned her head and scowled at him. \"Rights? What rights had I?\"\n\n\"I'm sorry, I just...\"\n\n\"Perhaps things are different in your time.\" She stared out the window for several minutes before she spoke again. \n\n\"I travelled north with Mr. Crowell. In daylight, I helped him peddle his wares. At night, I warmed his bed. We travelled a goodly distance, to Philadelphia, New York, Boston, and on. We continued north, through farmland and forest until we came near this hamlet of Webster. It was here that Mr. Crowell made his home.\"\n\nShe chuckled softly. Jared was startled, realizing that it was the first time he had heard her laugh.\n\n\"Of course,\" she continued, \"I could not go to his house, for his wife was in residence. Rather, we travelled back roads around the settlement, until we arrived here, at our...at my...final destination.\"\n\nAnnabelle looked around the room, as if in reminiscence.\n\n\"Has it changed much?\" Jared asked.\n\nShe shook her head. \"Not much.\" She waved at the television and toward the kitchen. \"Men will make machines and devices, but the fundaments remain unchanged.\"\n\nAnnabelle returned to her story, and Jared noticed, whenever he glanced up from his keyboard, that as she spoke, she was subtly changing. There was more color in her lips. Her languid motions became more lively. Feelings hold you here, she had said. Perhaps the emotions aroused by reciting her events of her life were somehow returning her more fully to the living world.\n\n\"This was the home of a Miss Caroline Dawes. She was unmarried and her parent's only child. Where I had known no father, her mother had died in giving her birth. When her father was killed while clearing a deadfall, she became his only heir. The pastures she leased to local farmers for hayfields, but her livelihood came in the manner that I had become accustomed to myself.\"\n\n\"She was a prostitute.\"\n\nAnnabelle nodded. \"And proprietor of this house of leisure.\"\n\nJared grinned. I live in not just in a haunted house, he thought, but a haunted whore house. This book is going to be dynamite. As soon as the thought formed though, he felt a flush of shame and realized that he was starting to truly see Annabelle as a person, and felt real anguish for the troubled life she had endured.\n\n\"I'm sorry that I interrupted,\" he said softly, \"Please continue if you would.\"\n\nAnnabelle nodded. \"Our arrival was fortuitous. Miss Caroline had three young whores in her employ, but two of them had run off, thinking to find work in the new mills down in Massachusetts. The one remaining was a dear but simple minded girl named Eliza. Hence, she was pleased to have me join her establishment.\"\n\nHer expression grew wistful. \"Miss Caroline treated me well, and Eliza became the first good friend I had known. The work was easy. The large part of our patrons were farmers and laborers, but the more prosperous gentlemen of the town enjoyed our services as well.\"\n\nShe hung her head and was silent. Jared thought she was finished for the night, but she said, in a whisper, \"I was happy.\"\n\nJared stood and walked toward her. He stopped, hesitated, then reached out and laid his hand on her shoulder. She turned her head and showed him a weak smile.\n\n\"If you want to stop for the night...\" he said.\n\nShe shook her head. He nodded and stepped back toward the couch. As he sat, she crossed the room and sat down at the other end. She folded her hands in her lap and gazed up toward the ceiling as she began, once more, to speak.\n\n\"In the summer of my second year with Miss Caroline, I accompanied her to town on market day. While she haggled over the price of onions and cabbages, I wandered to a cart filled with strawberries.\" She smiled at the memory. \"They were a delicacy I dearly loved.\"\n\n\"If I got some,\" Jared asked, \"Could you eat them now?\"\n\nAnnabelle nodded and grinned. \"I believe I could. When I am more...substantial, I can take pleasure.\" She paused. \"And feel pain.\"\n\n\"And it is your emotions that give you substance?\"\n\n\"As it seems, yes.\"\n\n\"Again, I interrupted. I apologize.\"\n\n\"If you will provide me strawberries, I will forgive you,\" she said, smiling.\n\nAnd I will taste them on your lips, Jared thought, then pushed the thought from his mind.\n\n\"There was a young man selling the strawberries. His name was Isaac Barkley. His father was one of the most prosperous planters in the county.\" She cast a sideways glance at Jared, \"And one of the greatest whoremongers. I approached the wagon, and Isaac offered me a plump red berry. I had never tasted such sweetness. We spoke a bit, of the weather and the crops, and he called over one of his father's servants, instructing him to tend to selling the berries. He took my arm and we strolled, to the edge of the village and down along the mill stream. In a copse of birch, he kissed me.\"\n\nShe rose and crossed to the window and gazed out, although it had grown full dark.\n\n\"In the summer of my twentieth year,\" she whispered, \"I at last knew love.\"\n\nJared stood, but did not approach her. She turned and faced him. \"Lust and passion were as familiar to me as sunlight and rain,\" she said, slowly moving toward him. \"But a kiss of tenderness, a caress of affection...such was new, and such I have not felt since.\"\n\nShe raised her arms, and Jared raised his, and they embraced. When her lips touched his, they were cool, but soft. He held her close and their kiss lingered, but then she gently pushed herself away.\n\n\"I must go,\" she said.\n\n\"Why?\"\n\n\"You know what I must do.\"\n\n\"Very well.\"\n\n\"Until tomorrow...\"\n\n\"I will have strawberries for you,\" Jared said, but by the time he finished the sentence, she had vanished. He went to the porch, and waited for the moon to rise. As it's light touched the yard, he watched the graceful motion of Annabelle's delicate feet. He was tired and longed for his bed, but he could not take his eyes from her. The moon slowly climbed in the night sky, and cast its light on her calves and then her thighs. It rose still higher and he could see the fullness of her hips, undulating seductively. He no more than glanced at them, however, before her visage faded.\n\nHe went to bed and thought of her until sleep overtook him. When we awoke in the morning his first thoughts were of her as well.\n\n****\n\nWhen Annabelle appeared the following evening, Jared had arranged a vase of fresh flowers, a bottle of fine red wine and a pair of glasses, and of course, a bowl of plump red strawberries on kitchen table.\n\nHe was pacing the floor when he saw her. All day, he had been thinking of her, and little else. He had not written a word.\n\nHe held out his hand and she took it, and he led her to the table. He pulled out the chair and she sat. Her eyes grew wide at the sight of the strawberries. Jared sat and watched as she lifted one to her lips and tasted it.\n\nShe smiled and and Jared clapped his hands in delight. \"I bought them at the farmer's market in town. I wonder if it's in the same place it was in your day.\"\n\nShe shrugged and ate another berry. Jared poured two glasses of wine, and Annabelle took a small sip. Setting her glass down, her face turned serious. \"Tonight, I shall finish telling my story. I do not know what might happen when I do.\"\n\n\"What do you mean?\"\n\n\"I feel that once it is told, the bonds that hold me to this world may unravel.\"\n\nJared felt a weight in his chest. \"I won't see you again.\"\n\n\"Perhaps,\" she shrugged. \"Or I will receive my release when you have put my tale to parchment. Or to...whatever that implement of writing may be.\"\n\nJared stared into his wine glass. Annabelle rose from her seat. \"Come,\" she said.",
        "\"Where?\"\n\n\"To your bedchambers. I will make good my side of our bargain.\"\n\nShe held out her hand, and he stood and took it in his own. She walked up the stairs ahead of him and he followed her, almost in a state of bewilderment. He had accepted her existence, but had not really imagined this moment would come.\n\nThey entered the dimly lit bedroom. Jared did not see Annabelle undress, but when she turned to face him, she was naked. He quickly shed his own clothing, and when he finished, she stepped into his arms. Her breasts pressed against him, and felt as real as any living woman's. When they kissed, her lips and tongue tasted as sweet.\n\nShe moved backward to the bed, and reclined. He lowered himself beside her and they embraced, their arms and legs entangled. \n\nAnnabelle rolled Jared on to his back and straddled his waist. She leaned forward and kissed the side of his neck, the line of his jaw, the hollow of his collarbone. \n\nHe caressed her hips and her breasts as his arousal surged. He felt goosebumps as her fingertips grazed along his flesh, moving from his shoulders across his abdomen and eventually to his loins. He gasped when she took hold of his penis, and moaned aloud when she lowered herself down upon it.\n\nShe put her hands on his shoulders and lowered her head toward his. Her long red hair made a curtain, shielding his face from all light, but even in that darkness, he could still see the faint shimmering in her eyes.\n\nAnnabelle remained silent through their coupling; Jared could not even hear her breathe. But the sensation of her body joined with his was as intense as any he had ever experienced, and it was not long before he felt his climax approach. He wrapped his arms around her shoulders and pulled Annabelle close to him as he erupted inside her.\n\nWhen he had finished, she raised herself and gazed down at him. She smiled and tossed her hair back behind her shoulders. Jared hoped that she had felt as much pleasure as she had given him, but she said nothing. He longed to say something himself, but he was at a rare loss for words. \n\nAnnabelle slipped off of him and sat, cross legged, on the corner of the bed.\n\n\"I would complete my part of out bargain,\" she said.\n\nJared sat up. \"But, Annabelle...\" \n\n\"I must finish the telling.\"\n\nHe nodded, startled and confused by the melancholy that had overtaken him. He picked up his laptop and Annabelle continued her story.\n\n\"Isaac came to me the next night, and we lay together in the hay loft. We kept our trysts secret, for he was sure his father would not approve, and I was unsure of Miss Caroline. My affections were currency to her, and I did not know if she would prevent our liaisons. Through that summer, we would meet, and we began to dream of a life we might share together.\"\n\n\"It was at the time of first leaf fall when Isaac came to me in the bright light of day and told me of his plan. He would ask of his father for some part of his inheritance, and, whether it be granted or not, he would come for me the following morning and we would leave this place and seek our way west, to Ohio, where farmland was rich and low of purchase price.\"\n\nShe sat in silence. \"But it did not happen,\" Jared said in a soft voice.\n\nAnnabelle sighed. \"It did not happen. I prepared. I could not sleep. I fetched a burlap sack from the barn and filled it with my clothes and my few possessions, and I awaited the morning. Eventually, sleep overcame me, but it did not last long.\"\n\nJared realized that she was crying. He set aside the laptop and moved closer to her, putting his hands on her shoulders.\n\n\"I was awakened by a commotion and the flicker of torchlight through my window. I hurried down the stairs. Miss Caroline stood on the front porch, Eliza at her side. Isaac's father was in the yard, accompanied by some other townsmen.\"\n\nShe turned her head and stared into Jared's eyes. \n\n\"You must tell their names,\" she said, her voice sharp, \"Ezekiel Barkley. Daniel Hathaway, it was he who held the torch. Henry Smith carried a cloth satchel. Percy Mathews and John Wainwright were the others. You must remember their names. The names must be told.\"\n\n\"I will remember,\" he assured her.\n\n\"Mr. Barkley saw me in the doorway and shouted to Miss Caroline that she should bring me out to them. She refused his demand and he stepped on to the porch and seized her by the arm. Eliza attempted to push him away and Mr. Wainwright struck her and knocked her to the ground. I could not stand idle. I stepped through the door and put myself between Miss Caroline and the angry men. I asked Mr. Barkley what he wanted of me and inquired as to the whereabouts of his son.\"\n\nThe flow of Annabelle's words slowed. Jared could sense the pain that accompanied each one.\n\n\"He told me that Isaac was locked away and that they had come to ensure that he would not see me again. He grabbed the collar of my nightgown and Mr. Wainwright gripped my wrist. They pulled me from the porch and I fell to the ground. I fell a hand grasp my hair and I was dragged across the yard. My gown was torn from my body and I felt blows from fists and booted feet.\"\n\nJared wrapped his arms around her. His own tears flowed as he imagined the scene she described. He felt a swelling affection for her and a yearning to comfort and console her.\n\n\"The blows ceased and I raised my head to see what they were doing. Mr. Smith dropped his satchel to the ground. He opened it and brought forth a length of rough hempen rope.\"\n\nShe shuddered, hesitated, then said, \"At one end they had tied a noose. Cruel hands pulled me to my feet as Mr. Smith tossed the rope over the lowest branch of the oak. I could hear Miss Caroline screaming, but one of the men held her back. I struggled mightily, but they held my arms tight as they forced the noose over my head and tightened it about my throat. It grew taut, biting into my tender flesh. I rose, and the men stepped away to watch my struggle. The torment was unbearable. I clawed at the rope until my arms grew too weary to rise, but gained no relieve. My chest burned for lack of air and the pressure in my head was unbearable. Yet, the body holds hope, even when the heart has given up. As I felt my life fade, I continued to struggle, my feet searching for some purchase to hold me and appease the terrible weight that slowly strangled me.\"\n\nYou danced, Jared thought, and grew nauseous at the realization.\n\nAnnabelle pushed Jared's arms away and stood. \"You must write it down, as I told it.\"\n\nJared picked up his laptop. He had long practice at remembering snips of dialogue, and had little trouble transcribing her words. When it came to the names of the men involved, he hesitated. He was always careful not to use the names of real people, either deliberately or inadvertently. But Annabelle had been adamant that naming the names of her murderers was necessary if she was to be freed from her long torment. He started to type the names, but his fingers froze.\n\nHe looked up into Annabelle's eyes. They no longer seemed to shimmer. They appeared as natural as any woman's would. Her countenance was no longer forlorn; her expression was one of exuberance. And still he did not type the names.\n\n\"Have you finished?\" she asked, eagerly.\n\nJared hung his head and muttered, \"I...I don't want you to go.\"\n\n\"You must write the words.\"\n\nTears ran down Jared's cheeks. \"I don't know if I can.\"\n\n\"We had a bargain!\" Annabelle shrieked.\n\n\"I think I am in love with you.\"\n\nAnnabelle's visage dimmed. \"You condemn me,\" she cried, pointing a finger at Jared, \"You sentence me to suffer...\"\n\nJared cast aside the laptop and stood, raising his hands toward her, but she was barely there.\n\n\"Is this how you love?\" he heard her faint voice ask, and then he was alone in the room.\n\nHe went to the window and looked into the shadows of the yard. It took a minute for his eyes to adjust to the light, but then he saw her feet, dangling below the canopy of the oak tree.\n\nHe picked up the laptop and ran down the stairs and out to the yard. He fell to his knees when he saw her. Her full figure was visible now, hanging from from the lowest bough. Her back was to him and he watched, weeping, while she slowly turned in his direction. Her shoulders shook, her hips swayed and her legs stretched and bent, searching for the unreachable ground. \n\nHe watched her dance of death until she had turned completely toward him, then, stealing himself, his eyes rose to look at her face. Her mouth gaped open, her tongue protruding. Her eyes bulged but he sensed that they still saw. He sensed they were pleading with him.\n\nJared scrambled backwards and ran to the house. He reached inside the door and found the switch for the porch light. Sitting on the top step, he wiped his eyes on his sleeve and typed in the names. Ezekial Barkley. Daniel Hathaway. Henry Smith. Percy Mathews. John Wainwright.\n\nLooking up, he saw Annabelle, still hanging beneath the tree. All motion seemed to have stopped. His vision was blurred by his tears and he could not be certain, but he thought she had faded somewhat from view.\n\nHe clicked save on his document and opened his email account. Typing as quickly as he could he addressed a message to his literary agent. \n\nTed- Rough draft for my next attached. Wanted to tell the story to someone asap. \n\nIt took a long moment for the email to send. When it finally did, he closed the laptop and looked toward the tree again, but Annabelle was no longer there. He rose to go inside, but then, he saw her. She was standing in the road, beyond the tumbled stone wall. The moonlight was no longer shining on her, but through her. She smiled at him and nodded her head, and then he saw her no more."
    ],
    "authorname": "MelissaBaby",
    "tags": [
        "ghost",
        "haunted house"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-dancing-ghost-of-websters-gore"
}