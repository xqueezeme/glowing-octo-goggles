{
    "title": "The Witch's Dollhouse Pt. 01",
    "pages": [
        "Author's Note: This was originally going to be one long story but I didn't want to turn this into a novel after I realized I was making this part a little too long. Hope you enjoy anyway.\n\n*****\n\nFor their 18th birthdays, most kids get either a car or a house if they're lucky.\n\nPhilip Carlyle got a house alright, but also a 2 thousand year old curse passed down from generation to generation. The worst part about it was that nobody bothered to tell him that last part until he got there.\n\nOnly a couple of days after his birthday a letter from an anonymous sender addressed to him detailed him as the heir to a large estate in a village named Redwall off in the countryside.\n\nObviously the whole thing was very suspect and Phil was no fool to believe something so convenient would land at his doorstep but both his parents confirmed his family lineage and the official channels even confirmed the estate's existence and his legal claim.\n\nHis parents even went as far as to encourage him going to the estate if only to give it a once over and offered to drive him to the village and pick him up.\n\nOnce the excitement of getting his own house, a mansion at that, died down he began to analyse the sequence of events that brought him up to the Carlyle manor.\n\nFirst he noted the convenience of the letter and the fact it had no listed sender. There was nothing unusual about it save the lingering scent of perfume indicating the writer was a woman and that their use of fragrance was so abundant she may as well have sprayed the perfume on the letter itself. \n\nThe contents of the parchment weren't so unusual though it did come with an old vintage iron key which Phil could only guess was the house key.\n\nBut as strange as it was it paled in comparison to his parent's behaviour. Though they were equally as sceptical about the letter as their son, once they read the letter themselves, they did a complete 180 and began pushing for checking the house out. They weren't exactly over protective, but they'd never allow Philip to go to an unknown village by himself on the basis of a stranger's note. \n\nWhen he got to the village he didn't have much of an opinion, it seemed ordinary and quiet. But when they found out he was a Carlyle, the villagers began avoiding him like the plague. \n\nIt wasn't like they treated him with spite, if anything it felt like the opposite, like they didn't want to do anything to offend him as if touching him would invoke the wrath of God.\n\nThe only person willing to talk to him and the one who told him about his family's \"curse\" was, as cliched as it sounded, an old crone in the local pub.\n\nAside from the dishevelled grey wisps of hair, she looked like your average granny; small, wise eyes hidden behind simple reading glasses, a cyan woolly cardigan over a deeper blue dress decorated in floral patterns of some exotic description and a shrivelled, frail body as if any breeze could reduce her to dust within minutes.\n\nShe came up behind him and clasped his shoulder to grab his attention. When Phil turned around she began by pointing at him and wheezing \"You look just like him...No wonder she chose you...\"\n\nNeedless to say Phil was intrigued.\n\nAt first he only half listened to her story, apparently his ancestor, when he lived in the estate manor Philip now owned, was alive he drew the attention of many young ladies but among them was a lonely young witch who, spurned by rejection after rejection, grew increasingly aggressive and possessive of the young man, even going so far as to declare herself his official bride without his say so.\n\nEventually, the young Carlyle fell in love with a different maiden and eloped with her, leaving the village far behind. \n\nOf course the Witch didn't take this very well and laid a curse upon the very walls of the mansion and the blood of the Carlyles that one day, his descendant shall repay his scorn with her love and return to the mansion to be with her forever.\n\nEver since then, the estate has been sold and broken into on multiple occasions and every time, those that spend the night at the mansion will meet an unseen fate.\n\nThe most unusual thing is that whenever a woman spends her night there, she is never seen again but when a man enters, his body is found dead without any visible wounds, almost as if he suffered a heart attack or died of shock. The police have been called to the village on multiple occasions but each investigation came up short and the officers, as if possessed by an otherworldly force would leave seemingly forgetting why they came.\n\nWith a mournful and quiet tone, the frail old crone spoke about how some women feel drawn towards to house for inexplicable reasons unknown to them and recounted how her daughter was a victim of such grand hypnosis and how her granddaughter followed suit looking for her mother. She even showed him a faded photograph of the missing pair, they shared the same auburn hair and silver eyes but while the mother's was longer, her daughter cut it short and hid an eye behind her fringe.\n\nAt the end of her story, Phil did his best to remain respectful but the old lady must have guessed how sceptical he truly was.\n\n\"It matters little I suppose\" she creaked dejectedly \"If you are the one she has chosen then you two will be lured to the house no matter what. Your curiousity will best you, it's inevitable. But promise you'll be on your guard that you'll leave as soon as you enter.\"\n\nHe thought back to the old crone's warning as he advanced towards the abandoned estate. Despite their fears, the villagers must have taken great care of the mansion, it looked spotless and alive despite it's age, arrogantly defying the tests of time itself.\n\nStepping on the porch and before the front doors, Philip gathered his courage, pushed his doubts aside and unlocked the door with the old key.\n\nThe manor's foyer was an expansive room with little furnishings, the floor was covered with a velvet red carpet with gold ornate designs that curved and danced along the carpet. An absurdly expensive looking chandelier hung dormant in the middle of the ceiling, a gilded overseer for a forgotten home and paintings depicting men and women of a bygone era and of landscapes lost to the modern age remained on the walls. Corpses of memories from a time when the manor meant something to someone and wasn't a horror story to frighten the local children.\n\nThere was a multitude of doors around the room that lead deeper into the estate and two staircases that curved around and met at a balcony that lead into even more corridors.\n\nPhilip decided to explore the first floor and wandered around the fist corridor to his right.\n\nHe found each corridor was designed the same; expressionless and white washed with another red carpet running the entire length. To one side, windows that expanded to the ceiling running the length of the hall, overlooking the vast verdant green fields that surrounded the property and on the other side there'd be several doors leading to either the same room or different rooms altogether.\n\nThe doors in the right corridor closest to the door lead to the dining room and kitchen and on the other side they lead into a living room with the barest furnishings.\n\nThe corridors at the far end of the lobby first floor loop around and meet together towards the back of the building. The windows this time look inwards at a small courtyard with a garden, overgrown to the point where calling it a small grove would have been more appropriate and the doors lead to various different rooms that seemed to repeat after a while. Smaller dining rooms, game rooms, relaxation areas placed all around, perhaps in case a large party was to be thrown and guests wanted more entertainment.\n\nThe most unique door was a large iron construct that swung inwardly, presenting cobbled steps that descended down into an abyss, it was not a place Phil felt comfortable going in so he ignored it completely.\n\nOh, and there were also the Dolls.\n\nAs Phil wandered around he came across several human sized dolls scattered across the manor. They were various different heights and sizes and left in standing positions at erratic intervals, though some were seated in the chairs of certain rooms.\n\nThey weren't posing nor were they but in any artful or meaningful position that was obvious to him at first glance, they were just...there.\n\nEach doll had hair of various colours and styles and large eyes made of a single colour, again varying between the different dolls, and full lips with crimson lipstick elegantly painted on.\n\nThe first thing he noted was that each and every one of the dolls was female, each spouting unreal curves that seemed to belong in a tasteless erotic fiction and the second being that not a single one of them wore clothing, not even underwear.\n\nNormally a clothesless doll, even a human-sized one, wouldn't be unusual but the level of detail on it's body was far too intricate, even it's genitalia was painstakingly made into a perfect replica, so much so that Phil instinctively looked away in embarrassment from the doll he was inspecting, a ruby haired bombshell with perky tits and eager nipples, a voluptuous ass, emerald eyes and a porcelain perfect pussy. If it weren't for the fact that their shoulders, knees, elbows, neck and hips weren't visibly ball joints or that their eyes were anything but human, he might have mistaken them for human.\n\nOnce he rationalized to himself that there was nothing embarrassing about looking at a naked doll, he turned back to the red head and prodded it's arm.\n\nIt was spongy and smooth to the touch, the textured rivalled that of human flesh and skin and yet felt distinctly softer than any ordinary human. He prodded it again. First the arm a few times, then the torso, then the thigh and finally, after a nervous gulp, he grabbed a hold of each breast, handfuls of fake fat in each hand he played with the mimic mammaries for a moment then let his hand drift down it's stomach until his middle fingertip slipped between the crack of it's pussy lips.\n\nHe recoiled from the doll and inspected his fingers which were slick with unknown liquids.\n\nHe felt up the first few dolls he passed, each one provided the same results, and noted the uniqueness of each doll. Some were smaller than others with smaller proportions and one or two were taller than him. He noticed one amazon in particular, a babe of a Barbie with similarly blonde hair and blue eyes, a firm, tight rear and breasts so large he'd need both hands to contain only one.\n\nEventually satisfied with the first floor, Phil went upstairs to find doors that lead to a study, a library and one large empty room, likely a spot for party gatherings.\n\nThere was also two corridors which, like the ones below, looped around and met each other at the far end with windows overlooking the inner grove. Each door in the corridor lead to nothing but bedrooms, each spacious with double beds, an expensive looking cabinet, a mirror and a barren wardrobe.\n\nThere were also more dolls stationed on this floor with some in the bedrooms when he glanced in, their presence in the manor unnerved him and he wondered whether they were in the previous owner's possession or if they were brought here as some abstract joke? Perhaps someone made a bunch of life sized dolls and wanted to get rid of the surplus? Strange as it sounded.\n\nBut there was so much detail and uniqueness crafted into each doll that spoke of hard work and an artisan's passion, it was unlikely for them to be simply left behind or thrown out if someone was willing to put that much effort into them.\n\nAs Phil wondered how much he could sell them for, he came to the far end of the Mansion where he found two doors.\n\nThe first was iron, like the one leading to the basement area, only this one was locked up and wouldn't budge.\n\nThe second door was wooden like all the other doors, in fact it looked exactly like all the other doors with no noticeable distinctions that set it apart.\n\nAnd yet, simply by locking his gaze onto the oak wood, Philip felt his chest tighten, heard the rhythm of his heartbeat roar in his ears and his throat turn dry. He felt equal parts terrified and excited, every part of him wanting to open this single door and see what was lying in wait while some voice in the back of his mind urged him to go back, to run down the lawn and back to the village. To call his parents and leave this place and never return.\n\nThe Old Crone's warning echoed in the back of his skull but it was swept aside by his curiosity as the young fool opened the door.\n\nWooden steps led up to what appeared to be an attic area, the ungrateful boards complained under his weight, unused to a guest after so many years of neglect.\n\nPhil marvelled at how nothing had seemingly collapsed in this supposed abandoned manor, if fact it felt like no one had left it at all.\n\nPhil emerged into a gloomy and dusty room where shards of light struggled to pierce the darkness through the chinks of the roof tiles. He could make out a few objects here and there covered in sheets; chairs, stools, tables, paintings, shelves and toys, all sorts of crap.\n\nBut directly in front of him, in the spot most of the filtered directly to, as if drawn to it's beauty, was another of the dolls, perched on a leather armchair with her head hanging low like a narcotic princess on her humble throne.\n\nThe doll itself wasn't any more or less beautiful than the previous models, it had dark hair that descended to the floor and seemed to melt into the gloom, a pretty face unmarked with make-up, a modest bust and, shockingly, was the only one wearing clothes, a wonderful ebony dress with frills and laces that looked more like something a Victorian era goth would wear.\n\nPhil bent low to look at the doll's face, and stretched out a hand to brush away the strands of her hair that veiled her features from him.\n\nThen it's eyes sprung open.\n\nIt jerked it's head up to look at him with such suddenness, Phil jumped back in shock, promptly falling onto his behind in the process.\n\n\"WHOAHOLYSHIWHAT?!\" He could only stutter as he scrambled backwards across the floor.\n\nThe doll eyed him curiously and he looked back at it, unable to tear his eyes away from her violet orbs and barely registered that her eyes appeared more human than the other dolls before his vision began to blur and darken. As his strength seeped from his body and his mind slipped into the abyss, he became aware that the strange doll was smiling before blacking out, it's eyes burning into his very soul.\n\nPhilip woke up in an unfamiliar bed with a fading migraine. His first thought was that everything was a dream, that he was still at home or at a friend's. But when he took in his surroundings, he pushed such wishful thinking aside, the room he was in was one of the bedrooms of the Carlyle estate, though the bigger giveaway was the dark haired doll in the corner of the room.\n\nHe sat up and examined the doll, it was the same as the others except it had black hair tied in braids that hung on either side of it's breasts and honey gold eyes that stared right back at him.\n\nIt's gazed unnerved him, mostly because it wasn't looking directly off in to space ahead of it like the other dolls but it's head was twisted slightly as if to watch him. \n\nUnnerved by his silent sentinel and the events of the day, Phil thought it wise to leave and never come back, it was a nice house but it's contents freaked him out.\n\nAs he left the room, his gaze automatically turned to the attic door, his interest in the door faded as suddenly as it appeared, not that he had any intention of returning to that room and the regal girl that slept within.\n\nWait, girl? I meant doll.\n\nPhilip's thoughts began to drift towards the girl again, this time in speculation of what gave him the impression that she wasn't a doll like the rest.\n\nShe was the only clothed one, sure but that didn't mean much on it's own. And while she looked like she was sleeping, there was no sign of her breathing in the first place.\n\nIt was the eyes he decided, they looked the most human compared to the dolls, albeit no human eyes glow with such intensity and he's never seen iris shine with an amethyst splendour like that before.\n\nHe frowned to himself, wondering why she left such a strong impression on him. She wasn't ugly by any means but she wasn't the hottest thing on display in this mansion either, yet Phil could feel the blood rushing to his face every time he thought of her, as if there was something in it screaming to escape his body and rush back to her.\n\nLost in his thoughts, Phil stumbled to the front door and pushed it.\n\nNothing.\n\nIt wouldn't budge.\n\nNot even a little.\n\nHe reached into his pockets to pull out the key, maybe he locked the door on his way in, but to his surprise and growing panic, he couldn't find it.\n\nPhilip tried pulling and got more of the same result, then he threw himself into the grand oak and pounded on it with his fists. Either the doors automatically locked, which was unlikely giving the age of the thing, or the villagers were playing with him. \n\nPhil turned to find a window he could smash, not likely to return and pay the damages anyway, and froze. In front of him, standing in the centre of the lobby with it's arm outstretched holding something was a doll.\n\nIt looked about one foot shorter than him, maybe more, with blonde hair styled into twin tails, glistening aqua eyes, a criminally flat chest but impossibly wide hips.\n\nThough Phil was more focused on other thoughts than his lewd fantasies.\n\nWas that always there? I wasn't paying attention thinking about that girl in the attic...No! That doll! She is a-IT, is a doll!\n\nDiscarding his thoughts for the moment he cautiously approached the doll, half expecting it to snap it's gaze to him at any moment. He took the card in it's hand and the doll remained motionless however, took a few paces backwards and began reading.\n\nLet's play a game.\n\nThree chances to leave, don't fall asleep.\n\nLook inside the doll in 2F.\n\nSomeone was in there with him. The girl in the attic? It must be, he threw away all objections that claimed she was a mere doll and focused on the possibility that she was human.\n\nWas she an intruder? No, why would she break in, fall asleep then lock Philip in the mansion while he was unconscious? \n\nAnd she couldn't be living here, the villagers would have mentioned it.\n\nShe could have been one of the missing girls but why would she stay when she could easily leave?\n\nPhilip decided to march upstairs, ignoring the storm of questions and thoughts he was almost drowning himself with. 2F, he realized, was a room number. There were 20 bedrooms on the second floor and each were labelled 2A-2T staring from the left corridor. \n\nAs he walked up to the sixth room of the corridor he passed two dolls, one with short black hair and one with longer brown curls and his mind, now alert and receptive, seemed to twitch with concern. Phil ignored the warning and pressed on entering the room.\n\nIt was like all the others, except on the bed was a doll, it was the red head he first groped, it's posterior was raised, displaying it's womanhood, or what imitated it, to it's audience while it's crimson curls fanned out across the bed and it's soulless stare focused on the ceiling above.\n\nPhil hesitated, he had a sneaking suspicion of where the key was hidden.\n\nHe stepped towards the doll and, tentatively, inserted a finger into it's fake vagina and gasped and the feeling. He didn't feel plastic like he was expecting but a moistened and spongy that he easily mistook for flesh but couldn't possibly be so. It was tight, clamping down on his finger alone and made it difficult to push on but eventually Philip felt his finger tip scrape something hard and metallic.",
        "With the key confirmed, Phil removed his finger, which took some struggle too as the \"flesh\" seemed to suck him back into it's depths like it was alive, and inserted his index and middle finger this time.\n\nHe had a tougher time pushing through this time but eventually, he managed to scissor a part of the key between his finger tips and edge it out slowly and carefully, the doll's genitalia working to reclaim it's prizes.\n\nFinally his fingers resurfaced, coated in sticky, clear liquid with the key in their grasp.\n\nPhil looked up, a smile on his face and saw the doll looking back at him, it's eye's firmly locked onto his.\n\nHe blinked.\n\nIt blinked. Then it sat up and Phil cried out, stumbling back into the cabinet behind him.\n\nThe doll just sat their for a moment, it's knees together but it's legs apart, and never once did it break eye contact. Then it began to stand up from the bed and slowly advanced towards Phil, it's hips moving sensually to match it's slow, steady rythmn. \n\nPhil finally managed to process the command his brain had been screaming and fled to the door, wrenched it open and was greeted by the two dolls he passed by earlier staring back at him.\n\nHe panicked and backed off into the room, regretting his decision as his legs moved, when he felt arms wrap around him from behind.\n\n\"No! Get the fuck off!\" He struggled and flailed but couldn't even get the doll to budge let alone loosen it's grip. The dolls had thick thighs but slender arms, they looked fragile and weak, yet seemingly possessed superhuman abilities beyond that which he could match.\n\nHe watched helplessly as the two dolls entered and approached him, the black hair doll came up on his right and the brunette to his left. The right doll took his head in it's hands and Phil closed his eyes, waiting for the snap of his neck only to recoil when a cushioned wetness pressed itself against his mouth. He opened his eyes to find that the doll was now kissing him.\n\nThe brunette leaned into him and joined the assault, it's tongue traced trails of clear liquid, likely what passed for their saliva, on his neck while the red head slowly pulled him back towards the bed.\n\nAs the kiss persisted, Philip's defences and resistance crumbled and he found himself giving into the doll's succubi charms, manoeuvring his hands onto their hips as if to encourage them to continue their attack, though it didn't seem like they needed any convincing.\n\nHe felt himself collapse on the bed, the two dolls pushing him down and following him on the way. As he lay there, they began stripping him of his clothing until he was left lying there naked before they proceeded to kiss him further, a sentiment which Phil did not refuse.\n\nHe was passed between the two dolls, with him tasting the black haired doll one moment to being snatched away by the brunette the next, all the while the two had drifted their hands towards his nether regions where they enticed it up to full mast with a co-operative handjob.\n\nPart of Phil warned him that if he stayed he may never leave, that he had to throw these dolls off of him or he'd never get out in time but it was easily dismissed as his thoughts became swamped with mindless lust and frenzied ecstasy.\n\nHe became aware of the red head doll standing above his groin, viscous secretions trailed out of it's slit and drooped hungrily onto Phil's now erect member.\n\nWithout much posturing or ceremony, the doll descended on to his dick, the sensation of his penis forcing it's way through the doll's depths was simultaneously heavenly pleasure and hellish torture, the tightness inside the fake vagina was like a vice, it clamped down on the foreign spear and threatened to crush it as it pierced the walls of flesh.\n\nPhilip's screams were muffled by the dolls eclipsing his lips with theirs and swallowing his cries for rest.\n\nThe red head continued to force it's way down until, at last, it took the entirety of his member inside it's impossibly deep vagina and then it raised it's hips back up to the very tip of his glans, drawing out another pained moaned from Philip which was also snatched away by the accompanying dolls. \n\nThe red head crashed back down with all the force of a meteor, slowly rose back up to the very tip then slammed back down, the speed increased and a rhythm formed in the process.\n\nPhil tried to grab onto it's hips if only to control the pacing if not throw it off of him but the two dolls on either side of him bound his arms between their legs, resting their asses and drooling cunts on his forearms while they switched targets and focused on teasing his nipples.\n\nUnable to move and reduced to a living sex toy, Phil could do little more than moan and scream while his molesters did as they pleased, retaining an impassive look on their faces and immobile lips from which no expression of ecstasy escaped. \n\nThe rider's speed had now increased to an inhuman level, it's hips slamming down and rising back up again with such speed they were practically a blur.\n\nPhil was no longer screaming, his mind was convulsing with so much pleasure he was having difficulty focusing on anything and drool was beginning to trickle from the corner of his mouth. The doll then leaned forward, locking it's innocent yet empty emerald eyes on his as it bounced up and down without mercy.\n\nPhil wanted to beg or curse or say something but \"Gyaaarrrlbaah\" was the best he could manage.\n\nIn response to such an emotional statement, the doll merely looped it's slender arms around his head and pulled him into it's bosum, smothering him in the chasm between it's firm breasts as it continued to bounce on top him, a heavy orgasm building up as the doll's movement slowed but it's intensity increased.\n\nPhil unintentionally clenched his fists with the strain only to grab a handful of ass as the two dolls grinded deeper into his palms, preoccupied with servicing his nipples, which had turned numb from the constant attention they were getting. \n\n\"Oh god, I'm...I'm gonna...Oh PLEASE! PLEASE STOP!\"\n\nPhilip cursed into the dolls chest, his cries for rest seemed to fall on death ears, or more likely the doll just didn't care enough. It's piston movements grew more forceful, the impact strong enough to shatter bones at this point until finally, with one last crash, the doll took it's victim's shaft all the way to the base, grinding it's hips together with his as if to fuse the two together and the already tight vagina clamped down even further, dragging out every bit of cum it had. \n\nPhil screamed through gritted teeth and would have thrashed around with the feeling of violent euphoria were the dolls not holding him in place, forcing him to ride out the waves of pleasure in stillness.\n\nIt lasted a whole 8 seconds before they started again.\n\nThe red head arched back and resumed her assault, cum still pouring into her and Philip's member surprisingly still with some fight left in it. \n\nNot Philip though.\n\n\"Wait! Stop!\" he cried, \"I just ca-ARGH! I'm too sensitive! Please st-\"\n\nHis cries were cut short when once again he found himself the sole citizen of funbags valley when the two dolls sandwiched him between both of their breasts. A nipple forced it's way into his mouth and despite avoiding the instinct to suck on the nub, a strange, warm liquid poured into his mouth and down his throat.\n\nPanicking, Philip attempted to spit the \"milk\" out but he couldn't remove the breast from his mouth and all the while, more and more of the strange liquid kept flooding into him. It began spilling out from the corners of his mouth and he was having a hard time breathing but he persisted, who knows what this mysterious concoction was, what it would do to him. As if impatiently, the red head once again increased the tempo of it's hips while also alternating the tightness of it's vagina creating a pulsating motion simulating movement on it's own and adding to the maddening stimulation that it's impossibly fast cowgirl technique was already bringing.\n\nUnable to hold back his gasps for pleasure without choking on or swallowing the continuous stream of unknown ichor Philip ended up relenting and downed as much of the warm liquid as he could.\n\nSoon he felt a sudden calmness pass over his body, like a cosy duvet had been spread over him. His body relaxed and he felt any remaining knots of resistance crumble away, yet his mind remained receptive to everything going on and he became aware of his growing helplessness.\n\nOn another note he could feel his dick stiffen once again, growing from the semi-hard on he had previously to an erection bigger than any he had ever had in his life which was arguably a bad thing since his rider was still at a tightness so great it was practically painful.\n\nAnd then the dolls stopped and sat up, fixing their unblinking gaze upon him. \n\nHis penis was still inside the red head and the dark haired and brunette still had his hands scissored between their thighs with a handful of their asscheeks each, but neither one moved.\n\nPhilip's mind, now given the time to think straight thought of what to do now. \n\nIt sent orders through his synapses, demanding each of his limbs to move though for what purpose, he was admittedly conflicted on.\n\nShould he try to shake off his rapists and make for the exit, perhaps a window if he needed to? Or would he rather grab the red head's voluptuous hips and plough it himself, using the imitation human as a glorified sex like it did with him?\n\nRegardless of what he wanted, his limbs would not respond, numbed by the milk presumably, almost as if it sapped the body of all it's energy just to direct it into his painfully erect penis, still sheaved in a vagina a few sizes too small for him.\n\nEven his own tongue felt like lead, his words drifted from his throat in a lazy, drunken growl unable to form any sense of coherent communication.\n\nSuddenly the door opened and his eyes, which were also spared the numbing properties of the doll's milk, darted to the entryway where he watched in a paradoxical mesh of abject horror and anticipative fascination as more dolls strode into the bedroom.\n\nThe surrounded the bed, 9 in total and just stood there, their empty eyes fixed sternly on his.\n\nHe noticed some familiar dolls, the barbie amazon he saw when he first came in, the flat chested blonde who gave him the message in the lobby and the braided gold eye doll that stood sentinel in the room he woke up in.\n\nBut he found himself being drawn to a pair of dolls standing to his right, he couldn't place it but he felt like he had seen them before and he was sure he never encountered either in the mansion.\n\nThey both had Auburn hair and silver eyes, one was a bit taller with a bustier frame while the shorter one seemed more curvier. They both had silver eyes, glistening like moonlight, however, the shorter one seemed to hide one eye behind a messy but cute fringe while the taller one kept it's hair longer, flowing around it's shoulders and framing it's features, or lack there of, like-\n\nPhilip's mind paused and his eyes widened. He remembered where he saw them.\n\nIt was a photograph, shown to him by an old crone in a nearby pub.\n\nHe craned his head and his eyes darted from one doll to another...no, not doll. Girl.\n\nThey were each people, human at one point and now they were these fake constructs that mimic their original beauty.\n\nIs this what's going to happen to me? He briefly wondered before realizing in a panic; Every male that comes into this house is found dead nearby.\n\nHe knew he had to leave, he had to throw off this calm he was shrouded in and escape but he couldn't do it, no matter how hard he tried.\n\nJust then, the dolls seemed to spasm.\n\nIt was very brief, a flicker even, but they were standing so still earlier that it was easy to notice the sudden juxtaposition. \n\nThen the red head blinked, once, twice and on the third time her eyes, which were nothing but a pure emerald gleam, suddenly became more human; suddenly gaining a white sclera, a pupil and an iris the same colour green as her eyes were previously.\n\nThe pattern spread to all of the dolls present, their eyes becoming more human, more alive, they looked bewildered as if they had no recollection of where they were.\n\nDid I get lucky? Philip hoped to himself. Has everyone come to their senses?\n\nNo sooner was this question asked did he feel the red head tighten up again. He turned to look at her.\n\nHer eyes shone with a spark of life, yet they seemed glazed over as if trapped in a pleasant daydream from which no one would chose to emerge from. Her face was flushed a deep crimson and her mouth was agape in a stupid grin, drool drifting from her lips and onto Philip's torso.\n\nHer breathing grew heavy, she giggled to herself then she threw back her head and let out a primal sound, one filled with ecstasy and desire, it filled the room with a heavy pressure as if her mood was a raging river sweeping them all along with the flow. \n\nAnd it did.\n\nThe dolls around Philip began panting heavily too, a heavy blush on each of their faces, their mouths contorted to wild, drooling grins as their hands wandered to private parts, their own and to their neighbours', gripping breasts, fingering pussies and coiling each other's tongues around a spiral of saliva.\n\nThe dolls on either side of Philip were equally affected and began sliding their pussies across his forearms leaving a slick trail of clear liquid to mark their passing. They slid as far as his elbows before slamming their cheeks back into his palms while bringing their flushed faces closer to his own, too distracted by their own pleasure to do anything more than breathe on him, the hot air they exuded brushed against his skin and only served to arouse him further.\n\nRed Head was violently pushed aside and left to spasm on the floor next to the bed while four ravenous and horny dolls began clawing at his cock and taking it into their mouths only for another to yank it away and hoard it for themselves'.\n\nHis cock was passed around between the four like an extremely rare delicacy shared between starving savages. As each of their tongues crawled and coiled around his dick, slathering it head to base in slick, sticky saliva Philip felt a similar sensation in his feet and managed to motion his head enough to see the mother and daughter tag team combo sucking on his toes straddling a leg each with their plump, peachy asses turned towards him.\n\nTheir tongues twirled a seductive dance around each of his toes and their asses wiggled with each movement, their soft, flabby texture plus their anuses peeking out from between the valleys they formed was a tease for the eyes, a tortuous paradise he couldn't hold no matter how much he wanted to.\n\nOccasionally his dick would slam into either doll's butt cheeks, thrashed to and fro from the chaotic squabbling of the dolls by his groin, only restrained when one of them take it into their mouths until another steals it from it's oral restraints.\n\nThe dolls on Philip's arms decided to switch tactics and mirrored their leg-bound counterparts, turning their backs and butts to Phil's face as they bent forward, trapping his forearms between their breasts as they greedily swallowed his fingers, indulging in the taste as they swung their hips back and forth, their rears crashing against Phil's head and sandwiching him between the warmth of their maidenhood.\n\nHe then became aware of another weight pressing down on his torso just above his groin.\n\nThe barbie had pressed her ass up against his dick, trapping the shaft between her marshmallow cheeks, sidling her hips up and down as if to caress the battered rod.\n\nHowever, with their prey trapped, the horny dolls surrounded the dick with a volley of sloppy kisses and wet licks and Phil found his dick stuck between a wall of flesh and a barrage of saliva. With nowhere to run, his dick could do nothing more than endure the assault.\n\nThe Barbie then leaned forward, pressing her breasts against his torso as much as possible and began tracing her fingers around his nipples and dragging her tongue across his chest, licking up droplets of sweat and leaving a trail of saliva in her wake.\n\nIn the moments where his view wasn't obscured by the colliding ass cheeks, Phil saw one of the dolls, the petite blonde from the foyer, stand over him, feet planted firmly on either side of his head with her asshole and pussy in full view.\n\nShe spread her vagina wide, showing off it's bright pink walls, lewd and hungry in contrast to her innocent figure, it pulsated unnaturally as if the organ itself were alive. All things considered such a revelation would be believable.\n\nHe caught a glimpse of her face, the same stupid grin as the other dolls, her eyes had life in them but it was imprisoned behind a fog of lust. Her gaze was that of a fierce animal in heat locked firmly onto her prey, her mate, whatever was most fitting in that moment, her vagina oozed liquids that dribbled down and splattered onto his face and into his gasping mouth like drool.\n\nFinally, she slammed her groin down on the lower half of Philip's face, mashing her vagina into his mouth and hooding his nose with her labia until it consumed his sense of smell with her sweet yet musky aroma. The doll sat their for a moment, she moaned in silence though an occasional gasp broke her silence like a hiccup. With each gasp her body bucked for a moment and her vagina squirted a clear sweet tasting liquid into Phil's open mouth.\n\nThe vaginal fluids seeped down his throat like a torrent, unchallenged in it's quest to enter his body like a poison, the effect was alcoholic in nature yet tasted smoother than any alcoholic beverage he ever had.\n\nPhil could feel the heat rising in his body, though the milk still drained him of his energy he felt awake, alert and more receptive than ever. The aphrodisiac brought the sensitivity of his skin to an all time high, he felt stuffier than ever, sweat broke out from how much his body began to burn and he could feel his cock stiffen to impossible levels beyond what he was sure he was naturally capable of. \n\nIn that moment one of the dolls seemed to grow tired of the teasing. She got up, grabbed the colossal shaft and in one fell swoop, devoured it to the base with her asshole, screaming in carnal pleasure all the way down, thrashing and spasming with the effort until the whole thing was inside.\n\nThe dolls' pussies where impossibly tight but their assholes were something else entirely, constricting his enlarged penis as if to never let it escape again. \n\nPhilip, with his increased sensitivity felt like he was on fire, he wanted to buckle and thrash himself but his body was both too weak to move and too effectively restrained by his captors.\n\nHe could only scream, beg, gasp and cry out but whatever sound he made came out muffled under the cunt of the petite doll, the vibrations caused by his screams seemed to do little more than pleasure his facesitter who was now beginning to grind her hips back and forth, smothering Phil with her juices and smearing her scent onto him mercilessly.\n\nAs the doll now riding him began to move, slapping her hips into his more violently than the red head, Phil became aware of another presence sucking on his fingers.\n\nTo his right, the black haired doll was met with another doll with short hair, though this one was platinum blonde, who he recognized as one of the four dolls originally attacking his penis. She and the dark haired doll began frenching each other with Phil's fingers being sandwiched between, tossed about by the two warring tongues and drowning in saliva from two fronts.\n\nTo his left he noticed the Brunette had returned to her original position and had pressed her buttocks against his palm but now she was joined by the red head who had managed to recover from her spasming fit. She pressed her groin against her fellow doll's rear and began grinding against her, conversely the brunette took Phil's hand and inserted his fingers into either doll's vagina, the fleshy walls sucking on his fingers with such power he was unable to tear them away.",
        "Finally, a final shadow blanketed Phil and he looked up to see one final doll poised over the upper half of his head.\n\nShe had long auburn hair that came down in ringlets was petite like the blonde but made up for her lack of bust with a soft, wide ass. An ass that was ready to engulf the rest of Phil.\n\nWhen the petite cutie crushed his head beneath her she made certain that his nose was overwhelmed by her asshole, the rosy opening emitted a distinct scent different from the musk he other dolls gave off. It was hard to place but it was easily a smell only a flower could give off.\n\nHer pleasant aroma battled with her neighbour's oppressive scent, the resulting clash did more to dominate his mind as his face was made into a grinding board for their nethers.\n\nPhil felt himself melt away as the dolls continued to abuse his body and his senses.\n\nThe doll riding him never relented, her moans were more akin to a war cry, a declaration of conquest over the male they had captured.\n\nPhil had emptied 2-3 rounds of semen into her while she came on his dick seemingly every time she slammed down, her femcum soaking the sheets more thoroughly than if they were left in a rain storm.\n\nThe two dolls at his groin would continue to focus on, and alternate between, his balls and his asshole, poking their tongues and fingers into the tight hole with little difficulty forcing his dick to remain attentive under the barrage while his ballsack was fondled and suckled to ensure his semen would keep coming.\n\nThe mother and daughter dolls dug in deep and slobbered all over his feet leaving not a single inch of them dry.\n\nThe Barbie had pressed her firm butt as far into Phil's groin as she could, dragging her snatch across in circular motions, lubing up his skin even further as she continued to taste and tease his nipples.\n\nWhile his right hand had became slathered in saliva, as if no more than a tasty morsel to the pair currently frenching his fingers with reckless abandon, his left hand had become a prisoner to the dolls pillowy asses, his fingers shared between the dolls as they were swallowed by the pair's vaginal caverns, alternating from one to the other.\n\nThe dolls sitting on his face dominated his other senses.\n\nHis mouth had the syrupy flavour of the dolls' pussy juice permanently staining his mouth, though he tried to avoid swallowing it the vagina it poured from secured his mouth too efficiently for him to spit it out giving him the ultimatum; drink or drown.\n\nHis nose was either hooded in one doll's vulva or inserted in the anus of the other doll where it drowned in her overpowering scent, inciting stronger, aroused reactions in his body which only served to make the stimulation across his body and the tightness constricting his dick even more unbearable.\n\nOccasionally the dolls would move out of the way to let him breathe while smothering him in more and more kisses before swapping positions and jumping back onto his face, obscuring his sight, taste and smell once again.\n\nAs for his ears, they were receptive to the cacophony of the dolls' endless erotic screeching. \n\nThere were no words, the dolls were seemingly beyond that level of communication, instead the room echoed with the sound of a dozen fake humans screaming, moaning, laughing and slurping and the muffled protests of one arguably unlucky victim.\n\nHe came into the doll bouncing on his dick three times before she had enough, being thrown aside by another doll who decided to dominate his manhood, rocking the bed and eliciting gasps from Phil (which only served to stimulate the facesitting doll further) every time she slammed downwards.\n\nAfter cumming in a doll a few times, they would be rendered helpless, thrown aside and replaced by another, shuffling the dolls' positions on his body and instigating a cycle of pleasure.\n\nAnd any time his dick seemed to grow soft, the dolls would collectively blowjob his shaft while breast feeding Phil their aphrodisiac milk and vaginal cream.\n\nAfter his fifteenth shot however, he felt the pull of exhaustion grow too strong to resist. \n\nAs the dolls clambered around him to swap positions he saw a girl in the back of the room with long raven black hair, a cute gothic dress, glowing violet eyes and a warm but unvirtuous smile.\n\nHis vision was obscured by the red head's vagina forcefully humping his skull as the Barbie descended upon his cock and soon Phil drifted into unconsciousness.\n\nAs he fell into the abyss he could hear a voice echo in his mind, ringing throughout his soul like the most pleasant sounding bell in the silence of his dreams.\n\n\"Two more chances left my dear...\""
    ],
    "authorname": "KennyCumBuckets",
    "tags": [
        "doll",
        "witch",
        "bondage",
        "erotic horror",
        "femdom",
        "reverse gangbang",
        "noncon",
        "group sex",
        "non-con"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-witchs-dollhouse-pt-01"
}