{
    "title": "What Dreams May Come",
    "pages": [
        "12:27 a.m.\n\nI can't believe he's really sleeping next to me. \n\nIt was only six weeks ago that we met in the most cliched of places: a graduate lecture on the use of electron microscopy in the study of plastic deformation. \n\nHis smile lit up the room, and his dimples made my knees weak. I'd been watching him all semester, but I had been too shy to say anything. And then all of sudden, there he was after class, asking if I wanted to grab coffee. \n\nWe chatted a lot about his gap year in Peru teaching English as a foreign language, what an amazing experience it had been, and how it had simply ruined American coffee for him. And yet here we were. Drinking coffee. At Starbucks. In America. \n\nHe did most of the talking, and I was grateful for it. I'm terrible with small talk, especially when I'm nervous, so I listened happily as he told me all about Peru, mispronouncing one Spanish word after another with the confidence of a torero. \n\nThe sex was incandescent, in the way that only new sex can be. When he went down on me for the first time, I came so hard I thought I would pass out. \n\nIt's still tough for me to believe how fast things have moved. It seems only yesterday I was lusting after him from afar and lamenting the fact that I'd never work up the courage to approach him. \n\nAnd now here we are together in his bed. He's sound asleep, with his arm draped over my side. His hair, disheveled from sex, is sticking out every which way, and somehow it makes him look even more adorable. He looks so comfortable underneath that lush down comforter. He's utterly content, without a care in the world. \n\nAnd he's snoring. \n\nSo. Fucking. Loudly. \n\n********\n\n12:33 a.m. \n\nI hadn't intended to stay the night. I'm all about keeping things casual. If I'm going to make a name for myself in this program, I don't have time for anything serious. \n\nBut I've always had issues with conflict avoidance. I run like the plague from even slightly uncomfortable conversations. It's kind of my kryptonite. If I order steak medium-well and it comes to the table medium-rare, I'll eat around the edges and say I'm not that hungry just so I don't have to ask the server to take it back. If someone isn't pulling their weight on a group project, I'd rather do the extra work myself than talk to the lazy bum about pitching in more. I'm a pathological people-pleaser. It sucks. \n\nSo when Brad asked me to come over to his apartment to study for the exam tomorrow, I said yes, even though all I wanted to do was stay at home and review on my own. Truth is, he needed the extra help. And, as silly as it sounds, I felt an obligation of sorts, since my irresistible charms were part of the reason he'd been neglecting his studies. \n\nSo I came over, we ordered tandoori chicken and samosas, studied for a bit, and had sex. Then, out of nowhere, he asked me to stay the night. \n\nYou can handle this, I thought to myself. Just say you need to get a good night's rest for the exam, and politely decline. He'll understand. Or better yet, make a joke of it. Tell him you don't trust that you can keep your hands to yourself, so going home is the only way to make sure you both get some quality sleep. Just say no. Right now. Do it. \n\n\"I'd love to stay.\" \n\nGod, I hate myself. \n\n******** \n\n1:12 a.m.\n\nI close my eyes, relax into the pillow, and do my best to block out the noise. I was up studying last night, too, and I'm hopeful that my exhaustion will take over from here. \n\nIt doesn't. \n\nInstead, the noise coming from his face hole seems to grow louder. It's as though his snoring is gathering strength from my mounting frustration, like a hurricane increasing in intensity as it's fueled by the warm waters of the Caribbean. \n\nThere are no other sleeping options in his one-bedroom apartment, aside from an old couch, which is lumpy and gross. I consider popping in my ear buds, but my phone's battery is almost dead, and I don't have my charger with me. I could drive back to my place, but the snow is really coming down now, and I don't want to risk it on the roads. \n\nI stare at his gaping fish mouth. Just hours ago it seemed so kissable, especially when his lips would curl into a mischievous smile after he'd said something naughty. Now, with his eyes closed and muscles slack, those same lips resemble the rim of a wet, gurgling tar pit that's belching noxious fumes. \n\nA normal person would wake him up, tell him he's snoring, and ask him to try a different position. I am not a normal person. The thought of such a simple conversation fills me with dread. I have a million reasons, all of them silly: I don't want to hurt his feelings. I don't want to come off as high maintenance. I don't want to seem selfish for disturbing his rest before an exam. \n\nThis is a nightmare. \n\nActually, a nightmare would be preferable. At least then I'd be sleeping. \n\n********\n\n1:54 a.m. \n\nMy plan is a simple one: wake him up so I can fall asleep. Once I'm out, I'm a pretty sound sleeper, and I don't think his snoring will bother me. The trick is to get him to stop, then go under before he starts back up. \n\nI start by coughing. I'm quiet at first, but I get louder and louder until it eventually feels like I might damage my vocal cords. \n\nHe doesn't so much as stir. Worse, I'm more awake now, and my throat hurts. \n\nI switch to kicking his shin with my foot. His leg is heavy, and it barely budges. I kick harder. Nothing. \n\nI'm glaring at him now, hoping the heat from my seething stare will be enough to rouse him. It isn't it. He snores happily away. \n\nI press the nail of my middle finger against the pad of my thumb and bring it slowly toward his face. I can feel his breath, hot against my wrist. I pause over my target, making sure I line up everything properly, then flick him, hard, on the tip of his nose. \n\nThe snoring stops. I stuff my hand under the pillow, clamp my eyes shut, and pretend I'm asleep. I feel his weight shift on the mattress, and I open my eyes just wide enough to see that he's sitting up and rubbing his nose, a confused look on his face. \n\nNow's my chance. I settle into the mattress, willing myself to sink down into its soft depths. I focus on the pleasant weight of the comforter above me and the cool touch of the pillow against my cheek. It's perfect. Just as I feel myself slipping toward unconsciousness, his weight shifts again and he reclines onto his back. \n\nAs his body stills, mine grows restless. My brain is already anticipating that horrible sound. I can feel this golden opportunity slipping away. I have to fall asleep. Now. Right now. \n\n\"Sssnnrrggggghhhhh...\"\n\nMotherfucker. \n\n******** \n\n2:38 a.m.\n\nI've always been fascinated by how things change under stress. \n\nA rubber band is elastic; stretch it and it deforms until you remove the applied force, then it returns to its original shape. Chewing gum is plastic; stretch it and it also deforms, but it keeps its new shape even after you remove the applied force. But apply enough stress to the rubber band or the chewing gum, and they will both snap. \n\nI mention all this purely to illustrate my passion for the study of materials science and not at all as a thinly veiled metaphor for how people, too, can change in interesting ways under stress. \n\nRight now, every snorting, stuttering breath he takes ratchets up the tension in my body. I can feel myself being stretched. I need to relieve the tension. If this keeps up much longer, I'm going to snap. \n\nBut I have a plan. \n\nI roll to my back, close my eyes, and slide a hand between my legs. It takes some work to get myself going. I try to recall the sensation of his hands on my breasts, the pressure of his tongue on my clit, the lust in his eyes as he slips inside me. My pussy starts to moisten. \n\nI pause to lift my hips and slide off my underwear. After a few more minutes, I'm ready. I shift to my side and move my hand to his boxers. I stroke him lightly through the fabric, and soon I feel him harden underneath my palm. \n\nI'm watching his face. He's still asleep, but the snoring has stopped. I snake my hand beneath the waistband of his underwear and close my fingers around his shaft. I stroke him more firmly, and his eyes flutter open. He looks at me, and I flash him my most seductive smile. \n\nThat's all it takes. He pulls me toward him and mashes his lips against mine. His hands are in my hair and his tongue is in my mouth, hot and needy. \n\nHe tosses back the comforter while I tug at his boxers. His cock springs free, and I take him in my mouth while he fumbles for a condom on the nightstand. I roll it on and straddle him, moaning as he sinks into me. \n\nI lift my arms as he strips off the T-shirt he gave me to sleep in, then lean forward so he can take my breast in his mouth. I roll my hips into him, grinding my clit against his pubic bone. He moves his hands to my ass, but continues to let me set the pace. \n\nI feel my orgasm building and I move faster, channeling all my pent up frustration into our connection. He moves with me in perfect rhythm, and I can feel the wave about to crest. \n\nI look down and see the lust in his eyes, that look like he wants to devour me, and I realize he's almost there. I move with more desperation, racing him to the finish line, but he beats me. I feel him stiffen and arch upward. He thrusts deep inside me and holds my hips still as he comes. \n\nI lean down and kiss him urgently, but he's completely spent and only halfway interested in kissing me back. I'm still grinding myself against him, but he's softening too quickly. It's no use. \n\n\"Sorry,\" he says. \"I couldn't hold out. You're just so sexy.\"\n\n\"That's okay,\" I lie. \n\n\"Did you finish?\"\n\n\"Well, it felt really good, but maybe you could, you know, do what you did earlier?\" I ask, smiling as I remember the feel of his mouth against my sex. \n\n\"I would, baby, but I'm just so tired. If it weren't for this stupid exam tomorrow...\" he trails off. Maybe he catches the shock and disappointment on my face, because he adds, \"I'll make it up to you tomorrow, okay? Promise.\" \n\nHe kisses my head, and that's that. \n\nA few minutes later, we're back under the covers. He's fast asleep on his back, happy and satisfied. \n\nThat was supposed to be me. Relaxed and drained of all my anger and frustration, I was going to doze off instantly before he could even make a peep. I hate him. \n\nAt least he's not snoring. Yet. \n\nI close my eyes and try to quiet my mind, but now my body is vibrating with unfulfilled need. Rather than relieving the tension as I'd hoped, my little seduction gambit has tripled it. \n\nI don't know what to do. Should I try to rub one out to take the edge off? Or should I chalk it up as a lost cause and try to force my body to sleep? \n\nMy indecision infuriates me. I'm on the clock here, and each precious second of silence that slips away only makes me angrier. \n\nOkay. I can't fall asleep in this state, so I'm just going to hope I have enough time to get myself off before... \n\nNope. Too late. \n\n******** \n\n3:06 a.m.\n\nIf you listen long enough, there's a pleasant rhythm to his snoring. There's a pregnant pause, filled with beautiful silence, right after he inhales and before he exhales. And every tenth breath or so, there's a much longer pause after the exhale, followed by a sudden, loud intake of breath. \n\nDuring that long pause, he's actually not breathing at all. I'm pretty sure that's sleep apnea. And I think sleep apnea can be fatal. People die from it. Right there in their sleep. And, fun fact, when they die, they don't make any more noise. \n\nI find myself waiting for each of those long pauses with an almost child-like excitement. What if he just, you know, stopped breathing? Wouldn't that be amazing? \n\nI mean, maybe amazing isn't exactly the right word, but it would be something. \n\nAt each long pause, I find myself silently reciting a simple prayer inside my head: \n\n\"Please stop breathing, please stop breathing, please stop breathing...\" \n\nThen he breathes and ruins it. \n\nI don't really want him to die. I'm not a monster. I just want him not to breathe any more. That's fair, right? \n\nIt really would be the perfect solution for a conflict-averse person like myself. The problem just kind of...goes away. Forever. And I won't have to risk looking like the bad guy or hurting someone's feelings. It's win-win! Okay, maybe there's just one win in that scenario. One win and one death. But I'll take what I can get at this point. \n\n******** \n\n3:25 a.m.\n\nI don't remember the exact quote, but someone once said that true love means loving someone not despite their faults, but because of them. \n\nI used to think that was the most profound and romantic thing I'd ever heard. It really struck a chord with me, the idea of loving and accepting someone\u2014all of someone\u2014for who they are, and not just tolerating but actually cherishing their quirks and foibles. What a beautiful notion. \n\nI wish I could remember who said it. Because if I did, I would drive to their house right now and drag them at gunpoint back to this bed. \n\nThen I would tie them down and make them listen to Brad snoring for as long as it took to break them. I'd see it in their eyes when it happened. There would be an unspoken apology in their stare, an acknowledgement of the staggering stupidity of the words they had once uttered, along with an urgent plea for the suffering to end. \n\nI would be just and merciful, and they would be grateful for it. As the pillow descended over their nose and mouth, they would welcome it like an old friend. \n\nThen I would go out into the world and find my true love. A man who wants to spend the rest of his life with me. A man who cherishes me. A man who loves me not despite the fact that I suffocated a stranger with a pillow, but because of it. \n\n******** \n\n3:41 a.m.\n\nHis face is making me giggle. \n\nI'm at that bizarre intersection of exhaustion and despair where everything becomes funny.\n\nAnd right now, his stupid, air-sucking face is fucking hilarious. \n\nI'm trying so hard to stifle my laughter that the bed is shaking. How is this not waking him? \n\nA particularly loud snort jerks his entire body like a mini seizure, and I lose it. Tears are streaming down my cheeks. I can't breathe. I'm going to pee myself. Right here in his bed. \n\nAt some point during my fit of uncontrolled laughter, I notice a strange sound. At first, I can't quite place it. Then I remember what it's called. Silence. \n\nI glance at Brad. His mouth is still open, but he's breathing like a normal human and not a mountain troll. \n\nA minute passes. Then two. The absence of sound is eerie. \n\nMy laughter peters out as the gravity of the moment hits me. I try not to let it, but a trickle of hope seeps back into my soul.\n\nI relax my body into the mattress exactly as it is, not daring to readjust my limbs. My cheeks are still wet from my tears, but I don't wipe them. \n\nI slow my breathing. \n\nI close my eyes. \n\nHe starts to snore. \n\n******** \n\n3:58 a.m. \n\nDo you know what's funny? \n\nNothing. \n\nNothing is funny. Nothing will ever be funny again.\n\nLife is a fathomless ocean of pain followed by an eternity of blackness.\n\nWhen I was a kid in church, our priest told us about the Venerable Bede. I remember the name because it sounded so odd. Why is it that the only people who have some sort of permanent description attached to their first names are saints and serial killers? The Venerable Bede. Jack the Ripper. Doubting Thomas. Weird. \n\nAnyway, old Bede once wrote that life here on earth is like the flight of a sparrow through a mead hall on a cold winter night. Before the sparrow enters the mead hall, it's just blackness. Then the sparrow flies through the window and is like, \"Hey! Warmth. Light. Music. Yummy smells. This is amazing!\" \n\nBefore he knows it, he's out the other window and enveloped once again in darkness. That brief time inside the mead hall is life, Bede said, and we have no idea what comes in the eternity before or after, so we should cherish it. \n\nIt's a poignant metaphor, but I think it misses the mark just a bit. \n\nIt's more like this: The sparrow flies through an open window, into a cold, dark apartment, and over the shapeless form of some sleeping monster that is making the most hideous noise in the world. The sparrow glances down and is like, \"What the FUCK is that?\", and he's so distracted that he slams into the opposite wall, breaks his neck, and falls to the floor\u2014paralyzed, but not dead\u2014so he's forced to lie there listening to that incessant noise, again and again, helpless to move and powerless to make it stop, until entropy and time finally conspire to end his suffering. \n\nThat's life, Bede-o. \n\n******** \n\n4:10 a.m.\n\nMy teeth feel gross. I always brush them before I go to bed. Always. But I hadn't planned on staying the night, which means I didn't bring my toothbrush, which means I didn't brush my teeth, which means my teeth feel fucking gross. \n\nEven if he stopped snoring right now, I don't think I'd be able to fall asleep with fuzzy, disgusting teeth. \n\nMaybe he has a spare toothbrush. I throw off the covers and walk down the hall toward the bathroom. I step on something sharp and yelp in pain. His belt, the very belt I'd torn off him earlier this evening in happier times, is lying on the floor. The prong of the buckle is sticking straight up. I kick it angrily against the wall and limp the rest of the way to the bathroom. \n\nBrad's snores taunt me with each step. Neither my cry of pain nor my abuse of his innocent belt was enough to wake him. He's impervious to all noise, like some slumbering superhero. \n\nAmazingly, he has a spare toothbrush in the bathroom, still in its packaging, probably from a visit to the dentist's office. Thank God. \n\nI tear it open, making as much noise with the packaging as I can muster. I brush my teeth angrily, as though trying to punish my mouth for its constant unwillingness to speak up and just say \"no\" to people. Take that, gums. \n\nI need to rinse. A hard plastic cup sits on the edge of the sink. I reach for it, but accidentally knock it into the sink, where it clatters around and makes an amazing racket. \n\nInstinctively, I try to scoop it up, but in my groggy state, all I succeed in doing is knocking it from the sink onto the tile floor, where it clatters around even more loudly, bouncing and dancing across the cold tiles like a firecracker. \n\nInstead of trying to grab it, I just smile and watch. Let's see him sleep through this. Eventually, it wobbles to a complete stop. \n\n\"Amy? You okay?\" Brad's voice sounds worried. It's sweet, and I feel my anger begin to subside a little. \n\n\"Yeah. Just knocked over a cup. Sorry.\" \n\n\"That's okay.\" He yawns. \"Maybe, just, you know, try to keep it down a bit. Exam tomorrow and all.\" \n\nKeep it down? My rage flares into a blinding fireball. Did he just ask me to keep it down? And remind me that there's an exam tomorrow? \n\n\"Do you have a razor?\" I ask. \n\n\"What?\" he asks groggily. The bastard is almost asleep again. \n\n\"A razor. Do you have a razor?\" I repeat, drawing out and enunciating the words as though I'm speaking to a child. \n\n\"Behind the mirror,\" he half mumbles. \n\nHe doesn't even ask what it's for. Which is good, because I'm going to use it to whittle the end of his toothbrush into a shiv.\n\nThen I'm going to limp back into his room and stand over him, toothbrush in hand. I'll call his name until he wakes up, and the last thing he'll see is me, smiling maniacally and frothing at the mouth with unrinsed toothpaste foam, as I drive the sharpened toothbrush right through his neck.\n\n******** \n\n4:16 a.m.\n\nMy rage brings with it a sudden clarity. It hits me like the cold water I'm slurping from my hands, which are cupped under the bathroom sink. ",
        "This is my problem, not his. If I just wake him up, which I should have done long ago, he'll apologize and probably offer to move to the couch or something. \n\nI'm so filled with anger that there's no room for anxiety about how to phrase it politely or how he might react. I'm going to do it. I'm going to confront him. \n\nI feel a surge of elation. It's empowering to realize I can overcome my crippling, lifelong conflict-avoidance issues simply by working myself into a murderous rage. I should write a self-help book. \n\nI walk from the bathroom back to the bedroom and shake his shoulder. \n\n\"Brad. Brad!\" \n\n\"Huh?\"\n\n\"You're snoring.\"\n\n\"I am?\" \n\n\"Yeah. It's been keeping me up. All night.\"\n\n\"Oh. Sorry,\" he says. But he doesn't sound sorry. He just sounds like he wants me to stop talking. \n\n\"Don't worry,\" he continues, yawning and rolling toward the center of the bed. \"You'll get used to it. You just...kinda have to...tune it out...\" \n\nHis words trail off as he falls asleep in the middle of speaking them. \n\nI consider going back for the toothbrush. I'm confident I can convince a jury of my peers that it was a justifiable homicide. Maybe I'll even get a cool nickname out of it. \n\n******** \n\n4:22 a.m.\n\nHe's still alive. For now. I chickened out. \n\nI am standing over him, but instead of holding a shiv, I'm holding a cup of warm water. It's as close to body temperature as I can make it. I know it's a shitty way out of the situation, but I don't care. \n\nIt was my giggling fit earlier in the night that inspired the idea. I'd almost peed myself. That would have been embarrassing, no? \n\nI walk to my side of the bed and pull back the comforter. I lower the cup to the mattress and start to pour it about six inches away from his crotch. A wet circle spreads outward, darkening the sheet and, through the magic of capillary action, soaking the fabric at the front of his boxers. The water is warm enough that he doesn't even notice. \n\nI return the cup to the bathroom, then quickly slide onto my side of the bed, where it's still nice and dry. \n\nI wait a few minutes, then sit up and push the comforter past his waist. \n\nI narrow my eyes into a squint, as though I'd been sleeping, and try my best to sound like I'm half-awake. \n\n\"Brad? Brad?\" I shake him until he stirs. \n\n\"Seriously?\" he sighs. \"What is it now?\" He sounds annoyed. \n\n\"Why is the mattress wet?\"\n\n\"What?\"\n\n\"The mattress,\" I point to the dark circle in the middle of the bed. \"It's wet.\"\n\nHe sits up and pushes the comforter farther down. He stares at the wet spot, and for a few moments he seems utterly perplexed. Then his eyes flick to his boxers, and a look of horror dawns across his face.\n\n\"I...don't know,\" he stammers. \"Earlier...when we were...did you, like, squirt or something?\"\n\nI shake my head. No, you adorable, conceited idiot. I didn't, like, squirt or something.\n\n\"I don't know what...I guess maybe...I can change the sheets,\" he offers in a quiet voice.\n\nI almost feel bad for him. Almost.\n\n\"It's fine,\" I say. \"Let's just get some sleep. We have an exam tomorrow, you know.\" \n\nI can tell from the look on his face that he won't be getting any more sleep tonight. \n\nA better person would say she's not proud of what she's done. \n\nBut I am proud. So very, very proud. \n\nThen tension drains from my body as I roll onto my left side and close my eyes. I listen to him slip quietly from the bed and pad down the hallway toward the couch. \n\nI'm not worried about any uncomfortable conversations tomorrow, because I know he won't bring this up again. Ever. Besides, tonight is the last time I plan on seeing Brad outside of class. He's hot and all, but I need to focus on my studies. \n\nI sink into the pillow and pull the comforter snug under my chin. It feels heavenly. \n\nI know my conflict avoidance issues are unhealthy and need addressing. My friends have been encouraging me for a while to see a professional. It's probably sound advice, and I just might make an appointment. \n\nBut first, I think I'll sleep on it.\n\n \n"
    ],
    "authorname": "ThatNewGuy",
    "tags": [
        "humour",
        "college"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/what-dreams-may-come-2"
}