{
    "title": "The Gift Ch. 11-15",
    "pages": [
        "Chapter 11\n\nThere were times when Luciana was thankful for having an assistant. Pam, her assistant of three years, was an older, short-haired woman, who handled everything from phone calls to emails to appointments. After Cleo's passing, she asked her to take a break from work to be able to recover. But now that Luciana was back at work, she realized how much she needed it. She had also told Pam to set her up with appointments as and when they arose, even if that meant going back home.\n\nHer latest project, the upscale apartment in Chicago that she was working on, wouldn't take a long time. The owners wanted to get rid of the walls and the cupboards in the kitchen to make it seem more spacious, and also remodel the master bathroom. In her nine-year career, she had liaised with various architects and surveyors for different projects, which set her apart from many other interior designers who didn't offer architectural services. Two days ago, after Pam set up an appointment with the architects she usually coordinated with, work on the apartment had started. Luciana was due to visit the place at noon that day, so she left the bed and went for a shower.\n\nAs she stepped into the glass shower stall, memories of the last few months floated back to her mind. Right from meeting Henry to the breakup to Cleo's sickness and eventual death, nothing about that year made her happy. Henry had been impulsive and wild, and it wasn't surprising because he was a musician who spent a lot of time on the road. He'd wanted her to go out drinking with him every night, mingle with his equally wild group of friends, and come home for a round or two of mindless sex. Yes, mindless. That's how she could best describe their activities in bed. In the beginning, it had been heady and passionate, but he had no regard for her arousal and didn't understand her body. When he failed to please her in the months they'd been together, she'd suggested trying out different things. But he put her off with his response that she shouldn't need help; it should just happen.\n\nIt hadn't happened. To make matters worse, he was allergic to cats and never wanted to be anywhere around Cleo. He started to pressure her to settle down with him, even though he knew from the very start that Luciana wasn't ready for it. She didn't remember the last time she had fallen in love or had a deep, meaningful relationship, and here was a man who wanted more of her without caring about her body or emotions. Luciana had felt trapped, and it was surprising because she had always been fiercely independent and never let a man control her.\n\nShe leaned against the wall, flinching when the cold tiles touched her skin. Elijah always told her to have more tact in relationships, but she wanted to be able to speak her mind. What good was a relationship if she had to lie and pretend? That wasn't how she was. If she had to be with someone, she wanted to feel comfortable about being her true self.\n\nBut she didn't want to think about it anymore, not when the hot water was washing away the soreness she felt in her body. When she closed her eyes, Chris's gentle gaze and soothing smile appeared in her mind, and her eyes flew open.\n\nThat was...wrong.\n\nWhen she had brought Cleo to the hospital, she hadn't thought it would be so hard to overcome the loss or that she'd be so afraid to go back and face an empty house. She had never stayed at Elijah's house for more than a day or two, didn't know any of his neighbors, and couldn't even remember his address from the top of her head on most occasions. But this time, everything was different, especially since she met Chris.\n\nThey had spent a lot of time together over the last few days, whether on Elijah's porch before he left for work or at his house after they returned from work. Chris had treated her to Norwegian egg coffee one evening, a recipe he learned from his mother, and as they sat in his cozy study, she had shared little details about her life that she never told anyone else. She told him about her vague memory of her parents, living with their alcoholic uncle after the fire, and eating cereal for every meal because everything else was out of reach. She told him about the time she was sent to a foster home as a seven-year-old when their uncle disappeared after losing a gambling bet and how it broke her heart to be away from Elijah. It hadn't been easy to hide her emotions as she spoke about them\u2014 her foster parents were kind and loving people, but to her, home had meant her brother, her only family.\n\nChris had remained silent throughout, listening to her without judgment. When she'd trailed off, she had felt embarrassed, wondering if she had said too much. She hadn't been able to meet his gaze, but when he had gently reached over to hold her hand, Luciana had felt like she could forget the world.\n\nShe hadn't been able to stop thinking about him. From the way the corners of his eyes crinkled when he smiled to his ridiculous song and dance routine while mowing the lawn or the way he acted like a five-year-old on steroids while playing with the neighbor's dog, there was so much about him that she liked and hadn't been able to get out of her head. The thoughts made a tinge of guilt surface inside her. It was too soon to move on from her loss. Cleo was all she had and she wasn't ready to replace her memories with erotic thoughts filled with the promise of something new. It seemed like a good distraction but it also made her feel like a bad person for getting over her cat's death so soon.\n\nAs she stepped out of the shower, she knew what to do. She needed to return home to Madison.\n\nLuciana remained at the site for two hours, happy that she had something to keep her occupied again. There were several instances when the client's dream interiors didn't resonate with her personal taste. This was one such project. Luciana wanted her living space to be neat and organized with most of the clutter hidden from view. But her new clients wanted to get rid of the cupboards and hang the pots and pans right above the kitchen counter. They also wanted a TV and a coffee maker in the bathroom.\n\nIt wasn't hard for her to visualize her client's needs even if they were different from her own tastes. She was a feminine girl, her preferred home d\u00e9cor being cozy and romantic. But not everyone had the same choices.\n\nShe remembered the time when she and Matt bought their duplex together. While Matt had wanted his apartment to be mostly black and white, Luciana had wanted hers to be pink, white and gold. It had taken her weeks to come up with the right d\u00e9cor for her apartment. It wasn't a new building and had been sitting around gathering dust for years because of a legal dispute between the owners. When the case was dismissed, the building was put up for sale, and not many wanted to buy it because of the work it needed. She and Matt had decided to buy it, simply because it was in a prime location and was selling at a bargain price.\n\nThe renovation hadn't been easy, though.\n\nThe day she moved in, she'd spent the whole night sneezing. It had seemed like all the dust in the whole world had been collected and stored in that apartment. The roof, walls, windows, and kitchen had needed repair, so Luciana had worked with her architects to make her designs come to life. Matt's apartment had even gone on to feature in Vogue, because of the classy black interiors. It had taken three months for the place to finally look like Luciana's dream home. There were balconies, a patio, a master suite with a walk-in closet, and a home office that looked like a million bucks. The filthy pond had been converted into a clear, sparkling swimming pool, and with regular maintenance, the yard was now a nice garden, full of blooming flowers.\n\nBesides the coziness of the apartment, she liked that her best friend lived in the same building. It was much like living together without actually living together. They shared the pool and the lawn, played tennis in the evenings, and sat on the patio after dinner, sharing some good-natured banter.\n\nIt was a windy day in Chicago, the gusts of strong breeze blowing the leaves off the trees. As Luciana drove to the cat shelter, she realized it was Nature's way of helping the trees shed the dry leaves. Every time the wind came rolling in, the trees swayed and let the leaves fall into piles on the street, only to be swept away in the air.\n\nThis was Luciana's third day at the shelter. After visiting with Chris the first time, she had wanted to return with food, toys, and blankets, which she had done a few days later. But today, she was there for Poppy, the cat with the sad eyes that had called out to her.\n\nThere was something about loneliness that oddly spoke to her. She had seen it in her brother's eyes for years, she had felt it within herself after Cleo left, and when she gently stroked her head, she saw the same on her face. In only three days, Poppy had memorized her scent. Even before she approached her basket, she rose from her bed and came walking towards her, meowing softly. Luciana saw the limp, and it saddened her to think that she couldn't join the other cats when they ran and played.\n\nOver her last two visits, Luciana had talked to the shelter staff to learn more about Poppy. She had found out that she loved sardines, blueberries, and cheese, that shoelaces were her favorite toy, and that she had a special attachment to the yellow blanket she slept on. She also learned that unlike many other cats there, Poppy was good with children.\n\nSince her last visit, Luciana found out that nearly twenty cats had been adopted from the shelter, what with the holiday season knocking on the door. The shelter staff told her that Poppy wasn't the chosen one for most because she was shy and easily scared and couldn't jump and play like other healthy cats.\n\nLuciana didn't care about the reasons why other people had cast a blind eye towards Poppy during the open house events. She also didn't care that the cat was shy and easily scared of people (something to do with her traumatic injury not too long ago) and loved nothing more than to snuggle in her yellow blanket. All she cared about was the look on her face when Luciana sat next to her and gently talked to her. The shelter staff also told her that ever since her first visit, Poppy would look forward to seeing her every day.\n\nLife at the shelter was difficult for any cat. She didn't blame the hardworking shelter staff because they already did their best to make the transition as easy and stress-free as possible. But for many cats, shelter life could be extraordinarily upsetting and lonely, especially if they craved human companionship but were too shy or scared to express it.\n\nThat day, as she read Poppy a story while stroking her head, she suddenly climbed into her lap and started to knead. Luciana thought she was sleepy and wanted to snuggle in her lap, but taking her by surprise, Poppy flopped down, exposing her belly, and began to tap her hand with her paws.\n\n\"What?\" Luciana wondered aloud, putting the book away. \"Do you want to play?\"\n\nPoppy kept rolling from side to side and pawing her hands. Luciana giggled. \"Alright, we'll play stick 'em up,\" she said. \"Come on.\"\n\nFor the next ten minutes, Poppy played the tickling game with her, where she tickled her belly and she curled up, flung her limbs and meowed. If she was human, she would have giggled aloud. That was the happiest she had ever seen Poppy, going crazy for the tickles on her lap.\n\nFor a moment there, Luciana wanted to cry. That was the first game she had played with Cleo, the day she found her. Even as a grown cat, Cleo's love for that game hadn't dwindled. Playing with Poppy was eerily familiar; she was black-and-white, fluffy, calm and mellow and loved many of the same things as Cleo did, including being read to and playing the tickle game. It was as if the Universe was sending signals to her, trying to tell her something.\n\nWhen she returned home distracted and brooding in the evening, Luciana decided to vacuum to get her mind off the thoughts. Elijah had no time for household chores. He had a gardener who came by once a week to mow the lawn, and there was a cleaner that came twice a month to vacuum and mop. Because the cleaner hadn't been around since Luciana arrived at Elijah's house, she decided to do the cleaning herself.\n\nAs she dragged the vacuum cleaner out of the closet in the basement, Luciana tried to not think of Cleo and her hatred for any kind of device that made a loud noise. She used to close the bathroom door while blow-drying her hair and let Cleo out in the garden while cleaning the house. On days she mowed the lawn, Cleo used to watch from the window, suspiciously eyeing the machine.\n\nShe allowed the noise of the vacuum cleaner to drown out her thoughts. First, she did the living and dining rooms, kitchen, bathroom and spare bedroom on the lower level. Next, she proceeded to the bedrooms on the second level, including Elijah's room and her own.\n\nHer brother was organized with his belongings. His neat and tidy room didn't bear any mark of a single man with no time for homely chores. The bed was decently made, no clothes were spilling out of the closet and the desk looked neat. Luciana went with the vacuum to the nook and corners, lifting the carpet under the bed to remove the thin sheet of dust. While stepping back, she tripped on the chord and bumped into the desk, and as she tried to break her fall, she ended up scattering the books on the floor.\n\nTurning off the machine and putting it to a side, she crouched on the floor to pick up the books. Some of them were academic books on forensic science and criminal psychology, while a few others were crime thrillers. Elijah was devoted to his job; even when he wasn't at work, he surrounded himself with things that reminded him of his profession and position.\n\nShe neatly arranged the books in a pile and rose from the floor, looking down when something slipped out of one of the books. Luciana stared at the floor, unable to believe what she saw.\n\nA picture. And a CD.\n\n\"Oh my god.\" The words left her lips in a breathless whisper as she picked up the fallen items. The picture was first to catch her eye. There was no mistaking it.\n\nMichelle.\n\nLuciana's hand flew to her mouth as she tried to stop a gasp. It was an old picture, the way she remembered Michelle. Her heart madly pounded in her chest, threatening to burst out. Never in a million years had she imagined Elijah lying to her. Lying about not loving her or missing her, lying about being over it when he was not. And how could he? She was the only girl he ever truly loved. Even after all those years, he had kept her close to his heart, unable to let go.\n\nShe put the items back where they had fallen out from. Even without looking she knew what the CD was. Wiping a stray tear from the corner of her eye, she dragged the vacuum cleaner out of the room, her breaths coming in short pants as she climbed down the stairs.\n\nElijah was a classic example of missed opportunities. He'd had the greatest thing in the world that no amount of money, professional success or social status could buy him. But he'd chosen to let it go.\n\nLuciana didn't want to be like him. She could see the signs and she wanted to follow her heart. She didn't want to pass up an opportunity and regret it for the rest of her life.\n\nSlipping on her boots, she stepped out of the house, knowing where to go.\n\n---\n\nNever in his life had Chris been at such a loss over what to write. He had written and published three best-selling books so far, and here he was, unable to think of a 5000-word magazine article. He had thought of asking his father for help but later decided against it. Writing wasn't new to him. But every time he tried to focus, random thoughts got in the way.\n\nMaybe not so random, after all. There was only one object of his distraction, and it was next door.\n\nPerhaps Luciana should have gone back home. But not being able to see her every day would be even worse. Even when she had resumed work and wasn't home most of the day, Chris took solace in the fact that she had been getting better, slowly but surely recovering from the loss. Every now and then, he could see the flash of a smile on her face, and despite himself, it made his heart flip.\n\nHe closed his laptop and dropped his face in his hands, trying to stop the thoughts swimming inside his head. Suddenly his mother's words rang in his ears\u2014 confused and distracted heart. He snorted to himself when he remembered that. His mother had always known him better than he knew himself.\n\nHe had worked out with his brother that day, a grueling day of strength training. An equal balance of rest, workout and diet was the secret to his muscular physique, with less than three percent of body fat. Afterward, he'd had dinner with his brother and his girlfriend. Growing up, they were the best of friends and the worst of foes. They played, they fought, they wrestled, they rolled in the mud, but never took more than a few minutes to make up and start over again. Jack was younger than Chris but looked almost identical to him. Many of their friends or family members still confused the two of them. Chris's long hair often served as the visible distinguishing factor.\n\nHe was about to head to bed and read for a while when the doorbell rang. Fixing his shirt, he left the chair and walked out to the living room, turning on the foyer light. When he opened the door, he found Luciana on his porch. Their eyes remained locked for a few seconds, and Chris tried his best to not let his gaze wander lower, to the outline of her perky bosom, the glimpse of cleavage, and her small waist highlighted by the material of her t-shirt. It was cold outside and he suddenly seemed to be aware that she wasn't warm enough.\n\n\"Why are you without warm clothing?\" he frowned, stepping aside to let her enter. She stopped shivering once she was inside the house.\n\n\"I wasn't thinking,\" she replied, folding her arms around herself. She kept her gaze low, trying to not stare at the deep neckline of his loose t-shirt and the bulging chest muscles it revealed. \"I needed to talk to you, so I rushed out.\"\n\n\"Do you know you can get very sick from being out in the cold?\" he asked, leading her to the couch. Luciana rolled her eyes, glad he didn't see it.\n\n\"I do,\" she retorted playfully. \"Mother hen.\"\n\n\"Hey, everyone can use a mother hen sometimes,\" he turned to mock glare at her. \"What was so urgent anyway?\"\n\nLuciana sat on the couch, wondering how to broach the subject. Chris stood next to her with folded arms, scrutinizing her. Despite being thin, she was shapely. Her toned physique led him to believe she was into exercising, although she had lost so much weight in the last few weeks, she could consume all the calories in the world and still not get fat.\n\n\"Ehm...\" She cleared her throat, clasping her hands together. \"I want to talk to you about Poppy.\"\n\n\"Poppy?\" he frowned, sitting next to her. \"What do you want to talk about?\"\n\n\"I... I want to adopt her,\" she offered hesitantly. Chris stared at her face for a minute.\n\n\"You want to adopt Poppy?\" he wondered aloud. \"But you--\"\n\n\"I've been to the shelter the last few days to see her,\" she explained. \"It breaks my heart every time I visit her... She's so lonely. She clings to me and doesn't want to let go.\"\n\nShe leaned back, taking in a deep breath. \"I cannot help but think about Cleo when I see her,\" she said. \"She looks like her, has a personality like her, and she snuggles up to me the way Cleo did.\"\n\nTurning towards him, she held his hands. \"I cannot stand going back to an empty house,\" she confessed, her moist eyes locked with his. \"I want to take her home with me.\"\n\n\"Luciana, calm down.\" He gently held her by the arms, trying to still her trembling body. \"You're still very weak. Such excitement isn't good for you.\"",
        "\"I'm fine,\" she insisted. \"Please tell me you will talk to them about Poppy.\"\n\nChris sighed, moving away from her, his arms dropping to his sides. He had no doubt Luciana would love every cat like she loved Cleo. But he still needed to make sure she was making the right decision for the right reasons.\n\n\"Are you sure you want to adopt Poppy because you love her?\" he asked. \"And not just because you are afraid to go back to an empty house?\"\n\nIn the silence, she seemed to mull it over. \"Isn't that a valid reason?\" she asked, her voice unsure and hesitant.\n\n\"No.\" Chris turned towards her, his eyes dark and brooding. \"It means you're trying to find a replacement for Cleo.\"\n\n\"I'm only trying to give Poppy a better life!\" she retorted. \"That poor animal doesn't come out of her basket except when she sees me. I'm just--\"\n\nHe lifted a hand to stop her, eyes closed, nostrils flared. Luciana visibly recoiled, her mouth going dry. He didn't look pleased. Something told her he'd be dangerous when angry.\n\n\"Your fear of going back to an empty house cannot be the decisive factor behind adopting an animal,\" he said slowly. \"You're grieving, emotional, easily swayed by your heart. You are searching for your lost cat everywhere.\"\n\nHe held her upper arms again, pulling her close to his body. Luciana felt her chest brush against his strong pectoral muscles, making a course of liquid heat run down her body. She momentarily closed her eyes, only to gaze into deep blue depths when she opened them again.\n\n\"Poppy isn't Cleo,\" he explained, his eyes moving all over her face. \"She will never be Cleo. She is a different cat with a different personality, however alike they may seem to you. Do you understand that?\"\n\nLuciana remembered what she had said to him mere days ago, in that very place. That Cleo was irreplaceable, that she was afraid of getting another pet, that she wouldn't be able to live in the fear of losing it again. But that had changed now. She was ready to embrace her fears and apprehensions, choosing to live for the moment rather than be afraid of a future she couldn't control.\n\n\"That was before I met Poppy,\" she answered, avoiding his gaze. His face was so close to hers, it was hard to breathe. \"That was before she chose me.\"\n\nWhen she met his eyes, he was still giving her that quiet, brooding stare. \"You don't want me to adopt Poppy, do you?\" she posed reluctantly.\n\nChris kept staring without offering a reply. Luciana didn't know what she saw in his gaze, but it made her body prickle with sensual awareness. She was conscious of his strong fingers on her upper arms, the warmth of his hand invading the fabric of her t-shirt to reach her skin. For a long minute, neither of them moved nor spoke. Chris could feel her tense muscles, his eyes rolling over her countenance, and when they paused on her lips, her heart threatened to give up on her.\n\nAnd then he laughed. The spell broken, Luciana gawked at him in surprise and wonder, the sound of his deep laughter booming through the room not going unnoticed. He moved away from her and sank back in the couch, dropping his head back as he continued to chortle. She crossed her arms, slightly vexed at his bad timing.\n\n\"You thought I'd have a problem with you adopting Poppy?\" he asked her, still laughing. \"Of course not.\"\n\n\"No?\" she felt relief washing over her. \"But you\u2014\"\n\n\"Relax, I was only testing you,\" he explained, briefly tapping her cheek with two fingers. \"I wanted to be certain you knew what you were talking about. With the holiday season here, it's time for people to adopt pets on a whim. After the festivities are over, they realize they can't care for a pet.\" His laughter gone, he now sighed. \"Most of those animals are returned to shelters shortly afterward.\"\n\nHe glanced at her, his lips curving into a smile. \"I'm glad you're better,\" he said. \"That it isn't too painful anymore to get a new pet.\"\n\n\"So you'll talk to them?\" she asked, looking at him from lowered lashes. He nodded.\n\n\"It's easy. You have to complete an application, pay the fee and you're good to take her home. Usually, they assess an application to see if the person is the right fit, but since they already know you -- and I will be putting in a word -- it shouldn't be the case.\"\n\nLuciana hadn't felt that surge of joy in many months. She beamed, and before he knew it, she was throwing her arms around his neck.\n\n\"Thank you,\" she murmured, closing her eyes. \"Thank you so much. You don't know how much it means to me.\"\n\nSlightly taken aback at first, Chris didn't know what to do with his hands. He wanted to pull her tight against him, but he resisted, raising a hand to briefly stroke her back. He felt the bones of her spine but he also couldn't help but notice how her body seemed to fit against his. He could smell a trace of cologne on her, and although the moment was quick and fleeting, his senses seemed to come alive.\n\n\"I know,\" he whispered in her ear. \"Because it means a lot to me too.\"\n\n---\n\nChapter 12\n\nSince moving out of his parents' house when he went to vet school, Chris hadn't had pets of his own. It needed too much time and commitment and he had odd hours and often a punishing schedule at work. His ex-wife hadn't been fond of pets, so it was out of question. He was anyway surrounded by animals all the time, whether he was at the hospital or a shelter. That day, he had treated an injured raccoon that some rescue workers had brought in, and the girls had promptly named him Milo. When Larry had said that raccoons should always be called Rocky, the girls had protested vehemently.\n\nOf course, it would be a different experience to be chosen by an animal who wanted to come home with you. Perhaps someday he could find the time and the opportunity, but as of now, he was content to watch Luciana and Poppy bask in each other's company. The adoption process had been quick and easy, and before they knew it, they were walking out of the shelter with the fluffy black and white cat that no one had ever seen happy. It was hard to believe now, when she purred contentedly in Luciana's arms and looked at her with eyes full of love.\n\nIt wasn't hard to tell that Luciana still missed Cleo. She had spent more than ten years with her, made memories that were impossible to replace or forget. When they talked, she sometimes became silent and seemed to disappear inside herself. Whenever Chris sensed her brooding over the painful memories again, he would gently remind her that she had someone else to look forward to\u2014 Poppy.\n\nAlthough the shelter staff wasn't sure of her breed, her fluffiness led them to believe she was a Turkish Angora cat, much like Cleo had been. There was no mistaking the similarity between the two\u2014 the only things different were her limp and the patterns of black on white fur. The upper part of Poppy's body, as well as her tail, were black but her belly and legs were white. The top half of her face was black, appearing around her eyes like a masquerade mask. She also had a small black patch right under her bushy tail, which Luciana thought was a birthmark.\n\nAside from bringing Poppy home, Luciana had also found forever homes for a few of the cats rescued from the hoarding house. She had later handed him a long list of names, which Chris had passed on to his hospital staff as well as the shelter staff. That, besides donating money and food to a few of the shelters Chris worked with.\n\nWhen she brought Poppy home, Luciana also chose to bring along her basket and the yellow blanket she loved. Later, she repeatedly asked Chris to formulate a diet for her that would prevent kidney disease -- or any disease -- in future. He had only suggested wet food or home-cooked meals, with the reminder that animals could develop various diseases despite receiving the best care. He was aware that she thought Cleo's sickness was her fault, but it wasn't. He wondered if he could ever make her realize that.\n\nOn Halloween, the children from around the neighborhood came for trick or treating. Much to Chris's amusement, Luciana had a big stock of healthy candies for the kids, including grain-free cheddar crackers, naturally flavored gummy packs, real fruit tapes, and peanut butter cups made with dark chocolate and sunflower seed butter. Yes, they were candies that children would love, but she could rest easy knowing she wasn't contributing to obesity.\n\nTill late into that night, they sat in Elijah's living room, sharing a bottle of wine and talking about random things\u2014their love for romantic comedies from the 1930s and 1940s, Italian food, bike riding, and indoor picnics. She told him she loved to dance, having been a ballet student for a few years as a child. Chris let her know that he had taken dance lessons before his wedding, and that he was still good at it. She asked him if he'd ever want to go dancing with her, and he only laughed enigmatically in response.\n\nFor some reason, sitting there with Chris was strangely reminiscent of the postprandial drinks she often enjoyed with Matt by the poolside. Although Matt had a weird sense of humor and could get high on music, he was an introvert who loved his space. On many evenings after a game of tennis, they sat by the poolside in their lounge chairs, simply staring at the shimmering water or at the night sky. Luciana always thought it was impossible for her to find that kind of companionship or comfort level with anyone else, but sitting next to Chris, she knew she was wrong.\n\nHe told her about his travels, his time in Australia and Africa, the thrill of seeing Victoria Falls and the mist, the rainbows and the incredible roar that came with it. Later, he gave her a commentary on every house and every neighbor in that locality, from the pets each household had to the quirks of the neighbors to the ones it was best to remain away from. His colorful and detailed descriptions of people and places made her feel she'd been with him to experience all of it, and she found herself wondering if he had shared those same stories with his ex-wife...or any other woman. When a tinge of jealousy surfaced within her, she quickly turned her attention to Poppy in her lap and how happy she had made her.\n\nChris thought she looked more peaceful than ever. Elijah was out of town for a week, and although he knew his sister was going back home the next day, he wouldn't be able to make it. He chose to not dwell on how different it would be to not see her every day. Instead, he took another sip of the wine and leaned back in the couch.\n\nThe room was dark except for the small lamps on either side of the couch and the fire burning in the hearth. In the soft halo of the pretty yellow lights, Luciana looked radiant, even as she stared out the window while stroking Poppy's fur. The little animal hadn't taken long at all to realize she was her new human. Having had decades of experience with animals, Chris recognized the look of contentment on a pet's face when he saw it. Poppy didn't have that sad face anymore. Even when she was falling asleep in Luciana's lap, the gentle rise and fall of her body was an indication of being at peace.\n\n\"How old is she?\" Luciana wondered aloud, looking down at her.\n\n\"As far as I can tell, not more than three years,\" he replied, reaching out to stroke her head. Poppy lifted her head and looked sleepily at him, licking his hand when he held it out for her. \"How has she been all day?\"\n\n\"Good,\" she nodded with a smile. \"We went out while it was snowing. She hated it.\"\n\nChris laughed. \"You've been chosen again,\" he observed. \"Cats do seem to love you.\"\n\n\"At least I'm not alone anymore. Going back home doesn't seem as scary now.\"\n\nMatt had been surprised when she'd asked him to bring Cleo's stuff out of the basement and put them back in her apartment. When she told him about Poppy, he'd been overjoyed, but also worried about how she would react to the dogs. Because Poppy had been found on the street, the shelter staff didn't know if she'd be comfortable around dogs. Matt had assured her that he and Kyle would restrain the dogs until Poppy got used to them.\n\nWhen Chris cleared his throat, Luciana looked at his face. She saw the hesitation in his eyes, as if he wanted to ask something but didn't know how to.\n\n\"Is anything wrong?\" she asked quietly. \"You look pensive.\"\n\n\"I'm alright,\" he replied, without lifting his gaze. \"When are you leaving tomorrow?\"\n\n\"Maybe late afternoon. Matt and Kyle are going to Australia for a week, so I have to go back and watch the dogs until Matt's brother comes to take them away.\"\n\n\"How many dogs?\"\n\n\"Four.\"\n\n\"Four dogs?\" Chris laughed against his will. \"What kinds?\"\n\n\"Pug, bulldog, Dalmatian and Labrador.\"\n\n\"Different breeds, different sizes,\" he mulled it over. \"They must be a handful.\"\n\n\"They are. Saffy the pug in particular.\" She shifted slightly and uncrossed her legs, waking up Poppy in the process. \"That's okay, go back to sleep,\" she cooed to her, and Chris smiled at her sing-song voice.\n\n\"You seem close,\" he said after a pause. \"What does he do?\"\n\n\"He's a DJ,\" she answered. \"And very successful at it too. He's usually never home during the night and then sleeps the whole morning.\" She eyed him with an amused look. \"It takes time getting used to him. He's kind of in-your-face sometimes.\"\n\n\"You grew up together?\"\n\n\"Uh-huh. I was possibly the only female friend he ever had.\"\n\n\"Why is that?\" he asked, curious.\n\n\"Perhaps because I was the first one to realize he was gay but made no big deal about it,\" she shrugged. \"I think you will like him. He's very kind, just like you.\"\n\n\"I'm honored that you think I'm kind,\" he said in a low voice. \"I'm going to miss you.\"\n\nThe abruptness of those words surprised her a little, but they seemed to echo what she had been feeling the past few days. It had been like a whirlwind, right from bringing Cleo to the hospital on that cold night to getting to know him to finding Poppy. She knew for certain that if Chris hadn't been around to help her, she would have sunk into a deeper depression and never recovered. When the thought made her heart ache, she gently placed a hand upon his.\n\n\"I want you to know that you've given me my best gift ever,\" she said, her eyes traveling to Poppy. \"If those 200 cats hadn't been brought to the hospital and you hadn't told me about them, I wouldn't have gone to the shelter with you or found Poppy there. You did more than just save those cats. You saved me.\"\n\nChris remained silent, letting her words penetrate before saying anything. Luciana smiled fondly when Poppy sat up in her lap, stretched and walked over her legs towards Chris. He stroked under her chin, and after a happy purr, she kneaded on his leg for a few seconds before flopping down.\n\n\"Can I...\" he began, his voice catching for some reason. \"Can I tell you something?\"\n\n\"Of course.\"\n\n\"You wouldn't be mad at me?\"\n\nShe raised an eyebrow. \"Why would I be mad at you?\" she asked.\n\n\"Because...\" He didn't know how to put into words what he wanted to say. He ran a hand through Poppy's fur, trying to muster some courage. \"It isn't possible for me to look at you as only a neighbor. Or the top cop's sister. Not anymore.\"\n\nLuciana traced her finger around the rim of the glass, resisting his words and yet welcoming them at the same time.\n\n\"I haven't been with anyone since the divorce,\" he continued, absently playing with Poppy's paw. \"Not a date, not even a weekend fling. My brother joked that I was planning to be a hermit for the rest of my life.\"\n\nHe let out a sad laugh at his own words. \"After the marriage ended, I lived in constant fear of relationships or attachments. I kept thinking of all the reasons why the marriage didn't work out, and in my mind, I blamed it all on myself. After all, if I hadn't neglected her, if I hadn't spent long hours at work, she wouldn't have needed to seek someone else, right?\"\n\nChris took a swig of wine, hoping it would help him get the right words out. \"I didn't want another relationship,\" he said. \"I was afraid and unsure. But that was until I met you. Your eyes, your self-effacing demeanor, your easy forthrightness, your love for animals... everything seemed to call out to me.\"\n\nThe deep rumble of his voice seemed to echo down to the marrow of her bones. When she lifted her eyes from the wine glass and met his gaze, she found them moist. Chris bent down to kiss Poppy on her nose, and the cat purred in her sleep.\n\n\"I have become so used to seeing you here,\" he said wistfully. \"It gives me an odd sense of comfort and happiness when I see you playing with Poppy on the porch, or when you are picking out weeds from the lawn, or simply sitting there reading. I don't know what it's going to be like without you.\"\n\nDespite the wild pounding of her heart, Luciana reached for his hand. Chris took her left hand in his right hand and pressed a chaste kiss on to the back of her palm, eyes locked with her. \"I'm glad you found Poppy,\" he murmured. \"I hope she gives you peace.\"\n\nLuciana stared at his face, still able to feel the moist imprint of his lips on her hand. Putting the wine glass away, she decided enough was enough, and inched closer to him. The next thing they knew, she had her mouth locked with his in a passionate, relentless kiss, his hands grabbing her face while she clawed at his shirt. Poppy yelped and struggled out of the tight space that trapped her between them, then sat on the coffee table and watched them suspiciously while their kisses turned sloppy and breathless. When they finally pulled apart after several long minutes, both of them were panting.\n\n\"Did you practice that speech?\" she asked.\n\n\"Of course,\" he smirked. 'I've been thinking all evening.\"\n\nLuciana giggled, feeling a little tipsy. \"I want you to visit me,\" she breathed, her forehead resting against his. \"I have a nice house.\"\n\nChris nodded. \"I will,\" he grinned, pressing another kiss on to her lips. Poppy jumped back on to the couch, and as she cuddled up to both of them, he felt an unexpected sense of completion fill his heart.\n\n---\n\nChapter 13\n\n\"We have an iguana and a gecko coming in today,\" announced Clara, as she handed Chris the list of patients for the day. \"Aren't geckos adorable? I always wanted to have one as a pet when I was a kid.\"\n\n\"It's illegal, though,\" he pointed out, scrolling through the list with one hand while eating his lunch of a grilled chicken bowl with the other.\n\n\"That's exactly why my parents didn't get one for me,\" she said. \"Did you see Troy yesterday?\"\n\n\"Yeah. He's healing well.\"\n\n\"Does he remember your jerky treats?\"\n\n\"Yes, he does.\" He looked up at her. \"What's a vet without jerky treats, right?\"\n\nClara chuckled. \"You have a way with animals,\" she nodded. \"What are you going to do about the gecko?\"\n\n\"I'll probably charm everyone with my amazing knowledge of exotic animals and their anatomies,\" he replied, handing the list back to her. \"What's wrong with the iguana?\"\n\n\"I'm not sure. Possibly an infection.\"\n\nThe door of his office opened and Elaine appeared in the room. She gave Clara a smile and a pat on her shoulder.\n\n\"I'm pleased to announce that all 200 cats and kittens have been moved from the hospital,\" she beamed. \"You guys did a remarkable job. Chris, you should talk to the board about a raise.\"\n\nHe rolled his eyes. \"They just got a raise six months ago,\" he said. \"Besides, money shouldn't be the only motivation for vets. It's more than just a job.\"\n\nClara only giggled, stealing a glance into Chris's lunchbox. \"You know, doc,\" she said. \"For someone who loves food so much, you have amazing self-control.\"\n\n\"I'm proud of my body, thank you very much,\" he stabbed a piece of chicken with the fork and put it into his mouth. \"A little restraint always helps.\"\n\n\"Yeah? Doesn't seem so when you go through three bags of chips a day,\" she quipped before leaving the room. Elaine laughed at their interaction.",
        "\"I wonder if you have such self-control about everything in life,\" she smiled at him. Chris raised his eyebrows.\n\n\"What is that supposed to mean?\"\n\n\"It doesn't go unnoticed that you remain distracted all the time these days,\" she pulled a chair and sat next to him. \"Does it have something to do with Luciana going back home?\"\n\nHe had tried to avoid that conversation for the longest time. As if having an omniscient mother at home wasn't enough, he also had to deal with the all-knowing director of operation at work. Yes, it had been three weeks since Luciana went back home. No, they hadn't talked since then because she hadn't given him her number and if he called her, it would be clear he'd dug out her number from the hospital files. He was too old for that kind of desperation.\n\n\"You miss her, don't you?\" she asked, without waiting for his reply to her previous question. Chris shut his lunchbox and reached for the water.\n\n\"I'm alright,\" he tried to sound nonchalant as he took a few long gulps from the bottle. \"Yeah, I do think about Poppy sometimes. She's adorable.\"\n\n\"She is,\" Elaine agreed. \"I could totally imagine someone like Luciana adopting her. She's a calm, docile cat who needed someone gentle and compassionate.\"\n\n\"They are happy with each other,\" he smiled. \"I'm glad I had taken her to the shelter that one day.\"\n\n\"You did more than that. You helped her recover.\"\n\n\"Didn't all of you want me to help her?\"\n\n\"Yes, but...\" She leaned back in the chair and crossed her legs, lacing her fingers on her lap. \"You do know that the young ladies here are attracted to you, right?\" she asked.\n\nChris laughed, rising from his chair. \"That's what happens when you're a male veterinarian working with a mostly female staff,\" he said, looking over a file. \"Regina had even asked me out on Valentine's Day, not too long after I got divorced. It was awkward, to say the least.\"\n\nElaine chuckled, shaking her head. \"I've known you for a long time, Chris,\" she said in a low voice. \"You've always had your priorities in place, never letting any of those young hormonal girls get in the way. Even after the divorce, your commitment to work didn't dwindle one bit.\"\n\n\"Is there a point to this, Elaine?\" he finally asked, feeling drained. She placed a hand on his shoulder.\n\n\"It seems like Luciana and Poppy have been able to do what no one else could,\" she observed, staring at his face. \"No, don't try to fool me, because you can't,\" she smiled when he opened his mouth to respond. \"I know that look on your face. The look of a man in love.\"\n\nChris wanted to deny it but knew he could not. It was hard enough to not see her every day or get to know if she was doing alright. She had mostly recovered when she left but part of her still grieved over Cleo. Each night when he went to bed, he worried if the old, haunting memories of Cleo would prevent her from being a good parent to Poppy. And in the moments before sleep, when he'd think of her smile and the passionate kiss they had shared on Halloween night, the strange yearning to see her again would only grow stronger.\n\nHe just didn't know what to do about it. He didn't want to end up looking like a fool or someone desperate. But if that kiss was anything to go by, followed by the invitation to visit her, then she felt the same way.\n\n\"Why don't you go and see her?\" Elaine asked, shattering his thoughts. \"The holiday season is upon us, plus the weekend is here. You know your schedule is not going to be as hectic anymore.\"\n\n\"I am an emergency vet, Elaine,\" he pointed out. \"Besides being the medical director.\"\n\n\"You're not the only vet here. And if we need you, we will give you a call. It's not like you're going to Australia.\"\n\nShe rose from the chair, patting his back. \"Don't dwell on your feelings so much,\" she gave him a wink. \"Act on them.\"\n\nThe rest of the day was slow. The iguana and the gecko didn't have any serious ailment, so they sent them off with a few medications. Besides attending a meeting and visiting the outpatient department, Chris didn't have much to do that day. He was surprised when he found time to sit in his office and work on the article he'd been thinking about. At six in the evening, he decided to call it a day.\n\nAs he approached his house, he saw Elijah checking the mailbox, his car in the driveway. He was in a black suit, with his badges above the pocket of the jacket. When he saw Chris, he looked up from the mail, his eyes smiling.\n\n\"You're early today,\" he said to him when he got out of his car. Chris laughed, walking up to him.\n\n\"I could say the same to you,\" he answered. Elijah chuckled, closing the mailbox.\n\n\"How have you been?\" he asked. Chris nodded.\n\n\"How is your sister?\"\n\nElijah raised his eyebrows. \"She's alright...but why do you ask me? I thought you guys were in touch.\"\n\n\"No,\" he cleared his throat. \"We didn't exchange numbers.\"\n\n\"Are you serious?\" Elijah looked genuinely surprised. When Chris gave a small nod, he started to laugh.\n\n\"That sounds like something two idiots would do,\" he said, giving a loud thump on his back. \"Come inside, I'll give you her card.\"\n\n\"I don't want it.\"\n\n\"I know you don't.\" He was unlocking the door by then, and when he glanced over his shoulder, he looked amused. \"But I want you to have it. Come in.\"\n\nChris awkwardly followed him inside, shutting the door behind him. He hung his coat on the rack, trying to avoid Elijah as he fished out Luciana's card from his wallet. That was more uncomfortable than meeting the parents.\n\n\"Here you go,\" he held the card out in front of him. Chris nervously accepted it, skimming through the information. Elijah was walking towards the kitchen while taking off the suit jacket.\n\n\"Would you like some coffee?\" he asked, his voice interspersed with the heavy thud of his footsteps.\n\n\"If you want to keep me up all night, most certainly,\" he replied, finally sitting on the couch. He heard Elijah laugh.\n\n\"Who said you weren't already staying up at night?\" he teased, his back towards him as he gathered the supplies for the coffee. Chris wanted to reply but could only manage to laugh.\n\n\"I've never seen you like this,\" he said, glancing at him as he turned on the coffee maker. Elijah looked at him with a smile.\n\n\"How much of me have you seen anyway?\" he asked, sitting next to him and splaying one arm on the backrest. \"Most people are too afraid of me to know me better.\"\n\n\"You're the police. No one wants to know you better.\"\n\nElijah chuckled at those words and Chris joined in. When his laugh faded and a somberness took over, Chris stared at his face.\n\n\"I never got to thank you for helping Luciana get better,\" he said quietly. \"I thought she could never go back home. She was so afraid and heartbroken.\"\n\n\"I didn't do anything,\" he shook his head. \"It was only a depressive episode. She was going to get better eventually.\"\n\n\"Are you always that modest?\" Elijah wondered, giving him an exasperated look. \"She would never find Poppy if it wasn't for you. And if it wasn't for you, she would still be in bed, moping around in her pajamas and crying herself to sleep.\"\n\nHe rose from the couch and went to the kitchen, where he turned off the coffee maker. \"She's all I have, Chris,\" he said as he fished out two mugs and proceeded to pour the coffee. \"I can't explain how scared I was to see her like that and not be able to help. Being a police officer doesn't exactly make me emotionally in tune with others.\"\n\n\"She worries about you too,\" Chris said, gratefully accepting the coffee when Elijah returned to the couch. \"She wants you to get a wife.\"\n\nElijah snorted, lifting the mug to his lips. For the next few seconds, he seemed to zone out, saying nothing.\n\n\"Of course she does,\" he smiled wryly to himself. \"She's been very vocal about it for the last ten years.\"\n\n\"And?\"\n\nHe sighed, taking another sip of his coffee. \"I'm still single, so her words have obviously fallen on deaf ears.\"\n\n\"You don't happen to have anyone in sight, do you?\" Chris tilted his head to one side. He saw Elijah lower his gaze, exuding a sadness he had never seen on his face before. Or perhaps, he had never noticed until Luciana pointed it out. The next moment, a hand came on his knee.\n\n\"I used to, but that was a long time ago,\" he said. \"Can I tell you something?\"\n\n\"Sure.\"\n\n\"Go get her. Don't let her slip away.\" He looked at his face, nodding like an understanding parent. \"Don't make the mistake I made.\"\n\nBeing a highly intuitive person with an almost eerie ability to connect random dots, Elijah knew his sister had told him all about his past, and he found no further reason to explain his 'mistake'. Chris simply stared at him, not sure how to respond.\n\nLater, when he returned home and laid on the couch, he found his hand involuntarily reaching for his phone. It was late, but the hospital front desk would still be open.\n\n\"Regina?\" he said when the call connected. \"It's Dr. Benson. Do you mind quickly checking my roster for tomorrow?\n\nThe girl obliged, and a minute later told him about his schedule. Chris took a deep breath, deciding that it was now or never.\n\n\"I'd like you to cancel all my appointments tomorrow and Sunday,\" he said. \"Of course I'm available for emergencies. But I won't be at work.\" He waited while the girl noted it down. \"Yes, that's it. Thanks so much, Regina. Have a good night.\"\n\nHe let the phone fall to the carpet as he turned over and let sleep wash over him.\n\n---\n\n\"Poppy, are you sitting on my notepad?\" Luciana wondered aloud, drawing the attention of the cat that was hogging most of the square footage of her desk. Poppy sleepily looked up, stared for a few seconds, before flopping back down again.\n\nLuciana came forward and picked her up. \"Of course you are,\" she laughed, pulling the notepad away and setting her back down. Sleep gone, the cat now focused her attention on the pen holder. With one swift slap, she had toppled the holder and scattered pens and markers all over the desk and the floor. Luciana looked at her and laughed again.\n\n\"I've cleared out your schedule for today,\" Pam announced as she walked into her drafting room. \"You're starting the new project on Monday, right?\"\n\n\"Right.\" Luciana quickly made a few notes, before tearing off the page. In the meanwhile, Pam had started to rearrange the contents of the pen holder. \"I also have a meeting with the surveyor on Monday, and the contractor on Tuesday. But I need to finish this design first.\"\n\n\"The emails have been answered and Tony said he'd be available by the end of the week,\" Pam added. \"Are you collaborating with him?\"\n\n\"Uh...no.\" She picked up her pencil and resumed work on the blueprint she had been designing. \"I just need some suggestions on the throne commode that the client wants-- with shiny gold mosaic on black, and lion head armrests. Oh, and there's the mirror that's actually a touchscreen computer.\"\n\nWhen Pam laughed, she looked over her shoulder. \"I know,\" Luciana shook her head. \"The weird things that people want.\"\n\n\"You have a busy week ahead,\" Pam pointed out. \"You've been busy since you returned.\"\n\n\"Yes, I cannot go without work.\" She put the pencil down and turned around. \"Why are you still here? It's Saturday.\"\n\n\"It's only noon,\" she said, surprised. Luciana sighed, her shoulders drooping.\n\n\"Didn't you say your son was getting married next week?\" she asked. \"You should be out shopping.\"\n\n\"But\u2014\"\n\n\"No buts.\" She came closer and put her hands on her shoulders. \"Just go home, alright? I won't need you until Monday.\"\n\nPam nodded with a smile. \"Don't forget you have an appointment tomorrow morning,\" she said, before reaching for her bag. \"I've written it down and put it here on your desk.\"\n\n\"I'll remember,\" Luciana replied, stroking the cat's tail. \"Unless Poppy eats it.\"\n\n\"She should be here by ten,\" Pam added with a laugh. When the doorbell rang, she went to answer it. Luciana returned to her drafting table, casting a side-eye to Poppy. She was usually calm and mellow and loved to hang around her office without causing much destruction, but that day, it seemed like she was in the mood for mischief. She had already dipped her paw in Luciana's coffee, napped on the keyboard and toppled the cat tree. It wasn't bad for a cat with a limp.\n\n\"Someone's here to see you,\" Pam announced from the front door. Luciana rolled her eyes and put the pencil down again, and as she walked out to the front of the building, her heart nearly stopped.\n\n\"Hi,\" Chris awkwardly held up a hand, a nervous smile on his face. Luciana couldn't help but notice that the black trench coat made him look taller, almost too tall to enter the doorway without bumping his head into the arch.\n\n\"Hi,\" she smiled when she found her voice back. \"Please...come in.\"\n\nPam stepped aside to let him enter. Without asking any question, her assistant wished her good day and left the building, but Luciana waited until her car was out the gate to hug Chris. When she did, it was like a drowning person clinging on to a log of wood.\n\n\"I can't believe you're here,\" she giggled nervously, enjoying the snug fit of his strong arms despite the icy cold trenchcoat. \"I missed you.\"\n\n\"I missed you too,\" he breathed, eyes closed as his arms wrapped tight around her body. She had gained a little weight but not enough to conceal the bones from his touch. \"I'm sorry... I didn't know which way to enter. It took me some time to figure out how many entrances this building has.\"\n\n\"Three,\" she said, pulling away. \"This is my office.\"\n\nShe held his hand and took him to her drafting room, where Poppy hopped down from the desk and walked up to him. Chris kneeled on the floor, tickling the sides of her face when she purred. When he fished out a kibble from his pocket, Luciana laughed.\n\n\"Seriously?\" she exclaimed, watching Poppy devour it in an instant. \"That's unfair.\"\n\n\"All's fair when you have a cat,\" he chuckled. \"Isn't it, Poppy?\"\n\nThe cat went in circles for a moment, before pawing him and meowing loudly. He laughed, looking at Luciana.\n\n\"That's the way to a cat's heart,\" he announced, picking her up as he rose to his feet. His eyes surveyed the neat and elegant room, with the drafting table on one end, the desk on the other, and a wood burner positioned right in the middle. It was quiet, professional, and feminine, the kind of place he could imagine Luciana working in. His eyes returned to her only when Poppy scrambled down from his arms.\n\n\"Did you design this?\" he asked, unable to hide his awe. Luciana wondered if his voice could get any deeper.\n\n\"Of course I did. I designed this whole building.\" She smoothed her hands over her black jumpsuit and looked into his eyes. \"Would you like to come upstairs and see my apartment?\"\n\nChris nodded, and the very next moment, she held his hand and led him to the next level of the building, Poppy leading the way. As they walked up the stairs, pretty chandeliers, pink and gold polka-dotted wallpapers, and decorative doorknobs caught his eye. When she opened the door, Poppy was the first to enter. The living room was spacious but cozy, a clever mix of pink, white and gold, long pink drapes that reached the floor, built-in shelves and cupboards all around and a floral sectional right across the fireplace. The large windows let in a good amount of sun, which trickled all the way to the middle of the room.\n\n\"It's stylish,\" he finally said as he walked in, taking off his shoes and his coat and hanging it in the foyer. \"It looks like the type of house you'd choose to live in.\"\n\nPoppy walked to her dish and ate some of her food, and then licked some water off the fountain. Luciana had to keep the bathroom doors closed because, like Cleo, Poppy was also an explorer and the toilet never ceased to amaze her. Afterward, she flopped into the pool of sunshine and snuggled with her yellow blanket, which she had dragged out of her bed.\n\nChris laughed a little, before looking at her. \"How have you been?\" he asked.\n\n\"Better,\" she nodded with a smile, hands firmly lodged into the pockets of her jumpsuit. \"Much better. Poppy has been getting along fine with everyone, including the dogs.\"\n\n\"Speaking of dogs, where are they?\"\n\n\"Matt's brother came and took them with him,\" she replied. \"Would you like something to eat? I was about to make lunch.\"\n\n\"Luciana.\" Without giving her a chance, Chris had pulled her towards him, his face so close to hers, she could feel his breath on her skin. Before she could react, he locked lips with her, kissing her with insistence. He wanted to love her, more than he'd ever wanted to do it with anyone.\n\n\"Chris...\" When they broke apart, her voice was raspy, hooded eyes sparkling. \"Kiss me again,\" she whispered, pulling him closer than he already was.\n\nHe obliged, pressing his body against hers, mouth moving insistently. It felt natural to have him like that, exploring her mouth, sucking her bottom lip into his mouth and nibbling on it. She felt the vibrations of his moan against her teeth and his noisy exhale through his nose. She matched his tongue stroke for stroke, her fingers in his hair and his in hers.\n\nWhen they sank into the couch, she threw a leg across his hips, locking him in a passionate embrace. She balled his shirt in her fist, her other hand trying to keep some balance as he pinned her down with his masculine weight. She started to get wet, her body thrumming with arousal as she felt him pressed into her belly. Their kisses were turning sloppy, all teeth and tongue. Her hand traveled over the strong, rippling muscles of his back, mapping his shoulder blades, the dip where his spine turned into the rise of his butt.\n\nHe slid his hands down her thighs, abruptly stopping between her legs. He pulled back and looked down, then back up at her face.\n\n\"Really?\" he spilled out a laugh. \"How do you use the bathroom in this...thing?\"\n\n\"I don't,\" Luciana chuckled as she pushed him away and rose to her feet. He watched her as she undid her outfit, letting the garment slip off her body and gather in a bunch at her hips. \"I just have to get naked every time.\"\n\nChris watched her stepping out of the romper that was now on the floor, wearing nothing but a lace bra and panties. He towered over her, his hands slipping around her small waist.\n\nIt baffled him how breathtaking she was with her long, dark hair, enigmatic green eyes, and perfect lips. He had seen many women in life -- had even been married -- but no one had affected him the way she did. It was as if a door had been thrown open and a breath of fresh air had blown in.\n\nIf the gods were real, he told himself, then Luciana was their masterpiece.\n\n\"What?\" she questioned. \"Is there something on my face? You've been staring for two minutes.\"\n\nChris shook his head, smiling quietly. Luciana lowered her gaze, suddenly aware that she was only in her underwear. She took his hand and led him to the bedroom, the heat in her belly only getting stronger in anticipation. Even Poppy walking in on them wasn't enough to break the moment. She picked up the cat, put her in her basket and turned on the TV to keep her occupied. She did love watching birds.\n\nWhen she returned to the bedroom, he was still clothed, and she took the opportunity to stand in front of him and tug at his long-sleeve Henley shirt, prompting him to pull it over his head and throw it aside. She then started to undo the fly of his jeans, thankful he wasn't wearing a belt. Before Chris could react, she kneeled in front of him, her fingers exploring carefully. She pulled down his underwear to free his hard length, tracing the sinuous curves of the thick veins. He let out a deep sigh, trying to grab anything in sight for support. They hadn't even begun, but he was ragingly aroused already.\n\nAs if reading her mind, he gave out a gruff laugh. \"That's what you do to me,\" he said, the serrated edge of his voice filling her with thrill and excitement. He stood still, hands roaming in her long tresses. His smooth, chiseled chest heaved with labored breathing when Luciana's lips parted, and her mouth watered as she took him in.",
        "\"Oh..!\" he groaned, violently shuddering. If not for the wall behind him, he was certain of his knees buckling. Luciana felt the first spurt of pre-ejaculate over her tongue, moaning against her will at the taste of him. Chris held her face in his hands, wanting it so fiercely he was sure he'd lose his mind. He began to move his hips, stroking his hard length in and out of her feverishly working mouth, a string of profanities spilling from his lips. Luciana glanced up at him, found his handsome features overcome with lust, a sheen of perspiration on his forehead, his delicious mouth twisted in pained pleasure. She gripped his hip with one hand while cupping his scrotum with the other. He bit out a curse, his body jerking when she massaged her fingers over the heavy sac.\n\nChris didn't know what to do with himself, all awash with a ferocious pleasure. He felt his stomach muscles quivering, clenching as her skilled tongue moved along the head of his manhood.\n\n\"Oh...bloody hell,\" he gasped, \"Take me deeper, Lu ... yes, just like that...\"\n\nShe obliged, gripping the thick base of his manhood, and fisting his scrotum to feel him quiver. He was enchanting in his unrestrained abandonment, so erotic that it made her slick between her legs.\n\n\"I will not last,\" he cried out hoarsely. Then he pushed her mouth away and yanked her to her feet, effortlessly picking her up and throwing her onto the bed. His huge body hovered above her, his lips breaking into a devilish grin as his hair fell over his face. \"Couldn't let you have all the fun, could I?\" he whispered. In a sudden move, he had pulled off her bra and panties, and positioned himself at her opening.\n\n\"Tell me you want this,\" he hissed, bringing his tongue to stroke the peaks of her breasts, teasing to make her want more.\n\n\"I do ...\" there was surrender in her breathy tone, no resistance, no caution. He reached between her legs, his probing fingers sliding into her slit to find her gratifyingly wet. He used two fingers to gently thrust in and out, trying to hold on to every semblance of control as he felt her clenching around him.\n\nChris obliged, pushing through her opening, slowly and carefully, biting back animal sounds of pleasure when she started to clench hard. The look on her face, the sound of her gasping and moaning underneath him was too much for him, and he fought the urge to collapse upon her with a hard, deep thrust that she could feel to her womb. He kept her legs spread as he worked his way into her, lungs burning as he gulped in air, every nerve in his body taut and a surfeit of sensations burning through him.\n\nLuciana felt the raging fire in her belly as he teased her, knowing she wasn't as pliant as she used to be a few months ago. He gasped, and she couldn't believe how fascinating and sensual he was. She tried keeping her eyes open, but every time he thrust into her, her eyes dropped close in waves of delight. She was smaller than him, and from the way he clenched his jaw with strain, she knew he was exerting rigid control. She moved restlessly under him, groaning as he slid in and out, pushing harder and deeper.\n\n\"Hurry,\" she urged, her face contorting in pleasure. Hunching over her, Chris sank his teeth into her shoulder, and she arched into his mouth in a primitive act, goaded by their carnality. He supported his weight by placing his hands on the bed, as he slid in till the root to be buried completely within her. He paused, struggling for control. She fit him perfectly and tightly, like two halves of a whole. It wouldn't be too long. He hadn't been with anyone in over three years and Luciana felt too good for him to hold back.\n\nHer head thrashed from side to side, raw groans spilling from her lips. The pressure of his impending orgasm rose through him like a warning that it was going to be over soon. He wanted her to be in time with him, to see him through the storm that was coming. His mouth came down upon hers, his head tipping to intensify the contact. She grabbed his waist, arching and moaning into him.\n\n\"Lu,\" he hissed, still moving inside her. \"I'm close. Very close...\"\n\nShe whimpered in response, bringing a hand up to her mouth to bite her fingers. There were tiny beads of sweat on her brow, matching the perspiration that covered his torso. She felt it within herself, somewhere deep inside her core, but she didn't know if she could do it.\n\n\"Come on, Lu,\" he urged. \"Come with me, please.\"\n\n\"I can't,\" she sobbed, even as he felt her womb clenching around him. \"I...\"\n\nShe tried reaching a hand between her legs but Chris was too swift. He grabbed her wrists and pinned them against the bed.\n\n\"Don't you dare,\" he growled, eyes burning into hers. \"You can do it. Just focus.\"\n\n\"Please,\" she choked out a moan, closing her eyes. He plunged in deeper, his heated seed rising. With a few more hard thrusts, he slowly lost his grip on his control, the intensity of his passion too much to take anymore. She felt the tension grip him, teeth grinding as he fought it hard. He hissed, swelling inside her, then he shuddered, his hands clutching the sheets on either side of her head.\n\n\"Fuck!\" He felt it begin and it made him growl, his face contorting as he released inside her. She braced herself, the first thick spurt making her gasp and groan.\n\nThat was all it took. She felt it begin deep inside her, even as he kept coming, and soft sobs of pleasure started to spill from her mouth. Then it happened, her womb clenched desperately, wave after wave of pleasure that seemed like whiplashes of fire across her skin, rocking her to the core. Burying her face in the pillow, she cried, tears spilling from her eyes against her will.\n\nIt was only after he had emptied himself inside her and lifted his head that he saw the tears.\n\n\"Are you alright?\" he asked, his voice concerned as he took her face in his hands. \"I didn't hurt you, did I?\"\n\n\"No,\" she managed to answer. He rolled over and pulled her close to him, arms coming around her bare body. \"I'm sorry.\"\n\n\"For what?\"\n\n\"Poppy was watching.\"\n\nChris looked over his shoulder and found the cat standing at the doorway. When she found her staring, she turned around to walk away back to the TV. He couldn't help but chuckle.\n\n\"I'm the one who should be sorry,\" he said. \"It was kind of reckless.\"\n\n\"I liked it,\" she smiled, touching his cheek. Chris leaned in for a kiss, and time seemed to stop at that moment as she memorized the feel of his lips against hers. Being with him meant she could lose herself and savor the uninhibited raw desire she felt for him. She felt a slight tremor and pulled away to find his eyes moist. He was strong and virile, masculine in every sense of the word, but the tears exposed his tender and gentle nature.\n\n\"I won't say I love you,\" he whispered hoarsely. \"Not now. I know I love you, but I never want you to think those words hold any more power now, when we're naked and vulnerable like this, than when we're sitting at a restaurant or watching TV or when we're apart from each other.\"\n\nLuciana swallowed slowly, trying to not become all emotional. She squeezed her eyes shut when she felt his warm essence inside her, and although under any other circumstance -- or with any other man -- she'd be freaking out by now, with Chris next to her, she only felt the urge to do it all over again. Was it her biological clock? Or was she so in love with him that it made her brave enough to face anything?\n\nShe didn't know, but when she reached for the bedside table, she felt the heavy scrutiny of his gaze on her. When he saw her fish out the strip of Plan B from the drawer, he held her hand.\n\n\"Morning-after pill?\" he asked, his brow scrunching into a frown. \"Do you take it often?\"\n\n\"No,\" she lowered her gaze. \"I haven't been on birth control for a few months, considering I was single. I just happened to remember that I have this in my drawer.\"\n\n\"I have given you something to worry about now, haven't I?\" he sighed as a sad smile appeared on his lips. When Luciana remained silent, he tucked her hair behind her ear and kissed her head.\n\n\"Do you ever want kids?\" he gently asked. She shrugged.\n\n\"Cleo was my baby,\" she replied. \"And now I have Poppy.\" When she looked into his eyes, she felt like crying. \"I grew up in a foster home and my only family has always been Elijah. I know nothing about being a parent. Besides, I've always loved my career and my freedom. I thought having kids meant losing all of it.\"\n\n\"Luciana,\" he lifted her face up to his, his voice calm and soothing. \"I just want to assure you that if you did conceive, it would be our child, the fruit of our passion. I promise I will never stew over it or get mad at you. You know why? Because you're the one for me.\"\n\n\"I...am?\" she stared at his face in wonder.\n\n\"Yes.\" He pressed his lips to hers again, taking her with an intensity that scared her. She had never felt that way with anyone else, and it moved her to her soul. She held him tight, running her hands down his chest, unable to believe how strong he was.\n\n\"I'll let you take that,\" he said, pointing at the strip of pills that had dropped on the bed. She picked it up and put it on the bedside table, smiling shyly.\n\n\"Maybe later,\" she said, pulling him on top of herself. Chris got the cue, and pressed himself against her, hips grinding instinctively. Luciana arched her back, claiming his lips in a kiss that was hungry and insistent. He matched it with a passion that rivaled hers, opening her up, lapping at her tongue, making sure to leave her lips swollen. When she reached between them and grabbed his arousal, he had to bite his lip to prevent the low groan that almost spilled out of him.\n\n\"Are you sore?\" he asked in a husky murmur, positioning himself at her opening.\n\n\"A little,\" she replied.\n\n\"Good,\" he smirked. \"I'm going to make sure you're limping by tomorrow.\"\n\nAnd with that, he slid into her, Luciana's core still slick from their lovemaking a short while ago. She held on to him as he thrust slow and hard, filling her so deep she could feel him in her womb. She was too aroused, so was he. His hands stroked her breasts until they had peaked under his fingers, knees firmly planted in the mattress for support. He grabbed the headboard with one hand, her hips with the other, not bothering about restraining the noises and curses that escaped his lips.\n\nShe grabbed his shoulders, eyes wide open as her orgasm approached. Chris wasn't far behind, locking eyes with her as he felt his sac tighten with pressure. He bent low and claimed her mouth, and that was all it took her to go flying over the edge. She hid her face in the crook of his neck and whimpered, her whole body quivering. He rode her viciously until he was taking his release, the room filled with his harsh cry and ragged breathing.\n\nThey lay there in a mass of tangled limbs, hearts racing. Two minutes later, she stirred and raised herself on one elbow.\n\n\"You're exquisite,\" she said to him. \"Exquisite and precious.\"\n\n\"And yours,\" he added without opening his eyes. \"Never doubt it, Lu.\"\n\n\"Good,\" she smiled, resting her head on his chest. \"Because I'm besotted with you.\"\n\n---\n\nChapter 14\n\nLuciana watched Poppy from the kitchen as she made some coffee. She looked highly indecisive, not knowing if it was better to stay by the fire or curl up in Chris's lap or watch her human in the kitchen. She kept walking to the kitchen, then all the way back to Chris and then to the hearth, only to repeat the process again. Luciana couldn't help wondering if that was a little too much walking for a cat with a limp. When she gave her a little treat, she happily purred and lifted her tail high up, pressing her body against her leg.\n\nShe laughed, reaching down to stroke her fur. When the coffee was ready, she poured it in two mugs and walked over to the hearth. Chris looked meditative sitting on the rug across the wood burner, the warm flames giving his face a golden glow. He only had a dark blue bathrobe on him, a blanket casually thrown across his shoulders, hair loosely tied at the back and a few long locks fallen across his face. It seemed like he hadn't shaved in two days, but the stubble looked good on him.\n\nLuciana took a moment to stare at him, her mind darting back to the afternoon of passion they had shared a short while ago. They had then showered together and Luciana had taken a morning after pill. As happy as he made her, it would still be prudent to have protection.\n\nHe looked up when she appeared at his side with the coffee, Poppy going in circles before curling down in a ball next to the fire.\n\n\"Thank you,\" he said with a smile. \"I see you have already put up some Christmas decorations.\"\n\n\"Yes,\" she nodded, sitting next to him. \"Poppy and I went shopping for new toys the other day. I got her a reindeer headband and she doesn't seem to hate it.\" She giggled, sipping her coffee. \"I still have to put up the tree though, and I'm not sure if Poppy will like it. She toppled her cat tree today.\"\n\n\"She looks very happy with you,\" he observed, putting an arm around her shoulders. \"She isn't lonely anymore, just like you.\"\n\nLuciana nodded, looking down at the food on the rug. There were chicken and turkey sandwiches, fries, and puff pastries. \"You haven't eaten much,\" she said, putting a fry into her mouth. \"I thought you liked indoor picnics.\"\n\nChris smiled, picking up a sandwich and biting into it. Luciana did the same, and when Poppy came over to where the food was, she booped her nose, laughing.\n\n\"No...no, this isn't for you,\" she told her, stroking her head. \"You cannot be hungry. You ate ten minutes ago.\"\n\nChris couldn't help staring at her as she spoke to the cat in a sing-song voice. The fire cast its warm glow on her already radiant face, her eyes shimmering like the most precious emeralds on earth. When she bent low to whisper tender words to Poppy, her hair fell across her face, flowing over her shoulders and spilling on to the front of her shirt. Almost involuntarily, he reached a hand to brush the hair back from her shoulders, just so he could gaze at her face again. He had never seen her so relaxed.\n\n\"Luciana?\" he finally said. \"Do you regret what happened between us?\"\n\n\"No,\" she said calmly, putting her head down on his broad shoulder. \"Do you?\"\n\n\"Not at all,\" he replied, tearing his gaze from the fire to look at her. \"I have a lot of regrets in life but not this. Not you. I will never regret anything that has happened between us.\"\n\n\"We had it coming, didn't we?\" she smiled wistfully. \"Ever since our paths crossed.\"\n\nChris held her hands, entwining fingers with her. \"I've wanted you ever since that day in the clinic, when your hand closed around mine while you were unconscious,\" he said, eyes locked with her. \"You didn't want to let go.\"\n\nShe raised herself slightly to be able to press a kiss on to his lips. His eyes dropped close, reveling in the sensations she caused in him. His hand rested below her ear, his thumb caressing her cheek as their breaths mingled.\n\n\"I don't want to let go,\" she whispered, their faces so close that their noses touched. \"Ever.\"\n\nChris kissed her again, pulling her into an embrace. He stroked her hair with one hand while the other caressed Poppy, who was trying to taste some of the food. He picked her up and set her on his lap, chuckling. Luciana nuzzled his neck, looking up at him with eyes full of love.\n\n\"Did you mean what you said earlier?\" she asked with hesitation. \"About having children?\"\n\n\"Of course I did.\" When he looked at her, he seemed slightly wounded. \"You think I didn't?\"\n\nShe bit her bottom lip, her gaze low. \"I don't know,\" she confessed. \"I've never met a man so secure like you. You're calm about everything.\"\n\n\"I'm 36, Lu,\" he said, lazily stroking Poppy. \"By this age my father already had two children.\"\n\n\"Did your ex-wife want kids?\"\n\n\"She never talked about it,\" he shrugged. \"I'm a family guy, maybe I would have wanted children some time. But then the sex grew unenthusiastic, and I found out she was having an affair...which means she did like sex, just not with me.\"\n\n\"I'm sorry,\" she murmured, reaching for his hand. \"We don't have to talk about it.\"\n\n\"Does it make you uncomfortable?\"\n\nWhen she remained silent, he smiled knowingly. \"It wasn't like this with her,\" he admitted. \"I've never felt so strongly for anyone as I do for you.\"\n\nHe lifted her face up to his, smiling tenderly. \"If Poppy is your gift, then you are mine,\" he whispered earnestly. \"And if you told me you were with child as a result of what just happened, my first reaction would be joy. I mean it in all seriousness.\"\n\n\"You make it sound so simple,\" she murmured, unable to help the lump in her throat. She had never known a man could talk like that and move her to tears without lifting a finger. The deep rumble of his voice seemed to make every word of his more real, more earnest.\n\n\"It is simple,\" he nodded. \"Besides, I have a lot of experience with puppies and kittens.\"\n\nDespite the tension, Luciana laughed. She swallowed slowly and picked up her coffee, her hands trembling slightly. Chris pulled her close and kissed her, leisurely exploring her neck and collarbone before rising to meet her lips again. She ran her hands over his arms, feeling the strength in them, and when he buried his fingers in her hair, she shivered, finally realizing what she had been missing so long.\n\n\"How did you know my address?\" she asked after a while. \"I don't remember telling you.\"\n\n\"That's how you are,\" he teased. \"You invite me to come over but don't provide the address.\"\n\nShe slapped his arm playfully, laughing. \"I did provide my ID at the hospital,\" she thought aloud. Chris snorted.\n\n\"Are you kidding me?\" he asked. \"You really think I would dig through the hospital files for your address?\"\n\n\"Then?\"\n\n\"Your brother gave me your card.\"\n\nLuciana's eyes widened. \"He...did?\"\n\nHe nodded. \"We talked for a bit over coffee. He thanked me for Poppy and for helping you get better.\"\n\n\"That doesn't sound like my brother,\" she murmured to herself.\n\n\"I know. But he seemed...lonely.\" He hesitated before saying the next words. \"He asked me to not make the mistake he did.\"\n\nLuciana frowned while sipping on her coffee. \"What mistake?\"\n\n\"I'm not sure, but from what you told me, my guess is he meant letting go of the one he loved.\"\n\n\"Really?\" she snorted. \"He thinks he made a mistake?\" Taking another sip of coffee, she leaned back in his arms. \"He was an arrogant fool. If he still loved her, why didn't he get back touch with her?\"\n\n\"He's trying to live vicariously through you,\" he said, a gentle hand absently stroking the side of her neck. \"Perhaps, he wants you to have what he couldn't.\"\n\n\"It's pointless repenting now,\" she sighed, looking at his face. \"Would you like to eat anymore?\" she asked, motioning at the food.\n\n\"I'm not very hungry at the moment,\" he replied. Luciana nodded, picking up the food and walking back to the kitchen. It was getting late and Poppy looked too tired to follow her. When she returned, she picked up the coffee mugs and placed them on the table, before putting a few more logs in the wood burner. Then in one swift move, she undid her nightshirt and let it fall to the floor.\n\nChris stared at her naked form, glowing like a golden goddess in the warm halo of the fire. She kneeled on the rug and crawled up to him with cat-like mischief in her eyes, a quiet smile tugging at her lips. She pressed her body against his, undoing the belt of his robe and pushing it off his shoulders. He sought her lips as her hand crept into his hair and let it loose.\n\nHe struggled to catch his breath as he laid her on her back and hovered over her body, wondering how he managed to find her. He had spent three years of his life blaming himself for being a bad spouse, staying away from relationships and a chance at love again. But not with her. With Luciana, he wanted to do everything right. He wanted to give her the best.",
        "\"What's wrong?\" she asked, staring at his face. \"Don't you want it?\"\n\n\"Of course I want it,\" he chuckled, claiming her lips again. Their fingers entwined as the kiss deepened, the crackling of the fire filling up an otherwise quiet room. Poppy was back in her basket, and after staring at them for a moment, she decided to go back to sleep.\n\n\"It's been a fantasy of mine,\" she said shyly when they pulled apart. \"To make love in front of the fire.\"\n\n\"Really?\" he tilted his head to a side, humor in his voice. \"Well, it's my pleasure to make all your fantasies come true, milady.\"\n\nShe giggled breathlessly, arching into him. \"Take me,\" she hissed. \"Make me yours.\"\n\nAnd so he did. Pushing a small inch inside her, he realized how wet she already was. Without further ado, he filled her to the hilt, biting his lips to prevent the noises that were threatening to spill out of his mouth. Luciana's lips parted in a noiseless wail, her eyes squeezing shut. He was riveted by her; even if he made love to her every single moment of his life, it wouldn't quench his hunger. He wanted to take it slow, but if she continued to writhe under him, he would most certainly lose his mind.\n\n\"Oh...gosh...\" he gritted out, his jaw clenched. \"You feel like a velvet glove...hot and snug.\"\n\nShe had no response, not when she was burning hot beneath him and around him, all fears, sorrows and anguish melting away. And when he bent low to press a soft kiss to her lips, she felt devastated by his tenderness in the face of fierce desire.\n\nHis movements were fluid, slow but hard, every stroke hitting her womb. She clawed at his back, pulling him closer. He pressed his cheek against hers, perspiration drenching their skin. Her moans and his strained noises filled the small room.\n\nTheir mouths locked in a ferocious kiss. He opened her wider, lunging deep and hard within her, making her cry out in pain and pleasure.\n\n\"I'm too close,\" he panted without slowing down. \"Oh...\"\n\n\"Come in me,\" she hissed. He faltered for a second, staring down at her face.\n\n\"What?\" he breathed. She didn't have to ask; he would gratify her with his release anyway. But hearing those libidinous words was like adding kerosene to an already raging fire.\n\n\"Come in me,\" she repeated, opening her eyes to lock them with him. \"I want to feel you inside me.\"\n\n\"You will,\" he promised, squeezing his eyes shut when he felt it begin. He cried out, grabbing fistfuls of the rug as he continued to rock his hips and thrust inside her. She whimpered, the hot wetness inside her too much to take. Her release took over her like a clap of lightning, making a trembling cry erupt from her throat. Her body quaked and jerked as he kept coming, flooding her with his love and joy in a release so overwhelming, he knew he would never be the same again.\n\nBut he didn't cease or grow soft. For a small second, he pulled out of her, only to flip her over and take her again. His strong body pinned her to the rug, so that nothing impeded his arousal from her depths.\n\n\"Chris!\" she screamed, one hand reaching behind to grab his hard, muscular thigh. \"I can't come again.\"\n\n\"I'm going to make you, sweetie,\" he grunted, thrusting relentlessly now, already swelling and getting close again. She felt dizzy with pleasure, the tension pooling in as she pushed back into him every time his tight and hard sac slapped against her. She had come only a few seconds ago, but the storm was gathering again, threatening to overpower her. When he bent over to claim her mouth, she felt the muscles of his chest rubbing against her back, his knees holding her in place.\n\n\"Are you ready?\" he whispered into her ear, his voice husky, decadent and lascivious. \"Can you feel it approaching again?\"\n\nShe whined, unable to take the tension anymore. \"You're driving me crazy,\" she whimpered, using her elbows to support her body. \"You're...oh...you're so strong...so virile... Ah!\"\n\n\"I did promise you would be limping by tomorrow,\" he laughed gruffly against her shoulder, his thrusts speeding up. \"And I always deliver what I promise.\"\n\nHe tightly grabbed her hips and closed his eyes, his hair all over his face as he felt it begin. He knew she was close too from the way she clenched around him. His face contorted on its own accord as he neared his release, thrusting viciously into her. Before he knew it, she was letting it go, gasping, crying, her back arching, her trembles tightening around his shaft until it became impossible to stop or withdraw.\n\nChris swore and cursed, and came with a tortured groan. Luciana could only grasp the rug and let the pleasure overcome her as he filled her again, sweeping away even the slightest morsel of reservation she had about him.\n\nThey didn't know how long they lay there shattered, eyes closed and breaths coming in short pants. Afterwards, Chris found her hand and locked fingers, kissing the back of her palm. He had never felt like that\u2014 not as a hormonal teenager, not when he was into dating, not even with his former spouse. It wasn't the adrenaline rush or the endorphins, nor was it their nakedness or their physical intimacy. It was the feeling of being complete, of finally finding fulfilment. The knowledge that he did make a woman happy.\n\n\"I love you, Dr. Christopher Benson.\" The words left Luciana's lips fervently, even as she opened her eyes to look at him. \"I wonder if love feels like this for everyone.\"\n\n\"I don't know, but I'm glad I have your affection.\" He turned his face to look at her, smiling quietly. \"Because I love you too, Luciana Russo.\"\n\n---\n\nThe next morning, Luciana was woken up by the hungry cries of Poppy. Even without opening her eyes, she could feel paws and little claws all over her, punctuated with a loud, shrill meow. She smiled to herself, reaching a hand out to stroke her. Poppy licked her hand and then started to slap her face, her cries getting louder. For a calm, mellow cat, she could be incredibly loud when she wanted to.\n\nLuciana finally opened her eyes, only to find herself still next to the fireplace, one strong arm around her. The fire had died, but the heating system had kept the room warm. It was a little after seven, although the room was mostly dark because the sun was nowhere yet. She looked down at herself, suddenly embarrassed about being naked. Chris was fast asleep, looking right at home on the rug they had successfully managed to ruin with their bodily juices the previous night.\n\nBodily juices. The thought made her giggle to herself. She carefully removed herself from his arms, realizing all over again how heavy he was and how soft his skin was, and rose to her feet. Picking up her nightshirt from the floor, she headed towards the kitchen. Poppy followed her, eagerly awaiting breakfast time.\n\n\"I know, I know,\" she laughed when Poppy pressed herself against her legs, her tail upright as she meowed relentlessly. \"I can't understand how cats can be so hungry all the time,\" she said as she poured some gourmet p\u00e2t\u00e9 into her bowl. \"But I think it's cute.\"\n\nShe put the bowl on the floor and Poppy was at it in a second. Luciana stroked her fur and dropped a kiss on to her head, before returning to the sitting room, where Chris showed no sign of waking up. She stretched her arms, feeling every muscle of her body protesting after the workout they got in one day. The sound of Poppy's loud munching and slurping floated into her ears, even as she stared at his sleeping face, unable to believe how passionate they had been the whole day. When the memories came back to mind, she folded her arms around her belly to prevent the liquid heat from getting the best of her.\n\nLuciana showered and got dressed, all the while being watched by Poppy. She talked to her while brushing her hair in front of the mirror, and the cat simply stared at her as if she had grown two heads. When she returned to the sitting room, Chris was just starting to stir and Poppy scrambled down from her arms to toddle over to him. He sleepily smiled at her, allowing her to sit next to him and groom his hair.\n\n\"You showered without me?\" he asked when he saw Luciana standing a little away from him, a wicked smile on her lips. \"You look clean while I'm still on the floor.\"\n\n\"I have a client to meet at ten,\" she said, coming over to him when he sat up. Poppy climbed over his shoulder and continued to lick his hair. \"I have made coffee. You can help yourself.\"\n\n\"You work on Sunday?\"\n\n\"No, but I meet clients sometimes.\" She leaned in to kiss his cheek. \"Did you sleep well?\"\n\n\"Like a log.\" Chris picked up Poppy from his shoulder and held her in his arms. \"Does she sleep in your bed?\"\n\n\"Sometimes.\" She stroked her belly, making her yawn. \"I think she loves her yellow blanket a little too much to sleep in my bed all the time.\"\n\n\"Is that your comfort blanket?\" he asked the cat, laughing when she licked his nose. \"Or more like a security blanket.\"\n\nLuciana chuckled, attempting to rise from the floor. But Chris tugged at her hand, making her fall back on the rug. He leaned in and claimed her lips in a searing kiss, his hand tantalizingly running down her body. She closed her eyes, trying her best to not give in to him.\n\n\"Would you like me to make breakfast?\" he asked between raining kisses on her. \"I can make a perfect English fry-up in a matter of minutes.\"\n\n\"Really?\" she gawked at him. \"Oh...I...\"\n\n\"You wouldn't like it?\"\n\n\"I think I do have eggs, bacon, sausages and bread,\" she answered. Chris grinned.\n\n\"Brilliant,\" he said, pulling himself to his feet. \"I can make breakfast first, and then shower while you're meeting your client. I'm very hungry.\"\n\n\"Me too,\" she said, linking a hand with him. \"I'm glad you're here.\"\n\n\"Hey, I was just acting on your invitation to visit you,\" he joked as they walked to the kitchen. \"It was too tantalizing to resist.\"\n\nLuciana giggled, even as he pulled her close and kissed her again. True to what he had said, it took him under ten minutes to rustle up breakfast. He sang and danced and swirled around while he cooked, reminding her of the way he mowed his lawn. From eggs on toast to sausages and bacon to fried tomatoes, it was a big meal for two. When Poppy begged loudly, Chris indulged her with a small piece of bacon. Luciana was certain he'd soon become her favorite person.\n\nTheir breakfast was punctuated with snogging and playing footsie and loud, relentless cries from Poppy. Luciana was forced to turn on the TV to distract her from the food. She wore a long t-shirt and a pair of jeans but Chris was shirtless, his chiseled body constantly serving as a reminder to what they had been doing only a few hours ago. When the thought made her blush, Chris leaned in to kiss her neck, and she had to muster every ounce of control to stop herself from dragging him to the bedroom again.\n\nHe was as happy to have come to see her as she was about having him at her house. She hadn't shared that kind of intimacy with any of her past boyfriends, even if they did have sex. Having Chris next to her made her realize that it wasn't about the sex\u2014 it was about compatibility, friendship, and having that connection with the other person. She had felt that connection with him since the very beginning, even when he was trying to help her move on from Cleo's death.\n\nAfter breakfast, they did the dishes together while Chris cracked some very bad jokes and tried to get her to dance with him. It was the doorbell of her office downstairs that jerked them apart. Poppy was already alert, leading the way even before Luciana had moved. She wiped her hands on the towel, gave him a quick kiss and made her way downstairs.\n\nWhen she opened the door, the sight of the blonde woman almost blew her away. She was beautiful with her long curls, blue eyes so radiant even with the fine lines around them. She'd be around 40, clad in a winter coat and a pair of boot-cut jeans, a stylish purse dangling from the crook of her arm.\n\n\"Sorry, am I early?\" she asked politely. Luciana stared at her face, trying to remember where she had seen her before that day. Her memory betrayed her but the eerie familiarity of that face almost made her uncomfortable.\n\n\"Who are you?\" she asked cautiously. The woman stared for a moment before breaking into a hesitant smile.\n\nLuciana's mouth fell open. She couldn't believe her eyes... Was she dreaming?\n\n\"No!\" she gasped breathlessly. \"Michelle?\"\n\nWhen realization dawned on her, Luciana threw herself into her arms and burst into tears.\n\n---\n\nChapter 15\n\nLuciana's heart refused to slow down. She sat on the couch with her hands gathered in her lap, her body trembling. Chris had just come out of the shower, his wet hair pushed back and smelling like her shampoo. She had also put out a spare toothbrush for him. As he walked into the kitchen to make a fresh batch of coffee, he wondered whether to focus on Poppy, who was sunbathing next to the window in the living room, or Luciana, or the woman who was now seated on the couch looking uncomfortable.\n\nIf she was really Elijah's former girlfriend, then Chris believed he indeed had been a fool to let her go. She wasn't only elegant but also had a beguiling composure around her. He could picture her being the steady companion next to Elijah, taking care of him, keeping everything together, much like Frida had done for their family. He didn't know why she reminded him of his mother when she was younger.\n\nEven as Luciana sat there being too shocked to speak, she gently took her hands in her own and tried to calm her down. Before long, she was hugging her again, this time her body trembling from the sobs.\n\n\"Where were you?\" she asked brokenly through the tears. \"Do you know how much I missed you all these years?\"\n\nMichelle stroked her hair, looking almost motherly in her affection towards her. Chris didn't know what it would be like to grow up without parents, particularly for a girl to grow up without a mother. He had once heard Frida talking about the times a girl needed her mom\u2014 from her first period to her first relationship to her first broken heart. As he stared at the coffee maker, he couldn't help wondering how Luciana had gone through those big changes in life without a female figure to confide in. He knew she had a foster mother for a few years but that was far from enough.\n\n\"You have to calm down first,\" Michelle said to her, cupping her face and wiping the tears from her cheeks with her thumbs. \"There's nothing to be so upset about.\"\n\n\"What do you mean?\" she screeched, her arms dropping to her sides. \"Elijah lied to me. He told me he doesn't remember when he last saw you, that you didn't mean anything to him, and that he didn't go to the 20-year high school reunion.\" She slumped back in the couch and gazed at the floor. \"I cannot believe he met you two years ago but did nothing about it. And most importantly, he didn't tell me.\"\n\n\"He barely looked at me,\" she explained, appearing slightly miserable. \"We are nothing, Luciana. Not even friends.\"\n\nWhen Chris came out of the kitchen with three mugs of coffee on a tray, she eyed him curiously. He courteously put the tray on the center table and Luciana proceeded to hand Michelle her coffee.\n\n\"Thanks,\" Luciana murmured, briefly glancing at him. Michelle looked between them and smiled quietly.\n\n\"Is he your husband?\" she asked. The question almost threw Luciana off the couch.\n\n\"No,\" she replied, a deep blush entering her cheeks. \"He's Dr. Chris Benson, my friend.\"\n\n\"Nice to meet you finally,\" he held out a hand with a smile. \"I've heard about you.\"\n\n\"Oh, really?\" she seemed surprised as she shook his hand. Then she nudged her with an elbow. \"You told your boyfriend about me?\" she whispered to her.\n\nLuciana was too embarrassed to reply, but that little exchange made them look like the best girl buddies sharing some good-natured banter. Chris stepped away from the couch, reaching down to pat Poppy on the head when she came to sniff the coffee.\n\n\"That's my cat Poppy,\" Luciana told her. \"Be careful, she likes to dip her paw in coffee.\"\n\n\"Does she?\" Michelle laughed, holding out her hand to her. \"She's adorable, though. Does she have a limp?\"\n\n\"Yes, she has a bad leg,\" Chris filled in. \"But that doesn't stop her from anything.\"\n\n\"As it shouldn't,\" Michelle smiled when Poppy licked her hand, and then reached over to gently stroke her head. Afterwards, she put an arm around Luciana's shoulders, staring at her face. \"You're so pretty,\" she said, holding a finger under her chin. \"I remember you always had gorgeous hair.... It's strange to see you like this... all grownup.\"\n\nLuciana nodded in response to her kind words. \"What do you do?\"\n\n\"I'm a teacher,\" she replied. When Luciana looked at her with wide eyes, she smiled. \"Yes, I know, it's hard to imagine me as a teacher. But I knew I didn't want to be a lawyer. I love teaching kids, doing it now for 15 years.\"\n\n\"You did well in school. You would help Elijah and me with our homework, wouldn't you?\" She paused, hesitant to say the next words. \"Are you... married?\"\n\nMichelle shook her head. \"I thought Elijah had married,\" she said, her face turning sad for a moment. \"What woman wouldn't want to have him?\"\n\nShe looked away and gazed at the carpet. \"I think about those days almost every day,\" she said. \"Remember one Christmas when I got you and Elijah presents with the allowance money I'd been able to scrape together? You answered the door in your pajamas and it made me sad when I saw there was no decoration at all, except a bit of tinsel here and there, and a small plastic Christmas tree on a table in the corner...\"\n\nShe took Luciana's hand and held it in her lap. \"When I gave him the CD, he looked so surprised because no one gave him gifts,\" she continued, \"I had circled one song on that CD, a song that your mom used to play. You peered at it curiously, so Elijah went to the bedroom and played the song. I remember you sitting on the bed, knees bunched up to your chest, watching the stereo earnestly. You said it was sad and went away to watch TV. He told me you didn't remember your mom playing that song because you'd been too little, and that it was better that way. That was the first time he'd spoken so openly about his family... He'd said that he and his brother Thomas shared a room, but because he had a cold he was sleeping in the other room. If he'd been in with him...\"\n\n\"It wasn't his fault,\" Luciana said.\n\n\"That's what I told him. And you know what he said? That he'd never let anything happen to you. That he'd never loved anyone like he loved you.\"\n\nPausing, she wiped a tear from the corner of her eye. \"I told him that I'd never loved anyone like I loved him,\" she continued, her voice turning throaty. \"I promised to keep him safe. He said that I couldn't, but that he still loved me for trying.\"\n\nLuciana wanted to tell her that Elijah still treasured that CD, but instead she only held her hand. Poppy had left the couch and walked over to the window, curling up in the pool of sunshine flooding the room.\n\n\"So you only came to see me?\" she asked, sipping her coffee. \"There isn't a project you want to discuss?\"\n\n\"There is,\" Michelle answered, taking a swig of her own coffee. \"I just moved back to Chicago a couple of months ago, and have been looking after my parents' house after mom died\u2014\"\n\n\"Wait...what?\" Luciana cut in. \"Your mother's gone?\"\n\nMichelle nodded quietly. \"My dad passed away five years ago, and mom this year,\" she sighed. \"They left the house to me so I've been living there again after moving from Minnesota. It needs repair and some serious remodeling.\"\n\n\"You mean the house Elijah used to visit years ago is my new project?\" she raised her eyebrows. Michelle stared at her face for a moment, before lowering her gaze.\n\n\"I understand if you don't want to do it,\" she said hesitantly. \"If Elijah finds out\u2014\"",
        "\"What does he have to do with it?\" Luciana asked. Chris was standing at a distance, drinking his coffee and watching the conversation unfold with great curiosity.\n\n\"He doesn't want to have anything to do with me anymore,\" she asserted. \"I don't want to strain your relationship with your brother.\"\n\n\"Well, then you shouldn't have come to me.\" She gave her a knowing look. \"I know you're here because you still love him. Otherwise, there were thousands of other interior designers you could choose.\"\n\n\"Look, I\u2014\"\n\n\"It's okay, because he still loves you too.\"\n\n\"He doesn't,\" she shook her head, her face turning despondent. \"If he did, he wouldn't have let me go.\"\n\n\"Really?\" she snorted. \"Or did he do it because your parents were making life difficult for you?\"\n\nMichelle didn't offer a reply. Chris decided to add his two cents to the conversation.\n\n\"Go easy on her, Lu,\" he said with a soft smile. \"The memories are probably as heartbreaking for her as they are for you. I've gone through a broken relationship and I understand how tough it can be to shake off the feelings.\"\n\n\"Yes, but when Elijah is being an arrogant fool, he should be shown his place,\" she argued. \"He maintains that he stopped loving her long ago but still cherishes her picture and her gifts and listens to the CD when there's no one around. It\u2014\"\n\n\"What?\" Michelle spoke up, her face an expression of shock. \"What did you say?\"\n\nLuciana sighed, suddenly looking exhausted. \"He's too much of a stoic, Michelle. He doesn't admit his feelings but pines for you in secret. He's lonely. Believe me, I've seen it.\"\n\n<br >She grabbed her hands and held them in her lap, her eyes welling up. \"You have no idea how happy it makes me to have you back,\" she said. \"I was so fond of you... I thought I would see you even after going to foster care. But Elijah would always visit me alone. It was much later that I learned you broke up.\"\n\n\"I don't blame him for anything,\" she sighed. \"I hated the way my parents treated him but could do nothing.\"\n\nWhen she looked at Luciana, her eyes were moist. \"He's the only person who ever made me happy,\" she said brokenly. \"I was homeschooled for 16 years and grew up out of the touch with the world outside. When Elijah came into my life, it signaled a big change. I remember he had tried to resist me in the beginning, snapped at me for being too kind, but both of us were looking for the same thing\u2014 someone to love, someone who made us happy.\"\n\nShe looked between Luciana and Chris and broke into a wistful smile. \"Just how happy the two of you look together,\" she said. \"I barely know anything about your lives but I see it in your eyes, the love you have for each other and the joy it brings you.\"\n\nAn arm came around her shoulders when Luciana blushed furiously. \"How long have you been together?\" she asked fondly, directing the question at both of them. Chris and Luciana exchanged a glance, wondering if they should reveal that they just consummated their relationship twenty-four hours ago.\n\n\"Not long at all,\" she finally replied, \"But we have known each other for a while. He's Elijah's neighbor.\"\n\n\"Oh,\" she smiled warmly, nudging her again. \"You make an adorable couple.\"\n\nChris let out an embarrassed chuckle even as Luciana's face flamed with embarrassment. She then looked at Michelle again.\n\n\"Come celebrate Thanksgiving with us,\" she implored. \"You are in Chicago now, so it shouldn't be a problem.\"\n\n\"Are you crazy?\" she exclaimed. \"If our paths crossing at the reunion was anything to go by, he will not be happy to see me.\"\n\n\"Do you still love him?\"\n\n\"Luciana...\"\n\n\"Do you?\"\n\nMichelle sank back in the couch and crossed her arms against her chest, looking exasperated. Luciana glanced at Chris and back at her, staring at her face for a reply. When she didn't get one, she smiled, perfectly reading her silence.\n\n\"I see it on your face,\" Luciana gently patted her knee. \"I'm highly intuitive. You cannot hide from me.\"\n\n\"Why did he treat me like a stranger when we met?\" she croaked, trying and failing to hold back the tears. \"He gave me the cold shoulder, like I was a different person.\"\n\n\"I'm going to make everything alright,\" she reassured her. \"Now that I've found you again, I will not let you go. Not when I know you still love my brother.\"\n\nThey were interrupted by Poppy, who had left the window again and come up to Luciana, meowing loudly. She hopped on to her lap and started to knead, her little claws certainly leaving holes in her jeans. Chris came forward.\n\n\"What's wrong with her?\" he asked, concerned.\n\n\"I usually give her a little treat at this time,\" she laughed, stroking her head. Chris picked her up from her lap, chuckling.\n\n\"I can do that,\" he announced. \"Where are the treats?\"\n\nLuciana rolled her eyes. \"In the kitchen, with her other food. No more than two kibbles, alright?\"\n\n\"You're talking to a vet, honey,\" he smirked, putting down Poppy on the floor as he walked back to the kitchen. A moment later, he returned with two kibbles in his hand, and the cat eagerly lapped it up. Chris then asked her to have a drink of water, and much to their surprise, Poppy walked over to her fountain and took a few licks.\n\nMichelle laughed. \"I feel so proud of you, Lu,\" she said. \"You turned out just as your brother hoped you would.\"\n\nLuciana pulled her into a hug, closing her eyes when tears clouded her vision again. She felt Michelle's arms gently stroking her back, in a maternal affection she had never known.\n\n\"Please tell me you will come to my Thanksgiving party,\" she said, her voice throaty. \"Please?\"\n\nShe felt a deep sigh against her shoulder, followed by the faintest nod. The arms around her tightened.\n\n\"Alright,\" she relented. \"I will do it for you.\"\n\n---\n\nThanksgiving wasn't Luciana's favorite holiday. It was an American thing, and she often wondered why other countries didn't have it. Either they were perpetually thankful or strangers to the very concept. She wasn't even fond of eating turkey, which was something that most others looked forward to the whole year (except, of course, if they were the turkey).\n\nBut it was the only occasion when Elijah had time to stay home for half a day and enjoy a big, home-cooked meal. Her job was to take care of the cooking, while his job was to buy the turkey, put it in and take it out of the oven. Most year, Matt and Kyle would join them, with Matt's famous pumpkin pie.\n\nThis year was different, though. Instead of going over to Elijah's house, she asked him to come to her apartment, to which he obliged. Luciana had installed screen doors to the kitchen again, to prevent Poppy from entering the place while she cooked. Now that she could not enter the kitchen to supervise her cooking, she would sit outside the screen doors and meow relentlessly. Unlike Cleo, she had not tried to claw at it yet. Luciana knew it was only a matter of time.\n\nChris had gone home on Sunday evening, but not before they had made love twice more. He wouldn't be able to come to her house on Thursday because he usually celebrated Thanksgiving with his parents and brother, but he did promise to spend the weekend with her. He had been slightly concerned about what she planned to do with Michelle and Elijah, but she had assured him that no one knew her brother better than she did. Elijah could be the tough guy for everyone else but not with Luciana. She could see right through him.\n\nOn Thursday morning, Matt came to her apartment to help her with the cooking. He was a tall, somewhat out-of-shape guy with curly brown hair and blue eyes, dimples appearing in his cheeks like punctuation marks. He also had a peculiar sense of humor, often bordering on sarcasm. When a friend had asked him for advice on how to get over someone, he had said, \"If they are upright, use a trampoline. If they are lying down, just step over.\" His partner Kyle was a fashion photographer, working with some of the top brands in the country. Sandy-haired, lean and muscular, he was everything Matt was not. Highly extroverted, loquacious, and affable, he seemed to balance out the quiet, introverted and often detached personality of Matt.\n\nElijah had come early, armed with the biggest turkey he could find as well as an adorable pumpkin shaped sweater for Poppy. Kyle had put the dogs behind a child door, but even without it, they were friendly towards Poppy, having grown up with a cat. Cleo had been older than all of them combined, so although they realized Poppy was a different cat, they extended the same generosity towards her. Later, after putting the turkey in the oven, Elijah left for some errands, and Kyle decided to help Matt with the pie.\n\nThirty minutes after Elijah had gone, Michelle arrived. Matt knew all about her, but when he finally got to see her in person, he pulled Luciana to a corner and whispered, \"So she's the one Elijah lost his virginity to?\"\n\nBefore she could ask him to shut up, Kyle whispered back, \"And vice-versa.\"\n\nLuciana asked both of them to remain silent and walked back to the living room, where Michelle smiled at her.\n\n\"You look gorgeous,\" she said, admiring her dress and the messy French twist she had turned her hair into. Luciana smiled back gratefully, unable to help wondering why a woman like her would wait for someone like Elijah all her life and waste her youth. She also wondered if she'd had flings like her brother, extending no further than the bedroom.\n\nShe introduced her to Matt and Kyle and the dogs, and directed her towards the big bowl of salsa and chips they had been eating to hold them off until dinner. Matt stared at the situation for a little while, before shaking his head.\n\n\"I don't know what you're planning to do,\" he said to Luciana, \"But this is going to get very awkward once Elijah arrives.\"\n\n\"We're here to watch the fun, aren't we?\" Kyle chuckled, mashing the boiled potatoes. Matt gave him a look, indicating he was genuinely concerned about what was going to happen. Everyone knew Elijah had a torrid temper sometimes, and they hoped it wouldn't spoil their Thanksgiving meal.\n\nLuciana, on the other hand, knew what she was doing.\n\nMichelle visibly tensed up when they heard Elijah's car, and Luciana stood at the door of the kitchen to see what he did. When he entered the room and saw Michelle, he looked surprise, a small frown appearing on his brow. Luciana could see the fear in her eyes as they stared at each other.\n\n\"What are you doing here?\" he demanded.\n\n\"I invited her,\" Luciana replied, arms crossed against her chest. \"She's my new client.\"\n\n\"Oh,\" he snorted, taking a few steps back. \"So you realized that the best way to me was through my sister, huh?\"\n\n\"Why didn't you tell me you were in touch with her?\" she asked firmly. \"And why exactly did you lie about going to the high school reunion?\"\n\n\"I didn't. I went to hand over a check to the principal.\" He narrowed his eyes at Luciana. \"You thought I went to the party?\"\n\n\"You met her there, didn't you?\" she motioned at Michelle.\n\n\"We met in the parking lot,\" he shrugged. \"We exchanged a few words.\"\n\n\"Elijah, you do know who you're talking about, right?\"\n\n\"Of course I do. She's the girl I was once in love with, whose rich parents were arrogant snobs and didn't want poor grandkids.\"\n\nMichelle visibly flinched when she heard those words, her face lowering as her eyes met the floor. She put down the coffee mug on the table and rose from the chair.\n\n\"Do you really have to keep reminding me?\" she said, the hurt visible in her voice. \"I was young, I didn't know what to do...\"\n\n\"Why didn't you tell me anything?\" Luciana asked her brother. He shrugged again.\n\n\"What was there to say? Do I tell you about everyone I happen to run into?\"\n\n\"She isn't everyone, for god's sake!\" she screeched. \"She's the one girl you ever truly loved.\"\n\n\"That was years ago,\" he said. \"She's nothing more than a familiar face to me anymore.\"\n\n\"You were the one who left,\" Luciana reminded him. \"You didn't stick around to help her fight her parents.\"\n\n\"Fight for what?\" He inched closer to Michelle, staring at her face and pacing around her as he spoke. \"The guy with no family, no money and no social status?\" He let out a dry laugh. \"Besides, hadn't they threatened to report to the police about me if I continued seeing her? I wanted to join the police, I needed to have a clean record.\"\n\n\"I wanted us to elope,\" Michelle murmured, her gaze still low, her chest rising and falling to the rhythm of the sharp, quick breaths. Elijah laughed again, going around her in circles.\n\n\"Right. And have me arrested and thrown behind bars.\" He stopped, his eyes locked on her face. \"You were timid, do you know that? You had seen nothing of the world for the first 16 years of your life, had no idea what suffering was or what it was like to grow up without a home or a family. Your parents had all the money in the world and held high social status, so why did they send their daughter to a public school? They could've sent you to an elite, private academy where you wouldn't meet someone like me.\"\n\n\"Elijah...\" Luciana tried to break in, knowing he was tormenting Michelle, but he held up a hand to stop her.\n\n\"I didn't deserve what they said or did to me,\" he continued. \"I tried to help you. It would break my heart that you were being beaten up because of me. I wanted you to complain to the police and I'd support you. But you didn't. You were scared, faint-hearted.\"\n\n\"My parents had friends in high places, Elijah,\" Michelle was now in tears. \"They could buy out everyone. The police wouldn't believe me once they spoke to my parents.\"\n\nHe sighed, looking away. \"They locked you up in your room when they found out we were in a relationship,\" he said quietly, his eyes closed. \"You left me with no choice, Michelle. The only way to save you from any further torture was to let you go. It still stings when I think about it.\"\n\n\"You left her and never had to deal with her parents again,\" Luciana finally spoke. \"But she had to keep living with them. Didn't she suffer more than you did?\"\n\nA wry smile appeared at the corner of his lips. Luciana stared at his face, surprised at how sad he suddenly looked.\n\n\"I wanted to marry her when I got a real job,\" he said wistfully. \"I know we were young and clueless, but if there was anything in life I could be sure about after the fire, it was us. I'd met girls before her, but she was everything I ever wanted.\" He started to go around her again, hands firmly lodged in his pockets, shoes tapping on the floor with every step. \"No one had been so loving towards me since mom died. It almost made me want to cry. She did my homework if I was busy at the garage and always saved her lunch for me, so much so that her parents began to wonder why she was losing weight.\"\n\nMichelle squeezed her eyes shut, tears raining down her cheeks. Luciana exchanged glances with Matt and Kyle, uncomfortable but still wanting Elijah to go on. She hadn't had any idea that Michelle had been abused by her parents or that he had tried to help her but failed. He wasn't the kind of person who would let something go without a fight. It somehow made more sense now. He didn't fight for the love of his life because he had wanted to protect her.\n\nElijah grabbed her arms and forced her to look him in the eye. Luciana almost wanted to stop him before he lost his temper and ended up hurting her. Michelle didn't struggle. Even as he held her close, she seemed slightly dazed.\n\n\"You know what cinched it?\" he said, staring at her but directing the words at Luciana. \"Her affection for you. She was an only child and didn't know what it was like to have a sibling. But when I saw her with you, it...it did something to me. I felt that she could be your best friend, everything that I couldn't be. The female figure in your life you could turn to...\"\n\nHe swallowed slowly, his gaze softening. \"You were it, Michelle,\" he breathed. \"I would never have to look at another girl again.\"\n\n\"Why didn't you get back in touch with me later?\" she demanded.\n\n\"Because I was sure you wouldn't want to have anything to do with me after I left you. Something told me your parents had found a rich guy for you. Besides, Lu had come back to live with me, and I also wanted to buy a house.\"\n\n\"Or you thought I was dead?\" she barked out. Elijah pushed her away, his face darkening.\n\n\"Stop it,\" he hissed, lifting a finger. \"Don't try to do that with me. Have you thought about what your parents are going to say if they know you are in touch with me?\"\n\nMichelle looked up, her blue eyes glistening with tears. \"Maybe I will ask them when I meet them in the afterlife,\" she replied quietly.\n\nElijah stared at her, his expression changing from anguish to one of remorse, as though he regretted what he'd just said. Luciana stepped forward and put a hand on Michelle's shoulders, reassuringly nodding at her.\n\n\"Her parents are dead,\" she said. \"She's moved back to Chicago and I'm working on the refurbishment of the house. The same house she grew up in.\"\n\n\"Elijah, why don't you just calm down?\" Matt intervened. \"She's Lu's guest. She can invite anybody she wants.\"\n\n\"Of course she can,\" he retorted gruffly. \"But she has no idea what seeing Michelle does to me. It brings back painful memories of the life I had and the life I could have had.\" He turned to look at her again. \"The life we could have had.\"\n\n\"Are you done?\" she finally asked, wiping off the tears from her cheeks. \"Because if you are, then I must go.\"\n\n\"You're my guest, Michelle,\" Luciana broke in. \"You won't go anywhere.\"\n\n\"So am I supposed to stand here and listen to his rants about how I wronged him?\" she exclaimed. \"He behaves as though only his heart broke. What about me? Did I not have a heart?\"\n\nShe took a small step towards him and grabbed his shirt with both hands. \"Listen, Elijah Russo,\" she whispered angrily. \"Just because my parents treated you bad doesn't mean I supported them. Yes, I was timid. I was defenseless and scared and couldn't muster the courage to act against my parents. But it doesn't change the fact that I loved you. So much that I never looked at another man again. I met you when you were nothing. You weren't chief of police, you didn't command any respect. Everyone loathed you, called you a freak and weirdo. Do you remember those days?\"\n\nShe let go of his shirt and poked his chest with a finger. \"I saw the person inside,\" she said. \"And fell in love with him. You were the first to have me, body and soul, and I wanted you to be the only one.\"\n\nElijah ran a hand through his hair as he turned away and walked over to the couch. He put both his hands on the backrest, closing his eyes and letting out a sharp breath.\n\n\"You should have moved on,\" he said, his voice softer. \"I was never fit for you.\"\n\n\"Really?\" she snorted, folding her arms around herself. \"Did you think so when I climbed three stories of our school building on a rickety service ladder to watch you tending to a family of birds on the roof? Or when you let me name all of the sparrows? Or when you kissed me there for the first time, the wind howling in our ears?\"\n\n\"Michelle\u2014\"\n\n\"Or when Luciana got sick and you couldn't come to school for a week, so I brought you the notes and the medicines she needed? Or when you insisted to stand up to my parents and make them stop mistreating me? Or those evenings in your bedroom, when we\u2014\"\n\n\"Michelle, stop, for goodness' sake!\" he screeched, turning around. She smiled sadly, even though the tears were threatening again.\n\n\"See how that feels?\" she cocked her head to a side. \"The memories aren't painful for only you. They are equally painful for me. But you know what?\"\n\nShe stepped forward until she was inches away from him, her eyes scorching his. \"I would go through it all over again in a heartbeat, just to be with you,\" she murmured.",
        "Luciana looked at Elijah and found unshed tears in his eyes. She shook her head, a little frustrated.\n\n\"Why don't you guys just admit that you still love each other?\" she sighed. \"I know you have changed a lot in the years gone by but it's never too late to pick up from where you left off. I mean, is it that hard to even be friends?\"\n\n\"He doesn't want to be friends with me, Lu,\" Michelle said. \"He's still bitter, still blaming me for the consequences of our relationship. I know\u2014\"\n\n\"Hey!\" Elijah grabbed her arm and yanked her to him, startling Michelle and everyone else in the room. And before anyone could react, he had claimed her mouth in a kiss that left all of them speechless.\n\nMichelle struggled for a moment but before long she had given into him, kissing him back with a ferocity that matched his. Luciana stared for a few seconds, her mouth agape, and then looked away, meeting Matt's gaze. He was leaning against the kitchen door, ladle in one hand, and a bewildered smirk on his lips. He then rolled his eyes and walked back to the oven to check on the turkey, and Luciana followed him. When she looked behind her, they were still kissing, although Michelle was in tears again. Luciana wondered if he meant that kiss or if he simply wanted to torment her more.\n\n\"Bastard,\" she breathed once they had parted for air. \"You left me alone, broke my heart, and were too proud to make amends. Was it only me or did you break many more hearts?\"\n\n\"Stop talking like that,\" he growled, his fingers in her hair preventing her from looking away. \"Don't make me kiss you again.\"\n\n\"I'm not timid anymore, Elijah,\" she retorted. \"I'm not afraid of you. Break me in any way you want.\"\n\n\"Oh yeah?\" he sniggered savagely, before dipping his head and kissing her again. Michelle pressed her body against his, both hands grabbing his face.\n\nMatt leaned in close to her ear, chuckling. \"I wouldn't be surprised if they had makeup sex right here,\" he whispered. \"Did you know your brother was such a passionate kisser?\"\n\n\"Please,\" she tried to shush him. \"I can't stand it anymore.\"\n\n\"Then go and remind them of their surroundings, please,\" he added. \"You know...before the hormones get out of control. Twenty years create a lot of buildup.\"\n\n\"Thanks for that image,\" she groaned inwardly, walking back to the living room. When she cleared her throat after a little hesitation, Elijah and Michelle jerked apart, their faces flushed.\n\n\"Yeah, sorry, but you aren't exactly alone here,\" she said painfully. Michelle stepped away from him, trembling slightly as she walked over to the chair and picked up her purse. She then fixed her hair and looked at Luciana.\n\n\"I really should go,\" she tried to smile but seemed too flustered for it. \"I'm sorry I wasted a lot of your time.\"\n\n\"Michelle?\" Elijah called out, still rooted to the floor next to the couch. \"Do you really still love me?\"\n\nShe moistened her lips with her tongue and looked away, her chest heaving. Elijah walked over to her and held her again, this time gently.\n\n\"Let me go,\" she murmured, trying to free her arms. \"You've already created a scene here.\"\n\n\"That doesn't answer my question,\" he said, giving her a hard stare. \"Do you love me?\"\n\n\"Do you?\"\n\n\"You cannot answer a question with another question.\"\n\n\"You left me,\" she said. \"Am I not the one who's supposed to wonder if you still love me?\"\n\n\"I left you because I didn't want to jeopardize your life. Not because I didn't love you.\"\n\nMichelle swallowed hard, not tearing her gaze from his even when her eyes filled with tears again. \"Why didn't you move on?\" she asked.\n\n\"Because I didn't want to,\" he shrugged. \"Because I didn't want anyone else to take your place.\"\n\nHe cupped her face with both hands, his gaze turning tender. \"How long will the refurbishment take, Lu?\" he asked without breaking eye contact with her.\n\n\"More than a month,\" Luciana replied. \"We haven't even begun yet. It's a big house.\"\n\n\"Do you mind moving in with me until the house is ready?\" he asked Michelle. Luciana's eyes almost fell out of their sockets. When she looked towards the kitchen, Kyle was holding his stomach and laughing inaudibly while Matt seemed very, very confused.\n\n\"Elijah...\" Michelle tried to shake her head but couldn't because he was still holding her face. \"You aren't sure if you even want me anymore.\"\n\n\"I've wanted you every moment of my life,\" he said. \"Yes, I was angry and upset and mad at you for what happened but...I never stopped loving you.\" He removed his hands from her face, and smiled for the first time. \"I'm sorry I was arrogant. You know me, right? You know I was always kind of arrogant.\"\n\nMichelle looked into his eyes, her sad gaze lighting up for an instant. \"So you were,\" she nodded. \"But I didn't mind. Not when you were holding my hand and making me forget all my sadness.\"\n\nElijah's arms came around her a second later, and Michelle hugged him back, their embrace so passionate, Luciana felt she could cry despite how bewildered she was. Matt closed the screen door of the kitchen and walked to the center of the living room, his hands on his hips.\n\n\"Well,\" he began, watching Elijah and Michelle still locked in the embrace. \"We must warn Chris about the loud sex that's going to ruin his sleep for the next few weeks.\" He paused, clearing his throat. \"Or maybe several weeks.\"\n\nElijah picked up a coaster and playfully threw it at him, but he dodged and laughed. Michelle looked at him, then at the floor.\n\n\"I haven't said anything yet,\" she murmured. \"I'm not sure.\"\n\n\"It's alright,\" Elijah pulled her into a comforting hug again. \"You don't have to if you don't want it. But just so you know, my door is always open for you.\"\n\n\"You're very generous,\" she teased.\n\n\"I am,\" he sounded surprised as he pulled away and looked at everyone in the room. \"Am I not, guys?\"\n\nLuciana rolled her eyes. \"I'm hungry,\" she said, walking away, tired and frustrated but still happy that her plan had worked. That after all these years, her brother wouldn't be lonely anymore.\n\n---\n\nEpilogue\n\nLuciana crouched on the grass, still soft from the rain last night. It hadn't snowed in a few days. That morning they had been greeted by a clear sky and bright sun, very unlike a December day. The breeze howled in her ears as she started digging the soil with a spade, her hands freezing despite the gloves.\n\nWhen she had made a hole deep enough to be two feet, she put the spade away and sighed.\n\nShe had stalled it for over two months. But it was Christmas Eve, and there couldn't be a better day to say the final goodbye to Cleo and begin afresh.\n\nHer breath seemed to catch when she picked up the small wooden urn, fingers tracing the name of Cleo on the lid. She closed her eyes and tried to steady herself; she had been putting it off for too long. It was time she gave Cleo her final resting place.\n\nA hand came on her shoulder. She looked up to find Chris next to her, Poppy in his arms. He crouched down beside her on the grass, letting Poppy explore. When she looked into his eyes, he nodded gently, placing his hands over hers which held the urn.\n\nAs they lowered the tiny urn into the hollow of the soil, Luciana's eyes welled up. Poppy appeared next to her, watching intently for a while before meowing and demanding to go back in. She didn't like the cold anymore.\n\nChris filled up the hole with the spade. He then fetched the baby pine tree Luciana had got and planted it in the ground, while she used her gloved hands to gently press the soil to flatten it. As the tree would grow, Cleo would remain alive in her garden.\n\nPoppy turned to Chris, still meowing loudly and demanding to go back inside. He laughed against his will.\n\n\"I told you it was cold out,\" he said to her. He gave Luciana a hand and helped her to her feet. \"Are you alright, Lu?\"\n\nShe nodded, taking off the gloves. \"Where's everybody?\" she asked. Matt and Kyle had gone over to the former's parents' house with the dogs for dinner but she and Chris had company that day.\n\n\"Inside.\" He pressed a kiss to her forehead, before picking up Poppy again. \"Come on. It's cold out here.\"\n\nLuciana followed him back inside her house, unable to take her gaze off his smart, manly gait and the way those tailored trousers made his legs look longer and how the jacket hugged his waist. He did have incredible shoulder to waist ratio, almost like a movie star.\n\nWhen he put Poppy down in the doorway she walked up the stairs to her living room, where the aroma of food had cast its spell on her. She laughed, leaning into him.\n\n\"I've never seen him so happy,\" she observed, her eyes darting at Elijah. From where they stood, they could see him with Michelle in her kitchen, helping her with the meal. He wasn't a kitchen person; he barely cooked or knew how to and aside from making coffee, his kitchen had no other use for him. But since Michelle had chosen to make dinner that day, Elijah had not left her side once, sticking to her like a bee buzzing around nectar.\n\nShe had taken Elijah up on his offer to move in with him while her parents' house underwent refurbishment, and although they both insisted that the move was temporary, Luciana wouldn't be surprised if they ended up living together permanently. They saw Elijah sharing a laugh with Michelle over something, and when he pulled her close to kiss her, Luciana swallowed around the lump that appeared in her throat out of nowhere.\n\n\"He does,\" Chris agreed with a nod. He then looked at Luciana and snaked an arm around her waist, breaking into a smile. \"Your dream is now reality.\"\n\nShe knew it was. Standing on tiptoe she pressed a kiss to his lips as he pulled her closer against him.\n\n\"Are you taking me to your parents tomorrow?\" she asked nervously. He nodded.\n\n\"Don't worry, they already like you,\" he assured her. \"I've told them all about you.\"\n\n\"Or course you have,\" she gently slapped his shoulder. \"Bragger.\"\n\n\"I can't help it,\" he smirked, leaning in for another kiss. They were having Christmas lunch with his family the next day, and he was taking her dancing afterward. Michelle had offered to keep Poppy until she returned.\n\n\"Oh, I have something for you,\" he whispered after a while. He pulled out a magazine from the inside of his jacket and held it out to her. On the cover was a picture of a few cats that had been rescued from the hoarding house, and an inset picture of Luciana with Poppy in the corner. The headline read \"The Holiday Miracle.\"\n\n\"Oh my gosh,\" she smiled, running her hands across the cover image. \"So this was your story?\"\n\n\"Yeah,\" he said. \"I couldn't think of anything better that's happened to me this year and they loved it too.\"\n\nHe pulled her close again, tipping his head to kiss her. Luciana's hand clutched the lapel of his jacket, her stomach aflutter. They were broken by a meow from Poppy, circling Michelle's feet as she started to bring the food to the table. Elijah picked her up and set her in front of her bowl, where she was treated to her favorite grilled sardine p\u00e2t\u00e9. On her way back to the kitchen, Michelle linked a hand with him, and there was no telling that they had been apart for over 20 years.\n\nLuciana took a deep breath, telling her heart to slow down. Chris knew the thoughts going through her mind, and he quietly smiled.\n\n\"Are you happy?\" he asked her.\n\n\"More than I've ever been,\" she replied, her lips curving into a breathless smile. And how could she not? They had all been blessed with the greatest gifts they could ever ask for. Poppy had found them, Elijah had found Michelle, and she had found the missing piece of her life\u2014 Chris.\n\nHe took her hand, leading her to the table, and as Poppy stretched after dinner with the most contented purr, Luciana realized it had turned out to be the best year she'd ever had.\n\n(Concluded)\n\nxXx\n\nMoving to a new country has been more overwhelming than I'd imagined. I gave up my career back home and still don't have a job here, which has left me with ample time to write to my heart's content (I choose to find solace in that). I'm working on a sequel to this story, which should be up by next month (if I still don't have a job by then!). Thank you for reading my stories and the kind words. It keeps me going. Please take care, I'll be back soon.\n\n~LG"
    ],
    "authorname": "Cynthia W.",
    "tags": [
        "loss",
        "lost love",
        "love",
        "new beginnings",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-gift-ch-11-15"
}