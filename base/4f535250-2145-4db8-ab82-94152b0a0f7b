{
    "title": "Danica Pt. 20",
    "pages": [
        "Author's Notes:\nThis story is erotic fantasy, set in a world of magic.  I reserve the right to be listed as the author of this work, wherever it is posted.  If found posted anywhere except Literotica.com with this note attached, this story is posted without my permission.  &copy; Darkniciad 2000-2007\n\nThe sexual situations in this story will be far ranging, and may prove disturbing to some readers.  Please be warned that the villains of the story are really evil, and the things they do are not glossed over, or toned down.\n\nI make use of modern weights and measures quite often in my work, because those are the weights and measures of my fantasy world.  I know many fantasy readers prefer more archaic terms, and I hope those readers can overlook my use of miles, feet, and other such measures.\n\nPlease note that the form of witchcraft in my world is not meant to be true Wicca.  Nor is it supposed to follow \"Charmed\" exactly.  No offence or confusion is intended.\n\nYou really need to read the previous parts of the story to know the characters and the storyline.  This tale follows Danica in her day-to-day adventures, with the greater plot emerging slowly at first.  Think of it more as a serial than a novel, and you'll be in the right mindset.  Those who have read my story \u201cEbon Genesis\u201d will get more out of this part of the story than those who haven\u2019t.\n\nThis is an edited version of this tale, making use of what I've learned since starting to post at Literotica, and the services of my tireless editor, Roust Writer.\n\n\n{*****~~o~~0~~o~~*****}\n\nMeckataur\u2019s demonic servants openly watched Zoraster this time as he crossed the weed-choked broken flagstones in the courtyard of Nightmare Castle.  The task Zoraster came to offer the demon was something any number of his servants could have performed, but would serve to slake the hellspawn\u2019s thirst for elven blood.  More important was the opportunity to see the fruit of Meckataur\u2019s loins, demons that would serve as nearly unstoppable generals in the devil\u2019s building horde.  Barely free of their mother\u2019s wombs, now was the only opportunity Zoraster would have to probe their minds, discovering how best to use them and subvert them to his cause.  Meckataur was too powerful, his mind too well formed, for Zoraster to control him \u2013 yet \u2013 but his foul offspring were another matter entirely.\n\nThe theatrics that had greeted the Archmage on his previous visit were absent this time, which only confirmed Zoraster\u2019s evaluation of the devil.  The hands of the dead opened the doors, rather than magic, and the demons lurking within the walls perched openly \u2013 drooling and snarling \u2013 throughout the dilapidated castle.\n\nReaching the dais in the throne room, where Meckataur and his human dupes awaited, Zoraster bowed with a flourish, \u201cGreetings, Meckataur.\u201d\n\n\u201cWhat do you want, Zoraster,\u201d Meckataur rumbled.\n\n\u201cI find myself with a bit of a problem, one which I believe you would find solving to be quite satisfying.\u201d\n\nThe devil\u2019s muzzle broke into a toothy grin, \u201cGo on, Zoraster.\u201d\n\n\u201cAllow me to show you,\u201d Zoraster suggested, and then cast a spell of scrying.  A shimmering disk of light appeared, which then shifted and focused to reveal three elves, obviously rangers by their garb and weapons.\n\n\u201cFey,\u201d Meckataur snarled.\n\n\u201cThese three are proving quite troublesome, hunting men I have in the area who are performing vital reconnaissance and strikes.  They are young \u2013 as elves count such things \u2013 and likely do not have the discipline to turn their minds inward, or release their souls to the Fey deities.  I thought perhaps you might enjoy peeling the flesh from their bones \u2013 slowly.\u201d\n\nThe demon concentrated for a moment, reaching out one great, clawed hand toward Zoraster\u2019s scrying portal.  Sensing the location to which the portal was attuned, Meckataur growled out the words of a spell \u2013 words in the demon tongue that never would have fit in the mouth of a man.  Fire engulfed the demon, and when the flames faded, he was gone.\n\nIn the scrying portal, flames crackled as Meckataur appeared amongst the elves \u2013 driving his clawed hand completely through the chest of the nearest, and slinging the body like a weapon at the other two.  One of the elves dived aside \u2013 rolling across the forest floor \u2013 but the other fell when the demon\u2019s strike hit true.  The roaring devil was upon him almost before he hit the ground.\n\nZoraster appeared to be watching the scene unfold, but in truth, he utilized a prepared magic to probe the minds of the infant demons.  Already the size of toddlers, though only weeks old, they nursed at the breasts of their wan, slack-faced mothers.\n\nThe creatures numbered five males and one female.  The female was the most intriguing, the seeds of seductive power already beginning to take root within her.  No doubt, she would be alluring beyond compare when she reached maturity, a powerful weapon against any that could know desire for a human female.  Four of the males possessed elemental powers, each keyed to their own specific element.  The fifth male, smaller than the rest, would have the touch of death when it matured, and an affinity for the Art burned in its blood as well.  All had their sire\u2019s ability to absorb the power of other demons as their own.\n\nWaiting until the right moment, when Meckataur eviscerated the final elf with the razor sharp edges of his scaly wings, and thus had the full attention of his two human servants, Zoraster concentrated upon a ring on his finger.\n\nDarts of faint light emerged from the ring, streaking with impossible speed toward the demonic infants.  Arleen jerked her head around to look, obviously having seen the flash in her peripheral vision, but saw nothing unusual.  She narrowed her eyes and stared hard at Zoraster, but saw nothing amiss in his posture or expression as the Archmage watched Meckataur roar in triumph through the scrying portal.\n\nA few moments later, the devil reappeared in a burst of flame before them, the three mangled corpses held in his enormous arms.  Zoraster banished his scrying portal as Meckataur hurled the corpses to the ground before the cleric Mopario.\n\nThe demon\u2019s servant did not need to be instructed what to do.  He knelt over the bodies, praying to his dark god.  At the same time, Meckataur worked his foul magic over the bodies.  In a few moments, the corpses started to lurch violently on the floor, steadily becoming more coordinated in their movement with each passing second.\n\nMeckataur loosed a terrible laugh.  \u201cThey have not escaped me!  Their souls are mine to torment!\u201d\n\nIndeed, the spirits of the elves were visible, tied to the bodies and desperately trying to flee from the pain and suffering of life.  The spells of the dark cleric and the demon held them chained to their mortal forms \u2013 the faces of the spirits filled with utter anguish.\n\n\u201cIt seems we both benefit from this endeavor, Meckataur.\u201d\n\nThe demon roared yet again in triumph, trailing off into that horrific laugh before he spoke, \u201cBring me more, Zoraster.  Deliver the Fey unto my grasp, and I will continue to aid you in your mad schemes.\u201d\n\nHis true task here accomplished, Zoraster bowed and said, \u201cI shall certainly seek elves to entertain you then, Demon Lord,\u201d before turning to leave.\n\n{*****~~o~~0~~o~~*****}\n\nDanica and Celes sat discussing possible ways to examine the stone again, talking in circles and finding no possible solutions.  A knock on the door startled and silenced them, and Danica rose to answer it.\n\nTam stood smiling outside.  \u201cI\u2019m quite sure you will want to examine the stone again without prying eyes nearby, and perhaps experiment with a few bits of magic.  Do feel free, the doors will open for you and allow you entrance.\u201d\n\n\u201cI\u2019m not for...\u201d  Celes paused and then continued without her exaggerated accent, \u201cI suppose that is a waste of time.  I don\u2019t understand the game you\u2019re playing.\u201d\n\nThe guardian\u2019s smile widened.  \u201cNo game, Celes.  You will find no way to take the stone without snuffing out my life, so there is no harm in allowing you to do as you will.  I must apologize for Vellana, she does not understand \u2013 or approve of \u2013 my actions either.  She trusts you not, and will, no doubt, treat you with some disdain.  One day she will understand, and then she shall be ready to take my place here.\u201d\n\nDanica watched the man as he spoke, wondering why she had such complete trust in a stranger.  An aura of peace and serenity seemed to surround him, and Danica felt as if it were wrapping about her as well.\n\nCeles continued to push the old man in irritation, \u201cWhat if she\u2019s right?  You keep telling us the only way to get the stone is to kill you.  What makes you think we won\u2019t do that?  Since you seem to know everything else, I guess you know the price of failure we will bear if we return without that damn rock.\u201d\n\nTam replied, \u201cIt is always a possibility, although I doubt you could find it in your heart to slay me.  I am not without my defenses, were you to try.\u201d\n\nCeles was obviously about to launch into another tirade, but Danica interrupted her, \u201cLet\u2019s just go look at the stone, Celes.  We have permission, and this is getting us no closer to a solution than we were earlier.\u201d\n\nCeles pursed her lips and narrowed her eyes for a moment, and then her shoulders fell and she sighed, \u201cYou\u2019re right.  I suppose I just don\u2019t like the choice we have to make.\u201d\n\n\u201cExamine the stone carefully, discern its nature.  Perhaps you may find the answers you seek,\u201d Tam said, and then nodded before hobbling off down the hallway.\n\nDanica could feel Celes\u2019 emotions rolling out from her.  Irritation caused by the need to choose between murder and torment dominated Celes\u2019 thoughts, but mixed in with it was the need to talk \u2013 and the fear of doing so.  It was all Danica could do to keep her mouth shut, feeling that this was not the right time for them to air their feelings.\n\nWalking up to her friend, Danica hugged Celes and said, \u201cWe may as well go get started.\u201d\n\nCeles nodded, sighing again, and followed Danica down the hall toward the room where the stone was enshrined.\n\n{*****~~o~~0~~o~~*****}\n\nThe hours ticked by as Danica and Celes turned all their knowledge \u2013 and magic \u2013 toward finding out any information about the stone and its protections.  Their magic slid off it like water droplets, and continuing study of the stone revealed nothing new to Danica, who concentrated on just looking at the stone while Celes worked her magic.\n\n\u201cThis is useless.  That thing is like nothing I\u2019ve ever seen,\u201d Celes declared in exasperated tones.\n\nDanica didn\u2019t even hear Celes speak, her eyes locked on the stone and her expression curious.  There was something about the stone; it put off a feeling much like the aura surrounding the old guardian \u2013 and something else.\n\nShe almost felt as though the stone were trying to speak to her.  The sensation was very similar to when she unwittingly felt the emotions or heard the thoughts of others.  Upon considering that similarity, the feeling grew stronger.  Danica concentrated, thinking she was on the verge of some sort of breakthrough.  The sensations from the stone grew more coherent, although they continued to tease her, still just beyond her ability to comprehend.  Then, in a rush, she felt a wave crash over her from the stone, saturating her with the peaceful serenity that surrounded the object.  Danica twitched, a roar of white noise deafening her for a moment.\n\n\u201cDANICA!\u201d\n\nDanica shook her head and looked at Celes, startled by the woman screaming her name.  \u201cI\u2019m sorry, what?\u201d\n\nCeles closed one eye to a slit and tilted her head slightly, looking at Danica with a combination of worry and confusion.  \u201cI\u2019ve been talking to you now for a minute or more, and you obviously haven\u2019t heard a word I said.\u201d\n\n\u201cI\u2019m sorry, I was just feeling \u2013 something.\u201d\n\nCeles\u2019 eyes brightened.  \u201cAnything that can help us get the damn thing out of here without killing the guardian?\u201d\n\nDanica shook her head, confusing wisps of thought drifting around like butterflies flittering about just within her peripheral vision.  Putting a hand on her forehead, Danica shook her head.  \u201cNo, it just has this aura.  I thought I was getting somewhere, but I guess not.\u201d\n\n\u201cAre you okay?\u201d  The concern in Celes\u2019 voice was unmasked, because the look on Danica\u2019s face had her very worried.\n\nDanica raised her head and smiled.  \u201cI\u2019m fine.  I just hoped I might have found something.  We\u2019re going to have to accept our punishment for failure.\u201d\n\nCeles nodded.  \u201cAye, I was just blustering with the old man.  I will not commit murder for Zoraster to save myself from pain.\u201d\n\nDanica asked, \u201cSo, should we just go back then?  Get it over with?\u201d\n\n\u201cI hoped you might stay the night,\u201d Tam\u2019s voice said from behind them.\n\nThey turned and saw the old man smiling at them from the doorway.  \u201cI would enjoy the company, and perhaps you may find time to prepare for what you must do \u2013 here where your Master cannot spy upon you.\u201d\n\nCeles surprised Danica by answering, \u201cWe\u2019ll stay.\u201d\n\nDanica had thought to persuade Celes to stay, planning to share her feelings with her friend, finally ending the rift that was between them.  Celes accepting without any argument left Danica perplexed.\n\nCeles shrugged.  \u201cEver since we got here, we\u2019ve ended up doing everything he\u2019s suggested anyway.  May as well save the time of fighting it.\u201d\n\nDanica laughed, and then both women followed the old guardian when he gestured for them to do so.\n\n{*****~~o~~0~~o~~*****}\n\nZoraster stared at the entrance of the grotto, a slight note of irritation on his face.  After a moment, he banished the magic of the mirror.  The women were resourceful, but it might take some time for them to form a course of action.  Unable to follow their progress, he would simply have to wait.  Zoraster cursed the anger that had prompted him to send them hastily, without instructions to exit the grotto and report regularly.\n\nGlancing at the shelves lining one wall of the scrying room, he singled out the soul stones linked to Danica and Celes.  They were dark, and thus the women still lived.  Nothing could prevent those stones from revealing if the spirits of the two women had crossed over in death.\n\nActivating several other mirrors, he observed the progress of his eventual conquest.  Ferrartene\u2019s army grew daily, as did that of Draxnog.  The wild men of Norshelt constructed their warships at a furious rate, and already the more savage captains struck fear into the hearts of sailors and coastal villages.\n\nWhen the time for mundane war came, those whom he manipulated would be ready to set the world aflame.\n\nThe more important, and subtle, preparations moved at a swifter pace toward completion.  His Arians replaced whores in houses of ill repute across the world.  His agents infiltrated governments and businesses, steadily subverting them to his cause or neutralizing their threat.  His elite strike forces prepared in their hidden headquarters.  These would erode resistance from within, preparing the way for war.\n\nAll were, of course, nothing more than cover to distract his enemies, and the gods, from his true goal.  Only in a world embroiled in chaos could he hope to succeed.\n\nDimming all the mirrors, Zoraster gripped the amulet around his neck, sensing a twin amulet only recently bestowed.  Closing his eyes, the Archmage looked through the eyes of the man wearing the other amulet.\n\nLarge breasts bounced below a beautiful face tightened in ecstasy.  The woman\u2019s blue eyes popped open wide as a final jolt shook her body, pushing her back into the headboard of the bed.  Zoraster savored the release of his servant through the link, the man\u2019s seed coating the woman\u2019s depths.  His first experience with something previously known only through memories not his own, Zoraster\u2019s servant found the reality far more satisfying than the memory.\n\nA few moments later, Zoraster smiled as his servant acted upon another memory, eager to determine if it would be as gratifying as the last.  Muscled arms shot down toward the woman, large, long-fingered hands wrapping around her throat.\n\n{*****~~o~~0~~o~~*****}\n\nThe meal was just as good as the one provided when they first entered this odd island cavern, though Danica and Celes were a bit too lost in thought to enjoy it.  Despite his stated intention of wanting company, Tam made no attempt to draw them into conversation.  When Danica or Celes spoke, he responded, but otherwise he did not prod them to speak.\n\nSomehow, Danica sensed he was getting the company he had requested.  He often nodded or smiled in response to Danica\u2019s inner thoughts.\n\nTawny-haired Vellana said nothing, only speaking volumes of distrust with her eyes as she ate.  Danica thought the woman was beautiful \u2013 lean, but curvy in just the right places to spark interesting thoughts in Danica\u2019s mind \u2013 but the severity of her expression detracted from it significantly.  Even speaking directly to the woman had not broken her silence.\n\n\u201cI am sure you feel the need for rest, and have many things to discuss, so I shall thank you for joining us,\u201d Tam said with a nod to Danica and Celes.\n\nWhen the guardian had mentioned a discussion, a wave of fear and need from Celes bombarded Danica.  In truth, Danica was just as anxious and afraid as her friend was.  They both needed to get their thoughts and feelings out into the open, soon.\n\nWhen the women rose to go to the room set aside for them, they could feel Vellana\u2019s eyes boring into their backs.  When Danica glanced back for a second, just before the table was out of her range of vision, the feeling was confirmed.\n\nShaking her head, Danica followed Celes to their room, where she was determined they were going to talk this out before it drove them both as mad as Zoraster.\n\n{*****~~o~~0~~o~~*****}\n\n\u201cMaster, they are a danger to you, and the stone that is your charge.  They were sent here to take it by one consumed by the dark.\u201d\n\nTam smiled, \u201cTrue, but I think it is not the command of Zoraster that brought them here, but rather destiny.\u201d\n\n\u201cI do not understand,\u201d Vellana sighed, shaking her head in obvious irritation.\n\nRising to place his hand on the young woman\u2019s shoulder, Tam said, \u201cCome, commune with the stone.  Perhaps you will hear her full song this night.  Then you will understand.\u201d\n\nVellana\u2019s expression softened, the wave of serenity surrounding the old man having just as much power over her as any other.  It would have surprised Danica and Celes to see the guardian walk unaided by his staff \u2013 and with no hint of weakness in his steps \u2013 but Vellana was accustomed to the strength residing in her Master.\n\n{*****~~o~~0~~o~~*****}\n\nCeles sat down on the bed when they entered their room, sighing heavily.  Danica closed the door and then turned back to the other woman, her breath catching in her throat as she looked at Celes.\n\nCeles\u2019 expression, masked in the illusion Danica could see after practicing to do so for so long, was sad and longing.  Her firm breasts rose and fell in time with quick, shallow breaths, which were barely strong enough to fill the woman\u2019s lungs with air.  Danica\u2019s blood stirred, warmth spreading through her, and she felt the tingle of wetness gathering quickly between her legs.\n\n\u201cCeles...\u201d Danica paused for a moment, mastering her emotions because her tone was far huskier than intended, before continuing, \u201cWe need to talk.\u201d\n\nA dam appeared to break within Celes, and her eyes misted with tears.  Her lip quivered and she sobbed out, \u201cOh, Danica, I can\u2019t stop thinking about you, wanting to be with you.  It\u2019s driving me out of my mind.\u201d\n\nDanica crossed the room to sit next to her friend, \u201cI know.  I\u2019ve felt it.  Your thoughts have been hammering into me for a while now, and Andrea told me you\u2019d talked to her after Brandon blurted out what I had refused to see.  You know I want you too, but I don\u2019t want to hurt you.  It\u2019s making me a little crazy too.\u201d",
        "\u201cI don\u2019t know if it\u2019s love or lust, Danica.\u201d  Celes took a deep breath and shuddered.  \u201cGods, Danica, I can taste the scent of you in the air.  I changed the toy you made me so that it is you it summons when I activate the magic.  I need you there so badly that I had to do something.\u201d\n\nDanica\u2019s passions were rising to a fever pitch now, sitting close to Celes and seeing the need in the woman\u2019s eyes.  \u201cWhat is stopping us?\u201d  Danica breathed huskily.\n\nAgain, Celes\u2019 lip quivered.  \u201cDanica, beneath the illusion you see, I\u2019m still old.  The moment you touch me, you\u2019re going to feel reality, not the illusion.  I couldn\u2019t bear it if you winced away from me.  That would surely send me over the edge into madness and despair.\u201d\n\nDanica slid her hand behind Celes\u2019 head, stroking the woman\u2019s dark tresses and looking into her eyes.  In a sudden moment of passion, she leaned down and kissed Celes.\n\nCeles stiffened at first, and then she melted into the kiss.  Danica could feel nothing except the raw emotion pouring out of Celes, joy and wonder at a kiss she never thought to feel.\n\nTheir lips parted, although Danica remained close.  The illusion was not broken, Danica still saw Celes as young, vibrant, and filled with need.  Her hand moved to the material of Celes\u2019 robe, bunching it up with quick movements of her fingers.\n\nCeles trembled, whispering, \u201cDanica...  We...  I...  Please don\u2019t tease me.  We can\u2019t do this.\u201d\n\nDanica kissed her again, more passionately this time.  She pulled at Celes\u2019 robes with renewed vigor as well.  When they broke from the kiss, Danica said, \u201cI still see you as you should be.\u201d\n\nHer robes now bunched up above her knees, Celes gasped as Danica tugged the cloth higher.  \u201cIt will be different if you...  Danica, the illusion won\u2019t hold.  I can\u2019t bear it.\u201d\n\nDanica pulled the cloth up above Celes\u2019 panties, and then quickly cupped the woman\u2019s sex in her hand.  She could feel the heat radiating through the cloth, and Celes\u2019 back arched toward her from the touch.\n\nThe illusion \u2013 reinforced by the image of her true self in Celes\u2019 mind \u2013 held.\n\nLooking up into Celes\u2019 eyes, she slid two fingers beneath the cotton cloth and pulled it away, pushing Celes gently down to the bed at the same time.  Looking down, she saw the woman\u2019s perfect folds, and Danica\u2019s arousal spiked to levels that she could no longer ignore.\n\n\u201cPlease, Danica,\u201d Celes sobbed, the tone of her voice betraying that she could not decide whether her own statement was meant to ask Danica to stop, or to hurry, as her back came to rest on the bed below.\n\nDanica hooked her thumb under the cloth of Celes\u2019 panties, and slipped two fingers between the woman\u2019s nether lips.\n\nCeles loudly moaned, her back arching completely up off the bed.  Danica\u2019s senses reeled in the face of Celes\u2019 scent of arousal, and the moist warmth squeezing tight around her fingers.  Danica stroked the digits, drawing a sharp gasp from Celes.  The illusion Danica saw did not even waver.  The sense of peace she had sensed around Tam flooded through her, but it felt as though it were coming from within instead of without this time.  The serenity mingled with her arousal and love, strengthening it.\n\nDanica\u2019s other hand moved to Celes\u2019 thigh, and Celes snapped her legs wide apart the moment she felt the touch.  The woman was still sobbing, but she was committed now, she could not have forced Danica away to save her very life at this moment.  Even though she still felt this would only come to disaster, it was too late to stop the inevitable.  She needed Danica \u2013 desperately \u2013 and she couldn\u2019t bear to wait another moment.\n\t\t\nDanica leaned down, drowning in the scent of Celes\u2019 arousal, enraptured by the sight of the woman\u2019s wetness clinging to her fingers.  Fueled by the magic of the Awakening and the need flowing out from Celes and echoing in her mind, Danica barely noticed the illusion wavering slightly before her as she drew nearer to Celes\u2019 sex.  Her tongue snaked out, and the moment it made contact with Celes\u2019 flesh, a violent jolt of energy shot through her, hurling her off the bed and into the floor below.\n\nScrambling back to her feet, Danica stared in horror at Celes.  The illusion had shattered, revealing the truth of her old body, age spots and wrinkles dominating what had been smooth thighs a moment before.  The woman was hovering a foot above the bed, her back arched so that her hair draped over the mattress and her toes grazed it as well.  Celes\u2019 mouth was open in a silent scream, and her entire body trembled as if shaken by a violent earthquake from within.  An angry red glow surrounded her, and her flesh rippled in nauseating waves over her bones.\n\nDanica reached out and moved forward, but some force hurled her violently backward again before her hand could touch the obviously pain-wracked woman before her.\n\nRolling back up to her knees, Danica stood and sobbed out Celes\u2019 name, again walking toward the bed.  She was determined that she was either going to do something, or die trying.\n\n{*****~~o~~0~~o~~*****}\n\nA jolt passed through Zoraster, knocking him back in his chair and sending the glass of wine in his hand tumbling to the stones below.\n\nReaching out with his mind, he discovered nothing amiss.  His eyes narrowing and his teeth clenched tight, he began gesturing to the mirrors arrayed before him.  Zoraster shifted the focus of the devices to hundreds of people and places he watched, attempting to discern the nature of the disturbance that had just assaulted him.\n\n{*****~~o~~0~~o~~*****}\n\nRogan Illiciat\u2019s hand twitched, rendering the spell scroll he was scribing useless, although he paid the ruined document absolutely no attention.\n\nReaching out with his mind, much as Zoraster was doing hundreds of miles away, Illiciat smiled and chuckled, finding what he sought where the other found only frustration.\n\nOpening his eyes, he whispered, \u201cWell, well \u2013 it appears perhaps things are moving more quickly than I thought,\u201d and rose from his chair.\n\n{*****~~o~~0~~o~~*****}\n\nThe stone suddenly sang out with a note of exaltation in Vellana\u2019s mind.  She opened her eyes and gasped, seeing the stone\u2019s glow was now a rosy pink, the light pulsing as if in tune with a fast heartbeat.  \u201cMaster, what is it?\u201d\n\nA wide smile on his face, and tears gathering in his eyes, Tam replied, \u201cHope.\u201d\n\n{*****~~o~~0~~o~~*****}\n\nDanica turned her head to the side, the glow surrounding Celes growing brighter by the moment.  She quickly spoke the words of a spell, her hands moving through the gestures in a rapid dance before her.  The magic came into being, and then almost immediately dissolved.\n\nDanica risked a glance back at Celes, and found that she couldn\u2019t even see the woman through the nimbus of light now.  Indeed, she couldn\u2019t even look directly at her, because the light was so bright it stabbed into Danica\u2019s brain.\n\nShe started to cast the spell again, but had to stop and back away when a wave of heat erupted from the burning light in front of her as well.  Danica stumbled back, her arms held like a shield in front of her face, screaming Celes\u2019 name in choking sobs.\n\nJust when she felt her robes were going to burst into flames, the heat blasting against Danica started to ebb.  Through her closed eyelids, she could see the light in the room dimming as well.\n\nLetting her eyes flutter open to just slits for fractions of a second, Danica opened them fully when they could bear the still diminishing light.  The heat was gone now, and Danica let her arms fall.  On the bed, the light was still too bright to look directly into, but in the edges of her vision, she could see a faint outline of Celes now, still hovering above the bed and trembling.\n\nThe light faded, and Danica stared in wide-eyed wonder at her friend on the bed.  Celes\u2019 eyes were closed, and she appeared unconscious, but the rise and fall of her chest revealed that she was still alive.\n\nRunning to the bed, tears of joy filling her eyes, Danica cradled Celes\u2019 head in her hands and called out her name.  Celes stirred slightly, moaning and tightening her closed eyes.  When one of Danica\u2019s tears fell on her cheek, Celes\u2019 eyes fluttered, and then slowly opened.\n\n\u201cDanica?\u201d  Celes asked wearily, a look of disorientation and weakness evident in her face.\n\nDanica let out a little chuckle, broken by a sob of joy, and cried, \u201cOh, Celes!\u201d\n\n\u201cWhat happened?\u201d  Celes asked as Danica helped her sit up on the bed.  Her head was clearing now, and the weakness she had felt upon waking was fading rapidly as well.  The wide smile on Danica\u2019s face was still confusing, as was the joy and wonder reflected in her eyes.\n\nThen it hit her.\n\nCeles looked down at her hands.  Smooth and unlined, the age spots that had plagued them were missing.  Pulling over a lock of her hair that was tickling her ear, Celes saw it was raven-dark, rather than iron-grey.  Her eyes opening wide, Celes reached up to squeeze her breasts, finding them riding high and firm once more.  She looked at Danica, tears now streaming down her face as well.\n\nDanica gathered up Celes in her arms, sobbing laughter wracking both their bodies, and she gasped, \u201cZoraster\u2019s curse is broken!  You\u2019re young again!\u201d\n\n{*****~~o~~0~~o~~*****}\n\nZoraster darkened all the mirrors with a thought and a harsh slash of his hand.  He stood and stomped out of the room, irritated by the sensation he could not pin down.  It had felt much as if a powerful spell of his casting was broken, something he had not experienced in years, but there was no evidence anywhere of this having happened.  The sensation felt muted compared to that which he remembered as well, and rather than the weakness that normally followed, it left a strange void within him.\n\nWhen he stepped out into the hall, a sight greeted him that drained away his irritation.  Appearing in a flash of light was his newest servant, returned from experiencing the world for the first time.\n\nZoraster examined the man, pleased with his creation.  Standing some six inches taller than most men, he was powerfully muscled.  His dirty-blonde hair hung just to his shoulders, and his long fingered, strong hands rhythmically clenched at his side.  A wide smile decorated his handsome face, a face dominated by piercing blue eyes, flecked with gold.  Zoraster had searched the world over until he found the perfect specimen for his experiment.\n\n\u201cI trust you find the world a pleasurable place, Ebonar?\u201d\n\nThe smile on the man\u2019s face grew even wider, and more wicked.  \u201cIndeed, I do, Master.  Memories fade.  In their making, they are experienced in their full glory.\u201d\n\n\u201cExcellent.  You will soon be ready to assume your place in my great game.  Go now and take your rest.  We shall test your command of the Art on the morrow.\u201d\n\nEbonar dipped his head in a shallow bow, and walked down the hall to the room set aside for him here within Zoraster\u2019s inner sanctum.  He had never been here, yet he moved unerringly through the halls, acting upon memories given to him over the course of a year\u2019s nurturing.\n\nZoraster watched the clone with deep satisfaction.  Housed within that perfect body were his mind and his memories, carefully altered to keep Ebonar tractable.  The one being he could trust implicitly, Ebonar would hold the reins of power here whenever Zoraster had matters more important to attend to elsewhere.  Zoraster was now free to move forward with the more intricate portions of his grand design.\n\n\u201cI will cleanse this world in fire, and forge it anew,\u201d Zoraster chuckled under his breath.\n\n{*****~~o~~0~~o~~*****}\n\nStill sniffling, the grin on her face so wide it felt unnatural, Celes asked, \u201cBut how?\u201d\n\nDanica shrugged, wiping her eyes and nose on her sleeve.  \u201cI don\u2019t know, and frankly I don\u2019t care!\u201d\n\nCeles laughed, squeezing her breasts again.  \u201cGods, that feels good,\u201d she muttered, drawing another laugh and a slight moan from Danica.\n\nA knock sounded on the door, and both women frowned in irritation.  \u201cThey probably saw the light, or felt the heat, it was tremendous,\u201d Danica explained.\n\nCeles sighed.  \u201cI don\u2019t remember anything except a vague sense of pain.  Go on, answer it and then get them to go away.  I just want to be with you right now.\u201d\n\nDanica smiled and replied, \u201cMe too,\u201d while going to answer the door.\n\nTam smiled wide when Danica opened the door.  \u201cSo, the curse is broken, as I suspected.\u201d\n\n\u201cHow did you...\u201d Danica stopped and laughed, \u201cI suppose that\u2019s a silly question.  You seem to know everything, and you probably won\u2019t tell me anyway.\u201d\n\nThe old man winked.  \u201cEven a wish has its limits, and the power that cursed Celes was great.  There would have been conditions placed upon the spell, a means to break it.  It would have been something the man who cursed her assumed could never come to pass, but remained within the realm of possibility.\u201d\n\nLike the touch of another woman, Danica thought.\n\nTam nodded, and Danica blushed, remembering that the old man could apparently read her mind.\n\nWith a slight chuckle, the guardian patted Danica\u2019s cheek fondly.  \u201cPlease, see me in the morning.  There are things I can reveal to you now, but I am sure you wish solitude this night.  I simply wished to ensure what I believed had happened here, and I have done that.  Blessings upon the both of you.\u201d\n\nWith that, Tam nodded again and turned away from the door to walk down the hall.  Danica closed the door and turned back to Celes.\n\n\u201cZoraster never expected another woman to find me arousing again, and thought his condition was perfect,\u201d Celes speculated.\n\n\u201cThat has to be it,\u201d Danica agreed, crossing the room.  She sat down on the bed, her passions roaring to bonfire intensity once more.  \u201cWhy don\u2019t we pick up where we were so rudely interrupted,\u201d Danica suggested in a lusty whisper, and then soundly kissed Celes\u2019 full lips.\n\nTheir arms entangled as Danica and Celes both reached for each other\u2019s robes at the same time.  Danica laughed into the kiss, and then pulled back from Celes slightly.  Reaching out, she traced her fingers over Celes\u2019 right breast, drawing a sigh of pleasure from the woman.  Letting her fingers slide down, she untied the belt at Celes\u2019 waist.  Danica then turned her attention to the clasps holding the robe closed, starting at the neckline.\n\nAs each clasp came undone, Celes breathed deeper, her anticipation growing.  Danica reached through the part, pulling the cloth wide when she unhooked the clasp just below Celes\u2019 breasts.\n\nDanica moaned and glided her hands over the firm globes, circling the puffy, slightly darker areolas with her fingertips when she reached them.  She then rubbed Celes\u2019 hard nipples with her thumbs while caressing the globes with her fingers.\n\nDanica leaned forward, flicking her tongue over the turgid bud of Celes\u2019 right breast, bringing Celes\u2019 hand to the back of her head.  The dark-haired woman stroked Danica\u2019s hair and whimpered contentedly as her nipples were suckled in turn.\n\nDanica did not even release Celes from her mouth when she continued to open clasps.  Celes reached down to tug and unknot the belt around Danica\u2019s waist at the same time, immediately followed by unhooking the clasps on Danica\u2019s robe.\n\nBoth women shrugged off their robes, and then fell into each other for a deep, impassioned kiss.  Their breasts tightly pressed together, sending shivers up both their spines.  There would be time later for gentleness and exploring, for now they both had a deep, urgent need that demanded satiation.\n\nDanica leaned forward, pressing Celes down to the bed \u2013 their tongues dancing over each other as they kissed.  When Celes came to rest on the bedclothes below, Danica gave a last teasing flicker of her tongue over Celes\u2019 and rose up above the other woman on her hands.\n\nDanica\u2019s pendulous breasts swayed slightly, her large nipples grazing over Celes\u2019 perfect globes.  She leaned down to kiss the valley between them, and then trailed kisses down Celes\u2019 body, drawing ever nearer where they both wanted her to be.  When she reached the neatly sculpted patch of night-black hair above Celes\u2019 sex, Danica traced around it with her tongue.  The strokes of Danica\u2019s tongue drew tantalizingly close to Celes\u2019 aching pussy, causing the other woman to writhe and moan beneath Danica.\n\nMoving downward slightly, Danica looked up into Celes\u2019 eyes, letting her auburn locks tickle over the smooth-shaven nether lips below.  Licking her lips, Danica slowly lowered her head, enraptured once again in the sight and scent of the aroused woman beneath her.\n\nThis time, the touch of Danica\u2019s tongue drew a sharp whimper of pleasure from Celes.\n\n\u201cOh gods, Danica, I\u2019ve wanted this so badly, for so long.\u201d\n\nDanica moaned, looking up at Celes, and teased her tongue over Celes clit in quick flickers, smiling mischievously.  Celes responded by letting out an impatient \u2013 but sensual \u2013 growl, laying her hands on Danica\u2019s head and tugging the woman\u2019s tongue into her folds.\n\nPulled into the fragrant flesh, Danica suckled Celes\u2019 labia between her lips, rolling them with her tongue.  The bittersweet taste of Celes\u2019 juices was intoxicating, and Danica stabbed her tongue as deep as possible into the woman\u2019s hot sheathe, seeking more of the steadily increasing wetness.\n\nCeles\u2019 hips rocked upward in a steady rhythm, chilly pinpricks of pleasure erupting all over her skin, but centered in her nipples and the throbbing bud at the apex of her sex.  After long torturous years of dreaming about it, Celes finally experienced Danica\u2019s questing tongue driving her toward a thunderous release.\n\nDanica quickly turned her attention to Celes\u2019 swollen clit, eager to feel the woman quivering in orgasm beneath her.  With broad swipes of her tongue, flickers of the tip, and urgent suckling of the erect bud, Danica pushed her friend ever closer to the edge.\n\nIn a series of sharp gasps, Celes exclaimed, \u201cI\u2019m so close.  So good, Danica.  Don\u2019t stop.\u201d\n\nDanica had no intention of stopping, and increased the urgency of her lapping, hungry to taste the flow of Celes\u2019 cream and hear her explosive screams of orgasm.\n\nThose screams came a moment later, Celes pulling Danica hard against her quivering sex, and wrapping her legs tight around Danica\u2019s back.  The excitedly moaning redhead lapped for the flowing stream of Celes\u2019 wetness, filled with wonder from the tight squeeze of Celes\u2019 pussy against her tongue with each orgasmic contraction.\n\nDanica continued to lap and suck, holding Celes in perfect blissful release for several moments before Celes\u2019 arched back fell heavily to the bed once more.  Danica slowed down then, for a time, but did not stop lapping the beautiful pussy beneath her.  She was soon building Celes toward another explosive release, and drowning in the wonderful sensation.\n\n{*****~~o~~0~~o~~*****}\n\nWhen Danica awoke, she and Celes were facing each other, their bodies intertwined, in exactly the same position as when they had fallen asleep.  As Danica roused, Celes stretched and let out a little moan.\n\n\u201cSo what do you think?\u201d  Danica asked.\n\n\u201cI think we probably both need a bath,\u201d Celes chuckled.\n\nDanica swatted her playfully on the bottom.  \u201cI meant, how do you feel?  Is it love, or lust that\u2019s drawing us together?\u201d\n\nCeles smiled and replied, \u201cA bit of both, really.  I do love you, but I\u2019m not sure I\u2019m in love with you.  We\u2019ve just been so close while Zoraster tormented us, and you were my only distraction from the place for so long.\u201d\n\nDanica returned her smile and agreed, \u201cI feel pretty much the same.  Anyone who wants to get closer to either of us is going to have to accept that we have something special, and we\u2019re going to feel the need to act on that once in a while.\u201d\n\n\u201cMore often than that, I think,\u201d Celes teased, and moved in to kiss Danica\u2019s neck.\n\nDanica shivered, moaned, and then gently pushed Celes away.  \u201cStop that.  You\u2019re right, we both need a bath.\u201d",
        "\u201cWe still have to face Zoraster as well,\u201d Celes added with a sigh.\n\nDanica\u2019s eyes hardened, just for an instant, although Celes didn\u2019t see it.  \u201cLet\u2019s go get in the bath, and then we\u2019ll go talk to Tam, like he asked.\n\nCeles nodded, and then climbed out of the bed.  Danica\u2019s breath caught in her throat when the beautiful woman rose and stretched.  Seeing the illusion, even though it had been strengthened by the image in Celes\u2019 mind, could not compare to seeing the woman young, vibrant, and close enough to touch.\n\nDanica rose as well, and the two women fell into a deep kiss.  The kiss almost turned serious enough to draw them right back in the bed, but Celes pulled away, offered a crooked grin, and strutted toward the bath, her hips swaying seductively.\n\nThey were both resigned to a simple washing in cold water at first, as there was no way to heat water within the room given to them, but were surprised to find the water in the tub still as warm as it had been the night before.\n\nThe tub was just large enough for two, so they shared it.  After washing, their hands and lips found each other almost inevitably.  They both came, their hands dancing over each other\u2019s nether lips, and then rose from the bath to towel dry.\n\nDressed \u2013 somewhat reluctantly \u2013 in their robes once more, Danica opened the door and Celes followed her down the hall to the first chamber where they had originally met Tam.  He sat at the same table with a bowl of cut fruits in front of him.  The old man gestured for them to join him, and they took seats across from him.\n\nThe old guardian gestured to the bowl.  \u201cFeel free to break your fast while I talk.  I\u2019m sure you\u2019ll have questions, but you can eat in the meantime.\u201d\n\nDanica smiled at Celes, who grinned back.  They had both expended a great deal of energy the night before, and certainly needed to replenish it.  They each selected a piece of fruit, and Tam continued.\n\n\u201cThat which I guard has an opposite, and that opposite has wormed its way into Zoraster\u2019s heart and soul.  It is that which sparks the madness in him, and turns his goals to the dark.  On the eve of the convergence, the stone that affects Zoraster awakened.  Its influence over him will only grow stronger now, and soon he will seek it out.  If he acquires the stone, his already staggering power will grow tenfold.\u201d\n\nThat sobering news drained away the contentment Danica felt.  \u201cWill the stone you guard oppose him?\u201d\n\n\u201cIt already does.  She awakened many, many years ago, and has drawn others to her presence ever since.  I was the first, but I am far from the strongest.  You too, were drawn here by the stone.\u201d\n\nCeles popped a last bite of apple into her mouth and said, \u201cYou call it she.  Is it alive?\u201d\n\nTam smiled, \u201cAfter a fashion.  In truth, that is simply an affectation of mine.  The stone is like nothing we know in this world, because it comes from a time before anything we know existed.  That previous universe had laws so alien that we could never hope to comprehend it.\u201d\n\nDanica shook her head, trying to absorb what the guardian had just said \u2013 and having little success.  \u201cYou said it drew us here \u2013 why?\u201d\n\n\u201cAs well as I understand it.  I cannot know how it chooses those who will act on its behalf.  One thing I do know, it senses in both of you great promise.\u201d\n\n\u201cSo, we\u2019re pawns in some game?\u201d  Celes asked, somewhat peevishly.\n\nTam shook his head.  \u201cNo, never that.  You are always free to make your own decisions.  She would never twist you, as does her opposite.  It is my belief that those who are chosen are predisposed to her designs.\u201d\n\n\u201cUnfortunately, we\u2019re already pawns to Zoraster,\u201d Danica mumbled, her eyes turning hard as agates.\n\n\u201cYou have already broken one of his chains,\u201d Tam suggested, nodding toward Celes.\n\nThose words crystallized something inside Danica that had been within her ever since coming here and realizing that she could not kill an old man simply to avoid torture at Zoraster\u2019s hands.  \u201cI\u2019m breaking all of his chains now,\u201d Danica said defiantly, and gripped the amulet around her neck.\n\nCeles gasped, and started to reach for Danica\u2019s hand \u2013 deathly afraid of what might befall her friend if she removed Zoraster\u2019s leash.  It was Tam\u2019s voice that gave Danica pause, however.\n\n\u201cWait.\u201d\n\nThe muscles in her arm bunched to tear the chain from around her neck, Danica trembled for a moment.  She relaxed, and let the chain fall back into her robes.\n\n\u201cIf you wish to remove the amulet, do so in the presence of the stone.\u201d\n\nDanica nodded and immediately stood.\n\nCeles asked, \u201cAre you sure about this, Danica?\u201d\n\nDanica relaxed for a moment, letting the defiant cast of her features slip.  She smiled and said, \u201cYes, Celes.  I\u2019m done being his toy.  He has already threatened us with torture worse than death, what more could he do?  Every person I befriend is in danger because of it.  I\u2019m going to be free, or I\u2019m going to die trying.\u201d\n\nCeles stood.  \u201cI\u2019ll not let you go alone.  I have my strength back now, and I have my powers.  We may not survive, but we\u2019ll surely sting the mad bastard, and he won\u2019t use us any more.\u201d\n\nTam smiled and stood.  \u201cI can aid you.  Perhaps your cause is not so hopeless as you may believe.  Come \u2013 let us break the shackles of the Archmage that encircle your necks.\u201d\n\n{*****~~o~~0~~o~~*****}\n\nZoraster sat up abruptly, tossing aside the down filled comforter that covered him.  He had not slept in days, utilizing the power of Blorcasir to remain alert while he attended to important matters, and had only been asleep for a few hours when something awakened him.\n\nOn his finger, an ornate ring throbbed and glowed.  Zoraster stared at the ring, his fingers trembling slightly and his face a blank mask.  Rising, he quickly pulled on his robes, his movements methodical and stiff.\n\nWith one more glance at the ring, Zoraster spoke the words of a spell and vanished in a flash of light.  He appeared instantly in a room choked with dust and cobwebs.  Crudely built shelves lined the wall, a plain table and chair standing in the center of the room.  The bed against the wall showed signs of mice, down lying in small piles beneath numerous holes.\n\nLooking around, Zoraster\u2019s shoulders slumped, and a pained expression pinched his features tight.  None had entered this room in over a decade, since the day he had sealed it with his magic.\n\nGrowling and shaking his head violently, Zoraster pushed away the memories that threatened to overwhelm him.  Too many dark memories filled this room, and those not steeped in hate throbbed with pain.  Barking the command words, he dissolved the wards on the door and stepped outside, into the halls of his ancestral home.\n\nStunned servants bowed and quickly stepped out of his way as the Archmage moved unerringly through the halls to the servant\u2019s quarters.  He winced again when he passed the hallway that lead to another sealed door in the castle.  Taking a deep breath and pushing down the memories, he continued to his destination, to bid a final farewell to all that remained of his old life.\n\nApproaching the room, Zoraster nodded to a man sitting outside the room he sought.  Though he could not remember the man\u2019s name, Zoraster knew it was old Vargas\u2019 selected replacement.  The man who would soon be Chancellor of Witharten rose and bowed to his Lord.\n\n\u201cLord Tharsas, Master Vargas still lives, though the priests offer him last rites even as we speak.\u201d  The man looked nervous, although the obvious grief surrounding him like a cloud overshadowed it.\n\nOpening the door, Zoraster saw the priests finishing their blessing.  Vargas lay very still, and at first, the Archmage feared he was too late.  The old Chancellor took a shallow breath then, and Zoraster quickly stepped to the edge of the bed.\n\nSomehow sensing his presence, Vargas opened his eyes and smiled when he saw Zoraster.  \u201cLord Tharsas, I am so pleased to see you one last time before I journey on.\u201d  The old man\u2019s voice was barely a whisper, lacking the strength and polish Zoraster remembered so well.\n\n\u201cI have not released you from service, Vargas,\u201d Zoraster said, a resonant, noble tone in his voice that had not passed his lips in many years.  Smiling, he took the old man\u2019s frail hand in his own.\n\n\u201cI fear I must \u2013 this once \u2013 defy you, My Lord.\u201d  Vargas smiled and chuckled, the chuckle turning into a wheezing cough.\n\n\u201cThis does not have to be, Vargas.  I have the magic to hold you in stasis, create a new body for you.  You could be young and vital once more, with all the wisdom of your years intact.\u201d\n\nVargas squeezed his Master\u2019s hand.  \u201cI am as weak in spirit as I am in body, My Lord, it is my time.  Would that dear Colette stood at your side to bid me farewell.\u201d\n\nHis eyes misting with tears for the first time in over a decade, Zoraster said, \u201cShe would not want you to leave us either.\u201d\n\n\u201cPerhaps I will see her.  It will be wonderful to hear her laugh, to see her smile.  I wonder...\u201d\n\nThe old man\u2019s words trailed off then, his lips still moving but no discernable sound passing them.  Zoraster held the old man\u2019s hand until he felt it go limp, and watched Vargas draw his last breath.\n\nLaying the man\u2019s hands across his chest, Zoraster stared at the body of the man who had been the only connection remaining between Zoraster Arias and Tharsas Witharten.\n\n\u201cFarewell, Vargas, you have served honorably and well.\u201d\n\nTurning, Zoraster squared his shoulders and strode out of the room.\n\nThe man waiting outside asked, \u201cIt is finished?\u201d\n\nZoraster nodded.  \u201cHe is to be buried in the family crypt, next to my father.  Spare no expense, and there are to be flowers from the garden \u2013 near the headstone there \u2013 placed in his casket.\u201d\n\nThe man bowed and responded, \u201cIt shall be done, My Lord.\u201d\n\n\u201cI respect Vargas\u2019 judgment, and you shall continue in his place, as you no doubt already do.  I know his handwriting, and I know that most of the recent letters were not in his hand.  You speak with my voice here, remember that.\u201d\n\n\u201cI shall govern these lands and maintain them as dutifully as did Master Vargas, My Lord.  He instructed me well, and I have indeed performed his duties for nearly two years now with his consultation.\u201d\n\nZoraster nodded his acknowledgment.  \u201cYou know to maintain the garden, utilizing the brightest talents you can find?\u201d\n\n\u201cMy own daughter performs the duty, My Lord.  She is truly gifted.\u201d\n\n\u201cServe me well \u2013 you have a difficult standard to meet.\u201d\n\nThe new Chancellor bowed.  \u201cI shall give all that I have for this land, My Lord.\u201d\n\n\u201cThat is all I may ask.  Good day.\u201d\n\nZoraster walked back toward the room where he had entered, his own room as a youth, where he had lived in self-imposed exile.  Reaching the hall to Colette\u2019s room once again, he nearly turned toward her door.  He knew it would be preserved by the spells protecting the room.  Even her scent would still hover in the air.\n\nWrenching his head violently in the opposite direction, Zoraster strode purposely away from Colette\u2019s door.  Such musings brought no gain.  Only when she walked again by his side would he think about those things.\n\nReturning to his room, Tharsas died once again \u2013 and Zoraster restored the wards upon the door.  He then vanished through the power of his magic.\n\n{*****~~o~~0~~o~~*****}\n\nThe light of the stone shining bright around them, Celes and Danica stood in the room where it was enshrined, with the old man who guarded it.  Though they were nervous walking toward the room, the sense of peace surrounding the stone had chased the trepidation away almost as soon as they entered the room.\n\n\u201cSimply remove the chains.  Here, in the presence of the stone, you need not fear the magic of the dark that empowers them,\u201d Tam instructed.\n\nDanica once again grabbed the chain to break it, but something caused her to change her mind.  Somehow, the violent action seemed wrong now, and so she unhooked the clasp of the chain, removing the pendant from around her neck.  Celes did the same, relief obvious in the features of both women as they looked at the shackles that had chained them to Zoraster for so long.\n\nTam explained, \u201cNow that they have been removed, the pendants will have no power over you, unless you should lock them about your neck again.  You may study them in safety, and perhaps learn much that can aid you in the years to come.  Though the magic that powers them is dark, it may still prove useful to discern the nature of the fell enchantments.\u201d\n\nDanica looked at Tam and asked, \u201cIs this the only place it is safe to remove them?  We\u2019re not the only ones bound by these to Zoraster.\u201d\n\nTam turned to the stone and held out a hand, tiny orbs congealed from the light surrounding the stone to swirl about the guardian\u2019s hand, finally settling in it.  He closed his hand, and when he opened it once more, six perfect pearls rested in his palm.\n\n\u201cTouch any such amulets with one of these, and the dark power will be neutralized.  You will then be able to safely remove it.  The stone offered six, so either you need that many for what you requested, or they shall have other uses in the future.  You will know when you need them.\u201d\n\nProducing a white silk bag from a pocket, Tam deposited the pearls inside and handed them to Danica.  She could feel the serenity coming from within the bag, exactly like the aura surrounding both Tam and the stone.\n\n\u201cWe have much to do.  I can provide you with knowledge and items that can aid you in escaping your Master\u2019s bonds.  Danica, I will guide you in the use of your mental powers, for there is something I am sure you will wish to do.  It is within your capability, although you have not yet attempted such a powerful exercise.\u201d\n\n\u201cI don\u2019t think you understand Zoraster\u2019s power, old one.  We have no choice but to kill him.  To do otherwise is to face death, or be enslaved again,\u201d Celes asserted, \u201cI don\u2019t think it\u2019s truly possible for us to defeat him.\u201d\n\nThe old guardian smiled.  \u201cBoth of you have great power, and you have an advantage Zoraster could never hope to counter.  You have love, hope, and compassion as your most potent weapons.  You stand together, where Zoraster will always stand alone.\u201d\n\n\u201cI don\u2019t know whether it will be enough either, but I\u2019m done being his pawn.  I hate to think about the things I\u2019ve done in his service,\u201d Danica remarked.\n\nTam explained, \u201cThe enchantments on the amulets are very subtle, and many-layered.  They released drugs that suppressed your inhibitions, enhanced your desires, and kept you tractable.  You will probably discover many things now stand out as far more disturbing in your memory than they have thus far.\u201d\n\n\u201cShow us what you know, Tam,\u201d Danica requested, \u201cIt\u2019s time for Zoraster to find out that his weapons have two edges, and they can cut him just as well as anyone else.\u201d\n\n{*****~~o~~0~~o~~*****}\n\nDevan Ardane paced the floor at the top of her tower in Egoria, irritated by word from the King that Freeland was gathering information, but unwilling to mobilize until a clear threat appeared.\n\nShe thought, The world is moving toward and explosion, and Leoric is worried about disturbing his neighbors!  Freeland has been at peace too long.  We\u2019re going to end up standing alone against the first assault, whatever it is, and wherever it comes from.\n\nTossing her flaming red tresses, she looked out the window of her tower over the city.  In the marshalling yard, raw recruits trained.  Farther out, she saw a column marching out of the city toward the border.  In the rooms at the base of her tower, wizards trained in preparation to provide magical backup for the warriors.  Saggitariad marshaled his knights, and Mindblind his sellswords.  Vladamir was converting new warrior-clerics to the service of Heraklan at a furious pace.  Redbear\u2019s nomadic people grudgingly prepared for war once more.  Geflon\u2019s Dwarven brethren forged weapons and armor day and night, preparing to defend their newly regained ancestral delving.\n\nWar was coming; the stink of it hovered in the very air.  It might be years before the forces building now were unleashed, but the war would come.  At least we\u2019ll be ready, or as ready as we can be, Devan mused.\n\nWalking away from the window, smoothing out her dark purple robes, Devan decided she needed a distraction.  There was little more she could do at this point, and worrying over it was accomplishing nothing.  Her lips twitched into a smile as she thought about one of the young apprentices who had started this morning.  He was handsome, with a ready grin and a booming laugh.  I wonder what he\u2019s got hiding under his robes, she thought, licking her lips.\n\nDevan froze in mid-step, feeling a touch against her mind.  She started to bark out the command words that would activate the many defenses of her tower, but they fell from her lips when a voice sounded in her mind.  Devan, don\u2019t talk, just think, I\u2019ll hear you.\n\nDevan complied, angrily thinking back, Danica, you\u2019ve got a lot of explaining to do little miss!  Where have you been and...\n\nPlease just shut up for a minute, Devan.  This isn\u2019t as easy as it might seem, and I don\u2019t know how long I can keep it up.\n\nBemused, and more than a little pleased by the strong tone of her sister\u2019s mental voice, Devan thought back, Okay, Danica, I\u2019m listening.\n\nI\u2019ve been a prisoner all these years.  It\u2019s my own fault, and I\u2019m going to do something about it.  You have to promise me that you\u2019ll get Dad and Daniel somewhere safe.  They need to be protected from powerful magic.\n\nWho is holding you?  Where are you?  I\u2019ll...\n\nMy head is really starting to hurt, promise me Devan!\n\nOnce again stunned by Danica standing up to her so firmly \u2013 Devan replied, I\u2019ll take them to Darkni\u2019s island.  They\u2019ll be as safe there as anywhere in the world.\n\nDevan could feel a wave of relief through the mental connection with her sister\u2019s next thought.  Thank you.  I don\u2019t think I can keep this up much longer.  Watch my shop; I may need your help if we survive this.  If I don\u2019t see you again, I love you, Devan.\n\nDanica, let me come help you, whatever it is you\u2019re facing.  You\u2019re scaring me.\n\nI\u2019m scared too, Devan, but Celes and I have to face this alone.  Beware of prostitutes, be ready for demons, and prepare for war.\n\nDevan started to reply to her sister, but felt the mental connection vanish.  Letting out a growling scream, she stomped her foot hard, and then started to curse.  After a few minutes of venting, she spoke the words of a spell and vanished from her tower, to keep her promise, and see if Darkni could locate Danica.\n\n{*****~~o~~0~~o~~*****}\n\n\u201cI still don\u2019t see why you didn\u2019t tell her everything,\u201d Celes said when she saw Danica\u2019s eyes open.\n\nWincing and holding her aching head, Danica replied, \u201cIf she knew about Zoraster, she\u2019d come.  I want her and Darkniciad protecting my family.  This is my fight \u2013 our fight \u2013 Celes.  I have to stand on my own for once.  I got into this without Devan\u2019s help, and I\u2019ll get out of it the same way.\u201d\n\n\u201cIsn\u2019t that just a little stubborn and irrational?\u201d  Celes asked.\n\nTam answered the question for Danica, \u201cPerhaps, but she is right.  The two of you are the key.  You must face Zoraster, and defeat him.  No other can aid you.  They would be in needless danger, and might prevent your chance of success.\u201d\n\nCeles threw up her hands.  \u201cOkay, I give up.\u201d\n\nTaking Celes\u2019 hand in her own, Danica said, \u201cI won\u2019t ask you to risk this, Celes.  You could stay here.  Zoraster can\u2019t reach you here.\u201d\n\nCeles shook her head.  \u201cI\u2019m as tired of being his slave as you are.\u201d  Celes pointed a thumb at Tam as she spoke, \u201cThis plan of his might work, and even if it doesn\u2019t, we\u2019re likely to be dead and beyond the madman\u2019s reach.  How many will suffer on our behalf if we just disappear?\u201d\n\nDanica nodded in agreement.  \u201cAre we ready, then?  It\u2019s been four days already, he\u2019s surely on the verge of doing something awful already.\u201d",
        "\u201cRest this day, Zoraster will not harm those you love this night,\u201d Tam assured them.\n\nDanica asked, \u201cHow do you know?\u201d\n\n\u201cThe stones communicate in some way, they know each other.  The one which influences Zoraster is only recently awakened, and has not yet acclimated itself well enough to this reality to shield against the stone I guard.\u201d\n\n\u201cWe\u2019ll stay.  Thank you for everything you\u2019ve done,\u201d Danica said, laying her hand on Tam\u2019s shoulder.\n\n\u201cWould that I could offer more help, but I believe you can overcome the dangers and succeed,\u201d Tam responded with a smile.  \u201cSupper should be ready.  Let us eat, and then you can spend this evening together.\u201d\n\n{*****~~o~~0~~o~~*****}\n\nBack in the room given to them after eating, Danica turned to face Celes after closing the door.  She started to speak, but Celes cut her off.\n\n\u201cDon\u2019t talk about it.  I just want to be with you tonight.  We know we have this night together, and I don\u2019t want to waste it.\u201d\n\nDanica crossed the room, embraced Celes, and moments later, their lips met.  The kiss was long, soft, and sweet.  While their passions were high, neither woman wanted to give them full vent yet.  They parted from the kiss, ending it with several pecks in perfect synchronization, so connected that they knew exactly what the other was going to do instantaneously.\n\nCeles slowly untied and unhooked the closures of Danica\u2019s robe, letting her fingers glide over the silky cloth, and the soft skin beneath.  When the top of her robe was unbound, Danica shrugged it off, reaching up to pull the straps of her brassiere down off her shoulders as well.  Celes finished with the hooks of the robe, and glided her hands up Danica\u2019s hips.\n\nDanica put her hands on Celes\u2019, guiding them higher, up her sides and to her breasts.  Celes cupped the heavy globes in her hands for a moment, leaning down to kiss the valley between them.  \u201cI\u2019ve waited so long, Danica.  It hurt so much,\u201d Celes whispered, looking deep into Danica\u2019s eyes.\n\n\u201cWe don\u2019t have to wait any more,\u201d Danica whispered back.\n\nDanica let her robe pool to the floor, pulling Celes into a kiss and working on the closures of the other woman\u2019s robe.  Celes leaned her head back and moaned in contentment as Danica\u2019s hands moved slowly down her body, opening the robe as she went.\n\nCeles\u2019 breasts were bare beneath the cloth.  Her brassiere no longer fit properly, not the right size for her young body.  Danica could not resist pausing to run her fingers over the firm orbs before continuing to open Celes\u2019 robe.\n\nCeles tingled with aching need, but resisted the temptation to simply fall into Danica\u2019s arms.  She knew now that the release of that tension would come, and she wanted to enjoy the journey.\n\nDanica opened Celes\u2019 robe, helping the other woman shrug it away from her body.  Celes\u2019 panties fit no better than her brassieres had, but she apparently had chosen not to go without them.  It took only a slide of Danica\u2019s hands down Celes\u2019 hips to pull them away.  A slight parting of Celes\u2019 legs let them fall with a whisper to the floor.\n\nDanica\u2019s eyes rolled up in her head as she breathed in deep the scent of Celes\u2019 arousal.  Wetness glistened between the woman\u2019s nether lips, and Danica licked her lips thinking about slipping her tongue between Celes\u2019 warm folds.  The time spent with Celes had been no less painful for her, seeing the woman young and vibrant, as she should be.\n\nCeles slipped her fingers beneath the cloth of Danica\u2019s panties, tugging them down from her hips.  She let her hands linger on Danica\u2019s bottom as the redhead stepped out of her panties.  Once the last bit of concealing cloth fell away, Danica took a step closer and put her hands on Celes\u2019 firm buttocks, pressing her body tight against the other woman and kissing her.\n\nThe kiss lasted for long minutes, their tongues dancing over each other, even as their hands roamed soft flesh.  Both women purposely avoided touching each other where they most wanted to be touched, adding fuel to the fires of desire burning deep within them.\n\nAt last, Celes could wait no longer.  She leaned down and curled her tongue around Danica\u2019s right nipple, drawing it between her lips and sucking it.  Danica gasped, putting her hands on the back of Celes\u2019 head and running her fingers through the woman\u2019s dark locks.\n\nCeles moved her head across Danica\u2019s body, suckling the other nipple between her lips for a few moments, teasing it with her tongue.  She then traced kisses down Danica\u2019s body, toward the auburn triangle of hair above her sex.  The scent of Danica\u2019s arousal was dizzying, causing Celes\u2019 pussy to tingle as it released its own juices in anticipation.\n\nKneeling down, Celes parted Danica\u2019s legs slightly, and then curled her hands around Danica\u2019s legs, gripping her thighs from behind.  As soon as her fingers locked around Danica\u2019s soft flesh, she leaned in and slipped her tongue between the folds before her.\n\nDanica yelped and parted her legs a little wider, putting her hands on Celes\u2019 shoulders to steady her weakened knees.  The dark-haired beauty lapped and sucked her folds with unbelievable expertise, the kind that only a lifetime of lying with women alone could teach.\n\nCeles let out a high-pitched moan as Danica\u2019s juices swirled over her tongue.  As intoxicating as the scent of Danica\u2019s arousal was, the taste was a hundred times so.  Feeling Danica quiver from her touch only increased Celes\u2019 desire, and she felt a single drop of wetness running down her thigh.  As Danica\u2019s breathing became sharper, Celes sucked the woman\u2019s large inner lips into her mouth, looking up at Danica and wiggling her head back and forth.  Danica\u2019s eyes went wide, and Celes moaned around the labia between her lips as she teased them with her tongue.\n\nThere was no warning when Celes moved to engulf Danica\u2019s clit between her lips.  Danica let out a scream of pleasure, which trailed off into a groan of ecstasy, and felt her inner fires surge to white-hot intensity.  Her muscles stiffened, and she had to pant for breath as her orgasm surged up like a wildfire.  Danica screamed, barely able to support her wobbling legs, gushing a flood of her juices over Celes\u2019 face.\n\nCeles moaned into Danica\u2019s sex as the torrent of wetness covered her face and breasts.  She continued to lap and suck, holding on tight to Danica\u2019s trembling legs, keeping the woman\u2019s climax at a peak for long moments.  Only when Danica\u2019s legs nearly collapsed beneath her did Celes relent, because she was completely enraptured with the bittersweet taste of Danica\u2019s fluids, flowing over her tongue in such abundance.\n\nWhen Celes released her legs, Danica stumbled back a step to the bed and collapsed upon it.  She let out a long warbling moan, cupping her rhythmically contracting pussy in her hand, pressing hard against her clit with the heel.\n\nDanica continued to quiver as Celes climbed into the bed with her, whispering into her ear, \u201cYou taste so good, Danica.  I love feeling you come on my tongue.\u201d\n\nDanica gasped and rolled over Celes, grinding her sex against the other woman\u2019s leg, kissing her hard.  She then started lapping her juices from Celes\u2019 face, reaching down at the same time to slide two fingers into Celes\u2019 heat.\n\nCeles broke away from the kiss, took two quick, sharp breaths, and said, \u201cI need your lips on me Danica, I feel like I\u2019m going to burn up.\u201d  She then pushed down on Danica\u2019s shoulders.\n\nDanica needed little encouragement, moving quickly down to stab her tongue into Celes\u2019 hot canal.\n\nIt was several hours later when they slipped into spent slumber, as they had the night before.\n\n{*****~~o~~0~~o~~*****}\n\nThe next morning, the women armed themselves for battle.  Rings adorned every finger, and more than a few toes.  Wands were at the ready in belts designed to hold them around their waists.  More magic rested in their bags of holding, ready to be unleashed.  They intended to do their best to defeat the man who had enslaved them for so long.\n\nTam asked, \u201cYou are ready, then?\u201d\n\n\u201cAs ready as we can be,\u201d Celes replied.\n\n\u201cWe have each other, he has nobody, and we\u2019ll have surprise on our side,\u201d Danica stated firmly.\n\n\u201cI hope it\u2019s enough.  It\u2019s time he paid for what he\u2019s done to us, and what he made us do.\u201d\n\nTam took up one of each woman\u2019s hands, bringing them together and said, \u201cGo, my prayers will be with you.  Within the two of you, and others like you, rests the hope of this world.  Share your love, and your friendship, for that is your strength.  Trust in each other, and you shall prevail.\u201d\n\n\u201cWe will,\u201d both women said in unison, and then laughed at that occurrence.\n\n\u201cIt\u2019s time to make that mad fuck pay,\u201d Danica declared, her eyes turning hard.\n\n\u201cFor us, and everyone else he\u2019s made into a toy for his amusement,\u201d Celes agreed with equal determination in her voice.\n\n\u201cI love you, Celes.\u201d\n\n\u201cI love you too, Danica.\u201d\n\n\u201cLet\u2019s go,\u201d Danica said with a nod.\n\nCeles chanted the words of the teleportation spell and they vanished from the chamber in a burst of light.\n\n\u201cGods bless them and keep them,\u201d Tam muttered when they vanished.  He turned and walked with quick steps to the room where the stone rested, there to await the outcome of a battle that might very well determine the fate of the world.\n\n{*****~~o~~0~~o~~*****}\n\nZoraster\u2019s mouth hung wide open, and his eyes bulged in anger when he felt Danica and Celes brush up against the magical wards around his complex.  He could not feel them through the amulet, and that meant they had found a way to remove the ones that should have been around their necks.\n\nFurthermore, he could not sense the power of the stone, and he knew they had failed.  A scream of inarticulate rage erupted from him, quickly followed by the snarled words of a spell.  Zoraster vanished, leaving a thick cloud of smoke \u2013 reeking of brimstone \u2013 in his wake.\n\nHe appeared outside Danica\u2019s rooms, where he could sense the women were, and started to tear apart Danica\u2019s wards.  His anger only increased because he had to concentrate upon the task of penetrating the wards.  Zoraster wondered if perhaps he had let Danica grow too powerful.  Nevertheless, the wards fell before the might of his magic, and he blasted the door inward with a gesture.\n\nStomping into the room, he found the women waiting for him, armed with all manner of magical paraphernalia.  Slamming the door shut behind him, he started to inform them of the pain they would endure for their failure.\n\nAnd then he noticed Celes.\n\nHis face twisting into a mad mask of mindless hate, he spat out, \u201cSo, did you enjoy suckling her withered flesh, Danica?\u201d\n\n\u201cAs a matter of fact \u2013 yes I did, you crazy bastard,\u201d Danica retorted and hurled something to the floor.  At the same time, she screamed the command words that would reactivate her runic wards.  Zoraster would have to take the time to break them in order to escape, or to summon aid.\n\nZoraster felt the oppressive weight of the dispell burst from the shattered crystal sphere Danica had hurled, and chuckled when he felt the Armor of Dispelling contingency spell upon his robe leap into being.\n\n\u201cYou\u2019ll have to do better than that to neutralize my power, woman.  You will both suffer now for this, as will all those you care about.  You need a stark reminder of your place, and my power.\u201d\n\n\u201cOh, shut up!\u201d  Celes screamed and made a sweeping gesture with her hand.  Zoraster\u2019s eyes went wide when the force of Celes\u2019 power slammed into him, hurling him back a pair of steps.\n\n\u201cSo, you\u2019ve accepted your witch blood, I see,\u201d Zoraster snarled, stepping forward again, \u201cYour pitiful abilities will do you no good.\u201d\n\n\u201cNow,\u201d Danica said to Celes.\n\nOnce again, Celes gestured, and at the same time, Danica lashed out with her telekinetic powers. \n\nThis time the attack hurled Zoraster back against the wall, and he screamed in a mixture of surprise, rage, and pain when he hit the stones.\n\nBoth women pulled wands from their belts, discharging the magic missiles at the Archmage.  None reached him, but each one weakened the Armor of Dispelling that protected him by a fraction.\n\nSensing the danger, Zoraster extended his arm and cast out his will.  A moment later, he closed his fingers around the staff that materialized in the palm of his hand.  Instantly, the magical protections of the staff strengthened his defenses, even hurling a few of the missiles back at the women.  The magical darts dissolved against shields surrounding both Danica and Celes.\n\n\u201cYour moment of surprise is over.  Now you shall see true power!\u201d Zoraster thundered, and struck his staff hard against the floor.\n\nDanica and Celes both felt their hope drain away with the power of the dispell.  They had no idea how they were going to stand up to the Archmage in full possession of his powers.\n\nDanica cast her thoughts to Celes, We have to hammer him, keep him off-balance.  Save the other orb until we have little choice.\n\nAye, was Celes only answering thought, as she started casting a spell.  Still partially connected to the woman\u2019s mind, Danica knew Celes was casting Chain Lightning.\n\nZoraster had never anticipated that the women might actually confront him openly, let alone with such a stealthy attack.  In addition, a red rage blinded him upon seeing his curse on Celes broken.  He snarled out the words of an entrapment spell, thinking to torture them both, and anyone else who might cause them emotional pain, for many days to come.  The spell came into being, but the protective items the women wore dissipated it.\n\nNo matter, I will wear down their defenses as they sought to do to me, He thought, beginning another, simpler spell.\n\nCeles completed her spell, the training of the battle mages at the Forge serving her well.  She completed the complex casting in a quarter of the time it would take most wielders of the Art.  A rush of ecstasy shot through Celes as the angry bolts leapt forth from her fingers.  With her youth restored, she now commanded the full might of her powers.  Just as was Zoraster, she was an Archmage, born with a strong innate link to magic.  The power flowed from her and crackled about Zoraster, still not penetrating his shields, but certainly weakening them.\n\nAs the conflagration of arching bolts settled down, Zoraster\u2019s missiles streaked at both Celes and Danica.  They weakened the protections, but neither was in any real danger yet.\n\nCeles screamed, \u201cYou\u2019ll not take us so easy, madman.  We\u2019ll make you pay.\u201d\n\nDanica completed her spell a moment later, the Multiplicity linked to every missile spell she knew \u2013 nearly every one in existence.  Four score bolts of fire, acid, electricity, and all manner of magical energy leapt from her hands and streaked unerringly toward the scowling Archmage.  They dissolved into motes upon striking his shields, but the barrage certainly would have done significant damage to many types of magical shielding.\n\nKnowing the women\u2019s plan, and determining that it could prove effective, Zoraster changed tactics.  Celes and Danica were both casting again, and Zoraster aimed his staff at a point directly between them and discharged one of its enchantments.  The resulting concussion of the fireball\u2019s explosion even staggered him back a step, though he had prepared for it.\n\nDanica was pleased to note, as the hellish inferno abated, that the runic defenses she had placed upon her belongings after Camilla\u2019s attack were effective.  Even the bedclothes remained untouched.  She could not say the same for her magical defenses, the power of the spell having greatly weakened them.\n\nWe have to get that staff away from him, Danica thought to Celes, and then began casting a shielding spell to stave off the deterioration of the defenses offered by her numerous magic items.\n\nShe caught Celes\u2019 thoughts even as she cast, I just tried to vanish it outside with my powers, but I couldn\u2019t get a hold on it.  I tried to jerk it out of his hand too, and that worked, but he was ready.\n\nDanica completed her spell and thought, Put up a shield Celes, we need time.  Keep trying to get that staff away from him; I\u2019ll keep him off balance.  If we get the staff away, we\u2019ll use the other orb.\n\nZoraster had obviously noticed Celes still casting her shield spell, and turned his staff on her.  Danica quickly cast a spell, putting a reflective barrier between the dark mage and Celes.  The battle mage technique served her just as well as Celes, because she got the defense up in time to reflect the lightning bolt harmlessly into the ceiling above.\n\nZoraster screamed in frustration, amazed at how quickly the women were answering his magic.  They did not possess his power, but they joined together in a common purpose.  Concentrating, he turned his attention to stronger, more deadly magics.\n\nDanica recognized the words of the Disintegration spell passing from Zoraster\u2019s lips, and quickly cast a lighting bolt, hoping to distract him from completing the spell.  Her bolt shattered harmlessly against Zoraster\u2019s defenses, and he didn\u2019t falter in his chant.\n\nCeles too recognized the spell Zoraster was casting, and knew that it would take all her strength to hold her shield against it.  If it penetrated, the power of that spell could very well render the magic items protecting her useless.  Knowing she had a few seconds, she growled and again tried to teleport away his staff.  Once again, her power failed her.\n\nDanica jerked a wand from her belt and sprayed flaming meteorites at Zoraster, exhausting the power of the wand in a single burst.  It was no more effective than the lightning bolt, and Zoraster completed the spell with a final word, pointing at Celes.\n\nCeles screamed as the power roared into her shield.  She held it strong, but knew it was faltering.  Refusing to surrender, she poured all her will into keeping her defense intact.  When it shattered, her consciousness fled with it.\n\nDanica cursed, seeing Celes collapse.  She knew the spell must have rendered nearly all Celes\u2019 protective items useless.  The Archmage aimed his staff at Celes, glancing at Danica to see what she was doing.\n\nDanica touched her forehead, letting the runes covering her body blaze into brilliant light where her skin was exposed.  \u201cWhy don\u2019t you try coming after me, you crazy fuck,\u201d she challenged.\n\nZoraster spun on her with the unnatural, towering fury he had exhibited both previous times that epithet had passed her lips.  He strode quickly toward her, thundering in a magically enhanced voice, \u201cDON\u2019T CALL ME THAT!\u201d\n\nDanica spoke the name of a rune, summoning up a crackling ball of energy in her palm.  She hurled it at the furious Archmage, but he batted it away with his staff.  \n\nDanica saw the flash in his shields, and knew the runic attack had been effective in eating away at their power.\n\nHis hand curled into a claw, Zoraster reached her with astonishing speed.  There was nothing but madness in his eyes, and Danica lashed out with the one weapon she had not yet exposed.  Balling her hand into a fist, she summoned up the psychic knife.  When the Archmage reached her, his hand going for her throat, Danica stabbed the weapon of pure psionic force into his head.\n\nZoraster screamed and lurched back, but not before a sparkling nimbus of electricity from a ring on his finger tore through Danica.  Her shield shattered instantly, and the magic items on her person went dark in her mind.  Danica\u2019s clothing burst into flames in a dozen places, and she had to stagger back, tearing them off, while Zoraster held his head and screamed.  She even had to shed her undergarments when they succumbed to the electrical onslaught as well.  Her runic defenses protected her flesh, but nothing more.\n\nStepping away from her burning garments, Danica seized the moment.  Limited though the contact had been, Zoraster had not been prepared for her psionic attack, and his concentration faltered.  Concentrating, she forced her consciousness into the mad morass that was the Archmage\u2019s mind.",
        "Already stunned by the psionic knife, Zoraster\u2019s consciousness retreated away from the intrusion, his mind acting naturally to defend itself from a common center.  Danica hammered at him, pushing forward and shattering his mental defenses.\n\nDanica\u2019s senses screamed when she sensed a dark, powerful presence surging forward in Zoraster\u2019s mind.  The god Blorcasir seized upon the Archmage\u2019s incapacitation, hoping the mage would die so that he could escape and reconstitute his physical body.  He added his will to Danica\u2019s, punching into Zoraster\u2019s mental defenses.\n\nDanica saw a weakness, and immediately exploited it, breaking through into his consciousness.  The tangled web of Zoraster\u2019s schemes was near indecipherable.  The many layers would take hours to fathom, and Danica tore her mind away from them.  Glimpses of his inner sanctum appeared to her, as well as the magic necessary to enter it.  Then memories of her, and those that she had encountered, drew her attention like a beacon.\n\nAnger welled up inside Danica as she sifted through the memories.  Her first encounter with Tonda was there, and Danica knew that memory was a threat to Tonda, her husband, and their unborn child.  Instinctively, she lashed out at the memory as she had in Marlena\u2019s mind, and it shattered like glass.\n\nAnother memory, one of Hathortari, exploded into shards next.  Danica sifted through the Archmage\u2019s reeling mind, destroying every memory she could find, defending those she cared about in the only way that was possible.  For every memory she vanquished, another person was safe, even if she and Celes should fail.\n\nA wail of anguish erupted within Zoraster\u2019s mind, and Danica felt the presence of Blorcasir shoved back.  An even darker, even more ominous presence replaced it, and something suddenly thrust Danica out of Zoraster\u2019s mind as well.\n\nYelping and grabbing her head, Danica fell hard to the stones.  She felt like a knife was stabbing into her brain, and an unnatural chill permeated her flesh.  Opening her eyes, she saw Zoraster regaining his senses as well.\n\nScrambling to her feet, Danica glanced over to see Celes still unconscious.  Looking back at Zoraster, she saw his eyes focus on her.  Those orbs turned hard as stone, and Zoraster spat out, \u201cMind Witch!\u201d\n\nZoraster leveled his staff at Danica, and she taunted, \u201cMissing something, you arrogant fuck?\u201d\n\nRed-hot hatred flared in Zoraster\u2019s eyes, and he screamed, raising his staff over his head as he lunged at Danica.  Danica jumped out of the way when Zoraster swung the staff down at her, the enchantments upon it shattering the chest of drawers he struck into thousands of splinters.  One chunk, several inches long, slashed across Danica\u2019s abdomen, drawing an angry line of blood.\n\nDanica spoke the name of a rune, cupping her palm over her forearm where the rune was drawn.  An image of the rune rose up, burning white hot, and Danica hurled it at Zoraster.\n\nThe rune magic blasted through the enraged wizard\u2019s defenses, setting his robes aflame.  He ignored the flame and raised his staff to strike again, but started when he found it suddenly gone from his grasp.\n\nDanica glanced over and saw Celes finish her gesture.  Fear was the trigger that unleashed her power to teleport, and seeing Danica in mortal danger had sparked that fear.  Reaching into her robes, Celes withdrew the crystal sphere and shattered it upon the floor before her.\n\nThey all felt the gloom settle over them.  The second sphere destroyed all magic, not just that summoned with word and gesture, but that contained in items as well.  The Art was now utterly useless in this room.\n\nZoraster stabbed his hands into his burning robes, withdrawing the obelisk in his blackened hand.  Instantly, the flames winked out and his flesh slowly healed before Danica\u2019s eyes.  Transforming the obelisk into a dagger with a thought, Zoraster advanced upon Danica.  \u201cI can see you are too dangerous to live \u2013 a pity,\u201d Zoraster croaked, his voice becoming stronger by the moment as the energy of the god trapped within the blade flowed through him.\n\nSeeing one of the shattered chunks of wood on the floor, nearly a foot long and shaped like a stake, Danica grabbed it with her telekinetic powers and hurled it at Zoraster.  At the same moment, Celes did the same with her inborn power, the one triggered by anger.\n\nZoraster stopped, Godsbane falling from his nerveless hand.  Blood fountained from his mouth as he glanced down, a look of stunned surprise crossing his features.  One spear of wood pierced his throat, and the other his heart.\n\nZoraster \u2013 Master of a vast hidden empire, and one of the most powerful mortals ever to walk the planet \u2013 collapsed in a broken, smoldering heap to the floor.\n\nDanica watched in horror as his hand clawed for the nearby dagger for a moment.  Both Danica and Celes tried to move the blade with their powers, but found it resisted them.\n\nZoraster\u2019s hand ceased it\u2019s scrambling and collapsed to the floor, still curled tightly into a claw.\n\nCeles hurried to Danica\u2019s side, the auburn haired woman moving closer to Zoraster to examine him.  Through the haze of sickly-sweet smoke, Danica could see he was not breathing.\n\nA chuckling sob escaped Danica, \u201cIt\u2019s over!\u201d\n\n{*****~~o~~0~~o~~*****}\n\nStaring into his scrying mirror, Rogan Illiciat felt something he had not felt for a very long time \u2013 his own mortality.  Only the old Guardian and Zoraster could match his power, and one of those had just fallen.\n\n\u201cI suppose I shall have to give more credence to the mad ravings of the prophets.  They have come.\u201d\n\nHe vanished in a flash of light.\n\n{*****~~o~~0~~o~~*****}\n\nTam\u2019s eyes popped open, and a great smile spread across his face.  \u201cThey are the ones \u2013 they are the hope we have awaited!\u201d\n\nVellana\u2019s brow furrowed.  \u201cThe champions the prophecies speak of?\u201d\n\n\u201cYes, Vellana, the universe has been awaiting this moment since its birth.  The presence of the stones in this reality is an aberration, and now they shall contend for dominance through those that they prepared in the beginning, even as they slumbered.\u201d\n\n\u201cSo, it is true,\u201d Illiciat said, appearing before the pair at the table.\n\nThe Guardian nodded, his smile vanishing.  \u201cYes, those two \u2013 Danica Ardane and Celes Hartwell \u2013 they are the heart and soul of those who will stand against the dark.\u201d\n\nIlliciat laughed, \u201cI know you don\u2019t like me, old man, and I don\u2019t like you either.  I may not serve completely of my own free will, but I will not see all cast into darkness.  I will play my part in this game \u2013 fear not.  In truth, I find it all quite fascinating, and there are benefits, of course.\u201d\n\nNow it was Tam\u2019s turn to furrow his brow.  \u201cI fear I understand you less than Vellana understands my motivations.\u201d\n\nPulling down the hood of his deep purple robe, Illiciat shrugged his shoulders.  \u201cThen obviously you are not meant to understand my motivations, else the stone would have revealed them to you.\u201d\n\nTam sighed.  \u201cI trust in her, and thus I shall trust in you.\u201d\n\nAll three then started, listening intently to the song of the stone, coming to them from its resting place deep in the cavern.\n\nSnorting in disdain, Illiciat asked, \u201cBah, what foolishness is this?\u201d\n\nThe Guardian laughed.  \u201cIn this I believe I have the advantage over you Rogan.  It is necessary, a part of her preparations.\u201d\n\nNarrowing his eyes, Rogan retorted, \u201cWe are not even to inform them \u2013 the ones who are supposed to be the hope of the world?\u201d\n\nTam shook his head, a look of compassion in his face.  \u201cNo, I fear their trials are not yet over, and they must meet them on their own.\u201d\n\n\u201cSometimes I believe your brains have been addled by the stone, Tamelauran.  I will abide by the order, thought I think it foolish,\u201d Illiciat said, and then simply vanished from the room.\n\nTam rose, holding out his hand to Vellana.  \u201cCome, you have your part to play as well, my dear.  It is time for us to go and commune with the stone once more.\u201d\n\n\u201cYes, Master.\u201d\n\n{*****~~o~~0~~o~~*****}\n\nDanica reached out with her mind, opening the door to her closet and the door of a cabinet in her study at the same time.  Concentrating, she used her telekinetic powers to pull a fresh robe from the former, and a wooden box from the latter.\n\nShe directed the box into Celes\u2019 hands, and started pulling on the robe as quickly as possible.  \u201cWe need to get Andrea and Marlena, and get out of here.\u201d\n\nCeles nodded.  \u201cWe may have a fight on our hands.\u201d\n\nIgnoring the clasps and simply tying the robe closed, Danica closed her eyes and sent her thoughts hurtling out beyond the walls of her room.  A moment later, she opened her eyes again and said, \u201cNo, there doesn\u2019t seem to be any alarm.  My rune defenses and the dispell must be blocking anyone from discovering that Zoraster is dead.\u201d\n\nZoraster is dead.  The words sent giddy disbelief flooding through both women.  If it were not for his still smoldering corpse lying on the floor not far away, they likely would not believe it to be true.\n\nDanica nodded to the wooden box.  \u201cReplacement rings.  We probably both don\u2019t have enough magic on us right now to deflect a cantrip.  Those aren\u2019t as strong as our usual items, so we\u2019ll have to be extra careful.\u201d\n\nCeles nodded and opened the box.  At that moment, Danica had a flash of inspiration, one that felt quite unnatural.  The thought felt like something that she had always known, but only now allowed her to sense it.\n\n\u201cJust a second, I\u2019m going to try something.\u201d\n\nCeles asked, \u201cWhat, Danica?\u201d\n\nDanica was already concentrating, however.  Pressing her forearms and palms together, Danica held them before her and summoned up the power of the runes scribed upon her flesh.  She spread her arms wide, and then pulled them back together slowly, cupping her hands and turning toward the dead Archmage.\n\nCeles felt the dispell leave the room.  \u201cIs that a good idea?  Gods only know what kind of dangerous magic he might still have on him.\u201d\n\n\u201cThe dispell is still around him,\u201d Danica explained.\n\nCeles\u2019 eyebrows rose.  She walked over toward Zoraster, and a few steps away felt the dispell chill her again.  Stepping back out of the range of the dead magic zone, she turned to Danica and asked, \u201cHow did you do that?\u201d\n\n\u201cI just...  I knew how.  I don\u2019t know why, but I did,\u201d Danica replied, and then her eyes lit up and she crossed the room toward her lab, holding out her hand.  A tooled leather bag leapt from a shelf and sped into Danica\u2019s hand.\n\n\u201cI\u2019m not leaving anything for his servants,\u201d Danica remarked, and opened the bag.  Walking to each room in turn, Danica spoke command words, packing up nearly everything in her rooms into the Satchel of Hasty Departure.\n\n\u201cI guess we won\u2019t have to take down my defenses either.  I can teleport us out of here even through them,\u201d Danica explained.\n\nCeles pulled off one of the rings on her finger and replaced it with one from the box, placing the drained one in her pocket for later recharging.  \u201cLet\u2019s get ready and get out of here then.\u201d\n\nA memory flooded into Danica, one she had found while within Zoraster\u2019s mind.  She knelt down and pulled at Zoraster\u2019s charred robes, finding what she sought in a pocket within.  Withdrawing the crystal sphere, she handed it to Celes.\n\n\u201cOh, my love,\u201d Celes whispered, sensing her lover\u2019s spirit trapped within.\n\nDanica hugged her and then said, \u201cWe\u2019ll find a way to free her.  We need to get our magic items replaced and escape while we can.\u201d\n\nThe women exchanged their depleted defensive magic items for new ones, and then joined hands, vanishing from the room.\n\nThey appeared a moment later in Marlena\u2019s room, startling the woman.\n\n\u201cQuickly, we want to get to Andrea \u2013 and Brandon,\u201d Danica added his name when it flashed through her mind.\n\nCeles nodded.  \u201cGood idea, he\u2019s too good for this place.\u201d\n\n\u201cWhat are...\u201d\n\nDanica cut Marlena off with a wink and a smile, taking the other redhead\u2019s hand in hers, and then taking Celes\u2019 hand.  Once again, they vanished on the wings of magic.\n\nBrandon was no less surprised than Marlena had been by the women\u2019s sudden appearance.  They didn\u2019t even give him a moment to protest.  Celes simply grabbed his hand and winked them all out of the room.\n\nAndrea screamed when they appeared in her humble home. Danica shivered when she felt a sudden chill settle over the room.  She noticed the others were likewise reacting to the unexplained cold.\n\nAndrea laid a hand over her heart and exclaimed, \u201cYou scared me half to death!\u201d\n\nBrandon asked, \u201cThe hell is going on?\u201d\n\nDanica answered, \u201cWe\u2019re leaving.  I can\u2019t explain right now, but this is not going to be a pleasant place very soon.  We want you to come with us, where you\u2019ll be safe.\u201d\n\nAndrea smiled.  \u201cI\u2019ll go.  I couldn\u2019t bear losing more friends.  Celes, is that you?\u201d\n\nCeles responded in her brogue, \u201cWell, who\u2019re ye thinkin\u2019 \u2018twould be, lil\u2019 missy?\u201d\n\nAndrea caught Celes up in her arms, tears streaming down her cheeks.  \u201cOh, that\u2019s so wonderful, Celes!\u201d\n\nCeles felt other arms closing around her then as well, Marlena adding her joy at seeing Celes\u2019 curse broken to that of Andrea.\n\nPushing them away, Celes said, \u201cThere\u2019s no time for that now.  Will you come too Brandon?\u201d\n\nA mischievous smile crossing his lips, Brandon replied, \u201cFour beautiful, sexy women are asking me to come away with them.  What kind of idiot do you take me for?\u201d\n\nHe put his arms up defensively when four simultaneous slaps hit him, the entire group laughing.\n\nThe door suddenly burst open and a gust of magical wind rushed over them.  A robed man stood in the door, his face hidden beneath the hood.  His voice was ominous when he said, \u201cSomething is amiss here.  I am going to detain you until the Master can be consulted.\u201d\n\nDanica, Celes, and Marlena all fell into their spell casting.  At the same time, Brandon drew his sword.  Anger burned in Andrea\u2019s eyes as she pointed at the intruder and shouted, \u201cGet out of my house!\u201d\n\nBrandon jumped back, and the other three women stopped their chants instantly when lightning leapt forth from Andrea\u2019s finger, catching the man in the doorway off guard and sending him twitching to the floor.\n\nDanica reacted quickly, grasping the man with her telekinetic powers and jerking him inside.  Celes gestured as soon as he was clear and slammed the door shut.\n\n\u201cWhat...  What was...\u201d Andrea said, staring at her hand and the shallowly breathing man on the floor.\n\nCeles slapped her forehead.  \u201cI can\u2019t believe I didn\u2019t think of it before now.  The fires whenever you were aroused, the wind whenever you got excited, the cold when we scared you a few minutes ago, and now the lightning when you were mad.  Andrea, you\u2019re a witch!\u201d\n\nHer eyes open wide, Andrea stammered, \u201cI\u2019m a what?\u201d\n\nDanica completed her spell casting, trapping the man in magical bonds and adding a slumber spell on top of it.  \u201cLater \u2013 we need to get out of here.  If my sister listened to me, I have help waiting to get us somewhere safe.\u201d\n\nDanica then turned away from the rest of the group and chanted the Hellgate spell.  As soon as it opened, she gestured for the others to follow and stepped inside.  They followed her instructions and Danica closed the portal behind her, breathing a sigh of relief.\n\n\u201cThis is nice,\u201d Brandon muttered, looking around at the glade.\n\n\u201cLooks can be deceiving,\u201d Celes responded, \u201cAndrea, you\u2019ve been using your natural powers without knowing it for a long time now.  How did your parents die again?\u201d\n\n\u201cIt was a fire.  The house was stone.  I don\u2019t know how it burned.\u201d\n\nCeles nodded her head knowingly.  \u201cIt was probably a demon then.  You\u2019re going to have to learn to control your powers, and use them.  We\u2019re both targets now.  Once the power is unleashed, it is like a beacon to hellspawn, dark warlocks, and evil witches.\u201d\n\nDanica finished centering the portal, the image of her dusty shop appearing within.  \u201cTime to find out if Devan can follow orders from her little sister,\u201d Danica said and opened the portal.  She stepped through, the others following her.\n\nAlmost instantly, Devan appeared in the shop next to them.  She glanced at the still open portal and said, \u201cHellgate?  Danica, you have a damn lot of explaining to do.\u201d\n\n\u201cI love you too, Devan,\u201d Danica laughed.  She then introduced the other four with her.\n\n\u201cCharmed, I\u2019m sure,\u201d Devan said impatiently.\n\nThe tone of Devan\u2019s voice lit up a memory in Danica\u2019s head.  She looked at her sister and said, \u201cDevan, do you use any sort of pattern to teleport to Darkni\u2019s island?\u201d\n\nDevan nodded, \u201cYes, that\u2019s much easier, and you can make longer jumps that way without risking the dangers of the Hellgate.\u201d\n\n\u201cThink about the pattern, like you were planning to use it,\u201d Danica asked.\n\nDevan shrugged her shoulders and let out an exasperated sigh, but did as Danica asked.  She felt her sister\u2019s mind touch hers, and then Danica said, \u201cThat\u2019s it, I\u2019ve got it.\u201d\n\n\u201cHow did...\u201d\n\nDanica cut her sister off with a thought cast into Devan\u2019s head, Like you said, I have a lot of explaining to do.  She then said, \u201cCeles, there\u2019s something I want to do.  Will you come with me, please?\u201d\n\n\u201cOf course, but what, Danica?\u201d\n\n\u201cI\u2019ll explain in the Hellgate.\u201d  Danica then turned to her sister and asked, \u201cDevan, can you take them back to Darkni\u2019s?  I\u2019ll be there shortly.  I know the pattern now, so I can teleport there.\u201d\n\nDevan countered, \u201cWhy don\u2019t we all go back to Darkni\u2019s, and then I\u2019ll go with you wherever it is you\u2019re off to.\u201d\n\nDanica shook her head.  \u201cDevan, I\u2019m a big girl; I can take care of myself.  I have to do this, and I want to know you\u2019re protecting the people I care about.\u201d\n\nDevan opened her mouth to argue again, but then she saw the look of determination, mixed with a faint hint of pleading, in Danica\u2019s eyes.  \u201cOkay, Danica.  You\u2019ve grown up.  Come back safe, or I\u2019ll track you down and spank your ass for you, then take you home so Dad can turn you over his knee too.\u201d\n\nAndrea and Marlena both walked up to Danica.  Andrea said, \u201cMake that three spankings.\u201d\n\nMarlena added, \u201cFour.\u201d\n\nBrandon laughed and said, \u201cAs long as everybody is joining in the fun...\u201d\n\nDevan turned and twitched her eyebrows at the warrior, and then turned back to Danica, \u201cSo, who\u2019s this then?\u201d\n\nDanica wiggled her finger at her sister, \u201cHands off \u2013 and that applies to everybody.\u201d\n\nDevan threw her head back and laughed, and then told Danica, \u201cWe\u2019re going to have a very long talk when you get back.\u201d\n\nMarlena and Andrea hugged Danica and Celes in turn.  Brandon then walked up and both women hugged him, kissing him on opposite cheeks.\n\nDevan held out her hands, and the others joined the circle.  \u201cWe\u2019ll see you soon.  Now, it\u2019s your turn to promise,\u201d she said to Danica.\n\n\u201cPromise,\u201d Danica said with a wide smile.\n\nDevan nodded and cast the spell.  As soon as they were gone, Danica turned to Celes and said, \u201cI was in Zoraster\u2019s mind while you were unconscious.  There are some things I have to do.\u201d\n\nCeles hugged her dear friend and lover.  \u201cI trust you, and I understand.  Let\u2019s go, quickly.\u201d\n\nDanica walked back through the portal, Celes right behind her.\n\n{*****~~o~~0~~o~~*****}\n\n\u201cDanica, we just escaped here.  Now you want to go back and rescue a bunch of unreal things Zoraster used to torment us?\u201d\n\nDanica brought the focus of the portal in on a door in the complex, and then turned to look at Celes.  \u201cIt feels too much like leaving part of us there.  Zoraster wasn\u2019t the only sick, twisted, evil bastard there either.  Maybe we can prevent someone from stepping into his place and continuing where he left off.\u201d\n\nCeles nodded.  \u201cOkay, you\u2019ve convinced me, but no dallying.  We get in there, do what we can, and get out.\u201d\n\nDanica hugged her, and then said, \u201cDon\u2019t worry; I have too much to live for to take too many risks.\u201d\n\nThey stepped through the portal, and Danica cast her thoughts out through the complex.  When she opened her eyes, she told Celes, \u201cThere are some uneasy people around, but there is no general alarm yet.  We still have time.\u201d",
        "Danica opened the door before her, and the bald keeper of Zoraster\u2019s gold raised his head.\n\n\u201cSo, you have come into your powers.  I suspected you would come, so I have waited to congratulate you.  My time watching here is done,\u201d the mentalist said with a smile.\n\nDanica thought to him, sending the thought to Celes as well so she would not be left out of the conversation, Who are you?\n\nHe returned the favor, letting Celes hear his thoughts back to Danica, Just one who would nurture great psionics, especially those who may hold the balance of the world in their hands.\n\nWith that, he turned transparent and streaked upward through the ceiling.  As he vanished, the wards upon a door behind him faded into darkness.\n\nCeles raised her eyebrows and asked, \u201cHow did he do that?\u201d\n\n\u201cI don\u2019t know.  He has powers I can\u2019t even begin to comprehend.  Let\u2019s get as much coin as we can quickly,\u201d Danica replied.\n\nCeles opened the door, and the two women marveled at the amount of wealth contained in this small room.  Opening a pair of small bags, Danica found precious gems.  A quick glance told her that the contents would probably be worth hundreds of thousands of gold.  She stuffed them into her bag of holding.  Celes was likewise filling her bag with sacks of coin and gems.\n\nAfter taking perhaps a half dozen bags, Celes shook her head and said, \u201cWe have enough to live like Queens for three lifetimes.  How much wealth did Zoraster have?\u201d\n\n\u201cI wish we had time to take it all, or destroy it, but we need to hurry.\u201d\n\nCeles nodded her agreement and dropped a final sack into her bag of holding.  Danica went back to the door of the storeroom and shut it.  She then made a few gestures and spoke words of command.  When she opened the door again, it did not open into the familiar hall beyond, but a more opulent chamber somewhere else.\n\n\u201cZoraster\u2019s inner sanctum,\u201d Danica whispered.\n\nCeles gave Danica a little prod.  \u201cQuickly \u2013 we won\u2019t want to stay here long.  Surely someone will raise an alarm with us being in here.\u201d\n\nDanica strode with purpose, appearing to know exactly where she was going.  She drew up short at a door just beyond the lavish entrance hall of Zoraster\u2019s under mountain home, another memory from Zoraster\u2019s mind popping into her head.  \u201cHis library, one of many that are exactly the same.\u201d\n\nShe then opened the door and Celes followed.  Danica hurried to a shelf, knowing exactly what she was seeking \u2013 and the command words that would activate it.  There on the shelf was a Satchel of Hasty Departure, one keyed to every book in this room.  She spoke the command word, and the books all turned into motes of light and streaked into the bag.\n\nCeles laughed.  \u201cLet\u2019s hope that stymies anyone from learning the darkest of his Art.\u201d\n\n\u201cThere may be information in here that can help us keep others from following in his footsteps as well,\u201d Danica added.  She then walked back to the door saying, \u201cLet\u2019s get the clones and get out of here.  I can feel tension in the air.\u201d\n\nOnce again, Danica proceeded unerringly through halls she had never before walked.  They passed a study room, a sitting room, and then came to the door Danica sought.  She opened it and the sounds of pleasure greeted both women.\n\nThe clones all writhed like a mass of snakes on the floor, their nude bodies roaming all over each other.  Danica turned to Celes and said, \u201cWe\u2019ll have to put them to sleep until we can break some of the spells over them.  Right now, only Zoraster\u2019s voice can command them.\u201d\n\n\u201cI\u2019ll do it, I was always good with mass sleep spells,\u201d Celes offered and started chanting the spell.\n\nWhile Celes cast her spell, Danica opened the portal again.  Once it was open and Celes\u2019 spell took hold, Danica levitated an unconscious clone through the portal with her mental powers.  In addition to the clones of her and Andrea that she knew about, there were several more of Andrea, Marlena, and Celes in the room.  Celes concentrated and managed to lift a clone of Andrea with her powers, guiding it through the portal as well.\n\n\u201cAt least it\u2019s working.  I was half afraid I\u2019d have to get mad before it would work, but this isn\u2019t easy,\u201d Celes mumbled, obvious strain on her face.\n\nDanica levitated her third clone through the portal with ease, \u201cJust get as many as you can, I\u2019ll take care of the rest.\u201d\n\nIt took only a few minutes to get the clones all through the portal, but it felt like hours to the two women, who sensed that an alarm was imminent.  Once the copies were all within Danica\u2019s pocket dimension, she peeked her head in and warned the denizens of the place to keep their hands off the sleeping copies.  She then shrank the portal down to a tiny sphere that hovered near her shoulder.\n\nWalking toward a door beyond, again acting on memory, Danica opened it.\n\nCeles walked in behind Danica and saw the room full of coffins.  It was here that Zoraster created his clones.  Celes was amazed by the number, and in utter disbelief that the Archmage had managed to find the time, money, and spell components to create such a facility for turning out clones.\n\n\u201cNo more,\u201d Danica said \u2013 her voice tight with rage.\n\n\u201cDanica, what are you...  Danica, NO!\u201d\n\nCeles\u2019 words went unheeded as Danica cast her spell.  She was determined that nobody would ever use these facilities again.  To that end, she was casting the final discipline of the Inferno spell.  Celes recognized it, and thought Danica gone mad, committing suicide to destroy the place.\n\nCeles screamed Danica\u2019s name again, but the woman didn\u2019t even react.  She was drawing near the conclusion of the spell, so Celes quickly brought up an additional shield against fire and magic around them, doubting it would be enough.  There was no time to do anything else, and she simply prayed that it would hold when the shield sprang into being.\n\nDanica completed her spell, and a blue-white sphere of light appeared around them both.  It was Danica activating the runes on her skin, protecting against the hellish inferno that engulfed the room.  The runes provided them with protection that would have been impossible for any other magic.\n\nCeles involuntarily screamed in terror when the white-hot flames engulfed everything in the room, and then stared with awe at Danica, who was pouring her will into the spell.  The heat was starting to penetrate the magnificent shield, however.\n\n\u201cDanica, you have to let it burn out!  The shields are breaking!\u201d\n\nDanica\u2019s determined expression did not falter, however.  Celes screamed the warning again, sweat starting to bead on both their bodies as the heat grew stronger by the moment.\n\nThen, as suddenly as it had started, the conflagration died down.  There was nothing remaining of the coffin-like cr\u00e8ches, or any of the other apparatus in the room.  Even the very stone had melted into glowing pools, only the spot at their feet solid and whole.\n\nThey both sensed the presence behind them at the same time, and whirled around to face Camilla, standing in the doorway and staring in horror at the scene before her.\n\nDanica started, surprised to see someone she knew was dead standing behind her.  At first assuming it to be another mindless copy, she reached out with her psionic powers and discovered otherwise.  She might have a new body, but it was absolutely Camilla\u2019s twisted mind inside it.  This was no mere toy of Zoraster\u2019s.\n\nCamilla snarled, \u201cWhat have you done?\u201d\n\nDanica raised her hand, summoning up a hissing ball of energy through her rune magic.  Celes began chanting the words of a spell.  Seeing Celes young and in full possession of her powers, and Danica \u2014 the woman who had nearly killed her once already \u2014 taking up magical arms against her, Camilla fled in terror.\n\nCeles ceased her casting, and Danica let the energy ball vanish from her palm.  \u201cWe need to go, the alarm will spread quickly now,\u201d Danica suggested.\n\n\u201cI agree.  Open the portal and let\u2019s get out of here.  Your sister isn\u2019t the only one who needs to have a long talk with you.\u201d\n\n{*****~~o~~0~~o~~*****}\n\nA very confused Devan helped Danica and Celes get the clones into beds, ensuring that they would remain asleep until the spells controlling them could be broken.  Devan kept pushing for explanations the entire time, but Danica put her off, only willing to say that it was Zoraster who had enslaved her, and that he was dead.  Devan was not amused, but she accepted Danica\u2019s explanation that it was going to be a very long story, and she wanted to get it all out at once.\n\nThey returned to the room where Andrea and the rest were waiting, and Danica ran into her father\u2019s arms when she saw him and her younger brother there as well.\n\n\u201cI\u2019m so glad to see you, Dad,\u201d she said, and then kissed his cheek.  She reached over and pulled Daniel toward her, kissing him as well, \u201cI\u2019ve missed you both so much.  I love you.\u201d\n\n\u201cWe love you too, Danica.  Now, what is this all about?\u201d  Her father looked very confused, and more than a bit apprehensive.\n\n\u201cI\u2019ll explain it in a while, and I\u2019ll need to explain in more detail to Devan and Darkniciad later.  For now, I want to go say goodbye to Mom.\u201d  Turning to the rest of those who had escaped Zoraster\u2019s clutches with her, she asked, \u201cWill you come?  I\u2019d like to have friends with me too.\u201d\n\n\u201cOf course we will,\u201d Celes responded, and the rest nodded their heads in agreement.\n\n\u201cPlease to be waiting one moment,\u201d said a thickly accented voice from the doorway.  Danica recognized the accent from her time in the eastern deserts, and the voice from a past that felt like a lifetime ago.\n\nTurning, she saw a swarthy-skinned wizard sporting a long black goatee, just touched with a little grey.  A wide smile decorated his face, pearly white teeth a sharp contrast to his dark skin.\n\nDevan asked, \u201cWhat is it, Ashtar?\u201d\n\n\u201cI am being knowing a spell that I am thinking will be putting your mind at ease for your family to be returning to their home,\u201d he responded.\n\nDevan smiled and turned to Danica, \u201cI don\u2019t know why I didn\u2019t think of it.  Ashtar is better at this spell than anyone.  Not really a big surprise since it\u2019s his creation.  It will link Dad and Daniel to us, and teleport them to our side if they are in danger.\u201d\n\n\u201cIt will have to be being regularly renewed, but taking this responsibility I will be glad to be doing,\u201dAshtar added.\n\nDanica remembered a few words of the native tongue, and used them to thank the wizard.  More or less, the phrase meant, peace be upon you.\n\nAshtar\u2019s eyes lit up.  \u201cYour accent is being a little off, but very pleasing is my tongue upon your lips.  I shall be casting the spell, and you need not to be fearing for those you love to be returning to the life they are knowing.\u201d\n\n\u201cIf it\u2019s okay with you, Dad, it will really make me feel better,\u201d Danica requested.\n\n\u201cMe too,\u201d Devan agreed.\n\n\u201cI trust you girls, and if it will keep you from worrying and let me get home, then it\u2019s fine with me.\u201d\n\nDanica\u2019s little brother smiled and said, \u201cYou know I love magic.\u201d\n\nAshtar worked his magic, and Danica listened carefully.  She was determined she was going to learn that spell, and be just as good at casting it as the man who had created it.\n\n\u201cI don\u2019t feel any different,\u201d Danica\u2019s father remarked once the nimbus of magic settled around them.\n\nAshtar explained, \u201cFeeling nothing you will unless activated is the magic.  Fearing I am that your stomach it may be turning, but otherwise safe it is.\u201d\n\n\u201cWe should get those chains off Andrea and Marlena,\u201d Celes suggested.\n\nAndrea looked confused, but Marlena\u2019s eyes lit up.  The redheaded illusionist asked, \u201cYou removed your amulets?\u201d\n\nCeles smiled and said, \u201cYes, and we have the means to safely remove yours as well.\u201d\n\n\u201cAndrea, we never told you about it, because Zoraster hid it from you \u2013 and it would have only scared you \u2013 but you have a pendant around your neck that Zoraster put there.  We\u2019ll explain it later, but for now we need to remove it,\u201d Danica explained to the young woman.\n\nAndrea nodded, \u201cI trust you too, Danica.\u201d\n\nDanica removed two of the pearls from the silk bag, touching the pendants around the two women\u2019s necks.  Andrea gasped when hers became visible to her and she could feel its weight around her neck.\n\nDanica smiled and told them, \u201cJust unhook the chains, it\u2019s safe now.\u201d\n\nBoth women looked very relieved when they removed Zoraster\u2019s leashes from their necks.  Danica took them, placing them in her bag of holding for safekeeping \u2013 and later study.\n\n\u201cI\u2019ll want to have a look at one of those later, Danica,\u201d Devan requested.\n\n\u201cOf course.  Are we ready then?\u201d\n\nEveryone nodded or murmured that they were.\n\nDanica\u2019s eyes misted with tears, and her lip quivered as she said, \u201cLet\u2019s go home.\u201d\n\n{*****~~o~~0~~o~~*****}\n\nI hope you liked this tale, and will continue to read Danica's ongoing story.  Please take a moment to vote, and perhaps comment.  Feel free to comment on every chapter, nobody is stopping you! *laugh*  That's the only payment a free author gets, and every bit of feedback is most appreciated!\n\nYou may find later chapters have some flubs and grammar issues, until I finish posting all the edits.  Look for the note at the beginning of each chapter about my editor, Roust, and that will let you know whether the chapter is newly edited."
    ],
    "authorname": "Darkniciad",
    "tags": [
        "lesbian",
        "magic",
        "sapphic"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/danica-pt-20"
}