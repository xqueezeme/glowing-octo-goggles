{
    "title": "Big U Pride Ch. 02: Going Deeper",
    "pages": [
        "Please read Chapter 1 to get the full experience and context!\n\nThis chapter owes a lot to the SissifyYourself and SissyFactory content. You should check them both out! I also owe a lot to Drogon's hypno videos! \n\n*****\n\nThe 90-foot yacht cruised down the placid clear blue waters, making its lazy way past sun-specked islands. The Mediterranean waters were particularly pleasant this time of year as spring came into full force. It was easy to take in the gorgeous sights of the crystal clear waters and breathe in the fresh air and think that you were in Heaven.\n\nThe yacht was named \"The CockFighter\", which although unorthodox was appropriate for the owner. Dirk Diamond was known worldwide as the owner of a famous cruiseship line under the company \"Titillating Trips\". The name was a tongue-in-cheek joke since their cruise tours were aimed at young men, and the 'Titillating' was an obvious reference to the large-breasted woman who worked on board. It was like the Hooters of cruise ships, and Dirk made a killing off of young men who wanted to be surrounded by a bevy of young bodacious models as they cruised their way to Mexico or Jamaica or Ibiza to celebrate spring break. \n\nThe \"CockFighter\" christening of the ship was a reference too. Dirk Diamond had made so much money off his cruise ship and tourism business that he decided to make a name for himself in philanthropy. And he couldn't think of a more deserving place to park his money than his beloved alma mater, Big U. Although he hadn't left behind much of a legacy as a student - he was known mostly for the parties that he threw at which he would get shamelessly drunk and inevitably end up doing something irresponsible. He was sort of a Van Wilder figure, and his charm and antics got him both the reluctant approval of the administration and into the pants of the coeds of his choosing.\n\nHis most famous hyjink as an undergrad at Big U was his annual Wings & Breasts event. It was a Greek life event where all the frats would judge chicken wings. The catch was that the wings were cooked and served by girls from each of the sororities, all wearing skimpy bikinis. While judging the wings, the guys would also judge which girls had the nicest tits. At first, the administration threatened him with suspension for the event after a feminist group brought it to their attention. But when they saw how much charity money the event brought in, they changed their tune. It didn't hurt that several higher-ups were invited and present at the event.\n\nAnd now here he was, 30 years after graduating, riding on his luxury yacht out on the Mediterranean, taking in the sights.\n\n\"Ain't nothing better than a nice mid-day sunbathing sesh, don't you think?\" Dirk said, stretching out his arms as he reclined back on his deck chair.\n\n\"Mmmhm.\" I replied. This was my first spring break and I was lucky enough to be spending it on the college's prime donor's fancy yacht out in Europe. I had won a very special competition to earn my spot here and I was going to enjoy every second of it. \n\n\"You know, I've been doing this for the past 10 years, and I have to say it's the best thing about being a proud Big U alum and platinum level donor. Having some of Big U's finest join me on my little vacation is a real treat. I mean, sure, I used to be able to get any model I wanted to join me on the CockFighter, but this is something special.\" Dirk said.\n\n\"Mmmmm?\" I asked.\n\n\"Why, you ask? Well, very good question Brit. I mean, for one, it allows me to demonstrate my school spirit. I take a special pride in being not only the school's biggest donor but also their biggest booster. And to get to have some of their finest...talen on board the CockFighter with me on this lovely trip just fills me with school spirit.\"\n\n\"Mmmmm.\" I said in agreement.\n\n\"But it's not just that. Like I said, I could have anyone on this boat with me. Any model, any actress. But they can be so...frustrating. I mean, you see these models and they love to prance around wearing sexy things, but then when it comes time to seal the deal they're distracted by their Instagram and Tik Toks. And the actresses, they're even worse. I mean, they play these seductresses in the movies and then you host them for a week and all they do is go on and on about the Broadway plays that they're rehearsing for. Such a let down.\"\n\n\"Mmmmmmm mmmmm.\" I agreed.\n\n\"But what Big U sends me every year, they're exactly what I need. I mean, after finishing my quarterly report meeting with all my investors, I just want to let off some steam and relax. Those meetings can really wear a man down, you know? Well of course you don't but just imagine. I'm just being criticized every damn second, all just because I'm finding creative ways to make more money. As soon as I finish those meetings I just want to take my mind off of it all, I just want to get some...release.\"\n\nHe took off his sunglasses and looked at me.\n\n\"And that's why I'm so glad that Lana sent me you and your roommate to join me this spring break.\" he said.\n\nI looked next to me at my roommate Kris. We had become so so close over the school year and were practically inseparable. After I won the competition to be on this yacht with Dirk, I was offered a companion to join me. I didn't even hesitate, I immediately chose Kris. \n\n\"You two are the best stress relievers that I could ask for.\" he said.\n\nThat genuinely made me happy. I loved to help powerful men like Dirk. The fact that I could be that stress reliever for him really filled me with a sense of purpose. And above all it filled me with pride. Not just for being useful to him, but for being useful to Big U. I just loved feeling so...useful.\n\n\"Of course, Sir. We're here to make you relax and feel better.\" I said as I looked up at him.\n\n\"Well, of course you do. Now less talking and more sucking. Just because I dropped loads in each of your asses this morning doesn't mean that I don't have another for your mouths.\" he said.\n\nWithout uttering another sound, I ducked back down and put his left ball sack back into my mouth. Kris was right next me, still rolling his right nut in his mouth.\n\n\"Oh fuck, I don't know who's the better ball washer - Sissy Britney or Sissy Krissy.\"\n\nI redoubled my efforts, alternating my sucks and licks of his heavy ball, wondering how he could still feel so cum-loaded after emptying what felt like a pint of jizz in my tight ass and then going for round two on Krissy's rump.\n\n\"You know what, it has to be Sissy Krissy. No competition.\"\n\nI was crestfallen. I had worked so hard to develop my ball licking skills all year. But fair is far, and Krissy was quite the ball washer.\n\n\"Don't look so disappointed Britney, I know your real passion is in shaft swallowing. So get to it!\"\n\nNow that's what I'm talking about. I gave his ball sack a sweet kiss before letting go, allowing Krissy to take over the ball worship. I leaned forward and grabbed his shaft with my hand and brought to my lips.\n\nWith one gulp, I took his cock down my throat all the way down to his well-trimmed curly white pubes. If he wasn't impressed by my sack-licking, then he'd be impressed by my cock worship skills. After all, those skills are what won me a ticket on this boat for spring break.\n\n\"Oh fuck me, Brit. That is some fine fuckin' cock-suckin'. Oh shit.\"\n\nMy heart swelled with pride once again. Say what you will about my intelligence, but you couldn't insult my cock sucking skills. \n\n\"Oh fuck, hold up hold up. Both of you, off my cock. Any more of this double teaming action and I'm gonna nut.\"\n\nWe both stopped our ministrations. We looked up at him, saliva around our lips and our eyes begging for more. \n\n\"Damn, y'all look smokin'\" he said.\n\n\"Thank you Daddy.\" we responded. \n\nHe was right, we did look damn good. Krissy was wearing a lime green string bikini that highlighted her C-cup tits. Her blonde hair was in a bob and she looked fierce as hell. \n\nMeanwhile I wore a hot pink micro thong bikini. The underwear was essentially a piece of thin string that barely hid anything, but tucked my little sissyclit perfectly. My fat ass was on full display for Dirk and he definitely used every opportunity he had this week to fondle and grope it. Almost as many times as he did that to Krissy's tits.\n\n\"Man am I glad I paid for those tits.\" he said. So were we. The surgery recovery wasn't easy, but the rewards were amazing. We each had C-cup breasts that not only made us look even more feminine but drew him every guy's attention. We were the ultimate fuckbait now.\n\nDirk had a full view of both of us right now, as he lazed in his large beach chair looking down at us. We were each laying down prone between his legs, with our tits squished against the chair in such a vulgar way. Our asses were propped up, just looking so tempting to him as they jiggled during our oral worship of his cock. Several boats had passed us while we gave Dirk's meaty 10 inch cock the tongue bathing of its life. And as they passed, we enjoyed the hoots and hollers of the men on board as they cheered Dirk, and sometimes us. My favorite was when a man yelled at us, \"Go Big U! Fuck those sluts, bro!\" only to be disciplined by his wife who came out on deck as he was saying that.\n\nBut that did that didn't stop Dirk from yelling back, \"Big U sluts fuck the best bro!\" Krissy and I both giggled at that. That was the truth.\n\n\"Alright, alright. Another reason I love getting you sissy sluts on my yacht instead of the models isn't just your sculpted silicone-enhanced bods, but your devotion to the art of cock worship. In fact, I remember last time I was on campus one of your sissy sisters told me of the Sissy Prayer. Fuck, I don't remember how it goes. Why don't you recite it for me.\"\n\n\"Yes Daddy,\" we both said, almost in unison.\n\nWe wagged our asses back and forth and looked at each other before starting The Sissy Prayer, which we had learned early in our training. We each put our hands together, not so much in prayer but more as if we were begging. We gave Dirk our most pouty look and doe eyes and, in our most innocent voices, we started:\n\n\"Our Daddy, who art inside us,\n\nHallowed be thy cock,\n\nThey cock is one, of girth as it\n\nis in length.\n\nGive us this day our daily load\n\nAnd take us as we were meant to be taken by you\n\nAnd lead us into temptation\n\nDelivery us your semen\n\nA-OH-MEN\"\n\nDirk smiled at us as we finished.\n\n\"My oh my, just absolute cum sluts the two of you. Man I'm so stoked that the CheerBoi program got restarted.\"\n\nWe giggled.\n\n\"Now get back to work, gurls. First to make me cum gets to sleep in my bed tonight. Loser has to share the bunk room with the crew.\"\n\nKrissy and I looked at each other. It was hard to tell what she wanted more: to spend the night with this older hunk vs. surrounded by a bunch of fit olive-skinned young European men for the night. Honestly, I think Krissy wanted to lose! Maybe so did I.\n\nBut we had a job to do. We each brought our lips against each side of his thick cock and kissed around it before sliding our lips up and down the shaft.\n\nMaybe if we both made him cum, he'd let us spend the night with him AND the crew!\n\n__________________________________________________________________\n\n7 months earlier...\n\nI stirred from my deep sleep, looking around me and finding myself in an unfamiliar place. Sunlight shone through the windows down on me and the girl next to me. Holy shit, it was Lana and she was asleep on my lap. I tried to pretend to go back to sleep, but I had shifted my body too much and awoken her.\n\n\"Oh hey there, sleepyhead.\" She said to me, groggily as she got herself up.\n\nWishing I hadn't awoken her, \"Do we have to wake up? I'm still pretty out of it.\"\n\n\"Come on, big boy, we should get up before the girls all wake up.\" she said.\n\nDamnit, lost my chance to cuddle some more with this complete hottie.\n\n\"Plus, I don't want Lacey and DeShawn to see us outside their room.\" she said. \"Though I bet you wouldn't mind getting a peak at DeShawn's package again, wouldn't you Brit?\" she laughed.\n\nThen the events of last night all came back to me at once, images of Lacey sucking DeShawn's fat cock and Lana egging me on. But for some reason I wasn't embarrassed at all. After all, this girl was somehow into me, even though she had weird ways of showing me that. But hey, if she wanted me to look at some guys' dicks and in return would kiss me like she did last night, then line them up boys. I wasn't going to miss my shot at this sexpot.\n\n\"Oh yeah, gonna be difficult getting that mental picture out of mind.\" I said.\n\n\"Not that you'd want to.\" she retorted.\n\nWe tiptoed our way down the stairs, with the evidence of last night strewn all around us. Red Solo cups and champagne bottles littered the floor and I didn't miss the open Magnum condom packages laying about.\n\n\"Quite the party we missed.\" I said to Lana as we got close to the front door.\n\nShe looked at me, \"I think we had quite the party of our own, don't you think?\"\n\nCouldn't argue with her there. I don't think I had as much fun as I did with her last night, for some reason. She just had such a magnetic appeal to her, and, well, made me feel so excited. Everything about her was edgy and captivating and I wanted more. So much more.\n\nShe let me out of the house and as I turned to leave she said to me.\n\n\"Meet me at the library tomorrow night at 8.\" \n\nIt was an invitation, but when she said it it sounded like a command. And I just had to follow it.\n\n\"Yes, Lana.\" For some reason, that response seemed so natural.\n\n\"Good boi.\" she said as she turned around and shut the door.\n\nWeird, the way she said \"boy\" just sounded...different. Maybe it was all in my head.\n\nI walked back to the apartment, joining the ranks of all the spent partygoers from last night's revels, as well as the many walk of shame stragglers making their ways home. I hoped people would see me walking out of the Kappa Lambda house and think I got laid. I did my best to look proud of my conquest as I marched back to my dorm room. \n\nI opened the door to my room to find Kris on his computer. \n\n\"Hey Brian, how was your night? Did Lana rock your world?\" he said, grinning like a kid.\n\n\"I can't even begin to explain.\" I responded. And that was the honest response. She really did rock my world, just not in a way that I could explain to Kris. Nor did I want to admit to Kris that I had spent last night praising another guy's penis. \n\nI mean, Lana had taught me that doing so wasn't gay, but still, I don't think Kris would be so understanding.\n\n\"You gotta tell me everything, man. Those Kappa Lambda girls are so fucking hot. I saw them around campus last week and it's like they recruited a bunch of models to be in their sorority.\"\n\n\"It's unbelievable, they're all crazy hot. No doubt Lana is the hottest of them all.\"\n\n\"For sure, bro.\" Kris said.\n\n\"There's this other chick I met too, Lacey. Fucking hot redhead, a real firecracker.\"\n\n\"Oh shit bro, don't tell me you had a threesome.\"\n\nTrying to sound like a player, I said, \"Close, man, close. Lana could definitely hook that up, but she was already taken by the time I got there.\"\n\n\"Oh yeah, by whom?\" Kris asked.\n\n\"This new linebacker, DeShawn.\"\n\n\"WHAT!? You got to hang out with DeShawn James? He's, like, one of the biggest names around. I mean, he was one of ESPN's top highlights so many times last year. The guy's a fuckin' celebrity!\"\n\n\"Man, I knew he was a big deal but not that big.\" I said.\n\n\"This year's team has a bunch of all stars and he's definitely one of the biggest names, man. What was he like? I've heard he's absolutely jacked, I mean just HUGE, even for a linebacker.\"\n\nAs soon as he said he was \"Huge\", all I could think of was DeShawn's massive cock. He may be a football celebrity, but that cock could be porn famous. I remembered how Lacey's spit made it shine like a ebony statue.\n\n\"Yeah...he was definitely huge. Real...meaty.\"\n\n\"Oh I bet, the guy is gonna go pro. I just hope he stays a student long enough for us to see him play! Tickets are gonna be so hard to get this year.\"\n\n\"Yeah, yeah.\"\n\n\"But I bet Lana can get us a hookup!\" he said, excitedly. Wow, this guy was into the football team. But hey, that's Big U students for ya.\n\nWe talked some more about the week ahead and our class schedules. Kris gave me props for getting a study date with Lana tomorrow. Then we got back to getting ready for the week and played some Skyrim before going to bed. \n\nBefore I turned off my light to go to bed I texted Lana, \"My roommate Kris couldn't stop talking about DeShawn. I didn't realize he was such a celebrity.\"\n\nShe texted back, \"Send a pic of your roommate.\"\n\nWeird request, but who was I to say no.\n\n\"Yo Kris,\" I said. Kris was still on his computer but just wearing a t-shirt and boxers. \n\n\"Yeah man?\"\n\n\"Lana wants me to send a pic of you.\"\n\n\"Why? She want us to tag-team her? Lol.\"\n\n\"STFU, man. Just do it.\"\n\n\"Fine, but don't be jealous when she likes what she sees.\" I rolled my eyes.\n\nI took a couple pictures of him and sent them to Lana.\n\nShe took a few minutes to text back.\n\nBut then her reply came through: \"Lacey likes what she sees. Tell me to come to the Kappa house tomorrow and ask for her.\"\n\nWoah, that was a surprise. After seeing Lacey with DeShawn it was hard for me to see what she would like about Kris, a skinny short kid with green eyes and blonde hair that was way too long.\n\n\"Really?\" I texted back.\n\n\"8 pm\" was all she responded.\n\nWell, hey, I wasn't gonna stop my roommate from getting his. I mean, he may have been surprised by seeing me with Lana just as much as I was by him and Lacey. But Kris was really nice to me and a good guy so I should help him out. It wouldn't undermine my success in getting Lana, after all she was the hottest one of the Kappas. \n\n\"Yo Kris,\" I said.\n\n\"Yeah man?\"\n\n\"One of the Kappa girls is really into you pic, man. She wants you to come over tomorrow night at 8 pm.\"\n\n\"Oh shit man! You and me, taking down hot Kappa chicks left and right!\" he said.\n\nWe could barely sleep that night, we were so excited. \n\n__________________________________________________________________\n\nIt was really hard concentrating on class the next day as I anticipated my study hour with Lana that night. I was mostly excited about parading around the library with Lana so that everyone could see I was with the hottest girl on campus. I couldn't wait to feel all those jealous eyes on me. Girls would be lining outside my door once they saw what I reeled in.\n\nAfter classes ended at 6, I quickly went back to the room and changed into a nice pair of shirt and pants, wanting to look good for Lana. Kris was in the room, too, and was doing the same.\n\n\"You and me, gonna get lucky tonight!\" he said.\n\n\"You bet, man. That Lacey is one wild girl.\" I told him.\n\n\"Dude, I hope she's a real slut!\" he said.\n\nI felt my heart leap into my chest when he said that word, 'slut'. For some reason, it stirred things up in my mind.\n\n\"Yeah, I mean, she's kinda awesome that way.\"\n\n\"What?\" Kris said.\n\n\"Like, as a slut. Kinda powerful, you know?\"\n\n\"I really don't, man. Just wanna get her on her knees, you feel me?\" he laughed.\n\n\"Is that a bad thing? To be on your knees?\"\n\n\"What the fuck are you talking about, bro?\" Kris asked, looking confused.\n\n\"Oh nothing,\" I said. \"Just, like, it's kinda cool that she's a slut. I mean, we love sluts, right?\"\n\n\"Fuck yeah we do!\" he said, then gave me a high-five. \n\nWeird.\n\nWe both made our way out the dorm and split ways halfway down the quad. \n\n\"Get some, bro.\" Kris said.\n\nWith that, I headed to the library. I saw Lana waiting at the entrance. She looked stunning, wearing tight white pants and a crop top. Anyone could see the strings of her thong sticking out the sides of her pants.",
        "\"You look amazing, Lana.\" I said, walking up to her.\n\n\"Oh thanks, honey!\" she said. \"Honestly I feel like a mess, so that's so sweet of you!\" she said. \n\nShe hooked her arm through mine and walked with me through the doors of the library. Guys were staring at me with obvious looks of envy in their eyes. I must look like the king of the campus!\n\nInstead of going down the main hall of the library, though, Lana hooked left and then down the stairs. \n\n\"Uhhh...where are we going?\" I asked her, expecting that we'd sit in the main hall so that everyone could see me with the hottest girl on campus.\n\n\"Come on, silly! I have a surprise!\" she said.\n\nWho was I not to follow her to see what that was.\n\nWe kept going down the stairs until we got to the 2nd basement. The door sign from the stairwell read \"Film Archives\".\n\n\"Are we gonna watch some old movie for your class or something?\" I asked as she swung open the door.\n\n\"Just follow me!\" she said.\n\nShe got up to the desk entrance to the Screening Room and paused in front of the guy at the desk. He wore a \"Big U Baseball\" shirt and was tall and overall pretty slim but built. \n\n\"Hey Tucker,\" she said. \n\n\"Oh hey Lana, long time no see.\" he said, grinning at her. His eyes practically undressed her.\n\n\"Me and my friend Brit here are gonna use the Screening Room. How about you make yourself busy and give us some privacy?\" she said.\n\n\"Anything for a Kappa,\" he said. He handed her a key, grabbed his bag and walked to the stairwell entrance. \n\n\"See you at the next Theta party, girl?\" he asked as he walked away.\n\n\"I wouldn't miss it! The whole Cheer Squad will be there, count on it.\"\n\n\"Gonna be a rager.\" he said, before leaving through the stairwell.\n\nLana led me into the Screening Room and we dropped our bags. \n\n\"Take a seat and grab your laptop, Brit.\" she said.\n\nWho was I to argue? I pulled out my laptop and took a seat in the front row. The room had 5 rows of seats in front of a screen that was hooked up to a projector.\n\nLana grabbed the cable from the projector and handed it to me. She had me plug it into my laptop and then turned on the projector.\n\n\"You got me thinking the other night.\" Lana said. \"Bri, I think you have loads of potential.\"\n\nPotential, she says? Well, sounds like I have potential to be boyfriend material.\n\n\"And I really want to make sure you develop that potential, and I got to thinking of a way to do that, and to make use closer.\" she continued.\n\nI liked where this was going. \n\n\"Plus, I really enjoyed being naughty with you.\" she said.\n\nI REALLY liked where this was going.\n\n\"So I thought we could explore that together. You seem like the guy who enjoys the naughtier side of life, isn't that true?\" she asked as she took a seat next to me.\n\n\"You bet, Lana. Yes, one hundred percent.\" \n\nDid I seem too eager?\n\n\"Then show me, I want to see. I bet you browse porn all the time, and I want you to show me what you like.\"\n\nWow, did I die and go to heaven? A sexy girl wanted to watch porn with me and found a secluded place to do it. I think this was the night I'd get lucky.\n\n\"So go ahead...show me what you like.\" she said.\n\nI gulped. So I guess I'm just supposed to show this hot girl the kind of porn I like? That just...where do I even start? Do I go with the girl-on-girl stuff, or right to the hardcore scenes? Or do I jump right in the deep end and show her the gangbang/blowbang scenes I liked? Should I show her the interracial scenes that really get me going? \n\nNever really planned for this scenario...so I just started with the first pornstar I could think of.\n\n\"Well, uhh...\" I fumbled with my keyboard and searched for a scene I loved. My mind immediately went to the pornstar that was an absolute all-star.\n\nI started the scene and it starting playing on the projector to the screen.\n\n\"Oh! Adriana Chechik! Love her!\" Lana said.\n\nWe watched as Adriana paraded around in lingerie, strutting her stuff and showing her assets. She walked down the stairs to a group of three black men and immediately got on her knees and started swallowing their cocks.\n\n\"Wow, she is something else!\" Lana said. \"Look how she just attacks those big cocks!\"\n\nFuck, this was the hottest thing I could ever imagine. Here I was, watching a scene of my favorite pornstar with the hottest girl on campus while she commented on how hot it was. Seriously, college was awesome.\n\n\"Three of those big dicks at once! She is so wild! Look at her go! Unstoppable!\" Lana said.\n\n\"Yeah, she's pretty incredible. Probably my favorite pornstar.\" I said, my little cock hardening in my pants.\n\n\"I can see why!\" Lana said. \"Just look at how she manages those dicks all at once. Just incredible.\"\n\n\"Show me another scene!\" Lana said.\n\nSo I clicked on the next suggested video on Pornhub. It was Adriana dressed as a sexy drill seargent and training Jillian Janson to handle anal.\n\nJillian kept yelling, \"Yes Sergeant!\" Yes Sergeant!\" while Adriana toyed with her.\n\nThen they got to swallowing cock together, getting really messy in the process. Finally, Adriana helped Jillian take that big cock in her ass, even showing her how to do so herself. \n\n\"Oh wow!\" Lana said. \"I've never seen this one but I love it!\" \n\n\"Yeah, they are so hot together.\" I said.\n\n\"Just look how Jillian obeys Adriana. Isn't Adriana so authoritative? She just exudes power.\"\n\nI mean, before I got to college I don't know if I'd define getting slammed hard in the ass as a form of power. But after the other night and learning from Lana, I couldn't help but agree. In the the first scene she just controlled the room, corralling this group of big men. And in this one she was disciplining Jillian and showing her the ropes of anal sex.\n\n\"Honestly I agree. She's somehow able to be both powerful and play submissive. It's probably why I like her so much.\"\n\n\"Oh honey, yes!\" Lana praised. \"You so get it! I'm so proud some our lessons stuck in that cute head of yours!\" \n\nDo I know how to impress the ladies or what?\n\nWe then moved on to another scene, this time with the pornstar Megan Rain and Marley Brinx. It was called \"Slut Puppies\" and they were dressed as sexy schoolgirls, their skirts hiked high to show their firm plump asses. They played with each other for a bit before heading inside a house where they shared a nice long juicy cock.\n\nDid I just unconsciously think a cock on screen was \"juicy\"? Wow, Lana was getting to me. But anyone would admit that a cock like that was inherently appealing. It was like judging a work of art, not gay at all.\n\n\"Fuck that's hot, just look at those two.\" she said. \"They could take on the world together. Don't you think, Brit?\" \n\nThey did look so hot together, their skirts flaunting their asses and their high heels making them walk so sexily. In a way, I guess they did look...ready for anything. It's weird to see two girls dressed like that and think they were dressed to impress, but for some reason when Lana said that I could only agree. Something about two girls dressed like skanks made me think they were taking charge.\n\n\"Oh yeah, definitely.\" I nodded my head. \"They could totally take charge of any room they walked in to.\"\n\n\"Omg, yes. Imagine if you saw two girls like that walk in here now. You would hang on every word they said. Your eyes wouldn't leave them for a second. That's power if I've ever seen it before.\"\n\nAgain, a part of me thought it weird that two girls dressed like absolute sluts could be thought of having power. But I just couldn't dispute Lana's logic. She was right. I would be absolute transfixed, just beholden to anyone who looked and dressed like that. I'd do anything to spend time with them.\n\nThe scene ended and automatically moved to the next one, this one was Bailey Brooke and it featured the male pornstar Dredd. He was the up and coming thing in porn, a giant of a man with a giant of a BBC. He may have had the biggest cock in the biz. \n\nBailey Brooke first moved sensually around the room in white lingerie, almost bridal type lingerie. She then got on her knees and crawled toward Dredd. She teased him for a bit before grabbing his pants and pulling them down to reveal his monster cock underneath. When it sprang out and the camera captured it in all its glory, Lana let out a little moan.\n\n\"Oooooh fuuuu.\" she said. I noticed she had one hand down her pants and was slowly playing with herself. \n\nI was beyond words, just watching this incredibly sexy girl masturbate while watching porn. I felt like I had hit the jackpot. \n\n\"His name is Dredd.\" I said, watching Lana twiddle herself. \"He's probably the biggest now in porn right now.\"\n\n\"Big is right.\" she said. \"It looks inhuman!\" \n\n\"Yeah, it's pretty huge isn't it?\" I responded, alternating looking at her and looking at the screen.\n\nI usually watched this scene on my laptop and it was clear Dredd had a missile of a cock. But watching it on the big screen just drove home that point. It looked ungodly when projected like this. There were scenes of Bailey licking the underside of his shaft and the way it was filmed it just filled the entire screen with his cock.\n\n\"Just otherworldy\" Lana muttered. \n\nThen she said, \"I can't imagine how good it must feel.\"\n\nFor some reason, when I heard that I didn't think of how good Dredd must feel to have Bailey worshipping his thick dick. I mean, for years I imagined how good the blowjobs I saw on screen must feel for the male actors. Having never had one of my own, I had thought they were mind-blowing to say the least.\n\nBut after all that Lana had explained to me the other night, I understood that when she said \"I can't imagine how good it must feel,\" I knew that's now that she was talking about. I knew she was talking about that big cock. And I knew she was wondering how Bailey would feel on the end of it.\n\nAnd...I imagined with her.\n\n\"Probably like you were split in two.\" I said. After all, there's no way that thing fit easily inside a mouth or vagina or ass.\n\n\"Probably at first...but then...Heaven.\" she said, twiddling herself faster watching the screen.\n\nMy little weiner was rock hard at that point. I don't know if it was the hot girl next to me getting herself off (it was like live porn!) or the massive screen in front of me showing the massive cock getting the oral treatment of its life. But either way, my sex drive was on high gear. I was throbbing, and I knew just the slightest touch could get me off.\n\n\"It...yeah it must feel...awesome\" I replied, no finding the words.\n\n\"More than awesome, I assure you.\" she said, stealing a second to look over at me. \"Heaven. Absolute...Heaven.\" then the went back to looking at the screen.\n\nI watched with her.\n\n\"Bri, tell me.\" she said. \"Does all the porn you watch have cocks this big?\"\n\nI thought about it for a second. \n\n\"Now that you mention it, yeah. It's kind of typical in hardcore porn.\"\n\n\"And do you ever stare at those big cocks in the scene? I mean, maybe not intentionally, but just cuz they're there...just cuz they're on the screen.\"\n\n\"I mean, yeah. It's hard not to. I mean, they're sometimes just straight up on the screen and you can't look anywhere else.\"\n\n\"But, like, sure the girls are super hot. But the directors choose male pornstars too. So they're usually studs, right?\"\n\nWell that was indisputable. \n\n\"Sure, it's like any Hollywood movie. The guys are usually buff with big dicks.\"\n\n\"And they know how to use them, don't they? So they're studs with big dicks who swing those dicks confidently. They're like...alpha men?\"\n\nI don't know if I ever thought the word \"alpha men\" in regards to this, but sure. She had a point. They were manly guys with dicks that got girls going wild. Hard to argue that that didn't constitute \"Alpha Male\"\n\n\"I guess you could say that.\" I said.\n\n\"Alpha males with alpha cocks.\" she said.\n\n\"Mmmmhm\" I replied.\n\n\"Say it.\" Lana said, again looking at me.\n\n\"Say what?\" I asked.\n\n\"Say what kind of man Dredd is.\"\n\nI looked up at the screen and saw Dredd standing up with Bailey on her knees in front of him, gobbling on the end of his might dick.\n\nIt was pretty obvious what he looked like in that moment.\n\n\"Dredd is an alpha male.\"\n\n\"With what?\"\n\n\"An alpha dick.\"\n\n\"Say it.\"\n\nCatching onto her meaning, I repeated.\n\n\"Dredd is an alpha male with an alpha dick.\"\n\n\"So true.\" she said. \"Tell me about that dick, Brit.\"\n\nAfter the other night, I was ready to answer for her. I knew this wasn't gay, this was just commentary. After all, we were in the film department watching a film. This was me commenting on an actor in a film.\n\n\"It's...well it's big. It's thick. I'd say it's about 12 inches hard. And ummm...it's dark black. And the head of it is definitely, well...mushroom-shaped.\"\n\n\"All facts, yes. Now what is your conclusion about this fine alpha specimen?\"\n\nI thought of something that would turn Lana on. I had it.\n\n\"It's a ass-destroying cum cannon of a cock.\"\n\n\"Wow, Brit! That was unexpected! Omg, so good! I love it, 'cum cannon'\". \n\nI loved making her proud.\n\n\"And would you say that girls love it?\"\n\n\"Obviously,\" I responded. \"Cocks give girls pleasure, and big cocks give them more pleasure. So this one must be a real pussy-pleaser.\" I responded, remembering my lessons from the other night.\n\n\"Good boi!\"\n\nAgain, with the way she said \"boy\". It just...sounded slightly off. I shook it off.\n\nWe kept watching the movie. Lana kept playing with herself harder and faster.\n\nThe next scene automatically loaded, it was a classic one with the redhead Faye Reagan called \"Gauntlet\" where she passed through several rooms, in each getting fucked by different groups of men. She looked like a sex toy as she was passed from man to man.\n\n\"Wow, look at her go!\" Lana said. \"You know, I be you used to think that this was denigrating, right? You thought, 'Well, what a dirty slut, getting used by all these men for their pleasure and getting passed around like a cheap toy.' But not anymore, right Brit?\"\n\n\"No, Lana.\" I replied. And it was the truth. I saw this scene differently now. Instead of insulting Faye by calling her a cheap slut, I knew better. Here was a girl who was out to take on the world. She wanted pleasure, she wanted fun. So she went out looking for cock, and lots of it. And look at her go, taking on group after group of men with big cocks, getting all the pleasure she could out of them.\n\n\"She's pretty amazing, just look at her take them all without even stopping to breathe.\"\n\n\"Yes, boi!\" she said, saying in that weird way again. \"Just when she walks into a room, the way she is dressed and the way she sashays her booty around. You know she's giving those guys huge hardons.\"\n\nLana sounded more and more excited.\n\n\"Is there anything better? You feel the power she has over them! Because you see, with a simple move she can have all the cock she wants! A quick shake of her ass can cause so many problems to some poor guys! It's that simple!\" \n\nIt sounded so compelling. I mean, if I was a guy and I saw Faye walking around in barely any clothes, looking like she was ready to take lots of cock, I sure would have a hardon. (It wouldn't be much of a hardon, mind you...). And if she told me to do anything, I'd follow her every direction because she had what all guys want: tight holes and the ability to use them.\n\n\"This is the power of sluts! And whens she finally decides to get on her knees, you know that those guys are just desperate to put it anywhere she offers. By then, boys are rock hard for her! Her goals are accomplished! She has those alpha men just where you want them! All hard and ready to fuck!\"\n\nThat much was obvious - every cock in the scene was at full mast for her.\n\n\"She is now the object of their dreams. In that moment, she is the only one who can give them release!\"\n\nWell, that's an interesting form of power, isn't it? She gets them all hard and when they're throbbing and ready to burst, she has all the power to decide whether to get them off, and how. It's all in her hands...or mouth...or pussy or ass. She is in control of the situation.\n\n\"She can decide now, if she wants it to be quick (in that case she can give them a quick handjob) or if she wants it to be slow and painful (in that case she don't give them what they need right away..)!\"\n\nThat's so true, I've seen so many scenes where the girl gets to endlessly tease the guy by playing with his cock. That last scene with Bailey and Dredd was a great example. She lavished licks and kisses on his heavy thick cock, just getting his heart racing. She was in control of that situation. He was the alpha male with the powerful cock, but she was the powerful one controlling the room. It was like she was taming the alpha male.\n\nLana continued, \"And when they cum, she can decide again! She can let them think they are superior (in that case she takes their cum on her face), or she can make them feel like they are winners (in that case she swallows their load), or she can show them what else they could have (in that case she takes their load on her chest or ass). She gets to choose how to play with these powerful alpha men.\"\n\nWell, that was a completely different way of seeing cumshots. But when I thought about it, it made sense. \n\nLana finished her case: \"And all that is only for HER PLEASURE!!\" \n\n\"Sluts gets to be desired, get to pleasured, get to have power. Nothing better than that, right Brit?\"\n\nI only had one response: \n\n\"Yes, Lana.\" \n\nThe next scene was back to Adriana, this time in a scene called \"Center of Attention\" where she played a Marilyn Monroe-like figure, all dolled up and dazzling, sampling the big cocks of three hunks.\n\nLana loved that one, and played with herself with vigor. I couldn't help myself as I watched this gorgeous get off to my favorite pornstar.\n\n\"Feel free to help yourself out there too, Brit.\" Lana said.\n\nAnd I did, shrugging my pants down until it was just my underwear. I started by bringing my hand down to squeeze my little member.\n\nThen I looked over at Lana, her eyes half-closed as she played with herself as the scene in front of us heated up with Adriana getting slammed by a cock in three different holes.\n\nAnd just like that, I shot off like geyser. Well, not so much a geyser as much as a leaking hose, dribbling a few spurts as I keeled over in pleasure.\n\n\"Fuuuuuu\" I moaned as I doubled over.\n\nLana stopped what she was doing and stared at me.\n\n\"Oh my god, Brit, that was fast!\" \n\nShit, shit, shit. How could I have shot my little load so quickly!?!? Wow this was the most embarrassed I've ever been. \n\nI immediately stood up and covered up the mess I made in my boxers, blushing beyond belief as I turned away from Lana.\n\n\"Oh don't be worried, honey. It's completely normal. I mean, watching that scene...watching me. Any guy would have done that...so fast.\"\n\nShe got up and walked over to her bag.\n\nI tried desperately to dry off my pants by rubbing my mess around my boxers, but that just made things worse as the wet spot on my underwear just got bigger.\n\n\"Here, honey, you can borrow these.\" her outstretched hands held something.\n\nI looked down. It was a pair of light blue bikini bottoms. Girls..bikini...panties. And not just that, they were lacy.\n\n\"Oh no, I can't. I definitely can't.\" How could she expect me to wear those?\n\n\"Oh come on, you made a mess in your underwear and you can't put your pants back on over that, can you?\" she shoved her panties in my hand. \"Plus, it's just to get you back to your dorm. It's just for emergency use, right?\"\n\nShit, well I definitely couldn't put my pants on or go commando with this mess all over me. And she was right, this was an emergency and it's just underwear after all.\n\n\"Ok, just this once.\" I grabbed the panties and turned around.\n\nI pulled my boxers down, facing away from Lana.",
        "\"Someone's a shy boy! And after what we just did...\" Lana joked.\n\nSo humiliating.\n\nI grabbed the panties in both hands, feeling their soft lace in my hands. I put my legs through the holes and started pulling them up.\n\nI didn't expect to enjoy the feeling of the soft lace against my skin. It was just so soft, so delicate. I pulled them up to my butt and secured my little weiner down. \n\n\"Not so bad, right?\" Lana said.\n\n\"Ummm...I guess not. Honestly kind of comfortable.\" I admitted.\n\n\"Don't act so demure. They're lacy panties, they're designed to feel good and look good. And I have to say, it does make your butt look good. Your butt is just so, juicy, to use a word you like.\" She winked.\n\n\"Oh come off,\" I responded.\n\n\"No, seriously Brit. You look so good, trust me.\" \n\nI ignored her and got my pants on. \n\n\"It's just to get me to my apartment.\"\n\n\"Yeah, exactly.\" she smiled. \n\n\"Well, that was fun,\" I said as I packed up my stuff. \"But I should go.\" \n\nI needed to get out before I embarrassed myself further.\n\n\"Yes it was, sweetie!\" said Lana as she got her stuff together. She pulled a small USB drive from her bag and handed it to me.\n\n\"What's this?\" I asked.\n\n\"Just a collection of videos I think you'd like.\" she went on. \"Start with the folder 'Part 1' and watch those. You'll love it! It's a little bit like a mind game and it's so hot. I'll ask you about what your favorite vids are next time.\"\n\n\"Next time?\" I said, stuffing the USB in my pocket.\n\n\"You think our fun is over, Brit?\" She grabbed me by the arm and got close to me. \n\n\"We've just begun!\"\n\n__________________________________________________________________\n\nI got back to my dorm building, the whole walk there feeling self-conscious about wearing panties but kind of enjoying how soft they were. They were tighter than my boxers but held my bits all together so nicely. Plus the lace was so soothing against my skin, not like the rough material of boxers.\n\nAs soon as I got to my dorm, I rushed to my room and shut the door behind me. I quickly shucked off my shirt and peeled my pants off so I could change into something less embarrassing.\n\nBut that's when Kris walked in.\n\n\"Oh, hey Bri-\" Kris started before turning on the light and seeing me in the bikini panties.\n\nI was standing there, just wearing these blue bikini panties and nothing else...as my roommate walked in and saw me in all my glory...\n\n\"I, uh...didn't mean to interrupt.\" Kris said, but kept staring, not bothering to close the door.\n\n\"It's nothing, man - nothing!\" I said, scrambling to grab a bedcover to cover myself up with.\n\nHe shut the door behind him. \n\n\"For 'nothing', your...lil' Brian seems to think it's something.\" he pointed at my crotch.\n\nAs if this could get worse. My little penis was standing at attention, giving the impression that I was aroused by this.\n\n\"Just ignore that!\" I said. \"Look, Lana gave this to me after she made me cum!\" \n\n\"Oh, man. Ok, ok. So you got lucky with Lana tonight?\" Kris said, growing more interested.\n\n\"Well, sort of. In a way, yeah.\" I tried changing the subject as I grabbed a new pair of underwear.\n\n\"And how'd your night with Lacey go?\" I asked.\n\n\"It was...well, it wasn't what I expected.\" he said.\n\n\"How so?\"\n\n\"Well, I honestly didn't know what to expect from the invite. But when I got there, I was horny as hell. And she didn't help the matter - she wore the shortest skirt and the tightest tube top.\"\n\n\"Oh nice, bro.\"\n\n\"But we didn't get physical or anything. I mean, it was a hot night, don't get me wrong.\"\n\n\"Yeah?\"\n\n\"But in a weird way. We...well we snuck around the house and she...well, she had us peek in on her roommate Kissa.\"\n\nThis was sounding familiar.\n\n\"Kissa had this guy in her room. One of the football players, Ke'Shawn - you know, the cornerbacks.\"\n\n\"Yeah, I'm familiar.\" We all were, he was practically a campus celeb.\n\n\"And, well, we watched them...we watched them fuck.\"\n\n\"Sounds hot.\"\n\n\"Well it was, but Lacey never touched me or anything, she just, like...she talked me through the whole thing. For some reason it was even hotter than had she touched me.\"\n\n\"Talked you through it?\"\n\n\"Well, at first I thought Kissa was being, well you know...slutty. But Lacey, well, Lacey kind of made me see the whole situation differently.\"\n\nYeah...this was all sounding very familiar. But I didn't let that up.\n\n\"In what way?\"\n\n\"Well, just that...it was pretty impressive what Kissa was able to do and like...every girl on campus would want to get with Ke'Shawn, and she nabbed him. Like, that's impressive.\"\n\n\"Agreed.\"\n\n\"And like, the things she was able to do with him. I've never seen a girl act like that...or move like that.\"\n\n\"Oh yeah?\"\n\n\"Yeah, like...I've never seen a girl so...turned on before. And she was so verbal and...just...it was wild.\"\n\n\"I bet. I've seen Kissa around. She's a firecracker.\"\n\n\"That's for sure. Every guy probably would want a piece of her. And she worked that cock like a champ.\"\n\nAnd then my mouth just starting going before my brain could stop it. I just blurted out without thinking:\n\n\"What was his cock like?\"\n\nGoddamnit Brit what were you thinking???\n\n...did I just call myself 'Brit'? Goddamnit, Lana is getting to me.\n\nBut Kris didn't look at me differently. He barely took a second to respond.\n\n\"Magnificent.\"\n\nI was curious.\n\n\"Yeah?\n\n\"Just magnificent.\" he said, sounding like he was in a daze. \"It was huge...and thick...and just...I don't know, you felt it's presence, it's...power.\"\n\nI was hooked.\n\n\"Power?\"\n\n\"It's hard to describe. But the way Kissa just pounced on it, you could tell it drew her in. And when she drew pleasure from it, it was like there was nothing else in the world but that magnificent cock. And it gave her so. much. pleasure.\"\n\nAnd my mind just went into automatic.\n\n\"Cocks give pleasure.\" I said. \n\n\"Yeah...cocks give pleasure.\"\n\nWe both sat in silence for what felt like a full minute.\n\nThen Brit emerged from his daze.\n\n*Cough* \"I...uh...don't know. I...ok, so...you don't have to worry about the whole 'panties' thing. It's cool.\"\n\n\"Oh, ummm thanks.\"\n\n\"In fact, you kind of pull them off. Weird to say but you have the ass for it.\"\n\nThat WAS weird to say. But for some reason I just took the compliment.\n\n\"Thanks man. That's nice of you to say.\"\n\n\"Sure. Well anyways, Lacey said that Lana gave you something for you to watch. She said I should watch with you.\"\n\nI remembered the USB flash stick in my pants pocket.\n\n\"Oh yeah, let's do that. Thursday night?\"\n\n\"Thursday night is perfect.\"\n\nWe didn't talk more about our nights. We played a round of video games then went to bed. I threw the panties in my backpack and didn't bring it up again.\n\n__________________________________________________________________\n\nThe week went by like normal, just going to class, barely paying attention, then coming back to the dorm room to play video games. Lana said she was busy with pledge stuff so we didn't hang out. \n\nBut Kris did have a study session with Lacey on Wednesday night. He came back blushing and all worked up, but didn't tell me about his night. He took out a USB flash stick of his own that Lacey gave him and put it on my desk, so we could watch some of it with Lana's USB the next night.\n\nBut that was it, nothing else really happened.\n\nThen Thursday night came without fanfare. As we walked back from the dining hall, Kris looked at me.\n\n\"I guess we should watch the videos that the girls sent! Maybe there's some homemade action on there, know what I mean?\"\n\nWell that did sound nice, some amateur material that the girls made for us. \n\n\"Totally, bro. Those girls are just riling us up for some heavy action.\"\n\nWe jostled each other and got to the dorm room. I fired up my laptop and hooked it up to the large-screen TV in the room (a gift from my parents - being the rich kid on campus has its perks).\n\nThe flash drive Lana got me had a list of videos. Each had a date and title in its title, but all the dates except today's were in the future. Like, there was a video for today and then a few marked for tomorrow with times on them. There was even a long audio clip that was marked for overnight Saturday to Sunday.\n\n\"I guess it's like a curated playlist.\" I said to Kris.\n\n\"Yeah. And based on the timings, we have quite the weekend lined up for us.\"\n\nHe was right, there were 5 or 6 videos just for Saturday and each about an hour long. And that didn't even include the flash drive Lacey gave to Kris.\n\n\"Well, then no time to waste.\" I said.\n\nI fired up the first video. It was actually with a pornstar that I already knew - a scene of Jada Stevens and Mandingo. She had short black hair and wore a black fishnet dress and that showed off her generous ass. A studded chocker around her neck finished the look.\n\nBut she also wore something that drew our attention.\n\nShe had long black gloves on, the kind you'd see on someone who was handling precious art or jewelry.\n\n\"I don't know why, but those gloves on her are getting me going.\" Kris said.\n\n\"Yeah, for some reason watching her gloved hands holding that Mandingo's meaty cock just do it for me too.\"\n\n\"Can't put my finger on why.\" Kris said. \"I mean, it's like she's wearing gloves meant for someone who is showing off antiques, or like fine china or a diamond necklace to a customer. But instead they're showing off that big fat black dick.\"\n\n\"Yeah, exactly.\" I continued with his thinking. \"It's almost as though that cock is as valuable as fine diamonds, like it's something that ought to be handled with care and shown off to discerning customers.\"\n\n\"Hah, yeah. Like it's worth millions.\"\n\n\"I mean, I can see why a girl would pay millions for it.\" I replied.\n\n\"Me too...me too.\" Kris said.\n\nThe scene got us both super hard, but we still had more videos to watch.\n\nI got the next one playing. This one was a Brazzers scene of Madison Ivy. She was some sort of exotic princess and danced around before she chose a man. It was her anal deflowering and she chose a guy with a fat dick to give it to her.\n\n\"Oh fuck, that's so hot. I love watching anal.\" Kris said.\n\n\"Me too, man. Not sure why. It's like, sure, pussy is awesome, but there's something naughtier about anal. And guys always want it, like it's more tantalizing and pleasurable. And girls are always so intent on protecting their asshole and giving it away is such a treat.\"\n\n\"Well I can see why she gave it away to that guy. I mean, that cock is THICK.\"\n\nHe wasn't lying, it wasn't as long as Mandingo's but it had girth.\n\n\"That thing is absolutely filling her up, and she's loving it! I can't tell who's enjoying it more,\" I said. \"Him or her.\"\n\n\"By the looks of it, her. Hands down.\" Kris said while watching. \"And who could blame her? That thing was built to please.\"\n\nFor some reason, something went off in my brain and I just blurted out.\n\n\"Big cocks give more pleasure.\"\n\n\"That's so true. I mean, the girls in porn all say that.\"\n\nWe finished that scene and moved on to the next one.\n\nThis one wasn't so much a scene, as much as a compilation of clips from different scenes.\n\nAnd it was narrated by a girl with a really sexy voice. Her voice was both sensual and calming at the same time.\n\n\"Hello boys. I have quite the lineup of sexy fuckstars for you here. I want you to focus on each of them, watch them at work, thinking about how amazing they are at it.\" the voice said.\n\n\"No arguments here.\" Kris said.\n\n\"Haha, yeah man, this looks exciting.\"\n\nThe first clip started - it was of a blonde MILF with her hands above her head as a guy shoved his cock in and out of her mouth.\n\nThe voice started narrating.\n\n\"\"What a hottie. First look at her beautiful slutty-done smokey eyes, then look at her bleached blonde hair.\"\n\nKris and I focused on her makeup and hair.\n\n\"Yeah, she definitely looks DTF.\" Kris said.\n\n\"Absolutely, that 'smokey-eye' looks is really sultry, so inviting.\"\n\n\"Yeah...\" Kris trailed off as he focused in on the makeup. \n\nThe voice went on, \"But above all, look how she uses her tongue after he takes his monster cock out of her hungry mouth. Idol.\"\n\n\"Oh yeah, that definitely makes it hotter, the way she licks it as she takes it out.\" Kris said.\n\n\"Definitely, so hot.\"\n\nThe next clip was a hot brunette sucking a guy's ballsack into her mouth as she stroked his cock with her hand.\n\nThe narration started.\n\n\"Now, look at her beautiful hair. then admire how gently she touches his huge balls, as she stuffs them in her slutty mouth.\"\n\nKris said, \"Oh man, that guy must be in heaven.\"\n\n\"Oh totally, she is handling his nuts so expertly.\" I said.\n\nThe narration:\n\n\"But above all, look how she strokes his cock and admire how she quickens the pace as she reaches his head knowing that this will surely have him explode in seconds. see? Idol.\"\n\n\"Oh yeah,\" Kris said. \"She strokes faster as she gets to his cockhead. Wow, she really knows her way around a cock.\"\n\n\"No doubt, that would have me bursting instantly.\" I said, though I knew I'd burst even before she touched me. The other day in the library being a great example of my premature ejaculation.\n\nThe next clip was of Jada Stevens, the same pornstar we watched earlier take Mandingo's cock. This time she was deepthroating a long cock (This one was white) and slid her mouth slowly off of it as she looked into the camera. Spit decorated the whole cock.\n\nThe voice started: \"Let's see another excellent sample of iconic women. check out her slutty black hair.\"\n\nSo we did, both of us focusing on the hair.\n\n\"Never would have noticed that before, but yeah she does have, uh, nice hair.\" Kris said.\n\n\"Yeah,\" I agreed, \"It's, like, shiny and straight and frames her face really nicely.\"\n\nFelt kind of weird, to be honest, to talk about a pornstar's hair. But the more I looked, the more I could appreciate about how hot she looked. Her makeup was impeccable and her hair looks styled. All of it just made her look all the more hotter.\n\nThe narration continued: \"Notice her sexy dark eyes. Then, as she grabs that monster, you go to her perfectly done manicure.\"\n\n\"Oh yeah, didn't see that.\" Kris said. \"Her nails have shiny polish on it, like glitter. Looks pretty hot, to be honest.\"\n\n\"Agreed.\" I said. Her manicured nails and racoon-eye makeup were super hot. I mean, I know I'd be into a girl who was done up like that. It, like, made her look like she was showing off and drawing a man into her claws.\n\nThe voice: \"But above all, look how hungry and aggressive she looks while she takes that big beautiful dick out of her mouth. Idol.\" \n\nShe really did look hungry for cock as she deepthroated it. I mean, the more she took into her mouth, the hungrier she looked.\n\n\"Kind of makes sense,\" Kris said. \"She's got, like, dick hunger, and it's obvious cuz she deepthroats.\"\n\n\"Yeah man,\" I agreed. \"It makes sense that the hungrier you are for dick, the more you'd deepthroat.\"\n\n\"Totally\" Kris said.\n\nThe next short clip was a tiny cute blonde who was on all fours. She eased her way up and kissed the tip of a nice dick.\n\nThe voice: \"\"Do we need to say much about that girl? Hasn't she already taught you more than anything you learn in class? Idol.\"\n\n\"Wow, look at the way she just adores that dick, and kisses the tip.\" Kris said.\n\n\"So hot. Truly an idol.\" I said, mimicking the narration.\n\nThe next clip started.\n\nIt was my favorite pornstar, Adriana Chechik.\n\n\"Oh shit, I love her. Adriana is such a crazy slut, just goes wild for cock!\" I said.\n\n\"Total idol.\" Kris said, agreeing. \"And she looks so good doing it. Her makeup is so slutty and her hair is so professional.\"\n\nThe clip was of Adriana just stuffing the head of a thick cock into her mouth and pushing it into her cheek, just acting like a real cockslut.\n\nThe narration: \"Noticed her hair? okay, you're learning fast.\"\n\n\"Hah! I did!\" Kris said. \n\nThe narration: \"Above all though, in this woman, you should admire her style and her attitude. Yes, dear. For some boys that would be regarded as whorish, or humiliating. For you it's just... style. Wet, hungry, sloppy. Style. Remember that. And that woman is of course...an idol.\"\n\n\"Wow, yeah,\" Kris said. \"She has such...style. Like, even the way she grabs the cock, using her whole hand and positioning it for maximum pleasure. The way she uses her mouth to both seduce the guy and to pleasure his cock. It's like a full-body experience the way she throws herself into the role of slut.\n\n\"That's why I love her, man. Such an idol. Everything about her. I'd kill to spend even a minute with her.\"\n\n\"Oh yes...Ever wonder what it'd be like to be her?\" Kris asked.\n\nWeird question. But then I looked at her in the clip and she was staring at the camera, like she was staring right at me.\n\n\"Umm...never thought about it.\" I said. Though that was a lie. I often wondered what it'd be like to be her, and why she was so driven to be the biggest slut possible. What did she get out of it? Why did she seem to like it so much?\n\nI let the question hang in the air as the next clip started.\n\nThis one was of a gorgeous big-breasted brunette on all fours as her tits smashed on a guy's thighs and her mouth took his cock deep in her throat. Another woman was kissing the guy.\n\nThe narration: \"Now let's stay here a bit. Totally admirable woman, huh? Yes, dear. When we see a woman like that, we admire her, we stare like little girls who look at grown up girls and wish that they became like them one day. okay?\n\nAren't you jealous of her sexy black hair? Her ultra smokey eyes? Her earrings? Her bracelets? Her french-pedicure? Her lingerie?\n\nI'm pretty sure you're also jealous of her big fake tits that seem to make this man that hard, aren't you? Hard to tell if it's her tits or her hot mouth that's helping this idol is keep his cock hard.\"\n\nBefore we could say anything, the next clip started up. This one was of a redhead who loosely grasped a long dick in her hand and licked her way up from base to tip.\n\nThe narration: \"There is no need to know much about a woman. sometimes, just the knowledge of her man's size is enough to idolize her. right, honey?\"\n\nI heard Kris mumble next to me under his breath, \"Big cocks give more pleasure...\"\n\nI wonder what Lacey and him had talked about the other night...\n\nThe narration: \"Can you see the hunger, dear? See how she makes him think she's starving for his cock? Isn't it enough to idolize her? When you look at a classy, elegant woman like her, opening her mouth to put a cock in it, you should feel almost proud of her. Think about it: she earned that big cock. That's so impressive.\"\n\nThe next clip started, this was of a brunette in a tight ponytail stroking a cock into the bobbing mouth of a blonde.\n\nThe narration: \"You see two women: a blonde and a brunette. Both having their big, hot tits out in front of him. One of them is giving that man a handjob, while the other is sucking the head of his huge fat cock. They are both idols. but who is more?\"\n\nKris said to me, \"Definitely the blonde.\"\n\n\"Oh yeah? Well it's the brunette who's controlling the situation here, so I'd say her.\"\n\nThe narration: \"Let's see, on the one hand, we have the brunette helping the blonde have some of that cock, while on the other hand, we have the blonde focused solely on the task of making him explode in her mouth. If I was to decide who i would admire more as a friend, I would choose the brunette.\"\n\n\"Told ya!\" I said to Kris.\n\n\"Yeah, yeah. I still think I'm right. Look how she's just accepting that fat dick in her mouth, just bobbing up and down while her hands are dutifully behind her back. She's the idol here.\"\n\n\"You're such a slut.\" I elbowed Kris, joking around.\n\n\"Lol.\" He said, blushing.\n\nThe narration: \"Now you're final test.\"\n\nThe clip switched to a similar one, this time of a redhead girl kissing a guy while she stroked a cock into a brunette's mouth.\"",
        "The narration: \"Which idol are you?\"\n\n\"I mean, I still think the idol is the girl that's stroking while kissing the guy. I mean, I feel like that captures the essence of slut: she's multitasking to get this guy off.\"\n\n\"Oh come on, I'd definitely be more like the blonde. Again, look how submissive she is! Just letting her friend shove thick hot cock in her mouth! Is there anything more slutty than volunteering your holes for easy use? That's definitely my kind of idol.\"\n\nSomehow, the competition had made us forget that we were talking about our slut preferences as if it was what kind of slut we'd want to be.\n\nBut we didn't acknowledge that, and just continued. We watched more of the videos on that day's folder. Most were just straight up porn scenes, nothing like the first video. The main thing was that these scenes were all of two girls with one guy. The whole time, Kris and I went back and forth about which pornstar was acting like the bigger slut. Honestly, it was more fun doing this than anything I did with my friends back home.\n\n__________________________________________________________________\n\nThe next morning I woke up bright and early. I looked over at my laptop, it was open to yesterday's assigned videos from Lana. I turned over and clicked on today's. Wow, it was like 8 hours of videos. There was a text file that read,\n\n\"Here's your assignment for today! You better watch them all, cuz I'm gonna ask you all about them!\n\n-Lana\"\n\nThen below that:\n\n\"And you better start eating better, Bri! I saw you eating pizza the other day and I can't be seen with a slob who eats pizza. Only fruit today, big boy!\"\n\nI woke Kris up,\n\n\"Kris! Kris! Wake up!\"\n\nHe turned over to me and in a daze responded,\n\n\"What, what is it Bri?\"\n\n\"Dude, we have so much to watch today from Lana. Gotta get to it, man. The girls are expecting us to have watched it all.\"\n\n\"Oh?\" he said. \"Yeah, alright.\" He slipped out of bed and threw on some sweatpants and a t-shirt.\n\n\"Breakfast?\" he asked.\n\n\"Yeah, man.\" \n\nWe rushed over the cafeteria and snarfed down all the pineapple and watermelon we could find, and stole some apples for the road.\n\n\"We're already super thin, man.\" Kris said. \"Sure we couldn't have eaten any breakfast pizza? My mom says that I weigh less than she did when she was a teenager! And she was a gymnast!\"\n\n\"Gotta do what Lana says! I want to have the body she wants of me.\"\n\nWe got back to the dorm room and fired up the TV and hooked my laptop back up.\n\nJust as I was opening the first file we heard a knock at the door.\n\n\"Oh shit, shut that off.\" I said to Kris, as the first video opened up to a naked chick.\n\nHe turned the TV off as I got to the door. I opened the door and saw a girl in a tight half t-shirt with the bottom cut off, and it read \"Kappas Pledge Pride!\". She was also wearing Daisy Duke cutoffs that showed off her long tanned legs. Wow, she was a stone cold hottie.\n\nShe was holding a package in her hand, a box with a bow on it.\n\n\"Brit?\" she asked.\n\nEven though that wasn't my name, I was starting to respond to it after Lana had been using it.\n\n\"Umm...yeah.\" I said. Trying not to stare at her tits or legs.\n\n\"Mistress Lana sent you this.\" she said, handing me the package.\n\n\"Oh, ok...\"\n\n\"She says for you and your roommate to follow EVERY instruction. Do not disappoint her.\" she said.\n\n\"Yeah, ok, I can do that. Tell her I will, please.\"\n\n\"You two are in for quite a day.\" she smiled and turned and walked away. Damn she looked good from every angle. The way she swayed her hips and walked showed off her best assets...\"Idol\", I thought.\n\nI closed the door and made sure it was locked. I rushed over to the cough and tore open the box.\n\n\"What is it?\" Kris asked.\n\n\"No idea, but that Kappa pledge just told me Lana wanted us to follow Lana's instructions to the T.\"\n\nNow opened, the package looked like it was a care package of some sort. On the top was a Ziploc bag full of weed.\n\n\"Holy shit, that's like...$200 worth of chronic!\" Kris said. \"We're either gonna get rich or get lit!\"\n\nHaving never smoked weed, I pretended like I knew what he was talking about. \n\n\"Totally, man.\" I responded.\n\nI opened the letter on the top and read it out loud.\n\n\"Hey boys! \n\nI hope your weenies didn't explode when you saw our pledge!\"\n\nWe both laughed.\n\n\"We thought we'd make your weekend all the better since we can't spend it with you. Oh the hard work of being Kappa Sisters during Pledge Week! \n\nInside this box you'll find everything you need for an amazing weekend, and then some! We want you to watch all those videos we gave you while using the contents of the box.\"\n\nI kept reading as Kris explored the contents.\n\n\"First, we worked hard to get you boys some of the best weed around. This strain was made just for the Kappa House by some of the chemistry majors. It's called 'Mistress' Munchers'. We hope you like it. We want you to toke up ALL WEEKEND!\"\n\n\"Fuck yes,\" Kris said as he opened up the weed and went to his desk to grab his bong.\n\n\"Next, we packed you all the calories you'll need this weekend. No more junk from the cafeteria. We've put you both on a special diet by one of the Kappa sisters majoring in Nutrition Studies. There are smoothies that you are to have for each of your meals - they have every vitamin and nutrient you need to be the boys we want you to be!\"\n\nI pulled out several plastic bottles full of smoothies and threw them in the fridge.\n\n\"Next, you'll find what we think will be your favorite items.\"\n\nI pulled out a Victoria's Secret bag.\n\nInside were a bunch of different panties.\n\n\"What is this?\" Kris asked as he saw. I fingered through all the different panties, all of different types and colors and materials.\n\nI looked back at the card: \"We have put in the bag several panties that have been worn this week by yours truly!\"\n\n\"Oh man! They sent us their panties!\" Kris said and grabbed a pair of lacy white bridal underwear and took a big sniff.\n\n\"Fuck, these must be Lacey's! I can't believe I'm smelling her pussy!\" he said.\n\nThe card read, \"That's right, you'll get up and close with the panties that spent some quality time with these hot pussies!\"\n\nWow, these girls are crazy! \n\n\"But that's not all,\" the card continued as I read it. \"We don't just expect you to sniff them (though I bet you already have). We want to SHARE these with you. And sharing means you have to do your part. We expect you to wear each of these panties and tell us which one is the most comfortable and which is the sexiest. In fact, make a list for us. Don't disappoint us.\"\n\nI thought to wearing Lana's panties as I hurried back from the library on our last outing. Kris saw me in them, and now he must think that I'm some kind of pervert.\n\n\"Wow, did NOT expect that.\" Kris said.\n\n\"Me neither.\" I said as I lifted up a pink thong.\n\n\"But...I guess if that's what they want us to do...\" Kris said.\n\nI cleared my throat, \"Umm...yeah, hard to argue with them. It's not like anyone else will know.\"\n\n\"Yeah, and you won't say anything about me...I mean, especially after I saw you, you know, wearing panties the other day.\"\n\n\"Right, now this will make us even.\" I said nervously.\n\nWithout delay, I kept reading the card.\n\n\"And last of all, we included a CD of some relaxing songs we want you to listen to when you're sleeping.\"\n\n\"That's nice,\" I said.\n\n\"XOXO, Lana & Lacey. Kappas!\" The card finished.\n\nKris and I got his bong going as he put some of the weed in it. He took a big puff and passed it on to me. I totally screwed it up at first but Kris showed me how to use the bong and after a couple minutes I was taking hit after hit. \n\nI thought I'd feel woozy, but I just felt...loose, and relaxed. I felt real good.\n\nFor the morning we drank our smoothies and watched the first few videos, mostly standard porn. It had some of my favorite Brazzers scenes, mostly schoolgirl and cheerleader stuff. Me and Kris were so high that we could just let all our thoughts out.\n\n\"Wow, that skirt is so nice,\" he said, talking about a short schoolgirl skirt on the pornstar. She was lifting it up and grinding her ass on the professor's pants. \n\n\"Yeah, I love the plaid.\" I agreed. \"It's like, super hot. Like, it's supposed to be a conservative outfit, but like, it makes it look sluttier.\"\n\n\"Yeah Brit.\" Kris said.\n\nAfter 4 hours of watching porn like this, we took a break and had more smoothies. They were delicious, tasting a bit like fruit but with vanilla and even a hint of caramel. All of them were white, which I guess was food coloring. Weird that someone would make their smoothies look white, but whatever - they tasted amazing.\n\nMy hornyness kept building up throughout the day too. All this porn was getting me turned on, and I was too embarrassed to masturbate in front of Kris. It was like I was on edge all day, just horny as fuck.\n\nBy the time afternoon came around, we were both high out of our minds and giggling like schoolgirls.\n\n\"I can't believe you think that a facial is sluttier than a creampie!\" Kris said, laughing.\n\n\"What! Nothing's sluttier than taking a load on your face! It's the ultimate act of submission!\" I said, laughing.\n\n\"Come on, Brit! Like, a creampie is a guy shooting his load in your pussy! You have to walk around the rest of the day with his jizz dripping down your leg!\"\n\n\"Oh - and that's less slutty than walking around with cum on your face!\" I teased him.\n\n\"Oh my gosh, you'd totally be the slut who walks around with the load on her face! Lol!\" he joked.\n\n\"If you got it, flaunt it!\" I joked. We broke up laughing. Wow, that weed was strong.\n\nThe next video that came on wasn't like the ones from the morning. But by this time, we were so high we didn't even mind.\n\nIt just had flashing pictures. First it was of different female celebrities. Then it flashed in pictures of guys jerking off. No girls with them, just the guys jerking off.\n\n\"Huh?\" I said.\n\n\"Woah.\" Kris said.\n\nIt kept going, just girl after girl, nearly all of them clothed. And mixed in were short clips of guys stroking their dicks. They were all jacked guys with big dicks.\n\n\"What is this?\" Kris said. He was in a daze. \n\nI looked at the file name. \"Babe-Cock\" I read aloud.\n\n\"Huh...I like it.\" \n\nMe too.\n\nWe just sat there, super high and blazed out, watching hot girls and big cocks. It honestly felt relaxing, but arousing at the same time.\n\n\"That guy's cock is kinda nice, isn't it?\" Kris asked as a short loop of a guy jerking a big veiny cock came up.\n\n\"Guess so...like, it's nice and...detailed, you know?\"\n\n\"Yeah,\" Kris said. \"Detailed...I never noticed details on cocks before. But now I see it. The shape of the head, the veins, the color, the balls. So many details to pay attention to.\"\n\n\"Yeah Kris. Yeah...\" I trailed off thinking about cock details.\n\n\"Like, I wonder if this is what girls see when they give head?\" Kris said. \"It's kinda cool, you know? Girls must compare cocks they see as they give head, thinking about the different types. And there must be so many different types...\"\n\n\"Yeah...Yeah.\" I said. \"I mean, like, almost infinite types. Every cock...is different.\" I thought I sounded like a genius, but I must have sounded super high.\n\n\"Wow, Brit. That's brilliant: 'Every cock is different.'\" \n\nThe video stopped and the next one came on. It was actually a self-made video of Lana and Lacey. They were wearing tight workout clothes.\n\n\"Hope you bois are having fun!\" they said to the camera. \"But now it's that time when you better up your game! Break out them panties and go to town!\" \n\nThe short clip ended.\n\nWe were so high out of our minds that we both went to the bag of panties and pulled out a pair each.\n\nThen another clip automatically turned on.\n\n\"Nah-ah-ah.\" said the voice. It was Lana.\n\n\"You can't play with panties without shaving first? That's basic knowledge. Come on.\"\n\nI realized there had been another item at the bottom of the box. I went back to it and pulled out a bag that had women's razors and shaving cream. It also had a Nair hair removal lotion.\n\n\"Well, get to it! And don't be shy, we love swimmers' bodies and all swimmers are shaved. Duh!\"\n\nWe were so high at that point we could barely think straight. Slowly we creeped out the door to the showers. We stripped down and got in and took the razors and Nair with us.\n\nThe next 10 minutes is a haze, but I remember shaving my legs, then feeling like that wasn't enough so I shaved my torso and chest. There was barely any hair to begin with in any of these parts, just barely some blonde fuzz. But once I have shaved by legs and chest, I felt so uneven so I shaved my crotch. Then I felt like my ass wasn't right, so I shaved my ass. Every single curve was shaved.\n\nBy the time I was done, I had shaved myself literally from head to toe, so that the only hair left was on my head. Then I applied the Nair hair removal lotion. It burned at first but then it felt kind of tingly and nice. \n\nI threw on a towel and tiptoed back to my room. Kris was in there.\n\nAnd he was already putting on a pair of panties. They were the white bridal lacy panties he had sniffed before.\n\n\"Woah.\" I said.\n\n\"Brit, it feels so nice.\" he said, sounding as high as he looked. \"So fuckin' smooth.\"\n\nWell, he couldn't be the only one following the girls' instructions.\n\nI kept the towel on as I grabbed the pink thong from before and pulled it on.\n\n\"Oh come on, man. We're roommates, you don't have to hide under that thing.\" he said, pointing to the towel.\n\nHe had a point, we'd probably see each other naked by year's end. It's college, anyways.\n\nSo I shrugged the towel off.\n\n\"Oh wow, Brit. Your weiner is so...cute.\" he said.\n\nI blushed as Kris saw my tiny penis.\n\n\"I'm a grower, not a shower man.\" I said.\n\n\"Don't worry, man. Just look at mine.\" he said as he peeled down the front of the panties and showed me his little penis. It was barely 2 inches and he was definitely hard.\n\n\"Wow, that's smaller!\" I said.\n\n\"I'm a shower, not a grower!\" he joked. We keeled over laughing.\n\nI pulled the pink thong up, loving how the material felt on my skin. Without that peach fuzz of body hair, my skin was so sensitive and the softness of the thong made me feel so nice.\n\nI reached behind and adjusted the backside so that it fit right between my cheeks. That's when I noticed the side had a inscription on it. Well, more of a design sewn into the material. It was a spade like in a deck of cards. The lettering under it said \"QOS\" \n\nI showed it to Kris.\n\n\"No idea, Brit. Must be a Victoria's Secret thing, like the PINK campaign.\"\n\n\"Oh yeah, maybe there's a QOS line of clothes from Victoria's.\"\n\nWe sat back down, both enjoying the feeling of our smooth skin and the soft panties.\n\n\"So much better than boxers, Brit.\" Kris said.\n\nI had to agree, these were more form-fitting and felt so much more comfortable. I could wear these all day.\n\nWe kept watching the porn clips on the folder. We barely noticed that it was close to 8 pm when we thought about dinner. But dutifully we drank our white smoothies.\n\nWhen the videos ended I grabbed the CD from the box and put it on the speakers. It was just mood music, the sounds of the ocean, that sort of stuff. It was really calming.\n\n\"Well, that was quite the day,\" Kris said.\n\n\"Yeah, Kris. I'm beat!\"\n\nWithout even thinking, I got in bed without taking off the panties.\n\n\"Night, Kris,\" I said, as I saw him get into his bed wearing his white panties.\n\n\"Night, Brit.\"\n\nI turned off my lamp and easily fell into a slumber. Must have been all that weed we smoked, but I was off into La-La Land in seconds.\n\nI woke up a few times that night and the CD was still playing. A female voice was speaking.\n\n\"No don't do it. Don't do it.\" she urged.\n\nThen another female voice, \"You want to do it! You crave it!\"\n\n\"No! Don't!\" the first voice spoke. \"Don't lick it!\"\n\n\"Lick it, love it!\" the other voice. \"You want it, you need it!\"\n\n\"If you lick it, you won't be the same!\" \n\n\"Don't think, just lick it, you NEED to lick it!\" the other voice.\n\nI slipped back into sleep.\n\n__________________________________________________________________\n\nThe next day, Sunday, Kris and I both woke up at 6 AM like clockwork. We didn't say anything to each other as we got out of bed and noticed we were still wearing the panties. Silently we went to the bathroom and showered and got ready.\n\nI realized that we hadn't been outside in 24 hrs. But that didn't bother me, because I knew the girls had more videos for us and who was I to disappoint them?\n\nI got back to the room after showering and saw Kris. He was on his laptop, about to fire up the USB that Lacey gave him. When he stepped away from his desk I saw him completely.\n\nHe was wearing a new pair of panties, these ones yellow Cheeky panties, that hugged his waist and showed off his thick ass.\n\n\"Hey, Brit. Just getting out assignments started.\" he said.\n\n\"Thanks Kris.\" I said. \"You're such a good student.\"\n\n\"First class I've been good at!\" he said.\n\nWell, it would feel weird if I wore regular boxers or briefs while he wore panties. So I went over the bag and pulled out light blue Brazilian Brief panties. They had the same black spade design on the front as the last pair I wore.\n\n\"Someone likes that spade design!\" Kris said.\n\n\"For some reason, yeah. These are kinda nice, aren't they?\" I asked, showing off the sides and turning around for him.\n\n\"Totally! Plus, your butt looks really good in them.\"\n\n\"Don't tease me! I'm really self-conscious about my butt. It's too girlish.\"\n\n\"What! It's so nice! Girls love a full ass, trust me.\" he said.\n\nHe turned around and showed me his ass, \"I can't tell you the number of times girls in high school gave me compliments! They all said they were jealous, dude. They love it!\"\n\nHe did have a nice butt, really firm but also jiggled when he moved.\n\n\"Thanks, Kris. Makes me feel so much better. I bet that's why we got the hottest girls on campus!\" \n\n\"Totally!\"\n\nHe turned on the first video. It was more of the Babe-Cock videos, rapid fire shots of girls then cocks.\n\nWe made up a game where we would name the actress or pornstar that flashed on the screen, then if you got the right then the other person would have to name a detail of the cock that flashed after.\n\n\"Eva Longoria!\" Kris shouted.\n\nThen a cock popped up on screen.\n\n\"Pink cockhead!\" I said.\n\nThen another.\n\n\"Taylor Swift!\" I shouted.\n\nThen a cock.\n\n\"Thick shaft!\"\n\nIt was so fun! I think I won at the end of it.\n\nWe had our smoothies for lunch and sat around in our panties lazing about.\n\n\"This is super fun, Brit.\" Kris said.\n\nI agreed, I was loving having a close friend and feeling like I was growing and learning in college.\n\n\"These lessons are super fun. I'm really glad the girls arranged this.\" I said.\n\n\"Idols!\" he said.\n\n\"Idols!\" I agreed. \"It's gonna stink having to do real classwork again next week.\"\n\n\"I know!\" Kris said. \"I wish we could just do this all day, every day. Just get high, watch porn and feel good.\"\n\n\"Part of me wonders if it's cuz you love wearing those panties.\" I joked.\n\n\"Guilty as charged!\" he said. \"But what I can say? They're sooo comfortable, especially without pesky body hair. I feel so light and fun. Plus, you can't tell me my legs don't look good in these.\"\n\nThey did. Kris has a lithe body with long legs. His years of being a track runner showed off.\n\n\"Show off.\" I said.\n\n\"Only thing showing off is all that ass in your panties!\" he said.\n\n\"Like I said,\" I joked, \"If you got it, flaunt it!\"\n\nWe were insufferable! By that time we had gotten into the weed stash again and were spiraling deep into an amazing high.\n\nAfter we finished out lunch smoothies, I turned on the next video. \n\nThe title screen flashed, \"What is your purpose?\"",
        "It started with a clip of Remy LaCroix, one of my favorite pornstars, dancing in tie-die panties.\n\nThe text underneath, \"What do men want?\"\n\nKris yelled, \"PUSSY!\" \n\nI laughed, then shushed him, worried we'd be heard outside.\n\nThe video continued with more hot girls wearing panties and showing off their butts.\n\nThe text, \"Feminine holes to fuck\"\n\n\"See,\" Kris said, \"I was right!\"\n\nThe video continued with girls twerking.\n\nThe text: \"Obedient Penis Pleasers.\"\n\nMore hot girls playing with their fat asses.\n\nThe text: \"That's purpose.\"\n\nIt continued showing girls walking around in underwear and high heels.\n\n\"They sculpt their bodies and butts...to be what men want.\"\n\nMore girls dancing around in bikinis and underwear.\n\nThe text: \"Dress like a whore, flirt like a slut.\" \n\nMore girls, and then it showed Jada Stevens and Remy Lacrois=x lying together wearing tight workout clothes that showed off their amazing asses.\n\nThe text: \"One purpose: to get cocks hard.\"\n\nMore clips of girls jiggling their asses.\n\nThe text: \"To fulfill the true purpose...to offer all men those feminine holes.\"\n\nThe music built up, a hip hop beat that was thick.\n\nThe text: \"Get to work bitch\" as a clip of a girl in leopard-printed panties shaking her ass, then a girl sucking a fat dick.\n\nThe text: \"Offer that mouth.\"\n\nThe girl looked like she was choking on that cock, but seemed to enjoy it nonetheless.\n\nThe text: \"Get poked and prodded.\"\n\nA clip of a guy mounting a girl and shoving his big dick in her asshole.\n\nThe text: \"Offer your asshole...Giving up those holes is purpose...Men belong inside those holes...\"\n\nMore videos of girls taking it up the ass.\n\nThe text: \"Be his Anal Whore...show him how bad you need to get fucked.\"\n\nBack to a clip of a girl deepthroating a cock.\n\nThe text: \"Give men what they want...it just feels so right.\" The next video was of a girl strapped to a bar. I noticed she wore high white socks and nothing else. A guy thrust himself into her from behind.\n\nThe text: \"Taking cum up the ass...needing cum inside those holes...whichever hole the man chooses.\"\n\nA clip of a guy unloading into a girl's mouth.\n\nThe text: \"Making guys cum is the highest purpose...the feeling of accomplishment...feeling sexy...for being the one who gives men what they want.\"\n\nThen the hip hop beat played out and the video ended.\n\n\"Fuck.\" was all Kris said.\n\n\"Yeah, wow.\"\n\nBefore we could debrief, another video started.\n\nThis one was narrated like the one from yesterday. It started with a video of a girl licking up a cock.\n\nThe voice: \"You've been watching lots of girls in porn today, haven't you?\"\n\nIt continued, \"But I want you to change how you watch porn. Trust me, it'll be so much better for you!\"\n\nThe video had two blondes licking a cockhead.\n\nThe voice: \" Porn is made in order to stimulate sexual desire. One way of doing this is by adding big sexual cues. It can be many things...\n\nA gimmick you find in many porn videos and know almost unconsciously. \n\nFor example: The pornstar looks at the camera when she gives a blowjob. It's a classic. It's used to make the viewer imagine he's the one getting his dick sucked.\"\n\nThe video had a girl giving a blowjob and staring right at the camera.\n\n\"Well today you're going to spot this gimmick and give it another meaning.\n\nReady? Great!\"\n\nBefore we could say \"Yes!\" it continued.\n\n\"Step 1: Beautiful women make you so jealous. You would kill to know what's it's like to be so sexy! You have a natural admiration for sexy women.\" \n\nThe video showed a girl showing off her body in a bikini, strutting down a fashion walkway.\n\nIt then cut to a clip of a blonde stroking and sucking a long thick dick.\n\n\"Step 2: Step 2 : Envy her skill. You will carefully examine her every move. Pornstars know how to suck a dick, how to act slutty. She is so good at this!\"\n\nShe really was, I thought. This was one pornstar who knew her craft.\n\n\"Think about all the training she has. She's clearly better than you at this and you know it. Doesn't it make you envious sweety?\"\n\nI mean, I wasn't gay so I didn't know how to suck a dick, so I guess yeah sure she must be better than me. Was I envious? I don't know. I mean, she looked like she was having fun. She was very sexy, that's for sure. Sexy girls always seem like they're having more fun. \n\n\"Step 3 : Realize she knows you're jealous and mocks you as she stares at you and sucks that cock.\"\n\nShe did look like she was taunting me, as if she was saying, 'Look what I have and you don't!'. And she would be right - I had no idea what a big cock felt like, just my tiny little weiner. I mean, she wasn't the one with the cock but in a way I guess she kind of was the one that was enjoying it.\n\n\"Now it's the tricky part. You have to take that look like a mockery, a taunt. Imagine her as a winner of a competition staring at you.\n\nHer stare means something like this: I'm the one who gets to suck this big cock.\n\nNot you loser!\"\n\nWow, it's like the video read my mind.\n\nThe next clip was Elsa Jean and another pornstar sharing a truly giant cock to suck. Elsa was looking into the camera as she kissed the cock. She definitely had that look of, 'Look what I get to do? Jealous?' I started to wonder how much fun those girls were having with that cock. They really did make it seem like they were having the time of their lives. The guy was kind of secondary to the scene, it was about these girls and their fun.\n\n\"Step 4 : Accept she's right and you wish you had as much fun as she is sucking this cock! Finally, realize how right she is. That big cock is giving her so much pleasure! She knows just how to give it pleasure and get pleasure from it! Her skills are amazing!\"\n\nIt switched back to the first clip with the blonde sucking the cock.\n\n\"Now, let's go back to the first clip. But this time, you're going to change the meaning of that sexy look. OK honey? She's looking at you because she knows how much you envy her. Stare at this image for 10 seconds and imagine what she could say to you.\"\n\nKris and I stared. I imagined she would say, \"I love feeling sexy and I am loving sucking this big thick cock.\"\n\nThe video: \n\n\"You would kill to be having as much fun as I am, wouldn't you? I'm loving playing with this big, powerful cock? You're such a loser!\n\nDoes this make you horny? I hope so. It should! \n\nHow turned on are you right now?\n\nThink about it...\n\nIsn't this a better way to watch porn?\n\nYou're clearly not a regular guy watching porn, you're something special.\"\n\nThe video showed a clip of a redhead taking a load on her face as she smiled at the camera.\n\n\" Do it again : 10 seconds\n\nStep 1 : Envy her body \n\nSept 2 : Envy her skill\n\nStep 3 : See how she's mocking you.\n\nStep 4 : Admit she's right.\"\n\nThen a clip of Tori Black on her hands and knees, two hands on a cock as she kissed the head.\n\n\"You would love if she could teach you a few things about having fun...\"\n\nThen a clip of her playing with cum that was sprayed on her face as she looked into the camera.\n\n\"To be a slut is not easy, it takes time and commitment. \n\nTo see things with a new point of view, to realize what is really turning you on.\n\nYour brain will do the rest of the work and rewire the connections. \n\nTake your time when you watch these sluts. Do not rush, you want to rewire your brain not to just jerk off.\n\nYou're in training, and you should be proud of yourself and your development.\n\nYou're getting a whole new 'team'. All these sluts, all these sexy girls are now your team. Support them, admire them, join them.\"\n\nThe video cut out with Tori smiling into the camera.\n\n\"Feel free to do this exercise with other porn material.\n\nAfter all your training is not finished... \"\n\nKris and I looked at each other.\n\n\"That was fucking hot.\" he said.\n\n\"So hot!\"\n\n\"Love Tori Black! Idol!\" Kris said.\n\n\"Omg, yes, totally. She is, like, such an idol. I love her work, she can handle any cock that comes her way!\" I said. I had watched her work for years, and she was one of the best.\n\n\"Yes! Like, she can handle any challenge. Wish I could hang with her!\"\n\n\"Same!\" I said.\n\nWe kept smoking more of the weed and talking about our favorite pornstars.\n\nAnd we watched more of the videos throughout the afternoon and evening. My personal favorite was one of girls sucking cock. As clips cycled from one to the next, the words on the screen kept popping up: \n\n\"Suck. Fuck. Reward.\" and the corresponding clips would be girls sucking, getting fucked, then getting a cumload on their faces. It happened over and over. I loved it. So simple, just brilliant.\n\nKris and I spent the rest of the evening relaxing in our panties before we finished that day's set of videos. I put the CD back in and played it as we went to sleep, enjoying the calming feminine voices.\n\nThat night I thought I woke up as I heard the CD play.\n\n\"You love it, he is giving you everything you need.\" a soft feminine voice said.\n\nAnother voice said, \"This is your purpose. You love fulfilling your purpose. It's so simple..accept it...\"\n\nThe other voice again, \"Give them what they want. You love the feeling of being wanted.\"\n\nThe second girl's voice, \"Let go, give in to pleasure. You know what gives pleasure.\"\n\nI drifted off back to sleep.\n\n__________________________________________________________________\n\nThe next morning I got up before Kris did since I had the earliest class. When I got out of my bed I noticed Kris had his covers thrown off. I looked at him, still wearing panties and admired how nice his ass looked. I thought to myself that I should mention that to him later today.\n\nI reluctantly peeled off the panties I was wearing and showered. Almost reflexively, I grabbed the razor and shaved my body again. I guess I just liked the way it felt.\n\nIn the bathroom mirror I noticed that my nipples hard started looking puffier. And as though I had a bit of fat behind them. I swear it look like I was starting to develop breasts. Meh, must be the new body wash I was using.\n\nBack in the room, I picked out what I'd wear that day, just jeans and a t-shirt. But then I thought about underwear. I don't know why, but I went to the Victoria's Secret bag and pulled out a red thong. Feminine, but not too obviously so. I put on the rest of the outfit, grabbed a smoothie from the fridge and headed to class.\n\nIt was an English class and we talked about some English lit book that I barely read. I think it was Charles Dickens or something, but I barely paid attention. \n\nThe rest of the day was just as boring, hopping from class to class and mindlessly jotting down notes. This was intolerable, I craved being back at the apartment watching porn that the girls sent. I thought back to how much more I learned from those videos than I did in these boring classes. I mean, I definitely paid way more attention to those videos than class, that's for sure.\n\nWalking to the library between classes, I sipped on my lunch smoothie and my mind wandered.\n\n\"Brit, there you are!\" I heard a voice from behind me.\n\nIt was Lana! She looked super hot wearing a short blouse and skirt. \n\n\"How did my favorite boi enjoy her weekend treats?\" she asked.\n\n\"Lana, I can't thank you enough - it was the most fun I've had in like, ever! I think I definitely learned a lot!\"\n\n\"I'm so glad! That was curated just for you and little Kris! That weed wasn't easy to get either!\"\n\n\"It was so worth it - I don't think I've ever been that high in my life!\" \n\n\"It probably made those videos all the more sexy!\" she said. \"I bet those videos just sunk right in, didn't they?\"\n\n\"Totally.\" I said.\n\n\"And how bout the other special package?\" she said, winking at me as she walked with me.\n\n\"Ummmm...we...we enjoyed those too.\"\n\n\"Enjoyed? I think you're still enjoying them!\" she said, and reached behind me and pulled the side of the thong up around my hips.\n\n\"Lana! Everyone will see!\" I almost shrieked.\n\n\"Oh, let them see you prude!\" Lana said as the wings of the panties rode up my hips so anyone could see. \"Be proud of it! I bet you look great in them! I bet you look sexy!\"\n\nHearing her say that I could look sexy immediately silenced me. We kept walking, me being only slightly self-conscious of the fact that some people may guess I was wearing panties.\n\nWhen we got to the library Lana wrapped her arms around my neck and gave me a kiss on the lips.\n\nI bet all the guys who saw us were jealous. Maybe they didn't see my panties sticking out my sides.\n\n\"I'm so proud of you! I can't wait until we play again! This Friday the Kappas are holding their Annual Pledge Week Party. It's super exclusive, and I want you and Kris there!\"\n\nWow! That was amazing!\n\n\"Of course! I'll be there!\" I said.\n\n\"Good boi.\" she said and smacked my ass. \"Now drink that smoothie up. There should be another package at your door by the time you get home.\"\n\nThis week just kept getting better and better.\n\n__________________________________________________________________\n\nKris and I kept watching porn together that week, and even re-watched lots of the videos from the girls. We loved playing the Babe-Cock game that we made up and we even started remembering details about some cocks to the point where we could name which male pornstar they belonged to. I think I remembered more of those than I did things from my classes. But hey, it was way more fun than studying for class.\n\nIt felt like forever before Friday rolled around, but when it did me and Kris were ecstatic. We rushed back to our room from classes to get changed.\n\n\"I think the girls expect us to wear panties.\" I said to Kris as I went to the bag.\n\n\"Even if they didn't, I think I'd wear them anyways!\" Kris said. \"I've been wearing them all week! They're so much more comfortable and feel great now that I shave every day.\"\n\n\"Me too!\" I said. \"Those swimmers are really onto something with the whole-body shaving thing.\"\n\nI chose a pink thong and Kris went with a yellow Tanga lacy pair. We then put on plain white t-shirts and slim cut jeans. We probably could have been mistaken for twins, with our matching outfits, long-ish blonde hair and slim bodies.\n\n\"You look amazing, Kris!\" I said when I saw him.\n\n\"Right back at ya, Brit!\" he said. I was getting used to the 'Brit' nickname, and kinda preferred it to Brian.\n\nWe headed over to the Kappa House where the party looked like it was already going in full. There was a line out the door of guys and girls, and those girls were wearing slutty party outfits.\n\nWe walked up to the entrance and saw the same pledge that brought the box of fun from last weekend.\n\n\"Hey!\" I said.\n\n\"Oh hi bois,\" she said. \"Lana and Lacey are expecting you.\" \n\nShe let us in and pointed us up the stairs. \"They're in Lana's room getting ready, meet them there.\" We walked in and heard the complaints and groans from those in line, jealous that we cut the line.\n\nWow, I'm getting the exclusive treatment! I must look so cool.\n\nWe made our way upstairs to Lana's room, having to shove through the throngs of partygoers inside to make our way to the stairs.\n\nKnocking, we heard Lana's voice telling us to come in and when we did we were glad we came.\n\nThey were dressed in the same super short black cocktail dresses. Their hair looked amazing, falling past their shoulders in styled locks. Their breasts looked amazing, each having perfect C-cups. And they wore high heels that showed off their long sculpted legs.\n\nOur jaws almost dropped.\n\n\"Wow,\" I said. \"You both look AMAZING.\"\n\n\"Oh thanks sweetie!\" Lacey said, ushering us in. \"Can't be a Kappa if you don't dress to the nines for these parties.\"\n\n\"She's being modest.\" Lana said, walking to me and grabbing my arm. \"She knows that the whole football team will be here at the party tonight and she's ready to snag one of those hunks.\"\n\nI wondered if Kris would get jealous that this girl he was after was trying to get with a football player. But he if he was, he didn't act it.\n\n\"Looking like that? I bet you'll no trouble doing that, Lacey.\"\n\n\"Aw, thanks Krissy!\" Lacey said, squeezing his arm.\n\nDid she just call him 'Krissy'?\n\n\"Well you boys look super cute too!\" Lana said.\n\n\"Thanks Lana, nothing special.\"\n\n\"It's like you're twins, super cute twins!\" Lacey said.\n\n\"Yeah, almost the same exact outfit.\" Kris said.\n\n\"Almost?\" asked Lacey.\n\n\"On the outside at least.\" he hinted.\n\n\"Oh you naughty boi! Don't tell me - you're wearing our panties?!?\"\n\n\"Guilty!\" Kris said. Wow, he wasn't holding anything back.\n\n\"Show us! Show us!\" Lacey said.\n\nSo we stood back and pulled up the sides of our underwear. You could see the edges of Kris' yellow tanga panties and my pink thong.\n\n\"Oh come on! We want to see the whole thing.\" Lana said.\n\n\"I dunno.\" I said. \"Might be a bit weird.\" I said.\n\n\"Weirder than wearing panties to a college party?\" Lacey said.\n\n\"Yeah, Brit. It's not a big deal. Let the ladies have a peek! They'll love it.\" Kris said to me.\n\nI wasn't getting out of this situation. So we each unbuttoned our jeans and pulled them down, showing these beautiful sorority girls that we were wearing their panties.\n\n\"Oh my god! And you shaved!\" Lacey said.\n\nI blushed, starting to pull up my pants.\n\n\"No, don't!\" Lana said. \"Don't be embarrassed! I'm so proud of you both.\"\n\n\"Yeah,\" Lacey jumped in. \"And honestly, I'd kill for my ass and legs to look like yours. I can't tell whose ass is nicer, Brit's or Krissy's.\"\n\n\"Obviously Brit's.\" Lana said.\n\nFor some reason that made me feel good about myself. Maybe Kris was right, girls really liked our butts.\n\n\"But I'd do horrible things to get legs like Krissy's.\" Lana finished.\n\n\"Agreed!\" said Lacey.\n\n\"Oh gosh, thanks girls\" Kris said. He was really getting into this girly talk.\n\n\"But you definitely can't go to the party dressed like that.\" Lana said.\n\n\"Yeah, so...plain. Does nothing for your body.\" Lacey agreed.\n\n\"Well I guess we could head back and change, but it'll take a while. Hopefully we won't miss anything.\" I said.\n\n\"Oh no!\" Lana stopped me. \"We have some clothes here you could wear.\"\n\nI got nervous, thinking that she had a bunch of guys sleep over so she had the clothes they left here.\n\n\"Yeah!\" Lacey agreed. \"We can find you something of ours that'll look so good on you.\"\n\n\"Like, women's clothing?\" I asked.\n\n\"Oh, shush.\" Lacey said. \"These are unisex. And after all, you're wearing our panties so it's not that big of a deal to wear some of our other clothes.\"\n\n\"Yeah, Brit.\" Kris said. \"It's not that much different, I guess. Plus I don't wan to miss the party.\" \n\nGuess I'm not getting out of this either.\n\nThe girls rustled some clothes in Lana's closet and pulled out a few pairs of clothes.\n\nLana threw a white crop top and denim short shorts. \n\n\"Really?\" I asked Lana.\n\n\"You'll love it, Brit. I promise. Just trust me.\" she said.\n\n\"Yes Lana.\" Who was I to resist this woman?\n\nAs I got to her bathroom to change, I heard Lacey say to Lana, \"I'm gonna take Kris to my bedroom, I think I have the best outfit for him.\" They shut the door behind them.\n\nI put on the crop top and noticed that my nipples, which had grown swollen and puffier the past few week, had gotten really hard and were almost popping through the shirt. I tried to massage them to calm them down but that had the opposite effect of feeling surprisingly good and getting them even harder!\n\nAbandoning that, I grabbed the denim short shorts, sort of like Daisy Duke style. I thought they'd be too tight and not fit but they actually pulled up nicely and fit like a glove. Turning to her mirror, I admired my ass in them. Wow, if I saw this ass on the street even I would holler. The jeans shorts made my asscheeks look round and full, and you could see little undercheek too. And not to mention my legs. Wow, shaving them made them look even longer and shinier. ",
        "I walked out to see Lana playing on her phone. She looked up.\n\n\"OH MY GOD BRIT!\" she said. \"I LITERALLY CANNOT BELIEVE IT.\"\n\n\"I look like a fool.\" I said. \"This is like some freak Halloween costume.\" I turned to change back into my clothes.\n\n\"Don't you dare, Brit! You look AMAZING!\" she said, getting closer to take me in. \"Honestly, I just can't believe hot perfect this looks on you.\"\n\n\"Umm, well thanks.\"\n\n\"You know what, you have a tiny little blemish on your chin that we should cover up\" She grabbed my hand and brought me back into her room and sat me down at her table.\n\nShe looked down at me as I sat there looking up at her. Lana grabbed her makeup kit and opened it.\n\n\"I don't know bout that.\" I said.\n\n\"Oh don't be so silly. I hate when men try to act all toxic hetero.\"\n\n\"Everyone will make fun of me if I have makeup on.\"\n\n\"It's just to cover your blemish, silly. Plus, male actors wear makeup and no one makes fun of them. I mean, even The Rock wears makeup and he's a prime specimen of masculinity, isn't he?\"\n\n\"Fine, just cover it up.\"\n\nSo she got to work on my chin blemish, rubbing in some creams and then some paste. But then she started rubbing things on other parts of my face. I thought this was just for my chin...\n\n\"You know what,\" she said, looking at my eyes. \"I think I could make your eyelashes pop. Plus, your gorgeous blue eyes aren't getting the attention they deserve.\" \n\nAnd without even asking my permission, she took out her eyelash curler and mascara and worked on my eyes and eyebrows.\n\nA few minutes later, she stopped. \n\n\"Oh, and this hair. I love how long it is, but it's a bit...floppy.\" \n\n\"Yeah, it's my messy look, like 'I-just-got-out-of-bed look. Girls love that.\"\n\n\"Some girls...but I think some product would help.\" She grabbed some mousse from her bag and smeared it through my hair, mussying it up and then smoothing it out.\n\n\"There, perfect!\" she said. \"Oh gosh, let's show you the full thing!\"\n\nShe pulled me over to her mirror, covering my eyes as she did.\n\n\"Ta-da!\" she said, uncovering my eyes.\n\nI looked in the mirror and couldn't believe what I saw.\n\nI was...stunning. I mean, yes, I looked like a girl, but wow...a gorgeous one. If I saw standing on the street what I saw in the mirror, I would gawk.\n\nMy blonde hair was done in a way that made me look a little pixie-esque, sort of like Carey Mulligan.\n\nI was...hot. I'd never felt this attractive before in my entire life. I turned to see my profiles and admired how nice my ass looked.\n\n\"Like what you see?\" Lana said, interrupting my reverie.\n\n\"I'm...hot.\" I replied.\n\n\"YES YOU ARE!\" she said and embraced me. We stood there looking at ourselves in the mirror. \n\n\"You'd fit right in with us Kappas looking like that. Isn't that so cool?\" she asked.\n\n\"Yeah, amazing.\" I said, still staring at how good I looked.\n\n\"Enough vanity!\" she said. \"Time to pre-game!\"\n\nLana made us some really strong cocktails and lit up a blunt. We sipped our drinks and toked up, as Lana asked me about the videos she had us watch. I told her all about how exciting they were and how they changed how I saw porn. \n\nI felt myself getting lightheaded and hazy as we drank and smoked, and we eventually we just gossiping about famous athletes on campus and she was telling me which ones she knew and how they all wanted to party with her. I just sank in and smoked and got drunk while I stroked my shaved legs and admired my flat hairless midriff. I was really enjoying this.\n\n\"No time to waste, then!\" Lana then said. \"Let's go party!\"\n\nI was too gone by then to refuse or tell her that I couldn't possibly be seen in public like this. Instead, I just followed her.\n\n\"But before we leave, choose your lipstick Brit!\" she showed me her array of different colors. I chose the hot pink just because I thought that's the color I found hot on girls. When I put it on, I made a kissy face to the mirror just to be fun.\n\nWe then made our way downstairs with Lana holding my hand.\n\nThe music was pounding, loud hip hop and rap songs that I barely knew. Lana dragged me through throngs of sweaty people until we got to the basement. Down the steps we went until we were in the thick of it, with gyrating bodies all around as a DJ played a dirty rap song.\n\nThe song, I found out later, was called \"Dance (A$$)\" by Big Sean.\n\nI heard the lyrics as we walked through the crowd to the bar.\n\n\"I'm looking all good I'm making her wet\n\nThey pay me respect they pay me in checks\n\nAnd if she look good she pay me in sex\n\nBounce that ass its the roundest\n\nYou the best you deserve a crown bitch\n\nRight on that ass\"\n\nAs we got closer to the bar, I felt a hand squeeze my ass. I looked at who did it but couldn't figure it out, there were just too many people. I somehow didn't mind it though.\n\nWe made it to the bar and Lana handed me a drink and I gladly drank it up. My first college party and I was hanging with the hottest girl on campus while I looked...like a hot girl. It would have been too much to handle had I not been so drunk and high. \n\nA guy walked up to Lana and said something in her ear. I couldn't hear anything they said since it was so loud, but after he talked to her Lana came close to me.\n\n\"He's one of the new basketball players and he and his friend want to dance with us.\"\n\n\"I...I don't know about that.\" I yelled over the noise into her ear.\n\n\"Oh come on, Brit!\" she said. \"Just go with the flow - dance with me and they'll dance around us.\"\n\nWell, if it meant dancing with Lana...\n\n\"Ok!\" I said to her.\n\nShe grabbed my hand and we moved to the middle of the dance floor, surrounded by people. The guy, a tall buff guy in a tank top and shorts followed us, and he signaled to his friend, who was somehow even taller and jacked. He was also just wearing a t-shirt and loose gym shorts.\n\nLana grabbed me and starting shimmying her hips against me, thrusting her butt into my crotch. If these shorts weren't so tight and my penis so small, I'd definitely be sporting an obvious boner. But alas, I was aroused and left no evidence of it.\n\nI rubbed my crotch into her ass and swayed with her. I looked around and saw lots of guys grinding with girls like this, but I realized I was dressed like a girl and we must just look like typical college girl ho's dancing with each other trying to look sexy.\n\nBut I went along with it because Lana was moving so sexily and I enjoyed feeling her body against mine.\n\nThe guys then made their move and one came in front of Lana and the other guy (the bigger one) behind me. They started grinding against us from both sides. I just kept swaying with Lana, but then she turned around to face me.\n\nHer eyes were closed and she was smiling, as the guy came up behind her and grabbed her hips. She put her arms up and played with her hair as she shook her ass against his. Wow, she looked so sexy.\n\nI was mesmerized, but then the other guy grabbed my hips from behind and ground himself against me.\n\nThe first thing I noticed: I'd never been touched by a guy this way before.\n\nThe second thing I noticed: His big bulge was rubbing against my ass.\n\nI looked at Lana, bug-eyed and scared. She grabbed my chin and kissed me before saying in my ear, \n\n\"Just do what I do.\"\n\nShe put her hands on the guy's hands on her hips and shook her body left and right.\n\nSo I did the same.\n\nThen she rolled her body and thrust her butt against the guy's crotch.\n\nSo I did the same. I felt his big member stir in his shorts.\n\nShe spread her legs apart and ducked down at the waist and flipped her hair up as she leaned back up.\n\nSo I tried to do the same, but much clumsier. But it still had the same effect, as this guy's cock was enlarging. It felt like a can of cookie dough rubbing between my ass cheeks. Honestly, it felt kind of nice to have something wedged between there. Almost like it filled the gap nicely...\n\nWe kept gyrating against the men behind us and Lana grabbed my hands as we swayed together against them.\n\nThe lyrics kept going:\n\n\"Bad bitches I'm your dada white girls go gaga\n\nSticks out they bust so it they open like yaya's a pinata\n\nBitch look down tell me what's up\n\nGirl you talk to much shut up\n\nI got that mad dick you know it always nut up\n\nAnd it got a attitude no wonder why it's stuck up\n\nPop it then back up yo gymnastics got me ecstatic\"\n\nLana smiled at me and I smiled back, truly enjoying how she was guiding me along. I don't know why but I didn't think twice about the idea of a guy grinding against my ass. I was soaking up the feeling of being desired.\n\nI had the hottest girl around playing with me as a popular basketball player thought I was hot enough to dance with. I was literally desired by the most popular people on campus and it felt...amazing. I wasn't a nobody anymore. I wasn't just another skinny little white boy without romantic prospects. No. I was this sexpot dynamo that was enjoying the attention of people who wanted to bed her...I mean him.\n\nThe song kept playing as I tried to shake my ass in earnest against the guy behind me.\n\n\"Short girls (short girls)\n\nGo small girls (small girls)\n\nGo skinny girls (go skinny girls)\n\nGo all girls (all girls)\n\nShake that ass girl\n\nShake that ass girl\n\nShake that ass girl\n\nShake that ass girl\n\nAnd I want all of that ass\n\nStop, now make that motherfucker hammer time like\n\nGo stupid, go stupid, go stupid, go stupid, go stupid\"\n\nI felt like I really did \"go stupid\", just shaking and dancing and playing with my hair as I teased the guy behind me.\n\nThen the song faded and a slow R&B mood song came on. That's when I snapped to and realized I was still gyrating on this guy.\n\nI stopped, feeling kind of embarrassed. Lana thanked the guys, who clearly wanted to take us outside and do horrible things with us. Then we walked back to the bar.\n\nAnd that's when I saw her.\n\nShe was dancing with Lacey and kissing her in the corner. But our eyes met. This cute pixie-girl with blonde hair wearing a black jumper that showed off her lithe body and curvy ass.\n\nLacey say me too and whispered in her ear. They walked over to me and Lana at the bar. Lacey said a few words to Lana as the new girl just looked so cute next to her. Then, Lana, Lacey and the new girl went back to the dancefloor and I followed along.\n\nWe all then threw out sweaty bodies against each other and started grinding against each other. First me with Lana, then Lana with Lacey...and then last with me and the new girl.\n\nI even drew up the courage to squeeze the new girl's ass and it was so plump and felt amazing in my hands.\n\nThen Lana and Lacey grabbed both of us by the hands and walked us out of the basement to the main floor. When we got the the main stairs, they gestured us upstairs as they waited downstairs.\n\nSo I walked up to Lana's room with the new girl in tow. I couldn't believe I was about to score with this girl that I had just met. Maybe she wouldn't mind that I was actually a guy despite how I was dressed tonight.\n\nI opened Lana's door and the pixie girl followed me inside. I didn't know how to make a first move so I just sat on the bed and looked at her. She also seemed shy and slowly went to sit next to me.\n\nI put my hand on her leg. She did the same to me. Her hand was so petite and cute, though I guess mine looked similar.\n\nI looked deep in her eyes, those gorgeous green eyes. Then I just decided to make my move and dove in for a kiss. \n\nShe didn't seem to mind my aggressiveness, and actually returned it in kind by sticking her tongue in my mouth.\n\nOur tongues battled as we made out on Lana's bed. I reached over and put another hand on her, this time on her side to draw her in. She upped the ante by climbing on top of my lap as we continued to make out with each other.\n\nWow this was hot. If these shorts weren't so tight, I'd be bursting. \n\nBut then we heard noises outside the room, the sounds of deep male voices as well as Lana's higher voice.\n\nI panicked. And so did this new girl. She hopped off of me and I looked around. I saw Lana's closet and realized we could both slip in there and hide.\n\nSo I ushered the girl to join me in the closet and shut the door behind us as the front door of Lana's bedroom opened.\n\nThere was Lana with Lacey, and behind them the two guys that I had been dancing with earlier with Lana.\n\nThey were kissing and groping each other as they both fell back on the bed. These two couples went at it like animals, pulling their clothes off each other. Lana and Lacey were quickly down to their lingerie while the guys tossed their clothes on the floor hurriedly.\n\nThe girl and I watched as Lana and Lacey got on their knees on the floor as the guys sat on the edge of the bed and took off their boxers.\n\nBut our eyes were diverted to what those guys were packing. Each had dicks that were at least 8 inches long, and both meaty. I didn't know what was hotter, these two girls on their knees in lingerie, or the sight of those big dicks about to please them. \n\nThe pixie girl next to me seemed to be getting turned on too. She was wide-eyed watching the scene in front of us.\n\nThe second the girls' lips touched those cocks, the pixie girl grabbed my hand. I could feel my heart racing as I got turned on watching the sexiest girls I had ever seen go down on these two delicious looking cocks.\n\nDid I just think \"delicious looking cocks\"? \n\nThe pixie girl started rubbing the front of her jumper shorts. Wow, she was getting into this.\n\nI looked at her face and her tongue was practically hanging out of her mouth. I realized that I too was salivating more as I saw Lana suck the head of the cock in her mouth.\n\nI couldn't take it any more, I dove at the pixie girl and starting kissing her again. We made out harder than before and I ran my hands all over her soft body. Her skin was so supple and smooth and I slipped my hands on her thighs and up her jumper. She gestured me to stop so I resigned myself to running my hands up and down her smooth long legs.\n\nWe went at it for what must have been minutes, just trading spit and rubbing ourselves against each other.\n\nWe were almost so lost in each other's bodies that we didn't notice the front doors opening and closing and then the closet doors being swung open.\n\n\"OH WELL WON'T YOU LOOK AT THIS!\" came a voice standing over us.\n\nI was on top of the pixie girl, each of us writhing against each other, and we both looked up at the voice.\n\nIt was Lana.\n\n\"That didn't take much at all.\" A smiling Lacey was standing above us now too.\n\n\"I...\" I started, about to apologize to Lana for getting caught watching her hook up with a guy. I wanted to explain that I wasn't a pervert and that I was just trying to get with the pixie girl but we both got caught up.\n\n\"You don't need to apologize...Brit.\" Lana said.\n\nAt hearing my nickname, the pixie girl sat up startled and made a sound of shock.\n\n\"Oh, don't look so surprised...Kris.\" Lacey said.\n\nOh...my...god. It...it couldn't have been.\n\nI looked at the pixie girl then back at Lacey.\n\n\"You couldn't tell this little sexpot was your roommate Kris?\" Lana said.\n\n\"And Kris, you really didn't figure out that that fat ass could be none other than your roommate Brit's?\" Lacey said.\n\nI couldn't believe it. This sexy pixie girl that I had spent the past hour hooking up with was...Kris!?!? My roommate?!? My MALE roommate?!?!\n\n\"Just admit it, you liked it.\" Lana said.\n\nI was speechless. But...she was right...I did like it. Those soft lips, that smooth skin, that ass. I had just enjoyed hooking up with my male roommate who was dressed like a girl. And he...well he thought he was also getting with a girl. I...was dumbfounded.\n\n\"Go ahead, give Brit a kiss\" Lacey said to Kris.\n\nKris nodded his head side to side.\n\n\"Oh come on, you were just getting off on it. Or were you getting off looking at us handle those big dicks?\" Lacey asked.\n\n\"Yeah, was it more exciting watching us...or watching those nice big dicks?\" Lana teased.\n\nKris looked at me and leaned forward. I did the same and our lips met.\n\nThen we saw a flash of light. The girls had just taken a picture of us kissing.\n\n\"Why???\" Kris asked, looking ashamed.\n\n\"Oh don't worry.\" Lacey said, showing us the picture on her phone. We looked like cute lesbians kissing. \"It's not blackmail. Or rather, it's not blackmail yet. Think of it more like the first picture in the next chapter of your lives.\"\n\n\"That's right,\" Lana picked up. \"You're about to find out a whole lot more about yourselves and what your time here at Big U will be like. And trust me, I think the two of you are going to love what you'll become...and who you'll do that with.\"\n\nThey then offered their hands to help us get up. We each took their hands and stood up.\n\n\"Now then, don't you want to find out what's in store for you?\" Lacey asked.\n\nKris and I looked at each other. We couldn't believe the positions we were in. Dressed up like girls and surrounded by the hottest chicks on campus, this was far from what we expected of college. But we'd be lying if we said this wasn't the most fun we've had in a long time...actually forever. I had just had the most sexual experience of my life after dancing with Lana and two guys who would have killed to spend more time with me. I was finally with the elite - the cream of the crop wanted me around. I wasn't the boring kid with the rich parents. I was something else altogether now. I'm not sure what it was, but it was endlessly exciting. And I was enjoying it with two hot girls and my friend and roommate. How could I not see what would happen next? \n\nMaybe it was the weed, maybe it was the alcohol. Maybe it was looking like gorgeous little sluts.\n\nWhatever it was, we were incapable of saying no. We just wanted to go further down this rabbit hole and never leave this fantasy land.\n\nKris and I nodded.\n\n\"I need you both to say it.\" Lana said.\n\nI knew what she wanted.\n\n\"Yes, Lana.\" I said.\n\nKris spoke up.\n\n\"Yes, Lana.\"\n\n\"Good bois. I'm so proud of you.\" she said.\n\n\"Are you both ready to take the next step?\" Lacey asked.\n\n\"Yes, Lacey\" we both responded.\n\n\"Then get ready for the best year of your lives.\" Lacey said. \"This campus is about to get a whole lot of Brian and Kris.\"\n\nLana stopped her.\n\n\"Or maybe we should say, Sissy Britney and Sissy Krissy.\"\n\nTo be continued...\n\n________________\n\nIn Chapter 3...they bois get induced into the CheerBois and learn to embrace all the pleasures of sissy life.\n\nLike and comment if you want to see more! Email me if you have ideas or suggestions or just to drop some note of praise!\n\nXOXO \n\nLatinaRita"
    ],
    "authorname": "latinarita4",
    "tags": [
        "big cock",
        "college",
        "edge",
        "goon",
        "porn",
        "slut",
        "sorority",
        "trans",
        "sissy"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/big-u-pride-ch-02-going-deeper"
}