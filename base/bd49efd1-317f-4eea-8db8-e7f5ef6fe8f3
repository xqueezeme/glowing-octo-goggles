{
    "title": "At Long Last: Gwen Ch. 03",
    "pages": [
        "Chapter 2 concluded with Gwen departing the conference for home. \n\n------------------------\n\nWhen I left Gwen's room I returned to mine and realized that I had never before felt a void inside me. What had happened? There was simply no logical explanation for the undeniable fact that I had met Gwen forty-eight hours before, had shared unspeakable intimacies with her, had laughed more in forty-eight hours than I had in the previous forty-eight days, and felt absolutely alive in every fiber of my body. It was simply amazing and I could not wrap my head around the events or my behavior.\n\nOne phrase kept running through my brain and that was, \"There's no fool like an old fool.\" I tried to fit that to my circumstances with Gwen, but it didn't seem to fit. That tiny, squirming, hilarious, emotional woman had been as open and unadorned with me as I was with her.\n\nI had to conclude that I was in some uncharted regions of my life and there was only one thing to do and that was to move forward and see where it led. With that in mind I prepared for the Noon meeting and dressed and took the elevator downstairs to get some coffee and to read the newspaper.\n\nI had my coffee and newspaper when my good colleague, Howard, appeared and asked if he could join me. I nodded to a chair at my table and he sat and ordered coffee. Howard said, \"It's good to see you up and about.\"\n\n\"Why's that, Howard?\"\n\n\"No one has seen you for two days, Will, aside from that spectacular sideshow you and the lady provided at the banquet last night.\"\n\nI smiled, \"That was a rather ostentatious display last evening, wasn't it? She did make an entrance, didn't she?\"\n\nHoward laughed and said, \"And, if that wasn't enough, the talk of the conference, today, is the kiss she laid on you at the dance last night.\"\n\n\"That confused me, too. She had an explanation for it that didn't quite compute for me.\"\n\nHoward added, \"We have a couple of anthropologists at the conference and their explanation of the kiss is that she was marking her territory and warning every other female that you were not available.\"\n\n\"Really! That's interesting, Howard. That was her explanation with a rather graphical example affixed.\"\n\nIt was Howard's turn to say, \"Really!\" He continued, \"I've always thought anthropologists just made up stories to fit their observations. Maybe they do know what they're talking about.\"\n\n\"Well, that's certainly Madeline's thesis as you well know.\"\n\nHoward wrinkled his face at the thought of Madeline's thesis.\n\nWe were finishing our coffee and Howard said, \"Come along with me, today, Will. I'm headed to the stockyards here on a bit of a field trip until it's time to get to the airport.\"\n\n\"I can't imagine I have time for it, Howard. I have an executive committee meeting from Noon until two and then I have to get to the airport for a four o'clock flight home.\"\n\nHoward said, \"Oh, I'm on the same flight. I'll see you there. Hey, where have you been since the semester began. I haven't see you around the department at all.\"\n\n\"Sabbatical this semester, Howard.\"\n\nHoward looked pensive and then chuckled, \"Life isn't fair, Will. You get the beautiful lady and a sabbatical.\"\n\n\"By the way, Howard. The beautiful lady, as you put it, yells at me quite a lot. Is that normal?\"\n\nHoward's response was, \"I certainly have a limited data set, but yelling seems about right. My wife spends half her life yelling at me about God knows what. My experience is that you haven't stepped in shit until they get really, really quiet.\"\n\n\"Good, my shoes are clean. Thanks, Howard.\"\n\nThe executive committee meeting and the flight home went well and I was in my house by eight o clock that evening. Once I had played with the cats and unpacked I made a cup of coffee and called Gwen.\n\nShe answered on the third ring and asked, \"Is this that Old Man I was talking to at a conference recently?\"\n\n\"No,\" I responded. \"This is a different old man. You put the first one into cardiac arrest and I'm his designated replacement.\"\n\nHer response was, \"Oh dear. I don't want to talk to you. I want the original one.\"\n\n\"All right. I'll see if he can come to the phone,\" and I waited a bit and then said, \"Hey, Beautiful.\"\n\nGwen responded, \"Oh, Old Man, I miss you so much already. And, Anastasia wants to know if Ivan is OK.\"\n\n\"Tell Anastasia that Ivan is in rehab and will again be in working order in a week.\"\n\nGwen laughed and then said, \"I think I cried all the way home, I missed you so much.\"\n\nMy response was, \"That's very interesting because after I went back to my room this morning I felt like I had a big hole inside me somewhere.\"\n\n\"As soon as you get here, there won't be a hole any longer. Just hurry.\"\n\nI realized, suddenly, that I was awfully glad to be talking to Gwen and I remarked to her that that was the case.\n\n\"Are you kidding? I've been holding my breath since I got home waiting for your call.\"\n\n\"Well, take a deep breath and enjoy it and don't do that again. Nothing short of a disaster would stop me from calling you.\" \n\nWe talked a few minutes later and Gwen made me promise that I'd remember to call the next night and to hurry and get to her.\n\nI responded with \"I promise to close down here and get there as fast as possible, and not later than a week from now. Oh, and send me the name and phone number and address of an M.D. and dentist to whom I can have my records sent for a semester. Also a vet for the cats.\"\n\n\"I'll e-mail all that to you tonight or tomorrow,\" Gwen promised.\n\nWe talked a bit longer and I distinctly heard a sniffle or two from Gwen and we concluded with her urging me to hurry and to call her tomorrow.\n\nThe next week was a three-ring circus of arrangements and forwarding information. My nightly call to Gwen was always fun as we talked about what we done that day and one night Gwen really shocked and titillated me. As we were talking she said, \"Listen to this\" and the next thing I heard were squishing sounds. When she came back on the phone she asked, \"Did you hear that?\"\n\nI said I did and she explained those were the sounds of her fingers in her pussy masturbating to the sounds of my voice. I was speechless. She then asked if I wanted to hear her cum.\n\nI had the good sense to say, \"Of course I do,\" and I then heard more of the same sounds and then the unmistakable vocal sounds of Gwen climaxing.\n\nI held the phone as she came to her senses and she whispered, \"That's how aroused I am for you.\"\n\nI said, \"I'll be there soon and you won't have to do that.\"\n\n\"Hurry, Old Man,\" was her final admonition of the evening and then we concluded our conversation as she said, \"Love and kisses.\"\n\nFinally, it was time for the long drive from western Alabama to northern Virginia. Fortunately, both Atlas, my tiny male cat, and Pixie, my larger female cat were good travelers as long as the weren't cooped up in the car too long. On the first leg, we made it to central North Carolina and we checked into a motel. I called Gwen and the cats played nearly all night long in the motel room and I slept for a long while.\n\nThe following morning we were on our way to Gwen's house and made it by early afternoon. Gwen was waiting for us and she fussed over the cats as much as she did me. Both Atlas and Pixie very willingly walked into Gwen's house which assured me that they approved of Gwen. To both Gwen's and my relief, her three cats greeted both of mine with no signs of jealousy or territorial protectiveness.\n\nWe carried all of my stuff into her spare bedroom and she told me to sit in the big lounge chair while she made me a cup of coffee. She brought it to me and curled up in my lap.\n\nWhile we talked quietly I noted that both Pixie and Atlas had ceased their exploration of Gwen's home and had wandered over to us and they were studying Gwen intently. It's my decided prejudice that cats will provide an excellent insight into a person's character. If they flee from a person, you should flee. If they tolerate a person, that person is tolerable. If they are attracted to a person, there is something inherently good in that person. At worst, it's an hypothesis that should be tested.\n\nGwen and I talked about how we'd schedule our days and it was clear to me that Gwen appreciated that I had a book to finish this semester and I would have ample time to work in solitude on it.\n\nWithout warning the little vixen pounced. I saw the gleam in her eye and the devilish smile appear and she sat up on my lap and removed her sweatshirt revealing her beautiful bare breasts.\n\nShe cupped them for me and asked, \"Do you remember what they're called?\"\n\n\"Of course I do. They're now called frijoles.\"\n\nGwen laughed and said, \"Oh, Old Man, you are so dear.\"\n\nThen she asked, \"Do you remember what you do with them.\"\n\n\"Uh huh. Sometimes I lick them and sometimes I suck them and sometimes I gently pinch them.\"\n\n\"Then what happens?\" she whispered.\n\n\"Well, if my memory is to be trusted, your little pussy gets very wet.\"\n\nGwen inhaled and whispered, \"But, today, my pussy is already so wet and when you suck my nipple, my pussy might just explode.\"\n\nI leaned forward and she placed her left nipple in my mouth and I sucked her. She inhaled loudly and then expelled her breath in staccato breaths. \n\nI continued to suck on Gwen's nipple and her deep breathing became low moans and her hands grabbed the sides of my head. Eventually she gasped, \"Oh, how I missed you,\" and she reverted to low moans of appreciation. When her low moans turned to cries of \"Ohhhhhhhhh,\" and then she asked me to carry her to \"our\" bed.\n\nI picked her up and carried her to the bed and we kissed the entire way from the living room. When I deposited her on the bed she arched her hips and unsnapped her jeans and I grabbed the zipper and slid the jeans off her. I simply laughed. The little vixen wasn't wearing panties.\n\nShe smiled and said, \"First, Anastasia wants the Old Man to lick her, but not very long or very hard or Anastasia is going to explode. Then Anastasia wants big dumb Ivan to come inside her.\"\n\nShe presented herself to me I licked her very wet pussy and, free of the constraints of a hotel room, Gwen moaned as loudly as she wished. Between moans I heard her say, \"Oh, you wonderful Old Man.\"\n\nWhen I licked her clit, Gwen screamed and begged, \"Let me have Ivan, Will. Please!\"\n\nI attempted to position myself between Gwen's legs and found a cat blocking my way. Gwen, wondering at my delay, looked down and moaned, \"Oh Good Lord.\" She leaned forward and yelled, \"Toby! Get out of the way!\" She smacked Toby on the rump and he leaped out of the way.\n\nGwen murmured to me, \"Toby: my protector.\"\n\nI positioned myself between her legs and she simultaneously wrapped her legs around my waist and placed my cock inside her dripping pussy. We simultaneously moaned, \"Ohhhhhhhhhhhhhhhhhh! The sensation of entering her was so intense and so pleasurable I simply stayed in place and let my cock soak in the wet heat of her excited pussy.\n\nGwen's eyes had been closed when I entered her, but as I froze in her she opened her eyes and looked into mine and said, \"On, I never knew love-making could be so good.\"\n\nI began thrusting into her and sliding nearly out of her. The pattern became a rhythm and the rhythm became a choreographed dance of two frantically coupled people. Despite Gwen thinking she could not last long, she did well and we thrust back and forth smiling at each other. How long we danced I couldn't say, but I noted that eventually Gwen's eyes began to flicker and the low grunts emanating from deep inside her I knew she was signaling me that she was entering her orgasm. She closed her eyes and her hands gripped my shoulders tightly and she moaned, stiffened, and I felt her fluids soak me. That triggered me to thrust more deeply and a moment later I erupted into her.\n\nI rolled off her and she rolled into me and we held each other. I don't know what she was thinking, but I faced the reality that I was losing control of my life. This tiny woman was inside my head.\n\nGwen slithered down my body until her face was even with my cock. She grasped it and licked me and said, \"Poor dumb Ivan. You're a good boy,\" and she sucked the combined residue of our emissions. She sucked me contentedly for a few minutes and scrambled back up to face and told me to lie on my back while observing, \"Boy, this sure beats masturbating with your shirt.\"\n\nI had to laugh at her comment as I got on my back and she climbed on me and kissed me and then looked intently at me. She simply looked at me for a while and then said, \"Maybe there was a reason for my stupid marriage. Maybe it was so that I could appreciate you and just be crazy with you and never have you judge me.\"\n\nI smiled at that and said, \"To the contrary, I judge you and I think you're wonderful. I love your brain, I love your humor, I love this tush (as I gripped and squeezed her bottom) and I love your craziness and I find you mind-blowingly sexy.\"\n\n\"Oooooh\" Gwen murmured, \"I love it when you squeeze my bottom.\"\n\nShe continued, \"Old Man, I think I could count the time I was actually naked with my husband. I was never braless or went without panties. I never initiated sex with him. He never licked me, he might have nibbled a few times at my ta-tas and his pathetic little worm that he thought was a cock wasn't satisfying. But, O my God, he was a pretentious jerk.\"\n\nI laughed and urged her not to look backwards.\n\nShe nodded and said, \"I know, but it's so hard not to make comparisons.\"\n\nThen she looked at me curiously and said, \"You've never asked one question about my ex. Why not?\"\n\nI was really nonplussed and finally asked, \"Am I supposed to ask about him?\"\n\nGwen laughed and shook her head. \"I've noticed that people don't register with you. Anyone else would be asking about my ex and comparing himself to him, but not you. I noted that you've never mentioned those graduate student women whom you scared at the conference. I can't think of another person who wouldn't have wanted to know what they said about him or her, but you've forgotten about them. You've never mentioned that jerk at the dance who wanted to dance with me. Why not?\n\nI thought a moment and said, \"Use your time to think about important things, not inconsequential ones.\"\n\nGwen countered by saying, \"They weren't things Will. They are people.\"\n\nI shrugged and said, \"OK, they are people, but I don't see why I have to be concerned with them. There are really worthwhile people about whom I can be concerned. Like this little princess on my chest for example.\"\n\nGwen smiled, \"Am I a princess?\"\n\n\"I think you are.\"\n\n\"Thank you!\" Gwen hugged me.\" Your princess is hungry. Feed me.\"\n\n\"OK. Could we feed the cats, too. Or, at least my two. It's their dinner time.\"\n\nGwen asked what they ate and when and we discovered that we both used the same wet food twice a day and left the same dry food out for the cats all day. We fed the cats and showered and headed for dinner.\n\nOnce we returned from dinner, Gwen helped me unpack and we sorted out the chores. I was in charge of cleaning the bathroom and kitchen, cleaning the litter boxes daily, taking care of the garbage, and other duties as assigned by the Princess.\n\n\"Wait a second\" I protested. \"I think you should clean the litter boxes daily.\"\n\nGwen responded, \"I am shocked at the effrontery posed by that idiotic suggestion. Why would I ever clean litter boxes?\"\n\nI pointed out, \"You're a lot closer to the floor and it would be easier for you to reach them.\"\n\n\"Princesses,\" Gwen archly explained, \"do not clean litter boxes. That is a task assigned to big dumb guys like Sasquatch\" and she walked away. She then pivoted and came back to me and asked, \"Are you really six feet four inches tall? I think you shaved off a few inches when you told me that.\"\n\nI shrugged, \"It's close enough.\"\n\nGwen asked, \"Did you play basketball?\"\n\n\"Now why would you ask that?\" I questioned.\n\nHer response was \"Well, DUH! You've very tall.\"\n\n\"Oh, then I should ask you if you were a jockey,\" \n\nGwen stamped her foot and demanded to be picked up. When I picked her up she put her hands on my shoulders and asked, \"Did you play basketball?\"\n\nI laughed and said, \"If it's that important, look it up.\"\n\nGwen said, \"I will! Put me down you big dummy. You can't even answer a simple question without making a research project out of it.\"\n\nI attended to getting my book materials in order and Gwen went to a computer to see if I'd played basketball and she came back in a while and said, \"Gee, Old Man, you played a lot of basketball and you were even drafted by the pros, but you didn't play in the pros.\"\n\n\"No, I didn't.\"\n\n\"Why not?\"\n\nI responded, \"This was forty years ago. Are you really interested?\"\n\nGwen said, \"I'm interested. I want to know you.\"\n\n\"OK, I didn't play basketball for two reasons. The minor one was that the pros said I was too light and they wanted me to play at 230 pounds and I thought that would change me as a player tremendously. The major one was, I looked at the life style and couldn't, for the life of me, see flying to a different city every night of the season and sleeping during the day so I could play at night. It didn't make sense so I opted for graduate school.\"\n\n\"It said you played in college at six feet, five inches and 205 pounds. What do you weigh now?\"\n\n\"Now, I weigh 205.\"\n\nGwen asked, \"You mean, in forty years you haven't gained weight?\"\n\nI nodded, 'yes.'\n\nGwen said, \"You're scary.\"\n\n\"No, just disciplined.\"\n\nGwen grinned and added, \"Sexy, too,\" and hugged me.\n\nEventually we got around to going to bed and we immediately saw some problems. One was that I really didn't fit into her purportedly queen sized bed which prompted any number of Sasquatch witticisms at my expense.\n\nThe second problem was the cats. Gwen's cats slept with her and mine slept with me. We had five cats jostling for the same few spaces between us and it was really chaotic. Sleep was difficult and in the morning Gwen said, \"We need a bigger bed.\"\n\nI wondered if that would solve the cat issue and Gwen thought it would help because neither of us slept well with cats crawling on us all night as they tried to squeeze into a space they wanted. She reasoned, \"With more space they might settle down around us instead of trying to crawl between us.\"\n\nI said, \"OK, so how do we get a new bed?\"\n\nGwen said, \"We go to mattress stores, look at mattresses, compare, decide which one we like, you give them your credit card, and they deliver it.\"\n\nI laughed and said, \"I have a better plan. I'll give you my credit card and you go find an extra firm mattress for us and buy it.\"\n\nGwen said, \"You don't like to shop?\"\n\nI smiled at her and said, \"Shopping is my second favorite thing after getting a root canal.\"\n\nGwen said, \"Pick me up.\"\n\nI looked at her and said, \"Oh boy,\" but I picked her up.\n\nGwen looked me in the eye and said, \"You Sasquatch. Me Princess. You will go shopping with me.\"\n\nI smiled and said, \"NO.\"\n\nGwen stuck out her lower lip and asked, \"Why not?\"\n\n\"It's a huge waste of time. I can go online, look at a product and, more importantly, compare specifications, compare brands, compare deals, and make a decision before I could ever drive to one, let alone two or three stores and deal with salespeople.\"\n\nGwen pouted, \"Are you sure?\"\n\n\"Absolutely.\"\n\n\"You're an old fossil. I'll go myself. Put me down you mean Old Man.\"\n\nI put her down and she picked up Pixie and explained to Pixie, \"Your daddy is a big poop.\"\n\nPixie, thinking she was being adored, simply purred.\n\nGwen found us a king size mattress on which I fit, but the cat problem was slow to rectify itself. We just had cats everywhere. But, in a remarkably short time we settled into a routine that was really delightful for both of us.",
        "We awoke, had coffee, usually had some kind of sex, went to the YMCA and worked out for an hour, and Gwen went to the university and I wrote. After work Gwen came home and I quit the book and sat in the recliner with Gwen, and a cat or two, in my lap and we talked. Some days, usually bad ones for Gwen, we'd forego the recliner and get naked and get in bed and the Princess would lay on my chest and we'd talk. Evenings involved dinner and then some school work for Gwen and reading for me.\n\nOur sex life was varied and delightful. Some evenings upon retiring Gwen would ask me to attend to those beautiful ta-tas of hers for a few minutes and then she'd settle down for the night.\n\nNearly every night I'd be at least partially awakened by Gwen sucking my cock for a few minutes after which she'd return to sleep. On some of those nights, though, she would wake me and tell me she wanted to mount me. Those nights were unpredictable because on one night she might thrust herself hard and fast and cum quickly. On other nights she merely wanted to rock slowly on me and make it last and never reach orgasm before she was ready to sleep again.\n\nMornings were spectacular. I never knew what to expect and Gwen threw her entire sexual repertoire at me. Some mornings she impaled herself on my finger and brought herself off. Other times she asked me to lick and suck her pussy and still other times we screwed in various positions. During her menstrual period I told her she did not have to attend to me at all and instead she would lay on my chest in the morning and I'd hold her and squeeze her bottom and tell her how delightful she was.\n\nSurprisingly, Gwen's enthusiasm for showering together never waned and she delighted in my washing her bottom and between her legs and she wanted to hold my cock in the shower as much as possible.\n\nThe cats settled into their own routine and played with each other daily. Both Gwen and I were happy and content. She glowed. \n\nGwen had her daughter Barbara visit us soon thereafter. Gwen told me that I'd enjoy Barb, a college senior who was bright and energetic and thrilled that there was man in her Mom's life.\n\nI asked about her son and Gwen's mouth dropped. She shook her head and said, \"Charles can be thoughtful, but he's superficial. He has too much of his dad's influence in him. He treated college as if it were a trade school and couldn't wait to accept his degree and trade it in as a coupon for a job. He majored in business and treated the liberal arts as an intrusion on his time and he's contemptuous of academicians. Money is his goal in life.\"\n\nBarb turned out to be more than a delight. When she arrived I watched my cats closely to see how they responded. Pixie watched her intently and Atlas actually walked up to her and rubbed against her legs. Gwen's three cats came running to greet and be greeted by Barb.\n\nGwen introduced us and I was dumbstruck. Barb was Gwen twenty years ago. The resemblance was simply overwhelming. Barb told me immediately that she knew of me because of a paper I'd written on sampling bias in polling and surveys. She read it for a political science class and her professor explained that he thought the paper was flawed so,(and this impressed me), she took the paper to a mathematics professor who read it pretty quickly, and assured her it was accurate. The math prof also explained to her what it meant to have an article appear in a refereed journal so the likelihood of serious error was substantially reduced. \n\nI was impressed with the girl and we fell into an easy conversation about her college studies and future plans. Our conversation was temporarily halted when Gwen called Barb into the kitchen to help with lunch. I chose the opportunity to sprawl in front of the fireplace where we had a good fire going. \n\nI was out of sight of the kitchen, but not out of hearing and I was genuinely amused by Barb's questions and comments. As I recall them Barb mentioned that I was certainly tall and didn't look my age. Then, there was a long pause and I was hard pressed not to laugh when Barb asked, quite haltingly, \"Mom, he's so big and you're so small, how do you ever...you know...I mean, how do you two have physical relations?\"\n\nI heard Gwen say, \"Really, Barb, now that's not the kind of question one asks someone, especially their mother, but put your mind to rest. We manage quite well.\"\n\nI heard Barb say something else that I could not catch and I heard Gwen laugh, but I couldn't hear Gwen's response.\n\nThen, I heard a really serious tone to Barb's voice when she said, \"Mom, I'm afraid Charles is really not going to like Will.\"\n\nGwen's response was, \"Don't you worry about that. Charles will behave himself or he'll find himself simply flattened by Will.\"\n\nI was called for lunch at that point and we had a really pleasant lunch. Barb had such a good time she asked if she could return the following weekend and both Gwen and I said we'd look forward to seeing her.\n\nOn Sunday, we went to church and, later at lunch, Barb wanted to know why I went to church when so many of the faculty she knew did not. I explained my belief in God and indicated that I was happy to spend an hour a week devoted to considering how God interacted in the life of this planet. Barb was awfully excited and happy to hear me speak openly about God and wanted to know why faculty were atheists. I explained that, in my experience, not very many were atheists. Some were agnostic and many American professors were Unitarian in their belief and not Trinitarian. But, I pointed out, at a major research university one would find Jews, Muslims, Hindus, Buddhists, Mormons, Christians, Unitarians, and so forth, all expressing a dedication to something larger than their own intellect. Scientists, particularly, were quiet about their faith, but many of them found something surprising in their respective universes of study that led them to question that just a happy accident accounted for what we could observe and measure.\n\nBarb just bubbled up (and I was amazed at how much she was like her mother) and said that she was actually thinking about doing graduate studies in Religious Studies.\n\nWhen I asked why, she explained that she sensed that religion, or the absence thereof, had a large impact on how people dealt with life's issues.\n\nI gave Barb a few book titles to read and suggested that I thought she wanted to approach religious studies through sociology rather than directly through religious studies. This elicited a bevy of questions from Barb and I said, \"Religious Studies professors argue with each other by shouting at each other. Sociologists argue by pointing to the methodology they used to reach their findings. Sociologists have a common ground or language based on methodological approaches from which to argue their findings and their differences.\"\n\nBarb looked at her Mom and Mom laughed and said, \"It's worthwhile advice. He knows of what he speaks. I'm not always sure he can cross a street by himself, but he knows this stuff.\"\n\nBarb was excited and bubbly and I enjoyed her enthusiasm so much. She departed on Sunday, late in the afternoon, for college which was just a few hours away.\n\nGwen turned to me and said, \"Let's get naked and talk.'\n\nWe did get naked and Gwen climbed on my chest and did eventually talk. First, though, she hugged me wordlessly for the longest time. \n\nWhen she relaxed her hug, she looked up and said, \"I suspect that you have a real fan in Barb, and I thank you for the attention you lavished on her. She has grown increasingly alienated from her dad and she's spending a lot of time with male professors looking for direction. I fear that one of these profs might take advantage of her vulnerability. If you could fill the male role model, that void in her life would lessen and I would be so relieved.\"\n\nI just nodded to signal my appreciation of Gwen's fears and then said, \"If Barb wants to seek me out, I'll be here. She's really wonderful and the incredible resemblance between you two draws me to her. So, yes, if Barb wants to use me as a sounding board, I'll do my best.\"\n\n\"Thank you, Old Man,\" was Gwen's response.\n\nGwen smiled and said, \"Barb was so curious about our sex life. Give our size differential, she wanted to know how we managed to have sex. Then she bowled me over by asking, given your height, the size of your 'organ,' as she so delicately put it. I told her you were, when hard, a good three inches.\" \n\nGwen amused herself greatly and laughed heartily as did I.\n\nI injected, \"I do have a question, though, about Barb.\"\n\n\"Oh, what's that?\" asked Gwen.\n\n\"Will she yell at me all the time the way you do?\"\n\nGwen laughed and managed to say, \"No, she doesn't have to live with you so she won't yell at you.\"\n\n\"That wasn't nice,\" was my response.\n\n\"Oh,\" Gwen responded archly, \"princesses only have to tell the truth. Nice is not a consideration.\"\n\nWith that none-too-solemn pronouncement, Gwen scooted forward and slid her pussy up to my mouth. I was surprised when she did not open her pussy lips for me, but then it became obvious that they were open and I was looking at a swollen, wet, and red pussy.\n\nI looked to Gwen to ask how long she'd been like this, but she anticipated my question by saying, \"I've been in this state since I saw you being so patient with Barb. It reminded me of you taking me to the coffee shop at the conference.\"\n\nI simply nodded and licked. Gwen's intake of breath brought two cats trotting into the bedroom to investigate.\n\nA second lick was followed by an even louder intake of breath followed by an exhale of \"Ohhhhhhhhhhhhhhhhhh...\"\n\nA third lick was directly at her clit and Gwen moaned loudly which brought Toby leaping onto the bed.\n\nI heard Gwen, through gritted teeth, say, \"Oh, Toby, it's OK!\"\n\nI began to make love to Gwen's clit and she rocked and groaned and then began to squirm. Finally, she panted, \"Suck it, Will.\"\n\nI sucked her clit into my lips and Gwen exploded all over my face. As she went slack I caught her and rolled her onto her side and I held her as she gasped her way back to normalcy.\n\nBefore she closed her eyes she looked at me and silently mouthed the words, \"I love you.\"\n\nWhen she closed her eyes I silently mouthed the words, \"I think I love you, too.\"\n\nWhen Gwen awoke she beat on my chest to awake me. I opened my eyes and heard, \"Feed Princess, big dumb Sasquatch.\"\n\nWe got up, showered, and went out to eat something and spent a quiet evening reading. A new week loomed and with it, some trouble awaited in our little slice of Paradise.\n\n//\n\nGwen came home from campus later that week worried and informed me that the chair of her department had made an appointment with her to discuss her \"irregular\" living arrangements with me. I, too, was invited to the meeting.\n\nI simply sat there stunned. Gwen came and sat on my lap and rested her head on my chest. I kissed the top of her head and rubbed her shoulders.\n\n\"Unreal\" was the only thing I could think to say.\n\nWe sat a bit longer and I asked Gwen to find me a copy of her contract which she did in short order. We both read the contract which, as we suspected, made no mention of anything approximating our living arrangement. All of the usual restrictions about faculty -- student relationships being forbidden were prominently displayed, but there was nothing in the contract that hinted at our relationship type.\n\nI asked Gwen if there was some church sponsorship of the university of which I was not aware. She said, \"No\u00b8 we're just another school in the state system of higher education.\"\n\n\"Who is your chair?\" I asked.\n\n\"His name is George Gearhart. He's been here a long time and he's ineffectual in the classroom and he's done no research as far I as I know. I think our dean parked him in the chair position to keep him out of the classroom.\"\n\nI asked, \"Do none of your chairs teach?\"\n\n\"Good heavens, no,\" was Gwen's response. \"He's the only one of which I'm aware.\"\n\nI mused, \"He must go back a long way when this was a Podunk teachers' college and he somehow managed to hang on when it became a respectable university.\"\n\nMy next question was, \"Did someone tell him to call this meeting or is this his own initiative?\"\n\nGwen paused, and thought, \"There's certainly no way to know, but I can't imagine any of our academic affairs administrators bothering with something like this.\"\n\n\"Besides being a huge distraction, this is interesting\" was my next observation.\n\nGwen suggested, \"Who is George Gearhart seems to be the question we have to answer.\"\n\nI responded, \"Exactly.\"\n\n\"Do you have a public affairs office on campus?\" I asked.\n\n\"Sure, Gwen responded.\n\n\"Can you get there tomorrow and get a biography on the guy?\" I asked. Gwen said, \"Of course I can.\"\n\nI said, \"OK, let's forget about George until tomorrow, then.\"\n\nGwen clapped her hands and said, \"OK!\" She grabbed me by the hand and said, \"I'd just love for you to suck my ta-tas now,\" as she pulled me towards the bedroom.\n\nI watched the little dynamo shed clothes and remarked, \"You could make the Guinness Book of Records for the fastest disrobing female in the world.\"\n\nGwen stuck out her tongue at me and said, \"Get over here big dumb Sasquatch and service me.\"\n\nI, too, got out of my clothes and laid down and Gwen smothered me with kisses and said, \"You make me happy Old Man.\"\n\nShe then fed me a ta-ta and I played with it and licked her and nibbled a bit and sucked her while she squirmed and moaned until she said, \"Give me your hand.\"\n\nI gave it to her and she placed it over her pussy and I inserted my finger into her startlingly wet pussy. Something had her really wet this evening.\n\nI continued sucking her ta-ta while she gripped my wrist and she humped furiously on my finger and hand and groaned and finally yelled, \"Oh, Willllllllllllllllllllllllllllllllllllllllllllllll...Augggggghhhhh!\"\n\nShe mustered her strength and climbed on my chest and laid there panting. Although her panting slowed and she started breathing normally, I noted that she was rubbing her pussy against my stomach. Something had this little vixen hot and bothered this evening. I reached across her back and beautiful tush and inserted my finger again in her and thrust it rapidly into and out of her pussy. Gwen squealed, more from delight than surprise. I heard her grunting with the exertion of her responding thrusts and, in a remarkably short time, even for Gwen, she stiffened and gushed for a second time on my finger.\n\nThis time it took a while for her breathing to return to normal.\n\nI simply closed my eyes and rested as her breathing returned to normal. \n\nWhen I heard Gwen say something like \"Ooof\" I opened my eyes and had to laugh. Gwen asked, \"Who is it?\"\n\nI explained that it was my little guy, Atlas. The little guy had apparently jumped onto the bed and then onto Gwen's back. He commenced licking Gwen's back and Gwen's eyes widened and she said, \"He's going to take the skin off my back.\"\n\n\"You're in trouble now. He's really become smitten with you,\" I noted.\n\n\"Lucky me,\" was Gwen's response.\n\nShe shimmied up my chest and kissed me and said, \"You know, Old Man, you are really getting good at reading me. Thank you.\"\n\nI noted, \"You're really revved up tonight. What's different?\"\n\n\"It was that damn note from George. The thought of not being able to come home to you and sit on your lap and talk to you and not to retire to our bedroom for your magic just turned me on. I've been soaking wet since two-thirty this afternoon.\"\n\n\"I was quiet for a moment and then asked, \"Did I hear you correctly say you got a 'note' from him?\"\n\n\"Uh huh.\"\n\n\"The idiot actually put that in writing?\"\n\nGwen looked a little puzzled and frowned and said, \"Yes, a hand-written note. I have it in my purse.\"\n\nI smiled at her and she said, \"What?\"\n\nI smiled again and said, \"I think he just stepped in it.\"\n\n\"You do? Why?\"\n\n\"Well, he's out of line putting something like that in writing, and let's look deeper into biography, but I'm guessing he's a very active member of a Bible-thumping church and, if so, he's in a world of hurt.\"\n\nGwen's eyes popped open and she said, \"Oh, I see it\" and she sat straight up. Then she yelled, \"Owwwwwwwwww! Shit! Shit! Shit!\"\n\nI collapsed into helpless laughter. Gwen had forgotten that the cat was on her back and when she abruptly sat up, he thought he was going to be flipped off so he dug every claw he had into her back to hold onto her.\n\nThe poor little guy had raced out of the bedroom and was probably hiding somewhere.\n\nAs I lay there laughing, Gwen was pounding on my chest yelling, \"It's not funny! He hurt me! I'm probably scarred for life!\"\n\nI was beyond reason or help. I just laughed until I thought I was going to hurt myself.\n\nWhen I finally stopped laughing Gwen was glaring at me and she was hot under the collar. \"You big dumb Sasquatch. What was so funny about that?\"\n\n\"Don't' get me started, Princess, or I'm going to go off on another laughing jag.\"\n\nI did, however, pick her up and carry her into the bathroom saying, in my gruffest voice, \"Sasquatch fix pretty princess.\"\n\nIn spite of herself, Gwen giggled, and as she buried her face in my shoulder, I heard something that could have been \"You big idiot,\" but I couldn't swear to it.\n\nI got out the medical supplies and Gwen jumped up and said, \"Wait, I probably scared Atlas something awful. Let me go find him and let him know I'm not angry with him.\"\n\nOff she went and I heard her calling the little guy. In a few moments she returned with Atlas cradled in her arms while she nuzzled and kissed him. She sat back down with Atlas on her lap and I began cleaning her scratches. I didn't spare the antibiotic ointment and put gauze and tape over the scratches.\n\n\"OK,\"I said, \"pretty princess all fixed.\"\n\nGwen put Atlas on the floor and jumped up and stood up to her commanding five feet of height and demanded to know, \"Why were you laughing in there?\"\n\nI responded calmly, \"Oh, you wouldn't understand\" and airily waved my hand.\n\nGwen got upset then, \"Don't you use my lines on me.\"\n\nThen I really set her off by sticking my tongue out at her. She almost screamed, \"You can't do that.\"\n\nShe followed me out of the bathroom into the bedroom stamping her feet and yelling something or another at me and I suddenly turned around and looked at her. She stopped dead in her tracks and looked at me and yelled, \"I can yell at you and you can't do anything about it. Those are the rules.\"\n\nI burst out laughing and fell to my knees and opened my arms to her and a suddenly smiling Gwen walked into my open arms muttering, \"Big Dumb Sasquatch\" and she proceeded to bury her face in my shoulder.\n\nWith her arms around me I began massaging that beautiful tush of hers and she said, \"Don't do that or you'll make me wet and I'm mad at you.\"\n\n\"Do you want me to lick you instead?\"\n\nThe little vixen shivered and whispered, \"Yes.\"\n\n\"Then get on the bed Princess.\"\n\nGwen scrambled up on the bed and put a pillow under her and spread her legs for me.\n\nAs I approached her, she spread her pussy lips as she'd done so many times and I commenced gently licking her. After a dozen gentle licks, Gwen sat up and pulled my head into her very wet pussy which was her signal to lick her harder, but I continued the very slow and gentle looks. Gwen began pounding her fists on my back and I even slowed down. She resumed beating on my back and yelling, \"Willllllll.\"\n\nUndeterred, I continued my slow massage of her increasingly red and wet pussy until she clamped her hands around my head and started to hump my face. Even that wouldn't let her get her release.\n\nFinally, she stopped her struggling and I let her whimper a bit and then sucked her clit into my mouth and exerted all the pressure on it that I could muster. Gwen screamed once, went absolutely rigid, and the resultant gush of cum onto my face actually splashed onto me.",
        "Gwen was groaning and appeared still rigid. I climbed beside her and rolled her onto my chest and wrapped my arms around her.\n\nShe didn't move for at least five minutes and then she wearily lifted her head and asked me, \"What was that?\"\n\nI said, \"That's how I tell you I love you Princess.\"\n\n\"What did you say?\" she asked.\n\nI said, \"That how I tell you I love you Princess.\"\n\nGwen started crying and gripped me so tightly I realized she had strength I didn't know she had.\n\nAfter she cried herself out she looked at me guiltily and I said, \"Yeah, I know, you have to pee.\"\n\nGwen laughed and nodded her head \"Yes.\"\n\nI added, \"And you need me to carry you, too.\"\n\nShe erupted into laughter and said, \"Yes.\"\n\nI got out from under her, picked her up and carried her to the potty and set her on it and she gripped my leg with an almost death grip. When she finished, she stood up wearily and held on to me for a moment.\n\nShe asked me to take her to the bed and to lie with her.\n\nI picked her up again and laid her on the bed, pulled some covers over her and got into bed beside her.\n\nShe slowly, even painfully, climbed on top of me, and put her head on my chest.\n\n\"I have a question,\" I said.\n\n\"OK,\" she said.\n\n\"Why do you yell at me so much?\"\n\nGwen was seized with a laughing fit.\n\nI waited . When she stopped laughing, she said, \"Because it's fun and you don't get upset and I love the puzzled look you give me when I do it. But, most of all, it's because, like everything else, you just let me do it.\"\n\nI thought for a long time about that answer and finally said, \"You know, there's no way I can even respond to that.\"\n\n\"She said, \"I know. That's the fun of it. I simply get away with murder with you and you just look at me.\"\n\n\"Is that good?\"\n\n\"It's very good.\"\n\n\"Ok, but why do I do that?\"\n\n\"Oh Old Man, you're being so dense again. Why you do it is because you know I adore you. I love you madly. You look at me and make me wet. You smile at me and I want to crawl inside you so I can be closer to you.\"\n\nI said nothing, but just thought.\n\nGwen lifted her head and looked at me with that devilish grin of hers and said, \"Stop thinking about it.\"\n\n\"Why in the world would I stop thinking about it?\"\n\n\"Oh, Old Man. You are so dense! Will...do you remember when you passed your Ph.D. orals what your advisor said to you?\"\n\n\"Geez, that was a while ago.\"\n\n\"Think about it!\" Gwen urged.\n\nI thought and thought and then said, \"OK, he said, 'Welcome to the Life of the Mind.'\"\n\n\"That's right. And that was the silliest phrase ever uttered to you because you had lived the life of the mind since you were a child. You live in your mind. Concepts, ideas, data, systems are the food that fuels your life. I'm none of those things. I don't fit your reasoning. I'll never fit your logic. You'll never fit me to your logic. I can't be reduced to an 'if, then, else\" logic statement. Just leave it alone and enjoy it.\"\n\nI said nothing for a long while and then finally, \"I don't understand.\"\n\nGwen kissed me.\n\n\"OK, let's make it simple. How many girlfriends did you have before me?\"\n\n\"Are you my girlfriend?\"\n\n\"No, you idiot. I'm a lot more than that. Answer my question.\"\n\n\"I never had a girlfriend.\"\n\n\"That's what I thought. But, I popped into your life and you let me in. You let me into your heart, you let me into your mind, you let me go anywhere I wanted to go and you let me do whatever I wanted to do.\"\n\n\"Why did I do that?\"\n\n\"You did that because you never had a choice. It wasn't logical. It was chemical. You couldn't control it. You simply fell apart when you looked at me and you fell in love with me the first day you met me and today you finally articulated it. It isn't logic with us you big, exasperating idiot!\"\n\n\"Are you angry with me?\"\n\nGwen didn't answer. Instead she pounded her forehead into my chest and then lifted her head and looked at me and said, \"It's like the ta-tas, Will. Just leave it alone and do what I tell you.\"\n\n\"May I ask another question?\"\n\n\"Oh, God help me. Yes, go ahead.\"\n\n\"OK, why do you keep saying I have a fire hose for a cock?\"\n\nGwen erupted into laughter and simply looked at me with an amazed look.\n\n\"Well?\"\n\n\"Oh, you dense Old Man. A fire hose is long and thick. It means you have a big cock.\"\n\n\"Ohhhhh. That's good, right?\"\n\n\"No, you big idiot. It's not good. For me, it's wonderful.\"\n\n\"Well, then I'm happy I have a fire hose.\"\n\nGwen asked, \"Where are you taking me for dinner tonight?\"\n\nI thought about that for a moment and said, \"I distinctly remember you saying that you were going to cook a great meal tonight because of Ivan's distinguished service to Anastasia.\"\n\nGwen got that devilish grin on her face and said, \"I lied.\"\n\n\"Oh. Well, we'll go wherever you want to go.\"\n\nGwen asked, \"Why do you always say we'll go wherever I want to go.\"\n\n\"Well, you care and I don't.\"\n\nGwen smiled and said, \"I think I picked the goofiest man alive to fall in love with.\"\n\n\"Don't end you sentences in prepositions.\"\n\n\"OK, I think I picked the goofiest man alive with whom to fall in love.\"\n\n\"Much better.\"\n\nGwen went to get up and she grimaced and laid back down. She followed that with, \"I'm impossibly sore, Will. What's wrong with me.\"\n\n\"I'm sorry, Princess. When I licked you, you went absolutely rigid and I think you strained all the major muscles in your body.\"\n\nGwen smiled at me. \"OK. That was the greatest orgasm of my life. It was worth some sore muscles.\"\n\nShe got up very slowly and very stiffly and I said, \"Let's get in the shower and get some warm water on you.\"\n\nShe gave an affirmative nod.\n\nWe showered and dried off and Gwen said, \"I'm so happy.\"\n\n\"Why's that,\" I asked.\n\n\"Never mind, Old Man. Let's go eat. You violated my body so many times this evening I'm famished.\"\n\nOn our way to the meal, Gwen pointed out that our evening had begun talking about her departmental chair and she saw, just before Atlas scratched her, that her chair was possibly about to violate the separation of church and state clause of the Constitution.\n\nI nodded.\n\nShe sat quietly in the car until we reached the restaurant and we entered, were seated, and ordered.\n\nFinally, Gwen spoke. \"If Gearhart behaves as we suspect, this will get messy.\"\n\nI asked, \"How so?\"\n\n\"We'll have to hire legal expertise to represent us. Whatever we do, it will be expensive and messy.\"\n\n\"Well, we'll see, but I doubt we'll have to go that route at all.\"\n\n\"Why not?\" was Gwen's question.\n\n\"I'm thinking.\"\n\n\"Oh, good. The world will now stop spinning while the Old Man thinks,\" was Gwen's sarcastic response.\n\n\"Yes\", I concluded, \"don't worry about attorneys.\"\n\n\"Tell me why.\"\n\n\"You've never read my curriculum vitae have you?\" I asked Gwen.\n\nGwen gave me one of her patented looks and asked, \"Isn't it enough that I suck your cock? Do I have to read your damn resume, too?\"\n\n\"Just go read it when we get home. You'll find it instructive.\"\n\nGwen went into her sassy singsong voice, \"You'll find it instructive, you'll find it instructive, you'll find it instructive. The great scholar has intoned, you'll find it instructive.\"\n\nI laughed. \"Well, wasn't it just the other evening that I heard you going on about how the 'discovery method' was such an effective way of teaching and helping students learn for themselves? Think of it that way. You'll make a discovery and it will be clear to you.\"\n\n\"Will, I am not an undergraduate student. Now, what are you talking about?\n\n\"You just ended a sentence with a preposition, again.\"\n\nGwen looked skyward and said, \"Lord, give me the strength not to kill this idiot.\"\n\n\"All right, calm down Princess. I'm on the Managing Council of the AAUP?\"\n\nGwen sat back in her seat for a moment and then said, \"Oh my God!\" She stared off into space for a moment and said, \"You'll threaten censure and the administration will fall on him like a building.\"\n\nThen Gwen asked, \"Why have you never told me you were a mucky-muck with the AAUP?\"\n\n\"Well, it just never came up.\"\n\nGwen made some sound like a bear growling and she said, \"I don't ever want to hear that phrase again! The last time you said that you nearly put me into cardiac arrest with your stupid comment about being on sabbatical.\"\n\n\"Why are you yelling at me again?\"\n\n\"Because you're an idiot. Buy me dessert.\"\n\n\"Wow! You are going to eat dessert?\"\n\n\"Yes, I'm celebrating a big day in my life.\"\n\nI had to ask, \"Really, what happened?\"\n\nGwen sighed, \"This big dumb Sasquatch fellow with whom I sleep finally got around to telling me he loved me.\"\n\n\"Ohhhhhhhhhh.\"\n\nGwen ordered the most obscene thing on the menu and, of course, couldn't finish it and I had to help her with it. It was disgustingly good.\n\nWe went home and I sat and read with Gwen on my lap reading and mapping out lesson plans. After a few hours Gwen got up and made me a cup of coffee. As I sipped my coffee, Gwen squeezed Ivan sand said, \"I'm going to sleep, Old Man. I'm worn out. Don't stay up too late.\"\n\nI joined the little Princess an hour later and we slept through the night. Upon awakening the next morning I made coffee and brought a cup to Gwen who was struggling to get out of bed. She complained that she was really stiff and sore. Amidst her groaning she explained that she was in no shape for any screwing this morning and, of course, it was all my fault because I'd induced such a violent orgasm the previous afternoon. In fact, she was so sore she sent me off to the YMCA by myself and she stayed home to soak in a hot bath in an effort to loosen her sore muscles.\n\nBy the time I returned from the Y, Gwen had departed and I made a cup of coffee and sat down to write. I had a quiet, productive day interrupted by only the cats who took turns visiting my lap during the day.\n\nGwen returned home around four o'clock and asked about my day which I described as productive. She asked if I was at a stopping place and I said, \"Sure.\"\n\nShe pulled me to the big chair and curled up in my lap and unfolded the biographical sketch of Gearhart she had picked up from the public affairs office. She handed it to me to read and it was a joke. About one-third of it described Gearhart's inconsequential contributions to the University and two-thirds of it described his activities at the First Church of Fundamentalism, Wacko.\n\nGwen looked at me and raised her eyebrows and asked, \"Is this for real?\"\n\nI just shook my head and said, \"It doesn't seem possible. Well, we'll keep the appointment and we'll see the idiot.\"\n\n\"Yes,\" Gwen said, \"but won't this be our word against his?\"\n\n\"No, I answered. \"I'll have on a suit coat or sport coat with a tape recorder in each pocket.\"\n\n\"Why two recorders?\" was Gwen's question.\n\n\"Simple redundancy,\" I said. \"It's unlikely that both would fail at the same time.\"\n\nGwen gave me one of her Mona Lisa looks and while I was wondering what she was thinking she said, \"You know, Old Man\u00b8 in fairness, I should say that while you're a complete idiot with me, you're scary smart the rest of the time.\"\n\n\"Am I supposed to respond to that?\"\n\n\"No,\" and she kissed me.\n\nOur weekend followed our now normal pattern although we did intersperse it with a few more sessions of exuberant sex than normal. After one of them, Gwen asked me, \"Old Man, why have you never, in our entire relationship, initiated our love making?\"\n\nI responded simply, \"I don't know how. It's a complete mystery to me.\"\n\nGwen studied me for a long time and then said, \"Pick me up.\"\n\nI did and she looked in my eyes and said, \"You are the most precious thing, Old Man. Is it any wonder I thank God for you every day.\" And then she simply stared for the longest time into my face before gently saying, \"Put me down.\"\n\nAs always, Gwen confused me. Gwen also told me that the upcoming weekend was an important one because she had arranged for her son to meet me and, while Barb would be here, she admitted she was very nervous.\n\nGwen reminded me that Charles wasn't at all like Barb. She reminded me that he could be thoughtful, but sometimes he was too much like his father and a smart-mouth who over-estimated his own importance. However, as she herself pointed out, we had this meeting with her meddling chairperson on the immediate horizon.\n\nOur meeting with Gearhart was scheduled for two-thirty in the afternoon on Wednesday. We arrived a few minutes early and the moron kept us waiting for fifteen minutes. We were both amused at this transparent effort to impress us with his importance. I was relaxed although Gwen wasn't. As we waited, I reflected on Gwen's public and private personas. In public she was very reserved and quiet, while at home, with me, she was outgoing and sometimes even chatty.\n\nFinally, we were summoned to the great man's office and he was well prepared with quite a deductive argument. He explained the inherent conservatism of the community in great detail and then the conservative tendencies of the campus community and he expressed great concern about Gwen's untenured status and how a living arrangement could jeopardize her chances for tenure and promotion and he assured us that he valued Gwen's contribution to the department greatly, and as the chairperson, it was his responsibility to shepherd his young professors through the turbulent waters of the tenure decision. He was well-pleased with his presentation and sat back and looked at us benignly.\n\nWe all sat there looking at each other and he eventually grew uncomfortable. Gwen looked at me questioningly. I finally spread my arms and asked, \"What's the point?\"\n\nIt was apparent that he thought I was pretty dense and so he finally expressed it as follows. \"Professor David, the point is that your living together in an unmarried state is quite contrary to the norms of this town community and campus community. We are a Christian nation, a Christian community, and I daresay, a campus of overwhelmingly Christian orientation. Your living with Ms. Davis is quite contrary to our norms of behavior. If she is to have a future here, your living arrangement should be terminated.\"\n\nHe leaned back in his chair and looked at me very sternly. \"That, Sir, is the point. Is it clear to you now?\"\n\nI stared a long time at the idiot and finally said, \"Let me check.\"\n\nAs he stared, incredulously, at me, I retrieved a tape recorder, stopped the recording, rewound it, and played it back in its entirety.\n\nWe all listened to the tape and then I said\u00b8 \"Here's what's clear. First, you better read all of our country's founding documents and you'll discover that Christ is never mentioned in them so your Christian foundation argument couldn't be more erroneous.\"\n\n\"Second, you just stepped into a quagmire. I am taking both your note to Dr. Davis, and this tape to your chief academic officer and, as a one royally ticked off officer of the American Association of University Professors, I am going to give her the option of firing you or having the campus censured for your violation of the separation of church and state and stepping on the rights of Dr. Davis.\"\n\nTo my knowledge my outburst was greeted with complete silence in the room, but I heard Gwen make some kind of strangled noise and in some kind of strangled voice, say \"Excuse me\" and she headed for the door.\n\nShe closed the door behind her, but we still heard her laughing hysterically as she raced out of Gearhart's office and down the hall.\n\nI was completely confused by Gwen's behavior so I stood up and left his office. His secretary was sitting there was an amazed look on her face and her mouth wide open.\n\nI looked down the hall in both directions and spotted Gwen to the left with her body shaking. As I walked to her I was relieved to see that she was still laughing hysterically. I stood there and the very proper Dr. Davis shocked me by morphing into the little Princess. She asked me to pick her up. I did and she wrapped her arms around my neck and simply laughed some more. I held her and waited for some sanity to be restored.\n\nGwen tried to explain why she was laughing, but every time she started to explain herself, her effort terminated in her losing any semblance of composure and disintegrating into helpless laughter. Finally, she gasped, \"Put me down and let's walk.\"\n\nI put her down and we walked, hand in hand, outside and across the campus. Eventually, she took a deep breath and said, \"I'm OK now.\"\n\nGwen took a deep breath and said, \"Thank heavens you're hearing isn't what it used to be because, when you were reading him the riot act, you got as far as 'violation of church and state' and he wet his pants. I heard it and when I saw the puddle forming under his desk I lost my mind and had to leave.\"\n\nI really got a huge kick out of that because I really did loathe the little insect.\n\nI suggested that we go get a cup of coffee because I had to call the AAUP. Gwen took me to the Student Union and got me a cup of coffee while I called the AAUP headquarters and played them the tape which they recorded. I told the staff person with whom I was speaking to alert any and all staff that I was heading next to the Provost's Office and, if admitted directly, someone from the Office was sure to call to confirm my legitimacy. I was assured that it would be handled promptly.\n\nI finished my coffee and asked Gwen to walk us to the Provost's Office.\n\nGwen guided me across the campus to the administration building and we went upstairs to the Office of the Provost, walked in, and introduced ourselves to the Provost's secretary. I asked for an appointment with the Provost and the secretary frowned and asked, \"May I ask the nature of your request?\"\n\n\"Surely,\" I said. \"We wish to discuss the possible censure of this campus by the AAUP.\"\n\nThe secretary snapped back in her chair and said, \"Wait here, please,\" and she left her chair in a hurry and rushed into the Provost's office.\n\nThe secretary emerged from the office and asked, \"Will you wait here? The Provost can see you shortly.\"\n\nI responded, \"Surely. And have the campus attorney present, too, if she or he is around.\"\n\nThe secretary said, \"Counsel is being summoned as we speak.\"\n\nWe sat and Gwen said, \"I have to pee.\"\n\nI cracked up and said, \"Well, go now, because this isn't going to be a short meeting.\"\n\nGwen rushed off and in a few minutes, Gwen returned in time for us to be welcomed by the Provost, Dr. Kathleen Bowen, and the attorney, Mr. Robert Wick.\n\nWe sat down and the Provost kindly said, \"I know you by reputation Dr. David, but I'm not familiar with Dr. Davis.\"\n\nGwen succinctly explained to the Provost who she was and the Provost expressed her pleasure to meet her.\n\nThe Provost turned to me and asked, \"And, about what is the AAUP concerned?\n\n\"Let me begin, Dr. Bowen, on a note of full disclosure. I am on sabbatical this semester writing a book and residing with Gwen where we are conjugal partners. Additionally, I find myself acting as an unofficial mentor given that none has been assigned by her department. Finally, I am here as an officer of the AAUP to report a grievance and to seek relief from that grievance.\"\n\nWick intervened and indicated that it would be judicious of his Office to confirm both my identity with the AAUP and my official presence in the Provost's Office.\n\nI handed him the AAUP phone number and said\u00b8 \"Be my guest.\"\n\nWick left the office and I glanced over at Gwen to reassure her and found her looking at me wide-eyed. I smiled and winked at her, but saw no response from her.\n\nThe Provost said, \"In the interest of time, let me presume that you are who you say you are Dr. David. What evidence do you have to share with me?\"\n\nI handed her Gearhart's note to Gwen and she read it and it was apparent that she should not play poker. Her face stiffened into something looking like stone.\n\n\"Is there anything else?\" she asked.",
        "I handed her a tape recorder and said, \"I taped this beginning at two forty-five this afternoon. Perhaps we should await Mr. Wick's return.\"\n\nWick did return and said, \"He's legitimate and there's a tape involved.\"\n\nDr. Bowen pointed to the recorder and began listening to the tape, but she quickly leaned forward and stopped it and asked, \"Is this session being recorded secretly?\"\n\n\"It is being recorded,\" I answered.\n\nDr. Bowen asked, \"Please turn it off.\"\n\nMy response was, \"With all due respect to you and to your Office, my recorder will not be turned off.\"\n\nDr. Bowen turned to Mr. Wick who shrugged, \"Let's play it their way. We have nothing to hide.\"\n\nBowen resumed playing the tape and played it through to its entirety.\n\nAt its conclusion, Dr. Bowen turned to me and asked, \"What is it you want?\"\n\n\"First, I want Gearhart gone immediately, be that by resignation, termination, extermination or early retirement. Do what's easiest for you, but he's not to be in that office next Monday.\"\n\nDr. Bowen said, \"Done, but I assure you it won't be by extermination.\"\n\n\"Second, I want Gwen's personnel file brought, in its entirety, to Mr. Wick and I want Mr. Wick to examine it and expunge any negative opinions that pertain to her personal conduct. If there is any doubt about anything to be kept or deleted, I want to be consulted. I can be reached at Gwen's home.\"\n\nDr. Bowen said, \"Done.\"\n\n\"Thank you\u00b8 Dr. Bowen and Mr. Wick.\" I stood and shook their hands. \"You'll have a copy of my report to the AAUP expressing my enthusiasm for your cooperation and willingness to uphold the standards of behavior the profession deserves.\"\n\nGwen stood to leave and Dr. Bowen asked me to wait outside for a few moments while she talked with Dr. Davis.\n\nI walked outside, turned off the recorders, and took a seat in the outer office and chatted pleasantly with Dr. Bowen's secretary. About ten minutes later Gwen came out smiling and took my hand and we walked out of the Provost's Office and down the stairs and Gwen said, \"Now, I really have to pee.\"\n\nI laughed from the time Gwen left for the bathroom until she returned. Upon her return she took my hand we walked to my car during which time Gwen clutched my hand but said nothing.\n\nWe drove home in silence and, once home, Gwen took me by the hand and led me to the bedroom where she undressed and just dropped her clothes instead of hanging them in her closet. She finally spoke and said, \"Come to bed with me.\"\n\nI undressed and slid into bed beside her and she pushed me on my back and crawled on top of me.\n\nFinally, Gwen spoke and said, \"I have so much to say to you I don't know where to begin.\"\n\nShe thought a while and said, \"Let me start with my conversation with Dr. Bowen. Dr. Bowen wanted to know where I found you and I told her how we met and she asked me if you treated me well. I told her you treated me like a princess and even called me 'Princess.' She told me to make sure you didn't get away and she asked me what I wanted to accomplish here and I told her the truth and she told me to do it,\" and Gwen started crying.\n\nNaturally I was puzzled about the truth and the tears, but I held Gwen and waited for the rest of what she had to tell me. After crying for a while she asked me if I wanted to know what the truth was and what she told Dr. Bowen.\n\n\"Tell me what you want to tell me.\"\n\n\"I told her that everyone thought I would be a real scholar, but after living with you I knew that I had the aptitude, but I did not have the curiosity or drive or discipline to be a real one. I really wanted to be a university teacher and emphasize teaching without having to do research.\"\n\nThen, Gwen sobbed, \"I told Dr. Bowen that I wanted to marry you and move south with you and have you find me a teaching job where I could come home to you every night and prepare lessons.\"\n\nMy response was, \"Princess, make me very hard.\"\n\nGwen rolled off me and slid down the bed and grasped my cock and sucked it and stroked it and sucked it some more until she said, \"He's ready.\"\n\nI got up so Gwen could move to where I had lain in the center of the bed. She lay on her back and spread her legs and I crouched over her and asked her to put him into her pussy. Gwen slid the head of my cock into her and she wrapped her arms around my neck and we looked at each other.\n\nI began sliding into and out of Gwen very slowly and after three or four minutes, I said, \"Don't you cum, you little vixen, until I've had my say and then, but only then, you can drown me, but I want you to hear me out.\"\n\nGwen nodded.\n\nI kept the thrusts slow and deep for another few minutes and then said, \"Princess, if you want to marry me and come south with me and have me find you a teaching position, that's what you'll have.\"\n\nGwen's eyes became the size of saucers and her legs wrapped around me and she gasped. I picked up the speed of my thrusts a bit and said, \"Just be very sure of what you want.\"\n\nAs I increased the pace of my thrusts I asked, \"Are you sure?\"\n\n\"Yes, I'm sure,\" Gwen whispered.\n\n\"Good,\" I said and I simply slammed into warp speed and asked, \"Do you want me to cum or do you want me hard later, too?\"\n\n\"Auuuggggggggh! Huhhhhhh! Ugggghhhhhhhhhhh! Cum huh huh in huh huh meeeeeeeee huhhhh now Ohhhhhhhhhhhhhhhhhhhh!\"\n\nGwen's pussy gripped my cock so hard when she exploded I had a fleeting thought that she'd cut off the blood to it. I felt her flood my balls and upper thighs and she still held on to me and I think I blew my brains out into her pussy.\n\nWhen we regained some sanity we looked into each other's eyes and I said, \"Hey Princess.\"\n\nGwen asked me, \"Hey what?\"\n\nI explained that Southerners greeted each other with 'Hey' and not 'Hi.'\n\nGwen smiled and asked, \"Teach me how to be Southern.\"\n\n\"OK, number one, Southern wives never call their husband an idiot and second, they never, ever, yell at their husband.\"\n\nGwen laughed and said, \"You're such an idiot. And, furthermore, don't you forget OUR rules. I can yell at you anytime I want and you can't do anything about it.\" \n\n\"I don't recall agreeing to that.\"\n\nGwen grinned that devilish grin and said, \"I make all the rules. That's the right of princesses.\" And, of course the little vixen then stuck her tongue out at me.\n\nThen Gwen beat on my back and said, \"Take Ivan out and get up and let me on top.\"\n\nWhen we have reversed position, Gwen rested her chin on her elbows and said, \"We have a new rule.\"\n\nI said, \"Oh?\"\n\n\"Yes,\" she said, \"Will, you scared me today in both Gearhart's and the Provost's Office. You never raised your voice, but you are absolutely scary when you are like that. Please don't be like that with me, ever.\"\n\nI kissed her and said, \"OK.\"\n\nShe grinned again and asked, \"Will you really, really marry me?\"\n\n\"Uh huh.\"\n\n\"Oh, Will, it will be such fun planning our wedding! Where shall we get married? When shall we be married? Whom should we invite?\"\n\n\"Princess!\"\n\n\"What?\"\n\n\"Tell me the wedding date, time, place, and what to wear and I'll be there. I do not want to be asked question one about this. I'm busy.\"\n\n\"But, it's our wedding!\"\n\n\"Yes, and isn't it wonderful that I can entrust you to attend to all the nonsense attendant to it?\"\n\nOf course Gwen started to cry.\n\nI simply watched her cry.\n\nWhen I neither held her nor said anything, I saw her sneak a peek at me and when she saw my stony face, she stopped the tears and started beating on my chest and yelling, \"Big dumb Sasquatch!\"\n\nIt didn't help that I started to laugh.\n\nShe stopped beating on me and jumped off the bed and found my trousers and wallet. Triumphantly, she extracted my credit card from my wallet and grinned and said, \"You'll be sorry.\"\n\n\"I probably will.\" Then I added, \"Call your daughter. I'm sure she'll be ecstatic to help.\"\n\nGwen brightened considerably and said, \"That's a wonderful idea!\"\n\nTo my delight, that's exactly what she did and the two of them spent the next hour talking about heaven knows what. I got up and washed and left the house and returned with Chinese for dinner.\n\nWhen Gwen got off the phone she grabbed some dinner and excitedly told me everything she and her daughter had discussed. At some point she yelled, \"You're not listening to me!\"\n\nMy response was, \"You have my rapt and undivided attention.\"\n\n\"Hah!\" was Gwen's response. \"Tell me what I just told you.\"\n\n\"I'm old, I can't remember anything that long.\"\n\n\"This is important, Old Man. Pay attention.\"\n\n\"OK,\" I said, \"Let's do this. You make notes all day, every day, and then we'll take 30 minutes every evening and you can tell me everything you want to tell me about our wedding.\"\n\n\"That's what I'm trying to do right now, you idiot.\"\n\n\"Are you yelling at me again?\"\n\nGwen yelled, \"Yes, I'm yelling at you. How else do I get your attention?\"\n\n\"You could try sitting in my lap and speaking softly and slowly.\"\n\nThere was a lengthy silence followed by Gwen saying, \"Oh.\"\n\nGwen grinned and climbed into my lap and then, calmly, told me everything she and her daughter had discussed. None of it made any sense to me, but the Princess was excited so I listened. When Gwen finished, I explained to her that I appreciated her excitement and I was happy that she was happy and excited. However, I had understood very little of what she had said so if she expected me to remember details of our conversation tomorrow or a week or a month from now I wouldn't. What she had told me might as well have been spoken in Bulgarian for all I understood.\n\nGwen looked crestfallen and asked me about my experience with weddings and I explained that I had attended a few in my life, but knew nothing about preparations for them or what was expected of whom or who did what or when they did it. I summarized it by saying, \"This is simply alien to me and I have a book to write and I'm concerned about my deadline, but I want you to have the best time of your life planning and executing it.\"\n\nGwen buried her face in my shoulder for a long while and sighed. Finally, she lifted her head and said, \"I love you dearly and thank you for telling me what you just told me and how you told me. I feel like I just emerged from darkness into light in terms of understanding you.\"\n\nShe elaborated, \"On one hand I see you as an academic and I know you consult with major corporations and I see this giant. Sometimes, I think of you as the Godfather. You can pull a few strings, you can make a phone call, you can sit in an office and intimidate people who just aren't otherwise intimidated. You fix everything that needs fixing. You design great studies and write clearly and concisely, you bring untold amounts of grant money to your campus. You simply dominate your environment.\"\n\n\"Then I see you telling me you never had a girlfriend. You had no idea what I was talking about when I offered you a pair of my panties. You tell me you don't know how, even with me, to initiate love making and you don't understand wedding ceremonies, and you look at me with the most puzzled expression when I yell at you. In my world, you are childlike. The contradiction is all very clear now.\"\n\n\"Uh, OK,\" was about all I could muster.\n\n\"Here's what we're going to do, Old Man. I want you to give me the names of your five best male friends who are married and I'm going to talk to their wives and learn how to plan a wedding that respects both of these worlds.\"\n\nGwen got some paper and a pen and I consulted my phone directory and gave her five names and phone numbers and Gwen said, \"Good. Now, Anastasia is very wet and very agitated and wants the Old Man to lick her very thoroughly.\"\n\nWe exchanged positions on the bed temporarily scattering who knows how many cats. With Gwen on her back and a pillow under her bottom, and me poised above her, she presented her pussy to my mouth and I pulled back the doors to that precious opening and licked her sopping pussy until she was squirming and moaning. Finally she clamped her pussy to my mouth and asked me to suck her clit. I did and she screamed only once and bucked and shuddered to her orgasm.\n\n//\n\nWhen Saturday arrived, so did Barb in anticipation of Charles' visit that afternoon. Gwen excitedly explained to Barb that they were going to phone the wives of my best friends and determine how to plan a wedding so that I was a part of the event. Barb had lots of questions and Gwen explained everything fully to her. Barb became excited.\n\nI retired to the spare bedroom which was my unofficial office and began cross-checking all my references in the now mostly completed book. Even from the spare bedroom I could hear gales of laughter from Gwen and Barb. Whatever it was they were discussing was awfully funny.\n\nAround eleven thirty a gleeful Barb came to get me for a light lunch. I joined the two women and noticed that both of them were flushed from all the laughter that had ensued during the phone calls. Both mother and daughter would look at each other and smile or laugh.\n\nAs we began eating, Gwen consulted the notes she had amassed during her phone conversations and said, \"All right, Old Man, here's what Barb and I learned this morning.\"\n\n\"One, Walt's wife Martha was very direct and blunt. To quote her, 'Don't let him get involved at all. He'll fuck it up royally.'\"\n\nI looked at the two women as they erupted into laughter.\n\n\"Two, Rasheed's wife, Rawanda, simply stuttered and finally blurted out, \"No Will, no Will. He mess up everything.\"\n\nAgain, both women laughed uproariously.\n\n\"Three, Howard's wife, Lillian, said and I quote, 'For God's sake Gwen, keep that idiot out of it. When we got married, Howard had my entire family and his entire family and our rabbi furious with him.'\"\n\nBy now Barb was laughing so hard she excused herself to go compose herself. My secret suspicion was that she had inherited her mother's thimble-sized bladder.\n\n\"Four, Dick's wife, Dorrie said...,\" and Gwen burst out laughing even before she started to read her notes. Barb reappeared and asked, excitedly, \"Where are we in the notes?\"\n\nGwen said, \"Dorrie\" and the two of them laughed.\n\nGwen started over, \"Dorrie said, 'Gwen, don't even try to include him. You'll be lucky to get him to the ceremony with his fly zipped.'\"\n\nBoth women convulsed into laughter and Gwen threw her notes into the air and walked away from the table just shaking all over with laughter. Barb was simply beyond sanity she was laughing so hard.\n\nEventually, Barb settled down and Gwen reappeared wiping the tears out of her eyes. Gwen walked to me and signaled that she wanted to sit on my lap so I scooted the chair back and she sat down and rested her head against my chest. Barb got up and reassembled Gwen's notes and asked, \"Do you want me to read, Sarah's advice?\"\n\nI could feel Gwen's body shaking with laughter, but she said, \"It's not necessary.\"\n\nBarb put the notes down and came up to me and kissed me on the cheek. She asked me if she could make me a cup of coffee and I accepted. Gwen reminded Barb, \"Two scoops.\"\n\nFinally, I spoke and asked, \"Would someone like to explain just what all this carrying on about means?\"\n\nBoth women laughed and Gwen spoke, \"Old Man, it means you don't have to do a darn thing with planning the wedding other than to show up with your fly zipped at the right time on the right day in the right place.\"\n\nMy contribution to the conversation concluded with, \"Isn't that wonderful.\"\n\nI enjoyed my cup of coffee while Gwen and Barb talked about Gwen's dad and how much he'd hate traveling to Virginia to give her away, but Gwen she'd talk to him and Barb said, \"I'll help wear him down, too.\"\n\nMy ears perked up and I asked, \"What's this giving you away? Does someone own you? How can someone give you away?\"\n\nBarb and Gwen looked at each other and Barb said, \"Oh my gosh, they weren't exaggerating.\"\n\nGwen walked over to me and said, \"Will...this is just like the ta-tas thing. Leave it alone. Drop it.\"\n\nI said, \"Well, OK, but I surely don't understand this.\"\n\nGwen gave me a look and I knew not to pursue it, but decided that I'd look up this practice on the web.\n\nBarb asked, \"What's the ta-tas thing?\"\n\nGwen whirled around and said, \"You, too. Just drop it.\"\n\nBarb looked blankly at her mother and said, \"OK.\"\n\nGwen started making a pot of coffee and getting some dessert ready for Charles' arrival.\n\nAbout one that afternoon, the phone rang and a garbled voice came over the line that had Barb straining to understand. The phone was in speaker mode and Barb looked to Gwen for help. Gwen shook her head and said, \"I can't understand a word.\"\n\nBarb brightened and said, \"Charles, turn off the Bluetooth and speak directly into the phone so we can understand you.\"\n\nFollowing some static and squealing, Charles came on the line and said he'd be arriving in the next twenty minutes. He hung up and Barb and Gwen both looked quite pensive. I tried to keep an open mind about the boy.\n\nOn time, Charles arrived in a black Cadillac Escalade and the word \"ostentatious\" flitted through my brain.\n\nCharles alighted from the big SUV looking like a king who was about to visit some of his poverty stricken subjects.\n\nI seated myself on the couch to study him as he approached and with no greeting to either his mother or sister, he made a derogatory comment about his mother and the five cats who were fleeing for their lives when he came inside.\n\nI got up from the couch and walked forward and extended my hand. Charles stopped, thrust out his hand, gripped mine firmly and announced to me, \"Charles Davis, the Second.\"\n\nI responded, \"Will David, the First.\"\n\nGwen gave me one of her \"I'm going to kill you\" looks, and Barb's face splint into a huge grin. Women are hard to understand.\n\nGwen asked if Charles might be good enough to address her and his sister and Charles nodded to both of them.\n\nCharles sat down and carefully crossed one leg over another and straightened the crease of his trouser leg carefully and brushed away a piece of imaginary lint.\n\nHe looked directly at me and sneeringly said, \"Look, Professor, let me be upfront with you. I do not care for academicians. You take our money, act like those of us not in academe are philistines, and make no real contribution to commerce. It is not pleasant to think of you being married to my mother.\"\n\nI sat for a while and finally asked, \"Who cares?\"\n\n\"Just what do you mean by that?\" was Charles' puzzled response.\n\nI responded, \"Who cares what you think of the professoriate? You don't have to like me or respect me. I certainly don't care. What is at issue here is that you are important to your mother and I'm important to your mother and out of respect for her, we have to be civil to each other. Nothing more or nothing less is required of either of us.\"\n\n\"What a typically glib response. I should not have expected anything else from an academic?\"\n\n\"Charles, you have me at a disadvantage here. I haven't a clue why you want to pick a fight with me.\"\n\n\"Are you stupid, Professor? I don't care for your kind and I don't care for you now that I've met you. Not only are you a typically glib bastard, you're too old for my mother and I'm repulsed by the thought of you and my mother together.\"\n\nI said, \"Fine. I have nothing more to offer.\"\n\nFinally, Charles actually acknowledged Gwen and said, \"I ask you not to have anything to do with this...\" and he groped for a word and finally came forth with, \"asshole.\"\n\nBarb had been in my line of sight throughout this exchange and she was white hot with fury with her fists clenched. I turned to Gwen and did not recognize her for a moment. Her face was set in granite. She stared at her son for the longest time and finally spoke in carefully measured tones, and asked, \"Who are you?\"\n\n\"Just what do you mean by that?\" snapped Charles.\n\nGwen said, \"I mean that neither your father nor I ever raised you to be the insufferable ass you've become.\"",
        "\"Get off it, Mother!\" Charles shouted.\n\nBarb lost it and rushed her brother and slapped him. Unfortunately, he turned and slapped her back and quite hard. Barb's head snapped back and she went down.\n\nGwen screamed and I said, \"Uh oh!\" and I stood up and started for Barb and Charles screamed at me, \"Oh, you want some of that, too?\"\n\nI said, \"No, I want to attend to Barb.\"\n\nI got to Barb and got down on my knees and was glad to discover that the fluttering of her eyelids was diminishing and her eyes were focusing. I picked her up and laid her on the couch and propped her head on a pillow and held up three fingers. She said, \"Three.\" \n\nI turned to Charles and said, \"I think you better leave and I think you better seek counseling for whatever is ailing you.\"\n\nCharles' eyes became huge and he screamed, \"What?\"\n\nI repeated myself and Charles laughed at me and said contemptuously, \"Counseling?! That's where weaklings, the likes of you, go.\"\n\nGwen snapped, and yelled, \"Get out of here Charles! Get out, get out, get out!\"\n\nCharles scowled and said, \"Fine! I'm leaving.\" And, then, he turned and spat on my shirt.\n\nI grabbed Charles and had him in a standing hammer lock before he knew what happened and I turned to Gwen and said, \"He's probably going to lose some blood and I don't want it all over the carpet and furniture.\"\n\nGwen looked at me uncomprehendingly and I said, \"Come outside. I want a witness.\"\n\nShe followed me as I dragged Charles kicking and swearing out the front door onto the lawn where I released him and shoved him away. As I suspected he would, he uttered a mighty oath and turned and charged at me and, in his mindless headlong rush, his nose somehow collided with my left fist.\n\nBlood arced out of his face and his nose flattened. He made some kind of inhuman noise I'd not heard before and he was flat on his back choking on his own blood. I'm not sure if Charles knew if he was in northern Virginia or Outer Mongolia. I'm also pretty sure he didn't care.\n\nI gave Gwen my cell phone and asked her to call 911 explaining that Charles was going to the local psychiatric ward. I rolled Charles onto his stomach so that he didn't choke and Gwen made the call. The police and ambulance arrived within seconds of each other and Barb, Gwen, and I gave our statements to the police. Neither Gwen nor Barb could account for Charles' behavior and they gave the police the phone number of Charles' father thinking he might be able to lend some insight to the situation.\n\nThe police left and the three of us went inside and I poured coffee for everyone. No one spoke until I said, \"I don't think that was your son, Gwen, or your brother, Barb. Like you, I have no idea what's wrong with him, but I think he's where he can get some help.\"\n\nAfter coffee, I excused myself, and busied myself with my book. Barb eventually went to lie down and Gwen came to me and curled up in my lap and closed her eyes. I held her and we sat wordlessly.\n\nAbout five o' clock Charles' and Barb's dad, Gwen's ex, showed up. We introduced ourselves and, thankfully, he didn't introduce himself as Charles Davis, the First.\n\nHis first question was, \"Whose idea was it to put the kid in the psych ward?\"\n\nI indicated that it was mine.\n\n\"Good call,\" was his dad's response. \"I've been on him for three months to get some help because he has simply been out of control.\"\n\nHe turned to Barb and said, \"I don't think you should hear what I have to say. Please disappear for just a few minutes, Barb.\" \n\nBarb looked at her mother and Gwen said, \"She stays.\"\n\nGwen's ex heaved a big sigh and said, \"All right. Here it is in unvarnished detail. Charles has been struggling at work and his negative attitude has gotten him into some trouble at work. I'm not sure he can hold onto this job. His trouble at work has simply torn him to pieces.\"\n\n\"Secondly,\" and he glanced nervously at Barb, \"in the last two months he's gotten two women into bed and both laughed at his\"...and he groped for the word and finally blurted out,'equipment.' One woman went so far as to tell him that his Escalade was his way for compensating for that 'worm' in his pants.\"\n\nHe continued, \"Charles' self-esteem is gone. He's in a state of rage against everyone and anyone and himself.\"\n\nHe then turned to me and said, \"Let me commend you on the restraint you apparently showed. I read the police statement and you went beyond the call of duty not to hurt him.\"\n\nHe turned to Gwen and Barb and said, \"I'm sorry.\"\n\nTo Gwen he said, \"You didn't raise that boy the way he's turned out. I have no idea why he ran off the track, but he's a train wreck right now. Maybe the psychiatrist at the hospital can help him.\"\n\nHe got up and started to leave saying, \"What a mess this is.\"\n\nGwen stopped him with her question, \"How do you know this?\"\n\nHer ex turned and with tears in his eyes, he said, \"That's the most pathetic part of it all. He tells me all this first-hand.\"\n\nHe left and the three of us looked at each other in amazement.\n\nAfter a long silence, Barb asked, \"What's the moral of this story?\"\n\nGwen got up from the table and started fooling with the coffee pot and then looked back to Barb and said, \"Grow a big one.\"\n\nBarb turned bright red in embarrassment.\n\nSomehow I kept a straight face and got up and walked up to Gwen and picked her up and she wrapped herself around me and gave me one of those marathon kisses that would have gone on longer if Barb hadn't said, \"Hey you two, I'm embarrassed enough already.\" \n\nGwen and I grinned at each other and I put her down gently. She shielded Barb with her body and gave Ivan a big squeeze.\n\nGwen got one of those devilish looks on her face and said, \"What a day this has been. Let's make it a trifecta and call Grandpa.\"\n\nBarb laughed and clapped her hands and said, \"That will provide some comic relief!\"\n\nBarb turned to me, \"Grandpa is Archie Bunker in real life. He hates everyone who isn't white, Republican, Protestant, and hasn't been in this country two-hundred years or more.\n\n\"This should be interesting,\" I said.\n\nGwen said to me, \"You're not going to believe this. Just don't take it personally, OK?\"\n\nI nodded, \"OK.\"\n\nGwen dialed and we heard her dad answer.\n\n\"Hi Dad, this is Gwen. How are you?\"\n\n\"Gwen! I'm fine O Apple of My Eye. How are you?\"\n\n\"I'm really well, Dad, and I'm calling to tell you that I'm getting married and I want you to come here to give me away.\"\n\nDad gave a whistle and asked, \"You're not marrying another mean little bastard like the last one are you?\"\n\n\"No Dad, this is really a fine man.\"\n\n\"Oh yeah? What's he do?\"\n\n\"He's a professor, Dad.\"\n\n\"A professor! That is worse than that bastard you married. Professors are Communists\"\n\n\"No, Dad, this fellow isn't a Communist.\"\n\n\"I'll bet the sonofabitch is a Commie. And a damn liberal, too! Bastards!\"\n\n\"No, Dad, he's fine.\"\n\n\"What's the sonofabitch's name. I'm going to investigate him.\"\n\n\"Dad! There's nothing to investigate.\"\n\nI grabbed a note pad and scribbled \"Alger Hiss\" on the pad and pointed to myself.\n\nGwen shook with laughter and said, \"OK, Dad. His name is Alger Hiss.\"\n\n\"That even sounds Communist. How's he spell it?\"\n\nGwen spelled it for him.\n\nHer Dad then asked, \"Is this professor a Jew? Damn, I hate Jews.\"\n\n\"No, Dad, this man is a Presbyterian.\"\n\n\"Wow, this sonofabitch is a really sneaky Commie. He's not black is he? Damn, I hate blacks.\"\n\nBarb, nearly splitting her sides by now, had to leave the room so her Grandpa couldn't hear her laughing.\n\n\"No, Dad, this man is white.\"\n\n\"Well, at least you got the color right. Now, don't you go making any plans you can't cancel until I investigate this professor. Damn, I hate liberal bastards.\"\n\n\"OK, Dad, I'll be waiting right here for your report.\"\n\n\"You do that, Girl. My God, a professor can't support you. They give all their money to liberal causes. They're going to be the ruination of this country. I'll bet this sonofabitch approves of gay marriage.\"\n\n\"Dad, he doesn't approve or disapprove of gay marriage. He thinks it's a civil right for two people to marry.\"\n\n\"He's a goddamn liberal then. Damn, I hate liberals.\"\n\n\"I know Dad. But, I love you because you don't discriminate against anyone. You hate them all equally.\"\n\n\"That's right, dammit. Communists, all of them.\n\n\"OK, Dad. I'll be right here.\n\n\"How's that beautiful granddaughter of mine?\"\n\nGwen responded, \"Barbara is fine, Dad. She's just a delight.\"\n\nHer Dad then asked, \"How's that little prick of a grandson of mine?\"\n\nGwen, and Barb, who was listening at the doorway to the kitchen, both looked shocked and then Gwen burst into laughter and said, \"He's just as you described, Dad.\"\n\nI saw Barb blush purple and heard Gwen's dad say, \"Mean little bastard, too.\"\n\nGwen was wiping tears of laughter from her eyes and her Dad asked, \"When are you marrying this Commie professor?\"\n\n\"We haven't decided, Dad. Probably in June and I'll let you know.\"\n\n\"All right, Sweetie. You be good and take care of yourself.\"\n\n\"Bye, Dad.\"\n\n\"Bye, Sweetie.\"\n\nBy now, all three of us had tears of laughter in our eyes. \n\n\"I have a question\" I said. \"What happens when he investigates Alger Hiss and discovers that he's been dead since 1996?\"\n\nGwen laughed and said, \"Oh, he won't investigate anyone. That's just his bluster and posturing. When he meets you, he'll be a pussycat.\"\n\n\"Does he really hate Jews and blacks?\"\n\nBoth Gwen and Barb laughed and Barb said, \"He doesn't even know any black people.\"\n\nGwen added, \"One of his best friends at the senior center is Jewish and Dad doesn't even know it. The Jewish guy baits him all day long into saying outrageous things about Jews.\"\n\n\"How old is your Dad?\" I asked.\n\nGwen thought a moment and said, \"He's 77 or 78 now.\"\n\n\"This,\" I said, \"should be funny.\"\n\nAll in all, the day was a wash. Both women had a lot of fun and both women were mystified and saddened by the behavior of their son and brother. I was amazed at the three-ring circus into which I'd wandered.\n\nWhen we got to bed that night Gwen asked that I hold her. She was quiet for long periods of time and I suspected that she was grieving over her son. At other time she laughed and I suspected she was thinking either about her conversations with the wives of my friends or her Dad's bluster.\n\nSuddenly Gwen just said, \"O Lord, how I love you,\" and she hugged me with some amazing strength. I was so touched that she had five cats huddled near her. Each of them had apparently sensed her mood and they had come to comfort her.\n\n//\n\nOn Sunday, we went to church and spent a very quiet day. Gwen rested and Barb and I played some board games and watched a little pro basketball on TV. Late Sunday afternoon, Barb departed for school and said she wished she didn't have to leave. Her reason: \"Life is crazy here.\"\n\nOn Monday, Gwen and I slipped into our routine although Gwen did point out that Ivan had been ignored of late so Anastasia and Ivan enjoyed a long, slow screw that culminated with Gwen cumming loudly. She asked me not to cum in her saying she wanted Ivan to \"squirt on my ta-tas.\" As I neared orgasm I pulled out of Gwen and she sucked Ivan until my groan signaled that I was about to explode. She aimed Ivan and I spurted my cum all over Gwen's nipples. She then sucked me until I had fully softened and we showered and our day unfolded.\n\nIn the next few days I made some real progress on the book and I could see the end in sight.\n\nOn Wednesday evening the phone rang and Gwen answered it and then turned to me with a really puzzled expression on her face and said, \"It's my dean for you.\"\n\nI spoke to the dean who made me laugh when he thanked me profusely for ridding him of that 'asshole Gearhart.' He then stunned me by asking if I'd be the acting chair of Gwen's department until the end of June.\n\nBeing really surprised, I pulled up a chair and sat and asked him why he was asking me to be acting chair. Gwen's eyes became very large and the little vixen unzipped me and extracted Ivan and began sucking him. She would look at me and nod her head and resume sucking. Clearly, she wanted me to be the acting chair.\n\nI pointed out that Gwen was in the department and untenured and my serving as her chair was simply untenable and improper. He assured me that it would be fine given that the appointment would be for only three months and for only three to four hours daily.\n\nI also had to remind him that I was on sabbatical and drawing a salary from my own university and my own university might have a problem with what was really double-dipping. The dean assured me that he would check that hurdle, but he wanted to know if I was amendable to the idea.\n\nBy now the Princess had lost all her clothes and had climbed onto the chair and was facing me. As the dean spoke, she was rubbing the head of my cock up and down her incredibly wet pussy.\n\nMy next question, would I thought, give him pause. I said, \"How competent is the administrative assistant, because that's really who runs the department.\"\n\nGwen continued teasing her pussy with the head of my cock and I was having some genuine difficulty paying attention to the dean's response.\n\nWhat I took from his response was that he had checked that carefully and had determined that the only reason the department had functioned at all during Gearhart's tenure was the knowledge and persuasiveness of the administrative assistant.\n\n\"What do you need done in the next three months?\" was my next question.\n\nGwen had resumed sucking me and I knew it was useless to tell her to stop. The little vixen was enjoying this too much to stop and I guessed she was aching to tell me that I let her get away with anything. The fact that I did, didn't help my position at all.\n\nThe dean explained that he really didn't have a department at all. He did have eleven individuals all functioning in their own orbit and only Gwen had had the sense to go to the other departments in the school and say, \"These are the courses I teach. Do you have a preference when I teach them so your students can access them?\"\n\n\"In short,\" the dean explained, \"I need them to have a departmental mission and a school mission. What I have now are a bunch of courses being taught out of sequence or at the inappropriate time.\"\n\nGwen had now turned around and was teasing my cock doggy style. I had to admit she felt awfully good.\n\n\"Are you aware,\" I asked the dean that I've managed my entire career to avoid being the chair of my department?\"\n\nThe dean laughed, \"That must be a story unto itself. But, I'm not worried about that. You've been around long enough to know what to do.\"\n\nMy final offering was, \"Check this out at my place and if they don't object, we'll talk further.\"\n\nThe dean said, \"Fine. Do I start with your chair or dean?\"\n\n\"I guess,\" was my best estimate.\n\n\"Ah, you're as confused as I am. OK, I'll talk to you soon.\"\n\nThe conversation ended and Gwen thrust herself, doggy style, onto my cock.\n\n\"Princess, what are you doing and why are you doing this?\"\n\nGwen said, \"I'm practicing being the evil assistant professor who sneaks into her chairman's office and screws him.\"\n\n\"That's very evil and unethical,\" I noted.\n\n\"Yes, but Anastasia craves power. She will stop at nothing when it comes to her chairman's cock.\"\n\nShe rocked back and forth on my cock and said, \"Phooey, this is no fun. I can't look into your eyes like this.\"\n\nShe pulled herself off my cock and lay on the floor with her legs spread swiveling her pussy at me.\n\nI just stared at this amazing woman and she frowned and ordered, \"Mount me, Old Man.\"\n\nBoy, did I ever.\n\nAfter her orgasm, she yelled at me because she had leaked all over the carpet and we had five cats looking at us like we were crazy. \"You shouldn't ravish me in front of the babies. What will they think? And, look at the mess you made on the carpet!\" \n\nI gently reminded Gwen that she was the evil assistant professor in this scenario and she had made the mess and the chairman certainly didn't clean up after the evil assistant professor.\n\nGwen pouted magnificently and decided that she could argue her way out of the carpet cleaning. When I suggested that perhaps the assistant professor might have four different preparations the next semester, she got up and retrieved the carpet cleaner and did a nice job on the carpet. And, all I had to listen to was a litany of complaints about the abuse of power by the chairman.\n\nWhen the carpet was cleaned she came to me and sat, still naked, on my lap and I asked, \"Why do you want me to serve as your acting chair?\"\n\nGwen flashed her devilish grin and said, \"You would be so serious and professorial and I could sneak into your office and suck Ivan.\"\n\n\"What if I wouldn't let you do that?\"\n\nGwen smiled her Mona Lisa smile and said, \"Fat chance of that!\"\n\nI burst out laughing as did she. She, of course, stuck out her tongue and then she said, \"I love you, Old Man,\" and she hugged me fiercely.\n\n//\n\nLife, however, was getting complex. Gwen had put her house on the market to sell. I was reviewing all of her teaching materials so that I knew how to present her case for a lectureship at my own university and Gwen was calling the hospital every few days to see if she could learn anything about Charles the Second's condition.\n\nThe hospital was so secretive we had some doubts he was even a patient there. In fact, Gwen asked me to go to the hospital to confirm that he was there. Instead, I went to a judge who called the hospital for me and asked if they wanted to do this the easy way or the hard way. The hospital chose the easy way and confirmed that Charles was in treatment and was 'making progress' which was less than useful information. But, at least Gwen knew that Charles was hospitalized and receiving treatment.\n\nThen the phone started ringing. First, it was my chair and then my dean and finally the vice provost for academic affairs all wondering if I was resigning to move to northern Virginia. I had to assure each of them, separately, that I'd be back in August to start the academic year. \n\nI did use the opportunity to talk to each of them about an appointment for Gwen and indicated that I had reviewed her teaching materials and they were stellar.\n\nAs I explained it to them, all of her teaching was based on student engagement in the material. Passive learning was absent. Students constantly had to answer questions, work problems, and apply reasoning to the material. \n\nThe dean was quite interested and said he'd get back to me in a few days. True to his word, he did call back and say that the school did, as he suspected, badly need a statistics instructor who could manage at least two intro and one advanced stats classes each semester. \n\nHe asked me to send him her materials for local review and if her materials passed muster, she would be invited to interview for a teaching position.\n\nGwen mailed the materials and we sat back to wait to hear something.\n\nIf this wasn't enough to disrupt my efforts at a quiet, ordered, life, Gwen's dad called to say he wanted to fly down to Virginia to meet me and he wanted to know when I'd be in town.\n\nGwen explained that I lived with her and the old coot nearly had a cardiac event. He ranted and raved that the country's morality was going to hell in a hand basket and what could he expect from a damned liberal named Alger Hiss and what the hell kind of a name was that anyway?\n\nGwen laboriously explained that I was not Alger Hiss and we had played a joke on him and Gwen explained that Hiss may or may not have been a Communist, but he served time in jail for being deemed one. The old guy was completely confused, but Gwen finally explained it in terms he could understand.\n\nShe carefully explained that my name was Will David and she would send money so Dad could purchase a round trip ticket for the next weekend. Dad promised to punch Will David in the nose for compromising his daughter's virtue.",
        "During the week I finished the initial draft of the text and Gwen and I celebrated with a nice dinner.\n\nEarly Friday morning my dean called to say the school definitely wanted to interview Gwen and the dean listed the dates they could accommodate her. When would her schedule allow her to fit into one of the dates ranges he had provided.\n\nBecause I had taken the call, I said, \"Excuse me, Charlie. I haven't yet heard anything about the funding for her trip.\"\n\nGwen nearly fainted and was waving her hands violently for me to drop the topic.\n\nCharlie yelled, \"For God's sake, Will, this is for a lectureship. This isn't for a tenured position or top research position. There is no travel money for a position such as this.\"\n\nMy response was, \"Look Charlie, I know my memory isn't what it was and I know yours isn't either, so why don't you ask your finance lady just how much that last grant I landed made for the school?\"\n\n\"Damn you, Will. Do you always have to be a hard ass?\"\n\n\"Charlie, if you had to spend your life dealing with bandits like yourself, you'd be a hard ass, too.\"\n\n\"All right, fine, Will. We'll pay for the trip, but I can't promise we won't route her through Winnipeg and Pocatello.\"\n\n\"You do that and let me accompany you to Budgetary Affairs to explain a plane ticket via Winnipeg and Pocatello.\"\n\n\"Will, you're a son of a bitch.\"\n\n\"Maybe I am, but Gwen isn't and I'm going to give the phone to her. Treat her nicely.\"\n\nGwen gave me one of her patented, 'You are an idiot' looks as she took the phone from me and then said, \"Hello, Dean Carlton. I'm really thrilled to have the opportunity to meet with your search committee.\"\n\nCharlie was still royally ticked and his response was a bit testy. \"We're really looking forward to meeting you, too, but only if you leave that jerk you're marrying at home.\"\n\nGwen made me so proud. She gave it right back to the dean when she said, \"Surely you're not referring to Will. He's such a pussycat.\"\n\nCharlie burst out laughing and we could hear him muttering, \"'A pussycat'. Yeah, right.\"\n\nThey settled on a May visit after Barb was out of school and could make the trip with us.\n\n//\n\nBarb drove to Gwen's on Friday evening so she could accompany us to the airport to meet her Grandpa. Even meeting Grandpa wasn't without drama because he didn't want to meet us at the baggage claim because he wasn't checking any baggage. No matter how Gwen explained it, Grandpa did not want to meet us at baggage claim. \n\nFinally, completely exasperated, Gwen said, \"You'll meet us at baggage claim or you'll spend the weekend in the airport and that's the last we're going to hear of it.\"\n\nMiracle of miracles, Gwen's dad did show up at the baggage claim. He was a bandy-legged, small old guy who just looked pugnacious. However, it was rewarding to see his face light up when he saw Gwen and Barb. After much hugging and kissing, Gwen introduced me to her dad.\n\nHer dad looked at me incredulously and muttered, \"Will David!?\"\n\nGwen, Barb, and I all looked strangely at him and he stared at me wordlessly. Finally, he broke into a grin and said, \"Yes, you're the same Will David I watched play basketball years ago.\"\n\nHe turned to Gwen and Barb and said, \"This guy had the sweetest jump shot this side of heaven. He could elevate, then the stroke, then the wrist snap, and that ball went through the hoop. Oh, Gwen, this guy could shoot out the lights.\"\n\nThen he whirled to face and he stuck out his chin and yelled, \"But you couldn't rebound for shit!!\"\n\nI thought Barb would have a stroke. Instead she yelled, \"Grandpa! Your language!\"\n\nThe old guy turned to Gwen and asked, \"What I say?\"\n\nGwen said, \"You just yelled 'shit'loud enough to be heard three concourses away.\"\n\nGrandpa turned to Barb and said, \"Sorry, Sweetheart.\"\n\nThen he turned to me and yelled, \"And, you played defense like a pussy!!\"\n\nI think Barb was trying to yell 'Grandpa,' but something like 'Grawpawwk' came out of her mouth. Gwen grabbed her dad and shook him and said, \"Dad, now that's enough! Stop it!\"\n\nThe old guy was mystified. \"What I say?\" he implored of all of us.\n\nGwen said, \"Your language is awful. Now, calm down and speak softly without swearing and using foul words.\"\n\nHer dad looked askance at Gwen and said, \"I won't be able to speak all weekend.\"\n\nBarb injected, \"That, Grandpa, would be an improvement.\"\n\nProperly chastised, Gwen's dad used a conversational tone to ask me, \"Hey, why didn't you go pro?\"\n\n\"I couldn't rebound for shit\" was my response.\n\nThe old guy turned to Barb and Gwen and said, \"See, I told you. Does this old man know his basketball or what?\"\n\nWe left the airport and walked to the car. As we reached the car the old guy told me, \"Did you know that I worked in the steel mills in Pittsburgh, Wheeling and Youngstown when I was younger?\"\n\n\"No wonder they closed,\" was my response.\n\n\"Hey!\" the old man said, delightedly. \"This guy has a sense of humor.\"\n\nIn the car he said, \"You know, you don't look like a Commie.\"\n\n\"No, I don't. They send us to Communist school and train us to look like Republicans,\" was my response.\n\nThis time both Gwen and Barb together said, \"Will!\"\n\nThe old guy never even heard them. \"Why did you become a liberal?\" he asked.\n\n\"I didn't know I was a liberal.\"\n\n\"Sure you are! You're parking your pickle in my daughter and you're not married to her.\"\n\nThere were some very strange sounds coming from the back seat and I asked, \"Barb, did you just throw up in the car?\"\n\n\"I'm about to, but I haven't yet,\" was Barb's response.\n\n\"Good. Hang tough, Barb. Well, Pops, they taught us in Communist School that Republicans don't have pickles, so I'm careful not to park mine anywhere and blow my cover.\" \n\nI heard Barb saying something that sounded like, \"Eeeeuuuwwwwww!\"\n\n\"What a load of baloney, that is!\" Pops yelled.\n\n\"Do you mean Republicans do have pickles? Why are they so angry all the time, then?\"\n\nGwen's Dad yelled, \"We are not angry all the time, dammit!\"\n\nI distinctly heard a pleading tone to Gwen's voice as she said, \"Will, please stop.\"\n\nI said, \"Ok,\" and slowed the car and pulled off the highway onto the shoulder.\n\nI tuned around to see why Gwen wanted me to pull over and found her glaring at me and yelling, \"No, you idiot. I didn't mean the car. I meant I want you to stop baiting my Dad.\"\n\nHer Dad yelled, \"What, what? Who's baiting me?\"\n\nGwen said, with a distinct overtone of exasperation in her voice, \"Dad, Will is just teasing. He really is not a Commie or a liberal or anything else like that. He's just playing with you.\"\n\n\"Really?\" Pops asked me.\n\n\"I'm afraid so, Pops.\"\n\n\"Damn, I was really enjoying whipping your ass in that argument.\"\n\n\"Yeah, I think that's why Gwen made us stop.\"\n\nGwen asked, \"Are you hungry, Dad? Do you want to stop for something to eat?\"\n\n\"Sure! I'm hungry.\"\n\nGwen asked, \"Where would you like to eat?\"\n\n\"IHOP! That's my favorite restaurant.\"\n\nAccordingly, we found an IHOP and Gwen's dad ate to his heart's content. After eating we went home and he was amazed to find five cats. More amazing was that the five cats were interested in him. Fluffy, one of Gwen's cats virtually adopted the old guy and parked herself on his lap. The old man was simply ecstatic. We soon discovered that we really didn't have to entertain the old guy at all. He played with the cats, watched television, looked at our books and asked questions. It was actually fun dealing with him unless something remotely political intruded into the conversation. Then, he tended to go bat-shit crazy, but we learned pretty quickly to steer the conversation away from topics that triggered his outbursts.\n\nGwen's dad tired early and he happily toddled off to bed. We had all noted that his clothes fit him too loosely and I gave Barb some money and asked her to take him shopping on Sunday to get some shirts and pants that fit him. Barb said she would.\n\nOn Sunday morning Gwen's dad was beside himself with joy because two of the cats had slept with him. Things got a bit sticky, however, when he asked if his grandson, Charles, would be visiting. Gwen explained, again, as simply as she could, that Charles was having emotional problems and he was hospitalized for them.\n\nAgain, this did not really compute for the old guy and he asked, \"Is Charles in a loony bin?\"\n\nBarb concocted an interesting answer to his question by explaining that the 'loony bin' was reserved for people on the top two floors of the hospital and Charlie was only on the ground floor where people were helping him understand why he was so angry with, and mean to, people.\"\n\nInterestingly, Barb's explanation satisfied her grandpa.\n\nWe did take him to church and that experience resulted in an amazing episode.\n\nFor reasons we couldn't discern, Gwen's dad was transfixed with the minister. In fact, he never took his eyes off the minister and listened intently to the sermon with an attention span that Gwen later indicated she did not think her dad still possessed.\n\nAs we departed church and approached the minister who was greeting and shaking everyone's hand, Gwen whispered to her Dad, \"Don't swear at the minister.\" Happily, the old man did not.\n\nWe went to lunch and the old guy was strangely silent. We sat and ordered and I could tell that both Gwen and Barb were tense waiting for what they considered to be an inevitable rant about liberals in the pulpit.\n\nAfter we were served, the old guy looked at me and said, \"What do you think about that minister?\"\n\nI said, \"I think he's a smart guy and he's well educated.\"\n\nGwen's dad nodded and said, \"I think so.\"\n\nBarb expelled a sigh of relief and Gwen looked heavenward and said, \"Thank you, God.\"\n\nThen, the old man just blew us away as he talked about the sermon during which the minister, by explaining how the original Greek words in this morning's Scripture, changed the meaning of the verses and how much clearer the writer's intent became when the contemporary meaning of the English words were set aside and were replaced with the meaning affixed to Greek words in the first century.\n\nIt was clear that the old man was enthralled with what he'd learned that morning. He wanted to know where someone could learn that and Gwen explained that it could be learned in college, but more likely in a divinity school or seminary.\n\nFor the first time in his life, the old guy asked Gwen what she taught. Gwen explained that, right now, she taught mostly statistics and her dad asked if that was like baseball averages. Gwen indicated that some of baseball's numerical indices were statistics, but she also explained how statistics were used in marketing, in production, in finance, in medicine, in psychology, in schools and so forth.\n\nThe old guy didn't forget to eat, but he ate a lot slower this afternoon than he had last evening. He was intent: he had focus. He also elicited a lot of smiles from us when he announced, \"You guys are fun. You don't just bitch about things. You do stuff.\"\n\nAfter lunch Barb took Grandpa to buy some pants and shirts and maybe a jacket and they returned from Wal-Mart with clothes that really fit. The old guy was amazed and he proudly pointed out that Barb was so smart that she took him to the Boys' clothing section instead of the Men's and that was why his clothes fit properly. He was tickled. Then he proudly held up the Wal-Mart bag and said, \"Sam Wall -- a real American. If you want to buy American, go to Sam Wall's.\"\n\nI laughed and was ready to ask him to check the labels when both Barb and Gwen yelled, \"Willlll!\"\n\nI looked at Barb and said, \"You're even starting to sound like your mother.\"\n\nPops played with the cats for a while and then announced that it was time for his flight home so we bundled him into the car and took him to the airport. We took him inside to the security area and watched him assault the area like it was beach landing. He managed to get into an argument with every security officer he encountered and the last we heard of him was a shouted, \"Commie bastard!\"\n\nGwen and Barb collapsed into each other's arms in relief.\n\nI, myself, just let out a huge sigh and said nothing. Gwen looked at me and asked, \"Is something wrong?\"\n\n\"No,\" I smiled, \"I was just comparing my life pre and post-you. Before you I led a well-ordered, restrained, predictable, quiet life and since you, everything in life is an adventure.\"\n\nGwen's response was, \"Old Man, you needed a little spice in your life.\"\n\nMy response was, \"I wonder what you consider a lot.\"\n\nGwen grabbed one hand and Barb the other and we marched out of the airport to the car. On the way, Barb said, \"Will, you're a neat old guy. It's a shame you couldn't rebound.\"\n\nGwen laughed. I didn't.\n\nWhen we got home Barb announced that she was staying the night and would miss her Monday morning classes. Gwen quickly disabused Barb of that idea and a grumbling Barb packed her things and headed back to college.\n\nI said that I had to unwind and would watch the Celtics and Heat game. Gwen said she'd join me. Warning bells started jangling in my head because Gwen cared as much about basketball as I did about the mating habits of the Gila monster.\n\nSprawled on the couch I turned on the TV and settled back. Gwen lay on her tummy with her head on my thigh. Give her credit, she did watch for at least three minutes before she unzipped my fly and started rooting around saying \"Ivan? Ivan? Come out, come out, wherever you are.\"\n\nI impassively watched the game.\n\nGwen exclaimed, \"There you are, you bad boy. Oh my, what a big boy you are.\"\n\nI impassively watched the game.\n\nNext, I felt a very warm and wet mouth close around my cock followed by a gentle sucking.\n\nI, none too impassively, continued to watch the game.\n\nWhen Gwen had me fully erect, she said to Ivan, \"Be a good boy and I'll be right back.\"\n\nAs I watched the game I could see her peripherally removing all her clothes.\n\nOnce naked she sidled up to my left side and grasped Ivan and said softly, \"This is a good game. You can keep watching and I'll just slip my nipple into your mouth and you can suck every time someone makes a basket.\"\n\nWe did that for a while as I used every ounce of endurance I had not to burst out laughing.\n\nAfter a few minutes of this Gwen grabbed my left hand and pulled it to her pussy and told me not to take my eyes off the game, but to slide a finger into her little volcano. She grabbed my wrist and started sliding onto and off of my finger saying, \"I'm glad this game is giving you a chance to unwind.\"\n\nWhere I found the strength not to burst out laughing I don't know. I do know that my face was contorted into series of grotesque masques as I struggled to look at the TV.\n\nAfter a few minutes Gwen said, \"I know I won't disturb your concentration by sitting on Ivan because you're so tall and I'm so short you can just look over my shoulder and not miss a second of this exciting action.\"\n\nShe then climbed aboard me and positioned Ivan at the entrance of her pussy. She stayed there for a few seconds remarking, \"When have you ever seen two such evenly matched teams?\"\n\nWith that, she rapidly slid down and then up and down and up and down my cock. I erupted into laughter and looked at Gwen who stuck out her tongue at me and said, \"You still let me get away with murder, don't you Old Man?\"\n\nI had no answer for the little vixen. Or, if I did, it was to wrap my arms around her while she wrapped her hands around my face as she accelerated her piston action on my cock. We stared, in wonder, at each other and then we smiled and kissed.\n\nThe kiss triggered the little Princess into action and she pumped faster and faster up and down my cock until we were both groaning. I lost myself in Gwen although I do remember bellowing as I emptied myself into her. \n\nWe collapsed. I fell backwards onto the couch back and Gwen fell onto my chest. We decompressed for a long time and I finally spoke: \"If you leaked all over this couch, you're going to clean it up.\"\n\nGwen giggled and said, \"The pretty Princess is simply exhausted and must be carried to her bed. The older gentleman can return and clean the couch.\" \n\nGroaning, I got up and carried the Princess to the bed, but she diverted me to the potty, first, and then to bed. As I laid her on the bed she whispered, \"Hurry back.\"\n\nI checked the couch and was delighted to discover that the little volcano hadn't erupted onto the fabric so I turned off the TV and prepared for bed. When I got into bed Gwen climbed on top of me and said, \"Tomorrow is Monday. I can't wait to see what the new week brings.\"\n\nMy response was, \"I certainly can wait.\"\n\n//\n\nChapter 4 is dependent upon your feedback. "
    ],
    "authorname": "Bedu",
    "tags": [
        "older man",
        "younger woman",
        "gwen",
        "will",
        "academic",
        "princess",
        "may-december romance",
        "age difference"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/at-long-last-gwen-ch-03"
}