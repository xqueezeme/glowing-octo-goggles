{
    "title": "Big in Japan Ch. 05",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racism, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nNote: if you try any of the whiskeys discussed in this story, please drink responsibly.\n\n***\n\nPart 27 - Attack and Reprisal (continued)\n\n*WHAM!*\n\nThe perp face-planted on the playground soil. Seven-year-old Carole Troy had grabbed one of his legs, tripping him up.\n\n\"Run, Tasha!\" Carole yelled as she got up. Tasha ran as fast as she could towards her mother and Laura, who were running up themselves. But Carole did not run. Instead she ran up and began stabbing her fingers at the man's eyes as he turned over and tried to get up, and she connected a couple of times.\n\n\"AAAUGH!\" the man screamed in pain. \"You little bitch! I'll kill you!\" As he started to get up, Carole chose discretion over further valor, and took off running for her mother.\n\n\"Bitch!\" the perp yelled, his eye still in pain and beginning to swell. But he did not get far. The three TCPD Officers had come up. Patrolman Wagner tackled him again, and Patrolman Buchannan put a knee into his shoulder blade (no, not his neck) to keep him down as Sergeant Carter helped Wagner affix handcuffs to the man.\n\n\"We got him, ma'am.\" said Buchannan to Laura as they bodily picked the man up off the ground. Tasha had been picked up by her mother Paulina, but was now squirming to get down.\n\n\"That was a great tackle, Carole.\" said Sergeant Carter. \"You saved your sister's life.\"\n\n\"Thank you, Sar-gent Car-ter.\" Carole said politely, having observed Carter's name tag as well as the Sergeant stripes on the arm of his Uniform shirt.\n\n\"Thank you, guys.\" Laura said. \"We'll go to the Police HQ infirmary. I'm going to make sure Carole wasn't injured, then we'll make our statements.\"\n\n\"Sure thing.\" said Carter. He then went over and bagged as evidence the knife the perp had dropped.\n\n* * * * * * * * * * * * * *\n\nThe Officers roughly dragged the man the other way, around the side of the school where the perp had appeared. Seeing a shady spot on the side of the building that looked obscure and private, Buchannan said \"Stop here.\"\n\nThey stopped and Buchannan slammed the man against the wall. \"Oh, so it's like that, huh?\" he said, getting in the perp's face. \"You gonna try to kill a little black girl? Huh? So that's what it's come to?\"\n\n\"She ain't black!\" the man snarled. \"She's a fucking halfbreed! And you're just a fucking Uncle Tom!\" He spit at Buchannan, hitting the Officer right on the word 'POLICE' on Buchannan's armor.\n\n*WHUMP!*\n\nBuchannan bunched his large fist and slammed it into the man's ribs. The perp bent over, coughing.\n\n\"Hold this nigga up.\" Buchannan said. He drew back and drove his arm upward, smashing his fist into the man's ribs.\n\n\"UHH!\" the man gasped. Another blow to the solar plexus, and the man went limp in the Officers's arms, and began retching.\n\n*WHAM!*\n\nBuchannan drove his fist into the side of the man's face, boxing his ear. Then another haymaker to the other side of his head. The other Officers pulled the perp up, and Buchannan smashed him in the nose.\n\n\"Pol...ice... bru.. tali...ty...\" the man gasped weakly.\n\n\"Shoulda thought of that before you spit on me, punk.\" Buchannan said. \"And this ain't shit. Wait until the Iron Crowbar gets a hold of yo ass for trying to murder his daughter...\"\n\nAfter several more punishing blows to the perp's body and head, Sergeant Carter said \"Okay, that's enough. Let's get him to County Jail.\" They turned and began half-walking, half-dragging the man to Buchannan's Patrol cruiser. As they got up to it, they looked up to see a KXTC van, and the cameraman filming them.\n\n\"Oh, crap.\" said Wagner, realizing that KXTC had just filmed a TCPD Officer exercising a beatdown of a suspect in their custody...\n\nPart 28 - Repercussions\n\nLaura and Paulina had brought Carole and Tasha to Police Headquarters, where Laura examined Carole most very thoroughly for injuries.\n\n\"It doesn't hurt anywhere, Mommy.\" Carole protested as Laura looked her over.\n\n\"Now Carole,\" Laura said, \"you tackled a man much large and heavier than you. Just his leg running into you could injure you. Now is not the time to be a hero and pretend you're not feeling pain if you are.\"\n\n\"I'm not, Mommy.\" Carole said. Still, Laura checked her for concussion, prodded and probed Carole's ribs and abdomen and back to see if Carole reacted in pain, then made Carole put her arms up like she was blocking someone in a football game, and turn from side to side.\n\n\"You're not feeling any pain at all?\" Laura asked yet again.\n\n\"No, Mommy.\" Carole said.\n\nLaura also checked out Tasha, talking to her and asking her questions. But it was more than just a physical exam; it was a subtle psychological exam, being executed by one of the very best psychiatrists in the Nation.\n\n\"I was scared at first,\" Tasha said, \"but after Carole made the man fall down and I could run away, I wasn't as scared.\"\n\n\"You did very well.\" Paulina said reassuringly. \"And Carole, you were very brave. Thank you for saving Tasha.\"\n\n\"You don't have to thank me, Aunt Paulina.\" Carole said. \"Tasha is my sis-ter, and I'm a Po-leece Off-i-sirrr now.\"\n\nPaulina hugged Carole warmly, trying not to break down crying. Laura looked much less amused...\n\n* * * * * * * * * * * * * *\n\nThe KXTC van hurtled into the parking lot of KXTC's headquarters. Reporter Pat Stellum and his cameraman grabbed their stuff and rushed inside. The cameraman hurried to the A/V editing room while Stellum ran to the 'city room', the large open area where the reporters's desks were.\n\nPat Stellum was white, short, and getting(?) overweight. He had black hair that clearly revealed the large bald spot on top of his head, which literally shone if television pancake makeup was not applied.\n\n\"We've got 'em!\" he yelled as he rushed into the 'city room'. \"We've got TCPD cops beating up a black man!\" The reporters all cheered.\n\n\"What happened?\" asked a 'cub reporter.\n\n\"We were at Eastside Elementary, where we were told to go.\" said Stellum. \"Apparently something happened behind the school, in the playground. The cops arrested a guy, but when they brought him around the side, thinking they couldn't be seen, one of them started just beating the shit out of the guy, who was handcuffed and in custody.\"\n\n\"What's the full story?\" asked Carl Lemay. Lemay was black, articulate, looked good in a suit, and had recently been hired as Lester 'Penis' Holder's replacement as KXTC's 'Reporter of Color'. \"Why was that guy arrested? What happened behind the school?\"\n\n\"After we heard all the commotion on the Police radios, we got the footage from the school's cameras while you were coming back here.\" said the blonde reporterette Martha Faulkner. \"That perp attacked a little girl with a knife. Fortunately, the guy tripped and face-planted, and the girl got away and was able to get to her mother.\"\n\n\"It would've been nice,\" said a voice coming from the office areas, \"if you'd actually gotten some film footage of that.\" The voice revealed itself to be Bettina Wurtzburg, Executive Publisher and Managing Editor of KXTC Channel Two News.\n\n\"Ma'am,\" said Stellum, \"we did what we were told. We parked on the street and waited for something to happen. And we got the cops beating up a black man in their custody!\"\n\n\"Anyone know who the little girl is?\" asked Carl Lemay, redirecting the flow of the conversation.\n\n\"Oh yes.\" said Bettina Wurtzburg. \"Tasha Troy-Patterson, ADA Paulina Patterson's daughter.\" Pat Stellum looked around as the pall of silence suddenly enveloped the room.\n\n\"What?\" Stellum asked.\n\n\"You're new here.\" Bettina said. \"So you may not know that Tasha is also the daughter of Police Commander Donald Troy... the Iron Crowbar. And Tasha is the little girl that our colleague Lester Holder kept calling a 'halfbreed', which I can't prove but personally believe led to our colleague's death. In any case, Pat, come with me. Let's review your footage and the school-cam footage...\"\n\n* * * * * * * * * * * * * *\n\nUpon being called by Laura, I rushed down to Police Headquarters. I noticed that KXTC was manning cameras on the roof of the building at Riverside and College, and also at ground level across Riverside Drive from Headquarters... all cameras pointing at Police Headquarters and the parking lot. Now how did they hear about this so quickly? I wondered to myself. And what the hell are they up to?\n\nI parked and rushed inside. I almost made it to the door of the anteroom to my office when Tasha rushed around the corner of the hallway and headlong into my legs. I picked her up and got a very strong hug.\n\n\"Daddy,\" Tasha said, trying not to cry, \"a bad man tried to hurt me.\"\n\n\"I know, Little Love.\" I said. \"It's all right now. We've got the bad man in jail.\"\n\n\"And Carole saved my life by tackling the bad man.\" Tasha said. \"I was scared and ran, but she didn't. I'm sorry I was scared and ran.\" Uh oh, I thought to myself.\n\n\"That's okay.\" I said. \"You did what you were supposed to.\" I carried her into my office as Paulina, Laura, and Carole came down the hallway, and sat Tasha down on my desk.\n\n\"Tasha,\" I said, sitting down in my chair, \"what happens when you've seen Buddy or Bowser go after one of Tiger Mom's kittens? What does the little kitten do?\"\n\n\"Runs away to its mommy.\" Tasha said.\n\n\"Yes.\" I said. \"And what does Tiger Mom do?\"\n\n\"She swats Buddy and Bowser on their noses.\" Tasha said.\n\n\"And so do the kitten's bigger brothers and sisters.\" added Carole helpfully, seeing where I was going with this (I think).\n\n\"That's right.\" I said. \"So you did what little kids and kittens are supposed to do... you ran for your mom. Your big sister and your mom and Aunt Laura helped you escape the bad man.\"\n\n\"As did your Officers.\" said Paulina. \"I'm glad they got there before that madman went after all of us.\"\n\nI nodded, then said \"So, Tasha, you did the right thing, and it's okay that you felt scared when you were in danger, okay?\"\n\n\"Okay, Daddy.\" said Tasha. She gave me another big hug and I hugged her back.\n\n\"C'mere Fussbudget, so I can hug you, too.\" I said. Carole came around the desk and I gave her a big hug, too...\n\n* * * * * * * * * * * * * *\n\nBettina Wurtzburg, Pat Stellum, and Carl Lemay sat in Bettina's office, reviewing the KXTC camera footage as well as the school camera footage, which was grainy and of poor quality.\n\n\"I really wish you'd gotten footage of the attack on the girl.\" said Bettina, her voice denoting her clear derision.\n\n\"Ma'am,\" said Stellum, his voice connoting his own exasperation, \"I did exactly what the City Room email said to do: we parked across the street, and watched to see if anything happened.\"\n\n\"Who sent that email?\" Bettina asked.\n\n\"It was the City Room's official email account.\" said Stellum.\n\n\"Oh, geez.\" Bettina said. \"Over twenty people have access to that account, and it could have been any one of them. All right, it's good you got this, Stellum... but we can't use a bit of it.\"\n\n\"Whaa?\" Stellum and Lemay both said simultaneously. Then Lemay said, \"Why not, ma'am?\"\n\n\"Take a look at that footage again.\" Bettina said. \"Go ahead, replay it.\" They replayed it.\n\n\"I don't see the problem.\" said Stellum. \"I see three TCPD Pigs beating the living shit out of a black man. Why isn't that news?\"\n\n\"That's not what I see.\" Bettina said flatly.\n\n\"Ohhh, I get it.\" said Carl Lemay, somewhat sadly. \"The cops are all black.\"\n\n\"That's right.\" said Bettina. \"If even one of those cops was white, we'd have the story of the decade, and you'd be getting a Pulitzer for getting that story. But they're all black.\"\n\n\"So what?\" said Stellum. \"They're cops! People will see that first.\"\n\n\"Stellum,\" said Bettina, \"you're just not getting it. You're making me say it out loud, so I will: it does not fit the Media's narrative to show black cops beating up anyone at all. The narrative is to show white cops exercising brutality against blacks. Ergo, Stellum, this video footage does us no good whatsoever.\"\n\n\"That's right!\" said a voice. They turned to see State Senator Katherine Woodburn, owner of KXTC, come into the room and shut the door behind her. Bettina saw both men admiring Katherine's gorgeous, shapely legs, and as always, Bettina felt jealous of the better-looking Katherine.\n\nKatherine said: \"Bettina's right, we can't use that. And we won't. Bury it. Bury it deep.\"\n\n\"I... I don't understand!\" said Pat Stellum, frustrated beyond belief that his big break was being buried like that. \"This is Commander Troy's cops beating up a restrained black man! The only thing better------ I mean 'worse', is that if the man had died.\"\n\nKatherine said \"Pat, let me ask you a question: do you want Eldrick X. Weaver to beat that illegitimate piece of crap Allgood for the Mayor's post? Do you want Bruce Finneran to beat Curly Goodwin for the I.G. post, and the enormous ramifications that will have for Donald Troy and the TCPD?\"\n\n\"Of course I do!\" Stellum said. \"And this will help them win!\"\n\n\"If you want Daniel Allgood to win,\" Katherine said, \"just show that footage on the news. Go ahead, I won't stop you.\"\n\n\"I will.\" said Bettina. \"I agree with Katherine, guys. Showing this would undermine everything we've done. It would make Lester Holder's death meaningless. It might even get Katina Jones elected over Edgar Silas. No, guys, we're burying this. Katherine, what about a story on the attack on Paulina's little troll?\"\n\n\"That's a tougher one.\" said Katherine. \"We can hold off until Monday morning, and see how things play out.\"\n\n\"If you will excuse me...\" said Stellum. He got up and left the room...\n\n* * * * * * * * * * * * * *\n\n2:00pm, Saturday, September 19th. I went into Classroom 'E'. Lt. Jerome Davis, Lt. Mary Milton, Detective Sergeant Julia Rodriguez, Senior Detectives Theo Washington Detective George Newman, Sr. Patrol Officer Penny Scott, and Auxiliary Officer Terry Halston were already there.\n\n\"All right, guys, whaddya got?:\" I asked.\n\nThe perp's name is Tommy John... yes, like the name of the baseball player and the surgery.\" said Penny Scott. \"Tommy has a long rap sheet of petty thefts, assaults, mostly bar fights, one count of sexual battery, and was arrested for partaking in the Juneteenth demonstrations at the Courthouse, but somehow fell through the cracks and was released with a lot of others.\"\n\n\"And I dug a little deeper,\" Mary Milton said, \"and found that he had been flagged to be held, but that somehow got reversed and he was let go. I'm still digging into who hacked into us and did that.\"\n\n\"Interesting.\" I said, mostly to myself. \"Anyone talked to him yet?\"\n\n\"Yes sir.\" said Theo Washington. \"George (Newman) and I went to County Jail and talked to him. He said this before he lawyered up. As Bettina says, 'Roll tape!'.\"\n\nTape rolled, showing Tommy John saying \"Yeah, I was trying to kill that worthless little halfbreed! Why? Ain't it obvious? After that racist Iron Crowbar and that hanky headed house negro ho put Breonna Bryant away for the rest of her life, her daddy said he wanted the Cracker to feel the same pain of having his daughter taken from him! That was the least I could do for him and all Parents of Color that have had their children taken away by racist white cops!\"\n\n\"So,\" Theo said, \"you did it because Breonna Bryant's father said he wanted the Iron Crowbar's daughter to be taken away from her father, is that right?\"\n\n\"You bet it is! you fucking Uncle Tom Pig!\" John yelled, his body shaking with fury.\n\nBack to live time in Classroom 'E': I said \" 'Parents of Color', eh. Sound like he was coached to say that. Sounds like some flowery line that Leftwing academicians and their allies of the Mainstream Media would say to create a sound bite.\"\n\n\"I agree, sir.\" said Theo, practicing good asskissing skills. \"This guy Tommy John, he ain't the sharpest tool in the shed. Judging by his rap sheet, he can be easily convinced of things. That sexual assault charge wasn't worse because he kept saying the woman he allegedly raped led him on and enticed him to make a sexual move on her, then accused him of rape only afterwards. Also, word has it that he's one of Stacey Jacobs's 'enforcers', the equivalent of T-Square's 'Regiment'.\"\n\n\"He's definitely been 'radicalized'.\" said Jerome Davis.\n\n\"More like 'brainwashed'.\" said Mary Milton. I pointed at her and nodded vigorously in agreement...\n\n* * * * * * * * * * * * * *\n\n4:00pm, Saturday, September 19th. Detectives Theo Washington and George Newman (both black) were in Interrogation-1 at County Jail. Opposite them were Tommy John and his attorney, H.J. Lynch of the rabidly anti-Police Chase, Lynch & Berry law firm.\n\n\"As your Commander likes to say, 'Let's watch some TV!'.\" said Lynch with barely suppressed excitement. He pulled out his tablet and brought up the video. It was KXTC's coverage of the beating Tommy John had taken from Officer Buchannan earlier.\n\n\"You might as well drop the charges now.\" said Lynch. \"That won't stop my lawsuit against you, nor the US DOJ's lawsuit and forcing a Consent Decree on you, of course.\" As he stood up, he said \"Come on, let's go.\"\n\n\"Your client is not going anywhere.\" said Theo. \"He's charged with attempted first degree murder with the aggravating circumstance that the victim is a minor child, as well as making terroristic threats and assaulting a Police Officer-------\"\n\n\"Are you kidding?!?!\" Lynch yelled, his face nearly purple with apoplectic fury. \"Your cops beat the hell out of my client, he can't even open his eye, and you're going to even try to charge him with assaulting a Police Officer? You bastards are outrageous?\"\n\n\"He spit on a Police Officer.\" said Theo. \"By the way, he got those injuries when his intended victim's sister tackled him and he went down hard on his face, then she poked him in the eye to stop his murderous assault. We have her sworn affidavit on that. As to that video? Looks like it was staged by KXTC... just how did they know to be right there at that time. It's almost like... KXTC knew in advance that your client was going to try to kill Commander Troy's daughter.\"\n\nIt really looked like Lynch was going to have a heart attack. \"You... you... you'll never prove that!\"\n\n\"I think we have a solid if circumstantial case,\" said George Newman, \"and maybe you should tell your buddies at KXTC that. As to getting the charges dropped.. I'm sure Judge Harry Nance will eagerly drop the charges... and then your client will be released. And like my fellow Detective here said, the little girl your client tried to kill... is the Iron Crowbar's daughter.\"\n\n\"Is that a threat?\" Lynch snarled.\n\n\"You tell me.\" said Theo. \"But think about it, Tommy. You walk out of here after trying to kill the Iron Crowbar's daughter... and if Commander Troy doesn't get to you, whoever set you up to do that is going to want you silenced. That's not a threat, just an honest evaluation of your chances to live.\"\n\nGeorge Newman said \"Orrrrr... you take a generous plea deal from the District Attorney, agree not to sue, and it's ten years max with possibility of parole.\"",
        "\"Whose side are you ON, Black Man?!\" yelled Tommy John.\n\n\"I know I'm not on the side of a crowbar beatdown... brother.\" Newman said.\n\n\"I need to talk to my client alone.\" said H.J. Lynch.\n\n* * * * * * * * * * * * * *\n\n4:40pm. Officer Kevin Buchannan and I walked into the Chief's office, wearing our Duty Dress jackets over our uniforms. Buchannan came to attention in front of the desk. \"I submit myself for disciplinary action, Chief.\"\n\n\"Yezzzz.\" drawled the Chief. He looked up at Buchannan and said \"Don't ever do that again. A note of this verbal reprimand will appear in your unit personnel file. Dismissed.\"\n\nBuchannan was stunned, and I literally had to take him by the arm and walk him out of the office. Once back in my office, he said \"What was that, sir?\"\n\n\"That...\" I said, standing next to him, \"was a Police Chief covering his and the Police Force's ass. You've been verbally reprimanded, if the Press asks.. and we expect they will. Say nothing more of this, take the Fifth if the Feds try to question you, and drive on with the TCPD mission. Dismissed.\"\n\n\"Uh, thank you sir.\" said Buchannan.\n\nAs he turned to go, I said \"Kevin... thank you.\" He knew what I meant.\n\n\"It's all good, sir.\" Buchannan said. \"And after you and your wife saved my baby and stood by us, I owed you.\"\n\n\"And you were there to save my daughter's life.' I replied. \"I owed you back; hence, the verbal reprimand. But the slate never wipes clean; I will not forget what you did for me and my family today.\"\n\n\"Thank you sir.\" he said. Our handshake turned into a full hug...\n\nPart 29 - Issues and Answers (Solution)\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded MILF reporterette at 7:00am, Monday, September 21st, from the roof of the building at Riverside and College. \"Breonna Bryant's father arrested by the Police over the weekend!\"\n\nBettina began: \"In a related incident this weekend, a man identified as 'Tommy John' attacked ADA Paulina Patterson's daughter Tasha on the playground of Eastside Elementary School.\" The school's video was shown, which was grainy and distant as Bettina continued: \"The man was armed with a knife, but was subdued and arrested before he reached the child.\"\n\nBettina: \"During interrogation by the Police, Mr. John admitted that he attacked the child after hearing Breonna Bryant's father calling for Commander Donald Troy's daughter to be taken away from him. Roll tape.\" Tape rolled, first showing the perp Tommy John giving his reason for attacking Tasha, followed by Bryant's father making those threats.\n\nBettina: \"The District Attorney's Office, where the victim's mother Paulina Patterson is employed as an Assistant D.A., swore out a warrant for Mr. Bryant's arrest, charging him with felony making terroristic threats and inciting a criminal act. He reached a plea deal, whereby he avoids jail time in exchange for making this public statement. Roll tape.\"\n\nTape rolled, showing Bryant saying \"I made a statement in my grief and anger over the unjust verdict against my daughter. While I did not intend for those words to be acted upon in a violent or murderous way, apparently someone did try to harm that child, who can't help it that she's Donald Troy's daughter. I appeal to all Persons of Color to not resort to vindictive crimes in retaliation for the unjust verdict by a Jury that did not have a single Person of Color on it.\"\n\nBack to Bettina live: \"Tommy John also took a plea deal, accepting a ten year prison sentence with the possibility for parole. And now let's go to Jeff Hull for Sports. Jeff!\"\n\n\"That's right, Bettina!\" said Jeff Hull, shown with University Memorial Stadium behind him. \"The Bulldogs will be playing Eastern State this weekend in what is becoming a hotly contested regional rivalry. Meanwhile, the Wildcats host Protestant. But the big game of the week nationally will be in Baton Rouge, Louisiana, as Auburn travels to LSU in a battle of Top-Ten Tigers in a game that could decide the SEC West...\"\n\n* * * * * * * * * * * * * *\n\n\"Wowwww...\" said Lt. Commander Teresa Croyle. \"Not one word about those guys beating the shit out of that perp.\" She looked around at our faces, then said \"Okay, what am I missing here?\"\n\nShe, Sheriff Griswold, Chief Moynahan, Commander Cindy Ross and myself were drinking coffee in the Chief's Conference Room. The Chief had invited us to watch together because we'd expected to get hit with it, and we were going to discuss our response.\n\n\"First,\" I said, \"they're just following the example of the National Mainstream Media. When a black Police Officer in Wilmington, Delaware beat the living crap out of someone, and his partner, also black, did nothing but laugh, the Mainstream Media buried it. Not one word, because it didn't fit their narrative. Methinks we're seeing the same thing here: it does not fit the Media narrative of white Police brutality to show black Officers beating down a black suspect.\"\n\n\"That's true.\" said the Sheriff before I could continue. \"My sources, mostly the Governor himself, told me that the Hoyt Stenson Campaign asked Katherine Woodburn to have KXTC bury the story, and so did people close to Eldrick X. Weaver. If this had been April or May, they might've mentioned it, but it's full-bore Election Season now.\"\n\nCindy said \"My source (Priya) told me that all the Media had been asked to bury it, partly because it was Tasha that was attacked, and the Media's political allies don't want people sympathetic to you, Don, nor to Paulina.\"\n\nI said \"That could well be. But there's a second reason, that I doubt many people know about. It is possible that someone asked Katherine Woodburn how KXTC knew to have a van right there at Eastside Elementary while my family was there. And he asked her why they didn't go to the playground to film, but stayed off school grounds and just happened to be well-positioned to get footage of our Officers taking the perp away. Katherine had no answer, and she got the hint, too: if KXTC had raised crap, I was going to raise crap.\"\n\n\"Wow, I didn't even think of that.\" said Chief Moynahan. \"And yezzz, now that you mention it, that has to be beyond co-in-ci-dennnnnce. So was that attack arranged by KXTC?\"\n\n\"Not directly, or else they would've had a camera at the playground to get the 'scoop' on it.\" I replied. \"But I think they were told something would happen, maybe they were hoping I'd be there and would be the one that administered retribution, or that it would be white Officers that were at the scene. No joy on that, though.\"\n\nI continued: \"But to answer your question, Tommy John has ties to Stacey Jacobs, who has ties to the odious Lionel Carmela, who was arrested for almost assaulting my other daughter. Connect. Those. Dots.\" (Author's note: 'Jupiter Rising', Ch. 01-02.)\n\nAnd while I didn't mention it, astute Detectives will realize that it was no coincidence that the Officers sent to Eastside, who had volunteered for the duty, were all black...\n\n*Whirrrrrrrrrrr*\n\n*KNOCK!* *KNOCK!* *KNOCK!*\n\nThe door opened to reveal Captain Tanya P. Muscone. \"Sorry to interrupt, guys,\" she said, \"but Federal Agents want to meet with us here, at 8:00am. I'm not sure what it's about, but Jack said it was a 'BFD'...\"\n\n* * * * * * * * * * * * * *\n\n8:00am, Monday, September 21. Federal Agents Karina White, Nancy Harding, Dwight Stevens, Eduardo Escobar, Lindy Linares, Julius Jefferson, and Juan Alberto Morales came into Classroom 'E'. To my surprise, Kevin Pitts was in the group, as was EAD Owen Lange. But the biggest surprise of all was Jack Muscone's presence.\n\nRepresenting the TCPD was the Sheriff, Chief, Deputy Chief, Police Commander, Operations Commander, and Captain of Detectives.\n\n\"Sorry, Cindy,\" said Owen Lange in his scratchy voice, \"but Tim Jenkins is in Southport. He and Crenshaw are taking care of some things for me.\" Cindy nodded. Owen Lange then said: \"Commander Croyle, has your cousin Jen Sakai tried to contact you recently?\"\n\n\"No sir, not recently and not at any time.\" Teresa said. \"We haven't communicated since I met her in Louisiana months ago.\"\n\n\"Okay, good.\" said Owen Lange. \"It's important that if she does try to contact you, that you contact me, Jack Muscone, or Karina White. Her life may be in danger.\"\n\n\"No doubt.\" I said. \"Why don't you tell us what it's about.\"\n\n\"Sure.\" said Owen Lange. \"As you know, we were tracking a smuggling operation in Texas, and we believed Jen Sakai was running it. Well, there is a smuggling operation, and we're about to close it out.\"\n\nOwen Lange: \"You also may have noticed that Lindsey Black came down to this County with Martin Nash. Yes, Agent Pitts here also came down with them, but you can see that he is sitting here at my invitation, while Lindsey Black is not. And that's to show all of you that Agent Pitts is worthy of our trust, while Lindsey Black is not.\" I bit my tongue to stifle a biting reply. Teresa did not.\n\n\"Nor is Martin Nash.\" the Iron Wolf said with alacrity.\n\n\"No ma'am, he's not dirty.\" said Kevin Pitts. \"Not like Lindsey Black is. Nash is the perfect OPR guy; almost too clean for his own good.\"\n\n\"Let's just work from our point of agreement.\" I said. \"Lindsey Black is a Swamp Frog, and her loyalties are to them, rather than to the Nation or whatever Federal agency she pretends to be working for at any given moment.\"\n\nI continued: \"And with all due respect, EAD Lange, allow me to tell you what you're taking way too much of our time telling us: Jen Sakai has come here, to our Town & County, and she is doing so to avoid being murdered elsewhere by Lindsey Black and her fellow Swamp Frogs.\"\n\n\"Oh my God.\" Owen Lange said quietly. \"You do know.\"\n\n\"Yes.\" I said. \"Just as I know that part of this whole operation in Texas is to try to expose the Swamp Frogs so you can go after them. But I have to tell you now that they know that you know, and they're just trying to set a trap for you, and us.\"\n\n\"How do you know all this?\" asked ATF Agent Nancy Harding, her voice more than skeptical... it was outright hostile.\n\n\"I've had the good fortune to be in the unique position to learn some things most of you haven't, and won't, at least not from the same sources.\" I said. \"Shall I tell you all what's really going on, and you just correct me where I go astray?\"\n\n\"I suspect we won't even know if you do go astray.\" said Owen Lange. \"So go ahead.\"\n\nI observed the Green Crowbar's ice-blue eyes sparkling as I started: \"You've been right about one thing: Jen Sakai is a spy for the Communist government in Beijing, and has been for a long time. Her husband was a Japanese subject, but also a spy for Red China, though not a particularly good one.\"\n\nYour Iron Crowbar: \"And here's the rub, that I'm not sure you guys knew about: Easton Windham was recruited by Jen Sakai, and became a spy for the Red Chinese. He was working with Jen, using the assets of the oil company he worked for to smuggle drugs into America. There was a James Bond movie about dissolving drugs in gasoline to smuggle into the country, and he was doing something similar.\"\n\nYour Iron Crowbar: \"And here's the further rub: Weston Windham was also a spy.. for the United States of America. He was recruited by someone in the CIA, whose name I cannot mention here. He was trying to work his way into Jen's organization, and may have been succeeding when he was ratted out... by his own brother, Easton.\"\n\nYour Iron Crowbar: \"Easton saw Weston and recognized who he was before Weston saw Easton. A plane 'accident' (air quotes) was arranged for Weston, killing him and his wife. The only thing I don't know is if Jen Sakai was knowledgeable or a part of that murder, but Easton had his brother killed.\"\n\n\"But I digress.\" I said. \"What you need to know in the here and now is that certain Swamp Frogs believe that being in their positions of Federal power means they can use that power for their personal enrichment as well as to control others. That's why one of the dirtiest Swamp Frogs went after Teresa, to try to grab her part of the Belvedere family fortune, that she subsequently gave to the Hospital.\"\n\nYour Iron Crowbar: \"He also was involved in the CHICAGO SPICE drug operations you guys had to shut down, and enriched himself by taking DEA drugs out of warehouses, selling them, and putting the money into his own pockets.\" (Author's note: 'Sugar and Spice'.) \"As a high-level member of the Intelligence Community, he knew who Jen Sakai and her gang were, but rather than do the right thing and bust them up, he essentially blackmailed them and took a share of the profits.\"\n\nYour Iron Crowbar: \"So yes, you Federal Agents have been trying to work Jen Sakai, and get her to turn to our side... not knowing that your own Intelligence Community was working against you. But Jen now knows the heat is on, and that if she's captured alive by the wrong Agents, she'll be murdered to silence her voice. Ergo, she's coming here, because she knows that Teresa and I are her only hope to live.\"\n\nYou coulda heard a pin drop in the utterly silent room for a full 30 seconds. Finally, it was Jack Muscone who said \"I can understand her trying to reach Teresa, but why you?\"\n\n\"Because she knows something that none of you do.\" I said. \"Something Teresa doesn't know, either. And you're just going to have to trust me, or not, when I say that I cannot and will not reveal that information.\"\n\n\"No, you shouldn't reveal it.\" Cindy said. I looked over at her, realizing she was 'hinting' that she also knew those secrets, and I knew how and from where she'd learned them.\n\n\"I agree. Don't say any more.\" said EAD Owen Lange, who did not even flicker an eyelash. \"And I'll just tell all of you that it's something at security levels and pay grades much, much higher than anyone in this room's.\"\n\n\"Okay, I'll go along with that.\" said Jack Muscone skeptically. \"But it sounds like our plans are blown. So what do we do now?\"\n\n\"I say we continue the plan we came up here to execute.\" said ATF Agent Nancy Harding. \"We find Jen Sakai, we arrest her, and we find out what she knows.\"\n\n\"And then you'll kill her?\" Teresa said venomously.\n\nHarding looked at the Iron Wolf with reptilian eyes, and said \"She's a traitor and a spy. We put spies to death.\"\n\n\"Well, well, well.\" I said, staring hard at Agent Nancy Harding. \"Your plan has worked, Mister Lange. I believe we've found our mole for the Swamp Frogs.\"\n\n\"Whaa?\" said Karina White. \"No! Come on, Don, I've known Nancy for years. She's a good Agent.\"\n\n\"She may be.\" I said. \"But how many years has it been since you've worked with her... closely with her?\"\n\n\"You son of a b------\" Nancy Harding said, standing up, her hand slowly going to her belt line. Teresa also stood up, and her service weapon was in her hand and almost all the way out of its holster.\n\n\"What the hell?\" Nancy Harding gasped. \"You're pulling a gun on a Federal Agent?\"\n\n\"I'm not going to allow another 'Dominic Ellis' incident.\" Teresa snarled, staring daggers at Harding. (Author's note: 'Only Time', Ch. 04.)\n\nAnd to my surprise, Jack Muscone got up and went over to Harding. \"Keep your hands up.\" he said as he deftly removed Harding's ATF service weapon from its holster.\n\n\"You gotta be kidding me.\" snarled Nancy Harding as Muscone cleared the weapon. \"This is a mistake.\"\n\n\"No, we're not kidding.\" said Owen Lange. \"And if it is a mistake, you'll be fully restored. Julius, Lindy, take her back to the Federal Building.\" Jefferson and Linares escorted Harding out of the room.\n\n\"I heard about the Dominic Ellis situation, where he shot you in the chest, Commander, yet you somehow stood right back up.\" said Kevin Pitts, remembering my feat that had become the Stuff of Legend. \"So I understand Commander Croyle's reaction. But are you sure Agent Harding is the Mole?\"\n\n\"No.\" I said. \"But when Teresa asked that, Harding said it herself... spies are executed. And a few of us in here can sense that she wasn't talking about through the legal process. And it probably wasn't good to say that in front of Jen's first cousin.\"\n\nTeresa said, with a wicked gleam in her eye, \"What if someone had said that about your first cousin, Commander?\" People began chuckling in the room.\n\n\"Gotta watch out for those sneaky first cousins with green crowbars and raging hormones from being pregnant.\" I said, looking right at my first cousin, Cindy. The room erupted in laughter...\n\nPart 30 - The Spy Who Came In From The Heat\n\n1:15pm, Monday, September 21st. I was in the Main Conference Room with Cindy, Teresa, and Tanya. We were in three because of the very large map on the wall, and I was staring at it as my Angels talked among themselves.\n\nCindy said \"I would have to believe that if Jen Sakai comes up here, she'll try to contact Teresa in some way.\"\n\n\"But she knows the Feds are watching me, and expecting that.\" Teresa replied. \"And if the Swamp Frogs are involved, Robin Isley is probably using NSA assets to track my cellphones and any calls or texts to them.\"\n\nTanya said \"Well, if Jen wants to find Teresa, all she has to do is walk into this Police Station, and she will find Teresa. And she'd be a heck of a lot safer in here with us than anywhere on the outside.\"\n\n\"But she doesn't know that.\" I replied, still looking at the map. \"And if she comes in here, she'll be placed under arrest, and she doesn't know that we know about the Swamp Frogs desire to kill her.\"\n\n\"Don,\" Cindy said, \"you're really staring hard at that map. Do you think the location she goes to is more important than who she tries to contact, if anyone?\"\n\n\"No.\" I said. \"You were right. She came up here to contact someone, someone she either trusts or believes can help her. As I look at this map, I'm hoping it'll trigger something...\"\n\nAnd then my eyes wandered to the right of the map, where the University was. And I almost instinctively looked at the Psychology Building, where my wife was... where my wife was...\n\n\"Ohhhh, crap.\" I said. I fished out my Police iPhone and dialed Laura's number. \"Crap, it went to voicemail.\" I looked at the clock, and said \"Damn, she's teaching a class right now, and put her phone on voicemail.\"\n\n\"Laura?\" Cindy queried, about who I was calling.\n\n\"Oh, shit.\" Tanya gasped, figuring it out quickly.\n\n\"Yep.\" I said as I took my personal cellphone out and dialed a different number... an extra cellphone Laura always kept in her purse, but never used.\n\nThe phone rang several times, then finally Laura answered. \"Hello, Commander Donald Troy.\" she said.\n\n\"Laura, listen.\" I said quickly, not grasping the code she'd just used. \"Jen Sakai is in our County, and may try to contact you. So be on the lookout for------\"\n\n\"Yes, Commander Donald Troy..\" Laura said. \"I know.\"\n\nAnd then it hit me. \"She's there, isn't she?\"\n\n\"Yes, she is.\" Laura said.\n\n\"And she's holding you hostage?\" I asked. \"Anyone else?\"\n\n\"No, just me.\" Laura said. Then the phone line suddenly disconnected.\n\n\"Crap.\" I said. \"Jen's with Laura, holding her hostage. Teresa, go suit up. Cindy, go advise the Chief and the Sheriff that there is a hostage situation on Campus, involving my wife.\"\n\n\"I'll call Jack------\" Tanya said.\n\n\"No!\" I said strongly, then said more quietly \"The Swamp Frogs are probably monitoring both your phones and his. If you have a codeword that only the two of you know, then text that, but that's all.\"\n\nSeeing the look in Tanya's eyes, I said \"This isn't a matter of trust, Tanya. If the Swamp Frogs get there before I do, then both Jen Sakai and Laura will be murdered.\" Then I went to my office and got my armor...\n\n* * * * * * * * * * * * * *\n\nDr. Laura W. Fredricson had come into the classroom to teach her Criminal Psychology course. It was a combined Senior Undergrad/Graduate course, and both undergrads and graduate students in Criminal Justice as well as Psychology were taking the class.",
        "The room in the Criminal Justice Building in a smaller 'auditorium'-style room: the teacher's bench up front, with semi-circular rows of seats, the ones further back on raised flooring for better viewing. The entrances were in the the back of the classroom, and on each side of the teacher's bench. There was a small partition wall in front of the double-doors at the rear of the classroom, not unlike many movie theaters, cutting off the view of the classroom from the doors to the hallway.\n\nAt 1:15pm, the bell rang and the class started. \"Okay, everyone,\" Laura said, \"we're going to take up where we left off about the psychology of a desperate criminal. The first thing to know is------ whaa?\"\n\nA woman with dark red hair had come into the room from the side entrance to Laura's right. As Laura turned to see who it was, the woman held up her right arm. A powerful Smith & Wesson.357 Magnum revolver was in her hand, and was pointing at Laura's head.\n\nAs students started screaming (why do idiots scream and cause chaos so much?), the woman came up to Laura and put the gun to Laura's head, then yelled \"Get out! All of you! Get out now! Go! Take your goddamn cellphones and get the fuck out!\" Panicked students rushed out of the back of the room, some screaming, some almost running over others.\n\nOnce they were alone, Laura said \"Jen Sakai, I presume. What is this about?\"\n\nJen Sakai said \"I need your help, and your husband's.\"\n\n\"By putting a gun to my head, and holding me hostage?\" Laura said.\n\n\"We both know I'm not going to shoot you unless you try something stupid.\" Jen said. \"Now those students I just let go are calling the Police now. I need you to call your husband and get him here ahead of them.\"\n\n\"You know who my husband is.\" Laura said. \"What do you think he's going to do when he hears about this?\"\n\n\"I think the Iron Crowbar will figure it out pretty quick, if he hasn't already.\" Jen said. \"Now pick up that cellphone, and call your husband.\"\n\n\"You sure you wouldn't rather me call your cousin Teresa?\" Laura said. \"She's your better chance of surviving this. If you surrender to her------\"\n\nJen said \"We both know that the Iron Crowbar is the only person who can keep me from being murdered by Robin Isley and Brendan Chapel! Now pick up that goddamn cellphone and call him!\"\n\nLaura did not move to pick up the phone. \"Jen, they won't let him in here. His own Police Officers will stop him from coming in. The Chief won't let him come in. Let me call Teresa------\"\n\n\"STOP STALLING!\" Jen yelled, fully aware of Laura's tactic. \"Call your husband NOW------\"\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was not Laura's cellphone on the bench, but one that was in her purse. Jen grabbed the purse and emptied it. When the burner phone appeared, ringing, Jen grabbed it, opened it up to answer and put the phone to Laura's face.\n\n\"Hello, Commander Donald Troy.\" Laura said...\n\n* * * * * * * * * * * * * *\n\nAs Teresa and I sped in my Police SUV across Town, blue lights blazing, I heard on the Police radio: \"Hostage situation, Criminal Justice Building, Room 102...\"\n\nI took my Police radio, hit the Break button, and after the loud noise subsided I said \"Break! Break! Break! This is Commander Donald Troy. Do not enter the building! I say again, do not enter the building! Wait for me to get there before doing anything!\"\n\nThey didn't listen. When we got there, the hallway was full of Campus Police and TCPD Officers, all of them armored. The TCPD SWAT Team had somehow beaten me there, and were ready to go.\n\n\"Everybody get back!\" I said loudly. \"What are you even doing in this building? I thought I said to stay out!'\n\n\"Sir,:\" said Robert Kalsu, \"the Campus Police had already been called and were already here. They called for the SWAT Team, and we got your Break order after we were already here.\"\n\n\"Doors to the side entrances are locked and jammed shut.\" said Daniel Patrick. \"This door is unlocked. We ran this camera around the side of that wall, and this is what we have.\"\n\nI looked at the tablet with the video, and saw that Jen Sakai was behind Laura's right shoulder, with a powerful revolver to my wife's head. The chair's seatback prevented Laura from being able to quickly turn and subdue Jen.\n\n\"Okay, that woman is a very well trained foreign operative.\" I said. \"All of you stay back. I'm going in there and diffuse this.\"\n\n\"Sir, she might shoot you!\" Kalsu said, a look of shock on his face. \"And we know it's your wife in there, which is all the more reason you can't go in there.\" I saw Detective Joan Laurer, the Police Boxing Matches Champion, and she looked poised to help stop me. Anger welled up inside me, and I felt the heat on my face as it turned beet red.\n\n\"Sir,\" said Vice Lieutenant Rudistan, trying to get between me and door, \"am i going to have to sit on you again?\"\n\n\"Get out of my way.\" I said. When Rudistan didn't move, I yelled \"I SAID GET THE FUCK OUT OF MY WAY! YOU WILL NOT STOP ME! I AM THE POLICE COMMANDER HERE, LIEUTENANT! AND THAT IS A DIRECT ORDER!\"\n\n\"Stand down, Commander!\" said Chief Moynahan, coming up to us. Sheriff Griswold was a distance behind him, almost running to catch up as the Chief said \"You knowwww you can't go in there.\"\n\n\"Goddammit, Chief!\" I said loudly, then yelled to everyone \"NONE OF YOU KNOW WHAT IS REALLY GOING ON HERE! I DO! NOW STAY BACK AND LET ME HANDLE THIS!\"\n\n\"Let him through!\" growled Sheriff Griswold loudly. Rudistan was clearly reluctant, but he moved out of my way.\n\nI took my gun in its holster off my belt. \"Croyle... Croyle? Where's Croyle?\" Everyone looked around. Teresa was nowhere to be seen.\n\n\"Ah, shit.\" I said. I handed my gun in its holster to Sheriff Griswold. \"Don't let any Federal Agents come in here.\" I opened the door to the classroom and went inside.\n\nAs the door loudly creaked shut, I heard a voice call out \"Who's there? Get out of here!\"\n\n\"It's me, Commander Troy.\" I said. I extended my hands beyond the wall, the red crowbar in my left hand, then poked my head around. Then I slowly came around the wall. \"I'm unarmed. I left my gun outside.\"\n\n\"Just stay back there!\" Jen Sakai yelled out as I slowly began walking down the steps toward her and Laura.\n\n\"I'm not going to yell across the room.\" I said, still walking slowly. \"And you know I need to be up there, because my body is the only thing between yours and a whole lot of Government guns.\"\n\n\"Keep your hands where I can see them.\" Jen said. \"I know you don't want your wife to get hurt.\"\n\n\"No, I don't.\" I said agreeably, coming up to the front of the bench. I set my red crowbar on it, keeping my hands where Jen Sakai could see them. \"Why don't you let her go. I'll be your hostage.\"\n\n\"Chivalrous of you.\" Jen said. \"But I can't do that, because Brendan Chapel's agents would love to shoot you to get to me.\"\n\n\"Point taken.\" I said. \"So... let's talk about getting you out of here and into friendly hands...\"\n\n* * * * * * * * * * * * * *\n\nEveryone that could see the tablet was watching, and the other Officers were waiting to see what would happen. And then Federal Agents started pouring into the room: Special Agents Lindsey Black, David Rovers, Peter Page... and Nancy Harding. EAD Owen Lange, ASAC Karina White, Special Agent Julius Jefferson, and DEA SSA Dwight Stevens were behind them.\n\nLindsey Black handed Chief Moynahan a document. \"That's a Federal warrant to apprehend Jen Sakai, wanted for espionage, international smuggling, and treason. We're taking over this case. Get your cops out of here, we'll handle this situation.\"\n\nNo one moved.\n\n\"There's nothing we can do, Chief.\" said EAD Owen Lange. \"The warrant's valid, and we have our orders from Washington.\"\n\n\"And what are you going to do with Jen Sakai?\" growled Sheriff Griswold.\n\n\"We're taking her into Federal custody.\" said Nancy Harding. \"After that, it's none of you local cops's business what we do.\"\n\n\"Let's go, guys.\" said Lindsey Black, opening the door to the classroom...\n\n* * * * * * * * * * * * * *\n\n\"You did what you did to me,<br>now, it's history I see<br>Things will happen while they can<br>I will wait here for my man tonight<br>It's easy when you're big in Japan<br>------ Alphaville, 'Big In Japan'\n\nThe side door to Jen and Laura's left, and my right, opened. Lt. Cmdr. Teresa Croyle came through, her service weapon pointed up at Jen. But what shocked me more is who followed her into the room... it was FBI Special Agent In Charge Jack Muscone. He had his hands up, to show he had no weapon in them.\n\n\"Drop it, Jen.\" Teresa said. \"The Feds are about to come in here, guns blazing. Lindsey Black has orders to shoot to kill you, and worry about it later. Drop it, and let me take you in.\"\n\n\"And who is this guy?\" Jen asked. \"Oh, Jack Muscone. Why are you here? You can't do anything for me.\"\n\n\"I can do two things.\" said Muscone as he walked around behind me. \"I can keep you alive while you're in Federal custody. And I'm going to stand here behind the Iron Crowbar, and have his back. Those rogues might shoot him, but if they shoot me, it's Federal-on-Federal when my people shoot the rogues------\"\n\n\"FEDERAL AGENTS!\" yelled Lindsey Black as she and her cronies ran around the partition wall and took up positions behind desks at the back of the room. \"DROP YOUR WEAPONS! YOU TOO, CROYLE!\"\n\n\"Lower your weapons!\" Jack Muscone called out, having turned to face the others, positioning himself right behind my back.\n\n\"DROP YOUR WEAPON, SAKAI!\" Nancy Harding yelled. \"I'M NOT TELLING YOU AGAIN! I WILL SHOOT YOU!\"\n\n*CLICK!*\n\nThe sound of a powerful handgun being cocked in her ear caused her to glance over. It was Karina White's gun, with Karina White behind it, ready to pull the trigger.\n\n\"Drop it, Nancy.\" Karina said. \"That's a Special Agent In Charge you're pointing that gun at, and my boss. And you will not assassinate the Iron Crowbar today.\"\n\nHarding looked over to see that EAD Owen Lange had his powerful handgun in Lindsey Black's earhole, and Julius Jefferson and Dwight Stevens had Peter Page and David Rovers well covered. Then she turned back to Karina. \"You bitch.\" she spat.\n\n\"Takes one to know one.\" Karina said as she secured Harding's weapon. \"This is what you get for betraying my trust.\"\n\nMeanwhile, Lindsey Black was saying angrily: \"We have a warrant, Mister Lange!\"\n\n\"And Muscone will exercise it.\" replied Owen Lange. \"Not you.\"\n\n\"I protest this.\" said David Rovers. \"We've done nothing wrong, nothing to be held at gunpoint and our weapons taken from us.\"\n\n\"Yeah, go whine to Martin Nash and the OPR.\" Julius Jefferson said.\n\n\"It's not that wimp Nash you need to worry about.\" said Lindsey Black...\n\n* * * * * * * * * * * * * *\n\nMeanwhile, Teresa came towards Jen and Laura. \"Let her go, Jen.\" Teresa said quietly. \"Let me take you in.\"\n\n\"Brendan Chapel will have me killed.\" said Jen. \"Not even Dr. Fredricson can stop that.\"\n\n\"Ye of little faith.\" I said to Jen. \"Your cousin there outran an explosion. She's a badass. I'm impressed with her. Brendan Chapel? He may be the DNI, but unless he can outrun a bullet, he ain't a badass. And I'm not impressed with him at all.\"\n\n\"Confidence. You've got that in spades.\" Jen Sakai said. \"I'll take my chances with you.\" She took her gun away from Laura and flipped it, showing she was not holding the trigger. Teresa came up and pulled Laura away, shielding my wife with her own armored-covered body.\n\nI went around and took the gun from Jen Sakai as I said \"I'm keeping my body between yours and the Federal Government Guns. And I'm cuffing your hands in front of you instead of behind you, so you won't be helpless.\" I suited the deed to my words.\n\nJen turned to Teresa and said \"Would you have shot me, Teresa? Your own flesh and blood? Would you have?\"\n\n\"I'm glad you didn't make me find out, Jen.\" Teresa replied.\n\nPart 31 - Cleanup on Aisle (00)-7\n\nAs Teresa and Joan Laurer took Jen Sakai and Laura out the side door and to Police Headquarters, Jen under arrest and Laura to be interviewed as a witness, I said to Jack Muscone. \"Thanks for having my back, Jack.\"\n\n\"Least I could do for the Iron Crowbar.\" Jack said. \"I knew you were right about all this. And I know you had my back when that pussy Nash tried to get you to throw me under the bus... even though you would have been right to.\"\n\n\"Nooo, I don't play that way.\" I said. \"It's five o'clock somewhere... let's go get a beer.\"\n\nAs we headed up the aisle and into the hallway, I saw Rudistan just outside the door. \"Sorry I yelled at you, Rudistan.\" I said, putting my arm around him as we walked to the building exit door. \"But I'm too old and feeble to let you sit on me anymore.\"\n\n\"I was just following orders, sir.\" said Rudistan.\n\n\"Yezzz, he wazzz.\" said Chief Moynahan. \"My office, Commander, as soon as you get back to Headquarterzzz...\"\n\n* * * * * * * * * * * * * *\n\nI was standing in front of the Chief's desk, at attention. The Chief was sitting behind his desk, and the Sheriff was sitting on the sofa to the side... and looking unhappy.\n\n\"Commanderrrr,\" the Chief said, \"I understand, I get it, that you knew things no one else did, and that's why you insisted on going in there. But that's the point... you didn't tell any of us any of it, so we didn't know! And I have told my Police Force to not let you lead with your nose, so they were just doing their jobs.\"\n\n\"Yes sir. I know.\" I said. \"But I didn't have time to explain. I had to get in there before Lindsey Black did. And besides, sir... what I know is classified, and I can't tell you, even if I want to.\"\n\n\"I have a Top Secret clearance, Mister Crowbarrr.\" said the Chief. \"So you could've told me at least some of it-------\"\n\n\"And I'll tell you that now.\" said a voice behind me. I whirled to see my wife Laura coming into the office, with two file folders in her hand.\n\n\"If you and the Sheriff will sign these NDAs,\" Laura said, \"I'll fill you in on what you need to know about this case. Darling, would you excuse us?\"\n\nI may have been wide-eyed at that dismissal, but the Chief just nodded, so I turned and exited the office... and headed towards I-1.\n\n* * * * * * * * * * * * * *\n\nCaptain Tanya P. Muscone and ADA Paulina Patterson were in I-1 with Jen Sakai, who had waived her right to an attorney. Why Officer Lydia Green was the Uniformed Presence for this, I did not know.\n\n\"Look,\" Jen said, \"I have to tell you this now, so stop asking questions about the other stuff.\"\n\n\"We're asking the questions here.\" said Tanya. \"Now where------\"\n\n\"You heard her, ladies.\" I said, coming into the room. \"You're doing this wrong. Let her have her say, and then I'm sure she'll answer your questions.\"\n\n\"But Don-------\" Paulina started, but I just opened the door to the anteroom and waved for them to go out. Tanya got the hint, and prodded Paulina to leave.\"\n\n\"You can wait outside, Officer Green.\" I said.\n\n\"Sir, regulations require I be inside-------\"\n\n\"That was not a request, Officer.\" I said strongly. \"Wait on the other side of the door.\" Officer Green left the room for the hallway to the jail side of Headquarters.\n\nI got out my cellphone and texted Teresa to have Lydia Green replaced, and to not let Green be anywhere near Jen Sakai. \"Okay, Jen, tell me what you can, while we have time.\" Jen did so, outlining how now-DNI Brendan Chapel forced her and her smuggling ring to pay 'tribute' to him, amounting to millions of dollars.\n\n\"I'm sure you have proof of this.\" I said. \"Where is it?\"\n\nJen looked up at the camera that had recorded everything she said. \"Turn off that camera, so I can tell you.\" I texted Teresa in the Monitor Room to shut off the camera. The green light on the camera went off. Still, Jen covered her right hand with her left so the camera couldn't see it, and I watched closely as she tapped the fingers of her right hand under her left, in Morse Code, her index finger for dots, her bird finger for dashes...\n\n* * * * * * * * * * * * * *\n\n4:30pm, Monday, September 21st. Teresa Croyle came into I-1 with a bottle of Bruichladdich Port Charlotte 10-year Heavily Peated Scotch Whisky, two Glen Cairn glasses, and a cigar. She poured two drams. \"Cheers.\" she said, clinking Jen's glass, then sipping hers. Jen sipped hers, as well.\n\n\"Wow, that's smoky!\" Jen said. \"Great stuff.\"\n\n\"Here.\" Teresa said, holding up a cigarette lighter. She lit Jen's cigar as Jen (huffed and) puffed.\n\n\"You're not having a cigar, too?\" Jen said.\n\n\"Nahhh, it's bad enough I'm drinking on duty.\" Teresa said. \"And by the way, nothing you say to me will be admissible; after all, I'm giving you liquor, getting you drunk.\"\n\nJen barked a short laugh, then said \"I appreciate you bringing me this. I'll probably never have any Scotch or a good cigar again.\"\n\nTeresa said \"I dunno. From what I'm hearing, if you cooperate with the CIA, you'll go into Witness Protection, and be in a safehouse somewhere. House confinement ain't much, but I can send you the occasional bottle of your favorite Scotch whisky.\"\n\n\"And if I don't turn, if I don't cooperate?\" Jen said. \"The Feds have been offering me a lot more than a good Scotch to turn back.\"\n\n\"So why haven't you?\" Teresa said.\n\nJen paused to pour two more drams of the Scotch, then said \"Sl\u00e0inte.\" They clinked glasses and sipped.\n\n\"You know, I'm glad I got to meet you, Teresa.\" Jen said. \"It was nice having a family member, a cousin that I could talk to, someone with brains as opposed to those idiots that I have for a brother and his wife, and that corrupt Republican pedophile that Clara won't do the right thing and leave and divorce.\"\n\n\"And your mom?\" Teresa asked. Jen shook her head vigorously in disagreement.\n\n\"Nooo, not her.\" Jen said. \"Anyway, you're not going to like me when I say this, so I wanted to get that out before I say it. To answer your question, Teresa.... I was leading the Feds on for as long as I could, to stay out of jail as long as I could, and I'm not going to turn now.\"\n\n\"But why not?\" Teresa said.\n\nJen replied: \"You saw my family. What did you think of them, politically?\"\n\nTeresa said \"They were pretty much all on the Liberal side of things, some more than others.\"\n\nJen nodded. \"Yeah, Colin and Wendy whine about 'Climate Change', but that's as much for their financial gain, and does little for the true Cause.\"\n\nShe then looked up at Teresa and said \"Teresa, I am a committed Communist. I am devoted to the cause of bringing Communism to the entire world. Everything I have done has been with the goal of weakening the United States and Japan, so that their opposition to Communism can be eradicated.\"\n\nJen: \"My brother Colin is weak, and he's a 'useful idiot' for our goals. So was your former husband Easton, who pretended to share our goals but was really in it for money. But I became a spy for Red China because they are a Communist government, and my work was to help them spread Communism to Asia and the world.\"\n\nIf she was shocked, Teresa did not show it. Her face had not even flickered. She said: \"No, I don't agree with your philosophy, far from it. But I don't hate you for it. And you're still my blood kin. Until a few months ago, I didn't know I had any blood kin left, at all. So it is what it is.\"\n\nShe poured two more drams, then raised her glass and said \"Soooo... to the Workers of the World.\"\n\n\"Sl\u00e0inte.\" Jen replied, clinking their glasses, then downing her drink...\n\n* * * * * * * * * * * * * *\n\n7:30pm. We gathered at the Cop Bar, and had the whole back room to ourselves since it was Monday. I bought Rudistan, Kalsu, and Patrick a pitcher of beer and the 'bottomless basket of wings', and they were consuming them in the main front room.\n\nThe Sheriff, myself, Cindy, Teresa, Todd, Tanya, Jack Muscone, Karina White, and Dwight Stevens went into the 'Command Room' for a more private conversation. Chief Moynahan was spending time with the Detectives and others in the main back room, and astute Detectives were taking advantage of getting 'face time' with their Police Chief.",
        "\"So the whole operation in Texas was a sham?\" asked Dwight Stevens.\n\n\"No, it was real.\" I said. \"And they really were trying to take down a smuggling ring. They just didn't realize the tiger they had by the tail. The Chinese tiger, that is.\"\n\n\"Don,\" Cindy suggested, \"why don't you just tell us everything, and there's no one here to correct you if you go astray... which you won't.\" Everyone chuckled.\n\n\"Okay.\" I said. \"It really started years ago, when Teresa and Easton Windham annulled their marriage and went their separate ways. Teresa ended up with us... thank God Almighty... while Easton went in another direction... to Texas. Records are still very spotty, and that suggests to me that he was involved in smuggling operations.\"\n\n\"The Yakuza?\" Dwight Stevens asked.\n\n\"No, and let me circle back with you on that.\" I said. \"So Easton took a job with an oil company, ostensibly for research, but actually to gain access to the company's assets for smuggling purposes. That got him noticed by two groups of people: the Federal Government, and a group of smugglers that turned out to be Jen Esterson Sakai's group of spies, using smuggling as a front for their espionage activities.\"\n\nYour Iron Crowbar: \"Jen Sakai and her husband Hideo Sakai found that they could siphon off molasses, a byproduct of the sugar production for Bessemer Cookies, and sell it on the black market to make rum. That expanded into whiskey, and they actually did have idea of putting together a company with Weston Windham to legitimately make rum and whiskey. But Clarissa Belvedere Esterson, Teresa's aunt, put the kibosh on that, at least as far as the Bessemer company having anything to do with it.\"\n\nYour Iron Crowbar: \"And let me touch on that, since I brought it up. Weston Windham was Easton's older brother. He met Teresa's cousin Tessa Bessemer 17 years ago, and they were married and had two children, Beatrice and Eugenia. And like Teresa's father, he found that he did not like most of the Belvedere family, and they didn't like him very much.\"\n\n\"Nobody told me that.\" Teresa said.\n\n\"He was dead.\" I said. \"They didn't want to speak ill of the dead, especially in front of the girls. And they didn't want to dredge something else up, which I'm about to tell you about:\n\nI went on: \"Weston and Tessa moved away, to Baton Rouge. They did keep in touch with State Senator Robert Edwards and his wife Clara Bessemer Edwards. But maybe things will begin to make sense when I tell you that Weston Windham had been recruited into the CIA.\"\n\n\"Oh.\" said Cindy. \"Yeah, that puts some puzzle pieces in their places.\" Teresa looked inquiringly at her BFF.\n\n\"Yes, it does.\" I replied. \"So what happened is that the 'Company' had gotten wind of Jen Sakai's spy ring, but rather than tell the FBI like they were supposed to, they had Weston Windham investigate it. He dutifully did so, and he pretended to form a friendship with Jen and her husband.\"\n\n\"And then... things went sideways.\" I said. \"Weston was trying to get into Jen's spy ring, but unbeknownst to him or the CIA, Easton Windham was already in Sakai's smuggling ring. At this point I must say that I am not sure who exactly did it, but I can't see Jen nor Easton not knowing about the arrangement to kill Weston Windham by sabotaging his plane and causing it to crash in Mississippi.\"\n\n\"Which explains why the FBI closed that case so quickly.\" Jack Muscone said. \"The CIA probably told them to drop it, and the FBI did.\"\n\n\"Wow.\" said Karina White. \"That's pretty hardcore of Jen, to kill her cousin Tessa off, as well as Weston.\"\n\n\"Oh, that's right!\" Teresa exclaimed to herself. Then she recovered and said \"Sorry. I just remembered that there was something that Aunt Clarissa told me and Cindy: Tessa originally wasn't going to go with Weston. It was a last-second decision to go to the Grand Ole Opry. I'll bet Jen didn't know Tessa was on that flight... until it was too late.\"\n\n\"I think you're right.\" I said to Teresa. \"Anyhoo, Weston was eliminated, ending the threat to Easton's exposure. So, let's now move up in time a little bit. Last April, some of us went to Teresa's hometown, where we learned some truths. One of those was that Teresa was the heir to her mother's portion of the Belvedere inheritance. To prove the family link, Clarissa Belvedere Esterson was contacted, and provided a mitochondrial DNA sample, which did prove Teresa's membership in that family.\" (Author's note: 'Centuries' for all of that.)\n\nYour Iron Crowbar: \"And now we get back to our current Director of National Intelligence, Brendan Chapel. Chapel is an odious, evil man, and his avarice for money is unappeasable. He was behind Lindsey Black showing up in Teresa's hometown after trying to keep her from going to her hometown. He wanted that $100 million in his own pockets, but in that he failed miserably.\"\n\nYour Iron Crowbar: \"Chapel has been a longtime high-ranking member of the Intelligence Community, so it is not surprising that he became aware of the Sakai spy ring. And it is likely Chapel that directed the CIA to not tell the FBI of the ring operating on American soil. And it is further likely that Chapel was ultimately behind the betrayal and murder of Weston Windham.\"\n\nYour Iron Crowbar: \"Chapel basically made Jen and her husband an offer they could not refuse: he took a huge cut of their operations. I'm sure that in exchange he helped keep any heat off of them, maybe opened up a few ports, via air or sea, to do their operations. In fact, Chennault International Airport (CWF) is next to Lake Charles, and is an 'International' Airport because it has a Customs office. But it doesn't handle passenger traffic, just freight traffic. A perfect setup for Chapel.\"\n\nYour Iron Crowbar: \"So Chapel is making a lot of money at the expense of the Red Chinese and maybe the Yakuza. I was told while in Japan that the Yakuza thinks Chapel is a very dishonorable man, which is one of the worst insults they can use. I now realize that when the Sakai ring was slowly becoming exposed, Brendan Chapel had to cut bait. And that meant bringing down the Yakuza operations in America, with which Chapel had close ties.\"\n\nI said: \"We know that ATF Agent Nancy Harding had been trying to bring down the Yakuza operations for years, but with near-total failure. In fact, she was getting heat from her superiors about it. The reason she was failing is because Brendon Chapel was making sure she failed, and protecting his Yakuza buddies from her.\"\n\n\"But then,\" I said, \"Chapel needed the Yakuza gone. So he makes Harding an offer... she redirects her loyalties to him, personally, and she'd get her career-making takedown of Yakuza America. The Yakuza knew that, of course, which is whey they despise the two-faced Chapel so much.\"\n\nKarina groaned. \"And she took the deal.\" After a moment, she said \"Guys, I really have to apologize for vouching for her. She really was a good Agent, back in the day.\"\n\nI said \"I'm sure she was. But Brendan Chapel has a way of corrupting people, of making them abandon their integrity, either through threats or offers of reward, or both. But he is truly the Snake in the Garden of Eden. Nancy Harding believed his lies, and would have murdered Jen Sakai... and Teresa... and me... and Laura... and Lindsey Black was ready to kill us all, also.\"\n\nI said \"And I'll add here that EAD Owen Lange had Agent Kevin Pitts in that meeting as well as Harding, to see if Pitts would reveal himself as a Swamp Frog. Harding failed the test; Pitts, however, appears to have passed.\"\n\n\"I heard,\" said Dwight Stevens, \"that Pitts never was a true Swamp Frog like Lindsey Black, and that he got really disenchanted with her and with Nash. So EAD Lange is monitoring him, but he's also giving him a chance to show he's all right.\"\n\nI nodded,then said: \"Anyhoo, we're circling back to the point that it's the same Brendan Chapel that was involved with Sakai and her ring.\"\n\nCindy said \"Is that how Chapel came across the knowledge of Teresa'a inheritance? From Jen Sakai?\"\n\nTeresa said \"Jen didn't know about me, until Aunt Clarissa was contacted for a DNA sample. Or did she?\"\n\nI said: \"The timing is most very interesting. We barely beat the Swamp Frogs to your hometown on that, so I think they only found about it just before we got out there. I've also had 'thoughts' that someone destroyed your mother's headstone to entice us to go out there. But did Jen know who you were before all that? All I can say is that someone did. Okay, what else?\"\n\n\"Easton's murder.\" Cindy said. \"In our County.\"\n\n\"Retribution.\" I said. \"For Weston and Tessa Windham's murders, and maybe for the attack on you and Cindy with the Vision plane. And that's a perfect segue into the rest of this mystery.\"\n\nYour Iron Crowbar: \"One thing that Teresa, Todd, and I knew, that apparently no one else did, was that Takaki Mariko had gone back to Japan because her father was ill, and indeed he died. But we kept being told things like the FBI operation down there involved Mariko, that Mariko was trying to get Jen and her husband to turn back to our side, and become double agents or to rat on the Red Chinese.\"\n\nYour Iron Crowbar: \"Now I believe that Eduardo and Rosalyn Escobar are good people and good, honest Agents, so I considered it likely that they were being given a big ol' package of 'hooey'. And with DNI Chapel in the mix, one has to take that into consideration. So my suspicion is that all that was a red herring, part of the same story that it was the Yakuza trying to kill Mariko and ending up sending Easton Windham here to kill her.\"\n\nYour Iron Crowbar: \"It also ties into the sabotage of the Vision plane. I believe Easton Windham was brought to our Town & County to identify Teresa, who was marked for death after appearing in Lake Charles and surviving that sabotage attempt. I have no proof of this, but I think someone, maybe Easton, identified Teresa at Lake Charles Regional Airport, thought she was there to get information from Clarissa, and felt the need to eliminate the possible threat. Only Jen Sakai or Easton Windham could identify Teresa, and the probabilities are very strong that it was Easton.\"\n\n'The son of a bitch.\" muttered Teresa levelly. \"No wonder I wanted to annul our marriage.\"\n\n\"I'm not sure he actually did the sabotage,\" I said, \"but he was a part of it. Anyhoo, you didn't die, but the FBI operation was somewhat exposed as a result of your plane accident. Easton was then drawn up to our Town & County, ostensibly to help kidnap Takaki Mariko, we were told. But Mariko was in Japan and Teresa and I knew that. So what remains, and it's not improbable, is that Easton was brought up here to identify you, Teresa, and that you were the intended victim of what happened to him.\"\n\nYour Iron Crowbar: \"But Fate, and someone else, intervened. Windham was quickly and brutally interrogated, probably broke very fast, and then was brutally molested and left to die. That shows a personal hatred, and a thirst for vengeance. In any case, he would bother us no longer.\"\n\n\"After that,\" I said, \"some of us were invited to go to Japan by someone that one does not say 'no' to, that being the Emperor himself. We had the very sad but honored occasion to attend the death and funeral of Takaki Misaki-sama. And while there, I learned some things, including that the Yakuza had no part of the cases we were investigating.\"\n\n\"After that,\" I said, \"we got word that Jen Sakai was coming up here. I believed it was to surrender to me and Teresa, because she correctly didn't trust anyone else with her life.\"\n\n\"I have a question.\" Cindy said. \"Why Laura? I mean, yes, Laura is your wife and that did get your attention... but she could've been shot in an instant, or subdued by Laura herself.\"\n\nI replied: \"I have almost no data for this theory, but we know that for some strange reason Dr. Robin Isley has great respect for Laura, though it is not reciprocated at all. If Jen Sakai and Isley had any contact, Isley may have told Jen about Laura, and maybe even told her to contact Laura if anything went sideways. And Jen really does have a way of talking with people, making friends with them, so she may have found more of a friend than she realized in Dr. Robin Isley.\"\n\n\"Jen does have that way about her.\" Teresa said agreeably.\n\nI saw the slightest hint of 'something' in Cindy's ice blue eyes. \"You have a different idea?\" I asked her.\n\n\"Naaah, it's probably me being a dumb blonde again.\" Cindy replied. And no more would she say.\n\n\"Well, we can investigate what she told you,\" said Jack Muscone, \"but we have to get some solid proof. It'd be nice if she stashed something somewhere, but unless she tells us or gives it to us, we don't have much.\"\n\n\"Let not your heart be troubled.\" I said, with a gleam in my gray peepers.\n\n\"Oh boy.\" Muscone groaned. \"I hate it when you do that...\"\n\n* * * * * * * * * * * * * *\n\nAs the party began dying down, I bought two pours of Buffalo Trace bourbon whiskey and gave one to Jack Muscone. \"Here's to you, for having my back today.\" I said. We clinked glasses and downed our shots. Jack asked for a second round for both of us.\n\n\"Here's to you, for having my back against Nash.\" Muscone said. After we downed our shots, he said \"Nate Grimes of the FBI's OPR office told Owen Lange that he didn't think there was anything to the investigation of me, and he's tried to close it... three times. But it got re-opened every time, and DepDirector Lawrence Lance was called by DNI Chapel personally and told not to try to close it again.\"\n\n\"Yeah, keep your head on a swivel.\" I said. \"I get the feeling this is just their opening salvo. They've got something else up their sleeve, just waiting to spring on you.\"\n\nMeanwhile, Cindy and Tanya were watching us from across the room.\n\n\"I'm glad they're talking again.\" said Tanya. \"I was getting worried, there, for a minute. And Pete's been miserable, not being able to play with Jim and Ross.\"\n\n\"And Carole.\" said Cindy, very sure. Lady Ironside just glanced over at the Green Crowbar, who just smiled a little bit as she returned the look.\n\nAnd yes, Jack and I were on better terms again. But there was always a barrier there; we kept it more professional than personal. And Jack never said '400 years ago' nor mentioned any burnings at the stake, ever again...\n\n* * * * * * * * * * * * * *\n\n1:00am, Tuesday, September 22nd. Selena Steele let Teresa and me into the J.P. Goldman Bank, and led us to the safe deposit boxes. I inserted one key into its slot in one of the boxes, and Selena put the bank's key in the other slot. We opened the door and I took out the box inside, put it on the table, and opened it as Teresa filmed us with her Police iPhone.\n\n\"Solid gold.\" I said as I looked at the papers inside. I took them and the jump drives and put them into an evidence bag, sealed it, and made the proper annotations, telling the camera what I was doing every step of the way.\n\nTeresa and I were wearing all black, and we left the Bank by the backdoor and got into the TCPD paddywagon that had just driven up. Corporal Hicks drove us to Police Headquarters, a drive of not much more distance than the length of Courthouse Square. Other Officers screened us as we went inside. Once inside, we went to the basement, to the I.T. area. Myron and Mary Milton were there, waiting for us.\n\n\"It's all here.\" I said. \"A lot of dirt on Federal Agents. Put every bit of it into the evidence servers, make multiple duplicates and copies.\" Myron and Mary went to work very enthusiastically...\n\n* * * * * * * * * * * * * *\n\nWhy all the secrecy and playing the shadows?\n\nJen Sakai's Morse Code message to me was to tell me the bank and safe deposit box where she'd secured evidence, proof of Brendan Chapel's criminal wrongdoing. After I'd finished talking to her, I called Teresa into my office.\n\n\"Remember when we got back from lunch after you got back from Louisiana?\" I asked. \"Well, I took the protective cover off your Police iPhone, and I found this.\" I opened my hand, and a safe deposit box key was revealed.\n\n\"How did she get that there?\" Teresa gasped.\n\n\"She didn't.\" I replied. \"She gave the key to her mother, Clarissa. Either you or Cindy told me that Clarissa had finished taking photos of Weston Windham while you and Cindy washed up for lunch.\"\n\n\"Oh yeah, that's right.\" Teresa said. Then it all hit her. \"Jen gave the key to her mother? But they didn't like each other much.\"\n\n\"True,\" I said, \"and there are reasons for that. But they both knew this was Jen's only chance to survive Brendan Chapel. I kept the key in a safe place, but I didn't know the bank or box number that it goes to. Now I do... and Jen's statements give us 'probable cause' to get a warrant...\"\n\n* * * * * * * * * * * * * *\n\nBack in live time, Teresa and I were in my office. \"Yes,\" she said, \"I saw the vehicles following us earlier today, and you found those trackers on our vehicles. They must really be desperate.\"\n\n\"They should be.\" I replied. \"What little of that stuff I saw was damning. Having said that, don't get your hopes up that this'll get Brendan Chapel out. But it should be enough to keep Jen Sakai alive.\"\n\n\"But how do we get it out there, to the Public?\" Teresa asked. \"The Press sure as hell won't help us.\"\n\n\"Ohhhh, I think Senator Bill Nunn is the way to go on that.\" I replied...\n\nPart 32 - Bayou Bengals and War Eagles\n\nDawn, Saturday, September 26th. The BOW Enterprises plane landed at Ryan Field, Baton Rouge Metropolitan Airport (BTR), and we taxied to the General Aviation hangers. We secured a rental car and Teresa insisted on driving, so I rode shotgun as we got on Interstate-10, bound for Lake Charles.\n\n\"Nice place.\" I said as we drove up to the Belvedere Estate.\n\n\"It's a lot nicer in the cooler weather we're starting to have now.\" Teresa said. We went to the front door and rang the bell, and Charles the Butler opened the door.\n\n\"Madame Clarissa is expecting you, Madame Teresa.\" said Charles. He led us to the dining room, where breakfast had been laid out. Sitting at the table was Clarissa Belvedere Esterson, her niece Clara Bessemer Edwards, and her great-nieces, Beatrice and Eugenia Windham.\n\n\"Oh, it's so good to see you again, my dear.\" Clarissa said as she came up and hugged Teresa.\n\n\"And you, Aunt Clarissa.\" Teresa said. \"May I present my uncle-in-law, Commander Donald Troy.\"\n\n\"Oh my, yes you may.\" Clarissa said, her eyes lighting up as I shook her hand formally, and 'old school', but not bending over far enough to kiss her hand. \"What a handsome young man you are, Commander.\"\n\n\"Please, call me Don.\" I said. \"And it's an honor to meet you.\"\n\nTeresa said \"This is my cousin Clara. And these young ladies are Beatrice and Genia.\" Both girls were stunned.\n\n\"Wow, the Iron Crowbar!\" Beatrice exclaimed, seemingly in awe. \"You really are ten feet tall!\" I couldn't help but laugh merrily at that.\n\n\"You must be hungry after your flight.\" said Clarissa. \"Charles, some coffee for our guests. Teresa, Don, help yourselves to the buffet.\" We did so, and I got plenty of eggs, bacon, and grits. Yep, we were in the South. I was just glad it wasn't a French Continental Breakfast(!).\n\nWe made small talk as we ate, including Teresa's bombshell announcement. \"My husband gives almost as much money to Auburn as he does his own alma mater.\" she said. \"He gets Auburn season tickets, but usually gives them away to business clients. But he got two away-game tickets to the Auburn-LSU game tonight, so I'm taking this here Wildcat to the game, to show him what real college football is about... the SEC.\"\n\n\"And I certainly did not refuse the invitation to be schooled.\" I replied.",
        "When Teresa had told me a few days before, I'd said \"Wait a minute... my nephew gets Auburn season tickets and away games? He can get Auburn-Georgia tickets every year, and has failed to mention that to me? I'll have to speak to his mother about that.\"\n\nTeresa chuckled. \"Imagine how I felt when I found out he's given away his Auburn-Alabama tickets every year. I had to remind him that he is my 'hostage' with Clan Crowbar, and redirect his suppositions on giving those tickets away anymore...\"\n\nBack in live time, I asked \"Wasn't the 'earthquake game' an LSU-Auburn game?\"\n\n\"Yes sir.\" said Genia. \"It was in 1988. It wasn't a real earthquake, but when LSU scored in the final seconds, the seismograph at the Geology Department at LSU recorded it as if it was one.\"\n\nI love my Wildcats, but I knew in my soul that there was nothing like SEC football...\n\n* * * * * * * * * * * * * *\n\n\"I do appreciate you being able to spare Jen's life.\" Clarissa said as she, Teresa, and I sat in the 'drawing room' and had (more) coffee.\n\n\"She's not out of the woods just yet.\" Teresa said. \"But we think she has a chance to live, now that we've exposed those who want to kill her.\"\n\n\"I am so grateful that your wife was uninjured, Don.\" said Clarissa. \"I'm sure that was a frightening experience for you both.\"\n\n\"To be honest, ma'am,\" I said, \"we both knew it wasn't as bad as it might've appeared to the world.\"\n\n\"And I was so sorry to hear of the passing of your former husband, Teresa.\" Clarissa said, and no one was fooled that it was anything more than an obligatory politeness.\n\n\"Please don't be.\" Teresa said. \"I did not know Easton very well. He became a much worse person that the young man I knew all those years ago. And he had it coming... after he arranged his own brother's death.\"\n\nClarissa did not bat an eyelash. \"Ah, so you know about some of that foul business.\"\n\nI said \"We know about a lot of it. As you know, ma'am, my wife was a former Deputy Director in the CIA. And she remembers your late husband.\"\n\n\"Whaa?\" Teresa gasped. \"I didn't know that.\"\n\n\"I was obligated to not tell you.\" I said. \"Of course you've heard of the wall at CIA Headquarters at Langley, Virginia, where blue stars are cut into the wall to represent those CIA Officers that died in the line of duty.\"\n\nI took a photograph out of my jacket pocket. \"This star in the middle was the one cut for your husband, Claude Esterson, who died in the line of duty in the service of our Nation.\"\n\nClarissa looked sad as she gazed at the photograph. Finally she said \"Thank you so much for bringing this to me.\" She extended the photo back to me, but I would not take it.\u2028\n\n\"Please, keep it.\" I said. Clarissa nodded, and put the photo on the table next to her chair.\n\nTeresa said \"Aunt Clarissa, what's the real story on him?\"\n\nClarissa said \"We had a story, a 'backstop', if you will, that my husband was a semi-retired moocher off the Belvedere fortune. It was a perfect story to cover up his real life's work. He could go on his missions and return, and no one really was the wiser, since he had no job to go to.\"\n\nClarissa: \"He died on what was supposed to be a routine mission to South America, going to advise the American Embassy staff on some things, and being a courier for some highly classified materials. But the drug cartels got wind that someone else in his group was a spy, so they ambushed and destroyed all of the vehicles. I told the children that he'd died in a car accident, which wasn't a lie, and I told people here that he'd died in an accident, suggesting that it was here.\"\n\n\"I'm sorry.\" said Teresa.\n\n\"My sister married a war hero, whose bravery behind enemy lines could not be discussed publicly for many years, and for which he was recognized only recently.\" Clarissa said, speaking of Teresa's father. \"I married a hero, too, and I don't regret it. I only regret that the accolades for him still must be kept secret. So many secrets in the CIA, wouldn't you say... Commander?\"\n\n\"I entirely agree.\" I replied, totally aware of what she was really saying to me.\n\n\"Like the secret of who put that key inside the cover of my cellphone.\" Teresa hinted.\n\n\"Yes.\" said Clarissa, with a little smile that reminded me of Teresa's 'little smiles' at times. \"Both Jen and I thought Robin Isley or Brendon Chapel was behind your plane's sabotage. Jen had given me that key before she left for Houston some months ago. I knew it was too hot for me to hold, so when you came back down, I put the key inside your cellphone's cover.\"\n\nClarissa continued: \"I should tell you the complete story. You've seen the political persuasions of my family, Teresa. But I didn't realize that Jen was literally a traitor. I found out when Weston and Tessa were killed. Jen was distraught about it. I accused her of sabotaging Weston's plane, and she admitted that it was people in her organization, but that she would never have allowed it if she'd known Tessa was on the flight with him.\"\n\nI said \"And in fact, she tried to stop the flight. She called in that there was a bomb aboard, but it was not acted upon with sufficient urgency to stop the crash.\"\n\nClarissa: \"Yes, I believe that is true. But the damage was done. I banished Jen from the house and the family, but relented after she divorced her husband. I thought she'd renounced spying for the Red Chinese, but she never really did stop.\"\n\nTeresa asked \"Why didn't you turn her in?\"\n\nClarissa said with some sadness: \"Teresa, did your mother get to hold you before she died?\"\n\nTeresa was surprised by the question, and she thought about it. \"I don't know.'\" she finally said. \"I just know she passed out, and that was when the doctors realized what was happening to her, and it was too late to save her.\"\n\nClarissa nodded, then said \"I hope she did get to hold you, even if it was for just one minute. As I'm sure the Iron Crowbar knows, there is nothing like holding one's newborn baby.\" I nodded vigorously in agreement.\n\nClarissa: \"Maybe I should have turned Jen in. But I kept remembering her as a baby in my arms, as a child growing up. And I always felt guilty about my children's attitudes, that the way they ended up was at least partly due to the all-too-permissive way I raised them. And even when I knew she was involved in Tessa's death, I just couldn't do the right thing. I hope neither of you ever have to make a decision like that...\"\n\n* * * * * * * * * * * * * *\n\nAfter satisfying Beatrice and Eugenia's requests for selfies with the Iron Crowbar, Teresa and I made our goodbyes and drove back towards Baton Rouge. The traffic was a LOT worse, as a great many people were going to the LSU-Auburn game.\n\nAs we drove, Teresa said \"I think Aunt Clarissa didn't tell us everything she knows.\"\n\n\"There's things she can't tell you.\" I said. \"And some things that are best not spoken aloud, as well.\"\n\n\"But you know?\" Teresa prodded.\n\n\"I can't believe you're even asking that question.\" I said.\n\nTeresa gave what was for her a grin, and said \"I think I know now how Cindy feels at times.\"\n\n\"If I'm not telling you something,\" I said, \"it's either because I can't, or it's best not spoken aloud. And you just have to take my word for it that you'll find out when it's the right time for you to find out...\"\n\n* * * * * * * * * * * * * *\n\nWe returned to the airport and turned in the rental car, then took a shuttle bus to downtown Baton Rouge. We visited the Louisiana State Capitol. Instead of a dome, like most State Capitol buildings, Louisiana built a 34-floor tower in the middle of theirs. We went up to the top and enjoyed the impressive view.\n\nTeresa had put on a blue shirt with the Auburn logo in burnt orange over it. Me, I was wearing a red shirt with no logos on it, but it sure stood out in comparison to blue-and-orange and purple-and-gold. We went and toured the campus, then Teresa took us to the 'official' Auburn tailgate party, where big Auburn donors were. They knew Teresa as Todd's wife, and she introduced me as Todd's uncle. I got asked a lot if I was a Georgia or Ole Miss fan, but I assured them that tonight I was rooting for the Tigers. Which Tigers, I did not say. :-)\n\nAs the sun began setting, we headed to the game at Tiger Stadium. Death Valley. Even Bear Bryant (who went 14-2 there) said that it was the worst place for a visiting team to play. I was just loving the SEC college football atmosphere. The stadium held 102,000+ people, and it was packed.\n\nOur seats were amongst the Auburn allotment, so we surrounded by other visiting fans. \"Wow, this is great!\" I said. \"Thanks for bringing me.\"\n\n\"My pleasure.\" replied Teresa. \"I wanted you to see what a real Conference's football games are like.\" I laughed, and had to admit my agreement.\n\nAs the opening kickoff commenced, the Auburn fans around us yelled \"Warrrrrrrr EAGLE! Hey!\" And then it went downhill from there. The LSU receiver took the opening kickoff over 100 yards. As he broke free, the noise level in the stadium just rose and rose until I thought I was going deaf.\n\nAnd it didn't get any better... for the Auburn faithful. LSU had a championship-class team that year, and Auburn did not. At halftime it was LSU 24, Auburn 3. I asked Teresa if she wanted to stay or go.\n\n\"Auburn gets the ball to start the half.\" Teresa said. \"Let's see if they can do anything.\" And they did. The visiting Tigers executed a solid drive against the home team Bayou Bengal Tigers and scored, making it 24-10 LSU. Teresa and the Auburn fans cheered mightily.\n\nAlas, that was their last hurrah. LSU clamped down, and it was 38-10 when we left with six minutes to go in the game. We caught a shuttle bus to the airport, boarded our plane, and settled in as it took off.\n\n\"Well,\" I said, \"it wasn't the best result for your team, but it was a fun trip.\"\n\n\"Yeah, it was.\" Teresa said. Then after a minute's thought, she said \"So you and Jack Muscone are back on good terms? And all is good with Tanya?\"\n\n\"Yeah, I think so.\" I said. \"There's still the rift between Tanya and the Miltons, though. And here's a secret just between you and me: I fully expect Inga Gunddottar to leave the TCPD for another job somewhere.\"\n\n\"Aw, that sucks.\" Teresa said. \"What, just too much baggage here? Or something to do with Jerome Davis?\"\n\n\"All of that, and more.\" I said. \"Anyhoo, maybe things will calm down, we won't have any more riots, and we can get back to what I like doing: solving crimes.\"\n\nTeresa said: \"I'd prefer we just have no crimes for you to solve, and that you'll be twiddling your thumbs at your desk.\"\n\n\"I thought that was your job.\" I said, teasing Teresa. We talked about plans for training and personnel moves, then fell asleep. Neither of us realized it, but events were already set in motion, events that would shake us to our core, and would change the TCPD forever...\n\nPart 33 - Epilogue\n\nSunday, September 27th. Charles the Butler announced Clarissa Belvedere Esterson's visitor.\n\n\"My dear,\" said Clarissa as she hugged her old friend, \"I haven't seen you in ages! What has it been, twenty years? Twenty-five?\"\n\n\"Something like that.\" said the guest, whom Clarissa had sit down in the drawing room. Coffee and Bessemer Cookies were served. \"It's wonderful to see you again, as well, Clarissa.\"\n\n\"You don't look hardly a day older than the last time I saw you.\" said Clarissa. \"But good genes always ran through your family.\"\n\n\"I think you're right, to some extent.\" said the guest. \"I am so sorry for the imposition of visiting you with such short notice, but there are a couple of things that I must discuss with you.\"\n\n\"Oh, think nothing of it.\" Clarissa said. \"I get so few visitors these days, and it's wonderful to see you. And... not unexpected, to tell the truth.\"\n\n\"Ah yes, of course.\" said the guest. \"So, how much came out? And what does the Iron Crowbar know?\"\n\n\"Nothing came out, especially about the Old Mother, which was my deepest concern in all this.\" said Clarissa. \"Her secrets... and yours... appear to be safe. As to what the great Iron Crowbar knows? Well, I do believe he knows a great many things. He should've been a CIA Officer, like my husband.\"\n\n\"And like you were, yourself.\" said the other woman. \"And it wasn't for lack of trying on the CIA's part to bring him into the fold. But... it worked out for the best, I suppose.\"\n\n\"Yes.\" said Clarissa. \"He is a wonderful young man. My niece Teresa practically worships him. And my young great-nieces were awed to meet him.\"\n\n\"Oh I agree.\" said the guest. \"And speaking of good genes, his firstborn daughter is going to be even greater than him, if I don't miss my guess.\"\n\n\"Yes, he turned out well, unlike my own disasters of my children.\" Clarissa said. \"You should be very proud of your son.\"\n\n\"Oh, I am. I'm very proud of my son.\" said Phyllis Troy...\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "crime drama",
        "police drama",
        "mystery",
        "iron crowbar"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/big-in-japan-ch-05"
}