{
    "title": "Blueprints Ch. 03",
    "pages": [
        "Authors Note:\n\n\u2022 Thanks to LesbianChickLit for editing (I added c.1,000 words post edit)\n\n\u2022 Please let me know what you think of Chapter 03. I'm eager to learn and the feedback helps me know where I'm going right and, more importantly, wrong.\n\n\u2022 We pick up things a mere hour or two from where Chapter 02 ended. \n\n\u2022 Enjoy!\n\nA quiet, throaty murmur escaped her lips as the unconscious young woman's hips rocked with the seemingly faux pleasure. She'd fantasised about this often enough, but dreaming about it was another thing. However, given how they'd spent the early hours of the morning, surely a dream of this nature was inevitable.\n\nZara could feel herself stirring in that twilight phase of sleep, yet was determined not to rise from the delicious slumber. She didn't want to wake, didn't want to disturb the apparent sensation of soft hands holding her hips, hot breath on her moist folds. \"Please.\" She murmured, a crease forming across her usually smooth brow. She couldn't wait, needed to envisage Joanna's mouth on her before she awoke.\n\nA slender hand snaked down her body and into the short hair of her assailant. It was Zara's dream; seemingly she felt she could take control. Her grip tightened and in a quick, sure motion that face was on her, almost in her, \"Joa-\". Smack! \n\nDark eyes flew open with a sharp intake of breath. Her mind took stock of the situation; the side of her thigh was stinging, she was in a dimly lit, unfamiliar room and... it hadn't been a dream. Long legs flailed her up the bed into a sitting position. \"Would you calm down! You almost kicked me, never mind broke my nose.\" Joanna snapped, her glistening face appearing from under the sheets.\n\n\"I'm sorry.\" Zara stammered, her heart thudding as Joanna muttered that she had just been trying to do something nice. \"I thought.\" She swallowed, \"I thought it was a dream.\" She admitted, embarrassed by the stupidity of the revelation.\n\nJoanna's face softened slightly as she looked at the girl's confused expression; her deep green eyes flickering in the soft light. \"I suppose I should be flattered that you might dream about me.\" She sighed, making her way back up the bed, stripping the rest of the covers from Zara's naked body as she prowled.\n\nEvidently, the older woman had taken a shower; her short blonde hair was damp and her fresh fragrant body was naked were it not for a plush white towel. \"However, dreaming or not,\" She said in a lower tone as she guided the young woman to lie back, Zara's head resting amongst the pillows once more. \"You never, ever,\" Joanna moved down with her, slick lips millimetres from the brunette's, \"attempt to force me to do anything. Got it?\"\n\nZara nodded, a renewed electric current coursing through her body. \"Yes, Joanna.\" She replied hoarsely, barely finishing the agreement before Joanna kissed her fiercely.\n\nShe was pushed into the mattress as Joanna moved, knees on either side of Zara's waist as she was gracefully straddled by the dominant woman. The brunette shuddered, not only could she taste herself as their mouths clashed, but she could feel Joanna's bare sex pressing into her abdomen; the warm, damp sensation causing her stomach to convulse, pushing her skin into Joanna's. The older woman clearly enjoyed it, moaning quietly in response as she bore down on her accomplice.\n\nThe Professor wasted no time roaming her hands over the young woman, slender fingers grazing down the outside of Zara's thigh. Now Joanna had drawn attention to the area, she could feel the heat rising from where she'd been disciplined. \"It's a bit warm, isn't it?\" Joanna purred, pulling her mouth from Zara, who instantly trailed her lips along the older woman's strong jawline, moving towards her ear.\n\n\"Mhmm. Will you kiss it better?\" She breathed, before flicking her tongue over the lobe.\n\n\"You sure you wouldn't like my mouth somewhere else?\" Joanna asked and without waiting for an answer trailed her tongue lazily across Zara's full lips. The premonition caused the young woman to moan loudly as she felt a shockwave bang between her legs. \"Is that a yes?\" She smirked.\n\n\"Yes, please.\" Zara gasped as Joanna began to trail down her body.\n\nThe young woman was once again squirming under her assailant, who's mouth and hands paid a lot of attention to her breasts, leaving them crinkled and glistening before continuing the descent.\n\n\"You could wash clothes on this.\" Joanna mused, running smooth hands over the young woman's stomach. Her mouth followed suit, leaving a damp trail before dipping her tongue into Zara's navel.\n\n\"Jesus, Joanna.\" She gulped, fingers running through the woman's short damp hair as she repeated the wet swirling motion with more intensity.\n\nShe felt near enough worshiped by the way Joanna was distilling pleasure on her body. No one had ever given her attention like that. Pushed buttons that Zara didn't even know she had. Taken so much time to make her feel that good, that on fire.\n\nLightly tanned thighs shifted apart in response to the burning touch moving up the inside of her leg. \"Wider.\" Joanna instructed as she knelt between Zara's trembling legs.\n\n\"Zara, I want you to look at me.\" Joanna demanded.\n\nTheir eyes locked as she propped herself on her elbows, watching in anticipation whilst Joanna shifted between her legs before breaking eye contact to admire her. \"You're beautiful.\" She purred, glancing back to the girl and giving her a reassuring look before moving to stroke the velvety folds.\n\nZara was by no means a prude, however she couldn't imagine allowing anyone to unapologetically explore her the way Joanna was. Then again, she couldn't remember anything more sensual than completely baring herself to the woman. This was clear by her arousal that quickly coated Joanna's fingertips.\n\nEventually, she felt it, that slight pressure and let out a short, \"Ahh.\" as the Professor entered her. Zara's eye's fluttered shut and her hips rocked automatically with her assailant's slow, twisting fingers.\n\n\"What are you doing?\" Zara's dark eyes snapped back to Joanna who was looking at her pert breast, obscured by her own palm. Zara muttered an apology and retracted the unruly hand. \"I didn't say stop.\" Joanna scolded, however the frown was quickly replaced by a sly smile as Zara comprehended, slender fingers returning to toy with the herself. \"Pinch your nipples for me.\" Joanna breathed. Zara did so, wincing and bucking in pleasurable pain as Joanna's two fingers continued to work her pussy. \"And the other one.\" Joanna guided, nodding to the left breast. Zara complied, fingers tweaking as she flinched under her own assault. \"Good girl.\" Joanna husked.\n\nThen, for no good reason, she retracted her soaking fingers, causing the architect to groan in frustrated annoyance. Joanna smiled at her, eyes glinting, clearly enjoying the tease. \"One more time.\" She ordered, nails grazing lightly over Zara's smooth thighs.\n\nZara's fingertips went pink under the pressure and she let out a throaty cry as Joanna thrust her fingers back into the unsuspecting young woman. She choked on a curse, feeling like the air had been, literally, fucked out of her. The sensation was intense, however, for every ounce of discomfort, the pleasure she felt was a heady sensation Zara had most definitely been craving.\n\n\"You did well.\" The blonde purred as she kissed her way up Zara's stomach to her heaving chest. \"Do you like a bit of pain Zara?\" Joanna asked before her mouth descended to bathe the sensitive areas with gentle laps of her tongue.\n\n\"Uh huh.\" The young woman panted in a low tone, hips grinding into Joanna's fingers. \"With... with you I... Oh God.\" She hissed through gritted teeth as Joanna expertly teased the sensitive flesh. \"Yes, I do.\" She finally managed. Lust fuelled intrigue lit Joanna's face, however Zara could not appreciate the alluring expression for long as Joanna moved quickly back down her body.\n\nZara's imagination hadn't lived up to anything near the exquisite sensation of Joanna's mouth between her legs. The way her tongue slowly, expertly, navigated around and in the young woman's folds, as if trying to taste ever inch of her, was like nothing she could have imagined. It was, intimate, exciting, maddening; drove her to a whole new level of pleasure and she couldn't help but react to every lap of her companion's tongue.\n\nHer body quaked as Joanna's mouth ran up and down her outer and then inner lips, spreading the arousal and saliva everywhere she traced. Once satisfied she'd tasted every inch of the girl, Joanna took Zara's lips into her mouth in a fashion akin the fierce kiss she'd imparted earlier.\n\n\"Oh Jesus.\" Zara gasped, arching her back as she felt Joanna trail her mouth down and then probe her dripping entrance. She cried out something inaudible as the woman's tongue moved inside her, lapping at her walls as Zara, surely, gushed onto the her face.\n\nNot that Joanna seemed to mind, she wrapped one hand around Zara's tensing thigh, the other sought blindly for the brunette's hand. Feeling the digits, Zara released the bedding and interlinked her finger with Joanna's instead.\n\n\"Yes! Yes! Yes!\" Zara squealed as Joanna, groaning whilst she did so, used the new purchase to fuck the girl with her tongue. With each thrusting motion, Joanna's nose brushed against Zara's clit, edging the young woman towards the proverbial cliff.\n\n\"Please, Joanna. I need to... I'm going to... Please?\" She gasped, eyes screwed shut, knuckles white.\n\n\"Just a little longer.\" Joanna gasped, glancing at her victim, lust ablaze on her soaked face.\n\nHad Zara been a crier, both the break in the pleasure and denial may actually have caused her to do so. \"Come on, Joanna. Please.\" She begged.\n\nChoking back a scream, Zara felt Joanna oblige, pushing two and then three fingers into her wetness, filling the young woman's narrow canal. She couldn't take anymore, surely; no more teasing, no more pleasure, no more fingers. \"Joanna!\" Zara's back arched again, pushing her delicate ribcage to the surface of her now pale skin as she felt three fingers move in and out of her in a slow, yet deliberate pace.\n\n\"Fuck. Fuck me. Please.\" Each syllable bawled an octave higher than the last as Joanna's pace quickened.\n\nJust as Zara thought she might explode, Joanna pressed her tongue down onto her clit. The bundle of nerves twitched uncontrollably, long toned legs momentarily rigid before she descended into a leg trembling, stomach jarring climax. Zara's whole body shook as she repeated Joanna's name over and over again; begging her not to stop whilst spasming muscles pulled the woman's fingers deep inside her.\n\nFar from stopping, Joanna continued to move her mouth and fingers so that just when Zara thought she was coming down from the impossible high, she was thrown back over once more.\n\nThe young woman had no idea how long she convulsed as Joanna steered her through the most powerful climax she'd ever experienced. How was that even possible, given what the woman had instilled on her mere hours earlier?\n\nEventually, when the stimulation proved too much, she gently encouraged the blonde head from between her shaken legs as she lay, wracked and glistening.\n\n\"Just relax a second, Darling.\" Joanna assured as she moved back up the bed. Zara winced, a pained crease forming on her forehead as she felt Joanna ease her digits from deep within her. \"That's it.\" She encouraged.\n\nOnce her breathing had calmed and some steadiness returned to her, Zara turned on her side to look at Joanna whose hand tenderly brushed the young woman's cheek before creeping into her hair.\n\n\"You alright?\" She asked, that stoic face slipping into an expression Zara had yet to see.\n\nA lazy, satisfied smile spread across Zara's beautiful face and she nodded.\n\nThey exchanged looks, searching gazes, that were far too intimate to be imparted on a first night. However, the young woman didn't care, she was getting to take in details of that flawless, shining visage. Zara had never seen anyone quite so captivating.\n\n\"Are we just going to stare at each other like idiots?\" Joanna asked, that warm smile growing to split her face.\n\n\"Fine by me.\" Zara smiled, moving her body into Joanna's and draping a leg over her towel clad hip as she diligently kissed the arousal from her companion's face.\n\n\"Stop it.\" Joanna groaned, hands intertwining with Zara's tousled hair. \"I definitely won't be able to let you sleep if you carry on like this.\"\n\n\"I don't want to sleep.\" Zara replied, a playful expression flitting across her face.\n\nTheir mouths met, tongues clashing once more as the young woman pushed against Joanna. She pushed back, but in Zara's enthusiasm she overpowered her.\n\n\"What are you doing?\" Joanna breathed, bemused.\n\n\"What do you mean?\" Zara frowned, gazing down at her, those stark green eyes clearly weighing something up.\n\n\"You're on top of me.\"\n\n\"That's the idea?\" Zara replied, her turn for, albeit uncertain, impatience.\n\n\"I don't think-\" Joanna started to say in disbelief before Zara silenced her with a press of her lips.\n\n\"I know you're the boss. Just let me find my feet. Please?\" She murmured, dark hair cascaded over her shoulder as she attempted to kiss away any trepidation.\n\n\"Fine. But you do as you're told.\" Joanna conceded, nails trailing warningly down Zara's back before the young woman felt the sting as her palm connected with her backside.\n\n\"Yes, Joanna.\" She winced, butterflies flitting through her stomach. She wanted to make Joanna feel good, feel the way she had felt. The bar had been set at an unreachable level, but God loves a trier.\n\nThe young woman took her time on the descent, near enough covering every inch of the Joanna's angular jaw, slender neck, and collarbone that jutted so perfectly. Reaching Jonna's contracting chest, still encased in the towel, Zara sat up, her ass grinding down onto Joanna's pelvis and she smiled coyly as she felt the motion being returned.\n\nBiting her lip, dark eyes flitted from the deep green of Joanna's and down to the slight swell of her breasts at the towel's boundary. Dexterous fingers moved towards where the ends of the fabric were tucked together and just before she tugged at the knot, Zara looked back to the Professor who gave a subtle nod. Slowly, she peeled the material from Joanna's torso.\n\nThe young woman marvelled at the porcelain smooth skin, a touch softer than her own, but not by much. Fingers trailed lightly down the hollow between Joanna's chest, to her pale stomach and back up to that soft spot under her breasts. As she caressed her there, Joanna let out a soft sigh before taking the girl's hand and guiding Zara's fingers to her own mouth. She directed the now slick digits back to her chest, encouraging Zara to caress her nipples.\n\nHaving helplessly watched the display, Zara could feel her arousal trickle down her thighs once more, but gave herself a shake. This was about Joanna. She gently toyed with the woman's pebbled chest, moving her thumb around and across the nub, enjoying Joanna's reaction.\n\nZara had learnt an inordinate amount in the past few hours, the most important lesson being that the two women would touch each other in completely different ways. So, she continued to gently play with Joanna's breasts only venturing to intensify the contact as Joanna's moans became louder. Zara leant forward again and kissed her companion; a slow sensual embrace as her fingers trailed onto Joanna's other breast and, to her delight, the handful was pushed up into the young woman's wanton hand.\n\n\"I want your mouth on them.\" Joanna growled into Zara's ear before catching the lobe in her teeth.\n\nInstantly obliging, Zara shimmied down the slender figure so her mouth was in line with the Professor's nipples. However, before she could bring her mouth to them, Joanna had balled Zara's silky hair in her fist, guiding the girl to the desired spot.\n\nInstinctively, Zara's tongue swirled over and around the pebbled skin, pleased when she heard the older woman emit a moan of pleasure. She repeated the process on the opposite nipple as her fingers continued to stimulate the vacant area.\n\n\"Suck them.\" Joanna breathed hoarsely and Zara felt her writhe deliciously beneath her as she obliged.\n\nOnce she'd contented herself with Joanna's breasts, a combination of inexperience and enthusiasm saw Zara's mouth and hands roam over every available inch of the older woman's body: the indent of the elbow, bump on the wrist, the base of her ribs. Not that she seemed to be doing a bad job, Joanna had lessened her firm grip of Zara and was slowly starting to lose herself.\n\nThe young woman crept further down Joanna's almost naked body, marvelling at its contours and the soft smooth texture. Either by chance or design the towel still covered her pelvis and tops of her thighs. Zara went to remove the material but pulled up; she'd waited this long, what was another few minutes? Someone had recently enlightened her to the concept of anticipation.\n\nHer eager mouth trailed down Joanna's slender legs, long legs, legs that just kept going. Zara kissed the inside of her thighs, teeth grazing the inside of her knee before trailing her tongue all the way down Joanna's toned calf, to the jut of her ankle. This earned her another throaty moan and she was about to work her way back up, lost in the trance of pleasuring Joanna when her reverie was disturbed. \"I need your-\" The woman began hoarsely before clearing her throat. \"I want your mouth, Zara.\"\n\nZara complied, a proud, troublesome grin spreading across her full lips as her hands ran up those smooth soft thighs before coming to the sliver of towel. Taking a steadying breath, the girl stripped the white material away. \"My God.\" She breathed, gazing down at the naked woman before her, drinking her in as Zara's hands slowly caressed the top of her thighs. She was perfect.\n\nAs her fingers took their time in reaching between Joanna's now open legs, Zara's brain whizzed at a million miles an hour as a stomach jolting thought hit her. The brunette's months of fantasising and intrigue had all centred around Joanna pleasuring her, getting her off. Selfishly, Zara didn't have a grand plan for returning the favour.\n\nThe troubling thought must have shown on the girl's pretty face, for Joanna pushed herself up onto her elbows. Zara winced at the movement, she didn't want to be scolded, not right then. \"What's wrong Zara?\" She asked softly.\n\n\"Oh, eh, nothing.\" Zara frowned, eyes firmly on the prize which she hastily moved her hand towards. However, in an impressively quick motion, Joanna's stomach muscles contracted and she sat up, catching the girl's hand before it reached her.\n\n\"Come here.\" Joanna instructed in a surprisingly gentle tone, her free hand wrapping around Zara's shoulders, pulling the two women close before reassuringly kissing the young woman's lips. \"Tell me what's wrong.\"\n\nShe must be made of stone, Zara thought to herself. Her hand was mere inches from Joanna's folds and the way their bare torsos pressed together was causing her ripples of pleasure. Zara swallowed. \"I, eh, I.\" She stammered. \"I mean I've done it before.\" She said quickly, \"But I, I was drunk. Didn't really care if... Care if, you know,\" She took a steadying breath and her eyes reluctantly met Joanna's. \"I just want to be good at it.\"\n\n\"You already are.\" She encouraged before guiding Zara's hand into her wetness. Their mouths locked again and Joanna pulled the young woman with her as she fell back into the bed.\n\nIt was a true oversight on Zara's part having not fantasised about pleasuring Joanna. The way the woman's naked body moved under her explorations and the noises she emitted intensified the young woman's own arousal. But no, this was about Joanna and now that her fingers had taken in the contours and folds, Zara moved towards her opening.",
        "The young woman's tight body descended, mouth level with Joanna's chest once more. Her tongue flicked around and over the older woman's nipples before taking the sensitive skin into her eager mouth and sucking with a touch more intensity than before.\n\nJoanna took a sharp intake of breath, pushing herself into the brunette's mouth. \"Would you hurry up and put your fingers in me!\" She snapped, reminding Zara that her hand had been toying with the woman's sex before she'd lost herself in Joanna's tits.\n\nPushing her middle finger into her companion, it was Zara who groaned; the sensation of the digit slipping in and out of the warm wetness was amazing, akin to dipping one's fingers into warm honey. Just thinking about how it must look, made her own folds twitch. Realising she could see for herself, the young woman descended at a much quicker pace than before.\n\nLying between Joanna's legs, Zara marvelled as she watched one then two fingers slide in and out of the Professor, whose hips were now matching the steady pace Zara's hand had set. The sight of her coupled with the intoxicating aroma was too much to resist and, without a hint of the earlier trepidation, the young woman locked her lips around Joanna's clit.\n\nThe architect smiled inwardly at the sound of Joanna's ragged gasp. She sucked on the hard nub, feeling it swell under her manipulations. Curious, she changed tack and swirled her tongue over the bundle of nerves. This caused Joanna's hips to grind into her mouth. Interesting. The young woman contented herself in the numerous ways she could stimulate the bead: horizontal motions, vertical ones, flicks that concentrated to the left, the right, grazing her t-\n\n\"Zara, for Christ's sake!\" Joanna tried to scold, but to the young woman it sounded an awful lot like a plead. However, the smugness was literally wiped from her face as the older woman's grip entwined in her hair and in a reversal of roles it was the young woman's pretty face that was thrust into Joanna's folds.\n\n\"Keep going with your fingers.\" Joanna instructed.\"That's it. Faster. Faster.\"\n\nZara complied, the pace of her fingers quickening. With the way her face pressed so deliciously into Joanna, her tongue bore down roughly on her clit.\n\nJoanna was close, Zara could feel her start to shake, but, knowing how good it felt to teeter on the precipice, Zara did not instantly intensify her actions. Despite Joanna's ragged curses, she lessened her assault. However, she was only brave enough to do so for a moment before the low growl the Professor emitted encouraged her ramp the pace back up.\n\nThen she felt it, that twitch under her tongue, the tremble of the woman's thighs against her head. That was the signal Zara had been waiting for and she curled her slender fingers, moving them in a strong \"come hither\" motion against that oh-so-sensitive spot. The pleasure intensified as Zara increased the pressure of her tongue upon Joanna's jolting clit\n\n\"Yes, Zara. Just like that. Yes!\" Joanna encouraged through gritted teeth whilst Zara felt her spasm.\n\nWith the exception of the encouragement, the sharp breaths, and the odd throaty noise, Joanna was climaxing quietly, however this didn't discourage Zara who could feel her tight walls contracting around her fingers, pulling her in as if Joanna craved her.\n\nZara's free hand hooked around one of Joanna's trembling thighs as Joanna's iron grip pulled her face, somehow, further into her gushing folds. Instinctively, the girl consumed what she could, savouring the taste of her companion as she lapped.\n\nMaddened by the blonde's surprisingly strong climax, Zara eagerly maintained her assault on Joanna's sex; continuing to lick and kiss and finger her. The fact she had made this usually reserved, collected figure spasm and curse was a revelation, an enlightened addiction.\n\n\"Darling, I said I'm done.\" Joanna repeated and Zara felt her head being pushed from between those quaking legs in an attempt to break the young woman from her new-found skill. She panted an apology and carefully removed herself from the woman who shuddered as she did so.\n\nZara felt heady, breathless and shook with adrenaline as she moved unsteadily back up the bed before collapsing unceremoniously beside her wracked companion.\n\nThrough dark glinting eyes Zara watched Joanna as she lay on her back, eyes unfocused, gasping for breath. She took in the flexing muscles of her neck, her beautifully unkempt hair and the contracting of her modest chest. Maybe she wasn't quite so scary.\n\n\"What are you smiling at?\" Joanna asked eventually, turning to look at the girl.\n\nThey regarded each other momentarily. \"That.\" Zara beamed, eyes a blaze, \"Was a lot of fun.\"\n\n\"You, my Darling, are totally shameless.\" Joanna panted, shaking her head in amusement.\n\n\"How so?\" Zara replied, incredulous.\n\n\"Feigning you are some kind of novice and then pulling that out of the bag.\"\n\n\"So it was good?\" Her slender arms flexing as she pulled the duvet up and over them.\n\n\"You know it was good. I told you you were a minx.\" Joanna replied, turning on her side and playfully prodding Zara's shoulder. The young woman didn't even try to hide her sense of achievement as she cocked an eyebrow. \"See, shameless.\" Joanna smiled and pulled her close.\n\nThey kissed again, not in the same ferocity as before, but that wasn't needed to generate a further ripple of want within the young woman as their bodies slotted, quite perfectly, together.\n\nZara's hand trailed down Joanna's back towards her- \"I don't think so.\" Joanna scoffed, reaching back to catch the straying fingers as she did so. \"Its-\" She reached over Zara to the bedside table for her watch. \"Jesus, Zara it's almost five!\"\n\n\"Time flies.\" The young woman smirked.\n\n\"Again. Shameless.\"\n\n***********************\n\nAlthough the glow which emitted from the curtained window was minimal, Zara could tell it was late in the morning as she finally roused. Hardly surprising, it had taken her whirring brain some time to ease whilst the young woman attempted to process things.\n\nSweeping errant strands of dark hair from her face, Zara turned to Joanna, unable to control the sleepy smile which spread across her full lips as she did so. However, the space was vacant and, to her bemusement, the section of bed where Joanna had slept was made as neatly as possible given Zara still occupied the space beside it.\n\nZara sat up, long hair cascading down her bare back as she took in her tasteful surroundings. Like the rest of what she'd had seen of the house, someone had done a marvellous job modernising the well appointed room. The cornicing on the high ceiling was richly detailed and the large bay windows framed in original wood, albeit now painted an off-white colour to complement room's neutral tone.\n\n\"Are you looking for something?\" A smooth voice asked from the doorway.\n\nShe didn't quite jump, but Joanna's presence certainly caught her off guard. \"It's a nice room.\" She commented, adjusting the white sheet around her naked body as she watched the woman slink towards her. Joanna made a noncommittal noise and placed a cup of coffee on the bedside table.\n\n\"I guessed white, no sugar.\" Joanna smirked, clearly confident she was correct.\n\nZara nodded, of course she was right. \"How about you? Black, preferably espresso?\" She guessed.\n\n\"Very good. Espresso if I'm out for dinner. Plain black if I'm making it in the house, spot of cream if I'm being decedent.\" She commented, raising a neat eyebrow.\n\n\"Now you've finally surfaced, en suite is there if you'd like a shower before brunch.\" She pointed to a door to the right. \"There's towels, everything you need and, as much as I'm happy for you to walk around naked,\" That increasingly familiar wicked glint tinting her green eyes, \"There's a robe on the back of the door you can wear.\"\n\nZara thanked her and received a brief, but tender, stroke on the cheek before Joanna turned on her heel and walked back towards the door. \"Oh, I almost forgot.\" Her hand went into the back pocket of her jeans as she turned to the young woman once more. \"This,\" She handed Zara her mobile, \"Has been vibrating all morning. If you need to be somewhere quickly I can drop you off. Just let me know.\" But she didn't wait for a response before exiting, leaving Zara staring somewhat dumbfounded at the now closed door. Joanna had the efficiency of military personnel. Not that it surprised her greatly, but it was Sunday; day of rest and all that.\n\n\"Bloody hell.\" The brunette muttered, having turned her attention to the device. For one thing she'd slept until almost one in the afternoon and for another, she had at least ten messages and half as many missed calls. Taking a sip of coffee, she quickly replied to the group chat message, apologising that she wouldn't be able to play football that afternoon, putting it down to a wild night; no false truth there. Of course, Steve was the culprit of the other, lately irate, correspondences.\n\nSteve, 23.48: How did it go? xxx\n\nSteve, 00:43: Getting quite late for a dinner party. There must be details...\n\nSteve, 00:49: Care to share them?!?!\n\nSteve, 01:02: OMG! Maybe you're not in a position to share them... ;)\n\nSteve, 01:04: I bet you were a proper pillow princess\n\nSteve, 09:26: The menage a huit better have been worth ignoring me for. What happened?\n\nSteve, 09:48: Could you at least let me know you haven't been Ted Bundied!\n\nZara, 12:53: Sorry!! I'm alive!! Will call you later. Can't speak just now. Phone about to die. Sorry again x\n\nAlmost instantly the phone vibrated with an incoming call, but she ignored it. The last thing she wanted to do was recount the evening whilst Joanna might be in earshot. Furthermore, although Joanna hadn't ordered her to get out of bed, Zara could sense the firm encouragement to do so; the young woman's intimidation had not evaporated overnight. So, with the steaming mug of coffee in hand, she padded to the bathroom and, true to her host's word, down to a cellophane wrapped toothbrush, there was everything she needed to emerge refreshed twenty minutes later.\n\n\"You look revived.\" Joanna commented from the counter where she was slicing an artisan loaf.\n\n\"Yeah.\" Zara smiled, moving to the opposite side of the marble work surface. \"That's some shower.\"\n\nThe young woman didn't need to be a mind reader to see the thought that flashed across Joanna's mind as she agreed, eyes trailing up Zara's trim torso, an eyebrow twitching as she finally reached the girl's dark eyes. Under the luxurious robe, Zara felt a shiver ripple through her; any hope she had of playing it cool began to evaporate.\n\nThe young woman's feigned serenity was further shaken for she was in unchartered territory. Zara hadn't gone home with anyone in a long time and on the occasion that she did, was not inclined to stay the night. Of course, Joanna was different in many ways; aside from the fact she had feelings, strong feelings for the woman, Zara had not awoken with a sinking feeling of regret. Instead, she'd awoken surprisingly relaxed, particularly when one considered her tense state the previous evening. Furthermore, she was in pleasant surroundings with a host who was offering more than last night's kebab and a quickie for breakfast. Let's put encounters such as those down to inexperience, she told herself.\n\n\"Set these on the table and then take a seat.\" Joanna instructed, bringing her back to the present and handing her bowls and cutlery. Even their fingers brushing together caused that quiver to reach new places.\n\nZara did so, adjusting the neckline of the dressing gown to maintain at least some level of decency. The garment seemed to have a life of its own; every time the young woman moved some part of her seemed to fall from the white confines. She had no desire to, oh hell part of her had every desire to, expose too much skin. Particularly when Joanna was conservatively dressed in a pair of dark jeans and long sleeved t-shirt, the ensemble hugging her slender frame.\n\n\"Help yourself.\" Joanna encouraged, sitting a plate of toast on the table, her fingers lightly caressing Zara's damp hair as she asked her if she wanted another coffee.\n\n\"Sure, thanks. But, can't I help you with something?\" Zara offered, pleasantly surprised by the affectionate touch.\n\n\"No.\" She said simply. \"Read the paper.\"\n\nZara complied, their shared evening hadn't reversed her urge to obey Joanna's instructions, that and there was a pleasant domesticity which came from reading the Sunday newspaper. Pulling the pink paged broadsheet towards her, Zara read the headline aloud, \"Brexit talks are at a standstill, warn diplomats.\" The women groaned simultaneously.\n\n\"Maybe don't read the paper.\" Joanna sighed, sitting down beside the young woman.\n\n\"It's so dull, isn't it?\" Zara commented, nodding towards the headline as she spooned mixed berries into two bowls.\n\n\"Yes and no.\" Joanna shrugged, pouring them coffee. \"They make it sound incredibly boring in the hope that we all switch off so legislative changes can be shoehorned in whilst we all think there is no progress. Thank you.\" She added, pulling the bowl towards her. Despite the interest on Zara's face, it appeared that Joanna had no desire to continue down this rabbit hole. \"Anyway, this is creeping dangerously close to work chat.\" She said spooning Greek yoghurt into Zara's and then her own bowl. \"How do you usually spend your Sunday?\"\n\n\"Thanks. Eh, well.\" Zara hesitated, picking up a spoon. \"It usually depends on how I spent Saturday night.\" She confessed with a guilty smile.\n\n\"Ah. Do you go out a lot?\" The older woman asked casually.\n\n\"Not every weekend.\" She assured. \"It usually comes in bursts; birthdays and other celebrations. Then there's work, we are quite a social bunch. So is yours? You were out with colleagues when I met you at that place on Rose Street.\"\n\n\"Well remembered and no, not too sociable.\" She shook her head and with a wry smile continued, \"I work in academia Zara. Not a sector known for its frivolity. I mean, there's a group of us who haven't resigned ourselves to the idiosyncrasies which seem to plague professors, but on the whole it's quite quiet.\" Joanna sighed, spreading a thin layer of butter on a piece of toast. \"So on the rare Sunday when you're not hungover, what do you do?\"\n\n\"I'm not always hung-\"\n\n\"I'm teasing you.\" Joanna reassured.\n\nZara, feeling a little foolish, smiled in relief. \"Oh ok. Good. Erm, I've been running quite a bit and at weekends I try to go out into the hills, find some trails if I'm feeling fresh enough.\" She confided modestly. \"But I have a friend, the guy who was responsible for my phone going off all morning actually, who's doing a sponsored cycle in Asia so I've been helping him train. It's quite fun, but I feel I'm just there to make him feel really good about himself as I try to keep up.\"\n\n\"Nonsense.\" Joanna frowned. \"As someone who's seen you naked you can't pretend to me that you're not extremely fit.\" Zara opened her mouth to stammer a response as colour rose in her high cheeks. \"What? You can't deny it.\" Joanna continued, her amusement growing at the young woman's expense.\n\nZara gave her a rueful look, shaking her head. \"And you said I was shameless? Anyway.\" She continued before Joanna, with her razor wit, could reply. \"You must be pretty active too?\"\n\nThe older woman made that noncommittal noise again, accompanied by a shrug. \"It's all the green tea.\"\n\nZara scoffed. It hadn't gone unnoticed that every time the conversation swung towards Joanna she deflected it with a quip or a question. \"Come on.\" She persisted, \"You must have a regime?\"\n\n\"Not really.\" She replied crossing her long denim clad legs under the table, knocking Zara's foot as she did so. \"Sorry. But no, I just do whatever I feel like; if I want to go for a jog, I do it. If I feel like going to yoga, I go. I used to ride; now that, when done properly, keeps you in shape.\"\n\n\"Do you still do it?\" Zara said, a bit too eagerly as a sudden image of Joanna in a pair of tight cream jodhpurs and long boots flashed through her mind.\n\n\"Why?\" Joanna asked skeptically.\n\n\"No reason.\" Zara shrugged, taking a drink of her coffee.\n\nA suspicious look flickered across Joanna's flawless face as she moved the conversation along. \"So apart from running up hills and drinking.\" She flashed the younger woman a taunting smile, \"What else do you like doing?\"\n\nAmongst other things, reading. Reading is what Zara liked and, quite unsurprisingly, so did Joanna. \"I just started Fishnet by Kirsteen Innes.\" The young woman replied excitedly, \"It's about this woman from Glasgow whose sister goes missing and she thinks she might be working as a prostitute. I can sort of see where it's going, but it highlights a lot of issues around the legalities of the trade.\"\n\n\"Interesting. If it lives up to your standards, you'll need to lend it to me.\"\n\n\"Absolutely.\" Her pretty face lighting up, envisioning this as a way to see the woman again in an unprofessional capacity. Her dark eyes danced with Joanna's who looked to be battling with a grin.\n\n\"What about you? What are you reading?\" Zara asked, saving Joanna from her uncharacteristic emotion.\n\nThe question had the desired effect and allowed Joanna to control her broad smile. \"Oh, I've been at page sixty-four of Women Who Run with the Wolves for God knows how long. If, when I finish it, I'll lend it to you. You'd love it.\"\n\n\"Thanks, sounds like quite the page turner.\" She teased.\n\n\"Ah, no. No, I'm on research leave, or at least that was the plan. However, a colleague in the department left unexpectedly, so I've picked up a class and her PhD students. One of them is no work but the other,\" Joanna's expression said it all, \"So, any time I have to read needs to be focused on the book.\"\n\n\"You're writing a book?\" Zara said, mimicking surprise. Edinburgh University liked to boast about their faculty and Joanna McKenzie, Professor of Corporate Law, Deputy Head of School, as the web page read, listed the woman's publications and ongoing projects.\n\n\"Yes. Are you finished?\" Joanna asked, diverting the conversation once more.\n\nZara looked up at the now standing woman; she went to press Joanna on her work, but thought better of it. \"Yes, thanks.\" She confirmed, shifting to rise from the table.\n\n\"Relax. You're the guest.\" Joanna instructed, pressing a hand firmly on the girl's shoulder to keep her put.\n\nThey regarded each other in an almost magnetising stare. Zara could feel the colour rise in her cheeks and glanced away, only to have Joanna's slender fingers guide her gaze back. A heat began to rise in the young woman, that ripple in her stomach intensifying.\n\nA smooth smile pulled at Joanna's lips as she moved her thumb to the corner of Zara's mouth before rubbing the pad across her lips. Zara felt the soft skin yield and obscure momentarily as Joanna swept away a trace of strawberry preserve.\n\nZara couldn't help it; she let out a quiet throaty noise as Joanna brought her thumb to her lips. The way she looked down at her as she sucked, the raise of an eyebrow, the twitch of her lips, everything, had Zara's centre spasm. Her reaction exacerbated by the realisation that the Professor knew exactly what she was doing to her.\n\nSeemingly, however, Joanna had no intention of acting upon the arousal she'd just instilled on the girl. \"Go and sit in the front room whilst I clear up. You'll be more comfortable.\" She instructed, picking up plates and taking them to the sink.",
        "\"Don't tell me, I should read the paper?\" Zara replied, hoping comment didn't sound laced with her frustration.\n\n\"Good idea, Zara.\" Joanna smirked. \"There's an interesting skiing supplement.\"\n\n\"I snowboard.\" Zara challenged, gathering up the broadsheet and her coffee as she stood.\n\n\"And here was me thinking things were going so well.\" Joanna sighed wistfully.\n\nConsidering Zara had entered Joanna's home more wound up than a virgin, she felt surprisingly at ease reclining in one of the mid-century sofas which occupied the living room. Her fingers absentmindedly caressed the rich grey velvet as she skimmed the article Joanna had suggested. She shifted in the couch and the fickle material slipped from her crossed legs yet again. She sighed and gave up the attempt to cover herself.\n\nHer dark eyes moved from the review of a luxurious resort in Aspen to the doorway where Joanna had, by the looks of her stance, been watching her for sometime. Her tall flawless figure leaned against the frame, slender arms crossed over her chest. The pair momentarily consumed one another as that delicious anxiety started to rise within Zara once more.\n\nPeeling herself from the doorframe, Joanna wore a look of contemplation as she moved towards the young woman, the heels of her Chelsea boots snapping against the polished pine as she walked. Zara shifted uncomfortably, hyper aware of her exposed legs and she promptly lowered the broadsheet, obstructing Joanna's wondering gaze. \"I need to nip out for a bit, Zara.\" She informed the young woman, standing over her. \"You can stay here or I can drop you in town?\"\n\n\"No, no, it's fine. Its getting late. I'm outstaying my welcome.\"\n\n\"I'm not asking you to leave. I just have some things I need to do.\" Correct, Joanna wasn't asking her to leave, but from what Zara had learned of the Professor, had she wanted her to stay the older woman would have simply instructed it, or maybe even restrained her. Stop it. \n\n\"Thank you, but I should go. Get ready for the week ahead and all that.\"\n\nJoanna nodded, her dark green eyes quickly shifting from Zara's to trail down the plunge of the robe's neckline as she stood from the sofa.\n\nThe young woman followed Joanna out and into the hallway, using every trace of willpower she had not to reach for her, touch her, anything. The re-solidifying of the stoney exterior was merely adding to the rising need for the brunette to have Joanna once more. Her dark eyes trailed down the elegant figure before her; her perfect posture, pinched waist flaring before the-\n\n\"Don't do that.\" Joanna snapped, spinning round on her heel, causing Zara to almost walk straight into her.\n\n\"Sorry!\" Zara exclaimed, staggering, on bare feet before looking up at the displeased face; the narrowing of her eyes and the tightness of her jaw adding to her appeal. \"Wait, what did I do?\" Her expression shifting to bewilderment.\n\n\"When I look at you, do not cover yourself up.\" Joanna instructed.\n\n\"It was... I just...\" Zara faltered, struggling with Joanna's sharp gaze and the fully revitalised electric current coursing through her body. \"It was a reflex.\"\n\n\"I don't care. Do not do it again. Understood?\"\n\n\"Come on, Joanna. You're not-\" But before Zara could finish her sentence, Joanna made a swift movement and Zara felt the robe's rich material fall open.\n\n\"What did I just say, Zara?\" Joanna chastised impatiently. This ceased the young woman's attempts to refasten the belt.\n\nZara exhaled and let the garment hang open, exposing a long sliver of her body; the smooth skin between her breasts, toned stomach and neat pubis were all on show to Joanna.\n\n\"Take it off.\"\n\nZara's hands were already moving before Joanna had finished the command. In a split second the luxurious white material fluttered down her body to pool around her bare feet.\n\nThe side of Joanna's mouth curled as she assessed the young woman, whose chest was already rising faster than normal. Zara wanted this, wanted to satisfy the woman. Hardly a magnanimous wish, given that Joanna seemed to gain a lot of satisfaction through pleasuring her.\n\nHer abdomen squirmed in excited anticipation and when Joanna made her predatory move Zara visibly shuddered, knowing she'd be caressed, kissed, anything. However, Joanna walked past her. \"Please do not turn around.\" She said, slender fingers entwined together behind her back as she moved from Zara's vision.\n\nAfter a silent eternity, warm breath tickled the young woman's ear causing her to take a sharp breath and bunch her shoulders. Zara could just imagine that wicked smile as she was silently appraised. Still, Joanna didn't touch her; the suspense was maddening.\n\nSwallowing, Zara took a small step backwards, desperate for any contact. \"You have no patience.\" Joanna purred, pressing a delicate finger into Zara's spine to stop her movement.\n\nEven this light touch made the faint hairs on Zara's forearms rise. \"Not for this, no.\" She murmured.\n\n\"You'll learn. It's all about the anticipation.\" She breathed into Zara's ear, finishing the sentence by kissing the delicate flesh.\n\nLustful fog began to obscure Zara's mind and her ability to take in her surrounds; Joanna, was quickly becoming all that mattered. She shuddered as soft hands rested on either shoulder before fingertips trailed along the delicate muscle, towards her spine.\n\nShe felt the stimulating friction of Joanna's clothing against her naked body as the woman pressed into her. Instinctively, Zara pushed herself to meet the taut figure and groaned as one of Joanna's hands glided onto her now quivering stomach.\n\nJoanna's other hand continued up into her hair, the dark tresses hanging in unstyled waves. Her head yielded as Joanna pulled it backwards. Unfocused eyes now gazing towards the ceiling. \"Why are you trembling?\" Joanna husked in her ear.\n\nZara hadn't realised she was. Swallowing hard, feeling her neck muscles work she answered. \"Anticipation?\"\n\nJoanna laughed quietly and kissed the girl's cheek. \"Very clever.\" But her grip tightened in her hair. \"Zara?\"\n\n\"Yes, Joanna?\" She breathed, heavily.\n\n\"Do you want to see me again?\" Her other hand crept down past Zara's navel and the young woman felt Joanna push her crotch into her bum.\n\n\"Ye-\" The words caught in her throat. \"Yes, please.\"\n\n\"Good.\" Her other hand released the girl's hair and manoeuvred it onto the back of her slender neck.\n\n\"Do you want to see me again?\" Zara murmoured.\n\nHer heart thudded in her chest as Joanna paused, contemplating the question for an agonising amount of time. \"Of course.\" She concluded lightly.\n\nZara's shoulders shifted slightly, a touch of tension dissipating. \"But, I need you to understand something, Darling.\" She whispered in a serious yet not unkind tone, pushing the relief from Zara's mind as she wound right back up. \"If I tell you to do something, you know you can say no. Do you understand?\"\n\nDid she hell, was Zara's initial reaction. Bewilderment flashing across her lust maddened face as those slender fingers crept further down her body, making it very difficult for her to concentrate.\n\n\"Zara?\" Joanna pushed for an answer. The girl stammered; having thought about it, she supposed she did have a choice. Joanna hadn't forced her to do anything; Zara had ordered the taxi, practically undressed herself - Jesus, now was a case and point. When Joanna had made the move, she was met by a writhing, begging, wanton Zara. \"Do you realise you can say no?\" Joanna pressed.\n\n\"I... I suppose... Oh God-\" Her long legs weakened as Joanna's slender fingers reached her mound. Zara bucked in reaction, teeth gritted as Joanna's fingers trailed tantalisingly close to her wetness.\n\n\"I won't touch you until you answer me.' Joanna breathed in her ear before planting another kiss on the delicate skin of the girl's neck. \"Do you know you can say no to me?\"\n\nZara's heart was now thundering behind her ribcage. \"I... erm... I honestly haven't, haven't thought about saying no to you.\" She managed truthfully.\n\n\"No.\" Joanna mused, \"You've been extremely willing. What about this?\" Her slender fingers swept Zara's locks to one side, exposing her neck as she did so and without anymore warning bit the side of Zara's throat. Zara moaned loudly as she acutely felt the dig of enamel, twinges of pain sending volts of pleasure through her.\n\nThe young woman winced, but instead of moving away from Joanna, she pressed into her, Zara's backside grinding against the woman's denim clad crotch.\n\n\"You haven't answered my question Zara.\" Jesus, she was merciless, \"Do you know you can say no to me?\" Fingers of both hands started to creep; the right moved further towards her surely dripping pussy, the other one around the front of her tense neck and onto her throat.\n\n\"I do. Now. I do now.\" Zara pleaded. \"Oh God!\" She pined, as she felt an index and ring finger trace down her damp lips.\n\n\"Good girl.\" Joanna smiled and tightened long fingers around Zara's throat as her other hand moved back up, toying cruelly with her victim.\n\nZara couldn't say what was the biggest turn on; the hand between her legs or the manageable pressure being applied to her throat but whichever one it was, was driving her into a writhing, whining, perspiring mess. And this was before Joanna introduced her middle finger and at an excruciating pace dragged the digit up the young woman's slit.\n\nZara's knees buckled as her wetness was spread slowly up and down her cleft, that finger coming dangerously close to her clit. \"However,\" The young woman's dark eye's went wide. However? However what?\n\n\"Please, Jo.\" She begged, terrified Joanna wouldn't finish the job in hand.\n\n\"Patience, Darling.\" She cooed. \"I was just pointing out that,\" Simultaneously, the hand on the young woman's throat tightened a fraction and the other slipped downwards, before two fingers were pushed into the young woman.\n\nCharacteristically strong legs almost gave way as Zara let out a low moan and instantly ground herself into the exploring digits. \"That right now, you're so desperate to get off I'll wager you'd say I could do anything to you. Is this right?\" Fingers of both hands curling into the girl, who's eye's rolled back in their sockets, barely able to nod in agreement.\n\n\"At least you're honest.\" Joanna commented fairly, as if discussing some kind of transaction. \"Do you like what I'm doing now?\" Zara let out a noise she hoped would suffice, the octave increasing as Joanna bit her hard on the shoulder.\n\n\"Good, girl.\" A tender kiss where teeth marks had been moulded. \"I just need you to do one more thing for me, Za-.\"\n\n\"Anything.\" Zara managed to gasp, causing Joanna to snigger.\n\n\"Take a few days and think on what you want, please.\" She pulled her fingers from Zara, leaving the young woman feeling empty, but that sensation was pushed from her mind as Joanna turned her attention to Zara's clit, fingers circling at a teasing pace.\n\n\"Oh fuck! Yes, Joanna.\" She groaned, answering the question without really thinking about it.\n\nThe movement of the two fingers shifted from a soft circling to a frantic motion which caused the young woman to cry out. Joanna's hand moved, releasing Zara's throat but instantly silencing her cries as a palm muffled the girl's squeal.\n\nThe sounds of her own stifled breathing billowed in Zara's ears as her ass bucked hard against the older woman who mercilessly rubbed her. Zara was on fire; exquisite pleasure was all she could feel coursing through her shuddering body; the biting, the fingers around her neck, being naked when Joanna remained fully clothed and now the hand over her babbling mouth was everything and more that Zara craved. As was evident in just how strong a climax coursed through the architect.\n\nThe older woman struggled to hold the spasming figure in her arms and Zara had to catch herself on the wall to maintain her balance as the pressure within her finally released. Wave upon pleasurable wave washed over her as her muffled cries filled the Georgian hallway; all the while Joanna's relentless fingers swirled around the sensitive skin, taking her to a height, that until hours ago, she hadn't known existed.\n\n************************\n\nZara let out a frustrated groan as aching arms refused to cooperate. Her chest heaved, perspiration trickled down her back and the harness dug into her waist and bum. Thrusting herself forward, strong fingers gripping for more purchase; yet, she was in unfamiliar territory, where was she supposed to go from here? What was she supposed to do? Not to mention the rope wasn't helping her efforts. Knowing her companion couldn't hear, she tried to wordlessly communicate for it to be slackened, but to no avail.\n\nGritting her teeth, the athletic woman, knowing she was running out of options, pushed her anxieties to one side and went for it. Willing her body to comply and ignore the possible pain she'd feel, Zara propelled herself and let out a satisfied grunt as fingertips gripped the prize. Nails curling in an attempt for more purchase, but it was unobtainable and her sweaty grip started to slip. Her stomach convulsed and with a few failed thrashes of her legs the young woman slipped into the abyss.\n\n\"Give it up, Zara.\" Steve shouted as he quickly belayed her. She stood unsteadily before him, having just been lowered from the dizzying height.\n\n\"It's that black route.\" She panted, looking back up at the climbing wall. \"You get three quarters of the way up and there's not a hold in sight.\"\n\nHe followed her glance, rubbing his stubbled chin. \"What about that there?\" He pointed, the muscles in his arm flexing as he did so. \"Go over to the left and up rather than in the middle where you were.\"\n\n\"Oh.\" Zara said, slightly crestfallen. \"I hadn't thought of that.\" He sniggered at her, clearly desperate to make a scathing remark. \"I'll go up again, whilst it's fresh in my mind. Just let me adjust this.\" Her concentration moved from holds peppering the hundred foot wall to her harness. She tugged at the turquoise nylon. \"Oh I hate this thing!\" Zara snapped in frustration.\n\n\"Don't worry, by the sounds of how Saturday went you'll be getting plenty of practise with one of these soon enough.\" He slipped his fingers around the harness' padded waistband and thrust his friend's hips back and forth.\n\n\"Get off!\" She snapped, attempting to keep her concentration on the route she was about to climb. \"How long have you been waiting to make a harness joke anyway?\" She could imagine it was on the tip of his tongue before they even reached the climbing centre.\n\n\"Not as long as you've been wanting Professor McKenzie to slip into hers.\"\n\nIn the fraction of the second it took the brunette to blink, Zara was granted a graphic image of Joanna pushing into her from behind. The older woman's bare chest pressing into Zara's arching back as hands roamed over her stomach and down. She flicked the image out of her mind, ponytail swishing as she did so. \"It's not all about sex, Steve.\" She blushed as she placed freshly chalked hands on the black holds before her.\n\n\"How am I supposed to know that? It's Wednesday and you've told me bugger all.\" He responded, but Zara wasn't listening. She had spent the majority of the last four days thinking about Joanna. Her and Steve's usual Wednesday night climbing session turned out to be the perfect distraction.\n\nNot to say that she didn't want to discuss things with her friend. Far from it; as soon as Joanna had dropped her at her apartment, Zara had wanted to call Steve, give him every detail, ask him the questions whirring through her mind. However, every time she went to do so she pulled up. Joanna was such a private person, so closed and guarded. Talking about what had happened between them almost seemed, disrespectful?\n\n\"You want to go get some dinner?\" She panted as he lowered her back to earth once more.\n\n\"I'd rather go get a drink so you'll spill the beans.\" He retorted, unable to keep the annoyance from his voice. \"I've listened to you prattle on about this woman for months, put up with your whole denial bullshit, drove you there on Saturday. What the hell Zara?\"\n\n\"I just needed time.\" The brunette muttered, busying herself with untying the long rope. He huffed, muttering something about avoiding her.\n\n\"Steve?\" She asked after a moment.\n\n\"What?\" He said gruffly.\n\n\"Are you hangry?\"\n\nAn hour later the pair were back in the city centre and settling into a cozy table in Oregano, a small but popular Italian that served good value pizza and even cheaper Chianti. Bonus points for the fact they could get a table instantly whilst being dressed in tracksuit bottoms and hoodies.\n\n\"And what?\" Steve asked, swallowing his mouthful, \"You have this mind blowing sex and you,\" He pointed a fork at her in disbelief, \"Stay the night?\"\n\nThe young woman shrugged, \"Yeah. I mean it was really late.\"\n\n\"Pffft, because that's ever stopped you doing a hit and run.\" He snorted, \"What happened?\"\n\n\"I told you; we went to the dinner and then, you know. It was late. I stayed the night.\" Steve didn't try to hide his skepticism, although, it was the truth, wasn't it? \"So, how are things with you?\" She asked breezily, keen to move the conversation along now that she'd got just enough off her chest.\n\n\"Oh, don't even.\" The young man scoffed. \"Why did you stay? And don't give me the it was late bullshit.\"\n\nThe two friends went round in circles, mainly because Zara didn't have an answer. \"It never crossed my mind to leave, Steve. It honestly didn't.\" She could feel the colour rising in her cheeks at the revelation. \"And, going back to the hit and run comment, I haven't done that in forever.\"\n\n\"Ok, fine. You're practically a virgin.\" He retorted, rolling his eyes sarcastically. \"You didn't just stay the night though,\" He persisted, not unkindly. \"You told me you didn't get home until late on Sunday.\"\n\n\"Steve, I don't think you're grasping the concept of how late it was.\" She said, leaning conspiratorially close. \"Like, five in the morn-\"\n\n\"You shagged until five in the morning!\" He exclaimed loudly.\n\n\"Would you shut up!\" Zara hissed.\n\n\"We'll take another bottle, please.\" He smiled at a passing waitress who gave Zara an impressed look. \"Still,\" Flicking his attention back to her, \"That leaves another twelve hours in her company. Why did you stay so long?\"\n\n\"I don't know.\" Zara snapped defensively. \"It just got late, the time passed... quickly, I enjoyed her company. Is that what you want?\"\n\n\"Now we are getting somewhere. What did you enjoy about it?\" He regarded her expectantly before picking up a slice of her pizza.\n\nWhat was she supposed to say? I liked how Joanna chastised me, dominated me, took control of me.\n\n\"Fine.\" Steve humphed at her silent response. \"You've just said she's this blunt, irritable closed book. Hardly your type?\"\n\nZara's palms were sweating, her mind already foggy with Joanna, let alone half a bottle of wine. Had she not felt guilty for avoiding her best friend this week, she'd have called it a night. However, he was right, he'd put up with a lot from her and there were also the questions that burned within her. Questions, Steve could perhaps answer. \"Is it different?\" She asked tentatively, toying with the almost untouched pizza.\n\nA bottle of wine was plonked unceremoniously on their table. \"Is what different?\" Steve frowned, topping up her glass, then his own. \"Also.\" He gestured to her plate. \"You need to eat.\"\n\n\"When, when it's someone of the same... gender, you know, another woman, or man.\" She gestured to her friend before picking up a slice.",
        "\"In terms of what, honey?\" His expression eased.\n\nShe rolled her dark eyes, a smirk tugging at her lips. \"I don't know, feelings, attraction, all that stuff that seems to have evaded me.\"\n\nSteve contemplated the question, swirling the deep purple liquid in his glass as he did so. \"No.\" He decided firmly. Her dark eyes flashed in surprise. \"I used to think it did. But now, no. I think it's down to the person.\" He rested his hand on hers. \"I know you hate to hear this, but it's not your first time with another woman and those girls never changed how you are when it comes to relationships.\"\n\n\"Those hardly counted. And, anyway how do you think I am with relationships?\" A hint of defence creeping back into her voice.\n\n\"Hell, you're like me.\" Steve said, cracking a brilliant smile. \"We are these gregarious, outgoing folk, life and soul, but it's all a big defence. It's the look at us, we are so content without you, I don't need you to make me happy.\"\n\n\"I don't think it's a defence.\" She frowned. \"It's just, the truth? I've never met anyone that made me-\" She stopped herself, \"I've just never, haven't.\" Jesus, this wine is lethal, \"Haven't met anyone that I've really clicked with. That doesn't mean I'm not friendly, up for a laugh.\"\n\n\"I agree.\" He smiled. \"But, you're also guarded, or you usually are. Maybe something's changed?\"\n\n\"Well obviously not.\" The stammering defensiveness of her voice betraying the point she was attempting to make. \"That's not going to change after one night with anyone.\"\n\n\"Look.\" Steve filled her glass before she could stop him. \"Just, take it easy, see where it goes, don't go doing anything daft because you've got feels for the first time.\"\n\n\"I don't have feels.\" She mumbled.\n\nHer mind was already slipping back to Professor McKenzie, when Steve, finally, changed the conversation. \"So, since you've been such a bitch,\" She raised a warning eyebrow in his direction, but allowed the quip to pass, \"You need to do me a favour, two favours actually.\"\n\n\"Oh aye?\"\n\n\"Aye. You'll love it, well the second one you will and that one's not really a favour, more a-\"\n\n\"Spit it out, babes.\"\n\n\"Right, I've got this trail run in a few weeks, you know the one up north.\" Zara nodded slowly. \"And I start my sponsored cycle just after it.\" Again, she nodded, her hazed mind not really seeing where this was going. \"Well, you need to do it for me.\"\n\nZara choked on her drink. \"Will I fuck.\" She blurted a little too loudly. \"You were a mess after it last year.\"\n\n\"Exactly. I can't be doing it and hurt myself. No way I'm risking the cycle.\" He kept going before she could interject. \"You said last year that you'd love to push yourself to do something like that. You're fit, we've been training loads. Why not put it to good use?\"\n\n\"I can't do that! The type of running I do and that race are two completely different things!\"\n\n\"No, they're not, plus you're competitive, no way you'll allow yourself to not give it a decent go.\" He grabbed her hand again. \"Pleeeaaasseee.\"\n\n\"Oh for God Sake!\" The young woman snapped. Even the thought of the gruelling run up slippery slopes, through woods, hurtling down the mountain's craggy paths, was, was, kind of exhilarating?\n\nMaybe it was the wine, maybe it was this pleading face, or maybe because the focus may help push her bubbling feelings back where they belonged. \"Let me check my diary.\"\n\n\"Smashing!\" Steve smiled. \"Honestly, Zara, can't thank you enough.\"\n\n\"So, what was the second thing? I need something good after just agreeing to that.\" A feeling of regret already clutching at her.\n\n\"Oh! Well, I actually got some good news.\" The young man elaborated on his upcoming philanthropic journey through South East Asia. \"So my work have committed to gifting an additional 50% on top of the funds I raise, some tax bullshit no doubt, but whatever, it's all money in the bank.\" He said excitedly with a flick of his hand. \"And, they have also given me another week off work. So, I was thinking, I'm out there anyway, I'll stay and chill. Maybe see Vietnam or somewhere?\"\n\n\"That's great.\" Zara exclaimed, beaming at her jubilant friend. \"You should stay for a bit longer; actually enjoy the place.\"\n\n\"Yeah! With you!\" He beamed. \"You said you'd love to come with me, back when I signed up.\"\n\nZara didn't scoff, brush it off, or tell him he was being ridiculous. Instead, she regarded him thoughtfully before retrieving her phone from her pocket. Opening the calendar, she flicked it forward to November.\n\n\"This is crazy.\" She muttered.\n\n\"You said you have loads of holidays to use up.\" He reminded her.\n\nShe nodded, glancing at the schedule. Work was busy, very busy. Then again, when was it not?\n\n\"I'll put some money towards your flight seeing as it's so last minute.\" Steve pleaded.\n\n\"No you will not! If I go, I'm paying my way. But thanks.\"\n\nA frown formed across her face after several moments. \"I mean, I've always wanted to go, it's on the bucket list, but an eighteen hour flight is such a long way to go for seven days, Steve.\"\n\n\"Why only go for a week?\"\n\nShe cocked her head, causing her ponytail to flick to one side. \"Fair point.\"\n\n*********************\n\n\"And that leaves Jason and Zara. Jason, what's on your four week plan? Any scope to get anything closed out?\" Stephanie Buchan asked, standing at the head of the boardroom.\n\n\"Not a snowball's chance in a hot place, boss. Girl Wonder here,\" He gestured to Zara, not noticing his colleague's vacant expression, \"Sorting out that excavated basement means I'm at capacity and then some.\" The man grumbled before rambling his way through the rest of his weekly report.\n\nEvery Thursday morning the little team; five architects and the two partners, would meet to provide the status of their projects. It was a good way to voice challenges, concerns, and pick up work from a colleague who may have been thrown off course, as was often the the way in their industry.\n\nThese meetings had proved invaluable to the young woman's quick success within the company; she'd sat here and, with a slight push from Stephanie, picked up some of her most prestigious designs. However, today the Buchan &amp; Bruce team could have been offering her the refurbishment of Edinburgh Castle and she'd be none the wiser.\n\nZara's mind continued its struggle to push past her Joanna induced daze. Instead of functioning at its usual quick speed, her brain merely replayed their encounter over and over again. It was doing little for her productivity, not to mention she was going through underwear at an alarming rate.\n\nShe lusted to crack through, preferably with her mouth, that stoic facade once more. The way Joanna had hesitated when Zara straddled her made the young woman curious about how Joanna truly wanted to be pleasured. The most obvious answer was that Joanna would bestride her face. Grind herself into Zara's mouth. Probably more than her mouth; her chin, nose, cheeks.\n\nThe young woman swallowed hard, unaware of where her unfocused eyes were resting. Joanna would probably want to use her hands, wouldn't she? Getting Zara off, causing her that delicious discomfort seemed to please Joanna just as much, maybe more so, than anything Zara could do to her.\n\nYes, she'd definitely use her hands; those groping dexterous fingers would trail down Zara's torso as she lay, helpless, under Joanna. Nails would rake at the young woman's smooth skin before toying with her breasts. She'd take a handful of the soft flesh, gripping Zara's tits before finally pinching her hard nipples. Zara shifted in her chair, completely unaware of the conversation around her.\n\nJoanna would probably enjoy her crying out into her; that was a given. Maybe she'd pull her hair too, force her head this way and that. To do all this Joanna would have to be in some sort of reverse-cowgirl position. Is that even what it's called when it's two women? Subconsciously, the young woman tilted her head at the mental image. From that position, Joanna could bring her own mouth to Zara's-\n\n\"Millar!\" Jason's voice hissed.\n\nZara jumped at the elbow that had dug into her bicep. \"What? Sorry!\" She stammered, eyes refocusing on Stephanie who was regarding her with a mixture of expectancy and annoyance.\n\n\"Come on, Zara. We've not got all day. What's your status report?\"\n\n\"My status? Oh. Right. Erm.\" She felt like her brain was fumbling with its zipper as she tried desperately to push the sixty-nining image from her mind.\n\nShe stammered through her updates which, despite her uncharacteristically idle output, were progressing. \"So, we've,\" she gestured to Stephanie, \"got another catch up with the council about the Leith development later today. St Mary's has made no progress because the civil engineers are still looking into the subsidence, so I can help with the excavated basement if needed and the planning permission still isn't through for Joa- for Albert Street.\"\n\n\"The Council are the bane of our existence just now; everything is sitting with them.\" Stephanie tutted, eyes turning to slits momentarily. \"You're all going to have to be mindful that they'll end up doing their usual- holding onto applications to just before the end of the year and then grant everything at once. Nevermind.\" She decided, her eyebrows unworming. \"Better to be busy, eh?\" There was a resounding agreement around the table.\n\n\"Zara.\" The young woman's wondering mind snapped back to the present. \"Who's the Albert Street application sitting with?\"\n\n\"Harry North, as far as I know.\"\n\n\"Go and give him a phone after this meeting. See what the turnaround time is on that application. Least we can do is try to get ahead with the smaller projects.\"\n\n\"Whilst you're on the phone to him.\" Jason turned to her, \"Gonna flirt the application for my loft conversion through?\"\n\n\"Jason!\" Stephanie snapped. \"We don't flirt our way into or out of anything. But,\" She turned her attention back to Zara, a smile splitting her lips. \"Maybe just this once, you know he's got a soft spot for you.\"\n\nHer fingernails drummed against her desk as she waited to be put through. Harry was a pleasant enough man, however the young woman was eager to get the call over with. Zara had only just realised she was supposed to have updated the plans for the Leith development, therefore she was uncharacteristically ill-prepared for her forth coming meeting. So now, when she could really do with pushing the Professor from her mind, Zara found herself being forced to think of her, albeit in a professional capacity.\n\n\"Zara. Thanks for holding. How are you?\"\n\n\"Thanks for taking the call. I could have tried again later if you're in the middle of something.\"\n\n\"No, not at all. How are you?\" He persisted.\n\n\"Yes, I'm well thank you.\" She glanced at Jason who had caught her eye by, much to her amusement, pushing what he could of his chest together and pouting in her direction. She waved him off with a grin and attempted to concentrate on the phone call. The architect put up with the exchange, succumbing to the man's desire to waste her time.\n\n\"Reason for the call,\" Her voice in that octave reserved for getting her own way, \"I'm really needing to give the client feedback regarding the decision on Albert Street. The application is submitted under my name and the owner is a, Doctor Joanna McKenzie. It's a simple extension, tasteful, back of the property. Shouldn't be an issue surely, Harry?\"\n\n\"And my loft.\" Jason hissed.\n\n\"I know just the one you're referring to Zara; Morningside, extra hundred and twenty metres and yes, as you say, a tasteful L-shape. Hardly surprising, seeing as I'm assuming you designed it.\" Pass the bucket, she thought as she gave her best fake laugh. \"Look, it's a verbal yes from me and I've had approval on that, however, as you know until the paperwork is done we can't give you the green light to do anything.\"\n\n\"No, no, of course not. We are swamped here and it gives us an idea of how to plan up until the end of the year. So, thank you so much for the feedback.\"\n\n\"Yes, noticed Buchan &amp; Bruce are never out of our offices at the moment. In fact, a little birdie said you're down here this afternoon?\"\n\n\"Yes, myself and Stephanie will be popping down later today.\" She hesitated.\n\n\"Excellent. I'm in all day, so perhaps we'll bump into each other.\"\n\n\"Sounds great.\" The young woman retorted, trying to sound professionally keen.\n\n\"Magic. Anything else I can do for you?\" The brunette just really wanted to get off the phone and her pleading expression said as much when she glanced in Jason's direction.\n\n\"Just ask!\" He urged in a loud whisper.\n\nZara gestured for him to keep his voice down, sighed and reinvigorated her scrupulous tone. \"Actually, Harry, now you mention it.\"\n\n\"Another four weeks! Why?\" Jason demanded when she killed the call.\n\nZara mumbled something about the change in design sending the application back to the bottom of the pile. \"Was going to be eight before I talked him round.\"\n\nHowever, young woman wasn't really concentrating on her colleague's annoyance. She was already navigating through her phone. The unofficial update was an ideal excuse for her to contact Joanna who she'd not spoken to since Sunday evening. Just the thought of it sent a pleasurable shudder through her. Nonetheless, Zara pulled up short, sitting her phone down as her mind flicked back to the brief conversation in Joanna's car.\n\nFollowing the hallway escapade, Joanna had encouraged the shaken girl to go and get dressed so she could be taken home. In the short time it took Zara to do so and follow the Professor out to her car, the stoic facade had well and truly solidified. Nonetheless, this didn't stop Zara stealing glances at the woman as she drove. Well, more than glances; she indulged herself in taking in Joanna's flawless bone structure, quick glinting eyes which flicked periodically to the rear-view mirror and the way her slender but strong fingers gripped the leather steering wheel.\n\n\"Which one are you?\" Joanna had asked, looking out at the rows of sandstone.\n\n\"Just here's fine, thanks.\" Zara tried to say casually. What she really wanted to do was ask Joanna in. However, no excuse apart from the obvious came to mind and given that the blonde hadn't gifted her with so much as a glance, she'd rather not set herself up for the fall.\n\n\"Zara.\" Joanna began, turning to the young woman and fixing her with a piercing stare, \"Do not call me.\"\n\nDisappointment must have flitted across the young woman's now tight face as she absorbed the statement. However, was she that shocked; really, what had she expected? For this, successful, intelligent, bewitching woman to drop her guard for Zara? Fine, she may have said she wanted to see the young woman again, but a lot could be voiced in the heat of the moment. Hell, following the way she had clammed back up, it took quite a stretch of imagination to picture Joanna McKenzie tolerating another human for more than a couple of hours, let alone what Zara wanted from her. And that was fine, Zara didn't really want to- \"I'll call you. However, I need to shut myself away and write this week so I can't commit to when I'll resurface. Enjoy what's left of your weekend.\"\n\nIn hindsight, Zara gawped at her, properly gawped at her and, as was becoming usual when the equilibrium shifted in Joanna's favour, her green eyes glinted in amusement and a smirk tugged at her lips.\n\n\"Eh, OK.\" The young woman stammered as she fumbled with the car door. Joanna pressed a button and the catch released. Smooth.\n\n\"Zara?\" Joanna beckoned, a finger moving in that come-hither motion having watched her make her way to the flat's entrance. Of course, Zara did. Striding back to the driver's side door before bending to meet Joanna's gaze.\n\n\"I was serious about what I said in the hall.\" Joanna reminded her, slender fingers toying with the cashmere lapel of Zara's jacket before using it as leverage to pull the girl close. \"I want to know what you like.\" And with that she kissed her hard once more before slipping the vehicle smoothly into gear and pulling away.\n\nSo, Zara hadn't called. Snapping her mind back to the present, her was now sitting cross-legged on her bed, making sure she had covered everything that was brought up in today's meeting. It had gone well and although there was no concrete approval in place, Edinburgh City Council were keen to progress any work that would continue to gentrify Leith, an area of the city close to the harbour. Much to the young architect's delight, this meant she had a major new project to start from scratch. However, it also meant she was playing catch up and really had to pull her unruly mind into check.\n\nHer eyes were getting heavy and the raucous from the pub across the road informed her it was late, kicking-out time. However, her mind sparked once more as Zara remembered the genuine need to contact the Professor. As per her wishes, she didn't call, instead Zara typed out a one sentence email which she reread a dozen times before hitting send.\n\nShe didn't receive a reply, but awoke to a preferable alternative:\n\nJoanna McKenzie (Albert Street), 06:13: Tigerlily. Tonight, 9pm.\n\n***********************************\n\nZara felt her presence a split second before fingertips trailed across her shoulder as a tall, slender figure entered her peripheral vision. Looking up, she took in the monochrome apparition; an elegant grey coat concealing an androgynous outfit.\n\n\"Evening.\" She greeted, a smooth smile touching her eyes as they bored into the young woman.\n\nZara's skin electrified as the pair embraced briefly; a hand on the young woman's forearm, lips brushing her high cheekbone. She'd been smoking; Zara could smell the faint pang of nicotine, almost, but not quite, masked by spearmint and subtle perfume.\n\n\"I hope you've not been waiting long? I got held up.\" Joanna did not elaborate, shrugging off the coat as she blatantly assessed the brunette, whose body was encased in a figure hugging dress.\n\n\"Just a couple of minutes.\" She lied. Zara made a move to return to her seat, but thought better of it given Joanna's warnings about interrupting her visual appreciation. Instead, she hovered awkwardly whilst the blonde took in her body, only sliding back into the booth when the woman's gaze dropped.\n\nAs Joanna joined her, their legs brushed together causing Zara a slight startle. Her companion feigned ignorance, whilst positioning herself so the architect had little choice but to succumb to their tangled limbs.\n\nThis constant contact did little for Zara's resolve and when combined with the excruciating silence, which Joanna clearly enjoyed, her anxiety rose. The young woman's mind whirred with possible topics of conversation, her palms went clammy, and the more she worried about losing her cool the more she did so.\n\n\"So, how are you?\" She said eventually, kicking herself at the stupid simplicity.\n\n\"I'm fine Zara, thank you.\" Joanna replied, not hiding her amusement as she sat back and regarded the girl. \"And you?\"\n\n\"Yep. Good. Thanks.\" Attempted nonchalantness.\n\n\"You sure?\" Joanna's eyebrow twitched. \"You seem a bit, on edge?\"\n\nFortunately the waiter saved Zara, coming over to take their drinks order, leaving a bottle of water and glasses on the table as he did so.\n\nZara had had time to look at the menu and ordered instantly; Whiskey Sour.\n\n\"I'll have an Ice Breaker.\" Joanna decided. The irony.\n\n\"So.\" Her deep green eyes flashing back to Zara's. \"Why are you so het up?\"",
        "\"I'm not.\" The young woman protested, colour rising in her cheeks. She busied herself with pouring them a glass of water, feeling those unyielding eyes on her.\n\n\"Have you been thinking about me?\" Joanna asked.\n\nThe question, or maybe it was the explicit images flashing through her mind, caused the young woman to almost miss the glass. \"Eh, a bit, I guess.\"\n\nThe professor was now openly amused by the situation. \"A bit. You guess?\" She repeated in mock incredulity. \"Hardly a rave review, is it?\"\n\nJesus. She wasn't going to get off lightly, was she? \"Yes. Fine.\" Zara admitted defensively. \"I've been thinking about you.\" The revelation caused her companion to sit back, a superior expression spreading across that radiant face.\n\n\"What have you been thin-\"\n\n\"Have you been thinking about me?\" Zara asked quickly over the top of Joanna.\n\n\"I've been very busy, Zara.\"\n\nZara shook her head in amused frustration. If this was flirting, she was hopeless at it. Mind you, she had a feeling that the odds would never be in her favour when it came to playing with Joanna. With that in mind, she supposed she'd better get her game-face on. \"Well, I had to think of you, didn't I? Was forced to.\"\n\n\"Oh yes?\" Joanna's intrigue causing Zara's smugness to show.\n\n\"Work. You're my client.\"\n\n\"And don't you forget it.\" Joanna said with a look that wiped away Zara's confidence. \"Anyway, no work chat. You're not on the clock.\"\n\n\"I like talking about my work.\" Zara replied honestly. \"It's a passion as much as a job. C'mon, I get to design buildings. What's not to love?\"\n\nJoanna's expression softened at the woman's enthusiasm. She rested her chin in her palm, the other hand brushing lightly over the back of Zara's. \"Fine. Tell me about it.\"\n\nIt was the first exchange the two women had shared where Zara hadn't felt too on edge. Here, in this public setting, Zara wasn't in Joanna's territory; not to say she hadn't relished the time the pair had spent together thus far. But here, she could talk about what she enjoyed in a neutral space.\n\n\"But why the preference for refurbishment? I thought the drive was towards these huge glass-\"\n\n\"Monstrosities.\" They said in unison.\n\n\"I know; I get that they are environmentally friendly, some people like how they look and I guess when there's no other option then they serve a purpose. But even the well-built ones have issues within the first twelve months and, most importantly, they have no soul. Where as you walk into a Georgian building and you can feel it, y'know there's so much history there. Why waste it when it can be improved?\"\n\n\"Cost?\"\n\n\"Some things are more important than money.\"\n\n\"Very true, Zara.\" She smiled, shaking her head in disbelief. \"You're quite unique.\"\n\nThey talked about Zara's occupation for a little longer before the conversation inevitably trailed to Joanna's home. \"So you just want us to handle everything; full project management?\" Joanna nodded, so long as she was dealing with Zara what could possibly go wrong?\n\nZara imagined a lot of things could go wrong and then she'd be on the wrong side of Joanna, which excited her beyond measure.\n\n\"Anyway.\" Zara eased, \"How did your research go this week?\"\n\nJoanna waved the query off with an impatient flick of her wrist. \"It doesn't matter.\"\n\nThey went round in circles as the Professor evaded the young woman's curiosity. What doesn't matter? My research. No, I get you think that, I meant what is your research? Legislative. Yes, that much I gathered, what aspect of the legal system? Brexit. Oh, Brexit, that's interesting. Not really.\n\n\"You're impossible.\" Zara sighed before sitting back and taking a swig of her drink; no doubt the alcohol was providing extra nerves.\n\n\"Excuse me?\" Joanna asked, fixing the young woman with a matron-like stare.\n\n\"You're a closed book.\"\n\n\"I fail to see your issue.\"\n\n\"So, I'm just supposed to sit here and talk about myself all night?\"\n\n\"You seem to enjoy it.\" Joanna teased.\n\n\"Its preferable to an awkward silence.\" Zara persisted, the couple of glances she'd had into Joanna's personal life proved that she was an interesting woman.\n\nThe blonde exhaled, gaze fixed on her martini glass. \"Fine.\" She conceded with an effort. \"I'll answer your questions, then you have to answer mine. Deal?\"\n\n\"Deal.\" Zara nodded, about to slip her fingers into Joanna's outstretched hand. \"No one word or flippant answers though.\"\n\n\"Same goes. I need details.\" Joanna purred and gave Zara a look that reminded her who was in charge. She shivered and eagerly accepted the terms.\n\nOnce Joanna finally got going, Zara was not surprised to find her work fascinating. The Professor was writing about Brexit's impact on corporate legislation. It was enthralling to receive an informed opinion of what Britain leaving the EU actually meant.\n\n\"So you see, the whole thing's actually been pointless; there's a lot of global legislation we can implement, but we do still need to placate the EU, given our geographical location.\"\n\n\"You mean relaxing trade terms and conditions that would appease, say Japan, won't comply with EU laws and those still need to be maintained if we want access to the Single Market.\"\n\n\"Exactly. And, despite what the government says, we need access to the Single Market.\"\n\n\"So, we're fucked.\"\n\nJoanna let out a throaty laughed as she nodded. \"That's my conclusion sorted. 'So, we're fucked.' Millar, 2017.\"\n\n\"Thank you, Zara.\" She said, sounding surprised. \"Honestly, it was actually good to talk about that. Just let me make a note of something.\"\n\n\"So,\" She began, setting down her pen. \"I believe it's my turn.\" Joanna reminded the brunette, that predatory expression sending butterflies crashing through the young woman's stomach. \"Have you thought on what I said?\" She mused, running her foot up Zara's leg.\n\nAt risk of spilling it, Zara hastily sat her drink down. \"What you said, when?\" She was pretty sure she knew the direction the conversation was going, but given the fact they were in public and Joanna hadn't lowered her voice, the young woman wanted to confirm. That, and she didn't really have a straight answer.\n\nJoanna took a pained intake of breath. \"I think that counts as flippant, so that's one.\" Picking up the gold pen, she flicked open the moleskin notebook and on the inside cover scored several lines.\n\n\"Four?\" Zara said, incredulously, \"You just said that counts as one?\"\n\n\"Yes but you were a bit pushy earlier. And,\" She scored through the four lines. \"You just questioned me again.\"\n\n\"You said you were glad we talked.\" Zara muttered, trying to hide her enjoyment of this new game.\n\n\"Oh, Darling.\" Joanna said sympathetically, scoring once more. \"Now, did you think about what I said on Sunday morning? Remember, in the hall. When I had you by the-\"\n\n\"Ok!\" Zara said hastily, glancing around before her gaze returned to Joanna. \"Given my... predicament, I struggled to concentrate on what was being said.\" She answered truthfully, \"However.\" She added quickly, as Joanna lifted the pen once more. \"I liked what you did. I liked it a lot.\"\n\n\"I could tell.\" Joanna smirked, \"You were a mess.\" Zara accepted the comment, it was true after all. \"Would you like me to do that again?\" Zara glimpsed around again before confirming that she would. \"Good. What else would you like me to do to you?\"\n\n\"Please, Joanna.\" Zara squirmed uncomfortably in her seat.\n\n\"It's alright.\" She said softly, \"I won't make you talk about it.\" Zara's momentary relief was stifled as Joanna added another strike. \"What? A deal is a deal.\"\n\nSo maybe she wasn't forced to talk about it, but the older woman made no effort to move the conversation along and after several agonising moments Zara raised her eyes and swallowed. \"May I ask you something?\"\n\n\"No. Let us change tack instead.\" And for the first time she lowered her voice and the pair hunched together over the small table. \"You're curious, yes?\" Zara nodded. \"You like someone else taking control.\" Zara nodded. \"You like pain?\" Zara could feel dampness spreading between her legs and after a moment she nodded, eyes downcast. Joanna's fingers brushed her cheek before cupping her chin. \"There's nothing to be embarrassed about.\" She said earnestly, looking into Zara's eyes. \"It feels good.\" Zara returned the coy smile as the pair sat back up.\n\n\"I'm.\" She cleared her throat. \"I'm quite open to trying, trying a lot. But, there's some, some aspects of whatever it is I like-\"\n\n\"Submission.\"\n\n\"Keep your voice down!\" The young woman hissed. Although she really had nothing to worry about; Tigerlily was a busy bar, not to mention it was Friday evening, people could hardly hear their own conversation, let alone their's. \"Uh, yes, that. But there's some elements of it that I don't want to do.\"\n\n\"Tell me.\" Joanna instructed in a businesslike tone.\n\n\"Jesus Christ.\" Zara muttered, her mind torn between genuinely feeling uncomfortable and enjoying the power Joanna held over her. \"I, I don't want anything extreme, or what I would deem extreme.\" A furrow formed on Joanna's brow but she allowed the girl to continue rambling. \"I don't want, I don't want hurt, well I do, but nothing, nothing that I'm going to, you know, just nothing really bad.\" Zara was worrying a painted nail as she spoke, head bowed. \"I don't want degraded and I've got my own life, I want to mainta-\"\n\n\"Zara, stop.\" Joanna ordered impatiently as she got up.\n\nThe young woman's head snapped up, a horror struck look as she thought Joanna meant to leave.\n\n\"Budge up.\" The older woman instructed with a flick of her hand. She sat down next to the girl, their thighs and sides pressed together. \"Look.\" She sighed, a softness creeping into her voice. \"I don't like that you are even considering that I want to do anything to really hurt you, beyond what you may enjoy.\" Zara muttered an apology. \"You don't need to apologise. I pushed too hard for you to talk about it. You're just so appealing when you're all hot and bothered.\" Joanna stroked her hair and the pair remained silent for a several moments before both going to speak at the same time.\n\nJoanna urged Zara to continue. \"Cards on the table.\" She sighed reluctantly. Cards on the bloody table on a second date, did you ever? \"I'm not sure why, maybe because you seem to know my body better than I do, but I trust you.\"\n\nJoanna didn't even try to stifle her ravishing smile and Zara could see a faint glow form on her pale cheeks. \"If we are being open.\" She began, towing the grin into line, \"You trusting me, is a gift. And all connotations aside, I appreciate it a great deal.\"\n\n\"To contextualise things for you, I spent some of my past not being in control. Its nothing serious and I'm not going to talk about it,\" She added, catching Zara's stricken expression. \"So, it's now something I strive for in every aspect of my life. That doesn't mean I have a desire to harm you, mentally or physically. You're far too good for that.\"\n\nWithout a second thought, Zara kissed her; slender fingers wrapping gently around the nape of Joanna's neck as their lips slotted together perfectly.\n\nAfter several moments Joanna pulled away, but not before her teeth nipped the young woman. \"You just broke my public display of affection rule, Zara.\" She said in mock disappointment. \"That's at least another three strikes.\" She reached for the pen and notebook. \"Oh Darling,\" She pouted sympathetically, \"You're up to ten.\"\n\n******************************\n\n\"Tell me the truth.\" Joanna breathed as she pushed Zara roughly against the front door, the security light illuminating their frenzied embrace.\n\n\"About what?\" Zara gasped as she felt a hand snake inside her coat and cup her breast.\n\nTheir mouths found one another once more in a wet, lipstick smearing exchange. Zara's hands gripped Joanna's short hair, messing with the stylish cut, as she pushed her chest into the woman's grasp. \"Oh God.\" She moaned as lips fell to her neck, teeth grazing the sensitive flesh.\n\n\"You look so good tonight, Zara.\" Joanna growled in a low tone. Her other hand gliding down the silk blend of Zara's dress and round to her bum, firmly gripping the swell.\n\n\"That conversation really got to you.\" The young woman observed, her own hand now working its way into Joanna's layers.\n\n\"Mhmm. Now tell me what you've been thinking about all week?\" Her tongue trailing up Zara's throat.\n\nFortunately, Joanna's house was well back from the street and partially shrouded by the garden, however between the leaves dropping from the trees and the security light they were not completely hidden.\n\n\"Now, Zara.\" Joanna sighed impatiently before biting the girl.\n\n\"Ahh. Sorry.\" She winced, breath fogging in the midnight air. \"I, I, thought lots actually.\" Lots clearly wasn't descriptive enough as she winced under another nip. \"I thought about you sitting on my face.\"\n\n\"And?\" She whispered, lips against Zara's ear; her breath making the young woman shudder. \"What were you doing?\"\n\n\"Ah. There, there, wasn't much I could do, I could barely breathe. You were doing most of the work.\" Zara confessed, her voice sounding pained as she felt the hem of her dress being pulled up. \"Not here.\" She urged, tugging the material back down.\n\n\"Do you want another strike?\" Joanna asked. She straightened up, almost eye level with Zara, who for once had the height advantage.\n\nThe brunette smiled broadly, illuminating her beautiful face as she gazed at her lust maddened companion. \"I think I do, yes.\" She'd barely finished the sentence before Joanna pressed her against the door once more.\n\nHeat blazed through the young woman's body as their mouths locked and Joanna's hands pulled the garment's material up her thighs. Zara's resolve was fading quickly; the almost week long wait, the fantasies and the hours of conversation were about as much foreplay as the young woman could take. Not to mention the alfresco nature of their encounter adding to her arousal.\n\nSlender arms draped over Joanna's shoulders as teasing hands roamed over Zara's thighs. Dexterous fingers trailed over the material that encased Zara's sex, teasing the young woman until her breath caught and hips moved with anticipation.\n\nEventually, Joanna dipped a cool hand into the material of Zara's panties, fingernails dragging lightly across her pubis. \"Please.\" She winced, \"We should do this inside.\"\n\n\"You sure?\" Joanna purred, fingers trailing further down to the girl's aroused lips. \"You really want that?\" She smirked, moving her fingers into the wetness.\n\nZara opened her eyes to look into Joanna's before slowly shaking her head, biting her bottom lip as she did so.\n\n\"No, didn't think so.\" Her eyes glinting as she felt her fingers brush over Zara's cliterous, taking in her reaction. \"You're so expressive when I touch you.\" Zara nodded, whining softly as she felt clever fingers move in that circular motion she liked.\n\nThe young woman leant into Joanna, lips pressing together momentarily before Joanna pushed her back. \"I'm going to watch you cum.\" She informed her victim; one hand in her underwear the other on her shoulder, ensuring she stood straight backed against the door.\n\n\"I shouldn't.\" Zara pined without much conviction, her hips now moving to meet the Professor's accelerated manipulations, \"It's too early.\"\n\n\"You should.\" Joanna coaxed, momentarily stopping to gather more of the girl's wetness before continuing at a faster pace. \"You are too wound up to really enjoy what I've got planned for you.\" Zara's face, illuminated by the harsh light, crumpled as she groaned loudly at the thought of what was to come. That mounting pressure suddenly surging to an unsustainable level that caused her legs to shake. \"Remember baby, eleven strikes.\" Joanna husked, her warm breath misting the cool air.\n\nThe short but intense orgasm hit her hard, making Zara grunt like she had taken a blow to the stomach as her body jolted. Joanna pressed her fingers firmly into the young woman's spasming bundle of nerves, the pressure accentuating the pleasure, whilst she watched Zara quake.\n\n\"Come on.\" Joanna said softly, not really allowing for any recovery time. \"Let's get you inside.\" Once she'd opened the door for Zara, she instructed her to take off her coat and to go to the kitchen for a glass of water. Zara did so, readjusting her clothes as she moved.\n\nNo one had ever got her so hot as to where she would have done anything like that without a second thought, at least not sober. \"That was awful brave. I bet Morningside has a pretty active Neighbourhood Watch.\" She commented to Joanna, who had just entered the dimly lit kitchen.\n\n\"Yes, it does. We might even make their little newspaper.\" She smirked, handing Zara a glass.\n\n\"The headlines are endless.\"\n\n\"Unsuspecting Architect Falls Victim to Professor. Something like that?\" Joanna mused.\n\n\"You've forgotten the bit about me being a mere junior whilst you're a Deputy Head at the University.\" Zara said in a helpless voice, before taking a long drink of water.\n\nJoanna made an involuntary noise, momentarily losing a drop of composure. \"Now, that,\" She swallowed, \"Was very naughty.\"\n\nThe older woman took her glass and sat it down before guiding Zara, who was feeling particularly pleased with herself, to turn around. \"This is very pretty.\" She complemented, running her hands down the silky material. \"But.\" Dexterous fingers moved to the zipper at the back of her neck. \"It's what's underneath that I'm after.\" The young woman shivered as she heard and felt the material peel away from her back. Joanna's lips were on the exposed skin instantly as she pushed the rest of the dress from her, causing it to pool around her feet.\n\nThis left Zara standing in lingerie, a pair of heeled boots and tights, the black nylon of which obscured her legs. Joanna trailed her fingers lightly over the bra's dark green silk straps, but left the garment in place as she turned the young woman around.\n\nZara loved that lustful expression; at a time when the young woman was most vulnerable, the Professor never failed to make her feel desirable, even steady her nerves. Amusement glimmered across her face at the realisation; occasionally she was more comfortable in front of Joanna in a state of undress.\n\n\"What's so funny, Zara?\" Joanna snapped, breaking the girl's contemplation.\n\n\"Nothing, Joanna. Sorry.\" Her eyes shifted down her counterpart's body. It hardly seemed fair that she should stand here like this whilst Joanna remained fully clothed. \"Can I take your coat off, please?\"\n\n\"Of course.\" She replied smoothly, a satisfied smile pulling at the corners of her mouth.\n\nZara stepped forward, their eyes almost level and kissed Joanna, the soft, tender exchange growing stronger as she pushed her body up against the woman who was now pressed against the countertop. Zara's hand held the back of her neck, the other gripping at the jacket's lapel and she moaned as she felt Joanna's firm grip tighten around her waist.\n\nThe young woman pushed the material from Joanna's slender shoulders, their mouths locked as they fumbled blindly to set the garment aside. Zara's hands trailed down the woman's front, taking in the jut of her collarbone, the swell of her chest, and down her ribs to her stomach.\n\nTheir breath quickened as Zara's fingers retraced their path back to Joanna's breasts. She squeezed, sucking on the woman's tongue as she did so.\n\nDespite feeling the Professor shudder, Zara's hands were pushed away as Joanna made a disapproving noise. She tried again, only to received the same response. Third time lucky? \"You have just earned another three.\" Joanna breathed between kisses.\n\n\"What does that mean?\" She panted, nuzzling the collar of Joanna's shirt aside before giving the sensitive skin a long lazy lick.",
        "\"Don't play dumb with me, girl.\"\n\n\"Ah!\" Zara gasped as Joanna's palm swatted her backside. \"Does that mean I'm back down to thirteen?\"\n\n\"Nice try.\" Joanna husked, returning the knowing grin. \"Come on.\"\n\nZara took a step back, but stopped. \"Hang on.\" Moving into the woman once more. \"Can we do one thing first?\"\n\n\"That depends.\" She whispered, her lips brushing against Zara's. \"What is it?\"\n\n\"You.\" She kissed the corner of Joanna's lips tenderly. \"Please?\"\n\nJoanna contemplated the request. \"Well, I suppose.\" She took one of Zara's hands and pressed it to her breast. \"You're going to be useless by the time I'm done with you.\" Her low tone caused Zara to swallow hard.\n\nEager fingers worked the buttons of Joanna's white shirt as her mouth trailed lower with every exposure. Zara trailed her lips between the lace of Joanna's bra and onto her stomach, savouring the sensation and taste of her skin as she shifted.\n\nHands roamed slowly over her torso, down her hips and up the front of her thighs before Zara felt a hand in her hair, pulling her back up to Joanna's eye level. They kissed again and Zara's fingers crept to Joanna's back, under the shirt in search of the hook.\n\n\"It fastens at the front.\" Joanna breathed, causing her to pull up short and glance down. Sure enough, a gold clasp, masked as decal, held the garment place. Zara unclipped it without hesitation and pushed the material away. Everything about her screamed elegance and her two mauve peeked swells were no exception.\n\nInstinctively, Zara took one into her mouth, moaning as she sucked gently on the hard flesh. Wetting her fingers, she stimulated the other, teasing the crinkled area. Joanna's murmur at the simultaneous assault spurred the girl on as she lost herself in the Professor.\n\nTentatively, her free hand snuck down Joanna's body and without warning she pressed it firmly into the woman's crotch; feeling the warmth burn through her trousers. Joanna gasped her mane and tightened the grip of her hair as Zara's fingers caressed the dampness.\n\n\"Mouth. Now.\" Joanna eventually growled, pulling the girl back up by the hair.\n\n\"May I take these off?\" Zara teased, fingers slipping into the waistband of Joanna's tight pants.\n\n\"I would encourage it.\" She snapped impatiently.\n\nWithin moments, Zara was drinking Joanna in, her own arousal growing at the sight. Standing, elbow's resting on the worktop behind her, Joanna's body almost glowed in the dim light. Her white shirt and matching bra hung casually from her shoulders, revealing the majority of her torso; long legs completely bare, her trousers and brogues strewn on the tiled floor. Zara went to speak, but the words caught in her throat as she fixated on the Professor's lace encased sex.\n\n\"Come here, Zara.\" Despite now having two inches on Joanna, Zara felt considerably smaller in the commanding presence and without hesitation, stepped forward. Joanna kissed her hard before giving the girl a reassuring look. Zara nodded; the eagerness flashing across her face was all Joanna needed.\n\n\"Down.\" Joanna snarled slowly, a single fingertip applying pressure to the young woman's shoulder.\n\nThe tiles were hard and cold against Zara's knees, not that she cared; her mouth was level with Joanna's covered sex and without last week's trepidation the young woman sank her face into the rich material, breathing in that heady aroma as her tongue trailed over the lace.\n\nShe descended, continuing her exploration over the panties, the wet strip of thin material not leaving much to the young woman's imagination as she licked and kissed the covered folds. Her nose brushed Joanna's clit and she repeated the action several times before Joanna interjected.\n\n\"Take them off.\" The Professor growled. Zara didn't need told twice and in a split second the damp material was replaced by Zara's lips.\n\nThe pair moaned in unison as Zara kissed her way down Joanna's pubis before sinking her tongue between the smooth damp lips, savouring the taste. She flicked her tongue teasingly over the woman's clit, revelling in the her reaction.\n\nOne hand rested on the slight flare of Joanna's hip, the other trailed upwards, joining her mouth in pleasuring the magnificent woman. Zara looked up at Joanna, whose eyes were already on her, as she, at a tantalising pace, eased two fingers into the tight wet space.\n\n\"Keep going.\" The older woman nodded before emitting a faint throaty noise as the young woman filled her. \"I could get used to you down there.\" Joanna husked as she drank in the sight of Zara kneeling before her.\n\n\"So could I.\" She smirked, raising a neat eyebrow before returning her mouth to Joanna's most sensitive spot; relishing in the shudders she caused.\n\nZara, replacing her mouth with her thumb, peeled her mouth away to watch Joanna. She loved to watch her lose herself in her own way as her head fell back in silent ecstasy; the sight of it made Zara's stomach flip. Feeling decidedly pleased with herself, the young woman moved her mouth back to Joanna's folds, lashing the area with her tongue, periodically shifting to tease the bundle of nerves.\n\nJoanna moved and Zara broke away momentarily, watching in delight as a slender leg was draped over her shoulder. She caressed Joanna's calf and gently kissed the the inside of her thigh whilst gazing at Joanna's intimacy. However, the appreciation was cut short as the woman's leg tightened round the back of Zara's neck and, with a hand entwined in her long hair for good measure, Zara was plunged into the soft wetness.\n\nShe floundered momentarily; nose, lips, nose and chin enveloped in the woman. \"Zara.\" Joanna warned through gritted teeth as the young woman struggled to match her assailant's rocking hips. Zara rested her hands on Joanna's hips, and despite the iron grip in her hair, began to match the rhythm.\n\n\"Zara.\" Joanna scolded again, breath getting heavier. \"Fingers. Now.\"\n\nZara instantly began working two digits in and out of Joanna who, in return, lessened the grip on her hair, allowing the young woman's mouth to explore once more. Instinctively, her tongue trailed upwards to her clit; she lapped obediently, gradually increasing the pressure she applied to the nub until she felt a tremor.\n\nJoanna's leg tightened around the young woman, pulling her into her as she let out a low groan. Zara continued to suck and lap at her clit before curling her fingers within Joanna, however the tremors did not intensify to what Zara knew they needed to be.\n\n\"Move your fingers faster.\" Joanna gasped, \"I said faster!\"\n\nZara obliged, intensifying her assault until an ache began to grow in Zara's arm and jaw. Nonetheless, Joanna continued to balance on the edge, trembling slightly as her breath grew extremely laboured.\n\n\"Oh fuck.\" She grimaced through gritted teeth.\n\nHearing Joanna curse, having her face pressed so deliciously into the Professor, how she tasted, everything, was driving pleasurable shock waves through Zara. She felt her own arousal soak through her underwear, however, as much as fucking Joanna was turning her on, she couldn't not have her cum.\n\nMimicking what Joanna had bestowed upon her, Zara pushed a third finger into her; inexperience causing her to do so with a bit more force than she'd intended. Joanna jolted violently and almost cried out. Zara was about to pull away, worried she had hurt her. However, Joanna's grip grew impossibly tight leaving the young woman little option but to work her sex. Three fingers thrust in and out of her as Zara, breathing heavily through her nose, locked her mouth around her clit, sucking whilst simultaneously flicking the nub with her tongue. Finally she felt the her partner's convulsion intensify.\n\n\"Just there. Just there. Just there.\" Joanna gasped, her legs beginning to quiver before Zara finally felt wetness spill down her palm as the dam most certainly broke.\n\nThat grip in her hair intensified painfully, but Zara continued to grind her tongue over the burning flesh whilst being pulled further into Joanna, whose legs trembled so vigorously she struggled maintain her balance. Zara's free hand shifted to her hip to steady the woman as she prolonged the climax in every way she could, relishing what she had reduced Joanna to.\n\nFinally, she felt Joanna's movement's shift, indicating any attention on her clit was too much to take. However, Zara's mouth remained crouched between her legs, diligently licking and kissing away the juices which coated her lips and creamy thighs.\n\n\"My God, Zara.\" Joanna panted after a long recover. \"You're bloody good at that.\"\n\n\"I was under a lot of guidance.\" She replied, shaking with adrenaline as she sat back.\n\n\"Not when it counted.\" Joanna reasoned, refastening her bra and walking towards a cupboard. \"Here.\" She knelt beside the girl and tenderly wiped her hands. \"I've made a right mess of you, haven't I?\"\n\n\"Do you get a strike?\" The brunette baited as she wiped Joanna from her face.\n\n\"As if you'd have the bottle.\" She challenged. \"Come on now, it's getting late.\"\n\nZara rose from the cool floor, unsteady as butterflies whipped through her stomach. Not, however, with fear or reluctance, more an intense apprehension regarding the curiosity which was about to be satisfied.\n\nOne would never have known that mere minutes ago Joanna had been a writhing mess as she strode purposefully to the warmly lit living room. \"I think we've given them enough of a show for one day.\" The Professor muttered as she drew the blinds, leaving Zara standing rather awkwardly in the centre of the room.\n\nThey stood about three feet apart in similar states of undress. Joanna, in her open shirt and underwear. Zara in silky lingerie of a deep green; long legs hazed by sheer panty hose and those black suede boots which brought her up to the height of most men.\n\nFolding her arms, Joanna drank the young woman in for an excruciating amount of time, as if committing the vision to memory. Eventually, her lips pursing as she did so, her eyes rose Zara's. \"Fourteen.\" She exhaled, a disheartened tone to her voice that made her counterpart gulp. \"I am so disappointed.\"\n\nA shiver visibly ran through Zara's body. This was no character Joanna had slipped into, she had merely solidified that authoritative facade. It was terrifyingly arousing.\n\nEven Joanna stepping towards her made the young woman quake, but the professor took no heed. \"You've been so bad.\" Zara almost whimpered as a heat within her began to build; Joanna's commanding presence, her tone of voice, the way her predatory gaze scolded the girl in more ways than one. She glanced away. \"Look at me!\" Joanna snapped, causing Zara to jump.\n\nIf she had blinked at the wrong time she would have missed it, the faintest twitch of Joanna's eyebrow, that reassurance, a check to make sure she was comfortable. Zara gave a subtle nod.\n\n\"I said,\" Joanna snarled, her face mere inches from Zara's. \"You have been so bad. Have you got nothing to say for yourself?\"\n\nZara hesitated. She hadn't really been bad. Then again pointing that out would not end well. Yes, she was excited but the thought of Joanna's hand colliding with her buttocks fifteen times was quite daunting. \"Sorry?\"\n\n\"Sorry?\" Joanna scoffed. \"I don't think sorry is going to cut it, do you?\" But before the young woman could answer, Joanna spun her around, grabbed the back of her neck and marched her to the end of the same couch Zara had relaxed in the previous weekend.\n\nRoughly, the architect was bent over its padded arm before her hands were pulled behind her back. This left Zara's torso unsupported, her face pressed into the velvet, and her vision mostly obscured by tousled hair.\n\nMoments later the same hands returned to her hips and unceremoniously tugged her tights and briefs over her bum. She whimpered, feeling terribly exposed; ass high in the air and she just knew her glistening lips were too aroused to hide. \"You will stay like that until I get back.\" Joanna ordered.\n\nZara waited, hearing her climb the stairs. Then, there was silence. A long silence. Anxiety whipped through the young woman and her nerves were starting to get the better of her as she contemplated what to do if she was left much longer. What if this was one of these waiting games, where you're left for hours and hours. Please God don't let it be that.\n\n\"Jesus!\" Zara almost jumped out her skin, as, from nowhere, fingers trailed over her bum and up her back.\n\n\"Shhh, Darling.\" Joanna soothed, in a voice unrecognisable to the tone she had been using, as she swept Zara's hair from her face. \"You look incredible.\" She smiled warmly. That smile, the way it softened her features, made the flecks of amber in her eyes glow. The young woman melted; Zara would do anything to have her look at her like that. \"We can stop at anytime you like.\"\n\n\"It's fun. Scary. But fun.\" She assured her.\n\n\"It is.\" Joanna agreed in the same soft expression before clearing her throat. Like flicking a switch her countenance changed; eye's hardened, all kindness stripped away. \"You need a word, Zara.\" She barked, stepping out of the girl's vision.\n\n\"A word?\" Zara repeated, bewildered.\n\n\"Oh, do not act like you don't know what a safe word is, girl!\"\n\nOf course, Zara was familiar with the concept, but had never given any thought to what hers might be. She stammered; numerous ideas, each as ridiculous as the last, flitting through her mind.\n\n\"Now, Zara!\"\n\n\"Blueprints?\"\n\nJoanna was silent for a moment. \"Blueprints?\" She tried to say in the same terse voice. Zara nodded. \"Well,\" She hesitated, \"Fine, you say that if it gets too much. Nothing else counts, no begging, screaming, pleading, alright?\" Her voice hard as she turned her attention to Zara's rear. The creamy skin contrasting with the long rosewood paddle.\n\n\"What is that?\" Zara snapped, her hands flying from behind her back to allow herself to look around. She saw Joanna standing at her hip; the sight caused another trickle of wetness to escape from her folds. All Joanna had done was take her shirt off and don a tight pencil skirt. The black material clamped around the curvature of her body, contrasting wonderfully with her white lace bra. The garment elevated her prowess tenfold, or maybe it was the frightfully erotic paddle Joanna was trailing over Zara's soft skin.\n\n\"This?\" Joanna said innocently, lifting the implement from Zara's ass. \"Its beautiful, isn't it?\" It really was; highly polished, ergonomic, about two inches thick and a foot long.\n\n\"I, I, thought you'd use your hand.\" Zara stammered, genuinely concerned by the shiny dark wood.\n\n\"Nope.\" Joanna replied breezily and with no warning brought the implement down with some force.\n\nZara groaned as it hit her left cheek, but the pain she'd expected didn't quite arrive. There was a sting, a bearable, manageable, arousing sting.\n\n\"Shall we begin?\" And without waiting for the girl to answer, Joanna wrenched her arms behind her back once more, causing Zara's chest and face to fall back into the velvet. \"That one was for bringing your hands away without permission. Only fair, yes?\" Zara made a noncommittal noise. \"What?\"\n\n\"Ahh.\" A flick of the paddle stung the inside of her thigh. \"Yes, Joanna.\" She said automatically.\n\n\"Good girl.\"\n\nZara's body was rigid whilst waiting for the next blow. Her breath shallowed and her eyes darted futilely, yet nothing came. Slowly, her breathing calmed and the uncomfortable knots in her shoulders lessened as Joanna gently caressed her lower back. \"You need to relax, Darling. Just calm down.\" She soothed in that smooth tone. \"Good girl.\"\n\nWhack!\n\n\"Hmmph.\" Her teeth gritted at the light sting which sent shockwaves straight to her sex. \"Fourteen.\" She gasped instinctively.\n\n\"Very good.\" Joanna purred before bringing the paddle down on the exact same spot.\n\n\"Ahhh!\" She jolted; that one hurt. She could feel the flesh inflame almost instantly as Joanna's fingers trailed lightly over the area, her touch feeling cool against the reddening flesh. \"Thirteen.\"\n\nTwelve through eight were manageable, enjoyable, each stroke sending a lighting bolt through her body which earthed between her legs.\n\n\"You're quite enjoying this, aren't you?\" Joanna teased, slipping the smooth wood between Zara's sopping lips.\n\nThe young woman groaned, feeling the cool smooth implement gliding up and down her cleft. As the paddle brushed against her clit she whined in a high pitch and shook her head. It was going to take very little to make her cum and she didn't want to even think about the consequences of doing so without permission.\n\n\"No?\" Joanna said, toying with the bundle of nerves.\n\n\"I can't, can't take that, Joanna. Please.\" She begged, feeling that pressure in the pit of her stomach grow.\n\n\"Alright.\" Joanna sighed, sliding the paddle from Zara's folds. \"You see, I can be reasonable.\"\n\n\"Thank y-owwww!\" That was the sorest one yet, the paddle swooshed down and landed low on firmer skin, close to her thigh. She breathed hard for a moment and her safe word played on her mind, but the delicious throbbing was only intensifying the pressure in her abdomen. \"Seven.\" She murmured.\n\n\"Six.\" She managed through gritted teeth, the cords of her neck tightening as the same level of delicious pain was bestowed on the other side.\n\nAfter number five the young woman was shaking, a cold sweat trickling down her back, but not from pain, well, not just from the pain. Her arse was on fire but that was not nearly as hot as the heat between her sticky thighs. The spanking, the submission, everything was the ultimate tease, the most intense foreplay Zara had ever had and it caused her to crave Joanna. She needed to have the woman's mouth, fingers, anything, in her, on her, so badly. So badly, that she began to beg.\n\n\"What's that, Darling?\" Joanna asked, the paddle running up the inside of her thigh.\n\n\"I want you to...\" She murmured inaudibly into the sofa.\n\n\"You want me to what, Zara? And please don't drool on this couch. You're making enough mess of the arm!\" Joanna scolded.\n\nZara let out a guttural moan as the paddle toyed at her entrance. \"I want you to fuck me.\"\n\n\"You want me to what?\" She taunted.\n\n\"Fuck me, Joanna. Please!\" Zara cried in frustration, her pretty face crumpling as if she may actually do so.\n\n\"Oh, don't be silly, Zara.\" Joanna sighed, as if the brunette was being ridiculous. However, the young woman did feel a slight pressure as Joanna inserted something, her fingers pushing what felt like cool metal deep inside her.\n\nJoanna shifted and sat on the couch beside her, sucking her fingertips as she did so. \"You have held on a lot longer than I expected.\" She voiced in that business like tone. \"Of course, I'd love nothing more than to take you upstairs.\" She said in a slow, sexual rasp. \"Lay you on that big bed, kiss you all over, make you feel so good.\" Her lips curled cruelly as Zara whined for it. \"All you have to do is say your little word and I'll put three fingers deep inside you. You liked that when I did it before, didn't you?\" Zara nodded weakly. \"I'll fuck you so hard, baby.\" She continued in that honey smooth voice, \"And when you think you can't take any more, I'll swirl my tongue over your clit just the way you-\"\n\n\"Please stop!\" Zara wailed, her body twitching in frustration.\n\n\"Say the word, Zara.\" Joanna goaded, her voice hard. The girl shook her head, velvet scraping against her damp flushed cheek. The only thing more arousing than the thought of Joanna doing all those things she'd just said was continuing with this delicious disciplining. \"Fine. We'll continue.\" She pulled Zara's arms from her back and slipped something into the girl's hand.\n\nThey were stiff and uncooperative, but resting on her forearms was far more comfortable than the previous position. Her revised pose calmed the searing need for release slightly and she had the wherewithal to examine what Joanna had given her.",
        "\"Zara, it's about to get a lot more fun. Well, for me anyway.\" Joanna teased, soft hands trailing over the throbbing flesh.\n\nZara didn't have time to contemplate Joanna's utterance; another swoosh and the impact jolted her forward with a grunt of pain, however the sensation was literally buzzed from her mind as the bullet inside her began to whir. \"Oh fu-uck.\" She quivered, her hips shuddering against the intense sensation. \"Fooo-uuur.\"\n\n\"SenseMotion.\" Joanna informed her in a blas\u00e9 fashion. \"A flick of your wrist and the intensity changes. So you, my Darling, are in control.\" Whack!\n\nShe groaned loudly, the stroke knocking the wind out of her as her body jerked once more. In turn the vibrator's ferocity increased significantly, and that mounting pressure ballooned to an almost unmanageable level. \"Three.\" She choked. \"Please, Joanna.\"\n\n\"Twoooo.\" Zara cried as Joanna ignored the plea, sending the paddle down hard on her thigh, the sting shooting straight to her cunt.\n\n\"Joanna,\" She gasped as her body convulsed involuntarily; the tremors coursing through her were like volts from a generator. Zara's vision blurred, and her legs began to quake whilst she tried to hold on, tried to fight the glorious tremors. \"Joanna, I need to, I'm going to cum.\" She warned.\n\n\"Not yet. I'm not done with you.\" Joanna growled as her free hand entwined in the young woman's hair, pulling Zara's head up and back.\n\nShe felt the material of Joanna's skirt push into her sore flesh as the woman leant over her. \"Give me that.\" She snapped impatiently, holding out her other hand to take the bullet's remote. With one quick motion, the device reached such intensity that the two women could hear its wet vibrations from within Zara.\n\nHer body almost betrayed her as muscles contracted of their own accord and Zara's whole body jolted under the thunderous tremors of the bullet. \"Please, Joanna, please.\" She cried, whilst her long legs clattered together.\n\nJoanna on the other hand was a picture of serenity as she bent over the girl, hand still locked in her hair. \"I'm so proud of you, Zara.\" She whispered in her ear before kissing a painfully prominent cord on her neck. \"Just one more thing, Darling.\"\n\n\"Anything!\" Zara cried.\n\n\"Whose are you?\"\n\n\"I'm your girl.\" She gasped without hesitation.\n\n\"Whose?\"\n\n\"Yours Joanna. I'm yours.\"\n\nThe genuine tone of Zara's response caught Joanna off guard and it took her a moment to regain her composure. Flicking the sentiment from her mind, she released her victim's hair and Zara's face, wet with perspiration, fell unceremoniously back into the sofa.\n\nThe young woman shuddered as Joanna's fingernails raked down the indent of her spine, before soft palms ran over her buttocks. She couldn't fathom how scorching flesh could bring her this amount of ecstasy, to the point that, despite the pulsing pain, she still craved that final whack. \n\nThe sensation of Joanna moving to impart it upon her caused the approaching climax to almost bubble over and she jolted, more wetness seeping down her thighs as she felt the cool paddle tease her scarlet flesh. The thought of the last, surely hard, spank had her omitting a guttural plea as she anticipated the impending explosion.\n\n\"Its coming, Darling.\" Joanna said softly as she lifted the paddle from Zara's skin.\n\nThe young woman was aware of nothing else except the sensation of the rosewood as it finally collided with her one last time; hitting her sensitive bead in a wet, slick, smack.\n\nEpilogue\n\n\"How much of last night do you remember?\" Joanna asked, pursing her lips as she watched the young woman rub body wash into her buttocks as she showered. The red had faded to a glowing pink, however, despite having massaged copious amounts of lotion into the woman's burning skin, three long rectangular marks remained. She felt a pang of guilt at those, especially the one where she had accidentally caught her thigh.\n\n\"Oh, I'm pretty sure I blanked out at around four.\" Zara smiled broadly. If this is what the upper hand felt like, no wonder the Professor strived to maintain it. \"Coping mechanism, for the pain, like that time I broke my collarbone.\" She almost giggled at that, but with her back to Joanna she got away with it.\n\n\"Oh come on!\" Joanna retorted in a tone that, almost, begged the girl to be reasonable.\n\n\"I mean,\" She continued the act, lathering the rest of her body, \"I thought I had a high pain threshold, but my God, Joanna.\"\n\n\"I'm sorry.\" And she meant it. Christ, she was so full of shit. You trusting me is a gift, I have no desire to harm you. Yet, what had she gone and made her take? Fifteen strikes. Look at her poor thigh! She thought Zara had grasped the concept of the safe word; fucking blueprints. Everything she did was a surprise. Everything about her was a revelation. Why was she even still here? Joanna swallowed the lump in her throat.\n\nThe truth was, despite the slight discomfort and not being able to fully recall every detail of the experience, Zara was exuberant. Every new act Joanna had bestowed upon her had taken her to unreachable heights, and especially after last night's awakening, she burned for the older woman.\n\nThe experience of truly submitting to Joanna as she'd done, had a profound impact on the girl, and not just because of the earth-shattering orgasm. The explosion, when it finally detonated, had her see white as she drifted in and out of consciousness. She was barely aware of anything except the physical release, a feeling akin to being propelled along a never ending electric current as Joanna prolonged the unbelievable pleasure. Zara writhed against the paddle as it was rubbed over her jolting clit and gushed onto Joanna, as somehow, without removing the whirring bullet, the woman manoeuvred two fingers into Zara's spasming wetness.\n\nWhen her body eventually calmed, Zara saw sparks crackle in her hazed vision as she lay, too stiff and exhausted to move. She could have been absolutely anywhere for all she knew and it wasn't until this morning that she'd really processed just how intense the climax had been. No, the only thing she had been aware of as she lay, panting on the damp velvet was Joanna, and just how in sync she felt with the older woman. Like she'd finally found that piece of an unfinished puzzle. Her unfinished puzzle.\n\n\"Zara?\" Joanna coaxed, walking toward the shower.\n\n\"Mmmm?\" Zara murmured, breaking from her internal revelation.\n\n\"Come down stairs when you're done. I'll drive you home.\"\n\n\"Do you have plans?\" Zara frowned, turning to face Joanna, whose eyes, for once, remained fixed on the young woman's.\n\n\"No, it's just,\" She stammered, completely unaccustomed to being on the back foot. \"It's just-\"\n\n\"Just what?\" Zara said, cocking her head to one side. \"I thought I was your girl?\"\n\nNumerous expressions flitted over Joanna's normally impassive visage as she took in what the young woman had said.\n\n\"Yes, Zara.\" She smiled slowly, as relieved as she was overjoyed, \"You are my girl.\""
    ],
    "authorname": "Camera Obscura",
    "tags": [
        "lesbian spank",
        "spanking",
        "scotland",
        "lesbian erotica",
        "romance",
        "lesbian bdsm",
        "older woman",
        "younger woman",
        "lesbian d/s",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/blueprints-ch-03"
}