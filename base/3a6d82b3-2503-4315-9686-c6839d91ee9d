{
    "title": "The Trust Ch. 06",
    "pages": [
        "First let me thank you all for the votes and emails. And as I've said before, this is not meant to be the next great novel, so if that's what you're looking for, I'm sorry to disappoint. I started it wanting to do a running chronicle that spans years like a soap opera, so it may never actually reach a satisfactory end for some people. With that in mind, if you haven't read all previous chapters, I suggest you do so before proceeding.\n\nIf I haven't already scared you off, I hope you enjoy it as much as I do writing it. All mistakes are mine. All people, places and institutions are made up, this story in no way reflects reality and any similarities to it are coincidental. Enjoy.\n\n*****\n\nChapter 06\n\nCybil clutched Ardella's hand. Despite Ardella's insistence that she was okay, she didn't seem to be able to stay focused. Cybil had already tried three times to explain what had happened to her. The stupid Sheriff's deputies had hauled Mason and Pat off in cuffs, along with three of the four men that had started everything. She guessed she was lucky they hadn't taken her too, but now the paramedics were seeing to the last of those animals, instead of her friend, the victim. Everything was just so ass backwards.\n\nA second ambulance finally showed up, one of the medics coming over to check out Ardella. He asked Cybil if she had been unconscious and for how long when Ardella had a hard time answering his questions. Cybil told him yes, maybe five minutes, but she was sure no more than ten. She wanted to go to the Sheriff's office and scream at the idiots that had taken Mason, but she had to stay with Ardella to make sure she was going to be okay. Her need to be in several places at once piling frustration on top of her angry.\n\nLooking around, she saw the other girls huddle together at the picnic table with all their stuff, Katey trying to comfort a quietly crying Shelby. Becky looking as pissed as she felt. Another medic arrived with an ambulance stretcher, so she went over to the girls.\n\n\"I'm going to follow Ardella to the hospital and makes sure she's okay,\" she began, \"but someone needs to go find out what's going on with Mason and Pat.\" And she reached out to grip Shelby's arm when she looked up.\n\n\"We'll go find out what we can.\" Becky told her, picking up Ardella's bag and handing it to Cybil. \"But someone needs to call Brigid too.\"\n\n\"I'll do it.\" She agreed, grabbing her own bag and rooting through it for her phone, coming up with both hers and Mason's, before she found her keys. \"You have the keys to the CX?\" she asked, rattling hers.\n\n\"I've got them, don't worry about us. I'll call you when we find anything out.\" Becky told her, then pointed. \"You better get going, they're loading her.\" Glancing over, Cybil saw she was right and headed that way, stopping at the back of the ambulance to ask where they were taking her.\n\n\"Cybil?\" Ardella called her when she spotted her, confusion and fear in her voice.\n\n\"I'll be right behind you.\" Cybil assured her as the medics pushed the stretcher into the ambulance. Then turned to him, \"Is she going to be okay?\"\n\n\"She should be, but we need to get her to X-ray and see if there is any fracturing or internal swelling.\" He told her as he loaded their kits in after her, then climbed in himself. \"We're heading to Lawrence Memorial if your following.\" He told her just before he pulled the door shut and the siren came on. Cybil watched them pull onto the road, then found Brigid's name on her phone and hit call.\n\nBrigid called Allan when Cybil got done telling her what had happened, then started throwing things in a bag. Allan made a call to the law offices of Stanton & Stanton that sent one Stanton, and one junior partner along with five associates descending on the Middlesex Sheriff's Department while two more associates headed to the hospital.\n\nMarcus didn't hesitate when Brigid stopped her car in front of his cottage and honked, he heard what was going on and called Danny, picked him up and crawled into the Miata. Allan met them at the airfield and ushered them on to a Cessna parked beside the Piper Brigid had flown in on her visit, and they were in the air.\n\nCybil ended the call with Brigid, feeling a little more in control just knowing she was on her way. She glanced back at the picnic table where they'd spent the afternoon as she started for her car and stopped. The others were hurrying toward her, Katey and Shelby loaded down with crap, but Becky waving at her and dragging one of the girls they had played volleyball against earlier with her.\n\n\"She recorded it!\" Becky called when she saw Cybil stop, and the girl held up a phone. \"She got all of it.\" Becky went on as they got to her, excited.\n\n\"I was recording a few of the matches.\" The girl blurted as Cybil looked at her, holding the phone out. \"I think I got most of it anyway, I was trying, but it was all happening so fast. And I was scared.\" She went on looking worried now that maybe she hadn't done it right, one hand fidgeting with her glasses.\n\nCybil grabbed the startled girl and gave her a hug. \"Thank you.\" She told her, then looked at Becky. \"Brigid said she'd get a lawyer headed down to the Sheriff's for Mason and Shelby's dad, you need to get this to him.\" Then looked back at the girl. \"Can you go with them or let her take your phone?\" she asked her.\n\n\"I'll go.\" She agreed nervously, clutching the phone to her chest at the idea of someone taking it anywhere.\n\nMason sat at the table with his head on his arms ignoring the two deputies, he wasn't interested in answering their questions. He was frustrated and sore, it felt like a mule had kicked him in the side. He couldn't get the sight of Ardella's bloody head out of his mind, it had happened so fast, and it made no sense. He couldn't shake the anger he felt or the worry for his friends.\n\nThe deputies were interrupted when the door opened and Able Stanton came marching in followed by four of the associates. The junior partner, Aida Caro, had split off with the other associate to find Pat.\n\n\"There will be no more questions for my client, you'll excuse us deputies, we need time to talk. I'll expect any recording devises, video or audio to be turned off and one of my associates will be at the door and one in that room behind the mirror.\" The deputies gave him sullen looks, but two of the associates followed them out the door before it closed.\n\n\"Now Mr. Cabot, I need you to tell me what happened, because the little I was told was third hand at best.\" The grey haired lawyer told Mason as he took one of the seats across from him.\n\n\"Okay, but do you know how Ardella is? They wouldn't tell me anything.\"\n\n\"That's the woman who was taken to the hospital?\" and at Mason's nod, he turned to the associate at his shoulder. \"Call Davis over there and find out how she is.\" Then he turned back to Mason.\n\n\"We'll know soon, now first things first, were you told you were under arrest and did they read you your Miranda warning before they started questioning you?\"\n\n\"They read me my rights in the car, but I don't remember anyone telling me I was under arrest.\" He answered, then jingled the cuffs. \"But I might have missed that.\"\n\nTurning to the last associate, Able pointed at him, \"Go see if Mr. Cabot has been placed under arrest and if he hasn't, tell them to get in here with a key for those damn things.\"\n\nAs he was leaving the room, the first associate stepped back to the table. \"The woman taken to the hospital just came out of X-ray, and is getting stitched up. The girl with her told Davis there is a video. That Becky was bringing it.\"\n\nAble looked back at Mason. \"Becky's a friend,\" Mason supplied before he could ask, \"she'll probably have another girl or two with her.\"\n\nNodding, Able looked back at the associate. \"Get out front and find her, get that damn video before she gives it to anyone else.\" And the guy flew out the door. One of the deputies and the associate sent to find out if Mason was under arrest stood right outside the open door for a second watching him run down the hall. Then came in and the deputy removed Mason's cuffs and left again.\n\n\"It seems you are not under arrest at this time, so we can leave if that is your wish Mr. Cabot.\" Able told him, settling back into his chair. \"But it might be a good idea if we try to get this sorted now. Why don't you start from the beginning and tell me what happened?\"\n\nSheriff Stan Clayton was having a shitty day. His always overtaxed man power was stretched beyond its limits with all the holiday crap going on. He'd been developing a headache for the past hour as he sorted through reports, and the bottle of single malt scotch in his bottom desk drawer was calling his name. If the half cup of coffee on his desk hadn't already gotten too cold, he would have topped it off. Sighing, he picked up the next report.\n\nAida Caro found Pat cuffed to a chair shaking his head and telling the deputy questioning him that he would only talk to the Sheriff. She introduced herself and her associate, then got the deputy to take the cuffs off, since Pat wasn't under arrest either. But instead of following her, Pat took off to find the Sheriff, so she went after him.\n\nPat Anderson had had enough, he was pissed at the whole fiasco. His head hurt and the tooth right behind his split lip felt loose. He'd been trying to get that idiot deputy to go get Stanly for an hour. So when the cuffs came off, he found his way to the Sheriff's office and barged in. He had known Stanly all his life, they might not have been friends that whole time, but they had shared a lot of teams playing football through the years and had been drunk together more than a few times.\n\nThe Sheriff looked up in surprise, then frowned at him. \"You look like hell Pat.\" He opined as Aida followed him in, the associate staying in the doorway.\n\nCindy McFadden was wondering what she'd gotten herself into. She was stuck here with these people and some guy had run off with her phone. She didn't know any of them or when they would bring her phone back, or if they even would. She hoped so, it had taken her four months to save enough to buy it. She couldn't even call her aunt for a ride. All because she had wanted a video of the cute guy playing volleyball.\n\nMason's account of what had happened was interrupted as the associate came back in with the phone. Able taking it and asking if anyone else had seen it. Mason got up and went around the table, taking the seat next to Able as he managed to get a video up and going.\n\n\"That was earlier.\" Mason told him, seeing one of the first games they had played with large teams, and Able frowned at the associate, who took the phone back and searched it for a minute, handing it back with the right video queued.\n\nMason had a hard time sitting still as the bottle hit Ardella's head again. The phone had caught it cleanly, staying on the scene for a long second. He saw himself look to the right and remembered the laughing man, but then the camera angle fell, pointing at the ground for a time before jumping around as the person holding it ran forward. It panned over Ardella laying on the ground, Shelby and Katey kneeling by her as Cybil ran into the frame. Then the camera panned over to the fight.\n\nOne guy was already laid out. The laugher. Mason had gone after him first, he'd bounced the volleyball off the guy's face as he ran up to him. Then hit him with a hard right to the solar plexus as he reared back in reaction to it. Remembering it, Mason shivered, he'd hit the guy hard and felt something pop in his chest. But then the other three were on him, and he could feel his muscles jump in response as he watched it unfold on the small screen.\n\nTwo of them had jumped on him, trying to drag him down. Mason doing his best to stay on his feet, knowing if they got him on the ground he would get stomped. The third was bent over trying to pull at one of Mason's legs when Pat came running in and tackled him. The two of them rolling around pummeling each other.\n\nMason winced as Cybil came flying in then, feeling fear for her again as well as admiration and love. She climbed right up the back of the one on Mason's right. The guy loosing his hold on Mason's neck and arm as she reached around to rake at his face. He hadn't realized why the guy let go at the time, but the other guy had gone low after Pat pulled the third one off, trying to get a hold on his left leg. His upper body suddenly free, Mason had leaned down over the guy's back and wrapped his arms around his waist. Then lifted him off the ground, his legs coming up as Mason threw him down head first. Mason turning even as the guys rolled limply to his side.\n\nThe guy Cybil had hold of was a bloody mess, his face covered in red scratches. But he had hold of Cybil's arms and was drawing her up over his shoulder. A glint of gold showing through the grimace of rage on his face. Mason wanted to hit him, get Cybil out of danger, but she was in the way before he could get set, so he borrowed one of her moves and kicked the fucker in the nuts as hard as he could. Cybil ending up on top as the guy folded under her. She got both hands in his hair and start pounding his head on the ground.\n\nThe video showed Mason turn and look toward Pat, and Mason remembered seeing that he was holding his own, straddling his guy's chest raining blows on him. Then the deputy had tackled him, coming out of nowhere. Watching it, Mason knew why his side hurt. The deputies shoulder had taken him in the left side. Mason had started trying to get a hold on the new attacker, then realized he had a uniform on and quit. Letting his hands be pulled back and cuffed. After that, the view on the screen was new to him.\n\nHe watched as two other deputies pulled Pat off his guy and got them both cuffed. He grimaced when the one who had tackled him went after Cybil. He picked her up, having to take a step back to get her to let go of the guy's hair. Then turned and set her down, shoving her away and holding both hands up in warning or pleading for her to stay. Watched as she looked over and saw him lying there in cuffs, as the guy grabbed her up again when she tried to run past him. Another deputy coming to his aid, shaking cuffs in Cybil's face and pointing for her to leave. Mason's heart breaking at the anguish on Cybil's face as she turned and stumbled away, tears clear on her cheeks.\n\nThe video ended shortly after that, and Mason leaned forward on the table, feeling all keyed up again. Able sat there looking at the phone for a long moment, then turned and handed it to the associate. \"Send copies of that to the firm.\" He told the guy, then turned to Mason.\n\n\"I'm not sure we want to turn that over.\" He told him, then held his hand up to stop Mason as he opened his mouth to protest. \"It's what the video doesn't show that concerns me. It's clear that someone threw that bottle and hit your friend. But the video doesn't show who, it just shows you fighting. It might help if we need it, but I don't want to chance it unless we don't have any other choice.\"\n\nWhile Mason was trying to get his mind around that, the door opened and Aida came in, followed by the Sheriff and Pat. A cluster of associates at the open door.\n\n\"What is this Aida?\" Able asked her, frowning.\n\n\"I can answer that,\" The Sheriff told him, going around to Mason's old seat and sitting, a thick mania folder in his hands. \"Your client won't be being charged with anything. Pat here has explained everything that took place to my satisfaction and I've talked to my deputies.\" He told them. \"I do need to talk with Mason here though, and of course you're welcome to stay.\" Pausing, then continuing at Able's nod. \"We have a bit of a problem, the men that attacked Miss Williams, and got their asses handed to them by your client and his friends, were Bratva, Russian mob.\"\n\nMason felt a chill at that, thinking of the girls. \"Are you sure?\" Able demanded.\n\nIn response, the Sheriff opened the folder and picked off the top four wrap-sheets in it, laying them out for Mason and Able to see. \"These are the ones that were arrested today.\"\n\nMason studied the photos, only vaguely recognizing any of them, then focused on one of them. The guy had a sneer on his face that showed two gold crowns. He remembered that mouth, then he realized he remembered it from the bar that night too. He started to tell them this, but bit it back, remembering Cybil and her batting practice. He glanced at the grey haired lawyer, needing to ask him, but didn't see how to do it without kicking the Sheriff out of the room first.\n\n\"Actually Sheriff, can we do this later?\" he asked, \"I'm not discounting the danger I'm sure you're trying to convince me of, but I think your deputy might have cracked a rib when he tackled me, and I'm worried about my friend.\" And he got to his feet, wincing and trying to give the lawyer a look that said get me out of here.\n\nAida caught it and stepped forward. \"I can give you a ride to the hospital Mr. Cabot, if you'd like.\"\n\nAble looked at her and seemed to catch on. \"Good idea, I'll stay here and hear what the Sheriff has to say, we'll set a meeting after we get this sorted out.\"\n\nThe Sheriff wasn't happy, but Pat followed them out. \"What just happened?\" he asked Mason, but Aida stopped and turned to them. \"Whatever it was, let's get clear of the building before we talk about it.\" She told them, turning and continuing down the hall at Pat's nod.\n\nShelby flew into her father's arms when they stepped into the lobby, bursting into tears as he hugged her. \"I was so scared.\" She told him.\n\nKatey came to Mason for a hug, her shoulders starting to shake when his arms tightened around her. In the parking lot she wanted to ride with Mason and Aida, but Aida told her she needed to talk to Mason in private to protect client confidentiality, so she reluctantly climbed in with the others.\n\n\"You knew one of those men from the pictures.\" Aida told him after they were on the road. Sure she was right.\n\n\"I think so.\" Mason admitted, \"Though I don't know him actually.\" He paused, deciding what he wanted to admit to. \"A few weeks ago, a friend of mine was being attacked in a bar. I got there and stopped it. The guy with the gold teeth was one of them, I think.\"\n\nAida was no dummy, \"Just how hard did you stop this attack?\"\n\n\"I'm pretty sure the guy that started it would have needed to go to a hospital.\" Mason admitted. And Aida nodded, understanding why he had wanted to get out of the meeting with the Sheriff.\n\n\"Did you use a weapon?\"\n\nMason started to tell her no, then remembered the bat and hesitated. \"I didn't take a weapon in with me. But I did take a bat away from one of them.\" He wasn't going to mention Cybil.\n\nAida thought about that for a moment as she drove. \"Is there any chance you can get me the name of this man that may have ended up in the hospital?\" She finally asked him. \"I'll have one of our investigators look into it quietly. Hopefully we'll know how bad it was before whatever meeting Able sets.\" And Mason nodded, telling her he'd have to get the name from his friend.\n\nMason pulled Katey aside when they all got to the hospital and asked her for the name. She told him it was Alexei Maslow, then wanted to know why he wanted to know. So he told her that he thought one of the guys from the bar had been at the lake, then had to steady her as her face went pale.\n\n\"It was my fault.\" She muttered quietly, tears forming in her eyes as she tried to turn away from Mason. Feeling like an ass, Mason pulled her to him, holding her in a tight hug. \"No. Today wasn't your fault.\" He told her. \"The night at the bar wasn't either, if they are connected, it's because of this Alexei asshole, not you.\"\n\nSomething in his voice reached her, she knew he was wrong, that it was her fault. Everything always was. But she also knew Mason had other things weighing on him and didn't need her blubbering, so she forced herself to stop, to nod and stop trying to turn away. To pretend.",
        "Mason held her for a moment longer, then turned with her towards the others. Katey peeling off by the CX as Mason walked over to Aida by her car and told her the name.\n\nAida flinched. \"Maslow.\" She muttered then louder. \"As in Viktor Maslow?\" and Mason shrugged. Aida pulled out her phone, but instead of calling one of the investigators like she had planned, she found and dialed the number for Big Ben Walker, the founder and CEO of Walker Security. They were a client of the firm and the biggest private security company in that part of the country.\n\n\"What can I do for you Ms. Caro?\" His deep baritone voice came over the line, what sounded like a party in the background.\n\n\"I've got a client that needs immediate help, he might be having a problem with Viktor Maslow.\" She told him, reaching out and gripping Mason's arm as he started to ask her what she was doing.\n\nThere was silence on the phone for a long moment, then Ben was back. \"That would qualify as trouble, what do you need?\"\n\nIt was Aida's turn to think for a minute, then. \"For now, why don't you send some of your people to Lawrence Memorial. My client and I are here, and one of the people involved will likely have to spend at least one night here. So we should leave a couple on her door just in case.\" Pausing as Mason nodded. \"When they get here, I'll get my client to give them whatever information you need to get a team to his residence.\"\n\n\"Will do, expect the first team there shortly.\" He told her, \"In fact, I think I'll come down there myself.\" Aida thanked him and ended the call.\n\n\"Thank you.\" Was all Mason could think to say to her. He still hated the idea, but if it kept the girls out of harms way, he didn't care what it would cost and knew that Allan wouldn't let him put it off any longer in any case.\n\nMason stepped into Ardella's room and Cybil was on him. Her arms almost strangling him as she kissed him, her legs locked around his waist. Aida stopped in the doorway surprised, the others piling up behind her. \"You're here.\" Cybil breathed as she broke the kiss, leaning back and searching his face.\n\n\"Always.\" He told her, and she grinned, then jumped, her eyes going wide when he goosed her. The girls started pushing past them to get in and see Ardella, so he let her down, but kept a hold of her hand as he too stepped over to the bed.\n\nArdella was still a little glassy-eyed, but already complaining about having to stay there. Mason sat on the edge of the bed and pulled her up into a hug, holding her for a long moment, the room going quiet around them. \"You scared me.\" He muttered into her ear.\n\nHer X-rays had come back clean, no fractures or hematoma. But since she had lost consciousness and had been confused for a time after she woke, they said she had suffered a stage two concussion. This meant that she was going to be staying there over night so they could check her neurological responses every two hours. They'd given her nine stitches in the back of her head.\n\nCybil pulled him out in the hall after he moved aside so Becky could take his place. \"I wanna hear everything that has happened.\" She told him, then thrust his phone at him. \"But first you need to call Brigid. She should be almost here.\"\n\nMason had known she would be. As soon as the lawyers started filing into the room, he'd known that Cybil had called her. Checking his phone now, he saw that there were a half-dozen messages from her. Instead of listening to them though, he called her.\n\n\"Mason?\" Brigid demanded before the first ring had ended, the anxiety in her voice freezing his response a second too long. \"Mason, is that you?\"\n\n\"Yes.\" He managed. He assured her he was alright, and found out they were on the ground. But waiting for Allan to come around with a car. He told them they were at the hospital and gave her directions. She knew Ardella's condition already, having talked to Cybil a few times. She told him they would go by the hall and drop her father and Danny off, then come on to the hospital, but Mason told her to just bring Marcus and Danny with her, saying he would explain when everyone was together.\n\nNot finding Cybil waiting to grill him when he got off the phone surprised him. When he looked in through the door, he saw her over in a corner talking to a small dark-haired girl he kind of remembered from the lake. The room was absolutely packed, nine people not counting Ardella and himself. And more on the way.\n\n***\n\nViktor Maslow was picking at his dinner, his usually healthy appetite gone as he tried to decide what to do about the whole fucking mess. If his nephew Alexei hadn't already been found dead, he'd fucking kill him himself. He thanked God his sister hadn't lived long enough to see what a piece of shit the boy had turned out to be. And even dead, he was causing problems. Pushing his plate aside, he shouted for Dmitri, his Councilor, he needed to decide if anyone else needed to die.\n\nMason watched the men coming down the hall, knowing the one in front had to be Big Ben Walker. The guy was at least six-foot six with shoulders broad enough to look out of proportion, like a comic book character. He was talking to a skinny man wearing a white lab coat with a stethoscope. They were being followed by a small mob of people.\n\nAida made introductions while the guy in the lab coat and another in scrubs pushing a wheelchair went in the room and started sending everybody out. \"What's going on?\" Mason asked.\n\n\"I'm having her moved to a more secure wing.\" The big guy told him. \"The hospital has several VIP suites that are less easily accessed, easier to secure.\" Cybil appeared at Mason's side, taking his arm as she looked up at Ben, so Mason introduced them, then they all had to move aside as the medical people wheeled Ardella out.\n\nThe new room was easily three times larger and looked more like a hotel suite, although Ardella still didn't want to stay. Two of the security guys peeled off at the entrance to the hall, while two more took positions on either side of the door to the room. All four were big guys, at least when Ben wasn't standing next to them. Mason decided they must have light body armor on under the dark grey uniform shirt, because stuff didn't seem to shift right. And each had a holstered automatic on his belt. The last guy with him was small in comparison to any of them, but there was something dangerous about him. You could tell he was ready for anything, anytime. He didn't seem to have the armor on or the holster, but Mason thought he might have a shoulder rig under his jacket.\n\nBen introduced him as one of his team leaders, Eric Braden, saying he was retired Force Recon. Like Ben, he wore more casual attire. \"His team is waiting outside, if you'll give him directions and some keys, they'll secure your residence and make an assessment if it's defensible or if we need to move you while this is being settled.\" Surprise and a slow grin spread across Big Ben's broad face as Mason explained about the hall.\n\nTaking Mason's keys, Braden started down the hall. Watching him, Mason saw Brigid, Marcus and Allan stopped at the end of the hall talking to the guards there. \"They're with me.\" He told Ben and the big man whistled, waving for his men to let them pass when one looked.\n\nAida and Cybil both came out of the room at the whistle, Cybil joining Mason as he started down the hall, Brigid rushing into his arms for a fierce kiss, then pulling back a bit to include Cybil. Marcus watched it, eyebrow rising a bit, but he was grinning. He'd wondered when his daughter would admit her feelings for the boy. The kiss she gave the girl was more of a surprise.\n\nAllan and Aida saw each other and froze, a soft smile growing on Aida's face, filling her eyes as Allan looked at her. If there had ever been a woman who had gotten away from Allan, it was Aida. They'd been at Harvard together, had clerked together at the Stanton firm. Allan had loved her so much it hurt, but she'd had a fiance and Allan had just been a friend. He hadn't realized she was still with the firm, so seeing her again was bittersweet.\n\nMarcus' greeting almost got the two guards at the door involved, but Ben waved them off, recognizing genuine affection in the bear-hug Mason was lifted off the floor with. The hug reminded Mason that his side still hurt, but he couldn't help laughing, hoping that his friend wasn't planning on wrestling there in the hallway.\n\n\"Danny's waiting outside for you.\" Was all Marcus told him when he put him back down, and Mason suddenly had a lump in his throat and was fighting back tears. Marcus just gave him a shove down the hall, and Mason kept going. Ben sending the two door guards to follow him.\n\nBrigid kept her arm around Cybil's shoulder when she started to follow. \"Give him a minute, then have him introduce you.\" She told her, then let her go.\n\nMason heard Danny whining softly before he spotted him. Marcus had left him sitting off to the right on some grass, and he was practically shivering as he looked at Mason. Squatting down, Mason whispered his name. Then fell over laughing as Danny trampled him, seemingly trying to lick Mason's whole face and squirming so frantically that Mason could hardly get a hold on him. Cybil watched it and found a lump in her own throat.\n\n***\n\nIt was pizza for dinner that night, Brigid ordering a dozen delivered from Geno's as well as sending three to Ardella's room at the hospital for her and Cybil to share with the guards there. Cybil had refused to leave her friend alone, pointing out that the couch in the room was more than long enough for her. She had informed them that they had better be there early to bust her and Ardella out though.\n\nAble Stanton had showed up, and there was a quiet discussion going on, which included him, Aida, Allan and Mason. Big Ben seemed to loom over the others at the table even sitting. He was the only non lawyer allowed to take part in the discussion, and then only after being retained by the Stanton firm as a strategist, making anything he said or heard fall under the attorney client privilege rule as work-product.\n\nCindy McFadden was having the weirdest day of her short life. She was eighteen and lived with her spinster aunt, working with her cleaning hotel rooms. Her mother was two years into a seven-year prison sentence for going after her last boyfriend with a steak knife. They didn't make much money that could be called extra, according to her aunt. She couldn't even afford to get a new prescription for her glasses, the ones she had not really doing the job anymore. So when she was invited to the lake that day, she'd jumped at the chance to do something fun, to forget her dull life for a day. Now she seemed to be stuck in somebody else's life.\n\nAt least the lawyer lady had called and explained things to her aunt, after telling her that she should come with them until things were settled, whatever that meant. And she'd been introduced to Mason, the cute guy that she'd been recording, though she found herself tongue-tied when he apologized for her loosing her phone. She really hoped he was telling her the truth about buying her any phone she wanted as a replacement. She sat off to one side, feeling really out-of-place, taking comfort from the beautiful dog that had decide to lean against her chair and be scratched.\n\nMarcus and Pat were at the bar, each on his second Guinness getting acquainted. Becky was behind the bar listening to them and flirting with both. She'd always had a thing for older guys, though she hadn't acted on it, and had already started flirting with Pat earlier that day. Now that things were settling down, and there was a second good-looking old guy, she was having a hard time remembering why she'd never let herself go for it. Shelby, who had been clinging to her father, had long since fled blushing in the face of Becky's behavior.\n\nAble told them that he had set a meeting at the firm the next day, so that whichever ADA got assigned to the case could get statements from Mason and the others that had been there. Going on to say he expected said ADA to have a waver from prosecution in hand when he showed up, Able having demanded it in exchange for their cooperation. Aida informed the others about the incident in the bar, and Mason filled in what he was willing to admit, while Allan frowned at him, causing Mason more discomfort at his disappointment than he would have thought possible.\n\nBig Ben was giving his assessment of the security and suggesting some added measures, when his cell went off and Eric told him they had a visitor at the gate. The table going tense when he went on to say it was Viktor Maslow and a driver.\n\nMason stood at the top of the steps watching the dark town car approach. Ben stood on his right, Marcus and Pat in the doorway, everybody else having been told to stay inside. The car came to a stop, and Eric climbed out of the passenger side front door, the driver getting out on his side and walking to the front of the car.\n\n\"Mr. Maslow would like Mason to join him in the car.\" Eric told his boss, giving him a nod to indicate that he had already done his recon before allowing the car to approach. So Ben nodded to Mason when he looked at him, and was impressed when the kid went down the steps and got in the car.\n\nViktor Maslow was a square-jawed man who had once been powerfully built, but was slowly going to fat and greying. His eyes were still sharp though, and he watched Mason as he took a seat next to him, impressed with the way he held his fear. If Alexei had only been more like this one.\n\nViktor waited until the boy's door was closed before sighing and nodding to him. \"You carry yourself well.\" He told him.\n\nMason nodded, and decided he needed to just get things started or his nerves were going to get the better of him. \"Thank you Sir.\" He began. \"I hope you don't take anything that has happened as meant to be disrespectful towards you.\" He finished, getting out the opening line Ben had coached him to use. Relaxing a little as he saw Maslow smile a little.\n\n\"My late nephew was an ass,\" he told Mason, \"and I know he brought what happened between the two of you on himself. Nor was what happened today my wish.\"\n\nMason was having a hard time getting passed the description of Alexei as being late. \"He died?\" he asked, thinking of Cybil and vowing to himself that he would keep her out of it no matter what happened.\n\nViktor understood more of what was on Mason's face and in his eyes than Mason would have believed. The old bartender had given him a full account of what had happened in the bar that night. He knew it had been the girl who came in with this young man that had beaten Alexei, and he could see that the man planned on protecting her. Why couldn't Alexei, but no, that was a useless wish now.\n\n\"Don't worry Mason, may I call you that?\" Mason nodded. \"Alexei only died as an indirect result of what happened that night. He didn't die from the beating your young friend gave him.\" Holding up his hand to stop him from denying her involvement. \"He was my sister's only child, and I brought him here for her sake, because she wanted him to have more. Unfortunately, that was never enough for Alexei. Nothing was ever going to be enough for him, because he was hollow, no soul.\"\n\n\"Misha died last year, and the little control she had over him seemed to die with her. What happened in that bar, when he tried to rape that girl, that would have been the last straw when I heard about it. No matter if you were there to stop it or not.\" And the old Russian sighed, slumping back in his seat. \"Many in my profession view women as nothing more than animals, but I never saw it that way. My father, whoever the bastard was, got me on my mother much the way Alexei was planning for your friend, yet she never held it against me, worked her fingers to the bone to see me healthy and educated.\" He trailed off, seeming lost in the past for a moment.\n\n\"I let them have him.\" He admitted quietly. \"I knew Alexei wouldn't survive long if all the ones he had run up against heard I was no longer protecting him. They found him a week ago, two shots in the back of his head. I've already sent his ashes to be buried with his mother, the only person that ever loved him.\"\n\n\"I'm sorry.\" Mason told him and meant it.\n\nViktor nodded and shook himself. \"What happened today,\" he began, \"the men who attacked you, they were Alexei's sycophants. A useless rabble that would never have risen in the brotherhood. If they weren't stupid enough to get themselves arrested, I'd have had to deal with them in some other fashion. You won't have to worry about them, I've already had my lawyer inform them, that they can either plead guilty to all charges and do the time. After which I'll send them home. Or they can join Alexei.\" And Mason could see the ruthlessness just under the surface.\n\n\"As for you and your friends.\" He went on, fishing a small box from his lapel pocket. \"I apologize on behalf of my sister. And ask that you give these to the young lady Alexei attacked.\" Opening the box, he showed Mason a pair of tear drop diamond earrings. \"I bought them for Misha, but she passed before I could send them. They won't erase what he did, but I think my sister would have wanted her to have them.\" He closed the box and handed it to Mason.\n\nViktor smiled and pointed over Mason's shoulder at the men gathered on the steps. \"That is quite the pack of wolves you have.\" He told Mason, \"But you won't need them for me. I'll make sure no one else thinks it's okay to come near you.\"\n\nMason closed his hand around the little box and breathed a sigh of relief, believing him. \"Thank you.\"\n\nViktor nodded then waved Mason towards his friends. \"I think we are done then.\" He told him with a smile, and Mason opened the door to get out.\n\n\"One final thing young Mason.\" Maslow spoke as Mason was getting to his feet. \"Just because I like you. I looked into you and your life, to see who you were. And I found a name that I don't believe you've heard. It's a dangerous name though, so be careful how you use the information.\" And he paused, studying Mason's face for a long moment. \"I'm told a man named Brian Meyer was a well-known PIRA demolitions expert.\" Then he waved for Mason to close the door and turned to face forward in his seat. Mason closed it mechanically, trying to grasp the implications of what the man had told him. He was still trying when the town car pulled away and everyone flooded from the hall to gather around him asking questions.\n\n***\n\nBrigid and Mason sat on the steps while Danny explored the night, they couldn't see him, but knew he wouldn't go far. The long day of worry and fear had left them just wanting to sit quietly and enjoy a little peace with each other.\n\nMason had related his conversation with the old Bratva boss with the others, leaving out the fact that Alexei was dead, simply saying Viktor had sent his nephew back to his mother. And he hadn't told anyone about the parting information. If he could believe it, he now knew the name of the man who had killed his parents, or had at least made the bombs used. But the warning wasn't lost on him, not after the way things had gone that day. He had decided to think about it for a bit, instead of rushing around bringing more danger around the girls.\n\nAble Stanton had been the first to leave, reminding them that they still needed to go give statements even if the four men pled guilty. Pat and Ben had left together, Ben volunteering to take Pat to his pickup out at the lake, saying he lived out that way. Big Ben left his men on duty though, since he didn't trust the Russian and Allan had already talked to him about providing full-time security.\n\nCybil was relieved like everyone else when Mason called her and told her what had happened. And Ardella wanted to know if that meant she could get out of the damn hospital. Mason had just laughed and promised to be there early.",
        "Aida Caro was still inside, her and Allan siting at the bar catching up. Katey and Shelby were getting Cindy settled in a room, someone would take the girl home the next day, picking up a new phone for her on the way. Able wanted the original source of the video in case it ever became necessary to use it.\n\nBrigid giggled and Mason looked at her in surprise. So she told him about the tour she'd given her father after showing him a room to use. He grinned when she warned him to expect a lot of shit about the girly gym he was building. Then had to coax her into telling the rest as she blushed and covered her mouth trying to muffle more giggles. When she had shown Marcus the spa, it hadn't been empty.\n\nBecky had gotten pretty worked up as the evening went along, so when Pat left and Marcus went with Brigid to find a room, she'd wandered down to the spa, stripped and waded in. She was absently caressing herself while thinking about the two of them. As different as they were in build, she found both to be fine specimens. Maybe she would take one of them as a lover, give in to it, live it. And then with a pleasant tremor, she thought maybe she'd take both.\n\n\"This is one of my favorite places here.\" Brigid was telling her father as they walked off the stairs and she turned him towards the bath. And Marcus had pulled up short, startled to see Becky lounging naked in a large tiled pool. They locked eyes, her ample breasts floating in front of her, and she seemed to almost vibrate for a second then smiled broadly at him.\n\n\"I can see why.\" Marcus muttered to Brigid, who was trying to suppress her laughter. \"Hello again girl.\" He called, waving at Becky and smiling. \"My apologies for interrupting your bath, though I can't honestly say I regret it.\"\n\nBecky was still just a bit shaky, she'd been close to climaxing when they had walked off the stair. And seeing him look at her had pushed her right over. It wasn't life shattering, but it was satisfying, and damned if he didn't see it. The smile was pure rogue as he feasted his eyes on her, setting off a few extra little sparks between her legs.\n\nBecky stood and walked across the bath to climb out, water running off her slightly plump but very plush body. \"I'd invite you to join me, but it seems I'm done now. Would you hand me one of those robes?\" she asked, pointing at several hanging on the wall close to him. She was trying to be bold, but when he plucked a robe off a hook and approached her, his gaze never leaving her body which he scanned from the toes up, his grin showing more teeth the higher he looked. She damn near came again.\n\n\"It's a hard thing to ask a man to cover something so lovely.\" Marcus rumbled at her as he held the robe open for her, then felt her shiver as he slid it up her arms and over her shoulders. \"Thank you girl.\" He whispered by her neck before stepping back.\n\nBecky barely stifled a groan and Brigid choked back a laugh at the way her eyes rolled back. Marcus watched her go up the stairs, then turned to his daughter, grinning from ear to ear. \"She's a fine young beur.\" He told her and she laughed.\n\nMason laughed, picturing it and Danny came running, his tail lashing. \"I think Allan might be getting lucky tonight too.\" Brigid went on with a grin, and Mason stared at her confused. \"There's something between him and the lawyer lady.\" And laughed harder at the unbelieving look Mason gave her. \"Sometime I wonder how dense you are.\" She teased him. \"I'd be afraid to walk between the two of them, all that sexual tension might leave me in a puddle on the floor.\"\n\nThe subjects of this latest insight, were currently looking at each other silently. They had caught up, Allan happy to learn her marriage hadn't survived her associate days in the firm, the hundred hour weeks turning them into strangers, and felt only a little guilty about it. He was already feeling the old comfort in her presence, and thought she was too. The silences were growing though, and he was trying to figure out how to make that move he had never figured out in their first incarnation.\n\nAida was on the same page. But she was damned if he was going to wimp out this time. If he'd only stepped up all those years ago, but there had been William, she couldn't really blame Allan, considering she hadn't sent William packing back then like she'd wanted to. Thinking, fuck it, she slid off her stool and pulled his head down for a kiss.\n\nMarcus was in the huge shower in his room, the girl was stuck in his mind, but he was refusing to touch his stiff Irish pride, no matter how hard it got. There was a click and a breath of colder air, and he swung around, freezing when he found Becky stepping in with him.\n\n\"I see you're still thinking about me too.\" She said to him, looking him over and licking her lips. He had a harder body than she had expected to find, his shoulders and chest still heavy with muscle, even if his gut had started to grow a bit. The grey that had just frosted his head, had spread south, but she found it sexy, and the old guy definitely didn't have a case of ED. Pleased to have turned the table on him this time, catching him naked, she smiled and stepped into his arms.\n\nThe kiss stirred things in Marcus, it was the first since his Neve had left him. It hurt as much as it thrilled him, and with a sigh he said goodbye to another tiny part of his old life. Still he hesitated, \"Your sure a tempting fine beur, but I don't want you getting the wrong idea here.\" He started and she laughed.\n\n\"Marcus,\" she interrupted, \"I've always had a thing for older men. Granted I never scratched the itch until now, and you're about as close to my fantasies as I could ask for. But I plan on having some fun, not settle down. Tonight I wanna suck this beautiful cock of yours and hope you ruin me with it by morning. But tomorrow I might just chase Shelby's dad, if you can handle that, then shut up.\" And she sank to her knees.\n\nMarcus groaned as she took hold of him and leaned in to lick at his balls. \"He'd be a lucky bastard.\" He growled.\n\n\"I expect you have a room around here somewhere?\" Aida asked softly as they finally broke the kiss.\n\nAllan grinned and took her hand. More than a decade had passed, but in that moment, she was the college beauty that had haunted his dreams, the one person that had always been able to make him laugh. \"Just don't pinch me,\" he told her, \"I don't want to wake up.\" And led her toward the elevator.\n\nMason noticed Brigid shiver and realized the night was growing cold. He rose from the step and offered his hand to her. \"Let's go back inside.\" He said as she stood, then he turned and called for Danny. The dog trotting out of the dark with Eric Braden at his side, the man gave Danny a final scratch and waved to them before fading away again. Both of them trying to track him and failing.\n\nBrigid shook herself and let out a small nervous giggle, she didn't feel threatened by the man, but there was certainly an air of danger about him. \"Yeah.\" Mason agreed, understanding, then turning and pulling her inside after him, Danny looking back out into the darkness and barking once before following them through the door.\n\nBrigid just smirked at Mason when they looked around and saw no sign of Allan and Aida. The only person left was Shelby, who was trying to finish an engineering assignment that was due the next day. Mason sighed inwardly, wondering how he was going to juggle everything he needed to do himself the next day. They said their good nights to her and headed up the stair. Danny was already curled up on a couch, leg twitching at some prey that ran in his dream.\n\nBrigid stopped them on the second floor, asking Mason to wait for a minute while she ran down to her father's room to see if he needed anything. Her knuckles stopped only an inch from his door though, when a very female moan of pleasure come from behind it. She blushed, stepping back guiltily, then stepped forward again, not able to help herself as she put her ear closer. A smile spreading across her face as she recognized Becky's voice in there saying things to her father that made her cover her mouth so she wouldn't laugh out loud.\n\nMason heard a different sound. A faint sob, only recognized when it happened a second time. He walked quietly down the hall, hearing it again at Katey's door. It stopped at his knock, and he hesitated. But when she didn't answer, he tried the knob and stepped in, calling her name softly from the open doorway. \"What's wrong?\" he asked, and she started crying quietly again, the pain reaching out and pulling him to her. He sat on the bed, touching her shoulder, and she rolled over, sobbing as she borrowed into his chest, his arms going around her.\n\nBrigid stood in the door, fighting a tear of her own as she watched Mason hold the girl. Nodding her understanding when he looked over at her, before pulling the door closed and heading to her own room. It had been a long day.\n\n***\n\nWhen they met with the ADA the next day, the man couldn't have been less interested in what they had to say. He rushed them trough their depositions, and was gone inside of an hour. It seemed that all four men had taken Maslow's suggestion to heart, and there wouldn't be much more than a sentencing hearing. Able still got the waver from prosecution before he allowed any interviews.\n\nMason had woken up still holding a sleeping Katey. She had eventually cried herself out and he'd gotten her to talking, surprised when she began telling him about her childhood. He listened, hurting for her as she quietly told him things even Cybil and Ardella had never heard. Wishing he could go back and change her past, vowing to himself to change her future. He'd held her as she fell silent, drifting off.\n\nHe was sore and stiff the next morning, but managed not to groan too loudly as he shifted to a more reclined position on the bed. Kissing Katey's brow as she stirred and protested his movement. \"Morning.\" He murmured to her as she opened her eyes and looked at him shyly, embarrassed that he knew so many of her secrets. Then arching and laughing in surprise as he tickled her ribs. Squealing as he got serious about it, a hand at each side, only stopping when he was lying atop her, looking down into her happy face, leaning down to kiss her, one hand sliding up to hold a breast.\n\nIt had started slow and gentle, both feeling tender towards the other from the night before. But as Mason filled her, and she clutched at him tighter, passion grew, became urgent. And the cries heard in the hall were far different from the ones that had drawn him to her. They both had too much pent-up in them to last long, clutching at each other as they became one for a brief eternal moment.\n\nDespite Ardella's hopes of getting out of the hospital early, she wasn't released until after noon, Cybil skipping classes, refusing to break her vow to stay with her. Both were tired after a night where nurses had entered the room every two hours to wake Ardella and shine a light in her eyes, seemingly just to see if she protested.\n\nBrigid took perverse pleasure in giving her father searching looks, and watching him blush and look away. Laughing when he finally got up from breakfast and went outside muttering to himself, Danny at his heals. Becky doing a little blushing of her own when she realized what Brigid had been doing.\n\nAllan and Aida had hardly paused to say good morning on the way out the door, Aida reminding them of the meeting later as she followed Allan out.\n\nBrigid was helping Katey clear the table when she saw the girl Cindy standing by the Steinway, trailing her fingers lightly along the filigree. She had such a wistful look about her that it stole Brigid's heart. She walked over to her, smiling reassuringly when the girl jerked her hand away from the piano, a brief flicker of fear in her eyes behind the glasses.\n\n\"Do you play?\" Brigid asked her, sitting on the bench and folding back the keyboard cover.\n\n\"I was learning once.\" The girl told her, longing and loss both in her voice. \"My dad was teaching me, before...\" and she trailed off, lifting her glasses to rub at her eyes and turning away, but not leaving. And Brigid could guess the rest.\n\n\"So, what do you remember?\" she asked her, scooting over and patting the bench, smiling at her hopefully when the girl looked back at her.\n\nIt had been a long time since Cindy had seen anyone look at her like that, maybe since her father had gone off to Afghanistan. Her mom might have once looked at her with soft eyes like that too, but not after the day they brought the news. Hesitantly, she took the invitation, sitting on the end of the bench and studying the keys, trying to remember her finger positions and not look at the woman.\n\nThe girl started out slowly, but was soon lost in it, Brigid surprised and leaning back to get out of her way as Beethoven's Love Story began filling the hall. Her heart breaking as she saw a tear slide down the girl's cheek and she stopped. Wrapping her arms around her and hugging her as she shook. \"Your father must have been a good teacher.\" She told her, rubbing her back.\n\n\"He was the best.\" Cindy told her in a small voice, hoping she would hold her just a little longer. Wishing she could stay there forever, thinking about her dad.\n\nCindy couldn't believe her new phone. Brigid had gotten her a Samsung Galaxy s6 edge and paid for a whole years worth of unlimited service. It beat the hell out of the prepaid one she had lost. She was already trying to decide how to hide it.\n\nBrigid noticed the girl's nervousness grow as they got closer to her home, and decided to go to the door with her, in case her aunt had questions. They lived in a rundown apartment complex, shopping carts everywhere, the rickety balconies piled with bags full of cans and plastic bottles. Cindy thanked her again at the door and slipped inside, not giving Brigid a chance to see the apartment, let alone her aunt.\n\nBrigid stood there torn, looking around at the clutter under the stairs to the second floor, at the rotted out carcass of a propane barbecue beside the door. She felt a connection to the girl and hated to just leave her here. Then she heard what could only be someone getting slapped followed by a cry. She was already at the door, when she heard Cindy's voice cry that it was hers. She pounded on it, gritting her teeth when a different ugly voice shouted for her to go away or she would call the cops.\n\nShe was reaching for the knob when the door opened and a crying Cindy looked around it at her, the side of her face showing a clear hand print. Brigid just went in passed her, her sight locked on her bitter-faced and now scared aunt. She had the new phone in one hand and a pack of cigarettes in the other as she backed up.\n\n\"I'll call the cops!\" She threatened, trying to bluster even as she retreated.\n\nBrigid just kept going, closing on her as she backed up against the cluttered table in the dining area. Taking the phone from her unresisting hand, fighting hard to not slap the shit out of her. \"This is Cindy's.\" She told her in a low voice.\n\n\"Well, she owes me.\" The woman tried. \"I gave her a place, I take care of her. And I had to cover her shift last night. You got no right coming in here.\"\n\nBrigid glanced at the filthy kitchen over the woman's shoulder, at the whole place. \"You call this taking care of her?\" she asked. \"You think taking care of her includes beating on her? Steeling from her?\" she was loosing it.\n\n\"If you can do better, take her.\" She started, and Brigid hit her. Mason wasn't the only one Marcus ever showed how to throw a straight right, the woman just folded and ended up lying under the table. It felt good, she just wished the woman had lasted long enough to do it again.\n\nTurning to the wide-eyed Cindy, Brigid tried to be gentle. \"I'm sorry about that,\" she started, then shrugged, admitting she really wasn't. \"You're eighteen Cindy?\" she asked, and the girl nodded. \"Would you like that?\" she went on, \"Coming back to the hall with me?\"\n\n\"To live?\" It was a small voice, hope and fear in equal measure. It was enough for Brigid.\n\n\"Yes.\" Brigid told her, and watched the hope grow. \"Go get anything that's important, I'll make sure she doesn't stop you.\" She went on, handing the phone back to her.\n\nWhen she came back with an armload of clothes and a framed picture that had to be her father, Brigid wanted to kick the groggy woman trying to sit up under the table. She considered dragging her out from under it and explaining how things were going to be. Then thought the hell with it and hugged Cindy instead.\n\n\"You ready?\" she asked and got a nod, the girls arms tightening around her small bundle, but she never looked back as they walked to the car. Brigid glanced at Cindy as they drove away, saw her clutching the new phone and realized that the clothes she had on must make up a third of her wardrobe, if the rest was the small pile in her lap. Instead of heading back to the hall right then, she drove back to the mall where they had gotten the phone.\n\n\"What are we doing here?\" Cindy asked, tucking the hand with her phone under some of the clothes.\n\n\"Shopping.\" Brigid told her. \"I like to shop after I bitch slap someone.\" And heard Cindy giggle.\n\n***\n\nMarcus was at loose ends. He wished he could hold Neve, talk to her, she had always been the smart one. His Neve. She'd set him straight in a hurry. He'd known that if he ever strayed on her, she'd have taken a tail docker to him and taken his nuts with her teeth to boot. The girl was feisty like her. They would have hated each other, of that he had no doubt. He was walking the property, already having seen what there was to the various construction projects.\n\nThe slab for his new cottage had promise, it looked like it would be roughly twice the size of the carriage house, though it seemed to be laid out the same. Looking up at the hall, he hoped he and Danny could get used to it looming over them like that. They'd probably never see the sun again. He'd pulled back the cover and looked at the GTO, smiling and wondering what kind of crazy stuff the boy would do to this one. He'd been impressed with the way the Chevelle had turned out, but would never admit it.\n\nHe took note of the maples scattered in with the elms, glad there were more of the later, and that none were reds. He'd have had to take those out before bringing his sheep in. He'd still have to watch and see if the Norway maples bothered them, but if he was careful where he set the water tanks, he could probably keep the sheep from grazing under them. He knew Mason had seeded for pasture, he could still see signs of the harrow discs as he looking for a good place to build a shelter for the sheep.\n\nHe was a little surprised the boy didn't already have a shelter started, but was just as glad, because he'd most likely have put it back among the trees. No, he wanted it out in the open, where the sheep could get out in the sun even in the winter. If you closed them in too tightly, they'd make each other sick, better a long three-sided shed with enough roof for the flock to fit under easily, but with an open area so they could get some sun while staying out of the wind. There was plenty of time to get it done, the new metal buildings went up fast. He'd talk to whoever ran the local feed store, and see who was doing that kind of work around there, have them build a small feed barn too.\n\nHe'd watched the soldier, Eric, watching a crew stringing fence. Knowing full well he only saw him because the man let him. Danny seemed to think the guy was okay though, so he probably was.\n\nHe wondered if she would come see him later, maybe they could sneak down to the spa, he'd liked the way her tits floated while her hands did things barely seen in the dimly lit water.\n\nAllan reclined on Aida's bed. She lay with her head on his chest, studying the ring again, a smile of contented happiness pulling at her lips. \"Second thoughts?\" he asked her, laughing and protecting himself as she started smacking his chest and sat up to look down at him. Why hadn't they ever tried this before, it had been a recurring thought for both since the night before.",
        "Seeing the gleam in his eyes, she leaned down and kissed him, throwing a leg over him as his arms encircled her. Grinding herself against him as their kiss grew feverish, grinding harder as he got harder. She reached back and guided him, sliding down his length as he sighed her name.\n\nCindy hung up the last new top in her new closet and turned to Brigid, catching her by surprise as she stepped up and kissed her. She thought she'd misread things for a second, as Brigid stiffened, then sighed inwardly as the pretty redhead's arms went around her and she returned the kiss.\n\n\"What was that for?\" Brigid asked her as they pulled back from the kiss, puzzled but having enjoyed it.\n\n\"I just wanted you to know I was okay with it.\" Cindy told her, and tried to lean in for another.\n\nBrigid was more confused though, so she pulled back a little. \"Okay with what?\"\n\n\"With whatever arrangement you have in mind in exchange for my staying here. I'm fine with it, in fact I think I'll enjoy it.\" Cindy told her, and Brigid felt her stomach knot up.\n\n\"Oh, No honey.\" She told her, gathering her into her arms and hugging her. \"No one here is going to expect you to do that.\" Feeling Cindy stiffen a little, she let her go, but took her hand and led her from the closet. Looking around, she silently cursed the one chair idea for these rooms, knowing the edge of the bed was out of the question. Crossing to the desk, she pulled the chair out and over by the recliner.\n\n\"Have a seat.\" She told Cindy, sitting on the school chair herself.\n\n\"If you don't want that, what do you want?\" Cindy asked, sounding unsure now as she sat as far away from Brigid as she could in the big chair. And fiddled with the new glasses that they'd gotten from a lenscrafters in the mall. It broke Brigid's heart and made her consider what it was she did want.\n\n\"I don't have any expectations of you Cindy.\" She began. \"I guess I didn't think very far ahead today. I just know I like you. When you played today, I felt the pain you put into it, but there was also the memory of love, of your father. It spoke to me I guess. Like he was reaching out through the music, begging for someone to see his daughter.\" And she paused, getting up and squeezing in beside Cindy as her eyes welled up and tears ran down her cheeks. Taking her in her arms as the girl turned into her and wept.\n\n\"I couldn't leave you there.\" She said quietly, as much to herself as to the girl.\n\nWhen Mason got back to the hall, Katey told him Marcus was out walking somewhere, so he went looking. He was a little surprised to finally spot him and Danny sitting at the base of one of the old elms talking to Eric Braden.\n\n\"I've done my best to teach the lad how to scrap.\" Marcus was saying, and Mason figured he'd switched topics when he saw him approaching, so he waited for the barb as he sat cross-legged on the grass by them. \"But I'm afraid my daughter pampered him too much, why I've never even seen him get properly drunk.\"\n\nEric just grinned at Mason, confirming his theory about the subject change. In fact, they had been talking about the way the war in Iraq had changed to nature of security companies like Big Ben's. Before the war, Ben had tried to hire retired law enforcement officers exclusively. Simply because of the Federal Law Enforcement Officers Safety Act, that allowed them to carry in all fifty states. When the statute was broadened to include active duty military personnel, it opened the door for people like Eric. The only caveat, was that Eric and the ones like him had to spend a certain amount of their time doing security work for the military. Usually port security or filling in for the embassy guard force cuts.\n\n\"Ben wants to see you when you get a chance.\" He told Mason, sticking a stalk of grass in his teeth. \"I suppose I could help you toss him around some if you think it would help.\" He told Marcus, but winked at Mason. \"We could probably toughen him up.\"\n\nMarcus grinned but shook his head, \"I'm thinking he's probably got too many bad habits by now, living with all these girls.\"\n\nMason had been gathering a handful of grass, and with a casual flick and a grin, he tossed it in Marcus' face, rolling to the side as Marcus lunged at him howling. Mason wasn't fast enough though, and Marcus got a hold on his legs and started crawling up him. Danny was dancing around them cheering them on as Eric looked around before settling back with a grin of his own.\n\nThey wrestled, one then the other gaining the upper hand briefly, until Marcus managed to stuff some grass in Mason's mouth. Laughing and rolling away as Mason sputtered and spit. Propping himself up on his elbows, chest heaving like a bellows, Marcus looked over his shoulder at Eric. \"See what I mean?\""
    ],
    "authorname": "singleot",
    "tags": [
        "blowjob",
        "caught",
        "exhibitionist",
        "flirting",
        "group",
        "rich",
        "romance",
        "young"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-trust-ch-06"
}