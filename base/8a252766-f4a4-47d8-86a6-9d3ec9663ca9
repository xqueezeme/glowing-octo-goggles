{
    "title": "Anderson Family Journals #08",
    "pages": [
        "I do not grant permission to anyone to re-post or archive my stories. If you want to download my story for personal use, be my guest, but that's as far as my permissions go.\n\nOtherwise, have fun and enjoy.\n\n<p align=\"center\">* * * * *</p>\n\n<p align=\"center\">#08 Timmy</p>\n\n<p align=\"center\">Kinky Games, Hotel Plans</p>\n\nMonday\n\nSomething woke me five minutes before my alarm went off. I had planned to be at my sister's door by five twenty-nine and inside her room by five-thirty, but Diana had other ideas. Ideas she hadn't bothered to tell me about, but I don't mind one bit. From within the depths of my sleep, a tingling pressure surrounded my glans, trilling down my shaft and into my balls, where pleasure swam through them, building the fury of my morning cum for an explosive release.\n\nI woke with a gasp.\n\nDiana lay between my legs beneath my blankets. She gripped my muscular thighs as she worked her lips over my cock--sucking my prick into her warm mouth with that Look, Daddy, no hands talent girl has at some point in their life. Moaning--not quietly--I tossed my blankets aside. Diana had fastened her blonde hair into a ponytail, and she was bobbing her beautiful face over my cock, taking me halfway into her mouth without gagging, choking, or sputtering. Her nostrils flared, but she breathed through her blowjob, making me wonder if she had been practicing on some secret dildo I hadn't known existed.\n\nI propped myself onto my elbows so I could watch her. My sister's drool glazed my shaft, making my fuck stick glisten under my bedroom lights. The front of my cotton gym shorts lay hooked beneath my balls, and for a moment, the thought, Damn, I'm a heavy sleeper, rolled through my mind. The thought disappeared as soon as it had come as Diana pulled her lips from my mushroom tip, peered into my eyes, and swirled her tongue around my crown while never losing eye contact with me.\n\n\"Do you like your big sister's mouth around your cock?\" Diana asked, giving the underside of my tip a quick, cat-like lick, scooping up the precum slipping out of my pisshole.\n\nMy sister cupped my balls before I managed to speak. Her palm's touch against my sack tightened my scrotum, and a cold, thrilling chill passed through my nuts, tightening glans as pleasure erupted from my body. I came, cursing and panting as my cum exploded from my tip. Diana wrapped her lips around my glans and sucked down as much of my sticky jizz as she could manage, pumping my thick pole as fast as she could, her hand motions making naughty wet sounds that kept my balls tingling.\n\nAfterward, she stood on her knees. She was wearing a gray, old eighties style crop top, with a wide neckline and a threaded hem that didn't cover the bottom roundness of her big breasts. Diana's nipples raised two big bumps against her top. Below that, a pair of woman's pink Calvin Klein panties hugged her pussy tightly, outlining the bulging crescent of her labia in a meaty, mouthwatering cameltoe.\n\n\"Good morning, little brother,\" Diana said, then she turned around and knee-walked from my bed. She didn't get far, not when the pink line of her thong riding up the crack of her ass met my eyes, her bare cheeks like two, dripping wet, oven-hot hams.\n\nI caught my sister around her waist before she reached the end of my bed, my dick flopping around in a state of semi-hardness. I yanked Diana back, her lean body easy for me to lift, and she uttered a rough, \"Uh,\" as I turned her in the air and laid her on her stomach.\n\n\"Fuck,\" Diana grunted, her voice strained as she tried to crawl away from me, but fuck didn't mean no.\n\nI pressed my body to hers, cock-to ass, reaching beneath her lean body with my right hand to grope her tits.\n\n\"Your turn,\" I whispered in her hair.\n\nDiana turned her head, cursing at me while trying to make her getaway. I stayed balanced on my left hand, using my hips to pin Diana's lower body to the bed. We groaned together as I ground my cock into the center groove of her ass, rubbing the line of her thong.\n\n\"My turn for what?\" she panted.\n\nI could hear the smile in her voice.\n\nI moved my hand from her tits to her pussy, holding her soft cunny folds in my palm, squeezing, getting off on the wetness soaking her panties. I worked my fingers between her legs, rubbing her lips as I sawed my hand back and forth through the pink cookie dough pressing against her panties.\n\n\"Fuck,\" Diana grunted when I slid my fingers beneath the gusset of her panties. For the next several minutes, her low moans, strained whimpers, and soft cries filled my bedroom. I hooked my fingertips into her smooth snatch while grinding the length of my fingers against her clit. She struggled, never saying no, as my cock turned to steel against her butt. Heat spread throughout her body, and the more she fought, the harsher she uttered her pleasure-filled moans. By the time I pulled my hand away from her cunny, Diana was sweating as much as I was.\n\nI slid my right hand over her butt and under her thong, forcing the elastic waistband down her cheeks, hooking them against the back of her thighs. I cupped my sister's blonde pussy from behind, the triangle between her legs as wet a sauna, dampening my hand as I pushed against her silky pussy lips. Fuck, I wanted to fuck my sister--but not yet.\n\nNot until she let me.\n\nGroaning, I pushed my thumb into her pussy, cupped the front of her cunt, and pressed my palm into her clit while thumb-fucking her from behind. She braced herself on her hands and fucked her pussy back onto my thumb. My sister picked up speed, spreading her legs and bouncing her butt upward as much as she could. Her moaning turned to fast whimpers, and soon my sister was coming on my fingers and leaving a mess in her panties for me to wash on Friday. When she could move again, she kissed me on the lips, licking her tongue along the length of mine. She mentioned my hard-on, then added, \"You don't get to play with that big thing before school.\"\n\nThe bitch.\n\nIn the hallway, I heard Diana say, \"What are you doing up so early?\" and then I heard Abbey's voice; the little girl was spying on us again. Then I heard Diana tell our little sister that what she did with her brother in his room was none of Abbey's business, but then she invited Abbey back to her room to talk. Diana didn't sound angry; she sounded more amused at finding Abbey in the hallway than anything else. My hard-on only grew harder when I wondered what Diana had to say to our youngest triplet.\n\nIf Diana wants you to know, then Diana will tell you, won't she?\n\nOh, man, but damn my sister, and whatever it was she had done to my head.\n\nTuesday\n\nAbbey jumped on my back today while I was watching TV in the living room. There were plenty of places to watch TV in my mother's house, but it seemed the living room was the only place anyone ever wanted to do it.\n\n\"Do you think I'm too young to have a boyfriend?\" Abbey asked, her little, lightweight body pressing into mine.\n\n\"It depends on how good of a boyfriend this guy is to you,\" I said. Fuck, sometimes it was hard to remember that Abbey was as old as I was. I turned my head into my shoulder as if I could look behind me, but I couldn't see her. \"But you're eighteen, so you're old enough. Do you have a boyfriend?\"\n\n\"No.\"\n\n\"Do you want one?\"\n\n\"Maybe.\"\n\n\"You okay?\" I asked. \"Do you need to talk about something?\"\n\nAbbey hugged me from behind, saying, \"Let's go wrestle.\"\n\nSo we did.\n\nLater that night, Diana told me--well, she moaned to me--while I was sucking on her tits, \"You're good with Abbey.\" For some reason, when she mentioned Abbey's name, I bit her right nipple hard. \"Ah, fuck, you bastard.\" She moaned again as I sucked the nub tenderly. \"Really good with her, oh, fuck. Just like a big brother should be.\"\n\nI bit her nipple again.\n\n\"Don't stop, Timmy,\" Diana whimpered. \"Hurt me.\"\n\nI didn't hurt Diana, but that night ended with my hands on Diana's desk while she knelt behind me, jerking me off and tonguing my asshole. What an intense, fucking come that was.\n\nWednesday\n\nDiana dressed in a semi-schoolgirl outfit, a black top with a white collar, and a gray skirt with a box pleat design. The tightness of the elastic band around my sister's small and slender waist was the only reason the skirt didn't slide down to her white tennis shoes. To top off the look, she wore her hair slicked back, flowing into a pair of thick braids, the ends stopping in straw-like pompoms. She told me to get out of my fifth-period class right after lunch--right after--and meet her in the drama theater.\n\nSo, I did.\n\nOur school has a big drama theater, but I don't do drama, so I had to find my sister in the back rooms by a series of text messages. Diana's best friend, Lana, a pale Polish-Vietnamese girl with big breasts, blue eyes, and dark black hair, found me. She shook her cute face at me for some reason, side-to-side in the way a mother would her troublemaker son. Then, in perfect enunciation, Lana told me that my sister, Diana, was waiting for me in a changing room at the end of the hallway, easily found behind the main stage. Lana still had to lead me to the hallway.\n\nI found Diana sitting on a table, her back to a light-lined vanity mirror, her vintage canvas bookbag at her side. The bright bulbs behind her made her front darker, harder to see. Diana sat with her knees hanging off the end of the table, feet swinging, long laces dangling, legs parted. Her mini, schoolgirl skirt hung between her thighs, the edge of her hem barely covering V of her pussy.\n\nMy cock swelled.\n\n\"You never said that you liked my outfit this morning,\" Diana said, looking down at herself. \"Dressing like a schoolgirl is pretty noticeable, isn't it? Girls don't do it unless they want attention.\"\n\n\"I like it,\" I said, my cock still growing and thickening.\n\n\"Yeah?\" She fingered her white collar. \"Do you like the blouse? The collar? It's cute, right?\"\n\n\"Yes,\" I said, my knob inflating as I took in the fullness of my sister's tits pushing against her top.\n\n\"And my skirt?\" Diana asked, raising her chin a touch to give me a half-lidded stare. \"Do you think our teachers wished the girls had to wear uniforms like this?\"\n\n\"I do,\" I said. \"I wish you did.\"\n\nMy jeans tented.\n\n\"What about my panties?\" Diana asked. She placed her hands on her thighs; fingertips pointed at her knees. She slid her hands forward until her fingers touched the smooth skin of her thighs, and then she pulled her skirt back, back, and back, all the way to her waist as she spread her legs open for me. Diana didn't stop until she had gathered the front of her skirt around her waist. \"Do you like my panties?\"\n\nI stared at her sheer, white, fishnet panties. They pressed tightly against her pussy, a size too small, and her plump cunny flesh bulged outward against them as if trying to squeeze through the little gaps between the netting pressing against her juicy clam meat.\n\n\"I like them,\" I whispered, my cock reaching its full hardness. My sister's eyes flicked down to my cock. \"You look innocent and sexy, is, but also\"--but also what? I wanted to say something hot--\"but also like you know it, and you're daring someone to do something about it.\"\n\nDiana smiled.\n\nHeat filled my cheeks.\n\n\"I have something for you.\" She unzipped her bookbag, removed a dark crimson scarf, and from underneath the scarf, she removed a small, silver butt plug with a round base. She tossed it to me. \"If you like my panties so much, come and get them.\" Diana put the scarf down, turned her head, and looked at me from the side, her cheeks turning crimson. \"If you can get my panties from me, I'll let you fuck that plug into my butt.\"\n\n\"Okay,\" I said, unable to keep an ear-to-ear grin from my face, but then I thought, What does if mean?\n\nI got my answer a second later.\n\n\"And,\" Diana said, \"no doesn't mean anything during this game, so play along.\" My sister looked at me with an anxious smile on her face, as if wondering in which direction she should run first.\n\nMy heart thumped against my chest. My head lightened. I stood there, staring at Diana, wondering how to start this game of hers. I almost swooned. Diana bit her lower lip, looking helpless, and a wad of precum slid through my shaft, forcing me to action.\n\nDiana jumped from the vanity counter, dodging to my left, but I caught her by slipping my hand around her waist. She twisted away from me, her back to me, and I tugged her against my cock. She grunted, I groaned. I had one hand around her waist, the other holding the small plug, so I did the only thing I could think of and slipped the plug into my mouth tapered end first--at least it would be wet when I pushed it into her asshole.\n\nWith my fingers free, I ran my hand up the side of her leg and under her skirt. Diana twisted from side to side, fighting me pretty good, so I lifted her off the ground, walked forward, and bent her over the makeup counter, forcing a grunt from her lungs. We faced the mirror, and she glared at me, saying \"No\" several times in a series of pitiful whimpers and whines.\n\nI pulled the plug from my mouth and said, \"Suck this.\" Diana fought her mouth away from the plug as much as she could, shaking her head, pursing her lips shut, but there wasn't much she could do in the end. Finally, she opened her mouth against my gentle pressure, and I pushed the small, silvery plug between her lips and onto her tongue.\n\nAfter that, it wasn't hard to flip her skirt up onto her back. Her panties ended in a G-string that ran the length of her crack without hiding the spokes of her asshole. She tried to push her skirt back down, managing to cover the tender meat of her buns a few times before I pinned her wrists behind her back with my left hand, holding both of them together as she glared at me through the mirror.\n\nUnable to stop myself, I spanked my sister's right cheek. Diana gasped. She widened her eyes at me, so I spanked the left one. She gasped again, the plug falling from her mouth. I spanked her pussy, stinging her, massaging her after.\n\n\"Fucker,\" Diana hissed.\n\nI grabbed her G-string by the elastic waistband and yanked it down her ass, getting stuck at the backs of her thighs. I went for the plug, but Diana said, \"Uh-uh. I said to take my panties from me first.\" I left the plug alone.\n\nMy sister lay pinned against the edge of the counter at her waist. I grabbed the elastic in my hand, intent on snapping the bands, but I thought that might hurt her as the elastic dug into her skin. I started to let go, but Diana said, \"Do it,\" in a stern, daring voice.\n\nI looked into the mirror, meeting my sister's eyes, and as hard and fast as I could, I yanked the elastic back and to the side. Diana gasped as her body jerked backward, and I grunted as the thin string bit into the skin of my fingers, snapping against my flesh. The right side of my sister's pretty little panties fell away from her body, opening her pussy to me. I grabbed the other side of her waistband, pulled again, having to yank twice before the elastic snapped under my strength.\n\n\"Uh,\" Diana grunted with each yank, then she rested her head against the counter. I reached between her legs, curled my fingers around the gusset of her panties, and tugged them from her pussy.\n\n\"Yeah,\" Diana whispered. \"You're so fucking nasty to me, bro.\"\n\nHer cunny lips glimmered with juice. I cupped her pussy, wetting my fingers with her girlish honey. Sighing, I slid my fingertips across her perineum, loving the smooth flesh between her pussy and ass holes. Diana jumped. She wiggled her butt, but I lodged the tip of my index finger against her asshole and pushed inward without being nice about it.\n\n\"Oh, fuck,\" Diana groaned as her small crater pushed inward under the pressure of my fingertip. \"Fuck, oh fuck, gawd, Timmy.\"\n\nMy sister's throaty moans caused another spurt of pre-cum to shoot from my cock. I kept pushing my finger into her asshole, flexing my cock as I did, my knob straining against my jeans in a strange pseudo-fuck that left me panting. Diana's asshole gave way; she grunted as if someone had knocked the wind out of her.\n\n\"Like that?\" I asked as my finger slid through her rim.\n\n\"Fuck you,\" Diana whispered at me.\n\nI let go of my sister's wrists and grabbed the plug, wiping it on my jeans before I brought it down to her ass. Diana braced her hands against the makeup counter. Looking at the clean, dry silver, I let a wad of spit fall from between my lips. It landed at the top of my sister's butt crack. Diana moaned, watching me in the mirror as I rolled the butt plug in my saliva, not stopping until the silver shined wetly. As I looked into her eyes, I pushed my index finger up her butthole to its last knuckle, then wiggled it around in her warm guts.\n\n\"Oh god,\" Diana groaned. She bit her lip, staring at me. \"Fuck, you're in my asshole, little brother. You're getting all the way up your sister's ass.\"\n\n\"Damn right I am,\" I said, wanting to be dirty, wanting to make the meaty halves of her pussy lips juicy with her cum. \"All the way up your naughty fucking butt.\"\n\n\"Yeah,\" Diana whimpered and wiggled her butt against my finger. \"You fucking incest-loving pervert. You sister-forcing asshole.\" She moaned, turning her butt in a circle. \"You sexy fucking beast.\"\n\nI moaned as my balls tightened and tingled. I was about to come, and then someone knocked on the dressing room door. I froze, snapping my head around as several spurts of jizz left my pants.\n\nDiana didn't move.\n\nFrom outside, Lana said, \"Hurry up, guys! And stop being so loud.\"\n\nI looked at my sister.\n\n\"My butt,\" Diana growled, shaking her ass. \"Fuck that plug into my butt before Lana has a heart attack.\"\n\nI hated sliding my finger from my sister's warm asshole, but I did it anyway. It came out as clean as if washed under a faucet, and something dirty clicked in my mind. I don't know why I did it, but I cupped my sister's mouth with my right hand and slid my finger between her lips. She didn't fight it, sucking on my finger like it was a cock, then licking it all around.\n\nMy heart throbbed, watching her be so nasty. I mean, my finger had been clean, as clean as if washed in alcohol, but still. After a moment of wonder and more precum, I pressed the butt plug against Diana's small anal ring and pushed inward, my saliva making the silver slippery. My sister's rubbery entrance stretched outward under the pressure I put on her backdoor. She groaned around my finger, sucking it faster and harder than before. I continued pushing inward... inward--in!\n\n\"Oh, fuck, Timothy,\" Diana grunted around my finger, making her words sound like a curse.\n\nLana knocked on the door again.\n\n\"Fucking Lana,\" Diana panted, rolling her eyes at me in the mirror. \"I wish we had more time.\"\n\n\"Me too,\" I said, giving the plug one last shove that made my sister groan, smile and shake her head at me in a rueful way, making me feel like the kid who got caught stealing an extra cookie from the jar.\n\nMy sister stood, turned toward me, and fixed her clothes. She was sweating, wild, and sexy--so fucking hot--that I almost lost it, wanting to fuck her right there no matter what she said, but Diana had me trained.\n\nWow.\n\nMy sister had me trained.\n\n\"Guess what,\" Diana said. She curled her fingers into my shirt, rose to her tiptoes, and pulled me down for a kiss. Our lips met in a wet dance that took a bit of time to end. \"I booked us a hotel for Saturday.\"\n\nI moaned, almost finishing the orgasm that Lana had interrupted.\n\nDiana turned to leave, but I caught her wrists. She looked at me, then down at her wrist, then back at me. She tilted her head, staring at me hard.",
        "\"Sorry,\" I said and let go of her wrists. The heat in my cheeks told me that I had turned as red as a strawberry. \"Does Lana know about us? That's dangerous, isn't it?\" Since the start of our developing relationship, I'd never wondered if my sister was truly insane, but now I did. Now I really did.\n\n\"It's no more dangerous than when she told me that she was fucking her uncle.\" Diana smiled at me. \"If you want my pussy, stop worrying about who knows it belongs to you. If you want me, little brother, then trust me.\" She glanced at my cock. \"I want you to come before you go back to class.\"\n\nMy sister left me alone with my hard-on. I jerked it off, hard and quick, then I went back to class, where I had to write an essay for my teacher on the meaning of Class Time--but it was totally fucking worth it.\n\nThursday\n\nToday was a hard day. Diana shared small, secretive smiles with me, but that's all. She dressed in yoga pants, the cameltoe-clutching kind, and a sweater that just hid her fucking pussy bulge, though sometimes she'd let me see her lips squished against the light blue nylon she wore. Mom came into the living room while Diana was doing this, and Diana snapped her legs shut so quickly that Mom must have noticed. Mom didn't say anything, but that night, before I went to bed, Mom told me that I needed to find a girlfriend. Then she laughed and said, \"Or one of us wrestling moms who knows how to keep her mouth shut, but you need to find somebody. You're eighteen, for God's sake.\"\n\nI blamed Mom's bluntness on her second glass of wine that night and the fact that she hasn't been going out with people lately. And, I guess it's no secret--except to their husbands--that our school's wrestling moms spent a lot of time watching us and watching us closely.\n\nFriday\n\nI spent Friday, after school, wrestling with Abbey, working off Diana's Thursday night teasing. By the time we finished, my little sister was a sweaty mess. She was looking good, strong; the weeks of work were paying off for her. She still had no tits, and I told her this in our joking way, but she didn't laugh like she used to laugh. She frowned, walking off with her shoulders hunched together.\n\nIf I had known that was going to happen, I never would have made the joke.\n\nDiana, who had been watching us without me noticing, asked me what I had said to Abbey. I told her. She said I'd have to make it up to Abbey. And, Diana asked, why couldn't I tell that our little sister was boy-crazy and lovesick? Abbey needed attention. Diana told me not to worry; she'd think of a way for me to make it up to Abbey, then she went to hang out with our little sister. Not just to talk to her but to hang out with her, something that we didn't do enough of with Abbey.\n\nLater that night, I washed my sister's G-strings. Nothing happened in the laundry room because Abbey and Diana had been sitting cross-legged on Diana's bed, looking through clothing magazines, when I had entered Diana's room. I froze, but Diana nodded at her closet as if a brother coming to get his sister's panties was a normal thing. I hid Diana's thongs and stringed panties in my pockets, but as I left, I heard her tell Abbey not to worry because I did whatever she told me to do. When I returned later that night, Abbey had already gone back to her room.\n\n\"What were you telling Abbey about--\"\n\n\"No,\" Diana said, shaking her head.\n\nAnd that was that for my questions, but after I kept my mouth shut, Diana asked me if I wanted to sleep in her room tonight. (She asked me. She didn't demand that I do it.) But, fuck yeah, I wanted to sleep in her room. I went back to my room, locked the door from the inside, and snuck back to Diana's without being seen.\n\nWe slept naked, undressing in front of each other from the other side of the bed in a strange, awkward way that left both of us pink in the face. We weren't going to have sex. We weren't touching each other or about to, we were getting ready for sleep, and it made me--and her, I guess--feel vulnerable, maybe, I don't know. It was like we were committing to something far more complex than what we had been doing so far.\n\nAnyway, beneath her blankets, in the dark, it was scorching. She was hot. She slept with her breasts against my left side as I cradled her against me. She drew nonsense shapes on my chest, her nipples poked into my skin. I lowered my left hand to the tender meat of her butt, finding her hot down there.\n\n\"Tell me about yourself,\" Diana said.\n\nAnd so I did.\n\nNow that I think about it, it's strange to realize that for triplets, Diana and I had never been that close. Was it because our father had taken Abbey from us until we had turned five? Did he steal our bonding years from us? Was it because we had spent more time looking after Abbey once we got her back instead of treating her like a peer? I don't know, but closing that gap with my older sister was a good feeling.\n\nI woke up late that night with Diana on top of me. She had trapped my cock between us, her pussy lips spreading over the underside of my shaft. As I gained my senses, Diana rolled her labia along the length of my prick, drenching me with her creamy juices. Diana's breathing came low and deep, and every time my glans rubbed the pink jewel above her pussy lips, we trembled together, the ecstasy of the moment running through both of us.\n\n\"You're going to fuck me tomorrow,\" Diana whispered to me when she realized I was awake.\n\nTeasing me.\n\nTaunting me.\n\nDaring me.\n\n\"You're gonna fuck your own sister,\" she whispered, her breath shaking. \"You make my little, waxed pussy, so fucking wet.\"\n\nI grabbed my sister's hips, digging my fingers into her burning flesh. She slid her pussy crease faster along my length, smothering me with her dripping wet softness.\n\n\"You can fuck me anywhere,\" Diana whimpered. She rose, placing her palms on my abdomen as she rowed her knees against the bed, spreading her pussy over my cock, then sliding her cunny over my thickness, again and again, her butt grinding against my cum-filled balls. \"You can fuck my mouth, my pussy, my tits.\" She rubbed her pussy faster against my dick, making me tingle. \"My ass.\"\n\n\"Diana,\" I groaned.\n\n\"Yeah, say my name,\" Diana said. \"Don't be shy. Say your sister's name.\"\n\n\"Diana,\" I moaned. \"Fuck, Diana, fuck.\" Every time I said her name, she hunched her hips harder against my knob, smothering my crown with her pussyhole. I couldn't get in at the angle, but fuck, I was so fucking close to slipping inside of her body. \"Fuck, Diana, I'm close. Your pussy is hot, too fucking hot.\"\n\n\"Yeah, you gonna come for me?\" Diana asked, pouting. \"Gonna come for your older sister and her hot little twat?\"\n\n\"Fuck yeah, Diana,\" I moaned.\n\nWe filled our room--Diana's room--with the wet, sloshy sounds of my sister pumping her pussy over my cock. I did my best to help her out. Our heavy breaths turned into panting as the sweat rolled off of us, dampening her crescent buns for my palms. I found her asshole with my middle finger, and she pressed her pussy lips hard against my cock's crown. My balls tingled, my thighs shook. I opened my mouth as electric bolts of pleasure shot through my shaft, forcing me to come through the tingling head of my rock-hard cock.\n\nAnd fuck, did I ever come, shooting my seed against my sister's pussy, onto my stomach, and everywhere my cum could reach. Diana laughed, reached between us, and played with her clitty as I circled her asshole, drenching us both in her liquid heat when she finally came. What a fucking mess we made!\n\n\"We check in at noon tomorrow,\" Diana said, though it must have been around three in the morning. \"Get some sleep; I want my pussy to be sore by checkout time on Sunday.\"\n\nMy cock hardened with her words, but she didn't let me touch it or her in that way for the rest of the night.\n\nTotally worth it.\n\nI expect Saturday to be a long entry... I'll add that sometime next week; after I've had time to come down from the high fucking my sister is sure to give me. I hope I don't disappoint her. I really don't.\n\nTimmy out.\n\n<p align=\"center\">* * * * *</p>\n\nNext time on the Anderson Family Journals, \"No More Teasing.\"\n\nIf you've read this far, click a 5 star.\n\nComment, email, vote, etc.\n\nThanks for reading."
    ],
    "authorname": "MrHereWriting",
    "tags": [
        "brother",
        "sister",
        "triplets",
        "oral sex",
        "butt plug",
        "kinky games",
        "schoolgirl",
        "sneaky sex",
        "mrhere",
        "mrherewriting"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/anderson-family-journals-08"
}