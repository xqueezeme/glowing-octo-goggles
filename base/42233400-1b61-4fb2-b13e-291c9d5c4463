{
    "title": "Blowjobs",
    "pages": [
        "No one gives the perfect blowjob the first time. Learning any great skill takes lots of practice and patience. It really helps if you have a good teacher as well.\n\nThe first time I gave a blowjob was horrendous. I had no idea what I was doing and the poor guy was too young and naive to teach me how to do it right. I sucked his cock like a lollipop or a popsicle, increasing the suction like I was trying to siphon gas from a hose. He squirmed on the bed making odd noises until he grabbed my face pulling me up to kiss his mouth. Thinking back on it, I'm surprised I didn't suck his skin clean off! But, he didn't say a word in his defense and I felt like a failure in the end.\n\nNext I had a boy fuck my mouth, his hand wound tightly into my long dark hair. He was all about power and control. He never said a word after he ordered me to open my mouth and pushed himself back as far as he could bringing tears to my eyes. I focused really hard on not throwing up and made little moaning noises to help him along. He just pushed harder against the back of my throat gagging me repeatedly until he pulled out and came on my face. I felt a little used and I didn't learn a thing.\n\nThe first time I swallowed cum was the first time I got it right. The young man was on my sofa, his pants down around his ankles. I had teased him ruthlessly, taking off my shirt and dancing in my black lace bra and tight black jeans. I watched as he stroked his cock while I whirled before him. His hand slid slowly up and down his shaft with a light hold. His eyes were slightly glazed, a pleased smirk on his face.\n\nWhen he called me to him I knew what he wanted, they always wanted the same thing. I crouched between his legs and eyed his hungry face. I held his smooth shaft in my hand and moved it the way he had. His head lolled back, his eyes closed as a moan escaped his throat. His hand came to rest on the top of my head in a reassuring way.\n\nI licked the underside of his cock in a long slow stroke from base to tip. I sat up on my knees to get a better angle and kissed the tip of his winking eye. My mouth hovered over his head for a second teasingly while he smiled in anticipation. \n\nI let my lips slide slowly down his shaft until it hit the back of my throat. I liked the taste of his smooth skin on my tongue and licked the vein thick underside of him in little flicks as I slid back up toward his head. I moved my hand back up in unison with my lips. My hand matched the rhythm of my mouth letting him feel me all the way down to his balls. He never moved his open hand from the top of my head, never said a word, yet I felt power in every move I made. \n\nIt didn't take long for him to reach that tipping point. He tried to warn me grabbing my hair and moaning as he tried to pull me off him. But I didn't let him. He shot hard with a shout into my mouth and I held his cum on my tongue for a moment rolling it around until I swallowed in triumph.\n\nI got better. I learned how to make it last with the next one. I could draw it out teasingly slow and then work him up again until he was shaking above me holding my face lightly in his hands as he watched me. I would start off slow, my tongue bathing him in gentle licks until I closed over him sliding down as far as I could go. He let me do the work and I worked him over good. I let him feel my teeth slide lightly along his thin, sensitive skin, loving to hear him suck in his breath between clenched teeth, his hips starting to rock with my rhythm. I felt like I owned this part of him.\n\nThe next one asked me to play with his balls. I learned to hold them lightly, to roll them in my palm, my fingers curling with just enough pressure. I would lick his sack feeling his balls jump then open wide to pull one carefully into my mouth, lathing it with my tongue until he moaned before I would go to his shaft. I licked the length of him slicking his skin with my saliva. By the time I reached the tip of his head a drop of pre-cum would be waiting for me. I spread the salty mix across my lips and slowly slid down his shaft taking the pre-cum with me. He was so smooth and hard, like a giant candy stick. His velvet skin sliding in and out of my swollen lips, my hand gripping him just the way he liked it. He would talk dirty above me his hands clutching fistfuls of hair trying to press me to him until I would bite down just enough to get him to ease off. \n\nI would increase my rhythm moving my hand up and down twice as fast as my lips and then slow it down again to pull him back from the edge. He moaned over me, his hips rocking to my rhythm. Then I would start all over again working him up to wordless frenzy. He held my head tightly in his hands while I held him in my mouth. I could tell when he was so close that the slightest move on my part would be enough and then I took him there, one hand full of his balls, the other wrapped around the base of his shaft, his cock deep in my mouth. I took him to a place he could never have reached on his own. His voice catching between gasps for air as he filled my mouth full of promises. In this small thing, I was the master and I was pleased to serve him. \n\nEvery blowjob I give is an opportunity to learn and become a better lover. It makes me happy to know that I can provide that level of pleasure to a man. I love the smooth sensation of power, holding a man in my mouth, him trusting me to take him where he needs to go."
    ],
    "authorname": "HotKittySpank",
    "tags": [
        "giving head",
        "learning to give blowjobs"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/blowjobs"
}