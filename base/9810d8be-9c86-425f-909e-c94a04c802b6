{
    "title": "Senior Year Memories Ch. 29",
    "pages": [
        "(Usual Disclaimer Time: Even though this story almost entirely takes place in a high school setting, all the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun. This story is highly serialized, and though it's not 100% necessary to have read the whole story up until this point to enjoy the content of the chapter, it's definitely advisable to understand some of the ongoing plots.)\n\n(Author's Note: I just wanted to shout out and say thank you to everyone who read and rated Chapter 28! A chapter that I was worrying about being one of my weaker entries has, at least as of this posting, risen to be one of the top-rated stories in Erotic Couplings! I'm waiting for the other shoe to drop and its rating to fall at any moment, but until then, I'm enjoying its highly-ranked status. Thank you all of you for making that possible! While it doesn't guarantee me awards, piles of recognition and many naked and beautiful women beating down my door, it is definitely fun for the ego. Thank you!)\n\nPreviously, on Senior Year Memories: Returning to school after winter break has left 18-year-old Ryan Collins with a number of unexpected surprises to deal with. First that he harbors romantic feelings for not just his girlfriend, Josie Wong, but also blonde cheerleader Brooke King and possibly his new neighbor, Alice Talbot. School itself offered its own challenges, as the Puma Press' assistant editor, Nica Dubois, was eager to get Ryan to work on a set of articles he'd turned in before break, while Mrs. Lynn assigned him two new students to tutor: Peter Nixon and Jess Garza. Peter, an old friend of Kyle Bowman's, turned out to be more affable and eager to learn than Ryan expected, while underachiever Jess tried to seduce Ryan into a pass, while he turned her down and coaxed her into taking tutoring seriously in exchange for hot sex if she managed to improve her grade. If all that weren't enough, Ryan had the attention of a number of hot teachers brought on him by Mrs. Lynn telling her book club about their arrangement, culminating in hot sex with his busty English teacher, Mrs. Janelle Addams. Getting home, not only did Ryan discover that Brooke and Alice had become fast friends, but that they'd hooked up while he was screwing Mrs. Addams. It was a busy day, to say the least.\n\n***\n\nBack to school week after winter break was not a week I had a lot of hope for, yet within its first day I was taught that I had a lot to look forward to when I discovered that Mrs. Lynn had spread the word about me to a number of other hot teachers she was friends with. Though it started with random looks in the hallway, it ended with some of the hottest sex I'd ever had.\n\nNow, it would take a lot to distract me away from memories of fucking my huge-titted English teacher, Mrs. Addams, and yet 'a lot' happened only a matter of hours later. I'd gotten home getting ready to shower and crash and maybe do a little bit of homework, when I saw Brooke and Alice next door, naked (or near enough, since I still hadn't seen Alice) and teasing me.\n\nIt was a fun sight to be sure, but one that haunted my dreams well into the morning when I joined Alice on our bike ride to school. I could've pretended that everything was normal, that nothing had happened, but with her mischievous grin I knew that Alice would've said something if I hadn't. It wasn't all mischief, though; I could sense a nervous energy hanging around her, one stuck between her desperately wanting to tell me and her being frightened of doing so at the same time. There was ice she wanted to break, but she was nervous about swinging the hammer herself.\n\nSo, I did it for her.\n\n\"So... you and Brooke, huh?\" I asked, raising an eyebrow.\n\n\"Yep. Me and Brooke,\" Alice said with a very satisfied and relieved grin.\n\n\"Congrats,\" I said, smiling proudly.\n\n\"Yeah?\" Alice asked.\n\n\"Yeah,\" I replied.\n\n\"You're not jealous?\" Alice teased, biting her lip nervously.\n\n\"Hardly. Happy, really. Surprised, sure, but happy for you; you're cool and could use a good time in a new town, Brooke's one of the best people I know, and absolutely amazing at sex,\" I said.\n\n\"That's putting it lightly,\" Alice said with a very pleasant sigh.\n\n\"Yeah,\" I chuckled. \"But you're good people, and if you want to get together, hell, go for it.\"\n\nAlice asked, \"And yet you're surprised?\"\n\n\"Mostly by how quickly it developed,\" I admitted.\n\n\"You of all people should know that once she sets her mind to something, Brooke's pretty hard to dissuade,\" Alice said.\n\n\"Truth,\" I replied.\n\n\"And when she put her mind to me, our hooking up was more or less an inevitability,\" she said.\n\n\"Naturally,\" I replied.\n\n\"And I like her, too. I think we're probably friends, and if friends want to help each other get off, well, what's the harm in that?\" Alice said, her voice bordering on defensive.\n\nThis got me curious. \"No harm at all.\"\n\nAlice paused, looking at me like I might be crazy. \"You sure you're not jealous?\"\n\n\"Positive,\" I replied.\n\n\"You're... taking this awfully well,\" Alice said, disbelieving.\n\nI'd mostly come to know Alice as a fairly self-assured person. One with her fair share of demons, no doubt, but demons I figured she'd tell me about in her own time. I felt those demons coming to the surface, and though I didn't want to pick at any open wounds, this demanded some attention. \"And why wouldn't I? It's not like I've got a claim on either of you. You two are entitled to your own fun.\"\n\n\"Really? A lot of guys tend to have pretty fierce opinions about who girls they're attracted to spend their time with,\" Alice said.\n\n\"And my opinion means more than yours? Please,\" I said, doing what I could to brush off her concern. \"It's like I said, I'm really quite happy for both of you. Happy that you're making friends, and happy that Brooke looked like she was having fun with you. I care about both of you quite a bit, and if you're both happy, then I'm happy.\"\n\nAlice still looked like she had a hard time believing me, no matter how much I explained myself. \"And this isn't a problem? None of it's a problem at all with you?\"\n\n\"Why would it be?\" I asked.\n\nAlice started to say something, then held back. She shook her head. \"I still need to get used to this town.\"\n\n\"Pardon?\" I asked.\n\nAlice bit her lip for a moment before slowing down her bike and hopping off. I followed her lead, both of us walking more slowly toward school as she confessed.\n\n\"I've... before Mum and I moved here, I got in some trouble because of my sexual proclivities. I guess it's led to an unhealthy sense of skepticism about the validity of what people say,\" Alice said.\n\n\"What kind of trouble?\" I asked.\n\nShe sighed the sigh of a person much older than she was, the kind of sigh you get after surviving a long-fought and barely won war. \"The kind you flee town over.\"\n\n\"Wow,\" I said. I'd never put too much thought to why Alice had moved here, but this was far more interesting and intense than I'd expected.\n\n\"It's not for any legal reasons or anything truly scary like that, no mobs with torches and pitchforks, but... yeah, you said it,\" she replied, looking me up and down, considering. \"If I... if I tell you this, do you promise not to tell anyone? Not even Brooke and Josie?\"\n\n\"Of course,\" I said.\n\n\"I mean it,\" she said emphatically, \"I need a true promise.\"\n\n\"I'll promise you however you want and mean every word of it. I'll promise on my mother's grave if I have to. You want me to pinkie swear? Because if you force me to pinkie swear, I'll pinkie swear. I'll pinkie swear the ever-loving shit out of you,\" I said, hoping to keep things light enough that she'd believe me.\n\n\"You won't have to go *that* far,\" Alice giggled. \"But thank you, all the same. I do want to tell this to the people I know, but in my own way and in my own time, so...\"\n\nThe giggle didn't have a lot of heart behind it, but it was an improvement over her suddenly dour face. \"Fine... like I said, I got in some trouble. A lot of trouble, actually, because of... well, sex.\"\n\nThat was a story I knew well, even if I didn't know the exact flavor of her trouble.\"\n\nAlice continued, \"You see... ever since I turned eighteen, I've come to realize that I'm a something of an... exhibitionist.\"\n\n\"And?\" I asked.\n\nShe goggled at me like I was crazy. \"Well, it might not be that big a deal to you and Regan Hills, but it was a fine deal where I came from.\"\n\n\"Fair enough, sorry,\" I replied.\n\nShe sighed. \"I discovered that I like showing off, and I like people seeing me. Watching me. I was in a private school at the time, religious, conservative, that old tale... which was hard to deal with the urges because of lack of opportunity and the bullshit they put in my head, but made it appreciably naughtier. I found my outlet filming videos on my phone of me in my uniform in various dark corners around school, the library, abandoned classrooms, exposing myself and... touching myself, sometimes with the help of another girl, or a boy, then posting them online. I absolutely adored the responses. It was freeing to understand this side of myself, to realize that everything I'd been taught by Dad and school was a lie, to hear my Dad's limited understanding of sexuality being so thoroughly taken apart as I began to truly embrace the *me* I'd always wanted to be. And then...\"\n\n\"...you got caught?\" I finished.\n\nShe nodded, taking in a couple deep breaths. \"It was bad. There was a scandal at school. The others involved in my videos, people I thought I could trust, they turned on me, lied and told people I'd tricked them into it. I was expelled. Dad screamed at me for days, called me a whore and... well, a lot worse words than that. Mum stood up for me, and then my fight became their fight and it got... physical. They divorced, thank God, and we moved here. I'm happy there doesn't appear to be as much of that judgmental shit here, but it's still hard to feel comfortable in my own skin sometimes when I expect my newly almost comfortable existence to fall apart, you know? Brooke... she broke through some of those barriers. She made me feel good, free again.\"\n\n\"She's got a way of doing that,\" I admitted.\n\n\"I know, right?\" Alice said.\n\nI confided, \"I've had my share of times these past few months where I didn't know exactly who I was, or what I was meant to be, and Brooke helped me. She's just got this way of cutting through the shit and making anything bad not seem so bad. I can't tell you the number of times she's helped me screw my head on straight.\"\n\n\"Not the only thing she screwed, I imagine,\" Alice quipped.\n\n\"Far from it,\" I joked back, liking that there was now laughter being shared between us. \"Look... I've only been in this world of sex and relationships for a few months now, but I can say from experience that if you like to have fun fucking around with beautiful people, Regan Hills is really the place you want to be. There are a lot of good people who know how to have a good time, very few of whom are judgmental, and if it's something you want to take part in, all you really have to do is put yourself out there.\"\n\nAlice chuckled. \"Is that a come on?\"\n\nThis threw me off guard, and upped my heart rate exponentially. \"I... uh... no?\"\n\n\"Why not?\" she asked, her tone mischievous.\n\nI realized she was fucking with me, which calmed my heart but didn't give me any help with how to deal with her. \"Because I was waiting for my moment to make my move with you.\"\n\n\"Oh?\" she asked.\n\n\"Yeah,\" I continued, rolling with the joke. \"It all takes the proper planning and timing, and I really don't want to fuck anything up to better my chances with you.\"\n\n\"Really?\" she asked, rolling her eyes.\n\n\"No. Everything I've done has mostly been due to dumb luck and being in the right place at the right time, and though I wouldn't mind having some fun with you, I wouldn't want to do anything that fell outside of your comfort zone,\" I admitted.\n\n\"And should dumb luck bring us together as it has with you and so many others?\" Alice asked.\n\nI thought about this. \"Is that a come on?\"\n\nI didn't think she expected me to throw that line back at her, and the way she stumbled slightly, I knew I succeeded. \"Well, it's... you know, when I make a come on to you, you'll know it.\"\n\n\"*When*, not *if*? I like the sounds of that,\" I teased back. I'd enjoyed a fairly lengthy flirtation with Alice Talbot for some time now, and I wasn't intending to change that anytime soon. Watching her tight body move was nice, but bringing a sparkling smile to her beautiful, dark-skinned face was something that truly defined a good day for me these days.\n\n\"That's up for your interpretation,\" she said, hopping back on her bike. \"But I'll race you to school: if you win, I might tease you a little more!\"\n\nAlice had already raced off a good distance in front of me, so far that I'd have no way of catching up, but with even the outside promise of a little more flirtation with her, I wasn't going to turn down a chance like this.\n\n***\n\nI may not have had any fun with Alice that day, but that wasn't to say that I didn't have *any* fun in that first week back. Aside from Mrs. Addams, things were going a little slowly with returning to school from winter break, but they were looking to pick up quite enjoyably.\n\nNow, while I hate to quantify these things, after a bit of experience I'd been able to sort most of my sexual encounters into about three separate categories. There may have been more, or gradations between them, but for the sake of telling a good anecdote I'll put it down to these three.\n\nThe first, and the ones I loved the most, were obviously with the women I had an intense emotional connection with. Good friends, women I loved, women I've had a long-standing connection with that I only just got to elevate into something more, they were responsible for many of my most intense memories of the year. These were the women I kept coming back to time and time again not just because I found them achingly hot, but because I just wanted to be with them.\n\nThe second category would be the good old-fashioned casual sex crowd. These women weren't interested in much out of me other than an occasional good time and knew how to give as well as take in such an exquisite way. We had a lot of fun, without the need of much heavy lifting from an emotional standpoint. I think most of New Year's fell under this category, and I'll admit that I rather enjoyed myself.\n\nThe third category was what I called, to borrow a video game trope, the \"Random Encounters\". These are the women who just swept in out of nowhere, came in, fucked hard and got out as quickly as they got in. I couldn't rightly tell you how half their encounters began, but when I was in the mood for them they were a crazy amount of fun.\n\nI was sitting in the library after school with memories of my discussion with Alice still fresh on my mind and trying to prep things for my study group when one of these random encounters quite literally fell into my lap.\n\nIt was going to be a while before Kaitlyn, Peter and Jess were going to show up, but I was doing everything I could to be prepared for each of their unique challenges. Peter Nixon and Jess Garza were more recent complications, but in the few tutoring sessions we'd had so far, they'd both been pretty dedicated. I'd started working out a system to help Peter remember things that wouldn't get in the way of his dyslexia, while Jess... well, she was still her usual carefree stoner skater girl self, but the promise of hot sex if she really worked on her grade seemed to be doing the trick as a motivator. Kaitlyn Pruitt was her usual self, and not terribly happy with this now being a study group rather than one on one sessions that often ended with us having hot sex, but I figured she'd adjust in time.\n\nI was so focused on getting ready for our study group that I didn't notice who was rapidly walking by me until she'd already dropped the book in my lap. I yelped in surprise, then looked back at the girl as she walked away.\n\nShe was petite and short, with platinum blonde hair held up in a bun, wearing a tight sweater, a short skirt, and knee-high socks that beautifully showcased her toned, tight legs. Briefly she looked over her shoulder at me with bright blue eyes behind horn-rimmed glasses, a smug smile crossing her cute but stern face before turning back and disappearing down an aisle. As usual, she walked with excellent posture like she had a stick up her ass, but the way her ass swayed to get my attention, I knew she didn't have anything up there today.\n\nWell, not yet anyway.\n\nI looked at the book in my lap. What it was didn't matter, so much as the small strip of fabric that had been used as a bookmark. I opened the book to that page, and found a skimpy pair of panties waiting for me between the pages. They were damp, and they smelled of pure lust.\n\nLadies and gentlemen, meet Marie Halpern, queen of the Random Encounter. I'd first had sex with the tight-bodied library aide back in November, in a threesome with our librarian, Mrs. Sullivan. Mrs. Sullivan had been teaching Marie on how to be a proper slut, and Marie was a good student. I'd had a variety of encounters with her since in the library, and even when we weren't finding some dark, quiet corner to screw around in, I always felt her eyes on me.\n\nMarie might have been a little crazy, but crazy sex has its place too.\n\nContent with how much time I had before the others were to arrive, I pocketed the panties and followed the path she'd taken down the stacks, down through the snaking, quiet paths of our school's shockingly large library, until I felt two small but powerful hands grab me.\n\nShe pulled me around a corner into a tight, frantic embrace, kissing me passionately, exploring my mouth with her tongue as her hands ran up and down my body.\n\n\"I see you got my message,\" she said, reaching into my pants and fishing out all ten inches of my thick cock. She immediately dropped to her knees, sucking my entire length into her mouth as she bobbed up and down on me. Her mouth was heaven, as was the sight of this tiny girl's lips stretched obscenely around me.\n\n\"It was kind of hard to miss,\" I moaned, running a hand through her hair. Without missing a hint, she reached back and undid her bun, letting her wavy locks cascade down to her pert ass.\n\n\"You've really got this slutty librarian thing down,\" I said.\n\nShe took her mouth off my cock, correcting me, \"Slutty library aide.\"\n\nMarie's mouth worshipped my shaft, her tongue licking at my balls before then suckling on them. Her hands jerked me enthusiastically as she continued to chide me, \"I take great pride in my position, but don't want to sound beyond my experience.\"\n\n\"I didn't mean to disrespect,\" I said.\n\n\"You didn't. I just wanted to clarify terminology, but if you'd rather your mouth was somewhere else, that could be arranged,\" she stated.\n\nI liked where this was going. She throated my cock again, gagging on me and allowing me the opportunity to ask, \"Have you any place for my mouth in mind?\"\n\nSilently, she took her mouth from my cock and got back to her feet, encouraging me to drop to my knees. Though my cock was desperate for attention, Marie turned around and pulled her skirt up, revealing her tight, inviting ass. With her other hand, she grabbed one of her cheeks and squeezed, pulling it to the side enough to show me her tightest hole.\n\n\"There. Now,\" Marie commanded, looking down at me and smiled.\n\nWho was I to argue?\n\nI dove in, planting my mouth on her puckered hole, teasing and licking her forbidden entrance while she did her best to hold back her moans. Though our school library was generally quite empty, you could never tell who would and wouldn't show at any given moment, and though she didn't silently stalk the halls as often as Marie, there was always Mrs. Sullivan to worry about.",
        "Still, even with the risk of discovery, that didn't mean there wasn't fun to be had. So, while I gave Marie a thoroughly enthusiastic rimming, I pressed two fingers inside of her nice, wet cunt, thrusting them in and out of her while my tongue toyed with her delectable asshole.\n\nMarie braced herself against the bookshelf with one hand, reaching down to play with her clit with the other while I worked both her holes.\n\nWhispering with the greatest restraint, she said, \"That's it, worship both of my slutty little holes, play with them, lick them, love them, taste them, because you'll never have any like them, none so perfect, so tight, so absolutely and entirely slutty. They're yours to play with because I let you, but mine to control, and with them, I control you, isn't that right?\"\n\n\"Yes,\" I said, fully admitting that she'd gotten me on my knees with my cock hanging out without much effort.\n\n\"Good, because I'm not the only little slut here, am I? There's nothing little about you, true, but you and me, we're cut from the same cloth. You're a sex machine made to make girls cum hard. We have this in common. Both of us are made entirely to understand and own our pleasure, and give it out to those we deem worthy,\" Marie said arrogantly.\n\nI didn't agree with that, but I didn't stop eating her ass, either. Marie had her own perspective that she was entirely entitled to, but I knew who I was and what I wanted out of my life. I loved sex, and I was damn good at it, but I was more than that too. I didn't know who I fully was as a person, I'll admit that, but I was figuring that out a step at a time, and I was sick and tired of other people who barely knew me trying to tell me who they thought I should be.\n\nI pulled out from her, then stood up behind the tight little slut, despite her moans to the contrary. I dropped my pants around my ankles and lined my cock up against her pussy. She cooed.\n\n\"You don't know me,\" I hissed, thrusting inside of her hard, burying all ten inches in her slick canal in a single stroke. She wasn't cooing anymore, and in fact seemed to fill her mouth with her hand so she wouldn't scream out in ecstasy. I reached around her, pulling her sweater and shirt up over her pert B-cup tits with the rock-hard nipples.\n\nShe quietly moaned as I began to fuck her mercilessly against the bookshelf, continuing to bite down on her hand to keep quiet.\n\nI seized this opportunity to share some philosophy of my own. \"You don't know me, and that's okay. You and me, we're both very, very good at sex, but don't pretend because we're both good at making each other cum that we're the same person. I've got my own life and you've got yours. Understand that, and we're fine. Don't, and there will be trouble.\"\n\n\"Mmm... whatever... you... say... fuck...\" she whimpered as I fucked her harder.\n\n\"Not even a little fight?\" I grunted, steadying my pace to better let her talk.\n\n\"We don't really, so I made a guess. I guessed wrong. I'm sorry. Forgive me?\" she asked, looking over her shoulder at me and blinking innocently. I knew that cute little blink was bullshit, but her tone was sincere.\n\n\"Sure,\" I replied, kissing her deeply.\n\n\"Good,\" Marie said, \"because I'm really close to cumming.\"\n\nThat was a challenge I could abide by. Though she'd questioned my identity and even made me consider myself for a moment, it wasn't enough to stop what was otherwise a very pleasurable, and very hot fuck. It was one that was only accentuated by our need to stay silent in this seemingly empty library, a precaution we likely didn't need to take yet couldn't help but follow just for safety.\n\nBriefly, an image flashed before my eyes, the story told by Alice of her playing with herself in the library of her old school. I tried not to imagine her naked, tried not to imagine her touching herself, her cumming... all sorts of images dancing before my eyes as I brought Marie closer and closer to the edge.\n\n\"You know, you can find most of this stuff online, right?\"\n\nWe weren't alone. We could hear two people walking on the other side of the bookcase. One of them was short and had a high voice, the other a little taller and with a deeper voice. I knew their voices well enough to fear them.\n\nTeachers. Mrs. Valerie Chan and Mrs. Wanda Harker. Mrs. Chan was my science teacher, a cute thirty-something woman with a great attitude and a fantastic body for her short height. Mrs. Harker on the other hand I knew less because I didn't take drama, but like any boy in school I'd noticed her insane curves and tits that I was pretty sure were bigger than Haley's. They were hot, and any other time at school I'd have welcomed their presence greatly, but this wasn't one of those times.\n\nI didn't know why they were here, but every instinct told me to pack up and run. Marie wasn't having any of it, though, spurring me on to fuck her harder. Despite my reservations, I followed her lead, fucking her as hard and as quietly as I could while these two hot teachers stood on the other side of the bookcase.\n\n\"I can, but on my salary, this is the better option,\" Mrs. Harker replied in her deeper, sexy voice.\n\n\"Oh, come on, there's pirate sites for that! Pirate sites are teacher's friends!\" Mrs. Chan replied cheerfully.\n\nMrs. Harker pulled a couple books from the rack. From where we were, Marie and I could vaguely see the two teachers through the shelves, but they hadn't taken the time to look at us.\n\n\"Teacher's friends, maybe, but not artist's friends, and if an artist puts their work out there and is asking for even the slightest payment from an audience in exchange, I'm going to pay them,\" Mrs. Harker said.\n\n\"Artists,\" Mrs. Chan said, her voice practically rolling its own eyes.\n\nMarie's hands clamped down on the bookcase hard, shaking it slightly as her entire body tightened against mine. Her pussy squeezed me like a vice, practically setting off my own orgasm, but I held onto her, not ready and still a little nervous. Credit to Marie, she managed to keep quiet as her body was racked by a very hard cum, but I couldn't say how she did it.\n\n\"Did you hear something?\" Mrs. Harker asked, looking around.\n\n\"No. Nobody comes in here, you know that,\" Mrs. Chan said.\n\n\"I saw a backpack on one of the tables,\" Mrs. Harker said.\n\n\"Ah, then it's probably someone getting laid,\" Mrs. Chan said jokingly. They both giggled, not knowing how right they were. Marie looked back at me as she came down from her orgasm, kissing me deeply.\n\nMrs. Harker sighed. \"I could seriously use some of that.\"\n\n\"Your husband's not getting the job done either?\" Mrs. Chan asked.\n\n\"Does any husband in this town?\" Mrs. Harker laughed sarcastically.\n\n\"True enough,\" Mrs. Chan replied.\n\nMarie and I stood here, catching our breaths and listening in on this teacher conversation we weren't meant to hear. I could see by the barely contained glee on her face that she was deeply interested in overhearing this gossip, but with my cock still rock hard and buried tightly in her cunt, I was looking for some release.\n\n\"Janelle's looking a lot more chipper today. I hear she got some,\" Mrs. Harker gossiped.\n\nMy cock twitched at the mention of Mrs. Addams' name. Marie wiggled her ass against me encouragingly, and feeling like a little fun, I pulled out of her pussy. She looked back at me, disgruntled for a moment, before I pressed the head of my cock up against her tight little asshole. Between my spit earlier and the juices that still covered my cock, she was nice and lubed up. Once she felt what I was doing, Marie arched her back into me and presented her ass.\n\nThat was all I needed. I pressed the head against her tight hole, holding a hand over her mouth so she wouldn't cry out and give us away. I wasn't lucky enough to have a hand to cover my mouth, because Marie's ass was amazingly tight, but with the greatest effort I managed to slowly inch my cock into her tight hole in complete silence.\n\n\"Did she?\" Mrs. Chan asked.\n\n\"I bet she got with that Collins boy that Brenda and Lauren were talking about,\" Mrs. Harker said.\n\nMarie nodded at me encouragingly, both at their reference to my name and to the fact that I'd bottomed out in her ass. My balls hanging against her wet slit, I stood there silently for a moment, my hand no longer covering her mouth and giving me a pleasant chance to palm her tits.\n\n\"That *would* explain why she was walking funny today,\" Mrs. Chan said. I started fucking Marie slowly, sliding long strokes in and out of her ass.\n\n\"I wouldn't mind walking funny like that myself soon,\" Mrs. Harker laughed.\n\n\"Me neither,\" Mrs. Chan replied.\n\nI started fucking Marie's ass harder.\n\n\"Shit, if he's as good as they say, he can do whatever he wants to me. I'd let him fuck my mouth, my cunt, my ass, just stretch me out and make me scream,\" Mrs. Chan said. That image of one of the hottest teachers in school letting me have her way with her made my balls boil and me fuck Marie even harder. It was a small miracle that neither of us made a sound and that the bookcase did enough to cover our bodies slapping against one another.\n\n\"That all sounds nice,\" Mrs. Harker agreed. \"But... I've always been looking for a guy with a cock that could match these tits. If he really is that big, there's no way he wouldn't paint these babies with cum before we finished.\"\n\n\"Those do look like tits made for a good cum soak,\" Mrs. Chan said, playfully squeezing one of Mrs. Harker's tits.\n\nTeachers really talked like this when we weren't looking? Man, I loved this school.\n\nThis was too much. With a silenced grunt, I came up Marie's ass hard, filling her tight hole deeply with cum. The two of us grunted and sighed, kissing slightly as I came down and we did our best to hold onto our footing. It was a Herculean task for how amazing it felt to empty into her, but it was one I managed.\n\n\"They are. But, for now, it's a good fantasy,\" Mrs. Harker bemoaned.\n\n\"One to bring up at book club?\" Mrs. Chan suggested.\n\n\"Depends on how much wine I've had. And what toys Viola's brought with her. And if Karen Bowman shows,\" Mrs. Harker said.\n\n\"Ugh, that bitch? She's still on the warpath about her little shit of a son getting his just desserts?\" Mrs. Chan asked. Even coming down from an orgasm, this gossip perked my interest; I'd heard that Kyle Bowman's mom was getting around lately, having talked to Addison about trying to clear Kyle's name, and that she might be looking after me, but I hadn't heard anything of her since before Christmas. Marie, ever the stalker of these quiet halls, looked on with rapt attention. I didn't know what she did with the gossip she picked up, but she struck me as the type to hoard this kind of information.\n\n\"Among other things,\" Mrs. Harker griped, pulling a couple more books from the shelf. \"She's using her sway at the PTA to fuck with whatever she can around here. The drama club had their hearts set on doing Little Shop of Horrors this year, but if she has her way, we'll be doing something a lot more conservative.\"\n\n\"You mean less fun,\" Mrs. Chan asked.\n\n\"That too,\" Mrs. Harker replied with a sigh. \"Come on, let's get out of here before we're late for book club.\"\n\nThey began to walk away, Mrs. Chan saying, \"Let me know if you want a drink and a fingerbang before we go; I'm kinda itching for one myself.\"\n\nMrs. Harker laughed, putting her arm around the other teacher's shoulders, \"Ask me again after we drink.\"\n\nAnd with that, they disappeared toward the front of the library. I pulled my cock out of Marie's ass, leaving her gaping hole dripping cum down her legs. If this bothered her, you wouldn't have known it by the way she kissed me hungrily.\n\n\"You get a lot of that going on in here?\" I asked, cocking my head back toward the teachers.\n\n\"Mhm,\" Marie confirmed. \"I hear all sorts of things; everyone thinks this place is so empty, gives me a chance to overhear all sorts of fun little tales. If you ever need any juicy tales, come and find me, give me a name, and I'll likely have something for you.\"\n\nThat sounded like it might come in handy. I kissed her again. \"Thanks. I'll remember that.\"\n\n\"You'd better,\" Marie threatened, straightening out her tops and getting almost presentable. Save for the river of cum trickling down her leg, she almost looked presentable.\n\n\"You want these back?\" I asked, getting dressed and cleaned up for study group and pulling the panties from her pocket.\n\n\"Keep them. I've got more,\" Marie said.\n\n\"Thanks,\" I replied, repocketing them. \"I have to go... study group, and all.\"\n\n\"I know,\" she replied. \"But if you're ever want to find me...\"\n\n\"I know where you are,\" I said, walking away.\n\nI probably smelled of her, but I doubted any of the people I was working with today would care that much. I had a minute or two where I could run to the bathroom and clean up first, and after that it was time to get back into character.\n\nI chuckled. \"Man, this school is awesome.\"\n\n***\n\nFor the rest of that first week back, I fell into a comfortable daily routine.\n\nIn the morning, I'd ride my bike to school with Alice, and the two of us would keep our friendly flirtations alive without ever crossing any defined line. We'd get close, and we'd push a little more every time, but never anything conclusive. It was a lot of fun playing around, but every time left me hoping more and more that we'd explore a little more and finally just say to hell with it and screw around. I didn't want it to hurt our friendship, so I didn't rush anything, but it was a fun development.\n\nI'd go to classes during the day, occasionally fooling around a little with someone, but finally getting caught up on some classwork that needed catching up on. This didn't change the attention I was getting from the female teachers that Mrs. Lynn had sicced on me, but that was a kind of attention I was understanding how to deal with. Science classes with Mrs. Chan were a lot more interesting after what I'd overheard in the library, and though I normally avoided the drama geeks I did find myself drifting into their orbit every so often for a glimpse of Mrs. Harker. As with Alice, nothing had happened yet, but I was curious about how things would go.\n\nIn the immediate hours after school, it meant one of two things. First it could've been working in the Puma Press offices polishing up the interviews I'd delivered to our editor Nadia Barclay before Christmas break. Currently I did this under the watchful eye of assistant editor Nica Dubois, since Nadia was out with the flu, and was equally pleased and annoyed that Nica was every bit as professional as Nadia.\n\nIf I wasn't at the Puma Press offices, I was holding court in the library with Kaitlyn, Peter and Jess and making hopeful if slow progress with my newest students.\n\nOnce I got those obligations out of the way, it was back home for homework, playing video games, chatting as much as I could with my girlfriend Josie Wong (and asking her when she was gonna come back from Hawaii), Skyping with Rachel McNeil, or in the off chance that he was around, actually spending some time with Dad.\n\nIt was a busy time, but the kind of busy I could deal with.\n\nAt least until Friday rolled around and things began to run up against one another. That's when it got interesting.\n\n***\n\nSo far, my obligations to tutoring and the Puma Press hadn't intersected, leaving my afternoons manageable. When Friday rolled around, however, both collided. Nica needed me in the office for some last-minute adjustments on the interviews I'd been finishing up, and a busy sports schedule the next week meant that this was the last day I'd be able to work with Peter and Kaitlyn for a while. It'd mean a later night at the Puma Press than I wanted, but it felt like a sacrifice worth making.\n\nIf only I hadn't made that damn promise at the beginning of the tutoring session.\n\nI held a mock quiz to test Kaitlyn, Peter and Jess on what we'd been working on the past couple sessions, and I promised that whoever did the best would get to choose the celebration afterward. In my defense, I was pretty sure Kaitlyn had this one due to all the progress she'd made lately, and she did good. Really good, actually. She'd been hinting that one of her best friends who wasn't a cheerleader, Brianna Roth, was single for the first time this year and interested in meeting me, and I thought that might segue nicely into her claiming a hot threesome as her reward. This was a reward that, while tricky to schedule before I was needed at the Puma Press, I was happy to oblige.\n\nUnfortunately for her (and how much I'd have liked to hook up with Brianna Roth), Peter did better by two points, and since a promise was a promise, that's how the Kaitlyn, Peter, Jess and I wound up marching across our school's football field/track toward the weight room adjacent to the gym.\n\nPeter clapped me on the back with one of his massive hands. The large football player dwarfed me in almost every way, and the playful slap nearly knocked me off my feet as he laughed. \"Not what you were expecting to be doin' after school today?\"\n\n\"Not really,\" I said, scratching uncomfortably at my old gym uniform, the only athletic clothing I had at school. It hadn't been washed in a while, and in the presence of two girls as hot as Kaitlyn Pruitt and Jess Garza I felt entirely inadequate and a little gross.\n\n\"Not what I was hoping on doing either,\" Kaitlyn grumbled, tying her silky black hair back in a ponytail. She made eyes at me that said that she'd much rather have been sharing my bed with Brianna Roth as well, and with her sports bra straining to hold in her massive DD tits and her leggings threatening to split and spill her magnificent ass out at any moment, I was in firm agreement with her.\n\n\"Hey, he won fair and square, next time, ya know, maybe try harder?\" Jess teased. The short Latina skater was easygoing as ever, and like me had dressed in several sizes too-loose shirt and shorts from gym class for this excursion. It was an odd look on a girl I usually knew to wear torn jeans, a hoodie and a knit cap, but it showed off the curves I'd recently become acquainted with well. For a short and somewhat squat girl, she had a pair of tits on her that gave Kaitlyn's a run for their money and a big round ass to match. We hadn't hooked up yet, but I meant to keep to my promise that if she improved her grades, I'd rock her world. Though it'd only been a few days since this promise was made, I was impressed by how she was applying herself.\n\n\"I always try my hardest,\" Kaitlyn said.\n\nJess smiled at this opportunity. I didn't know her well, but knew enough that she was a fan of fucking around with more popular kids. Given the probability that Kaitlyn had probably made fun of her before her attitude readjustment earlier this year, I wasn't surprised when Jess kept prodding, \"Well if you had, then Petey wouldn't have beat you, would he?\"\n\nKaitlyn fumed. \"You trying to start something, bitch?\"\n\nI stepped in between them. \"Hey, we didn't come here to fight today, we came to work out.\"\n\n\"'cause Kaitlyn didn't try hard enough on the quiz,\" Jess teased.\n\nKaitlyn crossed her arms under her breasts, defiant, \"I don't have to put up with this shit.\"\n\n\"Come on, guys, this was supposed to be fun,\" I said.\n\n\"I'm having fun,\" Jess said, smiling.\n\nKaitlyn was very clearly not having fun, and about to take a step toward dealing some damage to Jess.\n\nPeter put a hand on her shoulder. \"Look, why don't you two settle this like adults?\"\n\n\"What, and call our lawyers?\" Kaitlyn said, a slight curl of a smile to her joke.\n\n\"I was thinking a contest. Pick something you both agree on that doesn't involve fighting, work it out, and call it square once there's a winner,\" Peter suggested.\n\nIt wasn't a bad idea. Kaitlyn was incredibly competitive, and since they'd traveled in the same circles (and odds favored Kaitlyn and Peter having fucked before), Peter had to know that about her. Jess was a little more of a mystery, but since she was generally affable, I wasn't surprised when she said, \"Fine with me. Name it, Kait.\"",
        "Kaitlyn scowled at the nickname, but looked around and said, \"Two laps around the track.\"\n\n\"Deal,\" Jess said, taking off toward the track with surprising speed given her height and shorter legs. Kaitlyn called after her, but sprinted after her, catching up quickly.\n\n\"Well, that'll keep 'em busy for a while,\" I said.\n\n\"Works every time. People with their blood up need to figure on settling things without their fists, makes life a lot easier,\" Peter said. Both of us spent a good moment appreciating the two busty girls as they took to the track, nodding to each other silently before we kept going across the field.\n\n\"Sounds like you're a philosopher,\" I said.\n\n\"A philosopher? Naw, I've just been here plenty. This technique never worked on Kyle, but on the other guys on the team, gets 'em every time. Come on, they're gonna take a while, let's go pump some iron,\" Peter said, waving me toward the weight room.\n\nNever in a million years would I have ever seen myself going to work out with one of the biggest and most popular football players in school, but this had been a year of things I'd never imagined myself doing, so it wasn't worth dedicating that much surprise to. I was still getting used to not being terrified of this big guy who used to be one of my former bully's best friends, and realizing that he was actually something of a really nice guy.\n\n\"You can pump some iron. I'll maybe pump, I dunno, a bar?\" I tossed out.\n\nPeter laughed, clapping me on the back again, \"Can't be that bad, Ryan. I know Brooke's been training you, and that little minx knows her workout routines, but stick with me and I'll get some muscle on those bones by year's end.\"\n\nIt was true that Brooke and I had been working out when we weren't screwing around, and that I owed a tighter and leaner body to her. Even with that, though, I was still on the gangly and thin side, and the muscles I had developed still weren't what I'd call impressive.\n\n\"You'd do that?\" I asked as we crossed the track and approached the weight room.\n\n\"Why wouldn't I?\" he asked.\n\n\"I dunno; we barely know each other?\" I asked.\n\n\"Yeah, well, you're tutoring me without getting paid, so, this feels the least I can do to return the favor and-\"\n\n\"HEAD'S UP!\"\n\nA figure darted between us on the track, almost colliding with Peter and me. Thank god for Peter's reflexes, though; he pushed me out of the way before there was a disaster.\n\n\"Sorry!\" Fatima Hassan exclaimed. She was wearing her school track uniform, which, like anything on her she made look good. Tall and fit with a gorgeous face, soft brown skin, and long, dark hair she currently held back in a tight braid, she looked embarrassed to have almost run into us.\n\n\"Our fault, honest; we weren't looking where we were going,\" Peter said smoothly. He said it with the ease of a guy who could charm a girl effortlessly, and with his good looks it would probably work most of the time.\n\nFatima, though, seemed more concerned with me, reaching out to touch my wrist gently. \"You okay, Ryan?\"\n\nPeter looked surprised that we knew each other. \"I'm fine. Peter saved me.\"\n\n\"Well, good,\" she said, smiling and quickly kissing me on the cheek. Back to moving, she jogged a few steps away from us and said, \"I had a lot of fun the other day... let's try and do something again soon?\"\n\nThat didn't sound bad at all. \"I'll text you!\"\n\n\"Sweet!\" she exclaimed, getting back to her run. As with the others, Peter and I watched her run away for a fair moment before we spoke again.\n\n\"You hooked up with Fatima?\" Peter asked, impressed.\n\n\"I don't kiss and tell,\" I joked. \"Well... I really try not to.\"\n\n\"Understood, understood,\" he said. \"It's just that, you're not the only guy who's ever had his eye on her, but you might be the only one here to actually get with her. It's cool, is what I'm saying. How'd it happen?\"\n\n\"Fatima?\" I asked.\n\n\"No. I mean, yes, but... all of it. All of you, and the girls, and... listen, I've heard some crazy shit in my time, seen even more and done more than that, but I don't think I've ever heard anything like what you've been up to since school started this year. I figured a lot was bullshit, but when Sasha told me it wasn't, well... I just wanna know, if you're cool to talk about it,\" Peter said.\n\nI thought about what he was asking. I didn't really know Peter that well yet, but there was just an aura of trustworthiness around him that made it feel okay to open up. For the sake of the women I'd been with, I figured I'd do what I could to keep names out of it unless he already knew for sure, but otherwise I felt alright talking with him.\n\n\"Dumb luck, to start. Then word of mouth. Then more dumb luck, more word of mouth, girls telling other girls, sending me around to friends, and that was fun... but after a while, I started seeing girls because I wanted to. I realized that I had some skills and natural talents, and I just started going with it. Sometimes it's blown up in my face, and I've gotten in trouble, but the rest of the time...\" I trailed off.\n\nPeter nodded. \"Not bad, not bad... a lot of things make a lot of sense now.\"\n\n\"Good things?\" I asked.\n\n\"For you? Hell yeah. The other guys at school? Probably not, but, hey, if we gotta up our games because you're new on the block, then we gotta up our fucking games,\" Peter said proudly.\n\nHe wasn't the only one who was proud. I'd only had a limited view into what my reputation around school had become, and mostly from the girls. With Peter, easily one of the most notorious ladies' men in school, talking about how I was making the other guys up their games, well, it was hard not to get a bit of an ego.\n\n\"Awesome,\" I said as we stopped just outside the weight room.\n\n\"Damn straight it's awesome,\" Peter said, clapping me on the back with another of those powerful impacts that nearly sent me sprawling. \"Now are we gonna lift weights, or are we gonna lift weights?\"\n\nPeter made a muscle with his arm to show off, enough to make me realize that each of his arms was close to both of mine put together in size.\n\n\"We'll try,\" I said.\n\nHe laughed. \"That's the spirit!\"\n\n***\n\nLying on my back, benching a bar with enough weight that I feared would break me in half, I felt like I was going to die. I wasn't going to, not with someone as big and strong as Peter spotting for me, but it felt like death might be preferable to this much work. I did it, somehow, but I knew this would have me sore for a while.\n\nIt did, however, give me insight into the mind of Peter Nixon, which he apparently liked to share freely while working out.\n\n\"Respect. In the end, it's all about respect,\" Peter posited. \"Not enough guys know that, and that's why they fuck up. They expect girls to be throwing themselves at them because they want girls to throw themselves at them and nothing more, but that won't happen if you don't have respect for the girl. You need to get to know her, get to know what she likes and embrace that. You can't just pretend to be interested; you have to *be* interested. Get outside your comfort zone and find out what she's into, and make the effort to get to know it. Doesn't mean you have to like it, doesn't mean you will like it, but if you understand it, it'll help you understand her. You have to respect that, even if you may not understand it, even if you don't like it, she does, and that's okay. But you understand that already, right?\"\n\n\"No more... no more...\" I wheezed, pressing up with what little I had left, then letting Peter take over as he replaced the bar.\n\n\"Ah, sorry 'bout that, got into my speech too much, maybe,\" Peter said.\n\n\"Maybe,\" I agreed, sitting up gingerly. My arms were on fire and my shirt was soaked through with sweat; if Peter was looking to tire me out as a way of getting rid of a rival for the attention of the girls in this school, well, he was doing a pretty good job actually.\n\nI didn't think so, though. There was nothing about Peter that read like he was trying to humiliate me or make fun of me or anything like that. He actually seemed interested in me getting a good workout, and offered tips that kept me from getting as hurt as I'd worried I might.\n\n\"And about respect... yeah. I agree, entirely. You think I manage all this based on my looks and athletic prowess?\" I asked, coughing as I tried to take in what little air my body felt capable of taking in.\n\nPeter handed me a bottle of water, and I drank from it gratefully. He admitted, \"Not yet, but soon.\"\n\n\"Hey boys, lookin' good!\"\n\nI knew that voice.\n\nI liked that voice.\n\nWe turned our attention to the two girls who'd approached us. One was petite, tight-bodied and blonde, with her hair done up in a pair of bouncy pigtails. The other was taller and willowy, a pale redhead with short-cut red hair, glasses, freckles and a goofy smile. They both wore comfortable athletic clothes that showed off their best assets (the ass for the blonde, the C-cup tits for the redhead), and they were both quite familiar to Peter and me.\n\nProbably because we'd fucked both of them at different times.\n\nBrooke King and Sasha Pearl. Cheerleaders. Sweethearts. Hotties. Some of the nicest people at this school.\n\n\"Thanks, Brooke,\" I said.\n\nShe giggled, \"Like, totally don't mention it.\"\n\nSasha rolled her eyes. \"You're not giving Ryan too hard a time, are you, cutie?\"\n\n\"What? Me? Never,\" Peter said dramatically, wrapping an arm around his girlfriend and pulling her in for a kiss. That her lips had also been around my cock and I'd filled her pussy with cum only a couple weeks back didn't appear to bother him in the slightest. I actually envied Peter that self-assuredness, somewhat, but when you looked as handsome as him I guess that came with the territory.\n\nBrooke skipped on over to where I sat, bent over, and planted a quick, sweet kiss on my lips too. Smiling, she explained, \"Just so you don't feel left out!\"\n\n\"Thanks,\" I replied. She looked at me cutely, biting her lip and smiling in a way that'd normally get me very hard, very fast. The problem was that there was something a little more to it than usual, and that \"something more than usual\" had been a good way to describe Brooke's and my relationship ever since New Year's Eve. I felt it, she felt it... I just hoped nobody else felt it just yet, because Brooke and I hadn't really seriously talked about it yet.\n\nThe problem was... I might've fallen in love with Brooke King, and I was about 90% sure that the feeling was mutual. Our friendship had developed slowly over the year, from strangers to fuck buddies, from fuck buddies to friends, from friends to best friends and... now... something more, I was pretty sure. I would've loved nothing more than to confess my feelings to Brooke so the two of us could have this all out in the open, but, that's where we ran into the Josie problem.\n\nJosie was my girlfriend, and I loved her more than anything. She was happy for me to keep fucking around because she got off on the stories (and knew she could always give it to me better afterward), but the prospect of me actually falling for another girl had never really come up until recently. It was a lot to deal with, and with Josie out of town until who knew when, I was doing everything I could to juggle these feelings in a constructive way. Talking with Rachel over Skype had been helping, some, as she had plenty of advice to share on confusing relationship topics, but until Brooke and I actually talked about it or Josie came back, this topic was stuck in a kind of limbo I'd rather have not been stuck in.\n\n\"Hey, you, like, okay?\" Brooke asked.\n\n\"Uh, yeah, just stuck in my head, I think,\" I said, forcing a smile.\n\nShe giggled softly. \"I totally get that. Especially since... ya know.\"\n\nSo, we were on the same page. That was probably a good thing.\n\n\"I know,\" I nodded.\n\n\"We gotta talk about that, sometime. Sometime, like, soon?\" she proposed.\n\nSo, this was something we were talking about now. That was good. Scary, but good. I gulped. \"Sure.\"\n\n\"Sweet!\" she exclaimed, quickly hugging me and planting a kiss on my lips.\n\n\"So...\" Peter said, butting in after he and Sasha finished chatting about whatever they had to chat about, \"...you two finished?\"\n\n\"Sorta?\" I said.\n\n\"Totally,\" Brooke said.\n\n\"Cool,\" Sasha interjected. \"Because Peter and I were wondering if you guys wanted to head out and grab some dinner, maybe make it a double date?\"\n\n\"Well, it wouldn't, like, be a *date* date,\" Brooke said, looking over at me with understanding, \"But I could go out for some food. I'm kinda starvin'!\"\n\n\"Nice,\" Peter said, then looking to me. \"You in, Ryan?\"\n\nI considered the offer, but had to turn it down, \"I can't. I gotta run down to the Puma Press office and do this thing... fuck, I'm probably already late as is.\"\n\n\"Oh no!\" Brooke said.\n\n\"Can't beg it off?\" Sasha asked.\n\n\"No,\" I said, getting up with some bit of pain. Brooke helped steady me, and I looked at her, grateful. \"But another time... if Peter here aces another pop quiz.\"\n\nIt actually sounded like fun whether or not Peter managed to ace a quiz, but anything to motivate the guy worked for me.\n\nSasha looked at her boyfriend, impressed, \"You aced a pop quiz? That's amazing, babe!\"\n\nPeter smiled nervously, patting her on the shoulder, \"An *unofficial* quiz.\"\n\n\"Hey, that's still something, don't sell yourself short! I always told you you could do it!\" Sasha proclaimed.\n\nWhile Peter and Sasha argued over how proud he should or should not be for passing a mock pop quiz I threw together, Brooke turned her attention back to me.\n\n\"You sure you can't back out with the paper? I could, ya know, like, totally go on down there and tell Nadia that you're sick and take you home and make you feel all better, I can give pretty good full body massages, maybe even bust out my naughty nurse outfit...\" Brooke taunted, temptingly.\n\nBrooke had a naughty nurse outfit? Wait, who was I kidding; of course Brooke had a naughty nurse outfit.\n\n\"I might take you up on that, normally, and this is probably one of the hardest things I've ever had to say, but I made a promise. And besides, Nadia's out now; Nica's holding down the fort 'til she gets back,\" I clarified.\n\n\"Ah,\" Brooke said. \"Yeah, don't fuck with Nica, I getcha there. Don't mind me goin' off with those two, do ya? I'm still hungry, and we're probably gonna fuck after; Peter really knows how to make me cum, and Sasha can do this thing with her fingers and my ass...\"\n\nShe sighed contentedly, even though it felt like she was holding back on something I couldn't define.\n\nI laughed. \"You three go have fun. Take it in all three holes for me, so I know one of us is having fun tonight?\"\n\nBrooke laughed, kissing me again, \"Deal.\"\n\n\"Cool,\" I said, standing up and stretching. Stretching was not fun, but my muscles weren't feeling half as bad as I was expecting. Tired, sure, but not dead. Peter might've known what he was working at after all. Now if only the others...\n\nWell, that was worrying.\n\n\"I gotta go,\" I said.\n\n\"To the paper? That quick, huh?\" Brooke asked.\n\n\"No,\" I said, striding out of the weight room. \"I haven't seen Kaitlyn and Jess since we started in here; I need to make sure they haven't killed each other!\"\n\n***\n\nI wasn't late to show at the Puma Press offices, but I was getting close. This is why I ran. With a towel hanging around my shoulders, a backpack slung over one arm and my street clothes held under my other, I ran across the campus from the athletic field toward the newspaper office. I wanted to get through with everything that needed getting through with Nica and still have a few minutes left to actually have a little Friday fun. The likelihood of this kind of fun seemed to shrink more and more with every passing moment as more and more factors seemed to conspire against me.\n\n\"Oh, hey, Ryan!\"\n\nFactors like the voice calling for me. I wanted to pretend that I'd not heard her calling after me, that it was possible for me to just ignore her and keep going so I could do what I had to do, but it wasn't to be.\n\nI slowed, then stopped, turning to look at the girl who'd called after me.\n\n\"Hey, thanks for stopping!\" Brianna Roth said, her full lips stretching into a broad smile.\n\nNow, despite having gone to school with her for about as long as I could remember, this might have been the first time she'd ever actually spoken to me outside of a classroom. No surprises there, really; she was popular, and I spent most of my school life the opposite of popular. I didn't know much about her, but I knew that she was friends with Kaitlyn even though she wasn't on the cheer squad, she had a reputation for being something of a flirt, and that she was twin sisters with Mia Roth, the pink-haired and tattooed emo rocker I'd gotten together with in the leadup to Christmas.\n\nAnd that, well, she was fucking gorgeous. She had the insane curves of her twin, with F-cup tits and an ass to match, all on a tight 5'4\" frame, and almost the exact same face, but in every other way she was different from Mia. Her hair was dirty blonde and shoulder-length, her skin healthily tanned. Her pretty face held a friendly smile, while her fashion sense of short shorts, a tight top with a bare midriff that showed off her toned abs, and an open jacket that kept the cool winter breeze off of her. It was hardly school dress code, but being after school I didn't imagine that would be a problem.\n\n\"If it's alright, I'm in a bit of a hurry,\" I said.\n\n\"That's okay! I can walk with you; I just wanted to ask you a question,\" she said.\n\nIf she didn't want to eat up too much of my time, I could walk with her. \"Sure.\"\n\n\"Goodie, thanks!\" she said, keeping pace with me. I wasn't running anymore, but keeping a brisk walking pace toward the Puma offices.\n\n\"So, what was it you wanted to ask?\" I asked.\n\n\"Oh, yeah, I just wanted to see if you knew where Kaitlyn was? We were supposed to party tonight and she hasn't returned any of my texts, and I know you two were supposed to be doing study group tonight, so when I saw you, you know, I thought, 'hey, let's ask him', so I asked you, and, yeah...\" Brianna said.\n\n\"Ah,\" I replied, thinking back to where I'd last seen her. Given how long it had been since I'd seen Kaitlyn after I got out of the weight room, I was half-expecting to see her and Jess throwing it down behind the gym. Instead, I caught the two of them jogging good-naturedly around the track. I couldn't hear what they were talking about, but for two girls as opposite as they were it seemed cordial enough.\n\n\"She should still be running laps around the track; but you might want to hurry if you want to catch her,\" I said.\n\n\"Oh, cool, thanks!\" Brianna said. I couldn't help but notice that she was still walking beside me instead of heading on over to the track.\n\n\"Is there anything else?\" I asked.\n\n\"Uh... yeah, a little,\" she said, looking at the ground embarrassed. \"I was just wondering if, you know, Kaitlyn had told you about anything we were hoping to try tonight?\"\n\nAh. Right. That.\n\nWay back in September when Kaitlyn was passing the word around to her friends about what we'd done, Brianna was one of the first girls I remembered who'd eyed me with interest. Since then, she was the only one of those girls in the first wave who hadn't hit me up. It wasn't something I put a lot of thought to since I was having my own fun (and some not-so-fun moments), but now that we were in the same place at the same time, I was struck by this.\n\n\"She told me some,\" I said.\n\n\"Okay, that's cool, I guess... but if she told you all that, why does it feel like you're really just trying to run away from me?\" Brianna asked.\n\n\"I've got to be at the Puma Press office, like, five minutes ago,\" I said, thinking that'd explain everything.\n\n\"Okay... that makes sense,\" she said, thinking it over. \"So, you need to be there more than you'd need to spend a Friday evening with two hot girls who are up for pretty much anything?\"",
        "I sighed. I didn't want to have to explain to her that a threesome with two of the hottest girls in school actually wasn't that new a thing to me, but since she wasn't being too much of a pain, I wanted to let her down easily. \"It sounds really good... but I made a promise. I gotta be there.\"\n\n\"I understand... I think. I understand,\" Brianna said, her voice a little downtrodden. She didn't strike me as a girl who was used to hearing no a lot when it came to guys, but instead of getting angry, she just sounded slightly sad. Given her twin's attitude and her school social status, I thought she'd have been a major league bitch about a rejection like this, so this threw me off.\n\n\"Another time?\" I suggested.\n\n\"Sure,\" she said, even though the way she sounded it seemed she thought I was brushing her off.\n\n\"I mean it,\" I said. \"I'm really busy today. But if you want to, hang out or whatever, sometime, that sounds like it could be a lot of fun.\"\n\n\"You're sure?\" she asked.\n\n\"I'm sure,\" I said.\n\n\"Positive?\" she asked.\n\nThis could go on for a while. \"Brianna, I-\"\n\n\"Sorry, I'm not trying to be weird about this or anything, it's just... I wanted to hit you up back in September, but then I got with Miles, and I wanted to get with you again after I broke up with him, but then Lars came around, and then Steve and Rick and... I've been in a bad cycle of lousy boys this year that I can't seem to shake and was really hoping to spend some time with a guy who could treat me good and was fun to be with. Kaitlyn says you're really both, and I was hoping to find out soon before I fall for some other dickhead and keep putting you off,\" Brianna said.\n\nThat was a level of honesty I hadn't expected from her. I didn't want to question her taste in guys because she was clearly already beating herself up about it and I didn't want to pile on, but if there was anything that could make me reconsider a promise it was the simple honesty she opened up to me with. This was a girl who wasn't used to asking for help asking for help, and I might've been one of the best people to provide it. I couldn't turn back on my promise to Nica, but this was as close as I could've gotten.\n\n\"Get my number from Kaitlyn and text me so I can get you in my phone. I'll let you know when I'm available, and we can do whatever you want. You want to fool around, cool. You want to just talk to a stranger about anything, I'm good too,\" I said.\n\n\"You mean it?\" Brianna asked.\n\n\"I do,\" I said.\n\nWe'd made it to the Puma Press offices. Brianna looked at me gratefully, then pulled me in to place a quick peck on my cheek. With a surprising amount of nervousness for a girl this popular, she smiled at me, giggled, and jogged off in the direction of the athletic field.\n\nI shook my head, laughing to myself. This had been a weird, busy back to school week, and fun as it was, I was looking forward to it being over with.\n\nThe door to the Puma Press offices swung open, a figure darting out looking to begin their own Friday.\n\n\"Ryan,\" she said, nodding politely.\n\n\"Tori,\" I replied, returning the nod.\n\nI grabbed the door as it swung shut behind her and slinked inside of the Puma Press office, hoping that Nica wasn't too mad with me.\n\n***\n\n\"You still smell,\" 18-year-old Nica Dubois said. I'd just stepped out of the Puma Press office's old dark room, dressed again in my street clothes and after hastily washing myself in a sink.\n\n\"Yeah, well, until they install a shower in the dark room, I did the best I could,\" I said, walking into the main cramped office that only Nica and I shared. The Puma Press' dark room was a relic from when our school had a thriving photography department. With most gone over to digital these days, only half the dark room was used for developing film by those with retro sensibilities (like Josie), while the other half had been converted into a break room of sorts with a couch and games, a place for people to relax or fool around or do whatever you wanted so long as you didn't mind the room's red lights.\n\n\"Well, the best you could means you still smell. But you don't smell so bad as you used to, so, it is an improvement,\" she said, the faint remnants of her French-Canadian accent giving her voice a little extra taste of sass.\n\n\"Thanks,\" I replied, shaking my head slightly. Though slender and shorter than me, Nica had a sarcastic streak that could probably knock guys bigger than Peter to the floor. She was one of the only people I'd seen with sass enough to stop Nadia in her tracks, and though it was usually fun to listen to, today it was just one more thing to deal with.\n\n\"Thanks? That's it? What happened to your banter? You're always good for talk, talk, talk, joke with me, joke with everyone else, use your penis to open a girl's pants, and kaboom! And today it's just... thanks?\" Nica asked, trying to get a rise out of me with a dirty joke.\n\nI looked at her, truly trying to take the girl in to see if she was someone I wanted to talk to. Her short cut, brown hair framed a lively, intelligent face that rested more on the side of cute than gorgeous, with soft-looking lips curled into a slight smile and sparkling brown eyes. She dressed casually in a t-shirt and jeans, covering for the afternoon chill with a light zip-up sweatshirt. Everything about her felt approachable, but still it felt safest to keep this at arm's length for now.\n\n\"I've... I've just had a long week,\" I replied.\n\n\"Ah, haven't we all! Most of my teachers look like ladies whose minds are far from school, Nadia's out sick from school and left this work in my talented lap (whilst micromanaging from afar, I might add), and I nearly got crushed by Amy Temple jumping off the roof...\" Nica bemoaned.\n\n\"What?\" I asked.\n\n\"Amy Temple? The blonde from drama club? Wishes to be a stuntwoman? She was practicing parkour jumps and rolling, not looking where she fell. I got a nice interview escorting her to the nurse's office though, sweet girl, very intense, though. Seeing her pop her shoulder back into place against a lunch table is something I could've gone my life without seeing,\" Nica said, stroking her chin thoughtfully. \"All this stuff, girls, girls, girls; aren't there any other boys at this school? It seems all I do is see you and one or two others, the rest, beautiful girls!\"\n\nI laughed. \"I've heard speculation on that, but I couldn't tell you an answer.\"\n\n\"Ah, yes, the old fable of 'something in the water at Regan Hills'? I should truly assign one of our more scientifically inclined writers to investigate,\" she said.\n\n\"There's probably a story in there, somewhere,\" I said.\n\n\"Perhaps there is, perhaps there isn't, but it would be fun finding out, no?\" Nica asked.\n\n\"Perhaps,\" I agreed, shrugging half-heartedly.\n\nNica walked over to a desk with one of the new computers, beckoning me to follow her. \"Again, with the apathy! You've typically a zest for life that most would envy! Not the only thing of you that most would envy from what I'm told, but that's neither here nor there. But every day you come in this week, there's a little less of you here. Soon there will be nothing at all, and I don't think we can afford to lose another writer, not if we want to win any of those awards that Nadia will kill us if we don't win.\"\n\nI sighed, pushing my glasses up to my forehead and rubbing my eyes as I took a seat next to her. If it was this obvious to Nica, a girl I'd only spent some professional time with in the Puma Press offices, it had to be obvious to everyone else as well.\n\n\"Okay... fine. I'm a little stressed, okay?\" I asked.\n\n\"A *little* stressed?\" Nica repeated, skeptical.\n\n\"Okay... a *lot* stressed,\" I said. \"I was running myself ragged all December, and then the holidays themselves were a marathon, and I've accepted a lot of responsibilities around here this year that I didn't expect to stack up like they have, and I really miss Josie and just want her to come back and...\"\n\nWow, that felt pretty good to get off my chest. It didn't change that all of that stuff was there, but it helped to acknowledge that it existed. Nica looked at me with understanding, but didn't say anything.\n\n\"I guess... I've been having a lot of fun this year, but all that fun's come with a lot of changes and things pulling me in every direction at once. I've so many more duties, and people wanting so many more things from me, needing me to be one person or another when I still don't even know who I am half the time. I wouldn't turn my back on any of these changes, but they can weigh me down sometimes. I'm having kind of a hard time standing, I guess,\" I said.\n\n\"Duties and obligations have a way of doing that,\" Nica replied.\n\n\"You sound like you say that from experience,\" I said.\n\n\"Eh,\" she said, cocking her head from side to side uncertainly. \"We've all our share of weights to bear, of factors in life that mean to pull us in many different directions at once, and there are times where we all feel like we're ready to fall to them. It's how we handle these things that defines us. That's what I think, anyway.\"\n\nI was game for anything at this point to help, so I asked, \"How do you handle them?\"\n\nNica laughed. \"Badly, much of the time. For advice, I can be a bad guide. A bad guide who means well, but a bad guide all the same.\"\n\n\"That doesn't help,\" I muttered.\n\n\"I never said it would,\" Nica replied. \"But... okay, if it is an option, I try to remove as many stressors from my life as I can. Lighten the weight, to continue off of your metaphor.\"\n\nThat sounded like a good idea, but not the easiest one to pull off. I'd already promised myself to tutoring and the Puma Press, and with the homework load only promising to increase as the year went on, and my difficult to predict social calendar, it didn't seem like there was any end in sight.\n\n\"Easier said than done,\" I said. My phone vibrated, and I pulled it out to look the quick string of texts.\n\nUnknown: Hey its Brianna\n\nUnknown: Kaitlyn gave me your number\n\nUnknown: so you can program me in\n\nUnknown: Thanx for talking\n\nUnknown: hope we can meet soon sometime\n\nQuickly, I programmed her into my phone so she'd show up as something more than Unknown.\n\n\"Sorry,\" I said.\n\n\"Oh, don't be,\" Nica replied. She looked at the computer screen she meant for us to work on, then back to me. \"You know... these interviews and articles you wrote, they're textually fine. At this point they only truly need one more pass for grammar and spelling and formatting for print. If you wish to leave, and promise me that you'll take the opportunity to de-stress, I'll cover for you on the rest of the work. I won't even take more than fifteen to twenty percent of the credit when Nadia asks me how they went.\"\n\n\"Yeah?\" I asked. Images of heading out for the night, getting the chance to enjoy Friday danced before my eyes. Nica would cover for me, I'd get to relax, maybe even see if Kaitlyn and Brianna weren't too occupied already. It was still pretty early, I could have probably gotten a ride from them, followed by something much more fun. Maybe I could even bring a smile to Brianna's face to make up for how terse I was with her earlier.\n\nThen I looked back at Nica. The offer she'd made me was one made out of a place of great kindness, and it was a kindness I couldn't just push to the side as easily as she'd offered.\n\nI took a deep breath. \"No. I'll stay. Let's finish formatting together, finish the work in half the time, see if we can salvage a Friday for both of us.\"\n\nShe raised an eyebrow at me, surprised. \"Are you sure? I imagine whoever was texting you there will be most disappointed if you don't show.\"\n\n\"Maybe, but, I'll manage,\" I said.\n\n\"Very well,\" she replied. \"I believe we've an hour, perhaps two, of work in front of us if we start soon. I was thinking, perhaps, of ordering a pizza?\"\n\n\"Mr. Hopkins won't pitch a fit?\" I asked.\n\n\"Nah, he's out, and if we don't leave a mess, he'll permit most anything. It's my treat? Call it 'thank you for sacrificing a Friday so Nica doesn't get chewed out by Nadia' if it makes you feel better?\" Nica suggested.\n\nWith how light my wallet was lately, that sounded perfect. \"Deal.\"\n\n\"Good. Let's get this party started,\" she said.\n\n***\n\nBetween the music, the pizza, and the company, you'd have thought we might have actually gotten a party going. The work went by so quickly it hardly felt like work, and with someone as charming as Nica Dubois to pass the time with, I could've been having a much worse Friday than I was.\n\n\"So... that actually was you?\" she asked.\n\nI nodded. \"Not one of my prouder moments, but it got the job done.\"\n\nNica laughed. \"Kyle Bowman getting escorted from Homecoming with a face full of cum was one of the singular highlights of high school for me. In case you haven't heard that enough from everyone else... thank you, for that.\"\n\n\"You're welcome,\" I said, finishing off some formatting that finally felt like I was getting somewhere. \"Like I said, it's not one of my prouder moments. And it was really more of a group thing, I had help pulling it off. And...\"\n\nI let the word hang, not sure if I wanted to go any further. Nica, though, wouldn't let the word hang.\n\n\"And what?\" she asked.\n\n\"It's nothing,\" I said, shaking my head.\n\n\"No, it's definitely something. Almost always when someone says 'it's nothing' as you just did, it is something, so you have definitely piqued my interest,\" Nica replied.\n\nShe had me there. \"I was just gonna say, you didn't really strike me as the homecoming type.\"\n\n\"I would say the same for you, at first glance,\" she said.\n\n\"Point,\" I replied.\n\n\"Seeing as we don't know each other terribly well, I would assume misunderstandings such as that would be quite easy to come across,\" she said.\n\n\"They would be,\" I said.\n\n\"This isn't to say I know nothing of you. There is talk, as you know,\" she said.\n\n\"I do,\" I replied, smiling a little nervously.\n\n\"It is almost as much legend as it is gossip, but a boy such as you only comes along once in a blue moon, so... I hear things,\" she said.\n\n\"Good things?\" I asked.\n\n\"Very,\" she said confidently.\n\n\"This would be a bad time to admit that I don't know much of anything about you, wouldn't it?\" I said.\n\n\"Eh,\" she said, cocking her head from side to side again. \"If we were in a romance, perhaps, but we are not in a romance, so it isn't as bad as it might be. I'm quite glad to hear this, honestly, that you know little of me. I try to keep my privacy, and if you've heard little, it means I'm succeeding.\"\n\n\"If you're keeping private these days, that's impressive,\" I said.\n\nShe scowled. \"I have little patience for social media, and have done all I can to avoid it. It's not the frivolity, to speak of, that turns me away, but the people. The ease with which stupidity and lies spread is appalling. When hatred and intolerance are not stamped out as fires should be, but given fuel... when toxic ideologies infect and rot until stupidity is not just embraced but exalted, rewarded with the highest echelons of power...\"\n\n\"...and you joined the school paper to get away from that?\" I asked. I wasn't trying to be rude with the question, but the juxtaposition of what she'd just said and where I met her did strike me a bit odd.\n\nNica briefly looked at me as if surprised, clearly catching herself in the middle of a speech she didn't fully mean to get into here. \"Oh, uh, not really. While I choose to limit my exposure to the assholes of the world, I also believe in the power and necessity of a free and responsible press and wish to do all I can to contribute to a better class of discourse than we have these days.\"\n\nI admired her principles, even if I knew I couldn't throw myself willingly into that much torment.\n\n\"Must be tough not going crazy from it, sometimes,\" I said.\n\n\"I cope how I can. I remove what stressors I can so I can better cope with those I've chosen to face, and for those, I've my own ways of dealing,\" she said.\n\n\"Yeah?\" I asked.\n\n\"Yeah,\" she replied, cryptically.\n\n\"Oh, come on, you start like that, you know I've gotta ask what you do,\" I said.\n\nNica rolled her eyes at me. \"This is true, but it doesn't mean I must answer.\"\n\nThe response was playful, encouraging me to ask one more time. \"Please? You've got me curious, and if you force me to, I'll ask *really* nicely.\"\n\nShe sighed. \"Heaven forbid that happens.\"\n\nNica's lips broke into a sly smile, then she said, \"Fine, if it will keep you from asking *really* nicely... when I stress, I work on my novel. There, does that make you happier to know?\"\n\nI sat there for a good moment trying to figure out whether or not she was messing with me, but when I decided she wasn't, I said, \"You're writing a novel?\"\n\n\"And now that I've opened the door, this will never be the end of it,\" she said, sighing.\n\n\"We can close the door if you want, but you got me curious,\" I said. I hoped she didn't want to close the door; I didn't know anyone who'd actually tried this beyond some fanfic, and it was interesting to me.\n\n\"Okay, ask the obligatory first wave of questions,\" she replied.\n\n\"So... what are you writing?\" I asked.\n\n\"It's a work in progress, and I'm not entirely sure what it will be. But it is a drama, a coming of age story. I have no working title yet, but that doesn't mean I will never find one,\" she replied.\n\n\"And what's it about?\" I asked, quickly scrolling up and down my screen to verify that I'd finished what I meant to do and finding, quite happily, that I had.\n\n\"A girl trying to find herself, dealing with trauma from a man whom she'd trusted and how to move on from there. Discovering herself, trying to figure out what she wants from life. It is based on some true stories from people I know, and some embellishments to make it work as a story. It's not a fun read... but I think it might be good. Truly depressing stuff, I know,\" she said, defensive and nervous.\n\n\"Yeah, but whoever said depressing was a bad thing? I mean, unless you're writing a children's book-\"\n\n\"-I'm not writing a children's book-\" Nica interrupted, laughing.\n\n\"-then you can write whatever you want,\" I finished.\n\n\"I'm glad you think that way. Now I just hope it will find its audience. An agent and publisher would be nice, too,\" Nica replied.\n\n\"Wow, you're going for traditional publishing?\" I asked.\n\n\"I hope. I will self-publish if I must, but I have dreams of bestseller lists in addition to having my voice heard. Selfish, I know, but I like what I write. It feels good to focus my anger and frustration into something creative instead of destructive, and, it is my comfort place. True, I am terrified of what other people will think of it, but since Josie seems to like it so far-\"\n\nThis surprised me. \"Josie's reading it?\"\n\n\"She may not have our flair for the grammatic, but she is a sound beta reader. I hope to see her back soon,\" Nica said, stretching her neck with a loud pop.\n\n\"Me too,\" I sighed.\n\n\"Well, I can't promise she'll be here, but if you wish to talk to her soon, that freedom is yours. I have finished with my review, and you?\" Nica asked.\n\n\"I have,\" I said.\n\n\"Good. E-mail it to me and I'll pass it along from there,\" she said.\n\n\"Already done,\" I replied, smiling.\n\n\"Magnifique,\" she replied, smiling at me. \"Then, Ryan, you are free to go.\"\n\nIt was a lovely smile, and one that I almost felt bad that I meant to run out on. These past couple hours had been a lot of fun, and I was now starting to realize how much I really liked being around Nica. She was smart, driven, and had a biting sarcasm that cut through the shit that I really liked. There was something about her, a cautious vulnerability, that cut through that edge, but didn't make her any less of a person that I wanted to hang out with. After a day spent dreading this time, I was actually beginning to feel quite fortunate for it.",
        "\"Thanks,\" I said, shutting down my computer and standing, stretching out some stiff muscles that were soon to be quite sore, thankyouverymuchPeterNixon.\n\nAs I went to retrieve my backpack, I looked back at her. She sat in her chair and stretched her lithe frame out, her hair falling back as she leaned back with closed eyes and a satisfied smile. I had to amend my earlier thought where I thought she was more cute than gorgeous. Sure, Nica Dubois definitely fell on the side of cute, but she was also beautiful in a way I hadn't appropriately appraised.\n\n\"So, any fun plans for the rest of this evening?\" I asked her.\n\nShe opened her eyes, looking at me with her head upside down and a friendly, if nervous, smile. \"I was thinking about going into the Dark Room for a good cum or three before going home to work on my manuscript. You?\"\n\nNica had been frank about a great many things, but even now she could still catch me off guard. I stuttered, \"I... uh, hadn't put a lot of thought to it actually.\"\n\n\"Oh?\" she said, twisting her chair around and sitting back upright. Her face was one of tentative anticipation, of trying to pull together courage as a thought came together. \"If that is the case, and you wish to, perhaps, join me in the Dark Room...\"\n\nI eyed her cautiously, trying to determine whether or not she was messing with me. Given her usual sense of humor and the way she casually joked about my sexual history, this wouldn't have been shocking. This could be something to just laugh off and walk out the door laughing off, both of us having some good fun with, but that wasn't the read I got. The way she looked at me, anticipatory and nervous, I knew this was her putting herself on the line for me. She was hopeful and didn't want to be let down but was prepared to be let down because she was tough and fairly jaded and familiar with the kinds of girls I usually spent my time with.\n\nI thought of her, I thought of where I could be tonight with just a phone call, then I realized I knew exactly where I wanted to be.\n\n***\n\nNica led the way slowly into the red-lit confines of the dark room, quickly glancing back at me periodically as if afraid that I might disappear if she stopped looking for me.\n\nA few steps away from the couch, she abruptly turned around and kissed me. Those full, beautiful lips of hers pressed against mine and felt... well, simply amazing.\n\nShe broke the kiss, then looked up at me smiling awkwardly. \"I'm sorry. I should warn you of something, first.\"\n\n\"Oh?\" I asked.\n\n\"It's... it's not much that should be worried about, but you should know, that it's been a long time since I've done anything like this with anyone, and even longer with a guy. I want to like... I mean, I do *like* sex, but I haven't as much experience as... and the experience I've had has been... I'm sorry, I'm not saying this right,\" Nica said.\n\n\"No, it's okay, say it when you can,\" I replied.\n\n\"It's just... if I'm a little nervous, or weird, or anything else... you'll understand?\" she asked.\n\n\"Totally,\" I replied.\n\nShe smiled at me, kissing me again, more quickly. \"Thank you.\"\n\nI didn't know what kind of experiences she'd had, and I didn't want to press her if she didn't want to relive any less-than-pleasant encounters. If I'd sensed this was something she wasn't 100% sure about, I'd have deescalated this and let it pass. Still, even with her hesitation, I could see this was something she really wanted, and that was something I was definitely happy to help with.\n\nNica led me over to the couch, taking off her sweatshirt and setting it down on a nearby game table. Briefly, I admired the small, intertwining set of tattoos on the inside of her left arm, before sitting down beside her. To be this close, with a certain heat, an energy, passing between us, was surprisingly intense. I didn't know what led to it, but I loved the anticipation. Being this close to her, watching her purse and open those magnificent lips of hers as we looked into each other's eyes, it felt strangely intoxicating.\n\nI leaned in to kiss her, and felt quite pleased when she kissed me back. Our tongues tentatively touched between lips, then explored deeper as we went further. She reached over to wrap an arm around me, pulling me in close as I touched her. I settled a hand on her thigh, and encouraged by her soft moan, I gently ran it up over her abs, then found one of her small, firm breasts through her shirt. I gently squeezed it as we made out, feeling her nipple harden through the fabric.\n\n\"That is very, very nice,\" Nica said between kisses, groaning very pleasantly.\n\n\"Good. I'm glad to hear that,\" I said.\n\n\"Oh, don't be so modest,\" Nica said, kissing me hungrily. \"I know you're good. You know you're good. I didn't proposition you for modesty.\"\n\n\"So, what did you proposition me for?\" I asked, cheekily.\n\n\"If I say sex, it would be truth, but only a partial truth. I also came to you for decency, and kindness. A boy who is well endowed and talented in the art of sex is uncommon, but not so uncommon as to never be seen in the wild. One who is like this and still considerate towards the woman he is with? That is a much rarer beast,\" she replied, kissing me.\n\n\"So that's what I am? A beast?\" I teased.\n\n\"Most boys are in some capacity. We shall see if this is the case for you, but I believe this doubtful,\" Nica replied.\n\n\"Sounds like you've done your research,\" I replied, rubbing her nipple through her shirt with my thumb.\n\nShe hissed pleasantly. \"My sources, and by sources I mean friends, speak well of you. Nadia and Hope, Izzy and especially Josie, speak well of you as a caring and considerate lover and person. Given my current state of experience, caring and considerate is quite necessary, and after we've had our time together to speak so I know you are who they say you are... yes, I did my research. I am a journalist, after all.\"\n\nI should have maybe been a little freaked out at the level of thought she put into this, but I wasn't. Nica clearly had her reasons for being careful, and after the time we'd spent on the paper getting to know each other, I quite liked her too. I wouldn't begrudge her her caution.\n\n\"Thank you, for being willing,\" she replied.\n\n\"Thank you, for asking,\" I said honestly.\n\n\"Oh? That is not always the case?\" Nica asked.\n\nI didn't know that this was something I wanted to go into great detail with with her, but it felt like something that needed to get out. I said, \"I've got a reputation. I know I've got a reputation. With most of the girls I get with, it's cool, they understand me and don't have a problem with it. Some others, they seem to think that just because I have a lot of sex and have fun having a lot of sex that it's something they can just ask of me at any time, that I'll always be ready for it if they beckon. And, don't get me wrong, often that kind of sex is a lot of fun, but it's not always what I'm looking for. So, thank you for asking me first instead of, you know... assuming? It's nice sometimes to be reminded that I'm a person.\"\n\nLooking deeply into my eyes, she leaned in and kissed me again. \"You *are* a person. A kind, not-so-bad-looking person with some gifts that not everyone might properly appreciate, but one I am happy to be here with. To hell with those others who don't wish to understand; for now, we are here together, and you are the only one I want to be with, not them.\"\n\n\"Yeah?\" I asked, impressed by her sudden surge of confidence.\n\n\"Yeah,\" she confirmed, kissing me again. She reached down to unbutton her pants, opening them slightly. \"Now would you... would you please touch me?\"\n\nIt was an intense invitation, but a welcome one. Without saying a word, I kissed her and reached down to the opening at the fly of her jeans, sliding my hand inside. Her skin was warm and shivering slightly. My hands ran up against the fabric of her panties, creeping deeper. I looked into her eyes, imploring her for how she wanted me to touch her. She bit her lip and nodded at me, her breathing taking on a deeper, more ragged pace. With that, I slipped my fingertips beneath the elastic of her underwear, seeking the familiar warmth of her sex.\n\nMy fingers crept through a thick forest of bush before I found her moist, warm core. Nica moaned as my fingertips touched her sensitive lips. For how nervous she was, she was already quite moist and very hot. She eagerly ground her hips against me, urging my fingers onward.\n\nI started slowly, exploring her slit and playing it gentle around her clit. Nica groaned, in frustration, in determination, wordlessly pushing me for more while I decided to take my time. I continued to softly massage her breasts through her shirt, kissing her deeply while I fingered her. I could definitely sense some hesitation, maybe even some fear as we did this, but it melted away by the moment as she got into it. I had some sense before that she was maybe trying to talk herself into this, but now she was getting more and more into it.\n\n\"Was this what you wanted?\" I asked, pressing against her more firmly, gently placing her clit between two of my fingers and applying pressure.\n\nNica purred with ragged breath, \"Whatever you do, please don't stop!\"\n\n\"I won't. Not until you want me to,\" I said.\n\n\"Thank you,\" she said, kissing me needily. \"Thank you, thank youthankyouthankyou!\"\n\nShe'd started grinding against me more urgently, but I was shocked by the suddenness of her orgasm. It was strong, jolting through her body in a wave. I held her close to me as she went through it, continuing to finger her clit as she rocked, moaned and shuddered. A warm gush of liquid hit my hand, only urging me on to keep going.\n\nSoon she slowed, pressing her hands against mine to urge me to slow down. \"Okay, okay, thank you, wow, okay, thank you...\"\n\nWhen I stopped, pulling my hand from her pants, she kissed me passionately. Turning around to straddle my hips, grinding both of our clothed crotches against each other.\n\nBreaking our kiss, she said, \"That was something I've needed... for a time, apparently.\"\n\n\"What you were looking for?\" I asked.\n\n\"The beginning, but hardly the end,\" she replied. She tugged at the bottom of my shirt, pulling it over my head with my help. Though my bare chest was hardly the most impressive at school, you wouldn't know it for the way Nica hungrily leaned in and began kissing it, gently sucking and nibbling at one of my nipples. I hissed at the pleasurable sensation before pulling her up to kiss her again.\n\nI realized that I still had a couple fingers covered in her juices and pulled them up to my lips, sucking her intoxicating, sweet and savory juices.\n\n\"You taste good,\" I said.\n\n\"I do?\" she asked, leaning over to take a lick herself. \"So I do.\"\n\nWe both licked and sucked my fingers clean, then leaned into each other and began to make out with greater intensity.\n\n\"I'd like to get a taste from the source,\" I said between kisses.\n\n\"Soon. You're in no rush, are you?\" Nica asked.\n\n\"No,\" I replied, pulling her in closer for a kiss.\n\n\"Neither am I,\" she said, planting a quick kiss on my neck. \"But I do believe both of us are altogether overdressed, wouldn't you agree?\"\n\n\"I would,\" I replied.\n\n\"We must fix that,\" she replied, standing up and beginning to disrobe. Pulling off her shirt, she revealed her firm, B-cup breasts to be contained by a dark red bra. With a little effort, she worked out of her shoes, socks and jeans, showing a conservative, yet comfortable-looking pair of black panties covering her pussy. Her entire body was toned, with tight abs. For a small girl, she definitely worked out, yet still had a distinct femininity to her that nearly dropped my jaw.\n\n\"You're beautiful,\" I said, pulling off my own shoes and socks with less grace.\n\n\"Thank you,\" she said, turning around to give me a view of her firm butt. \"My ass could be rounder, but I believe it still looks good. What do you think? Oh, wait, no need to answer; I believe I know what you think.\"\n\nI'd already stripped down to my underwear, and my erection was very clear underneath it. Almost nervously, she climbed back up onto the couch and knelt next to me, running her hand over my straining length. I groaned at her touch, even if we were still yet to be skin to skin.\n\n\"Rumors of your size have not been greatly exaggerated, I see,\" Nica said, a slight smile on her lips and a tremble to her voice.\n\n\"Is that a good thing?\" I asked.\n\nShe cocked her head from side to side. \"We'll see. It... shall be an adventure, at least, finding out.\"\n\nNica swung her leg over my lap, straddling me again and grinding our groins against each other. It was a tantalizing tease, especially with only the thin fabrics of our underwear rubbing against one another. It would have been so easy to just flip her over onto the couch and tear at our clothes, and while the thought flashed before my eyes as tempting, it wasn't what we were doing today. This was something different, something more intimate, and the closeness of it was all the more erotic for it.\n\nKissing me again, Nica leaned against me. The skin against skin contact thrilled me, but not nearly as much as what she said next. \"Tell me... what would you like to do most of all now?\"\n\n\"I... I want to touch you...\" I said, tentatively running my fingertips up her ass, then her lower back. She trembled at my touch, but smiled.\n\n\"I don't believe that is all,\" she said, her voice husky with need.\n\nShe was right. I said, \"I'd like to see your breasts, because I want to see those nipples I felt. I want to see them, and I'd like to suck on them, because I've a sneaking suspicion they're very sensitive.\"\n\n\"You suspect well,\" she said, reaching behind and unclasping her bra. Her breasts, now completely bare to me, were small but firm, with thick, dark nipples that begged to be sucked on. Biting her lip, Nica leaned over me, presenting one for my lips.\n\nEagerly, I leaned in and took her nipple into my mouth. I suckled at it, licking and nibbling it gently in time with her coos and groans before moving on to give the other the same worshipful treatment.\n\n\"Oh yes, oh yes, that is very nice, feels so very good...\" Nica purred, grinding herself against my cock harder while she melted into me. She reached down, pulling at the waistband of my underwear. I arched my back enough to help her pull it down. With her on top, it was an awkward experience, but with our combined efforts she was able to pull them down enough for me to wriggle and kick them off, leaving me naked beneath her.\n\n\"Impressive. Truly impressive,\" Nica said, looking down at my immense girth as she kept grinding on me. I could have taken over here, but between her efforts and how much she seemed to enjoy my sucking on her nipples, I kept letting her guide this. I switched between her nipples as she ground against my cock, adding a little more suction, a little more teeth, an extra swirl of my tongue, playing with the hardening nub until she began to quiver at my efforts.\n\nReaching down between her legs, Nica pulled the fabric of her panties to the side, allowing me to feel the warm moistness of her lips traveling up and down the underside of my cock, making me groan.\n\n\"It's all so simple, isn't it?\" Nica taunted, smiling through her shudders as she reached one hand between her legs to play with her clit. \"As a species, we've the greatest demonstrated higher reasoning of any animal on Earth. While we choose to demonstrate this only infrequently, it is our capacity that has separated man from beast. Put us together though, breathing heavily and skin to skin, sex to sex... and it feels like the only thing that matter is our mutual pleasure, doesn't it?\"\n\nI refused to take my lips from her breast, but she seemed to get the meaning of my grunt well enough. Though I was looking forward to giving into my own pleasure, at the rate she was going I wanted to have a little more fun first. I dropped a hand between her legs, pressing my thumb into her clit and rubbing it in tight, small circles as she moaned and ground harder against me.\n\n\"Oh yes, oh yes, thank you, yesyesyes,\" she purred, rocking against me harder and harder. She was getting close, and though the intense eroticism of the situation was getting me there as well, I wasn't going to do anything about that until I got her off again.\n\nI didn't have to wait long for this. As most of her nervousness melted away, Nica ground against me harder and harder, the juices of her swollen pussy lips coating my cock and helping her glide against me. She was taking on that shuddering, hopeful tenseness again that I only meant to help her with as I helped her finger herself to another powerful cum.\n\n\"Yesyesyes, oh fuck, oh shit, oh fuck, oh shit... MERDE!\" she cried out, bucking as another powerful orgasm took her. She shuddered and shook, crying out in release as the pleasure coursed through her body. I held her close to me, first making sure she wasn't going to fall off the couch, then because I wanted to have her against me.\n\nMy mouth no longer occupied by her nipples, she kissed me, first slowly, then with an almost frantic intensity, a machine gun blast of kisses that had her smiling excitedly.\n\n\"Thank you!\" she said, kissing me. \"Thank you, and thank you!\"\n\n\"You're welcome,\" I said, thumbing her nipples playfully. Nica groaned at the contact. I said, \"These really were sensitive.\"\n\n\"I have had orgasms before only from stimulation of my nipples,\" Nica admitted. \"They are rare, but tr\u00e9s intense.\"\n\n\"I'd like to see that sometime,\" I said.\n\nIt was hard to tell if she was blushing under the red light, but the way she smiled and straightened her back, she might have been. \"With a mouth like yours, I think you might.\"\n\n\"Don't sell your own mouth short,\" I said, pulling her in for a kiss. \"I might be a little obsessed with those lips.\"\n\nTimidly, she smiled. \"Would you... like to see what I can do with my lips?\"\n\n\"Only if you want to,\" I said, kissing her again. She pulled me close, kissing me with greater intensity.\n\n\"I do,\" she said more firmly. \"God how I do.\"\n\nAfter one final, lingering kiss, Nica stood up over me and got off of the couch. She knelt between my legs and looked at my cock with great awe.\n\n\"I saw it, I felt it, I heard about it, and yet still none of that does this beast justice,\" she said, wrapping one of her dainty, strong hands around the root of my cock. I hissed at her touch, especially as she began to use our mutual wetness to lube me in a decent, if inexpert, handjob.\n\n\"I do not know how it will fit...\" Nica said with a low voice, saying what might as well have been words she meant for her own ears. Looking up at me, she then said, \"And yet, I imagine you hear this much?\"\n\n\"I do,\" I replied.\n\n\"And it fits all of the others so well?\" she asked.\n\n\"Some better than others, but more often than not,\" I said.\n\n\"Well, I am more determined than most of those girls I imagine, so, I think I will do this,\" Nica said, licking her lips and bringing her mouth to within a couple inches of my cockhead. I groaned when I felt her breath against me, arching my hips up needily, wanting release.\n\n\"It seems I have gotten you all hot and bothered, huh?\" she said proudly, still slowly jacking my cock, her mouth close enough that she could kiss it if she wanted to. She didn't, though, still jacking me slowly as she smiled up at me.\n\n\"I think that's fairly obvious, isn't it?\" I asked.\n\n\"It is, but I am suddenly remembering how fun it can be to tease in controlled circumstances,\" Nica said, placing a gently kiss on the underside of my shaft. I groaned with want, only making her smile more.\n\n\"Are your needs this simple?\" she teased.\n\n\"Not always. Now...\" I said.\n\nNica nodded. \"I understand. You've taken care of me, so I shall take care of you. It has just been a while, though, and never with a cock this large; please forgive me if I am not as skilled as the other girls you know.\"",
        "With that, Nica stretched her beautiful lips around the head of my cock. It was clearly larger than even she'd expected from this close, but she was determined, working about half of my length into her mouth and to the back of her throat. She didn't try to deepthroat me as so many other girls had, but what she lacked in that she more than made up for in enthusiasm.\n\nShe bobbed up and down on my cock slowly, but gained speed and confidence with every motion. I looked down into her eyes as she stared back up at me, captivated by her beauty and powerless against the pleasure she brought to me. I'd thought sliding up against her moist slit was amazing, but it was nothing compared to what those lips felt like wrapped around me.\n\n\"So good... feels so good...\" I murmured, running a hand through her hair. I didn't guide her, didn't force her in any way, but it felt a special form of close to her to touch her like this as she fellated me. Nica Dubois may have had her hang-ups and issues that she wanted to get past when it came to sex, but I was greatly appreciating that she wanted to explore these with me.\n\nIt wasn't, however, something I felt was meant to last terribly long. With the time spent getting her off twice already, I was quite hard, and her enthusiastic blowjob was getting me there fast.\n\nIt took monumental effort to say anything when I looked down at this gorgeous, nearly naked girl with my large cock stretching her mouth to the max, but I knew that I had to warn her, \"This is really nice... but if you keep doing that, I'm gonna cum.\"\n\nNica took her mouth off of my cock and took a good breath of air, smiling up at me and kissing the head again. \"That's the idea.\"\n\n\"You're sure?\" I asked.\n\n\"I wouldn't say this if I wasn't sure. Just tell me when you're going to be cumming, okay?\" she asked.\n\n\"Okay,\" I replied, taken by her beauty as she once again sucked my cock back into her mouth. It was a wet, progressively messier blowjob as she blew me even harder, her head bouncing up and down on my cock, one hand jacking what her mouth couldn't reach while the other played with my balls and occasionally stroked my ass.\n\nAs she kept up the pace, she looked up at me and curiously placed her free middle finger between my ass cheeks on the edge of the couch, pressing inside and rubbing up against my hole. It was a kind of playful I wasn't expecting from her, but one I'd dabbled with in the past. She pressed up against me, eyes inquisitive, and since she could've gotten me to do pretty much anything at this point, I simply nodded as she pressed inside of me.\n\nThe intrusion was intense, but combined with her blowjob felt absolutely amazing. All of my nerves felt like they'd been brought to life with pleasure, and I couldn't hold it back anymore.\n\n\"I'm cumming... I'm cumming!\" I warned.\n\nIf I thought this was going to slow Nica down, I was wrong. She kept blowing me and fingering my ass, pushing my pleasure over the edge until I couldn't help cumming in her mouth. It felt like a huge load, but she knew what she was doing, sucking up every drop, slowly milking my cock as every thick strand of seed fired down her throat. It was an unbelievably hot orgasm, and as I started to come down from it, I felt like I could've fallen asleep right there.\n\nFinally spent, I collapsed back against the couch. Nica pulled her finger from my ass and her mouth from my cock, kissing the head one last time before standing back up to look down at me. A few stray dribbles of cum fell down from her lips, but she wiped them up with the back of her hand and licked it down, luxuriating in my load as she swallowed the last drops.\n\n\"You taste good. Not many boys do. Thank you,\" Nica said, her voice exuding confidence but perhaps slightly bashful at the same time.\n\nThere was so much I wanted to say for her and what she'd done for me, but with my deflated cock seeming to lead the conversation, all I could say was, \"Wow.\"\n\n\"Oh? Wow? I am that good, huh?\" Nica said playfully.\n\n\"That's an understatement,\" I replied. \"How'd you know about... that thing with the finger, that it'd work with me?\"\n\n\"I'd say I had a gut feeling, but it would be a lie,\" she said, licking her lips and taking off her panties and presenting herself completely naked before me. She had a nice, thick bush, and though she'd looked a little nervous at first, she seemed pleased by my response, sitting down beside me.\n\nNica continued, \"Josie told me of your open-mindedness, and I thought it might be fun to confirm. Not many a man is up for this, I'm told, but would be better off if they were, I'd say.\"\n\n\"Well, it was fun, so, thanks,\" I said, smiling and leaning in for a kiss. We kissed slowly, lingering for a while on the contact and each other. I barely even minded the faint taste of my cum on her lips, as it felt intoxicating to be this close to Nica Dubois. At first glance, I wouldn't have ever assumed I'd feel this way about her, but she brought a passion and intensity that I felt a desire to discover more of.\n\n\"You're welcome,\" she said, breaking our makeout session enough to speak, then going on to kissing my neck.\n\n\"Fuck, you're beautiful,\" I said, unable to keep my hands from her. I ran a couple fingers between her legs, enjoying her hot wetness and the moans it pulled from her.\n\n\"You really think so? With all these beauties about school who've had you by now, you think I'm beautiful?\" Nica asked.\n\n\"Of course,\" I said.\n\nShe smiled at me timidly. \"Thank you.\"\n\n\"For what?\"\n\n\"It has been some time since I've heard that said believably. I have heard words of praise from many a boy who wanted things from me; from the rest, I'm 'cute' or 'sweet' or 'just one of the guys, but pretty'. When the sentiments are genuine, they are appreciated, but there is still a fine line between those and being desirable to the right sort of person. It is... refreshing, and welcome, to see your true enthusiasm,\" she said, her hand finding my half-hard cock and gently stroking it.\n\nI hissed. \"If you ever need a reminder...\"\n\n\"Thank you,\" she replied, nervously biting her lip. \"But... that is not what I want now.\"\n\n\"What do you want now?\" I asked.\n\nNica took several nervous, quick breaths, pulling herself together and trembling slightly.\n\n\"Are you okay?\" I asked.\n\n\"I am fine,\" she said. \"This is what I want, it is just difficult to say, after so long...\"\n\n\"Take your time,\" I said.\n\n\"I don't want to take my time!\" Nica snapped. \"I want this to be easy. I want this to be something I can control, but when you've had control taken from you it can feel so hard to take back. I want... ah, merdefuckshitdamnmerde, I want not to take this out on you. I am sorry.\"\n\n\"It's okay,\" I said, stroking her hair and holding her close. \"It's okay.\"\n\nWe stayed quiet like this for a few moments, holding each other, occasionally stroking the other's sex, waiting, being together. Nica had something she wanted to say, and I wanted to give her every opportunity to say it, and until then I was going to be here for her.\n\nGently, she pulled me close and kissed me. She rolled on top of me, straddling my thigh and pressing her breasts against my chest, leaning in to whisper in my ear. \"What I want is you inside of me. I want you to ruin me for those who've tried to ruin me in the past, and I want to remember what it is like to get lost in the pleasures of sex again with someone as considerate as you. Would you help me with that?\"\n\nI kissed her back, squeezing her butt approvingly. \"Gladly.\"\n\n\"Thank you,\" she said, smiling nervously. \"I must also admit, I am curious how a cock that great and perfect would feel.\"\n\nI smiled in return. \"I know a few girls who've had a lot of fun with it.\"\n\n\"A few?\" Nica returned, cocking a skeptical eyebrow.\n\n\"I was trying not to brag,\" I said.\n\n\"You've failed, but this is okay, I do not mind some failures. To fail is human, etcetera, etcetera, you know how it is,\" she replied.\n\n\"One slight problem,\" I said, looking down at my half-deflated cock.\n\n\"Ah, yes, that is a problem. I could suck you some more, if that would help?\" Nica proposed.\n\nWhile tempting, I wanted to up the ante, \"Only if I can taste you at the same time.\"\n\n\"Ah!\" Nica exclaimed gleefully. \"A 69! Magnifique! I can see why Josie is so smitten with you; you have some truly good taste!\"\n\n\"You said that earlier,\" I said.\n\nNica rolled her eyes at me. \"You've also a cheeky tongue.\"\n\n\"You don't know the half of it, yet,\" I said, rotating until I was lying down on the couch with my head against her thigh.\n\nNica didn't need much motivation to climb on top of me, dropping her soaking wet pussy onto my face before taking my cock back into her wonderful mouth. From this angle, she was able to take a little more of me in, gagging slightly but giving it her best effort. I returned as best I could, wrapping my arms around her waist and pulling her down onto me, bringing my mouth up to her dripping sex and diving in.\n\nNica tasted good, and her moans of pleasure around my cock only drove me to dive in further, licking and sucking at her sweet lips. This was one of those things I always loved about 69ing with a girl, not just the give and take but the friendly competition it seems to encourage. Though she may have only been trying to get me hard, I knew Nica was trying to make me cum again every bit as hard as I was trying to get her off.\n\nThe only problem for her, though, was that I had a significant head start on her, at least in the \"not cumming\" department. She'd gotten me hard, sure, but it was going to be a while before I'd be able to muster up another good cum. In the meantime, I had full access to her pussy, licking and teasing, working her sex with my tongue and fingers, doing everything I could to bring her over the top again. She was fighting me trying to prolong this, but not terribly hard.\n\nAnd then she stopped.\n\nNica pulled her mouth off my cock when I had her on the brink of another good cum, turned back to me and said, \"I think we have pushed this off long enough.\"\n\n\"Pushed what off?\" I asked, punctuating with a nice lick at her clit.\n\nShe groaned, then climbed off of me. \"Sit up.\"\n\nI did as she said, my cock now standing proudly up as I leaned back against the couch. Nica stood in front of me, pacing back and forth slightly as she looked down at me hungrily. No, there was more than hunger, there was a sense of trepidation to her as well as she looked down upon me and my cock.\n\n\"I have had fun having fun with you, and I wish to have more, but I want to do more. I need to do more,\" she said, looking down at me. \"I'm kind of terrified of that thing, but I'm also wanting to be past this fear, and since I might be hornier now than I can ever remember, I want now to be the time. I want to have some good sex.\"\n\nI looked up at her in her nakedness (both emotional and literal), and smiled as warmly as I could. We'd been having so much fun pleasuring each other that I'd nearly forgotten about what we were doing here, but I was every bit as committed to making this a positive experience now as I was then.\n\n\"I'm pretty good, but I'm happy to take this at whatever pace you want,\" I said.\n\n\"Thank you,\" she said, stepping forward, kneeling on the couch and straddling my hips again. As with earlier, she ran her soaking wet pussy over my cock, but without a stitch of clothes between us there was no illusion about how this was going to end. To help ease things along, I reached up and cupped her breasts, thumbing her nipples and trying to keep her nice and motivated.\n\nThe way she ground against my cock, spreading our mutual lubrication handily, told me this was a good idea.\n\nNica reached between her legs and placed the head of my cock at her entrance. She bit her lip, looking down, then into my eyes. \"Ryan?\"\n\n\"Yes?\" I asked.\n\n\"Would you please... please kiss me while I settle down?\" she asked.\n\n\"Gladly,\" I said, leaning up and planting my lips on hers. Nica kissed me as if her life depended on it, urgently, passionately, as she steeled herself for what she wanted to do next. Closing her eyes tightly, she forced herself down on me, burying the head of my cock inside her pussy.\n\nNica cried out, or at least wanted to, as we kept kissing our way through the penetration. She was tight, so very tight, but so good, hot and wet and welcoming. I worried for her, hoping that all was okay, but desperately wanting more with her.\n\nWe broke our kiss, and I whispered, \"Are you okay?\"\n\n\"I'm fine,\" she said, lowering herself a little more. \"I need this... I need to keep going. Just be here with me.\"\n\n\"I'm here,\" I said. \"Just keep going. You've got this.\"\n\n\"Thanks,\" Nica said, smiling at me weakly as she took another inch of my cock. She was closing in on halfway. \"Fuck, you're huge.\"\n\n\"I know,\" I said. Normally this was something I'd say with a sense of pride, but now there was only concern for her.\n\nStill, Nica bit her lip and continued her slow descent, taking every inch with slow deliberation. My cock was in heaven, but the rest of me wanted to make sure she was too. I kissed her, stroked her, massaged her sensitive breasts, and as she conquered more and more of my cock. This strategy seemed to work, as though there was some definite discomfort on her end, as she sensed she was getting further down she seemed to get more into the act.\n\nHer eyes were screwed shut tightly when I felt her ass settle down against my thighs and balls, so I felt congratulations were in order. I kissed her and said, \"You made it.\"\n\n\"I made it?\" she asked, opening her eyes and looking down at our conjoined sexes. \"Holy hell. Fuck, I *did* make it!\"\n\nNica's voice had taken on a tone that was close to a cheer, and I pulled her in close to help her enjoy that celebration. With my cock buried to the hilt deep inside of her, we made out with joy in our hearts and smiles on our faces. I couldn't say if I was the ideal sexual encounter that she was looking for when we first began our strange union, but I was happy to help make her happy.\n\nEspecially once she started moving, slowly riding my cock. It clearly took some getting used to with a cock as large as mine, but biting her lip in determination, she began to ride me on the dark room's couch.\n\n\"Thank you,\" Nica groaned. \"Thank you, thank you, thank you for helping me with this.\"\n\n\"It really has helped?\" I grunted, enjoying the feel of her dropping back into my lap.\n\n\"Some, yes. I cannot say if you have fixed me for guys in general, yet, but being able to share sex with someone who is not unkind about it... yes, that has helped,\" she said, riding me a little more eagerly.\n\n\"It's a start,\" I said, sliding my hands down to her hips to help her ride me.\n\n\"It's a start,\" she agreed, leaning over to kiss me. She was picking up the pace, now actively riding me, truly taking over this unexpected fuck. Watching a woman as beautiful as her ride me, her eyes closed in magnificent ecstasy, feeling the way her pussy squeezed me so perfectly with every bounce, I was in heaven. Knowing that I was helping her get past something she wanted to get past, well, that just made that heaven even sweeter.\n\nWhen she first started riding me, she did so timidly, but now Nica was completely losing herself to sex. She was moaning in pleasure, running her hands over her body, riding me with a confidence that made her only sexier.\n\n\"God I've needed this; I've needed this for so long... I was scared... I'm still a little scared... but this I can do. I can do this. I can conquer this. I don't have to let the shit of the past win. Fuck this is amazing. Thank you, thank you, thank you,\" she moaned.\n\nI reached down to thumb her clit as she fucked me. Her eyes, once closed, shot open, looking down at me with surprise and hunger.\n\n\"Like that... like that... please make me cum with your cock inside of me... make me cum, I'm so close, please, please, please, like that, like that... OH FUCK!\" Nica exclaimed as another orgasm took her. This was the strongest one yet, making it look as if she'd touched the world's most pleasurable live wire as she shook and fell against me. Her pussy squeezed me so hard I could've sworn I was going to shoot off then and there, but I held back, just for now.\n\nHer breathing still ragged and her body relaxing after the powerful cum, Nica kissed my neck and chest, giggling softly. \"Oh, thank you, Ryan. That was needed.\"\n\n\"I think you might've mentioned that once or twice,\" I said, kissing the top of her head. She looked up and kissed me back.\n\n\"I think you are still in need of something yourself, eh?\" Nica asked, gently squeezing my cock with her pussy.\n\nI shivered at this. \"I wouldn't mind...\"\n\n\"And I would like to finish what I have started as well,\" she said, squeezing me again. \"Would you like me like this? On all fours? Or something more classical?\"\n\nI smiled wolfishly, wrapping an arm around her so I could spin her to the side, dropping her onto her back on the couch without ever leaving her pussy. She squealed with delight at the move, while I was just glad that I was able to pull it off without hurting either of us.\n\n\"I have been called a sucker for the classics before,\" I said, looking down at Nica as I slowly began to thrust in and out of her.\n\nShe giggled. \"You can be a sucker for whatever you want if you keep spoiling me like this.\"\n\n\"Thanks,\" I replied, kissing her as I began to thrust in and out of her tight pussy. Nica was getting more vocal and confident by the moment, and being beneath me physically only seemed to spur her on even more.\n\n\"Fuck me, Ryan, fuck my tight little pussy. You like it, huh? So tight and sweet? Having such fun with me? Fuck me harder, keep it like that, yes, keep fucking me, push yourself, make yourself cum, fill me with your hot fucking cum,\" she said.\n\nHer slight accent was positively intoxicating, and the unexpected dirty talk only pushed me further to the edge. At her insistence, I fucked her harder, making out with her feverishly between her encouragements. I was building up a pretty good load, and though it wasn't going to be anything like my last one, I wanted to make it a good one for her.\n\n\"Keep going... keep doing it... give me what I want...\" she moaned.\n\n\"So good,\" I grunted.\n\n\"I know, I know, keep fucking me, do it, keep fucking me, cum for me, cum inside of me...\"\n\n\"You sure...?\"\n\n\"I am... please, keep fucking me, harder, fuck me harder, make me feel it, fuck me harder and cum for me, cum for me please...\"\n\n\"So close...\"\n\n\"Do it, Ryan...\"\n\n\"I'm-\"\n\n\"Yes!\"\n\n\"FUCK, I'M CUMMING!\" I shouted, thrusting into her hard and deep, feeling my body seemingly draining every bit of energy and stamina I had into her. I came hard, seemingly filling her up as shot after shot of my cum filled me with a feeling of one of the greatest pleasures I knew. Nica cooed and groaned, squeezing me with her pussy and seemingly encouraging every last drop to fill her.\n\nCompletely spent, I pulled out of her and sat up on the couch. Nica lay down next to me, her legs still slightly spread, my cum leaking from her obscenely stretched pussy lips. She looked completely satisfied, if almost a little embarrassed to be so explicitly on display in front of me.\n\n\"Fuck, you're beautiful,\" I repeated, smiling down at her. \"Thanks for... everything, that was... wow.\"\n\n\"Thank you,\" Nica said, her hands drifting down to her pussy and feeling everything that had occurred. \"Wow, you really did a number on me.\"\n\n\"Sorry,\" I said.\n\n\"Don't be. I knew what mountain I was climbing,\" she replied, shivering at her own touch as she rubbed my cum into her pussy.\n\n\"This couch is gonna be a mess,\" I said.\n\n\"It wouldn't be the first time. You would know,\" Nica replied.\n\n\"I would,\" I admitted. \"How... how are you?\"\n\n\"Better,\" Nica said, sighing. \"I wish I would wave a magic wand and say good sex with a nice boy with a big cock fixes all, but nothing is that simple in life, is it?\"",
        "\"No. I wish it were, but nothing's ever that simple,\" I replied.\n\nCarefully, Nica sat up and curled up beside me. I put an arm around her shoulders and pulled her in close.\n\n\"No, it isn't, but I am still better. Healing like this is a process, and I am happy to have taken those first few steps. Thanks for being so amenable on those,\" she said, looking up at me and kissing me on the cheek.\n\nConsidering everything she'd done to my cock, \"amenable\" seemed like a vast understatement.\n\n\"If you need me to be amenable again...\" I trailed off.\n\n\"I know where you are,\" Nica said, kissing me. \"And I would like to hold you to that. Until then, perhaps we should clean up and dress before janitorial comes around and finds us.\"\n\nI laughed. \"Yeah, that's probably for the best.\"\n\nLooking down at her pretty, satisfied face, I felt a swell of something I couldn't put an easy word to for Nica. There was something about her that was definitely special, and I hoped to discover more of that in the future.\n\nUntil then, I leaned in and placed one last kiss on those luscious lips of hers. We should have been moving, but one last makeout session for the road would not be the end of the world either.\n\n***\n\nI rode my bike home feeling happy, and completely satisfied. What had been a busy afternoon had become a completely pleasurable one, and getting to spend the latter portion with the lovely Nica Dubois was only icing on the cake. Now I was just going to kick back, relax, and enjoy what was left of my Friday.\n\nA few houses away from my place, my phone buzzed.\n\nNica: I think you forgot something\n\nNica: A \"memory\" to remember me by?\n\nNica: Since I'm told you're so forgetful\n\nThe attached picture was of Nica in the dark room, naked save for her panties, her beautiful smile and perky breasts a welcome image burned into my memory. I hadn't asked her for a picture given the sensitive nature of our coupling, but this was going to be a most welcome memory. I just hoped we'd get to make some more soon.\n\nWalking my bike home, I was so distracted by the picture that I missed the car parked out front, or the girl sitting on the front porch until she called for me.\n\n\"Hey, Ryan!\"\n\nI looked up to see Brooke huddling on the porch in a warm jacket and pants, looking very cute and a little nervous.\n\n\"Hey, Brooke,\" I replied, walking my bike over to her. \"What're you doing here? I thought you were with Peter and Sasha?\"\n\n\"I was...\" Brooke said. \"But then I totally got thinkin', and when I get thinkin' I tend to, like, do something about that thinkin'. So, I did. They were totally bummed when I left, but I had to because I knew that this was something I needed to do before I lost all my nerve to do it.\"\n\n\"What?\" I asked.\n\nBrooke took in a deep breath. \"I broke up with my boyfriend.\"\n\n\"You... what?\" I asked. Brooke had mentioned having a boyfriend before Christmas, but she hadn't really talked much about him.\n\n\"He's such a sweet guy, and he was, like, totally cool with all my slutting around which I really appreciated, but when I realized that I just really liked him, and I was totally in love with another guy, I realized that wasn't fair and that he should have a girl who would give him all the attention he needs, I did what I thought I had to do, so...\"\n\n\"Fuck, I'm sorry,\" I said, sitting down beside her and wrapping an arm around her shoulders.\n\n\"It's... it's okay,\" she said, sniffling a little. \"But... you know you're the guy I'm in love with, right?\"\n\n\"Yeah,\" I replied, rubbing her hair.\n\n\"And you're in love with me too, or did I read all that wrong?\" Brooke asked.\n\nWell, this was fucking hard to say. \"No, you didn't.\"\n\n\"And you're still in love with Josie too, aren't you?\" Brooke asked.\n\n\"Yeah. Yeah, I am,\" I acknowledged without hesitation.\n\n\"I can see why; she's really cool, and smart, and nice. Hot, too,\" Brooke admitted.\n\n\"So are you,\" I said. \"That's what makes all of this so... so fucking difficult.\"\n\n\"I'm sorry,\" Brooke said.\n\n\"Don't be,\" I replied. I wanted this to be simpler. I wanted it to be easy to turn away from Brooke because I loved Josie so much, but it was difficult when I loved Brooke too. I didn't know what I was going to do about all of this, and with Josie so far away and no idea when she was going to be coming back...\n\n\"Fuck, love is complicated sometimes,\" Brooke bemoaned.\n\n\"Tell me about it,\" I sighed. \"Fucking tell me about it.\"\n\nShe leaned her head against me. \"So, what're we gonna do about it?\"\n\n\"I dunno,\" I said. \"I guess we'll just have to wait and see.\"\n\n***\n\n(Author's Note 2: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews or shoot me some feedback, as they really keep me going (and please vote on any earlier chapters you enjoyed if you haven't already!). Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!)"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        69,
        "anal",
        "anal play",
        "big cock",
        "creampie",
        "high school",
        "library",
        "oral",
        "slut"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/senior-year-memories-ch-29"
}