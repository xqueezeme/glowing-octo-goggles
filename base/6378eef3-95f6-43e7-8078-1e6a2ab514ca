{
    "title": "The Twelve Vitali Ch. 14",
    "pages": [
        "Authors note: Hello everyone. Happy Holidays! Thank you once again to Paul who continues to be my second set of eyes. I will see you all again after my vacation for more of this story. Whatever you plan to do over the holidays, make sure you enjoy it! ~ellie. \n\n*****\n\n\"Todays the big day, huh?\" Matteo asked, taking the cup she offered him.\n\n\"Yeah,\" Cat sighed. \"I had no idea it would take so long to add the few pieces I had at home together with the rest of the sketches and portrait. Roz seemed to change her mind all the time,\" She sat on the edge of the bed and smiled crookedly at Matteo.\n\n\"You have nothing to do there today, right?\" he asked. \"You promised me your full attention today, all day, by my side. I think I've been pretty good about sharing you this week.\" he had been at the gallery with her until late last night doing the final lighting checks and run through for the opening of the small exhibition, which would include the unveiling of the Donati portrait.\n\n\"Sharing? I think I've been pretty good about your demands this week,\" she laughed.\n\n\"Hardly,\" he rolled his eyes but picked up his vibrating phone and answered it before she could argue with him. \"Papa,\" he said, acknowledging Roberto on the other end of the call before Cat said anything she may not want him to overhear.\n\n\"Yes, I will be flying back on Monday,\" he confirmed. \"Yes, she will be coming back next week, but she wants to accept another commission from Peri before returning to Melbourne.\" He sounded grumpy about being questioned about their movements again. \"Maybe you should ask her yourself,\" he grumbled.\n\nCat knew Roberto was asking about Matteo's return to Melbourne and knew that Matteo didn't want to leave her here alone yet. Not that she would be alone, but although Matteo had said he was grateful to Pete for his tutelage in the ways of tables he wasn't as keen on their close friendship and the amount of time they spent alone together. She had other friends now, but she had to admit she enjoyed spending time with Pete as much as he seemed to enjoy her company. She easily admitted she missed the evenings they had spent together talking during the Gathering.\n\nShe stood up and took her mug back to the kitchen. She may as well shower and get ready for whatever Matteo had planned for today. She'd half expected him to come in and interrupt her shower, but when she emerged from the bathroom he was still on his phone, and she shook her head, laughing lightly as he held up a halter neck dress for her to wear.\n\n\"Is that still Roberto?\" she whispered, taking the dress from his hands.\n\nMatteo shook his head and mouthed the name, \"Ricco.\"\n\nCat pulled on the dress and lifted her arms to do up the halter on the back of her neck. She felt Mateo's hand run lightly over the bare skin of her back and curl around her ribs to stroke the side of her breast before she danced away from him with a grin. While she wasn't what anyone would call big busted, she was still big enough to feel awkward and slightly uncomfortable going without a bra. Matteo, on the other hand, seemed to favour backless dresses that lent themselves to going braless.\n\nShe grabbed a brush and began to put her hair up in a ponytail but found him beside her again, taking the band from her hand before she had a chance to put her hair up. While she understood and usually catered to his particular preferences, she found him to be more than a little overbearing this morning monitoring everything she did while still being on the phone with his brother. She went back into the bathroom to put on a light coat of make-up.\n\n\"I'll be ready in fifteen,\" Matteo murmured in her ear, his hands moving around her to stroke over the soft material covering her breasts as he kissed her neck. \"Quick shower and then we'll go for breakfast.\"\n\nCat tidied up the bed and the debris of their clothes from the night before while Matteo got ready to go out for breakfast. He looked casual in jeans and a polo shirt that was just tight enough for her to admire the gorgeous body she knew so well beneath it.\n\n\"Let's go,\" he smiled and took her hand. The sun was shining brightly, and Cat grimaced knowing it was going to be another hot day. She didn't think she would ever get used to the heat and humidity of living in Brisbane. It wasn't that they didn't have hot summer days in Melbourne, but the humidity here was something else, and she wished she had argued about putting her hair up before they left the apartment. They walked the block to the small caf\u00e9 they both enjoyed and sat at a table on the sidewalk under a vast yellow umbrella.\n\nShe knew that Melbourne was famous for its caf\u00e9 society, but she had never been part of that social scene, and she had come to love the small caf\u00e9s and restaurants that were dotted around the Southbank here as well as in the parklands themselves. She once again considered the questions Matteo wanted answers to as her eyes flicked lazily over the menu.\n\n\"Roberto is coming to the showing tonight, Josh invited him,\" Matteo said casually.\n\n\"Oh, I forgot that Aria had mentioned that,\" Cat looked at him in surprise. \"Why would Josh invite him? I thought this was more of a family night for the Donati Table?\"\n\n\"I believe he also invited Marcus Battaglia and Tomaso Farnese. I don't believe there was any ulterior motive behind the invitation,\" Mateo shrugged.\n\n\"Will Stefano come with him?\" Cat asked.\n\n\"I don't think so, but Theresa will be here,\" he smiled. \"Plus a few others,\" he looked past her into the distance, and she turned to see what he was looking at.\n\n\"David?\" Cat gasped. \"What are you doing here?\"\n\n\"My boss's boss has this strange idea that he can tell me what to do on weekends as well as work days,\" David shrugged. \"Martin's not very happy about the arrangement, yet again, but coming up here in a private jet was totally worth it.\"\n\n\"You flew my brother up here to look at paintings he's already seen half a dozen times?\" she asked Matteo with a shake of her head.\n\n\"No, I asked him to help Frank. It just so happens that Frank was on his way here today,\" Matteo shrugged innocently as Frankie and Anna joined their table for brunch.\n\n\"Don't be silly, this is your first art show. Where else would we be? Besides, I want full credit for discovering your talent,\" Frankie said, sweeping her up in an affectionate embrace and kissing both her cheeks.\n\n\"Don't be such a big head,\" Anna gently pushed her husband out of the way and embraced Cat, kissing her cheeks. \"This is a very exciting day, you should be proud of what you have created. We are proud of you.\"\n\n\"Thank you,\" Cat said, wondering why these people were here. Only a few of the works that had survived Ned's attacks and a couple she had painted between her pieces for Vanessa had been able to be shipped up to add to the sketches and portrait she had done for the Donati family. Most of her work since the attack now hung on the walls of the new corporate building in Melbourne, and one big piece hung on the wall of this couple's house. It wasn't going to be much of an art show.\n\n\"Oh, good, we're in time. Can you organise a bigger table to include us, please, Matteo?\" a woman's voice asked from behind where Cat still stood with Anna. Cat turned and saw Theresa and Ricco standing and smiling at them.\n\n\"Of course, Mama,\" Matteo said, throwing Cat an apologetic look that she didn't quite buy.\n\n\"I'm so sorry to gatecrash your brunch like this, but Roberto had a meeting with Joshua, and we were at a bit of a loose end. It's lovely to see you again, Catriona,\" she embraced the young woman.\n\n\"It's good to see you too, if a little surprising,\" she said between blowing air kisses onto both of the other woman's cheeks.\n\n\"Hi, Cat,\" Ricco stepped forward to greet her, giving her a polite hug and kissing one cheek. \"I'm sorry about this, I did suggest somewhere else.\"\n\n\"It's fine, honestly, the more, the merrier,\" she said, knowing that the sentiment sounded false, even to her own ears.\n\n\"It won't be so bad,\" he whispered. \"David's here, that's a good thing.\"\n\n\"Why are you here?\" she asked with a frown. She knew Josh had invited Roberto, and obviously Matteo had brought David and Frankie here, but she couldn't see a reason why Ricco had come.\n\n\"Matteo's been a bit slack lately when it comes to work, so I've become his personal servant and have come delivering the things he needed from Melbourne this morning,\" he said with a chuckle. \"You'd think that now that we are adults my big brother wouldn't feel the need to boss me around the way he does.\"\n\n\"You'd think being an adult you could say no to him,\" she laughed teasingly.\n\n\"I believe you told Matteo no once, and I can see how well that worked out for you,\" He teased back, enjoying the easy banter, despite the ache he felt inside when he was around her.\n\n\"I know, right! He's so bossy!\" she exclaimed. \"It's almost impossible to say no to him.\"\n\n\"Yet she does it several times a day lately,\" Matteo grumbled, taking her hand and guiding her back down to the seat beside him as their table was made bigger by dragging another small table to join theirs.\n\nIt was Ricco who ran interference for Cat, suggesting that she may want to sit beside her brother because she hadn't seen him for quite some time when Theresa tried to manoeuvre to the seat beside Cat. From that point on the lunch went well with Frankie and Anna leading the conversation with funny anecdotes about their last visit to Queensland for a holiday during the two thousand and ten floods. Cat relaxed as they ordered and ate, joining in the conversations and laughing with the small group.\n\n\"I don't think I have ever seen Matteo so relaxed,\" Theresa commented to Anna, and Cat tilted her head as she overheard the statement, hoping to hear Anna's answer.\n\n\"He seems very happy,\" Anna replied with a smile. \"Young love will do that for you, though, just look at Frankie and me,\" she laughed as she picked up her husband's hands, threading their fingers together.\n\nCat smiled. Like the Donati family, every couple she met in Matteo's family seemed to be very much in love and not afraid to show it. She turned to look at Matteo, who was deep in discussion with Ricco, and took his hand in hers under the table, making him stop his conversation and turn to smile at her.\n\n\"Everything okay?\" he asked, squeezing her hand.\n\n\"Yes,\" she smiled back. \"Thanks for bringing David up, it's great to see him, even if he's ignoring me.\" She nudged her brother in the ribs.\n\n\"Cat, I love you and all, but Frankie thinks he can get us in to see the Lions training camp,\" he hinted that he wanted to leave.\n\n\"Go, I believe we have plans for this afternoon as well, I'll see you tonight. Where are you staying?\" Cat asked, noticing that Matteo had gone back to his conversation with Ricco but hadn't let go of her hand, and his thumb stroked her knuckles gently.\n\n\"The Treasury, it's nice,\" he said enthusiastically. Cat nodded but had no clue about hotels in this city, so she just took his word for it and would ask Matteo about it later.\n\n\"I think your Zio wants to go,\" Cat whispered to Matteo, hoping she used the right term.\n\n\"What's stopping him?\" Matteo turned back to her.\n\n\"Us, I don't think they want to be rude if we aren't ready to leave as well,\" she grimaced.\n\n\"We should probably be going, we have a few places to go before the art show tonight,\" Matteo said loud enough for everyone to hear after checking his watch.\n\n\"We were hoping to get in a little footy training camp before tonight as well,\" Frankie looked slyly at his wife. \"Why don't you ladies take your credits cards for a walk this afternoon and we'll take Ricco with us.\"\n\n\"That sounds like fun. What do you think, Theresa?\" Anna enthused.\n\n\"I imagine Peri will be busy all afternoon. As will Roberto, no doubt. So, sure, why not,\" Theresa agreed. She'd hoped to spend some time getting to know Cat, but realised that wouldn't happen on this trip and she would have to wait until they returned to Melbourne.\n\n\"Sounds good to me,\" Ricco agreed. \"You two go have fun, I'll get this.\" He indicated the meal they'd just finished.\n\n\"Thanks, Mate,\" Matteo got to his feet, pulling Cat up beside him.\n\n\"Thanks, Ricco,\" Cat bent and kissed his cheek.\n\n\"That's one hell of a dress, you look beautiful,\" Ricco said before he could stop the words tumbling from his mouth, and brought his eyes up from her breasts to her face as she leaned back from the kiss.\n\n\"Thank you,\" she said awkwardly.\n\n\"I'm looking forward to tonight. Good luck, I know it's going to be great,\" Ricco said encouragingly.\n\n\"Thanks for coming, Ricco, I do appreciate it, and that you have been doing so much in Melbourne while Matteo has been up here,\" she said quietly, still feeling awkward.\n\n\"We've moved on, and we both love him,\" he indicated Matteo with a nod of his head. \"We are going to be friends, good friends, like we always were underneath the rest of it.\"\n\n\"Thank you,\" she said again. \"For everything,\" she added lamely. \"I'll see you all tonight,\" she addressed the rest of the small group and followed Matteo from the restaurant.\n\n\"I feel dreadful with your family all coming up for the show tonight; I have barely got any art on display. Ned destroyed most of the canvasses that aren't hanging in your building. All I have left are a few quick canvasses that aren't much good and some sketches I did in preparation for the Donati portrait,\" Cat worried. \"I feel like a fraud.\"\n\n\"Why are you suddenly worried?\" Matteo asked as they walked back through the open-air mall in the centre of the city. \"Did Ricco say something?\"\n\n\"No, he's been great and wants us to be friends. It's not awkward at all,\" she pulled a face at him and rolled her eyes. \"It's not just him, it's your parents and David and Frankie and Anna! They all seem to be expecting this great exhibition of art, and all I have is one decent canvass and a few half-assed sketches and paintings. I haven't had time to prepare. This wasn't my idea, it was Peri's and Roz's, and I was okay with it when I thought it was just the Donati family, but now there are so many people here, and I have nothing to show them!\" She began to feel panic about the night ahead.\n\n\"Stop!\" Matteo said, pulling her into his arms and feeling her take a shaky breath. \"Relax and try to think about it for a moment,\" he said soothingly, running his hand over the bare skin of her back. \"Which painting did Peri see and love before contacting you?\"\n\n\"The one of the football team,\" she answered. Peri had told her how much she loved that painting.\n\n\"Now if Peri wanted to borrow that for an art exhibition she was putting together, who would she have asked and what would they have said?\" he put the question to her, making her think logically.\n\n\"Frankie,\" she said uncertainly. \"He's here because she asked for the painting?\"\n\n\"She can be pretty persuasive,\" he rolled his eyes. \"Frankie was hardly going to miss your first art show once he knew about it and agreed to lend his painting to Peri. It was supposed to be a surprise, but I can see that was a mistake,\" he chuckled, holding her close.\n\n\"It's only one extra painting, but it's a big canvas,\" she said softly. \"Maybe I should go to the gallery and check on it,\" she said quickly.\n\n\"Let Peri and Roz do their thing, they have been planning this for days,\" he finally released her, feeling her calm slightly and looked into her eyes. \"They have both been doing this sort of thing for years. You have to trust that everyone wants you to have a wonderful night and bathe in your successes as an artist. Peri loves the portrait you did and wants to thank you properly with this small show,\" he continued to speak to her in a soft, soothing voice. \"She wanted it to be a surprise that Frankie let her borrow the painting.\"\n\n\"She paid me, there was no need for this show,\" Cat frowned. \"I'm not as comfortable in the spotlight as you all seem to be. I'm just trying to make a living. I think agreeing to this was the mistake, not anything Frankie or Peri has done.\" She'd come to this city to talk to Peri about the commission and start a new life away from Melbourne and Ned and Ricco, now she seemed to be caught up in a wonderful dream where she was about to make a living as an artist instead of a waitress with artistic skill.\n\n\"You look great in a spotlight. You're beautiful and talented, and you need to start believing me when I say that. Now you promised you would stay by my side all weekend and we would do what I wanted, no arguments. I've been very patient this week while you have been working so hard. Today we have plans. You'll be at the gallery in plenty of time to see what Roz and Peri have come up with,\" Matteo said, taking her hand and beginning to walk again.\n\n\"What do you mean 'what they have come up with'?\" she asked. \"Frankie only had one painting, he didn't have any of the sketches or anything for it. He couldn't have, because there are none!\"\n\n\"Cat, stop!\" Matteo said in a commanding tone. \"You need to trust me. Everything is going to go perfectly tonight. You have to let the experts do their job today. I would never let anyone do anything to upset or embarrass you. You have to know that!\"\n\n\"Your pants are vibrating, and I don't think it's because you're happy to be near me,\" she said quietly, feeling like a child who had just been chastised.\n\n\"Oh, but I am!\" he chuckled. \"Take a breath, and remember, you're supposed to be giving me all your attention today,\" he grinned and answered his phone. \"Papa, I thought you were meeting with Josh?\" Matteo answered his phone with a quizzical expression. \"We had plans for this afternoon, but if it's important...\" he said hesitantly. \"Yes, I understand,\" he said. \"Yes, both of us.\"\n\n\"Change of plans?\" Cat asked as he ended the call.\n\n\"Change of plans,\" he nodded, looking disturbed.\n\n*****\n\nMatteo held Cat's hand tightly as they walked into the large suite reserved for guests at the Donati complex. He hadn't ever stayed here himself, but he had visited the penthouse of the building owned by Dante and Josh Donati. This suite was no less large or luxurious, and he was impressed once again by the quality of work the small Donati construction firm was capable of.\n\n\"Hey,\" Ricco said, coming to his feet and approaching them as a steward let Matteo and Cat into the guest suite. He kissed Cat's cheek and bumped shoulders with Matteo in their familiar way. \"What's going on?\" he asked quietly.\n\n\"Not sure, I guess we'll find out,\" Matteo shrugged, sounding unimpressed to be summoned here on today of all days.\n\n\"I thought you were going with Frankie and David to a football thing?\" Cat frowned, worried by the mood that had come over Matteo since the phone call.\n\n\"David went with a friend of Frank's, and we came here,\" Ricco said, still using a quiet voice as if not wanting to disturb the empty-seeming suite.\n\n\"Maybe I should go if this is a family thing,\" Cat said, feeling uneasy about the situation and the mood of both the men she was standing with.\n\n\"Papa wanted you here,\" Matteo reassured her, reaching out to pull her against his side, curling his arm around her waist. \"Frank came with you?\" Matteo asked Ricco.\n\n\"Yeah, it was a bit of a rush,\" Ricco rubbed at his jaw. He had a feeling that something was not right with the world, and his concern, as always lately, went to Stefano, but he couldn't help wondering about Roberto as well recently. This time the sinking feeling he had in the pit of his stomach wasn't abating, but he didn't want to say anything to ruin his brother's or Cat's good mood by voicing those concerns. \"Did you have to cancel your plans, or can you still make them if this is over quickly?\" Ricco asked Matteo.\n\n\"Depends on why we have been summoned, I guess,\" Matteo frowned, showing his own concerns matched Ricco's.",
        "\"Hello, Catriona,\" a deep male voice said, walking into the room and interrupting the sombre conversation. \"You are looking much better than the last time I had the pleasure of meeting you.\"\n\n\"I'm sorry,\" Catriona frowned. \"I'm not sure I remember. Have we met before?\"\n\n\"My name is Paolo Vitali, Frank and I convinced the ambulance drivers to hand you over to our care on the night you were attacked,\" he said to jog her memory.\n\n\"Oh, I am so sorry for the way I acted that night, I wasn't thinking very clearly. Thank you for everything you did for me,\" she smiled and blew soft air kisses onto his cheeks as he embraced her. She looked beyond him to see Joshua Donati and another man talking quietly to Matteo and Ricco.\n\n\"This is my good friend, Marcus, he will speak to you while we talk to my nephews,\" he introduced the stranger to her. \"You know Joshua, of course,\" he smiled as the two men approached her.\n\n\"Yes, I know Josh,\" she smiled and stepped forward to kiss his cheek, \"I hope tonight goes well for the family. Have they all had a sneak peek yet?\"\n\n\"No, only D. and me have seen the portraits. Peri has been guarding it against any prying eyes,\" he chuckled. \"They are going to love it just as much as we do, you captured their personalities perfectly,\" Josh chuckled.\n\n\"I personally can't wait to see it. Dino is my brother and part of the Donati Family now,\" Marcus enthused.\n\n\"I thought you looked familiar, in a strange sort of way,\" Cat tilted her head. \"I can see the family resemblance now that you have said that.\"\n\n\"I didn't think the resemblance was that strong,\" Marcus frowned.\n\n\"Maybe because I had to study his features for some time and get to know his mannerisms when I was doing his portrait,\" she suggested, \"I can see similar traits in you.\"\n\n\"That's very flattering, considering he is my younger brother,\" Marcus chuckled. \"Come, let's sit and talk to me for a little while.\" Marcus said solicitously, and Cat realised that Matteo and the other Vitali men had already left the room.\n\n\"I'm afraid I am needed elsewhere as well, so I will see you tonight,\" Josh said with an easy smile and walked toward the door.\n\n\"I feel like something is going on, and I am the last to find out what it is,\" Cat said seriously and looked at Marcus.\n\n\"Roberto tells me that you prefer people to be honest and not beat around the bush, so I will tell you what is happening as succinctly as possible. It seems that Stefano Vitali has refused to have much needed and critical surgery until the question of his successor has been decided. He has had another episode overnight that has put him in an intensive care unit until he will agree to the surgery or become unconscious, wherein Roberto will be able to make the decisions for him,\" Marcus explained without pulling any punches.\n\n\"Oh no!\" Cat's hand flew to her chest, covering her own heart as she thought of Stefano being so stubborn about his health.\n\n\"Those two men in there are more than likely about to become the new leaders of the Vitali family. I cannot say or know which will be Chair or Oracle, but what I can say is that they both love you, which will make the decision all that much harder, or easier, depending on your feelings for them,\" Marcus considered the young woman in front of him. \"I am told that you are aware of what is required of you should you wish to remain part of their lives, so it will come as no surprise, given the circumstances, that Roberto would like you to leave with me after the art exhibition tonight to begin your trial with the Battaglia.\"\n\nCat gasped involuntarily. She hadn't had enough time to just enjoy being with Matteo in their new found relationship, let alone even entertain the thought of what it would mean for him to be named as Chair. The sudden realisation that he could be named Oracle and she would be given a choice to marry Ricco in order to remain in Matteo's life stunned her. She was lost for words, and it all felt like too much was happening too soon. Talking about the future as an abstract possibility was one thing, leaving now or tonight with this man and not having the time to talk with either Ricco or Matteo properly before she left was a scary proposition. What if she went through all of this drama and the trial only to return and find that Ricco was the Chair and had no wish to marry her. She sighed heavily and looked up, meeting Marcus's serious eyes.\n\n\"The choice, as always, is yours to make,\" Marcus said gently, seeing the shock register on her face.\n\n\"And if I refuse to go tonight? If I ask for a few days to consider what is happening?\" Cat asked.\n\n\"Roberto has asked for me to take you with me tonight, I am unsure about your options to negotiate, given Stefano's condition and demands. He gave me the impression you were aware that this would be asked of you as soon as possible because of the time constraints the family is undergoing. I'm afraid, after this morning's news, the window of time for negotiation is closing fast,\" Marcus said softly.\n\n\"Could we leave in the morning?\" She asked, trying to wrap her mind around the reality of what she had agreed to in Roberto's office days ago. Her fingers almost unconsciously stroked over the gold bracelet with the kitten clasp Matteo had given her. \"I...\" She looked up at Marcus and saw him calmly looking back without judgement. \"Does Matteo know?\"\n\n\"He and Ricco are being told about Stefano's condition now, and that they will both be expected to return to Melbourne tonight,\" Marcus nodded. \"They will be expected to step up into a more active role within their family and support each other and their siblings over the coming days and weeks. Roberto wants Matteo's attention firmly on his family knowing that you are in a safe place with us.\"\n\nThere had only ever been one other outsider sent to the Battaglia for a trial like this. It was a rarity that the men destined to rule the twelve families sought a wife outside of the confines of the laws and traditions of tables. Peri had been that one, and the final week of that trial had been a dismal failure for the Battaglia, despite having an eventual successful outcome for the Donatis'. Marcus would be this young woman's bodyguard himself if she agreed to accompany him back to the facility, but he wouldn't force her if she were unsure of her commitment to become part of the Vitali family. The pride of his family and their facility could be restored if this young woman grew to become everything they hoped she'd be, and he was determined to ensure her safety.\n\n\"But does he know I will be leaving tonight?\" She asked directly, thinking that she would be better off here supporting him. \"I won't leave him again, not without talking to him first,\" she stated, allowing no compromise in tone.\n\n\"Again?\" Marcus quirked an eyebrow.\n\n\"We haven't had the easiest of starts to our relationship, and I won't do anything to jeopardise the trust we have now. I promised I wouldn't leave again, and if I have to, for the trial, I want to talk to Matteo about it first,\" Cat stated in the same uncompromising tone. \"Matteo is my priority, not Roberto's agenda.\"\n\n\"Come with me,\" Marcus stood and led the way further back into the apartment. He tapped lightly on a closed door before opening it and ushering Cat inside.\n\n\"Marcus,\" Roberto said, frowning at the interruption and seeing Cat look around at the six men in the room.\n\n\"Roberto,\" Marcus nodded. \"Tell him why I am here,\" he instructed. \"She is not a pawn in a game and won't be used like one so easily. She needs to know Matteo wants this, not you or I, him. She won't leave him without knowing he wants her to go.\"\n\n\"Why would she be going anywhere?\" Matteo growled at his father and came to his feet, closing the distance between himself and Cat to stand at her side with a supporting hand gliding down her back in a soothing stroke.\n\n\"Marcus is here to take Cat to the Battaglia facility after the gallery show tonight to begin her trial,\" Roberto informed his sons, and saw the horrified reaction in Ricco's expression as he took in the words.\n\n\"Surely that's not necessary!\" Ricco exclaimed, coming to her defence. \"She could do the trial with us, like the girls did.\"\n\n\"It is different for an outsider who doesn't understand our laws and traditions,\" Cosimo spoke as Roberto seemed to contemplate his sons. \"The thirteenth demanded it of Joshua and Peri, and it is no different for Matteo and Cat.\"\n\n\"You don't have to do this,\" Ricco said directly to Cat.\n\n\"If I want to marry Matteo, I do,\" she said quietly. \"I know that it is expected of me, and I'm quite content to go. It's just the timing of it I questioned, and wondered why I couldn't leave in the morning rather than late tonight after the gallery. It felt strange not to be able to talk to the man I would be doing it for before I left and... well; I promised I wouldn't leave again without talking to him about what was going on first.\"\n\n\"Thank you, Marcus,\" Matteo said in a considered and calm voice, although his body language said that he was anything but calm as he stood beside Cat. She could practically feel him bristling as he listened to her. \"If you'll excuse us for a few minutes,\" he said stiffly and guided her from the room.\n\n\"I can't imagine losing you now,\" he murmured softly, pulling her into his arms and holding her tightly against his body. \"But the sooner you go, the quicker it will be over, and we can move on with our life... together. I will have a lot to deal with once Stefano has consented to the surgery, so maybe it is best right now,\" he tried to keep the concern over the unfolding events from his voice.\n\nThe older members of the family and its current sitting table had met last night to discuss the future and the fact that many of the sons of Roberto were still so young. Having come to a consensus, Jacobi had been called home, and they had come as one to speak with Matteo and Ricco today rather than wait until tomorrow. Matteo knew he didn't have the full picture yet, but he understood the significance of what was happening and dreaded what it all meant.\n\n\"I love you, Kitten,\" he murmured in her ear. \"Ricco was right, you don't have to do this, but with everything that is going on right now I am not sure how much time we would have together, and perhaps this would be the best time for you to do the trial. I trust Marcus, and if he tells me he will keep you safe and oversee your trial himself, then I believe him and hope you will trust him too.\"\n\n\"At least you'll know where I am and how to get to me if you need to this time,\" she said softly. \"I imagine they'll let us talk, it's not a prison or anything, so you can call me if it all gets too much and you need me.\"\n\n\"I'm supposed to be the one consoling you,\" he chuckled.\n\n\"I worry about leaving you when Stefano is so ill,\" she said softly. \"My mother mightn't have been the best, but it still was devastating when she got sick, she almost died a few times before the final overdose,\" Cat admitted. \"I know it's not the same, but he is your father, and I guess...\"\n\nMatteo bent his head and kissed her. He loved this woman and the way she was trying to help and comfort him, even when she must be terrified about being sent away to undergo a trial to see if she could measure up to his family's standards.\n\n\"I love you and need you, and the trial is the way to marriage for us and the happily ever after we deserve, so I'd like you to go with Marcus, the sooner, the better, and show them all what an amazing woman you are,\" he grinned. \"Do not worry about me for a moment, Ricco will kick me in the ass when I get grumpy because I miss you,\" he brushed his lips against hers. \"You can trust Marcus, he's a good man,\" Matteo reassured Cat again.\n\n\"Okay,\" she said with forced cheerfulness. \"I guess I'm going tonight then. I should probably go home and pack a bag and get ready for the gallery then. Will you be very long in there?\" she asked.\n\n\"Probably, but Knox will take you home, if that's where you want to go, or you can keep the appointment I made for you at the spa,\" he grinned at her.\n\n\"It won't be the same without you there getting a mani-pedi as well,\" she laughed.\n\n\"Whatever you want to do is fine with me, except going to the gallery early. Please wait for me before going to the gallery tonight. I'll know more about what's happening by then and can fill you in on the way,\" he reassured her. \"I'm sorry all of this was sprung on us, but it can't be helped.\"\n\n\"I'm sorry too, I should have just accepted what Marcus said instead of causing problems for you,\" she sighed.\n\n\"You did the right thing. I would have been furious if I hadn't known before you were leaving,\" Matteo admitted. \"I have to go back,\" he murmured. \"Wait for me this evening, please,\" he kissed Cat. \"I'll be home as soon as possible.\"\n\n\"Okay,\" she smiled. Call me if you need anything,\" she offered and stepped back, allowing Matteo to re-enter the room where his family waited impatiently for him.\n\n*****\n\nCat had spent the afternoon in the company of Marcus. They had gone to visit Lucia, and Cat was grateful to see her friend and be able to talk to her about what was happening in her life. So much had happened to her in the last few months and in Lucia she found a sympathetic and understanding shoulder to lean on.\n\nShe felt better informed about what to expect of her trial, and by the time she had left Lucia's house she felt comfortable with Marcus and who he was within the scheme of the Tables as the heir apparent to the Battaglia family chair.\n\nThe final touches of her make-up had barely been put in place when the door to the studio apartment opened and a concerned looking Matteo walked in. Lines seemed etched into his face making him look older as he walked purposefully toward her and scooped her into his arms.\n\n\"I miss you already, and you haven't gone yet,\" he murmured, holding her tightly. \"Give me five minutes to have a quick shower,\" he said after kissing her thoroughly and relaxing before her eyes.\n\n\"Don't rush, I don't mind being fashionably late,\" she laughed lightly. She was nervous about so many people coming to view just one portrait. Two, if she included the one Frankie brought up with him.\n\n\"In that case,\" his hands went to the zip on her dress.\n\n\"Not that late!\" she laughed, trying to swat his hand away. \"I've already done my hair and make-up, I can't shower with you!\"\n\n\"Who said anything about a shower?\" he asked as he walked her back toward the bed. He pushed the dress off her shoulders and stepped back, undoing the buttons of his shirt as he watched her step out of her dress and carefully place it over the back of the chair. He grinned as he pushed his pants down his thighs, watching her do the same with the lacey panties she wore. Unable to resist, he took her in his arms and kissed her roughly, pushing her onto the bed and raising her legs up along his torso, turning his head to kiss her stocking clad foot as his hands danced over her thighs.\n\nMatteo groaned and bent over her, doubling her body over and opening up her pussy to him before entering her and finding her as ready as he was for this. There was no finesse in his movements as he gloried in the feel and sound of the woman he loved. She was his, he knew it in every fibre of his being, and the thought of sharing her, even with his brother, filled him with dread.\n\nCat whimpered in short gasping breaths as her knees wedged into her shoulders. Matteo was pounding into her like a man possessed, and in this position she could feel every tiny part of him sliding over her G-spot, causing her mind and body to surrender completely to the sensations he gave her. She came hard, her body writhing in the awkward position as he continued to pump, clutching her tightly in his arms.\n\nIt was only a matter of minutes later when Matteo lost his battle with the milking muscles of her pussy, and he filled her with his cum, groaning loudly and pressing forward to press his lips to hers. He swallowed her whimpers for long minutes before he freed her legs and smiled down into her face.\n\n\"You are the most amazing woman I have ever met,\" he kissed her again, feeling his cock soften and slide from her. \"I will only be a few minutes in the shower, I promise, you might want to fix your make-up,\" he chuckled and stood to help her to her feet and turn her toward the mirror.\n\nWithin half an hour they were both redressed and ready to leave. Both of their phones constantly rang with people wondering where they were, and rushing from the apartment hand in hand they sped toward the gallery with Knox at the wheel. Cat was grateful that Knox had accompanied them on this trip, as Matteo's driving was beyond reckless. The crowd outside the gallery surprised Cat as they arrived, and she waited in the car until Matteo opened her door and helped her out.\n\n\"Is something else going on here tonight?\" she asked in a quiet voice. \"I thought this was just a small unveiling for the family?\"\n\n\"It's a pretty big family,\" Matteo chuckled, taking her hand and guiding her inside. \"Sorry we're late, my fault entirely,\" he said with a smirk as Peri rushed toward them.\n\n\"Well, hand her over and go and find Dante, he's been waiting for you!\" Peri said like a mother chiding a naughty boy.\n\n\"Don't try to mother me, Peri Donati,\" he laughed but kissed Cat's cheek and wished her luck as Peri led her to the front of the crowd.\n\nCat nervously followed Peri through to the gallery that had not been opened to the guests yet, which was why the crowd had gathered outside. Temporary walls protected individual galleries and, almost like a maze, it would lead the guests through to a final room where the family portrait would be unveiled later tonight once everyone had arrived.\n\n\"Matt and Ric let us borrow your artwork from their building for the weekend. Ric sent it all up yesterday, and we have to return it Monday, but it looks spectacular here,\" Peri explained as they walked through the first few small galleries.\n\n\"This gallery was all Frank, he sent us some photographs and footage from this game and let us borrow the portrait that I first saw at his house,\" she continued to narrate as she walked the stunned Cat through the small exhibit into the final gallery where her sketches lined the walls under spotlights. The final portrait sat on a sturdy easel and was shrouded in a black velvet cloth.\n\n\"It's a bit late to make changes now, but I did say you could okay everything before we let the people in, and I am, if nothing else, a woman of my word,\" she said seriously, looking around. \"Well, what do you think?\"\n\n\"It's perfect,\" Cat whispered, overwhelmed by how much work had gone into this exhibition without her knowledge. Ricco and Matteo had never even hinted that they had done this for her. Even the small painting that lived in her garage looked good with the proper framing and lighting in place. \"\"I couldn't be happier,\" she said, embracing Peri, \"Thank you so much. Where is Roz? I have to thank her too,\" Cat looked around wildly.\n\n\"I'm here,\" Roz said, stepping forward with Josh holding glasses of champagne. \"A quick toast and then we'll let them in,\" she smiled. \"To discovering an amazing artist who will hopefully let us hold more exhibitions of her future work,\" she raised her glass.\n\n\"To friends and family,\" Peri added and lifted her glass.\n\n\"To love,\" Josh grinned and added his glass.\n\n\"To second chances,\" Cat added after a moment's thought. \"Thank you for taking a chance on me and my untried talent.\"\n\n\"You can let them in,\" Peri grinned at Josh. \"Get ready to mingle, ladies,\" she said to the small group of waitresses that had appeared bearing trays of champagne and canapes.\n\nCat mingled until she found Matteo standing in a small group with Dante and Pete. The Donati family members that she had gotten to know during the gathering came up to greet her and spend time with her, and she began to relax into the evening, almost forgetting the fact that this was her exhibition as she laughed with people she called friends and nervously drank more champagne than she normally would have.",
        "\"If I could have your attention, please!\" Joshua's voice sounded over the crowd, and a silence slowly descended as people turned toward the larger gallery where he stood.\n\nRicco had been standing with Romy when the twelve Donati men had been gathered together to stand near the painting. Peri, it seemed, had marked places for them, and as Josh gave his heartfelt speech about being part of such a great family, he, too, moved toward a place within the tableau the twelve men made against the wall. He watched as Josh called Cat up to stand with Peri and unveil the portrait to the gasps of appreciation from the crowd.\n\nThe portrait was barely acknowledged by his mind as Ricco kept his eyes on Cat. She looked different, more sophisticated, maybe, in the designer gown and sassy new haircut that made her hair bounce over her shoulders in long layers, but it was more than that, she looked happy and relaxed within this crowd. The girl he had known and loved for the short time they were together was quiet and shy and would never have willingly stepped into the spotlight, and he marvelled at the changes in her.\n\nDespite the changes in her outward appearance, Ricco knew she was the same girl he knew at heart. He had spent time with her during the family dinner, and the attraction he felt for her had only grown stronger, and as she thanked him for not letting an awkwardness spring between them, all he could think of was holding her and kissing her once again. Now he knew after speaking with Roberto this afternoon that his desire might be possible in the future. It was all he could think of, and he caressed the curves of her satin dress with his eyes as she stood beside the portrait accepting the praise she so richly deserved.\n\nTearing his eyes away, he sought out his brother in the room and was startled to find him watching him in return. What their family had asked of them this afternoon was not going to be easy, but for Ricco the rewards would be well worth any heartache he endured to get there. It was a shame he couldn't say the same for Matteo, but had the situations been reversed he wasn't sure he would be as happy either. Still, Matteo was not his biggest concern, he would have to face Jacobi tomorrow with the knowledge that, while his twin's childhood dreams were in tatters, he was about to get everything he wanted if everything went to his father's plans.\n\nRicco moved toward Matteo in the crowd and stood watching Cat with him as she accepted compliments and jovial criticisms of how she had portrayed each of the twelve men. They stood in silence for a time, both uncomfortably lost in their own thoughts about the woman in the spotlight.\n\n\"I'm not sure I can do this, Ric,\" Matteo murmured, surprising his brother. \"I don't want her to leave tonight. I don't know what they will ask of her or if she will accept it. Why does it have to be now?\"\n\n\"You've been a rolling stone for the last two years, never staying in one spot long enough to form any real bond, and now you want to marry and settle down with someone who seems to accept all that goes along with marrying an asshole like you. Is it any wonder they want to lock it in?\" Ricco reasoned.\n\n\"It's too soon, we haven't had enough time to settle into our life together,\" Matteo admitted.\n\n\"You've had enough time to know that you want to spend the rest of your life with her,\" Ricco reasoned. \"Besides, isn't it better for her to know from the outset exactly what the expectations of her will be? I'm not sure you'll be able to rely on Maryanne to help her, but Mia might if Kalum passes his trial.\"\n\n\"Mia,\" Matteo let a small smile drift across his lips. He and his older sister had a unique bond, and he knew he could rely on her to befriend and help Cat when the dust settled on this plan of senior Vitali men.\n\n\"You can trust me, Matt, we can work this out. You have to know I'd never do anything to hurt you or her,\" he said, even though the idea of having Cat back in his life, and possibly his bed, was more than appealing to him. He knew he wouldn't go there if Matteo or, more importantly, Cat didn't want it. With Jacobi, he had accepted that they would be a trio, but neither he nor Maryanne had embraced the idea enough to do anything about it, and he had resigned himself to a life without the sort of love they enjoyed. He wasn't sure he could resign himself to that sort of life where Cat was concerned if, and it was still only a possibility; he and Matteo were made the leaders of the next table and ultimately the family.\n\n\"Boys, you are far too serious for this celebration,\" Frank scolded them both as he came to stand with them. \"You should be one of the first over there congratulating Catriona on the success of tonight, she will leave soon, and you will regret not spending every minute with her tonight.\"\n\nCat could see the lines return to Matteo's face throughout the night and wished there was some way to reassure him that no matter what happened over the next few weeks that she loved him and would return to him. She could see the conversation and its seriousness between Matteo and Ricco, and she knew that if, as Marcus said, they were destined to lead this family together that she would need to love them both. When it was just an abstract idea, she had thought she could let Ricco back into her life, but seeing them standing together as they were she admitted that she had never trusted Ricco or loved him the way she loved and trusted Matteo. She excused herself from the small group that had surrounded her and walked slowly toward the brothers and Frank with a wide smile.\n\n\"I can't believe you did all this for me, thank you!\" she embraced Frankie, kissing both of his cheeks. \"And you brought all the artwork up from HQ, you're amazing,\" she embraced Ricco, letting the hug linger as she kissed one of his cheeks in a soft movement compared to the air kisses she had given Frank. Then she turned to smile at Matteo. \"I know you organised it all for me, and I love you for it,\" she hugged him fiercely, lifting her head for a proper kiss in front of the people now watching the small group.\n\nMatteo took full advantage of what she was offering, holding her close and kissing her with passion, uncaring of those around them until Frankie chuckled and murmured that they should get a room.\n\n\"There isn't much I wouldn't do to make you happy,\" he said in a soft voice as the kiss broke. \"I'm glad tonight was such a success for you. You deserve it.\"\n\n\"Anyone who can make my little brother look all heroic deserves the highest of praise,\" Marcus interrupted them with a chuckle.\n\n\"From what I hear I didn't need to try very hard, he is all heroic, all the time,\" Cat laughed in return.\n\n\"Hey, D., aren't you supposed to be the hero of that family?\" Matteo called out to his friend.\n\n\"I am, but I don't mind pointing the spotlight on others now and then,\" he shrugged. \"If they forget I just limp for a bit and the status is returned,\" he winked and limped off toward Peri and Josh.\n\n\"Matteo, I was wondering if we could have a quick chat,\" Marcus said seriously.\n\n\"As long as it's quick,\" Matteo said equally seriously. \"We can use D.'s office, he won't mind.\" He bent his head to kiss Cat again, \"I'll be back in a few minutes.\"\n\n\"Cat, about today, I...\" Ricco began to speak, but Cat held up her hand.\n\n\"Ricco, I understand now about the secrets and why you kept me hidden when we were dating. I get it, I do, but I don't think I'm ready to think about what happened today and what that means for us. I love Matteo. I'm in love with him, truly madly, deeply, and I trust him completely,\" she admitted. \"I'm not sure how much room that leaves for another man in my life,\" she said honestly.\n\n\"You can trust me, Cat. I would never intentionally hurt you or Matteo, I promise you that,\" he said in a low voice.\n\n\"We were never totally honest with each other, and therefore never fully trusted each other. If Matteo wants this, we will need to start being honest and rebuilding that trust,\" she said quietly and then repeated the most important words. \"If, and only if, Matteo wants this, because I would never betray him, not for any reason.\"\n\n\"What about you? Or me? Do our feelings count at all?\" Ricco asked. He was impressed by how honest and loyal she was with him, even if her loyalty was to his brother rather than himself.\n\n\"Matteo knows I still care about you, but he also knows our affair was very different from what I have with him,\" she said, tilting her head and not wanting to be hurtful by going into specifics. \"I am assuming you still care for me, from what I have seen.\"\n\n\"Care might be a little understated for what I feel, but, yes, you are right,\" he acknowledged her words.\n\n\"I love him, Ricco, it's not like anything I have felt before, and it will be his decision in the end, not mine, not yours, and not your father's. I will go and do this trial, but make no mistake, I am doing this for Matteo, and him alone,\" she said, making her point as strongly as she could before turning around and walking away from him.\n\nRicco watched her walk away regretting the way he had treated her more than ever. If he ever wanted a relationship with Cat in the future he had a lot of work to do to get her to trust him again. He felt backed into a corner now. Jacobi and Matteo would both have very real reasons to resent him, and, at worst, blame him for what was about to befall them. The one bright spot in this situation had just become dull as he realised just how difficult it would be for her to forgive him completely, even if she now understood why he had treated her that way.\n\nThe bartender looked up as Ricco approached, if there was ever a man in need of a drink this man was him. He placed a heavy bottom glass on the bar and a bottle of Sambuca, which seemed to be the drink of choice with the men in this gathering, and waited.\n\n*****\n\nCat had smiled brightly as she kissed Matteo goodbye. She was scared but was determined not to show it. She could and would do his. She had done a lot of things in her life she didn't want to and wasn't particularly proud of, and for him she could do this. She loved him, and it wasn't until tonight when she was talking to Ricco that she had actually voiced just how much she loved and wanted her relationship with Matteo.\n\nHis eyes clouded with uncertainty as she finally pulled away from his arms and stepped onto the tarmac where Marcus waited to take her away. He remained that way, unmoving for a long time, and she could see him from the small window of the private jet as it began to taxi to the runway.\n\n\"I would have liked to be there for him when he went to the hospital to see Stefano tonight or in the morning. It will be hard for him and his siblings seeing their father like that,\" she mused almost to herself as the plane lifted off. \"You will tell me what happens, won't you? I mean, if the worst happens you will let me go to him?\" she asked Marcus directly.\n\n\"Yes, I will escort you there myself,\" He reassured her. \"Relax and get some sleep if you can, it's been a long day for you and the flight will take a few hours,\" his voice was soft but commanding, and she tilted her head hearing the inflexions of a command from another alpha male.\n\nCat closed her eyes thinking her situation through. If she went into this considering herself as a submissive in training and Marcus as the dominant Matteo had chosen to train her, then maybe she could bypass any guilt she might feel for betraying him at the facility. That was all this was, after all, training to become worthy of the name Vitali so she could marry him. Wife training, she laughed internally at the thought in this modern era. So many feminists would be rolling in their graves if they knew she had agreed to be trained as the perfect wife for Matteo.\n\nShe doubted he would love her any differently once it was done. This was, after all, more about family expectations and archaic laws and traditions than it was about her ability to love him and have him love her. Still, as she sat quietly with her eyes closed blocking out the large man who escorted her to the facility, she could if she ignored the societal norms that demanded political correctness, she could reconcile what she was about to do within herself.\n\n*****\n\nMatteo boarded his company jet, declining the offer to fly back with Roberto and his uncles; he wasn't in the mood for their mysterious 'we know best about the future' routine. He felt better after his chat with Marcus, but he had still hated letting her go and seeing the fear in her eyes behind her too bright smile.\n\nUnsurprisingly, Ricco sat slumped in a chair waiting for him. Matteo considered his brother silently as he took his seat and did up the belt. They may as well get everything straight between them before they went to see Stefano and were forced into deathbed promises neither of them wanted to make, or at least he didn't want to make. He wasn't sure about what Ricco wanted now.\n\n\"If they name me as Oracle I'll renounce it,\" Matteo said abruptly. \"I won't stand by and watch you marry Cat.\"\n\n\"Why would they make you Oracle? I'm not a leader!\" Ricco turned his shocked expression on Matteo.\n\n\"Bullshit! Without you smoothing everyone's ruffled feathers for him, Jacobi was nothing more than a bully who liked to tell us all what to do. You were the one who got shit done in the end,\" Matteo shook his head. \"He bullied you into going along with all of his plans, despite what you wanted. I can't believe you would have let Cat go if Jacobi wasn't pushing you. Yet he never included you in his relationship with Maryanne either.\"\n\n\"Yeah, well, that was a two-way street,\" Ricco defended his twin. \"You can't fake chemistry, and Maryanne is not my type.\" Ricco shrugged. \"I don't know what you think you know, but I never felt bullied by him, we were a good team. He ruffled the feathers to get people moving and thinking, and I smoothed them to get what we ultimately wanted.\"\n\n\"How do you think he'll take the news that you still get to lead and he doesn't?\" Matteo asked.\n\n\"Not well, I'd imagine, but he's about to become a father for the first time, so maybe that will temper the news slightly. I'm looking forward to being an uncle at last,\" he grinned. \"I need something to look forward to right now,\" he sighed.\n\n\"What do you mean? I thought you'd be happy. This is what you wanted, to lead the family,\" Matteo undid his belt as the plane levelled out and walked to the rear of the plane. \"Come and have a drink, I think we are both going to need it for this conversation,\" he grumbled.\n\n\"Okay, here it is from my perspective, and don't hate me for sounding like a self-indulgent shit about this,\" Ricco prefaced what he was about to tell his brother.\n\n\"First we all find out that Maria is alive and all of the connotations that brings with it. The woman tried to kill us all,\" he began. \"Then the three of our parents, together, rip Jacobi and me a new one for trying to wipe the memory of Alessandro from the family and claiming second son status. Jacobi took most of the heat for that because he truly believed he deserved to be the next leader of this family. He argued that that you, who had dropped out of any social interaction, couldn't possibly lead when you couldn't even fix your own life,\" he took a breath and swallowed the shot of scotch Matteo had placed in front of him.\n\n\"That's fair,\" Matteo acknowledged.\n\n\"No, it's not! You've been there for all of us whenever we needed you, regardless of what was happening in your own life and business. I couldn't let Jacobi throw you under the bus like that, and told him so. It was a pretty heated argument, and Jacobi hated that I sided with them over him. I hadn't realised how absolutely determined he was about leading until that moment. I mean, we thought it was the most likely scenario, given the dynamics of our family, but...\" Ricco seemed to come out of the reverie with a shudder. \"Let's just say he didn't take it well, and I imagine this news is going to be worse for him because of my part in it.\"\n\n\"I see. He covered that up well in front of the rest of us,\" Matteo mused as if to himself, trying to see the truth of what Ricco was saying.\n\n\"Then there is you. I have had to put up with months of your moodiness and disappearing acts, only to then be told that you are going to marry the woman I still care about and am wholly attracted to, and you expect me to be happy about it! I have swallowed down all of my feelings, including the remorse I have for the way I treated her, which in the end was for nothing, and been happy for you both. I really have tried my best for things not to be awkward between Cat and me for your benefit more than hers even,\" he let out his resentment over his bothers happiness in one big blurt of words and followed it up by downing another belt of scotch.\n\n\"I appreciate that,\" Matteo said, reading the hurt in Ricco's words and feeling for him on some level.\n\n\"That brings up to today's little drama,\" Ricco rolled his eyes. \"Here I thought, great, this is everything I ever wanted. I love you, Matt. I can't think of anything better than working with you, living with you, being part of each other's lives with the added bonus that we both love Cat in our own ways. She at least doesn't hate me anymore, and we could build on that and become closer in time,\" he watched his brother's face as he spoke, seeing a flurry of emotions cross his face.\n\n\"Don't worry, Cat has made it perfectly clear that she is in love with you, \"truly, madly, deeply in love\", were her words. She told me that what she felt for you was so far removed and different from anything she and I had that I couldn't compete on the same playing field. She went so far as to tell me that she doesn't care what Papa wants or the family wants, she is doing this trial for you and only you. Whether the two of you let anyone else into your lives is entirely up to you because she would never betray the trust you have in each other.\" He downed the third drink and sighed. \"So you see, you don't have to worry about me marrying Cat, she would say no, even if you asked her to accept me, I believe.\"\n\n\"Well, fuck!\" Matteo said, astonished by Cat's words to Ricco.\n\n\"So, hooray for me and getting everything I wanted, right?\" Ricco sat back in his chair and stared at his brother.\n\n\"Okay, now you can listen to me!\" Matteo pinned his brother with a glare.\n\n\"Every woman I have loved in my life has betrayed me, and I have the scars to prove it!\" he stated venomously. \"Maria didn't touch you, she woke up to herself before that happened, it was Alessandro and me who bore the brunt of her insanity!\" he jabbed a finger at the scar. \"I was the one who was disposable, the one she didn't love enough to stop herself, not you or Jacobi, me and Alie!\"\n\nRicco stared at his brother in disbelief that this was how he had felt all these years and considered how seeing Maria must have affected him.\n\n\"Every woman after that let me down in some way, and when Nik played her part so perfectly, I thought I had found someone who could love me, but she only proved that I was unlovable. She used me to distract her family from what she was really doing, and I shut myself off from everyone who had the power to hurt me like that,\" he admitted. \"Jacobi was right; I didn't care for a long time.\"\n\n\"You always came when one of us needed you. You were always there to pick up the pieces or help out. You didn't shut off from us. Not once did you let any of us down,\" Ricco argued as he had with Jacobi. He knew that Matteo was the one person he and his siblings all looked to for help and guidance. He would make a great leader when the time came.\n\n\"That's different, I'm hardly going to see any of you in trouble and not help,\" he shook his head, \"but I didn't stick around for the good times or the celebrations. I buried myself in work and convinced myself that was enough until an adorable rain-soaked young woman with mismatched socks and paint streaked across her face fell into my living room and unapologetically told me she was not leaving. I proposed to her that first night, and she ran away as soon as she found out what my name was.\" He chuckled at the memory of their first meeting.",
        "\"I've worked so hard to get her to trust and love me in return. Now I am just supposed to roll over and leave her to the mercy of family law and tradition? I hate this trial and what it entails. I hate that you have some expectation that you will become part of our lives and our love. I hate that I have no control over anything that is happening right now, and most of all I hate that I may have to walk away from everyone I love, my family and friends, to have the life I want with Cat. I meant what I said, I won't stand by as Oracle and watch you marry her, even if only for public perception!\" Matteo said adamantly.\n\n\"Well, fuck!\" Ricco repeated Matteo's earlier statement.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "art show",
        "family",
        "brothers",
        "training",
        "trial"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-14"
}