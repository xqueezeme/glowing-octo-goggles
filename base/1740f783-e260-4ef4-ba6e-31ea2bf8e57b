{
    "title": "Devonny Ch. 10",
    "pages": [
        "Devonny inhaled sharply, bracing herself as she grasped the bedpost. \n\n\"Now hold that breath,\" Moira urged as she jerked the corset stays tight. \n\nDevonny winced. \"Am I supposed to be able to breathe?\" she wheezed. \n\n\"No,\" Moira answered.\n\nWhen she had finished, Devonny groaned. She leaned one way and then the other, testing the stiffness of the garment. \n\nMoira helped Devonny dress carefully in layers of undergarments. Devonny fidgeted in the numerous heavy petticoats, layers of underclothes, metal hoops, and the tight corset worn under the pointed whale bone bodice. She shot Moira a beleaguered expression. \"Is all this really quite necessary? I feel about as agile as a warship being tugged into harbor.\" \n\nMoira merely smiled and shook her head fondly. \"It will be worth it, dearie. Not to worry.\"\n\nDevonny stared at herself critically in the full length mirror. Her hair had been artfully coiffed, allowing dark curls to frame her face and neck, held in place by pearl tipped pins. The corset had nipped her waist into seemingly unnatural smallness. \n\nBy the time Moira had slipped the lavender silk gown over her head and buttoned up the back of the gown, Devonny's heart was racing, the corset feeling unbearably constricting. \n\nMoira gently turned the girl to face her, gently taking her shoulders in her hands. \"Are you alright, child?\" The girl looked pale and fretful. \n\n\"I don't know if I can do this.\" She pressed a hand to her cinched waist. \n\n\"Oh sweetheart,\" Moira pressed her hands to Devonny's cool cheeks. \"Of course you can. You look absolutely lovely and Prince and Miss Elizabeth will be by your side. You have nothing to worry about.\" She gave Devonny's cheek a reassuring pat. \"You will be adored, darling.\" \n\nDevonny gave her a weak smile in return. The soft knock at the door pulled her out of her thoughts. \"Yes?\"\n\nEli peeked his head around the door, his face lighting when he saw her. He knew she would be dazzling but he was slightly unprepared for the striking vision standing before him. Moira stepped aside to allow him a better view. \n\nThe lavender silk gown was molded to her upper body, flaring out over the large hoop skirt. Her shoulders and decollage were bare. Her deep golden brown shoulders were lovely. Her breasts were sumptuously swelling against the neckline. Her face was bare and open with the exception of a few sweetly alluring curls framing her brow and the nape of her neck. Pearl baubles hung from her ear lobes and a multi-strand pearl choker graced her delicate throat. \n\nShe smiled at him self-consciously as he stepped into the room. Her fingers fluttered nervously to her the pearls at her neck, as she mistook his silence for censure. \"It's too much isn't it? I knew it was too much.\" She reached to undo the clasp but Eli was there, gently taking her wrists in his hands and pulling them away. \n\n\"No,\" he soothed, his eyes lit with admiration. \"No, you look exquisite. Beautiful.\" He winked at Moira. \"But I think you're missing something.\" He watched Devonny's lovely brow furrow quizzically. \n\n\"Something else?\"\n\nHe grinned, taking the small box from beneath his elbow that she had not noticed. Her honey colored gaze flew to meet his. \"Oh, Eli. I can't...\" \n\nSmiling, Eli tugged at the robin's egg blue ribbon securing the box and opened the lid. Upon the plush white satin interior was a mask. It was beautifully made and painted in silver, gold and lavender with a small amethyst gemstone between the brows. \n\n\"Oh goodness, Eli,\" she breathed. \"It's beautiful.\" \n\n\"Did you think I had forgotten?\" Eli teased and handed the box to Moira as he lifted out the mask. \"May I?\"\n\nDevonny nodded. \n\nEli moved behind her and set the mask upon her. The silk lavender ribbons were trimmed with silver and hung alluringly down her back nearly to her waist. He allowed the back of his fingertips to trail lightly down the row of tiny fabric-covered buttons tracing her spine. She turned to him smiling. .\n\nThe mask covered only the top half of her face, revealing only the golden hue of her cheeks, her lush beautiful mouth, and the fine delicate line of her jaw. Her hypnotic amber gaze twinkled. \n\n\"A goddess,\" he praised. \n\nMoira was drawing back the curtains. \"Prince is out back, dearie. I think it's time for you to be on your way.\" \n\nDevonny drew in a shaky breath, her heart thumping. But Eli was there, taking her shoulders in his hands. He met her gaze steadily. \"You will be wonderful, understand?\"\n\nShe nodded mutely. \n\nHe took her chin between his thumb and forefinger. \"Understand?\" he prompted. \n\n\"Yes, Eli,\" she murmured softly. \n\nWhen he would have withdrawn, Devonny caught his hand and brought his knuckles to her lips, pressing a kiss there. Her lovely gaze was wet with tears. \"Thank you, Eli. For everything.\" \n\nEli cupped her face, brushing his thumb over her lips. He smiled faintly, \"Go.\" \n\nMoira draped a gossamer shawl around her shoulders and handed her the matching reticule and fan. She kissed Devonny on both cheeks. \"Go now, love.\" \n\nThe walk down the hall seemed endless and the walk down the rear stairs an eternity. \n\nAt the bottom she stopped short. Gabriel Davenport was standing in the kitchen. He'd stopped mid-stride in his pacing when he saw her. \n\n\"Devonny,\" he breathed, all other words\u2014even those he had so carefully planned\u2014leaving his mind. \n\nHis heart constricted at the sight of her. The mask she wore both concealed and enhanced her beauty, accentuating the extraordinary color of her eyes and the incredible lushness of her mouth. \n\nHe'd never seen her shoulders or her breasts The sight of them now was nearly his undoing. Her delicate brown shoulders were smooth and flawless. He wanted to press his lips against her lovely collar bone. Her breasts were pressed against the neckline of her lavender gown, full round and beautiful. \n\nHe cleared his throat and looked at her soberly. \"Eli has wonderful taste.\" \n\nShe stared at him from behind the mask but said nothing. \n\nHe came to stand in front of her, his legs brushing against her skirts. \"You look beautiful, Devonny.\" \n\nHer expression was unreadable behind the mask. \"Thank you,\" she said softly. \n\n\"I have something for you,\" he said gesturing to a small cherry wood box upon the table. \n\nHer eyes met his questioningly. \n\n\"Please\u2014\" he stepped aside.\n\nDevonny glanced at him uncertainly before unlatching the brass lock and lifting the lid. Gasping she took an involuntary step back but Gabriel's hand spanning the small of her back halted her. \"Devonny, please.\" \n\n\"Gabriel, I can't\u2014\"\n\n\"Take it.\" His stern tone left no room for argument on her part. He softened his tone. \"Please.\" \n\nNestled in the deep blue velvet of the box was a small pistol with a mother of pearl inlayed handle. \n\nGabriel looked at her intently when she made no move to pick up the weapon. \"Devonny, you're leaving our property. Prince has assured me that you will be well looked after but Rochard...\" he paused. \"Rochard is cunning.\" He frowned. \"Look, I won't know a moment of peace while you're gone unless I know you have some means of protecting yourself. Please.\" \n\nDevonny had never heard that note in his voice before. He was near pleading with her. \n\nShe gingerly picked up the gun. It was surprisingly weighty for its small size. \n\n\"It's loaded,\" he said quietly. He held up a small velvet bag. \"There's extra ammunition in here.\" \n\nDevonny took it without word and dropped it into her reticule along with the pistol. \n\nGabriel shifted, looking ill at ease. \"I know it's not anything beautiful like the things that Gabriel has given you but\u2014\"\n\nShe turned to him. \"Thank you, Gabriel. You wish me to be safe. That means very much to me.\" \n\nGabriel nodded. \n\n\"Prince is probably waiting for me,\" she said quietly. \n\n\"Of course,\" Gabriel smiled tightly as she brushed by him. \n\nShe paused in the doorway, feeling his eyes on her. \"Thank you, Gabriel, truly,\" she said a hint of a smile tugging at her lips. \"I don't want to think....\" Her voice trailed off. \"I don't want you to think that I don't appreciate...\" \n\n\"Goodbye, Devonny.\"\n\nShe smiled ruefully. \"Goodbye, Gabriel.\"\n\nShe stepped out the door. He didn't know how long he stood there. She would return in the morning but she was gone. Tonight was just the beginning of her new life that would take her away from him. \n\nHe shook himself from his thoughts. He had his own life to attend to and a future to prepare for.\n\n***\n\nDevonny removed her mask as the carriage rolled on, feeling slightly suffocated. She and Prince had taken his phaeton carriage to the Madison residence where they climbed into the Madison's Brougham carriage for the remainder of their journey. Elizabeth's parents had departed earlier and had likely already arrived at their destination. \n\nElizabeth was stunning in a buttery yellow gown and golden mask. She chatted excitedly about this waltz, that eligible bachelor, and whose mother was near mad with the stress of finding a match for their precious daughter. Prince watched her, unable to contain a doting smile. \n\nElizabeth sat next to Devonny in the elegant interior of the carriage. Prince, across from them looked unbelievably dashing and elegant. He carried an ivory handled walking stick across his knees and on the seat beside him was a satin top hat. \n\nDevonny tried vainly to listen to Elizabeth but her thoughts were getting in the way. What on earth was she doing? She was going to make overtures into the upper crust of the gen du couleur, lie through her teeth and pretend as though she belonged. \n\nShe felt oddly bare in the in the revealing gown with the neckline that Madam Baskett had lowered an inch despite all protests. \n\nShe toyed fitfully with the buttons on her elbow length gloves. Prince caught her gaze and gave her an encouraging smile. \n\nThe driver turned the carriage and it passed between two tall stone pillars and joined a line of carriages progressing slowly down the drive lit with lanterns and lined with lawson cyprus trees. \n\nWhen the carriage pulled to a stop in front of the manor house, the footman opened the door. Prince got out first and turned to hand Elizabeth down from the carriage. He then turned back to Devonny and offered his hand, watching her expectantly. Ducking her head, she slipped her fingers into Prince's palm. He gave her fingers a warm squeeze. \n\nCareful not to trip over the hem of her gown, yet not reveal a hint of ankle, Devonny stepped out of the carriage onto the deep blue carpet runner leading beyond the wide flung doors of the large manor house. \n\nDevonny suppressed a gasp of awe as she gazed up. The home was not so large as Kedleston by any means but it was no less breathtaking\u2014a bit over the top\u2014but glorious to look at. Classical pediments jutted from the mansard roofs and spires and gables jostled for attention. The whole was mounted by a copula. \n\nIf the outside of the home was a study in elegance, the interior was not anti-climactic in the least. Devonny followed Prince and Elizabeth through the porta-cochere and into the two-storey gallery of the central hall which had been furnished as a grand salon.\n\nDevonny followed Prince and Elizabeth who were arm and arm to greet their hosts who stood just inside greeting the procession of their guests into the house. \n\nTheir hosts were much younger than she had expected for a highly successful merchant and his wife. Mr. West was light skinned with an thin immaculate mustache and dark glittering eyes that held a definite hint of mischief. His young wife with her rounded pregnant belly was lovely. Their smiles were genuine and radiant, soothing a fraction of her anxiety. \n\nPrince drew her forward with a smile. \"Kenneth, this is my sister Devonny. \" \n\nDevonny dipped perfect curtsey and smiled graciously. \n\n\"Miss Devonny,\" Mr. West greeted her warmly. \"We've heard so much about you from Prince. And this is my wife, Pauline.\" \n\nPauline grasped her hands, beaming. \"For shame,\" she chided. \"Hiding such a face in a convent all those years. We've been desperately in need of some new blood around here and you are sure to be just the thing to stir up a bit of excitement.\"\n\n\"Pauline...\" her husband cautioned but with naught but admiration in his gaze. \n\nPauline smiled. \"Welcome to our home, darling.\" \n\nDevonny returned the woman's smile, ducking her head demurely in thanks. \n\nWith an excited giggle, Elizabeth threaded her arm through Devonny's and led her into the house. \n\n***\n\nKedleston Hall...\n\nGabriel and Elijah stood side by side welcoming their guests to Kedleston. It was always a tedious affair, lengthened by the endeavors of many a young woman to make a lasting impression on one or both of the Davenport men. \n\nThe evening progressed as evenings had in the past. Gabriel did his duty as a host. He chatted, charmed and plucked wallflowers from their seats for a dance. But he found it difficult to muster the enthusiasm to perform those duties that he once performed with such finesse. \n\nTry as he might, he was unable to distract himself from thoughts of Devonny. He was certain that she was finding no shortage of partners to fill her dance card. Perhaps some young swain would even attempt to break protocol and dance with her more than once. Would some dashing young man catch her eye? Was she lost to him already?\n\n'She was never yours,' he reminded himself as he absently moved through the dance steps, paying little mind to the young woman gazing up at him with open awe and adoration. \n\nWhen the music ended, he led his dance partner back to her seat before briskly excusing himself and stalking from the ballroom. \n\nGabriel closed himself in his study amid the shocked looks of is guests. Once inside he turned abruptly, intending to return but he halted, bracing his hands upon the sturdy oak door. He needed a moment. \n\nIt was near unbearable; to be surrounded by women fair clamoring for his attention when the one woman he wanted more than his next breath could never be his and was likely at this very moment in the presence of her future husband. \n\nHe stalked to the liquor cabinet and poured himself a snifter of scotch, downing it in one gulp. \n\nSteeling himself and carefully schooling his features, he yanked the door open to return to the parts only to come face to face with Abigail Harding. \n\n\"Gabriel,\" the lovely young blonde woman smiled coyly, and laying her hand against his chest she lightly pushed him back into the study. \n\n\"Abigail\u2014\" Gabriel blurted shocked as she slipped inside and closed the door behind her. \n\n\"Shhh...\" she laid her fingertips upon his lips. \"I simply came to cheer you up. You looked so unhappy dancing with plain boring Miss Morrison.\"\n\nGabriel resisted the urge to glare at her and toss her out. He kept his expression bland. \"You shouldn't be here Abigail. It isn't proper.\" \n\nAbigail slinked forward with a swish of skirts. \"I'm not concerned with proper at the moment.\" She slid her arms around his shoulders. \"I just want to be close to you.\" Standing on her tiptoes, she pressed her lips against his. \n\nAstonishment kept his lips pliant beneath hers. She smiled in satisfaction when she pulled back and saw the look of shock on his face. She traced her fingertips over his chest. \"I'll see you back in there.\" She glanced at him over her shoulder as she made to leave. \"I've kept room on my dance card for you.\"\n\nShe was gone with a soft click of the door.\n\nGroaning, Gabriel, squeezed the bridge of his nose in an attempt to stave off the impending headache. \n\nAnd then there was Abigail; Abigail who before Devonny, had been under the distinct impression that one day in the not too distant future she would be his wife. \n\nBut Gabriel could hardly imagine making any woman in this set his wife. Not when he could barely summon a smile in their presence. Not that he smiled much in Devonny's presence. With her spent the majority of his energy reigning in his emotions. It wasn't conducive to smiling. \n\nGrowling, he raked a rough hand through his dark hair only to carefully smooth the dark strands back into place. He jerked his jacket lapels straight, drained another tumbler of the amber liquid and left to rejoin his guests. \n\nElijah wrenched his attention from the raven-haired beauty on his arm to observe Gabriel returning to the ballroom. He watched his brother stop short of the entryway, square his shoulders, inhale deeply and then smiling he entered and struck up a conversation with the Duke of Devonshire. \n\nGabriel smiled, captivated and laughed. To anyone but his brother, he looked the picture of gallant charm. But to Elijah, his brother looked a bit absent behind the eyes. He had little doubt what had Gabriel so distracted. \n\n***\n\nDevonny quietly slipped outside through the french doors. She needed just a moment to herself. \n\nShe'd not had the chance to sit and catch her breath since they'd arrived nor pause for a moment. Everyone had been perfectly friendly and welcoming. Of course, women whispered behind white gloves and fine-looking fans, shooting her appraising looks and tittering in speculation. \n\nHer myriad of dance partners ranged from the shy and reserved to the boldly flirtatious. Her cheeks felt stiff and twitched from holding a smile. \n\nThe night had grown cool and the faint scent of tobacco smoke hovered in the air. She tugged her thin shawl tighter around her shoulders for its minimal warmth. \n\n\"Escaping?\" \n\nDevonny started at the deep drawling baritone sounding from the darkness. Startled, her hands fumbled with her reticule. \n\n\"Easy, Miss Adams,\" he soothed. A tall cinnamon skinned man stepped from the shadows. \n\nDevonny warily studied the man who was studying her. He was perhaps a few years older than herself and stood a few inches taller. \n\nHe plucked the cheroot from between his lips and flicked it away. Waving away the wisps of smoke hanging in the night air, he grinned at her disarmingly. \n\nHe was perhaps a few years older than her and stood a few inches taller. His dark hair was parted on one side and slicked back from his face. He was undeniably handsome with a playful glint in his dark eyes. A black mask scrawled with gold as pushed up on top of his head. \n\n\"Theodore Edmondson,\" he extended his hand. \"But you may call me Teddy. Most everyone does.\"\n\nDevonny tentatively slipped her hand into his and pushed up her mask. \"Devonny Adams,\" she said smoothly. \n\nHe grinned. \"Ah, sister to his highness, freed from the nunnery.\" \n\nDevonny returned his smile at his play on words. \"So you know my brother?\"\n\nTeddy nodded and leaned against the stone rail of the veranda, crossing his legs at the ankle. \"Of course. Everyone does. He captured the heart of one of our most sought after young ladies and has made quite a name for himself with his new stables not too far from here. I bought a fine Arabian from him just a few weeks ago.\" \n\nHe tilted his head, seeming to examine her face in the light from the windows. \"And you,\" he mused. \"You must be causing quite a stir. I can see why you wished to make a run for it.\"\n\nDevonny lifted a brow, her lips twisting in amusement. \"And you? What's your excuse?\"\n\nHe lifted his shoulders in a shrug. \"My father wishes me to marry and marry soon. Every girl in there is aware of it, and what's worse is that their mothers are aware of it.\" He grimaced and looked at her warily. \"I suppose you're here for the same purpose. To make a match?\"\n\nDevonny sighed. \"So I'm told but...\" her voice trailed off as she realized she was talking to a complete stranger. \n\nHe raised his brows with interest. \"But?\" \n\nDevonny lifted her shoulders and smiled tentatively. \"It's all very grand and beautiful. But what of love?\"\n\nTeddy let out a bark of laughter. \"Love! Ha!\" He couldn't contain the smile that spread over his face. \"Oh, you are an innocent.\" She frowned and he quickly rushed on. \"I say that with the utmost admiration. It's quite refreshing.\" He chuckled. \"You see, a love match like your brother and Miss Elizabeth is rare. Most matches are made between parents looking to enhance their wealth and prestige with little regard to what their child might wish.\" Bitterness tinged his words and she felt truly sorry for him at the flicker of misery on his face. ",
        "\"That sounds....difficult to bear.\" She said softly. \n\nHe smiled tightly. \"Indeed.\" \n\nShe moved toward the doors. \"I think perhaps I should return before I am missed.\" \n\nTeddy straightened. \"Of course,\" he said. \"I'll wait a length to return. Wouldn't want to soil your reputation upon your debut.\" \n\n\"Thank you.\" Devonny dropped a small curtsey. \n\n\"Miss Adams.\" He gave a slight bow with a twitch of his lips and watched her slip back inside. \n\n***\n\nThe first pink rays of dawn were peeking over the horizon when Devonny slipped back into Davenport house through the kitchens. She was weary beyond belief. Even after a hard days work she was never so tired. Her head still spun and echoed with the sound of laughter, tinkling china, and strains of music. She made it up to her room and dropped shawl, mask and reticule into an armchair. \n\nThen there was the arduous task of undressing. Lifting her skirts, she released the ties of the ungainly hoops and let the garment fall to her feet. She sighed in relief, happy to be rid of the excess weight. She then removed the numerous pins holding her hair in place, massaging her scalp with her fingertips once her hair was free to fall wildly around her face. \n\nHer stomach growled audibly and she winced. She'd been far too nervous to eat throughout the night, merely moving her food around on her plate and ignoring hors d'oeuvres. Shaking her head, she made her way back down to the kitchens and set about making herself a cup of tea to stave off the hunger until breakfast which would likely be in a matter of hours. \n\nShe seated herself at the kitchen table and laid her head upon her crossed arms, waiting for the water to heat. She was certain she would have enjoyed her evening if she had not been so nervous, she reflected. It seemed at least, that she had made a friend in Teddy Edmondson. When he'd returned to the house, he'd promptly asked her for a dance. He'd made faces at her and made her laugh certain that she was too tightly-wound for her own sanity. \n\nShe'd danced with many men throughout the night. But there was no spark like the spark she had first felt when her eyes had met Gabriel's for the first time. It had been like a fist tightening around her heart and stealing her breath. \n\nLove takes time to grow, she told herself as she rose and poured herself a cup of tea. She made a point of convincing herself that she could easily grow to love another man as easily as she had fallen for Gabriel Davenport. \n\nThat was when the object of her musings entered the kitchen, stopping short when he saw her. \"You're back.\" \n\nShe smiled absently at him as she squeezed a wedge of lemon over her tea. \"Yes. Only just.\" \n\nGabriel was still in his attire from the evening though his jacket and vest hung open and his cravat had been discarded. His shirt was unbuttoned to his chest and his dark hair was in haphazard disarray. He held a glass of port in one hand. \n\n\"Would you like a cup of tea?\" She offered, glancing up at him. \"In exchange for your liquor. Undoubtedly, the trade would ease your waking hours.\"\n\nGabriel stared at her. She was still wearing the lavender silk gown, though she'd removed the bonnet and the gown skimmed over her curves distractingly. Her dark hair was unbound as he rarely saw it and allowed to fall around her bare shoulders. She was looking at him expectantly. \n\n\"Yes,\" he answered tightly. \"I'd like some.\"\n\nShe smiled faintly and poured a bit of milk into the china cup before pouring in the tea for him. She handed it to him and he took a seat at the table pushing aside the glass of port. Stirring a dollop of honey into her own tea, she went to join him. She sat carefully, watchfully avoiding stepping on her skirts. \n\n\"How was your evening, Gabriel?\" she asked politely, taking a sip of her tea. \n\nGabriel eyed her guardedly. Was she aware of how miserable his night had been? Was she merely goading him? Surely she must know that he would be thinking of her incessantly. \"It went well enough,\" he said stiffly. \"And yours?\" \n\nHe watched uncertainty flit over her soft features at his cool tone. \"It was wonderful, truly.\" She said smiling, attempting to inject some lightness into the conversation. \"Everyone was very welcoming.\" \n\nHe was unable to stop his next question. His voice was cold. \"And did you snare yourself some worthy young swain?\" \n\nDevonny's brow knitted together at his harsh tone. \"Perhaps,\" she ventured, hesitantly.\n\nHe snorted and took a sip of his tea. \"Perhaps,\" he ground out.\n\nDevonny set her tea cup in its saucer with a clatter, her ire rising. \"Have I said something to offend you?\"\n\nHe gritted his teeth, holding back words, unable to keep the glower from his countenance. \n\nHer chair scraped backwards as she stood abruptly. \"I think I should leave you to your tea.\" \n\nHe stood. \n\n\"Goodnight, Gabriel.\" \n\nWhen she would have left him, his hand shot out and closed around her wrist. When she turned to him, his gaze was fervent, his brow furrowed. A muscle ticked in his clenched jaw. \n\n\"Gabriel\u2014\" she began, her voice holding a warning.\n\nHe did not release her. \"What is it you want from me?\" His question came out harsh and angry and they stood staring at one another.\n\n\"From you?\" she echoed. \n\n\"Yes!\" he hissed. \n\nDevonny's eyes widened at his question. What was he asking her? Something lit inside her and for once she was not going to hold back. She lifted her chin imperiously and leveled her gaze at him. \"Merely what you cannot give,\" she said. \"And that which you likely could not bring yourself to offer.\"\n\nGabriel searched her lovely upturned face for some hint of guile but there was none. His voice was low. \"I have wanted you from the moment I laid eyes on you.\"\n\nShe glared at him. \"That much has been made incredibly obvious, thank you. Is that all?\" she demanded. She tugged at her wrist. \"Now, let me go.\"\n\nHe released her wrist only to capture her shoulders in his hands and bring her flush against his body. She did not struggle but scowled at him. His chest heaved against her breasts. \n\n\"What would you have me do?\" he spat, giving her a small shake. \"Would you have me deny my father's legacy? Bring down all that my grandfather and his father have built?!\"\n\nHer honeyed gaze was alight with anger. \"No. I would not.\" A bitter smile curved upon her lips. \"I would not be the cause of your ruination, nor will I be your little whore if that's what you were hoping. I would think on it no longer if I were you,\" she advised gravely. \"There's nothing for it.\" \n\nShe wrenched out of his grasp. \"Goodnight, Gabriel.\" She was gone with a swish of her skirts and he was left staring after her. \n\nLifting her skirts, she mounted the stairs at the most dignified pace she could manage, heart hammering with the expectation that he might come after her. When she reached the top, she broke into a run, racing down the length of the corridor and ducking into her room. She turned the wrought iron key and locked the door. \n\nBreathing hard she collapsed against the door, gasping for air in that blasted corset and holding back a cry of despair. A sob bubbled up and burst free from her throat. She clapped her hands over her mouth to muffle the sound slid down the length of the door to huddle at its base as strangled sobs wracked her body. \n\nDespite her exhaustion, there would be no blessed sleep for her this night. "
    ],
    "authorname": "theDuskyGirl",
    "tags": [
        "victorian",
        "london",
        "servant"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/devonny-ch-10"
}