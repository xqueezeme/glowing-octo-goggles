{
    "title": "Unless it Happens to be Her",
    "pages": [
        "Hello again, gentle readers! This story is my entry for the  It's also my first foray into this category, so you'll have to tell me how I did. This is a slow, romantic burn and I hope it comes off as a good mix of sweet and spicy. As always, all comments\u2014whether posted here or sent via e-mail\u2014are welcome. Thanks to my special friends who gave it a look-through (you know who you are!). Any remaining errors are a result of me tinkering with it after their edits. Thanks for reading!\n\n#\n\nBrittney sighed and pressed the button on the side of her phone, and the screen went blank. She stared at it for a long moment, hoping that fate might offer her a reprieve, that John would have a sudden change of heart and call back or text.\n\nBut the screen stayed dark. After forty-five seconds, she put it back in her pocket. Her eyes flicked to the digital wall-mounted clock.\n\nOne-twenty-two. Eight more minutes of lunch break.\n\nShe stifled a yawn and poured herself a fresh cup of coffee from the heavy machine labeled, \"Sumatran Blend.\" She sprinkled some artificial sweetener into the twenty-two-ounce metal travel thermos and turned to the fridge. Containers of half-and-half and heavy whipping cream lined the refrigerator racks, eliciting a faint smile from Brittney as she grabbed the nearest open container of half-and-half and topped off her drink. Not having to fight many employees for the office's excellent coffee was one of the perks of working the graveyard shift.\n\nShe wandered through the cubicle maze to her desk. Only a smattering of desks were occupied at this hour. Most of the workers conversed in low tones with their customers, though a handful sat idle, waiting for a call to come in and be routed to their terminals. Her desk was in the middle of the floor but was also separated from other desks by at least two workstations in every direction, which meant that she was left alone while working ... which was how she liked it.\n\nAnother yawn. Mondays are always so slow ... though I guess technically we're into Tuesday now. The sudden memory of talking to John in between calls during their slow times made her sigh again.\n\nShe flopped in the seat at her terminal, placed her thermos on her desk, and ran her hands across her smooth dark brown hair, which she'd tied back in a ponytail before coming to work. One thing Brittney had always appreciated about working at the call center was the lax dress code; she was able to wear jeans and a tee-shirt and didn't have to worry about fancy hair arrangements. Triple Spark Communications' only guidance on customer agent dress was, \"clean and presentable.\" It had saved her a ton of money on clothing.\n\nBrittney yawned one last time, noting that the clocks on the walls of the call center main room, which were synchronized to the one in the break room, now read 1:58. Unless she went into the system and extended her break time, she would be back in the agent queue in two minutes. For a moment, she was tempted to do just that, log out for another half hour, and put her head down for a nap ... but taking more than her approved half-hour would draw fire from her supervisor. It would also be unpaid time, which would defeat the point of working getting time-and-a-half for working the night shift.\n\nShe pursed her lips. Given what had happened, all the extra money she was making and saving now seemed pointless. Brittney plucked the headset from the desk and settled it on her ears, adjusted the microphone near her mouth, took her system off break, and waited.\n\nThe second the clock rolled over to two, the large square gray button labeled CALL turned green as the screen lit with an incoming call. Based on the information associated with the incoming phone number, she noted the company of the account, the name on the account, and the local time of the caller, which was the same time zone as her own. She clicked the flashing icon on her screen and began her litany. \"Good morning and thank you for calling AT&T tech support. My name is Brittney. Before we get started, can we please verify some security information ...\"\n\nA stream of calls kept her busy. When Brittney finally had a lull, she glanced at the clock and was surprised to see it read a quarter to six. The steady flow of incoming business meant the hours had ticked off the clock without her paying much attention, and also that her shift was almost over. As soon as the clock hit six AM, she could take herself out of the queue and spend the last five minutes of her shift closing down her administrative tools.\n\nStaying busy had also kept her from thinking about John too much. She recalled the times both she and he had rolled back their chairs from their desks, trailing the cords of their headsets, to pop their faces around the cubicle walls and steal a quick kiss. And then there was that time they'd spent their lunch break in the back bathroom\u2014\n\nBrittney gave her head a slight shake. Pleasant as those memories were, that's all they were. All I have left of him, she thought.\n\nShe half-stood and peered over her cubicle walls. The morning shift had indeed already begun arriving, clocking in and setting up at their terminals. They had to be ready to take calls by six. She stretched her arms over her head. Oh man. Bed is gonna feel gooooood.\n\nShe sensed someone at her elbow and turned. \"Jim. Good morning.\"\n\n\"Same to you.\"\n\nJim Kendrick had been her shift supervisor for the year she'd been on the third shift at Three Spark Communications. Tall and spindly, with a receding hairline, thick glasses, beak-like nose, and unsmiling mouth, he was the prototypical image of a humorless office manager. In spite of that, Brittney had found him to be fair and even-handed as a supervisor, if devoid of personality.\n\nBrittney's eyes flicked to the woman standing at his side. She was about the same height as Brittney's five-foot-six-inches, which meant they were on eye level with each other. The woman had creamy skin and a cascade of curly auburn hair that fell past her shoulders. Brittney guessed they were about the same age. The new arrival wore a form-fitting blouse and slacks that highlighted her ample curves. Bright blue eyes peered at her and on their gazes meeting, the woman's face broke into a broad white-toothed smile that was equal parts sensual and friendly.\n\nWow, she's quite the looker.\n\nJim gestured. \"This is Calliope Beatty. She's joining the night crew to replace John Raster.\" Brittney frowned at the mention of John's name but Jim plowed on, either oblivious or uncaring. \"She finished her preliminary training class on Friday. Tonight will be her first floor shift. I'm assigning you as her floor trainer for the remainder of the week.\"\n\nBrittney smiled at the woman but inside her head, a mental scream shattered her sense of peace.\n\nGoddamn it, I hate training new people. And right now ... She wanted to object, citing her personal issues at the moment, but aside from a death in the family or losing a limb, Jim was impervious to such complaints. And, she grudgingly admitted to herself, Jim is fair about making us take turns. I haven't had a trainee in a while, so I am probably due.\n\nReservations aside, she forced a smile onto her face and extended her hand. \"Hi. I'm Brittney Garcia.\"\n\n\"Hi. You can call me Cal.\" Her voice was husky and laden with bedroom tones. Cal took Brittney's hand. Her grip was firm and confident. \n\n\"Okay, 'Cal' it is. Well, welcome to Three Spark Telecom.\"\n\nCal cocked her head and gazed at her for a few seconds.\n\nA sudden tingle of nervousness invaded Brittney's mind, though she wasn't sure why. Her tingling skin suddenly felt warm. She withdrew her hand and Cal released her.\n\n\"Calliope,\" Jim said in his monotone voice, \"Brittney is an excellent agent and trainer. You'll need to clock in by a quarter to ten this evening and meet her here at her desk.\"\n\n\"I can do that.\"\n\n\"Good. In the meantime, let's go finish filling out the rest of the HR paperwork for you.\" He headed towards his office without so much as a backward glance.\n\nCal offered Brittney a small smile. \"I guess I'll see you tonight.\"\n\n\"Yeah.\"\n\nShe breezed past Brittney and followed Jim. Brittney watched her walk away. Just as she was about to leave the cubicle farm, Cal glanced back, caught Brittney watching her, and smiled again. Then Cal rounded a corner and vanished from sight.\n\n#\n\nDaphne Garcia lowered her coffee mug. \"So ... John's gone now, right?\"\n\nBrittney sighed. Her mom always insisted that when she came home from work, they sit together in the morning and talk for a little while before Brittney went to rest. Most of the time, she didn't mind.\n\nShe glanced at Daphne, whose hazel eyes gazed at her intently. Even though her dad's Hispanic heritage meant that Brittney's hair and skin were darker than her mother's blonde hair and pale skin, there was no mistaking the similarity in the build of their cheekbones and shape of their chins. Folks had commented that Brittney looked more like her mom than any of her three older siblings did. she loved her mother and normally adored spending time between just the two of them.\n\nThat morning, though ...\n\nAt the moment, I really want nothing more than to run through the shower, crawl in bed, and fucking forget about John. She snorted. As if it's just that easy.\n\nSeeing that her mother was not going to be put off, she said, \"Yeah. If he stayed on the last schedule I heard, he left for Dallas yesterday. I don't know, since we've had no contact since I picked up the remainder of my stuff from his place last week.\"\n\n\"Did he go alone?\"\n\n\"I doubt it. I'm sure she went too.\" Brittney knew she didn't have to explain to her mother to whom \"she\" referred. The name had been thrown out in enough weeping conversations the week before.\n\n\"I guess it's a good thing you never got pregnant.\"\n\n\"Oh for crying out loud, that's all I need. But it's been three months since we had sex, so I figure I'm safe.\" Brittney's honesty with her mother over her sex life would have shocked some but she had always been close enough to her mom to talk about anything\u2014and it was times like that this, when the stress of life pressed in, that she treasured their close connection.\n\nDaphne released her coffee and placed her hand on top of Brittney's. \"I'm sorry, hon.\"\n\nShe shrugged. \"I guess it wasn't meant to be.\"\n\n\"Well, look at the bright side: you have a pretty good nest egg built up now. All that money you were going to sink into a house is yours.\" She gave Brittney a last squeeze before returning her hand to the mug. \"Does that mean you're going to quit at the library now?\"\n\n\"I don't know.\" Brittney thought about her part-time gig, working Fridays and Saturdays at the local branch of the library there in Tempe. Every cent had gone into what she and John had called the \"future fund,\" which was their term for the savings they wanted to put toward a house together. \"I really like working there. If I could get on full-time, I'd consider giving up Three Spark. Besides, what am I gonna do now, other than work? It's not like men are beating down my door.\"\n\n\"You won't know if that's true until you get yourself out there.\"\n\nBrittney kept her mouth shut. She was not about to be drawn into that discussion again.\n\nAfter a moment of silence, her mom said, \"Well, whatever you decide to do, your Dad and I are here for you. You know that, right?\"\n\n\"I know Mom. Thank you.\" She stood. \"I think for the moment, I'm just going to clean up and get to bed. I have a new trainee starting tonight.\"\n\nDaphne smiled. \"Is he cute?\"\n\n\"She is rather attractive, yes, and you should watch those gender assumptions.\"\n\nHer mom didn't look chastised in the least. \"Ah. Maybe next time.\"\n\nShe entered her room and closed the door, her nose wrinkling at the clutter. I need to pick up this place. I know it's driving Mom and her OCD insane but she's never said anything. It's the least I could do since they're letting me live here rent-free. Brittney grimaced. Monica, Paul, and Chris were all gone right after college, out on their own and starting their lives and families. Me? The single dropout, still living with my parents at twenty-five. Blarg.\n\nThoughts of her relationship status wrenched her stomach. Brittney grabbed her robe and headed for the bathroom. A few moments later found her standing under the showerhead. Working in a climate-controlled office meant she didn't get that dirty\u2014except that week the air conditioning went out\u2014but like any job, she built up a certain amount of mental grime every day. The hot water blasting across her skin scoured the fatigue and stress from her body and with every passing moment, she felt a little better.\n\nHer hands scrubbed her skin clean. One hand slipped across her mound and between her legs and she hesitated as a twinge radiated out from her nether region. \n\nMaybe ... maybe that would help me sleep.\n\nBrittney thought about it only for a second before she pushed between the folds of her sex and found the stub of her clit. At her touch, her abdomen quivered and pulsed. She began slow, soapy strokes between her lips, gliding her slick fingers across her nub of pleasure, down to tease the entrance of her pussy with soft circular motions, and back up again. \n\nShe placed her forehead against the shower wall and closed her eyes. Brittney thought about the stash of porn on her phone and recalled one video with a handsome blond-haired muscular guy railing an olive-skinned woman who looked a lot like Brittney herself, though with a surgically-enhanced chest. She let the movie of the fantasy play in her head while enjoying the gently building sensation.\n\nThe contractions in her abdomen increased. Her breathing picked up speed. Mortified that she might be heard, Brittney jammed her washcloth across her mouth to stifle her moan. Her hips began to tremble and her fingers moved faster.\n\nJust as her orgasm hit the tipping point, the woman in her mind changed. Gone was the dark-haired Hispanic woman. In her place lay a woman with milky skin, a wealth of reddish-brown curls, and bright blue eyes, which seemed to stare at her with wicked delight as the man's thick cock plunged in and out of her.\n\nWhat the\u2014\n\nBefore she could complete the thought, her pussy spasmed and her orgasm struck. Brittney froze and groaned into the washcloth as sweet release poured through her in a series of delicious-but-gentle waves. Ten seconds later, her breathing resumed and she dropped the washcloth.\n\nWow, that was strong. But why did I see Cal?\n\nshe turned off the shower, dried off, donned her robe, and hurried to bed. Before she could make any sense of it, fatigue of the night and relaxation of coming overcame her and Brittney fell into a dreamless sleep.\n\n#\n\nShe'd barely gotten her butt in the chair when Brittney heard a voice beside her say, \"Good evening.\"\n\nShe glanced up at Cal and smiled, trying not to think about the woman intruding in her fantasy earlier that morning. Eight hours of sleep had helped, making the memory feel a little more distant and she'd finally decided it was just one of those weird tricks a tired mind might play on someone. \"Hi there. I hope you got some rest. The first night shift is usually the hardest one until your body gets used to it.\"\n\n\"Yeah, Jim told me the same thing. I got about six hours of sleep.\" Cal pulled up an office chair and sat next to her, placing her metal travel mug on the desk, which was similar to Brittney's. She noted Cal wore a loose blouse that fell off one shoulder, yoga pants, and running shoes. Cal smiled. \"All right, let's get started. What do I need to know that they didn't teach us in training?\"\n\nAs Brittney set up her administration tools, she touched on a handful of basic topics and procedures, most of which Cal already seemed to be aware of. As far as Brittney was concerned, that already put Cal in the top quarter of new agents. Far too many of them barely paid attention in the classroom and had to be handheld through the most simple steps in their floor training.\n\nShe described how Three Spark Telecom's contracted tech support for several major phone, cable, and internet service providers\u2014the last of which was their area of support\u2014and started to outline the differences between the three. Before she could get far, Cal recited almost verbatim the differing procedures for AT&T, Cox Communications, and Frontier. Brittney blinked. \"Yeah, you seem to have that down.\"\n\nCal smiled and nodded.\n\nBrittney brought up a handful of their tools and was pleased to see Cal understood the essence of those as well. After ten minutes, she said, \"I think you've got this. I'll put us in the call queue. We get a thirty-minute lunch break. I like to take mine around one since that's a slow time and I can have the break room to myself. Most of the night crew take theirs at two or three. We can punch off the queue for as much as five minutes an hour if we need a break after a bad call or have to run to the restroom or something but anything more than that ends up counting as unpaid time and if we log too much, Jim will give us a warning. After two warnings in a month, we get an 'evaluation,' which is manager-code for getting fired.\"\n\n\"Gotcha. One o'clock for lunch sounds fine.\"\n\nBrittney checked her screen. \"I guess we just wait for a call now. Here, take this headset.\" She handed the set to Cal. \"There's no mic on that one but you can listen the whole time.\"\n\n\"Okay.\" She donned the headphones. \"Is it normally this quiet? I kind of expected it to be non-stop calls.\"\n\n\"Monday through Wednesdays tend to be a little slower, but it comes and goes. I had almost nothing this morning before two, and then it was steady until when Jim walked up and introduced you.\" She grinned. \"Friday night tends to be downright awful. Is that part of your schedule?\"\n\n\"No, Jim told me I was on Sunday night to Thursday night, same as you.\"\n\n\"Those are the best days, to be honest.\"\n\nCal rubbed her arms. \"Cold in here.\"\n\n\"Yeah, they crank up the air during the day. You know Phoenix in August\u2014you can fry an egg on the sidewalk by nine AM, so the AC is running full power all day. Half the time, no one remembers to turn it off at night, so it gets down in the low sixties. I never thought I would say this to someone living in Phoenix but get yourself a hoodie.\"\n\nCal's husky laugh was sensual to Brittney's ears. Her bright blue eyes lingered on her coworker.\n\nBrittney looked away. She wasn't sure why but Cal's intense scrutiny made her nervous. Not afraid but a little anxious. She said, \"Are you from Phoenix?\"\n\n\"I grew up in Scottsdale but went away to Colorado for school. I was working in the IT department of a big bank chain in Denver but when my Dad got really sick last year, I had to quit. I moved back to help Mom take care of him.\" She looked down. \"He passed about six months ago.\"\n\nBrittney touched her on the arm. \"I'm sorry to hear that, Cal.\"\n\n\"Thank you. I stayed so Mom wouldn't be alone. She doesn't get out much since Dad passed. It's been hard but we helped each other a lot. Money started getting tight\u2014medical bills wiped out my savings, and theirs. Mom can't work more than part-time, because she has some medical issues that cause her to get tired quickly. The old house was big and worth a lot, so she sold it and moved us down here to Tempe, to a smaller one.\" Cal smiled, a little sadly. \"I think she just wanted a fresh start, to get away from memories of Dad and everything.\"\n\n\"Whereabouts down here?\"\n\n\"Near Baseline and Guadaloupe.\"\n\nBrittney smiled. \"Cool, we're not too far from there either.\"",
        "\"Even with the smaller house, things were still tight. I told Mom I would go back to work. She objected because she has a decent government pension and was able to buy this new house outright, but I knew it would help us build up a financial cushion faster. And I was getting stir-crazy.\"\n\n\"Do you have any brothers or sisters who can help?\"\n\n\"An older brother. He's not married and he's sent us some money but he's in the military and deployed overseas for a year. He came back for a couple of days for Dad's funeral but couldn't stay.\" Cal raised her eyes. \"You?\"\n\n\"One sister, who's the oldest, and two brothers between us. They live around the valley in various places. They all followed mom and dad's footsteps: graduated college, got married, started spitting out kids, and are excelling in their careers. Big successes in their lives. I dropped out of college after two years and still live at home with my parents.\" Brittney smirked. \"I guess I'm the failure of the family.\"\n\nCal blinked in surprise. \"I'm sure it's not that bad.\"\n\n\"No, not really. My folks are great. They both worked hard and are financially well-off, so I'm not cramping their lifestyle. They've never made me feel like I was letting them down. But I look at my siblings and I feel ... inadequate, I guess. My personal pride says I should get off my ass and make something of myself. Does that make sense?\"\n\n\"Absolutely. But something I've figured out is that family is important. If your folks are okay with you being there, then take the positive from the time you have with them.\"\n\nBrittney grinned. \"Oh, you're right, and I do. It's just my insecurity talking.\"\n\nBefore any of them could say another word, Brittney's screen flashed. She pointed. \"Showtime.\"\n\nCal adjusted her headset. \"Let's do it.\"\n\nThe call turned out to be fairly boilerplate, with a polite older man who couldn't figure out how to reset the wireless connection from his modem. Brittney slowly walked him through it and after a few minutes, they had him back up and running. The man thanked Brittney, declined to participate in their customer service survey, and disconnected.\n\nCal waited until the CALL button on the screen grayed out. \"That went easily enough.\"\n\n\"They won't always. Oh man, the tales I could tell ...\" She laughed. \"Work here for a few months and you'll have your own catalog of stories. I hope you have thick skin, Cal.\"\n\n\"Thick enough.\"\n\n\"So, why 'Calliope?' That's unusual.\"\n\nShe snorted. \"Yeah, tell me about it. Mom told me that she and Dad just really liked the sound of it. My brother's name is 'Mercutio,' after the character in Romeo and Juliet. Would it surprise you that he always goes by 'Allan,' his middle name? I love my folks but they're weird. Anyway, I shortened it to Cal pretty much as soon as I knew that was an option.\"\n\n\"Well, at least people probably spell, 'Cal' right. Do you know how many ways there are to spell Brittney? I've pretty much seen them all and only about ten percent of people get it right the first time. Maybe fifty percent if I sit there and spell it out for them. I told my mother if I ever have children, I'm naming them Bob or Jane.\"\n\nCal chuckled. It was a throaty, sultry sound. Cal raised her metal coffee mug. \"Well, here's to well-meaning mothers and their goofy names for their children.\"\n\nBrittney raised her own mug and tapped it against Cal's. Cal smiled and sipped her drink. \"So, who is John Raster?\"\n\nA bolt of ice fired down Brittney's spine. \"W-why did you ask that?\"\n\n\"I saw your face when Jim mentioned his name this morning. You looked like someone shot your dog.\" Cal peered at her. \"Was he a friend? Did he get fired or something?\"\n\n\"Or something.\" Brittney stared at the screen, hoping the damn phone would ring but the night stayed quiet. She took a deep breath. It's not like it's a secret around here. Better that I tell her than she hears it from someone else and gets a distorted version. \"He was a floor agent, like us. He and I started dating two years ago.\"\n\n\"Is that allowed here?\"\n\n\"As long as one party isn't supervising the other, it's okay. We were on an equal level, so no one cared. We were going along great, or at least I thought so. We were talking about the long term, about having kids, all the usual stuff. He asked me to marry him and put a ring on my finger. It was modest but because it was from him, I loved it. We started putting money together to buy a house. We each had our own bank account dedicated to saving for it. We would show each other our account balances and tease one another if we got ahead of the other in terms of savings.\"\n\n\"That's cute,\" Cal said, grinning.\n\n\"Yeah. I shifted to the night shift so I could work with him and save even more money. I even took a part-time job at the public library, on Friday and Saturday afternoons when I'm off shift here. It wasn't much but it gave me a little extra money and I really like the work.\"\n\nShe sighed. \"Then, a few weeks ago, John comes to me out of the blue and tells me he's put in his two-week notice here at Three Spark, that he had accepted a job in Dallas with American Airlines. Worse, he told me had lost feelings, that he was taking a girl named Maria to Dallas with him.\"\n\nCal's eyes got wide. \"No way.\"\n\n\"She was an agent on the day shift. I knew her but not well. I guess he had been seeing both of us since May, which meant he started with her like eight weeks after I accepted his proposal. I guess in my mind, two years with me couldn't top four months with her.\"\n\n\"Oh, wow.\"\n\n\"I admit, I was floored. I was so shocked I didn't say a word when he turned and walked away.\" Brittney shrugged. \"I went through the usual reactions: anger, fear, despair. I called and texted him dozens of times a day. I put myself through hell, wondering what I did wrong or could have done differently. I cried non-stop and begged him to reconsider. I'm sure it came off as pathetic. He pretty much wouldn't even take my calls. The one time he did answer, he put Maria on the phone and had her cuss me out, telling me he was hers now. If he stuck to his schedule he left a few days ago.\"\n\n\"He sounds like a complete dick!\"\n\n\"He's not, he's ...\" Brittney paused. She fought the urge to let out a frustrated laugh. She'd had this same conversation with her mother and Monica both, and they had both had the same reaction as Cal. Her dad and Paul, the older of her two brothers, had both been stoic, saying John was not good enough for her. Her other brother Chris simply offered to find John and break his legs. She said, \"John isn't a bad person. He's just very immature. I mean, he's responsible and keeps his job and his appointments and he's not late on his bills and has no record or anything. He's upbeat, has a great sense of humor, and he's a lot of fun to be around. But emotionally, he's very much a scared little boy. He doesn't know what he wants. If he had the money, he'd be that guy who traded in his car every year for a new one, just so he could have a different vehicle. I knew that when we got involved and figured I'd have to do the emotional heavy-lifting in the relationship, at least to start. I thought he might get better and grow with me but that was my heart overriding my brain.\"\n\n\"I assume he didn't change.\"\n\n\"Not at all. I should have known something was up, though. He started pulling away. He stopped talking and the last three months we didn't even ...\" She blushed. \"You know.\"\n\n\"I hope you kept the ring.\"\n\n\"He didn't ask for it back. It's in my dresser at home. That's probably a red flag for me, keeping something like that from an ex. Our whole relationship was red flags, all over the place, but I hung in there, hoping that he'd turn it around. Intellectually, I am glad he cut the cord and moved on before we actually got married. That would have been harder to untangle. I know it was probably best that he left. But you know what the sad thing is?\" She smiled, though there was no humor in it. \"If he came back to me and begged to take him back, I probably would.\"\n\nCal's brows furrowed. \"What? Why the hell would you do that?\"\n\n\"Despite it all, I still care for him. I wondered why I wasn't good enough for him. It only took me about five minutes after he told me he was breaking up to start blaming myself for whatever I did that drove him away.\" Brittney spread her hands. \"It's what I do. Failure, remember? Applies to my relationships too.\"\n\nCal stared at Brittney a moment. Then, she placed her hands on Brittney's, pulled them together, and clasped them palm-to-palm between her own. \"Well, that stops right now, okay? You seem like a very nice person, Brittney, and you don't strike me as a failure at all. Even if you are, that's irrelevant. Him cheating on you, then taking off like a coward... that was all on him, not you. You didn't cause it and you didn't deserve it. Do you hear me?\"\n\nBrittney started to scoff. She started to pull away, saying she'd already heard the same thing from her family and friends many times before.\n\nBut Cal's penetrating gaze pinned her in place, like a butterfly in a trophy case. Brittney's throat felt suddenly dry and a light sheen of sweat broke out on her forehead. She forced the words out over a raspy tongue. \"I ... I understand.\"\n\nOne side of Cal's lips turned up in a quirky half-smile. She released Brittney's hands. \"Good, I'm glad we got that straight.\"\n\nThe screen lit up with an incoming call.\n\nThank Jesus, Brittney thought, focusing her attention. If I had argued with her, I think she might have turned me over her knee.\n\nHer skin flushed again and Brittney cursed to herself, wishing she had really, really not had that thought.\n\n#\n\nCal looked at her. \"So, what do you think?\"\n\nBrittney checked off the last item on Cal's training checklist. \"I think you've got it down.\"\n\nAnd she did. She'd watched Cal that week, riding shotgun on a handful of tech support calls and observing her coworker handle their customers. Cal had been as cheery and helpful on the phone as she'd been in person. She'd followed Three Spark procedures to the letter. She'd dealt with the bulk of her calls without issue.\n\nWhen one customer had become hostile and uncooperative over the lag in his internet, Cal had stayed calm and tried to talk him down. When she'd been unable to do so, she'd calmly shifted him to the next level of supervision, just as she was supposed to do. The guy continued his verbal assault, screaming at Cal and questioning her intelligence, her morals, parentage, citizenship, and a host of other insults. She remained pleasant until he was off the line, though as soon as the CALL button had shifted to gray, she tore her headset off, glared at Brittney, and snarled, \"What a fucking asshole,\" which had reduced Brittney to a laughing fit. Cal grumbled and announced she needed to get up and walk around for a few minutes.\n\nShe chalked up her giggles to the hour being late and feeling loopy, but on reflection, Brittney thought it was because she'd been struck by the sudden shift in Cal's demeanor\u2014from collected and pleasant, to annoyed and crabby. It was the first time she had seen her friend lose her temper and Brittney thought it actually humanized her a little.\n\nFriend? She blinked at that thought. Isn't she just a coworker? No, she's already become a friend. I've really enjoyed this week working with her. She's very sweet and funny. We've gotten along great so far ... and let's face it, Britt: you don't really have a lot of friends. Can't afford to slag off the ones you have.\n\nCal returned a moment later, flopped in her chair, and replaced her headset. \"Sorry about that.\"\n\n\"No, it's okay. It's what those five-minute breaks are for, when you have a bad call. Did you walk off your grouchies?\"\n\n\"Yeah, I'm fine now.\" A tentative smile crossed Cal's face. \"People suck, don't they?\"\n\n\"Too often, yes.\" Brittney stretched her arms over her head. \"It's almost one. You want to clock out for our meal?\"\n\n\"Sure.\" Without waiting to be told, Cal logged their station as \"on-break\" for the next thirty minutes. Brittney smiled to herself, happy that Cal seemed to have her job well in hand.\n\nThey strode through the dimly-lit cubicle maze toward the break room, where they had both stowed their lunch. They had eaten together each night of that week. A little sense of melancholy came over Brittney, as she realized she'd really enjoyed having someone to talk to at work\u2014someone other than John. She hoped Cal would want to continue to take their evening breaks together when she finished training and started her own shift.\n\nCal retrieved a plastic container and popped it in the microwave. \"Leftover pasta. How about you?\"\n\n\"Turkey sandwich.\" Brittney pulled her insulated lunch bag from the fridge. \"Apple, some crackers. Diet Coke.\"\n\nCal wrinkled her nose. \"Kind of a skimpy meal.\"\n\nBrittney chuckled. Feeling a little whimsical, she slapped the side of her thigh. \"Not many calories, so these big hips aren't going to get any bigger.\"\n\n\"I didn't mean that,\" Cal said. \"Besides, you look good. I wish I was that slender.\"\n\n\"You think?\"\n\n\"Yeah, you have a nice figure.\" Cal stared into the microwave.\n\nBrittney laughed. She knew she was in pretty decent shape but it was nice to hear it reinforced. \"You're good for my ego. But it's not like anyone would notice me standing next to you. I wish I had your curves.\"\n\n\"No, you don't.\" She grabbed her chest. \"I feel like a fat, unattractive heifer with these.\"\n\nBrittney knew Cal wasn't fat at all, or even what they might have called \"thick.\" She's stacked, that's all. Her waist is narrow, she doesn't have a tummy bulge, and it's not like she's out of proportion like some of those Instagram models. She's just fine. Maybe she has some body insecurity. I get that\u2014what woman doesn't sometimes? Positive reinforcement, Brittney.\n\n\"Fat? Yeah, right. I'm sure your handfuls there are a massive\u2014no pun intended\u2014deterrent to male attention. I'm totally certain men leave you alone because you're\u2014\" Brittney hooked her fingers in the air. \"\u2014fat. Anyone who thinks that needs both head and eyesight examined.\"\n\nCal snickered. \"Thanks, Britt.\"\n\n\"You're welcome. Speaking of being left alone, Jim said he was going to move you to your own workstation when I sign off on your training. I'm going to tonight, so on Sunday night, you'll be on your own. Think you can handle it?\"\n\n\"I think so.\"\n\n\"But I have to say, Cal, that I've enjoyed our week together. You think we could keep eating lunch at the same time? I, uh, don't have a lot of friends here.\"\n\nCal turned her head and smiled. \"I'd like that. It's nice to work with someone I get along with so well. I know you said you work Fridays and Saturdays at the library but if you ever had some downtime, I'd love to hang out away from work.\"\n\n\"I actually will be off Saturday afternoon. Now that we're in September, the library has to short-staff all month. Budget issues, until the start of the fiscal year. So I'm free. I'll give you my number. Text me if you're available and we'll do something.\"\n\n\"That sounds great.\"\n\nThe women stared at each other for a moment. Brittney's mouth went dry and her heartbeat increased.\n\nThe beep beep of the microwave finishing its heat cycle broke the moment of silence. Cal blinked and turned aside to fetch her meal.\n\nBrittney sank into her chair and opened her bag. Why does that keep happening?\n\nCal joined her a moment later and dug into her dinner. She ate with unladylike gusto, which Brittney found amusing. They chatted about cooking, current happenings in Phoenix, and reality television. They swapped phone numbers and social media account information. Brittney discovered she was enjoying herself more than she had in a long time.\n\nMore than even the last few months with John. Hell, maybe the last six months.\n\nGlen entered the break room and leered at them. \"S'up, Britt?\"\n\n\"Nothing.\" The corners of Brittney's mouth turned down and she lowered her eyes to the table.\n\nGlen Jackson had been a thorn in her side the entire two years Brittney had worked there. He was tall, wore a cocky expression on his handsome face, and was pretty well-built. She would admit, in a grudging way, that he was attractive; even so, Brittney never warmed up to him. He'd also hit on her often. It was never overt or all that frequent but just enough to make her uncomfortable. By the time she was ready to file a complaint, she'd started seeing John. After that, Glen had not said another unprofessional word. Now that John was gone, Brittney felt Glen's eyes on her more often than ever. Glen considered himself something of an office lothario. She knew he'd fucked at least two other agents in the call center. Both women had complained he'd ghosted them immediately afterward.\n\nI'd just be another notch on his bedpost. Her lip curled. I'd rather throw myself under a wheat thresher first.\n\nGlen went to the fridge and plucked his lunch from inside. He walked past and paused at the table, taking in Cal, then extended his hand and put on a smile probably intended as charming but that Brittney only found slimy. \"New agent? I'm Glen.\"\n\n\"Cal.\" She shook his hand.\n\n\"Welcome to Three Spark. Hope I get to see you around.\"\n\nHer eyes narrowed. \"Sure.\"\n\nGlen left, sucking the tension from the room.\n\nCal watched him go. She tapped one finger on her chin. \"He seems ...\"\n\n\"He's an asshole.\"\n\n\"Yeah,\" Cal said, grinning, \"that's what I was going for.\"\n\n\"Fortunately, he's a floater who moves between shifts, so we won't have to see him all the time.\" She paused. \"I know he's hot but he's slept with a couple of other girls here and both of them said he ignored them afterward. Just be careful, okay?\"\n\n\"No worries, he's not my type. You about ready to get back to it?\"\n\n\"Yep.\" Brittney balled up her trash and tossed it in the wastebasket. They wandered back to her workstation and sat. Brittney logged them back in. \"We'll go over a couple more things that aren't on the checklist and I'll sign off on your training. Do you know where Jim is going to put you on the floor?\"\n\n\"He told me the desk across from you is open, that the guy on day shift who was there quit. I know you like having a buffer space from everyone on shift but ...\" Cal gazed at her. \"Would you be okay with me sitting that close to you?\"\n\nBrittney smiled. \"Yeah, I think I'd like that.\"\n\n\"Great!\" The CALL button turned green. Cal winked at Brittney, then answered, beginning her opening monologue.\n\n#\n\nBrittney rang the doorbell and waited. A quick glance at her watch told her that it was only two, so they still had plenty of time to get to the movie. She smiled to herself, thinking the past eight weeks had been great.\n\nThey really have!\n\nShe and Cal had grown close. They'd spent almost every single lunch break at work together, chatted off and on across their cubicle wall every night, and tried to hang out when they had time. Brittney discovered that she and Cal had the same understated, cynical sense of humor and the two of them had spent more than one five-minute break laughing at a call together to the point they were both in tears. They both liked to dress nicely but neither felt the need to chase fashions, and both preferred biking and elliptical over running. Each of the women confessed to harboring suspicion for political, civic, and religious authority, and they both admitted they spent too much time on their phones. Brittney had even gotten a blushing admission from Cal that she liked to watch a little porn now and then, though Cal refused to discuss what material she liked. Aside from the fact that Brittney liked to read and Cal liked to watch television, their interests and views were almost perfectly aligned.\n\nIn some ways, Brittney was amazed that they had gotten along so well, and so quickly\u2014like a long-lost twin she didn't know she'd ever had. It rapidly reached the point where Brittney considered Cal to be her best friend. She realized she'd never had one before and quite liked it.",
        "Just us, it feels like. Not like either of us has a boyfriend or anything.\n\nBrittney shifted her feet, suddenly annoyed.\n\nShe'd been spending so much time with Cal that she hadn't thought about John as much, or anyone else. Everyone at work knew what had happened to her and aside from a few smirking jerks, had been respectful about it. After John had been gone a month, another agent in the center\u2014a rather nice man by the name of Zack\u2014had asked Brittney if she wanted to get a cup of coffee. She thought he was nice enough but she wasn't sure she felt up to dating yet after John and had told Zack as much. He took it well and hadn't asked again.\n\nOn the other hand, it seems like every man at Three Spark with a pulse had taken a crack at Cal. Brittney supposed she couldn't blame them; her friend was pretty and built like a centerfold. Cal had gently rejected them all. She told Brittney that she hadn't dated since coming back to Arizona, that her last relationship in Colorado had ended badly right before her dad had passed, and that she'd since been focused on working and helping her mom.\n\nI guess I should be glad she has time to spend with me.\n\nThe front door opened, revealing a thin woman in her fifties. Deborah was taller than Cal but had the same auburn hair as her daughter, and the same infectious smile. On seeing Brittney, she smiled. \"Hi, Britt. Come on in.\"\n\n\"Thank you. Is Cal ready?\"\n\nDeborah closed the front door and waved her hand to the back. \"She's in her room. Oh, by the way, do you know if your Mom still wants to meet for coffee tomorrow? My phone died, and I think it's for good this time, so I can't text her. I'll have to go to the Verizon store in the morning.\"\n\n\"As far as I know, she does. I'll text her now.\"\n\n\"Thank you.\" Deborah returned to the living room.\n\nBrittney sent the question to her mom. Deborah and her own mother had met early in her and Cal's friendship and struck up one of their own. Brittney told her mother about Cal's father passing and that Deborah had not gotten out as much afterward. Being the empathetic soul that she was, Daphne had immediately welcomed Deborah into her life and the two had become fast friends\u2014almost as much so as their daughters. They regularly met for coffee or lunch.\n\nI'm glad. Deborah seemed so sad and lonely and Mom ... hell, Mom never says no to another friend.\n\nBrittney reached Cal's bedroom door, which was closed. She rapped on the panel. \"Hey, chica! Get those buns in gear!\"\n\n\"C'mon in,\" came the muffled response.\n\nBrittney grinned and entered\u2014and stopped in her tracks.\n\nCal stood by the bed sorting clothes. She was clad only in a plain white bra and matching underwear. Brittney could not help but notice her friend's heavy breasts and the pleasant curve of Cal's hips. Body of a model ... hell more like the body of Aphrodite herself.\n\nCal glanced at Brittney, who averted her gaze. She'd never been particularly shy around other women changing clothes or the like but for some reason, looking at Cal tickled something in her abdomen that she thought was embarrassment ... though it didn't feel exactly like embarrassment. \"Sorry, I didn't know you were dressing. I'll wait with your mom.\"\n\n\"Oh, please, get yourself in here,\" Cal said, laughing. \"Don't be a prude. Jeez, didn't you ever use the locker room at the gym?\"\n\nBrittney chuckled. Yeah, I'm being stupid. \"Okay, fine.\" She stepped inside and shut the door behind her.\n\nCal grabbed a blouse and slipped it over her head. Brittney's eyes fell to the smooth skin of Cal's legs and she swallowed hard. With the shirt on but her legs bare, Cal looked even more fetching than she had before. Brittney looked away again, more confused than ever.\n\nA moment later, she felt a quick tap on her shoulder and faced her friend again, who now beamed at her. Cal had slipped into a pair of skin-tight jeans which did nothing but highlight her legs. \"All right, Miss Drama, I'm ready. You really weren't embarrassed because I was in my underwear, were you?\"\n\n\"No, of course not.\" Brittney forced herself to laugh, as if the notion was ludicrous.\n\n\"Good, because if you were, I'd have to do something like this to pick on you.\" Cal tilted her head, leaned in close, and kissed Brittney's cheek.\n\nBrittney froze. Waves of heat radiated through her skin.\n\nCal smirked. \"But since you denied it, I won't have to do that.\" She laughed and flounced past.\n\nBrittney stared at the wall. One hand touched the spot on her cheek.\n\nWhat the hell is wrong with me? I've jokingly kissed other girls on the cheek and vice versa, and never felt like this. That was like if a guy kissed me. It was ... I ... She shook herself. You're wigging out over nothing. Quit being a weirdo.\n\nHer phone chimed and she saw it was a message from her mom, confirming her coffee appointment with Deborah. Brittney blinked, pushed her odd thoughts aside, and left Cal's room to let Deborah know.\n\nIt was a cool afternoon by Phoenix standards, so they drove with the windows down, enjoying the fall air. Cal's curly hair bounced and flowed in the breeze, eliciting a grin from Brittney. She so enjoyed time with her pretty, vivacious friend.\n\nThey stopped at a light. A nice-looking shirtless guy with a lanky, muscular frame, a square jaw, and dark hair guided his bike across the crosswalk. Brittney eyed the man's flat stomach and growled. \"Oh, check out the scenery.\"\n\n\"Nice,\" Cal replied. Her eyes tracked the guy as well. \"That's one hell of a six-pack. I bet he could put a hurting on a woman.\"\n\nBrittney giggled as the biker reached the far corner. \"I'm tempted to call him back. About the only thing I miss about John right now was the lovin'. That was never a problem between us. I'll flip you for Shirtless there.\"\n\n\"You go ahead. I can't do straight hookups anymore. I did a few but ...\" Cal shrugged. \"It wasn't for me.\n\n\"Me either but for a guy like that, I might make an exception.\"\n\nBrittney hadn't ever had a one-night-stand. She had only ever been with three men, all of whom had been long-term relationships. In her two years with John, she'd gotten used to steady sex. With him now gone and her sex life stalled, Brittney noted her anxiety inching upwards over the weeks. Her fingers and magic wand helped take the edge off to keep her sane. Still, it felt a little naughty and exciting to contemplate some no-strings fucking with a hot guy.\n\nCal jerked her chin in the direction the biker had gone. \"I'd have to get to know him for a while first and a man like that probably isn't willing to put in the time. Just looking at him, I bet he has a whole stable of ready-to-go girls he can pick and choose from. I'm used to that. It's been a year since I had a steady relationship.\"\n\n\"I thought you said you had a bad break-up right before your dad passed.\"\n\nCal stared straight ahead.\n\nBrittney laughed as the answer occurred to her. \"Oh, you meant you had a friend-with-benefits.\"\n\nHer friend smiled, though Brittney thought it was somewhat forced. \"Something like that.\n\nA nagging notion, that she was missing something, teased the fringes of Brittney's mind but she couldn't quite lock it down. She shrugged. The light turned and they drove on.\n\n#\n\nCal was already at her desk when Brittney arrived and flopped at her desk. \"Hey.\"\n\n\"Hey, yourself.\" Cal picked up her headset. \"Another Tuesday evening in the trenches, right?\"\n\n\"Yep. You and your mom still coming over Thursday?\" Because it was just the two of them, Daphne had invited Deborah and Cal to Thanksgiving dinner with the family. Brittney was looking forward to it. She was excited but nervous for her siblings to meet Cal and hoped they would like her as much as she did.\n\nCal opened her mouth to answer but a call came in. She held up one finger and answered. Brittney sat down and logged in. Immediately, her own call came in. She quickly learned that there had been a major outage in Kansas for one of their contracted providers, following an outbreak of thunderstorms. Complaints and requests for assistance tumbled in one after another, drowning her in work, and before Brittney knew it, it was almost one. As soon as she had a crack in incoming calls, she placed herself on her lunch break and logged out. Cal was still on the phone. Brittney pointed toward the break room; Cal gave her a thumbs up and held up three fingers ... which, from the signals the two of them had worked out, meant she thought had about three more minutes on the current call. Brittney smiled and nodded, and headed to the break room. She fetched her meal, sat, and waited.\n\nShe saw movement out of the corner of her eye and turned to the door ... though the smile on her face died when she saw it was Glen Jackson and not Cal. Her lip curled; Cal had mentioned that Glen hit on her a few days after she started working there, then again a month ago\u2014this time acting stalkerish enough to wait by the door to catch her on the way out and follow her to her car after her shift. Cal had said she'd put him in his place and blistered his ears when he hadn't backed off fast enough. Brittney kind of wished she had seen that.\n\nNow, she faced forward and scowled, hoping he wasn't going to hang out in there.\n\nGlen popped his dinner in the microwave. \"Hey, Britt.\" His grin alone made Brittney feel filthy. \"Waiting for your girlfriend?\"\n\n\"What's it to you?\"\n\n\"I should have guessed that's why John actually left.\"\n\nWhat the fuck is his problem? This is way over the line. She glared at him. \"Glen, leave me alone.\"\n\n\"Hey, don't get mad at me because he figured out you were a dyke.\"\n\n\"What does that even mean?\"\n\n\"Talking about you and the carpet muncher out there.\" He smirked. \"All makes sense now.\"\n\nThe blood drained from her face. \"What the hell are you talking about?\"\n\n\"You and Cal. It's pretty obvious y'all are bumping uglies. John was a man and no man wants to play second fiddle to some lesbian.\" His face took on a mock-serious look, though the malevolent gleam in his eye remained. \"Don't get mad, Britt. Talk nice to me and maybe I can give you a stiff rod, get you back on the right course ... you know, fuck the gay out of you. That's all you messed-up chicks need.\"\n\nBlood roared in her ears. Brittney's nostrils flared. Her hands curled into fists.\n\nGlen blew her a kiss and turned toward the microwave ... revealing the unsmiling face of their shift supervisor, who stood in the door of the break room. Glen's eyes grew wide. \"Oh, uh ... hey, Jim, I\u2014\n\nJim pointed. \"My office, Mr. Jackson. Now.\" He stepped aside as Glen nervously stepped past him, shot an unreadable glance at Brittney, then vanished, following Glen.\n\nShe stared at the doorway. What the hell just happened? Glen thinks I like girls? Or is he just yanking my chain? I don't understand\u2014 A thought occurred. Cal's attracted to women? How did I miss that? Now that the notion was in her head, Brittney rapidly saw all the signs she'd overlooked before. Oh my God. How stupid am I? Wait a second ... Another thought punched into her mind. Did ... did she spend all this time with me because she likes me that way? No, of course not. She's been a great friend. Hasn't she?\n\nIt all became too much. She placed her elbows on the table, put her head in her hands, and rubbed her eyes for a moment.\n\nGentle fingers touched her shoulder and Brittney's head shot up.\n\nCal smiled at her. \"Hey. You okay?\"\n\n\"Uh, yeah.\"\n\n\"I just saw security escorting Glen Jackson out. Jim said he was terminated for harassment.\" She chuckled and pulled her salad from the fridge. \"Tonight's not a total loss after all.\"\n\nBrittney nodded, unsure what to say.\n\nCal sat and popped the lid on her dinner. She sprinkled Parmesan cheese and then scattered croutons over the Romaine leaves. \"Something bothering you, Britt? You look a little pale.\"\n\n\"Are you gay?\"\n\nThe other woman paused in the act of stabbing her fork into her salad and regarded Brittney with stony eyes.\n\nDamn it, why did I say that? Her hands twisted her napkin. \"I-I'm sorry, it just slipped out.\"\n\n\"Why did you ask?\"\n\n\"Just something Glen said. I apologize, it's none of my business.\"\n\nCal put her fork down. \"Well, as it happens, Brittney, I'm actually bisexual.\"\n\n\"Oh.\" Brittney gave her napkin another twist. As if two wires had suddenly snapped together to allow the current to flow, her brain caught up to what her friend had said in the car weeks before. \"The bad breakup you had before your dad passed. That wasn't a friend-with-benefits with a man ... you were dating a woman?\"\n\n\"Her name was Sasha. Russian. Pretty.\" A husky, wistful laugh escaped Cal's lips. \"I liked her a lot but as they say, she had problems keeping her legs closed. Being cheated on isn't just for straight couples.\"\n\nBrittney sat still, not knowing what to do. She fell back on an old standard. \"W-why didn't you tell me that you're, uh, bi?\"\n\n\"Probably because I've had this exact reaction from people far too often.\" Cal crossed her arms. \"Let me guess: you think I became your friend because I was attracted to you and wanted to hit on you. Is that it?\"\n\n\"It crossed my mind,\" Brittney admitted, \"but when I thought about it further, I thought about how much I enjoy your company. I feel like we're best friends and I love that about us. Was ... was I wrong?\"\n\n\"No and I don't know if I can explain to you how frustrating this is or how many times I've had this conversation.\" She leaned back in her chair and stared at the ceiling for a moment. \"A bisexual woman can be friends with another woman without wanting to fuck her. I wish people understood that.\"\n\nBrittney sat mute.\n\nCal lowered her head. She sighed and her face grew sad. \"Is this going to be a problem? If you don't want to be my friend anymore, I understand\u2014\"\n\nBrittney's stomach clenched. The idea of setting aside her lovely, happy friend was horrible. She blurted, \"No!\" Seeing Cal's shocked look, she fought down her panic. \"No, that's not what I want at all. I was just surprised and I think I felt a little stupid that I never picked up on it. I still think you're fantastic. I wasn't lying. You really are my best friend, Cal.\"\n\nThe downcast look fell off Cal's face, replaced by a slight grin. \"Okay. I think you're great, too.\" She picked up her fork. \"You have questions? I mean, I don't walk around advertising my status but if I can help you understand, I'm willing to talk about it. I don't think you'd go around talking about me behind my back.\"\n\n\"I'd never do that to you.\"\n\n\"I believe you.\" Cal took a bite.\n\nShe felt a pressing need to lighten the mood and took a chance. 'So ... was that you saying I'm not fuckable?\" She braced, ready to apologize.\n\nCal gave her a sharp glance but relaxed on seeing Brittney's grin. She winked. \"No, you're too skinny for me. But if we ever fall in love, I'll let you know after.\" \n\nBrittney laughed. Cal had said the last bit in a light, joking tone but deep in her mind, Brittney knew Cal had left that door open. Perhaps just a crack but open nonetheless. A swirl of emotions she didn't understand crowded at the threshold of that door. The momentary vision of her and Cal together filled her thoughts. She shook her head to dispel the image and hurried on, glad that they'd moved past the moment of hurt. \"So ... you've been in relationships with both men and women?\"\n\n\"Yeah.\" Cal paused. \"But not at the same time. It works for some people but for me, that would be cheating.\"\n\n\"I didn't\u2014\"\n\n\"I know you didn't but a lot of folks do. You'd be surprised how many people assume that everyone that's bi likes to hop from a man to a woman overnight, or engage in threesomes, or more, and that's not me. I'm a one-lover woman.\" She gestured with her fork in the direction of Brittney's meal. \"You better eat.\"\n\n\"Okay, Mom.\"\n\n\"Someone has to take care of you.\"\n\n\"I know, I need lots of supervision. Do, uh, you like men or women better?\"\n\nShe shrugged. \"It doesn't work that way, Britt. When you're bisexual, you're attracted to the person, not their gender. If I love someone, it doesn't matter if it's a boy or a girl. Hell, it wouldn't matter if they chose to identify as some other gender either, though that's never come up. Sure, men and women are different sexually and they both have their own advantages, but I never think about it in those terms.\"\n\n\"Does your mom know?\"\n\n\"Yes and she doesn't care. She just wants me to be happy with whoever I'm with.\"\n\n\"I see.\" And Brittney thought she did see. She watched her friend while they both ate and tried to decide if this newfound knowledge changed anything.\n\nNo, of course it doesn't, she thought. Cal is just as awesome as she was a half-hour ago. The other, that doesn't mean anything.\n\n\"Anything else?\"\n\n\"No, and Cal? Everything you said ... it doesn't change a thing. You're still stuck with me.\"\n\nCal's answering smile made Brittney warm all over.\n\n#\n\n\"Brittney!\" her mom barked, pointing at the stove. \"How long has that pie been in?\"\n\n\"Shit, I forgot to set the timer.\" She fumbled with the oven mitt, yanked the door open, and pulled out the glass pie dish. The crust had developed a caramel brown at the edges\u2014dark without being burned. She stuck a kitchen knife into the center of the pie and pulled it out. The knife came away clean. \"A little brown but not burned. The center is done.\"\n\n\"All right, but pay attention to the last one. I don't have time to make up another one.\" Daphne hefted the hand beater and with the whir of an electric motor, began thrashing an enormous bowl of mashed potatoes again.\n\n\"Like anyone would notice if there was a single pie missing,\" Brittney grumbled under her breath. Between her low volume and the running beater, she didn't think her mother had heard her, which was probably just as well. Considering her normally sunny nature, Daphne turned into an utter drill sergeant in the kitchen. Brittney stuffed the last pie in the oven. \"It's in now. Okay?\"\n\n\"Okay. Pay attention!\"\n\nBrittney thought there was little utility in pointing out that Thanksgiving dinner was only going to consist of their family, all of whom loved Daphne so much they'd be happy if she served them twigs and pebbles for dinner, and Deborah, who was a good friend. And Cal.\n\nShe couldn't wait to introduce her best friend to the rest of her family.\n\nShe smiled, wondering what her friend would make of her siblings and father. Brittney's family was plain-spoken, outgoing, and friendly but all of them at once could be overwhelming. She just hoped Cal and Deborah would enjoy themselves.\n\n\"Brittney!\"\n\nShe blinked and looked at her mother. \"Huh? Sorry, I was daydreaming.\"\n\n\"Set the timer for that pie!\" She wiped her hands on a dishrag. \"I swear, girl, sometimes I wonder if you got dropped on your head too much as an infant.\"\n\n\"If I did, it was your fault.\"\n\n\"No, that was your dad,\" Daphne said with a straight face. \"I did all the good loving.\"\n\nBrittney laughed and set the timer. \"Mom, everything's going to be fine. You can stop panicking.\"\n\n\"I'll stop panicking when it's over.\" The doorbell rang. \"Get that, would you? Probably Maya. I can't get that woman to realize this is her home too now. Go, go!\"\n\nBrittney didn't argue. Her mom loved hosting and loved feeding her family and guests. She only accepted Brittney's help with a grudging admission that she couldn't quite do all the prep by herself and had even chased both Monica and Paul out of the kitchen when they tried to help. Brittney had laughed to herself a few days earlier when, in the interest of sparing her mom the work, her dad had seriously attempted to have the event catered, and Daphne had almost torn his ears off for daring to suggest such a thing, saying she wasn't going to serve her grandchildren someone else's Thanksgiving meal in her own home.",
        "She reached for the doorknob, expecting to pull it open and see Maya, Chris's wife of two years, standing there. Maya had grown up with parents who had drilled \"proper\" manners into her head and no matter how much Daphne insisted that Maya was family and could just walk in their home without knocking, Brittney's sister-in-law wasn't comfortable doing that. Brittney yanked open the door, ready to give Maya a bunch of crap. Instead, there was the happy face, curly auburn hair, and bright blue eyes that were so familiar and so welcome. Brittney couldn't contain her smile. \"Hey, Cal!\"\n\n\"Hi, lady,\" Cal said. She wore a teal knee-length dress that left her arms bare. She had pulled her curly reddish-brown hair into an upswept do that left stray coiled strands framing her face. Before Brittney could do more than smile in return, Cal stepped forward and hugged her. Brittney closed her eyes and sighed; her friend's body was warm and her skin soft. After a moment, Cal stepped back.\n\nBrittney's eyes fell on the other person there. \"Hi, Deborah. Happy Thanksgiving.\"\n\n\"Same to you, Britt.\"\n\n\"Come in, come on in.\" She stood aside to let them enter.\n\nAs they stepped inside, Brittney's mom appeared. She swiveled her head, spotted them, and grinned. \"Hey, you two. Come into the living room. Everyone but my number three and his wife are here.\"\n\nDeborah hefted a wine bottle. \"I brought a bottle of wine.\"\n\n\"Oh, you!\" Daphne said in a simpering tone, \"You shouldn't have.\"\n\nBrittney rolled her eyes. \"Mom, you told her to bring it because that's all you would accept.\"\n\n\"It doesn't feel like enough.\" Cal's mom peered into the kitchen. \"Can I help with\u2014\"\n\nDaphne gave an emphatic shake of her head. \"Absolutely not. I insist you come relax. There are snacks laid out and I'll get you a drink.\"\n\nDeborah opened her mouth to argue but Brittney shook her head and put her index finger on her lips. She leaned toward Deborah and mock-whispered, \"Don't offer to help. You'll just get yourself thrown out for challenging Sergeant Sourpuss.\"\n\nDaphne shot Brittney a dirty look but handed the wine to her, then took Deborah by the arm and led her into the living room, leaving Brittney and Cal alone in the hallway. Welcomes and happy conversation drifted out.\n\nCal put her arm around Brittney's shoulders. \"Your mom is kind of intense today.\"\n\nWithout thinking, Brittney snaked her own arm around Cal's waist and gave her a friendly squeeze. \"She always gets like this when she's hosting people ... even friends and family.\" Brittney stepped back, then looked Cal up and down. \"Not too bad, woman. You clean up nice.\"\n\n\"You like it?\" Cal smiled with girlish glee and spun in a slight circle. \"New dress.\"\n\n\"It looks great on you. Want to help me for a moment?\"\n\n\"Yeah, lead the way.\"\n\nShe walked to the kitchen with Cal at her side. Brittney bit her lip. The dress wasn't low cut or tight or anything but still offered a hint of cleavage and the soft material meant Cal's bust and hips were clearly outlined. She knew she shouldn't have been staring but something compelled her to keep swiping peeks at her friend. Then, just as they reached the kitchen, she caught Cal's eyes on her. \"What?\"\n\nCal blushed. The rosy glow spread over her cheeks. \"Nothing.\"\n\nBrittney glanced down, concerned. \"Did I get food on myself or something?\"\n\n\"No. It's just ... you look nice too.\"\n\nBrittney set the bottle on the counter and looked down at herself again. She'd worn a blue and white striped shirt, khaki pants, and leather sandals. She'd braided her hair and tied a white ribbon in the shape of a bow to hold the braid in place. She supposed that if someone made a reach, they could say the pants highlighted her ass, but even that would have been a stretch. Nothing about the outfit screamed \"effort.\"\n\nI'm sure she's just being nice.\n\nCal looked around as she entered. \"Whatcha need help with?\"\n\n\"Are you kidding me?\" Brittney asked with a snort. \"Her Highness out there will have an aneurysm if I do anything other than taking this pie out of the oven. I just wanted a few minutes with my best friend before she gets swallowed by the mob.\"\n\n\"Well, gee shucks, I love you too.\"\n\n\"Ha! You want a beer?\"\n\n\"Please.\"\n\nBrittney had to root in the fridge, behind her father's beer, to find the brand of lager that both she and Cal liked. She finally did, plucked the two bottles out, and straightened. As she shut the refrigerator door, she felt Cal's eyes on her and a semi-alarming thought occurred. Brittney spun and looked at her friend, who had a mischievous smile on her face. \"Were you looking at my ass?\"\n\n\"It's a nice ass.\"\n\nBrittney gawked at her.\n\nCal's husky laugh filled the room. \"I'm just messing with you, Britt.\"\n\n\"Oh.\" Relief warred with something Brittney couldn't identify right away. It took her a moment to realize it was disappointment that her friend's compliment wasn't genuine. \"Then why were you looking at me?\"\n\n\"You'll tear yourself up if I don't tell you, right?\"\n\n\"Right.\"\n\nCal smiled, plucked her beer from Brittney's grasp, and walked out of the kitchen.\n\nShe's screwing with me again. Brittney rolled her tongue over her teeth, then gave a rueful laugh. Before she could so much as take another breath, another thought pierced her mind.\n\nWhat if she wasn't?\n\nBrittney pondered it for a moment, then followed her friend and joined the crowd.\n\nAlmost immediately, Cal fell in with Monica and Paul's wife Haley. Haley, who was always the touchy-feely type, gushed over Cal, touching her arm, complimenting her dress, and calling Cal, \"absolutely adorable.\" Moments later, a smiling Cal sat surrounded by chattering people, cradling Paul and Haley's youngest in her arms.\n\nAt that moment, Brittney thought her friend was so beautiful and serene that her own heart actually skipped a beat.\n\nChris and Maya arrived a short time later, and Daphne called them all to dinner. Brittney sat next to Cal, who leaned over and whispered, \"Thanks for inviting us. Your family is awesome.\"\n\nBrittney nodded. \"I'm glad you could come.\"\n\nCal's eyes lingered on Brittney, an unfathomable look deep in her gaze.\n\nThe group ate, laughed, and shared stories. Brittney blushed as Paul told the story of how Brittney, as a toddler, used to strip off her clothes and run around the front yard in full view of the neighbors. Everyone around the table laughed, including Deborah and Cal\u2014the former gently, the latter uproariously to the point of getting the hiccups. Her cheeks flushed, Brittney crossed her arms and pouted.\n\nCal leaned toward Brittney. Her voice was soft and teasing. \"I didn't know you were into streaking.\"\n\n\"Hmpf.\"\n\n\"Oh, relax.\" Cal patted her knee. \"He's just picking on you. Besides, it's a cute story.\"\n\nBrittney smiled. \"I know. Thanks.\"\n\nThey stared at each other for a moment. Then Cal's eyes widened slightly and she yanked her hand off Brittney's knee. Cal whipped her head the other way but not before Brittney caught the tears pooling in her friend's eyes and the trembling of her lower lip.\n\nConcern flared. Brittney said, \"Cal? Are you okay?\"\n\n\"I'm fine,\" came the hoarse, whispered response.\n\nBrittney started to say something but her father Mario chose that moment to stand, clink his knife against his glass, and make the same speech she had heard him give at every Thanksgiving for as long as she could remember. Cal turned back to watch him as well. She flicked her eyes at Brittney and gave her a forced smile.\n\nBrittney glanced past Cal and saw Deborah watching her with an undecipherable expression. She slumped against her chair, trying to pay attention to her dad's words, though her thoughts were on the woman at her side.\n\n#\n\nThe phone rang and a woman's soft voice came over the line. \"Hello, Brittney.\"\n\n\"Hey, Deborah. Got a moment?\"\n\n\"Sure.\"\n\n\"Do you know if Cal is mad at me or anything? I thought things were going good the other day and then all of a sudden she clammed up and got very quiet. She was kind of subdued tonight at work. I mean, she said nothing was wrong but ...\" Unsure what else to say, Brittney trailed off.\n\n\"No, I don't think you made her mad, Britt.\" Deborah paused. \"She just gets overwhelmed by emotion sometimes. She'll be okay. She gets excited about Christmas.\"\n\n\"Oh. Well, that was the other reason I called. I've been thinking about Christmas. Cal told me about a doll she had as a little girl and even showed me pictures of it online. \n\nDeborah chuckled. \"Oh, you must mean Princess Posey. It was a cheap doll but she loved that thing. I don't know how many times I stitched it back together. Cal was nine when it finally fell apart. She cried for two days. I looked for a while but couldn't find a replacement.\"\n\n\"That's the one.\" Brittney fought to keep her mounting excitement under control. \"I found a new one on eBay, still in its box. Do you think she'd like that?\"\n\n\"Uh, I think she would, Britt, but I'm sure it's too expensive.\"\n\n\"Oh, I have a fair bit of money saved from when I was going to buy a house. I can spend a little, especially on my best friend.\"\n\n\"I don't think this is a good idea, Brittney.\"\n\nShe frowned. \"Why? Are you not sure whether she'd like it? Is the memory going to be painful?\"\n\n\"No, it's just ...\" Deborah sighed. Her voice grew resigned. \"Never mind, Brittney. I think she will like that very much. Look, I need to go.\" They said their goodbyes and disconnected.\n\nBrittney stared at her phone. She was tempted to call back and grill the woman for more details. No, I might just make her mad. She said Cal would be okay. I'll have to ride it out. In the meantime ... She pulled up the auction website on her phone, hit the \"Buy Now\" option, and paid. The doll was a little expensive but a slow grin spread over Brittney's face as she anticipated Cal opening it. Brittney fell asleep, optimistic that things were going to be all right.\n\nTrue to her mother's words, Cal seemed a little more upbeat that night. She smiled more, though Brittney caught her friend watching her more often, and thought, She must have felt the disconnect too. Nice to have my friend back. They ate their lunch that evening and as near as Brittney could tell, things between them were as they always had been. She smiled to herself, the excitement of the gift burning a hole in her mind.\n\nWeeks fell off the calendar. \n\nBrittney proposed an early gift exchange with Cal, who agreed. Brittney would be working Christmas Eve and Day but Cal and her mother would be leaving four days before Christmas and going to Salt Lake City for a week to spend the holidays with extended family. She managed to smuggle the box in and stash it under her desk without Cal seeing it. Thinking about Cal opening her present made Brittney positively giddy and she could hardly contain herself through the first few calls before they placed themselves on break.\n\nCal stretched as they walked to the break room. She gestured to the garlands and decorations around the Three Spark office. \"It doesn't matter how many wreaths I see or noels I hear. It's hard to get into the Christmas spirit when it's still getting over sixty every day. I much preferred the holidays in Colorado. 'White Christmas' was a thing there.\"\n\n\"I'm not sure I have ever seen snow on the ground here on Christmas day. That would be neat to see it.\"\n\n\"Maybe we could go see it together one year.\"\n\n\"That might be fun.\"\n\nWhile their dinners were heating up, Cal dipped her hand in her pocket and pulled out a small wrapped box. She held it out in front of her. \"Merry Christmas, Britt. I hope you like it since you wouldn't tell me what you wanted.\"\n\nBrittney smiled. She took the gift and opened it, revealing a small box. When she doffed the lid, she gasped. A pair of sparkling earrings lay within. Green gems glinted under the break room light. \"Oh my ... are those emeralds?\"\n\n\"Yes.\"\n\n\"Oh God, those are beautiful! Thank you, Cal!\" Brittney hugged her friend, who gave her a soft pat on the back. When Britt pulled back, she pocketed the box. \"Wait here.\" She hurried back to her desk, grabbed the present, and trotted back to the break room.\n\nCal's eyes lit up when she saw the box. She took it with eager hands. \"Oh my. Let me guess, a pair of shoes?\"\n\n\"Maybe. Merry Christmas!\"\n\nShe shook the box and Brittney laughed. \"That's cheating.\"\n\n\"I always like to try and figure it out.\" Cal peeled the paper back and exposed the doll, in its original box, but clearly visible behind the cellophane window. Her eyes widened; one hand covered her mouth and she became stock still.\n\nBrittney held her breath.\n\nCal stared at the doll for a long moment. \"Where did you find this?\"\n\n\"I have my sources. It took a little while. I had to keep a close eye on some different sellers and\u2014\"\n\nCal looked up and Brittney was alarmed to see tears streaming down her face. \"Cal, are you\u2014\"\n\n\"Thank you!\" Cal sprang out of the chair, somehow placing the doll on the table and tripping into Brittney's arms at the same time. Her arms locked behind Brittney's head, crushing their bodies together so tight Brittney wasn't sure she was going to be able to breathe.\n\nA soft kiss touched her cheek and Cal's sultry voice, now quivering with barely-contained sobs, whispered in her ear. \"This is absolutely the nicest thing anyone has ever gotten me for Christmas. Thank you so much.\"\n\n\"You're welcome.\"\n\n\"Not just for this.\" Cal separated herself. She placed her hands on either side of Brittney's face. \"Thank you for being my best friend. What did I do deserve you?\"\n\n\"I don't know but I'd say we're both lucky.\"\n\nCal bit her lip. Her luminous eyes never left Brittney's. They gazed at each other for a good thirty seconds without moving or speaking.\n\nBrittney's breath caught in her throat.\n\nVoices drifted from just outside the break room.\n\nCal flinched and pulled away. She wiped her eyes and turned to the microwave.\n\nBrittney stood stock still. What the hell? What the ... She shivered and gathered her meal as well.\n\n#\n\nThey texted the whole time Cal was away. Brittney had never been someone who panicked when she didn't get an immediate text back from someone but she found herself growing impatient, waiting on Cal to get back to her. She knew she would miss having her friend around but it felt more than that, as if part of her own soul had been cut away. The nights at work were the hardest and the quiet she had enjoyed immediately after John had left now felt ominous and depressing.\n\nOn Christmas Day, she took a break from opening presents with her family and shot a text to Cal wishing her a Merry Christmas. A few minutes later, her phone chirped with an incoming message, which she eagerly opened. It contained a picture of Cal lying on her back on a bed. She wore a simple tank-top and her glorious hair fanned out on the bedspread. In her arms, Cal clutched her doll to her chest. The message accompanying the picture read, \"Merry Christmas from your favorite girls.\"\n\nBrittney stared at the image. Even though it was static, she could plainly see the joy in her friend's eyes. She's happy and I did that for her. She held up her phone. \"Hey, I just got a message from Cal.\"\n\nHer brother Paul rolled his eyes. \"Jesus, Brittney, again? Are you ever going to stop talking about her?\"\n\nShe blinked. \"Huh?\"\n\n\"You've been yammering about Cal nonstop for three days. Give it a rest.\"\n\nShe stared at him. Have I? I didn't even realize it.\n\nPaul's wife Haley slapped his arm. \"Shut up, you.\" She turned her attention back to Brittney and beamed her a smile. \"You're fine, Britt.\" She noticed her mother and her sister Monica smiling as well. No one else paid her any further mind.\n\nWhat was that all about? Then Monica's son tried to get his \"Aunt Briti's\" attention and she forgot about it.\n\n#\n\nBrittney stretched and groaned. \"Another Sunday night, and I ain't got no-bod-eeeee.\"\n\nCal winced. \"Don't sing. Please.\"\n\n\"I have the voice of an angel.\"\n\n\"No, you have the face of an angel. You have the singing voice of a cat being slow-cooked.\"\n\n\"Harumph.\" Brittney adopted a mock-glare but was snickering too hard to pull it off. \"Well, fine, then, I won't share any of mom's cookies with you.\"\n\n\"Daphne made cookies? Okay, I take it back. Hand them over.\"\n\n\"After your dinner. Didn't you learn anything as a kid?\"\n\n\"Nope.\" Cal glanced back at her meal, rotating inside the microwave. \"Besides, perks of being an adult is you can have your dessert first.\"\n\n\"Yeah,\" Brittney said, snickering. She gazed at her friend.\n\nSince Cal had returned to work right after New Year's, they'd spent almost all their time together, both at work and their time off. Brittney was always happy to see her pretty, wonderful friend; she hated every time they had to separate and looked forward to every time they got back together. The more she thought about it, the more Brittney realized that Cal had become the most important person in her life. The thought made her a little uneasy at times, since she wondered if she was becoming obsessed with Cal ... but when they were together, all she knew is that she was happier than she was at any other time.\n\nShe shrugged. Worrying about nothing. She said, \"So, Valentine's Day is Tuesday. Any big plans?\"\n\n\"You know I don't. You either, right?\"\n\n\"Nope,\" Brittney said with a laugh. \"A couple of dateless wonders. Maybe we can hang out and watch sappy movies and cry or something. You know, misery loves company?\"\n\nCal flicked a glance in her direction. \"We don't have to be miserable.\"\n\nThe microwave beeped, saving Brittney from having to answer. Cal rotated the container and started a second heating cycle. Delightful scents wafted past Brittney's nose. \"Smells good.\"\n\n\"Oh, it is. Mom's homemade meatballs, plus some provolone, equals deliciousness.\" \n\nBrittney looked at her grilled chicken salad and scowled. \"Me, I've been pigging out lately. I'll be on rabbit food for the near future.\"\n\n\"I think you look good.\"\n\n\"You only say that because you've got the body of a Victoria's Secret model.\"\n\nCal blushed and lowered her eyes. \"Kind of you to say so.\"\n\nAwkwardness filled the room. Brittney stammered, \"Yeah, I ... uh ...\"\n\nThe microwave beeped a second time. Cal removed the tray and joined Brittney at the table. She spooned the meatballs into her hoagie bun, laid the cheese on top, mashed it together, and took an enormous bite.\n\nBrittney giggled. Whatever else Cal was, she was no dainty eater.\n\nCal's eyes closed in half-lidded pleasure. \"Mmm. Good.\" A smear of marinara decorated the corner of her lip.\n\nBrittney leaned across the table. \"You have a little ...\" She wiped the smear from Brittney's lips with her thumb.\n\nCal froze, staring at her wide-eyed.\n\nRecognition of what she'd done dawned. Heat filled Brittney's cheeks.\n\nCal set down her sandwich. She whispered, \"I can't take this anymore.\"\n\n\"Huh?\"\n\n\"Brittney, you know how much I've come to treasure our friendship, right?\"\n\n\"Yes, so do I.\"\n\n\"And I think you're really great.\" Cal laid her hand atop Brittney's.\n\nA lump formed in Brittney's throat. \"A-and I think you're great too.\"\n\nCal removed her hand and stood. She stepped to the side of the table, closing the gap between them.\n\nBrittney sat transfixed. Her body felt cold and the palms of her hands erupted in clammy sweat. Her lower lip started to shake. The feeling of anxiety paled in comparison to the terror coursing through her system. Despite all that, she could not take her eyes from Cal's.\n\nCal glided her fingers of her right hand across Brittney's cheek and brushed her dark hair back from her face. She leaned across Cal, propping herself with one hand on the table. Her blue eyes shone with excitement. Ever so slowly, she tilted her head in. Her eyes were half-closed and hot breath skittered over Brittney's skin. Unable to help herself, Brittney closed her eyes as well.",
        "When their lips met, Brittney thought her heart was going to explode.\n\nSynapses fired all through her body, blasting her with flames of heat and arctic frost at the same time. Her mind stopped telling her lungs to draw breath and her heart thumped faster than she ever recalled. Cal's kiss was gentle. She didn't attack with her tongue or teeth. Her lips were soft and warm and moist, and her touch was so tender, that in spite of herself, Brittney's body responded. A twinge of excitement rippled through her torso and her legs pressed together. Almost unconsciously, her hand twitched, rising to touch Cal's forearm.\n\nShe's kissing me.\n\nLike a bucket of cold water thrown over a fire, the thought blasted Brittney's arousal from her thoughts. Her eyes flew open and she wrenched her head back.\n\nCal's eyes opened. \"What?\"\n\nHer hands shot to Cal's arms\u2014not pushing her away but preventing her from getting any closer. Brittney said, \"Cal, please don't.\"\n\nShe blinked. \"You ... don't want this?\"\n\nBrittney shook her head, wondering if she believed it herself. Her skin was flushed, her breathing was heavy, and her loins trembled.\n\nA range of emotions flickered across Cal's face: shock, disbelief, embarrassment, and at last, sadness. She tore her eyes away. The pain in her voice made Brittney's stomach clench. \"I-I'm sorry, Britt. I ... I thought after you touched me just now ... I ...\" She choked back a sob. \"I'm sorry.\" She ran out of the break room before Brittney could say another word.\n\nBrittney stared after her. She touched her lips with one finger, then ran her tongue across them. She could still taste Cal's perfume and lipstick on her skin. Brittney shivered; as much as she hated to admit it, the shiver was partly born of desire.\n\nI ... I can't lie. I liked her kissing me. I was turned on. But I'm not attracted to women. Am I? I mean, I never have been before. Or is it just Cal that makes me feel this way? I like her but ... Brittney groaned and rubbed her face with both hands. Jesus, what a mess.\n\nThe end of her lunch approached and Cal had not returned. Brittney wrapped up both their meals and returned them to the fridge before returning to her desk.\n\nCal was not at her desk and did return even after an hour. Concerned, Brittney clocked out on a five-minute break and sought out Jim. She found him in his office, where he sat staring at his computer screen. Her knuckles rapped on the frame of the open door. \"Jim?\"\n\n\"Ms. Garcia. What can I do for you?\"\n\n\"Cal\u2014I mean, Ms. Beatty\u2014never came back to her desk.\"\n\n\"She requested an emergency leave for the remainder of her shift, citing 'personal issues.' \" Jim fiddled with a pen. \"Why? Is there some issue I need to know about?\"\n\n\"No, nothing like that. Sorry to bother you.\"\n\nDisheartened, Brittney trudged back to her desk, a sense of loss shrouding her soul.\n\n#\n\nBrittney gripped the phone. Her hopes perked when she heard the click of the phone being answered ... then plummeted again when she realized it was voice mail. The cheery recording of Cal's voice echoed across the connection. \"Hey, this is Cal. Leave a message. Bye!\"\n\n\"H-hi, Cal. It's Brittney.\" She felt rather foolish saying that since Cal knew both the number of her incoming call and her voice. However, she thought there had been enough misunderstandings already. \"Call me, okay? Please?\" She thumbed the button to disconnect, hoping her friend would return her call. She didn't think Cal would, though.\n\nI mean, she hasn't returned any of the other three calls.\n\nBrittney glanced at the clock and sighed. She had to go to work. She got dressed, went to the kitchen and assembled her meal, then sought out her parents to let them know she was leaving.\n\nShe found them in the family room. Brittney paused in the doorway. Her mom and dad had finished the day's events, cleaned up after dinner, and now lazed on the couch watching a movie together. Mario sat with his sock-clad feet on the wooden coffee table. Daphne had curled against him, her head on his chest. The sight brought a smile to Brittney's face. Even after over thirty years together, her folks were still in love as much as they had been the day they got married. Maybe more.\n\nI wonder what it will take for me to find that level of love.\n\nAt thoughts of romance, she was prepared for a wistful memory of John. It was what usually happened when she considered her love life. Instead, all her mind's eye saw was Cal. \n\nBrittney's skin flushed. Why do I keep doing that?\n\nHer father caught sight of her at the entry. \"Hey, kid. You off to work?\"\n\nShe nodded.\n\n\"Be careful, sweetie.\" Daphne gave her a slight wave without lifting her head from her husband's chest.\n\nThe drive was uneventful, like most evenings. Brittney drove the streets of Tempe with practiced ease, only half paying attention to the other cars and drivers. The rest of her mind dwelt on her mounting anxiety.\n\nShe hadn't wanted to see Cal again without hashing out what had happened. Confronting someone at the call center was bad for a number of reasons. For one, an argument or even a loud discussion would draw the wrong kind of attention. She had a good working relationship with her supervisor Jim and was loathe to damage that. Brittney also did not feel like airing her dirty laundry to the rest of the night crew. If she made a scene, even if she avoided getting fired, everyone there would know and Brittney herself would be the subject of endless gossip and ribbing.\n\nMore than those reasons, though, Brittney did not want to betray her friend's confidence. Cal had revealed her orientation to Brittney out of trust. An aggressive discussion would let that cat out of the bag.\n\nBrittney also knew she could not sit across from Cal for their entire shift without talking about it. She was nervous but just wanted to make sure they understood each other, so they could go back to being friends. Just friends. Brittney loved Cal, thought she was great but as a friend. Her best friend. It was that simple.\n\nI mean, it is ... isn't it?\n\nShe shivered at the memory of Cal's lips pressed against hers. The recollection wasn't repulsive. Nor did she consider it a violation. Instead, thinking of that moment brought heat to her cheeks, along with other parts of her body. It also brought a fair bit of alarm.\n\nBrittney shook her head. No. I'm not attracted to girls. I'm just not. I ... No matter how much her conscious brain screamed it, her deeper brain refused to acknowledge the same, leaving her more confused than ever.\n\nShe wheeled her car into the parking lot and found a space. The late shift usually had good parking, close to the door, and that evening was no exception. Brittney glanced about for Cal's Acura but didn't see it. She went to the employee entrance, scanned her key card, and went in.\n\nCal wasn't at her desk, so Brittney set up her workstation, moving on autopilot, all the while constructing the phrases and sentences she wanted to say to her friend when she got there. A call came in as soon as logged herself available, so Brittney set Cal aside and plunged into her customer service routine. The call was from someone who was pleasant enough but seemed unable to follow simple instructions. Brittney imagined the customer would have, in an earlier time, been one of the apocryphal stories of someone who had broken off the \"cup holder\" on their computer. After an hour, Brittney was able to get off the line, groaning. Not only had the service call strained her last shred of patience but the length of the call had also thrown off her stats for the evening, which would catch Jim's notice and get her a talking-to.\n\nThe moment the CALL button went gray, she said, \"God, Cal. Referring to that lady as an 'airhead' does a disservice to air.' The corners of her mouth turned up in appreciation of her own joke. It was the kind of humor she and Cal had come to share over the months.\n\nThere was no answer.\n\nBrittney frowned. She couldn't hear Cal's voice, which meant she wasn't on a call. She stood and peered over the cubicle wall.\n\nCal's desk was empty. The light was off and the monitor dark.\n\nAn hour into our shift and she's not here?\n\nBrittney logged herself on a five-minute break and all but sprinted to Jim's office. She forced herself to slow down, lest she trip into his office like a maniac. She knocked twice on the frame of the open door. \"Jim?\"\n\n\"Ms. Garcia. How are you doing tonight?\"\n\n\"I'm fine. Did Cal\u2014I mean, Ms. Beatty\u2014call in sick or something? She's not at her desk.\"\n\nJim leaned back in his chair. His gaze was steady. \"Ms. Beatty requested to be moved to an earlier shift. Since there was an opening on the second shift, I was able to get her transferred.\"\n\nBrittney's mouth fell open. A thousand questions sprang to mind but she couldn't force any of them past her paralyzed lips.\n\nJim sat forward, laced his fingers together, and placed his hands on the desk. \"Ms. Beatty referenced an interpersonal conflict in her request, stating that she did not feel comfortable around one of her coworkers. She refused to name that individual and said that if she was unable to move positions, she would be forced to resign. Because her record has been superb so far, I thought it best for Three Spark if we could accommodate her request and keep her.\" His eyes bored into hers. \"You wouldn't know anything about her interpersonal conflict, would you?\"\n\nHer head swam but Brittney managed to mutter, \"No ... no, of course not. Excuse me.\" She wandered back to her desk in a daze.\n\nShe ... she left me.\n\nBrittney hurried into the restroom which was fortunately deserted. She plucked the phone from her pocket and with trembling fingers, punched Cal's contact information. She was immediately shunted to voice mail. \"Cal, it's me. Jim told me you changed shifts. Was it to get away from me? Please ... please don't shut me out. You're my best friend.\" She didn't know what else to say so Brittney ended the call. Her eyes clouded with tears. She wiped them away and returned to her desk.\n\nThe rest of her shift passed in a fog. Calls were steady but Brittney had trouble concentrating. Her thoughts were so jumbled that she completely forgot to log out for her dinner break, another faux pas that Jim was sure to scold her about. She finished her shift and headed home. As she pulled to the curb in front of her parents' house, Brittney realized she'd been so consumed with her distress she had no recollection of the drive home.\n\nHer mom was in the kitchen when she entered. Daphne smiled when Brittney opened the door. \"Morning, sweetie. How was\u2014\" As soon as her mom caught sight of Brittney's face, her smile vanished. \"Honey? What's wrong?\"\n\n\"Nothing.\"\n\nDaphne said nothing as Brittney walked, zombie-like to her room. She ran through the shower before collapsing in bed. Her last thought before sleep took her was of Cal's smiling face. She wondered if she'd ever see that smile again.\n\nDespite her exhaustion, Brittney was unable to sustain anything longer than a short doze. At one point, she thought she heard her mother in the other room talking to someone but faded out before she could be sure. After tossing and turning until about noon, and sleeping in snatches of no longer than twenty minutes, she kicked off the blankets, put on a pair of sweats and a tee-shirt, and wandered out. She found a lukewarm half-pot of coffee, poured some in a mug, and placed it in the microwave.\n\n\"You're really going to microwave that, Britt?\" Her mom appeared in the doorway.\n\n\"Sure, why not? Why waste it?\"\n\n\"Because I'm sure it will taste awful. For Christ's sake, we can afford for you to make a fresh pot of coffee.\" She elbowed Brittney aside and set about making a new batch, gesturing at the microwave. \"Don't even think about drinking that. Pour it out.\"\n\n\"Fine.\" She removed the cup, dumped it in the sink, and flopped in her chair at the kitchen table. In truth, Brittney agreed with her mother but lacked the energy to make anything.\n\nDaphne set up the coffee maker for a fresh run. That done, she took her seat next to Brittney. \"Trouble sleeping?\"\n\n\"Yeah, why?\"\n\n\"You were muttering in your sleep. Bad dreams?\"\n\nBrittney passed a weary hand in front of her face. Her eyes settled on the coffee maker. She knew she needed to rest but absent that, supercharging on caffeine would have to do. \"Yeah, something like that.\"\n\nNeither of them said anything for a few minutes. From the corner of her eye, Brittney caught her mom's pensive gaze resting on her, which irked Brittney for some reason. Daphne's look was more thoughtful than concerned. When the maker beeped to announce it had finished, her mom rose, poured them each a cup, and placed the bowl of sweetener packets on the table. When she spoke, her voice was curious. \"Is this about Cal?\"\n\nIrritated, she swirled the sugar substitute into her cup. \"Why would you ask that?\"\n\n\"Because I talked to Deborah and I know everything that happened between you two, including her kissing you Sunday night.\"\n\n\"Oh.\" Brittney stared at the surface of the table. She wrapped both hands around her coffee mug. \"Did Deborah say how she's doing?\"\n\nHer mom gave her a fresh smile, as if confirming something. \"According to her mother, Cal is pretty broken up. She misses you.\"\n\n\"But I've tried to call her. And texted. I mean, she's my best friend. She's great.\" The tears came again; Brittney turned her head to hide them. \"I don't want to lose her.\"\n\n\"What's so great about her?\"\n\nBrittney rubbed her hand across her eyes and glared at her mom, who sat with a neutral expression and crossed arms. \"What's that mean?\"\n\n\"It wasn't a trick question, sweetie. What makes her great?\"\n\n\"What doesn't? She's sweet and kind. She's funny and we have the same sense of humor. Cal's intelligent and always seems to know what to say to make me feel better.\" Brittney smiled a bit wistfully. \"We can talk for hours or just sit together. I really enjoy being around her.\"\n\n\"Is she pretty?\"\n\nBrittney blushed. \"Yes, I suppose she is.\"\n\nShe left out that she just didn't find Cal pretty. She thought her friend was gorgeous and their touches often reminded her of how she felt when she touched a man she liked. No, she said to herself, I'm not attracted to her, I'm not, I'm ... Even in the vaults of her mind, the words felt hollow.\n\nHer mom's words tore Brittney away from her own thoughts. Daphne said, \"Everything you just said? Deborah told me Cal thinks all that and more about you.\"\n\n\"Then why won't she take my calls?\"\n\n\"You do understand how Cal feels about you, don't you?\"\n\nShe blinked. \"What?\"\n\n\"It's not a secret, Brittney, and it's not like she's hidden it. You should have seen the two of you at Thanksgiving. Cal couldn't take her eyes off you. She was looking at you like the sun rises and sets in your eyes.\" \n\n\"You're saying\u2014\"\n\n\"Yes. It's way past friendship for her now. Cal is totally in love with you.\"\n\nBrittney sat mute, unable to speak.\n\nHer mom's smile became a bit sad. \"And that's why she's distancing herself from you.\"\n\n\"That doesn't make any sense.\"\n\n\"It actually does.\" Daphne extended her arms and took Brittney's hands in hers. \"Cal has very intense feelings for you\u2014feelings she doesn't think you reciprocate. Seeing you every day\u2014spending time with you, talking to you, hanging out with you\u2014and being unable to act on those feelings is very distressing. It's torture, to have someone next to you that you want but that you can't have. The only way she can deal with it is to put some space between the two of you. I'm sorry, honey, but that's the truth.\"\n\nFresh tears clouded her eyes. \"Mom, that's not fair.\"\n\nDaphne withdrew her hands and shrugged. \"Life never is.\"\n\n\"What can I do?\"\n\n\"I don't know if there is anything you can do. Cal's doing what's best for her mental health. Don't you want that for her?\"\n\n\"Uh ... I mean ...\" Brittney searched for the words. She thought of never seeing Cal again, of never being the target of her husky voice or impish smile. The thought brought physical ache. Brittney's chest contracted and a sob escaped. \"Of course I want her to be safe and healthy. But knowing that she wants to be away from me ... that's hard, Mom. It hurts to know she's in pain because of me.\"\n\n\"So you want what's best for her?\"\n\n\"Of course I do.\"\n\n\"Why is that?\"\n\nBrittney's lip curled. \"Mom, the rhetorical questions are getting old.\"\n\n\"Just bear with me. Why do you want what's best for her?\"\n\n\"She's important to me. I think about her all the time and I want her to be happy.\"\n\n\"Oh?\" Brittney's mom cocked her head. \"So you have strong feelings for her? How strong?\"\n\n\"Very.\"\n\n\"So you like her a lot?\"\n\n\"I\u2014\" The words froze on her tongue. Brittney's eyes widened and her lower lip began to quiver.\n\nDaphne stared at her, impassive.\n\nHer thoughts were a whirlwind. I ... love her? How? I mean, I can't. It's not possible. She's a ... and I'm a ... I like her but\u2014 Brittney swallowed hard. I can't even say \"like\" without knowing it's a lie. I do love her. She stared at her mom. Her voice was just a whisper. \"How? How can I?\"\n\n\"How the hell should I know?\" her mom scoffed. \"I have no idea what draws two people together. But like I said, it was obvious even back at Thanksgiving. You two were sitting closer and touching each other more than a lot of married couples do. Remember everything I said about Cal watching you? You were doing the same thing. Every time I turned around, you were staring at her like she was the most fascinating thing you'd ever seen. You should have seen the expression on your face when you were watching her hold Paul's son. I'm not sure I have ever seen someone look at another person with such adoration.\" She paused and chuckled. \"Except how your dad looks at me, maybe.\"\n\nHeat mounted her cheeks. \"D-did everyone know?\"\n\n\"No. When I said it was obvious, I meant to Deborah and me. We've known for a while. Monica, Haley, and Maya all figured it out that day. The guys were all too focused on football, and then on dinner.\" Daphne huffed, her tone taking a tone of fond exasperation. \"Men! Oblivious!\"\n\nBrittney touched her still-shaking mouth with her fingers. \"But she's a woman too.\"\n\n\"So what? Brittney, do you want Cal in your life?\"\n\n\"Yes!\"\n\n\"Can you admit to yourself that you love her\u2014that you are in love with her?\"\n\nBrittney hesitated but realized she would only be lying to herself, since her mother clearly saw the truth. She nodded. \"Y-yes.\"\n\n\"And do you think you are tripping over admitting that love because of this idea that you're straight?\"\n\n\"Absolutely.\"\n\nHer mother took Brittney's one hand in hers again and fixed Brittney with her gaze. \"Then stop putting a label on it. Gay, straight ... who cares? Look at yourself. This isn't a case of infatuation or weird attraction. Love for Cal is practically oozing out of your pores. You confirmed it just now; the first words out of your mouth when we sat down were to ask about her and her well-being. If she were a guy, you'd already be planning the wedding. You're in love with her and want to be with her. Why are you holding onto this notion of what you 'are' when it's pretty clear you aren't? If you were, you wouldn't feel this level of romantic affection. Let it go, Britt. Let it go and be happy.\"\n\nShe stared at her mother. \"It can't be that easy.\"\n\n\"It is. If you love her and want to be with her, then don't let these inconsequential things stop you. Like I said, who cares about a category? This seed, this potential to love a woman, was probably always deep inside you and just needed the right person to bring it to surface. Maybe you're really not attracted to women\u2014unless that woman happens to be Cal. If I may ask, how did you feel when she kissed you? You don't have to answer me but be honest with yourself.\"",
        "\"I liked it,\" she whispered. \"My brain said it was wrong but my body and my heart were thrilled. Overjoyed.\"\n\n\"Then there you go. It's not about women but about her.\"\n\n\"Yes.\" A stray thought occurred. \"What is Dad going to think?\"\n\n\"He knows. I don't keep things from him, but why are you worried? Has he ever shown that he thinks less of someone because of who they love? He just wants you to be happy. Him, me, Monica, Paul, Chris ... that's all any of us want for you, sweetie.\" Brittney was shocked to see unshed tears in her mom's eyes. Daphne wiped her face on the sleeve of her robe, then brushed a strand of hair from Brittney's face. \"If Cal makes you happy, then go to her. We'll all still love you. And her.\"\n\nBrittney bit her lip. The whole notion felt outlandish, impossible. Then she visualized herself standing next to Cal, her arm snaking around her friend's shoulder, of seeing Cal looking at her with love and affection, and her doing the same in return, and of a gentle kiss like the one they had already shared.\n\nThe thought made her feel better than she had all day.\n\nShe gazed at her mom. \"What do I do?\"\n\n\"Like I said, go to her.\"\n\n\"But if she doesn't want to see me\u2014\"\n\n\"I can practically guarantee that if you show up with this newfound outlook, she will be ecstatic to see you. Call it mother's intuition ... and the fact that Deborah confirmed as much when she and I talked.\"\n\n\"Huh?\"\n\n\"She tells me Cal's been crying over you since she fled the break room at your work. She hasn't gone out and has been moping around the house.\" The notion of Cal's distress created a fresh stab of pain in Brittney's heart but her mother continued. \"Tell her the truth.\"\n\nAnother thought came to her. Brittney blushed and lowered her eyes. \"But what about ... you know. I've never ... I mean, I don't know how to, uh, be with a woman.\"\n\n\"Do you want to be with her that way?\"\n\nShe thought about her boyfriends and how much she had enjoyed sex with them\u2014not just for physical reasons but for the sense of closeness and intimacy. It's scary but if I love her, I want us to be that close too. I want us to share that. \"I think I do.\"\n\nDaphne smiled. \"Then just be honest with her, take your time, and act from the heart, sweetie, and you and her will work it out.\"\n\nBrittney's vision blurred anew. \"You promise?\"\n\n\"I do.\"\n\nShe laughed through her tears. Brittney stood and embraced her mother, who hugged her back. \"Thank you, mom. I love you.\"\n\n\"I love you too, sweetheart.\"\n\nBrittney held the hug for a moment before separating. \"I guess I need to get a move on.\"\n\n\"All right. Deborah says Cal doesn't start her new shift until tomorrow, so she should be home.\"\n\nBrittney grinned and headed for the door. A detached part of her brain noted that she already moved with a lighter step and a sparkle in her soul. The whole thing was crazy but she embraced it with open arms. She was almost to the door when she paused and turned to look at her mom again. \"You said you knew how I felt.\"\n\n\"Yes, for months. It's been obvious to anyone paying attention.\"\n\n\"Why didn't you say something to me?\"\n\n\"You had to get there yourself, Britt. If I had just blurted it out, you wouldn't have believed me.\"\n\nBrittney nodded. \"No, probably not.\"\n\nDaphne waved her hand. \"All right, shoo. Drive carefully, and let me know if you'll be here for dinner.\"\n\nBrittney spun, heading for her bedroom. She had things to do.\n\n#\n\nShe paused at the door, her finger extended and poised to ring the doorbell. The enormity of it weighed heavily on her shoulders but Brittney squared her shoulders and pushed the button. A chime rang from within. She dropped her hand and waited, resisting the urge to hop up and down.\n\nBrittney had quickly run through the shower again. She'd dressed casually, in a pair of form-fitting jeans, with a yellow pullover polo-style shirt. Since Cal had always complimented Brittney on her complexion and smooth skin, she had only applied a light layer of makeup and tied a ribbon bow to hold back the ponytail of her dark brown hair, since Cal had complimented her on that look before. The effect in the mirror had been pleasant but not overtly sexual or anything. She was dressed much as her friend always saw her.\n\nShe hoped that was the right answer.\n\nDuring the drive to Deborah's house, Brittney had been bursting with excitement. Now that she'd opened her mind to the possibility and accepted that she loved Cal, Brittney wanted nothing more than to hug Cal, to hold her, touch her, even kiss her. The idea of more than a kiss was enthralling and terrifying at the same time but she now embraced what she had denied for so long. She wanted Cal. She wanted to give herself to her love, in every way possible.\n\nThe door opened and Brittney held her breath.\n\nCal stood there, clutching the doorknob. She wore a loose tee shirt and gym shorts. She had pinned her curly auburn tresses in a bun behind her head. Her eyes were red and puffy and she looked miserable.\n\n\"Hi,\" Cal said, her voice small.\n\n\"Hi, yourself.\"\n\nBrittney's heart almost thumped out of her chest. Cal's disheveled appearance did nothing to lessen Brittney's feelings; if anything, she ached to take Cal in her arms, make her safe, and take her pain away. She could not help but notice the smooth skin of Cal's legs and unlike before, Brittney felt a twinge of longing to touch her and feel Cal's warmth beneath her fingers. She laughed to herself, figuring that her mother's guess had been correct: that because she loved Cal, she found her love attractive and desirable, despite that love being a woman. \n\nMy love. It's so easy to say now that I have admitted it to myself. I'm sorry I was so blind and stubborn, Cal. I made this ten times harder than it had to be. I swear I am going to make it better. Then, on spotting the unease on Cal's face, she said, \"Can I, uh, come in?\"\n\nCal sighed and looked away. \"I don't think that's a good idea.\"\n\n\"Just for a few minutes. If ...\" Brittney swallowed hard. \"If after we talk you still want me to go, I'll leave and won't bother you again. Please?\"\n\nCal nodded and stepped aside, though she refused to meet Brittney's gaze, and closed the door behind them. She led Brittney to the family room, her head down and shoulders slumped, and Brittney's heart ached to comfort her.\n\nThey were halfway down the hallway when Deborah emerged, pulling on a sweater on and toting her purse. Cal said, \"Mom? What are you doing?\"\n\n\"Going out and giving you two some privacy.\"\n\nCal nodded and stepped into the family room.\n\nDeborah leaned toward Brittney. Her voice dropped to a semi-whisper. \"No matter what happens, please go gentle on her. I'll probably text in a little bit to check on things. If you have to leave her in tears, call your mom and tell her. I'll come right home.\"\n\n\"My mom?\"\n\n\"We're going around the corner for coffee and to chat. I can stay gone as long as you two need.\"\n\n\"Okay.\"\n\nDeborah nodded and departed. Brittney took a deep breath and stepped into the family room.\n\nCal perched on the sofa, her back straight and her head up, as if she planned to face anything Brittney said with dignity. Only the stereotypical box of tissues at her side and the rapid drumming of her fingers on her knees ruined the image.\n\nBrittney paused. \"Can I sit next to you?\"\n\nCal shook her head. \"Would you mind sitting in the chair, so we can face each other?\"\n\n\"Okay.\" Brittney took her seat.\n\nCal faced her, waiting.\n\nBrittney stared at her. She had rehearsed many statements, each of which she thought would let Cal know just how she felt. But there in the moment, as she stared at her would-be lover and let her gaze trace across Cal's gorgeous tresses, strong cheekbones, and perfect chin, all of Brittney's careful preparation fled. She opened her mouth to say something. The words caught in her throat, she closed her mouth, opened it again, and the same thing happened.\n\nCal lowered her eyes. \"Look, if you came over here to tell me you just want to be friends\u2014\"\n\nHer words jolted Brittney from her reverie. \"No, Cal, it's not that at all.\"\n\n\"All right.\" Cal looked at her, expectation written on her features.\n\n\"I ... I ...\" Brittney looked down. \"This is harder than I thought it would be, Cal. I'm shaking like a leaf.\"\n\nCal waited.\n\nBrittney closed her eyes and fought to calm herself. \"It's taken some time for me to get here. I never thought I would. God knows I fought against it. It took someone I trust making me take stock of myself before I got to the truth.\"\n\n\"Okay?\"\n\n\"I ... I just ...\"\n\nCal's face twisted. \"Brittney, I don't think you know how much pain it's causing me to have you sitting here, especially looking as adorable as you do. I want to get up from here, hold you, kiss you again. But I know I can't and that hurts so, so much. This is ripping me apart, Britt.\" Tears trickled down her cheeks. \"Please just say what you want to say and leave. Please!\"\n\n\"I love you.\"\n\nShe blinked. \"What?\"\n\n\"I love you, Cal,\" Brittney blurted a second time. Like the cork popping free from a bottle, now that she'd started, the words spilled out. Her voice cracked as she choked up. \"It took me a long time to realize the truth. I fought it, denied it, but I was just lying to myself. I love you, more than a friend. I want you in my life, now and forever.\"\n\nCal stared at her. \"I ... I ...\" She took a deep breath and fanned her face with her hand. Fresh tears covered her cheeks and she looked away. \"You're mocking me? I never knew you were this cruel, Britt.\"\n\nBrittney's own eyes filled with tears. She understood Cal's skepticism but the emotion of the moment was getting to her too. \"No, I'm not. I don't just love you, Cal. I am in love with you too.\"\n\n\"How?\" Cal faced her again. \"How is it different now?\"\n\n\"Because I'm not going to let my stupid stubbornness stand in the way of a good thing. No, I've never felt like this about another girl ... and no, I have no experience being with a woman but I'm willing to learn, with you. All I know is that you have the most beautiful soul I have ever seen. It's like a light in the darkness, pulling me out of the gloom to a place where I can be happy. I want that. I want you.\"\n\nA strangled sob erupted from Cal's mouth, which she covered with both hands. For a long few seconds, the two young women gazed at each other.\n\nBrittney read the warring emotions on her friend's face. She's on the fence. She wants to believe me but she's scared I'm going to hurt her again. What can I say? How can I convince her I'm\u2014\n\nAnd then she knew. Like a flash of lightning illuminating a formerly-dark room, the answer was revealed with as much certainty as she could muster.\n\nBrittney slowly stood, watching Cal watch her. She took several unhurried steps across the floor and sank to her knees, so that she and the still-sitting Cal were almost on the same level.\n\nCal stared at Brittney. Her eyes were liquid pools and the tears continued to fall.\n\nBrittney hesitantly extended her left hand toward the side of Cal's face. She half-expected the other girl to pull away but when she didn't, Brittney skimmed her fingers over Cal's cheek and into her hair. She continued to stare into Cal's eyes while she stroked Cal's scalp and glided a light touch over Cal's ear. Brittney smiled at her. She hoped the smile conveyed tenderness and love. Brittney inched her own face closer.\n\nCal's breathing accelerated.\n\nBrittney tilted her head and closed her eyes just as she touched her lips to Cal's. A bolt of heat shot through her, warming her to her toes\u2014and at that second, the remnants of her fears and doubts faded like fog before the rising sun. Her head swam and her heart thudded with desire.\n\nOh my God, this is the best kiss I've ever had! My whole body is vibrating. I want this. I want her.\n\nShe massaged her mouth across Cal's and felt a giddy thrill when Cal's lips responded and gently moved against hers. Brittney extended the tip of her tongue just enough to caress the flesh of Cal's lips, then withdrew it. She broke contact, taking care to move with deliberate slowness. Brittney pulled back six inches and opened her eyes. She placed her other hand on the opposite side of her love's face and held her.\n\nCal stared at her. Despite her tears, a tentative smile crept over Cal's face. \"I guess you mean it.\"\n\n\"I told you. Maybe one of these days, you'll listen to me.\"\n\nCal laughed and leaned forward until their foreheads rested against each other's. Her hands rose to touch Brittney's neck and face. \"You put me through hell, you jerk.\"\n\n\"I know. I'm sorry. Do you still love me?\"\n\n\"Yes.\"\n\n\"I love you too.\" Brittney brushed Cal's tears from her cheeks and then rubbed her own tears. \"I'm sure all this crying is spoiling my look. Everyone tells me I'm an ugly crier.\"\n\n\"Everyone's wrong.\" Cal stroked Brittney's neck. \"Crying or not, you're the most beautiful person in the world.\"\n\n\"That's a lie, but don't stop saying it.\"\n\nThey both giggled.\n\nBrittney continued to watch Cal, savoring every movement made and every breath taken. She tossed a silent thanks to her mother for making her confront the truth.\n\nCal's voice was just a breath. \"What are you thinking?\"\n\nBrittney hesitated. She'd considered the possibility on the drive over, that their discussion might come to this. She hadn't been able to decide how she would react and instead decided to wait for the moment. Now that she was here, she only wanted one thing, even though she was shaking all the harder. \"I ... I want ... I mean, uhm ... I think we should go to the bedroom.\"\n\nCal's eyes widened. \"You mean\u2014\"\n\n\"Yes. I'm ready.\"\n\n\"You're shaking.\"\n\n\"Trust me, Cal, I thought about this.\" She caressed the other woman's head, enjoying the feel of Cal's curly hair beneath her fingers. \"I want to be with you. I'm shaking because I'm nervous. I've never ... been with a woman before and I'm afraid it won't be good for you.\" She paused. \"I mean, if you're not ready, I understand.\"\n\nCal smiled. \"Britt, I've been ready for you for a long time. I almost burned up one of my favorite toys thinking about you.\"\n\nBrittney's cheeks heated. \"Oh my God.\"\n\n\"As for the rest, trust me ...\" She kissed Brittney again. \"It will be fine. Don't be nervous.\"\n\n\"Okay.\"\n\nBrittney stood and took a step back, allowing Cal to rise from the couch. She did and offered her hand to Brittney, who took it. Cal gave her a quick squeeze and led her toward her bedroom. She'd seen it before but the room took on a new significance now; it was no longer just a place where Cal slept and kept her stuff but was now a meeting place\u2014a sanctum\u2014where no one existed, save two lovers. \n\nBrittney stepped inside and Cal shut the door behind them. She could not take her eyes off Cal as the other woman slunk towards her, a mischievous glint in her eye. Brittney waited. She sucked on her lower lip and hoped she wasn't going to pass out.\n\nCal stepped into Brittney's embrace and they kissed again. For the first time, Brittney was glad that they were almost exactly the same height, as it made the joining of their mouths so easy. She was cognizant of Cal's hands stroking the skin of her upper arms, of Cal's leg rubbing against hers, and of Cal's breasts pressing into her chest. Brittney's body felt like it was on fire. Each sensation, each touch of Cal's body on hers, warred for Brittney's attention.\n\nThey broke their kiss. Cal said, \"I do love you.\"\n\n\"I know. I love you too.\"\n\n\"Would you be all right if I undressed you?\"\n\nBrittney shook even harder but she nodded, determined to make this as pleasurable for Cal as she could. \"If you'll enjoy that and it makes you happy, then absolutely.\"\n\nCal smiled. \"You can kick your shoes off.\"\n\nBrittney did.\n\nCal resumed kissing her. Her hands dropped Brittney's belt and worked open the buckle. She popped the fly on her jeans and unzipped them.\n\nBrittney's thoughts whirled.\n\nCal pulled Brittney's shirt from its tucked-in position. Without stopping, she pushed the shirt up Brittney's torso, who raised her arms. In one smooth motion, Cal peeled the polo away and tossed it on the carpeted floor. She didn't wait but immediately took hold of Brittney's jeans, worked them over her hips, and down her legs. Brittney let her take the pants from one leg, then the other, and then her socks, before Cal stood and kissed her again.\n\nBrittney shivered. She'd been in a bra and underwear before other women before, but this was different. A sense of vulnerability took hold but that was quickly supplanted by excitement and desire. She wrapped her arms around Cal. Between kisses, she said, \"Do you want me to take the bow out of my hair?\"\n\n\"Can you leave it in?\" Cal flushed. \"That's kind of weird, huh?\"\n\nShe laughed. \"You like it that much?\"\n\nCal nodded. \"It compliments you and makes your hair look pretty and perfect. I'm jealous of your hair, anyway. It's so soft.\"\n\n\"What? You have this gorgeous auburn mane and you love my hair. You're insane.\"\n\n\"I hate it.\" Cal touched her head. \"I've been thinking about dyeing it for some time now.\"\n\n\"I don't think so. I love your hair so you better not.\" Brittney tried to look stern, though she kept her smile. Though she did think Cal's curly tresses were beautiful and wonderful, she didn't really care either way; if Cal wanted to change it to something she liked better, Brittney would be happy for her. But Brittney wanted Cal to know that she loved her just the way she was.\n\nApparently, the message got through. Cal grinned. \"Well, if you like it, maybe I'll keep it.\"\n\n\"Good. Now, I believe you were in the middle of something.\" Brittney was amazed at her capacity for being flippant but when she looked back on it later, she realized that she was so at ease with Cal that her confidence shone through and she felt she could just say whatever strange thing she was thinking.\n\nCal, however, was not to be outdone in terms of playfulness. She glanced down at her own body. \"Hey, you have work to do too.\"\n\n\"Fair enough.\"\n\nBrittney kissed her lover and let her hands fall to the hem of Cal's tee shirt. She dragged it along Cal's side and up her rib cage. The knuckles of her bent fingers grazed over something soft and warm, then a hardened nub. Cal gasped and Brittney froze.\n\nCal pulled her head back. \"No bra.\"\n\n\"So\u2014\"\n\n\"Yes, you stroked my nipple. I guess that was a first for you.\" Her eyes probed Brittney's face and her smile dimmed. \"You look a little freaked out. Are you having second thoughts now?\"\n\nBrittney rallied. \"It's just all new to me, so I'm trying to get used to it. As for second thoughts? Not a chance. You're not getting away from me that easily.\" She pulled the shirt over Cal's head and arms, threw it aside, and lowered her eyes.\n\nShe's always known Cal had bigger breasts than her and she'd seen her friend half-undressed. But the moment she was staring at Cal's breasts in the flesh, and feeling the urge to squeeze and kiss them, Brittney had a sudden revelation. She chuckled.\n\nCal raised an eyebrow. \"What?\"\n\n\"I think I just realized why guys like tits so much. Maybe it's just because I love you but those are tantalizing.\" She gestured at herself. \"I'm sorry I can't offer anything as good.\"\n\n\"Pfft,\" Cal said, snorting. \"It just means you won't have neck and back pains in twenty years. Brittney, please believe me: your breasts are lovely. They're part of you and I love you.\"\n\n\"Okay. Can ... I touch them?\"\n\n\"Hey.\" Cal placed a forefinger on Brittney's lips. \"I belong to you now. I want you to operate under the assumption that when we're alone, you can touch me whenever you like, even if you just lay a hand on my leg when we're on the couch or grab my ass when you walk past. So yes, you can touch my breasts. You don't have to ask. I want you to. In fact, I think I will be put off if you don't touch them.\"",
        "\"That sounds good.\" Brittney raised her hands and cupped Cal in both palms. Brittney had touched herself before and had tweaked her nipples while masturbating. But touching Cal was a whole other experience. Her tits were heavy and soft and felt as though they'd been made for her hands. Brittney rubbed her fingers over the swollen nipples.\n\nCal closed her eyes and groaned.\n\nBrittney continued her ministrations and Cal continued to gasp and actually began to squirm. Seeing her lover's reaction did nothing but arouse Brittney to the point of inflammation. Her own nipples pushed against her bra and her underwear was drenched with her lubrication.\n\nAfter another moment, Cal took Brittney's hands, halting them. \"Dear God, that's going to drive me insane. Are you sure you've never been with another girl?\"\n\n\"Huh?\"\n\n\"You're good at that. Your touch is intoxicating and we haven't even gotten to the good stuff yet.\"\n\nBrittney blushed.\n\n\"My turn.\" She stepped into Brittney's grasp, nuzzled her mouth in the cleft between Brittney's neck and shoulder. Her hands snaked around Brittney's back and unhooked her bra with practiced ease. Brittney smirked to herself, thinking that no man she'd been with had ever ditched a bra so fast\u2014and then trembled, realizing she was about to be exposed. Cal pulled the straps off Brittney's shoulders and let the garment fall to the floor. Cool air rushed across Brittney's skin, causing her to shiver more.\n\nCal gazed at her. \"Oh, you are absolutely perfect. May I?\"\n\n\"S-same thing you told me,\" Brittney stammered. \"When we're, uh, being together, you don't have to ask.\"\n\n\" 'Being together?' \" Cal laughed. \"You mean making love?\"\n\n\"Yeah. I guess we're not fucking yet.\"\n\n\"We can try that down the road. We have time.\" Cal smiled, lowered her head, and kissed both of Brittney's breasts, one after the other. Brittney sighed and stroked Cal's head. Cal kissed and tongued the soft flesh for several moments before latching on to one nipple and teasing it between her lips and teeth. Her hand caressed Brittney's other breast and gave the nipple light pinches.\n\nIn less than five minutes, Brittney was ready to explode.\n\nCal stood and guided Brittney toward the bed. She trailed her hands down Brittney's side, to the edge of her underpants resting on her hips, looked Brittney in the eye, and raised a questioning eyebrow.\n\nHer head swollen with lust, Brittney could not nod fast enough.\n\nCal knelt. She hooked her fingers around the soft fabric and slowly pulled her underwear away. Brittney shivered again, though her hands rested on Cal's head. Brittney had kind of let herself go wild since John left but had trimmed herself in the shower earlier, just in case. She didn't know Cal's preference but figured they would cover that type of stuff down the road. She watched the other woman for any reaction as her pussy came into view.\n\n\"Oh, wow,\" Cal gasped.\n\n\"What?\"\n\nCal gazed up at Brittney from her knees. \"You're just beautiful all over, including here.\" She leaned forward and gave Brittney a kiss on her mound. Her soft hands stroked the inside of Brittney's thighs, glancing over her lips. One finger stroked in the cleft between, and Cal's tongue flicked across Brittney's clit.\n\nBrittney closed her eyes and tried to hold still. The sensations drowned her senses in passion and heat. Her loins began to tremble as the first echoes of orgasm welled up deep inside her. After a moment of her friend's soft touch, her brain caught up to the fact that Cal had said something. \"What was that?\"\n\n\"I said, you are amazing. And you're absolutely soaked.\" She smiled. \"You're pretty turned on, aren't you?\"\n\n\"Gee, you think?\"\n\n\"It is awesome to know I excite you that much.\"\n\n\"You do, Cal.\" Brittney stroked her head. \"All that and more.\"\n\n\"I'm glad.\" Cal stood. \"We have a problem, though. I'm still a bit overdressed.\"\n\nBrittney laughed. \"That's easily solvable.\"\n\n\"I was hoping you would say that.\"\n\nBrittney kissed her way down Cal's neck and chest. She paused to pay attention to each breast, swirling her tongue over the nipples and pinching them between her lips. Up until the moment she had arrived, Brittney had still harbored the idea that it might make her a little uneasy, to be touching a woman in such an intimate manner. Now that she was engaged in it, all she felt was love for Cal and a desire to make her happy. Tonguing her lover's breasts did not feel off-putting in the slightest.\n\nShe worked down Cal's soft belly, to the hem of her jogging shorts. She tugged the shorts down Cal's legs, revealing a pair of white bikini-cut underwear. The shorts fell to her feet and Cal stepped out of them. A sudden thought struck Brittney and she laughed. \"This is like opening presents at Christmas, but better.\"\n\nCal smiled but tears filled her eyes and she looked away.\n\nConcerned, Brittney stood. \"Hey, don't cry. Did I say something wrong?\"\n\nShe shook her head. Fresh tears coated her cheeks. \"No. I'm just ... overwhelmed here. I've been in love with you for so long. I really never thought this would happen and I was resigned to it. I keep thinking that I am dreaming, that I am going to wake up and all this will be gone.\"\n\nBrittney took Cal's face in her hands and kissed her again. \"It's happening, Cal. I'm here and we're together and there is no place I would rather be. I promise. Okay?\"\n\nCal nodded.\n\n\"Good, now stop interrupting me.\" She sank to her knees and took hold of Cal's underwear. Noting that Cal was still teary-eyed, Brittney reached behind and whacked her on the butt, somewhat hard. The meaty smack caused Brittney to shiver in unexpected delight. Oh, I liked that.\n\n\"Ouch!\" Cal's eyes widened in shock. \"That was hard.\"\n\n\"No more tears.\"\n\nCal wiped her eyes. \"Okay ... but I'm going to get you for that.\"\n\n\"I hope so.\"\n\nBrittney took a deep breath and focused on the sight in front of her. She lowered the sides of Cal's underwear over her hips, inch by inch, letting the anticipation build. When the first glimpse of the soft skin of her mons came into view, Brittney's breath caught in her throat. The garment clung for just a moment, then pulled free. She paused it halfway down Cal's thighs and stared.\n\nCal was completely shaven. Her lips were puffy, swollen, and slick with arousal. Her clit was clearly visible in the folds of her labia. She touched Cal's pussy and ran her fingers up and down her slick lips. Cal shivered and exhaled hard.\n\nSo much heat. Brittney extended her tongue and pressed it against Cal's clit. \n\nCal gasped and groaned.\n\nBrittney had heard plenty of stories and men bullshitting with each other about the taste of vagina. She'd never been able to directly taste herself on her fingers; she'd tried a couple of times but had always chickened out. She also hadn't tasted herself on John or either of the two men she'd been with before him. Since all three had loudly refused to kiss her after blowjobs, she returned the favor, declining to kiss them after they'd gone down or blow them after they'd been inside her ... so she had no real idea what to expect.\n\nShe got a slight metallic tang, tinged with a little hint of saltiness. It wasn't bad.\n\nThe reaction from Cal, however, filled Brittney with delight. Her lover grasped Brittney's head and moaned, pushing her groin against Brittney's face. Her hips began to rotate and one of Cal's hands crept to her own breasts and pinched her nipple. She closed her eyes and tossed her head back.\n\nBrittney retracted her tongue and looked up.\n\nCal's head whipped down, her eyes narrowed. \"You stopped.\"\n\n\"Just like you did.\" She pulled Cal's underpants the rest of the way off and stood. Her arms crept around Cal's shoulders. \"Well ... here we are.\"\n\n\"Yes.\" She jerked her head at the bed. \"Shall we?\"\n\n\"I thought you'd never ask.\"\n\nCal peeled back the covers. The two women slid inside and lay facing each other on their sides.\n\nHeat from her lover beat at Brittney's body. She smiled at the thought and discovered that her nerves had evaporated. She stared at Cal and the love in her heart swelled. Brittney fluttered her eyelashes. \"Now, whatever shall we do with ourselves?\"\n\n\"I think you know.\" Cal touched Brittney's hip. \"May I go first?\"\n\n\"Of course.\" Brittney kissed her again and started to push Cal onto her back.\n\n\"No, wait.\"\n\nBrittney blinked. \"I thought wanted to ... you know, come first.\"\n\n\"No, you misunderstood me.\" Her hand caressed Brittney's breast. \"I want to go down on you first.\"\n\n\"Okay.\" Brittney smiled. \"Maybe at some point, we'll be able to go together.\"\n\n\"We'll get there but let's walk before we run. At this moment, I just want to take care of you.\" Cal winked at her. \"On your back, baby.\"\n\nBrittney flopped over and squeaked as Cal rolled on top of her. For a moment, they kissed and let their hands roam everywhere. Then, ever so gradually, Cal moved further south. She kissed over Brittney's taut tummy and settled her body between Brittney's legs. Brittney spread her thighs, allowing her newfound love better access. She started trembling anew\u2014not of fear or nerves, but of anticipation.\n\nCal's hot breath spilled over her mound and tickled her pussy lips. Cal rubbed her chin up and down, across Brittney's clit. She moaned at her lover's touch. \"That's it.\"\n\n\"You like that?\"\n\n\"Oh you know I do.\"\n\nCal's soft laugh drifted to Brittney's ears. \"So now would be a good time to get my revenge for you spanking me?\"\n\nBrittney snorted. \"Just remember, I'm supposed to take my turn after you.\"\n\n\"Good point.\"\n\nBrittney shivered as felt Cal's tongue strike her clit. Cal began a steady motion, like a cat lapping at a saucer of milk. Brittney closed her eyes. Her hands drifted to Cal's head. Pleasure pulsed through her abdomen and the twinges of her earlier orgasm returned, mounting in intensity.\n\nFor her part, Cal continued her tongue lashing. One of her fingers found Brittney's entry and slid inside.\n\nBrittney's pelvic muscles clamped down on the intruding digit, sending even more intense waves through her core\u2014which increased further as Cal withdrew and pushed in again. Her breathing deepened and her heart pounded. The sensations grew stronger by the second and rapidly pushed her to the point of no return.\n\nNot ... not going to last ... too much excitement. \"Don't ... don't stop. I'm so close.\"\n\nCal paused long enough to say, \"Come for me, baby. Show me you love me,\" before resuming.\n\n\"I love you, Cal, I\u2014\"\n\nThe sensation crested. Every muscle in Brittney's body clenched and went rigid. A strangled shriek boiled from her throat as her orgasm broke. Every contraction tossed a wave of pleasure through her torso. Stars burst before her eyes, vertigo assailed her senses, and coherent thought fled as she convulsed and writhed in the grip of bliss far stronger than anything she'd ever felt before. It was only after a moment, when the waves started to recede, that coherent thought trickled back into her head.\n\nOh my God, that was ... was ...\n\nCal crawled up the bed and snuggled against Brittney, a shit-eating grin plain on her face. \"Did you enjoy that?\"\n\nBrittney snapped onto her side, thrust her head at Cal, and pressed their lips together. Her tongue shot into Cal's mouth as she kissed her with fierce passion. Cal returned her ardor and for a moment, nothing was said.\n\nWhen they separated, Brittney slumped, as if the energy had been siphoned from her frame. \"That was the hardest I have ever come, and I do mean ever.\"\n\nCal kissed her shoulder. \"Nice to know a girl's efforts are appreciated.\" Her voice was full of affection.\n\nBrittney brushed a springy coil of hair from Cal's face. I could have missed this love. I'm so glad I took the chance.\n\nCal cocked her head. \"You worn out?\"\n\n\"Wrung out, is more like it.\"\n\nThe chirp of an incoming text sounded from the bedside table. Cal frowned. \"Ignore that.\"\n\n\"It's probably your mom. She said she was going to check on you.\"\n\n\"I better answer it, then, before she panics and comes home early.\" Cal turned over and stretched her arm toward the sound. Doing so exposed her rear end to Brittney, who took the opportunity to smack it again\u2014not as hard as before, though it sent another shiver of delight through her.\n\nCal rolled back with her phone in hand, glaring at her. \"You have a spanking fetish I need to know about?\"\n\nBrittney laughed. \"I have literally never hit someone on the butt before, nor have I wanted to. Maybe I just like your ass that much.\"\n\n\"Oh. Well, that's okay, then.\" She glanced at her phone, smiled, punched a quick text, and replaced the phone on the nightstand.\n\n\"Was it your mom?\"\n\n\"Yeah. She asked if I was okay.\"\n\nBrittney hesitated. \"What did you tell her?\"\n\n\"I told her we were fine and asked if she could stay out a little longer.\"\n\nBrittney blushed, wondering how she'd be able to look Deborah in the eye if the woman knew what Brittney had been doing with her daughter ... and then reasoned that based on what her mother had said, Deborah would not only be all right with it but happy that Brittney and Cal were happy together. And I'm not ready for this right here to end. \"Okay, good.\"\n\n\"Now ...\" Cal settled on her side, facing Brittney. Her elbow propped on the curve of her hip. \"Where did we leave off?\"\n\nAs the last vestiges of her orgasm faded, leaving only relaxation and contentment, Brittney felt some of her energy returning, as well as the desire to make Cal happy. She cleared her throat. \"I think you were about to roll onto your stomach, giving me access to that magnificent rear end of yours. I was going to swat it a few more times, rub it better while I kiss your back, and then return the wonderful thing you just did to me. Then I figured we could rest and maybe try something else. Sound like a plan?\"\n\nCal stared at her a moment before a smile spread over her face. \"I like that plan very much. Oh, and baby?\"\n\n\"Hmm?\"\n\n\"Happy Valentine's Day.\"\n\n#\n\nBrittney killed the ignition, grabbed the plastic grocery bag from the passenger seat, and exited the car, humming the whole time. She found herself almost skipping up the walkway, as she did almost every night she came home from work. She entered the apartment building and mounted the steps, humming the whole way to the front door of her apartment. She let herself in and yelled, \"Honey, I'm home.\"\n\n\"God, that is so corny.\" Cal stepped from the kitchen, wiping her hands on a dishrag. She had changed out of her work attire and now wore a tank top and bicycle shorts. \"You never get tired of saying it, though, do you?\"\n\n\"Nope. Feels like the right thing to say when I return to the love of my life.\"\n\nCal's eyes sparkled. She pointed to the bag in Brittney's hands. \"You got the onions?\"\n\n\"Of course I did.\" She dangled the bag just out of Cal's reach, then tossed it on the recliner nearby. \"You know how I want to be paid for them.\"\n\nCal grinned and stepped forward, extending her arms.\n\nThe women embraced. Brittney's lips sought Cal's and they kissed, their feverish desire burning her up from the inside. Cal's body pressed against her. Brittney devoured the sensation, trying to pull her lover into her very being. After a moment, they broke and she smiled. \"Mmm. Lovely way to be greeted when I come home.\"\n\n\"I agree.\"\n\nBrittney dropped one hand, reached behind Cal, and swatted her backside. A resounding smack echoed through the room. \"Still good and firm.\"\n\nA sharp twinge pierced her breast. \"Ow!\"\n\nCal smirked and pulled back. \"I told you: every time you hit my ass hard when we're not in bed, you're going to get a nipple pinch. Fair is fair.\"\n\nBrittney rubbed her stinging nub. \"I know, I just forget.\"\n\nCal turned back to the kitchen. Brittney's eyes immediately fell on her ass. She wondered if she had indeed developed a fetish. Regardless, she had decided she couldn't get enough of touching, rubbing, or swatting Cal's cheeks\u2014or even nibbling on them. Cal had laughingly called her a freak, to which Brittney had merely replied, \"But I'm your freak,\" which had earned her a soft kiss.\n\nAt least when we're in bed, I can whap it all I want. The thought brought a smile as she went to change clothes.\n\nShe and Cal had moved into the apartment together shortly after that fateful afternoon. They discussed it and both realized that while they loved their parents, they wanted to be together and on their own. They'd talked and figured out they could afford it. As luck had it, a full-time position came open at the library that paid well and Brittney was able to leave Three Spark and move to a more normal workweek. Cal was able to move to the standard day shift, which meant they worked at the same time and could spend the most time together during the evening and on weekends.\n\nBrittney had been hesitant to leave the financial security of home but Cal had pointed out that they would be able to be comfortable and not worry about others hanging around. She also pointed out that they wouldn't have to confine their sexual activities to their room\u2014a notion Cal had reinforced on their move-in day, when as soon as they were alone, she had thrown Brittney to the floor of their living room and almost tore her pants off.\n\nBrittney's hand drifted to her backside. The carpet burns had taken several days to stop smarting but it had totally been worth it.\n\nShe admitted to herself that Cal had been right. It had been nice to not have to worry about being half-dressed and being in the part of the house where her parents were. Half the time, neither she nor Cal wore pants or even underpants, opting for long tee shirts and the like. Brittney knew it wasn't inherently sexual but rather just a comfort level.\n\nOf course, there's been plenty of sex, too.\n\nShe and Cal had been so in sync, so compatible, that they seemed to fall into love-making without any effort or complaints. Some nights, though, they would sit on the couch, their hips touching or a hand resting on a thigh, merely content to be next to each other. Cal loved her movies and Brittney read her books but they were together and that was what mattered.\n\nBeyond that, they lived a free and easy life. Brittney had fretted that she might discover something that made living with Cal difficult\u2014like the old adage, she thought, that you never truly know someone until you live with them. But in the three months they'd been there, they hadn't had so much as a real disagreement. They divided the cooking and cleaning, split their bills, and as far as Brittney was concerned, there was never a harsh word or even thought. They cuddled in bed and Brittney felt those evenings where their bodies were twined together were the best nights of sleep she had ever had.\n\nDespite her mother's reassurances, Brittney had not known how her father would react. Mario had only asked if Cal made her happy; when Brittney responded in the affirmative, he'd hugged her and said he was happy for her. Monica and her sisters-in-law had crowed that they all knew it and hugged both Brittney and Cal. Her brothers Chris and Paul had been stunned but were both happy for her. Deborah and Daphne remained good friends and joked about the \"inevitable wedding.\"\n\nBrittney didn't know about that. She was content simply having Cal in her life and if things stayed the way they were, she'd be good with that. Cal had agreed for the moment but if she changed her mind down the road and wanted them to be wives, Brittney knew she'd do for Cal it in a heartbeat.\n\nShe chuckled as she pulled off her slacks and blouse and reached for her more casual clothes. I guess we'd both be wives. No husbands here.\n\nIn all the myths she'd heard of lesbian relationships, the biggest one seemed to be that one of them had to be \"the man.\" Both she and Cal were feminine, almost stereotypically so. To an outsider, the two probably looked like close friends who were roommates. In public, they were affectionate but no more so than other girls who hugged, held hands sometimes, or engaged in other physical contact. Neither took on a consistent dominant role, in bed or out. They simply felt so in tune with each other that it wasn't necessary. ",
        "Brittney pulled her shirt over her head, paused, and then plucked her ribbon bow from her dresser and wound it into her ponytail\u2014the same one she had worn the day they'd first made love. She walked to the kitchen, humming a soft tune.\n\nCal glanced at her and did a double-take. Brittney knew her girlfriend had caught sight of the bow in her hair, which had been a regular signal that she planned on taking Cal to bed early that night.\n\nA blush spread up Cal's cheeks but she turned back to the stove.\n\nThe ladies ate dinner and chatted about their respective days. When they were done, Brittney set to cleaning the dishes and pans. When she looked around, Cal wasn't in sight, so she went to the bedroom.\n\nCal lay on the bed on her stomach, her chin propped on one hand. She'd already ditched her clothes.\n\nBrittney snickered. \"No, that's not obvious or anything.\"\n\n\"Says the woman who wore the bow in her hair that she knows makes me horny.\"\n\n\"Coincidence,\" she said with a straight face.\n\n\"Right. We just happen to get busy every time you wear it.\"\n\n\"Maybe you're just an insatiable tramp.\" Brittney shimmied out of her shorts and shirt.\n\nCal giggled. \"Sure, that's it. Get over here, slut.\"\n\nBrittney laughed and leaped onto the bed and into her lover's arms.\n\nLater, as they lay twined in the afterglow with Brittney nuzzled in Cal's neck, Cal murmured, \"You know I don't think you're a slut, right?\"\n\n\"I am but only for you. I do have to ask a question, though.\"\n\n\"What's that?\"\n\nBrittney raised her head. \"You remember that conversation we had in the break room months back, when you told me you were bi?\"\n\nCal nodded.\n\n\"Do you think I'm fuckable now?\"\n\nCal smiled and gave her a soft, gentle kiss. \"Oh, yeah, so very much.\" She patted Brittney's stomach. \"A little early for bed and I think I need a break. Want to watch a movie or something?\"\n\nBrittney smiled, thinking her current book was on the coffee table. She knew Cal wouldn't be offended if Brittney didn't like the movie and opted to read instead. \"Sure but only if you put something on. If I have to watch your tits rise and fall with your breathing, I'll be too distracted to watch anything else.\"\n\nCal chuckled. \"Deal.\" They got up, donned light clothes, and settled in the living room with drinks and snacks.\n\nIt hadn't been playing for five minutes when Brittney's phone beeped. She picked it up, glanced at the incoming call number, and stiffened. What the\u2014\n\nCal caught her distress. \"What is it?\"\n\n\"It's John.\"\n\nCal's mouth fell open.\n\nBrittney hesitated, then thumbed the button and answered the call. \"Hello?\"\n\nCal leaned closer to hear the conversation.\n\n\"Britt?\" John's voice was hesitant. \"How, uh, how you doing?\"\n\n\"Fine.\"\n\nThere was a moment of silence before John cleared his throat. \"I, uh ... I'm back in town, Britt. Things in Texas didn't work out so well.\"\n\n\"What about Maria?\"\n\n\"We had a bad fight. She decided to, uh, stay there. We're not together now.\"\n\nBrittney nodded. She hadn't expected anything different in the long term. She made the perfunctory statement of empathy. \"Oh. Well, sorry to hear that.\"\n\nJohn's voice took on a hopeful tone. \"Look, Britt, I know I really screwed up but all the things that happened in Texas ... well, they made me see things differently. I guess I grew up some.\"\n\n\"Uh-huh?\"\n\n\"I was hoping ... I mean, I was wondering if you and me could maybe get together? Talk for a bit? I know what I want now. Maybe we could try again?\"\n\nCal gasped.\n\nBrittney gawked at the phone, then glanced at Cal, who sat very still. Everything on Cal's face said she was thinking about what Brittney had said so many months ago\u2014that she would probably take John back if he returned. Fear and panic crowded Cal's features.\n\nBrittney looked back to the call. \"John?\"\n\n\"Yeah?\"\n\n\"I wouldn't trade what I have now for ten of you. Forget you knew me.\" She disconnected the call and blocked his number. She turned to Cal. \"Now. Where were we?\"\n\nCal's grin shone bright as the sun. \"You were telling me how much you loved me.\"\n\nBrittney kissed her. \"And I always will.\"\n\nEND\n\n Thanks so much for reading!"
    ],
    "authorname": "PeytonMirabelle",
    "tags": [
        "lesbian",
        "romantic",
        "romantic lesbian",
        "friends",
        "best friends",
        "love story",
        "first time lebsian"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/unless-it-happens-to-be-her"
}