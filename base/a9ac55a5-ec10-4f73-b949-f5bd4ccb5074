{
    "title": "April and September",
    "pages": [
        "Okay folks, I usually just write straight from the muse, but this one is a little different. For one thing, I usually don't kiss and tell. That's right, this story is real. The names have been changed to protect the guilty, identifying bits of the story have been removed, and just enough fiction was put back in for story continuity. This was just to much serendipity to keep it to myself, and has been approved by all involved before it was submitted.\n\nThe story will take a while to get going. Real life can be stranger than fiction, but it usually doesn't get a person from first meeting to laid in a page and a half. It is written from my own perspective instead of the usual omnipotent 3rd person perspective with 1st person quotes on both sides. Some of this makes this story a little awkward, but life's just like that sometimes. Stick with it. I think you'll like where this goes... \n\n...I certainly did.\n\n---\n\nLiving in small town America has certain advantages. I haven't locked my doors since I moved here. I know everyone; judges, priests, sheriff, kids, and storekeepers... everyone. It's the kind of town where the sheriff doesn't chase you for speeding. He waits on your doorstep or if you are a juvenile, he's already talked to your grandma. It has been compared to Mayberry.\n\nThis means that life can get pretty boring too. The closest town of any size is an hour's drive in any direction, but folks make the drive, even with today's gas prices, just to see something new. This makes the town hemorrhage money. Most money that comes into the community's families goes straight to WalMart, 80 miles to the north. Now that the mines closed, were it not for the welfare and retirement checks coming in, this place would be a ghost town.\n\nIt's also a very conservative town. If you aren't Catholic or Methodist, you are regarded with a bit of suspicion. My being an active participant in a non-Christian faith makes it necessary to practice in private, even though Pagans of various types comprise 20-25% of the county's population. They probably live here for the same reason I do. To me, GOD is an acronym. It stands for the Great Out Doors. The view from my front porch is more than sufficient for a daily devotional, and should I need a more serious retreat, nearly virgin wilderness is within a 30 minute drive. \n\nAs a semi-retired professional sound and lights guy, I produce most of the live shows that come to our local theater. At about 250 seats including the balcony, it's fairly roomy yet cozy. Normally it shows movies and employs most of the teens who don't work at our two fast food restaurants.\n\nThe theater was bought twenty five years back in terrible shape... roof caved in and 4 feet of water in the lower seating rows by the stage, but it was all we had. The man who bought it realized that he had a chance to keep some hard earned money in the community and maybe even bring in some revenue from other places. He sunk a fortune into the building and brought it back from the brink of being condemned. He also had a good sound and light system put in along with the projector which he bought when the drive-in closed.\n\nToday it's still here, more as a testament to the good workmanship of the repairmen a quarter of a century ago than to any maintenance done since. The paint, which is done in some of those eye-popping jewel tones favored back then, is chipping and peeling. All the equipment is still there and suffers from the fact that it is expected to perform well beyond its anticipated lifespan. What was once top of the line gear is now scarcely adequate and poorly maintained. Productions are done with skill, luck, and with a fire extinguisher handy.\n\nBoth the sound and light system are antiquated now. The Crown amps still work, and with some basic maintenance, sound as sweet as they did back when they were new. I wish I could say the same for the light board. Back in the day, NSI made some bleeding edge equipment, but times have not been kind to the system. Not only do the controls not always do what they are told, the wiring for the lights has been modified by many well meaning, yet inept people over the years.\n\nIt was to the point where all folks could do was turn all the lights on or off. It was pitiful. Volunteering to help make things better, I had a look. Six months of unpaid labor later, some of that on a 25 foot rickety ladder to reach an improvised light bridge, I could make the lights sit up and dance... barely. \n\nI wasn't entirely happy with things since it wasn't perfect, but it was a damn sight better than it had been. There was only one problem. I was the only one in town who could make it do anything other than turn pairs of lights on and off, much less program it. When a fairly well known \"crossover\" band announced that it was coming to town, I had to make sure it was the best show I could make it. Not just for the performers and myself, but primarily for my community.\n\nIt was a sunny Thursday afternoon and time for the first rehearsal. While I saw the pictures in the fliers, nothing prepared me for what walked through that door. Four twenty-something clock-stopping female bodies with none of the \"performer attitude\" I have grown to expect, having cut my teeth in Nashville's music industry. Everyone was human and professional... rare traits in the music biz I found to be filled with prima donnas of both sexes.\n\nDuring set up, the drummer noticed a buzz in her set. Anyone who has played drums will tell you that finding an intermittent buzz in a drum set is just about impossible by yourself. Moving around to listen changes the way things sit against each other, and the sound changes or goes away. The solution was self evident. While she thumped on the drum, I wound my body around the set under her legs to find the loose bit. It must have been a sight, me an athletic forty-something twisting around underneath this gorgeous creature to chase down a ghost. To my credit, I never tried to catch a peek; I was the epitome of professional.\n\nWhat I found was an easy fix... the bass drum pedal mount had a loose screw. Locktite and a screwdriver fixed that, while a little gaffer's tape in the jaws of the clamp made things a little more forgiving. As I was cinching things down, she remarked that I was remarkably flexible for an older guy. I just took the backhanded compliment, smiled, and moved on. Other issues fell quickly as well... So quickly in fact that we were set up and ready with hours to spare. It was then that I took the time to formally introduce myself to the band. \n\nIt turns out that they were all sisters. Faye, a wiry 24 year old was on strings, Chrissy, a curvy 26 year old was the vocal talent, May and April were tall dark twins who did keyboard and drums respectively. I noticed that for identical twins, May and April were remarkably different. May had more confidence and a bit more of an experienced air about her, while April had a childlike innocence and shyness. Physically they were close, but they had enough differences to easily tell them apart if you knew where to look.\n\nWhile I hit it off with all the sisters, April and I just migrated toward each other. Before we knew it, the rest of the crew has left us alone to talk. In contrast to much of the small town I live in, she came across as smart and educated. I heartily enjoyed our chat. It was over way too fast, but it was time for the full rehearsal. \n\nI took my station, followed the play list and made the sound \"pop\". The lights were appropriate and on time, but uninspired. I am a perfectionist, and I was almost happy for a rehearsal. The trouble was spotlighting the players while creating the mood for each song. I started scribbling notes to improve things. I was getting ready to move the stage monitors a little to kill an 80Hz resonant growl that made things sound a little muddy, when April sauntered up. \n\n\"Thanks for helping me out with the drum set,\" she said.\n\n\"No trouble at all. I expect issues like this, that's why I have what I call a crash kit. It's a bag with everything needed to fix just about anything,\" I said smiling.\n\n\"That was incredibly well done for a practice. It's even better than some shows we have done.\"\n\n\"Really?\"\n\n\"Yeah. The sound guy usually blows off practice sessions. I guess they think rehearsals are just for the musicians.\"\n\n\"Hon, my sound experience comes from production studio and stage work in Nashville. If there's one thing I learned from that, it's that there's no such thing as a 'blow off event'.\"\n\n\"That explains it. We've worked with some real winners, let me tell ya!\" Faye said in passing.\n\n\"Don't worry about a thing. The concerts will be even better.\" I said.\n\nApril flashed a smile that lit up the room and winked at me as her sisters dragged her off to dinner. Smiling and shaking my head, I finished my notes, adjusted the position of the monitors about 18\" inboard to kill the ground wave on the stage which caused the resonant growl and went home. \n\nComing home to an empty house is always rough on me. I'm a divorced dad who's daughter plays musical houses, and that particular week she was with her mom. Still, I had this warm spot growing in my heart and a grin that I just couldn't get rid of. I wish I could have told my daughter about this right then and there.\n\n---\n\nThe next morning I got up, made coffee, fed my daughter's kitten and Babe, a coyote-shepherd mix who's smarter than I am, and did the rest of my morning ritual. Looking at myself in the mirror, I thought about the previous day.\n\n\"Quit thinking about things you'll never get. Yeah, she's gorgeous, but look, don't touch,\" I thought. \"And guard that heart dammit! It's taken a while to find all the pieces from the last time.\"\n\nI decided to eat breakfast out. A breakfast croissant and hash browns... the teen in the drive through called me \"sir\" when she handed me my change. \n\n\"Oh well, you are getting up there you know...\" I thought. With some gray in my hair, an athletic build, and a young face, folks have a hard time pinning an age on me. Opening the old theater, I took out my list to see what I could do while my food cooled down from thermonuclear. \n\nHours later, all the work was done and I'm was eating cold food. I liked what I saw. Looking at the watch I had time to run a full test before the theater opens. I hooked up my laptop to the mixer and brought up similar music. I ramped up the volume and worked the lights. Walking to various positions around the theater, I took notes. Bright presence here, Dead spot here. Tip out the monitors five degrees... \n\nI didn't notice that anyone else was in the theater until I felt a tap on the shoulder. Jumping out of my skin, I spun around. There was April with her megawatt grin putting my stage lights to shame. She said something; I could see her lips move, but I couldn't hear. Extending my index finger in the universal 'wait-a-sec' sign, I bounded down to the sound board and brought the volume down to mere mortal levels. \n\n\"Hi!\" I greet her with a smile. \n\n\"Brilliant... that's the best I could come up with? Maybe the university should make sure we take charm lessons before we get that degree. It would keep all those awkward engineer jokes from being so damn true,\" I thought to myself. \n\n\"Hello! I thought I'd come early to get some peace and quiet. Crowds aren't really my thing.\"\n\n\"Ah, no worries. I was nearly done anyway. One little adjustment and I'll be off.\" \n\n\"Oh, I said that wrong,\" she said. \"Please stay. I want to be around people I like. It's the chaos of the crowds that gets to me.\"\n\n\"Okay. I'm the same way. Maybe we can pick up where we left off when your sisters towed you off to dinner?\" I said smiling as I adjusted each monitor's angle out another five degrees to kill a dull spot.\n\n\"I'd like that,\" she said with a smile.\n\n\"Damn, I'm going to need sunglasses to protect myself from that radiant smile,\" I thought.\n\n\"You're going to need something for your heart before this was all said and done!\" chided a voice from somewhere in the far recesses of my psyche. He's that little voice we all usually ignore. You'd think he'd be used to it by now.\n\n\"A shy performer... isn't that a contradiction?\" I said with a grin of my own.\n\n\"Yeah. I can hide behind the drums, and with the lights in my face, I can't really see the crowd.\"\n\n\"April, this is your fourth tour and with an average of 20 stops per tour and 3 shows per stop, that's what, 240 or so shows? I'd think you'd be used to the publicity by now. Why are you still so shy?\"\n\n\"I'm ugly,\" she said.\n\nYou could have knocked me over with a feather. Here was this gorgeous creature informing me that my eyes need checked. \"Excuse me?\"\n\n\"I'm ugly. I have a deformed ear, a big birthmark, and my sisters are all prettier than me. See?\" \n\nAs she turned her head from side to side she showed me what I had noticed during set up. She had two perfect ears, they just didn't exactly match. Now I admit that my scale of beauty is very wide, but April registered a solid nine plus change on my ten scale. \n\n\"Yes, I see... but you are anything but ugly. Anyone who tells you otherwise is a fool and needs his eyes checked. What idiot told you that, if you don't mind me asking?\"\n\n\"My ex-fianc\u00e9e,\" she was tearing up. \"He told me that I was misshapen, hideous, and ugly.\"\n\nI just stood there with my mouth open. Using those adjectives to describe a person to their face will put you in a dark little place in my heart. Convincing this beautiful, kind, and gentle woman that his vicious description of her was correct ignited a quiet fury in me. \n\n\"If I find this ass in a dark alley, I'll show him misshapen... in the god damned mirror!\" I thought. \"I'll fuck him up good!\"\n\nHer quiet sobbing snapped me out of my happily murderous daydream. I put my arms around her and pulled her close. She put her head on my shoulder and convulsed with her sorrow. \n\n\"I have got to fix this,\" I thought sadly. \"This is no way for her to live.\"\n\n\"April,\" I said \"I think you are beautiful.\"\n\n\"Huh? No,\" she sniffed leaving a wet shoulder behind.\n\n\"I do. Really. I assume your ex-fianc\u00e9e was your age?\"\n\nShe nodded.\n\n\"I think I have a little more experience in seeing and recognizing beauty around me at my advanced age. Trust me, you are stunningly gorgeous. All of you took my breath away when you walked in yesterday, but you were the one who really caught my eye.\"  \n\nThat little voice screamed \"What in god's name are you doing???\" As usual, I ignored it. \n\n\"Advanced age? You're what, 35?\"\n\n\"46,\" I corrected.\n\n\"Wow. You don't look it,\" she said as she looked me up and down. \"Come to think of it, you don't move like it either,\" \n\n\"Thank you. If I gracefully accept your compliment, will you give me the satisfaction of accepting mine?\"\n\n\"Okay, but...\"\n\nI cut her off. \"No buts. You are incredibly pretty... the stuff of legends. The longer we argue about this, the more cheesy the compliments will get, even though they will all be true. You might as well concede now.\"\n\nThrowing up her hands she acquiesced. \"Okay, okay! You win.\"\n\n\"I usually do. I never take a stand unless I am right, and I always tell the truth. Now, I'd like to hear you say it.\"\n\n\"What?\"\n\n\"Say 'I am beautiful'.\"\n\n\"Ummm...\"\n\n\"Don't make me get you in front of a mirror to prove it. Say it.\"\n\n\"You're serious.\"\n\n\"Absolutely.\"\n\n\"Okay. I am beautiful,\" she said a bit unconvincingly.\n\nJust then her sisters walked into the theater. While they didn't see us in the sound booth, we saw them and April was became distracted, looking around nervously.\n\n\"April, are you a truthful person?\"\n\nComing back to the conversation, she said \"Huh? Yeah. I'm so honest, it sometimes gets me in trouble.\"\n\n\"Then believe yourself when you said you were beautiful.\" Checkmate.\n\nShe jolted for a second and slowly smiled at me. This smile was different. This one went past her face and lit up her soul and the world with it. Looking in those green eyes I realized I could loose myself in them. \n\n\"Good thing I am still in control,\" I thought. \n\nThat little voice was laughing at me with that 'I know something you don't know' laugh. Whatever.\n\nShe giggled as her sisters approached the sound booth. \"'...the stuff of legends'? Like Helen of Troy?\"\n\nI put on my best 'geezer' voice impression. \"Well, it was quite a while ago, but I seem to remember that she was not all that beautiful.\" \n\n\"What?\" she looked confused.\n\n\"Well, what would you look like if you used your face to launch 1000 ships?\" \n\nFaye couldn't understand why we were laughing tears when she dragged her sister away to dinner yet again. This time they invited me to come along.\n\nDinner was one of those formal-informal things, a dance every community does for its informal dignitaries. The town was trying to honor their guests with their best, while trying hard to look normal. The performers just wanted food, and had seen this production before in every small town they hit in their tour. It was the kind of dance where everyone knew the steps.\n\nLooking at the time, we realized that we would have to eat quickly to not rush the final preparations for the show. It's one of the funniest things to watch in the music biz. Stars and staff looking dazzling in fine restaurants shoveling food down their gullets as though they haven't eaten in a week. I was glad to see all four sisters eating as voraciously as I was. \n\nThe smiles on the faces of April and myself and the stolen glances across the table did not go unnoticed by the sisters, but I missed the mischievous twinkle in their eyes as well as the silent plotting that was going on.\n\nThe show went uneventfully, and in the music biz, that's a good thing... sorta. The music was fantastic and the crowd enjoyed every minute. Judging by the attendance for a Friday show, I knew Saturday's show was going to be a sell out crowd. I was going to have to do something special, but what? Today the girls left them breathless, but I felt there was room for improvement in my performance. Taking notes again, I wrote my marching orders for the next day. \n\nLooking around I didn't see anyone left in the building, so I headed out the front door which was closer to my car. April was at the door waiting for me. She handed me a slip of paper, kissed me on the cheek, climbed in the back seat of their car with the rest of the sisters, and was off.\n\nThunderstruck, I just stood there for what seemed like hours. Finally, I found myself at my car looking stupidly at my hand with the note. Unfolding it with shaking hands, I had to read it several times. It said:\n\nI would like to get to know you better. Coffee 10am tomorrow? Pick me up at 1251 W. Davis St, up the stairs around the back. \n\n-April the Beautiful\n\n\"Well, fuck a duck,\" I said out loud to no one in particular. \n\nThinking about that little voice in the back of my psyche, I said \"So, what do you think of that?\" \n\nA weak little voice said \"Well, fuck a duck.\"\n\nI don't remember the drive home or anything else that night, other than setting the alarm clock and laying out some decent clothes. That little voice was encouraging for once. He was full of constructive advice: \n\n\"Don't fuck this up!\"\n\n---\n\nSaturday morning I woke with a jolt hours before the alarm. Rather than go back to sleep, I knew it would be better if I just got off to a slow gentle start. After a nice long shower while the coffee brewed, I sat at the dining room table and collected my thoughts while waiting for the caffeine to have its desired effect. \n\nBabe was looking at me with one of those shit eating grins only a coyote can get.\n\n\"What?\" I asked sharply.\n\nBabe cocked her head and kept grinning at me as her tail thumped the ground loudly.\n\n\"Okay genius what now?\" I thought.\n\nGenius is my pet derogatory term for myself. While it's not a misnomer, there are times I feel I could have made better choices. The smarts are there, but common sense is frequently absent. Talking things out to myself, planning for every likely contingency, and making lists are my ways of compensating. ",
        "That little voice said \"Now, we plan.\"\n\n\"Okay. What if she just wants coffee?\" I thought.\n\n\"Unlikely. She passes one on the corner of Davis and Main, and some of the best ones are within a block or two of where she's staying. She doesn't need you to find them,\" said the voice.\n\n\"Hmmm. More of my wit and wisdom then?\" \n\n\"She almost certainly wants to talk, but she seems to want to get you alone and on neutral ground. She will use this time to see where she wants to go with this.\"\n\n\"And where will she want to go with this?\" I wondered.\n\n\"Normally I give you 90% odds that this will end up with you and her doing dinner and dropping her back home with a peck on the cheek, then after a repeat performance things might go farther, but she doesn't have time for that. She packs up and moves on tomorrow night. The odds of you two winding up the in bed tomorrow are low, but possible.\"\n\n\"Sex? Dear gods, that's been a while.\" I exclaimed. \"How low are these odds?\" \n\n\"Given the age difference and other factors, between 10-25%. Low, but they should be considered.\"\n\n\"Shit! Condoms!\" I haven't used them in years, with the vasectomy and all. I probably should have used them all the time, considering why the ex is an ex.\n\n\"You got lucky there. April is a musician. She probably gets around,\" the voice said.\n\n\"Okay condoms are on the list.\" I'll just drop by Safe way on the way out. \"Anything else I'm missing?\" \n\n\"Nope. You'll do fine. Just be yourself and stay in control.\"\n\nI think he was making fun of me.\n\n---\n\nI arrived at Safeway at 9:15 to find that the normally conservative townsfolk apparently had a collective orgy last night. The condom rack was picked pretty clean. Other than the Godzilla condoms, there was only Trojan ribbed with spermicide (not necessary all things considered, and April could be allergic to the stuff) and 1 box of Trojan thin lubricated. Seemed like a no-brainer to me.\n\nSome personal details: I have an odd penis. It's not thicker than average, except at the head, but it's quite long. No, I'm not a card-carrying member or the Hung Jury, but I am a bit over 10 inches when completely erect. This makes the fit of condoms... interesting. It has also stopped sex cold on more than one occasion when I collided with my ex wife's cervix. She swore I was trying to introduce her cervix to her tonsils. The fight that caused was epic. I have learned to be a gentle lover.\n\nIn the checkout, I tried to go to the male cashier, but a lady known to gossip opened her register and offered to help me. As I paid for my rubbers, I could see the flush and twinkle in her eye. The town would know if I got lucky before I did. \n\nAt the car I checked my watch. It was only 9:35, I had plenty of time. I put one condom in the glove compartment and the other two in my pocket.\n\nIn spite of it all, I got there early. It was 9:45 and I was parked in front of the alpine cottage rental where the sisters were staying. Rather than sit in the hot car, I decided to slowly walk around the back and up the stairs, showing up fashionably early. \n\nI got about half way up the long stairway when I heard two of the sisters having an animated discussion. I could tell by the voices it was May and April.\n\n\"You aren't getting cold feet, are you?\"\n\n\"No, I just hope he forgets or something.\"\n\n\"You're scared!\" I could tell by context that this was May, though their voices were practically identical. I stopped on the stairs and considered going back to the car for a minute or two.\n\n\"Yeah. I am. He's so genuine and sweet, I'm scared of screwing this up.\"\n\n\"You WILL screw this up if you don't finish getting ready. He'll be here in about 5 minutes if he's on time. He seems the punctual type.\"\n\n\"Okay, but I don't know it this is such a good idea. I mean, I really thought we had a connection, but now I'm not so sure. Maybe...\"\n\nMay cut her off. \"If you don't do him, I will!\"\n\nI jolted with that statement. \"Okay, time to leave for a bit,\" I thought. \"It seems that my odds have improved, but why?\"\n\nAs I turned to sneak back down the stairs, I saw Faye closing the garden gate and walking straight for me with an armload of groceries. \n\n\"Shit,\" I hissed quietly. \n\nTurning to go back up the stairs, I walked up with a heavy foot so they'd know I was coming. Faye arrived on the second floor landing just as I knocked. She walked in the door ahead of me, keys in her teeth, gestured for me to come in and went in the kitchen to put the purchases away. \n\n\"Did she see me listening? Oh crap, if she did, she'll think I was eavesdropping!\" I thought. \n\nMay looked me up and down. \"April will be ready in a moment. Care to sit and chat?\" \n\n\"Oh boy. Here we go,\" I thought as I nodded and took a seat. \n\n\"April is my baby sister. She's the youngest, but that doesn't mean what it usually does. She wasn't spoiled, rather the opposite. I am kind of protective of her... we all are.\" \n\n\"I can understand that,\" I said. \"Would you mind if I ask something personal? It's about April. If you feel you can't answer or feel I'm prying, just tell me so and I'll drop it.\"\n\n\"Ask away,\" May said with a quizzical cant of her head. \n\n\"April mentioned an ex-fianc\u00e9e who said some very hurtful things to her. Personally, I'd like to beat him senseless for what he said to her, but there's usually a lot more to the story than what either side knows. What exactly happened?\"\n\n\"Well, first of all I didn't tell you, alright?\" \n\nAfter I nodded she continued. \"Johnny was an okay sort, but one of those guys who always is looking for a shortcut to get ahead. Everything was fine with them at first, though none of us liked him. About six months into the engagement he started to get distant. When she asked him about it, he blew up and told her she was ugly and deformed.\" \n\n\"Then what happened?\" I asked.\n\n\"Almost immediately after the wedding was called off, Johnny was seen with another girl. One from a rich family. Apparently, he needed to break off the engagement with April in order to woo the other girl. They married 6 months later.\"\n\n\"Shotgun wedding?\" I asked.\n\n\"Nope. He just wanted to get in the will. She's a real piece of work too. Are you ready for the funny part?\"\n\n\"There's a funny side to this?\" I growled... I was loosing my sense of humor and really getting pissed off at this Johnny. Given half a chance I was going to have his guts for garters.\n\n\"Oh yes. Three months after the wedding, the old man kicks the bucket. It turns out that not only wasn't there any inheritance, but the family was mortgaged to the eyeballs to appear rich. They even cashed out the geezer's life insurance policy to pay for the wedding, gifts, and honeymoon.\"\n\n\"...and Johnny inherited the debt!\" we finished in chorus.\n\nI smiled with a terminal case of schadenfreude. \"Couldn't have happened to a nicer guy,\" I observed. \"Karma's a bitch sometimes.\"\n\n\"There's more!\" she crowed. \"Both families are devoutly Catholic... real old school. They can't divorce!\" May shot me a feral grin and we started to snicker. Now I wanted Johnny to live a long, long time. \n\n\"To the pain,\" I thought.\n\nWe were still laughing tears when April stepped out of the bedroom. She was wearing jeans and a knit shirt which hugged her feminine curves just right. \n\n\"I hope we don't have to drive far,\" I thought as I stood, glad my bits generally lined up right. \"It's gonna be hell trying to keep my eyes on the road.\"\n\n\"Shall we?\" I offered her my arm and she beamed.\n\n---\n\n\"So, where are we going?\" I asked as April closed her door.\n\n\"I'm the one who's new in town. Shouldn't I ask that question?\" she countered.\n\n\"Okay... I'll tell you what. You tell me the category of activity, food, or whatever, and I'll make that happen. Fair?\" \n\n\"Perfect,\" she said. \"I would like a little something for breakfast and a good cup of coffee.\"\n\n\"I know just the place!\" I said as I pulled out of the driveway. I snapped my little Dodge Neon Sport up to the speed limit, slowed briskly, and parked about a half block from her house. She saw we were in front of a little coffee shop.\n\n\"Here?\" she giggled.\n\n\"Best in town, unless you want something like bacon and eggs.\"\n\n\"Cappuccino and a scone?\" she queried.\n\n\"This is the place.\"\n\nStanding in line we found the aroma heavenly. The Front Range Bagel Company made their own baked goods daily but it's not the place to go if you are in a rush. The line processed quickly enough, and there was only a sweet old lady in front of us. For once it was someone I didn't recognize. She seemed to be quite feeble.\n\nAs she ordered, she began to stammer and suddenly tipped over like a felled tree. On her way to the floor she struck her head on the counter, coffee bar, plant pot, and the ground. In an instant, my old military training kicked in.\n\n\"YOU!\" I bellowed pointing at the clerk \"Call 911 and tell them we need an ambulance. Possible stroke. MOVE!\"\n\n\"YOU!\" I pointed at the baker \"Clean towels. NOW!\"\n\nI checked the lady for a pulse and breathing. Strong pulse. Fast. Breathing in deep gasps. \"Ma'am, can you hear me?\"\n\nShe whimpered. Good. It's a response. I covered her with my coat.\n\n\"Hon, an ambulance has been called. You just sit tight. Okay?\"\n\n\"Sorry... didn't want to make a fuss,\" she said weakly.\n\n\"Sweetie, you picked a great place to do this. Help is on it's way and you are in good hands.\"\n\n\"Allstate,\" she said. I could see the corner of her mouth twitch in a weak smile. Memory and humor. Great sign.\n\nThe baker got there with a few towels, some dry and clean, some warm, wet, and smelling of bleach. \n\n\"Hon, I'm going to put some towels down to absorb some of the bleeding.\"\n\n\"I jus' want to stay down here for a spell,\" she croaked.\n\n\"No problem. I'd actually rather you stayed still until the ambulance gets here.\"\n\n\"I like that plan,\" she drawled. Texas accent?\n\n\"Where ya from hon?\" \n\n\"Dallas.\" \n\n\"Really? I got friends in the Metromess. Arlington.\" \n\nShe smiled at the nickname. \"You know, I think I know what I did wrong,\" she said. I could hear the sirens coming in a hurry.\n\nWhat did you do wrong hon?\" I thought she was going to say something like 'I took my blood pressure medication twice'.\n\n\"I was supposed to take my spills in a mattress showroom,\" she smiled and winced in pain.\n\nI laughed at her joke and brushed the hair from her eye.\n\n\"Was there anything I missed on the way down?\" she asked.\n\nI smiled. \"You missed the shop window, but that's about it.\" Awesome. It was probably just the altitude. It can hit people like a ton of bricks, especially if you just got here from somewhere much lower.\n\nThe ambulance pulled up just then.\n\n\"Hon, I'll be right back the ambulance is here.\"\n\n\"I ain't movin' much darlin', promise,\" she drawled. \n\n\"My god, she must have been a firecracker when she was younger!\" I thought. I gave her shoulder a gentle squeeze and rose to talk with the EMTs.\n\n\"Hi Don,\" I said \"I was first responder. Subject is an 80 year old woman collapsed eight minutes ago striking her head on several items on the way down. She has not been moved, nor has she attempted to get up. She is lucid and conversational with less than a 30 second loss of consciousness, if at all. Pulse is strong but rapid at about 110. Breathing was labored but has improved. She is bleeding from a few lacerations on face and scalp.\"\n\n\"Any history?\" he asked looking up from the notes.\n\n\"No gots, I was just the next one in line. Don't know her. Take good care of her though, okay? She's a sweetie and a real trooper\"\n\n\"Can do. You gonna be around later?\" he asked. \n\n\"Shit, where's April?\" I thought, my eyes scanning.\n\n\"Maybe. Don, I'm kinda busy today... Here's my card.\"\n\n\"Your cell number is on here somewhere?\" he asked.\n\n\"Under emergency contact.\" I saw April waiting patiently in an overstuffed chair. She wasn't mad, just watching concerned. \"If you need anything, call me on my cell.\"\n\n\"Okay, but I doubt I'll need to. She probably just needs to get some oxygen. We are over 7000 feet here. Any bets she was at sea level yesterday?\"\n\n\"No bets. She's a Texan.\" The lady was on the gurney. Her face was beginning to swell shut. Broken nose at least, the poor dear.\n\n\"If that's all you need...\" Don said as he started to shuffle toward the gurney.\n\n\"Gloves. Three pair please.\"\n\n\"Done.\" He handed me a handful of nitrile gloves. \n\n\"Mmmm... purple. My favorite,\" I chuckled as I put on a pair.\n\nAs she passed me on the gurney I walked along side. \"Okay hon, this is where I give you over to our professionals. They'll take care of you.\" Someone handed me my coat.\n\n\"You sure? They look awful young,\" she said smiling more with her eyes than her poor face.\n\n\"Yes ma'am, I threatened them appropriately. They'll treat you right.\" She took my hand and squeezed it warmly.\n\nJust before he closed the back doors of the ambulance, I heard Don say \"Ma'am, you are no trouble at all. It's what we do.\"\n\nI handed the cashier and baker the gloves and we started to clean up. She had bled quite a bit.\n\nWhen we were done I walked over to April. \"Are you still hungry?\"\n\n\"Oh God yes, but let's take it to go. I want to see something besides the inside of a shop and theater. I want to see some wild places while I'm out here.\"\n\n\"No problem, what's your pleasure?\" I asked as I gestured to the counter.\n\n\"He's already took my order, just tell the man what you want.\"\n\n\"...and it's on the house,\" the clerk interjected. Unexpected, but quite cool. Within 3 minutes we were back in the car with blueberry scones and large steaming drinks. \n\n\"I know the perfect place,\" I said.\n\n---\n\nAiming the car out of town we sat in silence a while. Me in thoughts about the older lady, and her in her own head as well. It was April who broke the silence.\n\n\"Where did you learn to do that?\" she asked out of the blue.\n\n\"The emergency medical stuff?\"\n\n\"Yeah. That was really impressive. It's like you just switched gears. Military?\"\n\n\"I was in the military, but I was a very different kind of soldier,\" I said.\n\n\"I take it that you were some kind of medic?\"\n\n\"Sorta. I was Air Force Pararescue.\" \n\nShe cocked her head quizzically. \"What's that? I never heard of those.\"\n\n\"There aren't that many of us PJ's out there. We're the guys who get other folks out of trouble. Search and recovery, field medicine, fast deployment. They train us for anything and like to give us all odd jobs... the stuff no one else thinks is possible,\" I said thinking of the unofficial PJ logo showing a caricature soldier with an assortment of equipment on. \"Our motto is 'These things we do that others may live.'\"\n\n\"So you were special forces then?\"\n\n\"Kinda. We are considered special ops, but we use our powers for good,\" I said with a grin.\n\n\"That's funny!\" she laughed. \"Where are we going? \n\n\"About another quarter mile down this highway and a half mile down a side road there's some sandstone bluffs eroded by our constant wind A very cool place, especially on a sunny and calm day like today.\"\n\nI slowed and signaled for a right turn.\n\n\"I see them! Wow, it looks like something from a western movie backdrop.\"\n\n\"Yeah, up close they're even better. Looking at this stuff you can almost see the fact that we'd be under water several million years ago. We're on the edge of the great inland sea.\"\n\n\"The sandstone is from the old sea floor and coast?\" she asked. \n\nI nodded as we stopped the car in the wide spot of the shoulder by a gate.\n\nAs she exited the car she observed the area. \"The gate is chained. How are we going to get in? Should we get in?\"\n\n\"I know the owners. Trust me.\" I said as I picked up a small bundle from the back seat.\n\n\"Lock it up?\" She asked.\n\n\"No, don't bother. I don't even lock it in town.\"\n\nI reached over the fence and unthreaded the bailing wire from around the chain looped around the gate and swung it open. As she walked through shaking her head, I closed the gate and threaded wire through the chain enough to hold.\n\n\"Life is much simpler out here, isn't it?\"\n\n\"It is, but sometimes it gets dull.\"\n\n\"How about right now?\" she asked with a twinkle in her eye.\n\n\"Anything but.\"\n\nWe walked along the path the cattle left for about a quarter mile until the sagebrush, pinions and junipers opened into a flat rocky plain. To the left the path led downward, then cut sharply to the right following the bottom edge of the sandstone bluff. Here I stopped under an ancient wind twisted pine. It was next to a sandstone outcropping the wind had shaped into a mushroom with a narrow base and broad flat top. Sitting a little lower than the outcropping, it was impossible to see from the road. I used this spot for meditating and just getting away from folks.\n\n\"How cool!\" she noted. \"Where to now?\"\n\n\"How do you feel about climbing trees?\"\n\n\"I'm a bit of a tomboy\"\n\n\"Great, up you go,\" I gestured up the twisted pine showing her the branches which made for the rungs of a living ladder. \"At the top, turn around so I can hand up our breakfast and a blanket to sit on.\" She climbed the tree getting to the top quite easily. \n\nWhen she got my small bundle from the car she chuckled. \"I wondered what this was.\" \n\nAs I climbed she removed the Velcro band, spread out the tightly packed and rolled blanket on the center of the rock. By the time I was at the top and on my feet, she was sitting facing me and spread out our picnic. Grinning like a kid at Christmas, she patted the spot next to her. \n\nOnce I got settled she handed me a scone, and suddenly got a stricken look on her face.\n\n\"Sweetie, what's wrong?\"\n\n\"I, ummm... I can't remember which is which!\" she gestured toward the identical tall Styrofoam cups with their steaming contents.\n\nI laughed. \"No big deal. You know how we carried then here? I'll be able to tell by scent.\"\n\n\"No... really???\"\n\n\"Absolutely. First let me smell you. Just a little behind the ear.\"\n\n\"Okay,\" she said a bit unsure. Leaning close she allowed me to put my arms around her. When she leaned her head over to expose her neck, I put my nose behind her ear and sniffed deeply. She shivered as the cool air rushed past the little hairs on her neck. Without perfume she smelled heavenly.\n\nReluctantly releasing her from my arms, I began to sniff at the sides of the cups near the cap. First one then the other. The focused expression on my face evaporated into a grin. \"Here. This one is yours.\"\n\nShe tried the beverage and beamed. \"That was incredible. A little freaky... but amazing! How did you do that? Do you really have that sensitive of a nose?\"\n\n\"No sweetie. You had a cappuccino, and I had chai,\" I chuckled. \"Now, tell me why this was such a big deal.\"\n\nShe was laughing too hard to answer right away. After catching her breath she explained \"Johnny would have been furious. I couldn't have tasted them to figure it out because he would have dumped them out and told me that I had ruined the trip.\"\n\nI was stunned. \"What an ass! He ruins things with his piss poor attitude and then puts the blame on you? Was he afraid of catching something from you? Green flippin' gods! Did he not kiss you?\"\n\n\"Well, yes... but never on the lips\"\n\n\"WHAT??? He never swapped spit but claimed to want to marry you? What the hell?\"\n\n\"Swapped...? Oh!\" she blushed.\n\nI fumed for a bit in silence. April sat in silence too until I noticed her shoulders moving up and down rhythmically.\n\n\"Oh crap. Hey now, I didn't mean to...\"\n\nShe cut me off with one of the most beautiful sounds in the universe. A female belly laugh straight from the heart. \n\n\"'Green flipping gods?' 'Swapped spit?' Hahahahah!!!\" April pointed her finger at me \"You are incredibly funny when you're mad, you know that?\" She punctuated this with a light touch of her index finger to the end of my nose. We giggled for a bit. \n\n---\n\n\"April, would you be offended if I correct Johnny's oversight?\" I asked ",
        "\"What? Uhh... No! I mean I would like that a lot. Dammit, yes please!\"\n\nSmiling I took her face in my hand and drew it near. I kissed her long and gently on the lips, slowly increasing the vigor. When I brought my other hand to the middle of her back she sighed with a contented little moan, opening her mouth slightly. I seized this opportunity to probe between her lips with my tongue. As she felt our tongues touch, she stiffened. \n\n\"Oops, went too far to fast.\" I thought. \n\nJust then she grabbed my head with both hands, fingers gripping my short hair, and crushed our lips together searching for my tonsils. Her hands began a frantic search for anything, gripping and stroking seemingly at random. When the kiss ended, her hands came to rest on my butt and chest. My hands were on her hip and shoulder. She blushed and looked away.\n\n\"Hey, what's wrong sweetie?\" I asked.\n\n\"May said I'd get cold feet. She said I should just let her have at you.\"\n\n\"Are you?\" I asked.\n\n\"I don't know. I want it all, but I don't want to mess things up. I'm not good at this!\" She was nearly screaming the last part in frustration.\n\n\"You were good enough to curl my toes back there... I think what you lack is confidence.\"\n\n\"Do you have a magic fix for this too?\" she cocked her head.\n\n\"Actually, I do,\" I quipped. \"Want to hear it?\"\n\n\"Sure.\" \n\n\"The problem is consent and communication. I come from a culture where no means no, maybe means no, and yes means maybe. You are afraid of coming across as a loose woman, which I know already you are not. So what we need is a way to communicate your desires in a way you and I find acceptable.\"\n\n\"Okay,\" she said with a hint of confusion.\n\n\"If you want something done to you, do it to me, or it's male analog. If either one of us wants to stop, just say so. The other will stop immediately. If we don't want it to stop, then we simply enjoy the gifts the other has put in front of us.\"\n\nThe light went on. \"I like this plan. Are you sure?\"\n\n\"Absolutely,\" I said. \n\n\"What have I got myself into?\" I thought.\n\nWith that she tackled me. My shirt was the first to go, followed by hers. She felt my chest as I gently caressed her breasts through her bra. She reached back and unclasped her bra and I took this opportunity to remove my tee shirt. \n\nOnce the tee shirt cleared my vision, there were a beautiful pair of breasts in my face. I noticed the lack of tan lines or any evidence of visits to a tanning booth. Her natural color looked like a perfect tan. People would kill for what she had naturally without cosmetics or tanning booth. Idly I wondered about her ethnicity, not that it matters to me. I am quite a mutt myself, as only rural Montana can produce.\n\n\"What are you thinking?\" she asked.\n\n\"Not much really. I'm a guy with a pair of perfect breasts in front of me. Thinking really isn't a skill I posses right now.\"\n\n\"Oh puh-leeze,\" she drawled.\n\nI pulled her arm toward me catching her breast in my open mouth. Using gentle suction I drew her nipple into my mouth where I lashed it with the tip of my tongue. She hissed as she sucked in air through clenched teeth. \n\nI felt her nipple harden and expand in my mouth. Lightly clamping her erect nub in my teeth, I inhaled slow and long. Her back arched as the cool air rushed past her nipple exciting it further. \n\nWhen I could inhale no more, I released her nipple from my teeth, exhaled, and opened my mouth wide covering my teeth with my lips. Pressing my face to the assaulted breast, gently sucked the it into my mouth, I lay my warm wet tongue over her chilled nipple like a blanket. She whimpered in appreciation.\n\nSwitching my attention to the other breast, I took a slight detour nibbling gently on the back of her jaw under her ear. She shuddered as chills whiplashed through her. When I repeated my performance on her other nipple, I noticed that while she arched and groaned, she had her eyes squeezed shut and humping my thigh, gripping my erection through my pants with one hand, and rubbing her breast and overstimulated nub with the other.\n\nI gripped her hips with my hands and using her belt for leverage, I pitched her pelvis a bit forward as I pulled her down and toward me along my thigh. She gritted her teeth letting out a low growl. Her green eyes opened with a feral look of need. She backed away and unfastened her jeans wiggling out of them and kicking them over to one of the random piles we had made along with her shoes and socks. \n\nDressed in only a pair of pink panties, she fixed me with a needful stare and waited. My pants, socks, and shoes came off my body nearly of their own accord. We met in the middle of the rock and embraced. When I reached for her panties, her hands arrested my progress. \n\n\"What's wrong?\" I asked.\n\n\"There's something you need to see before we go any farther. If you loose interest in me, I'll be hurt, but I'll understand.\"\n\nWith that she turned around and showed me her butt. It took me a while to realize what I was supposed to see and be repulsed by. She had a port wine birthmark on her right buttock from just below her hip bone to a little down her thigh. Then she turned back around with a sad little expression.\n\n\"You are right,\" I quipped. \"The left side does hang a bit lower.\"\n\n\"What??? OH! You shit! It doesn't bother you,\" she said more as a statement than a question.\n\nWhen I shook my head, she grabbed my bikini briefs and pulled them down past my knees. She barely missed being hit in the nose by my freed erection.\n\n\"Oh my!\" she said. I shook my underwear the rest of the way down my legs and kicked them in the air. As they spun in space, I caught them and neatly placed them in the pile that contained my pants. I fished a condom from my pants pocket.\n\nTurning back around, all I could see was pink. She timed it perfectly and flung her panties across my face using the elastic as a rubber band. Her musk was intoxicating. Feigning blindness, I felt around heading for the edge of the rock. \"April?\"\n\n\"Oh shit!\" she exclaimed as she grabbed my arm to keep me from teetering to my certain doom. I reached back and grabbed her spinning to the ground in a controlled decent that looked anything but. She landed breathless straddling my thighs with her chest on my abdomen. \n\nNow she could see me peeking through a leg hole of her panties. We started to giggle and soon were awash in hysterical fits of laughter. \n\nShe began to slide down my body while my rock hard cock slid up between her breasts. She picked up the head with her lips and began to bring her head down the shaft. About half way down I removed her sopping panties from my head and stopped her.\n\n\"April sweetie, just a second. I am a bit longer than most, and you make your living with your music and voice. Let's not do that right now. I really want to, but I don't know that it won't mess things up.\"\n\nShe considered briefly. \"You're right, you are much bigger than Johnny, though I'd like to try it with you later.\"\n\nTwo thoughts flashed through my mind: \n\n\"Johnny had her go down on him, but wouldn't kiss her properly? That fucking BASTARD!\" \n\nand \n\n\"Later? Woohoo!\" \n\nMen can multi-task... who knew?\n\n\"Okay, now turn around so I can 'do unto you'\" I said as I smiled at my most lecherous.\n\n\"No. I would love for you to, and you'd be my first, but until there can be a fair exchange, no deal. That's our agreement, right?\" \n\n\"Shit. Did I say that?\" I wondered silently.\n\n\"All right. What comes next?\" I asked her.\n\n\"I'm going to put that rubber on you and show you,\" she grinned.\n\n\"Oh. I figured I'd get you good and wet first.\" \n\n\"You saw the condition of my panties. Do you really think that's going to be a problem?\" \n\n\"Umm... probably not,\" I chuckled.\n\nWith that she plucked the condom from my hand, opened the package and attempted to unroll it on my cock. Getting it started was always the trick, a rolled up condom is the least flexible and my head is the widest. Finally it rolled down the shaft. Grinning in triumph, she straddled my hips and began to insert the head between her dripping folds. \n\n\"My god she's a tight fit!\" I thought as things began to move. \n\nOnce the head was mostly in she arched back and slammed my cock home. I felt a crushing tightness and a pop. \n\nI would have thought the condom broke were it not for the convulsion that spasmed up her frame and the tears rolling down her face. Time came to a screeching halt and we both froze. \n\nSuddenly I jack knifed upward and hugged her close. \"Oh fuck, she was a virgin!\" I thought.\n\n---\n\nI could feel her body spasm sporadically, crushing my cock like a vice. Every time she spasmed, her body jerked and a whimper escaped her. I just held her until they subsided. \n\nWhen she finally opened her tear filled eyes, I asked her a simple question: \"Oh Sweetie, why didn't you tell me?\" \n\nShe adjusted things and grimaced a little. \"You might have freaked if I told you. I wanted this so bad. I wanted you so bad. I couldn't take the chance.\"\n\n\"I would not have freaked and ran for the hills, but I would have liked to take things slower. Maybe get to know you better over a couple of dates.\"\n\n\"You and I don't have that luxury. We will have to be at my next gig in two days, one spent packing and driving. My record company has got us hopping to fulfill our contract, or else we get taken to the cleaners,\" she pointed out.\n\n\"Okay. I can't guarantee that I would have said yes on your timetable, but in the future, can we talk about things first?\"\n\n\"Absolutely... uhhh... what are you doing with your hips?\" she said as she bit her lip.\n\nI just smiled. While we were talking I was slowly rocking my pelvis forward and back. While my cock stayed wedged deep, it was changing the pressure on her clit and moved the base of my cock along her slit from front to back. As the pain receded the pleasure was building.\n\nShe started to rock her hips in time with mine. The combination of motions ground her clit on my hip bone with my pubic hair to tickle. It also began to move my cock in and out in short strokes.\n\n\"OooOghaaawd!\" she shuddered. \n\nAs she became more vigorous driving front to back with my cock buried to the hilt, I quit rocking my hips. Instead I increased blood pressure to my cock by clenching my butt cheeks and tightened my abdominal muscles to increase pressure on her clit. The head of my penis was putting a lot of pressure on her cervix, but she didn't seem to mind. In fact it seemed to drive her into a frenzy.\n\n\"Ohh. H-ah. H-ah. H-ah. H-ah! H-ah! gu-UH! H-UH! H-UH!\"\n\nI began to pick up her hips with every forward stroke and let her bring herself back down. She began to really go nuts.\n\n\"OH! GEEZ! MORE! MORE! HARDER! HARDER!!!\"\n\nApril was raising herself nearly off me before driving my full length back in. Few women have ever been able to do that without pain. My astonishment was short lived though as I felt the mother of all orgasms rise from my toes. I did my best to hold off since she was so close.\n\nWhen I couldn't hold back any more I arched my back and bellowed, lifting April off the ground. I saw her eyes roll back in her head and she screamed. It was one of those screams that starts in a normal low vocal range like a moan but ends up breaking glass and driving dogs to thoughts of suicide. The end of the scream was largely inaudible, but it distorted sound and made my ears feel wet. She collapsed against me, and once again I just held her. \n\nWe somehow managed to be off the side of the blanket, since everything below my waist was on the bare sandstone. I must have cum in buckets, because the sandstone was soaked with her blood and my semen. \n\nAs a pagan, I knew this was an auspicious thing. \n\n---\n\nWhen I awoke some time later, I gently rolled her off of me. My softened cock slid out of the condom with little friction and I gently pulled the condom free of the still sleeping April. I squeezed the semen out and dropped it with the rest and April's virginal blood on the sandstone.\n\nAs was my family's religious custom, waved my hand in an invoking manner and said:\n\n\"May the offering of male and female, power from opposites, upon this altar bring blessings, confidence, and great fortune to us all. \n\n\"May we find our own unbound paths, and may they cross again.\"\n\nTurning around to wake April and gather clothes, I found her staring at me with wide eyes. \"What exactly was that?\" she asked. \n\n\"Oh crap,\" I thought.\n\n\"April, ummm... what religion are you?\" I asked.\n\n\"I used to be generic protestant, but right now I'm pretty agnostic. Why?\"\n\n\"What do you know about Pagan religions?\"\n\n\"I have an aunt that calls them devil worshipers, but I know better. I have friends who are Wiccan. They are good folks.\"\n\n\"Well, I am another type of Pagan called a Famtrad. That's short for Family Tradition, indicating the practice is multi-generational. The main difference between us and Wicca is that we've been doing it longer and it tends to be more integrated in our everyday lives.\"\n\n\"Integrated... how?\" she asked.\n\n\"Many of life's events mark the procession of time both from a personal event and calendar point of view. Each of these events should be revered and recognized. Also certain actions, words, and thoughts have power. This is power we lend them which we must then draw and instruct for desired effect... we call this process magick.\"\n\n\"Okay, so what was that little ritual you just did?\"\n\n\"It served three functions. First, it recognized a rite of passage, namely yours. Second, it pushed for blessings, confidence, and great fortune for us. Finally, it pushed for each of us to be our own person, but have our paths cross again.\"\n\n\"I thought I already was my own person. There's more to this, right?\"\n\n\"Yes. Personal items can be used to bind a person to another or to a fate. The more personal, the greater the power of the bind over the individual. How much more personal could there be than the blood from your virginity and my semen? I wanted to be sure there was no energy given to a bind between us.\"\n\n\"So, you don't want to have anything to do with me?\" she said with a disappointed tone.\n\n\"Actually, quite the opposite. I want to see you a lot, but I would like or this to happen because we choose to, not because our fluids mixed in the dirt, and somewhere I feel that should mean something, accidentally lending it power.\"\n\n\"Got it. Housekeeping of a sort then?\" \n\n\"Yep. According to my world view, we did some powerful magick. This kind of thing needs guided and defined, or else it will have unexpected consequences.\"\n\n\"So, why all the sneaking then?\"\n\n\"Sorry, old habits. I didn't think you'd be this cool about it. Most folks are quite finicky when they find out about my religion. I felt I needed to do this and you being asleep gave me the perfect opportunity without worry.\"\n\n\"I'm going to use your words on you now. 'In the future, can we talk about such things?'\"\n\n\"Touche. For now though, let's get dressed and go somewhere indoors. We are both turning pink.\"\n\n\"Wow! I never burn this fast.\"\n\n\"It's the high altitude sun. There's not a lot of atmosphere above us to filter out the UV.\"\n\n\"Okay. So where are we going?\"\n\n\"My house. I plan to feed you and then show you what you missed because of abstinence.\"\n\n\"Not that I mind, but why? Is it one of those little rituals you do?\"\n\n\"Sort of. My dad told me 'never bed a virgin once. Make sure she gets the full E-ticket pass to Disneyland.' Sex being something that could be wonderful or a dreadful for a woman, and he felt that it was the man's duty to make sure the virgin's first time would be the best that it could be.\"\n\nGrinning, she said \"Wise man. What did you do with my panties, dear? I'm starving!\"\n\n---\n\nArriving at my home she was surprised. First by the condition of the house, then by my housekeeping. The house is quite old and has seen more than it's share of hard times. As an engineer, I tend to repair the functional items before the cosmetic. The house looks like it's ready to be condemned from the outside, but once inside she discovered a warm and tidy home.\n\n\"It's a work in progress,\" I said. \"My next project is to improve the bathroom. I want a big bathtub.\" \n\n\"When are you going to paint the outside?\" \n\n\"Next year. The trim on the outside is a total loss, so I'm gong to have to replace it all and probably a window or two as well. Besides, I have a reputation to uphold.\"\n\n\"What reputation is that?\" she eyed me suspiciously.\n\nChuckling I said \"The condition of the place on the outside makes folks think of a haunted house, especially with a little help from specialty lighting and sound. This close to Halloween, it almost seems like fixing and painting would take some of the joy out of the event.\" \n\nWe both laughed at the thought of little ghouls terrified about walking up to what is arguably one of the safest houses in this sleepy little town.\n\n\"What are you in the mood to eat dear?\" I asked.\n\n\"You, but you won't let me,\" she pouted.\n\n\"Food wise, sweetie. We need to eat before we faint from hunger right in the middle of all the fun and exertion.\"\n\n\"A sandwich of some kind? I'm not real picky.\"\n\n\"Anything you won't eat?\"\n\nShe grinned. \"Johnny. I think I was still hung up on him until this morning. He could have asked me back and I think I would have ran to his feet. Food wise? I will eat anything.\"\n\n\"I'm glad to hear that, on both counts. What to drink?\"\n\n\"Water is fine,\" she said.\n\nThere was a few minutes of silence as I made sandwiches worthy of the wait. Triple deckers with salami, ham, cheese, baby spinach leaf and anything else I could find that wasn't nailed down.\n\n\"Jesus! Now that's a sandwich! Oh... did I just offend you?\" she asked concerned.\n\n\"Huh? How? Oh, the Jesus thing. No sweetie, He's your boy. That doesn't bother me in the least. I do have an unrelated question though,\" I said as I filled two glasses with water.\n\n\"Ask away,\" she stated flatly as she took the water and struggled to bite into a sandwich taller than her mouth could open.\n\n\"You mentioned that Johnny still had quite a pull on you until this morning. Why do you think that was?\" I asked as I bit into my lunch after squishing it down a bit.\n\n\"MMMph!\" She was still chewing. Finally she said \"I'm not sure. The more he treated me like shit, the more I felt like he was the only person in the world who would put up with me. He had me in a really bad place.\"\n\n\"Okay. That explains the change once we started talking and...\" I paused looking for a gentle way to put what we had done on the rock that tied it all together.\n\n\"...the term I think you are looking for is 'fucking',\" she said with a grin, taking another bite.\n\n\"Nope. What we did wasn't fucking. We'll do that in a bit. What we did on the rock was closer to making love.\"\n\n\"Mmmm,\" she swallowed her bite. \"Okay. I'm sure I'll learn the difference in a bit... Oh, hello! Who are you?\"\n\nBabe had tripped the door latch and walked in. Usually she was suspicious of unfamiliar people, but she walked right up to April with her ears back and tail drooped and wagging. She was accepting April, sight unseen, as a superior member of her pack. She has only done that a couple of times before and I've come to realize that she is an excellent judge of character.\n\n\"This is Babe, my 'yote.\"\n\n\"Your what?\" she asked puzzled.\n\n\"Babe is half German Shepherd and half Coyote. Got the smarts and body of the coyote, but the coloration of the Shepherd.\"\n\n\"How smart is she?\" she asked.\n\n\"She let herself in just now, she is an excellent judge of character, I'm pretty sure she can drive a stick, and I'll never teach her chess for fear of losing,\" I said with a smile\n\n\"She seems to like me well enough,\" April said with a smile as she pulled a piece of ham from her sandwich. Babe sat looking intently at April with a 'don't tease me so' look in her eye and quivering lip.",
        "\"So I noticed.\" I smiled as Babe gingerly took the treat from April's hand with only her lips. As she lowered it to the floor to eat it, Babe shot me a 'See boss? I'm on my best behavior!' look. Shaking my head in amusement, I polished off the last of the sandwich and tossed back the water. \n\nFinishing her last bite, April asked \"Where's your bathroom?\" \n\nI pointed down a short hallway to the door at the end. \"Right through there, and when you are done, come through the second door. You'll see what I mean.\"\n\n\"Okay. Back in a bit,\" she gave me a long kiss on the lips. I sucked her lower lip, gripping it lightly in my teeth as she pulled away. As she walked to the bathroom, she looked back and gave me a look that would ignite concrete. \n\nChuckling to myself, I thought \"I think she liked it!\"\n\nAfter putting the dishes in the sink I walked in the bedroom. I pulled the condom from my pant pocket and placed it on the nightstand. The one in the car will be okay where it is. I took off my shoes and socks and turned down the bed. \n\nApril walked out of the bathroom and into the bedroom wearing only a smile.\n\n---\n\n\"It seems I over dressed for the occasion,\" I said. As I began to reach for my shirt buttons, she swatted my hands away and slowly unbuttoned my shirt. \n\nCircling around, she removed it from the back, reached forward and unhitched my belt. When my jeans were unbuttoned and unzipped they dropped to the floor. Circling around once again, she lowered my underwear to my knees. \n\nAs she rose, she gave my cock a lick along the underside... and gagged. \"I forgot you had a condom on earlier,\" she said apologetically. \"Latex isn't a pleasant taste.\"\n\nRaising her up, I took her in my arms. \"It's okay sweetie... What do you know about different positions for sex?\"\n\nShe got a confused look. \"There are different positions?\"\n\n\"Oh yes. More than a hundred.\" Seeing the shocked look on her face, I continued \"...but I only know a few.\"\n\n\"You had me worried! I imagined how I'd walk if we did it over a hundred times...\"\n\n\"I could look them up on the Internet if you want, so we can try them all...\" I said trying to suppress my smirk. \n\nShe snickered. \"No thanks. I would like a good education on the few you know please.\"\n\n\"As you wish. If you don't like something about any particular position, tell me and we'll change it up or try something else. For our first stunt, there's the missionary position.\"\n\n\"Okay what do I do?\"\n\n\"Most who do this one just lay there and try not to think about how much of a sin sex is.\"\n\nShe laughed. \"No, seriously... what do I do?\"\n\n\"Sorry, I shouldn't have said that,\" I said. \"Lay on your back with your legs spread and knees bent.\"\n\n\"Like this?\"\n\n\"Perfect.\" \n\nAfter I put the condom on, I positioned myself between her legs and slowly eased myself in. It was amazing how tight and wet she was. When I finally had it all in, I started to stroke in and out with long strokes. Speeding up my tempo, I noticed that she wasn't really getting into this. \n\nI slowed a bit and asked \"Is something wrong?\"\n\n\"I didn't want to say anything, but can we try another position? This one just doesn't really do it for me.\"\n\nI laughed. \"Sure sweetie. Turn on your side with the lower leg straight and the upper leg bent.\"\n\n\"So much for vanilla sex. The poor boys back home aren't going to know what to do with you!\" I thought. \n\nStraddling her right leg, I slid forward gently burying my cock to the hilt. \n\n\"Ooooof!\" she gasped as I bottomed out. Grasping her left thigh for leverage I pistoned in and out with long strokes.\n\n\"Ohh! H-ah. H-ah. H-ah. H-ah! H-ah! H-UH! H-UH! H-UH!\"\n\nI picked up her left thigh and positioned my thigh against her body. Clamping my knees inward with every inward stroke, I put pressure on her pubic area parting her lips and grinding her clit. Within minutes she was screaming in pleasure.\n\n\"UgggghhhHAAADDD!!! H-UH! H-UH! H-UH! H-UH!!! ... iiiiiieeeeee!\" she screamed as she came and went limp.\n\nTaking great care not to touch overstimulated bits, I dismounted and lay behind her petting her damp hair away from her sweating face. Her eyes slowly opened.\n\n\"That was a bit too much. GOOD! ...but too much. Jeez, I'm still twitching! I liked it when you slid way in,\" she observed once she caught her breath.\n\n\"Honestly, I overdid that one a bit. It usually won't be that intense.\"\n\n\"Okay, what's next?\" she asked.\n\nSmiling, I cuddled up behind her. \"This one is called the spoon. Reach between your legs and guide me in.\"\n\nOnce the head was in, I slowly drew my body up and bent her over allowing my cock to glide in. Gently I rocked her hip in a circular path. Before long she was breathing hard. She tried to speed things up, but I controlled the strokes and kept her pelvis moving in the slow circles. \n\nShe flushed, shuddered and gasped as the orgasm that was sneaking up from behind claimed her.\n\nAs I drew myself out of her, she breathlessly said \"Oh wow, what a surprise. I didn't think it was getting anywhere until the end, then I had that gentle giant of an orgasm.\"\n\n\"I thought you'd like that one after the rougher set earlier.\"\n\nShe just sighed and smiled a contented little smile. Reaching back she gently grasped my cock.\n\nFeeling me still rock hard, she turned and looked at me in shock. \"You didn't go off!\"\n\n\"No, not yet. There's more positions and I want to draw this out a bit. You want to keep going?\"\n\n\"Oh yes. I'll let you know when I have had enough,\" she smiled.\n\n\"Okay then. This time I want you on your back like the missionary position, but with your legs off the bed.\"\n\n\"Like this?\" she asked when her feet touched the ground on either side of me.\n\n\"Precisely,\" I said as I knelt on the floor between her legs. Leaning forward I lined up my cock with her pussy. I noticed that it was becoming red and swollen. \n\n\"I better wrap this up soon. She's going to be sore when the endorphines run low,\" I thought as I leaned forward and pushed in.\n\n\"I don't really see the difference between this and missionary... ahhh! Okay! Things line up differently. Oh shit!\"\n\n\"Damn! All I did was put it in, and I haven't moved since,\" I thought. \"She's all kinds of worked up!\"\n\nSlowly I started to lean back and forth on my knees moving in her with long strokes using her thighs for balance. She started to orgasm immediately, and I kept the slow long pace through the first, second, and a third climax. After this I slowed and stopped.\n\nShaking her head as though to clear a fog, she asked \"Is everything okay?\"\n\nI rose stiffly. \"This position is really hard on my knees. I should have grabbed a pillow or something.\"\n\n\"Well silly, change positions then. Do you know any that are easy on the knees?\" she asked with a grin.\n\n\"You already know one. Most people call it 'riding' or 'cowgirl',\" I said as I lay on the bed on my back.\n\nApril squealed with delight as she pounced on me. Guiding me in her she rocked her hips just as she had done on the rocks and slammed it home. As the head of my cock thumped her cervix, an orgasm ripped through her. It looked like an invisible hand played crack-the-whip with her spine.\n\n\"I hope her next boyfriend is well hung,\" I thought. \"She really likes it deep.\" \n\nAfter bouncing on her knees for a while, she leaned forward gripping my shoulders as though she doubted gravity itself. I lost count of the orgasms she had, as they seemed to be continuous, rolling through her in waves, as she slid forward and back in a frenzy.\n\nI felt a familiar surge start to build, and I slowed her. When she looked at me questioningly, I picked her up and slid out from underneath her. I took a kneeling position behind her on the bed and gently pushed her forward until she rested on her hands and knees.\n\nShe was still vibrating from riding, so I drove it in to the hilt. She shrieked and gripped the sheets. Grasping her hips, I vigorously hammered her for a several minutes, driving us both in a frenzy.\n\nWith April screaming to wake the dead, neither one of us heard the bedroom door click out of the latch and swing open a little.\n\nJust as we were about to have a massive simultaneous orgasm, I felt a caress that began at my ass and traced down to my balls. I drove reflexively forward, while April felt a stroke from pussy to clit that caused her to drive back against me. As we collided and both exploded in mind-blowing ecstasy, I felt a pop on the end of my cock. \n\nWe collapsed on each other and heard a muffled yowl. I rolled left, April rolled right, and my daughter's kitten ran straight off the end of the bed and out of the room, paws and claws fruitlessly seeking traction to make the high speed turn on the hardwood floors heading for the safety of the couch. He had walked between our legs with tail held high as cats do, and hit the sensitive bits just right. We burst out with laughter.\n\nWe laughed until I looked at the condom I was wearing. The end looked like a balloon that had popped with shreds hanging off like petals of a flower. Snapping my attention to April's vagina it was clear what had happened. A river of semen flowed from her.\n\n---\n\n\"Goddammit!\" she yelled at no one in particular. \"First time out and I'm going to get pregnant!\" She raised up, curling her body to inspect herself which forced copious amounts of cum from between her lips. I have always had a lot of volume.\n\n\"Sweetie, it's actually your second time, and I have some good news and bad news for you. Which do you want?\" I asked, pulling the remains of the condom from my penis before it constricted blood flow.\n\n\"I need the good news right now because I'm at my most fertile. Give me the bad news though.\"\n\n\"The odds of you getting pregnant by me are 5000 to 1 against.\"\n\n\"That's the bad news? Explain,\" she said. She was mad. Not at me specifically, but the world at large and herself most of all. I hope my news would cheer her up.\n\n\"I have had a vasectomy...\" Seeing her confusion I continued \"kind of like getting your tubes tied for a guy. All semen, no sperm. The reason I wore a condom was that I had no idea you were a virgin, and after that to protect you in case I have anything that doesn't show up in tests.\"\n\n\"So I can't get pregnant from you?\" she asked.\n\n\"There is still a statistical chance, but even under ideal conditions they are 5000 to one against. It's highly unlikely.\" I set the alarm clock for a one hour snooze.\n\nShe sagged back in bed. \"I dodged that bullet I guess.\"\n\nPatting the wet spot and her still dripping pussy with a soft terrycloth towel, I said \"Odds are, yes you did.\"\n\n\"Then why do I feel cheated about this? I don't really want a child, my life won't allow it right now, but some part of me wanted to get pregnant with your kid. I'm confusing myself.\"\n\nI cuddled up to her and hugged her tight. \"Sweetie, don't worry about it. You have endorphins from sex and adrenaline running through you right now and they tend to muddy things up. Let's just relax and cuddle. If we fall asleep I have set the alarm with enough time to shower, get you back home to change, and do the show tonight.\"\n\n\"Thanks,\" she said sleepily. Her green eyes had an odd, almost wistful look to them.\n\nThe next thing I know the alarm clock is going off. Washing each other's backs in the shower would have gone much further, but we didn't have the time. We got dressed and headed out to the car in a rush.\n\nMy elderly neighbor across the street who spend his days watching the world go by saw us leave. \n\n\"Hi Jake!\" I yelled as he waved.\n\n\"Hey, you guys have some fun?\" he said with a mischievous glint in his eye. \"I heard you guys earlier.\" He noted how April and I were blushing. \"Oh, relax. I'm just having fun with you. It was good to see you two. Be good.\" \n\nAs April turned to get in the car Jake gave me a big thumbs up, smiling with all his teeth, natural and purchased. I waved and got in the car. \n\n\"Can Jake can keep his mouth shut?\" a wide-eyed April asked as I drove off.\n\nI chucked. \"Not a chance. Of course, no one believes a word he says either. He just happens to always be right.\" She just laughed.\n\nGetting serious, I said \"There is one thing I wanted to talk to you about. Since I am your first, I did my best to give you the best overview of sex I could. It happened to be a better education than I could have ever dreamed of.\" \n\nShe laughed at this nodding vigorously.\n\nI continued \"There is going to be a tendency to latch on to each other. I would like for you resist this and 'play the field'. Discover what else is out there and enjoy life to the fullest. There is much to love and love is infinite, a resource that does not diminish with use. Use makes it grow.\"\n\nShe looked up at me with tears in her green eyes. My heart tightened in my chest.\n\n\"I am not rejecting you,\" I continued. \"Exactly the opposite. Should you decide that you want to be with me, my door is always open. Here's my card with all my contact information, including my home address and phone on the back.\"\n\nShe took out a pen and paper writing her email and cell number on it. \"I will stay in touch. If I get busy with the gigs and stuff, don't get discouraged. I will talk to you, it just might be a day or five. Okay?\"\n\n\"No problem,\" I said.\n\n\"In our travels, if either of us ends up in each other's neighborhood, let's make a date. For one thing, it will save on the hotel bills,\" she said with a twinkle in her eye.\n\n\"True, but I am concerned about sleep. Somehow I doubt we'd get a lot of that,\" I observed.\n\n\"Sleep is for virgins... we have better things to do!\" she laughed. \n\n\"What have I created?\" I thought.\n\nArriving at her house came much too fast, even at five below the speed limit through residential streets. \"Well, we're here. Do you want me to walk you up?\"\n\n\"No, my sisters are going to be interrogating me as it is. If they had you to play twenty questions with, we'll all be late for the show.\"\n\n\"You are probably right,\" I agreed.\n\n\"Oh, and another thing. At the concert, let's not fawn all over each other. God knows I want to, but it would probably send the wrong message to the groupies,\" she smiled sadly.\n\n\"Yeah I can see that. Besides, we have a show to put on! Let's make this one to remember.\"\n\n\"Rock the house?\" she asked with a grin.\n\n\"ROCK THE HOUSE!\" I said along with her sisters who had snuck up on her causing her to launch vertically. \n\nThe Chrissy and May dragged April upstairs to get her ready while Faye leaned in the window of my car. \"How bad are we gonna be?\" she asked.\n\n\"What do you mean?\" I asked, fearing her meaning.\n\n\"You said you wanted to put on a show. How much of one?\" she asked.\n\n\"I want this to be one for the books,\" I stated with a grin. \"Let's give them something to talk about!\"\n\n\"Okay. Be ready with a white or blue spot on me. You'll know when.\" She spun on her heel and was gone.\n\n---\n\nI drove straight over to the theater, did the stuff on my list, and made some modifications to my lights program. Considering that Faye plays both guitar and fiddle I had a feeling I knew what she was up to. This was truly going to be one for the history books.\n\nI had no time for a full test. I was going to have to wing it. I knew it was the sex, but I felt good about tonight. I had confidence. I tried the subroutines a little and tweaked the sound for a little more highs. Tonight was going to be a sell out crowd, and those bodies were going to absorb a lot of the high end sound.\n\nApril and her sisters walked in and made their final preparations, as did I. April and Faye both shot me a wink. They walked off stage and I put the stage in full blackout before the doors open. Someone tapped me on the shoulder and handed me a note. It said:\n\nLove, \n\nChange on the opening sequence. Opening is a drum solo. Spot on me leave the rest of the stage dark. Key the rest of the lights on May's keyboard. \n\n-April the Beautiful.\n\nFor the second time in as may days I said \"Well, fuck a duck.\" \n\nWith that I set to work. I had thirty minutes of work to do and five minutes to do it in.\n\nThe house lights in the old theater dimmed and folks found their seats. There was not an open seat in the house, yet the place was silent as though hundreds were holding their breath. In the darkness I could see motion on the stage near the drum set. bringing up the mikes on the drums I waited for a sign. I almost missed it. In the dark expanse of the blacked out stage I saw a hand raised up twirling a drumstick. My finger found the button for the first spot sequence. On the third twirl the drumstick stopped rotating and dropped sharply toward the surface of the drum. I punched the button.\n\nThe spotlight light blazed to life as April struck the snare and bass drum for the first beat. She was playing them hard, whipping the crowd into a frenzy. She wasn't hiding. She was enjoying this, grinning from ear to ear. She knew the crowd was out there, watching her, and she was having a ball. April the beautiful indeed!\n\nI could see motion in the darkness on the sides of the stage now. The girls were taking their places. \n\nAudio synch light scene 8 to audio channel 4, bring up the keyboard, guitar, and vocal mike. \n\n\"Okay the guns are primed,\" I thought.\n\nThe crowd was clapping in time with the drum solo's hypnotic canter. On the third repeat of the pattern May hit the first note of the melody on the keyboard and full lights blazed. The crowd went nuts as the girls played with spirit and gusto. We were going to rock the house.\n\nToward the middle of the set, Faye put down her guitar and picked up her fiddle. She nodded at me and began to play. On the second verse of the song, she was picking up the melody with two strokes of her bow for every note. Then on the third verse they began to pick up the tempo. The crowd was clapping in time and I was trying to match the light sequencing to the maddening and increasing tempo at which the girls were playing. Then I saw it.\n\nSomething dropped from Faye's fiddle. It was a piece of rosin. A droplet of molten rosin. As I suspected, Faye had over-rosined her bow. I put my finger on the key to spotlight her fiddle and the air above it in light blue. She winked at me, hit the foot pedal to put the fiddle's audio through distortion effects. She began to dig the bow into the strings at a pressure and speed that should have brought about fusion. \n\nAs the fiddle changed it's note to a growl, I hit the spot light just in time to catch a curl of smoke from her fiddle which turned into a thick column. The crowd went wild having never seen the like. Here was a girl who could play the fiddle so hard and so fast it looked like it was ready to burst in flames. Hell, it just might!\n\nThe concert went on, blowing away everyone's expectations, continuing to the final number. This was a traditional, gentle song which shifted to a rock and roll beat halfway through. About thirty seconds before the song's transition, disaster struck. I still don't know what happened, but the lights on the controller blinked, and the red display showed \"00\". \n\nEven though the lights stayed on because of the system's design, it had dumped the program. The only thing I could do from this position is turn the lights off from where they were, manually adjust individual lights with no effects, or reprogram the board. \n\nCussing like a mad fiend, I began to manually reprogram the board. Twenty seconds to go. I crammed the taped up end of my Maglight in my teeth and started setting up scenes and a simple chase.\n\nChannels 1,3,5,6 full on set scene 1. Channels 2,4,6,7 full on set scene 2. \n\nFifteen seconds. My fingers were flying. \n\nChannels 1,4,6,8 full on set scene 3. Channels 2,3,5,7 full on set scene 4. \n\nTen seconds. \"I'm not going to make it!\" I thought.\n\nChannels 1,2,3,4 full on set scene 5. Channels 1-8 full on set scene 6. ",
        "Five seconds, no time to program a sequencer. I'll have to do this the hard way. \n\n\"Red five, cover me. I'm going in!\" I thought. The transition was here and the instruments fell silent.\n\n\"...aaaand NOW,\" I said quietly.\n\nI spit out the Maglight and hit the button for Scene 6, full lights, as April began to play a rock beat. The crowd was back on it's feet and the rest of the girls played that familiar melody in a new way. \n\nI began to hit scene buttons 1-5 one after the other sequencing the lights in time with the rhythm. Keeping time was easy with the crowd was clapping with the beat. What was hard was keeping this up for the two minutes remaining in the song. Punching buttons four times a second with the occasional flash on scene 6, my wrists began to ache.\n\nThe song ended and I hit scene 6 to bring up full lights, moved the fade rate to 40% and hit the key again to smoothly fade to black. The crowd cheered with a thunderous sound. It was over, and we had done it. We rocked the house. After I retrieved my Maglight from under the console and put it back in my crash kit, I sagged back in the chair. The stress of the last three minutes washed over me. I leaned back and wept quietly, pretending to rest.\n\n---\n\nWe were the talk of the town. The band naturally, not the \"little man behind the curtain\", but that's how that works. I got kudos from all the girls and everyone who knows what I do. \n\nMy daughter was in the audience, having told her mom that she had to go to work. She does work at the theater, just not that night, so technically she didn't lie. She was amazed at the show, and I introduced her to the band. She and April seemed to bond instantly making me wonder things I couldn't put words to.\n\nThe sisters wished they could bring me along with them. I found out later that this was arguably their best produced show ever. It gives me great pride to know that I beat the big boys with only my skills and ancient equipment. I offered to run sound and lights for them anytime. I had a brief moment with April before she left, but that's all it was. A kiss to curl the toes and promises to keep in touch. They all hopped in the van and were off to their next gig. \n\nI missed all of them as soon as they turned the corner, but I started to tear up when I though of April. My daughter saw me and rushed over and gave me one of her patented hugs. We went to a restaurant and talked about everything. I have no secrets from my daughter, and she knows all the details. She still ribs me about taking a 19 year old virgin to bed, but it's all in good fun.\n\nAbout two weeks after the concert, April missed her period and we suspected that she might be pregnant. While it's not what we had planned, deep down we were both hoping she was with child. We thought that maybe we had beat the odds, and it would have been all the cat's fault... but it was not to be. \n\nHer next period came on time and with a vengeance. It appears that skipping a period after their first time happens to one in five virgins because of a radical shift in their hormone levels. April believes that only one in five virgins ever have sex good enough to cause this, and considers it \"a testament to the thoroughness of her education.\" I'm not convinced, but I'll take the compliment.\n\nThe remaining concerts on the tour were different. April's drumming became stronger and more confident. This raised the bar for the other sisters and they all rose to the occasion. \n\nAt the end of the tour, their record company trotted them around like show ponies. This was more to demoralize the other companies, and entice other artists away from them under the guise of assured success than it was for the girls' benefit.\n\nThis brings me to today. I got a text from April. Their contract is complete and after they catch their breath they will be shopping around for a new record company and contract. The girls unanimously agreed that they want to hire me for sound and lights when we're on the road, and production work when we're not.\n\nSomething tells me April had a lot to do with that, but I have seen some of their other concert footage in the mean time, and I have to admit that our production with geriatric equipment was worlds better. She said the official offer will come once they have another contract. \n\nI swore I'd never work in the music biz again, but I think I'm going to make an exception for a very special case... \n\n...for April the beautiful."
    ],
    "authorname": "I_M_Patient",
    "tags": [
        "female virgin",
        "geek",
        "first time",
        "music",
        "education",
        "pagan",
        "gentle",
        "engineer",
        "outdoors",
        "funny"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/april-and-september"
}