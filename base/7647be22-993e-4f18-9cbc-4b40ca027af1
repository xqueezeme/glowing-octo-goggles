{
    "title": "The Baltimore Bitch",
    "pages": [
        "I try to post something around the Fourth, to honor those who've served. Please let the length of this little tale be a testament to the respect that I have for all of you. This is a military Pilgrim's Progress, set in World War Two. It takes our hero on the fraught journey from youthful na\u00efvet\u00e9 to adult capability via virtues that everybody in the military understand, honor, courage, and commitment. The war crime at the center of this actually happened, even if the payback is in my imagination.\n\nFinally, two of the main characters are from, \"The Forests of the Night.\" That's over in Romance and most people haven't read it. I'm not suggesting you read it first. But you might enjoy it in retrospect. This is posted in LW for the obvious, and sadly far too frequent reason. I hope you enjoy - DT\n\nDON'T SIT UNDER THE APPLE TREE\n\nWakey-wakey, today's the day you die. \n\nThe door of the Nissen hut banged open and a voice called, \"Mission today.\" I slid gingerly out of my cot and scuttled over to stoke the remains of last night's fire. Once I got some heat going, I called across to my co-pilot Bobby, \"Roll out, we're on.\"  \n\nBobby's job was to rouse the rest, Eldon our, navigator and Whizzer Wiznooski our bombardier. The four of us lived in a gloomy, half-cylindrical corrugated-steel home, with two other 432nd crews. The 432nd was one of four B-26 Marauder squadrons that comprised the 17th Bombardment Group. We'd been based near Cagliari since the end of 1943. \n\nThere was very little talking as we pulled on long johns, wool shirt, trousers, and two pairs of socks, it's cold at 15,000 feet. My leather flight jacket had our squadron insignia on the front, a flying grim reaper, sickle in hand. On the back were two rows of ten bright yellow bombs and one of three, representing 23 combat missions, along with the name of our Marauder, \"Beautiful Betty.\" As the pilot I had naming rights and I'd named mine after the love of my life, Betty Moran. \n\nI had the usual pre-mission jitters. You have to believe that you'll get the job done and come home alive. But there were so many ways to die. It could be a blown tire on takeoff, or an engine failure, or a mistake in the clouds during assembly. We flew in tight defensive boxes.\n\nThose were just the operational problems. There was always the flak. In my mind's eye. I could see the Marauder in front of me take a direct hit from an 88 and just disintegrate. The crew lived in our hut. I helped gather their personal effects for shipment back home.\n\nStill, the B-26, could take care of itself. We had one fifty-caliber stinger in the nose. Whiz operated that. I had four forward firing fifties in blisters under the cockpit, and there were two tail mounted fifty-cals plus a dorsal turret with fifties. But the main advantage was the Marauder itself. \n\nThe B-26 was a medium bomber. Unlike the heavies, who carpet bombed from 25,000, we hit hard from treetop level, up to fifteen thousand feet. Legend had it that the Marauder was so accurate that she could deliver two tons of bombs into a pickle barrel. \n\nThe original version killed so many crews that she was nicknamed, \"The Baltimore Bitch.\" The accident rate led to design changes that made the updated version one of the fastest and most reliable bombers in the whole Army Air Corps. \n\nIt was a little after 0500 and still pitch black when we jumped into a canvas-draped deuce-and-a-half and found places on its uncomfortable wooden benches. I was staring into space as we bumped along. I'd done that a lot recently. \n\nWhen the truck stopped, Bobby nudged my shoulder and said gently, \"Come on, Jed, let's eat.\" Eldon was the joker of the crew. He laughed and added in a sing-song voice, \"Wake up, Jeddy, it's chow time.\"\n\nAll four of us slid out of the truck and strolled into the officers mess, which was alive with chatter from the other crews. The serving line was short, the fare was the same; scrambled \"eggs\" in a ghastly shade of yellow and a nice big slice of fried spam. Since it was a mission, we got all the coffee we could drink.\n\nI swore I wouldn't do it. But I pulled out her letter and read it one more time. \n\n*****\n\nLike most small-town romances, I'd grown up with Betty Moran. We'd met when she transferred into my sixth-grade class. She lived behind me. So, we'd stroll home together after school. Betty loved baseball which was one of the many things I liked about her.\n\nI was slow on the uptake when kids started coupling up. That was mainly due to the fact that my little friend had developed into such a pretty girl. She had one of those heart shaped Betty Boop faces, with huge blue eyes and cupid bow lips and dark hair in a bob. But it was her round butt, long legs and lithesome body that had all the fellows following her around like dogs. \n\nFortunately for me, Betty knew what she wanted, and she wanted me. She never wavered. Whether it was my animal magnetism, which I heartily doubted, or the deep sense of camaraderie that we'd built up as kids, I quickly fell in love with her. \n\nHence, we had one of those idyllic teenagerhoods. There wasn't a single day we were apart. We were in classes together, studied together and hung out at each other's houses. Some people might get bored with the same-old-same-old. But we thrived on it. \n\nStill, a little rain has to fall into everybody's life. Our mutual problem was Duke Williams. Duke was the king of the smooth operators. He wasn't exactly good-looking. But he was big and brash, with the confidence born of being the son of a rich man. \n\nBetty gave Duke a huge hard-on. So, Duke made it his personal crusade to take Betty away from me. He'd do all sorts of things, including showering her with attention and incessantly asking her out. She was always polite when she refused him. At least, when she was with me.\n\nDuke also had a special \"thing\" for me. He might have been big and entitled. But he wasn't exactly gifted, and he was bone lazy. I was smart, and I worked hard. It wasn't just the teachers who noticed. So did Duke. \n\nOf course, Duke's attentions to my girl pissed me off. But he was a big fat slippery weasel. He never did anything overt. So, I couldn't call him out without looking like a paranoid weenie. Most of the time I just heard mocking comments from him and his pack of ass-kissers. I ignored them. Because, my only goal was to get out of that town. \n\nMy folks wallowed in routine. My dad worked in a dairy. He was a manager, not a milkman. He loved his job and he wanted every minute of every day to be just like the one before it. My mother was a creature of habit too. She did things exactly the same way from time immemorial. If I saw mom doing the laundry, I didn't need to look at my watch. I KNEW it was nine o'clock on a Monday. \n\nI was different. I might have enjoyed the boring regularity as a child. But as I grew older, I began to sense the inherent futility of small-town life and the thought of drifting into meaninglessness horrified me. \n\nIf you want to see what I'm talking about, walk through your town cemetery. Do you know any of those people? Probably not - still, they were once living, breathing human beings who thought they mattered. Newsflash - very few people really matter. Especially in a small town. \n\nMaybe I read too much. Maybe I was smarter than some. Maybe it's because I never really felt like I fit in. But I had a world view that involved more than just getting married, raising kids, and being buried with a bunch of nonentities. I wanted a meaningful life.\n\nI actually envied the guys who only wanted to get laid. They had no goals, no dreams. Most were happy. A few were pissed at their lot. But none of them had the stones to do anything about it. Me? I had to make a difference. It was a curse. \n\nIf I could use one word to describe myself it would be, \"pragmatic.\" I approach things analytically and I've always been a problem solver. I don't know why I'm like that. Maybe it's genetic. Or, maybe I'm just socially retarded. But I never ask if the glass is half full, or half empty. My only interest is in finding the right size glass. \n\nSo, when the government offered a free pilot training program, I was one of the first to apply. It paid all the ground school and flight instruction costs for anybody willing to become an \"Air Cadet.\" There was even a commission involved. Of course, you had to join the Army to get into the program. Still, it was a way to do something with my life, other than just drift into irrelevance. It was also a free education. \n\nAir Cadet volunteers initially had to have four-year college degrees and I was only in my last year of high school. But they lowered the requirements in 1940. So, all you had to do was pass a two-year college-equivalency test. I took the exam and passed with flying colors. I felt pretty good about myself and my future. \n\nI knew that I would end-up going to war if the U.S. got into the scrap over in Europe. But no eighteen-year-old has an idea of what war's really like. It just seemed like a glorious and exciting adventure. Plus, I figured that we'd all get swept up in the draft anyhow. I was 1-A like every other boy in town and I knew that I would rather fly than walk. Like I said, I was clueless.\n\nBetty's view was the same as everybody else's in that town. She didn't see any reason why anybody would want to live anywhere but there. And she simply couldn't understand why I wanted to be a flyer. \n\nMy argument was that I would have a valuable skill and a high paying job. I told her, \"If I can't do anything special, or don't know anything useful, than the only thing I have left to sell is my time. And I don't want to spend my life working for hourly wages.\" \n\nShe looked unconvinced so I added, \"The faster I get a good paying job the sooner I can support you and we can get married.\" \n\nThat sold her. Betty couldn't start making babies fast enough. Betty's life ambition was to have her own little brood and she was keen on whatever got her to that goal the fastest. That fact would come back to haunt me. \n\nIt was the week after Betty's eighteenth birthday. She was wearing a grey cashmere sweater that emphasized her big, perfectly shaped tits and a pleated skirt that showed off her slim rounded calves. She had the obligatory pearl necklace that every girl wore, and her thick light brown hair was pinned back by two red barrettes. She looked like a cocker spaniel.\n\nWe'd done the usual family socializing, and the party was settling down for an evening of drinking and conversation. Betty looked as bored as I felt. I nodded toward the French doors and we walked out onto the back lawn holding hands. Her perfume was giving me a hard-on.\n\nWe lived in an affluent neighborhood and our property adjoined across a little tree-lined creek. There was a bridge over the creek, that led into a small hedged-in side yard with a gazebo. I took her hand and we strolled over to sit on the big bench facing the creek. It was humid. You could hear the burbling of the water and the chirping of the katydids. \n\nBetty plastered herself against me when we sat. Her proximity filled my heart with peace and happiness. But I needed to get something important out of the way. I thought I knew the answer. Even so, I was nervous. \n\nI said, \"Betty, I've loved you since we were kids and I'm worried about what will happen when I have to leave for pilot training.\" She looked upset, like she thought I was going to break up with her\n\nShe said with measured seriousness, \"I love you too. I will always love you. I can't imagine being with anybody BUT you. Why are you asking me this Jed?\" \n\nI said, \"Because I want you to accept something,\" and I produced the ring box. It was a quarter caret diamond; all I could afford at the time. \n\nHer eyes softened, she bashfully held out her finger and I slipped the ring on. She held it up to look at it sparkling in the dim light. She said nothing. Then she turned and grabbed the back of my head and dragged me into a passionate open-mouthed kiss. That answered the question. \n\nShe lay back on the bench, eyes glittering with a strange new emotion and said simply, \"I want you.\" It didn't matter that both of our parents were less than a hundred yards away. This was a private spot and the Rubicon had to be crossed.\n\nI gathered her to me and kissed her. She moaned with the sensation. The primal strangeness of that sound was incredibly stimulating. We were still dressed. But she had hiked her skirt up. I put a hand on one of her big pneumatic tits as we continued to kiss, and she moaned a bit louder. \n\nHer breathing accelerated as I squeezed and manipulated her boob. There was now a hard point that I could feel through her bra. Her legs began to thrash, and she said through gritted teeth, \"Touch me.\" I was a virgin. But I wasn't stupid. I knew what she was asking. So, I moved my hand down the length of her body and under the waistband of her panties and fell into the gap between her widely spread legs. \n\nIt was alien territory and intimidating at first. The whole area was hot, and slippery and there was a pheromone smell. I had gotten a hazy concept of female genitalia from a furtive attempt to beat off using my parents copy of Gray's Anatomy. Yes, I know. That's pathetic. But I was a horny teenager and it seemed like a good idea at the time.\n\nThus, I knew about the lips. But there was a strange little bump that made her grunt with sensation. I moved further down that hot and slippery crevice and found my destination. Betty groaned and began to thrash. The sense of intimacy that I got from putting my finger in my childhood friend's most secret and intimate place nearly made me come. \n\nIn concept, I knew what to do. I was eighteen years old, for God's sake, and guys talk. But we were both so inexperienced that it took a lot of fumbling before I could get my pants down, her panties off and me properly positioned. Betty had entirely lost it by that point. She had always been so shy and reserved. Now, she was desperately whispering, \"Put it in me!! You have to put it in me!!\" \n\nAt that point, I had my cock in my hand and I knew where it was supposed to go. So, I put it at her opening and began to push. Betty was so well lubricated that the head slid right in; even though she was incredibly tight. I encountered the expected obstruction. I pushed, there was resistance, she gave a shrill little shriek, and then I glided rapidly to the top. \n\nShe let out an unearthly groan of pure sensation. I waited for a second while she gathered herself. At first, her beautiful blue eyes were round with distress. Then they clouded with lust and slowly rolled up in her head. \n\nShe now engulfed me in every place. Her arms were clasped tightly around my neck; her legs were gripping me like she was riding a horse, and of course, her secret place was clutching and churning around me. The heat and silky wetness was incredibly stimulating, too stimulating!! \n\nIt felt like a blockbuster exploded in my loins. The problem was that occurred an embarrassingly short period of time after I'd entered her. I gave an unearthly grunt and groan and emptied myself. \n\nThat set Betty off on a sequence of bucking and gyrating maneuvers, accompanied by muffled shrieks. My weapon had discharged, and I expected it to shrivel out of her, but Betty's continued gymnastics kept me harder than an iron bar. \n\nI was moving with her. That was just instinctive, when suddenly she stiffened, and I could almost feel the cargo shift down there. It was like a rumble in her loins. Her passage gripped me and then she began to mutter, \"Nyaahhh!! Nyaahhh!! Nyaaaahhhhh!! OH, MY GOD!! AHHHHHH,\" and it sounded like she was choking to death as her legs thrashed. To say the least, our first orgasms were memorable.\n\nBetty finally went completely still. I remained buried deep inside her, hard as titanium. I knew I might have knocked her up. I didn't care. I gazed into her eyes and said, \"If that made you pregnant then so be it. If we started a family earlier than planned; then more the better. All I care about is that you are truly mine.\" \n\nHer face lit up with joy and she threw her arms around me. She said, \"I am yours for the rest of our lives and I will happily bear your children. I love you so much!!\" There were no babies produced that evening or any of the many times afterward. As things turned out, that was probably fortunate. \n\n***** \n\nOur plan to marry after high school went up in smoke on the afternoon of December 7th, 1941. That's the problem with plans. You never really know what the future holds. \n\nI remember, I was sitting with my dad, listening to the Washington Redskins play the Philadelphia Eagles on our big Zenith radio. The announcer broke in to announce that the Japs had bombed our fleet at Pearl Harbor and the next day we were at war.\n\nThey needed pilots right away. I was eighteen and I'd already signed the contract. So, I got a letter telling me to report for induction. My folks drove me over to Milwaukee where I would board a train with a bunch of other scared kids. We didn't know where we were going. \n\nThe ride to the induction center was in complete silence. I just stared out the window. It was beginning to sink in that my old life was over and whatever came next terrified me. I had the bitter thought, \"So much for me being the bold adventurer.\" But unfortunately, change is inevitable, and success rests on how well you deal with what comes next. \n\nBetty wouldn't stop crying. She kissed me and told me she loved me. She said she would wait for me forever. Of course, that's been the story since we lived in caves.\n\nThe Army knew that its recruits were entering a brave new world and they had a plan. It wasn't exactly kidnapping but it was pretty close. An NCO herded all of us draftees to the front of a train car. The ensuing day-and-a-half ride down to Fort Jackson was one I'll never forget. \n\nThe NCO was sitting in the back trying to make time with a pretty little southern belle. While the rest of us just stared off into space, lost in our thoughts and numb with shock. I was utterly alone. The car was dark. I couldn't sleep. The only sound I heard, besides the clickety-clacking of the train, was the woman-moaning from the back of the car. \n\nI was by myself for the first time in my life and all I could feel was panic. All of my pretensions about making a difference were buried under the simple reality of separation. I'd thought it would be easier. \n\nOur arrival for \"recruit training,\" they didn't call it \"basic training\" back then, was anything but enjoyable. South Carolina in the month of June sucks. Whether it was the rain, the heat, or the bugs, Fort Jackson had it all. We were herded into a line in the stinking South Carolina humidity. Every passing soldier encouraged us with, \"You'll be sorreee!\" \n\nThey gave us numbers, not names. Then, our heads were shaved. We were stripped of our civilian clothing and personal belongings. We stood in a naked line while we were issued new shirts and pants and socks and underwear. We were charged twenty-five dollars for the army's largesse, four dollars more than they paid us that first month. \n\nIf I thought I was scared before, I hadn't met the guys in the round hats. Their job was to shape us into real soldiers. Sergeant Hunt was terrifying. He was tall and easily seventy pounds heavier than I was. I just stared at him with dread creeping up my spine. \n\nHe must have noticed me staring. Because he strolled over, situated himself roughly two inches from my face and shouted, spit flying, \"What's the matter with you boy??!! Do you have homosexual tendencies??!!\" \n\nStrange question, I said, \"No?\" Big mistake, he yelled even louder, \"THAT'S NO SIR!!\" I shouted back, \"NO SIR!!\" I was getting the hang of things. \n\nHe said, \"Then why were you gawking at me instead of standing eyes front??!!\" I shouted, \"I'M SORRY,\" my little voice kicked me in the ass, and I added, \"SIR!!\" Hunt got a sadistic look and said, \"Well then, let me jog your memory. Drop and give me 30.\" That was my introduction to Army life. ",
        "You grow as a person by overcoming challenges. Most people face the usual things like school, jobs, even getting married. But the people who grow the most learn how to survive the impossible tasks, the things that you thought you could never do; those are what make a man. The first six weeks in the Army did that for me.\n\nFinding out I could handle all the stuff that the Army threw my way gave me confidence. It taught me how to take control of my life. And in that respect, I went from crying in my bunk in the first couple of nights, to a man who believed that he could accomplish anything no matter what the odds. \n\nThere were two parts to recruit training, basic and then advanced. We took the Army General Classification Test about half way through the process. It was supposed to help you decide what to specialize in. \n\nMost of the recruits were draftees. So, they specialized in marching and being shot at. But I was already contracted for flight school. So, after the recruit segment I was moved to the 63rd Army Air Forces Contract Pilot School in Douglas, Georgia. \n\nThis was the stage where the Army decided whether I would be a navigator, bombardier, or pilot. The first part was academic. Thirty of us lived in a big barracks while we learned the mechanics and physics of flight. You became an \"Aviation Cadet\" when you passed that phase. I studied hard and came out top of the class. So, they made me a pilot.\n\nThen, for the next ten months, you learned all the things you needed to know to become an Army Air Force flyer. I started out in a Stearman Kaydet, which was a simple, sturdy aircraft. You had to solo in order to not \"wash out.\" \n\nThat was a stressful time. I remember, we had one guy who was very religious. He used to lie in his cot saying prayers. One night somebody asked him if had just soloed. Without even looking up he said, \"You bet your ass I did\" and continued with his prayers.\n\nAfter graduation, we were assigned to either fighters, or bombers. Of course, we all wanted to fly fighters. But the strategic bombing campaign had just kicked off over Germany and they needed a lot of new bomber pilots. If I'd thought about that for a minute, I would have figured out why. But I was still dewy eyed innocent back then.\n\nI was smart and I paid attention to detail. So, I was toward the top of the class in every phase. Thus, I was commissioned a second lieutenant in May 1943, and designated to learn the ins-and-outs of the new B-26B Marauder. We got three months of stateside training in those aircraft before we were certified for combat duty. \n\nI was assigned to the 17th Bomb Group. They flew B-26s out of Decimomannu Air Base, just outside the city of Cagliari on the island of Sardinia. I was dropped off there as a \"replacement\" pilot by the Liberty Ship John Banvard in November of '43. The last day of that trip was my first introduction to the war. \n\nThe Banvard was passing south of the Island of Sant' Antioco when a flight of three JU 88s showed up. Italy had already surrendered. But the Krauts were alive and well and conducting the war out of airbases in central Italy. \n\nWe had a three-inch gun forward, and a four-inch gun aft, along with ten twenty-millimeter antiaircraft guns. So, we could defend ourselves. But those black shark-like Nazi aircraft skimming overhead were still a fearsome sight.\n\nThe guns made a lot of racket. The JU 88s took a couple of desultory bombing passes and departed. There were some big booms and a few nearby geysers of water, nothing else. I gave the Germans failing grades for accuracy. But it looked like they were just going through the motions. \n\nThat was my first insight into war. I had imagined a daring and implacable enemy who would do whatever was necessary to kill me. Whereas, most of the other side was just like I was. They were kids doing their duty and trying to avoid getting killed in the meantime. \n\nSure, there were Hun fanatics who would've defied the odds to hit something. But close enough was good enough for sane people.\n\n*****\n\nThe Marauder was a relatively compact plane. And at just 58 feet it was laid out a little different than the nearly 80-foot heavies. The most important difference was in the cockpit. There was a small passage in the instrument panel to my right. It was where Whizzer squeezed through into the bombardier's position in the Plexiglas nose.\n\nThe passageway began at Bobby's left knee. So, Bobby only had a wheel, but no rudder pedals. Eldon sat behind a bulkhead aft of the cockpit. The tunnel, dorsal and tail gunners sat behind the bomb bay in the back. Needless to say, it was tight.\n\nI'd been in Bobby's seat for the first ten missions. Those were primarily milk runs over the landing at Salerno. The people on the beachhead were getting all they could handle from the Germans. \n\nWe were throwing every available bomber at them to break open the lodgment, including the heavies. But it was the low-level bombing of the B-25 and B-26 crews that killed the German armor. We were just across the Tyrrhenian Sea on Sardinia. So, we were flying a couple of sorties a day well into September. \n\nThe Marauder could carry 2,000-pound bombs in the forward bomb bay. But we were loaded with smaller, antipersonnel, and anti-armor ordinance on those trips. Our four blister machine guns also let us strafe the Nazi formations and those passes wreaked havoc. \n\nI was promoted to the pilot's seat when Captain Morrison was rotated home after 35 missions. I also got a second silver bar with the move. Morrison was a good mentor and the crew was top-notch, so the transition was relatively painless. \n\nThat was when Bobby came on board. He was a year younger, twenty-one to my twenty-two. His family was Italian, and his Bronx accent was so thick you could spread it on a bagel. He liked the Sardinian girls and they liked him. \n\nMe? I lived for V-mail. There was a letter from Betty in every batch. It was mainly homesick inducing stories, with a lot of breezy gossip about life on the home front. A piece of news that I didn't like was the fact that Duke had been classified 4-F. \n\nIt seems that poor Duke suffered from the dreaded malady of flat feet. He regretted being unable to serve his country. But he was doing his part working at his father's bank. Perhaps that was the reason why Betty's letters began to come less frequently. Then the final one put the stake through my heart.\n\nI wrote Betty whenever we were stood down. But we were flying at least three missions a week and sometimes five or six. We had been spending the winter bombing the Krauts on the Gustav line. The Marauders and Mitchells were the only really effective way to deliver the stuff that the Brit and American ground-pounders needed to crack that nut. The heavies lacked the precision.\n\nAfter we flattened the old Benedictine Abby at Monte Casino in February of '44, things began moving up the peninsula. Still, it was slow going. Then, for some reason we shifted our focus. We started hitting the railyards in Marseille and Toulon almost daily in April and May. \n\nThe events of June sixth answered the question about why we were doing that. Interdicting railways made a lot of sense now that our forces were fighting their way out of Normandy. But at the time, I couldn't understand why we were wrecking rail junctions in places like Limoges and Clermont-Ferrand. \n\n*****\n\nEverybody in the briefing room gasped when they pulled the curtain back. Today's mission was to two big marshalling yards in Lyon. We got the job instead of the heavies because the railyards were right in the middle of the town. \n\nIt was at the absolute limit of the Marauder's range and it was obvious from the recon photos that the place was heavily defended. Concrete flak towers were everywhere. We knew that a few of us wouldn't be coming back. \n\nDawn was breaking. It looked like it was going to be a clear and sunny day. But the Brit's pathfinder Mosquito over the target reported that it was cloudy. So, we lounged in the sun next to the plane until almost mid-afternoon. It was an interesting dichotomy, the serenity of the farmers working their fields on the other side of the security fence, juxtaposed against us and our waiting instruments of war. \n\nI thought they might scrub the mission, since it had gotten late. We'd been sitting next to the plane for several hours when the \"follow me\" jeep exited the control tower area and we knew it was finally on. \n\nWe scrambled back into our positions, closed the hatches and the ground crew started walking the big four bladed propellers around to prime the engine. The Coffman charges fired and Beautiful Betty's two Prat and Whitney R-2800s roared into life. \n\nAt that point, taking off was like commuting to work. I was just a twenty-two-year-old kid. But those skills had been drilled into me by endless repetitions. So, it was second nature. We took off at twenty second intervals and formed up at ten-thousand feet in a box composed of two echelons, three planes each. We were flying almost wingtip to wingtip and that took concentration. \n\nThe Mediterranean was bright blue and calm. The French coast east of Marseilles was picturesque. This was the legendary Riviera, where all the beautiful people sunned themselves a few years earlier. They would have a hard time doing that now, with the barbed wire on those beaches. \n\nThe Mighty Eighth had done a good job of pulling Luftwaffe fighter command's fangs. So, we didn't see any 190s or 109s during the three-hour trip over. The sun was setting as we passed the IP and began to track in on the bomb run to the Lyon railyards. \n\nWe bombed on the lead plane in the high echelon. The bombardier on that plane was the one with the Norden bombsite. We were the lead in the low echelon. The rest of our echelon bombed on us. That made us the front plane in the second wave of the box, which put us smack dab in the middle of the aiming point for the flak gunners below. \n\nThe flak was so thick you could walk on it. The relentless explosions and buffeting kept me busy just keeping the plane level and on course. We were the last box to bomb. So, the Heinies were really getting the range as we came over the release point. \n\nWhizzer had just called \"bombs away\" when there was a huge concussion. It temporarily stunned and deafened me and shook our plane like a terrier with a rat. It must have been just below and behind the starboard engine because we immediately lost power and began to trail smoke. \n\nThe B-26 was the fastest bomber in the U.S. inventory because it had exceptionally high wing loading. In layman's terms that means that without the necessary speed it had the aerodynamic properties of an anvil. So, when we lost the number two engine we winged over and went into a steep dive. \n\nThe speed of the dive helped me get the plane right side up. We were temporarily in level flight. But Betty was crabbing at perhaps a hundred and fifty miles an hour, as the one engine drove us almost sideways. I'd lowered the flaps to expand the wing surface. But it was obvious that we weren't going to stay in the air much longer.\n\nBilly Sparks, our tail gunner, was screaming into the intercom, \"They're all dead back here.\" I told him to bail out. His position had its own hinged canopy. Then I turned to Bobby. He was missing a good bit of his head. That must have been where all the blood on the windscreen came from. \n\nWhizzer was making panicked noises down by his feet, struggling to get out of the bombardier's tunnel. I yelled to Eldon to get Bobby out of the way. He stepped through the navigator's bulkhead, took one look at the grisly corpse, and threw up behind my seat. After Eldon stopped heaving, he dragged Bobby's body out of his seat. That seemed like an eternity while I was fighting to keep us in the air. \n\nOnce Bobby was out of the way, Whizzer rocketed past us like he was shot out of a cannon. Without uttering a word, Whizzer grabbed his chute and bolted into the blackness. The bomb bay was still open. Eldon snapped his chute on and threw himself out right behind him. Now, it was just me and Betty and she was mortally wounded. \n\nThey might have called her the Baltimore Bitch. But she'd been truer than the one I'd left behind. I thanked her for her faithful service, unbelted, grabbed my own AN-6513, and snapped it on. I still had Betty's letter in my pocket as I stepped into the void. \n\nThere was darkness. I pulled the D ring. There was a loud crack, a few moments of dangling, and then oblivion. I must have been very close to the ground. I came back to consciousness hanging in a tree. It was pitch black. I was momentarily confused. All I could hear were crickets and frogs. There were strong earthy smells. Then the awareness came rushing back. \n\nIt was like waking up from a nightmare only to discover that it was actually your new reality. I was in a state of shock. My natural tendency to problem solve saved me. Even as I was hanging there, I began to think through the situation. \n\nFirst, I knew I had to get out of the damn tree. It took a couple of minutes of cautious struggling to unbuckle the parachute while slowly rotating in the branches. I was unhurt, except for a goose egg and a few scratches. I must have gotten those when I came crashing through the top of the tree. I had an escape and evasion package and a first-aid kit clipped on my parachute harness. They issued those to every flyer. \n\nThe first-aid kit had basic medical supplies. The escape kit was more useful. It had a booklet with handy French phrases, a compass and more importantly a map and a sheaf of French francs. And of course, I also had a .45 secured in a shoulder holster underneath my leather jacket. Most pilots had one of those. \n\nI cautiously dropped to the ground. It was a humid night, moonlit and featuring a noisy chorus of bugs. I was in a forest on a steep hill, with a little town in the valley below. I could see its lights. But I had no actual idea where I was. \n\nI knew the Germans would be looking for me. Hence, the first thing I had to do was get away from that place. I had been distracted keeping us in the air. So, I wasn't surprised that the terrain was mountainous. We'd been on a southeasterly course and the Alps were in that direction. At nearly three-hundred miles an hour we might have ventured into Switzerland. If not, I was in Vichy France. \n\nIf got caught it would either be internment, or a trip to a Stalag. I didn't fancy either option. So, I had to be careful about who I approached. We were instructed to make our way to Spain if we were shot down. Spain was neutral, even though Franco, Mussolini and Hitler were all pals. We could get home via Gibraltar if we made it. \n\nI would have to travel clear across southern France to get to Spain. But I had a map and compass. I struggled down the mountain moving toward the town. The first thing I encountered was a large house. It was situated on the other side of a clearing at the base of the mountain and it was surrounded by outbuildings and smaller houses. My watch had survived the crash and it told me it was 10:30 PM. \n\nMy first task was to find new clothes. I was hoping to pay a French farmer for an outfit that would let me blend in. I was wearing my flight jacket and the two layers that were designed to protect me from the cold at 15,000 feet. It made me look like a billboard with, \"Downed American flyer\" on it. It was also at least eighty degrees in that hot night and the wool was starting to itch. \n\nThe house and all of the surroundings had a haunted look. That was strange, since it was a substantial place. It looked like it might have once been a hotel. Of course, nobody knew what the Nazis might have done to the occupants. Maybe they'd relocated them for some reason? \n\nI stayed in the shadows, as I crept through the last of the forest and across a wide garden, which didn't appear to have been tended recently. The days that I'd spent hunting deer with my dad stood me in good stead as I surreptitiously crept across the open space.\n\nI got to the back of the house and found the door had been kicked in. That probably explained the lack of occupants. The door was hanging by one hinge. I moved it aside and carefully made my way into the dark building. It was pitch black in there. \n\nI had a choice. There was a survival flashlight on my harness. Did I turn it on and risk revealing myself with its bright beam? Or did I try to explore this apparently abandoned place in the dark. My next step made the decision for me. I kicked a bottle and it rolled noisily across the floor. \n\nIt startled me so badly I nerly shit myself. I heard a noise as I fumbled out the flashlight. It sounded like a rat skittering away. My heart was beating faster than it had in my last moments on the plane. I had the passing thought, \"Was that only two hours ago?\" \n\nI found myself in what had probably once been a kitchen. There were cupboards and pans and what looked like the remains of a meal. There were big candles just lying unused on a sideboard. I had my ubiquitous Zippo with the squadron insignia on it. I killed the flashlight and lit one of the candles. The candle gave me enough light to look around and it wouldn't attract as much attention. \n\nI carefully moved into the next room, which was full of long tables. It was bigger, like a mess hall. It was empty and many of the chairs and tables had been knocked over. It looked like there had been a fight in there.\n\nI was looking for a bedroom, or any place where there might be some discarded clothing. There was a flight of stairs. I noticed a stitching of machine pistol bullets across the wall of the staircase. There wasn't any blood. So, maybe somebody had fired into the air to get people's attention. \n\nThere was a hall at the top, with rooms off it, like a dormitory. I crept into the largest of the rooms. It made up perhaps a quarter of the upstairs. I was still cautiously feeling my way along. There were lots of beds, with covers scattered everywhere. The only sound was the creaking of my footsteps. \n\nStill being cautious, I crept slowly toward a huge armoire that was situated on the back wall opposite the windows. It was an ornate piece, made of mahogany and seemed to serve the purpose of an actual closet for the room. There had to be something I could wear in the armoire. \n\nI would hate to give up my stylish leather A2. But I would hate sitting in a POW camp even more. I cautiously reached for the handle of the armoire and it emitted a HUGE SOB!! \n\nI yelled in surprise and stumbled backward dropping the candle. There was a frantic minute as I stamped out the little fire. Then I said shakily, \"I'm armed. Come out of there with your hands up.\" It was a bluff. But it was all I could think of.\n\nA terrified voice said, \"s'il vous pla\u00eet ne me faites pas de mal.\" I had no idea what THAT meant. But I could tell it was young and female. So, I turned on my flashlight and opened the door. There was a pitifully huddled shape cowering beneath the clothes. \n\nMy first glance registered a thick mass of dark curly hair with a little gamin face, age indeterminant. There were huge dark eyes a slim pointed nose and a wide mouth in a round, almost childlike face. She said pleading, \"Ne me tuez pas!!\" \n\nI had no idea what she had said. But she was obviously terrified. I pointed to myself and said softly, \"American.\" I fumbled out my phrase book and said, \"Mon avion s'est \u00e9cras\u00e9 et je dois me cacher.\" According to the book that meant, \"My airplane has crashed, and I need to hide.\" \n\nI'm sure I butchered the pronunciation. Because she hesitated for a second. Then she got a confused look on her pretty little face, and said in decent English, \"You want to hide an airplane?\" \n\nThen, she got an expression of understanding and said wonderingly, \"You are an American flyer??!\" It was like I'd just ridden up in shining armor. ",
        "Some of my tension evaporated. I blew out a relieved breath and said, \"Thank God you speak English!!\" I meekly added, \"I obviously don't do so well in French.\" Then I said hopefully, \"Why don't you come out of there and we can talk.\" \n\nWhile I said that, I was using my flashlight to hunt up and relight the candle. She hesitated for a few seconds. Then she started to cautiously creep out of the armoire, never taking her eyes off me. It was like she was approaching a coiled rattler. \n\nI got the candle lit and turned to face her. It was the first time I had gotten a good look. She was a waiflike little woman, small, delicate, almost doll-like in her perfection. I could tell from her round hips that she wasn't a child, as I'd first thought. Although her age was still indeterminant. \n\nShe was wearing a white linen dress that came down past her knees. It was wrinkled and had dirt and smudges on it. She had evidently been wearing it for a while. She was barefooted. \n\nShe was still clearly terrified. Her big brown eyes, in her round, little face, were enormous, like a little doe's about to bolt back into the forest. Her chest, which she had covered by her crossed arms in a protective gesture, was heaving in fright. \n\nI had to say something. I tried to sound as unthreatening as possible as I said, \"My name is Jed Sharpe. I was shot down near your village. Can you help me.\" \n\nHer eyes flashed angrily. She gestured down the length of her frail body and said, in almost accentless English, \"How do you think I can help YOU!!\" \n\nNow THAT was puzzling. I tried to explain, \"I have to find something to wear that doesn't identify me as an American. Are there clothes in that closet that I can borrow? \n\nShe reacted like I was going to steal them. So, I added placating, \"I'll pay for them.\" \n\nShe turned, gestured dismissively toward the clothing and said bitterly, \"Take whatever you want. They won't need them in Drancy.\" I had no idea what she was talking about and it would be another year before the name \"Drancy\" and the concentration camps surfaced.\n\nI said, continuing to try to sound courteous and friendly, \"I'm going to take a look. Please don't run while I'm doing that. I'm in trouble and I really want to talk.\" She looked disdainful. It was like whatever was worrying me was nothing compared to the trouble she was in. \n\nThen she seemed to decide. Her face softened, and she said almost kindly, \"You can look, while I hold the candle. It must be unsettling to be down here in the middle of it all. Not flying above it.\" It was the first indication that the ice was beginning to melt.\n\nI hunted through the many simple articles of clothing and found a shirt and pants that more-or-less fit. I even found a floppy old fedora. I left my uniform balled up in the back of the armoire. But I reverently hung up my Beautiful Betty jacket. I wanted to memorialize the life I was leaving behind. \n\nI turned to her and said, \"How do I look?\" She said with the first hint of a smile, \"Like Tom Sawyer trying to masquerade as a Frenchman.\" That was a very sophisticated and clever thing to say. I said puzzled, \"How do you know all these things? Why do you speak English so well?\"\n\nShe said growing impatient, \"I'll explain later. First, I must attend to the children. That was what I was doing when you frightened me up here.\" She turned abruptly and walked out of the room. I was thinking to myself that this was a very strange woman. \n\nI followed with the candle, stumbling over things as I went. She seemed to be able to see in the dark as she danced along barefooted. Her slim legs and shapely calves looked glorious in the candlelight. She went back to the kitchen and opened a door to what was obviously a pantry. I came up behind her. \n\nShe gently took the candle from me and began loading me down with canned goods, jars, and bottles. Then she stuck a couple of baguettes under each of my arms. She took an armload herself and said, \"Come.\" I followed meekly, like the beast of burden that she thought I was. \n\nWe walked across what appeared to be a cobblestone farmyard and down to the second largest building on the property, which was a stone house. It was blacked out too. My mystery girl slowly opened the creaking door, marched inside and down a flight of stairs to a small cellar. I followed. \n\nIt had been hot outside. But it was cool and earthy down there. The cellar was lit by the same kind of candles I'd seen in the kitchen and there were five children gathered around a little table. They took one look at me shrieked and fled into the darkest reaches of the place. \n\nMy new friend said in a teacher's voice, \"Silence!! Cet homme ne vous fera pas de mal. Il est chass\u00e9 aussi.\" The children stopped screaming and reappeared one by one, staring shyly at me. The woman said to me in English, \"They all speak English. That is what we teach them here.\" \n\nThen she turned to the children and said, \"This man can help us. But he doesn't speak French. He only speaks English.\" They all nodded sympathetically. She added, \"So you must all be patient with him.\" I felt embarrassed. I was the adult and they had to do the translating.\n\nI could see that my new friend was getting closer to her normal self. The presence of the children seemed to inspire that. She said, \"It's late and I must feed them. We can introduce ourselves as I do. I will explain our situation later.\" Then she turned and began making sandwiches from a baguette and the big jar of strawberry jam I had been carrying. \n\nAs she worked, she pointed to each child individually, starting with the youngest. \"This is Josette, she is five and she is very brave, aren't you Josette?\" Josette had fluffy blond curls and blue eyes. She looked up from her sandwich, jam all over her face, gave me a dimpled smile and said gravely, \"Oui.\" \n\nMy friend turned to two slightly older girls who were obviously sisters and said, \"These are Edith and Charlotte. They are twins and they are eight. They are very good girls who help me with all the chores.\" The twins were dark haired and scrawny, with long pigtails and skinny legs. Both of them looked at me timidly. I smiled at them and they both lit up with grins. \n\nThen she turned to the two oldest. She said, \"This is Madelyn and her sister Natalie. Madelyn is thirteen and Natalie is fifteen. Natalie is my assistant and she and Madelyn help me with the other girls.\" Both were dark-haired, small statured, and dark eyed. The oldest was clearly budding into womanhood. They gave me wary looks. They were older and they'd learned to be suspicious.\n\nFinally, my new friend said, \"My name is Suzanne Milhaud. But everybody calls me Suzy. I am twenty-two and I am the teacher here.\" That explained the girls and her... but not the situation. \n\nThe six of them were clearly hiding and they were all carrying around various levels of anxiety, except Josette, who was very brave. That is, as long as she had unrestricted access to jam. They were all too precious for words. \n\nI like kids and I had a lot of experience with Betty's three little brothers and sisters. So, I lowered myself into a chair to make myself seem less intimidating. I tried to exude empathy as I said, \"My name is Jed and I am also twenty-two. I used to be an American flyer. Unfortunately, I had an accident and I don't have an airplane any more. So, maybe we can help each other.\" \n\nThe girls immediately huddled conversing in rapid-fire French. Suzy said, \"They are trying to decide whether you are telling the truth, whether they can trust you.\" Finally, Natalie, who was clearly the leader, stood solemnly in front of me and said, \"We believe you. You may join our group.\" I hadn't felt THAT honored since I was given my pilot's wings.\n\n*****\n\nOnce the girls had eaten, they wrapped themselves in blankets, which had clearly been scavenged from next door. Edith and Charlotte fell asleep hugging each other. Josette was cuddling a ratty old teddy bear. Natalie and Madalyn bedded down next to where Suzy slept, like loyal aides-de-camp. Suzy told me the grisly story after the girls had fallen asleep. \n\nWe sat on the two largest chairs in the cellar and talked. Her perfect, gamine face with its huge brown eyes glowed in the candle light. Audrey Hepburn popularized that look a few years later. But Suzy invented it. \n\nHer story explained a lot. Her father was an American. That was where the command of English came from. But she grew up in Paris. She was Jewish and her family was very wealthy. In 1942 she had used some of her money to establish a refuge to hide Jewish children. \n\nI said puzzled, Why would Jewish children need to be hidden!!?\" She said grimly, \"None of you Americans have the slightest idea what the Nazis are doing to Jews in occupied France.\" \n\nSuzy added grimly, \"Even though we thought that Izieu, was out-of-the-way, the local collaborationists told the Nazis about us, and the Gestapo appeared one day. They took every last one of the children and their caregivers up to Drancy for processing to the camps.\" \n\nI said confused, \"What camps?!\" She looked at me sympathetically, like I was just too na\u00efve, and said, \"They're called \"concentration camps.\" That's where they take the Jews and any other person they want to make disappear.\" \n\nI had no concept of what she was talking about. Don't judge me. Civilized people simply didn't act like that. \n\nShe gestured at the five sleeping angels and said, \"When the Nazis came, I was on a field trip with my girls, up on the mountain. So, they missed us. It was brutal. The Gestapo herded the children and staff out into big trucks and drove them away. Everybody was crying and wailing. It was pitiful.\" \n\nI must have looked appalled. She added with sorrow in her voice, \"We hid until we were sure that they'd all gone. Then we came down. We have been living in this cellar ever since, trying to decide what to do.\" The thought of those five dear little lambs being herded away to some sort of prison wrenched my soul. No wonder Suzy was so frightened when I stumbled on her.\n\nI digested it for a minute. The situation was clear. We were all in deadly danger if the Germans spotted us. I was perhaps a little less imperiled then the girls, since the POW camps sounded more humane than the other kind. But neither of those options were ones that either of us wanted to explore. \n\nI said, \"Do you have plans? You have to escape somewhere.\" She gave me the standard Gaelic shrug that communicated what a bitch life could be. \n\nI gazed at her thinking. Then, I had an inspiration. I said, \"Here, look!!\" I pulled out the silk map of France that was tucked in my escape kit and I laid it on the table. I said, \"Where is Izieu?\" She studied the map, brow furrowed and pink tip of her tongue sticking out between her luscious lips. Then she put her finger on a spot on a loop of the Rhone river and said, \"Here.\" \n\nMy heart sank. Geographically, we were right in the middle of France and as far to the east as you could get. The escape route for downed pilots was south and west. I might be able to avoid detection, even hitch rides with friendly Frenchmen. But there would be no going to Spain with five children in tow. \n\nI had already made up my mind that it was all-or-nothing. The thought of leaving brave little Josette and her dimples, or the twins and their shy smiles, to the tender mercies of the Gestapo was just intolerable. \n\nOf course, there was also the beauty of my new companion's winsome face, with its huge brown eyes and the thick mop of curly brown hair. Don't get me wrong!! My thoughts were totally non-sexual. I was off women forever. The \"Dear John\" letter from Betty had ensured that. \n\nIt was the courage of Suzy's commitment to the children, not her looks, that sold her to me. She could have easily fled, just abandoned the children, and walked into any town. They were the target. Suzy looked like every other citizen of France. People might have noted her beauty. But they'd have thought nothing of her presence. \n\nHowever, they'd have immediately noticed Suzy if she were accompanied by a gaggle of unrelated little girls. And you couldn't trust a soul in occupied France. That was the one thing that was certain. So, Suzy had chosen to stay with her little charges, holed up in this cellar, did her best to take care of them and prayed for a miracle. I was that miracle, no matter how pathetically ill-prepared I might be. \n\nIt was obvious that we would have to move sooner than later. We were running out of supplies and the Germans were bound to eventually revisit the scene of their crime, just to make sure they hadn't missed anybody. The fact that almost three weeks had passed since the initial event, made the need to move seem even more imperative. They'd be coming. \n\nI'm not Sir Galahad, or any other kind of rescuer of damsels in distress. But unlike Suzy, I had a map, a compass, and a sheaf of French francs. It was sixty miles to Switzerland, while it was five hundred miles to Spain. I knew that I would be interned if I walked into Swiss hands. But it was our only chance. \n\nOn the plus side, even if they locked me up, five little girls and their courageous protector would survive. I would make that deal in a heartbeat. I didn't even have to think about it. Of course, I wouldn't explain what the tradeoff was. Suzy probably wouldn't let me do it if I did. \n\nHer captivating brown eyes were luminous in the candle light as she looked at me and said gently, \"What do you plan?\" I just pointed to the map and said, \"We are walking to Geneva, and we are leaving bright and early tomorrow.\" \n\nI went over to the hotel and rounded up some blankets and a pillow, brought them back and spread them on the floor. I chose a spot at the bottom of the stairs in case we got visitors. Suzy and the girls were asleep on the other side of the cellar. I drifted off almost immediately. I had been awake since 4:30 AM. My last thoughts were, \"Was I in an entirely different universe just this morning?\" \n\n*****\n\nI had wondered why the girls all wore grubby dresses, when the hotel was full of nice things left behind by the people kidnapped by the Gestapo. I learned why, when I told my little crew that they should go over and equip themselves with everything they needed to travel. \n\nNatalie said dismayed, \"But Monsieur Jed!! Those things belong to our friends. We cannot take them.!!\" Josette scolded me gravely, \"Oui, you should never steal from other girls.\" Her dimples just killed me. \n\nI laughed and said with the love I was starting to feel for all of them, \"We are going to walk a long way and you will need some of their things to get there. But I will leave money. So, your friends can buy nice new things when they return.\" \n\nSuzy and I both knew that whatever I left behind would never be claimed. But fifty francs was worth the price if it bought a clear conscience for my five upright little companions.\n\nThen it hit me. I looked at Suzy and said, \"Is that why you're still wearing the same dress. Are you doing it out of solidarity with them?\" She said, \"Yes, we are all for one and one for all here,\" and she smiled at the girls. Needless to say, the Three Musketeers are French. \n\nSo, we packed what little things we had. All of the girls had keepsakes wrapped in hankies, mementos of their families. Lockets with pictures. It was heartrending. And of course, Josette had her precious bear. \n\nOur abandoned hotel was up the road a slight distance from the village. It was unlikely anybody would notice the seven of us rummaging around in it. But given the stakes it was better to be safe than sorry. So, I went first and did an extensive recon of the area. \n\nThe collaborationists were looking for girls. An itinerant Frenchman poking around the place wouldn't attract any attention. I saw nothing but bees and butterflies stirring in the hot Auvergne morning. I gave the signal and Suzy and the girls hustled across. \n\nThey scattered when we got inside the hotel. Suzy took the twins and Josette to their dormitory room to gather their things. Madelyn and Natalie went to the older girls section to outfit each other. I went back to the armoire and got out my jacket. \n\nI wrapped the jacket around the holstered 1911 Colt .45 automatic and extra clip that pilots carry, and stuffed it along with my uniform pants and shirt in a handy pillow case. \n\nI found a stout wooden curtain rod, tied the pillow case to it and set off back downstairs to meet the members of our expedition. I looked like a proper hobo with my tatty French clothing on my back and all my worldly possessions on my shoulder. \n\nThey were assembled in the dining room. Suzy had undergone a stunning change. Now she was wearing a tailored pair of chinos and a jaunty neck scarf. It was something that only French women can pull off with elan. \n\nShe was tiny, perhaps five-one and a hundred and ten pounds. But I could see that she had long shapely legs, round hips and the front of her heavy chambray shirt was pushed out further than I had anticipated. All-in-all, she was an exquisite China doll.\n\nWe weren't quite in the Alps. But the girls were dressed in Alpine hiking clothes, sturdy shoes, shorts, and thick knee socks and long-sleeved shirts. Even more astonishing, they all had little backpacks. I said amazed, \"They look like they've done this before.\" \n\nSuzy smiled fondly at them and said, \"All the girls know how to hike and what equipment to bring. We would go into nature as much as we could before the Nazis came. We'd camp overnight in the upland meadows and gather the mountain flowers, edelweiss, even crocuses and primroses when they were in bloom.\" \n\nShe added bitterly, \"That was what we were doing on the day the Gestapo arrived.\"\n\nI looked at them and they were all gazing back at me with anticipation and hope. I was their salvation. It scared the shit out of me. My responsibility for a bomber crew was one thing. The thought of losing one of their precious little lives was in an entirely different cosmos of horror. \n\nThen there was their teacher. I don't suppose it would be strange for me to be attracted to such a beautiful, bold, and strong-minded woman. I couldn't help contrasting my new companion's exotic good-looks, and her strength, with pretty Betty's girl-next-door appearance and self-indulgent spirit. \n\nBetty said it was my fault. It was as if she thought I'd CHOSEN to linger in the middle of a war. So, she had turned to the guy who would give her what she wanted. Maybe Duke had changed. She said he had. But I doubted it. \n\nAll I knew was that the love of my life had traded my little diamond for the opportunity to become a smug banker's wife. It broke my heart and utterly destroyed my confidence. How could I have been so totally wrong about Betty's personal integrity? \n\nIt made me question what love was all about. It made me think that I would never have a close relationship with a woman again. Of course, when I thought about it - and I'd thought about it a lot - I realized that the only thing Betty and I had in common was proximity. \n\nWe were both relatively good-looking kids. But our attraction to each other was one of familiarity and habit more than a sense of mutual respect. There was never a deep-down regard for the other person's wishes, a willingness to face the vicissitudes of life together.\n\nBut of course, Betty was just a child, and so was I. We were fully grown physically, and we could do all the things adults could do, including fucking each other. But we hadn't been tempered by life. Neither of us had gone through the trials that build strength of character. \n\nGetting yanked out of my familiar world by the Army had given me plenty of challenges. It also gave me the seasoning to shape a new version of myself; a person who had a better grasp of the essentials, like commitment, honor, and duty. On the other hand, Betty had continued living in the uncomplicated world that she was born into. There were no challenges to face, no tough tests to form her into a stronger, better person. ",
        "Betty might be twenty-two, like me. But the world, for her, was an endless array of meaningless events taking place a long way from her doorstep. They didn't affect her. So, she remained self-centered, like a child, rather than evolving to a more adult understanding of things. \n\nTo be honest, during our teen years I'd never thought about world events either. There wasn't any reason to think about them. In fact, the very thing that I was trying to avoid, the limited, life of a small town, had kept me from seeing that events occurring a half-world away would inevitably touch me. \n\nAdmittedly, if you grow up in a sleepy little town in the middle of nowhere, the harsh reality of global warfare is hard to grasp. And intellectually, it's a long way from small-town Wisconsin to the places where titanic social, economic, and political forces were being unleashed. \n\nYet, we could fight the Nazis in Europe, or we could fight them on main street. But we would eventually fight them. Consequently, the blissful ignorance of the people back home might be understandable. But it wasn't forgivable. At least for those of us who got the \"Dear John\" while we were in harm's way. \n\nIt takes a ton of psychic energy to deal with the ever-present reality of untimely death, and you're likely to take your eye off the ball if you lose hope. I mean what's the point if you've got nobody to come back to, right? That's why it's an especially selfish act, to pull the emotional rug out from under somebody who's living day-to-day. \n\nSo, fuck 'em all - if basic moral tenets like loyalty and duty don't mean anything to you. But make sure that the person you're betraying doesn't find out until they've returned home safe and sound. You are already a sinner. Don't add murderer to your list of crimes.\n\nNow, I was stuck in the middle of hostile territory, without the ability to speak the language. I should have been huddled in a little quivering ball of self-pity sucking my thumb. The reason I wasn't, was standing right in front of me. I had five little girls to protect and a steadfast woman to make me into a better man. \n\nThe right woman will do that for you. It's the confidence, or perhaps the proper term is trust, that facing adversity builds into a couple. I'd known Suzy for less than 24 hours. But I was absolutely certain that we would face this together and do the best we could, for better or for worse. I also realized that I had never had anything like the same feelings about Betty. I knew that she cared about me. But I always had the sneaking suspicion that she cared about herself a whole lot more. \n\nI knew for a fact that Suzy would sacrifice everything for the children, and I was coming to the grudging realization that I would sacrifice everything for her. You can call me a small town hick if you like. But my belief in this woman was both puzzling and reassuring. \n\nHow had it happened so fast? Perhaps it was the dire circumstance. Maybe it was the innocence and purity of the girls. Maybe it was just Suzy's huge dark fathomless eyes and her lissome body. Whatever it was, it put spine in me, and I knew I would die before I would let any of them down., \n\nI had my map and compass and I could see that the most direct route to the Swiss border was almost due northeast. There was a road that went past the hotel and into Izieu proper. Then it headed out in the right direction through the rugged terrain of the Auvergne-Rh\u00f4ne-Alpes. \n\nUsing the road though, was clearly out of the question. Because, we would have to parade through town with our little gaggle, and somebody in that town had turned the others in. But there was a decent footpath that led around the mountain the other way. \n\nThe footpath began in the same back garden that I had crept through the night before. It wound almost due west, past the mountain that I'd landed on. Then it turned to the north and finally northeast. \n\nWe set out from our place of refuge in a glorious summer day in Alpine France. Suzy and Natalie were leading with Madalyn following with the twins and I was keeping up the rear. We were more-or-less in a single file, except the twins who were walking together holding hands. The girls were all singing a sweet French song. It was shaping up to be a hot day in the valley of the Rhone. \n\nWe were on an upward grade. The girls handled it better than I did. That was because I had a passenger. She was sitting on my shoulders, clinging happily to my forehead, neck and occasionally my ears. Little Josette might be very brave. But her tiny legs would slow us down and her happy laughter and the occasional kiss that she planted on the back of my head was well worth the extra thirty-five pounds. \n\nThe path ended in a mountain pasture. Suzy had been up there before and she guided us through a tree-filled area next to a cliff, where we quickly found another path that took us to an actual road. We had been walking for perhaps three hours and the girls were getting tired. So, we stopped in the forest next to the path to rest and eat. \n\nWe had only brought supplies for a day. Our aim was to get far enough along the way that a man and a woman and five girls would not be as likely to remind the locals that the Gestapo had raided a Jewish orphanage. \n\nTonight's goal was Belley. That was the first large city in the direction we were walking, perhaps another three miles from where we had stopped. I had plenty of genuine French francs courtesy of Uncle Sam. And we intended to pass ourselves off as a family. \n\nSuzy and I didn't look old enough to have girls as mature as Natalie, or Madelyn. So, the story would be that they were her older sister's children. Neither Suzy, nor I, wanted to push the girls further than ten miles a day. They had been real troopers, walking up rough mountain trails and through trackless forests without complaint. \n\nPart of the reason they were so courageous was their absolute devotion to Suzy, whose spirit seemed to fill all of them with resolve. The other part was probably the sense that they were moving toward safety They all had to be frightened. They were children, separated from their parents for reasons they didn't understand. Then, forced to witness the horror of their friends being loaded into trucks by Nazi goons. Yet, they had forged ahead bravely because they believed in Suzy and now, they believed in me.  \n\nIt was getting hot as the sun rose into early afternoon. We were making good time. If we got to Belley we would have covered fifteen of the eighty-six kilometers to our destination. At that rate, it would take about five more days to reach safety. \n\nIt was easy enough to stay out of sight since there were footpaths all over the area. It was remote mountain meadow terrain, heavily forested. Still, people had been living there for over three-thousand years. There was some traffic on the actual road to our north. But it was local, nothing military. \n\nWalking through sunny meadows full of buzzing insects, a person would never guess that the Third Reich even existed. That is, unless you noticed the hundred plane bomber stream that was passing in the distance to our west. They were twin engine, either Mitchells or Marauders. \n\nI felt a pang. I remembered what had happened to Bobby. I wondered how Whiz, Eldon and Billy were doing. That was only thirty-six hours ago? I looked at Suzy. She was staring at me with deep sympathy and something else.\n\nWe reached Belley as the hot summer day was turning to cool dusk. It was a big place, much larger than any of the villages we had passed. We almost immediately encountered a farm. It was on the outskirts of town, far enough from anything involving the town authorities to be a threat. \n\nThere were several outbuildings and a big barn. Suzy took a wad of my francs to negotiate with the farmer's wife. You could hear the two women haggling in rapid fire French. A man emerged from the house while that was happening. He was skinny with a pronounced Adam's apple and the look of a person who spent a lot of time outdoors in a field. \n\nHe walked up to me and said affably, \"Bonsoir monsieur - comment \u00e9tait votre voyage?\" I was frozen in fear. Even if I knew what he'd just said, I would expose myself as an American if I opened my mouth. The guy was clearly not a member of the Milice Fran\u00e7aise, the Vichy police. So, he himself was innocuous. But he was bound to talk. \n\nThat was when I heard a sweet voice whisper in my ear, \"He asked you how your journey was.\" I nodded amiably and made the universal so-so gesture. I tried to make it look like we were in the same club. He was a family man. He knew how it was - traveling with the wife and kids and all.\n\nHe grinned and said, \"Bien... et j'esp\u00e8re que vous appr\u00e9cierez votre s\u00e9jour avec nous.\" The little voice whispered, \"Just say, Oui, Merci.\" I said that, exactly as Josette had pronounced it and the man turned and ambled back into his house scratching his ass as he went. \n\nJosette had just saved everybody's bacon by her quick-wits. She was indeed very brave. I swung her down from my shoulders and said, \"I love you my sweet little girl.\" She dimpled prettily and said, like she was making an announcement, \"I love you too. You are my new Papa.\" \n\nThen she threw her little arms around me, hugged me, and scampered off to join the other girls. I was thoroughly smitten. She was wrong in one respect though. Josette was more precious to me than any daughter could possibly be.\n\nSuzy had done very well. Of course, my twenty-five Francs might have had something to do with it. We had a cozy barn full of hay to bed down in and all the bread, milk, and cheese you could possibly want. The farm family left us alone because Suzy had told them that Madelyn had the measles. Madlyn was a convincing sufferer. It would be Natalie's turn tomorrow.\n\nI was watching Suzy. Her charges were sitting in a circle around her while she enthusiastically told them a bedtime story. It was in French. So, I had no idea what she was saying. But the girls would squeal and laugh once in a while. Then there were prayers, each of them looked like a porcelain angel. Finally, they all went to their beds. Edith and Charlotte had carefully laid out the blankets for all of them. The twins were, of course, honored to do the chores. \n\nI went outside to sit on a bench in the cool night and listened to the chirping of the crickets and the croaking of the frogs. Suzy sat down next to me and said gently, \"You love them as much as I do?\" I chuckled and said, \"How could I not? They insist on tugging on my heart strings.\" \n\nSuzy looked at me solemnly and said, \"We're all they have. The Nazis took every one of their parents. They cry about it sometimes, although Josette might not exactly understand what happened.\" \n\nI laughed and said, \"She's the cleverest of them all.\" And I recounted the near miss we had while Suzy was negotiating our night's lodgings. \n\nI added proudly, \"She says I'm her new Papa now.\" Suzy seemed to melt. Waves of emotion churning behind her eyes. She said simply, \"You are. She has nobody and she is a child. Children need somebody to love.\" \n\nThen, she leaned over and gave me a quick soft kiss on the mouth. It felt like lightning crackled between us. She drew her head back and looked at me wonderingly. \n\nShe said agitated, \"I have no idea what just happened.\" I said, \"Neither do I.\" She smiled and said in her self-contained way. \"Il est in\u00e9vitable!!\" I knew THAT word. It's the same in English.\n\nI awoke in the middle of the night to discover I had been joined in my cozy bed in the hayloft. No, it wasn't who you'd think. There was a small precious bundle curled up next to me, fluffy blond head buried in the crook of my arm. She was hugging a ratty teddy. She looked peaceful and happy. I felt more fulfilled than I had since my own childhood. I would protect her with my life.\n\n*****\n\nThe next three days were similar to the first. We walked along the banks of the Rhone through towns like Culoz and Anglefort. We spent the third night in a hayloft in Malpas outside Chaumont in the Haute-Savoie. The weather had been fine, and the paths were decent. But we were starting to climb into higher elevations and the girls were tiring. \n\nWe probably should have pushed them harder. Rescue was getting nearer by the hour. But we didn't have the heart. They had been such troopers. Not one of them complained, which was extraordinary with children in my experience. \n\nPerhaps it's because they knew the stakes. Maybe it was because they knew that we were sacrificing along with them. I had carried my little angel a good bit of the way, even though she insisted that she should walk. I explained that we could move a lot faster if she was on my shoulders. But that didn't apply when we got to the really steep grades. She held my hand going up those.\n\nWe'd left the Rhone valley and were making our way into the alpine region. The roads were okay. But we had to stay on them now. We were planning on stopping for the night in Minzier which would have put us perhaps a day away from safety. \n\nThat was when disaster struck. We used footpaths where we could. But the encroaching mountains had narrowed our options. So, we were walking along a regular road when two Germans in a motorcycle came zipping by. \n\nI realized in a flash that my original plan was chillingly naive. The dawning awareness of my stupidity was hard to bear, since it put the girls in jeopardy. \n\nNaturally, the Germans would run patrols near the border. And of course, the accessible crossings would be heavily guarded. Hence, we couldn't just stroll down the yellow brick road to safety. There would be checkpoints and German troops to stop us. I should have thought of that. But I'm a flyer, not a soldier. \n\nThe people on the motorcycle ought to have gone right past. We didn't look suspicious, except for the large number of kids and the remoteness of the location. But the guy in the sidecar checked out Suzy. He signaled the driver who turned around and they came slowly back in our direction. \n\nIt was clear that side-car guy was planning to \"interrogate\" Suzy in the woods just to the north of us. We were completely exposed, alone, without anybody in sight. I put Josette down, told her to get behind me and began to fish around in my hobo bundle for the .45. \n\nThe guy in the sidecar was clearly an officer, the motorcyclist was a sergeant. They came putt-putting up and the officer said to me, \"Ihr Personalausweis monsieur.\" Great!! That sounded like German. \n\nI must have looked as intimidated as I felt. Suzy, who had come up next to me, said, \"Er spricht nur Franz\u00f6sisch.\" So, she spoke German too. \n\nThe officer immediately turned toward her, she was his real target anyway, and the two of them argued in rapid-fire German. I couldn't believe how confident and steady Suzy sounded. The stakes were astronomical, and this valiant woman was playing every card in her hand including her sexuality. \n\nThe gist of the argument was that I didn't have the identity card issued to every citizen of Vichy France. Suzy and the girls probably had theirs. But they would have identified them as Jews which would have been another problem entirely. \n\nI wasn't concerned since I had the solution to our mutual problem in my right hand, hidden behind my back. My brave little Josette, rather than running away in fright, was trying to mask the gun with her tiny body saying, \"Qu'est-ce qu'ils font papa?\" \n\nSuch a smart girl!! She was intentionally avoiding English. If she had asked, \"What's going on Papa,\" it would have revealed who I was.\n\nThe conversation ended with the officer jerking Suzy by the arm. He said something in German to the sergeant. Which appeared to be an order to keep an eye on us. Then he began walking toward a little grove of trees perhaps twenty yards off the road. Suzy was following behind. Maybe the German wanted to interrogate Suzy away from the rest of us. It was possible. She was the only one who spoke German. Nevertheless, it didn't matter what his reason was. They were all completely ignoring me. That was a fatal mistake.\n\nI grew up with guns. Hell!! I'm from rural Wisconsin, where babies are given pistols as teething implements. And I'd killed a lot of animals, from varmints to deer. But I had never shot a human. That was about to change.\n\nThe art of killing with a gun lies in the willingness to do it. A lot of people flinch at the last second and miss, or never pull the trigger because they know they are taking a human life. That wouldn't be a problem for me, because I was doing it to protect five little girls and this heroic woman. \n\nBackshooting is the sign of a coward in the western movies. Still, like I said, I'm a pragmatist. So, Occam had the right answer. The bang of the .45 evoked screams from the girls. The heavy, slow-moving slug flattened the German like he'd been stepped on by a brontosaurus. \n\nSuzy, surprised and alarmed, fell over in the opposite direction. The sergeant was quick thinking enough that he instantly took off before I could get a bead on him. \n\nThe girls were shrieking and crying, Suzy picked herself up and rushed to hug the twins. Madalyn and Natalie ran to embrace the other three. I was clutching brave little Josette to my chest. She was clinging like a baby spider monkey. But she wasn't crying. I said, \"I will do anything to keep you safe my little lamb.\" Her sweet voice said, \"I love you Papa.\" I was at peace about what I had just done.\n\nThe shock quickly passed. The girls were resilient. That was because they had faith in us. Suzy looked at the dead German and said, \"This changes things. The Germans will be hunting us now.\" \n\nI said, defensively, \"What else could I do? They would've never let us go, even after that pig finished with you.\" \n\nSuzy looked at me, for the first time angrily, and said, \"I know why you did it and so do the girls. How could you think we wouldn't understand?\" \n\nThen she added tenderly, \"You are our guardian angel.\" They all nodded solemnly. I said lamely, \"Well I'm sorry that I had to do it in front of them.\"\n\nI got down on one knee, so we were all in a conspiratorial circle, laid out the map and said, \"The road is the only way into Switzerland, and it's heavily guarded. I see that now. So, we need to wait for the Germans to pull back.\"\n\nThey all looked worried. I said, trying to sound reassuring, \"They won't spend a lot of time and resources looking for us. They have too many other problems. The Allies have landed, and they'll eventually chase the Germans out of France. So, we need to hide and wait for that to happen.\" \n\nI pointed almost due northwest. There was a deep forested valley that rose to an impassable mountain peak. I gestured toward that and said, \"In the meantime, the forest gives us an ideal place to hide.\" \n\nSo, we all journeyed down the steep hill and into the valley. Suzy, and Natalie helping Madalyn and the twins on the rough parts. I was following like a donkey with his rider on his back. Rather than feeling discouraged I was confident that I finally understood the situation.\n\nAll we had to do was stay invisible until that part of France was liberated. We could easily do that in this trackless wilderness, as long as we could find a safe place to hide. \n\nIt was mountainous. There had to be caves in the vicinity. All we needed to do was find one and wait. I had the .45 and an extra clip. There were plenty of animals for meat. Everybody had some bread and even chocolate in their packs. \n\nWe worked our way through the forest until we got to a mountain stream. We were taking off our shoes prior to crossing, when four people suddenly materialized on the opposite bank. The forest came up close to the river and they must have been hiding there watching us. \n\nIt was eerie. One moment there was nobody there, and then there was. I was pulling out my .45, ready to make my last stand, when the leader produced a hands-up gesture. They were clearly not German. They wanted to talk. They were dressed like normal French. But they were all carrying Sten guns. ",
        "The leader wasn't a guerilla. He was more like a gorilla. He was short, perhaps five-ten, but he must have weighed at least two-sixty and all of it was muscle. He had no neck, and a hairline that started about three inches above his eyebrows. His hair was slicked back like a gangster and he had a five o'clock shadow. \n\nYet, his eyes were clever, kind, and also very perceptive. A lot of intelligence lurked down there. He called across jovially, in American English, \"Relax buddy. We're the Maqui. Folks call me King, like the monkey, not the royal.\" \n\nThat was a Midwest accent. I just gaped at him. He said by way of explanation, \"Came over in '18 with Black Jack Pershing and decided to stay.\" \n\nThen he turned to a gorgeous, little French woman who had drifted up beside him and said. This is my partner Bernadette d'Langdouc. She used to be British Special Operations. We're both with the OSS now, on loan to the Maquis for the duration. \n\nThat was puzzling since the woman was tiny, like Suzy, and she looked like a French aristocrat, not a Commando. King said matter-of-fact, \"Bernadette's a Marchioness when she's not toting a Sten. Her family owns most of the land we're standing on.\" \n\nThe woman laughed and said in delightful French accented English, \"Ignore King, he likes to tease me about my station before the war. That's all changed, now that the Boche are here. He is the leader of our little group. I go where he goes.\" \n\nThey smiled at each other fondly. They might have looked like beauty and the beast. But the two of them were obviously deeply in love. \n\nThe other two men were local Maqui and clearly a cut beneath King and Bernadette. One looked like the actor Charles Boyer. He was a thirty-something Frenchman named Doublemetre, handsome and debonair. The other was a big thug named Andre. \n\nKing said, \"We heard a shot and were making our way over to see what it was all about.\" \n\nI said, \"My name is Jed. I'm an American. I bailed out of a B-26 a week ago. I ran into Suzy and the girls by accident.\" Suzy added by way of further explanation. \"The girls and I are Jewish.\" \n\nI said, \"We are trying to get these girls into Swiss hands. But we ran into a German patrol. The shot you heard was me resolving a disagreement with one of them. He had some ideas about Suzy.\"\n\nKing, who I was quickly beginning to like and trust, got a hard look on his face. I could see that he was a very dangerous man. He said, \"I know what they're doing to the Jews. Bernadette and I met because of that.\" \n\nHe added in a much less harsh tone, \"Well, you've come to the right place buddy. Bernadette and I'll make sure that the girls are all safe, and we'll get you back to your outfit.\" \n\nMy heart sank. This was a day of painful realizations. I guess I'd always known that the past week was a fantasy out of time. My undeniable duty was to get back into the war, not loiter around France with this beautiful woman and five adorable little girls. There was no avoiding that obligation and I would be less of a man if I tried to shirk it. \n\nStill, I felt more heartsick than I had when I got word that Betty had married Duke Williams. \n\nI tried to look appropriately resolute as I said, \"That would be great. But what do we do in the meantime?\" King said, \"You guys need to just wade on over and we'll take you to our base camp. It isn't very far.\" So, the six of us waded across the little mountain stream. It was ice cold. Then we all sat on a log, put on our socks and shoes, and we were ready to walk. \n\nKing said, \"Let's stroll along together pal and you can catch me up on things in the States. It's been a while since I've talked to an American. Who d'you think'll win the World Series?\" Bernadette, in turn, drifted back to join Suzy. It was obvious that they were slyly interrogating us to confirm that we were legitimate, which was reassuring. It proved that they had as much to lose as we did, if they were betrayed.\n\nI noticed that Doublemetre had also made it a point of joining Bernadette and Suzy- Frenchmen!! \n\nMy clever little sprite was on my shoulders. She was listening in on our conversation, while trying to act like she didn't understand English. \n\nKing said disdainfully, \"The Maqui up here are basically a bunch of communist bandits, who spend their time robbing rich people's chateaus rather than bothering the Germans. Bernadette and I came down here for a special project. We'll pull out once that's finished. You can come with us when we do.\"\n\nHe read my face. He said, \"Don't worry about the girls. They're safe with Bernadette and me.\" He grinned and flexed his bicep. It was as big around as my thigh. How does anybody get arms like that?\"\n\nHe added conspiratorially, \"It involves an entire German Army that's based south of Belfort, mostly Hiwis.\" \n\nI said puzzled, \"Hiwis?\" \n\nHe said contemptuously, \"You know, Ostlegionen, Russians who've switched sides.\" He got a mischievous grin, \"We're going to make sure that army stays north of the Rhone for the duration. That's all I can tell you. \n\nHe obviously wanted to change the subject. So, he said, \"What's been going on since D-Day? Bernadette and I were there to witness the landings.\" The way he said it, it was obvious he had been standing in France when that occurred. \n\nHe added, \"We were sent down here right after that. But the two of us want to get back to Paris for Christmas. Any idea of whether that's going to be possible?\"\n\nI knew what our strategic planners thought. But it was something I wasn't supposed to share. Still, I immediately liked and trusted this guy. I said, \"The planners estimate that all of France will be German-free by then.\"\n\nHe gave me a wolfish smile and said, \"About time!!\" \n\nI added, \"I heard in our last briefing that the Allies had broken out of the bocage and were racing to pocket the German 7th Army in Falaise. We were bombing the railroad junctions south and east of there to keep them bottled up.\" \n\nKing looked even more pleased. He announced proudly, changing the subject one more time, \"I was the manager of Harry's American Bar in Paris when the Krauts showed up.\" \n\nI looked blank. He said, \"Hemingway, Fitzgerald, George Gershwin??\" I continued to look baffled. He said exasperated, \"How old are you!!?\" I said proudly, \"Twenty-two.\" He laughed and said, \"That explains it.\" \n\nHe continued with, \"I met Bernadette in Paris and we've been together ever since.\" \n\nThen he added, \"Well, there was a short time while she was in England with a friend. But she joined their Special Operations Executive to get back to France and me. Wild Bill Donovan recruited both of us in '43 and we've been part of the American OSS ever since.\"\n\nHe sighed and said, \"We've been intending to get married since the invasion. But we wanted to do it in Paris. I have a buddy there, who just has to be my best man.\" \n\nWas there a hopeless romantic lurking beneath that ferocious exterior? King was the scariest person I've ever met. He looked like he could pick up a house. But his voice betrayed his deep feelings for his tiny partner. I understood the problem. I was having the same kind of confusing thoughts. \n\nI had literally dropped into Suzy's life a week ago. We had absolutely nothing in common. She was a wealthy and sophisticated Parisian woman, exceptionally beautiful and caring of others. I was a bumpkin from small town America. The only thing I knew how to do was bomb the shit out of people. Yet, we had bonded over five little girls.\n\nI felt it and I knew she did too. It was in the way we interacted. I had gone from coaxing her out of an armoire, to the intimacy that a man and a woman have if they're caring for children. We did things instinctively without needing to communicate. \n\nOur bond grew as the simple love for our little charges began to merge into feelings for each other. It was a sense of mutual respect, of seeing the other person as a worthwhile partner, each in their own right. \n\nSuzy was nurturing and supportive. Her focus was on the dynamics of our little group. I tried to provide some external vision and direction. It wasn't that Suzy was weak. She was rock solid. It was just that she couldn't be locked in on the needs of each little girl while reading a map and developing plans. \n\nSo, it was probably inevitable that we would be drawn closer-and-closer together. More importantly, I could appreciate Suzy's celestial beauty while not having a single carnal thought about her. The responsibility of childcare in a time of crisis focuses you on the important things, like mutual survival. \n\nHence, I was beginning to think of Suzy as my female counterpart, not some indiscriminate woman who I was helping to escape. In fact, I'd developed feelings for her that could probably be described as love if we'd ever had one romantic moment together. \n\nAt the same time, I also realized that I would have to leave Suzy behind the moment we contacted Allied forces and King seemed to think that would just be a matter of weeks. The problem was, I'd already experienced the consequences of leaving a woman to go to war. \n\nThen there was Josette. She was embedded so deep in my heart that we could never be separated. Suzy told me that Josette was one of the original Jewish orphans. She was only three when her parents were taken, and she had nobody in this world. \n\nBecause children are innocent, she had bestowed the supreme honor of \"Papa\" on me. And as far as I was concerned that's the way it would be until my dying day. Yet, the Army Air Corps wasn't going to let me bring my little Josette along like an adopted puppy.\n\nFinally, there was Doublemetre. He and Suzy were walking along joking and laughing in French, a language that I didn't understand. It was a problematically intimate scene, even though Bernadette was walking along with them too. \n\nI could see Doublemetre's intent in every move, gesture, and nuance of voice. Suzy could probably see the same thing. So, why was she allowing him to flirt so outrageously with her. \n\nKing looked back at them, then he glanced at me. He said evenly, \"I fell in love the same way.\" He was talking about me, not Doublemetre. \n\nHe said, \"Dangerous times and places sort the sheep from the goats. That one is like Bernadette. You can trust her.\" That was reassuring, I think.\n\nThe trail had gotten progressively wider as we walked along. Finally, it petered out into a flower filled meadow. King kept walking like he was coming home from work. In many respects he was. Then we arrived at the camp. Well - it wasn't exactly a camp. It was massive. \n\nIt must have been built as a hunting lodge by some self-indulgent French aristocrat. It was in a small clearing in a cliff face. The cliff loosely surrounded the lodge on three sides and the only approach was through the forest on the fourth side. It was a brilliant hiding place.\n\nIt was a half-timbered Tudor monstrosity, out of one of the Grimm Brothers' wildest dreams. It was made up to look like a fantasy lodge in the forest. They did that a lot in the Nineteenth Century. There was a slate roof covered in moss. There were diamond grid windows with stained glass scenes. Finally, there was a giant pair of moose antlers over the door. As far as I knew, moose haven't been sighted south of the Baltic since the ice age.\n\nI stood there staring. Suzy came out of the of the forest, covered her mouth in astonishment and muttered, \"Mon Dieu!!\" The little girls all tittered. It was like a fairy tale castle. \n\nBernadette said matter of fact, \"This is one of my family's lodges. That's why we're staying here.\" King added, like it was the biggest joke in the world, \"Like I said, she's royalty.\"\n\nWe entered the great-room and gazed wonderingly at the twenty-foot-tall ceilings and the walls covered with the heads of bear, deer, and every other animal I'd ever heard of including a rhinoceros. Natalie said disdainfully, \"Quel affichage d\u00e9go\u00fbtant.\" I didn't need a translator to tell me what she'd said. The girls were totally grossed out. \n\nBernadette laughed and said, \"I've always felt that way too.\" She turned to Suzy and said, \"Shall we get them settled in? Where have they been sleeping.\" Suzy said casually, \"Haylofts.\" \n\nBernadette looked at all of them with respect and said, \"Well, we have a nice warm bed for each of you.\" And then she led them off down the hall. I heard Josette's sweet little voice say, \"I want to sleep in Papa's room.\"\n\nMeanwhile, King said, \"Why don't we meet the Maqui cell that we've been embedded with.\" He added under his breath, \"They're all scum from the Marseilles docks. The only reason they haven't robbed this place is that we don't let them have guns. I make sure of that.\" \n\nI could see his point. There were four others besides Doublemetre and Andre. They were lounging around on the antique furniture, smoking, and looking like their only mission was to empty the wine cellar. \n\nKing said in loud French, \"Voici Jed Sharpe. Il est un de mes amis et je veux que vous le traitiez avec respect ou vous me r\u00e9pondrez!\" They didn't look nervous as much as they were resentful. They all reacted like he'd threatened them on my behalf. It was clear that none of them would challenge King.\n\nHe said, \"I just told them that you were a friend of mine and I want them to treat you with respect or they would have a problem with me. None of them are to be trusted. I'd kill them all if it wouldn't mess up our mission.\"\n\nSpeaking of faith, the girls all walked back in at that point. Doublemetre, who was lounging on the overstuffed couch, said something playful to Suzy. She answered in the same manner. My blood pressure went through the roof. \n\nStill, I had no right to say anything and I kept my mouth shut. Out of the corner of my eye I noticed Bernadette staring at me intently. \n\nFor dinner, we all sat around a grand table that looked like it had once hosted some really decadent hunting parties. This time it hosted five little girls, Suzy and me, Bernadette, and King. It was candle lit. But not for romantic purposes. There was no electricity. \n\nWith her gorgeous face, huge dark eyes, and mop of curly brown hair, Bernadette was just as exquisitely beautiful as Suzy. She was sitting across from the six of us, lovingly holding King's big paw. She said to Suzy, \"You and the girls are all from Paris? I was living on the Rue St. Germaine when King and I got involved in this.\" She gestured vaguely around her. She was talking about World War Two.\n\nSuzy said, \"I live on the Rue Guynemer, near the Rue de Fleurus, across from the Luxembourg. Bernadette said impressed, \"So you ARE one of the Milhauds. I suspected that. But I wasn't sure.\" Even in the candle-light I could see that Suzy was blushing. \n\nSuzy said, \"That all changed on June 22nd, 1940. I created a refuge for Jewish children. We were hiding in Izieu when the Gestapo showed up and took them all away. We only survived because we were up on the mountain at the time.\"\n\nBernadette's face took on the aspect of one of those small, fierce birds of prey. She said, \"You don't need to tell me about Nazi atrocities. King and I got together rescuing Jewish women from sexual slavery.\" I thought, \"Holy shit!!\"\n\nAll eyes turned toward me. It was my turn. I shrugged and said, \"I'm just an American shit-kicker who used to drive a B-26 until my luck ran out. Suzy and those little girls are the real heroes.\" \n\nSuzy spluttered and said, \"Nonsense, you are kind, brave and resourceful. Josette has even decided that you are her new Papa. There can be no greater honor than the love of a little girl.\" \n\nI gave them all a sheepish grin and said, \"No question about that. I just don't know what I'm going to do about her when I have to go back.\" \n\nSuzy gave me the first real intimate glance she have ever given me and said, \"We'll still be here when you return.\" \n\nI would have thought about that earth-shaking pronouncement. But at that instant, a huge fight broke out in the room where the Maqui were eating. Both King and I jumped to our feet and ran in the direction of the commotion.\n\nBernadette rose, walked determinedly over to where her ever-present Sten was sitting. She casually jacked the bolt and went back to stand between Suzy and the girls. The look on her face said that nobody was getting past her. For the first time, I saw the Commando beneath Bernadette's exquisite fa\u00e7ade. \n\nI paused in the doorway just to figure out what was going on. You're right. I'm way too over-analytic. While I was standing there like a dork, King went barreling past me and hit the group of six struggling men like a bowling ball hooking into the pocket for a strike. \n\nIt was obvious that two of the Maqui had had a disagreement. Andre was one of them. He had just ended the fight by burying an eight-inch flick knife in the other man's chest and was standing over the body. That's when he saw King coming. So, he tried to stab King. \n\nKing was just as lethally quick as he was unearthly strong. So, he danced past Andre's feeble jab and without as much as a second of hesitation hit him in the head. The brass knuckles on King's fist seemed to have materialized out of nowhere. There was a distinct crack and then there were two dead men on the floor. \n\nKing turned to face the last four and his look was terrifyingly calm. He gestured to himself and said, \"Anyone else want some of this?\" That was in English, which none of them understood. But they couldn't miss the message. \n\nThere was some chattering in French, and they stooped to pick up the bodies. They made their way out the front door and headed in the direction of the woods. \n\nKing turned to me and said, \"Violence is the only thing they understand. But now we're two men down. So, I'm afraid I'm going to have to read you into our mission.\"\n\n*****\n\nKing and Bernadette had been sent to blow up the G\u00e9nissiat Dam. The invasion of southern France was slated for three days hence, and the roadway on top of that dam was the main route to the invasion beaches for the German 19th army. \n\nThe dam was the choke point. That would destroy the only viable crossing for German armor and flood the Rhone. Thus, blowing it would effectively bottle up the Germans while the beachhead got established. \n\nBernadette was the key to the mission, not King. She might be small and elegant, but the Brits had trained her to be the very best RDX agent in France. The fact that her family had traditionally owned the land where her particular set of skills was being applied was a bonus. The Maqui were the pack mules, sent there to haul the RDX to the dam site. They were Doublemetre's men. \n\nI found out from King that Doublemetre was actually an Albanian named Graz, who'd Frenchified himself as he rose up the ranks of the Marseilles mob. All I knew about him was that the slimy fucker was cunning and conniving, and his patriotism was strictly limited to lining his own pockets not advancing the cause of French liberation. \n\nWe were heading out the next day with big packs full of RDX. And there were only four Maqui left to haul them. So, I was the additional beast of burden. The thought of walking for a day with enough explosive to blow us all to kingdom-come was daunting. But Bernadette assured me that the RDX, which she called \"Torpex\" was as harmless as toothpaste until she set the detonators. \n\nI spent our last evening with the girls and Suzy. That had been our routine for the past few days. We wanted to give our girls a feeling of family. We were sitting in a cozy circle beside the fireplace, the soft light of the fire highlighted each of their dear little faces. Suzy's eyes had a special softness and beauty. \n\nKing and Bernadette left us alone and the Maqui were all getting drunk outside around a fire. They bunked in an outbuilding, where the prior owners hung the game after the hunt. King had made it clear that he would use the same hooks to hang any of them if he caught them in the house after dark. So, we were protected from them, especially Doublemetre. I didn't appreciate his relentless pursuit of Suzy. ",
        "I recognized that I'd met the only woman in the world for me. So, I was thinking that Doublemetre's untimely demise might not be a bad thing. Suzy, who was usually so serious, was in full coquette mode. She said flirtatiously, \"It's your turn to tell us your story Papa Jed.\" \n\nThe girls all leaned forward in anticipation. I could have told them the truth. But they needed hope and that was exactly what I gave them. I told them about an idealized America where they would always be loved and taken care of and they would all be princesses once the war was over. They squealed with delight at my expansive tales of the wonderful things a girl growing up in America would experience. It was obvious that for Natalie, at least, that included boys. \n\nThe stories didn't last long. The girls had had an eventful day. Their eyes drooped and Josette fell asleep snuggled in the crook of my arm. Suzy and Natalie took the girls to their rooms. I carried my little angel into my room and tucked her gently into the big bed. The rest of my life would be dedicated to making sure that brave little Josette never had to face fear.\n\nThere was a day-bed located over in the bay window. I would sleep there, so she could see me the moment she woke up. \n\nI walked back into the main room and Suzy was sitting gazing into the fire. She was a smart woman and she had figured out that something big was about to happen. She was obviously curious about where I fit into those plans. \n\nI told her what had happened, and what King wanted me to do. She gave me a meaningful stare and said, \"The girls and I will pray for you. You are very important to all of us.\" \n\nThat was the opening I'd been waiting for. So, I said, \"You are all very important to me. I love all of you.\" Her gorgeous eyes were luminous, looking at me like her happiness depended on what I said next. I said, \"But I love you most of all.\"\n\nThat did it. She stood up, walked over to me, stepped in close and dangled her arms across my shoulders, while her eyes searched my face. It was the most intimate gesture a woman had ever made to me. She said, \"Your love for Josette tells me that you can devote yourself to another person above yourself. That is rare in a man.\" Then she raised her lips to a soft kiss. \n\nThe lightning crackled again. She moaned loudly and her mouth opened to a wild passion that belied her cool exterior. I'd like to say that we fucked all night - right there in front of the fire. But there were far too many little girls in the house. So, we settled for one passionate kiss. \n\nSuzy's eyes were wild with desire when we came up for air. There were enormous fires burning down deep inside that superb body. But Suzy was above all a reasonable women, with a solid sense of responsibility for her little charges. \n\nThe thought of being discovered rutting on the floor by one of the girls, guaranteed our mutual self-control. Still, the bargain was sealed. We were committed to each other. Suzy said, chest heaving with passion, \"I am yours from this day on. We have a lifetime of making love. So, let us just sit by the fire and hold each other.\" That is exactly what we did.\n\nWe sat on the big overstuffed couch in front of the fire. She lay back against my chest, nestled in my arms. Her dark mass of curly hair was underneath my chin. It smelled like lavender. Her body inside my arms was solid and lithe. But it was also small boned and delicate. Her hips, which were plastered against mine, were round and feminine and she had a substantial chest for such a small woman. \n\nIt was hard to ignore the irony of our current situation. I had spent eight years growing up with Betty Moran and I had literally dropped into Suzy's Milhaud's life nine days ago. Yet, I felt a connection to Suzy that I had never had with any other woman. Sure, there were the usual biological reasons, Suzy was a gorgeous creature. But those were just a minor part of the peace I felt holding her. \n\nI'd read enough cheap romance novels to think that I knew what love felt like. And this situation was decidedly not it. I expected out-of-control passion. But that was for another day. Instead, and above all else, there was a deep sense of peace and unity, of shared values and attitudes. \n\nThis statement no-doubt sounds selfish. But Suzy completed me in every way, and I was immediately aware of that fact, without having to think about it, or over-analyze it. She was brave, and steadfast and she had demonstrated a level of a loyalty to the girls and me that transcended her own personal wants and needs. \n\nNow this superb creature was mine. I drifted off thinking that there must have been some time in my past when I was this happy. But I couldn't recall when. Which was a super-ironic, given the fact that we were right smack dab in the middle of a war, and I was about to go off to blow up a dam.\n\nWe slept for a few hours, sitting upright in the comfortable couch cuddling each other. I awoke as dawn was breaking. She stirred and said, \"Where are you going?\" I said, I have to be in my room when Josette wakes up, or she'll be frightened. But promise me you'll be here when I get back.\"\n\nShe looked puzzled and said, \"Why would you even ask me that?!!\" I had changed back into my olive drab shirt and pants for our expedition. So, I had the letter in my pocket. I handed it to her wordlessly and walked back to my room.\n\nI was watching my precious little Josette sleep, hugging her teddy bear. Her beauty and innocence gave me a profound sense of calm. I knew I would make it - if nothing more than because she needed me. That's when Suzy appeared in the door. Her beautiful eyes were full of tears. She hugged me and said, \"That will never happen to us.\" \n\n********\n\nIn the morning, King and Bernadette took me out to acquaint me with the Sten gun. It could spray 600 rounds per minute, and it was so easy to use it could turn your grandmother into a mass killing machine. But it was a piece of shit. It was so wildly inaccurate that I told them I'd rather use my .45. \n\nSuzy and the girls were all standing on the porch as we set off walking in the direction of the dam. I knew that they were all tucked away in a secure place, hidden and safe and we'd left a Sten in case. I looked back in Suzy's direction and she gave me a reassuring wave. There were no tears, or reproaches. This was a very strong woman. Little Josette's voice called, \"I love you Papa.\" There were no childlike hysterics. Of course, Josette was very brave.\n\nWe walked northwest and then due west. It was a beautiful alpine day. Our target was twelve kilometers away, approximately 8 miles as the crow flies. But the trip was much longer because we had to arrive without anybody knowing we were there. Consequently, we stayed in the folds and ridges of the forested hills leading down to the Rhone. \n\nWe were walking single file, King in front. We five pack mules were in line behind him, and Bernadette followed. King was carrying TWO of the 90-pound satchels of RDX like he was toting his lunch. The rest of us struggled along with only one. Bernadette had her infernal devices in her pack; detonators, wiring and fuses. \n\nThe path was steep at times and the going was difficult. I was in pretty good shape. But my knees were wobbling when we got to a wooded area on the eastern side of the Rhone. We ate without lighting any fires and then settled down to wait for dark.\n\nThe dam was situated in the Rhone river valley which was surrounded by higher elevations. We dropped our packs about three hundred yards from the dam itself. It was downhill to the roadway and heavily forested. It looked like the place was guarded by a couple of platoon-sections of German troops, perhaps two dozen men. But all we could see were a couple of sentries. \n\nThe Germans were camped on the western bank, which was flatter and more open. King had said that these were Ostlegionen, meaning the bottom of the barrel for the Wehrmacht. Their discipline and morale were so poor that they were only fit for guard duty and that was evident in how lax they were in maintaining their defensive perimeter.\n\nStill, even King couldn't hold off two dozen Germans. So, the plan was to blow the dam in the dark of the night. King would eliminate the sentries at either end and then he and the four Maqui would guard the western approach while Bernadette and I set the charges. \n\nAndre was supposed to be the one helping Bernadette. But his body was currently residing somewhere in the woods behind our base of operations, all thanks to King. Since I was by far the biggest and strongest among those left, except for King of course, he designated me to haul the seven packs of RDX over to where Bernadette would place them. \n\nIn the meantime, Bernadette took me off to one side, over to where the packs were stashed, ostensibly to show me what she planned to do. We couldn't carry enough explosive to actually blow-up the whole dam. Instead, she and the OSS planners had decided to blow the control gates at the top, along with the road that ran above them.\n\nThe gates were moved up and down to regulate the flow of the water out of the upstream reservoir of the Rhone and into the tailrace. The dam itself hadn't been completed before the Germans arrived in France. So, there were no turbines installed. Instead, the gates were set to keep the reservoir at a reasonable level while only allowing the right amount of water to spill over the top of the dam and flow downstream to keep the Rhone navigable. \n\nThere were two gates. They fronted fifty-foot rectangular galleries that had been built into the top of the dam. The roadway stretched above the galleries. So, blowing them would allow the contents of the reservoir to cascade into the tailrace and flood the downstream part of the river. While at the same time, it would take out the roadway. That would be extremely inconvenient for the Germans, because they would have to make a long detour to get south across the Rhone. \n\nThe two of us walked over to the edge of the forest, where we had staged the packs for easy access. Bernadette said, \"What I need you to do is obvious. Just bring these to me as quickly as you can. I will be underneath the roadway setting the charges.\" \n\nThen Bernadette paused and looked at me intently. She said with meaning in her voice, \"But, of course, that is NOT why we are talking. I want to let you know that; King will do something about Doublemetre if you don't.\" \n\nI must have seemed astonished and confused. Bernadette looked at me baffled for a minute. Then she smiled sympathetically, like the fact had suddenly just dawned on her, \"I forgot, you don't speak French!!\" \n\nI continued to look at her in total bewilderment, I spluttered, \"I don't have the slightest idea of what you're talking about? How does this involve me? I thought Doublemetre and Suzy were friends?\" \n\nBernadette gave me a pitying glance and said, \"You Americans understand nothing. Suzy loves you and when a French woman loves, she gives herself totally and without reservation to her man. King was full of na\u00efve American ideals about women too. The first time we made love I practically had to rape him.\" \n\nI was flabbergasted, \"Suzy loves me like that??!!\" \n\nBernadette said fondly like she was talking to the family dog, \"How could she not. You are handsome and an American flyer. You have been kind and brave and devoted to Suzy and the girls since the moment you met. You even killed for her.\"\n\nShe added, \"Suzy is a very rich and sophisticated woman. You are worlds apart. But she loves you and that is all that matters. She will be yours for as long as you appreciate the gift that she gives you. Which is why none of us can understand why you have allowed Doublemetre to take the liberties he has.\" \n\nI thought to myself, \"I am going to kill that fucker.\" But I said out loud, justifiably concerned, \"Liberties? What liberties? Has he touched her??!!\" \n\nBernadette read my expression and said warningly, \"For tonight, King and I need you to focus on the task at hand. There will be time to settle this later. Doublemetre hasn't, how do you say it - crossed any line. But he has gone way too far in his stated intentions.\"\n\nThat did it!! I looked at the slippery snake sitting there with his three jolly cohorts and thought, \"Fuck it - why not just kill him right now. I'd be doing the world a favor.\"\n\nBernadette saw what I was thinking. She added with steel in her voice, \"You need to be smart about this. Suzy is an intelligent woman. She realized it would spoil our plans if you did anything to Doublemetre before the mission. So, she has been friendly to him for our sake. But Doublemetre has been very insistent and explicit about the many things he will do to her when the mission is over, and she is frightened.\"\n\nI growled, \"Not if I get to him first,\" and I touched the .45 in its snug shoulder holster. There would be a reckoning tonight.\n\nThe moon was only a quarter full. But it provided enough light and it would be hard for the sentries to spot shadows moving through the forest. That is, if they were even looking for them. \n\nThe sentry on our end of the roadway was smoking a cigarette and staring longingly at the sleeping camp when a specter materialized behind him. There was a slight grunt and the apparition laid his body out of sight. \n\nI had expected King to slit the sentry's throat. But it looked like he had simply snapped his neck. The shadow ghosted sixty yards down the roadway and did the same thing to the other guard. It was all over in thirty seconds and there hadn't been any noise to disturb the rest of the sleeping Germans. \n\nThree Maquis rushed silently over to join King. They scattered to take up firing positions on the western approach to the bridge. I followed behind lugging two of the six packs. It was 180 pounds of deadweight. I thought my arms were going to fall off. \n\nMeanwhile, Bernadette had scampered over the side of the dam and was hanging upside down on a stantion beneath the roadway like a squirrel on a limb. I lowered the packs one at a time and she guided them to where she wanted them. \n\nBernadette set the detonators while I ran back to get the next pair. We repeated this three more times. The last trip was easier. Because it was only one pack. Meanwhile, there was nothing going on, on the German side. \n\nBernadette made a sharp little whistle. It sounded like the golden eagles that are everywhere in the Alps. Then she and I sprinted back to our original position unspooling the detonator wire as we ran. \n\nThe two Maquis ran past us and King appeared, walking slowly backward holding a Sten on each hip. He looked like the god of war. The entire raid had taken twenty minutes and still the German camp slept. \n\nThe thunderous detonation of over a quarter ton of artfully-placed RDX must have finally wakened them. Large chunks of concrete roadway blew off into the reservoir, and the face of the dam began to spew tons of water out of two big holes where the galleries used to be. Bernadette was clearly the Michelangelo of demolition. \n\nThe torrent was already beginning to flood the tailrace 150 feet below. And the roadway now looked like a mouth full of broken teeth. The German armor wouldn't be crossing the Rhone anytime soon. \n\nWe didn't need to hurry. The Germans were on the other side of a raging torrent, with no place to cross. But we wanted to get back to camp as soon as possible, even if it meant walking all night. \n\nWe were packing up when we discovered that Doublemetre had disappeared!! We instantly realized what that meant, and it horrified us. \n\n*****\n\nWe had made the trip out in a little over three hours. The trip back took more like two. We alternated running and walking. The Maqui had long since disappeared. My only thought was, \"Good riddance.\" \n\nI'm not much of a church-goer. But I was praying we would arrive in time to prevent, or at least interrupt, the thing that he had planned. I knew that Doublemetre couldn't be that far ahead of us. He'd been present when the raid started. So, it was perhaps a half hour lead. \n\nWe were running as fast as we could. I'm built for speed and yet my legs were on fire. King has many fine attributes. But he's more of a gorilla than a gazelle. And he was lugging all of the remaining gear. So, he was lagging far behind. \n\nThe guilt was killing me. I knew that I should have murdered the son-of-a-bitch the minute Bernadette told me about him. But I was way too civilized and awash in na\u00efve delusions about honor to do the smart thing. King wouldn't have made that mistake. Now, the thought of Doublemetre violating my one true love had turned the cold analytic me into a raving beast.\n\nIt was the middle of the night and we were perhaps a quarter mile from our destination when I jolted to a stop and stared with utter astonishment. There in the moonlight, was a curly blond head chugging determinedly up the trail, running as fast as her little legs could carry her. It was Josette!!\n\nThe resolute look on her sweet little face made it clear that she wasn't running FROM anything. My brave little girl was coming to find me. And she fully intended to run just as far as necessary, through an Alpine wilderness, in order to do that!! It was the most selfless act of pure courage I've ever witnessed. \n\nI sprinted down to my little angel and she said, urgency in her voice, \"Papa, there is a man with a gun at our house!! We thought he was coming to take us away, like the Nazis did with our friends. So, we all ran into the woods to hide. Natalie told me to stay hidden. But I knew you could fix it. So, I came to get you!!\" \n\nBernadette, and I both realized what Doublemetre was actually planning, even if Josette didn't, thank God!! That was the point where King came puffing up. Bernadette scooped Josette up and said emphatically, \"I'll take care of her. You take care of Doublemetre.\" \n\nKing, who was clearly blown reached into his pocket and handed me his gleaming pair of brass knuckles. He said, still breathing heavily, \"These might come in handy until I can get there.\" I said, \"Thanks,\" and took off sprinting down the last of the trail and up onto the wide porch. \n\nThere's a protective instinct hardwired into the human race. Most of the time it's covered by a thin veneer of civilization. But in particular circumstances, it will transform into the ferocious ground ape that we're all descended from and that creature doesn't harbor any silly notions about mercy, or restraint!! \n\nLove evolves a person and I was a long way from the na\u00efve kid who'd parachuted into France a mere ten days ago. I was that creature now and the thought of Doublemetre harming Suzy drove it to a new pinnacle of fury. \n\nI was creeping through the empty lodge along looking for the room with Suzy and Doublemetre in it. I had just reached the big bedroom at the end of the hall when I heard a silky voice say something in French. It sounded like he was gloating. I kicked the door open, gun raised. Thank God I looked before I fired. Doublemetre was sitting in a chair facing the door perhaps three feet from Suzy. \n\nShe was in front of him, also facing the door, completely naked. He had a Sten leveled at her back, using her as a shield. He said calmly and in almost perfect English,\" Ah, the American. I was hoping you would come to witness your woman's degradation.\" \n\nThen he added almost like an afterthought, \"Put the gun down. You will never be able to stop me in time.\" \n\nHe was right. Even if I got a kill-shot off, he would cut Suzy in half before he died. She was looking at me pleadingly. She wanted me to take the shot, even if it cost her life. She knew what would happen to the girls if I surrendered the gun. \n\nI had no choice. I couldn't lose her. I raised my hands, spun the gun up by its trigger guard, and laid it carefully on the floor. ",
        "He laughed and said scornfully, \"Bon!! Now would you please step over here monsieur.\" He gestured toward a corner of the room. It was as far away from the gun as I could stand and still remain in his direct line of sight. \n\nThen he turned to Suzy, who for the entire interchange had been hunched over in front of Doublemetre in that classic embarrassed woman's pose with one arm over her breasts and the other hand covering her privates. Her alabaster body was a study in perfection, like a statue of a Greek goddess. \n\nHe said playfully, \"Now my little dove, you will enjoy the ultimate delight of being fucked by Doublemetre.\" \n\nI knew that this wasn't my fault. Still, I was gripped by an agonizing wave of sadness. I'd tried to prevent it and I'd failed. But why should I have expected success? I was just a kid. Not a man as worldly, or lethal as King. \n\nI said softly, \"I'm sorry my love.\" She said, almost matter of fact, \"Don't be. This changes nothing for us.\" \n\nDoublemetre added tauntingly, \"Except, now you'll know that I'm the better man, n'est-ce pas?\" \n\nHe made an elaborate gesture using the arm that wasn't holding the Sten and said with mocking formality, \"If you would Mademoiselle.\" Then he put his hand on Suzy's shoulder, and pushed her down to her hands and knees on the floor. He continued to train the Sten on Suzy as he roughly kicked her knees apart. He knew he was safe as long as the gun was on her. \n\nI should have been gibbering with panic. But the creature had turned ice cold. It was assessing every nuance and angle of attack, choosing, evaluating, and discarding options at a fantastic rate. \n\nI knew I'd never get to the gun in time. But Doublemetre hadn't noticed the brass knuckles. If I could slip one off, I might be able to distract him for a vital second by throwing one at him. The beast was pleased. That might actually work, especially if Doublemetre was in an awkward position when I did it. \n\nDoublemetre had Suzy facing me, her head was hanging between her arms in shame, totally defeated. All I could see was a thick mop of curly brown hair and the tips of her full breasts. All I heard was her sobbing. That was her only emotion. There was no passion.\n\nDoublemetre had hoisted her small round naked butt so he could enter her and still maintain his line of site on me. The enjoyment would be in the violation, not the sex. That was what was turning him on. I could see it in his eyes.\n\nHe shifted the gun to point at me, as he lowered himself to half kneel behind Suzy. Good!! That was exactly where I wanted him - in an awkward position. She was staring at me intently, willing me to understand. She didn't need to do that. I could see what was about to occur. It was an act of aggression, not intimacy. \n\nOnce Doublemetre was nicely positioned between Suzy's spread legs, he said with an oily laugh, \"You will watch while I enjoy her sweet cunt. I hear some men find that stimulating\" \n\nI had to be smart. He had to be preoccupied in order for my plan to work. So, I put on my best totally beaten face and said, \"Do you REALLY think she wants this? This is wrong.\" \n\nDoublemetre laughed and said, \"Do you think I care? I've been planning to stick my cock in this woman since I first saw her. \n\nHe had fumbled it out of his pants and was lining up on Suzy's utterly exposed opening. Naturally, Suzy wasn't even close to ready to receive him. So, Doublemetre had to look down and do a little fumbling in order to push into her. And for a fraction of a second his eyes wavered off me.\n\nI had removed the left-hand knuckle during the time that we had been talking. It was reassuringly thick, flat, and heavy. As Doublemetre glanced down to finish shoving his cock into Suzy, I flicked the heavy brass object at him. \n\nThree things happened almost simultaneously. First, Suzy gave a loud \"Uggghhhh!!\" as Doublemetre slid into her. At the same time, against all odds, I actually hit him in the face, which caused him to squeeze the trigger. \n\nThen the unavoidable happened. Stens are light, nothing more than a pipe and a receiver, and thus they have a ferocious pull. You have to counteract it by either holding tightly onto the barrel, or as most shooters do - the side mounted magazine. When Doublemetre reflexively squeezed the trigger, the gun ripped off a sustained burst that jerked it away from me, up and back toward the ceiling. \n\nAs soon as that happened, he was mine. Doublemetre was on one knee, inserted into Suzy and basically helpless. I took two quick strides and brought an uppercut off the floor. It was powered by all the ferocious hatred I felt for the man. \n\nDoublemetre had an instant to see it coming. Just long enough for the fear to appear in his eyes. Then the right knuckle detonated on his jaw. He gave a ghastly cry of agony, and his lower face exploded in a welter of blood and flying teeth. \n\nHe flipped backward out of Suzy, which caused her to make a sharp cry as his cock was pulled violently out and she was thrust forward. I pounced on Doublemetre and was ready to launch another roundhouse, when I saw that I'd be wasting my time. Blood was gurgling out of the devastation of his lower face, as he sighed his last breath. \n\nThe creature was delighted. The job was done. It withdrew into my subconscious, patiently awaiting its next call, while I reverted back to my civilized self. The call might never come. Yet, it was reassuring, or maybe the proper term is frightening, to know that I had that capacity within me. \n\nThen King and Bernadette burst into the room, thank God!! Bernadette ran to Suzy, who was lying face-first on the floor. She gathered Suzy in her arms and rocked her while she cried. The conversation was all in French, but I got the gist. Bernadette was telling Suzy that it was over, and that everything would be all right. \n\nI had the instinct to rush over to console Suzy. But she was naked and had just been raped. So instead I dragged the quilt off the bed and handed it to Bernadette. I said, \"I'll be out there when she needs me.\" \n\nThen King and I walked into the main room. King was studying me. He knew that I was coming to the realization that I'd just killed a man with my bare hands. So, he gave my shoulder a squeeze, nearly fracturing my clavicle in the process, and said, \"A man has to do what needs to be done Jed. You don't love 'em if you aren't willing to do whatever it takes.\" His words meant more to me than any preacher's advice about absolution.\n\n*****\n\nIt took less than a month for the Allies to push off the invasion beaches east of Toulon and up to our area. But those weeks were improbably idyllic. \n\nThe month of August passed with King and Bernadette, Suzy, me, and the girls in a comfy old hunting lodge in a fairy-tale Alpine forest. We had all the supplies we'd ever need. It was sunny, the temperatures were mild and for those three weeks, the Third Reich faded into the background. \n\nKing and Bernadette spent most of the time by themselves. It wasn't that they were avoiding us. It was just that they were only interested in or needed each other. They were pleasant and friendly when we were together. But it was like their day-to-day life took place in some kind of binary universe where only the two of them existed. Suzy told me that she found it, \"Tr\u00e8s romantique.\"\n\nSuzy herself had come a very long way in a very short time. There was no trivializing the horror of what she'd endured. Weaker women would have been broken by it. But Suzy was the strongest person I knew. So, for the sake of the girls and me, she almost visibly wrestled her memories into a padlocked cell and buried them deep in her psyche. \n\nOf course, she had Bernadette to help her, and Bernadette was as strong as King. Suzy and Bernadette spent hours alone, just talking. I don't speak French. But the tone of voice and body language was informative and eloquent. \n\nEven so, it was Suzy alone who pulled herself out of the dark place and back out into the sunlight. Suzy loved the girls and their simple purity and high spirits were a perfect antidote to Doublemetre's toxin. It was another proof of Suzy's inherent humanity. And by this point there was no doubt that she was my love.\n\nWe were tentative at first. It wasn't my violent behavior that created the distance. It was my presence at Suzy's humiliation. For a while, she was so mortified that she couldn't even bear to look at me. I, on the other hand, wasn't going to raise any specters until Suzy did. I knew that she would come to me when she was eventually ready to talk. \n\nSo, we danced around each other for a week. It happened one night, after we had put the girls to bed. Suzy always tucked in Edith and Charlotte, and I spent bedtime with Josette. The older girls shared a room. Naturally, it was off limits to adults. \n\nI'd had to kiss Josette good night about ten times. At the advanced age of five, she had me wrapped around her little finger- and she knew it. So, Suzy was already standing, waiting for me by the big stone fireplace when I came out of my room. Her eyes were different, less guarded, more open, shining with excitement. She said, \"Let's take a little walk in the moonlight.\" Then she added, \"My love.\" \n\nMy heart soared. That was the first time Suzy had outright used the \"L\" word. I followed her out of the lodge, each of us locked in our own heads. It was finally time to talk. We came to a meadow just past the tree-line of the woods. \n\nSuzy stopped and sat down among a raft of purple gentian. There were all of the busy sounds of a hot summer night around us. The smell was woods and earth. The full moon lit the surrounding forest in an unearthly light.\n\nSuzy was wearing a simple white dress. It was like the one she wore when I dug her out of the armoire. Except this one was clean and pressed. Her gorgeous slim legs were extended in front of her and she was barefoot again. With her perfect face and huge dark eyes, she looked like a classical wood nymph. \n\nShe patted the grass next to her and I sat down. Except I'm a guy. So, I plopped clumsily instead of landing light and gracefully. I gave her an apologetic grin and she smiled.\n\nSuzy said, \"We need to come to an understanding.\" \n\nI didn't like the sound of that. I said warily, \"Understanding? About what?\" \n\nShe looked at me like I was an idiot and said simply, \"Our future.\"\n\nI must have continued to look bewildered even though my heart was doing a happy dance. I had known Suzy for a month. She had been my mainstay during that time. I knew that she was beautiful, wealthy, and a highly sophisticated Parisian woman; no matter what the situation might have been when I'd first stumbled on her. So, excuuuuse me! If I didn't have a firm set of plans in place for our future.\n\nSuzy said gently, \"I know that your circumstances will change when you finally get in touch with the American army. I also know that you were disastrously betrayed by the woman you planned to marry. But I am not that woman and I want to know how you see our prospective life working out.\"\n\nThe door was wide open, or at least as open as it would ever be, and I knew a couple of things for sure. First, there would never be another woman in my life but Suzy. She was the whole package, smart, beautiful, and tough, a true lifetime companion. Of course, that, in-and-of-itself, constituted a risk. Since it meant that she was likewise a catch for every other fellow looking for a partner.\n\nI also knew that I wouldn't find two Suzies in this world. She chose to step-up when other members of her social class just ran away. I mean seriously!! She could have bought herself a villa in sunny Spain and spent the war sipping champagne on a veranda. Instead, she bought an orphanage to hide Jewish children. And because of that commitment, she had been hunted by the Nazis and raped. Still, it was obvious that she had no regrets. \n\nNow, she wanted to talk about how to fit our lives together!! I couldn't believe how lucky I was and how much I wanted this woman. But there were a million things I didn't understand. So, I told her the truth. \n\nI said, \"Any man would be privileged to spend his life with you. But I'm worried that your feelings for me are an artifact of the present circumstance, and things will be different the minute you've returned to the world that you knew before the war.\"\n\nHer eyes flashed. She said with simmering anger in her voice, \"That's the most insulting thing anybody has ever said to me. Are you implying that a poor little French girl isn't capable of making an intelligent choice. Do you think I'm so stupid that I can't see what kind of man you are? Or are you telling me that you don't find me attractive? If that is the case, then we have no future to discuss, salopard!!\" \n\nWhat a mouth!! From hanging around with King I knew that she had just called me an asshole. \n\nShe stood up in a huff. I said, \"Wait!!\" She must have sensed the anguish in my voice because she hesitated and sat back down, hugging her knees. She looked at me, with dark forces moving around behind her eyes and said peremptorily, \"Well??!!\"\n\nI said, \"You have to understand. I'm a kid from a small town in the back of nowhere. It's a nothing place full of nobody people. My whole life's experience is that town and the Army Air Corps. So, basically, I'm a 22-year-old country bumpkin whose entire love life comprises one high school sweetheart who dumped him. \"\n\nI added meekly, \"I hadn't even talked to another woman until I stumbled on you and you are so utterly alien that you might as well have been born on Mars.\"\n\nHer deep intelligent eyes widened as I added, \"I know that we've connected over the girls. How couldn't we? But seriously, I'm not rich, I'm not cultured, I'm not some sophisticated Parisian Lothario. How could you find me worth spending your life with? A lifetime commitment's what we're talking about, aren't we?\" \n\nThen I paused, looked at her with as much significance as I could muster, and said, \"I don't want to talk about future with any woman who isn't in it for the long haul, for better, or for worse. When I marry it is going to be forever.\"\n\nSuzy's eyes were luminous. She laughed and said tenderly, \"So insecure - but then again, how could you be otherwise. You are laboring under the mistaken impression that my love is based on your place in the herd.\" \n\nShe paused and said, almost like she hadn't thought of it, \"Is your former lover like that? Did she go with the biggest bull? If so, she's a fool and her life will be nothing but desolation and unhappiness.\"\n\nSuzy's face softened and she said, \"I CHOSE to love you because you are a kind and caring man who has a wonderful capacity to devote yourself to somebody other than yourself. I see that every night when you put Josette to bed.\" \n\nThen she added with a coquettish smile, \"You are also brave, resourceful and I might add good looking. That's why I chose you. The only thing that would change my decision would be if I discovered that you are not as you appear to be, and I am certain that isn't the case.\" \n\nSuzy had just used the same yardstick that I applied to her. She was a truly beautiful woman. But that was the least of her qualities. It was her dedication to others, her strength and courage, her integrity, and her moral principles, plus her obvious devotion to me. Those were the things that made her special. \n\nI said simply, \"Till death do we part then?\"\n\nThe intensity of her gaze was daunting as she whispered, \"Till death do we part.\" At that point we sort of came together. \n\nThe sexual tension had been building for what felt like eons. It finally surfaced in a spontaneous kiss. Suzy moaned plastered herself to me and her mouth opened wide while our tongues dueled. We kissed like that for what seemed like an eternity, melding against each other like we were trying to make one four-legged human. \n\nThen we rolled apart, both of us astonished at the colossal wave of passion that we had unleashed. I looked at Suzy and her eyes were wild with yearning. We went back to kissing. But this time I rolled on top of her. Suzy hyperventilated, her legs spread wide, knees raised feet dangling. \n\nMaybe she did it. Maybe I did. All I know is that the final connection was made without me having the slightest memory of how it happened, and then we were one with each other. \n\nI found, to my utter astonishment, how easy it was to drop all internal barriers if you are making love to the right person. I was always aware of my surroundings when I was fucking Betty. But I was lost in some kind of fleeting otherworldly paradise with Suzy. \n\nSuzy is tiny and exquisite, much smaller than I am. But her body is almost voluptuous in proportion to her size. On a larger woman, her breasts wouldn't appear as big as they are. Yet, on Suzy they were two huge, perfect round hills. Her waist was so small that I was close to spanning it with two hands and her hips and flanks were hard and muscular. But her legs were her crowning glory. Suzy's legs were long, slim, and muscular, so perfectly sculptured that they belonged in the Louvre. \n\nHer dress was around her waist and her panties had somehow disappeared. The sensation was wet, hot and pheromones. I was inserted in Suzy to the hilt, not moving, holding myself on my arms and staring into my love's fathomless dark brown eyes. \n\nHer eyes were glowing with a profound, female spirit. Her loyalty, and her devotion were on display, along with her promise of fidelity. I was assuring her that I was hers eternally and that I would die to avoid hurting her. \n\nStill, the spiritual link had to inevitably give way to something a lot more basic. Suzy moaned, her eyes rolled into her head and she emitted a groan that originated in the depths of her soul.\n\nIt all happened very fast. Suzy's head rocked back, and she slammed her legs around my butt. Her hands slapped on my back and her hips shot up to seat me as far inside herself as she could get. I was not even close to rational at that point. So, I don't recollect the love making in detail; and it was love, not sex. But I do recall the Suzy was insanely enthusiastic, taking and giving in equal measure. \n\nThere wasn't anything remotely tentative, or even subtle about the mating. It was two young people vigorously bridging a spiritual gap between themselves, by way of an intimate physical connection. We both knew this would be a historic milestone in our lives. From this day forward it would just be her and me together against the world.\n\nWe did the dance of love for an indeterminate period of time and then Suzy began to move restlessly underneath me. Her legs started to relentlessly shake, and her hips commenced to undulate. That finally culminated in a loud sigh. Then the rhythmic clenching of her inner self began. \n\nShe set off on a bout of uncontrollable quivering and she started muttered over and over in French. I didn't need a translator to recognize that she was urging me to not stop. When my moment arrived, it was like a window opened to a true understanding of the important things in life. and I finally saw what King and Bernadette shared.\n\nWe lay there side by side gasping. I finally got enough awareness to take her little hand and she squeezed mine. I was never going to let her go. I said, \"There will not be another woman in my life. I would die without you.\" There were tears in her voice as she said, \"That's all I ever want to be. We will have a long time together.\"\n\n*****\n\nKing arranged to meet the U.S. invasion force via shortwave. Ironically, we had to walk as a group along the same path we'd followed blowing the dam. There, we hooked up with an Allied unit that was laying a Valentine bridge over the same roadway we'd destroyed a month ago. \n\nIt was a Brit company. They'd come all the way down from the D-Day beaches. But by that point the Heinies had retreated across the Rhine leaving France Hun-free for the first time since June of '40. The Brit Colonel contacted his counterpart up the chain of command and a jeep with a staff officer and a driver eventually showed up at G\u00e9nissiat to take me back to 45th Division HQ. ",
        "It was another hot and sunny day when a Major unwound himself from the passenger side of the jeep. I was standing at attention in front of Suzy and the kids, wearing the shirt pants and the A2 jacket that I'd worn bailing out of Beautiful Betty. \n\nWe exchanged salutes. He was a tall, skinny cowboy. The 45th was an Oklahoma National Guard unit. He said with a panhandle twang, \"Welcome back to the Army Captain.\" I said, \"Glad to be back Sir.\"\n\nOf course, that was the last thing I wanted. It was a little bit of theater, all carefully arranged and rehearsed by Suzy and me to make it easier on the girls. We had gathered them together the night before in the great room and told them that I would have to go away. None of them took it well. But it just crushed Josette. \n\nShe ran to me and threw herself on my chest hugging me and crying. She said through her tears, \"I don't want you to leave me. Just tell the army that you don't want to go Papa.\" How do you explain the realities of life to a sweet little child? Especially one who has seen her parents taken away.\n\nI snuggled her and said soothingly, \"I love you my little one and I would never leave you if I could avoid it. But I don't have a choice. I made a promise and you know that you can never break a promise. I'll be back soon.\" \n\nThat was the best argument I could have used with Josette. She looked at me with tears shining on her beautiful little face, snot running out of her cute little nose and said solemnly, \"But of course, you can never break a promise.\" At age five, my Josette had more personal integrity than most adults.\n\nI glanced over my shoulder at my six girls, King and Bernadette standing loyally next to them, and gave a little wave. It wasn't easy to say goodbye. But it would have been infinitely harder if it weren't for Suzy. \n\nEvery soldier has to know that they have a rock and anchor back home. I needed Suzy's strength to help ease Josette through whatever time we were apart. And I knew that Suzy would take care of my cherished little one if I didn't make it back. \n\nWhen you love somebody, like I loved Suzy and Josette, it's impossible to talk about degrees of affection. They were both absolutely precious to me. They were all returning to Paris, where Suzy's wealth would guarantee the girls a happy life for as long as it took. I knew they would be safe. \n\nI hopped into the back of the jeep and we drove for an hour down the first decent road I'd been on in France. We were going to the 45th's headquarters at Saint-Amour. The Germans were beating a hasty retreat toward Dijon. So, they didn't have time to vandalize any of the towns that they passed through. Hence, the Division CP was in one of the local wineries and it was quite luxurious.\n\nThe 45th's HQ Company processed me and I was told to wait until somebody from Lyon got there to pick me up. As I sat by myself waiting, it occurred to me that I had just dropped into another new life again. But this time I was a whole lot more heartsick than I had when I found myself dangling in that tree or riding into the unknown with a bunch of new recruits. \n\nI had little to tie me to all those past realities. But I couldn't get the faces of Suzy, Josette and all the other little girls out of my head. In some ways it was reassuring. Since, I knew that I had finally found the place where I wanted to spend my life. \n\nMy return to the military was like waking from a pleasant dream into the bleak desolation of nature, red in tooth and claw. And I knew that there was no going back to sleep to dream again. Instead, I was bucked up the line for a couple of weeks to finally find myself at Charleroi as a replacement pilot in the 322nd Bomb Group. \n\nThey gave me a shiny, new Marauder. We didn't need to hide under olive drab anymore. The Luftwaffe had been effectively defeated. So, now we flew aluminum ones. The nose of the plane said, \"Josette.\" I sent her a picture. I hoped she'd be excited. \n\nI was the old man of the crew at almost twenty-three. None of the rest of them had been in combat yet and they were in awe of my history. I arrived just in time to participate in what people later called the Battle of the Bulge. \n\nThe Bulge is in the history books now. But all we knew at the time was that a shitload of panzers were headed in our direction and the weather was so crappy that we couldn't get off the ground to do anything about it. \n\nBetween the 101st's stand at Bastogne and the 82's solidifying the edge of the pocket at Namur, the Huns never got close. And once the weather broke, we bombed and strafed their retreating asses all the way back to the Siegfried Line. Afterwards, there were nothing but long lines of burned-out, smoking German armor on the roads leading east.\n\nThe strikes into Germany in the late winter and spring of '45 were mainly on the V1 and V2 sites. It was low-level and dangerous. But the Marauder was especially suited to do that work, particularly the four blister 50s down on the deck. The strafing left some spectacular explosions. \n\nBy that point, it was like a day at the office for me. It was obvious that the Germans were on their last legs. There was only the rare German fighter, which the P-51s had no problem dispatching. I never saw one of the Hun's new jets. They reserved those for the heavies.\n\nWe celebrated VE day by getting the utterly depressing news that we were being shipped to Okinawa. The Japs were still in the war and we were shifting all of our military resources in that direction. I sent the news of my bitter disappointment to Suzy. She returned words of encouragement. \n\nFortunately, the Army moves glacially slow. The summer of '45 dragged on while they crossed all the logistical \"t\"s and dotted the bureaucratic \"I\"s, that were required to get us more than halfway around the world. Then it was suddenly all over. We knew that it was due to some mysterious bomb. But all we cared about was that it was done.\n\nI had enough points to be in the first batch rotated back to be demobbed. I didn't want to go back to the States just to be discharged. Since my life was over here now. But the Army's, the Army. I was trying to figure out how to get myself to Paris and my girls when I had a couple of visitors and that reshuffled the deck. \n\nIt was the middle of the afternoon in a clammy mid-August in Belgium, almost a year to the date after I had last seen Suzy and Josette. Most of the guys in the squadron killed time either horsing around or playing cards. I spent all my spare time by myself reading. I was trying to decide on a career after I was mustered out.\n\nA squadron clerk banged on the door of my quarters, saluted, and said, \"There are a couple of people at Wing HQ to see you, Major.\" Yes, I had been promoted. It was the consideration that they gave me for being held in Europe past the mandatory 35 missions. I was given a golden oak leaf and they got to continue trying to get me killed. It seemed fair to them.\n\nI followed the guy across the tarmac, with curiosity eating at me. I didn't know anybody with sufficient pull to get me summoned to Wing HQ. So, who the fuck could it be? I spotted two familiar faces as soon as I walked into the building, King and Bernadette. King extended one big paw and said with a grin, \"I have an offer for you.\"\n\n*****\n\nEverybody talks about April in Paris. I never understood why they do that unless they have a fascination with clouds and rain. To me, the best time to be in Paris is the early fall. It was a golden fall day. I was walking up the Rue Guynemer when four figures emerged from the huge wooden doors of a Fin d' Ciel townhouse and rushed across the street dodging the bicyclists as they ran. \n\nThen they all joined hands and made their way up the tree shaded sidewalk. They paused and stepped through the iron fence at the foot of the Rue de Fleurus and into the Luxembourg Gardens. They seemed to be headed for the ice-cream stand just inside the gates. \n\nTwo of them were twins, brown haired and skinny, both approaching womanhood. One of them was a little blond beauty, with natural spunkiness just radiating off her. The fourth was the love of my life. Suzy hadn't changed a bit. She was still the exotically lovely, high spirited, inspirational woman I loved. \n\nI knew from her letters that she had legally adopted the three girls. The parents of the older girls made it back from the death camps. But Edith, Charlotte, and Josette were orphans. So, in the fourteen months that I'd been gone Suzy had made them Milhauds. Money buffers you from most of the vicissitudes of life, and the Milhauds were among the richest families in France. \n\nParis, of course, had been declared an open city. As a result, it avoided the rampant destruction that most of the other major cities of Europe suffered. Hence, once she'd returned to her palatial home Suzy simply picked up life as it had been before the Germans came. Except now, she was the mother of twin girls and my dear little Josette.\n\nThe four of them were sitting on an ornate bench, under the spreading branches of one of the oaks that tower over the path leading to the central fountain. I came around the corner and started up that path. They were eating ice cream and laughing. Suzy seemed happy and content in the bright September sun.\n\nJosette spotted me first. She always had an adult's situational awareness. I'd learned that the day she'd saved us at that French farm. Josette glanced my way, then she stared unbelieving. She dropped her ice cream, let out a blood curdling shriek of joy and rocketed down the path. \n\nMy little girl had grown a bit in the fourteen months that I'd been away. So, she nearly knocked me over when she threw herself into my arms, frantically planting kisses all over my face. I hugged her and said, \"I'm home my darling girl.\" She said, \"I love you Papa.\" \n\nSuzy and the twins arrived a scant few seconds later. I'd shifted Josette to my right arm so Suzy could come into the other. But instead, Suzy shoved the twins under that arm. I got her point. They were also our children. I needed to remember that. Suzy had a lot to teach me.\n\nThe twins leaned their sweet little heads against my side and hugged me shyly while making small noises of happiness. They might not be as cosmically brilliant as Josette. But they were sweet humble and unassuming little girls, the very essence of salt-of-the-earth. I loved them too.\n\nSuzy gave me a kiss over the top of the twins. It made them blush and Josette say, \"Ewwww.\" Suzy's huge dark eyes were sparkling with love and something else. She said teasingly, \"Bernadette already told me. Apparently, they're letting you out of the Army early for bad behavior.\" \n\nI said, \"Yes, they're forming this new outfit out of the old OSS called the Central Intelligence Agency. King got me a job with them. He said I had the right stuff to join their merry band.\" \n\nSuzy hooked her arm in mine as we turned and walked back toward her townhouse. She said with a sly grin, \"We have a lot of catching up to do.\" I didn't think she was planning to do much talking though. \n\n*****\n\nWe were married the next day. There is supposed to be a ten-day waiting period after the banns are published. But this was 1945 Paris and Suzy was a Milhaud. So, what Suzy wanted, Suzy got, which was the Mayor himself to do the officiating.\n\nThe Paris H\u00f4tel de Ville is right on the Seine in the Forth Arronddisement. It was another gorgeous fall day, perfectly clear blue sky and mild. But it could have been the middle of a Midwest blizzard for all I cared. I was the happiest man in the universe.\n\nThe wedding party made its way across the plaza toward the massive Renaissance confection that the Parisians call a City Hall, with the medieval splendor of Notre Dame hovering across the river to our right. It was clear that this boy wasn't in Wisconsin any more. \n\nThe wedding party was small. Suzy's parents weren't invited, by her choice. Apparently, they didn't approve of their daughter's free-thinking ways. Mine were on another continent. They would get the word in about a week. \n\nMy best man was actually a seven-year-old girl. But she was very brave. Suzy's two attendants were walking hand-in-hand looking awkward and uncomfortable in their fancy dresses. Their dark hair was in braids with bright ribbons and their skinny little legs ended in fine leather shoes. \n\nKing and Bernadette were waiting at the Mayor's Office. King was serving as my co-Best Man since somebody had to bring the ring. Bernadette and Suzy had bonded to the point where they were more like sisters than friends. \n\nWe made-up a very odd wedding party, a Marchioness and one of the hereditarily richest women in France on one side of the aisle, a former bar manager and a Wisconsin shitkicker on the other. In many ways it symbolized the shape of the new world going forward. \n\nWhen the Mayor got to the part in the ceremony where the officiant asks, \"Who gives this woman?\" a couple of little voices said, \"We do.\" They were holding each other's hands as they said it. \n\nThe Mayor turned to me and said, \"The ring monsieur.\" Josette was sitting on one of King's huge arms now, looking for all the world like a bird on a tree limb. She leaned over, kissed me gently on the cheek, and handed me the ring. \n\nAn AAF Major makes a reasonable salary in this man's army. I had been saving my flight pay to buy something that would express my love. Suzy was rich enough to buy the mine that the diamond came out of. So, the ring wasn't ostentatious. Instead, it was a simple shining expression of my love. \n\nKing had been in Paris a long time. So, he knew a guy, who knew a guy, who knew a guy, who was a master craftsman. It was made like a woman's Renaissance love ring. The diamond was set in an intricately filigreed band containing all of our names interwoven in gold, even Natalie and Madelyn. The base of the setting said, \"Eternal love,\" which was a statement of indisputable fact. \n\nThe Mayor said, \"You may kiss the bride.\" I looked at Suzy's beautiful face and for a second, I had a flashback to the terrified woman I'd found hiding in an armoire a mere year and a half earlier. I said a little prayer of thanks to whoever was looking out for me and we had a chaste kiss. There was a lifetime of making love in front of us.\n\nEPILOGUE\n\nLife's funny. You just live it when you're a kid. It never occurs to you that those experiences are preserved in the synapses of your brain, like the exhibits in a museum. As you get older though, you'll sometimes find yourself browsing the displays and thinking about what it all means. \n\nThere'll be a few unhappy memories; a pretty girl who stabbed you in the back, the terror of exploding flak, or the rage you felt when you discovered just how dark the human heart can be. But if you're lucky, the bulk of those recollections will evoke a happy nostalgia, the feeling that you led a rewarding life. \n\nMy happiness sat squarely on the foundation of a good woman. Hence, I marked the beginning of who I was, as the day I literally dropped into Suzy's world. Even in our golden years, there are still no words to describe how much we loved each other. Of course, words aren't required, it's the innate recognition of that fact. Suzy was always at the center of my mind's eye, and I in hers. That knowledge was one of life's great joys. \n\nBut there are also the small pleasures that we use to measure out the days of your lives. For instance, there was the delight of giving sweet little Edith and her sister Charlotte away to another set of twin boys. It was a perfect pairing of unassuming souls. The girls' spouses owned a vineyard. They were unpretentious, hardworking, and honorable men, just as modest and decent as my girls. I couldn't tell any of them apart.\n\nHumility and hard work had been the twins' trademark, from the time that I first met them. And both of them were blushing furiously as I led them up the aisle. When we got to the minister, they kissed me shyly on each cheek and said, \"Thank you Papa.\" It brought a tear to my eye. \n\nFinally, of course, there was my bright shining star. I counted Josette's love as chief among my many blessings. Most daddies have a pal. Josette was more like a partner in crime. Of course, she loved Suzy. But I was her guiding light. No daddy and daughter have ever been closer. \n\nJosette had grown into a remarkable young woman, with a captivating beauty that was godgiven. Her fluffy blond hair was a thick wheaten sheaf now, it ran down to the middle of her back. Her face had retained its ideal proportions and perfect features and years of dance training had honed her into a sleek, athletic woman.\n\nJosette was just as adventurous as I was at age twenty-three. But she was the new and improved version, smarter and more practical. She had a long-term view of life. And she was not going to compromise her principles simply to do what the other girls were doing. If she fell in love, all the better. But first and foremost, Josette was committed to making a difference. \n\nMy daughter was born an old soul. From the beginning, she was a bundle of worldly-wise awareness and shrewd intelligence wrapped in a little girl's body. It was as if she started out life as an adult. Whether that was due to her innate intellect, or a trick of her upbringing, or an arcane combination of both, Josette was always more cognizant than any child ought to be.\n\nAs for me - I'd spent the first few years after the war scooping up the former assets of the Third Reich. Those ex-Nazis all claimed to have seen the light. Nobody believed them. But we were willing to overlook any past indiscretions if they had something that we wanted, particularly if it gave us a leg up on the Russians. \n\nThe raw hypocrisy of Operation Paperclip was astonishing. Seeing the likes of Von Braun and his associates skate off to wealth and fame as founders of the U.S space program bothered me. Since, I could clearly recall risking my life in a frantic attempt to eradicate Werner's little pets before they rained down on London. \n\nThe same with Gehlen and his spy network. That snake profitably transitioned from finding and eliminating enemies of the Reich, to digging up and disposing of Commies. I know that realpolitik demands a blind eye. But my wife and three daughters were Jewish, and his network was mostly SS. \n\nI finally decided that my soul was too high a price to pay to keep doing what I was doing. Suzy's wealth gave us the freedom to pursue any other worthwhile cause. So, together my love and I made a life decision. My wife was Jewish but secular, and I was a card carrying heathen. Hence, the choice wasn't based on religion. It was strictly motivated by the desire to be part of something new, vibrant, and fresh. \n\nAccordingly, we emigrated to the emerging Jewish state of Israel. Suzy was a Milhaud. She had the historic family credentials, and the Israelis were willing to tolerate the likes of me. \n\nWe kept the Paris townhouse. But now, our permanent residence was a penthouse duplex in the Park Tzameret area of Tel Aviv. It was luxurious. The Mediterranean lay outside our floor-to-ceiling windows and a golden beach was a short walk across Independence Park. English wasn't a problem, since half the population seemed to come from Chicago. \n\nJosette had just turned eighteen when we emigrated. So, she had mandatory national service just like every other Jewish kid. The fact that Josette could do aerobatics in a P-51 didn't cut any ice with the Israeli Air Force - being that she was a woman and all. So, my darling girl opted for her papa's other skillset - the Mossad. \n\nA guy named King might have had something to do with my daughter's extraordinary placement. By then, he was the Director of the CIA's. Clandestine Service. So, King told Isser Harel that he had seen Josette in action, and in his opinion, Mossad needed somebody like her. King didn't bother to mention that Josette was only five at the time. ",
        "Josette spent the next few years honing her tradecraft in preparation for becoming part of our family business. Just as a note - it wasn't a delicatessen. Our new line of work was along the lines of bringing to justice some of the worst human beings to have ever roamed the earth. \n\nIn some ways it was a logical next step. I had a wealth of contacts in the intelligence community and Suzy had the determination, drive, and the money to create and run an organization. Then there was Josette. By age twenty-three my dear little tiger cub had developed into a full-blown apex predator. She was expert in covert surveillance, and she had an instructor's black belt in Krav Maga, which is the Jewish science of street fighting. As a field agent, Josette was the consummate Nazi hunter.\n\nOur special project was Klaus Barbie, commonly known as, \"The Butcher of Lyon.\" The nickname should give you some idea what kind of psychopath Barbie was. More importantly, he was the fellow who had led the raid on Izieu. Suzy, Josette, and I wanted nothing more than to find the man and see him hang.\n\nThe French had sentenced Barbie to death in absentia. But to my eternal shame, the U.S. had let him scuttle down one of its ratlines right after the war. The price of Barbie providing us valuable intel, was for us to ship him to a nice anonymous place. There he could await his next destination, which was hell.\n\nWe discovered where Barbie'd landed in 1962. It was thanks to sheer persistence on my part. I had learned in my boyhood, way back in Wisconsin, that the essence of good hunting is to regularly check your traps. So, I routinely, if not a bit obsessively, met with my old CIA, MI-6, and Israeli Shin Bet contacts. \n\nIn this case, the cost of the information was a good meal at the Rattlesnake Club, which is in Munich by-the-way, not Houston. My contacts all knew about my little business and they'd seen the handiwork of creatures like Barbie. So, they sympathized with my goals. Plus, my dinner companion was with the Israeli Shin Bet. So, he had a dog in the fight.\n\nIt seems that the Shin Bet had been paying a guy in the West German Bundesnachrichtendienst. Well, perhaps the proper term is \"blackmailing.\" But not to put too fine a point on things, the Shin Bet was looking at everything that their asset could tell them about the mass roundup of Dutch Jews and Freemasons in 1940. That little project marked one of Adolph Eichmann's earliest \"successes.\" \n\nThe Shin Bet and their Mossad counterparts had just recently acquired Eichmann, in the dark-of-night, and somewhat unwillingly, from his residence in Buenos Aires and then smuggled him out of Argentina in the diplomatic equivalent of a burlap bag. Once they had Eichmann back in Israel, they were building the case for his inevitable hanging. \n\nOne of the asset's anonymous sources was a man named Altmann. Altmann was a typical former Nazi functionaries who \"knew nothing\" after the war. But he had ostensibly worked for Eichmann. The item that piqued my interest was that Altmann knew things that only Barbie would know. \n\nThe problem was that the man who called himself Altmann was presently residing in Cochabamba Bolivia. And of course, he insisted that he had never heard of this \"Barbie\" fellow. The only way to pry him out of the hands of the Bolivians' was to prove who he actually was. Unfortunately for him, there were two eye-witnesses and they were willing to travel. \n\n*****\n\nThe balding fifty-two year old man took his customary seat at the table in the coffee shop on the Avenue de Libertador Simon Bolivar. He looked out over the vista of the beautiful University district. It was the customary bright, clear Andean day in Cochabamba as he sipped his first cup. The sun burns very hot at almost 9,000 feet above sea level.\n\nTwo gorgeous women, obviously tourists, sat down at the table next to him. The oldest was an exquisitely feminine woman in her early forties. She was, beautiful, and obviously very wealthy. The youngest was a stunning blond in her early twenties. She was no-doubt the older woman's daughter.\n\nBarbie surreptitiously checked out both women. He had never seen such perfection. The older one was small, but she had an ideal feminine shape, a delightfully proportioned little lady. The younger one was bigger and stronger. She had the body of a movie star and she moved with the superb pantherish grace of a natural athlete. That one was dangerously feral.\n\nBarbie had just gone back to reading his copy of that morning's La Razon when the daughter, without warning, turned and stared directly at him. Her eyes were so deep blue they were almost lapis-lazuli. She said in French, \"You look familiar Monsieur. Have I met you before?\"\n\nBarbie was irritated. He replied in French, \"I don't believe so. I have lived in Cochabamba for a long time.\" He had spent most of it torturing the Bolivian Dictator Hugo Banzer's political enemies and building up the cocaine trade with Pablo Escobar - all-in-all ... good times. \n\nThe older of the two women looked at him amused. It was like she was a cat playing with a mouse. She said, \"No! I'm absolutely certain I've seen you someplace before.\"\n\nBarbie was getting annoyed with these two foolish women. He said, anger creeping into his voice, \"I've never met you before in my life Madame. Now please leave me alone.\" Then he turned back to his paper in a huff.\n\nThe older woman got an oddly beatific look, it was like she had achieved some sort of personal life goal. She turned to her gorgeous daughter and said, just loud enough for Barbie to hear, \"Don't you remember Josette? He was the leader of the Gestapo unit that raided Izieu We watched him take away our friends in trucks.!!\"\n\nJosette said, contempt in her voice, \"That's right Mama. I believe his name is Barbie. He hasn't changed a bit.\" Then she gave a vicious laugh and added mockingly, \"I'll bet a lot of people would like to know where this guy's been hiding out.\"\n\nKlaus Barbie died in a French jail on September 25th, 1991. The children of Izieu were avenged."
    ],
    "authorname": "dtiverson",
    "tags": [
        "the importance of family",
        "beautiful french woman",
        "betrayal",
        "nazi germany",
        "revenge",
        "world war two"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-baltimore-bitch"
}