{
    "title": "Jason's Story Ch. 10",
    "pages": [
        "Hello again!\n\nThis chapter was almost ready when I posted the last one, but I warn you that it will be the last one for at least a month. Thank you so much to my faithful readers, and my visiting readers and I hope you won't be too upset with the wait. In the meantime, enjoy!\n\nKitty\n\n*\n\n\"Kane, call Bria and have her call Brett. Something's wrong with Nigha and I need him to meet me at the hospital. Man, I don't know. Just do it!\"\n\nKane could hear the panic in his brother's voice and did as he asked.\n\nAs he carried Nigha out of the building, her forehead was resting against his cheek and he realized that she was burning up. Her lips were a deep burgundy color and it was a color that he'd thought was a new shade of lipstick.\n\n\"C'mon baby, I need you to open your eyes\" he pleaded with her as he rushed out into the parking lot.\n\nJason finally got to his car in the parking lot and hit the little button on the keypad to unlock the door. He gently placed her in the passenger seat and strapped her in. He ran to the other side and barely shut the door before he stomped the gas pedal.\n\nNigha was still out when he reached the hospital, so he scooped her up and walked inside yelling for help. Her skin looked dry and had a purple undertone to it. Jason was convinced that she was close to death, but he prayed that she'd be alright.\n\nTwo nurses ran to assist him with a gurney as he briefed them on what she'd looked like that day.\n\n\"Don't worry Mr. Branson, we'll take care of your wife\" one of the nurses said to him.\n\n\"She's not my wife...she's my best friend!\" he called out to them as they quickly rolled Nigha away.\n\nJason sat alone in the waiting area beside the nurse's station with his head in his hands.\n\n\"God, I know we don't talk much, but if you make sure she's alright I swear I'll leave her alone. It'll be hard to live without her, but I don't think I'd make it in this world if she wasn't somewhere in it.\"\n\nAfter about 10 minutes of his quiet conversation with God, he noticed a man walk in. Jason knew who he was instantly because he wore the same frantic expression.\n\n\"My wife was just brought in and I was told that she was unconscious. Please tell me that she's alright\" Brett pleaded with the nurse at the desk.\n\nJason walked up to the man to introduce himself.\n\n\"Brett? Hi, I'm Jason; the one who brought Nigha in.\"\n\nBrett looked at the young man standing before him and felt a mix of emotions. Wonder; at why Nigha had never introduced them, even though she thought so much of Jason: surprise; at how much his eyes said that Jason was just as worried about his wife as he was, and gratitude at the fact that Jason had brought Nigha in and had the presence of mind to have someone contact him.\n\n\"Jason, I've heard so much about you\" he said as he shook the young man's hand. \"It sucks that we're meeting under these circumstances.\"\n\nJason nodded his head in agreement as he studied his nemesis. This was the moment he'd been trying to avoid. Deep down he felt that Brett would be someone that he would like, and his first impression of the man seemed to confirm that.\n\n\"What happened to her? Is she alright? How did you find her?\" Brett's questions came in rapid succession.\n\n\"I saw her earlier today and she had a dizzy spell, but insisted that she was alright and I should stop worrying about her.\"\n\n\"That's my Nigha; not wanting to be fussed over.\"\n\nBrett's words cut through Jason like a knife. Although he was right, it made Jason's stomach turn to hear her referred to as anyone else's but his own.\n\n\"She had a meeting with Jack for about an hour, and I was on my way out when she came back to her office. I popped in to walk her to her car since we were the only ones still in the building when she fainted.\"\n\n\"Did she fall?\"\n\n\"No, I was close enough to catch her. I called out to her, but she didn't come around. Since she'd been dizzy earlier, I panicked and called my brother so that he could have Bria call you. Her forehead touched my face when I carried her out and she's burning up.\"\n\n\"I'm so glad that you were there. It kills me to think that she could've been alone when this happened. Thanks for having Bria contact me.\"\n\n\"I didn't know your number, and Nigha sure couldn't tell me. Since my brother is dating Bria, he was my first and only call. You needed to be here.\"\n\nBria and Kane walked in through the automated doors as one of the nurses that had helped Jason walked up to him.\n\n\"Excuse me sir, but we have an update on your wife's condition.\"\n\nBrett looked at the nurse and Jason with a raised eyebrow. Bria and Kane stopped dead in their tracks as they watched the scene unfold.\n\n\"No, she's my co-worker and friend; this is her husband. You guys were so fast; you didn't hear me when I said it before.\"\n\n\"I'm sorry, my mistake. Sir, could you come with me please?\"\n\nAs Brett started to walk away with the nurse, Jason put a hand on his shoulder to stop him. \n\n\"Could you please come back and tell me how she is? I just need to know that she's going to be alright.\"\n\nBrett saw the concern in Jason's face and realized how the nurse had assumed that he was Nigha's husband. Jason was clearly in-love with his wife.\n\n\"Sure man, it's the least I can do\" he said as he walked away. Bria followed him while Kane stayed behind to console his obviously frazzled brother.\n\n\"Man, you look a mess. Are you alright?\"\n\n\"I'm fine, but she's not. She's been looking like she's coming down with something all day. I was so angry with her...\"\n\n\"About what?\"\n\n\"Today I found out that I'm getting a promotion and before you tell me how great that is; she knew ahead of time. She made sure I'd be moving to Atlanta.\"\n\n\"She's trying to do the right thing man.\"\n\n\"Don't you think I know that? I know why she did it, but that doesn't make the sting any better. Now I don't even know...\"\n\nKane put his hand on his brother's shoulder, interrupting the statement he knew was coming. \"She's going to be fine; don't think like that.\"\n\n\"I made a deal with God\" Jason said looking straight ahead. \"If he makes sure she's alright, I'll let her go.\"\n\nJason and Kane sat alone in the waiting area, silent, for what seemed like an eternity, but was actually about 30 minutes. Jason had tried to keep his cool, but he looked a frazzled mess. He had his face in his hands when he felt a hand on his shoulder. \n\n\"Jason? She's going to be fine. The doctor's said that she's had pneumonia for a few days, and she became severely dehydrated and her body just gave out. He also said that it was a good thing that you were there when she fainted, because without fluids and the proper care, it would've been a lot worse. Would you like to see her?\"\n\n\"No, I know you want to be with her and I don't want to intrude on your time.\"\n\n\"Nonsense! If it weren't for you, I might not have anymore time with her. The doctor didn't come right out and say it, but if you hadn't been there, she might've died. Come on, I'll take you back.\"\n\nKane motioned for his brother to go with Brett, and Jason reluctantly followed him to one of the rooms down the hall. Brett told him to go on in while he called the boys and told them everything was going to be fine.\n\nJason walked in, and to his surprise, Nigha was awake and talking to Bria.\n\n\"I'm gonna go and Nigh, I'll stop by tomorrow and see you since you're obviously not going anywhere\" Bria said with a wink.\n\n\"Hey you! Brett told me that you brought me in. He went on and on about it. He thinks you saved my life.\"\n\n\"It's not that big a deal, I was just looking out for my friend who seemed to need some help. How long do you have to stay here?\" he asked as he took a seat by her bed.\n\nHe held her hand in his while she spoke.\n\n\"They're going to keep me for at least two days after my fever breaks for observation, and Monday I have to go and see my doctor.\"\n\n\"That's not so bad. You probably need the rest anyway, you're carting around some serious luggage under those gorgeous eyes of yours!\" he said with a laugh.\n\nShe playfully hit him on the arm when Brett walked up to the door. He was about to walk in, when he decided to just watch them through the window in the door.\n\n\"JACKASS!\" She yelled while hitting him. \"That's the last thing a girl needs to hear while she's laid up in a hospital bed!\"\n\nThey were both laughing when she started to cough. He held her hand in his and placed his other hand on top of it.\n\n\"I'm glad you're going to be OK. I'm gonna go so you can be with your husband and get some rest.\"\n\nJason stood up, leaned over, kissed her on the forehead, and whispered \"I love you.\"\n\nHe kissed her hand and placed it at her side. He was turning to leave when Brett walked in.\n\n\"Jason, it was nice to finally meet you. I know Nigha thinks very highly of you, and now you're pretty high on my list too.\"\n\n\"Likewise. Take care of her man\" he said as he shook Brett's hand again and looked over at Nigha; \"she's one of my best friends.\"\n\nWith that he walked out of the room and left his Nigha and her husband alone. Suddenly, a move seemed like it was going to be good for all of them.\n\n\"Nigha, what's the deal with Jason? He sure was worried about you.\"\n\n\"He's a really good friend Brett. He's a great guy, and I care a lot about him.\"\n\n\"He cares a lot about you too; maybe a little too much.\"\n\n\"Baby, what are you talking about?\"\n\nChoosing his next words carefully, he decided to keep his opinions of Jason's feelings toward his wife to himself. Now wasn't the time to upset her.\n\n\"It's just that he was so frantic with worry when I got here. He was just as worried as I was. The nurse even thought he was your husband!\"\n\n\"Not the last time I checked\" she said with a laugh.\n\nHe laughed with her, assured that even if Jason was in love with his wife, it really didn't matter. It may have even saved her life.\n\nJason returned to the waiting room where Bria and Kane were waiting for him. Bria surprised him with a hug.\n\n\"I'm so glad you were there when this happened. Thank you for having the presence of mind to have Kane get in touch with me. You're a Godsend\" she said while holding him tight.\n\n\"I'm no Godsend, I'm just a man who was in the right place at the right time. I had Kane call you because it was the right thing to do, and I've been lacking in that area lately. At any rate you're welcome. I did it because I love her.\"\n\n\"I know you do\" Bria said as she let him go and took a step back.\n\nIt was then he saw her for the first time. She had tears running down her face and he reached up and wiped one away as it fell down her cheek. He didn't know how he had missed it, but she was a dead ringer for his love.\n\nAs Jason stood smiling at Bria, Kane walked up and put his arm around Jason's shoulder.\n\n\"She's gonna be fine bro, ain't that right baby?\" he said looking to Bria for confirmation.\n\nBria nodded and took Jason's hand. \"I know you love her; it probably saved her life. You know that you have to let her go.\"\n\n\"I know and I'm going to.\"\n\nKane broke the tension, \"Speaking of going, why don't we get out of here? Brett will keep us posted on any changes.\"\n\nNigha was released three days later and confirmed her doctor's appointment for Monday morning.\n\n********* She decided to call in for Monday and Tuesday. When the receptionist told her that Jason had already told them she'd be out sick for a few days, she wasn't surprised.\n\n\"Mrs. Stevens, I'm glad to see you're doing better.\"\n\n\"Thanks Dr. Jonas, have you figured out how I got so sick?\"\n\n\"Well, the pneumonia was what made you so tired and dizzy. I'm still concerned that there may be some underlying cause and we're going to run some tests.\"\n\n\"Is there reason to be so concerned?\"\n\n\"Ms. Stevens, you're in excellent health and physical condition. I don't foresee any real problems, but I want to check any and everything to make sure. Do you have any family history of...\"\n\nNigha left the doctor's office with more questions than answers, but she would find out the results of all of the tests in two weeks. She followed doctor's orders to not return to work for a week.\n\n********************\n\nJason was a wreck at work waiting to hear about how she was doing. He'd found out from Jack's receptionist that Nigha wouldn't be returning to work for a week. That fact made his worries worse, but he powered through his emotions and focused on his work.\n\nShe was scheduled to return during his last week before the transfer for his promotion. Bria called him to let him know that she was feeling much better, but her fever kept returning. Bria's update eased his mind a little, but his heart was still in pain. The rest of his life; a life without her as an everyday fixture, was fast approaching.\n\nNigha had no signs of the fever for two full days, and made up her mind that she'd be returning to work as scheduled. When she arrived, she went straight to her office and noticed the small box immediately.\n\nShe walked over to her desk and sat down in the familiar surroundings, focusing her attention on the box. She smiled when she saw the familiar \"Celine's Patisserie\" on the box, and smelled the aroma of one of her favorite things.\n\n\"Petit pain au chocolat\" she said aloud with a smile. She shook her head and said \"Oh Jason, I'm going to miss you.\"\n\nHaving eaten very little over the past week, she practically inhaled the pastry and accompanying latte. She expected Jason to come into her office at anytime, but he hadn't so much as walked by her door. This is how it would be after he was gone.\n\nEven though she still felt a little weak, she made it through the day with little incident. Brett, Bria, and Jack had flowers sent to the office, and someone who didn't write a name on the card; sent a single calla lily in a vase.\n\nShe had closed her eyes, and leaned her head back against her chair. After a few seconds, a familiar scent filled the room. She smiled.\n\n\"Hello.\"\n\n\"Hi. I heard you were back and wanted to check in on you. Are you really alright?\"\n\n\"Jase, I'm fine. The doctors gave me a clean bill of health. Thanks again for taking me to the hospital, the petit pain au chocolat, and the lily.\"\n\n\"You take care of the ones you love.\"\n\n\"Well, I guess you do. Brett wanted me to thank you again for him. He went on and on about how you were like my guardian angel.\"\n\n\"I'm just glad that I was in the right place at the right time. I would die if something happened to you.\"\n\nWith those last words, she opened her eyes and looked into his as he spoke. The look she saw there let her know that even though he wouldn't physically, a part of him would've died if she had.\n\nThe thought of the torment he was going through made her feel sick to her stomach. Sure that her mystery illness was trying to make another appearance, she fought the urge to vomit while he was still in her office.\n\n\"Nigha, I just want you to know that after I leave; I fully intend to let you go. I wanted you to know that I do respect you, love you, and I'll miss you with all of my heart.\"\n\nHer emotions started to get the best of her, and he started to make his way over to where she sat.\n\n\"I'm going to make sure that this is the last time we're alone together, so do you think you could give your young friend a hug?\"\n\nShe smiled at his play on words and nodded her head. She stood to face him, and felt that feeling in the pit of her stomach that let her know that part of her would never be through with him.\n\nHe looked into her face and gently wiped away the few tears that had streamed down. He wrapped an arm around her waist and pulled her body into his, holding her there and taking in the scent of her hair.\n\nShe'd always felt so right in his arms, and she knew he felt the same way. She'd wrapped her arms around him, and was running her hands up and down his back. She could feel his heart beating in time with her own and wondered how something so wrong could feel so right.\n\nAfter getting caught up in the moment, he let her go and took a step back. He looked into her face once more, but before he could walk away, an intense feeling stopped him.\n\n\"Awwhh, fuck it!\"\n\nWith that, he grabbed her and kissed her. They both wanted it, and knew that the other felt the same way. This kiss was better than all of their others; a kiss of star-crossed lovers who's time was up. This kiss was goodbye.\n\nWhen they stopped kissing, he held her once more.\n\n\"I love you Nigha, I'll never love anyone else. I just wanted you to know.\"\n\n\"I love you too Jason, but I want you to find true happiness. I believe someday; you will.\"\n\n\"That makes one of us\" he said with a little laugh as he broke away from her once more.\n\n\"Goodbye Nigha Stevens\" he said as he kissed her hand.\n\n\"Goodbye Jason Branson.\" \n\n**********\n\nFour days later, they threw a \"Goodbye\" party for Jason. He got hugs and handshakes from everyone, and it didn't go unnoticed when he held Nigha quite a bit longer than all the other ladies.\n\nNigha gave him a quick kiss on the cheek; which wasn't an uncommon thing, but when Jason closed his eyes at the contact, the whispers began. \n\nNeither of them cared.\n\nThe remainder of the week flew by, and before they knew it; it was Jason's last day. Nigha had taken a late lunch, and when she got back there was no sign of him. She was saddened that she didn't get a final chance to say goodbye, but quickly decided that it was probably for the best.\n\nShe would be working late and that was for the best too, because she didn't want to seem too sad about Jason's departure when she got home. Brett was already full of questions about their friendship as it was.\n\nHer thoughts were consumed with her Jason and being without him. She needed to get her mind off of things for a few minutes and cranked up her CD player.\n\nSince she was the only one on the floor, she wasn't concerned with disturbing anyone else. She stood up and started to dance around her office unaware that she wasn't alone.\n\nShe closed her eyes and went back to the night that she learned about Jason's skill as a dancer. The night she learned that he'd taken ballroom dancing lessons; just like she had. The night he'd surprised her with a Tango that took her breath away, and had everyone in the club applauding.\n\nThe night of his thirtieth birthday; the night her love for him was written in stone.\n\nShe was so caught up in her memory, she could even smell him.\n\n\"Mmmnnhh Jason\" she said aloud.\n\n\"Yes?\"\n\nHer eyes popped open, and focused on him leaning against the closed door to her office.\n\n\"Jesus Jason! You scared me half to death! How long have you been standing there?\"\n\nShe couldn't take her eyes off of him. He was dressed in a close-fitting, t-shirt, long denim shorts, and black Nike Shox. He was just as sexy as ever.\n\n\"About five minutes or so; I left earlier and decided that if I came back after everyone had left for the day, it would be a little easier on me. I didn't know you'd be here.\"\n\n\"You were trying to avoid me?\"\n\n\"Of course I was, seeing you makes the pain worse. I know you feel it too\" he said as he started walking toward her.\n\nShe knew what was coming and felt powerless to stop it.\n\n\"Doesn't it make you feel sick every time you see me; knowing that it could be your last?\"\n\nHe had pushed her against her desk and put his cheek against the side of her forehead as he spoke.\n\n\"You wish it didn't have to be this way, but you know that there's no alternative.\"\n\nHis words were exactly what she was feeling. His hands had started to run over her thighs and hips; her breath caught in her throat.\n\n\"You want to do the right thing and turn and walk away, but your heart won't let you\" he said as he slowly kissed her neck while unbuttoning her blouse.\n\n\"You remember what you were brought up to believe about how there's someone for everyone and you've just got to be patient until you find yours\" he started to pull her skirt up over her hips, and slowly pulled her g-string down and off her feet.",
        "\"How you just don't mess with another man's wife; but none of that matters when you're leaving the one you love tomorrow, and all you have is tonight.\"\n\nHe kissed her while unbuttoning his shorts, freeing his hard cock, and reveling in the feel of his skin against hers.\n\nShe moaned in delight, never trying to tell him to stop. It would've been pointless anyway; she wanted this as much as he did.\n\nHe lifted one of her legs, and she wrapped it around him leaving the other to support her. He ran his cock up and down her moist slit and paused before sliding it in.\n\n\"Baby, I'm sorry; I had to have you one last time. Please forgive me\", he said as he slid his cock into her dripping pussy.\n\n\"Oohh Jason!\" she let out in a low groan at the sensation of him filling her again.\n\nShe ran her hands all over his abs and chest; then pulled his t-shirt up to his chest. He took the hint and pulled it off.\n\nHe was content with her open shirt, and was mesmerized with how much larger her breasts looked as they bounced to his rhythm. He reached out and ran his fingers over them and marveled at how soft they felt; softer than before.\n\nIt was the first time they'd been together in over two months, and she was surprised at how much she missed it. She missed him, and knew that this time would have to last the rest of her life. He was definitely making it memorable.\n\nHe started with a slow, steady pace. Rolling his hips as he thrust into her; moaning almost as loudly as she was.\n\nHe studied her face; more beautiful than he'd remembered, etching it into memory. Her hair was sleek, shiny, and smelled the way it always did. He never figured life could be so beautiful and cruel in the same moment.\n\nHer eyes were closed and her head was thrown back as he made love to her; slowly, deliberately, exquisitely. This mistaken love affair, however unplanned, was the most exciting and tragic thing she'd ever experienced.\n\nHe leaned over and kissed her neck, and she ran her fingers through his hair. He reached behind her head, grabbed a handful of her hair and pulled.\n\n\"This may be the last time that I'm inside you, but I'll always be inside here...and here\" he said as he pointed to her temple and her heart. \n\n\"And you'll always be in here...and here\" he said as he took her hand and pointed it at his temple and pressed it to his chest over his heart.\n\nShe studied his face, still amazed by how much his eyes revealed his feelings. She saw the love and lust for her, and the pain behind it. Her heart ached for him.\n\nThey made love for hours; more than the three that she was supposed to be working late. \n\nEven though it was dirty office sex, it was the tenderest sexual experience they'd shared. It was a fitting end to their relationship.\n\nAfter he'd made her cum more than a handful of times, he came deep inside her one last time; reveling in the blissful expression on her face.\n\n\"Damn it woman, I love you\" he whispered in her ear. \n\nShe brought her head upright, opened her eyes and looked into his.\n\n\"God help me Jason, I love you too\" she said as she hugged him.\n\nHe wrapped his arms around her waist and held her tight as he softened inside her. "
    ],
    "authorname": "EroticLitKitty",
    "tags": [
        "black woman",
        "white man",
        "older woman",
        "younger man",
        "married woman",
        "single man",
        "interracial love",
        "obsession",
        "interracial romance",
        "black milf"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/jasons-story-ch-10"
}