{
    "title": "Pledging Tau Geta Delta Pt. 05",
    "pages": [
        "The morning light made me shift in bed. It was that nasty little crack of light from right between the curtains that had to hit you right in the eyes. I always hated when that happened, and yet every night I would forget to fix the shades so it wouldn't happen again.\n\nToday I just decided to move out of the way, at least that was the plan until I realized I was pressed up against someone. After a week of shocking mornings, I barely even flinched this time. I suppose I'd gotten used to having breasts, and this wasn't even the first time I'd woken up naked and rubbing against someone. It probably didn't hurt that the back I was squishing my boobs into belonged to my friend Max or that we'd just shared an evening of ravenous sex before collapsing together in bed.\n\nI turned my head to get the light out of my eyes and snuggled up to him a bit more. It was always nice to snuggle up with someone the morning after a good fucking. I'd loved it as a guy, and I felt much the same way now. Now, I just basked in the feeling of warm closeness as I decided whether to drift back to sleep or start towards getting up.\n\nThe strange thing was thinking about Max. I'd gotten used to thinking as my girl self, and using the memories of my life as Alison over the last few days. It had been disconcerting at first after the fraternity spell turned me into a girl. My head was filled with two sets of memories, those of my old male self and the ones from me new feminine self. They were from the life I could have had as a girl, but the freaky part was just how complete they were. I could remember the tiniest detail from my childhood or experiences that only a girl had growing up.\n\nIt was pretty weird if I thought about it, but when I relaxed, I was just Alison and all those memories were just natural. So this morning as I felt Max breathing next to me, the whole notion of being naked in bed with a guy was as normal a thing as could be. The trouble was sorting through all the feelings.\n\nThe sex had been great, amazing even. As Alison, I'd been attracted to Max from the day we met in a chemistry lab during our freshman year. Since then we'd become good friends, but one of us was always in a relationship with someone else. If I was single, he wasn't or the opposite. That didn't cut into our friendship though, and we hung out as often as our studies and other commitments allowed.\n\nAs a guy, we'd been friends for just as long, having met in that same lab. I'd been straight before all this, and the notion of sleeping with guys at all, much less Max, was just not something I wasn't interested in. I hadn't even liked thinking about it. Since I'd become a girl that was completely turned on its head. Not only did I have the anatomy, I had the desires of a normal woman, and the memories of having been one.\n\nThat mix of feelings was just swirling up in me now. I'd slept with Max. As Alison, I reveled in it, as a long denied desire had been satisfied, and I couldn't deny just how well Max had fulfilled every fantasy. My guy self had come to grips with how good getting fucked by a big hard cock could feel, but I still felt a bit queasy at having chosen Max. At this point, I wasn't sure if I hadn't picked him because of Alison's feelings more than anything else.\n\nHow could I look at him the same way after he pushed me from one raging orgasm to another? Could I even let myself admit how wonderful it had been, not just the physical sensations, but the way being so close to him had filled me with joy? I wasn't sure there was a way to answer either of those questions, not now that I was draping my arm over his waist and had my hand over his firm chest.\n\nI realized at that point that there was simply no hope of me getting any more sleep. I contented myself with laying next to Max and letting my mind race through all of the weirdness of the past few days. If anyone had told me that pledging for a fraternity would mean being turned into a girl, sexing up the town and ending up in my best friend's bed I would have laughed at them. Yet here I was.\n\nThe whole notion had seemed perfectly rational at the time. Fraternities had a bit of a bad rap in some ways, but they could help you get a job, and Tau Geta Delta had a good reputation with girls as well. I couldn't argue with either prospect, and despite the rumors of the Tau's having a crazy initiation ritual, I decided to sign up. No one had been lying about doing strange things to pledges, and I found out the hard way when I ended up in panties and a bra with all the anatomy to go with it. They had some kind of magic that let them transform people, and we had to go through a whole week as women.\n\nThat would have been hard enough, but they also gave us challenges, sexual tasks we had to complete if we wanted to be welcomed into the frat when the week was over. I'd ended up bound to a kinky professors bed and picking up guys in a bar. Now, the latest challenge was sleeping with a friend, and it had rattled me in a way that none of the other trials had. Everything else would just be a weird perverted memory, but winding up in Max's bed was an entirely different deal.\n\nThe thing about sorting things through like this was the way I couldn't deny what I really felt. Last night had truly effected me more than I expected. Alison's feelings had merged into my own, and despite my desire to keep the relationship at a purely sex buddy level when we started, it was different now. The spark we'd had before had burst into a flame, and for a moment last night I was ready for it to burn the two of us up together.\n\nI hadn't planned on that, and had decided not to say anything to Max for now. I was only slated to be a girl for two more days, and after that everything would go back to the way it was and no one would remember the spunky little brunette girl called Alison. That saddened me a bit, even though I knew she'd live on in my memory. I wondered if any of the other pledges felt this way, but I didn't know if I'd ever be able to summon the courage to ask such a personal question.\n\nMax started to stir and that short circuited my internal considerations. The only question I was left with was what I wanted to do with the naked guy who was starting to wake up. I really only had a few moments to decide before he'd get a chance to take charge, and despite any other misgivings, I didn't want to give him the opening to set the tone for today.\n\nNow, there was one thing I remembered about being a guy in the morning. I slid my hand down from his chest and found his cock already hard for me. Max took in a raspy breath as I slid my hand over him and started to rub him. He squirmed and shook against me as the feeling of delicate fingers must have jolted him out of the morning sleepiness.\n\nHe turned towards me with a slightly confused look and half lidded eyes. \"Hey...\"\n\n\"Good morning.\" I chirped with a silly grin. He gasped again as I gave him a firm squeeze. I hadn't played around with another guys cock so much since becoming a girl, the few times I'd touched one was mostly to help get it into me, but it was actually kind of fun taunting him like this. I'd never had a girl be frisky in the morning with me, but I knew it would be a frustrating mix of hot and aggravating as I struggled to wake up.\n\n\"No fair... you can't tease me like this!\" Max grumbled as my fingers kept up their work. I knew I'd pushed him past the casual morning wood into something a lot more intense.\n\n\"Who said anything about teasing?\" I smiled and gave him a quick peck on the nose before I slid back and let him roll onto his back. It was a bit hard keeping under the covers, but I managed it while I slid on top of him. I could see the grogginess melting from his eyes as my bare breasts pressed into his chest.\n\n\"Damn girl.\" He smiled as I slid back and got up enough to help guide him towards my steaming pussy. All that thinking about sex and relationships, not to mention the hot stud next to me, had gotten my juices flowing, and I knew this would keep him off balance for days.\n\nI shuddered as I rubbed him along my slit, getting his cock head get wet and ready before I pressed it up against my entrance. Feminine arousal still struck me as weird sometimes, the throbbing squishiness between my legs was so unlike the way my cock had used to feel, but the need to be fulfilled was just as strong.\n\n\"Unless you don't want to?\" I looked down at him as I slid him around the gates of my pussy and squirmed a bit from the heat it stoked in me. I certainly wanted to have him screw my brains out again, and I doubted he was going to really object.\n\n\"Are you kidding?\" He wrapped his hands around my waist and held me in place. I shuddered from the sudden containment and bent down to peck his nose again.\n\n\"Just checking.\" I smiled and then pressed down with my hips. I wanted to retain a bit of dignity, but I just couldn't stop a ragged moan of feminine lust from escaping as I slid my pussy around his hardness. That wicked feeling of being penetrated was still overwhelmingly hot, and I savored it as I pushed onto him.\n\nMax groaned as well. There was simply no way to deny how good this felt, and I was glad Max liked it too. Not that I was surprised by it, what guy wouldn't like having a sexy minx climb on top and show him a good time? I'd have loved it back when I was a guy and now I had a chance to hand out the favor.\n\nI wasn't in the mood for a long, careful fuck this morning, and I started working my hips just as soon as I felt him fill me. I panted as I pulled up and started to bounce my hips on top of him. Sex as a girl was always a different experience. When I was on the bottom, it was intense and submissive, no matter how I moved, the guy was really in charge, and there were moments when that was almost frustrating.\n\nWhen I was on top, it was entirely different. I was in charge, but the feeling of a cock spearing me left me shuddering and moaning with pleasure in a way that made it hard to keep up a rhythm and enjoy it at the same time. It was also a lot more work than when I was a guy. Instead of just thrusting my hips I had to lift my whole body up and slide back down, all while retaining control. As good as it felt it was harder to fully savor the sensations and be in charge at the same time.\n\nWhile I was busy working my hips up and down, Max was enjoying the show of a naked woman riding him. Given how much of his sex life he shared with me, I was reasonably certain he'd never had this experience before. I wasn't about to let him off without doing some work though. I grabbed his hands and pulled them up to my chest as I ground my pussy around him.\n\n\"Oh...\" I moaned as he squeezed both of those round orbs at once. I'd really come to appreciate how the right touch could make my breasts just tingle, especially when I was in the middle of getting fucked. It was an entirely different kind of pleasure, and I wasn't going to be denied when I was doing all the work.\n\nThere was another thing I'd learned from all this sex, and I slipped a hand between my legs as I kept humping Max. I moaned again when I started to rub my clit. I nearly lost my balance from the rush of pleasure I provoked, and I backed off enough so that I could keep going and still be shuddering from the sensations. As good as a nice cock felt on its own, massaging my clit at the same time made it so much better.\n\nFrom the way his hands trembled on my breasts I knew that Max was getting close as well. I was doing my best to join him, rubbing and humping while he squeezed my chest. Our breaths became ragged, and when my hand pressed a bit too hard against my sensitive nub I let out a ragged passionate moan as I felt my orgasm bursting out.\n\nMax joined me a moment later when my pussy engulfed him and then squeezed him hard. The feeling of his cock pulsing inside me only made me moan louder. The rush of pleasure flowed out from between my legs and I collapsed on top of him as my whole body quaked.\n\nNow, finally, I gave him a deep, hard kiss. The savagery of my orgasm flowed through my lips, assaulting his mouth as I basked in the pleasure. It was perfect, my hot flesh melting into his, our lips and tongues mashed together as he throbbed inside me. My whole body exploded with wonderful, insane ecstasy.\n\nWe rested like that for a while. The intensity of our kiss faded, but we traded pecks as we panted. It was crazy how good it felt. It was more than just the amazing feeling of having an orgasm, it was knowing that I'd made Max feel just as good. The sex I'd had as a girl until now had been almost anonymous. I'd barely known those guys and as nice as they were, there was no real emotional attachment. Max was different. I cared about him, and knowing how good he felt was almost as satisfying as my own pleasure.\n\nSadly, our little coupling had to come to an end. We both had classes, and I had to get back to the frat to get a change of clothes and find out my next challenge. I knew Max had classes as well. I didn't want to be the one disrupting his day. I didn't want anything to darken what we'd just shared.\n\n\"Thanks, hot stuff.\" I kissed him again before rolling off. I debated taking the sheets with me as I slid off the bed, but decided against it. I knew he'd enjoy the view and I wasn't embarrassed about my body. I knew my motives weren't really that pure though, the Alison part of me knew this could help snare him. As much as I wanted to keep him as a friend, the prospect of creating a deeper relationship was alluring.\n\nI pushed down such thoughts as I gathered up my clothes. We'd gotten a bit crazy last night and it actually took me a minute to find my panties. I checked back and smiled as I noted that Max was on his side, just enjoying the show of my naked self hunting around the room.\n\n\"You know I'm just going to plant myself on your couch and watch you get dressed.\" I laughed as I started to pull on my skirt. I knew I was putting on a show for him and while I didn't make it obscene I could choose my order to maximize the benefit. Skirt, socks, shoes, then bra made for a wicked order.\n\nThen I pulled on my shirt and looked down at my panties. The thing was, I didn't exactly like the idea of wearing them for a second day. I knew that would also tweak Max, and I made sure he saw me put them into my bag. Now, he'd spend all day thinking about how I was walking around with no panties on under my skirt.\n\nSince I was dressed, Max finally made his way out of bed. I sat down and just watched, as I had promised. I wasn't going to be a liar. He wasn't some muscle bound jock, but he was reasonably fit. This was another thing that surprised me about being a girl more than I had expected. As much as I did appreciate looking at a naked guy, it didn't send my blood boiling in the same way I got when I looked at girls back when I was a guy. The visceral edge was almost gone. That didn't mean I didn't feel anything, but it didn't make me instantly dripping wet. Still, I was going to sit here and stare at him just to see how he reacted.\n\nHe tried to stay nonchalant, but I noticed that he was careful to keep his ass towards me as much as reasonably possible. That was okay by me, my girl half actually had a thing for male ass. It was different than looking at cocks, I mean they were kind of goofy in their soft state, and most of the fun in seeing a hard cock was a mix between the pride in making him hard and the anticipation of what I could do with a big thick dick.\n\n\"So, breakfast?\" He asked after he finally got his pants on. He ran his fingers through his hair, straightening out the worst of the rough edges, but leaving a rather windswept look. I found it surprisingly attractive, but I wasn't going to let him know that or he'd never stop wearing that hair style.\n\n\"Sorry, I've got to get back and do the whole change clothes and clean up thing. Maybe I'll find you for lunch.\" I popped off the couch and stepped over to him so that we were close but not too close. \"I do want to thank you for a great evening though. Let me know the next time you want to get frisky.\"\n\n\"No, thank you, I don't think I'd have ever had the courage to ask on my own, Ali and it was great. I'll always be ready anytime you want to go for another round.\" He slid his hand over my shoulder and I shuddered a bit. The twisted mix of feelings were just boiling inside me. Did he want me as a real girlfriend? Should I care? What did it mean if I was going to be a guy again anyway? There was one more question left, but I wasn't going to even let myself think it, not yet.\n\n\"All right then, hot stuff. Until next time.\" I got up on my tip toes to land a quick kiss on his cheek and then grabbed my bag and shot out of his room. I hated to drag out partings, and I was going to be late to my first class if I didn't hurry.\n\nLeaving my panties off had been a casual thought, and a bit of a tease, but when I tried to race back to the frat, I realized it had a downside. First, the slight chill of morning air that slid up my thighs really set me shivering when it hit my exposed pussy. The second problem was that my skirt was pretty short, and if I didn't want to expose myself to pretty much everyone I had to keep myself to little more than a brisk walk.\n\nBy the time I'd arrived, I was dreaming of nothing other than a nice hot shower and a much longer skirt. I raced through this as well, undressing at record pace and donning my bath robe before finally reaching that wonderful steaming water. I couldn't linger here as long as I'd like, but I made sure to wash away the sweat and other remnants of my time with Max.\n\nI'd had to trade that time in the shower for the time it took to dry my hair and do a little styling. This was another of those differences about being a girl. Even guys with long hair didn't spend much time on it, usually, but as a girl I couldn't go out without making sure I'd brushed and dried it and styled the edges a bit.\n\nI donned a longer pleated skirt today, and a saucy T-shirt that would just tease any guy who read it. I was in a good mood, and didn't even mind that I'd be drawing a lot more attention to my boobs. It wasn't like they didn't draw stares anyway. Now, I had one last stop before heading out and hopefully I wasn't too late to hear what today's challenge would be.\n\nThe dining room was pretty quiet by now. Only a few students were left sitting around and enjoying breakfast or some morning studying. I grabbed a banana from the fruit bowl and snagged some juice from the fridge. It was a good eat and run kind of breakfast, and I noticed that the house president was still sitting in the corner and reading.\n\nHamilton Prescott, our erstwhile leader and the man who had cast the spell to turn me and all the other pledges into chicks. He was dressed as always in preppy fashion, with his hair neatly coifed and a sweater vest bearing the logo of the fraternity. He still gave me a bit of an odd vibe, not creepy, but not normal either. That didn't change the fact that I needed him to tell me the day's challenge.\n\n\"Good morning, you're looking well rested.\" He smiled as I walked over. I didn't detect any strong hint of irony in his voice despite the fact that he must have known what I'd done last night. He had been the one to tell me what to do after all.\n\n\"Morning.\" I nodded.\n\n\"I suppose you're here for the day's challenge.\" He held up his hand and a little blue spark of energy appeared. It was still strange seeing someone using magic in front of me. A week ago I'd have laughed at anyone who said magic was real. Of course back then I'd still had a cock so I'd adjusted my view of the subject. The little blue ball was some kind of tester that would tell him if I'd completed the last challenge. He'd used it on me several times before, but it was still strange to see it.\n\n\"And you've been doing well with things so far. I'm glad to see you've embraced this, Alison. Now for today we're going to switch things up a bit. You've been tasked with sharing carnal pleasures with men until now, but today you need to find another woman and share those same joys. The only stipulation is that it can't be another pledge. Okay?\"",
        "\"Yeah, thanks. Gotta go!\" I spun around and headed out. I had classes to get to and he wasn't the best conversationalist anyway.\n\nThe challenge wasn't as freaky as the last one at least. In fact the very notion had me getting a little excited as soon as I'd heard it. It wasn't all roses and sunshine, though, while the guy part of me looked forward to playing with girls again, the girly part of me was a bit more conflicted. Alison had been effectively straight. The thought of being with another girl didn't really turn her on. That meant my guy side was pretty much pulling all the strings for the moment and that felt pretty weird.\n\nNo matter what I felt, the fact was that I needed to go through with the challenge if I wanted into the fraternity, so my mind turned to picking out the lucky girl. I quickly realized that I wouldn't have a lot of options. If I walked up to a guy, I had a pretty good chance of being able to get him into bed, just cause I was a girl. But girls weren't generally attracted to other girls that way, and I didn't know any bi or lesbian girls.\n\nThere was one notion, though, and I picked up my phone.\n\n\"It's day five isn't it?\" I heard Meredith laughing on the other end of the phone. She'd been something of a counselor for me right after the transformation. Before that, she'd been a pledge and had decided not to change back into being a guy and joined the Delta Kappa sorority instead of becoming a Tau.\n\n\"That obvious, huh?\" I giggled a bit. The fact that she also realized that meant that she must know why I'm calling which made me feel more than a bit awkward.\n\n\"A little, don't worry, I called my Delta on my fifth day too. I think that's why they pair us up that way to start with, so you'll always have a girl to fall back on.\" Meredith explained. It made sense. The Taus had to know that most pledges would find it hard to get a little girl on girl action going.\n\n\"So you don't mind?\" I asked. I didn't know what I'd do if she turned me down. I had no idea where to start looking for girls that would enjoy playing with another girl.\n\n\"No, of course not. How could anyone say no to a hot little number like you? Why don't you stop by the Delta house around seven and we can have some fun then, okay?\" Meredith made everything easy with one little question. I sighed with relief.\n\n\"Yeah, I really look forward to it! Thanks!\" I felt my mood brighten considerably. It wasn't just the fact that I had figured out how to complete the challenge, Meredith was pretty hot! I couldn't have gotten luckier given the circumstances.\n\n\"Great, see you tonight.\" Meredith hung up. Now I just needed to get through the rest of my day.\n\nI kind of floated between classes. My mind was elsewhere. My guy side was reveling in the notion that I'd soon get my hands on some breasts that weren't my own. My girl side was a bit more circumspect. Sure, it could be fun, but being with another girl would be weird. It certainly wasn't an inner argument that I was used to having. That just made it even more surreal.\n\nIn the end, I did what I always did when I was about to do something I was nervous about, I concentrated on how to get there, rather than what I'd be doing. I tried to focus on my classes and forced myself to do a bit of homework before heading back to the frat to get ready.\n\nIn truth, this was a date, a bit of a strange one, but a date none the less. I flipped through my wardrobe and tried to pick out a nice blouse and skirt combo that wouldn't be too over the top. Then I did my hair and let my girly instincts out for a bit of makeup. It was still hard for me to manage the whole eye shadow and mascara without calling upon the Alison part of my brain to help.\n\n\"So, hot date tonight?\" Alex popped up beside me as I walked down the hall on my way out. I hadn't seen her since our little adventure at the night club a couple days ago, and she was looking like her usual chipper self. The curvy little blond was another Tau pledge and she'd embraced her new sexuality in a way that had left me and her friends reeling at first.\n\nI blushed a bit at the way she was calling me out. \"I guess so.\"\n\n\"Well, looking good, girl! I guess that means you've been getting lucky lately.\" She smiled. There wasn't much room for secrets between pledges. We all had the same challenges and that meant we had to have done much the same things.\n\nIn this case she didn't even wait for an answer. \"I know, I know. It's been a lot of fun though, and tonight will be wild. I assume you're heading over to the Deltas.\"\n\n\"Yeah.\" I managed to sneak in. I hadn't really thought the issue all the way through, but there were going to be a lot of Tau pledges heading that way tonight.\n\n\"I just hope I haven't forgotten how to lick pussy!\" Alex seemed to actually flinch a bit as she said it.\n\n\"But it feels a bit weird thinking about girls like that now, doesn't it?' I smiled. Over the last few days it had been Alex that was our over the top girly girl. She'd embraced the challenges with a passion that left me a bit jealous.\n\n\"Crazy, right? I mean I used to love getting it on with the ladies, but now it kind of makes my stomach twist a bit just thinking about it.\" Alex nodded and then continued. \"I'm sure I'll be fine once I've got some boobs in hand though.\"\n\nI wished that I shared her confidence. I knew she probably wasn't wrong, at least not completely. Half of me was eager for what was about to happen, and the other half was more than a bit anxious. Still, once I got into the middle of a girl on girl make out session, maybe all those doubts would just melt away.\n\nWe made it to the Deltas right at six. A few other pledges had caught up with us by then, but as soon as we were in the door, the Deltas seemed to swarm us. Meredith swooped in and grabbed my hand, before I had a chance to say anything I was half way up the stairs.\n\n\"Hi!\" I gave her a wavering smile as she pulled me into her room. As dressed up as I was, Meredith had almost gone the other way, not that it hurt the way she looked in the least. Just like the first night I'd met her, she was wearing a T-shirt and shorts, and they looked just as hot on her as they had before.\n\n\"Oh, we just don't want you pledges getting all twisted up with greetings or such. I know just how conflicted you're probably feeling right now. After the spell's been working for a few days, you start to lean on your feminine memories more than you male ones, right?\" Meredith smiled and motioned for me to sit down on the small couch she had. She took a seat at her desk, close enough but not too close to make me uncomfortable.\n\n\"Yeah, it's like I'm really a girl with some strange guy memories sometimes.\" I nodded.\n\n\"Cool, and I bet the old girl you wasn't so into girls, but the guy part of you is like screaming to dive in.\" Meredith continued. I knew she'd been through this before, and I appreciated that she understood. It was kind of creepy how she could almost read my mind though.\n\n\"Pretty much.\" I smiled again. The battle was certainly still raging inside me.\n\n\"Good, then I know there is one proper cure.\" She got up and before I could do anything else, she planted a soft wet kiss on my lips. I squirmed for a moment, not ready for her, but as she pressed in, I wavered and then melted for her. I'd almost forgotten what it was like to kiss a girl. Guys were hard and forceful, and while I did enjoy it, the feeling was nothing like the soft warmth of a girl's tender lips.\n\nWhen Meredith pulled back, I was left panting. Whatever doubts I'd had about being with another woman had melted away. I'd never have expected it to be so easy, but the air of anticipation had me boiling. Lust and pleasure had a way of burning through any reluctance.\n\n\"Wow...\" I breathed as she smiled back at me.\n\n\"Yeah, I'd nearly forgot how hot kissing a girl was.\" Meredith looked flush as well as she stood over me. Now, she turned and slid in beside me on the couch. It was close enough to snuggle and she slid an arm around my shoulder.\n\n\"So are you ready to get started?\" She smiled. There was a comfort in knowing that both of us were here for the same thing. We didn't need to do any dance, no pretense.\n\nI also didn't need to say anything more. I leaned toward her and gave her another soft wet kiss. This time my hands joined in and I slid my fingers along the side of her breast. She gasped into my lips and I soon felt the same wicked feeling across my breast. Our hands were as busy as our tongues and we moaned and writhed together as we made out.\n\nBefore I knew it, my blouse was open, her shirt was off and we were wrapped around each other trying to take off each other's bras. Our breasts mashed together as we struggled. I'd not had as much experience taking off bras as I would have wanted, and still struggled with mine even as a girl. Meredith wasn't much better, but after a bit of fumbling we managed to succeed and throw those constricting garments across the room.\n\nThen we both stared at each other's breasts. I really hadn't lost my appreciation for those soft round orbs. It was a bit different now that I could just look down and see my own, but it was another thing entirely to see them on another person. Round, soft and topped by a nice pink nipple, there was just an ingrained need to love them. The only thing that really got me was that I was a bit jealous that Meredith's boobs were a bit bigger than mine, but for now that only made me want to play with them more.\n\n\"I just wanted you to know that I thought you were lovely from that first night. I knew how weird it could be then, so I didn't say it so much.\" Meredith looked into my eyes and then pulled my hair back around my ear. I blushed at that. It was so direct, and I could feel that it was heartfelt as well.\n\n\"Thanks, I thought you were pretty hot too.\" I smiled. Then I dove in for another kiss. I didn't really have the right words for this conversation and that left me with just one option.\n\nOur kiss was wild again, and this time our naked breasts jiggled and bounced against each other. It was a crazy feeling, and I just pulled her in tighter. The softness of my flesh and hers was intoxicating. Our hands slid lower now, and before I knew it, we'd managed to slide off our shorts, skirts and panties until we were both sitting on her couch naked and rubbing together.\n\nMeredith didn't need any words to lead me to her bed and we slid on top. Our hands explored, and touched and fondled. I hadn't actually been with a girl in months, and I savored the feeling of her soft skin under my fingers. Her hands were busy moving over me as well, and the tender way she touched me was quickly driving me nuts.\n\nWhen her dainty fingers found my pussy I couldn't keep from moaning out in pleasure. Her touch was so unlike the rough fondling I'd experienced from men. She was slow, meticulous and knew the right way to touch me until I was writhing in pleasure.\n\n\"Oh, oh yes!\" I moaned as he rubbed at my clit at the same time as her mouth suddenly wrapped around a nipple. The flood of sensations was intense. I enjoyed it as long as I could before I sought to return the favor.\n\nMeredith cooed when my fingers finally found her womanhood. This was another strange moment for me, sliding my fingers along another girl's slit. The Alison part of me quailed a bit, but when Meredith let out a whimpering moan of pleasure I knew I couldn't stop. It was fun in a wicked way, and after the last few days, I knew just where to touch to have the best effect.\n\nWe squirmed together, the pleasure from our mutual pleasuring was only making us hotter. I could smell our arousal in the air and the feeling of soft flesh against mine was simply intoxicating. The sound of her ragged breaths was starting to drive me wild as well and I wanted nothing more than to make her cum.\n\nI broke free of her hands and started to slide down, first kissing her neck, then her breasts and finally I made my way between her legs. She slid up on the bed a bit and pulled them open, as eager for my touch as I was to give it. Her pussy smelled sweet and I breathed it in before I lowered my lips onto her.\n\nMy mouth pressed into her pussy and I followed my instincts as best as I could. I have never really gone down on a woman before, but I knew how good it could feel. I started to lick at her, running my tongue along the length of her nether lips while she moaned. I did it several more times, until she was squirming under my lips and then I started to lick and kiss and suck on the top of her pussy, around her sensitive nub.\n\nIt didn't take much of that to send her crying out in pleasure and I could feel her body quacking around me, but I didn't stop. I knew she must have been cuming and I wanted for her to enjoy it as long as possible. While my mouth was busy at the top of her pussy, I sent my finger to attack the bottom. At first I just stroked around the edge of her entrance, but when she started to moan again, I plunged my fingers inside and she thrust her hips up at me.\n\n\"Oh, god, oh god!\" Meredith moaned as I licked and stroked her at the same time. Her hands found my head and pressed me in tighter while I worked between her legs. She bucked beneath me and I tried to keep on task, but finally she sat up, lifted my head and then pulled me back on top of her.\n\nHer kiss was ravenous now, and I knew that there was no way to deny the pleasure rolling through her. Our bodies writhed together, breast against breast and legs against legs. I realized that we'd straddled each others thighs and started to hump against the smooth flesh. It was a raw driving need for more, and Meredith pushed me back onto the bed.\n\nI let her move this time, and she slid over my body until her face was between my legs and her pussy was dripping above me. The sight of her naked, wet folds left me swooning. As soon as I recovered, I lifted my head and started to lick at her again as I reached up and started to stroke her thighs.\n\nShe was busy between my legs as well. I moaned into her pussy when her tongue found my clit. I just went wild as she started to lick and suck at me. It was so much better than any guy had managed so far, and I couldn't continue pleasuring her as she sent my body soaring in ecstasy.\n\nI cried and wailed as I came. It was so hot, so perfectly intense that I couldn't hold back. She didn't stop either, and I rode through a crazy rush of sensations as my body quaked from the orgasm and the wonderful way she kept licking and sucking my tender flesh.\n\nFinally, she pulled away and slid around again until we were laying next to each other, panting and smiling, each with a breast in hand and basking in the glow of a wonderful orgasm.\n\n\"That was amazing...\" I panted as she gently squeezed at me.\n\n\"You're not half bad yourself.\" Meredith smiled at me. As hot as she'd been before, seeing her face like this, just made me want to do it all over again. It wasn't just about how good I felt, but know that she had gotten that much pleasure as well.\n\n\"Do you do this often?\" I asked. It seemed like a moment for sharing, and now I was insanely curious about this girl who hadn't always been one.\n\n\"Not so much, I kind of have a boyfriend.\" She smiled back at me. \"But sometimes I get a little nostalgic, and he doesn't mind. He's even joined in a few times.\"\n\nI blinked a bit at that. I had to admit I was jealous in that moment as I thought of her having a threesome. It sounded like fun, even if my girly side was a bit indignant about it, I couldn't deny the appeal. There simply wasn't a way I could argue with the hotness factor to my male half. If I combined that with how good being with another woman could be I actually wanted to give it a try.\n\n\"So you really don't regret it?\" I asked.\n\n\"No, I love being a woman, sure I get a bit nostalgic, sometimes for specific things, but in the end, I wouldn't want to go back. Have you been thinking about joining the Deltas?\" She asked. The question was almost backhand, joining the Deltas meant staying a girl.\n\n\"I don't know...\" I blushed. I really hadn't thought about it directly, but I couldn't deny I'd been attacking it from all sides. Especially after last night and this morning with Max, the idea of not changing back had been on my mind more than I wanted to admit.\n\n\"Which means, yes.\" She gave me a quick kiss on the nose. \"And you look so cute all confused and anxious there, that I'm going to have to break out my toys and drive all those naughty thoughts out of your head.\"\n\n\"Toys?\" I stammered before she rolled over to her night stand and pulled one lewd looking device after another for me to see. I was surprised that I mostly recognized them. There were dildos, massagers and vibrators. As a guy, I wasn't really used to the idea, but after being a girl for a while, I could see the appeal, but I hadn't tried them yet.\n\n\"Of course, girls just want to have fun right?\" Meredith smiled as she plucked a big thick dildo out of the lot and then hopped back into bed. There is just something wickedly naughty about a girl hovering over me and holding a fake cock that would put most men to shame. Rationally, I was a bit conflicted, but I spread my legs wide open for her just the same. My pussy was more than ready to try it out.\n\n\"Right!\" I smiled up at her as she moved down and positioned the dildo at the entrance to my quivering interior. I squirmed a bit as my pussy lips parted and she rubbed the tip up and down, covering it with my juices and sending sparks of pleasure shooting through me. I was still sensitive from my orgasm and the feeling of that big shaft poised between my legs was making me crazy.\n\n\"That's my girl!\" Meredith laughed and then pressed the fake cock into me. I was wet enough and relaxed enough that it just slid right in, and I gasped at the sudden fullness between my legs as she bent back down and pressed herself against me as she stroked the dildo gently in and out of me.\n\n\"Oh, yes...\" I moaned as I savored the movement inside me. It felt so good, and I was now pressed into her naked body again as she continued. It was crazy, and yet wonderful.\n\n\"If you like that, you'll love this.\" I heard a switch click and then my world exploded. The whole cock was vibrating inside me and against my clit all at the same time. I wailed, lost in the crazy pleasure and then she started thrusting it into me. Each deep thrust was followed with her grinding the dildo into me and letting my clit get another wonderful vibrating massage before she pulled back.\n\n\"Oh yes, oh god, harder!\" I moaned and flailed. I thrust my hips back against her, and my legs shook back and forth. I tried to grab at her, but it was so hard to control myself, so hard to even think of anything other than the raw pleasure boiling up between my legs. My whole body was so sensitive that I couldn't take it for long.\n\nShe kept thrusting as I writhed beneath her. I couldn't do anything more than pant and moan as she worked that amazing dildo. I grabbed at her arm, rubbed her legs with mine and when she plunged in deep again I cried out with another heart stopping orgasm.\n\nStill, she didn't stop and I came again and again. I was lost to the sensation, to the depths of ecstasy as my whole world dissolved into nothing more than the depths of my pussy. I quaked and shuddered as I melted, panting on top of her bed.\n\nI don't know how long it was before I came down again, but I was still wrapped around her. I was overflowing with warm hot joy as I looked up at her. I couldn't think of anything more I could have wanted in that moment than simply snuggling against her.\n\n\"See how good it can be?\" She smiled at me as she stroked my hair. It was true, as a guy, I'd never felt like that, never been driven from one intense orgasm to another. There was always a recharge time as a guy, but as a woman, it seemed like it could have gone on forever.",
        "\"Yeah, thank you, thank you so much...\" I leaned over and gave her a slow kiss. It would take me a few minutes to regain my energy, then I hoped to return the favor. If there was one thing I was fully learning this week, it was that giving was just as much fun as receiving.\n\nThe rest of the evening descended into a blur as we worked our way through her selection of toys. It was hard not to get washed away at times and we were left panting and jumbled more than once, but we didn't stop until we were both exhausted and overflowing with pleasure. Meredith showed me so many ways to get off, and I showed her how well I'd learned by returning the favor.\n\nIn the end, I was left curled up with a woman for the first time in ages. The warmth and tenderness we'd shared would be impossible to forget, just as I'd never forget just how good it could feel to be a woman. As I drifted off to sleep, I knew there was one question really left to me, did I want to stay this way or go back to what I was?\n\nI wasn't ready to answer that yet. For now all I wanted was to savor what I'd just shared. I'd have time to figure the rest out later.\n\nThe End ( Part 5 )"
    ],
    "authorname": "Farleven",
    "tags": [
        "gender bending",
        "fraternity",
        "magical change",
        "college",
        "pledge",
        "initiation",
        "sex games",
        "sorority",
        "girl on girl"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/pledging-tau-geta-delta-pt-05"
}