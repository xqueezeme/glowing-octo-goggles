{
    "title": "\u00c6gir's Wife Ch. 08",
    "pages": [
        "Kirsty was smiling as she padded into the living room when the doorbell sounded. Monika had just got to bed...close to midnight of course. But by then she was starving. Mikael had a way of doing that to her. Bjorn, sweetheart that he was, had volunteered to do a late night food run to her favorite Turkish restaurant on Green Lanes. Lamb doner and koftki were all that would do her. \n\nShe chuckled as she threw open the door, \"That was fast, Bjorn...\" She froze for a moment when she saw her father and not her husband standing in the doorway. She was not certain what to do. Her father had not seen her naked since she was four. All she could do was assume the awkward one arm across her tits and the other... \n\nIf she thought things could not get any worse... Mikael walked out of their bedroom, equally naked, \"What took you so long, baby bro...\"\n\nHe though was lucky and quickly realized his mistake, ducking back into the safety of the bedroom. \n\nKirsty on the other hand, and she had none left at the moment, could only bite her lower lip and mumble, \"We weren't expecting you, Daddy.\"\n\n\"Obviously,\" her father mumbled as he looked down at the floor. \"Perhaps I should come back another time.\"\n\nKirsty was about to nod her assent, when she felt her satin robe wrap around her shoulders, \"No need, Sir.\"\n\nShe turned to Mikael with tears of gratitude in her eyes as she managed somehow to slip her arms into the holes. He smiled down at her as he tied the belt loosely just above her baby mound. \"Come in, Daddy,\" she replied as she stepped back. \n\nMikael had even managed to find his jeans and pull them on somehow. The man had far quicker reflexes than she did. That was for certain. \n\nHer father was red, sweating and appeared the epitome of polite British discomforture as he nodded and stepped reluctantly into the apartment. \n\nKirsty was trying to collect her thoughts, trying to figure out what she was going to say, how she was going to explain this as she closed the door, but before she could, \"Foods here. Hope you are hungry or we'll have to think of some way to work up an...\" Bjorn froze with his mouth open. \"Dr. Dickens...\"\n\n\"Take a seat, Daddy. I will get some plates and things from the kitchen. You can join us for dinner. Mikael, can you help me please? Bjorn, will you set up everything around the coffee table please? No need to be formal and sit at the dining room table,\" she barely kept herself from bursting into giggles as she disappeared into the kitchen with Mikael hot on her heels. \n\nShe had just about cleared out the cupboards of plates and glasses and was reaching for the drawer for silverware when Mikael came in. She could see the dark look on his face as she passed the things to him. \n\n\"Just let me get some wine, juice and napkins and I'll join you,\" she reached up and brushed a kiss over his lips that stilled tasted of her, having spent over half an hour torturing and edging her before finally giving her the mind-blowing orgasm she needed. \n\n\"Sure, no problem,\" he kept his eyes down but she saw the way his Adam's apple bobbed in his throat over each word. But before she could say anything more, he disappeared back around the corner into the living room. \n\nShe sighed, this was NOT how she wanted to tell her parents. Though she was not certain that there would have ever been the right time or a good way. She rubbed her hand over her girls as she shoved a bottle of wine under one arm, orange juice under the other and picked up the napkins and cork screw. \n\nBut the truth was...she had to do it sometime and somehow. It just seemed that Fate had given her a huge shove in that direction. No time like the present it seemed as she plastered a smile on her face and joined her husbands around the coffee table. \n\nShe smiled to first Bjorn as she handed him the bottle of wine and cork screw. Both he and Mikael had chosen to sit on the floor facing the couch. Her father was at one end, which left space for her at the other. \n\nBut before she took her seat, there was something else she needed to do. She stepped behind Mikael and placed her hands on his shoulders. He turned and looked at her with a deep frown, but she merely smiled as she said, \"We did not have time for proper introductions earlier. Daddy, this is my husband Mikael. Mikael, my father, Dr. James Dickens.\"\n\nUnfortunately, her timing left a bit to be desired as her father spewed the red wine that Bjorn had handed him just a moment before out both his nose and mouth. \n\n\"But I thought Bjorn was your husband,\" he stammered. \n\n\"He is, Daddy. Both Bjorn and Mikael are my husbands,\" she said holding out hands to both of them. \"So is their eldest brother, Sven. But we have to go back to Norway tomorrow, he is not well.\" If she was in for an ounce, she was in for a pound.\n\nHer father looked from the face of one husband to the other before looking up at her as he broke out in uproarious laughter. She frowned as all three of them chuckled, but she failed to see what was so funny about this predicament. Though laughter was certainly better than what she could expect from her mother. \n\nAfter a couple of moments, her father's chuckles quieted as he reached for a napkin on the table and wiped his eyes, \"I'm gay,\" he said looking her in the eye.\n\n***\n\nKirsty's head was still reeling from it all as she fried eggs for their morning breakfast. \n\nHer father was gay. Not happy. But homosexual. \n\nNot that it mattered to her. She had friends and clients, who were openly gay, lesbian and transgender. Of course, she did not love him any less for the revelation. \n\nLooking back, she supposed it even made perfect sense. Things form her childhood falling into place like pieces of the puzzle. They had stayed up for a couple of hours talking. That had been the big news that her parents wanted to share, but had not gotten around to over brunch. \n\nHer father was gay and had finally met someone. Her parents were getting a divorce.\n\nAnd she could not be happier for her father. She only wished he had found the courage years before to live his life the way he wanted. \n\nIt had solved practical problems as well. While they were prepared to simply abandon the flat, lose their deposit and perhaps be stuck paying the rent for another six months, the divorce meant that her father was in the market for a place to live at least for the short term. Where better than blocks from the hospital. \n\nHe had actually gratefully accepted their offer of the couch for the night as well. And his only comment in the end about her equally shocking revelation of being married to three men at once had been priceless, \"Please, may I be there when you tell your mother. Or at least video it.\" He and Bjorn had laughingly agreed to the plan.\n\nOf course, she had slept the whole night sandwiched between her husbands. While it had been a tight fit, in the bed anyway, it had been a bit disappointing otherwise. Both Mikael and Bjorn insisted that she sleep. Actually, sleep. After months without them both and all they had done was sleep. \n\nOver sleep actually. Bjorn had left early to clear out his office, turn in his keys and do a quick turn over. They were not happy to lose him. In a short period of time, he had become almost indispensable. They had even tried to convince him to make it just a short leave of absence for a family emergency...or to continue working remotely. But her husband wanted back to sea.\n\nShe sighed, her own phone call to Roz had been easier...and harder. Of course, Roz was already preparing for her departure. Her friend knew that she would not be returning from maternity leave and they had actually decided to offer her position to the intern that Kirsty had been working with for months. It would make the transition less traumatic for the children and families. \n\nBut still she would miss her friend. She had before...during her time at the Holding. Even more so this time as they had become closer, sharing secrets and interests. \n\nAs hard as that was though, Kirsty could not wait to leave. The city. The noise. Her mother. The past. Her future awaited her. At the one place that had ever felt like home. She was going home...to the Holding. Though not at first. First they would need to spend some time in Oslo as Sven recovered. \n\nThere was good news on that front too. Mikael had spoken to his father when they woke up that morning. Sven had woken fully the previous night, talking to them both...and kicking his mother out. She smiled, content that things would be all right now. \n\nWell, other than being at least two hours behind between Bjorn's trip to the office and them letting her sleep in. Mikael had run out to hire a van for the day to transport Monika's things and the few of theirs that they wanted. Then when he and Bjorn came back they would pack the van and make the hour and a half drive to Tilbury where \u00c6gir's Captive awaited them. \n\nThree days, maybe four to make the trip. She rubbed her tummy between flipping the eggs. The girls had spent most of the morning and last night practicing gymnastics. The doorbell rang and she laid down the spatula to get it, when her father called out, \"I'll get that, sweetie.\"\n\nShe was more than glad to keep cooking, perhaps it was Bjorn or Mikael, maybe one of them had forgotten their keys. She laughed, remembering how well that had turned out the night before. She heard mumbling from the living room and poked her head around the corner to see her father and a battered Georgia. \n\nAlarm coursed through her at the state of Monika's carer. The young woman had told her about the broken arm that had forced her to cancel the day before, but not only was it in a sling her eye was swollen almost shut and a particularly nasty shade of purple. There was a fainter bruise across her cheek and her lip had a cut in the corner. She rushed forward and enveloped her friend in a hug, but that only tore a strangled moan from her, \"What happened, sweetie?\"\n\n\"Stupid me, like I said, I took a bad fall down the stairs at the house,\" Kirsty knew that with bruises like that it must hurt to smile, but Georgia forced one nonetheless.\n\nKirsty knew, just knew immediately, that it was all a lie. It had nothing to do with her training though that did confirm it. It was almost impossible to get a black eye from a mere fall. Unless you fell onto someone's fist in the process.\n\nShe drew the young woman inside and to the couch. She wanted to be gentle, it would not be the first time she had convinced a victim of abuse to confide in her. But she did not have time. Bjorn and Mikael would be back soon. In another hour, two tops, they would be gone. And what little she knew of this young woman said that she had no one else to turn to. \"Who did this to you, Georgia?\"\n\nThat fake smile was back along with tears from the swollen eye as she tried to shake her head, \"I...fell. I swear...\"\n\nKirsty shook her head and took Georgia's one good hand in hers, \"No, sweetie. No, you did not. These injuries are not consistent with a fall.\"\n\n\"She's right, young lady. I have been the head of an A&E for two decades. And in all that time, I have never seen these type of injuries from a fall,\" Kirsty smiled her gratitude to her father. \n\nTears began to fall faster then. Her whole body seemed to tremble. \"It wasn't his fault,\" she mumbled. \n\n\"Whose fault, Georgia?\" Kirsty pressed.\n\n\"Daddy's. He did not mean it. I shouldn't have gotten in the way. Mama told me not to interfere any more when he disciplined her,\" she sobbed.\n\nKirsty felt her stomach turn at the words from her friend's mouth. Discipline. She knew discipline. But this was not it. She choked and swallowed, feeling decidedly in over her head. She wished that Mikael or Bjorn were here, she could really use their help. \"It was not your fault, Georgia,\" she insisted as she squeezed the young woman's hand. \n\nBut the girl only shook her head and cried, \"I had to come by and say good-bye to Monika.\" Her voice broke, \"I'm not supposed to leave the house until...\" she stammered and trembled again. \"But I could not let her leave without saying farewell. I'm going to miss her so much. Miss you all.\"\n\nKirsty frowned, would the girl get beaten again for sneaking away to see them? She would make sure that did not happen. Some way. \"She has gone with her father to rent a van right now, but they should be back any moment. You stay and have breakfast with us.\"\n\n\"No, I really should be leaving. I just wanted her to have this,\" she held out a threadbare Teddy bear. \"This is Pooh. I've had him since I was a little girl. We went to a fun fair one Sunday. And Daddy won him for me,\" the tears were trekking faster down her cheeks and she had a faraway look in her brown eyes. \"I always thought I would give it to my daughter one day. But...\"\n\nAlarm bells clanged even louder in Kirsty's head. Something was badly wrong here. Horribly. \"Stay and give it to her yourself then. Have breakfast with us,\" she too forced a smile. \n\n\"I really shouldn't. I should just go. I don't know what I was thinking, coming here. She should not see me like this... I just really wanted to say good-bye. I loved her you know. Maybe she was not my child, but I did. I'm sorry. I need to go now. Good-bye. I hope you are happy. Really really happy. And take care of Monika and those babies. I have to go...\"\n\nTears and snot were both flowing and mixing on the girl's pretty face as she tried to stand. But she struggled to even do that. \n\n\"Please stay, Georgia. At least until Monika gets here. Like you said, it is important to her that you say good-bye. Closure is essential for those on the autistic spectrum,\" Kirsty bit her lower lip as something occurred to her. But she would have to discuss it with the guys of course. \n\nShe reached out to put a restraining hand on the girl's shoulder, but she pulled away with another shake of her head. \"No, I have to go now. Have to...before I change my mind...\" She was babbling as she raced to the door. \n\nJust as she reached for it though, the door opened and Monika raced inside. Kirsty smiled at the instant transformation. Georgia swiped the back of her long sleeve across her face, wiping away the tears and most of the running nose. Although the smile was still forced, the light in those dark eyes was genuine as she knelt slowly to speak with the child. \"Hey, Angel. I wanted to come say good-bye. You're going home with your Mom and Dad.\"\n\n\"Home...home...Homdling,\" chanted Monika, jumping up and down. \n\nMikael chuckled as he closed the door behind them, \"That is all she has said all the way here in the van. She can't quite manage the word Holding...so somehow or the other it became Homdling.\"\n\n\"I like it,\" Kirsty smiled. \"Maybe it will stick? Homdling, it is.\" She inhaled as she tried to figure some way of getting her husband alone. \"Monika, why don't you take Georgia into your room and show her all the boxes.\"\n\n\"No, I really should be going now,\" said the girl as her face once more turned solemn.\n\n\"No...no go!\" cried Monika. \"Stay, Georgia stay.\"\n\n\"Wow,\" Mikael shook his head. \"She said all that?\" He crossed the room and there were tears in his silvery eyes as he bent and kissed Kirsty's forehead. \"Thank you, elskling. You are so fucking amazing,\" he brushed a kiss across her lips lightly. \n\nKirsty smiled at him and brushed her hand softly across his bearded jaw before turning back to the others, \"I had some wonderful help. Mikael, this is Georgia. She has been working with Monika since we moved here. Georgia, this is Monika's father, Mikael. You did not get to meet him when he visited last time.\" \n\nGeorgia nodded without really looking at Mikael. Kirsty realized then that the young woman had never really been comfortable around Bjorn either. Not that she had ever paid much attention until now. Guilt assailed her. How could she have not seen the younger woman's plight? So much made sense now. How withdrawn and quiet she was around everyone except Monika. \n\n\"Please Georgia. Just stay for brunch. Let Monika show you her room while I finish it up. Then when Bjorn gets back we can talk while we eat...please.\"\n\n\"No, I really should get going. This is family time for all of you. I don't want to intrude. Like I said I just wanted to say good-bye.\"\n\n\"No, we insist,\" said Mikael with a friendly smile, but Kirsty noticed how the girl only stiffened. She placed a restraining hand on his arm and looked at him pleadingly. He only frowned but nodded his silent acquiescence.\n\n\"Stay. Georgia stay,\" Monika tugged the girl's hand towards her bedroom. \"Please.\"\n\n\"Oh my god! She said 'please.' She actually said please,\" Georgia's smile was completely genuine then. As if nothing else mattered except Monika in that moment. \n\nKirsty knew that she had her then, \"You can't leave now, Georgia. We have to positively reinforce this behaviour.\"\n\nThe younger woman laughed as she shook her head, \"All right, Monika. Just for you, because you asked so nicely and said please,\" Georgia signed the word as she stood and walked with the child towards her room. \"But just for a little while until your...until Bjorn gets here. Understood, Monika?\"\n\n\"No, Georgia homdling,\" Monika said as she dragged the young woman into her room.\n\nMikael shook his head as he wrapped his arms about her waist and pulled her close, \"I think we might have trouble with that one.\"\n\n\"No, it is Georgia that we'll have trouble with. She's coming with us.\"\n\nMikael stared at her for a long moment, \"We only kidnap one woman, lilla gumman.\"\n\nShe giggled and shook her head as she punched him in the shoulder, \"Not like that, silly. Her father is abusing her and her mother.\" She just blurted it all out. She knew that she was not doing this right, but... \n\n\"Damn, the egg is burning,\" she dashed for the kitchen just as the blackened butter began to set off the fire alarm. She heard the ear piercing scream from the bedroom and burst into tears herself. \n\nMikael turned off the burner and grabbed a kitchen towel before heading back into the living room. He practically ran into her father, who had the same idea it seemed as he appeared from down the hallway where he had retreated earlier. The shrill sound and Monika's screams stopped at the same time. \n\n\"I'll check on the girls while you see to your wife,\" her father smiled to him. \n\nMikael nodded his gratitude. When he came back, he scooped her into his arms as the tears began like a dam had burst. Kirsty was not sure how long she cried, but it seemed much too long to her before the sobbing subsided enough that Mikael finally wiped the moisture from her face with the towel. \n\nHe led her to the couch and was arranging her in his lap when the front door opened and Bjorn walked in. \"What's wrong? Is Sven okay? I thought he was doing better...\" he raced to them, once more sitting at the other end of the couch and lifting her legs onto his lap. \n\n\"Breathe, baby brother. Sven is fine. Well, driving Mama and Papa crazy, but that is a good sign. He just needs to learn you can't boss doctors the way he does us.\"\n\nBjorn looked to her, \"So what's wrong, sweetheart? Why are you crying?\"\n\n\"He's abusing her. Them,\" she battled to keep back another deluge of the water works. She knew it was partly hormones. Combined with too many shocks to her system. The argument with her mother. Worrying about Sven. Finding out about her father. And now Georgia.\n\nShe drew in as deep a breath as she could and tried to access the logical side of her brain that seemed to have been on hiatus for months. \n\nShe giggled like a crazy person...probably since that first email over a year before. They both looked at her then at one another. Mikael's voice was firm, \"Look at me, Kirsty.\"\n\nShe tried to focus as she fought tears, giggles and hysterics. His hand wrapped about her throat. It was not as tightly as Bjorn but just enough to get her attention. In more than one way as those hormones raged in a very different way, her nipples hardening and her juices coating her inner thigh. She could not stop the moan that escaped her throat as she closed her eyes and gave into the feeling. ",
        "\"Cum for us, our sweet Freyja,\" Mikael's whisper was all it took as her body and mind melded together in perfect union. She opened her mouth to scream but Mikael's covered it. His tongue danced against hers as his hands on her hips ground her against his hard cock. \n\nJust when she thought she might be getting those raging hormones back under control, she felt another pair of strong hands wrap about her from behind toying with her breasts, tweaking her hard nipples as she felt Bjorn nipping along her shoulder. She whimpered into Mikael's mouth before pulling back from his kiss to taste his brother's. That was all it took to push her body to the next level as the jets of her orgasm thrust her higher still. \n\nSlowly she came back to herself, safely cocooned between them. \"Wow,\" was the depths of her conversational skills at the moment. \n\nMikael chuckled as he shook his head and his hand swatted her outer thigh playfully, \"Be good, elskling.\"\n\n\"Yes, Sir,\" she whispered. She frowned as she realized that her head was completely clear for the first time since she had woken that morning. \n\n\"Now, from the beginning, tell us what is the matter with the girl?\" Mikael asked as he exchanged a knowing grin with her.\n\nShe nodded with a sigh, \"Like I explained to you last night, we had to take Monika to brunch with my parents because Georgia fell and broke her arm. Except she did not. When she got here this morning, she was upset and you saw her...\" she paused until Mikael nodded.\n\n\"Those are not the kind of bruises you get from just falling down stairs. I knew that. Daddy knew it too. So I pushed her to tell us what really happened. I know that is not the best way, but I did not feel like I had any choice. With us leaving today I mean...\"\n\n\"You did fine, sweetheart,\" Bjorn said giving her shoulders a gentle squeeze.\n\nShe turned and smiled her gratitude at him before continuing, \"She finally admitted that her father did that to her. Something about interfering when he disciplined her mother, but that is not discipline.\"\n\nMikael's face was a mask of anger and his eyes the deepest dark grey almost black as he nodded, \"No, it most definitely is not. But sometimes people use the lifestyle as a cover...an excuse...for their abuse. What more did the girl say?\"\n\n\"Nothing much. Well, nothing I could make much sense of. But I'm worried. She seemed so despondent and the way she kept talking about saying good-bye...it was just so final. I'm really worried about her,\" she confided.\n\n\"I want to take her with us.\" She looked back and forth between them, \"Please. University is out for the next couple of months anyway. She doesn't really have any friends here. Just her parents...and if... We can't just leave her here. What if... Please.\"\n\nBjorn nodded his head with a heavy sigh, \"She's right, Mikael. That girl has been a life saver to us all these months. We can't just leave her here to be abused.\"\n\n\"How old is she?\"\n\n\"Nineteen, almost twenty. So it's perfectly legal for her to leave home,\" Kirsty could almost read his thoughts. \n\n\"Does she have a passport?\" \n\n\"Yes, she used it to prove her identity and age when we hired her,\" Kirsty tried to not get her hopes too high. But she had to get through to him somehow. Somehow.\n\n\"For the summer. Do you understand, Kirsty? She can come with us for the rest of the summer. Then we'll come up with a plan to keep the girl safe while she finishes university. From what the two of you have told me...and how my daughter is with her...it is the least we owe her,\" Mikael acceded.\n\nKirsty threw her arms around him, \"Thank you, Mikael. Thank you!\"\n\nBjorn smiled, \"It might be a blessing in disguise actually. Mama will be so worried over Sven. With Kirsty's pregnancy and us at sea trying to keep the business afloat,\" he chuckled. Kirsty was happy to see the genuine smile on his face. \"It will be nice having an extra set of hands with Monika.\"\n\nMikael nodded as Kirsty's father walked into the room, \"I was not eavesdropping, but I could not help overhearing. That girl should not travel. Not until I have looked her over. And documented all her injuries.\"\n\nKirsty shook her head, \"But she must have gone to the hospital, Dad. With her arm. They would have done all that then, wouldn't they?\"\n\nHe shook his head, \"No, little girl. That cast was not put on by any legitimate doctor. Not from what I could see. I want to take her to the hospital and document all her injuries...\"\n\n\"No...NO!\" Georgia's eyes were huge with shock and her skin was deathly pale beneath the black, blue and purple. \n\nKirsty went to the girl, \"Georgia, Daddy is right. You have to get examined. Make sure that nothing else is broken. Have that arm set properly.\"\n\n\"No, I need to go now,\" the girl protested.\n\nBut Monika's voice was louder as she stubbornly wrapped herself around Georgia's leg, \"Georgie no go. Georgia Homdling.\"\n\nMikael's deep laughter defused the tension just a bit, \"You know one day we may regret teaching this child to talk. But not today. What do you say, Georgia? How about coming back to Norway with us? Just until university starts back up in the fall mind you.\"\n\nThe girl looked from him to Monika and then Kirsty as she nervously chewed her lower lip. \"I don't know. I probably shouldn't. My father won't like it.\"\n\n\"It would be a huge help, Georgia. It may take months for my oldest brother to recover. Our mother will be fussing over him and won't be much help with Monika. Mikael and I will have to be at sea most of the time or we'll lose the family business. And with Kirsty's pregnancy, well, it would be a real blessing. We could use your help here,\" Bjorn pleaded their case.\n\nGeorgia sighed as she looked down at Monika still hanging onto her leg, \"Okay, I guess. For a few weeks though. Just until your brother is well.\"\n\n\"We'll have you back here in time for your classes, you have my word,\" Mikael promised.\n\n\"I really am not comfortable with you going on a boat for several days without knowing the full extent of your injuries, young lady,\" Kirsty's father added. \"Especially with my granddaughter relying upon you. What if you have broken ribs and your lung collapses while you are with the child?\"\n\nKirsty watched as her friend withdrew once more. She feared that all of their ground would be lost, \"How about a compromise, Daddy? You check Georgia out here quickly.\" She turned to the young woman, \"I'll stay with you the whole time.\" \n\n\"For now that would do,\" her father agreed. \n\nGeorgia shifted nervously from side to side as if reconsidering the whole thing. \"Georgia Homdling,\" Monika once more had the final say as the girl nodded her head slowly. \n\nKirsty let out the breath she had not known she was holding. Mikael might think this was only for a few weeks, but she would come up with some plan. She was not allowing the girl to come back here and be abused. No, she would think of something. \n\n\"Mikael, you and Monika, begin packing the van. And Bjorn, would you mind finishing breakfast while I help Daddy?\" She blushed, \"I might have made a tiny mess in the kitchen.\"\n\nBjorn chuckled, \"Only a tiny one?\" as he bent and kissed her.\n\nMikael knelt on the floor and spoke directly to Monika, \"You heard your Mama. We have to load all your toys into the van.\"\n\nThe child held tighter to the leg, \"Georgia Homdling. Please.\"\n\n\"She did it again\" Mikael smiled. \n\nGeorgie gently pried the child's arms away, \"Yes, Monika, I am going home with you. But you have to help your Daddy pack first. Can you do that?\"\n\nThe child smiled, nodded and released her death grip. She skipped away and would have been off out the door if the lock was not just out of reach. \n\nMikael bent and kissed Kirsty too. She noticed the way that Georgia's eyes flared in shock. Shit, she had forgotten one tiny detail. \n\nAnother person to come clean with about her three husbands. \"Oh, the tangled web we weave, when first we practice to deceive,\" she whispered beneath her breath as they all went their separate ways.\n\n***\n\nMikael was tense as he followed the young woman up the stairs of the apartment building that had definitely seen better days. Council flats, Kirsty had explained. He had not seen anything like them. Dark, reeking in the corners of urine, the only color was graffiti. If he had been glad to get his daughter and wife out of the city and back to the Holding, this was much worse. \n\nHe saw a little boy probably around Monika's age peek his head out between the steel bars of a door. His throat tightened. It was as if the child were a prisoner in his own home. What must it be like to grow up in a place like this?\n\nBut as much as he wished he could just grab the child and take him with them too, show him the joys of running free in his mother's wildflowers, breathing clean air and the relative quiet of the Holding with only the birds to sing their songs instead of the seemingly constant sirens of police and ambulance in this place, no, he knew that he could not save everyone.\n\nHe looked at the young woman, who had become so important to his daughter, as she struggled to climb the stairs. He knew why too. Kirsty had come crying to him as soon as her father was finished examining the girl. The things she had told him about the other injuries, the ones they could not see, turned his stomach and enraged him.\n\nNot that he had not left more than his share of bruises and marks upon his wife's body. Not that she had not found sitting difficult more than once after a night with the paddle or the canes or the tawse. \n\nBut there was a huge difference. That was consensual between a Dom and his submissive. A sadist and a masochist. He knew that she enjoyed...no, needed his pain...just as much as he did. That she chose to wear his marks. Even when little brother might have balked at the severity of them, she was the first to remind Bjorn of consent.\n\nThis is not consent. This was abuse. But what bothered him more than anything was...a father had done this to his daughter. Not that abuse was ever all right. Whether a girlfriend or wife or even a sub, whose consent had been violated. \n\nHe smiled, it might seem ironic. They, who had kidnapped their wife. Who had taken her. But even then, from the beginning, they had known that she was submissive. Yes, they may have pushed her limits. He knew he certainly had, especially that first night. But he had been experienced enough to read her reactions. \n\nHe focused his mind on the present though. Now was not the time to think Freyja again that his wife, whom he had not really wanted, had turned out to be not only the perfect mother for his daughter as he had suspected she might be...but also the ideal masochist for his dark needs. \n\nThe girl stopped outside a door, \"You wait here. I'll just run in and grab my passport. Maybe a couple of things I need.\"\n\nHe shook his head, \"No, I'm going in with you.\"\n\nShe chewed her bottom lip that was already swollen and cracked, \"Please, it will be best this way,\" she pleaded.\n\n\"No, I am not allowing you in there alone.\"\n\n\"Papa probably is not even home, right now. He usually goes to the club with some of his friends by this time every day,\" she said as she studied the concrete beneath her feet.\n\nMikael was not certain whether that was a good thing or not. For certain, he did not want to end up in jail in this country. But some vengeful part of him was disappointed that he would not have the opportunity to teach the man a few lessons about how pain and helplessness felt. \n\n\"Then I will just wait with your mother while you get your stuff,\" he insisted as she fumbled with the lock. He saw her shoulders sag as she nodded reluctantly. He could only imagine the weight that they carried. \n\n\"Mama,\" she called out as the door swung inwards on a dark but immaculate room. \n\nThe tiny creature that appeared from out of a doorway might have once been as beautiful as her child, but it was more than just time that had ravished it. Like her child, one eye was swollen shut and her lip too was cut. Her nose was misshapen, obviously it had been broken, probably long before this. \n\nThe woman began to speak rapidly to her daughter. It took him a moment to place the language. He could not even be certain but he thought it was Slovakian, although it could have been a Polish dialect. He knew a smattering of several Eastern European languages, enough to pick up a word here or there, especially in context, he could piece it together. \n\nThe woman was not happy that her daughter had brought a stranger into their home. Her husband would be angry. What might he do this time? Mikael felt his fists tighten into balls at his side. \n\nHe caught a bit more as the girl spoke in a low, but clear voice. She explained that she was going with the family she worked for. That she would come back for school. That she would send money home. To hide it and not tell her father. That she would get them out of here somehow. \n\nWhy it should be her responsibility to save her mother infuriated him more. If the woman had not had the courage to leave her husband when the abuse began, he might not understand that, but how she could have allowed the man to turn his rage on her child was beyond him. \n\nHe had never wanted to raise his hand in anger to a woman, not even Greta when she tried to seduced his brothers or walked out on him...and Monika. But he did when he pieced together the woman's next words, \"How can you do this to me? Leave me here alone with him.\" \n\nHe wanted to think that perhaps he had misunderstood but the look of guilt and helplessness that showed on Georgia's face told him that his ragged interpretation had been correct. \"I'm sorry. I hate to disappointment Monika...you, but I can't...I'm sorry,\" tears were flowing from her cheek.\n\nHe stepped forward, he knew this was a risk. He did not want to traumatize the young woman more, but if he was going to save her...and each moment he spent in this place, he was more reluctant that she ever come back here. First though he had to get her out, so he took the chance. \n\nHe did what came naturally as he dropped his voice two octaves, \"Get your passport. Whatever things mean something to you...all of it. Leave the rest. Don't worry about your clothes or anything else. We will replace all those,\" he commanded.\n\nHe was not certain at first that his gamble was going to work. She chewed that lower lip again until he feared that it would open the cut again. Then she dropped her eyes and nodded slowly, \"Yes, Sir,\" she replied as she turned and disappeared down the hallway. \n\nWhether she was naturally submissive as his wife was or if she had been conditioned by a lifetime of abuse to obey, he did not know. Only time would tell. But one thing was certain. The abuse stopped now. This day. He would speak with Bjorn and Kirsty with Sven too when he was better. But from this point forward, the girl was under their protection. \n\nHe chuckled, his Mama had always complained about being the lone female. Pined for a daughter. At this rate, the women would outnumber them in no time. He knew too that once he explained the situation to Petrine, she would open her arms and heart to this young woman as she had to Kirsty...as she had tried with Greta even. \n\nHe reached into his back pocket and pulled out his wallet. He emptied it of several hundred pounds and pressed it into the older woman's hands. He knew his language skills were not sufficient to translate into Polish or Slovakian, so he hoped that the woman had picked up enough English to understand, \"Get out of here while you can.\"\n\nThe woman stared at the wad of notes in her hand for a moment as tears filled her eyes, \"I can't. I promised until death do us part,\" she whispered.\n\nHe shook his head at the dejected and hopeless look in the woman's dark eyes, \"She did not. She won't be coming back,\" he said with finality though he was not certain what they would do with the young woman, how they could even keep her in the country for that matter. But he was not having her come back to this mess that was for certain. \n\nShe was far quicker than he had thought she would be as Georgia appeared back down the hallway, carrying a backpack that looked much too heavy. Mikael reached for it, shouldering her burden that was far lighter than he had thought it would be. She smiled softly in gratitude and turned back to the woman.\n\n\"Mama, please, go to Uncle Davos. Promise me,\" she pleaded as closely as Mikael could translate anyway.\n\nBut the woman only shook her head and once more said that she could not. Though this time he was pleased to hear that she did not add more guilt to her daughter as the girl hugged her, \"I will get you out somehow, Mama.\" \n\nMikael toyed with the idea of picking the older woman up and merely kidnapping her. But the truth as he had realized earlier was...you cannot save everyone. Especially those who do not want to be saved. As cruel as it sounded he remembered one of his mother's American sayings about... 'making your bed, now lie in it.'\n\nAt least she would no longer force her child to share it, he smiled as politely as he could manage as he ushered the younger woman out of the darkness and into her new life...whatever that might turn out to be, it had to be better than this that was for certain.\n\n***\n\nBjorn would have sworn there was nothing more beautiful in the world than her face when he first woke up in the morning. But seeing \u00c6gir's Captive for the first time in almost six months might be a damned close second as he and Mikael drove the van up to the dock. Like the little boy he had once been he wanted to throw open his arms and run for the boat. \n\nBut his father and uncles would not be waiting with smiles and laughter on deck. Sven and Mikael would not scold him for not waiting for Mama. Still the feeling of purpose and meaning in his life remained. He had missed the sea. His ship. His family. His home. And that was where he was going now.\n\nHe wished, of course, that the reason was a happier one. But they had spoken to Mama on the phone right before leaving the house. Mikael had even talked for a moment with Sven. So things were improving. It was just time to start re-building their lives.\n\nAnd he had a new appreciation and understanding of how truly blessed his was. He had always loved it all. But now he understood, truly knew what it was like to live in the modern world. Civilized. He played the word over and over in his mind. His mother-in-law liked to throw it around whenever it suited her. But there was nothing civilized about that place.\n\nThe seas that they fished had more order to them than the chaos and unhappiness that man had created in places like London. The food chain, circle of life, whatever you called it, was more just than the artificial systems of man that allowed certain groups privilege over others, not because they were truly fitter, more suited to survival, but because of privilege, opportunities and the size of their bank accounts. \n\nNo, in that world, the truly fit, the survivors, who withstood far more than the privileged few ever could, were subjugated and enslaved by debt to inferior beings, who kept them in their place by whatever means necessary. \n\nIf Bjorn had detested the hierarchical system of town life, preferring the refuge of the Holding. Going into it only when absolutely necessary, at least there the natural order of things favored their family. They might not be loved, their unusual ways might be whispered about behind their backs, hell their 'cousins' might even occasionally grow so bold as to pick fights, but they were the top of the food change. Able to hold their own, defend what was theirs.\n\nHe forced himself to wait by the van as Kirsty's father pulled their car up next to them. He glanced at Mikael, saw his brother too smile at the sight of their wife and his daughter. ",
        "Was it his imagination or did his brother's face already bear more lines and creases? The weight of leadership that had been Sven's for so long. \n\nHe smiled as he watched his niece. No, his other daughter. After months being not just uncle, but surrogate father, he understood. His wife was right. If they were going to survive this storm called modernity, this family had to change and adapt. And that was one big way. No more silly divides, what belonged to one belonged to all whether that was responsibility or children or their wife. \n\nJealousy had to die. He had to leave the last of it...here in this place where such things as ownership, rank and titles began. They were brothers. Family. What hurt one hurt them all. What brought happiness gave them all joy. \n\nHe watched as she got out of the car, stretching and rubbing her back. It was her. She had done this. All of it. Her open and giving heart had changed them all. He choked back tears as he watched her open the back door of the car. He saw Mikael smile broaden as he too headed towards the other vehicle and their family. \n\nBjorn put a restraining hand on his shoulder. He took another cloudy look at their wife as he forced the words out. \"I love you, big brother,\" words that had been a lifetime coming.\n\nMikael chuckled and ruffled his hair, \"I love you too, kiddo. Just don't try that shit with Sven. One heart attack is enough,\" he joked as he wrapped his arm about Bjorn's shoulder and together they went to greet the others.\n\n***\n\nKirsty smiled as she watched her husbands walk towards her arm-in-arm. Just the sea air had been enough to lift her spirits, free her soul, after months in bondage. But this...the smiles on their faces...it was almost enough to burst her heart. \n\nFamily. Home. Words that she had never truly understood until they 'captured' her. She felt the cool sea breeze caress the warm tears as they fell from the corner of her eyes. But these were happy tears. \n\nSure, they might still have battles to fight. Wars to be won. Dragging Sven into this kicking and screaming would not be easy. But they would...their survival depended upon it. Family and home. She wrapped an arm about each of their waists and laid her head where their shoulders met. \"Take me home,\" she whispered as each bent and kissed one of her cheeks. \n\n\"Gladly, lilla gumman.\"\n\n\"Say good-bye to your father and this place, sweetheart,\" Bjorn whispered. \n\nShe pulled her head up and nodded. Georgia was watching them as she struggled to contain Monika, who had recognized the ship the moment she saw it. Of course, \u00c6gir's Captive was much too difficult a word for the little girl, but boat was her new favorite. \n\nKirsty could see the anxiety, almost fear, on Georgia's face. It had not been easy explaining the whole complicated issue of polyandry and three husbands to the girl, who had grown up around nothing but abuse. \n\nShe had held off for now on the BDSM side of things. Tackling the complexities of the difference between abuse and consensual play would be challenging. But for now, just allowing the young woman to see healthy affection between them would be a first step to building that foundation. \n\n\"We need to unpack the van, elskling. You get the girl and Monika set up in our old quarters for now. I will pull some extra bedding and do up a makeshift bunk for Karl on the bridge,\" Mikael said. \n\nBut before she could even obey, a figure came racing across the asphalt, waving her arms. \"Wait. Wait for me.\"\n\nKirsty chuckled as Roz almost tripped in her pumps. Her friend was winded by the time she joined them. \"Are you coming with us too?\" Kirsty joked.\n\nRoz's expression turned wistful for a moment, \"No, sugar, but I couldn't let you leave without saying a proper good-bye,\" she wrapped her in a bear hug. \"You have no idea how much I'm going to miss you, sweetie.\" \n\nKirsty returned her friend's embrace, \"Me too. But we'll video message. Every day. I promise.\"\n\nHer friend laughed as she drew back from the embrace, wiping the back of her hand across her eyes to clear away the tears. She turned towards Kirsty's husbands, tapping Mikael on the side of the head, \"That's for not telling me why you turned me down, stud muffin.\"\n\n\"Besides the fact that I love my wife to pieces, you scare me, woman,\" he teased.\n\nBjorn shook his head as he too embraced their friend, \"You have no idea, big brother. Thank you, Roz. Thank you for everything. Believe it or not, I think I'll miss you too. Promise us that you'll come and visit? I want to show you our home.\"\n\n\"Homdling, Homdling,\" Monika jumped up and down holding Georgia's hand. \n\nRoz turned towards them, \"What are you doing here, sweetie? You come to see this bunch off too?\"\n\nKirsty noticed how uncomfortable the girl was explaining the situation as she shook her head, \"No, she's agreed to spend the rest of the summer with us. Help me out with Monika while Sven recovers and we rebuild our lives.\"\n\nHer friend nodded her head before walking over to the young woman and embracing her too. Georgia flinched and moaned a bit. Kirsty felt the anger rising inside of her again. She had barely contained the rage while her father examined the girl. \n\nIn addition, to the broken arm, black eye and busted lip, her daddy was almost certain that there were a couple of broken ribs. He had wrapped her chest for support just in case. There were also horrible bruise and cuts all over the rest of her body too. It had taken quite a bit of coaxing but she finally had been able to learn that Georgia's father had used a belt on her back...the buckle end of it.\n\nBut no one knew that except her and her father. She had not dared tell Mikael or Bjorn. They were upset enough as it was about what happened to the young woman. She could not afford for them to go after the man...as much as she would actually like to be there to see it. \n\nAnd she would. Hell, she would not mind taking Herm\u00f3\u00f0ur or even T\u00fdr to the man's back. She might not be a switch like Roz but she could definitely enjoy stripping the skin from his back as he had his daughter's.\n\nRoz drew back from the hug and looked towards Kirsty, who only shook her head in explanation to the unspoken questions in her eyes. She nodded her dark head and turned back to the girl, whose eyes were still down, \"I know this lot will take good care of you, darlin'. Let them, you hear me?\" \n\nKirsty frowned for a moment at the clear tone of command in Roz's voice. But the tender way that her friend caressed the unspilled tears from the younger woman's brown eyes reminded her of the couple of times that her friends had taken Monika to the park together. \n\nWhat had they talked about then? She knew herself how easy it was to confide in Roz. Had Georgia told her what she had not shared with them? Kirsty doubted it, the girl was so withdrawn. Nonetheless, she of all people knew how good Roz was at 'just knowing' stuff. \n\n\"Yes, Ma'am,\" the girl whispered as Roz squeezed her hand this time.\n\n\"That's my good girl,\" she said as she bent and kissed her on the cheek. The corner of her swollen, busted lip was more accurate. \n\nKirsty felt her own protective nature where this girl was concerned rising its head. But rather than being frightened or withdrawing more, Georgia nodded her head and forced a smile as she returned her friend's gentle squeeze of fingers. \n\nShe looked away as the woman said their farewells. Of course, Roz had always been as open with her about being bi-sexual as she was the BDSM and poly. Just that her friend had never showed that kind of interest in her. \n\nClearly though she did have feelings for Georgia, though whether it was one-sided or not Kirsty could not tell. Not that it mattered now, because she was determined that the girl was not coming back here. \n\nStill the intimacy that she had briefly witnessed between the women opened her mind to other realities. She had never been homophobic, having more than one gay and lesbian acquaintance. But until that moment she had never considered how love was the same...whether it was between a man and a woman...two women...or two men. \n\nShe turned towards her father and wrapped her arms tightly about him, \"Thank you, Daddy...for being so understanding. And I'm glad, really, truly happy that you have found someone you love. I hope you'll come and visit us. Bring him...I can't wait to meet him.\"\n\nJames Dickens returned her embrace and kissed her forehead, \"Thank you, princess. We will. We just need some more time. But I promise we will visit. I have to meet my other son-in-law and these granddaughters after all,\" he smiled. \n\nHe paused for a long moment as he searched her face, \"Tell me you are happy, little girl. Tell me that you love them and that they take good care of you,\" she saw tears in his green eyes.\n\nShe brushed them away tenderly, \"Oh, yes, Daddy. More than you could ever know.\"\n\nHe nodded his head, \"Then that is all I could ask for.\" \n\nHe inhaled deeply, \"I'm sorry, Kirsty. I should have done this years ago. I should have found the courage...if not for me, then for you. I should have divorced your mother years ago. Taken you with me. I'm so sorry, little girl, so sorry for all the pain she caused you.\"\n\n\"Oh, Daddy, it was not just me. She was always so cruel to you. So hateful. It hurt me sometimes to see how she talked to you,\" she wiped away her own tears as she felt two strong hands on her shoulders. She could feel their love flowing into her, giving her strength. \n\n\"I love you, Daddy. I understand. Truly, I do.\" She gave him the greatest gift that she could, the one thing she knew her father needed most then...absolution. \"I forgive you, Daddy,\" she smiled as she held her father tightly once more. \n\n\"I hate to break this sweet shit up, but we need to go, lilla gumman,\" Mikael said as he squeezed her shoulder tighter.\n\nHer father drew back and met her husband's gaze, \"Lilla gumman...little girl?\"\n\n\"Yes, Sir,\" he nodded.\n\n\"That's right, treat her that way too,\" her father admonished her husband.\n\n\"Trust me, Sir, your daughter is the most precious thing in our lives,\" Bjorn said as he held out his hand. \n\nHer father took it and pulled her husband into a hug, \"Take care of her, son. Better than I did,\" he said as he released him and held open his arms for Mikael. \n\nMikael embraced him as well, \"You have our word on that. And we will hold you to that promise to visit when the girls are born. Just remember we're used to capturing things.\"\n\nHer father laughed, \"Damned Vikings, took over this whole country.\"\n\nThey were laughing as the others finally joined them, Monika practically dragging both Georgia and Roz one in each hand. Mikael bent and scoped his daughter high into the air, swinging her about as she giggled happily. He tucked her on his hip and wrapped his arm about Kirsty's shoulder as they walked, \"Time to go home.\"\n\n\"Homdling!\"\n\n\"Yes, Homdling, sweetie,\" Kirsty kissed her daughter. \"I swear that place has a new name.\"\n\nBjorn nodded as he wrapped his arm about Kirsty's waist on the other side, \"Yes, it is only right. A new name. A new wife as its shieldmaiden. And a new order of true brotherhood,\" he said as he looked to Mikael, who once more mussed his hair as together they stepped onto the deck of \u00c6gir's Captive...of their own free will."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "polyandry",
        "love",
        "romance",
        "marriage",
        "orgasm control",
        "orgasm conditioning",
        "domination",
        "submission",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashgirs-wife-ch-08"
}