{
    "title": "Loving Eyes",
    "pages": [
        "\"This meeting of the Kaplan University chapter of Sigma Sigma Sigma will come to order,\" said Sir Warwick Carlisle, president of the frat as he gaveled for silence. \"Give me your attention.\"\n\nThe brothers seated along the long mahogany table in the dining room of the frat house, dressed as usual for the monthly house business meeting in khaki trousers, white shirts, the green, gold and black diagonal stripe ties of the Tri-Sigs, and green blazers with gold buttons and the fraternity patch on the breast pocket quieted down. The seniors, all of whose Tri-Sig frat names were taken from the TV series Firefly, were nearest the head of the table. Next to them were the juniors whose house names had been taken from characters in Star Wars: The Clone Wars. At the lower half of the table sat the sophomores, named for various of the Marvel Comics X-Men. And at the foot sat the newly admitted members of the Tri-Sig pledge class, namesakes of the male crewmembers of Captain Jonathan Archer's NX-01 USS Enterprise. \n\n\"Dues and expenses are up to date, and the cooking rotation is working out well. I'm not as happy with the house-cleaning, however. Master Ki-Adi, Captain Ohnaka, you're the mentors for Trip and Hayes. They aren't doing a good job; this place is starting to look slovenly. Straighten them out.\"\n\nThe custom was that each junior was assigned a pledge to help along once they were admitted to membership. For the next two years, the mentors would guide their prot\u00e9g\u00e9s along the pathways of the frat, teaching them Sigma customs and taking responsibility for them. Good work by the freshmen reflected favorably on the juniors; likewise, failure to perform or bad acts reflected badly. How one brought his prot\u00e9g\u00e9 along counted for a great deal when the outgoing seniors selected the officers for the next year from amongst the juniors. The way Warwick had dealt with Jim Powell had had much to do with his being made president of the Kaplan chapter this year. The juniors named for a Jedi Master and a pirate captain glared at their charges with the silent promise they'd be ripped up one side and down the other for embarrassing them.\n\n\"Last item. The National Chapter has decided where the annual Spring Break trip will be. They've made a deal with a hotel in Manzanillo, on the southwest coast of Mexico. It's a big tourist port best known for its fishing and snorkeling. However, a member of the National Chapter who has been there reports that the beaches are excellent and a lot of Mexican and Canadian girls are to be seen there; and there are clubs in the town and at a couple of the resort hotels. Plus which, if you like tequila it's dirt cheap and because the cruise ships call there they have booze for sale to tourists for way below wholesale up here. Manzanillo hasn't been 'discovered' and done to death the way Puerto Vallarta, Cancun and Acapulco have been. And being it's so far south, it's outside the drug cartel war zone on our southern border.\n\n\"If you'd like to go, a sign-up sheet is posted on the bulletin board by my door, along with the airfare and room costs. A 50% deposit is due the first of next month, and the balance a month later. If you aren't paid in full a week before departure, you don't go; and there will be no refunds except for illness or a genuine family emergency.\n\n\"Any questions? No? Then I declare this meeting closed.\" He rapped the gavel. The brothers surged out of the dining room and up the stairs to Warwick's room to read the flyer and cost breakdown sheets he'd posted, and to sign up for the trip.\n\nAn hour later, Jim's concentration on the paper he was writing for his History of the Civil War class was broken by a knock on his door. A new brother stuck his head in.\n\n\"Professor X? The prez is looking for you.\"\n\n\"Thank you, Brother Mayweather. My respects to Sir Warwick, and I will be along in a minute.\" The freshman Tri-Sig looked at him oddly before he closed the door.\n\nA few minutes later, Jim knocked on Peter Carlisle's door on the second floor of the four story mansion. In the 1900s when the university had been founded in southern Dutchess County, the rich industrialist who had decided to be sure his not-overly-bright grandchildren had at least one college they could get into had taken over a failed seminary out in the sticks from New York City to be its campus. He also bought up the nearby summer places of New Yorkers who wanted country getaways in more fashionable areas; and in turn college fraternities (and later, sororities) purchased the mansions from his estate. The Tri-Sig chapter at Kaplan had been established just after World War I, and the brothers themselves had rebuilt the upper floors of their mansion into dorm rooms for the brethren and small suites for the officers. The principal difference was the suites on the second floor each had their own bathrooms, as opposed to communal baths on the upper floors where the rank and file brothers hung their hats. The frosh lived under the eaves in what had been servants' quarters back in the day, little changed from when the place had been built. The sophs and the juniors occupied the third floor, with a few lucky juniors on the second; the seniors had the larger rooms and suites on the second floor to call home. The first floor held the public rooms of the frat plus the dining room and the kitchen, while the basement had been converted into a private club and a laundry. It was generally conceded that the Sigma Sigma Sigma house had one of the better fraternity house layouts on campus.\n\n\"Come in!\" Jim heard through the heavy door. He walked in and over to the walnut office desk where his mentor was working on something. Peter leaned back in his executive chair and looked at his charge.\n\n\"You asked to see me, milord?\"\n\n\"Yes, Professor. Sit, sit, sit.\" Jim sprawled into Warwick's club chair as the chapter president looked him over. He was still the same gawky, awkward guy on the autism spectrum he'd first laid eyes on as a \"legacy\" the previous year, who usually looked past people rather than looking at them; was often unsure how to behave, especially around girls; and with the disconcerting habit of answering all questions honestly. He looked much better since Warwick had taken him in hand, guided him through buying a new wardrobe, ordering him to see a barber and a nail tech every two weeks without fail, and requiring him to read and be tested on a number of books on manners, but compared to the other Tri-Sigs he was still the resident geek. He frowned, unsure how to begin.\n\n\"I see you've signed up for Spring Break.\"\n\n\"Yes,\" Jim agreed, fishing his wallet out of his pocket. \"Do you want me to pay for it now, Warwick? I have my credit cards right here ...\"\n\n\"That's not why I asked you to come see me, Prof. I don't know how to say this gently \u2013\"\n\n\"Then just say it, boss. You've always been straight with me.\"\n\nWarwick sighed. \"Jim, are you really sure you want to do this? Don't you remember when happened last year, when you went to Fort Lauderdale and all of the girls you met either wouldn't talk to you or gave you a verbal smackdown? Remember that little Phi Mu who made a date to meet you at the Caf\u00e9 Matorano on Seminole Way, never showed, and then claimed she thought you meant the other Caf\u00e9 Matorano in downtown Lauderdale when you confronted her with it, right before she laughed in your face? After that bitch was done with you, you looked like a puppy that had had a tin can tied to its tail and been kicked down the street! You hardly talked to anybody after that, and you stayed in your room with the door locked. And when you did come out of your room, the only places you went were to the nearest fast food joints and the beach at night, when there was no one around.\"\n\n\"Look on the bright side, boss. I had a wonderful meal and I got to watch the best bits of The Godfather while I was eating.\"\n\n\"That's not the point! Dammit, I just don't want you hurt again.\n\n\"Look. I know you're autistic, though not as bad as many, and you have a memory that is eidetic or near enough you need a magnifying glass to see the difference. But even with all the work your brothers and I have done with you, for all practical purposes you might as well be one of George Lucas's droids when it comes to interacting with girls. Last spring break, you went down in flames in an American town where everyone speaks English. How do you think you're going to cope in a resort city where they no habla Inglese?\"\n\n\"Bastante bien. Yo hablo a espa\u00f1ol. Tenia cuatro a\u00f1os en la secundaria, y era miembro del Club Espa\u00f1ol.\"\n\nWarwick stared at him. \"You speak Spanish?\"\n\n\"Yes. Not like a native, of course, unless the native is from Castile. Castilian is kind of like High German compared to what they speak in Mexico, but even though I don't really think in it I can generally make myself understood. Sometimes on the weekends I drive down to Spanish Harlem to buy papayas and mangoes, and eat in little restaurants just to listen to the people talking, people from Central America and Puerto Rico mostly. It keeps my ear in.\"\n\n\"Well, that could help. Having a native-speaker may cause some girls from other colleges who are spring breaking to appreciate you more.\"\n\n\"Besides, milord, I know very well girls look at me like I belong in a zoo. But I'm not going on a drunken pussy hunt the way everyone else is. Manzanillo is famous for its sportfishing, snorkeling and scuba diving. I qualified as a diver in high school, and there is a wreck in a bay north of the city that's shallow enough for amateurs to try. It will be my first wreck dive. I expect to be so busy fishing and diving, I won't miss the non-attention of the girls.\" He did something he did not often do because he found it so difficult: he met Warwick's eyes. The chapter president's expression was somewhere between reluctance and acceptance.\n\n\"Well, if you're sure, Prof. You want to make the deposit now?\"\n\n\"No, I'll pay the whole thing, milord.\" Jim handed Warwick a black Amex card. He ran it though the card scanner he plugged into his cell phone and that was it: Jim Powell, known to his Tri-Sig brothers as Professor X, was going to Manzanillo.\n\n\n\n\nThat weekend, Jim drove home to the house he had inherited from his parents when he was fifteen. He walked into the kitchen and found his housekeeper Consuela and his cousin Fiona just sitting down to dinner. After being hugged by both of them, he joined them at the table. Dinner conversation consisted of catching up with each other. Both of them were astonished at his having signed up for the fraternity's trip to Mexico, but for different reasons.\n\n\"Querido ni\u00f1o, do you not follow the news?\" asked Consuela. \"The State Department has issued travel warnings for Mexico!\"\n\n\"Not for all of it, mi querida mami, and mostly just for the border region. Manzanillo is a tourist port on the Pacific side, down toward Guatemala. It's almost a thousand miles south of the U.S. border. The narcoterrorists don't bother with it because it's on the wrong side of Mexico and too far south for smuggling to us. From what I have read, the drug of choice there is alcohol. They sell a lot of whiskey, rum, tequila and such to tourists off the cruise ships and Canadians who've flown in for the sun and fun. It seems more Canadians than Americans go there.\"\n\n\"That's as may be, Jimmy, but are you a slow learner or what?\" asked Fiona. \"You've gone on these trips before. Junior year with the Spanish Club to Spain; senior year to the Dominican Republic; last spring to Fort Lauderdale. In high school, the girls in your class treated you like shit \u2013 \"\n\n\"Fiona Kilkerran, you mind your manners!\" snapped Consuelo. \"At home or not, ladies do not swear!\"\n\n\"I'm sorry, mamacita,\" said Fiona, momentarily abashed, \"but you know I'm right. They went out of their way to embarrass and humiliate Jimmy, and their attitude poisoned any chance he might have had with the Spanish and Costa Rican girls, who are very aware of how the chicas yanqui treat their classmates and respond appropriately. \n\n\"That trip you made to Fort Lauderdale last year? You came home paler and unhappier than you left! You'd have had more fun if you'd taken the train down to New York City, checked into a hotel, and picked up some bimbo in a bar every night after you spent the day seeing the sights! And now you want to go to Mexico? Do you think your frat rat buddies are going to treat you any better this year than last? That the girls will magically think you're a stud-muffin? Or are you just a glutton for punishment?\"\n\n\"Fee, I am not going on this trip to meet a girl and drag her into bed. I settled that in my own mind before I went to Sir Warwick to sign up. You know I'm a 'water baby.' Manzanillo is a water sports resort. They have sportfishing, parasailing, water-skiing, snorkeling, personal watercraft, and scuba. There is a wreck, the steamer San Luciano, in the next bay north that's shallow enough for snorkeling, and six or eight good dive sites are within easy reach. There is a lot more there than girls and booze, I assure you!\"\n\n\"Well, when you put it that way,\" said Fiona. Changing the subject, she went on, \"Barton Comstock and I are meeting tomorrow morning to go over the books. You want to tag along, even though it's not your turn?\"\n\n\"I only came home to pick up my dive gear. I'd be happy to go to your meeting with you.\" She smiled at him. She had had the usual home management courses in high school and had a sharp bullshit detector, but it was Jim who had taken accounting courses at the local community college after being declared an emancipated minor who could really read the accounts and understand what he was seeing.\n\nOver the next two months, Jim practiced his scuba technique in the Kaplan University pools, in the big pool with the 10 meter dive platform by choice. The school's swimmers and divers got used to seeing him at the bottom of the pool. After awhile, they even asked if he'd help them out by critiquing their entries into the water, which he was happy to do.\n\nAs Spring Break drew closer, the national chapter provided more information. The fraternity had chartered an Aeromexico 737 that would originate in New York with the northeastern brethren coming down by bus and the North Central Sigmas coming in on feeder flights from Chicago, Cleveland, Baltimore, and Pittsburgh before going on to Dallas \u2013 Fort Worth. There they would meet up with other flights with Tri-Sigs from the West Coast and the Southeast aboard before flying direct to Playa del Oro International outside Manzanillo. The flight time for the brothers flying out of New York would be about eight hours, but what with the stop at DFW to pick up the ones flying in from all over, the duration would be more on the order of nine or ten hours. According to Warwick, the airline was loading three times the amount of booze they normally carried. Jim made a mental note to make sure his electronics were fully charged and that he had at least two books with which to pass the time.\n\nThanks to the fraternity's connections with the Athletic Department (Warwick and Badger were wrestlers; Master Ki-Adi was a stand-out in track in the 100 meter and 400 meter dashes and the 4 x 100 and the 4 x 400 relays; and Anakin was the power hitter on the university's baseball team), the Tri-Sigs were able to borrow one of the motor coaches normally used to transport the university teams to away games. They loaded their luggage into the cargo bays at eight o'clock in the morning and made the trip to the airport to endure the indignities involved with clearing security before they could board the chartered airliner and begin the trip to Manzanillo.\n\nThe flight to Dallas was reasonably quiet, but after the two additional streams of Tri-Sigs came aboard and the airplane crossed into Mexican airspace, the rules on drinking and smoking changed and things got rowdy. The one-class airliner was at about 95% capacity, and Jim was seated alone just ahead of the galley in a row considered undesirable because the seats did not recline far.\n\n\"Do you mind if I sit down?\"\n\nJim looked up from his book, written in Spanish, to find one of the three stewardesses looking down at him with a winning smile.\n\n\"Please, sit, se\u00f1orita,\" he said in Spanish. She gracefully slid into the aisle seat next to him and sighed.\n\n\"You speak Spanish?\" she asked in that language.\n\n\"After a fashion,\" he said. \"No one is going to mistake me for a native, I have to work at it, but I can generally make myself understood.\"\n\nShe gestured to the book. \"And you read it, I see.\"\n\n\"Better than I speak it. My reading level is somewhere around the sixth or seventh grade; I still have trouble with colloquialisms and slang.\"\n\nShe eased off her shoes, sighing with relief as the two inch heel pumps dropped to the floor. \"I'm Graciana. Charter flights pay better than scheduled flights \u2013 we get a premium for taking them \u2013 but you never know what kind of passengers you'll get. I've been propositioned half a dozen times, my buttocks have been slapped, and three rude bastards have grabbed my breasts since we started out. American manners seem to correspond directly to the level of liquor in the bar; the fewer bottles left, the lower the standard of behavior! It's getting rowdy back there,\" she gestured disdainfully with the jerk of a thumb. \"I hope we land at Playa del Oro without my having to slap somebody.\"\n\n\"The solution may be more liquor, not less, for the rude ones. They can't hold as much as they think they can. A couple more drinks, and they will either pass out or dash to the bathroom to vomit their guts out.\"\n\n\"I shouldn't be bothering a gentleman like you with my problems.\"\n\n\"Oh, it is my pleasure. I seldom have the company of a beautiful woman with whom to practice my Spanish.\" Graciana and Jim conversed pleasantly and she accepted his offer of a foot massage gratefully. After a few minutes, she motioned to the book he had been studying before she had settled herself next to him.\n\n\"What are you reading?\"\n\n\"A guide to the dive sites of Manzanillo. I figure that if I visit one a day, I can do the good ones while I'm there, with a couple of days left over for fishing.\"\n\nShe looked at him. \"Do you have a charter booked yet?\"\n\n\"No.\"\n\nShe took a pad of notepaper from the seat pouch in front of her. Producing a pen, she wrote a few lines, tore the sheet loose, and handed it to him.\n\n\"That's the name and phone number of my cousin Emiliano. He is captain of the Ojo Grande, a charter boat in Manzanillo. He's been doing this for 30 years and knows where the fish are.\" Looking at Jim as she slipped back into her shoes, she fluttered her eyelashes like a fan and added, \"The second phone number is my cell phone. I'll be on vacation starting next week, and Emiliano has invited me to stay. Give me a call if you like. Who knows what might happen?\" She got up and returned to the galley as a ping! announced someone wanted something. Jim raised his eyebrows in surprise before he carefully folded the paper and tucked it into his wallet, a bemused smile on his face.\n\n\n\n\nAt Playa del Oro, he left the airplane (with a wink and a squeeze of the hand from Graciana as he deplaned), retrieved his suitcase, fishing and dive gear bags from the luggage carousel and joined the queue going to the Plaza del Mar. Dumping his gear on the table in his single room, he changed into beach wear and went back out the door. The lights from the hotel dimly illuminated the beach and the water's edge. Jim stood on the hard packed sand, feeling the waves wash over his feet, inhaling the clean salt air. Stepping out of his sandals, he set them above the high water mark, dropped his shirt on top of them, and waded into the Pacific for a swim.",
        "The water was calm, with gentle waves and no rip currents. The uniform support on his body felt good. Floating on his back, he heard splashing and raised his head to look shoreward. Backlit by the hotel lights, he saw a tall, slender girl running into the water before falling forward into a racing start and stroking out to sea. By chance, she stopped near him.\n\n\"Good evening,\" he said.\n\nShe turned, startled. \"Oh! Hello. I thought I was the only one out here. Just flew in from the University of British Columbia. It feels so good to get out of the cold, I couldn't wait to get into the water.\"\n\n\"So you came here on spring break for the water sports? I'm Jim, by the way,\" he added. \"Snorkeling and scuba?\"\n\n\"Hi. I'm Vicki. And yes, I'm looking forward to the diving. I just got my open water ticket and there are some great sites to dive here, or so I'm told.\"\n\n\"Perhaps we'll see each other, then. I'm down from New York \u2013 \"\n\n\"Ah, the Big Apple, eh?\"\n\n\"No, from about 2 hours north of there, though I go down to the city for the weekend now and then. Kaplan's located upstate, you see. There are boats out of Long Island that will take you out diving in Long Island Sound and offshore. I've had my open water certificate for a couple of years.\"\n\n\"Perhaps you'll be able to show me a few things, then.\"\n\n\"Perhaps,\" he smiled. To himself, he thought, \"This is going not at all badly.\"\n\n\"Vicki! Are you out there?\"\n\nJim looked toward the beach. A tall boy was standing there, waving. Vicki kicked to raise herself out of the water a bit and waved back, then struck out for the shore. Jim followed. She got out of the water, showing a nice figure, and trotted over to the fellow and exchanged a kiss, turning to look at Jim with her arm around his waist.\n\n\"Jim, I'd like you to meet my boyfriend, Paul. He's a diver, too. We go to uni together.\"\n\n\"How do you do?\" Jim said politely as they shook hands. He was thankful that the darkness hid what he was sure was a hangdog face. As usual, he had run across a pretty girl he had something in common with, only to find she had a boyfriend, significant other, or fianc\u00e9 on the line. They chatted as he put on his shirt, she wrapped a skirt around her waist, and both put sandals back on. They wandered back to the hotel where they could hear the thumping of a bass line coming from the club down the corridor past the lobby.\n\n\"Listen, we're going to hit the club for awhile before we turn in. Care to join us?\" asked Paul. \"Lots of girls came down with us from UBC.\"\n\n\"Thanks, but not tonight. You flew southeast and crossed one time zone going east, so it's early for you. I crossed two going west, so it's late for me. Some other night, perhaps.\"\n\n\"Some other time,\" Vicki agreed. With a wave, the pair headed off to go dancing. Jim looked after them, sighed, and walked to the bar adjacent to the restaurant, where he picked up a bottle of tequila extra a\u00f1ejo to take up to his room. He had learned during Hell Week freshman year the difference between the kind of tequila called \"tequila blanco\" in Mexico (which in his jaundiced opinion should have been called retampago blanco and run through the hills of Mexico in a souped-up flathead Ford with the federales in hot pursuit) and the good stuff favored by Sir Warwick. Perhaps after a couple of stiff drinks he wouldn't remember having gotten his hopes up.\n\n\n\n\nOver the next five days, each morning Jim and the other Spring Break divers boarded the boat and descended on one of the well-known sites in the area. Almost all of the divers were Canadians. As Vicki and Paul had said, there were lots of attractive girls in the group; the trouble was, almost all of them were attached, either to fellow scuba enthusiasts or to male undergrads from UBC. He had hopes for four girls that traveled in a pack who seemed to find him acceptable company. He made discreet inquiries as to their availability of Vicki, who promptly threw a bucket of cold water on the romantic fire he had been hoping to kindle.\n\n\"You're wasting your time trying to hook up with Peggy, Sonja, Tammy or Moriko, Jimmy. Peg's seeing Riko, and Sonja and Tammy are an item. Can't you tell they're gay?\"\n\nThat night, Jim killed what was left in the bottle he'd been nipping at since he'd arrived in Manzanillo, going on a solitary drunk. It seemed that not only couldn't he tell which girls were attached and which not, but he couldn't even tell the gays from the straights! How mortifying!\n\n\"Maybe I really should do what I told Warwick and Fiona I was going to do,\" he thought. \"Forget about trying to find romance \u2013 or sex, anyway \u2013 and just try to have a good time.\" He slowly slipped into a drunken sleep he was sure would be filled with female devils with heavenly bodies flaunting themselves before him, mocking him as unwanted, unattractive, undesirable, and unlovable.\n\nHe slept through the alarm next morning, rousing only when the maid made the door boom like a bass drum. The air conditioner was doing an excellent impersonation of a tornado, and when he stumbled into the shower he found himself transported to the deck of the Queen Mary in a howling North Atlantic gale. Three aspirins washed down with a bottle of San Pellegrino didn't seem to help.\n\nHe took a table in the shadiest corner of the dining room he could find, motioning to the waiter for a cup of black coffee. Before it arrived, Warwick slipped into the chair next to him, and a long-legged Indian girl in short-shorts and a pullover blouse with a vee neckline that ended somewhere south of her sternum slid onto his lap.\n\n\"You look like a bad job of embalming,\" chuckled his mentor. He waved the waiter over and told him, \"Juan, a Morning After for my friend the Professor here, and huevos rancheros with Mexican rice on the side. Get it all down you; you'll feel better.\"\n\n\"Be cheerful quietly, milord,\" groaned Jim, wincing. \"Who's your friend?\"\n\n\"This is Pooja. We hooked up water-skiing yesterday and went clubbing last night,\" Warwick explained. \"We didn't see you out, but you must have really had a good time to end up in this condition!\"\n\n\"Not as good a time as the two of you obviously had,\" riposted Jim, causing Pooja to blush. \"She have any friends as good-looking as she is?\"\n\n\"None who are not attached, sorry,\" said the girl, her fingers twining a lock of Warwick's hair. \"Surely you don't have any trouble finding a girl to keep you company?\"\n\n\"The Prof's kind of shy,\" interposed Warwick, sparing Jim the necessity of answering and possibly poisoning the well with his habit of answering questions fully and honestly. Changing the subject, he said, \"I know that you brought your fishing rods with you. Have you signed up for a boat yet?\"\n\n\"No.\"\n\n\"Great! I'd like to go out fishing myself, and so would Tarpals, Ohnaka and Hayes. Can I trust you to make the deal for us? Who knows, honey \u2013 \" this to Pooja \u2013 \"I might catch something we can have for dinner!\"\n\nThe food that had been ordered arrived. Pooja and Warwick watched with amusement as Jim warily eyed the Morning After, which appeared to have a tomato juice base, steeled himself to the necessity, and with resolution grabbed the glass and knocked it off in three long swallows, eyes squeezed shut. He shuddered a couple of times, and his eyes opened slowly as it dawned on him he just might live.\n\n\"After I eat, I'll go make a couple of phone calls. You're in 531, right? When I have the deal made, I'll call you with the details. You relay it on to the guys, okay?\"\n\n\"Okay. I think we'll be staying in this afternoon,\" said Warwick, caressing Pooja's arm and collarbone with a stroking finger, eliciting a purr from her. They got up and with arms twined around each other's waists, walked toward the elevators. Jim looked enviously after them.\n\nThe eggs and rice plus the Morning After did perk Jim up. Back in his room, he took out the note Graciana had given him and used his satellite phone to dial the number.\n\n\"Hola?\"\n\n\"Buenas tardes. Tengo el honor de hablar con el Capit\u00e1n Emiliano?\"\n\n\"Si. And,\" Emiliano said, shifting languages, \"I speak English.\"\n\n\"Far better than my poor Spanish, I am sure. My name is Jim Powell. Your cousin Graciana gave me your number. A group of friends and I would like to charter the Ojo Grande for a day's fishing, if you have a day free.\"\n\n\"How many of you would there be in your party, Se\u00f1or Jim?\"\n\n\"Five, including myself.\"\n\n\"Do you all have fishing tackle?\"\n\nJim frowned. \"A good question, Captain. I have my own, but I don't believe my friends do. Can you supply them?\"\n\n\"Four? There will be no problem. Now, what sort of fishing did you have in mind? Sharks, sailfish, something of that nature?\"\n\n\"No. Something we can eat for dinner. Can you accommodate us?\"\n\n\"At this time of the year, you are lucky. We have reports of albacore and yellowfin tuna, yellowtails, madrigal, bonito, sierras \u2013 how do you say, mackerel \u2013 and dorado. I am sure we can find something for you to catch.\n\n\"Now, about the cost of the charter ...\"\n\nThe two bargained back and forth and eventually settled on a price that included fishing tackle, bait, snacks, a couple of cases of beer, and delivering any fish caught to the hotel kitchen. Along the way, they acquired respect for each other.\n\n\"That's it, then,\" Jim finally said. \"What time should we meet you at the slip?\"\n\n\"Five o'clock in the morning, my friend. You can nap on the way to the fishing grounds; it's about a three hour trip.\"\n\n\"We will be there. Please give my respects to Graciana when next you speak to her, Captain. Goodbye.\"\n\n\"Buenas tardes, mi amigo.\"\n\nFive A.M. found the Tri-Sig fishing party standing on the dock looking at the Ojo Grande. She was nowhere near new, but had an air about her that spoke of careful maintenance and many battles fought and won with the sea. She was a prewar design that looked like a cross between Quint's Orca from Jaws and the Queen Conch that Humphrey Bogart drove as Captain Harry Morgan in To Have And Have Not, with a pulpit jutting ahead of her bluff bow for spotting when billfishing and a pair of fighting chairs mounted by the transom for those going out after the big ones. The overhead extended partway over the after deck, and there was a cabin ahead of the helm where fishermen could shelter from the rain, make coffee, or nap going to and from port. They trooped aboard, and after stowing their gear headed for the beer, the coffee, or a couch bench to nap, as the mood moved them.\n\nWhen he woke up four hours later, Jim looked at the navigating screen by the helm station from which the boat was controlled. Emiliano, at the wheel, turned in his seat.\n\n\"You are surprised to find a GPS system aboard?\" he asked.\n\n\"Not at all, mi capit\u00e1n. GPS receivers went first to ships and ocean-going boats when the military released the technology to the private sector. When the cost dropped enough for them to go into cars, you know the technology had arrived, as the gossip columnists say. Now, smart phones have it.\"\n\n\"True. But, my friend,\" said the charter boat skipper, suddenly looking sad, \"it's been the death of good piloting and celestial navigation. I go back far enough to remember when Loran-C and piloting was all we had, and you had to really know what you were doing. Today, you could take a monkey from the jungles, teach him to keep the dot in the middle of the screen, lay in the course tracks, and have the ape get you to where you want to go. And I tell you truly, some of the so-called skippers out here know just about as much navigation as that monkey!\n\n\"But not me. I still keep my paper charts and coastal pilot books up to date, just in case. I haven't needed them yet, but if, God forbid, the GPS satellites ever stop working I will be ready. And again, that puts me ahead of some of these skippers who are more interested in seducing girls like my baby cousin Graciana than in navigating safely.\"\n\nHe looked at the screen and throttled back. \"May I suggest you get your friends up on deck? According to the talk, this is where we can expect to find schools of bonito. And where there are bonito, there may also be yellowfin and albacore.\"\n\nThe Tri-Sigs got themselves organized. Shortly afterwards, there were lines in the water, and before too long they had all the action they could handle. As Captain Emiliano had said, they were tied into a school of bonito. A variety of tuna, bonito are good fighters when hooked but not the sort of fish one brings home to the cook if there are albacore about. After a couple of hours of catching bonito, taking pictures and then releasing them, Jim's line took a hit powerful enough to bend the rod.\n\n\"Se\u00f1or Jim, I think you have an albacore on!\" said Julio, the stocky mate who had been helping the college students bait their hooks, boat the fish, and release them. \"Let him run, don't lock down the drag!\"\n\nThe albacore put up a good fight. He ran, was pulled back as Jim pumped the rod and cranked his reel, stripped more line off as he ran again, lost it when he ran toward the boat and Jim reeled it back in, but after half an hour of dashing to and fro the fish was finally heaved out of the water onto the deck.\n\n\"That is a big one,\" said Emiliano, expertly assessing the catch. \"85, 90 pounds if it's an ounce. That's enough tuna to feed this party and your girls two or three dinners, with enough left for sandwiches. Julio, while you're taking care of it, I'm going to run north for a while. There may be more albacore up-current from here along the canyon lines.\"\n\nThe fishermen left the deck, going below to open beers, relax, and congratulate Jim on his tuna. He accepted their praise modestly, and had just put down an empty cerveza when an ungodly whine and thumping came from the after deck. They poured up the companionway just in time to see the captain shut down the engine and Julio yank the section of the deck that concealed it open. A cloud of smoke rose out of the compartment, but no flames followed. What looked like a pump of some kind was smouldering.\n\n\"That will be a problem,\" said Emiliano grimly. \"The intake pump and filter are damaged. I would love to know how the mujer perra got to this state.\"\n\n\"If you have a ladder and a safety line and there are no sharks about, I'll go over the side and take a look,\" volunteered Jim.\n\n\"I would be grateful.\"\n\nJim kept a swimsuit, a mask, a snorkel, and a dive knife in with his fishing gear, just in case. He changed while Julio broke out a ladder the Ojo Grande had aboard in case it became necessary to disentangle fishing lines from the propeller shaft, an occasional hazard of the game. Jim climbed down the ladder and took a deep breath before disappearing beneath the surface. He reappeared a minute later. Taking the snorkel out of his mouth, he called, \"Give me a bucket and a long screwdriver.\"\n\nJulio handed down the requested items and he submerged again. This time he stayed under for almost two minutes before surfacing and climbing out of the water. He handed the bucket to Emiliano.\n\n\"I think this is the culprit, mi capit\u00e1n.\"\n\nSmall chunks of a dark, tarry substance sat in the bucket. Emiliano looked at it with loathing.\n\n\"Where did you find this?\"\n\n\"I pried out of the cooling water inlet. I don't know what it is, but it's pretty stiff; it took some digging to get this much out. If it got into the intake pump, we aren't going anywhere.\"\n\nThe captain loosed a torrent of explosive Spanish profanity, glaring at the gunk that had stopped his beloved boat. Jim couldn't understand more than every third or fourth word and some were not in his vocabulary; but from what he did get, Emiliano was damning the captain and crew of the ship that had dumped this crap overboard to the deepest depths of hell with red-hot pitchforks stuck up their asses. When he wound down, Jim looked at him and said, \"With respect, now that we are past that we have to figure out how to get cooling water to the engine so we can run for the beach. You have an intake pump that feeds filtered water to the water jacket and then over the side after one pass through the engine, yes?\"\n\n\"Yes. The water goes from the centrifugal filter pump to the circulating pump.\"\n\n\"So all we have to do is rig up a filter and let the circulator pull water directly into the cooling system.\" Jim's eyes went a little out of focus as he looked at the engine, around the deck, and then wandered down into the cabin muttering to himself.\n\n\"Has he gone mad?\" asked Julio quietly.\n\n\"Not at all,\" said Warwick. \"I've seen this before. He's one of the Scroungers on our fraternity's Junkyard Challenge team. A few times a year, some of the Greeks field teams to build something, a challenge using nothing what's in a junkyard. The teams have 24 hours to build whatever it is, and then they race them in front of a crowd. The money raised goes to a charity of the winning frat or sorority's choice.\n\n\"When Jim gets an idea he pursues it to the end, and his ideas are usually worth pursuing. He's got one now; I know the signs.\"\n\nJim came back from the cabin holding two coffee cans and a mesh shirt of Ohnaka's. He was looking past Emiliano at a blueprint only he could see.\n\n\"Captain, I think I have a solution to the problem. I can build a filter out of these cans and this shirt. I attach it to the hose Julio was using to wash down the deck, and shove that into the intake of the circulating pump. It won't pull as much water as usual, but if you run the engine slow you should be able to limp to a port of refuge.\"\n\n\"How will you keep the filter down?\"\n\n\"We use all the fishing sinkers you have, mi capit\u00e1n.\"\n\nThe Mexican considered, and nodded. \"We'll try it. Use whatever you need that isn't attached to the engine or the steering. It's better than sitting here adrift.\"\n\nAn hour later, the wash hose had been transformed into an intake line, tied into the circulating pump. The filter \u2013 the coffee cans perforated into a sieve and nested, with the cut up mesh shirt threaded and tied onto stiff wire bent into two spirals inside to catch anything that got through the holes in the cans \u2013 was on the end of the hose about eight feet below the surface, held out from the side by two fishing rods. Lead sinkers wired to the can weighted it down so it would not rise too much in the wake when the Ojo Grande was underway.\n\nEmiliano shook his head at the inelegant improvisation, but reluctantly started the engine and watched the temperature gauge like a hawk. After three minutes idling, the gauge was still in the green. Crossing himself, he engaged the propeller and the charter boat gathered way. Slowly he worked up to four knots, the most Jim thought his jury rig would stand. The temperature climbed some, but stayed in the green. At the captain's direction, Julio hoisted the ball \u2013 diamond \u2013 ball signal of a vessel restricted in its ability to maneuver. At such a slow speed, the nearest port was a long four hours away.\n\n\n\n\nThe sun had long since set when the lights of Chicalo, a little village 120 miles north of Manzanillo, came into view. Chicalo was among the well-kept secrets of Mexico's Colima coast. Off the beaten track from Manzanillo, Puerto Vallarta and Acapulco, although it was on the Mexican coastal highway that wound its way down to Guatemala few tourists ever came by road; the easiest way to access the place was by boat. Tycoons, producers, directors, and movie stars who enjoyed fishing had been using Chicalo as a getaway since the days of Rudolph Valentino, Gloria Swanson, Douglas Fairbanks, Mary Pickford, and Ramon Novarro. During billfishing season, it wasn't unusual for a dozen or more yachts to be anchored just offshore, but at this time of the year the town looked like any other sleepy Mexican fishing village. The passengers and crew gave a collective sigh of relief as the Ojo Grande came alongside the dock and Emiliano cut the engine.",
        "\"What happens now?\" Jim asked Emiliano as they helped Julio bring in the field-expedient filter that had enabled them to get to shore. The rest of the Tri-Sigs had gone on ahead to the lights of the restaurant and hotel they could see from the waterfront.\n\n\"We go up to the Hotel Azul, register, and you gringos go eat while I try to get through on the tel\u00e9fono to my wife. There is no cell phone service out here, and the long distance phone lines are out as often as they are working. When I can get through, I will tell Maria what we need and she will pass it on to her cousin Marco the Wonder Mechanic. He will get the parts, load up his little truck, and bring them up here, a 275 mile trip each way; and then Julio and I can replace the filter and pump.\"\n\nThe captain gave Jim a hand onto the pier as he continued, \"Before you ask, my friend, I would not let Marco work on the Ojo Grande's engine if my life depended on it \u2013 which, when you come to think of it, my life really does, as well as my passengers and crew. He can be trusted to do simple things, but not something like replacing that filter system. But he could perhaps take four of you back to Manzanillo, if two do not mind traveling in the back of the pickup.\"\n\n\"There are five of us, you know, mi capit\u00e1n.\"\n\n\"The others are not creatures of the sea. You are a diver. You know as well as I that the entire intake line will have to be removed and replaced because of that garbage in the pipe, and that replacing the line will be the hardest part of the repair work. I had hoped you would do me the honor of assisting us with the repairs and then sailing back to Manzanillo as my guest.\"\n\n\"I would be honored to assist, Emiliano. However, the beach here seems to be clean sand without rocks. Have you considered laying the boat along the sand at high tide and careening her, as captains did in the Age of Sail when ships far from a shipyard needed hull repairs? We could brace her on the seaward side to stop her rolling back as the tide fell, and do the work in the air instead of under water.\"\n\nEmiliano looked intently at Jim as they entered the hotel lobby. \"I knew I was not mistaken in asking you to stay on, my friend. I would not have thought of that.\" He banged the bell on the desk for service.\n\n\"And you also did not think to ask me for this, mi capit\u00e1n.\" Jin handed Emiliano his phone. \"It's a satellite phone; you can call anywhere in the world with it. Just dial the country's phone code before you dial the number, it's required. Mexico is 484.\" The captain took the phone, moved down the counter, dialed, and began to talk to an obviously upset wife on the other end of the line.\n\n\"You require assistance, se\u00f1or?\"\n\nJim turned to the clerk and received a shock. The woman behind the counter was the sort of woman Mexicans refer to as \"una catedral\" \u2013 a cathedral, for her height and beauty. She was nearly as tall as he was, with jet black hair encircled by a beaded headband parted in the middle and falling past her shoulders, and skin the color of freshly ground cinnamon. Slender, she was much leggier than the squat Mexican peasant women he had seen in the stores and encountered as maids in the corridors of his hotel in Manzanillo. Dark brown almond eyes in an oval face put him in mind of a cat, with high cheekbones below and a slightly flattened nose with a high bridge between. She was dressed in what looked like a gold bustier over a bright red sleeveless blouse, and a skirt of unusual style; cut to miniskirt height in the front to show off those glorious legs, it rippled almost to ankle length at the back in the open-toed high heeled sandals she wore. A sort of cape made of translucent gold silk flowed from the shoulders of her blouse, caught by two narrow bands at her wrists and complemented by two wide gold bracelets on her upper arms. A heavy gold necklace dipped into the cleft between two firm breasts above the bustier. She was altogether the epitome of loveliness.\n\n\"Yes ... yes, I do,\" Jim stammered.\n\n\"You are with the other Americanos who came in a few minutes ago?\"\n\n\"Yes, se\u00f1orita. I don't suppose they reserved rooms for everyone on the Ojo Grande by any chance?\"\n\n\"No, se\u00f1or, only for themselves.\" One perfectly formed eyebrow arched, in question or comment Jim could not tell.\n\n\"That being so, we will need three rooms; one for me, one for Captain Emiliano, and one for Julio, the mate.\" Julio staggered into the lobby with a battered ice chest. The vision behind the counter fired off a command to him; he replied, \"Si, Do\u00f1a, sera hecho!\" with a bob of the head and went down the corridor past the stairs and the dining room to what had to be the hotel kitchen. She turned her attention back to Jim.\n\n\"It is later than you Americans usually dine, but it is just dinner time for us. Manuel!\"\n\nThe last shouted word brought a Mexican in a short jacket and tie from behind the bar of the cantina on the other side of the lobby. She gave him instructions, speaking slowly enough that this time Jim was able to understand her.\n\n\"When the captain of that charter boat has finished his phone call, take him and his mate to Rooms 307 and 308. Then inform the young Americans that dinner will be served in half an hour or so and see that they find the dining room. I will see to this one myself.\" Manuel nodded and walked back into the cantina.\n\nShe turned the registration book on its stand around, offering Jim a pen. \"If you would be good enough to sign the register, please?\" Noting his friends had already done so, Jim signed. He took out a credit card; she waved it aside. She came out from behind the counter and motioned for him to follow. He watched her derriere appreciatively as they went up the stairs to the fourth floor where she opened a door and waved him inside.\n\n\"I regret that I cannot house you with your friends,\" she explained as she opened windows, switched on lights and showed him where the ba\u00f1o was as he set his gear on the floor. \"There are fishermen in four rooms on their floor. Do you mind?\"\n\n\"Not at all, Do\u00f1a ...\" he paused significantly.\n\n\"Almira. I own the Hotel Azul.\" She extended a hand.\n\n\"A pleasure to meet you, Do\u00f1a Almira.\" He brought her hand to his lips and kissed it. She smiled with amusement but did not withdraw it.\n\n\"You seem to have watched too many costume dramas, Se\u00f1or Jim. I know many yanquis consider Mexico backward, but even we do not follow 19th Century customs.\"\n\n\"And we collectively are the poorer for the modern lapse of courtly manners and speech. How else can a poor gringo like myself express his appreciation of a lovely woman taking the time to show him to his room when she must surely have many more important things to do?\"\n\nShe smiled again. \"And what, pray, did a poor gringo such as yourself find to appreciate in my bringing you here?\"\n\n\"The grace and beauty with which you climbed the stairs, and the enchanting movement of your shapely legs and buttocks beneath your unusual skirt. All is concealed, but what is inferred fires my imagination and induces fantasies.\"\n\nShe chuckled softly. \"In the days of the caballeros, pretty speech such as that would have taken you far with the maidens of the nobility, good sir. But can you say it in Spanish?\"\n\n\"La gracia y la belleza con la que bajaste las escalaras y el movimento encantadora de sus torneada piernas y las nalgas debajo de t\u00fa falda inusual. Todo est\u00e1 oculto, pero lo que se infiere dispara mi imaginaci\u00f3n e induce fantasias.\"\n\nShe laughed with delight as she fluttered her eyelashes in the time-honored tradition. \"You flatter me, Se\u00f1or Jim. You have hidden depths that I am sure the girls of Chicalo will be delighted to plumb. But for now, as you said I have things to do. Another time, perhaps?\"\n\n\"I shall look forward to it, Do\u00f1a Almira.\" He brought her hand to his lips and kissed it again, and was surprised to receive a squeeze of his own fingers in return as she slowly slipped from his grasp. With a final smile from the doorway, she was gone.\n\nNot having a change of clothes, there was little Jim could do to prepare himself for dinner, but he did shower and shave with the disposable razor and tube of shaving soap before descending to the dining room with a book in hand. His fellow Tri-Sigs were seated at a round table and waved him to a vacant chair. Without an order having been placed, tuna steaks were brought to them, and to Emiliano and Julio as well. An ordinary white wine went well with the fish, and a flan was presented for dessert. Declining coffee, the five crossed the lobby to the cantina and settled at a long table with candles in jars providing ambience that went with the fishnets, stuffed marlin, mounted trophy fish, and photos of people posing with their catches on the walls. \n\nSeveral Mexican girls about their age were seated with older men, glasses and bottles cluttering the tabletops. Others lounging at the bar were surveying the room. All the girls were worthy of attention. Their outfits ranged from clubwear to outr\u00e9. \n\nOne wore what looked like sprayed-on pants with a molded leather halter top that showed off her belly-button pendant. Two were in sleeveless short dresses of shiny fabric cut almost to the navel, fitted so tightly it was a wonder they could breathe. Another was in a translucent gauze top worn without a brassiere that fastened at the neck and left her back bare almost to the hip, and a skirt made of sheer pleated fabric with contrasting embroidery at waist and hem. One girl standing with a shapely leg on the bar rail was in a micro-dress made of lace net fabric that completely covered her left arm and boobs, the embroidery concealing her nipples while leaving the right arm and shoulder bare, hemmed so high as to leave almost nothing to the imagination. Draped over a bar stool was a statuesque stunner in opaque black tights and skintight leather boots worn with a transparent, flowing blue silk top that allowed a clear view of huge breasts restrained by a fitted bikini top and cinched at the waist with a jeweled belt. The lowest heel in the place was not less than three inches. Altogether, the local talent in the bar was most impressive.\n\nOhnaka, the smooth operator of the bunch, beckoned to the barmaid. She glided to their table. A few years older than the girls adorning the bar and dressed in a traditional Mexican fiesta skirt and low-cut peasant blouse, she was a somewhat more rounded version of the young lovelies; in Tri-Sig slang a snuggle-bunny, a girl with pleasant features, good tits, and a nice round ass, but thicker in the waist and thigh than is fashionable where feminine beauty is defined as tall, thin, with high-set breasts and a narrow waist. She looked down at the seated frat rat.\n\n\"What will you have, muchacho?\"\n\n\"Sangria all around, a big pitcher \u2013 \" he looked around the table and no one demurred \u2013 \"and for the pretty girls waiting all alone at the bar, one of whatever they are drinking, with our compliments. And bring a glass for yourself when you bring the sangria, querida, if you like.\"\n\n\"That could be entertaining, muchacho,\" she said, running her fingers through his hair. \"I'm Raquella. You?\"\n\n\"Robert,\" he said, slipping an arm around her waist. She slid onto his lap for a minute, not resisting as his hands explored. She kissed his cheek.\n\n\"I'll be back in a moment, Roberto,\" she promised, regaining her feet. The other Tri-Sigs looked admiringly at their pickup artist as Raquella undulated toward the barmaid's station. Behind the bar Manuel got busy. Raquella took a loaded tray to the gringos' table with a gallon-sized pitcher of sangria and six glasses. She dealt them around and filled them, returning to the bar to serve the girls before rejoining the boys, sliding back onto Ohnaka's lap like she belonged there and taking a swig from her glass. The bevy of beauties took their drinks and came over to join them.\n\nThe process of getting to know one another began as the girls felt out the personalities of the boys. The encounter evolved into a party as they paired off with the Americans. Ximena, she of the royal blue transparent tunic, black tights and stupendous chichis, stood behind Hayes and massaged his neck, her tits resting on his face as he leaned his head back to nuzzle them. She wore a knowing, satisfied smile. Tarpals was making himself agreeable to Dayanara, the girl in the gauze top and bare back, one hand slowly caressing her silken skin as they drank sangria with linked arms. The brown-haired Idola in the painted-on, low-cut electric blue club dress had pulled her chair next to Warwick's, and had one arm around his shoulders and the other in his lap, squeezing the lump concealed by his shorts, while her friend Ardiana in the leather halter and jeans had draped herself over his shoulders and was whispering in his ear as she winked at Idola. Only Jim did not have himself a female companion; Novia, bare-legged in a silver-grey club dress a size too small for her, and Pilar, with her hair up in the embroidered lace dress with the bare right arm and black stiletto pumps, were acting as if they had gotten a zonk on Let's Make A Deal. They were sulky and made no bones about it, sitting as far from Jim as they could, barely replying to his attempts to make conversation, talking across him in Spanish as if he did not exist. Jim was upset by their lack of manners, but even more by the fact he had once again allowed himself to hope a chica might like him.\n\n\"It looks like one of us will be stuck with this worthless clown,\" said Novia in her native tongue.\n\n\"Not necessarily,\" replied Pilar. \"Look, put some money in the jukebox and get everybody to dance. We get everyone out on the dance floor, and then you lead the baboon out there. Meanwhile, Ardiana and I will pull those business types from the other table onto the floor, and then you and I pull a double shuffle. We cut Hersilla and Consolata out and bail with their papacitos rico in tow. By the time they and the yankee baboon here realize what's happened, we're out and away and off to our rooms with real men. That will leave them stuck with him!\"\n\n\"I like it.\" Turning to Jim, Novia asked in English, \"Hey, Jeem, you wanna dance? Give me some money for the maquina de discos.\"\n\n\"Yes, do,\" urged Pilar, parting her legs so he could see the black thong she wore and running a nail down his arm. \"I want to dance, you American stud.\"\n\n\"And the dance you want to do is the Chicalo Double Shuffle,\" Jim snapped, finally losing his temper. He surged to his feet and glared down at the two party girls, his face red and his voice rising.\n\n\"Mexican women are supposed to be passionate, with fire in their eyes, their hearts, and the pucha between their legs. The next time you want to ditch a babuino yanqui despistado, at least have the elementary courtesy to tell him he does not appeal to you, you putas sobreutilizadas!\" Snatching his book, he stalked to the bar, grabbed the first bottle that came to hand and barked at Manuel, \"Put it on my bill!\" before storming out.\n\nThe Hotel Azul had a patio in front of the entrance on the beach side circled by vintage wrought iron lamps with white globes, with bamboo tables, pipe-framed hammocks, and padded wicker chairs and couches for the guests. Jim dragged a small table to the couch under one of the lamp posts, setting his book on it before looking at the bottle he had snatched. It was mescal a\u00f1ejo, whatever that was. He did not really care, as long as it was booze. Uncorking the bottle, he took a swig. Expecting something raw, he was pleasantly surprised by a smoky flavor similar to a single malt whiskey, but with pronounced citrus notes, a hint of almonds, and a very smooth finish with no aftertaste.\n\n\"Well, if nothing else I'll go home with another tipple,\" he thought. He took another sip before settling into the corner of the couch. The globe over his head gave off enough light to read by despite the dance music coming from the bar that made his head ache. He lost himself in the written words, seeking consolation for his latest rejection. Every few pages, he took a sip of the mescal.\n\n\"Ten year old mescal a\u00f1ejo should be savored, not gulped like tequila blanco, Se\u00f1or Jim,\" said a voice. Jim looked up to see Almira standing over him, holding two snifters.\n\n\"I find treating it like brandy, warming it in the hand, enhances the flavor,\" she went on. She passed him one and extended the other, raising her eyebrows significantly. He set the book down and picked up the bottle, pouring until she tapped it to signal enough, then poured one for himself. He watched as Almira spilled a little of the mescal onto the ground; she saw him looking and smiled.\n\n\"The custom is to offer a little to Mayahuel, goddess of maguey and fertility. You can think of her as the patron saint of the agave plant, which gave the Aztec and the Maya cloth, rope, embroidery fiber, pulque, and of course mescal.\"\n\nJim immediately splashed a few drops of his drink on the ground, saying, \"O Mayahuel, I did not know of your thirst and the custom. I offer amends and will not forget in future.\"\n\n\"Do you really believe that?\"\n\n\"It is never wise to ignore local customs. For example, if you are in Hawaii and you see a naked redhead go surfing past in open water, spread the word and batten down the hatches. Madame Pele only comes out to surf when there is about to be a tsunami. Likewise, if you are in the American Southwest, you should not disrespect Thunderbird, who some Indians believe controls rain, the winds, and lightning. \n\n\"You will find libation rituals in almost all human cultures going back into prehistory. It is most often alcohol that's poured on the ground, but water, olive oil, honey, blood and even perfume have been used in different places at different times for various purposes, and continue to be. Honoring the gods and the spirits of the dead are far and away the most common reasons for libations.\" He took a swallow from his snifter, and Almira did the same. They sat companionably for a few moments without speaking.\n\nShe broke the silence. \"What are you reading?\"\n\nHe picked up the book. \"Miss One Thousand Spring Blossoms, by John Ball. It's a love story set in the electronics boom of the 1960s. An American engineer who is hopeless with women falls for Fujikoma, the premier geisha of Tokyo.\"\n\n\"That doesn't sound like a story with a happy ending.\"\n\n\"Ah, but there you are wrong. Fujikoma eventually falls in love with the engineer, but the course of love never runs smooth. I reread it now and again because like me Richard Seaton is awkward, gawky, backward, and a total failure with the ladies, yet in the end he gets the girl. It give me hope at times when I need it \u2013 like tonight.\"\n\n\"I don't understand.\"\n\nHe opened the novel, pointing to a particular page. \"This passage says it pretty well.\" He handed Almira the book and she read.\n\n\" 'You have babies?'\n\nFor a moment Seaton clamped his teeth and then faced the truth. 'I don't have a wife,' he said.\n\nCompassion swept his companion's features. 'She die?'\n\nAgain he shook his head, then he spread his palms upward to indicate the painful truth.\n\nShe understood, but the idea itself eluded her. 'Not want?' she asked. Her eyebrows were like gentle question marks.\n\nHe could not trust himself to sit there any longer, he stood up knowing how ungainly tall he must seem to her. Afraid that with her poor English she had offended him, she rose too and searched his face. A professional who was devoting her life to the art of entertaining men, she was suddenly fearful that she had failed. Also she felt a tug of compassion for the overgrown foreigner who had hired her and whose feelings she had unintentionally hurt.",
        "She had been schooled for years never to intrude into personal matters; now she had done so and disaster was the result. She was ashamed of her stupidity.\n\nThen he turned to her. 'Yes, I would like to have a nice girl. Very much.'\n\nAs daybreak had brought the miracle of Enlightenment to the Lord Buddha as he sat under the bodhi tree, at last she understood. It came to her in that moment of understanding that this man had never found his fulfillment \u2013 that no girl had wanted him.\"\n\nShe closed the book. He took another sip of the mescal. \"The story of my life as an Asperger's male,\" he said softly. \"Except that so far, no Masayo Kanno has appeared to provide solace, with or without a geisha house to complicate matters.\"\n\nAlmira signaled for a refill. They clinked glasses and drank in comfortable silence. The music changed from the thump-thump-thump of the dance club to something slower and smoother in the Mexican romantic style. Jim exhaled quietly.\n\n\"That's a major improvement in the ambience.\"\n\n\"Excuse me?\"\n\n\"One reason I dislike nightclubs is the loud, frenetic music they play. You see, I don't just hear music; I see it as well.\"\n\n\"You mean that you visualize the score the musicians are playing?\"\n\n\"No.\" He paused, trying to think how he could explain to Almira his perception of music. \"Have you seen the Disney movie Fantasia?\"\n\n\"Of course.\"\n\n\"Do you remember the sequence in the middle, where they brought the sound track to the center of the screen and played various instruments, and the sound track reacted to their pitch, timbre and volume?\"\n\n\"Yes.\"\n\nHe breathed a sigh of relief. \"That is sort of how I see music. But it's not just the shape of the waves; they have colors as well. For instance, trumpets are bright brass in their lower range, but the higher they go, the more silver their notes become. And if the trumpeter hits a clinker, the note stretches like an accordion fold made of sandpaper. French horns are a tarnished dark brass with red and blue overtones, like brass that has been in a fire. Higher notes are brighter, lower one duller. Violins are black threads vibrating at different speeds and shapes. All orchestral strings are black, just of various thicknesses. Percussion instruments press on my skin like sharpened hammers and their sound is like ink drops exploding in water, with the higher drums like snares crimson, tympani royal blue, and bass drums darkest violet. Cymbals and glockenspiels are silver starbursts at different altitudes in different patterns.\"\n\n\"And electric guitars and basses?\" she asked.\n\nJim shuddered. \"Basses are okay; they are just drops of india ink on white. But electric guitars! They're fluorescent-colored hacksaw edges flaring across my mind's eye except when plucked, and then they are drops of paint spattering on the canvas. Oddly, that is not true of banjos. Those come across as fast-flying BBs embedding themselves in patterns on the canvas as it scrolls along, and it's rather pleasant \u2013 sort of pointillist.\n\n\"Sounds have textures, too, especially vocalists. They vary quite a lot. Some sound like furs caressing the skin. Others are like silks. A few, mostly women with low voices, feel like smoke, just brushing you with an elusive feel like a sharpened fingernail down your back. And there are a few who are of what I call the 'screech and scream' school, who feel like coarse steel wool on a raw scrape. I can't stand screechers, they are beyond painful. They make want to stick my fingers in my ears.\n\n\"I dare say all this sounds a long way beyond weird to you, but you asked.\"\n\nAlmira said nothing, but sat back and studied him. The tension she had seen when she had come up to him that she had attributed to residual anger at those chochos estupidos in the cantina was gone, and the thought came to her that perhaps it had not been a result of anger at all, but rather physical pain caused by mindless dance club music meant to encourage boys and girls to flaunt their bodies on the dance floor. She tipped her glass, finishing her drink before she stood.\n\n\"Jim, when the weather is as pleasant as it is tonight, with just enough of a breeze to keep the mosquitoes away, it is my custom to go for a stroll on the beach. Would you care to join me?\" She kicked off her shoes and extended a hand to him. He kicked off his sandals, set down his drink, and took it. She gently pulled him to his feet and did not let go as they went down to the water. She led Jim down the beach, the two of them strolling companionably as the hotel lights faded behind them, leaving only the moon to guide their way. After a little, Almira spoke.\n\n\"There has always been a village here. Fish from our boats have fed the Aztecs, the Mayans, the Spaniards, and the Mexican people for longer than anyone can remember. We call ourselves a poor village, but no one starves in Chicalo. Today, although the village men still fish and sell their catch, a lot of the money we see comes from foreign turistas who come here for the sport.\n\n\"The hotel was built in the 1920s, after the Hollywood movie people discovered us. It gave them a place where newspaper reporters and news crews could not follow them; where they could relax and just be themselves. If you were to look at the pictures in the cantina and examine the old hotel registers, you'd find many stars from the Golden Age of Hollywood, posing with fish they caught, or having a tryst with their mistresses or their luces de amor.\n\n\"We still get a few guests from the entertainment business, but more from Mexico City than Hollywood; and more yet from the Mexican business world. If the walls of the Azul could talk, their stories would make a scandalous bestseller.\"\n\n\"How is it that you own the hotel, Almira? I would expect one so stunning as you to be starring in a telenovela, wined, dined and courted by the uber-wealthy, not running a \u2013 I'm sorry, but there is no way to put this delicately \u2013 a seaside bordello.\"\n\n\"I can take no credit for my looks, that rightly belonging to my sire and dam, but I enjoy the flattery that flows off your ready tongue; no woman resents being told she is such a beauty that she should be starring in television or the movies. Pray do not let my pro forma protests stop your extravagant sallies. Compared to my mother, I think I look plain, yet you speak of me as though I was Miss Universe.\" She smiled, her eyes sparkling, and squeezed his hand.\n\n\"As to the hotel itself, it is my inheritance.\" She stopped, looking back at the lights in the distance. \"I am a mestiza, the result of an affair between a married criolle businessman and his beautiful Mayan mistress, my mother. When she became pregnant, he settled money on her on the condition she leave Mexico City. She returned home to Chicalo and bought the Azul from the family that had built it. When I was born, he settled money on me as well for my education and the future. I grew up here, absorbing how to run a hotel through my skin. All areas, from housekeeping to cooking to tending bar, I learned by doing them. After mi madre was killed \u2013 she had flown up to Mexico City on a shopping trip, and was in the wrong place at the wrong time when two street gangs had a shootout \u2013 I took over as manager.\n\n\"Which brings us to what you referred to as the burdel aspect of my hotel. I am not a madam, and the Azul is not una casa de la alegria. Neither are the girls who frequent the cantinas putas, though I understand your confusion. They dress provocatively; they offer companionship in return for drinks and a good time; and they will, if they like, take a man to their beds and let him have his way with them. The next morning, the man is expected to give the girl a present. However, there is a difference.\n\n\"All these girls have other jobs during the day. Some are shop girls here in the town. A couple are daughters of landowners outside Chicalo, who want something more to do of an evening than pray the rosary. Some come here from nearby villages for the chance of a night on the town, a good time for which they will be well rewarded by their partners. At the most, girls like Pilar, Idola, and Novia could be called ... what is the phrase? ... semi-professionals.\n\n\"I have an arrangement with the girls who regularly have liaisons with men in my hotel. I allow them to keep rooms for a token rent, plus a third of any gift the man may bestow upon them, as long as they create no disturbances. A couple of them have places of their own in the village, and what happens there is not my affair.\" Almira smiled at her inadvertent pun, her teeth flashing in the moonlight. Jim thought her smile was one of the most attractive things he had seen since arriving at the Plaza del Mar.\n\n\"The same can be said of my waitresses and barmaids. Take Raquella, who is working in the cantina tonight and seems quite taken with your friend Roberto. She married young, to a fisherman, who drowned and left her with a toddler. They live with her grandparents, who are bakers in the village. She works here to get her son better things and put money into the family treasury. She has little opportunity for the sort of good times a pretty girl in her twenties deserves, and she has the same urges you hombres get. Women get se caliente demasiado and want to have a man quench his thirst with them. If I know Raquella \u2013 and I do \u2013 your amigo is going to have a long, sweet ride on the magic mountain, Raquella will have a satisfied expression on her face in the morning, and Roberto will be a little unsteady on his feet but looking smug, having pleasured his grateful lover all night and secured a willing bedmate for as long as his stay lasts.\"\n\n\"We have something in common, my Mayan princess. Like you, I lost my parents far too soon.\" She turned them around and they slowly started back, the occasional wave washing over their feet.\n\n\"Our family business is nothing so pleasant as yours, though it is as practical. We own a salvage yard. Grandfather started it, and brought my father and Uncle Bob into it, like you learning the business from the bottom up. Father began the same process with me. Uncle Bob and Aunt Lilah couldn't have children, so they adopted my cousin Fiona as a babe in arms, reluctantly on my aunt's part \u2013 she is in no way maternal.\n\n\"Mom and Dad were driving home on the parkway late one night after a night out in New York when a driver who was drugged out of her mind got on the highway going south on the northbound side at 100 miles an hour \u2013 that's about 160 kph \u2013 in an SUV. She hit them head on at a combined speed of 250 kph, and they died instantly. As you might guess, it was a closed casket funeral.\n\n\"In accordance with their will, I inherited Dad's majority holding in the yard, along with everything else. However, the will assigned guardianship to Uncle Bob and Aunt Lilah, something of which I did not approve. They had never really liked me; I think it had something to do with the partnership agreement between him and Dad that had had their shares going to each other before Fiona and I appeared. Even with Dad gone it meant my uncle could never be the real boss, with all the prestige that brings with it; I could overrule him or order him around simply by calling a stockholders' meeting, and he knew it. And resented it.\n\n\"The two of them moved from their ordinary suburban house into the mansion Grandpa had built and Dad had inherited as the elder son. They immediately took over the master suite that was Mom and Dad's, which I deeply resented; both that they moved into the suite, and the fact that they moved into my house without so much as a by-your-leave. And because I was a 14-year-old minor, there was nothing I could do about it.\n\n\"There was something wrong with their marriage. I was never told what it was, but I can make a good guess. About a year after they usurped the house, he started staying out late, taking long lunches and returning looking rumpled and smug, going to out of state conferences, that sort of thing. One night there was screaming in the master suite and Uncle Bob came out carrying a suitcase. He left, and I haven't seen him since.\n\n\"As part of the divorce Aunt Lilah ended up with Uncle Bob's forty percent of the business, but she also ended up with Fiona and me. She made no bones about the fact she was just waiting for the day we turned 18, so she could throw us both out. I guess it never occurred to her that the house was held in trust for me, and that when I turned 18 I could throw her out. She did not do much with the business, spending her days shopping, having her nails done, working out at the health spa, that sort of thing. She only went to the office every couple of weeks to examine the books and sign the payroll checks, or when protocol demanded she be present at a meeting or something.\n\n\"Some time after her divorce, she hooked up with a guy named Perry. He moved in with her, which I hated even more than Uncle Bob's taking over Mom and Dad's space. I thought he was a slimeball from the start, and it turned out I was right. After they had been together for a year, his eye started roving.\n\n\"Fiona is good-looking; tall, red hair, bright blue eyes, long legs, nice figure. She's something of a marimacho, a tomboy \u2013 or at least, she was. After Perry showed up, all of a sudden she started dressing girlier, but at the same time she became withdrawn. I thought she had just discovered boys, you know? I may be autistic, but that does not mean I don't see things.\n\n\"Then she came to my room late one night, crying. It turned out the cabron was forcing her to sleep with him as the price for us not being sent away to boarding school the way Aunt Lilah wanted, to get us out of 'her' house. She was apparently okay with Perry seducing Fee because he wasn't bothering her to have sex with him all the time; in any case, that was what he told Fee when she threatened to rat him out to Aunt Lilah. So I resolved to do something about the two of them. Being treated like you are an interloper in your own home by a couple of people who have no right to be there is a lot much, you know?\n\n\"First, I talked to K.C. Gogleigh, the lawyer Dad had used for all the company's legal business, whom Uncle Bob had dumped as the corporate attorney, and got some advice. Next, I installed spy cams in the rooms where Fee told me Perry had forced her, because the abnormal psychology books I read to get a grasp of the pathology said perverts have a comfort zone in which they prefer to do their sick things. Encoded signals feeding back to a dedicated laptop with no connection to the house router let me record what he was doing. Then I used a bank account that Dad had set up for me so I could buy presents for him and Mom without their finding out first, an account Aunt Lilah did not know I had, to hire a private investigator to find out everything I could about Perry. \n\n\"It turned out Fiona was a target of opportunity, but he was definitely a shady character who'd had a couple of brushes with the law. The PI retained a forensic accountant after irregularities in Perry's bank accounts turned up, and those in turn led the bean-counter to Aunt Lilah's playing fast and loose with the books at the yard. She was writing checks to a shell company and splitting the money with Perry. That in turn explained a few things I had wondered about after I took an accounting course in summer school and spent some time working in the office handling payroll and payments to the people we bought scrap metal and wrecked cars from.\" He paused.\n\n\"This sounds like something out of a telenovela. What happened then?\"\n\n\"We got footage of him abusing Fee, and I programmed her phone so all she had to do was press one button, my phone would ring with a particular ring, and I would come running. It went off one night when I had supposedly gone out with a friend to see a movie, but was really in the house. I had Dad's skeet gun. Perry was in the process of stripping Fee naked in Dad's home office when I slipped into the room. I smashed him behind the knee and when he hit the floor I butt-stroked him in the head and stunned him. I yanked down his pants to hobble him, gave Fee the shotgun and told her to watch him, and went to find Aunt Lilah. She was in the master bedroom; I grabbed her in a come-along, dragged her down to the office, and threw her into a chair. We confronted them, Lilah seated, Perry kneeling with his fingers laced behind his head and his pants around his ankles, with me covering both of them with the 12-gauge.\n\n\"I told Perry the Pervert that I had enough evidence to send him to prison and get him labeled a child molester; but I would let him go if he got up, walked out of the house in what he was wearing, left town, and never came back. He told me I didn't have the stones, so I gave him the butt right between the eyes and repeated what I had said. I told him to toss Fee his wallet, and she yanked out all his credit cards before tossing it back. He saw I meant it, got up, and limped out. A little later I watched his car drive away. One down.\n\n\"Then I turned my attention to Lilah, and told her what I thought of a frigada chapera who would allow her boyfriend to molest her daughter. She shot back that Fiona wasn't really her daughter and she did not care what happened to her. Fee got in one good backhand that spun Lilah's head before I could stop her. I told Fiona to go find Lilah's purse. While she was out of the room, I explained the facts of life to the bitch.\n\n\"If she would sign over her shares in the business to Fiona right then and there, and did not oppose our court petitions to become emancipated minors, I would permit her to walk out of the house in the clothes she was wearing and drive away without reporting her to the police for complicity in child abuse, embezzling, and misfeasance \u2013 \"\n\n\"Misfeasance? I do not know that word.\"\n\n\"It is a legal term meaning in business that the directors of a stock company have deliberately acted in an inappropriate way. As a guardian, it means to deliberately act in such a way as to harm the persons or interests of the minors whom the guardian is supposed to be protecting. I suspected she had tried to gain access to the trust fund Dad established for me; my PI reported she had talked to a lawyer about it, but the trust documents Mr. Gogleigh had drawn up were unbreakable, fortunately for me and indirectly for Fee.\n\n\"The hija de mil padres knew that she was beaten. In some ways, high functioning autistic males are like Vulcans: we do not lie, and we do not bluff. She knew I would do exactly what I had said I would do if she did not cooperate.\n\n\"So she hand-wrote what I dictated to her and irrevocably assigned ownership of the shares in the company she had gotten in her divorce to Fiona, while Fee emptied her purse. She relieved her of everything related to the company, her cell phone, and all the keys but the one for her car. We saw her to the front door and watched her drive away.\n\n\"The next day, after I told him what we'd done Mr. Gogleigh called in some favors and we saw the judge in his chambers. We walked in as wards of the court, and walked out as emancipated minors, legally adults for almost every purpose. Fiona took advantage of the decree to change her last name back to Kilkerran, the name she was born with. After the way her adoptive mother treated her, I don't blame her.\"\n\nJim's monologue had brought them back almost to the hotel path. Almira stopped and turned to face him.\n\n\"So you have no one waiting for you at home?\"\n\n\"Well, there is Consuela, our housekeeper. She's been the housekeeper all my life and was always a second mother to me. One of the conditions of the emancipation was that until we turn 21, we have someone in the house to keep an eye on us. Consuela has been mothering us since I lost my parents, so it was natural we would ask her to continue in that role. And Fiona is living at home while she goes to college, so it is not as though I am coming back to an empty house.\"",
        "She reflected he had not been joking when he said high functioning autistics were like Vulcans. \"What I meant was there is no special girl with come-hither eyes and un co\u00f1o caliente y h\u00famedo awaiting you on a perfumed couch, eager for your touch?\"\n\n\"Almira, thou most lovely, exotic, unequalled flower of Old Mexico, whose beauty puts the orchids of the jungle to shame and causes your less fortunate sisters to make deals with the Devil, my fraternity brothers like to joke that I could not pick up a girl in a women's prison if I walked in with a pocketful of pardons and a pen. I not only do not have a girl awaiting me on a perfumed couch, I not only have never been with a girl, I have never so much as been kissed by one.\" He looked down, suddenly ashamed that he had entered his second decade without ever knowing the loving touch of a woman.\n\nGentle fingers lifted his chin. Almira was standing very close.\n\n\"We can't have that, Jim.\"\n\nShe pressed her lips to his, one hand twining into his hair while the other wrapped around his waist. Her lips moved on his, teasing, easing them apart so her tongue could caress them and slide past into his mouth, urging him to use his lips and tongue on her as she had on him. His left arm slipped around her narrow waist beneath the cape, pulling her against him; she wiggled, settling herself comfortably. His right hand instinctively rose to her breast and tentatively squeezed it. She arched her back, pressing against his hand, her nipple a hard button through the thin silk of her top. She moaned against his mouth, savoring the feeling of her lips on his and his hand caressing her chichi.\n\nBreaking the kiss, she nipped his earlobe, whispering, \"Cari\u00f1o, pleasant as this is, the night has a thousand eyes and wagging tongues. Come, let us go to my place, where we can be as free of each other as I'd like.\" She pulled him up the path to the patio and across the lobby, arms around each other, pausing only to instruct the night clerk to put the book, shoes, glasses and bottle in Jim's room before they went up the stairs to the top.\n\nAlmira's penthouse occupied the top floor, inset enough from the sides to form a wraparound patio with retractable canopies, folding doors in the glass wall on the ocean side opening the living and dining areas to the outside. Fans in the high ceiling rotated slowly, moving the air and cooling the rooms comfortably. She went along the glass wall, pulling full-length curtains closed before returning to Jim. Kissing him and stroking his bare arms with her fingertips, she said, \"You'll find a bottle of pepper mescal in the bar. Pour us each a drink; it will ignite a fire in us, mi dulce amante. I am going to change into something more suitable for our night together.\" She disappeared into her suite.\n\nJim obediently set up the two drinks, a couple of ounces apiece. He cautiously tasted it; this variety of mescal a\u00f1ejo tasted of the smoke he had experienced with the bottle from the cantina, but had overtones of honey, mesquite, freshly ground pepper, and to his surprise, a faint flavor of grilled meat that put him in mind of really good barbecue. Remembering the local custom, he walked onto the patio and spilled a little from his glass, saying, \"Thank you, Mayahuel, for your compassion toward a poor gringo alone and far from home.\" He strolled back into the living room to the bar, turning as the bedroom door opened.\n\nAlmira stood there, hair brushed until it shone, dressed in three inch black stilettos, a black thong, a sheer black silk robe, perfume, and nothing else. Jim's penis instantly sprang to rigid attention. Slowly, sensuously, she walked to the bar and picked up her drink. Looking at him coyly through her long lashes, she tipped back the glass and lowered its level before leading Jim into her boudoir and shutting the door.\n\nHer bedroom was cream stucco with hardwood floors and dark Spanish Provincial furniture that would have looked at home in a mid-19th Century hacienda of the landed gentry; the room was dominated by a large four poster bed made up with white silk sheets. Candles in glass chimneys glowed on the bureau and the vanity, and incense drifted down from a high shelf, the air currents from the ceiling fan wafting it throughout the room. The atmosphere was out of a romance novel. She took his drink and set both goblets on the night table beside the bed before turning back to him.\n\nSlowly, gently, she unbuttoned and removed his shirt, trailing it to the floor. She wrapped her arms around him, feeling him trembling with the mixture of eagerness and apprehension felt by virgins when they realize they really are about to have sex for the very first time. They kissed again with open mouths, their tongues brushing and touching with desire as her hands moved over his back, the nails scratching the surface of his skin very lightly. He sighed against her mouth and dropped his hands to her buttocks, squeezing her nalgas, pulling her against him so she could feel the hard cock waiting for her. She responded by driving her tongue as deeply as she could into his mouth, moaning as she did.\n\nBreaking the french kiss, Almira kissed her way down his chest and stomach as she slowly sank to her knees. Undoing his belt and zipper, she drew the shorts and boxers down his legs until he could step out of them and stand naked before her. She smiled up at him and took hold of his prick with one hand, slowly masturbating him with her fist while she licked the frenum and the slit in his cockhead before opening her mouth to suck his dick.\n\nEyes closed, Jim concentrated on the sensations Almira was producing in his cock. She bobbed back and forth, each motion of her head taking in a bit more of his proud manhood until finally her nose was in his pubic hair while she deep-throated him. Her hands shifted to his ass and her strokes got longer and faster as she fellated him, her tongue and lips working on his prick to please and excite him. His hands dropped onto her head but he did not try to guide her. Nothing in his life had prepared him for how wonderful a good blowjob from one who knows how could be. It did not take her long to bring him to the point of climax.\n\n\"Mira my sweet, I'm about to pop! This is so good! So good! I'm going to \u2013 \"\n\nShe pulled back and closed her jaws slightly, her teeth holding just his cockhead inside as he erupted into her mouth, thick gouts of cum jetting out. When his prick stopped jerking, she allowed it to slip from her lips and looked up at him as he looked down at her to see his spunk on her tongue. Slowly and deliberately, she swallowed, giving him a glimpse of her empty mouth before she turned to licking the last of his ejaculate from his softening ramrod before she stood up again, pulling his hands to her waist.\n\n\"That was for both of us, querido, not merely for your pleasure alone. You are a young, handsome stud; y un semental virgen recibir\u00e1 su yegua terminar\u00e1 muy r\u00e1pidamente a menos que ella toma el borde primero. I want your first time with a woman to last; to show you how wonderful it can be to mount a woman and ride her to her completion and yours, instead of quick fumbles on a couch or en un autom\u00f3vil that represent the deflowering of too many newly come to their manhood. \n\n\"Does how I am dressed suggest anything to your fertile imagination, cari\u00f1o?\"\n\nJim's response was to pull her to him and kiss her inviting mouth, slowly, lovingly, and thoroughly. He kissed her cheek, down her neck, and along her breast until he reached the aureola. He pause here for a minute or two to suckle her nipple, laving it and nipping it with his teeth as one hand squeezed her firm tit.\n\n\"Not so hard, mi coraz\u00f3n! Gently nibble, do not bite!\"\n\nHe took the rebuke with good grace, kissing his way to her belly button, flicking his tongue into it, feeling her shiver and giggle at the sensation. He continued on over the curve of her belly to her thong, which he drew off over her hips and down her long, exquisitely shaped legs. She put a hand on his head to balance as she stepped out of them, and to her surprise felt him press her back against the bed so she fell backwards, her legs parting for her lover. He moved to her bare furrow, running his mouth over her labia before he pulled them apart to expose her inner lips and clitoris.\n\n\"What an exquisite flower it is that lies hidden between your legs, mi precioso! A red and pink-petaled orchid oozing its sweet nectar for a man to feast upon, like this.\" \n\nJim leaned forward and slowly licked the labia his fingers pulled apart, savoring the juices wetting them. Her sweetness excited him and his cock stiffened again as his partner moaned softly. He worked his way in, tickling her inner lips as he moved up to her clitoris. He ran his tongue the length of her pussy, seeing and feeling her clit swell and come out of its hood for him, the stamen of her pussy-flower. He began to lap up the female nectar her coochie secreted under his attentions, starting slowly and gradually licking faster. Mira moaned again and her buttocks tightened as she surrendered herself to the surprisingly talented tongue of her virgin lover. \n\nHe kept it up, shifting his attention to her clit, \"writing the alphabet\" along the clitoral shaft as he introduced Mira's chocho to first one, then two fingers. He slipped them in and out, slowly at first and then more quickly. He pressed up from within her co\u00f1o, using his finger as an anvil while his tonguetip tapped the bright pink bulb that topped the clitoral shaft as the hammer. Her hips thrust up against his face as she cried out from his attentions.\n\n\"Oh, si, papi! Si! Don't stop! Chupa mi toto, mi amor! You're so good! Use my pussy like that! Please! Don't stop! I am so close! I want to cum for you! Use me and bring me off! Make me, mi semental!\"\n\nHe got his hands under her buttocks and pulled her against his face, getting his mouth over her clitoral glans and labia minora. He sucked hard and her reaction was immediate.\n\n\"AIIEEE! Oh, papi!\"\n\nHer legs locked around his head and her whole body shook with the force of her climax, a spurt of love-syrup announcing her completion beyond any doubt. She fell back onto the bed, moaning sensuously as she tumbled into the afterglow of her climax. Mira had little time to enjoy it, though, for Jim did not let up on his lover. His fingers continued to stir her honeypot as his tongue worked her clit. She did not resist him at all, her words urging him on, urging him to use her body any way he wished.\n\n\"Oh, Jim! This is so good! I give you mi chichis y mi chocho! Use me, mi papacito rico! You are so good! You make me feel so good! Use me! Desgastar el camo!\"\n\nHe kept on licking and fingering her, pleasuring her powerfully as she moved under him. She thrust her hips into her face, groaning and calling his name as he worked her pussy, wanting the sensation of his teeth, tongue and fingers in her twat. Her fingers clenched in the sheets as he drove her toward another climax, begging him to do what he liked with her body. He sped up and slowed down, extending her ride to the top of the mountain until she could no longer hold back.\n\n\"OHHHH, mi tesoro! Metele mas lengua, mi gringo stud! I love it! You're so good!\"\n\nWith sudden inspiration, he pressed his free hand on her rosebud and sucked her clitoris, lightly nibbling it like a kid with a cracker, and got an instant response.\n\n\"AIIEEE! Si! Si! Si! Chupa mi cocha, mi cari\u00f1o! Por favor, follar mi co\u00f1o!\"\n\nShe came again, soaking her mound of Venus with her sweetness, and as her climax faded squirmed out from under Jim, moving up on the bed so her head was on the pillows. She extended her arms to him.\n\n\"Come to me, Jim. I want you. I want to feel you in me. Come onto this bed and give me your cock, mi coraz\u00f3n. Take me as a man and spend your juices in my pussy and fill me with your manhood. Come to me.\"\n\nBreathing hard, his eyes slightly glazed, Jim climbed on the bed, finding his Mayan princess lying back, her legs spread, her juices making her shaved coochie glisten, ready and eager to have him. His prick was rock-hard and ready, but he hesitated. Literally quivering with frustration, he could not move, dared not move, despite Mira's obvious willingness. She sensed it and pulled him to her, not knowing why he had frozen up but eager to help.\n\n\"Do not worry, my virgin stud. Let me show you. Get between my legs, like that. Good.\" She took hold of his penis, her eyes sparkling with anticipation as she lightly masturbated him for a moment. \"Oh, yes, mi amor, this is good. Few men are so big.\" Pulling him into position, she ran his cockhead up and down her vaginal vestibule, lubricating his purple helmet with her hot juices, getting both of them ready. She lined him up and lay back, looking up at him. \n\n\"Now, darling Jim, push with your hips and take me. Take me like a man takes a woman. Fuck me.\"\n\nAs he pushed forward, her hips rose to meet his and he slid all the way home into her. As he bottomed out in her sopping cooze, he felt her sigh happily and wrap her arms around him.\n\n\"Yes, my stud,\" she whispered. \"That's right. Move your hips and fuck me. I want you to. I want you to spend in me for your first time. Don't worry, I won't break. Give me your beautiful morrongo, my Jim! Give it to me hard!\"\n\nHer hands went to his ass, taking hold of his cheeks, guiding him in and out. She set the pace she wanted, thrusting up to meet his downward strokes so he was balls-deep in her mamey and her clitty rubbed on his shaft every time, sending thrills racing through her with each movement in or out of her pussy.\n\n\"Oh yes ... like that. Just like that. Fuck me deep! Go all the way in, cari\u00f1o. Your beautiful salchicha reaches all the way to my womb and I love it! I can feel it all the way up! Give it to me, you potent gringo! Give me your sperm! Don't worry; I am on the pill, mi amor. Just fuck me hard and deep, the way I like it! I love how you are using me! I am your lover and I love how you are fucking mi chocho! Don't stop! Por favor, don't stop!\"\n\nHer pussy felt swollen, as it did whenever she was hot and aroused. Almira knew this meant she was building up to a powerful orgasm. Her coochie felt like it was pulsing and she could feel every vein on Jim's marvelous rod as he pistoned in and out. She kissed him, whispering, \"So good, so good. Use me, mi coraz\u00f3n! Use me hard! I'm close! Don't stop!\"\n\nHer hands moved up to his back, pulling him closer, urging him to pump her. Her belly felt like it had a glowing ball in it, the ball expanding as she edged closer and closer to climax. Her mind retreated, overridden by her need to cum.\n\n\"Ai! Ai! Ai! Chingame, papi! Ai! Ai! Ai! Si! Si! Chingame! Ai \u2013 Ai \u2013 AIEEEE!\"\n\nThe glowing ball exploded and turned her into a wild thing. Her nails bit into Jim's back as she tried to pull him inside her, wanting to fuse her spirit to his.\n\nFor Jim, her begging and the sounds she made as he fucked her were proof he was doing something right. He drove into her hard as she wanted him to, the sensations of his cock in her cunt threatening to overwhelm his self control; so different, so much better than masturbation! He felt his cock swelling as it never had before and realized he was about to cum in her.\n\n\"I'm close, Mira! I'm going to \u2013 going to \u2013 going \u2013 AAAAHH!\"\n\nHe pulled back until only his cockhead was still inside her and drove forward one final time, so hard that their pubic bones smashed together and the tip of his penis hit her cervix. His spunk shot out like bullets from a gun, the sticky liquid coating the interior of her coochie to mix with her feminine oils as he felt her nails dig into his back while she shook with the force of her climax. He slumped forward onto her breasts, his strength momentarily gone, poured into his lover's body as part of his orgasm.\n\nThe two of them lay gasping together in the afterglow for a minute before Jim's inherent good manners rolled him to the side. As their breathing returned to normal, Mira raised herself on one elbow to look tenderly at her no longer virgin lover.\n\n\"Oh, that was marvelous, my Jim,\" she said, trailing a lock of her hair over his chest. \"It was something very special, the way we spent together for your first time. Your bad fortune in your boat suffering a breakdown is our good fortune in having the time to bed each other. This was your first time, but it will not be your last with me.\" She settled next to him and he gathered her in, his hands moving slowly along her body, feeling the softness of her skin and inhaling the scent of her hair as they cuddled.\n\n\"When first I saw you, my moon-goddess with hair spun of midnight, the Milky Way sparkling in your dark eyes and displaying orbs with shining points of their own that I can reach out and pinch \u2013 \" he suited action to words, lightly pinching a handy nipple, making her purr and giggle at once \" \u2013 my thought was that such perfection of curving line, loveliness of face, and grace of movement was created by the gods themselves specifically to drive men who beheld it mad with desire for that they cannot have. I never dreamed that so glorious a woman would notice me, much less take an interest in a virgin gringo with no social graces compared to other men. And the idea she would take me into her bed and teach me about making love to a woman was so far beyond the horizon as to be inconceivable. I do not know why you chose to do this, but the words do not exist for me to express my gratitude, thou most magnificent of lovers and beauteous of women.\"\n\nAlmira kissed him lightly on the lips. \"The foolish, shallow girls of the Estados Unidos who pay you no attention not only deny themselves the warming flattery of your honeyed tongue but also the pleasure of that tongue stirring their honeypots until their climaxes break like waves over a reef, and of being taken manfully by one of great stamina fit to match their own. I am proud to be the woman who took your virginity and brought you to the estate of manhood, querido. What is more, that was just the beginning. While you are here, my sweet lover, you will spend your time with me when you are not helping el Capit\u00e1n Emiliano repair his boat. I will teach you the ways of pleasing a woman, building on what you have clearly learned.\n\n\"But one thing puzzles me, papi. You said you had not known the touch of a woman before me; and yet your ability to bring on a woman's orgasm with your lips and teeth and tongue is, as I know, something no man possesses without more than a little practice. I find these two facts to be ... what is the phrase? ... mutually exclusive.\" The look on her face was not accusatory, but rather puzzled. She knew a great deal about how men's minds work, and she could tell lying was not an art her young stallion had ever studied, much less mastered.\n\n\"You know that I am here in Mexico with a couple of hundred fraternity brothers, including the four presumably sweating up the sheets at this very moment with your barmaid and three of those provocatively dressed foxes who frequent the cantina. Perhaps you do not know how fraternities work. If you will permit me, mi diosa divina, I will explain how I acquired the skill you so appreciate.\n\n\"Fraternities do not admit all who wish to join. The members of the chapter at your college have to decide if they like a prospect enough to invite him into brotherhood. Most who apply during Rush Week are not asked to pledge.\n\n\"There is an exception to this. If you have a brother who is a member of the frat, or if your father was, you are what is known as a 'legacy.' Legacies are automatically asked to pledge, but there is no guarantee they will survive what comes next. What comes next is Hell Week, the initiation of the pledges into the fraternity.",
        "\"The pledgemaster and the brothers can make the process as easy or as difficult as they wish. If a pledge does not measure up, or if in the case of a legacy the chapter doesn't want him, they can find ways to wash him out, to reject him. The brethren devise all sorts of things, mostly humiliating, to test the pledges and see if they have the determination to stand the gaff. A favorite tactic involves sexual humiliations of one kind or another.\n\n\"The Tri-Sigs have a sister sorority, a fraternity for women, Kappa Nu Tau. The two houses have been known to cooperate in the hazing of their pledges. Their zelatrix when I pledged last year was Jayne Hardin. She was a senior and captain of the cheerleaders when I was a freshman en la secundaria, and she made my life as un estudiante de primer a\u00f1o hellish. She knew my fraternity brothers were dubious about my suitability, and as I said she hated me; so she came up with a sadistic test and proposed it to our seniors for the last night of Hell Week.\n\n\"The Kappa Nu pledges were to be turned over to our pledgemaster to be used by the brothers as they liked for twelve hours before dumping them out the front door wrapped in sheets for a 'walk of shame' back to the Kappa Nu house. She in turn would get the Tri-Sig pledges, to be used by the sorority's seniors as they liked.\n\n\"The brothers outfitted us in jockstraps, sandals, locked-on dog collars and leashes, and marched us over to Kappa Nu Tau, counting a loud, rude cadence all the way. My fellow pledges were parceled out in a slave auction among the seniors and as I found out later spent the night serving and servicing them; but Jayne took control of me personally.\n\n\"She and two of her besties brought me to a bedroom where one of the Kappas was lying naked on the bed, her legs spread wide as she used a vibrator on herself, crying out, 'Oh yes ... oh yes ... yes, yes, yes ...\" as she masturbated, sliding it in and out of her pussy. It was a show put on for my benefit, for a very specific purpose. \\\n\n\"I suffer from Asperger's Syndrome but in some respects I'm no different from normal males. The sight of a zorra like her \u2013 none of the Kappa Nus are bad-looking, but even Don Juan would have looked twice at this one \u2013 playing the pu\u00f1atera with a dildo right under your nose, the sight and sound and smell of her as she plays with herself, gives us a rampant erection. Jayne and her cohorts gave me maybe half a minute to watch her tormenting herself before they pounced.\n\n\"The two friends pinned my arms while Jayne cut the jock off me and replaced it with a bondage device called Kali's Teeth. It's sort of like an athletic supporter that buckles on, but instead of a pouch or a protective cup it has a metal tube hinged on one side with a lock on the other, lined with metal spikes. I was told later dominatrices use them to discipline their sumisos. If you get an erection with that thing strapped on you, it is agonizing, like your aparato is on fire. Unless you have the key, you can't get it off without tearing your pito to shreds. But even that was not the worst.\"\n\n\"What could be worse than that, mi dulce amante?\"\n\n\"The task that Jayne set me. Starting with that Kappa Nu beauty who had teased me, I had to bring every sophomore and junior Kappa Nu to orgasm, one at a time, before eight o'clock the following morning. There were fourteen of them in all. I was allowed to use my fingers, my tongue and my lips, but not to fuck them; Kali's Teeth saw to that. Every time I started to work on one of them, my cock would get hard, and those sharp teeth bit into me. She intended the experience to hurt, and it did.\n\n\"She informed me, with relish, that for each Kappa I failed to bring off I would receive five cuts with a cane. She showed it to me. It was one of those whippy birch canes, like British headmasters used to use on the boys at places like Eton and Rugby in the 19th Century, the sort of punishments Kipling and Hughes wrote about. A cane like that leaves bruises through a heavy shirt. When swung by someone with a sadistic nature like Jayne Hardin at a naked back it draws blood and leaves scars, according to British boarding school literature.\n\n\"That was what she intended for me if I failed, as she expected I would. Please fourteen women in one night? Impossible, she thought! If I did achieve my goal, she told me with a laugh, I'd be dressed up and brought back to the Tri-Sig house escorted by every girl to whom I'd given an orgasm. But if I failed, I would be whipped, hogtied, and dumped naked on the doorstep, where I would likely be told by the pledgemaster that I had failed the initiation and to darken their door no more.\"\n\nWith a shudder, Mira put her arms around him, unconsciously feeling for scars. Seeming not to notice, Jim continued.\n\n\"I had seen enough porn featuring oral sex to have a good idea of what I needed to do to please the Kappa Nus. I did the cockteaser first. She was easy to bring to completion, because she'd already gotten herself most of the way to climax. Then I did the two girls who had helped Jayne lock that vicious thing onto me, one after the other. They liked seeing each other writhe on the bed as I performed cunnilingus on them one at a time, masturbating while they watched, so I got them off quickly too. Each of the girls also, whether they realized it or not, taught me tricks and guided me around the female sexual anatomy, so I became more proficient. I learned things from each Kappa who laid herself down on that bed for me to eat out. The more girls I serviced, the more I learned and the better I got at oral sex, despite the pain from that bondage toy. \n\n\"Part way through, the sophomore whose room it was, Nora \u2013 I got to know her later; she's a Scrounger on Kappa Nu's Junkyard Challenge team \u2013 had her time with me. She's a sweetheart type, and hadn't much liked the plan Jayne had devised, much less what she saw it was doing to me even though she went along with it. She could tell I was tiring, so she made me a cup of coffee with lots of sugar and gave me one of those energy drinks in the miniature bottles, you know? It gave me the strength to finish the mission. Fourteen girls spent on my tongue, and not a single complaint.\n\n\"Jayne was shocked when she learned I had brought all of her sorority sisters to orgasm successfully, but she had no choice but to live up to her terms. The girls watched as she unhooked me from that instrument of the devil. Nora brought me back to her room, cut the dog collar off me, patched me up, and got me an ice pack for my tool. I was allowed to sleep for a couple of hours \u2013 she insisted I take the bed while she curled up on big pillows on the carpet \u2013 and at six o'clock in the morning I was awakened by two girls bringing me breakfast in bed and acting deferential, which seemed to irritate Nora.\n\n\"More Kappas came in and gave me a sponge bath and a shave, and then dressed me in the outfit of a Scottish Highlander complete to sword and dirk. They brought me to the living room and all fourteen of them posed for a photo with me, me in a kilt and them in come-hither outfits that left little to the imagination. At eight o'clock, they gave me a triumphant parade back to the frat house, where they knocked on the door and demanded the pledgemaster call every Tri-Sig out onto the porch. When they came out, the Kappa Nus formed a half-circle around me and sang an old folk song they had put new words to, in four part harmony:\n\n\" 'Here's to the prof of sexology,\nMaster of female anatomy;\nRare boy, he; and rare girls, we, \nTo have had his oral proficiency! \nTo the prof, kaye aye aye aye \nTo the best, kaye aye aye aye \nTo the rest, kaye aye aye aye\nAye all day!'\n\n\"Then, one at a time, they knelt before me in tribute, gathered up the pledges that had spent the night with the Tri-Sigs, and left. In solemn ceremony, I was admitted to the Sigma Sigma Sigma fraternity that evening.\"\n\nMira digested the story, continuing to stroke him with her sable hair. At last she said, \"Mi amor, that explains why you froze when it came to the moment where I was so wet and ready to receive your swollen pinga. That quedada Jayne is a cabrona, veridad. Her setting you up to fail so she could whip you was only part of what she tried to do. She tried to use that abrazadera de castidad masculino and her sisters to condition you so you would never be able to know the joy of making love with a woman! She wanted not merely to scar your back, but to scar your heart and your soul.\n\n\"I swear by Santa Maria Magdalena, if ever I meet that puta I will have her fucked to death by donkeys! To do such a thing to an innocent is an abomination before God.\n\n\"However,\" she went on, reaching down to take hold of his penis and move her hand slowly up and down its shaft, \"you are not so innocent as you were, mi coraz\u00f3n. We have una noche de amor before us, and I do not want to waste as single moment in which I may teach you and in which we may satisfy each other. Are you willing, mi semental agradable?\"\n\n\"When a goddess offers herself to a mere mortal only a fool would refuse her, and I am not a fool, mi diosa del amor de la noche. I am yours to be taught, thou wise and precious beauty.\"\n\nAlmira climbed out of the bed for a minute, slowly and sensually shedding her robe and heels. She rejoined him, settling on his chest, her moist, shaved mound inches from his nose.\n\n\"Start by putting your honey tongue to work on my pussy, my stud,\" she whispered huskily. \"\"Ensnare me with your lips and teeth and tongue. Send me flying to the stars and make my womb explode with ecstasy. Make me a slave to the pleasure you give, mi amor, so I spend in your mouth.\"\n\nHe brought his mouth to the junction of her inner lips, where her clit was already standing free of its hood, showing her anticipation and eagerness. She inhaled sharply as he blew a thin stream of air at the little pink bud, and a thrill coursed through her. Her nipples hardened and her concha felt as if it was swelling. He set to work with his tongue and she arched her back, pulling his head to her slit and encouraging him to use her puss.\n\n\"Oh, you're good, my Jim. So very good. Go up and down, I like that best. Ohhh .... yes, like that, mi amor, like that! Oh, so very good. Don't stop, my sweet gringo stud. I want to spend on your tongue.\"\n\nJim continued to lick and nibble at her clitoris and the clitoral shaft. Mira pushed her pelvis forward again; he curled his tongue and drove it between the labia minora, going \"Brrrrr!\" with his lips. She shuddered as another thrill raced up her spine to vibrate in her brain and ignite a fire in her pleasure center. He got his hands on her buttocks and moved her against his face, licking and teasing her sweet, liquid center as her divine triangle oozed her feminine wine onto his face.\n\n\"Si ... si, mi hermosa amigo ... do me that way! So good! So hot, your tongue! So hot on my pussy! You drive me wild! Por favor, don't stop! Use me and make me spend for you!\"\n\nHer pelvis rocked back and forth like a rider at the canter, the changing sensations of his mouth on her twat driving her wild. Her nipples swelled and tightened, and her body flushed with desire as Jim continued to work her pussy, pushing her to orgasm. Her mind receded as her body's demands increased. She pulled his head to her mound as he lashed her clit and pushed her over the edge.\n\n\"AIIIEEEE! Si! Si! Si!\"\n\nHer whole body shuddered convulsively and her juices soaked his face as she came for him, skyrockets exploding in her head as her concha squeezed a penis that wasn't there. She fell forward onto the headboard, and slid down his body, instinctively searching for a cock to fill her up. She found his waiting erection and lewdly rubbed her wet box over his rod before reaching down to guide him into her. She sighed with contentment and began to move on his rampant penis.\n\n\"This is what lovemaking should feel like,\" she whispered as her hips rose and fell, alternately taking him deep inside her coochie and pulling back until just his cockhead remained inside her labia before sinking back down and filling her eager cunt with his hard male flesh again. His hands rose instinctively to her proud bust, cupping and squeezing her boobs and rolling her turgid nipples between thumbs and index fingers. She moaned as the sensation heterodyned with her throbbing womb to trigger a second climax.\n\n\"Ohhhh, yessss!\" she hissed as her vaginal walls spasmed with pleasure and more of her juices drenched their conjoined crotches. \"Give it to me, mi amor! Fuck my pussy! Fill me up! Don't stop! I want you to give me your sperm! Use my body for our pleasure and pleasure yourself!\"\n\nHe began to thrust up into her as she dropped down onto his cock, her hips rocking as they fucked. Mira began to gasp and moan as she felt her next orgasm rising in her concha, a golden burn, a fire she wanted to feel consume her.\n\n\"Yes, papi! Like that! Like that! Drive into me hard like that! Si! Si! Oh, you're so big, una retazo macizo enorme, and hard like a rock! Give it all to me! Give me all your juice, papi! Fill me full of it! Please! Give it to me!\"\n\nHe squirmed under her and sat partway up, high enough to latch onto a hard velvety nipple, holding himself there with an arm around her. His other hand dropped to her mound, finding her clitoral shaft. He began to rub it quickly, at the same time wiggling his fingers so they tapped her clit. Mira's reaction was immediate and powerful.\n\n\"AIIIIEEEEEE! AIEEEEHHEE! AAAAHHH!\"\n\nThe orgasm triggered by Jim's fingers exploded in her womb like a chrysanthemum firework, a massive skyburst followed by thousand of tiny shimmering star-climaxes. Her pussy clamped spasmodically again and again at the thick penis filling it, triggering in turn a volcanic eruption of white spunk that felt to both of them like molten rock greedily burning its way through them, trailing satisfaction everywhere it touched. Still locked together, they fell back onto the bed, hungry mouths seeking and finding each other, passionate deep kisses extending their pleasure as the two lovers fell from their sexual peak, swooping into the valley of the afterglow like a pair of falcons.\n\nWhen they could speak again, Mira looked into her formerly virgin lover's eyes and stroked his light brown hair.\n\n\"Mi coraz\u00f3n, such power you have between your legs! You have worn me out. You know by instinct what will please a woman. Any girl who is able to lure you to her bed will not leave unsatisfied, I think. And any you lure there will not be sorry she chose to bed you. I will teach you things, but already you know what is most important: to pay attention to your partner and respond to what she finds pleasurable. When you leave Chicalo, my Jim, you will leave secure in the knowledge you can satisfy any woman in the bedroom. And you know something? Most men think they can, but few really do. You are one of the latter. All you need is confidence and experience, and those I will give you.\n\n\"And something else I will give you, and you will give me, is a shower. Go to the ba\u00f1o, set out towels, and run the water. I will be along in a moment.\"\n\nShortly she joined him in the bath, and the lovers passed a pleasant interlude washing each other under the shower spray, with special attention paid to tits, cock, pussy and asses, interspersed with long, deep kisses resulting in an erection that was easy for Mira to soap up and rinse. They dried each other with the hotel's thick, fluffy bath sheets, and when they emerged found their carna de amor freshly made up with new silk sheets. Jim picked up his snifter and Mira did the same.\n\n\"Here's to you, my Mayan princess.\"\n\nShe touched his glass with hers. \"And to you also, my gringo stallion. Drain it dry, and let us go to bed. I will be dreaming of you, my Jim.\"\n\n\"And I of you, my lovely night-blooming flower.\"\n\nMatching action to words, they finished their drinks and snuggled together under the sheet she drew over their bodies. He head on his chest and their arms around each other, sleep came quickly in the tropical night.\n\nThey woke once in the night, and she initiated another session of lovemaking that ended in orgasm for both of them before they returned to the sleep of the cherished. When the noise of the town rising to begin the new day intruded into their love nest, they reluctantly rejoined the world.\n\nWhen the two of them walked into the dining room hand in hand, Almira with the glow of a woman who has been well and truly satisfied by the man she is with, and Jim restraining the man's tendency to strut because he knows the woman at his side has chosen to sleep with him and is happy she did, jaws dropped. Warwick, Hayes, Ohnaka, and Tarpals knew very well that up to now the Professor's batting average with girls had been 0.000; and Idola, Ximena, Raquella and Dayanara knew that Do\u00f1a Almira rarely if ever slept with a guest, much less one a couple of the local lovelies had called un babuino yanqui. \n\nThe two of them sat at the manager's table, Jim seating her as if she were of the blood royal. Coffee, papaya with lemon juice, and fresh rolls appeared automatically. The two ate mechanically, more interested in gazing at each other than consuming nourishment. When they had finished and were on third cups of coffee, Emiliano, who had watched his passenger's changed demeanor with secret amusement, came to the table.\n\n\"Do\u00f1a Almira, I wonder if I might borrow Se\u00f1or Jim for a few hours? If we are to repair the Ojo Grande, we must begin preparing her. She has to be careened, and the tide is rising. We must position her before high water, and to do that she must be lightened. I need to remove as much from her as possible, and I could use his help.\"\n\nJim looked at the captain. \"And more than mine, I daresay.\" He stood up and walked over to where his frat brothers and their girls were relaxing over coffee.\n\n\"All right, my brothers, up off your behinds! There's work to be done. El Capit\u00e1n Emiliano needs our help to strip the boat so she can be careened. Your girls can get along without you for a couple of hours. Almira, mi amor, could we trouble you for the use of a storeroom so items we take off the boat don't go astray?\"\n\nShe joined him at the Tri-Sigs' table. \"I have a place that will do. Follow me, gentlemen.\" Phrased that way, the four had no choice but to follow her as she took Jim's hand and led them to a large old-fashioned walk-in freezer in the basement, with a door that would have done credit to a bank vault.\n\n\"The original refrigerator of the Azul,\" she explained. \"Mother replaced it with several smaller, more efficient units when I was about ten years old, when she had the kitchen rebuilt. I think it will serve the purpose. You can come and go through the delivery door there,\" she added, pointing to a large iron-strapped plank door that led up to the street.\n\nThe Tri-Sigs, Julio and the captain set to work ferrying everything that was not nailed down, and a couple of things that were, from the boat to the storeroom. Many things made the trip up to the hotel's former reefer. The other boys headed up to their rooms to change into swim trunks and pick up their girls for a day on the beach, while Jim and the two Mexicans used muscle power and three shovels provided by Almira to bury two anchors deep in the sand above the high water mark. The next thing was to crank the winch to pull the Ojo Grande parallel to the beach and as far up on the sand as they could. The trio then begin digging on the landward side, scooping sand out to let the boat settle evenly and raise the cooling water intake out of the water as the tide fell."
    ],
    "authorname": "Sir Galahad",
    "tags": [
        "chichis",
        "mi amor",
        "mayan",
        "goddess",
        "virgin",
        "stud",
        "cunnilingus",
        "orgasm",
        "lover",
        "slut"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/loving-eyes"
}