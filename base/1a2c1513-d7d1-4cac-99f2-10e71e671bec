{
    "title": "Semper Fidelis Ch. 01",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 1 - Prologue \n\nTuesday, March 15th. The Ides of March. For me, it was the anniversary of the failed attempt to assassinate me in front of the tailor shop, and I had been forced to shoot a person dead. That's something never to be taken lightly nor shrugged off, and I realized that if I ever did become desensitized to killing, that it would be time to hand in my badge as a Town & County Police Officer.\n\nFor some reason, I was feeling a sense of deep foreboding as I went into MCD to join the Detectives for the morning coffee klatch. And we all know what that means:\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette from in front of City Hall at precisely 7:00am. \"Channel Two News has learned that the Town & County Council will consider what actions to take regarding Police Lieutenant Tanya Perlman. While Lt. Perlman has mostly recovered from her wounds, she remains paralyzed from the waist down.\n\n\"There is a brewing battle between the Police Union and the top level Officers of the Police Force. The Police Union states that if Lt. Perlman returns to duty, then former Commander Robert Brownlee should be reinstated as Deputy Chief. Additionally, several Council Members have stated that their constituents are concerned about Lt. Perlman's ability to assume her duties, and that she cannot meet TCPD physical fitness requirements.\"\n\nBettina continued: \"Channel Two News has also learned that the Council expects to receive notification of the civil lawsuit filed by the County Concerned Citizens for Safety and the Fire Department Union on behalf of Assistant Fire Chief William Jefferson.\n\n\"Police Commander Donald Troy was formally cleared of any wrongdoing in the dispersal of striking EMTs, and he was also cleared by a Board of Inquiry of any wrongdoing in personally making the arrest of Assistant Fire Chief Jefferson for having Fire Department officers block the Midtown Highway near Junction Station.\n\n\"Jefferson remains out on bond, charged with assaulting a Police Officer and using Government property to commit a crime, that being the blockage of the highway. All of the other Firemen involved have been disciplined internally, and will face no more legal challenges.\"\n\n\"In political news, Karl Frazier of Public Policy Polling has told Channel Two News that SBI Director Jack Lewis continues to lead Republican Legislator Sean Stockton by a substantial 54-39 percent margin, with 2 percent going to the Libertarian candidate Blade Schwartz, and 5 percent undecided. Stockton faces strong headwinds from reports that the U.S. Chamber of Commerce, which is strongly pro-Amnesty, is funding political PACs and television ads sympathetic to Stockton. Let's go to the tape.\"\n\nThe tape showed Republican Sean Stockton giving a speech to a sparse crowd. \"We must respect immigrant workers and their families! We must have compassion for them!\" he said. \"Giving them Amnesty is an act of love!\" \n\nFor some reason, most of the Detectives in the MCD room looked at me when they heard that. I let my face show nothing.\n\nBettina came back onto the screen. \"And in local races, Dagmar Schoen and John Colby were expected to have tough races for their Council seats, but have surged to double digit leads, shocking expert observers. And in the District Attorney's race, incumbent Gil Krasney leads Jenna Stiles 55-45 percent. Karl Frazier says that the number of undecideds in this race is virtually non-existent, which is also astonishing with this much time left in the race.\"\n\n\"Doesn't look good for Jenna.\" Cindy said sadly.\n\n\"It's early yet.\" I said, then peered at my cousin. \"You okay?\"\n\n\"Yeah.\" Cindy replied. \"I'm just missing her. Ariel and Wanda have the gym running as good or better than I ever could run it, so there's not a lot for me to do there. Teresa was talking about one of us moving in with the other, and I had to say 'Hello! You're dating a hot young stud that is the CEO of the hottest young company on the planet right now!'.\"\n\nI smiled. \"What did she say to that?\"\n\n\"She said they're just 'friends with benefits' right now.\" Cindy said. \"I told her to go get a shovel to clean up the bullshit on that one.\" I laughed out loud.\n\nCindy then said: \"Hell, Teresa loves little Doug more than that baby's birth mother does... oh, you didn't hear me say that.\"\n\n\"Er, no.\" I said. \"Well, I understand why you're feeling down. It's been a tough year for you, so far. Why don't you go to your office and prepare for the Angels meeting.\"\n\nCindy left MCD and crossed the hall to her office. Going in, she saw an object on the desk. It was a stand holding two flags on black sticks at angles. One was the American flag; the other, the Canadian flag. The flags were bigger than the ones at her childhood home, but reminiscent of them. There was a note attached, that said 'American by birth, Canadian by the Grace of God. Never forget your heritage. Don.'.\"\n\n\"Aw, that's sweet.\" she said. She felt much better now.\n\nPart 2 - Death of a Marine\n\nTuesday night, March 15th, 10:30pm. Two black vans rolled up Reservoir Road with their lights turned off. The license plates on the back were the only markings that they were State Government vehicles.\n\nInside were a total of eight SBI Narcotics Task Force officers, wearing full combat gear: helmets, double armor vests, and dark blue military-style clothes, including heavy steel-toed boots. They were armed with M-4 semiautomatic 'assault' rifles as well as Colt .45 semi-auto pistols that had been Army surplus back in the day.\n\nPulling into the driveway of 2467 Reservoir Road, they exited the vans swiftly and quietly. Going to the door, the leader signaled to two men to ram it.\n\n\"Wait!\" said one of them. \"Aren't you going to knock and announce our presence?\" This was required by State Law.\n\nThe leader walked up to the man that had said it. He grabbed the man's collars, half choking him.\n\n\"Listen to me, you fucking faggot.\" the leader snarled. \"This is a no-knock drug raid. Now shut your god-damn mouth.\" Turning to the man with the ram, the leader said \"Okay Rogers, let's go!\"\n\n* * * * * * * * * * * * * * * *\n\nHearing the noise outside, Gunnery Sergeant Manuel Jose Guernica sat up in his bad. He was on leave, having served three tours in Iraq, two in Afghanistan, and a couple of others in places that cannot be mentioned in this unclassified setting.\n\nHe heard scraping around the front door. He got his lockbox by his dresser, pressed the code numbers to open it, and took out his Beretta M9. He advanced down the hall---\n\n*BAM!*\n\nThe SBI agents battered in the door and rushed inside. Gunny Guernica yelled for them to stop. In reaction, the SBI agents open fire upon him, relentlessly squeezing the triggers of their high-powered, military-grade rifles, emptying their magazines into him. After several seconds, the leader ordered a cease fire.\n\nGuernica's wife Vera was screaming. Their six year old boy Miguel was screaming and their two year old daughter Sofia was crying. The agents rushed in, dragged the woman to the ground and put their guns to her head. The little boy was also thrown to the ground, and the hot barrel of an M4 was pressed into his cheek. The baby girl was then put on the floor, where an SBI Agent pressed his boot onto the side of her little face. They could all see the husband and father lying dead in the hallway as SBI Agents milled about, screaming and hollering as they tore the house up.\n\n* * * * * * * * * * * * * * * *\n\n\"We got company.\" one of the agents snarled. Six TCPD vehicles, including a SWAT van full of armored men that had been on call, rushed up to the house, followed by a silver Police SUV driven by the Police Commander, and another one driven by the Captain of Detectives.\n\nAs we exited our vehicles, the SWAT Team leveled their guns at the SBI Agent that was outside, showing his gold badge of the Narcotics Task Force. \"We're SBI! This is our raid!\"\n\nI came up. \"You didn't inform us of this, which violates State Law.\" I thundered. \"Where is your warrant?\"\n\n\"Right here.\" said the Agent. I looked at it, shining my flashlight on it.\"\n\n\"2461 Reservoir Drive... that's in Nextdoor County, on the other side of the lake!\" I screamed out.\n\n\"Sir, this is 2467, too.\" said Hugh Hewitt, leader of the SWAT Team. \"Wrong on two counts.\"\n\n\"Arrest this son of a bitch!\" I ordered. \"SWAT Team! Disarm and arrest every SBI Agent here!\"\n\nThe SWAT Team went inside as if they were facing an ISIS army. I heard them yelling at the SBI Agents to put down their weapons, and the SBI saying for my guys to drop theirs. I then yelled into the house \"This is Commander Troy! Shoot to kill all SBI agents! I say again: shoot to kill all SBI Agents!\"\n\n\"Sir, there are two children and a woman inside.\" said the SWAT man at the back, closest to the door.\n\n\"Don't shoot them.\" I said. \"Shoot the God-damn SBI agents if they do not surrender immediately. SBI Agents! If you do not drop your weapons and surrender, you will not leave this house alive, I swear to God!\"\n\nThe SBI leader got out his cellphone, as if to call reinforcements. \"Shit.\" he muttered. \"No signal.\" Geez, I wonder how that happened, I thought to myself.\n\n\"All right!\" said the SBI Leader. \"We're coming out.\" They all came out. My men were more than a little rough in disarming them, searching them for weapons, then cuffing them and putting them into the SWAT van for transportation to County Jail.\n\n\"Commander!\" called out Hewitt. \"You need to see this.\"\n\nCindy and I went inside. A man was lying dead on the hall floor, his body riddled with bullets. In the bedroom, a woman and two children were lying face down on the floor. Their hands were secured behind their backs by zip-ties... including the two year old girl.\n\n\"Somebody cut off those zip-ties.\" I ordered. \"Captain Ross, will you please attend to these children until we can get a child psychologist here?\" I knew that these traumatized children would respond much better to her than to the men in armor that resembled the men that had just murdered their father...\n\nAs I went outside, I saw an older man coming up. He was allowed through the cordon; after all, he was a Police Chief Emeritus.\n\n\"What the hell happened here, Crowbar?\" asked Chief Griswold. He lived three houses down the road.\n\n\"The God-damned SBI.\" I said. \"Did you hear anything, Chief?\"\n\n\"I need to make a statement to your Officers.\" said Griswold. \"Those Agents did not call out and identify themselves before battering in the door. The first thing I heard... was the door being rammed in, then gunshots...\"\n\n* * * * * * * * * * * * * * * *\n\n4:00am, March 16th. The wife's story, videotaped, was devastating. She told us what had happened, that there had been no warning nor identification by the Agents. Her husband had thought they were burglars and went to confront them. He did not fire his gun, and the intruders had kept shooting him over and over again. One of them had stood over her husband, just firing bullets into his body as he lay on the floor.\n\n\"Sir,\" said Martin Nash as the Crime Lab busily worked. \"We have Gunnery Sergeant Guernica's Beretta... preliminary results show it wasn't fired.\"\n\n\"Gunnery Sergeant?\" I asked.\n\n\"Yes sir.\" said Nash. \"Active duty, United States Marine Corps. On leave, visiting his family after his last deployment ended. His wife works at Town High School as a Spanish teacher. They both grew up here, though her parents moved to Arizona a few years ago.\"\n\n* * * * * * * * * * * * * * * *\n\n\"None of you are to say a word.\" said the SBI leader as they were being transported to jail. \"Demand lawyers. Our guys will have us out of here in no time.\"\n\n\"Oh, I'd think about that one some more.\" said Sergeant Rudistan in his jovial way, which belied the tension and his readiness to kill any SBI Agent that so much as sneezed the wrong way. \"The Iron Crowbar is not very happy right now. He is going to barbecue your asses.\"\n\n\"The... Iron Crowbar?\" gasped the man who'd questioned the no-knock entry. His name was Matty Graves. \"Oh my God...\" He leaned over and vomited.\n\n\"Jesus!\" gasped the SBI leader. \"You fucking wimp!\"\n\n\"And I'm going to shove your face into that mess, and make you clean it up.\" said Rudistan... to the leader.\n\n* * * * * * * * * * * * * * * *\n\n\"So what do you have, Mr. Crowbar?\" asked Chief Moynahan as I sat in his office with him. Cindy was sitting beside me; she had relinquished the Guernica children to the care of Dr. Laura Fredricson, helped by Detective Joanne Cummings in civilian attire. Dr. Fredricson had treated the burn on young Miguel's cheek, a circle that matched an M4's fire suppressor. She also said it was like being branded, and would never go away. I gave orders to identify the exact SBI weapon that had done that, so that the rifle's owner could be charged with various child battery charges.\n\n\"We've got eight SBI Agents that conducted a drug raid.\" I said. \"But the warrant, which was issued in Midtown instead of their home office jurisdiction of Westphalia, gives the address of 2461 Reservoir Drive... which is in Nextdoor County. They instead hit 2467 Reservoir Road, in our County. I called the Nextdoor County Police. They were not informed of any raid by the SBI, which as you know, they are required to do after their last drug raid fiasco in my County.\"\n\n\"Yes,\" said Moynahan, \"The story of you firing a machine gun at them is still talked about all over this State, and in the most reverent terrrms.\"\n\n\"Sir,\" said Cindy, looking at the warrant, \"this address does say '2467'.\"\n\n\"No, that's a European-style '1', with the little flick down from the top.\" I replied. \"It does look like a '7'... a '7'...\"\n\nCindy looked up to see me going into a reverie. After a moment, she said \"Don?\"\n\n\"Uh...\" I said. \"Sorry about that. I was just thinking of something. By the way, where is Chief Griswold?\"\n\n\"Last I saw him,\" said Moynahan, \"he was in the Main Conference Room, calling the Governor of the State about this.\"\n\n\"Good.\" I said. \"Anyway, they hit the wrong place all the way around. There were no drugs in the house, except ibuprofen and her blood pressure medicine. Both the wife and Chief Griswold have given sworn statements that the Agents did not identify themselves before breaking into the house. Having the Chief give that is going to be devastating for them. They also were really abusive towards the children, totally unnecessary use of force. The M.E. is doing an autopsy on Guernica now.\"\n\n\"The SBI is going to say it was a botched raid, but that the Agents should be released and punished internally.\" said Moynahan. \"What do you say to that?\"\n\n\"I say,\" I said, \"that they are going to be charged with the first degree murder... of a United States Marine.\"\n\nPart 3 - Legalities\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" she said from in front of County Jail at 7:00am, Wednesday, March 16th. \"Channel Two News is following the breaking story of an SBI drug raid gone horribly wrong! Manuel Jose Guernica, an active duty Marine, was shot and killed by SBI agents during a raid on his home on Reservoir Road!\n\n\"Channel Two News has learned that the SBI raided the wrong house, and that the correct address was over in Nextdoor County. The Town & County Police responded to 9-1-1 calls of gunshots, and arrested the eight SBI Agents after an armed standoff. The SBI Agents are being held at County Jail. Commander Donald Troy has stated that there is enough evidence to charge the agents with murder and other crimes, but would not elaborate, citing the ongoing investigation. The eight agents have been assigned lawyers provided by the SBI. So far, SBI Director Jack Lewis, who is running for Governor, has not responded to calls for comment.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Consider me to be the representation of the United States Government on behalf of Marine Gunnery Sergeant Guernica.\" said Jack Muscone of the FBI. \"I know it's your jurisdiction, but consider this an offer of assistance, and we may be wanting these assholes that did this after you are through with them.\"\n\n\"Which won't be until their dead bodies are taken off the table at Jacksonville State Prison, if I have my way.\" I replied. \"But I'm glad you're here, Jack. This one is going to get ugly. Fast.\"\n\n\"Yes, it is.\" said Jack. \"I'm hoping I'll have a chance to... 'talk' with Dick Ferrell again.\"\n\n\"And it's very likely that you will.\" I said. \"He's in the State Office Building next to your Federal Building off Courthouse Square. Jack Lewis is here, too...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Oh my God.\" said Jack Lewis as he read the TCPD reports. \"Oh... my... God. Dick, weren't you monitoring this?\"\n\n\"Yes sir.\" said SBI-Narcotics Task Force (NTF) Director Richard 'Dick' Ferrell. \"From Westphalia. We had radio contact until the TCPD showed up, then our signals were jammed.\"\n\n\"This is... bad!\" said Lewis. \"You guys do realized that I'm running for Governor? And what this could do to my campaign?\"\n\nDeputy SBI Director Robert Gaston said \"Yes sir, we know. We're working on mitigation right now.\"\n\n\"What about our agents?\" said Lewis.\n\n\"Our lawyers are meeting with them this morning.\" said Ferrell. \"They're going to have a preliminary hearing this morning, where we will ask for them to be remanded into our custody. This was a location mistake, nothing more. We'll probably have to settle with the family, but insurance will cover that.\"\n\n\"Who's the judge at the hearing? Nance?\"\n\n\"No sir.\" said Gaston. \"Folsom stepped in and appointed Watts to do it.\"\n\n\"Shit!\" gasped Lewis.\n\n\"He's a Conservative.\" said Ferrell. \"If he doesn't give us our guys back, we say he's politically partisan and trying to hurt your campaign, then appeal to Leahy.\"\n\n\"He's also black, Ferrell.\" Lewis said. \"You try to smear him, and we'll be called racists.\"\n\n\"He's Conservative, Director.\" Ferrell pressed. \"Black hate his guts, call him an 'Uncle Tom'. They're not going to turn against you and the Democrat Party over that Conservative piece of dog shit, no matter what color he is.\" \n\n\"Dick,\" said Lewis with no small amount of exasperation in his voice, \"you have to understand that the Media would try to gin it up as a racial issue, just because they can. They know Blacks will vote for Democrats no matter what Democrats do to Blacks, so they, the Media know they can make a circus out of it. So just forget about that idea.\"\n\n\"Yes sir.\" said Ferrell. \"Anyway, all I care about is getting our agents out of the Iron Crowbar's jails. They're in grave danger while they're in there.\"\n\n\"I daresay.\" said Gaston. \"I'm getting word that the Iron Crowbar is really going to push for murder charges. I've been told he's really hot about this one, though I'm not sure why.\"\n\n\"The first thing that needs to happen,\" said Lewis, \"is that I have to have some separation from this. I'm going to say I didn't know about it ahead of time, which is mostly true. I'm going to say all the right things about how sorry the SBI is about that man being killed, and that I'm going to start an investigation to get to the truth. Meanwhile, make sure the lawyers get our men out of this County... and out of the clutches of the Iron Crowbar.\"",
        "* * * * * * * * * * * * * * * *\n\n\"Forty one.\" I said. \"Forty one times. Guernica was shot forty one times.\" I was reading the autopsy report.\n\n\"And the Crime Lab confirms that he did not fire his weapon at all.\" Cindy replied. \"That weapon was legally obtained. He had a concealed carry permit, too, though he doesn't need it in his house.\"\n\nThere was a knock on my door, and ADA Paulina Patterson came in. \"We've got some very strong stuff here. Plenty to have them bound over.\"\n\n\"Make sure to add that photo of that child with the burn mark on his face.\" I said. \n\n\"Oh, that's right on top of the file.\" Paulina said. \"But Don, let me tell you this. We'll have enough to go to the Grand Jury, and to keep these bastards here without bail. But the trial might be a different thing. The wife's testimony will be heavily challenged. It was dark, she's emotional. The six year old boy's statements are surprisingly clear, and we got it on videotape, but his memory will be lost over time, and they'll intimidate the hell out of him on the witness stand. I am thanking God that Chief Griswold was a witness, but even he can be impeached because it's well known he and Director Lewis are mortal enemies.\"\n\n\"You need for someone to turn State's evidence.\" I said.\n\n\"You catch on fast.\" Paulina replied with a grin. \"Not much gets by you.\"\n\n\"No doubt about that.\" Cindy replied.\n\n* * * * * * * * * * * * * * * *\n\nCounty Jail and Third Precinct Headquarters. As I came into the Jail portion of the complex, I felt the tension. All of the guards, both Sheriff's Deputies and TCPD Officers, were fully armored and heavily armed, as if expecting a siege of the place. I was pleased with their readiness as I went into the anteroom of Interrogation-1.\n\n\"What's his name again?\" I asked.\n\n\"Graves.\" said Paulina. \"Matthew 'Matty' Graves. SBI Agent for six years, spotless record until now.\"\n\n\"Yep.\" I said. \"Rudistan said that he and the team's leader, Justin Pelletier, were at odds in the paddywagon on the way to County Jail. Pelletier is very dirty; we're starting to find stuff on him. But let's see what we can do with Graves. What are you prepared to offer him if he turns?\"\n\n\"I was going to ask you that.\" Paulina said.\n\n\"How about full immunity and witness protection if he turns now and testifies against the others?\" I said. \"And then, we'll give the next one immunity, and any others get probation after that. Except Pelletier. I'm going to try to have him strapped to the table at Jacksonville State Prison for this.\"\n\n\"You're really into this.\" noted Paulina. \"Any reason for it?\"\n\n\"Yep.\" I said cryptically. \"Their true target in this raid, and the fact they must think I'm an absolute idiot if they thought I wouldn't see through this.\"\n\n\"What's it about?\" Paulina asked. Just then, Graves and his lawyer were brought into the room, and Graves handcuffed to the table.\n\n\"We'll talk about that later.\" I replied. \"Ready to go? Cindy, will you be joining us?\"\n\n\"I'll watch from here.\" Cindy said.\n\n\"Make sure the videocameras are running and not interfered with.\" I said. That was a coded message for Cindy to not use her bug-scrambling device. I wanted, and needed, this one on tape.\n\nGoing in, we sat down, me opposite Graves, Paulina to my left. \"So, Matty, are you related to Billy Joe Graves?\"\n\n\"Yes sir.\" Graves said. \"He's my cousin---\"\n\n\"Don't say anything!\" barked the lawyer. \"I'll do the talking.\"\n\n\"Billy Joe is one of the reasons I have a Purple Order for being wounded in the line of duty.\" I said. (Author's note: 'Sperm Wars: The Family Menace') \"Is he the black sheep of the family?\"\n\n\"Actually,\" said Matty Graves, \"I'm the white sheep---\"\n\nThe lawyer practically grabbed Graves. \"I told you to stop talking!\"\n\n\"Don't tell me that again!\" snarled Graves, pointing his finger right in his lawyer's face. \"And don't touch me again. I'll talk if I want to! I haven't taken the Fifth yet, and can do so whenever I want.\"\n\n\"Well,\" said the lawyer, acting as if he was going to get up, \"I don't see how you can expect me to represent you if you won't listen to good legal advice.\"\n\n\"Why don't you do your job instead of badgering me?\" replied Graves. The lawyer got up, gathered his things, and left.\n\n\"Okay, Mr. Graves,\" I said, \"you need to call another lawyer or we'll have the Court appoint you one.\"\n\n\"I don't need a lawyer.\" said Graves.\n\n\"All the same, I want you to have one.\" I said. \"We want to be sure we remain on strong legal ground. Just sit tight, and ask Sergeant Rudistan here if you need water or a bathroom break. Ms. Patterson, let's go talk outside...\"\n\n* * * * * * * * * * * * * * * *\n\nFifteen minutes later, Mr. Dennison, who I'd met in the 'Case of the Parole Officer', came in as Graves's legal representation. They talked for five minutes, after which Paulina and Mr. Dennison talked.\n\n\"What's going on?\" Cindy asked. \"You may be the only cop in history that has actually insisted a suspect have a lawyer.\"\n\n\"That's because I believe Graves here will turn. I want him to get his immunity package; ergo, I want a lawyer to make sure it goes like it should. And I don't want a single atomic-sized loophole for Jack Lewis and his thugs to slip through.\" I replied.\n\nCindy peered at me. \"Paulina's right: you're really into this. What's got you riled up?\" \n\nJust then, Paulina asked me to come in. \"We'll talk later.\" I said as I followed Paulina into the Interrogation Room.\n\nAfter we were all seated, Mr. Dennison said \"My client was not a willing part of the crime that occurred last night. He wishes to cooperate with you, but I must insist he be given immunity from prosecution in exchange for his cooperation.\" I nodded to Paulina.\n\n\"Full immunity, witness protection for Graves if he wants it, and I would recommend that he should take it, provided his information is true and accurate, and he testifies in Court against the others.\" Paulina offered, sliding the written offer over to Mr. Dennison.\n\nDennison looked at it, then nodded to Graves, who began speaking:\n\n\"First of all, Commander, I'm sorry about my cousin. As I was saying, I'm sort of the white sheep of a bad family, not the other way around. I was a Police Officer for two years and then joined the SBI. I was involved in the Task Force led by Agent Reubens, the one where we were betrayed. Nowadays, Sharples is part of Dick Ferrell's team and fawned over, while good men like Reubens are dead and other good men are being smeared.\" I just nodded.\n\n\"I had been transferred out of Narcotics after the Reubens fiasco went down.\" said Matty Graves. \"I was in White Collar for a long time, mostly tax fraud cases; then BFE, the Bureau of Firearms and Explosives. I got good evaluations from my bosses every time.\"\n\n\"Which is why I don't understand your participation in this scheme.\" I said. \"What happened?\"\n\n\"It was like this, Commander.\" said Graves. \"A couple of weeks ago, Deputy Director Gaston called me into his office in Midtown. He said the Narcotics Task Force was short-handed, and as I'd had experience with them in the past, he wanted me to participate on one of their raid teams. He said it was a temporary, short-term assignment, and that if I would do it, any damage from being part of Reubens's team would be mitigated. Now I'm still pissed about that: I think Reubens was set up to take the fall, and that neither he, I, nor any of our team did anything wrong.\n\n\"The long and the short of it is that I had doubts, but Gaston dropped the hammer and pretty much ordered me to do it. And it got worse when I heard that the Squad Leader was Justin Pelletier. Everyone knows he's the dirtiest SBI Agent in the State... well, second now, after Sergeant Sharples. I attempted to get my boss in BFE to get me out of this, but he said it was a done deal and I was transferred and out of BFE now.\n\n\"The raid was supposed to be in Nextdoor County. The guy we were raiding was a name I'd heard while I was in the Tax Division. His name is Tom Riordan. He's now a big-money Trustee with the University. Dick Ferrell said the NTF had obtained probable cause evidence to get a warrant and raid his home.\n\n\"I'd only trained a couple of days with the other guys on the team. One of the guys, guy named Greenwalt, was also new, and he was like some immature kid thinking this was some kind of team paintball exercise. Anyway, we loaded up in the vans. It was dark and I couldn't see out of the windows, so I didn't realize where we were when we got out.\n\n\"I knew something was wrong when they were about to ram down the door without announcing themselves as Police. That's illegal in this State, as you well know. I asked about it, and Pelletier grabbed me by the collars and threatened me. Then they rammed down the door and rushed inside. I was the last one in, and it was sickening. Four of the guys, including Greenwalt and Pelletier, were just shooting at this guy. Even after he was lying on the ground, Pelletier was standing over him, just shooting bullets into him again and again and again.\n\n\"They threw the mother and the kids to the floor... violently. One of them, not sure who it was, had his boot on the toddler's face, literally pushing the baby's head into the floor. They had them all handcuffed with zip-ties, even the baby. They started tearing up the place, saying they were looking for drugs and money. That's when our guy outside shouted, and we heard the sirens. It was the TCPD. I was totally shocked to see it was you, Commander... I thought we were in another County.\"\n\n\"I'm going to let you give further details to Ms. Patterson and some of my Detectives.\" I said. \"But let me ask this: did any of them pick up the victim's gun, his pistol, off the floor?\"\n\n\"Yeah, I think Pelletier did, but he put it back when our guy shouted that the local LEOs were coming.\"\n\nI nodded. \"Agent Graves, I appreciate your honesty and integrity. I will also say that you are fortunate, very fortunate, that my people arrived when they did. Otherwise, your brains would've been blown out from behind, and by the victim's gun. I sincerely believe that was Pelletier and Ferrell's intention when you were put on the team and brought on the raid. Take care, and if you need my help, let your lawyer know. Paulina, get everything this guy has...\"\n\nPart 4 - Distractions\n\n\"We've got 'em.\" I said twenty minutes later, as I came into the Chief's office. \"Especially the leader Pelletier. Graves has turned. I'm going to start working over the others this afternoon, after the arraignments.\"\n\n\"Outstanding work.\" said Chief Moynahan, extending his hand to invite me to sit down... next to Chief Griswold, who had been sitting there when I came in. \"So, let's switch gears for a moment: in all this excitement, I have neglected to tell you about another very important thing that we have to address.\" With Chief Griswold also here and sitting next to me, I knew what was up.\n\n\"The Council meeting last night?\" I queried.\n\n\"The Council meeting last night.\" replied the Chief. \"I'm sorry, Mr. Crowbar, but it's official: Lt. Perlman will not be returning to the TCPD.\"\n\nMy face fell, followed by me bowing my head until my chin was on my chest, pain grabbing at my heart. Chief Griswold patted me firmly on the shoulder in support. After a long moment, I finally looked up and said \"What's the damage?\"\n\n\"They're going to offer her a full disability retirement.\" said Moynahan. \"Medical insurance for the rest of her life, as all Police retirees here get. Here's the issue: if she doesn't take that, and tries to fight it, then they'll fire her for not meeting physical fitness requirements, and she will literally be left with nothing... well, maybe an injury settlement.\"\n\n\"Don,\" Chief Griswold said, \"I don't think we need to tell you that this is where you come in.\"\n\n\"Yes sir, and I'll take care of it.\" I said. \"I was afraid of this, but I did start the wheels turning on a Plan 'B'.\" I paused, then said, \"I understand the Governor is coming up here. Do you know what time he'll be here?\"\n\n\"About one o'clock.\" said Griswold. \"He's going to visit the family of the dead man, then he'll come by here.\"\n\n\"Chief, can you call him and ask him to add an item to his itinerary?\"\n\n* * * * * * * * * * * * * * * *\n\n\"I have ordered a full and independent investigation of this horrible tragedy.\" said Jack Lewis on the television at 1:00pm, still Wednesday, May 16th. \"It will be led by Deputy Director Robert Gaston, a man of unimpeachable integrity. The mistakes that led to this accident will be corrected, and those responsible internally punished.\"\n\n\"I've had enough of that.\" said Tanya Perlman as she shut of the TV with the remote. \"And you're looking like you want to go administer a Crowbar beatdown to someone.\"\n\n\"No doubt about that.\" I said. \"But I'm here to see you in your new home right now.\" \n\n\"It's not bad at all.\" Tanya said. \"Everything's easy to get to with the low countertops, the doorways are wide, and Pete's new crib is lower so I can get him in and out of there. Jack stays here when he's in Town, and I think he's making a point to do that a lot more. Cindy and Teresa have been staying every so often, and Mrs. Veasley has visited several times and shown me tricks of the trade with the wheelchair. So I have a lot of help.\"\n\n\"That's good, and the place looks nice.\" I said as I held baby Pete and looked around Tanya's new condo on the northeast side of Town. It was built with the elderly in mind, and was very wheelchair-accessible. \"And I see the outside doors and frames are solid metal. It'd take an Army tank to bust through them. And the windows would not be easy to bust through, either.\"\n\n\"Not much gets by you.\" Tanya said. \"It's not the new Cabin, but it's pretty secure.\"\n\n\"And not too far from the University, and the new State Crime Lab.\" I said.\n\n\"Yeah.\" Tanya said. \"I was talking with Christina Cho about it the other day. She says that place is going to be really nice, state of the art and everything.\"\n\n\"Is she afraid that our Lab will be closed down?\" I asked, obviously with ulterior motive.\n\n\"Yes.\" Tanya said. \"There are rumors, that I've heard elsewhere as well, that Dr. Woodrow met with Dr. Wellman last week, and will be offered a professorship at the University starting next Fall. I'm guessing Dr. Woodrow will be the University's connection to the State Crime Lab. If he goes... Christina says that everyone else will probably start looking for jobs. And the only ones available... will be across the street.\"\n\n\"Could be worse.\" I said.\n\n\"Okay, Don.\" Tanya said. \"Tell me.\"\n\n\"Not much gets by you.\" I said as a quotation.\n\n\"That comes from working for the very best.\" Tanya replied. \"So... go ahead, I can take it.\"\n\nShe was making this as easy for me as she could, I realized, when I'd been trying to find a way to make it easier for her. So I just dove in: \"The Council is going to offer you a full disability retirement. That's like a regular retirement with the time waived, as you know. You'll get your pension as a Lieutenant, you and Pete will have insurance coverage. And you'll get a 'Retired' badge, like Chief Griswold and Captain Charles have. So you're still a part of the Team. And you always will be, as long as I'm there.\"\n\nRetirees got badges that were silver instead of gold, had their number on them, and said \"Retired\" where the position normally goes across the top.\n\nTanya nodded. \"And you think I should take it?\"\n\n\"Yes.\" I said. \"You can't stay on. That's the Council's decision. So this is the best thing for you. At least you'll have some money coming in, even when you get another job. And your retirement will be official on May 1st, so you will get paid until then, and you'll be expected to be at the Awards Ceremonies that morning.\"\n\n\"Then I get the cake and well wishes and hugs goodbye.\" Tanya said, trying to sound stoic... but it didn't last: \"And then... what... what am I going to do?\" Tanya asked. \"I... all I know is being a cop.\"\n\n\"Don't you know by now I take care of my people?\" I asked as I heard the crunch of tires, signifying cars pulling in. Thank goodness for the timing, I thought to myself. \"So, let's see what your new visitors have to say.\"\n\nThe doorbell rang, and I got up to answer it. Governor Val Jared and Chief Griswold, along with SBI Deputy Director Tom Conlan and a couple of Jared's staff, were at the door. I invited them inside.\n\nChief Griswold hugged Tanya, and introduced the man who needed no introduction, our State Governor. Jared sat down by Tanya.\n\n\"Lieutenant Perlman,\" said Jared, \"I heard of the attack on you and your family, and I'm so sorry to hear of your injuries. I also know that you'll be moving on from the Police Force. And that's why I'm here... I need your help.\"\n\n\"How so?\" asked Tanya, trying to hide the shrewdness in her eyes.\n\nGovernor Jared said \"I need a really top person, the very best, to be Director of the State Crime Lab here at the University when it's completed. I need someone who knows what is going on in a Crime Lab, is of unimpeachable integrity, and is a leader of people that can get things done. And I know that you are exactly the person to be that.\"\n\nThe Governor continued: \"It's not a political appointment, so you don't have to go through those hoops. It's fully wheelchair-accessible in the building, so there'll be no problems there. And you can live here in Town where you always have.\"\n\nTanya turned to me, her eyes boring into me. \"Damned if you didn't get me back in the Crime Lab, Commander Troy!\" said Tanya to me. She was trying to joke about it.\n\n\"I would've preferred it otherwise, but at least you've done it before.\" I said. \"And I know you're going to get me back by stealing my Crime Lab people from me.\"\n\n\"And this was a group effort, wasn't it?\" Tanya said, looking over at Chief Griswold, whose mustaches were twitching merrily.\n\n\"Oh, I only told the Governor how good you were, and are.\" said Griswold. \n\n\"And the word of Chief Griswold and the Iron Crowbar are all I need, Ms. Perlman.\" said the Governor. \"You'll still get to work on solving crimes. And I'm going to appoint you to be a Lieutenant in the SBI, which will give you additional authority and allow you to work crime scenes with CSI teams.\"\n\n\"I think I heard words like that the last time I was put in a Crime Lab.\" said Tanya, her eyes boring into me. I just looked back at her.\n\n\"Okay.\" said Tanya, knowing this was a good thing for her. \"I accept your offer, Governor Jared. Thank you.\" \n\n\"Outstanding!\" said Griswold. I just nodded.\n\n\"Welcome aboard.\" said Jared. \"Harold Bennett is the Regional Director, and you worked with him in the TCPD before. He was very enthusiastic when I asked about putting you in as Director and Administrator. And everyone knows of the integrity of your work with the TCPD Crime Lab... that'll be a huge boost for all the law enforcement agencies in the State.\"\n\n\"Okay, Governor, you can stop campaigning.\" Tanya said with a grin. \"I'm taking the job.\"\n\nThe Governor laughed. \"Okay, okay. Well, I need to go. Let's get some pictures for the Press announcement.\" They posed for a couple of photos, then the Governor began making his goodbyes.\n\nAfter they left, I handed Pete to Tanya and said \"I've got to get back. I'm glad you're taking that job. It'll be good to have a member of my Team in charge of that place.\"\n\n\"I thought of that.\" said Tanya. \"I'd hate for you to have to work with Sharples or someone worse.\" I grinned, or more like a painful grimace.\n\n\"Okay, I gotta go.\" I said. \"I'll talk to you very soon. And congratulations. Even if it's not a perfect solution, it's still a big job, and you'll do very well in it.\"\n\n\"Thanks.\" said Tanya. I made my goodbyes and left.\n\nStill, nothing could assuage the pain of not being able to be a TCPD Police Officer any more. In a way, Tanya was feeling what Pete Feeley had felt when he didn't make Detective, and it was a very helpless feeling. The tears came, and they flowed freely...",
        "Then she looked at her baby, thanked God yet again that he was still alive, and also gave thanks for friends like the Iron Crowbar and Chief Griswold... \n\nPart 5 - Motive\n\nBack at Headquarters, I went into the Main Conference Room. Chief Moynahan had been briefing the Governor on the 'Gunny Guernica' case. I sat and listened as the Chief went through the evidence reports and the data, including the devastating testimony of Agent Matty Graves.\n\n\"Wow.\" said the Governor. \"This is going to be a political bombshell, for all of us at the State level.\"\n\n\"Governor, Jack Lewis has his people scrambling to give him cover on this.\" said Tom Conlan. who was the Director of the SBI Reserve.\n\n\"Who is he going to throw under the bus?\" asked Governor Jared. \"You?\"\n\n\"I don't know, Governor.\" said Conlan.\n\n\"Me.\" I said. \"It's going to be me that Lewis tries to throw under the bus. Not directly, but through Ferrell. The SBI-NTF will say they got the wrong address, but that it was based on good intel... and that I interfered with their operation for the second time. They're going to try to say that if I hadn't have brought my people in, they would've gotten this thing resolved.\"\n\n\"What, with a massive coverup?\" growled Griswold.\n\n\"Very likely.\" I said. \"And with at least one dead SBI Agent, supposedly killed by Guernica's gun. By the way, Director Conlan... has there been any discussion with you about suspending me from the SBI Reserve?\" All eyes went to Conlan.\n\nConlan looked surprised, then looked like he'd been caught with his hand in the cookie jar. \"Not specifically.\" he said. \"But Inspector Maxwell contacted me and said that some local groups here wanted you investigated, with an eye towards your suspension and removal from the SBI Reserve program. She told them to present their evidence, to put up or shut up. Nothing else on it, though.\"\n\nGovernor Jared then said \"I've been hearing from a lot of State Legislators. Mostly Democrats, but a surprising number of Republicans, as well. They want me to bring the weight of my Office to bear upon you to get the Agents released. I told them what I told Jack Lewis when we talked: we're talking about the murder of a U.S. Marine here, and I'm going to let you local guys run with this and administer the legal process.\"\n\n\"My question is,\" said Tom Conlan, \"how could they make a mistake that bad?\"\n\n\"The answer to that is simple.\" I said, my face growing dark. \"It wasn't a mistake.\"\n\n\"What do you mean?\" asked the Governor.\n\nI looked around the room. \"Governor, would you mind if you and I have a word alone, just you and me?\" I asked. \n\nEveryone looked surprised, but he nodded and asked everyone to leave the room. I told Chief Griswold he could stay, but he said it was best that whatever I said was only to the Governor...\n\n* * * * * * * * * * * * * * * *\n\nOnce Graves had turned, three other SBI Agents were also eager to cut deals. After hearing their 'hypothetical' stories, Paulina chose one of them to receive immunity, as his story was the most complete and best corroborated Graves's story. The other two received offers of lesser charges. One of them had a decent lawyer who worked the charges down further, and that deal was taken. \n\nThe other man, named Rogers, said that what he was being offered was not enough, and he turned it down.\n\n\"My client has to have to have full immunity.\" said his wily lawyer, a tall, slender man with horn-rimmed glasses and gray hair that stuck up on the sides, like a bespectacled, freakish Crusty-the-Clown.\n\n\"Why should I give him that?\" I asked. \"You need to understand that we already have confirmed testimony that Agent Rogers was one of the drivers of the SBI vans. So he had to know where he was driving to, and what County he was actually in.\"\n\n\"That's why he needs full immunity in exchange for his truthful testimony.\" said the lawyer. \"He can give you more than most of the others, but he needs more.\"\n\n\"I don't agree.\" I said. \"He knew more, therefore his guilt is much greater. Therefore, he is going to have to come correct more, and get less in return.\" Talks quickly broke down after that.\n\nAnd next was Agent Greenwalt, who was represented by a much younger legal beagle. But the guy was a pretty smart and competent lawyer, Paulina and I both quickly noticed as the interrogation went along.\n\n\"What are you offering?\" he quickly asked.\n\n\"Right now, I have no reason to offer anything.\" I said. \"Not only did Agent Greenwalt participate in the murder of a United States Marine... it was a Hispanic man that was murdered... and Agent Greenwalt has been known to make racist statements on several occasions, as well as associate with known racists.\"\n\nThe lawyer quickly whispered something to Greenwalt to keep his client from speaking. The lawyer then said \"It's not racism to complain about White's being discriminated against and held back by Affirmative Action programs that go too far. My client also didn't know that an Hispanic family lived in that home... in fact, the correct address would've been of a white man. I don't see how you're going to prove racism from my client.\"\n\nO-kay, I thought to myself, my first line of 'inquiry', designed to shake up Greenwalt, had been pretty effectively rebuffed. So I tried a different line.\n\n\"Okay,\" I said, \"so your client also was involved in an attempt to take baby Peter Donald Feeley out of University Hospital, and away from my custody, which I still do not appreciate. Why was your client involved in that, which I consider a kidnapping attempt?\"\n\n\"My client left the premises upon your orders, when it became clear that Ms. Farris was not on solid legal ground in that matter.\" said the lawyer. \"I might add that she was Black, and my client seemed to have no problem working with her or associating with her.\"\n\n\"And she ended up dead, too.\" I said.\n\n\"Are you accusing my client of that?\" the lawyer asked, anger creeping into his voice.\n\n\"I just bring it up to round out the picture.\" I said. \"So, Agent Greenwalt, what is your relationship with SBI Agent Leonard Sharples, a.k.a. 'Sergeant' Sharples?\"\n\nGreenwalt had been listening and watching with a Rudistan-like grin on his face, but now he frowned. I peered at him, knowing I was finally getting somewhere. Alas, the lawyer was a bit too active. He whispered something to Greenwalt, who then said \"On the advice of my counsel, I invoke my Fifth Amendment rights to not answer any questions.\"\n\n\"Well, that should do it.\" said the lawyer. \"If you want him to abrogate his Fifth Amendment right, you'll have to offer him something significant in exchange.\" I looked at Paulina, who looked at me... then we both got up and left.\n\nOnce in the anteroom, I said to Paulina and Cindy, \"You know, I should probably be asking them what they would've done if they'd hit the correct house in Nextdoor County.\"\n\n\"If they had, my sister would be asking them these questions,\" said Cindy, \"and wondering why they murdered Tom Riordan in cold blood.\"\n\n\"If he was even at home, which I suspect he wasn't.\" I said. \"Captain, you might want to discreetly inquire with your friends and relatives of the Nextdoor County Police Force, and see if Mr. Riordan was indeed at home.\" Cindy took out her cellphone, which had reception somehow, and dialed a number.\n\n* * * * * * * * * * * * * * * *\n\nLast was SBI Agent Justin Pelletier. He was tall, curly brown hair, fairly slender body and in shape.\n\n\"Okay,\" I said as Paulina and I sat down opposite him, \"you have a verrrry interesting file here, Agent Pelletier. Military record... went to Special Forces Assessment School, all the way through it, then failed to make the cut. The evaluation of you was that you were too much of a hothead if and when you lost control of your emotions. Then an 'other than honorable' discharge from the Army, finally corrected to 'honorable' discharge after some serious legal work by your lawyer. Then the SBI, where you've been on the borderline of getting fired until Dick Ferrell brought you into the NTF to lead raids.\"\n\n\"My client has a clean record.\" said Pelletier's attorney, a man with graying hair on the sides, octagonal glasses, a very bushy gray mustache, a square head and somewhat chubby cheeks. His neck bulged out of his shirt at the collars, mostly because the shirt was too small and the tie too tight.\n\nThe tightness of the shirt also made him look bigger than he really was.. He was medium height and looked stocky, but he was pretty average, fair-to-middlin', in his girth. His name was Chuck Roland. He was not provided by the SBI, but a card-carrying member of... you guessed it... Gresham & Mason, P.C.\n\n\"Not what I'm seeing here.\" I said. \"No less than five open investigations by the SBI's Office of Ethics and Review of possibly taking bribes to look the other way at drug deals, and two investigations of drugs that were captured as evidence subsequently disappearing while in your team's custody.\"\n\n\"None of them finding that my client did anything wrong.\" said the client. \"Those allegations were filed by inferior Agents looking to advance their own careers by smearing my client's good name.\"\n\n\"Well,\" I said, \"that's just building blocks leading up to the first degree murder of Manuel Jose Guernica, a United States Marine. Agent Pelletier led the raid, and two agents turning State's evidence will testify that your client continued to fire bullets into Guernica well after he was lying on the ground, dead.\"\n\n\"The drug perp had a gun was was going to shoot my client.\" said the lawyer. \"My client was securing the scene. He did nothing wrong.\"\n\n\"Are you really going to waste my time with this?\" I asked. I looked over at Paula. \"No deals at any time for this one. Let's go for the death penalty, too.\"\n\n\"You took the words right out of my mouth.\" said Paulina. We got up and left. I could feel the hostility of the lawyer as he watched us go.\n\nIn the anteroom, Cindy was still watching through the one-way glass. She turned to me and said \"There's something not quite right about that guy.\"\n\n\"Pelletier?\" Paula replied. \"He's as dirty as they come.\"\n\n\"No.\" said Cindy. \"The lawyer. I am sensing something there...\"\n\n\"His name is Charles 'Chuck' Roland.\" I said. \"Check him out thoroughly, Captain. I was getting what you'd call a 'vibe' about him, too...\"\n\n\"You Troys and your vibes...\" Paulina muttered as she left the anteroom. Just then, a Third Precinct Duty Desk Officer came to give me a message...\n\nPart 6 - Opportunity\n\n\"Welcome to the Six O'Clock News!\" intoned the announcer. \"At the Channel Two Newsdesk, Amber Harris and John Hardwood.\"\n\n\"Welcome, everyone!\" said the athletic blonde Amber Harris. \"It has been an enormous news day here in the Town & County today, beginning with the arrest and arraignment of eight SBI Agents on a raid that killed U.S. Marine Manuel Jose Guernica, and ending with a volcanic announcement by Governor Jared! But first, let's go to Bettina Wurtzburg at the Courthouse. Bettina!\"\n\n\"Thank you Amber!\" shouted Bettina from in front of the Courthouse. \"After leading the teams that caught the SBI Agents in the act of their murderous raid last night, Commander Donald Troy called a news conference today, and explained exactly upon whom he thought the blame lay. Roll tape!\"\n\nThe tape rolled. Your Iron Crowbar appeared at a podium. \"We have conclusive evidence, as well as eyewitness testimony, that this SBI raid was not just a mistake of address, but a brutal assault upon an innocent family in which a six-year-old child was literally branded with the hot metal of a rifle and a two-year-old's head was stepped on by the boot of an SBI thug. And worse, a United States Marine was struck forty one times by SBI gunfire as he defended his family!\"\n\n\"FORTY ONE TIMES! ladies and gentlemen!\" I shouted. \"Forty-one times. Let that sink in! The SBI emptied their guns into this man, who had committed no crime, who did not fire his own pistol, and who was not alerted to a police raid as the SBI did not announce themselves but broke in and invaded his home like common thugs in the night!\"\n\n\"Ladies and gentlemen,\"I went on, very much into it, \"the blood of this dead United States Marine will forever stain the filthy hands of SBI Director Jack Lewis! I blame Jack Lewis for the death of this husband and father! Jack Lewis allows his agents to use Gestapo tactics, flout the law, and commit murder. Yes, outright murder! I am seeking first-degree murder charges against the leader of the raid, Justin Pelletier, and other members of his team. And I am asking for a full investigation by the FBI, the Federal Bureau of Investigation, of the State Bureau of Investigation from the top down... especially the very top, beginning with Director Jack Lewis!\"\n\n\"I call upon Director Lewis to resign as Director of the SBI!\" I shouted. \"I call upon him to reconsider his campaign for Governor, and to drop out of the race And if he won't have the decency to do that, I ask you to consider an alternative candidate to Jack Lewis to be our next Governor!\"\n\nWith that, I turned the podium over to the Governor of the State, Val Jared. And he made sure he got the Media's undivided attention.\n\n\"At Commander Troy's request, as well as that of Police Chief Sean Moynahan, I will indeed be asking the FBI to assist the TCPD in further investigating this brutal crime of murdering Gunnery Sergeant Guernica and physically abusing his family.\" said the Governor.\n\n\"I also have an announcement to make.\" said Jared. \"For the longest time, I've been encouraged to run for a second term as your Governor. I had not intended to run again, but after this incident, and what I can see is a continuing problem in the State Bureau of Investigation, I do not believe I can leave a mess for the next Governor to solve. The People of this State must have a level of trust in their law enforcement that is beyond reproach, and we do not have that at the State level. Therefore, today I announce that I am running against Jack Lewis for another term as Your Governor...\" \n\nCheers erupted by the 'onlookers' who had been planted in the crowd. Cindy and Paulina, standing by on the stage's edge, whispered to each other.\n\n\"Wow.\" said Paulina. \"I heard that the Iron Crowbar convinced the Governor to run again. How did he manage to do that?\"\n\n\"I don't know,\" whispered Cindy, \"but I do know that something has ticked Don off... bad. I don't know what it is... but I don't think I've seen him as focused and 'into it' since Pete Feeley died. He is really, really into it...\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/semper-fidelis-ch-01"
}