{
    "title": "The Master and the Ring Ch. 09",
    "pages": [
        "As Henri slept, the two sisters went to work quickly. Couriers rode sealed messages throughout the capital city and pigeons were release to announce the engagement of the king to Lady Yvonne of house Granvas. By midafternoon the city was abuzz with the news and as the pigeons arrived in the nearby cities and villages, the glad tidings spread throughout the country.\n\nAs Yvonne and Serena's house became noisy with activity, Henri was awakened. He had slept well past the noon hour and felt refreshed. He found himself alone in Yvonne's bed with the doors closed and locked. It would not be proper if he were to be discovered by a servant, or anyone for that matter. When he rose from the bed, he discovered fresh fruit and breads laid out on the table for him to eat and he hungrily stuffed his face, standing by the table naked. Voices could be heard outside the chamber and they became increasingly louder as they approached. He heard the key in the lock turn and quickly found and put on the robe Yvonne had supplied him with earlier.\n\n\"Oh, good, you're awake. And how was your rest?\" Yvonne asked, seeing Henri just put the robe on as she closed and locked the door. She quickly went to him, putting her arms around his body.\n\n\"Wonderful, it has been a long time since I have slept in a bed such as this.\"\n\n\"Good. As you were sleeping, Serena and I have been busy. Our engagement has been announced. The entire city knows of it. Your whereabouts have been inquired. You must make an appearance at the palace and I must be presented to the crowds as is custom.\"\n\nShe kissed him, rubbing her body against his. Her breasts smashed against his hard chest and she wanted him even more now that he had returned. \n\n\"Is it safe?\" Henri asked, breaking the kiss.\n\n\"Yes, the announcement has generated safety in the form of public awareness. Crowds gather and with them added palace guards. You should be well protected,\" she said untying the robe and moving her hands inside to find his warm flesh.\n\nHer hands felt wonderful on his body, running up his chest and trailing down to his abdomen and lower to his growing shaft.\n\n\"Do they know I am here?\"\n\n\"No. We told them you departed after the proposal. I can supply you safe passage to the palace in one of my covered carriages. I should come with you for the official announcement,\" she spoke as she fell to her knees with his quickly rising shaft in both hands.\n\nHe gasp with bliss as her hot mouth opened to take his almost fully engorged head inside. She descended gradually until she had half of his long member in her mouth. Pleasure surged through him as her talents were showcased. \n\n\"Very well. Before we go... there is something I must discuss with you and Serena.\"\n\n\"What is it, my king?\" Yvonne said, removing his cock only long enough to speak.\n\n\"Serena must be here as well. You both need to hear this at the same time.\"\n\nYvonne did not respond. He looked down and watched her head bobbing up and down on his shaft as she felt her hands rolling his large testicles in her hands, the loose skin making it easy. Intense waves of pleasure surged through his shaft as she sucked and worked her lips tight around his head. Her tongue expertly caressed his crown and the underside of his cock, as she was deep. He had missed her technique. She did it not only well, but with the care of someone that he knew loved him.\n\nHis vision blurred as he watched her blond head move up and down below him. His legs faltered, and he had to grab hold of the bedpost for support as the sensation increased in intensity. She was holding nothing back and fully expected him to surge forth into her mouth. Already his scrotum was tight, forcing her to rub his sack, as more was impossible without hurting him. He felt his loins beginning to boil, the impending climax coming soon. His breathing increased and his heart raced in his chest.\n\nShe suddenly tilted her head and looked up at him with half his wide shaft in her mouth. Her loving eyes adored him and this set him off. His cock exploded with a force he did not expect after having both sisters the night before. The pleasure was as intense as any he could remember and he felt his cock expand as the semen surged forth into her mouth. She maintained her grip as the next contraction shook Henri's body and the semen ejected itself from his body. Moving her hands from his sack, she stroked the bottom half of his cock until he stopped convulsing and had emptied his load into her mouth. She carefully withdrew, not wasting a drop and swallowed the entire load he had deposited as he watched with open mouth.\n\n\"Serena isn't the only one that enjoys a healthy helping of you. I do as well, but I found it gave her something to look forward to in our captivity,\" Yvonne said, after swallowing.\n\n\"I see. I will take note of this, my lady.\"\n\n\"As well you should. Now what was this you needed to tell us?\" she asked, licking her lips for any remains.\n\n\"Retrieve your sister and I will relay what I must.\" \n\nHenri saw the concerned look Yvonne gave him before she left to retrieve her sister. He was fully dressed by the time the two women returned and entered the chamber. Once they were seated, he began telling them everything about his trip to Garigasia and finding the Temple of Mentula. The two women sat spellbound as he relayed the events leading up to the destruction of the ring. He had made sure he mentioned both Heather and Arianna in the story by name, hoping that would ease the shock of what he needed to ask the sisters.\n\n\"After I destroyed the ring I began my journey back here but soon found I was being followed. I almost killed Heather and Arianna before I discovered it was they who pursued me.\"\n\nHe paused before continuing, \"They are here in the city. They have requested to be my servants in the palace.\"\n\nYvonne spoke first, \"Let me understand this... you brought two witches of Mentula back with you? You can't be considering honoring their request. How can you trust them?\"\n\n\"They saved my life from mercenaries in no man's land. They can be trusted I assure you.\"\n\n\"You've had relations with them, I can see it on your face,\" Serena said, bluntly.\n\nHenri's face went hot; he hesitated, giving himself away further. Yvonne stood up quickly and walked across the room. Henri stayed silent, allowing her time to process this new revelation. Serena stared at Henri, more glaring than staring.\n\n\"I want to meet them,\" Yvonne suddenly said as she turned to face Henri. \"If they are to be servants in the palace, I as queen must approve of them.\"\n\n\"I intended for you to meet them, I told them both I had to discuss it with you first. They are staying at The Rusted Pot. We can stop in before the palace if you wish,\" Henri said.\n\n\"Are they beautiful? They must be if they are daughters of Mentula. Do you care for them?\" Serena asked.\n\n\"I cannot lie... I do care for them. But no more than I do you?\"\n\n\"And no less?\" Serena inquired.\n\n\"Serena! King Henri has been through a horrendous ordeal. He owes these women his life and we owe Henri ours. You shall not ask such thing of him,\" Yvonne interrupted.\n\n\"I apologize, my king... I forgot my place,\" Serena said, bowing her head.\n\n\"No need. You are fully justified in your inquires, Serena. We have all been through much together; you and your sister with me, Heather and Arianna with me also. I feel a bond between all four of you. I hope you can become friends with them. But you should meet them first.\"\n\n\"I'll have the carriage prepared,\" Yvonne said, leaving the room.\n\n**\n\n\"Engaged! How does Yvonne even know this imposter?\" Lord Byron bellowed, holding the message.\n\n\"During the occupation, my lord. She and Serena, the youngest daughter, became close. We know no more than this,\" the squirrely servant responded.\n\n\"My dead sister's daughter to be queen! Quite a turn of events. Leave us,\" Lord Byron said.\n\nThe servant left, leaving Lord Byron with his two eldest sons and one hidden housemaid.\n\n\"Do you still want him killed?\" the eldest asked.\n\n\"Yes, but not until after the wedding. With her on the throne as his queen, House Granvas' take over will be that much simpler. Call off the assassins until further notice. Let Yvonne marry this fake king. Let him have his make belief kingdom and let him become comfortable. Men are easy to kill when they are happy.\n\n\"As you wish, Father.\"\n\nBoth sons left his chambers and the new housemaid, hiding behind some curtains, returned to his side. She was half-naked, her dressed pulled down around her small waste reveling her firm young breasts.\n\n\"Good news, my lord?\" she asked.\n\n\"Time will tell, my dear. Now back on your knees and bring life back to my cock.\"\n\nShe smiled and obeyed, falling to her knees in front of Lord Byron who sat in a plush red velvet chair as she took to her knees. She found his old limp cock, still slightly wet from her mouth just a few moments ago before they were interrupted with urgent news. Grasping it, she lifted the noodle, slowly stroking it before sucking the soft flesh into her warm mouth. Lord Byron moaned, the warmth of her mouth on his cold wet cock was exhilarating and he sat back in the chair and closed his eyes.\n\nThe maid sucked his flaccid shaft and fondled his saggy testicles. In time, she felt his shaft begin to plump in her mouth. A young man would have already ejaculated in the time she had just spent bringing the lord to erect. Her mouth and lips were tired but she had managed to bring him to full attention and once he was sufficiently hard he ordered her to the bed, which she was grateful for. Her knees and mouth were aching.\n\n\"On your knees, facing away from me,\" he commanded.\n\nShe did so with her dress still covering her bottom half. Byron came up behind her, lifted her dress and smacked her firm behind with his right hand. It smarted and she called out in surprise.\n\n\"You have a right fine ass, my dear. I think it is time to introduce it to my cock.\"\n\n\"What do you mean, my lord? We have already been introduced?\"\n\n\"This has,\" he said forcing two fingers into her wet sex and shoving them deep. \"I was speaking of your anus,\" he said, bending down and licking her forbidden hole.\n\nThe maid called out in alarm as she felt his hot wet tongue lather up her rosebud and she tried to pull away. \"No, my lord! This is forbidden, it is unlawful!\"\n\nHe grabbed her hips and pulled her back to him. \"There are no laws, we have no king. No real king,\" he said, pulling her ass apart and forcing his tongue into her anus.\n\n\"Oh... my... Lord Byron, please do not... ohh... my.\"\n\n\"Yes, it is not as bad as you would have supposed,\" he said, removing his face long enough to speak.\n\nThe housemaid was confused about the sensations rushing through her body as Lord Byron continued to insert his tongue as deep as he could into her forbidden hole. Her heart was racing and the naughtiness excited her beyond her common sense. When he inserted his longest finger, her ass spontaneously clenched and pinched tight around his shaft.\n\n\"Just relax my dear. It will only hurt worse if your fight it.\"\n\nShe felt a tightness pull as he moved his finger deeper into her and she tried to relax but her breathing was in such gasps it was difficult to even breathe. She felt her muscles convulsing around his finger and she strained to stop them from clenching. She felt another finger begin to probe around the tight connection between her body and his hand. He was going to add another and she feared it would be too much for her.\n\n\"No more, my lord... it won't fit.\"\n\n\"It will, you will make it fit, for my cock is wider still.\"\n\n**\n\nThe covered carriage hid Henri well as Yvonne and Serena rode with him to The Rusted Pot. There were only a few people loitering outside when they arrived and quickly went inside. Mary, the barmaid, caught Henri's eye as he walked into the common room. She smiled at him and he nodded slightly back, heading to the stairs to the upper rooms. Henri knocked on Heather and Arianna's door as the sisters stood behind him. Heather answered with a serious expression on her face, which darkened when she saw the two women behind Henri.\n\n\"You brought them here?\" she asked.\n\n\"Yes, they wanted to meet you. Can we come inside?\"\n\nHeather simply opened the door wider and stepped aside allowing Henri and the ladies of House Granvas to enter. No one noticed Mary walking slowly toward them as Heather closed the door.\n\n\"May I introduce Lady Yvonne and Lady Serena of House Granvas? Yvonne has accepted my proposal of marriage to be my queen.\"\n\nArianna stood and tried an awkward curtsey. Heather's was nothing more than a slight bend of the knees.\n\n\"This is Heather and Arianna, former daughters of Mentula. I have already told Yvonne and Serena of you desires to serve at the palace. They wanted to meet you and...\"\n\n\"And thank you for saving the king's life,\" Yvonne interrupted, walking forward to grasp Heather's hand and then Arianna's. \n\nSerena quickly followed her sister's lead and did the same, smiling at the two stunning women before standing awkwardly next to Henri. He didn't know what to expect. So far, the introductions had gone well and he was hopeful Yvonne would be as understanding as she seemed.\n\n\"We have heard much about you from Henri. He speaks very highly of you both,\" Heather said.\n\n\"He has also told us much about you, the rings and your desires to serve him now that the Master and the Ring has been destroyed,\" Yvonne countered.\n\nThis made both Heather and Arianna quickly look at Henri, who shook his head slightly as to tell them not to mention his desires to fix the Ring.\n\n\"Yes, now that Mentula is no more we wish to serve Henri as king. We have nowhere else to go or purpose now,\" Heather said.\n\n\"It must be difficult, after pledging your lives to the order?\" Serena asked.\n\n\"Yes, but we are adjusting. Henri opened our eyes to the truth,\" Arianna spoke.\n\n\"I'm guessing you do not have much experience in service,\" Yvonne continued.\n\n\"No, my lady, but we are quick learners. We will serve him faithfully and fulfill any request the king desires,\" Heather said.\n\n\"Ah, and there it is... the truth... finally,\" Yvonne sniped.\n\nThe tension multiplied exponentially at this statement from Yvonne. She continued without missing a beat. \"Do you think me a fool? I know your true desires. You wish to have my Henri for yourselves, to lie with him and worship him as the last Master. He has already divulged he has lain with you both; do not try to deny what I and my sister know.\"\n\n\"Yvonne!\" Henri began.\n\n\"No... she is right, my king,\" Heather cut him off. \"We do not deny our desires for him. What you do not understand is what we can give him. I'm sure you have heard of the stories. How practiced the Daughters of Mentula are. These stories are true. Your fear is justified, Lady Yvonne. We can give him pleasure beyond his utter most fantasies. Do things to him you cannot comprehend.\"\n\nYvonne moved forward as if to strike Heather but Henri stepped quicker and got between the two women. \"Now let's be civil, ladies. I hoped you all would come to an agreement on your own but now I see that was a vain imagination of mine. I see that four women will never come to an agreement unless they are focused on one common goal.\"\n\n\"What are you saying, Henri?\" Yvonne asked.\n\n\"I have not told you and Serena everything, but I see that I have to now. I cannot protect all of you, myself, the nation, without the power of the Ring. The war has weakened our nation to the point we would be unable to repel an attack from Garigasia or anyone for that matter. I as king am responsible for the safety of this nation. I cannot protect myself let alone fight an invasion without the Ring.\"\n\n\"I don't like where this is going, Henri,\" Yvonne said.\n\n\"There is no other choice, Yvonne. I've asked Heather and Arianna to repair the Ring with their power,\" he said and Yvonne immediately started to argue.\n\n\"Just listen! There were four Mothers, four rings linked to the one. There are four of you.\"\n\nYvonne's mouth dropped open and Serena gasped audibly as they both began to comprehend what he was saying. Heather smiled and looked at Arianna. \"There is one large problem, my king. They are not daughters of Mentula... they are not witches.\"\n\n\"Could they not learn? Or does one have to be born with the gift?\" Henri asked.\n\nHe saw the look pass between Arianna and Heather. There was silence and finally Arianna spoke.\n\n\"You must tell him the truth or I will.\"\n\n\"What truth?\" Henri asked.\n\n\"The Ring controls the Master,\" Heather said.\n\n\"The Mother's said that before. What of it? I fought it before.\"\n\n\"The power was meant for them, not the bearer of the Ring. Its power will destroy you, not preserve you as it did the Mothers. Eventually you will die with continued use.\"\n\n\"I'll be dead sooner if we do nothing. There is no other way, Heather... just tell me if it can be done!\" Henri shouted.\n\nArianna pushed forward between Heather and Henri. \"Every woman has the spark of magic, some nurture that spark some do not even feel it. Your ladies, Yvonne and Serena both hold a large amount of that spark but as they have been born here, they would not recognize nor need to nurture it. Heather and I felt it when we grasp their hands this day. Heather would hide it from you. This spark is what fed the Ring and the mothers. Every woman Mentula had, extinguished that spark and took it for the mothers to be renewed. \"\n\nBoth Serena and Yvonne took a step back, huddling together, afraid to speak. \n\n\"It can be done but you do not know what you ask?\" Heather warned, glaring at Arianna. \"I only hide things from my king to protect him.\"\n\n\"I don't care what is required it must be repaired,\" Henri said again.\n\n\"You will care, my king... for the ring to be anew a soul has to be lost and I'm not speaking of yours. A spark must be quenched!\" Heather shouted.\n\n\"We have read the spell together. We know what has to be done,\" Arianna said.\n\n\"And you can do it? The four of you?\" Henri asked.\n\n\"Yes, it requires only one voice. We can link our power together, even the power they do not know they possess.\"\n\n\"And what of this soul that must be lost?\" Henri asked.\n\n\"A woman of course. Willing or otherwise. The spell requires you or the new Master to be engaged in sexual climax with this woman. As the spell is cast the Master is born and Mentula feeds,\" Heather said.\n\n\"She will not survive,\" Arianna added.\n\nHenri began to pace back and forth contemplating what he had just heard. He weighed this one life with those he loved, himself and his nation. If he did nothing Garigasia or another would destroy his country. For all he knew they were marching as he wasted time. \n\n\"One life to save thousands!\" he suddenly shouted. \"It has to be done.\"\n\nSuddenly the door to the room opened and Mary let herself in. \"I will be the soul. I willingly give my life to my king!\" she said, kneeling before the stunned Henri.\n\nShe must have been outside the door listening to their entire conversation.\n\n\"Mary? You do not know what you say,\" Henri exclaimed. \n\n\"Yes, my king, I do. It would be a great honor to die for you, for my country. My life would finally have meaning. I am nothing, a simple barmaid. This act will secure my name through the ages. You must let me do this.\"\n\nHenri was conflicted. In his mind, he knew some woman had to be killed but he did not want it to be someone he knew so well or at all. Mary looked determined. He has seen that look in women before. Nothing he could say would change her mind.\n\n\"You honor me and your country with you willingness. I wish you would reconsider. It does not have to be you.\"\n\n\"Yes it must, my king. You said you would do something for me for helping you yesterday. This is what you can do.\"\n\nSilence followed. The four women looked around the room at each other and watched Henri struggle with this request of Mary. They saw the wrestle within him, the honor and integrity the man possessed. He did not want Mary to die but saw no other way.",
        "\"Very well.\"\n\nMary stood quickly, embraced him, as if she had not requested her death but marriage. She smiled gleefully and acted like she wanted to die immediately for him.\n\n\"See to the plans; instruct Yvonne and Serena in what they must do. I must go to the palace,\" Henri said.\n\nHe was distraught and quickly left the room, closing the door on the five women.\n\n**\n\nLord Byron's second finger began to ease into the housemaid's ass. She squealed from the stress but he did not stop. Her breathing became pants and she put her head into the bed cover to suppress her screams.\n\n\"Almost there, just relax,\" Lord Byron said, finally straightening both fingers deep into her tight young ass.\n\nHis cock was throbbing. The forbidden act had kept even his old cock erect and oozing with just his fingers in her. He held himself deep a few seconds before he began thrusting into her with his digits. She whimpered and moaned into the bed, her legs shaking from strain. He spit onto his moving fingers, which seemed to ease the friction and continued to finger the young woman's virgin bottom.\n\nWithdrawing, he watched her red hole quiver and pulse as his fingers left her body. He was overly aroused, his own heart beating with excitement and his cock begging to enter her. Not wasting time, he grabbed his head, rubbed his effluent around the tip and pressed it toward her forbidden hole. His first lunge missed entirely and found her wet sex below, rushing in with little resistance. She called out in pleasure but he only pulled himself free and took hold of his cock so it would not go astray a second time. Her juices coated his member, and this, he soon realized, helped the young woman as his head eased inside of her tight orifice. He felt the heat and extreme tension pinching his head. He was overwhelmed with the pleasure and excitement of what he was doing, pausing to bask in the sensations with just the head of his cock inside.\n\n\"It's too much! Please take it out!\" she screamed.\n\n\"We are just getting started. Do not fight it,\" Byron said, feeling the blood pulsing in his shaft as if he was young again.\n\nLuckily for the maiden, Lord Byron was enamored by the visual and the sensation of her exquisite ass pinching the head of his cock, making him pause for a good deal of time before trying to enter her further. Her muscles relaxed enough in the time given, for the strain to ease and his shaft slowly entered her with much less friction. The heat, excitement and firm grip on his cock was legendary. He had never felt something so intense in his fifty-seven years. As his cock bottomed out inside her, his testicles came to rest on her sex as he held himself deep. He suddenly felt her hand begin to play with herself and this brought on a noticeable difference in sensations. She was adjusting to his width and length the more she fingered her sex and clitoris.\n\n\"What's this? Does the little slut like it?\" he asked.\n\n\"It's improving, my lord... I'm adjusting to you.\"\n\n\"Excellent, then prepare yourself,\" he said as he withdrew his throbbing cock and thrust into the young woman much faster than the first penetration.\n\nShe squealed, and he felt her hand pick up the pace, rapidly rubbing her sex and clit. The second thrust increased his arousal, filling his cock with an increased volume of blood and sending intense sensations through his body. His heart had not pounded in his chest this hard in years; he felt it in his head and hoped he didn't expire due to the thrill.\n\n**\n\nYvonne felt like she might vomit. Serena actually did, but not fully. Yvonne could scarcely comprehend what had just transpired. It was too much to take in all at once. The idea of repairing the Ring that will eventually kill the one she loved. As well as knowing this innocent woman would sacrifice her life to make it so, cofounded Yvonne to near breaking. She was too overwhelmed to try and stop Henri from leaving and now she was seemingly trapped with Serena, who was worse off than she, with two witches and an exuberant woman prepared to die. \n\n\"Mary, why don't you get some water for the ladies, they look like then need a few minutes,\" Heather said.\n\nMary obeyed and left the room. Yvonne tried to gather herself, smoothed her silk dress and stood up straight. Heather smiled at her, and Yvonne felt it was actually genuine.\n\n\"This must be a rather large shock for you both. All of this hurdled onto you with no warning. You must focus on Henri and wanting to save him. He is right about a common purpose to unite us. We have to be of one mind to complete the spell. It will link us forever through these rings,\" Heather said holding four small gold rings in her hand.\n\nArianna also showed them the large broken Ring of the Master. Serena had also gathered herself at mention of the rings and both she and Yvonne walked nearer to view them.\n\n\"Henri told us the Mother's wore them on their clitoris. And they glowed like the large one,\" Serena said.\n\n\"Yes, the power will hold them secure when the spell is cast.\"\n\n\"You said we had power, significant power? How is this so?\" Yvonne asked.\n\n\"You both are strong, like an untapped source. We can show you how to use your power, which will be many times greater when we link,\" Arianna explained.\n\nSuddenly a half burned candle rose into the air and Yvonne and Serena gasped and shrunk back. Yvonne saw that Arianna was concentrating on it and assumed she was the one moving it.\n\n\"No need to be afraid, you too can do this and more with time,\" Arianna said.\n\nThe candle floated to the table and Arianna released it.\n\n\"We don't have time to teach you parlor tricks. We must prepare to cast the spell to return Mentual and the Ring,\" Heather exclaimed.\n\n\"Tell us what we must do,\" Yvonne spoke.\n\n**\n\n\"Oh yes, my lord, don't stop!\" the young maid voiced.\n\nShe knew if she acted as if she was thoroughly enjoying her ass being penetrated, the old man would ejaculate sooner. The thing that she found strange was she actually did. As long as she kept playing with her clitoris the sensation of his hard cock thrusting and withdrawing was quite pleasant. He wasn't very big, not near the size she's had before but never in her anus. She could tell he was nearing his climax. He always made the same wheezing noises as he tried to get enough air into his old lungs to keep from passing out. She did notice his cock was much stiffer than normal; he was obviously excited about the forbidden act.\n\nIt only took a few more thrusts and Lord Byron groaned, holding himself deep as his penis began to spasm and spill his seed into her bowels. She continued to play with her sex during his climax and brought herself to a small orgasm, which made her muscles clench and milk his spewing cock. He moaned all the more and she feared he might collapse on top of her from the noises he was making. Luckily he did not expire and withdrew his spent shaft from her body and fell onto the bed next to her, breathing very rapidly and sweating like a pig over an open fire.\n\nShe felt his semen oozing out of her open anus, down over her sex and dropping to the floor as her bottom was protruding off the bed.\n\n\"Will that be all, my lord?\" she asked, standing up.\n\n\"Yes... that... will... be... good... for... today,\" he struggled to say.\n\nShe fixed her dress and snuck out of his chambers.\n\n**\n\n\"Will the Ring become whole again as the spell is cast?\" Serena asked, picking up the two halves.\n\nShe remembered the ring well, remembered yanking it off the Master to save her sister Yvonne, months ago. Now broken it just seemed like two pieces of gold with runes engraved on the sides.\n\n\"No, the Ring will need to be heated and forged once again. It is not the actual gold or the Ring that is the important thing. It's the runes and the completion of the spell. Do you know a goldsmith that can repair it?\" Heather asked.\n\n\"Yes, we can have the repair made before we meet to cast the spell,\" Yvonne said, taking the ring from her sister and putting it in her pocket.\n\n\"Then we are ready. In two nights, the moon will be full and we can cast the spell. Mary, you may want to say your goodbyes to family if you have a need,\" Heather said.\n\n\"My family was killed in the war, mistress. I have no one.\"\n\n\"Very well, then I suggest preparing yourself to see them by praying to the ancients. There isn't much time,\" Yvonne stated.\n\n\"I'm ready to give my life now.\"\n\n\"As you say. Then all is prepared as soon as the Ring is forged,\" Arianna said.\n\n**\n\nThe assassin blended in with the crowd, following the king unnoticed as he hoped. He couldn't believe his luck. To be in the right place at the right time to find the king unguarded, was a gift for him but very stupid on the part of the new king. He grasped the hilt of his knife under his tunic, prepared to strike a quick blow to the right kidney. The severe pain would keep the king from being able to call out, and he would bleed internally before anyone knew what had happened.\n\nA few more steps and he would be within striking distance.\n\n**\n\nHenri was unaware of the danger he was in, quickly moving toward the palace through the crowd, which increased in size the closer he got. A cry, followed by a gurgle sound directly behind him, made Henri turn quickly. Blood sprayed his face as the blade cut through the neck of the would-be assassin. Standing a foot taller, behind the dead man was General Sharis. A long narrow blade fell from the dead man's hand and clattered to the stone road as Sharis dropped the man's body to the ground. Women screamed and the crowd scattered, leaving Henri and the general alone in the newly formed circle of people.\n\n\"You need to be more careful, my king,\" the general said. \"You're lucky I've been following you since the inn.\"\n\n\"Indeed, my good man,\" Henri said, finally realizing his near death peril.\n\nPalace guards rushed forward and cleared a path for Henri and took the body of the assassin away. Henri followed General Sharis the rest of the way and inside the palace.\n\n\"I've been trying to find you, my king. There is urgent news from the south,\" Sharis said.\n\nHenri poured some water from a pitcher into a basin and began to clean the blood from his face as the general continued.\n\n\"It is as I feared. Garigasia amasses along our southern border. Our men stopped counting at seven hundred and fifty thousand. I estimate they out number us three to one and that is being optimistic.\"\n\n\"Pull everyone toward the capital, farmers, ranchers, everyone. Prepare our forces and arm as many people as can wield a weapon.\"\n\n\"It will be a slaughter, my king. We must consider surrender.\"\n\n\"We will not surrender, not this time. I will lead our people. The Master will return.\"\n\nSharis was taken aback by this statement, he hesitated before continuing. \"I thought the Ring was destroyed.\"\n\n\"Plans are in motion to rectify this problem. Just keep me alive until then.\" \n\n\"As you wish, my king.\"\n\n\"Also, there are five women at The Rusted Pot who need protecting as well. Bring all of them to the palace as soon as possible,\" Henri said, washing out the cloth in the pinkish water.\n\n\"It shall be done,\" the general said, leaving Henri.\n\n**\n\nArianna and Heather walked around their new quarters in the palace. Mary, not feeling herself worthy of her own room, requested to board in a small servants quarters off the large chamber where the witches were settling in. Mary listened as the two daughters of Mentula discussed their new surroundings until she heard Henri's voice. \n\n\"I hope the accommodations are to your liking?\" Henri asked, with a smile.\n\n\"Oh yes, my king, much better than the inn,\" Arianna said as she turned to find Henri standing in the doorway to her and Heather's new quarters.\n\n\"More than we deserve, my king,\" Heather added.\n\n\"Nonsense. It is the least I can do. Your task is of the upmost importance now. The enemy is all but at our gates and we will not survive without the Ring.\"\n\n\"Everything is planned, my king. The night of the full moon the spell will be cast and Mentula will arise once again,\" Heather said.\n\n\"Excellent, then I will leave you and check on the others.\"\n\n\"Or you could stay?\" Arianna said quickly, pulling her gown off her shoulders to collect around her waist.\n\nMary heard them conversing and now with the long pause after Arianna's last question; Mary peeked around the corner of her small quarters into the large and spacious room. Her eyes widened as she view the half-naked Arianna and the stunned look on the king's face.\n\nHenri swallowed, staring at her amazing breasts. He had many things to do besides getting caught up in sex with two daughters of Mentula but he found his legs would not obey his commands. Heather didn't help the situation when she approached Arianna and began to suck on one of her exposed nipples. When Heather released it to talk, it was erect and glistening in the lantern light. Henri's cock lurched in his pants and his heart quickened.\n\n\"Come, my king. Join us,\" Heather said, holding out her hand before taking Arianna's nipple back into her mouth.\n\nHenri's cock took over. His lust moved his legs forward instead of backwards and he closed the door and joined Heather on the other side of Arianna. He grasped the untouched breast of Arianna, palming the whole of it before pinching her growing nipple between the knuckles of his largest two fingers. Arianna cooed at the attention, closing her eyes to the pleasure of his hand and Heather's wet mouth.\n\nHenri used his other hand, sliding it down her tight stomach, under her dress to find her moist sex. Softly he caressed her lips, brushing the hood that hid her clitoris, making her moan once again. Harder still, he spread her open and curled two fingers into her wet, velvet orifice, pulling his hand upward to dig his fingers deep.\n\nHis cock was straining against his trousers, unable to rise properly. His left hand penetrating Arianna's sex and his right fondling her wonderful gravity defying breast. Heather released her other nipple and turned to Henri, dropping to her knees as her hands found the beast trapped within his pants. She soon released it, taking hold with both hands and stroking him to the proper height, before opening her mouth to suck him in.\n\nWhen Mary saw Henri's magnificent cock, she remembered well her time with him pervious. Her hand naturally found its way under her dress to her aroused sex, brushing lightly her flushed lips. Her other hand ran across her small breasts as she watched Heather begin sucking Henri's throbbing cock and stroking it slowly. Mary's mouth watered and she felt herself moisten further as her fingers dug into her own tunnel.\n\nWith his fingers coated in Arianna's juices, Henri slid his hand lower, replaced his fingers with his thumb and began to massage the opening of her anus with his lubricated fingers. Heather's sucking was slow and gentle on his cock. He basked in the pleasure as his fingers penetrated Arianna's forbidden hole to the second knuckle. He switched breasts, making sure to keep both of her nipples erect with his right hand as his two fingers went deeper into her anus and his thumb opposite in her sex. The sucking continued and he fingered Arianna until he felt her climax on his hand several minutes later. \n\n\"Take her, my king, you are ready,\" Heather said, releasing his cock from her mouth.\n\nSuddenly, Henri lifted Arianna into the air over his cock. She wrapped her arms and legs around him, helping him support her. Henri felt Heather grab his shaft and position his head at the entrance to Arianna's forbidden hole. He lowered Arianna down and his cock eased in to her hot, taunt tunnel, causing the incredible sensation he had grown to love. She took him all with ease, inch by inch until his impressive manhood was buried to the base in her ass.\n\n\"Ohhh, yes, my king... Give me all of it!\" Arianna screamed in ecstasy.\n\nIn the other room, Mary cut off a gasp as she watched Arianna take all of Henri's significant length into her forbidden hole. Mary had never seen such a thing or experienced anything like it before. She was so amazed at the sight she stopped moving her hands on her breasts and sex for several seconds as she watched.\n\nArianna's breasts mashed against his chest and he held himself deep, basking in the heat and sensations of her searing ass fully on his thick, long cock. Heather began playing with his testicles with her hands as he lifted Arianna off and lowered her back down again. Over and over he lifted her, each time to his head before dropping her onto his raging cock. She screamed with pleasure, wanting it deeper each time.\n\nSeveral thrusts later, Henri lifted her too high and his cock popped out of her ass. He felt Heather grab hold and expected her to put it back in for him but instead she began sucking it, adding a fair amount of her saliva before forcing it back into Arianna. The change in sensations from sucking to forbidden penetration was stunning and Henri's eyes blurred from the pleasure. Again he began to raise and lower her over and over, his cock growing in pleasure and width with each second that passed. His arms were beginning to tire but he lifted her up and down for several more minutes before having to carry her to the nearest bed.\n\nLaying her down, Heather had followed him and now took hold of his cock, pulling it from Arianna's ass and sucking it once again. The stimulations changed, removing the sensation of almost ejaculating and replacing it with the intense sensation of his head being sucked by Heather. When she finally released him from her mouth and fed his cock back into Arianna's ass, he was well away from orgasm and ready to thrust hard and fast.\n\nMary had started masturbating again to the images before her. Her own heart was racing as she viewed the king hammering his massive cock into the bowels of this exotic woman. Seeing the pleasure Arianna was experiencing, Mary had to know what was so stimulating. Lowering her hand, she began to rub her secretions around her tightly puckered hole before trying to insert a single finger. The sensation was strange to her at first but as Mary added her other hand to her clitoris and moved her finger deeper into her ass, she felt a warmth flow through her body. She added a second as she watched Henri thrust and thrust. \n\nOver and over he pummeled, Arianna's forbidden hole as hard and deep as he could muster. The woman just screamed and begged for it all the more, no matter how hard Henri engaged her. Each time he approached orgasm, Heather would pull him free and suck him tight, delaying his climax again. This pattern continued for many rotations, making Henri last longer than he thought possible.\n\nHeather, after feeding his cock back into Arianna once again, removed her clothing and climbed up on the bed with Arianna. Henri watched with a smile on his face as the beautiful red head straddled Arianna's face and lowered her sex to her mouth. Arianna gladly began to lick and suck Heather's shorn sex, while Henri continued to pound away at her ass. He was forced to slow his thrusts, to keep from climax, so turned on from the long duration of anal sex and now the visual of Arianna feasting on Heather's ripe womanhood.\n\nMary had never seen anything like this group of three engaged in such activity. Not only was Henri penetrating the dark-haired Arianna in the forbidden way, but now Heather was enjoying the tongue and mouth of the same Arianna. Mary was in such a state herself, she couldn't look away nor could she stop her own forbidden penetration and stimulation of her clitoris. She found the combination to be delightful, much more all-encompassing than just stimulating her sex. She felt her climax fast approaching as she listened and watched the three continue. \n\nHenri had to completely stop his thrust when Arianna began probing Heather's ass with her tongue. His cock wanted to explode within her and the slightest movement would have taken him over the limit.",
        "\"Do not climax yet, my king. I desire to feel you within me,\" Heather said, looking over her shoulder at the stationary Henri.\n\nHe withdrew his pulsing, on-the-verge cock from Arianna and employed the same trick they had taught him. He pinched the end of his cock, squeezing the blood from the head into the shaft and delaying his orgasm once again. His tight testicles ached for release, firmly mashed against the shaft of his massive cock. Heather smiled at him again and crawled backwards toward his manhood until she was lying on her ring sister.\n\nHenri moved forward, forcing his cock down and fed his newly engorged head into Heather's well eaten ass. She screamed in pleasure, taking him to the base in one long thrust. Her head fell between Arianna's breasts as she moaned and called out for Henri to give it to her. He knew he would not last near as long as he had with Arianna, but he would go as long as he could for her. Both women began kissing and fondling each other as he proceeded to thrust and withdraw. He focused on lasting, employing all the techniques he could think of for as long as he could. Thrust and withdraw, over and over, using every inch to his advantage. His long cock was glistening and the veins showed in high relief along the rigid shaft as he watched it disappear and reappear over and over in the lantern light.\n\nMary was climaxing. She held her fingers deep within her anal cavity and her other hand was a blur on her clitoris. Pleasure exploded within, flooding her body with exquisite bliss as her juices flowed heavily over her hand below her sex. She heard Henri nearing his climax. Watched his face and body prepare for the culmination she had seen before. Mary knew it was only a matter of seconds now.\n\nHeather begged him to continue, to last a few more minutes for her. Henri again did his best but the sensations were too overwhelming, the visuals too spectacular for any man to resist. Another minute passed and he couldn't last another second.\n\n\"I'm past my limit, ladies. My climax is unavoidable,\" he breathed.\n\nHe pulled free of Heather and watched both women move quickly to a sitting position on the edge of the bed, displaying their voluptuous bodies for him to decorate. He only stroked one full motion and his cock exploded forth, spewing rope after rope of white semen onto the two witches. His legs trembled, his ass clenched tight as his load ejected itself from his climaxing form. The women hummed with glee as the hot bursts hit their bodies and painted their beautiful breasts with lines of white.\n\nMary watched with pleasure filled eyes, Henri ejaculate onto the two witches. Mary yearned for his penis, yearned to be one with him again even if it meant her death. She wanted to perform this act for her king and renew his power and if she could me the means to do so she was ready and willing. Mary pulled her fingers from her anus and stopped circling her clitoris as she watched Henri leave the room with the women cleaning each other off with their mouths. He was really behind schedule now."
    ],
    "authorname": "jasliz",
    "tags": [],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-master-and-the-ring-ch-09"
}