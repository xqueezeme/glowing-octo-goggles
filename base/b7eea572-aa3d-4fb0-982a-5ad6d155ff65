{
    "title": "The Goddess Ch. 03",
    "pages": [
        "Sofia was allowed to take the morning off to speak with Alexarius. She and the priestesses would reconvene in the evening to discuss the performances of the rest of the candidates. She decided to dress simply and comfortably for their discussion, donning a peplos that the high priestess made her. She would meet with him in a secluded spot outside the temple, giving them privacy. She had instructed all priestesses to stay away. As she readied herself to go to the spot, she grabbed the bow that she was constructing. She needed something to keep her hands idle, so they would not shake.\n\n_________\n\nAlexarius was elated. He'd been given water to wash himself in order to look presentable. A lesser priestess approached him after breakfast to lead him to the place where he would speak with her. He was at a loss for what they would talk about, but he would cherish this opportunity. He could feel in every fiber of his being that this meeting would strengthen his case to become consort, and that she wanted to see him because she was interested in him.\n\nWalking outside, he noticed that he was being taken a bit of a ways away from the temple. As they came upon a small hill, he could see Sofia on the ground underneath a tree. The lesser priestess nodded her head in the direction of the girl. \"The two of you will not be disturbed,\" she said. She left, leaving Alexarius to approach Sofia alone. The closer he got to her, he could see that she was hard at work making a bow. Warmth flooded his belly. He could at least talk to her about that.\n\n\"Good morning,\" he said brightly, stepping to her. \n\nShe looked up and smiled widely at him, causing him to buzz with joy. \"Good morning to you as well,\" she said. \n\nHe sat down across from her, wanting to be close, but not so close as to make her feel uncomfortable. \"You make your own bows,\" he stated. \n\nShe looked down, as if she were startled by the tools in her hands. \"Yes. I have an obsession with finding a bow that is lightweight and efficient. The only way to achieve perfection is to do it yourself I suppose,\" she told him. \n\n\"I have never made a bow, only arrows, but I have seen and held some of the lightest bows in all the world,\" he said. \n\n\"I can imagine that with a career as a merchant, you have the opportunity to sample the best of anything,\" she replied.\n\nA thrill went through Alexarius as he realized he was conversing with a goddess as if she were someone off the street. The fact that she had hobbies, interests, likes and dislikes fascinated him. She hid herself behind the mask she put on for the men. It was a wonder that he was allowed to see it. \"May I ask why you have asked to talk to me?\" he questioned. \n\nShe hesitated slightly and kept shaping her bow. The time would come where she would have to attach the string. \"I wanted to speak to you alone. You are the only man who has expressed a desire to know me. Yet with the tests, our time to converse is limited. Furthermore, I need someone to talk to about literature who has not known me my entire life,\" she said. \n\nSo, she is interested in me, Alexarius thought. He beamed and stood up. Giving a sweeping, overexaggerated low bow he said, \"Then I am at your service my goddess.\"\n\n_________\n\nSofia did not want to tell Alexarius explicitly that she was interested in him. He wasn't cocky, but he was definitely bold. She felt she would lose her footing if he knew he was the favorite. They talked for extended lengths about literature and political theory. His views were largely shaped by his upbringing and his job. He tended to think more practically. Sofia, being raised as a scholar, thought more philosophically. Her entire body hummed with adrenaline. At one point her teeth chattered with excitement. He was so incredible and mentally stimulating, that she told him so.\n\n\"Aye but it is you, fair Sofia, who is mentally stimulating,\" he said. She had finally attached the string to her bow, and the two of them were forming arrows. He was much better at it than she was. \"You have done nothing your whole life but read,\" he continued. \n\n\"That is wholly untrue! I went to a marketplace once when I was a child,\" she said. It was her way of deflecting, avoiding his compliment. She didn't know what to say to a man who indulged in flattery.\n\nHe tossed an arrow on the pile and began to make another. \"I was trying to say that it is nice for me to receive such an intelligent perspective. Many people I meet in the marketplaces are passing through. I like to know that I could have more than one conversation with you,\" he said. He looked into her eyes and she looked away. He stirred such emotion in her, she couldn't bear it. His gaze was too hot, too sensual. She could feel herself getting aroused. He looked the part of Adonis, leaning against the tree, relaxed. \n\nShe wiped the sweat off her brow and smiled shakily. \"Any time you wish to discuss matters of the mind, call for me,\" she said. He laughed and told her he would take her up on the offer. Sofia began to breathe deeply and recognized that in this moment, she wanted to throw herself on Alexarius. If she could feel his lips against hers just once, perhaps her desire could be quenched. \n\nShe saw that they were much closer to each other than when he had arrived. No one was around. If she wanted, she could kiss him, and no one would be the wiser. All the priestesses were told to stay away. The two of them would not go back to the temple until they were ready. Sofia cleared her throat. \"You go about the tests so differently from the other men,\" she stated. \n\nHe trained his sapphire eyes on her. \"It is because I am trying to be lightweight and efficient,\" he said seriously. Sophia snorted loudly and threw her head back as he joined her in laughter. She looked at the sun and noticed they had been together for quite some time. She ought to let him eat and refresh himself. She also knew the deliberations had to be done.\n\n\"We must go. We have spent so much time together. You must eat and rest and my duty to the high priestess calls,\" she told him. He nodded and began to gather her arrows together. Sofia decided to do what she wanted. She gently placed her hand over his, causing him to stop. She leaned in and gave him a soft kiss on his cheek. Pulling back, she eyed him nervously. Everything was so new. \"Thank you for humoring me,\" she said. \n\nAlexarius blushed ever so slightly at her words. Firming up his grip on her hand, he scooted so close to her that he was practically in her lap. He took her face in his free hand. \"Might I risk defiling a goddess?\" he whispered into her ear. \n\nSofia quietly said no, giving her consent. He gently kissed her cheek. She shuddered with arousal, fear, relief, everything in between. Her cunt was soaked, and despite the heat her nipples had hardened. They were close to scraping his chest. \n\n\"I shall humor you for all eternity if you would have me,\" he murmured. His thumb stroked her cheek as he dragged his other hand up and down her forearm.\n\nSofia could not see his face, as it was pressed to hers and slipping dangerously close to her neck. It must have been forbidden for them to touch in this manner. Certainly, she was compromising the process. But he felt so good next to her. She was unwilling to waste this moment. She tentatively placed her arm around him, pulling him into a hug. His hands immediately encircled her waist, and he buried his face into the crook of her neck. Sofia let a small moan escape her as her breasts pressed into his chest. She could hear Alexarius's breathing grow a tad less even, informing her that he was affected by this. Her eyes sprang open and she pushed him away. The flustered, aroused look on his face almost pulled her back in. She hurriedly eked out an apology and fled.\n\n_________\n\nAlexarius was throbbing. He was throbbing in such a way that he had to relieve himself. Spying a wooded area next to their tree he retreated and exposed his cock to the air. His hand moved in a flurry. He recounted her lips on his cheek, so lush and plump. He thought of his hand on her face and neck. Finally, her moan and the feel of her full breasts on his chest, only separated by their thin clothing. Her nipples were so hard, he could feel them ever so slightly. These were the nipples he saw shadows of as she touched herself the other night. She wanted him. He could smell her arousal due to their proximity. He imagined if she would have allowed him to lay her down and taste her, thrusting his tongue into the wetness that he inspired. Grunting heavily, he spent his seed on the grass below.\n\nHe knew Sofia had run away because she was afraid of her own budding sexuality. What they had done had been non-threatening, and she had not been touched in an inappropriate way. However, their gestures had been laden with desire for more. Alexarius wanted her more than any of his previous lovers. Touching her waist or neck aroused more in him than the cunt of another woman. He wondered if she would touch herself tonight to the memory of their time together.\n\nShe was excellent conversation. She was so much more well-read and intelligent than he was. He did not feel overmatched, but grateful that he could learn from her. She was unpretentious, perhaps because she hadn't learned to be otherwise. She loved to laugh and was fiercely opinionated. Alexarius had discovered so much from the hours passed. He began to gather their arrows, electing to give them to a priestess in order to give Sofia space. He hoped that he would see her again, or that she would want to speak to him alone. He would give anything to be alone with her. Even if that meant not touching her and only conversing.\n\nAs his arousal faded, it was slowly replaced with grief. She was a virgin, and he had touched her intimately for the first time. Her skittish reaction was most likely due to embarrassment. Alexarius blew out a sigh and realized that he needed to apologize to her for crossing the line. What they had done was tame, but for her it was not. In the context of the selection process it was not either. He had put her in a situation where she was vulnerable in a way that was only allowed with her future consort. As much as he wanted to be in that position, he was not officially her match.\n\n_________\n\nSofia fled to her room and feigned sleep for an hour or two. She couldn't bear to face anyone. If the high priestess got ahold of her, she would inquire about the conversation Sofia had with Alexarius. She needed to calm down and regroup. Otherwise she would be unable to hide her arousal or embarrassment at having been nearly compromised. She lay in bed and contemplated what moves to make once she came out. \n\n_________\n\nAfter ruminating, Sofia decided that she would treat Alexarius normally. She had initiated the encounter, and he had only responded in kind. She desperately wanted him to touch her again but knew that could not happen. She could barely believe that she had gotten so close to losing control and endangering the process. He ignited something in her that had, until now, lay dormant. Treating him normally would show nothing had changed, and that she wasn't ashamed of what happened.\n\nShe stalked to the high priestess's room to announce that she was ready for more deliberations. The older woman gathered her things and began to walk to the scroll room. \"How was the conversation with Alexarius?\" she asked.\n\n\"Fine,\" Sofia said with more neutrality in her voice than she thought she was capable of. \"We spoke about literature and politics and made arrows.\"\n\n\"I am glad!\" the older woman exclaimed. She then changed the subject to asking about where all the lesser priestesses were and general temple upkeep. Sofia gently exhaled, grateful that Alexarius was dropped.\n\nOnce the lesser priestesses gathered in the scroll room, Sofia let herself focus on the deliberations at hand. She once again gave her input when needed and took note of the considerations of the other women. She was allowed to hear, but not approve the list of men that would move ahead. Out of the 13, five were chosen to move ahead. She did not show it, but Sofia was surprised that they had narrowed it down to so few. The men had only been in the temple for 3 weeks. It was not nearly enough time to know.  \n\n\"Sofia, have you given any thought to what the next test will be?\" asked a lesser priestess. \n\n\"Yes. I have decided that the men will perform music for me. For all of us,\" Sofia said. It made sense, after all. Everyone could get a night of entertainment, for one. The men would also have time to prepare, which meant prolonging the process.\n\n\"I feel that a man who knows music must be a man of high intelligence,\" she reasoned. The other priestesses began to chime their approval, and the conversation moved to the logistics of implementing the challenge.\n\n_________\n\nAfter dinner that night, Alexarius shamelessly went looking for Sofia to apologize to her. He had no idea where she went in the evening, and just decided to roam around until he came across her. He imagined that he was not allowed to ask a priestess to convene with her.\n\nHe looked to the spot where they had been in the morning, but she was not there. After walking for a while, he found her near a small grove of olive trees with the high priestess and a lesser priestess. As he got closer, he could hear them conversing about the state of the trees. He cleared his throat and they all turned around to face him.\n\n\"I am sorry to interrupt your conversation, but I would like to offer my sincerest apologies for my behavior today,\" Alexarius said formally. The priestesses looked between him and Sofia with questioning looks. Sofia looked to him queasily.\n\n\"I accept your apology and I apologize as well,\" she said back. Looking into her eyes, Alexarius realized his blunder: he had mentioned something that Sofia had not told the priestesses.\n\n\"Why are these apologies in order?\" the high priestess asked.\n\nAlexarius thought quickly. \"I accidentally broke one of her arrows,\" he explained.\n\n\"And I did not respond very nicely,\" Sofia said, glancing at him.\n\nThe high priestess shook her head but did not comment further on the situation. Alexarius wondered if she would say something to Sofia or if he would be punished for something that never actually happened.\n\nAlexarius bowed slightly and quickly took his leave.\n\n_________\n\nSofia awoke the next morning ready to meet with the men. She decided that today would be a new day. She had endured a gentle lecture from the high priestess about being nicer to Alexarius and all the men in general the night before. Even though they lied about the \"argument\" they had, Sofia felt that the lecture was a cosmic punishment for having overstepped her boundaries with him and took it all in stride.\n\nShe wanted to be present for the eliminations and the announcement of the next challenge. Standing with the priestesses, Sofia watched as the men who were instructed to leave did so. She thought about thanking them for coming but elected not to at the last minute.\n\n\"The next challenge will be to perform a musical piece for the goddess, the priestesses, and your fellow men. As this is a surprise, time will be given to prepare and practice your pieces. A week has been allotted for you to do so,\" the high priestess said.\n\n\"Is there anyone who did not bring an instrument?\" Sofia interjected, much to the surprise of the men and the high priestess. Two men raised their hands. \"What do you need?\"\n\n\"I need a lute,\" said one\n\n. \n\n\"As do I\" the other said.\n\n\"We have four lutes here,\" she said. She glanced over at Alexarius and wondered what he had in store. She would not ask, however. She wanted to be surprised.\n\n_________\n\nAny educated man played an instrument. Alexarius knew this to be a fact. Music was included in all educations. He brought his aulos with him but had not played it since arriving. It had been something to pass the time on the journey up the mountain. Having learned to play it as a child, Alexarius often took it with him on trips to other cities, picking up how to play different pieces along the way. He knew that he wanted to improvise for her, as a prepared piece often required a singer to be present. The week would be spent trying out different melodic combinations until he knew what direction he wanted to eventually take his improvisation.\n\nAfter taking his instrument out, the man named Demosthenes approached him.\n\n\"I see that you play the aulos,\" he remarked as he sat down.\n\n\"Aye,\" Alexarius said.\n\n\"I would like to sing, but I need an aulos to accompany me. The piece is a religious one about Apollo,\" Demosthenes explained.\n\nAlexarius agreed that he would help. Playing for Demosthenes would do nothing but put on a good show for the goddess and help him showcase his talent twofold. He still wanted to improvise after all.\n\n_________\n\nAfter a week of practicing, the men were finally ready to give the concert. Sofia had dressed a little more elegantly for the occasion, as the concert was technically for her. She and the priestesses had prepared the great hall earlier, lighting dozens of lamps as to give the room a nice glow. Her body tingled with excitement as she thought of being able to openly ogle Alexarius once again.\n\nHe had been so busy practicing during the week, they had barely spoken. She had gotten over the embarrassment she felt after their encounter and began to wish that she had not reacted the way she had initially. What if now he felt that she was uninterested?\n\nThe men filed in with their instruments and took their seats on the pillows and mats the priestesses had laid out for them. Sofia and the women were seated across from them. The performer would stand in the middle. Sofia counted three lutes. Only Alexarius and another man did not have a lute. Alexarius was holding an aulos. He flashed her a hot glance when he entered, causing a rush of warmth in her abdomen.\n\nThe man who had first asked for a lute was the first to perform. Alexarius would go second, then the other two lute players, and finally the man who had no instrument at all. \n\nThe first lute player was good. Sofia felt ashamed that she could not remember his name. He played beautifully, if not with little passion. Sofia clapped for him when he finished. As he sat and Alexarius stood, Sofia squirmed in her seat. Alexarius looked so handsome. She felt that it had been an eternity since she last saw him. So much had transpired since he first entered her temple, and out of thirty men he was one of the last few still here.\n\nWhen he began, Sofia could not recognize the piece. After a few seconds she realized that he was improvising. She held on to the melody he played with one part of the aulos, and the harmony that he was weaving into it with the other. It was so beautiful, so melancholy. With the lights dimmed, it fit the scenery perfectly, and she found herself drunk on his performance. Never before had she heard notes sound like words, and his notes spoke to her of love, loss, searching and wanting. \n\nHe looked up over his instrument into her eyes, and in that moment, she knew that he was the one that would be chosen. \n\nIt was as if he were staring right into her soul. His melody wrapped its fingers around her heart and squeezed. She became overcome with emotion and a few tears fell as she gently placed her hand over her chest.\n\nAlexarius continued looking at her as he finished. Sofia wiped her tears and stared at him in awe as he went to sit down. Of course, he had aroused her again. She stayed as still as possible, hoping that none of the priestesses would notice. The realization of him being her consort had shaken her to the core. He was the one that she would spend eternity with. \n\nShe knew that she could not tell the priestesses to throw out the other men and begin the marriage ceremony, but she was sure that at the end of the process, Alexarius would be the one they would choose. He had already gained favor with multiple women due to his eagerness to speak to her, and his excellence in the challenges. Sofia wished she could crawl over to him and finish what they started a week earlier. She needed to feel his arms around her again.",
        "It was difficult to focus on the other lute players, as she continued to steal glances at Alexarius across the room. She knew that her face showed she was in distress. She also knew that he was aware he had affected her. He was constantly smiling at her when she looked his way, scorching her golden-brown skin. His eyes roamed her body, making her feel flushed and hot. Their telepathic conversations rendered everything else around her irrelevant. All at once, the lamps seemed too bright and the room was unbearably warm. She pulled at the front of her dress and fanned the back of her neck.\n\nAt last, the man with no instrument stood and walked to the middle of the room. Alexarius stood with him, surprising Sofia. He was going to perform again? Alexarius began the notes of a piece than honored Apollo. Sofia had heard it before, and it was gorgeous. The other man took a breath and began to sing. Sofia was absolutely delighted. It was so nice to hear a song! The man's voice was deep and velvety, and with Alexarius's accompaniment, the piece was perfect.\n\nWhen all was said and done Sofia stood to her feet and clapped for all the men. The other priestesses quickly followed suit. \"Thank you all for your performances. I especially enjoyed them,\" Sofia said warmly. It was the first time she showed pleasantry towards the general group. She started to go over to each man and give him her hand. \n\nAlexarius was receiving a compliment from a lesser priestess and looked to see Sofia near him. He smiled wickedly and glided over to her like a predator. He knew that she wanted him. Sofia presented her hand, something that seemed so trivial after last week and her own revelations. \"Dear God,\" she whispered as softly as she could when he took it in his.\n\n\"'Dear God' indeed,\" he replied.\n\n_________\n\nAlexarius was certain that he would be moving on. Sofia was fond of him. This much he knew. His performance certainly wouldn't hurt his case either. The intrigue that simmered between them that night was palpable. He saw the way his piece affected her. The looks they shared communicated everything her touch told him a week before. He wished that they could've spent a few clandestine moments together afterwards, but the priestesses had whisked her away.\n\nHe'd spent majority of the week experimenting with scalar patterns and thinking of her. She had not asked for him and he was certain it was because he was supposed to be devoting his time to practice. Other than Demosthenes, he had scarcely seen anyone. At night he fitfully thought of their encounter and how she would react to his improvised piece. Seeing those worries disappear with the look in her eyes was sweet catharsis.\n\n\"How many of us do you think they will eliminate this time?\" the second lute player said, startling Alexarius out of his thoughts.\n\n\"Perhaps two. Three seems to me an ideal number to move forward. Those will most likely take the final test, and from them a consort will be chosen,\" Demosthenes hypothesized.\n\n\"All of you lads performed exceptionally well,\" Alexarius said to the group. They all murmured their thanks in return.\n\n\"Do you believed she liked it?\" the third lute player asked.\n\n\"She complimented all of us, so I imagine she did,\" Alexarius pointed out.\n\nHe began to wonder if the other men wanted this as much as he did. They seemed to be uninterested in being chosen as consort. Their efforts were alive and well, but their passion was not. Alexarius could somewhat understand. Sofia had failed to be warm and personable with the other men. While her beauty was ethereal, Alexarius could see how she might seem cold. \n\n\"Do you all hope to be chosen?\" Alexarius posed.\n\n\"Of course. She is beautiful, and it would be an immense honor. To serve a goddess is to perform the highest duty,\" the first lute player said.\n\n\"She is rather impersonal, but she is a sight to behold nonetheless. I have never seen a creature like her,\" the third lute player remarked.\n\n\"I would hope that if I were chosen, then she would warm up to me over time,\" Demosthenes said. \"Although I have noticed that she has spoken to Alexarius.\"\n\nAlexarius was caught by surprise. He never discussed the interactions he had with Sofia with anyone. He didn't believe that the other men noticed.\n\n\"We have spoken a few times. It has mostly been by my own efforts,\" he said vaguely. No one needed to know the details of their encounters. That was between the two of them.\n\n\"Do you believe she favors you?\" Demosthenes said.\n\n\"It is possible,\" Alexarius shrugged.\n\n_________\n\nThe priestesses allowed Sofia to rest after the concert was over. They would deliberate and decide who would take their journey back down the mountain the next day. Sofia was grateful for her time to reflect. She was still shaken by the thought that Alexarius would be her consort. It was a sign from the gods. She felt in every part of herself that he was the one. He looked at her in a way that was impossible to ignore. He so clearly wanted to speak with her, embrace her and ravish her. Sofia knew that he was an intelligent, well-read man. He was thoughtful and witty. Not to mention incredibly sexy. She would have given anything to have felt his touch once again.\n\nAfter a while of tossing and turning Sofia decided to take a walk. Stepping out of her room she looked down the hall to the sleeping men and then to the garden in the center of the temple. She carefully walked outside and headed to her grove of olive trees. She had been raising them for a while and took great pride in the fruit they produced. The moon was bright, and the sky was clear of clouds, allowing for the grove to be somewhat illuminated. She ran her hand over the bark of a tree and sighed heavily. \n\n\"Might I join you in your midnight escapades?\" a voice said. Sofia jumped and turned around to find Alexarius standing behind her.\n\n\"Why are you here?\" she asked. She was still trying to calm herself after being scared by him.\n\n\"I could not sleep. I saw you leave the temple and wanted to speak with you,\" he said evenly.\n\nSofia rolled her eyes good-naturedly. \"And who is to say that I would want to speak with you?\"\n\n\"You have done it before. Why not continue? We were unable to speak to one another after the concert,\" he said. Sofia knew she couldn't have spoken to him then even if she tried. He never intimidated her more than he had after the concert. His confidence scared her.\n\n\"Yes, well, I did not want to speak to the worst performer tonight,\" she said cheekily as she moved further into the small grove.\n\nAlexarius dramatically grasped his chest. \"I believe you have broken my heart,\" he moaned.\n\nSofia laughed and faced him head on. \"What is it that you wanted to discuss?\" she asked. This meeting was so risqu\u00e9. She knew that it was wrong to be with him after nightfall and without the knowledge of anyone else. It made her feel a bit naughty and speak more casually as a result.\n\n\"I wish to know if you enjoyed yourself at the concert,\" he said, moving closer to her. She sat on the ground and leaned against a tree, motioning for him to join her.\n\n\"I did,\" she replied candidly, \"the lute performances almost all ran together, but yours and that of Demosthenes were quite beautiful.\" She rested her head on her knees and looked at him.\n\n\"I saw that you were moved by my piece,\" he said confidently. Sofia nodded.\n\n\"It was moving. I have never heard someone play so beautifully. Not to mention you stared at me rather intently the entire time,\" she laughed.\n\n\"I looked at you because I was performing it for you,\" he said, flashing a dazzling smile. \n\n\"Well I must say that I was impressed,\" she replied sweetly. They were so close. Alexarius reached over and took her hand in his. Sofia did not move to stop him, allowing that boundary to be broken. In the past she was always the one to touch him first.\n\n\"You are so very beautiful,\" he said absentmindedly. A line had been crossed. Sofia was intrigued, however, and decided to go with it.\n\n\"As are you,\" she replied softly. His thumb began to gently stroke her hand. Although they had not known each other long, they already enjoyed a certain amount of intimacy. He gazed into her eyes, halting her breath. He moved her hand and pressed her palm to his face.\n\n\"You must know how you affect me. Tonight, I looked into your eyes and without words you told me that you do,\" he said quietly. Sofia's breath hitched. She knew that there was a reason he looked at her that way.\n\n\"I...well then you must know how you affect me,\" she said.\n\n\"I know that you are fond of me,\" he said, \"as I am fond of you.\" He took his free hand and touched her face, trailing down to her neck.\n\nShe reached up and tentatively ran her hand through his loosely curly hair. Both were waiting on the other to break first. Sofia decided it was going to be her.\n\n\"I am fond of you,\" she started, \"I feel everything when you touch me, when you look at me, when you speak to me.\"\n\nHe kissed the top of her forehead without warning. Sofia threw caution to the wind.\n\n\"Please kiss me again,\" she said.\n\nAlexarius leaned down and lavished kisses on her neck. Sofia moaned and braced herself on his arms, relishing this gorgeous man's attention. He kissed up her neck and pulled back to look her in her eyes. \"May I kiss your lips?\" he asked.\n\nSofia hesitated for a moment. Was this acceptable? They had already broken so many rules. However, she knew he was her chosen one. He was hers, and she was his. \"You are my consort. I feel it. I know they will choose you,\" she said slowly. Alexarius needed no other words of affirmation. He took her face and placed his lips on hers. Sofia instinctively kissed him back. Adrenaline coursed through her. She shook in his arms. \n\nHe separated from her, his breath still warm on her lips. \"Do not shake, my Sofia,\" he said. The deep baritone of his voice caused her to shiver once again. Hearing him call her by her real name, something that only he knew, drew her to him once again. She leaned in for another kiss. He pulled her into his lap, and she became painfully aware that her cunt was pressed against him. Alexarius gently slipped his tongue into her mouth and she clumsily did the same. He chuckled at her inexperience. Sofia wished she could take off her sleeping garment and allow him to explore her body. His hands were incessantly fondling her ample curves as she straddled him.\n\n\"You are wet for me,\" he whispered, nipping at her ear. She shifted and felt a cool breeze against her mound. All the heavy petting had gotten to her.\n\n\"I am,\" she agreed. She made no attempt to move her cunt from his lap and reached to continue kissing him. In that moment, she felt his hardness, and ground herself on it slightly. He groaned into her mouth, eliciting a smile.\n\n_________\n\nSofia was torturing him. Alexarius knew it was unwise to follow her into her olive grove, but he couldn't help himself. She looked so enticing slipping out of the temple, he just had to speak with her. So much had been simmering between them since their episode almost two weeks prior, and now it had bubbled over into her situating her wet cunt on his lap. Her body felt splendid in his hands, even covered with her clothes. Her nipples were rock hard and called to him. It took everything within his power to not reach underneath her dress and bring her to orgasm. Her movements were that of a virgin, someone who had never been kissed before. But she was so eager and enthusiastic.\n\nAlexarius knew if they kept kissing and touching, things would progress. The smell of her arousal was making him dizzy, but he still had the wherewithal to stop before something happened. \"Sofia. We must stop,\" he said.\n\n\"Why?\" she asked breathlessly.\n\n\"Because if we keep going, I am afraid I will touch you. I will not dare defile a goddess, much less an unmarried woman, any further,\" he said.\n\n\"Will you defile me once you are named my consort?\" she teased. Alexarius tilted his head back and sighed heavily. He laughed at her tone, but took her words seriously.\n\n\"I give you my word that I will,\" he said. He knew that they were both still incredibly aroused and were doomed to go to bed that night sexually frustrated. A thrill went through him at the thought of her touching herself once she returned to her room. He placed his finger on the middle of her breastbone. \"We will have to wait. You deserve more than a romp in an olive grove. We should return to the temple at once.\"\n\nSofia began to affectionately kiss up and down his neck, testing his resolve. She was damn near irresistible. Alexarius was relieved, but disappointed when she pulled away. Sofia smoothed out her dress as he stood. He reached down and helped her up off the ground. Alexarius stroked her chin as she tucked a piece of his hair behind his ear, the two of them enjoying the ability to touch one another without obstacle.\n\n\"I would give anything to keep you to myself for the night,\" Alexarius told her sweetly. He ran his thumb over her full lips, marveling how they were both brown and pink. He stroked her braid, wondering if she had done it herself or if the priestesses readied her for bed. He wished that he could have placed his fingers on her cunt and given her a bit of pleasure to take with her.\n\nSofia blushed and dropped her head as she smiled. Alexarius found it endearing that she was so affected by his words. \"I would stay with you if I could,\" she said. She pulled his hair playfully and stood on her toes to kiss his cheek. The couple then turned and walked to the temple, careful not to make too much noise.\n\nAt Sofia's room, Alexarius resisted the urge to follow her inside. She said he was her consort, but officially, he was not. He did not want to disrespect her by entering her sacred chamber. They looked at one another silently, knowing that sweet words of parting were too risky inside the temple. Someone could be awoken by the sounds of a conversation. She was watching him as if she wanted to devour him but was embarrassed to do so. Her sage eyes sent a rush of blood to his cock. Her heaving breasts, their proximity, her breath hanging in the air, they all pulled him to her until she was flush against his own chest.\n\nAlexarius rested his hand on the small of her back and searched her gaze. Sofia rubbed his shoulders and cupped his face in her hands. They came together in a sweet tangle of tongues, Alexarius's hand grazing over his goddess's nipple. He felt the beautiful girl stifle a moan and expose her neck to him for more kisses, which he happily obliged. He moved close to her ear and murmured, \"Will you touch yourself for me?\"\n\nSofia shoved him back from her playfully with a smile and an eye-roll. She pulled away until only their fingers were linked. She threw one last look at him, pulled back the gauzy sheet at the entrance to her room and disappeared inside. Turning on his heels, Alexarius crept back to the sleeping men, away from the woman who was responsible for the uncomfortable situation between his legs."
    ],
    "authorname": "CommonNeurosis",
    "tags": [
        "black womam",
        "white man",
        "greece",
        "fantasy",
        "interracial",
        "romance",
        "romantic"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-goddess-ch-03-1"
}