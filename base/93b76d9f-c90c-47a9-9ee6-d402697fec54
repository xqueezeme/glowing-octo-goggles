{
    "title": "The Invisible Man",
    "pages": [
        "Another of my fun, 'that wouldn't happen' stories, hope it brings a smile at least.\n\n\"He's fucking real, I'm telling the truth, I'm TELLING THE TRUUUUUUUUTH.....\"\n\nThe sedative kicked in and Jenny went out like a light. The nurses carried her to another new room where they strap her to the bed as usual, left to sleep off the sedatives the nurses had just injected her with. The nurses chatted as they cleaned out her fourth room that week.\n\n\"I'd love to know how she gets out of her restraints and how a woman so petite can cum this much.\"\n\n\"Didn't the guard say the door was locked the whole night too? Dr Smith demanded cameras covering her door, I really wish that privacy rule wasn't in place that stops us putting cameras in there too.\n\n\"It had been two months since Jenny was admitted to the hospital. After working 4 months straight without a day off she flipped out, screaming 'the jelly beans are gonna kill us aaaaaallllllll' over and over before the men in white coats came to get her.\n\nThe nurses were kind to begin with but were getting impatient with her recently. At first they thought she was pissing the bed but after one nurse asked why it never smelled like that they looked closer and found it to be her 'happy juices' and since then she had been restrained every night. It didn't stop it however, night after night she'd be out of the restraints, sheets soaked the following morning and Jenny worn out like she hadn't slept.\n\nThe frustrated nurses pleaded with the Doctors to allow them to put cameras in the room, just to see how she got out of her restraints but being that State Law strictly forbade it.Jenny woke up several hours later, still groggy from the sedatives.\n\n'Bastards' she said to herself and looked around the room.\n\n\"Are you here?\" she said.\n\n\"You know I am. I told you I won't leave you.\" I replied.\n\n\"Why won't they believe me, why can't you just slap one of them so they don't keep thinking I'm crazy?\"\n\n\"My touch does things Jenny, you know that by now. Do you want me to unstrap you or do you want to wait?\"\n\n\"We can wait, maybe I can last long enough to bring you back tonight.\"Jenny closed her eyes and fell asleep again, I watched her sleep for a while then dozed off myself.\n\n************************************************************************************\n\nAlmost exactly 2 and a half months prior Jenny was plodding along on her most insane overtime binge yet. Her goal this time had been not a vacation or car payments but an internet rumor that an auction for a naughty date with Alexander Skarsgard was coming up and Jenny had intended on winning it.\n\nIt turned out to be a hoax of course but she instead had intended the money for a 'Real Life' love doll of him instead, (with working parts of course), and those weren't cheap. I had also been working a lot but at the experimental medical lab where I worked. I told Jenny I was inspired by some of the crazy potion stories she liked to read on her erotica sites and the last time she had seen me I had a big grin telling her I was 'Sooooo close'.\n\nI vanished a week later. Literally.\n\nAt first I was listed as a missing person but I called a few people, called the Police and told them I was safe.\n\nI spoke to Jenny too, she was sitting half asleep at her desk in the call center, her 3rd 5 hour energy shot not even scratching the surface of her tiredness. She leaped out of her skin when I spoke quietly in her ear, unseen by anyone.\n\n\"Hey Jen you ok?\" Said her friend Kimberly, seeing how white Jenny's face had gotten.\n\n\"Yea, I'm good, just nodded off is all. I'm going to the bathroom, splash some water on my face, I'll be right back.\"\n\nBeing so late the bathroom was empty. Jenny looked around half expecting him to appear but nope, 'Shit, maybe I am going nuts' she mumbled to herself.\n\n\"You're not going nuts, I'm here, I had to make sure the coast was clear.\" I said.\n\n\"Ian? Is that really you? How the fuck, what the fuck, where are you?\"\n\n\"Yes, it's me, and I'm here,\" I said, lightly touching her shoulder with my finger.\n\nJenny inhaled sharply as my touch was electric. Not in a painful way but it was like every one of her sensual buttons had been pushed at once and she was instantly soaked, a millisecond away from coming before I took my finger off her.\n\n\"WHOA, what the fuck was that?\" Said Jenny, partially sad she didn't get to cum but thankful, she was wearing dark pants and would have shown.\n\n\"It's a side effect of the potion I made. Every woman I touch feels it. I need your help. I'm stuck like this until I can come hard enough to see stars but I've not found anyone I can trust or that can keep up with what my touch does. It will take conditioning and a whole lot of orgasms before we get to full sex, think you can handle it?\"\n\n\"Uh sure, what about work? How do you know that's what will fix you?\" asked Jenny.\n\n\"Well, one of the times I was jerking off I thumped my headboard and a picture fell on my head. Saw stars, got a little dizzy but I could see myself for a second. Long enough to see I wasn't cut or anything but when I stopped seeing stars, invisible again. Oh and work, don't worry about that, I found where they fix the lottery, long fucking walk but if you have a pen I'll give you the numbers for the powerball in a few months, it's going to be a big jackpot.\n\n\"Jenny smiled at the thought. Spend months getting to cum her tits off, time off work and getting to be rich at the end of it.\n\n\"Can we have a little fun before we start? I'll have to get locked up in the nuthouse, I need the rest to be honest and it is the safest place for me but Kimberly helped mess with my desk and I wanna get her back but not in a nasty way. I'll tell her I can make her come hard just by staring at her unless she stands on her chair and screams 'I love pussy and double ended dildos' which I know she won't, I'll wink, you touch the back of her neck and Jenny wins!\"\n\n\"You and your OCD, your pens are just fine facing right to left you know.\"\n\n\"No, it gives me a bad day.\"\n\n\"Fine, I'll do it.\"\n\nA few minutes later, Kimberley, one of Jenny's coworkers in the call center was sent home for loudly climaxing on a customer call, screaming 'oh fuck YES' then soaking her chair. She can have a share in the powerball too I suppose.\n\n**************************************************************************\n\nBack to the present and Jenny was awoken by a nurse bringing a chair into the room. She put it in the corner of the otherwise sparse room and closed the door, sitting in the chair with her book.\n\n\"I know you're not nuts, I've seen my share of crazies in here but there's something not right with you. You're really nice and I don't want you to keep getting doped up. I'm here all night, we're not allowed cameras in here but I'm allowed to 'supervise for your safety'...\"\n\nJenny turned her head slightly and smiled, mumbling a soft 'ok'.\n\nThe nurse thought it was at her but she'd find out soon enough.The lights were finally turned out in the hallways, the nurse in Jenny's room was gracious enough to turn off the main light just leaving a little bedside lamp on to read. Ian waited a little until the halls were quiet but the nurse that was sitting got up to pee so his plan had to wait.\n\n\"You know, I've never asked, mostly because I love coming so hard with your touch but why can't you just jerk off until you see stars, won't that help you?\" Said Jenny, hoping she was facing Ian.\n\n\"Well, I tried that one time but it didn't work out so well.... I'm a visual person and not being able to see my own cock just didn't do it for me. Well, after 8 days of this I decided 'What the fuck' and went to the college swimming pool, you know, the all women's college, and decided to be a voyeur. Would have sucked if it did work, nothing like appearing out of nowhere, dribbling dick in hand in the middle of a women's locker room to get me beat up and arrested huh but I'd have welcomed that more than forever like this. I was enjoying the show, they're pretty open, those Catholic girls and I was stroking away then one cute little brunette bent over to show her friend her newly waxed pussy and asshole from behind and I lost it. Came really hard right as a skinny blonde walked by and it got her on the leg! She managed one more step and collapsed, convulsing on the floor, moaning 'oh my fucking goodness' as she lost her towel. I've never seen a pussy froth until then. Anyways, her friend runs over 'omg are you ok' and touches my unseen cum on her leg. She too collapses on top of her friend and is writhing and cumming all over the floor. You can tell what was next. By the time the teacher came in wondering what the fuck all the moaning and yelling was about there was about a dozen women all over this one poor girl, all of them somehow got a tiny bit of come splashed on them that of course they couldn't see. When the teacher touched her leg, the lady who looked like a Russian bear wrangler, I decided enough was enough and hit the sprinkler system and got the hell out of there.\n\n\"By now Jenny was laughing hysterically against her restraints and was still laughing when the nurse came back.\n\n\"What's so funny Jenny?\" said the nurse with a curious smile. Breathlessly Jenny replied,\n\n\"Oh, we'll tell you later if you like.\n\nThe curious smile turned to a frown.\n\n\"We?\"\n\nAt that, I touched the nurse's shoulder then held on to her as her knees buckled beneath her as a furious orgasm washed it's way through her body. I waited until her dress was soaked at the crotch with her cum then sat her in the chair. She sat open mouthed and breathless as Jenny's restraints seemed to undo themselves and her gown flew off her and was thrown into the corner.\n\n\"Nurse Jacobs, I'd like you to meet Ian, you can't see him but I'm hoping you can help us with that. His touch was what made you just climax and has been making the mess in my bed these past few weeks but if you want a night of the most intense orgasms you'll ever feel in your life just say yes and we'll explain it all.\"\n\n\"Th...that was just from a touch?\" she said.\n\n\"Yes. Long story short, he needs to cum until he can see stars, don't ask how I know that but him touching us gives us that much pleasure, even through clothes. You can imagine how intense it will feel with him inside you. I can barely last 2 minutes with him before I black out and dry out.\"\n\n\"Well I've never cum that hard, ever. I barely get off with my husband or my toys.\"\n\n\"Shit, sorry, didn't know you were married.\"\n\n\"It's fine, pretty sure he's fucking his secretary anyways. I think it will take more than just us two though, I'll need to rest but I know I can trust Lisa and Clara. Do the same to them when I bring them in, I'll need to restrain you again Jenny, sorry.\"\n\n\"Why those two?\"\n\n\"We uh, help each other out sometimes, this shift can be very boring.\"\n\n\"Okay.\"\n\nA few minutes later, Nurse Jacobs came back with 2 other women, they were not bad looking and had nice bodies.\n\n\"I still don't understand why I'm bringing my chair. I still think she's just pissing the bed but the dayshift is giving her so much to drink it's clear.\" said one of them.\n\n\"Well I don't want you hitting your head. I'm not making this up, if I'm lying, you can sit on my face to cum for a week before every shift,\" replied Nurse Jacobs.\n\n\"Deal, your tongue is quite exquisite.\"\n\nOnce they were both seated and the door closed over, I touched both women on the side of their necks and watched as they immediately climaxed, their mouths both open like a silent scream and they were both shuddering in pleasure until I stopped.\n\n\"H....Holy Fuck! How?\" said one of them.\n\n\"It's a long story but I messed with stuff I shouldn't have and I'm stuck like this until I can climax so hard I see stars. I'm sorry about the mess you've been having to clean up but Jen can't take even half of my cock without blacking out then she just goes dry. I promise you will be rewarded if you help me,\" I said, they both jumped when I started talking.\n\n\"Shit, I'll help just to cum like that again,\" replied one of them.\n\n\"Well I know I'll need to rest before we try, I can barely feel my legs,\" said the other woman.\n\nThe next night, Jenny, Kendra (nurse Jacobs), Lisa and Clara were all in a line, bent over the bed with a spare mattress (complete with rubber sheet) for them to kneel on. We'd agreed on just bottoms off for the nurses but Jenny was naked and she was to be last.\n\nThey all had really nice asses so I didn't take long to stroke myself hard, I confirmed they were ready then pushed into Kendra, I managed two thrusts before she came so hard she blacked out. I kept my arousal and pushed into Lisa, she lasted a few more strokes then she too blacked out, slumping onto the floor.\n\nClara got me really close, she held back for me and I could feel myself edging towards a climax but before I could she blacked out. Jenny held out as long as she could, I was almost there but I must have been leaking pre-cum, she blacked out and was still shaking when she slumped to the floor. By then Kendra had woken up again, she looked at the other women.\n\n\"I... I have an idea, a..are you close?\" she said.\n\n\"Yes but could you take it again?\" I replied.\n\n\"Maybe with this, in my ass.\" She was holding a small tube of ky jelly.\n\n\"Are you sure?\"\n\n\"Yes, takes me ages to cum from anal but I fucking love it, husband won't do it.\"\n\n\"Okay.\"\n\nI coated my cock in the ky and eased my cock into her ass, she felt amazingly tight and I loved it. The ky acted like a barrier of sorts too, despite my body touching her as I thrust into her, between being soaked in sweat and my cock covered in lube, she was able to last much longer. Jenny and Clara woke up when Kendra started to cum.\n\n\"Oh FFFFFFFFFUUUUUUUUUUCK!!\" screamed Kendra as she came.\n\n\"Anal?\" asked Clara.\n\n\"Y.. Yes, I can't go any more though, I'm out,\" gasped Kendra.\n\n\"I'm game,\" said Clara, already putting ky in her ass.\n\n\"Me too,\" said Jen, doing the same.\n\nClara came as I was close, I groaned that I was ready and Jen just said 'Mine'. I pulled out of Clara and pushed into Jen's ass, got maybe four deep thrusts before I exploded, spraying my cum deep into Jen's ass. I not only saw stars but I blacked out too, slumped over Jen and Kendra.\n\n\"Wha... what in the ever loving fuck is going on here? Who is this man, why are you all having sex with him in a patients room with a patient?\"\n\nA woman I'd not seen before was standing in the now open doorway with a younger nurse who was wide eyed and her jaw hanging.\n\n\"Please tell me your touch has some magic left, she's not going to believe us,\" said Kendra.\n\nAfter cleaning up, showering and helping to clear the mess, I sat in the facility director's office with all 4 women. I was in scrubs that barely fitted me and the women were in just robes, their scrubs soaked in sweat and cum.\n\n\"If I hadn't been through the security footage 4 times to confirm he didn't just walk in today and felt the trace of what you all did I wouldn't have believed a word you all said. That young nurse I was with may talk though, I can't risk this facility so I'm sorry but I have to let you all go. As for you, you're not insane are you Jennifer? I've been through your paperwork and interviews, you shouldn't be here,\" said the Director.\n\n\"No, it's all been him. We needed a place where I'd be safe and that wasn't at work or home,\" replied Jen.\n\n\"Would a $200k donation to the hospital help keep this between these walls and allow these ladies to remain employed? I'd also be happy to give you a personal check for say, $75k for your understanding. I'd be happy to see if the young lady would agree to a $10k 'bonus' for forgetting what she saw also.\" I said.\n\n\"I uh, our funding isn't the greatest right now, that would certainly help. I'd also hate to have to lose great nurses over a, let's say, misunderstanding?\"\n\nI held out my hand to shake on it, when she took it she closed her eyes, gasped out loud then quickly pulled her hand away.\n\n\"I... I, you um, should probably wear gloves for a while too,\" she said, sitting down with her face going red.\n\nJenny grabbed my arm and felt the same.\n\n\"Fuck, it's still there.\" she said, catching her breath.\n\n\"Well, let's see how open minded this girl is, tell her the truth and shake her hand?\" said Kendra.\n\n\"You three take the rest of the day off, send her in on your way out, it's worth a try,\" said the director.\n\nThe young woman didn't believe me until I shook her hand, she let out a loud 'OH' then collapsed into the chair.\n\n\"I... I've never felt that before,\" she said.\"Well we can fix that later, we just ask that you keep this all to yourself,\" said Jenny.\n\n\"If he can hold me for a while sometime so I can feel that again I won't say a word,\" she replied.\n\n\"I'm sure we can arrange something,\" said Jenny with a smile.\n\nIt took 3 months, 3 divorces and 8 women sharing me to finally take my 'erotic touch' as we named it away. Helped that we all shared the largest powerball in history, the Director lady was one of the 8, she agreed on a share of the winnings and quit the hospital with the rest of the nurses. We rented out an entire complex in the Caribbean for 6 months while we planned our new lives and didn't care that it was during the rainy season...."
    ],
    "authorname": "Originsunknown",
    "tags": [
        "fantasy",
        "humor"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-invisible-man-5"
}