{
    "title": "Three Square Meals Ch. 091",
    "pages": [
        "The darkness of the tunnel was banished by the bright pulses of laser fire, while the shrill screams of dying Kirrix rang in John's ears. There was a momentary lull in the carnage as Irillith followed the ramp up and around the corner, her sister hovering protectively at her side. The insectoid troops lurking around the corner in ambush rushed forward, but Tashana's twin Quantum pistols barked out their deadly song and they were blown to pieces in a hail of railgun slugs. \n\nIrillith levelled the underslung Pulse Cannon at the rest of the screeching troops and blazing azure bolts scythed through their ranks, cutting the Kirrix down. The twins continued upwards along the tunnel, leaving dismembered limbs twitching on the floor, the severed joints glowing where they'd been sheared from each soldier's thorax.\n\nAs John reached the turn in the tunnel, he looked down at the brunette he was carrying in his arms. \"How are you doing, honey?\"\n\nRachel glanced at the trauma bandage she'd applied to the wound on her thigh. \"You can put me down now if you want,\" she said with a brave smile. \"The initial pain from the neutron bolt injury was only temporary, so I should be able to keep up.\"\n\n\"The twins have got this,\" John replied, watching the Maliri sisters ruthlessly carving their way through the Kirrix forces. \"Besides, you're light as a feather.\"\n\nShe let out a happy sigh and snuggled into his chest. \"Okay then, if you insist.\"\n\nDana was walking alongside them and she laughed, shaking her head in amusement. \"She's making me wish I'd got shot instead, just so you could carry me out of here. How fucked up is that?\"\n\n\"No more getting shot please,\" John replied, giving her a stern frown.\n\n*Actually, unless Dana's planning on melting any more tunnels, we can use the last of her psychic energy to patch Rachel up,* Alyssa informed the three of them, the weariness in her voice obvious to all.\n\nDana nodded eagerly as she replied, \"Sure, give her whatever she needs!\" \n\nRachel's body was flooded with a sudden burst of energy and her grey eyes began to glow with an inner light as she placed her hand on her injured thigh. The misty aura rolled down her arm then spread out to shroud her leg. She let out a gentle sigh when she felt that soft tickling sensation, as the nasty gunshot wound closed and healed.\n\n*That's it, we're all completely tapped out,* Alyssa warned John. \n\nThe redhead yawned and went to cover her mouth with her hand, accidentally bumping her armoured fingers into the clear faceplate of her Paragon helmet. \"Fuck me, I feel whacked...\" she murmured, before turning to look at her lover. \"Feeling better, Babes?\"\n\n\"Much, thank you!\" Rachel replied, giving Dana a grateful grin. Shining her bright smile on John next, she brushed her fingers against his faceplate and let out a sigh of regret. \"I'd let you carry me all the way to the ship, but I'm fully recovered now. You should probably put me down, so Dana and I can go and help the twins.\"\n\nHe did as she asked and Dana handed Rachel back the Quantum rifle she'd been carrying. They shared a quick hug before jogging ahead to see if the Maliri sisters needed any assistance. John turned around and glanced back at Sub-Warden Dhormun who was talking quietly with Chancellor Niskera as they followed in his wake. They were both watching him intently and their pupil-less amber eyes seemed to be studying his every move.\n\n\"Is everyone okay?\" he asked, glancing behind at the group of diplomats and the dozen Trankaran Legionnaires that were shoving dead Kirrix out of their path.\n\nDhormun gave him a slow, deeply respectful nod and his rumbling voice had an odd catch to it as he replied, \"Yes. Thanks to you, we are all uninjured, Gr-\"\n\n\"Vice Admiral Blake...\" Niskera quickly blurted out, cutting Dhormun off. \"May I speak with you a moment please?\"\n\nJohn glanced back up the slope and saw that the girls had their evacuation well in hand. Dana and Rachel had taken point, allowing the twins a few moments to recharge their shields and for Tashana to reload her brace of pistols. \"Sure, but we can talk at length when we return to my ship.\"\n\nThe Chancellor turned and patted Dhormun on the shoulder, giving him a brief smile of apology for interrupting him. She hurried forward and matched John's stride as she fell into step beside him, walking carefully around chitinous corpses. Niskera opened her mouth to speak, hesitated and closed it again, suddenly appearing intimidated by his presence. She turned to look at him out of the corner of her eye and John saw that same look of reverence shining in those amber orbs once again.\n\nJohn gave her an encouraging smile and prompted her gently, \"What did you want to talk about, Niskera?\"\n\nShe bit her lip then asked in a hushed voice, \"Is it really true? Have you returned to us after thousands of years?\"\n\nLooking at her sharply, John asked, \"What do you mean?\"\n\n\"You are the Great Maker aren't you?\" Niskera whispered, a look of wonder on her face. \"I've seen the scriptures, heard all the stories from the years of darkness... The time when the gods themselves fought in the heavens!\" \n\nJohn was stunned and he gaped at her in surprise.\n\n\"You've returned to my people in our time of greatest need!\" she continued, the light of a true believer in her eyes. \"I was blind not to see when we first met... You swept in and effortlessly ended the rebellion with barely any loss of life, reuniting our people and averting civil war!\"\n\nNiskera suddenly looked horrified and before John could reply, she blurted out, \"But it was a test, wasn't it?! We failed you and left ourselves vulnerable to the Kirrix! I begged the Senate to overcome their differences, but they were unable to decide on anything! I'm so sorry, Great Maker! Please don't abandon us again!\"\n\nJohn shook off his shock and the Chancellor gasped when he reached out to place a reassuring hand on her shoulder. \"You have nothing to apologise for, Niskera. I wasn't testing you, and I'm not going to abandon you, but I'm also not Mael'nerak. That's the name of the Progenitor your people knew of as your Great Maker.\"\n\nHer face ran through a gamut of emotions. When Niskera heard that he wasn't upset with her, she looked immensely relieved at first, but that relief quickly turned to confusion at his firm declaration that he wasn't the Great Maker. Eventually her face lit up with understanding. \"But you are another 'Progenitor'? A fellow god, just like our Great Maker was!\" \n\nHe opened his mouth to reply, when Tashana called back to him from further up the tunnel, \"John! We've reached the surface! Sakura's here...\"\n\nJohn turned to face the Trankaran Chancellor. \"We'll talk later, Niskera, I promise.\" \n\nShe bowed to him reverently and he hesitated, torn whether or not to stop and clarify things with her now. \n\n*We'll sort everything out with her later,* Alyssa prompted him. *We need your help dealing with the Kirrix on the surface.*\n\n*OK, I'm on my way,* John replied, striding purposefully up the last of the tunnel, stepping over and around steaming Kirrix corpses.\n\nThe four girls had fanned out at the tunnel entrance to cover possible avenues of attack. Over to their left, about fifty metres away was the segmented ochre hull of a Kirrix hive ship, the huge vessel dark and lifeless. A large chunk had been ripped out of the underbelly and Trankaran civilians were climbing out of the hole in the hull. Directly ahead of them was the Valkyrie, it's weapons trained on the hive ship.\n\nJohn grimaced when he saw the damage the mech had taken. It had been hit by heavy neutron bolts in dozens of locations, and the once gleaming white armour plating was now gouged and blackened. As he continued his inspection of the mech, he spotted the ugly crater on its shoulder where one of the Pulse Cannon turrets had been destroyed in an explosion. Finally, the Valkyrie's feet and lower legs were dripping in sticky green blood, as was its massive sword. \n\nHe activated the comm in his HUD, picking up the mech. When Sakura's beautiful face appeared as an image inside the helmet, he asked in a shocked voice, \"What the hell happened?! I thought you were supposed to stay out of trouble? Are you alright?\"\n\nSakura's face was fraught with worry. \"Forget the Valkyrie! You guys look like you were torn to bits! Are all of you okay?!\"\n\nJohn paused and glanced down at his own body armour and then that of the girls. He knew they'd taken a lot of hits in that nightmarish slog through the Kirrix forces, but he hadn't realised how bad it had been. They'd all been struck by scores of neutron bolts, their white armour a tattered shadow of its once pristine glory. Rachel aside, he was amazed that the armour had been able to take that much abuse and that more of them hadn't been injured.\n\nLooking back up at the mech's cockpit, the head was tilted down towards him and he spotted the Asian girl through the clear-crystal canopy. \"It looks a lot worse than it is. Only Rachel got injured, but she healed herself.\"\n\nSakura nodded, then looked a bit guilty. \"I'm sorry to ask, but I could really use your help. I took down all the Kirrix hive ships to stop them from abducting the Trankaran civilians. I've also killed all the Hivelords to stop them infesting any more Trankarans, but there's still Kirrix troops inside keeping their prisoners captive.\"\n\n\"You need our help with a sweep and clear?\" John asked apprehensively. \"I don't think we're in much shape to handle multiple boarding actions.\"\n\n\"We just need to free the civilians!\" Sakura replied in a rush. \"You don't need to scour the ships of all the Kirrix troops.\"\n\n*Before you do anything, come and get some fresh armour,* Alyssa insisted. *Faye will bring the Raptor around for you once you're ready to hit the hive ships. Heads up, we're incoming to your position.*\n\nJohn glanced up and smiled when he saw the Invictus looming overhead, the battlecruiser dropping down through the cloudbanks with retro-thrusters flaring to slow their descent. His smile faded when he saw the state of the armour, with ugly furrows from a multitude of beam weapon hits crisscrossing the hull.\n\n\"Holy fuck!\" he swore under his breath. \n\nAlyssa sighed. *Don't worry, I'll fix it...*\n\n*I don't give a shit who fixes it!* John swore, his worry for Alyssa and Calara making him sharp with her. *You weren't supposed to be slugging it out with their capital ships! Are you both okay?*\n\n*I'm exhausted, John...* Alyssa replied patiently. *Can we discuss it later please?*\n\nHis eyes narrowed as he gazed up at the descending ship. *Fine, but we need to have a talk, young lady.*\n\nTurning to make eye contact with Sakura in the Valkyrie cockpit, John gave her a thumbs up, then looked back at the tunnel entrance. The Trankaran soldiers had fanned out to form a firing line between each of the girls, while the diplomats huddled together just outside the tunnel entrance.\n\nHe pointed upwards at the Invictus and forced a warm smile onto his face as he looked at the assorted alien dignitaries. \"My ship will be landing in a moment. If you'd like to follow me, you'll be safe once you're inside.\"\n\nNiskera walked over to him, her face a mask of concern. \"The citizens of Mulbharum... I can't just abandon them to the Kirrix!\"\n\n\"We're not going to,\" John said, meeting her anxious gaze. \"Trust me.\"\n\n***\n\nFaye banked the Raptor around in a tight turn, flying to intercept the remnants of the Kirrix reinforcements, who were pouring out of a tunnel to the south of the city.\n\n\"Sakura, we've got Kirrix troops emerging from two tunnels,\" she informed the Valkyrie pilot. \"I'll take the one to the south, the one closest to you is three-hundred-and-nine metres from your position, on a bearing of seventy-two degrees.\" \n\n\"Got it! Heading there now,\" Sakura replied, pivoting the Valkyrie and setting off with long loping strides.\n\nThe purple sprite was high above the city, with half of her avatars performing scans of Mulbharum and checking the city for any signs of Kirrix forces. The other half were back in the Invictus, either manning the Pulse Cannons to provide cover for the thousands of Trankaran civilians boarding the battlecruiser, or coordinating her boys who were assisting with the rescue mission.\n\nAt least fifty Kirrix troopers had emerged from the tunnel ahead of her, looking like angry ants pouring out of a disturbed nest. They were reinforcements from the closest hive ship; hundreds of soldiers that had nearly made it to the underground cavern, before Dana had collapsed the pillar-lined gallery. With no way ahead of them, they had simply turned around and backed up the sloping tunnel, intent on returning to their hive ship.\n\nFaye Primary brought the Raptor in low, weaving through the monolithic Trankaran skyscrapers. She marvelled at how much more exhilarating flying was when she was able to make course corrections almost instantaneously, rather than having to allow for a couple of seconds of signal delay. Executing a lazy roll, just for the sheer thrill of it, she opened fire with her Photon Lasers, blasting an emerging Kirrix Juggernaut in the torso and vaporising everything above its bulbous abdomen. \n\nThe Pulse Cannons blazed away, hosing down the fleeing Kirrix troopers with streams of azure laser bolts. Each of the six turrets tracked from port to starboard, her avatars calculating the most efficient path to sweep the hail of fire through the insectoid forces. As the Raptor neared the tunnel entrance, she reduced power to the engines to bring the ship to a halt, then activated retro-thrusters to upend the gunship, so that the nose was pointing directly into the broad tunnel entrance. Just as she had with the last two entrances, she opened up with the Photon Laser beams, slashing them back and forth, and melting large trenches through the walls. With a rumbling crash the tunnel caved in, throwing dense plumes of dust skyward as the rubble settled, entombing hundreds more.\n\n\"Very nice, honey,\" John said, nodding his approval. He pointed over to the section of ragged hull where Sakura had previously carved her way into the belly of the hive ship. \"Put us down over there, same drill as before.\"\n\nFaye beamed at his praise. \"Okay, John!\" she readily agreed. \"I'll start an active scan immediately and update your HUD with the results!\"\n\nHe winked at her, then left the cockpit, unshouldering his rifle as he stepped into the grav-tube. Faye brought the gunship down at the point John had requested, while keeping a vigilant eye on the sensors to look for any more Kirrix sightings. She watched John, Dana, and Calara jog towards the jagged tear in the hull, their new sets of pristine white armour gleaming in the moonlight. Faye Tertiary noted that the Active Scan was complete and she began to upload the sensor results to their Paragon HUDs. There were still a couple of hundred Trankarans inside that vessel, closely guarded by a dozen Kirrix soldiers.\n\nFaye Primary didn't have time to worry about John and his two young companions, because Alyssa contacted her a second later. \"We're ready for a pickup, Faye,\" the blonde said, giving her a tired smile. \n\n\"On my way!\" the sprite replied, ramping up power to the Raptor's retro-thrusters and launching the gunship skyward.\n\nAs she pivoted towards the eighth Kirrix hive ship -- where she had dropped Alyssa and the Maliri twins ten minutes earlier -- a bright holo-projection filled the sky above the city. It had been replayed every ten minutes for the last two hours, with Faye broadcasting Chancellor Niskera's kind face as a huge, hundred-metre-high image across the clouds.\n\n\"Citizens of Mulbharum! Please assemble at the central plaza! We are evacuating those in most need from the city; the injured, infected, or mothers with young children. Any citizens fit and able to fight, please report to Sub-Warden Dhormun who is rallying a militia until large-scale relief arrives. Republic forces will return and protect you from the Kirrix, you have my word as your Chancellor!\"\n\nThe image winked out and Faye glanced down at the Invictus as she raced overhead. Orderly queues of Trankaran citizens were being loaded into the battlecruiser's Primary Hangar, where her maintenance bots were helping to sort the civilians into their various categories. Faye Octonary was in charge of finding the most critically injured and bringing them to Rachel's attention, while the bots controlled by Nonary through to Duodenary were helping bring those Trankarans infested with Kirrix eggs for treatment.\n\nFaye Primary marvelled at the calm, orderly manner with which the Trankarans behaved; so unlike the chaotic groups of Terrans she'd helped rescue on numerous occasions. Not that she disliked Terrans of course! Aside from a certain Progenitor who she liked very much indeed, Terrans were her favourite species. Thinking of Dana activated her special 'best friend' subprogram and she felt giddy as she began to think about times they'd spent together in the Grand Engineering Overlord's Workshop. \n\nA new 'guilt' procedure kicked in when she spotted her wonderful Creator by the hull of the hive ship. Faye flushed, realising she should really have considered Maliri to be her favourites. Irillith was standing beside her sister by the tear in the flank of the grounded Kirrix vessel, gunning down any insectoid soldiers still attempting to pursue their fleeing prisoners. Alyssa was busy outside the Kirrix hive ship, directing the Trankaran civilians they'd just liberated from captivity. A number of healthy Trankarans were helping to carry their infested rock-brethren to the loading point, those dazed civilians bloated with Kirrix eggs were too weak to stand themselves. All the rest who were unharmed, were running towards the rallying point in the centre of the city.\n\nFaye brought the gunship down to a clear space on the nearby road, rotating the gunship so that the injured and infested could be loaded into the big compartment at the rear of the Raptor. As soon as she touched down, she activated the rear-loading ramp, then waited patiently for Alyssa's confirmation that they could evacuate those in urgent need of care to the Invictus.\n\n***\n\n\"This will feel a little odd, but you won't be harmed by the procedure,\" Rachel said, giving the burly Trankaran a kind smile.\n\nChancellor Niskera clasped his hand and squeezed it tightly. \"You've been so brave, but this nightmare is nearly at an end, you have my word.\"\n\nHe looked up at her and slowly nodded, shame, fear, and revulsion warring for dominance on his blunt features. The Trankaran was lying on a platform underneath a cargo loading arm, the grasping claw removed and replaced by a Sonic Cannon that was pointed at his bloated abdomen.\n\nRachel clicked the button on her console and the specially modified Sonic Cannon opened fire, sending pulses of sound into the rockman's belly. He groaned and shifted slightly on the raised plinth he was lying on.\n\n\"Any pain?\" the brunette asked, her finger hovering over the button to shut down the sonic weapon.\n\nHe shook his head and rumbled, \"No Doctor... as you say, it feels very... odd.\"\n\nRachel patted him on the shoulder. \"Nearly done, Theldroc. The vibrations from the Sonic Cannon are liquefying the eggs. You'll be clear of all infection in a matter of minutes.\"\n\nFive seconds later she glanced at the body scan results and nodded with satisfaction. She pressed the button to cease fire with the Cannon, then beckoned over a couple of Trankaran Legionnaires who had volunteered to act as orderlies.\n\n\"I thought you said a few minutes?\" Theldroc asked, looking up at the Sonic Cannon in surprise.\n\nRachel smiled at him, then gestured to the Legionnaires. \"These men will help you to the bathroom. It's over Theldroc, you're safe now.\"\n\nHis amber eyes welled up and he clasped her hand in his massive paw. \"Thank you so much, Doctor.\"",
        "\"You're quite welcome.\" She smiled at him and added, \"Please hurry though...\"\n\nThe Trankaran's stomach rumbled ominously and the two Legionnaires quickly helped him to his feet. \n\n\"Quite astonishing,\" Chancellor Niskera murmured, watching the three of them hurry away. \"Normally, invasive surgery is required to save someone from Kirrix infestation. It would have taken weeks for the medical facility on the Anvil to treat all these patients!\"\n\n\"Any questions about how to operate the Sonic Cannon?\" Rachel asked, gesturing towards the console.\n\nNiskera shook her head, but looked apprehensive. \"Are you sure this is wise, Doctor Voss? I'm not medically trained.\"\n\n\"It's either you or one of the maintenance bots,\" Rachel replied with a smile. \"I think your people would much prefer your gentle bedside manner.\"\n\nGlancing at one of the floating robots with its disconcerting grin, Niskera nodded. \"I agree, I'll take over for you.\"\n\n\"Just call me if you run into any problems,\" Rachel said, before walking over to the second station that a pair of Faye's maintenance bots had just finished assembling.\n\n***\n\nSakura watched Alyssa and the twins stride up the Raptor's rear loading ramp, the trio following after the last of the infested Trankarans they had just rescued. Alyssa waved at her before she disappeared inside, knowing that the Asian girl was looking her way. The ramp closed after the blonde and the gunship lifted off the ground, with Faye transporting the civilians to the Invictus in the centre of the city.\n\n\"We've cleared the potential blast radius,\" Faye informed Sakura a few moments later.\n\nThe Kirrix hive ship still had power on one side of the vessel, but the other was as dark as the night's sky. The Valkyrie was standing facing that darkened side, safe from retaliation now that all the weapons on the hive ship's port flank had been shut down. Sakura lined up her targeting reticle over the rear of the huge ochre hull, studying the tactical overlay that Dana and Calara had created from the results of their active scans. \n\nThe four muzzles of the Valkyrie's Photon Lasers followed her crosshairs, until they were pointing towards the middle of the ship, near the rear. The Asian girl took great care as she aimed her shot, because accidentally triggering a power core explosion would demolish several blocks of the city. She lightly squeezed the trigger and short pulses of azure beams lashed into the stricken Kirrix vessel, burning through segmented armour plating and rupturing the fuel cells. The liquid hydrogen ignited, setting the hive ship ablaze in a conflagration that she knew would leave the vessel a charred derelict, having already done the same to a dozen others.\n\nIt didn't take long for the Kirrix hive ship to become a raging inferno, fire licking up around the hull in a dozen places. The dancing flames lit up the sky above the city, joining the other insectoid funeral pyres in a bright ring of fire around Mulbharum. Sakura nodded with satisfaction as the remnants of the Kirrix forces were methodically incinerated.\n\n***\n\nJohn lined up his crosshairs on the Kirrix soldier's mottled brown carapace, ignoring the sickly green neutron bolts that were causing rippling impacts on his shield. He gently squeezed the trigger and the hyper-accelerated bullet slammed into the insectoid soldier's chest, catapulting it backwards. The Kirrix exploded with the force behind the round, its thorax completely obliterated in a thick spray of green blood. \n\nAs its lower body sprawled onto the deck and its arms and head bounced back down the corridor, John glanced over his shoulder to the breeding room. \"That was the last of them near here,\" he said to Calara, who was freeing a Trankaran from a multi-legged sled. \"According to Faye's scan, there's dozens more soldiers on the upper levels, we should be able to evacuate the Trankarans before reinforcements turn up.\"\n\nThe Latina nodded, her face tense and alert. \"I'll start guiding everyone out.\"\n\nWith Rachel treating the infested Trankarans, it would have just been John and Dana in this fireteam, so Calara had asked to assist with the evacuations. While she was a very good shot and followed his orders to the letter, she was far more relaxed at her Tactical Station, manning the Invictus' massive guns. By contrast, John found the thought of trying to aim and shoot that obscene amount of firepower to be a daunting prospect, especially when equally destructive ship weapons were being fired back at them.\n\n\"Hey, John... I was just wondering about something...\" Dana asked, rousing him from his thoughts. Her tone made it clear that she was going to ask him to do something he'd rather not.\n\nJohn watched as Calara helped the wounded Trankaran off the sled and pointed him towards the hole in the hull. \"What's up, Sparks?\"\n\n\"I know this mission's already gone miles off-tangent already, so I thought, fuck it, why not one last thing,\" she suggested, arching an eyebrow to see if he was intrigued.\n\nHe rolled his eyes at her but couldn't help smiling. \"Come on Sparks, stop beating around the bush! What've you got in mind?\"\n\n\"Well... it's Rachel's birthday coming up soon, and Sakura's already got her something nice,\" Dana continued, making sure the ground around the bush was well and truly beaten.\n\nJohn looked at her in surprise. \"I thought she was only joking... Are you really making her a Pulse Cannon for her birthday?!\"\n\nThe redhead laughed as she nodded. \"Big weapons have started getting her all hot and bothered. I blame you!\"\n\nHis answering grin slowly turned into a frown. \"So what did Sakura get her and when's the big day?\"\n\n\"A Hivelord head and three days time,\" Dana explained, counting off her answers with two fingers. She nudged him with an elbow and continued, \"If you can bag her a Broodmother's head to complete the set, she'll love it!\" \n\nJohn glanced back up the long corridor at the heavy doors beyond. With his enhanced hearing, he could hear the eerie chittering sound from the Kirrix grubs and knew the Broodmother would be near her foul spawn. \n\n*You might as well, Rachel might be able to learn something from it,* Alyssa encouraged him, her thoughts drifting into his mind. *You're in the last hive ship, Faye and Sakura have destroyed all the rest. Irillith and Tashana are with me, and we're already on our way to help out with the Trankarans.* \n\n\"You okay for ammo?\" John asked, looking back at Dana.\n\n\"Fuck yeah!\" she agreed, her face lighting up in a grin. She turned back to look at Calara and yelled, \"Come on, gorgeous! I told you he'd go for it!\"\n\nJohn looked at them in surprise, having not heard any conversation from either of them. \"When were you discussing that?\"\n\n\"A couple of minutes ago,\" Dana replied with a nonchalant shrug, tapping her finger on the side of her helmeted head. \n\n*It's lovely the girls get on so well,* Alyssa informed him wryly. *But I do sometimes wonder if they think I've got nothing better to do except pass on all their messages...*\n\nJohn ejected his half-spent magazine and slotted in a fresh one. They'd all stocked up on ammunition when they'd changed into new Paragon armour, but this was the fifteenth hive ship they'd breached and he only had three magazines left.\n\n\"Alright, let's move,\" he declared, stepping over the mangled corpse of the soldier he'd shot only a couple of minutes earlier. \"This is the only way into the breeding chamber, so any Kirrix coming after the Trankarans will still have to come through us.\"\n\nCalara and Dana reloaded their rifles as they followed him down the eerily-lit corridor. Power had been knocked out on the left side of the hive ship and one half of the central corridor was pitch black, while the other side pulsated with light, illuminating the glowing hexagon tiles that formed the walls and ceiling.\n\n\"This place is really fucking creepy,\" Dana muttered, as she heard the warbling chirrups of the Kirrix grubs through the door.\n\nCalara gripped her Quantum rifle tighter as she darted a glance at the pulsing walls and could only nod her agreement.\n\nJohn pointed to the arched set of double doors ahead of them. \"Get ready, the nest is through there. That's where we'll find the Broodmother.\"\n\nHe walked up to the doors and placed his hand on the glowing button on the wall. Nothing happened, so he backed up a few paces to look at the door frame. Waving the girls back, John aimed at the frame with his rifle and snapped off several rounds in quick succession, blasting gaping holes out of the frame and the door mechanism behind it. With a short run he shoulder-charged the door and it toppled backwards into the room, landing with a deafening boom. \n\n\"Fuck me!\" Dana yelped, eyes widening at her first sight of the Broodmother.\n\nThe fourteen-foot-tall Kirrix monstrosity whirled around, two sets of compound eyes glaring at the intruders, its mandibles thrashing madly in the air as it let out a furious screech. It had twelve long limbs, six of which ended in thick chitinous legs to keep its big body stable. Its abdomen ended in a bloated, semi-transparent dome, and they could see hundreds of eggs shifting inside its body, under its yellowy-brown hide. The Broodmother's thorax had another six limbs, the first two pairs ending in long scythe-like foreclaws, while the last set of short-clawed segmented arms were kept tucked close to its body.\n\nThe Broodmother wasn't the only creature in the room. Aside from the hundreds of chirping Kirrix grubs that were tucked away in hexagonal alcoves in the wall, there were a dozen unarmed drones that were hurriedly picking up grubs and placing them into writhing sacks.\n\nJohn swung his rifle to point at the Broodmother as it began to lumber towards them. \"Drop the big one first, then we'll clean out the rest!\"\n\nDana and Calara darted forward to flank him and their three Quantum rifles boomed, as full-power rounds accelerated down the incredibly powerful magnetic rails built into their barrels. Faint contrails were left behind in the air as those bullets slammed home, blowing huge chunks out of the Broodmother's torso. Its enraged screeching turning into a wet-sounding wheeze as Calara punched a big hole through its upper thorax. It staggered on towards them, but a second volley chopped it in half, spraying the wall of grubs with entrails and green blood.\n\nThe Broodmother thrashed on the floor, long foreclaws making a grating squeal as she gouged divots from the metal deck. Without being prompted, Dana and Calara shot those flailing claws, blowing them apart in an explosion of armoured chitin. John calmly approached the fallen monstrosity and shot it one final time at the top of the thorax, the shot neatly decapitating the hideous beast. \n\n\"What the fuck?!\" Dana exclaimed in surprise, drawing John's attention to the redhead. \n\nShe pointed across the room towards the Kirrix drones that had been attempting to flee with their sackfuls of grubs. The dozen six-limbed insects had collapsed on the floor as if pole-axed. They twitched uncontrollably, squirming grubs falling free of the sacks that tumbled out of their clawed hands. \n\n\"Must be some kind of psychic backlash when the Broodmother died,\" John said, clapping Dana on the shoulder. \"Our sexy doctor's proved right again...\"\n\nCalara raised her rifle and aimed at the jerking drones. \"Should we take them out, just in case?\"\n\n*Wait!* Alyssa blurted out. *Rachel says to just watch them for the moment. The effect might wear off soon.*\n\nJohn walked over to the Broodmother's head, watching its juddering, razor-sharp mandibles with a wary eye. \"It must wear off eventually. The last time we boarded a Kirrix hive ship, there were still drones fighting a while later, after we killed the Broodmother and the Hivelord.\"\n\nCalara walked over to join him and shook her head in revulsion as she stared at the horrifying monster lying dismembered on the floor. \"I can't believe how brave you and Alyssa were back then, boarding one of these horror ships. You didn't even have any decent equipment!\"\n\n\"I've always had more balls than brains,\" John said with a wink. \n\nDana and Calara both laughed at that, then watched as he grabbed the severed head by one of its armoured horns.\n\nJohn glanced down at the gaping holes the railguns had blown through the Broodmother's torso. \"All joking aside, it was a hell of a lot harder the first time we tried to take one of these things down. Alyssa and I burnt through loads of ammo with those XR75 rifles before it finally dropped... it very nearly killed us.\" \n\nThe redhead nodded, glancing down at the Quantum rifle in her hands. \"I can't even imagine trying to kill one of those fuckers with a normal assault rifle.\"\n\nCalara patted him on the shoulder as she walked past. \"To think I used to complain about being stuck on the ship!\" she said, obvious relief in her eyes.\n\n\"Come on, let's head back,\" John said, hauling the huge Broodmother head behind him and leaving a sticky trail of green gore in his wake.\n\nAs they left the nest chamber, Dana glanced back and saw that the Kirrix drones were starting to stagger drunkenly to their feet. \"Two for two, Babes...\" she murmured under her breath as she jogged to catch up with her companions.\n\n***\n\nJohn waited until the last of the Trankaran civilians had disembarked from the Raptor, before he strode down the rear-loading ramp, dragging the Broodmother's severed head behind him. He'd wanted to avoid upsetting the Trankarans with the disturbing sight of the Kirrix monster, but the ones that turned and saw it reacted quite differently. They grinned and pointed him out to their friends as he dragged the trophy towards the ramp leading up into the Cargo Bay. \n\nHe spotted Sub-Warden Dhormun standing by scores of Trankaran soldiers, the Legionnaires that they had rescued from Hol Darim Fortress now joined by those captured by the Kirrix. The soldiers were handing out captured neutron rifles to civilian volunteers, with those men joining the newly formed militia units. One of the Legionnaires saw John watching them and he saluted him respectfully, then tapped Dhormun on the shoulder and pointed him out. The Sub-Warden turned around and walked towards John with his long, thumping strides.\n\n\"It looks like you've got lots of volunteers,\" John said, nodding towards the ranks of civilians listening to the Legionnaires. \n\nDhormun smiled at him and replied, \"Everyone wishes to play their part. Should the Kirrix return, they'll face stern resistance!\"\n\n\"I hope it won't come to that,\" John said earnestly, appraising the unarmoured civilians and knowing how heavy the casualties would be in a protracted battle. \"We'll take Niskera, the other diplomats, and the wounded back to Thandrun's forces, then try and get help for you as soon as we can. We knocked out the Kirrix fleet in the Alpha Tauri system, so at least you'll be safe in the short term.\"\n\nAfter a moment's hesitation, Dhormun clapped a weighty armoured paw on John's shoulder. \"Thank you for everything you've done for us, Vice Admiral Blake. I don't know if Niskera is right about you, but by the Maker, you're a force to be reckoned with!\"\n\nJohn smiled at him in return. \"You did a fine job yourself, Dhormun. You kept Niskera safe... I couldn't have asked for anything more.\"\n\nThe Sub-Warden bowed to him respectfully. \"It was my honour to serve. Good fortune to you... John.\"\n\n\"You too,\" John replied, then watched the big soldier turn around and rejoin his troops.\n\nMaking sure he had a firm grip on the Broodmother's head, he walked up the nearby ramp, searching through the crowds until he spotted one of his girls by one of the treatment machines. He already knew it would be Rachel, but the tawny-brown lioness on her shoulderpad identified her at a glance.\n\n\"Rachel!\" he called out to the brunette. \"Do you want your birthday present early?\"\n\nRachel turned around when she heard his voice and her eyes sparkled when she saw the grisly trophy. \"Oh that's fantastic!\" she exclaimed, before turning to speak to one of her orderlies and asking him to take over operation of the Sonic Cannon. She hurried over to John after that, studying the massive insectoid head with avid interest. \n\n\"You were right about the psychic backlash. The drones must have been controlled by the Broodmothers rather than the Hivelords,\" John told her, glancing down at the four black compound eyes atop the hideous yellowish-brown exo-armoured skull.\n\n\"I can't wait to examine it!\" she exclaimed, looking up at him and grinning. \"I love my present, thank you!\"\n\n\"Should I take it up to Medical?\" he asked, meeting her happy grey-eyed gaze.\n\nShe nodded enthusiastically. \"If you could, that would be wonderful! Just store it in a sterile field on one of the operating tables, I'll perform an autopsy later. The Hivelord's head should be up there already.\"\n\n\"Will do,\" John agreed, before he turned to look around the packed Cargo Bay. \"How's everything going in here?\"\n\n\"We're making great progress treating those infested with Kirrix eggs,\" she informed him, following his gaze back to the three loading claws, which had been retro-fitted with Sonic Cannons to operate on any impregnated Trankarans. \"I've also treated the most critically injured civilians, but there weren't actually too many of those.\"\n\n\"Really?\" John asked in surprise. \"After days of occupation, I would have expected quite a few.\"\n\nRachel's face darkened as she shook her head. \"The Kirrix killed anyone too badly wounded to survive the two-week gestation period. They applied some kind of salve to the seriously injured, to keep them alive long enough for the eggs to hatch.\" Her expression lightened a little as she added, \"The salve seems to act as a fast-acting coagulant, while also keeping wounds covered and sterile. I've taken some samples and I'll do some research into it when I have some free time. I might be able to synthesise something useful.\"\n\n\"Nice work, honey,\" John said, patting her on the arm. \"I'll let you get back to it, but we'll all catch up later for a debrief, okay?\"\n\nShe blew him a kiss, then turned around and strode back to the Trankarans to continue overseeing their treatment. John picked up the Broodmother's head again and started to drag it towards the loading lift that led up to Dana's Workshop. Through the crowds, he spotted the distinctive white gleam of one of his girls in a Paragon suit, the alluring armoured figure leaning against the back wall of the Cargo Bay. Weaving around Trankarans to see who it was, he smiled politely at the burly rockmen and women as they gave him respectful bows when he passed. \n\nDrawing closer, he spotted white lioness holographs floating above her armoured shoulders and her exotic blue skin through the faceplate. Tashana twirled her twin pistols in her hands and her angular violet eyes were riveted on the crowd, her expression tense and rigid. It was almost as though he could see the anger pouring off her, and he hurried faster, wondering what had upset the Maliri girl so badly. When he got close enough to get a clear look at her, and more importantly, what she was staring at, he finally understood. \n\nChancellor Niskera was helping to treat the infested Trankarans, and the diplomats from the minor empires were gathered nearby, watching the process in amazement. All those species had dealt with Kirrix infestations before and were painfully aware of how hard it was to safely treat anyone carrying their eggs. The diplomats were talking quietly amongst themselves, including the Bolon ambassador, who was the object of Tashana's burning gaze.\n\n\"Hey, beautiful,\" John greeted the Maliri girl in a cheerful manner as he hauled the Broodmother's head onto the loading lift. \"Want to give me a hand hauling this ugly mother up to Medical?\"\n\nTashana glanced at him in surprise, her expression softening when she saw his smile. \"Of course, I'll be glad to help.\"",
        "John glanced down at the weapons in her hands. \"I'm pretty sure it's dead already. I doubt you'll need those.\"\n\nShe flushed with embarrassment at the realisation she had drawn her pistols and she hurriedly slid them back in their holsters. \"Sorry...\" she murmured, hopping onto the platform with him.\n\nHe placed a reassuring hand on her shoulder, then turned to hit the button to take the lift up to the Engineering Bay. They raced towards the roof at tremendous speed, the doors sliding open to let them safely enter. \n\n\"Would you mind getting the door for me please?\" he asked, before carrying his prize across the Workshop deck.\n\nTashana jogged across Engineering to open the door into the corridor, before slipping through ahead of him and darting towards Medical. John had to tilt the ochre-coloured head on its side to fit through both doors, and when he entered the Medical Bay, he saw the Hivelord's decapitated head on one of the operating tables. With his massive strength, it didn't take too much effort to place the Broodmother next to it and the sterilisation forcefield shimmered as he stepped clear.\n\n\"Time to get out of this gear I think,\" he said to the Maliri girl, who appeared lost in thought. \"You can use the equipping frame in our bedroom.\"\n\nTashana looked at him in surprise. \"Doesn't that one belong to Alyssa?\"\n\n*That's no problem, our armour's all the same size anyway, so I'll leave my suit in the Briefing Room,* her blonde Matriarch immediately informed her. She sounded amused as she added, *One of the benefits of John's one-size-fits-all approach to his girls...* \n\nJohn offered Tashana his hand and she gratefully accepted, slipping her armoured gauntlet into his. They walked along the corridor to Deck Seven in comfortable silence, with the Maliri girl lost in her troubled thoughts, and John not wanting to talk to her about it just yet. The sound of activity reached their sensitive ears as they stepped into the blue anti-gravity field, the noise from the crowds drifting up the tube from the Cargo Bay and Hangar.\n\nAfter stepping out onto Deck Two and entering the bedroom, John paused to look at Jade, who was still fast asleep burrowed into the covers. Light was still radiating from her verdant body, but the radiance had dimmed slightly, making the Nymph appear more contented than triumphant. He led Tashana into the walk-in-wardrobe and they removed their Paragon suits in the armour equipping frames. John stretched his tired muscles as he stepped out of his armoured boots, while Tashana shook out her long snowy-white hair as she walked clear of her armour. \n\n\"I need to freshen up, but there's a problem,\" John announced, his expression serious. \"I don't like showering alone...\"\n\nShe laughed and unzipped her form-fitting bodysuit. \"In that case, I better join you. I wouldn't want you to get lonely.\"\n\nThey stripped off their clothes then walked hand-in-hand through to the bathroom. John activated the shower then opened his arms for her, wrapping her in a gentle embrace as the hot water splashed down around them. Tashana was a little tense to start with, but she soon relaxed, leaning closer to him and resting her chin on his shoulder.\n\n\"You were magnificent today,\" he whispered quietly into her ear, as he slowly rubbed her back. \"We wouldn't have made it out of those tunnels if it wasn't for you taking care of those Juggernauts. I was seriously worried when we hit that gallery and saw how many we had to face.\"\n\nTashana pulled back and looked up into his eyes. \"I wasn't,\" she said with conviction. \"I always feel absolutely fearless when you're near; like there's nothing we can't accomplish together. Even when that train tipped into the lava... I knew you'd find a way to save all of us.\"\n\nJohn cupped her head in his hands and leaned in to give her a tender kiss, feeling her melt in his arms as she returned it with passion. Her full lips felt soft and yielding, her tongue flicking tentatively against his at first and then growing bolder. He could feel her smile as she teased him with the tip before pulling back, urging him to follow. Taking up that sensual invitation, he followed her tongue into her mouth and was rewarded by a heated moan as he did so. They stayed like that for a long time, enjoying the intimacy of the kiss as they soaked under the shower. \n\nEventually Tashana pulled back and let out a blissful sigh. \"I've never been kissed like that before... it was wonderful.\"\n\n\"It was,\" John agreed, relishing the loving look in her enchanting violet orbs.\n\nShe gave him a knowing smile and said, \"Now I'm feeling so relaxed my legs feel like jelly, are you finally going to tell me?\"\n\n\"What do you want to know?\" he asked her quietly. \n\n\"All of it,\" she replied, meeting his look of concern.\n\nHe could see the fierce resolve burning within her; an inner strength that had been gradually building over these last few weeks.\n\n*She's ready,* Alyssa agreed, her tone full of sympathy. *Do you want me there too?*\n\n*I'll be okay,* John replied. *Just let me know when you've finished loading the Trankarans and we're ready to ship out.*\n\n*Will do,* she agreed, her voice fading from his mind.\n\nJohn smiled at the beautiful girl in his arms. \"Let's get dressed and we'll talk.\" \n\nShe glanced down at his equipment, then looked up at him and raised an eyebrow. \"First, do you want to...\"\n\n\"Later, definitely,\" John said, punctuating his words with a kiss. \n\nTashana nodded and took his hand as he led her out of the shower, the jets turning off behind them. They dried themselves off before returning to the walk-in-wardrobe, where John pulled on a t-shirt and combat trousers while Tashana borrowed one of Alyssa's long dresses. When they returned to the bedroom, Faye was waiting for them beside a paused holo-recording, a sad expression on her elfin face. She fluttered over to join them and pursing her cupid-bow lips, placed a loving kiss on Tashana's sky-blue cheek. \n\n\"I'll never let anyone hurt you like that again,\" she said vehemently, with a blazing intensity to her luminous eyes. Before the startled Maliri girl could reply, the purple sprite looked at John and continued, \"Just call me if you need anything.\"\n\n\"Thanks, Faye,\" John replied, watching her disappear a second later. \n\nHe slipped his hand into Tashana's, interlacing their fingers and guided her over to the bed. Some of her bold confidence had left her now, unsettled as she was by Faye's fervent declaration.\n\n\"Is it really that bad?\" she asked him in a hushed voice.\n\nJohn paused for a second, then nodded. \"Yes. Some of it will be very hard for you to hear.\"\n\nWhen they sat down, Tashana wouldn't release her tight grip on his right hand, so he reached for the remote with his left instead. He pressed play to activate the video, the blurred image suddenly focusing on this very bedroom and a gruesomely scarred Maliri girl sitting on the bed. Tashana gasped in horror at the sight of her mutilated face, not doubting for a moment that the girl in the holo-image was her. \n\nAppalled at the sight of her injuries, she whispered, \"I always tried to be kind to people. I was... nice. How could anyone do that to me? To anyone?\"\n\nThe video continued to play but the sound was turned off, the sickeningly disfigured girl in the video talking to someone out of shot, her ravaged face twisted with scorn.\n\nIn a voice no more than a muted murmur, Tashana asked, \"When was this taken?\" \n\nJohn stroked her back and gently replied, \"The night you decided to join me.\"\n\nTearing her eyes away from the holo-vid to look at him, she asked, \"Can I listen to what we were saying?\"\n\nHe rewound the recording back to the start, then played it all back. She listened all the way up to her tortured self finally breaking down in tears and begging for John's help, at which point Tashana turned away, not able to handle seeing herself in such a desperate state. She slipped her hand from his and lay back on the bed, staring up at the ceiling in a state of shock after seeing those terrible images.\n\nJohn deactivated the recording, then shifted back on the bed and looked down at her, his face full of worry. \"I hope you don't think I was trying to take advantage of the situation. I just wanted to-\"\n\n\"-help a wounded little bird,\" Tashana finished for him, giving him a forlorn smile. \"And I was hurt the worst of them all, wasn't I?\"\n\nHe nodded, meeting her troubled gaze. \"The amount you've suffered through; all that emotional torture as well as the physical... I don't know how anyone could have survived it.\" He clenched his jaw in anger and said, \"But you were good... and kind... you didn't deserve any of what happened to you. I wanted to make it all better, to take away your pain.\"\n\n\"Please tell me what happened to me,\" Tashana urged him. \"I've seen what I was like... nothing you say could be any worse.\"\n\nHeaving a heavy sigh, John slowly nodded and told her the unvarnished truth. Starting with Irillith's betrayal and Edraele sentencing her to banishment, but not before the Matriarch had implanted a chip in her beforehand in case she needed Tashana as a test subject. Then the brutal gang rapes by pirates and Tashana's eventual enslavement. The years of abuse she'd suffered, being sold as a defenceless plaything for the sick amusement of sadistic monsters. \n\n\"The Bolon...\" she murmured, her eyes wide in shock. \"I was raped by one of those things...\"\n\nHis eyes filled with sorrow as he said gently, \"Alyssa told me... she's seen everything, from all the memories in your mind. You were chained up and raped until you were... impregnated. Bolons are telepathic and it savoured your terror as it attacked you, trying to make it as horrifying as possible.\"\n\nJohn longed to touch her, moving his hand to comfort the shocked girl, but he hesitated at the last moment, worried that she'd flinch at his touch. She gave him a tearful smile and clasped his hand, then held it against her chest. \n\n\"What else?\" she asked in a choked whisper. \"My skills with a pistol? The Pyrokinesis? Where did they come from?\"\n\nFeeling a heavy lump in his throat, John swallowed as he gazed down at her beautiful face. \"All the abuse over the years... it took its toll. The slaver who owned you eventually let a pirate mutilate your face like that with a knife. Afterwards, your owner decided to throw you into a pitfight, thinking you'd be killed. But he underestimated you. Somehow you fought back... killed your opponents instead. You fought for years, slaying over a hundred pit fighters until your owner had you raped by a Drakkar as your 'reward' for your latest victory. That's when you finally snapped...\"\n\n\"And brought forth the flames,\" Tashana hissed, her eyes glowing and fire springing up around her fingertips. The fiery zephyr danced over the back of John's hand but left him unharmed. \"The smell of their burning flesh as I punished them... I took my time with the Captain, repaid him for all those years of suffering...\"\n\nJohn looked at her in alarm and something in his expression brought her out of her vengeful trance. \"Are you okay?\" he asked with concern.\n\n\"The memories are getting more vivid,\" she said, pain in her eyes. \"I felt that same sense of burning hate when I looked at the Bolon.\"\n\nHe brushed his fingers through her long white hair, gently massaging her temple. \"I put that shield in place to protect your mind from all those terrible memories. I wanted to let you heal mentally as well as physically, but you've grown so much stronger since then that you've started breaking through the shield on your own. I think your mind is fighting to be whole again, no matter how painful it might be.\" \n\nTashana looked at his anxious face and could see the worry in his eyes. \"You won't lose me,\" she said soothingly, knowing the cause of his anguish. \"I've got your love to keep me strong now, as well as all the support from the girls. I won't be like that tormented soul in the video, I know it.\"\n\nJohn leaned down and gave her a tender kiss. When he pulled back he murmured, \"I love you.\"\n\nShe gave him a loving smile in return, but it froze on her face as she felt something profound shift in her mind. It was like a titanic presence lifted away, relieving a pressure that she hadn't consciously been aware of before. For a moment she revelled in that sense of wholeness, followed by a sudden surge as she embraced her full potential. However, the shroud had also lifted from her deeply suppressed memories, letting her witness everything from that terrible lost decade. \n\nTashana's mouth opened in horror, eyes flashing back and forth as she recalled the sick tortures and the rapes... All those agonisingly long years of abuse that had been inflicted on her. Through it all, one thing wounded her worst of all, and she let out a broken sob, tears rolling down her cheeks.\n\n\"How could they do that to me?!\" she whimpered, reliving the moment of her sister's and mother's betrayals. \"I loved them both, with all my heart...\"\n\nJohn lay down beside her, pulling her in for a hug. Tashana went to him willingly, throwing her arms around him and shuddering as she clung to him for comfort.\n\n\"The Universe is a fucked-up place,\" John said, his expression bleak. \"A lot of terrible things happen and often to the people that least deserve them.\" \n\nShe pulled back to look up at him through her tear-filled eyes. \"Edraele, Irillith... you tried to tell me before what they'd done, but I didn't believe you, not really...\"\n\n\"They're not the same monsters that turned on you, not any more,\" he said gently, brushing a long snowy lock from her face. \n\nTashana nodded, wiping away her tears. \"No, because you fixed them! You made them how they should have been, if they hadn't become so twisted and evil. You were right; the Edraele and Irillith I used to know are gone, but the new ones... they really do love me, I feel it in my bones!\"\n\nJohn nodded, his voice quiet. \"There's no hidden agendas or vicious scheming there now, just a sister's and mother's heartfelt love.\"\n\nShe reached up to brush her fingers against his cheek. \"You really earned your name,\" she murmured, a look of wonder and tenderness in her eyes. \"Baen'thelas, the righter of wrongs...\"\n\nHe returned her gaze, studying her face and wishing he knew what she was thinking. \"Do you think you'll be able to cope with all those awful memories? I can't help feeling like I've let you down... I'm so sorry you had to experience them all over again.\"\n\nTashana looked up at him, gazing into his eyes as she said distantly, \"Yes... it probably was your fault...\"\n\nJohn looked away, unable to meet her probing gaze. He slowly nodded, feeling a surge of guilt. \"Like I said, I'm really sorry. If I could do things diff-\"\n\nShe grabbed him and pulled him down into a fierce kiss, taking him completely by surprise. There was no anger as her lips met his, only warmth and love. When they finally parted, she smiled at him and exclaimed, \"It was your fault because you've made me as strong as the rest of your girls! I was powerful enough to challenge a Progenitor's psychic strength! That's the only reason your shield started to fail...\"\n\nHis eyes widened in understanding, but before he could reply, he caught the glow of amber light flickering in his peripheral vision. Turning to look over his shoulder he stared in amazement at the burning tapestry she'd woven with her mastery of Pyrokinesis. He recognised himself as the larger, fiery figure standing protectively over the seven female flame sprites gathered around him. An eighth flashed into being and danced over to join her elemental sisters, the group of girls all moving to embrace her in delight. \n\nJohn had previously experimented with Pyrokinesis to sheathe his sword in fire, but what he saw in that cleverly manipulated conflagration astounded him. He couldn't even begin to imagine the level of control Tashana possessed to be able to manipulate those nine fiery figures to such a degree. He recognised each of the girls, their features perfectly sculpted by the subtle variations of heat in the blaze forming each beautiful face. Tashana's flame sprite embraced Irillith's last, the two then gliding over to wrap John's burning avatar in their loving arms.\n\nClosing his eyes, he searched through the mental compartments in his mind, intending to see the changes in the Maliri girl in more detail. However, the incandescent glow emanating from her slender form was blinding, leaving him flinching away from the glare. When he'd recovered enough to dampen that radiance down so that he could see her, he realised that she was now matching Jade in her brilliant intensity. Tashana lightly brushed his lips with hers and he opened his eyes again to look at her. \n\nShe spoke in a soft voice throbbing with gratitude, \"Thank you for what you've done for me. Everything I've ever wanted; a family, friends, people I love... you've given me all of it!\" \n\n\"It was time fate started giving you some of what you actually deserved,\" John said, holding her close. \"Only good things for you from now on, honey.\"\n\nTashana smiled and hugged him back, giving him a kiss. When they separated, her smile faded slightly. \"I just need a bit of time to come to terms with my past... but I feel good, stronger...\"\n\n\"I can see that,\" he said, giving her an understanding smile. He pulled her in for another hug and whispered in her ear, \"Take as much time as you need. The only thing that matters is that you're okay.\"\n\nTashana returned his smile then rose from the bed. She waited for John to stand too, then said quietly, \"I'll go to my room for a few hours, I want to try and sort things out in my head.\" She hesitated for a moment, then continued, \"I'd rather not see Irillith for a little while, but I don't want to upset her. Would you mind covering for me if she asks?\"\n\n\"Of course, honey,\" John said putting his arm around her. He looked into her eyes and cautiously added, \"Do you remember that I wiped your sister's memory of her involvement? Neither Irillith or Edraele know what their old personalities did to you.\"\n\n\"I do, and I still think you did the right thing. I don't want them feeling guilt over it either; the three of us just need to put all this behind us. You've built a wonderful new family for me and it's one I definitely don't want to lose,\" she said, her tone earnest. She reached for his hand and placed it on her slender tummy. \"You're a big part of that family now and I want all of us to share a glorious future with you.\"\n\nJohn caressed her gently, looking into her violet eyes and wanting that future with a passion that surprised him. \n\n\"Only a few more months,\" she murmured, leaning into his hand, her gaze filled with promise. \n\nWith a look of regret, John slowly withdrew his hand. \"Go and get some rest, beautiful. If you keep talking like that, resting is the last thing you'll be doing!\"\n\nShe kissed him tenderly, a sultry gleam in her eyes. \"Later...\" she purred, before padding away down the corridor.\n\n*You handled that really well,* Alyssa said, sounding impressed. *She's been through so much, but you managed to help her deal with it all.*\n\nJohn leaned against the doorframe and watched the alluring Maliri girl as she walked away. *Is she okay emotionally? That must have been rough getting bombarded with everything in one burst...*\n\n*Actually, it was just the betrayal by her family which hurt her the most. That came as such a shock that the rest just washed over her,* the blonde replied.\n\n*Do you think she'll have trouble dealing with everything once she's had a chance to think about it?* he asked, watching Tashana as she paused outside her quarters and looked back at him. She waved him goodbye then disappeared into her room.\n\nAlyssa paused for a long moment, giving his question some serious consideration. *I didn't realise how much of her mind you were suppressing before. I felt a massive surge inside her when you lifted the mind shield.*",
        "*So much of Tashana's mind was focused on all the trauma she'd experienced, there was no way for me to easily separate it all. I guess I forgot about that while I've been powering her up over the last few weeks. Now her mind's complete again, it's like her natural talent is merging with my enhancements...* he stopped mid-sentence, a frown on his face. *You didn't answer my question earlier. Are you worried she might have trouble coping?*\n\n*Oh, sorry! No, I just meant that she's so much stronger mentally now,* Alyssa clarified. *I think she'll be okay, but I'll keep a very careful eye on her emotions just in case she gets distressed.*\n\n*Thanks, honey,* John replied, walking into his wardrobe and pulling on some boots. *How's everything going with the evac?*\n\n*Just about done, actually,* Alyssa replied, her tiredness starting to come through in her voice again. *We've loaded nearly eleven thousand Trankarans on board and-*\n\n*How many?!* John blurted out in shock.\n\n*Yeah, you heard me right; eleven thousand. Rachel wanted to bring all the infested civilians along with the wounded, just in case there were any complications after their treatment. The Primary Hangar looks like it was buried in a rockslide!*\n\nStriding out of his room and into the corridor on Deck Two, John frowned with worry. *Can the Trankaran fleet handle that many refugees? I'd like to rendezvous with Edraele as quickly as we can, so I don't want to get bogged down in some lengthy relocation mission.*\n\n*Rachel's confident her patients will make a full recovery and Chancellor Niskera thinks Thandrun's fleet has capacity. Oh, she's asked to see you by the way. Do you want to meet her in your Ready Room?*\n\n*Who? Rachel or Niskera?* John asked in confusion. He chuckled as he stepped into the blue grav-tube field and added, *Actually, it doesn't matter which. 'Yes' to either of them!*\n\n*Niskera wanted a chat,* Alyssa clarified for him. *I'll bring her up.*\n\n*Thanks, beautiful. You should get some rest afterwards, I know how tired you are,* he said, his voice full of sympathy.\n\nThere was a brief lull in the conversation and John stepped out onto the Bridge, waving distractedly at Faye as he awaited an answer from Alyssa. \n\n*Actually I feel much better now!* the blonde suddenly replied, sounding much more cheerful. *I tapped a bit of energy from Tashana, seeing as how she's just had a second wind. I'd like to sit in on your conversation with Niskera, as long as you don't mind?*\n\n*You're always welcome,* he replied with an affectionate telepathic smile. *See you soon.*\n\nRather than waiting in his Ready Room, John walked towards Faye, who beamed at him happily.\n\n\"Tashana looked so much happier after your talk with her!\" the purple sylph-like girl said, her wings fluttering as she perched on his console. \"I know I always feel amazing after one of our chats!\"\n\n\"Speaking of which, anything you want to discuss with me at the moment?\" John asked her with a smile. \n\nFaye opened her mouth to reply, but hesitated before she spoke. \"There is, but it can wait. Alyssa and the Chancellor are on their way.\"\n\n\"Remind me later and we'll talk it over,\" John promised the cheerful purple-hued girl, as he finished climbing the steps up to the Commander's Chair. He reached out to run his fingers down one of her slender holographic arms, being careful not to break the image. \"You excelled yourself today, honey. I just wish you had a body so I could give you a hug to show my appreciation.\"\n\n\"Me too,\" Faye said breathlessly, while gazing into his eyes with a dreamy look on her elfin face. She blushed as she snapped herself out of her daze. \"I'm just really glad I was able to help!\"\n\nHe heard conversation in the grav-tube behind him and when he turned around, Niskera and Alyssa stepped onto the Bridge. As soon as Niskera saw him, she immediately went quiet, that same look of awe on her face that he'd seen back in the tunnels under Mulbharum. Alyssa pointed out the door to the Ready Room, then jogged down the ramp towards the Briefing Room to remove her armour.\n\nJohn smiled at the Trankaran Chancellor and said, \"I'll join you in a moment, Niskera. I just wanted to have a quick word with Alyssa, then I'll be right there.\"\n\n\"Let me help you get comfortable!\" Faye offered, leaping off the console and fluttering down to join the tall grey-skinned woman.\n\nAlyssa reappeared on the Bridge a few moments after Niskera had disappeared into the Ready Room. She ruffled her hair, then swept it over her shoulders, managing to still look gorgeous despite being in combat for the last three hours. She glided up the steps to join him on the Command Podium, so that she could set a course for Fleet Warden Thandrun's fleet in the Delta Corvus system.\n\n\"You had the right idea getting a shower,\" she said with a self-conscious smile as she reached the top of the steps. \"I'd love a long hot soak in the-\"\n\nJohn swept her into his arms and gave her a passionate kiss. She knew what he was planning, but the intensity still caught her by surprise. Alyssa returned it with equal longing, tangling her fingers in his hair as she moaned into his mouth. \n\nWhen they eventually parted, she let out a happy sigh. \"I'll wreck the Invictus more often if I get kisses like that as a reward!\"\n\nHe pulled her into a close hug. \"I'm sorry I was sharp with you earlier. I hate exposing you to danger like that and when I saw all the damage to the ship, I panicked...\"\n\n\"We were okay,\" she said gently. \"Calara was incredible... she guided us through one hell of a shitstorm.\"\n\n\"How did it get that bad?\" he asked, lightly brushing her cheek with the backs of his fingers. \"I thought she had everything all planned out.\"\n\n\"Sakura...\" Alyssa said, her expression a fine balance between admiration and irritation. \"She went off-mission and we had to do something. Calara said we would have lost her if we hadn't intervened.\"\n\n\"It sounds like you didn't have any choice.\" John exhaled deeply then shook his head. \"Let's talk about this later during the debrief.\" \n\n\"Let me plot a course for the Trankaran fleet, then I'll come and join you,\" Alyssa said, darting a glance at the Ready Room.\n\nJohn smiled at her and released her from his arms. \"See you in a minute.\"\n\nHe walked down the steps then over to the Ready Room and found Chancellor Niskera sitting on one of the sofas, waiting for him patiently. She rose to her feet in a gesture of respect as soon as he walked through the door.\n\n\"Vice Admiral Blake, thank you so much for agreeing to speak with me,\" she said deferentially and for a moment John thought she was about to genuflect to him.\n\nHe nodded to Faye, who smiled at them then disappeared in a purple flash. Walking over to join the Trankaran Chancellor, he reached out to take one of her hands in his, Niskera's amber eyes going wide at the contact.\n\n\"I'm just a man, Niskera, I'm not some terrifying god you need to be in awe of. Oh, and please just call me John. There's no need to stand on ceremony,\" he said with a disarming smile.\n\n\"But all the things you can do! You are a 'Progenitor' aren't you? Like the Great Ma... I mean Mael'nerak was?\" she asked haltingly.\n\nJohn gestured to the sofa behind her. \"Please take a seat and we'll talk... like friends, okay?\"\n\nShe nodded and slowly sat down on the sofa, then watched as he sat on the chair to her right. They sat there looking at one another for a long moment, until John broke into a smile and shook his head.\n\n\"I know you wanted to speak to me, but I'm curious about something too. You seem to know quite a bit about the battle between Mael'nerak and his enemy. Would you tell me what you know?\" he requested politely.\n\nShe nodded, a curious expression on her face. \"Where would you like me to start?\"\n\n\"Perhaps with what you know about your Great Maker first?\" he asked, sitting forward and listening intently.\n\nClearing her throat, she began to speak and from her tone it sounded like she was recounting something she'd read or heard. \"The Great Maker shaped the people in his grand forge, bringing them forth to serve as his most treasured servants. The people were strong and hardy, and he was pleased to see us hone our skills with rock and metal. For many years we served him, helping to mine the metals his Favoured Ones needed to forge the great wheel.\"\n\nHer voice dropped a few octaves as she continued, \"All was good with the people, until Ranagon the Despoiler appeared amongst the stars one terrible day. Jealous of the wondrous accomplishments of the Great Maker, he brought forth the terrible War of the Heavens, determined to ruin everything the Maker had achieved.\"\n\nJohn's ears pricked up at the mention of the name 'Ranagon', but he let her continue her story uninterrupted.\n\n\"The Despoiler razed entire worlds to ashes in his thirst for blood and destruction. None were safe from his wrath, not the rock-brethren, nor even the Favoured Ones; all fell before him. Hounded from our homeworld and forced to flee for our lives, the people despaired of ever finding peace again.\" \n\n\"Then just as suddenly as the War of the Heavens began, it ended, leaving us with nothing, our homes shattered and ruined. But the Great Maker had built the people to endure. The Rock-Brethren settled on new planets, mining the shattered remnants of our broken worlds, to help us rebuild what we had lost. The Despoiler was gone, just as the Great Maker had vanished, taking his Favoured Ones with him to the heavens, never to return.\"\n\nNiskera gave John a self-conscious smile and finished by saying, \"That's all I can tell you I'm afraid. So much was lost during the war that our history was kept alive by living memory. My people were too busy fleeing for their lives to keep accurate records.\" Her eyes gleamed as she continued, \"It might sound like some silly myth to you, but I promise you that it is the truth. The Trankarans do not deceive each other over something as important as this.\"\n\n\"I believe every word,\" John said sincerely. \n\nThe door to the Ready Room slid open and Alyssa strode over to join them, sitting beside John. \"Your history actually ties in with what we've already learned about Mael'nerak,\" she said to Niskera, before sharing a glance with John. \"But this 'Ranagon the Despoiler' is new. We didn't know the name of the Progenitor that fought Mael'nerak.\"\n\nNiskera looked at her in bewilderment. \"How did you-?\"\n\n\"I hear his thoughts,\" Alyssa explained with a warm smile. \"You've seen some of the things John and the girls can do; well I'm telepathic... amongst other things.\"\n\n\"Thank you for telling us about your history,\" John said, drawing Niskera's startled eyes to him. \n\n\"It's the least I could do!\" she exclaimed. \"The Trankaran Republic owes you a huge debt! You must have saved over a hundred-thousand Mulbharum citizens from becoming hosts to the Kirrix!\"\n\nJohn paused for a moment, studying the Trankaran Chancellor. \"I must admit that I had an ulterior motive when we liberated Khalgron. Don't get me wrong, I'm very glad that we were able to save your people from the Kirrix, but our main objective in coming here was to rescue you, Niskera.\"\n\n\"Me?\" she asked, looking at him in surprise. \"Why would you risk so much, just to save one person?\"\n\n\"Because I'm trying to forge an alliance between the various empires that made up the Galactic League. The Maliri and the Ashanath are both firm allies with me now, and I'm working on the Terran Federation. I believe you have the skills and desire to help me bring the Trankaran Republic into that alliance,\" he explained, carefully studying her granite-grey face. \"I was hoping that by rescuing you, it would help you consider an alliance more favourably.\"\n\n\"We agree!\" Niskera blurted out, a look of joyful disbelief on her face. \"Whatever your conditions, the Trankaran Republic wishes to ally with you, John Blake! I'll personally beat those thick-headed Senators into agreeing if I have to!\"\n\nJohn laughed and shared a smile with Alyssa. Then, his expression turned more serious. \"You might want to hear everything else I have to tell you first. All our people are in great danger and while I could really use your help, I don't want you feeling like you weren't given the full picture before you agreed to an alliance.\"\n\nTo his surprise, Niskera rose to her feet and walked over to the long window, beckoning John and Alyssa to join her. When they did, she pointed at the massive debris field that trailed away from Khalgron. The broken remnants of ochre-coloured Insectoid ships stretched far away into space, forming a long trail of brutally smashed drone carriers.\n\n\"I've been speaking to the women on your crew. I know that using but a single ship and a crew of three, you were able to obliterate the Kirrix armada that devastated a whole fleet of Trankaran vessels.\" Her face fell and her voice thickened as she continued, \"Warden Dulnir led our fleet in their defence of Khalgron. He was a good and loyal friend and I listened to every moment of their valiant last stand against the Kirrix. Despite his bravery, they were hopelessly outnumbered as they fought the swarm. With his last words to me, he begged me to save our people from the Kirrix threat and I fully intend to see his final wishes fulfilled.\"\n\nJohn nodded his understanding then offered her his hand. When Niskera took it, he led her back to the sofas to retake their seats. \"I won't hold you to anything yet, but you do need to know what we're up against. Let me tell you everything we know about the new Progenitor threat that we're facing. When I'm done, I'll give you time to think this through before you commit to anything.\"\n\nShe smiled at him indulgently. \"My mind is made up, John. I'm quite certain there is nothing you can say that would convince me otherwise. However, I will listen to what you have to say.\"\n\nJohn began by telling her what they knew of the other Progenitor. How he'd been stirring up trouble throughout the galaxy, instigating the war between the Terran federation and the Kintark Empire, and how Terra had nearly been destroyed by Nexus and his part in it. John explained how the Drakkar had tried to eliminate the Ashanath until their eventual destruction at the Battle of Ashana, and how the Ashanath had used the remnants of Mael'nerak's black ship to defend their homeworld. \n\nHearing mention of Mael'nerak, Niskera wanted to know everything he could tell her about the Great Maker. John carefully explained what they had discovered about that ancient Progenitor and his part in shaping the various empires that populated this part of the galaxy, including the Trankarans. She was deeply saddened to hear about his eventual fate, but John could see the look of admiration in her eyes as he described Mael'nerak's desperate gambit against his Progenitor adversary.\n\n\"He didn't abandon my people,\" she said quietly, when John explained about the blast that had devastated the Zeta-Pegasus system and created the Niryean Rift. \"He sacrificed himself and saved all of us from The Despoiler.\"\n\n\"It looks that way,\" Alyssa agreed. \"Mael'nerak was determined to save Valada, a Maliri girl he'd fallen in love with.\"\n\n\"I think the Maliri are the 'Favoured Ones', from your people's history,\" John said quietly to the Trankaran Chancellor. \"It all fits, with Mael'nerak using the metals the ancient Trankarans mined to build Genthalas station in Maliri Space.\"\n\nNiskera was shocked by this revelation, then listened in fascination as John explained about the Maliri's history and their special relationship with Mael'nerak.\n\n\"They were always so aloof and reclusive, I never would have guessed that they were the same people that worked closely with us in the past,\" Niskera marvelled, shaking her head in amazement. She looked at John with newfound wonder in her eyes as she continued, \"And now you've assumed Mael'nerak's mantle of leadership over the Maliri.\"\n\n\"No, it's not like that,\" John replied, shaking his head. At the same time, Alyssa nodded and replied \"Yes, basically.\"\n\nNiskera looked at them both in confusion. \"How can both answers be true?\"\n\nJohn shot Alyssa a frown. \"You know I'm just trying to protect them. I'm not interested in being their King.\"\n\nShe rolled her eyes and smiled at him affectionately. \"Have you forgotten who runs the six biggest Maliri Houses? Do you really think Edraele and the Young Matriarchs would disagree with anything you asked them to do? What about your plans for our little cross-border rendezvous? I know I'm really looking forward to seeing you fu-\"\n\nHe cleared his throat loudly to cut her off, earning himself a wicked grin in return. Turning back to look at Niskera, he said, \"Let's just say that the Maliri are very close allies. I've been working with them for a few months to try and address some of the problems they have in their society. In exchange, they're absolutely committed to helping me fight this other Progenitor.\"\n\n\"As am I,\" Niskera said, her voice solemn as she gazed into his eyes. \"The last time two Progenitors fought to the death, my people were nearly exterminated in the process. Standing aside will not save us, not from the Kirrix, nor from this other Progenitor I suspect.\"\n\nJohn nodded grimly. \"I'm inclined to agree. He created the Glowing Queen and caused the rebellion in the Trankaran Republic. He was either hoping to take control of your people using her, or just seeking to cripple you badly enough to make you vulnerable to a Kirrix invasion.\"\n\nNiskera listened in fascination, then exclaimed, \"So that's why you were so adamant that the Glowing Queen needed to be assassinated! You were right of course; after her death, the rebellion ended practically overnight.\" She tilted her head to one side, studying him curiously. \"You said that this other Progenitor created the Glowing Queen? I'm sure that explains why she had such tremendous sway over my people, but how did he accomplish such a thing? From everything I've heard about her, she was astonishingly beautiful to behold...\"\n\nJohn faltered and cleared his throat awkwardly. \"Well the other Progenitor definitely made some changes to her, but that particular threat's dealt with now, so the details aren't all that important.\"\n\n\"Yes they are!\" Alyssa protested. She grinned at Niskera and continued in a rush, \"If we told you we knew of a way to make the entire Senate be like putty in your hands, would you be interested?\"\n\n\"Alyssa!\" John said sharply. \n\nShe whirled around to look at him, her eyes narrowing. \"She's got a right to know this! It would solve all her problems overnight!\" Alyssa broke into a smile and her melodic laughter echoed around the room as she added, \"Literally in this case!\"\n\nNiskera reached across to gently touch John's hand. \"Please tell me. If there's a way to unite the Senators, it will make galvanising the Senate into making preparations for war dramatically easier. The fate of the Trankaran Republic is hanging by a thread... I would be willing to make any sacrifice, no matter what the personal cost, to protect my people from the Kirrix and this Progenitor.\"\n\nJohn frowned at the grinning blonde sitting next to him. \"We need to have a long talk after this, young lady.\"\n\n\"Of course, John,\" she replied contritely, but he could tell she was anything but.\n\nHe sat back against the sofa and rubbed a hand over his face. With a sigh, he looked at Niskera who was watching him curiously. \"Alright. I'll tell you, but only because you insisted.\" He glanced at one of the hidden cameras in the room and said in a louder voice, \"Faye, could you show us a before and after shot of Alyssa please?\"\n\nAlmost instantaneously the two pictures appeared, the first showing Alyssa as she'd originally looked when she stowed away on the Fool's gold. She was deathly pale, emaciated, and barely over five-feet-tall. The second showed her after a couple of weeks in his care, her bronzed, supple body practically glowing with health as she stood tall and statuesque in the holograph.",
        "\"Who is the shorter woman?\" Niskera asked, her expression filled with pity. \"I'm not an expert in Terran physiology, but I know enough to see that she is in desperate need of aid.\"\n\n\"They're both me,\" Alyssa said, glancing at John with a warm smile. \"You were right, Niskera. I was in a shocking state, but John looked after me and helped me grow strong and healthy.\" \n\nNiskera frowned in confusion as she looked at John. \"Why would you be reluctant to share this information with me? That you nursed Alyssa back to health and helped her grow into the beautiful woman she is today is quite laudable. You should be proud that you sought to aid her in her time of need.\"\n\nJohn met her curious amber gaze and said bluntly, \"Because my ability to affect dramatic physical changes in a woman is sexual in nature. My semen acts as a psychic catalyst and... feeding it to Alyssa let me heal her, making her look like she does now.\"\n\n\"But I still don't-\" Suddenly Niskera's eyes got a lot wider. \"Oh!\"\n\nAlyssa had a playful smile on her face as she looked at the Trankaran Chancellor. \"That's how the other Progenitor made the Glowing Queen. We believe your people are genetically programmed to respond favourably to a female Trankaran under a Progenitor's influence. It's the same with the Maliri; they have dark hair, but after one of their women has been with John, her hair goes white. Just a glance at a white-haired Maliri woman leaves the rest very open to suggestion.\"\n\nNiskera wasn't able to blush, but she averted her eyes from John and nodded. \"I think I understand now...\"\n\n\"That's why I didn't bring it up,\" John said to her kindly. \"I didn't want to cause you any offence or embarrassment.\"\n\nThe Trankaran woman didn't reply for a long moment, but when she finally lifted her head and spoke, there was a steely determination in her eyes. \"If you consider me worthy, I would like to serve you as your Glowing Queen.\"\n\n\"Now hang on a minute,\" John said, with a frown. \"That wasn't why I told you about it!\"\n\nNiskera's amber eyes snapped to the gleeful blonde sitting beside him. \"Alyssa is absolutely right! We would be very foolish not to seize the opportunity this presents. The Glowing Queen's ability to sway my people by her mere presence is almost legendary. We could rally the Senate and bring the rebel fleets to bear against the Kirrix. Once that threat is dealt with, the Trankarans would be able to stand united at your side, to face the Progenitor threat as a strong ally!\"\n\nJohn took a deep breath, then leaned forward to clasp Niskera's hand. \"I understand everything you're saying, and while you make a convincing argument, I can't ask you to make that kind of sacrifice. I have no idea what the long term affects to you might be, and you'll be changed forever, made quite different from any other Trankaran.\"\n\n\"I'm willing to make any personal sacrifice to save my people,\" Niskera told him adamantly. \"Even if you told me that to make this change would shorten my life to a mere handful of years, I would still eagerly accept. All I've ever desired to do was serve the Republic in the best way I could. If all I'm able to accomplish before my death is to save my people from the Kirrix, I would make that same choice every time.\"\n\n\"Why can't the Terran Federation get any public servants like her?\" Alyssa remarked, her voice full of admiration.\n\nJohn squeezed Niskera's hand and gazed into her eyes. \"I really admire your bravery and willingness to put the greater good before yourself, but will you at least take some time to properly think this through? You're talking about a dramatic change to your life, something like that shouldn't be rushed.\"\n\nNiskera glanced at Alyssa again. \"You said my problems would be solved overnight? How long would the transformation into the Glowing Queen take?\"\n\n\"He hasn't been with a Trankaran woman before, but if you're like the rest of us... probably fourteen hours,\" Alyssa explained in a clear and concise tone.\n\nThe Chancellor nodded then placed her other hand on top of John's. \"Then we shouldn't waste time with further discussion. Every minute wasted means hundreds more Trankarans being infested by Kirrix on the worlds they've taken. I will not change my mind. Please do not force me to beg you to help my people; you're a good man and I know you would find such a spectacle distressing.\"\n\nHe gave her a gentle smile. \"You're right. Please don't start begging.\"\n\n\"Then you agree?\" she asked him, her broad features lighting up with joy. \n\nJohn chuckled and nodded. \"You're more stubborn than Alyssa! I can see you're not going to change your mind.\" His eyes narrowed then and he asked cautiously, \"You aren't married or have a boyfriend do you?\"\n\n\"I do not have a mate at the moment, if that's what you're asking?\" Niskera replied, touched by his concern. \"I have been courted by several suitors, but have not yet chosen to make a life-bond with any male.\"\n\nHe smiled at her and said, \"That's a relief!\"\n\n\"Alright, now that's sorted out, let's go use one of the Officers' Quarters,\" Alyssa suggested, a ringing note of satisfaction in her voice. \"You'll be more comfortable there while you go through the Change.\"\n\n\"Thank you,\" Niskera said, giving the blonde a look brimming with gratitude as she stood. \"Not just for that, but for raising this possibility.\"\n\nAlyssa rose to her feet and returned the smile. \"Your people need you to lead them. Their situation is desperate and you can't afford to waste time arguing with the Senate when you need to act decisively.\" She turned and offered John a hand, \"You coming, handsome?\"\n\nJohn took her hand as he stood. \"Apparently so...\" he replied wryly, glancing at Niskera. \n\nThe Trankaran woman averted her eyes in embarrassment, but he caught the twitch of a smile at the corner of her mouth. They all left the Ready Room and Faye waved at them as they walked to the grav-tube. Alyssa had already explained their operation to Niskera and she calmly stepped into the red glow of the anti-gravity field, dropping down a level before following her companions onto Deck Two.\n\n\"This room is free,\" Alyssa suggested, pointing to the first door on the left. \"It'll do nicely.\"\n\nThe three of them entered the room with John closing the door behind them. There was a moment's uncomfortable silence as John and Niskera glanced at each other, knowing that they were about to be intimate with each other, but in what felt like a very awkward fashion.\n\n\"You must be dying for a shower,\" Alyssa said over her shoulder to Niskera as she stripped off her top and casually discarded it on the floor. \"I know I am!\"\n\n\"It has been a day since I last bathed,\" Niskera admitted, sounding embarrassed. \n\nThe blonde tugged off her trousers next then beckoned the taller Trankaran with a finger. \"You can keep me company then! The shower's a bit small, but there's still room enough for the two of us. Don't worry about John, he showered only an hour ago. I'm sure he won't mind watching...\"\n\nNiskera looked startled as she glanced back at John. \"I-I...\"\n\n\"Don't get me involved now,\" he said with a playful smile. \"Alyssa's nearly as stubborn as you are.\"\n\nAlyssa clasped Niskera's hand in her own and gently tugged her towards the bathroom. \"C'mon! You were happy to die for your people a minute ago, having a shower with me can't be worse than that!\"\n\nNiskera laughed then, a loud booming chuckle that made John smile to hear it.\n\n\"You make a good point, Alyssa,\" the big woman replied, as she began peeling off her clothes.\n\nJohn studied the Trankaran in fascination as more of her granite-like skin was revealed before his eyes. She wasn't ugly exactly, just massively built, her solid frame even wider than his own. Like Trankaran males, her grey head had no hair and was completely bald, while her bulky physique would have put a champion bodybuilder to shame. Niskera was about six-feet-tall, so he had a couple of inches on her, but she must have outweighed him by at least a hundred pounds, perhaps more considering her silicon-based body.\n\nAlyssa grinned at her when she was naked, pulling Niskera into the shower and turning on the water. John followed them into the bathroom and leaned against the wall to watch the two of them together.\n\n\"Your tits are fucking huge!\" Alyssa gawped, staring at the Trankaran's K-cup sized breasts in awe. \"I really want to touch them! Is it alright if I wash you?\"\n\nNiskera hesitated, shooting a nervous glance at John, before she nodded. \"Yes, you may do so.\"\n\nAlyssa got some soap from the dispenser then began to run her hands over Niskera's immense breasts. \"Your skin's actually soft and warm!\" the blonde exclaimed in surprise. \n\nThe Trankaran laughed again, a broad smile on her thick-lipped face. \"I might look like rock to your eyes, but I'm not actually made from it!\"\n\nHumming happily to herself, Alyssa continued washing the muscular woman, carefully lathering her up and then sluicing the suds clear. Niskera looked at the much smaller Terran girl with curiosity, until Alyssa winked at her and said, \"Go ahead, knock yourself out!\"\n\n\"You wish me to render myself unconscious?!\" Niskera exclaimed in alarm. \"If I did something to offend you, please accept my apology!\"\n\nJohn laughed and shook his head. \"It's just an expression. Alyssa meant you can touch her too, if you want.\"\n\n\"Ah I see,\" the Trankaran woman replied, watching Alyssa get more soap from the dispenser then copying her actions to gather some herself. She very gently brushed her fingers over Alyssa's bronzed body as if she was made out of glass.\n\nThe blonde giggled and guided one of Niskera's hands to her pert D-cup breasts. \"Thanks for being cautious, but you don't have to be quite so gentle.\"\n\n\"But you're so small and delicate,\" Niskera marvelled, slowly cupping and massaging Alyssa's pliant flesh. \"I wouldn't want to risk harming you.\"\n\n\"Mmm, that feels lovely,\" the blonde replied, closing her eyes and enjoying the caresses.\n\nJohn found himself thickening up as he watched the two women exploring each other. Niskera's caution was quite endearing and he found he liked her more as he got to know her. The explorations in the shower got more intimate and Niskera let out a startled gasp when Alyssa's probing fingers delved between her muscular thighs. That gasp turned into a deep moan as the blonde gently explored the Trankaran woman's body.\n\n\"You aren't too different from a Terran girl, or a Maliri for that matter,\" Alyssa purred, carefully massaging Niskera's clit. \"I'd love to see you cum for me... is that okay?\"\n\n\"Don't stop!\" Niskera gasped, writhing in response to the blonde's adept technique. She darted a wild-eyed glance at John, then let out a rumbling groan as she climaxed, her body trembling as she was wracked with pleasure.\n\nAlyssa slowly withdrew her fingers, then lapped at them with her dainty tongue while staring into Niskera's bewildered eyes. \"You taste good too!\"\n\nShe finished cleaning the dazed Trankaran, then guided her out of the shower and handed her a big towel. \"You have three choices,\" she said as Niskera gratefully accepted it from her. \"You can dry yourself, I can do it for you, or you can let John join in.\"\n\nNiskera hesitated then glanced at John and held out the fluffy towel to him. \"Would you like to dry me?\" she asked with some trepidation.\n\n\"I'd love to,\" he replied, stepping closer as he took the towel and began to pat her dry. \n\nShe saw him studying her skin curiously and gave him an inviting smile. \"You may touch me too if you'd like?\"\n\nHe nodded, and wrapped her lower body with the towel to keep her cosy, then brushed the back of his fingers against one of her heaving breasts. Alyssa was right, the texture of her skin didn't feel anything like the way he'd imagined just from looking at her. Niskera's skin was slightly coarser than a Terran girl's and not quite as pliant, but there was a comforting inner warmth to her and the touch was definitely not unpleasant. The sheer size of the Trankaran woman's bust was astonishing to behold and he couldn't resist using both hands to get a feel for those heavy orbs.\n\n*Just imagine oiling them up and fucking those massive melons!* Alyssa exclaimed, watching his face as he caressed Niskera. *A cleavage like that is practically begging to be wrapped around your cock!*\n\nHe shot her a smile then turned back to Niskera and said, \"Thank you. You have a very impressive body.\"\n\nShe returned his smile then studied him in return. \"You're much smaller than a Trankaran male,\" she noted, appraising his muscular physique.\n\n\"Don't worry, he's got it where it counts,\" Alyssa said with a lewd wink. \n\nNiskera looked at John with a startled expression. \"Oh! I'm so sorry, I hope I didn't cause any offense!\"\n\nHe laughed and shook his head. \"Trankaran males are huge! Don't worry, I'm not upset by you stating a simple fact.\"\n\nNow that they were all dry, Alyssa bounded out of the bathroom, beckoning them to follow. They did so and when they'd all returned to the bedroom, she said to their guest, \"John's wearing far too many clothes. Let's get him undressed, then you can see what you're working with.\"\n\nNiskera grinned back at her, encouraged by the blonde's enthusiasm. She was still careful when she helped undress John though, obviously worried about accidentally hurting him. Although he knew he was vastly stronger than she was, John could see that Niskera was enjoying herself, so didn't bother to make a point of it.\n\nWhen Alyssa tugged his trousers down, Niskera's eyes widened at the sight of his pulsing cock. She smiled at him as she said, \"Alyssa was quite correct. What you lack in height, you more than make up for elsewhere.\" She boldly reached out to hold his shaft in her hand, then let out a low moan as she felt his heat against her fingers. \"This is quite magnificent...\"\n\nJohn smiled back at her and said, \"To make the Change, I'll need to fill your stomach with cum. We're getting to the point of no return soon, so let me know if you have any doubts.\"\n\n\"Seeing you in the flesh has only further hardened my resolve,\" Niskera murmured, gently stroking his length and giving him a coy look. \"Once I'm your... servant, perhaps we could take things further?\"\n\nHe held her hand, stopping her from stroking him as he shook his head. \"I'd like you to think of me as a friend and a loyal ally, but never demean yourself by thinking you're my servant. I'll never think of you that way, I promise.\"\n\nNiskera gently embraced him and murmured, \"You're making this decision easier all the time. I feel honoured that you would consider me a friend, John.\"\n\nAlyssa kissed the Trankaran woman on the shoulder and whispered, \"Don't take everything he says to literally. He loves a compliant submissive woman, especially if it's an act for his benefit.\" She leaned closer and whispered something else, but she was sufficiently quiet for John to struggle to make out what she was saying. \n\nNiskera watched him as she listened to the blonde, a hint of a smile crossing her lips as she nodded in agreement with whatever Alyssa was telling her. Eventually she guided John to the edge of the bed and smoothly knelt on the floor before him, placing her hands demurely in her lap and lowering her head respectfully. She glanced up at him out of the corner of her eyes, that same smile toying at the corner of her mouth.\n\n\"I desperately need your help, John. Would you please fill me with your cum, so that I can save my people?\" she asked him, her tone sincere and full of urgency.\n\nJohn's cock thickened until it was hard as steel, as Niskera cleverly played on his desire to help her, and the allure of her playful submissiveness. \"You're giving away all my secrets,\" he said to Alyssa, who grinned at him over the tall woman's shoulder.\n\nNiskera leaned forward and placed a soft kiss on the end of his shaft, her tongue darting out to lap at him. \"Do I have your permission to take more?\" she asked, a burning hunger in her eyes.\n\nIf John was being honest with himself, he still didn't find female Trankarans particularly attractive, with their huge muscular physiques and rather coarse features. However, he greatly admired and respected Niskera's drive and selflessness, making her personality very appealing. Behind her playful facade, he realised that she had actually been completely truthful with him. She wanted this with every fibre of her being and he wanted to help her just as badly. That train of thought took a split-second and John nodded as he stared into those bright amber orbs.\n\nThe Trankaran woman opened her wide mouth and easily engulfed the broad head of his cock. She hummed in contentment as she took inch after inch, lathering the base of his shaft with her thick tongue. Her mouth felt snug, warm, and wet, and he couldn't help groaning in delight as her lips worked their way down his length until he was touching the entrance to her throat. \n\nNiskera was obviously quite comfortable working with substantial equipment. She took a deep breath and after only a brief pause to relax her throat, she continued her progress down his shaft. Soon she was nuzzled in his groin, withdrawing a few inches and then pushing back down in a smooth rhythmic motion, while swirling her tongue around his shaft. She maintained that same steady pace for at least a minute until she slowed and glanced up at John, a curious expression on her face.\n\nPulling right back until he cleared her big lips, she took another lungful of air, then looked up at him with a cautious smile. \"Did all of that feel good? You have far more control than a Trankaran male. By this point I would expect to have your seed in my stomach.\"\n\n\"It felt amazing,\" he replied, caressing her cheek and enjoying the feel of her warm skin under his fingertips. \"I must admit I was doing my best to hold back. As soon as I start feeding you my pre-cum, you'll probably go into a kind of trance. It'll wear off before you wake up and only happens the first couple of times.\"\n\n\"How fascinating,\" Niskera replied, reaching up with her second hand to cup his taut balls. There was a gleam in her eyes as she continued, \"These are also far more impressive than any set I have seen before. Are you as potent as they seem to suggest?\"\n\nAlyssa had been kneeling beside the Trankaran, watching them both with delight, and she slipped around behind Niskera to stroke her chiselled abdomen. \"Do you like swallowing cum?\" she asked eagerly.\n\nThe Chancellor nodded, her hand gently massaging John's quad. \"It's an incredibly intimate act. I've always found it to be very satisfying.\"\n\n\"I think you'll fit in just fine,\" Alyssa purred, sliding her hand lower. \"Just focus on making John cum and I'll take care of you. You deserve another good climax for being such a lovely girl.\"\n\nJohn could see the excitement in Niskera's eyes as she nodded. He could see she was about to take the plunge again and they shared a final look, both of them knowing that from this point, everything would change between them. Niskera slowly opened her mouth and tilted forward, not even a flicker of hesitation in her eyes as she sank down his shaft again, until she had taken everything he could give her. \n\n\"Fuck that feels good!\" he groaned, when she reached his root and sucked hard, as if trying to draw out all his cum by herself. \n\nAs Niskera picked up the pace, so did Alyssa, her slender fingers rubbing the other woman's throbbing clit. The room filled with the sound of grunts and moans as they worked towards a crescendo. Niskera came first, her muffled groan stifled by the broad cock impaling her throat. She squeezed down on John's shaft, her mouth and clutching throat trembling as she shook with her climax. The sensation was too much for him and he thrust forward so her nose brushed his toned belly, holding her head in place as he began to pump his cum straight down into her stomach.",
        "Alyssa's left hand was busy between her own legs and she mewled with delight as she saw John cum making Niskera his own. Squeezing her eyes tightly shut, the blonde relished his pleasure over their connection, drowning herself in those waves of ecstasy. Niskera was insensate now, dazed by the Progenitor cum filling her expanding tummy. Alyssa withdrew her slippery fingers from the Trankaran's pussy and carefully cupped her grey throat, feeling the steady throb as John pumped his load into her. That set Alyssa off again and she slumped against Niskera's back with a moan, a giddy smile on her face.\n\nAs all great climaxes must, John's orgasm finally ended and he collapsed back on the bed, his quad feeling pleasantly numb. Niskera eased back, his spent cock sliding from her throat and mouth as she sat up. In the same way that the other girls had done, her hands went to her cum-packed abdomen, gently caressing the curves with a dreamy smile on her face.\n\nAlyssa hugged her from behind, a sparkling grin lighting up her beautiful face. \"I can feel her in my mind,\" she said happily. \"She's just an empathic presence for the moment, like Tashana!\"\n\nJohn leaned up on both elbows and made eye contact with the overjoyed blonde. \"You look very pleased with yourself,\" he said wryly. \"But I can't decide if I should hug you or spank you.\"\n\n\"Either works for me,\" Alyssa said with an impish grin. She leaned closer to Niskera's ear and whispered, \"Let's get you comfortable on the bed. Could you stand please?\"\n\nThe dazed Trankaran did as she asked, then slowly climbed onto the bed with Alyssa's assistance, her swollen tummy leading the way. John moved aside to give her room, then between him and Alyssa, they got Niskera settled in the middle of the bed. The big woman lay on her side, curled up around her rounded belly, her eyes closing as she fell asleep. Alyssa snuggled in behind her, then placed a tender kiss on Niskera's granite-grey shoulder.\n\nJohn rolled onto his side and gazed into the teenager's eyes, while joining her in caressing the slumbering Trankaran. \"You knew my feelings about Niskera becoming another Glowing Queen. Why did you quite deliberately ignore them?\" he asked, knowing that Alyssa had this transformation in mind right from the start.\n\nAlyssa's smug smile faded and she had the good grace to look genuinely contrite this time. \"I really am sorry,\" she said, maintaining eye contact with him, even though she wanted to look away. She hesitated for a second, then corrected herself. \"I do feel awful about pushing you into this, but I don't regret the end result. Niskera said it herself; she'll be able to quickly unite her people and save the Trankarans from the Kirrix. Once that threat is dealt with, they'll be able to stand with us against the Progenitor.\"\n\nJohn nodded, his voice quiet as he replied, \"All good, logical arguments, and ones I can't disagree with. From both Niskera's and my own point of view, we got exactly what we needed from this. But that isn't the point... Me letting you take charge when we're having fun with the girls is one thing, but I don't appreciate being manipulated and ignored like that. I was cautious for good reason: Niskera's life is going to be profoundly different now... she'll never be a normal Trankaran woman again.\"\n\nHe glanced down at the sleeping rock-woman between them. \"The Trankarans will probably revere her as some kind of divine prophetess when she changes. How's she ever going to have a normal relationship with a Trankaran male after that? Niskera settling down with me instead isn't much of an alternative for her; I think Niskera is a remarkable woman, but I'd be lying if I said I found her physically attractive. Besides, I've already got my hands full with you girls and the Maliri. Then there's the big question of what happens if I keep feeding her cum...\"\n\nAlyssa's blue eyes widened and she looked down at Niskera with regret. \"I'm so sorry... I never picked up your thoughts on any of that...\"\n\n\"They were just idle, fleeting concerns, probably while you were asleep. I didn't dwell on them, because I had no intention of getting into this situation with her,\" he said quietly. Studying Niskera's broad physique, he continued, \"All of you Terran girls slowly changed to match the standard template. You got taller and filled out until you had the same athletic body-shape as the Maliri. Does that mean the reverse will happen with Niskera? Will she get smaller and slimmer, growing long hair so that she looks like the rest of you? I'll certainly find her much more attractive if that happens, but I doubt the Trankarans will... Have we just denied her a future with a Trankaran partner?\"\n\nHe couldn't help noticing the blissful smile on the sleeping woman's face. \"I've no doubt that Niskera got exactly what she wanted. She had absolutely no regrets there... I could tell. But she's extremely selfless and dangling a carrot that tempting in front of her eyes wasn't very fair, not when she's so desperate to help the Trankarans.\"\n\nAlyssa bit her lip, her face filled with anguish. \"I just thought you were worrying for no reason! All the agonising about the girls making a free choice is very endearing, but it gets a bit... frustrating sometimes, especially when I know how wonderful it is getting close to you. Turning Niskera into another Glowing Queen just seemed like the perfect solution for everyone...\"\n\n\"Come here,\" John said, opening his arms in invitation.\n\nCarefully clambering over Niskera, Alyssa fell into his arms and clung to him fiercely. \"I'm so sorry,\" she mumbled into his chest, her voice thick with emotion.\n\nJohn wrapped her up in his arms and kissed the top of her head. \"You're a very intelligent, extremely capable young woman,\" he said affectionately. \"But I'm not being cautious about recruiting girls just to irritate you, I promise.\"\n\nShe hiccupped as she laughed, hugging him tighter. \"I'm sorry I got carried away, and I'm really sorry for the way I handled this.\"\n\nStroking her back soothingly, he said, \"I love how independent and strong-willed you've become. You're not an obedient slave, you're my equal now, which is what I always wanted. But if you do feel really strongly about something important, just discuss it with me first, okay? You know how much I respect your opinion and I promise I'll listen to you with an open mind.\"\n\n\"Most of the time I forget about the age gap between us,\" Alyssa said softly, lifting her head to look into his eyes. \"But you're a lot wiser about this kind of stuff and put much more thought into it than I do. I promise I'll talk to you if I disagree about something, rather than just doing what I think is best.\"\n\n\"Good girl,\" he said, gently lifting her chin so he could give her a tender kiss. \n\nShe had a wistful smile on her face as she whispered, \"I still like the sound of being your obedient slave though...\"\n\n\"In the bedroom, I'd expect nothing less,\" he said with a wicked grin.\n\nAlyssa laughed with relief, then gave him a smouldering look. \"I know you only just came a few minutes ago, but do you think you can get hard again? I'd like to have a nap, but I want to feel you inside me as I drift off...\"\n\nJohn took a firm grip on her pliant young body and effortlessly positioned her above him. \"That won't be a problem,\" he replied, lining himself up with her glistening pussy. \n\nShe wriggled down on his shaft, letting out a low groan as he sank deeper inside her. When he'd bottomed out, she snuggled against his chest, sighing happily as he held her. \"If you wake up and need to empty your balls, just go ahead... Master.\"\n\n\"Good little slave girl,\" he replied, sharing a loving, playful smile with her. \"I'll keep you warm and safe. You get some sleep.\"\n\nAlyssa placed a tender kiss on his cheek and in less than a minute her breathing had deepened, her chest rising and falling rhythmically against his own. \n\nJohn savoured the feelings of protectiveness he felt for the beautiful blonde, while enjoying her soft, warm, spectacular body draped over him. Glancing up at the overhead camera, he made a beckoning gesture with his finger. Faye flashed into existence a moment later and she glanced at Niskera and Alyssa, then grinned at him.\n\n\"Hi, honey,\" John whispered to her. \"Would you feel confident about being left in charge until we reach Fleet Warden Thandrun's fleet? The girls are all as exhausted as I am and desperately need some sleep.\"\n\nShe bobbed her head up and down enthusiastically. \"Don't worry about a thing! It'll only take us three hours to reach the Delta Corvus system; me and my boys can take care of our guests!\"\n\n\"Don't take no for an answer from the girls, okay? We were all tapped out after all that combat and they'll only recover with rest.\" He smiled at her, and added, \"Progenitor's orders.\" \n\nHer cute elfin face turned stern and she nodded as she snapped him a salute. \"You can count on me, boss!\"\n\nJohn returned her salute, then stifled a huge yawn. He gave Faye an apologetic smile, then said, \"If Irillith asks about Tashana, could you tell her that her sister's gone to bed already?\" He frowned and added, \"And I'd planned to talk to those alien diplomats, but I got a bit distracted with Tashana and Niskera. Would you mind telling them that I'll speak to them later?\"\n\nFaye fluttered over and sat beside him on the bed. \"Just get some rest, you're exhausted. Everything's in good hands, I promise.\"\n\n\"Thanks, beautiful, I really appreciate it.\" \n\nFaye watched him fondly as his eyes grew heavy and he dropped off to sleep thirty seconds later. She darted a wistful glance at Niskera, never having felt more envious of another person before, then leaned in and placing a loving kiss on his lips. John didn't feel a thing of course, her beautiful holographic form unable to touch his skin.\n\n***\n\nCaptain Galen Skotari fidgeted in his seat in the packed conference room aboard the Heavy Carrier Medusa. His butt had started to feel as numb as his brain after spending nearly three hours listening to his commanding officer, who was droning on relentlessly in one of his tedious senior-staff meetings. These meetings had become a weekly event that Galen and the rest of the Captains were forced to endure, ever since Captain Maddox had been promoted to Commodore.\n\nGalen's attention began to drift and he glanced out the long window flanking the room, admiring the spectacular view of the Iota-Leonis system. The bright star cast its blue-white glow over Port Medea, making the space station shine like a beacon against the blackness of space. The damage it had taken during the Battle of Leonis had been fully repaired and all the debris cleared away from the system. You would never suspect that this had been the site of a desperate battle for survival only a few months ago and that the Lion himself had actually been here to save the station...\n\n\"Captain Skotari?\" Maddox prompted him sternly.\n\nGalen cursed inwardly at letting his concentration waver as he snapped his eyes back on the Commodore. \"The Antaeus is fully operational, Sir.\"\n\nMaddox had taken to wearing full dress uniform since his promotion and he glowered at Captain Skotari under his peaked cap. \"That's wonderful to hear,\" the Commodore replied, his tone dripping with sarcasm. \"But I was asking if you'd seen any suspicious activity on your last patrol...\"\n\n\"Err, no Sir, the border with the Kintark was dead,\" Galen belatedly replied, bracing himself for Maddox's wrath.\n\n\"Well, as your heavy cruiser is in such fine shape, Captain, perhaps another patrol is in order?\" Maddox asked, a dangerous undertone to his request.\n\nGalen desperately wanted to tell Maddox where to shove his extra patrol, but he bit down on the sharp retort, knowing the shitstorm he'd be in for if he did. \"Yes, Commodore,\" Galen replied with a grimace.\n\n\"That's all ladies and gentlemen,\" Maddox declared as if he were the Fleet Admiral himself. \"I expect to see all your reports filed by twenty-two-hundred tonight!\"\n\nWith that, Maddox turned and marched from the conference room, a collective sigh of relief going up as soon as the door shut behind him. Galen leaned back in his chair and groaned in despair. His crew were going to kill him.\n\n\"Busted!\" the attractive blonde sitting next to him said with a laugh, nudging him with an elbow.\n\nGalen sank lower in his chair and grumbled, \"I can't help it! Maddox's meetings are so goddamn boring! If I knew I'd have to put up with this shit, I'd have stayed on Tactical and turned down the promotion!\"\n\nCamilla Tovaskaya shook her head, a look of genuine sympathy on her face. \"Back-to-back patrols... your crew are going to be furious.\"\n\n\"I know...\" Galen muttered, dreading breaking the news to his Executive Officer. Shore-leave on Port Medea would have to be cancelled and he could imagine how that news was going to be received. \n\nA tall red-bearded captain strode around the table to join them, clapping Galen on the shoulder. \"Thanks, buddy!\" Andrew Fowler crowed in delight, a huge grin on his face. \"You just got stuck with my patrol! My crew's gonna be toasting you tonight!\"\n\n\"Don't even start...\" Galen said, rolling his eyes.\n\nAndrew turned to Camilla and asked with excessive politeness, \"Would you do me the honour of joining me for a drink on Port Medea tonight, Captain Tovaskaya? I appear to have a new window in my schedule...\"\n\n\"Why, that would be delightful! Thank you, Captain Fowler, I graciously accept,\" Camilla replied, sharing her friend's broad grin.\n\nGalen rose to his feet and stretched his aching back. \"You two can go fuck yourselves...\" he grumbled.\n\n\"We'll be too busy drinking!\" Andrew replied with a laugh. He turned to Camilla. \"See you at seven?\"\n\n\"My Chief Engineer's been making polite enquiries about you, Andy,\" the blonde told him with a knowing look. \"Fancy entertaining two ladies this evening?\"\n\n\"That smoking hot brunette?!\" Captain Fowler exclaimed in delight. \"CT, you're amazing!\"\n\n\"Her name's Ava. We'll see you at seven,\" Camilla replied with a warm smile.\n\nAndrew made a point of shaking Galen's hand as he said solemnly, \"I owe you one, buddy.\"\n\nGalen couldn't help chuckling as he watched his friend stride out of the conference room with an extra spring in his step. The rest of the captains in Maddox's reserve fleet had already filed out, leaving Galen alone with Camilla. \n\n\"Want some company back to the Hangar?\" she asked kindly.\n\n\"Definitely,\" he replied, smiling at the blonde. \n\nThey left the conference room and walked through the busy Operations Deck, a dozen flight controllers coordinating the patrols of rapier fighters via glowing holographic suites. Galen shook his head as he watched all the activity. After he left the Academy, he'd been assigned as a gunner and had spent the next eight years in charge of vast capital ship weapon batteries -- he'd take command of his cruiser over this heavy carrier any day of the week.\n\nCamilla saw his look of disapproval and smiled. \"All about the big guns, right Galen?\"\n\nHe glanced at the perceptive woman, then hit the button to call the elevator. \"I just like getting stuck into a fight. Don't you get bored hanging back and just watching all the fighters and bombers go at it?\"\n\nShe laughed and shook her head, \"You make it sound like I just sit around having cups of tea and gossiping with my bridge crew. Believe me, commanding the Hesperus is no picnic!\"\n\nThe doors to the elevator swished open and they both entered, with Camilla hitting the button for deck fourteen.\n\nHaving no real desire to rehash this old argument, Galen decided to change the subject. He hesitated for a moment then frowned as he admitted, \"Being a Captain isn't like how I thought it would be.\"\n\n\"You were expecting to be able to rush around the galaxy, getting into fights and rescuing sexy alien girls?\" the blonde teased him. \"You're in the Terran Federation military, not some holo-show...\"\n\n\"There's just so much admin and bureaucracy!\" Galen exclaimed in frustration. \"Then there's all these fucking meetings!\"\n\nCamilla went quiet for a moment and sighed. \"That's just Maddox. The other Fleet Commanders I've served under have been far more reasonable. Hopefully he'll settle down a bit once his commodore insignia isn't quite so shiny and new.\" She placed a comforting hand on his shoulder. \"You've only been a Captain for two weeks, Galen. You'll settle into it, don't worry.\"\n\nThe elevator chimed as they reached Deck Fourteen and the doors swished open a second later. There were a handful of crew waiting to use the lift and they waited patiently for Galen and Camilla to leave. He followed his friend into the corridor, then quickened his pace to fall into step beside her. \n\n\"Sorry for complaining,\" he said, glancing at her out of the corner of his eyes. \"I can't exactly discuss this with my crew, so I appreciate you listening.\"\n\n\"You're quite welcome,\" she replied, giving him another of her lovely smiles.\n\nGalen was honest enough with himself to admit he had a bit of a crush on the attractive blonde. Unfortunately, she seemed to view him more like a little brother since she'd taken him under her wing, even though she was only a couple of years older than he was. He'd been planning on asking her out for a drink himself that evening, before Maddox went and fucked everything up. \n\nThey walked into the hangar, which was abuzz with shuttles ferrying the captains back to their ships. Camilla's shuttle was parked next to his own, so they strode towards them, being careful to avoid the crew moving cargo and ordnance around the hangar. With the massive hangar doors up, the sprawling vista of the Iota-Leonis system made for a spectacular view, putting the glimpse from the conference room to shame. Galen stopped for a moment to look out at all the ships in the fleet, picking out his cruiser, the Antaeus, and admiring its sleek lines and ferocious profile.\n\nHis blonde companion stood beside him and whispered under her breath, \"Sometimes I still can't believe I'm Captain of the Hesperus!\"\n\nGalen turned to see that she was staring at her light carrier, the same slightly awed expression on her face that he was sure he was wearing. The Hesperus was slightly bigger than his cruiser, at just over six-hundred-metres from bow to stern. It had more engines and was also much broader in the beam, with rows of launch tubes and hangars for all the strike craft contained within. While it was an impressive-looking vessel, it had one critical flaw in Galen's opinion... no really big guns!\n\n\"It was great to see you, Camilla,\" he said, knowing he should be returning to the Antaeus to face his soon-to-be outraged crew. \"I guess I'll catch up with you next week.\"\n\n\"Maybe we can go for a drink when you get back?\" \n\nGalen laughed and nodded. \"I'm sure Andy will be dying to tell me how he got on with Ava.\"\n\nCamilla's green eyes twinkled as she slowly shook her head. \"Actually, I was thinking it would be nicer with just the two of us...\"\n\nHe looked at her in surprise, then grinned. \"I'd love to! It's a date!\"\n\nWith that she strode away towards her shuttle, glancing back at him once over her shoulder and catching Galen checking out her lithe figure. He flushed with embarrassment, as he'd just been imagining how that wonderfully pert little bum would look out of her uniform.\n\nEven over the hubbub in the hangar, he could hear the delight in her voice as she called out, \"Busted!\"\n\n***\n\n\"John, the girls have started to wake up...\"\n\nFaye's soft voice penetrated John's consciousness and he slowly opened his eyes, to find her beautiful purple face watching over him. Alyssa was still lying across his chest looking breathtakingly beautiful, her face peaceful and serene in her sleep. He wasn't inside her any longer, but his hands were resting lightly on her waist, the feel of her soft smooth skin stirring up thoughts of taking her up on her earlier offer.",
        "Feeling vastly better after a good sleep, he smiled at Faye and said, \"I slept like a log!\"\n\n\"That's wonderful to hear,\" Faye replied, sounding delighted. \"I don't think I've seen you looking that tired before.\"\n\nJohn rubbed the sleep from his eyes and glanced up at Faye and asked, \"When will we arrive at Thandrun's fleet?\" When she hesitated before replying, he noticed a slight nervousness in her expression. \"Everything okay, honey?\"\n\n\"There were no problems while you were asleep,\" she replied, sounding slightly cagey. The source of her anxiety soon became clear as she continued, \"But, we actually arrived in the Delta Corvus system four hours ago.\"\n\n\"Why didn't you wake me?!\" John blurted out, blinking at her in surprise. \"Is everyone ignoring my orders now?\"\n\n\"You were exhausted and I didn't have the heart to disturb you!\" Faye replied defensively. Before he could say anything else, she continued in a rush, \"I spoke to Irillith about Tashana; she was fine about it and slept in your bedroom with the other girls. I informed the diplomats that you were weary after fighting for five hours and that you needed a bit of time to recover. They were very understanding and most of them are still asleep themselves; I suspect they didn't get much rest while they were under siege!\"\n\n\"I contacted Fleet Warden Thandrun as soon as we were in comms range and let him know that your mission to rescue Niskera was a complete success. He wanted to speak to Niskera, but I told him that she was exhausted and was resting; it seemed prudent not to mention you were sleeping together. Thandrun would like to speak with you at some point this morning. I've also been overseeing the transfer of the civilians to the Trankaran fleet. They haven't experienced any complications after treatment for Kirrix infestation and there were no problems with the wounded. So far, over eight-thousand of the civilians have disembarked and I estimate it'll take another two hours to move the remaining 2847 passengers to the Anvil. Finally, Niskera is still asleep and seems to be fine, although she's started to glow!\" \n\nJohn darted a glance to his left and saw that Niskera's grey skin had changed, just as Faye had described. The Trankaran woman was now covered in faint swirling orange lines, that made elaborate patterns over her big body. Niskera still looked peaceful and content, her hands cradling her slightly curved stomach.\n\n\"Jade has stopped glowing but she's still fast asleep,\" Faye concluded. \"Rachel suspects that Jade will wake up in one-hour, thirty-four minutes, which would be exactly fourteen hours after you fed her.\" \n\nAfter finishing her hurried speech, Faye looked at him apprehensively, worried that he'd be upset with her.\n\nTaking a deep breath to collect his thoughts, John smiled at the elfin girl. \"It sounds like you handled everything perfectly. You were right, I did need the sleep. Can you let the girls know that we'll be getting up in a couple of minutes? I'd like to meet with all of them and we can do a quick debrief after the mission.\"\n\n\"No need to tell the girls, I've just let them all know,\" Alyssa announced, sweeping her long blonde hair away from her face before leaning in to give John a kiss. \"Good morning, handsome!\"\n\n\"I'll leave you two to get up,\" Faye replied, darting a look at John. \"Unless there's anything else you wanted to talk to me about?\"\n\n\"No, we're good. Thanks Honey,\" he replied, giving her a grateful smile. She gave him a sparkling grin in return before disappearing in flash of purple.\n\nAlyssa purred as she felt the heat of his shaft against her tummy. \"Looks like you're up already!\"\n\n\"Can you blame me with someone as beautiful as you lying on top of me?\" John asked, stroking her flanks with the tips of his fingers.\n\nHis compliment earned him a kiss, before Alyssa twisted slightly, so she could reach down to gently cup his balls. She gave him a look filled with sympathy. \"You feel really full up! Do you want to use me to lighten your load, or save it for the girls?\"\n\nJohn positioned his cock against her already wet pussy and slid himself home, relishing the feel of her warm young body stretching to mould herself around his shaft. \"Let me just think about that for a minute,\" he said playfully, enjoying the sound of her soft moan as she took his entire length.\n\n\"I slept so well wrapped in your arms with you inside me,\" Alyssa said in a hushed voice, her hips gyrating in a slow, sensual motion. She had an uncharacteristically vulnerable and open expression on her beautiful face as she continued, \"I felt so safe and loved, it was amazing...\"\n\n\"That's because you are,\" he replied, gently stroking her back.\n\nShe let out a happy sigh, then relaxed on top of him. \"So what's the verdict? Am I going to spend the rest of the morning with a full tummy?\"\n\nJohn rolled her over so that she was beneath him, being careful not to disturb Niskera. He ran his fingers through Alyssa's soft blonde hair and gazed into her bright cerulean eyes as he said, \"How about we just focus on you for now... then we can have some fun with the girls.\"\n\n\"The life of a selfless hero,\" she teased him, giving him a kiss. Pulling him down closer she whispered in his ear, \"I'm sure me and the girls can come up with a nice reward for you later...\"\n\nJohn began to move and she wrapped her graceful legs around him, murmuring heated words of encouragement as he began to pick up the pace.\n\n***\n\nTashana stretched like a cat, having been gently roused from her sleep by Alyssa's telepathic wake-up call. She was about to get up, then relaxed back in the covers, still feeling drowsy. After her conversation with John, she'd stayed awake for a couple more hours, ignoring Faye's urging to go to sleep. \n\nHaving thirteen years of memories suddenly reawakened in her mind had been a... unique... experience. Reliving over a decade of horrible mental and physical tortures should have been horrifying, but she felt numb as she'd thought back over those years in slavery. The memories had dulled with time, and her newfound sense of purpose and perspective helped to further mute the pain. \n\nShe still felt enraged at thoughts of the sadistic Enshunu slaver who had inflicted so much abuse on her, but remembering the day she'd taken to slowly burn him to death helped ease her fury. Thoughts of the Bolon rapist filled Tashana with an eager desire to hunt it down and make it suffer in return, but she did her best not to dwell on that and tried to focus on the few positives instead.\n\nHer crew on the Infernal Retribution had been one of the few points of light shining through those years of bleak darkness. She cried for her crewmates when she remembered what had happened to them, particularly the Terran, Bull. He'd always looked out for her, doing his best to keep her calm and on an even keel. Bull was the closest to a friend she'd had in those long years and with a start, she realised that also included the years before her banishment. She bitterly regretted not being able to save him from Hades, but there was nothing she could do about that now, only remember him fondly in her heart.\n\nShe still struggled with her sense of outrage and grief towards Edraele and Irillith. While she knew that they were radically different women now, it was difficult to reconcile the two versions of her sister and mother in her mind. Her feelings towards Irillith in particular were especially conflicted. Her twin's betrayal had hurt Tashana more than anything, but she also dearly loved her sister, the growing intimacy between them and John the brightest highlight of her new life. \n\nAll those terrible memories felt almost surreal now, compared to her idyllic existence on the Invictus. Whenever anything got too difficult to deal with, she just reminded herself that it was all in the distant past and she had started building a wonderful life with John and the girls. It almost felt like she'd died and been reborn, fighting at his side to destroy the kind of scum that had preyed on her and so many others like her. \n\nTashana felt overwhelmed with admiration and gratitude to John for the careful way he'd healed her mind. Giving her those weeks of respite, while enhancing her psychic strength, had given her enough mental fortitude to adjust to the reunification with the damaged aspects of her mind. She knew that the tortured girl who had hidden behind the Malifica persona would always be a part of her, but now she was just a tiny facet of her much more potent subconscious, and not the driving force behind her personality.\n\nWhen she rose from her bed, she felt renewed, filled with an inner strength that felt unburdened by her past. Tashana showered and had just finished dressing when she heard a knock on the door.\n\n\"Come in,\" she called out as she stepped into her shoes, her voice bright and clear.\n\nWhen the door opened, John and Alyssa were waiting in the doorway. John walked inside with a look of concern on his handsome face. Tashana rushed to greet him, smoothing the lines of worry on his forehead with her slender fingers, before giving him a loving kiss. \n\n\"How are you feeling this morning?\" he asked, wrapping her in his arms. \"I was so worried how you'd cope with everything...\"\n\nHer arms snaked around behind him and gently caressing his back, as she gazed into his eyes.\"I'm still me... but better now. It was hard reliving all those terrible memories, but you made me strong enough to deal with everything. Thank you so much...\"\n\nFeeling immensely relieved, John held her tight, then smiled at Alyssa over Tashana's shoulder as the blonde hugged the Maliri girl from behind. Tashana let out a happy sigh of contentment and relaxed between them.\n\n\"She's not our wounded little bird any more,\" Alyssa said, gently kissing Tashana on the shoulder.\n\nJohn shook his head and as he leaned in to kiss Tashana again, he murmured, \"She's a powerful lioness...\"\n\nTashana kissed John passionately, her heart soaring as they wrapped her in a loving embrace.\n\n***\n\nDana nodded her eager approval as she skipped through the holographic footage on the viewer. \"This shit is amazing! Nice job compiling it all, Faye!\"\n\nThe purple sprite's wings quivered in delight as she peeked over the redhead's shoulder. \"I made two sets of videos while you were all asleep! The one you're looking at now shows the highlights of all of you in action, which I thought might be useful for the debrief. I made the second set of footage for John to give to Jehanna for her to broadcast via TFNN. It shows some exciting segments of the battle, but I've removed any references to any of you using psychic powers, face shots of the twins, or anything that gives the viewer too close a look at our gear.\"\n\n\"John's guaranteed to get laid when Jehanna sees him in action!\" Dana said with a giggle, shaking her head in awe as she watched John hurling her clear of the falling train. \"I'm getting turned on watching him save my ass and I still remember how fucking terrifying that was!\"\n\n\"Can I see?\" Calara asked, walking out of Alyssa's wardrobe in an outfit she'd borrowed from her lover.\n\nDana patted the bed beside her. \"Of course, gorgeous.\"\n\nThe Latina sat down and watched the images on the holo-viewer for a few minutes, her expression slowly changing to one of shock and horror. \"God... I thought boarding the hive ships was frightening!\" she finally gasped, pulling the startled redhead into a hug. \"I'm so glad you came through all that unscathed!\"\n\nRubbing the Latina's back soothingly, the redhead darted a glance at her girlfriend, who was sitting beside the still-sleeping Jade and scanning her with a medi-scanner. \"I got off lightly. It was Rachel's turn to get shot this time...\"\n\nIrillith glided in from the bathroom, her stunning blue figure completely nude. \"Actually, we all got shot quite a bit, but our lovely doctor was unlucky enough to actually get hurt. That's something I wanted to raise with you, Dana. The shields were amazing for short skirmishes, but we lost all the benefit in a protracted gunfight.\" \n\nBefore Dana could reply, John walked into the bedroom, with Alyssa and Tashana following close behind. \"Has the debrief started without me?\" he asked with a broad smile.\n\n\"John!\" the rest of the girls all replied simultaneously, greeting him with a warm welcome.\n\nAlyssa padded off to the bathroom, hand-in-hand with Tashana. She clasped Irillith's hand as she passed her and said, \"Looks like you're having two showers this morning, beautiful!\"\n\nIrillith laughed and let herself be led back to the bathroom with her twin. Dana and Calara shared an eager smile, quickly stripping off and linking arms with John as they walked into the huge shower. Sakura was in there already and she welcomed them all with open arms.\n\n\"Time for a celebratory group hug,\" John announced once all the girls were there. \n\nAn instant later he was surrounded by slippery nubile bodies and he did his best to put his arms around as many of them as possible. He managed Alyssa, Sakura, and Calara in front of him, while Dana, Rachel, and the twins hugged him from behind. \n\nGlancing over Alyssa's shoulder at Faye's holograph, he said to the redhead snuggled up against his back, \"I hope you're making Faye's new body waterproof. It's a mandatory requirement that she can join us for group hugs in the shower!\"\n\nDana nodded, stifling a giggle. \"Don't worry; making sure she was able to cope with huge volumes of liquid was at the top of the list in the design specs. You'll be able to hose her down to your heart's content and she'll just get very wet...\"\n\nFaye beamed a happy smile at her friend, until her subroutine on idioms alerted her to the redhead's innuendo. She squeaked and blushed furiously as she realised what Dana was really saying, while the girls laughed and gave her a knowing look. Faye darted a shy smile at John and he could see the wistful look in the purple sprite's luminous eyes turn into one of eager excitement.\n\n\"All joking aside,\" John said, looking around at the group. \"What we achieved yesterday was incredible. We accomplished our primary mission, saving Niskera and the diplomats. But we also eliminated the Kirrix threat to Khalgron and managed to save the Trankaran civilians. I'm very proud of all of you.\" \n\nHe deliberately avoided giving Sakura a pointed glance, or mentioning anything about mission creep, just focusing on their spectacular victory for now. The girls beamed in delight at his praise, hugging him closer.\n\n\"Speaking of Niskera, is it true that you've changed her into a Glowing Queen?\" Rachel asked, quite fascinated.\n\nJohn arched an eyebrow at Alyssa.\n\n\"I didn't say anything!\" the blonde protested, blushing under his scrutiny.\n\n\"She didn't need to, it was obvious after the three of you slept together,\" Rachel said, rubbing her hand on John's back. \"Besides, I suspected events might play out that way, so I asked Niskera for a DNA sample yesterday. I can't wait to do a comparison after she's finished her transformation!\"\n\n\"I was going to tell all of you about her after the debrief,\" John explained. \"But yes, you're correct. After we told Niskera about the possibility of becoming a Glowing Queen, she was very keen on the idea.\"\n\nThere was real admiration in Alyssa's voice as she said, \"Niskera's amazing! I've never met anyone so selfless before. She was willing to do whatever it took to save the Trankarans from the Kirrix.\"\n\n\"Did you fuck her?\" Dana asked with an eager grin. \"I've heard Trankaran men are packing! I bet she took your huge cock like a trooper!\"\n\nJohn hesitated before replying, feeling a bit uncomfortable about discussing the details of his encounter with the Trankaran woman. Alyssa patted him on the chest and glanced at the girls, filling them in on all the details telepathically, including her own mistake in pushing for it so aggressively. \n\nFaye had already overheard their conversation and seen what had transpired, so there was no need to repeat it aloud for her benefit. The rest of the girls were quiet for a moment as they listened, eyes widening as they heard about John and Alyssa's heart-to-heart afterwards.\n\nIrillith was the first to speak and she gently massaged John's shoulders as she said, \"In my opinion, this worked out perfectly. The Trankarans have been genetically engineered to respond to a changed Trankaran female, just as the Maliri were. The improvement in the effectiveness of Niskera's leadership should be profound, just as it was with the Matriarchs now that they're united under your banner.\"\n\n\"And I wouldn't worry about Niskera's future happiness with the Trankarans,\" Rachel quickly added. \"She'll be able to have her pick of suitors once the Change is complete. I spent a few hours with her yesterday and she seemed like a very level-headed and sensible woman. I think she has just the right kind of temperament not to be overwhelmed by the challenges her new appearance will present.\"\n\n\"If she isn't happy amongst the Trankarans in the long term, we can always make her welcome here with us instead,\" Tashana said softly. \"I know it wasn't what you planned for Niskera, but the girls are incredible at making new arrivals feel loved and cared for; I know that's how I felt after my first day here with all of you.\"\n\n\"I reckon she'll look a bit like Jade when you're done stuffing her full of cum for two weeks,\" Dana speculated, looking intrigued. \"I wonder what your kids will look like?\"\n\nJohn raised his hands and laughed. \"Hold on, let's not get carried away! Alyssa and I do need to have a chat with Niskera about her future plans, but that's a long way off yet. All we've established so far, is that Niskera was excited about helping her people and overjoyed to be part of our new alliance. The rest we can address when the need arises.\"\n\n\"Fair enough,\" Dana said with a shrug.\n\nRachel bit her lower lip, then confessed, \"I must admit, I am really intrigued to know what would happen if you keep feeding Niskera. The way we all look now is exceptional, but still within the bounds of normal Terran physiology. Jade didn't change, not physically at least, but a Trankaran... that's a whole different ball game.\"\n\nJohn glanced down and smiled as he said, \"Nope, still the same four...\" After the girls' laughter had died down, he continued, \"Niskera seems like a lovely woman, but to remake her into essentially a grey-skinned Maliri... I really hope it doesn't come to that. This once, I'm going to be hoping your professional curiosity stays unsatiated.\"\n\n\"I understand,\" Rachel said, kissing him lightly on the shoulder.\n\n\"Okay, let's get dried off and we can start the debriefing,\" John said, gesturing towards the shower door.\n\nDana bounded out of the shower first and started drying herself with the auto-driers. \"Faye's done an awesome job with all the cam footage!\" she exclaimed, grinning at the purple sprite. \"Just wait to see what she's put together!\"\n\nJohn glanced at Faye and smiled. \"I can't wait to see it. What order are the edited highlights in? Ground mission first, then the space combat?\"\n\n\"Actually, I ordered them in the sequence the events occurred,\" she replied self-consciously. \"I hope you like it. I'm worried I might have got a little bit carried away...\"\n\nDana shook her head, making her auburn tresses swish around her shoulders. \"You're a natural at this, Faye! You've got a real artistic flair with video!\"\n\nFaye looked worried and darted the redhead a nervous glance. \"Please don't oversell it! I wouldn't want to disappoint everyone.\"\n\n\"I'm sure it'll be great,\" John replied, before turning to look at the girls. \"Everyone get dressed, then meet back in the bedroom in... five minutes?\"\n\nIn what could only be described as a minor miracle, the seven girls managed to get dressed and make themselves look gorgeous in the extremely tight timeframe. Tashana and Irillith had to jog to make it in time, and Irillith flashed her sister a radiantly happy smile as they ran down the corridor. Tashana hesitated a second, then grinned back at her twin, deciding to just embrace the moment. ",
        "When the Maliri sisters entered the bedroom, John was sitting on the end of the bed with the rest of the girls arrayed around him. Alyssa sat to his right, Calara to his left, Dana and Rachel behind him, and Sakura on the floor between John's legs, her back against the bed.\n\nAlyssa glanced at Calara, who smiled back at her. They slid to the floor beside Sakura and patted the bed behind them as the blonde said, \"Come and sit here, beside John.\" \n\nThe twins gave them a grateful smile, then moved to take the recently vacated places, sighing happily as John put an arm around them both.\n\n\"We're all set, Faye,\" John said, smiling at the sprite, who fluttered nervously in front of them all. \"If I tell you to stop, could you pause the recording for us, so we can discuss what just happened?\"\n\n\"I'd be happy to!\" she said in a rush, before dimming the lights with a glance. She coughed as if to clear her throat and announced boldly, \"Ladies and gentleman, I give you the Battle of Khalgron!\"\n\nThe video began to play back, starting with the Invictus dropping into the Alpha Tauri system and seeing the Kirrix fleet for the first time. The footage alternated between the ground team in the Raptor and cam footage taken from the Combat Bridge. John glanced at Faye, who was watching his face for any hint that he wanted to speak, and she immediately paused the playback.\n\n\"Ah c'mon, we've barely started!\" Dana protested, poking John in the ribs.\n\nJohn reached behind to tickle her, smiling when he heard her giggle. \"Just two things. Before I forget, I wanted to say that Calara's briefing beforehand was excellent. We knew exactly the kind of threat we were facing and could react accordingly without any really nasty surprises from the Kirrix.\"\n\nCalara leaned into his leg and grinned up at him. \"To be fair, most of that intel came from Thandrun. I just organised it into a cohesive briefing.\"\n\nAfter smiling at her in return, he glanced over his left shoulder at Rachel. \"The other thing I wanted to mention was the Kirrix autopsy results you showed us in the Raptor. That saved a lot of messing around once the shooting started and your quick analysis of those Juggernauts to find their vulnerabilities was incredibly useful.\"\n\n\"I'm really glad the information was helpful,\" the brunette replied, stroking his back. \"Thanks very much for the Hivelord and Broodmother heads by the way. I'll perform another autopsy as soon as I get an opportunity.\"\n\nJohn glanced at Faye and gave her a smile. \"Sorry to interrupt. Go ahead.\"\n\nThe sprite blinked and the video playback continued, alternating the footage between ship and Paragon suit cameras as the battle unfolded. Every time footage was taken from one of their body armour cameras, Faye had cleverly superimposed a small video of the owner's face in the corner, so everyone could see their reactions.\n\nThe battle started out roughly as planned, with the Invictus engaging the Kirrix fleet at range. As things started to go wrong, Faye alternated between more cuts, showing John and the girls forced to land near the city to take the train route to the fortress. By the time the underground train came under fire and Sakura sent the Valkyrie charging in to save the civilians, John and the girls were completely spellbound, staring at the screen in awe. \n\nNo one interrupted again as they watched the thrilling battle unfold. The underground team fought through seemingly endless waves of Kirrix, while the Valkyrie and the Invictus skirted disaster countless times. The only sound from the audience were startled or frightened gasps as they witnessed everything the other team had been through. By the time the forty-minute movie had ended, they were all reeling, staring at each other in shock.\n\n\"Fuck me!\" Dana blurted out, gaping at Calara and Alyssa in awe. \"How the fuck did you survive slugging it out with all those drone carriers?! The amount of beams they were shooting at you...\"\n\n\"We should have died,\" the Latina admitted, her expression grim as she looked up at John. \"Several times in fact. It was only my prescience that let me save us from being destroyed.\"\n\nSakura had gone deathly pale, her face drained of blood. \"It was all my fault... I had no idea how much danger I put all of you in!\"\n\nCalara let out a heavy sigh and put her arm around the badly-shaken Asian girl. \"We had no choice. If we hadn't intervened to stop the drone carriers reaching the planet, you would have died. I saw it multiple times... watching visions of a future where we lost you was one of the most horrible things I've ever experienced. We were forced to destroy the Kirrix fleet at point-blank range to save you, we couldn't have destroyed them fast enough at long range.\"\n\nAlyssa rubbed John's thigh and said in a hushed whisper, \"I didn't know how bad it was in the tunnels... You kept that from me; you never thought about it, not like that.\"\n\n\"I didn't want you to worry,\" John explained, removing his arm from Tashana's shoulder and gently stroking Alyssa's golden hair. \"I knew you were dealing with big problems, so I didn't want to have you worrying about us too. I had no idea it was as bad as that though.\"\n\n\"Can we have another group hug please?\" Rachel asked in a small voice, clearly upset at seeing her friends' close shaves with death.\n\n\"That's the best idea I've heard all day,\" Alyssa said, standing up and climbing onto the bed. She wrapped the tawny-haired girl in a big hug and continued, \"Watching you get shot by neutron bolts was awful! I know how much those fuckers hurt.\"\n\nJohn and the rest of the girls joined in the hug, no longer triumphant about the battle, but more relieved that everyone had managed to survive through all the carnage. They held each other for a couple of minutes until everyone started to feel a bit better. Everyone that is except Sakura who still looked aghast at the repercussions of her impetuous actions. Pulling the mortified young woman into his arms, John gave her a gentle kiss. \n\n\"I'm so sorry,\" she mumbled looking to be on the verge of tears. \"I thought I was doing the right thing, but I nearly got you all killed!\"\n\nHe rubbed her back, then said quietly, \"But no one actually died... Yes, you made a mistake, but Calara and Alyssa were able to save the situation. Let's talk it through and see what we can do to learn from what happened, alright?\"\n\nSakura rubbed at her eyes and gave him a shaky nod. \"Okay.\"\n\nJohn sat back against the headboard and beckoned her over to join him. As Sakura sat between his legs with her back resting against his chest, the rest of the girls fanned out into a circle on the bed.\n\nEncircling Sakura's waist in his arms, John said, \"After watching the battle, there were quite a few things I think we should discuss, but we might as well start with Sakura engaging in the mech.\" He glanced down at the Asian girl and continued in a softer tone, \"Do you want to talk us through what happened? Why did you ignore my orders and attack the hive ships?\"\n\nSakura took a deep breath to calm herself and her voice was steadier as she replied, \"I was just hanging back to cover the train station entrance to begin with, just as we had planned. Then I started watching the Trankaran civilians and realised what was about to happen to them all... the Kirrix were going to kill the children and feed them to those grubs!\" \n\n\"That little girl and her mother,\" John said, nodding as he remembered the cam-footage from the Valkyrie before Sakura attacked. He had a bleak expression on his face as he continued, \"I know it's horrible to think about, but sometimes we might be forced to make those kind of impossibly hard choices, like sitting back and not intervening. If the Invictus had been destroyed trying to rescue you, then you, me, and all the rest of the girls would have been killed shortly afterwards. If that happened, then billions of people would die at the hands of this other Progenitor. It becomes a choice between saving tens-of-thousands or preventing the genocide of several entire species.\"\n\nShe hung her head in shame and said softly, \"I know, I do, but it was so hard... the little girl, she reminded me of one of Shinatobe's victims. That look on her face was exactly the same; the shock and disbelief that the Universe was a far more horrible place than she could have ever imagined. To see that loss of innocence all over again was heartbreaking...\"\n\nJohn was filled with sympathy for the girl and hugged her closer. \"I'm so sorry, honey. I shouldn't have put you in that situation. You're so strong and resilient, I sometimes forget about all the terrible things you've been through. Maybe we should rethink you being so heavily involved in combat? I don't want you getting traumatised every battle...\"\n\nSakura shook her head fiercely, turning to look up at him. \"This was just an exception, I promise! When you've made me this powerful, keeping me from helping you would be crazy!\" She darted a guilty look at Alyssa then Calara. \"I'm so sorry I put you in that much danger. I'll never go off like that again, I swear it!\"\n\nAlyssa placed a comforting hand on Sakura's arm and gave her a warm smile. \"It got a little bit hectic for a while, but there was no real harm done. The Invictus got a bit torn up, but no one got hurt. The next time you decide to take on impossible odds, just discuss it with me and John first, okay?\"\n\n\"Okay, I will. I promise,\" Sakura readily agreed.\n\nCalara had a thoughtful expression on her face as she said, \"With hindsight, Sakura taking out the hive ships actually helped the ground team. You were only able to escape up the tunnel because she knocked out the Kirrix vessel near the entrance. It looked like you were on the verge of being overwhelmed at that point.\"\n\n\"That's very true,\" John agreed, nodding to the Latina. He glanced down at Sakura and smiled at her. \"We were almost out of ammo and close to breaking point. Once Rachel went down, the rest of us wouldn't have been able to last without her. Thank you for clearing an escape route.\"\n\nThe Asian girl looked much happier now. \"You're welcome!\"\n\n\"On a more upbeat note, your combat performance in the Valkyrie was absolutely outstanding,\" John said, open admiration in his voice.\n\nDana nodded exuberantly. \"When John asked me to let you pilot the Valkyrie, we were both thinking about your psychic speed affecting the mech, that's why I upgraded it with frictionless joints so it could keep up with you. That worked great, but I never thought about you using your Cryokinesis to cool the Photon Lasers with ice! That firepower was off the fucking chain!\"\n\nCalara grinned, an excited gleam in her eyes. \"With no cooldowns on those quad guns, the Valkyrie must have rivalled the damage output of the Invictus' Photon Laser batteries!\"\n\nSakura blushed at their praise, but she turned and looked curiously at John. \"I didn't realise you'd spoken to Dana first about me piloting the Valkyrie instead of her. Why did you make me think it was a spontaneous decision during that debriefing?\"\n\nBefore he could answer, Dana replied for him, \"He was just trying to spare my feelings and not embarrass me in front of you girls. I kept fucking up in combat and nearly getting myself killed, so he grounded me in the mech for my own safety.\" She grinned at the Asian girl. \"But you were a beast in that thing! Out of all the stuff I've built so far, that was totally the coolest!\"\n\nThe Asian girl raised herself up a little to give John a tender kiss. \"You were very sweet, looking out for Dana like that. I'm really glad I was able to justify your faith in me.\" She blushed again, and added quietly, \"From a purely combat perspective at least.\"\n\n\"Honey, you vastly exceeded my expectations,\" he said with a proud smile. His smile faded into a frown as he looked into her dark brown eyes. \"But you deliberately disobeyed my orders and we need to give you a suitable punishment.\"\n\nHer face fell and she slowly nodded, her eyes filled with shame. \"I'll do whatever you think is necessary to atone for my disobedience...\"\n\n\"How do you think you should be punished,\" John asked quietly.\n\nSakura was silent for a long moment, then said in a forlorn whisper, \"No sex with you for a month?\"\n\nHe snorted and rolled his eyes playfully. \"Don't be ridiculous! You're supposed to be coming up with a punishment for yourself, not for me!\"\n\nThe girls laughed and Sakura blushed hard, a tentative smile teasing her lips. \"How about a spanking in front of the girls then?\"\n\n\"Now you want to be rewarded for being naughty?\" John asked, an incredulous expression on his face. When the subsequent laughter subsided again, he continued, \"Maybe I need to think of a fitting punishment for you instead.\"\n\nJohn rubbed his chin as he thought it over, everyone waiting with anticipation, while Sakura looked up at him with a look of apprehension in her lovely almond eyes.\n\n\"I've got something suitable,\" he finally said, nodding with satisfaction. \"I'm assigning you as the ship's Head Chef for the next week. Breakfast, lunch, and dinner, all prepared by your fair hand.\"\n\nSakura gaped at him in horror. \"No! You can't! I'm a terrible cook!\"\n\n\"Then it's about time you learned,\" John said quietly, brushing his fingers through her lustrous black hair. \"I remember what you told me before... about wanting to be the perfect wife and cooking for our family.\"\n\nShe bit her lower lip and slowly nodded, a shy smile on her face.\n\n\"Don't worry,\" Calara said stroking Sakura's arm. \"I'll teach you everything I know, okay?\"\n\nSakura looked greatly relieved and darted across the bed to give the startled Latina a fierce hug. \"Thank you so much!\"\n\nWhen she settled down again, John smiled and said, \"Alright, that's Sakura dealt with.\" He looked at Calara next and continued, \"Perhaps if we just go around the circle and I'll raise any points I thought of. We've touched on your use of Prescience, but your performance in that battle was outstanding, Commander. I'm sorry that the future visions were upsetting though... I hadn't really thought of that when I came up with that ability for you.\"\n\nCalara reached across to clasp his hand. \"It was a small price to pay, believe me.\" She smiled at Sakura who was sitting beside her. \"Being able to prevent what could have happened to her makes up for that a thousandfold!\" \n\n\"Thank you for saving me,\" Sakura said, leaning in to give the Latina a grateful kiss.\n\n\"You're welcome, Head Chef,\" Calara replied with a wink. She turned back to look at John. \"I'm really sorry about the state of the Invictus though. We lost a starboard Heavy Cannon and the armour got badly torn up, but I promise that was the best outcome we could have hoped for.\"\n\nHe nodded his understanding, then glanced at Dana. \"How hard will it be to repair everything?\"\n\n\"Well the armour's pretty fucked,\" the redhead said with a grimace. Her expression lightened as she continued in a more upbeat tone, \"But it was just quad shaped anyway. You guys were probably going to reshape it all anyway, right? Can you do that in space, or do we need to find a drydock?\"\n\nJohn shared a glance with Alyssa then shrugged. \"Yeah, that's true enough; it did need upgrading. Between the two of us, we should be able to patch and reshape it all. What do you think about doing a spacewalk and fixing the armour?\"\n\n\"You take one side, I take the other?\" Alyssa replied, looking hopeful. \n\nJohn smiled at her, knowing how much she hated repairing the ship's armour plates. \"Sure, I'll be happy to help.\"\n\nAlyssa beamed at him, then said, \"With the maintenance bots replacing the hull plating as we reshape it, we could get it done in four or five hours maybe?\"\n\n\"Sounds good,\" John agreed, before turning to look at the redhead. \"So we should be able to repair the armour easily enough, but how about the Heavy Cannon?\"\n\nShe gave him a helpless shrug. \"I can't tell you until I've had a chance to inspect the damage. If the turret-well got really fucked up, we might need a bit of time in drydock to fix it.\"\n\n\"Alright, well we can survive without a Heavy Cannon if we have to,\" John said, feeling more relaxed. \"Faye managed to keep the Raptor unscathed, so that's one less ship to worry about. I've also seen the Valkyrie and the damage didn't look too bad there.\"\n\nDana nodded. \"Yeah, we lost a Pulse Cannon turret and the armour needs patching, but nothing too dramatic.\"\n\n\"The Kirrix disabled the Punisher Gatling as well,\" Sakura admitted, giving the engineer a guilty look. \"It took a hit to the ammo feed.\"\n\n\"Actually, that's not so bad, I can patch that in no time,\" Dana replied, giving her a reassuring smile. \"But the Punisher Gatling is old tech now anyway. I need to look into coming up with an upgrade that uses the Quantum technology in the rifles.\"\n\n\"They were excellent by the way,\" John remarked, looking pleased. \"The stopping power was very impressive!\"\n\nDana laughed and darted a glance at Irillith. \"Shit... after seeing her hosing down anything that moved with that Pulse Cannon, my Quantum rifle seemed a bit sad in comparison! Irillith was like the fucking Grim Reaper, if he was a sexy blue chick with a great ass!\" She suddenly sat bolt upright and gasped, \"I know! I'm going to start calling them Reaper Cannons, after you!\"\n\nJohn smiled in admiration at the Maliri girl. \"She's right, you and your Reaper Cannon were magnificent.\"\n\n\"Did your Maliri Thrall please her Progenitor Master?\" Irillith asked him with a playfully arched eyebrow.\n\nHis smile wavered and he replied, \"Just be yourself, okay? I'm a bit uncomfortable with how much I like you playing the obedient Thrall...\"\n\nHer answering smile was warm and understanding as she replied, \"Of course, John.\" She grinned at Dana as she added, \"That Reaper Cannon was thrilling to use! It just felt so natural and the raw firepower was phenomenal!\"\n\n\"Do we want the whole squad using them next time?\" Dana asked John, an eager gleam in her eyes. \"Just imagine how badly we'd fuck up anyone who crosses us!\"\n\nSitting back for a moment, John gave her question some serious thought. \"We definitely need more, but I have reservations about equipping all of us with what is effectively a squad support weapon. I need to switch to my sword sometimes, so I'll stick to a rifle as my primary weapon. The same probably applies to Sakura.\" \n\nThe Asian girl nodded her agreement. \"I wouldn't be able to carry a Reaper Cannon across my back if I need to engage with my swords. It's just too big.\"\n\nJohn glanced at the tawny-haired doctor next. \"I'm not sure how practical it'll be for Rachel either. In her role as combat medic she needs the use of at least one free hand...\"\n\n\"I think it'll be fine!\" Rachel said in a hurry. \"Dana built anti-grav stabilisers into the gunframe, so maybe she could just tweak mine a bit? Then I could support it with one hand in an emergency and I'll have a free hand to be able to use psychic healing.\"\n\nLooking a bit dubious, John glanced at his Chief Engineer, who just shrugged at him and smiled. \"Don't worry, I'll come up with something to make it work for her.\"\n\n\"You're the best!\" Rachel enthused, hugging her girlfriend affectionately. \n\nWhen the two separated, John said to the brunette, \"While we're on the subject of healing, you keeping the Trankarans on their feet during the evacuation was invaluable. We would have probably been forced to leave them behind in the fort otherwise, as there was no way we could have evacuated them; those wounded rockmen were far too big to carry. Without them there to act as a shield, Niskera or the diplomats might have taken some bad hits. You basically prevented what could have turned into a really ugly situation.\"\n\nRachel was ecstatic to hear his lavish praise. \"I always felt like a bit of a fifth wheel beforehand, but not this time! Thank you so much for my healing ability! I love being able to save lives that way. It always feels tremendously rewarding, far more so than using conventional medicine.\"",
        "\"We couldn't have done it without you,\" John said sincerely. He gave her a self-deprecating smile as he added, \"You've no idea how glad I am that I didn't have to heal the Trankarans!\"\n\nShe laughed at the thought. \"Yes, I can imagine.\"\n\nHe paused for a moment, then said, \"Using the Sonic Cannons to liquefy the Kirrix grubs was very impressive and you weren't using any powers for that. It was an excellent idea that saved thousands of lives.\" \n\n\"That's true,\" she conceded. \"Perhaps I shouldn't be quite so dismissive about non-psychic treatment. Helping all those people did feel wonderful too.\"\n\n\"John, would you mind if I make a request?\" Tashana asked, her firm tone drawing everyone's attention to her. \"I'd prefer to keep using pistols rather than switch to a Reaper Cannon. I've had... a lot of experience using them and it seems a shame to waste it.\"\n\nHe looked at her in surprise then nodded as he met her intense violet gaze. \"Of course, beautiful, I agree completely. Besides, you channelling your psychic abilities into those bullets was inspired! We would've been in big trouble without you there to take care of the Juggernauts.\"\n\n\"I can't claim the credit for that idea,\" Tashana said, smiling at Dana.\n\nThe redhead didn't notice though as she appeared to be lost in thought.\n\nRachel nudged her playfully with an elbow. \"Hey, Tashana was talking to you!\"\n\n\"Oh crap! Sorry,\" Dana replied, giving the Maliri girl a look of apology. \"I was just thinking of a way to improve those pistols for you. I'll come up with something this afternoon while I'm working on Faye's sexy new bod.\"\n\n\"You're forgiven!\" Tashana exclaimed with a broad grin, intrigued to find out what the inventive redhead had in mind.\n\n\"How close are you to finishing Faye's body?\" John asked Dana. \n\n\"We've been making pretty good progress,\" Dana replied, sharing a look with Irillith. \"I reckon about another four days and we'll be nearly done. The Maliri Matriarchs are bringing something important though, so I can't finish Faye completely until we rendezvous with their fleet.\"\n\nIrillith nodded, a look of satisfaction on her face. \"Her new software is coming along nicely. I should be finished in a couple of days.\"\n\nJohn smiled at the giddy purple sprite. \"Not much longer, Faye.\"\n\n\"I know!\" she exclaimed, her wings thrumming with excitement. \"I can't wait!\"\n\n\"Likewise,\" he agreed. \"I'd love to give you a hug right now. You were amazing in the battle! Ferrying us around, protecting Sakura, fighting in the Raptor, and manning the Invictus' guns... we literally couldn't have managed without you.\"\n\n\"Why don't you let me take care of that hug for you,\" Irillith volunteered, closing her eyes and entering the astral plane. A few seconds later, a glowing projection of her appeared on the bed beside Faye and wrapped the sprite in a warm embrace. \"Thank you, Faye, from all of us.\"\n\nThe elfin girl hugged her Creator back, revelling in the contact. \"I love that you can do that!\" she gasped, snuggling into the Maliri girl before reluctantly letting her go. Irillith gave her an affectionate kiss on the cheek before returning to her body.\n\n\"While we're on the subject of creative use of powers,\" John said, looking around at the girls' beautiful, attentive faces. \"There were a few other things I should mention that were all excellent. Starting with Irillith using electricity to power the train... Getting to the fortress would have taken so much longer otherwise and we might not have been in time to save the survivors from the Kirrix.\"\n\n\"It was surprising how much more powerful I'd become,\" the Maliri girl admitted, her angular eyes widening as she remembered the ease with which she'd powered the train. She flashed a grin at Tashana and added, \"We should all be very grateful I have such a generous sister!\"\n\n\"Sharing is always a pleasure...\" Tashana purred, giving John a sultry glance under her long lashes. \n\nHer flirtatious look scattered John's thoughts for a moment as his imagination ran wild. His painfully full quad ached with need and he could just imagine how good it would feel to part those soft, full lips...\n\nAlyssa gave the Maliri girl a stern look. \"John had a lot of stimulation last night and this morning, but he's been saving his cum for you ladies. No teasing him, okay? I'm not sure he can take it!\" \n\nThe atmosphere in the room changed dramatically, to one that was much more sexually charged. John saw the hungry gleam in all those wonderfully enchanting eyes and he groaned at the promise held in each and every one. \"Let's wrap this up fast!\" he pleaded.\n\nUnsurprisingly there was no disagreement from anyone present.\n\nTurning to look at Dana, he did his best to ignore the flush of arousal across her luscious cleavage. \"What happened when you brought the roof down? I didn't give you Pyrokinesis, so how did you melt all the metal like that?\"\n\nDana gave him a brilliant smile. \"I just lowered the melting point of all that steel! It was hot down there with lava all over the place, so the metal just slid right into the canyon!\"\n\nJohn gave her a look of sincere admiration. \"That was really nice, Sparks. But how did you know we weren't going to get crushed by the canyon collapsing?\"\n\nThe redhead looked a bit shifty then and admitted, \"I crossed my fingers and hoped for the best.\"\n\nHe blinked at her in surprise, then laughed as he shook his head. \"Well I'm very glad your luck was in!\"\n\n\"Me too!\" she exclaimed with a wink.\n\nTurning to the last girl in the circle, John opened his arms for Alyssa, pulling her into a hug. \"As I said before, I had no idea how tough that battle with the Kirrix fleet was. That you were able to pull through that fight while still acting as our telepathic hub and supplying everyone with psychic power was incredible! I know you thought you'd done a bad job as a Matriarch, but you couldn't be further from the truth.\"\n\nThe blonde let out a happy sigh, cuddling into his chest and enjoying the feel of his strong arms around her. \"Thanks, handsome, that was lovely to hear.\" She glanced up at him and continued, \"I actually had something I wanted to raise with you about our powers though?\"\n\n\"Sure, go ahead,\" he replied indulgently.\n\nShe turned slightly so she could look around the circle of girls. \"I think it's awesome that you've enhanced everyone with all these wonderful psychic abilities, but everyone's really starting to push their limits. While that's fantastic and I don't want to discourage anyone, we can't all be blowing through loads of eldritch energy! It's got to come from somewhere...\"\n\n\"Yeah, getting tapped out mid-fight was a nightmare,\" John said, his eyes narrowing. \"If I'd had enough psychic power, I could have cleared most of the Kirrix from that gallery single-handed.\"\n\nAlyssa glanced back at the sleeping Nymph, a fond smile on her face. \"Jade normally makes a massive difference. I didn't realise quite how much I've been relying on her until she was out of action. She hardly ever uses any energy either, so she's always there to help out.\" \n\n\"How long until she wakes up?\" John asked, glancing at the ship's chronometer. He did a double-take and exclaimed, \"What the hell?! It's four-thirty in the morning!\"\n\nThe girls all laughed at his reaction as Alyssa explained, \"We started the battle at three, yesterday afternoon. We spent about five hours fighting, roughly seven hours sleeping, and it's been an hour or so since we got up, watching the video and chatting.\"\n\n\"To answer your first question,\" Rachel said, looking at Jade tucked up in the covers. \"If Jade is sleeping for fourteen hours since you fed her, then she'll wake up in approximately sixteen minutes.\"\n\n\"And if she doesn't?\" John asked, glancing at the slumbering Nymph with a worried frown.\n\nThe brunette gave him a reassuring smile. \"We can deal with that eventuality if it occurs, but I suspect it won't. Whatever you did to her appears to have been something profound and it was linked to your cum. Our previous experiences tend to make me think she'll be waking up soon; you love her far too much to let anything bad happen to her.\" \n\nJohn relaxed and smiled at her. \"Yeah, you're right. Whatever's happening to Jade must be linked directly to me and I'd never do anything to hurt her.\" He brushed Alyssa's hair away from her shoulder so he could see her face and pulled her into his arms. \"So you were saying about Jade being like an extremely powerful battery of psychic energy?\"\n\n\"Hmm? Oh right, yeah,\" Alyssa replied, distracted for a moment by his embrace. \"I was just thinking that between me and Jade, we can keep all the girls here supplied with energy, even when I'm actively using powers too. But you also have a vast pool of potential eldritch energy practically begging you to make the most of it, or should I say them.\"\n\n\"The Maliri?\" John asked, gazing into her blue eyes. \"You think I should work with Jade to connect more of them to me?\"\n\n\"That's one option, and I'm sure there's lots of naughty Maliri noblewomen desperately in need of a little positive attitude adjustment,\" the psychic blonde replied with a smirk. She made a point of looking around at her adoptive sisters. \"But you already know of a much better way to really make the most of your connections with a girl and you've already laid the groundwork. There's a particular group of lovely Maliri girls that are very fond of you...\" \n\n\"The assassins and the Young Matriarchs,\" John said quietly. \"You think I should work on my relationships with them?\"\n\n\"They'd absolutely love it and I have a feeling you'd have a good time too,\" Alyssa said with an indulgent smile. \"Also remember that just between the girls in this room, they pool way more energy than over a thousand of Edraele's girls combined. Giving the Maliri some TLC would be fun for all of you and give you access to massive amounts of energy.\"\n\nMention of his Maliri Matriarch made John feel a sharp pang of loss and he glanced at the twins, seeing that they were feeling the same way.\n\n\"As soon as Niskera has finished her transformation, we need to head straight to the rendezvous point,\" John said with conviction. \"I hate the idea of Edraele lying wounded in a cryostasis chamber. We need to get her out of there and healed up as soon as possible!\"\n\n\"She won't remember or feel a thing while she's in stasis,\" Sakura said, her voice comforting. \"Trust me... I should know.\"\n\nHe gave her a look of sympathy and nodded. \"I just really miss not hearing her voice. I've been worrying about whether to ask the Maliri to just sail straight across Terran territory so we can meet quicker and I know she'd have some great advice for me on that.\"\n\n\"I really miss her too,\" Alyssa said softly. \"For what it's worth, I don't think we should risk it. It'll only save us a day or two, but then we'd be meeting up in the middle of Terran territory. I can't imagine having a Maliri warfleet parked in Terran Space would win you any friends in the Admiralty.\"\n\n\"I'd come to pretty much the same conclusion,\" he said, relaxing a little. \"I was also trying to decide whether to still send the Maliri off to protect the Ashanath, or ask them to help the Trankarans instead. I'm leaning towards intervening against the Kirrix, but it's a big decision with serious consequences and I don't want to make it without giving it a lot of thought...\"\n\nCalara leaned into his side and said, \"In my opinion, the most sensible strategic choice would be to ask the Maliri to assist the Trankarans. It's true that the Ashanath are exposed to danger after losing so many ships in the battle with the Drakkar, but the Trankarans are actually fighting off an invasion right now. It's a choice between a potential threat or a very real and dangerous one.\"\n\n\"That's a very good point,\" John replied, giving her a grateful smile. \"We could also send the next Maliri fleet that finishes the refit to protect the Ashanath. That would only leave them exposed for perhaps another two weeks.\"\n\n\"If I was King of the Maliri, that's what I'd do,\" Irillith said, her expression sombre. The teasing twinkle in her violet eyes gave away the fact that she was tormenting him.\n\nChoosing not to rise to the bait, he smiled at her and said, \"I'm sure you'd make a very wise Queen, Princess Irillith.\"\n\nShe looked startled for a moment, then laughed, the lovely carefree sound echoing around the bedroom. She shared a smile with Tashana, her fellow Maliri princess.\n\n\"I think we're about done,\" John said, with more than a hint of eagerness in his voice. \"Did anyone have anything else they wanted to add? Oh, right! You mentioned the shields, Irillith?\"\n\n\"Yes, that's right,\" she said, turning to look at Dana. \"I just wanted to make the point that the shields were extremely effective when we were on the train, where we had a chance to let them recharge. But in the protracted battle along the gallery, they were overwhelmed too quickly, then basically stayed out of action for the rest of the fight. Is there anything you can do to improve the recharge rate or increase the capacity a bit more?\"\n\nThe redhead grimaced and appeared torn with indecision. \"I could do, but there's a few problems. Firstly, I'm not an expert in shield technology, so unless I get some kind of Progenitor innovation out of the blue, I'll have to do some extensive research into possible improvements. Don't get me wrong, I'd really love to do that, but I'm busy with Faye's body at the moment and I've got a few other things on the go too. Secondly, we're already thinking about visiting the Brimorians to get some of their tech. I might just end up wasting a load of time duplicating their research which we end up acquiring a week or two later anyway!\" \n\nJohn considered her reply for a moment. \"Yeah, focus on Faye for now. I think the kind of upgrades Irillith mentioned would be extremely useful, especially improved recharge rates, but it's probably better to get hold of the Brimorian tech first. Then you can spend some time looking into ways of optimising or upgrading their existing technology and make some really big gains in the long term.\"\n\n\"Sounds like a good plan to me,\" Dana said with a grin. \"I'll be able to use any new shield improvements on all our ships as well, not just the Paragon armour. I was going to treat the research into shield enhancements as my one and only priority as soon as we bag some of the Brimorian tech.\"\n\nThere were nodding heads all around the circle, everyone in complete agreement.\n\n\"Anything else?\" John asked, glancing around at the girls.\n\n\"Only that our armour got the crap shot out of it,\" Dana said with a frown. \"That's four female suits and one male that are busted to hell. You or Alyssa need to fix them urgently.\"\n\n\"Let me,\" Alyssa volunteered, giving John a coy smile. \"I think you'll be busy this morning.\"\n\n\"Aren't you planning on joining us?\" he asked the blonde in surprise.\n\nShe shook her head and send in a smoky voice, \"You can finish off what you started with me at lunchtime. I think you should-\"\n\nA yawn behind them made everyone freeze and they all whirled around to look at Jade, who sat up with a radiant smile on her face. The Nymph locked eyes with John and squealed with delight, scampering over the bed to snuggle into him, her loving purrs audible to all.\n\n\"I can't believe you did it, John!\" Jade gasped, looking at him in wonder. \"I love you so much!\"\n\n\"Did what?!\" Dana blurted out, voicing the question on everyone's mind.\n\nThe Nymph bit her lower lip as she giggled with glee and she began to shimmer in a verdant haze. When the green aura faded away, a stunningly beautiful redhead gazed back at Dana. Her full lips formed a perfect sparkling smile, the golden coronas in Jade's sky-blue eyes flaring with her excitement.\n\nJade winked playfully at Dana and asked, \"How awesome was that?\""
    ],
    "authorname": "Tefler",
    "tags": [
        "psychic",
        "alien11111",
        "trankaran",
        "kirrix",
        "cum inflation",
        "swallow",
        "blowjob"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-91"
}